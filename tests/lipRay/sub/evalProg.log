/* ParseTree: After parsing */
  Program @ [evalProg.diderot:2.1-128.0] 
    [
      Type: msh= @ [evalProg.diderot:2.1-3.0] 
        Mesh @ [evalProg.diderot:2.6-10] 
        From File : evalProg.json @ [evalProg.diderot:2.1-3.0] 
      Type: fns= @ [evalProg.diderot:3.1-4.0] 
        FunctionSpace(msh) @ [evalProg.diderot:3.6-26] 
          [ ]
        From File : evalProg.json @ [evalProg.diderot:3.1-4.0] 
      Type: func= @ [evalProg.diderot:4.1-5.0] 
        FemFunction(fns) @ [evalProg.diderot:4.6-22] 
        From File : evalProg.json @ [evalProg.diderot:4.1-5.0] 
      Const: dim= @ [evalProg.diderot:8.1-9.0] 
        Select @ [evalProg.diderot:8.17-24] 
          Var: msh @ [evalProg.diderot:8.17-20] 
          dim
      Input: a @ [evalProg.diderot:10.1-11.0] 
      Input: b= @ [evalProg.diderot:11.1-12.0] 
        Apply @ [evalProg.diderot:11.15-21] 
          Var: fns @ [evalProg.diderot:11.15-18] 
          [
            Var: a @ [evalProg.diderot:11.19-20] 
          ]
      Input: c= @ [evalProg.diderot:12.1-13.0] 
        Apply @ [evalProg.diderot:12.16-23] 
          Var: func @ [evalProg.diderot:12.16-20] 
          [
            Var: b @ [evalProg.diderot:12.21-22] 
          ]
      Input: isoval= @ [evalProg.diderot:16.1-25] 
        Lit: 0.2e0 @ [evalProg.diderot:16.21-24] 
      Input: thick= @ [evalProg.diderot:16.27-17.0] 
        Lit: 0.7e-1 @ [evalProg.diderot:16.46-50] 
      Input: camEye= @ [evalProg.diderot:17.1-36] 
        Cons @ [evalProg.diderot:17.21-35] 
          [
            UnaryOp: unary - @ [evalProg.diderot:17.22-26] 
              Lit: 0.5e0 @ [evalProg.diderot:17.23-26] 
            Lit: 0.5e0 @ [evalProg.diderot:17.27-30] 
            Lit: 0.5e0 @ [evalProg.diderot:17.31-34] 
          ]
      Input: camAt= @ [evalProg.diderot:17.38-71] 
        Cons @ [evalProg.diderot:17.57-70] 
          [
            Lit: 0.5e0 @ [evalProg.diderot:17.58-61] 
            Lit: 0.5e0 @ [evalProg.diderot:17.62-65] 
            Lit: 0.5e0 @ [evalProg.diderot:17.66-69] 
          ]
      Input: camUp= @ [evalProg.diderot:17.74-18.0] 
        Cons @ [evalProg.diderot:17.93-100] 
          [
            Lit: 0 @ [evalProg.diderot:17.94-95] 
            Lit: 0 @ [evalProg.diderot:17.96-97] 
            Lit: 1 @ [evalProg.diderot:17.98-99] 
          ]
      Input: camFOV= @ [evalProg.diderot:18.1-26] 
        Lit: 0.137e2 @ [evalProg.diderot:18.21-25] 
      Input: iresU= @ [evalProg.diderot:18.28-49] 
        Lit: 10 @ [evalProg.diderot:18.46-48] 
      Input: iresV= @ [evalProg.diderot:18.53-19.0] 
        Lit: 10 @ [evalProg.diderot:18.71-73] 
      Input: camNear= @ [evalProg.diderot:19.1-25] 
        UnaryOp: unary - @ [evalProg.diderot:19.22-24] 
          Lit: 2 @ [evalProg.diderot:19.23-24] 
      Input: camFar= @ [evalProg.diderot:19.26-48] 
        Lit: 5 @ [evalProg.diderot:19.46-47] 
      Input: refStep= @ [evalProg.diderot:20.1-26] 
        Lit: 0.1e1 @ [evalProg.diderot:20.22-25] 
      Input: rayStep= @ [evalProg.diderot:20.27-21.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:20.47-51] 
      Input: lightVsp= @ [evalProg.diderot:21.1-39] 
        Cons @ [evalProg.diderot:21.23-38] 
          [
            Lit: 0.e0 @ [evalProg.diderot:21.24-27] 
            Lit: 0.e0 @ [evalProg.diderot:21.29-32] 
            Lit: 0.1e1 @ [evalProg.diderot:21.34-37] 
          ]
      Input: phongKa= @ [evalProg.diderot:22.1-26] 
        Lit: 0.1e0 @ [evalProg.diderot:22.22-25] 
      Input: phongKd= @ [evalProg.diderot:22.27-23.0] 
        Lit: 0.9e0 @ [evalProg.diderot:22.48-51] 
      Input: debug= @ [evalProg.diderot:24.1-25.0] 
        Lit: false @ [evalProg.diderot:24.20-25] 
      Input: debugU= @ [evalProg.diderot:25.1-26.0] 
        Lit: 8 @ [evalProg.diderot:25.20-21] 
      Input: debugV= @ [evalProg.diderot:26.1-27.0] 
        Lit: 2 @ [evalProg.diderot:26.20-21] 
      Input: eps= @ [evalProg.diderot:27.1-28.0] 
        Lit: 0.1e-8 @ [evalProg.diderot:27.18-29] 
      Input: indecies @ [evalProg.diderot:29.1-22] 
      Input: times @ [evalProg.diderot:30.1-31.0] 
      Input: cells @ [evalProg.diderot:31.1-32.0] 
      Var @ [evalProg.diderot:33.1-34.0] 
        Decl: camDist= @ [evalProg.diderot:33.1-34.0] 
          UnaryOp: |()| @ [evalProg.diderot:33.16-32] 
            BinOp: - @ [evalProg.diderot:33.17-31] 
              Var: camAt @ [evalProg.diderot:33.17-22] 
              Var: camEye @ [evalProg.diderot:33.25-31] 
      Var @ [evalProg.diderot:34.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:34.1-37] 
          BinOp: + @ [evalProg.diderot:34.19-36] 
            Var: camNear @ [evalProg.diderot:34.19-26] 
            Var: camDist @ [evalProg.diderot:34.29-36] 
      Var @ [evalProg.diderot:35.1-35] 
        Decl: camFarVsp= @ [evalProg.diderot:35.1-35] 
          BinOp: + @ [evalProg.diderot:35.18-34] 
            Var: camFar @ [evalProg.diderot:35.18-24] 
            Var: camDist @ [evalProg.diderot:35.27-34] 
      Var @ [evalProg.diderot:36.1-39] 
        Decl: camN= @ [evalProg.diderot:36.1-39] 
          Apply @ [evalProg.diderot:36.13-38] 
            Var: normalize @ [evalProg.diderot:36.13-22] 
            [
              BinOp: - @ [evalProg.diderot:36.23-37] 
                Var: camAt @ [evalProg.diderot:36.23-28] 
                Var: camEye @ [evalProg.diderot:36.31-37] 
            ]
      Var @ [evalProg.diderot:37.1-38] 
        Decl: camU= @ [evalProg.diderot:37.1-38] 
          Apply @ [evalProg.diderot:37.13-37] 
            Var: normalize @ [evalProg.diderot:37.13-22] 
            [
              BinOp: × @ [evalProg.diderot:37.23-36] 
                Var: camN @ [evalProg.diderot:37.23-27] 
                Var: camUp @ [evalProg.diderot:37.31-36] 
            ]
      Var @ [evalProg.diderot:38.1-26] 
        Decl: camV= @ [evalProg.diderot:38.1-26] 
          BinOp: × @ [evalProg.diderot:38.13-25] 
            Var: camU @ [evalProg.diderot:38.13-17] 
            Var: camN @ [evalProg.diderot:38.21-25] 
      Var @ [evalProg.diderot:39.1-40.0] 
        Decl: camVmax= @ [evalProg.diderot:39.1-40.0] 
          BinOp: * @ [evalProg.diderot:39.16-42] 
            Apply @ [evalProg.diderot:39.16-34] 
              Var: tan @ [evalProg.diderot:39.16-19] 
              [
                BinOp: / @ [evalProg.diderot:39.20-33] 
                  BinOp: * @ [evalProg.diderot:39.20-29] 
                    Var: camFOV @ [evalProg.diderot:39.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:39.27-29] 
                  Lit: 360 @ [evalProg.diderot:39.30-33] 
              ]
            Var: camDist @ [evalProg.diderot:39.35-42] 
      Var @ [evalProg.diderot:40.1-41.0] 
        Decl: camUmax= @ [evalProg.diderot:40.1-41.0] 
          BinOp: / @ [evalProg.diderot:40.16-35] 
            BinOp: * @ [evalProg.diderot:40.16-29] 
              Var: camVmax @ [evalProg.diderot:40.16-23] 
              Var: iresU @ [evalProg.diderot:40.24-29] 
            Var: iresV @ [evalProg.diderot:40.30-35] 
      Var @ [evalProg.diderot:41.1-42.0] 
        Decl: light= @ [evalProg.diderot:41.1-42.0] 
          BinOp: • @ [evalProg.diderot:41.14-63] 
            Apply @ [evalProg.diderot:41.14-41] 
              Var: transpose @ [evalProg.diderot:41.14-23] 
              [
                Cons @ [evalProg.diderot:41.24-40] 
                  [
                    Var: camU @ [evalProg.diderot:41.25-29] 
                    Var: camV @ [evalProg.diderot:41.30-34] 
                    Var: camN @ [evalProg.diderot:41.35-39] 
                  ]
              ]
            Apply @ [evalProg.diderot:41.44-63] 
              Var: normalize @ [evalProg.diderot:41.44-53] 
              [
                Var: lightVsp @ [evalProg.diderot:41.54-62] 
              ]
      Var @ [evalProg.diderot:42.1-43.0] 
        Decl: rayVec= @ [evalProg.diderot:42.1-43.0] 
          Var: camN @ [evalProg.diderot:42.15-19] 
      Func: sign @ [evalProg.diderot:43.1-48.1] 
        Int @ [evalProg.diderot:43.10-14] 
        [
          Param: x @ [evalProg.diderot:43.19-25] 
            Tensor @ [evalProg.diderot:43.19-24] 
              [ ]
        ]
        Stmt @ [evalProg.diderot:43.1-48.1] 
          IfThenElse @ [evalProg.diderot:44.3-47.0] 
            BinOp: > @ [evalProg.diderot:44.7-14] 
              Var: x @ [evalProg.diderot:44.7-8] 
              Lit: 0.e0 @ [evalProg.diderot:44.11-14] 
            Return @ [evalProg.diderot:44.17-27] 
              Lit: 1 @ [evalProg.diderot:44.24-25] 
            IfThenElse @ [evalProg.diderot:45.8-47.0] 
              BinOp: < @ [evalProg.diderot:45.12-19] 
                Var: x @ [evalProg.diderot:45.12-13] 
                Lit: 0.e0 @ [evalProg.diderot:45.16-19] 
              Return @ [evalProg.diderot:45.21-32] 
                UnaryOp: unary - @ [evalProg.diderot:45.28-30] 
                  Lit: 1 @ [evalProg.diderot:45.29-30] 
              Return @ [evalProg.diderot:46.9-19] 
                Lit: 0 @ [evalProg.diderot:46.16-17] 
    ]
    Strand: ray @ [evalProg.diderot:48.1-127.3] 
      [
        Param: ui @ [evalProg.diderot:48.12-18] 
          Int @ [evalProg.diderot:48.12-16] 
        Param: vi @ [evalProg.diderot:48.20-26] 
          Int @ [evalProg.diderot:48.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:49.3-60] 
        VarDcl @ [evalProg.diderot:50.3-51.0] 
        VarDcl @ [evalProg.diderot:51.3-52.0] 
        VarDcl @ [evalProg.diderot:52.3-53.0] 
        VarDcl @ [evalProg.diderot:53.3-42] 
        VarDcl @ [evalProg.diderot:54.3-54] 
        VarDcl @ [evalProg.diderot:55.3-56.0] 
        VarDcl @ [evalProg.diderot:56.3-57.0] 
        VarDcl @ [evalProg.diderot:57.3-58.0] 
        VarDcl @ [evalProg.diderot:58.3-59.0] 
        VarDcl @ [evalProg.diderot:59.3-60.0] 
        VarDcl @ [evalProg.diderot:60.3-61.0] 
        VarDcl @ [evalProg.diderot:61.3-62.0] 
        VarDcl: output @ [evalProg.diderot:64.3-65.0] 
        VarDcl: output @ [evalProg.diderot:65.3-66.0] 
        VarDcl: output @ [evalProg.diderot:66.3-67.0] 
        VarDcl @ [evalProg.diderot:67.3-68.0] 
        VarDcl @ [evalProg.diderot:68.3-69.0] 
      ]
      [
        Method: Start @ [evalProg.diderot:69.3-75.3] 
          Block @ [evalProg.diderot:69.8-74.4] 
            [
              IfThen @ [evalProg.diderot:70.5-71.5] 
                AndAlso @ [evalProg.diderot:70.9-52] 
                  Var: debug @ [evalProg.diderot:70.9-14] 
                  OrElse @ [evalProg.diderot:70.19-51] 
                    BinOp: != @ [evalProg.diderot:70.20-32] 
                      Var: ui @ [evalProg.diderot:70.20-22] 
                      Var: debugU @ [evalProg.diderot:70.26-32] 
                    BinOp: != @ [evalProg.diderot:70.38-50] 
                      Var: vi @ [evalProg.diderot:70.38-40] 
                      Var: debugV @ [evalProg.diderot:70.44-50] 
                Stabilize @ [evalProg.diderot:70.54-64] 
              IfThen @ [evalProg.diderot:71.5-72.5] 
                BinOp: == @ [evalProg.diderot:71.8-16] 
                  Var: len @ [evalProg.diderot:71.8-11] 
                  Lit: 0 @ [evalProg.diderot:71.15-16] 
                Stabilize @ [evalProg.diderot:71.18-28] 
              Assign: cc= @ [evalProg.diderot:72.5-73.0] 
                Subscript @ [evalProg.diderot:72.10-29] 
                  Select @ [evalProg.diderot:72.10-29] 
                    Var: a @ [evalProg.diderot:72.10-11] 
                    cells
                  [
                    Subscript @ [evalProg.diderot:72.18-28] 
                      Var: cells @ [evalProg.diderot:72.18-23] 
                      [
                        Var: idx @ [evalProg.diderot:72.24-27] 
                      ]
                  ]
              Assign: fc= @ [evalProg.diderot:73.5-74.0] 
                Apply @ [evalProg.diderot:73.10-24] 
                  Select @ [evalProg.diderot:73.10-24] 
                    Var: c @ [evalProg.diderot:73.10-11] 
                    funcCell
                  [
                    Var: cc @ [evalProg.diderot:73.21-23] 
                  ]
            ]
        Method: Update @ [evalProg.diderot:75.3-127.1] 
          Block @ [evalProg.diderot:75.10-126.0] 
            [
              IfThen @ [evalProg.diderot:77.5-78.5] 
                BinOp: < @ [evalProg.diderot:77.8-16] 
                  Var: len @ [evalProg.diderot:77.8-11] 
                  Lit: 1 @ [evalProg.diderot:77.15-16] 
                Stabilize @ [evalProg.diderot:77.18-28] 
              Decl @ [evalProg.diderot:75.10-126.0] 
                Decl: rayStart= @ [evalProg.diderot:78.5-79.0] 
                  BinOp: + @ [evalProg.diderot:78.21-41] 
                    Var: rayOrig @ [evalProg.diderot:78.21-28] 
                    BinOp: * @ [evalProg.diderot:78.31-41] 
                      Var: rayVec @ [evalProg.diderot:78.31-37] 
                      Var: s @ [evalProg.diderot:78.40-41] 
              Decl @ [evalProg.diderot:75.10-126.0] 
                Decl: project= @ [evalProg.diderot:79.5-80.0] 
                  Cons @ [evalProg.diderot:79.20-46] 
                    [
                      Subscript @ [evalProg.diderot:79.21-32] 
                        Var: rayStart @ [evalProg.diderot:79.21-29] 
                        [
                          Lit: 0 @ [evalProg.diderot:79.30-31] 
                        ]
                      Subscript @ [evalProg.diderot:79.34-45] 
                        Var: rayStart @ [evalProg.diderot:79.34-42] 
                        [
                          Lit: 1 @ [evalProg.diderot:79.43-44] 
                        ]
                    ]
              Decl @ [evalProg.diderot:75.10-126.0] 
                Decl: f0= @ [evalProg.diderot:80.5-81.0] 
                  BinOp: - @ [evalProg.diderot:80.15-75] 
                    Apply @ [evalProg.diderot:80.15-61] 
                      BinOp: ∘ @ [evalProg.diderot:80.16-51] 
                        Select @ [evalProg.diderot:80.16-27] 
                          Var: fc @ [evalProg.diderot:80.16-18] 
                          refField
                        Select @ [evalProg.diderot:80.32-51] 
                          Var: cc @ [evalProg.diderot:80.32-34] 
                          inverseTransform
                      [
                        Var: project @ [evalProg.diderot:80.53-60] 
                      ]
                    Subscript @ [evalProg.diderot:80.64-75] 
                      Var: rayStart @ [evalProg.diderot:80.64-72] 
                      [
                        Lit: 2 @ [evalProg.diderot:80.73-74] 
                      ]
              Decl @ [evalProg.diderot:75.10-126.0] 
                Decl: gradEps= @ [evalProg.diderot:81.5-82.0] 
                  Apply @ [evalProg.diderot:81.20-131] 
                    Var: min @ [evalProg.diderot:81.20-23] 
                    [
                      BinOp: / @ [evalProg.diderot:81.24-123] 
                        UnaryOp: |()| @ [evalProg.diderot:81.25-115] 
                          BinOp: - @ [evalProg.diderot:81.26-114] 
                            BinOp: • @ [evalProg.diderot:81.26-103] 
                              Cons @ [evalProg.diderot:81.26-48] 
                                [
                                  Subscript @ [evalProg.diderot:81.27-36] 
                                    Var: rayVec @ [evalProg.diderot:81.27-33] 
                                    [
                                      Lit: 0 @ [evalProg.diderot:81.34-35] 
                                    ]
                                  Subscript @ [evalProg.diderot:81.38-47] 
                                    Var: rayVec @ [evalProg.diderot:81.38-44] 
                                    [
                                      Lit: 1 @ [evalProg.diderot:81.45-46] 
                                    ]
                                ]
                              Apply @ [evalProg.diderot:81.53-102] 
                                UnaryOp: ∇ @ [evalProg.diderot:81.53-93] 
                                  BinOp: ∘ @ [evalProg.diderot:81.57-92] 
                                    Select @ [evalProg.diderot:81.57-68] 
                                      Var: fc @ [evalProg.diderot:81.57-59] 
                                      refField
                                    Select @ [evalProg.diderot:81.73-92] 
                                      Var: cc @ [evalProg.diderot:81.73-75] 
                                      inverseTransform
                                [
                                  Var: project @ [evalProg.diderot:81.94-101] 
                                ]
                            Subscript @ [evalProg.diderot:81.105-114] 
                              Var: rayVec @ [evalProg.diderot:81.105-111] 
                              [
                                Lit: 2 @ [evalProg.diderot:81.112-113] 
                              ]
                        Select @ [evalProg.diderot:81.118-122] 
                          Var: cc @ [evalProg.diderot:81.118-120] 
                          G
                      BinOp: - @ [evalProg.diderot:81.125-130] 
                        Var: e @ [evalProg.diderot:81.125-126] 
                        Var: s @ [evalProg.diderot:81.129-130] 
                    ]
              Print @ [evalProg.diderot:82.5-83.0] 
                [
                  Lit: "hmmmm:" @ [evalProg.diderot:82.11-19] 
                  Apply @ [evalProg.diderot:82.20-71] 
                    UnaryOp: ∇ @ [evalProg.diderot:82.21-61] 
                      BinOp: ∘ @ [evalProg.diderot:82.25-60] 
                        Select @ [evalProg.diderot:82.25-36] 
                          Var: fc @ [evalProg.diderot:82.25-27] 
                          refField
                        Select @ [evalProg.diderot:82.41-60] 
                          Var: cc @ [evalProg.diderot:82.41-43] 
                          inverseTransform
                    [
                      Var: project @ [evalProg.diderot:82.63-70] 
                    ]
                  Lit: "\n" @ [evalProg.diderot:82.73-77] 
                ]
              Print @ [evalProg.diderot:83.5-84.0] 
                [
                  Lit: "fc dofs:" @ [evalProg.diderot:83.11-21] 
                  Select @ [evalProg.diderot:83.23-30] 
                    Var: fc @ [evalProg.diderot:83.23-25] 
                    dofs
                  Lit: "\n" @ [evalProg.diderot:83.32-36] 
                ]
              Decl @ [evalProg.diderot:75.10-126.0] 
                Decl: f1= @ [evalProg.diderot:84.5-85.0] 
                  BinOp: - @ [evalProg.diderot:84.15-130] 
                    BinOp: - @ [evalProg.diderot:84.15-111] 
                      Apply @ [evalProg.diderot:84.15-96] 
                        BinOp: ∘ @ [evalProg.diderot:84.16-51] 
                          Select @ [evalProg.diderot:84.16-27] 
                            Var: fc @ [evalProg.diderot:84.16-18] 
                            refField
                          Select @ [evalProg.diderot:84.32-51] 
                            Var: cc @ [evalProg.diderot:84.32-34] 
                            inverseTransform
                        [
                          BinOp: + @ [evalProg.diderot:84.53-95] 
                            Var: project @ [evalProg.diderot:84.53-60] 
                            BinOp: * @ [evalProg.diderot:84.63-95] 
                              Var: gradEps @ [evalProg.diderot:84.63-70] 
                              Cons @ [evalProg.diderot:84.73-95] 
                                [
                                  Subscript @ [evalProg.diderot:84.74-83] 
                                    Var: rayVec @ [evalProg.diderot:84.74-80] 
                                    [
                                      Lit: 0 @ [evalProg.diderot:84.81-82] 
                                    ]
                                  Subscript @ [evalProg.diderot:84.85-94] 
                                    Var: rayVec @ [evalProg.diderot:84.85-91] 
                                    [
                                      Lit: 1 @ [evalProg.diderot:84.92-93] 
                                    ]
                                ]
                        ]
                      Subscript @ [evalProg.diderot:84.99-110] 
                        Var: rayStart @ [evalProg.diderot:84.99-107] 
                        [
                          Lit: 2 @ [evalProg.diderot:84.108-109] 
                        ]
                    BinOp: * @ [evalProg.diderot:84.113-130] 
                      Var: gradEps @ [evalProg.diderot:84.113-120] 
                      Subscript @ [evalProg.diderot:84.121-130] 
                        Var: rayVec @ [evalProg.diderot:84.121-127] 
                        [
                          Lit: 2 @ [evalProg.diderot:84.128-129] 
                        ]
              Print @ [evalProg.diderot:85.5-86.0] 
                [
                  Lit: "=========================\n" @ [evalProg.diderot:85.11-40] 
                ]
              Print @ [evalProg.diderot:86.5-87.0] 
                [
                  Lit: "Ui/Vi:" @ [evalProg.diderot:86.11-19] 
                  Var: ui @ [evalProg.diderot:86.21-23] 
                  Lit: "/" @ [evalProg.diderot:86.25-28] 
                  Var: vi @ [evalProg.diderot:86.30-32] 
                  Lit: "\n" @ [evalProg.diderot:86.34-38] 
                ]
              Print @ [evalProg.diderot:87.5-88.0] 
                [
                  Lit: "Cell:" @ [evalProg.diderot:87.11-18] 
                  Var: cc @ [evalProg.diderot:87.19-21] 
                  Lit: "\n" @ [evalProg.diderot:87.22-26] 
                ]
              Print @ [evalProg.diderot:88.5-89.0] 
                [
                  Lit: "hess:" @ [evalProg.diderot:88.11-18] 
                  Apply @ [evalProg.diderot:88.19-74] 
                    UnaryOp: ∇⊗ @ [evalProg.diderot:88.19-65] 
                      UnaryOp: ∇ @ [evalProg.diderot:88.25-65] 
                        BinOp: ∘ @ [evalProg.diderot:88.29-64] 
                          Select @ [evalProg.diderot:88.29-40] 
                            Var: fc @ [evalProg.diderot:88.29-31] 
                            refField
                          Select @ [evalProg.diderot:88.45-64] 
                            Var: cc @ [evalProg.diderot:88.45-47] 
                            inverseTransform
                    [
                      Var: project @ [evalProg.diderot:88.66-73] 
                    ]
                  Lit: "\n" @ [evalProg.diderot:88.75-79] 
                  Lit: "norm:" @ [evalProg.diderot:88.81-88] 
                  UnaryOp: |()| @ [evalProg.diderot:88.90-147] 
                    Apply @ [evalProg.diderot:88.91-146] 
                      UnaryOp: ∇⊗ @ [evalProg.diderot:88.91-137] 
                        UnaryOp: ∇ @ [evalProg.diderot:88.97-137] 
                          BinOp: ∘ @ [evalProg.diderot:88.101-136] 
                            Select @ [evalProg.diderot:88.101-112] 
                              Var: fc @ [evalProg.diderot:88.101-103] 
                              refField
                            Select @ [evalProg.diderot:88.117-136] 
                              Var: cc @ [evalProg.diderot:88.117-119] 
                              inverseTransform
                      [
                        Var: project @ [evalProg.diderot:88.138-145] 
                      ]
                  Lit: "\n" @ [evalProg.diderot:88.149-153] 
                ]
              Print @ [evalProg.diderot:89.5-90.0] 
                [
                  Lit: "Grad:" @ [evalProg.diderot:89.11-18] 
                  Apply @ [evalProg.diderot:89.20-69] 
                    UnaryOp: ∇ @ [evalProg.diderot:89.20-60] 
                      BinOp: ∘ @ [evalProg.diderot:89.24-59] 
                        Select @ [evalProg.diderot:89.24-35] 
                          Var: fc @ [evalProg.diderot:89.24-26] 
                          refField
                        Select @ [evalProg.diderot:89.40-59] 
                          Var: cc @ [evalProg.diderot:89.40-42] 
                          inverseTransform
                    [
                      Var: project @ [evalProg.diderot:89.61-68] 
                    ]
                  Lit: "\n" @ [evalProg.diderot:89.71-75] 
                ]
              Print @ [evalProg.diderot:90.5-91.0] 
                [
                  Lit: "vals:" @ [evalProg.diderot:90.11-18] 
                  Cons @ [evalProg.diderot:90.20-27] 
                    [
                      Var: f0 @ [evalProg.diderot:90.21-23] 
                      Var: f1 @ [evalProg.diderot:90.24-26] 
                    ]
                  Lit: "\n" @ [evalProg.diderot:90.29-33] 
                ]
              IfThenElse @ [evalProg.diderot:91.5-113.0] 
                UnaryOp: ! @ [evalProg.diderot:91.9-35] 
                  BinOp: > @ [evalProg.diderot:91.11-33] 
                    BinOp: * @ [evalProg.diderot:91.11-31] 
                      Apply @ [evalProg.diderot:91.11-19] 
                        Var: sign @ [evalProg.diderot:91.11-15] 
                        [
                          Var: f0 @ [evalProg.diderot:91.16-18] 
                        ]
                      Apply @ [evalProg.diderot:91.22-30] 
                        Var: sign @ [evalProg.diderot:91.22-26] 
                        [
                          Var: f1 @ [evalProg.diderot:91.27-29] 
                        ]
                    Lit: 0 @ [evalProg.diderot:91.32-33] 
                Block @ [evalProg.diderot:91.36-107.6] 
                  [
                    IfThen @ [evalProg.diderot:93.7-96.7] 
                      BinOp: == @ [evalProg.diderot:93.11-34] 
                        BinOp: * @ [evalProg.diderot:93.11-31] 
                          Apply @ [evalProg.diderot:93.11-19] 
                            Var: sign @ [evalProg.diderot:93.11-15] 
                            [
                              Var: f0 @ [evalProg.diderot:93.16-18] 
                            ]
                          Apply @ [evalProg.diderot:93.22-30] 
                            Var: sign @ [evalProg.diderot:93.22-26] 
                            [
                              Var: f1 @ [evalProg.diderot:93.27-29] 
                            ]
                        Lit: 0 @ [evalProg.diderot:93.33-34] 
                      Print @ [evalProg.diderot:94.2-95.0] 
                        [
                          Lit: "Warn: 0 update\n" @ [evalProg.diderot:94.8-26] 
                        ]
                    Print @ [evalProg.diderot:96.7-97.0] 
                      [
                        Lit: "update with interval:" @ [evalProg.diderot:96.13-36] 
                        Var: gradEps @ [evalProg.diderot:96.38-45] 
                        Lit: "\n" @ [evalProg.diderot:96.47-51] 
                      ]
                    Print @ [evalProg.diderot:97.7-98.0] 
                      [
                        Lit: "Pixel Ui/Vi:" @ [evalProg.diderot:97.13-27] 
                        Var: ui @ [evalProg.diderot:97.29-31] 
                        Lit: "/" @ [evalProg.diderot:97.33-36] 
                        Var: vi @ [evalProg.diderot:97.38-40] 
                        Lit: "\n" @ [evalProg.diderot:97.42-46] 
                      ]
                    Print @ [evalProg.diderot:98.7-99.0] 
                      [
                        Lit: "Count:" @ [evalProg.diderot:98.13-21] 
                        Var: count @ [evalProg.diderot:98.23-28] 
                        Lit: "\n" @ [evalProg.diderot:98.30-34] 
                      ]
                    Assign: count+= @ [evalProg.diderot:99.7-100.0] 
                      Lit: 1 @ [evalProg.diderot:99.14-15] 
                    Assign: totalCount+= @ [evalProg.diderot:100.7-101.0] 
                      Lit: 1 @ [evalProg.diderot:100.19-20] 
                    Print @ [evalProg.diderot:101.7-102.0] 
                      [
                        Lit: "Vals I:" @ [evalProg.diderot:101.13-22] 
                        Cons @ [evalProg.diderot:101.24-32] 
                          [
                            Var: f0 @ [evalProg.diderot:101.25-27] 
                            Var: f1 @ [evalProg.diderot:101.29-31] 
                          ]
                        Lit: "\n" @ [evalProg.diderot:101.33-37] 
                      ]
                    Print @ [evalProg.diderot:102.7-103.0] 
                      [
                        Lit: "New interval:" @ [evalProg.diderot:102.13-28] 
                        Cons @ [evalProg.diderot:102.30-46] 
                          [
                            Var: s @ [evalProg.diderot:102.31-32] 
                            BinOp: + @ [evalProg.diderot:102.34-45] 
                              Var: s @ [evalProg.diderot:102.34-35] 
                              Var: gradEps @ [evalProg.diderot:102.38-45] 
                          ]
                        Lit: "\n" @ [evalProg.diderot:102.47-51] 
                      ]
                    Assign: intervals= @ [evalProg.diderot:103.7-104.0] 
                      BinOp: @ @ [evalProg.diderot:103.17-43] 
                        Var: intervals @ [evalProg.diderot:103.17-26] 
                        Cons @ [evalProg.diderot:103.27-43] 
                          [
                            Var: s @ [evalProg.diderot:103.28-29] 
                            BinOp: + @ [evalProg.diderot:103.31-42] 
                              Var: s @ [evalProg.diderot:103.31-32] 
                              Var: gradEps @ [evalProg.diderot:103.35-42] 
                          ]
                    Assign: sints= @ [evalProg.diderot:104.7-105.0] 
                      BinOp: @ @ [evalProg.diderot:104.15-75] 
                        Var: sints @ [evalProg.diderot:104.15-20] 
                        Cons @ [evalProg.diderot:104.21-75] 
                          [
                            BinOp: + @ [evalProg.diderot:104.22-41] 
                              Var: rayOrig @ [evalProg.diderot:104.22-29] 
                              BinOp: * @ [evalProg.diderot:104.32-41] 
                                Var: rayVec @ [evalProg.diderot:104.32-38] 
                                Var: s @ [evalProg.diderot:104.40-41] 
                            BinOp: + @ [evalProg.diderot:104.43-74] 
                              Var: rayOrig @ [evalProg.diderot:104.43-50] 
                              BinOp: * @ [evalProg.diderot:104.53-74] 
                                Var: rayVec @ [evalProg.diderot:104.53-59] 
                                BinOp: + @ [evalProg.diderot:104.63-73] 
                                  Var: s @ [evalProg.diderot:104.63-64] 
                                  Var: gradEps @ [evalProg.diderot:104.66-73] 
                          ]
                    Assign: newCells= @ [evalProg.diderot:105.7-106.0] 
                      BinOp: @ @ [evalProg.diderot:105.16-27] 
                        Var: newCells @ [evalProg.diderot:105.16-24] 
                        Var: cc @ [evalProg.diderot:105.25-27] 
                    Assign: s+= @ [evalProg.diderot:106.7-107.0] 
                      Var: gradEps @ [evalProg.diderot:106.10-17] 
                  ]
                Block @ [evalProg.diderot:107.12-113.0] 
                  [
                    Decl @ [evalProg.diderot:107.12-113.0] 
                      Decl: epsUpdate= @ [evalProg.diderot:108.7-109.0] 
                        Apply @ [evalProg.diderot:108.24-50] 
                          Var: max @ [evalProg.diderot:108.24-27] 
                          [
                            Var: gradEps @ [evalProg.diderot:108.28-35] 
                            BinOp: / @ [evalProg.diderot:108.36-49] 
                              UnaryOp: |()| @ [evalProg.diderot:108.36-40] 
                                Var: f0 @ [evalProg.diderot:108.37-39] 
                              BinOp: * @ [evalProg.diderot:108.42-48] 
                                Lit: 2 @ [evalProg.diderot:108.42-43] 
                                Select @ [evalProg.diderot:108.44-48] 
                                  Var: cc @ [evalProg.diderot:108.44-46] 
                                  L
                          ]
                    Print @ [evalProg.diderot:109.7-110.0] 
                      [
                        Lit: "update L:" @ [evalProg.diderot:109.13-24] 
                        Var: epsUpdate @ [evalProg.diderot:109.26-35] 
                        Lit: "\n" @ [evalProg.diderot:109.37-41] 
                      ]
                    Print @ [evalProg.diderot:110.7-111.0] 
                      [
                        Lit: "update G:" @ [evalProg.diderot:110.13-24] 
                        Var: gradEps @ [evalProg.diderot:110.26-33] 
                        Lit: "\n" @ [evalProg.diderot:110.35-39] 
                      ]
                    Assign: s+= @ [evalProg.diderot:111.7-112.0] 
                      Var: epsUpdate @ [evalProg.diderot:111.10-19] 
                  ]
              IfThen @ [evalProg.diderot:114.5-125.3] 
                BinOp: >= @ [evalProg.diderot:114.9-15] 
                  Var: s @ [evalProg.diderot:114.9-10] 
                  Var: e @ [evalProg.diderot:114.14-15] 
                Block @ [evalProg.diderot:114.16-125.0] 
                  [
                    Assign: itter+= @ [evalProg.diderot:115.7-116.0] 
                      Lit: 1 @ [evalProg.diderot:115.14-15] 
                    IfThenElse @ [evalProg.diderot:117.7-124.0] 
                      BinOp: >= @ [evalProg.diderot:117.10-22] 
                        Var: itter @ [evalProg.diderot:117.10-15] 
                        Var: len @ [evalProg.diderot:117.19-22] 
                      Block @ [evalProg.diderot:117.23-205] 
                        [
                          Print @ [evalProg.diderot:117.25-63] 
                            [
                              Lit: "TotalCount:" @ [evalProg.diderot:117.31-44] 
                              Var: totalCount @ [evalProg.diderot:117.45-55] 
                              Lit: "\n" @ [evalProg.diderot:117.57-61] 
                            ]
                          Print @ [evalProg.diderot:117.63-98] 
                            [
                              Lit: "Intervals:" @ [evalProg.diderot:117.69-81] 
                              Var: intervals @ [evalProg.diderot:117.82-91] 
                              Lit: "\n" @ [evalProg.diderot:117.92-96] 
                            ]
                          Print @ [evalProg.diderot:117.98-129] 
                            [
                              Lit: "Cells:" @ [evalProg.diderot:117.104-112] 
                              Var: newCells @ [evalProg.diderot:117.114-122] 
                              Lit: "\n" @ [evalProg.diderot:117.123-127] 
                            ]
                          Print @ [evalProg.diderot:117.130-193] 
                            [
                              Var: ui @ [evalProg.diderot:117.136-138] 
                              Lit: ";" @ [evalProg.diderot:117.139-142] 
                              Var: vi @ [evalProg.diderot:117.143-145] 
                              Lit: "++++++++++++++End Pixel++++++++++++++++++\n" @ [evalProg.diderot:117.146-191] 
                            ]
                          Stabilize @ [evalProg.diderot:117.194-204] 
                        ]
                      Block @ [evalProg.diderot:117.211-124.0] 
                        [
                          Print @ [evalProg.diderot:118.2-119.0] 
                            [
                              Lit: "++++++++++++++New Cell++++++++++++++++++\n" @ [evalProg.diderot:118.8-52] 
                            ]
                          Assign: count= @ [evalProg.diderot:119.2-120.0] 
                            Lit: 0 @ [evalProg.diderot:119.8-9] 
                          Assign: interval= @ [evalProg.diderot:120.2-33] 
                            Subscript @ [evalProg.diderot:120.13-32] 
                              Var: times @ [evalProg.diderot:120.13-18] 
                              [
                                BinOp: + @ [evalProg.diderot:120.19-31] 
                                  Var: offset @ [evalProg.diderot:120.19-25] 
                                  Var: itter @ [evalProg.diderot:120.26-31] 
                              ]
                          Assign: cc= @ [evalProg.diderot:120.34-121.0] 
                            Subscript @ [evalProg.diderot:120.39-69] 
                              Select @ [evalProg.diderot:120.39-69] 
                                Var: a @ [evalProg.diderot:120.39-40] 
                                cells
                              [
                                Subscript @ [evalProg.diderot:120.47-68] 
                                  Var: cells @ [evalProg.diderot:120.47-52] 
                                  [
                                    BinOp: + @ [evalProg.diderot:120.53-67] 
                                      Var: offset @ [evalProg.diderot:120.53-59] 
                                      Var: itter @ [evalProg.diderot:120.62-67] 
                                  ]
                              ]
                          Assign: s= @ [evalProg.diderot:121.2-18] 
                            Subscript @ [evalProg.diderot:121.6-17] 
                              Var: interval @ [evalProg.diderot:121.6-14] 
                              [
                                Lit: 0 @ [evalProg.diderot:121.15-16] 
                              ]
                          Assign: e= @ [evalProg.diderot:121.19-122.0] 
                            Subscript @ [evalProg.diderot:121.23-34] 
                              Var: interval @ [evalProg.diderot:121.23-31] 
                              [
                                Lit: 1 @ [evalProg.diderot:121.32-33] 
                              ]
                          Assign: fc= @ [evalProg.diderot:122.2-123.0] 
                            Apply @ [evalProg.diderot:122.7-21] 
                              Select @ [evalProg.diderot:122.7-21] 
                                Var: c @ [evalProg.diderot:122.7-8] 
                                funcCell
                              [
                                Var: cc @ [evalProg.diderot:122.18-20] 
                              ]
                        ]
                  ]
            ]
      ]
    Grid @ [evalProg.diderot:127.3-128.0] 
      Comprehension @ [evalProg.diderot:127.16-65] 
        Apply @ [evalProg.diderot:127.17-27] 
          Var: ray @ [evalProg.diderot:127.17-20] 
          [
            Var: ui @ [evalProg.diderot:127.21-23] 
            Var: vi @ [evalProg.diderot:127.24-26] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:127.30-46] 
            Range @ [evalProg.diderot:127.36-46] 
              Lit: 0 @ [evalProg.diderot:127.36-37] 
              BinOp: - @ [evalProg.diderot:127.39-46] 
                Var: iresU @ [evalProg.diderot:127.39-44] 
                Lit: 1 @ [evalProg.diderot:127.45-46] 
          Iterator: ui @ [evalProg.diderot:127.48-64] 
            Range @ [evalProg.diderot:127.54-64] 
              Lit: 0 @ [evalProg.diderot:127.54-55] 
              BinOp: - @ [evalProg.diderot:127.57-64] 
                Var: iresV @ [evalProg.diderot:127.57-62] 
                Lit: 1 @ [evalProg.diderot:127.63-64] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStartMethod,HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 2;
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input FemType: Space with type var:msh b = loadFem(Space);
input FemType: FemFunc with type var:fns c = loadFem(FemFunc);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [-0.5e0, 0.5e0, 0.5e0];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 10;
input int iresV = 10;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int debugU = 8;
input int debugV = 2;
input real eps = 0.1e-8;
input int[] indecies;
input vec2[] times;
input int[] cells;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec2 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec2, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    cellInt = cellItter;
    A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
      xn = -<$[2]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
          }
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[2,2,2,2] msh_transform_3 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2,2]> (∇⊗<#; %2; $[2,2]; %2> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )))), pos);
  }
function tensor[2,2,2] msh_transform_2 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2]> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, ))), pos);
  }
function mat2 msh_transform_1 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )), pos);
  }
function vec2 msh_transform_0 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2]> (femField(mesh,cell,field(2)[2], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec2 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
    xn = -<$[2]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec2 (pos, msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec2 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec2 refPos, vec2 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec2,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), +<$[2]> ($sub<vec2; %3> ({[0.1e1, 0.e0], [0.e0, 0.e0], [0.e0, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), *<$[2]> ($sub<vec2; %3> ({[-0.1e1, 0.1e1], [0.e0, 0.1e1], [0.1e1, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), / (-<$[]> ($sub<real; %2> ({+<$[2]> (*<$[2]> (time[0], dPos), refPos)[0], +<$[2]> (*<$[2]> (time[0], dPos), refPos)[1]}, $sub<int; %3> ({1, 1, 0}, $r2i (time[1]))), $sub<real; %2> ($sub<real[2]; %3> ({{0.1e1, 0.e0}, {0.e0, 0.e0}, {0.e0, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))), $sub<real; %2> ($sub<real[2]; %3> ({{-0.1e1, 0.1e1}, {0.e0, 0.1e1}, {0.1e1, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))))), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec2 (mesh, +<$[2]> (*<$[2]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 6), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec2 refPos, vec2 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec2 refPos, vec2 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if != (i, 0) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    else {
      faceTime = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if != (i, 1) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if != (i, 2) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:msh domain (FemType: Space with type var:msh arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:msh space (FemType: FemFunc with type var:fns arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func funcCell (FemType: FemFunc with type var:fns arg0, FemType: MeshCell with type var:msh arg1)
{
  return loadFem(FuncCell);
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
vec3 rayVec = camN;
function int sign (real x)
{
  if > (x, 0.e0) {
    return 1;
    }
  else {
    if < (x, 0.e0) {
      return unary - (1);
      }
    else {
      return 0;
      }
    }
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, UV);
  int offset = $dynsub<int> (indecies, + (* (ui, iresV), vi));
  int len = $dynsub<int> (indecies, + (+ (* (iresU, iresV), * (ui, iresV)), vi));
  int itter = 0;
  int idx = + (offset, itter);
  vec2 interval = $dynsub<vec2> (times, idx);
  real s = interval[0];
  real e = interval[1];
  FemType: MeshCell with type var:msh cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), 0);
  FemType: FuncCell with type var:func fc = funcCell (c, cc);
  output vec2[] intervals = (vec2[]){};
  output tensor[2,3][] sints = (tensor[2,3][]){};
  output FemType: MeshCell with type var:msh[] newCells = (FemType: MeshCell with type var:msh[]){};
  int count = 0;
  int totalCount = 0;
  start {
    if (debug && (!= (ui, debugU) || != (vi, debugV)))
      stabilize;
      if == (len, 0)
      stabilize;
      cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), $dynsub<int> (cells, idx));
    fc = funcCell (c, cc);
    }
  update {
    if < (len, 1)
      stabilize;
      vec3 rayStart = +<$[3]> (rayOrig, *<$[3]> (rayVec, s));
    vec2 project = [rayStart[0], rayStart[1]];
    real f0 = -<$[]> (@<#; %2; $[]> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)), project), rayStart[2]);
    real gradEps = min (/ (|()|<$[]> (-<$[]> (•<$[2]; $[2]; $[]> ([rayVec[0], rayVec[1]], @<#; %2; $[2]> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse))), project)), rayVec[2])), extractFemItem(extractFem(Mesh,cc ), extractFemItem(cc, int, CellIndex(Mesh)) : int, real, CellData(G)(Mesh))), -<$[]> (e, s));
    print ("hmmmm:", @<#; %2; $[2]> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse))), project), "\n");
    print ("fc dofs:", extractFemItem(extractFem(FemFunc,fc ), extractFemItem(extractFem(Space,extractFem(FemFunc,fc ) ), extractFemItem(fc, int, CellIndex(FuncCell)) : int, int[6], ExtractIndices(Space)) : int[6], tensor[6], ExtractDofsSeq(FemFunc)), "\n");
    real f1 = -<$[]> (-<$[]> (@<#; %2; $[]> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)), +<$[2]> (project, *<$[2]> (gradEps, [rayVec[0], rayVec[1]]))), rayStart[2]), * (gradEps, rayVec[2]));
    print ("=========================\n");
    print ("Ui/Vi:", ui, "/", vi, "\n");
    print ("Cell:", cc, "\n");
    print ("hess:", @<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)))), project), "\n", "norm:", |()|<$[2,2]> (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)))), project)), "\n");
    print ("Grad:", @<#; %2; $[2]> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse))), project), "\n");
    print ("vals:", [f0, f1], "\n");
    if ! (> (* (sign (f0), sign (f1)), 0)) {
      if == (* (sign (f0), sign (f1)), 0)
        print ("Warn: 0 update\n");
        print ("update with interval:", gradEps, "\n");
      print ("Pixel Ui/Vi:", ui, "/", vi, "\n");
      print ("Count:", count, "\n");
      count = + (count, 1);
      totalCount = + (totalCount, 1);
      print ("Vals I:", [f0, f1], "\n");
      print ("New interval:", [s, +<$[]> (s, gradEps)], "\n");
      intervals = @<vec2> (intervals, [s, +<$[]> (s, gradEps)]);
      sints = @<tensor[2,3]> (sints, [+<$[3]> (rayOrig, *<$[3]> (rayVec, s)), +<$[3]> (rayOrig, *<$[3]> (rayVec, +<$[]> (s, gradEps)))]);
      newCells = @<FemType: MeshCell with type var:msh> (newCells, cc);
      s = +<$[]> (s, gradEps);
      }
    else {
      real epsUpdate = max (gradEps, / (|()|<$[]> (f0), * ((real)2, extractFemItem(extractFem(Mesh,cc ), extractFemItem(cc, int, CellIndex(Mesh)) : int, real, CellData(L)(Mesh)))));
      print ("update L:", epsUpdate, "\n");
      print ("update G:", gradEps, "\n");
      s = +<$[]> (s, epsUpdate);
      }
    if >= (s, e) {
      itter = + (itter, 1);
      if >= (itter, len) {
        print ("TotalCount:", totalCount, "\n");
        print ("Intervals:", intervals, "\n");
        print ("Cells:", newCells, "\n");
        print (ui, ";", vi, "++++++++++++++End Pixel++++++++++++++++++\n");
        stabilize;
        }
      else {
        print ("++++++++++++++New Cell++++++++++++++++++\n");
        count = 0;
        interval = $dynsub<vec2> (times, + (offset, itter));
        cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), $dynsub<int> (cells, + (offset, itter)));
        s = interval[0];
        e = interval[1];
        fc = funcCell (c, cc);
        }
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresU, 1))) {
      foreach (int ui in $range (0, - (iresV, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global real camNearVsp07FC;
global real camFarVsp07FD;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 light0810;
global vec3 rayVec0811;
function bool#0 !=0476 (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t0479 = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047A = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047B = prim !=0086 (_t0479, _t047A);
  return _t047B;
}
function bool#0 ==047C (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t047D = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047F = prim ==0082 (_t047D, _t047E);
  return _t047F;
}
function Femdata: MeshPos#0 findPos0480 (Femdata: Mesh mesh0481, vec2 pos0482)
{
  real _t0483 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0484 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0485 = [_t0483, _t0484];
  newtonInt0486 = 0;
  cellInt0487 = extractFemItem(StartCell(Mesh), int, mesh0481);
  int _t0488 = extractFemItem(NumCell(Mesh), int, mesh0481);
  int _t0489 = 1;
  numCell048A = prim -0024 (_t0488, _t0489);
  yayCells048B = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0481, pos0482 : vec2);
  foreach cellItter048C in yayCells048B {
    cellInt0487 = cellItter048C;
    field(2)[2] _t048D = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
    field(2)[2,2] _t048E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t048D);
    field(2)[2,2] _t048F = prim inv015B<#∞; %2> (_t048E);
    real _t0490 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0491 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0492 = [_t0490, _t0491];
    A0493 = prim @00A5<#∞; %2; $[2,2]> (_t048F, _t0492);
    int _t0494 = 0;
    int _t0495 = 16;
    int[] _t0496 = prim $range01C3 (_t0494, _t0495);
    foreach newtonItter04B9 in _t0496 {
      field(2)[2] _t0497 = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
      field(2)[2] _t0498 = prim -002E<#∞; %2; $[2]> (_t0497, pos0482);
      field(2)[2] _t0499 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0493, _t0498);
      delta049A = prim @00A5<#∞; %2; $[2]> (_t0499, xn0485);
      xn0485 = prim -0026<$[2]> (xn0485, delta049A);
      real _t049B = 0.1e-7;
      real _t049C = 0.1e-7;
      real _t049D = prim *0034 (_t049B, _t049C);
      real _t049E = prim •00CE<$[2]; $[2]; $[]> (delta049A, delta049A);
      bool _t049F = prim >=007E (_t049D, _t049E);
      if _t049F {
        real _t04A0 = 0.1e1;
        real _t04A1 = 0.1e-8;
        real _t04A2 = prim +0017<$[]> (_t04A0, _t04A1);
        real _t04A3 = 0.1e1;
        real _t04A4 = 0.1e1;
        vec2 _t04A5 = [_t04A3, _t04A4];
        real _t04A6 = prim •00CE<$[2]; $[2]; $[]> (_t04A5, xn0485);
        bool _t04A7 = prim >0080 (_t04A2, _t04A6);
        real _t04A8 = 0.1e-8;
        real _t04A9 = 0.1e-8;
        vec2 _t04AA = [_t04A8, _t04A9];
        vec2 _t04AB = prim +0017<$[2]> (_t04AA, xn0485);
        real _t04AC = _t04AB[0];
        real _t04AD = -0.e0;
        bool _t04AE = prim >0080 (_t04AC, _t04AD);
        real _t04AF = 0.1e-8;
        real _t04B0 = 0.1e-8;
        vec2 _t04B1 = [_t04AF, _t04B0];
        vec2 _t04B2 = prim +0017<$[2]> (_t04B1, xn0485);
        real _t04B3 = _t04B2[1];
        real _t04B4 = -0.e0;
        bool _t04B5 = prim >0080 (_t04B3, _t04B4);
        bool _t04B6 = prim $and01C4 (_t04AE, _t04B5);
        bool _t04B7 = prim $and01C4 (_t04A7, _t04B6);
        if _t04B7 {
          Femdata: MeshPos _t04B8 = extractFemItemN((mesh0481, cellInt0487, xn0485, pos0482),AllBuild(MeshPos),);
          return _t04B8;
        }
      }
    }
  }
  string _t04BA = "Bad end 2";
  string _t04BB = "\n";
  print (_t04BA, _t04BB);
  Femdata: MeshPos _t04BC = extractFemItemN((mesh0481),InvalidBuild(MeshPos),);
  return _t04BC;
}
function Femdata: RefCell#0 refcell04BD (Femdata: Mesh arg004BE)
{
  Femdata: RefCell _t04BF = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004BE);
  return _t04BF;
}
function Femdata: MeshCell[]#0 cells04C0 (Femdata: Mesh arg004C1)
{
  Femdata: MeshCell[] _t04C2 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004C1);
  return _t04C2;
}
function Femdata: MeshCell[]#0 cells04C3 (Femdata: Mesh arg004C1)
{
  int _t04C4 = 0;
  int _t04C5 = extractFemItem(NumCell(Mesh), int, arg004C1);
  int[] _t04C6 = prim $range01C3 (_t04C4, _t04C5);
  Femdata: MeshCell[] accum04C9 = {};
  foreach i04C7 in _t04C6 {
    Femdata: MeshCell _t04C8 = loadFem(MeshCell, arg004C1, i04C7);
    accum04C9 = prim @0010<Femdata: MeshCell> (accum04C9, _t04C8);
  }
  return accum04C9;
}
function int#0 numCell04CA (Femdata: Mesh arg004BE)
{
  int _t04CB = extractFemItem(NumCell(Mesh), int, arg004BE);
  return _t04CB;
}
function tensor[2,2,2,2]#0 msh_transform_304CC (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D0 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D0);
  field(2)[2,2,2] _t04D2 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D1);
  field(2)[2,2,2,2] _t04D3 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04D2);
  tensor[2,2,2,2] _t04D4 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04D3, pos04CD);
  return _t04D4;
}
function tensor[2,2,2]#0 msh_transform_204D5 (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D6 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D6);
  field(2)[2,2,2] _t04D8 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D7);
  tensor[2,2,2] _t04D9 = prim @00A5<#∞; %2; $[2,2,2]> (_t04D8, pos04CD);
  return _t04D9;
}
function tensor[2,2]#0 msh_transform_104DA (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DB = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DB);
  tensor[2,2] _t04DD = prim @00A5<#∞; %2; $[2,2]> (_t04DC, pos04CD);
  return _t04DD;
}
function vec2#2 msh_transform_004DE (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DF = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  vec2 _t04E0 = prim @00A5<#∞; %2; $[2]> (_t04DF, pos04CD);
  return _t04E0;
}
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0517 (Femdata: MeshPos pos0518)
{
  bool _t0519 = extractFemItem(WorldTest(MeshPos), bool, pos0518);
  if _t0519 {
    vec2 _t051A = extractFemItem(RefPos(MeshPos), vec2, pos0518);
    int _t051B = extractFemItem(CellIndex(MeshPos), int, pos0518);
    Femdata: Mesh _t051C = extractFem(pos0518, Mesh);
    vec2 _t051D = func msh_transform_004DE (_t051A, _t051B, _t051C);
    Femdata: MeshPos _t051E = extractFemItemN((pos0518, _t051D),NewWorld(MeshPos),);
    return _t051E;
  } else {
    return pos0518;
  }
}
function vec2#0 worldPos051F (Femdata: MeshPos pos0518)
{
  vec2 _t0520 = extractFemItem(RefPos(MeshPos), vec2, pos0518);
  int _t0521 = extractFemItem(CellIndex(MeshPos), int, pos0518);
  Femdata: Mesh _t0522 = extractFem(pos0518, Mesh);
  vec2 _t0523 = func msh_transform_004DE (_t0520, _t0521, _t0522);
  return _t0523;
}
function Femdata: MeshPos#0 $exitPos0524 (Femdata: Mesh mesh0525, int cellId0526, vec2 refPos0527, vec2 dPos0528, real[2] time0529)
{
  int _t052A = -1;
  real _t052B = time0529[1];
  int _t052C = prim $r2i01B7 (_t052B);
  int[2] _t052E = func nextCell4052D (_t052C, cellId0526, mesh0525);
  int _t052F = 0;
  int _t0530 = prim $sub01C0<int; %2> (_t052E, _t052F);
  bool _t0531 = prim !=0086 (_t052A, _t0530);
  if _t0531 {
    real _t0532 = time0529[1];
    int _t0533 = prim $r2i01B7 (_t0532);
    int[2] _t0534 = func nextCell4052D (_t0533, cellId0526, mesh0525);
    int _t0535 = 0;
    int _t0536 = prim $sub01C0<int; %2> (_t0534, _t0535);
    real _t0537 = 0.1e1;
    real _t0538 = 0.e0;
    vec2 _t0539 = [_t0537, _t0538];
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec2 _t053C = [_t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    vec2 _t053F = [_t053D, _t053E];
    vec2[3] _t0540 = {_t0539, _t053C, _t053F};
    real _t0541 = time0529[1];
    int _t0542 = prim $r2i01B7 (_t0541);
    int[2] _t0543 = func nextCell4052D (_t0542, cellId0526, mesh0525);
    int _t0544 = 1;
    int _t0545 = prim $sub01C0<int; %2> (_t0543, _t0544);
    vec2 _t0546 = prim $sub01C0<vec2; %3> (_t0540, _t0545);
    real _t0547 = -0.1e1;
    real _t0548 = 0.1e1;
    vec2 _t0549 = [_t0547, _t0548];
    real _t054A = 0.e0;
    real _t054B = 0.1e1;
    vec2 _t054C = [_t054A, _t054B];
    real _t054D = 0.1e1;
    real _t054E = 0.e0;
    vec2 _t054F = [_t054D, _t054E];
    vec2[3] _t0550 = {_t0549, _t054C, _t054F};
    real _t0551 = time0529[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int[2] _t0553 = func nextCell4052D (_t0552, cellId0526, mesh0525);
    int _t0554 = 1;
    int _t0555 = prim $sub01C0<int; %2> (_t0553, _t0554);
    vec2 _t0556 = prim $sub01C0<vec2; %3> (_t0550, _t0555);
    real _t0557 = time0529[0];
    vec2 _t0558 = prim *0036<$[2]> (_t0557, dPos0528);
    vec2 _t0559 = prim +0017<$[2]> (_t0558, refPos0527);
    real _t055A = _t0559[0];
    real _t055B = time0529[0];
    vec2 _t055C = prim *0036<$[2]> (_t055B, dPos0528);
    vec2 _t055D = prim +0017<$[2]> (_t055C, refPos0527);
    real _t055E = _t055D[1];
    real[2] _t055F = {_t055A, _t055E};
    int _t0560 = 1;
    int _t0561 = 1;
    int _t0562 = 0;
    int[3] _t0563 = {_t0560, _t0561, _t0562};
    real _t0564 = time0529[1];
    int _t0565 = prim $r2i01B7 (_t0564);
    int _t0566 = prim $sub01C0<int; %3> (_t0563, _t0565);
    real _t0567 = prim $sub01C0<real; %2> (_t055F, _t0566);
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real[2] _t056A = {_t0568, _t0569};
    real _t056B = 0.e0;
    real _t056C = 0.e0;
    real[2] _t056D = {_t056B, _t056C};
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real[2] _t0570 = {_t056E, _t056F};
    real[2][3] _t0571 = {_t056A, _t056D, _t0570};
    real _t0572 = time0529[1];
    int _t0573 = prim $r2i01B7 (_t0572);
    real[2] _t0574 = prim $sub01C0<real[2]; %3> (_t0571, _t0573);
    int _t0575 = 1;
    int _t0576 = 1;
    int _t0577 = 0;
    int[3] _t0578 = {_t0575, _t0576, _t0577};
    real _t0579 = time0529[1];
    int _t057A = prim $r2i01B7 (_t0579);
    int _t057B = prim $sub01C0<int; %3> (_t0578, _t057A);
    real _t057C = prim $sub01C0<real; %2> (_t0574, _t057B);
    real _t057D = prim -0026<$[]> (_t0567, _t057C);
    real _t057E = -0.1e1;
    real _t057F = 0.1e1;
    real[2] _t0580 = {_t057E, _t057F};
    real _t0581 = 0.e0;
    real _t0582 = 0.1e1;
    real[2] _t0583 = {_t0581, _t0582};
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real[2] _t0586 = {_t0584, _t0585};
    real[2][3] _t0587 = {_t0580, _t0583, _t0586};
    real _t0588 = time0529[1];
    int _t0589 = prim $r2i01B7 (_t0588);
    real[2] _t058A = prim $sub01C0<real[2]; %3> (_t0587, _t0589);
    int _t058B = 1;
    int _t058C = 1;
    int _t058D = 0;
    int[3] _t058E = {_t058B, _t058C, _t058D};
    real _t058F = time0529[1];
    int _t0590 = prim $r2i01B7 (_t058F);
    int _t0591 = prim $sub01C0<int; %3> (_t058E, _t0590);
    real _t0592 = prim $sub01C0<real; %2> (_t058A, _t0591);
    real _t0593 = prim /0055 (_t057D, _t0592);
    vec2 _t0594 = prim *0038<$[2]> (_t0556, _t0593);
    vec2 _t0595 = prim +0017<$[2]> (_t0546, _t0594);
    real _t0596 = time0529[1];
    int _t0597 = prim $r2i01B7 (_t0596);
    int[2] _t0598 = func nextCell4052D (_t0597, cellId0526, mesh0525);
    int _t0599 = 1;
    int _t059A = prim $sub01C0<int; %2> (_t0598, _t0599);
    Femdata: MeshPos _t059B = extractFemItemN((mesh0525, _t0536, _t0595, _t059A),RefBuild(Mesh),);
    return _t059B;
  } else {
    real _t059C = time0529[0];
    vec2 _t059D = prim *0036<$[2]> (_t059C, dPos0528);
    vec2 _t059E = prim +0017<$[2]> (_t059D, refPos0527);
    Femdata: MeshPos _t059F = extractFemItemN((mesh0525, _t059E),InvalidBuildBoundary(MeshPos),);
    return _t059F;
  }
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
function vec2#0 _enter05A9 (vec2 refPos05AA, vec2 dPos05AB)
{
  real time05AC = +inf;
  int face05AD = -1;
  real faceTime05AE = -inf;
  real _t05AF = 0.1e1;
  real _t05B0 = 0.e0;
  vec2 _t05B1 = [_t05AF, _t05B0];
  vec2 _t05B2 = prim -0026<$[2]> (_t05B1, refPos05AA);
  real _t05B3 = -0.1e1;
  real _t05B4 = 0.1e1;
  vec2 _t05B5 = [_t05B3, _t05B4];
  real _t05B6 = -0.1e1;
  real _t05B7 = 0.1e1;
  vec2 _t05B8 = [_t05B6, _t05B7];
  real _t05B9 = prim ×00BD (dPos05AB, _t05B8);
  vec2 _t05BA = prim /0057<$[2]> (_t05B5, _t05B9);
  real _t05BB = prim ×00BD (_t05B2, _t05BA);
  real _t05BC = -0.1e-15;
  bool _t05BD = prim >=007E (_t05BB, _t05BC);
  real _t05BE = 0.1e1;
  real _t05BF = 0.e0;
  vec2 _t05C0 = [_t05BE, _t05BF];
  vec2 _t05C1 = prim -0026<$[2]> (_t05C0, refPos05AA);
  real _t05C2 = -0.1e1;
  real _t05C3 = 0.1e1;
  vec2 _t05C4 = [_t05C2, _t05C3];
  real _t05C5 = -0.1e1;
  real _t05C6 = 0.1e1;
  vec2 _t05C7 = [_t05C5, _t05C6];
  real _t05C8 = prim ×00BD (dPos05AB, _t05C7);
  vec2 _t05C9 = prim /0057<$[2]> (_t05C4, _t05C8);
  real _t05CA = prim ×00BD (_t05C1, _t05C9);
  bool _t05CB = prim >0080 (time05AC, _t05CA);
  real _t05CC = -0.1e1;
  real _t05CD = 0.1e1;
  vec2 _t05CE = [_t05CC, _t05CD];
  real _t05CF = prim ×00BD (dPos05AB, _t05CE);
  real _t05D0 = prim |()|00B5<$[]> (_t05CF);
  real _t05D1 = 0.1e-20;
  bool _t05D2 = prim >=007E (_t05D0, _t05D1);
  bool _t05D3 = prim $and01C4 (_t05CB, _t05D2);
  bool _t05D4 = prim $and01C4 (_t05BD, _t05D3);
  if _t05D4 {
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.1e-8;
    real _t05D7 = prim +0017<$[]> (_t05D5, _t05D6);
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.1e1;
    vec2 _t05DA = [_t05D8, _t05D9];
    real _t05DB = 0.1e1;
    real _t05DC = 0.e0;
    vec2 _t05DD = [_t05DB, _t05DC];
    vec2 _t05DE = prim -0026<$[2]> (_t05DD, refPos05AA);
    real _t05DF = -0.1e1;
    real _t05E0 = 0.1e1;
    vec2 _t05E1 = [_t05DF, _t05E0];
    real _t05E2 = -0.1e1;
    real _t05E3 = 0.1e1;
    vec2 _t05E4 = [_t05E2, _t05E3];
    real _t05E5 = prim ×00BD (dPos05AB, _t05E4);
    vec2 _t05E6 = prim /0057<$[2]> (_t05E1, _t05E5);
    real _t05E7 = prim ×00BD (_t05DE, _t05E6);
    vec2 _t05E8 = prim *0038<$[2]> (dPos05AB, _t05E7);
    vec2 _t05E9 = prim +0017<$[2]> (refPos05AA, _t05E8);
    real _t05EA = prim •00CE<$[2]; $[2]; $[]> (_t05DA, _t05E9);
    bool _t05EB = prim >0080 (_t05D7, _t05EA);
    real _t05EC = 0.1e-8;
    real _t05ED = 0.1e-8;
    vec2 _t05EE = [_t05EC, _t05ED];
    real _t05EF = 0.1e1;
    real _t05F0 = 0.e0;
    vec2 _t05F1 = [_t05EF, _t05F0];
    vec2 _t05F2 = prim -0026<$[2]> (_t05F1, refPos05AA);
    real _t05F3 = -0.1e1;
    real _t05F4 = 0.1e1;
    vec2 _t05F5 = [_t05F3, _t05F4];
    real _t05F6 = -0.1e1;
    real _t05F7 = 0.1e1;
    vec2 _t05F8 = [_t05F6, _t05F7];
    real _t05F9 = prim ×00BD (dPos05AB, _t05F8);
    vec2 _t05FA = prim /0057<$[2]> (_t05F5, _t05F9);
    real _t05FB = prim ×00BD (_t05F2, _t05FA);
    vec2 _t05FC = prim *0038<$[2]> (dPos05AB, _t05FB);
    vec2 _t05FD = prim +0017<$[2]> (refPos05AA, _t05FC);
    vec2 _t05FE = prim +0017<$[2]> (_t05EE, _t05FD);
    real _t05FF = _t05FE[0];
    real _t0600 = -0.e0;
    bool _t0601 = prim >0080 (_t05FF, _t0600);
    real _t0602 = 0.1e-8;
    real _t0603 = 0.1e-8;
    vec2 _t0604 = [_t0602, _t0603];
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec2 _t0607 = [_t0605, _t0606];
    vec2 _t0608 = prim -0026<$[2]> (_t0607, refPos05AA);
    real _t0609 = -0.1e1;
    real _t060A = 0.1e1;
    vec2 _t060B = [_t0609, _t060A];
    real _t060C = -0.1e1;
    real _t060D = 0.1e1;
    vec2 _t060E = [_t060C, _t060D];
    real _t060F = prim ×00BD (dPos05AB, _t060E);
    vec2 _t0610 = prim /0057<$[2]> (_t060B, _t060F);
    real _t0611 = prim ×00BD (_t0608, _t0610);
    vec2 _t0612 = prim *0038<$[2]> (dPos05AB, _t0611);
    vec2 _t0613 = prim +0017<$[2]> (refPos05AA, _t0612);
    vec2 _t0614 = prim +0017<$[2]> (_t0604, _t0613);
    real _t0615 = _t0614[1];
    real _t0616 = -0.e0;
    bool _t0617 = prim >0080 (_t0615, _t0616);
    bool _t0618 = prim $and01C4 (_t0601, _t0617);
    bool _t0619 = prim $and01C4 (_t05EB, _t0618);
    if _t0619 {
      real _t061A = 0.1e1;
      real _t061B = 0.e0;
      vec2 _t061C = [_t061A, _t061B];
      vec2 _t061D = prim -0026<$[2]> (_t061C, refPos05AA);
      real _t061E = -0.1e1;
      real _t061F = 0.1e1;
      vec2 _t0620 = [_t061E, _t061F];
      real _t0621 = -0.1e1;
      real _t0622 = 0.1e1;
      vec2 _t0623 = [_t0621, _t0622];
      real _t0624 = prim ×00BD (dPos05AB, _t0623);
      vec2 _t0625 = prim /0057<$[2]> (_t0620, _t0624);
      time05AC = prim ×00BD (_t061D, _t0625);
      face05AD = 0;
    }
  }
  real _t0626 = 0.e0;
  real _t0627 = 0.e0;
  vec2 _t0628 = [_t0626, _t0627];
  vec2 _t0629 = prim -0026<$[2]> (_t0628, refPos05AA);
  real _t062A = 0.e0;
  real _t062B = 0.1e1;
  vec2 _t062C = [_t062A, _t062B];
  real _t062D = 0.e0;
  real _t062E = 0.1e1;
  vec2 _t062F = [_t062D, _t062E];
  real _t0630 = prim ×00BD (dPos05AB, _t062F);
  vec2 _t0631 = prim /0057<$[2]> (_t062C, _t0630);
  real _t0632 = prim ×00BD (_t0629, _t0631);
  real _t0633 = -0.1e-15;
  bool _t0634 = prim >=007E (_t0632, _t0633);
  real _t0635 = 0.e0;
  real _t0636 = 0.e0;
  vec2 _t0637 = [_t0635, _t0636];
  vec2 _t0638 = prim -0026<$[2]> (_t0637, refPos05AA);
  real _t0639 = 0.e0;
  real _t063A = 0.1e1;
  vec2 _t063B = [_t0639, _t063A];
  real _t063C = 0.e0;
  real _t063D = 0.1e1;
  vec2 _t063E = [_t063C, _t063D];
  real _t063F = prim ×00BD (dPos05AB, _t063E);
  vec2 _t0640 = prim /0057<$[2]> (_t063B, _t063F);
  real _t0641 = prim ×00BD (_t0638, _t0640);
  bool _t0642 = prim >0080 (time05AC, _t0641);
  real _t0643 = 0.e0;
  real _t0644 = 0.1e1;
  vec2 _t0645 = [_t0643, _t0644];
  real _t0646 = prim ×00BD (dPos05AB, _t0645);
  real _t0647 = prim |()|00B5<$[]> (_t0646);
  real _t0648 = 0.1e-20;
  bool _t0649 = prim >=007E (_t0647, _t0648);
  bool _t064A = prim $and01C4 (_t0642, _t0649);
  bool _t064B = prim $and01C4 (_t0634, _t064A);
  if _t064B {
    real _t064C = 0.1e1;
    real _t064D = 0.1e-8;
    real _t064E = prim +0017<$[]> (_t064C, _t064D);
    real _t064F = 0.1e1;
    real _t0650 = 0.1e1;
    vec2 _t0651 = [_t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = 0.e0;
    vec2 _t0654 = [_t0652, _t0653];
    vec2 _t0655 = prim -0026<$[2]> (_t0654, refPos05AA);
    real _t0656 = 0.e0;
    real _t0657 = 0.1e1;
    vec2 _t0658 = [_t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec2 _t065B = [_t0659, _t065A];
    real _t065C = prim ×00BD (dPos05AB, _t065B);
    vec2 _t065D = prim /0057<$[2]> (_t0658, _t065C);
    real _t065E = prim ×00BD (_t0655, _t065D);
    vec2 _t065F = prim *0038<$[2]> (dPos05AB, _t065E);
    vec2 _t0660 = prim +0017<$[2]> (refPos05AA, _t065F);
    real _t0661 = prim •00CE<$[2]; $[2]; $[]> (_t0651, _t0660);
    bool _t0662 = prim >0080 (_t064E, _t0661);
    real _t0663 = 0.1e-8;
    real _t0664 = 0.1e-8;
    vec2 _t0665 = [_t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec2 _t0668 = [_t0666, _t0667];
    vec2 _t0669 = prim -0026<$[2]> (_t0668, refPos05AA);
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    vec2 _t066C = [_t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec2 _t066F = [_t066D, _t066E];
    real _t0670 = prim ×00BD (dPos05AB, _t066F);
    vec2 _t0671 = prim /0057<$[2]> (_t066C, _t0670);
    real _t0672 = prim ×00BD (_t0669, _t0671);
    vec2 _t0673 = prim *0038<$[2]> (dPos05AB, _t0672);
    vec2 _t0674 = prim +0017<$[2]> (refPos05AA, _t0673);
    vec2 _t0675 = prim +0017<$[2]> (_t0665, _t0674);
    real _t0676 = _t0675[0];
    real _t0677 = -0.e0;
    bool _t0678 = prim >0080 (_t0676, _t0677);
    real _t0679 = 0.1e-8;
    real _t067A = 0.1e-8;
    vec2 _t067B = [_t0679, _t067A];
    real _t067C = 0.e0;
    real _t067D = 0.e0;
    vec2 _t067E = [_t067C, _t067D];
    vec2 _t067F = prim -0026<$[2]> (_t067E, refPos05AA);
    real _t0680 = 0.e0;
    real _t0681 = 0.1e1;
    vec2 _t0682 = [_t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    vec2 _t0685 = [_t0683, _t0684];
    real _t0686 = prim ×00BD (dPos05AB, _t0685);
    vec2 _t0687 = prim /0057<$[2]> (_t0682, _t0686);
    real _t0688 = prim ×00BD (_t067F, _t0687);
    vec2 _t0689 = prim *0038<$[2]> (dPos05AB, _t0688);
    vec2 _t068A = prim +0017<$[2]> (refPos05AA, _t0689);
    vec2 _t068B = prim +0017<$[2]> (_t067B, _t068A);
    real _t068C = _t068B[1];
    real _t068D = -0.e0;
    bool _t068E = prim >0080 (_t068C, _t068D);
    bool _t068F = prim $and01C4 (_t0678, _t068E);
    bool _t0690 = prim $and01C4 (_t0662, _t068F);
    if _t0690 {
      real _t0691 = 0.e0;
      real _t0692 = 0.e0;
      vec2 _t0693 = [_t0691, _t0692];
      vec2 _t0694 = prim -0026<$[2]> (_t0693, refPos05AA);
      real _t0695 = 0.e0;
      real _t0696 = 0.1e1;
      vec2 _t0697 = [_t0695, _t0696];
      real _t0698 = 0.e0;
      real _t0699 = 0.1e1;
      vec2 _t069A = [_t0698, _t0699];
      real _t069B = prim ×00BD (dPos05AB, _t069A);
      vec2 _t069C = prim /0057<$[2]> (_t0697, _t069B);
      time05AC = prim ×00BD (_t0694, _t069C);
      face05AD = 1;
    }
  }
  real _t069D = 0.e0;
  real _t069E = 0.e0;
  vec2 _t069F = [_t069D, _t069E];
  vec2 _t06A0 = prim -0026<$[2]> (_t069F, refPos05AA);
  real _t06A1 = 0.1e1;
  real _t06A2 = 0.e0;
  vec2 _t06A3 = [_t06A1, _t06A2];
  real _t06A4 = 0.1e1;
  real _t06A5 = 0.e0;
  vec2 _t06A6 = [_t06A4, _t06A5];
  real _t06A7 = prim ×00BD (dPos05AB, _t06A6);
  vec2 _t06A8 = prim /0057<$[2]> (_t06A3, _t06A7);
  real _t06A9 = prim ×00BD (_t06A0, _t06A8);
  real _t06AA = -0.1e-15;
  bool _t06AB = prim >=007E (_t06A9, _t06AA);
  real _t06AC = 0.e0;
  real _t06AD = 0.e0;
  vec2 _t06AE = [_t06AC, _t06AD];
  vec2 _t06AF = prim -0026<$[2]> (_t06AE, refPos05AA);
  real _t06B0 = 0.1e1;
  real _t06B1 = 0.e0;
  vec2 _t06B2 = [_t06B0, _t06B1];
  real _t06B3 = 0.1e1;
  real _t06B4 = 0.e0;
  vec2 _t06B5 = [_t06B3, _t06B4];
  real _t06B6 = prim ×00BD (dPos05AB, _t06B5);
  vec2 _t06B7 = prim /0057<$[2]> (_t06B2, _t06B6);
  real _t06B8 = prim ×00BD (_t06AF, _t06B7);
  bool _t06B9 = prim >0080 (time05AC, _t06B8);
  real _t06BA = 0.1e1;
  real _t06BB = 0.e0;
  vec2 _t06BC = [_t06BA, _t06BB];
  real _t06BD = prim ×00BD (dPos05AB, _t06BC);
  real _t06BE = prim |()|00B5<$[]> (_t06BD);
  real _t06BF = 0.1e-20;
  bool _t06C0 = prim >=007E (_t06BE, _t06BF);
  bool _t06C1 = prim $and01C4 (_t06B9, _t06C0);
  bool _t06C2 = prim $and01C4 (_t06AB, _t06C1);
  if _t06C2 {
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.1e-8;
    real _t06C5 = prim +0017<$[]> (_t06C3, _t06C4);
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.1e1;
    vec2 _t06C8 = [_t06C6, _t06C7];
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    vec2 _t06CB = [_t06C9, _t06CA];
    vec2 _t06CC = prim -0026<$[2]> (_t06CB, refPos05AA);
    real _t06CD = 0.1e1;
    real _t06CE = 0.e0;
    vec2 _t06CF = [_t06CD, _t06CE];
    real _t06D0 = 0.1e1;
    real _t06D1 = 0.e0;
    vec2 _t06D2 = [_t06D0, _t06D1];
    real _t06D3 = prim ×00BD (dPos05AB, _t06D2);
    vec2 _t06D4 = prim /0057<$[2]> (_t06CF, _t06D3);
    real _t06D5 = prim ×00BD (_t06CC, _t06D4);
    vec2 _t06D6 = prim *0038<$[2]> (dPos05AB, _t06D5);
    vec2 _t06D7 = prim +0017<$[2]> (refPos05AA, _t06D6);
    real _t06D8 = prim •00CE<$[2]; $[2]; $[]> (_t06C8, _t06D7);
    bool _t06D9 = prim >0080 (_t06C5, _t06D8);
    real _t06DA = 0.1e-8;
    real _t06DB = 0.1e-8;
    vec2 _t06DC = [_t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec2 _t06DF = [_t06DD, _t06DE];
    vec2 _t06E0 = prim -0026<$[2]> (_t06DF, refPos05AA);
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    vec2 _t06E3 = [_t06E1, _t06E2];
    real _t06E4 = 0.1e1;
    real _t06E5 = 0.e0;
    vec2 _t06E6 = [_t06E4, _t06E5];
    real _t06E7 = prim ×00BD (dPos05AB, _t06E6);
    vec2 _t06E8 = prim /0057<$[2]> (_t06E3, _t06E7);
    real _t06E9 = prim ×00BD (_t06E0, _t06E8);
    vec2 _t06EA = prim *0038<$[2]> (dPos05AB, _t06E9);
    vec2 _t06EB = prim +0017<$[2]> (refPos05AA, _t06EA);
    vec2 _t06EC = prim +0017<$[2]> (_t06DC, _t06EB);
    real _t06ED = _t06EC[0];
    real _t06EE = -0.e0;
    bool _t06EF = prim >0080 (_t06ED, _t06EE);
    real _t06F0 = 0.1e-8;
    real _t06F1 = 0.1e-8;
    vec2 _t06F2 = [_t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec2 _t06F5 = [_t06F3, _t06F4];
    vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos05AA);
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec2 _t06F9 = [_t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    vec2 _t06FC = [_t06FA, _t06FB];
    real _t06FD = prim ×00BD (dPos05AB, _t06FC);
    vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
    real _t06FF = prim ×00BD (_t06F6, _t06FE);
    vec2 _t0700 = prim *0038<$[2]> (dPos05AB, _t06FF);
    vec2 _t0701 = prim +0017<$[2]> (refPos05AA, _t0700);
    vec2 _t0702 = prim +0017<$[2]> (_t06F2, _t0701);
    real _t0703 = _t0702[1];
    real _t0704 = -0.e0;
    bool _t0705 = prim >0080 (_t0703, _t0704);
    bool _t0706 = prim $and01C4 (_t06EF, _t0705);
    bool _t0707 = prim $and01C4 (_t06D9, _t0706);
    if _t0707 {
      real _t0708 = 0.e0;
      real _t0709 = 0.e0;
      vec2 _t070A = [_t0708, _t0709];
      vec2 _t070B = prim -0026<$[2]> (_t070A, refPos05AA);
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      real _t070F = 0.1e1;
      real _t0710 = 0.e0;
      vec2 _t0711 = [_t070F, _t0710];
      real _t0712 = prim ×00BD (dPos05AB, _t0711);
      vec2 _t0713 = prim /0057<$[2]> (_t070E, _t0712);
      time05AC = prim ×00BD (_t070B, _t0713);
      face05AD = 2;
    }
  }
  int _t0714 = -1;
  bool _t0715 = prim !=0086 (face05AD, _t0714);
  if _t0715 {
    real _t0716 = 0.e0;
    real _t0717 = prim max0125 (time05AC, _t0716);
    real _t0718 = (real)face05AD;
    vec2 _t0719 = [_t0717, _t0718];
    return _t0719;
  } else {
    real _t071A = -0.1e1;
    real _t071B = -0.1e1;
    vec2 _t071C = [_t071A, _t071B];
    return _t071C;
  }
}
function vec2#0 _exit071D (vec2 refPos05AA, vec2 dPos05AB, int i071E)
{
  real time071F = +inf;
  int face0720 = -1;
  real faceTime0721 = -inf;
  real _t0722 = 0.1e1;
  real _t0723 = 0.e0;
  vec2 _t0724 = [_t0722, _t0723];
  vec2 _t0725 = prim -0026<$[2]> (_t0724, refPos05AA);
  real _t0726 = -0.1e1;
  real _t0727 = 0.1e1;
  vec2 _t0728 = [_t0726, _t0727];
  real _t0729 = -0.1e1;
  real _t072A = 0.1e1;
  vec2 _t072B = [_t0729, _t072A];
  real _t072C = prim ×00BD (dPos05AB, _t072B);
  vec2 _t072D = prim /0057<$[2]> (_t0728, _t072C);
  real _t072E = prim ×00BD (_t0725, _t072D);
  real _t072F = -0.1e-15;
  bool _t0730 = prim >=007E (_t072E, _t072F);
  real _t0731 = 0.1e1;
  real _t0732 = 0.e0;
  vec2 _t0733 = [_t0731, _t0732];
  vec2 _t0734 = prim -0026<$[2]> (_t0733, refPos05AA);
  real _t0735 = -0.1e1;
  real _t0736 = 0.1e1;
  vec2 _t0737 = [_t0735, _t0736];
  real _t0738 = -0.1e1;
  real _t0739 = 0.1e1;
  vec2 _t073A = [_t0738, _t0739];
  real _t073B = prim ×00BD (dPos05AB, _t073A);
  vec2 _t073C = prim /0057<$[2]> (_t0737, _t073B);
  real _t073D = prim ×00BD (_t0734, _t073C);
  bool _t073E = prim >0080 (time071F, _t073D);
  real _t073F = -0.1e1;
  real _t0740 = 0.1e1;
  vec2 _t0741 = [_t073F, _t0740];
  real _t0742 = prim ×00BD (dPos05AB, _t0741);
  real _t0743 = prim |()|00B5<$[]> (_t0742);
  real _t0744 = 0.1e-20;
  bool _t0745 = prim >=007E (_t0743, _t0744);
  bool _t0746 = prim $and01C4 (_t073E, _t0745);
  bool _t0747 = prim $and01C4 (_t0730, _t0746);
  if _t0747 {
    int _t0748 = 0;
    bool _t0749 = prim !=0086 (i071E, _t0748);
    if _t0749 {
      real _t074A = 0.1e1;
      real _t074B = 0.e0;
      vec2 _t074C = [_t074A, _t074B];
      vec2 _t074D = prim -0026<$[2]> (_t074C, refPos05AA);
      real _t074E = -0.1e1;
      real _t074F = 0.1e1;
      vec2 _t0750 = [_t074E, _t074F];
      real _t0751 = -0.1e1;
      real _t0752 = 0.1e1;
      vec2 _t0753 = [_t0751, _t0752];
      real _t0754 = prim ×00BD (dPos05AB, _t0753);
      vec2 _t0755 = prim /0057<$[2]> (_t0750, _t0754);
      time071F = prim ×00BD (_t074D, _t0755);
      face0720 = 0;
    } else {
      real _t0756 = 0.1e1;
      real _t0757 = 0.e0;
      vec2 _t0758 = [_t0756, _t0757];
      vec2 _t0759 = prim -0026<$[2]> (_t0758, refPos05AA);
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = -0.1e1;
      real _t075E = 0.1e1;
      vec2 _t075F = [_t075D, _t075E];
      real _t0760 = prim ×00BD (dPos05AB, _t075F);
      vec2 _t0761 = prim /0057<$[2]> (_t075C, _t0760);
      faceTime0721 = prim ×00BD (_t0759, _t0761);
    }
  }
  real _t0762 = 0.e0;
  real _t0763 = 0.e0;
  vec2 _t0764 = [_t0762, _t0763];
  vec2 _t0765 = prim -0026<$[2]> (_t0764, refPos05AA);
  real _t0766 = 0.e0;
  real _t0767 = 0.1e1;
  vec2 _t0768 = [_t0766, _t0767];
  real _t0769 = 0.e0;
  real _t076A = 0.1e1;
  vec2 _t076B = [_t0769, _t076A];
  real _t076C = prim ×00BD (dPos05AB, _t076B);
  vec2 _t076D = prim /0057<$[2]> (_t0768, _t076C);
  real _t076E = prim ×00BD (_t0765, _t076D);
  real _t076F = -0.1e-15;
  bool _t0770 = prim >=007E (_t076E, _t076F);
  real _t0771 = 0.e0;
  real _t0772 = 0.e0;
  vec2 _t0773 = [_t0771, _t0772];
  vec2 _t0774 = prim -0026<$[2]> (_t0773, refPos05AA);
  real _t0775 = 0.e0;
  real _t0776 = 0.1e1;
  vec2 _t0777 = [_t0775, _t0776];
  real _t0778 = 0.e0;
  real _t0779 = 0.1e1;
  vec2 _t077A = [_t0778, _t0779];
  real _t077B = prim ×00BD (dPos05AB, _t077A);
  vec2 _t077C = prim /0057<$[2]> (_t0777, _t077B);
  real _t077D = prim ×00BD (_t0774, _t077C);
  bool _t077E = prim >0080 (time071F, _t077D);
  real _t077F = 0.e0;
  real _t0780 = 0.1e1;
  vec2 _t0781 = [_t077F, _t0780];
  real _t0782 = prim ×00BD (dPos05AB, _t0781);
  real _t0783 = prim |()|00B5<$[]> (_t0782);
  real _t0784 = 0.1e-20;
  bool _t0785 = prim >=007E (_t0783, _t0784);
  bool _t0786 = prim $and01C4 (_t077E, _t0785);
  bool _t0787 = prim $and01C4 (_t0770, _t0786);
  if _t0787 {
    int _t0788 = 1;
    bool _t0789 = prim !=0086 (i071E, _t0788);
    if _t0789 {
      real _t078A = 0.e0;
      real _t078B = 0.e0;
      vec2 _t078C = [_t078A, _t078B];
      vec2 _t078D = prim -0026<$[2]> (_t078C, refPos05AA);
      real _t078E = 0.e0;
      real _t078F = 0.1e1;
      vec2 _t0790 = [_t078E, _t078F];
      real _t0791 = 0.e0;
      real _t0792 = 0.1e1;
      vec2 _t0793 = [_t0791, _t0792];
      real _t0794 = prim ×00BD (dPos05AB, _t0793);
      vec2 _t0795 = prim /0057<$[2]> (_t0790, _t0794);
      time071F = prim ×00BD (_t078D, _t0795);
      face0720 = 1;
    } else {
      real _t0796 = 0.e0;
      real _t0797 = 0.e0;
      vec2 _t0798 = [_t0796, _t0797];
      vec2 _t0799 = prim -0026<$[2]> (_t0798, refPos05AA);
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = 0.e0;
      real _t079E = 0.1e1;
      vec2 _t079F = [_t079D, _t079E];
      real _t07A0 = prim ×00BD (dPos05AB, _t079F);
      vec2 _t07A1 = prim /0057<$[2]> (_t079C, _t07A0);
      faceTime0721 = prim ×00BD (_t0799, _t07A1);
    }
  }
  real _t07A2 = 0.e0;
  real _t07A3 = 0.e0;
  vec2 _t07A4 = [_t07A2, _t07A3];
  vec2 _t07A5 = prim -0026<$[2]> (_t07A4, refPos05AA);
  real _t07A6 = 0.1e1;
  real _t07A7 = 0.e0;
  vec2 _t07A8 = [_t07A6, _t07A7];
  real _t07A9 = 0.1e1;
  real _t07AA = 0.e0;
  vec2 _t07AB = [_t07A9, _t07AA];
  real _t07AC = prim ×00BD (dPos05AB, _t07AB);
  vec2 _t07AD = prim /0057<$[2]> (_t07A8, _t07AC);
  real _t07AE = prim ×00BD (_t07A5, _t07AD);
  real _t07AF = -0.1e-15;
  bool _t07B0 = prim >=007E (_t07AE, _t07AF);
  real _t07B1 = 0.e0;
  real _t07B2 = 0.e0;
  vec2 _t07B3 = [_t07B1, _t07B2];
  vec2 _t07B4 = prim -0026<$[2]> (_t07B3, refPos05AA);
  real _t07B5 = 0.1e1;
  real _t07B6 = 0.e0;
  vec2 _t07B7 = [_t07B5, _t07B6];
  real _t07B8 = 0.1e1;
  real _t07B9 = 0.e0;
  vec2 _t07BA = [_t07B8, _t07B9];
  real _t07BB = prim ×00BD (dPos05AB, _t07BA);
  vec2 _t07BC = prim /0057<$[2]> (_t07B7, _t07BB);
  real _t07BD = prim ×00BD (_t07B4, _t07BC);
  bool _t07BE = prim >0080 (time071F, _t07BD);
  real _t07BF = 0.1e1;
  real _t07C0 = 0.e0;
  vec2 _t07C1 = [_t07BF, _t07C0];
  real _t07C2 = prim ×00BD (dPos05AB, _t07C1);
  real _t07C3 = prim |()|00B5<$[]> (_t07C2);
  real _t07C4 = 0.1e-20;
  bool _t07C5 = prim >=007E (_t07C3, _t07C4);
  bool _t07C6 = prim $and01C4 (_t07BE, _t07C5);
  bool _t07C7 = prim $and01C4 (_t07B0, _t07C6);
  if _t07C7 {
    int _t07C8 = 2;
    bool _t07C9 = prim !=0086 (i071E, _t07C8);
    if _t07C9 {
      real _t07CA = 0.e0;
      real _t07CB = 0.e0;
      vec2 _t07CC = [_t07CA, _t07CB];
      vec2 _t07CD = prim -0026<$[2]> (_t07CC, refPos05AA);
      real _t07CE = 0.1e1;
      real _t07CF = 0.e0;
      vec2 _t07D0 = [_t07CE, _t07CF];
      real _t07D1 = 0.1e1;
      real _t07D2 = 0.e0;
      vec2 _t07D3 = [_t07D1, _t07D2];
      real _t07D4 = prim ×00BD (dPos05AB, _t07D3);
      vec2 _t07D5 = prim /0057<$[2]> (_t07D0, _t07D4);
      time071F = prim ×00BD (_t07CD, _t07D5);
      face0720 = 2;
    } else {
      real _t07D6 = 0.e0;
      real _t07D7 = 0.e0;
      vec2 _t07D8 = [_t07D6, _t07D7];
      vec2 _t07D9 = prim -0026<$[2]> (_t07D8, refPos05AA);
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = 0.1e1;
      real _t07DE = 0.e0;
      vec2 _t07DF = [_t07DD, _t07DE];
      real _t07E0 = prim ×00BD (dPos05AB, _t07DF);
      vec2 _t07E1 = prim /0057<$[2]> (_t07DC, _t07E0);
      faceTime0721 = prim ×00BD (_t07D9, _t07E1);
    }
  }
  int _t07E2 = -1;
  bool _t07E3 = prim !=0086 (face0720, _t07E2);
  if _t07E3 {
    real _t07E4 = 0.e0;
    real _t07E5 = prim max0125 (time071F, _t07E4);
    real _t07E6 = (real)face0720;
    vec2 _t07E7 = [_t07E5, _t07E6];
    return _t07E7;
  } else {
    real _t07E8 = -inf;
    bool _t07E9 = prim ==0084 (_t07E8, faceTime0721);
    if _t07E9 {
      real _t07EA = -0.1e1;
      real _t07EB = -0.1e1;
      vec2 _t07EC = [_t07EA, _t07EB];
      return _t07EC;
    } else {
      real _t07ED = (real)i071E;
      vec2 _t07EE = [faceTime0721, _t07ED];
      return _t07EE;
    }
  }
}
function Femdata: Mesh#0 domain07EF (Femdata: Space arg007F0)
{
  Femdata: Mesh _t07F1 = extractFem(arg007F0, Mesh);
  return _t07F1;
}
function Femdata: Space#0 space07F2 (Femdata: FemFunc arg007F3)
{
  Femdata: Space _t07F4 = extractFem(arg007F3, Space);
  return _t07F4;
}
function Femdata: FuncCell#3 funcCell07F5 (Femdata: FemFunc arg007F6, Femdata: MeshCell arg107F7)
{
  int _t07F8 = extractFemItem(CellIndex(MeshCell), int, arg107F7);
  Femdata: FuncCell _t07F9 = loadFem(FuncCell, arg007F6, _t07F8);
  return _t07F9;
}
function int#4 sign0812 (real x0813)
{
  real _t0814 = 0.e0;
  bool _t0815 = prim >0080 (x0813, _t0814);
  if _t0815 {
    int _t0816 = 1;
    return _t0816;
  } else {
    real _t0817 = 0.e0;
    bool _t0818 = prim <007A (x0813, _t0817);
    if _t0818 {
      int _t0819 = -1;
      return _t0819;
    } else {
      int _t081A = 0;
      return _t081A;
    }
  }
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  camNearVsp07FC = prim +0017<$[]> (camNear0465, camDist07FB);
  camFarVsp07FD = prim +0017<$[]> (camFar0466, camDist07FB);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  tensor[3,3] _t080D = [camU0801, camV0802, camN07FF];
  tensor[3,3] _t080E = prim transpose0145<%3; %3> (_t080D);
  vec3 _t080F = prim normalize0137<$[3]> (lightVsp0469);
  light0810 = prim •00CE<$[3,3]; $[3]; $[3]> (_t080E, _t080F);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    fc083E = func funcCell07F5 (c0452, cc083C);
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    fc083E = func funcCell07F5 (c0452, cc083C);
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD = func sign0812 (f00862);
    int _t08DE = func sign0812 (f108A6);
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3 = func sign0812 (f00862);
      int _t08E4 = func sign0812 (f108A6);
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        fc083E = func funcCell07F5 (c0452, cc083C);
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function bool#0 !=0476 (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t0479 = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047A = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047B = prim !=0086 (_t0479, _t047A);
  return _t047B;
}
function bool#0 ==047C (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t047D = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047F = prim ==0082 (_t047D, _t047E);
  return _t047F;
}
function Femdata: MeshPos#0 findPos0480 (Femdata: Mesh mesh0481, vec2 pos0482)
{
  real _t0483 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0484 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0485 = [_t0483, _t0484];
  newtonInt0486 = 0;
  cellInt0487 = extractFemItem(StartCell(Mesh), int, mesh0481);
  int _t0488 = extractFemItem(NumCell(Mesh), int, mesh0481);
  int _t0489 = 1;
  numCell048A = prim -0024 (_t0488, _t0489);
  yayCells048B = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0481, pos0482 : vec2);
  foreach cellItter048C in yayCells048B {
    cellInt0487 = cellItter048C;
    field(2)[2] _t048D = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
    field(2)[2,2] _t048E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t048D);
    field(2)[2,2] _t048F = prim inv015B<#∞; %2> (_t048E);
    real _t0490 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0491 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0492 = [_t0490, _t0491];
    A0493 = prim @00A5<#∞; %2; $[2,2]> (_t048F, _t0492);
    int _t0494 = 0;
    int _t0495 = 16;
    int[] _t0496 = prim $range01C3 (_t0494, _t0495);
    foreach newtonItter04B9 in _t0496 {
      field(2)[2] _t0497 = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
      field(2)[2] _t0498 = prim -002E<#∞; %2; $[2]> (_t0497, pos0482);
      field(2)[2] _t0499 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0493, _t0498);
      delta049A = prim @00A5<#∞; %2; $[2]> (_t0499, xn0485);
      xn0485 = prim -0026<$[2]> (xn0485, delta049A);
      real _t049B = 0.1e-7;
      real _t049C = 0.1e-7;
      real _t049D = prim *0034 (_t049B, _t049C);
      real _t049E = prim •00CE<$[2]; $[2]; $[]> (delta049A, delta049A);
      bool _t049F = prim >=007E (_t049D, _t049E);
      if _t049F {
        real _t04A0 = 0.1e1;
        real _t04A1 = 0.1e-8;
        real _t04A2 = prim +0017<$[]> (_t04A0, _t04A1);
        real _t04A3 = 0.1e1;
        real _t04A4 = 0.1e1;
        vec2 _t04A5 = [_t04A3, _t04A4];
        real _t04A6 = prim •00CE<$[2]; $[2]; $[]> (_t04A5, xn0485);
        bool _t04A7 = prim >0080 (_t04A2, _t04A6);
        real _t04A8 = 0.1e-8;
        real _t04A9 = 0.1e-8;
        vec2 _t04AA = [_t04A8, _t04A9];
        vec2 _t04AB = prim +0017<$[2]> (_t04AA, xn0485);
        real _t04AC = _t04AB[0];
        real _t04AD = -0.e0;
        bool _t04AE = prim >0080 (_t04AC, _t04AD);
        real _t04AF = 0.1e-8;
        real _t04B0 = 0.1e-8;
        vec2 _t04B1 = [_t04AF, _t04B0];
        vec2 _t04B2 = prim +0017<$[2]> (_t04B1, xn0485);
        real _t04B3 = _t04B2[1];
        real _t04B4 = -0.e0;
        bool _t04B5 = prim >0080 (_t04B3, _t04B4);
        bool _t04B6 = prim $and01C4 (_t04AE, _t04B5);
        bool _t04B7 = prim $and01C4 (_t04A7, _t04B6);
        if _t04B7 {
          Femdata: MeshPos _t04B8 = extractFemItemN((mesh0481, cellInt0487, xn0485, pos0482),AllBuild(MeshPos),);
          return _t04B8;
        }
      }
    }
  }
  string _t04BA = "Bad end 2";
  string _t04BB = "\n";
  print (_t04BA, _t04BB);
  Femdata: MeshPos _t04BC = extractFemItemN((mesh0481),InvalidBuild(MeshPos),);
  return _t04BC;
}
function Femdata: RefCell#0 refcell04BD (Femdata: Mesh arg004BE)
{
  Femdata: RefCell _t04BF = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004BE);
  return _t04BF;
}
function Femdata: MeshCell[]#0 cells04C0 (Femdata: Mesh arg004C1)
{
  Femdata: MeshCell[] _t04C2 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004C1);
  return _t04C2;
}
function Femdata: MeshCell[]#0 cells04C3 (Femdata: Mesh arg004C1)
{
  int _t04C4 = 0;
  int _t04C5 = extractFemItem(NumCell(Mesh), int, arg004C1);
  int[] _t04C6 = prim $range01C3 (_t04C4, _t04C5);
  Femdata: MeshCell[] accum04C9 = {};
  foreach i04C7 in _t04C6 {
    Femdata: MeshCell _t04C8 = loadFem(MeshCell, arg004C1, i04C7);
    accum04C9 = prim @0010<Femdata: MeshCell> (accum04C9, _t04C8);
  }
  return accum04C9;
}
function int#0 numCell04CA (Femdata: Mesh arg004BE)
{
  int _t04CB = extractFemItem(NumCell(Mesh), int, arg004BE);
  return _t04CB;
}
function tensor[2,2,2,2]#0 msh_transform_304CC (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D0 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D0);
  field(2)[2,2,2] _t04D2 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D1);
  field(2)[2,2,2,2] _t04D3 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04D2);
  tensor[2,2,2,2] _t04D4 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04D3, pos04CD);
  return _t04D4;
}
function tensor[2,2,2]#0 msh_transform_204D5 (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D6 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D6);
  field(2)[2,2,2] _t04D8 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D7);
  tensor[2,2,2] _t04D9 = prim @00A5<#∞; %2; $[2,2,2]> (_t04D8, pos04CD);
  return _t04D9;
}
function tensor[2,2]#0 msh_transform_104DA (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DB = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DB);
  tensor[2,2] _t04DD = prim @00A5<#∞; %2; $[2,2]> (_t04DC, pos04CD);
  return _t04DD;
}
function vec2#2 msh_transform_004DE (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DF = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  vec2 _t04E0 = prim @00A5<#∞; %2; $[2]> (_t04DF, pos04CD);
  return _t04E0;
}
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0517 (Femdata: MeshPos pos0518)
{
  bool _t0519 = extractFemItem(WorldTest(MeshPos), bool, pos0518);
  if _t0519 {
    vec2 _t051A = extractFemItem(RefPos(MeshPos), vec2, pos0518);
    int _t051B = extractFemItem(CellIndex(MeshPos), int, pos0518);
    Femdata: Mesh _t051C = extractFem(pos0518, Mesh);
    vec2 _t051D = func msh_transform_004DE (_t051A, _t051B, _t051C);
    Femdata: MeshPos _t051E = extractFemItemN((pos0518, _t051D),NewWorld(MeshPos),);
    return _t051E;
  } else {
    return pos0518;
  }
}
function vec2#0 worldPos051F (Femdata: MeshPos pos0518)
{
  vec2 _t0520 = extractFemItem(RefPos(MeshPos), vec2, pos0518);
  int _t0521 = extractFemItem(CellIndex(MeshPos), int, pos0518);
  Femdata: Mesh _t0522 = extractFem(pos0518, Mesh);
  vec2 _t0523 = func msh_transform_004DE (_t0520, _t0521, _t0522);
  return _t0523;
}
function Femdata: MeshPos#0 $exitPos0524 (Femdata: Mesh mesh0525, int cellId0526, vec2 refPos0527, vec2 dPos0528, real[2] time0529)
{
  int _t052A = -1;
  real _t052B = time0529[1];
  int _t052C = prim $r2i01B7 (_t052B);
  int[2] _t052E = func nextCell4052D (_t052C, cellId0526, mesh0525);
  int _t052F = 0;
  int _t0530 = prim $sub01C0<int; %2> (_t052E, _t052F);
  bool _t0531 = prim !=0086 (_t052A, _t0530);
  if _t0531 {
    real _t0532 = time0529[1];
    int _t0533 = prim $r2i01B7 (_t0532);
    int[2] _t0534 = func nextCell4052D (_t0533, cellId0526, mesh0525);
    int _t0535 = 0;
    int _t0536 = prim $sub01C0<int; %2> (_t0534, _t0535);
    real _t0537 = 0.1e1;
    real _t0538 = 0.e0;
    vec2 _t0539 = [_t0537, _t0538];
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec2 _t053C = [_t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    vec2 _t053F = [_t053D, _t053E];
    vec2[3] _t0540 = {_t0539, _t053C, _t053F};
    real _t0541 = time0529[1];
    int _t0542 = prim $r2i01B7 (_t0541);
    int[2] _t0543 = func nextCell4052D (_t0542, cellId0526, mesh0525);
    int _t0544 = 1;
    int _t0545 = prim $sub01C0<int; %2> (_t0543, _t0544);
    vec2 _t0546 = prim $sub01C0<vec2; %3> (_t0540, _t0545);
    real _t0547 = -0.1e1;
    real _t0548 = 0.1e1;
    vec2 _t0549 = [_t0547, _t0548];
    real _t054A = 0.e0;
    real _t054B = 0.1e1;
    vec2 _t054C = [_t054A, _t054B];
    real _t054D = 0.1e1;
    real _t054E = 0.e0;
    vec2 _t054F = [_t054D, _t054E];
    vec2[3] _t0550 = {_t0549, _t054C, _t054F};
    real _t0551 = time0529[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int[2] _t0553 = func nextCell4052D (_t0552, cellId0526, mesh0525);
    int _t0554 = 1;
    int _t0555 = prim $sub01C0<int; %2> (_t0553, _t0554);
    vec2 _t0556 = prim $sub01C0<vec2; %3> (_t0550, _t0555);
    real _t0557 = time0529[0];
    vec2 _t0558 = prim *0036<$[2]> (_t0557, dPos0528);
    vec2 _t0559 = prim +0017<$[2]> (_t0558, refPos0527);
    real _t055A = _t0559[0];
    real _t055B = time0529[0];
    vec2 _t055C = prim *0036<$[2]> (_t055B, dPos0528);
    vec2 _t055D = prim +0017<$[2]> (_t055C, refPos0527);
    real _t055E = _t055D[1];
    real[2] _t055F = {_t055A, _t055E};
    int _t0560 = 1;
    int _t0561 = 1;
    int _t0562 = 0;
    int[3] _t0563 = {_t0560, _t0561, _t0562};
    real _t0564 = time0529[1];
    int _t0565 = prim $r2i01B7 (_t0564);
    int _t0566 = prim $sub01C0<int; %3> (_t0563, _t0565);
    real _t0567 = prim $sub01C0<real; %2> (_t055F, _t0566);
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real[2] _t056A = {_t0568, _t0569};
    real _t056B = 0.e0;
    real _t056C = 0.e0;
    real[2] _t056D = {_t056B, _t056C};
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real[2] _t0570 = {_t056E, _t056F};
    real[2][3] _t0571 = {_t056A, _t056D, _t0570};
    real _t0572 = time0529[1];
    int _t0573 = prim $r2i01B7 (_t0572);
    real[2] _t0574 = prim $sub01C0<real[2]; %3> (_t0571, _t0573);
    int _t0575 = 1;
    int _t0576 = 1;
    int _t0577 = 0;
    int[3] _t0578 = {_t0575, _t0576, _t0577};
    real _t0579 = time0529[1];
    int _t057A = prim $r2i01B7 (_t0579);
    int _t057B = prim $sub01C0<int; %3> (_t0578, _t057A);
    real _t057C = prim $sub01C0<real; %2> (_t0574, _t057B);
    real _t057D = prim -0026<$[]> (_t0567, _t057C);
    real _t057E = -0.1e1;
    real _t057F = 0.1e1;
    real[2] _t0580 = {_t057E, _t057F};
    real _t0581 = 0.e0;
    real _t0582 = 0.1e1;
    real[2] _t0583 = {_t0581, _t0582};
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real[2] _t0586 = {_t0584, _t0585};
    real[2][3] _t0587 = {_t0580, _t0583, _t0586};
    real _t0588 = time0529[1];
    int _t0589 = prim $r2i01B7 (_t0588);
    real[2] _t058A = prim $sub01C0<real[2]; %3> (_t0587, _t0589);
    int _t058B = 1;
    int _t058C = 1;
    int _t058D = 0;
    int[3] _t058E = {_t058B, _t058C, _t058D};
    real _t058F = time0529[1];
    int _t0590 = prim $r2i01B7 (_t058F);
    int _t0591 = prim $sub01C0<int; %3> (_t058E, _t0590);
    real _t0592 = prim $sub01C0<real; %2> (_t058A, _t0591);
    real _t0593 = prim /0055 (_t057D, _t0592);
    vec2 _t0594 = prim *0038<$[2]> (_t0556, _t0593);
    vec2 _t0595 = prim +0017<$[2]> (_t0546, _t0594);
    real _t0596 = time0529[1];
    int _t0597 = prim $r2i01B7 (_t0596);
    int[2] _t0598 = func nextCell4052D (_t0597, cellId0526, mesh0525);
    int _t0599 = 1;
    int _t059A = prim $sub01C0<int; %2> (_t0598, _t0599);
    Femdata: MeshPos _t059B = extractFemItemN((mesh0525, _t0536, _t0595, _t059A),RefBuild(Mesh),);
    return _t059B;
  } else {
    real _t059C = time0529[0];
    vec2 _t059D = prim *0036<$[2]> (_t059C, dPos0528);
    vec2 _t059E = prim +0017<$[2]> (_t059D, refPos0527);
    Femdata: MeshPos _t059F = extractFemItemN((mesh0525, _t059E),InvalidBuildBoundary(MeshPos),);
    return _t059F;
  }
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
function vec2#0 _enter05A9 (vec2 refPos05AA, vec2 dPos05AB)
{
  real time05AC = +inf;
  int face05AD = -1;
  real faceTime05AE = -inf;
  real _t05AF = 0.1e1;
  real _t05B0 = 0.e0;
  vec2 _t05B1 = [_t05AF, _t05B0];
  vec2 _t05B2 = prim -0026<$[2]> (_t05B1, refPos05AA);
  real _t05B3 = -0.1e1;
  real _t05B4 = 0.1e1;
  vec2 _t05B5 = [_t05B3, _t05B4];
  real _t05B6 = -0.1e1;
  real _t05B7 = 0.1e1;
  vec2 _t05B8 = [_t05B6, _t05B7];
  real _t05B9 = prim ×00BD (dPos05AB, _t05B8);
  vec2 _t05BA = prim /0057<$[2]> (_t05B5, _t05B9);
  real _t05BB = prim ×00BD (_t05B2, _t05BA);
  real _t05BC = -0.1e-15;
  bool _t05BD = prim >=007E (_t05BB, _t05BC);
  real _t05BE = 0.1e1;
  real _t05BF = 0.e0;
  vec2 _t05C0 = [_t05BE, _t05BF];
  vec2 _t05C1 = prim -0026<$[2]> (_t05C0, refPos05AA);
  real _t05C2 = -0.1e1;
  real _t05C3 = 0.1e1;
  vec2 _t05C4 = [_t05C2, _t05C3];
  real _t05C5 = -0.1e1;
  real _t05C6 = 0.1e1;
  vec2 _t05C7 = [_t05C5, _t05C6];
  real _t05C8 = prim ×00BD (dPos05AB, _t05C7);
  vec2 _t05C9 = prim /0057<$[2]> (_t05C4, _t05C8);
  real _t05CA = prim ×00BD (_t05C1, _t05C9);
  bool _t05CB = prim >0080 (time05AC, _t05CA);
  real _t05CC = -0.1e1;
  real _t05CD = 0.1e1;
  vec2 _t05CE = [_t05CC, _t05CD];
  real _t05CF = prim ×00BD (dPos05AB, _t05CE);
  real _t05D0 = prim |()|00B5<$[]> (_t05CF);
  real _t05D1 = 0.1e-20;
  bool _t05D2 = prim >=007E (_t05D0, _t05D1);
  bool _t05D3 = prim $and01C4 (_t05CB, _t05D2);
  bool _t05D4 = prim $and01C4 (_t05BD, _t05D3);
  if _t05D4 {
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.1e-8;
    real _t05D7 = prim +0017<$[]> (_t05D5, _t05D6);
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.1e1;
    vec2 _t05DA = [_t05D8, _t05D9];
    real _t05DB = 0.1e1;
    real _t05DC = 0.e0;
    vec2 _t05DD = [_t05DB, _t05DC];
    vec2 _t05DE = prim -0026<$[2]> (_t05DD, refPos05AA);
    real _t05DF = -0.1e1;
    real _t05E0 = 0.1e1;
    vec2 _t05E1 = [_t05DF, _t05E0];
    real _t05E2 = -0.1e1;
    real _t05E3 = 0.1e1;
    vec2 _t05E4 = [_t05E2, _t05E3];
    real _t05E5 = prim ×00BD (dPos05AB, _t05E4);
    vec2 _t05E6 = prim /0057<$[2]> (_t05E1, _t05E5);
    real _t05E7 = prim ×00BD (_t05DE, _t05E6);
    vec2 _t05E8 = prim *0038<$[2]> (dPos05AB, _t05E7);
    vec2 _t05E9 = prim +0017<$[2]> (refPos05AA, _t05E8);
    real _t05EA = prim •00CE<$[2]; $[2]; $[]> (_t05DA, _t05E9);
    bool _t05EB = prim >0080 (_t05D7, _t05EA);
    real _t05EC = 0.1e-8;
    real _t05ED = 0.1e-8;
    vec2 _t05EE = [_t05EC, _t05ED];
    real _t05EF = 0.1e1;
    real _t05F0 = 0.e0;
    vec2 _t05F1 = [_t05EF, _t05F0];
    vec2 _t05F2 = prim -0026<$[2]> (_t05F1, refPos05AA);
    real _t05F3 = -0.1e1;
    real _t05F4 = 0.1e1;
    vec2 _t05F5 = [_t05F3, _t05F4];
    real _t05F6 = -0.1e1;
    real _t05F7 = 0.1e1;
    vec2 _t05F8 = [_t05F6, _t05F7];
    real _t05F9 = prim ×00BD (dPos05AB, _t05F8);
    vec2 _t05FA = prim /0057<$[2]> (_t05F5, _t05F9);
    real _t05FB = prim ×00BD (_t05F2, _t05FA);
    vec2 _t05FC = prim *0038<$[2]> (dPos05AB, _t05FB);
    vec2 _t05FD = prim +0017<$[2]> (refPos05AA, _t05FC);
    vec2 _t05FE = prim +0017<$[2]> (_t05EE, _t05FD);
    real _t05FF = _t05FE[0];
    real _t0600 = -0.e0;
    bool _t0601 = prim >0080 (_t05FF, _t0600);
    real _t0602 = 0.1e-8;
    real _t0603 = 0.1e-8;
    vec2 _t0604 = [_t0602, _t0603];
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec2 _t0607 = [_t0605, _t0606];
    vec2 _t0608 = prim -0026<$[2]> (_t0607, refPos05AA);
    real _t0609 = -0.1e1;
    real _t060A = 0.1e1;
    vec2 _t060B = [_t0609, _t060A];
    real _t060C = -0.1e1;
    real _t060D = 0.1e1;
    vec2 _t060E = [_t060C, _t060D];
    real _t060F = prim ×00BD (dPos05AB, _t060E);
    vec2 _t0610 = prim /0057<$[2]> (_t060B, _t060F);
    real _t0611 = prim ×00BD (_t0608, _t0610);
    vec2 _t0612 = prim *0038<$[2]> (dPos05AB, _t0611);
    vec2 _t0613 = prim +0017<$[2]> (refPos05AA, _t0612);
    vec2 _t0614 = prim +0017<$[2]> (_t0604, _t0613);
    real _t0615 = _t0614[1];
    real _t0616 = -0.e0;
    bool _t0617 = prim >0080 (_t0615, _t0616);
    bool _t0618 = prim $and01C4 (_t0601, _t0617);
    bool _t0619 = prim $and01C4 (_t05EB, _t0618);
    if _t0619 {
      real _t061A = 0.1e1;
      real _t061B = 0.e0;
      vec2 _t061C = [_t061A, _t061B];
      vec2 _t061D = prim -0026<$[2]> (_t061C, refPos05AA);
      real _t061E = -0.1e1;
      real _t061F = 0.1e1;
      vec2 _t0620 = [_t061E, _t061F];
      real _t0621 = -0.1e1;
      real _t0622 = 0.1e1;
      vec2 _t0623 = [_t0621, _t0622];
      real _t0624 = prim ×00BD (dPos05AB, _t0623);
      vec2 _t0625 = prim /0057<$[2]> (_t0620, _t0624);
      time05AC = prim ×00BD (_t061D, _t0625);
      face05AD = 0;
    }
  }
  real _t0626 = 0.e0;
  real _t0627 = 0.e0;
  vec2 _t0628 = [_t0626, _t0627];
  vec2 _t0629 = prim -0026<$[2]> (_t0628, refPos05AA);
  real _t062A = 0.e0;
  real _t062B = 0.1e1;
  vec2 _t062C = [_t062A, _t062B];
  real _t062D = 0.e0;
  real _t062E = 0.1e1;
  vec2 _t062F = [_t062D, _t062E];
  real _t0630 = prim ×00BD (dPos05AB, _t062F);
  vec2 _t0631 = prim /0057<$[2]> (_t062C, _t0630);
  real _t0632 = prim ×00BD (_t0629, _t0631);
  real _t0633 = -0.1e-15;
  bool _t0634 = prim >=007E (_t0632, _t0633);
  real _t0635 = 0.e0;
  real _t0636 = 0.e0;
  vec2 _t0637 = [_t0635, _t0636];
  vec2 _t0638 = prim -0026<$[2]> (_t0637, refPos05AA);
  real _t0639 = 0.e0;
  real _t063A = 0.1e1;
  vec2 _t063B = [_t0639, _t063A];
  real _t063C = 0.e0;
  real _t063D = 0.1e1;
  vec2 _t063E = [_t063C, _t063D];
  real _t063F = prim ×00BD (dPos05AB, _t063E);
  vec2 _t0640 = prim /0057<$[2]> (_t063B, _t063F);
  real _t0641 = prim ×00BD (_t0638, _t0640);
  bool _t0642 = prim >0080 (time05AC, _t0641);
  real _t0643 = 0.e0;
  real _t0644 = 0.1e1;
  vec2 _t0645 = [_t0643, _t0644];
  real _t0646 = prim ×00BD (dPos05AB, _t0645);
  real _t0647 = prim |()|00B5<$[]> (_t0646);
  real _t0648 = 0.1e-20;
  bool _t0649 = prim >=007E (_t0647, _t0648);
  bool _t064A = prim $and01C4 (_t0642, _t0649);
  bool _t064B = prim $and01C4 (_t0634, _t064A);
  if _t064B {
    real _t064C = 0.1e1;
    real _t064D = 0.1e-8;
    real _t064E = prim +0017<$[]> (_t064C, _t064D);
    real _t064F = 0.1e1;
    real _t0650 = 0.1e1;
    vec2 _t0651 = [_t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = 0.e0;
    vec2 _t0654 = [_t0652, _t0653];
    vec2 _t0655 = prim -0026<$[2]> (_t0654, refPos05AA);
    real _t0656 = 0.e0;
    real _t0657 = 0.1e1;
    vec2 _t0658 = [_t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec2 _t065B = [_t0659, _t065A];
    real _t065C = prim ×00BD (dPos05AB, _t065B);
    vec2 _t065D = prim /0057<$[2]> (_t0658, _t065C);
    real _t065E = prim ×00BD (_t0655, _t065D);
    vec2 _t065F = prim *0038<$[2]> (dPos05AB, _t065E);
    vec2 _t0660 = prim +0017<$[2]> (refPos05AA, _t065F);
    real _t0661 = prim •00CE<$[2]; $[2]; $[]> (_t0651, _t0660);
    bool _t0662 = prim >0080 (_t064E, _t0661);
    real _t0663 = 0.1e-8;
    real _t0664 = 0.1e-8;
    vec2 _t0665 = [_t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec2 _t0668 = [_t0666, _t0667];
    vec2 _t0669 = prim -0026<$[2]> (_t0668, refPos05AA);
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    vec2 _t066C = [_t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec2 _t066F = [_t066D, _t066E];
    real _t0670 = prim ×00BD (dPos05AB, _t066F);
    vec2 _t0671 = prim /0057<$[2]> (_t066C, _t0670);
    real _t0672 = prim ×00BD (_t0669, _t0671);
    vec2 _t0673 = prim *0038<$[2]> (dPos05AB, _t0672);
    vec2 _t0674 = prim +0017<$[2]> (refPos05AA, _t0673);
    vec2 _t0675 = prim +0017<$[2]> (_t0665, _t0674);
    real _t0676 = _t0675[0];
    real _t0677 = -0.e0;
    bool _t0678 = prim >0080 (_t0676, _t0677);
    real _t0679 = 0.1e-8;
    real _t067A = 0.1e-8;
    vec2 _t067B = [_t0679, _t067A];
    real _t067C = 0.e0;
    real _t067D = 0.e0;
    vec2 _t067E = [_t067C, _t067D];
    vec2 _t067F = prim -0026<$[2]> (_t067E, refPos05AA);
    real _t0680 = 0.e0;
    real _t0681 = 0.1e1;
    vec2 _t0682 = [_t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    vec2 _t0685 = [_t0683, _t0684];
    real _t0686 = prim ×00BD (dPos05AB, _t0685);
    vec2 _t0687 = prim /0057<$[2]> (_t0682, _t0686);
    real _t0688 = prim ×00BD (_t067F, _t0687);
    vec2 _t0689 = prim *0038<$[2]> (dPos05AB, _t0688);
    vec2 _t068A = prim +0017<$[2]> (refPos05AA, _t0689);
    vec2 _t068B = prim +0017<$[2]> (_t067B, _t068A);
    real _t068C = _t068B[1];
    real _t068D = -0.e0;
    bool _t068E = prim >0080 (_t068C, _t068D);
    bool _t068F = prim $and01C4 (_t0678, _t068E);
    bool _t0690 = prim $and01C4 (_t0662, _t068F);
    if _t0690 {
      real _t0691 = 0.e0;
      real _t0692 = 0.e0;
      vec2 _t0693 = [_t0691, _t0692];
      vec2 _t0694 = prim -0026<$[2]> (_t0693, refPos05AA);
      real _t0695 = 0.e0;
      real _t0696 = 0.1e1;
      vec2 _t0697 = [_t0695, _t0696];
      real _t0698 = 0.e0;
      real _t0699 = 0.1e1;
      vec2 _t069A = [_t0698, _t0699];
      real _t069B = prim ×00BD (dPos05AB, _t069A);
      vec2 _t069C = prim /0057<$[2]> (_t0697, _t069B);
      time05AC = prim ×00BD (_t0694, _t069C);
      face05AD = 1;
    }
  }
  real _t069D = 0.e0;
  real _t069E = 0.e0;
  vec2 _t069F = [_t069D, _t069E];
  vec2 _t06A0 = prim -0026<$[2]> (_t069F, refPos05AA);
  real _t06A1 = 0.1e1;
  real _t06A2 = 0.e0;
  vec2 _t06A3 = [_t06A1, _t06A2];
  real _t06A4 = 0.1e1;
  real _t06A5 = 0.e0;
  vec2 _t06A6 = [_t06A4, _t06A5];
  real _t06A7 = prim ×00BD (dPos05AB, _t06A6);
  vec2 _t06A8 = prim /0057<$[2]> (_t06A3, _t06A7);
  real _t06A9 = prim ×00BD (_t06A0, _t06A8);
  real _t06AA = -0.1e-15;
  bool _t06AB = prim >=007E (_t06A9, _t06AA);
  real _t06AC = 0.e0;
  real _t06AD = 0.e0;
  vec2 _t06AE = [_t06AC, _t06AD];
  vec2 _t06AF = prim -0026<$[2]> (_t06AE, refPos05AA);
  real _t06B0 = 0.1e1;
  real _t06B1 = 0.e0;
  vec2 _t06B2 = [_t06B0, _t06B1];
  real _t06B3 = 0.1e1;
  real _t06B4 = 0.e0;
  vec2 _t06B5 = [_t06B3, _t06B4];
  real _t06B6 = prim ×00BD (dPos05AB, _t06B5);
  vec2 _t06B7 = prim /0057<$[2]> (_t06B2, _t06B6);
  real _t06B8 = prim ×00BD (_t06AF, _t06B7);
  bool _t06B9 = prim >0080 (time05AC, _t06B8);
  real _t06BA = 0.1e1;
  real _t06BB = 0.e0;
  vec2 _t06BC = [_t06BA, _t06BB];
  real _t06BD = prim ×00BD (dPos05AB, _t06BC);
  real _t06BE = prim |()|00B5<$[]> (_t06BD);
  real _t06BF = 0.1e-20;
  bool _t06C0 = prim >=007E (_t06BE, _t06BF);
  bool _t06C1 = prim $and01C4 (_t06B9, _t06C0);
  bool _t06C2 = prim $and01C4 (_t06AB, _t06C1);
  if _t06C2 {
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.1e-8;
    real _t06C5 = prim +0017<$[]> (_t06C3, _t06C4);
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.1e1;
    vec2 _t06C8 = [_t06C6, _t06C7];
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    vec2 _t06CB = [_t06C9, _t06CA];
    vec2 _t06CC = prim -0026<$[2]> (_t06CB, refPos05AA);
    real _t06CD = 0.1e1;
    real _t06CE = 0.e0;
    vec2 _t06CF = [_t06CD, _t06CE];
    real _t06D0 = 0.1e1;
    real _t06D1 = 0.e0;
    vec2 _t06D2 = [_t06D0, _t06D1];
    real _t06D3 = prim ×00BD (dPos05AB, _t06D2);
    vec2 _t06D4 = prim /0057<$[2]> (_t06CF, _t06D3);
    real _t06D5 = prim ×00BD (_t06CC, _t06D4);
    vec2 _t06D6 = prim *0038<$[2]> (dPos05AB, _t06D5);
    vec2 _t06D7 = prim +0017<$[2]> (refPos05AA, _t06D6);
    real _t06D8 = prim •00CE<$[2]; $[2]; $[]> (_t06C8, _t06D7);
    bool _t06D9 = prim >0080 (_t06C5, _t06D8);
    real _t06DA = 0.1e-8;
    real _t06DB = 0.1e-8;
    vec2 _t06DC = [_t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec2 _t06DF = [_t06DD, _t06DE];
    vec2 _t06E0 = prim -0026<$[2]> (_t06DF, refPos05AA);
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    vec2 _t06E3 = [_t06E1, _t06E2];
    real _t06E4 = 0.1e1;
    real _t06E5 = 0.e0;
    vec2 _t06E6 = [_t06E4, _t06E5];
    real _t06E7 = prim ×00BD (dPos05AB, _t06E6);
    vec2 _t06E8 = prim /0057<$[2]> (_t06E3, _t06E7);
    real _t06E9 = prim ×00BD (_t06E0, _t06E8);
    vec2 _t06EA = prim *0038<$[2]> (dPos05AB, _t06E9);
    vec2 _t06EB = prim +0017<$[2]> (refPos05AA, _t06EA);
    vec2 _t06EC = prim +0017<$[2]> (_t06DC, _t06EB);
    real _t06ED = _t06EC[0];
    real _t06EE = -0.e0;
    bool _t06EF = prim >0080 (_t06ED, _t06EE);
    real _t06F0 = 0.1e-8;
    real _t06F1 = 0.1e-8;
    vec2 _t06F2 = [_t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec2 _t06F5 = [_t06F3, _t06F4];
    vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos05AA);
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec2 _t06F9 = [_t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    vec2 _t06FC = [_t06FA, _t06FB];
    real _t06FD = prim ×00BD (dPos05AB, _t06FC);
    vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
    real _t06FF = prim ×00BD (_t06F6, _t06FE);
    vec2 _t0700 = prim *0038<$[2]> (dPos05AB, _t06FF);
    vec2 _t0701 = prim +0017<$[2]> (refPos05AA, _t0700);
    vec2 _t0702 = prim +0017<$[2]> (_t06F2, _t0701);
    real _t0703 = _t0702[1];
    real _t0704 = -0.e0;
    bool _t0705 = prim >0080 (_t0703, _t0704);
    bool _t0706 = prim $and01C4 (_t06EF, _t0705);
    bool _t0707 = prim $and01C4 (_t06D9, _t0706);
    if _t0707 {
      real _t0708 = 0.e0;
      real _t0709 = 0.e0;
      vec2 _t070A = [_t0708, _t0709];
      vec2 _t070B = prim -0026<$[2]> (_t070A, refPos05AA);
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      real _t070F = 0.1e1;
      real _t0710 = 0.e0;
      vec2 _t0711 = [_t070F, _t0710];
      real _t0712 = prim ×00BD (dPos05AB, _t0711);
      vec2 _t0713 = prim /0057<$[2]> (_t070E, _t0712);
      time05AC = prim ×00BD (_t070B, _t0713);
      face05AD = 2;
    }
  }
  int _t0714 = -1;
  bool _t0715 = prim !=0086 (face05AD, _t0714);
  if _t0715 {
    real _t0716 = 0.e0;
    real _t0717 = prim max0125 (time05AC, _t0716);
    real _t0718 = (real)face05AD;
    vec2 _t0719 = [_t0717, _t0718];
    return _t0719;
  } else {
    real _t071A = -0.1e1;
    real _t071B = -0.1e1;
    vec2 _t071C = [_t071A, _t071B];
    return _t071C;
  }
}
function vec2#0 _exit071D (vec2 refPos05AA, vec2 dPos05AB, int i071E)
{
  real time071F = +inf;
  int face0720 = -1;
  real faceTime0721 = -inf;
  real _t0722 = 0.1e1;
  real _t0723 = 0.e0;
  vec2 _t0724 = [_t0722, _t0723];
  vec2 _t0725 = prim -0026<$[2]> (_t0724, refPos05AA);
  real _t0726 = -0.1e1;
  real _t0727 = 0.1e1;
  vec2 _t0728 = [_t0726, _t0727];
  real _t0729 = -0.1e1;
  real _t072A = 0.1e1;
  vec2 _t072B = [_t0729, _t072A];
  real _t072C = prim ×00BD (dPos05AB, _t072B);
  vec2 _t072D = prim /0057<$[2]> (_t0728, _t072C);
  real _t072E = prim ×00BD (_t0725, _t072D);
  real _t072F = -0.1e-15;
  bool _t0730 = prim >=007E (_t072E, _t072F);
  real _t0731 = 0.1e1;
  real _t0732 = 0.e0;
  vec2 _t0733 = [_t0731, _t0732];
  vec2 _t0734 = prim -0026<$[2]> (_t0733, refPos05AA);
  real _t0735 = -0.1e1;
  real _t0736 = 0.1e1;
  vec2 _t0737 = [_t0735, _t0736];
  real _t0738 = -0.1e1;
  real _t0739 = 0.1e1;
  vec2 _t073A = [_t0738, _t0739];
  real _t073B = prim ×00BD (dPos05AB, _t073A);
  vec2 _t073C = prim /0057<$[2]> (_t0737, _t073B);
  real _t073D = prim ×00BD (_t0734, _t073C);
  bool _t073E = prim >0080 (time071F, _t073D);
  real _t073F = -0.1e1;
  real _t0740 = 0.1e1;
  vec2 _t0741 = [_t073F, _t0740];
  real _t0742 = prim ×00BD (dPos05AB, _t0741);
  real _t0743 = prim |()|00B5<$[]> (_t0742);
  real _t0744 = 0.1e-20;
  bool _t0745 = prim >=007E (_t0743, _t0744);
  bool _t0746 = prim $and01C4 (_t073E, _t0745);
  bool _t0747 = prim $and01C4 (_t0730, _t0746);
  if _t0747 {
    int _t0748 = 0;
    bool _t0749 = prim !=0086 (i071E, _t0748);
    if _t0749 {
      real _t074A = 0.1e1;
      real _t074B = 0.e0;
      vec2 _t074C = [_t074A, _t074B];
      vec2 _t074D = prim -0026<$[2]> (_t074C, refPos05AA);
      real _t074E = -0.1e1;
      real _t074F = 0.1e1;
      vec2 _t0750 = [_t074E, _t074F];
      real _t0751 = -0.1e1;
      real _t0752 = 0.1e1;
      vec2 _t0753 = [_t0751, _t0752];
      real _t0754 = prim ×00BD (dPos05AB, _t0753);
      vec2 _t0755 = prim /0057<$[2]> (_t0750, _t0754);
      time071F = prim ×00BD (_t074D, _t0755);
      face0720 = 0;
    } else {
      real _t0756 = 0.1e1;
      real _t0757 = 0.e0;
      vec2 _t0758 = [_t0756, _t0757];
      vec2 _t0759 = prim -0026<$[2]> (_t0758, refPos05AA);
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = -0.1e1;
      real _t075E = 0.1e1;
      vec2 _t075F = [_t075D, _t075E];
      real _t0760 = prim ×00BD (dPos05AB, _t075F);
      vec2 _t0761 = prim /0057<$[2]> (_t075C, _t0760);
      faceTime0721 = prim ×00BD (_t0759, _t0761);
    }
  }
  real _t0762 = 0.e0;
  real _t0763 = 0.e0;
  vec2 _t0764 = [_t0762, _t0763];
  vec2 _t0765 = prim -0026<$[2]> (_t0764, refPos05AA);
  real _t0766 = 0.e0;
  real _t0767 = 0.1e1;
  vec2 _t0768 = [_t0766, _t0767];
  real _t0769 = 0.e0;
  real _t076A = 0.1e1;
  vec2 _t076B = [_t0769, _t076A];
  real _t076C = prim ×00BD (dPos05AB, _t076B);
  vec2 _t076D = prim /0057<$[2]> (_t0768, _t076C);
  real _t076E = prim ×00BD (_t0765, _t076D);
  real _t076F = -0.1e-15;
  bool _t0770 = prim >=007E (_t076E, _t076F);
  real _t0771 = 0.e0;
  real _t0772 = 0.e0;
  vec2 _t0773 = [_t0771, _t0772];
  vec2 _t0774 = prim -0026<$[2]> (_t0773, refPos05AA);
  real _t0775 = 0.e0;
  real _t0776 = 0.1e1;
  vec2 _t0777 = [_t0775, _t0776];
  real _t0778 = 0.e0;
  real _t0779 = 0.1e1;
  vec2 _t077A = [_t0778, _t0779];
  real _t077B = prim ×00BD (dPos05AB, _t077A);
  vec2 _t077C = prim /0057<$[2]> (_t0777, _t077B);
  real _t077D = prim ×00BD (_t0774, _t077C);
  bool _t077E = prim >0080 (time071F, _t077D);
  real _t077F = 0.e0;
  real _t0780 = 0.1e1;
  vec2 _t0781 = [_t077F, _t0780];
  real _t0782 = prim ×00BD (dPos05AB, _t0781);
  real _t0783 = prim |()|00B5<$[]> (_t0782);
  real _t0784 = 0.1e-20;
  bool _t0785 = prim >=007E (_t0783, _t0784);
  bool _t0786 = prim $and01C4 (_t077E, _t0785);
  bool _t0787 = prim $and01C4 (_t0770, _t0786);
  if _t0787 {
    int _t0788 = 1;
    bool _t0789 = prim !=0086 (i071E, _t0788);
    if _t0789 {
      real _t078A = 0.e0;
      real _t078B = 0.e0;
      vec2 _t078C = [_t078A, _t078B];
      vec2 _t078D = prim -0026<$[2]> (_t078C, refPos05AA);
      real _t078E = 0.e0;
      real _t078F = 0.1e1;
      vec2 _t0790 = [_t078E, _t078F];
      real _t0791 = 0.e0;
      real _t0792 = 0.1e1;
      vec2 _t0793 = [_t0791, _t0792];
      real _t0794 = prim ×00BD (dPos05AB, _t0793);
      vec2 _t0795 = prim /0057<$[2]> (_t0790, _t0794);
      time071F = prim ×00BD (_t078D, _t0795);
      face0720 = 1;
    } else {
      real _t0796 = 0.e0;
      real _t0797 = 0.e0;
      vec2 _t0798 = [_t0796, _t0797];
      vec2 _t0799 = prim -0026<$[2]> (_t0798, refPos05AA);
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = 0.e0;
      real _t079E = 0.1e1;
      vec2 _t079F = [_t079D, _t079E];
      real _t07A0 = prim ×00BD (dPos05AB, _t079F);
      vec2 _t07A1 = prim /0057<$[2]> (_t079C, _t07A0);
      faceTime0721 = prim ×00BD (_t0799, _t07A1);
    }
  }
  real _t07A2 = 0.e0;
  real _t07A3 = 0.e0;
  vec2 _t07A4 = [_t07A2, _t07A3];
  vec2 _t07A5 = prim -0026<$[2]> (_t07A4, refPos05AA);
  real _t07A6 = 0.1e1;
  real _t07A7 = 0.e0;
  vec2 _t07A8 = [_t07A6, _t07A7];
  real _t07A9 = 0.1e1;
  real _t07AA = 0.e0;
  vec2 _t07AB = [_t07A9, _t07AA];
  real _t07AC = prim ×00BD (dPos05AB, _t07AB);
  vec2 _t07AD = prim /0057<$[2]> (_t07A8, _t07AC);
  real _t07AE = prim ×00BD (_t07A5, _t07AD);
  real _t07AF = -0.1e-15;
  bool _t07B0 = prim >=007E (_t07AE, _t07AF);
  real _t07B1 = 0.e0;
  real _t07B2 = 0.e0;
  vec2 _t07B3 = [_t07B1, _t07B2];
  vec2 _t07B4 = prim -0026<$[2]> (_t07B3, refPos05AA);
  real _t07B5 = 0.1e1;
  real _t07B6 = 0.e0;
  vec2 _t07B7 = [_t07B5, _t07B6];
  real _t07B8 = 0.1e1;
  real _t07B9 = 0.e0;
  vec2 _t07BA = [_t07B8, _t07B9];
  real _t07BB = prim ×00BD (dPos05AB, _t07BA);
  vec2 _t07BC = prim /0057<$[2]> (_t07B7, _t07BB);
  real _t07BD = prim ×00BD (_t07B4, _t07BC);
  bool _t07BE = prim >0080 (time071F, _t07BD);
  real _t07BF = 0.1e1;
  real _t07C0 = 0.e0;
  vec2 _t07C1 = [_t07BF, _t07C0];
  real _t07C2 = prim ×00BD (dPos05AB, _t07C1);
  real _t07C3 = prim |()|00B5<$[]> (_t07C2);
  real _t07C4 = 0.1e-20;
  bool _t07C5 = prim >=007E (_t07C3, _t07C4);
  bool _t07C6 = prim $and01C4 (_t07BE, _t07C5);
  bool _t07C7 = prim $and01C4 (_t07B0, _t07C6);
  if _t07C7 {
    int _t07C8 = 2;
    bool _t07C9 = prim !=0086 (i071E, _t07C8);
    if _t07C9 {
      real _t07CA = 0.e0;
      real _t07CB = 0.e0;
      vec2 _t07CC = [_t07CA, _t07CB];
      vec2 _t07CD = prim -0026<$[2]> (_t07CC, refPos05AA);
      real _t07CE = 0.1e1;
      real _t07CF = 0.e0;
      vec2 _t07D0 = [_t07CE, _t07CF];
      real _t07D1 = 0.1e1;
      real _t07D2 = 0.e0;
      vec2 _t07D3 = [_t07D1, _t07D2];
      real _t07D4 = prim ×00BD (dPos05AB, _t07D3);
      vec2 _t07D5 = prim /0057<$[2]> (_t07D0, _t07D4);
      time071F = prim ×00BD (_t07CD, _t07D5);
      face0720 = 2;
    } else {
      real _t07D6 = 0.e0;
      real _t07D7 = 0.e0;
      vec2 _t07D8 = [_t07D6, _t07D7];
      vec2 _t07D9 = prim -0026<$[2]> (_t07D8, refPos05AA);
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = 0.1e1;
      real _t07DE = 0.e0;
      vec2 _t07DF = [_t07DD, _t07DE];
      real _t07E0 = prim ×00BD (dPos05AB, _t07DF);
      vec2 _t07E1 = prim /0057<$[2]> (_t07DC, _t07E0);
      faceTime0721 = prim ×00BD (_t07D9, _t07E1);
    }
  }
  int _t07E2 = -1;
  bool _t07E3 = prim !=0086 (face0720, _t07E2);
  if _t07E3 {
    real _t07E4 = 0.e0;
    real _t07E5 = prim max0125 (time071F, _t07E4);
    real _t07E6 = (real)face0720;
    vec2 _t07E7 = [_t07E5, _t07E6];
    return _t07E7;
  } else {
    real _t07E8 = -inf;
    bool _t07E9 = prim ==0084 (_t07E8, faceTime0721);
    if _t07E9 {
      real _t07EA = -0.1e1;
      real _t07EB = -0.1e1;
      vec2 _t07EC = [_t07EA, _t07EB];
      return _t07EC;
    } else {
      real _t07ED = (real)i071E;
      vec2 _t07EE = [faceTime0721, _t07ED];
      return _t07EE;
    }
  }
}
function Femdata: Mesh#0 domain07EF (Femdata: Space arg007F0)
{
  Femdata: Mesh _t07F1 = extractFem(arg007F0, Mesh);
  return _t07F1;
}
function Femdata: Space#0 space07F2 (Femdata: FemFunc arg007F3)
{
  Femdata: Space _t07F4 = extractFem(arg007F3, Space);
  return _t07F4;
}
function Femdata: FuncCell#3 funcCell07F5 (Femdata: FemFunc arg007F6, Femdata: MeshCell arg107F7)
{
  int _t07F8 = extractFemItem(CellIndex(MeshCell), int, arg107F7);
  Femdata: FuncCell _t07F9 = loadFem(FuncCell, arg007F6, _t07F8);
  return _t07F9;
}
function int#4 sign0812 (real x0813)
{
  real _t0814 = 0.e0;
  bool _t0815 = prim >0080 (x0813, _t0814);
  if _t0815 {
    int _t0816 = 1;
    return _t0816;
  } else {
    real _t0817 = 0.e0;
    bool _t0818 = prim <007A (x0813, _t0817);
    if _t0818 {
      int _t0819 = -1;
      return _t0819;
    } else {
      int _t081A = 0;
      return _t081A;
    }
  }
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    fc083E = func funcCell07F5 (c0452, cc083C);
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    fc083E = func funcCell07F5 (c0452, cc083C);
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD = func sign0812 (f00862);
    int _t08DE = func sign0812 (f108A6);
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3 = func sign0812 (f00862);
      int _t08E4 = func sign0812 (f108A6);
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        fc083E = func funcCell07F5 (c0452, cc083C);
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function bool#0 !=0476 (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t0479 = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047A = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047B = prim !=0086 (_t0479, _t047A);
  return _t047B;
}
function bool#0 ==047C (Femdata: MeshCell cell10477, Femdata: MeshCell cell10478)
{
  int _t047D = extractFemItem(CellIndex(Mesh), int, cell10477);
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell10478);
  bool _t047F = prim ==0082 (_t047D, _t047E);
  return _t047F;
}
function Femdata: MeshPos#0 findPos0480 (Femdata: Mesh mesh0481, vec2 pos0482)
{
  real _t0483 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0484 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0485 = [_t0483, _t0484];
  newtonInt0486 = 0;
  cellInt0487 = extractFemItem(StartCell(Mesh), int, mesh0481);
  int _t0488 = extractFemItem(NumCell(Mesh), int, mesh0481);
  int _t0489 = 1;
  numCell048A = prim -0024 (_t0488, _t0489);
  yayCells048B = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0481, pos0482 : vec2);
  foreach cellItter048C in yayCells048B {
    cellInt0487 = cellItter048C;
    field(2)[2] _t048D = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
    field(2)[2,2] _t048E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t048D);
    field(2)[2,2] _t048F = prim inv015B<#∞; %2> (_t048E);
    real _t0490 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0491 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0492 = [_t0490, _t0491];
    A0493 = prim @00A5<#∞; %2; $[2,2]> (_t048F, _t0492);
    int _t0494 = 0;
    int _t0495 = 16;
    int[] _t0496 = prim $range01C3 (_t0494, _t0495);
    foreach newtonItter04B9 in _t0496 {
      field(2)[2] _t0497 = femField(mesh0481,cellInt0487,field(2)[2],Transform,);
      field(2)[2] _t0498 = prim -002E<#∞; %2; $[2]> (_t0497, pos0482);
      field(2)[2] _t0499 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0493, _t0498);
      delta049A = prim @00A5<#∞; %2; $[2]> (_t0499, xn0485);
      xn0485 = prim -0026<$[2]> (xn0485, delta049A);
      real _t049B = 0.1e-7;
      real _t049C = 0.1e-7;
      real _t049D = prim *0034 (_t049B, _t049C);
      real _t049E = prim •00CE<$[2]; $[2]; $[]> (delta049A, delta049A);
      bool _t049F = prim >=007E (_t049D, _t049E);
      if _t049F {
        real _t04A0 = 0.1e1;
        real _t04A1 = 0.1e-8;
        real _t04A2 = prim +0017<$[]> (_t04A0, _t04A1);
        real _t04A3 = 0.1e1;
        real _t04A4 = 0.1e1;
        vec2 _t04A5 = [_t04A3, _t04A4];
        real _t04A6 = prim •00CE<$[2]; $[2]; $[]> (_t04A5, xn0485);
        bool _t04A7 = prim >0080 (_t04A2, _t04A6);
        real _t04A8 = 0.1e-8;
        real _t04A9 = 0.1e-8;
        vec2 _t04AA = [_t04A8, _t04A9];
        vec2 _t04AB = prim +0017<$[2]> (_t04AA, xn0485);
        real _t04AC = _t04AB[0];
        real _t04AD = -0.e0;
        bool _t04AE = prim >0080 (_t04AC, _t04AD);
        real _t04AF = 0.1e-8;
        real _t04B0 = 0.1e-8;
        vec2 _t04B1 = [_t04AF, _t04B0];
        vec2 _t04B2 = prim +0017<$[2]> (_t04B1, xn0485);
        real _t04B3 = _t04B2[1];
        real _t04B4 = -0.e0;
        bool _t04B5 = prim >0080 (_t04B3, _t04B4);
        bool _t04B6 = prim $and01C4 (_t04AE, _t04B5);
        bool _t04B7 = prim $and01C4 (_t04A7, _t04B6);
        if _t04B7 {
          Femdata: MeshPos _t04B8 = extractFemItemN((mesh0481, cellInt0487, xn0485, pos0482),AllBuild(MeshPos),);
          return _t04B8;
        }
      }
    }
  }
  string _t04BA = "Bad end 2";
  string _t04BB = "\n";
  print (_t04BA, _t04BB);
  Femdata: MeshPos _t04BC = extractFemItemN((mesh0481),InvalidBuild(MeshPos),);
  return _t04BC;
}
function Femdata: RefCell#0 refcell04BD (Femdata: Mesh arg004BE)
{
  Femdata: RefCell _t04BF = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004BE);
  return _t04BF;
}
function Femdata: MeshCell[]#0 cells04C0 (Femdata: Mesh arg004C1)
{
  Femdata: MeshCell[] _t04C2 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004C1);
  return _t04C2;
}
function Femdata: MeshCell[]#0 cells04C3 (Femdata: Mesh arg004C1)
{
  int _t04C4 = 0;
  int _t04C5 = extractFemItem(NumCell(Mesh), int, arg004C1);
  int[] _t04C6 = prim $range01C3 (_t04C4, _t04C5);
  Femdata: MeshCell[] accum04C9 = {};
  foreach i04C7 in _t04C6 {
    Femdata: MeshCell _t04C8 = loadFem(MeshCell, arg004C1, i04C7);
    accum04C9 = prim @0010<Femdata: MeshCell> (accum04C9, _t04C8);
  }
  return accum04C9;
}
function int#0 numCell04CA (Femdata: Mesh arg004BE)
{
  int _t04CB = extractFemItem(NumCell(Mesh), int, arg004BE);
  return _t04CB;
}
function tensor[2,2,2,2]#0 msh_transform_304CC (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D0 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D0);
  field(2)[2,2,2] _t04D2 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D1);
  field(2)[2,2,2,2] _t04D3 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04D2);
  tensor[2,2,2,2] _t04D4 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04D3, pos04CD);
  return _t04D4;
}
function tensor[2,2,2]#0 msh_transform_204D5 (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04D6 = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04D7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D6);
  field(2)[2,2,2] _t04D8 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04D7);
  tensor[2,2,2] _t04D9 = prim @00A5<#∞; %2; $[2,2,2]> (_t04D8, pos04CD);
  return _t04D9;
}
function tensor[2,2]#0 msh_transform_104DA (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DB = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  field(2)[2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DB);
  tensor[2,2] _t04DD = prim @00A5<#∞; %2; $[2,2]> (_t04DC, pos04CD);
  return _t04DD;
}
function vec2#2 msh_transform_004DE (vec2 pos04CD, int cell04CE, Femdata: Mesh mesh04CF)
{
  field(2)[2] _t04DF = femField(mesh04CF,cell04CE,field(2)[2],Transform,);
  vec2 _t04E0 = prim @00A5<#∞; %2; $[2]> (_t04DF, pos04CD);
  return _t04E0;
}
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0517 (Femdata: MeshPos pos0518)
{
  bool _t0519 = extractFemItem(WorldTest(MeshPos), bool, pos0518);
  if _t0519 {
    vec2 _t051A = extractFemItem(RefPos(MeshPos), vec2, pos0518);
    int _t051B = extractFemItem(CellIndex(MeshPos), int, pos0518);
    Femdata: Mesh _t051C = extractFem(pos0518, Mesh);
    vec2 _t051D = func msh_transform_004DE (_t051A, _t051B, _t051C);
    Femdata: MeshPos _t051E = extractFemItemN((pos0518, _t051D),NewWorld(MeshPos),);
    return _t051E;
  } else {
    return pos0518;
  }
}
function vec2#0 worldPos051F (Femdata: MeshPos pos0518)
{
  vec2 _t0520 = extractFemItem(RefPos(MeshPos), vec2, pos0518);
  int _t0521 = extractFemItem(CellIndex(MeshPos), int, pos0518);
  Femdata: Mesh _t0522 = extractFem(pos0518, Mesh);
  vec2 _t0523 = func msh_transform_004DE (_t0520, _t0521, _t0522);
  return _t0523;
}
function Femdata: MeshPos#0 $exitPos0524 (Femdata: Mesh mesh0525, int cellId0526, vec2 refPos0527, vec2 dPos0528, real[2] time0529)
{
  int _t052A = -1;
  real _t052B = time0529[1];
  int _t052C = prim $r2i01B7 (_t052B);
  int[2] _t052E = func nextCell4052D (_t052C, cellId0526, mesh0525);
  int _t052F = 0;
  int _t0530 = prim $sub01C0<int; %2> (_t052E, _t052F);
  bool _t0531 = prim !=0086 (_t052A, _t0530);
  if _t0531 {
    real _t0532 = time0529[1];
    int _t0533 = prim $r2i01B7 (_t0532);
    int[2] _t0534 = func nextCell4052D (_t0533, cellId0526, mesh0525);
    int _t0535 = 0;
    int _t0536 = prim $sub01C0<int; %2> (_t0534, _t0535);
    real _t0537 = 0.1e1;
    real _t0538 = 0.e0;
    vec2 _t0539 = [_t0537, _t0538];
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec2 _t053C = [_t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    vec2 _t053F = [_t053D, _t053E];
    vec2[3] _t0540 = {_t0539, _t053C, _t053F};
    real _t0541 = time0529[1];
    int _t0542 = prim $r2i01B7 (_t0541);
    int[2] _t0543 = func nextCell4052D (_t0542, cellId0526, mesh0525);
    int _t0544 = 1;
    int _t0545 = prim $sub01C0<int; %2> (_t0543, _t0544);
    vec2 _t0546 = prim $sub01C0<vec2; %3> (_t0540, _t0545);
    real _t0547 = -0.1e1;
    real _t0548 = 0.1e1;
    vec2 _t0549 = [_t0547, _t0548];
    real _t054A = 0.e0;
    real _t054B = 0.1e1;
    vec2 _t054C = [_t054A, _t054B];
    real _t054D = 0.1e1;
    real _t054E = 0.e0;
    vec2 _t054F = [_t054D, _t054E];
    vec2[3] _t0550 = {_t0549, _t054C, _t054F};
    real _t0551 = time0529[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int[2] _t0553 = func nextCell4052D (_t0552, cellId0526, mesh0525);
    int _t0554 = 1;
    int _t0555 = prim $sub01C0<int; %2> (_t0553, _t0554);
    vec2 _t0556 = prim $sub01C0<vec2; %3> (_t0550, _t0555);
    real _t0557 = time0529[0];
    vec2 _t0558 = prim *0036<$[2]> (_t0557, dPos0528);
    vec2 _t0559 = prim +0017<$[2]> (_t0558, refPos0527);
    real _t055A = _t0559[0];
    real _t055B = time0529[0];
    vec2 _t055C = prim *0036<$[2]> (_t055B, dPos0528);
    vec2 _t055D = prim +0017<$[2]> (_t055C, refPos0527);
    real _t055E = _t055D[1];
    real[2] _t055F = {_t055A, _t055E};
    int _t0560 = 1;
    int _t0561 = 1;
    int _t0562 = 0;
    int[3] _t0563 = {_t0560, _t0561, _t0562};
    real _t0564 = time0529[1];
    int _t0565 = prim $r2i01B7 (_t0564);
    int _t0566 = prim $sub01C0<int; %3> (_t0563, _t0565);
    real _t0567 = prim $sub01C0<real; %2> (_t055F, _t0566);
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real[2] _t056A = {_t0568, _t0569};
    real _t056B = 0.e0;
    real _t056C = 0.e0;
    real[2] _t056D = {_t056B, _t056C};
    real _t056E = 0.e0;
    real _t056F = 0.e0;
    real[2] _t0570 = {_t056E, _t056F};
    real[2][3] _t0571 = {_t056A, _t056D, _t0570};
    real _t0572 = time0529[1];
    int _t0573 = prim $r2i01B7 (_t0572);
    real[2] _t0574 = prim $sub01C0<real[2]; %3> (_t0571, _t0573);
    int _t0575 = 1;
    int _t0576 = 1;
    int _t0577 = 0;
    int[3] _t0578 = {_t0575, _t0576, _t0577};
    real _t0579 = time0529[1];
    int _t057A = prim $r2i01B7 (_t0579);
    int _t057B = prim $sub01C0<int; %3> (_t0578, _t057A);
    real _t057C = prim $sub01C0<real; %2> (_t0574, _t057B);
    real _t057D = prim -0026<$[]> (_t0567, _t057C);
    real _t057E = -0.1e1;
    real _t057F = 0.1e1;
    real[2] _t0580 = {_t057E, _t057F};
    real _t0581 = 0.e0;
    real _t0582 = 0.1e1;
    real[2] _t0583 = {_t0581, _t0582};
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real[2] _t0586 = {_t0584, _t0585};
    real[2][3] _t0587 = {_t0580, _t0583, _t0586};
    real _t0588 = time0529[1];
    int _t0589 = prim $r2i01B7 (_t0588);
    real[2] _t058A = prim $sub01C0<real[2]; %3> (_t0587, _t0589);
    int _t058B = 1;
    int _t058C = 1;
    int _t058D = 0;
    int[3] _t058E = {_t058B, _t058C, _t058D};
    real _t058F = time0529[1];
    int _t0590 = prim $r2i01B7 (_t058F);
    int _t0591 = prim $sub01C0<int; %3> (_t058E, _t0590);
    real _t0592 = prim $sub01C0<real; %2> (_t058A, _t0591);
    real _t0593 = prim /0055 (_t057D, _t0592);
    vec2 _t0594 = prim *0038<$[2]> (_t0556, _t0593);
    vec2 _t0595 = prim +0017<$[2]> (_t0546, _t0594);
    real _t0596 = time0529[1];
    int _t0597 = prim $r2i01B7 (_t0596);
    int[2] _t0598 = func nextCell4052D (_t0597, cellId0526, mesh0525);
    int _t0599 = 1;
    int _t059A = prim $sub01C0<int; %2> (_t0598, _t0599);
    Femdata: MeshPos _t059B = extractFemItemN((mesh0525, _t0536, _t0595, _t059A),RefBuild(Mesh),);
    return _t059B;
  } else {
    real _t059C = time0529[0];
    vec2 _t059D = prim *0036<$[2]> (_t059C, dPos0528);
    vec2 _t059E = prim +0017<$[2]> (_t059D, refPos0527);
    Femdata: MeshPos _t059F = extractFemItemN((mesh0525, _t059E),InvalidBuildBoundary(MeshPos),);
    return _t059F;
  }
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
function vec2#0 _enter05A9 (vec2 refPos05AA, vec2 dPos05AB)
{
  real time05AC = +inf;
  int face05AD = -1;
  real faceTime05AE = -inf;
  real _t05AF = 0.1e1;
  real _t05B0 = 0.e0;
  vec2 _t05B1 = [_t05AF, _t05B0];
  vec2 _t05B2 = prim -0026<$[2]> (_t05B1, refPos05AA);
  real _t05B3 = -0.1e1;
  real _t05B4 = 0.1e1;
  vec2 _t05B5 = [_t05B3, _t05B4];
  real _t05B6 = -0.1e1;
  real _t05B7 = 0.1e1;
  vec2 _t05B8 = [_t05B6, _t05B7];
  real _t05B9 = prim ×00BD (dPos05AB, _t05B8);
  vec2 _t05BA = prim /0057<$[2]> (_t05B5, _t05B9);
  real _t05BB = prim ×00BD (_t05B2, _t05BA);
  real _t05BC = -0.1e-15;
  bool _t05BD = prim >=007E (_t05BB, _t05BC);
  real _t05BE = 0.1e1;
  real _t05BF = 0.e0;
  vec2 _t05C0 = [_t05BE, _t05BF];
  vec2 _t05C1 = prim -0026<$[2]> (_t05C0, refPos05AA);
  real _t05C2 = -0.1e1;
  real _t05C3 = 0.1e1;
  vec2 _t05C4 = [_t05C2, _t05C3];
  real _t05C5 = -0.1e1;
  real _t05C6 = 0.1e1;
  vec2 _t05C7 = [_t05C5, _t05C6];
  real _t05C8 = prim ×00BD (dPos05AB, _t05C7);
  vec2 _t05C9 = prim /0057<$[2]> (_t05C4, _t05C8);
  real _t05CA = prim ×00BD (_t05C1, _t05C9);
  bool _t05CB = prim >0080 (time05AC, _t05CA);
  real _t05CC = -0.1e1;
  real _t05CD = 0.1e1;
  vec2 _t05CE = [_t05CC, _t05CD];
  real _t05CF = prim ×00BD (dPos05AB, _t05CE);
  real _t05D0 = prim |()|00B5<$[]> (_t05CF);
  real _t05D1 = 0.1e-20;
  bool _t05D2 = prim >=007E (_t05D0, _t05D1);
  bool _t05D3 = prim $and01C4 (_t05CB, _t05D2);
  bool _t05D4 = prim $and01C4 (_t05BD, _t05D3);
  if _t05D4 {
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.1e-8;
    real _t05D7 = prim +0017<$[]> (_t05D5, _t05D6);
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.1e1;
    vec2 _t05DA = [_t05D8, _t05D9];
    real _t05DB = 0.1e1;
    real _t05DC = 0.e0;
    vec2 _t05DD = [_t05DB, _t05DC];
    vec2 _t05DE = prim -0026<$[2]> (_t05DD, refPos05AA);
    real _t05DF = -0.1e1;
    real _t05E0 = 0.1e1;
    vec2 _t05E1 = [_t05DF, _t05E0];
    real _t05E2 = -0.1e1;
    real _t05E3 = 0.1e1;
    vec2 _t05E4 = [_t05E2, _t05E3];
    real _t05E5 = prim ×00BD (dPos05AB, _t05E4);
    vec2 _t05E6 = prim /0057<$[2]> (_t05E1, _t05E5);
    real _t05E7 = prim ×00BD (_t05DE, _t05E6);
    vec2 _t05E8 = prim *0038<$[2]> (dPos05AB, _t05E7);
    vec2 _t05E9 = prim +0017<$[2]> (refPos05AA, _t05E8);
    real _t05EA = prim •00CE<$[2]; $[2]; $[]> (_t05DA, _t05E9);
    bool _t05EB = prim >0080 (_t05D7, _t05EA);
    real _t05EC = 0.1e-8;
    real _t05ED = 0.1e-8;
    vec2 _t05EE = [_t05EC, _t05ED];
    real _t05EF = 0.1e1;
    real _t05F0 = 0.e0;
    vec2 _t05F1 = [_t05EF, _t05F0];
    vec2 _t05F2 = prim -0026<$[2]> (_t05F1, refPos05AA);
    real _t05F3 = -0.1e1;
    real _t05F4 = 0.1e1;
    vec2 _t05F5 = [_t05F3, _t05F4];
    real _t05F6 = -0.1e1;
    real _t05F7 = 0.1e1;
    vec2 _t05F8 = [_t05F6, _t05F7];
    real _t05F9 = prim ×00BD (dPos05AB, _t05F8);
    vec2 _t05FA = prim /0057<$[2]> (_t05F5, _t05F9);
    real _t05FB = prim ×00BD (_t05F2, _t05FA);
    vec2 _t05FC = prim *0038<$[2]> (dPos05AB, _t05FB);
    vec2 _t05FD = prim +0017<$[2]> (refPos05AA, _t05FC);
    vec2 _t05FE = prim +0017<$[2]> (_t05EE, _t05FD);
    real _t05FF = _t05FE[0];
    real _t0600 = -0.e0;
    bool _t0601 = prim >0080 (_t05FF, _t0600);
    real _t0602 = 0.1e-8;
    real _t0603 = 0.1e-8;
    vec2 _t0604 = [_t0602, _t0603];
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec2 _t0607 = [_t0605, _t0606];
    vec2 _t0608 = prim -0026<$[2]> (_t0607, refPos05AA);
    real _t0609 = -0.1e1;
    real _t060A = 0.1e1;
    vec2 _t060B = [_t0609, _t060A];
    real _t060C = -0.1e1;
    real _t060D = 0.1e1;
    vec2 _t060E = [_t060C, _t060D];
    real _t060F = prim ×00BD (dPos05AB, _t060E);
    vec2 _t0610 = prim /0057<$[2]> (_t060B, _t060F);
    real _t0611 = prim ×00BD (_t0608, _t0610);
    vec2 _t0612 = prim *0038<$[2]> (dPos05AB, _t0611);
    vec2 _t0613 = prim +0017<$[2]> (refPos05AA, _t0612);
    vec2 _t0614 = prim +0017<$[2]> (_t0604, _t0613);
    real _t0615 = _t0614[1];
    real _t0616 = -0.e0;
    bool _t0617 = prim >0080 (_t0615, _t0616);
    bool _t0618 = prim $and01C4 (_t0601, _t0617);
    bool _t0619 = prim $and01C4 (_t05EB, _t0618);
    if _t0619 {
      real _t061A = 0.1e1;
      real _t061B = 0.e0;
      vec2 _t061C = [_t061A, _t061B];
      vec2 _t061D = prim -0026<$[2]> (_t061C, refPos05AA);
      real _t061E = -0.1e1;
      real _t061F = 0.1e1;
      vec2 _t0620 = [_t061E, _t061F];
      real _t0621 = -0.1e1;
      real _t0622 = 0.1e1;
      vec2 _t0623 = [_t0621, _t0622];
      real _t0624 = prim ×00BD (dPos05AB, _t0623);
      vec2 _t0625 = prim /0057<$[2]> (_t0620, _t0624);
      time05AC = prim ×00BD (_t061D, _t0625);
      face05AD = 0;
    }
  }
  real _t0626 = 0.e0;
  real _t0627 = 0.e0;
  vec2 _t0628 = [_t0626, _t0627];
  vec2 _t0629 = prim -0026<$[2]> (_t0628, refPos05AA);
  real _t062A = 0.e0;
  real _t062B = 0.1e1;
  vec2 _t062C = [_t062A, _t062B];
  real _t062D = 0.e0;
  real _t062E = 0.1e1;
  vec2 _t062F = [_t062D, _t062E];
  real _t0630 = prim ×00BD (dPos05AB, _t062F);
  vec2 _t0631 = prim /0057<$[2]> (_t062C, _t0630);
  real _t0632 = prim ×00BD (_t0629, _t0631);
  real _t0633 = -0.1e-15;
  bool _t0634 = prim >=007E (_t0632, _t0633);
  real _t0635 = 0.e0;
  real _t0636 = 0.e0;
  vec2 _t0637 = [_t0635, _t0636];
  vec2 _t0638 = prim -0026<$[2]> (_t0637, refPos05AA);
  real _t0639 = 0.e0;
  real _t063A = 0.1e1;
  vec2 _t063B = [_t0639, _t063A];
  real _t063C = 0.e0;
  real _t063D = 0.1e1;
  vec2 _t063E = [_t063C, _t063D];
  real _t063F = prim ×00BD (dPos05AB, _t063E);
  vec2 _t0640 = prim /0057<$[2]> (_t063B, _t063F);
  real _t0641 = prim ×00BD (_t0638, _t0640);
  bool _t0642 = prim >0080 (time05AC, _t0641);
  real _t0643 = 0.e0;
  real _t0644 = 0.1e1;
  vec2 _t0645 = [_t0643, _t0644];
  real _t0646 = prim ×00BD (dPos05AB, _t0645);
  real _t0647 = prim |()|00B5<$[]> (_t0646);
  real _t0648 = 0.1e-20;
  bool _t0649 = prim >=007E (_t0647, _t0648);
  bool _t064A = prim $and01C4 (_t0642, _t0649);
  bool _t064B = prim $and01C4 (_t0634, _t064A);
  if _t064B {
    real _t064C = 0.1e1;
    real _t064D = 0.1e-8;
    real _t064E = prim +0017<$[]> (_t064C, _t064D);
    real _t064F = 0.1e1;
    real _t0650 = 0.1e1;
    vec2 _t0651 = [_t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = 0.e0;
    vec2 _t0654 = [_t0652, _t0653];
    vec2 _t0655 = prim -0026<$[2]> (_t0654, refPos05AA);
    real _t0656 = 0.e0;
    real _t0657 = 0.1e1;
    vec2 _t0658 = [_t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec2 _t065B = [_t0659, _t065A];
    real _t065C = prim ×00BD (dPos05AB, _t065B);
    vec2 _t065D = prim /0057<$[2]> (_t0658, _t065C);
    real _t065E = prim ×00BD (_t0655, _t065D);
    vec2 _t065F = prim *0038<$[2]> (dPos05AB, _t065E);
    vec2 _t0660 = prim +0017<$[2]> (refPos05AA, _t065F);
    real _t0661 = prim •00CE<$[2]; $[2]; $[]> (_t0651, _t0660);
    bool _t0662 = prim >0080 (_t064E, _t0661);
    real _t0663 = 0.1e-8;
    real _t0664 = 0.1e-8;
    vec2 _t0665 = [_t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec2 _t0668 = [_t0666, _t0667];
    vec2 _t0669 = prim -0026<$[2]> (_t0668, refPos05AA);
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    vec2 _t066C = [_t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec2 _t066F = [_t066D, _t066E];
    real _t0670 = prim ×00BD (dPos05AB, _t066F);
    vec2 _t0671 = prim /0057<$[2]> (_t066C, _t0670);
    real _t0672 = prim ×00BD (_t0669, _t0671);
    vec2 _t0673 = prim *0038<$[2]> (dPos05AB, _t0672);
    vec2 _t0674 = prim +0017<$[2]> (refPos05AA, _t0673);
    vec2 _t0675 = prim +0017<$[2]> (_t0665, _t0674);
    real _t0676 = _t0675[0];
    real _t0677 = -0.e0;
    bool _t0678 = prim >0080 (_t0676, _t0677);
    real _t0679 = 0.1e-8;
    real _t067A = 0.1e-8;
    vec2 _t067B = [_t0679, _t067A];
    real _t067C = 0.e0;
    real _t067D = 0.e0;
    vec2 _t067E = [_t067C, _t067D];
    vec2 _t067F = prim -0026<$[2]> (_t067E, refPos05AA);
    real _t0680 = 0.e0;
    real _t0681 = 0.1e1;
    vec2 _t0682 = [_t0680, _t0681];
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    vec2 _t0685 = [_t0683, _t0684];
    real _t0686 = prim ×00BD (dPos05AB, _t0685);
    vec2 _t0687 = prim /0057<$[2]> (_t0682, _t0686);
    real _t0688 = prim ×00BD (_t067F, _t0687);
    vec2 _t0689 = prim *0038<$[2]> (dPos05AB, _t0688);
    vec2 _t068A = prim +0017<$[2]> (refPos05AA, _t0689);
    vec2 _t068B = prim +0017<$[2]> (_t067B, _t068A);
    real _t068C = _t068B[1];
    real _t068D = -0.e0;
    bool _t068E = prim >0080 (_t068C, _t068D);
    bool _t068F = prim $and01C4 (_t0678, _t068E);
    bool _t0690 = prim $and01C4 (_t0662, _t068F);
    if _t0690 {
      real _t0691 = 0.e0;
      real _t0692 = 0.e0;
      vec2 _t0693 = [_t0691, _t0692];
      vec2 _t0694 = prim -0026<$[2]> (_t0693, refPos05AA);
      real _t0695 = 0.e0;
      real _t0696 = 0.1e1;
      vec2 _t0697 = [_t0695, _t0696];
      real _t0698 = 0.e0;
      real _t0699 = 0.1e1;
      vec2 _t069A = [_t0698, _t0699];
      real _t069B = prim ×00BD (dPos05AB, _t069A);
      vec2 _t069C = prim /0057<$[2]> (_t0697, _t069B);
      time05AC = prim ×00BD (_t0694, _t069C);
      face05AD = 1;
    }
  }
  real _t069D = 0.e0;
  real _t069E = 0.e0;
  vec2 _t069F = [_t069D, _t069E];
  vec2 _t06A0 = prim -0026<$[2]> (_t069F, refPos05AA);
  real _t06A1 = 0.1e1;
  real _t06A2 = 0.e0;
  vec2 _t06A3 = [_t06A1, _t06A2];
  real _t06A4 = 0.1e1;
  real _t06A5 = 0.e0;
  vec2 _t06A6 = [_t06A4, _t06A5];
  real _t06A7 = prim ×00BD (dPos05AB, _t06A6);
  vec2 _t06A8 = prim /0057<$[2]> (_t06A3, _t06A7);
  real _t06A9 = prim ×00BD (_t06A0, _t06A8);
  real _t06AA = -0.1e-15;
  bool _t06AB = prim >=007E (_t06A9, _t06AA);
  real _t06AC = 0.e0;
  real _t06AD = 0.e0;
  vec2 _t06AE = [_t06AC, _t06AD];
  vec2 _t06AF = prim -0026<$[2]> (_t06AE, refPos05AA);
  real _t06B0 = 0.1e1;
  real _t06B1 = 0.e0;
  vec2 _t06B2 = [_t06B0, _t06B1];
  real _t06B3 = 0.1e1;
  real _t06B4 = 0.e0;
  vec2 _t06B5 = [_t06B3, _t06B4];
  real _t06B6 = prim ×00BD (dPos05AB, _t06B5);
  vec2 _t06B7 = prim /0057<$[2]> (_t06B2, _t06B6);
  real _t06B8 = prim ×00BD (_t06AF, _t06B7);
  bool _t06B9 = prim >0080 (time05AC, _t06B8);
  real _t06BA = 0.1e1;
  real _t06BB = 0.e0;
  vec2 _t06BC = [_t06BA, _t06BB];
  real _t06BD = prim ×00BD (dPos05AB, _t06BC);
  real _t06BE = prim |()|00B5<$[]> (_t06BD);
  real _t06BF = 0.1e-20;
  bool _t06C0 = prim >=007E (_t06BE, _t06BF);
  bool _t06C1 = prim $and01C4 (_t06B9, _t06C0);
  bool _t06C2 = prim $and01C4 (_t06AB, _t06C1);
  if _t06C2 {
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.1e-8;
    real _t06C5 = prim +0017<$[]> (_t06C3, _t06C4);
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.1e1;
    vec2 _t06C8 = [_t06C6, _t06C7];
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    vec2 _t06CB = [_t06C9, _t06CA];
    vec2 _t06CC = prim -0026<$[2]> (_t06CB, refPos05AA);
    real _t06CD = 0.1e1;
    real _t06CE = 0.e0;
    vec2 _t06CF = [_t06CD, _t06CE];
    real _t06D0 = 0.1e1;
    real _t06D1 = 0.e0;
    vec2 _t06D2 = [_t06D0, _t06D1];
    real _t06D3 = prim ×00BD (dPos05AB, _t06D2);
    vec2 _t06D4 = prim /0057<$[2]> (_t06CF, _t06D3);
    real _t06D5 = prim ×00BD (_t06CC, _t06D4);
    vec2 _t06D6 = prim *0038<$[2]> (dPos05AB, _t06D5);
    vec2 _t06D7 = prim +0017<$[2]> (refPos05AA, _t06D6);
    real _t06D8 = prim •00CE<$[2]; $[2]; $[]> (_t06C8, _t06D7);
    bool _t06D9 = prim >0080 (_t06C5, _t06D8);
    real _t06DA = 0.1e-8;
    real _t06DB = 0.1e-8;
    vec2 _t06DC = [_t06DA, _t06DB];
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec2 _t06DF = [_t06DD, _t06DE];
    vec2 _t06E0 = prim -0026<$[2]> (_t06DF, refPos05AA);
    real _t06E1 = 0.1e1;
    real _t06E2 = 0.e0;
    vec2 _t06E3 = [_t06E1, _t06E2];
    real _t06E4 = 0.1e1;
    real _t06E5 = 0.e0;
    vec2 _t06E6 = [_t06E4, _t06E5];
    real _t06E7 = prim ×00BD (dPos05AB, _t06E6);
    vec2 _t06E8 = prim /0057<$[2]> (_t06E3, _t06E7);
    real _t06E9 = prim ×00BD (_t06E0, _t06E8);
    vec2 _t06EA = prim *0038<$[2]> (dPos05AB, _t06E9);
    vec2 _t06EB = prim +0017<$[2]> (refPos05AA, _t06EA);
    vec2 _t06EC = prim +0017<$[2]> (_t06DC, _t06EB);
    real _t06ED = _t06EC[0];
    real _t06EE = -0.e0;
    bool _t06EF = prim >0080 (_t06ED, _t06EE);
    real _t06F0 = 0.1e-8;
    real _t06F1 = 0.1e-8;
    vec2 _t06F2 = [_t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec2 _t06F5 = [_t06F3, _t06F4];
    vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos05AA);
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec2 _t06F9 = [_t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    vec2 _t06FC = [_t06FA, _t06FB];
    real _t06FD = prim ×00BD (dPos05AB, _t06FC);
    vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
    real _t06FF = prim ×00BD (_t06F6, _t06FE);
    vec2 _t0700 = prim *0038<$[2]> (dPos05AB, _t06FF);
    vec2 _t0701 = prim +0017<$[2]> (refPos05AA, _t0700);
    vec2 _t0702 = prim +0017<$[2]> (_t06F2, _t0701);
    real _t0703 = _t0702[1];
    real _t0704 = -0.e0;
    bool _t0705 = prim >0080 (_t0703, _t0704);
    bool _t0706 = prim $and01C4 (_t06EF, _t0705);
    bool _t0707 = prim $and01C4 (_t06D9, _t0706);
    if _t0707 {
      real _t0708 = 0.e0;
      real _t0709 = 0.e0;
      vec2 _t070A = [_t0708, _t0709];
      vec2 _t070B = prim -0026<$[2]> (_t070A, refPos05AA);
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      real _t070F = 0.1e1;
      real _t0710 = 0.e0;
      vec2 _t0711 = [_t070F, _t0710];
      real _t0712 = prim ×00BD (dPos05AB, _t0711);
      vec2 _t0713 = prim /0057<$[2]> (_t070E, _t0712);
      time05AC = prim ×00BD (_t070B, _t0713);
      face05AD = 2;
    }
  }
  int _t0714 = -1;
  bool _t0715 = prim !=0086 (face05AD, _t0714);
  if _t0715 {
    real _t0716 = 0.e0;
    real _t0717 = prim max0125 (time05AC, _t0716);
    real _t0718 = (real)face05AD;
    vec2 _t0719 = [_t0717, _t0718];
    return _t0719;
  } else {
    real _t071A = -0.1e1;
    real _t071B = -0.1e1;
    vec2 _t071C = [_t071A, _t071B];
    return _t071C;
  }
}
function vec2#0 _exit071D (vec2 refPos05AA, vec2 dPos05AB, int i071E)
{
  real time071F = +inf;
  int face0720 = -1;
  real faceTime0721 = -inf;
  real _t0722 = 0.1e1;
  real _t0723 = 0.e0;
  vec2 _t0724 = [_t0722, _t0723];
  vec2 _t0725 = prim -0026<$[2]> (_t0724, refPos05AA);
  real _t0726 = -0.1e1;
  real _t0727 = 0.1e1;
  vec2 _t0728 = [_t0726, _t0727];
  real _t0729 = -0.1e1;
  real _t072A = 0.1e1;
  vec2 _t072B = [_t0729, _t072A];
  real _t072C = prim ×00BD (dPos05AB, _t072B);
  vec2 _t072D = prim /0057<$[2]> (_t0728, _t072C);
  real _t072E = prim ×00BD (_t0725, _t072D);
  real _t072F = -0.1e-15;
  bool _t0730 = prim >=007E (_t072E, _t072F);
  real _t0731 = 0.1e1;
  real _t0732 = 0.e0;
  vec2 _t0733 = [_t0731, _t0732];
  vec2 _t0734 = prim -0026<$[2]> (_t0733, refPos05AA);
  real _t0735 = -0.1e1;
  real _t0736 = 0.1e1;
  vec2 _t0737 = [_t0735, _t0736];
  real _t0738 = -0.1e1;
  real _t0739 = 0.1e1;
  vec2 _t073A = [_t0738, _t0739];
  real _t073B = prim ×00BD (dPos05AB, _t073A);
  vec2 _t073C = prim /0057<$[2]> (_t0737, _t073B);
  real _t073D = prim ×00BD (_t0734, _t073C);
  bool _t073E = prim >0080 (time071F, _t073D);
  real _t073F = -0.1e1;
  real _t0740 = 0.1e1;
  vec2 _t0741 = [_t073F, _t0740];
  real _t0742 = prim ×00BD (dPos05AB, _t0741);
  real _t0743 = prim |()|00B5<$[]> (_t0742);
  real _t0744 = 0.1e-20;
  bool _t0745 = prim >=007E (_t0743, _t0744);
  bool _t0746 = prim $and01C4 (_t073E, _t0745);
  bool _t0747 = prim $and01C4 (_t0730, _t0746);
  if _t0747 {
    int _t0748 = 0;
    bool _t0749 = prim !=0086 (i071E, _t0748);
    if _t0749 {
      real _t074A = 0.1e1;
      real _t074B = 0.e0;
      vec2 _t074C = [_t074A, _t074B];
      vec2 _t074D = prim -0026<$[2]> (_t074C, refPos05AA);
      real _t074E = -0.1e1;
      real _t074F = 0.1e1;
      vec2 _t0750 = [_t074E, _t074F];
      real _t0751 = -0.1e1;
      real _t0752 = 0.1e1;
      vec2 _t0753 = [_t0751, _t0752];
      real _t0754 = prim ×00BD (dPos05AB, _t0753);
      vec2 _t0755 = prim /0057<$[2]> (_t0750, _t0754);
      time071F = prim ×00BD (_t074D, _t0755);
      face0720 = 0;
    } else {
      real _t0756 = 0.1e1;
      real _t0757 = 0.e0;
      vec2 _t0758 = [_t0756, _t0757];
      vec2 _t0759 = prim -0026<$[2]> (_t0758, refPos05AA);
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = -0.1e1;
      real _t075E = 0.1e1;
      vec2 _t075F = [_t075D, _t075E];
      real _t0760 = prim ×00BD (dPos05AB, _t075F);
      vec2 _t0761 = prim /0057<$[2]> (_t075C, _t0760);
      faceTime0721 = prim ×00BD (_t0759, _t0761);
    }
  }
  real _t0762 = 0.e0;
  real _t0763 = 0.e0;
  vec2 _t0764 = [_t0762, _t0763];
  vec2 _t0765 = prim -0026<$[2]> (_t0764, refPos05AA);
  real _t0766 = 0.e0;
  real _t0767 = 0.1e1;
  vec2 _t0768 = [_t0766, _t0767];
  real _t0769 = 0.e0;
  real _t076A = 0.1e1;
  vec2 _t076B = [_t0769, _t076A];
  real _t076C = prim ×00BD (dPos05AB, _t076B);
  vec2 _t076D = prim /0057<$[2]> (_t0768, _t076C);
  real _t076E = prim ×00BD (_t0765, _t076D);
  real _t076F = -0.1e-15;
  bool _t0770 = prim >=007E (_t076E, _t076F);
  real _t0771 = 0.e0;
  real _t0772 = 0.e0;
  vec2 _t0773 = [_t0771, _t0772];
  vec2 _t0774 = prim -0026<$[2]> (_t0773, refPos05AA);
  real _t0775 = 0.e0;
  real _t0776 = 0.1e1;
  vec2 _t0777 = [_t0775, _t0776];
  real _t0778 = 0.e0;
  real _t0779 = 0.1e1;
  vec2 _t077A = [_t0778, _t0779];
  real _t077B = prim ×00BD (dPos05AB, _t077A);
  vec2 _t077C = prim /0057<$[2]> (_t0777, _t077B);
  real _t077D = prim ×00BD (_t0774, _t077C);
  bool _t077E = prim >0080 (time071F, _t077D);
  real _t077F = 0.e0;
  real _t0780 = 0.1e1;
  vec2 _t0781 = [_t077F, _t0780];
  real _t0782 = prim ×00BD (dPos05AB, _t0781);
  real _t0783 = prim |()|00B5<$[]> (_t0782);
  real _t0784 = 0.1e-20;
  bool _t0785 = prim >=007E (_t0783, _t0784);
  bool _t0786 = prim $and01C4 (_t077E, _t0785);
  bool _t0787 = prim $and01C4 (_t0770, _t0786);
  if _t0787 {
    int _t0788 = 1;
    bool _t0789 = prim !=0086 (i071E, _t0788);
    if _t0789 {
      real _t078A = 0.e0;
      real _t078B = 0.e0;
      vec2 _t078C = [_t078A, _t078B];
      vec2 _t078D = prim -0026<$[2]> (_t078C, refPos05AA);
      real _t078E = 0.e0;
      real _t078F = 0.1e1;
      vec2 _t0790 = [_t078E, _t078F];
      real _t0791 = 0.e0;
      real _t0792 = 0.1e1;
      vec2 _t0793 = [_t0791, _t0792];
      real _t0794 = prim ×00BD (dPos05AB, _t0793);
      vec2 _t0795 = prim /0057<$[2]> (_t0790, _t0794);
      time071F = prim ×00BD (_t078D, _t0795);
      face0720 = 1;
    } else {
      real _t0796 = 0.e0;
      real _t0797 = 0.e0;
      vec2 _t0798 = [_t0796, _t0797];
      vec2 _t0799 = prim -0026<$[2]> (_t0798, refPos05AA);
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = 0.e0;
      real _t079E = 0.1e1;
      vec2 _t079F = [_t079D, _t079E];
      real _t07A0 = prim ×00BD (dPos05AB, _t079F);
      vec2 _t07A1 = prim /0057<$[2]> (_t079C, _t07A0);
      faceTime0721 = prim ×00BD (_t0799, _t07A1);
    }
  }
  real _t07A2 = 0.e0;
  real _t07A3 = 0.e0;
  vec2 _t07A4 = [_t07A2, _t07A3];
  vec2 _t07A5 = prim -0026<$[2]> (_t07A4, refPos05AA);
  real _t07A6 = 0.1e1;
  real _t07A7 = 0.e0;
  vec2 _t07A8 = [_t07A6, _t07A7];
  real _t07A9 = 0.1e1;
  real _t07AA = 0.e0;
  vec2 _t07AB = [_t07A9, _t07AA];
  real _t07AC = prim ×00BD (dPos05AB, _t07AB);
  vec2 _t07AD = prim /0057<$[2]> (_t07A8, _t07AC);
  real _t07AE = prim ×00BD (_t07A5, _t07AD);
  real _t07AF = -0.1e-15;
  bool _t07B0 = prim >=007E (_t07AE, _t07AF);
  real _t07B1 = 0.e0;
  real _t07B2 = 0.e0;
  vec2 _t07B3 = [_t07B1, _t07B2];
  vec2 _t07B4 = prim -0026<$[2]> (_t07B3, refPos05AA);
  real _t07B5 = 0.1e1;
  real _t07B6 = 0.e0;
  vec2 _t07B7 = [_t07B5, _t07B6];
  real _t07B8 = 0.1e1;
  real _t07B9 = 0.e0;
  vec2 _t07BA = [_t07B8, _t07B9];
  real _t07BB = prim ×00BD (dPos05AB, _t07BA);
  vec2 _t07BC = prim /0057<$[2]> (_t07B7, _t07BB);
  real _t07BD = prim ×00BD (_t07B4, _t07BC);
  bool _t07BE = prim >0080 (time071F, _t07BD);
  real _t07BF = 0.1e1;
  real _t07C0 = 0.e0;
  vec2 _t07C1 = [_t07BF, _t07C0];
  real _t07C2 = prim ×00BD (dPos05AB, _t07C1);
  real _t07C3 = prim |()|00B5<$[]> (_t07C2);
  real _t07C4 = 0.1e-20;
  bool _t07C5 = prim >=007E (_t07C3, _t07C4);
  bool _t07C6 = prim $and01C4 (_t07BE, _t07C5);
  bool _t07C7 = prim $and01C4 (_t07B0, _t07C6);
  if _t07C7 {
    int _t07C8 = 2;
    bool _t07C9 = prim !=0086 (i071E, _t07C8);
    if _t07C9 {
      real _t07CA = 0.e0;
      real _t07CB = 0.e0;
      vec2 _t07CC = [_t07CA, _t07CB];
      vec2 _t07CD = prim -0026<$[2]> (_t07CC, refPos05AA);
      real _t07CE = 0.1e1;
      real _t07CF = 0.e0;
      vec2 _t07D0 = [_t07CE, _t07CF];
      real _t07D1 = 0.1e1;
      real _t07D2 = 0.e0;
      vec2 _t07D3 = [_t07D1, _t07D2];
      real _t07D4 = prim ×00BD (dPos05AB, _t07D3);
      vec2 _t07D5 = prim /0057<$[2]> (_t07D0, _t07D4);
      time071F = prim ×00BD (_t07CD, _t07D5);
      face0720 = 2;
    } else {
      real _t07D6 = 0.e0;
      real _t07D7 = 0.e0;
      vec2 _t07D8 = [_t07D6, _t07D7];
      vec2 _t07D9 = prim -0026<$[2]> (_t07D8, refPos05AA);
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = 0.1e1;
      real _t07DE = 0.e0;
      vec2 _t07DF = [_t07DD, _t07DE];
      real _t07E0 = prim ×00BD (dPos05AB, _t07DF);
      vec2 _t07E1 = prim /0057<$[2]> (_t07DC, _t07E0);
      faceTime0721 = prim ×00BD (_t07D9, _t07E1);
    }
  }
  int _t07E2 = -1;
  bool _t07E3 = prim !=0086 (face0720, _t07E2);
  if _t07E3 {
    real _t07E4 = 0.e0;
    real _t07E5 = prim max0125 (time071F, _t07E4);
    real _t07E6 = (real)face0720;
    vec2 _t07E7 = [_t07E5, _t07E6];
    return _t07E7;
  } else {
    real _t07E8 = -inf;
    bool _t07E9 = prim ==0084 (_t07E8, faceTime0721);
    if _t07E9 {
      real _t07EA = -0.1e1;
      real _t07EB = -0.1e1;
      vec2 _t07EC = [_t07EA, _t07EB];
      return _t07EC;
    } else {
      real _t07ED = (real)i071E;
      vec2 _t07EE = [faceTime0721, _t07ED];
      return _t07EE;
    }
  }
}
function Femdata: Mesh#0 domain07EF (Femdata: Space arg007F0)
{
  Femdata: Mesh _t07F1 = extractFem(arg007F0, Mesh);
  return _t07F1;
}
function Femdata: Space#0 space07F2 (Femdata: FemFunc arg007F3)
{
  Femdata: Space _t07F4 = extractFem(arg007F3, Space);
  return _t07F4;
}
function Femdata: FuncCell#3 funcCell07F5 (Femdata: FemFunc arg007F6, Femdata: MeshCell arg107F7)
{
  int _t07F8 = extractFemItem(CellIndex(MeshCell), int, arg107F7);
  Femdata: FuncCell _t07F9 = loadFem(FuncCell, arg007F6, _t07F8);
  return _t07F9;
}
function int#4 sign0812 (real x0813)
{
  real _t0814 = 0.e0;
  bool _t0815 = prim >0080 (x0813, _t0814);
  if _t0815 {
    int _t0816 = 1;
    return _t0816;
  } else {
    real _t0817 = 0.e0;
    bool _t0818 = prim <007A (x0813, _t0817);
    if _t0818 {
      int _t0819 = -1;
      return _t0819;
    } else {
      int _t081A = 0;
      return _t081A;
    }
  }
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    fc083E = func funcCell07F5 (c0452, cc083C);
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    fc083E = func funcCell07F5 (c0452, cc083C);
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD = func sign0812 (f00862);
    int _t08DE = func sign0812 (f108A6);
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3 = func sign0812 (f00862);
      int _t08E4 = func sign0812 (f108A6);
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        fc083E = func funcCell07F5 (c0452, cc083C);
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    Femdata: FuncCell fc092A;
    int _t092B = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092C = loadFem(FuncCell, c0452, _t092B);
    fc092A = _t092C;
    fc083E = fc092A;
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    Femdata: FuncCell fc092D;
    int _t092E = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092F = loadFem(FuncCell, c0452, _t092E);
    fc092D = _t092F;
    fc083E = fc092D;
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD;
    real _t0948 = 0.e0;
    bool _t0949 = prim >0080 (f00862, _t0948);
    if _t0949 {
      int _t094A = 1;
      _t08DD = _t094A;
    } else {
      real _t094B = 0.e0;
      bool _t094C = prim <007A (f00862, _t094B);
      if _t094C {
        int _t094D = -1;
        _t08DD = _t094D;
      } else {
        int _t094E = 0;
        _t08DD = _t094E;
      }
    }
    int _t08DE;
    real _t0941 = 0.e0;
    bool _t0942 = prim >0080 (f108A6, _t0941);
    if _t0942 {
      int _t0943 = 1;
      _t08DE = _t0943;
    } else {
      real _t0944 = 0.e0;
      bool _t0945 = prim <007A (f108A6, _t0944);
      if _t0945 {
        int _t0946 = -1;
        _t08DE = _t0946;
      } else {
        int _t0947 = 0;
        _t08DE = _t0947;
      }
    }
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3;
      real _t093A = 0.e0;
      bool _t093B = prim >0080 (f00862, _t093A);
      if _t093B {
        int _t093C = 1;
        _t08E3 = _t093C;
      } else {
        real _t093D = 0.e0;
        bool _t093E = prim <007A (f00862, _t093D);
        if _t093E {
          int _t093F = -1;
          _t08E3 = _t093F;
        } else {
          int _t0940 = 0;
          _t08E3 = _t0940;
        }
      }
      int _t08E4;
      real _t0933 = 0.e0;
      bool _t0934 = prim >0080 (f108A6, _t0933);
      if _t0934 {
        int _t0935 = 1;
        _t08E4 = _t0935;
      } else {
        real _t0936 = 0.e0;
        bool _t0937 = prim <007A (f108A6, _t0936);
        if _t0937 {
          int _t0938 = -1;
          _t08E4 = _t0938;
        } else {
          int _t0939 = 0;
          _t08E4 = _t0939;
        }
      }
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        Femdata: FuncCell fc0930;
        int _t0931 = extractFemItem(CellIndex(MeshCell), int, cc083C);
        Femdata: FuncCell _t0932 = loadFem(FuncCell, c0452, _t0931);
        fc0930 = _t0932;
        fc083E = fc0930;
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    Femdata: FuncCell fc092A;
    int _t092B = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092C = loadFem(FuncCell, c0452, _t092B);
    fc092A = _t092C;
    fc083E = fc092A;
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    Femdata: FuncCell fc092D;
    int _t092E = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092F = loadFem(FuncCell, c0452, _t092E);
    fc092D = _t092F;
    fc083E = fc092D;
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD;
    real _t0948 = 0.e0;
    bool _t0949 = prim >0080 (f00862, _t0948);
    if _t0949 {
      int _t094A = 1;
      _t08DD = _t094A;
    } else {
      real _t094B = 0.e0;
      bool _t094C = prim <007A (f00862, _t094B);
      if _t094C {
        int _t094D = -1;
        _t08DD = _t094D;
      } else {
        int _t094E = 0;
        _t08DD = _t094E;
      }
    }
    int _t08DE;
    real _t0941 = 0.e0;
    bool _t0942 = prim >0080 (f108A6, _t0941);
    if _t0942 {
      int _t0943 = 1;
      _t08DE = _t0943;
    } else {
      real _t0944 = 0.e0;
      bool _t0945 = prim <007A (f108A6, _t0944);
      if _t0945 {
        int _t0946 = -1;
        _t08DE = _t0946;
      } else {
        int _t0947 = 0;
        _t08DE = _t0947;
      }
    }
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3;
      real _t093A = 0.e0;
      bool _t093B = prim >0080 (f00862, _t093A);
      if _t093B {
        int _t093C = 1;
        _t08E3 = _t093C;
      } else {
        real _t093D = 0.e0;
        bool _t093E = prim <007A (f00862, _t093D);
        if _t093E {
          int _t093F = -1;
          _t08E3 = _t093F;
        } else {
          int _t0940 = 0;
          _t08E3 = _t0940;
        }
      }
      int _t08E4;
      real _t0933 = 0.e0;
      bool _t0934 = prim >0080 (f108A6, _t0933);
      if _t0934 {
        int _t0935 = 1;
        _t08E4 = _t0935;
      } else {
        real _t0936 = 0.e0;
        bool _t0937 = prim <007A (f108A6, _t0936);
        if _t0937 {
          int _t0938 = -1;
          _t08E4 = _t0938;
        } else {
          int _t0939 = 0;
          _t08E4 = _t0939;
        }
      }
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        Femdata: FuncCell fc0930;
        int _t0931 = extractFemItem(CellIndex(MeshCell), int, cc083C);
        Femdata: FuncCell _t0932 = loadFem(FuncCell, c0452, _t0931);
        fc0930 = _t0932;
        fc083E = fc0930;
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    Femdata: FuncCell fc092A;
    int _t092B = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092C = loadFem(FuncCell, c0452, _t092B);
    fc092A = _t092C;
    fc083E = fc092A;
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui081B, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi081C, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    Femdata: FuncCell fc092D;
    int _t092E = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092F = loadFem(FuncCell, c0452, _t092E);
    fc092D = _t092F;
    fc083E = fc092D;
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui081B, _t08A9, vi081C, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD;
    real _t0948 = 0.e0;
    bool _t0949 = prim >0080 (f00862, _t0948);
    if _t0949 {
      int _t094A = 1;
      _t08DD = _t094A;
    } else {
      real _t094B = 0.e0;
      bool _t094C = prim <007A (f00862, _t094B);
      if _t094C {
        int _t094D = -1;
        _t08DD = _t094D;
      } else {
        int _t094E = 0;
        _t08DD = _t094E;
      }
    }
    int _t08DE;
    real _t0941 = 0.e0;
    bool _t0942 = prim >0080 (f108A6, _t0941);
    if _t0942 {
      int _t0943 = 1;
      _t08DE = _t0943;
    } else {
      real _t0944 = 0.e0;
      bool _t0945 = prim <007A (f108A6, _t0944);
      if _t0945 {
        int _t0946 = -1;
        _t08DE = _t0946;
      } else {
        int _t0947 = 0;
        _t08DE = _t0947;
      }
    }
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3;
      real _t093A = 0.e0;
      bool _t093B = prim >0080 (f00862, _t093A);
      if _t093B {
        int _t093C = 1;
        _t08E3 = _t093C;
      } else {
        real _t093D = 0.e0;
        bool _t093E = prim <007A (f00862, _t093D);
        if _t093E {
          int _t093F = -1;
          _t08E3 = _t093F;
        } else {
          int _t0940 = 0;
          _t08E3 = _t0940;
        }
      }
      int _t08E4;
      real _t0933 = 0.e0;
      bool _t0934 = prim >0080 (f108A6, _t0933);
      if _t0934 {
        int _t0935 = 1;
        _t08E4 = _t0935;
      } else {
        real _t0936 = 0.e0;
        bool _t0937 = prim <007A (f108A6, _t0936);
        if _t0937 {
          int _t0938 = -1;
          _t08E4 = _t0938;
        } else {
          int _t0939 = 0;
          _t08E4 = _t0939;
        }
      }
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui081B, _t08EC, vi081C, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui081B, _t0916, vi081C, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        Femdata: FuncCell fc0930;
        int _t0931 = extractFemItem(CellIndex(MeshCell), int, cc083C);
        Femdata: FuncCell _t0932 = loadFem(FuncCell, c0452, _t0931);
        fc0930 = _t0932;
        fc083E = fc0930;
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  int ui0950;
  int vi094F;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    Femdata: FuncCell fc092A;
    int _t092B = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092C = loadFem(FuncCell, c0452, _t092B);
    fc092A = _t092C;
    fc083E = fc092A;
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
    ui0950 = ui081B;
    vi094F = vi081C;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui0950, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi094F, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    Femdata: FuncCell fc092D;
    int _t092E = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092F = loadFem(FuncCell, c0452, _t092E);
    fc092D = _t092F;
    fc083E = fc092D;
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui0950, _t08A9, vi094F, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD;
    real _t0948 = 0.e0;
    bool _t0949 = prim >0080 (f00862, _t0948);
    if _t0949 {
      int _t094A = 1;
      _t08DD = _t094A;
    } else {
      real _t094B = 0.e0;
      bool _t094C = prim <007A (f00862, _t094B);
      if _t094C {
        int _t094D = -1;
        _t08DD = _t094D;
      } else {
        int _t094E = 0;
        _t08DD = _t094E;
      }
    }
    int _t08DE;
    real _t0941 = 0.e0;
    bool _t0942 = prim >0080 (f108A6, _t0941);
    if _t0942 {
      int _t0943 = 1;
      _t08DE = _t0943;
    } else {
      real _t0944 = 0.e0;
      bool _t0945 = prim <007A (f108A6, _t0944);
      if _t0945 {
        int _t0946 = -1;
        _t08DE = _t0946;
      } else {
        int _t0947 = 0;
        _t08DE = _t0947;
      }
    }
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3;
      real _t093A = 0.e0;
      bool _t093B = prim >0080 (f00862, _t093A);
      if _t093B {
        int _t093C = 1;
        _t08E3 = _t093C;
      } else {
        real _t093D = 0.e0;
        bool _t093E = prim <007A (f00862, _t093D);
        if _t093E {
          int _t093F = -1;
          _t08E3 = _t093F;
        } else {
          int _t0940 = 0;
          _t08E3 = _t0940;
        }
      }
      int _t08E4;
      real _t0933 = 0.e0;
      bool _t0934 = prim >0080 (f108A6, _t0933);
      if _t0934 {
        int _t0935 = 1;
        _t08E4 = _t0935;
      } else {
        real _t0936 = 0.e0;
        bool _t0937 = prim <007A (f108A6, _t0936);
        if _t0937 {
          int _t0938 = -1;
          _t08E4 = _t0938;
        } else {
          int _t0939 = 0;
          _t08E4 = _t0939;
        }
      }
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui0950, _t08EC, vi094F, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui0950, _t0916, vi094F, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        Femdata: FuncCell fc0930;
        int _t0931 = extractFemItem(CellIndex(MeshCell), int, cc083C);
        Femdata: FuncCell _t0932 = loadFem(FuncCell, c0452, _t0931);
        fc0930 = _t0932;
        fc083E = fc0930;
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0444;
input FemData:Space 0b0450_intermedateGlobal0451;
input FemData:FemFunc 0c0452_intermedateGlobal0453;
input real isoval0454 = <default>;
input real thick0455 = <default>;
input vec3 camEye0456 = <default>;
input vec3 camAt045A = <default>;
input vec3 camUp045E = <default>;
input real camFOV0462 = <default>;
input int iresU0463 = <default>;
input int iresV0464 = <default>;
input real camNear0465 = <default>;
input real camFar0466 = <default>;
input real refStep0467 = <default>;
input real rayStep0468 = <default>;
input vec3 lightVsp0469 = <default>;
input real phongKa046D = <default>;
input real phongKd046E = <default>;
input bool debug046F = <default>;
input int debugU0470 = <default>;
input int debugV0471 = <default>;
input real eps0472 = <default>;
input int[] indecies0473;
input vec2[] times0474;
input int[] cells0475;
constants {
  isoval0454 = 0.2e0;
  thick0455 = 0.7e-1;
  real _t0457 = -0.5e0;
  real _t0458 = 0.5e0;
  real _t0459 = 0.5e0;
  camEye0456 = [_t0457, _t0458, _t0459];
  real _t045B = 0.5e0;
  real _t045C = 0.5e0;
  real _t045D = 0.5e0;
  camAt045A = [_t045B, _t045C, _t045D];
  real _t045F = 0.e0;
  real _t0460 = 0.e0;
  real _t0461 = 0.1e1;
  camUp045E = [_t045F, _t0460, _t0461];
  camFOV0462 = 0.137e2;
  iresU0463 = 10;
  iresV0464 = 10;
  camNear0465 = -0.2e1;
  camFar0466 = 0.5e1;
  refStep0467 = 0.1e1;
  rayStep0468 = 0.1e-1;
  real _t046A = 0.e0;
  real _t046B = 0.e0;
  real _t046C = 0.1e1;
  lightVsp0469 = [_t046A, _t046B, _t046C];
  phongKa046D = 0.1e0;
  phongKd046E = 0.9e0;
  debug046F = false;
  debugU0470 = 8;
  debugV0471 = 2;
  eps0472 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0445;
global Femdata: Space b0450;
global Femdata: FemFunc c0452;
global real camDist07FB;
global vec3 camN07FF;
global vec3 camU0801;
global vec3 camV0802;
global real camVmax0808;
global real camUmax080C;
global vec3 rayVec0811;
function Femdata: MeshPos#7 _msh_newtonInverse04E1 (vec2 pos04E2, int cellInt04E3, Femdata: Mesh mesh04E4)
{
  real _t04E5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04E7 = [_t04E5, _t04E6];
  field(2)[2] _t04E8 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
  field(2)[2,2] _t04E9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E8);
  field(2)[2,2] _t04EA = prim inv015B<#∞; %2> (_t04E9);
  real _t04EB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04ED = [_t04EB, _t04EC];
  A04EE = prim @00A5<#∞; %2; $[2,2]> (_t04EA, _t04ED);
  int _t04EF = 0;
  int _t04F0 = 16;
  int[] _t04F1 = prim $range01C3 (_t04EF, _t04F0);
  foreach itter0515 in _t04F1 {
    field(2)[2] _t04F2 = femField(mesh04E4,cellInt04E3,field(2)[2],Transform,);
    field(2)[2] _t04F3 = prim -002E<#∞; %2; $[2]> (_t04F2, pos04E2);
    field(2)[2] _t04F4 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04EE, _t04F3);
    delta04F5 = prim @00A5<#∞; %2; $[2]> (_t04F4, xn04E7);
    xn04E7 = prim -0026<$[2]> (xn04E7, delta04F5);
    real _t04F6 = 0.1e-7;
    real _t04F7 = 0.1e-7;
    real _t04F8 = prim *0034 (_t04F6, _t04F7);
    real _t04F9 = prim •00CE<$[2]; $[2]; $[]> (delta04F5, delta04F5);
    bool _t04FA = prim >=007E (_t04F8, _t04F9);
    if _t04FA {
      real _t04FB = 0.1e1;
      real _t04FC = 0.1e-8;
      real _t04FD = prim +0017<$[]> (_t04FB, _t04FC);
      real _t04FE = 0.1e1;
      real _t04FF = 0.1e1;
      vec2 _t0500 = [_t04FE, _t04FF];
      real _t0501 = prim •00CE<$[2]; $[2]; $[]> (_t0500, xn04E7);
      bool _t0502 = prim >0080 (_t04FD, _t0501);
      real _t0503 = 0.1e-8;
      real _t0504 = 0.1e-8;
      vec2 _t0505 = [_t0503, _t0504];
      vec2 _t0506 = prim +0017<$[2]> (_t0505, xn04E7);
      real _t0507 = _t0506[0];
      real _t0508 = -0.e0;
      bool _t0509 = prim >0080 (_t0507, _t0508);
      real _t050A = 0.1e-8;
      real _t050B = 0.1e-8;
      vec2 _t050C = [_t050A, _t050B];
      vec2 _t050D = prim +0017<$[2]> (_t050C, xn04E7);
      real _t050E = _t050D[1];
      real _t050F = -0.e0;
      bool _t0510 = prim >0080 (_t050E, _t050F);
      bool _t0511 = prim $and01C4 (_t0509, _t0510);
      bool _t0512 = prim $and01C4 (_t0502, _t0511);
      if _t0512 {
        Femdata: MeshPos _t0513 = extractFemItemN((mesh04E4, cellInt04E3, xn04E7, pos04E2),AllBuild(MeshPos),);
        return _t0513;
      } else {
        Femdata: MeshPos _t0514 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
        return _t0514;
      }
    }
  }
  Femdata: MeshPos _t0516 = extractFemItemN((mesh04E4),InvalidBuild(MeshPos),);
  return _t0516;
}
function int[2]#5 nextCell4052D (int faceIdx05A0, int cell05A1, Femdata: Mesh mesh05A2)
{
  int _t05A3 = 6;
  int _t05A4 = prim *0033 (cell05A1, _t05A3);
  int _t05A5 = 2;
  int _t05A6 = prim *0033 (faceIdx05A0, _t05A5);
  int _t05A7 = prim +0015 (_t05A4, _t05A6);
  int[2] _t05A8 = extractFemItemN((mesh05A2, _t05A7),CellFaceCell(Mesh),);
  return _t05A8;
}
globalInit {
  int _t0448 = 0;
  int _t0446 = 1;
  int _t044A = extractFemItem(NumCell(Mesh), int, a0444);
  int _t0449 = prim -0024 (_t044A, _t0446);
  int[] _t044D = prim $range01C3 (_t0448, _t0449);
  Femdata: MeshCell[] _t044E = {};
  foreach _t044C in _t044D {
    Femdata: MeshCell _t044F = loadFem(MeshCell, a0444, _t044C);
    _t044E = prim @0010<Femdata: MeshCell> (_t044E, _t044F);
  }
  0cell_a0445 = _t044E;
  b0450 = loadFem(Space, 0b0450_intermedateGlobal0451, a0444);
  c0452 = loadFem(FemFunc, 0c0452_intermedateGlobal0453, b0450);
  vec3 _t07FA = prim -0026<$[3]> (camAt045A, camEye0456);
  camDist07FB = prim |()|00B5<$[3]> (_t07FA);
  vec3 _t07FE = prim -0026<$[3]> (camAt045A, camEye0456);
  camN07FF = prim normalize0137<$[3]> (_t07FE);
  vec3 _t0800 = prim ×00BE (camN07FF, camUp045E);
  camU0801 = prim normalize0137<$[3]> (_t0800);
  camV0802 = prim ×00BE (camU0801, camN07FF);
  real _t0803 = 0.314159265358979323846264338327950288e1;
  real _t0804 = prim *0034 (camFOV0462, _t0803);
  real _t0805 = 0.36e3;
  real _t0806 = prim /0055 (_t0804, _t0805);
  real _t0807 = prim tan0179 (_t0806);
  camVmax0808 = prim *0034 (_t0807, camDist07FB);
  real _t0809 = (real)iresU0463;
  real _t080A = prim *0034 (camVmax0808, _t0809);
  real _t080B = (real)iresV0464;
  camUmax080C = prim /0055 (_t080A, _t080B);
  rayVec0811 = camN07FF;
}
strand ray (int ui081B, int vi081C) {
  real rayU081D;
  real rayV0824;
  vec3 UV082B;
  vec3 rayOrig082E;
  int offset082F;
  int len0832;
  int itter0837;
  int idx0838;
  vec2 interval0839;
  real s083A;
  real e083B;
  Femdata: MeshCell cc083C;
  Femdata: FuncCell fc083E;
  output vec2[] intervals083F;
  output tensor[2,3][] sints0842;
  output Femdata: MeshCell[] newCells0845;
  int count0848;
  int totalCount0849;
  int ui0950;
  int vi094F;
  {
    real _t081E = prim unary -008B<$[]> (camUmax080C);
    real _t081F = -0.5e0;
    real _t0820 = (real)ui081B;
    real _t0821 = (real)iresU0463;
    real _t0822 = 0.5e0;
    real _t0823 = prim -0026<$[]> (_t0821, _t0822);
    rayU081D = prim lerp0098<$[]> (_t081E, camUmax080C, _t081F, _t0820, _t0823);
    real _t0825 = prim unary -008B<$[]> (camVmax0808);
    real _t0826 = -0.5e0;
    real _t0827 = (real)vi081C;
    real _t0828 = (real)iresV0464;
    real _t0829 = 0.5e0;
    real _t082A = prim -0026<$[]> (_t0828, _t0829);
    rayV0824 = prim lerp0098<$[]> (_t0825, camVmax0808, _t0826, _t0827, _t082A);
    vec3 _t082C = prim *0036<$[3]> (rayU081D, camU0801);
    vec3 _t082D = prim *0036<$[3]> (rayV0824, camV0802);
    UV082B = prim +0017<$[3]> (_t082C, _t082D);
    rayOrig082E = prim +0017<$[3]> (camEye0456, UV082B);
    int _t0830 = prim *0033 (ui081B, iresV0464);
    int _t0831 = prim +0015 (_t0830, vi081C);
    offset082F = prim $dynsub01C2<int> (indecies0473, _t0831);
    int _t0833 = prim *0033 (iresU0463, iresV0464);
    int _t0834 = prim *0033 (ui081B, iresV0464);
    int _t0835 = prim +0015 (_t0833, _t0834);
    int _t0836 = prim +0015 (_t0835, vi081C);
    len0832 = prim $dynsub01C2<int> (indecies0473, _t0836);
    itter0837 = 0;
    idx0838 = prim +0015 (offset082F, itter0837);
    interval0839 = prim $dynsub01C2<vec2> (times0474, idx0838);
    s083A = interval0839[0];
    e083B = interval0839[1];
    int _t083D = 0;
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t083D);
    Femdata: FuncCell fc092A;
    int _t092B = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092C = loadFem(FuncCell, c0452, _t092B);
    fc092A = _t092C;
    fc083E = fc092A;
    vec2[0] _t0840 = {};
    vec2[] _t0841 = (vec2[])_t0840;
    intervals083F = _t0841;
    tensor[2,3][0] _t0843 = {};
    tensor[2,3][] _t0844 = (tensor[2,3][])_t0843;
    sints0842 = _t0844;
    Femdata: MeshCell[0] _t0846 = {};
    Femdata: MeshCell[] _t0847 = (Femdata: MeshCell[])_t0846;
    newCells0845 = _t0847;
    count0848 = 0;
    totalCount0849 = 0;
    ui0950 = ui081B;
    vi094F = vi081C;
  }
  start
  {
    if debug046F {
      bool _t084A;
      bool _t084B = prim !=0086 (ui0950, debugU0470);
      if _t084B {
        _t084A = true;
      } else {
        _t084A = prim !=0086 (vi094F, debugV0471);
      }
      if _t084A {
        stabilize;
      }
    }
    int _t084C = 0;
    bool _t084D = prim ==0082 (len0832, _t084C);
    if _t084D {
      stabilize;
    }
    int _t084E = prim $dynsub01C2<int> (cells0475, idx0838);
    cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t084E);
    Femdata: FuncCell fc092D;
    int _t092E = extractFemItem(CellIndex(MeshCell), int, cc083C);
    Femdata: FuncCell _t092F = loadFem(FuncCell, c0452, _t092E);
    fc092D = _t092F;
    fc083E = fc092D;
  }
  update
  {
    int _t084F = 1;
    bool _t0850 = prim <0079 (len0832, _t084F);
    if _t0850 {
      stabilize;
    }
    vec3 _t0851 = prim *0038<$[3]> (rayVec0811, s083A);
    vec3 rayStart0852 = prim +0017<$[3]> (rayOrig082E, _t0851);
    real _t0853 = rayStart0852[0];
    real _t0854 = rayStart0852[1];
    vec2 project0855 = [_t0853, _t0854];
    Femdata: FemFunc _t0856 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0857 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0858 = extractFem(_t0857, Space);
    int _t0859 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t085A = femField(_t0856,_t0859,field(2)[],refField,);
    Femdata: Mesh _t085B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t085C = extractFem(cc083C, Mesh);
    int _t085D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t085E = femField(_t085B,_t085D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t085F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t085A, _t085E);
    real _t0860 = prim @00A5<#∞; %2; $[]> (_t085F, project0855);
    real _t0861 = rayStart0852[2];
    real f00862 = prim -0026<$[]> (_t0860, _t0861);
    real _t0863 = rayVec0811[0];
    real _t0864 = rayVec0811[1];
    vec2 _t0865 = [_t0863, _t0864];
    Femdata: FemFunc _t0866 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0867 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0868 = extractFem(_t0867, Space);
    int _t0869 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t086A = femField(_t0866,_t0869,field(2)[],refField,);
    Femdata: Mesh _t086B = extractFem(cc083C, Mesh);
    Femdata: Mesh _t086C = extractFem(cc083C, Mesh);
    int _t086D = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t086E = femField(_t086B,_t086D,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t086F = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t086A, _t086E);
    field(2)[2] _t0870 = prim ∇00A8<#∞; %2> (_t086F);
    vec2 _t0871 = prim @00A5<#∞; %2; $[2]> (_t0870, project0855);
    real _t0872 = prim •00CE<$[2]; $[2]; $[]> (_t0865, _t0871);
    real _t0873 = rayVec0811[2];
    real _t0874 = prim -0026<$[]> (_t0872, _t0873);
    real _t0875 = prim |()|00B5<$[]> (_t0874);
    Femdata: Mesh _t0876 = extractFem(cc083C, Mesh);
    int _t0877 = extractFemItem(CellIndex(Mesh), int, cc083C);
    real _t0878 = extractFemItem2(CellData(G)(Mesh), int, _t0876, _t0877 : int);
    real _t0879 = prim /0055 (_t0875, _t0878);
    real _t087A = prim -0026<$[]> (e083B, s083A);
    real gradEps087B = prim min0127 (_t0879, _t087A);
    string _t087C = "hmmmm:";
    Femdata: FemFunc _t087D = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t087E = extractFem(fc083E, FemFunc);
    Femdata: Space _t087F = extractFem(_t087E, Space);
    int _t0880 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0881 = femField(_t087D,_t0880,field(2)[],refField,);
    Femdata: Mesh _t0882 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0883 = extractFem(cc083C, Mesh);
    int _t0884 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t0885 = femField(_t0882,_t0884,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t0886 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0881, _t0885);
    field(2)[2] _t0887 = prim ∇00A8<#∞; %2> (_t0886);
    vec2 _t0888 = prim @00A5<#∞; %2; $[2]> (_t0887, project0855);
    string _t0889 = "\n";
    print (_t087C, _t0888, _t0889);
    string _t088A = "fc dofs:";
    Femdata: FemFunc _t088B = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t088C = extractFem(fc083E, FemFunc);
    Femdata: Space _t088D = extractFem(_t088C, Space);
    int _t088E = extractFemItem(CellIndex(FuncCell), int, fc083E);
    int[6] _t088F = extractFemItem2(ExtractIndices(Space), int, _t088D, _t088E : int);
    tensor[6] _t0890 = extractFemItem2(ExtractDofsSeq(FemFunc), int[6], _t088B, _t088F : int[6]);
    string _t0891 = "\n";
    print (_t088A, _t0890, _t0891);
    Femdata: FemFunc _t0892 = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t0893 = extractFem(fc083E, FemFunc);
    Femdata: Space _t0894 = extractFem(_t0893, Space);
    int _t0895 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t0896 = femField(_t0892,_t0895,field(2)[],refField,);
    Femdata: Mesh _t0897 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t0898 = extractFem(cc083C, Mesh);
    int _t0899 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t089A = femField(_t0897,_t0899,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t089B = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0896, _t089A);
    real _t089C = rayVec0811[0];
    real _t089D = rayVec0811[1];
    vec2 _t089E = [_t089C, _t089D];
    vec2 _t089F = prim *0036<$[2]> (gradEps087B, _t089E);
    vec2 _t08A0 = prim +0017<$[2]> (project0855, _t089F);
    real _t08A1 = prim @00A5<#∞; %2; $[]> (_t089B, _t08A0);
    real _t08A2 = rayStart0852[2];
    real _t08A3 = prim -0026<$[]> (_t08A1, _t08A2);
    real _t08A4 = rayVec0811[2];
    real _t08A5 = prim *0034 (gradEps087B, _t08A4);
    real f108A6 = prim -0026<$[]> (_t08A3, _t08A5);
    string _t08A7 = "=========================\n";
    print (_t08A7);
    string _t08A8 = "Ui/Vi:";
    string _t08A9 = "/";
    string _t08AA = "\n";
    print (_t08A8, ui0950, _t08A9, vi094F, _t08AA);
    string _t08AB = "Cell:";
    string _t08AC = "\n";
    print (_t08AB, cc083C, _t08AC);
    string _t08AD = "hess:";
    Femdata: FemFunc _t08AE = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08AF = extractFem(fc083E, FemFunc);
    Femdata: Space _t08B0 = extractFem(_t08AF, Space);
    int _t08B1 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08B2 = femField(_t08AE,_t08B1,field(2)[],refField,);
    Femdata: Mesh _t08B3 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08B4 = extractFem(cc083C, Mesh);
    int _t08B5 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08B7 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08B2, _t08B6);
    field(2)[2] _t08B8 = prim ∇00A8<#∞; %2> (_t08B7);
    field(2)[2,2] _t08B9 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B8);
    tensor[2,2] _t08BA = prim @00A5<#∞; %2; $[2,2]> (_t08B9, project0855);
    string _t08BB = "\n";
    string _t08BC = "norm:";
    Femdata: FemFunc _t08BD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08BE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08BF = extractFem(_t08BE, Space);
    int _t08C0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08C1 = femField(_t08BD,_t08C0,field(2)[],refField,);
    Femdata: Mesh _t08C2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08C3 = extractFem(cc083C, Mesh);
    int _t08C4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08C5 = femField(_t08C2,_t08C4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08C6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08C1, _t08C5);
    field(2)[2] _t08C7 = prim ∇00A8<#∞; %2> (_t08C6);
    field(2)[2,2] _t08C8 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08C7);
    tensor[2,2] _t08C9 = prim @00A5<#∞; %2; $[2,2]> (_t08C8, project0855);
    real _t08CA = prim |()|00B5<$[2,2]> (_t08C9);
    string _t08CB = "\n";
    print (_t08AD, _t08BA, _t08BB, _t08BC, _t08CA, _t08CB);
    string _t08CC = "Grad:";
    Femdata: FemFunc _t08CD = extractFem(fc083E, FemFunc);
    Femdata: FemFunc _t08CE = extractFem(fc083E, FemFunc);
    Femdata: Space _t08CF = extractFem(_t08CE, Space);
    int _t08D0 = extractFemItem(CellIndex(FuncCell), int, fc083E);
    field(2)[] _t08D1 = femField(_t08CD,_t08D0,field(2)[],refField,);
    Femdata: Mesh _t08D2 = extractFem(cc083C, Mesh);
    Femdata: Mesh _t08D3 = extractFem(cc083C, Mesh);
    int _t08D4 = extractFemItem(CellIndex(MeshCell), int, cc083C);
    field(2)[2] _t08D5 = femField(_t08D2,_t08D4,field(2)[2],InvTransform,_msh_newtonInverse04E1 );
    field(2)[] _t08D6 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t08D1, _t08D5);
    field(2)[2] _t08D7 = prim ∇00A8<#∞; %2> (_t08D6);
    vec2 _t08D8 = prim @00A5<#∞; %2; $[2]> (_t08D7, project0855);
    string _t08D9 = "\n";
    print (_t08CC, _t08D8, _t08D9);
    string _t08DA = "vals:";
    vec2 _t08DB = [f00862, f108A6];
    string _t08DC = "\n";
    print (_t08DA, _t08DB, _t08DC);
    int _t08DD;
    real _t0948 = 0.e0;
    bool _t0949 = prim >0080 (f00862, _t0948);
    if _t0949 {
      int _t094A = 1;
      _t08DD = _t094A;
    } else {
      real _t094B = 0.e0;
      bool _t094C = prim <007A (f00862, _t094B);
      if _t094C {
        int _t094D = -1;
        _t08DD = _t094D;
      } else {
        int _t094E = 0;
        _t08DD = _t094E;
      }
    }
    int _t08DE;
    real _t0941 = 0.e0;
    bool _t0942 = prim >0080 (f108A6, _t0941);
    if _t0942 {
      int _t0943 = 1;
      _t08DE = _t0943;
    } else {
      real _t0944 = 0.e0;
      bool _t0945 = prim <007A (f108A6, _t0944);
      if _t0945 {
        int _t0946 = -1;
        _t08DE = _t0946;
      } else {
        int _t0947 = 0;
        _t08DE = _t0947;
      }
    }
    int _t08DF = prim *0033 (_t08DD, _t08DE);
    int _t08E0 = 0;
    bool _t08E1 = prim >007F (_t08DF, _t08E0);
    bool _t08E2 = prim !00BC (_t08E1);
    if _t08E2 {
      int _t08E3;
      real _t093A = 0.e0;
      bool _t093B = prim >0080 (f00862, _t093A);
      if _t093B {
        int _t093C = 1;
        _t08E3 = _t093C;
      } else {
        real _t093D = 0.e0;
        bool _t093E = prim <007A (f00862, _t093D);
        if _t093E {
          int _t093F = -1;
          _t08E3 = _t093F;
        } else {
          int _t0940 = 0;
          _t08E3 = _t0940;
        }
      }
      int _t08E4;
      real _t0933 = 0.e0;
      bool _t0934 = prim >0080 (f108A6, _t0933);
      if _t0934 {
        int _t0935 = 1;
        _t08E4 = _t0935;
      } else {
        real _t0936 = 0.e0;
        bool _t0937 = prim <007A (f108A6, _t0936);
        if _t0937 {
          int _t0938 = -1;
          _t08E4 = _t0938;
        } else {
          int _t0939 = 0;
          _t08E4 = _t0939;
        }
      }
      int _t08E5 = prim *0033 (_t08E3, _t08E4);
      int _t08E6 = 0;
      bool _t08E7 = prim ==0082 (_t08E5, _t08E6);
      if _t08E7 {
        string _t08E8 = "Warn: 0 update\n";
        print (_t08E8);
      }
      string _t08E9 = "update with interval:";
      string _t08EA = "\n";
      print (_t08E9, gradEps087B, _t08EA);
      string _t08EB = "Pixel Ui/Vi:";
      string _t08EC = "/";
      string _t08ED = "\n";
      print (_t08EB, ui0950, _t08EC, vi094F, _t08ED);
      string _t08EE = "Count:";
      string _t08EF = "\n";
      print (_t08EE, count0848, _t08EF);
      int _t08F0 = 1;
      count0848 = prim +0015 (count0848, _t08F0);
      int _t08F1 = 1;
      totalCount0849 = prim +0015 (totalCount0849, _t08F1);
      string _t08F2 = "Vals I:";
      vec2 _t08F3 = [f00862, f108A6];
      string _t08F4 = "\n";
      print (_t08F2, _t08F3, _t08F4);
      string _t08F5 = "New interval:";
      real _t08F6 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08F7 = [s083A, _t08F6];
      string _t08F8 = "\n";
      print (_t08F5, _t08F7, _t08F8);
      real _t08F9 = prim +0017<$[]> (s083A, gradEps087B);
      vec2 _t08FA = [s083A, _t08F9];
      intervals083F = prim @0010<vec2> (intervals083F, _t08FA);
      vec3 _t08FB = prim *0038<$[3]> (rayVec0811, s083A);
      vec3 _t08FC = prim +0017<$[3]> (rayOrig082E, _t08FB);
      real _t08FD = prim +0017<$[]> (s083A, gradEps087B);
      vec3 _t08FE = prim *0038<$[3]> (rayVec0811, _t08FD);
      vec3 _t08FF = prim +0017<$[3]> (rayOrig082E, _t08FE);
      tensor[2,3] _t0900 = [_t08FC, _t08FF];
      sints0842 = prim @0010<tensor[2,3]> (sints0842, _t0900);
      newCells0845 = prim @0010<Femdata: MeshCell> (newCells0845, cc083C);
      s083A = prim +0017<$[]> (s083A, gradEps087B);
    } else {
      real _t0901 = prim |()|00B5<$[]> (f00862);
      real _t0902 = 0.2e1;
      Femdata: Mesh _t0903 = extractFem(cc083C, Mesh);
      int _t0904 = extractFemItem(CellIndex(Mesh), int, cc083C);
      real _t0905 = extractFemItem2(CellData(L)(Mesh), int, _t0903, _t0904 : int);
      real _t0906 = prim *0034 (_t0902, _t0905);
      real _t0907 = prim /0055 (_t0901, _t0906);
      real epsUpdate0908 = prim max0125 (gradEps087B, _t0907);
      string _t0909 = "update L:";
      string _t090A = "\n";
      print (_t0909, epsUpdate0908, _t090A);
      string _t090B = "update G:";
      string _t090C = "\n";
      print (_t090B, gradEps087B, _t090C);
      s083A = prim +0017<$[]> (s083A, epsUpdate0908);
    }
    bool _t090D = prim >=007E (s083A, e083B);
    if _t090D {
      int _t090E = 1;
      itter0837 = prim +0015 (itter0837, _t090E);
      bool _t090F = prim >=007D (itter0837, len0832);
      if _t090F {
        string _t0910 = "TotalCount:";
        string _t0911 = "\n";
        print (_t0910, totalCount0849, _t0911);
        string _t0912 = "Intervals:";
        string _t0913 = "\n";
        print (_t0912, intervals083F, _t0913);
        string _t0914 = "Cells:";
        string _t0915 = "\n";
        print (_t0914, newCells0845, _t0915);
        string _t0916 = ";";
        string _t0917 = "++++++++++++++End Pixel++++++++++++++++++\n";
        print (ui0950, _t0916, vi094F, _t0917);
        stabilize;
      } else {
        string _t0918 = "++++++++++++++New Cell++++++++++++++++++\n";
        print (_t0918);
        count0848 = 0;
        int _t0919 = prim +0015 (offset082F, itter0837);
        interval0839 = prim $dynsub01C2<vec2> (times0474, _t0919);
        int _t091A = prim +0015 (offset082F, itter0837);
        int _t091B = prim $dynsub01C2<int> (cells0475, _t091A);
        cc083C = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0445, _t091B);
        s083A = interval0839[0];
        e083B = interval0839[1];
        Femdata: FuncCell fc0930;
        int _t0931 = extractFemItem(CellIndex(MeshCell), int, cc083C);
        Femdata: FuncCell _t0932 = loadFem(FuncCell, c0452, _t0931);
        fc0930 = _t0932;
        fc083E = fc0930;
      }
    }
  }
}
grid(2) {
  int _t091C = 0;
  int _t091D = 1;
  int _t091E = prim -0024 (iresU0463, _t091D);
  int[] _t091F = prim $range01C3 (_t091C, _t091E);
  foreach vi0925 in _t091F {
    int _t0920 = 0;
    int _t0921 = 1;
    int _t0922 = prim -0024 (iresV0464, _t0921);
    int[] _t0923 = prim $range01C3 (_t0920, _t0922);
    foreach ui0924 in _t0923 {
      new ray (ui0924, vi0925);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0951 (a) = <no-default>
  input 0b0450_intermedateGlobal0952 (b) = <no-default>
  input 0c0452_intermedateGlobal0953 (c) = <no-default>
  input isoval0954 (isoval) = <default>
  input thick0955 (thick) = <default>
  input camEye0956 (camEye) = <default>
  input camAt0957 (camAt) = <default>
  input camUp0958 (camUp) = <default>
  input camFOV0959 (camFOV) = <default>
  input iresU095A (iresU) = <default>
  input iresV095B (iresV) = <default>
  input camNear095C (camNear) = <default>
  input camFar095D (camFar) = <default>
  input refStep095E (refStep) = <default>
  input rayStep095F (rayStep) = <default>
  input lightVsp0960 (lightVsp) = <default>
  input phongKa0961 (phongKa) = <default>
  input phongKd0962 (phongKd) = <default>
  input debug0963 (debug) = <default>
  input debugU0964 (debugU) = <default>
  input debugV0965 (debugV) = <default>
  input eps0966 (eps) = <default>
  input indecies0967 (indecies) = <no-default>
  input times0968 (times) = <no-default>
  input cells0969 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a09BD
  global femData:Space b09BE
  global femData:FemFunc c09BF
  global real camDist09C0
  global tensor[3] camN09C1
  global tensor[3] camU09C2
  global tensor[3] camV09C3
  global real camVmax09C4
  global real camUmax09C5
  global tensor[3] rayVec09C6
## functions
  function femData:MeshPos _msh_newtonInverse0A3A (tensor[2] pos09C7#2, int cellInt09C8#3, femData:Mesh mesh09C9#7) {
    ENTRY0A39:  preds = []
      real _t09CA#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t09CC#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn09CE#1 = <tensor[2]>[_t09CA,_t09CC];
      field _t09D0#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt09C8,mesh09C9,mesh09C9);
      field _t09D2#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t09D0);
      field _t09D4#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t09D2);
      real _t09D6#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t09D8#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] _t09DA#1 = <tensor[2]>[_t09D6,_t09D8];
      tensor[2,2] A09DC#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t09D4,_t09DA);
      int _t09DE#1 = 0;
      int _t09E0#1 = 16;
      int[] _t09E2#1 = Range(_t09DE,_t09E0);
    FOREACH09E6:  preds = [ASSIGN09E3,NEXT0A35]
      foreach (itter09E4 in _t09E2) on exit goto ASSIGN0A37
        tensor[2] xn09E5#2 = phi(xn09CE,xn09EF)
      field _t09E7#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt09C8,mesh09C9,mesh09C9);
      field _t09E9#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos09C7,_t09E7);
      field _t09EB#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A09DC,_t09E9);
      tensor[2] delta09ED#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t09EB,xn09E5);
      tensor[2] xn09EF#5 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn09E5,delta09ED);
      real _t09F1#1 = 0.1e-7;
      real _t09F3#1 = 0.1e-7;
      real _t09F5#1 = λ(T0[],T1[])<(T0 * T1)> (_t09F1,_t09F3);
      real _t09F7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta09ED,delta09ED);
      bool _t09F9#1 = GTE<real>(_t09F5,_t09F7);
      if _t09F9 then goto ASSIGN09FD else goto JOIN09FB
    ASSIGN09FD:  preds = [COND0A34]
      real _t09FC#1 = 0.1e1;
      real _t09FE#1 = 0.1e-8;
      real _t0A00#1 = λ(T0[],T1[])<(T0 + T1)> (_t09FC,_t09FE);
      real _t0A02#1 = 0.1e1;
      real _t0A04#1 = 0.1e1;
      tensor[2] _t0A06#1 = <tensor[2]>[_t0A02,_t0A04];
      real _t0A08#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0A06,xn09EF);
      bool _t0A0A#1 = GT<real>(_t0A00,_t0A08);
      real _t0A0C#1 = 0.1e-8;
      real _t0A0E#1 = 0.1e-8;
      tensor[2] _t0A10#1 = <tensor[2]>[_t0A0C,_t0A0E];
      tensor[2] _t0A12#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0A10,xn09EF);
      real _t0A14#1 = TensorIndex<tensor[2],[0]>(_t0A12);
      real _t0A16#1 = -0.e0;
      bool _t0A18#1 = GT<real>(_t0A14,_t0A16);
      real _t0A1A#1 = 0.1e-8;
      real _t0A1C#1 = 0.1e-8;
      tensor[2] _t0A1E#1 = <tensor[2]>[_t0A1A,_t0A1C];
      tensor[2] _t0A20#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0A1E,xn09EF);
      real _t0A22#1 = TensorIndex<tensor[2],[1]>(_t0A20);
      real _t0A24#1 = -0.e0;
      bool _t0A26#1 = GT<real>(_t0A22,_t0A24);
      bool _t0A28#1 = BAnd(_t0A18,_t0A26);
      bool _t0A2A#1 = BAnd(_t0A0A,_t0A28);
      if _t0A2A then goto ASSIGN0A2E else goto ASSIGN0A31
    ASSIGN0A2E:  preds = [COND0A33]
      femData:MeshPos _t0A2D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh09C9,cellInt09C8,xn09EF,pos09C7);
      return _t0A2D
      goto JOIN0A2C
    JOIN0A2C:  preds = [*RETURN(_t0A2D)0A2F,*RETURN(_t0A30)0A32]
      goto JOIN09FB
    JOIN09FB:  preds = [*JOIN0A2C,COND0A34]
      goto FOREACH09E6
    ASSIGN0A31:  preds = [COND0A33]
      femData:MeshPos _t0A30#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A30
      goto JOIN0A2C
    ASSIGN0A37:  preds = [FOREACH09E6]
      femData:MeshPos _t0A36#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A36
}
  function int[2] nextCell40A4C (int faceIdx0A3B#1, int cell0A3C#1, femData:Mesh mesh0A3D#1) {
    ENTRY0A4B:  preds = []
      int _t0A3E#1 = 6;
      int _t0A40#1 = IMul(cell0A3C,_t0A3E);
      int _t0A42#1 = 2;
      int _t0A44#1 = IMul(faceIdx0A3B,_t0A42);
      int _t0A46#1 = IAdd(_t0A40,_t0A44);
      int[2] _t0A48#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0A3D,_t0A46);
      return _t0A48
}
## input initialization
  ENTRY09BB:  preds = []
    real isoval096A#1 = 0.2e0;
    globals.isoval0954 = isoval096A;
    real thick096D#1 = 0.7e-1;
    globals.thick0955 = thick096D;
    real _t0970#1 = -0.5e0;
    real _t0972#1 = 0.5e0;
    real _t0974#1 = 0.5e0;
    tensor[3] camEye0976#1 = <tensor[3]>[_t0970,_t0972,_t0974];
    globals.camEye0956 = camEye0976;
    real _t0979#1 = 0.5e0;
    real _t097B#1 = 0.5e0;
    real _t097D#1 = 0.5e0;
    tensor[3] camAt097F#1 = <tensor[3]>[_t0979,_t097B,_t097D];
    globals.camAt0957 = camAt097F;
    real _t0982#1 = 0.e0;
    real _t0984#1 = 0.e0;
    real _t0986#1 = 0.1e1;
    tensor[3] camUp0988#1 = <tensor[3]>[_t0982,_t0984,_t0986];
    globals.camUp0958 = camUp0988;
    real camFOV098B#1 = 0.137e2;
    globals.camFOV0959 = camFOV098B;
    int iresU098E#1 = 10;
    globals.iresU095A = iresU098E;
    int iresV0991#1 = 10;
    globals.iresV095B = iresV0991;
    real camNear0994#1 = -0.2e1;
    globals.camNear095C = camNear0994;
    real camFar0997#1 = 0.5e1;
    globals.camFar095D = camFar0997;
    real refStep099A#1 = 0.1e1;
    globals.refStep095E = refStep099A;
    real rayStep099D#1 = 0.1e-1;
    globals.rayStep095F = rayStep099D;
    real _t09A0#1 = 0.e0;
    real _t09A2#1 = 0.e0;
    real _t09A4#1 = 0.1e1;
    tensor[3] lightVsp09A6#1 = <tensor[3]>[_t09A0,_t09A2,_t09A4];
    globals.lightVsp0960 = lightVsp09A6;
    real phongKa09A9#1 = 0.1e0;
    globals.phongKa0961 = phongKa09A9;
    real phongKd09AC#1 = 0.9e0;
    globals.phongKd0962 = phongKd09AC;
    bool debug09AF#1 = false;
    globals.debug0963 = debug09AF;
    int debugU09B2#1 = 8;
    globals.debugU0964 = debugU09B2;
    int debugV09B5#1 = 2;
    globals.debugV0965 = debugV09B5;
    real eps09B8#1 = 0.1e-8;
    globals.eps0966 = eps09B8;
    return
## global-variable initialization
  ENTRY0AA7:  preds = []
    femData:Mesh a0A55#3 = globals.a0951;
    femData:Space 0b0450_intermedateGlobal0A54#1 = globals.0b0450_intermedateGlobal0952;
    femData:FemFunc 0c0452_intermedateGlobal0A53#1 = globals.0c0452_intermedateGlobal0953;
    tensor[3] camEye0A52#2 = globals.camEye0956;
    tensor[3] camAt0A51#2 = globals.camAt0957;
    tensor[3] camUp0A50#1 = globals.camUp0958;
    real camFOV0A4F#1 = globals.camFOV0959;
    int iresU0A4E#1 = globals.iresU095A;
    int iresV0A4D#1 = globals.iresV095B;
    int _t0A5F#1 = 0;
    int _t0A61#1 = 1;
    int _t0A63#1 = ExtractFemItem<int,NumCell(Mesh)>(a0A55);
    int _t0A65#1 = ISub(_t0A63,_t0A61);
    int[] _t0A67#1 = Range(_t0A5F,_t0A65);
    femData:MeshCell[] _t0A69#1 = <femData:MeshCell[]>{};
  FOREACH0A6D:  preds = [ASSIGN0A6A,NEXT0A72]
    foreach (_t0A6B in _t0A67) on exit goto ASSIGN0A74
      femData:MeshCell[] _t0A6C#2 = phi(_t0A69,_t0A70)
    femData:MeshCell _t0A6E#1 = LoadFem<femData:MeshCell>(a0A55,_t0A6B);
    femData:MeshCell[] _t0A70#1 = Append<femData:MeshCell>(_t0A6C,_t0A6E);
    goto FOREACH0A6D
  ASSIGN0A74:  preds = [FOREACH0A6D]
    femData:MeshCell[] 0cell_a0A73#1 = _t0A6C;
    globals.0cell_a09BD = 0cell_a0A73;
    femData:Space b0A76#2 = LoadFem<femData:Space>(0b0450_intermedateGlobal0A54,a0A55);
    globals.b09BE = b0A76;
    femData:FemFunc c0A79#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0A53,b0A76);
    globals.c09BF = c0A79;
    tensor[3] _t0A7C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0A51,camEye0A52);
    real camDist0A7E#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t0A7C);
    globals.camDist09C0 = camDist0A7E;
    tensor[3] _t0A81#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0A51,camEye0A52);
    tensor[3] camN0A83#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t0A81,_t0A81);
    globals.camN09C1 = camN0A83;
    tensor[3] _t0A86#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN0A83,camUp0A50);
    tensor[3] camU0A88#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t0A86,_t0A86);
    globals.camU09C2 = camU0A88;
    tensor[3] camV0A8B#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU0A88,camN0A83);
    globals.camV09C3 = camV0A8B;
    real _t0A8E#1 = 0.314159265358979323846264338327950288e1;
    real _t0A90#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0A4F,_t0A8E);
    real _t0A92#1 = 0.36e3;
    real _t0A94#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0A90,_t0A92);
    real _t0A96#1 = λ(T0[])<Tangent(T0)> (_t0A94);
    real camVmax0A98#2 = λ(T0[],T1[])<(T0 * T1)> (_t0A96,camDist0A7E);
    globals.camVmax09C4 = camVmax0A98;
    real _t0A9B#1 = IntToReal(iresU0A4E);
    real _t0A9D#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax0A98,_t0A9B);
    real _t0A9F#1 = IntToReal(iresV0A4D);
    real camUmax0AA1#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0A9D,_t0A9F);
    globals.camUmax09C5 = camUmax0AA1;
    tensor[3] rayVec0AA4#1 = camN0A83;
    globals.rayVec09C6 = rayVec0AA4;
    return
## strand
  strand ray (int ui0AC6#4, int vi0AC7#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY0B6B:  preds = []
        femData:MeshCell[] 0cell_a0AE6#1 = globals.0cell_a09BD;
        femData:FemFunc c0AE5#1 = globals.c09BF;
        tensor[3] camEye0AE4#1 = globals.camEye0956;
        int iresU0AE3#2 = globals.iresU095A;
        int iresV0AE2#4 = globals.iresV095B;
        int[] indecies0AE1#2 = globals.indecies0967;
        tensor[2][] times0AE0#1 = globals.times0968;
        tensor[3] camU0ADF#1 = globals.camU09C2;
        tensor[3] camV0ADE#1 = globals.camV09C3;
        real camVmax0ADD#2 = globals.camVmax09C4;
        real camUmax0ADC#2 = globals.camUmax09C5;
        real _t0B06#1 = λ(T0[])<Neg(T0)> (camUmax0ADC);
        real _t0B08#1 = -0.5e0;
        real _t0B0A#1 = IntToReal(ui0AC6);
        real _t0B0C#1 = IntToReal(iresU0AE3);
        real _t0B0E#1 = 0.5e0;
        real _t0B10#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B0C,_t0B0E);
        real rayU0B12#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0B06,camUmax0ADC,_t0B08,_t0B0A,_t0B10);
        real _t0B14#1 = λ(T0[])<Neg(T0)> (camVmax0ADD);
        real _t0B16#1 = -0.5e0;
        real _t0B18#1 = IntToReal(vi0AC7);
        real _t0B1A#1 = IntToReal(iresV0AE2);
        real _t0B1C#1 = 0.5e0;
        real _t0B1E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B1A,_t0B1C);
        real rayV0B20#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0B14,camVmax0ADD,_t0B16,_t0B18,_t0B1E);
        tensor[3] _t0B22#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU0B12,camU0ADF);
        tensor[3] _t0B24#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV0B20,camV0ADE);
        tensor[3] UV0B26#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t0B22,_t0B24);
        tensor[3] rayOrig0B28#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye0AE4,UV0B26);
        int _t0B2A#1 = IMul(ui0AC6,iresV0AE2);
        int _t0B2C#1 = IAdd(_t0B2A,vi0AC7);
        int offset0B2E#2 = Subscript<int[]>(indecies0AE1,_t0B2C);
        int _t0B30#1 = IMul(iresU0AE3,iresV0AE2);
        int _t0B32#1 = IMul(ui0AC6,iresV0AE2);
        int _t0B34#1 = IAdd(_t0B30,_t0B32);
        int _t0B36#1 = IAdd(_t0B34,vi0AC7);
        int len0B38#1 = Subscript<int[]>(indecies0AE1,_t0B36);
        int itter0B3A#2 = 0;
        int idx0B3C#2 = IAdd(offset0B2E,itter0B3A);
        tensor[2] interval0B3E#3 = Subscript<tensor[2][]>(times0AE0,idx0B3C);
        real s0B40#1 = TensorIndex<tensor[2],[0]>(interval0B3E);
        real e0B42#1 = TensorIndex<tensor[2],[1]>(interval0B3E);
        int _t0B44#1 = 0;
        femData:MeshCell cc0B46#2 = Subscript<femData:MeshCell[]>(0cell_a0AE6,_t0B44);
        int _t0B49#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B46);
        femData:FuncCell _t0B4B#1 = LoadFem<femData:FuncCell>(c0AE5,_t0B49);
        femData:FuncCell fc0B4D#1 = _t0B4B;
        femData:FuncCell fc0B4F#1 = fc0B4D;
        tensor[2][0] _t0B51#1 = <tensor[2][0]>{};
        tensor[2][] _t0B53#1 = MkDynamic<tensor[2],0>(_t0B51);
        tensor[2][] intervals0B55#1 = _t0B53;
        tensor[2,3][0] _t0B57#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t0B59#1 = MkDynamic<tensor[2,3],0>(_t0B57);
        tensor[2,3][] sints0B5B#1 = _t0B59;
        femData:MeshCell[0] _t0B5D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0B5F#1 = MkDynamic<femData:MeshCell,0>(_t0B5D);
        femData:MeshCell[] newCells0B61#1 = _t0B5F;
        int count0B63#1 = 0;
        int totalCount0B65#1 = 0;
        int ui0B67#1 = ui0AC6;
        int vi0B69#1 = vi0AC7;
        self.rayU = rayU0B12;
        self.rayV = rayV0B20;
        self.UV = UV0B26;
        self.rayOrig = rayOrig0B28;
        self.offset = offset0B2E;
        self.len = len0B38;
        self.itter = itter0B3A;
        self.idx = idx0B3C;
        self.interval = interval0B3E;
        self.s = s0B40;
        self.e = e0B42;
        self.cc = cc0B46;
        self.fc = fc0B4F;
        self.intervals = intervals0B55;
        self.sints = sints0B5B;
        self.newCells = newCells0B61;
        self.count = count0B63;
        self.totalCount = totalCount0B65;
        self.ui = ui0B67;
        self.vi = vi0B69;
        return
    end state init
    method start
        ENTRY0BEE:  preds = []
          femData:MeshCell[] 0cell_a0B86#1 = globals.0cell_a09BD;
          femData:FemFunc c0B85#1 = globals.c09BF;
          bool debug0B84#1 = globals.debug0963;
          int debugU0B83#1 = globals.debugU0964;
          int debugV0B82#1 = globals.debugV0965;
          int[] cells0B81#1 = globals.cells0969;
          real rayU0B8D#0 = self.rayU;
          real rayV0B8E#0 = self.rayV;
          tensor[3] UV0B8F#0 = self.UV;
          tensor[3] rayOrig0B90#0 = self.rayOrig;
          int offset0B91#0 = self.offset;
          int len0B92#1 = self.len;
          int itter0B93#3 = self.itter;
          int idx0B94#1 = self.idx;
          tensor[2] interval0B95#3 = self.interval;
          real s0B96#3 = self.s;
          real e0B97#3 = self.e;
          femData:MeshCell cc0B98#2 = self.cc;
          femData:FuncCell fc0B99#2 = self.fc;
          tensor[2][] intervals0B9A#3 = self.intervals;
          tensor[2,3][] sints0B9B#3 = self.sints;
          femData:MeshCell[] newCells0B9C#3 = self.newCells;
          int count0B9D#3 = self.count;
          int totalCount0B9E#3 = self.totalCount;
          int ui0B9F#1 = self.ui;
          int vi0BA0#1 = self.vi;
          if debug0B84 then goto ASSIGN0BB8 else goto JOIN0BB5
        ASSIGN0BB8:  preds = [COND0BCE]
          bool _t0BB7#1 = NEQ<int>(ui0B9F,debugU0B83);
          if _t0BB7 then goto ASSIGN0BBC else goto ASSIGN0BBE
        ASSIGN0BBC:  preds = [COND0BBF]
          bool _t0BBA#1 = true;
          goto JOIN0BB9
        JOIN0BB9:  preds = [ASSIGN0BBC,ASSIGN0BBE]
          bool _t0BBB#1 = phi(_t0BBA,_t0BBD)
          if _t0BBB then goto SAVE0BC2 else goto JOIN0BC0
        SAVE0BC2:  preds = [COND0BCD]
          self.itter = itter0B93;
          self.interval = interval0B95;
          self.s = s0B96;
          self.e = e0B97;
          self.cc = cc0B98;
          self.fc = fc0B99;
          self.intervals = intervals0B9A;
          self.sints = sints0B9B;
          self.newCells = newCells0B9C;
          self.count = count0B9D;
          self.totalCount = totalCount0B9E;
          stabilize
          goto JOIN0BC0
        JOIN0BC0:  preds = [*STABILIZE0BC1,COND0BCD]
          goto JOIN0BB5
        JOIN0BB5:  preds = [JOIN0BC0,COND0BCE]
          int _t0BCF#1 = 0;
          bool _t0BD1#1 = EQ<int>(len0B92,_t0BCF);
          if _t0BD1 then goto SAVE0BD5 else goto JOIN0BD3
        SAVE0BD5:  preds = [COND0BE0]
          self.itter = itter0B93;
          self.interval = interval0B95;
          self.s = s0B96;
          self.e = e0B97;
          self.cc = cc0B98;
          self.fc = fc0B99;
          self.intervals = intervals0B9A;
          self.sints = sints0B9B;
          self.newCells = newCells0B9C;
          self.count = count0B9D;
          self.totalCount = totalCount0B9E;
          stabilize
          goto JOIN0BD3
        JOIN0BD3:  preds = [*STABILIZE0BD4,COND0BE0]
          int _t0BE1#1 = Subscript<int[]>(cells0B81,idx0B94);
          femData:MeshCell cc0BE3#2 = Subscript<femData:MeshCell[]>(0cell_a0B86,_t0BE1);
          int _t0BE6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0BE3);
          femData:FuncCell _t0BE8#1 = LoadFem<femData:FuncCell>(c0B85,_t0BE6);
          femData:FuncCell fc0BEA#1 = _t0BE8;
          femData:FuncCell fc0BEC#1 = fc0BEA;
          self.itter = itter0B93;
          self.interval = interval0B95;
          self.s = s0B96;
          self.e = e0B97;
          self.cc = cc0BE3;
          self.fc = fc0BEC;
          self.intervals = intervals0B9A;
          self.sints = sints0B9B;
          self.newCells = newCells0B9C;
          self.count = count0B9D;
          self.totalCount = totalCount0B9E;
          active
        ASSIGN0BBE:  preds = [COND0BBF]
          bool _t0BBD#1 = NEQ<int>(vi0BA0,debugV0B82);
          goto JOIN0BB9
    end start
    method update
        ENTRY0E98:  preds = []
          femData:MeshCell[] 0cell_a0BFF#1 = globals.0cell_a09BD;
          femData:FemFunc c0BFE#1 = globals.c09BF;
          tensor[2][] times0BFD#1 = globals.times0968;
          int[] cells0BFC#1 = globals.cells0969;
          tensor[3] rayVec0BFB#9 = globals.rayVec09C6;
          real rayU0C05#0 = self.rayU;
          real rayV0C06#0 = self.rayV;
          tensor[3] UV0C07#0 = self.UV;
          tensor[3] rayOrig0C08#3 = self.rayOrig;
          int offset0C09#2 = self.offset;
          int len0C0A#2 = self.len;
          int itter0C0B#3 = self.itter;
          int idx0C0C#0 = self.idx;
          tensor[2] interval0C0D#3 = self.interval;
          real s0C0E#11 = self.s;
          real e0C0F#5 = self.e;
          femData:MeshCell cc0C10#30 = self.cc;
          femData:FuncCell fc0C11#27 = self.fc;
          tensor[2][] intervals0C12#3 = self.intervals;
          tensor[2,3][] sints0C13#3 = self.sints;
          femData:MeshCell[] newCells0C14#3 = self.newCells;
          int count0C15#4 = self.count;
          int totalCount0C16#3 = self.totalCount;
          int ui0C17#3 = self.ui;
          int vi0C18#3 = self.vi;
          int _t0C2D#1 = 1;
          bool _t0C2F#1 = LT<int>(len0C0A,_t0C2D);
          if _t0C2F then goto SAVE0C33 else goto JOIN0C31
        SAVE0C33:  preds = [COND0C3E]
          self.itter = itter0C0B;
          self.interval = interval0C0D;
          self.s = s0C0E;
          self.e = e0C0F;
          self.cc = cc0C10;
          self.fc = fc0C11;
          self.intervals = intervals0C12;
          self.sints = sints0C13;
          self.newCells = newCells0C14;
          self.count = count0C15;
          self.totalCount = totalCount0C16;
          stabilize
          goto JOIN0C31
        JOIN0C31:  preds = [*STABILIZE0C32,COND0C3E]
          tensor[3] _t0C3F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0C0E,rayVec0BFB);
          tensor[3] rayStart0C41#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0C08,_t0C3F);
          real _t0C43#1 = TensorIndex<tensor[3],[0]>(rayStart0C41);
          real _t0C45#1 = TensorIndex<tensor[3],[1]>(rayStart0C41);
          tensor[2] project0C47#7 = <tensor[2]>[_t0C43,_t0C45];
          femData:FemFunc _t0C49#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0C4B#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C4D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0C4B);
          int _t0C4F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0C51#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0C4F,_t0C4D,_t0C49);
          femData:Mesh _t0C53#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0C55#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C57#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0C59#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0C57,_t0C53,_t0C53);
          field _t0C5B#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0C51,_t0C59);
          real _t0C5D#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0C5B,project0C47);
          real _t0C5F#1 = TensorIndex<tensor[3],[2]>(rayStart0C41);
          real f00C61#7 = λ(T0[],T1[])<(T0) - (T1)> (_t0C5D,_t0C5F);
          real _t0C63#1 = TensorIndex<tensor[3],[0]>(rayVec0BFB);
          real _t0C65#1 = TensorIndex<tensor[3],[1]>(rayVec0BFB);
          tensor[2] _t0C67#1 = <tensor[2]>[_t0C63,_t0C65];
          femData:FemFunc _t0C69#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0C6B#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C6D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0C6B);
          int _t0C6F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0C71#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0C6F,_t0C6D,_t0C69);
          femData:Mesh _t0C73#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0C75#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C77#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0C79#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0C77,_t0C73,_t0C73);
          field _t0C7B#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0C71,_t0C79);
          field _t0C7D#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0C7B);
          tensor[2] _t0C7F#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0C7D,project0C47);
          real _t0C81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0C67,_t0C7F);
          real _t0C83#1 = TensorIndex<tensor[3],[2]>(rayVec0BFB);
          real _t0C85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0C81,_t0C83);
          real _t0C87#1 = λ(T0[])<Abs(T0)> (_t0C85);
          femData:Mesh _t0C89#1 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C8B#1 = ExtractFemItem<int,CellIndex(Mesh)>(cc0C10);
          real _t0C8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0C89,_t0C8B);
          real _t0C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0C87,_t0C8D);
          real _t0C91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0C0F,s0C0E);
          real gradEps0C93#9 = Min<real>(_t0C8F,_t0C91);
          string _t0C95#1 = "hmmmm:";
          femData:FemFunc _t0C97#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0C99#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C9B#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0C99);
          int _t0C9D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0C9F#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0C9D,_t0C9B,_t0C97);
          femData:Mesh _t0CA1#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0CA3#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0CA5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0CA7#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0CA5,_t0CA1,_t0CA1);
          field _t0CA9#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0C9F,_t0CA7);
          field _t0CAB#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0CA9);
          tensor[2] _t0CAD#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0CAB,project0C47);
          string _t0CAF#1 = "\n";
          Print<[string,tensor[2],string]>(_t0C95,_t0CAD,_t0CAF);
          string _t0CB2#1 = "fc dofs:";
          femData:FemFunc _t0CB4#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0CB6#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0CB8#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0CB6);
          int _t0CBA#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          int[6] _t0CBC#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0CB8,_t0CBA);
          tensor[6] _t0CBE#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0CB4,_t0CBC);
          string _t0CC0#1 = "\n";
          Print<[string,tensor[6],string]>(_t0CB2,_t0CBE,_t0CC0);
          femData:FemFunc _t0CC3#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0CC5#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0CC7#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0CC5);
          int _t0CC9#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0CCB#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0CC9,_t0CC7,_t0CC3);
          femData:Mesh _t0CCD#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0CCF#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0CD1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0CD3#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0CD1,_t0CCD,_t0CCD);
          field _t0CD5#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0CCB,_t0CD3);
          real _t0CD7#1 = TensorIndex<tensor[3],[0]>(rayVec0BFB);
          real _t0CD9#1 = TensorIndex<tensor[3],[1]>(rayVec0BFB);
          tensor[2] _t0CDB#1 = <tensor[2]>[_t0CD7,_t0CD9];
          tensor[2] _t0CDD#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps0C93,_t0CDB);
          tensor[2] _t0CDF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0C47,_t0CDD);
          real _t0CE1#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0CD5,_t0CDF);
          real _t0CE3#1 = TensorIndex<tensor[3],[2]>(rayStart0C41);
          real _t0CE5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0CE1,_t0CE3);
          real _t0CE7#1 = TensorIndex<tensor[3],[2]>(rayVec0BFB);
          real _t0CE9#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps0C93,_t0CE7);
          real f10CEB#6 = λ(T0[],T1[])<(T0) - (T1)> (_t0CE5,_t0CE9);
          string _t0CED#1 = "=========================\n";
          Print<[string]>(_t0CED);
          string _t0CF0#1 = "Ui/Vi:";
          string _t0CF2#1 = "/";
          string _t0CF4#1 = "\n";
          Print<[string,int,string,int,string]>(_t0CF0,ui0C17,_t0CF2,vi0C18,_t0CF4);
          string _t0CF7#1 = "Cell:";
          string _t0CF9#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t0CF7,cc0C10,_t0CF9);
          string _t0CFC#1 = "hess:";
          femData:FemFunc _t0CFE#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0D00#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0D02#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0D00);
          int _t0D04#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0D06#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0D04,_t0D02,_t0CFE);
          femData:Mesh _t0D08#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0D0A#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0D0C#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0D0E#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0D0C,_t0D08,_t0D08);
          field _t0D10#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0D06,_t0D0E);
          field _t0D12#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0D10);
          field _t0D14#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t0D12);
          tensor[2,2] _t0D16#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t0D14,project0C47);
          string _t0D18#1 = "\n";
          string _t0D1A#1 = "norm:";
          femData:FemFunc _t0D1C#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0D1E#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0D20#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0D1E);
          int _t0D22#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0D24#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0D22,_t0D20,_t0D1C);
          femData:Mesh _t0D26#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0D28#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0D2A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0D2C#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0D2A,_t0D26,_t0D26);
          field _t0D2E#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0D24,_t0D2C);
          field _t0D30#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0D2E);
          field _t0D32#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t0D30);
          tensor[2,2] _t0D34#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t0D32,project0C47);
          real _t0D36#1 = λ(T0[2 2])<Sqrt(Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T0_{i0,i1}))>(i0=0..1)(i1=0..1))> (_t0D34);
          string _t0D38#1 = "\n";
          Print<[string,tensor[2,2],string,string,real,string]>(_t0CFC,_t0D16,_t0D18,_t0D1A,_t0D36,_t0D38);
          string _t0D3B#1 = "Grad:";
          femData:FemFunc _t0D3D#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:FemFunc _t0D3F#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0D41#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0D3F);
          int _t0D43#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0D45#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0D43,_t0D41,_t0D3D);
          femData:Mesh _t0D47#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          femData:Mesh _t0D49#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0D4B#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0D4D#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0D4B,_t0D47,_t0D47);
          field _t0D4F#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0D45,_t0D4D);
          field _t0D51#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0D4F);
          tensor[2] _t0D53#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0D51,project0C47);
          string _t0D55#1 = "\n";
          Print<[string,tensor[2],string]>(_t0D3B,_t0D53,_t0D55);
          string _t0D58#1 = "vals:";
          tensor[2] _t0D5A#1 = <tensor[2]>[f00C61,f10CEB];
          string _t0D5C#1 = "\n";
          Print<[string,tensor[2],string]>(_t0D58,_t0D5A,_t0D5C);
          real _t0D60#1 = 0.e0;
          bool _t0D62#1 = GT<real>(f00C61,_t0D60);
          if _t0D62 then goto ASSIGN0D66 else goto ASSIGN0D6B
        ASSIGN0D66:  preds = [COND0D79]
          int _t0D65#1 = 1;
          int _t0D67#1 = _t0D65;
          goto JOIN0D64
        JOIN0D64:  preds = [ASSIGN0D69,JOIN0D6E]
          int _t0D68#1 = phi(_t0D67,_t0D72)
          real _t0D7B#1 = 0.e0;
          bool _t0D7D#1 = GT<real>(f10CEB,_t0D7B);
          if _t0D7D then goto ASSIGN0D81 else goto ASSIGN0D86
        ASSIGN0D81:  preds = [COND0D94]
          int _t0D80#1 = 1;
          int _t0D82#1 = _t0D80;
          goto JOIN0D7F
        JOIN0D7F:  preds = [ASSIGN0D84,JOIN0D89]
          int _t0D83#1 = phi(_t0D82,_t0D8D)
          int _t0D95#1 = IMul(_t0D68,_t0D83);
          int _t0D97#1 = 0;
          bool _t0D99#1 = GT<int>(_t0D95,_t0D97);
          bool _t0D9B#1 = BNot(_t0D99);
          if _t0D9B then goto ASSIGN0DA0 else goto ASSIGN0E27
        ASSIGN0DA0:  preds = [COND0E42]
          real _t0D9F#1 = 0.e0;
          bool _t0DA1#1 = GT<real>(f00C61,_t0D9F);
          if _t0DA1 then goto ASSIGN0DA5 else goto ASSIGN0DAA
        ASSIGN0DA5:  preds = [COND0DB8]
          int _t0DA4#1 = 1;
          int _t0DA6#1 = _t0DA4;
          goto JOIN0DA3
        JOIN0DA3:  preds = [ASSIGN0DA8,JOIN0DAD]
          int _t0DA7#1 = phi(_t0DA6,_t0DB1)
          real _t0DBA#1 = 0.e0;
          bool _t0DBC#1 = GT<real>(f10CEB,_t0DBA);
          if _t0DBC then goto ASSIGN0DC0 else goto ASSIGN0DC5
        ASSIGN0DC0:  preds = [COND0DD3]
          int _t0DBF#1 = 1;
          int _t0DC1#1 = _t0DBF;
          goto JOIN0DBE
        JOIN0DBE:  preds = [ASSIGN0DC3,JOIN0DC8]
          int _t0DC2#1 = phi(_t0DC1,_t0DCC)
          int _t0DD4#1 = IMul(_t0DA7,_t0DC2);
          int _t0DD6#1 = 0;
          bool _t0DD8#1 = EQ<int>(_t0DD4,_t0DD6);
          if _t0DD8 then goto ASSIGN0DDC else goto JOIN0DDA
        ASSIGN0DDC:  preds = [COND0DDE]
          string _t0DDB#1 = "Warn: 0 update\n";
          Print<[string]>(_t0DDB);
          goto JOIN0DDA
        JOIN0DDA:  preds = [MASSIGN0DDD,COND0DDE]
          string _t0DDF#1 = "update with interval:";
          string _t0DE1#1 = "\n";
          Print<[string,real,string]>(_t0DDF,gradEps0C93,_t0DE1);
          string _t0DE4#1 = "Pixel Ui/Vi:";
          string _t0DE6#1 = "/";
          string _t0DE8#1 = "\n";
          Print<[string,int,string,int,string]>(_t0DE4,ui0C17,_t0DE6,vi0C18,_t0DE8);
          string _t0DEB#1 = "Count:";
          string _t0DED#1 = "\n";
          Print<[string,int,string]>(_t0DEB,count0C15,_t0DED);
          int _t0DF0#1 = 1;
          int count0DF2#1 = IAdd(count0C15,_t0DF0);
          int _t0DF5#1 = 1;
          int totalCount0DF7#1 = IAdd(totalCount0C16,_t0DF5);
          string _t0DFA#1 = "Vals I:";
          tensor[2] _t0DFC#1 = <tensor[2]>[f00C61,f10CEB];
          string _t0DFE#1 = "\n";
          Print<[string,tensor[2],string]>(_t0DFA,_t0DFC,_t0DFE);
          string _t0E01#1 = "New interval:";
          real _t0E03#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[2] _t0E05#1 = <tensor[2]>[s0C0E,_t0E03];
          string _t0E07#1 = "\n";
          Print<[string,tensor[2],string]>(_t0E01,_t0E05,_t0E07);
          real _t0E0A#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[2] _t0E0C#1 = <tensor[2]>[s0C0E,_t0E0A];
          tensor[2][] intervals0E0E#1 = Append<tensor[2]>(intervals0C12,_t0E0C);
          tensor[3] _t0E11#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0C0E,rayVec0BFB);
          tensor[3] _t0E13#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0C08,_t0E11);
          real _t0E15#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[3] _t0E17#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t0E15,rayVec0BFB);
          tensor[3] _t0E19#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0C08,_t0E17);
          tensor[2,3] _t0E1B#1 = <tensor[2,3]>[_t0E13,_t0E19];
          tensor[2,3][] sints0E1D#1 = Append<tensor[2,3]>(sints0C13,_t0E1B);
          femData:MeshCell[] newCells0E20#1 = Append<femData:MeshCell>(newCells0C14,cc0C10);
          real s0E23#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          goto JOIN0D9D
        JOIN0D9D:  preds = [ASSIGN0E25,ASSIGN0E41]
          int totalCount0DF8#3 = phi(totalCount0DF7,totalCount0C16)
          int count0DF3#2 = phi(count0DF2,count0C15)
          femData:MeshCell[] newCells0E21#3 = phi(newCells0E20,newCells0C14)
          tensor[2,3][] sints0E1E#2 = phi(sints0E1D,sints0C13)
          tensor[2][] intervals0E0F#3 = phi(intervals0E0E,intervals0C12)
          real s0E24#3 = phi(s0E23,s0E40)
          bool _t0E43#1 = GTE<real>(s0E24,e0C0F);
          if _t0E43 then goto ASSIGN0E47 else goto JOIN0E45
        ASSIGN0E47:  preds = [COND0E97]
          int _t0E46#1 = 1;
          int itter0E48#5 = IAdd(itter0C0B,_t0E46);
          bool _t0E4B#1 = GTE<int>(itter0E48,len0C0A);
          if _t0E4B then goto ASSIGN0E4F else goto ASSIGN0E6F
        ASSIGN0E4F:  preds = [COND0E90]
          string _t0E4E#1 = "TotalCount:";
          string _t0E50#1 = "\n";
          Print<[string,int,string]>(_t0E4E,totalCount0DF8,_t0E50);
          string _t0E53#1 = "Intervals:";
          string _t0E55#1 = "\n";
          Print<[string,tensor[2][],string]>(_t0E53,intervals0E0F,_t0E55);
          string _t0E58#1 = "Cells:";
          string _t0E5A#1 = "\n";
          Print<[string,femData:MeshCell[],string]>(_t0E58,newCells0E21,_t0E5A);
          string _t0E5D#1 = ";";
          string _t0E5F#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui0C17,_t0E5D,vi0C18,_t0E5F);
          self.itter = itter0E48;
          self.interval = interval0C0D;
          self.s = s0E24;
          self.e = e0C0F;
          self.cc = cc0C10;
          self.fc = fc0C11;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0DF3;
          self.totalCount = totalCount0DF8;
          stabilize
          goto JOIN0E4D
        JOIN0E4D:  preds = [*STABILIZE0E62,ASSIGN0E8F]
          int count0E72#1 = phi(count0E71)
          femData:FuncCell fc0E8E#1 = phi(fc0E8D)
          femData:MeshCell cc0E7E#1 = phi(cc0E7D)
          real e0E84#1 = phi(e0E83)
          real s0E81#1 = phi(s0E80)
          tensor[2] interval0E77#1 = phi(interval0E76)
          goto JOIN0E45
        JOIN0E45:  preds = [JOIN0E4D,COND0E97]
          int count0E96#1 = phi(count0E72,count0DF3)
          femData:FuncCell fc0E95#1 = phi(fc0E8E,fc0C11)
          femData:MeshCell cc0E94#1 = phi(cc0E7E,cc0C10)
          real e0E93#1 = phi(e0E84,e0C0F)
          real s0E92#1 = phi(s0E81,s0E24)
          tensor[2] interval0E91#1 = phi(interval0E77,interval0C0D)
          int itter0E49#1 = phi(itter0E48,itter0C0B)
          self.itter = itter0E49;
          self.interval = interval0E91;
          self.s = s0E92;
          self.e = e0E93;
          self.cc = cc0E94;
          self.fc = fc0E95;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0E96;
          self.totalCount = totalCount0DF8;
          active
        ASSIGN0E6F:  preds = [COND0E90]
          string _t0E6E#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t0E6E);
          int count0E71#1 = 0;
          int _t0E74#1 = IAdd(offset0C09,itter0E48);
          tensor[2] interval0E76#3 = Subscript<tensor[2][]>(times0BFD,_t0E74);
          int _t0E79#1 = IAdd(offset0C09,itter0E48);
          int _t0E7B#1 = Subscript<int[]>(cells0BFC,_t0E79);
          femData:MeshCell cc0E7D#2 = Subscript<femData:MeshCell[]>(0cell_a0BFF,_t0E7B);
          real s0E80#1 = TensorIndex<tensor[2],[0]>(interval0E76);
          real e0E83#1 = TensorIndex<tensor[2],[1]>(interval0E76);
          int _t0E87#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0E7D);
          femData:FuncCell _t0E89#1 = LoadFem<femData:FuncCell>(c0BFE,_t0E87);
          femData:FuncCell fc0E8B#1 = _t0E89;
          femData:FuncCell fc0E8D#1 = fc0E8B;
          goto JOIN0E4D
        ASSIGN0DC5:  preds = [COND0DD3]
          real _t0DC4#1 = 0.e0;
          bool _t0DC6#1 = LT<real>(f10CEB,_t0DC4);
          if _t0DC6 then goto ASSIGN0DCA else goto ASSIGN0DCF
        ASSIGN0DCA:  preds = [COND0DD2]
          int _t0DC9#1 = -1;
          int _t0DCB#1 = _t0DC9;
          goto JOIN0DC8
        JOIN0DC8:  preds = [ASSIGN0DCD,ASSIGN0DD1]
          int _t0DCC#1 = phi(_t0DCB,_t0DD0)
          goto JOIN0DBE
        ASSIGN0DCF:  preds = [COND0DD2]
          int _t0DCE#1 = 0;
          int _t0DD0#1 = _t0DCE;
          goto JOIN0DC8
        ASSIGN0DAA:  preds = [COND0DB8]
          real _t0DA9#1 = 0.e0;
          bool _t0DAB#1 = LT<real>(f00C61,_t0DA9);
          if _t0DAB then goto ASSIGN0DAF else goto ASSIGN0DB4
        ASSIGN0DAF:  preds = [COND0DB7]
          int _t0DAE#1 = -1;
          int _t0DB0#1 = _t0DAE;
          goto JOIN0DAD
        JOIN0DAD:  preds = [ASSIGN0DB2,ASSIGN0DB6]
          int _t0DB1#1 = phi(_t0DB0,_t0DB5)
          goto JOIN0DA3
        ASSIGN0DB4:  preds = [COND0DB7]
          int _t0DB3#1 = 0;
          int _t0DB5#1 = _t0DB3;
          goto JOIN0DAD
        ASSIGN0E27:  preds = [COND0E42]
          real _t0E26#1 = λ(T0[])<Abs(T0)> (f00C61);
          real _t0E28#1 = 0.2e1;
          femData:Mesh _t0E2A#1 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0E2C#1 = ExtractFemItem<int,CellIndex(Mesh)>(cc0C10);
          real _t0E2E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0E2A,_t0E2C);
          real _t0E30#1 = λ(T0[],T1[])<(T0 * T1)> (_t0E28,_t0E2E);
          real _t0E32#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0E26,_t0E30);
          real epsUpdate0E34#2 = Max<real>(gradEps0C93,_t0E32);
          string _t0E36#1 = "update L:";
          string _t0E38#1 = "\n";
          Print<[string,real,string]>(_t0E36,epsUpdate0E34,_t0E38);
          string _t0E3B#1 = "update G:";
          string _t0E3D#1 = "\n";
          Print<[string,real,string]>(_t0E3B,gradEps0C93,_t0E3D);
          real s0E40#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,epsUpdate0E34);
          goto JOIN0D9D
        ASSIGN0D86:  preds = [COND0D94]
          real _t0D85#1 = 0.e0;
          bool _t0D87#1 = LT<real>(f10CEB,_t0D85);
          if _t0D87 then goto ASSIGN0D8B else goto ASSIGN0D90
        ASSIGN0D8B:  preds = [COND0D93]
          int _t0D8A#1 = -1;
          int _t0D8C#1 = _t0D8A;
          goto JOIN0D89
        JOIN0D89:  preds = [ASSIGN0D8E,ASSIGN0D92]
          int _t0D8D#1 = phi(_t0D8C,_t0D91)
          goto JOIN0D7F
        ASSIGN0D90:  preds = [COND0D93]
          int _t0D8F#1 = 0;
          int _t0D91#1 = _t0D8F;
          goto JOIN0D89
        ASSIGN0D6B:  preds = [COND0D79]
          real _t0D6A#1 = 0.e0;
          bool _t0D6C#1 = LT<real>(f00C61,_t0D6A);
          if _t0D6C then goto ASSIGN0D70 else goto ASSIGN0D75
        ASSIGN0D70:  preds = [COND0D78]
          int _t0D6F#1 = -1;
          int _t0D71#1 = _t0D6F;
          goto JOIN0D6E
        JOIN0D6E:  preds = [ASSIGN0D73,ASSIGN0D77]
          int _t0D72#1 = phi(_t0D71,_t0D76)
          goto JOIN0D64
        ASSIGN0D75:  preds = [COND0D78]
          int _t0D74#1 = 0;
          int _t0D76#1 = _t0D74;
          goto JOIN0D6E
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0AC4:  preds = []
      int iresU0AAA#1 = globals.iresU095A;
      int iresV0AA9#1 = globals.iresV095B;
      int _t0AAD#1 = 0;
      int _t0AAF#1 = 1;
      int _t0AB1#1 = ISub(iresU0AAA,_t0AAF);
      int[] _t0AB3#1 = Range(_t0AAD,_t0AB1);
    FOREACH0AB6:  preds = [ASSIGN0AB4,NEXT0AC3]
      foreach (vi0AB5 in _t0AB3) on exit goto RETURN0AC5
      int _t0AB7#1 = 0;
      int _t0AB9#1 = 1;
      int _t0ABB#1 = ISub(iresV0AA9,_t0AB9);
      int[] _t0ABD#1 = Range(_t0AB7,_t0ABB);
    FOREACH0AC0:  preds = [ASSIGN0ABE,NEXT0AC2]
      foreach (ui0ABF in _t0ABD) on exit goto NEXT0AC3
      new ray(ui0ABF,vi0AB5);
      goto FOREACH0AC0
    NEXT0AC3:  preds = [FOREACH0AC0]
      goto FOREACH0AB6
    RETURN0AC5:  preds = [FOREACH0AB6]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0951 (a) = <no-default>
  input 0b0450_intermedateGlobal0952 (b) = <no-default>
  input 0c0452_intermedateGlobal0953 (c) = <no-default>
  input isoval0954 (isoval) = <default>
  input thick0955 (thick) = <default>
  input camEye0956 (camEye) = <default>
  input camAt0957 (camAt) = <default>
  input camUp0958 (camUp) = <default>
  input camFOV0959 (camFOV) = <default>
  input iresU095A (iresU) = <default>
  input iresV095B (iresV) = <default>
  input camNear095C (camNear) = <default>
  input camFar095D (camFar) = <default>
  input refStep095E (refStep) = <default>
  input rayStep095F (rayStep) = <default>
  input lightVsp0960 (lightVsp) = <default>
  input phongKa0961 (phongKa) = <default>
  input phongKd0962 (phongKd) = <default>
  input debug0963 (debug) = <default>
  input debugU0964 (debugU) = <default>
  input debugV0965 (debugV) = <default>
  input eps0966 (eps) = <default>
  input indecies0967 (indecies) = <no-default>
  input times0968 (times) = <no-default>
  input cells0969 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a09BD
  global femData:Space b09BE
  global femData:FemFunc c09BF
  global real camDist09C0
  global tensor[3] camN09C1
  global tensor[3] camU09C2
  global tensor[3] camV09C3
  global real camVmax09C4
  global real camUmax09C5
  global tensor[3] rayVec09C6
## functions
  function femData:MeshPos _msh_newtonInverse0A3A (tensor[2] pos09C7#2, int cellInt09C8#2, femData:Mesh mesh09C9#5) {
    ENTRY0A39:  preds = []
      real _t09CA#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn09CE#2 = <tensor[2]>[_t09CA,_t09CA];
      field _t09D0#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt09C8,mesh09C9,mesh09C9);
      field _t09D2#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t09D0);
      field _t09D4#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t09D2);
      tensor[2,2] A09DC#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t09D4,xn09CE);
      int _t09DE#1 = 0;
      int _t09E0#1 = 16;
      int[] _t09E2#1 = Range(_t09DE,_t09E0);
    FOREACH09E6:  preds = [ASSIGN09E3,NEXT0A35]
      foreach (itter09E4 in _t09E2) on exit goto ASSIGN0A37
        tensor[2] xn09E5#2 = phi(xn09CE,xn09EF)
      field _t09E9#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos09C7,_t09D0);
      field _t09EB#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A09DC,_t09E9);
      tensor[2] delta09ED#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t09EB,xn09E5);
      tensor[2] xn09EF#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn09E5,delta09ED);
      real _t09F1#2 = 0.1e-7;
      real _t09F5#1 = λ(T0[],T1[])<(T0 * T1)> (_t09F1,_t09F1);
      real _t09F7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta09ED,delta09ED);
      bool _t09F9#1 = GTE<real>(_t09F5,_t09F7);
      if _t09F9 then goto ASSIGN09FD else goto JOIN09FB
    ASSIGN09FD:  preds = [COND0A34]
      real _t09FC#3 = 0.1e1;
      real _t09FE#3 = 0.1e-8;
      real _t0A00#1 = λ(T0[],T1[])<(T0 + T1)> (_t09FC,_t09FE);
      tensor[2] _t0A06#1 = <tensor[2]>[_t09FC,_t09FC];
      real _t0A08#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0A06,xn09EF);
      bool _t0A0A#1 = GT<real>(_t0A00,_t0A08);
      tensor[2] _t0A10#1 = <tensor[2]>[_t09FE,_t09FE];
      tensor[2] _t0A12#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0A10,xn09EF);
      real _t0A14#1 = TensorIndex<tensor[2],[0]>(_t0A12);
      real _t0A16#2 = -0.e0;
      bool _t0A18#1 = GT<real>(_t0A14,_t0A16);
      real _t0A22#1 = TensorIndex<tensor[2],[1]>(_t0A12);
      bool _t0A26#1 = GT<real>(_t0A22,_t0A16);
      bool _t0A28#1 = BAnd(_t0A18,_t0A26);
      bool _t0A2A#1 = BAnd(_t0A0A,_t0A28);
      if _t0A2A then goto ASSIGN0A2E else goto ASSIGN0A31
    ASSIGN0A2E:  preds = [COND0A33]
      femData:MeshPos _t0A2D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh09C9,cellInt09C8,xn09EF,pos09C7);
      return _t0A2D
      goto JOIN0A2C
    JOIN0A2C:  preds = [*RETURN(_t0A2D)0A2F,*RETURN(_t0A30)0A32]
      goto JOIN09FB
    JOIN09FB:  preds = [*JOIN0A2C,COND0A34]
      goto FOREACH09E6
    ASSIGN0A31:  preds = [COND0A33]
      femData:MeshPos _t0A30#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A30
      goto JOIN0A2C
    ASSIGN0A37:  preds = [FOREACH09E6]
      femData:MeshPos _t0A36#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A36
}
  function int[2] nextCell40A4C (int faceIdx0A3B#1, int cell0A3C#1, femData:Mesh mesh0A3D#1) {
    ENTRY0A4B:  preds = []
      int _t0A3E#1 = 6;
      int _t0A40#1 = IMul(cell0A3C,_t0A3E);
      int _t0A42#1 = 2;
      int _t0A44#1 = IMul(faceIdx0A3B,_t0A42);
      int _t0A46#1 = IAdd(_t0A40,_t0A44);
      int[2] _t0A48#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0A3D,_t0A46);
      return _t0A48
}
## input initialization
  ENTRY09BB:  preds = []
    real isoval096A#1 = 0.2e0;
    globals.isoval0954 = isoval096A;
    real thick096D#1 = 0.7e-1;
    globals.thick0955 = thick096D;
    real _t0970#1 = -0.5e0;
    real _t0972#5 = 0.5e0;
    tensor[3] camEye0976#1 = <tensor[3]>[_t0970,_t0972,_t0972];
    globals.camEye0956 = camEye0976;
    tensor[3] camAt097F#1 = <tensor[3]>[_t0972,_t0972,_t0972];
    globals.camAt0957 = camAt097F;
    real _t0982#2 = 0.e0;
    real _t0986#2 = 0.1e1;
    tensor[3] camUp0988#2 = <tensor[3]>[_t0982,_t0982,_t0986];
    globals.camUp0958 = camUp0988;
    real camFOV098B#1 = 0.137e2;
    globals.camFOV0959 = camFOV098B;
    int iresU098E#2 = 10;
    globals.iresU095A = iresU098E;
    globals.iresV095B = iresU098E;
    real camNear0994#1 = -0.2e1;
    globals.camNear095C = camNear0994;
    real camFar0997#1 = 0.5e1;
    globals.camFar095D = camFar0997;
    globals.refStep095E = _t0986;
    real rayStep099D#1 = 0.1e-1;
    globals.rayStep095F = rayStep099D;
    globals.lightVsp0960 = camUp0988;
    real phongKa09A9#1 = 0.1e0;
    globals.phongKa0961 = phongKa09A9;
    real phongKd09AC#1 = 0.9e0;
    globals.phongKd0962 = phongKd09AC;
    bool debug09AF#1 = false;
    globals.debug0963 = debug09AF;
    int debugU09B2#1 = 8;
    globals.debugU0964 = debugU09B2;
    int debugV09B5#1 = 2;
    globals.debugV0965 = debugV09B5;
    real eps09B8#1 = 0.1e-8;
    globals.eps0966 = eps09B8;
    return
## global-variable initialization
  ENTRY0AA7:  preds = []
    femData:Mesh a0A55#3 = globals.a0951;
    femData:Space 0b0450_intermedateGlobal0A54#1 = globals.0b0450_intermedateGlobal0952;
    femData:FemFunc 0c0452_intermedateGlobal0A53#1 = globals.0c0452_intermedateGlobal0953;
    tensor[3] camEye0A52#1 = globals.camEye0956;
    tensor[3] camAt0A51#1 = globals.camAt0957;
    tensor[3] camUp0A50#1 = globals.camUp0958;
    real camFOV0A4F#1 = globals.camFOV0959;
    int iresU0A4E#1 = globals.iresU095A;
    int iresV0A4D#1 = globals.iresV095B;
    int _t0A5F#1 = 0;
    int _t0A61#1 = 1;
    int _t0A63#1 = ExtractFemItem<int,NumCell(Mesh)>(a0A55);
    int _t0A65#1 = ISub(_t0A63,_t0A61);
    int[] _t0A67#1 = Range(_t0A5F,_t0A65);
    femData:MeshCell[] _t0A69#1 = <femData:MeshCell[]>{};
  FOREACH0A6D:  preds = [ASSIGN0A6A,NEXT0A72]
    foreach (_t0A6B in _t0A67) on exit goto GASSIGN0EB5
      femData:MeshCell[] _t0A6C#2 = phi(_t0A69,_t0A70)
    femData:MeshCell _t0A6E#1 = LoadFem<femData:MeshCell>(a0A55,_t0A6B);
    femData:MeshCell[] _t0A70#1 = Append<femData:MeshCell>(_t0A6C,_t0A6E);
    goto FOREACH0A6D
  GASSIGN0EB5:  preds = [FOREACH0A6D]
    globals.0cell_a09BD = _t0A6C;
    femData:Space b0A76#2 = LoadFem<femData:Space>(0b0450_intermedateGlobal0A54,a0A55);
    globals.b09BE = b0A76;
    femData:FemFunc c0A79#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0A53,b0A76);
    globals.c09BF = c0A79;
    tensor[3] _t0A7C#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0A51,camEye0A52);
    real camDist0A7E#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t0A7C);
    globals.camDist09C0 = camDist0A7E;
    tensor[3] camN0A83#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t0A7C,_t0A7C);
    globals.camN09C1 = camN0A83;
    tensor[3] _t0A86#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN0A83,camUp0A50);
    tensor[3] camU0A88#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t0A86,_t0A86);
    globals.camU09C2 = camU0A88;
    tensor[3] camV0A8B#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU0A88,camN0A83);
    globals.camV09C3 = camV0A8B;
    real _t0A8E#1 = 0.314159265358979323846264338327950288e1;
    real _t0A90#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0A4F,_t0A8E);
    real _t0A92#1 = 0.36e3;
    real _t0A94#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0A90,_t0A92);
    real _t0A96#1 = λ(T0[])<Tangent(T0)> (_t0A94);
    real camVmax0A98#2 = λ(T0[],T1[])<(T0 * T1)> (_t0A96,camDist0A7E);
    globals.camVmax09C4 = camVmax0A98;
    real _t0A9B#1 = IntToReal(iresU0A4E);
    real _t0A9D#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax0A98,_t0A9B);
    real _t0A9F#1 = IntToReal(iresV0A4D);
    real camUmax0AA1#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0A9D,_t0A9F);
    globals.camUmax09C5 = camUmax0AA1;
    globals.rayVec09C6 = camN0A83;
    return
## strand
  strand ray (int ui0AC6#3, int vi0AC7#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY0B6B:  preds = []
        femData:MeshCell[] 0cell_a0AE6#1 = globals.0cell_a09BD;
        femData:FemFunc c0AE5#1 = globals.c09BF;
        tensor[3] camEye0AE4#1 = globals.camEye0956;
        int iresU0AE3#2 = globals.iresU095A;
        int iresV0AE2#3 = globals.iresV095B;
        int[] indecies0AE1#2 = globals.indecies0967;
        tensor[2][] times0AE0#1 = globals.times0968;
        tensor[3] camU0ADF#1 = globals.camU09C2;
        tensor[3] camV0ADE#1 = globals.camV09C3;
        real camVmax0ADD#2 = globals.camVmax09C4;
        real camUmax0ADC#2 = globals.camUmax09C5;
        real _t0B06#1 = λ(T0[])<Neg(T0)> (camUmax0ADC);
        real _t0B08#2 = -0.5e0;
        real _t0B0A#1 = IntToReal(ui0AC6);
        real _t0B0C#1 = IntToReal(iresU0AE3);
        real _t0B0E#2 = 0.5e0;
        real _t0B10#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B0C,_t0B0E);
        real rayU0B12#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0B06,camUmax0ADC,_t0B08,_t0B0A,_t0B10);
        real _t0B14#1 = λ(T0[])<Neg(T0)> (camVmax0ADD);
        real _t0B18#1 = IntToReal(vi0AC7);
        real _t0B1A#1 = IntToReal(iresV0AE2);
        real _t0B1E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B1A,_t0B0E);
        real rayV0B20#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0B14,camVmax0ADD,_t0B08,_t0B18,_t0B1E);
        tensor[3] _t0B22#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU0B12,camU0ADF);
        tensor[3] _t0B24#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV0B20,camV0ADE);
        tensor[3] UV0B26#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t0B22,_t0B24);
        tensor[3] rayOrig0B28#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye0AE4,UV0B26);
        int _t0B2A#2 = IMul(ui0AC6,iresV0AE2);
        int _t0B2C#1 = IAdd(_t0B2A,vi0AC7);
        int offset0B2E#2 = Subscript<int[]>(indecies0AE1,_t0B2C);
        int _t0B30#1 = IMul(iresU0AE3,iresV0AE2);
        int _t0B34#1 = IAdd(_t0B30,_t0B2A);
        int _t0B36#1 = IAdd(_t0B34,vi0AC7);
        int len0B38#1 = Subscript<int[]>(indecies0AE1,_t0B36);
        int itter0B3A#5 = 0;
        int idx0B3C#2 = IAdd(offset0B2E,itter0B3A);
        tensor[2] interval0B3E#3 = Subscript<tensor[2][]>(times0AE0,idx0B3C);
        real s0B40#1 = TensorIndex<tensor[2],[0]>(interval0B3E);
        real e0B42#1 = TensorIndex<tensor[2],[1]>(interval0B3E);
        femData:MeshCell cc0B46#2 = Subscript<femData:MeshCell[]>(0cell_a0AE6,itter0B3A);
        int _t0B49#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B46);
        femData:FuncCell _t0B4B#1 = LoadFem<femData:FuncCell>(c0AE5,_t0B49);
        tensor[2][0] _t0B51#1 = <tensor[2][0]>{};
        tensor[2][] _t0B53#1 = MkDynamic<tensor[2],0>(_t0B51);
        tensor[2,3][0] _t0B57#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t0B59#1 = MkDynamic<tensor[2,3],0>(_t0B57);
        femData:MeshCell[0] _t0B5D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0B5F#1 = MkDynamic<femData:MeshCell,0>(_t0B5D);
        self.rayU = rayU0B12;
        self.rayV = rayV0B20;
        self.UV = UV0B26;
        self.rayOrig = rayOrig0B28;
        self.offset = offset0B2E;
        self.len = len0B38;
        self.itter = itter0B3A;
        self.idx = idx0B3C;
        self.interval = interval0B3E;
        self.s = s0B40;
        self.e = e0B42;
        self.cc = cc0B46;
        self.fc = _t0B4B;
        self.intervals = _t0B53;
        self.sints = _t0B59;
        self.newCells = _t0B5F;
        self.count = itter0B3A;
        self.totalCount = itter0B3A;
        self.ui = ui0AC6;
        self.vi = vi0AC7;
        return
    end state init
    method start
        ENTRY0BEE:  preds = []
          femData:MeshCell[] 0cell_a0B86#1 = globals.0cell_a09BD;
          femData:FemFunc c0B85#1 = globals.c09BF;
          bool debug0B84#1 = globals.debug0963;
          int debugU0B83#1 = globals.debugU0964;
          int debugV0B82#1 = globals.debugV0965;
          int[] cells0B81#1 = globals.cells0969;
          real rayU0B8D#0 = self.rayU;
          real rayV0B8E#0 = self.rayV;
          tensor[3] UV0B8F#0 = self.UV;
          tensor[3] rayOrig0B90#0 = self.rayOrig;
          int offset0B91#0 = self.offset;
          int len0B92#1 = self.len;
          int itter0B93#0 = self.itter;
          int idx0B94#1 = self.idx;
          tensor[2] interval0B95#0 = self.interval;
          real s0B96#0 = self.s;
          real e0B97#0 = self.e;
          femData:MeshCell cc0B98#0 = self.cc;
          femData:FuncCell fc0B99#0 = self.fc;
          tensor[2][] intervals0B9A#0 = self.intervals;
          tensor[2,3][] sints0B9B#0 = self.sints;
          femData:MeshCell[] newCells0B9C#0 = self.newCells;
          int count0B9D#0 = self.count;
          int totalCount0B9E#0 = self.totalCount;
          int ui0B9F#1 = self.ui;
          int vi0BA0#1 = self.vi;
          if debug0B84 then goto ASSIGN0BB8 else goto JOIN0BB5
        ASSIGN0BB8:  preds = [COND0BCE]
          bool _t0BB7#1 = NEQ<int>(ui0B9F,debugU0B83);
          if _t0BB7 then goto ASSIGN0BBC else goto ASSIGN0BBE
        ASSIGN0BBC:  preds = [COND0BBF]
          bool _t0BBA#1 = true;
          goto JOIN0BB9
        JOIN0BB9:  preds = [ASSIGN0BBC,ASSIGN0BBE]
          bool _t0BBB#1 = phi(_t0BBA,_t0BBD)
          if _t0BBB then goto STABILIZE0BC1 else goto JOIN0BC0
        STABILIZE0BC1:  preds = [COND0BCD]
          stabilize
          goto JOIN0BC0
        JOIN0BC0:  preds = [*STABILIZE0BC1,COND0BCD]
          goto JOIN0BB5
        JOIN0BB5:  preds = [JOIN0BC0,COND0BCE]
          int _t0BCF#1 = 0;
          bool _t0BD1#1 = EQ<int>(len0B92,_t0BCF);
          if _t0BD1 then goto STABILIZE0BD4 else goto JOIN0BD3
        STABILIZE0BD4:  preds = [COND0BE0]
          stabilize
          goto JOIN0BD3
        JOIN0BD3:  preds = [*STABILIZE0BD4,COND0BE0]
          int _t0BE1#1 = Subscript<int[]>(cells0B81,idx0B94);
          femData:MeshCell cc0BE3#2 = Subscript<femData:MeshCell[]>(0cell_a0B86,_t0BE1);
          int _t0BE6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0BE3);
          femData:FuncCell _t0BE8#1 = LoadFem<femData:FuncCell>(c0B85,_t0BE6);
          self.cc = cc0BE3;
          self.fc = _t0BE8;
          active
        ASSIGN0BBE:  preds = [COND0BBF]
          bool _t0BBD#1 = NEQ<int>(vi0BA0,debugV0B82);
          goto JOIN0BB9
    end start
    method update
        ENTRY0E98:  preds = []
          femData:MeshCell[] 0cell_a0BFF#1 = globals.0cell_a09BD;
          femData:FemFunc c0BFE#1 = globals.c09BF;
          tensor[2][] times0BFD#1 = globals.times0968;
          int[] cells0BFC#1 = globals.cells0969;
          tensor[3] rayVec0BFB#5 = globals.rayVec09C6;
          real rayU0C05#0 = self.rayU;
          real rayV0C06#0 = self.rayV;
          tensor[3] UV0C07#0 = self.UV;
          tensor[3] rayOrig0C08#2 = self.rayOrig;
          int offset0C09#1 = self.offset;
          int len0C0A#2 = self.len;
          int itter0C0B#2 = self.itter;
          int idx0C0C#0 = self.idx;
          tensor[2] interval0C0D#1 = self.interval;
          real s0C0E#5 = self.s;
          real e0C0F#3 = self.e;
          femData:MeshCell cc0C10#6 = self.cc;
          femData:FuncCell fc0C11#3 = self.fc;
          tensor[2][] intervals0C12#2 = self.intervals;
          tensor[2,3][] sints0C13#2 = self.sints;
          femData:MeshCell[] newCells0C14#2 = self.newCells;
          int count0C15#3 = self.count;
          int totalCount0C16#2 = self.totalCount;
          int ui0C17#3 = self.ui;
          int vi0C18#3 = self.vi;
          int _t0C2D#8 = 1;
          bool _t0C2F#1 = LT<int>(len0C0A,_t0C2D);
          if _t0C2F then goto STABILIZE0C32 else goto JOIN0C31
        STABILIZE0C32:  preds = [COND0C3E]
          stabilize
          goto JOIN0C31
        JOIN0C31:  preds = [*STABILIZE0C32,COND0C3E]
          tensor[3] _t0C3F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0C0E,rayVec0BFB);
          tensor[3] rayStart0C41#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0C08,_t0C3F);
          real _t0C43#1 = TensorIndex<tensor[3],[0]>(rayStart0C41);
          real _t0C45#1 = TensorIndex<tensor[3],[1]>(rayStart0C41);
          tensor[2] project0C47#4 = <tensor[2]>[_t0C43,_t0C45];
          femData:FemFunc _t0C49#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C4D#2 = ExtractFem<femData:Space,femData:FemFunc>(_t0C49);
          int _t0C4F#2 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          field _t0C51#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0C4F,_t0C4D,_t0C49);
          femData:Mesh _t0C53#4 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C57#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          field _t0C59#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0A3A, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0C57,_t0C53,_t0C53);
          field _t0C5B#3 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0C51,_t0C59);
          real _t0C5D#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0C5B,project0C47);
          real _t0C5F#2 = TensorIndex<tensor[3],[2]>(rayStart0C41);
          real f00C61#5 = λ(T0[],T1[])<(T0) - (T1)> (_t0C5D,_t0C5F);
          real _t0C63#1 = TensorIndex<tensor[3],[0]>(rayVec0BFB);
          real _t0C65#1 = TensorIndex<tensor[3],[1]>(rayVec0BFB);
          tensor[2] _t0C67#2 = <tensor[2]>[_t0C63,_t0C65];
          field _t0C7D#2 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0C5B);
          tensor[2] _t0C7F#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0C7D,project0C47);
          real _t0C81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0C67,_t0C7F);
          real _t0C83#2 = TensorIndex<tensor[3],[2]>(rayVec0BFB);
          real _t0C85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0C81,_t0C83);
          real _t0C87#1 = λ(T0[])<Abs(T0)> (_t0C85);
          int _t0C8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0C10);
          real _t0C8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0C53,_t0C8B);
          real _t0C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0C87,_t0C8D);
          real _t0C91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0C0F,s0C0E);
          real gradEps0C93#6 = Min<real>(_t0C8F,_t0C91);
          string _t0C95#1 = "hmmmm:";
          string _t0CAF#18 = "\n";
          Print<[string,tensor[2],string]>(_t0C95,_t0C7F,_t0CAF);
          string _t0CB2#1 = "fc dofs:";
          int[6] _t0CBC#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0C4D,_t0C4F);
          tensor[6] _t0CBE#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0C49,_t0CBC);
          Print<[string,tensor[6],string]>(_t0CB2,_t0CBE,_t0CAF);
          tensor[2] _t0CDD#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps0C93,_t0C67);
          tensor[2] _t0CDF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0C47,_t0CDD);
          real _t0CE1#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0C5B,_t0CDF);
          real _t0CE5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0CE1,_t0C5F);
          real _t0CE9#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps0C93,_t0C83);
          real f10CEB#4 = λ(T0[],T1[])<(T0) - (T1)> (_t0CE5,_t0CE9);
          string _t0CED#1 = "=========================\n";
          Print<[string]>(_t0CED);
          string _t0CF0#1 = "Ui/Vi:";
          string _t0CF2#2 = "/";
          Print<[string,int,string,int,string]>(_t0CF0,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0CF7#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t0CF7,cc0C10,_t0CAF);
          string _t0CFC#1 = "hess:";
          field _t0D14#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t0C7D);
          tensor[2,2] _t0D16#2 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t0D14,project0C47);
          string _t0D1A#1 = "norm:";
          real _t0D36#1 = λ(T0[2 2])<Sqrt(Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T0_{i0,i1}))>(i0=0..1)(i1=0..1))> (_t0D16);
          Print<[string,tensor[2,2],string,string,real,string]>(_t0CFC,_t0D16,_t0CAF,_t0D1A,_t0D36,_t0CAF);
          string _t0D3B#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t0D3B,_t0C7F,_t0CAF);
          string _t0D58#1 = "vals:";
          tensor[2] _t0D5A#2 = <tensor[2]>[f00C61,f10CEB];
          Print<[string,tensor[2],string]>(_t0D58,_t0D5A,_t0CAF);
          real _t0D60#6 = 0.e0;
          bool _t0D62#2 = GT<real>(f00C61,_t0D60);
          if _t0D62 then goto JOIN0D64 else goto ASSIGN0ED7
        JOIN0D64:  preds = [COND0D79,JOIN0D6E]
          int _t0D68#1 = phi(_t0C2D,_t0D72)
          bool _t0D7D#2 = GT<real>(f10CEB,_t0D60);
          if _t0D7D then goto JOIN0D7F else goto ASSIGN0ED9
        JOIN0D7F:  preds = [COND0D94,JOIN0D89]
          int _t0D83#1 = phi(_t0C2D,_t0D8D)
          int _t0D95#1 = IMul(_t0D68,_t0D83);
          int _t0D97#5 = 0;
          bool _t0D99#1 = GT<int>(_t0D95,_t0D97);
          bool _t0D9B#1 = BNot(_t0D99);
          if _t0D9B then goto COND0DB8 else goto ASSIGN0E27
        COND0DB8:  preds = [COND0E42]
          if _t0D62 then goto JOIN0DA3 else goto ASSIGN0EDD
        JOIN0DA3:  preds = [COND0DB8,JOIN0DAD]
          int _t0DA7#1 = phi(_t0C2D,_t0DB1)
          if _t0D7D then goto JOIN0DBE else goto ASSIGN0EDE
        JOIN0DBE:  preds = [COND0DD3,JOIN0DC8]
          int _t0DC2#1 = phi(_t0C2D,_t0DCC)
          int _t0DD4#1 = IMul(_t0DA7,_t0DC2);
          bool _t0DD8#1 = EQ<int>(_t0DD4,_t0D97);
          if _t0DD8 then goto ASSIGN0DDC else goto JOIN0DDA
        ASSIGN0DDC:  preds = [COND0DDE]
          string _t0DDB#1 = "Warn: 0 update\n";
          Print<[string]>(_t0DDB);
          goto JOIN0DDA
        JOIN0DDA:  preds = [MASSIGN0DDD,COND0DDE]
          string _t0DDF#1 = "update with interval:";
          Print<[string,real,string]>(_t0DDF,gradEps0C93,_t0CAF);
          string _t0DE4#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t0DE4,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0DEB#1 = "Count:";
          Print<[string,int,string]>(_t0DEB,count0C15,_t0CAF);
          int count0DF2#1 = IAdd(count0C15,_t0C2D);
          int totalCount0DF7#1 = IAdd(totalCount0C16,_t0C2D);
          string _t0DFA#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0DFA,_t0D5A,_t0CAF);
          string _t0E01#1 = "New interval:";
          real _t0E03#3 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[2] _t0E05#2 = <tensor[2]>[s0C0E,_t0E03];
          Print<[string,tensor[2],string]>(_t0E01,_t0E05,_t0CAF);
          tensor[2][] intervals0E0E#1 = Append<tensor[2]>(intervals0C12,_t0E05);
          tensor[3] _t0E17#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t0E03,rayVec0BFB);
          tensor[3] _t0E19#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0C08,_t0E17);
          tensor[2,3] _t0E1B#1 = <tensor[2,3]>[rayStart0C41,_t0E19];
          tensor[2,3][] sints0E1D#1 = Append<tensor[2,3]>(sints0C13,_t0E1B);
          femData:MeshCell[] newCells0E20#1 = Append<femData:MeshCell>(newCells0C14,cc0C10);
          goto JOIN0D9D
        JOIN0D9D:  preds = [ASSIGN0E22,ASSIGN0E41]
          int totalCount0DF8#3 = phi(totalCount0DF7,totalCount0C16)
          int count0DF3#2 = phi(count0DF2,count0C15)
          femData:MeshCell[] newCells0E21#3 = phi(newCells0E20,newCells0C14)
          tensor[2,3][] sints0E1E#2 = phi(sints0E1D,sints0C13)
          tensor[2][] intervals0E0F#3 = phi(intervals0E0E,intervals0C12)
          real s0E24#3 = phi(_t0E03,s0E40)
          bool _t0E43#1 = GTE<real>(s0E24,e0C0F);
          if _t0E43 then goto ASSIGN0EEA else goto JOIN0E45
        ASSIGN0EEA:  preds = [COND0E97]
          int itter0E48#4 = IAdd(itter0C0B,_t0C2D);
          bool _t0E4B#1 = GTE<int>(itter0E48,len0C0A);
          if _t0E4B then goto ASSIGN0E4F else goto ASSIGN0E6F
        ASSIGN0E4F:  preds = [COND0E90]
          string _t0E4E#1 = "TotalCount:";
          Print<[string,int,string]>(_t0E4E,totalCount0DF8,_t0CAF);
          string _t0E53#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t0E53,intervals0E0F,_t0CAF);
          string _t0E58#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t0E58,newCells0E21,_t0CAF);
          string _t0E5D#1 = ";";
          string _t0E5F#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui0C17,_t0E5D,vi0C18,_t0E5F);
          self.itter = itter0E48;
          self.s = s0E24;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0DF3;
          self.totalCount = totalCount0DF8;
          stabilize
          goto JOIN0E4D
        JOIN0E4D:  preds = [*STABILIZE0E62,ASSIGN0E8A]
          int count0E72#1 = phi(_t0D97)
          femData:FuncCell fc0E8E#1 = phi(_t0E89)
          femData:MeshCell cc0E7E#1 = phi(cc0E7D)
          real e0E84#1 = phi(e0E83)
          real s0E81#1 = phi(s0E80)
          tensor[2] interval0E77#1 = phi(interval0E76)
          goto JOIN0E45
        JOIN0E45:  preds = [JOIN0E4D,COND0E97]
          int count0E96#1 = phi(count0E72,count0DF3)
          femData:FuncCell fc0E95#1 = phi(fc0E8E,fc0C11)
          femData:MeshCell cc0E94#1 = phi(cc0E7E,cc0C10)
          real e0E93#1 = phi(e0E84,e0C0F)
          real s0E92#1 = phi(s0E81,s0E24)
          tensor[2] interval0E91#1 = phi(interval0E77,interval0C0D)
          int itter0E49#1 = phi(itter0E48,itter0C0B)
          self.itter = itter0E49;
          self.interval = interval0E91;
          self.s = s0E92;
          self.e = e0E93;
          self.cc = cc0E94;
          self.fc = fc0E95;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0E96;
          self.totalCount = totalCount0DF8;
          active
        ASSIGN0E6F:  preds = [COND0E90]
          string _t0E6E#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t0E6E);
          int _t0E74#2 = IAdd(offset0C09,itter0E48);
          tensor[2] interval0E76#3 = Subscript<tensor[2][]>(times0BFD,_t0E74);
          int _t0E7B#1 = Subscript<int[]>(cells0BFC,_t0E74);
          femData:MeshCell cc0E7D#2 = Subscript<femData:MeshCell[]>(0cell_a0BFF,_t0E7B);
          real s0E80#1 = TensorIndex<tensor[2],[0]>(interval0E76);
          real e0E83#1 = TensorIndex<tensor[2],[1]>(interval0E76);
          int _t0E87#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0E7D);
          femData:FuncCell _t0E89#1 = LoadFem<femData:FuncCell>(c0BFE,_t0E87);
          goto JOIN0E4D
        ASSIGN0EDE:  preds = [COND0DD3]
          bool _t0DC6#1 = LT<real>(f10CEB,_t0D60);
          if _t0DC6 then goto ASSIGN0DCA else goto JOIN0DC8
        ASSIGN0DCA:  preds = [COND0DD2]
          int _t0DC9#1 = -1;
          goto JOIN0DC8
        JOIN0DC8:  preds = [ASSIGN0DCA,COND0DD2]
          int _t0DCC#1 = phi(_t0DC9,_t0D97)
          goto JOIN0DBE
        ASSIGN0EDD:  preds = [COND0DB8]
          bool _t0DAB#1 = LT<real>(f00C61,_t0D60);
          if _t0DAB then goto ASSIGN0DAF else goto JOIN0DAD
        ASSIGN0DAF:  preds = [COND0DB7]
          int _t0DAE#1 = -1;
          goto JOIN0DAD
        JOIN0DAD:  preds = [ASSIGN0DAF,COND0DB7]
          int _t0DB1#1 = phi(_t0DAE,_t0D97)
          goto JOIN0DA3
        ASSIGN0E27:  preds = [COND0E42]
          real _t0E26#1 = λ(T0[])<Abs(T0)> (f00C61);
          real _t0E28#1 = 0.2e1;
          real _t0E2E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0C53,_t0C8B);
          real _t0E30#1 = λ(T0[],T1[])<(T0 * T1)> (_t0E28,_t0E2E);
          real _t0E32#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0E26,_t0E30);
          real epsUpdate0E34#2 = Max<real>(gradEps0C93,_t0E32);
          string _t0E36#1 = "update L:";
          Print<[string,real,string]>(_t0E36,epsUpdate0E34,_t0CAF);
          string _t0E3B#1 = "update G:";
          Print<[string,real,string]>(_t0E3B,gradEps0C93,_t0CAF);
          real s0E40#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,epsUpdate0E34);
          goto JOIN0D9D
        ASSIGN0ED9:  preds = [COND0D94]
          bool _t0D87#1 = LT<real>(f10CEB,_t0D60);
          if _t0D87 then goto ASSIGN0D8B else goto ASSIGN0D90
        ASSIGN0D8B:  preds = [COND0D93]
          int _t0D8A#1 = -1;
          goto JOIN0D89
        JOIN0D89:  preds = [ASSIGN0D8B,ASSIGN0D90]
          int _t0D8D#1 = phi(_t0D8A,_t0D8F)
          goto JOIN0D7F
        ASSIGN0D90:  preds = [COND0D93]
          int _t0D8F#1 = 0;
          goto JOIN0D89
        ASSIGN0ED7:  preds = [COND0D79]
          bool _t0D6C#1 = LT<real>(f00C61,_t0D60);
          if _t0D6C then goto ASSIGN0D70 else goto ASSIGN0D75
        ASSIGN0D70:  preds = [COND0D78]
          int _t0D6F#1 = -1;
          goto JOIN0D6E
        JOIN0D6E:  preds = [ASSIGN0D70,ASSIGN0D75]
          int _t0D72#1 = phi(_t0D6F,_t0D74)
          goto JOIN0D64
        ASSIGN0D75:  preds = [COND0D78]
          int _t0D74#1 = 0;
          goto JOIN0D6E
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0AC4:  preds = []
      int iresU0AAA#1 = globals.iresU095A;
      int iresV0AA9#1 = globals.iresV095B;
      int _t0AAD#2 = 0;
      int _t0AAF#2 = 1;
      int _t0AB1#1 = ISub(iresU0AAA,_t0AAF);
      int[] _t0AB3#1 = Range(_t0AAD,_t0AB1);
    FOREACH0AB6:  preds = [ASSIGN0AB4,NEXT0AC3]
      foreach (vi0AB5 in _t0AB3) on exit goto RETURN0AC5
      int _t0ABB#1 = ISub(iresV0AA9,_t0AAF);
      int[] _t0ABD#1 = Range(_t0AAD,_t0ABB);
    FOREACH0AC0:  preds = [ASSIGN0EA6,NEXT0AC2]
      foreach (ui0ABF in _t0ABD) on exit goto NEXT0AC3
      new ray(ui0ABF,vi0AB5);
      goto FOREACH0AC0
    NEXT0AC3:  preds = [FOREACH0AC0]
      goto FOREACH0AB6
    RETURN0AC5:  preds = [FOREACH0AB6]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0951 (a) = <no-default>
  input 0b0450_intermedateGlobal0952 (b) = <no-default>
  input 0c0452_intermedateGlobal0953 (c) = <no-default>
  input isoval0954 (isoval) = <default>
  input thick0955 (thick) = <default>
  input camEye0956 (camEye) = <default>
  input camAt0957 (camAt) = <default>
  input camUp0958 (camUp) = <default>
  input camFOV0959 (camFOV) = <default>
  input iresU095A (iresU) = <default>
  input iresV095B (iresV) = <default>
  input camNear095C (camNear) = <default>
  input camFar095D (camFar) = <default>
  input refStep095E (refStep) = <default>
  input rayStep095F (rayStep) = <default>
  input lightVsp0960 (lightVsp) = <default>
  input phongKa0961 (phongKa) = <default>
  input phongKd0962 (phongKd) = <default>
  input debug0963 (debug) = <default>
  input debugU0964 (debugU) = <default>
  input debugV0965 (debugV) = <default>
  input eps0966 (eps) = <default>
  input indecies0967 (indecies) = <no-default>
  input times0968 (times) = <no-default>
  input cells0969 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a09BD
  global femData:FemFunc c09BF
  global tensor[3] camU09C2
  global tensor[3] camV09C3
  global real camVmax09C4
  global real camUmax09C5
  global tensor[3] rayVec09C6
## functions
  function femData:MeshPos _msh_newtonInverse0A3A (tensor[2] pos09C7#6, int cellInt09C8#11, femData:Mesh mesh09C9#23) {
    ENTRY0A39:  preds = []
      real _t09CA#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn09CE#6 = <tensor[2]>[_t09CA,_t09CA];
      int _t09DE#1 = 0;
      int _t09E0#1 = 16;
      int[] _t09E2#1 = Range(_t09DE,_t09E0);
    FOREACH09E6:  preds = [ASSIGN09E3,NEXT0A35]
      foreach (itter09E4 in _t09E2) on exit goto ASSIGN0A37
        tensor[2] xn09E5#8 = phi(xn09CE,xn09EF)
      tensor[2] xn09EF#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      real _t09F1#2 = 0.1e-7;
      real _t09F5#1 = λ(T0[],T1[])<(T0 * T1)> (_t09F1,_t09F1);
      real _t09F7#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      bool _t09F9#1 = GTE<real>(_t09F5,_t09F7);
      if _t09F9 then goto ASSIGN09FD else goto JOIN09FB
    ASSIGN09FD:  preds = [COND0A34]
      real _t09FC#3 = 0.1e1;
      real _t09FE#3 = 0.1e-8;
      real _t0A00#1 = λ(T0[],T1[])<(T0 + T1)> (_t09FC,_t09FE);
      tensor[2] _t0A06#1 = <tensor[2]>[_t09FC,_t09FC];
      real _t0A08#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t0A06,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      bool _t0A0A#1 = GT<real>(_t0A00,_t0A08);
      tensor[2] _t0A10#1 = <tensor[2]>[_t09FE,_t09FE];
      tensor[2] _t0A12#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t0A10,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      real _t0A14#1 = TensorIndex<tensor[2],[0]>(_t0A12);
      real _t0A16#2 = -0.e0;
      bool _t0A18#1 = GT<real>(_t0A14,_t0A16);
      real _t0A22#1 = TensorIndex<tensor[2],[1]>(_t0A12);
      bool _t0A26#1 = GT<real>(_t0A22,_t0A16);
      bool _t0A28#1 = BAnd(_t0A18,_t0A26);
      bool _t0A2A#1 = BAnd(_t0A0A,_t0A28);
      if _t0A2A then goto ASSIGN0A2E else goto ASSIGN0A31
    ASSIGN0A2E:  preds = [COND0A33]
      femData:MeshPos _t0A2D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh09C9,cellInt09C8,xn09EF,pos09C7);
      return _t0A2D
      goto JOIN0A2C
    JOIN0A2C:  preds = [*RETURN(_t0A2D)0A2F,*RETURN(_t0A30)0A32]
      goto JOIN09FB
    JOIN09FB:  preds = [*JOIN0A2C,COND0A34]
      goto FOREACH09E6
    ASSIGN0A31:  preds = [COND0A33]
      femData:MeshPos _t0A30#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A30
      goto JOIN0A2C
    ASSIGN0A37:  preds = [FOREACH09E6]
      femData:MeshPos _t0A36#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A36
}
  function int[2] nextCell40A4C (int faceIdx0A3B#1, int cell0A3C#1, femData:Mesh mesh0A3D#1) {
    ENTRY0A4B:  preds = []
      int _t0A3E#1 = 6;
      int _t0A40#1 = IMul(cell0A3C,_t0A3E);
      int _t0A42#1 = 2;
      int _t0A44#1 = IMul(faceIdx0A3B,_t0A42);
      int _t0A46#1 = IAdd(_t0A40,_t0A44);
      int[2] _t0A48#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0A3D,_t0A46);
      return _t0A48
}
## input initialization
  ENTRY09BB:  preds = []
    real isoval096A#1 = 0.2e0;
    globals.isoval0954 = isoval096A;
    real thick096D#1 = 0.7e-1;
    globals.thick0955 = thick096D;
    real _t0970#1 = -0.5e0;
    real _t0972#5 = 0.5e0;
    tensor[3] camEye0976#1 = <tensor[3]>[_t0970,_t0972,_t0972];
    globals.camEye0956 = camEye0976;
    tensor[3] camAt097F#1 = <tensor[3]>[_t0972,_t0972,_t0972];
    globals.camAt0957 = camAt097F;
    real _t0982#2 = 0.e0;
    real _t0986#2 = 0.1e1;
    tensor[3] camUp0988#2 = <tensor[3]>[_t0982,_t0982,_t0986];
    globals.camUp0958 = camUp0988;
    real camFOV098B#1 = 0.137e2;
    globals.camFOV0959 = camFOV098B;
    int iresU098E#2 = 10;
    globals.iresU095A = iresU098E;
    globals.iresV095B = iresU098E;
    real camNear0994#1 = -0.2e1;
    globals.camNear095C = camNear0994;
    real camFar0997#1 = 0.5e1;
    globals.camFar095D = camFar0997;
    globals.refStep095E = _t0986;
    real rayStep099D#1 = 0.1e-1;
    globals.rayStep095F = rayStep099D;
    globals.lightVsp0960 = camUp0988;
    real phongKa09A9#1 = 0.1e0;
    globals.phongKa0961 = phongKa09A9;
    real phongKd09AC#1 = 0.9e0;
    globals.phongKd0962 = phongKd09AC;
    bool debug09AF#1 = false;
    globals.debug0963 = debug09AF;
    int debugU09B2#1 = 8;
    globals.debugU0964 = debugU09B2;
    int debugV09B5#1 = 2;
    globals.debugV0965 = debugV09B5;
    real eps09B8#1 = 0.1e-8;
    globals.eps0966 = eps09B8;
    return
## global-variable initialization
  ENTRY0AA7:  preds = []
    femData:Mesh a0A55#3 = globals.a0951;
    femData:Space 0b0450_intermedateGlobal0A54#1 = globals.0b0450_intermedateGlobal0952;
    femData:FemFunc 0c0452_intermedateGlobal0A53#1 = globals.0c0452_intermedateGlobal0953;
    tensor[3] camEye0A52#14 = globals.camEye0956;
    tensor[3] camAt0A51#14 = globals.camAt0957;
    tensor[3] camUp0A50#4 = globals.camUp0958;
    real camFOV0A4F#2 = globals.camFOV0959;
    int iresU0A4E#1 = globals.iresU095A;
    int iresV0A4D#1 = globals.iresV095B;
    int _t0A5F#1 = 0;
    int _t0A61#1 = 1;
    int _t0A63#1 = ExtractFemItem<int,NumCell(Mesh)>(a0A55);
    int _t0A65#1 = ISub(_t0A63,_t0A61);
    int[] _t0A67#1 = Range(_t0A5F,_t0A65);
    femData:MeshCell[] _t0A69#1 = <femData:MeshCell[]>{};
  FOREACH0A6D:  preds = [ASSIGN0A6A,NEXT0A72]
    foreach (_t0A6B in _t0A67) on exit goto GASSIGN0EB5
      femData:MeshCell[] _t0A6C#2 = phi(_t0A69,_t0A70)
    femData:MeshCell _t0A6E#1 = LoadFem<femData:MeshCell>(a0A55,_t0A6B);
    femData:MeshCell[] _t0A70#1 = Append<femData:MeshCell>(_t0A6C,_t0A6E);
    goto FOREACH0A6D
  GASSIGN0EB5:  preds = [FOREACH0A6D]
    globals.0cell_a09BD = _t0A6C;
    femData:Space b0A76#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0A54,a0A55);
    femData:FemFunc c0A79#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0A53,b0A76);
    globals.c09BF = c0A79;
    tensor[3] camN0A83#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52);
    tensor[3] camU0A88#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50);
    globals.camU09C2 = camU0A88;
    tensor[3] camV0A8B#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52);
    globals.camV09C3 = camV0A8B;
    real _t0A8E#2 = 0.314159265358979323846264338327950288e1;
    real _t0A92#2 = 0.36e3;
    real camVmax0A98#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV0A4F,_t0A8E,_t0A92,camAt0A51,camEye0A52);
    globals.camVmax09C4 = camVmax0A98;
    real _t0A9B#1 = IntToReal(iresU0A4E);
    real _t0A9F#1 = IntToReal(iresV0A4D);
    real camUmax0AA1#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV0A4F,_t0A8E,_t0A92,camAt0A51,camEye0A52,_t0A9B,_t0A9F);
    globals.camUmax09C5 = camUmax0AA1;
    globals.rayVec09C6 = camN0A83;
    return
## strand
  strand ray (int ui0AC6#3, int vi0AC7#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY0B6B:  preds = []
        femData:MeshCell[] 0cell_a0AE6#1 = globals.0cell_a09BD;
        femData:FemFunc c0AE5#1 = globals.c09BF;
        tensor[3] camEye0AE4#1 = globals.camEye0956;
        int iresU0AE3#2 = globals.iresU095A;
        int iresV0AE2#3 = globals.iresV095B;
        int[] indecies0AE1#2 = globals.indecies0967;
        tensor[2][] times0AE0#1 = globals.times0968;
        tensor[3] camU0ADF#2 = globals.camU09C2;
        tensor[3] camV0ADE#2 = globals.camV09C3;
        real camVmax0ADD#6 = globals.camVmax09C4;
        real camUmax0ADC#6 = globals.camUmax09C5;
        real _t0B08#6 = -0.5e0;
        real _t0B0A#3 = IntToReal(ui0AC6);
        real _t0B0C#3 = IntToReal(iresU0AE3);
        real _t0B0E#6 = 0.5e0;
        real rayU0B12#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E);
        real _t0B18#3 = IntToReal(vi0AC7);
        real _t0B1A#3 = IntToReal(iresV0AE2);
        real rayV0B20#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E);
        tensor[3] UV0B26#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E,camU0ADF,camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E,camV0ADE);
        tensor[3] rayOrig0B28#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye0AE4,camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E,camU0ADF,camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E,camV0ADE);
        int _t0B2A#2 = IMul(ui0AC6,iresV0AE2);
        int _t0B2C#1 = IAdd(_t0B2A,vi0AC7);
        int offset0B2E#2 = Subscript<int[]>(indecies0AE1,_t0B2C);
        int _t0B30#1 = IMul(iresU0AE3,iresV0AE2);
        int _t0B34#1 = IAdd(_t0B30,_t0B2A);
        int _t0B36#1 = IAdd(_t0B34,vi0AC7);
        int len0B38#1 = Subscript<int[]>(indecies0AE1,_t0B36);
        int itter0B3A#5 = 0;
        int idx0B3C#2 = IAdd(offset0B2E,itter0B3A);
        tensor[2] interval0B3E#3 = Subscript<tensor[2][]>(times0AE0,idx0B3C);
        real s0B40#1 = TensorIndex<tensor[2],[0]>(interval0B3E);
        real e0B42#1 = TensorIndex<tensor[2],[1]>(interval0B3E);
        femData:MeshCell cc0B46#2 = Subscript<femData:MeshCell[]>(0cell_a0AE6,itter0B3A);
        int _t0B49#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B46);
        femData:FuncCell _t0B4B#1 = LoadFem<femData:FuncCell>(c0AE5,_t0B49);
        tensor[2][0] _t0B51#1 = <tensor[2][0]>{};
        tensor[2][] _t0B53#1 = MkDynamic<tensor[2],0>(_t0B51);
        tensor[2,3][0] _t0B57#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t0B59#1 = MkDynamic<tensor[2,3],0>(_t0B57);
        femData:MeshCell[0] _t0B5D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0B5F#1 = MkDynamic<femData:MeshCell,0>(_t0B5D);
        self.rayU = rayU0B12;
        self.rayV = rayV0B20;
        self.UV = UV0B26;
        self.rayOrig = rayOrig0B28;
        self.offset = offset0B2E;
        self.len = len0B38;
        self.itter = itter0B3A;
        self.idx = idx0B3C;
        self.interval = interval0B3E;
        self.s = s0B40;
        self.e = e0B42;
        self.cc = cc0B46;
        self.fc = _t0B4B;
        self.intervals = _t0B53;
        self.sints = _t0B59;
        self.newCells = _t0B5F;
        self.count = itter0B3A;
        self.totalCount = itter0B3A;
        self.ui = ui0AC6;
        self.vi = vi0AC7;
        return
    end state init
    method start
        ENTRY0BEE:  preds = []
          femData:MeshCell[] 0cell_a0B86#1 = globals.0cell_a09BD;
          femData:FemFunc c0B85#1 = globals.c09BF;
          bool debug0B84#1 = globals.debug0963;
          int debugU0B83#1 = globals.debugU0964;
          int debugV0B82#1 = globals.debugV0965;
          int[] cells0B81#1 = globals.cells0969;
          int len0B92#1 = self.len;
          int idx0B94#1 = self.idx;
          int ui0B9F#1 = self.ui;
          int vi0BA0#1 = self.vi;
          if debug0B84 then goto ASSIGN0BB8 else goto JOIN0BB5
        ASSIGN0BB8:  preds = [COND0BCE]
          bool _t0BB7#1 = NEQ<int>(ui0B9F,debugU0B83);
          if _t0BB7 then goto ASSIGN0BBC else goto ASSIGN0BBE
        ASSIGN0BBC:  preds = [COND0BBF]
          bool _t0BBA#1 = true;
          goto JOIN0BB9
        JOIN0BB9:  preds = [ASSIGN0BBC,ASSIGN0BBE]
          bool _t0BBB#1 = phi(_t0BBA,_t0BBD)
          if _t0BBB then goto STABILIZE0BC1 else goto JOIN0BC0
        STABILIZE0BC1:  preds = [COND0BCD]
          stabilize
          goto JOIN0BC0
        JOIN0BC0:  preds = [*STABILIZE0BC1,COND0BCD]
          goto JOIN0BB5
        JOIN0BB5:  preds = [JOIN0BC0,COND0BCE]
          int _t0BCF#1 = 0;
          bool _t0BD1#1 = EQ<int>(len0B92,_t0BCF);
          if _t0BD1 then goto STABILIZE0BD4 else goto JOIN0BD3
        STABILIZE0BD4:  preds = [COND0BE0]
          stabilize
          goto JOIN0BD3
        JOIN0BD3:  preds = [*STABILIZE0BD4,COND0BE0]
          int _t0BE1#1 = Subscript<int[]>(cells0B81,idx0B94);
          femData:MeshCell cc0BE3#2 = Subscript<femData:MeshCell[]>(0cell_a0B86,_t0BE1);
          int _t0BE6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0BE3);
          femData:FuncCell _t0BE8#1 = LoadFem<femData:FuncCell>(c0B85,_t0BE6);
          self.cc = cc0BE3;
          self.fc = _t0BE8;
          active
        ASSIGN0BBE:  preds = [COND0BBF]
          bool _t0BBD#1 = NEQ<int>(vi0BA0,debugV0B82);
          goto JOIN0BB9
    end start
    method update
        ENTRY0E98:  preds = []
          femData:MeshCell[] 0cell_a0BFF#1 = globals.0cell_a09BD;
          femData:FemFunc c0BFE#1 = globals.c09BF;
          tensor[2][] times0BFD#1 = globals.times0968;
          int[] cells0BFC#1 = globals.cells0969;
          tensor[3] rayVec0BFB#5 = globals.rayVec09C6;
          tensor[3] rayOrig0C08#2 = self.rayOrig;
          int offset0C09#1 = self.offset;
          int len0C0A#2 = self.len;
          int itter0C0B#2 = self.itter;
          tensor[2] interval0C0D#1 = self.interval;
          real s0C0E#6 = self.s;
          real e0C0F#3 = self.e;
          femData:MeshCell cc0C10#6 = self.cc;
          femData:FuncCell fc0C11#3 = self.fc;
          tensor[2][] intervals0C12#2 = self.intervals;
          tensor[2,3][] sints0C13#2 = self.sints;
          femData:MeshCell[] newCells0C14#2 = self.newCells;
          int count0C15#3 = self.count;
          int totalCount0C16#2 = self.totalCount;
          int ui0C17#3 = self.ui;
          int vi0C18#3 = self.vi;
          int _t0C2D#8 = 1;
          bool _t0C2F#1 = LT<int>(len0C0A,_t0C2D);
          if _t0C2F then goto STABILIZE0C32 else goto JOIN0C31
        STABILIZE0C32:  preds = [COND0C3E]
          stabilize
          goto JOIN0C31
        JOIN0C31:  preds = [*STABILIZE0C32,COND0C3E]
          tensor[3] rayStart0C41#4 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig0C08,s0C0E,rayVec0BFB);
          real _t0C43#1 = TensorIndex<tensor[3],[0]>(rayStart0C41);
          real _t0C45#1 = TensorIndex<tensor[3],[1]>(rayStart0C41);
          tensor[2] project0C47#7 = <tensor[2]>[_t0C43,_t0C45];
          femData:FemFunc _t0C49#9 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C4D#8 = ExtractFem<femData:Space,femData:FemFunc>(_t0C49);
          int _t0C4F#8 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          femData:Mesh _t0C53#16 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C57#7 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          real _t0C5F#3 = TensorIndex<tensor[3],[2]>(rayStart0C41);
          real f00C61#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[])<(Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C5F);
          real _t0C63#1 = TensorIndex<tensor[3],[0]>(rayVec0BFB);
          real _t0C65#1 = TensorIndex<tensor[3],[1]>(rayVec0BFB);
          tensor[2] _t0C67#2 = <tensor[2]>[_t0C63,_t0C65];
          tensor[2] _t0C7F#2 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i104})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{i114},T6)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i112}⊛Basis()dx_{'0'},T6) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0A3A, 3, 4, 4)_{i113}⊛Basis()dx_{'1'},T6)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)>_{2} (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          real _t0C83#2 = TensorIndex<tensor[3],[2]>(rayVec0BFB);
          int _t0C8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0C10);
          real _t0C8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0C53,_t0C8B);
          real _t0C8F#1 = λ(T0[2],INT1,FEM(fns)2,FEM(func)3,INT4,FEM(msh)5,FEM(msh)6,T7[2],T8[],T9[])<(Abs((Σ(i0=0..1)<((T0_{i0} * Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 1, 2, 3)⊛Basis()dx_{i104})[femInvV(0A3A, 4, 5, 5)_{i0}⊛Basis(){2}],T7) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0A3A, 4, 5, 5)_{i116}⊛Basis()dx_{i114},T7)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0A3A, 4, 5, 5)_{i112}⊛Basis()dx_{'0'},T7) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0A3A, 4, 5, 5)_{i113}⊛Basis()dx_{'1'},T7)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)))>(i0=0..1)) - (T8))) / ( T9)> (_t0C67,_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C83,_t0C8D);
          real _t0C91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0C0F,s0C0E);
          real gradEps0C93#7 = Min<real>(_t0C8F,_t0C91);
          string _t0C95#1 = "hmmmm:";
          string _t0CAF#18 = "\n";
          Print<[string,tensor[2],string]>(_t0C95,_t0C7F,_t0CAF);
          string _t0CB2#1 = "fc dofs:";
          int[6] _t0CBC#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0C4D,_t0C4F);
          tensor[6] _t0CBE#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0C49,_t0CBC);
          Print<[string,tensor[6],string]>(_t0CB2,_t0CBE,_t0CAF);
          tensor[2] _t0CDF#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (project0C47,gradEps0C93,_t0C67);
          real f10CEB#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)) - ((T8 * T9))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,_t0CDF,_t0C5F,gradEps0C93,_t0C83);
          string _t0CED#1 = "=========================\n";
          Print<[string]>(_t0CED);
          string _t0CF0#1 = "Ui/Vi:";
          string _t0CF2#2 = "/";
          Print<[string,int,string,int,string]>(_t0CF0,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0CF7#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t0CF7,cc0C10,_t0CAF);
          string _t0CFC#1 = "hess:";
          tensor[2,2] _t0D16#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Σ(i107=0..1)<((((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117},T6)))>(i119=0..1)))>(i117=0..1)) / ( Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1)) * Σ(i1802=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i107,i1802})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4534=0..1)<((ϵ_{ii4534,ii1802} * Σ(i4536=0..1)<((ϵ_{ii4536,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4536}⊛Basis()dx_{i4534},T6)))>(i4536=0..1)))>(i4534=0..1)) / ( Σ(i4532=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4532}⊛Basis()dx_{'0'},T6) * Σ(i4533=0..1)<((ϵ_{ii4532,ii4533} * Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'1'},T6)))>(i4533=0..1)))>(i4532=0..1))))>(i1802=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i107})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117,i1},T6)))>(i119=0..1)))>(i117=0..1) * Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1))) - ((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117},T6)))>(i119=0..1)))>(i117=0..1) * Σ(i115=0..1)<(((Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1',i1},T6)))>(i116=0..1))))>(i115=0..1)))) / ( (Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1) * Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1))))))>(i107=0..1)>_{2 2} (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          string _t0D1A#1 = "norm:";
          real _t0D36#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Sqrt(Σ(i0=0..1)(i1=0..1)<((Σ(i108=0..1)<((((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1)) / ( Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1)) * Σ(i1803=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108,i1803})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4535=0..1)<((ϵ_{ii4535,ii1803} * Σ(i4537=0..1)<((ϵ_{ii4537,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4537}⊛Basis()dx_{i4535},T6)))>(i4537=0..1)))>(i4535=0..1)) / ( Σ(i4533=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'0'},T6) * Σ(i4534=0..1)<((ϵ_{ii4533,ii4534} * Probe(femV(0A3A, 3, 4, 4)_{i4534}⊛Basis()dx_{'1'},T6)))>(i4534=0..1)))>(i4533=0..1))))>(i1803=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118,i1},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))) - ((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<(((Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1',i1},T6)))>(i117=0..1))))>(i116=0..1)))) / ( (Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))))))>(i108=0..1) * Σ(i108=0..1)<((((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1)) / ( Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1)) * Σ(i1803=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108,i1803})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4535=0..1)<((ϵ_{ii4535,ii1803} * Σ(i4537=0..1)<((ϵ_{ii4537,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4537}⊛Basis()dx_{i4535},T6)))>(i4537=0..1)))>(i4535=0..1)) / ( Σ(i4533=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'0'},T6) * Σ(i4534=0..1)<((ϵ_{ii4533,ii4534} * Probe(femV(0A3A, 3, 4, 4)_{i4534}⊛Basis()dx_{'1'},T6)))>(i4534=0..1)))>(i4533=0..1))))>(i1803=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118,i1},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))) - ((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<(((Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1',i1},T6)))>(i117=0..1))))>(i116=0..1)))) / ( (Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))))))>(i108=0..1)))>(i0=0..1)(i1=0..1))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          Print<[string,tensor[2,2],string,string,real,string]>(_t0CFC,_t0D16,_t0CAF,_t0D1A,_t0D36,_t0CAF);
          string _t0D3B#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t0D3B,_t0C7F,_t0CAF);
          string _t0D58#1 = "vals:";
          tensor[2] _t0D5A#2 = <tensor[2]>[f00C61,f10CEB];
          Print<[string,tensor[2],string]>(_t0D58,_t0D5A,_t0CAF);
          real _t0D60#6 = 0.e0;
          bool _t0D62#2 = GT<real>(f00C61,_t0D60);
          if _t0D62 then goto JOIN0D64 else goto ASSIGN0ED7
        JOIN0D64:  preds = [COND0D79,JOIN0D6E]
          int _t0D68#1 = phi(_t0C2D,_t0D72)
          bool _t0D7D#2 = GT<real>(f10CEB,_t0D60);
          if _t0D7D then goto JOIN0D7F else goto ASSIGN0ED9
        JOIN0D7F:  preds = [COND0D94,JOIN0D89]
          int _t0D83#1 = phi(_t0C2D,_t0D8D)
          int _t0D95#1 = IMul(_t0D68,_t0D83);
          int _t0D97#5 = 0;
          bool _t0D99#1 = GT<int>(_t0D95,_t0D97);
          bool _t0D9B#1 = BNot(_t0D99);
          if _t0D9B then goto COND0DB8 else goto ASSIGN0E29
        COND0DB8:  preds = [COND0E42]
          if _t0D62 then goto JOIN0DA3 else goto ASSIGN0EDD
        JOIN0DA3:  preds = [COND0DB8,JOIN0DAD]
          int _t0DA7#1 = phi(_t0C2D,_t0DB1)
          if _t0D7D then goto JOIN0DBE else goto ASSIGN0EDE
        JOIN0DBE:  preds = [COND0DD3,JOIN0DC8]
          int _t0DC2#1 = phi(_t0C2D,_t0DCC)
          int _t0DD4#1 = IMul(_t0DA7,_t0DC2);
          bool _t0DD8#1 = EQ<int>(_t0DD4,_t0D97);
          if _t0DD8 then goto ASSIGN0DDC else goto JOIN0DDA
        ASSIGN0DDC:  preds = [COND0DDE]
          string _t0DDB#1 = "Warn: 0 update\n";
          Print<[string]>(_t0DDB);
          goto JOIN0DDA
        JOIN0DDA:  preds = [MASSIGN0DDD,COND0DDE]
          string _t0DDF#1 = "update with interval:";
          Print<[string,real,string]>(_t0DDF,gradEps0C93,_t0CAF);
          string _t0DE4#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t0DE4,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0DEB#1 = "Count:";
          Print<[string,int,string]>(_t0DEB,count0C15,_t0CAF);
          int count0DF2#1 = IAdd(count0C15,_t0C2D);
          int totalCount0DF7#1 = IAdd(totalCount0C16,_t0C2D);
          string _t0DFA#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0DFA,_t0D5A,_t0CAF);
          string _t0E01#1 = "New interval:";
          real _t0E03#2 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[2] _t0E05#2 = <tensor[2]>[s0C0E,_t0E03];
          Print<[string,tensor[2],string]>(_t0E01,_t0E05,_t0CAF);
          tensor[2][] intervals0E0E#1 = Append<tensor[2]>(intervals0C12,_t0E05);
          tensor[3] _t0E19#1 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig0C08,s0C0E,gradEps0C93,rayVec0BFB);
          tensor[2,3] _t0E1B#1 = <tensor[2,3]>[rayStart0C41,_t0E19];
          tensor[2,3][] sints0E1D#1 = Append<tensor[2,3]>(sints0C13,_t0E1B);
          femData:MeshCell[] newCells0E20#1 = Append<femData:MeshCell>(newCells0C14,cc0C10);
          goto JOIN0D9D
        JOIN0D9D:  preds = [ASSIGN0E22,ASSIGN0E41]
          int totalCount0DF8#3 = phi(totalCount0DF7,totalCount0C16)
          int count0DF3#2 = phi(count0DF2,count0C15)
          femData:MeshCell[] newCells0E21#3 = phi(newCells0E20,newCells0C14)
          tensor[2,3][] sints0E1E#2 = phi(sints0E1D,sints0C13)
          tensor[2][] intervals0E0F#3 = phi(intervals0E0E,intervals0C12)
          real s0E24#3 = phi(_t0E03,s0E40)
          bool _t0E43#1 = GTE<real>(s0E24,e0C0F);
          if _t0E43 then goto ASSIGN0EEA else goto JOIN0E45
        ASSIGN0EEA:  preds = [COND0E97]
          int itter0E48#4 = IAdd(itter0C0B,_t0C2D);
          bool _t0E4B#1 = GTE<int>(itter0E48,len0C0A);
          if _t0E4B then goto ASSIGN0E4F else goto ASSIGN0E6F
        ASSIGN0E4F:  preds = [COND0E90]
          string _t0E4E#1 = "TotalCount:";
          Print<[string,int,string]>(_t0E4E,totalCount0DF8,_t0CAF);
          string _t0E53#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t0E53,intervals0E0F,_t0CAF);
          string _t0E58#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t0E58,newCells0E21,_t0CAF);
          string _t0E5D#1 = ";";
          string _t0E5F#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui0C17,_t0E5D,vi0C18,_t0E5F);
          self.itter = itter0E48;
          self.s = s0E24;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0DF3;
          self.totalCount = totalCount0DF8;
          stabilize
          goto JOIN0E4D
        JOIN0E4D:  preds = [*STABILIZE0E62,ASSIGN0E8A]
          int count0E72#1 = phi(_t0D97)
          femData:FuncCell fc0E8E#1 = phi(_t0E89)
          femData:MeshCell cc0E7E#1 = phi(cc0E7D)
          real e0E84#1 = phi(e0E83)
          real s0E81#1 = phi(s0E80)
          tensor[2] interval0E77#1 = phi(interval0E76)
          goto JOIN0E45
        JOIN0E45:  preds = [JOIN0E4D,COND0E97]
          int count0E96#1 = phi(count0E72,count0DF3)
          femData:FuncCell fc0E95#1 = phi(fc0E8E,fc0C11)
          femData:MeshCell cc0E94#1 = phi(cc0E7E,cc0C10)
          real e0E93#1 = phi(e0E84,e0C0F)
          real s0E92#1 = phi(s0E81,s0E24)
          tensor[2] interval0E91#1 = phi(interval0E77,interval0C0D)
          int itter0E49#1 = phi(itter0E48,itter0C0B)
          self.itter = itter0E49;
          self.interval = interval0E91;
          self.s = s0E92;
          self.e = e0E93;
          self.cc = cc0E94;
          self.fc = fc0E95;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0E96;
          self.totalCount = totalCount0DF8;
          active
        ASSIGN0E6F:  preds = [COND0E90]
          string _t0E6E#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t0E6E);
          int _t0E74#2 = IAdd(offset0C09,itter0E48);
          tensor[2] interval0E76#3 = Subscript<tensor[2][]>(times0BFD,_t0E74);
          int _t0E7B#1 = Subscript<int[]>(cells0BFC,_t0E74);
          femData:MeshCell cc0E7D#2 = Subscript<femData:MeshCell[]>(0cell_a0BFF,_t0E7B);
          real s0E80#1 = TensorIndex<tensor[2],[0]>(interval0E76);
          real e0E83#1 = TensorIndex<tensor[2],[1]>(interval0E76);
          int _t0E87#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0E7D);
          femData:FuncCell _t0E89#1 = LoadFem<femData:FuncCell>(c0BFE,_t0E87);
          goto JOIN0E4D
        ASSIGN0EDE:  preds = [COND0DD3]
          bool _t0DC6#1 = LT<real>(f10CEB,_t0D60);
          if _t0DC6 then goto ASSIGN0DCA else goto JOIN0DC8
        ASSIGN0DCA:  preds = [COND0DD2]
          int _t0DC9#1 = -1;
          goto JOIN0DC8
        JOIN0DC8:  preds = [ASSIGN0DCA,COND0DD2]
          int _t0DCC#1 = phi(_t0DC9,_t0D97)
          goto JOIN0DBE
        ASSIGN0EDD:  preds = [COND0DB8]
          bool _t0DAB#1 = LT<real>(f00C61,_t0D60);
          if _t0DAB then goto ASSIGN0DAF else goto JOIN0DAD
        ASSIGN0DAF:  preds = [COND0DB7]
          int _t0DAE#1 = -1;
          goto JOIN0DAD
        JOIN0DAD:  preds = [ASSIGN0DAF,COND0DB7]
          int _t0DB1#1 = phi(_t0DAE,_t0D97)
          goto JOIN0DA3
        ASSIGN0E29:  preds = [COND0E42]
          real _t0E28#1 = 0.2e1;
          real _t0E2E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0C53,_t0C8B);
          real _t0E32#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<(Abs((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7))) / ( (T8 * T9))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C5F,_t0E28,_t0E2E);
          real epsUpdate0E34#2 = Max<real>(gradEps0C93,_t0E32);
          string _t0E36#1 = "update L:";
          Print<[string,real,string]>(_t0E36,epsUpdate0E34,_t0CAF);
          string _t0E3B#1 = "update G:";
          Print<[string,real,string]>(_t0E3B,gradEps0C93,_t0CAF);
          real s0E40#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,epsUpdate0E34);
          goto JOIN0D9D
        ASSIGN0ED9:  preds = [COND0D94]
          bool _t0D87#1 = LT<real>(f10CEB,_t0D60);
          if _t0D87 then goto ASSIGN0D8B else goto ASSIGN0D90
        ASSIGN0D8B:  preds = [COND0D93]
          int _t0D8A#1 = -1;
          goto JOIN0D89
        JOIN0D89:  preds = [ASSIGN0D8B,ASSIGN0D90]
          int _t0D8D#1 = phi(_t0D8A,_t0D8F)
          goto JOIN0D7F
        ASSIGN0D90:  preds = [COND0D93]
          int _t0D8F#1 = 0;
          goto JOIN0D89
        ASSIGN0ED7:  preds = [COND0D79]
          bool _t0D6C#1 = LT<real>(f00C61,_t0D60);
          if _t0D6C then goto ASSIGN0D70 else goto ASSIGN0D75
        ASSIGN0D70:  preds = [COND0D78]
          int _t0D6F#1 = -1;
          goto JOIN0D6E
        JOIN0D6E:  preds = [ASSIGN0D70,ASSIGN0D75]
          int _t0D72#1 = phi(_t0D6F,_t0D74)
          goto JOIN0D64
        ASSIGN0D75:  preds = [COND0D78]
          int _t0D74#1 = 0;
          goto JOIN0D6E
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0AC4:  preds = []
      int iresU0AAA#1 = globals.iresU095A;
      int iresV0AA9#1 = globals.iresV095B;
      int _t0AAD#2 = 0;
      int _t0AAF#2 = 1;
      int _t0AB1#1 = ISub(iresU0AAA,_t0AAF);
      int[] _t0AB3#1 = Range(_t0AAD,_t0AB1);
    FOREACH0AB6:  preds = [ASSIGN0AB4,NEXT0AC3]
      foreach (vi0AB5 in _t0AB3) on exit goto RETURN0AC5
      int _t0ABB#1 = ISub(iresV0AA9,_t0AAF);
      int[] _t0ABD#1 = Range(_t0AAD,_t0ABB);
    FOREACH0AC0:  preds = [ASSIGN0EA6,NEXT0AC2]
      foreach (ui0ABF in _t0ABD) on exit goto NEXT0AC3
      new ray(ui0ABF,vi0AB5);
      goto FOREACH0AC0
    NEXT0AC3:  preds = [FOREACH0AC0]
      goto FOREACH0AB6
    RETURN0AC5:  preds = [FOREACH0AB6]
      return
#### end program ####
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0951 (a) = <no-default>
  input 0b0450_intermedateGlobal0952 (b) = <no-default>
  input 0c0452_intermedateGlobal0953 (c) = <no-default>
  input isoval0954 (isoval) = <default>
  input thick0955 (thick) = <default>
  input camEye0956 (camEye) = <default>
  input camAt0957 (camAt) = <default>
  input camUp0958 (camUp) = <default>
  input camFOV0959 (camFOV) = <default>
  input iresU095A (iresU) = <default>
  input iresV095B (iresV) = <default>
  input camNear095C (camNear) = <default>
  input camFar095D (camFar) = <default>
  input refStep095E (refStep) = <default>
  input rayStep095F (rayStep) = <default>
  input lightVsp0960 (lightVsp) = <default>
  input phongKa0961 (phongKa) = <default>
  input phongKd0962 (phongKd) = <default>
  input debug0963 (debug) = <default>
  input debugU0964 (debugU) = <default>
  input debugV0965 (debugV) = <default>
  input eps0966 (eps) = <default>
  input indecies0967 (indecies) = <no-default>
  input times0968 (times) = <no-default>
  input cells0969 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a09BD
  global femData:FemFunc c09BF
  global tensor[3] camU09C2
  global tensor[3] camV09C3
  global real camVmax09C4
  global real camUmax09C5
  global tensor[3] rayVec09C6
## functions
  function femData:MeshPos _msh_newtonInverse0A3A (tensor[2] pos09C7#6, int cellInt09C8#11, femData:Mesh mesh09C9#23) {
    ENTRY0A39:  preds = []
      real _t09CA#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn09CE#6 = <tensor[2]>[_t09CA,_t09CA];
      int _t09DE#1 = 0;
      int _t09E0#1 = 16;
      int[] _t09E2#1 = Range(_t09DE,_t09E0);
    FOREACH09E6:  preds = [ASSIGN09E3,NEXT0A35]
      foreach (itter09E4 in _t09E2) on exit goto ASSIGN0A37
        tensor[2] xn09E5#8 = phi(xn09CE,xn09EF)
      tensor[2] xn09EF#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      real _t09F1#2 = 0.1e-7;
      real _t09F5#1 = λ(T0[],T1[])<(T0 * T1)> (_t09F1,_t09F1);
      real _t09F7#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      bool _t09F9#1 = GTE<real>(_t09F5,_t09F7);
      if _t09F9 then goto ASSIGN09FD else goto JOIN09FB
    ASSIGN09FD:  preds = [COND0A34]
      real _t09FC#3 = 0.1e1;
      real _t09FE#3 = 0.1e-8;
      real _t0A00#1 = λ(T0[],T1[])<(T0 + T1)> (_t09FC,_t09FE);
      tensor[2] _t0A06#1 = <tensor[2]>[_t09FC,_t09FC];
      real _t0A08#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t0A06,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      bool _t0A0A#1 = GT<real>(_t0A00,_t0A08);
      tensor[2] _t0A10#1 = <tensor[2]>[_t09FE,_t09FE];
      tensor[2] _t0A12#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t0A10,xn09E5,cellInt09C8,mesh09C9,mesh09C9,xn09CE,pos09C7,cellInt09C8,mesh09C9,mesh09C9,xn09E5);
      real _t0A14#1 = TensorIndex<tensor[2],[0]>(_t0A12);
      real _t0A16#2 = -0.e0;
      bool _t0A18#1 = GT<real>(_t0A14,_t0A16);
      real _t0A22#1 = TensorIndex<tensor[2],[1]>(_t0A12);
      bool _t0A26#1 = GT<real>(_t0A22,_t0A16);
      bool _t0A28#1 = BAnd(_t0A18,_t0A26);
      bool _t0A2A#1 = BAnd(_t0A0A,_t0A28);
      if _t0A2A then goto ASSIGN0A2E else goto ASSIGN0A31
    ASSIGN0A2E:  preds = [COND0A33]
      femData:MeshPos _t0A2D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh09C9,cellInt09C8,xn09EF,pos09C7);
      return _t0A2D
      goto JOIN0A2C
    JOIN0A2C:  preds = [*RETURN(_t0A2D)0A2F,*RETURN(_t0A30)0A32]
      goto JOIN09FB
    JOIN09FB:  preds = [*JOIN0A2C,COND0A34]
      goto FOREACH09E6
    ASSIGN0A31:  preds = [COND0A33]
      femData:MeshPos _t0A30#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A30
      goto JOIN0A2C
    ASSIGN0A37:  preds = [FOREACH09E6]
      femData:MeshPos _t0A36#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh09C9);
      return _t0A36
}
  function int[2] nextCell40A4C (int faceIdx0A3B#1, int cell0A3C#1, femData:Mesh mesh0A3D#1) {
    ENTRY0A4B:  preds = []
      int _t0A3E#1 = 6;
      int _t0A40#1 = IMul(cell0A3C,_t0A3E);
      int _t0A42#1 = 2;
      int _t0A44#1 = IMul(faceIdx0A3B,_t0A42);
      int _t0A46#1 = IAdd(_t0A40,_t0A44);
      int[2] _t0A48#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0A3D,_t0A46);
      return _t0A48
}
## input initialization
  ENTRY09BB:  preds = []
    real isoval096A#1 = 0.2e0;
    globals.isoval0954 = isoval096A;
    real thick096D#1 = 0.7e-1;
    globals.thick0955 = thick096D;
    real _t0970#1 = -0.5e0;
    real _t0972#5 = 0.5e0;
    tensor[3] camEye0976#1 = <tensor[3]>[_t0970,_t0972,_t0972];
    globals.camEye0956 = camEye0976;
    tensor[3] camAt097F#1 = <tensor[3]>[_t0972,_t0972,_t0972];
    globals.camAt0957 = camAt097F;
    real _t0982#2 = 0.e0;
    real _t0986#2 = 0.1e1;
    tensor[3] camUp0988#2 = <tensor[3]>[_t0982,_t0982,_t0986];
    globals.camUp0958 = camUp0988;
    real camFOV098B#1 = 0.137e2;
    globals.camFOV0959 = camFOV098B;
    int iresU098E#2 = 10;
    globals.iresU095A = iresU098E;
    globals.iresV095B = iresU098E;
    real camNear0994#1 = -0.2e1;
    globals.camNear095C = camNear0994;
    real camFar0997#1 = 0.5e1;
    globals.camFar095D = camFar0997;
    globals.refStep095E = _t0986;
    real rayStep099D#1 = 0.1e-1;
    globals.rayStep095F = rayStep099D;
    globals.lightVsp0960 = camUp0988;
    real phongKa09A9#1 = 0.1e0;
    globals.phongKa0961 = phongKa09A9;
    real phongKd09AC#1 = 0.9e0;
    globals.phongKd0962 = phongKd09AC;
    bool debug09AF#1 = false;
    globals.debug0963 = debug09AF;
    int debugU09B2#1 = 8;
    globals.debugU0964 = debugU09B2;
    int debugV09B5#1 = 2;
    globals.debugV0965 = debugV09B5;
    real eps09B8#1 = 0.1e-8;
    globals.eps0966 = eps09B8;
    return
## global-variable initialization
  ENTRY0AA7:  preds = []
    femData:Mesh a0A55#3 = globals.a0951;
    femData:Space 0b0450_intermedateGlobal0A54#1 = globals.0b0450_intermedateGlobal0952;
    femData:FemFunc 0c0452_intermedateGlobal0A53#1 = globals.0c0452_intermedateGlobal0953;
    tensor[3] camEye0A52#14 = globals.camEye0956;
    tensor[3] camAt0A51#14 = globals.camAt0957;
    tensor[3] camUp0A50#4 = globals.camUp0958;
    real camFOV0A4F#2 = globals.camFOV0959;
    int iresU0A4E#1 = globals.iresU095A;
    int iresV0A4D#1 = globals.iresV095B;
    int _t0A5F#1 = 0;
    int _t0A61#1 = 1;
    int _t0A63#1 = ExtractFemItem<int,NumCell(Mesh)>(a0A55);
    int _t0A65#1 = ISub(_t0A63,_t0A61);
    int[] _t0A67#1 = Range(_t0A5F,_t0A65);
    femData:MeshCell[] _t0A69#1 = <femData:MeshCell[]>{};
  FOREACH0A6D:  preds = [ASSIGN0A6A,NEXT0A72]
    foreach (_t0A6B in _t0A67) on exit goto GASSIGN0EB5
      femData:MeshCell[] _t0A6C#2 = phi(_t0A69,_t0A70)
    femData:MeshCell _t0A6E#1 = LoadFem<femData:MeshCell>(a0A55,_t0A6B);
    femData:MeshCell[] _t0A70#1 = Append<femData:MeshCell>(_t0A6C,_t0A6E);
    goto FOREACH0A6D
  GASSIGN0EB5:  preds = [FOREACH0A6D]
    globals.0cell_a09BD = _t0A6C;
    femData:Space b0A76#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0A54,a0A55);
    femData:FemFunc c0A79#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0A53,b0A76);
    globals.c09BF = c0A79;
    tensor[3] camN0A83#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52);
    tensor[3] camU0A88#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50);
    globals.camU09C2 = camU0A88;
    tensor[3] camV0A8B#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52,camUp0A50,camAt0A51,camEye0A52,camAt0A51,camEye0A52);
    globals.camV09C3 = camV0A8B;
    real _t0A8E#2 = 0.314159265358979323846264338327950288e1;
    real _t0A92#2 = 0.36e3;
    real camVmax0A98#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV0A4F,_t0A8E,_t0A92,camAt0A51,camEye0A52);
    globals.camVmax09C4 = camVmax0A98;
    real _t0A9B#1 = IntToReal(iresU0A4E);
    real _t0A9F#1 = IntToReal(iresV0A4D);
    real camUmax0AA1#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV0A4F,_t0A8E,_t0A92,camAt0A51,camEye0A52,_t0A9B,_t0A9F);
    globals.camUmax09C5 = camUmax0AA1;
    globals.rayVec09C6 = camN0A83;
    return
## strand
  strand ray (int ui0AC6#3, int vi0AC7#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY0B6B:  preds = []
        femData:MeshCell[] 0cell_a0AE6#1 = globals.0cell_a09BD;
        femData:FemFunc c0AE5#1 = globals.c09BF;
        tensor[3] camEye0AE4#1 = globals.camEye0956;
        int iresU0AE3#2 = globals.iresU095A;
        int iresV0AE2#3 = globals.iresV095B;
        int[] indecies0AE1#2 = globals.indecies0967;
        tensor[2][] times0AE0#1 = globals.times0968;
        tensor[3] camU0ADF#2 = globals.camU09C2;
        tensor[3] camV0ADE#2 = globals.camV09C3;
        real camVmax0ADD#6 = globals.camVmax09C4;
        real camUmax0ADC#6 = globals.camUmax09C5;
        real _t0B08#6 = -0.5e0;
        real _t0B0A#3 = IntToReal(ui0AC6);
        real _t0B0C#3 = IntToReal(iresU0AE3);
        real _t0B0E#6 = 0.5e0;
        real rayU0B12#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E);
        real _t0B18#3 = IntToReal(vi0AC7);
        real _t0B1A#3 = IntToReal(iresV0AE2);
        real rayV0B20#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E);
        tensor[3] UV0B26#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E,camU0ADF,camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E,camV0ADE);
        tensor[3] rayOrig0B28#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye0AE4,camUmax0ADC,camUmax0ADC,_t0B08,_t0B0A,_t0B0C,_t0B0E,camU0ADF,camVmax0ADD,camVmax0ADD,_t0B08,_t0B18,_t0B1A,_t0B0E,camV0ADE);
        int _t0B2A#2 = IMul(ui0AC6,iresV0AE2);
        int _t0B2C#1 = IAdd(_t0B2A,vi0AC7);
        int offset0B2E#2 = Subscript<int[]>(indecies0AE1,_t0B2C);
        int _t0B30#1 = IMul(iresU0AE3,iresV0AE2);
        int _t0B34#1 = IAdd(_t0B30,_t0B2A);
        int _t0B36#1 = IAdd(_t0B34,vi0AC7);
        int len0B38#1 = Subscript<int[]>(indecies0AE1,_t0B36);
        int itter0B3A#5 = 0;
        int idx0B3C#2 = IAdd(offset0B2E,itter0B3A);
        tensor[2] interval0B3E#3 = Subscript<tensor[2][]>(times0AE0,idx0B3C);
        real s0B40#1 = TensorIndex<tensor[2],[0]>(interval0B3E);
        real e0B42#1 = TensorIndex<tensor[2],[1]>(interval0B3E);
        femData:MeshCell cc0B46#2 = Subscript<femData:MeshCell[]>(0cell_a0AE6,itter0B3A);
        int _t0B49#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B46);
        femData:FuncCell _t0B4B#1 = LoadFem<femData:FuncCell>(c0AE5,_t0B49);
        tensor[2][0] _t0B51#1 = <tensor[2][0]>{};
        tensor[2][] _t0B53#1 = MkDynamic<tensor[2],0>(_t0B51);
        tensor[2,3][0] _t0B57#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t0B59#1 = MkDynamic<tensor[2,3],0>(_t0B57);
        femData:MeshCell[0] _t0B5D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0B5F#1 = MkDynamic<femData:MeshCell,0>(_t0B5D);
        self.rayU = rayU0B12;
        self.rayV = rayV0B20;
        self.UV = UV0B26;
        self.rayOrig = rayOrig0B28;
        self.offset = offset0B2E;
        self.len = len0B38;
        self.itter = itter0B3A;
        self.idx = idx0B3C;
        self.interval = interval0B3E;
        self.s = s0B40;
        self.e = e0B42;
        self.cc = cc0B46;
        self.fc = _t0B4B;
        self.intervals = _t0B53;
        self.sints = _t0B59;
        self.newCells = _t0B5F;
        self.count = itter0B3A;
        self.totalCount = itter0B3A;
        self.ui = ui0AC6;
        self.vi = vi0AC7;
        return
    end state init
    method start
        ENTRY0BEE:  preds = []
          femData:MeshCell[] 0cell_a0B86#1 = globals.0cell_a09BD;
          femData:FemFunc c0B85#1 = globals.c09BF;
          bool debug0B84#1 = globals.debug0963;
          int debugU0B83#1 = globals.debugU0964;
          int debugV0B82#1 = globals.debugV0965;
          int[] cells0B81#1 = globals.cells0969;
          int len0B92#1 = self.len;
          int idx0B94#1 = self.idx;
          int ui0B9F#1 = self.ui;
          int vi0BA0#1 = self.vi;
          if debug0B84 then goto ASSIGN0BB8 else goto JOIN0BB5
        ASSIGN0BB8:  preds = [COND0BCE]
          bool _t0BB7#1 = NEQ<int>(ui0B9F,debugU0B83);
          if _t0BB7 then goto ASSIGN0BBC else goto ASSIGN0BBE
        ASSIGN0BBC:  preds = [COND0BBF]
          bool _t0BBA#1 = true;
          goto JOIN0BB9
        JOIN0BB9:  preds = [ASSIGN0BBC,ASSIGN0BBE]
          bool _t0BBB#1 = phi(_t0BBA,_t0BBD)
          if _t0BBB then goto STABILIZE0BC1 else goto JOIN0BC0
        STABILIZE0BC1:  preds = [COND0BCD]
          stabilize
          goto JOIN0BC0
        JOIN0BC0:  preds = [*STABILIZE0BC1,COND0BCD]
          goto JOIN0BB5
        JOIN0BB5:  preds = [JOIN0BC0,COND0BCE]
          int _t0BCF#1 = 0;
          bool _t0BD1#1 = EQ<int>(len0B92,_t0BCF);
          if _t0BD1 then goto STABILIZE0BD4 else goto JOIN0BD3
        STABILIZE0BD4:  preds = [COND0BE0]
          stabilize
          goto JOIN0BD3
        JOIN0BD3:  preds = [*STABILIZE0BD4,COND0BE0]
          int _t0BE1#1 = Subscript<int[]>(cells0B81,idx0B94);
          femData:MeshCell cc0BE3#2 = Subscript<femData:MeshCell[]>(0cell_a0B86,_t0BE1);
          int _t0BE6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0BE3);
          femData:FuncCell _t0BE8#1 = LoadFem<femData:FuncCell>(c0B85,_t0BE6);
          self.cc = cc0BE3;
          self.fc = _t0BE8;
          active
        ASSIGN0BBE:  preds = [COND0BBF]
          bool _t0BBD#1 = NEQ<int>(vi0BA0,debugV0B82);
          goto JOIN0BB9
    end start
    method update
        ENTRY0E98:  preds = []
          femData:MeshCell[] 0cell_a0BFF#1 = globals.0cell_a09BD;
          femData:FemFunc c0BFE#1 = globals.c09BF;
          tensor[2][] times0BFD#1 = globals.times0968;
          int[] cells0BFC#1 = globals.cells0969;
          tensor[3] rayVec0BFB#5 = globals.rayVec09C6;
          tensor[3] rayOrig0C08#2 = self.rayOrig;
          int offset0C09#1 = self.offset;
          int len0C0A#2 = self.len;
          int itter0C0B#2 = self.itter;
          tensor[2] interval0C0D#1 = self.interval;
          real s0C0E#6 = self.s;
          real e0C0F#3 = self.e;
          femData:MeshCell cc0C10#6 = self.cc;
          femData:FuncCell fc0C11#3 = self.fc;
          tensor[2][] intervals0C12#2 = self.intervals;
          tensor[2,3][] sints0C13#2 = self.sints;
          femData:MeshCell[] newCells0C14#2 = self.newCells;
          int count0C15#3 = self.count;
          int totalCount0C16#2 = self.totalCount;
          int ui0C17#3 = self.ui;
          int vi0C18#3 = self.vi;
          int _t0C2D#8 = 1;
          bool _t0C2F#1 = LT<int>(len0C0A,_t0C2D);
          if _t0C2F then goto STABILIZE0C32 else goto JOIN0C31
        STABILIZE0C32:  preds = [COND0C3E]
          stabilize
          goto JOIN0C31
        JOIN0C31:  preds = [*STABILIZE0C32,COND0C3E]
          tensor[3] rayStart0C41#4 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig0C08,s0C0E,rayVec0BFB);
          real _t0C43#1 = TensorIndex<tensor[3],[0]>(rayStart0C41);
          real _t0C45#1 = TensorIndex<tensor[3],[1]>(rayStart0C41);
          tensor[2] project0C47#7 = <tensor[2]>[_t0C43,_t0C45];
          femData:FemFunc _t0C49#9 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0C11);
          femData:Space _t0C4D#8 = ExtractFem<femData:Space,femData:FemFunc>(_t0C49);
          int _t0C4F#8 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0C11);
          femData:Mesh _t0C53#16 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0C10);
          int _t0C57#7 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0C10);
          real _t0C5F#3 = TensorIndex<tensor[3],[2]>(rayStart0C41);
          real f00C61#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[])<(Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C5F);
          real _t0C63#1 = TensorIndex<tensor[3],[0]>(rayVec0BFB);
          real _t0C65#1 = TensorIndex<tensor[3],[1]>(rayVec0BFB);
          tensor[2] _t0C67#2 = <tensor[2]>[_t0C63,_t0C65];
          tensor[2] _t0C7F#2 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i104})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{i114},T6)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i112}⊛Basis()dx_{'0'},T6) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0A3A, 3, 4, 4)_{i113}⊛Basis()dx_{'1'},T6)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)>_{2} (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          real _t0C83#2 = TensorIndex<tensor[3],[2]>(rayVec0BFB);
          int _t0C8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0C10);
          real _t0C8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0C53,_t0C8B);
          real _t0C8F#1 = λ(T0[2],INT1,FEM(fns)2,FEM(func)3,INT4,FEM(msh)5,FEM(msh)6,T7[2],T8[],T9[])<(Abs((Σ(i0=0..1)<((T0_{i0} * Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 1, 2, 3)⊛Basis()dx_{i104})[femInvV(0A3A, 4, 5, 5)_{i0}⊛Basis(){2}],T7) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0A3A, 4, 5, 5)_{i116}⊛Basis()dx_{i114},T7)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0A3A, 4, 5, 5)_{i112}⊛Basis()dx_{'0'},T7) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0A3A, 4, 5, 5)_{i113}⊛Basis()dx_{'1'},T7)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)))>(i0=0..1)) - (T8))) / ( T9)> (_t0C67,_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C83,_t0C8D);
          real _t0C91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0C0F,s0C0E);
          real gradEps0C93#7 = Min<real>(_t0C8F,_t0C91);
          string _t0C95#1 = "hmmmm:";
          string _t0CAF#18 = "\n";
          Print<[string,tensor[2],string]>(_t0C95,_t0C7F,_t0CAF);
          string _t0CB2#1 = "fc dofs:";
          int[6] _t0CBC#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0C4D,_t0C4F);
          tensor[6] _t0CBE#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0C49,_t0CBC);
          Print<[string,tensor[6],string]>(_t0CB2,_t0CBE,_t0CAF);
          tensor[2] _t0CDF#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (project0C47,gradEps0C93,_t0C67);
          real f10CEB#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)) - ((T8 * T9))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,_t0CDF,_t0C5F,gradEps0C93,_t0C83);
          string _t0CED#1 = "=========================\n";
          Print<[string]>(_t0CED);
          string _t0CF0#1 = "Ui/Vi:";
          string _t0CF2#2 = "/";
          Print<[string,int,string,int,string]>(_t0CF0,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0CF7#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t0CF7,cc0C10,_t0CAF);
          string _t0CFC#1 = "hess:";
          tensor[2,2] _t0D16#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Σ(i107=0..1)<((((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117},T6)))>(i119=0..1)))>(i117=0..1)) / ( Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1)) * Σ(i1802=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i107,i1802})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4534=0..1)<((ϵ_{ii4534,ii1802} * Σ(i4536=0..1)<((ϵ_{ii4536,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4536}⊛Basis()dx_{i4534},T6)))>(i4536=0..1)))>(i4534=0..1)) / ( Σ(i4532=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4532}⊛Basis()dx_{'0'},T6) * Σ(i4533=0..1)<((ϵ_{ii4532,ii4533} * Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'1'},T6)))>(i4533=0..1)))>(i4532=0..1))))>(i1802=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i107})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117,i1},T6)))>(i119=0..1)))>(i117=0..1) * Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1))) - ((Σ(i117=0..1)<((ϵ_{ii117,ii107} * Σ(i119=0..1)<((ϵ_{ii119,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i119}⊛Basis()dx_{i117},T6)))>(i119=0..1)))>(i117=0..1) * Σ(i115=0..1)<(((Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1',i1},T6)))>(i116=0..1))))>(i115=0..1)))) / ( (Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1) * Σ(i115=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i115}⊛Basis()dx_{'0'},T6) * Σ(i116=0..1)<((ϵ_{ii115,ii116} * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'1'},T6)))>(i116=0..1)))>(i115=0..1))))))>(i107=0..1)>_{2 2} (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          string _t0D1A#1 = "norm:";
          real _t0D36#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2])<Sqrt(Σ(i0=0..1)(i1=0..1)<((Σ(i108=0..1)<((((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1)) / ( Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1)) * Σ(i1803=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108,i1803})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4535=0..1)<((ϵ_{ii4535,ii1803} * Σ(i4537=0..1)<((ϵ_{ii4537,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4537}⊛Basis()dx_{i4535},T6)))>(i4537=0..1)))>(i4535=0..1)) / ( Σ(i4533=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'0'},T6) * Σ(i4534=0..1)<((ϵ_{ii4533,ii4534} * Probe(femV(0A3A, 3, 4, 4)_{i4534}⊛Basis()dx_{'1'},T6)))>(i4534=0..1)))>(i4533=0..1))))>(i1803=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118,i1},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))) - ((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<(((Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1',i1},T6)))>(i117=0..1))))>(i116=0..1)))) / ( (Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))))))>(i108=0..1) * Σ(i108=0..1)<((((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1)) / ( Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1)) * Σ(i1803=0..1)<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108,i1803})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (Σ(i4535=0..1)<((ϵ_{ii4535,ii1803} * Σ(i4537=0..1)<((ϵ_{ii4537,ii1} * Probe(femV(0A3A, 3, 4, 4)_{i4537}⊛Basis()dx_{i4535},T6)))>(i4537=0..1)))>(i4535=0..1)) / ( Σ(i4533=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i4533}⊛Basis()dx_{'0'},T6) * Σ(i4534=0..1)<((ϵ_{ii4533,ii4534} * Probe(femV(0A3A, 3, 4, 4)_{i4534}⊛Basis()dx_{'1'},T6)))>(i4534=0..1)))>(i4533=0..1))))>(i1803=0..1)) + (Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis()dx_{i108})[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6) * (((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118,i1},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))) - ((Σ(i118=0..1)<((ϵ_{ii118,ii108} * Σ(i120=0..1)<((ϵ_{ii120,ii0} * Probe(femV(0A3A, 3, 4, 4)_{i120}⊛Basis()dx_{i118},T6)))>(i120=0..1)))>(i118=0..1) * Σ(i116=0..1)<(((Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1) * Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0',i1},T6)) + (Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1',i1},T6)))>(i117=0..1))))>(i116=0..1)))) / ( (Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1) * Σ(i116=0..1)<((Probe(femV(0A3A, 3, 4, 4)_{i116}⊛Basis()dx_{'0'},T6) * Σ(i117=0..1)<((ϵ_{ii116,ii117} * Probe(femV(0A3A, 3, 4, 4)_{i117}⊛Basis()dx_{'1'},T6)))>(i117=0..1)))>(i116=0..1))))))>(i108=0..1)))>(i0=0..1)(i1=0..1))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47);
          Print<[string,tensor[2,2],string,string,real,string]>(_t0CFC,_t0D16,_t0CAF,_t0D1A,_t0D36,_t0CAF);
          string _t0D3B#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t0D3B,_t0C7F,_t0CAF);
          string _t0D58#1 = "vals:";
          tensor[2] _t0D5A#2 = <tensor[2]>[f00C61,f10CEB];
          Print<[string,tensor[2],string]>(_t0D58,_t0D5A,_t0CAF);
          real _t0D60#6 = 0.e0;
          bool _t0D62#2 = GT<real>(f00C61,_t0D60);
          if _t0D62 then goto JOIN0D64 else goto ASSIGN0ED7
        JOIN0D64:  preds = [COND0D79,JOIN0D6E]
          int _t0D68#1 = phi(_t0C2D,_t0D72)
          bool _t0D7D#2 = GT<real>(f10CEB,_t0D60);
          if _t0D7D then goto JOIN0D7F else goto ASSIGN0ED9
        JOIN0D7F:  preds = [COND0D94,JOIN0D89]
          int _t0D83#1 = phi(_t0C2D,_t0D8D)
          int _t0D95#1 = IMul(_t0D68,_t0D83);
          int _t0D97#5 = 0;
          bool _t0D99#1 = GT<int>(_t0D95,_t0D97);
          bool _t0D9B#1 = BNot(_t0D99);
          if _t0D9B then goto COND0DB8 else goto ASSIGN0E29
        COND0DB8:  preds = [COND0E42]
          if _t0D62 then goto JOIN0DA3 else goto ASSIGN0EDD
        JOIN0DA3:  preds = [COND0DB8,JOIN0DAD]
          int _t0DA7#1 = phi(_t0C2D,_t0DB1)
          if _t0D7D then goto JOIN0DBE else goto ASSIGN0EDE
        JOIN0DBE:  preds = [COND0DD3,JOIN0DC8]
          int _t0DC2#1 = phi(_t0C2D,_t0DCC)
          int _t0DD4#1 = IMul(_t0DA7,_t0DC2);
          bool _t0DD8#1 = EQ<int>(_t0DD4,_t0D97);
          if _t0DD8 then goto ASSIGN0DDC else goto JOIN0DDA
        ASSIGN0DDC:  preds = [COND0DDE]
          string _t0DDB#1 = "Warn: 0 update\n";
          Print<[string]>(_t0DDB);
          goto JOIN0DDA
        JOIN0DDA:  preds = [MASSIGN0DDD,COND0DDE]
          string _t0DDF#1 = "update with interval:";
          Print<[string,real,string]>(_t0DDF,gradEps0C93,_t0CAF);
          string _t0DE4#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t0DE4,ui0C17,_t0CF2,vi0C18,_t0CAF);
          string _t0DEB#1 = "Count:";
          Print<[string,int,string]>(_t0DEB,count0C15,_t0CAF);
          int count0DF2#1 = IAdd(count0C15,_t0C2D);
          int totalCount0DF7#1 = IAdd(totalCount0C16,_t0C2D);
          string _t0DFA#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0DFA,_t0D5A,_t0CAF);
          string _t0E01#1 = "New interval:";
          real _t0E03#2 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,gradEps0C93);
          tensor[2] _t0E05#2 = <tensor[2]>[s0C0E,_t0E03];
          Print<[string,tensor[2],string]>(_t0E01,_t0E05,_t0CAF);
          tensor[2][] intervals0E0E#1 = Append<tensor[2]>(intervals0C12,_t0E05);
          tensor[3] _t0E19#1 = λ(T0[3],T1[],T2[],T3[3])<(T0_{i0} + ((T1 + T2) * T3_{i0}))>_{3} (rayOrig0C08,s0C0E,gradEps0C93,rayVec0BFB);
          tensor[2,3] _t0E1B#1 = <tensor[2,3]>[rayStart0C41,_t0E19];
          tensor[2,3][] sints0E1D#1 = Append<tensor[2,3]>(sints0C13,_t0E1B);
          femData:MeshCell[] newCells0E20#1 = Append<femData:MeshCell>(newCells0C14,cc0C10);
          goto JOIN0D9D
        JOIN0D9D:  preds = [ASSIGN0E22,ASSIGN0E41]
          int totalCount0DF8#3 = phi(totalCount0DF7,totalCount0C16)
          int count0DF3#2 = phi(count0DF2,count0C15)
          femData:MeshCell[] newCells0E21#3 = phi(newCells0E20,newCells0C14)
          tensor[2,3][] sints0E1E#2 = phi(sints0E1D,sints0C13)
          tensor[2][] intervals0E0F#3 = phi(intervals0E0E,intervals0C12)
          real s0E24#3 = phi(_t0E03,s0E40)
          bool _t0E43#1 = GTE<real>(s0E24,e0C0F);
          if _t0E43 then goto ASSIGN0EEA else goto JOIN0E45
        ASSIGN0EEA:  preds = [COND0E97]
          int itter0E48#4 = IAdd(itter0C0B,_t0C2D);
          bool _t0E4B#1 = GTE<int>(itter0E48,len0C0A);
          if _t0E4B then goto ASSIGN0E4F else goto ASSIGN0E6F
        ASSIGN0E4F:  preds = [COND0E90]
          string _t0E4E#1 = "TotalCount:";
          Print<[string,int,string]>(_t0E4E,totalCount0DF8,_t0CAF);
          string _t0E53#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t0E53,intervals0E0F,_t0CAF);
          string _t0E58#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t0E58,newCells0E21,_t0CAF);
          string _t0E5D#1 = ";";
          string _t0E5F#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui0C17,_t0E5D,vi0C18,_t0E5F);
          self.itter = itter0E48;
          self.s = s0E24;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0DF3;
          self.totalCount = totalCount0DF8;
          stabilize
          goto JOIN0E4D
        JOIN0E4D:  preds = [*STABILIZE0E62,ASSIGN0E8A]
          int count0E72#1 = phi(_t0D97)
          femData:FuncCell fc0E8E#1 = phi(_t0E89)
          femData:MeshCell cc0E7E#1 = phi(cc0E7D)
          real e0E84#1 = phi(e0E83)
          real s0E81#1 = phi(s0E80)
          tensor[2] interval0E77#1 = phi(interval0E76)
          goto JOIN0E45
        JOIN0E45:  preds = [JOIN0E4D,COND0E97]
          int count0E96#1 = phi(count0E72,count0DF3)
          femData:FuncCell fc0E95#1 = phi(fc0E8E,fc0C11)
          femData:MeshCell cc0E94#1 = phi(cc0E7E,cc0C10)
          real e0E93#1 = phi(e0E84,e0C0F)
          real s0E92#1 = phi(s0E81,s0E24)
          tensor[2] interval0E91#1 = phi(interval0E77,interval0C0D)
          int itter0E49#1 = phi(itter0E48,itter0C0B)
          self.itter = itter0E49;
          self.interval = interval0E91;
          self.s = s0E92;
          self.e = e0E93;
          self.cc = cc0E94;
          self.fc = fc0E95;
          self.intervals = intervals0E0F;
          self.sints = sints0E1E;
          self.newCells = newCells0E21;
          self.count = count0E96;
          self.totalCount = totalCount0DF8;
          active
        ASSIGN0E6F:  preds = [COND0E90]
          string _t0E6E#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t0E6E);
          int _t0E74#2 = IAdd(offset0C09,itter0E48);
          tensor[2] interval0E76#3 = Subscript<tensor[2][]>(times0BFD,_t0E74);
          int _t0E7B#1 = Subscript<int[]>(cells0BFC,_t0E74);
          femData:MeshCell cc0E7D#2 = Subscript<femData:MeshCell[]>(0cell_a0BFF,_t0E7B);
          real s0E80#1 = TensorIndex<tensor[2],[0]>(interval0E76);
          real e0E83#1 = TensorIndex<tensor[2],[1]>(interval0E76);
          int _t0E87#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0E7D);
          femData:FuncCell _t0E89#1 = LoadFem<femData:FuncCell>(c0BFE,_t0E87);
          goto JOIN0E4D
        ASSIGN0EDE:  preds = [COND0DD3]
          bool _t0DC6#1 = LT<real>(f10CEB,_t0D60);
          if _t0DC6 then goto ASSIGN0DCA else goto JOIN0DC8
        ASSIGN0DCA:  preds = [COND0DD2]
          int _t0DC9#1 = -1;
          goto JOIN0DC8
        JOIN0DC8:  preds = [ASSIGN0DCA,COND0DD2]
          int _t0DCC#1 = phi(_t0DC9,_t0D97)
          goto JOIN0DBE
        ASSIGN0EDD:  preds = [COND0DB8]
          bool _t0DAB#1 = LT<real>(f00C61,_t0D60);
          if _t0DAB then goto ASSIGN0DAF else goto JOIN0DAD
        ASSIGN0DAF:  preds = [COND0DB7]
          int _t0DAE#1 = -1;
          goto JOIN0DAD
        JOIN0DAD:  preds = [ASSIGN0DAF,COND0DB7]
          int _t0DB1#1 = phi(_t0DAE,_t0D97)
          goto JOIN0DA3
        ASSIGN0E29:  preds = [COND0E42]
          real _t0E28#1 = 0.2e1;
          real _t0E2E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0C53,_t0C8B);
          real _t0E32#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<(Abs((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0A3A, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7))) / ( (T8 * T9))> (_t0C4F,_t0C4D,_t0C49,_t0C57,_t0C53,_t0C53,project0C47,_t0C5F,_t0E28,_t0E2E);
          real epsUpdate0E34#2 = Max<real>(gradEps0C93,_t0E32);
          string _t0E36#1 = "update L:";
          Print<[string,real,string]>(_t0E36,epsUpdate0E34,_t0CAF);
          string _t0E3B#1 = "update G:";
          Print<[string,real,string]>(_t0E3B,gradEps0C93,_t0CAF);
          real s0E40#1 = λ(T0[],T1[])<(T0 + T1)> (s0C0E,epsUpdate0E34);
          goto JOIN0D9D
        ASSIGN0ED9:  preds = [COND0D94]
          bool _t0D87#1 = LT<real>(f10CEB,_t0D60);
          if _t0D87 then goto ASSIGN0D8B else goto ASSIGN0D90
        ASSIGN0D8B:  preds = [COND0D93]
          int _t0D8A#1 = -1;
          goto JOIN0D89
        JOIN0D89:  preds = [ASSIGN0D8B,ASSIGN0D90]
          int _t0D8D#1 = phi(_t0D8A,_t0D8F)
          goto JOIN0D7F
        ASSIGN0D90:  preds = [COND0D93]
          int _t0D8F#1 = 0;
          goto JOIN0D89
        ASSIGN0ED7:  preds = [COND0D79]
          bool _t0D6C#1 = LT<real>(f00C61,_t0D60);
          if _t0D6C then goto ASSIGN0D70 else goto ASSIGN0D75
        ASSIGN0D70:  preds = [COND0D78]
          int _t0D6F#1 = -1;
          goto JOIN0D6E
        JOIN0D6E:  preds = [ASSIGN0D70,ASSIGN0D75]
          int _t0D72#1 = phi(_t0D6F,_t0D74)
          goto JOIN0D64
        ASSIGN0D75:  preds = [COND0D78]
          int _t0D74#1 = 0;
          goto JOIN0D6E
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0AC4:  preds = []
      int iresU0AAA#1 = globals.iresU095A;
      int iresV0AA9#1 = globals.iresV095B;
      int _t0AAD#2 = 0;
      int _t0AAF#2 = 1;
      int _t0AB1#1 = ISub(iresU0AAA,_t0AAF);
      int[] _t0AB3#1 = Range(_t0AAD,_t0AB1);
    FOREACH0AB6:  preds = [ASSIGN0AB4,NEXT0AC3]
      foreach (vi0AB5 in _t0AB3) on exit goto RETURN0AC5
      int _t0ABB#1 = ISub(iresV0AA9,_t0AAF);
      int[] _t0ABD#1 = Range(_t0AAD,_t0ABB);
    FOREACH0AC0:  preds = [ASSIGN0EA6,NEXT0AC2]
      foreach (ui0ABF in _t0ABD) on exit goto NEXT0AC3
      new ray(ui0ABF,vi0AB5);
      goto FOREACH0AC0
    NEXT0AC3:  preds = [FOREACH0AC0]
      goto FOREACH0AB6
    RETURN0AC5:  preds = [FOREACH0AB6]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0F1E (a) = <no-default>
  input 0b0450_intermedateGlobal0F1F (b) = <no-default>
  input 0c0452_intermedateGlobal0F20 (c) = <no-default>
  input isoval0F21 (isoval) = <default>
  input thick0F22 (thick) = <default>
  input camEye0F23 (camEye) = <default>
  input camAt0F24 (camAt) = <default>
  input camUp0F25 (camUp) = <default>
  input camFOV0F26 (camFOV) = <default>
  input iresU0F27 (iresU) = <default>
  input iresV0F28 (iresV) = <default>
  input camNear0F29 (camNear) = <default>
  input camFar0F2A (camFar) = <default>
  input refStep0F2B (refStep) = <default>
  input rayStep0F2C (rayStep) = <default>
  input lightVsp0F2D (lightVsp) = <default>
  input phongKa0F2E (phongKa) = <default>
  input phongKd0F2F (phongKd) = <default>
  input debug0F30 (debug) = <default>
  input debugU0F31 (debugU) = <default>
  input debugV0F32 (debugV) = <default>
  input eps0F33 (eps) = <default>
  input indecies0F34 (indecies) = <no-default>
  input times0F35 (times) = <no-default>
  input cells0F36 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0F37
  global femData:FemFunc c0F38
  global tensor[3] camU0F39
  global tensor[3] camV0F3A
  global real camVmax0F3B
  global real camUmax0F3C
  global tensor[3] rayVec0F3D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1176 (tensor[2] pos1177#5, int cellInt1178#21, femData:Mesh mesh1179#27) {
    ENTRY117A:  preds = []
      real _t117B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn117D#37 = <tensor[2]>[_t117B,_t117B];
      int _t117F#1 = 0;
      int _t1181#1 = 16;
      int[] _t1183#1 = Range(_t117F,_t1181);
    FOREACH1186:  preds = [ASSIGN1184,NEXT1263]
      foreach (itter1185 in _t1183) on exit goto ASSIGN1268
        tensor[2] xn1188#15 = phi(xn117D,xn1187)
      int[3] femIndicies1195#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs1196#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies1195);
      tensor[3,2] dofs1194#1 = femDofs1196;
      tensor[2,3] basisResult1197#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_101189#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,dofs1194,basisResult1197,xn117D);
      tensor[2,2] op1_e3_l_11118A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_101189);
      tensor[3,2] dofs1198#1 = femDofs1196;
      tensor[2,3] basisResult1199#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_12118B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs1198,basisResult1199,xn117D);
      tensor[3,2] dofs119A#1 = femDofs1196;
      tensor[2,3] basisResult119B#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_13118C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs119A,basisResult119B,xn117D);
      tensor[2] op1_e3_l_14118D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_13118C);
      tensor[2,2] op1_e3_l_15118E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_11118A);
      real op1_e3_l_16118F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_12118B,op1_e3_l_14118D);
      tensor[3,2] dofs119C#1 = femDofs1196;
      tensor[3] basisResult119D#1 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_171190#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,dofs119C,basisResult119D,xn1188);
      tensor[2,2] op1_e3_l_181191#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_15118E,op1_e3_l_16118F);
      tensor[2] op1_e3_l_191192#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_171190);
      tensor[2] op1_e3_l_201193#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_191192);
      tensor[2] xn1187#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_201193);
      real _t11B4#2 = 0.1e-7;
      real _t11B6#1 = λ(T0[],T1[])<(T0 * T1)> (_t11B4,_t11B4);
      int[3] femIndicies11C5#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs11C6#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies11C5);
      tensor[3,2] dofs11C4#1 = femDofs11C6;
      tensor[2,3] basisResult11C7#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_1811B9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,dofs11C4,basisResult11C7,xn117D);
      tensor[2,2] op1_e3_l_1911BA#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_1811B9);
      tensor[3,2] dofs11C8#1 = femDofs11C6;
      tensor[2,3] basisResult11C9#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_2011BB#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs11C8,basisResult11C9,xn117D);
      tensor[3,2] dofs11CA#1 = femDofs11C6;
      tensor[2,3] basisResult11CB#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_2111BC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs11CA,basisResult11CB,xn117D);
      tensor[2] op1_e3_l_2211BD#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_2111BC);
      tensor[2,2] op1_e3_l_2311BE#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_1911BA);
      real op1_e3_l_2411BF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_2011BB,op1_e3_l_2211BD);
      tensor[3,2] dofs11CC#1 = femDofs11C6;
      tensor[3] basisResult11CD#1 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_2511C0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt1178,mesh1179,xn1188,dofs11CC,basisResult11CD,xn1188);
      tensor[2,2] op1_e3_l_2611C1#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_2311BE,op1_e3_l_2411BF);
      tensor[2] op1_e3_l_2711C2#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_2511C0);
      tensor[2] op1_e3_l_3811C3#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_2611C1,op1_e3_l_2711C2);
      real _t11B8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3811C3,op1_e3_l_3811C3);
      bool _t11E4#1 = GTE<real>(_t11B6,_t11B8);
      if _t11E4 then goto ASSIGN11E8 else goto JOIN1262
    ASSIGN11E8:  preds = [COND11E6]
      real _t11E7#3 = 0.1e1;
      real _t11E9#3 = 0.1e-8;
      real _t11EB#1 = λ(T0[],T1[])<(T0 + T1)> (_t11E7,_t11E9);
      tensor[2] _t11ED#1 = <tensor[2]>[_t11E7,_t11E7];
      int[3] femIndicies11FD#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs11FE#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies11FD);
      tensor[3,2] dofs11FC#1 = femDofs11FE;
      tensor[2,3] basisResult11FF#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_1111F0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,dofs11FC,basisResult11FF,xn117D);
      tensor[2,2] op1_e3_l_1211F1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_1111F0);
      tensor[3,2] dofs1200#1 = femDofs11FE;
      tensor[2,3] basisResult1201#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_1311F2#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs1200,basisResult1201,xn117D);
      tensor[3,2] dofs1202#1 = femDofs11FE;
      tensor[2,3] basisResult1203#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_1411F3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs1202,basisResult1203,xn117D);
      tensor[2] op1_e3_l_1511F4#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_1411F3);
      tensor[2,2] op1_e3_l_1611F5#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_1211F1);
      real op1_e3_l_1711F6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_1311F2,op1_e3_l_1511F4);
      tensor[3,2] dofs1204#1 = femDofs11FE;
      tensor[3] basisResult1205#1 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_1811F7#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,dofs1204,basisResult1205,xn1188);
      tensor[2,2] op1_e3_l_1911F8#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_1611F5,op1_e3_l_1711F6);
      tensor[2] op1_e3_l_2011F9#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_1811F7);
      tensor[2] op1_e3_l_2111FA#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_1911F8,op1_e3_l_2011F9);
      tensor[2] op1_e3_l_2211FB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_2111FA);
      real _t11EF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t11ED,op1_e3_l_2211FB);
      bool _t121D#1 = GT<real>(_t11EB,_t11EF);
      tensor[2] _t121F#1 = <tensor[2]>[_t11E9,_t11E9];
      int[3] femIndicies122F#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs1230#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies122F);
      tensor[3,2] dofs122E#1 = femDofs1230;
      tensor[2,3] basisResult1231#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_111222#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,dofs122E,basisResult1231,xn117D);
      tensor[2,2] op1_e3_l_121223#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_111222);
      tensor[3,2] dofs1232#1 = femDofs1230;
      tensor[2,3] basisResult1233#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_131224#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs1232,basisResult1233,xn117D);
      tensor[3,2] dofs1234#1 = femDofs1230;
      tensor[2,3] basisResult1235#1 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2] probe_l_141225#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,dofs1234,basisResult1235,xn117D);
      tensor[2] op1_e3_l_151226#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_141225);
      tensor[2,2] op1_e3_l_161227#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_121223);
      real op1_e3_l_171228#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_131224,op1_e3_l_151226);
      tensor[3,2] dofs1236#1 = femDofs1230;
      tensor[3] basisResult1237#1 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_181229#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,dofs1236,basisResult1237,xn1188);
      tensor[2,2] op1_e3_l_19122A#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_161227,op1_e3_l_171228);
      tensor[2] op1_e3_l_20122B#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_181229);
      tensor[2] op1_e3_l_21122C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_19122A,op1_e3_l_20122B);
      tensor[2] op1_e3_l_22122D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_21122C);
      tensor[2] _t1221#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t121F,op1_e3_l_22122D);
      real _t124F#1 = TensorIndex<tensor[2],[0]>(_t1221);
      real _t1251#2 = -0.e0;
      bool _t1253#1 = GT<real>(_t124F,_t1251);
      real _t1255#1 = TensorIndex<tensor[2],[1]>(_t1221);
      bool _t1257#1 = GT<real>(_t1255,_t1251);
      bool _t1259#1 = BAnd(_t1253,_t1257);
      bool _t125B#1 = BAnd(_t121D,_t1259);
      if _t125B then goto ASSIGN125F else goto ASSIGN1265
    ASSIGN125F:  preds = [COND125D]
      femData:MeshPos _t125E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1179,cellInt1178,xn1187,pos1177);
      return _t125E
      goto JOIN1261
    JOIN1261:  preds = [*RETURN(_t125E)1260,*RETURN(_t1264)1266]
      goto JOIN1262
    JOIN1262:  preds = [*JOIN1261,COND11E6]
      goto FOREACH1186
    ASSIGN1265:  preds = [COND125D]
      femData:MeshPos _t1264#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1264
      goto JOIN1261
    ASSIGN1268:  preds = [FOREACH1186]
      femData:MeshPos _t1267#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1267
}
## input initialization
  ENTRY0F3E:  preds = []
    real isoval0F3F#1 = 0.2e0;
    globals.isoval0F21 = isoval0F3F;
    real thick0F42#1 = 0.7e-1;
    globals.thick0F22 = thick0F42;
    real _t0F45#1 = -0.5e0;
    real _t0F47#5 = 0.5e0;
    tensor[3] camEye0F49#1 = <tensor[3]>[_t0F45,_t0F47,_t0F47];
    globals.camEye0F23 = camEye0F49;
    tensor[3] camAt0F4C#1 = <tensor[3]>[_t0F47,_t0F47,_t0F47];
    globals.camAt0F24 = camAt0F4C;
    real _t0F4F#2 = 0.e0;
    real _t0F51#2 = 0.1e1;
    tensor[3] camUp0F53#2 = <tensor[3]>[_t0F4F,_t0F4F,_t0F51];
    globals.camUp0F25 = camUp0F53;
    real camFOV0F56#1 = 0.137e2;
    globals.camFOV0F26 = camFOV0F56;
    int iresU0F59#2 = 10;
    globals.iresU0F27 = iresU0F59;
    globals.iresV0F28 = iresU0F59;
    real camNear0F5D#1 = -0.2e1;
    globals.camNear0F29 = camNear0F5D;
    real camFar0F60#1 = 0.5e1;
    globals.camFar0F2A = camFar0F60;
    globals.refStep0F2B = _t0F51;
    real rayStep0F64#1 = 0.1e-1;
    globals.rayStep0F2C = rayStep0F64;
    globals.lightVsp0F2D = camUp0F53;
    real phongKa0F68#1 = 0.1e0;
    globals.phongKa0F2E = phongKa0F68;
    real phongKd0F6B#1 = 0.9e0;
    globals.phongKd0F2F = phongKd0F6B;
    bool debug0F6E#1 = false;
    globals.debug0F30 = debug0F6E;
    int debugU0F71#1 = 8;
    globals.debugU0F31 = debugU0F71;
    int debugV0F74#1 = 2;
    globals.debugV0F32 = debugV0F74;
    real eps0F77#1 = 0.1e-8;
    globals.eps0F33 = eps0F77;
    return
## global-variable initialization
  ENTRY0F7B:  preds = []
    femData:Mesh a0F7C#3 = globals.a0F1E;
    femData:Space 0b0450_intermedateGlobal0F7E#1 = globals.0b0450_intermedateGlobal0F1F;
    femData:FemFunc 0c0452_intermedateGlobal0F80#1 = globals.0c0452_intermedateGlobal0F20;
    tensor[3] camEye0F82#5 = globals.camEye0F23;
    tensor[3] camAt0F84#5 = globals.camAt0F24;
    tensor[3] camUp0F86#2 = globals.camUp0F25;
    real camFOV0F88#2 = globals.camFOV0F26;
    int iresU0F8A#1 = globals.iresU0F27;
    int iresV0F8C#1 = globals.iresV0F28;
    int _t0F8E#1 = 0;
    int _t0F90#1 = 1;
    int _t0F92#1 = ExtractFemItem<int,NumCell(Mesh)>(a0F7C);
    int _t0F94#1 = ISub(_t0F92,_t0F90);
    int[] _t0F96#1 = Range(_t0F8E,_t0F94);
    femData:MeshCell[] _t0F98#1 = <femData:MeshCell[]>{};
  FOREACH0F9B:  preds = [ASSIGN0F99,NEXT0FA1]
    foreach (_t0F9A in _t0F96) on exit goto GASSIGN0FA2
      femData:MeshCell[] _t0F9F#2 = phi(_t0F98,_t0F9E)
    femData:MeshCell _t0F9C#1 = LoadFem<femData:MeshCell>(a0F7C,_t0F9A);
    femData:MeshCell[] _t0F9E#1 = Append<femData:MeshCell>(_t0F9F,_t0F9C);
    goto FOREACH0F9B
  GASSIGN0FA2:  preds = [FOREACH0F9B]
    globals.0cell_a0F37 = _t0F9F;
    femData:Space b0FA3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0F7E,a0F7C);
    femData:FemFunc c0FA5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0F80,b0FA3);
    globals.c0F38 = c0FA5;
    tensor[3] op1_e3_l_40FA9#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_60FAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40FA9,op1_e3_l_40FA9);
    real op1_e3_l_70FAB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60FAA);
    real op1_e3_l_90FAC#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70FAB);
    tensor[3] camN0FA8#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40FA9,op1_e3_l_90FAC);
    tensor[3] op1_e3_l_100FB3#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_120FB4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_100FB3,op1_e3_l_100FB3);
    real op1_e3_l_130FB5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_120FB4);
    tensor[3,3] op1_e3_l_150FB6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0F86);
    real op1_e3_l_160FB7#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_130FB5);
    tensor[3] op1_e3_l_170FB8#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_100FB3,op1_e3_l_150FB6);
    real op1_e3_l_340FB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170FB8,op1_e3_l_170FB8);
    real op1_e3_l_350FBA#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_160FB7,op1_e3_l_160FB7,op1_e3_l_340FB9);
    real op1_e3_l_360FBB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350FBA);
    tensor[3] op1_e3_l_370FBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_160FB7,op1_e3_l_170FB8);
    real op1_e3_l_380FBD#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360FBB);
    tensor[3] camU0FB2#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370FBC,op1_e3_l_380FBD);
    globals.camU0F39 = camU0FB2;
    tensor[3] op1_e3_l_140FCC#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_160FCD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_140FCC,op1_e3_l_140FCC);
    real op1_e3_l_170FCE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_160FCD);
    tensor[3,3] op1_e3_l_230FCF#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0F86);
    tensor[3] op1_e3_l_260FD0#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_140FCC,op1_e3_l_230FCF);
    real op1_e3_l_280FD1#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_170FCE);
    real op1_e3_l_300FD2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_260FD0,op1_e3_l_260FD0);
    real op1_e3_l_310FD3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_280FD1,op1_e3_l_280FD1,op1_e3_l_300FD2);
    real op1_e3_l_320FD4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_310FD3);
    tensor[3,3] op1_e3_l_450FD5#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_140FCC);
    tensor[3] op1_e3_l_470FD6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_260FD0,op1_e3_l_450FD5);
    real op1_e3_l_480FD7#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_320FD4);
    tensor[3] op1_e3_l_500FD8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_280FD1,op1_e3_l_470FD6);
    tensor[3] camV0FCB#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_480FD7,op1_e3_l_280FD1,op1_e3_l_500FD8);
    globals.camV0F3A = camV0FCB;
    real _t0FE8#2 = 0.314159265358979323846264338327950288e1;
    real _t0FEA#2 = 0.36e3;
    real op1_e3_l_50FED#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0F88,_t0FE8);
    real op1_e3_l_60FEE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FEA,op1_e3_l_50FED);
    tensor[3] op1_e3_l_70FEF#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_90FF0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_70FEF,op1_e3_l_70FEF);
    real op1_e3_l_100FF1#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_60FEE);
    real op1_e3_l_110FF2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_90FF0);
    real camVmax0FEC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100FF1,op1_e3_l_110FF2);
    globals.camVmax0F3B = camVmax0FEC;
    real _t0FFB#1 = IntToReal(iresU0F8A);
    real _t0FFD#1 = IntToReal(iresV0F8C);
    real op1_e3_l_71000#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0F88,_t0FE8);
    real op1_e3_l_81001#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FEA,op1_e3_l_71000);
    tensor[3] op1_e3_l_91002#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_111003#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_91002,op1_e3_l_91002);
    real op1_e3_l_121004#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_81001);
    real op1_e3_l_131005#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_111003);
    real op1_e3_l_141006#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0FFB,op1_e3_l_121004,op1_e3_l_131005);
    real camUmax0FFF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FFD,op1_e3_l_141006);
    globals.camUmax0F3C = camUmax0FFF;
    globals.rayVec0F3D = camN0FA8;
    return
## strand
  strand ray (int ui1012#3, int vi1013#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY1028:  preds = []
        femData:MeshCell[] 0cell_a1029#1 = globals.0cell_a0F37;
        femData:FemFunc c102B#1 = globals.c0F38;
        tensor[3] camEye102D#1 = globals.camEye0F23;
        int iresU102F#2 = globals.iresU0F27;
        int iresV1031#3 = globals.iresV0F28;
        int[] indecies1033#2 = globals.indecies0F34;
        tensor[2][] times1035#1 = globals.times0F35;
        tensor[3] camU1037#2 = globals.camU0F39;
        tensor[3] camV1039#2 = globals.camV0F3A;
        real camVmax103B#6 = globals.camVmax0F3B;
        real camUmax103D#6 = globals.camUmax0F3C;
        real _t103F#12 = -0.5e0;
        real _t1041#3 = IntToReal(ui1012);
        real _t1043#3 = IntToReal(iresU102F);
        real _t1045#6 = 0.5e0;
        real op1_e3_l_61048#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_71049#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_8104A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_61048);
        real op1_e3_l_9104B#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_10104C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71049,op1_e3_l_8104A);
        real op1_e3_l_11104D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_9104B);
        real op1_e3_l_13104E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10104C,op1_e3_l_11104D);
        real rayU1047#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9104B,op1_e3_l_13104E);
        real _t1057#3 = IntToReal(vi1013);
        real _t1059#3 = IntToReal(iresV1031);
        real op1_e3_l_6105C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1059,_t1045);
        real op1_e3_l_7105D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_8105E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_6105C);
        real op1_e3_l_9105F#2 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_101060#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_8105E);
        real op1_e3_l_111061#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_9105F);
        real op1_e3_l_131062#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101060,op1_e3_l_111061);
        real rayV105B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_131062);
        real op1_e3_l_14106C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_15106D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_16106E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_14106C);
        real op1_e3_l_17106F#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_181070#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_15106D,op1_e3_l_16106E);
        real op1_e3_l_191071#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_17106F);
        real op1_e3_l_211072#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_181070,op1_e3_l_191071);
        real op1_e3_l_221073#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_17106F,op1_e3_l_211072);
        real op1_e3_l_231074#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1045,_t1059);
        real op1_e3_l_241075#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_251076#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_231074);
        real op1_e3_l_261077#2 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_271078#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_241075,op1_e3_l_251076);
        real op1_e3_l_281079#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_261077);
        real op1_e3_l_30107A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271078,op1_e3_l_281079);
        real op1_e3_l_31107B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_261077,op1_e3_l_30107A);
        tensor[3] op1_e3_l_32107C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1037,op1_e3_l_221073);
        tensor[3] op1_e3_l_33107D#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1039,op1_e3_l_31107B);
        tensor[3] UV106B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_32107C,op1_e3_l_33107D);
        real op1_e3_l_151092#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_161093#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_171094#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_151092);
        real op1_e3_l_181095#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_191096#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_161093,op1_e3_l_171094);
        real op1_e3_l_201097#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_181095);
        real op1_e3_l_221098#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_191096,op1_e3_l_201097);
        real op1_e3_l_231099#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_181095,op1_e3_l_221098);
        real op1_e3_l_24109A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1045,_t1059);
        real op1_e3_l_25109B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_26109C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_24109A);
        real op1_e3_l_27109D#2 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_28109E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_25109B,op1_e3_l_26109C);
        real op1_e3_l_29109F#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_27109D);
        real op1_e3_l_3110A0#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_28109E,op1_e3_l_29109F);
        real op1_e3_l_3210A1#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_27109D,op1_e3_l_3110A0);
        tensor[3] op1_e3_l_3310A2#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1037,op1_e3_l_231099);
        tensor[3] op1_e3_l_3410A3#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1039,op1_e3_l_3210A1);
        tensor[3] rayOrig1091#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye102D,op1_e3_l_3310A2,op1_e3_l_3410A3);
        int _t10B7#2 = IMul(ui1012,iresV1031);
        int _t10B9#1 = IAdd(_t10B7,vi1013);
        int offset10BB#2 = Subscript<int[]>(indecies1033,_t10B9);
        int _t10BD#1 = IMul(iresU102F,iresV1031);
        int _t10BF#1 = IAdd(_t10BD,_t10B7);
        int _t10C1#1 = IAdd(_t10BF,vi1013);
        int len10C3#1 = Subscript<int[]>(indecies1033,_t10C1);
        int itter10C5#5 = 0;
        int idx10C7#2 = IAdd(offset10BB,itter10C5);
        tensor[2] interval10C9#3 = Subscript<tensor[2][]>(times1035,idx10C7);
        real s10CB#1 = TensorIndex<tensor[2],[0]>(interval10C9);
        real e10CD#1 = TensorIndex<tensor[2],[1]>(interval10C9);
        femData:MeshCell cc10CF#2 = Subscript<femData:MeshCell[]>(0cell_a1029,itter10C5);
        int _t10D1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc10CF);
        femData:FuncCell _t10D3#1 = LoadFem<femData:FuncCell>(c102B,_t10D1);
        tensor[2][0] _t10D5#1 = <tensor[2][0]>{};
        tensor[2][] _t10D7#1 = MkDynamic<tensor[2],0>(_t10D5);
        tensor[2,3][0] _t10D9#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t10DB#1 = MkDynamic<tensor[2,3],0>(_t10D9);
        femData:MeshCell[0] _t10DD#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t10DF#1 = MkDynamic<femData:MeshCell,0>(_t10DD);
        self.rayU = rayU1047;
        self.rayV = rayV105B;
        self.UV = UV106B;
        self.rayOrig = rayOrig1091;
        self.offset = offset10BB;
        self.len = len10C3;
        self.itter = itter10C5;
        self.idx = idx10C7;
        self.interval = interval10C9;
        self.s = s10CB;
        self.e = e10CD;
        self.cc = cc10CF;
        self.fc = _t10D3;
        self.intervals = _t10D7;
        self.sints = _t10DB;
        self.newCells = _t10DF;
        self.count = itter10C5;
        self.totalCount = itter10C5;
        self.ui = ui1012;
        self.vi = vi1013;
        return
    end state init
    method start
        ENTRY10F6:  preds = []
          femData:MeshCell[] 0cell_a10F7#1 = globals.0cell_a0F37;
          femData:FemFunc c10F9#1 = globals.c0F38;
          bool debug10FB#1 = globals.debug0F30;
          int debugU10FD#1 = globals.debugU0F31;
          int debugV10FF#1 = globals.debugV0F32;
          int[] cells1101#1 = globals.cells0F36;
          int len1103#1 = self.len;
          int idx1105#1 = self.idx;
          int ui1107#1 = self.ui;
          int vi1109#1 = self.vi;
          if debug10FB then goto ASSIGN110D else goto JOIN1117
        ASSIGN110D:  preds = [COND110B]
          bool _t110C#1 = NEQ<int>(ui1107,debugU10FD);
          if _t110C then goto ASSIGN1110 else goto ASSIGN112A
        ASSIGN1110:  preds = [COND110E]
          bool _t110F#1 = true;
          goto JOIN1113
        JOIN1113:  preds = [ASSIGN1110,ASSIGN112A]
          bool _t1111#1 = phi(_t110F,_t1112)
          if _t1111 then goto STABILIZE1115 else goto JOIN1116
        STABILIZE1115:  preds = [COND1114]
          stabilize
          goto JOIN1116
        JOIN1116:  preds = [*STABILIZE1115,COND1114]
          goto JOIN1117
        JOIN1117:  preds = [JOIN1116,COND110B]
          int _t1118#1 = 0;
          bool _t111A#1 = EQ<int>(len1103,_t1118);
          if _t111A then goto STABILIZE111D else goto JOIN111E
        STABILIZE111D:  preds = [COND111C]
          stabilize
          goto JOIN111E
        JOIN111E:  preds = [*STABILIZE111D,COND111C]
          int _t111F#1 = Subscript<int[]>(cells1101,idx1105);
          femData:MeshCell cc1121#2 = Subscript<femData:MeshCell[]>(0cell_a10F7,_t111F);
          int _t1123#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1121);
          femData:FuncCell _t1125#1 = LoadFem<femData:FuncCell>(c10F9,_t1123);
          self.cc = cc1121;
          self.fc = _t1125;
          active
        ASSIGN112A:  preds = [COND110E]
          bool _t1112#1 = NEQ<int>(vi1109,debugV10FF);
          goto JOIN1113
    end start
    method update
        ENTRY112B:  preds = []
          femData:MeshCell[] 0cell_a112C#1 = globals.0cell_a0F37;
          femData:FemFunc c112E#1 = globals.c0F38;
          tensor[2][] times1130#1 = globals.times0F35;
          int[] cells1132#1 = globals.cells0F36;
          tensor[3] rayVec1134#5 = globals.rayVec0F3D;
          tensor[3] rayOrig1136#2 = self.rayOrig;
          int offset1138#1 = self.offset;
          int len113A#2 = self.len;
          int itter113C#2 = self.itter;
          tensor[2] interval113E#1 = self.interval;
          real s1140#6 = self.s;
          real e1142#3 = self.e;
          femData:MeshCell cc1144#6 = self.cc;
          femData:FuncCell fc1146#3 = self.fc;
          tensor[2][] intervals1148#2 = self.intervals;
          tensor[2,3][] sints114A#2 = self.sints;
          femData:MeshCell[] newCells114C#2 = self.newCells;
          int count114E#3 = self.count;
          int totalCount1150#2 = self.totalCount;
          int ui1152#3 = self.ui;
          int vi1154#3 = self.vi;
          int _t1156#8 = 1;
          bool _t1158#1 = LT<int>(len113A,_t1156);
          if _t1158 then goto STABILIZE115B else goto JOIN115C
        STABILIZE115B:  preds = [COND115A]
          stabilize
          goto JOIN115C
        JOIN115C:  preds = [*STABILIZE115B,COND115A]
          tensor[3] op1_e3_l_3115E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s1140,rayVec1134);
          tensor[3] rayStart115D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_3115E);
          real _t1161#1 = TensorIndex<tensor[3],[0]>(rayStart115D);
          real _t1163#1 = TensorIndex<tensor[3],[1]>(rayStart115D);
          tensor[2] project1165#25 = <tensor[2]>[_t1161,_t1163];
          femData:FemFunc _t1167#20 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1146);
          femData:Space _t1169#19 = ExtractFem<femData:Space,femData:FemFunc>(_t1167);
          int _t116B#19 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1146);
          femData:Mesh _t116D#35 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1144);
          int _t116F#29 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1144);
          real _t1171#3 = TensorIndex<tensor[3],[2]>(rayStart115D);
          femData:MeshPos callNewtonPos126A#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos126B#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos126A);
          tensor[2] Inner1174#3 = refPos126B;
          int[6] femIndicies126D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs126E#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies126D);
          tensor[6] dofs126C#1 = femDofs126E;
          tensor[6] basisResult126F#1 = EvaluateBasis<BasisArray(6)>(Inner1174);
          real compositionl1175#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,Inner1174,dofs126C,basisResult126F,Inner1174);
          real f01173#4 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1175);
          real _t1279#1 = TensorIndex<tensor[3],[0]>(rayVec1134);
          real _t127B#1 = TensorIndex<tensor[3],[1]>(rayVec1134);
          tensor[2] _t127D#2 = <tensor[2]>[_t1279,_t127B];
          femData:MeshPos callNewtonPos128A#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos128B#7 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos128A);
          tensor[2] Inner1280#3 = refPos128B;
          int[6] femIndicies128D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs128E#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies128D);
          tensor[6] dofs128C#1 = femDofs128E;
          tensor[2,6] basisResult128F#1 = EvaluateBasis<BasisArray(2,6)>(Inner1280);
          tensor[2] compositionl1281#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,Inner1280,dofs128C,basisResult128F,Inner1280);
          int[3] femIndicies1291#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs1292#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies1291);
          tensor[3,2] dofs1290#1 = femDofs1292;
          tensor[2,3] basisResult1293#1 = EvaluateBasis<BasisArray(2,3)>(refPos128B);
          tensor[2,2] probe_l_81282#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs1290,basisResult1293,refPos128B);
          tensor[2,2] op1_e3_l_91283#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_81282);
          tensor[3,2] dofs1294#1 = femDofs1292;
          tensor[2,3] basisResult1295#1 = EvaluateBasis<BasisArray(2,3)>(refPos128B);
          tensor[2] probe_l_101284#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs1294,basisResult1295,refPos128B);
          tensor[3,2] dofs1296#1 = femDofs1292;
          tensor[2,3] basisResult1297#1 = EvaluateBasis<BasisArray(2,3)>(refPos128B);
          tensor[2] probe_l_111285#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs1296,basisResult1297,refPos128B);
          tensor[2] op1_e3_l_121286#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_111285);
          tensor[2,2] op1_e3_l_131287#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_91283);
          real op1_e3_l_141288#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_101284,op1_e3_l_121286);
          tensor[2,2] op1_e3_l_151289#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_131287,op1_e3_l_141288);
          tensor[2] _t127F#2 = λ(T0[2],T1[2 2])<Σ(i104=0..1)<((T0_{i104} * T1_{i104,i0}))>(i104=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real _t12B1#2 = TensorIndex<tensor[3],[2]>(rayVec1134);
          int _t12B3#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1144);
          real _t12B5#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t116D,_t12B3);
          femData:MeshPos callNewtonPos12C6#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos12C7#7 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos12C6);
          tensor[2] Inner12B8#3 = refPos12C7;
          int[6] femIndicies12C9#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs12CA#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies12C9);
          tensor[6] dofs12C8#1 = femDofs12CA;
          tensor[2,6] basisResult12CB#1 = EvaluateBasis<BasisArray(2,6)>(Inner12B8);
          tensor[2] compositionl12B9#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,Inner12B8,dofs12C8,basisResult12CB,Inner12B8);
          int[3] femIndicies12CD#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs12CE#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies12CD);
          tensor[3,2] dofs12CC#1 = femDofs12CE;
          tensor[2,3] basisResult12CF#1 = EvaluateBasis<BasisArray(2,3)>(refPos12C7);
          tensor[2,2] probe_l_1112BA#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs12CC,basisResult12CF,refPos12C7);
          tensor[2,2] op1_e3_l_1212BB#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_1112BA);
          tensor[3,2] dofs12D0#1 = femDofs12CE;
          tensor[2,3] basisResult12D1#1 = EvaluateBasis<BasisArray(2,3)>(refPos12C7);
          tensor[2] probe_l_1312BC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs12D0,basisResult12D1,refPos12C7);
          tensor[3,2] dofs12D2#1 = femDofs12CE;
          tensor[2,3] basisResult12D3#1 = EvaluateBasis<BasisArray(2,3)>(refPos12C7);
          tensor[2] probe_l_1412BD#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs12D2,basisResult12D3,refPos12C7);
          tensor[2] op1_e3_l_1512BE#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_1412BD);
          tensor[2,2] op1_e3_l_1612BF#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_1212BB);
          real op1_e3_l_1712C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_1312BC,op1_e3_l_1512BE);
          tensor[2,2] op1_e3_l_1812C1#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_1612BF,op1_e3_l_1712C0);
          tensor[2] op1_e3_l_1912C2#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl12B9,op1_e3_l_1812C1);
          real op1_e3_l_2012C3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t127D,op1_e3_l_1912C2);
          real op1_e3_l_2112C4#1 = λ(T0[],T1[])<(T1) - (T0)> (_t12B1,op1_e3_l_2012C3);
          real op1_e3_l_2212C5#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2112C4);
          real _t12B7#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t12B5,op1_e3_l_2212C5);
          real _t12F1#1 = λ(T0[],T1[])<(T0) - (T1)> (e1142,s1140);
          real gradEps12F3#7 = Min<real>(_t12B7,_t12F1);
          string _t12F5#1 = "hmmmm:";
          string _t12F7#18 = "\n";
          Print<[string,tensor[2],string]>(_t12F5,_t127F,_t12F7);
          string _t12FA#1 = "fc dofs:";
          int[6] _t12FC#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] _t12FE#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,_t12FC);
          Print<[string,tensor[6],string]>(_t12FA,_t12FE,_t12F7);
          tensor[2] op1_e3_l_31302#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps12F3,_t127D);
          tensor[2] _t1301#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project1165,op1_e3_l_31302);
          femData:MeshPos callNewtonPos130A#1 = _0A3A_msh_newtonInverse1176 (_t1301,_t116F,_t116D);
          tensor[2] refPos130B#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos130A);
          tensor[2] Inner1306#3 = refPos130B;
          int[6] femIndicies130D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs130E#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies130D);
          tensor[6] dofs130C#1 = femDofs130E;
          tensor[6] basisResult130F#1 = EvaluateBasis<BasisArray(6)>(Inner1306);
          real compositionl1307#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,Inner1306,dofs130C,basisResult130F,Inner1306);
          real op1_e3_l_111308#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1307);
          real op1_e3_l_121309#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps12F3,_t12B1);
          real f11305#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_111308,op1_e3_l_121309);
          string _t131B#1 = "=========================\n";
          Print<[string]>(_t131B);
          string _t131E#1 = "Ui/Vi:";
          string _t1320#2 = "/";
          Print<[string,int,string,int,string]>(_t131E,ui1152,_t1320,vi1154,_t12F7);
          string _t1323#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1323,cc1144,_t12F7);
          string _t1326#1 = "hess:";
          femData:MeshPos callNewtonPos1346#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos1347#14 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1346);
          int[3] femIndicies1349#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs134A#6 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies1349);
          tensor[3,2] dofs1348#1 = femDofs134A;
          tensor[2,3] basisResult134B#1 = EvaluateBasis<BasisArray(2,3)>(refPos1347);
          tensor[2,2] probe_l_71329#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs1348,basisResult134B,refPos1347);
          tensor[2,2] op1_e3_l_8132A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_71329);
          tensor[3,2] dofs134C#1 = femDofs134A;
          tensor[2,3] basisResult134D#1 = EvaluateBasis<BasisArray(2,3)>(refPos1347);
          tensor[2] probe_l_9132B#2 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs134C,basisResult134D,refPos1347);
          tensor[3,2] dofs134E#1 = femDofs134A;
          tensor[2,3] basisResult134F#1 = EvaluateBasis<BasisArray(2,3)>(refPos1347);
          tensor[2] probe_l_10132C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs134E,basisResult134F,refPos1347);
          tensor[2] op1_e3_l_11132D#2 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_10132C);
          tensor[2,2] op1_e3_l_12132E#2 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_8132A);
          real op1_e3_l_13132F#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_9132B,op1_e3_l_11132D);
          tensor[2] Inner1330#3 = refPos1347;
          int[6] femIndicies1351#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs1352#2 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies1351);
          tensor[6] dofs1350#1 = femDofs1352;
          tensor[2,2,6] basisResult1353#1 = EvaluateBasis<BasisArray(2,2,6)>(Inner1330);
          tensor[2,2] compositionl1331#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,Inner1330,dofs1350,basisResult1353,Inner1330);
          tensor[2,2] op1_e3_l_221332#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_12132E,op1_e3_l_13132F);
          tensor[2,2] op1_e3_l_241333#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl1331,op1_e3_l_221332);
          tensor[2] Inner1334#3 = refPos1347;
          tensor[6] dofs1354#1 = femDofs1352;
          tensor[2,6] basisResult1355#1 = EvaluateBasis<BasisArray(2,6)>(Inner1334);
          tensor[2] compositionl1335#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,Inner1334,dofs1354,basisResult1355,Inner1334);
          tensor[3,2] dofs1356#1 = femDofs134A;
          tensor[2,2,3] basisResult1357#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos1347);
          tensor[2,2,2] probe_l_261336#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i5=0..2)<((T3_{i5,i0} * T4_{i1,i2,i5}))>(i5=0..2)>_{2 2 2} (_t116F,_t116D,project1165,dofs1356,basisResult1357,refPos1347);
          tensor[2,2,2] op1_e3_l_271337#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i3,i1,i2}))>(i3=0..1)>_{2 2 2} (probe_l_261336);
          tensor[2,2,2] op1_e3_l_311338#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i1,i3,i2}))>(i3=0..1)>_{2 2 2} (op1_e3_l_271337);
          tensor[3,2] dofs1358#1 = femDofs134A;
          tensor[2,2,3] basisResult1359#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos1347);
          tensor[2,2] probe_l_361339#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'0',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs1358,basisResult1359,refPos1347);
          tensor[3,2] dofs135A#1 = femDofs134A;
          tensor[2,2,3] basisResult135B#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos1347);
          tensor[2,2] probe_l_39133A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'1',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs135A,basisResult135B,refPos1347);
          tensor[2,2] op1_e3_l_40133B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii0,ii2} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_39133A);
          tensor[2] op1_e3_l_41133C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T1_{i1} * T0_{i1,i0}))>(i1=0..1)>_{2} (probe_l_361339,op1_e3_l_11132D);
          tensor[2] op1_e3_l_42133D#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (probe_l_9132B,op1_e3_l_40133B);
          tensor[2] op1_e3_l_44133E#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_41133C,op1_e3_l_42133D);
          tensor[2,2,2] op1_e3_l_45133F#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2} * T1)>_{2 2 2} (op1_e3_l_311338,op1_e3_l_13132F);
          tensor[2,2,2] op1_e3_l_461340#1 = λ(T0[2 2],T1[2])<(T0_{i0,i1} * T1_{i2})>_{2 2 2} (op1_e3_l_12132E,op1_e3_l_44133E);
          tensor[2,2,2] op1_e3_l_551341#1 = λ(T0[2 2 2],T1[2 2 2])<(T0_{i0,i1,i2}) - (T1_{i0,i1,i2})>_{2 2 2} (op1_e3_l_45133F,op1_e3_l_461340);
          real op1_e3_l_561342#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_13132F,op1_e3_l_13132F);
          tensor[2,2,2] op1_e3_l_571343#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2}) / ( T1)>_{2 2 2} (op1_e3_l_551341,op1_e3_l_561342);
          tensor[2,2] op1_e3_l_581344#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_221332,op1_e3_l_241333);
          tensor[2,2] op1_e3_l_591345#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl1335,op1_e3_l_571343);
          tensor[2,2] _t1328#1 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_581344,op1_e3_l_591345);
          string _t1390#1 = "norm:";
          femData:MeshPos callNewtonPos13BA#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos13BB#16 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos13BA);
          int[3] femIndicies13BD#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs13BE#6 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies13BD);
          tensor[3,2] dofs13BC#1 = femDofs13BE;
          tensor[2,3] basisResult13BF#1 = EvaluateBasis<BasisArray(2,3)>(refPos13BB);
          tensor[2,2] probe_l_71393#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs13BC,basisResult13BF,refPos13BB);
          tensor[2,2] op1_e3_l_81394#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_71393);
          tensor[3,2] dofs13C0#1 = femDofs13BE;
          tensor[2,3] basisResult13C1#1 = EvaluateBasis<BasisArray(2,3)>(refPos13BB);
          tensor[2] probe_l_91395#2 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs13C0,basisResult13C1,refPos13BB);
          tensor[3,2] dofs13C2#1 = femDofs13BE;
          tensor[2,3] basisResult13C3#1 = EvaluateBasis<BasisArray(2,3)>(refPos13BB);
          tensor[2] probe_l_101396#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,dofs13C2,basisResult13C3,refPos13BB);
          tensor[2] op1_e3_l_111397#2 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_101396);
          tensor[2,2] op1_e3_l_121398#2 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_81394);
          real op1_e3_l_131399#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_91395,op1_e3_l_111397);
          tensor[2] Inner139A#3 = refPos13BB;
          int[6] femIndicies13C5#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs13C6#4 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies13C5);
          tensor[6] dofs13C4#1 = femDofs13C6;
          tensor[2,2,6] basisResult13C7#1 = EvaluateBasis<BasisArray(2,2,6)>(Inner139A);
          tensor[2,2] compositionl139B#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,Inner139A,dofs13C4,basisResult13C7,Inner139A);
          tensor[2,2] op1_e3_l_22139C#4 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_121398,op1_e3_l_131399);
          tensor[2,2] op1_e3_l_24139D#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl139B,op1_e3_l_22139C);
          tensor[2] Inner139E#3 = refPos13BB;
          tensor[6] dofs13C8#1 = femDofs13C6;
          tensor[2,6] basisResult13C9#1 = EvaluateBasis<BasisArray(2,6)>(Inner139E);
          tensor[2] compositionl139F#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,Inner139E,dofs13C8,basisResult13C9,Inner139E);
          tensor[3,2] dofs13CA#1 = femDofs13BE;
          tensor[2,2,3] basisResult13CB#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos13BB);
          tensor[2,2,2] probe_l_2613A0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i5=0..2)<((T3_{i5,i0} * T4_{i1,i2,i5}))>(i5=0..2)>_{2 2 2} (_t116F,_t116D,project1165,dofs13CA,basisResult13CB,refPos13BB);
          tensor[2,2,2] op1_e3_l_2713A1#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i3,i1,i2}))>(i3=0..1)>_{2 2 2} (probe_l_2613A0);
          tensor[2,2,2] op1_e3_l_3113A2#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i1,i3,i2}))>(i3=0..1)>_{2 2 2} (op1_e3_l_2713A1);
          tensor[3,2] dofs13CC#1 = femDofs13BE;
          tensor[2,2,3] basisResult13CD#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos13BB);
          tensor[2,2] probe_l_3613A3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'0',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs13CC,basisResult13CD,refPos13BB);
          tensor[3,2] dofs13CE#1 = femDofs13BE;
          tensor[2,2,3] basisResult13CF#1 = EvaluateBasis<BasisArray(2,2,3)>(refPos13BB);
          tensor[2,2] probe_l_3913A4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'1',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,dofs13CE,basisResult13CF,refPos13BB);
          tensor[2,2] op1_e3_l_4013A5#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii0,ii2} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3913A4);
          tensor[2] op1_e3_l_4113A6#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T1_{i1} * T0_{i1,i0}))>(i1=0..1)>_{2} (probe_l_3613A3,op1_e3_l_111397);
          tensor[2] op1_e3_l_4213A7#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (probe_l_91395,op1_e3_l_4013A5);
          tensor[2] op1_e3_l_4413A8#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_4113A6,op1_e3_l_4213A7);
          tensor[2,2,2] op1_e3_l_4513A9#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2} * T1)>_{2 2 2} (op1_e3_l_3113A2,op1_e3_l_131399);
          tensor[2,2,2] op1_e3_l_4613AA#1 = λ(T0[2 2],T1[2])<(T0_{i0,i1} * T1_{i2})>_{2 2 2} (op1_e3_l_121398,op1_e3_l_4413A8);
          tensor[2,2,2] op1_e3_l_5513AB#1 = λ(T0[2 2 2],T1[2 2 2])<(T0_{i0,i1,i2}) - (T1_{i0,i1,i2})>_{2 2 2} (op1_e3_l_4513A9,op1_e3_l_4613AA);
          real op1_e3_l_5613AC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_131399,op1_e3_l_131399);
          tensor[2,2,2] op1_e3_l_5713AD#2 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2}) / ( T1)>_{2 2 2} (op1_e3_l_5513AB,op1_e3_l_5613AC);
          tensor[2,2] op1_e3_l_5813AE#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_22139C,op1_e3_l_24139D);
          tensor[2,2] op1_e3_l_5913AF#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl139F,op1_e3_l_5713AD);
          tensor[2] Inner13B0#3 = refPos13BB;
          tensor[6] dofs13D0#1 = femDofs13C6;
          tensor[2,2,6] basisResult13D1#1 = EvaluateBasis<BasisArray(2,2,6)>(Inner13B0);
          tensor[2,2] compositionl13B1#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,Inner13B0,dofs13D0,basisResult13D1,Inner13B0);
          tensor[2,2] op1_e3_l_7713B2#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl13B1,op1_e3_l_22139C);
          tensor[2] Inner13B3#3 = refPos13BB;
          tensor[6] dofs13D2#1 = femDofs13C6;
          tensor[2,6] basisResult13D3#1 = EvaluateBasis<BasisArray(2,6)>(Inner13B3);
          tensor[2] compositionl13B4#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,Inner13B3,dofs13D2,basisResult13D3,Inner13B3);
          tensor[2,2] op1_e3_l_11113B5#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_22139C,op1_e3_l_7713B2);
          tensor[2,2] op1_e3_l_11213B6#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl13B4,op1_e3_l_5713AD);
          tensor[2,2] op1_e3_l_11313B7#1 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_5813AE,op1_e3_l_5913AF);
          tensor[2,2] op1_e3_l_11413B8#1 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_11113B5,op1_e3_l_11213B6);
          real op1_e3_l_11513B9#1 = λ(T0[2 2],T1[2 2])<Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T1_{i0,i1}))>(i0=0..1)(i1=0..1)> (op1_e3_l_11313B7,op1_e3_l_11413B8);
          real _t1392#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11513B9);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1326,_t1328,_t12F7,_t1390,_t1392,_t12F7);
          string _t1417#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t1417,_t127F,_t12F7);
          string _t141A#1 = "vals:";
          tensor[2] _t141C#2 = <tensor[2]>[f01173,f11305];
          Print<[string,tensor[2],string]>(_t141A,_t141C,_t12F7);
          real _t141F#6 = 0.e0;
          bool _t1421#2 = GT<real>(f01173,_t141F);
          if _t1421 then goto JOIN1426 else goto ASSIGN14FA
        JOIN1426:  preds = [COND1423,JOIN14FF]
          int _t1424#1 = phi(_t1156,_t1425)
          bool _t1427#2 = GT<real>(f11305,_t141F);
          if _t1427 then goto JOIN142C else goto ASSIGN14F2
        JOIN142C:  preds = [COND1429,JOIN14F7]
          int _t142A#1 = phi(_t1156,_t142B)
          int _t142D#1 = IMul(_t1424,_t142A);
          int _t142F#5 = 0;
          bool _t1431#1 = GT<int>(_t142D,_t142F);
          bool _t1433#1 = BNot(_t1431);
          if _t1433 then goto COND1436 else goto ASSIGN14CD
        COND1436:  preds = [COND1435]
          if _t1421 then goto JOIN1439 else goto ASSIGN14C7
        JOIN1439:  preds = [COND1436,JOIN14CB]
          int _t1437#1 = phi(_t1156,_t1438)
          if _t1427 then goto JOIN143D else goto ASSIGN14C1
        JOIN143D:  preds = [COND143A,JOIN14C5]
          int _t143B#1 = phi(_t1156,_t143C)
          int _t143E#1 = IMul(_t1437,_t143B);
          bool _t1440#1 = EQ<int>(_t143E,_t142F);
          if _t1440 then goto ASSIGN1444 else goto JOIN1446
        ASSIGN1444:  preds = [COND1442]
          string _t1443#1 = "Warn: 0 update\n";
          Print<[string]>(_t1443);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN1445,COND1442]
          string _t1447#1 = "update with interval:";
          Print<[string,real,string]>(_t1447,gradEps12F3,_t12F7);
          string _t144A#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t144A,ui1152,_t1320,vi1154,_t12F7);
          string _t144D#1 = "Count:";
          Print<[string,int,string]>(_t144D,count114E,_t12F7);
          int count1450#1 = IAdd(count114E,_t1156);
          int totalCount1452#1 = IAdd(totalCount1150,_t1156);
          string _t1454#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1454,_t141C,_t12F7);
          string _t1457#1 = "New interval:";
          real _t1459#2 = λ(T0[],T1[])<(T0 + T1)> (s1140,gradEps12F3);
          tensor[2] _t145B#2 = <tensor[2]>[s1140,_t1459];
          Print<[string,tensor[2],string]>(_t1457,_t145B,_t12F7);
          tensor[2][] intervals145E#1 = Append<tensor[2]>(intervals1148,_t145B);
          real op1_e3_l_41461#1 = λ(T0[],T1[])<(T0 + T1)> (s1140,gradEps12F3);
          tensor[3] op1_e3_l_51462#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1134,op1_e3_l_41461);
          tensor[3] _t1460#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_51462);
          tensor[2,3] _t1466#1 = <tensor[2,3]>[rayStart115D,_t1460];
          tensor[2,3][] sints1468#1 = Append<tensor[2,3]>(sints114A,_t1466);
          femData:MeshCell[] newCells146A#1 = Append<femData:MeshCell>(newCells114C,cc1144);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN146B,ASSIGN14F0]
          int totalCount146C#3 = phi(totalCount1452,totalCount1150)
          int count146D#2 = phi(count1450,count114E)
          femData:MeshCell[] newCells146E#3 = phi(newCells146A,newCells114C)
          tensor[2,3][] sints146F#2 = phi(sints1468,sints114A)
          tensor[2][] intervals1470#3 = phi(intervals145E,intervals1148)
          real s1471#3 = phi(_t1459,s1472)
          bool _t1474#1 = GTE<real>(s1471,e1142);
          if _t1474 then goto ASSIGN1478 else goto JOIN14A5
        ASSIGN1478:  preds = [COND1476]
          int itter1477#4 = IAdd(itter113C,_t1156);
          bool _t1479#1 = GTE<int>(itter1477,len113A);
          if _t1479 then goto ASSIGN147D else goto ASSIGN14B3
        ASSIGN147D:  preds = [COND147B]
          string _t147C#1 = "TotalCount:";
          Print<[string,int,string]>(_t147C,totalCount146C,_t12F7);
          string _t147F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t147F,intervals1470,_t12F7);
          string _t1482#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t1482,newCells146E,_t12F7);
          string _t1485#1 = ";";
          string _t1487#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui1152,_t1485,vi1154,_t1487);
          self.itter = itter1477;
          self.s = s1471;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count146D;
          self.totalCount = totalCount146C;
          stabilize
          goto JOIN149D
        JOIN149D:  preds = [*STABILIZE1491,ASSIGN14BF]
          int count1492#1 = phi(_t142F)
          femData:FuncCell fc1493#1 = phi(_t1494)
          femData:MeshCell cc1495#1 = phi(cc1496)
          real e1497#1 = phi(e1498)
          real s1499#1 = phi(s149A)
          tensor[2] interval149B#1 = phi(interval149C)
          goto JOIN14A5
        JOIN14A5:  preds = [JOIN149D,COND1476]
          int count149E#1 = phi(count1492,count146D)
          femData:FuncCell fc149F#1 = phi(fc1493,fc1146)
          femData:MeshCell cc14A0#1 = phi(cc1495,cc1144)
          real e14A1#1 = phi(e1497,e1142)
          real s14A2#1 = phi(s1499,s1471)
          tensor[2] interval14A3#1 = phi(interval149B,interval113E)
          int itter14A4#1 = phi(itter1477,itter113C)
          self.itter = itter14A4;
          self.interval = interval14A3;
          self.s = s14A2;
          self.e = e14A1;
          self.cc = cc14A0;
          self.fc = fc149F;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count149E;
          self.totalCount = totalCount146C;
          active
        ASSIGN14B3:  preds = [COND147B]
          string _t14B2#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t14B2);
          int _t14B5#2 = IAdd(offset1138,itter1477);
          tensor[2] interval149C#3 = Subscript<tensor[2][]>(times1130,_t14B5);
          int _t14B8#1 = Subscript<int[]>(cells1132,_t14B5);
          femData:MeshCell cc1496#2 = Subscript<femData:MeshCell[]>(0cell_a112C,_t14B8);
          real s149A#1 = TensorIndex<tensor[2],[0]>(interval149C);
          real e1498#1 = TensorIndex<tensor[2],[1]>(interval149C);
          int _t14BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1496);
          femData:FuncCell _t1494#1 = LoadFem<femData:FuncCell>(c112E,_t14BD);
          goto JOIN149D
        ASSIGN14C1:  preds = [COND143A]
          bool _t14C0#1 = LT<real>(f11305,_t141F);
          if _t14C0 then goto ASSIGN14C4 else goto JOIN14C5
        ASSIGN14C4:  preds = [COND14C2]
          int _t14C3#1 = -1;
          goto JOIN14C5
        JOIN14C5:  preds = [ASSIGN14C4,COND14C2]
          int _t143C#1 = phi(_t14C3,_t142F)
          goto JOIN143D
        ASSIGN14C7:  preds = [COND1436]
          bool _t14C6#1 = LT<real>(f01173,_t141F);
          if _t14C6 then goto ASSIGN14CA else goto JOIN14CB
        ASSIGN14CA:  preds = [COND14C8]
          int _t14C9#1 = -1;
          goto JOIN14CB
        JOIN14CB:  preds = [ASSIGN14CA,COND14C8]
          int _t1438#1 = phi(_t14C9,_t142F)
          goto JOIN1439
        ASSIGN14CD:  preds = [COND1435]
          real _t14CC#1 = 0.2e1;
          real _t14CE#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t116D,_t12B3);
          femData:MeshPos callNewtonPos14D6#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos14D7#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos14D6);
          tensor[2] Inner14D1#3 = refPos14D7;
          int[6] femIndicies14D9#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs14DA#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies14D9);
          tensor[6] dofs14D8#1 = femDofs14DA;
          tensor[6] basisResult14DB#1 = EvaluateBasis<BasisArray(6)>(Inner14D1);
          real compositionl14D2#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,Inner14D1,dofs14D8,basisResult14DB,Inner14D1);
          real op1_e3_l_1114D3#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl14D2);
          real op1_e3_l_1214D4#1 = λ(T0[])<Abs(T0)> (op1_e3_l_1114D3);
          real op1_e3_l_1314D5#1 = λ(T0[],T1[])<(T0 * T1)> (_t14CC,_t14CE);
          real _t14D0#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1214D4,op1_e3_l_1314D5);
          real epsUpdate14E8#2 = Max<real>(gradEps12F3,_t14D0);
          string _t14EA#1 = "update L:";
          Print<[string,real,string]>(_t14EA,epsUpdate14E8,_t12F7);
          string _t14ED#1 = "update G:";
          Print<[string,real,string]>(_t14ED,gradEps12F3,_t12F7);
          real s1472#1 = λ(T0[],T1[])<(T0 + T1)> (s1140,epsUpdate14E8);
          goto JOIN1473
        ASSIGN14F2:  preds = [COND1429]
          bool _t14F1#1 = LT<real>(f11305,_t141F);
          if _t14F1 then goto ASSIGN14F5 else goto ASSIGN14F8
        ASSIGN14F5:  preds = [COND14F3]
          int _t14F4#1 = -1;
          goto JOIN14F7
        JOIN14F7:  preds = [ASSIGN14F5,ASSIGN14F8]
          int _t142B#1 = phi(_t14F4,_t14F6)
          goto JOIN142C
        ASSIGN14F8:  preds = [COND14F3]
          int _t14F6#1 = 0;
          goto JOIN14F7
        ASSIGN14FA:  preds = [COND1423]
          bool _t14F9#1 = LT<real>(f01173,_t141F);
          if _t14F9 then goto ASSIGN14FD else goto ASSIGN1500
        ASSIGN14FD:  preds = [COND14FB]
          int _t14FC#1 = -1;
          goto JOIN14FF
        JOIN14FF:  preds = [ASSIGN14FD,ASSIGN1500]
          int _t1425#1 = phi(_t14FC,_t14FE)
          goto JOIN1426
        ASSIGN1500:  preds = [COND14FB]
          int _t14FE#1 = 0;
          goto JOIN14FF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1501:  preds = []
      int iresU1502#1 = globals.iresU0F27;
      int iresV1504#1 = globals.iresV0F28;
      int _t1506#2 = 0;
      int _t1508#2 = 1;
      int _t150A#1 = ISub(iresU1502,_t1508);
      int[] _t150C#1 = Range(_t1506,_t150A);
    FOREACH150F:  preds = [ASSIGN150D,NEXT1518]
      foreach (vi150E in _t150C) on exit goto RETURN1519
      int _t1510#1 = ISub(iresV1504,_t1508);
      int[] _t1512#1 = Range(_t1506,_t1510);
    FOREACH1515:  preds = [ASSIGN1513,NEXT1517]
      foreach (ui1514 in _t1512) on exit goto NEXT1518
      new ray(ui1514,vi150E);
      goto FOREACH1515
    NEXT1518:  preds = [FOREACH1515]
      goto FOREACH150F
    RETURN1519:  preds = [FOREACH150F]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0F1E (a) = <no-default>
  input 0b0450_intermedateGlobal0F1F (b) = <no-default>
  input 0c0452_intermedateGlobal0F20 (c) = <no-default>
  input isoval0F21 (isoval) = <default>
  input thick0F22 (thick) = <default>
  input camEye0F23 (camEye) = <default>
  input camAt0F24 (camAt) = <default>
  input camUp0F25 (camUp) = <default>
  input camFOV0F26 (camFOV) = <default>
  input iresU0F27 (iresU) = <default>
  input iresV0F28 (iresV) = <default>
  input camNear0F29 (camNear) = <default>
  input camFar0F2A (camFar) = <default>
  input refStep0F2B (refStep) = <default>
  input rayStep0F2C (rayStep) = <default>
  input lightVsp0F2D (lightVsp) = <default>
  input phongKa0F2E (phongKa) = <default>
  input phongKd0F2F (phongKd) = <default>
  input debug0F30 (debug) = <default>
  input debugU0F31 (debugU) = <default>
  input debugV0F32 (debugV) = <default>
  input eps0F33 (eps) = <default>
  input indecies0F34 (indecies) = <no-default>
  input times0F35 (times) = <no-default>
  input cells0F36 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0F37
  global femData:FemFunc c0F38
  global tensor[3] camU0F39
  global tensor[3] camV0F3A
  global real camVmax0F3B
  global real camUmax0F3C
  global tensor[3] rayVec0F3D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1176 (tensor[2] pos1177#3, int cellInt1178#7, femData:Mesh mesh1179#10) {
    ENTRY117A:  preds = []
      real _t117B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn117D#8 = <tensor[2]>[_t117B,_t117B];
      int _t117F#1 = 0;
      int _t1181#1 = 16;
      int[] _t1183#1 = Range(_t117F,_t1181);
    FOREACH1186:  preds = [ASSIGN1184,NEXT1263]
      foreach (itter1185 in _t1183) on exit goto ASSIGN1268
        tensor[2] xn1188#6 = phi(xn117D,xn1187)
      int[3] femIndicies1195#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs1196#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies1195);
      tensor[2,3] basisResult1197#3 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_101189#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2,2] op1_e3_l_11118A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_101189);
      tensor[2] probe_l_12118B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] probe_l_13118C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] op1_e3_l_14118D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_13118C);
      tensor[2,2] op1_e3_l_15118E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_11118A);
      real op1_e3_l_16118F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_12118B,op1_e3_l_14118D);
      tensor[3] basisResult119D#2 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_171190#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,femDofs1196,basisResult119D,xn1188);
      tensor[2,2] op1_e3_l_181191#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_15118E,op1_e3_l_16118F);
      tensor[2] op1_e3_l_191192#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_171190);
      tensor[2] op1_e3_l_201193#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_191192);
      tensor[2] xn1187#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_201193);
      real _t11B4#2 = 0.1e-7;
      real _t11B6#1 = λ(T0[],T1[])<(T0 * T1)> (_t11B4,_t11B4);
      tensor[2] probe_l_2511C0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt1178,mesh1179,xn1188,femDofs1196,basisResult119D,xn1188);
      tensor[2] op1_e3_l_2711C2#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_2511C0);
      tensor[2] op1_e3_l_3811C3#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_2711C2);
      real _t11B8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3811C3,op1_e3_l_3811C3);
      bool _t11E4#1 = GTE<real>(_t11B6,_t11B8);
      if _t11E4 then goto ASSIGN11E8 else goto JOIN1262
    ASSIGN11E8:  preds = [COND11E6]
      real _t11E7#3 = 0.1e1;
      real _t11E9#3 = 0.1e-8;
      real _t11EB#1 = λ(T0[],T1[])<(T0 + T1)> (_t11E7,_t11E9);
      tensor[2] _t11ED#1 = <tensor[2]>[_t11E7,_t11E7];
      real _t11EF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t11ED,xn1187);
      bool _t121D#1 = GT<real>(_t11EB,_t11EF);
      tensor[2] _t121F#1 = <tensor[2]>[_t11E9,_t11E9];
      tensor[2] _t1221#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t121F,xn1187);
      real _t124F#1 = TensorIndex<tensor[2],[0]>(_t1221);
      real _t1251#2 = -0.e0;
      bool _t1253#1 = GT<real>(_t124F,_t1251);
      real _t1255#1 = TensorIndex<tensor[2],[1]>(_t1221);
      bool _t1257#1 = GT<real>(_t1255,_t1251);
      bool _t1259#1 = BAnd(_t1253,_t1257);
      bool _t125B#1 = BAnd(_t121D,_t1259);
      if _t125B then goto ASSIGN125F else goto ASSIGN1265
    ASSIGN125F:  preds = [COND125D]
      femData:MeshPos _t125E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1179,cellInt1178,xn1187,pos1177);
      return _t125E
      goto JOIN1261
    JOIN1261:  preds = [*RETURN(_t125E)1260,*RETURN(_t1264)1266]
      goto JOIN1262
    JOIN1262:  preds = [*JOIN1261,COND11E6]
      goto FOREACH1186
    ASSIGN1265:  preds = [COND125D]
      femData:MeshPos _t1264#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1264
      goto JOIN1261
    ASSIGN1268:  preds = [FOREACH1186]
      femData:MeshPos _t1267#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1267
}
## input initialization
  ENTRY0F3E:  preds = []
    real isoval0F3F#1 = 0.2e0;
    globals.isoval0F21 = isoval0F3F;
    real thick0F42#1 = 0.7e-1;
    globals.thick0F22 = thick0F42;
    real _t0F45#1 = -0.5e0;
    real _t0F47#5 = 0.5e0;
    tensor[3] camEye0F49#1 = <tensor[3]>[_t0F45,_t0F47,_t0F47];
    globals.camEye0F23 = camEye0F49;
    tensor[3] camAt0F4C#1 = <tensor[3]>[_t0F47,_t0F47,_t0F47];
    globals.camAt0F24 = camAt0F4C;
    real _t0F4F#2 = 0.e0;
    real _t0F51#2 = 0.1e1;
    tensor[3] camUp0F53#2 = <tensor[3]>[_t0F4F,_t0F4F,_t0F51];
    globals.camUp0F25 = camUp0F53;
    real camFOV0F56#1 = 0.137e2;
    globals.camFOV0F26 = camFOV0F56;
    int iresU0F59#2 = 10;
    globals.iresU0F27 = iresU0F59;
    globals.iresV0F28 = iresU0F59;
    real camNear0F5D#1 = -0.2e1;
    globals.camNear0F29 = camNear0F5D;
    real camFar0F60#1 = 0.5e1;
    globals.camFar0F2A = camFar0F60;
    globals.refStep0F2B = _t0F51;
    real rayStep0F64#1 = 0.1e-1;
    globals.rayStep0F2C = rayStep0F64;
    globals.lightVsp0F2D = camUp0F53;
    real phongKa0F68#1 = 0.1e0;
    globals.phongKa0F2E = phongKa0F68;
    real phongKd0F6B#1 = 0.9e0;
    globals.phongKd0F2F = phongKd0F6B;
    bool debug0F6E#1 = false;
    globals.debug0F30 = debug0F6E;
    int debugU0F71#1 = 8;
    globals.debugU0F31 = debugU0F71;
    int debugV0F74#1 = 2;
    globals.debugV0F32 = debugV0F74;
    real eps0F77#1 = 0.1e-8;
    globals.eps0F33 = eps0F77;
    return
## global-variable initialization
  ENTRY0F7B:  preds = []
    femData:Mesh a0F7C#3 = globals.a0F1E;
    femData:Space 0b0450_intermedateGlobal0F7E#1 = globals.0b0450_intermedateGlobal0F1F;
    femData:FemFunc 0c0452_intermedateGlobal0F80#1 = globals.0c0452_intermedateGlobal0F20;
    tensor[3] camEye0F82#1 = globals.camEye0F23;
    tensor[3] camAt0F84#1 = globals.camAt0F24;
    tensor[3] camUp0F86#1 = globals.camUp0F25;
    real camFOV0F88#1 = globals.camFOV0F26;
    int iresU0F8A#1 = globals.iresU0F27;
    int iresV0F8C#1 = globals.iresV0F28;
    int _t0F8E#1 = 0;
    int _t0F90#1 = 1;
    int _t0F92#1 = ExtractFemItem<int,NumCell(Mesh)>(a0F7C);
    int _t0F94#1 = ISub(_t0F92,_t0F90);
    int[] _t0F96#1 = Range(_t0F8E,_t0F94);
    femData:MeshCell[] _t0F98#1 = <femData:MeshCell[]>{};
  FOREACH0F9B:  preds = [ASSIGN0F99,NEXT0FA1]
    foreach (_t0F9A in _t0F96) on exit goto GASSIGN0FA2
      femData:MeshCell[] _t0F9F#2 = phi(_t0F98,_t0F9E)
    femData:MeshCell _t0F9C#1 = LoadFem<femData:MeshCell>(a0F7C,_t0F9A);
    femData:MeshCell[] _t0F9E#1 = Append<femData:MeshCell>(_t0F9F,_t0F9C);
    goto FOREACH0F9B
  GASSIGN0FA2:  preds = [FOREACH0F9B]
    globals.0cell_a0F37 = _t0F9F;
    femData:Space b0FA3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0F7E,a0F7C);
    femData:FemFunc c0FA5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0F80,b0FA3);
    globals.c0F38 = c0FA5;
    tensor[3] op1_e3_l_40FA9#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_60FAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40FA9,op1_e3_l_40FA9);
    real op1_e3_l_70FAB#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60FAA);
    real op1_e3_l_90FAC#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70FAB);
    tensor[3] camN0FA8#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40FA9,op1_e3_l_90FAC);
    tensor[3,3] op1_e3_l_150FB6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0F86);
    tensor[3] op1_e3_l_170FB8#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40FA9,op1_e3_l_150FB6);
    real op1_e3_l_340FB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170FB8,op1_e3_l_170FB8);
    real op1_e3_l_350FBA#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90FAC,op1_e3_l_90FAC,op1_e3_l_340FB9);
    real op1_e3_l_360FBB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350FBA);
    tensor[3] op1_e3_l_370FBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_170FB8);
    real op1_e3_l_380FBD#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360FBB);
    tensor[3] camU0FB2#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370FBC,op1_e3_l_380FBD);
    globals.camU0F39 = camU0FB2;
    tensor[3,3] op1_e3_l_450FD5#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40FA9);
    tensor[3] op1_e3_l_470FD6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170FB8,op1_e3_l_450FD5);
    tensor[3] op1_e3_l_500FD8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_470FD6);
    tensor[3] camV0FCB#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380FBD,op1_e3_l_90FAC,op1_e3_l_500FD8);
    globals.camV0F3A = camV0FCB;
    real _t0FE8#1 = 0.314159265358979323846264338327950288e1;
    real _t0FEA#1 = 0.36e3;
    real op1_e3_l_50FED#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0F88,_t0FE8);
    real op1_e3_l_60FEE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FEA,op1_e3_l_50FED);
    real op1_e3_l_100FF1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60FEE);
    real camVmax0FEC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100FF1,op1_e3_l_70FAB);
    globals.camVmax0F3B = camVmax0FEC;
    real _t0FFB#1 = IntToReal(iresU0F8A);
    real _t0FFD#1 = IntToReal(iresV0F8C);
    real op1_e3_l_141006#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0FFB,op1_e3_l_100FF1,op1_e3_l_70FAB);
    real camUmax0FFF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FFD,op1_e3_l_141006);
    globals.camUmax0F3C = camUmax0FFF;
    globals.rayVec0F3D = camN0FA8;
    return
## strand
  strand ray (int ui1012#3, int vi1013#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY1028:  preds = []
        femData:MeshCell[] 0cell_a1029#1 = globals.0cell_a0F37;
        femData:FemFunc c102B#1 = globals.c0F38;
        tensor[3] camEye102D#1 = globals.camEye0F23;
        int iresU102F#2 = globals.iresU0F27;
        int iresV1031#3 = globals.iresV0F28;
        int[] indecies1033#2 = globals.indecies0F34;
        tensor[2][] times1035#1 = globals.times0F35;
        tensor[3] camU1037#1 = globals.camU0F39;
        tensor[3] camV1039#1 = globals.camV0F3A;
        real camVmax103B#2 = globals.camVmax0F3B;
        real camUmax103D#2 = globals.camUmax0F3C;
        real _t103F#5 = -0.5e0;
        real _t1041#1 = IntToReal(ui1012);
        real _t1043#1 = IntToReal(iresU102F);
        real _t1045#3 = 0.5e0;
        real op1_e3_l_61048#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_71049#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_8104A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_61048);
        real op1_e3_l_9104B#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_10104C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71049,op1_e3_l_8104A);
        real op1_e3_l_11104D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_9104B);
        real op1_e3_l_13104E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10104C,op1_e3_l_11104D);
        real rayU1047#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9104B,op1_e3_l_13104E);
        real _t1057#1 = IntToReal(vi1013);
        real _t1059#2 = IntToReal(iresV1031);
        real op1_e3_l_6105C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1059,_t1045);
        real op1_e3_l_7105D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_8105E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_6105C);
        real op1_e3_l_9105F#3 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_101060#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_8105E);
        real op1_e3_l_111061#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_9105F);
        real op1_e3_l_131062#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101060,op1_e3_l_111061);
        real rayV105B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_131062);
        real op1_e3_l_231074#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1045,_t1059);
        real op1_e3_l_251076#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_231074);
        real op1_e3_l_271078#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_251076);
        real op1_e3_l_30107A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271078,op1_e3_l_111061);
        real op1_e3_l_31107B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_30107A);
        tensor[3] op1_e3_l_32107C#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1037,rayU1047);
        tensor[3] op1_e3_l_33107D#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1039,op1_e3_l_31107B);
        tensor[3] UV106B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_32107C,op1_e3_l_33107D);
        tensor[3] rayOrig1091#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye102D,op1_e3_l_32107C,op1_e3_l_33107D);
        int _t10B7#2 = IMul(ui1012,iresV1031);
        int _t10B9#1 = IAdd(_t10B7,vi1013);
        int offset10BB#2 = Subscript<int[]>(indecies1033,_t10B9);
        int _t10BD#1 = IMul(iresU102F,iresV1031);
        int _t10BF#1 = IAdd(_t10BD,_t10B7);
        int _t10C1#1 = IAdd(_t10BF,vi1013);
        int len10C3#1 = Subscript<int[]>(indecies1033,_t10C1);
        int itter10C5#5 = 0;
        int idx10C7#2 = IAdd(offset10BB,itter10C5);
        tensor[2] interval10C9#3 = Subscript<tensor[2][]>(times1035,idx10C7);
        real s10CB#1 = TensorIndex<tensor[2],[0]>(interval10C9);
        real e10CD#1 = TensorIndex<tensor[2],[1]>(interval10C9);
        femData:MeshCell cc10CF#2 = Subscript<femData:MeshCell[]>(0cell_a1029,itter10C5);
        int _t10D1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc10CF);
        femData:FuncCell _t10D3#1 = LoadFem<femData:FuncCell>(c102B,_t10D1);
        tensor[2][0] _t10D5#1 = <tensor[2][0]>{};
        tensor[2][] _t10D7#1 = MkDynamic<tensor[2],0>(_t10D5);
        tensor[2,3][0] _t10D9#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t10DB#1 = MkDynamic<tensor[2,3],0>(_t10D9);
        femData:MeshCell[0] _t10DD#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t10DF#1 = MkDynamic<femData:MeshCell,0>(_t10DD);
        self.rayU = rayU1047;
        self.rayV = rayV105B;
        self.UV = UV106B;
        self.rayOrig = rayOrig1091;
        self.offset = offset10BB;
        self.len = len10C3;
        self.itter = itter10C5;
        self.idx = idx10C7;
        self.interval = interval10C9;
        self.s = s10CB;
        self.e = e10CD;
        self.cc = cc10CF;
        self.fc = _t10D3;
        self.intervals = _t10D7;
        self.sints = _t10DB;
        self.newCells = _t10DF;
        self.count = itter10C5;
        self.totalCount = itter10C5;
        self.ui = ui1012;
        self.vi = vi1013;
        return
    end state init
    method start
        ENTRY10F6:  preds = []
          femData:MeshCell[] 0cell_a10F7#1 = globals.0cell_a0F37;
          femData:FemFunc c10F9#1 = globals.c0F38;
          bool debug10FB#1 = globals.debug0F30;
          int debugU10FD#1 = globals.debugU0F31;
          int debugV10FF#1 = globals.debugV0F32;
          int[] cells1101#1 = globals.cells0F36;
          int len1103#1 = self.len;
          int idx1105#1 = self.idx;
          int ui1107#1 = self.ui;
          int vi1109#1 = self.vi;
          if debug10FB then goto ASSIGN110D else goto JOIN1117
        ASSIGN110D:  preds = [COND110B]
          bool _t110C#1 = NEQ<int>(ui1107,debugU10FD);
          if _t110C then goto ASSIGN1110 else goto ASSIGN112A
        ASSIGN1110:  preds = [COND110E]
          bool _t110F#1 = true;
          goto JOIN1113
        JOIN1113:  preds = [ASSIGN1110,ASSIGN112A]
          bool _t1111#1 = phi(_t110F,_t1112)
          if _t1111 then goto STABILIZE1115 else goto JOIN1116
        STABILIZE1115:  preds = [COND1114]
          stabilize
          goto JOIN1116
        JOIN1116:  preds = [*STABILIZE1115,COND1114]
          goto JOIN1117
        JOIN1117:  preds = [JOIN1116,COND110B]
          int _t1118#1 = 0;
          bool _t111A#1 = EQ<int>(len1103,_t1118);
          if _t111A then goto STABILIZE111D else goto JOIN111E
        STABILIZE111D:  preds = [COND111C]
          stabilize
          goto JOIN111E
        JOIN111E:  preds = [*STABILIZE111D,COND111C]
          int _t111F#1 = Subscript<int[]>(cells1101,idx1105);
          femData:MeshCell cc1121#2 = Subscript<femData:MeshCell[]>(0cell_a10F7,_t111F);
          int _t1123#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1121);
          femData:FuncCell _t1125#1 = LoadFem<femData:FuncCell>(c10F9,_t1123);
          self.cc = cc1121;
          self.fc = _t1125;
          active
        ASSIGN112A:  preds = [COND110E]
          bool _t1112#1 = NEQ<int>(vi1109,debugV10FF);
          goto JOIN1113
    end start
    method update
        ENTRY112B:  preds = []
          femData:MeshCell[] 0cell_a112C#1 = globals.0cell_a0F37;
          femData:FemFunc c112E#1 = globals.c0F38;
          tensor[2][] times1130#1 = globals.times0F35;
          int[] cells1132#1 = globals.cells0F36;
          tensor[3] rayVec1134#5 = globals.rayVec0F3D;
          tensor[3] rayOrig1136#2 = self.rayOrig;
          int offset1138#1 = self.offset;
          int len113A#2 = self.len;
          int itter113C#2 = self.itter;
          tensor[2] interval113E#1 = self.interval;
          real s1140#5 = self.s;
          real e1142#3 = self.e;
          femData:MeshCell cc1144#6 = self.cc;
          femData:FuncCell fc1146#3 = self.fc;
          tensor[2][] intervals1148#2 = self.intervals;
          tensor[2,3][] sints114A#2 = self.sints;
          femData:MeshCell[] newCells114C#2 = self.newCells;
          int count114E#3 = self.count;
          int totalCount1150#2 = self.totalCount;
          int ui1152#3 = self.ui;
          int vi1154#3 = self.vi;
          int _t1156#8 = 1;
          bool _t1158#1 = LT<int>(len113A,_t1156);
          if _t1158 then goto STABILIZE115B else goto JOIN115C
        STABILIZE115B:  preds = [COND115A]
          stabilize
          goto JOIN115C
        JOIN115C:  preds = [*STABILIZE115B,COND115A]
          tensor[3] op1_e3_l_3115E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s1140,rayVec1134);
          tensor[3] rayStart115D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_3115E);
          real _t1161#1 = TensorIndex<tensor[3],[0]>(rayStart115D);
          real _t1163#1 = TensorIndex<tensor[3],[1]>(rayStart115D);
          tensor[2] project1165#8 = <tensor[2]>[_t1161,_t1163];
          femData:FemFunc _t1167#6 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1146);
          femData:Space _t1169#5 = ExtractFem<femData:Space,femData:FemFunc>(_t1167);
          int _t116B#5 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1146);
          femData:Mesh _t116D#12 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1144);
          int _t116F#9 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1144);
          real _t1171#2 = TensorIndex<tensor[3],[2]>(rayStart115D);
          femData:MeshPos callNewtonPos126A#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos126B#17 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos126A);
          int[6] femIndicies126D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs126E#5 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies126D);
          tensor[6] basisResult126F#1 = EvaluateBasis<BasisArray(6)>(refPos126B);
          real compositionl1175#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult126F,refPos126B);
          real f01173#5 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1175);
          real _t1279#1 = TensorIndex<tensor[3],[0]>(rayVec1134);
          real _t127B#1 = TensorIndex<tensor[3],[1]>(rayVec1134);
          tensor[2] _t127D#2 = <tensor[2]>[_t1279,_t127B];
          tensor[2,6] basisResult128F#1 = EvaluateBasis<BasisArray(2,6)>(refPos126B);
          tensor[2] compositionl1281#3 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult128F,refPos126B);
          int[3] femIndicies1291#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs1292#6 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies1291);
          tensor[2,3] basisResult1293#3 = EvaluateBasis<BasisArray(2,3)>(refPos126B);
          tensor[2,2] probe_l_81282#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2,2] op1_e3_l_91283#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_81282);
          tensor[2] probe_l_101284#2 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] probe_l_111285#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] op1_e3_l_121286#2 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_111285);
          tensor[2,2] op1_e3_l_131287#2 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_91283);
          real op1_e3_l_141288#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_101284,op1_e3_l_121286);
          tensor[2,2] op1_e3_l_151289#4 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_131287,op1_e3_l_141288);
          tensor[2] _t127F#2 = λ(T0[2],T1[2 2])<Σ(i104=0..1)<((T0_{i104} * T1_{i104,i0}))>(i104=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real _t12B1#2 = TensorIndex<tensor[3],[2]>(rayVec1134);
          int _t12B3#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1144);
          real _t12B5#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t116D,_t12B3);
          tensor[2] op1_e3_l_1912C2#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real op1_e3_l_2012C3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t127D,op1_e3_l_1912C2);
          real op1_e3_l_2112C4#1 = λ(T0[],T1[])<(T1) - (T0)> (_t12B1,op1_e3_l_2012C3);
          real op1_e3_l_2212C5#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2112C4);
          real _t12B7#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t12B5,op1_e3_l_2212C5);
          real _t12F1#1 = λ(T0[],T1[])<(T0) - (T1)> (e1142,s1140);
          real gradEps12F3#6 = Min<real>(_t12B7,_t12F1);
          string _t12F5#1 = "hmmmm:";
          string _t12F7#18 = "\n";
          Print<[string,tensor[2],string]>(_t12F5,_t127F,_t12F7);
          string _t12FA#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t12FA,femDofs126E,_t12F7);
          tensor[2] op1_e3_l_31302#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps12F3,_t127D);
          tensor[2] _t1301#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project1165,op1_e3_l_31302);
          femData:MeshPos callNewtonPos130A#1 = _0A3A_msh_newtonInverse1176 (_t1301,_t116F,_t116D);
          tensor[2] refPos130B#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos130A);
          tensor[6] basisResult130F#1 = EvaluateBasis<BasisArray(6)>(refPos130B);
          real compositionl1307#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos130B,femDofs126E,basisResult130F,refPos130B);
          real op1_e3_l_111308#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1307);
          real op1_e3_l_121309#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps12F3,_t12B1);
          real f11305#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_111308,op1_e3_l_121309);
          string _t131B#1 = "=========================\n";
          Print<[string]>(_t131B);
          string _t131E#1 = "Ui/Vi:";
          string _t1320#2 = "/";
          Print<[string,int,string,int,string]>(_t131E,ui1152,_t1320,vi1154,_t12F7);
          string _t1323#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1323,cc1144,_t12F7);
          string _t1326#1 = "hess:";
          tensor[2,2,6] basisResult1353#1 = EvaluateBasis<BasisArray(2,2,6)>(refPos126B);
          tensor[2,2] compositionl1331#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult1353,refPos126B);
          tensor[2,2] op1_e3_l_241333#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl1331,op1_e3_l_151289);
          tensor[2,2,3] basisResult1357#3 = EvaluateBasis<BasisArray(2,2,3)>(refPos126B);
          tensor[2,2,2] probe_l_261336#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i5=0..2)<((T3_{i5,i0} * T4_{i1,i2,i5}))>(i5=0..2)>_{2 2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2,2] op1_e3_l_271337#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i3,i1,i2}))>(i3=0..1)>_{2 2 2} (probe_l_261336);
          tensor[2,2,2] op1_e3_l_311338#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i1,i3,i2}))>(i3=0..1)>_{2 2 2} (op1_e3_l_271337);
          tensor[2,2] probe_l_361339#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'0',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] probe_l_39133A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'1',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] op1_e3_l_40133B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii0,ii2} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_39133A);
          tensor[2] op1_e3_l_41133C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T1_{i1} * T0_{i1,i0}))>(i1=0..1)>_{2} (probe_l_361339,op1_e3_l_121286);
          tensor[2] op1_e3_l_42133D#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (probe_l_101284,op1_e3_l_40133B);
          tensor[2] op1_e3_l_44133E#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_41133C,op1_e3_l_42133D);
          tensor[2,2,2] op1_e3_l_45133F#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2} * T1)>_{2 2 2} (op1_e3_l_311338,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_461340#1 = λ(T0[2 2],T1[2])<(T0_{i0,i1} * T1_{i2})>_{2 2 2} (op1_e3_l_131287,op1_e3_l_44133E);
          tensor[2,2,2] op1_e3_l_551341#1 = λ(T0[2 2 2],T1[2 2 2])<(T0_{i0,i1,i2}) - (T1_{i0,i1,i2})>_{2 2 2} (op1_e3_l_45133F,op1_e3_l_461340);
          real op1_e3_l_561342#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_141288,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_571343#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2}) / ( T1)>_{2 2 2} (op1_e3_l_551341,op1_e3_l_561342);
          tensor[2,2] op1_e3_l_581344#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_151289,op1_e3_l_241333);
          tensor[2,2] op1_e3_l_591345#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl1281,op1_e3_l_571343);
          tensor[2,2] _t1328#3 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_581344,op1_e3_l_591345);
          string _t1390#1 = "norm:";
          real op1_e3_l_11513B9#1 = λ(T0[2 2],T1[2 2])<Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T1_{i0,i1}))>(i0=0..1)(i1=0..1)> (_t1328,_t1328);
          real _t1392#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11513B9);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1326,_t1328,_t12F7,_t1390,_t1392,_t12F7);
          string _t1417#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t1417,_t127F,_t12F7);
          string _t141A#1 = "vals:";
          tensor[2] _t141C#2 = <tensor[2]>[f01173,f11305];
          Print<[string,tensor[2],string]>(_t141A,_t141C,_t12F7);
          real _t141F#6 = 0.e0;
          bool _t1421#2 = GT<real>(f01173,_t141F);
          if _t1421 then goto JOIN1426 else goto ASSIGN14FA
        JOIN1426:  preds = [COND1423,JOIN14FF]
          int _t1424#1 = phi(_t1156,_t1425)
          bool _t1427#2 = GT<real>(f11305,_t141F);
          if _t1427 then goto JOIN142C else goto ASSIGN14F2
        JOIN142C:  preds = [COND1429,JOIN14F7]
          int _t142A#1 = phi(_t1156,_t142B)
          int _t142D#1 = IMul(_t1424,_t142A);
          int _t142F#5 = 0;
          bool _t1431#1 = GT<int>(_t142D,_t142F);
          bool _t1433#1 = BNot(_t1431);
          if _t1433 then goto COND1436 else goto ASSIGN14CD
        COND1436:  preds = [COND1435]
          if _t1421 then goto JOIN1439 else goto ASSIGN14C7
        JOIN1439:  preds = [COND1436,JOIN14CB]
          int _t1437#1 = phi(_t1156,_t1438)
          if _t1427 then goto JOIN143D else goto ASSIGN14C1
        JOIN143D:  preds = [COND143A,JOIN14C5]
          int _t143B#1 = phi(_t1156,_t143C)
          int _t143E#1 = IMul(_t1437,_t143B);
          bool _t1440#1 = EQ<int>(_t143E,_t142F);
          if _t1440 then goto ASSIGN1444 else goto JOIN1446
        ASSIGN1444:  preds = [COND1442]
          string _t1443#1 = "Warn: 0 update\n";
          Print<[string]>(_t1443);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN1445,COND1442]
          string _t1447#1 = "update with interval:";
          Print<[string,real,string]>(_t1447,gradEps12F3,_t12F7);
          string _t144A#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t144A,ui1152,_t1320,vi1154,_t12F7);
          string _t144D#1 = "Count:";
          Print<[string,int,string]>(_t144D,count114E,_t12F7);
          int count1450#1 = IAdd(count114E,_t1156);
          int totalCount1452#1 = IAdd(totalCount1150,_t1156);
          string _t1454#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1454,_t141C,_t12F7);
          string _t1457#1 = "New interval:";
          real _t1459#3 = λ(T0[],T1[])<(T0 + T1)> (s1140,gradEps12F3);
          tensor[2] _t145B#2 = <tensor[2]>[s1140,_t1459];
          Print<[string,tensor[2],string]>(_t1457,_t145B,_t12F7);
          tensor[2][] intervals145E#1 = Append<tensor[2]>(intervals1148,_t145B);
          tensor[3] op1_e3_l_51462#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1134,_t1459);
          tensor[3] _t1460#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_51462);
          tensor[2,3] _t1466#1 = <tensor[2,3]>[rayStart115D,_t1460];
          tensor[2,3][] sints1468#1 = Append<tensor[2,3]>(sints114A,_t1466);
          femData:MeshCell[] newCells146A#1 = Append<femData:MeshCell>(newCells114C,cc1144);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN146B,ASSIGN14F0]
          int totalCount146C#3 = phi(totalCount1452,totalCount1150)
          int count146D#2 = phi(count1450,count114E)
          femData:MeshCell[] newCells146E#3 = phi(newCells146A,newCells114C)
          tensor[2,3][] sints146F#2 = phi(sints1468,sints114A)
          tensor[2][] intervals1470#3 = phi(intervals145E,intervals1148)
          real s1471#3 = phi(_t1459,s1472)
          bool _t1474#1 = GTE<real>(s1471,e1142);
          if _t1474 then goto ASSIGN1478 else goto JOIN14A5
        ASSIGN1478:  preds = [COND1476]
          int itter1477#4 = IAdd(itter113C,_t1156);
          bool _t1479#1 = GTE<int>(itter1477,len113A);
          if _t1479 then goto ASSIGN147D else goto ASSIGN14B3
        ASSIGN147D:  preds = [COND147B]
          string _t147C#1 = "TotalCount:";
          Print<[string,int,string]>(_t147C,totalCount146C,_t12F7);
          string _t147F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t147F,intervals1470,_t12F7);
          string _t1482#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t1482,newCells146E,_t12F7);
          string _t1485#1 = ";";
          string _t1487#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui1152,_t1485,vi1154,_t1487);
          self.itter = itter1477;
          self.s = s1471;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count146D;
          self.totalCount = totalCount146C;
          stabilize
          goto JOIN149D
        JOIN149D:  preds = [*STABILIZE1491,ASSIGN14BF]
          int count1492#1 = phi(_t142F)
          femData:FuncCell fc1493#1 = phi(_t1494)
          femData:MeshCell cc1495#1 = phi(cc1496)
          real e1497#1 = phi(e1498)
          real s1499#1 = phi(s149A)
          tensor[2] interval149B#1 = phi(interval149C)
          goto JOIN14A5
        JOIN14A5:  preds = [JOIN149D,COND1476]
          int count149E#1 = phi(count1492,count146D)
          femData:FuncCell fc149F#1 = phi(fc1493,fc1146)
          femData:MeshCell cc14A0#1 = phi(cc1495,cc1144)
          real e14A1#1 = phi(e1497,e1142)
          real s14A2#1 = phi(s1499,s1471)
          tensor[2] interval14A3#1 = phi(interval149B,interval113E)
          int itter14A4#1 = phi(itter1477,itter113C)
          self.itter = itter14A4;
          self.interval = interval14A3;
          self.s = s14A2;
          self.e = e14A1;
          self.cc = cc14A0;
          self.fc = fc149F;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count149E;
          self.totalCount = totalCount146C;
          active
        ASSIGN14B3:  preds = [COND147B]
          string _t14B2#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t14B2);
          int _t14B5#2 = IAdd(offset1138,itter1477);
          tensor[2] interval149C#3 = Subscript<tensor[2][]>(times1130,_t14B5);
          int _t14B8#1 = Subscript<int[]>(cells1132,_t14B5);
          femData:MeshCell cc1496#2 = Subscript<femData:MeshCell[]>(0cell_a112C,_t14B8);
          real s149A#1 = TensorIndex<tensor[2],[0]>(interval149C);
          real e1498#1 = TensorIndex<tensor[2],[1]>(interval149C);
          int _t14BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1496);
          femData:FuncCell _t1494#1 = LoadFem<femData:FuncCell>(c112E,_t14BD);
          goto JOIN149D
        ASSIGN14C1:  preds = [COND143A]
          bool _t14C0#1 = LT<real>(f11305,_t141F);
          if _t14C0 then goto ASSIGN14C4 else goto JOIN14C5
        ASSIGN14C4:  preds = [COND14C2]
          int _t14C3#1 = -1;
          goto JOIN14C5
        JOIN14C5:  preds = [ASSIGN14C4,COND14C2]
          int _t143C#1 = phi(_t14C3,_t142F)
          goto JOIN143D
        ASSIGN14C7:  preds = [COND1436]
          bool _t14C6#1 = LT<real>(f01173,_t141F);
          if _t14C6 then goto ASSIGN14CA else goto JOIN14CB
        ASSIGN14CA:  preds = [COND14C8]
          int _t14C9#1 = -1;
          goto JOIN14CB
        JOIN14CB:  preds = [ASSIGN14CA,COND14C8]
          int _t1438#1 = phi(_t14C9,_t142F)
          goto JOIN1439
        ASSIGN14CD:  preds = [COND1435]
          real _t14CC#1 = 0.2e1;
          real _t14CE#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t116D,_t12B3);
          real op1_e3_l_1214D4#1 = λ(T0[])<Abs(T0)> (f01173);
          real op1_e3_l_1314D5#1 = λ(T0[],T1[])<(T0 * T1)> (_t14CC,_t14CE);
          real _t14D0#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1214D4,op1_e3_l_1314D5);
          real epsUpdate14E8#2 = Max<real>(gradEps12F3,_t14D0);
          string _t14EA#1 = "update L:";
          Print<[string,real,string]>(_t14EA,epsUpdate14E8,_t12F7);
          string _t14ED#1 = "update G:";
          Print<[string,real,string]>(_t14ED,gradEps12F3,_t12F7);
          real s1472#1 = λ(T0[],T1[])<(T0 + T1)> (s1140,epsUpdate14E8);
          goto JOIN1473
        ASSIGN14F2:  preds = [COND1429]
          bool _t14F1#1 = LT<real>(f11305,_t141F);
          if _t14F1 then goto ASSIGN14F5 else goto ASSIGN14F8
        ASSIGN14F5:  preds = [COND14F3]
          int _t14F4#1 = -1;
          goto JOIN14F7
        JOIN14F7:  preds = [ASSIGN14F5,ASSIGN14F8]
          int _t142B#1 = phi(_t14F4,_t14F6)
          goto JOIN142C
        ASSIGN14F8:  preds = [COND14F3]
          int _t14F6#1 = 0;
          goto JOIN14F7
        ASSIGN14FA:  preds = [COND1423]
          bool _t14F9#1 = LT<real>(f01173,_t141F);
          if _t14F9 then goto ASSIGN14FD else goto ASSIGN1500
        ASSIGN14FD:  preds = [COND14FB]
          int _t14FC#1 = -1;
          goto JOIN14FF
        JOIN14FF:  preds = [ASSIGN14FD,ASSIGN1500]
          int _t1425#1 = phi(_t14FC,_t14FE)
          goto JOIN1426
        ASSIGN1500:  preds = [COND14FB]
          int _t14FE#1 = 0;
          goto JOIN14FF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1501:  preds = []
      int iresU1502#1 = globals.iresU0F27;
      int iresV1504#1 = globals.iresV0F28;
      int _t1506#2 = 0;
      int _t1508#2 = 1;
      int _t150A#1 = ISub(iresU1502,_t1508);
      int[] _t150C#1 = Range(_t1506,_t150A);
    FOREACH150F:  preds = [ASSIGN150D,NEXT1518]
      foreach (vi150E in _t150C) on exit goto RETURN1519
      int _t1510#1 = ISub(iresV1504,_t1508);
      int[] _t1512#1 = Range(_t1506,_t1510);
    FOREACH1515:  preds = [ASSIGN1513,NEXT1517]
      foreach (ui1514 in _t1512) on exit goto NEXT1518
      new ray(ui1514,vi150E);
      goto FOREACH1515
    NEXT1518:  preds = [FOREACH1515]
      goto FOREACH150F
    RETURN1519:  preds = [FOREACH150F]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0F1E (a) = <no-default>
  input 0b0450_intermedateGlobal0F1F (b) = <no-default>
  input 0c0452_intermedateGlobal0F20 (c) = <no-default>
  input isoval0F21 (isoval) = <default>
  input thick0F22 (thick) = <default>
  input camEye0F23 (camEye) = <default>
  input camAt0F24 (camAt) = <default>
  input camUp0F25 (camUp) = <default>
  input camFOV0F26 (camFOV) = <default>
  input iresU0F27 (iresU) = <default>
  input iresV0F28 (iresV) = <default>
  input camNear0F29 (camNear) = <default>
  input camFar0F2A (camFar) = <default>
  input refStep0F2B (refStep) = <default>
  input rayStep0F2C (rayStep) = <default>
  input lightVsp0F2D (lightVsp) = <default>
  input phongKa0F2E (phongKa) = <default>
  input phongKd0F2F (phongKd) = <default>
  input debug0F30 (debug) = <default>
  input debugU0F31 (debugU) = <default>
  input debugV0F32 (debugV) = <default>
  input eps0F33 (eps) = <default>
  input indecies0F34 (indecies) = <no-default>
  input times0F35 (times) = <no-default>
  input cells0F36 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0F37
  global femData:FemFunc c0F38
  global tensor[3] camU0F39
  global tensor[3] camV0F3A
  global real camVmax0F3B
  global real camUmax0F3C
  global tensor[3] rayVec0F3D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1176 (tensor[2] pos1177#3, int cellInt1178#7, femData:Mesh mesh1179#10) {
    ENTRY117A:  preds = []
      real _t117B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn117D#8 = <tensor[2]>[_t117B,_t117B];
      int _t117F#1 = 0;
      int _t1181#1 = 16;
      int[] _t1183#1 = Range(_t117F,_t1181);
    FOREACH1186:  preds = [ASSIGN1184,NEXT1263]
      foreach (itter1185 in _t1183) on exit goto ASSIGN1268
        tensor[2] xn1188#6 = phi(xn117D,xn1187)
      int[3] femIndicies1195#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs1196#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies1195);
      tensor[2,3] basisResult1197#3 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_101189#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2,2] op1_e3_l_11118A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_101189);
      tensor[2] probe_l_12118B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] probe_l_13118C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] op1_e3_l_14118D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_13118C);
      tensor[2,2] op1_e3_l_15118E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_11118A);
      real op1_e3_l_16118F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_12118B,op1_e3_l_14118D);
      tensor[3] basisResult119D#2 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_171190#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,femDofs1196,basisResult119D,xn1188);
      tensor[2,2] op1_e3_l_181191#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_15118E,op1_e3_l_16118F);
      tensor[2] op1_e3_l_191192#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_171190);
      tensor[2] op1_e3_l_201193#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_191192);
      tensor[2] xn1187#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_201193);
      real _t11B4#2 = 0.1e-7;
      real _t11B6#1 = λ(T0[],T1[])<(T0 * T1)> (_t11B4,_t11B4);
      tensor[2] probe_l_2511C0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt1178,mesh1179,xn1188,femDofs1196,basisResult119D,xn1188);
      tensor[2] op1_e3_l_2711C2#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_2511C0);
      tensor[2] op1_e3_l_3811C3#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_2711C2);
      real _t11B8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3811C3,op1_e3_l_3811C3);
      bool _t11E4#1 = GTE<real>(_t11B6,_t11B8);
      if _t11E4 then goto ASSIGN11E8 else goto JOIN1262
    ASSIGN11E8:  preds = [COND11E6]
      real _t11E7#3 = 0.1e1;
      real _t11E9#3 = 0.1e-8;
      real _t11EB#1 = λ(T0[],T1[])<(T0 + T1)> (_t11E7,_t11E9);
      tensor[2] _t11ED#1 = <tensor[2]>[_t11E7,_t11E7];
      real _t11EF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t11ED,xn1187);
      bool _t121D#1 = GT<real>(_t11EB,_t11EF);
      tensor[2] _t121F#1 = <tensor[2]>[_t11E9,_t11E9];
      tensor[2] _t1221#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t121F,xn1187);
      real _t124F#1 = TensorIndex<tensor[2],[0]>(_t1221);
      real _t1251#2 = -0.e0;
      bool _t1253#1 = GT<real>(_t124F,_t1251);
      real _t1255#1 = TensorIndex<tensor[2],[1]>(_t1221);
      bool _t1257#1 = GT<real>(_t1255,_t1251);
      bool _t1259#1 = BAnd(_t1253,_t1257);
      bool _t125B#1 = BAnd(_t121D,_t1259);
      if _t125B then goto ASSIGN125F else goto ASSIGN1265
    ASSIGN125F:  preds = [COND125D]
      femData:MeshPos _t125E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1179,cellInt1178,xn1187,pos1177);
      return _t125E
      goto JOIN1261
    JOIN1261:  preds = [*RETURN(_t125E)1260,*RETURN(_t1264)1266]
      goto JOIN1262
    JOIN1262:  preds = [*JOIN1261,COND11E6]
      goto FOREACH1186
    ASSIGN1265:  preds = [COND125D]
      femData:MeshPos _t1264#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1264
      goto JOIN1261
    ASSIGN1268:  preds = [FOREACH1186]
      femData:MeshPos _t1267#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1267
}
## input initialization
  ENTRY0F3E:  preds = []
    real isoval0F3F#1 = 0.2e0;
    globals.isoval0F21 = isoval0F3F;
    real thick0F42#1 = 0.7e-1;
    globals.thick0F22 = thick0F42;
    real _t0F45#1 = -0.5e0;
    real _t0F47#5 = 0.5e0;
    tensor[3] camEye0F49#1 = <tensor[3]>[_t0F45,_t0F47,_t0F47];
    globals.camEye0F23 = camEye0F49;
    tensor[3] camAt0F4C#1 = <tensor[3]>[_t0F47,_t0F47,_t0F47];
    globals.camAt0F24 = camAt0F4C;
    real _t0F4F#2 = 0.e0;
    real _t0F51#2 = 0.1e1;
    tensor[3] camUp0F53#2 = <tensor[3]>[_t0F4F,_t0F4F,_t0F51];
    globals.camUp0F25 = camUp0F53;
    real camFOV0F56#1 = 0.137e2;
    globals.camFOV0F26 = camFOV0F56;
    int iresU0F59#2 = 10;
    globals.iresU0F27 = iresU0F59;
    globals.iresV0F28 = iresU0F59;
    real camNear0F5D#1 = -0.2e1;
    globals.camNear0F29 = camNear0F5D;
    real camFar0F60#1 = 0.5e1;
    globals.camFar0F2A = camFar0F60;
    globals.refStep0F2B = _t0F51;
    real rayStep0F64#1 = 0.1e-1;
    globals.rayStep0F2C = rayStep0F64;
    globals.lightVsp0F2D = camUp0F53;
    real phongKa0F68#1 = 0.1e0;
    globals.phongKa0F2E = phongKa0F68;
    real phongKd0F6B#1 = 0.9e0;
    globals.phongKd0F2F = phongKd0F6B;
    bool debug0F6E#1 = false;
    globals.debug0F30 = debug0F6E;
    int debugU0F71#1 = 8;
    globals.debugU0F31 = debugU0F71;
    int debugV0F74#1 = 2;
    globals.debugV0F32 = debugV0F74;
    real eps0F77#1 = 0.1e-8;
    globals.eps0F33 = eps0F77;
    return
## global-variable initialization
  ENTRY0F7B:  preds = []
    femData:Mesh a0F7C#3 = globals.a0F1E;
    femData:Space 0b0450_intermedateGlobal0F7E#1 = globals.0b0450_intermedateGlobal0F1F;
    femData:FemFunc 0c0452_intermedateGlobal0F80#1 = globals.0c0452_intermedateGlobal0F20;
    tensor[3] camEye0F82#1 = globals.camEye0F23;
    tensor[3] camAt0F84#1 = globals.camAt0F24;
    tensor[3] camUp0F86#1 = globals.camUp0F25;
    real camFOV0F88#1 = globals.camFOV0F26;
    int iresU0F8A#1 = globals.iresU0F27;
    int iresV0F8C#1 = globals.iresV0F28;
    int _t0F8E#1 = 0;
    int _t0F90#1 = 1;
    int _t0F92#1 = ExtractFemItem<int,NumCell(Mesh)>(a0F7C);
    int _t0F94#1 = ISub(_t0F92,_t0F90);
    int[] _t0F96#1 = Range(_t0F8E,_t0F94);
    femData:MeshCell[] _t0F98#1 = <femData:MeshCell[]>{};
  FOREACH0F9B:  preds = [ASSIGN0F99,NEXT0FA1]
    foreach (_t0F9A in _t0F96) on exit goto GASSIGN0FA2
      femData:MeshCell[] _t0F9F#2 = phi(_t0F98,_t0F9E)
    femData:MeshCell _t0F9C#1 = LoadFem<femData:MeshCell>(a0F7C,_t0F9A);
    femData:MeshCell[] _t0F9E#1 = Append<femData:MeshCell>(_t0F9F,_t0F9C);
    goto FOREACH0F9B
  GASSIGN0FA2:  preds = [FOREACH0F9B]
    globals.0cell_a0F37 = _t0F9F;
    femData:Space b0FA3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0F7E,a0F7C);
    femData:FemFunc c0FA5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0F80,b0FA3);
    globals.c0F38 = c0FA5;
    tensor[3] op1_e3_l_40FA9#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_60FAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40FA9,op1_e3_l_40FA9);
    real op1_e3_l_70FAB#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60FAA);
    real op1_e3_l_90FAC#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70FAB);
    tensor[3] camN0FA8#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40FA9,op1_e3_l_90FAC);
    tensor[3,3] op1_e3_l_150FB6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0F86);
    tensor[3] op1_e3_l_170FB8#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40FA9,op1_e3_l_150FB6);
    real op1_e3_l_340FB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170FB8,op1_e3_l_170FB8);
    real op1_e3_l_350FBA#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90FAC,op1_e3_l_90FAC,op1_e3_l_340FB9);
    real op1_e3_l_360FBB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350FBA);
    tensor[3] op1_e3_l_370FBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_170FB8);
    real op1_e3_l_380FBD#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360FBB);
    tensor[3] camU0FB2#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370FBC,op1_e3_l_380FBD);
    globals.camU0F39 = camU0FB2;
    tensor[3,3] op1_e3_l_450FD5#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40FA9);
    tensor[3] op1_e3_l_470FD6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170FB8,op1_e3_l_450FD5);
    tensor[3] op1_e3_l_500FD8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_470FD6);
    tensor[3] camV0FCB#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380FBD,op1_e3_l_90FAC,op1_e3_l_500FD8);
    globals.camV0F3A = camV0FCB;
    real _t0FE8#1 = 0.314159265358979323846264338327950288e1;
    real _t0FEA#1 = 0.36e3;
    real op1_e3_l_50FED#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0F88,_t0FE8);
    real op1_e3_l_60FEE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FEA,op1_e3_l_50FED);
    real op1_e3_l_100FF1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60FEE);
    real camVmax0FEC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100FF1,op1_e3_l_70FAB);
    globals.camVmax0F3B = camVmax0FEC;
    real _t0FFB#1 = IntToReal(iresU0F8A);
    real _t0FFD#1 = IntToReal(iresV0F8C);
    real op1_e3_l_141006#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0FFB,op1_e3_l_100FF1,op1_e3_l_70FAB);
    real camUmax0FFF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FFD,op1_e3_l_141006);
    globals.camUmax0F3C = camUmax0FFF;
    globals.rayVec0F3D = camN0FA8;
    return
## strand
  strand ray (int ui1012#3, int vi1013#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY1028:  preds = []
        femData:MeshCell[] 0cell_a1029#1 = globals.0cell_a0F37;
        femData:FemFunc c102B#1 = globals.c0F38;
        tensor[3] camEye102D#1 = globals.camEye0F23;
        int iresU102F#2 = globals.iresU0F27;
        int iresV1031#3 = globals.iresV0F28;
        int[] indecies1033#2 = globals.indecies0F34;
        tensor[2][] times1035#1 = globals.times0F35;
        tensor[3] camU1037#1 = globals.camU0F39;
        tensor[3] camV1039#1 = globals.camV0F3A;
        real camVmax103B#2 = globals.camVmax0F3B;
        real camUmax103D#2 = globals.camUmax0F3C;
        real _t103F#5 = -0.5e0;
        real _t1041#1 = IntToReal(ui1012);
        real _t1043#1 = IntToReal(iresU102F);
        real _t1045#3 = 0.5e0;
        real op1_e3_l_61048#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_71049#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_8104A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_61048);
        real op1_e3_l_9104B#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_10104C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71049,op1_e3_l_8104A);
        real op1_e3_l_11104D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_9104B);
        real op1_e3_l_13104E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10104C,op1_e3_l_11104D);
        real rayU1047#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9104B,op1_e3_l_13104E);
        real _t1057#1 = IntToReal(vi1013);
        real _t1059#2 = IntToReal(iresV1031);
        real op1_e3_l_6105C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1059,_t1045);
        real op1_e3_l_7105D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_8105E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_6105C);
        real op1_e3_l_9105F#3 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_101060#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_8105E);
        real op1_e3_l_111061#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_9105F);
        real op1_e3_l_131062#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101060,op1_e3_l_111061);
        real rayV105B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_131062);
        real op1_e3_l_231074#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1045,_t1059);
        real op1_e3_l_251076#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_231074);
        real op1_e3_l_271078#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_251076);
        real op1_e3_l_30107A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271078,op1_e3_l_111061);
        real op1_e3_l_31107B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_30107A);
        tensor[3] op1_e3_l_32107C#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1037,rayU1047);
        tensor[3] op1_e3_l_33107D#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1039,op1_e3_l_31107B);
        tensor[3] UV106B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_32107C,op1_e3_l_33107D);
        tensor[3] rayOrig1091#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye102D,op1_e3_l_32107C,op1_e3_l_33107D);
        int _t10B7#2 = IMul(ui1012,iresV1031);
        int _t10B9#1 = IAdd(_t10B7,vi1013);
        int offset10BB#2 = Subscript<int[]>(indecies1033,_t10B9);
        int _t10BD#1 = IMul(iresU102F,iresV1031);
        int _t10BF#1 = IAdd(_t10BD,_t10B7);
        int _t10C1#1 = IAdd(_t10BF,vi1013);
        int len10C3#1 = Subscript<int[]>(indecies1033,_t10C1);
        int itter10C5#4 = 0;
        int idx10C7#2 = offset10BB;
        tensor[2] interval10C9#3 = Subscript<tensor[2][]>(times1035,idx10C7);
        real s10CB#1 = TensorIndex<tensor[2],[0]>(interval10C9);
        real e10CD#1 = TensorIndex<tensor[2],[1]>(interval10C9);
        femData:MeshCell cc10CF#2 = Subscript<femData:MeshCell[]>(0cell_a1029,itter10C5);
        int _t10D1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc10CF);
        femData:FuncCell _t10D3#1 = LoadFem<femData:FuncCell>(c102B,_t10D1);
        tensor[2][0] _t10D5#1 = <tensor[2][0]>{};
        tensor[2][] _t10D7#1 = MkDynamic<tensor[2],0>(_t10D5);
        tensor[2,3][0] _t10D9#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t10DB#1 = MkDynamic<tensor[2,3],0>(_t10D9);
        femData:MeshCell[0] _t10DD#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t10DF#1 = MkDynamic<femData:MeshCell,0>(_t10DD);
        self.rayU = rayU1047;
        self.rayV = rayV105B;
        self.UV = UV106B;
        self.rayOrig = rayOrig1091;
        self.offset = offset10BB;
        self.len = len10C3;
        self.itter = itter10C5;
        self.idx = idx10C7;
        self.interval = interval10C9;
        self.s = s10CB;
        self.e = e10CD;
        self.cc = cc10CF;
        self.fc = _t10D3;
        self.intervals = _t10D7;
        self.sints = _t10DB;
        self.newCells = _t10DF;
        self.count = itter10C5;
        self.totalCount = itter10C5;
        self.ui = ui1012;
        self.vi = vi1013;
        return
    end state init
    method start
        ENTRY10F6:  preds = []
          femData:MeshCell[] 0cell_a10F7#1 = globals.0cell_a0F37;
          femData:FemFunc c10F9#1 = globals.c0F38;
          bool debug10FB#1 = globals.debug0F30;
          int debugU10FD#1 = globals.debugU0F31;
          int debugV10FF#1 = globals.debugV0F32;
          int[] cells1101#1 = globals.cells0F36;
          int len1103#1 = self.len;
          int idx1105#1 = self.idx;
          int ui1107#1 = self.ui;
          int vi1109#1 = self.vi;
          if debug10FB then goto ASSIGN110D else goto JOIN1117
        ASSIGN110D:  preds = [COND110B]
          bool _t110C#1 = NEQ<int>(ui1107,debugU10FD);
          if _t110C then goto ASSIGN1110 else goto ASSIGN112A
        ASSIGN1110:  preds = [COND110E]
          bool _t110F#1 = true;
          goto JOIN1113
        JOIN1113:  preds = [ASSIGN1110,ASSIGN112A]
          bool _t1111#1 = phi(_t110F,_t1112)
          if _t1111 then goto STABILIZE1115 else goto JOIN1116
        STABILIZE1115:  preds = [COND1114]
          stabilize
          goto JOIN1116
        JOIN1116:  preds = [*STABILIZE1115,COND1114]
          goto JOIN1117
        JOIN1117:  preds = [JOIN1116,COND110B]
          int _t1118#1 = 0;
          bool _t111A#1 = EQ<int>(len1103,_t1118);
          if _t111A then goto STABILIZE111D else goto JOIN111E
        STABILIZE111D:  preds = [COND111C]
          stabilize
          goto JOIN111E
        JOIN111E:  preds = [*STABILIZE111D,COND111C]
          int _t111F#1 = Subscript<int[]>(cells1101,idx1105);
          femData:MeshCell cc1121#2 = Subscript<femData:MeshCell[]>(0cell_a10F7,_t111F);
          int _t1123#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1121);
          femData:FuncCell _t1125#1 = LoadFem<femData:FuncCell>(c10F9,_t1123);
          self.cc = cc1121;
          self.fc = _t1125;
          active
        ASSIGN112A:  preds = [COND110E]
          bool _t1112#1 = NEQ<int>(vi1109,debugV10FF);
          goto JOIN1113
    end start
    method update
        ENTRY112B:  preds = []
          femData:MeshCell[] 0cell_a112C#1 = globals.0cell_a0F37;
          femData:FemFunc c112E#1 = globals.c0F38;
          tensor[2][] times1130#1 = globals.times0F35;
          int[] cells1132#1 = globals.cells0F36;
          tensor[3] rayVec1134#5 = globals.rayVec0F3D;
          tensor[3] rayOrig1136#2 = self.rayOrig;
          int offset1138#1 = self.offset;
          int len113A#2 = self.len;
          int itter113C#2 = self.itter;
          tensor[2] interval113E#1 = self.interval;
          real s1140#5 = self.s;
          real e1142#3 = self.e;
          femData:MeshCell cc1144#6 = self.cc;
          femData:FuncCell fc1146#3 = self.fc;
          tensor[2][] intervals1148#2 = self.intervals;
          tensor[2,3][] sints114A#2 = self.sints;
          femData:MeshCell[] newCells114C#2 = self.newCells;
          int count114E#3 = self.count;
          int totalCount1150#2 = self.totalCount;
          int ui1152#3 = self.ui;
          int vi1154#3 = self.vi;
          int _t1156#8 = 1;
          bool _t1158#1 = LT<int>(len113A,_t1156);
          if _t1158 then goto STABILIZE115B else goto JOIN115C
        STABILIZE115B:  preds = [COND115A]
          stabilize
          goto JOIN115C
        JOIN115C:  preds = [*STABILIZE115B,COND115A]
          tensor[3] op1_e3_l_3115E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s1140,rayVec1134);
          tensor[3] rayStart115D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_3115E);
          real _t1161#1 = TensorIndex<tensor[3],[0]>(rayStart115D);
          real _t1163#1 = TensorIndex<tensor[3],[1]>(rayStart115D);
          tensor[2] project1165#8 = <tensor[2]>[_t1161,_t1163];
          femData:FemFunc _t1167#6 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1146);
          femData:Space _t1169#5 = ExtractFem<femData:Space,femData:FemFunc>(_t1167);
          int _t116B#5 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1146);
          femData:Mesh _t116D#12 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1144);
          int _t116F#9 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1144);
          real _t1171#2 = TensorIndex<tensor[3],[2]>(rayStart115D);
          femData:MeshPos callNewtonPos126A#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos126B#17 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos126A);
          int[6] femIndicies126D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs126E#5 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies126D);
          tensor[6] basisResult126F#1 = EvaluateBasis<BasisArray(6)>(refPos126B);
          real compositionl1175#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult126F,refPos126B);
          real f01173#5 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1175);
          real _t1279#1 = TensorIndex<tensor[3],[0]>(rayVec1134);
          real _t127B#1 = TensorIndex<tensor[3],[1]>(rayVec1134);
          tensor[2] _t127D#2 = <tensor[2]>[_t1279,_t127B];
          tensor[2,6] basisResult128F#1 = EvaluateBasis<BasisArray(2,6)>(refPos126B);
          tensor[2] compositionl1281#3 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult128F,refPos126B);
          int[3] femIndicies1291#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs1292#6 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies1291);
          tensor[2,3] basisResult1293#3 = EvaluateBasis<BasisArray(2,3)>(refPos126B);
          tensor[2,2] probe_l_81282#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2,2] op1_e3_l_91283#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_81282);
          tensor[2] probe_l_101284#2 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] probe_l_111285#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] op1_e3_l_121286#2 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_111285);
          tensor[2,2] op1_e3_l_131287#2 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_91283);
          real op1_e3_l_141288#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_101284,op1_e3_l_121286);
          tensor[2,2] op1_e3_l_151289#4 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_131287,op1_e3_l_141288);
          tensor[2] _t127F#2 = λ(T0[2],T1[2 2])<Σ(i104=0..1)<((T0_{i104} * T1_{i104,i0}))>(i104=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real _t12B1#2 = TensorIndex<tensor[3],[2]>(rayVec1134);
          int _t12B3#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1144);
          real _t12B5#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t116D,_t12B3);
          tensor[2] op1_e3_l_1912C2#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real op1_e3_l_2012C3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t127D,op1_e3_l_1912C2);
          real op1_e3_l_2112C4#1 = λ(T0[],T1[])<(T1) - (T0)> (_t12B1,op1_e3_l_2012C3);
          real op1_e3_l_2212C5#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2112C4);
          real _t12B7#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t12B5,op1_e3_l_2212C5);
          real _t12F1#1 = λ(T0[],T1[])<(T0) - (T1)> (e1142,s1140);
          real gradEps12F3#6 = Min<real>(_t12B7,_t12F1);
          string _t12F5#1 = "hmmmm:";
          string _t12F7#18 = "\n";
          Print<[string,tensor[2],string]>(_t12F5,_t127F,_t12F7);
          string _t12FA#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t12FA,femDofs126E,_t12F7);
          tensor[2] op1_e3_l_31302#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps12F3,_t127D);
          tensor[2] _t1301#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project1165,op1_e3_l_31302);
          femData:MeshPos callNewtonPos130A#1 = _0A3A_msh_newtonInverse1176 (_t1301,_t116F,_t116D);
          tensor[2] refPos130B#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos130A);
          tensor[6] basisResult130F#1 = EvaluateBasis<BasisArray(6)>(refPos130B);
          real compositionl1307#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos130B,femDofs126E,basisResult130F,refPos130B);
          real op1_e3_l_111308#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1307);
          real op1_e3_l_121309#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps12F3,_t12B1);
          real f11305#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_111308,op1_e3_l_121309);
          string _t131B#1 = "=========================\n";
          Print<[string]>(_t131B);
          string _t131E#1 = "Ui/Vi:";
          string _t1320#2 = "/";
          Print<[string,int,string,int,string]>(_t131E,ui1152,_t1320,vi1154,_t12F7);
          string _t1323#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1323,cc1144,_t12F7);
          string _t1326#1 = "hess:";
          tensor[2,2,6] basisResult1353#1 = EvaluateBasis<BasisArray(2,2,6)>(refPos126B);
          tensor[2,2] compositionl1331#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult1353,refPos126B);
          tensor[2,2] op1_e3_l_241333#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl1331,op1_e3_l_151289);
          tensor[2,2,3] basisResult1357#3 = EvaluateBasis<BasisArray(2,2,3)>(refPos126B);
          tensor[2,2,2] probe_l_261336#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i5=0..2)<((T3_{i5,i0} * T4_{i1,i2,i5}))>(i5=0..2)>_{2 2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2,2] op1_e3_l_271337#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i3,i1,i2}))>(i3=0..1)>_{2 2 2} (probe_l_261336);
          tensor[2,2,2] op1_e3_l_311338#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i1,i3,i2}))>(i3=0..1)>_{2 2 2} (op1_e3_l_271337);
          tensor[2,2] probe_l_361339#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'0',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] probe_l_39133A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'1',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] op1_e3_l_40133B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii0,ii2} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_39133A);
          tensor[2] op1_e3_l_41133C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T1_{i1} * T0_{i1,i0}))>(i1=0..1)>_{2} (probe_l_361339,op1_e3_l_121286);
          tensor[2] op1_e3_l_42133D#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (probe_l_101284,op1_e3_l_40133B);
          tensor[2] op1_e3_l_44133E#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_41133C,op1_e3_l_42133D);
          tensor[2,2,2] op1_e3_l_45133F#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2} * T1)>_{2 2 2} (op1_e3_l_311338,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_461340#1 = λ(T0[2 2],T1[2])<(T0_{i0,i1} * T1_{i2})>_{2 2 2} (op1_e3_l_131287,op1_e3_l_44133E);
          tensor[2,2,2] op1_e3_l_551341#1 = λ(T0[2 2 2],T1[2 2 2])<(T0_{i0,i1,i2}) - (T1_{i0,i1,i2})>_{2 2 2} (op1_e3_l_45133F,op1_e3_l_461340);
          real op1_e3_l_561342#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_141288,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_571343#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2}) / ( T1)>_{2 2 2} (op1_e3_l_551341,op1_e3_l_561342);
          tensor[2,2] op1_e3_l_581344#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_151289,op1_e3_l_241333);
          tensor[2,2] op1_e3_l_591345#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl1281,op1_e3_l_571343);
          tensor[2,2] _t1328#3 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_581344,op1_e3_l_591345);
          string _t1390#1 = "norm:";
          real op1_e3_l_11513B9#1 = λ(T0[2 2],T1[2 2])<Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T1_{i0,i1}))>(i0=0..1)(i1=0..1)> (_t1328,_t1328);
          real _t1392#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11513B9);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1326,_t1328,_t12F7,_t1390,_t1392,_t12F7);
          string _t1417#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t1417,_t127F,_t12F7);
          string _t141A#1 = "vals:";
          tensor[2] _t141C#2 = <tensor[2]>[f01173,f11305];
          Print<[string,tensor[2],string]>(_t141A,_t141C,_t12F7);
          real _t141F#6 = 0.e0;
          bool _t1421#2 = GT<real>(f01173,_t141F);
          if _t1421 then goto JOIN1426 else goto ASSIGN14FA
        JOIN1426:  preds = [COND1423,JOIN14FF]
          int _t1424#1 = phi(_t1156,_t1425)
          bool _t1427#2 = GT<real>(f11305,_t141F);
          if _t1427 then goto JOIN142C else goto ASSIGN14F2
        JOIN142C:  preds = [COND1429,JOIN14F7]
          int _t142A#1 = phi(_t1156,_t142B)
          int _t142D#1 = IMul(_t1424,_t142A);
          int _t142F#5 = 0;
          bool _t1431#1 = GT<int>(_t142D,_t142F);
          bool _t1433#1 = BNot(_t1431);
          if _t1433 then goto COND1436 else goto ASSIGN14CD
        COND1436:  preds = [COND1435]
          if _t1421 then goto JOIN1439 else goto ASSIGN14C7
        JOIN1439:  preds = [COND1436,JOIN14CB]
          int _t1437#1 = phi(_t1156,_t1438)
          if _t1427 then goto JOIN143D else goto ASSIGN14C1
        JOIN143D:  preds = [COND143A,JOIN14C5]
          int _t143B#1 = phi(_t1156,_t143C)
          int _t143E#1 = IMul(_t1437,_t143B);
          bool _t1440#1 = EQ<int>(_t143E,_t142F);
          if _t1440 then goto ASSIGN1444 else goto JOIN1446
        ASSIGN1444:  preds = [COND1442]
          string _t1443#1 = "Warn: 0 update\n";
          Print<[string]>(_t1443);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN1445,COND1442]
          string _t1447#1 = "update with interval:";
          Print<[string,real,string]>(_t1447,gradEps12F3,_t12F7);
          string _t144A#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t144A,ui1152,_t1320,vi1154,_t12F7);
          string _t144D#1 = "Count:";
          Print<[string,int,string]>(_t144D,count114E,_t12F7);
          int count1450#1 = IAdd(count114E,_t1156);
          int totalCount1452#1 = IAdd(totalCount1150,_t1156);
          string _t1454#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1454,_t141C,_t12F7);
          string _t1457#1 = "New interval:";
          real _t1459#3 = λ(T0[],T1[])<(T0 + T1)> (s1140,gradEps12F3);
          tensor[2] _t145B#2 = <tensor[2]>[s1140,_t1459];
          Print<[string,tensor[2],string]>(_t1457,_t145B,_t12F7);
          tensor[2][] intervals145E#1 = Append<tensor[2]>(intervals1148,_t145B);
          tensor[3] op1_e3_l_51462#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1134,_t1459);
          tensor[3] _t1460#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_51462);
          tensor[2,3] _t1466#1 = <tensor[2,3]>[rayStart115D,_t1460];
          tensor[2,3][] sints1468#1 = Append<tensor[2,3]>(sints114A,_t1466);
          femData:MeshCell[] newCells146A#1 = Append<femData:MeshCell>(newCells114C,cc1144);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN146B,ASSIGN14F0]
          int totalCount146C#3 = phi(totalCount1452,totalCount1150)
          int count146D#2 = phi(count1450,count114E)
          femData:MeshCell[] newCells146E#3 = phi(newCells146A,newCells114C)
          tensor[2,3][] sints146F#2 = phi(sints1468,sints114A)
          tensor[2][] intervals1470#3 = phi(intervals145E,intervals1148)
          real s1471#3 = phi(_t1459,s1472)
          bool _t1474#1 = GTE<real>(s1471,e1142);
          if _t1474 then goto ASSIGN1478 else goto JOIN14A5
        ASSIGN1478:  preds = [COND1476]
          int itter1477#4 = IAdd(itter113C,_t1156);
          bool _t1479#1 = GTE<int>(itter1477,len113A);
          if _t1479 then goto ASSIGN147D else goto ASSIGN14B3
        ASSIGN147D:  preds = [COND147B]
          string _t147C#1 = "TotalCount:";
          Print<[string,int,string]>(_t147C,totalCount146C,_t12F7);
          string _t147F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t147F,intervals1470,_t12F7);
          string _t1482#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t1482,newCells146E,_t12F7);
          string _t1485#1 = ";";
          string _t1487#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui1152,_t1485,vi1154,_t1487);
          self.itter = itter1477;
          self.s = s1471;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count146D;
          self.totalCount = totalCount146C;
          stabilize
          goto JOIN149D
        JOIN149D:  preds = [*STABILIZE1491,ASSIGN14BF]
          int count1492#1 = phi(_t142F)
          femData:FuncCell fc1493#1 = phi(_t1494)
          femData:MeshCell cc1495#1 = phi(cc1496)
          real e1497#1 = phi(e1498)
          real s1499#1 = phi(s149A)
          tensor[2] interval149B#1 = phi(interval149C)
          goto JOIN14A5
        JOIN14A5:  preds = [JOIN149D,COND1476]
          int count149E#1 = phi(count1492,count146D)
          femData:FuncCell fc149F#1 = phi(fc1493,fc1146)
          femData:MeshCell cc14A0#1 = phi(cc1495,cc1144)
          real e14A1#1 = phi(e1497,e1142)
          real s14A2#1 = phi(s1499,s1471)
          tensor[2] interval14A3#1 = phi(interval149B,interval113E)
          int itter14A4#1 = phi(itter1477,itter113C)
          self.itter = itter14A4;
          self.interval = interval14A3;
          self.s = s14A2;
          self.e = e14A1;
          self.cc = cc14A0;
          self.fc = fc149F;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count149E;
          self.totalCount = totalCount146C;
          active
        ASSIGN14B3:  preds = [COND147B]
          string _t14B2#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t14B2);
          int _t14B5#2 = IAdd(offset1138,itter1477);
          tensor[2] interval149C#3 = Subscript<tensor[2][]>(times1130,_t14B5);
          int _t14B8#1 = Subscript<int[]>(cells1132,_t14B5);
          femData:MeshCell cc1496#2 = Subscript<femData:MeshCell[]>(0cell_a112C,_t14B8);
          real s149A#1 = TensorIndex<tensor[2],[0]>(interval149C);
          real e1498#1 = TensorIndex<tensor[2],[1]>(interval149C);
          int _t14BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1496);
          femData:FuncCell _t1494#1 = LoadFem<femData:FuncCell>(c112E,_t14BD);
          goto JOIN149D
        ASSIGN14C1:  preds = [COND143A]
          bool _t14C0#1 = LT<real>(f11305,_t141F);
          if _t14C0 then goto ASSIGN14C4 else goto JOIN14C5
        ASSIGN14C4:  preds = [COND14C2]
          int _t14C3#1 = -1;
          goto JOIN14C5
        JOIN14C5:  preds = [ASSIGN14C4,COND14C2]
          int _t143C#1 = phi(_t14C3,_t142F)
          goto JOIN143D
        ASSIGN14C7:  preds = [COND1436]
          bool _t14C6#1 = LT<real>(f01173,_t141F);
          if _t14C6 then goto ASSIGN14CA else goto JOIN14CB
        ASSIGN14CA:  preds = [COND14C8]
          int _t14C9#1 = -1;
          goto JOIN14CB
        JOIN14CB:  preds = [ASSIGN14CA,COND14C8]
          int _t1438#1 = phi(_t14C9,_t142F)
          goto JOIN1439
        ASSIGN14CD:  preds = [COND1435]
          real _t14CC#1 = 0.2e1;
          real _t14CE#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t116D,_t12B3);
          real op1_e3_l_1214D4#1 = λ(T0[])<Abs(T0)> (f01173);
          real op1_e3_l_1314D5#1 = λ(T0[],T1[])<(T0 * T1)> (_t14CC,_t14CE);
          real _t14D0#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1214D4,op1_e3_l_1314D5);
          real epsUpdate14E8#2 = Max<real>(gradEps12F3,_t14D0);
          string _t14EA#1 = "update L:";
          Print<[string,real,string]>(_t14EA,epsUpdate14E8,_t12F7);
          string _t14ED#1 = "update G:";
          Print<[string,real,string]>(_t14ED,gradEps12F3,_t12F7);
          real s1472#1 = λ(T0[],T1[])<(T0 + T1)> (s1140,epsUpdate14E8);
          goto JOIN1473
        ASSIGN14F2:  preds = [COND1429]
          bool _t14F1#1 = LT<real>(f11305,_t141F);
          if _t14F1 then goto ASSIGN14F5 else goto ASSIGN14F8
        ASSIGN14F5:  preds = [COND14F3]
          int _t14F4#1 = -1;
          goto JOIN14F7
        JOIN14F7:  preds = [ASSIGN14F5,ASSIGN14F8]
          int _t142B#1 = phi(_t14F4,_t14F6)
          goto JOIN142C
        ASSIGN14F8:  preds = [COND14F3]
          int _t14F6#1 = 0;
          goto JOIN14F7
        ASSIGN14FA:  preds = [COND1423]
          bool _t14F9#1 = LT<real>(f01173,_t141F);
          if _t14F9 then goto ASSIGN14FD else goto ASSIGN1500
        ASSIGN14FD:  preds = [COND14FB]
          int _t14FC#1 = -1;
          goto JOIN14FF
        JOIN14FF:  preds = [ASSIGN14FD,ASSIGN1500]
          int _t1425#1 = phi(_t14FC,_t14FE)
          goto JOIN1426
        ASSIGN1500:  preds = [COND14FB]
          int _t14FE#1 = 0;
          goto JOIN14FF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1501:  preds = []
      int iresU1502#1 = globals.iresU0F27;
      int iresV1504#1 = globals.iresV0F28;
      int _t1506#2 = 0;
      int _t1508#2 = 1;
      int _t150A#1 = ISub(iresU1502,_t1508);
      int[] _t150C#1 = Range(_t1506,_t150A);
    FOREACH150F:  preds = [ASSIGN150D,NEXT1518]
      foreach (vi150E in _t150C) on exit goto RETURN1519
      int _t1510#1 = ISub(iresV1504,_t1508);
      int[] _t1512#1 = Range(_t1506,_t1510);
    FOREACH1515:  preds = [ASSIGN1513,NEXT1517]
      foreach (ui1514 in _t1512) on exit goto NEXT1518
      new ray(ui1514,vi150E);
      goto FOREACH1515
    NEXT1518:  preds = [FOREACH1515]
      goto FOREACH150F
    RETURN1519:  preds = [FOREACH150F]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0F1E (a) = <no-default>
  input 0b0450_intermedateGlobal0F1F (b) = <no-default>
  input 0c0452_intermedateGlobal0F20 (c) = <no-default>
  input isoval0F21 (isoval) = <default>
  input thick0F22 (thick) = <default>
  input camEye0F23 (camEye) = <default>
  input camAt0F24 (camAt) = <default>
  input camUp0F25 (camUp) = <default>
  input camFOV0F26 (camFOV) = <default>
  input iresU0F27 (iresU) = <default>
  input iresV0F28 (iresV) = <default>
  input camNear0F29 (camNear) = <default>
  input camFar0F2A (camFar) = <default>
  input refStep0F2B (refStep) = <default>
  input rayStep0F2C (rayStep) = <default>
  input lightVsp0F2D (lightVsp) = <default>
  input phongKa0F2E (phongKa) = <default>
  input phongKd0F2F (phongKd) = <default>
  input debug0F30 (debug) = <default>
  input debugU0F31 (debugU) = <default>
  input debugV0F32 (debugV) = <default>
  input eps0F33 (eps) = <default>
  input indecies0F34 (indecies) = <no-default>
  input times0F35 (times) = <no-default>
  input cells0F36 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0F37
  global femData:FemFunc c0F38
  global tensor[3] camU0F39
  global tensor[3] camV0F3A
  global real camVmax0F3B
  global real camUmax0F3C
  global tensor[3] rayVec0F3D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1176 (tensor[2] pos1177#3, int cellInt1178#7, femData:Mesh mesh1179#10) {
    ENTRY117A:  preds = []
      real _t117B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn117D#8 = <tensor[2]>[_t117B,_t117B];
      int _t117F#1 = 0;
      int _t1181#1 = 16;
      int[] _t1183#1 = Range(_t117F,_t1181);
    FOREACH1186:  preds = [ASSIGN1184,NEXT1263]
      foreach (itter1185 in _t1183) on exit goto ASSIGN1268
        tensor[2] xn1188#6 = phi(xn117D,xn1187)
      int[3] femIndicies1195#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh1179,cellInt1178);
      tensor[3,2] femDofs1196#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh1179,femIndicies1195);
      tensor[2,3] basisResult1197#3 = EvaluateBasis<BasisArray(2,3)>(xn117D);
      tensor[2,2] probe_l_101189#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2,2] op1_e3_l_11118A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_101189);
      tensor[2] probe_l_12118B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] probe_l_13118C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt1178,mesh1179,xn117D,femDofs1196,basisResult1197,xn117D);
      tensor[2] op1_e3_l_14118D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_13118C);
      tensor[2,2] op1_e3_l_15118E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_11118A);
      real op1_e3_l_16118F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_12118B,op1_e3_l_14118D);
      tensor[3] basisResult119D#2 = EvaluateBasis<BasisArray(3)>(xn1188);
      tensor[2] probe_l_171190#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn1188,cellInt1178,mesh1179,femDofs1196,basisResult119D,xn1188);
      tensor[2,2] op1_e3_l_181191#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_15118E,op1_e3_l_16118F);
      tensor[2] op1_e3_l_191192#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_171190);
      tensor[2] op1_e3_l_201193#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_191192);
      tensor[2] xn1187#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn1188,op1_e3_l_201193);
      real _t11B4#2 = 0.1e-7;
      real _t11B6#1 = λ(T0[],T1[])<(T0 * T1)> (_t11B4,_t11B4);
      tensor[2] probe_l_2511C0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt1178,mesh1179,xn1188,femDofs1196,basisResult119D,xn1188);
      tensor[2] op1_e3_l_2711C2#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos1177,probe_l_2511C0);
      tensor[2] op1_e3_l_3811C3#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_181191,op1_e3_l_2711C2);
      real _t11B8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3811C3,op1_e3_l_3811C3);
      bool _t11E4#1 = GTE<real>(_t11B6,_t11B8);
      if _t11E4 then goto ASSIGN11E8 else goto JOIN1262
    ASSIGN11E8:  preds = [COND11E6]
      real _t11E7#3 = 0.1e1;
      real _t11E9#3 = 0.1e-8;
      real _t11EB#1 = λ(T0[],T1[])<(T0 + T1)> (_t11E7,_t11E9);
      tensor[2] _t11ED#1 = <tensor[2]>[_t11E7,_t11E7];
      real _t11EF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t11ED,xn1187);
      bool _t121D#1 = GT<real>(_t11EB,_t11EF);
      tensor[2] _t121F#1 = <tensor[2]>[_t11E9,_t11E9];
      tensor[2] _t1221#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t121F,xn1187);
      real _t124F#1 = TensorIndex<tensor[2],[0]>(_t1221);
      real _t1251#2 = -0.e0;
      bool _t1253#1 = GT<real>(_t124F,_t1251);
      real _t1255#1 = TensorIndex<tensor[2],[1]>(_t1221);
      bool _t1257#1 = GT<real>(_t1255,_t1251);
      bool _t1259#1 = BAnd(_t1253,_t1257);
      bool _t125B#1 = BAnd(_t121D,_t1259);
      if _t125B then goto ASSIGN125F else goto ASSIGN1265
    ASSIGN125F:  preds = [COND125D]
      femData:MeshPos _t125E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1179,cellInt1178,xn1187,pos1177);
      return _t125E
      goto JOIN1261
    JOIN1261:  preds = [*RETURN(_t125E)1260,*RETURN(_t1264)1266]
      goto JOIN1262
    JOIN1262:  preds = [*JOIN1261,COND11E6]
      goto FOREACH1186
    ASSIGN1265:  preds = [COND125D]
      femData:MeshPos _t1264#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1264
      goto JOIN1261
    ASSIGN1268:  preds = [FOREACH1186]
      femData:MeshPos _t1267#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1179);
      return _t1267
}
## input initialization
  ENTRY0F3E:  preds = []
    real isoval0F3F#1 = 0.2e0;
    globals.isoval0F21 = isoval0F3F;
    real thick0F42#1 = 0.7e-1;
    globals.thick0F22 = thick0F42;
    real _t0F45#1 = -0.5e0;
    real _t0F47#5 = 0.5e0;
    tensor[3] camEye0F49#1 = <tensor[3]>[_t0F45,_t0F47,_t0F47];
    globals.camEye0F23 = camEye0F49;
    tensor[3] camAt0F4C#1 = <tensor[3]>[_t0F47,_t0F47,_t0F47];
    globals.camAt0F24 = camAt0F4C;
    real _t0F4F#2 = 0.e0;
    real _t0F51#2 = 0.1e1;
    tensor[3] camUp0F53#2 = <tensor[3]>[_t0F4F,_t0F4F,_t0F51];
    globals.camUp0F25 = camUp0F53;
    real camFOV0F56#1 = 0.137e2;
    globals.camFOV0F26 = camFOV0F56;
    int iresU0F59#2 = 10;
    globals.iresU0F27 = iresU0F59;
    globals.iresV0F28 = iresU0F59;
    real camNear0F5D#1 = -0.2e1;
    globals.camNear0F29 = camNear0F5D;
    real camFar0F60#1 = 0.5e1;
    globals.camFar0F2A = camFar0F60;
    globals.refStep0F2B = _t0F51;
    real rayStep0F64#1 = 0.1e-1;
    globals.rayStep0F2C = rayStep0F64;
    globals.lightVsp0F2D = camUp0F53;
    real phongKa0F68#1 = 0.1e0;
    globals.phongKa0F2E = phongKa0F68;
    real phongKd0F6B#1 = 0.9e0;
    globals.phongKd0F2F = phongKd0F6B;
    bool debug0F6E#1 = false;
    globals.debug0F30 = debug0F6E;
    int debugU0F71#1 = 8;
    globals.debugU0F31 = debugU0F71;
    int debugV0F74#1 = 2;
    globals.debugV0F32 = debugV0F74;
    real eps0F77#1 = 0.1e-8;
    globals.eps0F33 = eps0F77;
    return
## global-variable initialization
  ENTRY0F7B:  preds = []
    femData:Mesh a0F7C#3 = globals.a0F1E;
    femData:Space 0b0450_intermedateGlobal0F7E#1 = globals.0b0450_intermedateGlobal0F1F;
    femData:FemFunc 0c0452_intermedateGlobal0F80#1 = globals.0c0452_intermedateGlobal0F20;
    tensor[3] camEye0F82#1 = globals.camEye0F23;
    tensor[3] camAt0F84#1 = globals.camAt0F24;
    tensor[3] camUp0F86#1 = globals.camUp0F25;
    real camFOV0F88#1 = globals.camFOV0F26;
    int iresU0F8A#1 = globals.iresU0F27;
    int iresV0F8C#1 = globals.iresV0F28;
    int _t0F8E#1 = 0;
    int _t0F90#1 = 1;
    int _t0F92#1 = ExtractFemItem<int,NumCell(Mesh)>(a0F7C);
    int _t0F94#1 = ISub(_t0F92,_t0F90);
    int[] _t0F96#1 = Range(_t0F8E,_t0F94);
    femData:MeshCell[] _t0F98#1 = <femData:MeshCell[]>{};
  FOREACH0F9B:  preds = [ASSIGN0F99,NEXT0FA1]
    foreach (_t0F9A in _t0F96) on exit goto GASSIGN0FA2
      femData:MeshCell[] _t0F9F#2 = phi(_t0F98,_t0F9E)
    femData:MeshCell _t0F9C#1 = LoadFem<femData:MeshCell>(a0F7C,_t0F9A);
    femData:MeshCell[] _t0F9E#1 = Append<femData:MeshCell>(_t0F9F,_t0F9C);
    goto FOREACH0F9B
  GASSIGN0FA2:  preds = [FOREACH0F9B]
    globals.0cell_a0F37 = _t0F9F;
    femData:Space b0FA3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal0F7E,a0F7C);
    femData:FemFunc c0FA5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal0F80,b0FA3);
    globals.c0F38 = c0FA5;
    tensor[3] op1_e3_l_40FA9#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0F84,camEye0F82);
    real op1_e3_l_60FAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40FA9,op1_e3_l_40FA9);
    real op1_e3_l_70FAB#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60FAA);
    real op1_e3_l_90FAC#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70FAB);
    tensor[3] camN0FA8#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40FA9,op1_e3_l_90FAC);
    tensor[3,3] op1_e3_l_150FB6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0F86);
    tensor[3] op1_e3_l_170FB8#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40FA9,op1_e3_l_150FB6);
    real op1_e3_l_340FB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170FB8,op1_e3_l_170FB8);
    real op1_e3_l_350FBA#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90FAC,op1_e3_l_90FAC,op1_e3_l_340FB9);
    real op1_e3_l_360FBB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350FBA);
    tensor[3] op1_e3_l_370FBC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_170FB8);
    real op1_e3_l_380FBD#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360FBB);
    tensor[3] camU0FB2#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370FBC,op1_e3_l_380FBD);
    globals.camU0F39 = camU0FB2;
    tensor[3,3] op1_e3_l_450FD5#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40FA9);
    tensor[3] op1_e3_l_470FD6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170FB8,op1_e3_l_450FD5);
    tensor[3] op1_e3_l_500FD8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90FAC,op1_e3_l_470FD6);
    tensor[3] camV0FCB#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380FBD,op1_e3_l_90FAC,op1_e3_l_500FD8);
    globals.camV0F3A = camV0FCB;
    real _t0FE8#1 = 0.314159265358979323846264338327950288e1;
    real _t0FEA#1 = 0.36e3;
    real op1_e3_l_50FED#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0F88,_t0FE8);
    real op1_e3_l_60FEE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FEA,op1_e3_l_50FED);
    real op1_e3_l_100FF1#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60FEE);
    real camVmax0FEC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100FF1,op1_e3_l_70FAB);
    globals.camVmax0F3B = camVmax0FEC;
    real _t0FFB#1 = IntToReal(iresU0F8A);
    real _t0FFD#1 = IntToReal(iresV0F8C);
    real op1_e3_l_141006#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0FFB,op1_e3_l_100FF1,op1_e3_l_70FAB);
    real camUmax0FFF#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0FFD,op1_e3_l_141006);
    globals.camUmax0F3C = camUmax0FFF;
    globals.rayVec0F3D = camN0FA8;
    return
## strand
  strand ray (int ui1012#3, int vi1013#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY1028:  preds = []
        femData:MeshCell[] 0cell_a1029#1 = globals.0cell_a0F37;
        femData:FemFunc c102B#1 = globals.c0F38;
        tensor[3] camEye102D#1 = globals.camEye0F23;
        int iresU102F#2 = globals.iresU0F27;
        int iresV1031#3 = globals.iresV0F28;
        int[] indecies1033#2 = globals.indecies0F34;
        tensor[2][] times1035#1 = globals.times0F35;
        tensor[3] camU1037#1 = globals.camU0F39;
        tensor[3] camV1039#1 = globals.camV0F3A;
        real camVmax103B#2 = globals.camVmax0F3B;
        real camUmax103D#2 = globals.camUmax0F3C;
        real _t103F#5 = -0.5e0;
        real _t1041#1 = IntToReal(ui1012);
        real _t1043#1 = IntToReal(iresU102F);
        real _t1045#3 = 0.5e0;
        real op1_e3_l_61048#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1043,_t1045);
        real op1_e3_l_71049#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1041);
        real op1_e3_l_8104A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_61048);
        real op1_e3_l_9104B#2 = λ(T0[])<Neg(T0)> (camUmax103D);
        real op1_e3_l_10104C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71049,op1_e3_l_8104A);
        real op1_e3_l_11104D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax103D,op1_e3_l_9104B);
        real op1_e3_l_13104E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10104C,op1_e3_l_11104D);
        real rayU1047#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9104B,op1_e3_l_13104E);
        real _t1057#1 = IntToReal(vi1013);
        real _t1059#2 = IntToReal(iresV1031);
        real op1_e3_l_6105C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1059,_t1045);
        real op1_e3_l_7105D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,_t1057);
        real op1_e3_l_8105E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_6105C);
        real op1_e3_l_9105F#3 = λ(T0[])<Neg(T0)> (camVmax103B);
        real op1_e3_l_101060#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_8105E);
        real op1_e3_l_111061#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax103B,op1_e3_l_9105F);
        real op1_e3_l_131062#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101060,op1_e3_l_111061);
        real rayV105B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_131062);
        real op1_e3_l_231074#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1045,_t1059);
        real op1_e3_l_251076#1 = λ(T0[],T1[])<(T1) - (T0)> (_t103F,op1_e3_l_231074);
        real op1_e3_l_271078#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7105D,op1_e3_l_251076);
        real op1_e3_l_30107A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_271078,op1_e3_l_111061);
        real op1_e3_l_31107B#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9105F,op1_e3_l_30107A);
        tensor[3] op1_e3_l_32107C#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1037,rayU1047);
        tensor[3] op1_e3_l_33107D#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1039,op1_e3_l_31107B);
        tensor[3] UV106B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_32107C,op1_e3_l_33107D);
        tensor[3] rayOrig1091#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye102D,op1_e3_l_32107C,op1_e3_l_33107D);
        int _t10B7#2 = IMul(ui1012,iresV1031);
        int _t10B9#1 = IAdd(_t10B7,vi1013);
        int offset10BB#2 = Subscript<int[]>(indecies1033,_t10B9);
        int _t10BD#1 = IMul(iresU102F,iresV1031);
        int _t10BF#1 = IAdd(_t10BD,_t10B7);
        int _t10C1#1 = IAdd(_t10BF,vi1013);
        int len10C3#1 = Subscript<int[]>(indecies1033,_t10C1);
        int itter10C5#4 = 0;
        int idx10C7#2 = offset10BB;
        tensor[2] interval10C9#3 = Subscript<tensor[2][]>(times1035,idx10C7);
        real s10CB#1 = TensorIndex<tensor[2],[0]>(interval10C9);
        real e10CD#1 = TensorIndex<tensor[2],[1]>(interval10C9);
        femData:MeshCell cc10CF#2 = Subscript<femData:MeshCell[]>(0cell_a1029,itter10C5);
        int _t10D1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc10CF);
        femData:FuncCell _t10D3#1 = LoadFem<femData:FuncCell>(c102B,_t10D1);
        tensor[2][0] _t10D5#1 = <tensor[2][0]>{};
        tensor[2][] _t10D7#1 = MkDynamic<tensor[2],0>(_t10D5);
        tensor[2,3][0] _t10D9#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t10DB#1 = MkDynamic<tensor[2,3],0>(_t10D9);
        femData:MeshCell[0] _t10DD#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t10DF#1 = MkDynamic<femData:MeshCell,0>(_t10DD);
        self.rayU = rayU1047;
        self.rayV = rayV105B;
        self.UV = UV106B;
        self.rayOrig = rayOrig1091;
        self.offset = offset10BB;
        self.len = len10C3;
        self.itter = itter10C5;
        self.idx = idx10C7;
        self.interval = interval10C9;
        self.s = s10CB;
        self.e = e10CD;
        self.cc = cc10CF;
        self.fc = _t10D3;
        self.intervals = _t10D7;
        self.sints = _t10DB;
        self.newCells = _t10DF;
        self.count = itter10C5;
        self.totalCount = itter10C5;
        self.ui = ui1012;
        self.vi = vi1013;
        return
    end state init
    method start
        ENTRY10F6:  preds = []
          femData:MeshCell[] 0cell_a10F7#1 = globals.0cell_a0F37;
          femData:FemFunc c10F9#1 = globals.c0F38;
          bool debug10FB#1 = globals.debug0F30;
          int debugU10FD#1 = globals.debugU0F31;
          int debugV10FF#1 = globals.debugV0F32;
          int[] cells1101#1 = globals.cells0F36;
          int len1103#1 = self.len;
          int idx1105#1 = self.idx;
          int ui1107#1 = self.ui;
          int vi1109#1 = self.vi;
          if debug10FB then goto ASSIGN110D else goto JOIN1117
        ASSIGN110D:  preds = [COND110B]
          bool _t110C#1 = NEQ<int>(ui1107,debugU10FD);
          if _t110C then goto ASSIGN1110 else goto ASSIGN112A
        ASSIGN1110:  preds = [COND110E]
          bool _t110F#1 = true;
          goto JOIN1113
        JOIN1113:  preds = [ASSIGN1110,ASSIGN112A]
          bool _t1111#1 = phi(_t110F,_t1112)
          if _t1111 then goto STABILIZE1115 else goto JOIN1116
        STABILIZE1115:  preds = [COND1114]
          stabilize
          goto JOIN1116
        JOIN1116:  preds = [*STABILIZE1115,COND1114]
          goto JOIN1117
        JOIN1117:  preds = [JOIN1116,COND110B]
          int _t1118#1 = 0;
          bool _t111A#1 = EQ<int>(len1103,_t1118);
          if _t111A then goto STABILIZE111D else goto JOIN111E
        STABILIZE111D:  preds = [COND111C]
          stabilize
          goto JOIN111E
        JOIN111E:  preds = [*STABILIZE111D,COND111C]
          int _t111F#1 = Subscript<int[]>(cells1101,idx1105);
          femData:MeshCell cc1121#2 = Subscript<femData:MeshCell[]>(0cell_a10F7,_t111F);
          int _t1123#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1121);
          femData:FuncCell _t1125#1 = LoadFem<femData:FuncCell>(c10F9,_t1123);
          self.cc = cc1121;
          self.fc = _t1125;
          active
        ASSIGN112A:  preds = [COND110E]
          bool _t1112#1 = NEQ<int>(vi1109,debugV10FF);
          goto JOIN1113
    end start
    method update
        ENTRY112B:  preds = []
          femData:MeshCell[] 0cell_a112C#1 = globals.0cell_a0F37;
          femData:FemFunc c112E#1 = globals.c0F38;
          tensor[2][] times1130#1 = globals.times0F35;
          int[] cells1132#1 = globals.cells0F36;
          tensor[3] rayVec1134#5 = globals.rayVec0F3D;
          tensor[3] rayOrig1136#2 = self.rayOrig;
          int offset1138#1 = self.offset;
          int len113A#2 = self.len;
          int itter113C#2 = self.itter;
          tensor[2] interval113E#1 = self.interval;
          real s1140#5 = self.s;
          real e1142#3 = self.e;
          femData:MeshCell cc1144#6 = self.cc;
          femData:FuncCell fc1146#3 = self.fc;
          tensor[2][] intervals1148#2 = self.intervals;
          tensor[2,3][] sints114A#2 = self.sints;
          femData:MeshCell[] newCells114C#2 = self.newCells;
          int count114E#3 = self.count;
          int totalCount1150#2 = self.totalCount;
          int ui1152#3 = self.ui;
          int vi1154#3 = self.vi;
          int _t1156#8 = 1;
          bool _t1158#1 = LT<int>(len113A,_t1156);
          if _t1158 then goto STABILIZE115B else goto JOIN115C
        STABILIZE115B:  preds = [COND115A]
          stabilize
          goto JOIN115C
        JOIN115C:  preds = [*STABILIZE115B,COND115A]
          tensor[3] op1_e3_l_3115E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s1140,rayVec1134);
          tensor[3] rayStart115D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_3115E);
          real _t1161#1 = TensorIndex<tensor[3],[0]>(rayStart115D);
          real _t1163#1 = TensorIndex<tensor[3],[1]>(rayStart115D);
          tensor[2] project1165#8 = <tensor[2]>[_t1161,_t1163];
          femData:FemFunc _t1167#6 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1146);
          femData:Space _t1169#5 = ExtractFem<femData:Space,femData:FemFunc>(_t1167);
          int _t116B#5 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1146);
          femData:Mesh _t116D#12 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1144);
          int _t116F#9 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1144);
          real _t1171#2 = TensorIndex<tensor[3],[2]>(rayStart115D);
          femData:MeshPos callNewtonPos126A#1 = _0A3A_msh_newtonInverse1176 (project1165,_t116F,_t116D);
          tensor[2] refPos126B#17 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos126A);
          int[6] femIndicies126D#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t1169,_t116B);
          tensor[6] femDofs126E#5 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t1167,femIndicies126D);
          tensor[6] basisResult126F#1 = EvaluateBasis<BasisArray(6)>(refPos126B);
          real compositionl1175#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult126F,refPos126B);
          real f01173#5 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1175);
          real _t1279#1 = TensorIndex<tensor[3],[0]>(rayVec1134);
          real _t127B#1 = TensorIndex<tensor[3],[1]>(rayVec1134);
          tensor[2] _t127D#2 = <tensor[2]>[_t1279,_t127B];
          tensor[2,6] basisResult128F#1 = EvaluateBasis<BasisArray(2,6)>(refPos126B);
          tensor[2] compositionl1281#3 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult128F,refPos126B);
          int[3] femIndicies1291#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t116D,_t116F);
          tensor[3,2] femDofs1292#6 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t116D,femIndicies1291);
          tensor[2,3] basisResult1293#3 = EvaluateBasis<BasisArray(2,3)>(refPos126B);
          tensor[2,2] probe_l_81282#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2,2] op1_e3_l_91283#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_81282);
          tensor[2] probe_l_101284#2 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] probe_l_111285#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t116F,_t116D,project1165,femDofs1292,basisResult1293,refPos126B);
          tensor[2] op1_e3_l_121286#2 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_111285);
          tensor[2,2] op1_e3_l_131287#2 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_91283);
          real op1_e3_l_141288#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_101284,op1_e3_l_121286);
          tensor[2,2] op1_e3_l_151289#4 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_131287,op1_e3_l_141288);
          tensor[2] _t127F#2 = λ(T0[2],T1[2 2])<Σ(i104=0..1)<((T0_{i104} * T1_{i104,i0}))>(i104=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real _t12B1#2 = TensorIndex<tensor[3],[2]>(rayVec1134);
          int _t12B3#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1144);
          real _t12B5#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t116D,_t12B3);
          tensor[2] op1_e3_l_1912C2#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl1281,op1_e3_l_151289);
          real op1_e3_l_2012C3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t127D,op1_e3_l_1912C2);
          real op1_e3_l_2112C4#1 = λ(T0[],T1[])<(T1) - (T0)> (_t12B1,op1_e3_l_2012C3);
          real op1_e3_l_2212C5#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2112C4);
          real _t12B7#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t12B5,op1_e3_l_2212C5);
          real _t12F1#1 = λ(T0[],T1[])<(T0) - (T1)> (e1142,s1140);
          real gradEps12F3#6 = Min<real>(_t12B7,_t12F1);
          string _t12F5#1 = "hmmmm:";
          string _t12F7#18 = "\n";
          Print<[string,tensor[2],string]>(_t12F5,_t127F,_t12F7);
          string _t12FA#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t12FA,femDofs126E,_t12F7);
          tensor[2] op1_e3_l_31302#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps12F3,_t127D);
          tensor[2] _t1301#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project1165,op1_e3_l_31302);
          femData:MeshPos callNewtonPos130A#1 = _0A3A_msh_newtonInverse1176 (_t1301,_t116F,_t116D);
          tensor[2] refPos130B#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos130A);
          tensor[6] basisResult130F#1 = EvaluateBasis<BasisArray(6)>(refPos130B);
          real compositionl1307#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t116B,_t1169,_t1167,refPos130B,femDofs126E,basisResult130F,refPos130B);
          real op1_e3_l_111308#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1171,compositionl1307);
          real op1_e3_l_121309#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps12F3,_t12B1);
          real f11305#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_111308,op1_e3_l_121309);
          string _t131B#1 = "=========================\n";
          Print<[string]>(_t131B);
          string _t131E#1 = "Ui/Vi:";
          string _t1320#2 = "/";
          Print<[string,int,string,int,string]>(_t131E,ui1152,_t1320,vi1154,_t12F7);
          string _t1323#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1323,cc1144,_t12F7);
          string _t1326#1 = "hess:";
          tensor[2,2,6] basisResult1353#1 = EvaluateBasis<BasisArray(2,2,6)>(refPos126B);
          tensor[2,2] compositionl1331#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 2 6],T6[2])<Σ(i4=0..5)<((T4_{i4} * T5_{i0,i1,i4}))>(i4=0..5)>_{2 2} (_t116B,_t1169,_t1167,refPos126B,femDofs126E,basisResult1353,refPos126B);
          tensor[2,2] op1_e3_l_241333#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i0,i2} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (compositionl1331,op1_e3_l_151289);
          tensor[2,2,3] basisResult1357#3 = EvaluateBasis<BasisArray(2,2,3)>(refPos126B);
          tensor[2,2,2] probe_l_261336#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i5=0..2)<((T3_{i5,i0} * T4_{i1,i2,i5}))>(i5=0..2)>_{2 2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2,2] op1_e3_l_271337#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i3,i1,i2}))>(i3=0..1)>_{2 2 2} (probe_l_261336);
          tensor[2,2,2] op1_e3_l_311338#1 = λ(T0[2 2 2])<Σ(i3=0..1)<((ϵ_{ii3,ii0} * T0_{i1,i3,i2}))>(i3=0..1)>_{2 2 2} (op1_e3_l_271337);
          tensor[2,2] probe_l_361339#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'0',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] probe_l_39133A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 2 3],T5[2])<Σ(i4=0..2)<((T3_{i4,i0} * T4_{'1',i1,i4}))>(i4=0..2)>_{2 2} (_t116F,_t116D,project1165,femDofs1292,basisResult1357,refPos126B);
          tensor[2,2] op1_e3_l_40133B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii0,ii2} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_39133A);
          tensor[2] op1_e3_l_41133C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T1_{i1} * T0_{i1,i0}))>(i1=0..1)>_{2} (probe_l_361339,op1_e3_l_121286);
          tensor[2] op1_e3_l_42133D#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (probe_l_101284,op1_e3_l_40133B);
          tensor[2] op1_e3_l_44133E#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_41133C,op1_e3_l_42133D);
          tensor[2,2,2] op1_e3_l_45133F#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2} * T1)>_{2 2 2} (op1_e3_l_311338,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_461340#1 = λ(T0[2 2],T1[2])<(T0_{i0,i1} * T1_{i2})>_{2 2 2} (op1_e3_l_131287,op1_e3_l_44133E);
          tensor[2,2,2] op1_e3_l_551341#1 = λ(T0[2 2 2],T1[2 2 2])<(T0_{i0,i1,i2}) - (T1_{i0,i1,i2})>_{2 2 2} (op1_e3_l_45133F,op1_e3_l_461340);
          real op1_e3_l_561342#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_141288,op1_e3_l_141288);
          tensor[2,2,2] op1_e3_l_571343#1 = λ(T0[2 2 2],T1[])<(T0_{i0,i1,i2}) / ( T1)>_{2 2 2} (op1_e3_l_551341,op1_e3_l_561342);
          tensor[2,2] op1_e3_l_581344#1 = λ(T0[2 2],T1[2 2])<Σ(i2=0..1)<((T0_{i2,i0} * T1_{i2,i1}))>(i2=0..1)>_{2 2} (op1_e3_l_151289,op1_e3_l_241333);
          tensor[2,2] op1_e3_l_591345#1 = λ(T0[2],T1[2 2 2])<Σ(i2=0..1)<((T0_{i2} * T1_{i2,i0,i1}))>(i2=0..1)>_{2 2} (compositionl1281,op1_e3_l_571343);
          tensor[2,2] _t1328#3 = λ(T0[2 2],T1[2 2])<(T0_{i0,i1} + T1_{i0,i1})>_{2 2} (op1_e3_l_581344,op1_e3_l_591345);
          string _t1390#1 = "norm:";
          real op1_e3_l_11513B9#1 = λ(T0[2 2],T1[2 2])<Σ(i0=0..1)(i1=0..1)<((T0_{i0,i1} * T1_{i0,i1}))>(i0=0..1)(i1=0..1)> (_t1328,_t1328);
          real _t1392#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11513B9);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1326,_t1328,_t12F7,_t1390,_t1392,_t12F7);
          string _t1417#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t1417,_t127F,_t12F7);
          string _t141A#1 = "vals:";
          tensor[2] _t141C#2 = <tensor[2]>[f01173,f11305];
          Print<[string,tensor[2],string]>(_t141A,_t141C,_t12F7);
          real _t141F#6 = 0.e0;
          bool _t1421#2 = GT<real>(f01173,_t141F);
          if _t1421 then goto JOIN1426 else goto ASSIGN14FA
        JOIN1426:  preds = [COND1423,JOIN14FF]
          int _t1424#1 = phi(_t1156,_t1425)
          bool _t1427#2 = GT<real>(f11305,_t141F);
          if _t1427 then goto JOIN142C else goto ASSIGN14F2
        JOIN142C:  preds = [COND1429,JOIN14F7]
          int _t142A#1 = phi(_t1156,_t142B)
          int _t142D#1 = IMul(_t1424,_t142A);
          int _t142F#5 = 0;
          bool _t1431#1 = GT<int>(_t142D,_t142F);
          bool _t1433#1 = BNot(_t1431);
          if _t1433 then goto COND1436 else goto ASSIGN14CD
        COND1436:  preds = [COND1435]
          if _t1421 then goto JOIN1439 else goto ASSIGN14C7
        JOIN1439:  preds = [COND1436,JOIN14CB]
          int _t1437#1 = phi(_t1156,_t1438)
          if _t1427 then goto JOIN143D else goto ASSIGN14C1
        JOIN143D:  preds = [COND143A,JOIN14C5]
          int _t143B#1 = phi(_t1156,_t143C)
          int _t143E#1 = IMul(_t1437,_t143B);
          bool _t1440#1 = EQ<int>(_t143E,_t142F);
          if _t1440 then goto ASSIGN1444 else goto JOIN1446
        ASSIGN1444:  preds = [COND1442]
          string _t1443#1 = "Warn: 0 update\n";
          Print<[string]>(_t1443);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN1445,COND1442]
          string _t1447#1 = "update with interval:";
          Print<[string,real,string]>(_t1447,gradEps12F3,_t12F7);
          string _t144A#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t144A,ui1152,_t1320,vi1154,_t12F7);
          string _t144D#1 = "Count:";
          Print<[string,int,string]>(_t144D,count114E,_t12F7);
          int count1450#1 = IAdd(count114E,_t1156);
          int totalCount1452#1 = IAdd(totalCount1150,_t1156);
          string _t1454#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1454,_t141C,_t12F7);
          string _t1457#1 = "New interval:";
          real _t1459#3 = λ(T0[],T1[])<(T0 + T1)> (s1140,gradEps12F3);
          tensor[2] _t145B#2 = <tensor[2]>[s1140,_t1459];
          Print<[string,tensor[2],string]>(_t1457,_t145B,_t12F7);
          tensor[2][] intervals145E#1 = Append<tensor[2]>(intervals1148,_t145B);
          tensor[3] op1_e3_l_51462#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec1134,_t1459);
          tensor[3] _t1460#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1136,op1_e3_l_51462);
          tensor[2,3] _t1466#1 = <tensor[2,3]>[rayStart115D,_t1460];
          tensor[2,3][] sints1468#1 = Append<tensor[2,3]>(sints114A,_t1466);
          femData:MeshCell[] newCells146A#1 = Append<femData:MeshCell>(newCells114C,cc1144);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN146B,ASSIGN14F0]
          int totalCount146C#3 = phi(totalCount1452,totalCount1150)
          int count146D#2 = phi(count1450,count114E)
          femData:MeshCell[] newCells146E#3 = phi(newCells146A,newCells114C)
          tensor[2,3][] sints146F#2 = phi(sints1468,sints114A)
          tensor[2][] intervals1470#3 = phi(intervals145E,intervals1148)
          real s1471#3 = phi(_t1459,s1472)
          bool _t1474#1 = GTE<real>(s1471,e1142);
          if _t1474 then goto ASSIGN1478 else goto JOIN14A5
        ASSIGN1478:  preds = [COND1476]
          int itter1477#4 = IAdd(itter113C,_t1156);
          bool _t1479#1 = GTE<int>(itter1477,len113A);
          if _t1479 then goto ASSIGN147D else goto ASSIGN14B3
        ASSIGN147D:  preds = [COND147B]
          string _t147C#1 = "TotalCount:";
          Print<[string,int,string]>(_t147C,totalCount146C,_t12F7);
          string _t147F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t147F,intervals1470,_t12F7);
          string _t1482#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t1482,newCells146E,_t12F7);
          string _t1485#1 = ";";
          string _t1487#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui1152,_t1485,vi1154,_t1487);
          self.itter = itter1477;
          self.s = s1471;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count146D;
          self.totalCount = totalCount146C;
          stabilize
          goto JOIN149D
        JOIN149D:  preds = [*STABILIZE1491,ASSIGN14BF]
          int count1492#1 = phi(_t142F)
          femData:FuncCell fc1493#1 = phi(_t1494)
          femData:MeshCell cc1495#1 = phi(cc1496)
          real e1497#1 = phi(e1498)
          real s1499#1 = phi(s149A)
          tensor[2] interval149B#1 = phi(interval149C)
          goto JOIN14A5
        JOIN14A5:  preds = [JOIN149D,COND1476]
          int count149E#1 = phi(count1492,count146D)
          femData:FuncCell fc149F#1 = phi(fc1493,fc1146)
          femData:MeshCell cc14A0#1 = phi(cc1495,cc1144)
          real e14A1#1 = phi(e1497,e1142)
          real s14A2#1 = phi(s1499,s1471)
          tensor[2] interval14A3#1 = phi(interval149B,interval113E)
          int itter14A4#1 = phi(itter1477,itter113C)
          self.itter = itter14A4;
          self.interval = interval14A3;
          self.s = s14A2;
          self.e = e14A1;
          self.cc = cc14A0;
          self.fc = fc149F;
          self.intervals = intervals1470;
          self.sints = sints146F;
          self.newCells = newCells146E;
          self.count = count149E;
          self.totalCount = totalCount146C;
          active
        ASSIGN14B3:  preds = [COND147B]
          string _t14B2#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t14B2);
          int _t14B5#2 = IAdd(offset1138,itter1477);
          tensor[2] interval149C#3 = Subscript<tensor[2][]>(times1130,_t14B5);
          int _t14B8#1 = Subscript<int[]>(cells1132,_t14B5);
          femData:MeshCell cc1496#2 = Subscript<femData:MeshCell[]>(0cell_a112C,_t14B8);
          real s149A#1 = TensorIndex<tensor[2],[0]>(interval149C);
          real e1498#1 = TensorIndex<tensor[2],[1]>(interval149C);
          int _t14BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1496);
          femData:FuncCell _t1494#1 = LoadFem<femData:FuncCell>(c112E,_t14BD);
          goto JOIN149D
        ASSIGN14C1:  preds = [COND143A]
          bool _t14C0#1 = LT<real>(f11305,_t141F);
          if _t14C0 then goto ASSIGN14C4 else goto JOIN14C5
        ASSIGN14C4:  preds = [COND14C2]
          int _t14C3#1 = -1;
          goto JOIN14C5
        JOIN14C5:  preds = [ASSIGN14C4,COND14C2]
          int _t143C#1 = phi(_t14C3,_t142F)
          goto JOIN143D
        ASSIGN14C7:  preds = [COND1436]
          bool _t14C6#1 = LT<real>(f01173,_t141F);
          if _t14C6 then goto ASSIGN14CA else goto JOIN14CB
        ASSIGN14CA:  preds = [COND14C8]
          int _t14C9#1 = -1;
          goto JOIN14CB
        JOIN14CB:  preds = [ASSIGN14CA,COND14C8]
          int _t1438#1 = phi(_t14C9,_t142F)
          goto JOIN1439
        ASSIGN14CD:  preds = [COND1435]
          real _t14CC#1 = 0.2e1;
          real _t14CE#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t116D,_t12B3);
          real op1_e3_l_1214D4#1 = λ(T0[])<Abs(T0)> (f01173);
          real op1_e3_l_1314D5#1 = λ(T0[],T1[])<(T0 * T1)> (_t14CC,_t14CE);
          real _t14D0#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1214D4,op1_e3_l_1314D5);
          real epsUpdate14E8#2 = Max<real>(gradEps12F3,_t14D0);
          string _t14EA#1 = "update L:";
          Print<[string,real,string]>(_t14EA,epsUpdate14E8,_t12F7);
          string _t14ED#1 = "update G:";
          Print<[string,real,string]>(_t14ED,gradEps12F3,_t12F7);
          real s1472#1 = λ(T0[],T1[])<(T0 + T1)> (s1140,epsUpdate14E8);
          goto JOIN1473
        ASSIGN14F2:  preds = [COND1429]
          bool _t14F1#1 = LT<real>(f11305,_t141F);
          if _t14F1 then goto ASSIGN14F5 else goto ASSIGN14F8
        ASSIGN14F5:  preds = [COND14F3]
          int _t14F4#1 = -1;
          goto JOIN14F7
        JOIN14F7:  preds = [ASSIGN14F5,ASSIGN14F8]
          int _t142B#1 = phi(_t14F4,_t14F6)
          goto JOIN142C
        ASSIGN14F8:  preds = [COND14F3]
          int _t14F6#1 = 0;
          goto JOIN14F7
        ASSIGN14FA:  preds = [COND1423]
          bool _t14F9#1 = LT<real>(f01173,_t141F);
          if _t14F9 then goto ASSIGN14FD else goto ASSIGN1500
        ASSIGN14FD:  preds = [COND14FB]
          int _t14FC#1 = -1;
          goto JOIN14FF
        JOIN14FF:  preds = [ASSIGN14FD,ASSIGN1500]
          int _t1425#1 = phi(_t14FC,_t14FE)
          goto JOIN1426
        ASSIGN1500:  preds = [COND14FB]
          int _t14FE#1 = 0;
          goto JOIN14FF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1501:  preds = []
      int iresU1502#1 = globals.iresU0F27;
      int iresV1504#1 = globals.iresV0F28;
      int _t1506#2 = 0;
      int _t1508#2 = 1;
      int _t150A#1 = ISub(iresU1502,_t1508);
      int[] _t150C#1 = Range(_t1506,_t150A);
    FOREACH150F:  preds = [ASSIGN150D,NEXT1518]
      foreach (vi150E in _t150C) on exit goto RETURN1519
      int _t1510#1 = ISub(iresV1504,_t1508);
      int[] _t1512#1 = Range(_t1506,_t1510);
    FOREACH1515:  preds = [ASSIGN1513,NEXT1517]
      foreach (ui1514 in _t1512) on exit goto NEXT1518
      new ray(ui1514,vi150E);
      goto FOREACH1515
    NEXT1518:  preds = [FOREACH1515]
      goto FOREACH150F
    RETURN1519:  preds = [FOREACH150F]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a154E (a) = <no-default>
  input 0b0450_intermedateGlobal154F (b) = <no-default>
  input 0c0452_intermedateGlobal1550 (c) = <no-default>
  input isoval1551 (isoval) = <default>
  input thick1552 (thick) = <default>
  input camEye1553 (camEye) = <default>
  input camAt1554 (camAt) = <default>
  input camUp1555 (camUp) = <default>
  input camFOV1556 (camFOV) = <default>
  input iresU1557 (iresU) = <default>
  input iresV1558 (iresV) = <default>
  input camNear1559 (camNear) = <default>
  input camFar155A (camFar) = <default>
  input refStep155B (refStep) = <default>
  input rayStep155C (rayStep) = <default>
  input lightVsp155D (lightVsp) = <default>
  input phongKa155E (phongKa) = <default>
  input phongKd155F (phongKd) = <default>
  input debug1560 (debug) = <default>
  input debugU1561 (debugU) = <default>
  input debugV1562 (debugV) = <default>
  input eps1563 (eps) = <default>
  input indecies1564 (indecies) = <no-default>
  input times1565 (times) = <no-default>
  input cells1566 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a1567
  global femData:FemFunc c1568
  global tensor[3] camU1569
  global tensor[3] camV156A
  global real camVmax156B
  global real camUmax156C
  global tensor[3] rayVec156D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1816 (tensor[2] pos1817#3, int cellInt1818#2, femData:Mesh mesh1819#12) {
    ENTRY181A:  preds = []
      real _t181B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn181D#3 = <tensor[2]>[_t181B,_t181B];
      int _t181F#1 = 0;
      int _t1821#1 = 16;
      int[] _t1823#1 = Range(_t181F,_t1821);
    FOREACH1826:  preds = [ASSIGN1824,NEXT1A7D]
      foreach (itter1825 in _t1823) on exit goto ASSIGN1A82
        tensor[2] xn199D#3 = phi(xn181D,xn1A11)
      int ilit1828#1 = 3;
      int mulRes1829#3 = IMul(cellInt1818,ilit1828);
      int ilit182A#1 = 0;
      int addRes182B#1 = IAdd(mulRes1829,ilit182A);
      int idx182C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182B);
      int ilit182D#1 = 1;
      int addRes182E#1 = IAdd(mulRes1829,ilit182D);
      int idx182F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182E);
      int ilit1830#1 = 2;
      int addRes1831#1 = IAdd(mulRes1829,ilit1830);
      int idx1832#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes1831);
      int[3] seq1833#1 = <int[3]>{idx182C,idx182F,idx1832};
      int[3] femIndicies1827#3 = seq1833;
      int ilit1842#4 = 0;
      int ilit1843#4 = 2;
      int idx1844#1 = Subscript<int>(femIndicies1827,ilit1842);
      int mulRes1845#2 = IMul(ilit1843,idx1844);
      int addRes1846#1 = IAdd(ilit1842,mulRes1845);
      int ilit1847#4 = 1;
      int addRes1848#1 = IAdd(ilit1847,mulRes1845);
      real dof_load1849#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1846);
      real dof_load184A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1848);
      tensor[2] interCons184B#1 = <tensor[2]>[dof_load1849,dof_load184A];
      int idx184C#1 = Subscript<int>(femIndicies1827,ilit1847);
      int mulRes184D#2 = IMul(ilit1843,idx184C);
      int addRes184E#1 = IAdd(ilit1842,mulRes184D);
      int addRes184F#1 = IAdd(ilit1847,mulRes184D);
      real dof_load1850#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184E);
      real dof_load1851#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184F);
      tensor[2] interCons1852#1 = <tensor[2]>[dof_load1850,dof_load1851];
      int idx1853#1 = Subscript<int>(femIndicies1827,ilit1843);
      int mulRes1854#2 = IMul(ilit1843,idx1853);
      int addRes1855#1 = IAdd(ilit1842,mulRes1854);
      int addRes1856#1 = IAdd(ilit1847,mulRes1854);
      real dof_load1857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1855);
      real dof_load1858#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1856);
      tensor[2] interCons1859#1 = <tensor[2]>[dof_load1857,dof_load1858];
      tensor[3,2] dofs185A#1 = <tensor[3,2]>[interCons184B,interCons1852,interCons1859];
      tensor[3,2] femDofs1841#30 = dofs185A;
      real varAcc1876#0 = VIndex<2,0>(xn181D);
      real varAcc1877#0 = VIndex<2,1>(xn181D);
      real coeff1878#1 = -0.1e1;
      real one1879#3 = 0.1e1;
      real prod187A#2 = RMul(one1879,one1879);
      real basisEval187B#2 = RMul(coeff1878,prod187A);
      real basisEval187C#2 = RMul(one1879,prod187A);
      real basisEval187D#2 = 0.e0;
      tensor[3] intermediateCons187E#1 = <tensor[3]>[basisEval187B,basisEval187C,basisEval187D];
      tensor[3] intermediateCons187F#1 = <tensor[3]>[basisEval187B,basisEval187D,basisEval187C];
      tensor[2,3] intermediateCons1880#1 = <tensor[2,3]>[intermediateCons187E,intermediateCons187F];
      tensor[2,3] basisResult1875#12 = intermediateCons1880;
      real r188E#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs1841);
      real r188F#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1875);
      real r1890#1 = RMul(r188E,r188F);
      real r1891#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs1841);
      real r1892#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1875);
      real r1893#1 = RMul(r1891,r1892);
      real r1894#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs1841);
      real r1895#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1875);
      real r1896#1 = RMul(r1894,r1895);
      real r1897#1 = RAdd(r1890,r1893);
      real r1898#1 = RAdd(r1897,r1896);
      real r1899#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1875);
      real r189A#1 = RMul(r188E,r1899);
      real r189B#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1875);
      real r189C#1 = RMul(r1891,r189B);
      real r189D#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1875);
      real r189E#1 = RMul(r1894,r189D);
      real r189F#1 = RAdd(r189A,r189C);
      real r18A0#1 = RAdd(r189F,r189E);
      tensor[2] tensor18A1#1 = <tensor[2]>[r1898,r18A0];
      real r18A2#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs1841);
      real r18A3#1 = RMul(r18A2,r188F);
      real r18A4#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs1841);
      real r18A5#1 = RMul(r18A4,r1892);
      real r18A6#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs1841);
      real r18A7#1 = RMul(r18A6,r1895);
      real r18A8#1 = RAdd(r18A3,r18A5);
      real r18A9#1 = RAdd(r18A8,r18A7);
      real r18AA#1 = RMul(r18A2,r1899);
      real r18AB#1 = RMul(r18A4,r189B);
      real r18AC#1 = RMul(r18A6,r189D);
      real r18AD#1 = RAdd(r18AA,r18AB);
      real r18AE#1 = RAdd(r18AD,r18AC);
      tensor[2] tensor18AF#1 = <tensor[2]>[r18A9,r18AE];
      tensor[2,2] probe_l_10188D#4 = <tensor[2,2]>[tensor18A1,tensor18AF];
      real realLit18D5#4 = 0.e0;
      real r18D6#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_10188D);
      real r18D7#1 = RMul(realLit18D5,r18D6);
      real realLit18D8#2 = -0.1e1;
      real r18D9#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_10188D);
      real r18DA#1 = RMul(realLit18D8,r18D9);
      real r18DB#1 = RAdd(r18D7,r18DA);
      real r18DC#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_10188D);
      real r18DD#1 = RMul(realLit18D5,r18DC);
      real r18DE#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_10188D);
      real r18DF#1 = RMul(realLit18D8,r18DE);
      real r18E0#1 = RAdd(r18DD,r18DF);
      tensor[2] tensor18E1#1 = <tensor[2]>[r18DB,r18E0];
      real realLit18E2#2 = 0.1e1;
      real r18E3#1 = RMul(realLit18E2,r18D6);
      real r18E4#1 = RMul(realLit18D5,r18D9);
      real r18E5#1 = RAdd(r18E3,r18E4);
      real r18E6#1 = RMul(realLit18E2,r18DC);
      real r18E7#1 = RMul(realLit18D5,r18DE);
      real r18E8#1 = RAdd(r18E6,r18E7);
      tensor[2] tensor18E9#1 = <tensor[2]>[r18E5,r18E8];
      tensor[2,2] op1_e3_l_1118D4#4 = <tensor[2,2]>[tensor18E1,tensor18E9];
      real r1902#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1841);
      real r1903#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1875);
      real r1904#1 = RMul(r1902,r1903);
      real r1905#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1841);
      real r1906#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1875);
      real r1907#1 = RMul(r1905,r1906);
      real r1908#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1841);
      real r1909#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1875);
      real r190A#1 = RMul(r1908,r1909);
      real r190B#1 = RAdd(r1904,r1907);
      real r190C#1 = RAdd(r190B,r190A);
      real r190D#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1841);
      real r190E#1 = RMul(r190D,r1903);
      real r190F#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1841);
      real r1910#1 = RMul(r190F,r1906);
      real r1911#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1841);
      real r1912#1 = RMul(r1911,r1909);
      real r1913#1 = RAdd(r190E,r1910);
      real r1914#1 = RAdd(r1913,r1912);
      tensor[2] probe_l_121901#1 = <tensor[2]>[r190C,r1914];
      real r192B#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1841);
      real r192C#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1875);
      real r192D#1 = RMul(r192B,r192C);
      real r192E#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1841);
      real r192F#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1875);
      real r1930#1 = RMul(r192E,r192F);
      real r1931#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1841);
      real r1932#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1875);
      real r1933#1 = RMul(r1931,r1932);
      real r1934#1 = RAdd(r192D,r1930);
      real r1935#1 = RAdd(r1934,r1933);
      real r1936#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1841);
      real r1937#1 = RMul(r1936,r192C);
      real r1938#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1841);
      real r1939#1 = RMul(r1938,r192F);
      real r193A#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1841);
      real r193B#1 = RMul(r193A,r1932);
      real r193C#1 = RAdd(r1937,r1939);
      real r193D#1 = RAdd(r193C,r193B);
      tensor[2] probe_l_13192A#2 = <tensor[2]>[r1935,r193D];
      real realLit1954#2 = 0.e0;
      real r1955#2 = TensorIndex<tensor[2],[0]>(probe_l_13192A);
      real r1956#1 = RMul(realLit1954,r1955);
      real realLit1957#1 = 0.1e1;
      real r1958#2 = TensorIndex<tensor[2],[1]>(probe_l_13192A);
      real r1959#1 = RMul(realLit1957,r1958);
      real r195A#1 = RAdd(r1956,r1959);
      real realLit195B#1 = -0.1e1;
      real r195C#1 = RMul(realLit195B,r1955);
      real r195D#1 = RMul(realLit1954,r1958);
      real r195E#1 = RAdd(r195C,r195D);
      tensor[2] op1_e3_l_141953#1 = <tensor[2]>[r195A,r195E];
      real realLit196D#4 = 0.e0;
      real r196E#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_1118D4);
      real r196F#1 = RMul(realLit196D,r196E);
      real realLit1970#2 = -0.1e1;
      real r1971#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_1118D4);
      real r1972#1 = RMul(realLit1970,r1971);
      real r1973#1 = RAdd(r196F,r1972);
      real r1974#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_1118D4);
      real r1975#1 = RMul(realLit196D,r1974);
      real r1976#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_1118D4);
      real r1977#1 = RMul(realLit1970,r1976);
      real r1978#1 = RAdd(r1975,r1977);
      tensor[2] tensor1979#1 = <tensor[2]>[r1973,r1978];
      real realLit197A#2 = 0.1e1;
      real r197B#1 = RMul(realLit197A,r196E);
      real r197C#1 = RMul(realLit196D,r1971);
      real r197D#1 = RAdd(r197B,r197C);
      real r197E#1 = RMul(realLit197A,r1974);
      real r197F#1 = RMul(realLit196D,r1976);
      real r1980#1 = RAdd(r197E,r197F);
      tensor[2] tensor1981#1 = <tensor[2]>[r197D,r1980];
      tensor[2,2] op1_e3_l_15196C#4 = <tensor[2,2]>[tensor1979,tensor1981];
      real op1_e3_l_161999#4 = VDot<2>(probe_l_121901,op1_e3_l_141953);
      real varAcc199E#1 = VIndex<2,0>(xn199D);
      real varAcc199F#1 = VIndex<2,1>(xn199D);
      real coeff19A0#2 = -0.1e1;
      real iden19A1#1 = varAcc199E;
      real one19A2#7 = 0.1e1;
      real prod19A3#2 = RMul(iden19A1,one19A2);
      real iden19A4#1 = varAcc199F;
      real prod19A5#2 = RMul(one19A2,iden19A4);
      real prod19A6#1 = RMul(one19A2,one19A2);
      real mult19A7#1 = RMul(one19A2,prod19A6);
      real mult19A8#1 = RMul(coeff19A0,prod19A5);
      real mult19A9#1 = RMul(coeff19A0,prod19A3);
      real sum19AA#1 = RAdd(mult19A8,mult19A9);
      real sum19AB#1 = RAdd(mult19A7,sum19AA);
      real intermediate19AC#1 = sum19AB;
      real basisEval19AD#1 = RMul(one19A2,prod19A3);
      real basisEval19AE#1 = RMul(one19A2,prod19A5);
      tensor[3] intermediateCons19AF#1 = <tensor[3]>[intermediate19AC,basisEval19AD,basisEval19AE];
      tensor[3] basisResult199C#6 = intermediateCons19AF;
      real r19C4#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1841);
      real r19C5#2 = TensorIndex<tensor[3],[0]>(basisResult199C);
      real r19C6#1 = RMul(r19C4,r19C5);
      real r19C7#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1841);
      real r19C8#2 = TensorIndex<tensor[3],[1]>(basisResult199C);
      real r19C9#1 = RMul(r19C7,r19C8);
      real r19CA#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1841);
      real r19CB#2 = TensorIndex<tensor[3],[2]>(basisResult199C);
      real r19CC#1 = RMul(r19CA,r19CB);
      real r19CD#1 = RAdd(r19C6,r19C9);
      real r19CE#1 = RAdd(r19CD,r19CC);
      real r19CF#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1841);
      real r19D0#1 = RMul(r19CF,r19C5);
      real r19D1#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1841);
      real r19D2#1 = RMul(r19D1,r19C8);
      real r19D3#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1841);
      real r19D4#1 = RMul(r19D3,r19CB);
      real r19D5#1 = RAdd(r19D0,r19D2);
      real r19D6#1 = RAdd(r19D5,r19D4);
      tensor[2] probe_l_1719C3#1 = <tensor[2]>[r19CE,r19D6];
      real r19ED#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_15196C);
      real r19EE#1 = RDiv(r19ED,op1_e3_l_161999);
      real r19EF#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_15196C);
      real r19F0#1 = RDiv(r19EF,op1_e3_l_161999);
      tensor[2] tensor19F1#1 = <tensor[2]>[r19EE,r19F0];
      real r19F2#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_15196C);
      real r19F3#1 = RDiv(r19F2,op1_e3_l_161999);
      real r19F4#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_15196C);
      real r19F5#1 = RDiv(r19F4,op1_e3_l_161999);
      tensor[2] tensor19F6#1 = <tensor[2]>[r19F3,r19F5];
      tensor[2,2] op1_e3_l_1819EC#4 = <tensor[2,2]>[tensor19F1,tensor19F6];
      tensor[2] op1_e3_l_191A03#2 = VSub<2>(probe_l_1719C3,pos1817);
      tensor[2] projParam1A07#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_1819EC);
      real vdot1A08#1 = VDot<2>(projParam1A07,op1_e3_l_191A03);
      tensor[2] projParam1A09#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_1819EC);
      real vdot1A0A#1 = VDot<2>(projParam1A09,op1_e3_l_191A03);
      tensor[2] op1_e3_l_201A06#1 = <tensor[2]>[vdot1A08,vdot1A0A];
      tensor[2] xn1A11#4 = VSub<2>(xn199D,op1_e3_l_201A06);
      real _t1A14#2 = 0.1e-7;
      real _t1A16#1 = RMul(_t1A14,_t1A14);
      real r1A1A#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1841);
      real r1A1B#2 = TensorIndex<tensor[3],[0]>(basisResult199C);
      real r1A1C#1 = RMul(r1A1A,r1A1B);
      real r1A1D#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1841);
      real r1A1E#2 = TensorIndex<tensor[3],[1]>(basisResult199C);
      real r1A1F#1 = RMul(r1A1D,r1A1E);
      real r1A20#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1841);
      real r1A21#2 = TensorIndex<tensor[3],[2]>(basisResult199C);
      real r1A22#1 = RMul(r1A20,r1A21);
      real r1A23#1 = RAdd(r1A1C,r1A1F);
      real r1A24#1 = RAdd(r1A23,r1A22);
      real r1A25#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1841);
      real r1A26#1 = RMul(r1A25,r1A1B);
      real r1A27#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1841);
      real r1A28#1 = RMul(r1A27,r1A1E);
      real r1A29#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1841);
      real r1A2A#1 = RMul(r1A29,r1A21);
      real r1A2B#1 = RAdd(r1A26,r1A28);
      real r1A2C#1 = RAdd(r1A2B,r1A2A);
      tensor[2] probe_l_251A19#1 = <tensor[2]>[r1A24,r1A2C];
      tensor[2] op1_e3_l_271A42#2 = VSub<2>(probe_l_251A19,pos1817);
      tensor[2] projParam1A46#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_1819EC);
      real vdot1A47#1 = VDot<2>(projParam1A46,op1_e3_l_271A42);
      tensor[2] projParam1A48#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_1819EC);
      real vdot1A49#1 = VDot<2>(projParam1A48,op1_e3_l_271A42);
      tensor[2] op1_e3_l_381A45#2 = <tensor[2]>[vdot1A47,vdot1A49];
      real _t1A50#1 = VDot<2>(op1_e3_l_381A45,op1_e3_l_381A45);
      bool _t1A53#1 = GTE<real>(_t1A16,_t1A50);
      if _t1A53 then goto ASSIGN1A57 else goto JOIN1A7C
    ASSIGN1A57:  preds = [COND1A55]
      real _t1A56#3 = 0.1e1;
      real _t1A58#3 = 0.1e-8;
      real _t1A5A#1 = RAdd(_t1A56,_t1A58);
      tensor[2] _t1A5D#1 = <tensor[2]>[_t1A56,_t1A56];
      real _t1A5F#1 = VDot<2>(_t1A5D,xn1A11);
      bool _t1A62#1 = GT<real>(_t1A5A,_t1A5F);
      tensor[2] _t1A64#1 = <tensor[2]>[_t1A58,_t1A58];
      tensor[2] _t1A66#2 = VAdd<2>(_t1A64,xn1A11);
      real _t1A69#1 = VIndex<2,0>(_t1A66);
      real _t1A6B#2 = -0.e0;
      bool _t1A6D#1 = GT<real>(_t1A69,_t1A6B);
      real _t1A6F#1 = VIndex<2,1>(_t1A66);
      bool _t1A71#1 = GT<real>(_t1A6F,_t1A6B);
      bool _t1A73#1 = BAnd(_t1A6D,_t1A71);
      bool _t1A75#1 = BAnd(_t1A62,_t1A73);
      if _t1A75 then goto ASSIGN1A79 else goto ASSIGN1A7F
    ASSIGN1A79:  preds = [COND1A77]
      femData:MeshPos _t1A78#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1819,cellInt1818,xn1A11,pos1817);
      return _t1A78
      goto JOIN1A7B
    JOIN1A7B:  preds = [*RETURN(_t1A78)1A7A,*RETURN(_t1A7E)1A80]
      goto JOIN1A7C
    JOIN1A7C:  preds = [*JOIN1A7B,COND1A55]
      goto FOREACH1826
    ASSIGN1A7F:  preds = [COND1A77]
      femData:MeshPos _t1A7E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A7E
      goto JOIN1A7B
    ASSIGN1A82:  preds = [FOREACH1826]
      femData:MeshPos _t1A81#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A81
}
## input initialization
  ENTRY156E:  preds = []
    real isoval156F#1 = 0.2e0;
    globals.isoval1551 = isoval156F;
    real thick1572#1 = 0.7e-1;
    globals.thick1552 = thick1572;
    real _t1575#1 = -0.5e0;
    real _t1577#5 = 0.5e0;
    tensor[3] camEye1579#1 = <tensor[3]>[_t1575,_t1577,_t1577];
    globals.camEye1553 = camEye1579;
    tensor[3] camAt157C#1 = <tensor[3]>[_t1577,_t1577,_t1577];
    globals.camAt1554 = camAt157C;
    real _t157F#2 = 0.e0;
    real _t1581#2 = 0.1e1;
    tensor[3] camUp1583#2 = <tensor[3]>[_t157F,_t157F,_t1581];
    globals.camUp1555 = camUp1583;
    real camFOV1586#1 = 0.137e2;
    globals.camFOV1556 = camFOV1586;
    int iresU1589#2 = 10;
    globals.iresU1557 = iresU1589;
    globals.iresV1558 = iresU1589;
    real camNear158D#1 = -0.2e1;
    globals.camNear1559 = camNear158D;
    real camFar1590#1 = 0.5e1;
    globals.camFar155A = camFar1590;
    globals.refStep155B = _t1581;
    real rayStep1594#1 = 0.1e-1;
    globals.rayStep155C = rayStep1594;
    globals.lightVsp155D = camUp1583;
    real phongKa1598#1 = 0.1e0;
    globals.phongKa155E = phongKa1598;
    real phongKd159B#1 = 0.9e0;
    globals.phongKd155F = phongKd159B;
    bool debug159E#1 = false;
    globals.debug1560 = debug159E;
    int debugU15A1#1 = 8;
    globals.debugU1561 = debugU15A1;
    int debugV15A4#1 = 2;
    globals.debugV1562 = debugV15A4;
    real eps15A7#1 = 0.1e-8;
    globals.eps1563 = eps15A7;
    return
## global-variable initialization
  ENTRY15AB:  preds = []
    femData:Mesh a15AC#3 = globals.a154E;
    femData:Space 0b0450_intermedateGlobal15AE#1 = globals.0b0450_intermedateGlobal154F;
    femData:FemFunc 0c0452_intermedateGlobal15B0#1 = globals.0c0452_intermedateGlobal1550;
    tensor[3] camEye15B2#1 = globals.camEye1553;
    tensor[3] camAt15B4#1 = globals.camAt1554;
    tensor[3] camUp15B6#3 = globals.camUp1555;
    real camFOV15B8#1 = globals.camFOV1556;
    int iresU15BA#1 = globals.iresU1557;
    int iresV15BC#1 = globals.iresV1558;
    int _t15BE#1 = 0;
    int _t15C0#1 = 1;
    int _t15C2#1 = ExtractFemItem<int,NumCell(Mesh)>(a15AC);
    int _t15C4#1 = ISub(_t15C2,_t15C0);
    int[] _t15C6#1 = Range(_t15BE,_t15C4);
    femData:MeshCell[] _t15C8#1 = <femData:MeshCell[]>{};
  FOREACH15CB:  preds = [ASSIGN15C9,NEXT15D1]
    foreach (_t15CA in _t15C6) on exit goto GASSIGN15D2
      femData:MeshCell[] _t15CF#2 = phi(_t15C8,_t15CE)
    femData:MeshCell _t15CC#1 = LoadFem<femData:MeshCell>(a15AC,_t15CA);
    femData:MeshCell[] _t15CE#1 = Append<femData:MeshCell>(_t15CF,_t15CC);
    goto FOREACH15CB
  GASSIGN15D2:  preds = [FOREACH15CB]
    globals.0cell_a1567 = _t15CF;
    femData:Space b15D3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal15AE,a15AC);
    femData:FemFunc c15D5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal15B0,b15D3);
    globals.c1568 = c15D5;
    tensor[3] op1_e3_l_415D8#9 = VSub<3>(camAt15B4,camEye15B2);
    real op1_e3_l_615DB#1 = VDot<3>(op1_e3_l_415D8,op1_e3_l_415D8);
    real op1_e3_l_715DE#3 = Sqrt(op1_e3_l_615DB);
    real realLit15E2#1 = 0.1e1;
    real op1_e3_l_915E1#6 = RDiv(realLit15E2,op1_e3_l_715DE);
    tensor[3] camN15E6#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_415D8);
    real realLit15EA#3 = 0.e0;
    real r15EB#3 = TensorIndex<tensor[3],[0]>(camUp15B6);
    real r15EC#3 = RMul(realLit15EA,r15EB);
    real r15ED#3 = TensorIndex<tensor[3],[1]>(camUp15B6);
    real r15EE#3 = RMul(realLit15EA,r15ED);
    real r15EF#3 = TensorIndex<tensor[3],[2]>(camUp15B6);
    real r15F0#5 = RMul(realLit15EA,r15EF);
    real r15F1#3 = RAdd(r15EC,r15EE);
    real r15F2#3 = RAdd(r15F1,r15F0);
    real realLit15F3#3 = 0.1e1;
    real r15F4#1 = RMul(realLit15F3,r15EF);
    real r15F5#1 = RAdd(r15F1,r15F4);
    real realLit15F6#3 = -0.1e1;
    real r15F7#1 = RMul(realLit15F6,r15ED);
    real r15F8#1 = RAdd(r15EC,r15F7);
    real r15F9#1 = RAdd(r15F8,r15F0);
    tensor[3] tensor15FA#1 = <tensor[3]>[r15F2,r15F5,r15F9];
    real r15FB#1 = RMul(realLit15F6,r15EF);
    real r15FC#1 = RAdd(r15F1,r15FB);
    real r15FD#1 = RMul(realLit15F3,r15EB);
    real r15FE#1 = RAdd(r15FD,r15EE);
    real r15FF#1 = RAdd(r15FE,r15F0);
    tensor[3] tensor1600#1 = <tensor[3]>[r15FC,r15F2,r15FF];
    real r1601#1 = RMul(realLit15F3,r15ED);
    real r1602#1 = RAdd(r15EC,r1601);
    real r1603#1 = RAdd(r1602,r15F0);
    real r1604#1 = RMul(realLit15F6,r15EB);
    real r1605#1 = RAdd(r1604,r15EE);
    real r1606#1 = RAdd(r1605,r15F0);
    tensor[3] tensor1607#1 = <tensor[3]>[r1603,r1606,r15F2];
    tensor[3,3] op1_e3_l_1515E9#3 = <tensor[3,3]>[tensor15FA,tensor1600,tensor1607];
    tensor[3] projParam1629#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1515E9);
    real vdot162A#1 = VDot<3>(op1_e3_l_415D8,projParam1629);
    tensor[3] projParam162B#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1515E9);
    real vdot162C#1 = VDot<3>(op1_e3_l_415D8,projParam162B);
    tensor[3] projParam162D#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1515E9);
    real vdot162E#1 = VDot<3>(op1_e3_l_415D8,projParam162D);
    tensor[3] op1_e3_l_171628#6 = <tensor[3]>[vdot162A,vdot162C,vdot162E];
    real op1_e3_l_341637#1 = VDot<3>(op1_e3_l_171628,op1_e3_l_171628);
    real r163B#1 = RMul(op1_e3_l_915E1,op1_e3_l_915E1);
    real op1_e3_l_35163A#1 = RMul(r163B,op1_e3_l_341637);
    real op1_e3_l_36163F#1 = Sqrt(op1_e3_l_35163A);
    tensor[3] op1_e3_l_371642#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_171628);
    real realLit1646#1 = 0.1e1;
    real op1_e3_l_381645#2 = RDiv(realLit1646,op1_e3_l_36163F);
    tensor[3] camU164A#1 = VScale<3>(op1_e3_l_381645,op1_e3_l_371642);
    globals.camU1569 = camU164A;
    real realLit164F#3 = 0.e0;
    real r1650#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_415D8);
    real r1651#3 = RMul(realLit164F,r1650);
    real r1652#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_415D8);
    real r1653#3 = RMul(realLit164F,r1652);
    real r1654#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_415D8);
    real r1655#5 = RMul(realLit164F,r1654);
    real r1656#3 = RAdd(r1651,r1653);
    real r1657#3 = RAdd(r1656,r1655);
    real realLit1658#3 = 0.1e1;
    real r1659#1 = RMul(realLit1658,r1654);
    real r165A#1 = RAdd(r1656,r1659);
    real realLit165B#3 = -0.1e1;
    real r165C#1 = RMul(realLit165B,r1652);
    real r165D#1 = RAdd(r1651,r165C);
    real r165E#1 = RAdd(r165D,r1655);
    tensor[3] tensor165F#1 = <tensor[3]>[r1657,r165A,r165E];
    real r1660#1 = RMul(realLit165B,r1654);
    real r1661#1 = RAdd(r1656,r1660);
    real r1662#1 = RMul(realLit1658,r1650);
    real r1663#1 = RAdd(r1662,r1653);
    real r1664#1 = RAdd(r1663,r1655);
    tensor[3] tensor1665#1 = <tensor[3]>[r1661,r1657,r1664];
    real r1666#1 = RMul(realLit1658,r1652);
    real r1667#1 = RAdd(r1651,r1666);
    real r1668#1 = RAdd(r1667,r1655);
    real r1669#1 = RMul(realLit165B,r1650);
    real r166A#1 = RAdd(r1669,r1653);
    real r166B#1 = RAdd(r166A,r1655);
    tensor[3] tensor166C#1 = <tensor[3]>[r1668,r166B,r1657];
    tensor[3,3] op1_e3_l_45164E#3 = <tensor[3,3]>[tensor165F,tensor1665,tensor166C];
    tensor[3] projParam168E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_45164E);
    real vdot168F#1 = VDot<3>(op1_e3_l_171628,projParam168E);
    tensor[3] projParam1690#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_45164E);
    real vdot1691#1 = VDot<3>(op1_e3_l_171628,projParam1690);
    tensor[3] projParam1692#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_45164E);
    real vdot1693#1 = VDot<3>(op1_e3_l_171628,projParam1692);
    tensor[3] op1_e3_l_47168D#1 = <tensor[3]>[vdot168F,vdot1691,vdot1693];
    tensor[3] op1_e3_l_50169C#3 = VScale<3>(op1_e3_l_915E1,op1_e3_l_47168D);
    real r16A0#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_50169C);
    real r16A1#3 = RMul(op1_e3_l_381645,op1_e3_l_915E1);
    real r16A2#1 = RMul(r16A1,r16A0);
    real r16A3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_50169C);
    real r16A4#1 = RMul(r16A1,r16A3);
    real r16A5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_50169C);
    real r16A6#1 = RMul(r16A1,r16A5);
    tensor[3] camV169F#1 = <tensor[3]>[r16A2,r16A4,r16A6];
    globals.camV156A = camV169F;
    real _t16B1#1 = 0.314159265358979323846264338327950288e1;
    real _t16B3#1 = 0.36e3;
    real op1_e3_l_516B5#1 = RMul(camFOV15B8,_t16B1);
    real op1_e3_l_616B8#1 = RDiv(op1_e3_l_516B5,_t16B3);
    real op1_e3_l_1016BB#2 = Tan(op1_e3_l_616B8);
    real camVmax16BE#1 = RMul(op1_e3_l_1016BB,op1_e3_l_715DE);
    globals.camVmax156B = camVmax16BE;
    real _t16C2#1 = IntToReal(iresU15BA);
    real _t16C4#1 = IntToReal(iresV15BC);
    real r16C7#1 = RMul(_t16C2,op1_e3_l_1016BB);
    real op1_e3_l_1416C6#1 = RMul(r16C7,op1_e3_l_715DE);
    real camUmax16CB#1 = RDiv(op1_e3_l_1416C6,_t16C4);
    globals.camUmax156C = camUmax16CB;
    globals.rayVec156D = camN15E6;
    return
## strand
  strand ray (int ui16D1#3, int vi16D2#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY16E7:  preds = []
        femData:MeshCell[] 0cell_a16E8#1 = globals.0cell_a1567;
        femData:FemFunc c16EA#1 = globals.c1568;
        tensor[3] camEye16EC#1 = globals.camEye1553;
        int iresU16EE#2 = globals.iresU1557;
        int iresV16F0#3 = globals.iresV1558;
        int[] indecies16F2#2 = globals.indecies1564;
        tensor[2][] times16F4#1 = globals.times1565;
        tensor[3] camU16F6#1 = globals.camU1569;
        tensor[3] camV16F8#1 = globals.camV156A;
        real camVmax16FA#2 = globals.camVmax156B;
        real camUmax16FC#2 = globals.camUmax156C;
        real _t16FE#5 = -0.5e0;
        real _t1700#1 = IntToReal(ui16D1);
        real _t1702#1 = IntToReal(iresU16EE);
        real _t1704#3 = 0.5e0;
        real op1_e3_l_61706#1 = RSub(_t1702,_t1704);
        real op1_e3_l_71709#1 = RSub(_t1700,_t16FE);
        real op1_e3_l_8170C#1 = RSub(op1_e3_l_61706,_t16FE);
        real op1_e3_l_9170F#2 = RNeg(camUmax16FC);
        real op1_e3_l_101712#1 = RDiv(op1_e3_l_71709,op1_e3_l_8170C);
        real op1_e3_l_111715#1 = RSub(camUmax16FC,op1_e3_l_9170F);
        real op1_e3_l_131718#1 = RMul(op1_e3_l_101712,op1_e3_l_111715);
        real rayU171B#2 = RAdd(op1_e3_l_9170F,op1_e3_l_131718);
        real _t171E#1 = IntToReal(vi16D2);
        real _t1720#2 = IntToReal(iresV16F0);
        real op1_e3_l_61722#1 = RSub(_t1720,_t1704);
        real op1_e3_l_71725#2 = RSub(_t171E,_t16FE);
        real op1_e3_l_81728#1 = RSub(op1_e3_l_61722,_t16FE);
        real op1_e3_l_9172B#3 = RNeg(camVmax16FA);
        real op1_e3_l_10172E#1 = RDiv(op1_e3_l_71725,op1_e3_l_81728);
        real op1_e3_l_111731#2 = RSub(camVmax16FA,op1_e3_l_9172B);
        real op1_e3_l_131734#1 = RMul(op1_e3_l_10172E,op1_e3_l_111731);
        real rayV1737#1 = RAdd(op1_e3_l_9172B,op1_e3_l_131734);
        real op1_e3_l_23173A#1 = RSub(_t1720,_t1704);
        real op1_e3_l_25173D#1 = RSub(op1_e3_l_23173A,_t16FE);
        real op1_e3_l_271740#1 = RDiv(op1_e3_l_71725,op1_e3_l_25173D);
        real op1_e3_l_301743#1 = RMul(op1_e3_l_271740,op1_e3_l_111731);
        real op1_e3_l_311746#1 = RAdd(op1_e3_l_9172B,op1_e3_l_301743);
        tensor[3] op1_e3_l_321749#2 = VScale<3>(rayU171B,camU16F6);
        tensor[3] op1_e3_l_33174C#2 = VScale<3>(op1_e3_l_311746,camV16F8);
        tensor[3] UV174F#1 = VAdd<3>(op1_e3_l_321749,op1_e3_l_33174C);
        tensor[3] v1753#1 = VAdd<3>(camEye16EC,op1_e3_l_321749);
        tensor[3] rayOrig1752#1 = VAdd<3>(v1753,op1_e3_l_33174C);
        int _t1757#2 = IMul(ui16D1,iresV16F0);
        int _t1759#1 = IAdd(_t1757,vi16D2);
        int offset175B#2 = Subscript<int[]>(indecies16F2,_t1759);
        int _t175D#1 = IMul(iresU16EE,iresV16F0);
        int _t175F#1 = IAdd(_t175D,_t1757);
        int _t1761#1 = IAdd(_t175F,vi16D2);
        int len1763#1 = Subscript<int[]>(indecies16F2,_t1761);
        int itter1765#4 = 0;
        int idx1767#2 = offset175B;
        tensor[2] interval1769#3 = Subscript<tensor[2][]>(times16F4,idx1767);
        real s176B#1 = VIndex<2,0>(interval1769);
        real e176D#1 = VIndex<2,1>(interval1769);
        femData:MeshCell cc176F#2 = Subscript<femData:MeshCell[]>(0cell_a16E8,itter1765);
        int _t1771#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc176F);
        femData:FuncCell _t1773#1 = LoadFem<femData:FuncCell>(c16EA,_t1771);
        tensor[2][0] _t1775#1 = <tensor[2][0]>{};
        tensor[2][] _t1777#1 = MkDynamic<tensor[2],0>(_t1775);
        tensor[2,3][0] _t1779#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t177B#1 = MkDynamic<tensor[2,3],0>(_t1779);
        femData:MeshCell[0] _t177D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t177F#1 = MkDynamic<femData:MeshCell,0>(_t177D);
        self.rayU = rayU171B;
        self.rayV = rayV1737;
        self.UV = UV174F;
        self.rayOrig = rayOrig1752;
        self.offset = offset175B;
        self.len = len1763;
        self.itter = itter1765;
        self.idx = idx1767;
        self.interval = interval1769;
        self.s = s176B;
        self.e = e176D;
        self.cc = cc176F;
        self.fc = _t1773;
        self.intervals = _t1777;
        self.sints = _t177B;
        self.newCells = _t177F;
        self.count = itter1765;
        self.totalCount = itter1765;
        self.ui = ui16D1;
        self.vi = vi16D2;
        return
    end state init
    method start
        ENTRY1796:  preds = []
          femData:MeshCell[] 0cell_a1797#1 = globals.0cell_a1567;
          femData:FemFunc c1799#1 = globals.c1568;
          bool debug179B#1 = globals.debug1560;
          int debugU179D#1 = globals.debugU1561;
          int debugV179F#1 = globals.debugV1562;
          int[] cells17A1#1 = globals.cells1566;
          int len17A3#1 = self.len;
          int idx17A5#1 = self.idx;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug179B then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,debugU179D);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN17CA
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN17CA]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          int _t17B8#1 = 0;
          bool _t17BA#1 = EQ<int>(len17A3,_t17B8);
          if _t17BA then goto STABILIZE17BD else goto JOIN17BE
        STABILIZE17BD:  preds = [COND17BC]
          stabilize
          goto JOIN17BE
        JOIN17BE:  preds = [*STABILIZE17BD,COND17BC]
          int _t17BF#1 = Subscript<int[]>(cells17A1,idx17A5);
          femData:MeshCell cc17C1#2 = Subscript<femData:MeshCell[]>(0cell_a1797,_t17BF);
          int _t17C3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17C1);
          femData:FuncCell _t17C5#1 = LoadFem<femData:FuncCell>(c1799,_t17C3);
          self.cc = cc17C1;
          self.fc = _t17C5;
          active
        ASSIGN17CA:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,debugV179F);
          goto JOIN17B3
    end start
    method update
        ENTRY17CB:  preds = []
          femData:MeshCell[] 0cell_a17CC#1 = globals.0cell_a1567;
          femData:FemFunc c17CE#1 = globals.c1568;
          tensor[2][] times17D0#1 = globals.times1565;
          int[] cells17D2#1 = globals.cells1566;
          tensor[3] rayVec17D4#5 = globals.rayVec156D;
          tensor[3] rayOrig17D6#2 = self.rayOrig;
          int offset17D8#1 = self.offset;
          int len17DA#2 = self.len;
          int itter17DC#2 = self.itter;
          tensor[2] interval17DE#1 = self.interval;
          real s17E0#5 = self.s;
          real e17E2#3 = self.e;
          femData:MeshCell cc17E4#6 = self.cc;
          femData:FuncCell fc17E6#3 = self.fc;
          tensor[2][] intervals17E8#2 = self.intervals;
          tensor[2,3][] sints17EA#2 = self.sints;
          femData:MeshCell[] newCells17EC#2 = self.newCells;
          int count17EE#3 = self.count;
          int totalCount17F0#2 = self.totalCount;
          int ui17F2#3 = self.ui;
          int vi17F4#3 = self.vi;
          int _t17F6#8 = 1;
          bool _t17F8#1 = LT<int>(len17DA,_t17F6);
          if _t17F8 then goto STABILIZE17FB else goto JOIN17FC
        STABILIZE17FB:  preds = [COND17FA]
          stabilize
          goto JOIN17FC
        JOIN17FC:  preds = [*STABILIZE17FB,COND17FA]
          tensor[3] op1_e3_l_317FD#1 = VScale<3>(s17E0,rayVec17D4);
          tensor[3] rayStart1800#4 = VAdd<3>(rayOrig17D6,op1_e3_l_317FD);
          real _t1803#1 = VIndex<3,0>(rayStart1800);
          real _t1805#1 = VIndex<3,1>(rayStart1800);
          tensor[2] project1807#2 = <tensor[2]>[_t1803,_t1805];
          femData:FemFunc _t1809#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc17E6);
          femData:Space _t180B#6 = ExtractFem<femData:Space,femData:FemFunc>(_t1809);
          int _t180D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc17E6);
          femData:Mesh _t180F#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc17E4);
          int _t1811#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17E4);
          real _t1813#2 = VIndex<3,2>(rayStart1800);
          femData:MeshPos callNewtonPos1815#1 = _0A3A_msh_newtonInverse1816 (project1807,_t1811,_t180F);
          tensor[2] refPos1A85#10 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1815);
          int ilit1A88#1 = 6;
          int mulRes1A89#6 = IMul(_t180D,ilit1A88);
          int ilit1A8A#1 = 0;
          int addRes1A8B#1 = IAdd(mulRes1A89,ilit1A8A);
          int idx1A8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8B);
          int ilit1A8D#1 = 1;
          int addRes1A8E#1 = IAdd(mulRes1A89,ilit1A8D);
          int idx1A8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8E);
          int ilit1A90#1 = 2;
          int addRes1A91#1 = IAdd(mulRes1A89,ilit1A90);
          int idx1A92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A91);
          int ilit1A93#1 = 3;
          int addRes1A94#1 = IAdd(mulRes1A89,ilit1A93);
          int idx1A95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A94);
          int ilit1A96#1 = 4;
          int addRes1A97#1 = IAdd(mulRes1A89,ilit1A96);
          int idx1A98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A97);
          int ilit1A99#1 = 5;
          int addRes1A9A#1 = IAdd(mulRes1A89,ilit1A99);
          int idx1A9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A9A);
          int[6] seq1A9C#1 = <int[6]>{idx1A8C,idx1A8F,idx1A92,idx1A95,idx1A98,idx1A9B};
          int[6] femIndicies1A87#6 = seq1A9C;
          int ilit1AB4#7 = 1;
          int ilit1AB5#1 = 0;
          int idx1AB6#1 = Subscript<int>(femIndicies1A87,ilit1AB5);
          int mulRes1AB7#1 = IMul(ilit1AB4,idx1AB6);
          int idx1AB8#1 = Subscript<int>(femIndicies1A87,ilit1AB4);
          int mulRes1AB9#1 = IMul(ilit1AB4,idx1AB8);
          int ilit1ABA#1 = 2;
          int idx1ABB#1 = Subscript<int>(femIndicies1A87,ilit1ABA);
          int mulRes1ABC#1 = IMul(ilit1AB4,idx1ABB);
          int ilit1ABD#1 = 3;
          int idx1ABE#1 = Subscript<int>(femIndicies1A87,ilit1ABD);
          int mulRes1ABF#1 = IMul(ilit1AB4,idx1ABE);
          int ilit1AC0#1 = 4;
          int idx1AC1#1 = Subscript<int>(femIndicies1A87,ilit1AC0);
          int mulRes1AC2#1 = IMul(ilit1AB4,idx1AC1);
          int ilit1AC3#1 = 5;
          int idx1AC4#1 = Subscript<int>(femIndicies1A87,ilit1AC3);
          int mulRes1AC5#1 = IMul(ilit1AB4,idx1AC4);
          real dof1AC6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB7);
          real dof1AC7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB9);
          real dof1AC8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABC);
          real dof1AC9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABF);
          real dof1ACA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC2);
          real dof1ACB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC5);
          tensor[6] dofs1ACC#1 = <tensor[6]>[dof1AC6,dof1AC7,dof1AC8,dof1AC9,dof1ACA,dof1ACB];
          tensor[6] femDofs1AB3#9 = dofs1ACC;
          real varAcc1AE8#2 = VIndex<2,0>(refPos1A85);
          real varAcc1AE9#2 = VIndex<2,1>(refPos1A85);
          real coeff1AEA#2 = 0.2e1;
          real iden1AEB#3 = varAcc1AE8;
          real prod21AEC#1 = RMul(iden1AEB,varAcc1AE8);
          real one1AED#7 = 0.1e1;
          real prod1AEE#2 = RMul(prod21AEC,one1AED);
          real coeff1AEF#3 = 0.4e1;
          real iden1AF0#3 = varAcc1AE9;
          real prod1AF1#2 = RMul(iden1AEB,iden1AF0);
          real coeff1AF2#2 = -0.3e1;
          real prod1AF3#3 = RMul(iden1AEB,one1AED);
          real prod21AF4#1 = RMul(iden1AF0,varAcc1AE9);
          real prod1AF5#2 = RMul(one1AED,prod21AF4);
          real prod1AF6#3 = RMul(one1AED,iden1AF0);
          real prod1AF7#1 = RMul(one1AED,one1AED);
          real mult1AF8#1 = RMul(one1AED,prod1AF7);
          real mult1AF9#1 = RMul(coeff1AF2,prod1AF6);
          real mult1AFA#2 = RMul(coeff1AEA,prod1AF5);
          real mult1AFB#1 = RMul(coeff1AF2,prod1AF3);
          real mult1AFC#2 = RMul(coeff1AEF,prod1AF1);
          real mult1AFD#2 = RMul(coeff1AEA,prod1AEE);
          real sum1AFE#1 = RAdd(mult1AFC,mult1AFD);
          real sum1AFF#1 = RAdd(mult1AFB,sum1AFE);
          real sum1B00#1 = RAdd(mult1AFA,sum1AFF);
          real sum1B01#1 = RAdd(mult1AF9,sum1B00);
          real sum1B02#1 = RAdd(mult1AF8,sum1B01);
          real intermediate1B03#1 = sum1B02;
          real coeff1B04#2 = -0.1e1;
          real mult1B05#1 = RMul(coeff1B04,prod1AF3);
          real sum1B06#1 = RAdd(mult1B05,mult1AFD);
          real intermediate1B07#1 = sum1B06;
          real mult1B08#1 = RMul(coeff1B04,prod1AF6);
          real sum1B09#1 = RAdd(mult1B08,mult1AFA);
          real intermediate1B0A#1 = sum1B09;
          real coeff1B0B#3 = -0.4e1;
          real mult1B0C#1 = RMul(coeff1AEF,prod1AF6);
          real mult1B0D#1 = RMul(coeff1B0B,prod1AF5);
          real mult1B0E#2 = RMul(coeff1B0B,prod1AF1);
          real sum1B0F#1 = RAdd(mult1B0D,mult1B0E);
          real sum1B10#1 = RAdd(mult1B0C,sum1B0F);
          real intermediate1B11#1 = sum1B10;
          real mult1B12#1 = RMul(coeff1AEF,prod1AF3);
          real mult1B13#1 = RMul(coeff1B0B,prod1AEE);
          real sum1B14#1 = RAdd(mult1B0E,mult1B13);
          real sum1B15#1 = RAdd(mult1B12,sum1B14);
          real intermediate1B16#1 = sum1B15;
          tensor[6] intermediateCons1B17#1 = <tensor[6]>[intermediate1B03,intermediate1B07,intermediate1B0A,mult1AFC,intermediate1B11,intermediate1B16];
          tensor[6] basisResult1AE7#1 = intermediateCons1B17;
          real compositionl1B49#1 = VDot<6>(femDofs1AB3,basisResult1AE7);
          real f01B4C#5 = RSub(compositionl1B49,_t1813);
          real _t1B4F#1 = VIndex<3,0>(rayVec17D4);
          real _t1B51#1 = VIndex<3,1>(rayVec17D4);
          tensor[2] _t1B53#2 = <tensor[2]>[_t1B4F,_t1B51];
          real varAcc1B56#1 = VIndex<2,0>(refPos1A85);
          real varAcc1B57#1 = VIndex<2,1>(refPos1A85);
          real coeff1B58#3 = 0.4e1;
          real iden1B59#1 = varAcc1B56;
          real one1B5A#4 = 0.1e1;
          real prod1B5B#3 = RMul(iden1B59,one1B5A);
          real iden1B5C#1 = varAcc1B57;
          real prod1B5D#3 = RMul(one1B5A,iden1B5C);
          real coeff1B5E#1 = -0.3e1;
          real prod1B5F#3 = RMul(one1B5A,one1B5A);
          real mult1B60#1 = RMul(coeff1B5E,prod1B5F);
          real mult1B61#3 = RMul(coeff1B58,prod1B5D);
          real mult1B62#3 = RMul(coeff1B58,prod1B5B);
          real sum1B63#1 = RAdd(mult1B61,mult1B62);
          real sum1B64#2 = RAdd(mult1B60,sum1B63);
          real intermediate1B65#1 = sum1B64;
          real coeff1B66#1 = -0.1e1;
          real mult1B67#2 = RMul(coeff1B66,prod1B5F);
          real sum1B68#1 = RAdd(mult1B67,mult1B62);
          real intermediate1B69#1 = sum1B68;
          real basisEval1B6A#2 = 0.e0;
          real coeff1B6B#2 = -0.4e1;
          real basisEval1B6C#2 = RMul(coeff1B6B,prod1B5D);
          real coeff1B6D#2 = -0.8e1;
          real mult1B6E#2 = RMul(coeff1B58,prod1B5F);
          real mult1B6F#1 = RMul(coeff1B6D,prod1B5B);
          real sum1B70#1 = RAdd(basisEval1B6C,mult1B6F);
          real sum1B71#1 = RAdd(mult1B6E,sum1B70);
          real intermediate1B72#1 = sum1B71;
          real intermediate1B73#1 = sum1B64;
          real sum1B74#1 = RAdd(mult1B67,mult1B61);
          real intermediate1B75#1 = sum1B74;
          real mult1B76#1 = RMul(coeff1B6D,prod1B5D);
          real mult1B77#2 = RMul(coeff1B6B,prod1B5B);
          real sum1B78#1 = RAdd(mult1B76,mult1B77);
          real sum1B79#1 = RAdd(mult1B6E,sum1B78);
          real intermediate1B7A#1 = sum1B79;
          tensor[6] intermediateCons1B7B#1 = <tensor[6]>[intermediate1B65,intermediate1B69,basisEval1B6A,mult1B61,basisEval1B6C,intermediate1B72];
          tensor[6] intermediateCons1B7C#1 = <tensor[6]>[intermediate1B73,basisEval1B6A,intermediate1B75,mult1B62,intermediate1B7A,mult1B77];
          tensor[2,6] intermediateCons1B7D#1 = <tensor[2,6]>[intermediateCons1B7B,intermediateCons1B7C];
          tensor[2,6] basisResult1B55#2 = intermediateCons1B7D;
          tensor[6] projParam1BA8#1 = ProjectLast<tensor[2,6],[0]>(basisResult1B55);
          real vdot1BA9#1 = VDot<6>(femDofs1AB3,projParam1BA8);
          tensor[6] projParam1BAA#1 = ProjectLast<tensor[2,6],[1]>(basisResult1B55);
          real vdot1BAB#1 = VDot<6>(femDofs1AB3,projParam1BAA);
          tensor[2] compositionl1BA7#6 = <tensor[2]>[vdot1BA9,vdot1BAB];
          int ilit1BB3#1 = 3;
          int mulRes1BB4#3 = IMul(_t1811,ilit1BB3);
          int ilit1BB5#1 = 0;
          int addRes1BB6#1 = IAdd(mulRes1BB4,ilit1BB5);
          int idx1BB7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB6);
          int ilit1BB8#1 = 1;
          int addRes1BB9#1 = IAdd(mulRes1BB4,ilit1BB8);
          int idx1BBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB9);
          int ilit1BBB#1 = 2;
          int addRes1BBC#1 = IAdd(mulRes1BB4,ilit1BBB);
          int idx1BBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BBC);
          int[3] seq1BBE#1 = <int[3]>{idx1BB7,idx1BBA,idx1BBD};
          int[3] femIndicies1BB2#3 = seq1BBE;
          int ilit1BCD#4 = 0;
          int ilit1BCE#4 = 2;
          int idx1BCF#1 = Subscript<int>(femIndicies1BB2,ilit1BCD);
          int mulRes1BD0#2 = IMul(ilit1BCE,idx1BCF);
          int addRes1BD1#1 = IAdd(ilit1BCD,mulRes1BD0);
          int ilit1BD2#4 = 1;
          int addRes1BD3#1 = IAdd(ilit1BD2,mulRes1BD0);
          real dof_load1BD4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD1);
          real dof_load1BD5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD3);
          tensor[2] interCons1BD6#1 = <tensor[2]>[dof_load1BD4,dof_load1BD5];
          int idx1BD7#1 = Subscript<int>(femIndicies1BB2,ilit1BD2);
          int mulRes1BD8#2 = IMul(ilit1BCE,idx1BD7);
          int addRes1BD9#1 = IAdd(ilit1BCD,mulRes1BD8);
          int addRes1BDA#1 = IAdd(ilit1BD2,mulRes1BD8);
          real dof_load1BDB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD9);
          real dof_load1BDC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BDA);
          tensor[2] interCons1BDD#1 = <tensor[2]>[dof_load1BDB,dof_load1BDC];
          int idx1BDE#1 = Subscript<int>(femIndicies1BB2,ilit1BCE);
          int mulRes1BDF#2 = IMul(ilit1BCE,idx1BDE);
          int addRes1BE0#1 = IAdd(ilit1BCD,mulRes1BDF);
          int addRes1BE1#1 = IAdd(ilit1BD2,mulRes1BDF);
          real dof_load1BE2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE0);
          real dof_load1BE3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE1);
          tensor[2] interCons1BE4#1 = <tensor[2]>[dof_load1BE2,dof_load1BE3];
          tensor[3,2] dofs1BE5#1 = <tensor[3,2]>[interCons1BD6,interCons1BDD,interCons1BE4];
          tensor[3,2] femDofs1BCC#36 = dofs1BE5;
          real varAcc1C01#0 = VIndex<2,0>(refPos1A85);
          real varAcc1C02#0 = VIndex<2,1>(refPos1A85);
          real coeff1C03#1 = -0.1e1;
          real one1C04#3 = 0.1e1;
          real prod1C05#2 = RMul(one1C04,one1C04);
          real basisEval1C06#2 = RMul(coeff1C03,prod1C05);
          real basisEval1C07#2 = RMul(one1C04,prod1C05);
          real basisEval1C08#2 = 0.e0;
          tensor[3] intermediateCons1C09#1 = <tensor[3]>[basisEval1C06,basisEval1C07,basisEval1C08];
          tensor[3] intermediateCons1C0A#1 = <tensor[3]>[basisEval1C06,basisEval1C08,basisEval1C07];
          tensor[2,3] intermediateCons1C0B#1 = <tensor[2,3]>[intermediateCons1C09,intermediateCons1C0A];
          tensor[2,3] basisResult1C00#12 = intermediateCons1C0B;
          real r1C19#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r1C1A#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1C00);
          real r1C1B#1 = RMul(r1C19,r1C1A);
          real r1C1C#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r1C1D#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1C00);
          real r1C1E#1 = RMul(r1C1C,r1C1D);
          real r1C1F#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r1C20#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1C00);
          real r1C21#1 = RMul(r1C1F,r1C20);
          real r1C22#1 = RAdd(r1C1B,r1C1E);
          real r1C23#1 = RAdd(r1C22,r1C21);
          real r1C24#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1C00);
          real r1C25#1 = RMul(r1C19,r1C24);
          real r1C26#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1C00);
          real r1C27#1 = RMul(r1C1C,r1C26);
          real r1C28#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1C00);
          real r1C29#1 = RMul(r1C1F,r1C28);
          real r1C2A#1 = RAdd(r1C25,r1C27);
          real r1C2B#1 = RAdd(r1C2A,r1C29);
          tensor[2] tensor1C2C#1 = <tensor[2]>[r1C23,r1C2B];
          real r1C2D#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r1C2E#1 = RMul(r1C2D,r1C1A);
          real r1C2F#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r1C30#1 = RMul(r1C2F,r1C1D);
          real r1C31#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r1C32#1 = RMul(r1C31,r1C20);
          real r1C33#1 = RAdd(r1C2E,r1C30);
          real r1C34#1 = RAdd(r1C33,r1C32);
          real r1C35#1 = RMul(r1C2D,r1C24);
          real r1C36#1 = RMul(r1C2F,r1C26);
          real r1C37#1 = RMul(r1C31,r1C28);
          real r1C38#1 = RAdd(r1C35,r1C36);
          real r1C39#1 = RAdd(r1C38,r1C37);
          tensor[2] tensor1C3A#1 = <tensor[2]>[r1C34,r1C39];
          tensor[2,2] probe_l_81C18#4 = <tensor[2,2]>[tensor1C2C,tensor1C3A];
          real realLit1C60#4 = 0.e0;
          real r1C61#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_81C18);
          real r1C62#1 = RMul(realLit1C60,r1C61);
          real realLit1C63#2 = -0.1e1;
          real r1C64#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_81C18);
          real r1C65#1 = RMul(realLit1C63,r1C64);
          real r1C66#1 = RAdd(r1C62,r1C65);
          real r1C67#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_81C18);
          real r1C68#1 = RMul(realLit1C60,r1C67);
          real r1C69#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_81C18);
          real r1C6A#1 = RMul(realLit1C63,r1C69);
          real r1C6B#1 = RAdd(r1C68,r1C6A);
          tensor[2] tensor1C6C#1 = <tensor[2]>[r1C66,r1C6B];
          real realLit1C6D#2 = 0.1e1;
          real r1C6E#1 = RMul(realLit1C6D,r1C61);
          real r1C6F#1 = RMul(realLit1C60,r1C64);
          real r1C70#1 = RAdd(r1C6E,r1C6F);
          real r1C71#1 = RMul(realLit1C6D,r1C67);
          real r1C72#1 = RMul(realLit1C60,r1C69);
          real r1C73#1 = RAdd(r1C71,r1C72);
          tensor[2] tensor1C74#1 = <tensor[2]>[r1C70,r1C73];
          tensor[2,2] op1_e3_l_91C5F#4 = <tensor[2,2]>[tensor1C6C,tensor1C74];
          real r1C8D#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r1C8E#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1C00);
          real r1C8F#1 = RMul(r1C8D,r1C8E);
          real r1C90#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r1C91#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1C00);
          real r1C92#1 = RMul(r1C90,r1C91);
          real r1C93#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r1C94#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1C00);
          real r1C95#1 = RMul(r1C93,r1C94);
          real r1C96#1 = RAdd(r1C8F,r1C92);
          real r1C97#1 = RAdd(r1C96,r1C95);
          real r1C98#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r1C99#1 = RMul(r1C98,r1C8E);
          real r1C9A#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r1C9B#1 = RMul(r1C9A,r1C91);
          real r1C9C#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r1C9D#1 = RMul(r1C9C,r1C94);
          real r1C9E#1 = RAdd(r1C99,r1C9B);
          real r1C9F#1 = RAdd(r1C9E,r1C9D);
          tensor[2] probe_l_101C8C#3 = <tensor[2]>[r1C97,r1C9F];
          real r1CB6#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r1CB7#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1C00);
          real r1CB8#1 = RMul(r1CB6,r1CB7);
          real r1CB9#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r1CBA#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1C00);
          real r1CBB#1 = RMul(r1CB9,r1CBA);
          real r1CBC#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r1CBD#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1C00);
          real r1CBE#1 = RMul(r1CBC,r1CBD);
          real r1CBF#1 = RAdd(r1CB8,r1CBB);
          real r1CC0#1 = RAdd(r1CBF,r1CBE);
          real r1CC1#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r1CC2#1 = RMul(r1CC1,r1CB7);
          real r1CC3#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r1CC4#1 = RMul(r1CC3,r1CBA);
          real r1CC5#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r1CC6#1 = RMul(r1CC5,r1CBD);
          real r1CC7#1 = RAdd(r1CC2,r1CC4);
          real r1CC8#1 = RAdd(r1CC7,r1CC6);
          tensor[2] probe_l_111CB5#2 = <tensor[2]>[r1CC0,r1CC8];
          real realLit1CDF#2 = 0.e0;
          real r1CE0#2 = TensorIndex<tensor[2],[0]>(probe_l_111CB5);
          real r1CE1#1 = RMul(realLit1CDF,r1CE0);
          real realLit1CE2#1 = 0.1e1;
          real r1CE3#2 = TensorIndex<tensor[2],[1]>(probe_l_111CB5);
          real r1CE4#1 = RMul(realLit1CE2,r1CE3);
          real r1CE5#1 = RAdd(r1CE1,r1CE4);
          real realLit1CE6#1 = -0.1e1;
          real r1CE7#1 = RMul(realLit1CE6,r1CE0);
          real r1CE8#1 = RMul(realLit1CDF,r1CE3);
          real r1CE9#1 = RAdd(r1CE7,r1CE8);
          tensor[2] op1_e3_l_121CDE#3 = <tensor[2]>[r1CE5,r1CE9];
          real realLit1CF8#4 = 0.e0;
          real r1CF9#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_91C5F);
          real r1CFA#1 = RMul(realLit1CF8,r1CF9);
          real realLit1CFB#2 = -0.1e1;
          real r1CFC#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_91C5F);
          real r1CFD#1 = RMul(realLit1CFB,r1CFC);
          real r1CFE#1 = RAdd(r1CFA,r1CFD);
          real r1CFF#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_91C5F);
          real r1D00#1 = RMul(realLit1CF8,r1CFF);
          real r1D01#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_91C5F);
          real r1D02#1 = RMul(realLit1CFB,r1D01);
          real r1D03#1 = RAdd(r1D00,r1D02);
          tensor[2] tensor1D04#1 = <tensor[2]>[r1CFE,r1D03];
          real realLit1D05#2 = 0.1e1;
          real r1D06#1 = RMul(realLit1D05,r1CF9);
          real r1D07#1 = RMul(realLit1CF8,r1CFC);
          real r1D08#1 = RAdd(r1D06,r1D07);
          real r1D09#1 = RMul(realLit1D05,r1CFF);
          real r1D0A#1 = RMul(realLit1CF8,r1D01);
          real r1D0B#1 = RAdd(r1D09,r1D0A);
          tensor[2] tensor1D0C#1 = <tensor[2]>[r1D08,r1D0B];
          tensor[2,2] op1_e3_l_131CF7#8 = <tensor[2,2]>[tensor1D04,tensor1D0C];
          real op1_e3_l_141D24#10 = VDot<2>(probe_l_101C8C,op1_e3_l_121CDE);
          real r1D28#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_131CF7);
          real r1D29#1 = RDiv(r1D28,op1_e3_l_141D24);
          real r1D2A#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_131CF7);
          real r1D2B#1 = RDiv(r1D2A,op1_e3_l_141D24);
          tensor[2] tensor1D2C#1 = <tensor[2]>[r1D29,r1D2B];
          real r1D2D#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_131CF7);
          real r1D2E#1 = RDiv(r1D2D,op1_e3_l_141D24);
          real r1D2F#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_131CF7);
          real r1D30#1 = RDiv(r1D2F,op1_e3_l_141D24);
          tensor[2] tensor1D31#1 = <tensor[2]>[r1D2E,r1D30];
          tensor[2,2] op1_e3_l_151D27#16 = <tensor[2,2]>[tensor1D2C,tensor1D31];
          real r1D3F#2 = TensorIndex<tensor[2],[0]>(compositionl1BA7);
          real r1D40#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_151D27);
          real r1D41#1 = RMul(r1D3F,r1D40);
          real r1D42#2 = TensorIndex<tensor[2],[1]>(compositionl1BA7);
          real r1D43#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_151D27);
          real r1D44#1 = RMul(r1D42,r1D43);
          real r1D45#1 = RAdd(r1D41,r1D44);
          real r1D46#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_151D27);
          real r1D47#1 = RMul(r1D3F,r1D46);
          real r1D48#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_151D27);
          real r1D49#1 = RMul(r1D42,r1D48);
          real r1D4A#1 = RAdd(r1D47,r1D49);
          tensor[2] _t1D3E#2 = <tensor[2]>[r1D45,r1D4A];
          real _t1D59#2 = VIndex<3,2>(rayVec17D4);
          int _t1D5B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc17E4);
          real _t1D5D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t180F,_t1D5B);
          real r1D60#2 = TensorIndex<tensor[2],[0]>(compositionl1BA7);
          real r1D61#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_151D27);
          real r1D62#1 = RMul(r1D60,r1D61);
          real r1D63#2 = TensorIndex<tensor[2],[1]>(compositionl1BA7);
          real r1D64#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_151D27);
          real r1D65#1 = RMul(r1D63,r1D64);
          real r1D66#1 = RAdd(r1D62,r1D65);
          real r1D67#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_151D27);
          real r1D68#1 = RMul(r1D60,r1D67);
          real r1D69#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_151D27);
          real r1D6A#1 = RMul(r1D63,r1D69);
          real r1D6B#1 = RAdd(r1D68,r1D6A);
          tensor[2] op1_e3_l_191D5F#1 = <tensor[2]>[r1D66,r1D6B];
          real op1_e3_l_201D7A#1 = VDot<2>(_t1B53,op1_e3_l_191D5F);
          real op1_e3_l_211D7D#1 = RSub(op1_e3_l_201D7A,_t1D59);
          real op1_e3_l_221D80#1 = Abs<real>(op1_e3_l_211D7D);
          real _t1D83#1 = RDiv(op1_e3_l_221D80,_t1D5D);
          real _t1D86#1 = RSub(e17E2,s17E0);
          real gradEps1D89#6 = Min<real>(_t1D83,_t1D86);
          string _t1D8B#1 = "hmmmm:";
          string _t1D8D#18 = "\n";
          Print<[string,tensor[2],string]>(_t1D8B,_t1D3E,_t1D8D);
          string _t1D90#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t1D90,femDofs1AB3,_t1D8D);
          tensor[2] op1_e3_l_31D93#1 = VScale<2>(gradEps1D89,_t1B53);
          tensor[2] _t1D96#1 = VAdd<2>(project1807,op1_e3_l_31D93);
          femData:MeshPos callNewtonPos1D99#1 = _0A3A_msh_newtonInverse1816 (_t1D96,_t1811,_t180F);
          tensor[2] refPos1D9B#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1D99);
          real varAcc1D9E#2 = VIndex<2,0>(refPos1D9B);
          real varAcc1D9F#2 = VIndex<2,1>(refPos1D9B);
          real coeff1DA0#2 = 0.2e1;
          real iden1DA1#3 = varAcc1D9E;
          real prod21DA2#1 = RMul(iden1DA1,varAcc1D9E);
          real one1DA3#7 = 0.1e1;
          real prod1DA4#2 = RMul(prod21DA2,one1DA3);
          real coeff1DA5#3 = 0.4e1;
          real iden1DA6#3 = varAcc1D9F;
          real prod1DA7#2 = RMul(iden1DA1,iden1DA6);
          real coeff1DA8#2 = -0.3e1;
          real prod1DA9#3 = RMul(iden1DA1,one1DA3);
          real prod21DAA#1 = RMul(iden1DA6,varAcc1D9F);
          real prod1DAB#2 = RMul(one1DA3,prod21DAA);
          real prod1DAC#3 = RMul(one1DA3,iden1DA6);
          real prod1DAD#1 = RMul(one1DA3,one1DA3);
          real mult1DAE#1 = RMul(one1DA3,prod1DAD);
          real mult1DAF#1 = RMul(coeff1DA8,prod1DAC);
          real mult1DB0#2 = RMul(coeff1DA0,prod1DAB);
          real mult1DB1#1 = RMul(coeff1DA8,prod1DA9);
          real mult1DB2#2 = RMul(coeff1DA5,prod1DA7);
          real mult1DB3#2 = RMul(coeff1DA0,prod1DA4);
          real sum1DB4#1 = RAdd(mult1DB2,mult1DB3);
          real sum1DB5#1 = RAdd(mult1DB1,sum1DB4);
          real sum1DB6#1 = RAdd(mult1DB0,sum1DB5);
          real sum1DB7#1 = RAdd(mult1DAF,sum1DB6);
          real sum1DB8#1 = RAdd(mult1DAE,sum1DB7);
          real intermediate1DB9#1 = sum1DB8;
          real coeff1DBA#2 = -0.1e1;
          real mult1DBB#1 = RMul(coeff1DBA,prod1DA9);
          real sum1DBC#1 = RAdd(mult1DBB,mult1DB3);
          real intermediate1DBD#1 = sum1DBC;
          real mult1DBE#1 = RMul(coeff1DBA,prod1DAC);
          real sum1DBF#1 = RAdd(mult1DBE,mult1DB0);
          real intermediate1DC0#1 = sum1DBF;
          real coeff1DC1#3 = -0.4e1;
          real mult1DC2#1 = RMul(coeff1DA5,prod1DAC);
          real mult1DC3#1 = RMul(coeff1DC1,prod1DAB);
          real mult1DC4#2 = RMul(coeff1DC1,prod1DA7);
          real sum1DC5#1 = RAdd(mult1DC3,mult1DC4);
          real sum1DC6#1 = RAdd(mult1DC2,sum1DC5);
          real intermediate1DC7#1 = sum1DC6;
          real mult1DC8#1 = RMul(coeff1DA5,prod1DA9);
          real mult1DC9#1 = RMul(coeff1DC1,prod1DA4);
          real sum1DCA#1 = RAdd(mult1DC4,mult1DC9);
          real sum1DCB#1 = RAdd(mult1DC8,sum1DCA);
          real intermediate1DCC#1 = sum1DCB;
          tensor[6] intermediateCons1DCD#1 = <tensor[6]>[intermediate1DB9,intermediate1DBD,intermediate1DC0,mult1DB2,intermediate1DC7,intermediate1DCC];
          tensor[6] basisResult1D9D#1 = intermediateCons1DCD;
          real compositionl1DFF#1 = VDot<6>(femDofs1AB3,basisResult1D9D);
          real op1_e3_l_111E02#1 = RSub(compositionl1DFF,_t1813);
          real op1_e3_l_121E05#1 = RMul(gradEps1D89,_t1D59);
          real f11E08#4 = RSub(op1_e3_l_111E02,op1_e3_l_121E05);
          string _t1E0B#1 = "=========================\n";
          Print<[string]>(_t1E0B);
          string _t1E0E#1 = "Ui/Vi:";
          string _t1E10#2 = "/";
          Print<[string,int,string,int,string]>(_t1E0E,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t1E13#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1E13,cc17E4,_t1D8D);
          string _t1E16#1 = "hess:";
          real varAcc1E19#0 = VIndex<2,0>(refPos1A85);
          real varAcc1E1A#0 = VIndex<2,1>(refPos1A85);
          real coeff1E1B#1 = 0.4e1;
          real one1E1C#2 = 0.1e1;
          real prod1E1D#3 = RMul(one1E1C,one1E1C);
          real basisEval1E1E#6 = RMul(coeff1E1B,prod1E1D);
          real basisEval1E1F#8 = 0.e0;
          real coeff1E20#1 = -0.8e1;
          real basisEval1E21#2 = RMul(coeff1E20,prod1E1D);
          real coeff1E22#1 = -0.4e1;
          real basisEval1E23#2 = RMul(coeff1E22,prod1E1D);
          tensor[6] intermediateCons1E24#1 = <tensor[6]>[basisEval1E1E,basisEval1E1E,basisEval1E1F,basisEval1E1F,basisEval1E1F,basisEval1E21];
          tensor[6] intermediateCons1E25#2 = <tensor[6]>[basisEval1E1E,basisEval1E1F,basisEval1E1F,basisEval1E1E,basisEval1E23,basisEval1E23];
          tensor[6] intermediateCons1E26#1 = <tensor[6]>[basisEval1E1E,basisEval1E1F,basisEval1E1E,basisEval1E1F,basisEval1E21,basisEval1E1F];
          tensor[2,6] intermediateCons1E27#1 = <tensor[2,6]>[intermediateCons1E24,intermediateCons1E25];
          tensor[2,6] intermediateCons1E28#1 = <tensor[2,6]>[intermediateCons1E25,intermediateCons1E26];
          tensor[2,2,6] intermediateCons1E29#1 = <tensor[2,2,6]>[intermediateCons1E27,intermediateCons1E28];
          tensor[2,2,6] basisResult1E18#4 = intermediateCons1E29;
          tensor[6] projParam1E3D#1 = ProjectLast<tensor[2,2,6],[0,0]>(basisResult1E18);
          real vdot1E3E#1 = VDot<6>(femDofs1AB3,projParam1E3D);
          tensor[6] projParam1E3F#1 = ProjectLast<tensor[2,2,6],[0,1]>(basisResult1E18);
          real vdot1E40#1 = VDot<6>(femDofs1AB3,projParam1E3F);
          tensor[2] tensor1E41#1 = <tensor[2]>[vdot1E3E,vdot1E40];
          tensor[6] projParam1E42#1 = ProjectLast<tensor[2,2,6],[1,0]>(basisResult1E18);
          real vdot1E43#1 = VDot<6>(femDofs1AB3,projParam1E42);
          tensor[6] projParam1E44#1 = ProjectLast<tensor[2,2,6],[1,1]>(basisResult1E18);
          real vdot1E45#1 = VDot<6>(femDofs1AB3,projParam1E44);
          tensor[2] tensor1E46#1 = <tensor[2]>[vdot1E43,vdot1E45];
          tensor[2,2] compositionl1E3C#4 = <tensor[2,2]>[tensor1E41,tensor1E46];
          real r1E54#2 = TensorIndex<tensor[2,2],[0,0]>(compositionl1E3C);
          real r1E55#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_151D27);
          real r1E56#1 = RMul(r1E54,r1E55);
          real r1E57#2 = TensorIndex<tensor[2,2],[0,1]>(compositionl1E3C);
          real r1E58#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_151D27);
          real r1E59#1 = RMul(r1E57,r1E58);
          real r1E5A#1 = RAdd(r1E56,r1E59);
          real r1E5B#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_151D27);
          real r1E5C#1 = RMul(r1E54,r1E5B);
          real r1E5D#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_151D27);
          real r1E5E#1 = RMul(r1E57,r1E5D);
          real r1E5F#1 = RAdd(r1E5C,r1E5E);
          tensor[2] tensor1E60#1 = <tensor[2]>[r1E5A,r1E5F];
          real r1E61#2 = TensorIndex<tensor[2,2],[1,0]>(compositionl1E3C);
          real r1E62#1 = RMul(r1E61,r1E55);
          real r1E63#2 = TensorIndex<tensor[2,2],[1,1]>(compositionl1E3C);
          real r1E64#1 = RMul(r1E63,r1E58);
          real r1E65#1 = RAdd(r1E62,r1E64);
          real r1E66#1 = RMul(r1E61,r1E5B);
          real r1E67#1 = RMul(r1E63,r1E5D);
          real r1E68#1 = RAdd(r1E66,r1E67);
          tensor[2] tensor1E69#1 = <tensor[2]>[r1E65,r1E68];
          tensor[2,2] op1_e3_l_241E53#4 = <tensor[2,2]>[tensor1E60,tensor1E69];
          real varAcc1E83#0 = VIndex<2,0>(refPos1A85);
          real varAcc1E84#0 = VIndex<2,1>(refPos1A85);
          real basisEval1E85#3 = 0.e0;
          tensor[3] intermediateCons1E86#2 = <tensor[3]>[basisEval1E85,basisEval1E85,basisEval1E85];
          tensor[2,3] intermediateCons1E87#2 = <tensor[2,3]>[intermediateCons1E86,intermediateCons1E86];
          tensor[2,2,3] intermediateCons1E88#1 = <tensor[2,2,3]>[intermediateCons1E87,intermediateCons1E87];
          tensor[2,2,3] basisResult1E82#24 = intermediateCons1E88;
          real r1E91#4 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r1E92#2 = TensorIndex<tensor[2,2,3],[0,0,0]>(basisResult1E82);
          real r1E93#1 = RMul(r1E91,r1E92);
          real r1E94#4 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r1E95#2 = TensorIndex<tensor[2,2,3],[0,0,1]>(basisResult1E82);
          real r1E96#1 = RMul(r1E94,r1E95);
          real r1E97#4 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r1E98#2 = TensorIndex<tensor[2,2,3],[0,0,2]>(basisResult1E82);
          real r1E99#1 = RMul(r1E97,r1E98);
          real r1E9A#1 = RAdd(r1E93,r1E96);
          real r1E9B#1 = RAdd(r1E9A,r1E99);
          real r1E9C#2 = TensorIndex<tensor[2,2,3],[0,1,0]>(basisResult1E82);
          real r1E9D#1 = RMul(r1E91,r1E9C);
          real r1E9E#2 = TensorIndex<tensor[2,2,3],[0,1,1]>(basisResult1E82);
          real r1E9F#1 = RMul(r1E94,r1E9E);
          real r1EA0#2 = TensorIndex<tensor[2,2,3],[0,1,2]>(basisResult1E82);
          real r1EA1#1 = RMul(r1E97,r1EA0);
          real r1EA2#1 = RAdd(r1E9D,r1E9F);
          real r1EA3#1 = RAdd(r1EA2,r1EA1);
          tensor[2] tensor1EA4#1 = <tensor[2]>[r1E9B,r1EA3];
          real r1EA5#2 = TensorIndex<tensor[2,2,3],[1,0,0]>(basisResult1E82);
          real r1EA6#1 = RMul(r1E91,r1EA5);
          real r1EA7#2 = TensorIndex<tensor[2,2,3],[1,0,1]>(basisResult1E82);
          real r1EA8#1 = RMul(r1E94,r1EA7);
          real r1EA9#2 = TensorIndex<tensor[2,2,3],[1,0,2]>(basisResult1E82);
          real r1EAA#1 = RMul(r1E97,r1EA9);
          real r1EAB#1 = RAdd(r1EA6,r1EA8);
          real r1EAC#1 = RAdd(r1EAB,r1EAA);
          real r1EAD#2 = TensorIndex<tensor[2,2,3],[1,1,0]>(basisResult1E82);
          real r1EAE#1 = RMul(r1E91,r1EAD);
          real r1EAF#2 = TensorIndex<tensor[2,2,3],[1,1,1]>(basisResult1E82);
          real r1EB0#1 = RMul(r1E94,r1EAF);
          real r1EB1#2 = TensorIndex<tensor[2,2,3],[1,1,2]>(basisResult1E82);
          real r1EB2#1 = RMul(r1E97,r1EB1);
          real r1EB3#1 = RAdd(r1EAE,r1EB0);
          real r1EB4#1 = RAdd(r1EB3,r1EB2);
          tensor[2] tensor1EB5#1 = <tensor[2]>[r1EAC,r1EB4];
          tensor[2,2] tensor1EB6#1 = <tensor[2,2]>[tensor1EA4,tensor1EB5];
          real r1EB7#4 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r1EB8#1 = RMul(r1EB7,r1E92);
          real r1EB9#4 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r1EBA#1 = RMul(r1EB9,r1E95);
          real r1EBB#4 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r1EBC#1 = RMul(r1EBB,r1E98);
          real r1EBD#1 = RAdd(r1EB8,r1EBA);
          real r1EBE#1 = RAdd(r1EBD,r1EBC);
          real r1EBF#1 = RMul(r1EB7,r1E9C);
          real r1EC0#1 = RMul(r1EB9,r1E9E);
          real r1EC1#1 = RMul(r1EBB,r1EA0);
          real r1EC2#1 = RAdd(r1EBF,r1EC0);
          real r1EC3#1 = RAdd(r1EC2,r1EC1);
          tensor[2] tensor1EC4#1 = <tensor[2]>[r1EBE,r1EC3];
          real r1EC5#1 = RMul(r1EB7,r1EA5);
          real r1EC6#1 = RMul(r1EB9,r1EA7);
          real r1EC7#1 = RMul(r1EBB,r1EA9);
          real r1EC8#1 = RAdd(r1EC5,r1EC6);
          real r1EC9#1 = RAdd(r1EC8,r1EC7);
          real r1ECA#1 = RMul(r1EB7,r1EAD);
          real r1ECB#1 = RMul(r1EB9,r1EAF);
          real r1ECC#1 = RMul(r1EBB,r1EB1);
          real r1ECD#1 = RAdd(r1ECA,r1ECB);
          real r1ECE#1 = RAdd(r1ECD,r1ECC);
          tensor[2] tensor1ECF#1 = <tensor[2]>[r1EC9,r1ECE];
          tensor[2,2] tensor1ED0#1 = <tensor[2,2]>[tensor1EC4,tensor1ECF];
          tensor[2,2,2] probe_l_261E90#8 = <tensor[2,2,2]>[tensor1EB6,tensor1ED0];
          real realLit1F14#8 = 0.e0;
          real r1F15#2 = TensorIndex<tensor[2,2,2],[0,0,0]>(probe_l_261E90);
          real r1F16#1 = RMul(realLit1F14,r1F15);
          real realLit1F17#4 = -0.1e1;
          real r1F18#2 = TensorIndex<tensor[2,2,2],[1,0,0]>(probe_l_261E90);
          real r1F19#1 = RMul(realLit1F17,r1F18);
          real r1F1A#1 = RAdd(r1F16,r1F19);
          real r1F1B#2 = TensorIndex<tensor[2,2,2],[0,0,1]>(probe_l_261E90);
          real r1F1C#1 = RMul(realLit1F14,r1F1B);
          real r1F1D#2 = TensorIndex<tensor[2,2,2],[1,0,1]>(probe_l_261E90);
          real r1F1E#1 = RMul(realLit1F17,r1F1D);
          real r1F1F#1 = RAdd(r1F1C,r1F1E);
          tensor[2] tensor1F20#1 = <tensor[2]>[r1F1A,r1F1F];
          real r1F21#2 = TensorIndex<tensor[2,2,2],[0,1,0]>(probe_l_261E90);
          real r1F22#1 = RMul(realLit1F14,r1F21);
          real r1F23#2 = TensorIndex<tensor[2,2,2],[1,1,0]>(probe_l_261E90);
          real r1F24#1 = RMul(realLit1F17,r1F23);
          real r1F25#1 = RAdd(r1F22,r1F24);
          real r1F26#2 = TensorIndex<tensor[2,2,2],[0,1,1]>(probe_l_261E90);
          real r1F27#1 = RMul(realLit1F14,r1F26);
          real r1F28#2 = TensorIndex<tensor[2,2,2],[1,1,1]>(probe_l_261E90);
          real r1F29#1 = RMul(realLit1F17,r1F28);
          real r1F2A#1 = RAdd(r1F27,r1F29);
          tensor[2] tensor1F2B#1 = <tensor[2]>[r1F25,r1F2A];
          tensor[2,2] tensor1F2C#1 = <tensor[2,2]>[tensor1F20,tensor1F2B];
          real realLit1F2D#4 = 0.1e1;
          real r1F2E#1 = RMul(realLit1F2D,r1F15);
          real r1F2F#1 = RMul(realLit1F14,r1F18);
          real r1F30#1 = RAdd(r1F2E,r1F2F);
          real r1F31#1 = RMul(realLit1F2D,r1F1B);
          real r1F32#1 = RMul(realLit1F14,r1F1D);
          real r1F33#1 = RAdd(r1F31,r1F32);
          tensor[2] tensor1F34#1 = <tensor[2]>[r1F30,r1F33];
          real r1F35#1 = RMul(realLit1F2D,r1F21);
          real r1F36#1 = RMul(realLit1F14,r1F23);
          real r1F37#1 = RAdd(r1F35,r1F36);
          real r1F38#1 = RMul(realLit1F2D,r1F26);
          real r1F39#1 = RMul(realLit1F14,r1F28);
          real r1F3A#1 = RAdd(r1F38,r1F39);
          tensor[2] tensor1F3B#1 = <tensor[2]>[r1F37,r1F3A];
          tensor[2,2] tensor1F3C#1 = <tensor[2,2]>[tensor1F34,tensor1F3B];
          tensor[2,2,2] op1_e3_l_271F13#8 = <tensor[2,2,2]>[tensor1F2C,tensor1F3C];
          real realLit1F69#8 = 0.e0;
          real r1F6A#2 = TensorIndex<tensor[2,2,2],[0,0,0]>(op1_e3_l_271F13);
          real r1F6B#1 = RMul(realLit1F69,r1F6A);
          real realLit1F6C#4 = -0.1e1;
          real r1F6D#2 = TensorIndex<tensor[2,2,2],[0,1,0]>(op1_e3_l_271F13);
          real r1F6E#1 = RMul(realLit1F6C,r1F6D);
          real r1F6F#1 = RAdd(r1F6B,r1F6E);
          real r1F70#2 = TensorIndex<tensor[2,2,2],[0,0,1]>(op1_e3_l_271F13);
          real r1F71#1 = RMul(realLit1F69,r1F70);
          real r1F72#2 = TensorIndex<tensor[2,2,2],[0,1,1]>(op1_e3_l_271F13);
          real r1F73#1 = RMul(realLit1F6C,r1F72);
          real r1F74#1 = RAdd(r1F71,r1F73);
          tensor[2] tensor1F75#1 = <tensor[2]>[r1F6F,r1F74];
          real r1F76#2 = TensorIndex<tensor[2,2,2],[1,0,0]>(op1_e3_l_271F13);
          real r1F77#1 = RMul(realLit1F69,r1F76);
          real r1F78#2 = TensorIndex<tensor[2,2,2],[1,1,0]>(op1_e3_l_271F13);
          real r1F79#1 = RMul(realLit1F6C,r1F78);
          real r1F7A#1 = RAdd(r1F77,r1F79);
          real r1F7B#2 = TensorIndex<tensor[2,2,2],[1,0,1]>(op1_e3_l_271F13);
          real r1F7C#1 = RMul(realLit1F69,r1F7B);
          real r1F7D#2 = TensorIndex<tensor[2,2,2],[1,1,1]>(op1_e3_l_271F13);
          real r1F7E#1 = RMul(realLit1F6C,r1F7D);
          real r1F7F#1 = RAdd(r1F7C,r1F7E);
          tensor[2] tensor1F80#1 = <tensor[2]>[r1F7A,r1F7F];
          tensor[2,2] tensor1F81#1 = <tensor[2,2]>[tensor1F75,tensor1F80];
          real realLit1F82#4 = 0.1e1;
          real r1F83#1 = RMul(realLit1F82,r1F6A);
          real r1F84#1 = RMul(realLit1F69,r1F6D);
          real r1F85#1 = RAdd(r1F83,r1F84);
          real r1F86#1 = RMul(realLit1F82,r1F70);
          real r1F87#1 = RMul(realLit1F69,r1F72);
          real r1F88#1 = RAdd(r1F86,r1F87);
          tensor[2] tensor1F89#1 = <tensor[2]>[r1F85,r1F88];
          real r1F8A#1 = RMul(realLit1F82,r1F76);
          real r1F8B#1 = RMul(realLit1F69,r1F78);
          real r1F8C#1 = RAdd(r1F8A,r1F8B);
          real r1F8D#1 = RMul(realLit1F82,r1F7B);
          real r1F8E#1 = RMul(realLit1F69,r1F7D);
          real r1F8F#1 = RAdd(r1F8D,r1F8E);
          tensor[2] tensor1F90#1 = <tensor[2]>[r1F8C,r1F8F];
          tensor[2,2] tensor1F91#1 = <tensor[2,2]>[tensor1F89,tensor1F90];
          tensor[2,2,2] op1_e3_l_311F68#4 = <tensor[2,2,2]>[tensor1F81,tensor1F91];
          real r1FBE#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r1FBF#2 = TensorIndex<tensor[2,2,3],[0,0,0]>(basisResult1E82);
          real r1FC0#1 = RMul(r1FBE,r1FBF);
          real r1FC1#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r1FC2#2 = TensorIndex<tensor[2,2,3],[0,0,1]>(basisResult1E82);
          real r1FC3#1 = RMul(r1FC1,r1FC2);
          real r1FC4#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r1FC5#2 = TensorIndex<tensor[2,2,3],[0,0,2]>(basisResult1E82);
          real r1FC6#1 = RMul(r1FC4,r1FC5);
          real r1FC7#1 = RAdd(r1FC0,r1FC3);
          real r1FC8#1 = RAdd(r1FC7,r1FC6);
          real r1FC9#2 = TensorIndex<tensor[2,2,3],[0,1,0]>(basisResult1E82);
          real r1FCA#1 = RMul(r1FBE,r1FC9);
          real r1FCB#2 = TensorIndex<tensor[2,2,3],[0,1,1]>(basisResult1E82);
          real r1FCC#1 = RMul(r1FC1,r1FCB);
          real r1FCD#2 = TensorIndex<tensor[2,2,3],[0,1,2]>(basisResult1E82);
          real r1FCE#1 = RMul(r1FC4,r1FCD);
          real r1FCF#1 = RAdd(r1FCA,r1FCC);
          real r1FD0#1 = RAdd(r1FCF,r1FCE);
          tensor[2] tensor1FD1#1 = <tensor[2]>[r1FC8,r1FD0];
          real r1FD2#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r1FD3#1 = RMul(r1FD2,r1FBF);
          real r1FD4#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r1FD5#1 = RMul(r1FD4,r1FC2);
          real r1FD6#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r1FD7#1 = RMul(r1FD6,r1FC5);
          real r1FD8#1 = RAdd(r1FD3,r1FD5);
          real r1FD9#1 = RAdd(r1FD8,r1FD7);
          real r1FDA#1 = RMul(r1FD2,r1FC9);
          real r1FDB#1 = RMul(r1FD4,r1FCB);
          real r1FDC#1 = RMul(r1FD6,r1FCD);
          real r1FDD#1 = RAdd(r1FDA,r1FDB);
          real r1FDE#1 = RAdd(r1FDD,r1FDC);
          tensor[2] tensor1FDF#1 = <tensor[2]>[r1FD9,r1FDE];
          tensor[2,2] probe_l_361FBD#4 = <tensor[2,2]>[tensor1FD1,tensor1FDF];
          real r2005#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs1BCC);
          real r2006#2 = TensorIndex<tensor[2,2,3],[1,0,0]>(basisResult1E82);
          real r2007#1 = RMul(r2005,r2006);
          real r2008#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs1BCC);
          real r2009#2 = TensorIndex<tensor[2,2,3],[1,0,1]>(basisResult1E82);
          real r200A#1 = RMul(r2008,r2009);
          real r200B#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs1BCC);
          real r200C#2 = TensorIndex<tensor[2,2,3],[1,0,2]>(basisResult1E82);
          real r200D#1 = RMul(r200B,r200C);
          real r200E#1 = RAdd(r2007,r200A);
          real r200F#1 = RAdd(r200E,r200D);
          real r2010#2 = TensorIndex<tensor[2,2,3],[1,1,0]>(basisResult1E82);
          real r2011#1 = RMul(r2005,r2010);
          real r2012#2 = TensorIndex<tensor[2,2,3],[1,1,1]>(basisResult1E82);
          real r2013#1 = RMul(r2008,r2012);
          real r2014#2 = TensorIndex<tensor[2,2,3],[1,1,2]>(basisResult1E82);
          real r2015#1 = RMul(r200B,r2014);
          real r2016#1 = RAdd(r2011,r2013);
          real r2017#1 = RAdd(r2016,r2015);
          tensor[2] tensor2018#1 = <tensor[2]>[r200F,r2017];
          real r2019#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs1BCC);
          real r201A#1 = RMul(r2019,r2006);
          real r201B#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs1BCC);
          real r201C#1 = RMul(r201B,r2009);
          real r201D#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs1BCC);
          real r201E#1 = RMul(r201D,r200C);
          real r201F#1 = RAdd(r201A,r201C);
          real r2020#1 = RAdd(r201F,r201E);
          real r2021#1 = RMul(r2019,r2010);
          real r2022#1 = RMul(r201B,r2012);
          real r2023#1 = RMul(r201D,r2014);
          real r2024#1 = RAdd(r2021,r2022);
          real r2025#1 = RAdd(r2024,r2023);
          tensor[2] tensor2026#1 = <tensor[2]>[r2020,r2025];
          tensor[2,2] probe_l_392004#4 = <tensor[2,2]>[tensor2018,tensor2026];
          real realLit204C#4 = 0.e0;
          real r204D#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_392004);
          real r204E#1 = RMul(realLit204C,r204D);
          real realLit204F#2 = 0.1e1;
          real r2050#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_392004);
          real r2051#1 = RMul(realLit204F,r2050);
          real r2052#1 = RAdd(r204E,r2051);
          real r2053#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_392004);
          real r2054#1 = RMul(realLit204C,r2053);
          real r2055#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_392004);
          real r2056#1 = RMul(realLit204F,r2055);
          real r2057#1 = RAdd(r2054,r2056);
          tensor[2] tensor2058#1 = <tensor[2]>[r2052,r2057];
          real realLit2059#2 = -0.1e1;
          real r205A#1 = RMul(realLit2059,r204D);
          real r205B#1 = RMul(realLit204C,r2050);
          real r205C#1 = RAdd(r205A,r205B);
          real r205D#1 = RMul(realLit2059,r2053);
          real r205E#1 = RMul(realLit204C,r2055);
          real r205F#1 = RAdd(r205D,r205E);
          tensor[2] tensor2060#1 = <tensor[2]>[r205C,r205F];
          tensor[2,2] op1_e3_l_40204B#4 = <tensor[2,2]>[tensor2058,tensor2060];
          real r2079#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_121CDE);
          real r207A#1 = TensorIndex<tensor[2,2],[0,0]>(probe_l_361FBD);
          real r207B#1 = RMul(r2079,r207A);
          real r207C#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_121CDE);
          real r207D#1 = TensorIndex<tensor[2,2],[1,0]>(probe_l_361FBD);
          real r207E#1 = RMul(r207C,r207D);
          real r207F#1 = RAdd(r207B,r207E);
          real r2080#1 = TensorIndex<tensor[2,2],[0,1]>(probe_l_361FBD);
          real r2081#1 = RMul(r2079,r2080);
          real r2082#1 = TensorIndex<tensor[2,2],[1,1]>(probe_l_361FBD);
          real r2083#1 = RMul(r207C,r2082);
          real r2084#1 = RAdd(r2081,r2083);
          tensor[2] op1_e3_l_412078#1 = <tensor[2]>[r207F,r2084];
          real r2094#2 = TensorIndex<tensor[2],[0]>(probe_l_101C8C);
          real r2095#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_40204B);
          real r2096#1 = RMul(r2094,r2095);
          real r2097#2 = TensorIndex<tensor[2],[1]>(probe_l_101C8C);
          real r2098#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_40204B);
          real r2099#1 = RMul(r2097,r2098);
          real r209A#1 = RAdd(r2096,r2099);
          real r209B#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_40204B);
          real r209C#1 = RMul(r2094,r209B);
          real r209D#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_40204B);
          real r209E#1 = RMul(r2097,r209D);
          real r209F#1 = RAdd(r209C,r209E);
          tensor[2] op1_e3_l_422093#1 = <tensor[2]>[r209A,r209F];
          tensor[2] op1_e3_l_4420AE#2 = VAdd<2>(op1_e3_l_412078,op1_e3_l_422093);
          tensor[2] projParam20B2#1 = ProjectLast<tensor[2,2,2],[0,0]>(op1_e3_l_311F68);
          tensor[2] binopV20B3#1 = VScale<2>(op1_e3_l_141D24,projParam20B2);
          tensor[2] projParam20B4#1 = ProjectLast<tensor[2,2,2],[0,1]>(op1_e3_l_311F68);
          tensor[2] binopV20B5#1 = VScale<2>(op1_e3_l_141D24,projParam20B4);
          tensor[2,2] tensor20B6#1 = <tensor[2,2]>[binopV20B3,binopV20B5];
          tensor[2] projParam20B7#1 = ProjectLast<tensor[2,2,2],[1,0]>(op1_e3_l_311F68);
          tensor[2] binopV20B8#1 = VScale<2>(op1_e3_l_141D24,projParam20B7);
          tensor[2] projParam20B9#1 = ProjectLast<tensor[2,2,2],[1,1]>(op1_e3_l_311F68);
          tensor[2] binopV20BA#1 = VScale<2>(op1_e3_l_141D24,projParam20B9);
          tensor[2,2] tensor20BB#1 = <tensor[2,2]>[binopV20B8,binopV20BA];
          tensor[2,2,2] op1_e3_l_4520B1#4 = <tensor[2,2,2]>[tensor20B6,tensor20BB];
          real r20C9#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_131CF7);
          real r20CA#4 = TensorIndex<tensor[2],[0]>(op1_e3_l_4420AE);
          real r20CB#1 = RMul(r20C9,r20CA);
          real r20CC#4 = TensorIndex<tensor[2],[1]>(op1_e3_l_4420AE);
          real r20CD#1 = RMul(r20C9,r20CC);
          tensor[2] tensor20CE#1 = <tensor[2]>[r20CB,r20CD];
          real r20CF#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_131CF7);
          real r20D0#1 = RMul(r20CF,r20CA);
          real r20D1#1 = RMul(r20CF,r20CC);
          tensor[2] tensor20D2#1 = <tensor[2]>[r20D0,r20D1];
          tensor[2,2] tensor20D3#1 = <tensor[2,2]>[tensor20CE,tensor20D2];
          real r20D4#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_131CF7);
          real r20D5#1 = RMul(r20D4,r20CA);
          real r20D6#1 = RMul(r20D4,r20CC);
          tensor[2] tensor20D7#1 = <tensor[2]>[r20D5,r20D6];
          real r20D8#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_131CF7);
          real r20D9#1 = RMul(r20D8,r20CA);
          real r20DA#1 = RMul(r20D8,r20CC);
          tensor[2] tensor20DB#1 = <tensor[2]>[r20D9,r20DA];
          tensor[2,2] tensor20DC#1 = <tensor[2,2]>[tensor20D7,tensor20DB];
          tensor[2,2,2] op1_e3_l_4620C8#4 = <tensor[2,2,2]>[tensor20D3,tensor20DC];
          tensor[2] projParam20F4#1 = ProjectLast<tensor[2,2,2],[0,0]>(op1_e3_l_4520B1);
          tensor[2] projParam20F5#1 = ProjectLast<tensor[2,2,2],[0,0]>(op1_e3_l_4620C8);
          tensor[2] binopV20F6#1 = VSub<2>(projParam20F4,projParam20F5);
          tensor[2] projParam20F7#1 = ProjectLast<tensor[2,2,2],[0,1]>(op1_e3_l_4520B1);
          tensor[2] projParam20F8#1 = ProjectLast<tensor[2,2,2],[0,1]>(op1_e3_l_4620C8);
          tensor[2] binopV20F9#1 = VSub<2>(projParam20F7,projParam20F8);
          tensor[2,2] tensor20FA#1 = <tensor[2,2]>[binopV20F6,binopV20F9];
          tensor[2] projParam20FB#1 = ProjectLast<tensor[2,2,2],[1,0]>(op1_e3_l_4520B1);
          tensor[2] projParam20FC#1 = ProjectLast<tensor[2,2,2],[1,0]>(op1_e3_l_4620C8);
          tensor[2] binopV20FD#1 = VSub<2>(projParam20FB,projParam20FC);
          tensor[2] projParam20FE#1 = ProjectLast<tensor[2,2,2],[1,1]>(op1_e3_l_4520B1);
          tensor[2] projParam20FF#1 = ProjectLast<tensor[2,2,2],[1,1]>(op1_e3_l_4620C8);
          tensor[2] binopV2100#1 = VSub<2>(projParam20FE,projParam20FF);
          tensor[2,2] tensor2101#1 = <tensor[2,2]>[binopV20FD,binopV2100];
          tensor[2,2,2] op1_e3_l_5520F3#8 = <tensor[2,2,2]>[tensor20FA,tensor2101];
          real op1_e3_l_562112#8 = RMul(op1_e3_l_141D24,op1_e3_l_141D24);
          real r2116#1 = TensorIndex<tensor[2,2,2],[0,0,0]>(op1_e3_l_5520F3);
          real r2117#1 = RDiv(r2116,op1_e3_l_562112);
          real r2118#1 = TensorIndex<tensor[2,2,2],[0,0,1]>(op1_e3_l_5520F3);
          real r2119#1 = RDiv(r2118,op1_e3_l_562112);
          tensor[2] tensor211A#1 = <tensor[2]>[r2117,r2119];
          real r211B#1 = TensorIndex<tensor[2,2,2],[0,1,0]>(op1_e3_l_5520F3);
          real r211C#1 = RDiv(r211B,op1_e3_l_562112);
          real r211D#1 = TensorIndex<tensor[2,2,2],[0,1,1]>(op1_e3_l_5520F3);
          real r211E#1 = RDiv(r211D,op1_e3_l_562112);
          tensor[2] tensor211F#1 = <tensor[2]>[r211C,r211E];
          tensor[2,2] tensor2120#1 = <tensor[2,2]>[tensor211A,tensor211F];
          real r2121#1 = TensorIndex<tensor[2,2,2],[1,0,0]>(op1_e3_l_5520F3);
          real r2122#1 = RDiv(r2121,op1_e3_l_562112);
          real r2123#1 = TensorIndex<tensor[2,2,2],[1,0,1]>(op1_e3_l_5520F3);
          real r2124#1 = RDiv(r2123,op1_e3_l_562112);
          tensor[2] tensor2125#1 = <tensor[2]>[r2122,r2124];
          real r2126#1 = TensorIndex<tensor[2,2,2],[1,1,0]>(op1_e3_l_5520F3);
          real r2127#1 = RDiv(r2126,op1_e3_l_562112);
          real r2128#1 = TensorIndex<tensor[2,2,2],[1,1,1]>(op1_e3_l_5520F3);
          real r2129#1 = RDiv(r2128,op1_e3_l_562112);
          tensor[2] tensor212A#1 = <tensor[2]>[r2127,r2129];
          tensor[2,2] tensor212B#1 = <tensor[2,2]>[tensor2125,tensor212A];
          tensor[2,2,2] op1_e3_l_572115#8 = <tensor[2,2,2]>[tensor2120,tensor212B];
          real r2145#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_151D27);
          real r2146#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_241E53);
          real r2147#1 = RMul(r2145,r2146);
          real r2148#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_151D27);
          real r2149#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_241E53);
          real r214A#1 = RMul(r2148,r2149);
          real r214B#1 = RAdd(r2147,r214A);
          real r214C#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_241E53);
          real r214D#1 = RMul(r2145,r214C);
          real r214E#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_241E53);
          real r214F#1 = RMul(r2148,r214E);
          real r2150#1 = RAdd(r214D,r214F);
          tensor[2] tensor2151#1 = <tensor[2]>[r214B,r2150];
          real r2152#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_151D27);
          real r2153#1 = RMul(r2152,r2146);
          real r2154#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_151D27);
          real r2155#1 = RMul(r2154,r2149);
          real r2156#1 = RAdd(r2153,r2155);
          real r2157#1 = RMul(r2152,r214C);
          real r2158#1 = RMul(r2154,r214E);
          real r2159#1 = RAdd(r2157,r2158);
          tensor[2] tensor215A#1 = <tensor[2]>[r2156,r2159];
          tensor[2,2] op1_e3_l_582144#2 = <tensor[2,2]>[tensor2151,tensor215A];
          real r2174#4 = TensorIndex<tensor[2],[0]>(compositionl1BA7);
          real r2175#1 = TensorIndex<tensor[2,2,2],[0,0,0]>(op1_e3_l_572115);
          real r2176#1 = RMul(r2174,r2175);
          real r2177#4 = TensorIndex<tensor[2],[1]>(compositionl1BA7);
          real r2178#1 = TensorIndex<tensor[2,2,2],[1,0,0]>(op1_e3_l_572115);
          real r2179#1 = RMul(r2177,r2178);
          real r217A#1 = RAdd(r2176,r2179);
          real r217B#1 = TensorIndex<tensor[2,2,2],[0,0,1]>(op1_e3_l_572115);
          real r217C#1 = RMul(r2174,r217B);
          real r217D#1 = TensorIndex<tensor[2,2,2],[1,0,1]>(op1_e3_l_572115);
          real r217E#1 = RMul(r2177,r217D);
          real r217F#1 = RAdd(r217C,r217E);
          tensor[2] tensor2180#1 = <tensor[2]>[r217A,r217F];
          real r2181#1 = TensorIndex<tensor[2,2,2],[0,1,0]>(op1_e3_l_572115);
          real r2182#1 = RMul(r2174,r2181);
          real r2183#1 = TensorIndex<tensor[2,2,2],[1,1,0]>(op1_e3_l_572115);
          real r2184#1 = RMul(r2177,r2183);
          real r2185#1 = RAdd(r2182,r2184);
          real r2186#1 = TensorIndex<tensor[2,2,2],[0,1,1]>(op1_e3_l_572115);
          real r2187#1 = RMul(r2174,r2186);
          real r2188#1 = TensorIndex<tensor[2,2,2],[1,1,1]>(op1_e3_l_572115);
          real r2189#1 = RMul(r2177,r2188);
          real r218A#1 = RAdd(r2187,r2189);
          tensor[2] tensor218B#1 = <tensor[2]>[r2185,r218A];
          tensor[2,2] op1_e3_l_592173#2 = <tensor[2,2]>[tensor2180,tensor218B];
          tensor[2] projParam21A7#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_582144);
          tensor[2] projParam21A8#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_592173);
          tensor[2] v21A9#1 = VAdd<2>(projParam21A7,projParam21A8);
          tensor[2] projParam21AA#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_582144);
          tensor[2] projParam21AB#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_592173);
          tensor[2] v21AC#1 = VAdd<2>(projParam21AA,projParam21AB);
          tensor[2,2] _t21A6#3 = <tensor[2,2]>[v21A9,v21AC];
          string _t21B5#1 = "norm:";
          tensor[2] projParam21B8#2 = ProjectLast<tensor[2,2],[0]>(_t21A6);
          real vdot21B9#1 = VDot<2>(projParam21B8,projParam21B8);
          tensor[2] projParam21BA#2 = ProjectLast<tensor[2,2],[1]>(_t21A6);
          real vdot21BB#1 = VDot<2>(projParam21BA,projParam21BA);
          real op1_e3_l_11521B7#1 = RAdd(vdot21B9,vdot21BB);
          real _t21C2#1 = Sqrt(op1_e3_l_11521B7);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1E16,_t21A6,_t1D8D,_t21B5,_t21C2,_t1D8D);
          string _t21C6#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t21C6,_t1D3E,_t1D8D);
          string _t21C9#1 = "vals:";
          tensor[2] _t21CB#2 = <tensor[2]>[f01B4C,f11E08];
          Print<[string,tensor[2],string]>(_t21C9,_t21CB,_t1D8D);
          real _t21CE#6 = 0.e0;
          bool _t21D0#2 = GT<real>(f01B4C,_t21CE);
          if _t21D0 then goto JOIN21D5 else goto ASSIGN229C
        JOIN21D5:  preds = [COND21D2,JOIN22A1]
          int _t21D3#1 = phi(_t17F6,_t21D4)
          bool _t21D6#2 = GT<real>(f11E08,_t21CE);
          if _t21D6 then goto JOIN21DB else goto ASSIGN2294
        JOIN21DB:  preds = [COND21D8,JOIN2299]
          int _t21D9#1 = phi(_t17F6,_t21DA)
          int _t21DC#1 = IMul(_t21D3,_t21D9);
          int _t21DE#5 = 0;
          bool _t21E0#1 = GT<int>(_t21DC,_t21DE);
          bool _t21E2#1 = BNot(_t21E0);
          if _t21E2 then goto COND21E5 else goto ASSIGN227D
        COND21E5:  preds = [COND21E4]
          if _t21D0 then goto JOIN21E8 else goto ASSIGN2277
        JOIN21E8:  preds = [COND21E5,JOIN227B]
          int _t21E6#1 = phi(_t17F6,_t21E7)
          if _t21D6 then goto JOIN21EC else goto ASSIGN2271
        JOIN21EC:  preds = [COND21E9,JOIN2275]
          int _t21EA#1 = phi(_t17F6,_t21EB)
          int _t21ED#1 = IMul(_t21E6,_t21EA);
          bool _t21EF#1 = EQ<int>(_t21ED,_t21DE);
          if _t21EF then goto ASSIGN21F3 else goto JOIN21F5
        ASSIGN21F3:  preds = [COND21F1]
          string _t21F2#1 = "Warn: 0 update\n";
          Print<[string]>(_t21F2);
          goto JOIN21F5
        JOIN21F5:  preds = [MASSIGN21F4,COND21F1]
          string _t21F6#1 = "update with interval:";
          Print<[string,real,string]>(_t21F6,gradEps1D89,_t1D8D);
          string _t21F9#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t21F9,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t21FC#1 = "Count:";
          Print<[string,int,string]>(_t21FC,count17EE,_t1D8D);
          int count21FF#1 = IAdd(count17EE,_t17F6);
          int totalCount2201#1 = IAdd(totalCount17F0,_t17F6);
          string _t2203#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t2203,_t21CB,_t1D8D);
          string _t2206#1 = "New interval:";
          real _t2208#3 = RAdd(s17E0,gradEps1D89);
          tensor[2] _t220B#2 = <tensor[2]>[s17E0,_t2208];
          Print<[string,tensor[2],string]>(_t2206,_t220B,_t1D8D);
          tensor[2][] intervals220E#1 = Append<tensor[2]>(intervals17E8,_t220B);
          tensor[3] op1_e3_l_52210#1 = VScale<3>(_t2208,rayVec17D4);
          tensor[3] _t2213#1 = VAdd<3>(rayOrig17D6,op1_e3_l_52210);
          tensor[2,3] _t2216#1 = <tensor[2,3]>[rayStart1800,_t2213];
          tensor[2,3][] sints2218#1 = Append<tensor[2,3]>(sints17EA,_t2216);
          femData:MeshCell[] newCells221A#1 = Append<femData:MeshCell>(newCells17EC,cc17E4);
          goto JOIN2223
        JOIN2223:  preds = [ASSIGN221B,ASSIGN2292]
          int totalCount221C#3 = phi(totalCount2201,totalCount17F0)
          int count221D#2 = phi(count21FF,count17EE)
          femData:MeshCell[] newCells221E#3 = phi(newCells221A,newCells17EC)
          tensor[2,3][] sints221F#2 = phi(sints2218,sints17EA)
          tensor[2][] intervals2220#3 = phi(intervals220E,intervals17E8)
          real s2221#3 = phi(_t2208,s2222)
          bool _t2224#1 = GTE<real>(s2221,e17E2);
          if _t2224 then goto ASSIGN2228 else goto JOIN2255
        ASSIGN2228:  preds = [COND2226]
          int itter2227#4 = IAdd(itter17DC,_t17F6);
          bool _t2229#1 = GTE<int>(itter2227,len17DA);
          if _t2229 then goto ASSIGN222D else goto ASSIGN2263
        ASSIGN222D:  preds = [COND222B]
          string _t222C#1 = "TotalCount:";
          Print<[string,int,string]>(_t222C,totalCount221C,_t1D8D);
          string _t222F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t222F,intervals2220,_t1D8D);
          string _t2232#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t2232,newCells221E,_t1D8D);
          string _t2235#1 = ";";
          string _t2237#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui17F2,_t2235,vi17F4,_t2237);
          self.itter = itter2227;
          self.s = s2221;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count221D;
          self.totalCount = totalCount221C;
          stabilize
          goto JOIN224D
        JOIN224D:  preds = [*STABILIZE2241,ASSIGN226F]
          int count2242#1 = phi(_t21DE)
          femData:FuncCell fc2243#1 = phi(_t2244)
          femData:MeshCell cc2245#1 = phi(cc2246)
          real e2247#1 = phi(e2248)
          real s2249#1 = phi(s224A)
          tensor[2] interval224B#1 = phi(interval224C)
          goto JOIN2255
        JOIN2255:  preds = [JOIN224D,COND2226]
          int count224E#1 = phi(count2242,count221D)
          femData:FuncCell fc224F#1 = phi(fc2243,fc17E6)
          femData:MeshCell cc2250#1 = phi(cc2245,cc17E4)
          real e2251#1 = phi(e2247,e17E2)
          real s2252#1 = phi(s2249,s2221)
          tensor[2] interval2253#1 = phi(interval224B,interval17DE)
          int itter2254#1 = phi(itter2227,itter17DC)
          self.itter = itter2254;
          self.interval = interval2253;
          self.s = s2252;
          self.e = e2251;
          self.cc = cc2250;
          self.fc = fc224F;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count224E;
          self.totalCount = totalCount221C;
          active
        ASSIGN2263:  preds = [COND222B]
          string _t2262#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t2262);
          int _t2265#2 = IAdd(offset17D8,itter2227);
          tensor[2] interval224C#3 = Subscript<tensor[2][]>(times17D0,_t2265);
          int _t2268#1 = Subscript<int[]>(cells17D2,_t2265);
          femData:MeshCell cc2246#2 = Subscript<femData:MeshCell[]>(0cell_a17CC,_t2268);
          real s224A#1 = VIndex<2,0>(interval224C);
          real e2248#1 = VIndex<2,1>(interval224C);
          int _t226D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc2246);
          femData:FuncCell _t2244#1 = LoadFem<femData:FuncCell>(c17CE,_t226D);
          goto JOIN224D
        ASSIGN2271:  preds = [COND21E9]
          bool _t2270#1 = LT<real>(f11E08,_t21CE);
          if _t2270 then goto ASSIGN2274 else goto JOIN2275
        ASSIGN2274:  preds = [COND2272]
          int _t2273#1 = -1;
          goto JOIN2275
        JOIN2275:  preds = [ASSIGN2274,COND2272]
          int _t21EB#1 = phi(_t2273,_t21DE)
          goto JOIN21EC
        ASSIGN2277:  preds = [COND21E5]
          bool _t2276#1 = LT<real>(f01B4C,_t21CE);
          if _t2276 then goto ASSIGN227A else goto JOIN227B
        ASSIGN227A:  preds = [COND2278]
          int _t2279#1 = -1;
          goto JOIN227B
        JOIN227B:  preds = [ASSIGN227A,COND2278]
          int _t21E7#1 = phi(_t2279,_t21DE)
          goto JOIN21E8
        ASSIGN227D:  preds = [COND21E4]
          real _t227C#1 = 0.2e1;
          real _t227E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_122280#1 = Abs<real>(f01B4C);
          real op1_e3_l_132283#1 = RMul(_t227C,_t227E);
          real _t2286#1 = RDiv(op1_e3_l_122280,op1_e3_l_132283);
          real epsUpdate2289#2 = Max<real>(gradEps1D89,_t2286);
          string _t228B#1 = "update L:";
          Print<[string,real,string]>(_t228B,epsUpdate2289,_t1D8D);
          string _t228E#1 = "update G:";
          Print<[string,real,string]>(_t228E,gradEps1D89,_t1D8D);
          real s2222#1 = RAdd(s17E0,epsUpdate2289);
          goto JOIN2223
        ASSIGN2294:  preds = [COND21D8]
          bool _t2293#1 = LT<real>(f11E08,_t21CE);
          if _t2293 then goto ASSIGN2297 else goto ASSIGN229A
        ASSIGN2297:  preds = [COND2295]
          int _t2296#1 = -1;
          goto JOIN2299
        JOIN2299:  preds = [ASSIGN2297,ASSIGN229A]
          int _t21DA#1 = phi(_t2296,_t2298)
          goto JOIN21DB
        ASSIGN229A:  preds = [COND2295]
          int _t2298#1 = 0;
          goto JOIN2299
        ASSIGN229C:  preds = [COND21D2]
          bool _t229B#1 = LT<real>(f01B4C,_t21CE);
          if _t229B then goto ASSIGN229F else goto ASSIGN22A2
        ASSIGN229F:  preds = [COND229D]
          int _t229E#1 = -1;
          goto JOIN22A1
        JOIN22A1:  preds = [ASSIGN229F,ASSIGN22A2]
          int _t21D4#1 = phi(_t229E,_t22A0)
          goto JOIN21D5
        ASSIGN22A2:  preds = [COND229D]
          int _t22A0#1 = 0;
          goto JOIN22A1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY22A3:  preds = []
      int iresU22A4#1 = globals.iresU1557;
      int iresV22A6#1 = globals.iresV1558;
      int _t22A8#2 = 0;
      int _t22AA#2 = 1;
      int _t22AC#1 = ISub(iresU22A4,_t22AA);
      int[] _t22AE#1 = Range(_t22A8,_t22AC);
    FOREACH22B1:  preds = [ASSIGN22AF,NEXT22BA]
      foreach (vi22B0 in _t22AE) on exit goto RETURN22BB
      int _t22B2#1 = ISub(iresV22A6,_t22AA);
      int[] _t22B4#1 = Range(_t22A8,_t22B2);
    FOREACH22B7:  preds = [ASSIGN22B5,NEXT22B9]
      foreach (ui22B6 in _t22B4) on exit goto NEXT22BA
      new ray(ui22B6,vi22B0);
      goto FOREACH22B7
    NEXT22BA:  preds = [FOREACH22B7]
      goto FOREACH22B1
    RETURN22BB:  preds = [FOREACH22B1]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a154E (a) = <no-default>
  input 0b0450_intermedateGlobal154F (b) = <no-default>
  input 0c0452_intermedateGlobal1550 (c) = <no-default>
  input isoval1551 (isoval) = <default>
  input thick1552 (thick) = <default>
  input camEye1553 (camEye) = <default>
  input camAt1554 (camAt) = <default>
  input camUp1555 (camUp) = <default>
  input camFOV1556 (camFOV) = <default>
  input iresU1557 (iresU) = <default>
  input iresV1558 (iresV) = <default>
  input camNear1559 (camNear) = <default>
  input camFar155A (camFar) = <default>
  input refStep155B (refStep) = <default>
  input rayStep155C (rayStep) = <default>
  input lightVsp155D (lightVsp) = <default>
  input phongKa155E (phongKa) = <default>
  input phongKd155F (phongKd) = <default>
  input debug1560 (debug) = <default>
  input debugU1561 (debugU) = <default>
  input debugV1562 (debugV) = <default>
  input eps1563 (eps) = <default>
  input indecies1564 (indecies) = <no-default>
  input times1565 (times) = <no-default>
  input cells1566 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a1567
  global femData:FemFunc c1568
  global tensor[3] camU1569
  global tensor[3] camV156A
  global real camVmax156B
  global real camUmax156C
  global tensor[3] rayVec156D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1816 (tensor[2] pos1817#3, int cellInt1818#2, femData:Mesh mesh1819#12) {
    ENTRY181A:  preds = []
      real _t181B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn181D#1 = <tensor[2]>[_t181B,_t181B];
      int _t181F#1 = 0;
      int _t1821#1 = 16;
      int[] _t1823#1 = Range(_t181F,_t1821);
    FOREACH1826:  preds = [ASSIGN1824,NEXT1A7D]
      foreach (itter1825 in _t1823) on exit goto ASSIGN1A82
        tensor[2] xn199D#3 = phi(xn181D,xn1A11)
      int ilit1828#1 = 3;
      int mulRes1829#3 = IMul(cellInt1818,ilit1828);
      int addRes182B#1 = mulRes1829;
      int idx182C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182B);
      int ilit182D#1 = 1;
      int addRes182E#1 = IAdd(mulRes1829,ilit182D);
      int idx182F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182E);
      int ilit1830#1 = 2;
      int addRes1831#1 = IAdd(mulRes1829,ilit1830);
      int idx1832#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes1831);
      int ilit1843#3 = 2;
      int idx1844#1 = idx182C;
      int mulRes1845#2 = IMul(ilit1843,idx1844);
      int addRes1846#1 = mulRes1845;
      int ilit1847#3 = 1;
      int addRes1848#1 = IAdd(ilit1847,mulRes1845);
      real dof_load1849#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1846);
      real dof_load184A#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1848);
      int idx184C#1 = idx182F;
      int mulRes184D#2 = IMul(ilit1843,idx184C);
      int addRes184E#1 = mulRes184D;
      int addRes184F#1 = IAdd(ilit1847,mulRes184D);
      real dof_load1850#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184E);
      real dof_load1851#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184F);
      int idx1853#1 = idx1832;
      int mulRes1854#2 = IMul(ilit1843,idx1853);
      int addRes1855#1 = mulRes1854;
      int addRes1856#1 = IAdd(ilit1847,mulRes1854);
      real dof_load1857#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1855);
      real dof_load1858#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1856);
      real coeff1878#1 = -0.1e1;
      real one1879#3 = 0.1e1;
      real prod187A#2 = RMul(one1879,one1879);
      real basisEval187B#4 = RMul(coeff1878,prod187A);
      real basisEval187C#4 = RMul(one1879,prod187A);
      real basisEval187D#4 = 0.e0;
      real r188E#2 = dof_load1849;
      real r188F#2 = basisEval187B;
      real r1890#1 = RMul(r188E,r188F);
      real r1891#2 = dof_load1850;
      real r1892#2 = basisEval187C;
      real r1893#1 = RMul(r1891,r1892);
      real r1894#2 = dof_load1857;
      real r1895#2 = basisEval187D;
      real r1896#1 = RMul(r1894,r1895);
      real r1897#1 = RAdd(r1890,r1893);
      real r1898#1 = RAdd(r1897,r1896);
      real r1899#2 = basisEval187B;
      real r189A#1 = RMul(r188E,r1899);
      real r189B#2 = basisEval187D;
      real r189C#1 = RMul(r1891,r189B);
      real r189D#2 = basisEval187C;
      real r189E#1 = RMul(r1894,r189D);
      real r189F#1 = RAdd(r189A,r189C);
      real r18A0#1 = RAdd(r189F,r189E);
      real r18A2#2 = dof_load184A;
      real r18A3#1 = RMul(r18A2,r188F);
      real r18A4#2 = dof_load1851;
      real r18A5#1 = RMul(r18A4,r1892);
      real r18A6#2 = dof_load1858;
      real r18A7#1 = RMul(r18A6,r1895);
      real r18A8#1 = RAdd(r18A3,r18A5);
      real r18A9#1 = RAdd(r18A8,r18A7);
      real r18AA#1 = RMul(r18A2,r1899);
      real r18AB#1 = RMul(r18A4,r189B);
      real r18AC#1 = RMul(r18A6,r189D);
      real r18AD#1 = RAdd(r18AA,r18AB);
      real r18AE#1 = RAdd(r18AD,r18AC);
      real realLit18D5#4 = 0.e0;
      real r18D6#2 = r1898;
      real r18D7#1 = RMul(realLit18D5,r18D6);
      real realLit18D8#2 = -0.1e1;
      real r18D9#2 = r18A9;
      real r18DA#1 = RMul(realLit18D8,r18D9);
      real r18DB#1 = RAdd(r18D7,r18DA);
      real r18DC#2 = r18A0;
      real r18DD#1 = RMul(realLit18D5,r18DC);
      real r18DE#2 = r18AE;
      real r18DF#1 = RMul(realLit18D8,r18DE);
      real r18E0#1 = RAdd(r18DD,r18DF);
      real realLit18E2#2 = 0.1e1;
      real r18E3#1 = RMul(realLit18E2,r18D6);
      real r18E4#1 = RMul(realLit18D5,r18D9);
      real r18E5#1 = RAdd(r18E3,r18E4);
      real r18E6#1 = RMul(realLit18E2,r18DC);
      real r18E7#1 = RMul(realLit18D5,r18DE);
      real r18E8#1 = RAdd(r18E6,r18E7);
      real r1902#1 = dof_load1849;
      real r1903#2 = basisEval187B;
      real r1904#1 = RMul(r1902,r1903);
      real r1905#1 = dof_load1850;
      real r1906#2 = basisEval187C;
      real r1907#1 = RMul(r1905,r1906);
      real r1908#1 = dof_load1857;
      real r1909#2 = basisEval187D;
      real r190A#1 = RMul(r1908,r1909);
      real r190B#1 = RAdd(r1904,r1907);
      real r190C#1 = RAdd(r190B,r190A);
      real r190D#1 = dof_load184A;
      real r190E#1 = RMul(r190D,r1903);
      real r190F#1 = dof_load1851;
      real r1910#1 = RMul(r190F,r1906);
      real r1911#1 = dof_load1858;
      real r1912#1 = RMul(r1911,r1909);
      real r1913#1 = RAdd(r190E,r1910);
      real r1914#1 = RAdd(r1913,r1912);
      tensor[2] probe_l_121901#1 = <tensor[2]>[r190C,r1914];
      real r192B#1 = dof_load1849;
      real r192C#2 = basisEval187B;
      real r192D#1 = RMul(r192B,r192C);
      real r192E#1 = dof_load1850;
      real r192F#2 = basisEval187D;
      real r1930#1 = RMul(r192E,r192F);
      real r1931#1 = dof_load1857;
      real r1932#2 = basisEval187C;
      real r1933#1 = RMul(r1931,r1932);
      real r1934#1 = RAdd(r192D,r1930);
      real r1935#1 = RAdd(r1934,r1933);
      real r1936#1 = dof_load184A;
      real r1937#1 = RMul(r1936,r192C);
      real r1938#1 = dof_load1851;
      real r1939#1 = RMul(r1938,r192F);
      real r193A#1 = dof_load1858;
      real r193B#1 = RMul(r193A,r1932);
      real r193C#1 = RAdd(r1937,r1939);
      real r193D#1 = RAdd(r193C,r193B);
      real realLit1954#2 = 0.e0;
      real r1955#2 = r1935;
      real r1956#1 = RMul(realLit1954,r1955);
      real realLit1957#1 = 0.1e1;
      real r1958#2 = r193D;
      real r1959#1 = RMul(realLit1957,r1958);
      real r195A#1 = RAdd(r1956,r1959);
      real realLit195B#1 = -0.1e1;
      real r195C#1 = RMul(realLit195B,r1955);
      real r195D#1 = RMul(realLit1954,r1958);
      real r195E#1 = RAdd(r195C,r195D);
      tensor[2] op1_e3_l_141953#1 = <tensor[2]>[r195A,r195E];
      real realLit196D#4 = 0.e0;
      real r196E#2 = r18DB;
      real r196F#1 = RMul(realLit196D,r196E);
      real realLit1970#2 = -0.1e1;
      real r1971#2 = r18E0;
      real r1972#1 = RMul(realLit1970,r1971);
      real r1973#1 = RAdd(r196F,r1972);
      real r1974#2 = r18E5;
      real r1975#1 = RMul(realLit196D,r1974);
      real r1976#2 = r18E8;
      real r1977#1 = RMul(realLit1970,r1976);
      real r1978#1 = RAdd(r1975,r1977);
      real realLit197A#2 = 0.1e1;
      real r197B#1 = RMul(realLit197A,r196E);
      real r197C#1 = RMul(realLit196D,r1971);
      real r197D#1 = RAdd(r197B,r197C);
      real r197E#1 = RMul(realLit197A,r1974);
      real r197F#1 = RMul(realLit196D,r1976);
      real r1980#1 = RAdd(r197E,r197F);
      real op1_e3_l_161999#4 = VDot<2>(probe_l_121901,op1_e3_l_141953);
      real varAcc199E#1 = VIndex<2,0>(xn199D);
      real varAcc199F#1 = VIndex<2,1>(xn199D);
      real coeff19A0#2 = -0.1e1;
      real iden19A1#1 = varAcc199E;
      real one19A2#7 = 0.1e1;
      real prod19A3#2 = RMul(iden19A1,one19A2);
      real iden19A4#1 = varAcc199F;
      real prod19A5#2 = RMul(one19A2,iden19A4);
      real prod19A6#1 = RMul(one19A2,one19A2);
      real mult19A7#1 = RMul(one19A2,prod19A6);
      real mult19A8#1 = RMul(coeff19A0,prod19A5);
      real mult19A9#1 = RMul(coeff19A0,prod19A3);
      real sum19AA#1 = RAdd(mult19A8,mult19A9);
      real sum19AB#1 = RAdd(mult19A7,sum19AA);
      real intermediate19AC#2 = sum19AB;
      real basisEval19AD#2 = RMul(one19A2,prod19A3);
      real basisEval19AE#2 = RMul(one19A2,prod19A5);
      real r19C4#1 = dof_load1849;
      real r19C5#2 = intermediate19AC;
      real r19C6#1 = RMul(r19C4,r19C5);
      real r19C7#1 = dof_load1850;
      real r19C8#2 = basisEval19AD;
      real r19C9#1 = RMul(r19C7,r19C8);
      real r19CA#1 = dof_load1857;
      real r19CB#2 = basisEval19AE;
      real r19CC#1 = RMul(r19CA,r19CB);
      real r19CD#1 = RAdd(r19C6,r19C9);
      real r19CE#1 = RAdd(r19CD,r19CC);
      real r19CF#1 = dof_load184A;
      real r19D0#1 = RMul(r19CF,r19C5);
      real r19D1#1 = dof_load1851;
      real r19D2#1 = RMul(r19D1,r19C8);
      real r19D3#1 = dof_load1858;
      real r19D4#1 = RMul(r19D3,r19CB);
      real r19D5#1 = RAdd(r19D0,r19D2);
      real r19D6#1 = RAdd(r19D5,r19D4);
      tensor[2] probe_l_1719C3#1 = <tensor[2]>[r19CE,r19D6];
      real r19ED#1 = r1973;
      real r19EE#1 = RDiv(r19ED,op1_e3_l_161999);
      real r19EF#1 = r1978;
      real r19F0#1 = RDiv(r19EF,op1_e3_l_161999);
      tensor[2] tensor19F1#2 = <tensor[2]>[r19EE,r19F0];
      real r19F2#1 = r197D;
      real r19F3#1 = RDiv(r19F2,op1_e3_l_161999);
      real r19F4#1 = r1980;
      real r19F5#1 = RDiv(r19F4,op1_e3_l_161999);
      tensor[2] tensor19F6#2 = <tensor[2]>[r19F3,r19F5];
      tensor[2] op1_e3_l_191A03#2 = VSub<2>(probe_l_1719C3,pos1817);
      tensor[2] projParam1A07#1 = tensor19F1;
      real vdot1A08#1 = VDot<2>(projParam1A07,op1_e3_l_191A03);
      tensor[2] projParam1A09#1 = tensor19F6;
      real vdot1A0A#1 = VDot<2>(projParam1A09,op1_e3_l_191A03);
      tensor[2] op1_e3_l_201A06#1 = <tensor[2]>[vdot1A08,vdot1A0A];
      tensor[2] xn1A11#4 = VSub<2>(xn199D,op1_e3_l_201A06);
      real _t1A14#2 = 0.1e-7;
      real _t1A16#1 = RMul(_t1A14,_t1A14);
      real r1A1A#1 = dof_load1849;
      real r1A1B#2 = intermediate19AC;
      real r1A1C#1 = RMul(r1A1A,r1A1B);
      real r1A1D#1 = dof_load1850;
      real r1A1E#2 = basisEval19AD;
      real r1A1F#1 = RMul(r1A1D,r1A1E);
      real r1A20#1 = dof_load1857;
      real r1A21#2 = basisEval19AE;
      real r1A22#1 = RMul(r1A20,r1A21);
      real r1A23#1 = RAdd(r1A1C,r1A1F);
      real r1A24#1 = RAdd(r1A23,r1A22);
      real r1A25#1 = dof_load184A;
      real r1A26#1 = RMul(r1A25,r1A1B);
      real r1A27#1 = dof_load1851;
      real r1A28#1 = RMul(r1A27,r1A1E);
      real r1A29#1 = dof_load1858;
      real r1A2A#1 = RMul(r1A29,r1A21);
      real r1A2B#1 = RAdd(r1A26,r1A28);
      real r1A2C#1 = RAdd(r1A2B,r1A2A);
      tensor[2] probe_l_251A19#1 = <tensor[2]>[r1A24,r1A2C];
      tensor[2] op1_e3_l_271A42#2 = VSub<2>(probe_l_251A19,pos1817);
      tensor[2] projParam1A46#1 = tensor19F1;
      real vdot1A47#1 = VDot<2>(projParam1A46,op1_e3_l_271A42);
      tensor[2] projParam1A48#1 = tensor19F6;
      real vdot1A49#1 = VDot<2>(projParam1A48,op1_e3_l_271A42);
      tensor[2] op1_e3_l_381A45#2 = <tensor[2]>[vdot1A47,vdot1A49];
      real _t1A50#1 = VDot<2>(op1_e3_l_381A45,op1_e3_l_381A45);
      bool _t1A53#1 = GTE<real>(_t1A16,_t1A50);
      if _t1A53 then goto ASSIGN1A57 else goto JOIN1A7C
    ASSIGN1A57:  preds = [COND1A55]
      real _t1A56#3 = 0.1e1;
      real _t1A58#3 = 0.1e-8;
      real _t1A5A#1 = RAdd(_t1A56,_t1A58);
      tensor[2] _t1A5D#1 = <tensor[2]>[_t1A56,_t1A56];
      real _t1A5F#1 = VDot<2>(_t1A5D,xn1A11);
      bool _t1A62#1 = GT<real>(_t1A5A,_t1A5F);
      tensor[2] _t1A64#1 = <tensor[2]>[_t1A58,_t1A58];
      tensor[2] _t1A66#2 = VAdd<2>(_t1A64,xn1A11);
      real _t1A69#1 = VIndex<2,0>(_t1A66);
      real _t1A6B#2 = -0.e0;
      bool _t1A6D#1 = GT<real>(_t1A69,_t1A6B);
      real _t1A6F#1 = VIndex<2,1>(_t1A66);
      bool _t1A71#1 = GT<real>(_t1A6F,_t1A6B);
      bool _t1A73#1 = BAnd(_t1A6D,_t1A71);
      bool _t1A75#1 = BAnd(_t1A62,_t1A73);
      if _t1A75 then goto ASSIGN1A79 else goto ASSIGN1A7F
    ASSIGN1A79:  preds = [COND1A77]
      femData:MeshPos _t1A78#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1819,cellInt1818,xn1A11,pos1817);
      return _t1A78
      goto JOIN1A7B
    JOIN1A7B:  preds = [*RETURN(_t1A78)1A7A,*RETURN(_t1A7E)1A80]
      goto JOIN1A7C
    JOIN1A7C:  preds = [*JOIN1A7B,COND1A55]
      goto FOREACH1826
    ASSIGN1A7F:  preds = [COND1A77]
      femData:MeshPos _t1A7E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A7E
      goto JOIN1A7B
    ASSIGN1A82:  preds = [FOREACH1826]
      femData:MeshPos _t1A81#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A81
}
## input initialization
  ENTRY156E:  preds = []
    real isoval156F#1 = 0.2e0;
    globals.isoval1551 = isoval156F;
    real thick1572#1 = 0.7e-1;
    globals.thick1552 = thick1572;
    real _t1575#1 = -0.5e0;
    real _t1577#5 = 0.5e0;
    tensor[3] camEye1579#1 = <tensor[3]>[_t1575,_t1577,_t1577];
    globals.camEye1553 = camEye1579;
    tensor[3] camAt157C#1 = <tensor[3]>[_t1577,_t1577,_t1577];
    globals.camAt1554 = camAt157C;
    real _t157F#2 = 0.e0;
    real _t1581#2 = 0.1e1;
    tensor[3] camUp1583#2 = <tensor[3]>[_t157F,_t157F,_t1581];
    globals.camUp1555 = camUp1583;
    real camFOV1586#1 = 0.137e2;
    globals.camFOV1556 = camFOV1586;
    int iresU1589#2 = 10;
    globals.iresU1557 = iresU1589;
    globals.iresV1558 = iresU1589;
    real camNear158D#1 = -0.2e1;
    globals.camNear1559 = camNear158D;
    real camFar1590#1 = 0.5e1;
    globals.camFar155A = camFar1590;
    globals.refStep155B = _t1581;
    real rayStep1594#1 = 0.1e-1;
    globals.rayStep155C = rayStep1594;
    globals.lightVsp155D = camUp1583;
    real phongKa1598#1 = 0.1e0;
    globals.phongKa155E = phongKa1598;
    real phongKd159B#1 = 0.9e0;
    globals.phongKd155F = phongKd159B;
    bool debug159E#1 = false;
    globals.debug1560 = debug159E;
    int debugU15A1#1 = 8;
    globals.debugU1561 = debugU15A1;
    int debugV15A4#1 = 2;
    globals.debugV1562 = debugV15A4;
    real eps15A7#1 = 0.1e-8;
    globals.eps1563 = eps15A7;
    return
## global-variable initialization
  ENTRY15AB:  preds = []
    femData:Mesh a15AC#3 = globals.a154E;
    femData:Space 0b0450_intermedateGlobal15AE#1 = globals.0b0450_intermedateGlobal154F;
    femData:FemFunc 0c0452_intermedateGlobal15B0#1 = globals.0c0452_intermedateGlobal1550;
    tensor[3] camEye15B2#1 = globals.camEye1553;
    tensor[3] camAt15B4#1 = globals.camAt1554;
    tensor[3] camUp15B6#3 = globals.camUp1555;
    real camFOV15B8#1 = globals.camFOV1556;
    int iresU15BA#1 = globals.iresU1557;
    int iresV15BC#1 = globals.iresV1558;
    int _t15BE#1 = 0;
    int _t15C0#1 = 1;
    int _t15C2#1 = ExtractFemItem<int,NumCell(Mesh)>(a15AC);
    int _t15C4#1 = ISub(_t15C2,_t15C0);
    int[] _t15C6#1 = Range(_t15BE,_t15C4);
    femData:MeshCell[] _t15C8#1 = <femData:MeshCell[]>{};
  FOREACH15CB:  preds = [ASSIGN15C9,NEXT15D1]
    foreach (_t15CA in _t15C6) on exit goto GASSIGN15D2
      femData:MeshCell[] _t15CF#2 = phi(_t15C8,_t15CE)
    femData:MeshCell _t15CC#1 = LoadFem<femData:MeshCell>(a15AC,_t15CA);
    femData:MeshCell[] _t15CE#1 = Append<femData:MeshCell>(_t15CF,_t15CC);
    goto FOREACH15CB
  GASSIGN15D2:  preds = [FOREACH15CB]
    globals.0cell_a1567 = _t15CF;
    femData:Space b15D3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal15AE,a15AC);
    femData:FemFunc c15D5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal15B0,b15D3);
    globals.c1568 = c15D5;
    tensor[3] op1_e3_l_415D8#9 = VSub<3>(camAt15B4,camEye15B2);
    real op1_e3_l_615DB#1 = VDot<3>(op1_e3_l_415D8,op1_e3_l_415D8);
    real op1_e3_l_715DE#3 = Sqrt(op1_e3_l_615DB);
    real realLit15E2#1 = 0.1e1;
    real op1_e3_l_915E1#6 = RDiv(realLit15E2,op1_e3_l_715DE);
    tensor[3] camN15E6#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_415D8);
    real realLit15EA#3 = 0.e0;
    real r15EB#3 = TensorIndex<tensor[3],[0]>(camUp15B6);
    real r15EC#3 = RMul(realLit15EA,r15EB);
    real r15ED#3 = TensorIndex<tensor[3],[1]>(camUp15B6);
    real r15EE#3 = RMul(realLit15EA,r15ED);
    real r15EF#3 = TensorIndex<tensor[3],[2]>(camUp15B6);
    real r15F0#5 = RMul(realLit15EA,r15EF);
    real r15F1#3 = RAdd(r15EC,r15EE);
    real r15F2#3 = RAdd(r15F1,r15F0);
    real realLit15F3#3 = 0.1e1;
    real r15F4#1 = RMul(realLit15F3,r15EF);
    real r15F5#1 = RAdd(r15F1,r15F4);
    real realLit15F6#3 = -0.1e1;
    real r15F7#1 = RMul(realLit15F6,r15ED);
    real r15F8#1 = RAdd(r15EC,r15F7);
    real r15F9#1 = RAdd(r15F8,r15F0);
    tensor[3] tensor15FA#1 = <tensor[3]>[r15F2,r15F5,r15F9];
    real r15FB#1 = RMul(realLit15F6,r15EF);
    real r15FC#1 = RAdd(r15F1,r15FB);
    real r15FD#1 = RMul(realLit15F3,r15EB);
    real r15FE#1 = RAdd(r15FD,r15EE);
    real r15FF#1 = RAdd(r15FE,r15F0);
    tensor[3] tensor1600#1 = <tensor[3]>[r15FC,r15F2,r15FF];
    real r1601#1 = RMul(realLit15F3,r15ED);
    real r1602#1 = RAdd(r15EC,r1601);
    real r1603#1 = RAdd(r1602,r15F0);
    real r1604#1 = RMul(realLit15F6,r15EB);
    real r1605#1 = RAdd(r1604,r15EE);
    real r1606#1 = RAdd(r1605,r15F0);
    tensor[3] tensor1607#1 = <tensor[3]>[r1603,r1606,r15F2];
    tensor[3] projParam1629#1 = tensor15FA;
    real vdot162A#1 = VDot<3>(op1_e3_l_415D8,projParam1629);
    tensor[3] projParam162B#1 = tensor1600;
    real vdot162C#1 = VDot<3>(op1_e3_l_415D8,projParam162B);
    tensor[3] projParam162D#1 = tensor1607;
    real vdot162E#1 = VDot<3>(op1_e3_l_415D8,projParam162D);
    tensor[3] op1_e3_l_171628#6 = <tensor[3]>[vdot162A,vdot162C,vdot162E];
    real op1_e3_l_341637#1 = VDot<3>(op1_e3_l_171628,op1_e3_l_171628);
    real r163B#1 = RMul(op1_e3_l_915E1,op1_e3_l_915E1);
    real op1_e3_l_35163A#1 = RMul(r163B,op1_e3_l_341637);
    real op1_e3_l_36163F#1 = Sqrt(op1_e3_l_35163A);
    tensor[3] op1_e3_l_371642#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_171628);
    real realLit1646#1 = 0.1e1;
    real op1_e3_l_381645#2 = RDiv(realLit1646,op1_e3_l_36163F);
    tensor[3] camU164A#1 = VScale<3>(op1_e3_l_381645,op1_e3_l_371642);
    globals.camU1569 = camU164A;
    real realLit164F#3 = 0.e0;
    real r1650#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_415D8);
    real r1651#3 = RMul(realLit164F,r1650);
    real r1652#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_415D8);
    real r1653#3 = RMul(realLit164F,r1652);
    real r1654#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_415D8);
    real r1655#5 = RMul(realLit164F,r1654);
    real r1656#3 = RAdd(r1651,r1653);
    real r1657#3 = RAdd(r1656,r1655);
    real realLit1658#3 = 0.1e1;
    real r1659#1 = RMul(realLit1658,r1654);
    real r165A#1 = RAdd(r1656,r1659);
    real realLit165B#3 = -0.1e1;
    real r165C#1 = RMul(realLit165B,r1652);
    real r165D#1 = RAdd(r1651,r165C);
    real r165E#1 = RAdd(r165D,r1655);
    tensor[3] tensor165F#1 = <tensor[3]>[r1657,r165A,r165E];
    real r1660#1 = RMul(realLit165B,r1654);
    real r1661#1 = RAdd(r1656,r1660);
    real r1662#1 = RMul(realLit1658,r1650);
    real r1663#1 = RAdd(r1662,r1653);
    real r1664#1 = RAdd(r1663,r1655);
    tensor[3] tensor1665#1 = <tensor[3]>[r1661,r1657,r1664];
    real r1666#1 = RMul(realLit1658,r1652);
    real r1667#1 = RAdd(r1651,r1666);
    real r1668#1 = RAdd(r1667,r1655);
    real r1669#1 = RMul(realLit165B,r1650);
    real r166A#1 = RAdd(r1669,r1653);
    real r166B#1 = RAdd(r166A,r1655);
    tensor[3] tensor166C#1 = <tensor[3]>[r1668,r166B,r1657];
    tensor[3] projParam168E#1 = tensor165F;
    real vdot168F#1 = VDot<3>(op1_e3_l_171628,projParam168E);
    tensor[3] projParam1690#1 = tensor1665;
    real vdot1691#1 = VDot<3>(op1_e3_l_171628,projParam1690);
    tensor[3] projParam1692#1 = tensor166C;
    real vdot1693#1 = VDot<3>(op1_e3_l_171628,projParam1692);
    tensor[3] op1_e3_l_47168D#1 = <tensor[3]>[vdot168F,vdot1691,vdot1693];
    tensor[3] op1_e3_l_50169C#3 = VScale<3>(op1_e3_l_915E1,op1_e3_l_47168D);
    real r16A0#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_50169C);
    real r16A1#3 = RMul(op1_e3_l_381645,op1_e3_l_915E1);
    real r16A2#1 = RMul(r16A1,r16A0);
    real r16A3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_50169C);
    real r16A4#1 = RMul(r16A1,r16A3);
    real r16A5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_50169C);
    real r16A6#1 = RMul(r16A1,r16A5);
    tensor[3] camV169F#1 = <tensor[3]>[r16A2,r16A4,r16A6];
    globals.camV156A = camV169F;
    real _t16B1#1 = 0.314159265358979323846264338327950288e1;
    real _t16B3#1 = 0.36e3;
    real op1_e3_l_516B5#1 = RMul(camFOV15B8,_t16B1);
    real op1_e3_l_616B8#1 = RDiv(op1_e3_l_516B5,_t16B3);
    real op1_e3_l_1016BB#2 = Tan(op1_e3_l_616B8);
    real camVmax16BE#1 = RMul(op1_e3_l_1016BB,op1_e3_l_715DE);
    globals.camVmax156B = camVmax16BE;
    real _t16C2#1 = IntToReal(iresU15BA);
    real _t16C4#1 = IntToReal(iresV15BC);
    real r16C7#1 = RMul(_t16C2,op1_e3_l_1016BB);
    real op1_e3_l_1416C6#1 = RMul(r16C7,op1_e3_l_715DE);
    real camUmax16CB#1 = RDiv(op1_e3_l_1416C6,_t16C4);
    globals.camUmax156C = camUmax16CB;
    globals.rayVec156D = camN15E6;
    return
## strand
  strand ray (int ui16D1#3, int vi16D2#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY16E7:  preds = []
        femData:MeshCell[] 0cell_a16E8#1 = globals.0cell_a1567;
        femData:FemFunc c16EA#1 = globals.c1568;
        tensor[3] camEye16EC#1 = globals.camEye1553;
        int iresU16EE#2 = globals.iresU1557;
        int iresV16F0#3 = globals.iresV1558;
        int[] indecies16F2#2 = globals.indecies1564;
        tensor[2][] times16F4#1 = globals.times1565;
        tensor[3] camU16F6#1 = globals.camU1569;
        tensor[3] camV16F8#1 = globals.camV156A;
        real camVmax16FA#2 = globals.camVmax156B;
        real camUmax16FC#2 = globals.camUmax156C;
        real _t16FE#5 = -0.5e0;
        real _t1700#1 = IntToReal(ui16D1);
        real _t1702#1 = IntToReal(iresU16EE);
        real _t1704#3 = 0.5e0;
        real op1_e3_l_61706#1 = RSub(_t1702,_t1704);
        real op1_e3_l_71709#1 = RSub(_t1700,_t16FE);
        real op1_e3_l_8170C#1 = RSub(op1_e3_l_61706,_t16FE);
        real op1_e3_l_9170F#2 = RNeg(camUmax16FC);
        real op1_e3_l_101712#1 = RDiv(op1_e3_l_71709,op1_e3_l_8170C);
        real op1_e3_l_111715#1 = RSub(camUmax16FC,op1_e3_l_9170F);
        real op1_e3_l_131718#1 = RMul(op1_e3_l_101712,op1_e3_l_111715);
        real rayU171B#2 = RAdd(op1_e3_l_9170F,op1_e3_l_131718);
        real _t171E#1 = IntToReal(vi16D2);
        real _t1720#2 = IntToReal(iresV16F0);
        real op1_e3_l_61722#1 = RSub(_t1720,_t1704);
        real op1_e3_l_71725#2 = RSub(_t171E,_t16FE);
        real op1_e3_l_81728#1 = RSub(op1_e3_l_61722,_t16FE);
        real op1_e3_l_9172B#3 = RNeg(camVmax16FA);
        real op1_e3_l_10172E#1 = RDiv(op1_e3_l_71725,op1_e3_l_81728);
        real op1_e3_l_111731#2 = RSub(camVmax16FA,op1_e3_l_9172B);
        real op1_e3_l_131734#1 = RMul(op1_e3_l_10172E,op1_e3_l_111731);
        real rayV1737#1 = RAdd(op1_e3_l_9172B,op1_e3_l_131734);
        real op1_e3_l_23173A#1 = RSub(_t1720,_t1704);
        real op1_e3_l_25173D#1 = RSub(op1_e3_l_23173A,_t16FE);
        real op1_e3_l_271740#1 = RDiv(op1_e3_l_71725,op1_e3_l_25173D);
        real op1_e3_l_301743#1 = RMul(op1_e3_l_271740,op1_e3_l_111731);
        real op1_e3_l_311746#1 = RAdd(op1_e3_l_9172B,op1_e3_l_301743);
        tensor[3] op1_e3_l_321749#2 = VScale<3>(rayU171B,camU16F6);
        tensor[3] op1_e3_l_33174C#2 = VScale<3>(op1_e3_l_311746,camV16F8);
        tensor[3] UV174F#1 = VAdd<3>(op1_e3_l_321749,op1_e3_l_33174C);
        tensor[3] v1753#1 = VAdd<3>(camEye16EC,op1_e3_l_321749);
        tensor[3] rayOrig1752#1 = VAdd<3>(v1753,op1_e3_l_33174C);
        int _t1757#2 = IMul(ui16D1,iresV16F0);
        int _t1759#1 = IAdd(_t1757,vi16D2);
        int offset175B#2 = Subscript<int[]>(indecies16F2,_t1759);
        int _t175D#1 = IMul(iresU16EE,iresV16F0);
        int _t175F#1 = IAdd(_t175D,_t1757);
        int _t1761#1 = IAdd(_t175F,vi16D2);
        int len1763#1 = Subscript<int[]>(indecies16F2,_t1761);
        int itter1765#4 = 0;
        int idx1767#2 = offset175B;
        tensor[2] interval1769#3 = Subscript<tensor[2][]>(times16F4,idx1767);
        real s176B#1 = VIndex<2,0>(interval1769);
        real e176D#1 = VIndex<2,1>(interval1769);
        femData:MeshCell cc176F#2 = Subscript<femData:MeshCell[]>(0cell_a16E8,itter1765);
        int _t1771#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc176F);
        femData:FuncCell _t1773#1 = LoadFem<femData:FuncCell>(c16EA,_t1771);
        tensor[2][0] _t1775#1 = <tensor[2][0]>{};
        tensor[2][] _t1777#1 = MkDynamic<tensor[2],0>(_t1775);
        tensor[2,3][0] _t1779#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t177B#1 = MkDynamic<tensor[2,3],0>(_t1779);
        femData:MeshCell[0] _t177D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t177F#1 = MkDynamic<femData:MeshCell,0>(_t177D);
        self.rayU = rayU171B;
        self.rayV = rayV1737;
        self.UV = UV174F;
        self.rayOrig = rayOrig1752;
        self.offset = offset175B;
        self.len = len1763;
        self.itter = itter1765;
        self.idx = idx1767;
        self.interval = interval1769;
        self.s = s176B;
        self.e = e176D;
        self.cc = cc176F;
        self.fc = _t1773;
        self.intervals = _t1777;
        self.sints = _t177B;
        self.newCells = _t177F;
        self.count = itter1765;
        self.totalCount = itter1765;
        self.ui = ui16D1;
        self.vi = vi16D2;
        return
    end state init
    method start
        ENTRY1796:  preds = []
          femData:MeshCell[] 0cell_a1797#1 = globals.0cell_a1567;
          femData:FemFunc c1799#1 = globals.c1568;
          bool debug179B#1 = globals.debug1560;
          int debugU179D#1 = globals.debugU1561;
          int debugV179F#1 = globals.debugV1562;
          int[] cells17A1#1 = globals.cells1566;
          int len17A3#1 = self.len;
          int idx17A5#1 = self.idx;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug179B then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,debugU179D);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN17CA
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN17CA]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          int _t17B8#1 = 0;
          bool _t17BA#1 = EQ<int>(len17A3,_t17B8);
          if _t17BA then goto STABILIZE17BD else goto JOIN17BE
        STABILIZE17BD:  preds = [COND17BC]
          stabilize
          goto JOIN17BE
        JOIN17BE:  preds = [*STABILIZE17BD,COND17BC]
          int _t17BF#1 = Subscript<int[]>(cells17A1,idx17A5);
          femData:MeshCell cc17C1#2 = Subscript<femData:MeshCell[]>(0cell_a1797,_t17BF);
          int _t17C3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17C1);
          femData:FuncCell _t17C5#1 = LoadFem<femData:FuncCell>(c1799,_t17C3);
          self.cc = cc17C1;
          self.fc = _t17C5;
          active
        ASSIGN17CA:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,debugV179F);
          goto JOIN17B3
    end start
    method update
        ENTRY17CB:  preds = []
          femData:MeshCell[] 0cell_a17CC#1 = globals.0cell_a1567;
          femData:FemFunc c17CE#1 = globals.c1568;
          tensor[2][] times17D0#1 = globals.times1565;
          int[] cells17D2#1 = globals.cells1566;
          tensor[3] rayVec17D4#5 = globals.rayVec156D;
          tensor[3] rayOrig17D6#2 = self.rayOrig;
          int offset17D8#1 = self.offset;
          int len17DA#2 = self.len;
          int itter17DC#2 = self.itter;
          tensor[2] interval17DE#1 = self.interval;
          real s17E0#5 = self.s;
          real e17E2#3 = self.e;
          femData:MeshCell cc17E4#6 = self.cc;
          femData:FuncCell fc17E6#3 = self.fc;
          tensor[2][] intervals17E8#2 = self.intervals;
          tensor[2,3][] sints17EA#2 = self.sints;
          femData:MeshCell[] newCells17EC#2 = self.newCells;
          int count17EE#3 = self.count;
          int totalCount17F0#2 = self.totalCount;
          int ui17F2#3 = self.ui;
          int vi17F4#3 = self.vi;
          int _t17F6#8 = 1;
          bool _t17F8#1 = LT<int>(len17DA,_t17F6);
          if _t17F8 then goto STABILIZE17FB else goto JOIN17FC
        STABILIZE17FB:  preds = [COND17FA]
          stabilize
          goto JOIN17FC
        JOIN17FC:  preds = [*STABILIZE17FB,COND17FA]
          tensor[3] op1_e3_l_317FD#1 = VScale<3>(s17E0,rayVec17D4);
          tensor[3] rayStart1800#4 = VAdd<3>(rayOrig17D6,op1_e3_l_317FD);
          real _t1803#1 = VIndex<3,0>(rayStart1800);
          real _t1805#1 = VIndex<3,1>(rayStart1800);
          tensor[2] project1807#2 = <tensor[2]>[_t1803,_t1805];
          femData:FemFunc _t1809#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc17E6);
          femData:Space _t180B#6 = ExtractFem<femData:Space,femData:FemFunc>(_t1809);
          int _t180D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc17E6);
          femData:Mesh _t180F#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc17E4);
          int _t1811#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17E4);
          real _t1813#2 = VIndex<3,2>(rayStart1800);
          femData:MeshPos callNewtonPos1815#1 = _0A3A_msh_newtonInverse1816 (project1807,_t1811,_t180F);
          tensor[2] refPos1A85#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1815);
          int ilit1A88#1 = 6;
          int mulRes1A89#6 = IMul(_t180D,ilit1A88);
          int addRes1A8B#1 = mulRes1A89;
          int idx1A8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8B);
          int ilit1A8D#1 = 1;
          int addRes1A8E#1 = IAdd(mulRes1A89,ilit1A8D);
          int idx1A8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8E);
          int ilit1A90#1 = 2;
          int addRes1A91#1 = IAdd(mulRes1A89,ilit1A90);
          int idx1A92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A91);
          int ilit1A93#1 = 3;
          int addRes1A94#1 = IAdd(mulRes1A89,ilit1A93);
          int idx1A95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A94);
          int ilit1A96#1 = 4;
          int addRes1A97#1 = IAdd(mulRes1A89,ilit1A96);
          int idx1A98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A97);
          int ilit1A99#1 = 5;
          int addRes1A9A#1 = IAdd(mulRes1A89,ilit1A99);
          int idx1A9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A9A);
          int ilit1AB4#6 = 1;
          int idx1AB6#1 = idx1A8C;
          int mulRes1AB7#1 = IMul(ilit1AB4,idx1AB6);
          int idx1AB8#1 = idx1A8F;
          int mulRes1AB9#1 = IMul(ilit1AB4,idx1AB8);
          int idx1ABB#1 = idx1A92;
          int mulRes1ABC#1 = IMul(ilit1AB4,idx1ABB);
          int idx1ABE#1 = idx1A95;
          int mulRes1ABF#1 = IMul(ilit1AB4,idx1ABE);
          int idx1AC1#1 = idx1A98;
          int mulRes1AC2#1 = IMul(ilit1AB4,idx1AC1);
          int idx1AC4#1 = idx1A9B;
          int mulRes1AC5#1 = IMul(ilit1AB4,idx1AC4);
          real dof1AC6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB7);
          real dof1AC7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB9);
          real dof1AC8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABC);
          real dof1AC9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABF);
          real dof1ACA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC2);
          real dof1ACB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC5);
          tensor[6] dofs1ACC#1 = <tensor[6]>[dof1AC6,dof1AC7,dof1AC8,dof1AC9,dof1ACA,dof1ACB];
          tensor[6] femDofs1AB3#9 = dofs1ACC;
          real varAcc1AE8#2 = VIndex<2,0>(refPos1A85);
          real varAcc1AE9#2 = VIndex<2,1>(refPos1A85);
          real coeff1AEA#2 = 0.2e1;
          real iden1AEB#3 = varAcc1AE8;
          real prod21AEC#1 = RMul(iden1AEB,varAcc1AE8);
          real one1AED#7 = 0.1e1;
          real prod1AEE#2 = RMul(prod21AEC,one1AED);
          real coeff1AEF#3 = 0.4e1;
          real iden1AF0#3 = varAcc1AE9;
          real prod1AF1#2 = RMul(iden1AEB,iden1AF0);
          real coeff1AF2#2 = -0.3e1;
          real prod1AF3#3 = RMul(iden1AEB,one1AED);
          real prod21AF4#1 = RMul(iden1AF0,varAcc1AE9);
          real prod1AF5#2 = RMul(one1AED,prod21AF4);
          real prod1AF6#3 = RMul(one1AED,iden1AF0);
          real prod1AF7#1 = RMul(one1AED,one1AED);
          real mult1AF8#1 = RMul(one1AED,prod1AF7);
          real mult1AF9#1 = RMul(coeff1AF2,prod1AF6);
          real mult1AFA#2 = RMul(coeff1AEA,prod1AF5);
          real mult1AFB#1 = RMul(coeff1AF2,prod1AF3);
          real mult1AFC#2 = RMul(coeff1AEF,prod1AF1);
          real mult1AFD#2 = RMul(coeff1AEA,prod1AEE);
          real sum1AFE#1 = RAdd(mult1AFC,mult1AFD);
          real sum1AFF#1 = RAdd(mult1AFB,sum1AFE);
          real sum1B00#1 = RAdd(mult1AFA,sum1AFF);
          real sum1B01#1 = RAdd(mult1AF9,sum1B00);
          real sum1B02#1 = RAdd(mult1AF8,sum1B01);
          real intermediate1B03#1 = sum1B02;
          real coeff1B04#2 = -0.1e1;
          real mult1B05#1 = RMul(coeff1B04,prod1AF3);
          real sum1B06#1 = RAdd(mult1B05,mult1AFD);
          real intermediate1B07#1 = sum1B06;
          real mult1B08#1 = RMul(coeff1B04,prod1AF6);
          real sum1B09#1 = RAdd(mult1B08,mult1AFA);
          real intermediate1B0A#1 = sum1B09;
          real coeff1B0B#3 = -0.4e1;
          real mult1B0C#1 = RMul(coeff1AEF,prod1AF6);
          real mult1B0D#1 = RMul(coeff1B0B,prod1AF5);
          real mult1B0E#2 = RMul(coeff1B0B,prod1AF1);
          real sum1B0F#1 = RAdd(mult1B0D,mult1B0E);
          real sum1B10#1 = RAdd(mult1B0C,sum1B0F);
          real intermediate1B11#1 = sum1B10;
          real mult1B12#1 = RMul(coeff1AEF,prod1AF3);
          real mult1B13#1 = RMul(coeff1B0B,prod1AEE);
          real sum1B14#1 = RAdd(mult1B0E,mult1B13);
          real sum1B15#1 = RAdd(mult1B12,sum1B14);
          real intermediate1B16#1 = sum1B15;
          tensor[6] intermediateCons1B17#1 = <tensor[6]>[intermediate1B03,intermediate1B07,intermediate1B0A,mult1AFC,intermediate1B11,intermediate1B16];
          tensor[6] basisResult1AE7#1 = intermediateCons1B17;
          real compositionl1B49#1 = VDot<6>(femDofs1AB3,basisResult1AE7);
          real f01B4C#5 = RSub(compositionl1B49,_t1813);
          real _t1B4F#1 = VIndex<3,0>(rayVec17D4);
          real _t1B51#1 = VIndex<3,1>(rayVec17D4);
          tensor[2] _t1B53#2 = <tensor[2]>[_t1B4F,_t1B51];
          real varAcc1B56#1 = VIndex<2,0>(refPos1A85);
          real varAcc1B57#1 = VIndex<2,1>(refPos1A85);
          real coeff1B58#3 = 0.4e1;
          real iden1B59#1 = varAcc1B56;
          real one1B5A#4 = 0.1e1;
          real prod1B5B#3 = RMul(iden1B59,one1B5A);
          real iden1B5C#1 = varAcc1B57;
          real prod1B5D#3 = RMul(one1B5A,iden1B5C);
          real coeff1B5E#1 = -0.3e1;
          real prod1B5F#3 = RMul(one1B5A,one1B5A);
          real mult1B60#1 = RMul(coeff1B5E,prod1B5F);
          real mult1B61#3 = RMul(coeff1B58,prod1B5D);
          real mult1B62#3 = RMul(coeff1B58,prod1B5B);
          real sum1B63#1 = RAdd(mult1B61,mult1B62);
          real sum1B64#2 = RAdd(mult1B60,sum1B63);
          real intermediate1B65#1 = sum1B64;
          real coeff1B66#1 = -0.1e1;
          real mult1B67#2 = RMul(coeff1B66,prod1B5F);
          real sum1B68#1 = RAdd(mult1B67,mult1B62);
          real intermediate1B69#1 = sum1B68;
          real basisEval1B6A#2 = 0.e0;
          real coeff1B6B#2 = -0.4e1;
          real basisEval1B6C#2 = RMul(coeff1B6B,prod1B5D);
          real coeff1B6D#2 = -0.8e1;
          real mult1B6E#2 = RMul(coeff1B58,prod1B5F);
          real mult1B6F#1 = RMul(coeff1B6D,prod1B5B);
          real sum1B70#1 = RAdd(basisEval1B6C,mult1B6F);
          real sum1B71#1 = RAdd(mult1B6E,sum1B70);
          real intermediate1B72#1 = sum1B71;
          real intermediate1B73#1 = sum1B64;
          real sum1B74#1 = RAdd(mult1B67,mult1B61);
          real intermediate1B75#1 = sum1B74;
          real mult1B76#1 = RMul(coeff1B6D,prod1B5D);
          real mult1B77#2 = RMul(coeff1B6B,prod1B5B);
          real sum1B78#1 = RAdd(mult1B76,mult1B77);
          real sum1B79#1 = RAdd(mult1B6E,sum1B78);
          real intermediate1B7A#1 = sum1B79;
          tensor[6] intermediateCons1B7B#1 = <tensor[6]>[intermediate1B65,intermediate1B69,basisEval1B6A,mult1B61,basisEval1B6C,intermediate1B72];
          tensor[6] intermediateCons1B7C#1 = <tensor[6]>[intermediate1B73,basisEval1B6A,intermediate1B75,mult1B62,intermediate1B7A,mult1B77];
          tensor[6] projParam1BA8#1 = intermediateCons1B7B;
          real vdot1BA9#3 = VDot<6>(femDofs1AB3,projParam1BA8);
          tensor[6] projParam1BAA#1 = intermediateCons1B7C;
          real vdot1BAB#3 = VDot<6>(femDofs1AB3,projParam1BAA);
          int ilit1BB3#1 = 3;
          int mulRes1BB4#3 = IMul(_t1811,ilit1BB3);
          int addRes1BB6#1 = mulRes1BB4;
          int idx1BB7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB6);
          int ilit1BB8#1 = 1;
          int addRes1BB9#1 = IAdd(mulRes1BB4,ilit1BB8);
          int idx1BBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB9);
          int ilit1BBB#1 = 2;
          int addRes1BBC#1 = IAdd(mulRes1BB4,ilit1BBB);
          int idx1BBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BBC);
          int ilit1BCE#3 = 2;
          int idx1BCF#1 = idx1BB7;
          int mulRes1BD0#2 = IMul(ilit1BCE,idx1BCF);
          int addRes1BD1#1 = mulRes1BD0;
          int ilit1BD2#3 = 1;
          int addRes1BD3#1 = IAdd(ilit1BD2,mulRes1BD0);
          real dof_load1BD4#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD1);
          real dof_load1BD5#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD3);
          int idx1BD7#1 = idx1BBA;
          int mulRes1BD8#2 = IMul(ilit1BCE,idx1BD7);
          int addRes1BD9#1 = mulRes1BD8;
          int addRes1BDA#1 = IAdd(ilit1BD2,mulRes1BD8);
          real dof_load1BDB#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD9);
          real dof_load1BDC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BDA);
          int idx1BDE#1 = idx1BBD;
          int mulRes1BDF#2 = IMul(ilit1BCE,idx1BDE);
          int addRes1BE0#1 = mulRes1BDF;
          int addRes1BE1#1 = IAdd(ilit1BD2,mulRes1BDF);
          real dof_load1BE2#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE0);
          real dof_load1BE3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE1);
          real coeff1C03#1 = -0.1e1;
          real one1C04#3 = 0.1e1;
          real prod1C05#2 = RMul(one1C04,one1C04);
          real basisEval1C06#4 = RMul(coeff1C03,prod1C05);
          real basisEval1C07#4 = RMul(one1C04,prod1C05);
          real basisEval1C08#4 = 0.e0;
          real r1C19#2 = dof_load1BD4;
          real r1C1A#2 = basisEval1C06;
          real r1C1B#1 = RMul(r1C19,r1C1A);
          real r1C1C#2 = dof_load1BDB;
          real r1C1D#2 = basisEval1C07;
          real r1C1E#1 = RMul(r1C1C,r1C1D);
          real r1C1F#2 = dof_load1BE2;
          real r1C20#2 = basisEval1C08;
          real r1C21#1 = RMul(r1C1F,r1C20);
          real r1C22#1 = RAdd(r1C1B,r1C1E);
          real r1C23#1 = RAdd(r1C22,r1C21);
          real r1C24#2 = basisEval1C06;
          real r1C25#1 = RMul(r1C19,r1C24);
          real r1C26#2 = basisEval1C08;
          real r1C27#1 = RMul(r1C1C,r1C26);
          real r1C28#2 = basisEval1C07;
          real r1C29#1 = RMul(r1C1F,r1C28);
          real r1C2A#1 = RAdd(r1C25,r1C27);
          real r1C2B#1 = RAdd(r1C2A,r1C29);
          real r1C2D#2 = dof_load1BD5;
          real r1C2E#1 = RMul(r1C2D,r1C1A);
          real r1C2F#2 = dof_load1BDC;
          real r1C30#1 = RMul(r1C2F,r1C1D);
          real r1C31#2 = dof_load1BE3;
          real r1C32#1 = RMul(r1C31,r1C20);
          real r1C33#1 = RAdd(r1C2E,r1C30);
          real r1C34#1 = RAdd(r1C33,r1C32);
          real r1C35#1 = RMul(r1C2D,r1C24);
          real r1C36#1 = RMul(r1C2F,r1C26);
          real r1C37#1 = RMul(r1C31,r1C28);
          real r1C38#1 = RAdd(r1C35,r1C36);
          real r1C39#1 = RAdd(r1C38,r1C37);
          real realLit1C60#4 = 0.e0;
          real r1C61#2 = r1C23;
          real r1C62#1 = RMul(realLit1C60,r1C61);
          real realLit1C63#2 = -0.1e1;
          real r1C64#2 = r1C34;
          real r1C65#1 = RMul(realLit1C63,r1C64);
          real r1C66#1 = RAdd(r1C62,r1C65);
          real r1C67#2 = r1C2B;
          real r1C68#1 = RMul(realLit1C60,r1C67);
          real r1C69#2 = r1C39;
          real r1C6A#1 = RMul(realLit1C63,r1C69);
          real r1C6B#1 = RAdd(r1C68,r1C6A);
          real realLit1C6D#2 = 0.1e1;
          real r1C6E#1 = RMul(realLit1C6D,r1C61);
          real r1C6F#1 = RMul(realLit1C60,r1C64);
          real r1C70#1 = RAdd(r1C6E,r1C6F);
          real r1C71#1 = RMul(realLit1C6D,r1C67);
          real r1C72#1 = RMul(realLit1C60,r1C69);
          real r1C73#1 = RAdd(r1C71,r1C72);
          real r1C8D#1 = dof_load1BD4;
          real r1C8E#2 = basisEval1C06;
          real r1C8F#1 = RMul(r1C8D,r1C8E);
          real r1C90#1 = dof_load1BDB;
          real r1C91#2 = basisEval1C07;
          real r1C92#1 = RMul(r1C90,r1C91);
          real r1C93#1 = dof_load1BE2;
          real r1C94#2 = basisEval1C08;
          real r1C95#1 = RMul(r1C93,r1C94);
          real r1C96#1 = RAdd(r1C8F,r1C92);
          real r1C97#2 = RAdd(r1C96,r1C95);
          real r1C98#1 = dof_load1BD5;
          real r1C99#1 = RMul(r1C98,r1C8E);
          real r1C9A#1 = dof_load1BDC;
          real r1C9B#1 = RMul(r1C9A,r1C91);
          real r1C9C#1 = dof_load1BE3;
          real r1C9D#1 = RMul(r1C9C,r1C94);
          real r1C9E#1 = RAdd(r1C99,r1C9B);
          real r1C9F#2 = RAdd(r1C9E,r1C9D);
          tensor[2] probe_l_101C8C#1 = <tensor[2]>[r1C97,r1C9F];
          real r1CB6#1 = dof_load1BD4;
          real r1CB7#2 = basisEval1C06;
          real r1CB8#1 = RMul(r1CB6,r1CB7);
          real r1CB9#1 = dof_load1BDB;
          real r1CBA#2 = basisEval1C08;
          real r1CBB#1 = RMul(r1CB9,r1CBA);
          real r1CBC#1 = dof_load1BE2;
          real r1CBD#2 = basisEval1C07;
          real r1CBE#1 = RMul(r1CBC,r1CBD);
          real r1CBF#1 = RAdd(r1CB8,r1CBB);
          real r1CC0#1 = RAdd(r1CBF,r1CBE);
          real r1CC1#1 = dof_load1BD5;
          real r1CC2#1 = RMul(r1CC1,r1CB7);
          real r1CC3#1 = dof_load1BDC;
          real r1CC4#1 = RMul(r1CC3,r1CBA);
          real r1CC5#1 = dof_load1BE3;
          real r1CC6#1 = RMul(r1CC5,r1CBD);
          real r1CC7#1 = RAdd(r1CC2,r1CC4);
          real r1CC8#1 = RAdd(r1CC7,r1CC6);
          real realLit1CDF#2 = 0.e0;
          real r1CE0#2 = r1CC0;
          real r1CE1#1 = RMul(realLit1CDF,r1CE0);
          real realLit1CE2#1 = 0.1e1;
          real r1CE3#2 = r1CC8;
          real r1CE4#1 = RMul(realLit1CE2,r1CE3);
          real r1CE5#2 = RAdd(r1CE1,r1CE4);
          real realLit1CE6#1 = -0.1e1;
          real r1CE7#1 = RMul(realLit1CE6,r1CE0);
          real r1CE8#1 = RMul(realLit1CDF,r1CE3);
          real r1CE9#2 = RAdd(r1CE7,r1CE8);
          tensor[2] op1_e3_l_121CDE#1 = <tensor[2]>[r1CE5,r1CE9];
          real realLit1CF8#4 = 0.e0;
          real r1CF9#2 = r1C66;
          real r1CFA#1 = RMul(realLit1CF8,r1CF9);
          real realLit1CFB#2 = -0.1e1;
          real r1CFC#2 = r1C6B;
          real r1CFD#1 = RMul(realLit1CFB,r1CFC);
          real r1CFE#2 = RAdd(r1CFA,r1CFD);
          real r1CFF#2 = r1C70;
          real r1D00#1 = RMul(realLit1CF8,r1CFF);
          real r1D01#2 = r1C73;
          real r1D02#1 = RMul(realLit1CFB,r1D01);
          real r1D03#2 = RAdd(r1D00,r1D02);
          real realLit1D05#2 = 0.1e1;
          real r1D06#1 = RMul(realLit1D05,r1CF9);
          real r1D07#1 = RMul(realLit1CF8,r1CFC);
          real r1D08#2 = RAdd(r1D06,r1D07);
          real r1D09#1 = RMul(realLit1D05,r1CFF);
          real r1D0A#1 = RMul(realLit1CF8,r1D01);
          real r1D0B#2 = RAdd(r1D09,r1D0A);
          real op1_e3_l_141D24#10 = VDot<2>(probe_l_101C8C,op1_e3_l_121CDE);
          real r1D28#1 = r1CFE;
          real r1D29#4 = RDiv(r1D28,op1_e3_l_141D24);
          real r1D2A#1 = r1D03;
          real r1D2B#4 = RDiv(r1D2A,op1_e3_l_141D24);
          real r1D2D#1 = r1D08;
          real r1D2E#4 = RDiv(r1D2D,op1_e3_l_141D24);
          real r1D2F#1 = r1D0B;
          real r1D30#4 = RDiv(r1D2F,op1_e3_l_141D24);
          real r1D3F#2 = vdot1BA9;
          real r1D40#1 = r1D29;
          real r1D41#1 = RMul(r1D3F,r1D40);
          real r1D42#2 = vdot1BAB;
          real r1D43#1 = r1D2E;
          real r1D44#1 = RMul(r1D42,r1D43);
          real r1D45#1 = RAdd(r1D41,r1D44);
          real r1D46#1 = r1D2B;
          real r1D47#1 = RMul(r1D3F,r1D46);
          real r1D48#1 = r1D30;
          real r1D49#1 = RMul(r1D42,r1D48);
          real r1D4A#1 = RAdd(r1D47,r1D49);
          tensor[2] _t1D3E#2 = <tensor[2]>[r1D45,r1D4A];
          real _t1D59#2 = VIndex<3,2>(rayVec17D4);
          int _t1D5B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc17E4);
          real _t1D5D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t180F,_t1D5B);
          real r1D60#2 = vdot1BA9;
          real r1D61#1 = r1D29;
          real r1D62#1 = RMul(r1D60,r1D61);
          real r1D63#2 = vdot1BAB;
          real r1D64#1 = r1D2E;
          real r1D65#1 = RMul(r1D63,r1D64);
          real r1D66#1 = RAdd(r1D62,r1D65);
          real r1D67#1 = r1D2B;
          real r1D68#1 = RMul(r1D60,r1D67);
          real r1D69#1 = r1D30;
          real r1D6A#1 = RMul(r1D63,r1D69);
          real r1D6B#1 = RAdd(r1D68,r1D6A);
          tensor[2] op1_e3_l_191D5F#1 = <tensor[2]>[r1D66,r1D6B];
          real op1_e3_l_201D7A#1 = VDot<2>(_t1B53,op1_e3_l_191D5F);
          real op1_e3_l_211D7D#1 = RSub(op1_e3_l_201D7A,_t1D59);
          real op1_e3_l_221D80#1 = Abs<real>(op1_e3_l_211D7D);
          real _t1D83#1 = RDiv(op1_e3_l_221D80,_t1D5D);
          real _t1D86#1 = RSub(e17E2,s17E0);
          real gradEps1D89#6 = Min<real>(_t1D83,_t1D86);
          string _t1D8B#1 = "hmmmm:";
          string _t1D8D#18 = "\n";
          Print<[string,tensor[2],string]>(_t1D8B,_t1D3E,_t1D8D);
          string _t1D90#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t1D90,femDofs1AB3,_t1D8D);
          tensor[2] op1_e3_l_31D93#1 = VScale<2>(gradEps1D89,_t1B53);
          tensor[2] _t1D96#1 = VAdd<2>(project1807,op1_e3_l_31D93);
          femData:MeshPos callNewtonPos1D99#1 = _0A3A_msh_newtonInverse1816 (_t1D96,_t1811,_t180F);
          tensor[2] refPos1D9B#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1D99);
          real varAcc1D9E#2 = VIndex<2,0>(refPos1D9B);
          real varAcc1D9F#2 = VIndex<2,1>(refPos1D9B);
          real coeff1DA0#2 = 0.2e1;
          real iden1DA1#3 = varAcc1D9E;
          real prod21DA2#1 = RMul(iden1DA1,varAcc1D9E);
          real one1DA3#7 = 0.1e1;
          real prod1DA4#2 = RMul(prod21DA2,one1DA3);
          real coeff1DA5#3 = 0.4e1;
          real iden1DA6#3 = varAcc1D9F;
          real prod1DA7#2 = RMul(iden1DA1,iden1DA6);
          real coeff1DA8#2 = -0.3e1;
          real prod1DA9#3 = RMul(iden1DA1,one1DA3);
          real prod21DAA#1 = RMul(iden1DA6,varAcc1D9F);
          real prod1DAB#2 = RMul(one1DA3,prod21DAA);
          real prod1DAC#3 = RMul(one1DA3,iden1DA6);
          real prod1DAD#1 = RMul(one1DA3,one1DA3);
          real mult1DAE#1 = RMul(one1DA3,prod1DAD);
          real mult1DAF#1 = RMul(coeff1DA8,prod1DAC);
          real mult1DB0#2 = RMul(coeff1DA0,prod1DAB);
          real mult1DB1#1 = RMul(coeff1DA8,prod1DA9);
          real mult1DB2#2 = RMul(coeff1DA5,prod1DA7);
          real mult1DB3#2 = RMul(coeff1DA0,prod1DA4);
          real sum1DB4#1 = RAdd(mult1DB2,mult1DB3);
          real sum1DB5#1 = RAdd(mult1DB1,sum1DB4);
          real sum1DB6#1 = RAdd(mult1DB0,sum1DB5);
          real sum1DB7#1 = RAdd(mult1DAF,sum1DB6);
          real sum1DB8#1 = RAdd(mult1DAE,sum1DB7);
          real intermediate1DB9#1 = sum1DB8;
          real coeff1DBA#2 = -0.1e1;
          real mult1DBB#1 = RMul(coeff1DBA,prod1DA9);
          real sum1DBC#1 = RAdd(mult1DBB,mult1DB3);
          real intermediate1DBD#1 = sum1DBC;
          real mult1DBE#1 = RMul(coeff1DBA,prod1DAC);
          real sum1DBF#1 = RAdd(mult1DBE,mult1DB0);
          real intermediate1DC0#1 = sum1DBF;
          real coeff1DC1#3 = -0.4e1;
          real mult1DC2#1 = RMul(coeff1DA5,prod1DAC);
          real mult1DC3#1 = RMul(coeff1DC1,prod1DAB);
          real mult1DC4#2 = RMul(coeff1DC1,prod1DA7);
          real sum1DC5#1 = RAdd(mult1DC3,mult1DC4);
          real sum1DC6#1 = RAdd(mult1DC2,sum1DC5);
          real intermediate1DC7#1 = sum1DC6;
          real mult1DC8#1 = RMul(coeff1DA5,prod1DA9);
          real mult1DC9#1 = RMul(coeff1DC1,prod1DA4);
          real sum1DCA#1 = RAdd(mult1DC4,mult1DC9);
          real sum1DCB#1 = RAdd(mult1DC8,sum1DCA);
          real intermediate1DCC#1 = sum1DCB;
          tensor[6] intermediateCons1DCD#1 = <tensor[6]>[intermediate1DB9,intermediate1DBD,intermediate1DC0,mult1DB2,intermediate1DC7,intermediate1DCC];
          tensor[6] basisResult1D9D#1 = intermediateCons1DCD;
          real compositionl1DFF#1 = VDot<6>(femDofs1AB3,basisResult1D9D);
          real op1_e3_l_111E02#1 = RSub(compositionl1DFF,_t1813);
          real op1_e3_l_121E05#1 = RMul(gradEps1D89,_t1D59);
          real f11E08#4 = RSub(op1_e3_l_111E02,op1_e3_l_121E05);
          string _t1E0B#1 = "=========================\n";
          Print<[string]>(_t1E0B);
          string _t1E0E#1 = "Ui/Vi:";
          string _t1E10#2 = "/";
          Print<[string,int,string,int,string]>(_t1E0E,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t1E13#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1E13,cc17E4,_t1D8D);
          string _t1E16#1 = "hess:";
          real coeff1E1B#1 = 0.4e1;
          real one1E1C#2 = 0.1e1;
          real prod1E1D#3 = RMul(one1E1C,one1E1C);
          real basisEval1E1E#6 = RMul(coeff1E1B,prod1E1D);
          real basisEval1E1F#8 = 0.e0;
          real coeff1E20#1 = -0.8e1;
          real basisEval1E21#2 = RMul(coeff1E20,prod1E1D);
          real coeff1E22#1 = -0.4e1;
          real basisEval1E23#2 = RMul(coeff1E22,prod1E1D);
          tensor[6] intermediateCons1E24#1 = <tensor[6]>[basisEval1E1E,basisEval1E1E,basisEval1E1F,basisEval1E1F,basisEval1E1F,basisEval1E21];
          tensor[6] intermediateCons1E25#2 = <tensor[6]>[basisEval1E1E,basisEval1E1F,basisEval1E1F,basisEval1E1E,basisEval1E23,basisEval1E23];
          tensor[6] intermediateCons1E26#1 = <tensor[6]>[basisEval1E1E,basisEval1E1F,basisEval1E1E,basisEval1E1F,basisEval1E21,basisEval1E1F];
          tensor[6] projParam1E3D#1 = intermediateCons1E24;
          real vdot1E3E#1 = VDot<6>(femDofs1AB3,projParam1E3D);
          tensor[6] projParam1E3F#1 = intermediateCons1E25;
          real vdot1E40#1 = VDot<6>(femDofs1AB3,projParam1E3F);
          tensor[6] projParam1E42#1 = intermediateCons1E25;
          real vdot1E43#1 = VDot<6>(femDofs1AB3,projParam1E42);
          tensor[6] projParam1E44#1 = intermediateCons1E26;
          real vdot1E45#1 = VDot<6>(femDofs1AB3,projParam1E44);
          real r1E54#2 = vdot1E3E;
          real r1E55#2 = r1D29;
          real r1E56#1 = RMul(r1E54,r1E55);
          real r1E57#2 = vdot1E40;
          real r1E58#2 = r1D2E;
          real r1E59#1 = RMul(r1E57,r1E58);
          real r1E5A#1 = RAdd(r1E56,r1E59);
          real r1E5B#2 = r1D2B;
          real r1E5C#1 = RMul(r1E54,r1E5B);
          real r1E5D#2 = r1D30;
          real r1E5E#1 = RMul(r1E57,r1E5D);
          real r1E5F#1 = RAdd(r1E5C,r1E5E);
          real r1E61#2 = vdot1E43;
          real r1E62#1 = RMul(r1E61,r1E55);
          real r1E63#2 = vdot1E45;
          real r1E64#1 = RMul(r1E63,r1E58);
          real r1E65#1 = RAdd(r1E62,r1E64);
          real r1E66#1 = RMul(r1E61,r1E5B);
          real r1E67#1 = RMul(r1E63,r1E5D);
          real r1E68#1 = RAdd(r1E66,r1E67);
          real basisEval1E85#24 = 0.e0;
          real r1E91#4 = dof_load1BD4;
          real r1E92#2 = basisEval1E85;
          real r1E93#1 = RMul(r1E91,r1E92);
          real r1E94#4 = dof_load1BDB;
          real r1E95#2 = basisEval1E85;
          real r1E96#1 = RMul(r1E94,r1E95);
          real r1E97#4 = dof_load1BE2;
          real r1E98#2 = basisEval1E85;
          real r1E99#1 = RMul(r1E97,r1E98);
          real r1E9A#1 = RAdd(r1E93,r1E96);
          real r1E9B#1 = RAdd(r1E9A,r1E99);
          real r1E9C#2 = basisEval1E85;
          real r1E9D#1 = RMul(r1E91,r1E9C);
          real r1E9E#2 = basisEval1E85;
          real r1E9F#1 = RMul(r1E94,r1E9E);
          real r1EA0#2 = basisEval1E85;
          real r1EA1#1 = RMul(r1E97,r1EA0);
          real r1EA2#1 = RAdd(r1E9D,r1E9F);
          real r1EA3#1 = RAdd(r1EA2,r1EA1);
          real r1EA5#2 = basisEval1E85;
          real r1EA6#1 = RMul(r1E91,r1EA5);
          real r1EA7#2 = basisEval1E85;
          real r1EA8#1 = RMul(r1E94,r1EA7);
          real r1EA9#2 = basisEval1E85;
          real r1EAA#1 = RMul(r1E97,r1EA9);
          real r1EAB#1 = RAdd(r1EA6,r1EA8);
          real r1EAC#1 = RAdd(r1EAB,r1EAA);
          real r1EAD#2 = basisEval1E85;
          real r1EAE#1 = RMul(r1E91,r1EAD);
          real r1EAF#2 = basisEval1E85;
          real r1EB0#1 = RMul(r1E94,r1EAF);
          real r1EB1#2 = basisEval1E85;
          real r1EB2#1 = RMul(r1E97,r1EB1);
          real r1EB3#1 = RAdd(r1EAE,r1EB0);
          real r1EB4#1 = RAdd(r1EB3,r1EB2);
          real r1EB7#4 = dof_load1BD5;
          real r1EB8#1 = RMul(r1EB7,r1E92);
          real r1EB9#4 = dof_load1BDC;
          real r1EBA#1 = RMul(r1EB9,r1E95);
          real r1EBB#4 = dof_load1BE3;
          real r1EBC#1 = RMul(r1EBB,r1E98);
          real r1EBD#1 = RAdd(r1EB8,r1EBA);
          real r1EBE#1 = RAdd(r1EBD,r1EBC);
          real r1EBF#1 = RMul(r1EB7,r1E9C);
          real r1EC0#1 = RMul(r1EB9,r1E9E);
          real r1EC1#1 = RMul(r1EBB,r1EA0);
          real r1EC2#1 = RAdd(r1EBF,r1EC0);
          real r1EC3#1 = RAdd(r1EC2,r1EC1);
          real r1EC5#1 = RMul(r1EB7,r1EA5);
          real r1EC6#1 = RMul(r1EB9,r1EA7);
          real r1EC7#1 = RMul(r1EBB,r1EA9);
          real r1EC8#1 = RAdd(r1EC5,r1EC6);
          real r1EC9#1 = RAdd(r1EC8,r1EC7);
          real r1ECA#1 = RMul(r1EB7,r1EAD);
          real r1ECB#1 = RMul(r1EB9,r1EAF);
          real r1ECC#1 = RMul(r1EBB,r1EB1);
          real r1ECD#1 = RAdd(r1ECA,r1ECB);
          real r1ECE#1 = RAdd(r1ECD,r1ECC);
          real realLit1F14#8 = 0.e0;
          real r1F15#2 = r1E9B;
          real r1F16#1 = RMul(realLit1F14,r1F15);
          real realLit1F17#4 = -0.1e1;
          real r1F18#2 = r1EBE;
          real r1F19#1 = RMul(realLit1F17,r1F18);
          real r1F1A#1 = RAdd(r1F16,r1F19);
          real r1F1B#2 = r1EA3;
          real r1F1C#1 = RMul(realLit1F14,r1F1B);
          real r1F1D#2 = r1EC3;
          real r1F1E#1 = RMul(realLit1F17,r1F1D);
          real r1F1F#1 = RAdd(r1F1C,r1F1E);
          real r1F21#2 = r1EAC;
          real r1F22#1 = RMul(realLit1F14,r1F21);
          real r1F23#2 = r1EC9;
          real r1F24#1 = RMul(realLit1F17,r1F23);
          real r1F25#1 = RAdd(r1F22,r1F24);
          real r1F26#2 = r1EB4;
          real r1F27#1 = RMul(realLit1F14,r1F26);
          real r1F28#2 = r1ECE;
          real r1F29#1 = RMul(realLit1F17,r1F28);
          real r1F2A#1 = RAdd(r1F27,r1F29);
          real realLit1F2D#4 = 0.1e1;
          real r1F2E#1 = RMul(realLit1F2D,r1F15);
          real r1F2F#1 = RMul(realLit1F14,r1F18);
          real r1F30#1 = RAdd(r1F2E,r1F2F);
          real r1F31#1 = RMul(realLit1F2D,r1F1B);
          real r1F32#1 = RMul(realLit1F14,r1F1D);
          real r1F33#1 = RAdd(r1F31,r1F32);
          real r1F35#1 = RMul(realLit1F2D,r1F21);
          real r1F36#1 = RMul(realLit1F14,r1F23);
          real r1F37#1 = RAdd(r1F35,r1F36);
          real r1F38#1 = RMul(realLit1F2D,r1F26);
          real r1F39#1 = RMul(realLit1F14,r1F28);
          real r1F3A#1 = RAdd(r1F38,r1F39);
          real realLit1F69#8 = 0.e0;
          real r1F6A#2 = r1F1A;
          real r1F6B#1 = RMul(realLit1F69,r1F6A);
          real realLit1F6C#4 = -0.1e1;
          real r1F6D#2 = r1F25;
          real r1F6E#1 = RMul(realLit1F6C,r1F6D);
          real r1F6F#1 = RAdd(r1F6B,r1F6E);
          real r1F70#2 = r1F1F;
          real r1F71#1 = RMul(realLit1F69,r1F70);
          real r1F72#2 = r1F2A;
          real r1F73#1 = RMul(realLit1F6C,r1F72);
          real r1F74#1 = RAdd(r1F71,r1F73);
          tensor[2] tensor1F75#1 = <tensor[2]>[r1F6F,r1F74];
          real r1F76#2 = r1F30;
          real r1F77#1 = RMul(realLit1F69,r1F76);
          real r1F78#2 = r1F37;
          real r1F79#1 = RMul(realLit1F6C,r1F78);
          real r1F7A#1 = RAdd(r1F77,r1F79);
          real r1F7B#2 = r1F33;
          real r1F7C#1 = RMul(realLit1F69,r1F7B);
          real r1F7D#2 = r1F3A;
          real r1F7E#1 = RMul(realLit1F6C,r1F7D);
          real r1F7F#1 = RAdd(r1F7C,r1F7E);
          tensor[2] tensor1F80#1 = <tensor[2]>[r1F7A,r1F7F];
          real realLit1F82#4 = 0.1e1;
          real r1F83#1 = RMul(realLit1F82,r1F6A);
          real r1F84#1 = RMul(realLit1F69,r1F6D);
          real r1F85#1 = RAdd(r1F83,r1F84);
          real r1F86#1 = RMul(realLit1F82,r1F70);
          real r1F87#1 = RMul(realLit1F69,r1F72);
          real r1F88#1 = RAdd(r1F86,r1F87);
          tensor[2] tensor1F89#1 = <tensor[2]>[r1F85,r1F88];
          real r1F8A#1 = RMul(realLit1F82,r1F76);
          real r1F8B#1 = RMul(realLit1F69,r1F78);
          real r1F8C#1 = RAdd(r1F8A,r1F8B);
          real r1F8D#1 = RMul(realLit1F82,r1F7B);
          real r1F8E#1 = RMul(realLit1F69,r1F7D);
          real r1F8F#1 = RAdd(r1F8D,r1F8E);
          tensor[2] tensor1F90#1 = <tensor[2]>[r1F8C,r1F8F];
          real r1FBE#2 = dof_load1BD4;
          real r1FBF#2 = basisEval1E85;
          real r1FC0#1 = RMul(r1FBE,r1FBF);
          real r1FC1#2 = dof_load1BDB;
          real r1FC2#2 = basisEval1E85;
          real r1FC3#1 = RMul(r1FC1,r1FC2);
          real r1FC4#2 = dof_load1BE2;
          real r1FC5#2 = basisEval1E85;
          real r1FC6#1 = RMul(r1FC4,r1FC5);
          real r1FC7#1 = RAdd(r1FC0,r1FC3);
          real r1FC8#1 = RAdd(r1FC7,r1FC6);
          real r1FC9#2 = basisEval1E85;
          real r1FCA#1 = RMul(r1FBE,r1FC9);
          real r1FCB#2 = basisEval1E85;
          real r1FCC#1 = RMul(r1FC1,r1FCB);
          real r1FCD#2 = basisEval1E85;
          real r1FCE#1 = RMul(r1FC4,r1FCD);
          real r1FCF#1 = RAdd(r1FCA,r1FCC);
          real r1FD0#1 = RAdd(r1FCF,r1FCE);
          real r1FD2#2 = dof_load1BD5;
          real r1FD3#1 = RMul(r1FD2,r1FBF);
          real r1FD4#2 = dof_load1BDC;
          real r1FD5#1 = RMul(r1FD4,r1FC2);
          real r1FD6#2 = dof_load1BE3;
          real r1FD7#1 = RMul(r1FD6,r1FC5);
          real r1FD8#1 = RAdd(r1FD3,r1FD5);
          real r1FD9#1 = RAdd(r1FD8,r1FD7);
          real r1FDA#1 = RMul(r1FD2,r1FC9);
          real r1FDB#1 = RMul(r1FD4,r1FCB);
          real r1FDC#1 = RMul(r1FD6,r1FCD);
          real r1FDD#1 = RAdd(r1FDA,r1FDB);
          real r1FDE#1 = RAdd(r1FDD,r1FDC);
          real r2005#2 = dof_load1BD4;
          real r2006#2 = basisEval1E85;
          real r2007#1 = RMul(r2005,r2006);
          real r2008#2 = dof_load1BDB;
          real r2009#2 = basisEval1E85;
          real r200A#1 = RMul(r2008,r2009);
          real r200B#2 = dof_load1BE2;
          real r200C#2 = basisEval1E85;
          real r200D#1 = RMul(r200B,r200C);
          real r200E#1 = RAdd(r2007,r200A);
          real r200F#1 = RAdd(r200E,r200D);
          real r2010#2 = basisEval1E85;
          real r2011#1 = RMul(r2005,r2010);
          real r2012#2 = basisEval1E85;
          real r2013#1 = RMul(r2008,r2012);
          real r2014#2 = basisEval1E85;
          real r2015#1 = RMul(r200B,r2014);
          real r2016#1 = RAdd(r2011,r2013);
          real r2017#1 = RAdd(r2016,r2015);
          real r2019#2 = dof_load1BD5;
          real r201A#1 = RMul(r2019,r2006);
          real r201B#2 = dof_load1BDC;
          real r201C#1 = RMul(r201B,r2009);
          real r201D#2 = dof_load1BE3;
          real r201E#1 = RMul(r201D,r200C);
          real r201F#1 = RAdd(r201A,r201C);
          real r2020#1 = RAdd(r201F,r201E);
          real r2021#1 = RMul(r2019,r2010);
          real r2022#1 = RMul(r201B,r2012);
          real r2023#1 = RMul(r201D,r2014);
          real r2024#1 = RAdd(r2021,r2022);
          real r2025#1 = RAdd(r2024,r2023);
          real realLit204C#4 = 0.e0;
          real r204D#2 = r200F;
          real r204E#1 = RMul(realLit204C,r204D);
          real realLit204F#2 = 0.1e1;
          real r2050#2 = r2020;
          real r2051#1 = RMul(realLit204F,r2050);
          real r2052#1 = RAdd(r204E,r2051);
          real r2053#2 = r2017;
          real r2054#1 = RMul(realLit204C,r2053);
          real r2055#2 = r2025;
          real r2056#1 = RMul(realLit204F,r2055);
          real r2057#1 = RAdd(r2054,r2056);
          real realLit2059#2 = -0.1e1;
          real r205A#1 = RMul(realLit2059,r204D);
          real r205B#1 = RMul(realLit204C,r2050);
          real r205C#1 = RAdd(r205A,r205B);
          real r205D#1 = RMul(realLit2059,r2053);
          real r205E#1 = RMul(realLit204C,r2055);
          real r205F#1 = RAdd(r205D,r205E);
          real r2079#2 = r1CE5;
          real r207A#1 = r1FC8;
          real r207B#1 = RMul(r2079,r207A);
          real r207C#2 = r1CE9;
          real r207D#1 = r1FD9;
          real r207E#1 = RMul(r207C,r207D);
          real r207F#1 = RAdd(r207B,r207E);
          real r2080#1 = r1FD0;
          real r2081#1 = RMul(r2079,r2080);
          real r2082#1 = r1FDE;
          real r2083#1 = RMul(r207C,r2082);
          real r2084#1 = RAdd(r2081,r2083);
          tensor[2] op1_e3_l_412078#1 = <tensor[2]>[r207F,r2084];
          real r2094#2 = r1C97;
          real r2095#1 = r2052;
          real r2096#1 = RMul(r2094,r2095);
          real r2097#2 = r1C9F;
          real r2098#1 = r205C;
          real r2099#1 = RMul(r2097,r2098);
          real r209A#1 = RAdd(r2096,r2099);
          real r209B#1 = r2057;
          real r209C#1 = RMul(r2094,r209B);
          real r209D#1 = r205F;
          real r209E#1 = RMul(r2097,r209D);
          real r209F#1 = RAdd(r209C,r209E);
          tensor[2] op1_e3_l_422093#1 = <tensor[2]>[r209A,r209F];
          tensor[2] op1_e3_l_4420AE#2 = VAdd<2>(op1_e3_l_412078,op1_e3_l_422093);
          tensor[2] projParam20B2#1 = tensor1F75;
          tensor[2] binopV20B3#1 = VScale<2>(op1_e3_l_141D24,projParam20B2);
          tensor[2] projParam20B4#1 = tensor1F80;
          tensor[2] binopV20B5#1 = VScale<2>(op1_e3_l_141D24,projParam20B4);
          tensor[2] projParam20B7#1 = tensor1F89;
          tensor[2] binopV20B8#1 = VScale<2>(op1_e3_l_141D24,projParam20B7);
          tensor[2] projParam20B9#1 = tensor1F90;
          tensor[2] binopV20BA#1 = VScale<2>(op1_e3_l_141D24,projParam20B9);
          real r20C9#2 = r1CFE;
          real r20CA#4 = TensorIndex<tensor[2],[0]>(op1_e3_l_4420AE);
          real r20CB#1 = RMul(r20C9,r20CA);
          real r20CC#4 = TensorIndex<tensor[2],[1]>(op1_e3_l_4420AE);
          real r20CD#1 = RMul(r20C9,r20CC);
          tensor[2] tensor20CE#1 = <tensor[2]>[r20CB,r20CD];
          real r20CF#2 = r1D03;
          real r20D0#1 = RMul(r20CF,r20CA);
          real r20D1#1 = RMul(r20CF,r20CC);
          tensor[2] tensor20D2#1 = <tensor[2]>[r20D0,r20D1];
          real r20D4#2 = r1D08;
          real r20D5#1 = RMul(r20D4,r20CA);
          real r20D6#1 = RMul(r20D4,r20CC);
          tensor[2] tensor20D7#1 = <tensor[2]>[r20D5,r20D6];
          real r20D8#2 = r1D0B;
          real r20D9#1 = RMul(r20D8,r20CA);
          real r20DA#1 = RMul(r20D8,r20CC);
          tensor[2] tensor20DB#1 = <tensor[2]>[r20D9,r20DA];
          tensor[2] projParam20F4#1 = binopV20B3;
          tensor[2] projParam20F5#1 = tensor20CE;
          tensor[2] binopV20F6#2 = VSub<2>(projParam20F4,projParam20F5);
          tensor[2] projParam20F7#1 = binopV20B5;
          tensor[2] projParam20F8#1 = tensor20D2;
          tensor[2] binopV20F9#2 = VSub<2>(projParam20F7,projParam20F8);
          tensor[2] projParam20FB#1 = binopV20B8;
          tensor[2] projParam20FC#1 = tensor20D7;
          tensor[2] binopV20FD#2 = VSub<2>(projParam20FB,projParam20FC);
          tensor[2] projParam20FE#1 = binopV20BA;
          tensor[2] projParam20FF#1 = tensor20DB;
          tensor[2] binopV2100#2 = VSub<2>(projParam20FE,projParam20FF);
          real op1_e3_l_562112#8 = RMul(op1_e3_l_141D24,op1_e3_l_141D24);
          real r2116#1 = VIndex<2,0>(binopV20F6);
          real r2117#1 = RDiv(r2116,op1_e3_l_562112);
          real r2118#1 = VIndex<2,1>(binopV20F6);
          real r2119#1 = RDiv(r2118,op1_e3_l_562112);
          real r211B#1 = VIndex<2,0>(binopV20F9);
          real r211C#1 = RDiv(r211B,op1_e3_l_562112);
          real r211D#1 = VIndex<2,1>(binopV20F9);
          real r211E#1 = RDiv(r211D,op1_e3_l_562112);
          real r2121#1 = VIndex<2,0>(binopV20FD);
          real r2122#1 = RDiv(r2121,op1_e3_l_562112);
          real r2123#1 = VIndex<2,1>(binopV20FD);
          real r2124#1 = RDiv(r2123,op1_e3_l_562112);
          real r2126#1 = VIndex<2,0>(binopV2100);
          real r2127#1 = RDiv(r2126,op1_e3_l_562112);
          real r2128#1 = VIndex<2,1>(binopV2100);
          real r2129#1 = RDiv(r2128,op1_e3_l_562112);
          real r2145#2 = r1D29;
          real r2146#2 = r1E5A;
          real r2147#1 = RMul(r2145,r2146);
          real r2148#2 = r1D2E;
          real r2149#2 = r1E65;
          real r214A#1 = RMul(r2148,r2149);
          real r214B#1 = RAdd(r2147,r214A);
          real r214C#2 = r1E5F;
          real r214D#1 = RMul(r2145,r214C);
          real r214E#2 = r1E68;
          real r214F#1 = RMul(r2148,r214E);
          real r2150#1 = RAdd(r214D,r214F);
          tensor[2] tensor2151#1 = <tensor[2]>[r214B,r2150];
          real r2152#2 = r1D2B;
          real r2153#1 = RMul(r2152,r2146);
          real r2154#2 = r1D30;
          real r2155#1 = RMul(r2154,r2149);
          real r2156#1 = RAdd(r2153,r2155);
          real r2157#1 = RMul(r2152,r214C);
          real r2158#1 = RMul(r2154,r214E);
          real r2159#1 = RAdd(r2157,r2158);
          tensor[2] tensor215A#1 = <tensor[2]>[r2156,r2159];
          real r2174#4 = vdot1BA9;
          real r2175#1 = r2117;
          real r2176#1 = RMul(r2174,r2175);
          real r2177#4 = vdot1BAB;
          real r2178#1 = r2122;
          real r2179#1 = RMul(r2177,r2178);
          real r217A#1 = RAdd(r2176,r2179);
          real r217B#1 = r2119;
          real r217C#1 = RMul(r2174,r217B);
          real r217D#1 = r2124;
          real r217E#1 = RMul(r2177,r217D);
          real r217F#1 = RAdd(r217C,r217E);
          tensor[2] tensor2180#1 = <tensor[2]>[r217A,r217F];
          real r2181#1 = r211C;
          real r2182#1 = RMul(r2174,r2181);
          real r2183#1 = r2127;
          real r2184#1 = RMul(r2177,r2183);
          real r2185#1 = RAdd(r2182,r2184);
          real r2186#1 = r211E;
          real r2187#1 = RMul(r2174,r2186);
          real r2188#1 = r2129;
          real r2189#1 = RMul(r2177,r2188);
          real r218A#1 = RAdd(r2187,r2189);
          tensor[2] tensor218B#1 = <tensor[2]>[r2185,r218A];
          tensor[2] projParam21A7#1 = tensor2151;
          tensor[2] projParam21A8#1 = tensor2180;
          tensor[2] v21A9#2 = VAdd<2>(projParam21A7,projParam21A8);
          tensor[2] projParam21AA#1 = tensor215A;
          tensor[2] projParam21AB#1 = tensor218B;
          tensor[2] v21AC#2 = VAdd<2>(projParam21AA,projParam21AB);
          tensor[2,2] _t21A6#1 = <tensor[2,2]>[v21A9,v21AC];
          string _t21B5#1 = "norm:";
          tensor[2] projParam21B8#2 = v21A9;
          real vdot21B9#1 = VDot<2>(projParam21B8,projParam21B8);
          tensor[2] projParam21BA#2 = v21AC;
          real vdot21BB#1 = VDot<2>(projParam21BA,projParam21BA);
          real op1_e3_l_11521B7#1 = RAdd(vdot21B9,vdot21BB);
          real _t21C2#1 = Sqrt(op1_e3_l_11521B7);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1E16,_t21A6,_t1D8D,_t21B5,_t21C2,_t1D8D);
          string _t21C6#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t21C6,_t1D3E,_t1D8D);
          string _t21C9#1 = "vals:";
          tensor[2] _t21CB#2 = <tensor[2]>[f01B4C,f11E08];
          Print<[string,tensor[2],string]>(_t21C9,_t21CB,_t1D8D);
          real _t21CE#6 = 0.e0;
          bool _t21D0#2 = GT<real>(f01B4C,_t21CE);
          if _t21D0 then goto JOIN21D5 else goto ASSIGN229C
        JOIN21D5:  preds = [COND21D2,JOIN22A1]
          int _t21D3#1 = phi(_t17F6,_t21D4)
          bool _t21D6#2 = GT<real>(f11E08,_t21CE);
          if _t21D6 then goto JOIN21DB else goto ASSIGN2294
        JOIN21DB:  preds = [COND21D8,JOIN2299]
          int _t21D9#1 = phi(_t17F6,_t21DA)
          int _t21DC#1 = IMul(_t21D3,_t21D9);
          int _t21DE#5 = 0;
          bool _t21E0#1 = GT<int>(_t21DC,_t21DE);
          bool _t21E2#1 = BNot(_t21E0);
          if _t21E2 then goto COND21E5 else goto ASSIGN227D
        COND21E5:  preds = [COND21E4]
          if _t21D0 then goto JOIN21E8 else goto ASSIGN2277
        JOIN21E8:  preds = [COND21E5,JOIN227B]
          int _t21E6#1 = phi(_t17F6,_t21E7)
          if _t21D6 then goto JOIN21EC else goto ASSIGN2271
        JOIN21EC:  preds = [COND21E9,JOIN2275]
          int _t21EA#1 = phi(_t17F6,_t21EB)
          int _t21ED#1 = IMul(_t21E6,_t21EA);
          bool _t21EF#1 = EQ<int>(_t21ED,_t21DE);
          if _t21EF then goto ASSIGN21F3 else goto JOIN21F5
        ASSIGN21F3:  preds = [COND21F1]
          string _t21F2#1 = "Warn: 0 update\n";
          Print<[string]>(_t21F2);
          goto JOIN21F5
        JOIN21F5:  preds = [MASSIGN21F4,COND21F1]
          string _t21F6#1 = "update with interval:";
          Print<[string,real,string]>(_t21F6,gradEps1D89,_t1D8D);
          string _t21F9#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t21F9,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t21FC#1 = "Count:";
          Print<[string,int,string]>(_t21FC,count17EE,_t1D8D);
          int count21FF#1 = IAdd(count17EE,_t17F6);
          int totalCount2201#1 = IAdd(totalCount17F0,_t17F6);
          string _t2203#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t2203,_t21CB,_t1D8D);
          string _t2206#1 = "New interval:";
          real _t2208#3 = RAdd(s17E0,gradEps1D89);
          tensor[2] _t220B#2 = <tensor[2]>[s17E0,_t2208];
          Print<[string,tensor[2],string]>(_t2206,_t220B,_t1D8D);
          tensor[2][] intervals220E#1 = Append<tensor[2]>(intervals17E8,_t220B);
          tensor[3] op1_e3_l_52210#1 = VScale<3>(_t2208,rayVec17D4);
          tensor[3] _t2213#1 = VAdd<3>(rayOrig17D6,op1_e3_l_52210);
          tensor[2,3] _t2216#1 = <tensor[2,3]>[rayStart1800,_t2213];
          tensor[2,3][] sints2218#1 = Append<tensor[2,3]>(sints17EA,_t2216);
          femData:MeshCell[] newCells221A#1 = Append<femData:MeshCell>(newCells17EC,cc17E4);
          goto JOIN2223
        JOIN2223:  preds = [ASSIGN221B,ASSIGN2292]
          int totalCount221C#3 = phi(totalCount2201,totalCount17F0)
          int count221D#2 = phi(count21FF,count17EE)
          femData:MeshCell[] newCells221E#3 = phi(newCells221A,newCells17EC)
          tensor[2,3][] sints221F#2 = phi(sints2218,sints17EA)
          tensor[2][] intervals2220#3 = phi(intervals220E,intervals17E8)
          real s2221#3 = phi(_t2208,s2222)
          bool _t2224#1 = GTE<real>(s2221,e17E2);
          if _t2224 then goto ASSIGN2228 else goto JOIN2255
        ASSIGN2228:  preds = [COND2226]
          int itter2227#4 = IAdd(itter17DC,_t17F6);
          bool _t2229#1 = GTE<int>(itter2227,len17DA);
          if _t2229 then goto ASSIGN222D else goto ASSIGN2263
        ASSIGN222D:  preds = [COND222B]
          string _t222C#1 = "TotalCount:";
          Print<[string,int,string]>(_t222C,totalCount221C,_t1D8D);
          string _t222F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t222F,intervals2220,_t1D8D);
          string _t2232#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t2232,newCells221E,_t1D8D);
          string _t2235#1 = ";";
          string _t2237#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui17F2,_t2235,vi17F4,_t2237);
          self.itter = itter2227;
          self.s = s2221;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count221D;
          self.totalCount = totalCount221C;
          stabilize
          goto JOIN224D
        JOIN224D:  preds = [*STABILIZE2241,ASSIGN226F]
          int count2242#1 = phi(_t21DE)
          femData:FuncCell fc2243#1 = phi(_t2244)
          femData:MeshCell cc2245#1 = phi(cc2246)
          real e2247#1 = phi(e2248)
          real s2249#1 = phi(s224A)
          tensor[2] interval224B#1 = phi(interval224C)
          goto JOIN2255
        JOIN2255:  preds = [JOIN224D,COND2226]
          int count224E#1 = phi(count2242,count221D)
          femData:FuncCell fc224F#1 = phi(fc2243,fc17E6)
          femData:MeshCell cc2250#1 = phi(cc2245,cc17E4)
          real e2251#1 = phi(e2247,e17E2)
          real s2252#1 = phi(s2249,s2221)
          tensor[2] interval2253#1 = phi(interval224B,interval17DE)
          int itter2254#1 = phi(itter2227,itter17DC)
          self.itter = itter2254;
          self.interval = interval2253;
          self.s = s2252;
          self.e = e2251;
          self.cc = cc2250;
          self.fc = fc224F;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count224E;
          self.totalCount = totalCount221C;
          active
        ASSIGN2263:  preds = [COND222B]
          string _t2262#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t2262);
          int _t2265#2 = IAdd(offset17D8,itter2227);
          tensor[2] interval224C#3 = Subscript<tensor[2][]>(times17D0,_t2265);
          int _t2268#1 = Subscript<int[]>(cells17D2,_t2265);
          femData:MeshCell cc2246#2 = Subscript<femData:MeshCell[]>(0cell_a17CC,_t2268);
          real s224A#1 = VIndex<2,0>(interval224C);
          real e2248#1 = VIndex<2,1>(interval224C);
          int _t226D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc2246);
          femData:FuncCell _t2244#1 = LoadFem<femData:FuncCell>(c17CE,_t226D);
          goto JOIN224D
        ASSIGN2271:  preds = [COND21E9]
          bool _t2270#1 = LT<real>(f11E08,_t21CE);
          if _t2270 then goto ASSIGN2274 else goto JOIN2275
        ASSIGN2274:  preds = [COND2272]
          int _t2273#1 = -1;
          goto JOIN2275
        JOIN2275:  preds = [ASSIGN2274,COND2272]
          int _t21EB#1 = phi(_t2273,_t21DE)
          goto JOIN21EC
        ASSIGN2277:  preds = [COND21E5]
          bool _t2276#1 = LT<real>(f01B4C,_t21CE);
          if _t2276 then goto ASSIGN227A else goto JOIN227B
        ASSIGN227A:  preds = [COND2278]
          int _t2279#1 = -1;
          goto JOIN227B
        JOIN227B:  preds = [ASSIGN227A,COND2278]
          int _t21E7#1 = phi(_t2279,_t21DE)
          goto JOIN21E8
        ASSIGN227D:  preds = [COND21E4]
          real _t227C#1 = 0.2e1;
          real _t227E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_122280#1 = Abs<real>(f01B4C);
          real op1_e3_l_132283#1 = RMul(_t227C,_t227E);
          real _t2286#1 = RDiv(op1_e3_l_122280,op1_e3_l_132283);
          real epsUpdate2289#2 = Max<real>(gradEps1D89,_t2286);
          string _t228B#1 = "update L:";
          Print<[string,real,string]>(_t228B,epsUpdate2289,_t1D8D);
          string _t228E#1 = "update G:";
          Print<[string,real,string]>(_t228E,gradEps1D89,_t1D8D);
          real s2222#1 = RAdd(s17E0,epsUpdate2289);
          goto JOIN2223
        ASSIGN2294:  preds = [COND21D8]
          bool _t2293#1 = LT<real>(f11E08,_t21CE);
          if _t2293 then goto ASSIGN2297 else goto ASSIGN229A
        ASSIGN2297:  preds = [COND2295]
          int _t2296#1 = -1;
          goto JOIN2299
        JOIN2299:  preds = [ASSIGN2297,ASSIGN229A]
          int _t21DA#1 = phi(_t2296,_t2298)
          goto JOIN21DB
        ASSIGN229A:  preds = [COND2295]
          int _t2298#1 = 0;
          goto JOIN2299
        ASSIGN229C:  preds = [COND21D2]
          bool _t229B#1 = LT<real>(f01B4C,_t21CE);
          if _t229B then goto ASSIGN229F else goto ASSIGN22A2
        ASSIGN229F:  preds = [COND229D]
          int _t229E#1 = -1;
          goto JOIN22A1
        JOIN22A1:  preds = [ASSIGN229F,ASSIGN22A2]
          int _t21D4#1 = phi(_t229E,_t22A0)
          goto JOIN21D5
        ASSIGN22A2:  preds = [COND229D]
          int _t22A0#1 = 0;
          goto JOIN22A1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY22A3:  preds = []
      int iresU22A4#1 = globals.iresU1557;
      int iresV22A6#1 = globals.iresV1558;
      int _t22A8#2 = 0;
      int _t22AA#2 = 1;
      int _t22AC#1 = ISub(iresU22A4,_t22AA);
      int[] _t22AE#1 = Range(_t22A8,_t22AC);
    FOREACH22B1:  preds = [ASSIGN22AF,NEXT22BA]
      foreach (vi22B0 in _t22AE) on exit goto RETURN22BB
      int _t22B2#1 = ISub(iresV22A6,_t22AA);
      int[] _t22B4#1 = Range(_t22A8,_t22B2);
    FOREACH22B7:  preds = [ASSIGN22B5,NEXT22B9]
      foreach (ui22B6 in _t22B4) on exit goto NEXT22BA
      new ray(ui22B6,vi22B0);
      goto FOREACH22B7
    NEXT22BA:  preds = [FOREACH22B7]
      goto FOREACH22B1
    RETURN22BB:  preds = [FOREACH22B1]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a154E (a) = <no-default>
  input 0b0450_intermedateGlobal154F (b) = <no-default>
  input 0c0452_intermedateGlobal1550 (c) = <no-default>
  input isoval1551 (isoval) = <default>
  input thick1552 (thick) = <default>
  input camEye1553 (camEye) = <default>
  input camAt1554 (camAt) = <default>
  input camUp1555 (camUp) = <default>
  input camFOV1556 (camFOV) = <default>
  input iresU1557 (iresU) = <default>
  input iresV1558 (iresV) = <default>
  input camNear1559 (camNear) = <default>
  input camFar155A (camFar) = <default>
  input refStep155B (refStep) = <default>
  input rayStep155C (rayStep) = <default>
  input lightVsp155D (lightVsp) = <default>
  input phongKa155E (phongKa) = <default>
  input phongKd155F (phongKd) = <default>
  input debug1560 (debug) = <default>
  input debugU1561 (debugU) = <default>
  input debugV1562 (debugV) = <default>
  input eps1563 (eps) = <default>
  input indecies1564 (indecies) = <no-default>
  input times1565 (times) = <no-default>
  input cells1566 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a1567
  global femData:FemFunc c1568
  global tensor[3] camU1569
  global tensor[3] camV156A
  global real camVmax156B
  global real camUmax156C
  global tensor[3] rayVec156D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1816 (tensor[2] pos1817#2, int cellInt1818#2, femData:Mesh mesh1819#12) {
    ENTRY181A:  preds = []
      real _t181B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn181D#1 = <tensor[2]>[_t181B,_t181B];
      int _t181F#1 = 0;
      int _t1821#1 = 16;
      int[] _t1823#1 = Range(_t181F,_t1821);
    FOREACH1826:  preds = [ASSIGN1824,NEXT1A7D]
      foreach (itter1825 in _t1823) on exit goto ASSIGN1A82
        tensor[2] xn199D#3 = phi(xn181D,xn1A11)
      int ilit1828#1 = 3;
      int mulRes1829#3 = IMul(cellInt1818,ilit1828);
      int idx182C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,mulRes1829);
      int ilit182D#4 = 1;
      int addRes182E#1 = IAdd(mulRes1829,ilit182D);
      int idx182F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182E);
      int ilit1830#4 = 2;
      int addRes1831#1 = IAdd(mulRes1829,ilit1830);
      int idx1832#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes1831);
      int mulRes1845#2 = IMul(ilit1830,idx182C);
      int addRes1848#1 = IAdd(ilit182D,mulRes1845);
      real dof_load1849#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1845);
      real dof_load184A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1848);
      int mulRes184D#2 = IMul(ilit1830,idx182F);
      int addRes184F#1 = IAdd(ilit182D,mulRes184D);
      real dof_load1850#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes184D);
      real dof_load1851#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184F);
      int mulRes1854#2 = IMul(ilit1830,idx1832);
      int addRes1856#1 = IAdd(ilit182D,mulRes1854);
      real dof_load1857#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1854);
      real dof_load1858#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1856);
      real coeff1878#8 = -0.1e1;
      real one1879#15 = 0.1e1;
      real prod187A#2 = RMul(one1879,one1879);
      real basisEval187B#2 = RMul(coeff1878,prod187A);
      real basisEval187C#5 = RMul(one1879,prod187A);
      real basisEval187D#12 = 0.e0;
      real r1890#2 = RMul(dof_load1849,basisEval187B);
      real r1893#1 = RMul(dof_load1850,basisEval187C);
      real r1896#1 = RMul(dof_load1857,basisEval187D);
      real r1897#1 = RAdd(r1890,r1893);
      real r1898#3 = RAdd(r1897,r1896);
      real r189C#1 = RMul(dof_load1850,basisEval187D);
      real r189E#1 = RMul(dof_load1857,basisEval187C);
      real r189F#1 = RAdd(r1890,r189C);
      real r18A0#3 = RAdd(r189F,r189E);
      real r18A3#2 = RMul(dof_load184A,basisEval187B);
      real r18A5#1 = RMul(dof_load1851,basisEval187C);
      real r18A7#1 = RMul(dof_load1858,basisEval187D);
      real r18A8#1 = RAdd(r18A3,r18A5);
      real r18A9#3 = RAdd(r18A8,r18A7);
      real r18AB#1 = RMul(dof_load1851,basisEval187D);
      real r18AC#1 = RMul(dof_load1858,basisEval187C);
      real r18AD#1 = RAdd(r18A3,r18AB);
      real r18AE#3 = RAdd(r18AD,r18AC);
      real r18D7#1 = RMul(basisEval187D,r1898);
      real r18DA#1 = RMul(coeff1878,r18A9);
      real r18DB#2 = RAdd(r18D7,r18DA);
      real r18DD#2 = RMul(basisEval187D,r18A0);
      real r18DF#1 = RMul(coeff1878,r18AE);
      real r18E0#2 = RAdd(r18DD,r18DF);
      real r18E3#1 = RMul(one1879,r1898);
      real r18E4#1 = RMul(basisEval187D,r18A9);
      real r18E5#2 = RAdd(r18E3,r18E4);
      real r18E6#1 = RMul(one1879,r18A0);
      real r18E7#2 = RMul(basisEval187D,r18AE);
      real r18E8#2 = RAdd(r18E6,r18E7);
      tensor[2] probe_l_121901#1 = <tensor[2]>[r1898,r18A9];
      real r1959#1 = RMul(one1879,r18AE);
      real r195A#1 = RAdd(r18DD,r1959);
      real r195C#1 = RMul(coeff1878,r18A0);
      real r195E#1 = RAdd(r195C,r18E7);
      tensor[2] op1_e3_l_141953#1 = <tensor[2]>[r195A,r195E];
      real r196F#1 = RMul(basisEval187D,r18DB);
      real r1972#1 = RMul(coeff1878,r18E0);
      real r1973#1 = RAdd(r196F,r1972);
      real r1975#1 = RMul(basisEval187D,r18E5);
      real r1977#1 = RMul(coeff1878,r18E8);
      real r1978#1 = RAdd(r1975,r1977);
      real r197B#1 = RMul(one1879,r18DB);
      real r197C#1 = RMul(basisEval187D,r18E0);
      real r197D#1 = RAdd(r197B,r197C);
      real r197E#1 = RMul(one1879,r18E5);
      real r197F#1 = RMul(basisEval187D,r18E8);
      real r1980#1 = RAdd(r197E,r197F);
      real op1_e3_l_161999#4 = VDot<2>(probe_l_121901,op1_e3_l_141953);
      real varAcc199E#1 = VIndex<2,0>(xn199D);
      real varAcc199F#1 = VIndex<2,1>(xn199D);
      real prod19A3#2 = RMul(varAcc199E,one1879);
      real prod19A5#2 = RMul(one1879,varAcc199F);
      real mult19A8#1 = RMul(coeff1878,prod19A5);
      real mult19A9#1 = RMul(coeff1878,prod19A3);
      real sum19AA#1 = RAdd(mult19A8,mult19A9);
      real sum19AB#2 = RAdd(basisEval187C,sum19AA);
      real basisEval19AD#2 = RMul(one1879,prod19A3);
      real basisEval19AE#2 = RMul(one1879,prod19A5);
      real r19C6#1 = RMul(dof_load1849,sum19AB);
      real r19C9#1 = RMul(dof_load1850,basisEval19AD);
      real r19CC#1 = RMul(dof_load1857,basisEval19AE);
      real r19CD#1 = RAdd(r19C6,r19C9);
      real r19CE#1 = RAdd(r19CD,r19CC);
      real r19D0#1 = RMul(dof_load184A,sum19AB);
      real r19D2#1 = RMul(dof_load1851,basisEval19AD);
      real r19D4#1 = RMul(dof_load1858,basisEval19AE);
      real r19D5#1 = RAdd(r19D0,r19D2);
      real r19D6#1 = RAdd(r19D5,r19D4);
      tensor[2] probe_l_1719C3#1 = <tensor[2]>[r19CE,r19D6];
      real r19EE#1 = RDiv(r1973,op1_e3_l_161999);
      real r19F0#1 = RDiv(r1978,op1_e3_l_161999);
      tensor[2] tensor19F1#1 = <tensor[2]>[r19EE,r19F0];
      real r19F3#1 = RDiv(r197D,op1_e3_l_161999);
      real r19F5#1 = RDiv(r1980,op1_e3_l_161999);
      tensor[2] tensor19F6#1 = <tensor[2]>[r19F3,r19F5];
      tensor[2] op1_e3_l_191A03#2 = VSub<2>(probe_l_1719C3,pos1817);
      real vdot1A08#1 = VDot<2>(tensor19F1,op1_e3_l_191A03);
      real vdot1A0A#1 = VDot<2>(tensor19F6,op1_e3_l_191A03);
      tensor[2] op1_e3_l_201A06#3 = <tensor[2]>[vdot1A08,vdot1A0A];
      tensor[2] xn1A11#4 = VSub<2>(xn199D,op1_e3_l_201A06);
      real _t1A14#2 = 0.1e-7;
      real _t1A16#1 = RMul(_t1A14,_t1A14);
      real _t1A50#1 = VDot<2>(op1_e3_l_201A06,op1_e3_l_201A06);
      bool _t1A53#1 = GTE<real>(_t1A16,_t1A50);
      if _t1A53 then goto ASSIGN1A59 else goto JOIN1A7C
    ASSIGN1A59:  preds = [COND1A55]
      real _t1A58#3 = 0.1e-8;
      real _t1A5A#1 = RAdd(one1879,_t1A58);
      tensor[2] _t1A5D#1 = <tensor[2]>[one1879,one1879];
      real _t1A5F#1 = VDot<2>(_t1A5D,xn1A11);
      bool _t1A62#1 = GT<real>(_t1A5A,_t1A5F);
      tensor[2] _t1A64#1 = <tensor[2]>[_t1A58,_t1A58];
      tensor[2] _t1A66#2 = VAdd<2>(_t1A64,xn1A11);
      real _t1A69#1 = VIndex<2,0>(_t1A66);
      real _t1A6B#2 = -0.e0;
      bool _t1A6D#1 = GT<real>(_t1A69,_t1A6B);
      real _t1A6F#1 = VIndex<2,1>(_t1A66);
      bool _t1A71#1 = GT<real>(_t1A6F,_t1A6B);
      bool _t1A73#1 = BAnd(_t1A6D,_t1A71);
      bool _t1A75#1 = BAnd(_t1A62,_t1A73);
      if _t1A75 then goto ASSIGN1A79 else goto ASSIGN1A7F
    ASSIGN1A79:  preds = [COND1A77]
      femData:MeshPos _t1A78#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1819,cellInt1818,xn1A11,pos1817);
      return _t1A78
      goto JOIN1A7B
    JOIN1A7B:  preds = [*RETURN(_t1A78)1A7A,*RETURN(_t1A7E)1A80]
      goto JOIN1A7C
    JOIN1A7C:  preds = [*JOIN1A7B,COND1A55]
      goto FOREACH1826
    ASSIGN1A7F:  preds = [COND1A77]
      femData:MeshPos _t1A7E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A7E
      goto JOIN1A7B
    ASSIGN1A82:  preds = [FOREACH1826]
      femData:MeshPos _t1A81#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A81
}
## input initialization
  ENTRY156E:  preds = []
    real isoval156F#1 = 0.2e0;
    globals.isoval1551 = isoval156F;
    real thick1572#1 = 0.7e-1;
    globals.thick1552 = thick1572;
    real _t1575#1 = -0.5e0;
    real _t1577#5 = 0.5e0;
    tensor[3] camEye1579#1 = <tensor[3]>[_t1575,_t1577,_t1577];
    globals.camEye1553 = camEye1579;
    tensor[3] camAt157C#1 = <tensor[3]>[_t1577,_t1577,_t1577];
    globals.camAt1554 = camAt157C;
    real _t157F#2 = 0.e0;
    real _t1581#2 = 0.1e1;
    tensor[3] camUp1583#2 = <tensor[3]>[_t157F,_t157F,_t1581];
    globals.camUp1555 = camUp1583;
    real camFOV1586#1 = 0.137e2;
    globals.camFOV1556 = camFOV1586;
    int iresU1589#2 = 10;
    globals.iresU1557 = iresU1589;
    globals.iresV1558 = iresU1589;
    real camNear158D#1 = -0.2e1;
    globals.camNear1559 = camNear158D;
    real camFar1590#1 = 0.5e1;
    globals.camFar155A = camFar1590;
    globals.refStep155B = _t1581;
    real rayStep1594#1 = 0.1e-1;
    globals.rayStep155C = rayStep1594;
    globals.lightVsp155D = camUp1583;
    real phongKa1598#1 = 0.1e0;
    globals.phongKa155E = phongKa1598;
    real phongKd159B#1 = 0.9e0;
    globals.phongKd155F = phongKd159B;
    bool debug159E#1 = false;
    globals.debug1560 = debug159E;
    int debugU15A1#1 = 8;
    globals.debugU1561 = debugU15A1;
    int debugV15A4#1 = 2;
    globals.debugV1562 = debugV15A4;
    real eps15A7#1 = 0.1e-8;
    globals.eps1563 = eps15A7;
    return
## global-variable initialization
  ENTRY15AB:  preds = []
    femData:Mesh a15AC#3 = globals.a154E;
    femData:Space 0b0450_intermedateGlobal15AE#1 = globals.0b0450_intermedateGlobal154F;
    femData:FemFunc 0c0452_intermedateGlobal15B0#1 = globals.0c0452_intermedateGlobal1550;
    tensor[3] camEye15B2#1 = globals.camEye1553;
    tensor[3] camAt15B4#1 = globals.camAt1554;
    tensor[3] camUp15B6#3 = globals.camUp1555;
    real camFOV15B8#1 = globals.camFOV1556;
    int iresU15BA#1 = globals.iresU1557;
    int iresV15BC#1 = globals.iresV1558;
    int _t15BE#1 = 0;
    int _t15C0#1 = 1;
    int _t15C2#1 = ExtractFemItem<int,NumCell(Mesh)>(a15AC);
    int _t15C4#1 = ISub(_t15C2,_t15C0);
    int[] _t15C6#1 = Range(_t15BE,_t15C4);
    femData:MeshCell[] _t15C8#1 = <femData:MeshCell[]>{};
  FOREACH15CB:  preds = [ASSIGN15C9,NEXT15D1]
    foreach (_t15CA in _t15C6) on exit goto GASSIGN15D2
      femData:MeshCell[] _t15CF#2 = phi(_t15C8,_t15CE)
    femData:MeshCell _t15CC#1 = LoadFem<femData:MeshCell>(a15AC,_t15CA);
    femData:MeshCell[] _t15CE#1 = Append<femData:MeshCell>(_t15CF,_t15CC);
    goto FOREACH15CB
  GASSIGN15D2:  preds = [FOREACH15CB]
    globals.0cell_a1567 = _t15CF;
    femData:Space b15D3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal15AE,a15AC);
    femData:FemFunc c15D5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal15B0,b15D3);
    globals.c1568 = c15D5;
    tensor[3] op1_e3_l_415D8#9 = VSub<3>(camAt15B4,camEye15B2);
    real op1_e3_l_615DB#1 = VDot<3>(op1_e3_l_415D8,op1_e3_l_415D8);
    real op1_e3_l_715DE#3 = Sqrt(op1_e3_l_615DB);
    real realLit15E2#8 = 0.1e1;
    real op1_e3_l_915E1#6 = RDiv(realLit15E2,op1_e3_l_715DE);
    tensor[3] camN15E6#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_415D8);
    real realLit15EA#6 = 0.e0;
    real r15EB#3 = TensorIndex<tensor[3],[0]>(camUp15B6);
    real r15EC#3 = RMul(realLit15EA,r15EB);
    real r15ED#3 = TensorIndex<tensor[3],[1]>(camUp15B6);
    real r15EE#3 = RMul(realLit15EA,r15ED);
    real r15EF#3 = TensorIndex<tensor[3],[2]>(camUp15B6);
    real r15F0#5 = RMul(realLit15EA,r15EF);
    real r15F1#3 = RAdd(r15EC,r15EE);
    real r15F2#3 = RAdd(r15F1,r15F0);
    real r15F4#1 = RMul(realLit15E2,r15EF);
    real r15F5#1 = RAdd(r15F1,r15F4);
    real realLit15F6#6 = -0.1e1;
    real r15F7#1 = RMul(realLit15F6,r15ED);
    real r15F8#1 = RAdd(r15EC,r15F7);
    real r15F9#1 = RAdd(r15F8,r15F0);
    tensor[3] tensor15FA#1 = <tensor[3]>[r15F2,r15F5,r15F9];
    real r15FB#1 = RMul(realLit15F6,r15EF);
    real r15FC#1 = RAdd(r15F1,r15FB);
    real r15FD#1 = RMul(realLit15E2,r15EB);
    real r15FE#1 = RAdd(r15FD,r15EE);
    real r15FF#1 = RAdd(r15FE,r15F0);
    tensor[3] tensor1600#1 = <tensor[3]>[r15FC,r15F2,r15FF];
    real r1601#1 = RMul(realLit15E2,r15ED);
    real r1602#1 = RAdd(r15EC,r1601);
    real r1603#1 = RAdd(r1602,r15F0);
    real r1604#1 = RMul(realLit15F6,r15EB);
    real r1605#1 = RAdd(r1604,r15EE);
    real r1606#1 = RAdd(r1605,r15F0);
    tensor[3] tensor1607#1 = <tensor[3]>[r1603,r1606,r15F2];
    real vdot162A#1 = VDot<3>(op1_e3_l_415D8,tensor15FA);
    real vdot162C#1 = VDot<3>(op1_e3_l_415D8,tensor1600);
    real vdot162E#1 = VDot<3>(op1_e3_l_415D8,tensor1607);
    tensor[3] op1_e3_l_171628#6 = <tensor[3]>[vdot162A,vdot162C,vdot162E];
    real op1_e3_l_341637#1 = VDot<3>(op1_e3_l_171628,op1_e3_l_171628);
    real r163B#1 = RMul(op1_e3_l_915E1,op1_e3_l_915E1);
    real op1_e3_l_35163A#1 = RMul(r163B,op1_e3_l_341637);
    real op1_e3_l_36163F#1 = Sqrt(op1_e3_l_35163A);
    tensor[3] op1_e3_l_371642#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_171628);
    real op1_e3_l_381645#2 = RDiv(realLit15E2,op1_e3_l_36163F);
    tensor[3] camU164A#1 = VScale<3>(op1_e3_l_381645,op1_e3_l_371642);
    globals.camU1569 = camU164A;
    real r1650#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_415D8);
    real r1651#3 = RMul(realLit15EA,r1650);
    real r1652#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_415D8);
    real r1653#3 = RMul(realLit15EA,r1652);
    real r1654#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_415D8);
    real r1655#5 = RMul(realLit15EA,r1654);
    real r1656#3 = RAdd(r1651,r1653);
    real r1657#3 = RAdd(r1656,r1655);
    real r1659#1 = RMul(realLit15E2,r1654);
    real r165A#1 = RAdd(r1656,r1659);
    real r165C#1 = RMul(realLit15F6,r1652);
    real r165D#1 = RAdd(r1651,r165C);
    real r165E#1 = RAdd(r165D,r1655);
    tensor[3] tensor165F#1 = <tensor[3]>[r1657,r165A,r165E];
    real r1660#1 = RMul(realLit15F6,r1654);
    real r1661#1 = RAdd(r1656,r1660);
    real r1662#1 = RMul(realLit15E2,r1650);
    real r1663#1 = RAdd(r1662,r1653);
    real r1664#1 = RAdd(r1663,r1655);
    tensor[3] tensor1665#1 = <tensor[3]>[r1661,r1657,r1664];
    real r1666#1 = RMul(realLit15E2,r1652);
    real r1667#1 = RAdd(r1651,r1666);
    real r1668#1 = RAdd(r1667,r1655);
    real r1669#1 = RMul(realLit15F6,r1650);
    real r166A#1 = RAdd(r1669,r1653);
    real r166B#1 = RAdd(r166A,r1655);
    tensor[3] tensor166C#1 = <tensor[3]>[r1668,r166B,r1657];
    real vdot168F#1 = VDot<3>(op1_e3_l_171628,tensor165F);
    real vdot1691#1 = VDot<3>(op1_e3_l_171628,tensor1665);
    real vdot1693#1 = VDot<3>(op1_e3_l_171628,tensor166C);
    tensor[3] op1_e3_l_47168D#1 = <tensor[3]>[vdot168F,vdot1691,vdot1693];
    tensor[3] op1_e3_l_50169C#3 = VScale<3>(op1_e3_l_915E1,op1_e3_l_47168D);
    real r16A0#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_50169C);
    real r16A1#3 = RMul(op1_e3_l_381645,op1_e3_l_915E1);
    real r16A2#1 = RMul(r16A1,r16A0);
    real r16A3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_50169C);
    real r16A4#1 = RMul(r16A1,r16A3);
    real r16A5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_50169C);
    real r16A6#1 = RMul(r16A1,r16A5);
    tensor[3] camV169F#1 = <tensor[3]>[r16A2,r16A4,r16A6];
    globals.camV156A = camV169F;
    real _t16B1#1 = 0.314159265358979323846264338327950288e1;
    real _t16B3#1 = 0.36e3;
    real op1_e3_l_516B5#1 = RMul(camFOV15B8,_t16B1);
    real op1_e3_l_616B8#1 = RDiv(op1_e3_l_516B5,_t16B3);
    real op1_e3_l_1016BB#2 = Tan(op1_e3_l_616B8);
    real camVmax16BE#1 = RMul(op1_e3_l_1016BB,op1_e3_l_715DE);
    globals.camVmax156B = camVmax16BE;
    real _t16C2#1 = IntToReal(iresU15BA);
    real _t16C4#1 = IntToReal(iresV15BC);
    real r16C7#1 = RMul(_t16C2,op1_e3_l_1016BB);
    real op1_e3_l_1416C6#1 = RMul(r16C7,op1_e3_l_715DE);
    real camUmax16CB#1 = RDiv(op1_e3_l_1416C6,_t16C4);
    globals.camUmax156C = camUmax16CB;
    globals.rayVec156D = camN15E6;
    return
## strand
  strand ray (int ui16D1#3, int vi16D2#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY16E7:  preds = []
        femData:MeshCell[] 0cell_a16E8#1 = globals.0cell_a1567;
        femData:FemFunc c16EA#1 = globals.c1568;
        tensor[3] camEye16EC#1 = globals.camEye1553;
        int iresU16EE#2 = globals.iresU1557;
        int iresV16F0#3 = globals.iresV1558;
        int[] indecies16F2#2 = globals.indecies1564;
        tensor[2][] times16F4#1 = globals.times1565;
        tensor[3] camU16F6#1 = globals.camU1569;
        tensor[3] camV16F8#1 = globals.camV156A;
        real camVmax16FA#2 = globals.camVmax156B;
        real camUmax16FC#2 = globals.camUmax156C;
        real _t16FE#4 = -0.5e0;
        real _t1700#1 = IntToReal(ui16D1);
        real _t1702#1 = IntToReal(iresU16EE);
        real _t1704#2 = 0.5e0;
        real op1_e3_l_61706#1 = RSub(_t1702,_t1704);
        real op1_e3_l_71709#1 = RSub(_t1700,_t16FE);
        real op1_e3_l_8170C#1 = RSub(op1_e3_l_61706,_t16FE);
        real op1_e3_l_9170F#2 = RNeg(camUmax16FC);
        real op1_e3_l_101712#1 = RDiv(op1_e3_l_71709,op1_e3_l_8170C);
        real op1_e3_l_111715#1 = RSub(camUmax16FC,op1_e3_l_9170F);
        real op1_e3_l_131718#1 = RMul(op1_e3_l_101712,op1_e3_l_111715);
        real rayU171B#2 = RAdd(op1_e3_l_9170F,op1_e3_l_131718);
        real _t171E#1 = IntToReal(vi16D2);
        real _t1720#1 = IntToReal(iresV16F0);
        real op1_e3_l_61722#1 = RSub(_t1720,_t1704);
        real op1_e3_l_71725#1 = RSub(_t171E,_t16FE);
        real op1_e3_l_81728#1 = RSub(op1_e3_l_61722,_t16FE);
        real op1_e3_l_9172B#2 = RNeg(camVmax16FA);
        real op1_e3_l_10172E#1 = RDiv(op1_e3_l_71725,op1_e3_l_81728);
        real op1_e3_l_111731#1 = RSub(camVmax16FA,op1_e3_l_9172B);
        real op1_e3_l_131734#1 = RMul(op1_e3_l_10172E,op1_e3_l_111731);
        real rayV1737#2 = RAdd(op1_e3_l_9172B,op1_e3_l_131734);
        tensor[3] op1_e3_l_321749#2 = VScale<3>(rayU171B,camU16F6);
        tensor[3] op1_e3_l_33174C#2 = VScale<3>(rayV1737,camV16F8);
        tensor[3] UV174F#1 = VAdd<3>(op1_e3_l_321749,op1_e3_l_33174C);
        tensor[3] v1753#1 = VAdd<3>(camEye16EC,op1_e3_l_321749);
        tensor[3] rayOrig1752#1 = VAdd<3>(v1753,op1_e3_l_33174C);
        int _t1757#2 = IMul(ui16D1,iresV16F0);
        int _t1759#1 = IAdd(_t1757,vi16D2);
        int offset175B#3 = Subscript<int[]>(indecies16F2,_t1759);
        int _t175D#1 = IMul(iresU16EE,iresV16F0);
        int _t175F#1 = IAdd(_t175D,_t1757);
        int _t1761#1 = IAdd(_t175F,vi16D2);
        int len1763#1 = Subscript<int[]>(indecies16F2,_t1761);
        int itter1765#4 = 0;
        tensor[2] interval1769#3 = Subscript<tensor[2][]>(times16F4,offset175B);
        real s176B#1 = VIndex<2,0>(interval1769);
        real e176D#1 = VIndex<2,1>(interval1769);
        femData:MeshCell cc176F#2 = Subscript<femData:MeshCell[]>(0cell_a16E8,itter1765);
        int _t1771#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc176F);
        femData:FuncCell _t1773#1 = LoadFem<femData:FuncCell>(c16EA,_t1771);
        tensor[2][0] _t1775#1 = <tensor[2][0]>{};
        tensor[2][] _t1777#1 = MkDynamic<tensor[2],0>(_t1775);
        tensor[2,3][0] _t1779#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t177B#1 = MkDynamic<tensor[2,3],0>(_t1779);
        femData:MeshCell[0] _t177D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t177F#1 = MkDynamic<femData:MeshCell,0>(_t177D);
        self.rayU = rayU171B;
        self.rayV = rayV1737;
        self.UV = UV174F;
        self.rayOrig = rayOrig1752;
        self.offset = offset175B;
        self.len = len1763;
        self.itter = itter1765;
        self.idx = offset175B;
        self.interval = interval1769;
        self.s = s176B;
        self.e = e176D;
        self.cc = cc176F;
        self.fc = _t1773;
        self.intervals = _t1777;
        self.sints = _t177B;
        self.newCells = _t177F;
        self.count = itter1765;
        self.totalCount = itter1765;
        self.ui = ui16D1;
        self.vi = vi16D2;
        return
    end state init
    method start
        ENTRY1796:  preds = []
          femData:MeshCell[] 0cell_a1797#1 = globals.0cell_a1567;
          femData:FemFunc c1799#1 = globals.c1568;
          bool debug179B#1 = globals.debug1560;
          int debugU179D#1 = globals.debugU1561;
          int debugV179F#1 = globals.debugV1562;
          int[] cells17A1#1 = globals.cells1566;
          int len17A3#1 = self.len;
          int idx17A5#1 = self.idx;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug179B then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,debugU179D);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN17CA
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN17CA]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          int _t17B8#1 = 0;
          bool _t17BA#1 = EQ<int>(len17A3,_t17B8);
          if _t17BA then goto STABILIZE17BD else goto JOIN17BE
        STABILIZE17BD:  preds = [COND17BC]
          stabilize
          goto JOIN17BE
        JOIN17BE:  preds = [*STABILIZE17BD,COND17BC]
          int _t17BF#1 = Subscript<int[]>(cells17A1,idx17A5);
          femData:MeshCell cc17C1#2 = Subscript<femData:MeshCell[]>(0cell_a1797,_t17BF);
          int _t17C3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17C1);
          femData:FuncCell _t17C5#1 = LoadFem<femData:FuncCell>(c1799,_t17C3);
          self.cc = cc17C1;
          self.fc = _t17C5;
          active
        ASSIGN17CA:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,debugV179F);
          goto JOIN17B3
    end start
    method update
        ENTRY17CB:  preds = []
          femData:MeshCell[] 0cell_a17CC#1 = globals.0cell_a1567;
          femData:FemFunc c17CE#1 = globals.c1568;
          tensor[2][] times17D0#1 = globals.times1565;
          int[] cells17D2#1 = globals.cells1566;
          tensor[3] rayVec17D4#5 = globals.rayVec156D;
          tensor[3] rayOrig17D6#2 = self.rayOrig;
          int offset17D8#1 = self.offset;
          int len17DA#2 = self.len;
          int itter17DC#2 = self.itter;
          tensor[2] interval17DE#1 = self.interval;
          real s17E0#5 = self.s;
          real e17E2#3 = self.e;
          femData:MeshCell cc17E4#6 = self.cc;
          femData:FuncCell fc17E6#3 = self.fc;
          tensor[2][] intervals17E8#2 = self.intervals;
          tensor[2,3][] sints17EA#2 = self.sints;
          femData:MeshCell[] newCells17EC#2 = self.newCells;
          int count17EE#3 = self.count;
          int totalCount17F0#2 = self.totalCount;
          int ui17F2#3 = self.ui;
          int vi17F4#3 = self.vi;
          int _t17F6#19 = 1;
          bool _t17F8#1 = LT<int>(len17DA,_t17F6);
          if _t17F8 then goto STABILIZE17FB else goto JOIN17FC
        STABILIZE17FB:  preds = [COND17FA]
          stabilize
          goto JOIN17FC
        JOIN17FC:  preds = [*STABILIZE17FB,COND17FA]
          tensor[3] op1_e3_l_317FD#1 = VScale<3>(s17E0,rayVec17D4);
          tensor[3] rayStart1800#4 = VAdd<3>(rayOrig17D6,op1_e3_l_317FD);
          real _t1803#1 = VIndex<3,0>(rayStart1800);
          real _t1805#1 = VIndex<3,1>(rayStart1800);
          tensor[2] project1807#2 = <tensor[2]>[_t1803,_t1805];
          femData:FemFunc _t1809#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc17E6);
          femData:Space _t180B#6 = ExtractFem<femData:Space,femData:FemFunc>(_t1809);
          int _t180D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc17E6);
          femData:Mesh _t180F#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc17E4);
          int _t1811#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17E4);
          real _t1813#2 = VIndex<3,2>(rayStart1800);
          femData:MeshPos callNewtonPos1815#1 = _0A3A_msh_newtonInverse1816 (project1807,_t1811,_t180F);
          tensor[2] refPos1A85#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1815);
          int ilit1A88#1 = 6;
          int mulRes1A89#6 = IMul(_t180D,ilit1A88);
          int idx1A8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,mulRes1A89);
          int addRes1A8E#1 = IAdd(mulRes1A89,_t17F6);
          int idx1A8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8E);
          int ilit1A90#5 = 2;
          int addRes1A91#1 = IAdd(mulRes1A89,ilit1A90);
          int idx1A92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A91);
          int ilit1A93#2 = 3;
          int addRes1A94#1 = IAdd(mulRes1A89,ilit1A93);
          int idx1A95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A94);
          int ilit1A96#1 = 4;
          int addRes1A97#1 = IAdd(mulRes1A89,ilit1A96);
          int idx1A98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A97);
          int ilit1A99#1 = 5;
          int addRes1A9A#1 = IAdd(mulRes1A89,ilit1A99);
          int idx1A9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A9A);
          int mulRes1AB7#1 = IMul(_t17F6,idx1A8C);
          int mulRes1AB9#1 = IMul(_t17F6,idx1A8F);
          int mulRes1ABC#1 = IMul(_t17F6,idx1A92);
          int mulRes1ABF#1 = IMul(_t17F6,idx1A95);
          int mulRes1AC2#1 = IMul(_t17F6,idx1A98);
          int mulRes1AC5#1 = IMul(_t17F6,idx1A9B);
          real dof1AC6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB7);
          real dof1AC7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB9);
          real dof1AC8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABC);
          real dof1AC9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABF);
          real dof1ACA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC2);
          real dof1ACB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC5);
          tensor[6] dofs1ACC#8 = <tensor[6]>[dof1AC6,dof1AC7,dof1AC8,dof1AC9,dof1ACA,dof1ACB];
          real varAcc1AE8#4 = VIndex<2,0>(refPos1A85);
          real varAcc1AE9#4 = VIndex<2,1>(refPos1A85);
          real coeff1AEA#5 = 0.2e1;
          real prod21AEC#1 = RMul(varAcc1AE8,varAcc1AE8);
          real one1AED#20 = 0.1e1;
          real prod1AEE#2 = RMul(prod21AEC,one1AED);
          real coeff1AEF#7 = 0.4e1;
          real prod1AF1#2 = RMul(varAcc1AE8,varAcc1AE9);
          real coeff1AF2#5 = -0.3e1;
          real prod1AF3#5 = RMul(varAcc1AE8,one1AED);
          real prod21AF4#1 = RMul(varAcc1AE9,varAcc1AE9);
          real prod1AF5#2 = RMul(one1AED,prod21AF4);
          real prod1AF6#5 = RMul(one1AED,varAcc1AE9);
          real prod1AF7#6 = RMul(one1AED,one1AED);
          real mult1AF8#6 = RMul(one1AED,prod1AF7);
          real mult1AF9#1 = RMul(coeff1AF2,prod1AF6);
          real mult1AFA#2 = RMul(coeff1AEA,prod1AF5);
          real mult1AFB#1 = RMul(coeff1AF2,prod1AF3);
          real mult1AFC#2 = RMul(coeff1AEF,prod1AF1);
          real mult1AFD#2 = RMul(coeff1AEA,prod1AEE);
          real sum1AFE#1 = RAdd(mult1AFC,mult1AFD);
          real sum1AFF#1 = RAdd(mult1AFB,sum1AFE);
          real sum1B00#1 = RAdd(mult1AFA,sum1AFF);
          real sum1B01#1 = RAdd(mult1AF9,sum1B00);
          real sum1B02#1 = RAdd(mult1AF8,sum1B01);
          real coeff1B04#14 = -0.1e1;
          real mult1B05#1 = RMul(coeff1B04,prod1AF3);
          real sum1B06#1 = RAdd(mult1B05,mult1AFD);
          real mult1B08#1 = RMul(coeff1B04,prod1AF6);
          real sum1B09#1 = RAdd(mult1B08,mult1AFA);
          real coeff1B0B#9 = -0.4e1;
          real mult1B0C#4 = RMul(coeff1AEF,prod1AF6);
          real mult1B0D#1 = RMul(coeff1B0B,prod1AF5);
          real mult1B0E#2 = RMul(coeff1B0B,prod1AF1);
          real sum1B0F#1 = RAdd(mult1B0D,mult1B0E);
          real sum1B10#1 = RAdd(mult1B0C,sum1B0F);
          real mult1B12#4 = RMul(coeff1AEF,prod1AF3);
          real mult1B13#1 = RMul(coeff1B0B,prod1AEE);
          real sum1B14#1 = RAdd(mult1B0E,mult1B13);
          real sum1B15#1 = RAdd(mult1B12,sum1B14);
          tensor[6] intermediateCons1B17#1 = <tensor[6]>[sum1B02,sum1B06,sum1B09,mult1AFC,sum1B10,sum1B15];
          real compositionl1B49#1 = VDot<6>(dofs1ACC,intermediateCons1B17);
          real f01B4C#5 = RSub(compositionl1B49,_t1813);
          real _t1B4F#1 = VIndex<3,0>(rayVec17D4);
          real _t1B51#1 = VIndex<3,1>(rayVec17D4);
          tensor[2] _t1B53#2 = <tensor[2]>[_t1B4F,_t1B51];
          real mult1B60#1 = RMul(coeff1AF2,prod1AF7);
          real sum1B63#1 = RAdd(mult1B0C,mult1B12);
          real sum1B64#2 = RAdd(mult1B60,sum1B63);
          real mult1B67#4 = RMul(coeff1B04,prod1AF7);
          real sum1B68#1 = RAdd(mult1B67,mult1B12);
          real basisEval1B6A#34 = 0.e0;
          real basisEval1B6C#2 = RMul(coeff1B0B,prod1AF6);
          real coeff1B6D#3 = -0.8e1;
          real mult1B6E#8 = RMul(coeff1AEF,prod1AF7);
          real mult1B6F#1 = RMul(coeff1B6D,prod1AF3);
          real sum1B70#1 = RAdd(basisEval1B6C,mult1B6F);
          real sum1B71#1 = RAdd(mult1B6E,sum1B70);
          real sum1B74#1 = RAdd(mult1B67,mult1B0C);
          real mult1B76#1 = RMul(coeff1B6D,prod1AF6);
          real mult1B77#2 = RMul(coeff1B0B,prod1AF3);
          real sum1B78#1 = RAdd(mult1B76,mult1B77);
          real sum1B79#1 = RAdd(mult1B6E,sum1B78);
          tensor[6] intermediateCons1B7B#1 = <tensor[6]>[sum1B64,sum1B68,basisEval1B6A,mult1B0C,basisEval1B6C,sum1B71];
          tensor[6] intermediateCons1B7C#1 = <tensor[6]>[sum1B64,basisEval1B6A,sum1B74,mult1B12,sum1B79,mult1B77];
          real vdot1BA9#6 = VDot<6>(dofs1ACC,intermediateCons1B7B);
          real vdot1BAB#6 = VDot<6>(dofs1ACC,intermediateCons1B7C);
          int mulRes1BB4#3 = IMul(_t1811,ilit1A93);
          int idx1BB7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,mulRes1BB4);
          int addRes1BB9#1 = IAdd(mulRes1BB4,_t17F6);
          int idx1BBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB9);
          int addRes1BBC#1 = IAdd(mulRes1BB4,ilit1A90);
          int idx1BBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BBC);
          int mulRes1BD0#2 = IMul(ilit1A90,idx1BB7);
          int addRes1BD3#1 = IAdd(_t17F6,mulRes1BD0);
          real dof_load1BD4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD0);
          real dof_load1BD5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD3);
          int mulRes1BD8#2 = IMul(ilit1A90,idx1BBA);
          int addRes1BDA#1 = IAdd(_t17F6,mulRes1BD8);
          real dof_load1BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD8);
          real dof_load1BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BDA);
          int mulRes1BDF#2 = IMul(ilit1A90,idx1BBD);
          int addRes1BE1#1 = IAdd(_t17F6,mulRes1BDF);
          real dof_load1BE2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BDF);
          real dof_load1BE3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE1);
          real r1C1B#2 = RMul(dof_load1BD4,mult1B67);
          real r1C1E#1 = RMul(dof_load1BDB,mult1AF8);
          real r1C21#2 = RMul(dof_load1BE2,basisEval1B6A);
          real r1C22#1 = RAdd(r1C1B,r1C1E);
          real r1C23#4 = RAdd(r1C22,r1C21);
          real r1C27#2 = RMul(dof_load1BDB,basisEval1B6A);
          real r1C29#1 = RMul(dof_load1BE2,mult1AF8);
          real r1C2A#1 = RAdd(r1C1B,r1C27);
          real r1C2B#3 = RAdd(r1C2A,r1C29);
          real r1C2E#2 = RMul(dof_load1BD5,mult1B67);
          real r1C30#1 = RMul(dof_load1BDC,mult1AF8);
          real r1C32#2 = RMul(dof_load1BE3,basisEval1B6A);
          real r1C33#1 = RAdd(r1C2E,r1C30);
          real r1C34#4 = RAdd(r1C33,r1C32);
          real r1C36#2 = RMul(dof_load1BDC,basisEval1B6A);
          real r1C37#1 = RMul(dof_load1BE3,mult1AF8);
          real r1C38#1 = RAdd(r1C2E,r1C36);
          real r1C39#3 = RAdd(r1C38,r1C37);
          real r1C62#1 = RMul(basisEval1B6A,r1C23);
          real r1C65#1 = RMul(coeff1B04,r1C34);
          real r1C66#2 = RAdd(r1C62,r1C65);
          real r1C68#2 = RMul(basisEval1B6A,r1C2B);
          real r1C6A#1 = RMul(coeff1B04,r1C39);
          real r1C6B#2 = RAdd(r1C68,r1C6A);
          real r1C6E#1 = RMul(one1AED,r1C23);
          real r1C6F#1 = RMul(basisEval1B6A,r1C34);
          real r1C70#2 = RAdd(r1C6E,r1C6F);
          real r1C71#1 = RMul(one1AED,r1C2B);
          real r1C72#2 = RMul(basisEval1B6A,r1C39);
          real r1C73#2 = RAdd(r1C71,r1C72);
          tensor[2] probe_l_101C8C#1 = <tensor[2]>[r1C23,r1C34];
          real r1CE4#1 = RMul(one1AED,r1C39);
          real r1CE5#2 = RAdd(r1C68,r1CE4);
          real r1CE7#1 = RMul(coeff1B04,r1C2B);
          real r1CE9#2 = RAdd(r1CE7,r1C72);
          tensor[2] op1_e3_l_121CDE#1 = <tensor[2]>[r1CE5,r1CE9];
          real r1CFA#1 = RMul(basisEval1B6A,r1C66);
          real r1CFD#1 = RMul(coeff1B04,r1C6B);
          real r1CFE#3 = RAdd(r1CFA,r1CFD);
          real r1D00#1 = RMul(basisEval1B6A,r1C70);
          real r1D02#1 = RMul(coeff1B04,r1C73);
          real r1D03#3 = RAdd(r1D00,r1D02);
          real r1D06#1 = RMul(one1AED,r1C66);
          real r1D07#1 = RMul(basisEval1B6A,r1C6B);
          real r1D08#3 = RAdd(r1D06,r1D07);
          real r1D09#1 = RMul(one1AED,r1C70);
          real r1D0A#1 = RMul(basisEval1B6A,r1C73);
          real r1D0B#3 = RAdd(r1D09,r1D0A);
          real op1_e3_l_141D24#10 = VDot<2>(probe_l_101C8C,op1_e3_l_121CDE);
          real r1D29#5 = RDiv(r1CFE,op1_e3_l_141D24);
          real r1D2B#5 = RDiv(r1D03,op1_e3_l_141D24);
          real r1D2E#5 = RDiv(r1D08,op1_e3_l_141D24);
          real r1D30#5 = RDiv(r1D0B,op1_e3_l_141D24);
          real r1D41#1 = RMul(vdot1BA9,r1D29);
          real r1D44#1 = RMul(vdot1BAB,r1D2E);
          real r1D45#1 = RAdd(r1D41,r1D44);
          real r1D47#1 = RMul(vdot1BA9,r1D2B);
          real r1D49#1 = RMul(vdot1BAB,r1D30);
          real r1D4A#1 = RAdd(r1D47,r1D49);
          tensor[2] _t1D3E#3 = <tensor[2]>[r1D45,r1D4A];
          real _t1D59#2 = VIndex<3,2>(rayVec17D4);
          int _t1D5B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc17E4);
          real _t1D5D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_201D7A#1 = VDot<2>(_t1B53,_t1D3E);
          real op1_e3_l_211D7D#1 = RSub(op1_e3_l_201D7A,_t1D59);
          real op1_e3_l_221D80#1 = Abs<real>(op1_e3_l_211D7D);
          real _t1D83#1 = RDiv(op1_e3_l_221D80,_t1D5D);
          real _t1D86#1 = RSub(e17E2,s17E0);
          real gradEps1D89#6 = Min<real>(_t1D83,_t1D86);
          string _t1D8B#1 = "hmmmm:";
          string _t1D8D#18 = "\n";
          Print<[string,tensor[2],string]>(_t1D8B,_t1D3E,_t1D8D);
          string _t1D90#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t1D90,dofs1ACC,_t1D8D);
          tensor[2] op1_e3_l_31D93#1 = VScale<2>(gradEps1D89,_t1B53);
          tensor[2] _t1D96#1 = VAdd<2>(project1807,op1_e3_l_31D93);
          femData:MeshPos callNewtonPos1D99#1 = _0A3A_msh_newtonInverse1816 (_t1D96,_t1811,_t180F);
          tensor[2] refPos1D9B#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1D99);
          real varAcc1D9E#4 = VIndex<2,0>(refPos1D9B);
          real varAcc1D9F#4 = VIndex<2,1>(refPos1D9B);
          real prod21DA2#1 = RMul(varAcc1D9E,varAcc1D9E);
          real prod1DA4#2 = RMul(prod21DA2,one1AED);
          real prod1DA7#2 = RMul(varAcc1D9E,varAcc1D9F);
          real prod1DA9#3 = RMul(varAcc1D9E,one1AED);
          real prod21DAA#1 = RMul(varAcc1D9F,varAcc1D9F);
          real prod1DAB#2 = RMul(one1AED,prod21DAA);
          real prod1DAC#3 = RMul(one1AED,varAcc1D9F);
          real mult1DAF#1 = RMul(coeff1AF2,prod1DAC);
          real mult1DB0#2 = RMul(coeff1AEA,prod1DAB);
          real mult1DB1#1 = RMul(coeff1AF2,prod1DA9);
          real mult1DB2#2 = RMul(coeff1AEF,prod1DA7);
          real mult1DB3#2 = RMul(coeff1AEA,prod1DA4);
          real sum1DB4#1 = RAdd(mult1DB2,mult1DB3);
          real sum1DB5#1 = RAdd(mult1DB1,sum1DB4);
          real sum1DB6#1 = RAdd(mult1DB0,sum1DB5);
          real sum1DB7#1 = RAdd(mult1DAF,sum1DB6);
          real sum1DB8#1 = RAdd(mult1AF8,sum1DB7);
          real mult1DBB#1 = RMul(coeff1B04,prod1DA9);
          real sum1DBC#1 = RAdd(mult1DBB,mult1DB3);
          real mult1DBE#1 = RMul(coeff1B04,prod1DAC);
          real sum1DBF#1 = RAdd(mult1DBE,mult1DB0);
          real mult1DC2#1 = RMul(coeff1AEF,prod1DAC);
          real mult1DC3#1 = RMul(coeff1B0B,prod1DAB);
          real mult1DC4#2 = RMul(coeff1B0B,prod1DA7);
          real sum1DC5#1 = RAdd(mult1DC3,mult1DC4);
          real sum1DC6#1 = RAdd(mult1DC2,sum1DC5);
          real mult1DC8#1 = RMul(coeff1AEF,prod1DA9);
          real mult1DC9#1 = RMul(coeff1B0B,prod1DA4);
          real sum1DCA#1 = RAdd(mult1DC4,mult1DC9);
          real sum1DCB#1 = RAdd(mult1DC8,sum1DCA);
          tensor[6] intermediateCons1DCD#1 = <tensor[6]>[sum1DB8,sum1DBC,sum1DBF,mult1DB2,sum1DC6,sum1DCB];
          real compositionl1DFF#1 = VDot<6>(dofs1ACC,intermediateCons1DCD);
          real op1_e3_l_111E02#1 = RSub(compositionl1DFF,_t1813);
          real op1_e3_l_121E05#1 = RMul(gradEps1D89,_t1D59);
          real f11E08#4 = RSub(op1_e3_l_111E02,op1_e3_l_121E05);
          string _t1E0B#1 = "=========================\n";
          Print<[string]>(_t1E0B);
          string _t1E0E#1 = "Ui/Vi:";
          string _t1E10#2 = "/";
          Print<[string,int,string,int,string]>(_t1E0E,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t1E13#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1E13,cc17E4,_t1D8D);
          string _t1E16#1 = "hess:";
          real basisEval1E21#2 = RMul(coeff1B6D,prod1AF7);
          real basisEval1E23#2 = RMul(coeff1B0B,prod1AF7);
          tensor[6] intermediateCons1E24#1 = <tensor[6]>[mult1B6E,mult1B6E,basisEval1B6A,basisEval1B6A,basisEval1B6A,basisEval1E21];
          tensor[6] intermediateCons1E25#1 = <tensor[6]>[mult1B6E,basisEval1B6A,basisEval1B6A,mult1B6E,basisEval1E23,basisEval1E23];
          tensor[6] intermediateCons1E26#1 = <tensor[6]>[mult1B6E,basisEval1B6A,mult1B6E,basisEval1B6A,basisEval1E21,basisEval1B6A];
          real vdot1E3E#2 = VDot<6>(dofs1ACC,intermediateCons1E24);
          real vdot1E40#4 = VDot<6>(dofs1ACC,intermediateCons1E25);
          real vdot1E45#2 = VDot<6>(dofs1ACC,intermediateCons1E26);
          real r1E56#1 = RMul(vdot1E3E,r1D29);
          real r1E59#1 = RMul(vdot1E40,r1D2E);
          real r1E5A#2 = RAdd(r1E56,r1E59);
          real r1E5C#1 = RMul(vdot1E3E,r1D2B);
          real r1E5E#1 = RMul(vdot1E40,r1D30);
          real r1E5F#2 = RAdd(r1E5C,r1E5E);
          real r1E62#1 = RMul(vdot1E40,r1D29);
          real r1E64#1 = RMul(vdot1E45,r1D2E);
          real r1E65#2 = RAdd(r1E62,r1E64);
          real r1E66#1 = RMul(vdot1E40,r1D2B);
          real r1E67#1 = RMul(vdot1E45,r1D30);
          real r1E68#2 = RAdd(r1E66,r1E67);
          real r1E93#1 = RMul(dof_load1BD4,basisEval1B6A);
          real r1E9A#1 = RAdd(r1E93,r1C27);
          real r1E9B#4 = RAdd(r1E9A,r1C21);
          real r1EB8#1 = RMul(dof_load1BD5,basisEval1B6A);
          real r1EBD#1 = RAdd(r1EB8,r1C36);
          real r1EBE#4 = RAdd(r1EBD,r1C32);
          real r1F16#2 = RMul(basisEval1B6A,r1E9B);
          real r1F19#1 = RMul(coeff1B04,r1EBE);
          real r1F1A#3 = RAdd(r1F16,r1F19);
          real r1F2E#1 = RMul(one1AED,r1E9B);
          real r1F2F#2 = RMul(basisEval1B6A,r1EBE);
          real r1F30#3 = RAdd(r1F2E,r1F2F);
          real r1F6B#2 = RMul(basisEval1B6A,r1F1A);
          real r1F6E#1 = RMul(coeff1B04,r1F1A);
          real r1F6F#2 = RAdd(r1F6B,r1F6E);
          tensor[2] tensor1F75#1 = <tensor[2]>[r1F6F,r1F6F];
          real r1F77#2 = RMul(basisEval1B6A,r1F30);
          real r1F79#1 = RMul(coeff1B04,r1F30);
          real r1F7A#2 = RAdd(r1F77,r1F79);
          tensor[2] tensor1F80#1 = <tensor[2]>[r1F7A,r1F7A];
          real r1F83#1 = RMul(one1AED,r1F1A);
          real r1F85#2 = RAdd(r1F83,r1F6B);
          tensor[2] tensor1F89#1 = <tensor[2]>[r1F85,r1F85];
          real r1F8A#1 = RMul(one1AED,r1F30);
          real r1F8C#2 = RAdd(r1F8A,r1F77);
          tensor[2] tensor1F90#1 = <tensor[2]>[r1F8C,r1F8C];
          real r2051#1 = RMul(one1AED,r1EBE);
          real r2052#1 = RAdd(r1F16,r2051);
          real r205A#1 = RMul(coeff1B04,r1E9B);
          real r205C#1 = RAdd(r205A,r1F2F);
          real r207B#1 = RMul(r1CE5,r1E9B);
          real r207E#1 = RMul(r1CE9,r1EBE);
          real r207F#2 = RAdd(r207B,r207E);
          tensor[2] op1_e3_l_412078#1 = <tensor[2]>[r207F,r207F];
          real r2096#1 = RMul(r1C23,r2052);
          real r2099#1 = RMul(r1C34,r205C);
          real r209A#2 = RAdd(r2096,r2099);
          tensor[2] op1_e3_l_422093#1 = <tensor[2]>[r209A,r209A];
          tensor[2] op1_e3_l_4420AE#2 = VAdd<2>(op1_e3_l_412078,op1_e3_l_422093);
          tensor[2] binopV20B3#1 = VScale<2>(op1_e3_l_141D24,tensor1F75);
          tensor[2] binopV20B5#1 = VScale<2>(op1_e3_l_141D24,tensor1F80);
          tensor[2] binopV20B8#1 = VScale<2>(op1_e3_l_141D24,tensor1F89);
          tensor[2] binopV20BA#1 = VScale<2>(op1_e3_l_141D24,tensor1F90);
          real r20CA#4 = TensorIndex<tensor[2],[0]>(op1_e3_l_4420AE);
          real r20CB#1 = RMul(r1CFE,r20CA);
          real r20CC#4 = TensorIndex<tensor[2],[1]>(op1_e3_l_4420AE);
          real r20CD#1 = RMul(r1CFE,r20CC);
          tensor[2] tensor20CE#1 = <tensor[2]>[r20CB,r20CD];
          real r20D0#1 = RMul(r1D03,r20CA);
          real r20D1#1 = RMul(r1D03,r20CC);
          tensor[2] tensor20D2#1 = <tensor[2]>[r20D0,r20D1];
          real r20D5#1 = RMul(r1D08,r20CA);
          real r20D6#1 = RMul(r1D08,r20CC);
          tensor[2] tensor20D7#1 = <tensor[2]>[r20D5,r20D6];
          real r20D9#1 = RMul(r1D0B,r20CA);
          real r20DA#1 = RMul(r1D0B,r20CC);
          tensor[2] tensor20DB#1 = <tensor[2]>[r20D9,r20DA];
          tensor[2] binopV20F6#2 = VSub<2>(binopV20B3,tensor20CE);
          tensor[2] binopV20F9#2 = VSub<2>(binopV20B5,tensor20D2);
          tensor[2] binopV20FD#2 = VSub<2>(binopV20B8,tensor20D7);
          tensor[2] binopV2100#2 = VSub<2>(binopV20BA,tensor20DB);
          real op1_e3_l_562112#8 = RMul(op1_e3_l_141D24,op1_e3_l_141D24);
          real r2116#1 = VIndex<2,0>(binopV20F6);
          real r2117#1 = RDiv(r2116,op1_e3_l_562112);
          real r2118#1 = VIndex<2,1>(binopV20F6);
          real r2119#1 = RDiv(r2118,op1_e3_l_562112);
          real r211B#1 = VIndex<2,0>(binopV20F9);
          real r211C#1 = RDiv(r211B,op1_e3_l_562112);
          real r211D#1 = VIndex<2,1>(binopV20F9);
          real r211E#1 = RDiv(r211D,op1_e3_l_562112);
          real r2121#1 = VIndex<2,0>(binopV20FD);
          real r2122#1 = RDiv(r2121,op1_e3_l_562112);
          real r2123#1 = VIndex<2,1>(binopV20FD);
          real r2124#1 = RDiv(r2123,op1_e3_l_562112);
          real r2126#1 = VIndex<2,0>(binopV2100);
          real r2127#1 = RDiv(r2126,op1_e3_l_562112);
          real r2128#1 = VIndex<2,1>(binopV2100);
          real r2129#1 = RDiv(r2128,op1_e3_l_562112);
          real r2147#1 = RMul(r1D29,r1E5A);
          real r214A#1 = RMul(r1D2E,r1E65);
          real r214B#1 = RAdd(r2147,r214A);
          real r214D#1 = RMul(r1D29,r1E5F);
          real r214F#1 = RMul(r1D2E,r1E68);
          real r2150#1 = RAdd(r214D,r214F);
          tensor[2] tensor2151#1 = <tensor[2]>[r214B,r2150];
          real r2153#1 = RMul(r1D2B,r1E5A);
          real r2155#1 = RMul(r1D30,r1E65);
          real r2156#1 = RAdd(r2153,r2155);
          real r2157#1 = RMul(r1D2B,r1E5F);
          real r2158#1 = RMul(r1D30,r1E68);
          real r2159#1 = RAdd(r2157,r2158);
          tensor[2] tensor215A#1 = <tensor[2]>[r2156,r2159];
          real r2176#1 = RMul(vdot1BA9,r2117);
          real r2179#1 = RMul(vdot1BAB,r2122);
          real r217A#1 = RAdd(r2176,r2179);
          real r217C#1 = RMul(vdot1BA9,r2119);
          real r217E#1 = RMul(vdot1BAB,r2124);
          real r217F#1 = RAdd(r217C,r217E);
          tensor[2] tensor2180#1 = <tensor[2]>[r217A,r217F];
          real r2182#1 = RMul(vdot1BA9,r211C);
          real r2184#1 = RMul(vdot1BAB,r2127);
          real r2185#1 = RAdd(r2182,r2184);
          real r2187#1 = RMul(vdot1BA9,r211E);
          real r2189#1 = RMul(vdot1BAB,r2129);
          real r218A#1 = RAdd(r2187,r2189);
          tensor[2] tensor218B#1 = <tensor[2]>[r2185,r218A];
          tensor[2] v21A9#3 = VAdd<2>(tensor2151,tensor2180);
          tensor[2] v21AC#3 = VAdd<2>(tensor215A,tensor218B);
          tensor[2,2] _t21A6#1 = <tensor[2,2]>[v21A9,v21AC];
          string _t21B5#1 = "norm:";
          real vdot21B9#1 = VDot<2>(v21A9,v21A9);
          real vdot21BB#1 = VDot<2>(v21AC,v21AC);
          real op1_e3_l_11521B7#1 = RAdd(vdot21B9,vdot21BB);
          real _t21C2#1 = Sqrt(op1_e3_l_11521B7);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1E16,_t21A6,_t1D8D,_t21B5,_t21C2,_t1D8D);
          string _t21C6#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t21C6,_t1D3E,_t1D8D);
          string _t21C9#1 = "vals:";
          tensor[2] _t21CB#2 = <tensor[2]>[f01B4C,f11E08];
          Print<[string,tensor[2],string]>(_t21C9,_t21CB,_t1D8D);
          bool _t21D0#2 = GT<real>(f01B4C,basisEval1B6A);
          if _t21D0 then goto JOIN21D5 else goto ASSIGN24F0
        JOIN21D5:  preds = [COND21D2,JOIN22A1]
          int _t21D3#1 = phi(_t17F6,_t21D4)
          bool _t21D6#2 = GT<real>(f11E08,basisEval1B6A);
          if _t21D6 then goto JOIN21DB else goto ASSIGN24F2
        JOIN21DB:  preds = [COND21D8,JOIN2299]
          int _t21D9#1 = phi(_t17F6,_t21DA)
          int _t21DC#1 = IMul(_t21D3,_t21D9);
          int _t21DE#5 = 0;
          bool _t21E0#1 = GT<int>(_t21DC,_t21DE);
          bool _t21E2#1 = BNot(_t21E0);
          if _t21E2 then goto COND21E5 else goto ASSIGN227F
        COND21E5:  preds = [COND21E4]
          if _t21D0 then goto JOIN21E8 else goto ASSIGN24F4
        JOIN21E8:  preds = [COND21E5,JOIN227B]
          int _t21E6#1 = phi(_t17F6,_t21E7)
          if _t21D6 then goto JOIN21EC else goto ASSIGN24F5
        JOIN21EC:  preds = [COND21E9,JOIN2275]
          int _t21EA#1 = phi(_t17F6,_t21EB)
          int _t21ED#1 = IMul(_t21E6,_t21EA);
          bool _t21EF#1 = EQ<int>(_t21ED,_t21DE);
          if _t21EF then goto ASSIGN21F3 else goto JOIN21F5
        ASSIGN21F3:  preds = [COND21F1]
          string _t21F2#1 = "Warn: 0 update\n";
          Print<[string]>(_t21F2);
          goto JOIN21F5
        JOIN21F5:  preds = [MASSIGN21F4,COND21F1]
          string _t21F6#1 = "update with interval:";
          Print<[string,real,string]>(_t21F6,gradEps1D89,_t1D8D);
          string _t21F9#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t21F9,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t21FC#1 = "Count:";
          Print<[string,int,string]>(_t21FC,count17EE,_t1D8D);
          int count21FF#1 = IAdd(count17EE,_t17F6);
          int totalCount2201#1 = IAdd(totalCount17F0,_t17F6);
          string _t2203#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t2203,_t21CB,_t1D8D);
          string _t2206#1 = "New interval:";
          real _t2208#3 = RAdd(s17E0,gradEps1D89);
          tensor[2] _t220B#2 = <tensor[2]>[s17E0,_t2208];
          Print<[string,tensor[2],string]>(_t2206,_t220B,_t1D8D);
          tensor[2][] intervals220E#1 = Append<tensor[2]>(intervals17E8,_t220B);
          tensor[3] op1_e3_l_52210#1 = VScale<3>(_t2208,rayVec17D4);
          tensor[3] _t2213#1 = VAdd<3>(rayOrig17D6,op1_e3_l_52210);
          tensor[2,3] _t2216#1 = <tensor[2,3]>[rayStart1800,_t2213];
          tensor[2,3][] sints2218#1 = Append<tensor[2,3]>(sints17EA,_t2216);
          femData:MeshCell[] newCells221A#1 = Append<femData:MeshCell>(newCells17EC,cc17E4);
          goto JOIN2223
        JOIN2223:  preds = [ASSIGN221B,ASSIGN2292]
          int totalCount221C#3 = phi(totalCount2201,totalCount17F0)
          int count221D#2 = phi(count21FF,count17EE)
          femData:MeshCell[] newCells221E#3 = phi(newCells221A,newCells17EC)
          tensor[2,3][] sints221F#2 = phi(sints2218,sints17EA)
          tensor[2][] intervals2220#3 = phi(intervals220E,intervals17E8)
          real s2221#3 = phi(_t2208,s2222)
          bool _t2224#1 = GTE<real>(s2221,e17E2);
          if _t2224 then goto ASSIGN2228 else goto JOIN2255
        ASSIGN2228:  preds = [COND2226]
          int itter2227#4 = IAdd(itter17DC,_t17F6);
          bool _t2229#1 = GTE<int>(itter2227,len17DA);
          if _t2229 then goto ASSIGN222D else goto ASSIGN2263
        ASSIGN222D:  preds = [COND222B]
          string _t222C#1 = "TotalCount:";
          Print<[string,int,string]>(_t222C,totalCount221C,_t1D8D);
          string _t222F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t222F,intervals2220,_t1D8D);
          string _t2232#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t2232,newCells221E,_t1D8D);
          string _t2235#1 = ";";
          string _t2237#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui17F2,_t2235,vi17F4,_t2237);
          self.itter = itter2227;
          self.s = s2221;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count221D;
          self.totalCount = totalCount221C;
          stabilize
          goto JOIN224D
        JOIN224D:  preds = [*STABILIZE2241,ASSIGN226F]
          int count2242#1 = phi(_t21DE)
          femData:FuncCell fc2243#1 = phi(_t2244)
          femData:MeshCell cc2245#1 = phi(cc2246)
          real e2247#1 = phi(e2248)
          real s2249#1 = phi(s224A)
          tensor[2] interval224B#1 = phi(interval224C)
          goto JOIN2255
        JOIN2255:  preds = [JOIN224D,COND2226]
          int count224E#1 = phi(count2242,count221D)
          femData:FuncCell fc224F#1 = phi(fc2243,fc17E6)
          femData:MeshCell cc2250#1 = phi(cc2245,cc17E4)
          real e2251#1 = phi(e2247,e17E2)
          real s2252#1 = phi(s2249,s2221)
          tensor[2] interval2253#1 = phi(interval224B,interval17DE)
          int itter2254#1 = phi(itter2227,itter17DC)
          self.itter = itter2254;
          self.interval = interval2253;
          self.s = s2252;
          self.e = e2251;
          self.cc = cc2250;
          self.fc = fc224F;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count224E;
          self.totalCount = totalCount221C;
          active
        ASSIGN2263:  preds = [COND222B]
          string _t2262#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t2262);
          int _t2265#2 = IAdd(offset17D8,itter2227);
          tensor[2] interval224C#3 = Subscript<tensor[2][]>(times17D0,_t2265);
          int _t2268#1 = Subscript<int[]>(cells17D2,_t2265);
          femData:MeshCell cc2246#2 = Subscript<femData:MeshCell[]>(0cell_a17CC,_t2268);
          real s224A#1 = VIndex<2,0>(interval224C);
          real e2248#1 = VIndex<2,1>(interval224C);
          int _t226D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc2246);
          femData:FuncCell _t2244#1 = LoadFem<femData:FuncCell>(c17CE,_t226D);
          goto JOIN224D
        ASSIGN24F5:  preds = [COND21E9]
          bool _t2270#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2270 then goto ASSIGN2274 else goto JOIN2275
        ASSIGN2274:  preds = [COND2272]
          int _t2273#1 = -1;
          goto JOIN2275
        JOIN2275:  preds = [ASSIGN2274,COND2272]
          int _t21EB#1 = phi(_t2273,_t21DE)
          goto JOIN21EC
        ASSIGN24F4:  preds = [COND21E5]
          bool _t2276#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t2276 then goto ASSIGN227A else goto JOIN227B
        ASSIGN227A:  preds = [COND2278]
          int _t2279#1 = -1;
          goto JOIN227B
        JOIN227B:  preds = [ASSIGN227A,COND2278]
          int _t21E7#1 = phi(_t2279,_t21DE)
          goto JOIN21E8
        ASSIGN227F:  preds = [COND21E4]
          real _t227E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_122280#1 = Abs<real>(f01B4C);
          real op1_e3_l_132283#1 = RMul(coeff1AEA,_t227E);
          real _t2286#1 = RDiv(op1_e3_l_122280,op1_e3_l_132283);
          real epsUpdate2289#2 = Max<real>(gradEps1D89,_t2286);
          string _t228B#1 = "update L:";
          Print<[string,real,string]>(_t228B,epsUpdate2289,_t1D8D);
          string _t228E#1 = "update G:";
          Print<[string,real,string]>(_t228E,gradEps1D89,_t1D8D);
          real s2222#1 = RAdd(s17E0,epsUpdate2289);
          goto JOIN2223
        ASSIGN24F2:  preds = [COND21D8]
          bool _t2293#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2293 then goto ASSIGN2297 else goto ASSIGN229A
        ASSIGN2297:  preds = [COND2295]
          int _t2296#1 = -1;
          goto JOIN2299
        JOIN2299:  preds = [ASSIGN2297,ASSIGN229A]
          int _t21DA#1 = phi(_t2296,_t2298)
          goto JOIN21DB
        ASSIGN229A:  preds = [COND2295]
          int _t2298#1 = 0;
          goto JOIN2299
        ASSIGN24F0:  preds = [COND21D2]
          bool _t229B#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t229B then goto ASSIGN229F else goto ASSIGN22A2
        ASSIGN229F:  preds = [COND229D]
          int _t229E#1 = -1;
          goto JOIN22A1
        JOIN22A1:  preds = [ASSIGN229F,ASSIGN22A2]
          int _t21D4#1 = phi(_t229E,_t22A0)
          goto JOIN21D5
        ASSIGN22A2:  preds = [COND229D]
          int _t22A0#1 = 0;
          goto JOIN22A1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY22A3:  preds = []
      int iresU22A4#1 = globals.iresU1557;
      int iresV22A6#1 = globals.iresV1558;
      int _t22A8#2 = 0;
      int _t22AA#2 = 1;
      int _t22AC#1 = ISub(iresU22A4,_t22AA);
      int[] _t22AE#1 = Range(_t22A8,_t22AC);
    FOREACH22B1:  preds = [ASSIGN22AF,NEXT22BA]
      foreach (vi22B0 in _t22AE) on exit goto RETURN22BB
      int _t22B2#1 = ISub(iresV22A6,_t22AA);
      int[] _t22B4#1 = Range(_t22A8,_t22B2);
    FOREACH22B7:  preds = [ASSIGN22B5,NEXT22B9]
      foreach (ui22B6 in _t22B4) on exit goto NEXT22BA
      new ray(ui22B6,vi22B0);
      goto FOREACH22B7
    NEXT22BA:  preds = [FOREACH22B7]
      goto FOREACH22B1
    RETURN22BB:  preds = [FOREACH22B1]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a154E (a) = <no-default>
  input 0b0450_intermedateGlobal154F (b) = <no-default>
  input 0c0452_intermedateGlobal1550 (c) = <no-default>
  input isoval1551 (isoval) = <default>
  input thick1552 (thick) = <default>
  input camEye1553 (camEye) = <default>
  input camAt1554 (camAt) = <default>
  input camUp1555 (camUp) = <default>
  input camFOV1556 (camFOV) = <default>
  input iresU1557 (iresU) = <default>
  input iresV1558 (iresV) = <default>
  input camNear1559 (camNear) = <default>
  input camFar155A (camFar) = <default>
  input refStep155B (refStep) = <default>
  input rayStep155C (rayStep) = <default>
  input lightVsp155D (lightVsp) = <default>
  input phongKa155E (phongKa) = <default>
  input phongKd155F (phongKd) = <default>
  input debug1560 (debug) = <default>
  input debugU1561 (debugU) = <default>
  input debugV1562 (debugV) = <default>
  input eps1563 (eps) = <default>
  input indecies1564 (indecies) = <no-default>
  input times1565 (times) = <no-default>
  input cells1566 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a1567
  global femData:FemFunc c1568
  global tensor[3] camU1569
  global tensor[3] camV156A
  global real camVmax156B
  global real camUmax156C
  global tensor[3] rayVec156D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1816 (tensor[2] pos1817#2, int cellInt1818#2, femData:Mesh mesh1819#12) {
    ENTRY181A:  preds = []
      real _t181B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn181D#1 = <tensor[2]>[_t181B,_t181B];
      int _t181F#1 = 0;
      int _t1821#1 = 16;
      int[] _t1823#1 = Range(_t181F,_t1821);
    FOREACH1826:  preds = [ASSIGN1824,NEXT1A7D]
      foreach (itter1825 in _t1823) on exit goto ASSIGN1A82
        tensor[2] xn199D#3 = phi(xn181D,xn1A11)
      int ilit1828#1 = 3;
      int mulRes1829#3 = IMul(cellInt1818,ilit1828);
      int idx182C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,mulRes1829);
      int ilit182D#4 = 1;
      int addRes182E#1 = IAdd(mulRes1829,ilit182D);
      int idx182F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182E);
      int ilit1830#4 = 2;
      int addRes1831#1 = IAdd(mulRes1829,ilit1830);
      int idx1832#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes1831);
      int mulRes1845#2 = IMul(ilit1830,idx182C);
      int addRes1848#1 = IAdd(ilit182D,mulRes1845);
      real dof_load1849#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1845);
      real dof_load184A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1848);
      int mulRes184D#2 = IMul(ilit1830,idx182F);
      int addRes184F#1 = IAdd(ilit182D,mulRes184D);
      real dof_load1850#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes184D);
      real dof_load1851#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184F);
      int mulRes1854#2 = IMul(ilit1830,idx1832);
      int addRes1856#1 = IAdd(ilit182D,mulRes1854);
      real dof_load1857#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1854);
      real dof_load1858#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1856);
      real coeff1878#8 = -0.1e1;
      real one1879#15 = 0.1e1;
      real prod187A#2 = RMul(one1879,one1879);
      real basisEval187B#2 = RMul(coeff1878,prod187A);
      real basisEval187C#5 = RMul(one1879,prod187A);
      real basisEval187D#12 = 0.e0;
      real r1890#2 = RMul(dof_load1849,basisEval187B);
      real r1893#1 = RMul(dof_load1850,basisEval187C);
      real r1896#1 = RMul(dof_load1857,basisEval187D);
      real r1897#1 = RAdd(r1890,r1893);
      real r1898#3 = RAdd(r1897,r1896);
      real r189C#1 = RMul(dof_load1850,basisEval187D);
      real r189E#1 = RMul(dof_load1857,basisEval187C);
      real r189F#1 = RAdd(r1890,r189C);
      real r18A0#3 = RAdd(r189F,r189E);
      real r18A3#2 = RMul(dof_load184A,basisEval187B);
      real r18A5#1 = RMul(dof_load1851,basisEval187C);
      real r18A7#1 = RMul(dof_load1858,basisEval187D);
      real r18A8#1 = RAdd(r18A3,r18A5);
      real r18A9#3 = RAdd(r18A8,r18A7);
      real r18AB#1 = RMul(dof_load1851,basisEval187D);
      real r18AC#1 = RMul(dof_load1858,basisEval187C);
      real r18AD#1 = RAdd(r18A3,r18AB);
      real r18AE#3 = RAdd(r18AD,r18AC);
      real r18D7#1 = RMul(basisEval187D,r1898);
      real r18DA#1 = RMul(coeff1878,r18A9);
      real r18DB#2 = RAdd(r18D7,r18DA);
      real r18DD#2 = RMul(basisEval187D,r18A0);
      real r18DF#1 = RMul(coeff1878,r18AE);
      real r18E0#2 = RAdd(r18DD,r18DF);
      real r18E3#1 = RMul(one1879,r1898);
      real r18E4#1 = RMul(basisEval187D,r18A9);
      real r18E5#2 = RAdd(r18E3,r18E4);
      real r18E6#1 = RMul(one1879,r18A0);
      real r18E7#2 = RMul(basisEval187D,r18AE);
      real r18E8#2 = RAdd(r18E6,r18E7);
      tensor[2] probe_l_121901#1 = <tensor[2]>[r1898,r18A9];
      real r1959#1 = RMul(one1879,r18AE);
      real r195A#1 = RAdd(r18DD,r1959);
      real r195C#1 = RMul(coeff1878,r18A0);
      real r195E#1 = RAdd(r195C,r18E7);
      tensor[2] op1_e3_l_141953#1 = <tensor[2]>[r195A,r195E];
      real r196F#1 = RMul(basisEval187D,r18DB);
      real r1972#1 = RMul(coeff1878,r18E0);
      real r1973#1 = RAdd(r196F,r1972);
      real r1975#1 = RMul(basisEval187D,r18E5);
      real r1977#1 = RMul(coeff1878,r18E8);
      real r1978#1 = RAdd(r1975,r1977);
      real r197B#1 = RMul(one1879,r18DB);
      real r197C#1 = RMul(basisEval187D,r18E0);
      real r197D#1 = RAdd(r197B,r197C);
      real r197E#1 = RMul(one1879,r18E5);
      real r197F#1 = RMul(basisEval187D,r18E8);
      real r1980#1 = RAdd(r197E,r197F);
      real op1_e3_l_161999#4 = VDot<2>(probe_l_121901,op1_e3_l_141953);
      real varAcc199E#1 = VIndex<2,0>(xn199D);
      real varAcc199F#1 = VIndex<2,1>(xn199D);
      real prod19A3#2 = RMul(varAcc199E,one1879);
      real prod19A5#2 = RMul(one1879,varAcc199F);
      real mult19A8#1 = RMul(coeff1878,prod19A5);
      real mult19A9#1 = RMul(coeff1878,prod19A3);
      real sum19AA#1 = RAdd(mult19A8,mult19A9);
      real sum19AB#2 = RAdd(basisEval187C,sum19AA);
      real basisEval19AD#2 = RMul(one1879,prod19A3);
      real basisEval19AE#2 = RMul(one1879,prod19A5);
      real r19C6#1 = RMul(dof_load1849,sum19AB);
      real r19C9#1 = RMul(dof_load1850,basisEval19AD);
      real r19CC#1 = RMul(dof_load1857,basisEval19AE);
      real r19CD#1 = RAdd(r19C6,r19C9);
      real r19CE#1 = RAdd(r19CD,r19CC);
      real r19D0#1 = RMul(dof_load184A,sum19AB);
      real r19D2#1 = RMul(dof_load1851,basisEval19AD);
      real r19D4#1 = RMul(dof_load1858,basisEval19AE);
      real r19D5#1 = RAdd(r19D0,r19D2);
      real r19D6#1 = RAdd(r19D5,r19D4);
      tensor[2] probe_l_1719C3#1 = <tensor[2]>[r19CE,r19D6];
      real r19EE#1 = RDiv(r1973,op1_e3_l_161999);
      real r19F0#1 = RDiv(r1978,op1_e3_l_161999);
      tensor[2] tensor19F1#1 = <tensor[2]>[r19EE,r19F0];
      real r19F3#1 = RDiv(r197D,op1_e3_l_161999);
      real r19F5#1 = RDiv(r1980,op1_e3_l_161999);
      tensor[2] tensor19F6#1 = <tensor[2]>[r19F3,r19F5];
      tensor[2] op1_e3_l_191A03#2 = VSub<2>(probe_l_1719C3,pos1817);
      real vdot1A08#1 = VDot<2>(tensor19F1,op1_e3_l_191A03);
      real vdot1A0A#1 = VDot<2>(tensor19F6,op1_e3_l_191A03);
      tensor[2] op1_e3_l_201A06#3 = <tensor[2]>[vdot1A08,vdot1A0A];
      tensor[2] xn1A11#4 = VSub<2>(xn199D,op1_e3_l_201A06);
      real _t1A14#2 = 0.1e-7;
      real _t1A16#1 = RMul(_t1A14,_t1A14);
      real _t1A50#1 = VDot<2>(op1_e3_l_201A06,op1_e3_l_201A06);
      bool _t1A53#1 = GTE<real>(_t1A16,_t1A50);
      if _t1A53 then goto ASSIGN1A59 else goto JOIN1A7C
    ASSIGN1A59:  preds = [COND1A55]
      real _t1A58#3 = 0.1e-8;
      real _t1A5A#1 = RAdd(one1879,_t1A58);
      tensor[2] _t1A5D#1 = <tensor[2]>[one1879,one1879];
      real _t1A5F#1 = VDot<2>(_t1A5D,xn1A11);
      bool _t1A62#1 = GT<real>(_t1A5A,_t1A5F);
      tensor[2] _t1A64#1 = <tensor[2]>[_t1A58,_t1A58];
      tensor[2] _t1A66#2 = VAdd<2>(_t1A64,xn1A11);
      real _t1A69#1 = VIndex<2,0>(_t1A66);
      real _t1A6B#2 = -0.e0;
      bool _t1A6D#1 = GT<real>(_t1A69,_t1A6B);
      real _t1A6F#1 = VIndex<2,1>(_t1A66);
      bool _t1A71#1 = GT<real>(_t1A6F,_t1A6B);
      bool _t1A73#1 = BAnd(_t1A6D,_t1A71);
      bool _t1A75#1 = BAnd(_t1A62,_t1A73);
      if _t1A75 then goto ASSIGN1A79 else goto ASSIGN1A7F
    ASSIGN1A79:  preds = [COND1A77]
      femData:MeshPos _t1A78#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1819,cellInt1818,xn1A11,pos1817);
      return _t1A78
      goto JOIN1A7B
    JOIN1A7B:  preds = [*RETURN(_t1A78)1A7A,*RETURN(_t1A7E)1A80]
      goto JOIN1A7C
    JOIN1A7C:  preds = [*JOIN1A7B,COND1A55]
      goto FOREACH1826
    ASSIGN1A7F:  preds = [COND1A77]
      femData:MeshPos _t1A7E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A7E
      goto JOIN1A7B
    ASSIGN1A82:  preds = [FOREACH1826]
      femData:MeshPos _t1A81#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A81
}
## input initialization
  ENTRY156E:  preds = []
    real isoval156F#1 = 0.2e0;
    globals.isoval1551 = isoval156F;
    real thick1572#1 = 0.7e-1;
    globals.thick1552 = thick1572;
    real _t1575#1 = -0.5e0;
    real _t1577#5 = 0.5e0;
    tensor[3] camEye1579#1 = <tensor[3]>[_t1575,_t1577,_t1577];
    globals.camEye1553 = camEye1579;
    tensor[3] camAt157C#1 = <tensor[3]>[_t1577,_t1577,_t1577];
    globals.camAt1554 = camAt157C;
    real _t157F#2 = 0.e0;
    real _t1581#2 = 0.1e1;
    tensor[3] camUp1583#2 = <tensor[3]>[_t157F,_t157F,_t1581];
    globals.camUp1555 = camUp1583;
    real camFOV1586#1 = 0.137e2;
    globals.camFOV1556 = camFOV1586;
    int iresU1589#2 = 10;
    globals.iresU1557 = iresU1589;
    globals.iresV1558 = iresU1589;
    real camNear158D#1 = -0.2e1;
    globals.camNear1559 = camNear158D;
    real camFar1590#1 = 0.5e1;
    globals.camFar155A = camFar1590;
    globals.refStep155B = _t1581;
    real rayStep1594#1 = 0.1e-1;
    globals.rayStep155C = rayStep1594;
    globals.lightVsp155D = camUp1583;
    real phongKa1598#1 = 0.1e0;
    globals.phongKa155E = phongKa1598;
    real phongKd159B#1 = 0.9e0;
    globals.phongKd155F = phongKd159B;
    bool debug159E#1 = false;
    globals.debug1560 = debug159E;
    int debugU15A1#1 = 8;
    globals.debugU1561 = debugU15A1;
    int debugV15A4#1 = 2;
    globals.debugV1562 = debugV15A4;
    real eps15A7#1 = 0.1e-8;
    globals.eps1563 = eps15A7;
    return
## global-variable initialization
  ENTRY15AB:  preds = []
    femData:Mesh a15AC#3 = globals.a154E;
    femData:Space 0b0450_intermedateGlobal15AE#1 = globals.0b0450_intermedateGlobal154F;
    femData:FemFunc 0c0452_intermedateGlobal15B0#1 = globals.0c0452_intermedateGlobal1550;
    tensor[3] camEye15B2#1 = globals.camEye1553;
    tensor[3] camAt15B4#1 = globals.camAt1554;
    tensor[3] camUp15B6#3 = globals.camUp1555;
    real camFOV15B8#1 = globals.camFOV1556;
    int iresU15BA#1 = globals.iresU1557;
    int iresV15BC#1 = globals.iresV1558;
    int _t15BE#1 = 0;
    int _t15C0#1 = 1;
    int _t15C2#1 = ExtractFemItem<int,NumCell(Mesh)>(a15AC);
    int _t15C4#1 = ISub(_t15C2,_t15C0);
    int[] _t15C6#1 = Range(_t15BE,_t15C4);
    femData:MeshCell[] _t15C8#1 = <femData:MeshCell[]>{};
  FOREACH15CB:  preds = [ASSIGN15C9,NEXT15D1]
    foreach (_t15CA in _t15C6) on exit goto GASSIGN15D2
      femData:MeshCell[] _t15CF#2 = phi(_t15C8,_t15CE)
    femData:MeshCell _t15CC#1 = LoadFem<femData:MeshCell>(a15AC,_t15CA);
    femData:MeshCell[] _t15CE#1 = Append<femData:MeshCell>(_t15CF,_t15CC);
    goto FOREACH15CB
  GASSIGN15D2:  preds = [FOREACH15CB]
    globals.0cell_a1567 = _t15CF;
    femData:Space b15D3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal15AE,a15AC);
    femData:FemFunc c15D5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal15B0,b15D3);
    globals.c1568 = c15D5;
    tensor[3] op1_e3_l_415D8#9 = VSub<3>(camAt15B4,camEye15B2);
    real op1_e3_l_615DB#1 = VDot<3>(op1_e3_l_415D8,op1_e3_l_415D8);
    real op1_e3_l_715DE#3 = Sqrt(op1_e3_l_615DB);
    real realLit15E2#8 = 0.1e1;
    real op1_e3_l_915E1#6 = RDiv(realLit15E2,op1_e3_l_715DE);
    tensor[3] camN15E6#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_415D8);
    real realLit15EA#6 = 0.e0;
    real r15EB#3 = TensorIndex<tensor[3],[0]>(camUp15B6);
    real r15EC#3 = RMul(realLit15EA,r15EB);
    real r15ED#3 = TensorIndex<tensor[3],[1]>(camUp15B6);
    real r15EE#3 = RMul(realLit15EA,r15ED);
    real r15EF#3 = TensorIndex<tensor[3],[2]>(camUp15B6);
    real r15F0#5 = RMul(realLit15EA,r15EF);
    real r15F1#3 = RAdd(r15EC,r15EE);
    real r15F2#3 = RAdd(r15F1,r15F0);
    real r15F4#1 = RMul(realLit15E2,r15EF);
    real r15F5#1 = RAdd(r15F1,r15F4);
    real realLit15F6#6 = -0.1e1;
    real r15F7#1 = RMul(realLit15F6,r15ED);
    real r15F8#1 = RAdd(r15EC,r15F7);
    real r15F9#1 = RAdd(r15F8,r15F0);
    tensor[3] tensor15FA#1 = <tensor[3]>[r15F2,r15F5,r15F9];
    real r15FB#1 = RMul(realLit15F6,r15EF);
    real r15FC#1 = RAdd(r15F1,r15FB);
    real r15FD#1 = RMul(realLit15E2,r15EB);
    real r15FE#1 = RAdd(r15FD,r15EE);
    real r15FF#1 = RAdd(r15FE,r15F0);
    tensor[3] tensor1600#1 = <tensor[3]>[r15FC,r15F2,r15FF];
    real r1601#1 = RMul(realLit15E2,r15ED);
    real r1602#1 = RAdd(r15EC,r1601);
    real r1603#1 = RAdd(r1602,r15F0);
    real r1604#1 = RMul(realLit15F6,r15EB);
    real r1605#1 = RAdd(r1604,r15EE);
    real r1606#1 = RAdd(r1605,r15F0);
    tensor[3] tensor1607#1 = <tensor[3]>[r1603,r1606,r15F2];
    real vdot162A#1 = VDot<3>(op1_e3_l_415D8,tensor15FA);
    real vdot162C#1 = VDot<3>(op1_e3_l_415D8,tensor1600);
    real vdot162E#1 = VDot<3>(op1_e3_l_415D8,tensor1607);
    tensor[3] op1_e3_l_171628#6 = <tensor[3]>[vdot162A,vdot162C,vdot162E];
    real op1_e3_l_341637#1 = VDot<3>(op1_e3_l_171628,op1_e3_l_171628);
    real r163B#1 = RMul(op1_e3_l_915E1,op1_e3_l_915E1);
    real op1_e3_l_35163A#1 = RMul(r163B,op1_e3_l_341637);
    real op1_e3_l_36163F#1 = Sqrt(op1_e3_l_35163A);
    tensor[3] op1_e3_l_371642#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_171628);
    real op1_e3_l_381645#2 = RDiv(realLit15E2,op1_e3_l_36163F);
    tensor[3] camU164A#1 = VScale<3>(op1_e3_l_381645,op1_e3_l_371642);
    globals.camU1569 = camU164A;
    real r1650#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_415D8);
    real r1651#3 = RMul(realLit15EA,r1650);
    real r1652#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_415D8);
    real r1653#3 = RMul(realLit15EA,r1652);
    real r1654#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_415D8);
    real r1655#5 = RMul(realLit15EA,r1654);
    real r1656#3 = RAdd(r1651,r1653);
    real r1657#3 = RAdd(r1656,r1655);
    real r1659#1 = RMul(realLit15E2,r1654);
    real r165A#1 = RAdd(r1656,r1659);
    real r165C#1 = RMul(realLit15F6,r1652);
    real r165D#1 = RAdd(r1651,r165C);
    real r165E#1 = RAdd(r165D,r1655);
    tensor[3] tensor165F#1 = <tensor[3]>[r1657,r165A,r165E];
    real r1660#1 = RMul(realLit15F6,r1654);
    real r1661#1 = RAdd(r1656,r1660);
    real r1662#1 = RMul(realLit15E2,r1650);
    real r1663#1 = RAdd(r1662,r1653);
    real r1664#1 = RAdd(r1663,r1655);
    tensor[3] tensor1665#1 = <tensor[3]>[r1661,r1657,r1664];
    real r1666#1 = RMul(realLit15E2,r1652);
    real r1667#1 = RAdd(r1651,r1666);
    real r1668#1 = RAdd(r1667,r1655);
    real r1669#1 = RMul(realLit15F6,r1650);
    real r166A#1 = RAdd(r1669,r1653);
    real r166B#1 = RAdd(r166A,r1655);
    tensor[3] tensor166C#1 = <tensor[3]>[r1668,r166B,r1657];
    real vdot168F#1 = VDot<3>(op1_e3_l_171628,tensor165F);
    real vdot1691#1 = VDot<3>(op1_e3_l_171628,tensor1665);
    real vdot1693#1 = VDot<3>(op1_e3_l_171628,tensor166C);
    tensor[3] op1_e3_l_47168D#1 = <tensor[3]>[vdot168F,vdot1691,vdot1693];
    tensor[3] op1_e3_l_50169C#3 = VScale<3>(op1_e3_l_915E1,op1_e3_l_47168D);
    real r16A0#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_50169C);
    real r16A1#3 = RMul(op1_e3_l_381645,op1_e3_l_915E1);
    real r16A2#1 = RMul(r16A1,r16A0);
    real r16A3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_50169C);
    real r16A4#1 = RMul(r16A1,r16A3);
    real r16A5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_50169C);
    real r16A6#1 = RMul(r16A1,r16A5);
    tensor[3] camV169F#1 = <tensor[3]>[r16A2,r16A4,r16A6];
    globals.camV156A = camV169F;
    real _t16B1#1 = 0.314159265358979323846264338327950288e1;
    real _t16B3#1 = 0.36e3;
    real op1_e3_l_516B5#1 = RMul(camFOV15B8,_t16B1);
    real op1_e3_l_616B8#1 = RDiv(op1_e3_l_516B5,_t16B3);
    real op1_e3_l_1016BB#2 = Tan(op1_e3_l_616B8);
    real camVmax16BE#1 = RMul(op1_e3_l_1016BB,op1_e3_l_715DE);
    globals.camVmax156B = camVmax16BE;
    real _t16C2#1 = IntToReal(iresU15BA);
    real _t16C4#1 = IntToReal(iresV15BC);
    real r16C7#1 = RMul(_t16C2,op1_e3_l_1016BB);
    real op1_e3_l_1416C6#1 = RMul(r16C7,op1_e3_l_715DE);
    real camUmax16CB#1 = RDiv(op1_e3_l_1416C6,_t16C4);
    globals.camUmax156C = camUmax16CB;
    globals.rayVec156D = camN15E6;
    return
## strand
  strand ray (int ui16D1#3, int vi16D2#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY16E7:  preds = []
        femData:MeshCell[] 0cell_a16E8#1 = globals.0cell_a1567;
        femData:FemFunc c16EA#1 = globals.c1568;
        tensor[3] camEye16EC#1 = globals.camEye1553;
        int iresU16EE#2 = globals.iresU1557;
        int iresV16F0#3 = globals.iresV1558;
        int[] indecies16F2#2 = globals.indecies1564;
        tensor[2][] times16F4#1 = globals.times1565;
        tensor[3] camU16F6#1 = globals.camU1569;
        tensor[3] camV16F8#1 = globals.camV156A;
        real camVmax16FA#2 = globals.camVmax156B;
        real camUmax16FC#2 = globals.camUmax156C;
        real _t16FE#4 = -0.5e0;
        real _t1700#1 = IntToReal(ui16D1);
        real _t1702#1 = IntToReal(iresU16EE);
        real _t1704#2 = 0.5e0;
        real op1_e3_l_61706#1 = RSub(_t1702,_t1704);
        real op1_e3_l_71709#1 = RSub(_t1700,_t16FE);
        real op1_e3_l_8170C#1 = RSub(op1_e3_l_61706,_t16FE);
        real op1_e3_l_9170F#2 = RNeg(camUmax16FC);
        real op1_e3_l_101712#1 = RDiv(op1_e3_l_71709,op1_e3_l_8170C);
        real op1_e3_l_111715#1 = RSub(camUmax16FC,op1_e3_l_9170F);
        real op1_e3_l_131718#1 = RMul(op1_e3_l_101712,op1_e3_l_111715);
        real rayU171B#2 = RAdd(op1_e3_l_9170F,op1_e3_l_131718);
        real _t171E#1 = IntToReal(vi16D2);
        real _t1720#1 = IntToReal(iresV16F0);
        real op1_e3_l_61722#1 = RSub(_t1720,_t1704);
        real op1_e3_l_71725#1 = RSub(_t171E,_t16FE);
        real op1_e3_l_81728#1 = RSub(op1_e3_l_61722,_t16FE);
        real op1_e3_l_9172B#2 = RNeg(camVmax16FA);
        real op1_e3_l_10172E#1 = RDiv(op1_e3_l_71725,op1_e3_l_81728);
        real op1_e3_l_111731#1 = RSub(camVmax16FA,op1_e3_l_9172B);
        real op1_e3_l_131734#1 = RMul(op1_e3_l_10172E,op1_e3_l_111731);
        real rayV1737#2 = RAdd(op1_e3_l_9172B,op1_e3_l_131734);
        tensor[3] op1_e3_l_321749#2 = VScale<3>(rayU171B,camU16F6);
        tensor[3] op1_e3_l_33174C#2 = VScale<3>(rayV1737,camV16F8);
        tensor[3] UV174F#1 = VAdd<3>(op1_e3_l_321749,op1_e3_l_33174C);
        tensor[3] v1753#1 = VAdd<3>(camEye16EC,op1_e3_l_321749);
        tensor[3] rayOrig1752#1 = VAdd<3>(v1753,op1_e3_l_33174C);
        int _t1757#2 = IMul(ui16D1,iresV16F0);
        int _t1759#1 = IAdd(_t1757,vi16D2);
        int offset175B#3 = Subscript<int[]>(indecies16F2,_t1759);
        int _t175D#1 = IMul(iresU16EE,iresV16F0);
        int _t175F#1 = IAdd(_t175D,_t1757);
        int _t1761#1 = IAdd(_t175F,vi16D2);
        int len1763#1 = Subscript<int[]>(indecies16F2,_t1761);
        int itter1765#4 = 0;
        tensor[2] interval1769#3 = Subscript<tensor[2][]>(times16F4,offset175B);
        real s176B#1 = VIndex<2,0>(interval1769);
        real e176D#1 = VIndex<2,1>(interval1769);
        femData:MeshCell cc176F#2 = Subscript<femData:MeshCell[]>(0cell_a16E8,itter1765);
        int _t1771#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc176F);
        femData:FuncCell _t1773#1 = LoadFem<femData:FuncCell>(c16EA,_t1771);
        tensor[2][0] _t1775#1 = <tensor[2][0]>{};
        tensor[2][] _t1777#1 = MkDynamic<tensor[2],0>(_t1775);
        tensor[2,3][0] _t1779#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t177B#1 = MkDynamic<tensor[2,3],0>(_t1779);
        femData:MeshCell[0] _t177D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t177F#1 = MkDynamic<femData:MeshCell,0>(_t177D);
        self.rayU = rayU171B;
        self.rayV = rayV1737;
        self.UV = UV174F;
        self.rayOrig = rayOrig1752;
        self.offset = offset175B;
        self.len = len1763;
        self.itter = itter1765;
        self.idx = offset175B;
        self.interval = interval1769;
        self.s = s176B;
        self.e = e176D;
        self.cc = cc176F;
        self.fc = _t1773;
        self.intervals = _t1777;
        self.sints = _t177B;
        self.newCells = _t177F;
        self.count = itter1765;
        self.totalCount = itter1765;
        self.ui = ui16D1;
        self.vi = vi16D2;
        return
    end state init
    method start
        ENTRY1796:  preds = []
          femData:MeshCell[] 0cell_a1797#1 = globals.0cell_a1567;
          femData:FemFunc c1799#1 = globals.c1568;
          bool debug179B#1 = globals.debug1560;
          int debugU179D#1 = globals.debugU1561;
          int debugV179F#1 = globals.debugV1562;
          int[] cells17A1#1 = globals.cells1566;
          int len17A3#1 = self.len;
          int idx17A5#1 = self.idx;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug179B then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,debugU179D);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN17CA
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN17CA]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          int _t17B8#1 = 0;
          bool _t17BA#1 = EQ<int>(len17A3,_t17B8);
          if _t17BA then goto STABILIZE17BD else goto JOIN17BE
        STABILIZE17BD:  preds = [COND17BC]
          stabilize
          goto JOIN17BE
        JOIN17BE:  preds = [*STABILIZE17BD,COND17BC]
          int _t17BF#1 = Subscript<int[]>(cells17A1,idx17A5);
          femData:MeshCell cc17C1#2 = Subscript<femData:MeshCell[]>(0cell_a1797,_t17BF);
          int _t17C3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17C1);
          femData:FuncCell _t17C5#1 = LoadFem<femData:FuncCell>(c1799,_t17C3);
          self.cc = cc17C1;
          self.fc = _t17C5;
          active
        ASSIGN17CA:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,debugV179F);
          goto JOIN17B3
    end start
    method update
        ENTRY17CB:  preds = []
          femData:MeshCell[] 0cell_a17CC#1 = globals.0cell_a1567;
          femData:FemFunc c17CE#1 = globals.c1568;
          tensor[2][] times17D0#1 = globals.times1565;
          int[] cells17D2#1 = globals.cells1566;
          tensor[3] rayVec17D4#5 = globals.rayVec156D;
          tensor[3] rayOrig17D6#2 = self.rayOrig;
          int offset17D8#1 = self.offset;
          int len17DA#2 = self.len;
          int itter17DC#2 = self.itter;
          tensor[2] interval17DE#1 = self.interval;
          real s17E0#5 = self.s;
          real e17E2#3 = self.e;
          femData:MeshCell cc17E4#6 = self.cc;
          femData:FuncCell fc17E6#3 = self.fc;
          tensor[2][] intervals17E8#2 = self.intervals;
          tensor[2,3][] sints17EA#2 = self.sints;
          femData:MeshCell[] newCells17EC#2 = self.newCells;
          int count17EE#3 = self.count;
          int totalCount17F0#2 = self.totalCount;
          int ui17F2#3 = self.ui;
          int vi17F4#3 = self.vi;
          int _t17F6#19 = 1;
          bool _t17F8#1 = LT<int>(len17DA,_t17F6);
          if _t17F8 then goto STABILIZE17FB else goto JOIN17FC
        STABILIZE17FB:  preds = [COND17FA]
          stabilize
          goto JOIN17FC
        JOIN17FC:  preds = [*STABILIZE17FB,COND17FA]
          tensor[3] op1_e3_l_317FD#1 = VScale<3>(s17E0,rayVec17D4);
          tensor[3] rayStart1800#4 = VAdd<3>(rayOrig17D6,op1_e3_l_317FD);
          real _t1803#1 = VIndex<3,0>(rayStart1800);
          real _t1805#1 = VIndex<3,1>(rayStart1800);
          tensor[2] project1807#2 = <tensor[2]>[_t1803,_t1805];
          femData:FemFunc _t1809#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc17E6);
          femData:Space _t180B#6 = ExtractFem<femData:Space,femData:FemFunc>(_t1809);
          int _t180D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc17E6);
          femData:Mesh _t180F#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc17E4);
          int _t1811#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17E4);
          real _t1813#2 = VIndex<3,2>(rayStart1800);
          femData:MeshPos callNewtonPos1815#1 = _0A3A_msh_newtonInverse1816 (project1807,_t1811,_t180F);
          tensor[2] refPos1A85#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1815);
          int ilit1A88#1 = 6;
          int mulRes1A89#6 = IMul(_t180D,ilit1A88);
          int idx1A8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,mulRes1A89);
          int addRes1A8E#1 = IAdd(mulRes1A89,_t17F6);
          int idx1A8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8E);
          int ilit1A90#5 = 2;
          int addRes1A91#1 = IAdd(mulRes1A89,ilit1A90);
          int idx1A92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A91);
          int ilit1A93#2 = 3;
          int addRes1A94#1 = IAdd(mulRes1A89,ilit1A93);
          int idx1A95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A94);
          int ilit1A96#1 = 4;
          int addRes1A97#1 = IAdd(mulRes1A89,ilit1A96);
          int idx1A98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A97);
          int ilit1A99#1 = 5;
          int addRes1A9A#1 = IAdd(mulRes1A89,ilit1A99);
          int idx1A9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A9A);
          int mulRes1AB7#1 = IMul(_t17F6,idx1A8C);
          int mulRes1AB9#1 = IMul(_t17F6,idx1A8F);
          int mulRes1ABC#1 = IMul(_t17F6,idx1A92);
          int mulRes1ABF#1 = IMul(_t17F6,idx1A95);
          int mulRes1AC2#1 = IMul(_t17F6,idx1A98);
          int mulRes1AC5#1 = IMul(_t17F6,idx1A9B);
          real dof1AC6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB7);
          real dof1AC7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB9);
          real dof1AC8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABC);
          real dof1AC9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABF);
          real dof1ACA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC2);
          real dof1ACB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC5);
          tensor[6] dofs1ACC#8 = <tensor[6]>[dof1AC6,dof1AC7,dof1AC8,dof1AC9,dof1ACA,dof1ACB];
          real varAcc1AE8#4 = VIndex<2,0>(refPos1A85);
          real varAcc1AE9#4 = VIndex<2,1>(refPos1A85);
          real coeff1AEA#5 = 0.2e1;
          real prod21AEC#1 = RMul(varAcc1AE8,varAcc1AE8);
          real one1AED#20 = 0.1e1;
          real prod1AEE#2 = RMul(prod21AEC,one1AED);
          real coeff1AEF#7 = 0.4e1;
          real prod1AF1#2 = RMul(varAcc1AE8,varAcc1AE9);
          real coeff1AF2#5 = -0.3e1;
          real prod1AF3#5 = RMul(varAcc1AE8,one1AED);
          real prod21AF4#1 = RMul(varAcc1AE9,varAcc1AE9);
          real prod1AF5#2 = RMul(one1AED,prod21AF4);
          real prod1AF6#5 = RMul(one1AED,varAcc1AE9);
          real prod1AF7#6 = RMul(one1AED,one1AED);
          real mult1AF8#6 = RMul(one1AED,prod1AF7);
          real mult1AF9#1 = RMul(coeff1AF2,prod1AF6);
          real mult1AFA#2 = RMul(coeff1AEA,prod1AF5);
          real mult1AFB#1 = RMul(coeff1AF2,prod1AF3);
          real mult1AFC#2 = RMul(coeff1AEF,prod1AF1);
          real mult1AFD#2 = RMul(coeff1AEA,prod1AEE);
          real sum1AFE#1 = RAdd(mult1AFC,mult1AFD);
          real sum1AFF#1 = RAdd(mult1AFB,sum1AFE);
          real sum1B00#1 = RAdd(mult1AFA,sum1AFF);
          real sum1B01#1 = RAdd(mult1AF9,sum1B00);
          real sum1B02#1 = RAdd(mult1AF8,sum1B01);
          real coeff1B04#14 = -0.1e1;
          real mult1B05#1 = RMul(coeff1B04,prod1AF3);
          real sum1B06#1 = RAdd(mult1B05,mult1AFD);
          real mult1B08#1 = RMul(coeff1B04,prod1AF6);
          real sum1B09#1 = RAdd(mult1B08,mult1AFA);
          real coeff1B0B#9 = -0.4e1;
          real mult1B0C#4 = RMul(coeff1AEF,prod1AF6);
          real mult1B0D#1 = RMul(coeff1B0B,prod1AF5);
          real mult1B0E#2 = RMul(coeff1B0B,prod1AF1);
          real sum1B0F#1 = RAdd(mult1B0D,mult1B0E);
          real sum1B10#1 = RAdd(mult1B0C,sum1B0F);
          real mult1B12#4 = RMul(coeff1AEF,prod1AF3);
          real mult1B13#1 = RMul(coeff1B0B,prod1AEE);
          real sum1B14#1 = RAdd(mult1B0E,mult1B13);
          real sum1B15#1 = RAdd(mult1B12,sum1B14);
          tensor[6] intermediateCons1B17#1 = <tensor[6]>[sum1B02,sum1B06,sum1B09,mult1AFC,sum1B10,sum1B15];
          real compositionl1B49#1 = VDot<6>(dofs1ACC,intermediateCons1B17);
          real f01B4C#5 = RSub(compositionl1B49,_t1813);
          real _t1B4F#1 = VIndex<3,0>(rayVec17D4);
          real _t1B51#1 = VIndex<3,1>(rayVec17D4);
          tensor[2] _t1B53#2 = <tensor[2]>[_t1B4F,_t1B51];
          real mult1B60#1 = RMul(coeff1AF2,prod1AF7);
          real sum1B63#1 = RAdd(mult1B0C,mult1B12);
          real sum1B64#2 = RAdd(mult1B60,sum1B63);
          real mult1B67#4 = RMul(coeff1B04,prod1AF7);
          real sum1B68#1 = RAdd(mult1B67,mult1B12);
          real basisEval1B6A#34 = 0.e0;
          real basisEval1B6C#2 = RMul(coeff1B0B,prod1AF6);
          real coeff1B6D#3 = -0.8e1;
          real mult1B6E#8 = RMul(coeff1AEF,prod1AF7);
          real mult1B6F#1 = RMul(coeff1B6D,prod1AF3);
          real sum1B70#1 = RAdd(basisEval1B6C,mult1B6F);
          real sum1B71#1 = RAdd(mult1B6E,sum1B70);
          real sum1B74#1 = RAdd(mult1B67,mult1B0C);
          real mult1B76#1 = RMul(coeff1B6D,prod1AF6);
          real mult1B77#2 = RMul(coeff1B0B,prod1AF3);
          real sum1B78#1 = RAdd(mult1B76,mult1B77);
          real sum1B79#1 = RAdd(mult1B6E,sum1B78);
          tensor[6] intermediateCons1B7B#1 = <tensor[6]>[sum1B64,sum1B68,basisEval1B6A,mult1B0C,basisEval1B6C,sum1B71];
          tensor[6] intermediateCons1B7C#1 = <tensor[6]>[sum1B64,basisEval1B6A,sum1B74,mult1B12,sum1B79,mult1B77];
          real vdot1BA9#6 = VDot<6>(dofs1ACC,intermediateCons1B7B);
          real vdot1BAB#6 = VDot<6>(dofs1ACC,intermediateCons1B7C);
          int mulRes1BB4#3 = IMul(_t1811,ilit1A93);
          int idx1BB7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,mulRes1BB4);
          int addRes1BB9#1 = IAdd(mulRes1BB4,_t17F6);
          int idx1BBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB9);
          int addRes1BBC#1 = IAdd(mulRes1BB4,ilit1A90);
          int idx1BBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BBC);
          int mulRes1BD0#2 = IMul(ilit1A90,idx1BB7);
          int addRes1BD3#1 = IAdd(_t17F6,mulRes1BD0);
          real dof_load1BD4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD0);
          real dof_load1BD5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD3);
          int mulRes1BD8#2 = IMul(ilit1A90,idx1BBA);
          int addRes1BDA#1 = IAdd(_t17F6,mulRes1BD8);
          real dof_load1BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD8);
          real dof_load1BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BDA);
          int mulRes1BDF#2 = IMul(ilit1A90,idx1BBD);
          int addRes1BE1#1 = IAdd(_t17F6,mulRes1BDF);
          real dof_load1BE2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BDF);
          real dof_load1BE3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE1);
          real r1C1B#2 = RMul(dof_load1BD4,mult1B67);
          real r1C1E#1 = RMul(dof_load1BDB,mult1AF8);
          real r1C21#2 = RMul(dof_load1BE2,basisEval1B6A);
          real r1C22#1 = RAdd(r1C1B,r1C1E);
          real r1C23#4 = RAdd(r1C22,r1C21);
          real r1C27#2 = RMul(dof_load1BDB,basisEval1B6A);
          real r1C29#1 = RMul(dof_load1BE2,mult1AF8);
          real r1C2A#1 = RAdd(r1C1B,r1C27);
          real r1C2B#3 = RAdd(r1C2A,r1C29);
          real r1C2E#2 = RMul(dof_load1BD5,mult1B67);
          real r1C30#1 = RMul(dof_load1BDC,mult1AF8);
          real r1C32#2 = RMul(dof_load1BE3,basisEval1B6A);
          real r1C33#1 = RAdd(r1C2E,r1C30);
          real r1C34#4 = RAdd(r1C33,r1C32);
          real r1C36#2 = RMul(dof_load1BDC,basisEval1B6A);
          real r1C37#1 = RMul(dof_load1BE3,mult1AF8);
          real r1C38#1 = RAdd(r1C2E,r1C36);
          real r1C39#3 = RAdd(r1C38,r1C37);
          real r1C62#1 = RMul(basisEval1B6A,r1C23);
          real r1C65#1 = RMul(coeff1B04,r1C34);
          real r1C66#2 = RAdd(r1C62,r1C65);
          real r1C68#2 = RMul(basisEval1B6A,r1C2B);
          real r1C6A#1 = RMul(coeff1B04,r1C39);
          real r1C6B#2 = RAdd(r1C68,r1C6A);
          real r1C6E#1 = RMul(one1AED,r1C23);
          real r1C6F#1 = RMul(basisEval1B6A,r1C34);
          real r1C70#2 = RAdd(r1C6E,r1C6F);
          real r1C71#1 = RMul(one1AED,r1C2B);
          real r1C72#2 = RMul(basisEval1B6A,r1C39);
          real r1C73#2 = RAdd(r1C71,r1C72);
          tensor[2] probe_l_101C8C#1 = <tensor[2]>[r1C23,r1C34];
          real r1CE4#1 = RMul(one1AED,r1C39);
          real r1CE5#2 = RAdd(r1C68,r1CE4);
          real r1CE7#1 = RMul(coeff1B04,r1C2B);
          real r1CE9#2 = RAdd(r1CE7,r1C72);
          tensor[2] op1_e3_l_121CDE#1 = <tensor[2]>[r1CE5,r1CE9];
          real r1CFA#1 = RMul(basisEval1B6A,r1C66);
          real r1CFD#1 = RMul(coeff1B04,r1C6B);
          real r1CFE#3 = RAdd(r1CFA,r1CFD);
          real r1D00#1 = RMul(basisEval1B6A,r1C70);
          real r1D02#1 = RMul(coeff1B04,r1C73);
          real r1D03#3 = RAdd(r1D00,r1D02);
          real r1D06#1 = RMul(one1AED,r1C66);
          real r1D07#1 = RMul(basisEval1B6A,r1C6B);
          real r1D08#3 = RAdd(r1D06,r1D07);
          real r1D09#1 = RMul(one1AED,r1C70);
          real r1D0A#1 = RMul(basisEval1B6A,r1C73);
          real r1D0B#3 = RAdd(r1D09,r1D0A);
          real op1_e3_l_141D24#10 = VDot<2>(probe_l_101C8C,op1_e3_l_121CDE);
          real r1D29#5 = RDiv(r1CFE,op1_e3_l_141D24);
          real r1D2B#5 = RDiv(r1D03,op1_e3_l_141D24);
          real r1D2E#5 = RDiv(r1D08,op1_e3_l_141D24);
          real r1D30#5 = RDiv(r1D0B,op1_e3_l_141D24);
          real r1D41#1 = RMul(vdot1BA9,r1D29);
          real r1D44#1 = RMul(vdot1BAB,r1D2E);
          real r1D45#1 = RAdd(r1D41,r1D44);
          real r1D47#1 = RMul(vdot1BA9,r1D2B);
          real r1D49#1 = RMul(vdot1BAB,r1D30);
          real r1D4A#1 = RAdd(r1D47,r1D49);
          tensor[2] _t1D3E#3 = <tensor[2]>[r1D45,r1D4A];
          real _t1D59#2 = VIndex<3,2>(rayVec17D4);
          int _t1D5B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc17E4);
          real _t1D5D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_201D7A#1 = VDot<2>(_t1B53,_t1D3E);
          real op1_e3_l_211D7D#1 = RSub(op1_e3_l_201D7A,_t1D59);
          real op1_e3_l_221D80#1 = Abs<real>(op1_e3_l_211D7D);
          real _t1D83#1 = RDiv(op1_e3_l_221D80,_t1D5D);
          real _t1D86#1 = RSub(e17E2,s17E0);
          real gradEps1D89#6 = Min<real>(_t1D83,_t1D86);
          string _t1D8B#1 = "hmmmm:";
          string _t1D8D#18 = "\n";
          Print<[string,tensor[2],string]>(_t1D8B,_t1D3E,_t1D8D);
          string _t1D90#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t1D90,dofs1ACC,_t1D8D);
          tensor[2] op1_e3_l_31D93#1 = VScale<2>(gradEps1D89,_t1B53);
          tensor[2] _t1D96#1 = VAdd<2>(project1807,op1_e3_l_31D93);
          femData:MeshPos callNewtonPos1D99#1 = _0A3A_msh_newtonInverse1816 (_t1D96,_t1811,_t180F);
          tensor[2] refPos1D9B#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1D99);
          real varAcc1D9E#4 = VIndex<2,0>(refPos1D9B);
          real varAcc1D9F#4 = VIndex<2,1>(refPos1D9B);
          real prod21DA2#1 = RMul(varAcc1D9E,varAcc1D9E);
          real prod1DA4#2 = RMul(prod21DA2,one1AED);
          real prod1DA7#2 = RMul(varAcc1D9E,varAcc1D9F);
          real prod1DA9#3 = RMul(varAcc1D9E,one1AED);
          real prod21DAA#1 = RMul(varAcc1D9F,varAcc1D9F);
          real prod1DAB#2 = RMul(one1AED,prod21DAA);
          real prod1DAC#3 = RMul(one1AED,varAcc1D9F);
          real mult1DAF#1 = RMul(coeff1AF2,prod1DAC);
          real mult1DB0#2 = RMul(coeff1AEA,prod1DAB);
          real mult1DB1#1 = RMul(coeff1AF2,prod1DA9);
          real mult1DB2#2 = RMul(coeff1AEF,prod1DA7);
          real mult1DB3#2 = RMul(coeff1AEA,prod1DA4);
          real sum1DB4#1 = RAdd(mult1DB2,mult1DB3);
          real sum1DB5#1 = RAdd(mult1DB1,sum1DB4);
          real sum1DB6#1 = RAdd(mult1DB0,sum1DB5);
          real sum1DB7#1 = RAdd(mult1DAF,sum1DB6);
          real sum1DB8#1 = RAdd(mult1AF8,sum1DB7);
          real mult1DBB#1 = RMul(coeff1B04,prod1DA9);
          real sum1DBC#1 = RAdd(mult1DBB,mult1DB3);
          real mult1DBE#1 = RMul(coeff1B04,prod1DAC);
          real sum1DBF#1 = RAdd(mult1DBE,mult1DB0);
          real mult1DC2#1 = RMul(coeff1AEF,prod1DAC);
          real mult1DC3#1 = RMul(coeff1B0B,prod1DAB);
          real mult1DC4#2 = RMul(coeff1B0B,prod1DA7);
          real sum1DC5#1 = RAdd(mult1DC3,mult1DC4);
          real sum1DC6#1 = RAdd(mult1DC2,sum1DC5);
          real mult1DC8#1 = RMul(coeff1AEF,prod1DA9);
          real mult1DC9#1 = RMul(coeff1B0B,prod1DA4);
          real sum1DCA#1 = RAdd(mult1DC4,mult1DC9);
          real sum1DCB#1 = RAdd(mult1DC8,sum1DCA);
          tensor[6] intermediateCons1DCD#1 = <tensor[6]>[sum1DB8,sum1DBC,sum1DBF,mult1DB2,sum1DC6,sum1DCB];
          real compositionl1DFF#1 = VDot<6>(dofs1ACC,intermediateCons1DCD);
          real op1_e3_l_111E02#1 = RSub(compositionl1DFF,_t1813);
          real op1_e3_l_121E05#1 = RMul(gradEps1D89,_t1D59);
          real f11E08#4 = RSub(op1_e3_l_111E02,op1_e3_l_121E05);
          string _t1E0B#1 = "=========================\n";
          Print<[string]>(_t1E0B);
          string _t1E0E#1 = "Ui/Vi:";
          string _t1E10#2 = "/";
          Print<[string,int,string,int,string]>(_t1E0E,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t1E13#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1E13,cc17E4,_t1D8D);
          string _t1E16#1 = "hess:";
          real basisEval1E21#2 = RMul(coeff1B6D,prod1AF7);
          real basisEval1E23#2 = RMul(coeff1B0B,prod1AF7);
          tensor[6] intermediateCons1E24#1 = <tensor[6]>[mult1B6E,mult1B6E,basisEval1B6A,basisEval1B6A,basisEval1B6A,basisEval1E21];
          tensor[6] intermediateCons1E25#1 = <tensor[6]>[mult1B6E,basisEval1B6A,basisEval1B6A,mult1B6E,basisEval1E23,basisEval1E23];
          tensor[6] intermediateCons1E26#1 = <tensor[6]>[mult1B6E,basisEval1B6A,mult1B6E,basisEval1B6A,basisEval1E21,basisEval1B6A];
          real vdot1E3E#2 = VDot<6>(dofs1ACC,intermediateCons1E24);
          real vdot1E40#4 = VDot<6>(dofs1ACC,intermediateCons1E25);
          real vdot1E45#2 = VDot<6>(dofs1ACC,intermediateCons1E26);
          real r1E56#1 = RMul(vdot1E3E,r1D29);
          real r1E59#1 = RMul(vdot1E40,r1D2E);
          real r1E5A#2 = RAdd(r1E56,r1E59);
          real r1E5C#1 = RMul(vdot1E3E,r1D2B);
          real r1E5E#1 = RMul(vdot1E40,r1D30);
          real r1E5F#2 = RAdd(r1E5C,r1E5E);
          real r1E62#1 = RMul(vdot1E40,r1D29);
          real r1E64#1 = RMul(vdot1E45,r1D2E);
          real r1E65#2 = RAdd(r1E62,r1E64);
          real r1E66#1 = RMul(vdot1E40,r1D2B);
          real r1E67#1 = RMul(vdot1E45,r1D30);
          real r1E68#2 = RAdd(r1E66,r1E67);
          real r1E93#1 = RMul(dof_load1BD4,basisEval1B6A);
          real r1E9A#1 = RAdd(r1E93,r1C27);
          real r1E9B#4 = RAdd(r1E9A,r1C21);
          real r1EB8#1 = RMul(dof_load1BD5,basisEval1B6A);
          real r1EBD#1 = RAdd(r1EB8,r1C36);
          real r1EBE#4 = RAdd(r1EBD,r1C32);
          real r1F16#2 = RMul(basisEval1B6A,r1E9B);
          real r1F19#1 = RMul(coeff1B04,r1EBE);
          real r1F1A#3 = RAdd(r1F16,r1F19);
          real r1F2E#1 = RMul(one1AED,r1E9B);
          real r1F2F#2 = RMul(basisEval1B6A,r1EBE);
          real r1F30#3 = RAdd(r1F2E,r1F2F);
          real r1F6B#2 = RMul(basisEval1B6A,r1F1A);
          real r1F6E#1 = RMul(coeff1B04,r1F1A);
          real r1F6F#2 = RAdd(r1F6B,r1F6E);
          tensor[2] tensor1F75#1 = <tensor[2]>[r1F6F,r1F6F];
          real r1F77#2 = RMul(basisEval1B6A,r1F30);
          real r1F79#1 = RMul(coeff1B04,r1F30);
          real r1F7A#2 = RAdd(r1F77,r1F79);
          tensor[2] tensor1F80#1 = <tensor[2]>[r1F7A,r1F7A];
          real r1F83#1 = RMul(one1AED,r1F1A);
          real r1F85#2 = RAdd(r1F83,r1F6B);
          tensor[2] tensor1F89#1 = <tensor[2]>[r1F85,r1F85];
          real r1F8A#1 = RMul(one1AED,r1F30);
          real r1F8C#2 = RAdd(r1F8A,r1F77);
          tensor[2] tensor1F90#1 = <tensor[2]>[r1F8C,r1F8C];
          real r2051#1 = RMul(one1AED,r1EBE);
          real r2052#1 = RAdd(r1F16,r2051);
          real r205A#1 = RMul(coeff1B04,r1E9B);
          real r205C#1 = RAdd(r205A,r1F2F);
          real r207B#1 = RMul(r1CE5,r1E9B);
          real r207E#1 = RMul(r1CE9,r1EBE);
          real r207F#2 = RAdd(r207B,r207E);
          tensor[2] op1_e3_l_412078#1 = <tensor[2]>[r207F,r207F];
          real r2096#1 = RMul(r1C23,r2052);
          real r2099#1 = RMul(r1C34,r205C);
          real r209A#2 = RAdd(r2096,r2099);
          tensor[2] op1_e3_l_422093#1 = <tensor[2]>[r209A,r209A];
          tensor[2] op1_e3_l_4420AE#2 = VAdd<2>(op1_e3_l_412078,op1_e3_l_422093);
          tensor[2] binopV20B3#1 = VScale<2>(op1_e3_l_141D24,tensor1F75);
          tensor[2] binopV20B5#1 = VScale<2>(op1_e3_l_141D24,tensor1F80);
          tensor[2] binopV20B8#1 = VScale<2>(op1_e3_l_141D24,tensor1F89);
          tensor[2] binopV20BA#1 = VScale<2>(op1_e3_l_141D24,tensor1F90);
          real r20CA#4 = TensorIndex<tensor[2],[0]>(op1_e3_l_4420AE);
          real r20CB#1 = RMul(r1CFE,r20CA);
          real r20CC#4 = TensorIndex<tensor[2],[1]>(op1_e3_l_4420AE);
          real r20CD#1 = RMul(r1CFE,r20CC);
          tensor[2] tensor20CE#1 = <tensor[2]>[r20CB,r20CD];
          real r20D0#1 = RMul(r1D03,r20CA);
          real r20D1#1 = RMul(r1D03,r20CC);
          tensor[2] tensor20D2#1 = <tensor[2]>[r20D0,r20D1];
          real r20D5#1 = RMul(r1D08,r20CA);
          real r20D6#1 = RMul(r1D08,r20CC);
          tensor[2] tensor20D7#1 = <tensor[2]>[r20D5,r20D6];
          real r20D9#1 = RMul(r1D0B,r20CA);
          real r20DA#1 = RMul(r1D0B,r20CC);
          tensor[2] tensor20DB#1 = <tensor[2]>[r20D9,r20DA];
          tensor[2] binopV20F6#2 = VSub<2>(binopV20B3,tensor20CE);
          tensor[2] binopV20F9#2 = VSub<2>(binopV20B5,tensor20D2);
          tensor[2] binopV20FD#2 = VSub<2>(binopV20B8,tensor20D7);
          tensor[2] binopV2100#2 = VSub<2>(binopV20BA,tensor20DB);
          real op1_e3_l_562112#8 = RMul(op1_e3_l_141D24,op1_e3_l_141D24);
          real r2116#1 = VIndex<2,0>(binopV20F6);
          real r2117#1 = RDiv(r2116,op1_e3_l_562112);
          real r2118#1 = VIndex<2,1>(binopV20F6);
          real r2119#1 = RDiv(r2118,op1_e3_l_562112);
          real r211B#1 = VIndex<2,0>(binopV20F9);
          real r211C#1 = RDiv(r211B,op1_e3_l_562112);
          real r211D#1 = VIndex<2,1>(binopV20F9);
          real r211E#1 = RDiv(r211D,op1_e3_l_562112);
          real r2121#1 = VIndex<2,0>(binopV20FD);
          real r2122#1 = RDiv(r2121,op1_e3_l_562112);
          real r2123#1 = VIndex<2,1>(binopV20FD);
          real r2124#1 = RDiv(r2123,op1_e3_l_562112);
          real r2126#1 = VIndex<2,0>(binopV2100);
          real r2127#1 = RDiv(r2126,op1_e3_l_562112);
          real r2128#1 = VIndex<2,1>(binopV2100);
          real r2129#1 = RDiv(r2128,op1_e3_l_562112);
          real r2147#1 = RMul(r1D29,r1E5A);
          real r214A#1 = RMul(r1D2E,r1E65);
          real r214B#1 = RAdd(r2147,r214A);
          real r214D#1 = RMul(r1D29,r1E5F);
          real r214F#1 = RMul(r1D2E,r1E68);
          real r2150#1 = RAdd(r214D,r214F);
          tensor[2] tensor2151#1 = <tensor[2]>[r214B,r2150];
          real r2153#1 = RMul(r1D2B,r1E5A);
          real r2155#1 = RMul(r1D30,r1E65);
          real r2156#1 = RAdd(r2153,r2155);
          real r2157#1 = RMul(r1D2B,r1E5F);
          real r2158#1 = RMul(r1D30,r1E68);
          real r2159#1 = RAdd(r2157,r2158);
          tensor[2] tensor215A#1 = <tensor[2]>[r2156,r2159];
          real r2176#1 = RMul(vdot1BA9,r2117);
          real r2179#1 = RMul(vdot1BAB,r2122);
          real r217A#1 = RAdd(r2176,r2179);
          real r217C#1 = RMul(vdot1BA9,r2119);
          real r217E#1 = RMul(vdot1BAB,r2124);
          real r217F#1 = RAdd(r217C,r217E);
          tensor[2] tensor2180#1 = <tensor[2]>[r217A,r217F];
          real r2182#1 = RMul(vdot1BA9,r211C);
          real r2184#1 = RMul(vdot1BAB,r2127);
          real r2185#1 = RAdd(r2182,r2184);
          real r2187#1 = RMul(vdot1BA9,r211E);
          real r2189#1 = RMul(vdot1BAB,r2129);
          real r218A#1 = RAdd(r2187,r2189);
          tensor[2] tensor218B#1 = <tensor[2]>[r2185,r218A];
          tensor[2] v21A9#3 = VAdd<2>(tensor2151,tensor2180);
          tensor[2] v21AC#3 = VAdd<2>(tensor215A,tensor218B);
          tensor[2,2] _t21A6#1 = <tensor[2,2]>[v21A9,v21AC];
          string _t21B5#1 = "norm:";
          real vdot21B9#1 = VDot<2>(v21A9,v21A9);
          real vdot21BB#1 = VDot<2>(v21AC,v21AC);
          real op1_e3_l_11521B7#1 = RAdd(vdot21B9,vdot21BB);
          real _t21C2#1 = Sqrt(op1_e3_l_11521B7);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1E16,_t21A6,_t1D8D,_t21B5,_t21C2,_t1D8D);
          string _t21C6#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t21C6,_t1D3E,_t1D8D);
          string _t21C9#1 = "vals:";
          tensor[2] _t21CB#2 = <tensor[2]>[f01B4C,f11E08];
          Print<[string,tensor[2],string]>(_t21C9,_t21CB,_t1D8D);
          bool _t21D0#2 = GT<real>(f01B4C,basisEval1B6A);
          if _t21D0 then goto JOIN21D5 else goto ASSIGN24F0
        JOIN21D5:  preds = [COND21D2,JOIN22A1]
          int _t21D3#1 = phi(_t17F6,_t21D4)
          bool _t21D6#2 = GT<real>(f11E08,basisEval1B6A);
          if _t21D6 then goto JOIN21DB else goto ASSIGN24F2
        JOIN21DB:  preds = [COND21D8,JOIN2299]
          int _t21D9#1 = phi(_t17F6,_t21DA)
          int _t21DC#1 = IMul(_t21D3,_t21D9);
          int _t21DE#5 = 0;
          bool _t21E0#1 = GT<int>(_t21DC,_t21DE);
          bool _t21E2#1 = BNot(_t21E0);
          if _t21E2 then goto COND21E5 else goto ASSIGN227F
        COND21E5:  preds = [COND21E4]
          if _t21D0 then goto JOIN21E8 else goto ASSIGN24F4
        JOIN21E8:  preds = [COND21E5,JOIN227B]
          int _t21E6#1 = phi(_t17F6,_t21E7)
          if _t21D6 then goto JOIN21EC else goto ASSIGN24F5
        JOIN21EC:  preds = [COND21E9,JOIN2275]
          int _t21EA#1 = phi(_t17F6,_t21EB)
          int _t21ED#1 = IMul(_t21E6,_t21EA);
          bool _t21EF#1 = EQ<int>(_t21ED,_t21DE);
          if _t21EF then goto ASSIGN21F3 else goto JOIN21F5
        ASSIGN21F3:  preds = [COND21F1]
          string _t21F2#1 = "Warn: 0 update\n";
          Print<[string]>(_t21F2);
          goto JOIN21F5
        JOIN21F5:  preds = [MASSIGN21F4,COND21F1]
          string _t21F6#1 = "update with interval:";
          Print<[string,real,string]>(_t21F6,gradEps1D89,_t1D8D);
          string _t21F9#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t21F9,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t21FC#1 = "Count:";
          Print<[string,int,string]>(_t21FC,count17EE,_t1D8D);
          int count21FF#1 = IAdd(count17EE,_t17F6);
          int totalCount2201#1 = IAdd(totalCount17F0,_t17F6);
          string _t2203#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t2203,_t21CB,_t1D8D);
          string _t2206#1 = "New interval:";
          real _t2208#3 = RAdd(s17E0,gradEps1D89);
          tensor[2] _t220B#2 = <tensor[2]>[s17E0,_t2208];
          Print<[string,tensor[2],string]>(_t2206,_t220B,_t1D8D);
          tensor[2][] intervals220E#1 = Append<tensor[2]>(intervals17E8,_t220B);
          tensor[3] op1_e3_l_52210#1 = VScale<3>(_t2208,rayVec17D4);
          tensor[3] _t2213#1 = VAdd<3>(rayOrig17D6,op1_e3_l_52210);
          tensor[2,3] _t2216#1 = <tensor[2,3]>[rayStart1800,_t2213];
          tensor[2,3][] sints2218#1 = Append<tensor[2,3]>(sints17EA,_t2216);
          femData:MeshCell[] newCells221A#1 = Append<femData:MeshCell>(newCells17EC,cc17E4);
          goto JOIN2223
        JOIN2223:  preds = [ASSIGN221B,ASSIGN2292]
          int totalCount221C#3 = phi(totalCount2201,totalCount17F0)
          int count221D#2 = phi(count21FF,count17EE)
          femData:MeshCell[] newCells221E#3 = phi(newCells221A,newCells17EC)
          tensor[2,3][] sints221F#2 = phi(sints2218,sints17EA)
          tensor[2][] intervals2220#3 = phi(intervals220E,intervals17E8)
          real s2221#3 = phi(_t2208,s2222)
          bool _t2224#1 = GTE<real>(s2221,e17E2);
          if _t2224 then goto ASSIGN2228 else goto JOIN2255
        ASSIGN2228:  preds = [COND2226]
          int itter2227#4 = IAdd(itter17DC,_t17F6);
          bool _t2229#1 = GTE<int>(itter2227,len17DA);
          if _t2229 then goto ASSIGN222D else goto ASSIGN2263
        ASSIGN222D:  preds = [COND222B]
          string _t222C#1 = "TotalCount:";
          Print<[string,int,string]>(_t222C,totalCount221C,_t1D8D);
          string _t222F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t222F,intervals2220,_t1D8D);
          string _t2232#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t2232,newCells221E,_t1D8D);
          string _t2235#1 = ";";
          string _t2237#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui17F2,_t2235,vi17F4,_t2237);
          self.itter = itter2227;
          self.s = s2221;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count221D;
          self.totalCount = totalCount221C;
          stabilize
          goto JOIN224D
        JOIN224D:  preds = [*STABILIZE2241,ASSIGN226F]
          int count2242#1 = phi(_t21DE)
          femData:FuncCell fc2243#1 = phi(_t2244)
          femData:MeshCell cc2245#1 = phi(cc2246)
          real e2247#1 = phi(e2248)
          real s2249#1 = phi(s224A)
          tensor[2] interval224B#1 = phi(interval224C)
          goto JOIN2255
        JOIN2255:  preds = [JOIN224D,COND2226]
          int count224E#1 = phi(count2242,count221D)
          femData:FuncCell fc224F#1 = phi(fc2243,fc17E6)
          femData:MeshCell cc2250#1 = phi(cc2245,cc17E4)
          real e2251#1 = phi(e2247,e17E2)
          real s2252#1 = phi(s2249,s2221)
          tensor[2] interval2253#1 = phi(interval224B,interval17DE)
          int itter2254#1 = phi(itter2227,itter17DC)
          self.itter = itter2254;
          self.interval = interval2253;
          self.s = s2252;
          self.e = e2251;
          self.cc = cc2250;
          self.fc = fc224F;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count224E;
          self.totalCount = totalCount221C;
          active
        ASSIGN2263:  preds = [COND222B]
          string _t2262#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t2262);
          int _t2265#2 = IAdd(offset17D8,itter2227);
          tensor[2] interval224C#3 = Subscript<tensor[2][]>(times17D0,_t2265);
          int _t2268#1 = Subscript<int[]>(cells17D2,_t2265);
          femData:MeshCell cc2246#2 = Subscript<femData:MeshCell[]>(0cell_a17CC,_t2268);
          real s224A#1 = VIndex<2,0>(interval224C);
          real e2248#1 = VIndex<2,1>(interval224C);
          int _t226D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc2246);
          femData:FuncCell _t2244#1 = LoadFem<femData:FuncCell>(c17CE,_t226D);
          goto JOIN224D
        ASSIGN24F5:  preds = [COND21E9]
          bool _t2270#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2270 then goto ASSIGN2274 else goto JOIN2275
        ASSIGN2274:  preds = [COND2272]
          int _t2273#1 = -1;
          goto JOIN2275
        JOIN2275:  preds = [ASSIGN2274,COND2272]
          int _t21EB#1 = phi(_t2273,_t21DE)
          goto JOIN21EC
        ASSIGN24F4:  preds = [COND21E5]
          bool _t2276#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t2276 then goto ASSIGN227A else goto JOIN227B
        ASSIGN227A:  preds = [COND2278]
          int _t2279#1 = -1;
          goto JOIN227B
        JOIN227B:  preds = [ASSIGN227A,COND2278]
          int _t21E7#1 = phi(_t2279,_t21DE)
          goto JOIN21E8
        ASSIGN227F:  preds = [COND21E4]
          real _t227E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_122280#1 = Abs<real>(f01B4C);
          real op1_e3_l_132283#1 = RMul(coeff1AEA,_t227E);
          real _t2286#1 = RDiv(op1_e3_l_122280,op1_e3_l_132283);
          real epsUpdate2289#2 = Max<real>(gradEps1D89,_t2286);
          string _t228B#1 = "update L:";
          Print<[string,real,string]>(_t228B,epsUpdate2289,_t1D8D);
          string _t228E#1 = "update G:";
          Print<[string,real,string]>(_t228E,gradEps1D89,_t1D8D);
          real s2222#1 = RAdd(s17E0,epsUpdate2289);
          goto JOIN2223
        ASSIGN24F2:  preds = [COND21D8]
          bool _t2293#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2293 then goto ASSIGN2297 else goto ASSIGN229A
        ASSIGN2297:  preds = [COND2295]
          int _t2296#1 = -1;
          goto JOIN2299
        JOIN2299:  preds = [ASSIGN2297,ASSIGN229A]
          int _t21DA#1 = phi(_t2296,_t2298)
          goto JOIN21DB
        ASSIGN229A:  preds = [COND2295]
          int _t2298#1 = 0;
          goto JOIN2299
        ASSIGN24F0:  preds = [COND21D2]
          bool _t229B#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t229B then goto ASSIGN229F else goto ASSIGN22A2
        ASSIGN229F:  preds = [COND229D]
          int _t229E#1 = -1;
          goto JOIN22A1
        JOIN22A1:  preds = [ASSIGN229F,ASSIGN22A2]
          int _t21D4#1 = phi(_t229E,_t22A0)
          goto JOIN21D5
        ASSIGN22A2:  preds = [COND229D]
          int _t22A0#1 = 0;
          goto JOIN22A1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY22A3:  preds = []
      int iresU22A4#1 = globals.iresU1557;
      int iresV22A6#1 = globals.iresV1558;
      int _t22A8#2 = 0;
      int _t22AA#2 = 1;
      int _t22AC#1 = ISub(iresU22A4,_t22AA);
      int[] _t22AE#1 = Range(_t22A8,_t22AC);
    FOREACH22B1:  preds = [ASSIGN22AF,NEXT22BA]
      foreach (vi22B0 in _t22AE) on exit goto RETURN22BB
      int _t22B2#1 = ISub(iresV22A6,_t22AA);
      int[] _t22B4#1 = Range(_t22A8,_t22B2);
    FOREACH22B7:  preds = [ASSIGN22B5,NEXT22B9]
      foreach (ui22B6 in _t22B4) on exit goto NEXT22BA
      new ray(ui22B6,vi22B0);
      goto FOREACH22B7
    NEXT22BA:  preds = [FOREACH22B7]
      goto FOREACH22B1
    RETURN22BB:  preds = [FOREACH22B1]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a154E (a) = <no-default>
  input 0b0450_intermedateGlobal154F (b) = <no-default>
  input 0c0452_intermedateGlobal1550 (c) = <no-default>
  input isoval1551 (isoval) = <default>
  input thick1552 (thick) = <default>
  input camEye1553 (camEye) = <default>
  input camAt1554 (camAt) = <default>
  input camUp1555 (camUp) = <default>
  input camFOV1556 (camFOV) = <default>
  input iresU1557 (iresU) = <default>
  input iresV1558 (iresV) = <default>
  input camNear1559 (camNear) = <default>
  input camFar155A (camFar) = <default>
  input refStep155B (refStep) = <default>
  input rayStep155C (rayStep) = <default>
  input lightVsp155D (lightVsp) = <default>
  input phongKa155E (phongKa) = <default>
  input phongKd155F (phongKd) = <default>
  input debug1560 (debug) = <default>
  input debugU1561 (debugU) = <default>
  input debugV1562 (debugV) = <default>
  input eps1563 (eps) = <default>
  input indecies1564 (indecies) = <no-default>
  input times1565 (times) = <no-default>
  input cells1566 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a1567
  global femData:FemFunc c1568
  global tensor[3] camU1569
  global tensor[3] camV156A
  global real camVmax156B
  global real camUmax156C
  global tensor[3] rayVec156D
## functions
  function femData:MeshPos _0A3A_msh_newtonInverse1816 (tensor[2] pos1817#2, int cellInt1818#2, femData:Mesh mesh1819#12) {
    ENTRY181A:  preds = []
      real _t181B#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn181D#1 = <tensor[2]>[_t181B,_t181B];
      int _t181F#1 = 0;
      int _t1821#1 = 16;
      int[] _t1823#1 = Range(_t181F,_t1821);
    FOREACH1826:  preds = [ASSIGN1824,NEXT1A7D]
      foreach (itter1825 in _t1823) on exit goto ASSIGN1A82
        tensor[2] xn199D#3 = phi(xn181D,xn1A11)
      int ilit1828#1 = 3;
      int mulRes1829#3 = IMul(cellInt1818,ilit1828);
      int idx182C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,mulRes1829);
      int ilit182D#4 = 1;
      int addRes182E#1 = IAdd(mulRes1829,ilit182D);
      int idx182F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes182E);
      int ilit1830#4 = 2;
      int addRes1831#1 = IAdd(mulRes1829,ilit1830);
      int idx1832#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1819,addRes1831);
      int mulRes1845#2 = IMul(ilit1830,idx182C);
      int addRes1848#1 = IAdd(ilit182D,mulRes1845);
      real dof_load1849#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1845);
      real dof_load184A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1848);
      int mulRes184D#2 = IMul(ilit1830,idx182F);
      int addRes184F#1 = IAdd(ilit182D,mulRes184D);
      real dof_load1850#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes184D);
      real dof_load1851#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes184F);
      int mulRes1854#2 = IMul(ilit1830,idx1832);
      int addRes1856#1 = IAdd(ilit182D,mulRes1854);
      real dof_load1857#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,mulRes1854);
      real dof_load1858#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1819,addRes1856);
      real coeff1878#8 = -0.1e1;
      real one1879#15 = 0.1e1;
      real prod187A#2 = RMul(one1879,one1879);
      real basisEval187B#2 = RMul(coeff1878,prod187A);
      real basisEval187C#5 = RMul(one1879,prod187A);
      real basisEval187D#12 = 0.e0;
      real r1890#2 = RMul(dof_load1849,basisEval187B);
      real r1893#1 = RMul(dof_load1850,basisEval187C);
      real r1896#1 = RMul(dof_load1857,basisEval187D);
      real r1897#1 = RAdd(r1890,r1893);
      real r1898#3 = RAdd(r1897,r1896);
      real r189C#1 = RMul(dof_load1850,basisEval187D);
      real r189E#1 = RMul(dof_load1857,basisEval187C);
      real r189F#1 = RAdd(r1890,r189C);
      real r18A0#3 = RAdd(r189F,r189E);
      real r18A3#2 = RMul(dof_load184A,basisEval187B);
      real r18A5#1 = RMul(dof_load1851,basisEval187C);
      real r18A7#1 = RMul(dof_load1858,basisEval187D);
      real r18A8#1 = RAdd(r18A3,r18A5);
      real r18A9#3 = RAdd(r18A8,r18A7);
      real r18AB#1 = RMul(dof_load1851,basisEval187D);
      real r18AC#1 = RMul(dof_load1858,basisEval187C);
      real r18AD#1 = RAdd(r18A3,r18AB);
      real r18AE#3 = RAdd(r18AD,r18AC);
      real r18D7#1 = RMul(basisEval187D,r1898);
      real r18DA#1 = RMul(coeff1878,r18A9);
      real r18DB#2 = RAdd(r18D7,r18DA);
      real r18DD#2 = RMul(basisEval187D,r18A0);
      real r18DF#1 = RMul(coeff1878,r18AE);
      real r18E0#2 = RAdd(r18DD,r18DF);
      real r18E3#1 = RMul(one1879,r1898);
      real r18E4#1 = RMul(basisEval187D,r18A9);
      real r18E5#2 = RAdd(r18E3,r18E4);
      real r18E6#1 = RMul(one1879,r18A0);
      real r18E7#2 = RMul(basisEval187D,r18AE);
      real r18E8#2 = RAdd(r18E6,r18E7);
      tensor[2] probe_l_121901#1 = <tensor[2]>[r1898,r18A9];
      real r1959#1 = RMul(one1879,r18AE);
      real r195A#1 = RAdd(r18DD,r1959);
      real r195C#1 = RMul(coeff1878,r18A0);
      real r195E#1 = RAdd(r195C,r18E7);
      tensor[2] op1_e3_l_141953#1 = <tensor[2]>[r195A,r195E];
      real r196F#1 = RMul(basisEval187D,r18DB);
      real r1972#1 = RMul(coeff1878,r18E0);
      real r1973#1 = RAdd(r196F,r1972);
      real r1975#1 = RMul(basisEval187D,r18E5);
      real r1977#1 = RMul(coeff1878,r18E8);
      real r1978#1 = RAdd(r1975,r1977);
      real r197B#1 = RMul(one1879,r18DB);
      real r197C#1 = RMul(basisEval187D,r18E0);
      real r197D#1 = RAdd(r197B,r197C);
      real r197E#1 = RMul(one1879,r18E5);
      real r197F#1 = RMul(basisEval187D,r18E8);
      real r1980#1 = RAdd(r197E,r197F);
      real op1_e3_l_161999#4 = VDot<2>(probe_l_121901,op1_e3_l_141953);
      real varAcc199E#1 = VIndex<2,0>(xn199D);
      real varAcc199F#1 = VIndex<2,1>(xn199D);
      real prod19A3#2 = RMul(varAcc199E,one1879);
      real prod19A5#2 = RMul(one1879,varAcc199F);
      real mult19A8#1 = RMul(coeff1878,prod19A5);
      real mult19A9#1 = RMul(coeff1878,prod19A3);
      real sum19AA#1 = RAdd(mult19A8,mult19A9);
      real sum19AB#2 = RAdd(basisEval187C,sum19AA);
      real basisEval19AD#2 = RMul(one1879,prod19A3);
      real basisEval19AE#2 = RMul(one1879,prod19A5);
      real r19C6#1 = RMul(dof_load1849,sum19AB);
      real r19C9#1 = RMul(dof_load1850,basisEval19AD);
      real r19CC#1 = RMul(dof_load1857,basisEval19AE);
      real r19CD#1 = RAdd(r19C6,r19C9);
      real r19CE#1 = RAdd(r19CD,r19CC);
      real r19D0#1 = RMul(dof_load184A,sum19AB);
      real r19D2#1 = RMul(dof_load1851,basisEval19AD);
      real r19D4#1 = RMul(dof_load1858,basisEval19AE);
      real r19D5#1 = RAdd(r19D0,r19D2);
      real r19D6#1 = RAdd(r19D5,r19D4);
      tensor[2] probe_l_1719C3#1 = <tensor[2]>[r19CE,r19D6];
      real r19EE#1 = RDiv(r1973,op1_e3_l_161999);
      real r19F0#1 = RDiv(r1978,op1_e3_l_161999);
      tensor[2] tensor19F1#1 = <tensor[2]>[r19EE,r19F0];
      real r19F3#1 = RDiv(r197D,op1_e3_l_161999);
      real r19F5#1 = RDiv(r1980,op1_e3_l_161999);
      tensor[2] tensor19F6#1 = <tensor[2]>[r19F3,r19F5];
      tensor[2] op1_e3_l_191A03#2 = VSub<2>(probe_l_1719C3,pos1817);
      real vdot1A08#1 = VDot<2>(tensor19F1,op1_e3_l_191A03);
      real vdot1A0A#1 = VDot<2>(tensor19F6,op1_e3_l_191A03);
      tensor[2] op1_e3_l_201A06#3 = <tensor[2]>[vdot1A08,vdot1A0A];
      tensor[2] xn1A11#4 = VSub<2>(xn199D,op1_e3_l_201A06);
      real _t1A14#2 = 0.1e-7;
      real _t1A16#1 = RMul(_t1A14,_t1A14);
      real _t1A50#1 = VDot<2>(op1_e3_l_201A06,op1_e3_l_201A06);
      bool _t1A53#1 = GTE<real>(_t1A16,_t1A50);
      if _t1A53 then goto ASSIGN1A59 else goto JOIN1A7C
    ASSIGN1A59:  preds = [COND1A55]
      real _t1A58#3 = 0.1e-8;
      real _t1A5A#1 = RAdd(one1879,_t1A58);
      tensor[2] _t1A5D#1 = <tensor[2]>[one1879,one1879];
      real _t1A5F#1 = VDot<2>(_t1A5D,xn1A11);
      bool _t1A62#1 = GT<real>(_t1A5A,_t1A5F);
      tensor[2] _t1A64#1 = <tensor[2]>[_t1A58,_t1A58];
      tensor[2] _t1A66#2 = VAdd<2>(_t1A64,xn1A11);
      real _t1A69#1 = VIndex<2,0>(_t1A66);
      real _t1A6B#2 = -0.e0;
      bool _t1A6D#1 = GT<real>(_t1A69,_t1A6B);
      real _t1A6F#1 = VIndex<2,1>(_t1A66);
      bool _t1A71#1 = GT<real>(_t1A6F,_t1A6B);
      bool _t1A73#1 = BAnd(_t1A6D,_t1A71);
      bool _t1A75#1 = BAnd(_t1A62,_t1A73);
      if _t1A75 then goto ASSIGN1A79 else goto ASSIGN1A7F
    ASSIGN1A79:  preds = [COND1A77]
      femData:MeshPos _t1A78#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1819,cellInt1818,xn1A11,pos1817);
      return _t1A78
      goto JOIN1A7B
    JOIN1A7B:  preds = [*RETURN(_t1A78)1A7A,*RETURN(_t1A7E)1A80]
      goto JOIN1A7C
    JOIN1A7C:  preds = [*JOIN1A7B,COND1A55]
      goto FOREACH1826
    ASSIGN1A7F:  preds = [COND1A77]
      femData:MeshPos _t1A7E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A7E
      goto JOIN1A7B
    ASSIGN1A82:  preds = [FOREACH1826]
      femData:MeshPos _t1A81#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1819);
      return _t1A81
}
## input initialization
  ENTRY156E:  preds = []
    real isoval156F#1 = 0.2e0;
    globals.isoval1551 = isoval156F;
    real thick1572#1 = 0.7e-1;
    globals.thick1552 = thick1572;
    real _t1575#1 = -0.5e0;
    real _t1577#5 = 0.5e0;
    tensor[3] camEye1579#1 = <tensor[3]>[_t1575,_t1577,_t1577];
    globals.camEye1553 = camEye1579;
    tensor[3] camAt157C#1 = <tensor[3]>[_t1577,_t1577,_t1577];
    globals.camAt1554 = camAt157C;
    real _t157F#2 = 0.e0;
    real _t1581#2 = 0.1e1;
    tensor[3] camUp1583#2 = <tensor[3]>[_t157F,_t157F,_t1581];
    globals.camUp1555 = camUp1583;
    real camFOV1586#1 = 0.137e2;
    globals.camFOV1556 = camFOV1586;
    int iresU1589#2 = 10;
    globals.iresU1557 = iresU1589;
    globals.iresV1558 = iresU1589;
    real camNear158D#1 = -0.2e1;
    globals.camNear1559 = camNear158D;
    real camFar1590#1 = 0.5e1;
    globals.camFar155A = camFar1590;
    globals.refStep155B = _t1581;
    real rayStep1594#1 = 0.1e-1;
    globals.rayStep155C = rayStep1594;
    globals.lightVsp155D = camUp1583;
    real phongKa1598#1 = 0.1e0;
    globals.phongKa155E = phongKa1598;
    real phongKd159B#1 = 0.9e0;
    globals.phongKd155F = phongKd159B;
    bool debug159E#1 = false;
    globals.debug1560 = debug159E;
    int debugU15A1#1 = 8;
    globals.debugU1561 = debugU15A1;
    int debugV15A4#1 = 2;
    globals.debugV1562 = debugV15A4;
    real eps15A7#1 = 0.1e-8;
    globals.eps1563 = eps15A7;
    return
## global-variable initialization
  ENTRY15AB:  preds = []
    femData:Mesh a15AC#3 = globals.a154E;
    femData:Space 0b0450_intermedateGlobal15AE#1 = globals.0b0450_intermedateGlobal154F;
    femData:FemFunc 0c0452_intermedateGlobal15B0#1 = globals.0c0452_intermedateGlobal1550;
    tensor[3] camEye15B2#1 = globals.camEye1553;
    tensor[3] camAt15B4#1 = globals.camAt1554;
    tensor[3] camUp15B6#3 = globals.camUp1555;
    real camFOV15B8#1 = globals.camFOV1556;
    int iresU15BA#1 = globals.iresU1557;
    int iresV15BC#1 = globals.iresV1558;
    int _t15BE#1 = 0;
    int _t15C0#1 = 1;
    int _t15C2#1 = ExtractFemItem<int,NumCell(Mesh)>(a15AC);
    int _t15C4#1 = ISub(_t15C2,_t15C0);
    int[] _t15C6#1 = Range(_t15BE,_t15C4);
    femData:MeshCell[] _t15C8#1 = <femData:MeshCell[]>{};
  FOREACH15CB:  preds = [ASSIGN15C9,NEXT15D1]
    foreach (_t15CA in _t15C6) on exit goto GASSIGN15D2
      femData:MeshCell[] _t15CF#2 = phi(_t15C8,_t15CE)
    femData:MeshCell _t15CC#1 = LoadFem<femData:MeshCell>(a15AC,_t15CA);
    femData:MeshCell[] _t15CE#1 = Append<femData:MeshCell>(_t15CF,_t15CC);
    goto FOREACH15CB
  GASSIGN15D2:  preds = [FOREACH15CB]
    globals.0cell_a1567 = _t15CF;
    femData:Space b15D3#1 = LoadFem<femData:Space>(0b0450_intermedateGlobal15AE,a15AC);
    femData:FemFunc c15D5#1 = LoadFem<femData:FemFunc>(0c0452_intermedateGlobal15B0,b15D3);
    globals.c1568 = c15D5;
    tensor[3] op1_e3_l_415D8#9 = VSub<3>(camAt15B4,camEye15B2);
    real op1_e3_l_615DB#1 = VDot<3>(op1_e3_l_415D8,op1_e3_l_415D8);
    real op1_e3_l_715DE#3 = Sqrt(op1_e3_l_615DB);
    real realLit15E2#8 = 0.1e1;
    real op1_e3_l_915E1#6 = RDiv(realLit15E2,op1_e3_l_715DE);
    tensor[3] camN15E6#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_415D8);
    real realLit15EA#6 = 0.e0;
    real r15EB#3 = TensorIndex<tensor[3],[0]>(camUp15B6);
    real r15EC#3 = RMul(realLit15EA,r15EB);
    real r15ED#3 = TensorIndex<tensor[3],[1]>(camUp15B6);
    real r15EE#3 = RMul(realLit15EA,r15ED);
    real r15EF#3 = TensorIndex<tensor[3],[2]>(camUp15B6);
    real r15F0#5 = RMul(realLit15EA,r15EF);
    real r15F1#3 = RAdd(r15EC,r15EE);
    real r15F2#3 = RAdd(r15F1,r15F0);
    real r15F4#1 = RMul(realLit15E2,r15EF);
    real r15F5#1 = RAdd(r15F1,r15F4);
    real realLit15F6#6 = -0.1e1;
    real r15F7#1 = RMul(realLit15F6,r15ED);
    real r15F8#1 = RAdd(r15EC,r15F7);
    real r15F9#1 = RAdd(r15F8,r15F0);
    tensor[3] tensor15FA#1 = <tensor[3]>[r15F2,r15F5,r15F9];
    real r15FB#1 = RMul(realLit15F6,r15EF);
    real r15FC#1 = RAdd(r15F1,r15FB);
    real r15FD#1 = RMul(realLit15E2,r15EB);
    real r15FE#1 = RAdd(r15FD,r15EE);
    real r15FF#1 = RAdd(r15FE,r15F0);
    tensor[3] tensor1600#1 = <tensor[3]>[r15FC,r15F2,r15FF];
    real r1601#1 = RMul(realLit15E2,r15ED);
    real r1602#1 = RAdd(r15EC,r1601);
    real r1603#1 = RAdd(r1602,r15F0);
    real r1604#1 = RMul(realLit15F6,r15EB);
    real r1605#1 = RAdd(r1604,r15EE);
    real r1606#1 = RAdd(r1605,r15F0);
    tensor[3] tensor1607#1 = <tensor[3]>[r1603,r1606,r15F2];
    real vdot162A#1 = VDot<3>(op1_e3_l_415D8,tensor15FA);
    real vdot162C#1 = VDot<3>(op1_e3_l_415D8,tensor1600);
    real vdot162E#1 = VDot<3>(op1_e3_l_415D8,tensor1607);
    tensor[3] op1_e3_l_171628#6 = <tensor[3]>[vdot162A,vdot162C,vdot162E];
    real op1_e3_l_341637#1 = VDot<3>(op1_e3_l_171628,op1_e3_l_171628);
    real r163B#1 = RMul(op1_e3_l_915E1,op1_e3_l_915E1);
    real op1_e3_l_35163A#1 = RMul(r163B,op1_e3_l_341637);
    real op1_e3_l_36163F#1 = Sqrt(op1_e3_l_35163A);
    tensor[3] op1_e3_l_371642#1 = VScale<3>(op1_e3_l_915E1,op1_e3_l_171628);
    real op1_e3_l_381645#2 = RDiv(realLit15E2,op1_e3_l_36163F);
    tensor[3] camU164A#1 = VScale<3>(op1_e3_l_381645,op1_e3_l_371642);
    globals.camU1569 = camU164A;
    real r1650#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_415D8);
    real r1651#3 = RMul(realLit15EA,r1650);
    real r1652#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_415D8);
    real r1653#3 = RMul(realLit15EA,r1652);
    real r1654#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_415D8);
    real r1655#5 = RMul(realLit15EA,r1654);
    real r1656#3 = RAdd(r1651,r1653);
    real r1657#3 = RAdd(r1656,r1655);
    real r1659#1 = RMul(realLit15E2,r1654);
    real r165A#1 = RAdd(r1656,r1659);
    real r165C#1 = RMul(realLit15F6,r1652);
    real r165D#1 = RAdd(r1651,r165C);
    real r165E#1 = RAdd(r165D,r1655);
    tensor[3] tensor165F#1 = <tensor[3]>[r1657,r165A,r165E];
    real r1660#1 = RMul(realLit15F6,r1654);
    real r1661#1 = RAdd(r1656,r1660);
    real r1662#1 = RMul(realLit15E2,r1650);
    real r1663#1 = RAdd(r1662,r1653);
    real r1664#1 = RAdd(r1663,r1655);
    tensor[3] tensor1665#1 = <tensor[3]>[r1661,r1657,r1664];
    real r1666#1 = RMul(realLit15E2,r1652);
    real r1667#1 = RAdd(r1651,r1666);
    real r1668#1 = RAdd(r1667,r1655);
    real r1669#1 = RMul(realLit15F6,r1650);
    real r166A#1 = RAdd(r1669,r1653);
    real r166B#1 = RAdd(r166A,r1655);
    tensor[3] tensor166C#1 = <tensor[3]>[r1668,r166B,r1657];
    real vdot168F#1 = VDot<3>(op1_e3_l_171628,tensor165F);
    real vdot1691#1 = VDot<3>(op1_e3_l_171628,tensor1665);
    real vdot1693#1 = VDot<3>(op1_e3_l_171628,tensor166C);
    tensor[3] op1_e3_l_47168D#1 = <tensor[3]>[vdot168F,vdot1691,vdot1693];
    tensor[3] op1_e3_l_50169C#3 = VScale<3>(op1_e3_l_915E1,op1_e3_l_47168D);
    real r16A0#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_50169C);
    real r16A1#3 = RMul(op1_e3_l_381645,op1_e3_l_915E1);
    real r16A2#1 = RMul(r16A1,r16A0);
    real r16A3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_50169C);
    real r16A4#1 = RMul(r16A1,r16A3);
    real r16A5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_50169C);
    real r16A6#1 = RMul(r16A1,r16A5);
    tensor[3] camV169F#1 = <tensor[3]>[r16A2,r16A4,r16A6];
    globals.camV156A = camV169F;
    real _t16B1#1 = 0.314159265358979323846264338327950288e1;
    real _t16B3#1 = 0.36e3;
    real op1_e3_l_516B5#1 = RMul(camFOV15B8,_t16B1);
    real op1_e3_l_616B8#1 = RDiv(op1_e3_l_516B5,_t16B3);
    real op1_e3_l_1016BB#2 = Tan(op1_e3_l_616B8);
    real camVmax16BE#1 = RMul(op1_e3_l_1016BB,op1_e3_l_715DE);
    globals.camVmax156B = camVmax16BE;
    real _t16C2#1 = IntToReal(iresU15BA);
    real _t16C4#1 = IntToReal(iresV15BC);
    real r16C7#1 = RMul(_t16C2,op1_e3_l_1016BB);
    real op1_e3_l_1416C6#1 = RMul(r16C7,op1_e3_l_715DE);
    real camUmax16CB#1 = RDiv(op1_e3_l_1416C6,_t16C4);
    globals.camUmax156C = camUmax16CB;
    globals.rayVec156D = camN15E6;
    return
## strand
  strand ray (int ui16D1#3, int vi16D2#4)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output tensor[2,3][] sints;
      output femData:MeshCell[] newCells;
      int count;
      int totalCount;
      int ui;
      int vi;
    state init
      ENTRY16E7:  preds = []
        femData:MeshCell[] 0cell_a16E8#1 = globals.0cell_a1567;
        femData:FemFunc c16EA#1 = globals.c1568;
        tensor[3] camEye16EC#1 = globals.camEye1553;
        int iresU16EE#2 = globals.iresU1557;
        int iresV16F0#3 = globals.iresV1558;
        int[] indecies16F2#2 = globals.indecies1564;
        tensor[2][] times16F4#1 = globals.times1565;
        tensor[3] camU16F6#1 = globals.camU1569;
        tensor[3] camV16F8#1 = globals.camV156A;
        real camVmax16FA#2 = globals.camVmax156B;
        real camUmax16FC#2 = globals.camUmax156C;
        real _t16FE#4 = -0.5e0;
        real _t1700#1 = IntToReal(ui16D1);
        real _t1702#1 = IntToReal(iresU16EE);
        real _t1704#2 = 0.5e0;
        real op1_e3_l_61706#1 = RSub(_t1702,_t1704);
        real op1_e3_l_71709#1 = RSub(_t1700,_t16FE);
        real op1_e3_l_8170C#1 = RSub(op1_e3_l_61706,_t16FE);
        real op1_e3_l_9170F#2 = RNeg(camUmax16FC);
        real op1_e3_l_101712#1 = RDiv(op1_e3_l_71709,op1_e3_l_8170C);
        real op1_e3_l_111715#1 = RSub(camUmax16FC,op1_e3_l_9170F);
        real op1_e3_l_131718#1 = RMul(op1_e3_l_101712,op1_e3_l_111715);
        real rayU171B#2 = RAdd(op1_e3_l_9170F,op1_e3_l_131718);
        real _t171E#1 = IntToReal(vi16D2);
        real _t1720#1 = IntToReal(iresV16F0);
        real op1_e3_l_61722#1 = RSub(_t1720,_t1704);
        real op1_e3_l_71725#1 = RSub(_t171E,_t16FE);
        real op1_e3_l_81728#1 = RSub(op1_e3_l_61722,_t16FE);
        real op1_e3_l_9172B#2 = RNeg(camVmax16FA);
        real op1_e3_l_10172E#1 = RDiv(op1_e3_l_71725,op1_e3_l_81728);
        real op1_e3_l_111731#1 = RSub(camVmax16FA,op1_e3_l_9172B);
        real op1_e3_l_131734#1 = RMul(op1_e3_l_10172E,op1_e3_l_111731);
        real rayV1737#2 = RAdd(op1_e3_l_9172B,op1_e3_l_131734);
        tensor[3] op1_e3_l_321749#2 = VScale<3>(rayU171B,camU16F6);
        tensor[3] op1_e3_l_33174C#2 = VScale<3>(rayV1737,camV16F8);
        tensor[3] UV174F#1 = VAdd<3>(op1_e3_l_321749,op1_e3_l_33174C);
        tensor[3] v1753#1 = VAdd<3>(camEye16EC,op1_e3_l_321749);
        tensor[3] rayOrig1752#1 = VAdd<3>(v1753,op1_e3_l_33174C);
        int _t1757#2 = IMul(ui16D1,iresV16F0);
        int _t1759#1 = IAdd(_t1757,vi16D2);
        int offset175B#3 = Subscript<int[]>(indecies16F2,_t1759);
        int _t175D#1 = IMul(iresU16EE,iresV16F0);
        int _t175F#1 = IAdd(_t175D,_t1757);
        int _t1761#1 = IAdd(_t175F,vi16D2);
        int len1763#1 = Subscript<int[]>(indecies16F2,_t1761);
        int itter1765#4 = 0;
        tensor[2] interval1769#3 = Subscript<tensor[2][]>(times16F4,offset175B);
        real s176B#1 = VIndex<2,0>(interval1769);
        real e176D#1 = VIndex<2,1>(interval1769);
        femData:MeshCell cc176F#2 = Subscript<femData:MeshCell[]>(0cell_a16E8,itter1765);
        int _t1771#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc176F);
        femData:FuncCell _t1773#1 = LoadFem<femData:FuncCell>(c16EA,_t1771);
        tensor[2][0] _t1775#1 = <tensor[2][0]>{};
        tensor[2][] _t1777#1 = MkDynamic<tensor[2],0>(_t1775);
        tensor[2,3][0] _t1779#1 = <tensor[2,3][0]>{};
        tensor[2,3][] _t177B#1 = MkDynamic<tensor[2,3],0>(_t1779);
        femData:MeshCell[0] _t177D#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t177F#1 = MkDynamic<femData:MeshCell,0>(_t177D);
        self.rayU = rayU171B;
        self.rayV = rayV1737;
        self.UV = UV174F;
        self.rayOrig = rayOrig1752;
        self.offset = offset175B;
        self.len = len1763;
        self.itter = itter1765;
        self.idx = offset175B;
        self.interval = interval1769;
        self.s = s176B;
        self.e = e176D;
        self.cc = cc176F;
        self.fc = _t1773;
        self.intervals = _t1777;
        self.sints = _t177B;
        self.newCells = _t177F;
        self.count = itter1765;
        self.totalCount = itter1765;
        self.ui = ui16D1;
        self.vi = vi16D2;
        return
    end state init
    method start
        ENTRY1796:  preds = []
          femData:MeshCell[] 0cell_a1797#1 = globals.0cell_a1567;
          femData:FemFunc c1799#1 = globals.c1568;
          bool debug179B#1 = globals.debug1560;
          int debugU179D#1 = globals.debugU1561;
          int debugV179F#1 = globals.debugV1562;
          int[] cells17A1#1 = globals.cells1566;
          int len17A3#1 = self.len;
          int idx17A5#1 = self.idx;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug179B then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,debugU179D);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN17CA
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN17CA]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          int _t17B8#1 = 0;
          bool _t17BA#1 = EQ<int>(len17A3,_t17B8);
          if _t17BA then goto STABILIZE17BD else goto JOIN17BE
        STABILIZE17BD:  preds = [COND17BC]
          stabilize
          goto JOIN17BE
        JOIN17BE:  preds = [*STABILIZE17BD,COND17BC]
          int _t17BF#1 = Subscript<int[]>(cells17A1,idx17A5);
          femData:MeshCell cc17C1#2 = Subscript<femData:MeshCell[]>(0cell_a1797,_t17BF);
          int _t17C3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17C1);
          femData:FuncCell _t17C5#1 = LoadFem<femData:FuncCell>(c1799,_t17C3);
          self.cc = cc17C1;
          self.fc = _t17C5;
          active
        ASSIGN17CA:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,debugV179F);
          goto JOIN17B3
    end start
    method update
        ENTRY17CB:  preds = []
          femData:MeshCell[] 0cell_a17CC#1 = globals.0cell_a1567;
          femData:FemFunc c17CE#1 = globals.c1568;
          tensor[2][] times17D0#1 = globals.times1565;
          int[] cells17D2#1 = globals.cells1566;
          tensor[3] rayVec17D4#5 = globals.rayVec156D;
          tensor[3] rayOrig17D6#2 = self.rayOrig;
          int offset17D8#1 = self.offset;
          int len17DA#2 = self.len;
          int itter17DC#2 = self.itter;
          tensor[2] interval17DE#1 = self.interval;
          real s17E0#5 = self.s;
          real e17E2#3 = self.e;
          femData:MeshCell cc17E4#6 = self.cc;
          femData:FuncCell fc17E6#3 = self.fc;
          tensor[2][] intervals17E8#2 = self.intervals;
          tensor[2,3][] sints17EA#2 = self.sints;
          femData:MeshCell[] newCells17EC#2 = self.newCells;
          int count17EE#3 = self.count;
          int totalCount17F0#2 = self.totalCount;
          int ui17F2#3 = self.ui;
          int vi17F4#3 = self.vi;
          int _t17F6#19 = 1;
          bool _t17F8#1 = LT<int>(len17DA,_t17F6);
          if _t17F8 then goto STABILIZE17FB else goto JOIN17FC
        STABILIZE17FB:  preds = [COND17FA]
          stabilize
          goto JOIN17FC
        JOIN17FC:  preds = [*STABILIZE17FB,COND17FA]
          tensor[3] op1_e3_l_317FD#1 = VScale<3>(s17E0,rayVec17D4);
          tensor[3] rayStart1800#6 = VAdd<3>(rayOrig17D6,op1_e3_l_317FD);
          real _t1803#1 = VIndex<3,0>(rayStart1800);
          real _t1805#1 = VIndex<3,1>(rayStart1800);
          tensor[2] project1807#2 = <tensor[2]>[_t1803,_t1805];
          femData:FemFunc _t1809#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc17E6);
          femData:Space _t180B#6 = ExtractFem<femData:Space,femData:FemFunc>(_t1809);
          int _t180D#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc17E6);
          femData:Mesh _t180F#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc17E4);
          int _t1811#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc17E4);
          real _t1813#2 = VIndex<3,2>(rayStart1800);
          femData:MeshPos callNewtonPos1815#1 = _0A3A_msh_newtonInverse1816 (project1807,_t1811,_t180F);
          tensor[2] refPos1A85#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1815);
          int ilit1A88#1 = 6;
          int mulRes1A89#6 = IMul(_t180D,ilit1A88);
          int idx1A8C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,mulRes1A89);
          int addRes1A8E#1 = IAdd(mulRes1A89,_t17F6);
          int idx1A8F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A8E);
          int ilit1A90#5 = 2;
          int addRes1A91#1 = IAdd(mulRes1A89,ilit1A90);
          int idx1A92#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A91);
          int ilit1A93#2 = 3;
          int addRes1A94#1 = IAdd(mulRes1A89,ilit1A93);
          int idx1A95#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A94);
          int ilit1A96#1 = 4;
          int addRes1A97#1 = IAdd(mulRes1A89,ilit1A96);
          int idx1A98#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A97);
          int ilit1A99#1 = 5;
          int addRes1A9A#1 = IAdd(mulRes1A89,ilit1A99);
          int idx1A9B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t180B,addRes1A9A);
          int mulRes1AB7#1 = IMul(_t17F6,idx1A8C);
          int mulRes1AB9#1 = IMul(_t17F6,idx1A8F);
          int mulRes1ABC#1 = IMul(_t17F6,idx1A92);
          int mulRes1ABF#1 = IMul(_t17F6,idx1A95);
          int mulRes1AC2#1 = IMul(_t17F6,idx1A98);
          int mulRes1AC5#1 = IMul(_t17F6,idx1A9B);
          real dof1AC6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB7);
          real dof1AC7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AB9);
          real dof1AC8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABC);
          real dof1AC9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1ABF);
          real dof1ACA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC2);
          real dof1ACB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t1809,mulRes1AC5);
          tensor[6] dofs1ACC#8 = <tensor[6]>[dof1AC6,dof1AC7,dof1AC8,dof1AC9,dof1ACA,dof1ACB];
          real varAcc1AE8#4 = VIndex<2,0>(refPos1A85);
          real varAcc1AE9#4 = VIndex<2,1>(refPos1A85);
          real coeff1AEA#5 = 0.2e1;
          real prod21AEC#1 = RMul(varAcc1AE8,varAcc1AE8);
          real one1AED#20 = 0.1e1;
          real prod1AEE#2 = RMul(prod21AEC,one1AED);
          real coeff1AEF#7 = 0.4e1;
          real prod1AF1#2 = RMul(varAcc1AE8,varAcc1AE9);
          real coeff1AF2#5 = -0.3e1;
          real prod1AF3#5 = RMul(varAcc1AE8,one1AED);
          real prod21AF4#1 = RMul(varAcc1AE9,varAcc1AE9);
          real prod1AF5#2 = RMul(one1AED,prod21AF4);
          real prod1AF6#5 = RMul(one1AED,varAcc1AE9);
          real prod1AF7#6 = RMul(one1AED,one1AED);
          real mult1AF8#6 = RMul(one1AED,prod1AF7);
          real mult1AF9#1 = RMul(coeff1AF2,prod1AF6);
          real mult1AFA#2 = RMul(coeff1AEA,prod1AF5);
          real mult1AFB#1 = RMul(coeff1AF2,prod1AF3);
          real mult1AFC#2 = RMul(coeff1AEF,prod1AF1);
          real mult1AFD#2 = RMul(coeff1AEA,prod1AEE);
          real sum1AFE#1 = RAdd(mult1AFC,mult1AFD);
          real sum1AFF#1 = RAdd(mult1AFB,sum1AFE);
          real sum1B00#1 = RAdd(mult1AFA,sum1AFF);
          real sum1B01#1 = RAdd(mult1AF9,sum1B00);
          real sum1B02#1 = RAdd(mult1AF8,sum1B01);
          real coeff1B04#14 = -0.1e1;
          real mult1B05#1 = RMul(coeff1B04,prod1AF3);
          real sum1B06#1 = RAdd(mult1B05,mult1AFD);
          real mult1B08#1 = RMul(coeff1B04,prod1AF6);
          real sum1B09#1 = RAdd(mult1B08,mult1AFA);
          real coeff1B0B#9 = -0.4e1;
          real mult1B0C#4 = RMul(coeff1AEF,prod1AF6);
          real mult1B0D#1 = RMul(coeff1B0B,prod1AF5);
          real mult1B0E#2 = RMul(coeff1B0B,prod1AF1);
          real sum1B0F#1 = RAdd(mult1B0D,mult1B0E);
          real sum1B10#1 = RAdd(mult1B0C,sum1B0F);
          real mult1B12#4 = RMul(coeff1AEF,prod1AF3);
          real mult1B13#1 = RMul(coeff1B0B,prod1AEE);
          real sum1B14#1 = RAdd(mult1B0E,mult1B13);
          real sum1B15#1 = RAdd(mult1B12,sum1B14);
          tensor[6] intermediateCons1B17#1 = <tensor[6]>[sum1B02,sum1B06,sum1B09,mult1AFC,sum1B10,sum1B15];
          real compositionl1B49#1 = VDot<6>(dofs1ACC,intermediateCons1B17);
          real f01B4C#5 = RSub(compositionl1B49,_t1813);
          real _t1B4F#1 = VIndex<3,0>(rayVec17D4);
          real _t1B51#1 = VIndex<3,1>(rayVec17D4);
          tensor[2] _t1B53#2 = <tensor[2]>[_t1B4F,_t1B51];
          real mult1B60#1 = RMul(coeff1AF2,prod1AF7);
          real sum1B63#1 = RAdd(mult1B0C,mult1B12);
          real sum1B64#2 = RAdd(mult1B60,sum1B63);
          real mult1B67#4 = RMul(coeff1B04,prod1AF7);
          real sum1B68#1 = RAdd(mult1B67,mult1B12);
          real basisEval1B6A#34 = 0.e0;
          real basisEval1B6C#2 = RMul(coeff1B0B,prod1AF6);
          real coeff1B6D#3 = -0.8e1;
          real mult1B6E#8 = RMul(coeff1AEF,prod1AF7);
          real mult1B6F#1 = RMul(coeff1B6D,prod1AF3);
          real sum1B70#1 = RAdd(basisEval1B6C,mult1B6F);
          real sum1B71#1 = RAdd(mult1B6E,sum1B70);
          real sum1B74#1 = RAdd(mult1B67,mult1B0C);
          real mult1B76#1 = RMul(coeff1B6D,prod1AF6);
          real mult1B77#2 = RMul(coeff1B0B,prod1AF3);
          real sum1B78#1 = RAdd(mult1B76,mult1B77);
          real sum1B79#1 = RAdd(mult1B6E,sum1B78);
          tensor[6] intermediateCons1B7B#1 = <tensor[6]>[sum1B64,sum1B68,basisEval1B6A,mult1B0C,basisEval1B6C,sum1B71];
          tensor[6] intermediateCons1B7C#1 = <tensor[6]>[sum1B64,basisEval1B6A,sum1B74,mult1B12,sum1B79,mult1B77];
          real vdot1BA9#6 = VDot<6>(dofs1ACC,intermediateCons1B7B);
          real vdot1BAB#6 = VDot<6>(dofs1ACC,intermediateCons1B7C);
          int mulRes1BB4#3 = IMul(_t1811,ilit1A93);
          int idx1BB7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,mulRes1BB4);
          int addRes1BB9#1 = IAdd(mulRes1BB4,_t17F6);
          int idx1BBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BB9);
          int addRes1BBC#1 = IAdd(mulRes1BB4,ilit1A90);
          int idx1BBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t180F,addRes1BBC);
          int mulRes1BD0#2 = IMul(ilit1A90,idx1BB7);
          int addRes1BD3#1 = IAdd(_t17F6,mulRes1BD0);
          real dof_load1BD4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD0);
          real dof_load1BD5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BD3);
          int mulRes1BD8#2 = IMul(ilit1A90,idx1BBA);
          int addRes1BDA#1 = IAdd(_t17F6,mulRes1BD8);
          real dof_load1BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BD8);
          real dof_load1BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BDA);
          int mulRes1BDF#2 = IMul(ilit1A90,idx1BBD);
          int addRes1BE1#1 = IAdd(_t17F6,mulRes1BDF);
          real dof_load1BE2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,mulRes1BDF);
          real dof_load1BE3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t180F,addRes1BE1);
          real r1C1B#2 = RMul(dof_load1BD4,mult1B67);
          real r1C1E#1 = RMul(dof_load1BDB,mult1AF8);
          real r1C21#2 = RMul(dof_load1BE2,basisEval1B6A);
          real r1C22#1 = RAdd(r1C1B,r1C1E);
          real r1C23#4 = RAdd(r1C22,r1C21);
          real r1C27#2 = RMul(dof_load1BDB,basisEval1B6A);
          real r1C29#1 = RMul(dof_load1BE2,mult1AF8);
          real r1C2A#1 = RAdd(r1C1B,r1C27);
          real r1C2B#3 = RAdd(r1C2A,r1C29);
          real r1C2E#2 = RMul(dof_load1BD5,mult1B67);
          real r1C30#1 = RMul(dof_load1BDC,mult1AF8);
          real r1C32#2 = RMul(dof_load1BE3,basisEval1B6A);
          real r1C33#1 = RAdd(r1C2E,r1C30);
          real r1C34#4 = RAdd(r1C33,r1C32);
          real r1C36#2 = RMul(dof_load1BDC,basisEval1B6A);
          real r1C37#1 = RMul(dof_load1BE3,mult1AF8);
          real r1C38#1 = RAdd(r1C2E,r1C36);
          real r1C39#3 = RAdd(r1C38,r1C37);
          real r1C62#1 = RMul(basisEval1B6A,r1C23);
          real r1C65#1 = RMul(coeff1B04,r1C34);
          real r1C66#2 = RAdd(r1C62,r1C65);
          real r1C68#2 = RMul(basisEval1B6A,r1C2B);
          real r1C6A#1 = RMul(coeff1B04,r1C39);
          real r1C6B#2 = RAdd(r1C68,r1C6A);
          real r1C6E#1 = RMul(one1AED,r1C23);
          real r1C6F#1 = RMul(basisEval1B6A,r1C34);
          real r1C70#2 = RAdd(r1C6E,r1C6F);
          real r1C71#1 = RMul(one1AED,r1C2B);
          real r1C72#2 = RMul(basisEval1B6A,r1C39);
          real r1C73#2 = RAdd(r1C71,r1C72);
          tensor[2] probe_l_101C8C#1 = <tensor[2]>[r1C23,r1C34];
          real r1CE4#1 = RMul(one1AED,r1C39);
          real r1CE5#2 = RAdd(r1C68,r1CE4);
          real r1CE7#1 = RMul(coeff1B04,r1C2B);
          real r1CE9#2 = RAdd(r1CE7,r1C72);
          tensor[2] op1_e3_l_121CDE#1 = <tensor[2]>[r1CE5,r1CE9];
          real r1CFA#1 = RMul(basisEval1B6A,r1C66);
          real r1CFD#1 = RMul(coeff1B04,r1C6B);
          real r1CFE#3 = RAdd(r1CFA,r1CFD);
          real r1D00#1 = RMul(basisEval1B6A,r1C70);
          real r1D02#1 = RMul(coeff1B04,r1C73);
          real r1D03#3 = RAdd(r1D00,r1D02);
          real r1D06#1 = RMul(one1AED,r1C66);
          real r1D07#1 = RMul(basisEval1B6A,r1C6B);
          real r1D08#3 = RAdd(r1D06,r1D07);
          real r1D09#1 = RMul(one1AED,r1C70);
          real r1D0A#1 = RMul(basisEval1B6A,r1C73);
          real r1D0B#3 = RAdd(r1D09,r1D0A);
          real op1_e3_l_141D24#10 = VDot<2>(probe_l_101C8C,op1_e3_l_121CDE);
          real r1D29#5 = RDiv(r1CFE,op1_e3_l_141D24);
          real r1D2B#5 = RDiv(r1D03,op1_e3_l_141D24);
          real r1D2E#5 = RDiv(r1D08,op1_e3_l_141D24);
          real r1D30#5 = RDiv(r1D0B,op1_e3_l_141D24);
          real r1D41#1 = RMul(vdot1BA9,r1D29);
          real r1D44#1 = RMul(vdot1BAB,r1D2E);
          real r1D45#1 = RAdd(r1D41,r1D44);
          real r1D47#1 = RMul(vdot1BA9,r1D2B);
          real r1D49#1 = RMul(vdot1BAB,r1D30);
          real r1D4A#1 = RAdd(r1D47,r1D49);
          tensor[2] _t1D3E#3 = <tensor[2]>[r1D45,r1D4A];
          real _t1D59#2 = VIndex<3,2>(rayVec17D4);
          int _t1D5B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc17E4);
          real _t1D5D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_201D7A#1 = VDot<2>(_t1B53,_t1D3E);
          real op1_e3_l_211D7D#1 = RSub(op1_e3_l_201D7A,_t1D59);
          real op1_e3_l_221D80#1 = Abs<real>(op1_e3_l_211D7D);
          real _t1D83#1 = RDiv(op1_e3_l_221D80,_t1D5D);
          real _t1D86#1 = RSub(e17E2,s17E0);
          real gradEps1D89#6 = Min<real>(_t1D83,_t1D86);
          string _t1D8B#1 = "hmmmm:";
          string _t1D8D#18 = "\n";
          Print<[string,tensor[2],string]>(_t1D8B,_t1D3E,_t1D8D);
          string _t1D90#1 = "fc dofs:";
          Print<[string,tensor[6],string]>(_t1D90,dofs1ACC,_t1D8D);
          tensor[2] op1_e3_l_31D93#1 = VScale<2>(gradEps1D89,_t1B53);
          tensor[2] _t1D96#1 = VAdd<2>(project1807,op1_e3_l_31D93);
          femData:MeshPos callNewtonPos1D99#1 = _0A3A_msh_newtonInverse1816 (_t1D96,_t1811,_t180F);
          tensor[2] refPos1D9B#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1D99);
          real varAcc1D9E#4 = VIndex<2,0>(refPos1D9B);
          real varAcc1D9F#4 = VIndex<2,1>(refPos1D9B);
          real prod21DA2#1 = RMul(varAcc1D9E,varAcc1D9E);
          real prod1DA4#2 = RMul(prod21DA2,one1AED);
          real prod1DA7#2 = RMul(varAcc1D9E,varAcc1D9F);
          real prod1DA9#3 = RMul(varAcc1D9E,one1AED);
          real prod21DAA#1 = RMul(varAcc1D9F,varAcc1D9F);
          real prod1DAB#2 = RMul(one1AED,prod21DAA);
          real prod1DAC#3 = RMul(one1AED,varAcc1D9F);
          real mult1DAF#1 = RMul(coeff1AF2,prod1DAC);
          real mult1DB0#2 = RMul(coeff1AEA,prod1DAB);
          real mult1DB1#1 = RMul(coeff1AF2,prod1DA9);
          real mult1DB2#2 = RMul(coeff1AEF,prod1DA7);
          real mult1DB3#2 = RMul(coeff1AEA,prod1DA4);
          real sum1DB4#1 = RAdd(mult1DB2,mult1DB3);
          real sum1DB5#1 = RAdd(mult1DB1,sum1DB4);
          real sum1DB6#1 = RAdd(mult1DB0,sum1DB5);
          real sum1DB7#1 = RAdd(mult1DAF,sum1DB6);
          real sum1DB8#1 = RAdd(mult1AF8,sum1DB7);
          real mult1DBB#1 = RMul(coeff1B04,prod1DA9);
          real sum1DBC#1 = RAdd(mult1DBB,mult1DB3);
          real mult1DBE#1 = RMul(coeff1B04,prod1DAC);
          real sum1DBF#1 = RAdd(mult1DBE,mult1DB0);
          real mult1DC2#1 = RMul(coeff1AEF,prod1DAC);
          real mult1DC3#1 = RMul(coeff1B0B,prod1DAB);
          real mult1DC4#2 = RMul(coeff1B0B,prod1DA7);
          real sum1DC5#1 = RAdd(mult1DC3,mult1DC4);
          real sum1DC6#1 = RAdd(mult1DC2,sum1DC5);
          real mult1DC8#1 = RMul(coeff1AEF,prod1DA9);
          real mult1DC9#1 = RMul(coeff1B0B,prod1DA4);
          real sum1DCA#1 = RAdd(mult1DC4,mult1DC9);
          real sum1DCB#1 = RAdd(mult1DC8,sum1DCA);
          tensor[6] intermediateCons1DCD#1 = <tensor[6]>[sum1DB8,sum1DBC,sum1DBF,mult1DB2,sum1DC6,sum1DCB];
          real compositionl1DFF#1 = VDot<6>(dofs1ACC,intermediateCons1DCD);
          real op1_e3_l_111E02#1 = RSub(compositionl1DFF,_t1813);
          real op1_e3_l_121E05#1 = RMul(gradEps1D89,_t1D59);
          real f11E08#4 = RSub(op1_e3_l_111E02,op1_e3_l_121E05);
          string _t1E0B#1 = "=========================\n";
          Print<[string]>(_t1E0B);
          string _t1E0E#1 = "Ui/Vi:";
          string _t1E10#2 = "/";
          Print<[string,int,string,int,string]>(_t1E0E,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t1E13#1 = "Cell:";
          Print<[string,femData:MeshCell,string]>(_t1E13,cc17E4,_t1D8D);
          string _t1E16#1 = "hess:";
          real basisEval1E21#2 = RMul(coeff1B6D,prod1AF7);
          real basisEval1E23#2 = RMul(coeff1B0B,prod1AF7);
          tensor[6] intermediateCons1E24#1 = <tensor[6]>[mult1B6E,mult1B6E,basisEval1B6A,basisEval1B6A,basisEval1B6A,basisEval1E21];
          tensor[6] intermediateCons1E25#1 = <tensor[6]>[mult1B6E,basisEval1B6A,basisEval1B6A,mult1B6E,basisEval1E23,basisEval1E23];
          tensor[6] intermediateCons1E26#1 = <tensor[6]>[mult1B6E,basisEval1B6A,mult1B6E,basisEval1B6A,basisEval1E21,basisEval1B6A];
          real vdot1E3E#2 = VDot<6>(dofs1ACC,intermediateCons1E24);
          real vdot1E40#4 = VDot<6>(dofs1ACC,intermediateCons1E25);
          real vdot1E45#2 = VDot<6>(dofs1ACC,intermediateCons1E26);
          real r1E56#1 = RMul(vdot1E3E,r1D29);
          real r1E59#1 = RMul(vdot1E40,r1D2E);
          real r1E5A#2 = RAdd(r1E56,r1E59);
          real r1E5C#1 = RMul(vdot1E3E,r1D2B);
          real r1E5E#1 = RMul(vdot1E40,r1D30);
          real r1E5F#2 = RAdd(r1E5C,r1E5E);
          real r1E62#1 = RMul(vdot1E40,r1D29);
          real r1E64#1 = RMul(vdot1E45,r1D2E);
          real r1E65#2 = RAdd(r1E62,r1E64);
          real r1E66#1 = RMul(vdot1E40,r1D2B);
          real r1E67#1 = RMul(vdot1E45,r1D30);
          real r1E68#2 = RAdd(r1E66,r1E67);
          real r1E93#1 = RMul(dof_load1BD4,basisEval1B6A);
          real r1E9A#1 = RAdd(r1E93,r1C27);
          real r1E9B#4 = RAdd(r1E9A,r1C21);
          real r1EB8#1 = RMul(dof_load1BD5,basisEval1B6A);
          real r1EBD#1 = RAdd(r1EB8,r1C36);
          real r1EBE#4 = RAdd(r1EBD,r1C32);
          real r1F16#2 = RMul(basisEval1B6A,r1E9B);
          real r1F19#1 = RMul(coeff1B04,r1EBE);
          real r1F1A#3 = RAdd(r1F16,r1F19);
          real r1F2E#1 = RMul(one1AED,r1E9B);
          real r1F2F#2 = RMul(basisEval1B6A,r1EBE);
          real r1F30#3 = RAdd(r1F2E,r1F2F);
          real r1F6B#2 = RMul(basisEval1B6A,r1F1A);
          real r1F6E#1 = RMul(coeff1B04,r1F1A);
          real r1F6F#2 = RAdd(r1F6B,r1F6E);
          tensor[2] tensor1F75#1 = <tensor[2]>[r1F6F,r1F6F];
          real r1F77#2 = RMul(basisEval1B6A,r1F30);
          real r1F79#1 = RMul(coeff1B04,r1F30);
          real r1F7A#2 = RAdd(r1F77,r1F79);
          tensor[2] tensor1F80#1 = <tensor[2]>[r1F7A,r1F7A];
          real r1F83#1 = RMul(one1AED,r1F1A);
          real r1F85#2 = RAdd(r1F83,r1F6B);
          tensor[2] tensor1F89#1 = <tensor[2]>[r1F85,r1F85];
          real r1F8A#1 = RMul(one1AED,r1F30);
          real r1F8C#2 = RAdd(r1F8A,r1F77);
          tensor[2] tensor1F90#1 = <tensor[2]>[r1F8C,r1F8C];
          real r2051#1 = RMul(one1AED,r1EBE);
          real r2052#1 = RAdd(r1F16,r2051);
          real r205A#1 = RMul(coeff1B04,r1E9B);
          real r205C#1 = RAdd(r205A,r1F2F);
          real r207B#1 = RMul(r1CE5,r1E9B);
          real r207E#1 = RMul(r1CE9,r1EBE);
          real r207F#2 = RAdd(r207B,r207E);
          tensor[2] op1_e3_l_412078#1 = <tensor[2]>[r207F,r207F];
          real r2096#1 = RMul(r1C23,r2052);
          real r2099#1 = RMul(r1C34,r205C);
          real r209A#2 = RAdd(r2096,r2099);
          tensor[2] op1_e3_l_422093#1 = <tensor[2]>[r209A,r209A];
          tensor[2] op1_e3_l_4420AE#2 = VAdd<2>(op1_e3_l_412078,op1_e3_l_422093);
          tensor[2] binopV20B3#1 = VScale<2>(op1_e3_l_141D24,tensor1F75);
          tensor[2] binopV20B5#1 = VScale<2>(op1_e3_l_141D24,tensor1F80);
          tensor[2] binopV20B8#1 = VScale<2>(op1_e3_l_141D24,tensor1F89);
          tensor[2] binopV20BA#1 = VScale<2>(op1_e3_l_141D24,tensor1F90);
          real r20CA#4 = TensorIndex<tensor[2],[0]>(op1_e3_l_4420AE);
          real r20CB#1 = RMul(r1CFE,r20CA);
          real r20CC#4 = TensorIndex<tensor[2],[1]>(op1_e3_l_4420AE);
          real r20CD#1 = RMul(r1CFE,r20CC);
          tensor[2] tensor20CE#1 = <tensor[2]>[r20CB,r20CD];
          real r20D0#1 = RMul(r1D03,r20CA);
          real r20D1#1 = RMul(r1D03,r20CC);
          tensor[2] tensor20D2#1 = <tensor[2]>[r20D0,r20D1];
          real r20D5#1 = RMul(r1D08,r20CA);
          real r20D6#1 = RMul(r1D08,r20CC);
          tensor[2] tensor20D7#1 = <tensor[2]>[r20D5,r20D6];
          real r20D9#1 = RMul(r1D0B,r20CA);
          real r20DA#1 = RMul(r1D0B,r20CC);
          tensor[2] tensor20DB#1 = <tensor[2]>[r20D9,r20DA];
          tensor[2] binopV20F6#2 = VSub<2>(binopV20B3,tensor20CE);
          tensor[2] binopV20F9#2 = VSub<2>(binopV20B5,tensor20D2);
          tensor[2] binopV20FD#2 = VSub<2>(binopV20B8,tensor20D7);
          tensor[2] binopV2100#2 = VSub<2>(binopV20BA,tensor20DB);
          real op1_e3_l_562112#8 = RMul(op1_e3_l_141D24,op1_e3_l_141D24);
          real r2116#1 = VIndex<2,0>(binopV20F6);
          real r2117#1 = RDiv(r2116,op1_e3_l_562112);
          real r2118#1 = VIndex<2,1>(binopV20F6);
          real r2119#1 = RDiv(r2118,op1_e3_l_562112);
          real r211B#1 = VIndex<2,0>(binopV20F9);
          real r211C#1 = RDiv(r211B,op1_e3_l_562112);
          real r211D#1 = VIndex<2,1>(binopV20F9);
          real r211E#1 = RDiv(r211D,op1_e3_l_562112);
          real r2121#1 = VIndex<2,0>(binopV20FD);
          real r2122#1 = RDiv(r2121,op1_e3_l_562112);
          real r2123#1 = VIndex<2,1>(binopV20FD);
          real r2124#1 = RDiv(r2123,op1_e3_l_562112);
          real r2126#1 = VIndex<2,0>(binopV2100);
          real r2127#1 = RDiv(r2126,op1_e3_l_562112);
          real r2128#1 = VIndex<2,1>(binopV2100);
          real r2129#1 = RDiv(r2128,op1_e3_l_562112);
          real r2147#1 = RMul(r1D29,r1E5A);
          real r214A#1 = RMul(r1D2E,r1E65);
          real r214B#1 = RAdd(r2147,r214A);
          real r214D#1 = RMul(r1D29,r1E5F);
          real r214F#1 = RMul(r1D2E,r1E68);
          real r2150#1 = RAdd(r214D,r214F);
          tensor[2] tensor2151#1 = <tensor[2]>[r214B,r2150];
          real r2153#1 = RMul(r1D2B,r1E5A);
          real r2155#1 = RMul(r1D30,r1E65);
          real r2156#1 = RAdd(r2153,r2155);
          real r2157#1 = RMul(r1D2B,r1E5F);
          real r2158#1 = RMul(r1D30,r1E68);
          real r2159#1 = RAdd(r2157,r2158);
          tensor[2] tensor215A#1 = <tensor[2]>[r2156,r2159];
          real r2176#1 = RMul(vdot1BA9,r2117);
          real r2179#1 = RMul(vdot1BAB,r2122);
          real r217A#1 = RAdd(r2176,r2179);
          real r217C#1 = RMul(vdot1BA9,r2119);
          real r217E#1 = RMul(vdot1BAB,r2124);
          real r217F#1 = RAdd(r217C,r217E);
          tensor[2] tensor2180#1 = <tensor[2]>[r217A,r217F];
          real r2182#1 = RMul(vdot1BA9,r211C);
          real r2184#1 = RMul(vdot1BAB,r2127);
          real r2185#1 = RAdd(r2182,r2184);
          real r2187#1 = RMul(vdot1BA9,r211E);
          real r2189#1 = RMul(vdot1BAB,r2129);
          real r218A#1 = RAdd(r2187,r2189);
          tensor[2] tensor218B#1 = <tensor[2]>[r2185,r218A];
          tensor[2] v21A9#4 = VAdd<2>(tensor2151,tensor2180);
          tensor[2] v21AC#4 = VAdd<2>(tensor215A,tensor218B);
          real t2503#1 = VIndex<2,0>(v21A9);
          real t2504#1 = VIndex<2,1>(v21A9);
          real t2505#1 = VIndex<2,0>(v21AC);
          real t2506#1 = VIndex<2,1>(v21AC);
          tensor[2,2] _t21A6#1 = <tensor[2,2]>[t2503,t2504,t2505,t2506];
          string _t21B5#1 = "norm:";
          real vdot21B9#1 = VDot<2>(v21A9,v21A9);
          real vdot21BB#1 = VDot<2>(v21AC,v21AC);
          real op1_e3_l_11521B7#1 = RAdd(vdot21B9,vdot21BB);
          real _t21C2#1 = Sqrt(op1_e3_l_11521B7);
          Print<[string,tensor[2,2],string,string,real,string]>(_t1E16,_t21A6,_t1D8D,_t21B5,_t21C2,_t1D8D);
          string _t21C6#1 = "Grad:";
          Print<[string,tensor[2],string]>(_t21C6,_t1D3E,_t1D8D);
          string _t21C9#1 = "vals:";
          tensor[2] _t21CB#2 = <tensor[2]>[f01B4C,f11E08];
          Print<[string,tensor[2],string]>(_t21C9,_t21CB,_t1D8D);
          bool _t21D0#2 = GT<real>(f01B4C,basisEval1B6A);
          if _t21D0 then goto JOIN21D5 else goto ASSIGN24F0
        JOIN21D5:  preds = [COND21D2,JOIN22A1]
          int _t21D3#1 = phi(_t17F6,_t21D4)
          bool _t21D6#2 = GT<real>(f11E08,basisEval1B6A);
          if _t21D6 then goto JOIN21DB else goto ASSIGN24F2
        JOIN21DB:  preds = [COND21D8,JOIN2299]
          int _t21D9#1 = phi(_t17F6,_t21DA)
          int _t21DC#1 = IMul(_t21D3,_t21D9);
          int _t21DE#5 = 0;
          bool _t21E0#1 = GT<int>(_t21DC,_t21DE);
          bool _t21E2#1 = BNot(_t21E0);
          if _t21E2 then goto COND21E5 else goto ASSIGN227F
        COND21E5:  preds = [COND21E4]
          if _t21D0 then goto JOIN21E8 else goto ASSIGN24F4
        JOIN21E8:  preds = [COND21E5,JOIN227B]
          int _t21E6#1 = phi(_t17F6,_t21E7)
          if _t21D6 then goto JOIN21EC else goto ASSIGN24F5
        JOIN21EC:  preds = [COND21E9,JOIN2275]
          int _t21EA#1 = phi(_t17F6,_t21EB)
          int _t21ED#1 = IMul(_t21E6,_t21EA);
          bool _t21EF#1 = EQ<int>(_t21ED,_t21DE);
          if _t21EF then goto ASSIGN21F3 else goto JOIN21F5
        ASSIGN21F3:  preds = [COND21F1]
          string _t21F2#1 = "Warn: 0 update\n";
          Print<[string]>(_t21F2);
          goto JOIN21F5
        JOIN21F5:  preds = [MASSIGN21F4,COND21F1]
          string _t21F6#1 = "update with interval:";
          Print<[string,real,string]>(_t21F6,gradEps1D89,_t1D8D);
          string _t21F9#1 = "Pixel Ui/Vi:";
          Print<[string,int,string,int,string]>(_t21F9,ui17F2,_t1E10,vi17F4,_t1D8D);
          string _t21FC#1 = "Count:";
          Print<[string,int,string]>(_t21FC,count17EE,_t1D8D);
          int count21FF#1 = IAdd(count17EE,_t17F6);
          int totalCount2201#1 = IAdd(totalCount17F0,_t17F6);
          string _t2203#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t2203,_t21CB,_t1D8D);
          string _t2206#1 = "New interval:";
          real _t2208#3 = RAdd(s17E0,gradEps1D89);
          tensor[2] _t220B#2 = <tensor[2]>[s17E0,_t2208];
          Print<[string,tensor[2],string]>(_t2206,_t220B,_t1D8D);
          tensor[2][] intervals220E#1 = Append<tensor[2]>(intervals17E8,_t220B);
          tensor[3] op1_e3_l_52210#1 = VScale<3>(_t2208,rayVec17D4);
          tensor[3] _t2213#3 = VAdd<3>(rayOrig17D6,op1_e3_l_52210);
          real t24F6#1 = VIndex<3,0>(rayStart1800);
          real t24F7#1 = VIndex<3,1>(rayStart1800);
          real t24F8#1 = VIndex<3,2>(rayStart1800);
          real t24F9#1 = VIndex<3,0>(_t2213);
          real t24FA#1 = VIndex<3,1>(_t2213);
          real t24FB#1 = VIndex<3,2>(_t2213);
          tensor[2,3] _t2216#1 = <tensor[2,3]>[t24F6,t24F7,t24F8,t24F9,t24FA,t24FB];
          tensor[2,3][] sints2218#1 = Append<tensor[2,3]>(sints17EA,_t2216);
          femData:MeshCell[] newCells221A#1 = Append<femData:MeshCell>(newCells17EC,cc17E4);
          goto JOIN2223
        JOIN2223:  preds = [ASSIGN221B,ASSIGN2292]
          int totalCount221C#3 = phi(totalCount2201,totalCount17F0)
          int count221D#2 = phi(count21FF,count17EE)
          femData:MeshCell[] newCells221E#3 = phi(newCells221A,newCells17EC)
          tensor[2,3][] sints221F#2 = phi(sints2218,sints17EA)
          tensor[2][] intervals2220#3 = phi(intervals220E,intervals17E8)
          real s2221#3 = phi(_t2208,s2222)
          bool _t2224#1 = GTE<real>(s2221,e17E2);
          if _t2224 then goto ASSIGN2228 else goto JOIN2255
        ASSIGN2228:  preds = [COND2226]
          int itter2227#4 = IAdd(itter17DC,_t17F6);
          bool _t2229#1 = GTE<int>(itter2227,len17DA);
          if _t2229 then goto ASSIGN222D else goto ASSIGN2263
        ASSIGN222D:  preds = [COND222B]
          string _t222C#1 = "TotalCount:";
          Print<[string,int,string]>(_t222C,totalCount221C,_t1D8D);
          string _t222F#1 = "Intervals:";
          Print<[string,tensor[2][],string]>(_t222F,intervals2220,_t1D8D);
          string _t2232#1 = "Cells:";
          Print<[string,femData:MeshCell[],string]>(_t2232,newCells221E,_t1D8D);
          string _t2235#1 = ";";
          string _t2237#1 = "++++++++++++++End Pixel++++++++++++++++++\n";
          Print<[int,string,int,string]>(ui17F2,_t2235,vi17F4,_t2237);
          self.itter = itter2227;
          self.s = s2221;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count221D;
          self.totalCount = totalCount221C;
          stabilize
          goto JOIN224D
        JOIN224D:  preds = [*STABILIZE2241,ASSIGN226F]
          int count2242#1 = phi(_t21DE)
          femData:FuncCell fc2243#1 = phi(_t2244)
          femData:MeshCell cc2245#1 = phi(cc2246)
          real e2247#1 = phi(e2248)
          real s2249#1 = phi(s224A)
          tensor[2] interval224B#1 = phi(interval224C)
          goto JOIN2255
        JOIN2255:  preds = [JOIN224D,COND2226]
          int count224E#1 = phi(count2242,count221D)
          femData:FuncCell fc224F#1 = phi(fc2243,fc17E6)
          femData:MeshCell cc2250#1 = phi(cc2245,cc17E4)
          real e2251#1 = phi(e2247,e17E2)
          real s2252#1 = phi(s2249,s2221)
          tensor[2] interval2253#1 = phi(interval224B,interval17DE)
          int itter2254#1 = phi(itter2227,itter17DC)
          self.itter = itter2254;
          self.interval = interval2253;
          self.s = s2252;
          self.e = e2251;
          self.cc = cc2250;
          self.fc = fc224F;
          self.intervals = intervals2220;
          self.sints = sints221F;
          self.newCells = newCells221E;
          self.count = count224E;
          self.totalCount = totalCount221C;
          active
        ASSIGN2263:  preds = [COND222B]
          string _t2262#1 = "++++++++++++++New Cell++++++++++++++++++\n";
          Print<[string]>(_t2262);
          int _t2265#2 = IAdd(offset17D8,itter2227);
          tensor[2] interval224C#3 = Subscript<tensor[2][]>(times17D0,_t2265);
          int _t2268#1 = Subscript<int[]>(cells17D2,_t2265);
          femData:MeshCell cc2246#2 = Subscript<femData:MeshCell[]>(0cell_a17CC,_t2268);
          real s224A#1 = VIndex<2,0>(interval224C);
          real e2248#1 = VIndex<2,1>(interval224C);
          int _t226D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc2246);
          femData:FuncCell _t2244#1 = LoadFem<femData:FuncCell>(c17CE,_t226D);
          goto JOIN224D
        ASSIGN24F5:  preds = [COND21E9]
          bool _t2270#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2270 then goto ASSIGN2274 else goto JOIN2275
        ASSIGN2274:  preds = [COND2272]
          int _t2273#1 = -1;
          goto JOIN2275
        JOIN2275:  preds = [ASSIGN2274,COND2272]
          int _t21EB#1 = phi(_t2273,_t21DE)
          goto JOIN21EC
        ASSIGN24F4:  preds = [COND21E5]
          bool _t2276#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t2276 then goto ASSIGN227A else goto JOIN227B
        ASSIGN227A:  preds = [COND2278]
          int _t2279#1 = -1;
          goto JOIN227B
        JOIN227B:  preds = [ASSIGN227A,COND2278]
          int _t21E7#1 = phi(_t2279,_t21DE)
          goto JOIN21E8
        ASSIGN227F:  preds = [COND21E4]
          real _t227E#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t180F,_t1D5B);
          real op1_e3_l_122280#1 = Abs<real>(f01B4C);
          real op1_e3_l_132283#1 = RMul(coeff1AEA,_t227E);
          real _t2286#1 = RDiv(op1_e3_l_122280,op1_e3_l_132283);
          real epsUpdate2289#2 = Max<real>(gradEps1D89,_t2286);
          string _t228B#1 = "update L:";
          Print<[string,real,string]>(_t228B,epsUpdate2289,_t1D8D);
          string _t228E#1 = "update G:";
          Print<[string,real,string]>(_t228E,gradEps1D89,_t1D8D);
          real s2222#1 = RAdd(s17E0,epsUpdate2289);
          goto JOIN2223
        ASSIGN24F2:  preds = [COND21D8]
          bool _t2293#1 = LT<real>(f11E08,basisEval1B6A);
          if _t2293 then goto ASSIGN2297 else goto ASSIGN229A
        ASSIGN2297:  preds = [COND2295]
          int _t2296#1 = -1;
          goto JOIN2299
        JOIN2299:  preds = [ASSIGN2297,ASSIGN229A]
          int _t21DA#1 = phi(_t2296,_t2298)
          goto JOIN21DB
        ASSIGN229A:  preds = [COND2295]
          int _t2298#1 = 0;
          goto JOIN2299
        ASSIGN24F0:  preds = [COND21D2]
          bool _t229B#1 = LT<real>(f01B4C,basisEval1B6A);
          if _t229B then goto ASSIGN229F else goto ASSIGN22A2
        ASSIGN229F:  preds = [COND229D]
          int _t229E#1 = -1;
          goto JOIN22A1
        JOIN22A1:  preds = [ASSIGN229F,ASSIGN22A2]
          int _t21D4#1 = phi(_t229E,_t22A0)
          goto JOIN21D5
        ASSIGN22A2:  preds = [COND229D]
          int _t22A0#1 = 0;
          goto JOIN22A1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY22A3:  preds = []
      int iresU22A4#1 = globals.iresU1557;
      int iresV22A6#1 = globals.iresV1558;
      int _t22A8#2 = 0;
      int _t22AA#2 = 1;
      int _t22AC#1 = ISub(iresU22A4,_t22AA);
      int[] _t22AE#1 = Range(_t22A8,_t22AC);
    FOREACH22B1:  preds = [ASSIGN22AF,NEXT22BA]
      foreach (vi22B0 in _t22AE) on exit goto RETURN22BB
      int _t22B2#1 = ISub(iresV22A6,_t22AA);
      int[] _t22B4#1 = Range(_t22A8,_t22B2);
    FOREACH22B7:  preds = [ASSIGN22B5,NEXT22B9]
      foreach (ui22B6 in _t22B4) on exit goto NEXT22BA
      new ray(ui22B6,vi22B0);
      goto FOREACH22B7
    NEXT22BA:  preds = [FOREACH22B7]
      goto FOREACH22B1
    RETURN22BB:  preds = [FOREACH22B1]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b0450_intermedateGlobal;
input femData(FemFunc) 0c0452_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
input int[] indecies;
input tensor[2][] times;
input int[] cells;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(-0.5e0,0.5e0,0.5e0));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-8;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global femData(FemFunc) c;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] rayVec;
//***** FUNCTIONS *****
  function femData(MeshPos) _0A3A_msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_50;
    l__t_50 = <femData(MeshCell)[]>{};
    for i__t_51 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_50 = Append<femData(MeshCell),femData(MeshCell)>(l__t_50,LoadFem<femData(MeshCell)>(globals.a,i__t_51));
    }
    globals.0cell_a = l__t_50;
    globals.c = LoadFem<femData(FemFunc)>(globals.0c0452_intermedateGlobal,LoadFem<femData(Space)>(globals.0b0450_intermedateGlobal,globals.a));
    vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_53 = Sqrt(VDot<3,4>(v_52,v_52));
    real l_op1_e3_l_9_54 = RDiv(0.1e1,l_op1_e3_l_7_53);
    real l_r_55 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_56 = RMul(0.e0,l_r_55);
    real l_r_57 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_58 = RMul(0.e0,l_r_57);
    real l_r_59 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = RAdd(l_r_56,l_r_58);
    real l_r_62 = RAdd(l_r_61,l_r_60);
    vec3{4} v_63 = VEC3{4}(VDot<3,4>(v_52,VEC3{4}(l_r_62,RAdd(l_r_61,RMul(0.1e1,l_r_59)),RAdd(RAdd(l_r_56,RMul(-0.1e1,l_r_57)),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(l_r_61,RMul(-0.1e1,l_r_59)),l_r_62,RAdd(RAdd(RMul(0.1e1,l_r_55),l_r_58),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(RAdd(l_r_56,RMul(0.1e1,l_r_57)),l_r_60),RAdd(RAdd(RMul(-0.1e1,l_r_55),l_r_58),l_r_60),l_r_62)));
    real l_op1_e3_l_38_64 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_54,l_op1_e3_l_9_54),VDot<3,4>(v_63,v_63))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_64,VScale<3,4>(l_op1_e3_l_9_54,v_63)));
    real l_r_66 = VIndex<3,4,0>(v_52);
    real l_r_67 = RMul(0.e0,l_r_66);
    real l_r_68 = VIndex<3,4,1>(v_52);
    real l_r_69 = RMul(0.e0,l_r_68);
    real l_r_70 = VIndex<3,4,2>(v_52);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = RAdd(l_r_67,l_r_69);
    real l_r_73 = RAdd(l_r_72,l_r_71);
    vec3{4} v_74 = VScale<3,4>(l_op1_e3_l_9_54,VEC3{4}(VDot<3,4>(v_63,VEC3{4}(l_r_73,RAdd(l_r_72,RMul(0.1e1,l_r_70)),RAdd(RAdd(l_r_67,RMul(-0.1e1,l_r_68)),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(l_r_72,RMul(-0.1e1,l_r_70)),l_r_73,RAdd(RAdd(RMul(0.1e1,l_r_66),l_r_69),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(RAdd(l_r_67,RMul(0.1e1,l_r_68)),l_r_71),RAdd(RAdd(RMul(-0.1e1,l_r_66),l_r_69),l_r_71),l_r_73))));
    real l_r_75 = RMul(l_op1_e3_l_38_64,l_op1_e3_l_9_54);
    globals.camV = PACK(VEC3{4}(RMul(l_r_75,VIndex<3,4,0>(v_74)),RMul(l_r_75,VIndex<3,4,1>(v_74)),RMul(l_r_75,VIndex<3,4,2>(v_74))));
    real l_op1_e3_l_10_77 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_77,l_op1_e3_l_7_53);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_77),l_op1_e3_l_7_53),IntToReal(globals.iresV));
    globals.rayVec = PACK(VScale<3,4>(l_op1_e3_l_9_54,v_52));
  }
//***** STRAND *****
strand ray (int p_ui_79,int p_vi_80) {
  real rayU;
  real rayV;
  tensor[3] UV;
  tensor[3] rayOrig;
  int offset;
  int len;
  varying int itter;
  int idx;
  varying tensor[2] interval;
  varying real s;
  varying real e;
  varying femData(MeshCell) cc;
  varying femData(FuncCell) fc;
  varying output tensor[2][] intervals;
  varying output tensor[2,3][] sints;
  varying output femData(MeshCell)[] newCells;
  varying int count;
  varying int totalCount;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_81 = RNeg(globals.camUmax);
    real l_rayU_82 = RAdd(l_op1_e3_l_9_81,RMul(RDiv(RSub(IntToReal(p_ui_79),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_81)));
    real l_op1_e3_l_9_83 = RNeg(globals.camVmax);
    real l_rayV_84 = RAdd(l_op1_e3_l_9_83,RMul(RDiv(RSub(IntToReal(p_vi_80),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_83)));
    vec3{4} v_85 = VScale<3,4>(l_rayU_82,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_86 = VScale<3,4>(l_rayV_84,LOAD_0(TensorRef<[3]>(globals.camV)));
    int l__t_87 = IMul(p_ui_79,globals.iresV);
    int l_offset_88 = Subscript<int[]>(globals.indecies,IAdd(l__t_87,p_vi_80));
    &tensor[2] l_interval_89 = Subscript<tensor[2][]>(globals.times,l_offset_88);
    femData(MeshCell) l_cc_90 = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    tensor[2][0] t_92 = <tensor[2][0]>{};
    tensor[2][] l__t_91 = MkDynamic<tensor[2],0>(t_92);
    tensor[2,3][0] t_94 = <tensor[2,3][0]>{};
    tensor[2,3][] l__t_93 = MkDynamic<tensor[2,3],0>(t_94);
    femData(MeshCell)[0] t_96 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_95 = MkDynamic<femData(MeshCell),0>(t_96);
    self.rayU = l_rayU_82;
    self.rayV = l_rayV_84;
    self.UV = PACK(VAdd<3,4>(v_85,v_86));
    self.rayOrig = PACK(VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_85),v_86));
    self.offset = l_offset_88;
    self.len = Subscript<int[]>(globals.indecies,IAdd(IAdd(IMul(globals.iresU,globals.iresV),l__t_87),p_vi_80));
    self.itter = 0;
    self.idx = l_offset_88;
    self.interval = TensorCopy<[2]>(l_interval_89);
    self.s = VIndex<2,2,0>(LOAD_0(l_interval_89));
    self.e = VIndex<2,2,1>(LOAD_0(l_interval_89));
    self.cc = l_cc_90;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_90));
    self.intervals = l__t_91;
    self.sints = l__t_93;
    self.newCells = l__t_95;
    self.count = 0;
    self.totalCount = 0;
    self.ui = p_ui_79;
    self.vi = p_vi_80;
  }
  start (globals) {
    if (globals.debug) {
      bool l__t_99;
      if (NEQ<int>(self.ui,globals.debugU)) {
        l__t_99 = true;
      } else {
        l__t_99 = NEQ<int>(self.vi,globals.debugV);
      }
      if (l__t_99) {
        stabilize;
      }
    }
    if (EQ<int>(self.len,0)) {
      stabilize;
    }
    femData(MeshCell) l_cc_100 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,self.idx));
    self.cc = l_cc_100;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_100));
    active;
  }
  update (world, globals) {
    int l_itter_292;
    vec2 v_291;
    real l_s_290;
    real l_e_289;
    femData(MeshCell) l_cc_288;
    femData(FuncCell) l_fc_287;
    int l_count_286;
    real l__t_273;
    tensor[2][] l_intervals_272;
    tensor[2,3][] l_sints_271;
    femData(MeshCell)[] l_newCells_270;
    int l_count_269;
    int l_totalCount_268;
    int l__t_255;
    int l__t_252;
    if (LT<int>(self.len,1)) {
      stabilize;
    }
    vec3{4} v_101 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.s,LOAD_0(TensorRef<[3]>(globals.rayVec))));
    vec2 v_102 = VEC2(VIndex<3,4,0>(v_101),VIndex<3,4,1>(v_101));
    femData(FemFunc) l__t_103 = ExtractFem<femData(FemFunc),femData(FuncCell)>(self.fc);
    femData(Space) l__t_104 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_103);
    femData(Mesh) l__t_105 = ExtractFem<femData(Mesh),femData(MeshCell)>(self.cc);
    int l__t_106 = ExtractFemItem<int,CellIndex(MeshCell)>(self.cc);
    real l__t_107 = VIndex<3,4,2>(v_101);
    tensor[2] _arg_108 = PACK(v_102);
    femData(MeshPos) l_callNewtonPos_109 = _0A3A_msh_newtonInverse$2542(_arg_108,l__t_106,l__t_105);
    &tensor[2] l_refPos_110 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_109);
    int l_mulRes_111 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(self.fc),6);
    int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,l_mulRes_111);
    int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,1));
    int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,2));
    int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,3));
    int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,4));
    int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,5));
    real t_118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_117));
    real t_119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_116));
    real t_120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_115));
    real t_121 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_114));
    real t_122 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_113));
    real t_123 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_112));
    vec4 v_124 = VEC4(t_123,t_122,t_121,t_120);
    vec2 v_125 = VEC2(t_119,t_118);
    real l_varAcc_126 = VIndex<2,2,0>(LOAD_0(l_refPos_110));
    real l_varAcc_127 = VIndex<2,2,1>(LOAD_0(l_refPos_110));
    real l_prod_128 = RMul(RMul(l_varAcc_126,l_varAcc_126),0.1e1);
    real l_prod_129 = RMul(l_varAcc_126,l_varAcc_127);
    real l_prod_130 = RMul(l_varAcc_126,0.1e1);
    real l_prod_131 = RMul(0.1e1,RMul(l_varAcc_127,l_varAcc_127));
    real l_prod_132 = RMul(0.1e1,l_varAcc_127);
    real l_prod_133 = RMul(0.1e1,0.1e1);
    real l_mult_134 = RMul(0.1e1,l_prod_133);
    real l_mult_135 = RMul(0.2e1,l_prod_131);
    real l_mult_136 = RMul(0.4e1,l_prod_129);
    real l_mult_137 = RMul(0.2e1,l_prod_128);
    real l_mult_138 = RMul(0.4e1,l_prod_132);
    real l_mult_139 = RMul(-0.4e1,l_prod_129);
    real l_mult_140 = RMul(0.4e1,l_prod_130);
    real l_f0_141 = RSub(RAdd(VDot<2,2>(v_125,VEC2(RAdd(l_mult_138,RAdd(RMul(-0.4e1,l_prod_131),l_mult_139)),RAdd(l_mult_140,RAdd(l_mult_139,RMul(-0.4e1,l_prod_128))))),VDot<4,4>(v_124,VEC4(RAdd(l_mult_134,RAdd(RMul(-0.3e1,l_prod_132),RAdd(l_mult_135,RAdd(RMul(-0.3e1,l_prod_130),RAdd(l_mult_136,l_mult_137))))),RAdd(RMul(-0.1e1,l_prod_130),l_mult_137),RAdd(RMul(-0.1e1,l_prod_132),l_mult_135),l_mult_136))),l__t_107);
    vec2 v_142 = VEC2(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(globals.rayVec))),VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(globals.rayVec))));
    real l_sum_143 = RAdd(RMul(-0.3e1,l_prod_133),RAdd(l_mult_138,l_mult_140));
    real l_mult_144 = RMul(-0.1e1,l_prod_133);
    real l_basisEval_145 = RMul(-0.4e1,l_prod_132);
    real l_mult_146 = RMul(0.4e1,l_prod_133);
    real l_mult_147 = RMul(-0.4e1,l_prod_130);
    real l_vdot_148 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_145,RAdd(l_mult_146,RAdd(l_basisEval_145,RMul(-0.8e1,l_prod_130))))),VDot<4,4>(v_124,VEC4(l_sum_143,RAdd(l_mult_144,l_mult_140),0.e0,l_mult_138)));
    real l_vdot_149 = RAdd(VDot<2,2>(v_125,VEC2(RAdd(l_mult_146,RAdd(RMul(-0.8e1,l_prod_132),l_mult_147)),l_mult_147)),VDot<4,4>(v_124,VEC4(l_sum_143,0.e0,RAdd(l_mult_144,l_mult_138),l_mult_140)));
    int l_mulRes_150 = IMul(l__t_106,3);
    int t_151 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,l_mulRes_150);
    int l_mulRes_152 = IMul(2,t_151);
    real l_dof_load_153 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_152);
    real l_dof_load_154 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_152));
    int t_155 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,IAdd(l_mulRes_150,1));
    int l_mulRes_156 = IMul(2,t_155);
    real l_dof_load_157 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_156);
    real l_dof_load_158 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_156));
    int t_159 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,IAdd(l_mulRes_150,2));
    int l_mulRes_160 = IMul(2,t_159);
    real l_dof_load_161 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_160);
    real l_dof_load_162 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_160));
    real l_r_163 = RMul(l_dof_load_153,l_mult_144);
    real l_r_164 = RMul(l_dof_load_161,0.e0);
    real l_r_165 = RAdd(RAdd(l_r_163,RMul(l_dof_load_157,l_mult_134)),l_r_164);
    real l_r_166 = RMul(l_dof_load_157,0.e0);
    real l_r_167 = RAdd(RAdd(l_r_163,l_r_166),RMul(l_dof_load_161,l_mult_134));
    real l_r_168 = RMul(l_dof_load_154,l_mult_144);
    real l_r_169 = RMul(l_dof_load_162,0.e0);
    real l_r_170 = RAdd(RAdd(l_r_168,RMul(l_dof_load_158,l_mult_134)),l_r_169);
    real l_r_171 = RMul(l_dof_load_158,0.e0);
    real l_r_172 = RAdd(RAdd(l_r_168,l_r_171),RMul(l_dof_load_162,l_mult_134));
    real l_r_173 = RAdd(RMul(0.e0,l_r_165),RMul(-0.1e1,l_r_170));
    real l_r_174 = RMul(0.e0,l_r_167);
    real l_r_175 = RAdd(l_r_174,RMul(-0.1e1,l_r_172));
    real l_r_176 = RAdd(RMul(0.1e1,l_r_165),RMul(0.e0,l_r_170));
    real l_r_177 = RMul(0.e0,l_r_172);
    real l_r_178 = RAdd(RMul(0.1e1,l_r_167),l_r_177);
    real l_r_179 = RAdd(l_r_174,RMul(0.1e1,l_r_172));
    real l_r_180 = RAdd(RMul(-0.1e1,l_r_167),l_r_177);
    real l_r_181 = RAdd(RMul(0.e0,l_r_173),RMul(-0.1e1,l_r_175));
    real l_r_182 = RAdd(RMul(0.e0,l_r_176),RMul(-0.1e1,l_r_178));
    real l_r_183 = RAdd(RMul(0.1e1,l_r_173),RMul(0.e0,l_r_175));
    real l_r_184 = RAdd(RMul(0.1e1,l_r_176),RMul(0.e0,l_r_178));
    real l_op1_e3_l_14_185 = VDot<2,2>(VEC2(l_r_165,l_r_170),VEC2(l_r_179,l_r_180));
    real l_r_186 = RDiv(l_r_181,l_op1_e3_l_14_185);
    real l_r_187 = RDiv(l_r_182,l_op1_e3_l_14_185);
    real l_r_188 = RDiv(l_r_183,l_op1_e3_l_14_185);
    real l_r_189 = RDiv(l_r_184,l_op1_e3_l_14_185);
    vec2 v_190 = VEC2(RAdd(RMul(l_vdot_148,l_r_186),RMul(l_vdot_149,l_r_188)),RAdd(RMul(l_vdot_148,l_r_187),RMul(l_vdot_149,l_r_189)));
    real l__t_191 = VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(globals.rayVec)));
    int l__t_192 = ExtractFemItem<int,CellIndex(Mesh)>(self.cc);
    real t_193 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(l__t_105,l__t_192);
    real l_gradEps_194 = Min<real>(RDiv(Abs<real>(RSub(VDot<2,2>(v_142,v_190),l__t_191)),t_193),RSub(self.e,self.s));
    tensor[2] _arg_195 = PACK(v_190);
    print("hmmmm:",TensorRef<[2]>(_arg_195),"\n");
    tensor[6] _arg_196 = PACK(v_124,v_125);
    print("fc dofs:",TensorRef<[6]>(_arg_196),"\n");
    tensor[2] _arg_197 = PACK(VAdd<2,2>(v_102,VScale<2,2>(l_gradEps_194,v_142)));
    femData(MeshPos) l_callNewtonPos_198 = _0A3A_msh_newtonInverse$2542(_arg_197,l__t_106,l__t_105);
    &tensor[2] l_refPos_199 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_198);
    real l_varAcc_200 = VIndex<2,2,0>(LOAD_0(l_refPos_199));
    real l_varAcc_201 = VIndex<2,2,1>(LOAD_0(l_refPos_199));
    real l_prod_202 = RMul(RMul(l_varAcc_200,l_varAcc_200),0.1e1);
    real l_prod_203 = RMul(l_varAcc_200,l_varAcc_201);
    real l_prod_204 = RMul(l_varAcc_200,0.1e1);
    real l_prod_205 = RMul(0.1e1,RMul(l_varAcc_201,l_varAcc_201));
    real l_prod_206 = RMul(0.1e1,l_varAcc_201);
    real l_mult_207 = RMul(0.2e1,l_prod_205);
    real l_mult_208 = RMul(0.4e1,l_prod_203);
    real l_mult_209 = RMul(0.2e1,l_prod_202);
    real l_mult_210 = RMul(-0.4e1,l_prod_203);
    real l_f1_211 = RSub(RSub(RAdd(VDot<2,2>(v_125,VEC2(RAdd(RMul(0.4e1,l_prod_206),RAdd(RMul(-0.4e1,l_prod_205),l_mult_210)),RAdd(RMul(0.4e1,l_prod_204),RAdd(l_mult_210,RMul(-0.4e1,l_prod_202))))),VDot<4,4>(v_124,VEC4(RAdd(l_mult_134,RAdd(RMul(-0.3e1,l_prod_206),RAdd(l_mult_207,RAdd(RMul(-0.3e1,l_prod_204),RAdd(l_mult_208,l_mult_209))))),RAdd(RMul(-0.1e1,l_prod_204),l_mult_209),RAdd(RMul(-0.1e1,l_prod_206),l_mult_207),l_mult_208))),l__t_107),RMul(l_gradEps_194,l__t_191));
    print("=========================\n");
    print("Ui/Vi:",self.ui,"/",self.vi,"\n");
    print("Cell:",self.cc,"\n");
    real l_basisEval_212 = RMul(-0.8e1,l_prod_133);
    real l_basisEval_213 = RMul(-0.4e1,l_prod_133);
    real l_vdot_214 = RAdd(VDot<2,2>(v_125,VEC2(0.e0,l_basisEval_212)),VDot<4,4>(v_124,VEC4(l_mult_146,l_mult_146,0.e0,0.e0)));
    real l_vdot_215 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_213,l_basisEval_213)),VDot<4,4>(v_124,VEC4(l_mult_146,0.e0,0.e0,l_mult_146)));
    real l_vdot_216 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_212,0.e0)),VDot<4,4>(v_124,VEC4(l_mult_146,0.e0,l_mult_146,0.e0)));
    real l_r_217 = RAdd(RMul(l_vdot_214,l_r_186),RMul(l_vdot_215,l_r_188));
    real l_r_218 = RAdd(RMul(l_vdot_214,l_r_187),RMul(l_vdot_215,l_r_189));
    real l_r_219 = RAdd(RMul(l_vdot_215,l_r_186),RMul(l_vdot_216,l_r_188));
    real l_r_220 = RAdd(RMul(l_vdot_215,l_r_187),RMul(l_vdot_216,l_r_189));
    real l_r_221 = RAdd(RAdd(RMul(l_dof_load_153,0.e0),l_r_166),l_r_164);
    real l_r_222 = RAdd(RAdd(RMul(l_dof_load_154,0.e0),l_r_171),l_r_169);
    real l_r_223 = RMul(0.e0,l_r_221);
    real l_r_224 = RAdd(l_r_223,RMul(-0.1e1,l_r_222));
    real l_r_225 = RMul(0.e0,l_r_222);
    real l_r_226 = RAdd(RMul(0.1e1,l_r_221),l_r_225);
    real l_r_227 = RMul(0.e0,l_r_224);
    real l_r_228 = RAdd(l_r_227,RMul(-0.1e1,l_r_224));
    real l_r_229 = RMul(0.e0,l_r_226);
    real l_r_230 = RAdd(l_r_229,RMul(-0.1e1,l_r_226));
    real l_r_231 = RAdd(RMul(0.1e1,l_r_224),l_r_227);
    real l_r_232 = RAdd(RMul(0.1e1,l_r_226),l_r_229);
    real l_r_233 = RAdd(RMul(l_r_179,l_r_221),RMul(l_r_180,l_r_222));
    real l_r_234 = RAdd(RMul(l_r_165,RAdd(l_r_223,RMul(0.1e1,l_r_222))),RMul(l_r_170,RAdd(RMul(-0.1e1,l_r_221),l_r_225)));
    vec2 v_235 = VAdd<2,2>(VEC2(l_r_233,l_r_233),VEC2(l_r_234,l_r_234));
    real l_r_236 = VIndex<2,2,0>(v_235);
    real l_r_237 = VIndex<2,2,1>(v_235);
    vec2 v_238 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_228,l_r_228)),VEC2(RMul(l_r_181,l_r_236),RMul(l_r_181,l_r_237)));
    vec2 v_239 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_230,l_r_230)),VEC2(RMul(l_r_182,l_r_236),RMul(l_r_182,l_r_237)));
    vec2 v_240 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_231,l_r_231)),VEC2(RMul(l_r_183,l_r_236),RMul(l_r_183,l_r_237)));
    vec2 v_241 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_232,l_r_232)),VEC2(RMul(l_r_184,l_r_236),RMul(l_r_184,l_r_237)));
    real l_op1_e3_l_56_242 = RMul(l_op1_e3_l_14_185,l_op1_e3_l_14_185);
    vec2 v_243 = VAdd<2,2>(VEC2(RAdd(RMul(l_r_186,l_r_217),RMul(l_r_188,l_r_219)),RAdd(RMul(l_r_186,l_r_218),RMul(l_r_188,l_r_220))),VEC2(RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,0>(v_238),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,0>(v_240),l_op1_e3_l_56_242))),RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,1>(v_238),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,1>(v_240),l_op1_e3_l_56_242)))));
    vec2 v_244 = VAdd<2,2>(VEC2(RAdd(RMul(l_r_187,l_r_217),RMul(l_r_189,l_r_219)),RAdd(RMul(l_r_187,l_r_218),RMul(l_r_189,l_r_220))),VEC2(RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,0>(v_239),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,0>(v_241),l_op1_e3_l_56_242))),RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,1>(v_239),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,1>(v_241),l_op1_e3_l_56_242)))));
    tensor[2,2] t_245 = <tensor[2,2]>[VIndex<2,2,0>(v_243),VIndex<2,2,1>(v_243),VIndex<2,2,0>(v_244),VIndex<2,2,1>(v_244)];
    print("hess:",TensorRef<[2,2]>(t_245),"\n","norm:",Sqrt(RAdd(VDot<2,2>(v_243,v_243),VDot<2,2>(v_244,v_244))),"\n");
    tensor[2] _arg_246 = PACK(v_190);
    print("Grad:",TensorRef<[2]>(_arg_246),"\n");
    vec2 v_247 = VEC2(l_f0_141,l_f1_211);
    tensor[2] _arg_248 = PACK(v_247);
    print("vals:",TensorRef<[2]>(_arg_248),"\n");
    bool l__t_249 = GT<real>(l_f0_141,0.e0);
    vec3{4} v_250 = v_101;
    vec2 v_251 = v_247;
    if (l__t_249) {
      l__t_252 = 1;
    } else {
      int l__t_253;
      if (LT<real>(l_f0_141,0.e0)) {
        l__t_253 = -1;
      } else {
        l__t_253 = 0;
      }
      l__t_252 = l__t_253;
    }
    bool l__t_254 = GT<real>(l_f1_211,0.e0);
    if (l__t_254) {
      l__t_255 = 1;
    } else {
      int l__t_256;
      if (LT<real>(l_f1_211,0.e0)) {
        l__t_256 = -1;
      } else {
        l__t_256 = 0;
      }
      l__t_255 = l__t_256;
    }
    if (BNot(GT<int>(IMul(l__t_252,l__t_255),0))) {
      int l__t_259;
      int l__t_257;
      if (l__t_249) {
        l__t_257 = 1;
      } else {
        int l__t_258;
        if (LT<real>(l_f0_141,0.e0)) {
          l__t_258 = -1;
        } else {
          l__t_258 = 0;
        }
        l__t_257 = l__t_258;
      }
      if (l__t_254) {
        l__t_259 = 1;
      } else {
        int l__t_260;
        if (LT<real>(l_f1_211,0.e0)) {
          l__t_260 = -1;
        } else {
          l__t_260 = 0;
        }
        l__t_259 = l__t_260;
      }
      if (EQ<int>(IMul(l__t_257,l__t_259),0)) {
        print("Warn: 0 update\n");
      }
      print("update with interval:",l_gradEps_194,"\n");
      print("Pixel Ui/Vi:",self.ui,"/",self.vi,"\n");
      print("Count:",self.count,"\n");
      tensor[2] _arg_261 = PACK(v_251);
      print("Vals I:",TensorRef<[2]>(_arg_261),"\n");
      real l__t_262 = RAdd(self.s,l_gradEps_194);
      vec2 v_263 = VEC2(self.s,l__t_262);
      tensor[2] _arg_264 = PACK(v_263);
      print("New interval:",TensorRef<[2]>(_arg_264),"\n");
      tensor[2] _arg_265 = PACK(v_263);
      vec3{4} v_266 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l__t_262,LOAD_0(TensorRef<[3]>(globals.rayVec))));
      tensor[2,3] t_267 = <tensor[2,3]>[VIndex<3,4,0>(v_250),VIndex<3,4,1>(v_250),VIndex<3,4,2>(v_250),VIndex<3,4,0>(v_266),VIndex<3,4,1>(v_266),VIndex<3,4,2>(v_266)];
      l_totalCount_268 = IAdd(self.totalCount,1);
      l_count_269 = IAdd(self.count,1);
      l_newCells_270 = Append<femData(MeshCell),femData(MeshCell)>(self.newCells,self.cc);
      l_sints_271 = Append<tensor[2,3],tensor[2,3]>(self.sints,t_267);
      l_intervals_272 = Append<tensor[2],tensor[2]>(self.intervals,_arg_265);
      l__t_273 = l__t_262;
    } else {
      real t_274 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(l__t_105,l__t_192);
      real l_epsUpdate_275 = Max<real>(l_gradEps_194,RDiv(Abs<real>(l_f0_141),RMul(0.2e1,t_274)));
      print("update L:",l_epsUpdate_275,"\n");
      print("update G:",l_gradEps_194,"\n");
      l_totalCount_268 = self.totalCount;
      l_count_269 = self.count;
      l_newCells_270 = self.newCells;
      l_sints_271 = self.sints;
      l_intervals_272 = self.intervals;
      l__t_273 = RAdd(self.s,l_epsUpdate_275);
    }
    if (GTE<real>(l__t_273,self.e)) {
      vec2 v_285;
      real l_s_284;
      real l_e_283;
      femData(MeshCell) l_cc_282;
      femData(FuncCell) l__t_281;
      int l__t_280;
      int l_itter_276 = IAdd(self.itter,1);
      if (GTE<int>(l_itter_276,self.len)) {
        print("TotalCount:",l_totalCount_268,"\n");
        print("Intervals:",l_intervals_272,"\n");
        print("Cells:",l_newCells_270,"\n");
        print(self.ui,";",self.vi,"++++++++++++++End Pixel++++++++++++++++++\n");
        self.itter = l_itter_276;
        self.s = l__t_273;
        self.intervals = l_intervals_272;
        self.sints = l_sints_271;
        self.newCells = l_newCells_270;
        self.count = l_count_269;
        self.totalCount = l_totalCount_268;
        stabilize;
      } else {
        print("++++++++++++++New Cell++++++++++++++++++\n");
        int l__t_277 = IAdd(self.offset,l_itter_276);
        &tensor[2] l_interval_278 = Subscript<tensor[2][]>(globals.times,l__t_277);
        femData(MeshCell) l_cc_279 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,l__t_277));
        l__t_280 = 0;
        l__t_281 = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_279));
        l_cc_282 = l_cc_279;
        l_e_283 = VIndex<2,2,1>(LOAD_0(l_interval_278));
        l_s_284 = VIndex<2,2,0>(LOAD_0(l_interval_278));
        v_285 = LOAD_0(l_interval_278);
      }
      l_count_286 = l__t_280;
      l_fc_287 = l__t_281;
      l_cc_288 = l_cc_282;
      l_e_289 = l_e_283;
      l_s_290 = l_s_284;
      v_291 = v_285;
      l_itter_292 = l_itter_276;
    } else {
      l_count_286 = l_count_269;
      l_fc_287 = self.fc;
      l_cc_288 = self.cc;
      l_e_289 = self.e;
      l_s_290 = l__t_273;
      v_291 = LOAD_0(TensorRef<[2]>(self.interval));
      l_itter_292 = self.itter;
    }
    self.itter = l_itter_292;
    self.interval = PACK(v_291);
    self.s = l_s_290;
    self.e = l_e_289;
    self.cc = l_cc_288;
    self.fc = l_fc_287;
    self.intervals = l_intervals_272;
    self.sints = l_sints_271;
    self.newCells = l_newCells_270;
    self.count = l_count_286;
    self.totalCount = l_totalCount_268;
    active;
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_294 = 0 to ISub(globals.iresU,1) {
      for i_ui_295 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_295,i_vi_294);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b0450_intermedateGlobal;
input femData(FemFunc) 0c0452_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
input int[] indecies;
input tensor[2][] times;
input int[] cells;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[-0.5e0,0.5e0,0.5e0];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-8;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global femData(FemFunc) c;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] rayVec;
//***** FUNCTIONS *****
  function femData(MeshPos) _0A3A_msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_50;
    l__t_50 = <femData(MeshCell)[]>{};
    for i__t_51 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_50 = Append<femData(MeshCell),femData(MeshCell)>(l__t_50,LoadFem<femData(MeshCell)>(globals.a,i__t_51));
    }
    globals.0cell_a = l__t_50;
    globals.c = LoadFem<femData(FemFunc)>(globals.0c0452_intermedateGlobal,LoadFem<femData(Space)>(globals.0b0450_intermedateGlobal,globals.a));
    vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_53 = Sqrt(VDot<3,4>(v_52,v_52));
    real l_op1_e3_l_9_54 = RDiv(0.1e1,l_op1_e3_l_7_53);
    real l_r_55 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_56 = RMul(0.e0,l_r_55);
    real l_r_57 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_58 = RMul(0.e0,l_r_57);
    real l_r_59 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = RAdd(l_r_56,l_r_58);
    real l_r_62 = RAdd(l_r_61,l_r_60);
    vec3{4} v_63 = VEC3{4}(VDot<3,4>(v_52,VEC3{4}(l_r_62,RAdd(l_r_61,RMul(0.1e1,l_r_59)),RAdd(RAdd(l_r_56,RMul(-0.1e1,l_r_57)),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(l_r_61,RMul(-0.1e1,l_r_59)),l_r_62,RAdd(RAdd(RMul(0.1e1,l_r_55),l_r_58),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(RAdd(l_r_56,RMul(0.1e1,l_r_57)),l_r_60),RAdd(RAdd(RMul(-0.1e1,l_r_55),l_r_58),l_r_60),l_r_62)));
    real l_op1_e3_l_38_64 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_54,l_op1_e3_l_9_54),VDot<3,4>(v_63,v_63))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_64,VScale<3,4>(l_op1_e3_l_9_54,v_63)));
    real l_r_66 = VIndex<3,4,0>(v_52);
    real l_r_67 = RMul(0.e0,l_r_66);
    real l_r_68 = VIndex<3,4,1>(v_52);
    real l_r_69 = RMul(0.e0,l_r_68);
    real l_r_70 = VIndex<3,4,2>(v_52);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = RAdd(l_r_67,l_r_69);
    real l_r_73 = RAdd(l_r_72,l_r_71);
    vec3{4} v_74 = VScale<3,4>(l_op1_e3_l_9_54,VEC3{4}(VDot<3,4>(v_63,VEC3{4}(l_r_73,RAdd(l_r_72,RMul(0.1e1,l_r_70)),RAdd(RAdd(l_r_67,RMul(-0.1e1,l_r_68)),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(l_r_72,RMul(-0.1e1,l_r_70)),l_r_73,RAdd(RAdd(RMul(0.1e1,l_r_66),l_r_69),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(RAdd(l_r_67,RMul(0.1e1,l_r_68)),l_r_71),RAdd(RAdd(RMul(-0.1e1,l_r_66),l_r_69),l_r_71),l_r_73))));
    real l_r_75 = RMul(l_op1_e3_l_38_64,l_op1_e3_l_9_54);
    globals.camV = <tensor[3]>[RMul(l_r_75,VIndex<3,4,0>(v_74)),RMul(l_r_75,VIndex<3,4,1>(v_74)),RMul(l_r_75,VIndex<3,4,2>(v_74))];
    real l_op1_e3_l_10_77 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_77,l_op1_e3_l_7_53);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_77),l_op1_e3_l_7_53),IntToReal(globals.iresV));
    globals.rayVec = PACK(VScale<3,4>(l_op1_e3_l_9_54,v_52));
  }
//***** STRAND *****
strand ray (int p_ui_79,int p_vi_80) {
  real rayU;
  real rayV;
  tensor[3] UV;
  tensor[3] rayOrig;
  int offset;
  int len;
  varying int itter;
  int idx;
  varying tensor[2] interval;
  varying real s;
  varying real e;
  varying femData(MeshCell) cc;
  varying femData(FuncCell) fc;
  varying output tensor[2][] intervals;
  varying output tensor[2,3][] sints;
  varying output femData(MeshCell)[] newCells;
  varying int count;
  varying int totalCount;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_81 = RNeg(globals.camUmax);
    real l_rayU_82 = RAdd(l_op1_e3_l_9_81,RMul(RDiv(RSub(IntToReal(p_ui_79),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_81)));
    real l_op1_e3_l_9_83 = RNeg(globals.camVmax);
    real l_rayV_84 = RAdd(l_op1_e3_l_9_83,RMul(RDiv(RSub(IntToReal(p_vi_80),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_83)));
    vec3{4} v_85 = VScale<3,4>(l_rayU_82,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_86 = VScale<3,4>(l_rayV_84,LOAD_0(TensorRef<[3]>(globals.camV)));
    int l__t_87 = IMul(p_ui_79,globals.iresV);
    int l_offset_88 = Subscript<int[]>(globals.indecies,IAdd(l__t_87,p_vi_80));
    &tensor[2] l_interval_89 = Subscript<tensor[2][]>(globals.times,l_offset_88);
    femData(MeshCell) l_cc_90 = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    tensor[2][0] t_92 = <tensor[2][0]>{};
    tensor[2][] l__t_91 = MkDynamic<tensor[2],0>(t_92);
    tensor[2,3][0] t_94 = <tensor[2,3][0]>{};
    tensor[2,3][] l__t_93 = MkDynamic<tensor[2,3],0>(t_94);
    femData(MeshCell)[0] t_96 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_95 = MkDynamic<femData(MeshCell),0>(t_96);
    self.rayU = l_rayU_82;
    self.rayV = l_rayV_84;
    self.UV = PACK(VAdd<3,4>(v_85,v_86));
    self.rayOrig = PACK(VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_85),v_86));
    self.offset = l_offset_88;
    self.len = Subscript<int[]>(globals.indecies,IAdd(IAdd(IMul(globals.iresU,globals.iresV),l__t_87),p_vi_80));
    self.itter = 0;
    self.idx = l_offset_88;
    self.interval = TensorCopy<[2]>(l_interval_89);
    self.s = TensorIndex<&tensor[2],[0]>(l_interval_89);
    self.e = TensorIndex<&tensor[2],[1]>(l_interval_89);
    self.cc = l_cc_90;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_90));
    self.intervals = l__t_91;
    self.sints = l__t_93;
    self.newCells = l__t_95;
    self.count = 0;
    self.totalCount = 0;
    self.ui = p_ui_79;
    self.vi = p_vi_80;
  }
  start (globals) {
    if (globals.debug) {
      bool l__t_99;
      if (NEQ<int>(self.ui,globals.debugU)) {
        l__t_99 = true;
      } else {
        l__t_99 = NEQ<int>(self.vi,globals.debugV);
      }
      if (l__t_99) {
        stabilize;
      }
    }
    if (EQ<int>(self.len,0)) {
      stabilize;
    }
    femData(MeshCell) l_cc_100 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,self.idx));
    self.cc = l_cc_100;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_100));
    active;
  }
  update (world, globals) {
    int l_itter_292;
    vec2 v_291;
    real l_s_290;
    real l_e_289;
    femData(MeshCell) l_cc_288;
    femData(FuncCell) l_fc_287;
    int l_count_286;
    real l__t_273;
    tensor[2][] l_intervals_272;
    tensor[2,3][] l_sints_271;
    femData(MeshCell)[] l_newCells_270;
    int l_count_269;
    int l_totalCount_268;
    int l__t_255;
    int l__t_252;
    if (LT<int>(self.len,1)) {
      stabilize;
    }
    vec3{4} v_101 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.s,LOAD_0(TensorRef<[3]>(globals.rayVec))));
    vec2 v_102 = VEC2(VIndex<3,4,0>(v_101),VIndex<3,4,1>(v_101));
    femData(FemFunc) l__t_103 = ExtractFem<femData(FemFunc),femData(FuncCell)>(self.fc);
    femData(Space) l__t_104 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_103);
    femData(Mesh) l__t_105 = ExtractFem<femData(Mesh),femData(MeshCell)>(self.cc);
    int l__t_106 = ExtractFemItem<int,CellIndex(MeshCell)>(self.cc);
    real l__t_107 = VIndex<3,4,2>(v_101);
    tensor[2] _arg_108 = PACK(v_102);
    femData(MeshPos) l_callNewtonPos_109 = _0A3A_msh_newtonInverse$2542(_arg_108,l__t_106,l__t_105);
    &tensor[2] l_refPos_110 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_109);
    int l_mulRes_111 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(self.fc),6);
    int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,l_mulRes_111);
    int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,1));
    int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,2));
    int t_115 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,3));
    int t_116 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,4));
    int t_117 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_104,IAdd(l_mulRes_111,5));
    real t_118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_117));
    real t_119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_116));
    real t_120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_115));
    real t_121 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_114));
    real t_122 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_113));
    real t_123 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_103,IMul(1,t_112));
    vec4 v_124 = VEC4(t_123,t_122,t_121,t_120);
    vec2 v_125 = VEC2(t_119,t_118);
    real l_varAcc_126 = TensorIndex<&tensor[2],[0]>(l_refPos_110);
    real l_varAcc_127 = TensorIndex<&tensor[2],[1]>(l_refPos_110);
    real l_prod_128 = RMul(RMul(l_varAcc_126,l_varAcc_126),0.1e1);
    real l_prod_129 = RMul(l_varAcc_126,l_varAcc_127);
    real l_prod_130 = RMul(l_varAcc_126,0.1e1);
    real l_prod_131 = RMul(0.1e1,RMul(l_varAcc_127,l_varAcc_127));
    real l_prod_132 = RMul(0.1e1,l_varAcc_127);
    real l_prod_133 = RMul(0.1e1,0.1e1);
    real l_mult_134 = RMul(0.1e1,l_prod_133);
    real l_mult_135 = RMul(0.2e1,l_prod_131);
    real l_mult_136 = RMul(0.4e1,l_prod_129);
    real l_mult_137 = RMul(0.2e1,l_prod_128);
    real l_mult_138 = RMul(0.4e1,l_prod_132);
    real l_mult_139 = RMul(-0.4e1,l_prod_129);
    real l_mult_140 = RMul(0.4e1,l_prod_130);
    real l_f0_141 = RSub(RAdd(VDot<2,2>(v_125,VEC2(RAdd(l_mult_138,RAdd(RMul(-0.4e1,l_prod_131),l_mult_139)),RAdd(l_mult_140,RAdd(l_mult_139,RMul(-0.4e1,l_prod_128))))),VDot<4,4>(v_124,VEC4(RAdd(l_mult_134,RAdd(RMul(-0.3e1,l_prod_132),RAdd(l_mult_135,RAdd(RMul(-0.3e1,l_prod_130),RAdd(l_mult_136,l_mult_137))))),RAdd(RMul(-0.1e1,l_prod_130),l_mult_137),RAdd(RMul(-0.1e1,l_prod_132),l_mult_135),l_mult_136))),l__t_107);
    vec2 v_142 = VEC2(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.rayVec)),TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.rayVec)));
    real l_sum_143 = RAdd(RMul(-0.3e1,l_prod_133),RAdd(l_mult_138,l_mult_140));
    real l_mult_144 = RMul(-0.1e1,l_prod_133);
    real l_basisEval_145 = RMul(-0.4e1,l_prod_132);
    real l_mult_146 = RMul(0.4e1,l_prod_133);
    real l_mult_147 = RMul(-0.4e1,l_prod_130);
    real l_vdot_148 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_145,RAdd(l_mult_146,RAdd(l_basisEval_145,RMul(-0.8e1,l_prod_130))))),VDot<4,4>(v_124,VEC4(l_sum_143,RAdd(l_mult_144,l_mult_140),0.e0,l_mult_138)));
    real l_vdot_149 = RAdd(VDot<2,2>(v_125,VEC2(RAdd(l_mult_146,RAdd(RMul(-0.8e1,l_prod_132),l_mult_147)),l_mult_147)),VDot<4,4>(v_124,VEC4(l_sum_143,0.e0,RAdd(l_mult_144,l_mult_138),l_mult_140)));
    int l_mulRes_150 = IMul(l__t_106,3);
    int t_151 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,l_mulRes_150);
    int l_mulRes_152 = IMul(2,t_151);
    real l_dof_load_153 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_152);
    real l_dof_load_154 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_152));
    int t_155 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,IAdd(l_mulRes_150,1));
    int l_mulRes_156 = IMul(2,t_155);
    real l_dof_load_157 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_156);
    real l_dof_load_158 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_156));
    int t_159 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_105,IAdd(l_mulRes_150,2));
    int l_mulRes_160 = IMul(2,t_159);
    real l_dof_load_161 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,l_mulRes_160);
    real l_dof_load_162 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_105,IAdd(1,l_mulRes_160));
    real l_r_163 = RMul(l_dof_load_153,l_mult_144);
    real l_r_164 = RMul(l_dof_load_161,0.e0);
    real l_r_165 = RAdd(RAdd(l_r_163,RMul(l_dof_load_157,l_mult_134)),l_r_164);
    real l_r_166 = RMul(l_dof_load_157,0.e0);
    real l_r_167 = RAdd(RAdd(l_r_163,l_r_166),RMul(l_dof_load_161,l_mult_134));
    real l_r_168 = RMul(l_dof_load_154,l_mult_144);
    real l_r_169 = RMul(l_dof_load_162,0.e0);
    real l_r_170 = RAdd(RAdd(l_r_168,RMul(l_dof_load_158,l_mult_134)),l_r_169);
    real l_r_171 = RMul(l_dof_load_158,0.e0);
    real l_r_172 = RAdd(RAdd(l_r_168,l_r_171),RMul(l_dof_load_162,l_mult_134));
    real l_r_173 = RAdd(RMul(0.e0,l_r_165),RMul(-0.1e1,l_r_170));
    real l_r_174 = RMul(0.e0,l_r_167);
    real l_r_175 = RAdd(l_r_174,RMul(-0.1e1,l_r_172));
    real l_r_176 = RAdd(RMul(0.1e1,l_r_165),RMul(0.e0,l_r_170));
    real l_r_177 = RMul(0.e0,l_r_172);
    real l_r_178 = RAdd(RMul(0.1e1,l_r_167),l_r_177);
    real l_r_179 = RAdd(l_r_174,RMul(0.1e1,l_r_172));
    real l_r_180 = RAdd(RMul(-0.1e1,l_r_167),l_r_177);
    real l_r_181 = RAdd(RMul(0.e0,l_r_173),RMul(-0.1e1,l_r_175));
    real l_r_182 = RAdd(RMul(0.e0,l_r_176),RMul(-0.1e1,l_r_178));
    real l_r_183 = RAdd(RMul(0.1e1,l_r_173),RMul(0.e0,l_r_175));
    real l_r_184 = RAdd(RMul(0.1e1,l_r_176),RMul(0.e0,l_r_178));
    real l_op1_e3_l_14_185 = VDot<2,2>(VEC2(l_r_165,l_r_170),VEC2(l_r_179,l_r_180));
    real l_r_186 = RDiv(l_r_181,l_op1_e3_l_14_185);
    real l_r_187 = RDiv(l_r_182,l_op1_e3_l_14_185);
    real l_r_188 = RDiv(l_r_183,l_op1_e3_l_14_185);
    real l_r_189 = RDiv(l_r_184,l_op1_e3_l_14_185);
    vec2 v_190 = VEC2(RAdd(RMul(l_vdot_148,l_r_186),RMul(l_vdot_149,l_r_188)),RAdd(RMul(l_vdot_148,l_r_187),RMul(l_vdot_149,l_r_189)));
    real l__t_191 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.rayVec));
    int l__t_192 = ExtractFemItem<int,CellIndex(Mesh)>(self.cc);
    real t_193 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(l__t_105,l__t_192);
    real l_gradEps_194 = Min<real>(RDiv(Abs<real>(RSub(VDot<2,2>(v_142,v_190),l__t_191)),t_193),RSub(self.e,self.s));
    tensor[2] _arg_195 = PACK(v_190);
    print("hmmmm:",TensorRef<[2]>(_arg_195),"\n");
    tensor[6] _arg_196 = PACK(v_124,v_125);
    print("fc dofs:",TensorRef<[6]>(_arg_196),"\n");
    tensor[2] _arg_197 = PACK(VAdd<2,2>(v_102,VScale<2,2>(l_gradEps_194,v_142)));
    femData(MeshPos) l_callNewtonPos_198 = _0A3A_msh_newtonInverse$2542(_arg_197,l__t_106,l__t_105);
    &tensor[2] l_refPos_199 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_198);
    real l_varAcc_200 = TensorIndex<&tensor[2],[0]>(l_refPos_199);
    real l_varAcc_201 = TensorIndex<&tensor[2],[1]>(l_refPos_199);
    real l_prod_202 = RMul(RMul(l_varAcc_200,l_varAcc_200),0.1e1);
    real l_prod_203 = RMul(l_varAcc_200,l_varAcc_201);
    real l_prod_204 = RMul(l_varAcc_200,0.1e1);
    real l_prod_205 = RMul(0.1e1,RMul(l_varAcc_201,l_varAcc_201));
    real l_prod_206 = RMul(0.1e1,l_varAcc_201);
    real l_mult_207 = RMul(0.2e1,l_prod_205);
    real l_mult_208 = RMul(0.4e1,l_prod_203);
    real l_mult_209 = RMul(0.2e1,l_prod_202);
    real l_mult_210 = RMul(-0.4e1,l_prod_203);
    real l_f1_211 = RSub(RSub(RAdd(VDot<2,2>(v_125,VEC2(RAdd(RMul(0.4e1,l_prod_206),RAdd(RMul(-0.4e1,l_prod_205),l_mult_210)),RAdd(RMul(0.4e1,l_prod_204),RAdd(l_mult_210,RMul(-0.4e1,l_prod_202))))),VDot<4,4>(v_124,VEC4(RAdd(l_mult_134,RAdd(RMul(-0.3e1,l_prod_206),RAdd(l_mult_207,RAdd(RMul(-0.3e1,l_prod_204),RAdd(l_mult_208,l_mult_209))))),RAdd(RMul(-0.1e1,l_prod_204),l_mult_209),RAdd(RMul(-0.1e1,l_prod_206),l_mult_207),l_mult_208))),l__t_107),RMul(l_gradEps_194,l__t_191));
    print("=========================\n");
    print("Ui/Vi:",self.ui,"/",self.vi,"\n");
    print("Cell:",self.cc,"\n");
    real l_basisEval_212 = RMul(-0.8e1,l_prod_133);
    real l_basisEval_213 = RMul(-0.4e1,l_prod_133);
    real l_vdot_214 = RAdd(VDot<2,2>(v_125,VEC2(0.e0,l_basisEval_212)),VDot<4,4>(v_124,VEC4(l_mult_146,l_mult_146,0.e0,0.e0)));
    real l_vdot_215 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_213,l_basisEval_213)),VDot<4,4>(v_124,VEC4(l_mult_146,0.e0,0.e0,l_mult_146)));
    real l_vdot_216 = RAdd(VDot<2,2>(v_125,VEC2(l_basisEval_212,0.e0)),VDot<4,4>(v_124,VEC4(l_mult_146,0.e0,l_mult_146,0.e0)));
    real l_r_217 = RAdd(RMul(l_vdot_214,l_r_186),RMul(l_vdot_215,l_r_188));
    real l_r_218 = RAdd(RMul(l_vdot_214,l_r_187),RMul(l_vdot_215,l_r_189));
    real l_r_219 = RAdd(RMul(l_vdot_215,l_r_186),RMul(l_vdot_216,l_r_188));
    real l_r_220 = RAdd(RMul(l_vdot_215,l_r_187),RMul(l_vdot_216,l_r_189));
    real l_r_221 = RAdd(RAdd(RMul(l_dof_load_153,0.e0),l_r_166),l_r_164);
    real l_r_222 = RAdd(RAdd(RMul(l_dof_load_154,0.e0),l_r_171),l_r_169);
    real l_r_223 = RMul(0.e0,l_r_221);
    real l_r_224 = RAdd(l_r_223,RMul(-0.1e1,l_r_222));
    real l_r_225 = RMul(0.e0,l_r_222);
    real l_r_226 = RAdd(RMul(0.1e1,l_r_221),l_r_225);
    real l_r_227 = RMul(0.e0,l_r_224);
    real l_r_228 = RAdd(l_r_227,RMul(-0.1e1,l_r_224));
    real l_r_229 = RMul(0.e0,l_r_226);
    real l_r_230 = RAdd(l_r_229,RMul(-0.1e1,l_r_226));
    real l_r_231 = RAdd(RMul(0.1e1,l_r_224),l_r_227);
    real l_r_232 = RAdd(RMul(0.1e1,l_r_226),l_r_229);
    real l_r_233 = RAdd(RMul(l_r_179,l_r_221),RMul(l_r_180,l_r_222));
    real l_r_234 = RAdd(RMul(l_r_165,RAdd(l_r_223,RMul(0.1e1,l_r_222))),RMul(l_r_170,RAdd(RMul(-0.1e1,l_r_221),l_r_225)));
    vec2 v_235 = VAdd<2,2>(VEC2(l_r_233,l_r_233),VEC2(l_r_234,l_r_234));
    real l_r_236 = VIndex<2,2,0>(v_235);
    real l_r_237 = VIndex<2,2,1>(v_235);
    vec2 v_238 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_228,l_r_228)),VEC2(RMul(l_r_181,l_r_236),RMul(l_r_181,l_r_237)));
    vec2 v_239 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_230,l_r_230)),VEC2(RMul(l_r_182,l_r_236),RMul(l_r_182,l_r_237)));
    vec2 v_240 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_231,l_r_231)),VEC2(RMul(l_r_183,l_r_236),RMul(l_r_183,l_r_237)));
    vec2 v_241 = VSub<2,2>(VScale<2,2>(l_op1_e3_l_14_185,VEC2(l_r_232,l_r_232)),VEC2(RMul(l_r_184,l_r_236),RMul(l_r_184,l_r_237)));
    real l_op1_e3_l_56_242 = RMul(l_op1_e3_l_14_185,l_op1_e3_l_14_185);
    vec2 v_243 = VAdd<2,2>(VEC2(RAdd(RMul(l_r_186,l_r_217),RMul(l_r_188,l_r_219)),RAdd(RMul(l_r_186,l_r_218),RMul(l_r_188,l_r_220))),VEC2(RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,0>(v_238),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,0>(v_240),l_op1_e3_l_56_242))),RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,1>(v_238),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,1>(v_240),l_op1_e3_l_56_242)))));
    vec2 v_244 = VAdd<2,2>(VEC2(RAdd(RMul(l_r_187,l_r_217),RMul(l_r_189,l_r_219)),RAdd(RMul(l_r_187,l_r_218),RMul(l_r_189,l_r_220))),VEC2(RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,0>(v_239),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,0>(v_241),l_op1_e3_l_56_242))),RAdd(RMul(l_vdot_148,RDiv(VIndex<2,2,1>(v_239),l_op1_e3_l_56_242)),RMul(l_vdot_149,RDiv(VIndex<2,2,1>(v_241),l_op1_e3_l_56_242)))));
    tensor[2,2] t_245 = <tensor[2,2]>[VIndex<2,2,0>(v_243),VIndex<2,2,1>(v_243),VIndex<2,2,0>(v_244),VIndex<2,2,1>(v_244)];
    print("hess:",TensorRef<[2,2]>(t_245),"\n","norm:",Sqrt(RAdd(VDot<2,2>(v_243,v_243),VDot<2,2>(v_244,v_244))),"\n");
    tensor[2] _arg_246 = PACK(v_190);
    print("Grad:",TensorRef<[2]>(_arg_246),"\n");
    vec2 v_247 = VEC2(l_f0_141,l_f1_211);
    tensor[2] _arg_248 = PACK(v_247);
    print("vals:",TensorRef<[2]>(_arg_248),"\n");
    bool l__t_249 = GT<real>(l_f0_141,0.e0);
    vec3{4} v_250 = v_101;
    vec2 v_251 = v_247;
    if (l__t_249) {
      l__t_252 = 1;
    } else {
      int l__t_253;
      if (LT<real>(l_f0_141,0.e0)) {
        l__t_253 = -1;
      } else {
        l__t_253 = 0;
      }
      l__t_252 = l__t_253;
    }
    bool l__t_254 = GT<real>(l_f1_211,0.e0);
    if (l__t_254) {
      l__t_255 = 1;
    } else {
      int l__t_256;
      if (LT<real>(l_f1_211,0.e0)) {
        l__t_256 = -1;
      } else {
        l__t_256 = 0;
      }
      l__t_255 = l__t_256;
    }
    if (BNot(GT<int>(IMul(l__t_252,l__t_255),0))) {
      int l__t_259;
      int l__t_257;
      if (l__t_249) {
        l__t_257 = 1;
      } else {
        int l__t_258;
        if (LT<real>(l_f0_141,0.e0)) {
          l__t_258 = -1;
        } else {
          l__t_258 = 0;
        }
        l__t_257 = l__t_258;
      }
      if (l__t_254) {
        l__t_259 = 1;
      } else {
        int l__t_260;
        if (LT<real>(l_f1_211,0.e0)) {
          l__t_260 = -1;
        } else {
          l__t_260 = 0;
        }
        l__t_259 = l__t_260;
      }
      if (EQ<int>(IMul(l__t_257,l__t_259),0)) {
        print("Warn: 0 update\n");
      }
      print("update with interval:",l_gradEps_194,"\n");
      print("Pixel Ui/Vi:",self.ui,"/",self.vi,"\n");
      print("Count:",self.count,"\n");
      tensor[2] _arg_261 = PACK(v_251);
      print("Vals I:",TensorRef<[2]>(_arg_261),"\n");
      real l__t_262 = RAdd(self.s,l_gradEps_194);
      vec2 v_263 = VEC2(self.s,l__t_262);
      tensor[2] _arg_264 = PACK(v_263);
      print("New interval:",TensorRef<[2]>(_arg_264),"\n");
      tensor[2] _arg_265 = PACK(v_263);
      vec3{4} v_266 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l__t_262,LOAD_0(TensorRef<[3]>(globals.rayVec))));
      tensor[2,3] t_267 = <tensor[2,3]>[VIndex<3,4,0>(v_250),VIndex<3,4,1>(v_250),VIndex<3,4,2>(v_250),VIndex<3,4,0>(v_266),VIndex<3,4,1>(v_266),VIndex<3,4,2>(v_266)];
      l_totalCount_268 = IAdd(self.totalCount,1);
      l_count_269 = IAdd(self.count,1);
      l_newCells_270 = Append<femData(MeshCell),femData(MeshCell)>(self.newCells,self.cc);
      l_sints_271 = Append<tensor[2,3],tensor[2,3]>(self.sints,t_267);
      l_intervals_272 = Append<tensor[2],tensor[2]>(self.intervals,_arg_265);
      l__t_273 = l__t_262;
    } else {
      real t_274 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(l__t_105,l__t_192);
      real l_epsUpdate_275 = Max<real>(l_gradEps_194,RDiv(Abs<real>(l_f0_141),RMul(0.2e1,t_274)));
      print("update L:",l_epsUpdate_275,"\n");
      print("update G:",l_gradEps_194,"\n");
      l_totalCount_268 = self.totalCount;
      l_count_269 = self.count;
      l_newCells_270 = self.newCells;
      l_sints_271 = self.sints;
      l_intervals_272 = self.intervals;
      l__t_273 = RAdd(self.s,l_epsUpdate_275);
    }
    if (GTE<real>(l__t_273,self.e)) {
      vec2 v_285;
      real l_s_284;
      real l_e_283;
      femData(MeshCell) l_cc_282;
      femData(FuncCell) l__t_281;
      int l__t_280;
      int l_itter_276 = IAdd(self.itter,1);
      if (GTE<int>(l_itter_276,self.len)) {
        print("TotalCount:",l_totalCount_268,"\n");
        print("Intervals:",l_intervals_272,"\n");
        print("Cells:",l_newCells_270,"\n");
        print(self.ui,";",self.vi,"++++++++++++++End Pixel++++++++++++++++++\n");
        self.itter = l_itter_276;
        self.s = l__t_273;
        self.intervals = l_intervals_272;
        self.sints = l_sints_271;
        self.newCells = l_newCells_270;
        self.count = l_count_269;
        self.totalCount = l_totalCount_268;
        stabilize;
      } else {
        print("++++++++++++++New Cell++++++++++++++++++\n");
        int l__t_277 = IAdd(self.offset,l_itter_276);
        &tensor[2] l_interval_278 = Subscript<tensor[2][]>(globals.times,l__t_277);
        femData(MeshCell) l_cc_279 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,l__t_277));
        l__t_280 = 0;
        l__t_281 = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_279));
        l_cc_282 = l_cc_279;
        l_e_283 = TensorIndex<&tensor[2],[1]>(l_interval_278);
        l_s_284 = TensorIndex<&tensor[2],[0]>(l_interval_278);
        v_285 = LOAD_0(l_interval_278);
      }
      l_count_286 = l__t_280;
      l_fc_287 = l__t_281;
      l_cc_288 = l_cc_282;
      l_e_289 = l_e_283;
      l_s_290 = l_s_284;
      v_291 = v_285;
      l_itter_292 = l_itter_276;
    } else {
      l_count_286 = l_count_269;
      l_fc_287 = self.fc;
      l_cc_288 = self.cc;
      l_e_289 = self.e;
      l_s_290 = l__t_273;
      v_291 = LOAD_0(TensorRef<[2]>(self.interval));
      l_itter_292 = self.itter;
    }
    self.itter = l_itter_292;
    self.interval = PACK(v_291);
    self.s = l_s_290;
    self.e = l_e_289;
    self.cc = l_cc_288;
    self.fc = l_fc_287;
    self.intervals = l_intervals_272;
    self.sints = l_sints_271;
    self.newCells = l_newCells_270;
    self.count = l_count_286;
    self.totalCount = l_totalCount_268;
    active;
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_294 = 0 to ISub(globals.iresU,1) {
      for i_ui_295 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_295,i_vi_294);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.067     3.400
    front end .......................................................................   0.400     0.490
      parser ........................................................................   0.058     0.058
      typechecker ...................................................................   0.032     0.032
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.021     0.021
    High IR optimization ............................................................   0.030     0.074
      High IR value numbering .......................................................   0.018     0.018
      High IR normalization .........................................................   0.026     0.026
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.090     0.090
    Mid IR optimization .............................................................   0.030     0.057
      Mid IR contraction ............................................................   0.006     0.006
      Mid IR value numbering ........................................................   0.019     0.019
      Mid IR border control .........................................................   0.002     0.002
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.038     0.038
    Low IR optimization .............................................................   0.054     0.127
      Low IR contraction ............................................................   0.036     0.036
      Low IR value numbering ........................................................   0.038     0.038
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.037     0.037
    Tree IR optimization ............................................................   0.008     0.009
      Tree IR contraction ...........................................................   0.000     0.000
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.042     2.390
      C compiler ....................................................................   2.348     2.348
