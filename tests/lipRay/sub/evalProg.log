/* ParseTree: After parsing */
  Program @ [evalProg.diderot:2.1-109.0] 
    [
      Type: msh= @ [evalProg.diderot:2.1-3.0] 
        Mesh @ [evalProg.diderot:2.6-10] 
        From File : evalProg.json @ [evalProg.diderot:2.1-3.0] 
      Type: fns= @ [evalProg.diderot:3.1-4.0] 
        FunctionSpace(msh) @ [evalProg.diderot:3.6-26] 
          [ ]
        From File : evalProg.json @ [evalProg.diderot:3.1-4.0] 
      Type: func= @ [evalProg.diderot:4.1-5.0] 
        FemFunction(fns) @ [evalProg.diderot:4.6-22] 
        From File : evalProg.json @ [evalProg.diderot:4.1-5.0] 
      Const: dim= @ [evalProg.diderot:8.1-9.0] 
        Select @ [evalProg.diderot:8.17-24] 
          Var: msh @ [evalProg.diderot:8.17-20] 
          dim
      Input: a @ [evalProg.diderot:10.1-11.0] 
      Input: b= @ [evalProg.diderot:11.1-12.0] 
        Apply @ [evalProg.diderot:11.15-21] 
          Var: fns @ [evalProg.diderot:11.15-18] 
          [
            Var: a @ [evalProg.diderot:11.19-20] 
          ]
      Input: c= @ [evalProg.diderot:12.1-13.0] 
        Apply @ [evalProg.diderot:12.16-23] 
          Var: func @ [evalProg.diderot:12.16-20] 
          [
            Var: b @ [evalProg.diderot:12.21-22] 
          ]
      Input: isoval= @ [evalProg.diderot:16.1-25] 
        Lit: 0.2e0 @ [evalProg.diderot:16.21-24] 
      Input: thick= @ [evalProg.diderot:16.27-17.0] 
        Lit: 0.7e-1 @ [evalProg.diderot:16.46-50] 
      Input: camEye= @ [evalProg.diderot:17.1-36] 
        Cons @ [evalProg.diderot:17.21-35] 
          [
            UnaryOp: unary - @ [evalProg.diderot:17.22-26] 
              Lit: 0.5e0 @ [evalProg.diderot:17.23-26] 
            Lit: 0.5e0 @ [evalProg.diderot:17.27-30] 
            Lit: 0.5e0 @ [evalProg.diderot:17.31-34] 
          ]
      Input: camAt= @ [evalProg.diderot:17.38-71] 
        Cons @ [evalProg.diderot:17.57-70] 
          [
            Lit: 0.5e0 @ [evalProg.diderot:17.58-61] 
            Lit: 0.5e0 @ [evalProg.diderot:17.62-65] 
            Lit: 0.5e0 @ [evalProg.diderot:17.66-69] 
          ]
      Input: camUp= @ [evalProg.diderot:17.74-18.0] 
        Cons @ [evalProg.diderot:17.93-100] 
          [
            Lit: 0 @ [evalProg.diderot:17.94-95] 
            Lit: 0 @ [evalProg.diderot:17.96-97] 
            Lit: 1 @ [evalProg.diderot:17.98-99] 
          ]
      Input: camFOV= @ [evalProg.diderot:18.1-26] 
        Lit: 0.137e2 @ [evalProg.diderot:18.21-25] 
      Input: iresU= @ [evalProg.diderot:18.28-49] 
        Lit: 10 @ [evalProg.diderot:18.46-48] 
      Input: iresV= @ [evalProg.diderot:18.53-19.0] 
        Lit: 10 @ [evalProg.diderot:18.71-73] 
      Input: camNear= @ [evalProg.diderot:19.1-25] 
        UnaryOp: unary - @ [evalProg.diderot:19.22-24] 
          Lit: 2 @ [evalProg.diderot:19.23-24] 
      Input: camFar= @ [evalProg.diderot:19.26-48] 
        Lit: 5 @ [evalProg.diderot:19.46-47] 
      Input: refStep= @ [evalProg.diderot:20.1-26] 
        Lit: 0.1e1 @ [evalProg.diderot:20.22-25] 
      Input: rayStep= @ [evalProg.diderot:20.27-21.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:20.47-51] 
      Input: lightVsp= @ [evalProg.diderot:21.1-39] 
        Cons @ [evalProg.diderot:21.23-38] 
          [
            Lit: 0.e0 @ [evalProg.diderot:21.24-27] 
            Lit: 0.e0 @ [evalProg.diderot:21.29-32] 
            Lit: 0.1e1 @ [evalProg.diderot:21.34-37] 
          ]
      Input: phongKa= @ [evalProg.diderot:22.1-26] 
        Lit: 0.1e0 @ [evalProg.diderot:22.22-25] 
      Input: phongKd= @ [evalProg.diderot:22.27-23.0] 
        Lit: 0.9e0 @ [evalProg.diderot:22.48-51] 
      Input: debug= @ [evalProg.diderot:24.1-25.0] 
        Lit: false @ [evalProg.diderot:24.20-25] 
      Input: debugU= @ [evalProg.diderot:25.1-26.0] 
        Lit: 8 @ [evalProg.diderot:25.20-21] 
      Input: debugV= @ [evalProg.diderot:26.1-27.0] 
        Lit: 2 @ [evalProg.diderot:26.20-21] 
      Input: eps= @ [evalProg.diderot:27.1-28.0] 
        Lit: 0.1e-8 @ [evalProg.diderot:27.18-29] 
      Input: indecies @ [evalProg.diderot:29.1-22] 
      Input: times @ [evalProg.diderot:30.1-31.0] 
      Input: cells @ [evalProg.diderot:31.1-32.0] 
      Var @ [evalProg.diderot:33.1-34.0] 
        Decl: camDist= @ [evalProg.diderot:33.1-34.0] 
          UnaryOp: |()| @ [evalProg.diderot:33.16-32] 
            BinOp: - @ [evalProg.diderot:33.17-31] 
              Var: camAt @ [evalProg.diderot:33.17-22] 
              Var: camEye @ [evalProg.diderot:33.25-31] 
      Var @ [evalProg.diderot:34.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:34.1-37] 
          BinOp: + @ [evalProg.diderot:34.19-36] 
            Var: camNear @ [evalProg.diderot:34.19-26] 
            Var: camDist @ [evalProg.diderot:34.29-36] 
      Var @ [evalProg.diderot:35.1-35] 
        Decl: camFarVsp= @ [evalProg.diderot:35.1-35] 
          BinOp: + @ [evalProg.diderot:35.18-34] 
            Var: camFar @ [evalProg.diderot:35.18-24] 
            Var: camDist @ [evalProg.diderot:35.27-34] 
      Var @ [evalProg.diderot:36.1-39] 
        Decl: camN= @ [evalProg.diderot:36.1-39] 
          Apply @ [evalProg.diderot:36.13-38] 
            Var: normalize @ [evalProg.diderot:36.13-22] 
            [
              BinOp: - @ [evalProg.diderot:36.23-37] 
                Var: camAt @ [evalProg.diderot:36.23-28] 
                Var: camEye @ [evalProg.diderot:36.31-37] 
            ]
      Var @ [evalProg.diderot:37.1-38] 
        Decl: camU= @ [evalProg.diderot:37.1-38] 
          Apply @ [evalProg.diderot:37.13-37] 
            Var: normalize @ [evalProg.diderot:37.13-22] 
            [
              BinOp: × @ [evalProg.diderot:37.23-36] 
                Var: camN @ [evalProg.diderot:37.23-27] 
                Var: camUp @ [evalProg.diderot:37.31-36] 
            ]
      Var @ [evalProg.diderot:38.1-26] 
        Decl: camV= @ [evalProg.diderot:38.1-26] 
          BinOp: × @ [evalProg.diderot:38.13-25] 
            Var: camU @ [evalProg.diderot:38.13-17] 
            Var: camN @ [evalProg.diderot:38.21-25] 
      Var @ [evalProg.diderot:39.1-40.0] 
        Decl: camVmax= @ [evalProg.diderot:39.1-40.0] 
          BinOp: * @ [evalProg.diderot:39.16-42] 
            Apply @ [evalProg.diderot:39.16-34] 
              Var: tan @ [evalProg.diderot:39.16-19] 
              [
                BinOp: / @ [evalProg.diderot:39.20-33] 
                  BinOp: * @ [evalProg.diderot:39.20-29] 
                    Var: camFOV @ [evalProg.diderot:39.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:39.27-29] 
                  Lit: 360 @ [evalProg.diderot:39.30-33] 
              ]
            Var: camDist @ [evalProg.diderot:39.35-42] 
      Var @ [evalProg.diderot:40.1-41.0] 
        Decl: camUmax= @ [evalProg.diderot:40.1-41.0] 
          BinOp: / @ [evalProg.diderot:40.16-35] 
            BinOp: * @ [evalProg.diderot:40.16-29] 
              Var: camVmax @ [evalProg.diderot:40.16-23] 
              Var: iresU @ [evalProg.diderot:40.24-29] 
            Var: iresV @ [evalProg.diderot:40.30-35] 
      Var @ [evalProg.diderot:41.1-42.0] 
        Decl: light= @ [evalProg.diderot:41.1-42.0] 
          BinOp: • @ [evalProg.diderot:41.14-63] 
            Apply @ [evalProg.diderot:41.14-41] 
              Var: transpose @ [evalProg.diderot:41.14-23] 
              [
                Cons @ [evalProg.diderot:41.24-40] 
                  [
                    Var: camU @ [evalProg.diderot:41.25-29] 
                    Var: camV @ [evalProg.diderot:41.30-34] 
                    Var: camN @ [evalProg.diderot:41.35-39] 
                  ]
              ]
            Apply @ [evalProg.diderot:41.44-63] 
              Var: normalize @ [evalProg.diderot:41.44-53] 
              [
                Var: lightVsp @ [evalProg.diderot:41.54-62] 
              ]
      Var @ [evalProg.diderot:42.1-43.0] 
        Decl: rayVec= @ [evalProg.diderot:42.1-43.0] 
          Var: camN @ [evalProg.diderot:42.15-19] 
      Func: sign @ [evalProg.diderot:43.1-48.1] 
        Int @ [evalProg.diderot:43.10-14] 
        [
          Param: x @ [evalProg.diderot:43.19-25] 
            Tensor @ [evalProg.diderot:43.19-24] 
              [ ]
        ]
        Stmt @ [evalProg.diderot:43.1-48.1] 
          IfThenElse @ [evalProg.diderot:44.3-47.0] 
            BinOp: > @ [evalProg.diderot:44.7-14] 
              Var: x @ [evalProg.diderot:44.7-8] 
              Lit: 0.e0 @ [evalProg.diderot:44.11-14] 
            Return @ [evalProg.diderot:44.17-27] 
              Lit: 1 @ [evalProg.diderot:44.24-25] 
            IfThenElse @ [evalProg.diderot:45.8-47.0] 
              BinOp: < @ [evalProg.diderot:45.12-19] 
                Var: x @ [evalProg.diderot:45.12-13] 
                Lit: 0.e0 @ [evalProg.diderot:45.16-19] 
              Return @ [evalProg.diderot:45.21-32] 
                UnaryOp: unary - @ [evalProg.diderot:45.28-30] 
                  Lit: 1 @ [evalProg.diderot:45.29-30] 
              Return @ [evalProg.diderot:46.9-19] 
                Lit: 0 @ [evalProg.diderot:46.16-17] 
    ]
    Strand: ray @ [evalProg.diderot:48.1-108.3] 
      [
        Param: ui @ [evalProg.diderot:48.12-18] 
          Int @ [evalProg.diderot:48.12-16] 
        Param: vi @ [evalProg.diderot:48.20-26] 
          Int @ [evalProg.diderot:48.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:49.3-60] 
        VarDcl @ [evalProg.diderot:50.3-51.0] 
        VarDcl @ [evalProg.diderot:51.3-52.0] 
        VarDcl @ [evalProg.diderot:52.3-53.0] 
        VarDcl @ [evalProg.diderot:53.3-42] 
        VarDcl @ [evalProg.diderot:54.3-54] 
        VarDcl @ [evalProg.diderot:55.3-56.0] 
        VarDcl @ [evalProg.diderot:56.3-57.0] 
        VarDcl @ [evalProg.diderot:57.3-58.0] 
        VarDcl @ [evalProg.diderot:58.3-59.0] 
        VarDcl @ [evalProg.diderot:59.3-60.0] 
        VarDcl @ [evalProg.diderot:60.3-61.0] 
        VarDcl @ [evalProg.diderot:61.3-62.0] 
        VarDcl: output @ [evalProg.diderot:64.3-65.0] 
        VarDcl: output @ [evalProg.diderot:65.3-66.0] 
      ]
      [
        Method: Start @ [evalProg.diderot:66.3-71.3] 
          Block @ [evalProg.diderot:66.8-70.4] 
            [
              IfThen @ [evalProg.diderot:67.5-68.5] 
                BinOp: == @ [evalProg.diderot:67.8-16] 
                  Var: len @ [evalProg.diderot:67.8-11] 
                  Lit: 0 @ [evalProg.diderot:67.15-16] 
                Stabilize @ [evalProg.diderot:67.18-28] 
              Assign: cc= @ [evalProg.diderot:68.5-69.0] 
                Subscript @ [evalProg.diderot:68.10-29] 
                  Select @ [evalProg.diderot:68.10-29] 
                    Var: a @ [evalProg.diderot:68.10-11] 
                    cells
                  [
                    Subscript @ [evalProg.diderot:68.18-28] 
                      Var: cells @ [evalProg.diderot:68.18-23] 
                      [
                        Var: idx @ [evalProg.diderot:68.24-27] 
                      ]
                  ]
              Assign: fc= @ [evalProg.diderot:69.5-70.0] 
                Apply @ [evalProg.diderot:69.10-24] 
                  Select @ [evalProg.diderot:69.10-24] 
                    Var: c @ [evalProg.diderot:69.10-11] 
                    funcCell
                  [
                    Var: cc @ [evalProg.diderot:69.21-23] 
                  ]
            ]
        Method: Update @ [evalProg.diderot:71.3-108.1] 
          Block @ [evalProg.diderot:71.10-107.0] 
            [
              IfThen @ [evalProg.diderot:73.5-74.5] 
                BinOp: < @ [evalProg.diderot:73.8-16] 
                  Var: len @ [evalProg.diderot:73.8-11] 
                  Lit: 1 @ [evalProg.diderot:73.15-16] 
                Stabilize @ [evalProg.diderot:73.18-28] 
              Decl @ [evalProg.diderot:71.10-107.0] 
                Decl: rayStart= @ [evalProg.diderot:74.5-75.0] 
                  BinOp: + @ [evalProg.diderot:74.21-41] 
                    Var: rayOrig @ [evalProg.diderot:74.21-28] 
                    BinOp: * @ [evalProg.diderot:74.31-41] 
                      Var: rayVec @ [evalProg.diderot:74.31-37] 
                      Var: s @ [evalProg.diderot:74.40-41] 
              Decl @ [evalProg.diderot:71.10-107.0] 
                Decl: project= @ [evalProg.diderot:75.5-76.0] 
                  Cons @ [evalProg.diderot:75.20-46] 
                    [
                      Subscript @ [evalProg.diderot:75.21-32] 
                        Var: rayStart @ [evalProg.diderot:75.21-29] 
                        [
                          Lit: 0 @ [evalProg.diderot:75.30-31] 
                        ]
                      Subscript @ [evalProg.diderot:75.34-45] 
                        Var: rayStart @ [evalProg.diderot:75.34-42] 
                        [
                          Lit: 1 @ [evalProg.diderot:75.43-44] 
                        ]
                    ]
              Decl @ [evalProg.diderot:71.10-107.0] 
                Decl: f0= @ [evalProg.diderot:76.5-77.0] 
                  BinOp: - @ [evalProg.diderot:76.15-75] 
                    Apply @ [evalProg.diderot:76.15-61] 
                      BinOp: ∘ @ [evalProg.diderot:76.16-51] 
                        Select @ [evalProg.diderot:76.16-27] 
                          Var: fc @ [evalProg.diderot:76.16-18] 
                          refField
                        Select @ [evalProg.diderot:76.32-51] 
                          Var: cc @ [evalProg.diderot:76.32-34] 
                          inverseTransform
                      [
                        Var: project @ [evalProg.diderot:76.53-60] 
                      ]
                    Subscript @ [evalProg.diderot:76.64-75] 
                      Var: rayStart @ [evalProg.diderot:76.64-72] 
                      [
                        Lit: 2 @ [evalProg.diderot:76.73-74] 
                      ]
              Decl @ [evalProg.diderot:71.10-107.0] 
                Decl: gradEps= @ [evalProg.diderot:77.5-78.0] 
                  Apply @ [evalProg.diderot:77.20-131] 
                    Var: min @ [evalProg.diderot:77.20-23] 
                    [
                      BinOp: / @ [evalProg.diderot:77.24-123] 
                        UnaryOp: |()| @ [evalProg.diderot:77.25-115] 
                          BinOp: - @ [evalProg.diderot:77.26-114] 
                            BinOp: • @ [evalProg.diderot:77.26-103] 
                              Cons @ [evalProg.diderot:77.26-48] 
                                [
                                  Subscript @ [evalProg.diderot:77.27-36] 
                                    Var: rayVec @ [evalProg.diderot:77.27-33] 
                                    [
                                      Lit: 0 @ [evalProg.diderot:77.34-35] 
                                    ]
                                  Subscript @ [evalProg.diderot:77.38-47] 
                                    Var: rayVec @ [evalProg.diderot:77.38-44] 
                                    [
                                      Lit: 1 @ [evalProg.diderot:77.45-46] 
                                    ]
                                ]
                              Apply @ [evalProg.diderot:77.53-102] 
                                UnaryOp: ∇ @ [evalProg.diderot:77.53-93] 
                                  BinOp: ∘ @ [evalProg.diderot:77.57-92] 
                                    Select @ [evalProg.diderot:77.57-68] 
                                      Var: fc @ [evalProg.diderot:77.57-59] 
                                      refField
                                    Select @ [evalProg.diderot:77.73-92] 
                                      Var: cc @ [evalProg.diderot:77.73-75] 
                                      inverseTransform
                                [
                                  Var: project @ [evalProg.diderot:77.94-101] 
                                ]
                            Subscript @ [evalProg.diderot:77.105-114] 
                              Var: rayVec @ [evalProg.diderot:77.105-111] 
                              [
                                Lit: 2 @ [evalProg.diderot:77.112-113] 
                              ]
                        Select @ [evalProg.diderot:77.118-122] 
                          Var: cc @ [evalProg.diderot:77.118-120] 
                          G
                      BinOp: - @ [evalProg.diderot:77.125-130] 
                        Var: e @ [evalProg.diderot:77.125-126] 
                        Var: s @ [evalProg.diderot:77.129-130] 
                    ]
              Decl @ [evalProg.diderot:71.10-107.0] 
                Decl: f1= @ [evalProg.diderot:78.5-79.0] 
                  BinOp: - @ [evalProg.diderot:78.15-130] 
                    BinOp: - @ [evalProg.diderot:78.15-111] 
                      Apply @ [evalProg.diderot:78.15-96] 
                        BinOp: ∘ @ [evalProg.diderot:78.16-51] 
                          Select @ [evalProg.diderot:78.16-27] 
                            Var: fc @ [evalProg.diderot:78.16-18] 
                            refField
                          Select @ [evalProg.diderot:78.32-51] 
                            Var: cc @ [evalProg.diderot:78.32-34] 
                            inverseTransform
                        [
                          BinOp: + @ [evalProg.diderot:78.53-95] 
                            Var: project @ [evalProg.diderot:78.53-60] 
                            BinOp: * @ [evalProg.diderot:78.63-95] 
                              Var: gradEps @ [evalProg.diderot:78.63-70] 
                              Cons @ [evalProg.diderot:78.73-95] 
                                [
                                  Subscript @ [evalProg.diderot:78.74-83] 
                                    Var: rayVec @ [evalProg.diderot:78.74-80] 
                                    [
                                      Lit: 0 @ [evalProg.diderot:78.81-82] 
                                    ]
                                  Subscript @ [evalProg.diderot:78.85-94] 
                                    Var: rayVec @ [evalProg.diderot:78.85-91] 
                                    [
                                      Lit: 1 @ [evalProg.diderot:78.92-93] 
                                    ]
                                ]
                        ]
                      Subscript @ [evalProg.diderot:78.99-110] 
                        Var: rayStart @ [evalProg.diderot:78.99-107] 
                        [
                          Lit: 2 @ [evalProg.diderot:78.108-109] 
                        ]
                    BinOp: * @ [evalProg.diderot:78.113-130] 
                      Var: gradEps @ [evalProg.diderot:78.113-120] 
                      Subscript @ [evalProg.diderot:78.121-130] 
                        Var: rayVec @ [evalProg.diderot:78.121-127] 
                        [
                          Lit: 2 @ [evalProg.diderot:78.128-129] 
                        ]
              Print @ [evalProg.diderot:79.5-80.0] 
                [
                  Lit: "vals:" @ [evalProg.diderot:79.11-18] 
                  Cons @ [evalProg.diderot:79.20-27] 
                    [
                      Var: f0 @ [evalProg.diderot:79.21-23] 
                      Var: f1 @ [evalProg.diderot:79.24-26] 
                    ]
                  Lit: "\n" @ [evalProg.diderot:79.29-33] 
                ]
              IfThenElse @ [evalProg.diderot:80.5-97.0] 
                UnaryOp: ! @ [evalProg.diderot:80.9-35] 
                  BinOp: > @ [evalProg.diderot:80.11-33] 
                    BinOp: * @ [evalProg.diderot:80.11-31] 
                      Apply @ [evalProg.diderot:80.11-19] 
                        Var: sign @ [evalProg.diderot:80.11-15] 
                        [
                          Var: f0 @ [evalProg.diderot:80.16-18] 
                        ]
                      Apply @ [evalProg.diderot:80.22-30] 
                        Var: sign @ [evalProg.diderot:80.22-26] 
                        [
                          Var: f1 @ [evalProg.diderot:80.27-29] 
                        ]
                    Lit: 0 @ [evalProg.diderot:80.32-33] 
                Block @ [evalProg.diderot:80.36-91.6] 
                  [
                    IfThen @ [evalProg.diderot:82.7-85.7] 
                      BinOp: == @ [evalProg.diderot:82.11-34] 
                        BinOp: * @ [evalProg.diderot:82.11-31] 
                          Apply @ [evalProg.diderot:82.11-19] 
                            Var: sign @ [evalProg.diderot:82.11-15] 
                            [
                              Var: f0 @ [evalProg.diderot:82.16-18] 
                            ]
                          Apply @ [evalProg.diderot:82.22-30] 
                            Var: sign @ [evalProg.diderot:82.22-26] 
                            [
                              Var: f1 @ [evalProg.diderot:82.27-29] 
                            ]
                        Lit: 0 @ [evalProg.diderot:82.33-34] 
                      Print @ [evalProg.diderot:83.2-84.0] 
                        [
                          Lit: "Warn: 0 update\n" @ [evalProg.diderot:83.8-26] 
                        ]
                    Print @ [evalProg.diderot:85.7-86.0] 
                      [
                        Lit: "update with interval:" @ [evalProg.diderot:85.13-36] 
                        Var: gradEps @ [evalProg.diderot:85.38-45] 
                        Lit: "\n" @ [evalProg.diderot:85.47-51] 
                      ]
                    Print @ [evalProg.diderot:86.7-87.0] 
                      [
                        Lit: "Vals I:" @ [evalProg.diderot:86.13-22] 
                        Cons @ [evalProg.diderot:86.24-32] 
                          [
                            Var: f0 @ [evalProg.diderot:86.25-27] 
                            Var: f1 @ [evalProg.diderot:86.29-31] 
                          ]
                        Lit: "\n" @ [evalProg.diderot:86.33-37] 
                      ]
                    Print @ [evalProg.diderot:87.7-88.0] 
                      [
                        Lit: "New interval:" @ [evalProg.diderot:87.13-28] 
                        Cons @ [evalProg.diderot:87.30-46] 
                          [
                            Var: s @ [evalProg.diderot:87.31-32] 
                            BinOp: + @ [evalProg.diderot:87.34-45] 
                              Var: s @ [evalProg.diderot:87.34-35] 
                              Var: gradEps @ [evalProg.diderot:87.38-45] 
                          ]
                        Lit: "\n" @ [evalProg.diderot:87.47-51] 
                      ]
                    Assign: intervals= @ [evalProg.diderot:88.7-89.0] 
                      BinOp: @ @ [evalProg.diderot:88.17-43] 
                        Var: intervals @ [evalProg.diderot:88.17-26] 
                        Cons @ [evalProg.diderot:88.27-43] 
                          [
                            Var: s @ [evalProg.diderot:88.28-29] 
                            BinOp: + @ [evalProg.diderot:88.31-42] 
                              Var: s @ [evalProg.diderot:88.31-32] 
                              Var: gradEps @ [evalProg.diderot:88.35-42] 
                          ]
                    Assign: newCells= @ [evalProg.diderot:89.7-90.0] 
                      BinOp: @ @ [evalProg.diderot:89.16-27] 
                        Var: newCells @ [evalProg.diderot:89.16-24] 
                        Var: cc @ [evalProg.diderot:89.25-27] 
                    Assign: s+= @ [evalProg.diderot:90.7-91.0] 
                      Var: gradEps @ [evalProg.diderot:90.10-17] 
                  ]
                Block @ [evalProg.diderot:91.12-97.0] 
                  [
                    Decl @ [evalProg.diderot:91.12-97.0] 
                      Decl: epsUpdate= @ [evalProg.diderot:92.7-93.0] 
                        Apply @ [evalProg.diderot:92.24-50] 
                          Var: max @ [evalProg.diderot:92.24-27] 
                          [
                            Var: gradEps @ [evalProg.diderot:92.28-35] 
                            BinOp: / @ [evalProg.diderot:92.36-49] 
                              UnaryOp: |()| @ [evalProg.diderot:92.36-40] 
                                Var: f0 @ [evalProg.diderot:92.37-39] 
                              BinOp: * @ [evalProg.diderot:92.42-48] 
                                Lit: 2 @ [evalProg.diderot:92.42-43] 
                                Select @ [evalProg.diderot:92.44-48] 
                                  Var: cc @ [evalProg.diderot:92.44-46] 
                                  L
                          ]
                    Print @ [evalProg.diderot:93.7-94.0] 
                      [
                        Lit: "update L:" @ [evalProg.diderot:93.13-24] 
                        Var: epsUpdate @ [evalProg.diderot:93.26-35] 
                        Lit: "\n" @ [evalProg.diderot:93.37-41] 
                      ]
                    Print @ [evalProg.diderot:94.7-95.0] 
                      [
                        Lit: "update G:" @ [evalProg.diderot:94.13-24] 
                        Var: gradEps @ [evalProg.diderot:94.26-33] 
                        Lit: "\n" @ [evalProg.diderot:94.35-39] 
                      ]
                    Assign: s+= @ [evalProg.diderot:95.7-96.0] 
                      Var: epsUpdate @ [evalProg.diderot:95.10-19] 
                  ]
              IfThen @ [evalProg.diderot:98.5-106.3] 
                BinOp: >= @ [evalProg.diderot:98.9-15] 
                  Var: s @ [evalProg.diderot:98.9-10] 
                  Var: e @ [evalProg.diderot:98.14-15] 
                Block @ [evalProg.diderot:98.16-106.0] 
                  [
                    Assign: itter+= @ [evalProg.diderot:99.7-100.0] 
                      Lit: 1 @ [evalProg.diderot:99.14-15] 
                    IfThenElse @ [evalProg.diderot:100.7-105.0] 
                      BinOp: >= @ [evalProg.diderot:100.10-22] 
                        Var: itter @ [evalProg.diderot:100.10-15] 
                        Var: len @ [evalProg.diderot:100.19-22] 
                      Stabilize @ [evalProg.diderot:100.25-35] 
                      Block @ [evalProg.diderot:100.42-105.0] 
                        [
                          Assign: interval= @ [evalProg.diderot:101.2-33] 
                            Subscript @ [evalProg.diderot:101.13-32] 
                              Var: times @ [evalProg.diderot:101.13-18] 
                              [
                                BinOp: + @ [evalProg.diderot:101.19-31] 
                                  Var: offset @ [evalProg.diderot:101.19-25] 
                                  Var: itter @ [evalProg.diderot:101.26-31] 
                              ]
                          Assign: cc= @ [evalProg.diderot:101.34-102.0] 
                            Subscript @ [evalProg.diderot:101.39-69] 
                              Select @ [evalProg.diderot:101.39-69] 
                                Var: a @ [evalProg.diderot:101.39-40] 
                                cells
                              [
                                Subscript @ [evalProg.diderot:101.47-68] 
                                  Var: cells @ [evalProg.diderot:101.47-52] 
                                  [
                                    BinOp: + @ [evalProg.diderot:101.53-67] 
                                      Var: offset @ [evalProg.diderot:101.53-59] 
                                      Var: itter @ [evalProg.diderot:101.62-67] 
                                  ]
                              ]
                          Assign: s= @ [evalProg.diderot:102.2-18] 
                            Subscript @ [evalProg.diderot:102.6-17] 
                              Var: interval @ [evalProg.diderot:102.6-14] 
                              [
                                Lit: 0 @ [evalProg.diderot:102.15-16] 
                              ]
                          Assign: e= @ [evalProg.diderot:102.19-103.0] 
                            Subscript @ [evalProg.diderot:102.23-34] 
                              Var: interval @ [evalProg.diderot:102.23-31] 
                              [
                                Lit: 1 @ [evalProg.diderot:102.32-33] 
                              ]
                          Assign: fc= @ [evalProg.diderot:103.2-104.0] 
                            Apply @ [evalProg.diderot:103.7-21] 
                              Select @ [evalProg.diderot:103.7-21] 
                                Var: c @ [evalProg.diderot:103.7-8] 
                                funcCell
                              [
                                Var: cc @ [evalProg.diderot:103.18-20] 
                              ]
                        ]
                  ]
            ]
      ]
    Grid @ [evalProg.diderot:108.3-109.0] 
      Comprehension @ [evalProg.diderot:108.16-65] 
        Apply @ [evalProg.diderot:108.17-27] 
          Var: ray @ [evalProg.diderot:108.17-20] 
          [
            Var: ui @ [evalProg.diderot:108.21-23] 
            Var: vi @ [evalProg.diderot:108.24-26] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:108.30-46] 
            Range @ [evalProg.diderot:108.36-46] 
              Lit: 0 @ [evalProg.diderot:108.36-37] 
              BinOp: - @ [evalProg.diderot:108.39-46] 
                Var: iresU @ [evalProg.diderot:108.39-44] 
                Lit: 1 @ [evalProg.diderot:108.45-46] 
          Iterator: ui @ [evalProg.diderot:108.48-64] 
            Range @ [evalProg.diderot:108.54-64] 
              Lit: 0 @ [evalProg.diderot:108.54-55] 
              BinOp: - @ [evalProg.diderot:108.57-64] 
                Var: iresV @ [evalProg.diderot:108.57-62] 
                Lit: 1 @ [evalProg.diderot:108.63-64] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStartMethod,HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 2;
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input FemType: Space with type var:msh b = loadFem(Space);
input FemType: FemFunc with type var:fns c = loadFem(FemFunc);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [-0.5e0, 0.5e0, 0.5e0];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 10;
input int iresV = 10;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int debugU = 8;
input int debugV = 2;
input real eps = 0.1e-8;
input int[] indecies;
input vec2[] times;
input int[] cells;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec2 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec2, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    cellInt = cellItter;
    A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
      xn = -<$[2]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
          }
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[2,2,2,2] msh_transform_3 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2,2]> (∇⊗<#; %2; $[2,2]; %2> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )))), pos);
  }
function tensor[2,2,2] msh_transform_2 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2]> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, ))), pos);
  }
function mat2 msh_transform_1 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )), pos);
  }
function vec2 msh_transform_0 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2]> (femField(mesh,cell,field(2)[2], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec2 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
    xn = -<$[2]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec2 (pos, msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec2 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec2 refPos, vec2 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec2,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), +<$[2]> ($sub<vec2; %3> ({[0.1e1, 0.e0], [0.e0, 0.e0], [0.e0, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), *<$[2]> ($sub<vec2; %3> ({[-0.1e1, 0.1e1], [0.e0, 0.1e1], [0.1e1, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), / (-<$[]> ($sub<real; %2> ({+<$[2]> (*<$[2]> (time[0], dPos), refPos)[0], +<$[2]> (*<$[2]> (time[0], dPos), refPos)[1]}, $sub<int; %3> ({1, 1, 0}, $r2i (time[1]))), $sub<real; %2> ($sub<real[2]; %3> ({{0.1e1, 0.e0}, {0.e0, 0.e0}, {0.e0, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))), $sub<real; %2> ($sub<real[2]; %3> ({{-0.1e1, 0.1e1}, {0.e0, 0.1e1}, {0.1e1, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))))), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec2 (mesh, +<$[2]> (*<$[2]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 6), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec2 refPos, vec2 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec2 refPos, vec2 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if != (i, 0) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    else {
      faceTime = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if != (i, 1) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if != (i, 2) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:msh domain (FemType: Space with type var:msh arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:msh space (FemType: FemFunc with type var:fns arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func funcCell (FemType: FemFunc with type var:fns arg0, FemType: MeshCell with type var:msh arg1)
{
  return loadFem(FuncCell);
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
vec3 rayVec = camN;
function int sign (real x)
{
  if > (x, 0.e0) {
    return 1;
    }
  else {
    if < (x, 0.e0) {
      return unary - (1);
      }
    else {
      return 0;
      }
    }
  }
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  vec3 rayOrig = +<$[3]> (camEye, UV);
  int offset = $dynsub<int> (indecies, + (* (ui, iresV), vi));
  int len = $dynsub<int> (indecies, + (+ (* (iresU, iresV), * (ui, iresV)), vi));
  int itter = 0;
  int idx = + (offset, itter);
  vec2 interval = $dynsub<vec2> (times, idx);
  real s = interval[0];
  real e = interval[1];
  FemType: MeshCell with type var:msh cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), 0);
  FemType: FuncCell with type var:func fc = funcCell (c, cc);
  output vec2[] intervals = (vec2[]){};
  output FemType: MeshCell with type var:msh[] newCells = (FemType: MeshCell with type var:msh[]){};
  start {
    if == (len, 0)
      stabilize;
      cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), $dynsub<int> (cells, idx));
    fc = funcCell (c, cc);
    }
  update {
    if < (len, 1)
      stabilize;
      vec3 rayStart = +<$[3]> (rayOrig, *<$[3]> (rayVec, s));
    vec2 project = [rayStart[0], rayStart[1]];
    real f0 = -<$[]> (@<#; %2; $[]> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)), project), rayStart[2]);
    real gradEps = min (/ (|()|<$[]> (-<$[]> (•<$[2]; $[2]; $[]> ([rayVec[0], rayVec[1]], @<#; %2; $[2]> (∇<#; %2> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse))), project)), rayVec[2])), extractFemItem(extractFem(Mesh,cc ), extractFemItem(cc, int, CellIndex(Mesh)) : int, real, CellData(G)(Mesh))), -<$[]> (e, s));
    real f1 = -<$[]> (-<$[]> (@<#; %2; $[]> (∘<#; %2; $[]; %2; $[2]> (femField(extractFem(FemFunc,fc ),extractFemItem(fc, int, CellIndex(FuncCell)),field(2)[], refField, ), femField(extractFem(Mesh,cc ),extractFemItem(cc, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse)), +<$[2]> (project, *<$[2]> (gradEps, [rayVec[0], rayVec[1]]))), rayStart[2]), * (gradEps, rayVec[2]));
    print ("vals:", [f0, f1], "\n");
    if ! (> (* (sign (f0), sign (f1)), 0)) {
      if == (* (sign (f0), sign (f1)), 0)
        print ("Warn: 0 update\n");
        print ("update with interval:", gradEps, "\n");
      print ("Vals I:", [f0, f1], "\n");
      print ("New interval:", [s, +<$[]> (s, gradEps)], "\n");
      intervals = @<vec2> (intervals, [s, +<$[]> (s, gradEps)]);
      newCells = @<FemType: MeshCell with type var:msh> (newCells, cc);
      s = +<$[]> (s, gradEps);
      }
    else {
      real epsUpdate = max (gradEps, / (|()|<$[]> (f0), * ((real)2, extractFemItem(extractFem(Mesh,cc ), extractFemItem(cc, int, CellIndex(Mesh)) : int, real, CellData(L)(Mesh)))));
      print ("update L:", epsUpdate, "\n");
      print ("update G:", gradEps, "\n");
      s = +<$[]> (s, epsUpdate);
      }
    if >= (s, e) {
      itter = + (itter, 1);
      if >= (itter, len) {
        stabilize;
        }
      else {
        interval = $dynsub<vec2> (times, + (offset, itter));
        cc = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), $dynsub<int> (cells, + (offset, itter)));
        s = interval[0];
        e = interval[1];
        fc = funcCell (c, cc);
        }
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresU, 1))) {
      foreach (int ui in $range (0, - (iresV, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global real camNearVsp07BE;
global real camFarVsp07BF;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 light07D2;
global vec3 rayVec07D3;
function bool#0 !=0438 (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043B = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t043C = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t043D = prim !=0086 (_t043B, _t043C);
  return _t043D;
}
function bool#0 ==043E (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043F = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t0440 = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t0441 = prim ==0082 (_t043F, _t0440);
  return _t0441;
}
function Femdata: MeshPos#0 findPos0442 (Femdata: Mesh mesh0443, vec2 pos0444)
{
  real _t0445 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0446 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0447 = [_t0445, _t0446];
  newtonInt0448 = 0;
  cellInt0449 = extractFemItem(StartCell(Mesh), int, mesh0443);
  int _t044A = extractFemItem(NumCell(Mesh), int, mesh0443);
  int _t044B = 1;
  numCell044C = prim -0024 (_t044A, _t044B);
  yayCells044D = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0443, pos0444 : vec2);
  foreach cellItter044E in yayCells044D {
    cellInt0449 = cellItter044E;
    field(2)[2] _t044F = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
    field(2)[2,2] _t0450 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t044F);
    field(2)[2,2] _t0451 = prim inv015B<#∞; %2> (_t0450);
    real _t0452 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0453 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0454 = [_t0452, _t0453];
    A0455 = prim @00A5<#∞; %2; $[2,2]> (_t0451, _t0454);
    int _t0456 = 0;
    int _t0457 = 16;
    int[] _t0458 = prim $range01C3 (_t0456, _t0457);
    foreach newtonItter047B in _t0458 {
      field(2)[2] _t0459 = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
      field(2)[2] _t045A = prim -002E<#∞; %2; $[2]> (_t0459, pos0444);
      field(2)[2] _t045B = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0455, _t045A);
      delta045C = prim @00A5<#∞; %2; $[2]> (_t045B, xn0447);
      xn0447 = prim -0026<$[2]> (xn0447, delta045C);
      real _t045D = 0.1e-7;
      real _t045E = 0.1e-7;
      real _t045F = prim *0034 (_t045D, _t045E);
      real _t0460 = prim •00CE<$[2]; $[2]; $[]> (delta045C, delta045C);
      bool _t0461 = prim >=007E (_t045F, _t0460);
      if _t0461 {
        real _t0462 = 0.1e1;
        real _t0463 = 0.1e-8;
        real _t0464 = prim +0017<$[]> (_t0462, _t0463);
        real _t0465 = 0.1e1;
        real _t0466 = 0.1e1;
        vec2 _t0467 = [_t0465, _t0466];
        real _t0468 = prim •00CE<$[2]; $[2]; $[]> (_t0467, xn0447);
        bool _t0469 = prim >0080 (_t0464, _t0468);
        real _t046A = 0.1e-8;
        real _t046B = 0.1e-8;
        vec2 _t046C = [_t046A, _t046B];
        vec2 _t046D = prim +0017<$[2]> (_t046C, xn0447);
        real _t046E = _t046D[0];
        real _t046F = -0.e0;
        bool _t0470 = prim >0080 (_t046E, _t046F);
        real _t0471 = 0.1e-8;
        real _t0472 = 0.1e-8;
        vec2 _t0473 = [_t0471, _t0472];
        vec2 _t0474 = prim +0017<$[2]> (_t0473, xn0447);
        real _t0475 = _t0474[1];
        real _t0476 = -0.e0;
        bool _t0477 = prim >0080 (_t0475, _t0476);
        bool _t0478 = prim $and01C4 (_t0470, _t0477);
        bool _t0479 = prim $and01C4 (_t0469, _t0478);
        if _t0479 {
          Femdata: MeshPos _t047A = extractFemItemN((mesh0443, cellInt0449, xn0447, pos0444),AllBuild(MeshPos),);
          return _t047A;
        }
      }
    }
  }
  string _t047C = "Bad end 2";
  string _t047D = "\n";
  print (_t047C, _t047D);
  Femdata: MeshPos _t047E = extractFemItemN((mesh0443),InvalidBuild(MeshPos),);
  return _t047E;
}
function Femdata: RefCell#0 refcell047F (Femdata: Mesh arg00480)
{
  Femdata: RefCell _t0481 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00480);
  return _t0481;
}
function Femdata: MeshCell[]#0 cells0482 (Femdata: Mesh arg00483)
{
  Femdata: MeshCell[] _t0484 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00483);
  return _t0484;
}
function Femdata: MeshCell[]#0 cells0485 (Femdata: Mesh arg00483)
{
  int _t0486 = 0;
  int _t0487 = extractFemItem(NumCell(Mesh), int, arg00483);
  int[] _t0488 = prim $range01C3 (_t0486, _t0487);
  Femdata: MeshCell[] accum048B = {};
  foreach i0489 in _t0488 {
    Femdata: MeshCell _t048A = loadFem(MeshCell, arg00483, i0489);
    accum048B = prim @0010<Femdata: MeshCell> (accum048B, _t048A);
  }
  return accum048B;
}
function int#0 numCell048C (Femdata: Mesh arg00480)
{
  int _t048D = extractFemItem(NumCell(Mesh), int, arg00480);
  return _t048D;
}
function tensor[2,2,2,2]#0 msh_transform_3048E (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0492 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0493 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0492);
  field(2)[2,2,2] _t0494 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0493);
  field(2)[2,2,2,2] _t0495 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t0494);
  tensor[2,2,2,2] _t0496 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t0495, pos048F);
  return _t0496;
}
function tensor[2,2,2]#0 msh_transform_20497 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0498 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0499 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0498);
  field(2)[2,2,2] _t049A = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0499);
  tensor[2,2,2] _t049B = prim @00A5<#∞; %2; $[2,2,2]> (_t049A, pos048F);
  return _t049B;
}
function tensor[2,2]#0 msh_transform_1049C (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t049D = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t049E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t049D);
  tensor[2,2] _t049F = prim @00A5<#∞; %2; $[2,2]> (_t049E, pos048F);
  return _t049F;
}
function vec2#2 msh_transform_004A0 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t04A1 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  vec2 _t04A2 = prim @00A5<#∞; %2; $[2]> (_t04A1, pos048F);
  return _t04A2;
}
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos04D9 (Femdata: MeshPos pos04DA)
{
  bool _t04DB = extractFemItem(WorldTest(MeshPos), bool, pos04DA);
  if _t04DB {
    vec2 _t04DC = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
    int _t04DD = extractFemItem(CellIndex(MeshPos), int, pos04DA);
    Femdata: Mesh _t04DE = extractFem(pos04DA, Mesh);
    vec2 _t04DF = func msh_transform_004A0 (_t04DC, _t04DD, _t04DE);
    Femdata: MeshPos _t04E0 = extractFemItemN((pos04DA, _t04DF),NewWorld(MeshPos),);
    return _t04E0;
  } else {
    return pos04DA;
  }
}
function vec2#0 worldPos04E1 (Femdata: MeshPos pos04DA)
{
  vec2 _t04E2 = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
  int _t04E3 = extractFemItem(CellIndex(MeshPos), int, pos04DA);
  Femdata: Mesh _t04E4 = extractFem(pos04DA, Mesh);
  vec2 _t04E5 = func msh_transform_004A0 (_t04E2, _t04E3, _t04E4);
  return _t04E5;
}
function Femdata: MeshPos#0 $exitPos04E6 (Femdata: Mesh mesh04E7, int cellId04E8, vec2 refPos04E9, vec2 dPos04EA, real[2] time04EB)
{
  int _t04EC = -1;
  real _t04ED = time04EB[1];
  int _t04EE = prim $r2i01B7 (_t04ED);
  int[2] _t04F0 = func nextCell404EF (_t04EE, cellId04E8, mesh04E7);
  int _t04F1 = 0;
  int _t04F2 = prim $sub01C0<int; %2> (_t04F0, _t04F1);
  bool _t04F3 = prim !=0086 (_t04EC, _t04F2);
  if _t04F3 {
    real _t04F4 = time04EB[1];
    int _t04F5 = prim $r2i01B7 (_t04F4);
    int[2] _t04F6 = func nextCell404EF (_t04F5, cellId04E8, mesh04E7);
    int _t04F7 = 0;
    int _t04F8 = prim $sub01C0<int; %2> (_t04F6, _t04F7);
    real _t04F9 = 0.1e1;
    real _t04FA = 0.e0;
    vec2 _t04FB = [_t04F9, _t04FA];
    real _t04FC = 0.e0;
    real _t04FD = 0.e0;
    vec2 _t04FE = [_t04FC, _t04FD];
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec2 _t0501 = [_t04FF, _t0500];
    vec2[3] _t0502 = {_t04FB, _t04FE, _t0501};
    real _t0503 = time04EB[1];
    int _t0504 = prim $r2i01B7 (_t0503);
    int[2] _t0505 = func nextCell404EF (_t0504, cellId04E8, mesh04E7);
    int _t0506 = 1;
    int _t0507 = prim $sub01C0<int; %2> (_t0505, _t0506);
    vec2 _t0508 = prim $sub01C0<vec2; %3> (_t0502, _t0507);
    real _t0509 = -0.1e1;
    real _t050A = 0.1e1;
    vec2 _t050B = [_t0509, _t050A];
    real _t050C = 0.e0;
    real _t050D = 0.1e1;
    vec2 _t050E = [_t050C, _t050D];
    real _t050F = 0.1e1;
    real _t0510 = 0.e0;
    vec2 _t0511 = [_t050F, _t0510];
    vec2[3] _t0512 = {_t050B, _t050E, _t0511};
    real _t0513 = time04EB[1];
    int _t0514 = prim $r2i01B7 (_t0513);
    int[2] _t0515 = func nextCell404EF (_t0514, cellId04E8, mesh04E7);
    int _t0516 = 1;
    int _t0517 = prim $sub01C0<int; %2> (_t0515, _t0516);
    vec2 _t0518 = prim $sub01C0<vec2; %3> (_t0512, _t0517);
    real _t0519 = time04EB[0];
    vec2 _t051A = prim *0036<$[2]> (_t0519, dPos04EA);
    vec2 _t051B = prim +0017<$[2]> (_t051A, refPos04E9);
    real _t051C = _t051B[0];
    real _t051D = time04EB[0];
    vec2 _t051E = prim *0036<$[2]> (_t051D, dPos04EA);
    vec2 _t051F = prim +0017<$[2]> (_t051E, refPos04E9);
    real _t0520 = _t051F[1];
    real[2] _t0521 = {_t051C, _t0520};
    int _t0522 = 1;
    int _t0523 = 1;
    int _t0524 = 0;
    int[3] _t0525 = {_t0522, _t0523, _t0524};
    real _t0526 = time04EB[1];
    int _t0527 = prim $r2i01B7 (_t0526);
    int _t0528 = prim $sub01C0<int; %3> (_t0525, _t0527);
    real _t0529 = prim $sub01C0<real; %2> (_t0521, _t0528);
    real _t052A = 0.1e1;
    real _t052B = 0.e0;
    real[2] _t052C = {_t052A, _t052B};
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    real[2] _t052F = {_t052D, _t052E};
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    real[2] _t0532 = {_t0530, _t0531};
    real[2][3] _t0533 = {_t052C, _t052F, _t0532};
    real _t0534 = time04EB[1];
    int _t0535 = prim $r2i01B7 (_t0534);
    real[2] _t0536 = prim $sub01C0<real[2]; %3> (_t0533, _t0535);
    int _t0537 = 1;
    int _t0538 = 1;
    int _t0539 = 0;
    int[3] _t053A = {_t0537, _t0538, _t0539};
    real _t053B = time04EB[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int _t053D = prim $sub01C0<int; %3> (_t053A, _t053C);
    real _t053E = prim $sub01C0<real; %2> (_t0536, _t053D);
    real _t053F = prim -0026<$[]> (_t0529, _t053E);
    real _t0540 = -0.1e1;
    real _t0541 = 0.1e1;
    real[2] _t0542 = {_t0540, _t0541};
    real _t0543 = 0.e0;
    real _t0544 = 0.1e1;
    real[2] _t0545 = {_t0543, _t0544};
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    real[2] _t0548 = {_t0546, _t0547};
    real[2][3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time04EB[1];
    int _t054B = prim $r2i01B7 (_t054A);
    real[2] _t054C = prim $sub01C0<real[2]; %3> (_t0549, _t054B);
    int _t054D = 1;
    int _t054E = 1;
    int _t054F = 0;
    int[3] _t0550 = {_t054D, _t054E, _t054F};
    real _t0551 = time04EB[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int _t0553 = prim $sub01C0<int; %3> (_t0550, _t0552);
    real _t0554 = prim $sub01C0<real; %2> (_t054C, _t0553);
    real _t0555 = prim /0055 (_t053F, _t0554);
    vec2 _t0556 = prim *0038<$[2]> (_t0518, _t0555);
    vec2 _t0557 = prim +0017<$[2]> (_t0508, _t0556);
    real _t0558 = time04EB[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell404EF (_t0559, cellId04E8, mesh04E7);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    Femdata: MeshPos _t055D = extractFemItemN((mesh04E7, _t04F8, _t0557, _t055C),RefBuild(Mesh),);
    return _t055D;
  } else {
    real _t055E = time04EB[0];
    vec2 _t055F = prim *0036<$[2]> (_t055E, dPos04EA);
    vec2 _t0560 = prim +0017<$[2]> (_t055F, refPos04E9);
    Femdata: MeshPos _t0561 = extractFemItemN((mesh04E7, _t0560),InvalidBuildBoundary(MeshPos),);
    return _t0561;
  }
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
function vec2#0 _enter056B (vec2 refPos056C, vec2 dPos056D)
{
  real time056E = +inf;
  int face056F = -1;
  real faceTime0570 = -inf;
  real _t0571 = 0.1e1;
  real _t0572 = 0.e0;
  vec2 _t0573 = [_t0571, _t0572];
  vec2 _t0574 = prim -0026<$[2]> (_t0573, refPos056C);
  real _t0575 = -0.1e1;
  real _t0576 = 0.1e1;
  vec2 _t0577 = [_t0575, _t0576];
  real _t0578 = -0.1e1;
  real _t0579 = 0.1e1;
  vec2 _t057A = [_t0578, _t0579];
  real _t057B = prim ×00BD (dPos056D, _t057A);
  vec2 _t057C = prim /0057<$[2]> (_t0577, _t057B);
  real _t057D = prim ×00BD (_t0574, _t057C);
  real _t057E = -0.1e-15;
  bool _t057F = prim >=007E (_t057D, _t057E);
  real _t0580 = 0.1e1;
  real _t0581 = 0.e0;
  vec2 _t0582 = [_t0580, _t0581];
  vec2 _t0583 = prim -0026<$[2]> (_t0582, refPos056C);
  real _t0584 = -0.1e1;
  real _t0585 = 0.1e1;
  vec2 _t0586 = [_t0584, _t0585];
  real _t0587 = -0.1e1;
  real _t0588 = 0.1e1;
  vec2 _t0589 = [_t0587, _t0588];
  real _t058A = prim ×00BD (dPos056D, _t0589);
  vec2 _t058B = prim /0057<$[2]> (_t0586, _t058A);
  real _t058C = prim ×00BD (_t0583, _t058B);
  bool _t058D = prim >0080 (time056E, _t058C);
  real _t058E = -0.1e1;
  real _t058F = 0.1e1;
  vec2 _t0590 = [_t058E, _t058F];
  real _t0591 = prim ×00BD (dPos056D, _t0590);
  real _t0592 = prim |()|00B5<$[]> (_t0591);
  real _t0593 = 0.1e-20;
  bool _t0594 = prim >=007E (_t0592, _t0593);
  bool _t0595 = prim $and01C4 (_t058D, _t0594);
  bool _t0596 = prim $and01C4 (_t057F, _t0595);
  if _t0596 {
    real _t0597 = 0.1e1;
    real _t0598 = 0.1e-8;
    real _t0599 = prim +0017<$[]> (_t0597, _t0598);
    real _t059A = 0.1e1;
    real _t059B = 0.1e1;
    vec2 _t059C = [_t059A, _t059B];
    real _t059D = 0.1e1;
    real _t059E = 0.e0;
    vec2 _t059F = [_t059D, _t059E];
    vec2 _t05A0 = prim -0026<$[2]> (_t059F, refPos056C);
    real _t05A1 = -0.1e1;
    real _t05A2 = 0.1e1;
    vec2 _t05A3 = [_t05A1, _t05A2];
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec2 _t05A6 = [_t05A4, _t05A5];
    real _t05A7 = prim ×00BD (dPos056D, _t05A6);
    vec2 _t05A8 = prim /0057<$[2]> (_t05A3, _t05A7);
    real _t05A9 = prim ×00BD (_t05A0, _t05A8);
    vec2 _t05AA = prim *0038<$[2]> (dPos056D, _t05A9);
    vec2 _t05AB = prim +0017<$[2]> (refPos056C, _t05AA);
    real _t05AC = prim •00CE<$[2]; $[2]; $[]> (_t059C, _t05AB);
    bool _t05AD = prim >0080 (_t0599, _t05AC);
    real _t05AE = 0.1e-8;
    real _t05AF = 0.1e-8;
    vec2 _t05B0 = [_t05AE, _t05AF];
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    vec2 _t05B3 = [_t05B1, _t05B2];
    vec2 _t05B4 = prim -0026<$[2]> (_t05B3, refPos056C);
    real _t05B5 = -0.1e1;
    real _t05B6 = 0.1e1;
    vec2 _t05B7 = [_t05B5, _t05B6];
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.1e1;
    vec2 _t05BA = [_t05B8, _t05B9];
    real _t05BB = prim ×00BD (dPos056D, _t05BA);
    vec2 _t05BC = prim /0057<$[2]> (_t05B7, _t05BB);
    real _t05BD = prim ×00BD (_t05B4, _t05BC);
    vec2 _t05BE = prim *0038<$[2]> (dPos056D, _t05BD);
    vec2 _t05BF = prim +0017<$[2]> (refPos056C, _t05BE);
    vec2 _t05C0 = prim +0017<$[2]> (_t05B0, _t05BF);
    real _t05C1 = _t05C0[0];
    real _t05C2 = -0.e0;
    bool _t05C3 = prim >0080 (_t05C1, _t05C2);
    real _t05C4 = 0.1e-8;
    real _t05C5 = 0.1e-8;
    vec2 _t05C6 = [_t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    vec2 _t05C9 = [_t05C7, _t05C8];
    vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos056C);
    real _t05CB = -0.1e1;
    real _t05CC = 0.1e1;
    vec2 _t05CD = [_t05CB, _t05CC];
    real _t05CE = -0.1e1;
    real _t05CF = 0.1e1;
    vec2 _t05D0 = [_t05CE, _t05CF];
    real _t05D1 = prim ×00BD (dPos056D, _t05D0);
    vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
    real _t05D3 = prim ×00BD (_t05CA, _t05D2);
    vec2 _t05D4 = prim *0038<$[2]> (dPos056D, _t05D3);
    vec2 _t05D5 = prim +0017<$[2]> (refPos056C, _t05D4);
    vec2 _t05D6 = prim +0017<$[2]> (_t05C6, _t05D5);
    real _t05D7 = _t05D6[1];
    real _t05D8 = -0.e0;
    bool _t05D9 = prim >0080 (_t05D7, _t05D8);
    bool _t05DA = prim $and01C4 (_t05C3, _t05D9);
    bool _t05DB = prim $and01C4 (_t05AD, _t05DA);
    if _t05DB {
      real _t05DC = 0.1e1;
      real _t05DD = 0.e0;
      vec2 _t05DE = [_t05DC, _t05DD];
      vec2 _t05DF = prim -0026<$[2]> (_t05DE, refPos056C);
      real _t05E0 = -0.1e1;
      real _t05E1 = 0.1e1;
      vec2 _t05E2 = [_t05E0, _t05E1];
      real _t05E3 = -0.1e1;
      real _t05E4 = 0.1e1;
      vec2 _t05E5 = [_t05E3, _t05E4];
      real _t05E6 = prim ×00BD (dPos056D, _t05E5);
      vec2 _t05E7 = prim /0057<$[2]> (_t05E2, _t05E6);
      time056E = prim ×00BD (_t05DF, _t05E7);
      face056F = 0;
    }
  }
  real _t05E8 = 0.e0;
  real _t05E9 = 0.e0;
  vec2 _t05EA = [_t05E8, _t05E9];
  vec2 _t05EB = prim -0026<$[2]> (_t05EA, refPos056C);
  real _t05EC = 0.e0;
  real _t05ED = 0.1e1;
  vec2 _t05EE = [_t05EC, _t05ED];
  real _t05EF = 0.e0;
  real _t05F0 = 0.1e1;
  vec2 _t05F1 = [_t05EF, _t05F0];
  real _t05F2 = prim ×00BD (dPos056D, _t05F1);
  vec2 _t05F3 = prim /0057<$[2]> (_t05EE, _t05F2);
  real _t05F4 = prim ×00BD (_t05EB, _t05F3);
  real _t05F5 = -0.1e-15;
  bool _t05F6 = prim >=007E (_t05F4, _t05F5);
  real _t05F7 = 0.e0;
  real _t05F8 = 0.e0;
  vec2 _t05F9 = [_t05F7, _t05F8];
  vec2 _t05FA = prim -0026<$[2]> (_t05F9, refPos056C);
  real _t05FB = 0.e0;
  real _t05FC = 0.1e1;
  vec2 _t05FD = [_t05FB, _t05FC];
  real _t05FE = 0.e0;
  real _t05FF = 0.1e1;
  vec2 _t0600 = [_t05FE, _t05FF];
  real _t0601 = prim ×00BD (dPos056D, _t0600);
  vec2 _t0602 = prim /0057<$[2]> (_t05FD, _t0601);
  real _t0603 = prim ×00BD (_t05FA, _t0602);
  bool _t0604 = prim >0080 (time056E, _t0603);
  real _t0605 = 0.e0;
  real _t0606 = 0.1e1;
  vec2 _t0607 = [_t0605, _t0606];
  real _t0608 = prim ×00BD (dPos056D, _t0607);
  real _t0609 = prim |()|00B5<$[]> (_t0608);
  real _t060A = 0.1e-20;
  bool _t060B = prim >=007E (_t0609, _t060A);
  bool _t060C = prim $and01C4 (_t0604, _t060B);
  bool _t060D = prim $and01C4 (_t05F6, _t060C);
  if _t060D {
    real _t060E = 0.1e1;
    real _t060F = 0.1e-8;
    real _t0610 = prim +0017<$[]> (_t060E, _t060F);
    real _t0611 = 0.1e1;
    real _t0612 = 0.1e1;
    vec2 _t0613 = [_t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec2 _t0616 = [_t0614, _t0615];
    vec2 _t0617 = prim -0026<$[2]> (_t0616, refPos056C);
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec2 _t061A = [_t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec2 _t061D = [_t061B, _t061C];
    real _t061E = prim ×00BD (dPos056D, _t061D);
    vec2 _t061F = prim /0057<$[2]> (_t061A, _t061E);
    real _t0620 = prim ×00BD (_t0617, _t061F);
    vec2 _t0621 = prim *0038<$[2]> (dPos056D, _t0620);
    vec2 _t0622 = prim +0017<$[2]> (refPos056C, _t0621);
    real _t0623 = prim •00CE<$[2]; $[2]; $[]> (_t0613, _t0622);
    bool _t0624 = prim >0080 (_t0610, _t0623);
    real _t0625 = 0.1e-8;
    real _t0626 = 0.1e-8;
    vec2 _t0627 = [_t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    vec2 _t062A = [_t0628, _t0629];
    vec2 _t062B = prim -0026<$[2]> (_t062A, refPos056C);
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    vec2 _t062E = [_t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec2 _t0631 = [_t062F, _t0630];
    real _t0632 = prim ×00BD (dPos056D, _t0631);
    vec2 _t0633 = prim /0057<$[2]> (_t062E, _t0632);
    real _t0634 = prim ×00BD (_t062B, _t0633);
    vec2 _t0635 = prim *0038<$[2]> (dPos056D, _t0634);
    vec2 _t0636 = prim +0017<$[2]> (refPos056C, _t0635);
    vec2 _t0637 = prim +0017<$[2]> (_t0627, _t0636);
    real _t0638 = _t0637[0];
    real _t0639 = -0.e0;
    bool _t063A = prim >0080 (_t0638, _t0639);
    real _t063B = 0.1e-8;
    real _t063C = 0.1e-8;
    vec2 _t063D = [_t063B, _t063C];
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec2 _t0640 = [_t063E, _t063F];
    vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos056C);
    real _t0642 = 0.e0;
    real _t0643 = 0.1e1;
    vec2 _t0644 = [_t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec2 _t0647 = [_t0645, _t0646];
    real _t0648 = prim ×00BD (dPos056D, _t0647);
    vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
    real _t064A = prim ×00BD (_t0641, _t0649);
    vec2 _t064B = prim *0038<$[2]> (dPos056D, _t064A);
    vec2 _t064C = prim +0017<$[2]> (refPos056C, _t064B);
    vec2 _t064D = prim +0017<$[2]> (_t063D, _t064C);
    real _t064E = _t064D[1];
    real _t064F = -0.e0;
    bool _t0650 = prim >0080 (_t064E, _t064F);
    bool _t0651 = prim $and01C4 (_t063A, _t0650);
    bool _t0652 = prim $and01C4 (_t0624, _t0651);
    if _t0652 {
      real _t0653 = 0.e0;
      real _t0654 = 0.e0;
      vec2 _t0655 = [_t0653, _t0654];
      vec2 _t0656 = prim -0026<$[2]> (_t0655, refPos056C);
      real _t0657 = 0.e0;
      real _t0658 = 0.1e1;
      vec2 _t0659 = [_t0657, _t0658];
      real _t065A = 0.e0;
      real _t065B = 0.1e1;
      vec2 _t065C = [_t065A, _t065B];
      real _t065D = prim ×00BD (dPos056D, _t065C);
      vec2 _t065E = prim /0057<$[2]> (_t0659, _t065D);
      time056E = prim ×00BD (_t0656, _t065E);
      face056F = 1;
    }
  }
  real _t065F = 0.e0;
  real _t0660 = 0.e0;
  vec2 _t0661 = [_t065F, _t0660];
  vec2 _t0662 = prim -0026<$[2]> (_t0661, refPos056C);
  real _t0663 = 0.1e1;
  real _t0664 = 0.e0;
  vec2 _t0665 = [_t0663, _t0664];
  real _t0666 = 0.1e1;
  real _t0667 = 0.e0;
  vec2 _t0668 = [_t0666, _t0667];
  real _t0669 = prim ×00BD (dPos056D, _t0668);
  vec2 _t066A = prim /0057<$[2]> (_t0665, _t0669);
  real _t066B = prim ×00BD (_t0662, _t066A);
  real _t066C = -0.1e-15;
  bool _t066D = prim >=007E (_t066B, _t066C);
  real _t066E = 0.e0;
  real _t066F = 0.e0;
  vec2 _t0670 = [_t066E, _t066F];
  vec2 _t0671 = prim -0026<$[2]> (_t0670, refPos056C);
  real _t0672 = 0.1e1;
  real _t0673 = 0.e0;
  vec2 _t0674 = [_t0672, _t0673];
  real _t0675 = 0.1e1;
  real _t0676 = 0.e0;
  vec2 _t0677 = [_t0675, _t0676];
  real _t0678 = prim ×00BD (dPos056D, _t0677);
  vec2 _t0679 = prim /0057<$[2]> (_t0674, _t0678);
  real _t067A = prim ×00BD (_t0671, _t0679);
  bool _t067B = prim >0080 (time056E, _t067A);
  real _t067C = 0.1e1;
  real _t067D = 0.e0;
  vec2 _t067E = [_t067C, _t067D];
  real _t067F = prim ×00BD (dPos056D, _t067E);
  real _t0680 = prim |()|00B5<$[]> (_t067F);
  real _t0681 = 0.1e-20;
  bool _t0682 = prim >=007E (_t0680, _t0681);
  bool _t0683 = prim $and01C4 (_t067B, _t0682);
  bool _t0684 = prim $and01C4 (_t066D, _t0683);
  if _t0684 {
    real _t0685 = 0.1e1;
    real _t0686 = 0.1e-8;
    real _t0687 = prim +0017<$[]> (_t0685, _t0686);
    real _t0688 = 0.1e1;
    real _t0689 = 0.1e1;
    vec2 _t068A = [_t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec2 _t068D = [_t068B, _t068C];
    vec2 _t068E = prim -0026<$[2]> (_t068D, refPos056C);
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    vec2 _t0691 = [_t068F, _t0690];
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    vec2 _t0694 = [_t0692, _t0693];
    real _t0695 = prim ×00BD (dPos056D, _t0694);
    vec2 _t0696 = prim /0057<$[2]> (_t0691, _t0695);
    real _t0697 = prim ×00BD (_t068E, _t0696);
    vec2 _t0698 = prim *0038<$[2]> (dPos056D, _t0697);
    vec2 _t0699 = prim +0017<$[2]> (refPos056C, _t0698);
    real _t069A = prim •00CE<$[2]; $[2]; $[]> (_t068A, _t0699);
    bool _t069B = prim >0080 (_t0687, _t069A);
    real _t069C = 0.1e-8;
    real _t069D = 0.1e-8;
    vec2 _t069E = [_t069C, _t069D];
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec2 _t06A1 = [_t069F, _t06A0];
    vec2 _t06A2 = prim -0026<$[2]> (_t06A1, refPos056C);
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec2 _t06A5 = [_t06A3, _t06A4];
    real _t06A6 = 0.1e1;
    real _t06A7 = 0.e0;
    vec2 _t06A8 = [_t06A6, _t06A7];
    real _t06A9 = prim ×00BD (dPos056D, _t06A8);
    vec2 _t06AA = prim /0057<$[2]> (_t06A5, _t06A9);
    real _t06AB = prim ×00BD (_t06A2, _t06AA);
    vec2 _t06AC = prim *0038<$[2]> (dPos056D, _t06AB);
    vec2 _t06AD = prim +0017<$[2]> (refPos056C, _t06AC);
    vec2 _t06AE = prim +0017<$[2]> (_t069E, _t06AD);
    real _t06AF = _t06AE[0];
    real _t06B0 = -0.e0;
    bool _t06B1 = prim >0080 (_t06AF, _t06B0);
    real _t06B2 = 0.1e-8;
    real _t06B3 = 0.1e-8;
    vec2 _t06B4 = [_t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec2 _t06B7 = [_t06B5, _t06B6];
    vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos056C);
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    vec2 _t06BB = [_t06B9, _t06BA];
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    vec2 _t06BE = [_t06BC, _t06BD];
    real _t06BF = prim ×00BD (dPos056D, _t06BE);
    vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
    real _t06C1 = prim ×00BD (_t06B8, _t06C0);
    vec2 _t06C2 = prim *0038<$[2]> (dPos056D, _t06C1);
    vec2 _t06C3 = prim +0017<$[2]> (refPos056C, _t06C2);
    vec2 _t06C4 = prim +0017<$[2]> (_t06B4, _t06C3);
    real _t06C5 = _t06C4[1];
    real _t06C6 = -0.e0;
    bool _t06C7 = prim >0080 (_t06C5, _t06C6);
    bool _t06C8 = prim $and01C4 (_t06B1, _t06C7);
    bool _t06C9 = prim $and01C4 (_t069B, _t06C8);
    if _t06C9 {
      real _t06CA = 0.e0;
      real _t06CB = 0.e0;
      vec2 _t06CC = [_t06CA, _t06CB];
      vec2 _t06CD = prim -0026<$[2]> (_t06CC, refPos056C);
      real _t06CE = 0.1e1;
      real _t06CF = 0.e0;
      vec2 _t06D0 = [_t06CE, _t06CF];
      real _t06D1 = 0.1e1;
      real _t06D2 = 0.e0;
      vec2 _t06D3 = [_t06D1, _t06D2];
      real _t06D4 = prim ×00BD (dPos056D, _t06D3);
      vec2 _t06D5 = prim /0057<$[2]> (_t06D0, _t06D4);
      time056E = prim ×00BD (_t06CD, _t06D5);
      face056F = 2;
    }
  }
  int _t06D6 = -1;
  bool _t06D7 = prim !=0086 (face056F, _t06D6);
  if _t06D7 {
    real _t06D8 = 0.e0;
    real _t06D9 = prim max0125 (time056E, _t06D8);
    real _t06DA = (real)face056F;
    vec2 _t06DB = [_t06D9, _t06DA];
    return _t06DB;
  } else {
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    vec2 _t06DE = [_t06DC, _t06DD];
    return _t06DE;
  }
}
function vec2#0 _exit06DF (vec2 refPos056C, vec2 dPos056D, int i06E0)
{
  real time06E1 = +inf;
  int face06E2 = -1;
  real faceTime06E3 = -inf;
  real _t06E4 = 0.1e1;
  real _t06E5 = 0.e0;
  vec2 _t06E6 = [_t06E4, _t06E5];
  vec2 _t06E7 = prim -0026<$[2]> (_t06E6, refPos056C);
  real _t06E8 = -0.1e1;
  real _t06E9 = 0.1e1;
  vec2 _t06EA = [_t06E8, _t06E9];
  real _t06EB = -0.1e1;
  real _t06EC = 0.1e1;
  vec2 _t06ED = [_t06EB, _t06EC];
  real _t06EE = prim ×00BD (dPos056D, _t06ED);
  vec2 _t06EF = prim /0057<$[2]> (_t06EA, _t06EE);
  real _t06F0 = prim ×00BD (_t06E7, _t06EF);
  real _t06F1 = -0.1e-15;
  bool _t06F2 = prim >=007E (_t06F0, _t06F1);
  real _t06F3 = 0.1e1;
  real _t06F4 = 0.e0;
  vec2 _t06F5 = [_t06F3, _t06F4];
  vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos056C);
  real _t06F7 = -0.1e1;
  real _t06F8 = 0.1e1;
  vec2 _t06F9 = [_t06F7, _t06F8];
  real _t06FA = -0.1e1;
  real _t06FB = 0.1e1;
  vec2 _t06FC = [_t06FA, _t06FB];
  real _t06FD = prim ×00BD (dPos056D, _t06FC);
  vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
  real _t06FF = prim ×00BD (_t06F6, _t06FE);
  bool _t0700 = prim >0080 (time06E1, _t06FF);
  real _t0701 = -0.1e1;
  real _t0702 = 0.1e1;
  vec2 _t0703 = [_t0701, _t0702];
  real _t0704 = prim ×00BD (dPos056D, _t0703);
  real _t0705 = prim |()|00B5<$[]> (_t0704);
  real _t0706 = 0.1e-20;
  bool _t0707 = prim >=007E (_t0705, _t0706);
  bool _t0708 = prim $and01C4 (_t0700, _t0707);
  bool _t0709 = prim $and01C4 (_t06F2, _t0708);
  if _t0709 {
    int _t070A = 0;
    bool _t070B = prim !=0086 (i06E0, _t070A);
    if _t070B {
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      vec2 _t070F = prim -0026<$[2]> (_t070E, refPos056C);
      real _t0710 = -0.1e1;
      real _t0711 = 0.1e1;
      vec2 _t0712 = [_t0710, _t0711];
      real _t0713 = -0.1e1;
      real _t0714 = 0.1e1;
      vec2 _t0715 = [_t0713, _t0714];
      real _t0716 = prim ×00BD (dPos056D, _t0715);
      vec2 _t0717 = prim /0057<$[2]> (_t0712, _t0716);
      time06E1 = prim ×00BD (_t070F, _t0717);
      face06E2 = 0;
    } else {
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      vec2 _t071B = prim -0026<$[2]> (_t071A, refPos056C);
      real _t071C = -0.1e1;
      real _t071D = 0.1e1;
      vec2 _t071E = [_t071C, _t071D];
      real _t071F = -0.1e1;
      real _t0720 = 0.1e1;
      vec2 _t0721 = [_t071F, _t0720];
      real _t0722 = prim ×00BD (dPos056D, _t0721);
      vec2 _t0723 = prim /0057<$[2]> (_t071E, _t0722);
      faceTime06E3 = prim ×00BD (_t071B, _t0723);
    }
  }
  real _t0724 = 0.e0;
  real _t0725 = 0.e0;
  vec2 _t0726 = [_t0724, _t0725];
  vec2 _t0727 = prim -0026<$[2]> (_t0726, refPos056C);
  real _t0728 = 0.e0;
  real _t0729 = 0.1e1;
  vec2 _t072A = [_t0728, _t0729];
  real _t072B = 0.e0;
  real _t072C = 0.1e1;
  vec2 _t072D = [_t072B, _t072C];
  real _t072E = prim ×00BD (dPos056D, _t072D);
  vec2 _t072F = prim /0057<$[2]> (_t072A, _t072E);
  real _t0730 = prim ×00BD (_t0727, _t072F);
  real _t0731 = -0.1e-15;
  bool _t0732 = prim >=007E (_t0730, _t0731);
  real _t0733 = 0.e0;
  real _t0734 = 0.e0;
  vec2 _t0735 = [_t0733, _t0734];
  vec2 _t0736 = prim -0026<$[2]> (_t0735, refPos056C);
  real _t0737 = 0.e0;
  real _t0738 = 0.1e1;
  vec2 _t0739 = [_t0737, _t0738];
  real _t073A = 0.e0;
  real _t073B = 0.1e1;
  vec2 _t073C = [_t073A, _t073B];
  real _t073D = prim ×00BD (dPos056D, _t073C);
  vec2 _t073E = prim /0057<$[2]> (_t0739, _t073D);
  real _t073F = prim ×00BD (_t0736, _t073E);
  bool _t0740 = prim >0080 (time06E1, _t073F);
  real _t0741 = 0.e0;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos056D, _t0743);
  real _t0745 = prim |()|00B5<$[]> (_t0744);
  real _t0746 = 0.1e-20;
  bool _t0747 = prim >=007E (_t0745, _t0746);
  bool _t0748 = prim $and01C4 (_t0740, _t0747);
  bool _t0749 = prim $and01C4 (_t0732, _t0748);
  if _t0749 {
    int _t074A = 1;
    bool _t074B = prim !=0086 (i06E0, _t074A);
    if _t074B {
      real _t074C = 0.e0;
      real _t074D = 0.e0;
      vec2 _t074E = [_t074C, _t074D];
      vec2 _t074F = prim -0026<$[2]> (_t074E, refPos056C);
      real _t0750 = 0.e0;
      real _t0751 = 0.1e1;
      vec2 _t0752 = [_t0750, _t0751];
      real _t0753 = 0.e0;
      real _t0754 = 0.1e1;
      vec2 _t0755 = [_t0753, _t0754];
      real _t0756 = prim ×00BD (dPos056D, _t0755);
      vec2 _t0757 = prim /0057<$[2]> (_t0752, _t0756);
      time06E1 = prim ×00BD (_t074F, _t0757);
      face06E2 = 1;
    } else {
      real _t0758 = 0.e0;
      real _t0759 = 0.e0;
      vec2 _t075A = [_t0758, _t0759];
      vec2 _t075B = prim -0026<$[2]> (_t075A, refPos056C);
      real _t075C = 0.e0;
      real _t075D = 0.1e1;
      vec2 _t075E = [_t075C, _t075D];
      real _t075F = 0.e0;
      real _t0760 = 0.1e1;
      vec2 _t0761 = [_t075F, _t0760];
      real _t0762 = prim ×00BD (dPos056D, _t0761);
      vec2 _t0763 = prim /0057<$[2]> (_t075E, _t0762);
      faceTime06E3 = prim ×00BD (_t075B, _t0763);
    }
  }
  real _t0764 = 0.e0;
  real _t0765 = 0.e0;
  vec2 _t0766 = [_t0764, _t0765];
  vec2 _t0767 = prim -0026<$[2]> (_t0766, refPos056C);
  real _t0768 = 0.1e1;
  real _t0769 = 0.e0;
  vec2 _t076A = [_t0768, _t0769];
  real _t076B = 0.1e1;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  real _t076E = prim ×00BD (dPos056D, _t076D);
  vec2 _t076F = prim /0057<$[2]> (_t076A, _t076E);
  real _t0770 = prim ×00BD (_t0767, _t076F);
  real _t0771 = -0.1e-15;
  bool _t0772 = prim >=007E (_t0770, _t0771);
  real _t0773 = 0.e0;
  real _t0774 = 0.e0;
  vec2 _t0775 = [_t0773, _t0774];
  vec2 _t0776 = prim -0026<$[2]> (_t0775, refPos056C);
  real _t0777 = 0.1e1;
  real _t0778 = 0.e0;
  vec2 _t0779 = [_t0777, _t0778];
  real _t077A = 0.1e1;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  real _t077D = prim ×00BD (dPos056D, _t077C);
  vec2 _t077E = prim /0057<$[2]> (_t0779, _t077D);
  real _t077F = prim ×00BD (_t0776, _t077E);
  bool _t0780 = prim >0080 (time06E1, _t077F);
  real _t0781 = 0.1e1;
  real _t0782 = 0.e0;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos056D, _t0783);
  real _t0785 = prim |()|00B5<$[]> (_t0784);
  real _t0786 = 0.1e-20;
  bool _t0787 = prim >=007E (_t0785, _t0786);
  bool _t0788 = prim $and01C4 (_t0780, _t0787);
  bool _t0789 = prim $and01C4 (_t0772, _t0788);
  if _t0789 {
    int _t078A = 2;
    bool _t078B = prim !=0086 (i06E0, _t078A);
    if _t078B {
      real _t078C = 0.e0;
      real _t078D = 0.e0;
      vec2 _t078E = [_t078C, _t078D];
      vec2 _t078F = prim -0026<$[2]> (_t078E, refPos056C);
      real _t0790 = 0.1e1;
      real _t0791 = 0.e0;
      vec2 _t0792 = [_t0790, _t0791];
      real _t0793 = 0.1e1;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      real _t0796 = prim ×00BD (dPos056D, _t0795);
      vec2 _t0797 = prim /0057<$[2]> (_t0792, _t0796);
      time06E1 = prim ×00BD (_t078F, _t0797);
      face06E2 = 2;
    } else {
      real _t0798 = 0.e0;
      real _t0799 = 0.e0;
      vec2 _t079A = [_t0798, _t0799];
      vec2 _t079B = prim -0026<$[2]> (_t079A, refPos056C);
      real _t079C = 0.1e1;
      real _t079D = 0.e0;
      vec2 _t079E = [_t079C, _t079D];
      real _t079F = 0.1e1;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      real _t07A2 = prim ×00BD (dPos056D, _t07A1);
      vec2 _t07A3 = prim /0057<$[2]> (_t079E, _t07A2);
      faceTime06E3 = prim ×00BD (_t079B, _t07A3);
    }
  }
  int _t07A4 = -1;
  bool _t07A5 = prim !=0086 (face06E2, _t07A4);
  if _t07A5 {
    real _t07A6 = 0.e0;
    real _t07A7 = prim max0125 (time06E1, _t07A6);
    real _t07A8 = (real)face06E2;
    vec2 _t07A9 = [_t07A7, _t07A8];
    return _t07A9;
  } else {
    real _t07AA = -inf;
    bool _t07AB = prim ==0084 (_t07AA, faceTime06E3);
    if _t07AB {
      real _t07AC = -0.1e1;
      real _t07AD = -0.1e1;
      vec2 _t07AE = [_t07AC, _t07AD];
      return _t07AE;
    } else {
      real _t07AF = (real)i06E0;
      vec2 _t07B0 = [faceTime06E3, _t07AF];
      return _t07B0;
    }
  }
}
function Femdata: Mesh#0 domain07B1 (Femdata: Space arg007B2)
{
  Femdata: Mesh _t07B3 = extractFem(arg007B2, Mesh);
  return _t07B3;
}
function Femdata: Space#0 space07B4 (Femdata: FemFunc arg007B5)
{
  Femdata: Space _t07B6 = extractFem(arg007B5, Space);
  return _t07B6;
}
function Femdata: FuncCell#3 funcCell07B7 (Femdata: FemFunc arg007B8, Femdata: MeshCell arg107B9)
{
  int _t07BA = extractFemItem(CellIndex(MeshCell), int, arg107B9);
  Femdata: FuncCell _t07BB = loadFem(FuncCell, arg007B8, _t07BA);
  return _t07BB;
}
function int#4 sign07D4 (real x07D5)
{
  real _t07D6 = 0.e0;
  bool _t07D7 = prim >0080 (x07D5, _t07D6);
  if _t07D7 {
    int _t07D8 = 1;
    return _t07D8;
  } else {
    real _t07D9 = 0.e0;
    bool _t07DA = prim <007A (x07D5, _t07D9);
    if _t07DA {
      int _t07DB = -1;
      return _t07DB;
    } else {
      int _t07DC = 0;
      return _t07DC;
    }
  }
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  camNearVsp07BE = prim +0017<$[]> (camNear0427, camDist07BD);
  camFarVsp07BF = prim +0017<$[]> (camFar0428, camDist07BD);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  tensor[3,3] _t07CF = [camU07C3, camV07C4, camN07C1];
  tensor[3,3] _t07D0 = prim transpose0145<%3; %3> (_t07CF);
  vec3 _t07D1 = prim normalize0137<$[3]> (lightVsp042B);
  light07D2 = prim •00CE<$[3,3]; $[3]; $[3]> (_t07D0, _t07D1);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F = func sign07D4 (f0081D);
    int _t0850 = func sign07D4 (f1084B);
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855 = func sign07D4 (f0081D);
      int _t0856 = func sign07D4 (f1084B);
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        fc0800 = func funcCell07B7 (c0414, cc07FE);
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function bool#0 !=0438 (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043B = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t043C = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t043D = prim !=0086 (_t043B, _t043C);
  return _t043D;
}
function bool#0 ==043E (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043F = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t0440 = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t0441 = prim ==0082 (_t043F, _t0440);
  return _t0441;
}
function Femdata: MeshPos#0 findPos0442 (Femdata: Mesh mesh0443, vec2 pos0444)
{
  real _t0445 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0446 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0447 = [_t0445, _t0446];
  newtonInt0448 = 0;
  cellInt0449 = extractFemItem(StartCell(Mesh), int, mesh0443);
  int _t044A = extractFemItem(NumCell(Mesh), int, mesh0443);
  int _t044B = 1;
  numCell044C = prim -0024 (_t044A, _t044B);
  yayCells044D = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0443, pos0444 : vec2);
  foreach cellItter044E in yayCells044D {
    cellInt0449 = cellItter044E;
    field(2)[2] _t044F = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
    field(2)[2,2] _t0450 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t044F);
    field(2)[2,2] _t0451 = prim inv015B<#∞; %2> (_t0450);
    real _t0452 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0453 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0454 = [_t0452, _t0453];
    A0455 = prim @00A5<#∞; %2; $[2,2]> (_t0451, _t0454);
    int _t0456 = 0;
    int _t0457 = 16;
    int[] _t0458 = prim $range01C3 (_t0456, _t0457);
    foreach newtonItter047B in _t0458 {
      field(2)[2] _t0459 = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
      field(2)[2] _t045A = prim -002E<#∞; %2; $[2]> (_t0459, pos0444);
      field(2)[2] _t045B = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0455, _t045A);
      delta045C = prim @00A5<#∞; %2; $[2]> (_t045B, xn0447);
      xn0447 = prim -0026<$[2]> (xn0447, delta045C);
      real _t045D = 0.1e-7;
      real _t045E = 0.1e-7;
      real _t045F = prim *0034 (_t045D, _t045E);
      real _t0460 = prim •00CE<$[2]; $[2]; $[]> (delta045C, delta045C);
      bool _t0461 = prim >=007E (_t045F, _t0460);
      if _t0461 {
        real _t0462 = 0.1e1;
        real _t0463 = 0.1e-8;
        real _t0464 = prim +0017<$[]> (_t0462, _t0463);
        real _t0465 = 0.1e1;
        real _t0466 = 0.1e1;
        vec2 _t0467 = [_t0465, _t0466];
        real _t0468 = prim •00CE<$[2]; $[2]; $[]> (_t0467, xn0447);
        bool _t0469 = prim >0080 (_t0464, _t0468);
        real _t046A = 0.1e-8;
        real _t046B = 0.1e-8;
        vec2 _t046C = [_t046A, _t046B];
        vec2 _t046D = prim +0017<$[2]> (_t046C, xn0447);
        real _t046E = _t046D[0];
        real _t046F = -0.e0;
        bool _t0470 = prim >0080 (_t046E, _t046F);
        real _t0471 = 0.1e-8;
        real _t0472 = 0.1e-8;
        vec2 _t0473 = [_t0471, _t0472];
        vec2 _t0474 = prim +0017<$[2]> (_t0473, xn0447);
        real _t0475 = _t0474[1];
        real _t0476 = -0.e0;
        bool _t0477 = prim >0080 (_t0475, _t0476);
        bool _t0478 = prim $and01C4 (_t0470, _t0477);
        bool _t0479 = prim $and01C4 (_t0469, _t0478);
        if _t0479 {
          Femdata: MeshPos _t047A = extractFemItemN((mesh0443, cellInt0449, xn0447, pos0444),AllBuild(MeshPos),);
          return _t047A;
        }
      }
    }
  }
  string _t047C = "Bad end 2";
  string _t047D = "\n";
  print (_t047C, _t047D);
  Femdata: MeshPos _t047E = extractFemItemN((mesh0443),InvalidBuild(MeshPos),);
  return _t047E;
}
function Femdata: RefCell#0 refcell047F (Femdata: Mesh arg00480)
{
  Femdata: RefCell _t0481 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00480);
  return _t0481;
}
function Femdata: MeshCell[]#0 cells0482 (Femdata: Mesh arg00483)
{
  Femdata: MeshCell[] _t0484 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00483);
  return _t0484;
}
function Femdata: MeshCell[]#0 cells0485 (Femdata: Mesh arg00483)
{
  int _t0486 = 0;
  int _t0487 = extractFemItem(NumCell(Mesh), int, arg00483);
  int[] _t0488 = prim $range01C3 (_t0486, _t0487);
  Femdata: MeshCell[] accum048B = {};
  foreach i0489 in _t0488 {
    Femdata: MeshCell _t048A = loadFem(MeshCell, arg00483, i0489);
    accum048B = prim @0010<Femdata: MeshCell> (accum048B, _t048A);
  }
  return accum048B;
}
function int#0 numCell048C (Femdata: Mesh arg00480)
{
  int _t048D = extractFemItem(NumCell(Mesh), int, arg00480);
  return _t048D;
}
function tensor[2,2,2,2]#0 msh_transform_3048E (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0492 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0493 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0492);
  field(2)[2,2,2] _t0494 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0493);
  field(2)[2,2,2,2] _t0495 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t0494);
  tensor[2,2,2,2] _t0496 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t0495, pos048F);
  return _t0496;
}
function tensor[2,2,2]#0 msh_transform_20497 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0498 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0499 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0498);
  field(2)[2,2,2] _t049A = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0499);
  tensor[2,2,2] _t049B = prim @00A5<#∞; %2; $[2,2,2]> (_t049A, pos048F);
  return _t049B;
}
function tensor[2,2]#0 msh_transform_1049C (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t049D = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t049E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t049D);
  tensor[2,2] _t049F = prim @00A5<#∞; %2; $[2,2]> (_t049E, pos048F);
  return _t049F;
}
function vec2#2 msh_transform_004A0 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t04A1 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  vec2 _t04A2 = prim @00A5<#∞; %2; $[2]> (_t04A1, pos048F);
  return _t04A2;
}
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos04D9 (Femdata: MeshPos pos04DA)
{
  bool _t04DB = extractFemItem(WorldTest(MeshPos), bool, pos04DA);
  if _t04DB {
    vec2 _t04DC = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
    int _t04DD = extractFemItem(CellIndex(MeshPos), int, pos04DA);
    Femdata: Mesh _t04DE = extractFem(pos04DA, Mesh);
    vec2 _t04DF = func msh_transform_004A0 (_t04DC, _t04DD, _t04DE);
    Femdata: MeshPos _t04E0 = extractFemItemN((pos04DA, _t04DF),NewWorld(MeshPos),);
    return _t04E0;
  } else {
    return pos04DA;
  }
}
function vec2#0 worldPos04E1 (Femdata: MeshPos pos04DA)
{
  vec2 _t04E2 = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
  int _t04E3 = extractFemItem(CellIndex(MeshPos), int, pos04DA);
  Femdata: Mesh _t04E4 = extractFem(pos04DA, Mesh);
  vec2 _t04E5 = func msh_transform_004A0 (_t04E2, _t04E3, _t04E4);
  return _t04E5;
}
function Femdata: MeshPos#0 $exitPos04E6 (Femdata: Mesh mesh04E7, int cellId04E8, vec2 refPos04E9, vec2 dPos04EA, real[2] time04EB)
{
  int _t04EC = -1;
  real _t04ED = time04EB[1];
  int _t04EE = prim $r2i01B7 (_t04ED);
  int[2] _t04F0 = func nextCell404EF (_t04EE, cellId04E8, mesh04E7);
  int _t04F1 = 0;
  int _t04F2 = prim $sub01C0<int; %2> (_t04F0, _t04F1);
  bool _t04F3 = prim !=0086 (_t04EC, _t04F2);
  if _t04F3 {
    real _t04F4 = time04EB[1];
    int _t04F5 = prim $r2i01B7 (_t04F4);
    int[2] _t04F6 = func nextCell404EF (_t04F5, cellId04E8, mesh04E7);
    int _t04F7 = 0;
    int _t04F8 = prim $sub01C0<int; %2> (_t04F6, _t04F7);
    real _t04F9 = 0.1e1;
    real _t04FA = 0.e0;
    vec2 _t04FB = [_t04F9, _t04FA];
    real _t04FC = 0.e0;
    real _t04FD = 0.e0;
    vec2 _t04FE = [_t04FC, _t04FD];
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec2 _t0501 = [_t04FF, _t0500];
    vec2[3] _t0502 = {_t04FB, _t04FE, _t0501};
    real _t0503 = time04EB[1];
    int _t0504 = prim $r2i01B7 (_t0503);
    int[2] _t0505 = func nextCell404EF (_t0504, cellId04E8, mesh04E7);
    int _t0506 = 1;
    int _t0507 = prim $sub01C0<int; %2> (_t0505, _t0506);
    vec2 _t0508 = prim $sub01C0<vec2; %3> (_t0502, _t0507);
    real _t0509 = -0.1e1;
    real _t050A = 0.1e1;
    vec2 _t050B = [_t0509, _t050A];
    real _t050C = 0.e0;
    real _t050D = 0.1e1;
    vec2 _t050E = [_t050C, _t050D];
    real _t050F = 0.1e1;
    real _t0510 = 0.e0;
    vec2 _t0511 = [_t050F, _t0510];
    vec2[3] _t0512 = {_t050B, _t050E, _t0511};
    real _t0513 = time04EB[1];
    int _t0514 = prim $r2i01B7 (_t0513);
    int[2] _t0515 = func nextCell404EF (_t0514, cellId04E8, mesh04E7);
    int _t0516 = 1;
    int _t0517 = prim $sub01C0<int; %2> (_t0515, _t0516);
    vec2 _t0518 = prim $sub01C0<vec2; %3> (_t0512, _t0517);
    real _t0519 = time04EB[0];
    vec2 _t051A = prim *0036<$[2]> (_t0519, dPos04EA);
    vec2 _t051B = prim +0017<$[2]> (_t051A, refPos04E9);
    real _t051C = _t051B[0];
    real _t051D = time04EB[0];
    vec2 _t051E = prim *0036<$[2]> (_t051D, dPos04EA);
    vec2 _t051F = prim +0017<$[2]> (_t051E, refPos04E9);
    real _t0520 = _t051F[1];
    real[2] _t0521 = {_t051C, _t0520};
    int _t0522 = 1;
    int _t0523 = 1;
    int _t0524 = 0;
    int[3] _t0525 = {_t0522, _t0523, _t0524};
    real _t0526 = time04EB[1];
    int _t0527 = prim $r2i01B7 (_t0526);
    int _t0528 = prim $sub01C0<int; %3> (_t0525, _t0527);
    real _t0529 = prim $sub01C0<real; %2> (_t0521, _t0528);
    real _t052A = 0.1e1;
    real _t052B = 0.e0;
    real[2] _t052C = {_t052A, _t052B};
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    real[2] _t052F = {_t052D, _t052E};
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    real[2] _t0532 = {_t0530, _t0531};
    real[2][3] _t0533 = {_t052C, _t052F, _t0532};
    real _t0534 = time04EB[1];
    int _t0535 = prim $r2i01B7 (_t0534);
    real[2] _t0536 = prim $sub01C0<real[2]; %3> (_t0533, _t0535);
    int _t0537 = 1;
    int _t0538 = 1;
    int _t0539 = 0;
    int[3] _t053A = {_t0537, _t0538, _t0539};
    real _t053B = time04EB[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int _t053D = prim $sub01C0<int; %3> (_t053A, _t053C);
    real _t053E = prim $sub01C0<real; %2> (_t0536, _t053D);
    real _t053F = prim -0026<$[]> (_t0529, _t053E);
    real _t0540 = -0.1e1;
    real _t0541 = 0.1e1;
    real[2] _t0542 = {_t0540, _t0541};
    real _t0543 = 0.e0;
    real _t0544 = 0.1e1;
    real[2] _t0545 = {_t0543, _t0544};
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    real[2] _t0548 = {_t0546, _t0547};
    real[2][3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time04EB[1];
    int _t054B = prim $r2i01B7 (_t054A);
    real[2] _t054C = prim $sub01C0<real[2]; %3> (_t0549, _t054B);
    int _t054D = 1;
    int _t054E = 1;
    int _t054F = 0;
    int[3] _t0550 = {_t054D, _t054E, _t054F};
    real _t0551 = time04EB[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int _t0553 = prim $sub01C0<int; %3> (_t0550, _t0552);
    real _t0554 = prim $sub01C0<real; %2> (_t054C, _t0553);
    real _t0555 = prim /0055 (_t053F, _t0554);
    vec2 _t0556 = prim *0038<$[2]> (_t0518, _t0555);
    vec2 _t0557 = prim +0017<$[2]> (_t0508, _t0556);
    real _t0558 = time04EB[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell404EF (_t0559, cellId04E8, mesh04E7);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    Femdata: MeshPos _t055D = extractFemItemN((mesh04E7, _t04F8, _t0557, _t055C),RefBuild(Mesh),);
    return _t055D;
  } else {
    real _t055E = time04EB[0];
    vec2 _t055F = prim *0036<$[2]> (_t055E, dPos04EA);
    vec2 _t0560 = prim +0017<$[2]> (_t055F, refPos04E9);
    Femdata: MeshPos _t0561 = extractFemItemN((mesh04E7, _t0560),InvalidBuildBoundary(MeshPos),);
    return _t0561;
  }
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
function vec2#0 _enter056B (vec2 refPos056C, vec2 dPos056D)
{
  real time056E = +inf;
  int face056F = -1;
  real faceTime0570 = -inf;
  real _t0571 = 0.1e1;
  real _t0572 = 0.e0;
  vec2 _t0573 = [_t0571, _t0572];
  vec2 _t0574 = prim -0026<$[2]> (_t0573, refPos056C);
  real _t0575 = -0.1e1;
  real _t0576 = 0.1e1;
  vec2 _t0577 = [_t0575, _t0576];
  real _t0578 = -0.1e1;
  real _t0579 = 0.1e1;
  vec2 _t057A = [_t0578, _t0579];
  real _t057B = prim ×00BD (dPos056D, _t057A);
  vec2 _t057C = prim /0057<$[2]> (_t0577, _t057B);
  real _t057D = prim ×00BD (_t0574, _t057C);
  real _t057E = -0.1e-15;
  bool _t057F = prim >=007E (_t057D, _t057E);
  real _t0580 = 0.1e1;
  real _t0581 = 0.e0;
  vec2 _t0582 = [_t0580, _t0581];
  vec2 _t0583 = prim -0026<$[2]> (_t0582, refPos056C);
  real _t0584 = -0.1e1;
  real _t0585 = 0.1e1;
  vec2 _t0586 = [_t0584, _t0585];
  real _t0587 = -0.1e1;
  real _t0588 = 0.1e1;
  vec2 _t0589 = [_t0587, _t0588];
  real _t058A = prim ×00BD (dPos056D, _t0589);
  vec2 _t058B = prim /0057<$[2]> (_t0586, _t058A);
  real _t058C = prim ×00BD (_t0583, _t058B);
  bool _t058D = prim >0080 (time056E, _t058C);
  real _t058E = -0.1e1;
  real _t058F = 0.1e1;
  vec2 _t0590 = [_t058E, _t058F];
  real _t0591 = prim ×00BD (dPos056D, _t0590);
  real _t0592 = prim |()|00B5<$[]> (_t0591);
  real _t0593 = 0.1e-20;
  bool _t0594 = prim >=007E (_t0592, _t0593);
  bool _t0595 = prim $and01C4 (_t058D, _t0594);
  bool _t0596 = prim $and01C4 (_t057F, _t0595);
  if _t0596 {
    real _t0597 = 0.1e1;
    real _t0598 = 0.1e-8;
    real _t0599 = prim +0017<$[]> (_t0597, _t0598);
    real _t059A = 0.1e1;
    real _t059B = 0.1e1;
    vec2 _t059C = [_t059A, _t059B];
    real _t059D = 0.1e1;
    real _t059E = 0.e0;
    vec2 _t059F = [_t059D, _t059E];
    vec2 _t05A0 = prim -0026<$[2]> (_t059F, refPos056C);
    real _t05A1 = -0.1e1;
    real _t05A2 = 0.1e1;
    vec2 _t05A3 = [_t05A1, _t05A2];
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec2 _t05A6 = [_t05A4, _t05A5];
    real _t05A7 = prim ×00BD (dPos056D, _t05A6);
    vec2 _t05A8 = prim /0057<$[2]> (_t05A3, _t05A7);
    real _t05A9 = prim ×00BD (_t05A0, _t05A8);
    vec2 _t05AA = prim *0038<$[2]> (dPos056D, _t05A9);
    vec2 _t05AB = prim +0017<$[2]> (refPos056C, _t05AA);
    real _t05AC = prim •00CE<$[2]; $[2]; $[]> (_t059C, _t05AB);
    bool _t05AD = prim >0080 (_t0599, _t05AC);
    real _t05AE = 0.1e-8;
    real _t05AF = 0.1e-8;
    vec2 _t05B0 = [_t05AE, _t05AF];
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    vec2 _t05B3 = [_t05B1, _t05B2];
    vec2 _t05B4 = prim -0026<$[2]> (_t05B3, refPos056C);
    real _t05B5 = -0.1e1;
    real _t05B6 = 0.1e1;
    vec2 _t05B7 = [_t05B5, _t05B6];
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.1e1;
    vec2 _t05BA = [_t05B8, _t05B9];
    real _t05BB = prim ×00BD (dPos056D, _t05BA);
    vec2 _t05BC = prim /0057<$[2]> (_t05B7, _t05BB);
    real _t05BD = prim ×00BD (_t05B4, _t05BC);
    vec2 _t05BE = prim *0038<$[2]> (dPos056D, _t05BD);
    vec2 _t05BF = prim +0017<$[2]> (refPos056C, _t05BE);
    vec2 _t05C0 = prim +0017<$[2]> (_t05B0, _t05BF);
    real _t05C1 = _t05C0[0];
    real _t05C2 = -0.e0;
    bool _t05C3 = prim >0080 (_t05C1, _t05C2);
    real _t05C4 = 0.1e-8;
    real _t05C5 = 0.1e-8;
    vec2 _t05C6 = [_t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    vec2 _t05C9 = [_t05C7, _t05C8];
    vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos056C);
    real _t05CB = -0.1e1;
    real _t05CC = 0.1e1;
    vec2 _t05CD = [_t05CB, _t05CC];
    real _t05CE = -0.1e1;
    real _t05CF = 0.1e1;
    vec2 _t05D0 = [_t05CE, _t05CF];
    real _t05D1 = prim ×00BD (dPos056D, _t05D0);
    vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
    real _t05D3 = prim ×00BD (_t05CA, _t05D2);
    vec2 _t05D4 = prim *0038<$[2]> (dPos056D, _t05D3);
    vec2 _t05D5 = prim +0017<$[2]> (refPos056C, _t05D4);
    vec2 _t05D6 = prim +0017<$[2]> (_t05C6, _t05D5);
    real _t05D7 = _t05D6[1];
    real _t05D8 = -0.e0;
    bool _t05D9 = prim >0080 (_t05D7, _t05D8);
    bool _t05DA = prim $and01C4 (_t05C3, _t05D9);
    bool _t05DB = prim $and01C4 (_t05AD, _t05DA);
    if _t05DB {
      real _t05DC = 0.1e1;
      real _t05DD = 0.e0;
      vec2 _t05DE = [_t05DC, _t05DD];
      vec2 _t05DF = prim -0026<$[2]> (_t05DE, refPos056C);
      real _t05E0 = -0.1e1;
      real _t05E1 = 0.1e1;
      vec2 _t05E2 = [_t05E0, _t05E1];
      real _t05E3 = -0.1e1;
      real _t05E4 = 0.1e1;
      vec2 _t05E5 = [_t05E3, _t05E4];
      real _t05E6 = prim ×00BD (dPos056D, _t05E5);
      vec2 _t05E7 = prim /0057<$[2]> (_t05E2, _t05E6);
      time056E = prim ×00BD (_t05DF, _t05E7);
      face056F = 0;
    }
  }
  real _t05E8 = 0.e0;
  real _t05E9 = 0.e0;
  vec2 _t05EA = [_t05E8, _t05E9];
  vec2 _t05EB = prim -0026<$[2]> (_t05EA, refPos056C);
  real _t05EC = 0.e0;
  real _t05ED = 0.1e1;
  vec2 _t05EE = [_t05EC, _t05ED];
  real _t05EF = 0.e0;
  real _t05F0 = 0.1e1;
  vec2 _t05F1 = [_t05EF, _t05F0];
  real _t05F2 = prim ×00BD (dPos056D, _t05F1);
  vec2 _t05F3 = prim /0057<$[2]> (_t05EE, _t05F2);
  real _t05F4 = prim ×00BD (_t05EB, _t05F3);
  real _t05F5 = -0.1e-15;
  bool _t05F6 = prim >=007E (_t05F4, _t05F5);
  real _t05F7 = 0.e0;
  real _t05F8 = 0.e0;
  vec2 _t05F9 = [_t05F7, _t05F8];
  vec2 _t05FA = prim -0026<$[2]> (_t05F9, refPos056C);
  real _t05FB = 0.e0;
  real _t05FC = 0.1e1;
  vec2 _t05FD = [_t05FB, _t05FC];
  real _t05FE = 0.e0;
  real _t05FF = 0.1e1;
  vec2 _t0600 = [_t05FE, _t05FF];
  real _t0601 = prim ×00BD (dPos056D, _t0600);
  vec2 _t0602 = prim /0057<$[2]> (_t05FD, _t0601);
  real _t0603 = prim ×00BD (_t05FA, _t0602);
  bool _t0604 = prim >0080 (time056E, _t0603);
  real _t0605 = 0.e0;
  real _t0606 = 0.1e1;
  vec2 _t0607 = [_t0605, _t0606];
  real _t0608 = prim ×00BD (dPos056D, _t0607);
  real _t0609 = prim |()|00B5<$[]> (_t0608);
  real _t060A = 0.1e-20;
  bool _t060B = prim >=007E (_t0609, _t060A);
  bool _t060C = prim $and01C4 (_t0604, _t060B);
  bool _t060D = prim $and01C4 (_t05F6, _t060C);
  if _t060D {
    real _t060E = 0.1e1;
    real _t060F = 0.1e-8;
    real _t0610 = prim +0017<$[]> (_t060E, _t060F);
    real _t0611 = 0.1e1;
    real _t0612 = 0.1e1;
    vec2 _t0613 = [_t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec2 _t0616 = [_t0614, _t0615];
    vec2 _t0617 = prim -0026<$[2]> (_t0616, refPos056C);
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec2 _t061A = [_t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec2 _t061D = [_t061B, _t061C];
    real _t061E = prim ×00BD (dPos056D, _t061D);
    vec2 _t061F = prim /0057<$[2]> (_t061A, _t061E);
    real _t0620 = prim ×00BD (_t0617, _t061F);
    vec2 _t0621 = prim *0038<$[2]> (dPos056D, _t0620);
    vec2 _t0622 = prim +0017<$[2]> (refPos056C, _t0621);
    real _t0623 = prim •00CE<$[2]; $[2]; $[]> (_t0613, _t0622);
    bool _t0624 = prim >0080 (_t0610, _t0623);
    real _t0625 = 0.1e-8;
    real _t0626 = 0.1e-8;
    vec2 _t0627 = [_t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    vec2 _t062A = [_t0628, _t0629];
    vec2 _t062B = prim -0026<$[2]> (_t062A, refPos056C);
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    vec2 _t062E = [_t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec2 _t0631 = [_t062F, _t0630];
    real _t0632 = prim ×00BD (dPos056D, _t0631);
    vec2 _t0633 = prim /0057<$[2]> (_t062E, _t0632);
    real _t0634 = prim ×00BD (_t062B, _t0633);
    vec2 _t0635 = prim *0038<$[2]> (dPos056D, _t0634);
    vec2 _t0636 = prim +0017<$[2]> (refPos056C, _t0635);
    vec2 _t0637 = prim +0017<$[2]> (_t0627, _t0636);
    real _t0638 = _t0637[0];
    real _t0639 = -0.e0;
    bool _t063A = prim >0080 (_t0638, _t0639);
    real _t063B = 0.1e-8;
    real _t063C = 0.1e-8;
    vec2 _t063D = [_t063B, _t063C];
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec2 _t0640 = [_t063E, _t063F];
    vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos056C);
    real _t0642 = 0.e0;
    real _t0643 = 0.1e1;
    vec2 _t0644 = [_t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec2 _t0647 = [_t0645, _t0646];
    real _t0648 = prim ×00BD (dPos056D, _t0647);
    vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
    real _t064A = prim ×00BD (_t0641, _t0649);
    vec2 _t064B = prim *0038<$[2]> (dPos056D, _t064A);
    vec2 _t064C = prim +0017<$[2]> (refPos056C, _t064B);
    vec2 _t064D = prim +0017<$[2]> (_t063D, _t064C);
    real _t064E = _t064D[1];
    real _t064F = -0.e0;
    bool _t0650 = prim >0080 (_t064E, _t064F);
    bool _t0651 = prim $and01C4 (_t063A, _t0650);
    bool _t0652 = prim $and01C4 (_t0624, _t0651);
    if _t0652 {
      real _t0653 = 0.e0;
      real _t0654 = 0.e0;
      vec2 _t0655 = [_t0653, _t0654];
      vec2 _t0656 = prim -0026<$[2]> (_t0655, refPos056C);
      real _t0657 = 0.e0;
      real _t0658 = 0.1e1;
      vec2 _t0659 = [_t0657, _t0658];
      real _t065A = 0.e0;
      real _t065B = 0.1e1;
      vec2 _t065C = [_t065A, _t065B];
      real _t065D = prim ×00BD (dPos056D, _t065C);
      vec2 _t065E = prim /0057<$[2]> (_t0659, _t065D);
      time056E = prim ×00BD (_t0656, _t065E);
      face056F = 1;
    }
  }
  real _t065F = 0.e0;
  real _t0660 = 0.e0;
  vec2 _t0661 = [_t065F, _t0660];
  vec2 _t0662 = prim -0026<$[2]> (_t0661, refPos056C);
  real _t0663 = 0.1e1;
  real _t0664 = 0.e0;
  vec2 _t0665 = [_t0663, _t0664];
  real _t0666 = 0.1e1;
  real _t0667 = 0.e0;
  vec2 _t0668 = [_t0666, _t0667];
  real _t0669 = prim ×00BD (dPos056D, _t0668);
  vec2 _t066A = prim /0057<$[2]> (_t0665, _t0669);
  real _t066B = prim ×00BD (_t0662, _t066A);
  real _t066C = -0.1e-15;
  bool _t066D = prim >=007E (_t066B, _t066C);
  real _t066E = 0.e0;
  real _t066F = 0.e0;
  vec2 _t0670 = [_t066E, _t066F];
  vec2 _t0671 = prim -0026<$[2]> (_t0670, refPos056C);
  real _t0672 = 0.1e1;
  real _t0673 = 0.e0;
  vec2 _t0674 = [_t0672, _t0673];
  real _t0675 = 0.1e1;
  real _t0676 = 0.e0;
  vec2 _t0677 = [_t0675, _t0676];
  real _t0678 = prim ×00BD (dPos056D, _t0677);
  vec2 _t0679 = prim /0057<$[2]> (_t0674, _t0678);
  real _t067A = prim ×00BD (_t0671, _t0679);
  bool _t067B = prim >0080 (time056E, _t067A);
  real _t067C = 0.1e1;
  real _t067D = 0.e0;
  vec2 _t067E = [_t067C, _t067D];
  real _t067F = prim ×00BD (dPos056D, _t067E);
  real _t0680 = prim |()|00B5<$[]> (_t067F);
  real _t0681 = 0.1e-20;
  bool _t0682 = prim >=007E (_t0680, _t0681);
  bool _t0683 = prim $and01C4 (_t067B, _t0682);
  bool _t0684 = prim $and01C4 (_t066D, _t0683);
  if _t0684 {
    real _t0685 = 0.1e1;
    real _t0686 = 0.1e-8;
    real _t0687 = prim +0017<$[]> (_t0685, _t0686);
    real _t0688 = 0.1e1;
    real _t0689 = 0.1e1;
    vec2 _t068A = [_t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec2 _t068D = [_t068B, _t068C];
    vec2 _t068E = prim -0026<$[2]> (_t068D, refPos056C);
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    vec2 _t0691 = [_t068F, _t0690];
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    vec2 _t0694 = [_t0692, _t0693];
    real _t0695 = prim ×00BD (dPos056D, _t0694);
    vec2 _t0696 = prim /0057<$[2]> (_t0691, _t0695);
    real _t0697 = prim ×00BD (_t068E, _t0696);
    vec2 _t0698 = prim *0038<$[2]> (dPos056D, _t0697);
    vec2 _t0699 = prim +0017<$[2]> (refPos056C, _t0698);
    real _t069A = prim •00CE<$[2]; $[2]; $[]> (_t068A, _t0699);
    bool _t069B = prim >0080 (_t0687, _t069A);
    real _t069C = 0.1e-8;
    real _t069D = 0.1e-8;
    vec2 _t069E = [_t069C, _t069D];
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec2 _t06A1 = [_t069F, _t06A0];
    vec2 _t06A2 = prim -0026<$[2]> (_t06A1, refPos056C);
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec2 _t06A5 = [_t06A3, _t06A4];
    real _t06A6 = 0.1e1;
    real _t06A7 = 0.e0;
    vec2 _t06A8 = [_t06A6, _t06A7];
    real _t06A9 = prim ×00BD (dPos056D, _t06A8);
    vec2 _t06AA = prim /0057<$[2]> (_t06A5, _t06A9);
    real _t06AB = prim ×00BD (_t06A2, _t06AA);
    vec2 _t06AC = prim *0038<$[2]> (dPos056D, _t06AB);
    vec2 _t06AD = prim +0017<$[2]> (refPos056C, _t06AC);
    vec2 _t06AE = prim +0017<$[2]> (_t069E, _t06AD);
    real _t06AF = _t06AE[0];
    real _t06B0 = -0.e0;
    bool _t06B1 = prim >0080 (_t06AF, _t06B0);
    real _t06B2 = 0.1e-8;
    real _t06B3 = 0.1e-8;
    vec2 _t06B4 = [_t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec2 _t06B7 = [_t06B5, _t06B6];
    vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos056C);
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    vec2 _t06BB = [_t06B9, _t06BA];
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    vec2 _t06BE = [_t06BC, _t06BD];
    real _t06BF = prim ×00BD (dPos056D, _t06BE);
    vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
    real _t06C1 = prim ×00BD (_t06B8, _t06C0);
    vec2 _t06C2 = prim *0038<$[2]> (dPos056D, _t06C1);
    vec2 _t06C3 = prim +0017<$[2]> (refPos056C, _t06C2);
    vec2 _t06C4 = prim +0017<$[2]> (_t06B4, _t06C3);
    real _t06C5 = _t06C4[1];
    real _t06C6 = -0.e0;
    bool _t06C7 = prim >0080 (_t06C5, _t06C6);
    bool _t06C8 = prim $and01C4 (_t06B1, _t06C7);
    bool _t06C9 = prim $and01C4 (_t069B, _t06C8);
    if _t06C9 {
      real _t06CA = 0.e0;
      real _t06CB = 0.e0;
      vec2 _t06CC = [_t06CA, _t06CB];
      vec2 _t06CD = prim -0026<$[2]> (_t06CC, refPos056C);
      real _t06CE = 0.1e1;
      real _t06CF = 0.e0;
      vec2 _t06D0 = [_t06CE, _t06CF];
      real _t06D1 = 0.1e1;
      real _t06D2 = 0.e0;
      vec2 _t06D3 = [_t06D1, _t06D2];
      real _t06D4 = prim ×00BD (dPos056D, _t06D3);
      vec2 _t06D5 = prim /0057<$[2]> (_t06D0, _t06D4);
      time056E = prim ×00BD (_t06CD, _t06D5);
      face056F = 2;
    }
  }
  int _t06D6 = -1;
  bool _t06D7 = prim !=0086 (face056F, _t06D6);
  if _t06D7 {
    real _t06D8 = 0.e0;
    real _t06D9 = prim max0125 (time056E, _t06D8);
    real _t06DA = (real)face056F;
    vec2 _t06DB = [_t06D9, _t06DA];
    return _t06DB;
  } else {
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    vec2 _t06DE = [_t06DC, _t06DD];
    return _t06DE;
  }
}
function vec2#0 _exit06DF (vec2 refPos056C, vec2 dPos056D, int i06E0)
{
  real time06E1 = +inf;
  int face06E2 = -1;
  real faceTime06E3 = -inf;
  real _t06E4 = 0.1e1;
  real _t06E5 = 0.e0;
  vec2 _t06E6 = [_t06E4, _t06E5];
  vec2 _t06E7 = prim -0026<$[2]> (_t06E6, refPos056C);
  real _t06E8 = -0.1e1;
  real _t06E9 = 0.1e1;
  vec2 _t06EA = [_t06E8, _t06E9];
  real _t06EB = -0.1e1;
  real _t06EC = 0.1e1;
  vec2 _t06ED = [_t06EB, _t06EC];
  real _t06EE = prim ×00BD (dPos056D, _t06ED);
  vec2 _t06EF = prim /0057<$[2]> (_t06EA, _t06EE);
  real _t06F0 = prim ×00BD (_t06E7, _t06EF);
  real _t06F1 = -0.1e-15;
  bool _t06F2 = prim >=007E (_t06F0, _t06F1);
  real _t06F3 = 0.1e1;
  real _t06F4 = 0.e0;
  vec2 _t06F5 = [_t06F3, _t06F4];
  vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos056C);
  real _t06F7 = -0.1e1;
  real _t06F8 = 0.1e1;
  vec2 _t06F9 = [_t06F7, _t06F8];
  real _t06FA = -0.1e1;
  real _t06FB = 0.1e1;
  vec2 _t06FC = [_t06FA, _t06FB];
  real _t06FD = prim ×00BD (dPos056D, _t06FC);
  vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
  real _t06FF = prim ×00BD (_t06F6, _t06FE);
  bool _t0700 = prim >0080 (time06E1, _t06FF);
  real _t0701 = -0.1e1;
  real _t0702 = 0.1e1;
  vec2 _t0703 = [_t0701, _t0702];
  real _t0704 = prim ×00BD (dPos056D, _t0703);
  real _t0705 = prim |()|00B5<$[]> (_t0704);
  real _t0706 = 0.1e-20;
  bool _t0707 = prim >=007E (_t0705, _t0706);
  bool _t0708 = prim $and01C4 (_t0700, _t0707);
  bool _t0709 = prim $and01C4 (_t06F2, _t0708);
  if _t0709 {
    int _t070A = 0;
    bool _t070B = prim !=0086 (i06E0, _t070A);
    if _t070B {
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      vec2 _t070F = prim -0026<$[2]> (_t070E, refPos056C);
      real _t0710 = -0.1e1;
      real _t0711 = 0.1e1;
      vec2 _t0712 = [_t0710, _t0711];
      real _t0713 = -0.1e1;
      real _t0714 = 0.1e1;
      vec2 _t0715 = [_t0713, _t0714];
      real _t0716 = prim ×00BD (dPos056D, _t0715);
      vec2 _t0717 = prim /0057<$[2]> (_t0712, _t0716);
      time06E1 = prim ×00BD (_t070F, _t0717);
      face06E2 = 0;
    } else {
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      vec2 _t071B = prim -0026<$[2]> (_t071A, refPos056C);
      real _t071C = -0.1e1;
      real _t071D = 0.1e1;
      vec2 _t071E = [_t071C, _t071D];
      real _t071F = -0.1e1;
      real _t0720 = 0.1e1;
      vec2 _t0721 = [_t071F, _t0720];
      real _t0722 = prim ×00BD (dPos056D, _t0721);
      vec2 _t0723 = prim /0057<$[2]> (_t071E, _t0722);
      faceTime06E3 = prim ×00BD (_t071B, _t0723);
    }
  }
  real _t0724 = 0.e0;
  real _t0725 = 0.e0;
  vec2 _t0726 = [_t0724, _t0725];
  vec2 _t0727 = prim -0026<$[2]> (_t0726, refPos056C);
  real _t0728 = 0.e0;
  real _t0729 = 0.1e1;
  vec2 _t072A = [_t0728, _t0729];
  real _t072B = 0.e0;
  real _t072C = 0.1e1;
  vec2 _t072D = [_t072B, _t072C];
  real _t072E = prim ×00BD (dPos056D, _t072D);
  vec2 _t072F = prim /0057<$[2]> (_t072A, _t072E);
  real _t0730 = prim ×00BD (_t0727, _t072F);
  real _t0731 = -0.1e-15;
  bool _t0732 = prim >=007E (_t0730, _t0731);
  real _t0733 = 0.e0;
  real _t0734 = 0.e0;
  vec2 _t0735 = [_t0733, _t0734];
  vec2 _t0736 = prim -0026<$[2]> (_t0735, refPos056C);
  real _t0737 = 0.e0;
  real _t0738 = 0.1e1;
  vec2 _t0739 = [_t0737, _t0738];
  real _t073A = 0.e0;
  real _t073B = 0.1e1;
  vec2 _t073C = [_t073A, _t073B];
  real _t073D = prim ×00BD (dPos056D, _t073C);
  vec2 _t073E = prim /0057<$[2]> (_t0739, _t073D);
  real _t073F = prim ×00BD (_t0736, _t073E);
  bool _t0740 = prim >0080 (time06E1, _t073F);
  real _t0741 = 0.e0;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos056D, _t0743);
  real _t0745 = prim |()|00B5<$[]> (_t0744);
  real _t0746 = 0.1e-20;
  bool _t0747 = prim >=007E (_t0745, _t0746);
  bool _t0748 = prim $and01C4 (_t0740, _t0747);
  bool _t0749 = prim $and01C4 (_t0732, _t0748);
  if _t0749 {
    int _t074A = 1;
    bool _t074B = prim !=0086 (i06E0, _t074A);
    if _t074B {
      real _t074C = 0.e0;
      real _t074D = 0.e0;
      vec2 _t074E = [_t074C, _t074D];
      vec2 _t074F = prim -0026<$[2]> (_t074E, refPos056C);
      real _t0750 = 0.e0;
      real _t0751 = 0.1e1;
      vec2 _t0752 = [_t0750, _t0751];
      real _t0753 = 0.e0;
      real _t0754 = 0.1e1;
      vec2 _t0755 = [_t0753, _t0754];
      real _t0756 = prim ×00BD (dPos056D, _t0755);
      vec2 _t0757 = prim /0057<$[2]> (_t0752, _t0756);
      time06E1 = prim ×00BD (_t074F, _t0757);
      face06E2 = 1;
    } else {
      real _t0758 = 0.e0;
      real _t0759 = 0.e0;
      vec2 _t075A = [_t0758, _t0759];
      vec2 _t075B = prim -0026<$[2]> (_t075A, refPos056C);
      real _t075C = 0.e0;
      real _t075D = 0.1e1;
      vec2 _t075E = [_t075C, _t075D];
      real _t075F = 0.e0;
      real _t0760 = 0.1e1;
      vec2 _t0761 = [_t075F, _t0760];
      real _t0762 = prim ×00BD (dPos056D, _t0761);
      vec2 _t0763 = prim /0057<$[2]> (_t075E, _t0762);
      faceTime06E3 = prim ×00BD (_t075B, _t0763);
    }
  }
  real _t0764 = 0.e0;
  real _t0765 = 0.e0;
  vec2 _t0766 = [_t0764, _t0765];
  vec2 _t0767 = prim -0026<$[2]> (_t0766, refPos056C);
  real _t0768 = 0.1e1;
  real _t0769 = 0.e0;
  vec2 _t076A = [_t0768, _t0769];
  real _t076B = 0.1e1;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  real _t076E = prim ×00BD (dPos056D, _t076D);
  vec2 _t076F = prim /0057<$[2]> (_t076A, _t076E);
  real _t0770 = prim ×00BD (_t0767, _t076F);
  real _t0771 = -0.1e-15;
  bool _t0772 = prim >=007E (_t0770, _t0771);
  real _t0773 = 0.e0;
  real _t0774 = 0.e0;
  vec2 _t0775 = [_t0773, _t0774];
  vec2 _t0776 = prim -0026<$[2]> (_t0775, refPos056C);
  real _t0777 = 0.1e1;
  real _t0778 = 0.e0;
  vec2 _t0779 = [_t0777, _t0778];
  real _t077A = 0.1e1;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  real _t077D = prim ×00BD (dPos056D, _t077C);
  vec2 _t077E = prim /0057<$[2]> (_t0779, _t077D);
  real _t077F = prim ×00BD (_t0776, _t077E);
  bool _t0780 = prim >0080 (time06E1, _t077F);
  real _t0781 = 0.1e1;
  real _t0782 = 0.e0;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos056D, _t0783);
  real _t0785 = prim |()|00B5<$[]> (_t0784);
  real _t0786 = 0.1e-20;
  bool _t0787 = prim >=007E (_t0785, _t0786);
  bool _t0788 = prim $and01C4 (_t0780, _t0787);
  bool _t0789 = prim $and01C4 (_t0772, _t0788);
  if _t0789 {
    int _t078A = 2;
    bool _t078B = prim !=0086 (i06E0, _t078A);
    if _t078B {
      real _t078C = 0.e0;
      real _t078D = 0.e0;
      vec2 _t078E = [_t078C, _t078D];
      vec2 _t078F = prim -0026<$[2]> (_t078E, refPos056C);
      real _t0790 = 0.1e1;
      real _t0791 = 0.e0;
      vec2 _t0792 = [_t0790, _t0791];
      real _t0793 = 0.1e1;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      real _t0796 = prim ×00BD (dPos056D, _t0795);
      vec2 _t0797 = prim /0057<$[2]> (_t0792, _t0796);
      time06E1 = prim ×00BD (_t078F, _t0797);
      face06E2 = 2;
    } else {
      real _t0798 = 0.e0;
      real _t0799 = 0.e0;
      vec2 _t079A = [_t0798, _t0799];
      vec2 _t079B = prim -0026<$[2]> (_t079A, refPos056C);
      real _t079C = 0.1e1;
      real _t079D = 0.e0;
      vec2 _t079E = [_t079C, _t079D];
      real _t079F = 0.1e1;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      real _t07A2 = prim ×00BD (dPos056D, _t07A1);
      vec2 _t07A3 = prim /0057<$[2]> (_t079E, _t07A2);
      faceTime06E3 = prim ×00BD (_t079B, _t07A3);
    }
  }
  int _t07A4 = -1;
  bool _t07A5 = prim !=0086 (face06E2, _t07A4);
  if _t07A5 {
    real _t07A6 = 0.e0;
    real _t07A7 = prim max0125 (time06E1, _t07A6);
    real _t07A8 = (real)face06E2;
    vec2 _t07A9 = [_t07A7, _t07A8];
    return _t07A9;
  } else {
    real _t07AA = -inf;
    bool _t07AB = prim ==0084 (_t07AA, faceTime06E3);
    if _t07AB {
      real _t07AC = -0.1e1;
      real _t07AD = -0.1e1;
      vec2 _t07AE = [_t07AC, _t07AD];
      return _t07AE;
    } else {
      real _t07AF = (real)i06E0;
      vec2 _t07B0 = [faceTime06E3, _t07AF];
      return _t07B0;
    }
  }
}
function Femdata: Mesh#0 domain07B1 (Femdata: Space arg007B2)
{
  Femdata: Mesh _t07B3 = extractFem(arg007B2, Mesh);
  return _t07B3;
}
function Femdata: Space#0 space07B4 (Femdata: FemFunc arg007B5)
{
  Femdata: Space _t07B6 = extractFem(arg007B5, Space);
  return _t07B6;
}
function Femdata: FuncCell#3 funcCell07B7 (Femdata: FemFunc arg007B8, Femdata: MeshCell arg107B9)
{
  int _t07BA = extractFemItem(CellIndex(MeshCell), int, arg107B9);
  Femdata: FuncCell _t07BB = loadFem(FuncCell, arg007B8, _t07BA);
  return _t07BB;
}
function int#4 sign07D4 (real x07D5)
{
  real _t07D6 = 0.e0;
  bool _t07D7 = prim >0080 (x07D5, _t07D6);
  if _t07D7 {
    int _t07D8 = 1;
    return _t07D8;
  } else {
    real _t07D9 = 0.e0;
    bool _t07DA = prim <007A (x07D5, _t07D9);
    if _t07DA {
      int _t07DB = -1;
      return _t07DB;
    } else {
      int _t07DC = 0;
      return _t07DC;
    }
  }
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F = func sign07D4 (f0081D);
    int _t0850 = func sign07D4 (f1084B);
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855 = func sign07D4 (f0081D);
      int _t0856 = func sign07D4 (f1084B);
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        fc0800 = func funcCell07B7 (c0414, cc07FE);
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function bool#0 !=0438 (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043B = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t043C = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t043D = prim !=0086 (_t043B, _t043C);
  return _t043D;
}
function bool#0 ==043E (Femdata: MeshCell cell10439, Femdata: MeshCell cell1043A)
{
  int _t043F = extractFemItem(CellIndex(Mesh), int, cell10439);
  int _t0440 = extractFemItem(CellIndex(Mesh), int, cell1043A);
  bool _t0441 = prim ==0082 (_t043F, _t0440);
  return _t0441;
}
function Femdata: MeshPos#0 findPos0442 (Femdata: Mesh mesh0443, vec2 pos0444)
{
  real _t0445 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0446 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0447 = [_t0445, _t0446];
  newtonInt0448 = 0;
  cellInt0449 = extractFemItem(StartCell(Mesh), int, mesh0443);
  int _t044A = extractFemItem(NumCell(Mesh), int, mesh0443);
  int _t044B = 1;
  numCell044C = prim -0024 (_t044A, _t044B);
  yayCells044D = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh0443, pos0444 : vec2);
  foreach cellItter044E in yayCells044D {
    cellInt0449 = cellItter044E;
    field(2)[2] _t044F = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
    field(2)[2,2] _t0450 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t044F);
    field(2)[2,2] _t0451 = prim inv015B<#∞; %2> (_t0450);
    real _t0452 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0453 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t0454 = [_t0452, _t0453];
    A0455 = prim @00A5<#∞; %2; $[2,2]> (_t0451, _t0454);
    int _t0456 = 0;
    int _t0457 = 16;
    int[] _t0458 = prim $range01C3 (_t0456, _t0457);
    foreach newtonItter047B in _t0458 {
      field(2)[2] _t0459 = femField(mesh0443,cellInt0449,field(2)[2],Transform,);
      field(2)[2] _t045A = prim -002E<#∞; %2; $[2]> (_t0459, pos0444);
      field(2)[2] _t045B = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A0455, _t045A);
      delta045C = prim @00A5<#∞; %2; $[2]> (_t045B, xn0447);
      xn0447 = prim -0026<$[2]> (xn0447, delta045C);
      real _t045D = 0.1e-7;
      real _t045E = 0.1e-7;
      real _t045F = prim *0034 (_t045D, _t045E);
      real _t0460 = prim •00CE<$[2]; $[2]; $[]> (delta045C, delta045C);
      bool _t0461 = prim >=007E (_t045F, _t0460);
      if _t0461 {
        real _t0462 = 0.1e1;
        real _t0463 = 0.1e-8;
        real _t0464 = prim +0017<$[]> (_t0462, _t0463);
        real _t0465 = 0.1e1;
        real _t0466 = 0.1e1;
        vec2 _t0467 = [_t0465, _t0466];
        real _t0468 = prim •00CE<$[2]; $[2]; $[]> (_t0467, xn0447);
        bool _t0469 = prim >0080 (_t0464, _t0468);
        real _t046A = 0.1e-8;
        real _t046B = 0.1e-8;
        vec2 _t046C = [_t046A, _t046B];
        vec2 _t046D = prim +0017<$[2]> (_t046C, xn0447);
        real _t046E = _t046D[0];
        real _t046F = -0.e0;
        bool _t0470 = prim >0080 (_t046E, _t046F);
        real _t0471 = 0.1e-8;
        real _t0472 = 0.1e-8;
        vec2 _t0473 = [_t0471, _t0472];
        vec2 _t0474 = prim +0017<$[2]> (_t0473, xn0447);
        real _t0475 = _t0474[1];
        real _t0476 = -0.e0;
        bool _t0477 = prim >0080 (_t0475, _t0476);
        bool _t0478 = prim $and01C4 (_t0470, _t0477);
        bool _t0479 = prim $and01C4 (_t0469, _t0478);
        if _t0479 {
          Femdata: MeshPos _t047A = extractFemItemN((mesh0443, cellInt0449, xn0447, pos0444),AllBuild(MeshPos),);
          return _t047A;
        }
      }
    }
  }
  string _t047C = "Bad end 2";
  string _t047D = "\n";
  print (_t047C, _t047D);
  Femdata: MeshPos _t047E = extractFemItemN((mesh0443),InvalidBuild(MeshPos),);
  return _t047E;
}
function Femdata: RefCell#0 refcell047F (Femdata: Mesh arg00480)
{
  Femdata: RefCell _t0481 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg00480);
  return _t0481;
}
function Femdata: MeshCell[]#0 cells0482 (Femdata: Mesh arg00483)
{
  Femdata: MeshCell[] _t0484 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00483);
  return _t0484;
}
function Femdata: MeshCell[]#0 cells0485 (Femdata: Mesh arg00483)
{
  int _t0486 = 0;
  int _t0487 = extractFemItem(NumCell(Mesh), int, arg00483);
  int[] _t0488 = prim $range01C3 (_t0486, _t0487);
  Femdata: MeshCell[] accum048B = {};
  foreach i0489 in _t0488 {
    Femdata: MeshCell _t048A = loadFem(MeshCell, arg00483, i0489);
    accum048B = prim @0010<Femdata: MeshCell> (accum048B, _t048A);
  }
  return accum048B;
}
function int#0 numCell048C (Femdata: Mesh arg00480)
{
  int _t048D = extractFemItem(NumCell(Mesh), int, arg00480);
  return _t048D;
}
function tensor[2,2,2,2]#0 msh_transform_3048E (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0492 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0493 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0492);
  field(2)[2,2,2] _t0494 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0493);
  field(2)[2,2,2,2] _t0495 = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t0494);
  tensor[2,2,2,2] _t0496 = prim @00A5<#∞; %2; $[2,2,2,2]> (_t0495, pos048F);
  return _t0496;
}
function tensor[2,2,2]#0 msh_transform_20497 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t0498 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t0499 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0498);
  field(2)[2,2,2] _t049A = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t0499);
  tensor[2,2,2] _t049B = prim @00A5<#∞; %2; $[2,2,2]> (_t049A, pos048F);
  return _t049B;
}
function tensor[2,2]#0 msh_transform_1049C (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t049D = femField(mesh0491,cell0490,field(2)[2],Transform,);
  field(2)[2,2] _t049E = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t049D);
  tensor[2,2] _t049F = prim @00A5<#∞; %2; $[2,2]> (_t049E, pos048F);
  return _t049F;
}
function vec2#2 msh_transform_004A0 (vec2 pos048F, int cell0490, Femdata: Mesh mesh0491)
{
  field(2)[2] _t04A1 = femField(mesh0491,cell0490,field(2)[2],Transform,);
  vec2 _t04A2 = prim @00A5<#∞; %2; $[2]> (_t04A1, pos048F);
  return _t04A2;
}
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos04D9 (Femdata: MeshPos pos04DA)
{
  bool _t04DB = extractFemItem(WorldTest(MeshPos), bool, pos04DA);
  if _t04DB {
    vec2 _t04DC = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
    int _t04DD = extractFemItem(CellIndex(MeshPos), int, pos04DA);
    Femdata: Mesh _t04DE = extractFem(pos04DA, Mesh);
    vec2 _t04DF = func msh_transform_004A0 (_t04DC, _t04DD, _t04DE);
    Femdata: MeshPos _t04E0 = extractFemItemN((pos04DA, _t04DF),NewWorld(MeshPos),);
    return _t04E0;
  } else {
    return pos04DA;
  }
}
function vec2#0 worldPos04E1 (Femdata: MeshPos pos04DA)
{
  vec2 _t04E2 = extractFemItem(RefPos(MeshPos), vec2, pos04DA);
  int _t04E3 = extractFemItem(CellIndex(MeshPos), int, pos04DA);
  Femdata: Mesh _t04E4 = extractFem(pos04DA, Mesh);
  vec2 _t04E5 = func msh_transform_004A0 (_t04E2, _t04E3, _t04E4);
  return _t04E5;
}
function Femdata: MeshPos#0 $exitPos04E6 (Femdata: Mesh mesh04E7, int cellId04E8, vec2 refPos04E9, vec2 dPos04EA, real[2] time04EB)
{
  int _t04EC = -1;
  real _t04ED = time04EB[1];
  int _t04EE = prim $r2i01B7 (_t04ED);
  int[2] _t04F0 = func nextCell404EF (_t04EE, cellId04E8, mesh04E7);
  int _t04F1 = 0;
  int _t04F2 = prim $sub01C0<int; %2> (_t04F0, _t04F1);
  bool _t04F3 = prim !=0086 (_t04EC, _t04F2);
  if _t04F3 {
    real _t04F4 = time04EB[1];
    int _t04F5 = prim $r2i01B7 (_t04F4);
    int[2] _t04F6 = func nextCell404EF (_t04F5, cellId04E8, mesh04E7);
    int _t04F7 = 0;
    int _t04F8 = prim $sub01C0<int; %2> (_t04F6, _t04F7);
    real _t04F9 = 0.1e1;
    real _t04FA = 0.e0;
    vec2 _t04FB = [_t04F9, _t04FA];
    real _t04FC = 0.e0;
    real _t04FD = 0.e0;
    vec2 _t04FE = [_t04FC, _t04FD];
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec2 _t0501 = [_t04FF, _t0500];
    vec2[3] _t0502 = {_t04FB, _t04FE, _t0501};
    real _t0503 = time04EB[1];
    int _t0504 = prim $r2i01B7 (_t0503);
    int[2] _t0505 = func nextCell404EF (_t0504, cellId04E8, mesh04E7);
    int _t0506 = 1;
    int _t0507 = prim $sub01C0<int; %2> (_t0505, _t0506);
    vec2 _t0508 = prim $sub01C0<vec2; %3> (_t0502, _t0507);
    real _t0509 = -0.1e1;
    real _t050A = 0.1e1;
    vec2 _t050B = [_t0509, _t050A];
    real _t050C = 0.e0;
    real _t050D = 0.1e1;
    vec2 _t050E = [_t050C, _t050D];
    real _t050F = 0.1e1;
    real _t0510 = 0.e0;
    vec2 _t0511 = [_t050F, _t0510];
    vec2[3] _t0512 = {_t050B, _t050E, _t0511};
    real _t0513 = time04EB[1];
    int _t0514 = prim $r2i01B7 (_t0513);
    int[2] _t0515 = func nextCell404EF (_t0514, cellId04E8, mesh04E7);
    int _t0516 = 1;
    int _t0517 = prim $sub01C0<int; %2> (_t0515, _t0516);
    vec2 _t0518 = prim $sub01C0<vec2; %3> (_t0512, _t0517);
    real _t0519 = time04EB[0];
    vec2 _t051A = prim *0036<$[2]> (_t0519, dPos04EA);
    vec2 _t051B = prim +0017<$[2]> (_t051A, refPos04E9);
    real _t051C = _t051B[0];
    real _t051D = time04EB[0];
    vec2 _t051E = prim *0036<$[2]> (_t051D, dPos04EA);
    vec2 _t051F = prim +0017<$[2]> (_t051E, refPos04E9);
    real _t0520 = _t051F[1];
    real[2] _t0521 = {_t051C, _t0520};
    int _t0522 = 1;
    int _t0523 = 1;
    int _t0524 = 0;
    int[3] _t0525 = {_t0522, _t0523, _t0524};
    real _t0526 = time04EB[1];
    int _t0527 = prim $r2i01B7 (_t0526);
    int _t0528 = prim $sub01C0<int; %3> (_t0525, _t0527);
    real _t0529 = prim $sub01C0<real; %2> (_t0521, _t0528);
    real _t052A = 0.1e1;
    real _t052B = 0.e0;
    real[2] _t052C = {_t052A, _t052B};
    real _t052D = 0.e0;
    real _t052E = 0.e0;
    real[2] _t052F = {_t052D, _t052E};
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    real[2] _t0532 = {_t0530, _t0531};
    real[2][3] _t0533 = {_t052C, _t052F, _t0532};
    real _t0534 = time04EB[1];
    int _t0535 = prim $r2i01B7 (_t0534);
    real[2] _t0536 = prim $sub01C0<real[2]; %3> (_t0533, _t0535);
    int _t0537 = 1;
    int _t0538 = 1;
    int _t0539 = 0;
    int[3] _t053A = {_t0537, _t0538, _t0539};
    real _t053B = time04EB[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int _t053D = prim $sub01C0<int; %3> (_t053A, _t053C);
    real _t053E = prim $sub01C0<real; %2> (_t0536, _t053D);
    real _t053F = prim -0026<$[]> (_t0529, _t053E);
    real _t0540 = -0.1e1;
    real _t0541 = 0.1e1;
    real[2] _t0542 = {_t0540, _t0541};
    real _t0543 = 0.e0;
    real _t0544 = 0.1e1;
    real[2] _t0545 = {_t0543, _t0544};
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    real[2] _t0548 = {_t0546, _t0547};
    real[2][3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time04EB[1];
    int _t054B = prim $r2i01B7 (_t054A);
    real[2] _t054C = prim $sub01C0<real[2]; %3> (_t0549, _t054B);
    int _t054D = 1;
    int _t054E = 1;
    int _t054F = 0;
    int[3] _t0550 = {_t054D, _t054E, _t054F};
    real _t0551 = time04EB[1];
    int _t0552 = prim $r2i01B7 (_t0551);
    int _t0553 = prim $sub01C0<int; %3> (_t0550, _t0552);
    real _t0554 = prim $sub01C0<real; %2> (_t054C, _t0553);
    real _t0555 = prim /0055 (_t053F, _t0554);
    vec2 _t0556 = prim *0038<$[2]> (_t0518, _t0555);
    vec2 _t0557 = prim +0017<$[2]> (_t0508, _t0556);
    real _t0558 = time04EB[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell404EF (_t0559, cellId04E8, mesh04E7);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    Femdata: MeshPos _t055D = extractFemItemN((mesh04E7, _t04F8, _t0557, _t055C),RefBuild(Mesh),);
    return _t055D;
  } else {
    real _t055E = time04EB[0];
    vec2 _t055F = prim *0036<$[2]> (_t055E, dPos04EA);
    vec2 _t0560 = prim +0017<$[2]> (_t055F, refPos04E9);
    Femdata: MeshPos _t0561 = extractFemItemN((mesh04E7, _t0560),InvalidBuildBoundary(MeshPos),);
    return _t0561;
  }
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
function vec2#0 _enter056B (vec2 refPos056C, vec2 dPos056D)
{
  real time056E = +inf;
  int face056F = -1;
  real faceTime0570 = -inf;
  real _t0571 = 0.1e1;
  real _t0572 = 0.e0;
  vec2 _t0573 = [_t0571, _t0572];
  vec2 _t0574 = prim -0026<$[2]> (_t0573, refPos056C);
  real _t0575 = -0.1e1;
  real _t0576 = 0.1e1;
  vec2 _t0577 = [_t0575, _t0576];
  real _t0578 = -0.1e1;
  real _t0579 = 0.1e1;
  vec2 _t057A = [_t0578, _t0579];
  real _t057B = prim ×00BD (dPos056D, _t057A);
  vec2 _t057C = prim /0057<$[2]> (_t0577, _t057B);
  real _t057D = prim ×00BD (_t0574, _t057C);
  real _t057E = -0.1e-15;
  bool _t057F = prim >=007E (_t057D, _t057E);
  real _t0580 = 0.1e1;
  real _t0581 = 0.e0;
  vec2 _t0582 = [_t0580, _t0581];
  vec2 _t0583 = prim -0026<$[2]> (_t0582, refPos056C);
  real _t0584 = -0.1e1;
  real _t0585 = 0.1e1;
  vec2 _t0586 = [_t0584, _t0585];
  real _t0587 = -0.1e1;
  real _t0588 = 0.1e1;
  vec2 _t0589 = [_t0587, _t0588];
  real _t058A = prim ×00BD (dPos056D, _t0589);
  vec2 _t058B = prim /0057<$[2]> (_t0586, _t058A);
  real _t058C = prim ×00BD (_t0583, _t058B);
  bool _t058D = prim >0080 (time056E, _t058C);
  real _t058E = -0.1e1;
  real _t058F = 0.1e1;
  vec2 _t0590 = [_t058E, _t058F];
  real _t0591 = prim ×00BD (dPos056D, _t0590);
  real _t0592 = prim |()|00B5<$[]> (_t0591);
  real _t0593 = 0.1e-20;
  bool _t0594 = prim >=007E (_t0592, _t0593);
  bool _t0595 = prim $and01C4 (_t058D, _t0594);
  bool _t0596 = prim $and01C4 (_t057F, _t0595);
  if _t0596 {
    real _t0597 = 0.1e1;
    real _t0598 = 0.1e-8;
    real _t0599 = prim +0017<$[]> (_t0597, _t0598);
    real _t059A = 0.1e1;
    real _t059B = 0.1e1;
    vec2 _t059C = [_t059A, _t059B];
    real _t059D = 0.1e1;
    real _t059E = 0.e0;
    vec2 _t059F = [_t059D, _t059E];
    vec2 _t05A0 = prim -0026<$[2]> (_t059F, refPos056C);
    real _t05A1 = -0.1e1;
    real _t05A2 = 0.1e1;
    vec2 _t05A3 = [_t05A1, _t05A2];
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec2 _t05A6 = [_t05A4, _t05A5];
    real _t05A7 = prim ×00BD (dPos056D, _t05A6);
    vec2 _t05A8 = prim /0057<$[2]> (_t05A3, _t05A7);
    real _t05A9 = prim ×00BD (_t05A0, _t05A8);
    vec2 _t05AA = prim *0038<$[2]> (dPos056D, _t05A9);
    vec2 _t05AB = prim +0017<$[2]> (refPos056C, _t05AA);
    real _t05AC = prim •00CE<$[2]; $[2]; $[]> (_t059C, _t05AB);
    bool _t05AD = prim >0080 (_t0599, _t05AC);
    real _t05AE = 0.1e-8;
    real _t05AF = 0.1e-8;
    vec2 _t05B0 = [_t05AE, _t05AF];
    real _t05B1 = 0.1e1;
    real _t05B2 = 0.e0;
    vec2 _t05B3 = [_t05B1, _t05B2];
    vec2 _t05B4 = prim -0026<$[2]> (_t05B3, refPos056C);
    real _t05B5 = -0.1e1;
    real _t05B6 = 0.1e1;
    vec2 _t05B7 = [_t05B5, _t05B6];
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.1e1;
    vec2 _t05BA = [_t05B8, _t05B9];
    real _t05BB = prim ×00BD (dPos056D, _t05BA);
    vec2 _t05BC = prim /0057<$[2]> (_t05B7, _t05BB);
    real _t05BD = prim ×00BD (_t05B4, _t05BC);
    vec2 _t05BE = prim *0038<$[2]> (dPos056D, _t05BD);
    vec2 _t05BF = prim +0017<$[2]> (refPos056C, _t05BE);
    vec2 _t05C0 = prim +0017<$[2]> (_t05B0, _t05BF);
    real _t05C1 = _t05C0[0];
    real _t05C2 = -0.e0;
    bool _t05C3 = prim >0080 (_t05C1, _t05C2);
    real _t05C4 = 0.1e-8;
    real _t05C5 = 0.1e-8;
    vec2 _t05C6 = [_t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    vec2 _t05C9 = [_t05C7, _t05C8];
    vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos056C);
    real _t05CB = -0.1e1;
    real _t05CC = 0.1e1;
    vec2 _t05CD = [_t05CB, _t05CC];
    real _t05CE = -0.1e1;
    real _t05CF = 0.1e1;
    vec2 _t05D0 = [_t05CE, _t05CF];
    real _t05D1 = prim ×00BD (dPos056D, _t05D0);
    vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
    real _t05D3 = prim ×00BD (_t05CA, _t05D2);
    vec2 _t05D4 = prim *0038<$[2]> (dPos056D, _t05D3);
    vec2 _t05D5 = prim +0017<$[2]> (refPos056C, _t05D4);
    vec2 _t05D6 = prim +0017<$[2]> (_t05C6, _t05D5);
    real _t05D7 = _t05D6[1];
    real _t05D8 = -0.e0;
    bool _t05D9 = prim >0080 (_t05D7, _t05D8);
    bool _t05DA = prim $and01C4 (_t05C3, _t05D9);
    bool _t05DB = prim $and01C4 (_t05AD, _t05DA);
    if _t05DB {
      real _t05DC = 0.1e1;
      real _t05DD = 0.e0;
      vec2 _t05DE = [_t05DC, _t05DD];
      vec2 _t05DF = prim -0026<$[2]> (_t05DE, refPos056C);
      real _t05E0 = -0.1e1;
      real _t05E1 = 0.1e1;
      vec2 _t05E2 = [_t05E0, _t05E1];
      real _t05E3 = -0.1e1;
      real _t05E4 = 0.1e1;
      vec2 _t05E5 = [_t05E3, _t05E4];
      real _t05E6 = prim ×00BD (dPos056D, _t05E5);
      vec2 _t05E7 = prim /0057<$[2]> (_t05E2, _t05E6);
      time056E = prim ×00BD (_t05DF, _t05E7);
      face056F = 0;
    }
  }
  real _t05E8 = 0.e0;
  real _t05E9 = 0.e0;
  vec2 _t05EA = [_t05E8, _t05E9];
  vec2 _t05EB = prim -0026<$[2]> (_t05EA, refPos056C);
  real _t05EC = 0.e0;
  real _t05ED = 0.1e1;
  vec2 _t05EE = [_t05EC, _t05ED];
  real _t05EF = 0.e0;
  real _t05F0 = 0.1e1;
  vec2 _t05F1 = [_t05EF, _t05F0];
  real _t05F2 = prim ×00BD (dPos056D, _t05F1);
  vec2 _t05F3 = prim /0057<$[2]> (_t05EE, _t05F2);
  real _t05F4 = prim ×00BD (_t05EB, _t05F3);
  real _t05F5 = -0.1e-15;
  bool _t05F6 = prim >=007E (_t05F4, _t05F5);
  real _t05F7 = 0.e0;
  real _t05F8 = 0.e0;
  vec2 _t05F9 = [_t05F7, _t05F8];
  vec2 _t05FA = prim -0026<$[2]> (_t05F9, refPos056C);
  real _t05FB = 0.e0;
  real _t05FC = 0.1e1;
  vec2 _t05FD = [_t05FB, _t05FC];
  real _t05FE = 0.e0;
  real _t05FF = 0.1e1;
  vec2 _t0600 = [_t05FE, _t05FF];
  real _t0601 = prim ×00BD (dPos056D, _t0600);
  vec2 _t0602 = prim /0057<$[2]> (_t05FD, _t0601);
  real _t0603 = prim ×00BD (_t05FA, _t0602);
  bool _t0604 = prim >0080 (time056E, _t0603);
  real _t0605 = 0.e0;
  real _t0606 = 0.1e1;
  vec2 _t0607 = [_t0605, _t0606];
  real _t0608 = prim ×00BD (dPos056D, _t0607);
  real _t0609 = prim |()|00B5<$[]> (_t0608);
  real _t060A = 0.1e-20;
  bool _t060B = prim >=007E (_t0609, _t060A);
  bool _t060C = prim $and01C4 (_t0604, _t060B);
  bool _t060D = prim $and01C4 (_t05F6, _t060C);
  if _t060D {
    real _t060E = 0.1e1;
    real _t060F = 0.1e-8;
    real _t0610 = prim +0017<$[]> (_t060E, _t060F);
    real _t0611 = 0.1e1;
    real _t0612 = 0.1e1;
    vec2 _t0613 = [_t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec2 _t0616 = [_t0614, _t0615];
    vec2 _t0617 = prim -0026<$[2]> (_t0616, refPos056C);
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    vec2 _t061A = [_t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.1e1;
    vec2 _t061D = [_t061B, _t061C];
    real _t061E = prim ×00BD (dPos056D, _t061D);
    vec2 _t061F = prim /0057<$[2]> (_t061A, _t061E);
    real _t0620 = prim ×00BD (_t0617, _t061F);
    vec2 _t0621 = prim *0038<$[2]> (dPos056D, _t0620);
    vec2 _t0622 = prim +0017<$[2]> (refPos056C, _t0621);
    real _t0623 = prim •00CE<$[2]; $[2]; $[]> (_t0613, _t0622);
    bool _t0624 = prim >0080 (_t0610, _t0623);
    real _t0625 = 0.1e-8;
    real _t0626 = 0.1e-8;
    vec2 _t0627 = [_t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    vec2 _t062A = [_t0628, _t0629];
    vec2 _t062B = prim -0026<$[2]> (_t062A, refPos056C);
    real _t062C = 0.e0;
    real _t062D = 0.1e1;
    vec2 _t062E = [_t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec2 _t0631 = [_t062F, _t0630];
    real _t0632 = prim ×00BD (dPos056D, _t0631);
    vec2 _t0633 = prim /0057<$[2]> (_t062E, _t0632);
    real _t0634 = prim ×00BD (_t062B, _t0633);
    vec2 _t0635 = prim *0038<$[2]> (dPos056D, _t0634);
    vec2 _t0636 = prim +0017<$[2]> (refPos056C, _t0635);
    vec2 _t0637 = prim +0017<$[2]> (_t0627, _t0636);
    real _t0638 = _t0637[0];
    real _t0639 = -0.e0;
    bool _t063A = prim >0080 (_t0638, _t0639);
    real _t063B = 0.1e-8;
    real _t063C = 0.1e-8;
    vec2 _t063D = [_t063B, _t063C];
    real _t063E = 0.e0;
    real _t063F = 0.e0;
    vec2 _t0640 = [_t063E, _t063F];
    vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos056C);
    real _t0642 = 0.e0;
    real _t0643 = 0.1e1;
    vec2 _t0644 = [_t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    vec2 _t0647 = [_t0645, _t0646];
    real _t0648 = prim ×00BD (dPos056D, _t0647);
    vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
    real _t064A = prim ×00BD (_t0641, _t0649);
    vec2 _t064B = prim *0038<$[2]> (dPos056D, _t064A);
    vec2 _t064C = prim +0017<$[2]> (refPos056C, _t064B);
    vec2 _t064D = prim +0017<$[2]> (_t063D, _t064C);
    real _t064E = _t064D[1];
    real _t064F = -0.e0;
    bool _t0650 = prim >0080 (_t064E, _t064F);
    bool _t0651 = prim $and01C4 (_t063A, _t0650);
    bool _t0652 = prim $and01C4 (_t0624, _t0651);
    if _t0652 {
      real _t0653 = 0.e0;
      real _t0654 = 0.e0;
      vec2 _t0655 = [_t0653, _t0654];
      vec2 _t0656 = prim -0026<$[2]> (_t0655, refPos056C);
      real _t0657 = 0.e0;
      real _t0658 = 0.1e1;
      vec2 _t0659 = [_t0657, _t0658];
      real _t065A = 0.e0;
      real _t065B = 0.1e1;
      vec2 _t065C = [_t065A, _t065B];
      real _t065D = prim ×00BD (dPos056D, _t065C);
      vec2 _t065E = prim /0057<$[2]> (_t0659, _t065D);
      time056E = prim ×00BD (_t0656, _t065E);
      face056F = 1;
    }
  }
  real _t065F = 0.e0;
  real _t0660 = 0.e0;
  vec2 _t0661 = [_t065F, _t0660];
  vec2 _t0662 = prim -0026<$[2]> (_t0661, refPos056C);
  real _t0663 = 0.1e1;
  real _t0664 = 0.e0;
  vec2 _t0665 = [_t0663, _t0664];
  real _t0666 = 0.1e1;
  real _t0667 = 0.e0;
  vec2 _t0668 = [_t0666, _t0667];
  real _t0669 = prim ×00BD (dPos056D, _t0668);
  vec2 _t066A = prim /0057<$[2]> (_t0665, _t0669);
  real _t066B = prim ×00BD (_t0662, _t066A);
  real _t066C = -0.1e-15;
  bool _t066D = prim >=007E (_t066B, _t066C);
  real _t066E = 0.e0;
  real _t066F = 0.e0;
  vec2 _t0670 = [_t066E, _t066F];
  vec2 _t0671 = prim -0026<$[2]> (_t0670, refPos056C);
  real _t0672 = 0.1e1;
  real _t0673 = 0.e0;
  vec2 _t0674 = [_t0672, _t0673];
  real _t0675 = 0.1e1;
  real _t0676 = 0.e0;
  vec2 _t0677 = [_t0675, _t0676];
  real _t0678 = prim ×00BD (dPos056D, _t0677);
  vec2 _t0679 = prim /0057<$[2]> (_t0674, _t0678);
  real _t067A = prim ×00BD (_t0671, _t0679);
  bool _t067B = prim >0080 (time056E, _t067A);
  real _t067C = 0.1e1;
  real _t067D = 0.e0;
  vec2 _t067E = [_t067C, _t067D];
  real _t067F = prim ×00BD (dPos056D, _t067E);
  real _t0680 = prim |()|00B5<$[]> (_t067F);
  real _t0681 = 0.1e-20;
  bool _t0682 = prim >=007E (_t0680, _t0681);
  bool _t0683 = prim $and01C4 (_t067B, _t0682);
  bool _t0684 = prim $and01C4 (_t066D, _t0683);
  if _t0684 {
    real _t0685 = 0.1e1;
    real _t0686 = 0.1e-8;
    real _t0687 = prim +0017<$[]> (_t0685, _t0686);
    real _t0688 = 0.1e1;
    real _t0689 = 0.1e1;
    vec2 _t068A = [_t0688, _t0689];
    real _t068B = 0.e0;
    real _t068C = 0.e0;
    vec2 _t068D = [_t068B, _t068C];
    vec2 _t068E = prim -0026<$[2]> (_t068D, refPos056C);
    real _t068F = 0.1e1;
    real _t0690 = 0.e0;
    vec2 _t0691 = [_t068F, _t0690];
    real _t0692 = 0.1e1;
    real _t0693 = 0.e0;
    vec2 _t0694 = [_t0692, _t0693];
    real _t0695 = prim ×00BD (dPos056D, _t0694);
    vec2 _t0696 = prim /0057<$[2]> (_t0691, _t0695);
    real _t0697 = prim ×00BD (_t068E, _t0696);
    vec2 _t0698 = prim *0038<$[2]> (dPos056D, _t0697);
    vec2 _t0699 = prim +0017<$[2]> (refPos056C, _t0698);
    real _t069A = prim •00CE<$[2]; $[2]; $[]> (_t068A, _t0699);
    bool _t069B = prim >0080 (_t0687, _t069A);
    real _t069C = 0.1e-8;
    real _t069D = 0.1e-8;
    vec2 _t069E = [_t069C, _t069D];
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec2 _t06A1 = [_t069F, _t06A0];
    vec2 _t06A2 = prim -0026<$[2]> (_t06A1, refPos056C);
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec2 _t06A5 = [_t06A3, _t06A4];
    real _t06A6 = 0.1e1;
    real _t06A7 = 0.e0;
    vec2 _t06A8 = [_t06A6, _t06A7];
    real _t06A9 = prim ×00BD (dPos056D, _t06A8);
    vec2 _t06AA = prim /0057<$[2]> (_t06A5, _t06A9);
    real _t06AB = prim ×00BD (_t06A2, _t06AA);
    vec2 _t06AC = prim *0038<$[2]> (dPos056D, _t06AB);
    vec2 _t06AD = prim +0017<$[2]> (refPos056C, _t06AC);
    vec2 _t06AE = prim +0017<$[2]> (_t069E, _t06AD);
    real _t06AF = _t06AE[0];
    real _t06B0 = -0.e0;
    bool _t06B1 = prim >0080 (_t06AF, _t06B0);
    real _t06B2 = 0.1e-8;
    real _t06B3 = 0.1e-8;
    vec2 _t06B4 = [_t06B2, _t06B3];
    real _t06B5 = 0.e0;
    real _t06B6 = 0.e0;
    vec2 _t06B7 = [_t06B5, _t06B6];
    vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos056C);
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    vec2 _t06BB = [_t06B9, _t06BA];
    real _t06BC = 0.1e1;
    real _t06BD = 0.e0;
    vec2 _t06BE = [_t06BC, _t06BD];
    real _t06BF = prim ×00BD (dPos056D, _t06BE);
    vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
    real _t06C1 = prim ×00BD (_t06B8, _t06C0);
    vec2 _t06C2 = prim *0038<$[2]> (dPos056D, _t06C1);
    vec2 _t06C3 = prim +0017<$[2]> (refPos056C, _t06C2);
    vec2 _t06C4 = prim +0017<$[2]> (_t06B4, _t06C3);
    real _t06C5 = _t06C4[1];
    real _t06C6 = -0.e0;
    bool _t06C7 = prim >0080 (_t06C5, _t06C6);
    bool _t06C8 = prim $and01C4 (_t06B1, _t06C7);
    bool _t06C9 = prim $and01C4 (_t069B, _t06C8);
    if _t06C9 {
      real _t06CA = 0.e0;
      real _t06CB = 0.e0;
      vec2 _t06CC = [_t06CA, _t06CB];
      vec2 _t06CD = prim -0026<$[2]> (_t06CC, refPos056C);
      real _t06CE = 0.1e1;
      real _t06CF = 0.e0;
      vec2 _t06D0 = [_t06CE, _t06CF];
      real _t06D1 = 0.1e1;
      real _t06D2 = 0.e0;
      vec2 _t06D3 = [_t06D1, _t06D2];
      real _t06D4 = prim ×00BD (dPos056D, _t06D3);
      vec2 _t06D5 = prim /0057<$[2]> (_t06D0, _t06D4);
      time056E = prim ×00BD (_t06CD, _t06D5);
      face056F = 2;
    }
  }
  int _t06D6 = -1;
  bool _t06D7 = prim !=0086 (face056F, _t06D6);
  if _t06D7 {
    real _t06D8 = 0.e0;
    real _t06D9 = prim max0125 (time056E, _t06D8);
    real _t06DA = (real)face056F;
    vec2 _t06DB = [_t06D9, _t06DA];
    return _t06DB;
  } else {
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    vec2 _t06DE = [_t06DC, _t06DD];
    return _t06DE;
  }
}
function vec2#0 _exit06DF (vec2 refPos056C, vec2 dPos056D, int i06E0)
{
  real time06E1 = +inf;
  int face06E2 = -1;
  real faceTime06E3 = -inf;
  real _t06E4 = 0.1e1;
  real _t06E5 = 0.e0;
  vec2 _t06E6 = [_t06E4, _t06E5];
  vec2 _t06E7 = prim -0026<$[2]> (_t06E6, refPos056C);
  real _t06E8 = -0.1e1;
  real _t06E9 = 0.1e1;
  vec2 _t06EA = [_t06E8, _t06E9];
  real _t06EB = -0.1e1;
  real _t06EC = 0.1e1;
  vec2 _t06ED = [_t06EB, _t06EC];
  real _t06EE = prim ×00BD (dPos056D, _t06ED);
  vec2 _t06EF = prim /0057<$[2]> (_t06EA, _t06EE);
  real _t06F0 = prim ×00BD (_t06E7, _t06EF);
  real _t06F1 = -0.1e-15;
  bool _t06F2 = prim >=007E (_t06F0, _t06F1);
  real _t06F3 = 0.1e1;
  real _t06F4 = 0.e0;
  vec2 _t06F5 = [_t06F3, _t06F4];
  vec2 _t06F6 = prim -0026<$[2]> (_t06F5, refPos056C);
  real _t06F7 = -0.1e1;
  real _t06F8 = 0.1e1;
  vec2 _t06F9 = [_t06F7, _t06F8];
  real _t06FA = -0.1e1;
  real _t06FB = 0.1e1;
  vec2 _t06FC = [_t06FA, _t06FB];
  real _t06FD = prim ×00BD (dPos056D, _t06FC);
  vec2 _t06FE = prim /0057<$[2]> (_t06F9, _t06FD);
  real _t06FF = prim ×00BD (_t06F6, _t06FE);
  bool _t0700 = prim >0080 (time06E1, _t06FF);
  real _t0701 = -0.1e1;
  real _t0702 = 0.1e1;
  vec2 _t0703 = [_t0701, _t0702];
  real _t0704 = prim ×00BD (dPos056D, _t0703);
  real _t0705 = prim |()|00B5<$[]> (_t0704);
  real _t0706 = 0.1e-20;
  bool _t0707 = prim >=007E (_t0705, _t0706);
  bool _t0708 = prim $and01C4 (_t0700, _t0707);
  bool _t0709 = prim $and01C4 (_t06F2, _t0708);
  if _t0709 {
    int _t070A = 0;
    bool _t070B = prim !=0086 (i06E0, _t070A);
    if _t070B {
      real _t070C = 0.1e1;
      real _t070D = 0.e0;
      vec2 _t070E = [_t070C, _t070D];
      vec2 _t070F = prim -0026<$[2]> (_t070E, refPos056C);
      real _t0710 = -0.1e1;
      real _t0711 = 0.1e1;
      vec2 _t0712 = [_t0710, _t0711];
      real _t0713 = -0.1e1;
      real _t0714 = 0.1e1;
      vec2 _t0715 = [_t0713, _t0714];
      real _t0716 = prim ×00BD (dPos056D, _t0715);
      vec2 _t0717 = prim /0057<$[2]> (_t0712, _t0716);
      time06E1 = prim ×00BD (_t070F, _t0717);
      face06E2 = 0;
    } else {
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      vec2 _t071B = prim -0026<$[2]> (_t071A, refPos056C);
      real _t071C = -0.1e1;
      real _t071D = 0.1e1;
      vec2 _t071E = [_t071C, _t071D];
      real _t071F = -0.1e1;
      real _t0720 = 0.1e1;
      vec2 _t0721 = [_t071F, _t0720];
      real _t0722 = prim ×00BD (dPos056D, _t0721);
      vec2 _t0723 = prim /0057<$[2]> (_t071E, _t0722);
      faceTime06E3 = prim ×00BD (_t071B, _t0723);
    }
  }
  real _t0724 = 0.e0;
  real _t0725 = 0.e0;
  vec2 _t0726 = [_t0724, _t0725];
  vec2 _t0727 = prim -0026<$[2]> (_t0726, refPos056C);
  real _t0728 = 0.e0;
  real _t0729 = 0.1e1;
  vec2 _t072A = [_t0728, _t0729];
  real _t072B = 0.e0;
  real _t072C = 0.1e1;
  vec2 _t072D = [_t072B, _t072C];
  real _t072E = prim ×00BD (dPos056D, _t072D);
  vec2 _t072F = prim /0057<$[2]> (_t072A, _t072E);
  real _t0730 = prim ×00BD (_t0727, _t072F);
  real _t0731 = -0.1e-15;
  bool _t0732 = prim >=007E (_t0730, _t0731);
  real _t0733 = 0.e0;
  real _t0734 = 0.e0;
  vec2 _t0735 = [_t0733, _t0734];
  vec2 _t0736 = prim -0026<$[2]> (_t0735, refPos056C);
  real _t0737 = 0.e0;
  real _t0738 = 0.1e1;
  vec2 _t0739 = [_t0737, _t0738];
  real _t073A = 0.e0;
  real _t073B = 0.1e1;
  vec2 _t073C = [_t073A, _t073B];
  real _t073D = prim ×00BD (dPos056D, _t073C);
  vec2 _t073E = prim /0057<$[2]> (_t0739, _t073D);
  real _t073F = prim ×00BD (_t0736, _t073E);
  bool _t0740 = prim >0080 (time06E1, _t073F);
  real _t0741 = 0.e0;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos056D, _t0743);
  real _t0745 = prim |()|00B5<$[]> (_t0744);
  real _t0746 = 0.1e-20;
  bool _t0747 = prim >=007E (_t0745, _t0746);
  bool _t0748 = prim $and01C4 (_t0740, _t0747);
  bool _t0749 = prim $and01C4 (_t0732, _t0748);
  if _t0749 {
    int _t074A = 1;
    bool _t074B = prim !=0086 (i06E0, _t074A);
    if _t074B {
      real _t074C = 0.e0;
      real _t074D = 0.e0;
      vec2 _t074E = [_t074C, _t074D];
      vec2 _t074F = prim -0026<$[2]> (_t074E, refPos056C);
      real _t0750 = 0.e0;
      real _t0751 = 0.1e1;
      vec2 _t0752 = [_t0750, _t0751];
      real _t0753 = 0.e0;
      real _t0754 = 0.1e1;
      vec2 _t0755 = [_t0753, _t0754];
      real _t0756 = prim ×00BD (dPos056D, _t0755);
      vec2 _t0757 = prim /0057<$[2]> (_t0752, _t0756);
      time06E1 = prim ×00BD (_t074F, _t0757);
      face06E2 = 1;
    } else {
      real _t0758 = 0.e0;
      real _t0759 = 0.e0;
      vec2 _t075A = [_t0758, _t0759];
      vec2 _t075B = prim -0026<$[2]> (_t075A, refPos056C);
      real _t075C = 0.e0;
      real _t075D = 0.1e1;
      vec2 _t075E = [_t075C, _t075D];
      real _t075F = 0.e0;
      real _t0760 = 0.1e1;
      vec2 _t0761 = [_t075F, _t0760];
      real _t0762 = prim ×00BD (dPos056D, _t0761);
      vec2 _t0763 = prim /0057<$[2]> (_t075E, _t0762);
      faceTime06E3 = prim ×00BD (_t075B, _t0763);
    }
  }
  real _t0764 = 0.e0;
  real _t0765 = 0.e0;
  vec2 _t0766 = [_t0764, _t0765];
  vec2 _t0767 = prim -0026<$[2]> (_t0766, refPos056C);
  real _t0768 = 0.1e1;
  real _t0769 = 0.e0;
  vec2 _t076A = [_t0768, _t0769];
  real _t076B = 0.1e1;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  real _t076E = prim ×00BD (dPos056D, _t076D);
  vec2 _t076F = prim /0057<$[2]> (_t076A, _t076E);
  real _t0770 = prim ×00BD (_t0767, _t076F);
  real _t0771 = -0.1e-15;
  bool _t0772 = prim >=007E (_t0770, _t0771);
  real _t0773 = 0.e0;
  real _t0774 = 0.e0;
  vec2 _t0775 = [_t0773, _t0774];
  vec2 _t0776 = prim -0026<$[2]> (_t0775, refPos056C);
  real _t0777 = 0.1e1;
  real _t0778 = 0.e0;
  vec2 _t0779 = [_t0777, _t0778];
  real _t077A = 0.1e1;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  real _t077D = prim ×00BD (dPos056D, _t077C);
  vec2 _t077E = prim /0057<$[2]> (_t0779, _t077D);
  real _t077F = prim ×00BD (_t0776, _t077E);
  bool _t0780 = prim >0080 (time06E1, _t077F);
  real _t0781 = 0.1e1;
  real _t0782 = 0.e0;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos056D, _t0783);
  real _t0785 = prim |()|00B5<$[]> (_t0784);
  real _t0786 = 0.1e-20;
  bool _t0787 = prim >=007E (_t0785, _t0786);
  bool _t0788 = prim $and01C4 (_t0780, _t0787);
  bool _t0789 = prim $and01C4 (_t0772, _t0788);
  if _t0789 {
    int _t078A = 2;
    bool _t078B = prim !=0086 (i06E0, _t078A);
    if _t078B {
      real _t078C = 0.e0;
      real _t078D = 0.e0;
      vec2 _t078E = [_t078C, _t078D];
      vec2 _t078F = prim -0026<$[2]> (_t078E, refPos056C);
      real _t0790 = 0.1e1;
      real _t0791 = 0.e0;
      vec2 _t0792 = [_t0790, _t0791];
      real _t0793 = 0.1e1;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      real _t0796 = prim ×00BD (dPos056D, _t0795);
      vec2 _t0797 = prim /0057<$[2]> (_t0792, _t0796);
      time06E1 = prim ×00BD (_t078F, _t0797);
      face06E2 = 2;
    } else {
      real _t0798 = 0.e0;
      real _t0799 = 0.e0;
      vec2 _t079A = [_t0798, _t0799];
      vec2 _t079B = prim -0026<$[2]> (_t079A, refPos056C);
      real _t079C = 0.1e1;
      real _t079D = 0.e0;
      vec2 _t079E = [_t079C, _t079D];
      real _t079F = 0.1e1;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      real _t07A2 = prim ×00BD (dPos056D, _t07A1);
      vec2 _t07A3 = prim /0057<$[2]> (_t079E, _t07A2);
      faceTime06E3 = prim ×00BD (_t079B, _t07A3);
    }
  }
  int _t07A4 = -1;
  bool _t07A5 = prim !=0086 (face06E2, _t07A4);
  if _t07A5 {
    real _t07A6 = 0.e0;
    real _t07A7 = prim max0125 (time06E1, _t07A6);
    real _t07A8 = (real)face06E2;
    vec2 _t07A9 = [_t07A7, _t07A8];
    return _t07A9;
  } else {
    real _t07AA = -inf;
    bool _t07AB = prim ==0084 (_t07AA, faceTime06E3);
    if _t07AB {
      real _t07AC = -0.1e1;
      real _t07AD = -0.1e1;
      vec2 _t07AE = [_t07AC, _t07AD];
      return _t07AE;
    } else {
      real _t07AF = (real)i06E0;
      vec2 _t07B0 = [faceTime06E3, _t07AF];
      return _t07B0;
    }
  }
}
function Femdata: Mesh#0 domain07B1 (Femdata: Space arg007B2)
{
  Femdata: Mesh _t07B3 = extractFem(arg007B2, Mesh);
  return _t07B3;
}
function Femdata: Space#0 space07B4 (Femdata: FemFunc arg007B5)
{
  Femdata: Space _t07B6 = extractFem(arg007B5, Space);
  return _t07B6;
}
function Femdata: FuncCell#3 funcCell07B7 (Femdata: FemFunc arg007B8, Femdata: MeshCell arg107B9)
{
  int _t07BA = extractFemItem(CellIndex(MeshCell), int, arg107B9);
  Femdata: FuncCell _t07BB = loadFem(FuncCell, arg007B8, _t07BA);
  return _t07BB;
}
function int#4 sign07D4 (real x07D5)
{
  real _t07D6 = 0.e0;
  bool _t07D7 = prim >0080 (x07D5, _t07D6);
  if _t07D7 {
    int _t07D8 = 1;
    return _t07D8;
  } else {
    real _t07D9 = 0.e0;
    bool _t07DA = prim <007A (x07D5, _t07D9);
    if _t07DA {
      int _t07DB = -1;
      return _t07DB;
    } else {
      int _t07DC = 0;
      return _t07DC;
    }
  }
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    fc0800 = func funcCell07B7 (c0414, cc07FE);
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F = func sign07D4 (f0081D);
    int _t0850 = func sign07D4 (f1084B);
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855 = func sign07D4 (f0081D);
      int _t0856 = func sign07D4 (f1084B);
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        fc0800 = func funcCell07B7 (c0414, cc07FE);
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    Femdata: FuncCell fc0886;
    int _t0887 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t0888 = loadFem(FuncCell, c0414, _t0887);
    fc0886 = _t0888;
    fc0800 = fc0886;
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    Femdata: FuncCell fc0889;
    int _t088A = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t088B = loadFem(FuncCell, c0414, _t088A);
    fc0889 = _t088B;
    fc0800 = fc0889;
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F;
    real _t08A4 = 0.e0;
    bool _t08A5 = prim >0080 (f0081D, _t08A4);
    if _t08A5 {
      int _t08A6 = 1;
      _t084F = _t08A6;
    } else {
      real _t08A7 = 0.e0;
      bool _t08A8 = prim <007A (f0081D, _t08A7);
      if _t08A8 {
        int _t08A9 = -1;
        _t084F = _t08A9;
      } else {
        int _t08AA = 0;
        _t084F = _t08AA;
      }
    }
    int _t0850;
    real _t089D = 0.e0;
    bool _t089E = prim >0080 (f1084B, _t089D);
    if _t089E {
      int _t089F = 1;
      _t0850 = _t089F;
    } else {
      real _t08A0 = 0.e0;
      bool _t08A1 = prim <007A (f1084B, _t08A0);
      if _t08A1 {
        int _t08A2 = -1;
        _t0850 = _t08A2;
      } else {
        int _t08A3 = 0;
        _t0850 = _t08A3;
      }
    }
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855;
      real _t0896 = 0.e0;
      bool _t0897 = prim >0080 (f0081D, _t0896);
      if _t0897 {
        int _t0898 = 1;
        _t0855 = _t0898;
      } else {
        real _t0899 = 0.e0;
        bool _t089A = prim <007A (f0081D, _t0899);
        if _t089A {
          int _t089B = -1;
          _t0855 = _t089B;
        } else {
          int _t089C = 0;
          _t0855 = _t089C;
        }
      }
      int _t0856;
      real _t088F = 0.e0;
      bool _t0890 = prim >0080 (f1084B, _t088F);
      if _t0890 {
        int _t0891 = 1;
        _t0856 = _t0891;
      } else {
        real _t0892 = 0.e0;
        bool _t0893 = prim <007A (f1084B, _t0892);
        if _t0893 {
          int _t0894 = -1;
          _t0856 = _t0894;
        } else {
          int _t0895 = 0;
          _t0856 = _t0895;
        }
      }
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        Femdata: FuncCell fc088C;
        int _t088D = extractFemItem(CellIndex(MeshCell), int, cc07FE);
        Femdata: FuncCell _t088E = loadFem(FuncCell, c0414, _t088D);
        fc088C = _t088E;
        fc0800 = fc088C;
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    Femdata: FuncCell fc0886;
    int _t0887 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t0888 = loadFem(FuncCell, c0414, _t0887);
    fc0886 = _t0888;
    fc0800 = fc0886;
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    Femdata: FuncCell fc0889;
    int _t088A = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t088B = loadFem(FuncCell, c0414, _t088A);
    fc0889 = _t088B;
    fc0800 = fc0889;
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F;
    real _t08A4 = 0.e0;
    bool _t08A5 = prim >0080 (f0081D, _t08A4);
    if _t08A5 {
      int _t08A6 = 1;
      _t084F = _t08A6;
    } else {
      real _t08A7 = 0.e0;
      bool _t08A8 = prim <007A (f0081D, _t08A7);
      if _t08A8 {
        int _t08A9 = -1;
        _t084F = _t08A9;
      } else {
        int _t08AA = 0;
        _t084F = _t08AA;
      }
    }
    int _t0850;
    real _t089D = 0.e0;
    bool _t089E = prim >0080 (f1084B, _t089D);
    if _t089E {
      int _t089F = 1;
      _t0850 = _t089F;
    } else {
      real _t08A0 = 0.e0;
      bool _t08A1 = prim <007A (f1084B, _t08A0);
      if _t08A1 {
        int _t08A2 = -1;
        _t0850 = _t08A2;
      } else {
        int _t08A3 = 0;
        _t0850 = _t08A3;
      }
    }
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855;
      real _t0896 = 0.e0;
      bool _t0897 = prim >0080 (f0081D, _t0896);
      if _t0897 {
        int _t0898 = 1;
        _t0855 = _t0898;
      } else {
        real _t0899 = 0.e0;
        bool _t089A = prim <007A (f0081D, _t0899);
        if _t089A {
          int _t089B = -1;
          _t0855 = _t089B;
        } else {
          int _t089C = 0;
          _t0855 = _t089C;
        }
      }
      int _t0856;
      real _t088F = 0.e0;
      bool _t0890 = prim >0080 (f1084B, _t088F);
      if _t0890 {
        int _t0891 = 1;
        _t0856 = _t0891;
      } else {
        real _t0892 = 0.e0;
        bool _t0893 = prim <007A (f1084B, _t0892);
        if _t0893 {
          int _t0894 = -1;
          _t0856 = _t0894;
        } else {
          int _t0895 = 0;
          _t0856 = _t0895;
        }
      }
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        Femdata: FuncCell fc088C;
        int _t088D = extractFemItem(CellIndex(MeshCell), int, cc07FE);
        Femdata: FuncCell _t088E = loadFem(FuncCell, c0414, _t088D);
        fc088C = _t088E;
        fc0800 = fc088C;
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    Femdata: FuncCell fc0886;
    int _t0887 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t0888 = loadFem(FuncCell, c0414, _t0887);
    fc0886 = _t0888;
    fc0800 = fc0886;
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    Femdata: FuncCell fc0889;
    int _t088A = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t088B = loadFem(FuncCell, c0414, _t088A);
    fc0889 = _t088B;
    fc0800 = fc0889;
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F;
    real _t08A4 = 0.e0;
    bool _t08A5 = prim >0080 (f0081D, _t08A4);
    if _t08A5 {
      int _t08A6 = 1;
      _t084F = _t08A6;
    } else {
      real _t08A7 = 0.e0;
      bool _t08A8 = prim <007A (f0081D, _t08A7);
      if _t08A8 {
        int _t08A9 = -1;
        _t084F = _t08A9;
      } else {
        int _t08AA = 0;
        _t084F = _t08AA;
      }
    }
    int _t0850;
    real _t089D = 0.e0;
    bool _t089E = prim >0080 (f1084B, _t089D);
    if _t089E {
      int _t089F = 1;
      _t0850 = _t089F;
    } else {
      real _t08A0 = 0.e0;
      bool _t08A1 = prim <007A (f1084B, _t08A0);
      if _t08A1 {
        int _t08A2 = -1;
        _t0850 = _t08A2;
      } else {
        int _t08A3 = 0;
        _t0850 = _t08A3;
      }
    }
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855;
      real _t0896 = 0.e0;
      bool _t0897 = prim >0080 (f0081D, _t0896);
      if _t0897 {
        int _t0898 = 1;
        _t0855 = _t0898;
      } else {
        real _t0899 = 0.e0;
        bool _t089A = prim <007A (f0081D, _t0899);
        if _t089A {
          int _t089B = -1;
          _t0855 = _t089B;
        } else {
          int _t089C = 0;
          _t0855 = _t089C;
        }
      }
      int _t0856;
      real _t088F = 0.e0;
      bool _t0890 = prim >0080 (f1084B, _t088F);
      if _t0890 {
        int _t0891 = 1;
        _t0856 = _t0891;
      } else {
        real _t0892 = 0.e0;
        bool _t0893 = prim <007A (f1084B, _t0892);
        if _t0893 {
          int _t0894 = -1;
          _t0856 = _t0894;
        } else {
          int _t0895 = 0;
          _t0856 = _t0895;
        }
      }
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        Femdata: FuncCell fc088C;
        int _t088D = extractFemItem(CellIndex(MeshCell), int, cc07FE);
        Femdata: FuncCell _t088E = loadFem(FuncCell, c0414, _t088D);
        fc088C = _t088E;
        fc0800 = fc088C;
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    Femdata: FuncCell fc0886;
    int _t0887 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t0888 = loadFem(FuncCell, c0414, _t0887);
    fc0886 = _t0888;
    fc0800 = fc0886;
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    Femdata: FuncCell fc0889;
    int _t088A = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t088B = loadFem(FuncCell, c0414, _t088A);
    fc0889 = _t088B;
    fc0800 = fc0889;
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F;
    real _t08A4 = 0.e0;
    bool _t08A5 = prim >0080 (f0081D, _t08A4);
    if _t08A5 {
      int _t08A6 = 1;
      _t084F = _t08A6;
    } else {
      real _t08A7 = 0.e0;
      bool _t08A8 = prim <007A (f0081D, _t08A7);
      if _t08A8 {
        int _t08A9 = -1;
        _t084F = _t08A9;
      } else {
        int _t08AA = 0;
        _t084F = _t08AA;
      }
    }
    int _t0850;
    real _t089D = 0.e0;
    bool _t089E = prim >0080 (f1084B, _t089D);
    if _t089E {
      int _t089F = 1;
      _t0850 = _t089F;
    } else {
      real _t08A0 = 0.e0;
      bool _t08A1 = prim <007A (f1084B, _t08A0);
      if _t08A1 {
        int _t08A2 = -1;
        _t0850 = _t08A2;
      } else {
        int _t08A3 = 0;
        _t0850 = _t08A3;
      }
    }
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855;
      real _t0896 = 0.e0;
      bool _t0897 = prim >0080 (f0081D, _t0896);
      if _t0897 {
        int _t0898 = 1;
        _t0855 = _t0898;
      } else {
        real _t0899 = 0.e0;
        bool _t089A = prim <007A (f0081D, _t0899);
        if _t089A {
          int _t089B = -1;
          _t0855 = _t089B;
        } else {
          int _t089C = 0;
          _t0855 = _t089C;
        }
      }
      int _t0856;
      real _t088F = 0.e0;
      bool _t0890 = prim >0080 (f1084B, _t088F);
      if _t0890 {
        int _t0891 = 1;
        _t0856 = _t0891;
      } else {
        real _t0892 = 0.e0;
        bool _t0893 = prim <007A (f1084B, _t0892);
        if _t0893 {
          int _t0894 = -1;
          _t0856 = _t0894;
        } else {
          int _t0895 = 0;
          _t0856 = _t0895;
        }
      }
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        Femdata: FuncCell fc088C;
        int _t088D = extractFemItem(CellIndex(MeshCell), int, cc07FE);
        Femdata: FuncCell _t088E = loadFem(FuncCell, c0414, _t088D);
        fc088C = _t088E;
        fc0800 = fc088C;
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0406;
input FemData:Space 0b0412_intermedateGlobal0413;
input FemData:FemFunc 0c0414_intermedateGlobal0415;
input real isoval0416 = <default>;
input real thick0417 = <default>;
input vec3 camEye0418 = <default>;
input vec3 camAt041C = <default>;
input vec3 camUp0420 = <default>;
input real camFOV0424 = <default>;
input int iresU0425 = <default>;
input int iresV0426 = <default>;
input real camNear0427 = <default>;
input real camFar0428 = <default>;
input real refStep0429 = <default>;
input real rayStep042A = <default>;
input vec3 lightVsp042B = <default>;
input real phongKa042F = <default>;
input real phongKd0430 = <default>;
input bool debug0431 = <default>;
input int debugU0432 = <default>;
input int debugV0433 = <default>;
input real eps0434 = <default>;
input int[] indecies0435;
input vec2[] times0436;
input int[] cells0437;
constants {
  isoval0416 = 0.2e0;
  thick0417 = 0.7e-1;
  real _t0419 = -0.5e0;
  real _t041A = 0.5e0;
  real _t041B = 0.5e0;
  camEye0418 = [_t0419, _t041A, _t041B];
  real _t041D = 0.5e0;
  real _t041E = 0.5e0;
  real _t041F = 0.5e0;
  camAt041C = [_t041D, _t041E, _t041F];
  real _t0421 = 0.e0;
  real _t0422 = 0.e0;
  real _t0423 = 0.1e1;
  camUp0420 = [_t0421, _t0422, _t0423];
  camFOV0424 = 0.137e2;
  iresU0425 = 10;
  iresV0426 = 10;
  camNear0427 = -0.2e1;
  camFar0428 = 0.5e1;
  refStep0429 = 0.1e1;
  rayStep042A = 0.1e-1;
  real _t042C = 0.e0;
  real _t042D = 0.e0;
  real _t042E = 0.1e1;
  lightVsp042B = [_t042C, _t042D, _t042E];
  phongKa042F = 0.1e0;
  phongKd0430 = 0.9e0;
  debug0431 = false;
  debugU0432 = 8;
  debugV0433 = 2;
  eps0434 = 0.1e-8;
}
global Femdata: MeshCell[] 0cell_a0407;
global Femdata: Space b0412;
global Femdata: FemFunc c0414;
global real camDist07BD;
global vec3 camN07C1;
global vec3 camU07C3;
global vec3 camV07C4;
global real camVmax07CA;
global real camUmax07CE;
global vec3 rayVec07D3;
function Femdata: MeshPos#3 _msh_newtonInverse04A3 (vec2 pos04A4, int cellInt04A5, Femdata: Mesh mesh04A6)
{
  real _t04A7 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04A8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04A9 = [_t04A7, _t04A8];
  field(2)[2] _t04AA = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
  field(2)[2,2] _t04AB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04AA);
  field(2)[2,2] _t04AC = prim inv015B<#∞; %2> (_t04AB);
  real _t04AD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04AE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04AF = [_t04AD, _t04AE];
  A04B0 = prim @00A5<#∞; %2; $[2,2]> (_t04AC, _t04AF);
  int _t04B1 = 0;
  int _t04B2 = 16;
  int[] _t04B3 = prim $range01C3 (_t04B1, _t04B2);
  foreach itter04D7 in _t04B3 {
    field(2)[2] _t04B4 = femField(mesh04A6,cellInt04A5,field(2)[2],Transform,);
    field(2)[2] _t04B5 = prim -002E<#∞; %2; $[2]> (_t04B4, pos04A4);
    field(2)[2] _t04B6 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04B0, _t04B5);
    delta04B7 = prim @00A5<#∞; %2; $[2]> (_t04B6, xn04A9);
    xn04A9 = prim -0026<$[2]> (xn04A9, delta04B7);
    real _t04B8 = 0.1e-7;
    real _t04B9 = 0.1e-7;
    real _t04BA = prim *0034 (_t04B8, _t04B9);
    real _t04BB = prim •00CE<$[2]; $[2]; $[]> (delta04B7, delta04B7);
    bool _t04BC = prim >=007E (_t04BA, _t04BB);
    if _t04BC {
      real _t04BD = 0.1e1;
      real _t04BE = 0.1e-8;
      real _t04BF = prim +0017<$[]> (_t04BD, _t04BE);
      real _t04C0 = 0.1e1;
      real _t04C1 = 0.1e1;
      vec2 _t04C2 = [_t04C0, _t04C1];
      real _t04C3 = prim •00CE<$[2]; $[2]; $[]> (_t04C2, xn04A9);
      bool _t04C4 = prim >0080 (_t04BF, _t04C3);
      real _t04C5 = 0.1e-8;
      real _t04C6 = 0.1e-8;
      vec2 _t04C7 = [_t04C5, _t04C6];
      vec2 _t04C8 = prim +0017<$[2]> (_t04C7, xn04A9);
      real _t04C9 = _t04C8[0];
      real _t04CA = -0.e0;
      bool _t04CB = prim >0080 (_t04C9, _t04CA);
      real _t04CC = 0.1e-8;
      real _t04CD = 0.1e-8;
      vec2 _t04CE = [_t04CC, _t04CD];
      vec2 _t04CF = prim +0017<$[2]> (_t04CE, xn04A9);
      real _t04D0 = _t04CF[1];
      real _t04D1 = -0.e0;
      bool _t04D2 = prim >0080 (_t04D0, _t04D1);
      bool _t04D3 = prim $and01C4 (_t04CB, _t04D2);
      bool _t04D4 = prim $and01C4 (_t04C4, _t04D3);
      if _t04D4 {
        Femdata: MeshPos _t04D5 = extractFemItemN((mesh04A6, cellInt04A5, xn04A9, pos04A4),AllBuild(MeshPos),);
        return _t04D5;
      } else {
        Femdata: MeshPos _t04D6 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
        return _t04D6;
      }
    }
  }
  Femdata: MeshPos _t04D8 = extractFemItemN((mesh04A6),InvalidBuild(MeshPos),);
  return _t04D8;
}
function int[2]#5 nextCell404EF (int faceIdx0562, int cell0563, Femdata: Mesh mesh0564)
{
  int _t0565 = 6;
  int _t0566 = prim *0033 (cell0563, _t0565);
  int _t0567 = 2;
  int _t0568 = prim *0033 (faceIdx0562, _t0567);
  int _t0569 = prim +0015 (_t0566, _t0568);
  int[2] _t056A = extractFemItemN((mesh0564, _t0569),CellFaceCell(Mesh),);
  return _t056A;
}
globalInit {
  int _t040A = 0;
  int _t0408 = 1;
  int _t040C = extractFemItem(NumCell(Mesh), int, a0406);
  int _t040B = prim -0024 (_t040C, _t0408);
  int[] _t040F = prim $range01C3 (_t040A, _t040B);
  Femdata: MeshCell[] _t0410 = {};
  foreach _t040E in _t040F {
    Femdata: MeshCell _t0411 = loadFem(MeshCell, a0406, _t040E);
    _t0410 = prim @0010<Femdata: MeshCell> (_t0410, _t0411);
  }
  0cell_a0407 = _t0410;
  b0412 = loadFem(Space, 0b0412_intermedateGlobal0413, a0406);
  c0414 = loadFem(FemFunc, 0c0414_intermedateGlobal0415, b0412);
  vec3 _t07BC = prim -0026<$[3]> (camAt041C, camEye0418);
  camDist07BD = prim |()|00B5<$[3]> (_t07BC);
  vec3 _t07C0 = prim -0026<$[3]> (camAt041C, camEye0418);
  camN07C1 = prim normalize0137<$[3]> (_t07C0);
  vec3 _t07C2 = prim ×00BE (camN07C1, camUp0420);
  camU07C3 = prim normalize0137<$[3]> (_t07C2);
  camV07C4 = prim ×00BE (camU07C3, camN07C1);
  real _t07C5 = 0.314159265358979323846264338327950288e1;
  real _t07C6 = prim *0034 (camFOV0424, _t07C5);
  real _t07C7 = 0.36e3;
  real _t07C8 = prim /0055 (_t07C6, _t07C7);
  real _t07C9 = prim tan0179 (_t07C8);
  camVmax07CA = prim *0034 (_t07C9, camDist07BD);
  real _t07CB = (real)iresU0425;
  real _t07CC = prim *0034 (camVmax07CA, _t07CB);
  real _t07CD = (real)iresV0426;
  camUmax07CE = prim /0055 (_t07CC, _t07CD);
  rayVec07D3 = camN07C1;
}
strand ray (int ui07DD, int vi07DE) {
  real rayU07DF;
  real rayV07E6;
  vec3 UV07ED;
  vec3 rayOrig07F0;
  int offset07F1;
  int len07F4;
  int itter07F9;
  int idx07FA;
  vec2 interval07FB;
  real s07FC;
  real e07FD;
  Femdata: MeshCell cc07FE;
  Femdata: FuncCell fc0800;
  output vec2[] intervals0801;
  output Femdata: MeshCell[] newCells0804;
  {
    real _t07E0 = prim unary -008B<$[]> (camUmax07CE);
    real _t07E1 = -0.5e0;
    real _t07E2 = (real)ui07DD;
    real _t07E3 = (real)iresU0425;
    real _t07E4 = 0.5e0;
    real _t07E5 = prim -0026<$[]> (_t07E3, _t07E4);
    rayU07DF = prim lerp0098<$[]> (_t07E0, camUmax07CE, _t07E1, _t07E2, _t07E5);
    real _t07E7 = prim unary -008B<$[]> (camVmax07CA);
    real _t07E8 = -0.5e0;
    real _t07E9 = (real)vi07DE;
    real _t07EA = (real)iresV0426;
    real _t07EB = 0.5e0;
    real _t07EC = prim -0026<$[]> (_t07EA, _t07EB);
    rayV07E6 = prim lerp0098<$[]> (_t07E7, camVmax07CA, _t07E8, _t07E9, _t07EC);
    vec3 _t07EE = prim *0036<$[3]> (rayU07DF, camU07C3);
    vec3 _t07EF = prim *0036<$[3]> (rayV07E6, camV07C4);
    UV07ED = prim +0017<$[3]> (_t07EE, _t07EF);
    rayOrig07F0 = prim +0017<$[3]> (camEye0418, UV07ED);
    int _t07F2 = prim *0033 (ui07DD, iresV0426);
    int _t07F3 = prim +0015 (_t07F2, vi07DE);
    offset07F1 = prim $dynsub01C2<int> (indecies0435, _t07F3);
    int _t07F5 = prim *0033 (iresU0425, iresV0426);
    int _t07F6 = prim *0033 (ui07DD, iresV0426);
    int _t07F7 = prim +0015 (_t07F5, _t07F6);
    int _t07F8 = prim +0015 (_t07F7, vi07DE);
    len07F4 = prim $dynsub01C2<int> (indecies0435, _t07F8);
    itter07F9 = 0;
    idx07FA = prim +0015 (offset07F1, itter07F9);
    interval07FB = prim $dynsub01C2<vec2> (times0436, idx07FA);
    s07FC = interval07FB[0];
    e07FD = interval07FB[1];
    int _t07FF = 0;
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t07FF);
    Femdata: FuncCell fc0886;
    int _t0887 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t0888 = loadFem(FuncCell, c0414, _t0887);
    fc0886 = _t0888;
    fc0800 = fc0886;
    vec2[0] _t0802 = {};
    vec2[] _t0803 = (vec2[])_t0802;
    intervals0801 = _t0803;
    Femdata: MeshCell[0] _t0805 = {};
    Femdata: MeshCell[] _t0806 = (Femdata: MeshCell[])_t0805;
    newCells0804 = _t0806;
  }
  start
  {
    int _t0807 = 0;
    bool _t0808 = prim ==0082 (len07F4, _t0807);
    if _t0808 {
      stabilize;
    }
    int _t0809 = prim $dynsub01C2<int> (cells0437, idx07FA);
    cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0809);
    Femdata: FuncCell fc0889;
    int _t088A = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    Femdata: FuncCell _t088B = loadFem(FuncCell, c0414, _t088A);
    fc0889 = _t088B;
    fc0800 = fc0889;
  }
  update
  {
    int _t080A = 1;
    bool _t080B = prim <0079 (len07F4, _t080A);
    if _t080B {
      stabilize;
    }
    vec3 _t080C = prim *0038<$[3]> (rayVec07D3, s07FC);
    vec3 rayStart080D = prim +0017<$[3]> (rayOrig07F0, _t080C);
    real _t080E = rayStart080D[0];
    real _t080F = rayStart080D[1];
    vec2 project0810 = [_t080E, _t080F];
    Femdata: FemFunc _t0811 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0812 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0813 = extractFem(_t0812, Space);
    int _t0814 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0815 = femField(_t0811,_t0814,field(2)[],refField,);
    Femdata: Mesh _t0816 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0817 = extractFem(cc07FE, Mesh);
    int _t0818 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0819 = femField(_t0816,_t0818,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t081A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0815, _t0819);
    real _t081B = prim @00A5<#∞; %2; $[]> (_t081A, project0810);
    real _t081C = rayStart080D[2];
    real f0081D = prim -0026<$[]> (_t081B, _t081C);
    real _t081E = rayVec07D3[0];
    real _t081F = rayVec07D3[1];
    vec2 _t0820 = [_t081E, _t081F];
    Femdata: FemFunc _t0821 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0822 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0823 = extractFem(_t0822, Space);
    int _t0824 = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t0825 = femField(_t0821,_t0824,field(2)[],refField,);
    Femdata: Mesh _t0826 = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t0827 = extractFem(cc07FE, Mesh);
    int _t0828 = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t0829 = femField(_t0826,_t0828,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t082A = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t0825, _t0829);
    field(2)[2] _t082B = prim ∇00A8<#∞; %2> (_t082A);
    vec2 _t082C = prim @00A5<#∞; %2; $[2]> (_t082B, project0810);
    real _t082D = prim •00CE<$[2]; $[2]; $[]> (_t0820, _t082C);
    real _t082E = rayVec07D3[2];
    real _t082F = prim -0026<$[]> (_t082D, _t082E);
    real _t0830 = prim |()|00B5<$[]> (_t082F);
    Femdata: Mesh _t0831 = extractFem(cc07FE, Mesh);
    int _t0832 = extractFemItem(CellIndex(Mesh), int, cc07FE);
    real _t0833 = extractFemItem2(CellData(G)(Mesh), int, _t0831, _t0832 : int);
    real _t0834 = prim /0055 (_t0830, _t0833);
    real _t0835 = prim -0026<$[]> (e07FD, s07FC);
    real gradEps0836 = prim min0127 (_t0834, _t0835);
    Femdata: FemFunc _t0837 = extractFem(fc0800, FemFunc);
    Femdata: FemFunc _t0838 = extractFem(fc0800, FemFunc);
    Femdata: Space _t0839 = extractFem(_t0838, Space);
    int _t083A = extractFemItem(CellIndex(FuncCell), int, fc0800);
    field(2)[] _t083B = femField(_t0837,_t083A,field(2)[],refField,);
    Femdata: Mesh _t083C = extractFem(cc07FE, Mesh);
    Femdata: Mesh _t083D = extractFem(cc07FE, Mesh);
    int _t083E = extractFemItem(CellIndex(MeshCell), int, cc07FE);
    field(2)[2] _t083F = femField(_t083C,_t083E,field(2)[2],InvTransform,_msh_newtonInverse04A3 );
    field(2)[] _t0840 = prim ∘0164<#∞; %2; $[]; %2; $[2]> (_t083B, _t083F);
    real _t0841 = rayVec07D3[0];
    real _t0842 = rayVec07D3[1];
    vec2 _t0843 = [_t0841, _t0842];
    vec2 _t0844 = prim *0036<$[2]> (gradEps0836, _t0843);
    vec2 _t0845 = prim +0017<$[2]> (project0810, _t0844);
    real _t0846 = prim @00A5<#∞; %2; $[]> (_t0840, _t0845);
    real _t0847 = rayStart080D[2];
    real _t0848 = prim -0026<$[]> (_t0846, _t0847);
    real _t0849 = rayVec07D3[2];
    real _t084A = prim *0034 (gradEps0836, _t0849);
    real f1084B = prim -0026<$[]> (_t0848, _t084A);
    string _t084C = "vals:";
    vec2 _t084D = [f0081D, f1084B];
    string _t084E = "\n";
    print (_t084C, _t084D, _t084E);
    int _t084F;
    real _t08A4 = 0.e0;
    bool _t08A5 = prim >0080 (f0081D, _t08A4);
    if _t08A5 {
      int _t08A6 = 1;
      _t084F = _t08A6;
    } else {
      real _t08A7 = 0.e0;
      bool _t08A8 = prim <007A (f0081D, _t08A7);
      if _t08A8 {
        int _t08A9 = -1;
        _t084F = _t08A9;
      } else {
        int _t08AA = 0;
        _t084F = _t08AA;
      }
    }
    int _t0850;
    real _t089D = 0.e0;
    bool _t089E = prim >0080 (f1084B, _t089D);
    if _t089E {
      int _t089F = 1;
      _t0850 = _t089F;
    } else {
      real _t08A0 = 0.e0;
      bool _t08A1 = prim <007A (f1084B, _t08A0);
      if _t08A1 {
        int _t08A2 = -1;
        _t0850 = _t08A2;
      } else {
        int _t08A3 = 0;
        _t0850 = _t08A3;
      }
    }
    int _t0851 = prim *0033 (_t084F, _t0850);
    int _t0852 = 0;
    bool _t0853 = prim >007F (_t0851, _t0852);
    bool _t0854 = prim !00BC (_t0853);
    if _t0854 {
      int _t0855;
      real _t0896 = 0.e0;
      bool _t0897 = prim >0080 (f0081D, _t0896);
      if _t0897 {
        int _t0898 = 1;
        _t0855 = _t0898;
      } else {
        real _t0899 = 0.e0;
        bool _t089A = prim <007A (f0081D, _t0899);
        if _t089A {
          int _t089B = -1;
          _t0855 = _t089B;
        } else {
          int _t089C = 0;
          _t0855 = _t089C;
        }
      }
      int _t0856;
      real _t088F = 0.e0;
      bool _t0890 = prim >0080 (f1084B, _t088F);
      if _t0890 {
        int _t0891 = 1;
        _t0856 = _t0891;
      } else {
        real _t0892 = 0.e0;
        bool _t0893 = prim <007A (f1084B, _t0892);
        if _t0893 {
          int _t0894 = -1;
          _t0856 = _t0894;
        } else {
          int _t0895 = 0;
          _t0856 = _t0895;
        }
      }
      int _t0857 = prim *0033 (_t0855, _t0856);
      int _t0858 = 0;
      bool _t0859 = prim ==0082 (_t0857, _t0858);
      if _t0859 {
        string _t085A = "Warn: 0 update\n";
        print (_t085A);
      }
      string _t085B = "update with interval:";
      string _t085C = "\n";
      print (_t085B, gradEps0836, _t085C);
      string _t085D = "Vals I:";
      vec2 _t085E = [f0081D, f1084B];
      string _t085F = "\n";
      print (_t085D, _t085E, _t085F);
      string _t0860 = "New interval:";
      real _t0861 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0862 = [s07FC, _t0861];
      string _t0863 = "\n";
      print (_t0860, _t0862, _t0863);
      real _t0864 = prim +0017<$[]> (s07FC, gradEps0836);
      vec2 _t0865 = [s07FC, _t0864];
      intervals0801 = prim @0010<vec2> (intervals0801, _t0865);
      newCells0804 = prim @0010<Femdata: MeshCell> (newCells0804, cc07FE);
      s07FC = prim +0017<$[]> (s07FC, gradEps0836);
    } else {
      real _t0866 = prim |()|00B5<$[]> (f0081D);
      real _t0867 = 0.2e1;
      Femdata: Mesh _t0868 = extractFem(cc07FE, Mesh);
      int _t0869 = extractFemItem(CellIndex(Mesh), int, cc07FE);
      real _t086A = extractFemItem2(CellData(L)(Mesh), int, _t0868, _t0869 : int);
      real _t086B = prim *0034 (_t0867, _t086A);
      real _t086C = prim /0055 (_t0866, _t086B);
      real epsUpdate086D = prim max0125 (gradEps0836, _t086C);
      string _t086E = "update L:";
      string _t086F = "\n";
      print (_t086E, epsUpdate086D, _t086F);
      string _t0870 = "update G:";
      string _t0871 = "\n";
      print (_t0870, gradEps0836, _t0871);
      s07FC = prim +0017<$[]> (s07FC, epsUpdate086D);
    }
    bool _t0872 = prim >=007E (s07FC, e07FD);
    if _t0872 {
      int _t0873 = 1;
      itter07F9 = prim +0015 (itter07F9, _t0873);
      bool _t0874 = prim >=007D (itter07F9, len07F4);
      if _t0874 {
        stabilize;
      } else {
        int _t0875 = prim +0015 (offset07F1, itter07F9);
        interval07FB = prim $dynsub01C2<vec2> (times0436, _t0875);
        int _t0876 = prim +0015 (offset07F1, itter07F9);
        int _t0877 = prim $dynsub01C2<int> (cells0437, _t0876);
        cc07FE = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0407, _t0877);
        s07FC = interval07FB[0];
        e07FD = interval07FB[1];
        Femdata: FuncCell fc088C;
        int _t088D = extractFemItem(CellIndex(MeshCell), int, cc07FE);
        Femdata: FuncCell _t088E = loadFem(FuncCell, c0414, _t088D);
        fc088C = _t088E;
        fc0800 = fc088C;
      }
    }
  }
}
grid(2) {
  int _t0878 = 0;
  int _t0879 = 1;
  int _t087A = prim -0024 (iresU0425, _t0879);
  int[] _t087B = prim $range01C3 (_t0878, _t087A);
  foreach vi0881 in _t087B {
    int _t087C = 0;
    int _t087D = 1;
    int _t087E = prim -0024 (iresV0426, _t087D);
    int[] _t087F = prim $range01C3 (_t087C, _t087E);
    foreach ui0880 in _t087F {
      new ray (ui0880, vi0881);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a08AB (a) = <no-default>
  input 0b0412_intermedateGlobal08AC (b) = <no-default>
  input 0c0414_intermedateGlobal08AD (c) = <no-default>
  input isoval08AE (isoval) = <default>
  input thick08AF (thick) = <default>
  input camEye08B0 (camEye) = <default>
  input camAt08B1 (camAt) = <default>
  input camUp08B2 (camUp) = <default>
  input camFOV08B3 (camFOV) = <default>
  input iresU08B4 (iresU) = <default>
  input iresV08B5 (iresV) = <default>
  input camNear08B6 (camNear) = <default>
  input camFar08B7 (camFar) = <default>
  input refStep08B8 (refStep) = <default>
  input rayStep08B9 (rayStep) = <default>
  input lightVsp08BA (lightVsp) = <default>
  input phongKa08BB (phongKa) = <default>
  input phongKd08BC (phongKd) = <default>
  input debug08BD (debug) = <default>
  input debugU08BE (debugU) = <default>
  input debugV08BF (debugV) = <default>
  input eps08C0 (eps) = <default>
  input indecies08C1 (indecies) = <no-default>
  input times08C2 (times) = <no-default>
  input cells08C3 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0917
  global femData:Space b0918
  global femData:FemFunc c0919
  global real camDist091A
  global tensor[3] camN091B
  global tensor[3] camU091C
  global tensor[3] camV091D
  global real camVmax091E
  global real camUmax091F
  global tensor[3] rayVec0920
## functions
  function femData:MeshPos _msh_newtonInverse0994 (tensor[2] pos0921#2, int cellInt0922#3, femData:Mesh mesh0923#7) {
    ENTRY0993:  preds = []
      real _t0924#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t0926#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0928#1 = <tensor[2]>[_t0924,_t0926];
      field _t092A#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt0922,mesh0923,mesh0923);
      field _t092C#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t092A);
      field _t092E#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t092C);
      real _t0930#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t0932#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] _t0934#1 = <tensor[2]>[_t0930,_t0932];
      tensor[2,2] A0936#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t092E,_t0934);
      int _t0938#1 = 0;
      int _t093A#1 = 16;
      int[] _t093C#1 = Range(_t0938,_t093A);
    FOREACH0940:  preds = [ASSIGN093D,NEXT098F]
      foreach (itter093E in _t093C) on exit goto ASSIGN0991
        tensor[2] xn093F#2 = phi(xn0928,xn0949)
      field _t0941#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt0922,mesh0923,mesh0923);
      field _t0943#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos0921,_t0941);
      field _t0945#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A0936,_t0943);
      tensor[2] delta0947#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0945,xn093F);
      tensor[2] xn0949#5 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn093F,delta0947);
      real _t094B#1 = 0.1e-7;
      real _t094D#1 = 0.1e-7;
      real _t094F#1 = λ(T0[],T1[])<(T0 * T1)> (_t094B,_t094D);
      real _t0951#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta0947,delta0947);
      bool _t0953#1 = GTE<real>(_t094F,_t0951);
      if _t0953 then goto ASSIGN0957 else goto JOIN0955
    ASSIGN0957:  preds = [COND098E]
      real _t0956#1 = 0.1e1;
      real _t0958#1 = 0.1e-8;
      real _t095A#1 = λ(T0[],T1[])<(T0 + T1)> (_t0956,_t0958);
      real _t095C#1 = 0.1e1;
      real _t095E#1 = 0.1e1;
      tensor[2] _t0960#1 = <tensor[2]>[_t095C,_t095E];
      real _t0962#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0960,xn0949);
      bool _t0964#1 = GT<real>(_t095A,_t0962);
      real _t0966#1 = 0.1e-8;
      real _t0968#1 = 0.1e-8;
      tensor[2] _t096A#1 = <tensor[2]>[_t0966,_t0968];
      tensor[2] _t096C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t096A,xn0949);
      real _t096E#1 = TensorIndex<tensor[2],[0]>(_t096C);
      real _t0970#1 = -0.e0;
      bool _t0972#1 = GT<real>(_t096E,_t0970);
      real _t0974#1 = 0.1e-8;
      real _t0976#1 = 0.1e-8;
      tensor[2] _t0978#1 = <tensor[2]>[_t0974,_t0976];
      tensor[2] _t097A#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0978,xn0949);
      real _t097C#1 = TensorIndex<tensor[2],[1]>(_t097A);
      real _t097E#1 = -0.e0;
      bool _t0980#1 = GT<real>(_t097C,_t097E);
      bool _t0982#1 = BAnd(_t0972,_t0980);
      bool _t0984#1 = BAnd(_t0964,_t0982);
      if _t0984 then goto ASSIGN0988 else goto ASSIGN098B
    ASSIGN0988:  preds = [COND098D]
      femData:MeshPos _t0987#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0923,cellInt0922,xn0949,pos0921);
      return _t0987
      goto JOIN0986
    JOIN0986:  preds = [*RETURN(_t0987)0989,*RETURN(_t098A)098C]
      goto JOIN0955
    JOIN0955:  preds = [*JOIN0986,COND098E]
      goto FOREACH0940
    ASSIGN098B:  preds = [COND098D]
      femData:MeshPos _t098A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t098A
      goto JOIN0986
    ASSIGN0991:  preds = [FOREACH0940]
      femData:MeshPos _t0990#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t0990
}
  function int[2] nextCell409A6 (int faceIdx0995#1, int cell0996#1, femData:Mesh mesh0997#1) {
    ENTRY09A5:  preds = []
      int _t0998#1 = 6;
      int _t099A#1 = IMul(cell0996,_t0998);
      int _t099C#1 = 2;
      int _t099E#1 = IMul(faceIdx0995,_t099C);
      int _t09A0#1 = IAdd(_t099A,_t099E);
      int[2] _t09A2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0997,_t09A0);
      return _t09A2
}
## input initialization
  ENTRY0915:  preds = []
    real isoval08C4#1 = 0.2e0;
    globals.isoval08AE = isoval08C4;
    real thick08C7#1 = 0.7e-1;
    globals.thick08AF = thick08C7;
    real _t08CA#1 = -0.5e0;
    real _t08CC#1 = 0.5e0;
    real _t08CE#1 = 0.5e0;
    tensor[3] camEye08D0#1 = <tensor[3]>[_t08CA,_t08CC,_t08CE];
    globals.camEye08B0 = camEye08D0;
    real _t08D3#1 = 0.5e0;
    real _t08D5#1 = 0.5e0;
    real _t08D7#1 = 0.5e0;
    tensor[3] camAt08D9#1 = <tensor[3]>[_t08D3,_t08D5,_t08D7];
    globals.camAt08B1 = camAt08D9;
    real _t08DC#1 = 0.e0;
    real _t08DE#1 = 0.e0;
    real _t08E0#1 = 0.1e1;
    tensor[3] camUp08E2#1 = <tensor[3]>[_t08DC,_t08DE,_t08E0];
    globals.camUp08B2 = camUp08E2;
    real camFOV08E5#1 = 0.137e2;
    globals.camFOV08B3 = camFOV08E5;
    int iresU08E8#1 = 10;
    globals.iresU08B4 = iresU08E8;
    int iresV08EB#1 = 10;
    globals.iresV08B5 = iresV08EB;
    real camNear08EE#1 = -0.2e1;
    globals.camNear08B6 = camNear08EE;
    real camFar08F1#1 = 0.5e1;
    globals.camFar08B7 = camFar08F1;
    real refStep08F4#1 = 0.1e1;
    globals.refStep08B8 = refStep08F4;
    real rayStep08F7#1 = 0.1e-1;
    globals.rayStep08B9 = rayStep08F7;
    real _t08FA#1 = 0.e0;
    real _t08FC#1 = 0.e0;
    real _t08FE#1 = 0.1e1;
    tensor[3] lightVsp0900#1 = <tensor[3]>[_t08FA,_t08FC,_t08FE];
    globals.lightVsp08BA = lightVsp0900;
    real phongKa0903#1 = 0.1e0;
    globals.phongKa08BB = phongKa0903;
    real phongKd0906#1 = 0.9e0;
    globals.phongKd08BC = phongKd0906;
    bool debug0909#1 = false;
    globals.debug08BD = debug0909;
    int debugU090C#1 = 8;
    globals.debugU08BE = debugU090C;
    int debugV090F#1 = 2;
    globals.debugV08BF = debugV090F;
    real eps0912#1 = 0.1e-8;
    globals.eps08C0 = eps0912;
    return
## global-variable initialization
  ENTRY0A01:  preds = []
    femData:Mesh a09AF#3 = globals.a08AB;
    femData:Space 0b0412_intermedateGlobal09AE#1 = globals.0b0412_intermedateGlobal08AC;
    femData:FemFunc 0c0414_intermedateGlobal09AD#1 = globals.0c0414_intermedateGlobal08AD;
    tensor[3] camEye09AC#2 = globals.camEye08B0;
    tensor[3] camAt09AB#2 = globals.camAt08B1;
    tensor[3] camUp09AA#1 = globals.camUp08B2;
    real camFOV09A9#1 = globals.camFOV08B3;
    int iresU09A8#1 = globals.iresU08B4;
    int iresV09A7#1 = globals.iresV08B5;
    int _t09B9#1 = 0;
    int _t09BB#1 = 1;
    int _t09BD#1 = ExtractFemItem<int,NumCell(Mesh)>(a09AF);
    int _t09BF#1 = ISub(_t09BD,_t09BB);
    int[] _t09C1#1 = Range(_t09B9,_t09BF);
    femData:MeshCell[] _t09C3#1 = <femData:MeshCell[]>{};
  FOREACH09C7:  preds = [ASSIGN09C4,NEXT09CC]
    foreach (_t09C5 in _t09C1) on exit goto ASSIGN09CE
      femData:MeshCell[] _t09C6#2 = phi(_t09C3,_t09CA)
    femData:MeshCell _t09C8#1 = LoadFem<femData:MeshCell>(a09AF,_t09C5);
    femData:MeshCell[] _t09CA#1 = Append<femData:MeshCell>(_t09C6,_t09C8);
    goto FOREACH09C7
  ASSIGN09CE:  preds = [FOREACH09C7]
    femData:MeshCell[] 0cell_a09CD#1 = _t09C6;
    globals.0cell_a0917 = 0cell_a09CD;
    femData:Space b09D0#2 = LoadFem<femData:Space>(0b0412_intermedateGlobal09AE,a09AF);
    globals.b0918 = b09D0;
    femData:FemFunc c09D3#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal09AD,b09D0);
    globals.c0919 = c09D3;
    tensor[3] _t09D6#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt09AB,camEye09AC);
    real camDist09D8#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t09D6);
    globals.camDist091A = camDist09D8;
    tensor[3] _t09DB#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt09AB,camEye09AC);
    tensor[3] camN09DD#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t09DB,_t09DB);
    globals.camN091B = camN09DD;
    tensor[3] _t09E0#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN09DD,camUp09AA);
    tensor[3] camU09E2#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t09E0,_t09E0);
    globals.camU091C = camU09E2;
    tensor[3] camV09E5#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU09E2,camN09DD);
    globals.camV091D = camV09E5;
    real _t09E8#1 = 0.314159265358979323846264338327950288e1;
    real _t09EA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV09A9,_t09E8);
    real _t09EC#1 = 0.36e3;
    real _t09EE#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t09EA,_t09EC);
    real _t09F0#1 = λ(T0[])<Tangent(T0)> (_t09EE);
    real camVmax09F2#2 = λ(T0[],T1[])<(T0 * T1)> (_t09F0,camDist09D8);
    globals.camVmax091E = camVmax09F2;
    real _t09F5#1 = IntToReal(iresU09A8);
    real _t09F7#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax09F2,_t09F5);
    real _t09F9#1 = IntToReal(iresV09A7);
    real camUmax09FB#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t09F7,_t09F9);
    globals.camUmax091F = camUmax09FB;
    tensor[3] rayVec09FE#1 = camN09DD;
    globals.rayVec0920 = rayVec09FE;
    return
## strand
  strand ray (int ui0A20#3, int vi0A21#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0AAD:  preds = []
        femData:MeshCell[] 0cell_a0A3B#1 = globals.0cell_a0917;
        femData:FemFunc c0A3A#1 = globals.c0919;
        tensor[3] camEye0A39#1 = globals.camEye08B0;
        int iresU0A38#2 = globals.iresU08B4;
        int iresV0A37#4 = globals.iresV08B5;
        int[] indecies0A36#2 = globals.indecies08C1;
        tensor[2][] times0A35#1 = globals.times08C2;
        tensor[3] camU0A34#1 = globals.camU091C;
        tensor[3] camV0A33#1 = globals.camV091D;
        real camVmax0A32#2 = globals.camVmax091E;
        real camUmax0A31#2 = globals.camUmax091F;
        real _t0A56#1 = λ(T0[])<Neg(T0)> (camUmax0A31);
        real _t0A58#1 = -0.5e0;
        real _t0A5A#1 = IntToReal(ui0A20);
        real _t0A5C#1 = IntToReal(iresU0A38);
        real _t0A5E#1 = 0.5e0;
        real _t0A60#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0A5C,_t0A5E);
        real rayU0A62#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0A56,camUmax0A31,_t0A58,_t0A5A,_t0A60);
        real _t0A64#1 = λ(T0[])<Neg(T0)> (camVmax0A32);
        real _t0A66#1 = -0.5e0;
        real _t0A68#1 = IntToReal(vi0A21);
        real _t0A6A#1 = IntToReal(iresV0A37);
        real _t0A6C#1 = 0.5e0;
        real _t0A6E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0A6A,_t0A6C);
        real rayV0A70#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0A64,camVmax0A32,_t0A66,_t0A68,_t0A6E);
        tensor[3] _t0A72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU0A62,camU0A34);
        tensor[3] _t0A74#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV0A70,camV0A33);
        tensor[3] UV0A76#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t0A72,_t0A74);
        tensor[3] rayOrig0A78#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye0A39,UV0A76);
        int _t0A7A#1 = IMul(ui0A20,iresV0A37);
        int _t0A7C#1 = IAdd(_t0A7A,vi0A21);
        int offset0A7E#2 = Subscript<int[]>(indecies0A36,_t0A7C);
        int _t0A80#1 = IMul(iresU0A38,iresV0A37);
        int _t0A82#1 = IMul(ui0A20,iresV0A37);
        int _t0A84#1 = IAdd(_t0A80,_t0A82);
        int _t0A86#1 = IAdd(_t0A84,vi0A21);
        int len0A88#1 = Subscript<int[]>(indecies0A36,_t0A86);
        int itter0A8A#2 = 0;
        int idx0A8C#2 = IAdd(offset0A7E,itter0A8A);
        tensor[2] interval0A8E#3 = Subscript<tensor[2][]>(times0A35,idx0A8C);
        real s0A90#1 = TensorIndex<tensor[2],[0]>(interval0A8E);
        real e0A92#1 = TensorIndex<tensor[2],[1]>(interval0A8E);
        int _t0A94#1 = 0;
        femData:MeshCell cc0A96#2 = Subscript<femData:MeshCell[]>(0cell_a0A3B,_t0A94);
        int _t0A99#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0A96);
        femData:FuncCell _t0A9B#1 = LoadFem<femData:FuncCell>(c0A3A,_t0A99);
        femData:FuncCell fc0A9D#1 = _t0A9B;
        femData:FuncCell fc0A9F#1 = fc0A9D;
        tensor[2][0] _t0AA1#1 = <tensor[2][0]>{};
        tensor[2][] _t0AA3#1 = MkDynamic<tensor[2],0>(_t0AA1);
        tensor[2][] intervals0AA5#1 = _t0AA3;
        femData:MeshCell[0] _t0AA7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0AA9#1 = MkDynamic<femData:MeshCell,0>(_t0AA7);
        femData:MeshCell[] newCells0AAB#1 = _t0AA9;
        self.rayU = rayU0A62;
        self.rayV = rayV0A70;
        self.UV = UV0A76;
        self.rayOrig = rayOrig0A78;
        self.offset = offset0A7E;
        self.len = len0A88;
        self.itter = itter0A8A;
        self.idx = idx0A8C;
        self.interval = interval0A8E;
        self.s = s0A90;
        self.e = e0A92;
        self.cc = cc0A96;
        self.fc = fc0A9F;
        self.intervals = intervals0AA5;
        self.newCells = newCells0AAB;
        return
    end state init
    method start
        ENTRY0AFE:  preds = []
          femData:MeshCell[] 0cell_a0AC0#1 = globals.0cell_a0917;
          femData:FemFunc c0ABF#1 = globals.c0919;
          int[] cells0ABE#1 = globals.cells08C3;
          real rayU0AC4#0 = self.rayU;
          real rayV0AC5#0 = self.rayV;
          tensor[3] UV0AC6#0 = self.UV;
          tensor[3] rayOrig0AC7#0 = self.rayOrig;
          int offset0AC8#0 = self.offset;
          int len0AC9#1 = self.len;
          int itter0ACA#2 = self.itter;
          int idx0ACB#1 = self.idx;
          tensor[2] interval0ACC#2 = self.interval;
          real s0ACD#2 = self.s;
          real e0ACE#2 = self.e;
          femData:MeshCell cc0ACF#1 = self.cc;
          femData:FuncCell fc0AD0#1 = self.fc;
          tensor[2][] intervals0AD1#2 = self.intervals;
          femData:MeshCell[] newCells0AD2#2 = self.newCells;
          int _t0AE2#1 = 0;
          bool _t0AE4#1 = EQ<int>(len0AC9,_t0AE2);
          if _t0AE4 then goto SAVE0AE8 else goto JOIN0AE6
        SAVE0AE8:  preds = [COND0AF0]
          self.itter = itter0ACA;
          self.interval = interval0ACC;
          self.s = s0ACD;
          self.e = e0ACE;
          self.cc = cc0ACF;
          self.fc = fc0AD0;
          self.intervals = intervals0AD1;
          self.newCells = newCells0AD2;
          stabilize
          goto JOIN0AE6
        JOIN0AE6:  preds = [*STABILIZE0AE7,COND0AF0]
          int _t0AF1#1 = Subscript<int[]>(cells0ABE,idx0ACB);
          femData:MeshCell cc0AF3#2 = Subscript<femData:MeshCell[]>(0cell_a0AC0,_t0AF1);
          int _t0AF6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0AF3);
          femData:FuncCell _t0AF8#1 = LoadFem<femData:FuncCell>(c0ABF,_t0AF6);
          femData:FuncCell fc0AFA#1 = _t0AF8;
          femData:FuncCell fc0AFC#1 = fc0AFA;
          self.itter = itter0ACA;
          self.interval = interval0ACC;
          self.s = s0ACD;
          self.e = e0ACE;
          self.cc = cc0AF3;
          self.fc = fc0AFC;
          self.intervals = intervals0AD1;
          self.newCells = newCells0AD2;
          active
    end start
    method update
        ENTRY0CBC:  preds = []
          femData:MeshCell[] 0cell_a0B0C#1 = globals.0cell_a0917;
          femData:FemFunc c0B0B#1 = globals.c0919;
          tensor[2][] times0B0A#1 = globals.times08C2;
          int[] cells0B09#1 = globals.cells08C3;
          tensor[3] rayVec0B08#7 = globals.rayVec0920;
          real rayU0B12#0 = self.rayU;
          real rayV0B13#0 = self.rayV;
          tensor[3] UV0B14#0 = self.UV;
          tensor[3] rayOrig0B15#1 = self.rayOrig;
          int offset0B16#2 = self.offset;
          int len0B17#2 = self.len;
          int itter0B18#3 = self.itter;
          int idx0B19#0 = self.idx;
          tensor[2] interval0B1A#3 = self.interval;
          real s0B1B#9 = self.s;
          real e0B1C#5 = self.e;
          femData:MeshCell cc0B1D#17 = self.cc;
          femData:FuncCell fc0B1E#12 = self.fc;
          tensor[2][] intervals0B1F#3 = self.intervals;
          femData:MeshCell[] newCells0B20#3 = self.newCells;
          int _t0B30#1 = 1;
          bool _t0B32#1 = LT<int>(len0B17,_t0B30);
          if _t0B32 then goto SAVE0B36 else goto JOIN0B34
        SAVE0B36:  preds = [COND0B3E]
          self.itter = itter0B18;
          self.interval = interval0B1A;
          self.s = s0B1B;
          self.e = e0B1C;
          self.cc = cc0B1D;
          self.fc = fc0B1E;
          self.intervals = intervals0B1F;
          self.newCells = newCells0B20;
          stabilize
          goto JOIN0B34
        JOIN0B34:  preds = [*STABILIZE0B35,COND0B3E]
          tensor[3] _t0B3F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0B1B,rayVec0B08);
          tensor[3] rayStart0B41#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0B15,_t0B3F);
          real _t0B43#1 = TensorIndex<tensor[3],[0]>(rayStart0B41);
          real _t0B45#1 = TensorIndex<tensor[3],[1]>(rayStart0B41);
          tensor[2] project0B47#3 = <tensor[2]>[_t0B43,_t0B45];
          femData:FemFunc _t0B49#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:FemFunc _t0B4B#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B4D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0B4B);
          int _t0B4F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          field _t0B51#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0B4F,_t0B4D,_t0B49);
          femData:Mesh _t0B53#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          femData:Mesh _t0B55#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B57#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          field _t0B59#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0994, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0B57,_t0B53,_t0B53);
          field _t0B5B#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0B51,_t0B59);
          real _t0B5D#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0B5B,project0B47);
          real _t0B5F#1 = TensorIndex<tensor[3],[2]>(rayStart0B41);
          real f00B61#7 = λ(T0[],T1[])<(T0) - (T1)> (_t0B5D,_t0B5F);
          real _t0B63#1 = TensorIndex<tensor[3],[0]>(rayVec0B08);
          real _t0B65#1 = TensorIndex<tensor[3],[1]>(rayVec0B08);
          tensor[2] _t0B67#1 = <tensor[2]>[_t0B63,_t0B65];
          femData:FemFunc _t0B69#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:FemFunc _t0B6B#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B6D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0B6B);
          int _t0B6F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          field _t0B71#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0B6F,_t0B6D,_t0B69);
          femData:Mesh _t0B73#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          femData:Mesh _t0B75#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B77#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          field _t0B79#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0994, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0B77,_t0B73,_t0B73);
          field _t0B7B#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0B71,_t0B79);
          field _t0B7D#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0B7B);
          tensor[2] _t0B7F#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0B7D,project0B47);
          real _t0B81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0B67,_t0B7F);
          real _t0B83#1 = TensorIndex<tensor[3],[2]>(rayVec0B08);
          real _t0B85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B81,_t0B83);
          real _t0B87#1 = λ(T0[])<Abs(T0)> (_t0B85);
          femData:Mesh _t0B89#1 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B8B#1 = ExtractFemItem<int,CellIndex(Mesh)>(cc0B1D);
          real _t0B8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0B89,_t0B8B);
          real _t0B8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0B87,_t0B8D);
          real _t0B91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0B1C,s0B1B);
          real gradEps0B93#8 = Min<real>(_t0B8F,_t0B91);
          femData:FemFunc _t0B95#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:FemFunc _t0B97#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B99#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0B97);
          int _t0B9B#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          field _t0B9D#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0B9B,_t0B99,_t0B95);
          femData:Mesh _t0B9F#2 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          femData:Mesh _t0BA1#0 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0BA3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          field _t0BA5#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0994, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0BA3,_t0B9F,_t0B9F);
          field _t0BA7#1 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0B9D,_t0BA5);
          real _t0BA9#1 = TensorIndex<tensor[3],[0]>(rayVec0B08);
          real _t0BAB#1 = TensorIndex<tensor[3],[1]>(rayVec0B08);
          tensor[2] _t0BAD#1 = <tensor[2]>[_t0BA9,_t0BAB];
          tensor[2] _t0BAF#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps0B93,_t0BAD);
          tensor[2] _t0BB1#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0B47,_t0BAF);
          real _t0BB3#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0BA7,_t0BB1);
          real _t0BB5#1 = TensorIndex<tensor[3],[2]>(rayStart0B41);
          real _t0BB7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0BB3,_t0BB5);
          real _t0BB9#1 = TensorIndex<tensor[3],[2]>(rayVec0B08);
          real _t0BBB#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps0B93,_t0BB9);
          real f10BBD#6 = λ(T0[],T1[])<(T0) - (T1)> (_t0BB7,_t0BBB);
          string _t0BBF#1 = "vals:";
          tensor[2] _t0BC1#1 = <tensor[2]>[f00B61,f10BBD];
          string _t0BC3#1 = "\n";
          Print<[string,tensor[2],string]>(_t0BBF,_t0BC1,_t0BC3);
          real _t0BC7#1 = 0.e0;
          bool _t0BC9#1 = GT<real>(f00B61,_t0BC7);
          if _t0BC9 then goto ASSIGN0BCD else goto ASSIGN0BD2
        ASSIGN0BCD:  preds = [COND0BE0]
          int _t0BCC#1 = 1;
          int _t0BCE#1 = _t0BCC;
          goto JOIN0BCB
        JOIN0BCB:  preds = [ASSIGN0BD0,JOIN0BD5]
          int _t0BCF#1 = phi(_t0BCE,_t0BD9)
          real _t0BE2#1 = 0.e0;
          bool _t0BE4#1 = GT<real>(f10BBD,_t0BE2);
          if _t0BE4 then goto ASSIGN0BE8 else goto ASSIGN0BED
        ASSIGN0BE8:  preds = [COND0BFB]
          int _t0BE7#1 = 1;
          int _t0BE9#1 = _t0BE7;
          goto JOIN0BE6
        JOIN0BE6:  preds = [ASSIGN0BEB,JOIN0BF0]
          int _t0BEA#1 = phi(_t0BE9,_t0BF4)
          int _t0BFC#1 = IMul(_t0BCF,_t0BEA);
          int _t0BFE#1 = 0;
          bool _t0C00#1 = GT<int>(_t0BFC,_t0BFE);
          bool _t0C02#1 = BNot(_t0C00);
          if _t0C02 then goto ASSIGN0C07 else goto ASSIGN0C69
        ASSIGN0C07:  preds = [COND0C84]
          real _t0C06#1 = 0.e0;
          bool _t0C08#1 = GT<real>(f00B61,_t0C06);
          if _t0C08 then goto ASSIGN0C0C else goto ASSIGN0C11
        ASSIGN0C0C:  preds = [COND0C1F]
          int _t0C0B#1 = 1;
          int _t0C0D#1 = _t0C0B;
          goto JOIN0C0A
        JOIN0C0A:  preds = [ASSIGN0C0F,JOIN0C14]
          int _t0C0E#1 = phi(_t0C0D,_t0C18)
          real _t0C21#1 = 0.e0;
          bool _t0C23#1 = GT<real>(f10BBD,_t0C21);
          if _t0C23 then goto ASSIGN0C27 else goto ASSIGN0C2C
        ASSIGN0C27:  preds = [COND0C3A]
          int _t0C26#1 = 1;
          int _t0C28#1 = _t0C26;
          goto JOIN0C25
        JOIN0C25:  preds = [ASSIGN0C2A,JOIN0C2F]
          int _t0C29#1 = phi(_t0C28,_t0C33)
          int _t0C3B#1 = IMul(_t0C0E,_t0C29);
          int _t0C3D#1 = 0;
          bool _t0C3F#1 = EQ<int>(_t0C3B,_t0C3D);
          if _t0C3F then goto ASSIGN0C43 else goto JOIN0C41
        ASSIGN0C43:  preds = [COND0C45]
          string _t0C42#1 = "Warn: 0 update\n";
          Print<[string]>(_t0C42);
          goto JOIN0C41
        JOIN0C41:  preds = [MASSIGN0C44,COND0C45]
          string _t0C46#1 = "update with interval:";
          string _t0C48#1 = "\n";
          Print<[string,real,string]>(_t0C46,gradEps0B93,_t0C48);
          string _t0C4B#1 = "Vals I:";
          tensor[2] _t0C4D#1 = <tensor[2]>[f00B61,f10BBD];
          string _t0C4F#1 = "\n";
          Print<[string,tensor[2],string]>(_t0C4B,_t0C4D,_t0C4F);
          string _t0C52#1 = "New interval:";
          real _t0C54#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          tensor[2] _t0C56#1 = <tensor[2]>[s0B1B,_t0C54];
          string _t0C58#1 = "\n";
          Print<[string,tensor[2],string]>(_t0C52,_t0C56,_t0C58);
          real _t0C5B#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          tensor[2] _t0C5D#1 = <tensor[2]>[s0B1B,_t0C5B];
          tensor[2][] intervals0C5F#1 = Append<tensor[2]>(intervals0B1F,_t0C5D);
          femData:MeshCell[] newCells0C62#1 = Append<femData:MeshCell>(newCells0B20,cc0B1D);
          real s0C65#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          goto JOIN0C04
        JOIN0C04:  preds = [ASSIGN0C67,ASSIGN0C83]
          femData:MeshCell[] newCells0C63#2 = phi(newCells0C62,newCells0B20)
          tensor[2][] intervals0C60#2 = phi(intervals0C5F,intervals0B1F)
          real s0C66#3 = phi(s0C65,s0C82)
          bool _t0C85#1 = GTE<real>(s0C66,e0B1C);
          if _t0C85 then goto ASSIGN0C89 else goto JOIN0C87
        ASSIGN0C89:  preds = [COND0CBB]
          int _t0C88#1 = 1;
          int itter0C8A#5 = IAdd(itter0B18,_t0C88);
          bool _t0C8D#1 = GTE<int>(itter0C8A,len0B17);
          if _t0C8D then goto SAVE0C91 else goto ASSIGN0C9A
        SAVE0C91:  preds = [COND0CB5]
          self.itter = itter0C8A;
          self.interval = interval0B1A;
          self.s = s0C66;
          self.e = e0B1C;
          self.cc = cc0B1D;
          self.fc = fc0B1E;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          stabilize
          goto JOIN0C8F
        JOIN0C8F:  preds = [*STABILIZE0C90,ASSIGN0CB4]
          femData:FuncCell fc0CB3#1 = phi(fc0CB2)
          femData:MeshCell cc0CA3#1 = phi(cc0CA2)
          real e0CA9#1 = phi(e0CA8)
          real s0CA6#1 = phi(s0CA5)
          tensor[2] interval0C9C#1 = phi(interval0C9B)
          goto JOIN0C87
        JOIN0C87:  preds = [JOIN0C8F,COND0CBB]
          femData:FuncCell fc0CBA#1 = phi(fc0CB3,fc0B1E)
          femData:MeshCell cc0CB9#1 = phi(cc0CA3,cc0B1D)
          real e0CB8#1 = phi(e0CA9,e0B1C)
          real s0CB7#1 = phi(s0CA6,s0C66)
          tensor[2] interval0CB6#1 = phi(interval0C9C,interval0B1A)
          int itter0C8B#1 = phi(itter0C8A,itter0B18)
          self.itter = itter0C8B;
          self.interval = interval0CB6;
          self.s = s0CB7;
          self.e = e0CB8;
          self.cc = cc0CB9;
          self.fc = fc0CBA;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          active
        ASSIGN0C9A:  preds = [COND0CB5]
          int _t0C99#1 = IAdd(offset0B16,itter0C8A);
          tensor[2] interval0C9B#3 = Subscript<tensor[2][]>(times0B0A,_t0C99);
          int _t0C9E#1 = IAdd(offset0B16,itter0C8A);
          int _t0CA0#1 = Subscript<int[]>(cells0B09,_t0C9E);
          femData:MeshCell cc0CA2#2 = Subscript<femData:MeshCell[]>(0cell_a0B0C,_t0CA0);
          real s0CA5#1 = TensorIndex<tensor[2],[0]>(interval0C9B);
          real e0CA8#1 = TensorIndex<tensor[2],[1]>(interval0C9B);
          int _t0CAC#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0CA2);
          femData:FuncCell _t0CAE#1 = LoadFem<femData:FuncCell>(c0B0B,_t0CAC);
          femData:FuncCell fc0CB0#1 = _t0CAE;
          femData:FuncCell fc0CB2#1 = fc0CB0;
          goto JOIN0C8F
        ASSIGN0C2C:  preds = [COND0C3A]
          real _t0C2B#1 = 0.e0;
          bool _t0C2D#1 = LT<real>(f10BBD,_t0C2B);
          if _t0C2D then goto ASSIGN0C31 else goto ASSIGN0C36
        ASSIGN0C31:  preds = [COND0C39]
          int _t0C30#1 = -1;
          int _t0C32#1 = _t0C30;
          goto JOIN0C2F
        JOIN0C2F:  preds = [ASSIGN0C34,ASSIGN0C38]
          int _t0C33#1 = phi(_t0C32,_t0C37)
          goto JOIN0C25
        ASSIGN0C36:  preds = [COND0C39]
          int _t0C35#1 = 0;
          int _t0C37#1 = _t0C35;
          goto JOIN0C2F
        ASSIGN0C11:  preds = [COND0C1F]
          real _t0C10#1 = 0.e0;
          bool _t0C12#1 = LT<real>(f00B61,_t0C10);
          if _t0C12 then goto ASSIGN0C16 else goto ASSIGN0C1B
        ASSIGN0C16:  preds = [COND0C1E]
          int _t0C15#1 = -1;
          int _t0C17#1 = _t0C15;
          goto JOIN0C14
        JOIN0C14:  preds = [ASSIGN0C19,ASSIGN0C1D]
          int _t0C18#1 = phi(_t0C17,_t0C1C)
          goto JOIN0C0A
        ASSIGN0C1B:  preds = [COND0C1E]
          int _t0C1A#1 = 0;
          int _t0C1C#1 = _t0C1A;
          goto JOIN0C14
        ASSIGN0C69:  preds = [COND0C84]
          real _t0C68#1 = λ(T0[])<Abs(T0)> (f00B61);
          real _t0C6A#1 = 0.2e1;
          femData:Mesh _t0C6C#1 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0C6E#1 = ExtractFemItem<int,CellIndex(Mesh)>(cc0B1D);
          real _t0C70#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0C6C,_t0C6E);
          real _t0C72#1 = λ(T0[],T1[])<(T0 * T1)> (_t0C6A,_t0C70);
          real _t0C74#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0C68,_t0C72);
          real epsUpdate0C76#2 = Max<real>(gradEps0B93,_t0C74);
          string _t0C78#1 = "update L:";
          string _t0C7A#1 = "\n";
          Print<[string,real,string]>(_t0C78,epsUpdate0C76,_t0C7A);
          string _t0C7D#1 = "update G:";
          string _t0C7F#1 = "\n";
          Print<[string,real,string]>(_t0C7D,gradEps0B93,_t0C7F);
          real s0C82#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,epsUpdate0C76);
          goto JOIN0C04
        ASSIGN0BED:  preds = [COND0BFB]
          real _t0BEC#1 = 0.e0;
          bool _t0BEE#1 = LT<real>(f10BBD,_t0BEC);
          if _t0BEE then goto ASSIGN0BF2 else goto ASSIGN0BF7
        ASSIGN0BF2:  preds = [COND0BFA]
          int _t0BF1#1 = -1;
          int _t0BF3#1 = _t0BF1;
          goto JOIN0BF0
        JOIN0BF0:  preds = [ASSIGN0BF5,ASSIGN0BF9]
          int _t0BF4#1 = phi(_t0BF3,_t0BF8)
          goto JOIN0BE6
        ASSIGN0BF7:  preds = [COND0BFA]
          int _t0BF6#1 = 0;
          int _t0BF8#1 = _t0BF6;
          goto JOIN0BF0
        ASSIGN0BD2:  preds = [COND0BE0]
          real _t0BD1#1 = 0.e0;
          bool _t0BD3#1 = LT<real>(f00B61,_t0BD1);
          if _t0BD3 then goto ASSIGN0BD7 else goto ASSIGN0BDC
        ASSIGN0BD7:  preds = [COND0BDF]
          int _t0BD6#1 = -1;
          int _t0BD8#1 = _t0BD6;
          goto JOIN0BD5
        JOIN0BD5:  preds = [ASSIGN0BDA,ASSIGN0BDE]
          int _t0BD9#1 = phi(_t0BD8,_t0BDD)
          goto JOIN0BCB
        ASSIGN0BDC:  preds = [COND0BDF]
          int _t0BDB#1 = 0;
          int _t0BDD#1 = _t0BDB;
          goto JOIN0BD5
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0A1E:  preds = []
      int iresU0A04#1 = globals.iresU08B4;
      int iresV0A03#1 = globals.iresV08B5;
      int _t0A07#1 = 0;
      int _t0A09#1 = 1;
      int _t0A0B#1 = ISub(iresU0A04,_t0A09);
      int[] _t0A0D#1 = Range(_t0A07,_t0A0B);
    FOREACH0A10:  preds = [ASSIGN0A0E,NEXT0A1D]
      foreach (vi0A0F in _t0A0D) on exit goto RETURN0A1F
      int _t0A11#1 = 0;
      int _t0A13#1 = 1;
      int _t0A15#1 = ISub(iresV0A03,_t0A13);
      int[] _t0A17#1 = Range(_t0A11,_t0A15);
    FOREACH0A1A:  preds = [ASSIGN0A18,NEXT0A1C]
      foreach (ui0A19 in _t0A17) on exit goto NEXT0A1D
      new ray(ui0A19,vi0A0F);
      goto FOREACH0A1A
    NEXT0A1D:  preds = [FOREACH0A1A]
      goto FOREACH0A10
    RETURN0A1F:  preds = [FOREACH0A10]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a08AB (a) = <no-default>
  input 0b0412_intermedateGlobal08AC (b) = <no-default>
  input 0c0414_intermedateGlobal08AD (c) = <no-default>
  input isoval08AE (isoval) = <default>
  input thick08AF (thick) = <default>
  input camEye08B0 (camEye) = <default>
  input camAt08B1 (camAt) = <default>
  input camUp08B2 (camUp) = <default>
  input camFOV08B3 (camFOV) = <default>
  input iresU08B4 (iresU) = <default>
  input iresV08B5 (iresV) = <default>
  input camNear08B6 (camNear) = <default>
  input camFar08B7 (camFar) = <default>
  input refStep08B8 (refStep) = <default>
  input rayStep08B9 (rayStep) = <default>
  input lightVsp08BA (lightVsp) = <default>
  input phongKa08BB (phongKa) = <default>
  input phongKd08BC (phongKd) = <default>
  input debug08BD (debug) = <default>
  input debugU08BE (debugU) = <default>
  input debugV08BF (debugV) = <default>
  input eps08C0 (eps) = <default>
  input indecies08C1 (indecies) = <no-default>
  input times08C2 (times) = <no-default>
  input cells08C3 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0917
  global femData:Space b0918
  global femData:FemFunc c0919
  global real camDist091A
  global tensor[3] camN091B
  global tensor[3] camU091C
  global tensor[3] camV091D
  global real camVmax091E
  global real camUmax091F
  global tensor[3] rayVec0920
## functions
  function femData:MeshPos _msh_newtonInverse0994 (tensor[2] pos0921#2, int cellInt0922#2, femData:Mesh mesh0923#5) {
    ENTRY0993:  preds = []
      real _t0924#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0928#2 = <tensor[2]>[_t0924,_t0924];
      field _t092A#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt0922,mesh0923,mesh0923);
      field _t092C#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t092A);
      field _t092E#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t092C);
      tensor[2,2] A0936#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t092E,xn0928);
      int _t0938#1 = 0;
      int _t093A#1 = 16;
      int[] _t093C#1 = Range(_t0938,_t093A);
    FOREACH0940:  preds = [ASSIGN093D,NEXT098F]
      foreach (itter093E in _t093C) on exit goto ASSIGN0991
        tensor[2] xn093F#2 = phi(xn0928,xn0949)
      field _t0943#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos0921,_t092A);
      field _t0945#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A0936,_t0943);
      tensor[2] delta0947#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0945,xn093F);
      tensor[2] xn0949#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn093F,delta0947);
      real _t094B#2 = 0.1e-7;
      real _t094F#1 = λ(T0[],T1[])<(T0 * T1)> (_t094B,_t094B);
      real _t0951#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta0947,delta0947);
      bool _t0953#1 = GTE<real>(_t094F,_t0951);
      if _t0953 then goto ASSIGN0957 else goto JOIN0955
    ASSIGN0957:  preds = [COND098E]
      real _t0956#3 = 0.1e1;
      real _t0958#3 = 0.1e-8;
      real _t095A#1 = λ(T0[],T1[])<(T0 + T1)> (_t0956,_t0958);
      tensor[2] _t0960#1 = <tensor[2]>[_t0956,_t0956];
      real _t0962#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0960,xn0949);
      bool _t0964#1 = GT<real>(_t095A,_t0962);
      tensor[2] _t096A#1 = <tensor[2]>[_t0958,_t0958];
      tensor[2] _t096C#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t096A,xn0949);
      real _t096E#1 = TensorIndex<tensor[2],[0]>(_t096C);
      real _t0970#2 = -0.e0;
      bool _t0972#1 = GT<real>(_t096E,_t0970);
      real _t097C#1 = TensorIndex<tensor[2],[1]>(_t096C);
      bool _t0980#1 = GT<real>(_t097C,_t0970);
      bool _t0982#1 = BAnd(_t0972,_t0980);
      bool _t0984#1 = BAnd(_t0964,_t0982);
      if _t0984 then goto ASSIGN0988 else goto ASSIGN098B
    ASSIGN0988:  preds = [COND098D]
      femData:MeshPos _t0987#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0923,cellInt0922,xn0949,pos0921);
      return _t0987
      goto JOIN0986
    JOIN0986:  preds = [*RETURN(_t0987)0989,*RETURN(_t098A)098C]
      goto JOIN0955
    JOIN0955:  preds = [*JOIN0986,COND098E]
      goto FOREACH0940
    ASSIGN098B:  preds = [COND098D]
      femData:MeshPos _t098A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t098A
      goto JOIN0986
    ASSIGN0991:  preds = [FOREACH0940]
      femData:MeshPos _t0990#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t0990
}
  function int[2] nextCell409A6 (int faceIdx0995#1, int cell0996#1, femData:Mesh mesh0997#1) {
    ENTRY09A5:  preds = []
      int _t0998#1 = 6;
      int _t099A#1 = IMul(cell0996,_t0998);
      int _t099C#1 = 2;
      int _t099E#1 = IMul(faceIdx0995,_t099C);
      int _t09A0#1 = IAdd(_t099A,_t099E);
      int[2] _t09A2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0997,_t09A0);
      return _t09A2
}
## input initialization
  ENTRY0915:  preds = []
    real isoval08C4#1 = 0.2e0;
    globals.isoval08AE = isoval08C4;
    real thick08C7#1 = 0.7e-1;
    globals.thick08AF = thick08C7;
    real _t08CA#1 = -0.5e0;
    real _t08CC#5 = 0.5e0;
    tensor[3] camEye08D0#1 = <tensor[3]>[_t08CA,_t08CC,_t08CC];
    globals.camEye08B0 = camEye08D0;
    tensor[3] camAt08D9#1 = <tensor[3]>[_t08CC,_t08CC,_t08CC];
    globals.camAt08B1 = camAt08D9;
    real _t08DC#2 = 0.e0;
    real _t08E0#2 = 0.1e1;
    tensor[3] camUp08E2#2 = <tensor[3]>[_t08DC,_t08DC,_t08E0];
    globals.camUp08B2 = camUp08E2;
    real camFOV08E5#1 = 0.137e2;
    globals.camFOV08B3 = camFOV08E5;
    int iresU08E8#2 = 10;
    globals.iresU08B4 = iresU08E8;
    globals.iresV08B5 = iresU08E8;
    real camNear08EE#1 = -0.2e1;
    globals.camNear08B6 = camNear08EE;
    real camFar08F1#1 = 0.5e1;
    globals.camFar08B7 = camFar08F1;
    globals.refStep08B8 = _t08E0;
    real rayStep08F7#1 = 0.1e-1;
    globals.rayStep08B9 = rayStep08F7;
    globals.lightVsp08BA = camUp08E2;
    real phongKa0903#1 = 0.1e0;
    globals.phongKa08BB = phongKa0903;
    real phongKd0906#1 = 0.9e0;
    globals.phongKd08BC = phongKd0906;
    bool debug0909#1 = false;
    globals.debug08BD = debug0909;
    int debugU090C#1 = 8;
    globals.debugU08BE = debugU090C;
    int debugV090F#1 = 2;
    globals.debugV08BF = debugV090F;
    real eps0912#1 = 0.1e-8;
    globals.eps08C0 = eps0912;
    return
## global-variable initialization
  ENTRY0A01:  preds = []
    femData:Mesh a09AF#3 = globals.a08AB;
    femData:Space 0b0412_intermedateGlobal09AE#1 = globals.0b0412_intermedateGlobal08AC;
    femData:FemFunc 0c0414_intermedateGlobal09AD#1 = globals.0c0414_intermedateGlobal08AD;
    tensor[3] camEye09AC#1 = globals.camEye08B0;
    tensor[3] camAt09AB#1 = globals.camAt08B1;
    tensor[3] camUp09AA#1 = globals.camUp08B2;
    real camFOV09A9#1 = globals.camFOV08B3;
    int iresU09A8#1 = globals.iresU08B4;
    int iresV09A7#1 = globals.iresV08B5;
    int _t09B9#1 = 0;
    int _t09BB#1 = 1;
    int _t09BD#1 = ExtractFemItem<int,NumCell(Mesh)>(a09AF);
    int _t09BF#1 = ISub(_t09BD,_t09BB);
    int[] _t09C1#1 = Range(_t09B9,_t09BF);
    femData:MeshCell[] _t09C3#1 = <femData:MeshCell[]>{};
  FOREACH09C7:  preds = [ASSIGN09C4,NEXT09CC]
    foreach (_t09C5 in _t09C1) on exit goto GASSIGN0CD6
      femData:MeshCell[] _t09C6#2 = phi(_t09C3,_t09CA)
    femData:MeshCell _t09C8#1 = LoadFem<femData:MeshCell>(a09AF,_t09C5);
    femData:MeshCell[] _t09CA#1 = Append<femData:MeshCell>(_t09C6,_t09C8);
    goto FOREACH09C7
  GASSIGN0CD6:  preds = [FOREACH09C7]
    globals.0cell_a0917 = _t09C6;
    femData:Space b09D0#2 = LoadFem<femData:Space>(0b0412_intermedateGlobal09AE,a09AF);
    globals.b0918 = b09D0;
    femData:FemFunc c09D3#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal09AD,b09D0);
    globals.c0919 = c09D3;
    tensor[3] _t09D6#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt09AB,camEye09AC);
    real camDist09D8#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t09D6);
    globals.camDist091A = camDist09D8;
    tensor[3] camN09DD#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t09D6,_t09D6);
    globals.camN091B = camN09DD;
    tensor[3] _t09E0#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN09DD,camUp09AA);
    tensor[3] camU09E2#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t09E0,_t09E0);
    globals.camU091C = camU09E2;
    tensor[3] camV09E5#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU09E2,camN09DD);
    globals.camV091D = camV09E5;
    real _t09E8#1 = 0.314159265358979323846264338327950288e1;
    real _t09EA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV09A9,_t09E8);
    real _t09EC#1 = 0.36e3;
    real _t09EE#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t09EA,_t09EC);
    real _t09F0#1 = λ(T0[])<Tangent(T0)> (_t09EE);
    real camVmax09F2#2 = λ(T0[],T1[])<(T0 * T1)> (_t09F0,camDist09D8);
    globals.camVmax091E = camVmax09F2;
    real _t09F5#1 = IntToReal(iresU09A8);
    real _t09F7#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax09F2,_t09F5);
    real _t09F9#1 = IntToReal(iresV09A7);
    real camUmax09FB#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t09F7,_t09F9);
    globals.camUmax091F = camUmax09FB;
    globals.rayVec0920 = camN09DD;
    return
## strand
  strand ray (int ui0A20#2, int vi0A21#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0AAD:  preds = []
        femData:MeshCell[] 0cell_a0A3B#1 = globals.0cell_a0917;
        femData:FemFunc c0A3A#1 = globals.c0919;
        tensor[3] camEye0A39#1 = globals.camEye08B0;
        int iresU0A38#2 = globals.iresU08B4;
        int iresV0A37#3 = globals.iresV08B5;
        int[] indecies0A36#2 = globals.indecies08C1;
        tensor[2][] times0A35#1 = globals.times08C2;
        tensor[3] camU0A34#1 = globals.camU091C;
        tensor[3] camV0A33#1 = globals.camV091D;
        real camVmax0A32#2 = globals.camVmax091E;
        real camUmax0A31#2 = globals.camUmax091F;
        real _t0A56#1 = λ(T0[])<Neg(T0)> (camUmax0A31);
        real _t0A58#2 = -0.5e0;
        real _t0A5A#1 = IntToReal(ui0A20);
        real _t0A5C#1 = IntToReal(iresU0A38);
        real _t0A5E#2 = 0.5e0;
        real _t0A60#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0A5C,_t0A5E);
        real rayU0A62#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0A56,camUmax0A31,_t0A58,_t0A5A,_t0A60);
        real _t0A64#1 = λ(T0[])<Neg(T0)> (camVmax0A32);
        real _t0A68#1 = IntToReal(vi0A21);
        real _t0A6A#1 = IntToReal(iresV0A37);
        real _t0A6E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0A6A,_t0A5E);
        real rayV0A70#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t0A64,camVmax0A32,_t0A58,_t0A68,_t0A6E);
        tensor[3] _t0A72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU0A62,camU0A34);
        tensor[3] _t0A74#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV0A70,camV0A33);
        tensor[3] UV0A76#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t0A72,_t0A74);
        tensor[3] rayOrig0A78#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye0A39,UV0A76);
        int _t0A7A#2 = IMul(ui0A20,iresV0A37);
        int _t0A7C#1 = IAdd(_t0A7A,vi0A21);
        int offset0A7E#2 = Subscript<int[]>(indecies0A36,_t0A7C);
        int _t0A80#1 = IMul(iresU0A38,iresV0A37);
        int _t0A84#1 = IAdd(_t0A80,_t0A7A);
        int _t0A86#1 = IAdd(_t0A84,vi0A21);
        int len0A88#1 = Subscript<int[]>(indecies0A36,_t0A86);
        int itter0A8A#3 = 0;
        int idx0A8C#2 = IAdd(offset0A7E,itter0A8A);
        tensor[2] interval0A8E#3 = Subscript<tensor[2][]>(times0A35,idx0A8C);
        real s0A90#1 = TensorIndex<tensor[2],[0]>(interval0A8E);
        real e0A92#1 = TensorIndex<tensor[2],[1]>(interval0A8E);
        femData:MeshCell cc0A96#2 = Subscript<femData:MeshCell[]>(0cell_a0A3B,itter0A8A);
        int _t0A99#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0A96);
        femData:FuncCell _t0A9B#1 = LoadFem<femData:FuncCell>(c0A3A,_t0A99);
        tensor[2][0] _t0AA1#1 = <tensor[2][0]>{};
        tensor[2][] _t0AA3#1 = MkDynamic<tensor[2],0>(_t0AA1);
        femData:MeshCell[0] _t0AA7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0AA9#1 = MkDynamic<femData:MeshCell,0>(_t0AA7);
        self.rayU = rayU0A62;
        self.rayV = rayV0A70;
        self.UV = UV0A76;
        self.rayOrig = rayOrig0A78;
        self.offset = offset0A7E;
        self.len = len0A88;
        self.itter = itter0A8A;
        self.idx = idx0A8C;
        self.interval = interval0A8E;
        self.s = s0A90;
        self.e = e0A92;
        self.cc = cc0A96;
        self.fc = _t0A9B;
        self.intervals = _t0AA3;
        self.newCells = _t0AA9;
        return
    end state init
    method start
        ENTRY0AFE:  preds = []
          femData:MeshCell[] 0cell_a0AC0#1 = globals.0cell_a0917;
          femData:FemFunc c0ABF#1 = globals.c0919;
          int[] cells0ABE#1 = globals.cells08C3;
          real rayU0AC4#0 = self.rayU;
          real rayV0AC5#0 = self.rayV;
          tensor[3] UV0AC6#0 = self.UV;
          tensor[3] rayOrig0AC7#0 = self.rayOrig;
          int offset0AC8#0 = self.offset;
          int len0AC9#1 = self.len;
          int itter0ACA#0 = self.itter;
          int idx0ACB#1 = self.idx;
          tensor[2] interval0ACC#0 = self.interval;
          real s0ACD#0 = self.s;
          real e0ACE#0 = self.e;
          femData:MeshCell cc0ACF#0 = self.cc;
          femData:FuncCell fc0AD0#0 = self.fc;
          tensor[2][] intervals0AD1#0 = self.intervals;
          femData:MeshCell[] newCells0AD2#0 = self.newCells;
          int _t0AE2#1 = 0;
          bool _t0AE4#1 = EQ<int>(len0AC9,_t0AE2);
          if _t0AE4 then goto STABILIZE0AE7 else goto JOIN0AE6
        STABILIZE0AE7:  preds = [COND0AF0]
          stabilize
          goto JOIN0AE6
        JOIN0AE6:  preds = [*STABILIZE0AE7,COND0AF0]
          int _t0AF1#1 = Subscript<int[]>(cells0ABE,idx0ACB);
          femData:MeshCell cc0AF3#2 = Subscript<femData:MeshCell[]>(0cell_a0AC0,_t0AF1);
          int _t0AF6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0AF3);
          femData:FuncCell _t0AF8#1 = LoadFem<femData:FuncCell>(c0ABF,_t0AF6);
          self.cc = cc0AF3;
          self.fc = _t0AF8;
          active
    end start
    method update
        ENTRY0CBC:  preds = []
          femData:MeshCell[] 0cell_a0B0C#1 = globals.0cell_a0917;
          femData:FemFunc c0B0B#1 = globals.c0919;
          tensor[2][] times0B0A#1 = globals.times08C2;
          int[] cells0B09#1 = globals.cells08C3;
          tensor[3] rayVec0B08#4 = globals.rayVec0920;
          real rayU0B12#0 = self.rayU;
          real rayV0B13#0 = self.rayV;
          tensor[3] UV0B14#0 = self.UV;
          tensor[3] rayOrig0B15#1 = self.rayOrig;
          int offset0B16#1 = self.offset;
          int len0B17#2 = self.len;
          int itter0B18#2 = self.itter;
          int idx0B19#0 = self.idx;
          tensor[2] interval0B1A#1 = self.interval;
          real s0B1B#5 = self.s;
          real e0B1C#3 = self.e;
          femData:MeshCell cc0B1D#5 = self.cc;
          femData:FuncCell fc0B1E#3 = self.fc;
          tensor[2][] intervals0B1F#2 = self.intervals;
          femData:MeshCell[] newCells0B20#2 = self.newCells;
          int _t0B30#6 = 1;
          bool _t0B32#1 = LT<int>(len0B17,_t0B30);
          if _t0B32 then goto STABILIZE0B35 else goto JOIN0B34
        STABILIZE0B35:  preds = [COND0B3E]
          stabilize
          goto JOIN0B34
        JOIN0B34:  preds = [*STABILIZE0B35,COND0B3E]
          tensor[3] _t0B3F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0B1B,rayVec0B08);
          tensor[3] rayStart0B41#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0B15,_t0B3F);
          real _t0B43#1 = TensorIndex<tensor[3],[0]>(rayStart0B41);
          real _t0B45#1 = TensorIndex<tensor[3],[1]>(rayStart0B41);
          tensor[2] project0B47#3 = <tensor[2]>[_t0B43,_t0B45];
          femData:FemFunc _t0B49#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B4D#1 = ExtractFem<femData:Space,femData:FemFunc>(_t0B49);
          int _t0B4F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          field _t0B51#1 = λ(INT0,FEM(fns)1,FEM(func)2)<femV(noFunc, 0, 1, 2)⊛Basis()> (_t0B4F,_t0B4D,_t0B49);
          femData:Mesh _t0B53#4 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B57#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          field _t0B59#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(0994, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t0B57,_t0B53,_t0B53);
          field _t0B5B#3 = λ(F0[2],F1[2])<Cmp(F0)[F1_{i0}{2}]> (_t0B51,_t0B59);
          real _t0B5D#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0B5B,project0B47);
          real _t0B5F#2 = TensorIndex<tensor[3],[2]>(rayStart0B41);
          real f00B61#5 = λ(T0[],T1[])<(T0) - (T1)> (_t0B5D,_t0B5F);
          real _t0B63#1 = TensorIndex<tensor[3],[0]>(rayVec0B08);
          real _t0B65#1 = TensorIndex<tensor[3],[1]>(rayVec0B08);
          tensor[2] _t0B67#2 = <tensor[2]>[_t0B63,_t0B65];
          field _t0B7D#1 = λ(F0[2])<∂/∂x_{i0}@(F0)>_{2} (_t0B5B);
          tensor[2] _t0B7F#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t0B7D,project0B47);
          real _t0B81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0B67,_t0B7F);
          real _t0B83#2 = TensorIndex<tensor[3],[2]>(rayVec0B08);
          real _t0B85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0B81,_t0B83);
          real _t0B87#1 = λ(T0[])<Abs(T0)> (_t0B85);
          int _t0B8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0B1D);
          real _t0B8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0B53,_t0B8B);
          real _t0B8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0B87,_t0B8D);
          real _t0B91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0B1C,s0B1B);
          real gradEps0B93#6 = Min<real>(_t0B8F,_t0B91);
          tensor[2] _t0BAF#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps0B93,_t0B67);
          tensor[2] _t0BB1#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0B47,_t0BAF);
          real _t0BB3#1 = λ(F0[2],T1[2])<Probe(F0,T1)> (_t0B5B,_t0BB1);
          real _t0BB7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0BB3,_t0B5F);
          real _t0BBB#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps0B93,_t0B83);
          real f10BBD#4 = λ(T0[],T1[])<(T0) - (T1)> (_t0BB7,_t0BBB);
          string _t0BBF#1 = "vals:";
          tensor[2] _t0BC1#2 = <tensor[2]>[f00B61,f10BBD];
          string _t0BC3#6 = "\n";
          Print<[string,tensor[2],string]>(_t0BBF,_t0BC1,_t0BC3);
          real _t0BC7#6 = 0.e0;
          bool _t0BC9#2 = GT<real>(f00B61,_t0BC7);
          if _t0BC9 then goto JOIN0BCB else goto ASSIGN0CE8
        JOIN0BCB:  preds = [COND0BE0,JOIN0BD5]
          int _t0BCF#1 = phi(_t0B30,_t0BD9)
          bool _t0BE4#2 = GT<real>(f10BBD,_t0BC7);
          if _t0BE4 then goto JOIN0BE6 else goto ASSIGN0CEA
        JOIN0BE6:  preds = [COND0BFB,JOIN0BF0]
          int _t0BEA#1 = phi(_t0B30,_t0BF4)
          int _t0BFC#1 = IMul(_t0BCF,_t0BEA);
          int _t0BFE#4 = 0;
          bool _t0C00#1 = GT<int>(_t0BFC,_t0BFE);
          bool _t0C02#1 = BNot(_t0C00);
          if _t0C02 then goto COND0C1F else goto ASSIGN0C69
        COND0C1F:  preds = [COND0C84]
          if _t0BC9 then goto JOIN0C0A else goto ASSIGN0CEE
        JOIN0C0A:  preds = [COND0C1F,JOIN0C14]
          int _t0C0E#1 = phi(_t0B30,_t0C18)
          if _t0BE4 then goto JOIN0C25 else goto ASSIGN0CEF
        JOIN0C25:  preds = [COND0C3A,JOIN0C2F]
          int _t0C29#1 = phi(_t0B30,_t0C33)
          int _t0C3B#1 = IMul(_t0C0E,_t0C29);
          bool _t0C3F#1 = EQ<int>(_t0C3B,_t0BFE);
          if _t0C3F then goto ASSIGN0C43 else goto JOIN0C41
        ASSIGN0C43:  preds = [COND0C45]
          string _t0C42#1 = "Warn: 0 update\n";
          Print<[string]>(_t0C42);
          goto JOIN0C41
        JOIN0C41:  preds = [MASSIGN0C44,COND0C45]
          string _t0C46#1 = "update with interval:";
          Print<[string,real,string]>(_t0C46,gradEps0B93,_t0BC3);
          string _t0C4B#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0C4B,_t0BC1,_t0BC3);
          string _t0C52#1 = "New interval:";
          real _t0C54#2 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          tensor[2] _t0C56#2 = <tensor[2]>[s0B1B,_t0C54];
          Print<[string,tensor[2],string]>(_t0C52,_t0C56,_t0BC3);
          tensor[2][] intervals0C5F#1 = Append<tensor[2]>(intervals0B1F,_t0C56);
          femData:MeshCell[] newCells0C62#1 = Append<femData:MeshCell>(newCells0B20,cc0B1D);
          goto JOIN0C04
        JOIN0C04:  preds = [ASSIGN0C64,ASSIGN0C83]
          femData:MeshCell[] newCells0C63#2 = phi(newCells0C62,newCells0B20)
          tensor[2][] intervals0C60#2 = phi(intervals0C5F,intervals0B1F)
          real s0C66#3 = phi(_t0C54,s0C82)
          bool _t0C85#1 = GTE<real>(s0C66,e0B1C);
          if _t0C85 then goto ASSIGN0CF5 else goto JOIN0C87
        ASSIGN0CF5:  preds = [COND0CBB]
          int itter0C8A#4 = IAdd(itter0B18,_t0B30);
          bool _t0C8D#1 = GTE<int>(itter0C8A,len0B17);
          if _t0C8D then goto SAVE0C91 else goto ASSIGN0C9A
        SAVE0C91:  preds = [COND0CB5]
          self.itter = itter0C8A;
          self.s = s0C66;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          stabilize
          goto JOIN0C8F
        JOIN0C8F:  preds = [*STABILIZE0C90,ASSIGN0CAF]
          femData:FuncCell fc0CB3#1 = phi(_t0CAE)
          femData:MeshCell cc0CA3#1 = phi(cc0CA2)
          real e0CA9#1 = phi(e0CA8)
          real s0CA6#1 = phi(s0CA5)
          tensor[2] interval0C9C#1 = phi(interval0C9B)
          goto JOIN0C87
        JOIN0C87:  preds = [JOIN0C8F,COND0CBB]
          femData:FuncCell fc0CBA#1 = phi(fc0CB3,fc0B1E)
          femData:MeshCell cc0CB9#1 = phi(cc0CA3,cc0B1D)
          real e0CB8#1 = phi(e0CA9,e0B1C)
          real s0CB7#1 = phi(s0CA6,s0C66)
          tensor[2] interval0CB6#1 = phi(interval0C9C,interval0B1A)
          int itter0C8B#1 = phi(itter0C8A,itter0B18)
          self.itter = itter0C8B;
          self.interval = interval0CB6;
          self.s = s0CB7;
          self.e = e0CB8;
          self.cc = cc0CB9;
          self.fc = fc0CBA;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          active
        ASSIGN0C9A:  preds = [COND0CB5]
          int _t0C99#2 = IAdd(offset0B16,itter0C8A);
          tensor[2] interval0C9B#3 = Subscript<tensor[2][]>(times0B0A,_t0C99);
          int _t0CA0#1 = Subscript<int[]>(cells0B09,_t0C99);
          femData:MeshCell cc0CA2#2 = Subscript<femData:MeshCell[]>(0cell_a0B0C,_t0CA0);
          real s0CA5#1 = TensorIndex<tensor[2],[0]>(interval0C9B);
          real e0CA8#1 = TensorIndex<tensor[2],[1]>(interval0C9B);
          int _t0CAC#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0CA2);
          femData:FuncCell _t0CAE#1 = LoadFem<femData:FuncCell>(c0B0B,_t0CAC);
          goto JOIN0C8F
        ASSIGN0CEF:  preds = [COND0C3A]
          bool _t0C2D#1 = LT<real>(f10BBD,_t0BC7);
          if _t0C2D then goto ASSIGN0C31 else goto JOIN0C2F
        ASSIGN0C31:  preds = [COND0C39]
          int _t0C30#1 = -1;
          goto JOIN0C2F
        JOIN0C2F:  preds = [ASSIGN0C31,COND0C39]
          int _t0C33#1 = phi(_t0C30,_t0BFE)
          goto JOIN0C25
        ASSIGN0CEE:  preds = [COND0C1F]
          bool _t0C12#1 = LT<real>(f00B61,_t0BC7);
          if _t0C12 then goto ASSIGN0C16 else goto JOIN0C14
        ASSIGN0C16:  preds = [COND0C1E]
          int _t0C15#1 = -1;
          goto JOIN0C14
        JOIN0C14:  preds = [ASSIGN0C16,COND0C1E]
          int _t0C18#1 = phi(_t0C15,_t0BFE)
          goto JOIN0C0A
        ASSIGN0C69:  preds = [COND0C84]
          real _t0C68#1 = λ(T0[])<Abs(T0)> (f00B61);
          real _t0C6A#1 = 0.2e1;
          real _t0C70#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0B53,_t0B8B);
          real _t0C72#1 = λ(T0[],T1[])<(T0 * T1)> (_t0C6A,_t0C70);
          real _t0C74#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t0C68,_t0C72);
          real epsUpdate0C76#2 = Max<real>(gradEps0B93,_t0C74);
          string _t0C78#1 = "update L:";
          Print<[string,real,string]>(_t0C78,epsUpdate0C76,_t0BC3);
          string _t0C7D#1 = "update G:";
          Print<[string,real,string]>(_t0C7D,gradEps0B93,_t0BC3);
          real s0C82#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,epsUpdate0C76);
          goto JOIN0C04
        ASSIGN0CEA:  preds = [COND0BFB]
          bool _t0BEE#1 = LT<real>(f10BBD,_t0BC7);
          if _t0BEE then goto ASSIGN0BF2 else goto ASSIGN0BF7
        ASSIGN0BF2:  preds = [COND0BFA]
          int _t0BF1#1 = -1;
          goto JOIN0BF0
        JOIN0BF0:  preds = [ASSIGN0BF2,ASSIGN0BF7]
          int _t0BF4#1 = phi(_t0BF1,_t0BF6)
          goto JOIN0BE6
        ASSIGN0BF7:  preds = [COND0BFA]
          int _t0BF6#1 = 0;
          goto JOIN0BF0
        ASSIGN0CE8:  preds = [COND0BE0]
          bool _t0BD3#1 = LT<real>(f00B61,_t0BC7);
          if _t0BD3 then goto ASSIGN0BD7 else goto ASSIGN0BDC
        ASSIGN0BD7:  preds = [COND0BDF]
          int _t0BD6#1 = -1;
          goto JOIN0BD5
        JOIN0BD5:  preds = [ASSIGN0BD7,ASSIGN0BDC]
          int _t0BD9#1 = phi(_t0BD6,_t0BDB)
          goto JOIN0BCB
        ASSIGN0BDC:  preds = [COND0BDF]
          int _t0BDB#1 = 0;
          goto JOIN0BD5
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0A1E:  preds = []
      int iresU0A04#1 = globals.iresU08B4;
      int iresV0A03#1 = globals.iresV08B5;
      int _t0A07#2 = 0;
      int _t0A09#2 = 1;
      int _t0A0B#1 = ISub(iresU0A04,_t0A09);
      int[] _t0A0D#1 = Range(_t0A07,_t0A0B);
    FOREACH0A10:  preds = [ASSIGN0A0E,NEXT0A1D]
      foreach (vi0A0F in _t0A0D) on exit goto RETURN0A1F
      int _t0A15#1 = ISub(iresV0A03,_t0A09);
      int[] _t0A17#1 = Range(_t0A07,_t0A15);
    FOREACH0A1A:  preds = [ASSIGN0CC7,NEXT0A1C]
      foreach (ui0A19 in _t0A17) on exit goto NEXT0A1D
      new ray(ui0A19,vi0A0F);
      goto FOREACH0A1A
    NEXT0A1D:  preds = [FOREACH0A1A]
      goto FOREACH0A10
    RETURN0A1F:  preds = [FOREACH0A10]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a08AB (a) = <no-default>
  input 0b0412_intermedateGlobal08AC (b) = <no-default>
  input 0c0414_intermedateGlobal08AD (c) = <no-default>
  input isoval08AE (isoval) = <default>
  input thick08AF (thick) = <default>
  input camEye08B0 (camEye) = <default>
  input camAt08B1 (camAt) = <default>
  input camUp08B2 (camUp) = <default>
  input camFOV08B3 (camFOV) = <default>
  input iresU08B4 (iresU) = <default>
  input iresV08B5 (iresV) = <default>
  input camNear08B6 (camNear) = <default>
  input camFar08B7 (camFar) = <default>
  input refStep08B8 (refStep) = <default>
  input rayStep08B9 (rayStep) = <default>
  input lightVsp08BA (lightVsp) = <default>
  input phongKa08BB (phongKa) = <default>
  input phongKd08BC (phongKd) = <default>
  input debug08BD (debug) = <default>
  input debugU08BE (debugU) = <default>
  input debugV08BF (debugV) = <default>
  input eps08C0 (eps) = <default>
  input indecies08C1 (indecies) = <no-default>
  input times08C2 (times) = <no-default>
  input cells08C3 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0917
  global femData:FemFunc c0919
  global tensor[3] camU091C
  global tensor[3] camV091D
  global real camVmax091E
  global real camUmax091F
  global tensor[3] rayVec0920
## functions
  function femData:MeshPos _msh_newtonInverse0994 (tensor[2] pos0921#6, int cellInt0922#11, femData:Mesh mesh0923#23) {
    ENTRY0993:  preds = []
      real _t0924#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0928#6 = <tensor[2]>[_t0924,_t0924];
      int _t0938#1 = 0;
      int _t093A#1 = 16;
      int[] _t093C#1 = Range(_t0938,_t093A);
    FOREACH0940:  preds = [ASSIGN093D,NEXT098F]
      foreach (itter093E in _t093C) on exit goto ASSIGN0991
        tensor[2] xn093F#8 = phi(xn0928,xn0949)
      tensor[2] xn0949#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      real _t094B#2 = 0.1e-7;
      real _t094F#1 = λ(T0[],T1[])<(T0 * T1)> (_t094B,_t094B);
      real _t0951#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      bool _t0953#1 = GTE<real>(_t094F,_t0951);
      if _t0953 then goto ASSIGN0957 else goto JOIN0955
    ASSIGN0957:  preds = [COND098E]
      real _t0956#3 = 0.1e1;
      real _t0958#3 = 0.1e-8;
      real _t095A#1 = λ(T0[],T1[])<(T0 + T1)> (_t0956,_t0958);
      tensor[2] _t0960#1 = <tensor[2]>[_t0956,_t0956];
      real _t0962#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t0960,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      bool _t0964#1 = GT<real>(_t095A,_t0962);
      tensor[2] _t096A#1 = <tensor[2]>[_t0958,_t0958];
      tensor[2] _t096C#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t096A,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      real _t096E#1 = TensorIndex<tensor[2],[0]>(_t096C);
      real _t0970#2 = -0.e0;
      bool _t0972#1 = GT<real>(_t096E,_t0970);
      real _t097C#1 = TensorIndex<tensor[2],[1]>(_t096C);
      bool _t0980#1 = GT<real>(_t097C,_t0970);
      bool _t0982#1 = BAnd(_t0972,_t0980);
      bool _t0984#1 = BAnd(_t0964,_t0982);
      if _t0984 then goto ASSIGN0988 else goto ASSIGN098B
    ASSIGN0988:  preds = [COND098D]
      femData:MeshPos _t0987#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0923,cellInt0922,xn0949,pos0921);
      return _t0987
      goto JOIN0986
    JOIN0986:  preds = [*RETURN(_t0987)0989,*RETURN(_t098A)098C]
      goto JOIN0955
    JOIN0955:  preds = [*JOIN0986,COND098E]
      goto FOREACH0940
    ASSIGN098B:  preds = [COND098D]
      femData:MeshPos _t098A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t098A
      goto JOIN0986
    ASSIGN0991:  preds = [FOREACH0940]
      femData:MeshPos _t0990#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t0990
}
  function int[2] nextCell409A6 (int faceIdx0995#1, int cell0996#1, femData:Mesh mesh0997#1) {
    ENTRY09A5:  preds = []
      int _t0998#1 = 6;
      int _t099A#1 = IMul(cell0996,_t0998);
      int _t099C#1 = 2;
      int _t099E#1 = IMul(faceIdx0995,_t099C);
      int _t09A0#1 = IAdd(_t099A,_t099E);
      int[2] _t09A2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0997,_t09A0);
      return _t09A2
}
## input initialization
  ENTRY0915:  preds = []
    real isoval08C4#1 = 0.2e0;
    globals.isoval08AE = isoval08C4;
    real thick08C7#1 = 0.7e-1;
    globals.thick08AF = thick08C7;
    real _t08CA#1 = -0.5e0;
    real _t08CC#5 = 0.5e0;
    tensor[3] camEye08D0#1 = <tensor[3]>[_t08CA,_t08CC,_t08CC];
    globals.camEye08B0 = camEye08D0;
    tensor[3] camAt08D9#1 = <tensor[3]>[_t08CC,_t08CC,_t08CC];
    globals.camAt08B1 = camAt08D9;
    real _t08DC#2 = 0.e0;
    real _t08E0#2 = 0.1e1;
    tensor[3] camUp08E2#2 = <tensor[3]>[_t08DC,_t08DC,_t08E0];
    globals.camUp08B2 = camUp08E2;
    real camFOV08E5#1 = 0.137e2;
    globals.camFOV08B3 = camFOV08E5;
    int iresU08E8#2 = 10;
    globals.iresU08B4 = iresU08E8;
    globals.iresV08B5 = iresU08E8;
    real camNear08EE#1 = -0.2e1;
    globals.camNear08B6 = camNear08EE;
    real camFar08F1#1 = 0.5e1;
    globals.camFar08B7 = camFar08F1;
    globals.refStep08B8 = _t08E0;
    real rayStep08F7#1 = 0.1e-1;
    globals.rayStep08B9 = rayStep08F7;
    globals.lightVsp08BA = camUp08E2;
    real phongKa0903#1 = 0.1e0;
    globals.phongKa08BB = phongKa0903;
    real phongKd0906#1 = 0.9e0;
    globals.phongKd08BC = phongKd0906;
    bool debug0909#1 = false;
    globals.debug08BD = debug0909;
    int debugU090C#1 = 8;
    globals.debugU08BE = debugU090C;
    int debugV090F#1 = 2;
    globals.debugV08BF = debugV090F;
    real eps0912#1 = 0.1e-8;
    globals.eps08C0 = eps0912;
    return
## global-variable initialization
  ENTRY0A01:  preds = []
    femData:Mesh a09AF#3 = globals.a08AB;
    femData:Space 0b0412_intermedateGlobal09AE#1 = globals.0b0412_intermedateGlobal08AC;
    femData:FemFunc 0c0414_intermedateGlobal09AD#1 = globals.0c0414_intermedateGlobal08AD;
    tensor[3] camEye09AC#14 = globals.camEye08B0;
    tensor[3] camAt09AB#14 = globals.camAt08B1;
    tensor[3] camUp09AA#4 = globals.camUp08B2;
    real camFOV09A9#2 = globals.camFOV08B3;
    int iresU09A8#1 = globals.iresU08B4;
    int iresV09A7#1 = globals.iresV08B5;
    int _t09B9#1 = 0;
    int _t09BB#1 = 1;
    int _t09BD#1 = ExtractFemItem<int,NumCell(Mesh)>(a09AF);
    int _t09BF#1 = ISub(_t09BD,_t09BB);
    int[] _t09C1#1 = Range(_t09B9,_t09BF);
    femData:MeshCell[] _t09C3#1 = <femData:MeshCell[]>{};
  FOREACH09C7:  preds = [ASSIGN09C4,NEXT09CC]
    foreach (_t09C5 in _t09C1) on exit goto GASSIGN0CD6
      femData:MeshCell[] _t09C6#2 = phi(_t09C3,_t09CA)
    femData:MeshCell _t09C8#1 = LoadFem<femData:MeshCell>(a09AF,_t09C5);
    femData:MeshCell[] _t09CA#1 = Append<femData:MeshCell>(_t09C6,_t09C8);
    goto FOREACH09C7
  GASSIGN0CD6:  preds = [FOREACH09C7]
    globals.0cell_a0917 = _t09C6;
    femData:Space b09D0#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal09AE,a09AF);
    femData:FemFunc c09D3#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal09AD,b09D0);
    globals.c0919 = c09D3;
    tensor[3] camN09DD#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC);
    tensor[3] camU09E2#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA);
    globals.camU091C = camU09E2;
    tensor[3] camV09E5#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC);
    globals.camV091D = camV09E5;
    real _t09E8#2 = 0.314159265358979323846264338327950288e1;
    real _t09EC#2 = 0.36e3;
    real camVmax09F2#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV09A9,_t09E8,_t09EC,camAt09AB,camEye09AC);
    globals.camVmax091E = camVmax09F2;
    real _t09F5#1 = IntToReal(iresU09A8);
    real _t09F9#1 = IntToReal(iresV09A7);
    real camUmax09FB#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV09A9,_t09E8,_t09EC,camAt09AB,camEye09AC,_t09F5,_t09F9);
    globals.camUmax091F = camUmax09FB;
    globals.rayVec0920 = camN09DD;
    return
## strand
  strand ray (int ui0A20#2, int vi0A21#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0AAD:  preds = []
        femData:MeshCell[] 0cell_a0A3B#1 = globals.0cell_a0917;
        femData:FemFunc c0A3A#1 = globals.c0919;
        tensor[3] camEye0A39#1 = globals.camEye08B0;
        int iresU0A38#2 = globals.iresU08B4;
        int iresV0A37#3 = globals.iresV08B5;
        int[] indecies0A36#2 = globals.indecies08C1;
        tensor[2][] times0A35#1 = globals.times08C2;
        tensor[3] camU0A34#2 = globals.camU091C;
        tensor[3] camV0A33#2 = globals.camV091D;
        real camVmax0A32#6 = globals.camVmax091E;
        real camUmax0A31#6 = globals.camUmax091F;
        real _t0A58#6 = -0.5e0;
        real _t0A5A#3 = IntToReal(ui0A20);
        real _t0A5C#3 = IntToReal(iresU0A38);
        real _t0A5E#6 = 0.5e0;
        real rayU0A62#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E);
        real _t0A68#3 = IntToReal(vi0A21);
        real _t0A6A#3 = IntToReal(iresV0A37);
        real rayV0A70#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E);
        tensor[3] UV0A76#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E,camU0A34,camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E,camV0A33);
        tensor[3] rayOrig0A78#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye0A39,camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E,camU0A34,camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E,camV0A33);
        int _t0A7A#2 = IMul(ui0A20,iresV0A37);
        int _t0A7C#1 = IAdd(_t0A7A,vi0A21);
        int offset0A7E#2 = Subscript<int[]>(indecies0A36,_t0A7C);
        int _t0A80#1 = IMul(iresU0A38,iresV0A37);
        int _t0A84#1 = IAdd(_t0A80,_t0A7A);
        int _t0A86#1 = IAdd(_t0A84,vi0A21);
        int len0A88#1 = Subscript<int[]>(indecies0A36,_t0A86);
        int itter0A8A#3 = 0;
        int idx0A8C#2 = IAdd(offset0A7E,itter0A8A);
        tensor[2] interval0A8E#3 = Subscript<tensor[2][]>(times0A35,idx0A8C);
        real s0A90#1 = TensorIndex<tensor[2],[0]>(interval0A8E);
        real e0A92#1 = TensorIndex<tensor[2],[1]>(interval0A8E);
        femData:MeshCell cc0A96#2 = Subscript<femData:MeshCell[]>(0cell_a0A3B,itter0A8A);
        int _t0A99#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0A96);
        femData:FuncCell _t0A9B#1 = LoadFem<femData:FuncCell>(c0A3A,_t0A99);
        tensor[2][0] _t0AA1#1 = <tensor[2][0]>{};
        tensor[2][] _t0AA3#1 = MkDynamic<tensor[2],0>(_t0AA1);
        femData:MeshCell[0] _t0AA7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0AA9#1 = MkDynamic<femData:MeshCell,0>(_t0AA7);
        self.rayU = rayU0A62;
        self.rayV = rayV0A70;
        self.UV = UV0A76;
        self.rayOrig = rayOrig0A78;
        self.offset = offset0A7E;
        self.len = len0A88;
        self.itter = itter0A8A;
        self.idx = idx0A8C;
        self.interval = interval0A8E;
        self.s = s0A90;
        self.e = e0A92;
        self.cc = cc0A96;
        self.fc = _t0A9B;
        self.intervals = _t0AA3;
        self.newCells = _t0AA9;
        return
    end state init
    method start
        ENTRY0AFE:  preds = []
          femData:MeshCell[] 0cell_a0AC0#1 = globals.0cell_a0917;
          femData:FemFunc c0ABF#1 = globals.c0919;
          int[] cells0ABE#1 = globals.cells08C3;
          int len0AC9#1 = self.len;
          int idx0ACB#1 = self.idx;
          int _t0AE2#1 = 0;
          bool _t0AE4#1 = EQ<int>(len0AC9,_t0AE2);
          if _t0AE4 then goto STABILIZE0AE7 else goto JOIN0AE6
        STABILIZE0AE7:  preds = [COND0AF0]
          stabilize
          goto JOIN0AE6
        JOIN0AE6:  preds = [*STABILIZE0AE7,COND0AF0]
          int _t0AF1#1 = Subscript<int[]>(cells0ABE,idx0ACB);
          femData:MeshCell cc0AF3#2 = Subscript<femData:MeshCell[]>(0cell_a0AC0,_t0AF1);
          int _t0AF6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0AF3);
          femData:FuncCell _t0AF8#1 = LoadFem<femData:FuncCell>(c0ABF,_t0AF6);
          self.cc = cc0AF3;
          self.fc = _t0AF8;
          active
    end start
    method update
        ENTRY0CBC:  preds = []
          femData:MeshCell[] 0cell_a0B0C#1 = globals.0cell_a0917;
          femData:FemFunc c0B0B#1 = globals.c0919;
          tensor[2][] times0B0A#1 = globals.times08C2;
          int[] cells0B09#1 = globals.cells08C3;
          tensor[3] rayVec0B08#4 = globals.rayVec0920;
          tensor[3] rayOrig0B15#1 = self.rayOrig;
          int offset0B16#1 = self.offset;
          int len0B17#2 = self.len;
          int itter0B18#2 = self.itter;
          tensor[2] interval0B1A#1 = self.interval;
          real s0B1B#5 = self.s;
          real e0B1C#3 = self.e;
          femData:MeshCell cc0B1D#5 = self.cc;
          femData:FuncCell fc0B1E#3 = self.fc;
          tensor[2][] intervals0B1F#2 = self.intervals;
          femData:MeshCell[] newCells0B20#2 = self.newCells;
          int _t0B30#6 = 1;
          bool _t0B32#1 = LT<int>(len0B17,_t0B30);
          if _t0B32 then goto STABILIZE0B35 else goto JOIN0B34
        STABILIZE0B35:  preds = [COND0B3E]
          stabilize
          goto JOIN0B34
        JOIN0B34:  preds = [*STABILIZE0B35,COND0B3E]
          tensor[3] rayStart0B41#3 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig0B15,s0B1B,rayVec0B08);
          real _t0B43#1 = TensorIndex<tensor[3],[0]>(rayStart0B41);
          real _t0B45#1 = TensorIndex<tensor[3],[1]>(rayStart0B41);
          tensor[2] project0B47#4 = <tensor[2]>[_t0B43,_t0B45];
          femData:FemFunc _t0B49#5 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B4D#4 = ExtractFem<femData:Space,femData:FemFunc>(_t0B49);
          int _t0B4F#4 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          femData:Mesh _t0B53#10 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B57#4 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          real _t0B5F#3 = TensorIndex<tensor[3],[2]>(rayStart0B41);
          real f00B61#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[])<(Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B5F);
          real _t0B63#1 = TensorIndex<tensor[3],[0]>(rayVec0B08);
          real _t0B65#1 = TensorIndex<tensor[3],[1]>(rayVec0B08);
          tensor[2] _t0B67#2 = <tensor[2]>[_t0B63,_t0B65];
          real _t0B83#2 = TensorIndex<tensor[3],[2]>(rayVec0B08);
          int _t0B8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0B1D);
          real _t0B8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0B53,_t0B8B);
          real _t0B8F#1 = λ(T0[2],INT1,FEM(fns)2,FEM(func)3,INT4,FEM(msh)5,FEM(msh)6,T7[2],T8[],T9[])<(Abs((Σ(i0=0..1)<((T0_{i0} * Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 1, 2, 3)⊛Basis()dx_{i104})[femInvV(0994, 4, 5, 5)_{i0}⊛Basis(){2}],T7) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0994, 4, 5, 5)_{i116}⊛Basis()dx_{i114},T7)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0994, 4, 5, 5)_{i112}⊛Basis()dx_{'0'},T7) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0994, 4, 5, 5)_{i113}⊛Basis()dx_{'1'},T7)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)))>(i0=0..1)) - (T8))) / ( T9)> (_t0B67,_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B83,_t0B8D);
          real _t0B91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0B1C,s0B1B);
          real gradEps0B93#6 = Min<real>(_t0B8F,_t0B91);
          tensor[2] _t0BB1#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (project0B47,gradEps0B93,_t0B67);
          real f10BBD#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)) - ((T8 * T9))> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,_t0BB1,_t0B5F,gradEps0B93,_t0B83);
          string _t0BBF#1 = "vals:";
          tensor[2] _t0BC1#2 = <tensor[2]>[f00B61,f10BBD];
          string _t0BC3#6 = "\n";
          Print<[string,tensor[2],string]>(_t0BBF,_t0BC1,_t0BC3);
          real _t0BC7#6 = 0.e0;
          bool _t0BC9#2 = GT<real>(f00B61,_t0BC7);
          if _t0BC9 then goto JOIN0BCB else goto ASSIGN0CE8
        JOIN0BCB:  preds = [COND0BE0,JOIN0BD5]
          int _t0BCF#1 = phi(_t0B30,_t0BD9)
          bool _t0BE4#2 = GT<real>(f10BBD,_t0BC7);
          if _t0BE4 then goto JOIN0BE6 else goto ASSIGN0CEA
        JOIN0BE6:  preds = [COND0BFB,JOIN0BF0]
          int _t0BEA#1 = phi(_t0B30,_t0BF4)
          int _t0BFC#1 = IMul(_t0BCF,_t0BEA);
          int _t0BFE#4 = 0;
          bool _t0C00#1 = GT<int>(_t0BFC,_t0BFE);
          bool _t0C02#1 = BNot(_t0C00);
          if _t0C02 then goto COND0C1F else goto ASSIGN0C6B
        COND0C1F:  preds = [COND0C84]
          if _t0BC9 then goto JOIN0C0A else goto ASSIGN0CEE
        JOIN0C0A:  preds = [COND0C1F,JOIN0C14]
          int _t0C0E#1 = phi(_t0B30,_t0C18)
          if _t0BE4 then goto JOIN0C25 else goto ASSIGN0CEF
        JOIN0C25:  preds = [COND0C3A,JOIN0C2F]
          int _t0C29#1 = phi(_t0B30,_t0C33)
          int _t0C3B#1 = IMul(_t0C0E,_t0C29);
          bool _t0C3F#1 = EQ<int>(_t0C3B,_t0BFE);
          if _t0C3F then goto ASSIGN0C43 else goto JOIN0C41
        ASSIGN0C43:  preds = [COND0C45]
          string _t0C42#1 = "Warn: 0 update\n";
          Print<[string]>(_t0C42);
          goto JOIN0C41
        JOIN0C41:  preds = [MASSIGN0C44,COND0C45]
          string _t0C46#1 = "update with interval:";
          Print<[string,real,string]>(_t0C46,gradEps0B93,_t0BC3);
          string _t0C4B#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0C4B,_t0BC1,_t0BC3);
          string _t0C52#1 = "New interval:";
          real _t0C54#2 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          tensor[2] _t0C56#2 = <tensor[2]>[s0B1B,_t0C54];
          Print<[string,tensor[2],string]>(_t0C52,_t0C56,_t0BC3);
          tensor[2][] intervals0C5F#1 = Append<tensor[2]>(intervals0B1F,_t0C56);
          femData:MeshCell[] newCells0C62#1 = Append<femData:MeshCell>(newCells0B20,cc0B1D);
          goto JOIN0C04
        JOIN0C04:  preds = [ASSIGN0C64,ASSIGN0C83]
          femData:MeshCell[] newCells0C63#2 = phi(newCells0C62,newCells0B20)
          tensor[2][] intervals0C60#2 = phi(intervals0C5F,intervals0B1F)
          real s0C66#3 = phi(_t0C54,s0C82)
          bool _t0C85#1 = GTE<real>(s0C66,e0B1C);
          if _t0C85 then goto ASSIGN0CF5 else goto JOIN0C87
        ASSIGN0CF5:  preds = [COND0CBB]
          int itter0C8A#4 = IAdd(itter0B18,_t0B30);
          bool _t0C8D#1 = GTE<int>(itter0C8A,len0B17);
          if _t0C8D then goto SAVE0C91 else goto ASSIGN0C9A
        SAVE0C91:  preds = [COND0CB5]
          self.itter = itter0C8A;
          self.s = s0C66;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          stabilize
          goto JOIN0C8F
        JOIN0C8F:  preds = [*STABILIZE0C90,ASSIGN0CAF]
          femData:FuncCell fc0CB3#1 = phi(_t0CAE)
          femData:MeshCell cc0CA3#1 = phi(cc0CA2)
          real e0CA9#1 = phi(e0CA8)
          real s0CA6#1 = phi(s0CA5)
          tensor[2] interval0C9C#1 = phi(interval0C9B)
          goto JOIN0C87
        JOIN0C87:  preds = [JOIN0C8F,COND0CBB]
          femData:FuncCell fc0CBA#1 = phi(fc0CB3,fc0B1E)
          femData:MeshCell cc0CB9#1 = phi(cc0CA3,cc0B1D)
          real e0CB8#1 = phi(e0CA9,e0B1C)
          real s0CB7#1 = phi(s0CA6,s0C66)
          tensor[2] interval0CB6#1 = phi(interval0C9C,interval0B1A)
          int itter0C8B#1 = phi(itter0C8A,itter0B18)
          self.itter = itter0C8B;
          self.interval = interval0CB6;
          self.s = s0CB7;
          self.e = e0CB8;
          self.cc = cc0CB9;
          self.fc = fc0CBA;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          active
        ASSIGN0C9A:  preds = [COND0CB5]
          int _t0C99#2 = IAdd(offset0B16,itter0C8A);
          tensor[2] interval0C9B#3 = Subscript<tensor[2][]>(times0B0A,_t0C99);
          int _t0CA0#1 = Subscript<int[]>(cells0B09,_t0C99);
          femData:MeshCell cc0CA2#2 = Subscript<femData:MeshCell[]>(0cell_a0B0C,_t0CA0);
          real s0CA5#1 = TensorIndex<tensor[2],[0]>(interval0C9B);
          real e0CA8#1 = TensorIndex<tensor[2],[1]>(interval0C9B);
          int _t0CAC#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0CA2);
          femData:FuncCell _t0CAE#1 = LoadFem<femData:FuncCell>(c0B0B,_t0CAC);
          goto JOIN0C8F
        ASSIGN0CEF:  preds = [COND0C3A]
          bool _t0C2D#1 = LT<real>(f10BBD,_t0BC7);
          if _t0C2D then goto ASSIGN0C31 else goto JOIN0C2F
        ASSIGN0C31:  preds = [COND0C39]
          int _t0C30#1 = -1;
          goto JOIN0C2F
        JOIN0C2F:  preds = [ASSIGN0C31,COND0C39]
          int _t0C33#1 = phi(_t0C30,_t0BFE)
          goto JOIN0C25
        ASSIGN0CEE:  preds = [COND0C1F]
          bool _t0C12#1 = LT<real>(f00B61,_t0BC7);
          if _t0C12 then goto ASSIGN0C16 else goto JOIN0C14
        ASSIGN0C16:  preds = [COND0C1E]
          int _t0C15#1 = -1;
          goto JOIN0C14
        JOIN0C14:  preds = [ASSIGN0C16,COND0C1E]
          int _t0C18#1 = phi(_t0C15,_t0BFE)
          goto JOIN0C0A
        ASSIGN0C6B:  preds = [COND0C84]
          real _t0C6A#1 = 0.2e1;
          real _t0C70#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0B53,_t0B8B);
          real _t0C74#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<(Abs((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7))) / ( (T8 * T9))> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B5F,_t0C6A,_t0C70);
          real epsUpdate0C76#2 = Max<real>(gradEps0B93,_t0C74);
          string _t0C78#1 = "update L:";
          Print<[string,real,string]>(_t0C78,epsUpdate0C76,_t0BC3);
          string _t0C7D#1 = "update G:";
          Print<[string,real,string]>(_t0C7D,gradEps0B93,_t0BC3);
          real s0C82#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,epsUpdate0C76);
          goto JOIN0C04
        ASSIGN0CEA:  preds = [COND0BFB]
          bool _t0BEE#1 = LT<real>(f10BBD,_t0BC7);
          if _t0BEE then goto ASSIGN0BF2 else goto ASSIGN0BF7
        ASSIGN0BF2:  preds = [COND0BFA]
          int _t0BF1#1 = -1;
          goto JOIN0BF0
        JOIN0BF0:  preds = [ASSIGN0BF2,ASSIGN0BF7]
          int _t0BF4#1 = phi(_t0BF1,_t0BF6)
          goto JOIN0BE6
        ASSIGN0BF7:  preds = [COND0BFA]
          int _t0BF6#1 = 0;
          goto JOIN0BF0
        ASSIGN0CE8:  preds = [COND0BE0]
          bool _t0BD3#1 = LT<real>(f00B61,_t0BC7);
          if _t0BD3 then goto ASSIGN0BD7 else goto ASSIGN0BDC
        ASSIGN0BD7:  preds = [COND0BDF]
          int _t0BD6#1 = -1;
          goto JOIN0BD5
        JOIN0BD5:  preds = [ASSIGN0BD7,ASSIGN0BDC]
          int _t0BD9#1 = phi(_t0BD6,_t0BDB)
          goto JOIN0BCB
        ASSIGN0BDC:  preds = [COND0BDF]
          int _t0BDB#1 = 0;
          goto JOIN0BD5
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0A1E:  preds = []
      int iresU0A04#1 = globals.iresU08B4;
      int iresV0A03#1 = globals.iresV08B5;
      int _t0A07#2 = 0;
      int _t0A09#2 = 1;
      int _t0A0B#1 = ISub(iresU0A04,_t0A09);
      int[] _t0A0D#1 = Range(_t0A07,_t0A0B);
    FOREACH0A10:  preds = [ASSIGN0A0E,NEXT0A1D]
      foreach (vi0A0F in _t0A0D) on exit goto RETURN0A1F
      int _t0A15#1 = ISub(iresV0A03,_t0A09);
      int[] _t0A17#1 = Range(_t0A07,_t0A15);
    FOREACH0A1A:  preds = [ASSIGN0CC7,NEXT0A1C]
      foreach (ui0A19 in _t0A17) on exit goto NEXT0A1D
      new ray(ui0A19,vi0A0F);
      goto FOREACH0A1A
    NEXT0A1D:  preds = [FOREACH0A1A]
      goto FOREACH0A10
    RETURN0A1F:  preds = [FOREACH0A10]
      return
#### end program ####
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a08AB (a) = <no-default>
  input 0b0412_intermedateGlobal08AC (b) = <no-default>
  input 0c0414_intermedateGlobal08AD (c) = <no-default>
  input isoval08AE (isoval) = <default>
  input thick08AF (thick) = <default>
  input camEye08B0 (camEye) = <default>
  input camAt08B1 (camAt) = <default>
  input camUp08B2 (camUp) = <default>
  input camFOV08B3 (camFOV) = <default>
  input iresU08B4 (iresU) = <default>
  input iresV08B5 (iresV) = <default>
  input camNear08B6 (camNear) = <default>
  input camFar08B7 (camFar) = <default>
  input refStep08B8 (refStep) = <default>
  input rayStep08B9 (rayStep) = <default>
  input lightVsp08BA (lightVsp) = <default>
  input phongKa08BB (phongKa) = <default>
  input phongKd08BC (phongKd) = <default>
  input debug08BD (debug) = <default>
  input debugU08BE (debugU) = <default>
  input debugV08BF (debugV) = <default>
  input eps08C0 (eps) = <default>
  input indecies08C1 (indecies) = <no-default>
  input times08C2 (times) = <no-default>
  input cells08C3 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0917
  global femData:FemFunc c0919
  global tensor[3] camU091C
  global tensor[3] camV091D
  global real camVmax091E
  global real camUmax091F
  global tensor[3] rayVec0920
## functions
  function femData:MeshPos _msh_newtonInverse0994 (tensor[2] pos0921#6, int cellInt0922#11, femData:Mesh mesh0923#23) {
    ENTRY0993:  preds = []
      real _t0924#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0928#6 = <tensor[2]>[_t0924,_t0924];
      int _t0938#1 = 0;
      int _t093A#1 = 16;
      int[] _t093C#1 = Range(_t0938,_t093A);
    FOREACH0940:  preds = [ASSIGN093D,NEXT098F]
      foreach (itter093E in _t093C) on exit goto ASSIGN0991
        tensor[2] xn093F#8 = phi(xn0928,xn0949)
      tensor[2] xn0949#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      real _t094B#2 = 0.1e-7;
      real _t094F#1 = λ(T0[],T1[])<(T0 * T1)> (_t094B,_t094B);
      real _t0951#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      bool _t0953#1 = GTE<real>(_t094F,_t0951);
      if _t0953 then goto ASSIGN0957 else goto JOIN0955
    ASSIGN0957:  preds = [COND098E]
      real _t0956#3 = 0.1e1;
      real _t0958#3 = 0.1e-8;
      real _t095A#1 = λ(T0[],T1[])<(T0 + T1)> (_t0956,_t0958);
      tensor[2] _t0960#1 = <tensor[2]>[_t0956,_t0956];
      real _t0962#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t0960,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      bool _t0964#1 = GT<real>(_t095A,_t0962);
      tensor[2] _t096A#1 = <tensor[2]>[_t0958,_t0958];
      tensor[2] _t096C#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t096A,xn093F,cellInt0922,mesh0923,mesh0923,xn0928,pos0921,cellInt0922,mesh0923,mesh0923,xn093F);
      real _t096E#1 = TensorIndex<tensor[2],[0]>(_t096C);
      real _t0970#2 = -0.e0;
      bool _t0972#1 = GT<real>(_t096E,_t0970);
      real _t097C#1 = TensorIndex<tensor[2],[1]>(_t096C);
      bool _t0980#1 = GT<real>(_t097C,_t0970);
      bool _t0982#1 = BAnd(_t0972,_t0980);
      bool _t0984#1 = BAnd(_t0964,_t0982);
      if _t0984 then goto ASSIGN0988 else goto ASSIGN098B
    ASSIGN0988:  preds = [COND098D]
      femData:MeshPos _t0987#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0923,cellInt0922,xn0949,pos0921);
      return _t0987
      goto JOIN0986
    JOIN0986:  preds = [*RETURN(_t0987)0989,*RETURN(_t098A)098C]
      goto JOIN0955
    JOIN0955:  preds = [*JOIN0986,COND098E]
      goto FOREACH0940
    ASSIGN098B:  preds = [COND098D]
      femData:MeshPos _t098A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t098A
      goto JOIN0986
    ASSIGN0991:  preds = [FOREACH0940]
      femData:MeshPos _t0990#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0923);
      return _t0990
}
  function int[2] nextCell409A6 (int faceIdx0995#1, int cell0996#1, femData:Mesh mesh0997#1) {
    ENTRY09A5:  preds = []
      int _t0998#1 = 6;
      int _t099A#1 = IMul(cell0996,_t0998);
      int _t099C#1 = 2;
      int _t099E#1 = IMul(faceIdx0995,_t099C);
      int _t09A0#1 = IAdd(_t099A,_t099E);
      int[2] _t09A2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh0997,_t09A0);
      return _t09A2
}
## input initialization
  ENTRY0915:  preds = []
    real isoval08C4#1 = 0.2e0;
    globals.isoval08AE = isoval08C4;
    real thick08C7#1 = 0.7e-1;
    globals.thick08AF = thick08C7;
    real _t08CA#1 = -0.5e0;
    real _t08CC#5 = 0.5e0;
    tensor[3] camEye08D0#1 = <tensor[3]>[_t08CA,_t08CC,_t08CC];
    globals.camEye08B0 = camEye08D0;
    tensor[3] camAt08D9#1 = <tensor[3]>[_t08CC,_t08CC,_t08CC];
    globals.camAt08B1 = camAt08D9;
    real _t08DC#2 = 0.e0;
    real _t08E0#2 = 0.1e1;
    tensor[3] camUp08E2#2 = <tensor[3]>[_t08DC,_t08DC,_t08E0];
    globals.camUp08B2 = camUp08E2;
    real camFOV08E5#1 = 0.137e2;
    globals.camFOV08B3 = camFOV08E5;
    int iresU08E8#2 = 10;
    globals.iresU08B4 = iresU08E8;
    globals.iresV08B5 = iresU08E8;
    real camNear08EE#1 = -0.2e1;
    globals.camNear08B6 = camNear08EE;
    real camFar08F1#1 = 0.5e1;
    globals.camFar08B7 = camFar08F1;
    globals.refStep08B8 = _t08E0;
    real rayStep08F7#1 = 0.1e-1;
    globals.rayStep08B9 = rayStep08F7;
    globals.lightVsp08BA = camUp08E2;
    real phongKa0903#1 = 0.1e0;
    globals.phongKa08BB = phongKa0903;
    real phongKd0906#1 = 0.9e0;
    globals.phongKd08BC = phongKd0906;
    bool debug0909#1 = false;
    globals.debug08BD = debug0909;
    int debugU090C#1 = 8;
    globals.debugU08BE = debugU090C;
    int debugV090F#1 = 2;
    globals.debugV08BF = debugV090F;
    real eps0912#1 = 0.1e-8;
    globals.eps08C0 = eps0912;
    return
## global-variable initialization
  ENTRY0A01:  preds = []
    femData:Mesh a09AF#3 = globals.a08AB;
    femData:Space 0b0412_intermedateGlobal09AE#1 = globals.0b0412_intermedateGlobal08AC;
    femData:FemFunc 0c0414_intermedateGlobal09AD#1 = globals.0c0414_intermedateGlobal08AD;
    tensor[3] camEye09AC#14 = globals.camEye08B0;
    tensor[3] camAt09AB#14 = globals.camAt08B1;
    tensor[3] camUp09AA#4 = globals.camUp08B2;
    real camFOV09A9#2 = globals.camFOV08B3;
    int iresU09A8#1 = globals.iresU08B4;
    int iresV09A7#1 = globals.iresV08B5;
    int _t09B9#1 = 0;
    int _t09BB#1 = 1;
    int _t09BD#1 = ExtractFemItem<int,NumCell(Mesh)>(a09AF);
    int _t09BF#1 = ISub(_t09BD,_t09BB);
    int[] _t09C1#1 = Range(_t09B9,_t09BF);
    femData:MeshCell[] _t09C3#1 = <femData:MeshCell[]>{};
  FOREACH09C7:  preds = [ASSIGN09C4,NEXT09CC]
    foreach (_t09C5 in _t09C1) on exit goto GASSIGN0CD6
      femData:MeshCell[] _t09C6#2 = phi(_t09C3,_t09CA)
    femData:MeshCell _t09C8#1 = LoadFem<femData:MeshCell>(a09AF,_t09C5);
    femData:MeshCell[] _t09CA#1 = Append<femData:MeshCell>(_t09C6,_t09C8);
    goto FOREACH09C7
  GASSIGN0CD6:  preds = [FOREACH09C7]
    globals.0cell_a0917 = _t09C6;
    femData:Space b09D0#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal09AE,a09AF);
    femData:FemFunc c09D3#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal09AD,b09D0);
    globals.c0919 = c09D3;
    tensor[3] camN09DD#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC);
    tensor[3] camU09E2#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA);
    globals.camU091C = camU09E2;
    tensor[3] camV09E5#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC,camUp09AA,camAt09AB,camEye09AC,camAt09AB,camEye09AC);
    globals.camV091D = camV09E5;
    real _t09E8#2 = 0.314159265358979323846264338327950288e1;
    real _t09EC#2 = 0.36e3;
    real camVmax09F2#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV09A9,_t09E8,_t09EC,camAt09AB,camEye09AC);
    globals.camVmax091E = camVmax09F2;
    real _t09F5#1 = IntToReal(iresU09A8);
    real _t09F9#1 = IntToReal(iresV09A7);
    real camUmax09FB#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV09A9,_t09E8,_t09EC,camAt09AB,camEye09AC,_t09F5,_t09F9);
    globals.camUmax091F = camUmax09FB;
    globals.rayVec0920 = camN09DD;
    return
## strand
  strand ray (int ui0A20#2, int vi0A21#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0AAD:  preds = []
        femData:MeshCell[] 0cell_a0A3B#1 = globals.0cell_a0917;
        femData:FemFunc c0A3A#1 = globals.c0919;
        tensor[3] camEye0A39#1 = globals.camEye08B0;
        int iresU0A38#2 = globals.iresU08B4;
        int iresV0A37#3 = globals.iresV08B5;
        int[] indecies0A36#2 = globals.indecies08C1;
        tensor[2][] times0A35#1 = globals.times08C2;
        tensor[3] camU0A34#2 = globals.camU091C;
        tensor[3] camV0A33#2 = globals.camV091D;
        real camVmax0A32#6 = globals.camVmax091E;
        real camUmax0A31#6 = globals.camUmax091F;
        real _t0A58#6 = -0.5e0;
        real _t0A5A#3 = IntToReal(ui0A20);
        real _t0A5C#3 = IntToReal(iresU0A38);
        real _t0A5E#6 = 0.5e0;
        real rayU0A62#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E);
        real _t0A68#3 = IntToReal(vi0A21);
        real _t0A6A#3 = IntToReal(iresV0A37);
        real rayV0A70#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E);
        tensor[3] UV0A76#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E,camU0A34,camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E,camV0A33);
        tensor[3] rayOrig0A78#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye0A39,camUmax0A31,camUmax0A31,_t0A58,_t0A5A,_t0A5C,_t0A5E,camU0A34,camVmax0A32,camVmax0A32,_t0A58,_t0A68,_t0A6A,_t0A5E,camV0A33);
        int _t0A7A#2 = IMul(ui0A20,iresV0A37);
        int _t0A7C#1 = IAdd(_t0A7A,vi0A21);
        int offset0A7E#2 = Subscript<int[]>(indecies0A36,_t0A7C);
        int _t0A80#1 = IMul(iresU0A38,iresV0A37);
        int _t0A84#1 = IAdd(_t0A80,_t0A7A);
        int _t0A86#1 = IAdd(_t0A84,vi0A21);
        int len0A88#1 = Subscript<int[]>(indecies0A36,_t0A86);
        int itter0A8A#3 = 0;
        int idx0A8C#2 = IAdd(offset0A7E,itter0A8A);
        tensor[2] interval0A8E#3 = Subscript<tensor[2][]>(times0A35,idx0A8C);
        real s0A90#1 = TensorIndex<tensor[2],[0]>(interval0A8E);
        real e0A92#1 = TensorIndex<tensor[2],[1]>(interval0A8E);
        femData:MeshCell cc0A96#2 = Subscript<femData:MeshCell[]>(0cell_a0A3B,itter0A8A);
        int _t0A99#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0A96);
        femData:FuncCell _t0A9B#1 = LoadFem<femData:FuncCell>(c0A3A,_t0A99);
        tensor[2][0] _t0AA1#1 = <tensor[2][0]>{};
        tensor[2][] _t0AA3#1 = MkDynamic<tensor[2],0>(_t0AA1);
        femData:MeshCell[0] _t0AA7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0AA9#1 = MkDynamic<femData:MeshCell,0>(_t0AA7);
        self.rayU = rayU0A62;
        self.rayV = rayV0A70;
        self.UV = UV0A76;
        self.rayOrig = rayOrig0A78;
        self.offset = offset0A7E;
        self.len = len0A88;
        self.itter = itter0A8A;
        self.idx = idx0A8C;
        self.interval = interval0A8E;
        self.s = s0A90;
        self.e = e0A92;
        self.cc = cc0A96;
        self.fc = _t0A9B;
        self.intervals = _t0AA3;
        self.newCells = _t0AA9;
        return
    end state init
    method start
        ENTRY0AFE:  preds = []
          femData:MeshCell[] 0cell_a0AC0#1 = globals.0cell_a0917;
          femData:FemFunc c0ABF#1 = globals.c0919;
          int[] cells0ABE#1 = globals.cells08C3;
          int len0AC9#1 = self.len;
          int idx0ACB#1 = self.idx;
          int _t0AE2#1 = 0;
          bool _t0AE4#1 = EQ<int>(len0AC9,_t0AE2);
          if _t0AE4 then goto STABILIZE0AE7 else goto JOIN0AE6
        STABILIZE0AE7:  preds = [COND0AF0]
          stabilize
          goto JOIN0AE6
        JOIN0AE6:  preds = [*STABILIZE0AE7,COND0AF0]
          int _t0AF1#1 = Subscript<int[]>(cells0ABE,idx0ACB);
          femData:MeshCell cc0AF3#2 = Subscript<femData:MeshCell[]>(0cell_a0AC0,_t0AF1);
          int _t0AF6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0AF3);
          femData:FuncCell _t0AF8#1 = LoadFem<femData:FuncCell>(c0ABF,_t0AF6);
          self.cc = cc0AF3;
          self.fc = _t0AF8;
          active
    end start
    method update
        ENTRY0CBC:  preds = []
          femData:MeshCell[] 0cell_a0B0C#1 = globals.0cell_a0917;
          femData:FemFunc c0B0B#1 = globals.c0919;
          tensor[2][] times0B0A#1 = globals.times08C2;
          int[] cells0B09#1 = globals.cells08C3;
          tensor[3] rayVec0B08#4 = globals.rayVec0920;
          tensor[3] rayOrig0B15#1 = self.rayOrig;
          int offset0B16#1 = self.offset;
          int len0B17#2 = self.len;
          int itter0B18#2 = self.itter;
          tensor[2] interval0B1A#1 = self.interval;
          real s0B1B#5 = self.s;
          real e0B1C#3 = self.e;
          femData:MeshCell cc0B1D#5 = self.cc;
          femData:FuncCell fc0B1E#3 = self.fc;
          tensor[2][] intervals0B1F#2 = self.intervals;
          femData:MeshCell[] newCells0B20#2 = self.newCells;
          int _t0B30#6 = 1;
          bool _t0B32#1 = LT<int>(len0B17,_t0B30);
          if _t0B32 then goto STABILIZE0B35 else goto JOIN0B34
        STABILIZE0B35:  preds = [COND0B3E]
          stabilize
          goto JOIN0B34
        JOIN0B34:  preds = [*STABILIZE0B35,COND0B3E]
          tensor[3] rayStart0B41#3 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig0B15,s0B1B,rayVec0B08);
          real _t0B43#1 = TensorIndex<tensor[3],[0]>(rayStart0B41);
          real _t0B45#1 = TensorIndex<tensor[3],[1]>(rayStart0B41);
          tensor[2] project0B47#4 = <tensor[2]>[_t0B43,_t0B45];
          femData:FemFunc _t0B49#5 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0B1E);
          femData:Space _t0B4D#4 = ExtractFem<femData:Space,femData:FemFunc>(_t0B49);
          int _t0B4F#4 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0B1E);
          femData:Mesh _t0B53#10 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0B1D);
          int _t0B57#4 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0B1D);
          real _t0B5F#3 = TensorIndex<tensor[3],[2]>(rayStart0B41);
          real f00B61#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[])<(Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B5F);
          real _t0B63#1 = TensorIndex<tensor[3],[0]>(rayVec0B08);
          real _t0B65#1 = TensorIndex<tensor[3],[1]>(rayVec0B08);
          tensor[2] _t0B67#2 = <tensor[2]>[_t0B63,_t0B65];
          real _t0B83#2 = TensorIndex<tensor[3],[2]>(rayVec0B08);
          int _t0B8B#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0B1D);
          real _t0B8D#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0B53,_t0B8B);
          real _t0B8F#1 = λ(T0[2],INT1,FEM(fns)2,FEM(func)3,INT4,FEM(msh)5,FEM(msh)6,T7[2],T8[],T9[])<(Abs((Σ(i0=0..1)<((T0_{i0} * Σ(i104=0..1)<((Probe(Cmp(femV(noFunc, 1, 2, 3)⊛Basis()dx_{i104})[femInvV(0994, 4, 5, 5)_{i0}⊛Basis(){2}],T7) * (Σ(i114=0..1)<((ϵ_{ii114,ii104} * Σ(i116=0..1)<((ϵ_{ii116,ii0} * Probe(femV(0994, 4, 5, 5)_{i116}⊛Basis()dx_{i114},T7)))>(i116=0..1)))>(i114=0..1)) / ( Σ(i112=0..1)<((Probe(femV(0994, 4, 5, 5)_{i112}⊛Basis()dx_{'0'},T7) * Σ(i113=0..1)<((ϵ_{ii112,ii113} * Probe(femV(0994, 4, 5, 5)_{i113}⊛Basis()dx_{'1'},T7)))>(i113=0..1)))>(i112=0..1))))>(i104=0..1)))>(i0=0..1)) - (T8))) / ( T9)> (_t0B67,_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B83,_t0B8D);
          real _t0B91#1 = λ(T0[],T1[])<(T0) - (T1)> (e0B1C,s0B1B);
          real gradEps0B93#6 = Min<real>(_t0B8F,_t0B91);
          tensor[2] _t0BB1#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (project0B47,gradEps0B93,_t0B67);
          real f10BBD#4 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7)) - ((T8 * T9))> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,_t0BB1,_t0B5F,gradEps0B93,_t0B83);
          string _t0BBF#1 = "vals:";
          tensor[2] _t0BC1#2 = <tensor[2]>[f00B61,f10BBD];
          string _t0BC3#6 = "\n";
          Print<[string,tensor[2],string]>(_t0BBF,_t0BC1,_t0BC3);
          real _t0BC7#6 = 0.e0;
          bool _t0BC9#2 = GT<real>(f00B61,_t0BC7);
          if _t0BC9 then goto JOIN0BCB else goto ASSIGN0CE8
        JOIN0BCB:  preds = [COND0BE0,JOIN0BD5]
          int _t0BCF#1 = phi(_t0B30,_t0BD9)
          bool _t0BE4#2 = GT<real>(f10BBD,_t0BC7);
          if _t0BE4 then goto JOIN0BE6 else goto ASSIGN0CEA
        JOIN0BE6:  preds = [COND0BFB,JOIN0BF0]
          int _t0BEA#1 = phi(_t0B30,_t0BF4)
          int _t0BFC#1 = IMul(_t0BCF,_t0BEA);
          int _t0BFE#4 = 0;
          bool _t0C00#1 = GT<int>(_t0BFC,_t0BFE);
          bool _t0C02#1 = BNot(_t0C00);
          if _t0C02 then goto COND0C1F else goto ASSIGN0C6B
        COND0C1F:  preds = [COND0C84]
          if _t0BC9 then goto JOIN0C0A else goto ASSIGN0CEE
        JOIN0C0A:  preds = [COND0C1F,JOIN0C14]
          int _t0C0E#1 = phi(_t0B30,_t0C18)
          if _t0BE4 then goto JOIN0C25 else goto ASSIGN0CEF
        JOIN0C25:  preds = [COND0C3A,JOIN0C2F]
          int _t0C29#1 = phi(_t0B30,_t0C33)
          int _t0C3B#1 = IMul(_t0C0E,_t0C29);
          bool _t0C3F#1 = EQ<int>(_t0C3B,_t0BFE);
          if _t0C3F then goto ASSIGN0C43 else goto JOIN0C41
        ASSIGN0C43:  preds = [COND0C45]
          string _t0C42#1 = "Warn: 0 update\n";
          Print<[string]>(_t0C42);
          goto JOIN0C41
        JOIN0C41:  preds = [MASSIGN0C44,COND0C45]
          string _t0C46#1 = "update with interval:";
          Print<[string,real,string]>(_t0C46,gradEps0B93,_t0BC3);
          string _t0C4B#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t0C4B,_t0BC1,_t0BC3);
          string _t0C52#1 = "New interval:";
          real _t0C54#2 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,gradEps0B93);
          tensor[2] _t0C56#2 = <tensor[2]>[s0B1B,_t0C54];
          Print<[string,tensor[2],string]>(_t0C52,_t0C56,_t0BC3);
          tensor[2][] intervals0C5F#1 = Append<tensor[2]>(intervals0B1F,_t0C56);
          femData:MeshCell[] newCells0C62#1 = Append<femData:MeshCell>(newCells0B20,cc0B1D);
          goto JOIN0C04
        JOIN0C04:  preds = [ASSIGN0C64,ASSIGN0C83]
          femData:MeshCell[] newCells0C63#2 = phi(newCells0C62,newCells0B20)
          tensor[2][] intervals0C60#2 = phi(intervals0C5F,intervals0B1F)
          real s0C66#3 = phi(_t0C54,s0C82)
          bool _t0C85#1 = GTE<real>(s0C66,e0B1C);
          if _t0C85 then goto ASSIGN0CF5 else goto JOIN0C87
        ASSIGN0CF5:  preds = [COND0CBB]
          int itter0C8A#4 = IAdd(itter0B18,_t0B30);
          bool _t0C8D#1 = GTE<int>(itter0C8A,len0B17);
          if _t0C8D then goto SAVE0C91 else goto ASSIGN0C9A
        SAVE0C91:  preds = [COND0CB5]
          self.itter = itter0C8A;
          self.s = s0C66;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          stabilize
          goto JOIN0C8F
        JOIN0C8F:  preds = [*STABILIZE0C90,ASSIGN0CAF]
          femData:FuncCell fc0CB3#1 = phi(_t0CAE)
          femData:MeshCell cc0CA3#1 = phi(cc0CA2)
          real e0CA9#1 = phi(e0CA8)
          real s0CA6#1 = phi(s0CA5)
          tensor[2] interval0C9C#1 = phi(interval0C9B)
          goto JOIN0C87
        JOIN0C87:  preds = [JOIN0C8F,COND0CBB]
          femData:FuncCell fc0CBA#1 = phi(fc0CB3,fc0B1E)
          femData:MeshCell cc0CB9#1 = phi(cc0CA3,cc0B1D)
          real e0CB8#1 = phi(e0CA9,e0B1C)
          real s0CB7#1 = phi(s0CA6,s0C66)
          tensor[2] interval0CB6#1 = phi(interval0C9C,interval0B1A)
          int itter0C8B#1 = phi(itter0C8A,itter0B18)
          self.itter = itter0C8B;
          self.interval = interval0CB6;
          self.s = s0CB7;
          self.e = e0CB8;
          self.cc = cc0CB9;
          self.fc = fc0CBA;
          self.intervals = intervals0C60;
          self.newCells = newCells0C63;
          active
        ASSIGN0C9A:  preds = [COND0CB5]
          int _t0C99#2 = IAdd(offset0B16,itter0C8A);
          tensor[2] interval0C9B#3 = Subscript<tensor[2][]>(times0B0A,_t0C99);
          int _t0CA0#1 = Subscript<int[]>(cells0B09,_t0C99);
          femData:MeshCell cc0CA2#2 = Subscript<femData:MeshCell[]>(0cell_a0B0C,_t0CA0);
          real s0CA5#1 = TensorIndex<tensor[2],[0]>(interval0C9B);
          real e0CA8#1 = TensorIndex<tensor[2],[1]>(interval0C9B);
          int _t0CAC#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0CA2);
          femData:FuncCell _t0CAE#1 = LoadFem<femData:FuncCell>(c0B0B,_t0CAC);
          goto JOIN0C8F
        ASSIGN0CEF:  preds = [COND0C3A]
          bool _t0C2D#1 = LT<real>(f10BBD,_t0BC7);
          if _t0C2D then goto ASSIGN0C31 else goto JOIN0C2F
        ASSIGN0C31:  preds = [COND0C39]
          int _t0C30#1 = -1;
          goto JOIN0C2F
        JOIN0C2F:  preds = [ASSIGN0C31,COND0C39]
          int _t0C33#1 = phi(_t0C30,_t0BFE)
          goto JOIN0C25
        ASSIGN0CEE:  preds = [COND0C1F]
          bool _t0C12#1 = LT<real>(f00B61,_t0BC7);
          if _t0C12 then goto ASSIGN0C16 else goto JOIN0C14
        ASSIGN0C16:  preds = [COND0C1E]
          int _t0C15#1 = -1;
          goto JOIN0C14
        JOIN0C14:  preds = [ASSIGN0C16,COND0C1E]
          int _t0C18#1 = phi(_t0C15,_t0BFE)
          goto JOIN0C0A
        ASSIGN0C6B:  preds = [COND0C84]
          real _t0C6A#1 = 0.2e1;
          real _t0C70#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0B53,_t0B8B);
          real _t0C74#1 = λ(INT0,FEM(fns)1,FEM(func)2,INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[],T8[],T9[])<(Abs((Probe(Cmp(femV(noFunc, 0, 1, 2)⊛Basis())[femInvV(0994, 3, 4, 4)_{i0}⊛Basis(){2}],T6)) - (T7))) / ( (T8 * T9))> (_t0B4F,_t0B4D,_t0B49,_t0B57,_t0B53,_t0B53,project0B47,_t0B5F,_t0C6A,_t0C70);
          real epsUpdate0C76#2 = Max<real>(gradEps0B93,_t0C74);
          string _t0C78#1 = "update L:";
          Print<[string,real,string]>(_t0C78,epsUpdate0C76,_t0BC3);
          string _t0C7D#1 = "update G:";
          Print<[string,real,string]>(_t0C7D,gradEps0B93,_t0BC3);
          real s0C82#1 = λ(T0[],T1[])<(T0 + T1)> (s0B1B,epsUpdate0C76);
          goto JOIN0C04
        ASSIGN0CEA:  preds = [COND0BFB]
          bool _t0BEE#1 = LT<real>(f10BBD,_t0BC7);
          if _t0BEE then goto ASSIGN0BF2 else goto ASSIGN0BF7
        ASSIGN0BF2:  preds = [COND0BFA]
          int _t0BF1#1 = -1;
          goto JOIN0BF0
        JOIN0BF0:  preds = [ASSIGN0BF2,ASSIGN0BF7]
          int _t0BF4#1 = phi(_t0BF1,_t0BF6)
          goto JOIN0BE6
        ASSIGN0BF7:  preds = [COND0BFA]
          int _t0BF6#1 = 0;
          goto JOIN0BF0
        ASSIGN0CE8:  preds = [COND0BE0]
          bool _t0BD3#1 = LT<real>(f00B61,_t0BC7);
          if _t0BD3 then goto ASSIGN0BD7 else goto ASSIGN0BDC
        ASSIGN0BD7:  preds = [COND0BDF]
          int _t0BD6#1 = -1;
          goto JOIN0BD5
        JOIN0BD5:  preds = [ASSIGN0BD7,ASSIGN0BDC]
          int _t0BD9#1 = phi(_t0BD6,_t0BDB)
          goto JOIN0BCB
        ASSIGN0BDC:  preds = [COND0BDF]
          int _t0BDB#1 = 0;
          goto JOIN0BD5
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY0A1E:  preds = []
      int iresU0A04#1 = globals.iresU08B4;
      int iresV0A03#1 = globals.iresV08B5;
      int _t0A07#2 = 0;
      int _t0A09#2 = 1;
      int _t0A0B#1 = ISub(iresU0A04,_t0A09);
      int[] _t0A0D#1 = Range(_t0A07,_t0A0B);
    FOREACH0A10:  preds = [ASSIGN0A0E,NEXT0A1D]
      foreach (vi0A0F in _t0A0D) on exit goto RETURN0A1F
      int _t0A15#1 = ISub(iresV0A03,_t0A09);
      int[] _t0A17#1 = Range(_t0A07,_t0A15);
    FOREACH0A1A:  preds = [ASSIGN0CC7,NEXT0A1C]
      foreach (ui0A19 in _t0A17) on exit goto NEXT0A1D
      new ray(ui0A19,vi0A0F);
      goto FOREACH0A1A
    NEXT0A1D:  preds = [FOREACH0A1A]
      goto FOREACH0A10
    RETURN0A1F:  preds = [FOREACH0A10]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0D21 (a) = <no-default>
  input 0b0412_intermedateGlobal0D22 (b) = <no-default>
  input 0c0414_intermedateGlobal0D23 (c) = <no-default>
  input isoval0D24 (isoval) = <default>
  input thick0D25 (thick) = <default>
  input camEye0D26 (camEye) = <default>
  input camAt0D27 (camAt) = <default>
  input camUp0D28 (camUp) = <default>
  input camFOV0D29 (camFOV) = <default>
  input iresU0D2A (iresU) = <default>
  input iresV0D2B (iresV) = <default>
  input camNear0D2C (camNear) = <default>
  input camFar0D2D (camFar) = <default>
  input refStep0D2E (refStep) = <default>
  input rayStep0D2F (rayStep) = <default>
  input lightVsp0D30 (lightVsp) = <default>
  input phongKa0D31 (phongKa) = <default>
  input phongKd0D32 (phongKd) = <default>
  input debug0D33 (debug) = <default>
  input debugU0D34 (debugU) = <default>
  input debugV0D35 (debugV) = <default>
  input eps0D36 (eps) = <default>
  input indecies0D37 (indecies) = <no-default>
  input times0D38 (times) = <no-default>
  input cells0D39 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0D3A
  global femData:FemFunc c0D3B
  global tensor[3] camU0D3C
  global tensor[3] camV0D3D
  global real camVmax0D3E
  global real camUmax0D3F
  global tensor[3] rayVec0D40
## functions
  function femData:MeshPos _0994_msh_newtonInverse0F49 (tensor[2] pos0F4A#5, int cellInt0F4B#21, femData:Mesh mesh0F4C#27) {
    ENTRY0F4D:  preds = []
      real _t0F4E#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0F50#37 = <tensor[2]>[_t0F4E,_t0F4E];
      int _t0F52#1 = 0;
      int _t0F54#1 = 16;
      int[] _t0F56#1 = Range(_t0F52,_t0F54);
    FOREACH0F59:  preds = [ASSIGN0F57,NEXT1036]
      foreach (itter0F58 in _t0F56) on exit goto ASSIGN103B
        tensor[2] xn0F5B#15 = phi(xn0F50,xn0F5A)
      int[3] femIndicies0F68#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0F69#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0F68);
      tensor[3,2] dofs0F67#1 = femDofs0F69;
      tensor[2,3] basisResult0F6A#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_100F5C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F67,basisResult0F6A,xn0F50);
      tensor[2,2] op1_e3_l_110F5D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_100F5C);
      tensor[3,2] dofs0F6B#1 = femDofs0F69;
      tensor[2,3] basisResult0F6C#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_120F5E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F6B,basisResult0F6C,xn0F50);
      tensor[3,2] dofs0F6D#1 = femDofs0F69;
      tensor[2,3] basisResult0F6E#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_130F5F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F6D,basisResult0F6E,xn0F50);
      tensor[2] op1_e3_l_140F60#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_130F5F);
      tensor[2,2] op1_e3_l_150F61#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_110F5D);
      real op1_e3_l_160F62#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_120F5E,op1_e3_l_140F60);
      tensor[3,2] dofs0F6F#1 = femDofs0F69;
      tensor[3] basisResult0F70#1 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_170F63#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,dofs0F6F,basisResult0F70,xn0F5B);
      tensor[2,2] op1_e3_l_180F64#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_150F61,op1_e3_l_160F62);
      tensor[2] op1_e3_l_190F65#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_170F63);
      tensor[2] op1_e3_l_200F66#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_190F65);
      tensor[2] xn0F5A#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_200F66);
      real _t0F87#2 = 0.1e-7;
      real _t0F89#1 = λ(T0[],T1[])<(T0 * T1)> (_t0F87,_t0F87);
      int[3] femIndicies0F98#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0F99#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0F98);
      tensor[3,2] dofs0F97#1 = femDofs0F99;
      tensor[2,3] basisResult0F9A#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_180F8C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F97,basisResult0F9A,xn0F50);
      tensor[2,2] op1_e3_l_190F8D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_180F8C);
      tensor[3,2] dofs0F9B#1 = femDofs0F99;
      tensor[2,3] basisResult0F9C#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_200F8E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F9B,basisResult0F9C,xn0F50);
      tensor[3,2] dofs0F9D#1 = femDofs0F99;
      tensor[2,3] basisResult0F9E#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_210F8F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0F9D,basisResult0F9E,xn0F50);
      tensor[2] op1_e3_l_220F90#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_210F8F);
      tensor[2,2] op1_e3_l_230F91#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_190F8D);
      real op1_e3_l_240F92#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_200F8E,op1_e3_l_220F90);
      tensor[3,2] dofs0F9F#1 = femDofs0F99;
      tensor[3] basisResult0FA0#1 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_250F93#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F5B,dofs0F9F,basisResult0FA0,xn0F5B);
      tensor[2,2] op1_e3_l_260F94#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_230F91,op1_e3_l_240F92);
      tensor[2] op1_e3_l_270F95#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_250F93);
      tensor[2] op1_e3_l_380F96#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_260F94,op1_e3_l_270F95);
      real _t0F8B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_380F96,op1_e3_l_380F96);
      bool _t0FB7#1 = GTE<real>(_t0F89,_t0F8B);
      if _t0FB7 then goto ASSIGN0FBB else goto JOIN1035
    ASSIGN0FBB:  preds = [COND0FB9]
      real _t0FBA#3 = 0.1e1;
      real _t0FBC#3 = 0.1e-8;
      real _t0FBE#1 = λ(T0[],T1[])<(T0 + T1)> (_t0FBA,_t0FBC);
      tensor[2] _t0FC0#1 = <tensor[2]>[_t0FBA,_t0FBA];
      int[3] femIndicies0FD0#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0FD1#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0FD0);
      tensor[3,2] dofs0FCF#1 = femDofs0FD1;
      tensor[2,3] basisResult0FD2#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_110FC3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0FCF,basisResult0FD2,xn0F50);
      tensor[2,2] op1_e3_l_120FC4#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_110FC3);
      tensor[3,2] dofs0FD3#1 = femDofs0FD1;
      tensor[2,3] basisResult0FD4#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_130FC5#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0FD3,basisResult0FD4,xn0F50);
      tensor[3,2] dofs0FD5#1 = femDofs0FD1;
      tensor[2,3] basisResult0FD6#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_140FC6#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs0FD5,basisResult0FD6,xn0F50);
      tensor[2] op1_e3_l_150FC7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_140FC6);
      tensor[2,2] op1_e3_l_160FC8#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_120FC4);
      real op1_e3_l_170FC9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_130FC5,op1_e3_l_150FC7);
      tensor[3,2] dofs0FD7#1 = femDofs0FD1;
      tensor[3] basisResult0FD8#1 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_180FCA#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,dofs0FD7,basisResult0FD8,xn0F5B);
      tensor[2,2] op1_e3_l_190FCB#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_160FC8,op1_e3_l_170FC9);
      tensor[2] op1_e3_l_200FCC#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_180FCA);
      tensor[2] op1_e3_l_210FCD#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_190FCB,op1_e3_l_200FCC);
      tensor[2] op1_e3_l_220FCE#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_210FCD);
      real _t0FC2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0FC0,op1_e3_l_220FCE);
      bool _t0FF0#1 = GT<real>(_t0FBE,_t0FC2);
      tensor[2] _t0FF2#1 = <tensor[2]>[_t0FBC,_t0FBC];
      int[3] femIndicies1002#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs1003#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies1002);
      tensor[3,2] dofs1001#1 = femDofs1003;
      tensor[2,3] basisResult1004#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_110FF5#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,dofs1001,basisResult1004,xn0F50);
      tensor[2,2] op1_e3_l_120FF6#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_110FF5);
      tensor[3,2] dofs1005#1 = femDofs1003;
      tensor[2,3] basisResult1006#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_130FF7#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs1005,basisResult1006,xn0F50);
      tensor[3,2] dofs1007#1 = femDofs1003;
      tensor[2,3] basisResult1008#1 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2] probe_l_140FF8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,dofs1007,basisResult1008,xn0F50);
      tensor[2] op1_e3_l_150FF9#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_140FF8);
      tensor[2,2] op1_e3_l_160FFA#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_120FF6);
      real op1_e3_l_170FFB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_130FF7,op1_e3_l_150FF9);
      tensor[3,2] dofs1009#1 = femDofs1003;
      tensor[3] basisResult100A#1 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_180FFC#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,dofs1009,basisResult100A,xn0F5B);
      tensor[2,2] op1_e3_l_190FFD#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_160FFA,op1_e3_l_170FFB);
      tensor[2] op1_e3_l_200FFE#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_180FFC);
      tensor[2] op1_e3_l_210FFF#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_190FFD,op1_e3_l_200FFE);
      tensor[2] op1_e3_l_221000#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_210FFF);
      tensor[2] _t0FF4#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0FF2,op1_e3_l_221000);
      real _t1022#1 = TensorIndex<tensor[2],[0]>(_t0FF4);
      real _t1024#2 = -0.e0;
      bool _t1026#1 = GT<real>(_t1022,_t1024);
      real _t1028#1 = TensorIndex<tensor[2],[1]>(_t0FF4);
      bool _t102A#1 = GT<real>(_t1028,_t1024);
      bool _t102C#1 = BAnd(_t1026,_t102A);
      bool _t102E#1 = BAnd(_t0FF0,_t102C);
      if _t102E then goto ASSIGN1032 else goto ASSIGN1038
    ASSIGN1032:  preds = [COND1030]
      femData:MeshPos _t1031#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0F4C,cellInt0F4B,xn0F5A,pos0F4A);
      return _t1031
      goto JOIN1034
    JOIN1034:  preds = [*RETURN(_t1031)1033,*RETURN(_t1037)1039]
      goto JOIN1035
    JOIN1035:  preds = [*JOIN1034,COND0FB9]
      goto FOREACH0F59
    ASSIGN1038:  preds = [COND1030]
      femData:MeshPos _t1037#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t1037
      goto JOIN1034
    ASSIGN103B:  preds = [FOREACH0F59]
      femData:MeshPos _t103A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t103A
}
## input initialization
  ENTRY0D41:  preds = []
    real isoval0D42#1 = 0.2e0;
    globals.isoval0D24 = isoval0D42;
    real thick0D45#1 = 0.7e-1;
    globals.thick0D25 = thick0D45;
    real _t0D48#1 = -0.5e0;
    real _t0D4A#5 = 0.5e0;
    tensor[3] camEye0D4C#1 = <tensor[3]>[_t0D48,_t0D4A,_t0D4A];
    globals.camEye0D26 = camEye0D4C;
    tensor[3] camAt0D4F#1 = <tensor[3]>[_t0D4A,_t0D4A,_t0D4A];
    globals.camAt0D27 = camAt0D4F;
    real _t0D52#2 = 0.e0;
    real _t0D54#2 = 0.1e1;
    tensor[3] camUp0D56#2 = <tensor[3]>[_t0D52,_t0D52,_t0D54];
    globals.camUp0D28 = camUp0D56;
    real camFOV0D59#1 = 0.137e2;
    globals.camFOV0D29 = camFOV0D59;
    int iresU0D5C#2 = 10;
    globals.iresU0D2A = iresU0D5C;
    globals.iresV0D2B = iresU0D5C;
    real camNear0D60#1 = -0.2e1;
    globals.camNear0D2C = camNear0D60;
    real camFar0D63#1 = 0.5e1;
    globals.camFar0D2D = camFar0D63;
    globals.refStep0D2E = _t0D54;
    real rayStep0D67#1 = 0.1e-1;
    globals.rayStep0D2F = rayStep0D67;
    globals.lightVsp0D30 = camUp0D56;
    real phongKa0D6B#1 = 0.1e0;
    globals.phongKa0D31 = phongKa0D6B;
    real phongKd0D6E#1 = 0.9e0;
    globals.phongKd0D32 = phongKd0D6E;
    bool debug0D71#1 = false;
    globals.debug0D33 = debug0D71;
    int debugU0D74#1 = 8;
    globals.debugU0D34 = debugU0D74;
    int debugV0D77#1 = 2;
    globals.debugV0D35 = debugV0D77;
    real eps0D7A#1 = 0.1e-8;
    globals.eps0D36 = eps0D7A;
    return
## global-variable initialization
  ENTRY0D7E:  preds = []
    femData:Mesh a0D7F#3 = globals.a0D21;
    femData:Space 0b0412_intermedateGlobal0D81#1 = globals.0b0412_intermedateGlobal0D22;
    femData:FemFunc 0c0414_intermedateGlobal0D83#1 = globals.0c0414_intermedateGlobal0D23;
    tensor[3] camEye0D85#5 = globals.camEye0D26;
    tensor[3] camAt0D87#5 = globals.camAt0D27;
    tensor[3] camUp0D89#2 = globals.camUp0D28;
    real camFOV0D8B#2 = globals.camFOV0D29;
    int iresU0D8D#1 = globals.iresU0D2A;
    int iresV0D8F#1 = globals.iresV0D2B;
    int _t0D91#1 = 0;
    int _t0D93#1 = 1;
    int _t0D95#1 = ExtractFemItem<int,NumCell(Mesh)>(a0D7F);
    int _t0D97#1 = ISub(_t0D95,_t0D93);
    int[] _t0D99#1 = Range(_t0D91,_t0D97);
    femData:MeshCell[] _t0D9B#1 = <femData:MeshCell[]>{};
  FOREACH0D9E:  preds = [ASSIGN0D9C,NEXT0DA4]
    foreach (_t0D9D in _t0D99) on exit goto GASSIGN0DA5
      femData:MeshCell[] _t0DA2#2 = phi(_t0D9B,_t0DA1)
    femData:MeshCell _t0D9F#1 = LoadFem<femData:MeshCell>(a0D7F,_t0D9D);
    femData:MeshCell[] _t0DA1#1 = Append<femData:MeshCell>(_t0DA2,_t0D9F);
    goto FOREACH0D9E
  GASSIGN0DA5:  preds = [FOREACH0D9E]
    globals.0cell_a0D3A = _t0DA2;
    femData:Space b0DA6#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal0D81,a0D7F);
    femData:FemFunc c0DA8#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal0D83,b0DA6);
    globals.c0D3B = c0DA8;
    tensor[3] op1_e3_l_40DAC#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_60DAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40DAC,op1_e3_l_40DAC);
    real op1_e3_l_70DAE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60DAD);
    real op1_e3_l_90DAF#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70DAE);
    tensor[3] camN0DAB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40DAC,op1_e3_l_90DAF);
    tensor[3] op1_e3_l_100DB6#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_120DB7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_100DB6,op1_e3_l_100DB6);
    real op1_e3_l_130DB8#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_120DB7);
    tensor[3,3] op1_e3_l_150DB9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0D89);
    real op1_e3_l_160DBA#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_130DB8);
    tensor[3] op1_e3_l_170DBB#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_100DB6,op1_e3_l_150DB9);
    real op1_e3_l_340DBC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170DBB,op1_e3_l_170DBB);
    real op1_e3_l_350DBD#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_160DBA,op1_e3_l_160DBA,op1_e3_l_340DBC);
    real op1_e3_l_360DBE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350DBD);
    tensor[3] op1_e3_l_370DBF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_160DBA,op1_e3_l_170DBB);
    real op1_e3_l_380DC0#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360DBE);
    tensor[3] camU0DB5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370DBF,op1_e3_l_380DC0);
    globals.camU0D3C = camU0DB5;
    tensor[3] op1_e3_l_140DCF#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_160DD0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_140DCF,op1_e3_l_140DCF);
    real op1_e3_l_170DD1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_160DD0);
    tensor[3,3] op1_e3_l_230DD2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0D89);
    tensor[3] op1_e3_l_260DD3#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_140DCF,op1_e3_l_230DD2);
    real op1_e3_l_280DD4#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_170DD1);
    real op1_e3_l_300DD5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_260DD3,op1_e3_l_260DD3);
    real op1_e3_l_310DD6#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_280DD4,op1_e3_l_280DD4,op1_e3_l_300DD5);
    real op1_e3_l_320DD7#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_310DD6);
    tensor[3,3] op1_e3_l_450DD8#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_140DCF);
    tensor[3] op1_e3_l_470DD9#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_260DD3,op1_e3_l_450DD8);
    real op1_e3_l_480DDA#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_320DD7);
    tensor[3] op1_e3_l_500DDB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_280DD4,op1_e3_l_470DD9);
    tensor[3] camV0DCE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_480DDA,op1_e3_l_280DD4,op1_e3_l_500DDB);
    globals.camV0D3D = camV0DCE;
    real _t0DEB#2 = 0.314159265358979323846264338327950288e1;
    real _t0DED#2 = 0.36e3;
    real op1_e3_l_50DF0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0D8B,_t0DEB);
    real op1_e3_l_60DF1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0DED,op1_e3_l_50DF0);
    tensor[3] op1_e3_l_70DF2#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_90DF3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_70DF2,op1_e3_l_70DF2);
    real op1_e3_l_100DF4#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_60DF1);
    real op1_e3_l_110DF5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_90DF3);
    real camVmax0DEF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100DF4,op1_e3_l_110DF5);
    globals.camVmax0D3E = camVmax0DEF;
    real _t0DFE#1 = IntToReal(iresU0D8D);
    real _t0E00#1 = IntToReal(iresV0D8F);
    real op1_e3_l_70E03#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0D8B,_t0DEB);
    real op1_e3_l_80E04#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0DED,op1_e3_l_70E03);
    tensor[3] op1_e3_l_90E05#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_110E06#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_90E05,op1_e3_l_90E05);
    real op1_e3_l_120E07#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_80E04);
    real op1_e3_l_130E08#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_110E06);
    real op1_e3_l_140E09#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0DFE,op1_e3_l_120E07,op1_e3_l_130E08);
    real camUmax0E02#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0E00,op1_e3_l_140E09);
    globals.camUmax0D3F = camUmax0E02;
    globals.rayVec0D40 = camN0DAB;
    return
## strand
  strand ray (int ui0E15#2, int vi0E16#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0E26:  preds = []
        femData:MeshCell[] 0cell_a0E27#1 = globals.0cell_a0D3A;
        femData:FemFunc c0E29#1 = globals.c0D3B;
        tensor[3] camEye0E2B#1 = globals.camEye0D26;
        int iresU0E2D#2 = globals.iresU0D2A;
        int iresV0E2F#3 = globals.iresV0D2B;
        int[] indecies0E31#2 = globals.indecies0D37;
        tensor[2][] times0E33#1 = globals.times0D38;
        tensor[3] camU0E35#2 = globals.camU0D3C;
        tensor[3] camV0E37#2 = globals.camV0D3D;
        real camVmax0E39#6 = globals.camVmax0D3E;
        real camUmax0E3B#6 = globals.camUmax0D3F;
        real _t0E3D#12 = -0.5e0;
        real _t0E3F#3 = IntToReal(ui0E15);
        real _t0E41#3 = IntToReal(iresU0E2D);
        real _t0E43#6 = 0.5e0;
        real op1_e3_l_60E46#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_70E47#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_80E48#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E46);
        real op1_e3_l_90E49#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_100E4A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E47,op1_e3_l_80E48);
        real op1_e3_l_110E4B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_90E49);
        real op1_e3_l_130E4C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E4A,op1_e3_l_110E4B);
        real rayU0E45#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E49,op1_e3_l_130E4C);
        real _t0E55#3 = IntToReal(vi0E16);
        real _t0E57#3 = IntToReal(iresV0E2F);
        real op1_e3_l_60E5A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E57,_t0E43);
        real op1_e3_l_70E5B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_80E5C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E5A);
        real op1_e3_l_90E5D#2 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_100E5E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_80E5C);
        real op1_e3_l_110E5F#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_90E5D);
        real op1_e3_l_130E60#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E5E,op1_e3_l_110E5F);
        real rayV0E59#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_130E60);
        real op1_e3_l_140E6A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_150E6B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_160E6C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_140E6A);
        real op1_e3_l_170E6D#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_180E6E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_150E6B,op1_e3_l_160E6C);
        real op1_e3_l_190E6F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_170E6D);
        real op1_e3_l_210E70#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_180E6E,op1_e3_l_190E6F);
        real op1_e3_l_220E71#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_170E6D,op1_e3_l_210E70);
        real op1_e3_l_230E72#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E43,_t0E57);
        real op1_e3_l_240E73#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_250E74#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_230E72);
        real op1_e3_l_260E75#2 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_270E76#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_240E73,op1_e3_l_250E74);
        real op1_e3_l_280E77#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_260E75);
        real op1_e3_l_300E78#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_270E76,op1_e3_l_280E77);
        real op1_e3_l_310E79#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_260E75,op1_e3_l_300E78);
        tensor[3] op1_e3_l_320E7A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU0E35,op1_e3_l_220E71);
        tensor[3] op1_e3_l_330E7B#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV0E37,op1_e3_l_310E79);
        tensor[3] UV0E69#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_320E7A,op1_e3_l_330E7B);
        real op1_e3_l_150E90#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_160E91#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_170E92#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_150E90);
        real op1_e3_l_180E93#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_190E94#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_160E91,op1_e3_l_170E92);
        real op1_e3_l_200E95#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_180E93);
        real op1_e3_l_220E96#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_190E94,op1_e3_l_200E95);
        real op1_e3_l_230E97#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_180E93,op1_e3_l_220E96);
        real op1_e3_l_240E98#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E43,_t0E57);
        real op1_e3_l_250E99#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_260E9A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_240E98);
        real op1_e3_l_270E9B#2 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_280E9C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_250E99,op1_e3_l_260E9A);
        real op1_e3_l_290E9D#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_270E9B);
        real op1_e3_l_310E9E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_280E9C,op1_e3_l_290E9D);
        real op1_e3_l_320E9F#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_270E9B,op1_e3_l_310E9E);
        tensor[3] op1_e3_l_330EA0#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU0E35,op1_e3_l_230E97);
        tensor[3] op1_e3_l_340EA1#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV0E37,op1_e3_l_320E9F);
        tensor[3] rayOrig0E8F#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye0E2B,op1_e3_l_330EA0,op1_e3_l_340EA1);
        int _t0EB5#2 = IMul(ui0E15,iresV0E2F);
        int _t0EB7#1 = IAdd(_t0EB5,vi0E16);
        int offset0EB9#2 = Subscript<int[]>(indecies0E31,_t0EB7);
        int _t0EBB#1 = IMul(iresU0E2D,iresV0E2F);
        int _t0EBD#1 = IAdd(_t0EBB,_t0EB5);
        int _t0EBF#1 = IAdd(_t0EBD,vi0E16);
        int len0EC1#1 = Subscript<int[]>(indecies0E31,_t0EBF);
        int itter0EC3#3 = 0;
        int idx0EC5#2 = IAdd(offset0EB9,itter0EC3);
        tensor[2] interval0EC7#3 = Subscript<tensor[2][]>(times0E33,idx0EC5);
        real s0EC9#1 = TensorIndex<tensor[2],[0]>(interval0EC7);
        real e0ECB#1 = TensorIndex<tensor[2],[1]>(interval0EC7);
        femData:MeshCell cc0ECD#2 = Subscript<femData:MeshCell[]>(0cell_a0E27,itter0EC3);
        int _t0ECF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0ECD);
        femData:FuncCell _t0ED1#1 = LoadFem<femData:FuncCell>(c0E29,_t0ECF);
        tensor[2][0] _t0ED3#1 = <tensor[2][0]>{};
        tensor[2][] _t0ED5#1 = MkDynamic<tensor[2],0>(_t0ED3);
        femData:MeshCell[0] _t0ED7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0ED9#1 = MkDynamic<femData:MeshCell,0>(_t0ED7);
        self.rayU = rayU0E45;
        self.rayV = rayV0E59;
        self.UV = UV0E69;
        self.rayOrig = rayOrig0E8F;
        self.offset = offset0EB9;
        self.len = len0EC1;
        self.itter = itter0EC3;
        self.idx = idx0EC5;
        self.interval = interval0EC7;
        self.s = s0EC9;
        self.e = e0ECB;
        self.cc = cc0ECD;
        self.fc = _t0ED1;
        self.intervals = _t0ED5;
        self.newCells = _t0ED9;
        return
    end state init
    method start
        ENTRY0EEB:  preds = []
          femData:MeshCell[] 0cell_a0EEC#1 = globals.0cell_a0D3A;
          femData:FemFunc c0EEE#1 = globals.c0D3B;
          int[] cells0EF0#1 = globals.cells0D39;
          int len0EF2#1 = self.len;
          int idx0EF4#1 = self.idx;
          int _t0EF6#1 = 0;
          bool _t0EF8#1 = EQ<int>(len0EF2,_t0EF6);
          if _t0EF8 then goto STABILIZE0EFB else goto JOIN0EFC
        STABILIZE0EFB:  preds = [COND0EFA]
          stabilize
          goto JOIN0EFC
        JOIN0EFC:  preds = [*STABILIZE0EFB,COND0EFA]
          int _t0EFD#1 = Subscript<int[]>(cells0EF0,idx0EF4);
          femData:MeshCell cc0EFF#2 = Subscript<femData:MeshCell[]>(0cell_a0EEC,_t0EFD);
          int _t0F01#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0EFF);
          femData:FuncCell _t0F03#1 = LoadFem<femData:FuncCell>(c0EEE,_t0F01);
          self.cc = cc0EFF;
          self.fc = _t0F03;
          active
    end start
    method update
        ENTRY0F08:  preds = []
          femData:MeshCell[] 0cell_a0F09#1 = globals.0cell_a0D3A;
          femData:FemFunc c0F0B#1 = globals.c0D3B;
          tensor[2][] times0F0D#1 = globals.times0D38;
          int[] cells0F0F#1 = globals.cells0D39;
          tensor[3] rayVec0F11#4 = globals.rayVec0D40;
          tensor[3] rayOrig0F13#1 = self.rayOrig;
          int offset0F15#1 = self.offset;
          int len0F17#2 = self.len;
          int itter0F19#2 = self.itter;
          tensor[2] interval0F1B#1 = self.interval;
          real s0F1D#5 = self.s;
          real e0F1F#3 = self.e;
          femData:MeshCell cc0F21#5 = self.cc;
          femData:FuncCell fc0F23#3 = self.fc;
          tensor[2][] intervals0F25#2 = self.intervals;
          femData:MeshCell[] newCells0F27#2 = self.newCells;
          int _t0F29#6 = 1;
          bool _t0F2B#1 = LT<int>(len0F17,_t0F29);
          if _t0F2B then goto STABILIZE0F2E else goto JOIN0F2F
        STABILIZE0F2E:  preds = [COND0F2D]
          stabilize
          goto JOIN0F2F
        JOIN0F2F:  preds = [*STABILIZE0F2E,COND0F2D]
          tensor[3] op1_e3_l_30F31#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0F1D,rayVec0F11);
          tensor[3] rayStart0F30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0F13,op1_e3_l_30F31);
          real _t0F34#1 = TensorIndex<tensor[3],[0]>(rayStart0F30);
          real _t0F36#1 = TensorIndex<tensor[3],[1]>(rayStart0F30);
          tensor[2] project0F38#7 = <tensor[2]>[_t0F34,_t0F36];
          femData:FemFunc _t0F3A#9 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0F23);
          femData:Space _t0F3C#8 = ExtractFem<femData:Space,femData:FemFunc>(_t0F3A);
          int _t0F3E#8 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0F23);
          femData:Mesh _t0F40#11 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0F21);
          int _t0F42#8 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0F21);
          real _t0F44#3 = TensorIndex<tensor[3],[2]>(rayStart0F30);
          femData:MeshPos callNewtonPos103D#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos103E#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos103D);
          tensor[2] Inner0F47#3 = refPos103E;
          int[6] femIndicies1040#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs1041#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies1040);
          tensor[6] dofs103F#1 = femDofs1041;
          tensor[6] basisResult1042#1 = EvaluateBasis<BasisArray(6)>(Inner0F47);
          real compositionl0F48#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,Inner0F47,dofs103F,basisResult1042,Inner0F47);
          real f00F46#4 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl0F48);
          real _t104C#1 = TensorIndex<tensor[3],[0]>(rayVec0F11);
          real _t104E#1 = TensorIndex<tensor[3],[1]>(rayVec0F11);
          tensor[2] _t1050#2 = <tensor[2]>[_t104C,_t104E];
          real _t1052#2 = TensorIndex<tensor[3],[2]>(rayVec0F11);
          int _t1054#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0F21);
          real _t1056#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0F40,_t1054);
          femData:MeshPos callNewtonPos1067#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos1068#7 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1067);
          tensor[2] Inner1059#3 = refPos1068;
          int[6] femIndicies106A#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs106B#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies106A);
          tensor[6] dofs1069#1 = femDofs106B;
          tensor[2,6] basisResult106C#1 = EvaluateBasis<BasisArray(2,6)>(Inner1059);
          tensor[2] compositionl105A#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t0F3E,_t0F3C,_t0F3A,Inner1059,dofs1069,basisResult106C,Inner1059);
          int[3] femIndicies106E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t0F40,_t0F42);
          tensor[3,2] femDofs106F#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t0F40,femIndicies106E);
          tensor[3,2] dofs106D#1 = femDofs106F;
          tensor[2,3] basisResult1070#1 = EvaluateBasis<BasisArray(2,3)>(refPos1068);
          tensor[2,2] probe_l_11105B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t0F42,_t0F40,project0F38,dofs106D,basisResult1070,refPos1068);
          tensor[2,2] op1_e3_l_12105C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_11105B);
          tensor[3,2] dofs1071#1 = femDofs106F;
          tensor[2,3] basisResult1072#1 = EvaluateBasis<BasisArray(2,3)>(refPos1068);
          tensor[2] probe_l_13105D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,dofs1071,basisResult1072,refPos1068);
          tensor[3,2] dofs1073#1 = femDofs106F;
          tensor[2,3] basisResult1074#1 = EvaluateBasis<BasisArray(2,3)>(refPos1068);
          tensor[2] probe_l_14105E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,dofs1073,basisResult1074,refPos1068);
          tensor[2] op1_e3_l_15105F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_14105E);
          tensor[2,2] op1_e3_l_161060#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_12105C);
          real op1_e3_l_171061#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_13105D,op1_e3_l_15105F);
          tensor[2,2] op1_e3_l_181062#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_161060,op1_e3_l_171061);
          tensor[2] op1_e3_l_191063#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl105A,op1_e3_l_181062);
          real op1_e3_l_201064#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1050,op1_e3_l_191063);
          real op1_e3_l_211065#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1052,op1_e3_l_201064);
          real op1_e3_l_221066#1 = λ(T0[])<Abs(T0)> (op1_e3_l_211065);
          real _t1058#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1056,op1_e3_l_221066);
          real _t1092#1 = λ(T0[],T1[])<(T0) - (T1)> (e0F1F,s0F1D);
          real gradEps1094#6 = Min<real>(_t1058,_t1092);
          tensor[2] op1_e3_l_31097#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps1094,_t1050);
          tensor[2] _t1096#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0F38,op1_e3_l_31097);
          femData:MeshPos callNewtonPos109F#1 = _0994_msh_newtonInverse0F49 (_t1096,_t0F42,_t0F40);
          tensor[2] refPos10A0#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos109F);
          tensor[2] Inner109B#3 = refPos10A0;
          int[6] femIndicies10A2#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs10A3#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies10A2);
          tensor[6] dofs10A1#1 = femDofs10A3;
          tensor[6] basisResult10A4#1 = EvaluateBasis<BasisArray(6)>(Inner109B);
          real compositionl109C#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,Inner109B,dofs10A1,basisResult10A4,Inner109B);
          real op1_e3_l_11109D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl109C);
          real op1_e3_l_12109E#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps1094,_t1052);
          real f1109A#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_11109D,op1_e3_l_12109E);
          string _t10B0#1 = "vals:";
          tensor[2] _t10B2#2 = <tensor[2]>[f00F46,f1109A];
          string _t10B4#6 = "\n";
          Print<[string,tensor[2],string]>(_t10B0,_t10B2,_t10B4);
          real _t10B7#6 = 0.e0;
          bool _t10B9#2 = GT<real>(f00F46,_t10B7);
          if _t10B9 then goto JOIN10BE else goto ASSIGN1162
        JOIN10BE:  preds = [COND10BB,JOIN1167]
          int _t10BC#1 = phi(_t0F29,_t10BD)
          bool _t10BF#2 = GT<real>(f1109A,_t10B7);
          if _t10BF then goto JOIN10C4 else goto ASSIGN115A
        JOIN10C4:  preds = [COND10C1,JOIN115F]
          int _t10C2#1 = phi(_t0F29,_t10C3)
          int _t10C5#1 = IMul(_t10BC,_t10C2);
          int _t10C7#4 = 0;
          bool _t10C9#1 = GT<int>(_t10C5,_t10C7);
          bool _t10CB#1 = BNot(_t10C9);
          if _t10CB then goto COND10CE else goto ASSIGN1135
        COND10CE:  preds = [COND10CD]
          if _t10B9 then goto JOIN10D1 else goto ASSIGN112F
        JOIN10D1:  preds = [COND10CE,JOIN1133]
          int _t10CF#1 = phi(_t0F29,_t10D0)
          if _t10BF then goto JOIN10D5 else goto ASSIGN1129
        JOIN10D5:  preds = [COND10D2,JOIN112D]
          int _t10D3#1 = phi(_t0F29,_t10D4)
          int _t10D6#1 = IMul(_t10CF,_t10D3);
          bool _t10D8#1 = EQ<int>(_t10D6,_t10C7);
          if _t10D8 then goto ASSIGN10DC else goto JOIN10DE
        ASSIGN10DC:  preds = [COND10DA]
          string _t10DB#1 = "Warn: 0 update\n";
          Print<[string]>(_t10DB);
          goto JOIN10DE
        JOIN10DE:  preds = [MASSIGN10DD,COND10DA]
          string _t10DF#1 = "update with interval:";
          Print<[string,real,string]>(_t10DF,gradEps1094,_t10B4);
          string _t10E2#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t10E2,_t10B2,_t10B4);
          string _t10E5#1 = "New interval:";
          real _t10E7#2 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,gradEps1094);
          tensor[2] _t10E9#2 = <tensor[2]>[s0F1D,_t10E7];
          Print<[string,tensor[2],string]>(_t10E5,_t10E9,_t10B4);
          tensor[2][] intervals10EC#1 = Append<tensor[2]>(intervals0F25,_t10E9);
          femData:MeshCell[] newCells10EE#1 = Append<femData:MeshCell>(newCells0F27,cc0F21);
          goto JOIN10F4
        JOIN10F4:  preds = [ASSIGN10EF,ASSIGN1158]
          femData:MeshCell[] newCells10F0#2 = phi(newCells10EE,newCells0F27)
          tensor[2][] intervals10F1#2 = phi(intervals10EC,intervals0F25)
          real s10F2#3 = phi(_t10E7,s10F3)
          bool _t10F5#1 = GTE<real>(s10F2,e0F1F);
          if _t10F5 then goto ASSIGN10F9 else goto JOIN1113
        ASSIGN10F9:  preds = [COND10F7]
          int itter10F8#4 = IAdd(itter0F19,_t0F29);
          bool _t10FA#1 = GTE<int>(itter10F8,len0F17);
          if _t10FA then goto SAVE10FD else goto ASSIGN111E
        SAVE10FD:  preds = [COND10FC]
          self.itter = itter10F8;
          self.s = s10F2;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          stabilize
          goto JOIN110C
        JOIN110C:  preds = [*STABILIZE1101,ASSIGN1127]
          femData:FuncCell fc1102#1 = phi(_t1103)
          femData:MeshCell cc1104#1 = phi(cc1105)
          real e1106#1 = phi(e1107)
          real s1108#1 = phi(s1109)
          tensor[2] interval110A#1 = phi(interval110B)
          goto JOIN1113
        JOIN1113:  preds = [JOIN110C,COND10F7]
          femData:FuncCell fc110D#1 = phi(fc1102,fc0F23)
          femData:MeshCell cc110E#1 = phi(cc1104,cc0F21)
          real e110F#1 = phi(e1106,e0F1F)
          real s1110#1 = phi(s1108,s10F2)
          tensor[2] interval1111#1 = phi(interval110A,interval0F1B)
          int itter1112#1 = phi(itter10F8,itter0F19)
          self.itter = itter1112;
          self.interval = interval1111;
          self.s = s1110;
          self.e = e110F;
          self.cc = cc110E;
          self.fc = fc110D;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          active
        ASSIGN111E:  preds = [COND10FC]
          int _t111D#2 = IAdd(offset0F15,itter10F8);
          tensor[2] interval110B#3 = Subscript<tensor[2][]>(times0F0D,_t111D);
          int _t1120#1 = Subscript<int[]>(cells0F0F,_t111D);
          femData:MeshCell cc1105#2 = Subscript<femData:MeshCell[]>(0cell_a0F09,_t1120);
          real s1109#1 = TensorIndex<tensor[2],[0]>(interval110B);
          real e1107#1 = TensorIndex<tensor[2],[1]>(interval110B);
          int _t1125#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1105);
          femData:FuncCell _t1103#1 = LoadFem<femData:FuncCell>(c0F0B,_t1125);
          goto JOIN110C
        ASSIGN1129:  preds = [COND10D2]
          bool _t1128#1 = LT<real>(f1109A,_t10B7);
          if _t1128 then goto ASSIGN112C else goto JOIN112D
        ASSIGN112C:  preds = [COND112A]
          int _t112B#1 = -1;
          goto JOIN112D
        JOIN112D:  preds = [ASSIGN112C,COND112A]
          int _t10D4#1 = phi(_t112B,_t10C7)
          goto JOIN10D5
        ASSIGN112F:  preds = [COND10CE]
          bool _t112E#1 = LT<real>(f00F46,_t10B7);
          if _t112E then goto ASSIGN1132 else goto JOIN1133
        ASSIGN1132:  preds = [COND1130]
          int _t1131#1 = -1;
          goto JOIN1133
        JOIN1133:  preds = [ASSIGN1132,COND1130]
          int _t10D0#1 = phi(_t1131,_t10C7)
          goto JOIN10D1
        ASSIGN1135:  preds = [COND10CD]
          real _t1134#1 = 0.2e1;
          real _t1136#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0F40,_t1054);
          femData:MeshPos callNewtonPos113E#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos113F#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos113E);
          tensor[2] Inner1139#3 = refPos113F;
          int[6] femIndicies1141#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs1142#1 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies1141);
          tensor[6] dofs1140#1 = femDofs1142;
          tensor[6] basisResult1143#1 = EvaluateBasis<BasisArray(6)>(Inner1139);
          real compositionl113A#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,Inner1139,dofs1140,basisResult1143,Inner1139);
          real op1_e3_l_11113B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl113A);
          real op1_e3_l_12113C#1 = λ(T0[])<Abs(T0)> (op1_e3_l_11113B);
          real op1_e3_l_13113D#1 = λ(T0[],T1[])<(T0 * T1)> (_t1134,_t1136);
          real _t1138#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_12113C,op1_e3_l_13113D);
          real epsUpdate1150#2 = Max<real>(gradEps1094,_t1138);
          string _t1152#1 = "update L:";
          Print<[string,real,string]>(_t1152,epsUpdate1150,_t10B4);
          string _t1155#1 = "update G:";
          Print<[string,real,string]>(_t1155,gradEps1094,_t10B4);
          real s10F3#1 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,epsUpdate1150);
          goto JOIN10F4
        ASSIGN115A:  preds = [COND10C1]
          bool _t1159#1 = LT<real>(f1109A,_t10B7);
          if _t1159 then goto ASSIGN115D else goto ASSIGN1160
        ASSIGN115D:  preds = [COND115B]
          int _t115C#1 = -1;
          goto JOIN115F
        JOIN115F:  preds = [ASSIGN115D,ASSIGN1160]
          int _t10C3#1 = phi(_t115C,_t115E)
          goto JOIN10C4
        ASSIGN1160:  preds = [COND115B]
          int _t115E#1 = 0;
          goto JOIN115F
        ASSIGN1162:  preds = [COND10BB]
          bool _t1161#1 = LT<real>(f00F46,_t10B7);
          if _t1161 then goto ASSIGN1165 else goto ASSIGN1168
        ASSIGN1165:  preds = [COND1163]
          int _t1164#1 = -1;
          goto JOIN1167
        JOIN1167:  preds = [ASSIGN1165,ASSIGN1168]
          int _t10BD#1 = phi(_t1164,_t1166)
          goto JOIN10BE
        ASSIGN1168:  preds = [COND1163]
          int _t1166#1 = 0;
          goto JOIN1167
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1169:  preds = []
      int iresU116A#1 = globals.iresU0D2A;
      int iresV116C#1 = globals.iresV0D2B;
      int _t116E#2 = 0;
      int _t1170#2 = 1;
      int _t1172#1 = ISub(iresU116A,_t1170);
      int[] _t1174#1 = Range(_t116E,_t1172);
    FOREACH1177:  preds = [ASSIGN1175,NEXT1180]
      foreach (vi1176 in _t1174) on exit goto RETURN1181
      int _t1178#1 = ISub(iresV116C,_t1170);
      int[] _t117A#1 = Range(_t116E,_t1178);
    FOREACH117D:  preds = [ASSIGN117B,NEXT117F]
      foreach (ui117C in _t117A) on exit goto NEXT1180
      new ray(ui117C,vi1176);
      goto FOREACH117D
    NEXT1180:  preds = [FOREACH117D]
      goto FOREACH1177
    RETURN1181:  preds = [FOREACH1177]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0D21 (a) = <no-default>
  input 0b0412_intermedateGlobal0D22 (b) = <no-default>
  input 0c0414_intermedateGlobal0D23 (c) = <no-default>
  input isoval0D24 (isoval) = <default>
  input thick0D25 (thick) = <default>
  input camEye0D26 (camEye) = <default>
  input camAt0D27 (camAt) = <default>
  input camUp0D28 (camUp) = <default>
  input camFOV0D29 (camFOV) = <default>
  input iresU0D2A (iresU) = <default>
  input iresV0D2B (iresV) = <default>
  input camNear0D2C (camNear) = <default>
  input camFar0D2D (camFar) = <default>
  input refStep0D2E (refStep) = <default>
  input rayStep0D2F (rayStep) = <default>
  input lightVsp0D30 (lightVsp) = <default>
  input phongKa0D31 (phongKa) = <default>
  input phongKd0D32 (phongKd) = <default>
  input debug0D33 (debug) = <default>
  input debugU0D34 (debugU) = <default>
  input debugV0D35 (debugV) = <default>
  input eps0D36 (eps) = <default>
  input indecies0D37 (indecies) = <no-default>
  input times0D38 (times) = <no-default>
  input cells0D39 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0D3A
  global femData:FemFunc c0D3B
  global tensor[3] camU0D3C
  global tensor[3] camV0D3D
  global real camVmax0D3E
  global real camUmax0D3F
  global tensor[3] rayVec0D40
## functions
  function femData:MeshPos _0994_msh_newtonInverse0F49 (tensor[2] pos0F4A#3, int cellInt0F4B#7, femData:Mesh mesh0F4C#10) {
    ENTRY0F4D:  preds = []
      real _t0F4E#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0F50#8 = <tensor[2]>[_t0F4E,_t0F4E];
      int _t0F52#1 = 0;
      int _t0F54#1 = 16;
      int[] _t0F56#1 = Range(_t0F52,_t0F54);
    FOREACH0F59:  preds = [ASSIGN0F57,NEXT1036]
      foreach (itter0F58 in _t0F56) on exit goto ASSIGN103B
        tensor[2] xn0F5B#6 = phi(xn0F50,xn0F5A)
      int[3] femIndicies0F68#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0F69#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0F68);
      tensor[2,3] basisResult0F6A#3 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_100F5C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2,2] op1_e3_l_110F5D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_100F5C);
      tensor[2] probe_l_120F5E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] probe_l_130F5F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] op1_e3_l_140F60#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_130F5F);
      tensor[2,2] op1_e3_l_150F61#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_110F5D);
      real op1_e3_l_160F62#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_120F5E,op1_e3_l_140F60);
      tensor[3] basisResult0F70#2 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_170F63#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2,2] op1_e3_l_180F64#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_150F61,op1_e3_l_160F62);
      tensor[2] op1_e3_l_190F65#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_170F63);
      tensor[2] op1_e3_l_200F66#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_190F65);
      tensor[2] xn0F5A#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_200F66);
      real _t0F87#2 = 0.1e-7;
      real _t0F89#1 = λ(T0[],T1[])<(T0 * T1)> (_t0F87,_t0F87);
      tensor[2] probe_l_250F93#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F5B,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2] op1_e3_l_270F95#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_250F93);
      tensor[2] op1_e3_l_380F96#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_270F95);
      real _t0F8B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_380F96,op1_e3_l_380F96);
      bool _t0FB7#1 = GTE<real>(_t0F89,_t0F8B);
      if _t0FB7 then goto ASSIGN0FBB else goto JOIN1035
    ASSIGN0FBB:  preds = [COND0FB9]
      real _t0FBA#3 = 0.1e1;
      real _t0FBC#3 = 0.1e-8;
      real _t0FBE#1 = λ(T0[],T1[])<(T0 + T1)> (_t0FBA,_t0FBC);
      tensor[2] _t0FC0#1 = <tensor[2]>[_t0FBA,_t0FBA];
      real _t0FC2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0FC0,xn0F5A);
      bool _t0FF0#1 = GT<real>(_t0FBE,_t0FC2);
      tensor[2] _t0FF2#1 = <tensor[2]>[_t0FBC,_t0FBC];
      tensor[2] _t0FF4#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0FF2,xn0F5A);
      real _t1022#1 = TensorIndex<tensor[2],[0]>(_t0FF4);
      real _t1024#2 = -0.e0;
      bool _t1026#1 = GT<real>(_t1022,_t1024);
      real _t1028#1 = TensorIndex<tensor[2],[1]>(_t0FF4);
      bool _t102A#1 = GT<real>(_t1028,_t1024);
      bool _t102C#1 = BAnd(_t1026,_t102A);
      bool _t102E#1 = BAnd(_t0FF0,_t102C);
      if _t102E then goto ASSIGN1032 else goto ASSIGN1038
    ASSIGN1032:  preds = [COND1030]
      femData:MeshPos _t1031#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0F4C,cellInt0F4B,xn0F5A,pos0F4A);
      return _t1031
      goto JOIN1034
    JOIN1034:  preds = [*RETURN(_t1031)1033,*RETURN(_t1037)1039]
      goto JOIN1035
    JOIN1035:  preds = [*JOIN1034,COND0FB9]
      goto FOREACH0F59
    ASSIGN1038:  preds = [COND1030]
      femData:MeshPos _t1037#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t1037
      goto JOIN1034
    ASSIGN103B:  preds = [FOREACH0F59]
      femData:MeshPos _t103A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t103A
}
## input initialization
  ENTRY0D41:  preds = []
    real isoval0D42#1 = 0.2e0;
    globals.isoval0D24 = isoval0D42;
    real thick0D45#1 = 0.7e-1;
    globals.thick0D25 = thick0D45;
    real _t0D48#1 = -0.5e0;
    real _t0D4A#5 = 0.5e0;
    tensor[3] camEye0D4C#1 = <tensor[3]>[_t0D48,_t0D4A,_t0D4A];
    globals.camEye0D26 = camEye0D4C;
    tensor[3] camAt0D4F#1 = <tensor[3]>[_t0D4A,_t0D4A,_t0D4A];
    globals.camAt0D27 = camAt0D4F;
    real _t0D52#2 = 0.e0;
    real _t0D54#2 = 0.1e1;
    tensor[3] camUp0D56#2 = <tensor[3]>[_t0D52,_t0D52,_t0D54];
    globals.camUp0D28 = camUp0D56;
    real camFOV0D59#1 = 0.137e2;
    globals.camFOV0D29 = camFOV0D59;
    int iresU0D5C#2 = 10;
    globals.iresU0D2A = iresU0D5C;
    globals.iresV0D2B = iresU0D5C;
    real camNear0D60#1 = -0.2e1;
    globals.camNear0D2C = camNear0D60;
    real camFar0D63#1 = 0.5e1;
    globals.camFar0D2D = camFar0D63;
    globals.refStep0D2E = _t0D54;
    real rayStep0D67#1 = 0.1e-1;
    globals.rayStep0D2F = rayStep0D67;
    globals.lightVsp0D30 = camUp0D56;
    real phongKa0D6B#1 = 0.1e0;
    globals.phongKa0D31 = phongKa0D6B;
    real phongKd0D6E#1 = 0.9e0;
    globals.phongKd0D32 = phongKd0D6E;
    bool debug0D71#1 = false;
    globals.debug0D33 = debug0D71;
    int debugU0D74#1 = 8;
    globals.debugU0D34 = debugU0D74;
    int debugV0D77#1 = 2;
    globals.debugV0D35 = debugV0D77;
    real eps0D7A#1 = 0.1e-8;
    globals.eps0D36 = eps0D7A;
    return
## global-variable initialization
  ENTRY0D7E:  preds = []
    femData:Mesh a0D7F#3 = globals.a0D21;
    femData:Space 0b0412_intermedateGlobal0D81#1 = globals.0b0412_intermedateGlobal0D22;
    femData:FemFunc 0c0414_intermedateGlobal0D83#1 = globals.0c0414_intermedateGlobal0D23;
    tensor[3] camEye0D85#1 = globals.camEye0D26;
    tensor[3] camAt0D87#1 = globals.camAt0D27;
    tensor[3] camUp0D89#1 = globals.camUp0D28;
    real camFOV0D8B#1 = globals.camFOV0D29;
    int iresU0D8D#1 = globals.iresU0D2A;
    int iresV0D8F#1 = globals.iresV0D2B;
    int _t0D91#1 = 0;
    int _t0D93#1 = 1;
    int _t0D95#1 = ExtractFemItem<int,NumCell(Mesh)>(a0D7F);
    int _t0D97#1 = ISub(_t0D95,_t0D93);
    int[] _t0D99#1 = Range(_t0D91,_t0D97);
    femData:MeshCell[] _t0D9B#1 = <femData:MeshCell[]>{};
  FOREACH0D9E:  preds = [ASSIGN0D9C,NEXT0DA4]
    foreach (_t0D9D in _t0D99) on exit goto GASSIGN0DA5
      femData:MeshCell[] _t0DA2#2 = phi(_t0D9B,_t0DA1)
    femData:MeshCell _t0D9F#1 = LoadFem<femData:MeshCell>(a0D7F,_t0D9D);
    femData:MeshCell[] _t0DA1#1 = Append<femData:MeshCell>(_t0DA2,_t0D9F);
    goto FOREACH0D9E
  GASSIGN0DA5:  preds = [FOREACH0D9E]
    globals.0cell_a0D3A = _t0DA2;
    femData:Space b0DA6#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal0D81,a0D7F);
    femData:FemFunc c0DA8#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal0D83,b0DA6);
    globals.c0D3B = c0DA8;
    tensor[3] op1_e3_l_40DAC#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_60DAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40DAC,op1_e3_l_40DAC);
    real op1_e3_l_70DAE#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60DAD);
    real op1_e3_l_90DAF#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70DAE);
    tensor[3] camN0DAB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40DAC,op1_e3_l_90DAF);
    tensor[3,3] op1_e3_l_150DB9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0D89);
    tensor[3] op1_e3_l_170DBB#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40DAC,op1_e3_l_150DB9);
    real op1_e3_l_340DBC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170DBB,op1_e3_l_170DBB);
    real op1_e3_l_350DBD#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90DAF,op1_e3_l_90DAF,op1_e3_l_340DBC);
    real op1_e3_l_360DBE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350DBD);
    tensor[3] op1_e3_l_370DBF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_170DBB);
    real op1_e3_l_380DC0#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360DBE);
    tensor[3] camU0DB5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370DBF,op1_e3_l_380DC0);
    globals.camU0D3C = camU0DB5;
    tensor[3,3] op1_e3_l_450DD8#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40DAC);
    tensor[3] op1_e3_l_470DD9#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170DBB,op1_e3_l_450DD8);
    tensor[3] op1_e3_l_500DDB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_470DD9);
    tensor[3] camV0DCE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380DC0,op1_e3_l_90DAF,op1_e3_l_500DDB);
    globals.camV0D3D = camV0DCE;
    real _t0DEB#1 = 0.314159265358979323846264338327950288e1;
    real _t0DED#1 = 0.36e3;
    real op1_e3_l_50DF0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0D8B,_t0DEB);
    real op1_e3_l_60DF1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0DED,op1_e3_l_50DF0);
    real op1_e3_l_100DF4#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60DF1);
    real camVmax0DEF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100DF4,op1_e3_l_70DAE);
    globals.camVmax0D3E = camVmax0DEF;
    real _t0DFE#1 = IntToReal(iresU0D8D);
    real _t0E00#1 = IntToReal(iresV0D8F);
    real op1_e3_l_140E09#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0DFE,op1_e3_l_100DF4,op1_e3_l_70DAE);
    real camUmax0E02#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0E00,op1_e3_l_140E09);
    globals.camUmax0D3F = camUmax0E02;
    globals.rayVec0D40 = camN0DAB;
    return
## strand
  strand ray (int ui0E15#2, int vi0E16#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0E26:  preds = []
        femData:MeshCell[] 0cell_a0E27#1 = globals.0cell_a0D3A;
        femData:FemFunc c0E29#1 = globals.c0D3B;
        tensor[3] camEye0E2B#1 = globals.camEye0D26;
        int iresU0E2D#2 = globals.iresU0D2A;
        int iresV0E2F#3 = globals.iresV0D2B;
        int[] indecies0E31#2 = globals.indecies0D37;
        tensor[2][] times0E33#1 = globals.times0D38;
        tensor[3] camU0E35#1 = globals.camU0D3C;
        tensor[3] camV0E37#1 = globals.camV0D3D;
        real camVmax0E39#2 = globals.camVmax0D3E;
        real camUmax0E3B#2 = globals.camUmax0D3F;
        real _t0E3D#5 = -0.5e0;
        real _t0E3F#1 = IntToReal(ui0E15);
        real _t0E41#1 = IntToReal(iresU0E2D);
        real _t0E43#3 = 0.5e0;
        real op1_e3_l_60E46#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_70E47#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_80E48#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E46);
        real op1_e3_l_90E49#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_100E4A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E47,op1_e3_l_80E48);
        real op1_e3_l_110E4B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_90E49);
        real op1_e3_l_130E4C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E4A,op1_e3_l_110E4B);
        real rayU0E45#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E49,op1_e3_l_130E4C);
        real _t0E55#1 = IntToReal(vi0E16);
        real _t0E57#2 = IntToReal(iresV0E2F);
        real op1_e3_l_60E5A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E57,_t0E43);
        real op1_e3_l_70E5B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_80E5C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E5A);
        real op1_e3_l_90E5D#3 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_100E5E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_80E5C);
        real op1_e3_l_110E5F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_90E5D);
        real op1_e3_l_130E60#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E5E,op1_e3_l_110E5F);
        real rayV0E59#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_130E60);
        real op1_e3_l_230E72#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E43,_t0E57);
        real op1_e3_l_250E74#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_230E72);
        real op1_e3_l_270E76#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_250E74);
        real op1_e3_l_300E78#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_270E76,op1_e3_l_110E5F);
        real op1_e3_l_310E79#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_300E78);
        tensor[3] op1_e3_l_320E7A#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU0E35,rayU0E45);
        tensor[3] op1_e3_l_330E7B#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV0E37,op1_e3_l_310E79);
        tensor[3] UV0E69#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_320E7A,op1_e3_l_330E7B);
        tensor[3] rayOrig0E8F#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye0E2B,op1_e3_l_320E7A,op1_e3_l_330E7B);
        int _t0EB5#2 = IMul(ui0E15,iresV0E2F);
        int _t0EB7#1 = IAdd(_t0EB5,vi0E16);
        int offset0EB9#2 = Subscript<int[]>(indecies0E31,_t0EB7);
        int _t0EBB#1 = IMul(iresU0E2D,iresV0E2F);
        int _t0EBD#1 = IAdd(_t0EBB,_t0EB5);
        int _t0EBF#1 = IAdd(_t0EBD,vi0E16);
        int len0EC1#1 = Subscript<int[]>(indecies0E31,_t0EBF);
        int itter0EC3#3 = 0;
        int idx0EC5#2 = IAdd(offset0EB9,itter0EC3);
        tensor[2] interval0EC7#3 = Subscript<tensor[2][]>(times0E33,idx0EC5);
        real s0EC9#1 = TensorIndex<tensor[2],[0]>(interval0EC7);
        real e0ECB#1 = TensorIndex<tensor[2],[1]>(interval0EC7);
        femData:MeshCell cc0ECD#2 = Subscript<femData:MeshCell[]>(0cell_a0E27,itter0EC3);
        int _t0ECF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0ECD);
        femData:FuncCell _t0ED1#1 = LoadFem<femData:FuncCell>(c0E29,_t0ECF);
        tensor[2][0] _t0ED3#1 = <tensor[2][0]>{};
        tensor[2][] _t0ED5#1 = MkDynamic<tensor[2],0>(_t0ED3);
        femData:MeshCell[0] _t0ED7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0ED9#1 = MkDynamic<femData:MeshCell,0>(_t0ED7);
        self.rayU = rayU0E45;
        self.rayV = rayV0E59;
        self.UV = UV0E69;
        self.rayOrig = rayOrig0E8F;
        self.offset = offset0EB9;
        self.len = len0EC1;
        self.itter = itter0EC3;
        self.idx = idx0EC5;
        self.interval = interval0EC7;
        self.s = s0EC9;
        self.e = e0ECB;
        self.cc = cc0ECD;
        self.fc = _t0ED1;
        self.intervals = _t0ED5;
        self.newCells = _t0ED9;
        return
    end state init
    method start
        ENTRY0EEB:  preds = []
          femData:MeshCell[] 0cell_a0EEC#1 = globals.0cell_a0D3A;
          femData:FemFunc c0EEE#1 = globals.c0D3B;
          int[] cells0EF0#1 = globals.cells0D39;
          int len0EF2#1 = self.len;
          int idx0EF4#1 = self.idx;
          int _t0EF6#1 = 0;
          bool _t0EF8#1 = EQ<int>(len0EF2,_t0EF6);
          if _t0EF8 then goto STABILIZE0EFB else goto JOIN0EFC
        STABILIZE0EFB:  preds = [COND0EFA]
          stabilize
          goto JOIN0EFC
        JOIN0EFC:  preds = [*STABILIZE0EFB,COND0EFA]
          int _t0EFD#1 = Subscript<int[]>(cells0EF0,idx0EF4);
          femData:MeshCell cc0EFF#2 = Subscript<femData:MeshCell[]>(0cell_a0EEC,_t0EFD);
          int _t0F01#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0EFF);
          femData:FuncCell _t0F03#1 = LoadFem<femData:FuncCell>(c0EEE,_t0F01);
          self.cc = cc0EFF;
          self.fc = _t0F03;
          active
    end start
    method update
        ENTRY0F08:  preds = []
          femData:MeshCell[] 0cell_a0F09#1 = globals.0cell_a0D3A;
          femData:FemFunc c0F0B#1 = globals.c0D3B;
          tensor[2][] times0F0D#1 = globals.times0D38;
          int[] cells0F0F#1 = globals.cells0D39;
          tensor[3] rayVec0F11#4 = globals.rayVec0D40;
          tensor[3] rayOrig0F13#1 = self.rayOrig;
          int offset0F15#1 = self.offset;
          int len0F17#2 = self.len;
          int itter0F19#2 = self.itter;
          tensor[2] interval0F1B#1 = self.interval;
          real s0F1D#5 = self.s;
          real e0F1F#3 = self.e;
          femData:MeshCell cc0F21#5 = self.cc;
          femData:FuncCell fc0F23#3 = self.fc;
          tensor[2][] intervals0F25#2 = self.intervals;
          femData:MeshCell[] newCells0F27#2 = self.newCells;
          int _t0F29#6 = 1;
          bool _t0F2B#1 = LT<int>(len0F17,_t0F29);
          if _t0F2B then goto STABILIZE0F2E else goto JOIN0F2F
        STABILIZE0F2E:  preds = [COND0F2D]
          stabilize
          goto JOIN0F2F
        JOIN0F2F:  preds = [*STABILIZE0F2E,COND0F2D]
          tensor[3] op1_e3_l_30F31#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0F1D,rayVec0F11);
          tensor[3] rayStart0F30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0F13,op1_e3_l_30F31);
          real _t0F34#1 = TensorIndex<tensor[3],[0]>(rayStart0F30);
          real _t0F36#1 = TensorIndex<tensor[3],[1]>(rayStart0F30);
          tensor[2] project0F38#5 = <tensor[2]>[_t0F34,_t0F36];
          femData:FemFunc _t0F3A#5 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0F23);
          femData:Space _t0F3C#4 = ExtractFem<femData:Space,femData:FemFunc>(_t0F3A);
          int _t0F3E#4 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0F23);
          femData:Mesh _t0F40#9 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0F21);
          int _t0F42#6 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0F21);
          real _t0F44#2 = TensorIndex<tensor[3],[2]>(rayStart0F30);
          femData:MeshPos callNewtonPos103D#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos103E#10 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos103D);
          int[6] femIndicies1040#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs1041#3 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies1040);
          tensor[6] basisResult1042#1 = EvaluateBasis<BasisArray(6)>(refPos103E);
          real compositionl0F48#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult1042,refPos103E);
          real f00F46#5 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl0F48);
          real _t104C#1 = TensorIndex<tensor[3],[0]>(rayVec0F11);
          real _t104E#1 = TensorIndex<tensor[3],[1]>(rayVec0F11);
          tensor[2] _t1050#2 = <tensor[2]>[_t104C,_t104E];
          real _t1052#2 = TensorIndex<tensor[3],[2]>(rayVec0F11);
          int _t1054#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0F21);
          real _t1056#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0F40,_t1054);
          tensor[2,6] basisResult106C#1 = EvaluateBasis<BasisArray(2,6)>(refPos103E);
          tensor[2] compositionl105A#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult106C,refPos103E);
          int[3] femIndicies106E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t0F40,_t0F42);
          tensor[3,2] femDofs106F#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t0F40,femIndicies106E);
          tensor[2,3] basisResult1070#3 = EvaluateBasis<BasisArray(2,3)>(refPos103E);
          tensor[2,2] probe_l_11105B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2,2] op1_e3_l_12105C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_11105B);
          tensor[2] probe_l_13105D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] probe_l_14105E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] op1_e3_l_15105F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_14105E);
          tensor[2,2] op1_e3_l_161060#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_12105C);
          real op1_e3_l_171061#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_13105D,op1_e3_l_15105F);
          tensor[2,2] op1_e3_l_181062#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_161060,op1_e3_l_171061);
          tensor[2] op1_e3_l_191063#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl105A,op1_e3_l_181062);
          real op1_e3_l_201064#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1050,op1_e3_l_191063);
          real op1_e3_l_211065#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1052,op1_e3_l_201064);
          real op1_e3_l_221066#1 = λ(T0[])<Abs(T0)> (op1_e3_l_211065);
          real _t1058#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1056,op1_e3_l_221066);
          real _t1092#1 = λ(T0[],T1[])<(T0) - (T1)> (e0F1F,s0F1D);
          real gradEps1094#6 = Min<real>(_t1058,_t1092);
          tensor[2] op1_e3_l_31097#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps1094,_t1050);
          tensor[2] _t1096#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0F38,op1_e3_l_31097);
          femData:MeshPos callNewtonPos109F#1 = _0994_msh_newtonInverse0F49 (_t1096,_t0F42,_t0F40);
          tensor[2] refPos10A0#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos109F);
          tensor[6] basisResult10A4#1 = EvaluateBasis<BasisArray(6)>(refPos10A0);
          real compositionl109C#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos10A0,femDofs1041,basisResult10A4,refPos10A0);
          real op1_e3_l_11109D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl109C);
          real op1_e3_l_12109E#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps1094,_t1052);
          real f1109A#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_11109D,op1_e3_l_12109E);
          string _t10B0#1 = "vals:";
          tensor[2] _t10B2#2 = <tensor[2]>[f00F46,f1109A];
          string _t10B4#6 = "\n";
          Print<[string,tensor[2],string]>(_t10B0,_t10B2,_t10B4);
          real _t10B7#6 = 0.e0;
          bool _t10B9#2 = GT<real>(f00F46,_t10B7);
          if _t10B9 then goto JOIN10BE else goto ASSIGN1162
        JOIN10BE:  preds = [COND10BB,JOIN1167]
          int _t10BC#1 = phi(_t0F29,_t10BD)
          bool _t10BF#2 = GT<real>(f1109A,_t10B7);
          if _t10BF then goto JOIN10C4 else goto ASSIGN115A
        JOIN10C4:  preds = [COND10C1,JOIN115F]
          int _t10C2#1 = phi(_t0F29,_t10C3)
          int _t10C5#1 = IMul(_t10BC,_t10C2);
          int _t10C7#4 = 0;
          bool _t10C9#1 = GT<int>(_t10C5,_t10C7);
          bool _t10CB#1 = BNot(_t10C9);
          if _t10CB then goto COND10CE else goto ASSIGN1135
        COND10CE:  preds = [COND10CD]
          if _t10B9 then goto JOIN10D1 else goto ASSIGN112F
        JOIN10D1:  preds = [COND10CE,JOIN1133]
          int _t10CF#1 = phi(_t0F29,_t10D0)
          if _t10BF then goto JOIN10D5 else goto ASSIGN1129
        JOIN10D5:  preds = [COND10D2,JOIN112D]
          int _t10D3#1 = phi(_t0F29,_t10D4)
          int _t10D6#1 = IMul(_t10CF,_t10D3);
          bool _t10D8#1 = EQ<int>(_t10D6,_t10C7);
          if _t10D8 then goto ASSIGN10DC else goto JOIN10DE
        ASSIGN10DC:  preds = [COND10DA]
          string _t10DB#1 = "Warn: 0 update\n";
          Print<[string]>(_t10DB);
          goto JOIN10DE
        JOIN10DE:  preds = [MASSIGN10DD,COND10DA]
          string _t10DF#1 = "update with interval:";
          Print<[string,real,string]>(_t10DF,gradEps1094,_t10B4);
          string _t10E2#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t10E2,_t10B2,_t10B4);
          string _t10E5#1 = "New interval:";
          real _t10E7#2 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,gradEps1094);
          tensor[2] _t10E9#2 = <tensor[2]>[s0F1D,_t10E7];
          Print<[string,tensor[2],string]>(_t10E5,_t10E9,_t10B4);
          tensor[2][] intervals10EC#1 = Append<tensor[2]>(intervals0F25,_t10E9);
          femData:MeshCell[] newCells10EE#1 = Append<femData:MeshCell>(newCells0F27,cc0F21);
          goto JOIN10F4
        JOIN10F4:  preds = [ASSIGN10EF,ASSIGN1158]
          femData:MeshCell[] newCells10F0#2 = phi(newCells10EE,newCells0F27)
          tensor[2][] intervals10F1#2 = phi(intervals10EC,intervals0F25)
          real s10F2#3 = phi(_t10E7,s10F3)
          bool _t10F5#1 = GTE<real>(s10F2,e0F1F);
          if _t10F5 then goto ASSIGN10F9 else goto JOIN1113
        ASSIGN10F9:  preds = [COND10F7]
          int itter10F8#4 = IAdd(itter0F19,_t0F29);
          bool _t10FA#1 = GTE<int>(itter10F8,len0F17);
          if _t10FA then goto SAVE10FD else goto ASSIGN111E
        SAVE10FD:  preds = [COND10FC]
          self.itter = itter10F8;
          self.s = s10F2;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          stabilize
          goto JOIN110C
        JOIN110C:  preds = [*STABILIZE1101,ASSIGN1127]
          femData:FuncCell fc1102#1 = phi(_t1103)
          femData:MeshCell cc1104#1 = phi(cc1105)
          real e1106#1 = phi(e1107)
          real s1108#1 = phi(s1109)
          tensor[2] interval110A#1 = phi(interval110B)
          goto JOIN1113
        JOIN1113:  preds = [JOIN110C,COND10F7]
          femData:FuncCell fc110D#1 = phi(fc1102,fc0F23)
          femData:MeshCell cc110E#1 = phi(cc1104,cc0F21)
          real e110F#1 = phi(e1106,e0F1F)
          real s1110#1 = phi(s1108,s10F2)
          tensor[2] interval1111#1 = phi(interval110A,interval0F1B)
          int itter1112#1 = phi(itter10F8,itter0F19)
          self.itter = itter1112;
          self.interval = interval1111;
          self.s = s1110;
          self.e = e110F;
          self.cc = cc110E;
          self.fc = fc110D;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          active
        ASSIGN111E:  preds = [COND10FC]
          int _t111D#2 = IAdd(offset0F15,itter10F8);
          tensor[2] interval110B#3 = Subscript<tensor[2][]>(times0F0D,_t111D);
          int _t1120#1 = Subscript<int[]>(cells0F0F,_t111D);
          femData:MeshCell cc1105#2 = Subscript<femData:MeshCell[]>(0cell_a0F09,_t1120);
          real s1109#1 = TensorIndex<tensor[2],[0]>(interval110B);
          real e1107#1 = TensorIndex<tensor[2],[1]>(interval110B);
          int _t1125#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1105);
          femData:FuncCell _t1103#1 = LoadFem<femData:FuncCell>(c0F0B,_t1125);
          goto JOIN110C
        ASSIGN1129:  preds = [COND10D2]
          bool _t1128#1 = LT<real>(f1109A,_t10B7);
          if _t1128 then goto ASSIGN112C else goto JOIN112D
        ASSIGN112C:  preds = [COND112A]
          int _t112B#1 = -1;
          goto JOIN112D
        JOIN112D:  preds = [ASSIGN112C,COND112A]
          int _t10D4#1 = phi(_t112B,_t10C7)
          goto JOIN10D5
        ASSIGN112F:  preds = [COND10CE]
          bool _t112E#1 = LT<real>(f00F46,_t10B7);
          if _t112E then goto ASSIGN1132 else goto JOIN1133
        ASSIGN1132:  preds = [COND1130]
          int _t1131#1 = -1;
          goto JOIN1133
        JOIN1133:  preds = [ASSIGN1132,COND1130]
          int _t10D0#1 = phi(_t1131,_t10C7)
          goto JOIN10D1
        ASSIGN1135:  preds = [COND10CD]
          real _t1134#1 = 0.2e1;
          real _t1136#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0F40,_t1054);
          real op1_e3_l_12113C#1 = λ(T0[])<Abs(T0)> (f00F46);
          real op1_e3_l_13113D#1 = λ(T0[],T1[])<(T0 * T1)> (_t1134,_t1136);
          real _t1138#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_12113C,op1_e3_l_13113D);
          real epsUpdate1150#2 = Max<real>(gradEps1094,_t1138);
          string _t1152#1 = "update L:";
          Print<[string,real,string]>(_t1152,epsUpdate1150,_t10B4);
          string _t1155#1 = "update G:";
          Print<[string,real,string]>(_t1155,gradEps1094,_t10B4);
          real s10F3#1 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,epsUpdate1150);
          goto JOIN10F4
        ASSIGN115A:  preds = [COND10C1]
          bool _t1159#1 = LT<real>(f1109A,_t10B7);
          if _t1159 then goto ASSIGN115D else goto ASSIGN1160
        ASSIGN115D:  preds = [COND115B]
          int _t115C#1 = -1;
          goto JOIN115F
        JOIN115F:  preds = [ASSIGN115D,ASSIGN1160]
          int _t10C3#1 = phi(_t115C,_t115E)
          goto JOIN10C4
        ASSIGN1160:  preds = [COND115B]
          int _t115E#1 = 0;
          goto JOIN115F
        ASSIGN1162:  preds = [COND10BB]
          bool _t1161#1 = LT<real>(f00F46,_t10B7);
          if _t1161 then goto ASSIGN1165 else goto ASSIGN1168
        ASSIGN1165:  preds = [COND1163]
          int _t1164#1 = -1;
          goto JOIN1167
        JOIN1167:  preds = [ASSIGN1165,ASSIGN1168]
          int _t10BD#1 = phi(_t1164,_t1166)
          goto JOIN10BE
        ASSIGN1168:  preds = [COND1163]
          int _t1166#1 = 0;
          goto JOIN1167
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1169:  preds = []
      int iresU116A#1 = globals.iresU0D2A;
      int iresV116C#1 = globals.iresV0D2B;
      int _t116E#2 = 0;
      int _t1170#2 = 1;
      int _t1172#1 = ISub(iresU116A,_t1170);
      int[] _t1174#1 = Range(_t116E,_t1172);
    FOREACH1177:  preds = [ASSIGN1175,NEXT1180]
      foreach (vi1176 in _t1174) on exit goto RETURN1181
      int _t1178#1 = ISub(iresV116C,_t1170);
      int[] _t117A#1 = Range(_t116E,_t1178);
    FOREACH117D:  preds = [ASSIGN117B,NEXT117F]
      foreach (ui117C in _t117A) on exit goto NEXT1180
      new ray(ui117C,vi1176);
      goto FOREACH117D
    NEXT1180:  preds = [FOREACH117D]
      goto FOREACH1177
    RETURN1181:  preds = [FOREACH1177]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0D21 (a) = <no-default>
  input 0b0412_intermedateGlobal0D22 (b) = <no-default>
  input 0c0414_intermedateGlobal0D23 (c) = <no-default>
  input isoval0D24 (isoval) = <default>
  input thick0D25 (thick) = <default>
  input camEye0D26 (camEye) = <default>
  input camAt0D27 (camAt) = <default>
  input camUp0D28 (camUp) = <default>
  input camFOV0D29 (camFOV) = <default>
  input iresU0D2A (iresU) = <default>
  input iresV0D2B (iresV) = <default>
  input camNear0D2C (camNear) = <default>
  input camFar0D2D (camFar) = <default>
  input refStep0D2E (refStep) = <default>
  input rayStep0D2F (rayStep) = <default>
  input lightVsp0D30 (lightVsp) = <default>
  input phongKa0D31 (phongKa) = <default>
  input phongKd0D32 (phongKd) = <default>
  input debug0D33 (debug) = <default>
  input debugU0D34 (debugU) = <default>
  input debugV0D35 (debugV) = <default>
  input eps0D36 (eps) = <default>
  input indecies0D37 (indecies) = <no-default>
  input times0D38 (times) = <no-default>
  input cells0D39 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0D3A
  global femData:FemFunc c0D3B
  global tensor[3] camU0D3C
  global tensor[3] camV0D3D
  global real camVmax0D3E
  global real camUmax0D3F
  global tensor[3] rayVec0D40
## functions
  function femData:MeshPos _0994_msh_newtonInverse0F49 (tensor[2] pos0F4A#3, int cellInt0F4B#7, femData:Mesh mesh0F4C#10) {
    ENTRY0F4D:  preds = []
      real _t0F4E#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0F50#8 = <tensor[2]>[_t0F4E,_t0F4E];
      int _t0F52#1 = 0;
      int _t0F54#1 = 16;
      int[] _t0F56#1 = Range(_t0F52,_t0F54);
    FOREACH0F59:  preds = [ASSIGN0F57,NEXT1036]
      foreach (itter0F58 in _t0F56) on exit goto ASSIGN103B
        tensor[2] xn0F5B#6 = phi(xn0F50,xn0F5A)
      int[3] femIndicies0F68#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0F69#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0F68);
      tensor[2,3] basisResult0F6A#3 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_100F5C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2,2] op1_e3_l_110F5D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_100F5C);
      tensor[2] probe_l_120F5E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] probe_l_130F5F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] op1_e3_l_140F60#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_130F5F);
      tensor[2,2] op1_e3_l_150F61#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_110F5D);
      real op1_e3_l_160F62#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_120F5E,op1_e3_l_140F60);
      tensor[3] basisResult0F70#2 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_170F63#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2,2] op1_e3_l_180F64#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_150F61,op1_e3_l_160F62);
      tensor[2] op1_e3_l_190F65#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_170F63);
      tensor[2] op1_e3_l_200F66#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_190F65);
      tensor[2] xn0F5A#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_200F66);
      real _t0F87#2 = 0.1e-7;
      real _t0F89#1 = λ(T0[],T1[])<(T0 * T1)> (_t0F87,_t0F87);
      tensor[2] probe_l_250F93#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F5B,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2] op1_e3_l_270F95#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_250F93);
      tensor[2] op1_e3_l_380F96#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_270F95);
      real _t0F8B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_380F96,op1_e3_l_380F96);
      bool _t0FB7#1 = GTE<real>(_t0F89,_t0F8B);
      if _t0FB7 then goto ASSIGN0FBB else goto JOIN1035
    ASSIGN0FBB:  preds = [COND0FB9]
      real _t0FBA#3 = 0.1e1;
      real _t0FBC#3 = 0.1e-8;
      real _t0FBE#1 = λ(T0[],T1[])<(T0 + T1)> (_t0FBA,_t0FBC);
      tensor[2] _t0FC0#1 = <tensor[2]>[_t0FBA,_t0FBA];
      real _t0FC2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0FC0,xn0F5A);
      bool _t0FF0#1 = GT<real>(_t0FBE,_t0FC2);
      tensor[2] _t0FF2#1 = <tensor[2]>[_t0FBC,_t0FBC];
      tensor[2] _t0FF4#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0FF2,xn0F5A);
      real _t1022#1 = TensorIndex<tensor[2],[0]>(_t0FF4);
      real _t1024#2 = -0.e0;
      bool _t1026#1 = GT<real>(_t1022,_t1024);
      real _t1028#1 = TensorIndex<tensor[2],[1]>(_t0FF4);
      bool _t102A#1 = GT<real>(_t1028,_t1024);
      bool _t102C#1 = BAnd(_t1026,_t102A);
      bool _t102E#1 = BAnd(_t0FF0,_t102C);
      if _t102E then goto ASSIGN1032 else goto ASSIGN1038
    ASSIGN1032:  preds = [COND1030]
      femData:MeshPos _t1031#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0F4C,cellInt0F4B,xn0F5A,pos0F4A);
      return _t1031
      goto JOIN1034
    JOIN1034:  preds = [*RETURN(_t1031)1033,*RETURN(_t1037)1039]
      goto JOIN1035
    JOIN1035:  preds = [*JOIN1034,COND0FB9]
      goto FOREACH0F59
    ASSIGN1038:  preds = [COND1030]
      femData:MeshPos _t1037#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t1037
      goto JOIN1034
    ASSIGN103B:  preds = [FOREACH0F59]
      femData:MeshPos _t103A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t103A
}
## input initialization
  ENTRY0D41:  preds = []
    real isoval0D42#1 = 0.2e0;
    globals.isoval0D24 = isoval0D42;
    real thick0D45#1 = 0.7e-1;
    globals.thick0D25 = thick0D45;
    real _t0D48#1 = -0.5e0;
    real _t0D4A#5 = 0.5e0;
    tensor[3] camEye0D4C#1 = <tensor[3]>[_t0D48,_t0D4A,_t0D4A];
    globals.camEye0D26 = camEye0D4C;
    tensor[3] camAt0D4F#1 = <tensor[3]>[_t0D4A,_t0D4A,_t0D4A];
    globals.camAt0D27 = camAt0D4F;
    real _t0D52#2 = 0.e0;
    real _t0D54#2 = 0.1e1;
    tensor[3] camUp0D56#2 = <tensor[3]>[_t0D52,_t0D52,_t0D54];
    globals.camUp0D28 = camUp0D56;
    real camFOV0D59#1 = 0.137e2;
    globals.camFOV0D29 = camFOV0D59;
    int iresU0D5C#2 = 10;
    globals.iresU0D2A = iresU0D5C;
    globals.iresV0D2B = iresU0D5C;
    real camNear0D60#1 = -0.2e1;
    globals.camNear0D2C = camNear0D60;
    real camFar0D63#1 = 0.5e1;
    globals.camFar0D2D = camFar0D63;
    globals.refStep0D2E = _t0D54;
    real rayStep0D67#1 = 0.1e-1;
    globals.rayStep0D2F = rayStep0D67;
    globals.lightVsp0D30 = camUp0D56;
    real phongKa0D6B#1 = 0.1e0;
    globals.phongKa0D31 = phongKa0D6B;
    real phongKd0D6E#1 = 0.9e0;
    globals.phongKd0D32 = phongKd0D6E;
    bool debug0D71#1 = false;
    globals.debug0D33 = debug0D71;
    int debugU0D74#1 = 8;
    globals.debugU0D34 = debugU0D74;
    int debugV0D77#1 = 2;
    globals.debugV0D35 = debugV0D77;
    real eps0D7A#1 = 0.1e-8;
    globals.eps0D36 = eps0D7A;
    return
## global-variable initialization
  ENTRY0D7E:  preds = []
    femData:Mesh a0D7F#3 = globals.a0D21;
    femData:Space 0b0412_intermedateGlobal0D81#1 = globals.0b0412_intermedateGlobal0D22;
    femData:FemFunc 0c0414_intermedateGlobal0D83#1 = globals.0c0414_intermedateGlobal0D23;
    tensor[3] camEye0D85#1 = globals.camEye0D26;
    tensor[3] camAt0D87#1 = globals.camAt0D27;
    tensor[3] camUp0D89#1 = globals.camUp0D28;
    real camFOV0D8B#1 = globals.camFOV0D29;
    int iresU0D8D#1 = globals.iresU0D2A;
    int iresV0D8F#1 = globals.iresV0D2B;
    int _t0D91#1 = 0;
    int _t0D93#1 = 1;
    int _t0D95#1 = ExtractFemItem<int,NumCell(Mesh)>(a0D7F);
    int _t0D97#1 = ISub(_t0D95,_t0D93);
    int[] _t0D99#1 = Range(_t0D91,_t0D97);
    femData:MeshCell[] _t0D9B#1 = <femData:MeshCell[]>{};
  FOREACH0D9E:  preds = [ASSIGN0D9C,NEXT0DA4]
    foreach (_t0D9D in _t0D99) on exit goto GASSIGN0DA5
      femData:MeshCell[] _t0DA2#2 = phi(_t0D9B,_t0DA1)
    femData:MeshCell _t0D9F#1 = LoadFem<femData:MeshCell>(a0D7F,_t0D9D);
    femData:MeshCell[] _t0DA1#1 = Append<femData:MeshCell>(_t0DA2,_t0D9F);
    goto FOREACH0D9E
  GASSIGN0DA5:  preds = [FOREACH0D9E]
    globals.0cell_a0D3A = _t0DA2;
    femData:Space b0DA6#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal0D81,a0D7F);
    femData:FemFunc c0DA8#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal0D83,b0DA6);
    globals.c0D3B = c0DA8;
    tensor[3] op1_e3_l_40DAC#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_60DAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40DAC,op1_e3_l_40DAC);
    real op1_e3_l_70DAE#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60DAD);
    real op1_e3_l_90DAF#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70DAE);
    tensor[3] camN0DAB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40DAC,op1_e3_l_90DAF);
    tensor[3,3] op1_e3_l_150DB9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0D89);
    tensor[3] op1_e3_l_170DBB#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40DAC,op1_e3_l_150DB9);
    real op1_e3_l_340DBC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170DBB,op1_e3_l_170DBB);
    real op1_e3_l_350DBD#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90DAF,op1_e3_l_90DAF,op1_e3_l_340DBC);
    real op1_e3_l_360DBE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350DBD);
    tensor[3] op1_e3_l_370DBF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_170DBB);
    real op1_e3_l_380DC0#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360DBE);
    tensor[3] camU0DB5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370DBF,op1_e3_l_380DC0);
    globals.camU0D3C = camU0DB5;
    tensor[3,3] op1_e3_l_450DD8#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40DAC);
    tensor[3] op1_e3_l_470DD9#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170DBB,op1_e3_l_450DD8);
    tensor[3] op1_e3_l_500DDB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_470DD9);
    tensor[3] camV0DCE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380DC0,op1_e3_l_90DAF,op1_e3_l_500DDB);
    globals.camV0D3D = camV0DCE;
    real _t0DEB#1 = 0.314159265358979323846264338327950288e1;
    real _t0DED#1 = 0.36e3;
    real op1_e3_l_50DF0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0D8B,_t0DEB);
    real op1_e3_l_60DF1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0DED,op1_e3_l_50DF0);
    real op1_e3_l_100DF4#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60DF1);
    real camVmax0DEF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100DF4,op1_e3_l_70DAE);
    globals.camVmax0D3E = camVmax0DEF;
    real _t0DFE#1 = IntToReal(iresU0D8D);
    real _t0E00#1 = IntToReal(iresV0D8F);
    real op1_e3_l_140E09#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0DFE,op1_e3_l_100DF4,op1_e3_l_70DAE);
    real camUmax0E02#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0E00,op1_e3_l_140E09);
    globals.camUmax0D3F = camUmax0E02;
    globals.rayVec0D40 = camN0DAB;
    return
## strand
  strand ray (int ui0E15#2, int vi0E16#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0E26:  preds = []
        femData:MeshCell[] 0cell_a0E27#1 = globals.0cell_a0D3A;
        femData:FemFunc c0E29#1 = globals.c0D3B;
        tensor[3] camEye0E2B#1 = globals.camEye0D26;
        int iresU0E2D#2 = globals.iresU0D2A;
        int iresV0E2F#3 = globals.iresV0D2B;
        int[] indecies0E31#2 = globals.indecies0D37;
        tensor[2][] times0E33#1 = globals.times0D38;
        tensor[3] camU0E35#1 = globals.camU0D3C;
        tensor[3] camV0E37#1 = globals.camV0D3D;
        real camVmax0E39#2 = globals.camVmax0D3E;
        real camUmax0E3B#2 = globals.camUmax0D3F;
        real _t0E3D#5 = -0.5e0;
        real _t0E3F#1 = IntToReal(ui0E15);
        real _t0E41#1 = IntToReal(iresU0E2D);
        real _t0E43#3 = 0.5e0;
        real op1_e3_l_60E46#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_70E47#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_80E48#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E46);
        real op1_e3_l_90E49#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_100E4A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E47,op1_e3_l_80E48);
        real op1_e3_l_110E4B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_90E49);
        real op1_e3_l_130E4C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E4A,op1_e3_l_110E4B);
        real rayU0E45#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E49,op1_e3_l_130E4C);
        real _t0E55#1 = IntToReal(vi0E16);
        real _t0E57#2 = IntToReal(iresV0E2F);
        real op1_e3_l_60E5A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E57,_t0E43);
        real op1_e3_l_70E5B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_80E5C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E5A);
        real op1_e3_l_90E5D#3 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_100E5E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_80E5C);
        real op1_e3_l_110E5F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_90E5D);
        real op1_e3_l_130E60#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E5E,op1_e3_l_110E5F);
        real rayV0E59#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_130E60);
        real op1_e3_l_230E72#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E43,_t0E57);
        real op1_e3_l_250E74#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_230E72);
        real op1_e3_l_270E76#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_250E74);
        real op1_e3_l_300E78#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_270E76,op1_e3_l_110E5F);
        real op1_e3_l_310E79#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_300E78);
        tensor[3] op1_e3_l_320E7A#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU0E35,rayU0E45);
        tensor[3] op1_e3_l_330E7B#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV0E37,op1_e3_l_310E79);
        tensor[3] UV0E69#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_320E7A,op1_e3_l_330E7B);
        tensor[3] rayOrig0E8F#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye0E2B,op1_e3_l_320E7A,op1_e3_l_330E7B);
        int _t0EB5#2 = IMul(ui0E15,iresV0E2F);
        int _t0EB7#1 = IAdd(_t0EB5,vi0E16);
        int offset0EB9#2 = Subscript<int[]>(indecies0E31,_t0EB7);
        int _t0EBB#1 = IMul(iresU0E2D,iresV0E2F);
        int _t0EBD#1 = IAdd(_t0EBB,_t0EB5);
        int _t0EBF#1 = IAdd(_t0EBD,vi0E16);
        int len0EC1#1 = Subscript<int[]>(indecies0E31,_t0EBF);
        int itter0EC3#2 = 0;
        int idx0EC5#2 = offset0EB9;
        tensor[2] interval0EC7#3 = Subscript<tensor[2][]>(times0E33,idx0EC5);
        real s0EC9#1 = TensorIndex<tensor[2],[0]>(interval0EC7);
        real e0ECB#1 = TensorIndex<tensor[2],[1]>(interval0EC7);
        femData:MeshCell cc0ECD#2 = Subscript<femData:MeshCell[]>(0cell_a0E27,itter0EC3);
        int _t0ECF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0ECD);
        femData:FuncCell _t0ED1#1 = LoadFem<femData:FuncCell>(c0E29,_t0ECF);
        tensor[2][0] _t0ED3#1 = <tensor[2][0]>{};
        tensor[2][] _t0ED5#1 = MkDynamic<tensor[2],0>(_t0ED3);
        femData:MeshCell[0] _t0ED7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0ED9#1 = MkDynamic<femData:MeshCell,0>(_t0ED7);
        self.rayU = rayU0E45;
        self.rayV = rayV0E59;
        self.UV = UV0E69;
        self.rayOrig = rayOrig0E8F;
        self.offset = offset0EB9;
        self.len = len0EC1;
        self.itter = itter0EC3;
        self.idx = idx0EC5;
        self.interval = interval0EC7;
        self.s = s0EC9;
        self.e = e0ECB;
        self.cc = cc0ECD;
        self.fc = _t0ED1;
        self.intervals = _t0ED5;
        self.newCells = _t0ED9;
        return
    end state init
    method start
        ENTRY0EEB:  preds = []
          femData:MeshCell[] 0cell_a0EEC#1 = globals.0cell_a0D3A;
          femData:FemFunc c0EEE#1 = globals.c0D3B;
          int[] cells0EF0#1 = globals.cells0D39;
          int len0EF2#1 = self.len;
          int idx0EF4#1 = self.idx;
          int _t0EF6#1 = 0;
          bool _t0EF8#1 = EQ<int>(len0EF2,_t0EF6);
          if _t0EF8 then goto STABILIZE0EFB else goto JOIN0EFC
        STABILIZE0EFB:  preds = [COND0EFA]
          stabilize
          goto JOIN0EFC
        JOIN0EFC:  preds = [*STABILIZE0EFB,COND0EFA]
          int _t0EFD#1 = Subscript<int[]>(cells0EF0,idx0EF4);
          femData:MeshCell cc0EFF#2 = Subscript<femData:MeshCell[]>(0cell_a0EEC,_t0EFD);
          int _t0F01#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0EFF);
          femData:FuncCell _t0F03#1 = LoadFem<femData:FuncCell>(c0EEE,_t0F01);
          self.cc = cc0EFF;
          self.fc = _t0F03;
          active
    end start
    method update
        ENTRY0F08:  preds = []
          femData:MeshCell[] 0cell_a0F09#1 = globals.0cell_a0D3A;
          femData:FemFunc c0F0B#1 = globals.c0D3B;
          tensor[2][] times0F0D#1 = globals.times0D38;
          int[] cells0F0F#1 = globals.cells0D39;
          tensor[3] rayVec0F11#4 = globals.rayVec0D40;
          tensor[3] rayOrig0F13#1 = self.rayOrig;
          int offset0F15#1 = self.offset;
          int len0F17#2 = self.len;
          int itter0F19#2 = self.itter;
          tensor[2] interval0F1B#1 = self.interval;
          real s0F1D#5 = self.s;
          real e0F1F#3 = self.e;
          femData:MeshCell cc0F21#5 = self.cc;
          femData:FuncCell fc0F23#3 = self.fc;
          tensor[2][] intervals0F25#2 = self.intervals;
          femData:MeshCell[] newCells0F27#2 = self.newCells;
          int _t0F29#6 = 1;
          bool _t0F2B#1 = LT<int>(len0F17,_t0F29);
          if _t0F2B then goto STABILIZE0F2E else goto JOIN0F2F
        STABILIZE0F2E:  preds = [COND0F2D]
          stabilize
          goto JOIN0F2F
        JOIN0F2F:  preds = [*STABILIZE0F2E,COND0F2D]
          tensor[3] op1_e3_l_30F31#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0F1D,rayVec0F11);
          tensor[3] rayStart0F30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0F13,op1_e3_l_30F31);
          real _t0F34#1 = TensorIndex<tensor[3],[0]>(rayStart0F30);
          real _t0F36#1 = TensorIndex<tensor[3],[1]>(rayStart0F30);
          tensor[2] project0F38#5 = <tensor[2]>[_t0F34,_t0F36];
          femData:FemFunc _t0F3A#5 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0F23);
          femData:Space _t0F3C#4 = ExtractFem<femData:Space,femData:FemFunc>(_t0F3A);
          int _t0F3E#4 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0F23);
          femData:Mesh _t0F40#9 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0F21);
          int _t0F42#6 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0F21);
          real _t0F44#2 = TensorIndex<tensor[3],[2]>(rayStart0F30);
          femData:MeshPos callNewtonPos103D#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos103E#10 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos103D);
          int[6] femIndicies1040#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs1041#3 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies1040);
          tensor[6] basisResult1042#1 = EvaluateBasis<BasisArray(6)>(refPos103E);
          real compositionl0F48#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult1042,refPos103E);
          real f00F46#5 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl0F48);
          real _t104C#1 = TensorIndex<tensor[3],[0]>(rayVec0F11);
          real _t104E#1 = TensorIndex<tensor[3],[1]>(rayVec0F11);
          tensor[2] _t1050#2 = <tensor[2]>[_t104C,_t104E];
          real _t1052#2 = TensorIndex<tensor[3],[2]>(rayVec0F11);
          int _t1054#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0F21);
          real _t1056#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0F40,_t1054);
          tensor[2,6] basisResult106C#1 = EvaluateBasis<BasisArray(2,6)>(refPos103E);
          tensor[2] compositionl105A#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult106C,refPos103E);
          int[3] femIndicies106E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t0F40,_t0F42);
          tensor[3,2] femDofs106F#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t0F40,femIndicies106E);
          tensor[2,3] basisResult1070#3 = EvaluateBasis<BasisArray(2,3)>(refPos103E);
          tensor[2,2] probe_l_11105B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2,2] op1_e3_l_12105C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_11105B);
          tensor[2] probe_l_13105D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] probe_l_14105E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] op1_e3_l_15105F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_14105E);
          tensor[2,2] op1_e3_l_161060#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_12105C);
          real op1_e3_l_171061#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_13105D,op1_e3_l_15105F);
          tensor[2,2] op1_e3_l_181062#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_161060,op1_e3_l_171061);
          tensor[2] op1_e3_l_191063#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl105A,op1_e3_l_181062);
          real op1_e3_l_201064#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1050,op1_e3_l_191063);
          real op1_e3_l_211065#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1052,op1_e3_l_201064);
          real op1_e3_l_221066#1 = λ(T0[])<Abs(T0)> (op1_e3_l_211065);
          real _t1058#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1056,op1_e3_l_221066);
          real _t1092#1 = λ(T0[],T1[])<(T0) - (T1)> (e0F1F,s0F1D);
          real gradEps1094#6 = Min<real>(_t1058,_t1092);
          tensor[2] op1_e3_l_31097#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps1094,_t1050);
          tensor[2] _t1096#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0F38,op1_e3_l_31097);
          femData:MeshPos callNewtonPos109F#1 = _0994_msh_newtonInverse0F49 (_t1096,_t0F42,_t0F40);
          tensor[2] refPos10A0#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos109F);
          tensor[6] basisResult10A4#1 = EvaluateBasis<BasisArray(6)>(refPos10A0);
          real compositionl109C#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos10A0,femDofs1041,basisResult10A4,refPos10A0);
          real op1_e3_l_11109D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl109C);
          real op1_e3_l_12109E#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps1094,_t1052);
          real f1109A#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_11109D,op1_e3_l_12109E);
          string _t10B0#1 = "vals:";
          tensor[2] _t10B2#2 = <tensor[2]>[f00F46,f1109A];
          string _t10B4#6 = "\n";
          Print<[string,tensor[2],string]>(_t10B0,_t10B2,_t10B4);
          real _t10B7#6 = 0.e0;
          bool _t10B9#2 = GT<real>(f00F46,_t10B7);
          if _t10B9 then goto JOIN10BE else goto ASSIGN1162
        JOIN10BE:  preds = [COND10BB,JOIN1167]
          int _t10BC#1 = phi(_t0F29,_t10BD)
          bool _t10BF#2 = GT<real>(f1109A,_t10B7);
          if _t10BF then goto JOIN10C4 else goto ASSIGN115A
        JOIN10C4:  preds = [COND10C1,JOIN115F]
          int _t10C2#1 = phi(_t0F29,_t10C3)
          int _t10C5#1 = IMul(_t10BC,_t10C2);
          int _t10C7#4 = 0;
          bool _t10C9#1 = GT<int>(_t10C5,_t10C7);
          bool _t10CB#1 = BNot(_t10C9);
          if _t10CB then goto COND10CE else goto ASSIGN1135
        COND10CE:  preds = [COND10CD]
          if _t10B9 then goto JOIN10D1 else goto ASSIGN112F
        JOIN10D1:  preds = [COND10CE,JOIN1133]
          int _t10CF#1 = phi(_t0F29,_t10D0)
          if _t10BF then goto JOIN10D5 else goto ASSIGN1129
        JOIN10D5:  preds = [COND10D2,JOIN112D]
          int _t10D3#1 = phi(_t0F29,_t10D4)
          int _t10D6#1 = IMul(_t10CF,_t10D3);
          bool _t10D8#1 = EQ<int>(_t10D6,_t10C7);
          if _t10D8 then goto ASSIGN10DC else goto JOIN10DE
        ASSIGN10DC:  preds = [COND10DA]
          string _t10DB#1 = "Warn: 0 update\n";
          Print<[string]>(_t10DB);
          goto JOIN10DE
        JOIN10DE:  preds = [MASSIGN10DD,COND10DA]
          string _t10DF#1 = "update with interval:";
          Print<[string,real,string]>(_t10DF,gradEps1094,_t10B4);
          string _t10E2#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t10E2,_t10B2,_t10B4);
          string _t10E5#1 = "New interval:";
          real _t10E7#2 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,gradEps1094);
          tensor[2] _t10E9#2 = <tensor[2]>[s0F1D,_t10E7];
          Print<[string,tensor[2],string]>(_t10E5,_t10E9,_t10B4);
          tensor[2][] intervals10EC#1 = Append<tensor[2]>(intervals0F25,_t10E9);
          femData:MeshCell[] newCells10EE#1 = Append<femData:MeshCell>(newCells0F27,cc0F21);
          goto JOIN10F4
        JOIN10F4:  preds = [ASSIGN10EF,ASSIGN1158]
          femData:MeshCell[] newCells10F0#2 = phi(newCells10EE,newCells0F27)
          tensor[2][] intervals10F1#2 = phi(intervals10EC,intervals0F25)
          real s10F2#3 = phi(_t10E7,s10F3)
          bool _t10F5#1 = GTE<real>(s10F2,e0F1F);
          if _t10F5 then goto ASSIGN10F9 else goto JOIN1113
        ASSIGN10F9:  preds = [COND10F7]
          int itter10F8#4 = IAdd(itter0F19,_t0F29);
          bool _t10FA#1 = GTE<int>(itter10F8,len0F17);
          if _t10FA then goto SAVE10FD else goto ASSIGN111E
        SAVE10FD:  preds = [COND10FC]
          self.itter = itter10F8;
          self.s = s10F2;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          stabilize
          goto JOIN110C
        JOIN110C:  preds = [*STABILIZE1101,ASSIGN1127]
          femData:FuncCell fc1102#1 = phi(_t1103)
          femData:MeshCell cc1104#1 = phi(cc1105)
          real e1106#1 = phi(e1107)
          real s1108#1 = phi(s1109)
          tensor[2] interval110A#1 = phi(interval110B)
          goto JOIN1113
        JOIN1113:  preds = [JOIN110C,COND10F7]
          femData:FuncCell fc110D#1 = phi(fc1102,fc0F23)
          femData:MeshCell cc110E#1 = phi(cc1104,cc0F21)
          real e110F#1 = phi(e1106,e0F1F)
          real s1110#1 = phi(s1108,s10F2)
          tensor[2] interval1111#1 = phi(interval110A,interval0F1B)
          int itter1112#1 = phi(itter10F8,itter0F19)
          self.itter = itter1112;
          self.interval = interval1111;
          self.s = s1110;
          self.e = e110F;
          self.cc = cc110E;
          self.fc = fc110D;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          active
        ASSIGN111E:  preds = [COND10FC]
          int _t111D#2 = IAdd(offset0F15,itter10F8);
          tensor[2] interval110B#3 = Subscript<tensor[2][]>(times0F0D,_t111D);
          int _t1120#1 = Subscript<int[]>(cells0F0F,_t111D);
          femData:MeshCell cc1105#2 = Subscript<femData:MeshCell[]>(0cell_a0F09,_t1120);
          real s1109#1 = TensorIndex<tensor[2],[0]>(interval110B);
          real e1107#1 = TensorIndex<tensor[2],[1]>(interval110B);
          int _t1125#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1105);
          femData:FuncCell _t1103#1 = LoadFem<femData:FuncCell>(c0F0B,_t1125);
          goto JOIN110C
        ASSIGN1129:  preds = [COND10D2]
          bool _t1128#1 = LT<real>(f1109A,_t10B7);
          if _t1128 then goto ASSIGN112C else goto JOIN112D
        ASSIGN112C:  preds = [COND112A]
          int _t112B#1 = -1;
          goto JOIN112D
        JOIN112D:  preds = [ASSIGN112C,COND112A]
          int _t10D4#1 = phi(_t112B,_t10C7)
          goto JOIN10D5
        ASSIGN112F:  preds = [COND10CE]
          bool _t112E#1 = LT<real>(f00F46,_t10B7);
          if _t112E then goto ASSIGN1132 else goto JOIN1133
        ASSIGN1132:  preds = [COND1130]
          int _t1131#1 = -1;
          goto JOIN1133
        JOIN1133:  preds = [ASSIGN1132,COND1130]
          int _t10D0#1 = phi(_t1131,_t10C7)
          goto JOIN10D1
        ASSIGN1135:  preds = [COND10CD]
          real _t1134#1 = 0.2e1;
          real _t1136#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0F40,_t1054);
          real op1_e3_l_12113C#1 = λ(T0[])<Abs(T0)> (f00F46);
          real op1_e3_l_13113D#1 = λ(T0[],T1[])<(T0 * T1)> (_t1134,_t1136);
          real _t1138#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_12113C,op1_e3_l_13113D);
          real epsUpdate1150#2 = Max<real>(gradEps1094,_t1138);
          string _t1152#1 = "update L:";
          Print<[string,real,string]>(_t1152,epsUpdate1150,_t10B4);
          string _t1155#1 = "update G:";
          Print<[string,real,string]>(_t1155,gradEps1094,_t10B4);
          real s10F3#1 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,epsUpdate1150);
          goto JOIN10F4
        ASSIGN115A:  preds = [COND10C1]
          bool _t1159#1 = LT<real>(f1109A,_t10B7);
          if _t1159 then goto ASSIGN115D else goto ASSIGN1160
        ASSIGN115D:  preds = [COND115B]
          int _t115C#1 = -1;
          goto JOIN115F
        JOIN115F:  preds = [ASSIGN115D,ASSIGN1160]
          int _t10C3#1 = phi(_t115C,_t115E)
          goto JOIN10C4
        ASSIGN1160:  preds = [COND115B]
          int _t115E#1 = 0;
          goto JOIN115F
        ASSIGN1162:  preds = [COND10BB]
          bool _t1161#1 = LT<real>(f00F46,_t10B7);
          if _t1161 then goto ASSIGN1165 else goto ASSIGN1168
        ASSIGN1165:  preds = [COND1163]
          int _t1164#1 = -1;
          goto JOIN1167
        JOIN1167:  preds = [ASSIGN1165,ASSIGN1168]
          int _t10BD#1 = phi(_t1164,_t1166)
          goto JOIN10BE
        ASSIGN1168:  preds = [COND1163]
          int _t1166#1 = 0;
          goto JOIN1167
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1169:  preds = []
      int iresU116A#1 = globals.iresU0D2A;
      int iresV116C#1 = globals.iresV0D2B;
      int _t116E#2 = 0;
      int _t1170#2 = 1;
      int _t1172#1 = ISub(iresU116A,_t1170);
      int[] _t1174#1 = Range(_t116E,_t1172);
    FOREACH1177:  preds = [ASSIGN1175,NEXT1180]
      foreach (vi1176 in _t1174) on exit goto RETURN1181
      int _t1178#1 = ISub(iresV116C,_t1170);
      int[] _t117A#1 = Range(_t116E,_t1178);
    FOREACH117D:  preds = [ASSIGN117B,NEXT117F]
      foreach (ui117C in _t117A) on exit goto NEXT1180
      new ray(ui117C,vi1176);
      goto FOREACH117D
    NEXT1180:  preds = [FOREACH117D]
      goto FOREACH1177
    RETURN1181:  preds = [FOREACH1177]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a0D21 (a) = <no-default>
  input 0b0412_intermedateGlobal0D22 (b) = <no-default>
  input 0c0414_intermedateGlobal0D23 (c) = <no-default>
  input isoval0D24 (isoval) = <default>
  input thick0D25 (thick) = <default>
  input camEye0D26 (camEye) = <default>
  input camAt0D27 (camAt) = <default>
  input camUp0D28 (camUp) = <default>
  input camFOV0D29 (camFOV) = <default>
  input iresU0D2A (iresU) = <default>
  input iresV0D2B (iresV) = <default>
  input camNear0D2C (camNear) = <default>
  input camFar0D2D (camFar) = <default>
  input refStep0D2E (refStep) = <default>
  input rayStep0D2F (rayStep) = <default>
  input lightVsp0D30 (lightVsp) = <default>
  input phongKa0D31 (phongKa) = <default>
  input phongKd0D32 (phongKd) = <default>
  input debug0D33 (debug) = <default>
  input debugU0D34 (debugU) = <default>
  input debugV0D35 (debugV) = <default>
  input eps0D36 (eps) = <default>
  input indecies0D37 (indecies) = <no-default>
  input times0D38 (times) = <no-default>
  input cells0D39 (cells) = <no-default>
  global femData:MeshCell[] 0cell_a0D3A
  global femData:FemFunc c0D3B
  global tensor[3] camU0D3C
  global tensor[3] camV0D3D
  global real camVmax0D3E
  global real camUmax0D3F
  global tensor[3] rayVec0D40
## functions
  function femData:MeshPos _0994_msh_newtonInverse0F49 (tensor[2] pos0F4A#3, int cellInt0F4B#7, femData:Mesh mesh0F4C#10) {
    ENTRY0F4D:  preds = []
      real _t0F4E#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn0F50#8 = <tensor[2]>[_t0F4E,_t0F4E];
      int _t0F52#1 = 0;
      int _t0F54#1 = 16;
      int[] _t0F56#1 = Range(_t0F52,_t0F54);
    FOREACH0F59:  preds = [ASSIGN0F57,NEXT1036]
      foreach (itter0F58 in _t0F56) on exit goto ASSIGN103B
        tensor[2] xn0F5B#6 = phi(xn0F50,xn0F5A)
      int[3] femIndicies0F68#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh0F4C,cellInt0F4B);
      tensor[3,2] femDofs0F69#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh0F4C,femIndicies0F68);
      tensor[2,3] basisResult0F6A#3 = EvaluateBasis<BasisArray(2,3)>(xn0F50);
      tensor[2,2] probe_l_100F5C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2,2] op1_e3_l_110F5D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_100F5C);
      tensor[2] probe_l_120F5E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] probe_l_130F5F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F50,femDofs0F69,basisResult0F6A,xn0F50);
      tensor[2] op1_e3_l_140F60#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_130F5F);
      tensor[2,2] op1_e3_l_150F61#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_110F5D);
      real op1_e3_l_160F62#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_120F5E,op1_e3_l_140F60);
      tensor[3] basisResult0F70#2 = EvaluateBasis<BasisArray(3)>(xn0F5B);
      tensor[2] probe_l_170F63#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn0F5B,cellInt0F4B,mesh0F4C,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2,2] op1_e3_l_180F64#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_150F61,op1_e3_l_160F62);
      tensor[2] op1_e3_l_190F65#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_170F63);
      tensor[2] op1_e3_l_200F66#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_190F65);
      tensor[2] xn0F5A#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn0F5B,op1_e3_l_200F66);
      real _t0F87#2 = 0.1e-7;
      real _t0F89#1 = λ(T0[],T1[])<(T0 * T1)> (_t0F87,_t0F87);
      tensor[2] probe_l_250F93#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt0F4B,mesh0F4C,xn0F5B,femDofs0F69,basisResult0F70,xn0F5B);
      tensor[2] op1_e3_l_270F95#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos0F4A,probe_l_250F93);
      tensor[2] op1_e3_l_380F96#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_180F64,op1_e3_l_270F95);
      real _t0F8B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_380F96,op1_e3_l_380F96);
      bool _t0FB7#1 = GTE<real>(_t0F89,_t0F8B);
      if _t0FB7 then goto ASSIGN0FBB else goto JOIN1035
    ASSIGN0FBB:  preds = [COND0FB9]
      real _t0FBA#3 = 0.1e1;
      real _t0FBC#3 = 0.1e-8;
      real _t0FBE#1 = λ(T0[],T1[])<(T0 + T1)> (_t0FBA,_t0FBC);
      tensor[2] _t0FC0#1 = <tensor[2]>[_t0FBA,_t0FBA];
      real _t0FC2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t0FC0,xn0F5A);
      bool _t0FF0#1 = GT<real>(_t0FBE,_t0FC2);
      tensor[2] _t0FF2#1 = <tensor[2]>[_t0FBC,_t0FBC];
      tensor[2] _t0FF4#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t0FF2,xn0F5A);
      real _t1022#1 = TensorIndex<tensor[2],[0]>(_t0FF4);
      real _t1024#2 = -0.e0;
      bool _t1026#1 = GT<real>(_t1022,_t1024);
      real _t1028#1 = TensorIndex<tensor[2],[1]>(_t0FF4);
      bool _t102A#1 = GT<real>(_t1028,_t1024);
      bool _t102C#1 = BAnd(_t1026,_t102A);
      bool _t102E#1 = BAnd(_t0FF0,_t102C);
      if _t102E then goto ASSIGN1032 else goto ASSIGN1038
    ASSIGN1032:  preds = [COND1030]
      femData:MeshPos _t1031#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh0F4C,cellInt0F4B,xn0F5A,pos0F4A);
      return _t1031
      goto JOIN1034
    JOIN1034:  preds = [*RETURN(_t1031)1033,*RETURN(_t1037)1039]
      goto JOIN1035
    JOIN1035:  preds = [*JOIN1034,COND0FB9]
      goto FOREACH0F59
    ASSIGN1038:  preds = [COND1030]
      femData:MeshPos _t1037#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t1037
      goto JOIN1034
    ASSIGN103B:  preds = [FOREACH0F59]
      femData:MeshPos _t103A#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh0F4C);
      return _t103A
}
## input initialization
  ENTRY0D41:  preds = []
    real isoval0D42#1 = 0.2e0;
    globals.isoval0D24 = isoval0D42;
    real thick0D45#1 = 0.7e-1;
    globals.thick0D25 = thick0D45;
    real _t0D48#1 = -0.5e0;
    real _t0D4A#5 = 0.5e0;
    tensor[3] camEye0D4C#1 = <tensor[3]>[_t0D48,_t0D4A,_t0D4A];
    globals.camEye0D26 = camEye0D4C;
    tensor[3] camAt0D4F#1 = <tensor[3]>[_t0D4A,_t0D4A,_t0D4A];
    globals.camAt0D27 = camAt0D4F;
    real _t0D52#2 = 0.e0;
    real _t0D54#2 = 0.1e1;
    tensor[3] camUp0D56#2 = <tensor[3]>[_t0D52,_t0D52,_t0D54];
    globals.camUp0D28 = camUp0D56;
    real camFOV0D59#1 = 0.137e2;
    globals.camFOV0D29 = camFOV0D59;
    int iresU0D5C#2 = 10;
    globals.iresU0D2A = iresU0D5C;
    globals.iresV0D2B = iresU0D5C;
    real camNear0D60#1 = -0.2e1;
    globals.camNear0D2C = camNear0D60;
    real camFar0D63#1 = 0.5e1;
    globals.camFar0D2D = camFar0D63;
    globals.refStep0D2E = _t0D54;
    real rayStep0D67#1 = 0.1e-1;
    globals.rayStep0D2F = rayStep0D67;
    globals.lightVsp0D30 = camUp0D56;
    real phongKa0D6B#1 = 0.1e0;
    globals.phongKa0D31 = phongKa0D6B;
    real phongKd0D6E#1 = 0.9e0;
    globals.phongKd0D32 = phongKd0D6E;
    bool debug0D71#1 = false;
    globals.debug0D33 = debug0D71;
    int debugU0D74#1 = 8;
    globals.debugU0D34 = debugU0D74;
    int debugV0D77#1 = 2;
    globals.debugV0D35 = debugV0D77;
    real eps0D7A#1 = 0.1e-8;
    globals.eps0D36 = eps0D7A;
    return
## global-variable initialization
  ENTRY0D7E:  preds = []
    femData:Mesh a0D7F#3 = globals.a0D21;
    femData:Space 0b0412_intermedateGlobal0D81#1 = globals.0b0412_intermedateGlobal0D22;
    femData:FemFunc 0c0414_intermedateGlobal0D83#1 = globals.0c0414_intermedateGlobal0D23;
    tensor[3] camEye0D85#1 = globals.camEye0D26;
    tensor[3] camAt0D87#1 = globals.camAt0D27;
    tensor[3] camUp0D89#1 = globals.camUp0D28;
    real camFOV0D8B#1 = globals.camFOV0D29;
    int iresU0D8D#1 = globals.iresU0D2A;
    int iresV0D8F#1 = globals.iresV0D2B;
    int _t0D91#1 = 0;
    int _t0D93#1 = 1;
    int _t0D95#1 = ExtractFemItem<int,NumCell(Mesh)>(a0D7F);
    int _t0D97#1 = ISub(_t0D95,_t0D93);
    int[] _t0D99#1 = Range(_t0D91,_t0D97);
    femData:MeshCell[] _t0D9B#1 = <femData:MeshCell[]>{};
  FOREACH0D9E:  preds = [ASSIGN0D9C,NEXT0DA4]
    foreach (_t0D9D in _t0D99) on exit goto GASSIGN0DA5
      femData:MeshCell[] _t0DA2#2 = phi(_t0D9B,_t0DA1)
    femData:MeshCell _t0D9F#1 = LoadFem<femData:MeshCell>(a0D7F,_t0D9D);
    femData:MeshCell[] _t0DA1#1 = Append<femData:MeshCell>(_t0DA2,_t0D9F);
    goto FOREACH0D9E
  GASSIGN0DA5:  preds = [FOREACH0D9E]
    globals.0cell_a0D3A = _t0DA2;
    femData:Space b0DA6#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal0D81,a0D7F);
    femData:FemFunc c0DA8#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal0D83,b0DA6);
    globals.c0D3B = c0DA8;
    tensor[3] op1_e3_l_40DAC#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt0D87,camEye0D85);
    real op1_e3_l_60DAD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_40DAC,op1_e3_l_40DAC);
    real op1_e3_l_70DAE#3 = λ(T0[])<Sqrt(T0)> (op1_e3_l_60DAD);
    real op1_e3_l_90DAF#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_70DAE);
    tensor[3] camN0DAB#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_40DAC,op1_e3_l_90DAF);
    tensor[3,3] op1_e3_l_150DB9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp0D89);
    tensor[3] op1_e3_l_170DBB#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_40DAC,op1_e3_l_150DB9);
    real op1_e3_l_340DBC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_170DBB,op1_e3_l_170DBB);
    real op1_e3_l_350DBD#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_90DAF,op1_e3_l_90DAF,op1_e3_l_340DBC);
    real op1_e3_l_360DBE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_350DBD);
    tensor[3] op1_e3_l_370DBF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_170DBB);
    real op1_e3_l_380DC0#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_360DBE);
    tensor[3] camU0DB5#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_370DBF,op1_e3_l_380DC0);
    globals.camU0D3C = camU0DB5;
    tensor[3,3] op1_e3_l_450DD8#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_40DAC);
    tensor[3] op1_e3_l_470DD9#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_170DBB,op1_e3_l_450DD8);
    tensor[3] op1_e3_l_500DDB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_90DAF,op1_e3_l_470DD9);
    tensor[3] camV0DCE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_380DC0,op1_e3_l_90DAF,op1_e3_l_500DDB);
    globals.camV0D3D = camV0DCE;
    real _t0DEB#1 = 0.314159265358979323846264338327950288e1;
    real _t0DED#1 = 0.36e3;
    real op1_e3_l_50DF0#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV0D8B,_t0DEB);
    real op1_e3_l_60DF1#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0DED,op1_e3_l_50DF0);
    real op1_e3_l_100DF4#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_60DF1);
    real camVmax0DEF#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100DF4,op1_e3_l_70DAE);
    globals.camVmax0D3E = camVmax0DEF;
    real _t0DFE#1 = IntToReal(iresU0D8D);
    real _t0E00#1 = IntToReal(iresV0D8F);
    real op1_e3_l_140E09#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t0DFE,op1_e3_l_100DF4,op1_e3_l_70DAE);
    real camUmax0E02#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t0E00,op1_e3_l_140E09);
    globals.camUmax0D3F = camUmax0E02;
    globals.rayVec0D40 = camN0DAB;
    return
## strand
  strand ray (int ui0E15#2, int vi0E16#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY0E26:  preds = []
        femData:MeshCell[] 0cell_a0E27#1 = globals.0cell_a0D3A;
        femData:FemFunc c0E29#1 = globals.c0D3B;
        tensor[3] camEye0E2B#1 = globals.camEye0D26;
        int iresU0E2D#2 = globals.iresU0D2A;
        int iresV0E2F#3 = globals.iresV0D2B;
        int[] indecies0E31#2 = globals.indecies0D37;
        tensor[2][] times0E33#1 = globals.times0D38;
        tensor[3] camU0E35#1 = globals.camU0D3C;
        tensor[3] camV0E37#1 = globals.camV0D3D;
        real camVmax0E39#2 = globals.camVmax0D3E;
        real camUmax0E3B#2 = globals.camUmax0D3F;
        real _t0E3D#5 = -0.5e0;
        real _t0E3F#1 = IntToReal(ui0E15);
        real _t0E41#1 = IntToReal(iresU0E2D);
        real _t0E43#3 = 0.5e0;
        real op1_e3_l_60E46#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E41,_t0E43);
        real op1_e3_l_70E47#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E3F);
        real op1_e3_l_80E48#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E46);
        real op1_e3_l_90E49#2 = λ(T0[])<Neg(T0)> (camUmax0E3B);
        real op1_e3_l_100E4A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E47,op1_e3_l_80E48);
        real op1_e3_l_110E4B#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax0E3B,op1_e3_l_90E49);
        real op1_e3_l_130E4C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E4A,op1_e3_l_110E4B);
        real rayU0E45#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E49,op1_e3_l_130E4C);
        real _t0E55#1 = IntToReal(vi0E16);
        real _t0E57#2 = IntToReal(iresV0E2F);
        real op1_e3_l_60E5A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t0E57,_t0E43);
        real op1_e3_l_70E5B#2 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,_t0E55);
        real op1_e3_l_80E5C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_60E5A);
        real op1_e3_l_90E5D#3 = λ(T0[])<Neg(T0)> (camVmax0E39);
        real op1_e3_l_100E5E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_80E5C);
        real op1_e3_l_110E5F#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax0E39,op1_e3_l_90E5D);
        real op1_e3_l_130E60#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_100E5E,op1_e3_l_110E5F);
        real rayV0E59#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_130E60);
        real op1_e3_l_230E72#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E43,_t0E57);
        real op1_e3_l_250E74#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0E3D,op1_e3_l_230E72);
        real op1_e3_l_270E76#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_70E5B,op1_e3_l_250E74);
        real op1_e3_l_300E78#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_270E76,op1_e3_l_110E5F);
        real op1_e3_l_310E79#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_90E5D,op1_e3_l_300E78);
        tensor[3] op1_e3_l_320E7A#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU0E35,rayU0E45);
        tensor[3] op1_e3_l_330E7B#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV0E37,op1_e3_l_310E79);
        tensor[3] UV0E69#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_320E7A,op1_e3_l_330E7B);
        tensor[3] rayOrig0E8F#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye0E2B,op1_e3_l_320E7A,op1_e3_l_330E7B);
        int _t0EB5#2 = IMul(ui0E15,iresV0E2F);
        int _t0EB7#1 = IAdd(_t0EB5,vi0E16);
        int offset0EB9#2 = Subscript<int[]>(indecies0E31,_t0EB7);
        int _t0EBB#1 = IMul(iresU0E2D,iresV0E2F);
        int _t0EBD#1 = IAdd(_t0EBB,_t0EB5);
        int _t0EBF#1 = IAdd(_t0EBD,vi0E16);
        int len0EC1#1 = Subscript<int[]>(indecies0E31,_t0EBF);
        int itter0EC3#2 = 0;
        int idx0EC5#2 = offset0EB9;
        tensor[2] interval0EC7#3 = Subscript<tensor[2][]>(times0E33,idx0EC5);
        real s0EC9#1 = TensorIndex<tensor[2],[0]>(interval0EC7);
        real e0ECB#1 = TensorIndex<tensor[2],[1]>(interval0EC7);
        femData:MeshCell cc0ECD#2 = Subscript<femData:MeshCell[]>(0cell_a0E27,itter0EC3);
        int _t0ECF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0ECD);
        femData:FuncCell _t0ED1#1 = LoadFem<femData:FuncCell>(c0E29,_t0ECF);
        tensor[2][0] _t0ED3#1 = <tensor[2][0]>{};
        tensor[2][] _t0ED5#1 = MkDynamic<tensor[2],0>(_t0ED3);
        femData:MeshCell[0] _t0ED7#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t0ED9#1 = MkDynamic<femData:MeshCell,0>(_t0ED7);
        self.rayU = rayU0E45;
        self.rayV = rayV0E59;
        self.UV = UV0E69;
        self.rayOrig = rayOrig0E8F;
        self.offset = offset0EB9;
        self.len = len0EC1;
        self.itter = itter0EC3;
        self.idx = idx0EC5;
        self.interval = interval0EC7;
        self.s = s0EC9;
        self.e = e0ECB;
        self.cc = cc0ECD;
        self.fc = _t0ED1;
        self.intervals = _t0ED5;
        self.newCells = _t0ED9;
        return
    end state init
    method start
        ENTRY0EEB:  preds = []
          femData:MeshCell[] 0cell_a0EEC#1 = globals.0cell_a0D3A;
          femData:FemFunc c0EEE#1 = globals.c0D3B;
          int[] cells0EF0#1 = globals.cells0D39;
          int len0EF2#1 = self.len;
          int idx0EF4#1 = self.idx;
          int _t0EF6#1 = 0;
          bool _t0EF8#1 = EQ<int>(len0EF2,_t0EF6);
          if _t0EF8 then goto STABILIZE0EFB else goto JOIN0EFC
        STABILIZE0EFB:  preds = [COND0EFA]
          stabilize
          goto JOIN0EFC
        JOIN0EFC:  preds = [*STABILIZE0EFB,COND0EFA]
          int _t0EFD#1 = Subscript<int[]>(cells0EF0,idx0EF4);
          femData:MeshCell cc0EFF#2 = Subscript<femData:MeshCell[]>(0cell_a0EEC,_t0EFD);
          int _t0F01#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0EFF);
          femData:FuncCell _t0F03#1 = LoadFem<femData:FuncCell>(c0EEE,_t0F01);
          self.cc = cc0EFF;
          self.fc = _t0F03;
          active
    end start
    method update
        ENTRY0F08:  preds = []
          femData:MeshCell[] 0cell_a0F09#1 = globals.0cell_a0D3A;
          femData:FemFunc c0F0B#1 = globals.c0D3B;
          tensor[2][] times0F0D#1 = globals.times0D38;
          int[] cells0F0F#1 = globals.cells0D39;
          tensor[3] rayVec0F11#4 = globals.rayVec0D40;
          tensor[3] rayOrig0F13#1 = self.rayOrig;
          int offset0F15#1 = self.offset;
          int len0F17#2 = self.len;
          int itter0F19#2 = self.itter;
          tensor[2] interval0F1B#1 = self.interval;
          real s0F1D#5 = self.s;
          real e0F1F#3 = self.e;
          femData:MeshCell cc0F21#5 = self.cc;
          femData:FuncCell fc0F23#3 = self.fc;
          tensor[2][] intervals0F25#2 = self.intervals;
          femData:MeshCell[] newCells0F27#2 = self.newCells;
          int _t0F29#6 = 1;
          bool _t0F2B#1 = LT<int>(len0F17,_t0F29);
          if _t0F2B then goto STABILIZE0F2E else goto JOIN0F2F
        STABILIZE0F2E:  preds = [COND0F2D]
          stabilize
          goto JOIN0F2F
        JOIN0F2F:  preds = [*STABILIZE0F2E,COND0F2D]
          tensor[3] op1_e3_l_30F31#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (s0F1D,rayVec0F11);
          tensor[3] rayStart0F30#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig0F13,op1_e3_l_30F31);
          real _t0F34#1 = TensorIndex<tensor[3],[0]>(rayStart0F30);
          real _t0F36#1 = TensorIndex<tensor[3],[1]>(rayStart0F30);
          tensor[2] project0F38#5 = <tensor[2]>[_t0F34,_t0F36];
          femData:FemFunc _t0F3A#5 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc0F23);
          femData:Space _t0F3C#4 = ExtractFem<femData:Space,femData:FemFunc>(_t0F3A);
          int _t0F3E#4 = ExtractFemItem<int,CellIndex(FuncCell)>(fc0F23);
          femData:Mesh _t0F40#9 = ExtractFem<femData:Mesh,femData:MeshCell>(cc0F21);
          int _t0F42#6 = ExtractFemItem<int,CellIndex(MeshCell)>(cc0F21);
          real _t0F44#2 = TensorIndex<tensor[3],[2]>(rayStart0F30);
          femData:MeshPos callNewtonPos103D#1 = _0994_msh_newtonInverse0F49 (project0F38,_t0F42,_t0F40);
          tensor[2] refPos103E#10 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos103D);
          int[6] femIndicies1040#1 = ExtractFemItem2<int,int[6],ExtractIndices(Space)>(_t0F3C,_t0F3E);
          tensor[6] femDofs1041#3 = ExtractFemItem2<int[6],tensor[6],ExtractDofsSeq(FemFunc)>(_t0F3A,femIndicies1040);
          tensor[6] basisResult1042#1 = EvaluateBasis<BasisArray(6)>(refPos103E);
          real compositionl0F48#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult1042,refPos103E);
          real f00F46#5 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl0F48);
          real _t104C#1 = TensorIndex<tensor[3],[0]>(rayVec0F11);
          real _t104E#1 = TensorIndex<tensor[3],[1]>(rayVec0F11);
          tensor[2] _t1050#2 = <tensor[2]>[_t104C,_t104E];
          real _t1052#2 = TensorIndex<tensor[3],[2]>(rayVec0F11);
          int _t1054#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc0F21);
          real _t1056#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t0F40,_t1054);
          tensor[2,6] basisResult106C#1 = EvaluateBasis<BasisArray(2,6)>(refPos103E);
          tensor[2] compositionl105A#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[2 6],T6[2])<Σ(i2=0..5)<((T4_{i2} * T5_{i0,i2}))>(i2=0..5)>_{2} (_t0F3E,_t0F3C,_t0F3A,refPos103E,femDofs1041,basisResult106C,refPos103E);
          int[3] femIndicies106E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t0F40,_t0F42);
          tensor[3,2] femDofs106F#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t0F40,femIndicies106E);
          tensor[2,3] basisResult1070#3 = EvaluateBasis<BasisArray(2,3)>(refPos103E);
          tensor[2,2] probe_l_11105B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2,2] op1_e3_l_12105C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_11105B);
          tensor[2] probe_l_13105D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] probe_l_14105E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t0F42,_t0F40,project0F38,femDofs106F,basisResult1070,refPos103E);
          tensor[2] op1_e3_l_15105F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_14105E);
          tensor[2,2] op1_e3_l_161060#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_12105C);
          real op1_e3_l_171061#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_13105D,op1_e3_l_15105F);
          tensor[2,2] op1_e3_l_181062#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_161060,op1_e3_l_171061);
          tensor[2] op1_e3_l_191063#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T0_{i1} * T1_{i1,i0}))>(i1=0..1)>_{2} (compositionl105A,op1_e3_l_181062);
          real op1_e3_l_201064#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1050,op1_e3_l_191063);
          real op1_e3_l_211065#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1052,op1_e3_l_201064);
          real op1_e3_l_221066#1 = λ(T0[])<Abs(T0)> (op1_e3_l_211065);
          real _t1058#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t1056,op1_e3_l_221066);
          real _t1092#1 = λ(T0[],T1[])<(T0) - (T1)> (e0F1F,s0F1D);
          real gradEps1094#6 = Min<real>(_t1058,_t1092);
          tensor[2] op1_e3_l_31097#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (gradEps1094,_t1050);
          tensor[2] _t1096#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (project0F38,op1_e3_l_31097);
          femData:MeshPos callNewtonPos109F#1 = _0994_msh_newtonInverse0F49 (_t1096,_t0F42,_t0F40);
          tensor[2] refPos10A0#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos109F);
          tensor[6] basisResult10A4#1 = EvaluateBasis<BasisArray(6)>(refPos10A0);
          real compositionl109C#1 = λ(INT0,FEM(fns)1,FEM(func)2,T3[2],T4[6],T5[6],T6[2])<Σ(i0=0..5)<((T4_{i0} * T5_{i0}))>(i0=0..5)> (_t0F3E,_t0F3C,_t0F3A,refPos10A0,femDofs1041,basisResult10A4,refPos10A0);
          real op1_e3_l_11109D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t0F44,compositionl109C);
          real op1_e3_l_12109E#1 = λ(T0[],T1[])<(T0 * T1)> (gradEps1094,_t1052);
          real f1109A#4 = λ(T0[],T1[])<(T0) - (T1)> (op1_e3_l_11109D,op1_e3_l_12109E);
          string _t10B0#1 = "vals:";
          tensor[2] _t10B2#2 = <tensor[2]>[f00F46,f1109A];
          string _t10B4#6 = "\n";
          Print<[string,tensor[2],string]>(_t10B0,_t10B2,_t10B4);
          real _t10B7#6 = 0.e0;
          bool _t10B9#2 = GT<real>(f00F46,_t10B7);
          if _t10B9 then goto JOIN10BE else goto ASSIGN1162
        JOIN10BE:  preds = [COND10BB,JOIN1167]
          int _t10BC#1 = phi(_t0F29,_t10BD)
          bool _t10BF#2 = GT<real>(f1109A,_t10B7);
          if _t10BF then goto JOIN10C4 else goto ASSIGN115A
        JOIN10C4:  preds = [COND10C1,JOIN115F]
          int _t10C2#1 = phi(_t0F29,_t10C3)
          int _t10C5#1 = IMul(_t10BC,_t10C2);
          int _t10C7#4 = 0;
          bool _t10C9#1 = GT<int>(_t10C5,_t10C7);
          bool _t10CB#1 = BNot(_t10C9);
          if _t10CB then goto COND10CE else goto ASSIGN1135
        COND10CE:  preds = [COND10CD]
          if _t10B9 then goto JOIN10D1 else goto ASSIGN112F
        JOIN10D1:  preds = [COND10CE,JOIN1133]
          int _t10CF#1 = phi(_t0F29,_t10D0)
          if _t10BF then goto JOIN10D5 else goto ASSIGN1129
        JOIN10D5:  preds = [COND10D2,JOIN112D]
          int _t10D3#1 = phi(_t0F29,_t10D4)
          int _t10D6#1 = IMul(_t10CF,_t10D3);
          bool _t10D8#1 = EQ<int>(_t10D6,_t10C7);
          if _t10D8 then goto ASSIGN10DC else goto JOIN10DE
        ASSIGN10DC:  preds = [COND10DA]
          string _t10DB#1 = "Warn: 0 update\n";
          Print<[string]>(_t10DB);
          goto JOIN10DE
        JOIN10DE:  preds = [MASSIGN10DD,COND10DA]
          string _t10DF#1 = "update with interval:";
          Print<[string,real,string]>(_t10DF,gradEps1094,_t10B4);
          string _t10E2#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t10E2,_t10B2,_t10B4);
          string _t10E5#1 = "New interval:";
          real _t10E7#2 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,gradEps1094);
          tensor[2] _t10E9#2 = <tensor[2]>[s0F1D,_t10E7];
          Print<[string,tensor[2],string]>(_t10E5,_t10E9,_t10B4);
          tensor[2][] intervals10EC#1 = Append<tensor[2]>(intervals0F25,_t10E9);
          femData:MeshCell[] newCells10EE#1 = Append<femData:MeshCell>(newCells0F27,cc0F21);
          goto JOIN10F4
        JOIN10F4:  preds = [ASSIGN10EF,ASSIGN1158]
          femData:MeshCell[] newCells10F0#2 = phi(newCells10EE,newCells0F27)
          tensor[2][] intervals10F1#2 = phi(intervals10EC,intervals0F25)
          real s10F2#3 = phi(_t10E7,s10F3)
          bool _t10F5#1 = GTE<real>(s10F2,e0F1F);
          if _t10F5 then goto ASSIGN10F9 else goto JOIN1113
        ASSIGN10F9:  preds = [COND10F7]
          int itter10F8#4 = IAdd(itter0F19,_t0F29);
          bool _t10FA#1 = GTE<int>(itter10F8,len0F17);
          if _t10FA then goto SAVE10FD else goto ASSIGN111E
        SAVE10FD:  preds = [COND10FC]
          self.itter = itter10F8;
          self.s = s10F2;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          stabilize
          goto JOIN110C
        JOIN110C:  preds = [*STABILIZE1101,ASSIGN1127]
          femData:FuncCell fc1102#1 = phi(_t1103)
          femData:MeshCell cc1104#1 = phi(cc1105)
          real e1106#1 = phi(e1107)
          real s1108#1 = phi(s1109)
          tensor[2] interval110A#1 = phi(interval110B)
          goto JOIN1113
        JOIN1113:  preds = [JOIN110C,COND10F7]
          femData:FuncCell fc110D#1 = phi(fc1102,fc0F23)
          femData:MeshCell cc110E#1 = phi(cc1104,cc0F21)
          real e110F#1 = phi(e1106,e0F1F)
          real s1110#1 = phi(s1108,s10F2)
          tensor[2] interval1111#1 = phi(interval110A,interval0F1B)
          int itter1112#1 = phi(itter10F8,itter0F19)
          self.itter = itter1112;
          self.interval = interval1111;
          self.s = s1110;
          self.e = e110F;
          self.cc = cc110E;
          self.fc = fc110D;
          self.intervals = intervals10F1;
          self.newCells = newCells10F0;
          active
        ASSIGN111E:  preds = [COND10FC]
          int _t111D#2 = IAdd(offset0F15,itter10F8);
          tensor[2] interval110B#3 = Subscript<tensor[2][]>(times0F0D,_t111D);
          int _t1120#1 = Subscript<int[]>(cells0F0F,_t111D);
          femData:MeshCell cc1105#2 = Subscript<femData:MeshCell[]>(0cell_a0F09,_t1120);
          real s1109#1 = TensorIndex<tensor[2],[0]>(interval110B);
          real e1107#1 = TensorIndex<tensor[2],[1]>(interval110B);
          int _t1125#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1105);
          femData:FuncCell _t1103#1 = LoadFem<femData:FuncCell>(c0F0B,_t1125);
          goto JOIN110C
        ASSIGN1129:  preds = [COND10D2]
          bool _t1128#1 = LT<real>(f1109A,_t10B7);
          if _t1128 then goto ASSIGN112C else goto JOIN112D
        ASSIGN112C:  preds = [COND112A]
          int _t112B#1 = -1;
          goto JOIN112D
        JOIN112D:  preds = [ASSIGN112C,COND112A]
          int _t10D4#1 = phi(_t112B,_t10C7)
          goto JOIN10D5
        ASSIGN112F:  preds = [COND10CE]
          bool _t112E#1 = LT<real>(f00F46,_t10B7);
          if _t112E then goto ASSIGN1132 else goto JOIN1133
        ASSIGN1132:  preds = [COND1130]
          int _t1131#1 = -1;
          goto JOIN1133
        JOIN1133:  preds = [ASSIGN1132,COND1130]
          int _t10D0#1 = phi(_t1131,_t10C7)
          goto JOIN10D1
        ASSIGN1135:  preds = [COND10CD]
          real _t1134#1 = 0.2e1;
          real _t1136#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t0F40,_t1054);
          real op1_e3_l_12113C#1 = λ(T0[])<Abs(T0)> (f00F46);
          real op1_e3_l_13113D#1 = λ(T0[],T1[])<(T0 * T1)> (_t1134,_t1136);
          real _t1138#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_12113C,op1_e3_l_13113D);
          real epsUpdate1150#2 = Max<real>(gradEps1094,_t1138);
          string _t1152#1 = "update L:";
          Print<[string,real,string]>(_t1152,epsUpdate1150,_t10B4);
          string _t1155#1 = "update G:";
          Print<[string,real,string]>(_t1155,gradEps1094,_t10B4);
          real s10F3#1 = λ(T0[],T1[])<(T0 + T1)> (s0F1D,epsUpdate1150);
          goto JOIN10F4
        ASSIGN115A:  preds = [COND10C1]
          bool _t1159#1 = LT<real>(f1109A,_t10B7);
          if _t1159 then goto ASSIGN115D else goto ASSIGN1160
        ASSIGN115D:  preds = [COND115B]
          int _t115C#1 = -1;
          goto JOIN115F
        JOIN115F:  preds = [ASSIGN115D,ASSIGN1160]
          int _t10C3#1 = phi(_t115C,_t115E)
          goto JOIN10C4
        ASSIGN1160:  preds = [COND115B]
          int _t115E#1 = 0;
          goto JOIN115F
        ASSIGN1162:  preds = [COND10BB]
          bool _t1161#1 = LT<real>(f00F46,_t10B7);
          if _t1161 then goto ASSIGN1165 else goto ASSIGN1168
        ASSIGN1165:  preds = [COND1163]
          int _t1164#1 = -1;
          goto JOIN1167
        JOIN1167:  preds = [ASSIGN1165,ASSIGN1168]
          int _t10BD#1 = phi(_t1164,_t1166)
          goto JOIN10BE
        ASSIGN1168:  preds = [COND1163]
          int _t1166#1 = 0;
          goto JOIN1167
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1169:  preds = []
      int iresU116A#1 = globals.iresU0D2A;
      int iresV116C#1 = globals.iresV0D2B;
      int _t116E#2 = 0;
      int _t1170#2 = 1;
      int _t1172#1 = ISub(iresU116A,_t1170);
      int[] _t1174#1 = Range(_t116E,_t1172);
    FOREACH1177:  preds = [ASSIGN1175,NEXT1180]
      foreach (vi1176 in _t1174) on exit goto RETURN1181
      int _t1178#1 = ISub(iresV116C,_t1170);
      int[] _t117A#1 = Range(_t116E,_t1178);
    FOREACH117D:  preds = [ASSIGN117B,NEXT117F]
      foreach (ui117C in _t117A) on exit goto NEXT1180
      new ray(ui117C,vi1176);
      goto FOREACH117D
    NEXT1180:  preds = [FOREACH117D]
      goto FOREACH1177
    RETURN1181:  preds = [FOREACH1177]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a11A4 (a) = <no-default>
  input 0b0412_intermedateGlobal11A5 (b) = <no-default>
  input 0c0414_intermedateGlobal11A6 (c) = <no-default>
  input isoval11A7 (isoval) = <default>
  input thick11A8 (thick) = <default>
  input camEye11A9 (camEye) = <default>
  input camAt11AA (camAt) = <default>
  input camUp11AB (camUp) = <default>
  input camFOV11AC (camFOV) = <default>
  input iresU11AD (iresU) = <default>
  input iresV11AE (iresV) = <default>
  input camNear11AF (camNear) = <default>
  input camFar11B0 (camFar) = <default>
  input refStep11B1 (refStep) = <default>
  input rayStep11B2 (rayStep) = <default>
  input lightVsp11B3 (lightVsp) = <default>
  input phongKa11B4 (phongKa) = <default>
  input phongKd11B5 (phongKd) = <default>
  input debug11B6 (debug) = <default>
  input debugU11B7 (debugU) = <default>
  input debugV11B8 (debugV) = <default>
  input eps11B9 (eps) = <default>
  input indecies11BA (indecies) = <no-default>
  input times11BB (times) = <no-default>
  input cells11BC (cells) = <no-default>
  global femData:MeshCell[] 0cell_a11BD
  global femData:FemFunc c11BE
  global tensor[3] camU11BF
  global tensor[3] camV11C0
  global real camVmax11C1
  global real camUmax11C2
  global tensor[3] rayVec11C3
## functions
  function femData:MeshPos _0994_msh_newtonInverse143C (tensor[2] pos143D#3, int cellInt143E#2, femData:Mesh mesh143F#12) {
    ENTRY1440:  preds = []
      real _t1441#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn1443#3 = <tensor[2]>[_t1441,_t1441];
      int _t1445#1 = 0;
      int _t1447#1 = 16;
      int[] _t1449#1 = Range(_t1445,_t1447);
    FOREACH144C:  preds = [ASSIGN144A,NEXT16A3]
      foreach (itter144B in _t1449) on exit goto ASSIGN16A8
        tensor[2] xn15C3#3 = phi(xn1443,xn1637)
      int ilit144E#1 = 3;
      int mulRes144F#3 = IMul(cellInt143E,ilit144E);
      int ilit1450#1 = 0;
      int addRes1451#1 = IAdd(mulRes144F,ilit1450);
      int idx1452#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1451);
      int ilit1453#1 = 1;
      int addRes1454#1 = IAdd(mulRes144F,ilit1453);
      int idx1455#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1454);
      int ilit1456#1 = 2;
      int addRes1457#1 = IAdd(mulRes144F,ilit1456);
      int idx1458#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1457);
      int[3] seq1459#1 = <int[3]>{idx1452,idx1455,idx1458};
      int[3] femIndicies144D#3 = seq1459;
      int ilit1468#4 = 0;
      int ilit1469#4 = 2;
      int idx146A#1 = Subscript<int>(femIndicies144D,ilit1468);
      int mulRes146B#2 = IMul(ilit1469,idx146A);
      int addRes146C#1 = IAdd(ilit1468,mulRes146B);
      int ilit146D#4 = 1;
      int addRes146E#1 = IAdd(ilit146D,mulRes146B);
      real dof_load146F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146C);
      real dof_load1470#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146E);
      tensor[2] interCons1471#1 = <tensor[2]>[dof_load146F,dof_load1470];
      int idx1472#1 = Subscript<int>(femIndicies144D,ilit146D);
      int mulRes1473#2 = IMul(ilit1469,idx1472);
      int addRes1474#1 = IAdd(ilit1468,mulRes1473);
      int addRes1475#1 = IAdd(ilit146D,mulRes1473);
      real dof_load1476#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1474);
      real dof_load1477#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1475);
      tensor[2] interCons1478#1 = <tensor[2]>[dof_load1476,dof_load1477];
      int idx1479#1 = Subscript<int>(femIndicies144D,ilit1469);
      int mulRes147A#2 = IMul(ilit1469,idx1479);
      int addRes147B#1 = IAdd(ilit1468,mulRes147A);
      int addRes147C#1 = IAdd(ilit146D,mulRes147A);
      real dof_load147D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147B);
      real dof_load147E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147C);
      tensor[2] interCons147F#1 = <tensor[2]>[dof_load147D,dof_load147E];
      tensor[3,2] dofs1480#1 = <tensor[3,2]>[interCons1471,interCons1478,interCons147F];
      tensor[3,2] femDofs1467#30 = dofs1480;
      real varAcc149C#0 = VIndex<2,0>(xn1443);
      real varAcc149D#0 = VIndex<2,1>(xn1443);
      real coeff149E#1 = -0.1e1;
      real one149F#3 = 0.1e1;
      real prod14A0#2 = RMul(one149F,one149F);
      real basisEval14A1#2 = RMul(coeff149E,prod14A0);
      real basisEval14A2#2 = RMul(one149F,prod14A0);
      real basisEval14A3#2 = 0.e0;
      tensor[3] intermediateCons14A4#1 = <tensor[3]>[basisEval14A1,basisEval14A2,basisEval14A3];
      tensor[3] intermediateCons14A5#1 = <tensor[3]>[basisEval14A1,basisEval14A3,basisEval14A2];
      tensor[2,3] intermediateCons14A6#1 = <tensor[2,3]>[intermediateCons14A4,intermediateCons14A5];
      tensor[2,3] basisResult149B#12 = intermediateCons14A6;
      real r14B4#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs1467);
      real r14B5#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult149B);
      real r14B6#1 = RMul(r14B4,r14B5);
      real r14B7#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs1467);
      real r14B8#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult149B);
      real r14B9#1 = RMul(r14B7,r14B8);
      real r14BA#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs1467);
      real r14BB#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult149B);
      real r14BC#1 = RMul(r14BA,r14BB);
      real r14BD#1 = RAdd(r14B6,r14B9);
      real r14BE#1 = RAdd(r14BD,r14BC);
      real r14BF#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult149B);
      real r14C0#1 = RMul(r14B4,r14BF);
      real r14C1#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult149B);
      real r14C2#1 = RMul(r14B7,r14C1);
      real r14C3#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult149B);
      real r14C4#1 = RMul(r14BA,r14C3);
      real r14C5#1 = RAdd(r14C0,r14C2);
      real r14C6#1 = RAdd(r14C5,r14C4);
      tensor[2] tensor14C7#1 = <tensor[2]>[r14BE,r14C6];
      real r14C8#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs1467);
      real r14C9#1 = RMul(r14C8,r14B5);
      real r14CA#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs1467);
      real r14CB#1 = RMul(r14CA,r14B8);
      real r14CC#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs1467);
      real r14CD#1 = RMul(r14CC,r14BB);
      real r14CE#1 = RAdd(r14C9,r14CB);
      real r14CF#1 = RAdd(r14CE,r14CD);
      real r14D0#1 = RMul(r14C8,r14BF);
      real r14D1#1 = RMul(r14CA,r14C1);
      real r14D2#1 = RMul(r14CC,r14C3);
      real r14D3#1 = RAdd(r14D0,r14D1);
      real r14D4#1 = RAdd(r14D3,r14D2);
      tensor[2] tensor14D5#1 = <tensor[2]>[r14CF,r14D4];
      tensor[2,2] probe_l_1014B3#4 = <tensor[2,2]>[tensor14C7,tensor14D5];
      real realLit14FB#4 = 0.e0;
      real r14FC#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_1014B3);
      real r14FD#1 = RMul(realLit14FB,r14FC);
      real realLit14FE#2 = -0.1e1;
      real r14FF#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_1014B3);
      real r1500#1 = RMul(realLit14FE,r14FF);
      real r1501#1 = RAdd(r14FD,r1500);
      real r1502#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_1014B3);
      real r1503#1 = RMul(realLit14FB,r1502);
      real r1504#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_1014B3);
      real r1505#1 = RMul(realLit14FE,r1504);
      real r1506#1 = RAdd(r1503,r1505);
      tensor[2] tensor1507#1 = <tensor[2]>[r1501,r1506];
      real realLit1508#2 = 0.1e1;
      real r1509#1 = RMul(realLit1508,r14FC);
      real r150A#1 = RMul(realLit14FB,r14FF);
      real r150B#1 = RAdd(r1509,r150A);
      real r150C#1 = RMul(realLit1508,r1502);
      real r150D#1 = RMul(realLit14FB,r1504);
      real r150E#1 = RAdd(r150C,r150D);
      tensor[2] tensor150F#1 = <tensor[2]>[r150B,r150E];
      tensor[2,2] op1_e3_l_1114FA#4 = <tensor[2,2]>[tensor1507,tensor150F];
      real r1528#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1467);
      real r1529#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult149B);
      real r152A#1 = RMul(r1528,r1529);
      real r152B#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1467);
      real r152C#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult149B);
      real r152D#1 = RMul(r152B,r152C);
      real r152E#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1467);
      real r152F#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult149B);
      real r1530#1 = RMul(r152E,r152F);
      real r1531#1 = RAdd(r152A,r152D);
      real r1532#1 = RAdd(r1531,r1530);
      real r1533#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1467);
      real r1534#1 = RMul(r1533,r1529);
      real r1535#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1467);
      real r1536#1 = RMul(r1535,r152C);
      real r1537#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1467);
      real r1538#1 = RMul(r1537,r152F);
      real r1539#1 = RAdd(r1534,r1536);
      real r153A#1 = RAdd(r1539,r1538);
      tensor[2] probe_l_121527#1 = <tensor[2]>[r1532,r153A];
      real r1551#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1467);
      real r1552#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult149B);
      real r1553#1 = RMul(r1551,r1552);
      real r1554#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1467);
      real r1555#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult149B);
      real r1556#1 = RMul(r1554,r1555);
      real r1557#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1467);
      real r1558#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult149B);
      real r1559#1 = RMul(r1557,r1558);
      real r155A#1 = RAdd(r1553,r1556);
      real r155B#1 = RAdd(r155A,r1559);
      real r155C#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1467);
      real r155D#1 = RMul(r155C,r1552);
      real r155E#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1467);
      real r155F#1 = RMul(r155E,r1555);
      real r1560#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1467);
      real r1561#1 = RMul(r1560,r1558);
      real r1562#1 = RAdd(r155D,r155F);
      real r1563#1 = RAdd(r1562,r1561);
      tensor[2] probe_l_131550#2 = <tensor[2]>[r155B,r1563];
      real realLit157A#2 = 0.e0;
      real r157B#2 = TensorIndex<tensor[2],[0]>(probe_l_131550);
      real r157C#1 = RMul(realLit157A,r157B);
      real realLit157D#1 = 0.1e1;
      real r157E#2 = TensorIndex<tensor[2],[1]>(probe_l_131550);
      real r157F#1 = RMul(realLit157D,r157E);
      real r1580#1 = RAdd(r157C,r157F);
      real realLit1581#1 = -0.1e1;
      real r1582#1 = RMul(realLit1581,r157B);
      real r1583#1 = RMul(realLit157A,r157E);
      real r1584#1 = RAdd(r1582,r1583);
      tensor[2] op1_e3_l_141579#1 = <tensor[2]>[r1580,r1584];
      real realLit1593#4 = 0.e0;
      real r1594#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_1114FA);
      real r1595#1 = RMul(realLit1593,r1594);
      real realLit1596#2 = -0.1e1;
      real r1597#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_1114FA);
      real r1598#1 = RMul(realLit1596,r1597);
      real r1599#1 = RAdd(r1595,r1598);
      real r159A#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_1114FA);
      real r159B#1 = RMul(realLit1593,r159A);
      real r159C#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_1114FA);
      real r159D#1 = RMul(realLit1596,r159C);
      real r159E#1 = RAdd(r159B,r159D);
      tensor[2] tensor159F#1 = <tensor[2]>[r1599,r159E];
      real realLit15A0#2 = 0.1e1;
      real r15A1#1 = RMul(realLit15A0,r1594);
      real r15A2#1 = RMul(realLit1593,r1597);
      real r15A3#1 = RAdd(r15A1,r15A2);
      real r15A4#1 = RMul(realLit15A0,r159A);
      real r15A5#1 = RMul(realLit1593,r159C);
      real r15A6#1 = RAdd(r15A4,r15A5);
      tensor[2] tensor15A7#1 = <tensor[2]>[r15A3,r15A6];
      tensor[2,2] op1_e3_l_151592#4 = <tensor[2,2]>[tensor159F,tensor15A7];
      real op1_e3_l_1615BF#4 = VDot<2>(probe_l_121527,op1_e3_l_141579);
      real varAcc15C4#1 = VIndex<2,0>(xn15C3);
      real varAcc15C5#1 = VIndex<2,1>(xn15C3);
      real coeff15C6#2 = -0.1e1;
      real iden15C7#1 = varAcc15C4;
      real one15C8#7 = 0.1e1;
      real prod15C9#2 = RMul(iden15C7,one15C8);
      real iden15CA#1 = varAcc15C5;
      real prod15CB#2 = RMul(one15C8,iden15CA);
      real prod15CC#1 = RMul(one15C8,one15C8);
      real mult15CD#1 = RMul(one15C8,prod15CC);
      real mult15CE#1 = RMul(coeff15C6,prod15CB);
      real mult15CF#1 = RMul(coeff15C6,prod15C9);
      real sum15D0#1 = RAdd(mult15CE,mult15CF);
      real sum15D1#1 = RAdd(mult15CD,sum15D0);
      real intermediate15D2#1 = sum15D1;
      real basisEval15D3#1 = RMul(one15C8,prod15C9);
      real basisEval15D4#1 = RMul(one15C8,prod15CB);
      tensor[3] intermediateCons15D5#1 = <tensor[3]>[intermediate15D2,basisEval15D3,basisEval15D4];
      tensor[3] basisResult15C2#6 = intermediateCons15D5;
      real r15EA#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1467);
      real r15EB#2 = TensorIndex<tensor[3],[0]>(basisResult15C2);
      real r15EC#1 = RMul(r15EA,r15EB);
      real r15ED#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1467);
      real r15EE#2 = TensorIndex<tensor[3],[1]>(basisResult15C2);
      real r15EF#1 = RMul(r15ED,r15EE);
      real r15F0#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1467);
      real r15F1#2 = TensorIndex<tensor[3],[2]>(basisResult15C2);
      real r15F2#1 = RMul(r15F0,r15F1);
      real r15F3#1 = RAdd(r15EC,r15EF);
      real r15F4#1 = RAdd(r15F3,r15F2);
      real r15F5#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1467);
      real r15F6#1 = RMul(r15F5,r15EB);
      real r15F7#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1467);
      real r15F8#1 = RMul(r15F7,r15EE);
      real r15F9#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1467);
      real r15FA#1 = RMul(r15F9,r15F1);
      real r15FB#1 = RAdd(r15F6,r15F8);
      real r15FC#1 = RAdd(r15FB,r15FA);
      tensor[2] probe_l_1715E9#1 = <tensor[2]>[r15F4,r15FC];
      real r1613#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_151592);
      real r1614#1 = RDiv(r1613,op1_e3_l_1615BF);
      real r1615#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_151592);
      real r1616#1 = RDiv(r1615,op1_e3_l_1615BF);
      tensor[2] tensor1617#1 = <tensor[2]>[r1614,r1616];
      real r1618#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_151592);
      real r1619#1 = RDiv(r1618,op1_e3_l_1615BF);
      real r161A#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_151592);
      real r161B#1 = RDiv(r161A,op1_e3_l_1615BF);
      tensor[2] tensor161C#1 = <tensor[2]>[r1619,r161B];
      tensor[2,2] op1_e3_l_181612#4 = <tensor[2,2]>[tensor1617,tensor161C];
      tensor[2] op1_e3_l_191629#2 = VSub<2>(probe_l_1715E9,pos143D);
      tensor[2] projParam162D#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_181612);
      real vdot162E#1 = VDot<2>(projParam162D,op1_e3_l_191629);
      tensor[2] projParam162F#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_181612);
      real vdot1630#1 = VDot<2>(projParam162F,op1_e3_l_191629);
      tensor[2] op1_e3_l_20162C#1 = <tensor[2]>[vdot162E,vdot1630];
      tensor[2] xn1637#4 = VSub<2>(xn15C3,op1_e3_l_20162C);
      real _t163A#2 = 0.1e-7;
      real _t163C#1 = RMul(_t163A,_t163A);
      real r1640#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs1467);
      real r1641#2 = TensorIndex<tensor[3],[0]>(basisResult15C2);
      real r1642#1 = RMul(r1640,r1641);
      real r1643#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs1467);
      real r1644#2 = TensorIndex<tensor[3],[1]>(basisResult15C2);
      real r1645#1 = RMul(r1643,r1644);
      real r1646#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs1467);
      real r1647#2 = TensorIndex<tensor[3],[2]>(basisResult15C2);
      real r1648#1 = RMul(r1646,r1647);
      real r1649#1 = RAdd(r1642,r1645);
      real r164A#1 = RAdd(r1649,r1648);
      real r164B#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs1467);
      real r164C#1 = RMul(r164B,r1641);
      real r164D#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs1467);
      real r164E#1 = RMul(r164D,r1644);
      real r164F#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs1467);
      real r1650#1 = RMul(r164F,r1647);
      real r1651#1 = RAdd(r164C,r164E);
      real r1652#1 = RAdd(r1651,r1650);
      tensor[2] probe_l_25163F#1 = <tensor[2]>[r164A,r1652];
      tensor[2] op1_e3_l_271668#2 = VSub<2>(probe_l_25163F,pos143D);
      tensor[2] projParam166C#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_181612);
      real vdot166D#1 = VDot<2>(projParam166C,op1_e3_l_271668);
      tensor[2] projParam166E#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_181612);
      real vdot166F#1 = VDot<2>(projParam166E,op1_e3_l_271668);
      tensor[2] op1_e3_l_38166B#2 = <tensor[2]>[vdot166D,vdot166F];
      real _t1676#1 = VDot<2>(op1_e3_l_38166B,op1_e3_l_38166B);
      bool _t1679#1 = GTE<real>(_t163C,_t1676);
      if _t1679 then goto ASSIGN167D else goto JOIN16A2
    ASSIGN167D:  preds = [COND167B]
      real _t167C#3 = 0.1e1;
      real _t167E#3 = 0.1e-8;
      real _t1680#1 = RAdd(_t167C,_t167E);
      tensor[2] _t1683#1 = <tensor[2]>[_t167C,_t167C];
      real _t1685#1 = VDot<2>(_t1683,xn1637);
      bool _t1688#1 = GT<real>(_t1680,_t1685);
      tensor[2] _t168A#1 = <tensor[2]>[_t167E,_t167E];
      tensor[2] _t168C#2 = VAdd<2>(_t168A,xn1637);
      real _t168F#1 = VIndex<2,0>(_t168C);
      real _t1691#2 = -0.e0;
      bool _t1693#1 = GT<real>(_t168F,_t1691);
      real _t1695#1 = VIndex<2,1>(_t168C);
      bool _t1697#1 = GT<real>(_t1695,_t1691);
      bool _t1699#1 = BAnd(_t1693,_t1697);
      bool _t169B#1 = BAnd(_t1688,_t1699);
      if _t169B then goto ASSIGN169F else goto ASSIGN16A5
    ASSIGN169F:  preds = [COND169D]
      femData:MeshPos _t169E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh143F,cellInt143E,xn1637,pos143D);
      return _t169E
      goto JOIN16A1
    JOIN16A1:  preds = [*RETURN(_t169E)16A0,*RETURN(_t16A4)16A6]
      goto JOIN16A2
    JOIN16A2:  preds = [*JOIN16A1,COND167B]
      goto FOREACH144C
    ASSIGN16A5:  preds = [COND169D]
      femData:MeshPos _t16A4#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A4
      goto JOIN16A1
    ASSIGN16A8:  preds = [FOREACH144C]
      femData:MeshPos _t16A7#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A7
}
## input initialization
  ENTRY11C4:  preds = []
    real isoval11C5#1 = 0.2e0;
    globals.isoval11A7 = isoval11C5;
    real thick11C8#1 = 0.7e-1;
    globals.thick11A8 = thick11C8;
    real _t11CB#1 = -0.5e0;
    real _t11CD#5 = 0.5e0;
    tensor[3] camEye11CF#1 = <tensor[3]>[_t11CB,_t11CD,_t11CD];
    globals.camEye11A9 = camEye11CF;
    tensor[3] camAt11D2#1 = <tensor[3]>[_t11CD,_t11CD,_t11CD];
    globals.camAt11AA = camAt11D2;
    real _t11D5#2 = 0.e0;
    real _t11D7#2 = 0.1e1;
    tensor[3] camUp11D9#2 = <tensor[3]>[_t11D5,_t11D5,_t11D7];
    globals.camUp11AB = camUp11D9;
    real camFOV11DC#1 = 0.137e2;
    globals.camFOV11AC = camFOV11DC;
    int iresU11DF#2 = 10;
    globals.iresU11AD = iresU11DF;
    globals.iresV11AE = iresU11DF;
    real camNear11E3#1 = -0.2e1;
    globals.camNear11AF = camNear11E3;
    real camFar11E6#1 = 0.5e1;
    globals.camFar11B0 = camFar11E6;
    globals.refStep11B1 = _t11D7;
    real rayStep11EA#1 = 0.1e-1;
    globals.rayStep11B2 = rayStep11EA;
    globals.lightVsp11B3 = camUp11D9;
    real phongKa11EE#1 = 0.1e0;
    globals.phongKa11B4 = phongKa11EE;
    real phongKd11F1#1 = 0.9e0;
    globals.phongKd11B5 = phongKd11F1;
    bool debug11F4#1 = false;
    globals.debug11B6 = debug11F4;
    int debugU11F7#1 = 8;
    globals.debugU11B7 = debugU11F7;
    int debugV11FA#1 = 2;
    globals.debugV11B8 = debugV11FA;
    real eps11FD#1 = 0.1e-8;
    globals.eps11B9 = eps11FD;
    return
## global-variable initialization
  ENTRY1201:  preds = []
    femData:Mesh a1202#3 = globals.a11A4;
    femData:Space 0b0412_intermedateGlobal1204#1 = globals.0b0412_intermedateGlobal11A5;
    femData:FemFunc 0c0414_intermedateGlobal1206#1 = globals.0c0414_intermedateGlobal11A6;
    tensor[3] camEye1208#1 = globals.camEye11A9;
    tensor[3] camAt120A#1 = globals.camAt11AA;
    tensor[3] camUp120C#3 = globals.camUp11AB;
    real camFOV120E#1 = globals.camFOV11AC;
    int iresU1210#1 = globals.iresU11AD;
    int iresV1212#1 = globals.iresV11AE;
    int _t1214#1 = 0;
    int _t1216#1 = 1;
    int _t1218#1 = ExtractFemItem<int,NumCell(Mesh)>(a1202);
    int _t121A#1 = ISub(_t1218,_t1216);
    int[] _t121C#1 = Range(_t1214,_t121A);
    femData:MeshCell[] _t121E#1 = <femData:MeshCell[]>{};
  FOREACH1221:  preds = [ASSIGN121F,NEXT1227]
    foreach (_t1220 in _t121C) on exit goto GASSIGN1228
      femData:MeshCell[] _t1225#2 = phi(_t121E,_t1224)
    femData:MeshCell _t1222#1 = LoadFem<femData:MeshCell>(a1202,_t1220);
    femData:MeshCell[] _t1224#1 = Append<femData:MeshCell>(_t1225,_t1222);
    goto FOREACH1221
  GASSIGN1228:  preds = [FOREACH1221]
    globals.0cell_a11BD = _t1225;
    femData:Space b1229#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal1204,a1202);
    femData:FemFunc c122B#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal1206,b1229);
    globals.c11BE = c122B;
    tensor[3] op1_e3_l_4122E#9 = VSub<3>(camAt120A,camEye1208);
    real op1_e3_l_61231#1 = VDot<3>(op1_e3_l_4122E,op1_e3_l_4122E);
    real op1_e3_l_71234#3 = Sqrt(op1_e3_l_61231);
    real realLit1238#1 = 0.1e1;
    real op1_e3_l_91237#6 = RDiv(realLit1238,op1_e3_l_71234);
    tensor[3] camN123C#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_4122E);
    real realLit1240#3 = 0.e0;
    real r1241#3 = TensorIndex<tensor[3],[0]>(camUp120C);
    real r1242#3 = RMul(realLit1240,r1241);
    real r1243#3 = TensorIndex<tensor[3],[1]>(camUp120C);
    real r1244#3 = RMul(realLit1240,r1243);
    real r1245#3 = TensorIndex<tensor[3],[2]>(camUp120C);
    real r1246#5 = RMul(realLit1240,r1245);
    real r1247#3 = RAdd(r1242,r1244);
    real r1248#3 = RAdd(r1247,r1246);
    real realLit1249#3 = 0.1e1;
    real r124A#1 = RMul(realLit1249,r1245);
    real r124B#1 = RAdd(r1247,r124A);
    real realLit124C#3 = -0.1e1;
    real r124D#1 = RMul(realLit124C,r1243);
    real r124E#1 = RAdd(r1242,r124D);
    real r124F#1 = RAdd(r124E,r1246);
    tensor[3] tensor1250#1 = <tensor[3]>[r1248,r124B,r124F];
    real r1251#1 = RMul(realLit124C,r1245);
    real r1252#1 = RAdd(r1247,r1251);
    real r1253#1 = RMul(realLit1249,r1241);
    real r1254#1 = RAdd(r1253,r1244);
    real r1255#1 = RAdd(r1254,r1246);
    tensor[3] tensor1256#1 = <tensor[3]>[r1252,r1248,r1255];
    real r1257#1 = RMul(realLit1249,r1243);
    real r1258#1 = RAdd(r1242,r1257);
    real r1259#1 = RAdd(r1258,r1246);
    real r125A#1 = RMul(realLit124C,r1241);
    real r125B#1 = RAdd(r125A,r1244);
    real r125C#1 = RAdd(r125B,r1246);
    tensor[3] tensor125D#1 = <tensor[3]>[r1259,r125C,r1248];
    tensor[3,3] op1_e3_l_15123F#3 = <tensor[3,3]>[tensor1250,tensor1256,tensor125D];
    tensor[3] projParam127F#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_15123F);
    real vdot1280#1 = VDot<3>(op1_e3_l_4122E,projParam127F);
    tensor[3] projParam1281#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_15123F);
    real vdot1282#1 = VDot<3>(op1_e3_l_4122E,projParam1281);
    tensor[3] projParam1283#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_15123F);
    real vdot1284#1 = VDot<3>(op1_e3_l_4122E,projParam1283);
    tensor[3] op1_e3_l_17127E#6 = <tensor[3]>[vdot1280,vdot1282,vdot1284];
    real op1_e3_l_34128D#1 = VDot<3>(op1_e3_l_17127E,op1_e3_l_17127E);
    real r1291#1 = RMul(op1_e3_l_91237,op1_e3_l_91237);
    real op1_e3_l_351290#1 = RMul(r1291,op1_e3_l_34128D);
    real op1_e3_l_361295#1 = Sqrt(op1_e3_l_351290);
    tensor[3] op1_e3_l_371298#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_17127E);
    real realLit129C#1 = 0.1e1;
    real op1_e3_l_38129B#2 = RDiv(realLit129C,op1_e3_l_361295);
    tensor[3] camU12A0#1 = VScale<3>(op1_e3_l_38129B,op1_e3_l_371298);
    globals.camU11BF = camU12A0;
    real realLit12A5#3 = 0.e0;
    real r12A6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_4122E);
    real r12A7#3 = RMul(realLit12A5,r12A6);
    real r12A8#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_4122E);
    real r12A9#3 = RMul(realLit12A5,r12A8);
    real r12AA#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_4122E);
    real r12AB#5 = RMul(realLit12A5,r12AA);
    real r12AC#3 = RAdd(r12A7,r12A9);
    real r12AD#3 = RAdd(r12AC,r12AB);
    real realLit12AE#3 = 0.1e1;
    real r12AF#1 = RMul(realLit12AE,r12AA);
    real r12B0#1 = RAdd(r12AC,r12AF);
    real realLit12B1#3 = -0.1e1;
    real r12B2#1 = RMul(realLit12B1,r12A8);
    real r12B3#1 = RAdd(r12A7,r12B2);
    real r12B4#1 = RAdd(r12B3,r12AB);
    tensor[3] tensor12B5#1 = <tensor[3]>[r12AD,r12B0,r12B4];
    real r12B6#1 = RMul(realLit12B1,r12AA);
    real r12B7#1 = RAdd(r12AC,r12B6);
    real r12B8#1 = RMul(realLit12AE,r12A6);
    real r12B9#1 = RAdd(r12B8,r12A9);
    real r12BA#1 = RAdd(r12B9,r12AB);
    tensor[3] tensor12BB#1 = <tensor[3]>[r12B7,r12AD,r12BA];
    real r12BC#1 = RMul(realLit12AE,r12A8);
    real r12BD#1 = RAdd(r12A7,r12BC);
    real r12BE#1 = RAdd(r12BD,r12AB);
    real r12BF#1 = RMul(realLit12B1,r12A6);
    real r12C0#1 = RAdd(r12BF,r12A9);
    real r12C1#1 = RAdd(r12C0,r12AB);
    tensor[3] tensor12C2#1 = <tensor[3]>[r12BE,r12C1,r12AD];
    tensor[3,3] op1_e3_l_4512A4#3 = <tensor[3,3]>[tensor12B5,tensor12BB,tensor12C2];
    tensor[3] projParam12E4#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_4512A4);
    real vdot12E5#1 = VDot<3>(op1_e3_l_17127E,projParam12E4);
    tensor[3] projParam12E6#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_4512A4);
    real vdot12E7#1 = VDot<3>(op1_e3_l_17127E,projParam12E6);
    tensor[3] projParam12E8#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_4512A4);
    real vdot12E9#1 = VDot<3>(op1_e3_l_17127E,projParam12E8);
    tensor[3] op1_e3_l_4712E3#1 = <tensor[3]>[vdot12E5,vdot12E7,vdot12E9];
    tensor[3] op1_e3_l_5012F2#3 = VScale<3>(op1_e3_l_91237,op1_e3_l_4712E3);
    real r12F6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5012F2);
    real r12F7#3 = RMul(op1_e3_l_38129B,op1_e3_l_91237);
    real r12F8#1 = RMul(r12F7,r12F6);
    real r12F9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5012F2);
    real r12FA#1 = RMul(r12F7,r12F9);
    real r12FB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5012F2);
    real r12FC#1 = RMul(r12F7,r12FB);
    tensor[3] camV12F5#1 = <tensor[3]>[r12F8,r12FA,r12FC];
    globals.camV11C0 = camV12F5;
    real _t1307#1 = 0.314159265358979323846264338327950288e1;
    real _t1309#1 = 0.36e3;
    real op1_e3_l_5130B#1 = RMul(camFOV120E,_t1307);
    real op1_e3_l_6130E#1 = RDiv(op1_e3_l_5130B,_t1309);
    real op1_e3_l_101311#2 = Tan(op1_e3_l_6130E);
    real camVmax1314#1 = RMul(op1_e3_l_101311,op1_e3_l_71234);
    globals.camVmax11C1 = camVmax1314;
    real _t1318#1 = IntToReal(iresU1210);
    real _t131A#1 = IntToReal(iresV1212);
    real r131D#1 = RMul(_t1318,op1_e3_l_101311);
    real op1_e3_l_14131C#1 = RMul(r131D,op1_e3_l_71234);
    real camUmax1321#1 = RDiv(op1_e3_l_14131C,_t131A);
    globals.camUmax11C2 = camUmax1321;
    globals.rayVec11C3 = camN123C;
    return
## strand
  strand ray (int ui1327#2, int vi1328#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY1338:  preds = []
        femData:MeshCell[] 0cell_a1339#1 = globals.0cell_a11BD;
        femData:FemFunc c133B#1 = globals.c11BE;
        tensor[3] camEye133D#1 = globals.camEye11A9;
        int iresU133F#2 = globals.iresU11AD;
        int iresV1341#3 = globals.iresV11AE;
        int[] indecies1343#2 = globals.indecies11BA;
        tensor[2][] times1345#1 = globals.times11BB;
        tensor[3] camU1347#1 = globals.camU11BF;
        tensor[3] camV1349#1 = globals.camV11C0;
        real camVmax134B#2 = globals.camVmax11C1;
        real camUmax134D#2 = globals.camUmax11C2;
        real _t134F#5 = -0.5e0;
        real _t1351#1 = IntToReal(ui1327);
        real _t1353#1 = IntToReal(iresU133F);
        real _t1355#3 = 0.5e0;
        real op1_e3_l_61357#1 = RSub(_t1353,_t1355);
        real op1_e3_l_7135A#1 = RSub(_t1351,_t134F);
        real op1_e3_l_8135D#1 = RSub(op1_e3_l_61357,_t134F);
        real op1_e3_l_91360#2 = RNeg(camUmax134D);
        real op1_e3_l_101363#1 = RDiv(op1_e3_l_7135A,op1_e3_l_8135D);
        real op1_e3_l_111366#1 = RSub(camUmax134D,op1_e3_l_91360);
        real op1_e3_l_131369#1 = RMul(op1_e3_l_101363,op1_e3_l_111366);
        real rayU136C#2 = RAdd(op1_e3_l_91360,op1_e3_l_131369);
        real _t136F#1 = IntToReal(vi1328);
        real _t1371#2 = IntToReal(iresV1341);
        real op1_e3_l_61373#1 = RSub(_t1371,_t1355);
        real op1_e3_l_71376#2 = RSub(_t136F,_t134F);
        real op1_e3_l_81379#1 = RSub(op1_e3_l_61373,_t134F);
        real op1_e3_l_9137C#3 = RNeg(camVmax134B);
        real op1_e3_l_10137F#1 = RDiv(op1_e3_l_71376,op1_e3_l_81379);
        real op1_e3_l_111382#2 = RSub(camVmax134B,op1_e3_l_9137C);
        real op1_e3_l_131385#1 = RMul(op1_e3_l_10137F,op1_e3_l_111382);
        real rayV1388#1 = RAdd(op1_e3_l_9137C,op1_e3_l_131385);
        real op1_e3_l_23138B#1 = RSub(_t1371,_t1355);
        real op1_e3_l_25138E#1 = RSub(op1_e3_l_23138B,_t134F);
        real op1_e3_l_271391#1 = RDiv(op1_e3_l_71376,op1_e3_l_25138E);
        real op1_e3_l_301394#1 = RMul(op1_e3_l_271391,op1_e3_l_111382);
        real op1_e3_l_311397#1 = RAdd(op1_e3_l_9137C,op1_e3_l_301394);
        tensor[3] op1_e3_l_32139A#2 = VScale<3>(rayU136C,camU1347);
        tensor[3] op1_e3_l_33139D#2 = VScale<3>(op1_e3_l_311397,camV1349);
        tensor[3] UV13A0#1 = VAdd<3>(op1_e3_l_32139A,op1_e3_l_33139D);
        tensor[3] v13A4#1 = VAdd<3>(camEye133D,op1_e3_l_32139A);
        tensor[3] rayOrig13A3#1 = VAdd<3>(v13A4,op1_e3_l_33139D);
        int _t13A8#2 = IMul(ui1327,iresV1341);
        int _t13AA#1 = IAdd(_t13A8,vi1328);
        int offset13AC#2 = Subscript<int[]>(indecies1343,_t13AA);
        int _t13AE#1 = IMul(iresU133F,iresV1341);
        int _t13B0#1 = IAdd(_t13AE,_t13A8);
        int _t13B2#1 = IAdd(_t13B0,vi1328);
        int len13B4#1 = Subscript<int[]>(indecies1343,_t13B2);
        int itter13B6#2 = 0;
        int idx13B8#2 = offset13AC;
        tensor[2] interval13BA#3 = Subscript<tensor[2][]>(times1345,idx13B8);
        real s13BC#1 = VIndex<2,0>(interval13BA);
        real e13BE#1 = VIndex<2,1>(interval13BA);
        femData:MeshCell cc13C0#2 = Subscript<femData:MeshCell[]>(0cell_a1339,itter13B6);
        int _t13C2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13C0);
        femData:FuncCell _t13C4#1 = LoadFem<femData:FuncCell>(c133B,_t13C2);
        tensor[2][0] _t13C6#1 = <tensor[2][0]>{};
        tensor[2][] _t13C8#1 = MkDynamic<tensor[2],0>(_t13C6);
        femData:MeshCell[0] _t13CA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t13CC#1 = MkDynamic<femData:MeshCell,0>(_t13CA);
        self.rayU = rayU136C;
        self.rayV = rayV1388;
        self.UV = UV13A0;
        self.rayOrig = rayOrig13A3;
        self.offset = offset13AC;
        self.len = len13B4;
        self.itter = itter13B6;
        self.idx = idx13B8;
        self.interval = interval13BA;
        self.s = s13BC;
        self.e = e13BE;
        self.cc = cc13C0;
        self.fc = _t13C4;
        self.intervals = _t13C8;
        self.newCells = _t13CC;
        return
    end state init
    method start
        ENTRY13DE:  preds = []
          femData:MeshCell[] 0cell_a13DF#1 = globals.0cell_a11BD;
          femData:FemFunc c13E1#1 = globals.c11BE;
          int[] cells13E3#1 = globals.cells11BC;
          int len13E5#1 = self.len;
          int idx13E7#1 = self.idx;
          int _t13E9#1 = 0;
          bool _t13EB#1 = EQ<int>(len13E5,_t13E9);
          if _t13EB then goto STABILIZE13EE else goto JOIN13EF
        STABILIZE13EE:  preds = [COND13ED]
          stabilize
          goto JOIN13EF
        JOIN13EF:  preds = [*STABILIZE13EE,COND13ED]
          int _t13F0#1 = Subscript<int[]>(cells13E3,idx13E7);
          femData:MeshCell cc13F2#2 = Subscript<femData:MeshCell[]>(0cell_a13DF,_t13F0);
          int _t13F4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13F2);
          femData:FuncCell _t13F6#1 = LoadFem<femData:FuncCell>(c13E1,_t13F4);
          self.cc = cc13F2;
          self.fc = _t13F6;
          active
    end start
    method update
        ENTRY13FB:  preds = []
          femData:MeshCell[] 0cell_a13FC#1 = globals.0cell_a11BD;
          femData:FemFunc c13FE#1 = globals.c11BE;
          tensor[2][] times1400#1 = globals.times11BB;
          int[] cells1402#1 = globals.cells11BC;
          tensor[3] rayVec1404#4 = globals.rayVec11C3;
          tensor[3] rayOrig1406#1 = self.rayOrig;
          int offset1408#1 = self.offset;
          int len140A#2 = self.len;
          int itter140C#2 = self.itter;
          tensor[2] interval140E#1 = self.interval;
          real s1410#5 = self.s;
          real e1412#3 = self.e;
          femData:MeshCell cc1414#5 = self.cc;
          femData:FuncCell fc1416#3 = self.fc;
          tensor[2][] intervals1418#2 = self.intervals;
          femData:MeshCell[] newCells141A#2 = self.newCells;
          int _t141C#6 = 1;
          bool _t141E#1 = LT<int>(len140A,_t141C);
          if _t141E then goto STABILIZE1421 else goto JOIN1422
        STABILIZE1421:  preds = [COND1420]
          stabilize
          goto JOIN1422
        JOIN1422:  preds = [*STABILIZE1421,COND1420]
          tensor[3] op1_e3_l_31423#1 = VScale<3>(s1410,rayVec1404);
          tensor[3] rayStart1426#3 = VAdd<3>(rayOrig1406,op1_e3_l_31423);
          real _t1429#1 = VIndex<3,0>(rayStart1426);
          real _t142B#1 = VIndex<3,1>(rayStart1426);
          tensor[2] project142D#2 = <tensor[2]>[_t1429,_t142B];
          femData:FemFunc _t142F#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1416);
          femData:Space _t1431#6 = ExtractFem<femData:Space,femData:FemFunc>(_t142F);
          int _t1433#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1416);
          femData:Mesh _t1435#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1414);
          int _t1437#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1414);
          real _t1439#2 = VIndex<3,2>(rayStart1426);
          femData:MeshPos callNewtonPos143B#1 = _0994_msh_newtonInverse143C (project142D,_t1437,_t1435);
          tensor[2] refPos16AB#6 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos143B);
          int ilit16AE#1 = 6;
          int mulRes16AF#6 = IMul(_t1433,ilit16AE);
          int ilit16B0#1 = 0;
          int addRes16B1#1 = IAdd(mulRes16AF,ilit16B0);
          int idx16B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B1);
          int ilit16B3#1 = 1;
          int addRes16B4#1 = IAdd(mulRes16AF,ilit16B3);
          int idx16B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B4);
          int ilit16B6#1 = 2;
          int addRes16B7#1 = IAdd(mulRes16AF,ilit16B6);
          int idx16B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B7);
          int ilit16B9#1 = 3;
          int addRes16BA#1 = IAdd(mulRes16AF,ilit16B9);
          int idx16BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BA);
          int ilit16BC#1 = 4;
          int addRes16BD#1 = IAdd(mulRes16AF,ilit16BC);
          int idx16BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BD);
          int ilit16BF#1 = 5;
          int addRes16C0#1 = IAdd(mulRes16AF,ilit16BF);
          int idx16C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16C0);
          int[6] seq16C2#1 = <int[6]>{idx16B2,idx16B5,idx16B8,idx16BB,idx16BE,idx16C1};
          int[6] femIndicies16AD#6 = seq16C2;
          int ilit16DA#7 = 1;
          int ilit16DB#1 = 0;
          int idx16DC#1 = Subscript<int>(femIndicies16AD,ilit16DB);
          int mulRes16DD#1 = IMul(ilit16DA,idx16DC);
          int idx16DE#1 = Subscript<int>(femIndicies16AD,ilit16DA);
          int mulRes16DF#1 = IMul(ilit16DA,idx16DE);
          int ilit16E0#1 = 2;
          int idx16E1#1 = Subscript<int>(femIndicies16AD,ilit16E0);
          int mulRes16E2#1 = IMul(ilit16DA,idx16E1);
          int ilit16E3#1 = 3;
          int idx16E4#1 = Subscript<int>(femIndicies16AD,ilit16E3);
          int mulRes16E5#1 = IMul(ilit16DA,idx16E4);
          int ilit16E6#1 = 4;
          int idx16E7#1 = Subscript<int>(femIndicies16AD,ilit16E6);
          int mulRes16E8#1 = IMul(ilit16DA,idx16E7);
          int ilit16E9#1 = 5;
          int idx16EA#1 = Subscript<int>(femIndicies16AD,ilit16E9);
          int mulRes16EB#1 = IMul(ilit16DA,idx16EA);
          real dof16EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DD);
          real dof16ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DF);
          real dof16EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E2);
          real dof16EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E5);
          real dof16F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E8);
          real dof16F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16EB);
          tensor[6] dofs16F2#1 = <tensor[6]>[dof16EC,dof16ED,dof16EE,dof16EF,dof16F0,dof16F1];
          tensor[6] femDofs16D9#4 = dofs16F2;
          real varAcc170E#2 = VIndex<2,0>(refPos16AB);
          real varAcc170F#2 = VIndex<2,1>(refPos16AB);
          real coeff1710#2 = 0.2e1;
          real iden1711#3 = varAcc170E;
          real prod21712#1 = RMul(iden1711,varAcc170E);
          real one1713#7 = 0.1e1;
          real prod1714#2 = RMul(prod21712,one1713);
          real coeff1715#3 = 0.4e1;
          real iden1716#3 = varAcc170F;
          real prod1717#2 = RMul(iden1711,iden1716);
          real coeff1718#2 = -0.3e1;
          real prod1719#3 = RMul(iden1711,one1713);
          real prod2171A#1 = RMul(iden1716,varAcc170F);
          real prod171B#1 = RMul(one1713,prod2171A);
          real prod171C#3 = RMul(one1713,iden1716);
          real prod171D#1 = RMul(one1713,one1713);
          real mult171E#1 = RMul(one1713,prod171D);
          real mult171F#1 = RMul(coeff1718,prod171C);
          real mult1720#2 = RMul(coeff1710,prod171B);
          real mult1721#1 = RMul(coeff1718,prod1719);
          real mult1722#2 = RMul(coeff1715,prod1717);
          real mult1723#2 = RMul(coeff1710,prod1714);
          real sum1724#1 = RAdd(mult1722,mult1723);
          real sum1725#1 = RAdd(mult1721,sum1724);
          real sum1726#1 = RAdd(mult1720,sum1725);
          real sum1727#1 = RAdd(mult171F,sum1726);
          real sum1728#1 = RAdd(mult171E,sum1727);
          real intermediate1729#1 = sum1728;
          real coeff172A#2 = -0.1e1;
          real mult172B#1 = RMul(coeff172A,prod1719);
          real sum172C#1 = RAdd(mult172B,mult1723);
          real intermediate172D#1 = sum172C;
          real mult172E#1 = RMul(coeff172A,prod171C);
          real sum172F#1 = RAdd(mult172E,mult1720);
          real intermediate1730#1 = sum172F;
          real coeff1731#2 = -0.4e1;
          real mult1732#1 = RMul(coeff1715,prod171C);
          real mult1733#2 = RMul(coeff1731,prod1717);
          real sum1734#1 = RAdd(mult1732,mult1733);
          real intermediate1735#1 = sum1734;
          real mult1736#1 = RMul(coeff1715,prod1719);
          real mult1737#1 = RMul(coeff1731,prod1714);
          real sum1738#1 = RAdd(mult1733,mult1737);
          real sum1739#1 = RAdd(mult1736,sum1738);
          real intermediate173A#1 = sum1739;
          tensor[6] intermediateCons173B#1 = <tensor[6]>[intermediate1729,intermediate172D,intermediate1730,mult1722,intermediate1735,intermediate173A];
          tensor[6] basisResult170D#1 = intermediateCons173B;
          real compositionl176B#1 = VDot<6>(femDofs16D9,basisResult170D);
          real f0176E#5 = RSub(compositionl176B,_t1439);
          real _t1771#1 = VIndex<3,0>(rayVec1404);
          real _t1773#1 = VIndex<3,1>(rayVec1404);
          tensor[2] _t1775#2 = <tensor[2]>[_t1771,_t1773];
          real _t1777#2 = VIndex<3,2>(rayVec1404);
          int _t1779#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1414);
          real _t177B#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t1435,_t1779);
          real varAcc177E#1 = VIndex<2,0>(refPos16AB);
          real varAcc177F#1 = VIndex<2,1>(refPos16AB);
          real coeff1780#3 = 0.4e1;
          real iden1781#1 = varAcc177E;
          real one1782#4 = 0.1e1;
          real prod1783#3 = RMul(iden1781,one1782);
          real iden1784#1 = varAcc177F;
          real prod1785#2 = RMul(one1782,iden1784);
          real coeff1786#1 = -0.3e1;
          real prod1787#3 = RMul(one1782,one1782);
          real mult1788#1 = RMul(coeff1786,prod1787);
          real mult1789#3 = RMul(coeff1780,prod1785);
          real mult178A#3 = RMul(coeff1780,prod1783);
          real sum178B#1 = RAdd(mult1789,mult178A);
          real sum178C#2 = RAdd(mult1788,sum178B);
          real intermediate178D#1 = sum178C;
          real coeff178E#1 = -0.1e1;
          real mult178F#2 = RMul(coeff178E,prod1787);
          real sum1790#1 = RAdd(mult178F,mult178A);
          real intermediate1791#1 = sum1790;
          real basisEval1792#2 = 0.e0;
          real coeff1793#2 = -0.4e1;
          real basisEval1794#2 = RMul(coeff1793,prod1785);
          real coeff1795#1 = -0.8e1;
          real mult1796#2 = RMul(coeff1780,prod1787);
          real mult1797#1 = RMul(coeff1795,prod1783);
          real sum1798#1 = RAdd(basisEval1794,mult1797);
          real sum1799#1 = RAdd(mult1796,sum1798);
          real intermediate179A#1 = sum1799;
          real intermediate179B#1 = sum178C;
          real sum179C#1 = RAdd(mult178F,mult1789);
          real intermediate179D#1 = sum179C;
          real mult179E#2 = RMul(coeff1793,prod1783);
          real sum179F#1 = RAdd(mult1796,mult179E);
          real intermediate17A0#1 = sum179F;
          tensor[6] intermediateCons17A1#1 = <tensor[6]>[intermediate178D,intermediate1791,basisEval1792,mult1789,basisEval1794,intermediate179A];
          tensor[6] intermediateCons17A2#1 = <tensor[6]>[intermediate179B,basisEval1792,intermediate179D,mult178A,intermediate17A0,mult179E];
          tensor[2,6] intermediateCons17A3#1 = <tensor[2,6]>[intermediateCons17A1,intermediateCons17A2];
          tensor[2,6] basisResult177D#2 = intermediateCons17A3;
          tensor[6] projParam17CC#1 = ProjectLast<tensor[2,6],[0]>(basisResult177D);
          real vdot17CD#1 = VDot<6>(femDofs16D9,projParam17CC);
          tensor[6] projParam17CE#1 = ProjectLast<tensor[2,6],[1]>(basisResult177D);
          real vdot17CF#1 = VDot<6>(femDofs16D9,projParam17CE);
          tensor[2] compositionl17CB#2 = <tensor[2]>[vdot17CD,vdot17CF];
          int ilit17D7#1 = 3;
          int mulRes17D8#3 = IMul(_t1437,ilit17D7);
          int ilit17D9#1 = 0;
          int addRes17DA#1 = IAdd(mulRes17D8,ilit17D9);
          int idx17DB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DA);
          int ilit17DC#1 = 1;
          int addRes17DD#1 = IAdd(mulRes17D8,ilit17DC);
          int idx17DE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DD);
          int ilit17DF#1 = 2;
          int addRes17E0#1 = IAdd(mulRes17D8,ilit17DF);
          int idx17E1#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17E0);
          int[3] seq17E2#1 = <int[3]>{idx17DB,idx17DE,idx17E1};
          int[3] femIndicies17D6#3 = seq17E2;
          int ilit17F1#4 = 0;
          int ilit17F2#4 = 2;
          int idx17F3#1 = Subscript<int>(femIndicies17D6,ilit17F1);
          int mulRes17F4#2 = IMul(ilit17F2,idx17F3);
          int addRes17F5#1 = IAdd(ilit17F1,mulRes17F4);
          int ilit17F6#4 = 1;
          int addRes17F7#1 = IAdd(ilit17F6,mulRes17F4);
          real dof_load17F8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F5);
          real dof_load17F9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F7);
          tensor[2] interCons17FA#1 = <tensor[2]>[dof_load17F8,dof_load17F9];
          int idx17FB#1 = Subscript<int>(femIndicies17D6,ilit17F6);
          int mulRes17FC#2 = IMul(ilit17F2,idx17FB);
          int addRes17FD#1 = IAdd(ilit17F1,mulRes17FC);
          int addRes17FE#1 = IAdd(ilit17F6,mulRes17FC);
          real dof_load17FF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FD);
          real dof_load1800#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FE);
          tensor[2] interCons1801#1 = <tensor[2]>[dof_load17FF,dof_load1800];
          int idx1802#1 = Subscript<int>(femIndicies17D6,ilit17F2);
          int mulRes1803#2 = IMul(ilit17F2,idx1802);
          int addRes1804#1 = IAdd(ilit17F1,mulRes1803);
          int addRes1805#1 = IAdd(ilit17F6,mulRes1803);
          real dof_load1806#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1804);
          real dof_load1807#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1805);
          tensor[2] interCons1808#1 = <tensor[2]>[dof_load1806,dof_load1807];
          tensor[3,2] dofs1809#1 = <tensor[3,2]>[interCons17FA,interCons1801,interCons1808];
          tensor[3,2] femDofs17F0#18 = dofs1809;
          real varAcc1825#0 = VIndex<2,0>(refPos16AB);
          real varAcc1826#0 = VIndex<2,1>(refPos16AB);
          real coeff1827#1 = -0.1e1;
          real one1828#3 = 0.1e1;
          real prod1829#2 = RMul(one1828,one1828);
          real basisEval182A#2 = RMul(coeff1827,prod1829);
          real basisEval182B#2 = RMul(one1828,prod1829);
          real basisEval182C#2 = 0.e0;
          tensor[3] intermediateCons182D#1 = <tensor[3]>[basisEval182A,basisEval182B,basisEval182C];
          tensor[3] intermediateCons182E#1 = <tensor[3]>[basisEval182A,basisEval182C,basisEval182B];
          tensor[2,3] intermediateCons182F#1 = <tensor[2,3]>[intermediateCons182D,intermediateCons182E];
          tensor[2,3] basisResult1824#12 = intermediateCons182F;
          real r183D#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs17F0);
          real r183E#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1824);
          real r183F#1 = RMul(r183D,r183E);
          real r1840#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs17F0);
          real r1841#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1824);
          real r1842#1 = RMul(r1840,r1841);
          real r1843#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs17F0);
          real r1844#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1824);
          real r1845#1 = RMul(r1843,r1844);
          real r1846#1 = RAdd(r183F,r1842);
          real r1847#1 = RAdd(r1846,r1845);
          real r1848#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1824);
          real r1849#1 = RMul(r183D,r1848);
          real r184A#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1824);
          real r184B#1 = RMul(r1840,r184A);
          real r184C#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1824);
          real r184D#1 = RMul(r1843,r184C);
          real r184E#1 = RAdd(r1849,r184B);
          real r184F#1 = RAdd(r184E,r184D);
          tensor[2] tensor1850#1 = <tensor[2]>[r1847,r184F];
          real r1851#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs17F0);
          real r1852#1 = RMul(r1851,r183E);
          real r1853#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs17F0);
          real r1854#1 = RMul(r1853,r1841);
          real r1855#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs17F0);
          real r1856#1 = RMul(r1855,r1844);
          real r1857#1 = RAdd(r1852,r1854);
          real r1858#1 = RAdd(r1857,r1856);
          real r1859#1 = RMul(r1851,r1848);
          real r185A#1 = RMul(r1853,r184A);
          real r185B#1 = RMul(r1855,r184C);
          real r185C#1 = RAdd(r1859,r185A);
          real r185D#1 = RAdd(r185C,r185B);
          tensor[2] tensor185E#1 = <tensor[2]>[r1858,r185D];
          tensor[2,2] probe_l_11183C#4 = <tensor[2,2]>[tensor1850,tensor185E];
          real realLit1884#4 = 0.e0;
          real r1885#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_11183C);
          real r1886#1 = RMul(realLit1884,r1885);
          real realLit1887#2 = -0.1e1;
          real r1888#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_11183C);
          real r1889#1 = RMul(realLit1887,r1888);
          real r188A#1 = RAdd(r1886,r1889);
          real r188B#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_11183C);
          real r188C#1 = RMul(realLit1884,r188B);
          real r188D#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_11183C);
          real r188E#1 = RMul(realLit1887,r188D);
          real r188F#1 = RAdd(r188C,r188E);
          tensor[2] tensor1890#1 = <tensor[2]>[r188A,r188F];
          real realLit1891#2 = 0.1e1;
          real r1892#1 = RMul(realLit1891,r1885);
          real r1893#1 = RMul(realLit1884,r1888);
          real r1894#1 = RAdd(r1892,r1893);
          real r1895#1 = RMul(realLit1891,r188B);
          real r1896#1 = RMul(realLit1884,r188D);
          real r1897#1 = RAdd(r1895,r1896);
          tensor[2] tensor1898#1 = <tensor[2]>[r1894,r1897];
          tensor[2,2] op1_e3_l_121883#4 = <tensor[2,2]>[tensor1890,tensor1898];
          real r18B1#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs17F0);
          real r18B2#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult1824);
          real r18B3#1 = RMul(r18B1,r18B2);
          real r18B4#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs17F0);
          real r18B5#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult1824);
          real r18B6#1 = RMul(r18B4,r18B5);
          real r18B7#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs17F0);
          real r18B8#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult1824);
          real r18B9#1 = RMul(r18B7,r18B8);
          real r18BA#1 = RAdd(r18B3,r18B6);
          real r18BB#1 = RAdd(r18BA,r18B9);
          real r18BC#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs17F0);
          real r18BD#1 = RMul(r18BC,r18B2);
          real r18BE#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs17F0);
          real r18BF#1 = RMul(r18BE,r18B5);
          real r18C0#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs17F0);
          real r18C1#1 = RMul(r18C0,r18B8);
          real r18C2#1 = RAdd(r18BD,r18BF);
          real r18C3#1 = RAdd(r18C2,r18C1);
          tensor[2] probe_l_1318B0#1 = <tensor[2]>[r18BB,r18C3];
          real r18DA#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs17F0);
          real r18DB#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult1824);
          real r18DC#1 = RMul(r18DA,r18DB);
          real r18DD#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs17F0);
          real r18DE#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult1824);
          real r18DF#1 = RMul(r18DD,r18DE);
          real r18E0#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs17F0);
          real r18E1#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult1824);
          real r18E2#1 = RMul(r18E0,r18E1);
          real r18E3#1 = RAdd(r18DC,r18DF);
          real r18E4#1 = RAdd(r18E3,r18E2);
          real r18E5#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs17F0);
          real r18E6#1 = RMul(r18E5,r18DB);
          real r18E7#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs17F0);
          real r18E8#1 = RMul(r18E7,r18DE);
          real r18E9#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs17F0);
          real r18EA#1 = RMul(r18E9,r18E1);
          real r18EB#1 = RAdd(r18E6,r18E8);
          real r18EC#1 = RAdd(r18EB,r18EA);
          tensor[2] probe_l_1418D9#2 = <tensor[2]>[r18E4,r18EC];
          real realLit1903#2 = 0.e0;
          real r1904#2 = TensorIndex<tensor[2],[0]>(probe_l_1418D9);
          real r1905#1 = RMul(realLit1903,r1904);
          real realLit1906#1 = 0.1e1;
          real r1907#2 = TensorIndex<tensor[2],[1]>(probe_l_1418D9);
          real r1908#1 = RMul(realLit1906,r1907);
          real r1909#1 = RAdd(r1905,r1908);
          real realLit190A#1 = -0.1e1;
          real r190B#1 = RMul(realLit190A,r1904);
          real r190C#1 = RMul(realLit1903,r1907);
          real r190D#1 = RAdd(r190B,r190C);
          tensor[2] op1_e3_l_151902#1 = <tensor[2]>[r1909,r190D];
          real realLit191C#4 = 0.e0;
          real r191D#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_121883);
          real r191E#1 = RMul(realLit191C,r191D);
          real realLit191F#2 = -0.1e1;
          real r1920#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_121883);
          real r1921#1 = RMul(realLit191F,r1920);
          real r1922#1 = RAdd(r191E,r1921);
          real r1923#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_121883);
          real r1924#1 = RMul(realLit191C,r1923);
          real r1925#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_121883);
          real r1926#1 = RMul(realLit191F,r1925);
          real r1927#1 = RAdd(r1924,r1926);
          tensor[2] tensor1928#1 = <tensor[2]>[r1922,r1927];
          real realLit1929#2 = 0.1e1;
          real r192A#1 = RMul(realLit1929,r191D);
          real r192B#1 = RMul(realLit191C,r1920);
          real r192C#1 = RAdd(r192A,r192B);
          real r192D#1 = RMul(realLit1929,r1923);
          real r192E#1 = RMul(realLit191C,r1925);
          real r192F#1 = RAdd(r192D,r192E);
          tensor[2] tensor1930#1 = <tensor[2]>[r192C,r192F];
          tensor[2,2] op1_e3_l_16191B#4 = <tensor[2,2]>[tensor1928,tensor1930];
          real op1_e3_l_171948#4 = VDot<2>(probe_l_1318B0,op1_e3_l_151902);
          real r194C#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_16191B);
          real r194D#1 = RDiv(r194C,op1_e3_l_171948);
          real r194E#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_16191B);
          real r194F#1 = RDiv(r194E,op1_e3_l_171948);
          tensor[2] tensor1950#1 = <tensor[2]>[r194D,r194F];
          real r1951#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_16191B);
          real r1952#1 = RDiv(r1951,op1_e3_l_171948);
          real r1953#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_16191B);
          real r1954#1 = RDiv(r1953,op1_e3_l_171948);
          tensor[2] tensor1955#1 = <tensor[2]>[r1952,r1954];
          tensor[2,2] op1_e3_l_18194B#4 = <tensor[2,2]>[tensor1950,tensor1955];
          real r1963#2 = TensorIndex<tensor[2],[0]>(compositionl17CB);
          real r1964#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_18194B);
          real r1965#1 = RMul(r1963,r1964);
          real r1966#2 = TensorIndex<tensor[2],[1]>(compositionl17CB);
          real r1967#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_18194B);
          real r1968#1 = RMul(r1966,r1967);
          real r1969#1 = RAdd(r1965,r1968);
          real r196A#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_18194B);
          real r196B#1 = RMul(r1963,r196A);
          real r196C#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_18194B);
          real r196D#1 = RMul(r1966,r196C);
          real r196E#1 = RAdd(r196B,r196D);
          tensor[2] op1_e3_l_191962#1 = <tensor[2]>[r1969,r196E];
          real op1_e3_l_20197D#1 = VDot<2>(_t1775,op1_e3_l_191962);
          real op1_e3_l_211980#1 = RSub(op1_e3_l_20197D,_t1777);
          real op1_e3_l_221983#1 = Abs<real>(op1_e3_l_211980);
          real _t1986#1 = RDiv(op1_e3_l_221983,_t177B);
          real _t1989#1 = RSub(e1412,s1410);
          real gradEps198C#6 = Min<real>(_t1986,_t1989);
          tensor[2] op1_e3_l_3198E#1 = VScale<2>(gradEps198C,_t1775);
          tensor[2] _t1991#1 = VAdd<2>(project142D,op1_e3_l_3198E);
          femData:MeshPos callNewtonPos1994#1 = _0994_msh_newtonInverse143C (_t1991,_t1437,_t1435);
          tensor[2] refPos1996#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1994);
          real varAcc1999#2 = VIndex<2,0>(refPos1996);
          real varAcc199A#2 = VIndex<2,1>(refPos1996);
          real coeff199B#2 = 0.2e1;
          real iden199C#3 = varAcc1999;
          real prod2199D#1 = RMul(iden199C,varAcc1999);
          real one199E#7 = 0.1e1;
          real prod199F#2 = RMul(prod2199D,one199E);
          real coeff19A0#3 = 0.4e1;
          real iden19A1#3 = varAcc199A;
          real prod19A2#2 = RMul(iden199C,iden19A1);
          real coeff19A3#2 = -0.3e1;
          real prod19A4#3 = RMul(iden199C,one199E);
          real prod219A5#1 = RMul(iden19A1,varAcc199A);
          real prod19A6#1 = RMul(one199E,prod219A5);
          real prod19A7#3 = RMul(one199E,iden19A1);
          real prod19A8#1 = RMul(one199E,one199E);
          real mult19A9#1 = RMul(one199E,prod19A8);
          real mult19AA#1 = RMul(coeff19A3,prod19A7);
          real mult19AB#2 = RMul(coeff199B,prod19A6);
          real mult19AC#1 = RMul(coeff19A3,prod19A4);
          real mult19AD#2 = RMul(coeff19A0,prod19A2);
          real mult19AE#2 = RMul(coeff199B,prod199F);
          real sum19AF#1 = RAdd(mult19AD,mult19AE);
          real sum19B0#1 = RAdd(mult19AC,sum19AF);
          real sum19B1#1 = RAdd(mult19AB,sum19B0);
          real sum19B2#1 = RAdd(mult19AA,sum19B1);
          real sum19B3#1 = RAdd(mult19A9,sum19B2);
          real intermediate19B4#1 = sum19B3;
          real coeff19B5#2 = -0.1e1;
          real mult19B6#1 = RMul(coeff19B5,prod19A4);
          real sum19B7#1 = RAdd(mult19B6,mult19AE);
          real intermediate19B8#1 = sum19B7;
          real mult19B9#1 = RMul(coeff19B5,prod19A7);
          real sum19BA#1 = RAdd(mult19B9,mult19AB);
          real intermediate19BB#1 = sum19BA;
          real coeff19BC#2 = -0.4e1;
          real mult19BD#1 = RMul(coeff19A0,prod19A7);
          real mult19BE#2 = RMul(coeff19BC,prod19A2);
          real sum19BF#1 = RAdd(mult19BD,mult19BE);
          real intermediate19C0#1 = sum19BF;
          real mult19C1#1 = RMul(coeff19A0,prod19A4);
          real mult19C2#1 = RMul(coeff19BC,prod199F);
          real sum19C3#1 = RAdd(mult19BE,mult19C2);
          real sum19C4#1 = RAdd(mult19C1,sum19C3);
          real intermediate19C5#1 = sum19C4;
          tensor[6] intermediateCons19C6#1 = <tensor[6]>[intermediate19B4,intermediate19B8,intermediate19BB,mult19AD,intermediate19C0,intermediate19C5];
          tensor[6] basisResult1998#1 = intermediateCons19C6;
          real compositionl19F6#1 = VDot<6>(femDofs16D9,basisResult1998);
          real op1_e3_l_1119F9#1 = RSub(compositionl19F6,_t1439);
          real op1_e3_l_1219FC#1 = RMul(gradEps198C,_t1777);
          real f119FF#4 = RSub(op1_e3_l_1119F9,op1_e3_l_1219FC);
          string _t1A02#1 = "vals:";
          tensor[2] _t1A04#2 = <tensor[2]>[f0176E,f119FF];
          string _t1A06#6 = "\n";
          Print<[string,tensor[2],string]>(_t1A02,_t1A04,_t1A06);
          real _t1A09#6 = 0.e0;
          bool _t1A0B#2 = GT<real>(f0176E,_t1A09);
          if _t1A0B then goto JOIN1A10 else goto ASSIGN1AA7
        JOIN1A10:  preds = [COND1A0D,JOIN1AAC]
          int _t1A0E#1 = phi(_t141C,_t1A0F)
          bool _t1A11#2 = GT<real>(f119FF,_t1A09);
          if _t1A11 then goto JOIN1A16 else goto ASSIGN1A9F
        JOIN1A16:  preds = [COND1A13,JOIN1AA4]
          int _t1A14#1 = phi(_t141C,_t1A15)
          int _t1A17#1 = IMul(_t1A0E,_t1A14);
          int _t1A19#4 = 0;
          bool _t1A1B#1 = GT<int>(_t1A17,_t1A19);
          bool _t1A1D#1 = BNot(_t1A1B);
          if _t1A1D then goto COND1A20 else goto ASSIGN1A88
        COND1A20:  preds = [COND1A1F]
          if _t1A0B then goto JOIN1A23 else goto ASSIGN1A82
        JOIN1A23:  preds = [COND1A20,JOIN1A86]
          int _t1A21#1 = phi(_t141C,_t1A22)
          if _t1A11 then goto JOIN1A27 else goto ASSIGN1A7C
        JOIN1A27:  preds = [COND1A24,JOIN1A80]
          int _t1A25#1 = phi(_t141C,_t1A26)
          int _t1A28#1 = IMul(_t1A21,_t1A25);
          bool _t1A2A#1 = EQ<int>(_t1A28,_t1A19);
          if _t1A2A then goto ASSIGN1A2E else goto JOIN1A30
        ASSIGN1A2E:  preds = [COND1A2C]
          string _t1A2D#1 = "Warn: 0 update\n";
          Print<[string]>(_t1A2D);
          goto JOIN1A30
        JOIN1A30:  preds = [MASSIGN1A2F,COND1A2C]
          string _t1A31#1 = "update with interval:";
          Print<[string,real,string]>(_t1A31,gradEps198C,_t1A06);
          string _t1A34#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1A34,_t1A04,_t1A06);
          string _t1A37#1 = "New interval:";
          real _t1A39#2 = RAdd(s1410,gradEps198C);
          tensor[2] _t1A3C#2 = <tensor[2]>[s1410,_t1A39];
          Print<[string,tensor[2],string]>(_t1A37,_t1A3C,_t1A06);
          tensor[2][] intervals1A3F#1 = Append<tensor[2]>(intervals1418,_t1A3C);
          femData:MeshCell[] newCells1A41#1 = Append<femData:MeshCell>(newCells141A,cc1414);
          goto JOIN1A47
        JOIN1A47:  preds = [ASSIGN1A42,ASSIGN1A9D]
          femData:MeshCell[] newCells1A43#2 = phi(newCells1A41,newCells141A)
          tensor[2][] intervals1A44#2 = phi(intervals1A3F,intervals1418)
          real s1A45#3 = phi(_t1A39,s1A46)
          bool _t1A48#1 = GTE<real>(s1A45,e1412);
          if _t1A48 then goto ASSIGN1A4C else goto JOIN1A66
        ASSIGN1A4C:  preds = [COND1A4A]
          int itter1A4B#4 = IAdd(itter140C,_t141C);
          bool _t1A4D#1 = GTE<int>(itter1A4B,len140A);
          if _t1A4D then goto SAVE1A50 else goto ASSIGN1A71
        SAVE1A50:  preds = [COND1A4F]
          self.itter = itter1A4B;
          self.s = s1A45;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          stabilize
          goto JOIN1A5F
        JOIN1A5F:  preds = [*STABILIZE1A54,ASSIGN1A7A]
          femData:FuncCell fc1A55#1 = phi(_t1A56)
          femData:MeshCell cc1A57#1 = phi(cc1A58)
          real e1A59#1 = phi(e1A5A)
          real s1A5B#1 = phi(s1A5C)
          tensor[2] interval1A5D#1 = phi(interval1A5E)
          goto JOIN1A66
        JOIN1A66:  preds = [JOIN1A5F,COND1A4A]
          femData:FuncCell fc1A60#1 = phi(fc1A55,fc1416)
          femData:MeshCell cc1A61#1 = phi(cc1A57,cc1414)
          real e1A62#1 = phi(e1A59,e1412)
          real s1A63#1 = phi(s1A5B,s1A45)
          tensor[2] interval1A64#1 = phi(interval1A5D,interval140E)
          int itter1A65#1 = phi(itter1A4B,itter140C)
          self.itter = itter1A65;
          self.interval = interval1A64;
          self.s = s1A63;
          self.e = e1A62;
          self.cc = cc1A61;
          self.fc = fc1A60;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          active
        ASSIGN1A71:  preds = [COND1A4F]
          int _t1A70#2 = IAdd(offset1408,itter1A4B);
          tensor[2] interval1A5E#3 = Subscript<tensor[2][]>(times1400,_t1A70);
          int _t1A73#1 = Subscript<int[]>(cells1402,_t1A70);
          femData:MeshCell cc1A58#2 = Subscript<femData:MeshCell[]>(0cell_a13FC,_t1A73);
          real s1A5C#1 = VIndex<2,0>(interval1A5E);
          real e1A5A#1 = VIndex<2,1>(interval1A5E);
          int _t1A78#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1A58);
          femData:FuncCell _t1A56#1 = LoadFem<femData:FuncCell>(c13FE,_t1A78);
          goto JOIN1A5F
        ASSIGN1A7C:  preds = [COND1A24]
          bool _t1A7B#1 = LT<real>(f119FF,_t1A09);
          if _t1A7B then goto ASSIGN1A7F else goto JOIN1A80
        ASSIGN1A7F:  preds = [COND1A7D]
          int _t1A7E#1 = -1;
          goto JOIN1A80
        JOIN1A80:  preds = [ASSIGN1A7F,COND1A7D]
          int _t1A26#1 = phi(_t1A7E,_t1A19)
          goto JOIN1A27
        ASSIGN1A82:  preds = [COND1A20]
          bool _t1A81#1 = LT<real>(f0176E,_t1A09);
          if _t1A81 then goto ASSIGN1A85 else goto JOIN1A86
        ASSIGN1A85:  preds = [COND1A83]
          int _t1A84#1 = -1;
          goto JOIN1A86
        JOIN1A86:  preds = [ASSIGN1A85,COND1A83]
          int _t1A22#1 = phi(_t1A84,_t1A19)
          goto JOIN1A23
        ASSIGN1A88:  preds = [COND1A1F]
          real _t1A87#1 = 0.2e1;
          real _t1A89#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t1435,_t1779);
          real op1_e3_l_121A8B#1 = Abs<real>(f0176E);
          real op1_e3_l_131A8E#1 = RMul(_t1A87,_t1A89);
          real _t1A91#1 = RDiv(op1_e3_l_121A8B,op1_e3_l_131A8E);
          real epsUpdate1A94#2 = Max<real>(gradEps198C,_t1A91);
          string _t1A96#1 = "update L:";
          Print<[string,real,string]>(_t1A96,epsUpdate1A94,_t1A06);
          string _t1A99#1 = "update G:";
          Print<[string,real,string]>(_t1A99,gradEps198C,_t1A06);
          real s1A46#1 = RAdd(s1410,epsUpdate1A94);
          goto JOIN1A47
        ASSIGN1A9F:  preds = [COND1A13]
          bool _t1A9E#1 = LT<real>(f119FF,_t1A09);
          if _t1A9E then goto ASSIGN1AA2 else goto ASSIGN1AA5
        ASSIGN1AA2:  preds = [COND1AA0]
          int _t1AA1#1 = -1;
          goto JOIN1AA4
        JOIN1AA4:  preds = [ASSIGN1AA2,ASSIGN1AA5]
          int _t1A15#1 = phi(_t1AA1,_t1AA3)
          goto JOIN1A16
        ASSIGN1AA5:  preds = [COND1AA0]
          int _t1AA3#1 = 0;
          goto JOIN1AA4
        ASSIGN1AA7:  preds = [COND1A0D]
          bool _t1AA6#1 = LT<real>(f0176E,_t1A09);
          if _t1AA6 then goto ASSIGN1AAA else goto ASSIGN1AAD
        ASSIGN1AAA:  preds = [COND1AA8]
          int _t1AA9#1 = -1;
          goto JOIN1AAC
        JOIN1AAC:  preds = [ASSIGN1AAA,ASSIGN1AAD]
          int _t1A0F#1 = phi(_t1AA9,_t1AAB)
          goto JOIN1A10
        ASSIGN1AAD:  preds = [COND1AA8]
          int _t1AAB#1 = 0;
          goto JOIN1AAC
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1AAE:  preds = []
      int iresU1AAF#1 = globals.iresU11AD;
      int iresV1AB1#1 = globals.iresV11AE;
      int _t1AB3#2 = 0;
      int _t1AB5#2 = 1;
      int _t1AB7#1 = ISub(iresU1AAF,_t1AB5);
      int[] _t1AB9#1 = Range(_t1AB3,_t1AB7);
    FOREACH1ABC:  preds = [ASSIGN1ABA,NEXT1AC5]
      foreach (vi1ABB in _t1AB9) on exit goto RETURN1AC6
      int _t1ABD#1 = ISub(iresV1AB1,_t1AB5);
      int[] _t1ABF#1 = Range(_t1AB3,_t1ABD);
    FOREACH1AC2:  preds = [ASSIGN1AC0,NEXT1AC4]
      foreach (ui1AC1 in _t1ABF) on exit goto NEXT1AC5
      new ray(ui1AC1,vi1ABB);
      goto FOREACH1AC2
    NEXT1AC5:  preds = [FOREACH1AC2]
      goto FOREACH1ABC
    RETURN1AC6:  preds = [FOREACH1ABC]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a11A4 (a) = <no-default>
  input 0b0412_intermedateGlobal11A5 (b) = <no-default>
  input 0c0414_intermedateGlobal11A6 (c) = <no-default>
  input isoval11A7 (isoval) = <default>
  input thick11A8 (thick) = <default>
  input camEye11A9 (camEye) = <default>
  input camAt11AA (camAt) = <default>
  input camUp11AB (camUp) = <default>
  input camFOV11AC (camFOV) = <default>
  input iresU11AD (iresU) = <default>
  input iresV11AE (iresV) = <default>
  input camNear11AF (camNear) = <default>
  input camFar11B0 (camFar) = <default>
  input refStep11B1 (refStep) = <default>
  input rayStep11B2 (rayStep) = <default>
  input lightVsp11B3 (lightVsp) = <default>
  input phongKa11B4 (phongKa) = <default>
  input phongKd11B5 (phongKd) = <default>
  input debug11B6 (debug) = <default>
  input debugU11B7 (debugU) = <default>
  input debugV11B8 (debugV) = <default>
  input eps11B9 (eps) = <default>
  input indecies11BA (indecies) = <no-default>
  input times11BB (times) = <no-default>
  input cells11BC (cells) = <no-default>
  global femData:MeshCell[] 0cell_a11BD
  global femData:FemFunc c11BE
  global tensor[3] camU11BF
  global tensor[3] camV11C0
  global real camVmax11C1
  global real camUmax11C2
  global tensor[3] rayVec11C3
## functions
  function femData:MeshPos _0994_msh_newtonInverse143C (tensor[2] pos143D#3, int cellInt143E#2, femData:Mesh mesh143F#12) {
    ENTRY1440:  preds = []
      real _t1441#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn1443#1 = <tensor[2]>[_t1441,_t1441];
      int _t1445#1 = 0;
      int _t1447#1 = 16;
      int[] _t1449#1 = Range(_t1445,_t1447);
    FOREACH144C:  preds = [ASSIGN144A,NEXT16A3]
      foreach (itter144B in _t1449) on exit goto ASSIGN16A8
        tensor[2] xn15C3#3 = phi(xn1443,xn1637)
      int ilit144E#1 = 3;
      int mulRes144F#3 = IMul(cellInt143E,ilit144E);
      int addRes1451#1 = mulRes144F;
      int idx1452#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1451);
      int ilit1453#1 = 1;
      int addRes1454#1 = IAdd(mulRes144F,ilit1453);
      int idx1455#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1454);
      int ilit1456#1 = 2;
      int addRes1457#1 = IAdd(mulRes144F,ilit1456);
      int idx1458#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1457);
      int ilit1469#3 = 2;
      int idx146A#1 = idx1452;
      int mulRes146B#2 = IMul(ilit1469,idx146A);
      int addRes146C#1 = mulRes146B;
      int ilit146D#3 = 1;
      int addRes146E#1 = IAdd(ilit146D,mulRes146B);
      real dof_load146F#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146C);
      real dof_load1470#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146E);
      int idx1472#1 = idx1455;
      int mulRes1473#2 = IMul(ilit1469,idx1472);
      int addRes1474#1 = mulRes1473;
      int addRes1475#1 = IAdd(ilit146D,mulRes1473);
      real dof_load1476#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1474);
      real dof_load1477#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1475);
      int idx1479#1 = idx1458;
      int mulRes147A#2 = IMul(ilit1469,idx1479);
      int addRes147B#1 = mulRes147A;
      int addRes147C#1 = IAdd(ilit146D,mulRes147A);
      real dof_load147D#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147B);
      real dof_load147E#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147C);
      real coeff149E#1 = -0.1e1;
      real one149F#3 = 0.1e1;
      real prod14A0#2 = RMul(one149F,one149F);
      real basisEval14A1#4 = RMul(coeff149E,prod14A0);
      real basisEval14A2#4 = RMul(one149F,prod14A0);
      real basisEval14A3#4 = 0.e0;
      real r14B4#2 = dof_load146F;
      real r14B5#2 = basisEval14A1;
      real r14B6#1 = RMul(r14B4,r14B5);
      real r14B7#2 = dof_load1476;
      real r14B8#2 = basisEval14A2;
      real r14B9#1 = RMul(r14B7,r14B8);
      real r14BA#2 = dof_load147D;
      real r14BB#2 = basisEval14A3;
      real r14BC#1 = RMul(r14BA,r14BB);
      real r14BD#1 = RAdd(r14B6,r14B9);
      real r14BE#1 = RAdd(r14BD,r14BC);
      real r14BF#2 = basisEval14A1;
      real r14C0#1 = RMul(r14B4,r14BF);
      real r14C1#2 = basisEval14A3;
      real r14C2#1 = RMul(r14B7,r14C1);
      real r14C3#2 = basisEval14A2;
      real r14C4#1 = RMul(r14BA,r14C3);
      real r14C5#1 = RAdd(r14C0,r14C2);
      real r14C6#1 = RAdd(r14C5,r14C4);
      real r14C8#2 = dof_load1470;
      real r14C9#1 = RMul(r14C8,r14B5);
      real r14CA#2 = dof_load1477;
      real r14CB#1 = RMul(r14CA,r14B8);
      real r14CC#2 = dof_load147E;
      real r14CD#1 = RMul(r14CC,r14BB);
      real r14CE#1 = RAdd(r14C9,r14CB);
      real r14CF#1 = RAdd(r14CE,r14CD);
      real r14D0#1 = RMul(r14C8,r14BF);
      real r14D1#1 = RMul(r14CA,r14C1);
      real r14D2#1 = RMul(r14CC,r14C3);
      real r14D3#1 = RAdd(r14D0,r14D1);
      real r14D4#1 = RAdd(r14D3,r14D2);
      real realLit14FB#4 = 0.e0;
      real r14FC#2 = r14BE;
      real r14FD#1 = RMul(realLit14FB,r14FC);
      real realLit14FE#2 = -0.1e1;
      real r14FF#2 = r14CF;
      real r1500#1 = RMul(realLit14FE,r14FF);
      real r1501#1 = RAdd(r14FD,r1500);
      real r1502#2 = r14C6;
      real r1503#1 = RMul(realLit14FB,r1502);
      real r1504#2 = r14D4;
      real r1505#1 = RMul(realLit14FE,r1504);
      real r1506#1 = RAdd(r1503,r1505);
      real realLit1508#2 = 0.1e1;
      real r1509#1 = RMul(realLit1508,r14FC);
      real r150A#1 = RMul(realLit14FB,r14FF);
      real r150B#1 = RAdd(r1509,r150A);
      real r150C#1 = RMul(realLit1508,r1502);
      real r150D#1 = RMul(realLit14FB,r1504);
      real r150E#1 = RAdd(r150C,r150D);
      real r1528#1 = dof_load146F;
      real r1529#2 = basisEval14A1;
      real r152A#1 = RMul(r1528,r1529);
      real r152B#1 = dof_load1476;
      real r152C#2 = basisEval14A2;
      real r152D#1 = RMul(r152B,r152C);
      real r152E#1 = dof_load147D;
      real r152F#2 = basisEval14A3;
      real r1530#1 = RMul(r152E,r152F);
      real r1531#1 = RAdd(r152A,r152D);
      real r1532#1 = RAdd(r1531,r1530);
      real r1533#1 = dof_load1470;
      real r1534#1 = RMul(r1533,r1529);
      real r1535#1 = dof_load1477;
      real r1536#1 = RMul(r1535,r152C);
      real r1537#1 = dof_load147E;
      real r1538#1 = RMul(r1537,r152F);
      real r1539#1 = RAdd(r1534,r1536);
      real r153A#1 = RAdd(r1539,r1538);
      tensor[2] probe_l_121527#1 = <tensor[2]>[r1532,r153A];
      real r1551#1 = dof_load146F;
      real r1552#2 = basisEval14A1;
      real r1553#1 = RMul(r1551,r1552);
      real r1554#1 = dof_load1476;
      real r1555#2 = basisEval14A3;
      real r1556#1 = RMul(r1554,r1555);
      real r1557#1 = dof_load147D;
      real r1558#2 = basisEval14A2;
      real r1559#1 = RMul(r1557,r1558);
      real r155A#1 = RAdd(r1553,r1556);
      real r155B#1 = RAdd(r155A,r1559);
      real r155C#1 = dof_load1470;
      real r155D#1 = RMul(r155C,r1552);
      real r155E#1 = dof_load1477;
      real r155F#1 = RMul(r155E,r1555);
      real r1560#1 = dof_load147E;
      real r1561#1 = RMul(r1560,r1558);
      real r1562#1 = RAdd(r155D,r155F);
      real r1563#1 = RAdd(r1562,r1561);
      real realLit157A#2 = 0.e0;
      real r157B#2 = r155B;
      real r157C#1 = RMul(realLit157A,r157B);
      real realLit157D#1 = 0.1e1;
      real r157E#2 = r1563;
      real r157F#1 = RMul(realLit157D,r157E);
      real r1580#1 = RAdd(r157C,r157F);
      real realLit1581#1 = -0.1e1;
      real r1582#1 = RMul(realLit1581,r157B);
      real r1583#1 = RMul(realLit157A,r157E);
      real r1584#1 = RAdd(r1582,r1583);
      tensor[2] op1_e3_l_141579#1 = <tensor[2]>[r1580,r1584];
      real realLit1593#4 = 0.e0;
      real r1594#2 = r1501;
      real r1595#1 = RMul(realLit1593,r1594);
      real realLit1596#2 = -0.1e1;
      real r1597#2 = r1506;
      real r1598#1 = RMul(realLit1596,r1597);
      real r1599#1 = RAdd(r1595,r1598);
      real r159A#2 = r150B;
      real r159B#1 = RMul(realLit1593,r159A);
      real r159C#2 = r150E;
      real r159D#1 = RMul(realLit1596,r159C);
      real r159E#1 = RAdd(r159B,r159D);
      real realLit15A0#2 = 0.1e1;
      real r15A1#1 = RMul(realLit15A0,r1594);
      real r15A2#1 = RMul(realLit1593,r1597);
      real r15A3#1 = RAdd(r15A1,r15A2);
      real r15A4#1 = RMul(realLit15A0,r159A);
      real r15A5#1 = RMul(realLit1593,r159C);
      real r15A6#1 = RAdd(r15A4,r15A5);
      real op1_e3_l_1615BF#4 = VDot<2>(probe_l_121527,op1_e3_l_141579);
      real varAcc15C4#1 = VIndex<2,0>(xn15C3);
      real varAcc15C5#1 = VIndex<2,1>(xn15C3);
      real coeff15C6#2 = -0.1e1;
      real iden15C7#1 = varAcc15C4;
      real one15C8#7 = 0.1e1;
      real prod15C9#2 = RMul(iden15C7,one15C8);
      real iden15CA#1 = varAcc15C5;
      real prod15CB#2 = RMul(one15C8,iden15CA);
      real prod15CC#1 = RMul(one15C8,one15C8);
      real mult15CD#1 = RMul(one15C8,prod15CC);
      real mult15CE#1 = RMul(coeff15C6,prod15CB);
      real mult15CF#1 = RMul(coeff15C6,prod15C9);
      real sum15D0#1 = RAdd(mult15CE,mult15CF);
      real sum15D1#1 = RAdd(mult15CD,sum15D0);
      real intermediate15D2#2 = sum15D1;
      real basisEval15D3#2 = RMul(one15C8,prod15C9);
      real basisEval15D4#2 = RMul(one15C8,prod15CB);
      real r15EA#1 = dof_load146F;
      real r15EB#2 = intermediate15D2;
      real r15EC#1 = RMul(r15EA,r15EB);
      real r15ED#1 = dof_load1476;
      real r15EE#2 = basisEval15D3;
      real r15EF#1 = RMul(r15ED,r15EE);
      real r15F0#1 = dof_load147D;
      real r15F1#2 = basisEval15D4;
      real r15F2#1 = RMul(r15F0,r15F1);
      real r15F3#1 = RAdd(r15EC,r15EF);
      real r15F4#1 = RAdd(r15F3,r15F2);
      real r15F5#1 = dof_load1470;
      real r15F6#1 = RMul(r15F5,r15EB);
      real r15F7#1 = dof_load1477;
      real r15F8#1 = RMul(r15F7,r15EE);
      real r15F9#1 = dof_load147E;
      real r15FA#1 = RMul(r15F9,r15F1);
      real r15FB#1 = RAdd(r15F6,r15F8);
      real r15FC#1 = RAdd(r15FB,r15FA);
      tensor[2] probe_l_1715E9#1 = <tensor[2]>[r15F4,r15FC];
      real r1613#1 = r1599;
      real r1614#1 = RDiv(r1613,op1_e3_l_1615BF);
      real r1615#1 = r159E;
      real r1616#1 = RDiv(r1615,op1_e3_l_1615BF);
      tensor[2] tensor1617#2 = <tensor[2]>[r1614,r1616];
      real r1618#1 = r15A3;
      real r1619#1 = RDiv(r1618,op1_e3_l_1615BF);
      real r161A#1 = r15A6;
      real r161B#1 = RDiv(r161A,op1_e3_l_1615BF);
      tensor[2] tensor161C#2 = <tensor[2]>[r1619,r161B];
      tensor[2] op1_e3_l_191629#2 = VSub<2>(probe_l_1715E9,pos143D);
      tensor[2] projParam162D#1 = tensor1617;
      real vdot162E#1 = VDot<2>(projParam162D,op1_e3_l_191629);
      tensor[2] projParam162F#1 = tensor161C;
      real vdot1630#1 = VDot<2>(projParam162F,op1_e3_l_191629);
      tensor[2] op1_e3_l_20162C#1 = <tensor[2]>[vdot162E,vdot1630];
      tensor[2] xn1637#4 = VSub<2>(xn15C3,op1_e3_l_20162C);
      real _t163A#2 = 0.1e-7;
      real _t163C#1 = RMul(_t163A,_t163A);
      real r1640#1 = dof_load146F;
      real r1641#2 = intermediate15D2;
      real r1642#1 = RMul(r1640,r1641);
      real r1643#1 = dof_load1476;
      real r1644#2 = basisEval15D3;
      real r1645#1 = RMul(r1643,r1644);
      real r1646#1 = dof_load147D;
      real r1647#2 = basisEval15D4;
      real r1648#1 = RMul(r1646,r1647);
      real r1649#1 = RAdd(r1642,r1645);
      real r164A#1 = RAdd(r1649,r1648);
      real r164B#1 = dof_load1470;
      real r164C#1 = RMul(r164B,r1641);
      real r164D#1 = dof_load1477;
      real r164E#1 = RMul(r164D,r1644);
      real r164F#1 = dof_load147E;
      real r1650#1 = RMul(r164F,r1647);
      real r1651#1 = RAdd(r164C,r164E);
      real r1652#1 = RAdd(r1651,r1650);
      tensor[2] probe_l_25163F#1 = <tensor[2]>[r164A,r1652];
      tensor[2] op1_e3_l_271668#2 = VSub<2>(probe_l_25163F,pos143D);
      tensor[2] projParam166C#1 = tensor1617;
      real vdot166D#1 = VDot<2>(projParam166C,op1_e3_l_271668);
      tensor[2] projParam166E#1 = tensor161C;
      real vdot166F#1 = VDot<2>(projParam166E,op1_e3_l_271668);
      tensor[2] op1_e3_l_38166B#2 = <tensor[2]>[vdot166D,vdot166F];
      real _t1676#1 = VDot<2>(op1_e3_l_38166B,op1_e3_l_38166B);
      bool _t1679#1 = GTE<real>(_t163C,_t1676);
      if _t1679 then goto ASSIGN167D else goto JOIN16A2
    ASSIGN167D:  preds = [COND167B]
      real _t167C#3 = 0.1e1;
      real _t167E#3 = 0.1e-8;
      real _t1680#1 = RAdd(_t167C,_t167E);
      tensor[2] _t1683#1 = <tensor[2]>[_t167C,_t167C];
      real _t1685#1 = VDot<2>(_t1683,xn1637);
      bool _t1688#1 = GT<real>(_t1680,_t1685);
      tensor[2] _t168A#1 = <tensor[2]>[_t167E,_t167E];
      tensor[2] _t168C#2 = VAdd<2>(_t168A,xn1637);
      real _t168F#1 = VIndex<2,0>(_t168C);
      real _t1691#2 = -0.e0;
      bool _t1693#1 = GT<real>(_t168F,_t1691);
      real _t1695#1 = VIndex<2,1>(_t168C);
      bool _t1697#1 = GT<real>(_t1695,_t1691);
      bool _t1699#1 = BAnd(_t1693,_t1697);
      bool _t169B#1 = BAnd(_t1688,_t1699);
      if _t169B then goto ASSIGN169F else goto ASSIGN16A5
    ASSIGN169F:  preds = [COND169D]
      femData:MeshPos _t169E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh143F,cellInt143E,xn1637,pos143D);
      return _t169E
      goto JOIN16A1
    JOIN16A1:  preds = [*RETURN(_t169E)16A0,*RETURN(_t16A4)16A6]
      goto JOIN16A2
    JOIN16A2:  preds = [*JOIN16A1,COND167B]
      goto FOREACH144C
    ASSIGN16A5:  preds = [COND169D]
      femData:MeshPos _t16A4#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A4
      goto JOIN16A1
    ASSIGN16A8:  preds = [FOREACH144C]
      femData:MeshPos _t16A7#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A7
}
## input initialization
  ENTRY11C4:  preds = []
    real isoval11C5#1 = 0.2e0;
    globals.isoval11A7 = isoval11C5;
    real thick11C8#1 = 0.7e-1;
    globals.thick11A8 = thick11C8;
    real _t11CB#1 = -0.5e0;
    real _t11CD#5 = 0.5e0;
    tensor[3] camEye11CF#1 = <tensor[3]>[_t11CB,_t11CD,_t11CD];
    globals.camEye11A9 = camEye11CF;
    tensor[3] camAt11D2#1 = <tensor[3]>[_t11CD,_t11CD,_t11CD];
    globals.camAt11AA = camAt11D2;
    real _t11D5#2 = 0.e0;
    real _t11D7#2 = 0.1e1;
    tensor[3] camUp11D9#2 = <tensor[3]>[_t11D5,_t11D5,_t11D7];
    globals.camUp11AB = camUp11D9;
    real camFOV11DC#1 = 0.137e2;
    globals.camFOV11AC = camFOV11DC;
    int iresU11DF#2 = 10;
    globals.iresU11AD = iresU11DF;
    globals.iresV11AE = iresU11DF;
    real camNear11E3#1 = -0.2e1;
    globals.camNear11AF = camNear11E3;
    real camFar11E6#1 = 0.5e1;
    globals.camFar11B0 = camFar11E6;
    globals.refStep11B1 = _t11D7;
    real rayStep11EA#1 = 0.1e-1;
    globals.rayStep11B2 = rayStep11EA;
    globals.lightVsp11B3 = camUp11D9;
    real phongKa11EE#1 = 0.1e0;
    globals.phongKa11B4 = phongKa11EE;
    real phongKd11F1#1 = 0.9e0;
    globals.phongKd11B5 = phongKd11F1;
    bool debug11F4#1 = false;
    globals.debug11B6 = debug11F4;
    int debugU11F7#1 = 8;
    globals.debugU11B7 = debugU11F7;
    int debugV11FA#1 = 2;
    globals.debugV11B8 = debugV11FA;
    real eps11FD#1 = 0.1e-8;
    globals.eps11B9 = eps11FD;
    return
## global-variable initialization
  ENTRY1201:  preds = []
    femData:Mesh a1202#3 = globals.a11A4;
    femData:Space 0b0412_intermedateGlobal1204#1 = globals.0b0412_intermedateGlobal11A5;
    femData:FemFunc 0c0414_intermedateGlobal1206#1 = globals.0c0414_intermedateGlobal11A6;
    tensor[3] camEye1208#1 = globals.camEye11A9;
    tensor[3] camAt120A#1 = globals.camAt11AA;
    tensor[3] camUp120C#3 = globals.camUp11AB;
    real camFOV120E#1 = globals.camFOV11AC;
    int iresU1210#1 = globals.iresU11AD;
    int iresV1212#1 = globals.iresV11AE;
    int _t1214#1 = 0;
    int _t1216#1 = 1;
    int _t1218#1 = ExtractFemItem<int,NumCell(Mesh)>(a1202);
    int _t121A#1 = ISub(_t1218,_t1216);
    int[] _t121C#1 = Range(_t1214,_t121A);
    femData:MeshCell[] _t121E#1 = <femData:MeshCell[]>{};
  FOREACH1221:  preds = [ASSIGN121F,NEXT1227]
    foreach (_t1220 in _t121C) on exit goto GASSIGN1228
      femData:MeshCell[] _t1225#2 = phi(_t121E,_t1224)
    femData:MeshCell _t1222#1 = LoadFem<femData:MeshCell>(a1202,_t1220);
    femData:MeshCell[] _t1224#1 = Append<femData:MeshCell>(_t1225,_t1222);
    goto FOREACH1221
  GASSIGN1228:  preds = [FOREACH1221]
    globals.0cell_a11BD = _t1225;
    femData:Space b1229#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal1204,a1202);
    femData:FemFunc c122B#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal1206,b1229);
    globals.c11BE = c122B;
    tensor[3] op1_e3_l_4122E#9 = VSub<3>(camAt120A,camEye1208);
    real op1_e3_l_61231#1 = VDot<3>(op1_e3_l_4122E,op1_e3_l_4122E);
    real op1_e3_l_71234#3 = Sqrt(op1_e3_l_61231);
    real realLit1238#1 = 0.1e1;
    real op1_e3_l_91237#6 = RDiv(realLit1238,op1_e3_l_71234);
    tensor[3] camN123C#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_4122E);
    real realLit1240#3 = 0.e0;
    real r1241#3 = TensorIndex<tensor[3],[0]>(camUp120C);
    real r1242#3 = RMul(realLit1240,r1241);
    real r1243#3 = TensorIndex<tensor[3],[1]>(camUp120C);
    real r1244#3 = RMul(realLit1240,r1243);
    real r1245#3 = TensorIndex<tensor[3],[2]>(camUp120C);
    real r1246#5 = RMul(realLit1240,r1245);
    real r1247#3 = RAdd(r1242,r1244);
    real r1248#3 = RAdd(r1247,r1246);
    real realLit1249#3 = 0.1e1;
    real r124A#1 = RMul(realLit1249,r1245);
    real r124B#1 = RAdd(r1247,r124A);
    real realLit124C#3 = -0.1e1;
    real r124D#1 = RMul(realLit124C,r1243);
    real r124E#1 = RAdd(r1242,r124D);
    real r124F#1 = RAdd(r124E,r1246);
    tensor[3] tensor1250#1 = <tensor[3]>[r1248,r124B,r124F];
    real r1251#1 = RMul(realLit124C,r1245);
    real r1252#1 = RAdd(r1247,r1251);
    real r1253#1 = RMul(realLit1249,r1241);
    real r1254#1 = RAdd(r1253,r1244);
    real r1255#1 = RAdd(r1254,r1246);
    tensor[3] tensor1256#1 = <tensor[3]>[r1252,r1248,r1255];
    real r1257#1 = RMul(realLit1249,r1243);
    real r1258#1 = RAdd(r1242,r1257);
    real r1259#1 = RAdd(r1258,r1246);
    real r125A#1 = RMul(realLit124C,r1241);
    real r125B#1 = RAdd(r125A,r1244);
    real r125C#1 = RAdd(r125B,r1246);
    tensor[3] tensor125D#1 = <tensor[3]>[r1259,r125C,r1248];
    tensor[3] projParam127F#1 = tensor1250;
    real vdot1280#1 = VDot<3>(op1_e3_l_4122E,projParam127F);
    tensor[3] projParam1281#1 = tensor1256;
    real vdot1282#1 = VDot<3>(op1_e3_l_4122E,projParam1281);
    tensor[3] projParam1283#1 = tensor125D;
    real vdot1284#1 = VDot<3>(op1_e3_l_4122E,projParam1283);
    tensor[3] op1_e3_l_17127E#6 = <tensor[3]>[vdot1280,vdot1282,vdot1284];
    real op1_e3_l_34128D#1 = VDot<3>(op1_e3_l_17127E,op1_e3_l_17127E);
    real r1291#1 = RMul(op1_e3_l_91237,op1_e3_l_91237);
    real op1_e3_l_351290#1 = RMul(r1291,op1_e3_l_34128D);
    real op1_e3_l_361295#1 = Sqrt(op1_e3_l_351290);
    tensor[3] op1_e3_l_371298#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_17127E);
    real realLit129C#1 = 0.1e1;
    real op1_e3_l_38129B#2 = RDiv(realLit129C,op1_e3_l_361295);
    tensor[3] camU12A0#1 = VScale<3>(op1_e3_l_38129B,op1_e3_l_371298);
    globals.camU11BF = camU12A0;
    real realLit12A5#3 = 0.e0;
    real r12A6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_4122E);
    real r12A7#3 = RMul(realLit12A5,r12A6);
    real r12A8#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_4122E);
    real r12A9#3 = RMul(realLit12A5,r12A8);
    real r12AA#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_4122E);
    real r12AB#5 = RMul(realLit12A5,r12AA);
    real r12AC#3 = RAdd(r12A7,r12A9);
    real r12AD#3 = RAdd(r12AC,r12AB);
    real realLit12AE#3 = 0.1e1;
    real r12AF#1 = RMul(realLit12AE,r12AA);
    real r12B0#1 = RAdd(r12AC,r12AF);
    real realLit12B1#3 = -0.1e1;
    real r12B2#1 = RMul(realLit12B1,r12A8);
    real r12B3#1 = RAdd(r12A7,r12B2);
    real r12B4#1 = RAdd(r12B3,r12AB);
    tensor[3] tensor12B5#1 = <tensor[3]>[r12AD,r12B0,r12B4];
    real r12B6#1 = RMul(realLit12B1,r12AA);
    real r12B7#1 = RAdd(r12AC,r12B6);
    real r12B8#1 = RMul(realLit12AE,r12A6);
    real r12B9#1 = RAdd(r12B8,r12A9);
    real r12BA#1 = RAdd(r12B9,r12AB);
    tensor[3] tensor12BB#1 = <tensor[3]>[r12B7,r12AD,r12BA];
    real r12BC#1 = RMul(realLit12AE,r12A8);
    real r12BD#1 = RAdd(r12A7,r12BC);
    real r12BE#1 = RAdd(r12BD,r12AB);
    real r12BF#1 = RMul(realLit12B1,r12A6);
    real r12C0#1 = RAdd(r12BF,r12A9);
    real r12C1#1 = RAdd(r12C0,r12AB);
    tensor[3] tensor12C2#1 = <tensor[3]>[r12BE,r12C1,r12AD];
    tensor[3] projParam12E4#1 = tensor12B5;
    real vdot12E5#1 = VDot<3>(op1_e3_l_17127E,projParam12E4);
    tensor[3] projParam12E6#1 = tensor12BB;
    real vdot12E7#1 = VDot<3>(op1_e3_l_17127E,projParam12E6);
    tensor[3] projParam12E8#1 = tensor12C2;
    real vdot12E9#1 = VDot<3>(op1_e3_l_17127E,projParam12E8);
    tensor[3] op1_e3_l_4712E3#1 = <tensor[3]>[vdot12E5,vdot12E7,vdot12E9];
    tensor[3] op1_e3_l_5012F2#3 = VScale<3>(op1_e3_l_91237,op1_e3_l_4712E3);
    real r12F6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5012F2);
    real r12F7#3 = RMul(op1_e3_l_38129B,op1_e3_l_91237);
    real r12F8#1 = RMul(r12F7,r12F6);
    real r12F9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5012F2);
    real r12FA#1 = RMul(r12F7,r12F9);
    real r12FB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5012F2);
    real r12FC#1 = RMul(r12F7,r12FB);
    tensor[3] camV12F5#1 = <tensor[3]>[r12F8,r12FA,r12FC];
    globals.camV11C0 = camV12F5;
    real _t1307#1 = 0.314159265358979323846264338327950288e1;
    real _t1309#1 = 0.36e3;
    real op1_e3_l_5130B#1 = RMul(camFOV120E,_t1307);
    real op1_e3_l_6130E#1 = RDiv(op1_e3_l_5130B,_t1309);
    real op1_e3_l_101311#2 = Tan(op1_e3_l_6130E);
    real camVmax1314#1 = RMul(op1_e3_l_101311,op1_e3_l_71234);
    globals.camVmax11C1 = camVmax1314;
    real _t1318#1 = IntToReal(iresU1210);
    real _t131A#1 = IntToReal(iresV1212);
    real r131D#1 = RMul(_t1318,op1_e3_l_101311);
    real op1_e3_l_14131C#1 = RMul(r131D,op1_e3_l_71234);
    real camUmax1321#1 = RDiv(op1_e3_l_14131C,_t131A);
    globals.camUmax11C2 = camUmax1321;
    globals.rayVec11C3 = camN123C;
    return
## strand
  strand ray (int ui1327#2, int vi1328#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY1338:  preds = []
        femData:MeshCell[] 0cell_a1339#1 = globals.0cell_a11BD;
        femData:FemFunc c133B#1 = globals.c11BE;
        tensor[3] camEye133D#1 = globals.camEye11A9;
        int iresU133F#2 = globals.iresU11AD;
        int iresV1341#3 = globals.iresV11AE;
        int[] indecies1343#2 = globals.indecies11BA;
        tensor[2][] times1345#1 = globals.times11BB;
        tensor[3] camU1347#1 = globals.camU11BF;
        tensor[3] camV1349#1 = globals.camV11C0;
        real camVmax134B#2 = globals.camVmax11C1;
        real camUmax134D#2 = globals.camUmax11C2;
        real _t134F#5 = -0.5e0;
        real _t1351#1 = IntToReal(ui1327);
        real _t1353#1 = IntToReal(iresU133F);
        real _t1355#3 = 0.5e0;
        real op1_e3_l_61357#1 = RSub(_t1353,_t1355);
        real op1_e3_l_7135A#1 = RSub(_t1351,_t134F);
        real op1_e3_l_8135D#1 = RSub(op1_e3_l_61357,_t134F);
        real op1_e3_l_91360#2 = RNeg(camUmax134D);
        real op1_e3_l_101363#1 = RDiv(op1_e3_l_7135A,op1_e3_l_8135D);
        real op1_e3_l_111366#1 = RSub(camUmax134D,op1_e3_l_91360);
        real op1_e3_l_131369#1 = RMul(op1_e3_l_101363,op1_e3_l_111366);
        real rayU136C#2 = RAdd(op1_e3_l_91360,op1_e3_l_131369);
        real _t136F#1 = IntToReal(vi1328);
        real _t1371#2 = IntToReal(iresV1341);
        real op1_e3_l_61373#1 = RSub(_t1371,_t1355);
        real op1_e3_l_71376#2 = RSub(_t136F,_t134F);
        real op1_e3_l_81379#1 = RSub(op1_e3_l_61373,_t134F);
        real op1_e3_l_9137C#3 = RNeg(camVmax134B);
        real op1_e3_l_10137F#1 = RDiv(op1_e3_l_71376,op1_e3_l_81379);
        real op1_e3_l_111382#2 = RSub(camVmax134B,op1_e3_l_9137C);
        real op1_e3_l_131385#1 = RMul(op1_e3_l_10137F,op1_e3_l_111382);
        real rayV1388#1 = RAdd(op1_e3_l_9137C,op1_e3_l_131385);
        real op1_e3_l_23138B#1 = RSub(_t1371,_t1355);
        real op1_e3_l_25138E#1 = RSub(op1_e3_l_23138B,_t134F);
        real op1_e3_l_271391#1 = RDiv(op1_e3_l_71376,op1_e3_l_25138E);
        real op1_e3_l_301394#1 = RMul(op1_e3_l_271391,op1_e3_l_111382);
        real op1_e3_l_311397#1 = RAdd(op1_e3_l_9137C,op1_e3_l_301394);
        tensor[3] op1_e3_l_32139A#2 = VScale<3>(rayU136C,camU1347);
        tensor[3] op1_e3_l_33139D#2 = VScale<3>(op1_e3_l_311397,camV1349);
        tensor[3] UV13A0#1 = VAdd<3>(op1_e3_l_32139A,op1_e3_l_33139D);
        tensor[3] v13A4#1 = VAdd<3>(camEye133D,op1_e3_l_32139A);
        tensor[3] rayOrig13A3#1 = VAdd<3>(v13A4,op1_e3_l_33139D);
        int _t13A8#2 = IMul(ui1327,iresV1341);
        int _t13AA#1 = IAdd(_t13A8,vi1328);
        int offset13AC#2 = Subscript<int[]>(indecies1343,_t13AA);
        int _t13AE#1 = IMul(iresU133F,iresV1341);
        int _t13B0#1 = IAdd(_t13AE,_t13A8);
        int _t13B2#1 = IAdd(_t13B0,vi1328);
        int len13B4#1 = Subscript<int[]>(indecies1343,_t13B2);
        int itter13B6#2 = 0;
        int idx13B8#2 = offset13AC;
        tensor[2] interval13BA#3 = Subscript<tensor[2][]>(times1345,idx13B8);
        real s13BC#1 = VIndex<2,0>(interval13BA);
        real e13BE#1 = VIndex<2,1>(interval13BA);
        femData:MeshCell cc13C0#2 = Subscript<femData:MeshCell[]>(0cell_a1339,itter13B6);
        int _t13C2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13C0);
        femData:FuncCell _t13C4#1 = LoadFem<femData:FuncCell>(c133B,_t13C2);
        tensor[2][0] _t13C6#1 = <tensor[2][0]>{};
        tensor[2][] _t13C8#1 = MkDynamic<tensor[2],0>(_t13C6);
        femData:MeshCell[0] _t13CA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t13CC#1 = MkDynamic<femData:MeshCell,0>(_t13CA);
        self.rayU = rayU136C;
        self.rayV = rayV1388;
        self.UV = UV13A0;
        self.rayOrig = rayOrig13A3;
        self.offset = offset13AC;
        self.len = len13B4;
        self.itter = itter13B6;
        self.idx = idx13B8;
        self.interval = interval13BA;
        self.s = s13BC;
        self.e = e13BE;
        self.cc = cc13C0;
        self.fc = _t13C4;
        self.intervals = _t13C8;
        self.newCells = _t13CC;
        return
    end state init
    method start
        ENTRY13DE:  preds = []
          femData:MeshCell[] 0cell_a13DF#1 = globals.0cell_a11BD;
          femData:FemFunc c13E1#1 = globals.c11BE;
          int[] cells13E3#1 = globals.cells11BC;
          int len13E5#1 = self.len;
          int idx13E7#1 = self.idx;
          int _t13E9#1 = 0;
          bool _t13EB#1 = EQ<int>(len13E5,_t13E9);
          if _t13EB then goto STABILIZE13EE else goto JOIN13EF
        STABILIZE13EE:  preds = [COND13ED]
          stabilize
          goto JOIN13EF
        JOIN13EF:  preds = [*STABILIZE13EE,COND13ED]
          int _t13F0#1 = Subscript<int[]>(cells13E3,idx13E7);
          femData:MeshCell cc13F2#2 = Subscript<femData:MeshCell[]>(0cell_a13DF,_t13F0);
          int _t13F4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13F2);
          femData:FuncCell _t13F6#1 = LoadFem<femData:FuncCell>(c13E1,_t13F4);
          self.cc = cc13F2;
          self.fc = _t13F6;
          active
    end start
    method update
        ENTRY13FB:  preds = []
          femData:MeshCell[] 0cell_a13FC#1 = globals.0cell_a11BD;
          femData:FemFunc c13FE#1 = globals.c11BE;
          tensor[2][] times1400#1 = globals.times11BB;
          int[] cells1402#1 = globals.cells11BC;
          tensor[3] rayVec1404#4 = globals.rayVec11C3;
          tensor[3] rayOrig1406#1 = self.rayOrig;
          int offset1408#1 = self.offset;
          int len140A#2 = self.len;
          int itter140C#2 = self.itter;
          tensor[2] interval140E#1 = self.interval;
          real s1410#5 = self.s;
          real e1412#3 = self.e;
          femData:MeshCell cc1414#5 = self.cc;
          femData:FuncCell fc1416#3 = self.fc;
          tensor[2][] intervals1418#2 = self.intervals;
          femData:MeshCell[] newCells141A#2 = self.newCells;
          int _t141C#6 = 1;
          bool _t141E#1 = LT<int>(len140A,_t141C);
          if _t141E then goto STABILIZE1421 else goto JOIN1422
        STABILIZE1421:  preds = [COND1420]
          stabilize
          goto JOIN1422
        JOIN1422:  preds = [*STABILIZE1421,COND1420]
          tensor[3] op1_e3_l_31423#1 = VScale<3>(s1410,rayVec1404);
          tensor[3] rayStart1426#3 = VAdd<3>(rayOrig1406,op1_e3_l_31423);
          real _t1429#1 = VIndex<3,0>(rayStart1426);
          real _t142B#1 = VIndex<3,1>(rayStart1426);
          tensor[2] project142D#2 = <tensor[2]>[_t1429,_t142B];
          femData:FemFunc _t142F#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1416);
          femData:Space _t1431#6 = ExtractFem<femData:Space,femData:FemFunc>(_t142F);
          int _t1433#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1416);
          femData:Mesh _t1435#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1414);
          int _t1437#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1414);
          real _t1439#2 = VIndex<3,2>(rayStart1426);
          femData:MeshPos callNewtonPos143B#1 = _0994_msh_newtonInverse143C (project142D,_t1437,_t1435);
          tensor[2] refPos16AB#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos143B);
          int ilit16AE#1 = 6;
          int mulRes16AF#6 = IMul(_t1433,ilit16AE);
          int addRes16B1#1 = mulRes16AF;
          int idx16B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B1);
          int ilit16B3#1 = 1;
          int addRes16B4#1 = IAdd(mulRes16AF,ilit16B3);
          int idx16B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B4);
          int ilit16B6#1 = 2;
          int addRes16B7#1 = IAdd(mulRes16AF,ilit16B6);
          int idx16B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B7);
          int ilit16B9#1 = 3;
          int addRes16BA#1 = IAdd(mulRes16AF,ilit16B9);
          int idx16BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BA);
          int ilit16BC#1 = 4;
          int addRes16BD#1 = IAdd(mulRes16AF,ilit16BC);
          int idx16BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BD);
          int ilit16BF#1 = 5;
          int addRes16C0#1 = IAdd(mulRes16AF,ilit16BF);
          int idx16C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16C0);
          int ilit16DA#6 = 1;
          int idx16DC#1 = idx16B2;
          int mulRes16DD#1 = IMul(ilit16DA,idx16DC);
          int idx16DE#1 = idx16B5;
          int mulRes16DF#1 = IMul(ilit16DA,idx16DE);
          int idx16E1#1 = idx16B8;
          int mulRes16E2#1 = IMul(ilit16DA,idx16E1);
          int idx16E4#1 = idx16BB;
          int mulRes16E5#1 = IMul(ilit16DA,idx16E4);
          int idx16E7#1 = idx16BE;
          int mulRes16E8#1 = IMul(ilit16DA,idx16E7);
          int idx16EA#1 = idx16C1;
          int mulRes16EB#1 = IMul(ilit16DA,idx16EA);
          real dof16EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DD);
          real dof16ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DF);
          real dof16EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E2);
          real dof16EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E5);
          real dof16F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E8);
          real dof16F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16EB);
          tensor[6] dofs16F2#1 = <tensor[6]>[dof16EC,dof16ED,dof16EE,dof16EF,dof16F0,dof16F1];
          tensor[6] femDofs16D9#4 = dofs16F2;
          real varAcc170E#2 = VIndex<2,0>(refPos16AB);
          real varAcc170F#2 = VIndex<2,1>(refPos16AB);
          real coeff1710#2 = 0.2e1;
          real iden1711#3 = varAcc170E;
          real prod21712#1 = RMul(iden1711,varAcc170E);
          real one1713#7 = 0.1e1;
          real prod1714#2 = RMul(prod21712,one1713);
          real coeff1715#3 = 0.4e1;
          real iden1716#3 = varAcc170F;
          real prod1717#2 = RMul(iden1711,iden1716);
          real coeff1718#2 = -0.3e1;
          real prod1719#3 = RMul(iden1711,one1713);
          real prod2171A#1 = RMul(iden1716,varAcc170F);
          real prod171B#1 = RMul(one1713,prod2171A);
          real prod171C#3 = RMul(one1713,iden1716);
          real prod171D#1 = RMul(one1713,one1713);
          real mult171E#1 = RMul(one1713,prod171D);
          real mult171F#1 = RMul(coeff1718,prod171C);
          real mult1720#2 = RMul(coeff1710,prod171B);
          real mult1721#1 = RMul(coeff1718,prod1719);
          real mult1722#2 = RMul(coeff1715,prod1717);
          real mult1723#2 = RMul(coeff1710,prod1714);
          real sum1724#1 = RAdd(mult1722,mult1723);
          real sum1725#1 = RAdd(mult1721,sum1724);
          real sum1726#1 = RAdd(mult1720,sum1725);
          real sum1727#1 = RAdd(mult171F,sum1726);
          real sum1728#1 = RAdd(mult171E,sum1727);
          real intermediate1729#1 = sum1728;
          real coeff172A#2 = -0.1e1;
          real mult172B#1 = RMul(coeff172A,prod1719);
          real sum172C#1 = RAdd(mult172B,mult1723);
          real intermediate172D#1 = sum172C;
          real mult172E#1 = RMul(coeff172A,prod171C);
          real sum172F#1 = RAdd(mult172E,mult1720);
          real intermediate1730#1 = sum172F;
          real coeff1731#2 = -0.4e1;
          real mult1732#1 = RMul(coeff1715,prod171C);
          real mult1733#2 = RMul(coeff1731,prod1717);
          real sum1734#1 = RAdd(mult1732,mult1733);
          real intermediate1735#1 = sum1734;
          real mult1736#1 = RMul(coeff1715,prod1719);
          real mult1737#1 = RMul(coeff1731,prod1714);
          real sum1738#1 = RAdd(mult1733,mult1737);
          real sum1739#1 = RAdd(mult1736,sum1738);
          real intermediate173A#1 = sum1739;
          tensor[6] intermediateCons173B#1 = <tensor[6]>[intermediate1729,intermediate172D,intermediate1730,mult1722,intermediate1735,intermediate173A];
          tensor[6] basisResult170D#1 = intermediateCons173B;
          real compositionl176B#1 = VDot<6>(femDofs16D9,basisResult170D);
          real f0176E#5 = RSub(compositionl176B,_t1439);
          real _t1771#1 = VIndex<3,0>(rayVec1404);
          real _t1773#1 = VIndex<3,1>(rayVec1404);
          tensor[2] _t1775#2 = <tensor[2]>[_t1771,_t1773];
          real _t1777#2 = VIndex<3,2>(rayVec1404);
          int _t1779#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1414);
          real _t177B#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t1435,_t1779);
          real varAcc177E#1 = VIndex<2,0>(refPos16AB);
          real varAcc177F#1 = VIndex<2,1>(refPos16AB);
          real coeff1780#3 = 0.4e1;
          real iden1781#1 = varAcc177E;
          real one1782#4 = 0.1e1;
          real prod1783#3 = RMul(iden1781,one1782);
          real iden1784#1 = varAcc177F;
          real prod1785#2 = RMul(one1782,iden1784);
          real coeff1786#1 = -0.3e1;
          real prod1787#3 = RMul(one1782,one1782);
          real mult1788#1 = RMul(coeff1786,prod1787);
          real mult1789#3 = RMul(coeff1780,prod1785);
          real mult178A#3 = RMul(coeff1780,prod1783);
          real sum178B#1 = RAdd(mult1789,mult178A);
          real sum178C#2 = RAdd(mult1788,sum178B);
          real intermediate178D#1 = sum178C;
          real coeff178E#1 = -0.1e1;
          real mult178F#2 = RMul(coeff178E,prod1787);
          real sum1790#1 = RAdd(mult178F,mult178A);
          real intermediate1791#1 = sum1790;
          real basisEval1792#2 = 0.e0;
          real coeff1793#2 = -0.4e1;
          real basisEval1794#2 = RMul(coeff1793,prod1785);
          real coeff1795#1 = -0.8e1;
          real mult1796#2 = RMul(coeff1780,prod1787);
          real mult1797#1 = RMul(coeff1795,prod1783);
          real sum1798#1 = RAdd(basisEval1794,mult1797);
          real sum1799#1 = RAdd(mult1796,sum1798);
          real intermediate179A#1 = sum1799;
          real intermediate179B#1 = sum178C;
          real sum179C#1 = RAdd(mult178F,mult1789);
          real intermediate179D#1 = sum179C;
          real mult179E#2 = RMul(coeff1793,prod1783);
          real sum179F#1 = RAdd(mult1796,mult179E);
          real intermediate17A0#1 = sum179F;
          tensor[6] intermediateCons17A1#1 = <tensor[6]>[intermediate178D,intermediate1791,basisEval1792,mult1789,basisEval1794,intermediate179A];
          tensor[6] intermediateCons17A2#1 = <tensor[6]>[intermediate179B,basisEval1792,intermediate179D,mult178A,intermediate17A0,mult179E];
          tensor[6] projParam17CC#1 = intermediateCons17A1;
          real vdot17CD#1 = VDot<6>(femDofs16D9,projParam17CC);
          tensor[6] projParam17CE#1 = intermediateCons17A2;
          real vdot17CF#1 = VDot<6>(femDofs16D9,projParam17CE);
          int ilit17D7#1 = 3;
          int mulRes17D8#3 = IMul(_t1437,ilit17D7);
          int addRes17DA#1 = mulRes17D8;
          int idx17DB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DA);
          int ilit17DC#1 = 1;
          int addRes17DD#1 = IAdd(mulRes17D8,ilit17DC);
          int idx17DE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DD);
          int ilit17DF#1 = 2;
          int addRes17E0#1 = IAdd(mulRes17D8,ilit17DF);
          int idx17E1#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17E0);
          int ilit17F2#3 = 2;
          int idx17F3#1 = idx17DB;
          int mulRes17F4#2 = IMul(ilit17F2,idx17F3);
          int addRes17F5#1 = mulRes17F4;
          int ilit17F6#3 = 1;
          int addRes17F7#1 = IAdd(ilit17F6,mulRes17F4);
          real dof_load17F8#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F5);
          real dof_load17F9#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F7);
          int idx17FB#1 = idx17DE;
          int mulRes17FC#2 = IMul(ilit17F2,idx17FB);
          int addRes17FD#1 = mulRes17FC;
          int addRes17FE#1 = IAdd(ilit17F6,mulRes17FC);
          real dof_load17FF#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FD);
          real dof_load1800#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FE);
          int idx1802#1 = idx17E1;
          int mulRes1803#2 = IMul(ilit17F2,idx1802);
          int addRes1804#1 = mulRes1803;
          int addRes1805#1 = IAdd(ilit17F6,mulRes1803);
          real dof_load1806#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1804);
          real dof_load1807#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1805);
          real coeff1827#1 = -0.1e1;
          real one1828#3 = 0.1e1;
          real prod1829#2 = RMul(one1828,one1828);
          real basisEval182A#4 = RMul(coeff1827,prod1829);
          real basisEval182B#4 = RMul(one1828,prod1829);
          real basisEval182C#4 = 0.e0;
          real r183D#2 = dof_load17F8;
          real r183E#2 = basisEval182A;
          real r183F#1 = RMul(r183D,r183E);
          real r1840#2 = dof_load17FF;
          real r1841#2 = basisEval182B;
          real r1842#1 = RMul(r1840,r1841);
          real r1843#2 = dof_load1806;
          real r1844#2 = basisEval182C;
          real r1845#1 = RMul(r1843,r1844);
          real r1846#1 = RAdd(r183F,r1842);
          real r1847#1 = RAdd(r1846,r1845);
          real r1848#2 = basisEval182A;
          real r1849#1 = RMul(r183D,r1848);
          real r184A#2 = basisEval182C;
          real r184B#1 = RMul(r1840,r184A);
          real r184C#2 = basisEval182B;
          real r184D#1 = RMul(r1843,r184C);
          real r184E#1 = RAdd(r1849,r184B);
          real r184F#1 = RAdd(r184E,r184D);
          real r1851#2 = dof_load17F9;
          real r1852#1 = RMul(r1851,r183E);
          real r1853#2 = dof_load1800;
          real r1854#1 = RMul(r1853,r1841);
          real r1855#2 = dof_load1807;
          real r1856#1 = RMul(r1855,r1844);
          real r1857#1 = RAdd(r1852,r1854);
          real r1858#1 = RAdd(r1857,r1856);
          real r1859#1 = RMul(r1851,r1848);
          real r185A#1 = RMul(r1853,r184A);
          real r185B#1 = RMul(r1855,r184C);
          real r185C#1 = RAdd(r1859,r185A);
          real r185D#1 = RAdd(r185C,r185B);
          real realLit1884#4 = 0.e0;
          real r1885#2 = r1847;
          real r1886#1 = RMul(realLit1884,r1885);
          real realLit1887#2 = -0.1e1;
          real r1888#2 = r1858;
          real r1889#1 = RMul(realLit1887,r1888);
          real r188A#1 = RAdd(r1886,r1889);
          real r188B#2 = r184F;
          real r188C#1 = RMul(realLit1884,r188B);
          real r188D#2 = r185D;
          real r188E#1 = RMul(realLit1887,r188D);
          real r188F#1 = RAdd(r188C,r188E);
          real realLit1891#2 = 0.1e1;
          real r1892#1 = RMul(realLit1891,r1885);
          real r1893#1 = RMul(realLit1884,r1888);
          real r1894#1 = RAdd(r1892,r1893);
          real r1895#1 = RMul(realLit1891,r188B);
          real r1896#1 = RMul(realLit1884,r188D);
          real r1897#1 = RAdd(r1895,r1896);
          real r18B1#1 = dof_load17F8;
          real r18B2#2 = basisEval182A;
          real r18B3#1 = RMul(r18B1,r18B2);
          real r18B4#1 = dof_load17FF;
          real r18B5#2 = basisEval182B;
          real r18B6#1 = RMul(r18B4,r18B5);
          real r18B7#1 = dof_load1806;
          real r18B8#2 = basisEval182C;
          real r18B9#1 = RMul(r18B7,r18B8);
          real r18BA#1 = RAdd(r18B3,r18B6);
          real r18BB#1 = RAdd(r18BA,r18B9);
          real r18BC#1 = dof_load17F9;
          real r18BD#1 = RMul(r18BC,r18B2);
          real r18BE#1 = dof_load1800;
          real r18BF#1 = RMul(r18BE,r18B5);
          real r18C0#1 = dof_load1807;
          real r18C1#1 = RMul(r18C0,r18B8);
          real r18C2#1 = RAdd(r18BD,r18BF);
          real r18C3#1 = RAdd(r18C2,r18C1);
          tensor[2] probe_l_1318B0#1 = <tensor[2]>[r18BB,r18C3];
          real r18DA#1 = dof_load17F8;
          real r18DB#2 = basisEval182A;
          real r18DC#1 = RMul(r18DA,r18DB);
          real r18DD#1 = dof_load17FF;
          real r18DE#2 = basisEval182C;
          real r18DF#1 = RMul(r18DD,r18DE);
          real r18E0#1 = dof_load1806;
          real r18E1#2 = basisEval182B;
          real r18E2#1 = RMul(r18E0,r18E1);
          real r18E3#1 = RAdd(r18DC,r18DF);
          real r18E4#1 = RAdd(r18E3,r18E2);
          real r18E5#1 = dof_load17F9;
          real r18E6#1 = RMul(r18E5,r18DB);
          real r18E7#1 = dof_load1800;
          real r18E8#1 = RMul(r18E7,r18DE);
          real r18E9#1 = dof_load1807;
          real r18EA#1 = RMul(r18E9,r18E1);
          real r18EB#1 = RAdd(r18E6,r18E8);
          real r18EC#1 = RAdd(r18EB,r18EA);
          real realLit1903#2 = 0.e0;
          real r1904#2 = r18E4;
          real r1905#1 = RMul(realLit1903,r1904);
          real realLit1906#1 = 0.1e1;
          real r1907#2 = r18EC;
          real r1908#1 = RMul(realLit1906,r1907);
          real r1909#1 = RAdd(r1905,r1908);
          real realLit190A#1 = -0.1e1;
          real r190B#1 = RMul(realLit190A,r1904);
          real r190C#1 = RMul(realLit1903,r1907);
          real r190D#1 = RAdd(r190B,r190C);
          tensor[2] op1_e3_l_151902#1 = <tensor[2]>[r1909,r190D];
          real realLit191C#4 = 0.e0;
          real r191D#2 = r188A;
          real r191E#1 = RMul(realLit191C,r191D);
          real realLit191F#2 = -0.1e1;
          real r1920#2 = r188F;
          real r1921#1 = RMul(realLit191F,r1920);
          real r1922#1 = RAdd(r191E,r1921);
          real r1923#2 = r1894;
          real r1924#1 = RMul(realLit191C,r1923);
          real r1925#2 = r1897;
          real r1926#1 = RMul(realLit191F,r1925);
          real r1927#1 = RAdd(r1924,r1926);
          real realLit1929#2 = 0.1e1;
          real r192A#1 = RMul(realLit1929,r191D);
          real r192B#1 = RMul(realLit191C,r1920);
          real r192C#1 = RAdd(r192A,r192B);
          real r192D#1 = RMul(realLit1929,r1923);
          real r192E#1 = RMul(realLit191C,r1925);
          real r192F#1 = RAdd(r192D,r192E);
          real op1_e3_l_171948#4 = VDot<2>(probe_l_1318B0,op1_e3_l_151902);
          real r194C#1 = r1922;
          real r194D#1 = RDiv(r194C,op1_e3_l_171948);
          real r194E#1 = r1927;
          real r194F#1 = RDiv(r194E,op1_e3_l_171948);
          real r1951#1 = r192C;
          real r1952#1 = RDiv(r1951,op1_e3_l_171948);
          real r1953#1 = r192F;
          real r1954#1 = RDiv(r1953,op1_e3_l_171948);
          real r1963#2 = vdot17CD;
          real r1964#1 = r194D;
          real r1965#1 = RMul(r1963,r1964);
          real r1966#2 = vdot17CF;
          real r1967#1 = r1952;
          real r1968#1 = RMul(r1966,r1967);
          real r1969#1 = RAdd(r1965,r1968);
          real r196A#1 = r194F;
          real r196B#1 = RMul(r1963,r196A);
          real r196C#1 = r1954;
          real r196D#1 = RMul(r1966,r196C);
          real r196E#1 = RAdd(r196B,r196D);
          tensor[2] op1_e3_l_191962#1 = <tensor[2]>[r1969,r196E];
          real op1_e3_l_20197D#1 = VDot<2>(_t1775,op1_e3_l_191962);
          real op1_e3_l_211980#1 = RSub(op1_e3_l_20197D,_t1777);
          real op1_e3_l_221983#1 = Abs<real>(op1_e3_l_211980);
          real _t1986#1 = RDiv(op1_e3_l_221983,_t177B);
          real _t1989#1 = RSub(e1412,s1410);
          real gradEps198C#6 = Min<real>(_t1986,_t1989);
          tensor[2] op1_e3_l_3198E#1 = VScale<2>(gradEps198C,_t1775);
          tensor[2] _t1991#1 = VAdd<2>(project142D,op1_e3_l_3198E);
          femData:MeshPos callNewtonPos1994#1 = _0994_msh_newtonInverse143C (_t1991,_t1437,_t1435);
          tensor[2] refPos1996#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1994);
          real varAcc1999#2 = VIndex<2,0>(refPos1996);
          real varAcc199A#2 = VIndex<2,1>(refPos1996);
          real coeff199B#2 = 0.2e1;
          real iden199C#3 = varAcc1999;
          real prod2199D#1 = RMul(iden199C,varAcc1999);
          real one199E#7 = 0.1e1;
          real prod199F#2 = RMul(prod2199D,one199E);
          real coeff19A0#3 = 0.4e1;
          real iden19A1#3 = varAcc199A;
          real prod19A2#2 = RMul(iden199C,iden19A1);
          real coeff19A3#2 = -0.3e1;
          real prod19A4#3 = RMul(iden199C,one199E);
          real prod219A5#1 = RMul(iden19A1,varAcc199A);
          real prod19A6#1 = RMul(one199E,prod219A5);
          real prod19A7#3 = RMul(one199E,iden19A1);
          real prod19A8#1 = RMul(one199E,one199E);
          real mult19A9#1 = RMul(one199E,prod19A8);
          real mult19AA#1 = RMul(coeff19A3,prod19A7);
          real mult19AB#2 = RMul(coeff199B,prod19A6);
          real mult19AC#1 = RMul(coeff19A3,prod19A4);
          real mult19AD#2 = RMul(coeff19A0,prod19A2);
          real mult19AE#2 = RMul(coeff199B,prod199F);
          real sum19AF#1 = RAdd(mult19AD,mult19AE);
          real sum19B0#1 = RAdd(mult19AC,sum19AF);
          real sum19B1#1 = RAdd(mult19AB,sum19B0);
          real sum19B2#1 = RAdd(mult19AA,sum19B1);
          real sum19B3#1 = RAdd(mult19A9,sum19B2);
          real intermediate19B4#1 = sum19B3;
          real coeff19B5#2 = -0.1e1;
          real mult19B6#1 = RMul(coeff19B5,prod19A4);
          real sum19B7#1 = RAdd(mult19B6,mult19AE);
          real intermediate19B8#1 = sum19B7;
          real mult19B9#1 = RMul(coeff19B5,prod19A7);
          real sum19BA#1 = RAdd(mult19B9,mult19AB);
          real intermediate19BB#1 = sum19BA;
          real coeff19BC#2 = -0.4e1;
          real mult19BD#1 = RMul(coeff19A0,prod19A7);
          real mult19BE#2 = RMul(coeff19BC,prod19A2);
          real sum19BF#1 = RAdd(mult19BD,mult19BE);
          real intermediate19C0#1 = sum19BF;
          real mult19C1#1 = RMul(coeff19A0,prod19A4);
          real mult19C2#1 = RMul(coeff19BC,prod199F);
          real sum19C3#1 = RAdd(mult19BE,mult19C2);
          real sum19C4#1 = RAdd(mult19C1,sum19C3);
          real intermediate19C5#1 = sum19C4;
          tensor[6] intermediateCons19C6#1 = <tensor[6]>[intermediate19B4,intermediate19B8,intermediate19BB,mult19AD,intermediate19C0,intermediate19C5];
          tensor[6] basisResult1998#1 = intermediateCons19C6;
          real compositionl19F6#1 = VDot<6>(femDofs16D9,basisResult1998);
          real op1_e3_l_1119F9#1 = RSub(compositionl19F6,_t1439);
          real op1_e3_l_1219FC#1 = RMul(gradEps198C,_t1777);
          real f119FF#4 = RSub(op1_e3_l_1119F9,op1_e3_l_1219FC);
          string _t1A02#1 = "vals:";
          tensor[2] _t1A04#2 = <tensor[2]>[f0176E,f119FF];
          string _t1A06#6 = "\n";
          Print<[string,tensor[2],string]>(_t1A02,_t1A04,_t1A06);
          real _t1A09#6 = 0.e0;
          bool _t1A0B#2 = GT<real>(f0176E,_t1A09);
          if _t1A0B then goto JOIN1A10 else goto ASSIGN1AA7
        JOIN1A10:  preds = [COND1A0D,JOIN1AAC]
          int _t1A0E#1 = phi(_t141C,_t1A0F)
          bool _t1A11#2 = GT<real>(f119FF,_t1A09);
          if _t1A11 then goto JOIN1A16 else goto ASSIGN1A9F
        JOIN1A16:  preds = [COND1A13,JOIN1AA4]
          int _t1A14#1 = phi(_t141C,_t1A15)
          int _t1A17#1 = IMul(_t1A0E,_t1A14);
          int _t1A19#4 = 0;
          bool _t1A1B#1 = GT<int>(_t1A17,_t1A19);
          bool _t1A1D#1 = BNot(_t1A1B);
          if _t1A1D then goto COND1A20 else goto ASSIGN1A88
        COND1A20:  preds = [COND1A1F]
          if _t1A0B then goto JOIN1A23 else goto ASSIGN1A82
        JOIN1A23:  preds = [COND1A20,JOIN1A86]
          int _t1A21#1 = phi(_t141C,_t1A22)
          if _t1A11 then goto JOIN1A27 else goto ASSIGN1A7C
        JOIN1A27:  preds = [COND1A24,JOIN1A80]
          int _t1A25#1 = phi(_t141C,_t1A26)
          int _t1A28#1 = IMul(_t1A21,_t1A25);
          bool _t1A2A#1 = EQ<int>(_t1A28,_t1A19);
          if _t1A2A then goto ASSIGN1A2E else goto JOIN1A30
        ASSIGN1A2E:  preds = [COND1A2C]
          string _t1A2D#1 = "Warn: 0 update\n";
          Print<[string]>(_t1A2D);
          goto JOIN1A30
        JOIN1A30:  preds = [MASSIGN1A2F,COND1A2C]
          string _t1A31#1 = "update with interval:";
          Print<[string,real,string]>(_t1A31,gradEps198C,_t1A06);
          string _t1A34#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1A34,_t1A04,_t1A06);
          string _t1A37#1 = "New interval:";
          real _t1A39#2 = RAdd(s1410,gradEps198C);
          tensor[2] _t1A3C#2 = <tensor[2]>[s1410,_t1A39];
          Print<[string,tensor[2],string]>(_t1A37,_t1A3C,_t1A06);
          tensor[2][] intervals1A3F#1 = Append<tensor[2]>(intervals1418,_t1A3C);
          femData:MeshCell[] newCells1A41#1 = Append<femData:MeshCell>(newCells141A,cc1414);
          goto JOIN1A47
        JOIN1A47:  preds = [ASSIGN1A42,ASSIGN1A9D]
          femData:MeshCell[] newCells1A43#2 = phi(newCells1A41,newCells141A)
          tensor[2][] intervals1A44#2 = phi(intervals1A3F,intervals1418)
          real s1A45#3 = phi(_t1A39,s1A46)
          bool _t1A48#1 = GTE<real>(s1A45,e1412);
          if _t1A48 then goto ASSIGN1A4C else goto JOIN1A66
        ASSIGN1A4C:  preds = [COND1A4A]
          int itter1A4B#4 = IAdd(itter140C,_t141C);
          bool _t1A4D#1 = GTE<int>(itter1A4B,len140A);
          if _t1A4D then goto SAVE1A50 else goto ASSIGN1A71
        SAVE1A50:  preds = [COND1A4F]
          self.itter = itter1A4B;
          self.s = s1A45;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          stabilize
          goto JOIN1A5F
        JOIN1A5F:  preds = [*STABILIZE1A54,ASSIGN1A7A]
          femData:FuncCell fc1A55#1 = phi(_t1A56)
          femData:MeshCell cc1A57#1 = phi(cc1A58)
          real e1A59#1 = phi(e1A5A)
          real s1A5B#1 = phi(s1A5C)
          tensor[2] interval1A5D#1 = phi(interval1A5E)
          goto JOIN1A66
        JOIN1A66:  preds = [JOIN1A5F,COND1A4A]
          femData:FuncCell fc1A60#1 = phi(fc1A55,fc1416)
          femData:MeshCell cc1A61#1 = phi(cc1A57,cc1414)
          real e1A62#1 = phi(e1A59,e1412)
          real s1A63#1 = phi(s1A5B,s1A45)
          tensor[2] interval1A64#1 = phi(interval1A5D,interval140E)
          int itter1A65#1 = phi(itter1A4B,itter140C)
          self.itter = itter1A65;
          self.interval = interval1A64;
          self.s = s1A63;
          self.e = e1A62;
          self.cc = cc1A61;
          self.fc = fc1A60;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          active
        ASSIGN1A71:  preds = [COND1A4F]
          int _t1A70#2 = IAdd(offset1408,itter1A4B);
          tensor[2] interval1A5E#3 = Subscript<tensor[2][]>(times1400,_t1A70);
          int _t1A73#1 = Subscript<int[]>(cells1402,_t1A70);
          femData:MeshCell cc1A58#2 = Subscript<femData:MeshCell[]>(0cell_a13FC,_t1A73);
          real s1A5C#1 = VIndex<2,0>(interval1A5E);
          real e1A5A#1 = VIndex<2,1>(interval1A5E);
          int _t1A78#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1A58);
          femData:FuncCell _t1A56#1 = LoadFem<femData:FuncCell>(c13FE,_t1A78);
          goto JOIN1A5F
        ASSIGN1A7C:  preds = [COND1A24]
          bool _t1A7B#1 = LT<real>(f119FF,_t1A09);
          if _t1A7B then goto ASSIGN1A7F else goto JOIN1A80
        ASSIGN1A7F:  preds = [COND1A7D]
          int _t1A7E#1 = -1;
          goto JOIN1A80
        JOIN1A80:  preds = [ASSIGN1A7F,COND1A7D]
          int _t1A26#1 = phi(_t1A7E,_t1A19)
          goto JOIN1A27
        ASSIGN1A82:  preds = [COND1A20]
          bool _t1A81#1 = LT<real>(f0176E,_t1A09);
          if _t1A81 then goto ASSIGN1A85 else goto JOIN1A86
        ASSIGN1A85:  preds = [COND1A83]
          int _t1A84#1 = -1;
          goto JOIN1A86
        JOIN1A86:  preds = [ASSIGN1A85,COND1A83]
          int _t1A22#1 = phi(_t1A84,_t1A19)
          goto JOIN1A23
        ASSIGN1A88:  preds = [COND1A1F]
          real _t1A87#1 = 0.2e1;
          real _t1A89#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t1435,_t1779);
          real op1_e3_l_121A8B#1 = Abs<real>(f0176E);
          real op1_e3_l_131A8E#1 = RMul(_t1A87,_t1A89);
          real _t1A91#1 = RDiv(op1_e3_l_121A8B,op1_e3_l_131A8E);
          real epsUpdate1A94#2 = Max<real>(gradEps198C,_t1A91);
          string _t1A96#1 = "update L:";
          Print<[string,real,string]>(_t1A96,epsUpdate1A94,_t1A06);
          string _t1A99#1 = "update G:";
          Print<[string,real,string]>(_t1A99,gradEps198C,_t1A06);
          real s1A46#1 = RAdd(s1410,epsUpdate1A94);
          goto JOIN1A47
        ASSIGN1A9F:  preds = [COND1A13]
          bool _t1A9E#1 = LT<real>(f119FF,_t1A09);
          if _t1A9E then goto ASSIGN1AA2 else goto ASSIGN1AA5
        ASSIGN1AA2:  preds = [COND1AA0]
          int _t1AA1#1 = -1;
          goto JOIN1AA4
        JOIN1AA4:  preds = [ASSIGN1AA2,ASSIGN1AA5]
          int _t1A15#1 = phi(_t1AA1,_t1AA3)
          goto JOIN1A16
        ASSIGN1AA5:  preds = [COND1AA0]
          int _t1AA3#1 = 0;
          goto JOIN1AA4
        ASSIGN1AA7:  preds = [COND1A0D]
          bool _t1AA6#1 = LT<real>(f0176E,_t1A09);
          if _t1AA6 then goto ASSIGN1AAA else goto ASSIGN1AAD
        ASSIGN1AAA:  preds = [COND1AA8]
          int _t1AA9#1 = -1;
          goto JOIN1AAC
        JOIN1AAC:  preds = [ASSIGN1AAA,ASSIGN1AAD]
          int _t1A0F#1 = phi(_t1AA9,_t1AAB)
          goto JOIN1A10
        ASSIGN1AAD:  preds = [COND1AA8]
          int _t1AAB#1 = 0;
          goto JOIN1AAC
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1AAE:  preds = []
      int iresU1AAF#1 = globals.iresU11AD;
      int iresV1AB1#1 = globals.iresV11AE;
      int _t1AB3#2 = 0;
      int _t1AB5#2 = 1;
      int _t1AB7#1 = ISub(iresU1AAF,_t1AB5);
      int[] _t1AB9#1 = Range(_t1AB3,_t1AB7);
    FOREACH1ABC:  preds = [ASSIGN1ABA,NEXT1AC5]
      foreach (vi1ABB in _t1AB9) on exit goto RETURN1AC6
      int _t1ABD#1 = ISub(iresV1AB1,_t1AB5);
      int[] _t1ABF#1 = Range(_t1AB3,_t1ABD);
    FOREACH1AC2:  preds = [ASSIGN1AC0,NEXT1AC4]
      foreach (ui1AC1 in _t1ABF) on exit goto NEXT1AC5
      new ray(ui1AC1,vi1ABB);
      goto FOREACH1AC2
    NEXT1AC5:  preds = [FOREACH1AC2]
      goto FOREACH1ABC
    RETURN1AC6:  preds = [FOREACH1ABC]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a11A4 (a) = <no-default>
  input 0b0412_intermedateGlobal11A5 (b) = <no-default>
  input 0c0414_intermedateGlobal11A6 (c) = <no-default>
  input isoval11A7 (isoval) = <default>
  input thick11A8 (thick) = <default>
  input camEye11A9 (camEye) = <default>
  input camAt11AA (camAt) = <default>
  input camUp11AB (camUp) = <default>
  input camFOV11AC (camFOV) = <default>
  input iresU11AD (iresU) = <default>
  input iresV11AE (iresV) = <default>
  input camNear11AF (camNear) = <default>
  input camFar11B0 (camFar) = <default>
  input refStep11B1 (refStep) = <default>
  input rayStep11B2 (rayStep) = <default>
  input lightVsp11B3 (lightVsp) = <default>
  input phongKa11B4 (phongKa) = <default>
  input phongKd11B5 (phongKd) = <default>
  input debug11B6 (debug) = <default>
  input debugU11B7 (debugU) = <default>
  input debugV11B8 (debugV) = <default>
  input eps11B9 (eps) = <default>
  input indecies11BA (indecies) = <no-default>
  input times11BB (times) = <no-default>
  input cells11BC (cells) = <no-default>
  global femData:MeshCell[] 0cell_a11BD
  global femData:FemFunc c11BE
  global tensor[3] camU11BF
  global tensor[3] camV11C0
  global real camVmax11C1
  global real camUmax11C2
  global tensor[3] rayVec11C3
## functions
  function femData:MeshPos _0994_msh_newtonInverse143C (tensor[2] pos143D#2, int cellInt143E#2, femData:Mesh mesh143F#12) {
    ENTRY1440:  preds = []
      real _t1441#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn1443#1 = <tensor[2]>[_t1441,_t1441];
      int _t1445#1 = 0;
      int _t1447#1 = 16;
      int[] _t1449#1 = Range(_t1445,_t1447);
    FOREACH144C:  preds = [ASSIGN144A,NEXT16A3]
      foreach (itter144B in _t1449) on exit goto ASSIGN16A8
        tensor[2] xn15C3#3 = phi(xn1443,xn1637)
      int ilit144E#1 = 3;
      int mulRes144F#3 = IMul(cellInt143E,ilit144E);
      int idx1452#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,mulRes144F);
      int ilit1453#4 = 1;
      int addRes1454#1 = IAdd(mulRes144F,ilit1453);
      int idx1455#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1454);
      int ilit1456#4 = 2;
      int addRes1457#1 = IAdd(mulRes144F,ilit1456);
      int idx1458#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1457);
      int mulRes146B#2 = IMul(ilit1456,idx1452);
      int addRes146E#1 = IAdd(ilit1453,mulRes146B);
      real dof_load146F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes146B);
      real dof_load1470#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146E);
      int mulRes1473#2 = IMul(ilit1456,idx1455);
      int addRes1475#1 = IAdd(ilit1453,mulRes1473);
      real dof_load1476#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes1473);
      real dof_load1477#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1475);
      int mulRes147A#2 = IMul(ilit1456,idx1458);
      int addRes147C#1 = IAdd(ilit1453,mulRes147A);
      real dof_load147D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes147A);
      real dof_load147E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147C);
      real coeff149E#8 = -0.1e1;
      real one149F#15 = 0.1e1;
      real prod14A0#2 = RMul(one149F,one149F);
      real basisEval14A1#2 = RMul(coeff149E,prod14A0);
      real basisEval14A2#5 = RMul(one149F,prod14A0);
      real basisEval14A3#12 = 0.e0;
      real r14B6#2 = RMul(dof_load146F,basisEval14A1);
      real r14B9#1 = RMul(dof_load1476,basisEval14A2);
      real r14BC#1 = RMul(dof_load147D,basisEval14A3);
      real r14BD#1 = RAdd(r14B6,r14B9);
      real r14BE#3 = RAdd(r14BD,r14BC);
      real r14C2#1 = RMul(dof_load1476,basisEval14A3);
      real r14C4#1 = RMul(dof_load147D,basisEval14A2);
      real r14C5#1 = RAdd(r14B6,r14C2);
      real r14C6#3 = RAdd(r14C5,r14C4);
      real r14C9#2 = RMul(dof_load1470,basisEval14A1);
      real r14CB#1 = RMul(dof_load1477,basisEval14A2);
      real r14CD#1 = RMul(dof_load147E,basisEval14A3);
      real r14CE#1 = RAdd(r14C9,r14CB);
      real r14CF#3 = RAdd(r14CE,r14CD);
      real r14D1#1 = RMul(dof_load1477,basisEval14A3);
      real r14D2#1 = RMul(dof_load147E,basisEval14A2);
      real r14D3#1 = RAdd(r14C9,r14D1);
      real r14D4#3 = RAdd(r14D3,r14D2);
      real r14FD#1 = RMul(basisEval14A3,r14BE);
      real r1500#1 = RMul(coeff149E,r14CF);
      real r1501#2 = RAdd(r14FD,r1500);
      real r1503#2 = RMul(basisEval14A3,r14C6);
      real r1505#1 = RMul(coeff149E,r14D4);
      real r1506#2 = RAdd(r1503,r1505);
      real r1509#1 = RMul(one149F,r14BE);
      real r150A#1 = RMul(basisEval14A3,r14CF);
      real r150B#2 = RAdd(r1509,r150A);
      real r150C#1 = RMul(one149F,r14C6);
      real r150D#2 = RMul(basisEval14A3,r14D4);
      real r150E#2 = RAdd(r150C,r150D);
      tensor[2] probe_l_121527#1 = <tensor[2]>[r14BE,r14CF];
      real r157F#1 = RMul(one149F,r14D4);
      real r1580#1 = RAdd(r1503,r157F);
      real r1582#1 = RMul(coeff149E,r14C6);
      real r1584#1 = RAdd(r1582,r150D);
      tensor[2] op1_e3_l_141579#1 = <tensor[2]>[r1580,r1584];
      real r1595#1 = RMul(basisEval14A3,r1501);
      real r1598#1 = RMul(coeff149E,r1506);
      real r1599#1 = RAdd(r1595,r1598);
      real r159B#1 = RMul(basisEval14A3,r150B);
      real r159D#1 = RMul(coeff149E,r150E);
      real r159E#1 = RAdd(r159B,r159D);
      real r15A1#1 = RMul(one149F,r1501);
      real r15A2#1 = RMul(basisEval14A3,r1506);
      real r15A3#1 = RAdd(r15A1,r15A2);
      real r15A4#1 = RMul(one149F,r150B);
      real r15A5#1 = RMul(basisEval14A3,r150E);
      real r15A6#1 = RAdd(r15A4,r15A5);
      real op1_e3_l_1615BF#4 = VDot<2>(probe_l_121527,op1_e3_l_141579);
      real varAcc15C4#1 = VIndex<2,0>(xn15C3);
      real varAcc15C5#1 = VIndex<2,1>(xn15C3);
      real prod15C9#2 = RMul(varAcc15C4,one149F);
      real prod15CB#2 = RMul(one149F,varAcc15C5);
      real mult15CE#1 = RMul(coeff149E,prod15CB);
      real mult15CF#1 = RMul(coeff149E,prod15C9);
      real sum15D0#1 = RAdd(mult15CE,mult15CF);
      real sum15D1#2 = RAdd(basisEval14A2,sum15D0);
      real basisEval15D3#2 = RMul(one149F,prod15C9);
      real basisEval15D4#2 = RMul(one149F,prod15CB);
      real r15EC#1 = RMul(dof_load146F,sum15D1);
      real r15EF#1 = RMul(dof_load1476,basisEval15D3);
      real r15F2#1 = RMul(dof_load147D,basisEval15D4);
      real r15F3#1 = RAdd(r15EC,r15EF);
      real r15F4#1 = RAdd(r15F3,r15F2);
      real r15F6#1 = RMul(dof_load1470,sum15D1);
      real r15F8#1 = RMul(dof_load1477,basisEval15D3);
      real r15FA#1 = RMul(dof_load147E,basisEval15D4);
      real r15FB#1 = RAdd(r15F6,r15F8);
      real r15FC#1 = RAdd(r15FB,r15FA);
      tensor[2] probe_l_1715E9#1 = <tensor[2]>[r15F4,r15FC];
      real r1614#1 = RDiv(r1599,op1_e3_l_1615BF);
      real r1616#1 = RDiv(r159E,op1_e3_l_1615BF);
      tensor[2] tensor1617#1 = <tensor[2]>[r1614,r1616];
      real r1619#1 = RDiv(r15A3,op1_e3_l_1615BF);
      real r161B#1 = RDiv(r15A6,op1_e3_l_1615BF);
      tensor[2] tensor161C#1 = <tensor[2]>[r1619,r161B];
      tensor[2] op1_e3_l_191629#2 = VSub<2>(probe_l_1715E9,pos143D);
      real vdot162E#1 = VDot<2>(tensor1617,op1_e3_l_191629);
      real vdot1630#1 = VDot<2>(tensor161C,op1_e3_l_191629);
      tensor[2] op1_e3_l_20162C#3 = <tensor[2]>[vdot162E,vdot1630];
      tensor[2] xn1637#4 = VSub<2>(xn15C3,op1_e3_l_20162C);
      real _t163A#2 = 0.1e-7;
      real _t163C#1 = RMul(_t163A,_t163A);
      real _t1676#1 = VDot<2>(op1_e3_l_20162C,op1_e3_l_20162C);
      bool _t1679#1 = GTE<real>(_t163C,_t1676);
      if _t1679 then goto ASSIGN167F else goto JOIN16A2
    ASSIGN167F:  preds = [COND167B]
      real _t167E#3 = 0.1e-8;
      real _t1680#1 = RAdd(one149F,_t167E);
      tensor[2] _t1683#1 = <tensor[2]>[one149F,one149F];
      real _t1685#1 = VDot<2>(_t1683,xn1637);
      bool _t1688#1 = GT<real>(_t1680,_t1685);
      tensor[2] _t168A#1 = <tensor[2]>[_t167E,_t167E];
      tensor[2] _t168C#2 = VAdd<2>(_t168A,xn1637);
      real _t168F#1 = VIndex<2,0>(_t168C);
      real _t1691#2 = -0.e0;
      bool _t1693#1 = GT<real>(_t168F,_t1691);
      real _t1695#1 = VIndex<2,1>(_t168C);
      bool _t1697#1 = GT<real>(_t1695,_t1691);
      bool _t1699#1 = BAnd(_t1693,_t1697);
      bool _t169B#1 = BAnd(_t1688,_t1699);
      if _t169B then goto ASSIGN169F else goto ASSIGN16A5
    ASSIGN169F:  preds = [COND169D]
      femData:MeshPos _t169E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh143F,cellInt143E,xn1637,pos143D);
      return _t169E
      goto JOIN16A1
    JOIN16A1:  preds = [*RETURN(_t169E)16A0,*RETURN(_t16A4)16A6]
      goto JOIN16A2
    JOIN16A2:  preds = [*JOIN16A1,COND167B]
      goto FOREACH144C
    ASSIGN16A5:  preds = [COND169D]
      femData:MeshPos _t16A4#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A4
      goto JOIN16A1
    ASSIGN16A8:  preds = [FOREACH144C]
      femData:MeshPos _t16A7#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A7
}
## input initialization
  ENTRY11C4:  preds = []
    real isoval11C5#1 = 0.2e0;
    globals.isoval11A7 = isoval11C5;
    real thick11C8#1 = 0.7e-1;
    globals.thick11A8 = thick11C8;
    real _t11CB#1 = -0.5e0;
    real _t11CD#5 = 0.5e0;
    tensor[3] camEye11CF#1 = <tensor[3]>[_t11CB,_t11CD,_t11CD];
    globals.camEye11A9 = camEye11CF;
    tensor[3] camAt11D2#1 = <tensor[3]>[_t11CD,_t11CD,_t11CD];
    globals.camAt11AA = camAt11D2;
    real _t11D5#2 = 0.e0;
    real _t11D7#2 = 0.1e1;
    tensor[3] camUp11D9#2 = <tensor[3]>[_t11D5,_t11D5,_t11D7];
    globals.camUp11AB = camUp11D9;
    real camFOV11DC#1 = 0.137e2;
    globals.camFOV11AC = camFOV11DC;
    int iresU11DF#2 = 10;
    globals.iresU11AD = iresU11DF;
    globals.iresV11AE = iresU11DF;
    real camNear11E3#1 = -0.2e1;
    globals.camNear11AF = camNear11E3;
    real camFar11E6#1 = 0.5e1;
    globals.camFar11B0 = camFar11E6;
    globals.refStep11B1 = _t11D7;
    real rayStep11EA#1 = 0.1e-1;
    globals.rayStep11B2 = rayStep11EA;
    globals.lightVsp11B3 = camUp11D9;
    real phongKa11EE#1 = 0.1e0;
    globals.phongKa11B4 = phongKa11EE;
    real phongKd11F1#1 = 0.9e0;
    globals.phongKd11B5 = phongKd11F1;
    bool debug11F4#1 = false;
    globals.debug11B6 = debug11F4;
    int debugU11F7#1 = 8;
    globals.debugU11B7 = debugU11F7;
    int debugV11FA#1 = 2;
    globals.debugV11B8 = debugV11FA;
    real eps11FD#1 = 0.1e-8;
    globals.eps11B9 = eps11FD;
    return
## global-variable initialization
  ENTRY1201:  preds = []
    femData:Mesh a1202#3 = globals.a11A4;
    femData:Space 0b0412_intermedateGlobal1204#1 = globals.0b0412_intermedateGlobal11A5;
    femData:FemFunc 0c0414_intermedateGlobal1206#1 = globals.0c0414_intermedateGlobal11A6;
    tensor[3] camEye1208#1 = globals.camEye11A9;
    tensor[3] camAt120A#1 = globals.camAt11AA;
    tensor[3] camUp120C#3 = globals.camUp11AB;
    real camFOV120E#1 = globals.camFOV11AC;
    int iresU1210#1 = globals.iresU11AD;
    int iresV1212#1 = globals.iresV11AE;
    int _t1214#1 = 0;
    int _t1216#1 = 1;
    int _t1218#1 = ExtractFemItem<int,NumCell(Mesh)>(a1202);
    int _t121A#1 = ISub(_t1218,_t1216);
    int[] _t121C#1 = Range(_t1214,_t121A);
    femData:MeshCell[] _t121E#1 = <femData:MeshCell[]>{};
  FOREACH1221:  preds = [ASSIGN121F,NEXT1227]
    foreach (_t1220 in _t121C) on exit goto GASSIGN1228
      femData:MeshCell[] _t1225#2 = phi(_t121E,_t1224)
    femData:MeshCell _t1222#1 = LoadFem<femData:MeshCell>(a1202,_t1220);
    femData:MeshCell[] _t1224#1 = Append<femData:MeshCell>(_t1225,_t1222);
    goto FOREACH1221
  GASSIGN1228:  preds = [FOREACH1221]
    globals.0cell_a11BD = _t1225;
    femData:Space b1229#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal1204,a1202);
    femData:FemFunc c122B#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal1206,b1229);
    globals.c11BE = c122B;
    tensor[3] op1_e3_l_4122E#9 = VSub<3>(camAt120A,camEye1208);
    real op1_e3_l_61231#1 = VDot<3>(op1_e3_l_4122E,op1_e3_l_4122E);
    real op1_e3_l_71234#3 = Sqrt(op1_e3_l_61231);
    real realLit1238#8 = 0.1e1;
    real op1_e3_l_91237#6 = RDiv(realLit1238,op1_e3_l_71234);
    tensor[3] camN123C#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_4122E);
    real realLit1240#6 = 0.e0;
    real r1241#3 = TensorIndex<tensor[3],[0]>(camUp120C);
    real r1242#3 = RMul(realLit1240,r1241);
    real r1243#3 = TensorIndex<tensor[3],[1]>(camUp120C);
    real r1244#3 = RMul(realLit1240,r1243);
    real r1245#3 = TensorIndex<tensor[3],[2]>(camUp120C);
    real r1246#5 = RMul(realLit1240,r1245);
    real r1247#3 = RAdd(r1242,r1244);
    real r1248#3 = RAdd(r1247,r1246);
    real r124A#1 = RMul(realLit1238,r1245);
    real r124B#1 = RAdd(r1247,r124A);
    real realLit124C#6 = -0.1e1;
    real r124D#1 = RMul(realLit124C,r1243);
    real r124E#1 = RAdd(r1242,r124D);
    real r124F#1 = RAdd(r124E,r1246);
    tensor[3] tensor1250#1 = <tensor[3]>[r1248,r124B,r124F];
    real r1251#1 = RMul(realLit124C,r1245);
    real r1252#1 = RAdd(r1247,r1251);
    real r1253#1 = RMul(realLit1238,r1241);
    real r1254#1 = RAdd(r1253,r1244);
    real r1255#1 = RAdd(r1254,r1246);
    tensor[3] tensor1256#1 = <tensor[3]>[r1252,r1248,r1255];
    real r1257#1 = RMul(realLit1238,r1243);
    real r1258#1 = RAdd(r1242,r1257);
    real r1259#1 = RAdd(r1258,r1246);
    real r125A#1 = RMul(realLit124C,r1241);
    real r125B#1 = RAdd(r125A,r1244);
    real r125C#1 = RAdd(r125B,r1246);
    tensor[3] tensor125D#1 = <tensor[3]>[r1259,r125C,r1248];
    real vdot1280#1 = VDot<3>(op1_e3_l_4122E,tensor1250);
    real vdot1282#1 = VDot<3>(op1_e3_l_4122E,tensor1256);
    real vdot1284#1 = VDot<3>(op1_e3_l_4122E,tensor125D);
    tensor[3] op1_e3_l_17127E#6 = <tensor[3]>[vdot1280,vdot1282,vdot1284];
    real op1_e3_l_34128D#1 = VDot<3>(op1_e3_l_17127E,op1_e3_l_17127E);
    real r1291#1 = RMul(op1_e3_l_91237,op1_e3_l_91237);
    real op1_e3_l_351290#1 = RMul(r1291,op1_e3_l_34128D);
    real op1_e3_l_361295#1 = Sqrt(op1_e3_l_351290);
    tensor[3] op1_e3_l_371298#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_17127E);
    real op1_e3_l_38129B#2 = RDiv(realLit1238,op1_e3_l_361295);
    tensor[3] camU12A0#1 = VScale<3>(op1_e3_l_38129B,op1_e3_l_371298);
    globals.camU11BF = camU12A0;
    real r12A6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_4122E);
    real r12A7#3 = RMul(realLit1240,r12A6);
    real r12A8#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_4122E);
    real r12A9#3 = RMul(realLit1240,r12A8);
    real r12AA#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_4122E);
    real r12AB#5 = RMul(realLit1240,r12AA);
    real r12AC#3 = RAdd(r12A7,r12A9);
    real r12AD#3 = RAdd(r12AC,r12AB);
    real r12AF#1 = RMul(realLit1238,r12AA);
    real r12B0#1 = RAdd(r12AC,r12AF);
    real r12B2#1 = RMul(realLit124C,r12A8);
    real r12B3#1 = RAdd(r12A7,r12B2);
    real r12B4#1 = RAdd(r12B3,r12AB);
    tensor[3] tensor12B5#1 = <tensor[3]>[r12AD,r12B0,r12B4];
    real r12B6#1 = RMul(realLit124C,r12AA);
    real r12B7#1 = RAdd(r12AC,r12B6);
    real r12B8#1 = RMul(realLit1238,r12A6);
    real r12B9#1 = RAdd(r12B8,r12A9);
    real r12BA#1 = RAdd(r12B9,r12AB);
    tensor[3] tensor12BB#1 = <tensor[3]>[r12B7,r12AD,r12BA];
    real r12BC#1 = RMul(realLit1238,r12A8);
    real r12BD#1 = RAdd(r12A7,r12BC);
    real r12BE#1 = RAdd(r12BD,r12AB);
    real r12BF#1 = RMul(realLit124C,r12A6);
    real r12C0#1 = RAdd(r12BF,r12A9);
    real r12C1#1 = RAdd(r12C0,r12AB);
    tensor[3] tensor12C2#1 = <tensor[3]>[r12BE,r12C1,r12AD];
    real vdot12E5#1 = VDot<3>(op1_e3_l_17127E,tensor12B5);
    real vdot12E7#1 = VDot<3>(op1_e3_l_17127E,tensor12BB);
    real vdot12E9#1 = VDot<3>(op1_e3_l_17127E,tensor12C2);
    tensor[3] op1_e3_l_4712E3#1 = <tensor[3]>[vdot12E5,vdot12E7,vdot12E9];
    tensor[3] op1_e3_l_5012F2#3 = VScale<3>(op1_e3_l_91237,op1_e3_l_4712E3);
    real r12F6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5012F2);
    real r12F7#3 = RMul(op1_e3_l_38129B,op1_e3_l_91237);
    real r12F8#1 = RMul(r12F7,r12F6);
    real r12F9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5012F2);
    real r12FA#1 = RMul(r12F7,r12F9);
    real r12FB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5012F2);
    real r12FC#1 = RMul(r12F7,r12FB);
    tensor[3] camV12F5#1 = <tensor[3]>[r12F8,r12FA,r12FC];
    globals.camV11C0 = camV12F5;
    real _t1307#1 = 0.314159265358979323846264338327950288e1;
    real _t1309#1 = 0.36e3;
    real op1_e3_l_5130B#1 = RMul(camFOV120E,_t1307);
    real op1_e3_l_6130E#1 = RDiv(op1_e3_l_5130B,_t1309);
    real op1_e3_l_101311#2 = Tan(op1_e3_l_6130E);
    real camVmax1314#1 = RMul(op1_e3_l_101311,op1_e3_l_71234);
    globals.camVmax11C1 = camVmax1314;
    real _t1318#1 = IntToReal(iresU1210);
    real _t131A#1 = IntToReal(iresV1212);
    real r131D#1 = RMul(_t1318,op1_e3_l_101311);
    real op1_e3_l_14131C#1 = RMul(r131D,op1_e3_l_71234);
    real camUmax1321#1 = RDiv(op1_e3_l_14131C,_t131A);
    globals.camUmax11C2 = camUmax1321;
    globals.rayVec11C3 = camN123C;
    return
## strand
  strand ray (int ui1327#2, int vi1328#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY1338:  preds = []
        femData:MeshCell[] 0cell_a1339#1 = globals.0cell_a11BD;
        femData:FemFunc c133B#1 = globals.c11BE;
        tensor[3] camEye133D#1 = globals.camEye11A9;
        int iresU133F#2 = globals.iresU11AD;
        int iresV1341#3 = globals.iresV11AE;
        int[] indecies1343#2 = globals.indecies11BA;
        tensor[2][] times1345#1 = globals.times11BB;
        tensor[3] camU1347#1 = globals.camU11BF;
        tensor[3] camV1349#1 = globals.camV11C0;
        real camVmax134B#2 = globals.camVmax11C1;
        real camUmax134D#2 = globals.camUmax11C2;
        real _t134F#4 = -0.5e0;
        real _t1351#1 = IntToReal(ui1327);
        real _t1353#1 = IntToReal(iresU133F);
        real _t1355#2 = 0.5e0;
        real op1_e3_l_61357#1 = RSub(_t1353,_t1355);
        real op1_e3_l_7135A#1 = RSub(_t1351,_t134F);
        real op1_e3_l_8135D#1 = RSub(op1_e3_l_61357,_t134F);
        real op1_e3_l_91360#2 = RNeg(camUmax134D);
        real op1_e3_l_101363#1 = RDiv(op1_e3_l_7135A,op1_e3_l_8135D);
        real op1_e3_l_111366#1 = RSub(camUmax134D,op1_e3_l_91360);
        real op1_e3_l_131369#1 = RMul(op1_e3_l_101363,op1_e3_l_111366);
        real rayU136C#2 = RAdd(op1_e3_l_91360,op1_e3_l_131369);
        real _t136F#1 = IntToReal(vi1328);
        real _t1371#1 = IntToReal(iresV1341);
        real op1_e3_l_61373#1 = RSub(_t1371,_t1355);
        real op1_e3_l_71376#1 = RSub(_t136F,_t134F);
        real op1_e3_l_81379#1 = RSub(op1_e3_l_61373,_t134F);
        real op1_e3_l_9137C#2 = RNeg(camVmax134B);
        real op1_e3_l_10137F#1 = RDiv(op1_e3_l_71376,op1_e3_l_81379);
        real op1_e3_l_111382#1 = RSub(camVmax134B,op1_e3_l_9137C);
        real op1_e3_l_131385#1 = RMul(op1_e3_l_10137F,op1_e3_l_111382);
        real rayV1388#2 = RAdd(op1_e3_l_9137C,op1_e3_l_131385);
        tensor[3] op1_e3_l_32139A#2 = VScale<3>(rayU136C,camU1347);
        tensor[3] op1_e3_l_33139D#2 = VScale<3>(rayV1388,camV1349);
        tensor[3] UV13A0#1 = VAdd<3>(op1_e3_l_32139A,op1_e3_l_33139D);
        tensor[3] v13A4#1 = VAdd<3>(camEye133D,op1_e3_l_32139A);
        tensor[3] rayOrig13A3#1 = VAdd<3>(v13A4,op1_e3_l_33139D);
        int _t13A8#2 = IMul(ui1327,iresV1341);
        int _t13AA#1 = IAdd(_t13A8,vi1328);
        int offset13AC#3 = Subscript<int[]>(indecies1343,_t13AA);
        int _t13AE#1 = IMul(iresU133F,iresV1341);
        int _t13B0#1 = IAdd(_t13AE,_t13A8);
        int _t13B2#1 = IAdd(_t13B0,vi1328);
        int len13B4#1 = Subscript<int[]>(indecies1343,_t13B2);
        int itter13B6#2 = 0;
        tensor[2] interval13BA#3 = Subscript<tensor[2][]>(times1345,offset13AC);
        real s13BC#1 = VIndex<2,0>(interval13BA);
        real e13BE#1 = VIndex<2,1>(interval13BA);
        femData:MeshCell cc13C0#2 = Subscript<femData:MeshCell[]>(0cell_a1339,itter13B6);
        int _t13C2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13C0);
        femData:FuncCell _t13C4#1 = LoadFem<femData:FuncCell>(c133B,_t13C2);
        tensor[2][0] _t13C6#1 = <tensor[2][0]>{};
        tensor[2][] _t13C8#1 = MkDynamic<tensor[2],0>(_t13C6);
        femData:MeshCell[0] _t13CA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t13CC#1 = MkDynamic<femData:MeshCell,0>(_t13CA);
        self.rayU = rayU136C;
        self.rayV = rayV1388;
        self.UV = UV13A0;
        self.rayOrig = rayOrig13A3;
        self.offset = offset13AC;
        self.len = len13B4;
        self.itter = itter13B6;
        self.idx = offset13AC;
        self.interval = interval13BA;
        self.s = s13BC;
        self.e = e13BE;
        self.cc = cc13C0;
        self.fc = _t13C4;
        self.intervals = _t13C8;
        self.newCells = _t13CC;
        return
    end state init
    method start
        ENTRY13DE:  preds = []
          femData:MeshCell[] 0cell_a13DF#1 = globals.0cell_a11BD;
          femData:FemFunc c13E1#1 = globals.c11BE;
          int[] cells13E3#1 = globals.cells11BC;
          int len13E5#1 = self.len;
          int idx13E7#1 = self.idx;
          int _t13E9#1 = 0;
          bool _t13EB#1 = EQ<int>(len13E5,_t13E9);
          if _t13EB then goto STABILIZE13EE else goto JOIN13EF
        STABILIZE13EE:  preds = [COND13ED]
          stabilize
          goto JOIN13EF
        JOIN13EF:  preds = [*STABILIZE13EE,COND13ED]
          int _t13F0#1 = Subscript<int[]>(cells13E3,idx13E7);
          femData:MeshCell cc13F2#2 = Subscript<femData:MeshCell[]>(0cell_a13DF,_t13F0);
          int _t13F4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13F2);
          femData:FuncCell _t13F6#1 = LoadFem<femData:FuncCell>(c13E1,_t13F4);
          self.cc = cc13F2;
          self.fc = _t13F6;
          active
    end start
    method update
        ENTRY13FB:  preds = []
          femData:MeshCell[] 0cell_a13FC#1 = globals.0cell_a11BD;
          femData:FemFunc c13FE#1 = globals.c11BE;
          tensor[2][] times1400#1 = globals.times11BB;
          int[] cells1402#1 = globals.cells11BC;
          tensor[3] rayVec1404#4 = globals.rayVec11C3;
          tensor[3] rayOrig1406#1 = self.rayOrig;
          int offset1408#1 = self.offset;
          int len140A#2 = self.len;
          int itter140C#2 = self.itter;
          tensor[2] interval140E#1 = self.interval;
          real s1410#5 = self.s;
          real e1412#3 = self.e;
          femData:MeshCell cc1414#5 = self.cc;
          femData:FuncCell fc1416#3 = self.fc;
          tensor[2][] intervals1418#2 = self.intervals;
          femData:MeshCell[] newCells141A#2 = self.newCells;
          int _t141C#17 = 1;
          bool _t141E#1 = LT<int>(len140A,_t141C);
          if _t141E then goto STABILIZE1421 else goto JOIN1422
        STABILIZE1421:  preds = [COND1420]
          stabilize
          goto JOIN1422
        JOIN1422:  preds = [*STABILIZE1421,COND1420]
          tensor[3] op1_e3_l_31423#1 = VScale<3>(s1410,rayVec1404);
          tensor[3] rayStart1426#3 = VAdd<3>(rayOrig1406,op1_e3_l_31423);
          real _t1429#1 = VIndex<3,0>(rayStart1426);
          real _t142B#1 = VIndex<3,1>(rayStart1426);
          tensor[2] project142D#2 = <tensor[2]>[_t1429,_t142B];
          femData:FemFunc _t142F#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1416);
          femData:Space _t1431#6 = ExtractFem<femData:Space,femData:FemFunc>(_t142F);
          int _t1433#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1416);
          femData:Mesh _t1435#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1414);
          int _t1437#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1414);
          real _t1439#2 = VIndex<3,2>(rayStart1426);
          femData:MeshPos callNewtonPos143B#1 = _0994_msh_newtonInverse143C (project142D,_t1437,_t1435);
          tensor[2] refPos16AB#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos143B);
          int ilit16AE#1 = 6;
          int mulRes16AF#6 = IMul(_t1433,ilit16AE);
          int idx16B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,mulRes16AF);
          int addRes16B4#1 = IAdd(mulRes16AF,_t141C);
          int idx16B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B4);
          int ilit16B6#5 = 2;
          int addRes16B7#1 = IAdd(mulRes16AF,ilit16B6);
          int idx16B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B7);
          int ilit16B9#2 = 3;
          int addRes16BA#1 = IAdd(mulRes16AF,ilit16B9);
          int idx16BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BA);
          int ilit16BC#1 = 4;
          int addRes16BD#1 = IAdd(mulRes16AF,ilit16BC);
          int idx16BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BD);
          int ilit16BF#1 = 5;
          int addRes16C0#1 = IAdd(mulRes16AF,ilit16BF);
          int idx16C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16C0);
          int mulRes16DD#1 = IMul(_t141C,idx16B2);
          int mulRes16DF#1 = IMul(_t141C,idx16B5);
          int mulRes16E2#1 = IMul(_t141C,idx16B8);
          int mulRes16E5#1 = IMul(_t141C,idx16BB);
          int mulRes16E8#1 = IMul(_t141C,idx16BE);
          int mulRes16EB#1 = IMul(_t141C,idx16C1);
          real dof16EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DD);
          real dof16ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DF);
          real dof16EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E2);
          real dof16EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E5);
          real dof16F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E8);
          real dof16F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16EB);
          tensor[6] dofs16F2#4 = <tensor[6]>[dof16EC,dof16ED,dof16EE,dof16EF,dof16F0,dof16F1];
          real varAcc170E#4 = VIndex<2,0>(refPos16AB);
          real varAcc170F#4 = VIndex<2,1>(refPos16AB);
          real coeff1710#5 = 0.2e1;
          real prod21712#1 = RMul(varAcc170E,varAcc170E);
          real one1713#16 = 0.1e1;
          real prod1714#2 = RMul(prod21712,one1713);
          real coeff1715#7 = 0.4e1;
          real prod1717#2 = RMul(varAcc170E,varAcc170F);
          real coeff1718#5 = -0.3e1;
          real prod1719#5 = RMul(varAcc170E,one1713);
          real prod2171A#1 = RMul(varAcc170F,varAcc170F);
          real prod171B#1 = RMul(one1713,prod2171A);
          real prod171C#4 = RMul(one1713,varAcc170F);
          real prod171D#4 = RMul(one1713,one1713);
          real mult171E#6 = RMul(one1713,prod171D);
          real mult171F#1 = RMul(coeff1718,prod171C);
          real mult1720#2 = RMul(coeff1710,prod171B);
          real mult1721#1 = RMul(coeff1718,prod1719);
          real mult1722#2 = RMul(coeff1715,prod1717);
          real mult1723#2 = RMul(coeff1710,prod1714);
          real sum1724#1 = RAdd(mult1722,mult1723);
          real sum1725#1 = RAdd(mult1721,sum1724);
          real sum1726#1 = RAdd(mult1720,sum1725);
          real sum1727#1 = RAdd(mult171F,sum1726);
          real sum1728#1 = RAdd(mult171E,sum1727);
          real coeff172A#10 = -0.1e1;
          real mult172B#1 = RMul(coeff172A,prod1719);
          real sum172C#1 = RAdd(mult172B,mult1723);
          real mult172E#1 = RMul(coeff172A,prod171C);
          real sum172F#1 = RAdd(mult172E,mult1720);
          real coeff1731#6 = -0.4e1;
          real mult1732#4 = RMul(coeff1715,prod171C);
          real mult1733#2 = RMul(coeff1731,prod1717);
          real sum1734#1 = RAdd(mult1732,mult1733);
          real mult1736#4 = RMul(coeff1715,prod1719);
          real mult1737#1 = RMul(coeff1731,prod1714);
          real sum1738#1 = RAdd(mult1733,mult1737);
          real sum1739#1 = RAdd(mult1736,sum1738);
          tensor[6] intermediateCons173B#1 = <tensor[6]>[sum1728,sum172C,sum172F,mult1722,sum1734,sum1739];
          real compositionl176B#1 = VDot<6>(dofs16F2,intermediateCons173B);
          real f0176E#5 = RSub(compositionl176B,_t1439);
          real _t1771#1 = VIndex<3,0>(rayVec1404);
          real _t1773#1 = VIndex<3,1>(rayVec1404);
          tensor[2] _t1775#2 = <tensor[2]>[_t1771,_t1773];
          real _t1777#2 = VIndex<3,2>(rayVec1404);
          int _t1779#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1414);
          real _t177B#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t1435,_t1779);
          real mult1788#1 = RMul(coeff1718,prod171D);
          real sum178B#1 = RAdd(mult1732,mult1736);
          real sum178C#2 = RAdd(mult1788,sum178B);
          real mult178F#4 = RMul(coeff172A,prod171D);
          real sum1790#1 = RAdd(mult178F,mult1736);
          real basisEval1792#20 = 0.e0;
          real basisEval1794#2 = RMul(coeff1731,prod171C);
          real coeff1795#1 = -0.8e1;
          real mult1796#2 = RMul(coeff1715,prod171D);
          real mult1797#1 = RMul(coeff1795,prod1719);
          real sum1798#1 = RAdd(basisEval1794,mult1797);
          real sum1799#1 = RAdd(mult1796,sum1798);
          real sum179C#1 = RAdd(mult178F,mult1732);
          real mult179E#2 = RMul(coeff1731,prod1719);
          real sum179F#1 = RAdd(mult1796,mult179E);
          tensor[6] intermediateCons17A1#1 = <tensor[6]>[sum178C,sum1790,basisEval1792,mult1732,basisEval1794,sum1799];
          tensor[6] intermediateCons17A2#1 = <tensor[6]>[sum178C,basisEval1792,sum179C,mult1736,sum179F,mult179E];
          real vdot17CD#2 = VDot<6>(dofs16F2,intermediateCons17A1);
          real vdot17CF#2 = VDot<6>(dofs16F2,intermediateCons17A2);
          int mulRes17D8#3 = IMul(_t1437,ilit16B9);
          int idx17DB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,mulRes17D8);
          int addRes17DD#1 = IAdd(mulRes17D8,_t141C);
          int idx17DE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DD);
          int addRes17E0#1 = IAdd(mulRes17D8,ilit16B6);
          int idx17E1#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17E0);
          int mulRes17F4#2 = IMul(ilit16B6,idx17DB);
          int addRes17F7#1 = IAdd(_t141C,mulRes17F4);
          real dof_load17F8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17F4);
          real dof_load17F9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F7);
          int mulRes17FC#2 = IMul(ilit16B6,idx17DE);
          int addRes17FE#1 = IAdd(_t141C,mulRes17FC);
          real dof_load17FF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17FC);
          real dof_load1800#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FE);
          int mulRes1803#2 = IMul(ilit16B6,idx17E1);
          int addRes1805#1 = IAdd(_t141C,mulRes1803);
          real dof_load1806#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes1803);
          real dof_load1807#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1805);
          real r183F#2 = RMul(dof_load17F8,mult178F);
          real r1842#1 = RMul(dof_load17FF,mult171E);
          real r1845#1 = RMul(dof_load1806,basisEval1792);
          real r1846#1 = RAdd(r183F,r1842);
          real r1847#3 = RAdd(r1846,r1845);
          real r184B#1 = RMul(dof_load17FF,basisEval1792);
          real r184D#1 = RMul(dof_load1806,mult171E);
          real r184E#1 = RAdd(r183F,r184B);
          real r184F#3 = RAdd(r184E,r184D);
          real r1852#2 = RMul(dof_load17F9,mult178F);
          real r1854#1 = RMul(dof_load1800,mult171E);
          real r1856#1 = RMul(dof_load1807,basisEval1792);
          real r1857#1 = RAdd(r1852,r1854);
          real r1858#3 = RAdd(r1857,r1856);
          real r185A#1 = RMul(dof_load1800,basisEval1792);
          real r185B#1 = RMul(dof_load1807,mult171E);
          real r185C#1 = RAdd(r1852,r185A);
          real r185D#3 = RAdd(r185C,r185B);
          real r1886#1 = RMul(basisEval1792,r1847);
          real r1889#1 = RMul(coeff172A,r1858);
          real r188A#2 = RAdd(r1886,r1889);
          real r188C#2 = RMul(basisEval1792,r184F);
          real r188E#1 = RMul(coeff172A,r185D);
          real r188F#2 = RAdd(r188C,r188E);
          real r1892#1 = RMul(one1713,r1847);
          real r1893#1 = RMul(basisEval1792,r1858);
          real r1894#2 = RAdd(r1892,r1893);
          real r1895#1 = RMul(one1713,r184F);
          real r1896#2 = RMul(basisEval1792,r185D);
          real r1897#2 = RAdd(r1895,r1896);
          tensor[2] probe_l_1318B0#1 = <tensor[2]>[r1847,r1858];
          real r1908#1 = RMul(one1713,r185D);
          real r1909#1 = RAdd(r188C,r1908);
          real r190B#1 = RMul(coeff172A,r184F);
          real r190D#1 = RAdd(r190B,r1896);
          tensor[2] op1_e3_l_151902#1 = <tensor[2]>[r1909,r190D];
          real r191E#1 = RMul(basisEval1792,r188A);
          real r1921#1 = RMul(coeff172A,r188F);
          real r1922#1 = RAdd(r191E,r1921);
          real r1924#1 = RMul(basisEval1792,r1894);
          real r1926#1 = RMul(coeff172A,r1897);
          real r1927#1 = RAdd(r1924,r1926);
          real r192A#1 = RMul(one1713,r188A);
          real r192B#1 = RMul(basisEval1792,r188F);
          real r192C#1 = RAdd(r192A,r192B);
          real r192D#1 = RMul(one1713,r1894);
          real r192E#1 = RMul(basisEval1792,r1897);
          real r192F#1 = RAdd(r192D,r192E);
          real op1_e3_l_171948#4 = VDot<2>(probe_l_1318B0,op1_e3_l_151902);
          real r194D#1 = RDiv(r1922,op1_e3_l_171948);
          real r194F#1 = RDiv(r1927,op1_e3_l_171948);
          real r1952#1 = RDiv(r192C,op1_e3_l_171948);
          real r1954#1 = RDiv(r192F,op1_e3_l_171948);
          real r1965#1 = RMul(vdot17CD,r194D);
          real r1968#1 = RMul(vdot17CF,r1952);
          real r1969#1 = RAdd(r1965,r1968);
          real r196B#1 = RMul(vdot17CD,r194F);
          real r196D#1 = RMul(vdot17CF,r1954);
          real r196E#1 = RAdd(r196B,r196D);
          tensor[2] op1_e3_l_191962#1 = <tensor[2]>[r1969,r196E];
          real op1_e3_l_20197D#1 = VDot<2>(_t1775,op1_e3_l_191962);
          real op1_e3_l_211980#1 = RSub(op1_e3_l_20197D,_t1777);
          real op1_e3_l_221983#1 = Abs<real>(op1_e3_l_211980);
          real _t1986#1 = RDiv(op1_e3_l_221983,_t177B);
          real _t1989#1 = RSub(e1412,s1410);
          real gradEps198C#6 = Min<real>(_t1986,_t1989);
          tensor[2] op1_e3_l_3198E#1 = VScale<2>(gradEps198C,_t1775);
          tensor[2] _t1991#1 = VAdd<2>(project142D,op1_e3_l_3198E);
          femData:MeshPos callNewtonPos1994#1 = _0994_msh_newtonInverse143C (_t1991,_t1437,_t1435);
          tensor[2] refPos1996#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1994);
          real varAcc1999#4 = VIndex<2,0>(refPos1996);
          real varAcc199A#4 = VIndex<2,1>(refPos1996);
          real prod2199D#1 = RMul(varAcc1999,varAcc1999);
          real prod199F#2 = RMul(prod2199D,one1713);
          real prod19A2#2 = RMul(varAcc1999,varAcc199A);
          real prod19A4#3 = RMul(varAcc1999,one1713);
          real prod219A5#1 = RMul(varAcc199A,varAcc199A);
          real prod19A6#1 = RMul(one1713,prod219A5);
          real prod19A7#3 = RMul(one1713,varAcc199A);
          real mult19AA#1 = RMul(coeff1718,prod19A7);
          real mult19AB#2 = RMul(coeff1710,prod19A6);
          real mult19AC#1 = RMul(coeff1718,prod19A4);
          real mult19AD#2 = RMul(coeff1715,prod19A2);
          real mult19AE#2 = RMul(coeff1710,prod199F);
          real sum19AF#1 = RAdd(mult19AD,mult19AE);
          real sum19B0#1 = RAdd(mult19AC,sum19AF);
          real sum19B1#1 = RAdd(mult19AB,sum19B0);
          real sum19B2#1 = RAdd(mult19AA,sum19B1);
          real sum19B3#1 = RAdd(mult171E,sum19B2);
          real mult19B6#1 = RMul(coeff172A,prod19A4);
          real sum19B7#1 = RAdd(mult19B6,mult19AE);
          real mult19B9#1 = RMul(coeff172A,prod19A7);
          real sum19BA#1 = RAdd(mult19B9,mult19AB);
          real mult19BD#1 = RMul(coeff1715,prod19A7);
          real mult19BE#2 = RMul(coeff1731,prod19A2);
          real sum19BF#1 = RAdd(mult19BD,mult19BE);
          real mult19C1#1 = RMul(coeff1715,prod19A4);
          real mult19C2#1 = RMul(coeff1731,prod199F);
          real sum19C3#1 = RAdd(mult19BE,mult19C2);
          real sum19C4#1 = RAdd(mult19C1,sum19C3);
          tensor[6] intermediateCons19C6#1 = <tensor[6]>[sum19B3,sum19B7,sum19BA,mult19AD,sum19BF,sum19C4];
          real compositionl19F6#1 = VDot<6>(dofs16F2,intermediateCons19C6);
          real op1_e3_l_1119F9#1 = RSub(compositionl19F6,_t1439);
          real op1_e3_l_1219FC#1 = RMul(gradEps198C,_t1777);
          real f119FF#4 = RSub(op1_e3_l_1119F9,op1_e3_l_1219FC);
          string _t1A02#1 = "vals:";
          tensor[2] _t1A04#2 = <tensor[2]>[f0176E,f119FF];
          string _t1A06#6 = "\n";
          Print<[string,tensor[2],string]>(_t1A02,_t1A04,_t1A06);
          bool _t1A0B#2 = GT<real>(f0176E,basisEval1792);
          if _t1A0B then goto JOIN1A10 else goto ASSIGN1C17
        JOIN1A10:  preds = [COND1A0D,JOIN1AAC]
          int _t1A0E#1 = phi(_t141C,_t1A0F)
          bool _t1A11#2 = GT<real>(f119FF,basisEval1792);
          if _t1A11 then goto JOIN1A16 else goto ASSIGN1C19
        JOIN1A16:  preds = [COND1A13,JOIN1AA4]
          int _t1A14#1 = phi(_t141C,_t1A15)
          int _t1A17#1 = IMul(_t1A0E,_t1A14);
          int _t1A19#4 = 0;
          bool _t1A1B#1 = GT<int>(_t1A17,_t1A19);
          bool _t1A1D#1 = BNot(_t1A1B);
          if _t1A1D then goto COND1A20 else goto ASSIGN1A8A
        COND1A20:  preds = [COND1A1F]
          if _t1A0B then goto JOIN1A23 else goto ASSIGN1C1B
        JOIN1A23:  preds = [COND1A20,JOIN1A86]
          int _t1A21#1 = phi(_t141C,_t1A22)
          if _t1A11 then goto JOIN1A27 else goto ASSIGN1C1C
        JOIN1A27:  preds = [COND1A24,JOIN1A80]
          int _t1A25#1 = phi(_t141C,_t1A26)
          int _t1A28#1 = IMul(_t1A21,_t1A25);
          bool _t1A2A#1 = EQ<int>(_t1A28,_t1A19);
          if _t1A2A then goto ASSIGN1A2E else goto JOIN1A30
        ASSIGN1A2E:  preds = [COND1A2C]
          string _t1A2D#1 = "Warn: 0 update\n";
          Print<[string]>(_t1A2D);
          goto JOIN1A30
        JOIN1A30:  preds = [MASSIGN1A2F,COND1A2C]
          string _t1A31#1 = "update with interval:";
          Print<[string,real,string]>(_t1A31,gradEps198C,_t1A06);
          string _t1A34#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1A34,_t1A04,_t1A06);
          string _t1A37#1 = "New interval:";
          real _t1A39#2 = RAdd(s1410,gradEps198C);
          tensor[2] _t1A3C#2 = <tensor[2]>[s1410,_t1A39];
          Print<[string,tensor[2],string]>(_t1A37,_t1A3C,_t1A06);
          tensor[2][] intervals1A3F#1 = Append<tensor[2]>(intervals1418,_t1A3C);
          femData:MeshCell[] newCells1A41#1 = Append<femData:MeshCell>(newCells141A,cc1414);
          goto JOIN1A47
        JOIN1A47:  preds = [ASSIGN1A42,ASSIGN1A9D]
          femData:MeshCell[] newCells1A43#2 = phi(newCells1A41,newCells141A)
          tensor[2][] intervals1A44#2 = phi(intervals1A3F,intervals1418)
          real s1A45#3 = phi(_t1A39,s1A46)
          bool _t1A48#1 = GTE<real>(s1A45,e1412);
          if _t1A48 then goto ASSIGN1A4C else goto JOIN1A66
        ASSIGN1A4C:  preds = [COND1A4A]
          int itter1A4B#4 = IAdd(itter140C,_t141C);
          bool _t1A4D#1 = GTE<int>(itter1A4B,len140A);
          if _t1A4D then goto SAVE1A50 else goto ASSIGN1A71
        SAVE1A50:  preds = [COND1A4F]
          self.itter = itter1A4B;
          self.s = s1A45;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          stabilize
          goto JOIN1A5F
        JOIN1A5F:  preds = [*STABILIZE1A54,ASSIGN1A7A]
          femData:FuncCell fc1A55#1 = phi(_t1A56)
          femData:MeshCell cc1A57#1 = phi(cc1A58)
          real e1A59#1 = phi(e1A5A)
          real s1A5B#1 = phi(s1A5C)
          tensor[2] interval1A5D#1 = phi(interval1A5E)
          goto JOIN1A66
        JOIN1A66:  preds = [JOIN1A5F,COND1A4A]
          femData:FuncCell fc1A60#1 = phi(fc1A55,fc1416)
          femData:MeshCell cc1A61#1 = phi(cc1A57,cc1414)
          real e1A62#1 = phi(e1A59,e1412)
          real s1A63#1 = phi(s1A5B,s1A45)
          tensor[2] interval1A64#1 = phi(interval1A5D,interval140E)
          int itter1A65#1 = phi(itter1A4B,itter140C)
          self.itter = itter1A65;
          self.interval = interval1A64;
          self.s = s1A63;
          self.e = e1A62;
          self.cc = cc1A61;
          self.fc = fc1A60;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          active
        ASSIGN1A71:  preds = [COND1A4F]
          int _t1A70#2 = IAdd(offset1408,itter1A4B);
          tensor[2] interval1A5E#3 = Subscript<tensor[2][]>(times1400,_t1A70);
          int _t1A73#1 = Subscript<int[]>(cells1402,_t1A70);
          femData:MeshCell cc1A58#2 = Subscript<femData:MeshCell[]>(0cell_a13FC,_t1A73);
          real s1A5C#1 = VIndex<2,0>(interval1A5E);
          real e1A5A#1 = VIndex<2,1>(interval1A5E);
          int _t1A78#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1A58);
          femData:FuncCell _t1A56#1 = LoadFem<femData:FuncCell>(c13FE,_t1A78);
          goto JOIN1A5F
        ASSIGN1C1C:  preds = [COND1A24]
          bool _t1A7B#1 = LT<real>(f119FF,basisEval1792);
          if _t1A7B then goto ASSIGN1A7F else goto JOIN1A80
        ASSIGN1A7F:  preds = [COND1A7D]
          int _t1A7E#1 = -1;
          goto JOIN1A80
        JOIN1A80:  preds = [ASSIGN1A7F,COND1A7D]
          int _t1A26#1 = phi(_t1A7E,_t1A19)
          goto JOIN1A27
        ASSIGN1C1B:  preds = [COND1A20]
          bool _t1A81#1 = LT<real>(f0176E,basisEval1792);
          if _t1A81 then goto ASSIGN1A85 else goto JOIN1A86
        ASSIGN1A85:  preds = [COND1A83]
          int _t1A84#1 = -1;
          goto JOIN1A86
        JOIN1A86:  preds = [ASSIGN1A85,COND1A83]
          int _t1A22#1 = phi(_t1A84,_t1A19)
          goto JOIN1A23
        ASSIGN1A8A:  preds = [COND1A1F]
          real _t1A89#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t1435,_t1779);
          real op1_e3_l_121A8B#1 = Abs<real>(f0176E);
          real op1_e3_l_131A8E#1 = RMul(coeff1710,_t1A89);
          real _t1A91#1 = RDiv(op1_e3_l_121A8B,op1_e3_l_131A8E);
          real epsUpdate1A94#2 = Max<real>(gradEps198C,_t1A91);
          string _t1A96#1 = "update L:";
          Print<[string,real,string]>(_t1A96,epsUpdate1A94,_t1A06);
          string _t1A99#1 = "update G:";
          Print<[string,real,string]>(_t1A99,gradEps198C,_t1A06);
          real s1A46#1 = RAdd(s1410,epsUpdate1A94);
          goto JOIN1A47
        ASSIGN1C19:  preds = [COND1A13]
          bool _t1A9E#1 = LT<real>(f119FF,basisEval1792);
          if _t1A9E then goto ASSIGN1AA2 else goto ASSIGN1AA5
        ASSIGN1AA2:  preds = [COND1AA0]
          int _t1AA1#1 = -1;
          goto JOIN1AA4
        JOIN1AA4:  preds = [ASSIGN1AA2,ASSIGN1AA5]
          int _t1A15#1 = phi(_t1AA1,_t1AA3)
          goto JOIN1A16
        ASSIGN1AA5:  preds = [COND1AA0]
          int _t1AA3#1 = 0;
          goto JOIN1AA4
        ASSIGN1C17:  preds = [COND1A0D]
          bool _t1AA6#1 = LT<real>(f0176E,basisEval1792);
          if _t1AA6 then goto ASSIGN1AAA else goto ASSIGN1AAD
        ASSIGN1AAA:  preds = [COND1AA8]
          int _t1AA9#1 = -1;
          goto JOIN1AAC
        JOIN1AAC:  preds = [ASSIGN1AAA,ASSIGN1AAD]
          int _t1A0F#1 = phi(_t1AA9,_t1AAB)
          goto JOIN1A10
        ASSIGN1AAD:  preds = [COND1AA8]
          int _t1AAB#1 = 0;
          goto JOIN1AAC
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1AAE:  preds = []
      int iresU1AAF#1 = globals.iresU11AD;
      int iresV1AB1#1 = globals.iresV11AE;
      int _t1AB3#2 = 0;
      int _t1AB5#2 = 1;
      int _t1AB7#1 = ISub(iresU1AAF,_t1AB5);
      int[] _t1AB9#1 = Range(_t1AB3,_t1AB7);
    FOREACH1ABC:  preds = [ASSIGN1ABA,NEXT1AC5]
      foreach (vi1ABB in _t1AB9) on exit goto RETURN1AC6
      int _t1ABD#1 = ISub(iresV1AB1,_t1AB5);
      int[] _t1ABF#1 = Range(_t1AB3,_t1ABD);
    FOREACH1AC2:  preds = [ASSIGN1AC0,NEXT1AC4]
      foreach (ui1AC1 in _t1ABF) on exit goto NEXT1AC5
      new ray(ui1AC1,vi1ABB);
      goto FOREACH1AC2
    NEXT1AC5:  preds = [FOREACH1AC2]
      goto FOREACH1ABC
    RETURN1AC6:  preds = [FOREACH1ABC]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a11A4 (a) = <no-default>
  input 0b0412_intermedateGlobal11A5 (b) = <no-default>
  input 0c0414_intermedateGlobal11A6 (c) = <no-default>
  input isoval11A7 (isoval) = <default>
  input thick11A8 (thick) = <default>
  input camEye11A9 (camEye) = <default>
  input camAt11AA (camAt) = <default>
  input camUp11AB (camUp) = <default>
  input camFOV11AC (camFOV) = <default>
  input iresU11AD (iresU) = <default>
  input iresV11AE (iresV) = <default>
  input camNear11AF (camNear) = <default>
  input camFar11B0 (camFar) = <default>
  input refStep11B1 (refStep) = <default>
  input rayStep11B2 (rayStep) = <default>
  input lightVsp11B3 (lightVsp) = <default>
  input phongKa11B4 (phongKa) = <default>
  input phongKd11B5 (phongKd) = <default>
  input debug11B6 (debug) = <default>
  input debugU11B7 (debugU) = <default>
  input debugV11B8 (debugV) = <default>
  input eps11B9 (eps) = <default>
  input indecies11BA (indecies) = <no-default>
  input times11BB (times) = <no-default>
  input cells11BC (cells) = <no-default>
  global femData:MeshCell[] 0cell_a11BD
  global femData:FemFunc c11BE
  global tensor[3] camU11BF
  global tensor[3] camV11C0
  global real camVmax11C1
  global real camUmax11C2
  global tensor[3] rayVec11C3
## functions
  function femData:MeshPos _0994_msh_newtonInverse143C (tensor[2] pos143D#2, int cellInt143E#2, femData:Mesh mesh143F#12) {
    ENTRY1440:  preds = []
      real _t1441#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn1443#1 = <tensor[2]>[_t1441,_t1441];
      int _t1445#1 = 0;
      int _t1447#1 = 16;
      int[] _t1449#1 = Range(_t1445,_t1447);
    FOREACH144C:  preds = [ASSIGN144A,NEXT16A3]
      foreach (itter144B in _t1449) on exit goto ASSIGN16A8
        tensor[2] xn15C3#3 = phi(xn1443,xn1637)
      int ilit144E#1 = 3;
      int mulRes144F#3 = IMul(cellInt143E,ilit144E);
      int idx1452#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,mulRes144F);
      int ilit1453#4 = 1;
      int addRes1454#1 = IAdd(mulRes144F,ilit1453);
      int idx1455#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1454);
      int ilit1456#4 = 2;
      int addRes1457#1 = IAdd(mulRes144F,ilit1456);
      int idx1458#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1457);
      int mulRes146B#2 = IMul(ilit1456,idx1452);
      int addRes146E#1 = IAdd(ilit1453,mulRes146B);
      real dof_load146F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes146B);
      real dof_load1470#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146E);
      int mulRes1473#2 = IMul(ilit1456,idx1455);
      int addRes1475#1 = IAdd(ilit1453,mulRes1473);
      real dof_load1476#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes1473);
      real dof_load1477#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1475);
      int mulRes147A#2 = IMul(ilit1456,idx1458);
      int addRes147C#1 = IAdd(ilit1453,mulRes147A);
      real dof_load147D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes147A);
      real dof_load147E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147C);
      real coeff149E#8 = -0.1e1;
      real one149F#15 = 0.1e1;
      real prod14A0#2 = RMul(one149F,one149F);
      real basisEval14A1#2 = RMul(coeff149E,prod14A0);
      real basisEval14A2#5 = RMul(one149F,prod14A0);
      real basisEval14A3#12 = 0.e0;
      real r14B6#2 = RMul(dof_load146F,basisEval14A1);
      real r14B9#1 = RMul(dof_load1476,basisEval14A2);
      real r14BC#1 = RMul(dof_load147D,basisEval14A3);
      real r14BD#1 = RAdd(r14B6,r14B9);
      real r14BE#3 = RAdd(r14BD,r14BC);
      real r14C2#1 = RMul(dof_load1476,basisEval14A3);
      real r14C4#1 = RMul(dof_load147D,basisEval14A2);
      real r14C5#1 = RAdd(r14B6,r14C2);
      real r14C6#3 = RAdd(r14C5,r14C4);
      real r14C9#2 = RMul(dof_load1470,basisEval14A1);
      real r14CB#1 = RMul(dof_load1477,basisEval14A2);
      real r14CD#1 = RMul(dof_load147E,basisEval14A3);
      real r14CE#1 = RAdd(r14C9,r14CB);
      real r14CF#3 = RAdd(r14CE,r14CD);
      real r14D1#1 = RMul(dof_load1477,basisEval14A3);
      real r14D2#1 = RMul(dof_load147E,basisEval14A2);
      real r14D3#1 = RAdd(r14C9,r14D1);
      real r14D4#3 = RAdd(r14D3,r14D2);
      real r14FD#1 = RMul(basisEval14A3,r14BE);
      real r1500#1 = RMul(coeff149E,r14CF);
      real r1501#2 = RAdd(r14FD,r1500);
      real r1503#2 = RMul(basisEval14A3,r14C6);
      real r1505#1 = RMul(coeff149E,r14D4);
      real r1506#2 = RAdd(r1503,r1505);
      real r1509#1 = RMul(one149F,r14BE);
      real r150A#1 = RMul(basisEval14A3,r14CF);
      real r150B#2 = RAdd(r1509,r150A);
      real r150C#1 = RMul(one149F,r14C6);
      real r150D#2 = RMul(basisEval14A3,r14D4);
      real r150E#2 = RAdd(r150C,r150D);
      tensor[2] probe_l_121527#1 = <tensor[2]>[r14BE,r14CF];
      real r157F#1 = RMul(one149F,r14D4);
      real r1580#1 = RAdd(r1503,r157F);
      real r1582#1 = RMul(coeff149E,r14C6);
      real r1584#1 = RAdd(r1582,r150D);
      tensor[2] op1_e3_l_141579#1 = <tensor[2]>[r1580,r1584];
      real r1595#1 = RMul(basisEval14A3,r1501);
      real r1598#1 = RMul(coeff149E,r1506);
      real r1599#1 = RAdd(r1595,r1598);
      real r159B#1 = RMul(basisEval14A3,r150B);
      real r159D#1 = RMul(coeff149E,r150E);
      real r159E#1 = RAdd(r159B,r159D);
      real r15A1#1 = RMul(one149F,r1501);
      real r15A2#1 = RMul(basisEval14A3,r1506);
      real r15A3#1 = RAdd(r15A1,r15A2);
      real r15A4#1 = RMul(one149F,r150B);
      real r15A5#1 = RMul(basisEval14A3,r150E);
      real r15A6#1 = RAdd(r15A4,r15A5);
      real op1_e3_l_1615BF#4 = VDot<2>(probe_l_121527,op1_e3_l_141579);
      real varAcc15C4#1 = VIndex<2,0>(xn15C3);
      real varAcc15C5#1 = VIndex<2,1>(xn15C3);
      real prod15C9#2 = RMul(varAcc15C4,one149F);
      real prod15CB#2 = RMul(one149F,varAcc15C5);
      real mult15CE#1 = RMul(coeff149E,prod15CB);
      real mult15CF#1 = RMul(coeff149E,prod15C9);
      real sum15D0#1 = RAdd(mult15CE,mult15CF);
      real sum15D1#2 = RAdd(basisEval14A2,sum15D0);
      real basisEval15D3#2 = RMul(one149F,prod15C9);
      real basisEval15D4#2 = RMul(one149F,prod15CB);
      real r15EC#1 = RMul(dof_load146F,sum15D1);
      real r15EF#1 = RMul(dof_load1476,basisEval15D3);
      real r15F2#1 = RMul(dof_load147D,basisEval15D4);
      real r15F3#1 = RAdd(r15EC,r15EF);
      real r15F4#1 = RAdd(r15F3,r15F2);
      real r15F6#1 = RMul(dof_load1470,sum15D1);
      real r15F8#1 = RMul(dof_load1477,basisEval15D3);
      real r15FA#1 = RMul(dof_load147E,basisEval15D4);
      real r15FB#1 = RAdd(r15F6,r15F8);
      real r15FC#1 = RAdd(r15FB,r15FA);
      tensor[2] probe_l_1715E9#1 = <tensor[2]>[r15F4,r15FC];
      real r1614#1 = RDiv(r1599,op1_e3_l_1615BF);
      real r1616#1 = RDiv(r159E,op1_e3_l_1615BF);
      tensor[2] tensor1617#1 = <tensor[2]>[r1614,r1616];
      real r1619#1 = RDiv(r15A3,op1_e3_l_1615BF);
      real r161B#1 = RDiv(r15A6,op1_e3_l_1615BF);
      tensor[2] tensor161C#1 = <tensor[2]>[r1619,r161B];
      tensor[2] op1_e3_l_191629#2 = VSub<2>(probe_l_1715E9,pos143D);
      real vdot162E#1 = VDot<2>(tensor1617,op1_e3_l_191629);
      real vdot1630#1 = VDot<2>(tensor161C,op1_e3_l_191629);
      tensor[2] op1_e3_l_20162C#3 = <tensor[2]>[vdot162E,vdot1630];
      tensor[2] xn1637#4 = VSub<2>(xn15C3,op1_e3_l_20162C);
      real _t163A#2 = 0.1e-7;
      real _t163C#1 = RMul(_t163A,_t163A);
      real _t1676#1 = VDot<2>(op1_e3_l_20162C,op1_e3_l_20162C);
      bool _t1679#1 = GTE<real>(_t163C,_t1676);
      if _t1679 then goto ASSIGN167F else goto JOIN16A2
    ASSIGN167F:  preds = [COND167B]
      real _t167E#3 = 0.1e-8;
      real _t1680#1 = RAdd(one149F,_t167E);
      tensor[2] _t1683#1 = <tensor[2]>[one149F,one149F];
      real _t1685#1 = VDot<2>(_t1683,xn1637);
      bool _t1688#1 = GT<real>(_t1680,_t1685);
      tensor[2] _t168A#1 = <tensor[2]>[_t167E,_t167E];
      tensor[2] _t168C#2 = VAdd<2>(_t168A,xn1637);
      real _t168F#1 = VIndex<2,0>(_t168C);
      real _t1691#2 = -0.e0;
      bool _t1693#1 = GT<real>(_t168F,_t1691);
      real _t1695#1 = VIndex<2,1>(_t168C);
      bool _t1697#1 = GT<real>(_t1695,_t1691);
      bool _t1699#1 = BAnd(_t1693,_t1697);
      bool _t169B#1 = BAnd(_t1688,_t1699);
      if _t169B then goto ASSIGN169F else goto ASSIGN16A5
    ASSIGN169F:  preds = [COND169D]
      femData:MeshPos _t169E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh143F,cellInt143E,xn1637,pos143D);
      return _t169E
      goto JOIN16A1
    JOIN16A1:  preds = [*RETURN(_t169E)16A0,*RETURN(_t16A4)16A6]
      goto JOIN16A2
    JOIN16A2:  preds = [*JOIN16A1,COND167B]
      goto FOREACH144C
    ASSIGN16A5:  preds = [COND169D]
      femData:MeshPos _t16A4#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A4
      goto JOIN16A1
    ASSIGN16A8:  preds = [FOREACH144C]
      femData:MeshPos _t16A7#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A7
}
## input initialization
  ENTRY11C4:  preds = []
    real isoval11C5#1 = 0.2e0;
    globals.isoval11A7 = isoval11C5;
    real thick11C8#1 = 0.7e-1;
    globals.thick11A8 = thick11C8;
    real _t11CB#1 = -0.5e0;
    real _t11CD#5 = 0.5e0;
    tensor[3] camEye11CF#1 = <tensor[3]>[_t11CB,_t11CD,_t11CD];
    globals.camEye11A9 = camEye11CF;
    tensor[3] camAt11D2#1 = <tensor[3]>[_t11CD,_t11CD,_t11CD];
    globals.camAt11AA = camAt11D2;
    real _t11D5#2 = 0.e0;
    real _t11D7#2 = 0.1e1;
    tensor[3] camUp11D9#2 = <tensor[3]>[_t11D5,_t11D5,_t11D7];
    globals.camUp11AB = camUp11D9;
    real camFOV11DC#1 = 0.137e2;
    globals.camFOV11AC = camFOV11DC;
    int iresU11DF#2 = 10;
    globals.iresU11AD = iresU11DF;
    globals.iresV11AE = iresU11DF;
    real camNear11E3#1 = -0.2e1;
    globals.camNear11AF = camNear11E3;
    real camFar11E6#1 = 0.5e1;
    globals.camFar11B0 = camFar11E6;
    globals.refStep11B1 = _t11D7;
    real rayStep11EA#1 = 0.1e-1;
    globals.rayStep11B2 = rayStep11EA;
    globals.lightVsp11B3 = camUp11D9;
    real phongKa11EE#1 = 0.1e0;
    globals.phongKa11B4 = phongKa11EE;
    real phongKd11F1#1 = 0.9e0;
    globals.phongKd11B5 = phongKd11F1;
    bool debug11F4#1 = false;
    globals.debug11B6 = debug11F4;
    int debugU11F7#1 = 8;
    globals.debugU11B7 = debugU11F7;
    int debugV11FA#1 = 2;
    globals.debugV11B8 = debugV11FA;
    real eps11FD#1 = 0.1e-8;
    globals.eps11B9 = eps11FD;
    return
## global-variable initialization
  ENTRY1201:  preds = []
    femData:Mesh a1202#3 = globals.a11A4;
    femData:Space 0b0412_intermedateGlobal1204#1 = globals.0b0412_intermedateGlobal11A5;
    femData:FemFunc 0c0414_intermedateGlobal1206#1 = globals.0c0414_intermedateGlobal11A6;
    tensor[3] camEye1208#1 = globals.camEye11A9;
    tensor[3] camAt120A#1 = globals.camAt11AA;
    tensor[3] camUp120C#3 = globals.camUp11AB;
    real camFOV120E#1 = globals.camFOV11AC;
    int iresU1210#1 = globals.iresU11AD;
    int iresV1212#1 = globals.iresV11AE;
    int _t1214#1 = 0;
    int _t1216#1 = 1;
    int _t1218#1 = ExtractFemItem<int,NumCell(Mesh)>(a1202);
    int _t121A#1 = ISub(_t1218,_t1216);
    int[] _t121C#1 = Range(_t1214,_t121A);
    femData:MeshCell[] _t121E#1 = <femData:MeshCell[]>{};
  FOREACH1221:  preds = [ASSIGN121F,NEXT1227]
    foreach (_t1220 in _t121C) on exit goto GASSIGN1228
      femData:MeshCell[] _t1225#2 = phi(_t121E,_t1224)
    femData:MeshCell _t1222#1 = LoadFem<femData:MeshCell>(a1202,_t1220);
    femData:MeshCell[] _t1224#1 = Append<femData:MeshCell>(_t1225,_t1222);
    goto FOREACH1221
  GASSIGN1228:  preds = [FOREACH1221]
    globals.0cell_a11BD = _t1225;
    femData:Space b1229#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal1204,a1202);
    femData:FemFunc c122B#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal1206,b1229);
    globals.c11BE = c122B;
    tensor[3] op1_e3_l_4122E#9 = VSub<3>(camAt120A,camEye1208);
    real op1_e3_l_61231#1 = VDot<3>(op1_e3_l_4122E,op1_e3_l_4122E);
    real op1_e3_l_71234#3 = Sqrt(op1_e3_l_61231);
    real realLit1238#8 = 0.1e1;
    real op1_e3_l_91237#6 = RDiv(realLit1238,op1_e3_l_71234);
    tensor[3] camN123C#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_4122E);
    real realLit1240#6 = 0.e0;
    real r1241#3 = TensorIndex<tensor[3],[0]>(camUp120C);
    real r1242#3 = RMul(realLit1240,r1241);
    real r1243#3 = TensorIndex<tensor[3],[1]>(camUp120C);
    real r1244#3 = RMul(realLit1240,r1243);
    real r1245#3 = TensorIndex<tensor[3],[2]>(camUp120C);
    real r1246#5 = RMul(realLit1240,r1245);
    real r1247#3 = RAdd(r1242,r1244);
    real r1248#3 = RAdd(r1247,r1246);
    real r124A#1 = RMul(realLit1238,r1245);
    real r124B#1 = RAdd(r1247,r124A);
    real realLit124C#6 = -0.1e1;
    real r124D#1 = RMul(realLit124C,r1243);
    real r124E#1 = RAdd(r1242,r124D);
    real r124F#1 = RAdd(r124E,r1246);
    tensor[3] tensor1250#1 = <tensor[3]>[r1248,r124B,r124F];
    real r1251#1 = RMul(realLit124C,r1245);
    real r1252#1 = RAdd(r1247,r1251);
    real r1253#1 = RMul(realLit1238,r1241);
    real r1254#1 = RAdd(r1253,r1244);
    real r1255#1 = RAdd(r1254,r1246);
    tensor[3] tensor1256#1 = <tensor[3]>[r1252,r1248,r1255];
    real r1257#1 = RMul(realLit1238,r1243);
    real r1258#1 = RAdd(r1242,r1257);
    real r1259#1 = RAdd(r1258,r1246);
    real r125A#1 = RMul(realLit124C,r1241);
    real r125B#1 = RAdd(r125A,r1244);
    real r125C#1 = RAdd(r125B,r1246);
    tensor[3] tensor125D#1 = <tensor[3]>[r1259,r125C,r1248];
    real vdot1280#1 = VDot<3>(op1_e3_l_4122E,tensor1250);
    real vdot1282#1 = VDot<3>(op1_e3_l_4122E,tensor1256);
    real vdot1284#1 = VDot<3>(op1_e3_l_4122E,tensor125D);
    tensor[3] op1_e3_l_17127E#6 = <tensor[3]>[vdot1280,vdot1282,vdot1284];
    real op1_e3_l_34128D#1 = VDot<3>(op1_e3_l_17127E,op1_e3_l_17127E);
    real r1291#1 = RMul(op1_e3_l_91237,op1_e3_l_91237);
    real op1_e3_l_351290#1 = RMul(r1291,op1_e3_l_34128D);
    real op1_e3_l_361295#1 = Sqrt(op1_e3_l_351290);
    tensor[3] op1_e3_l_371298#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_17127E);
    real op1_e3_l_38129B#2 = RDiv(realLit1238,op1_e3_l_361295);
    tensor[3] camU12A0#1 = VScale<3>(op1_e3_l_38129B,op1_e3_l_371298);
    globals.camU11BF = camU12A0;
    real r12A6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_4122E);
    real r12A7#3 = RMul(realLit1240,r12A6);
    real r12A8#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_4122E);
    real r12A9#3 = RMul(realLit1240,r12A8);
    real r12AA#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_4122E);
    real r12AB#5 = RMul(realLit1240,r12AA);
    real r12AC#3 = RAdd(r12A7,r12A9);
    real r12AD#3 = RAdd(r12AC,r12AB);
    real r12AF#1 = RMul(realLit1238,r12AA);
    real r12B0#1 = RAdd(r12AC,r12AF);
    real r12B2#1 = RMul(realLit124C,r12A8);
    real r12B3#1 = RAdd(r12A7,r12B2);
    real r12B4#1 = RAdd(r12B3,r12AB);
    tensor[3] tensor12B5#1 = <tensor[3]>[r12AD,r12B0,r12B4];
    real r12B6#1 = RMul(realLit124C,r12AA);
    real r12B7#1 = RAdd(r12AC,r12B6);
    real r12B8#1 = RMul(realLit1238,r12A6);
    real r12B9#1 = RAdd(r12B8,r12A9);
    real r12BA#1 = RAdd(r12B9,r12AB);
    tensor[3] tensor12BB#1 = <tensor[3]>[r12B7,r12AD,r12BA];
    real r12BC#1 = RMul(realLit1238,r12A8);
    real r12BD#1 = RAdd(r12A7,r12BC);
    real r12BE#1 = RAdd(r12BD,r12AB);
    real r12BF#1 = RMul(realLit124C,r12A6);
    real r12C0#1 = RAdd(r12BF,r12A9);
    real r12C1#1 = RAdd(r12C0,r12AB);
    tensor[3] tensor12C2#1 = <tensor[3]>[r12BE,r12C1,r12AD];
    real vdot12E5#1 = VDot<3>(op1_e3_l_17127E,tensor12B5);
    real vdot12E7#1 = VDot<3>(op1_e3_l_17127E,tensor12BB);
    real vdot12E9#1 = VDot<3>(op1_e3_l_17127E,tensor12C2);
    tensor[3] op1_e3_l_4712E3#1 = <tensor[3]>[vdot12E5,vdot12E7,vdot12E9];
    tensor[3] op1_e3_l_5012F2#3 = VScale<3>(op1_e3_l_91237,op1_e3_l_4712E3);
    real r12F6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5012F2);
    real r12F7#3 = RMul(op1_e3_l_38129B,op1_e3_l_91237);
    real r12F8#1 = RMul(r12F7,r12F6);
    real r12F9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5012F2);
    real r12FA#1 = RMul(r12F7,r12F9);
    real r12FB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5012F2);
    real r12FC#1 = RMul(r12F7,r12FB);
    tensor[3] camV12F5#1 = <tensor[3]>[r12F8,r12FA,r12FC];
    globals.camV11C0 = camV12F5;
    real _t1307#1 = 0.314159265358979323846264338327950288e1;
    real _t1309#1 = 0.36e3;
    real op1_e3_l_5130B#1 = RMul(camFOV120E,_t1307);
    real op1_e3_l_6130E#1 = RDiv(op1_e3_l_5130B,_t1309);
    real op1_e3_l_101311#2 = Tan(op1_e3_l_6130E);
    real camVmax1314#1 = RMul(op1_e3_l_101311,op1_e3_l_71234);
    globals.camVmax11C1 = camVmax1314;
    real _t1318#1 = IntToReal(iresU1210);
    real _t131A#1 = IntToReal(iresV1212);
    real r131D#1 = RMul(_t1318,op1_e3_l_101311);
    real op1_e3_l_14131C#1 = RMul(r131D,op1_e3_l_71234);
    real camUmax1321#1 = RDiv(op1_e3_l_14131C,_t131A);
    globals.camUmax11C2 = camUmax1321;
    globals.rayVec11C3 = camN123C;
    return
## strand
  strand ray (int ui1327#2, int vi1328#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY1338:  preds = []
        femData:MeshCell[] 0cell_a1339#1 = globals.0cell_a11BD;
        femData:FemFunc c133B#1 = globals.c11BE;
        tensor[3] camEye133D#1 = globals.camEye11A9;
        int iresU133F#2 = globals.iresU11AD;
        int iresV1341#3 = globals.iresV11AE;
        int[] indecies1343#2 = globals.indecies11BA;
        tensor[2][] times1345#1 = globals.times11BB;
        tensor[3] camU1347#1 = globals.camU11BF;
        tensor[3] camV1349#1 = globals.camV11C0;
        real camVmax134B#2 = globals.camVmax11C1;
        real camUmax134D#2 = globals.camUmax11C2;
        real _t134F#4 = -0.5e0;
        real _t1351#1 = IntToReal(ui1327);
        real _t1353#1 = IntToReal(iresU133F);
        real _t1355#2 = 0.5e0;
        real op1_e3_l_61357#1 = RSub(_t1353,_t1355);
        real op1_e3_l_7135A#1 = RSub(_t1351,_t134F);
        real op1_e3_l_8135D#1 = RSub(op1_e3_l_61357,_t134F);
        real op1_e3_l_91360#2 = RNeg(camUmax134D);
        real op1_e3_l_101363#1 = RDiv(op1_e3_l_7135A,op1_e3_l_8135D);
        real op1_e3_l_111366#1 = RSub(camUmax134D,op1_e3_l_91360);
        real op1_e3_l_131369#1 = RMul(op1_e3_l_101363,op1_e3_l_111366);
        real rayU136C#2 = RAdd(op1_e3_l_91360,op1_e3_l_131369);
        real _t136F#1 = IntToReal(vi1328);
        real _t1371#1 = IntToReal(iresV1341);
        real op1_e3_l_61373#1 = RSub(_t1371,_t1355);
        real op1_e3_l_71376#1 = RSub(_t136F,_t134F);
        real op1_e3_l_81379#1 = RSub(op1_e3_l_61373,_t134F);
        real op1_e3_l_9137C#2 = RNeg(camVmax134B);
        real op1_e3_l_10137F#1 = RDiv(op1_e3_l_71376,op1_e3_l_81379);
        real op1_e3_l_111382#1 = RSub(camVmax134B,op1_e3_l_9137C);
        real op1_e3_l_131385#1 = RMul(op1_e3_l_10137F,op1_e3_l_111382);
        real rayV1388#2 = RAdd(op1_e3_l_9137C,op1_e3_l_131385);
        tensor[3] op1_e3_l_32139A#2 = VScale<3>(rayU136C,camU1347);
        tensor[3] op1_e3_l_33139D#2 = VScale<3>(rayV1388,camV1349);
        tensor[3] UV13A0#1 = VAdd<3>(op1_e3_l_32139A,op1_e3_l_33139D);
        tensor[3] v13A4#1 = VAdd<3>(camEye133D,op1_e3_l_32139A);
        tensor[3] rayOrig13A3#1 = VAdd<3>(v13A4,op1_e3_l_33139D);
        int _t13A8#2 = IMul(ui1327,iresV1341);
        int _t13AA#1 = IAdd(_t13A8,vi1328);
        int offset13AC#3 = Subscript<int[]>(indecies1343,_t13AA);
        int _t13AE#1 = IMul(iresU133F,iresV1341);
        int _t13B0#1 = IAdd(_t13AE,_t13A8);
        int _t13B2#1 = IAdd(_t13B0,vi1328);
        int len13B4#1 = Subscript<int[]>(indecies1343,_t13B2);
        int itter13B6#2 = 0;
        tensor[2] interval13BA#3 = Subscript<tensor[2][]>(times1345,offset13AC);
        real s13BC#1 = VIndex<2,0>(interval13BA);
        real e13BE#1 = VIndex<2,1>(interval13BA);
        femData:MeshCell cc13C0#2 = Subscript<femData:MeshCell[]>(0cell_a1339,itter13B6);
        int _t13C2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13C0);
        femData:FuncCell _t13C4#1 = LoadFem<femData:FuncCell>(c133B,_t13C2);
        tensor[2][0] _t13C6#1 = <tensor[2][0]>{};
        tensor[2][] _t13C8#1 = MkDynamic<tensor[2],0>(_t13C6);
        femData:MeshCell[0] _t13CA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t13CC#1 = MkDynamic<femData:MeshCell,0>(_t13CA);
        self.rayU = rayU136C;
        self.rayV = rayV1388;
        self.UV = UV13A0;
        self.rayOrig = rayOrig13A3;
        self.offset = offset13AC;
        self.len = len13B4;
        self.itter = itter13B6;
        self.idx = offset13AC;
        self.interval = interval13BA;
        self.s = s13BC;
        self.e = e13BE;
        self.cc = cc13C0;
        self.fc = _t13C4;
        self.intervals = _t13C8;
        self.newCells = _t13CC;
        return
    end state init
    method start
        ENTRY13DE:  preds = []
          femData:MeshCell[] 0cell_a13DF#1 = globals.0cell_a11BD;
          femData:FemFunc c13E1#1 = globals.c11BE;
          int[] cells13E3#1 = globals.cells11BC;
          int len13E5#1 = self.len;
          int idx13E7#1 = self.idx;
          int _t13E9#1 = 0;
          bool _t13EB#1 = EQ<int>(len13E5,_t13E9);
          if _t13EB then goto STABILIZE13EE else goto JOIN13EF
        STABILIZE13EE:  preds = [COND13ED]
          stabilize
          goto JOIN13EF
        JOIN13EF:  preds = [*STABILIZE13EE,COND13ED]
          int _t13F0#1 = Subscript<int[]>(cells13E3,idx13E7);
          femData:MeshCell cc13F2#2 = Subscript<femData:MeshCell[]>(0cell_a13DF,_t13F0);
          int _t13F4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13F2);
          femData:FuncCell _t13F6#1 = LoadFem<femData:FuncCell>(c13E1,_t13F4);
          self.cc = cc13F2;
          self.fc = _t13F6;
          active
    end start
    method update
        ENTRY13FB:  preds = []
          femData:MeshCell[] 0cell_a13FC#1 = globals.0cell_a11BD;
          femData:FemFunc c13FE#1 = globals.c11BE;
          tensor[2][] times1400#1 = globals.times11BB;
          int[] cells1402#1 = globals.cells11BC;
          tensor[3] rayVec1404#4 = globals.rayVec11C3;
          tensor[3] rayOrig1406#1 = self.rayOrig;
          int offset1408#1 = self.offset;
          int len140A#2 = self.len;
          int itter140C#2 = self.itter;
          tensor[2] interval140E#1 = self.interval;
          real s1410#5 = self.s;
          real e1412#3 = self.e;
          femData:MeshCell cc1414#5 = self.cc;
          femData:FuncCell fc1416#3 = self.fc;
          tensor[2][] intervals1418#2 = self.intervals;
          femData:MeshCell[] newCells141A#2 = self.newCells;
          int _t141C#17 = 1;
          bool _t141E#1 = LT<int>(len140A,_t141C);
          if _t141E then goto STABILIZE1421 else goto JOIN1422
        STABILIZE1421:  preds = [COND1420]
          stabilize
          goto JOIN1422
        JOIN1422:  preds = [*STABILIZE1421,COND1420]
          tensor[3] op1_e3_l_31423#1 = VScale<3>(s1410,rayVec1404);
          tensor[3] rayStart1426#3 = VAdd<3>(rayOrig1406,op1_e3_l_31423);
          real _t1429#1 = VIndex<3,0>(rayStart1426);
          real _t142B#1 = VIndex<3,1>(rayStart1426);
          tensor[2] project142D#2 = <tensor[2]>[_t1429,_t142B];
          femData:FemFunc _t142F#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1416);
          femData:Space _t1431#6 = ExtractFem<femData:Space,femData:FemFunc>(_t142F);
          int _t1433#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1416);
          femData:Mesh _t1435#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1414);
          int _t1437#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1414);
          real _t1439#2 = VIndex<3,2>(rayStart1426);
          femData:MeshPos callNewtonPos143B#1 = _0994_msh_newtonInverse143C (project142D,_t1437,_t1435);
          tensor[2] refPos16AB#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos143B);
          int ilit16AE#1 = 6;
          int mulRes16AF#6 = IMul(_t1433,ilit16AE);
          int idx16B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,mulRes16AF);
          int addRes16B4#1 = IAdd(mulRes16AF,_t141C);
          int idx16B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B4);
          int ilit16B6#5 = 2;
          int addRes16B7#1 = IAdd(mulRes16AF,ilit16B6);
          int idx16B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B7);
          int ilit16B9#2 = 3;
          int addRes16BA#1 = IAdd(mulRes16AF,ilit16B9);
          int idx16BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BA);
          int ilit16BC#1 = 4;
          int addRes16BD#1 = IAdd(mulRes16AF,ilit16BC);
          int idx16BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BD);
          int ilit16BF#1 = 5;
          int addRes16C0#1 = IAdd(mulRes16AF,ilit16BF);
          int idx16C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16C0);
          int mulRes16DD#1 = IMul(_t141C,idx16B2);
          int mulRes16DF#1 = IMul(_t141C,idx16B5);
          int mulRes16E2#1 = IMul(_t141C,idx16B8);
          int mulRes16E5#1 = IMul(_t141C,idx16BB);
          int mulRes16E8#1 = IMul(_t141C,idx16BE);
          int mulRes16EB#1 = IMul(_t141C,idx16C1);
          real dof16EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DD);
          real dof16ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DF);
          real dof16EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E2);
          real dof16EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E5);
          real dof16F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E8);
          real dof16F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16EB);
          tensor[6] dofs16F2#4 = <tensor[6]>[dof16EC,dof16ED,dof16EE,dof16EF,dof16F0,dof16F1];
          real varAcc170E#4 = VIndex<2,0>(refPos16AB);
          real varAcc170F#4 = VIndex<2,1>(refPos16AB);
          real coeff1710#5 = 0.2e1;
          real prod21712#1 = RMul(varAcc170E,varAcc170E);
          real one1713#16 = 0.1e1;
          real prod1714#2 = RMul(prod21712,one1713);
          real coeff1715#7 = 0.4e1;
          real prod1717#2 = RMul(varAcc170E,varAcc170F);
          real coeff1718#5 = -0.3e1;
          real prod1719#5 = RMul(varAcc170E,one1713);
          real prod2171A#1 = RMul(varAcc170F,varAcc170F);
          real prod171B#1 = RMul(one1713,prod2171A);
          real prod171C#4 = RMul(one1713,varAcc170F);
          real prod171D#4 = RMul(one1713,one1713);
          real mult171E#6 = RMul(one1713,prod171D);
          real mult171F#1 = RMul(coeff1718,prod171C);
          real mult1720#2 = RMul(coeff1710,prod171B);
          real mult1721#1 = RMul(coeff1718,prod1719);
          real mult1722#2 = RMul(coeff1715,prod1717);
          real mult1723#2 = RMul(coeff1710,prod1714);
          real sum1724#1 = RAdd(mult1722,mult1723);
          real sum1725#1 = RAdd(mult1721,sum1724);
          real sum1726#1 = RAdd(mult1720,sum1725);
          real sum1727#1 = RAdd(mult171F,sum1726);
          real sum1728#1 = RAdd(mult171E,sum1727);
          real coeff172A#10 = -0.1e1;
          real mult172B#1 = RMul(coeff172A,prod1719);
          real sum172C#1 = RAdd(mult172B,mult1723);
          real mult172E#1 = RMul(coeff172A,prod171C);
          real sum172F#1 = RAdd(mult172E,mult1720);
          real coeff1731#6 = -0.4e1;
          real mult1732#4 = RMul(coeff1715,prod171C);
          real mult1733#2 = RMul(coeff1731,prod1717);
          real sum1734#1 = RAdd(mult1732,mult1733);
          real mult1736#4 = RMul(coeff1715,prod1719);
          real mult1737#1 = RMul(coeff1731,prod1714);
          real sum1738#1 = RAdd(mult1733,mult1737);
          real sum1739#1 = RAdd(mult1736,sum1738);
          tensor[6] intermediateCons173B#1 = <tensor[6]>[sum1728,sum172C,sum172F,mult1722,sum1734,sum1739];
          real compositionl176B#1 = VDot<6>(dofs16F2,intermediateCons173B);
          real f0176E#5 = RSub(compositionl176B,_t1439);
          real _t1771#1 = VIndex<3,0>(rayVec1404);
          real _t1773#1 = VIndex<3,1>(rayVec1404);
          tensor[2] _t1775#2 = <tensor[2]>[_t1771,_t1773];
          real _t1777#2 = VIndex<3,2>(rayVec1404);
          int _t1779#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1414);
          real _t177B#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t1435,_t1779);
          real mult1788#1 = RMul(coeff1718,prod171D);
          real sum178B#1 = RAdd(mult1732,mult1736);
          real sum178C#2 = RAdd(mult1788,sum178B);
          real mult178F#4 = RMul(coeff172A,prod171D);
          real sum1790#1 = RAdd(mult178F,mult1736);
          real basisEval1792#20 = 0.e0;
          real basisEval1794#2 = RMul(coeff1731,prod171C);
          real coeff1795#1 = -0.8e1;
          real mult1796#2 = RMul(coeff1715,prod171D);
          real mult1797#1 = RMul(coeff1795,prod1719);
          real sum1798#1 = RAdd(basisEval1794,mult1797);
          real sum1799#1 = RAdd(mult1796,sum1798);
          real sum179C#1 = RAdd(mult178F,mult1732);
          real mult179E#2 = RMul(coeff1731,prod1719);
          real sum179F#1 = RAdd(mult1796,mult179E);
          tensor[6] intermediateCons17A1#1 = <tensor[6]>[sum178C,sum1790,basisEval1792,mult1732,basisEval1794,sum1799];
          tensor[6] intermediateCons17A2#1 = <tensor[6]>[sum178C,basisEval1792,sum179C,mult1736,sum179F,mult179E];
          real vdot17CD#2 = VDot<6>(dofs16F2,intermediateCons17A1);
          real vdot17CF#2 = VDot<6>(dofs16F2,intermediateCons17A2);
          int mulRes17D8#3 = IMul(_t1437,ilit16B9);
          int idx17DB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,mulRes17D8);
          int addRes17DD#1 = IAdd(mulRes17D8,_t141C);
          int idx17DE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DD);
          int addRes17E0#1 = IAdd(mulRes17D8,ilit16B6);
          int idx17E1#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17E0);
          int mulRes17F4#2 = IMul(ilit16B6,idx17DB);
          int addRes17F7#1 = IAdd(_t141C,mulRes17F4);
          real dof_load17F8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17F4);
          real dof_load17F9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F7);
          int mulRes17FC#2 = IMul(ilit16B6,idx17DE);
          int addRes17FE#1 = IAdd(_t141C,mulRes17FC);
          real dof_load17FF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17FC);
          real dof_load1800#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FE);
          int mulRes1803#2 = IMul(ilit16B6,idx17E1);
          int addRes1805#1 = IAdd(_t141C,mulRes1803);
          real dof_load1806#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes1803);
          real dof_load1807#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1805);
          real r183F#2 = RMul(dof_load17F8,mult178F);
          real r1842#1 = RMul(dof_load17FF,mult171E);
          real r1845#1 = RMul(dof_load1806,basisEval1792);
          real r1846#1 = RAdd(r183F,r1842);
          real r1847#3 = RAdd(r1846,r1845);
          real r184B#1 = RMul(dof_load17FF,basisEval1792);
          real r184D#1 = RMul(dof_load1806,mult171E);
          real r184E#1 = RAdd(r183F,r184B);
          real r184F#3 = RAdd(r184E,r184D);
          real r1852#2 = RMul(dof_load17F9,mult178F);
          real r1854#1 = RMul(dof_load1800,mult171E);
          real r1856#1 = RMul(dof_load1807,basisEval1792);
          real r1857#1 = RAdd(r1852,r1854);
          real r1858#3 = RAdd(r1857,r1856);
          real r185A#1 = RMul(dof_load1800,basisEval1792);
          real r185B#1 = RMul(dof_load1807,mult171E);
          real r185C#1 = RAdd(r1852,r185A);
          real r185D#3 = RAdd(r185C,r185B);
          real r1886#1 = RMul(basisEval1792,r1847);
          real r1889#1 = RMul(coeff172A,r1858);
          real r188A#2 = RAdd(r1886,r1889);
          real r188C#2 = RMul(basisEval1792,r184F);
          real r188E#1 = RMul(coeff172A,r185D);
          real r188F#2 = RAdd(r188C,r188E);
          real r1892#1 = RMul(one1713,r1847);
          real r1893#1 = RMul(basisEval1792,r1858);
          real r1894#2 = RAdd(r1892,r1893);
          real r1895#1 = RMul(one1713,r184F);
          real r1896#2 = RMul(basisEval1792,r185D);
          real r1897#2 = RAdd(r1895,r1896);
          tensor[2] probe_l_1318B0#1 = <tensor[2]>[r1847,r1858];
          real r1908#1 = RMul(one1713,r185D);
          real r1909#1 = RAdd(r188C,r1908);
          real r190B#1 = RMul(coeff172A,r184F);
          real r190D#1 = RAdd(r190B,r1896);
          tensor[2] op1_e3_l_151902#1 = <tensor[2]>[r1909,r190D];
          real r191E#1 = RMul(basisEval1792,r188A);
          real r1921#1 = RMul(coeff172A,r188F);
          real r1922#1 = RAdd(r191E,r1921);
          real r1924#1 = RMul(basisEval1792,r1894);
          real r1926#1 = RMul(coeff172A,r1897);
          real r1927#1 = RAdd(r1924,r1926);
          real r192A#1 = RMul(one1713,r188A);
          real r192B#1 = RMul(basisEval1792,r188F);
          real r192C#1 = RAdd(r192A,r192B);
          real r192D#1 = RMul(one1713,r1894);
          real r192E#1 = RMul(basisEval1792,r1897);
          real r192F#1 = RAdd(r192D,r192E);
          real op1_e3_l_171948#4 = VDot<2>(probe_l_1318B0,op1_e3_l_151902);
          real r194D#1 = RDiv(r1922,op1_e3_l_171948);
          real r194F#1 = RDiv(r1927,op1_e3_l_171948);
          real r1952#1 = RDiv(r192C,op1_e3_l_171948);
          real r1954#1 = RDiv(r192F,op1_e3_l_171948);
          real r1965#1 = RMul(vdot17CD,r194D);
          real r1968#1 = RMul(vdot17CF,r1952);
          real r1969#1 = RAdd(r1965,r1968);
          real r196B#1 = RMul(vdot17CD,r194F);
          real r196D#1 = RMul(vdot17CF,r1954);
          real r196E#1 = RAdd(r196B,r196D);
          tensor[2] op1_e3_l_191962#1 = <tensor[2]>[r1969,r196E];
          real op1_e3_l_20197D#1 = VDot<2>(_t1775,op1_e3_l_191962);
          real op1_e3_l_211980#1 = RSub(op1_e3_l_20197D,_t1777);
          real op1_e3_l_221983#1 = Abs<real>(op1_e3_l_211980);
          real _t1986#1 = RDiv(op1_e3_l_221983,_t177B);
          real _t1989#1 = RSub(e1412,s1410);
          real gradEps198C#6 = Min<real>(_t1986,_t1989);
          tensor[2] op1_e3_l_3198E#1 = VScale<2>(gradEps198C,_t1775);
          tensor[2] _t1991#1 = VAdd<2>(project142D,op1_e3_l_3198E);
          femData:MeshPos callNewtonPos1994#1 = _0994_msh_newtonInverse143C (_t1991,_t1437,_t1435);
          tensor[2] refPos1996#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1994);
          real varAcc1999#4 = VIndex<2,0>(refPos1996);
          real varAcc199A#4 = VIndex<2,1>(refPos1996);
          real prod2199D#1 = RMul(varAcc1999,varAcc1999);
          real prod199F#2 = RMul(prod2199D,one1713);
          real prod19A2#2 = RMul(varAcc1999,varAcc199A);
          real prod19A4#3 = RMul(varAcc1999,one1713);
          real prod219A5#1 = RMul(varAcc199A,varAcc199A);
          real prod19A6#1 = RMul(one1713,prod219A5);
          real prod19A7#3 = RMul(one1713,varAcc199A);
          real mult19AA#1 = RMul(coeff1718,prod19A7);
          real mult19AB#2 = RMul(coeff1710,prod19A6);
          real mult19AC#1 = RMul(coeff1718,prod19A4);
          real mult19AD#2 = RMul(coeff1715,prod19A2);
          real mult19AE#2 = RMul(coeff1710,prod199F);
          real sum19AF#1 = RAdd(mult19AD,mult19AE);
          real sum19B0#1 = RAdd(mult19AC,sum19AF);
          real sum19B1#1 = RAdd(mult19AB,sum19B0);
          real sum19B2#1 = RAdd(mult19AA,sum19B1);
          real sum19B3#1 = RAdd(mult171E,sum19B2);
          real mult19B6#1 = RMul(coeff172A,prod19A4);
          real sum19B7#1 = RAdd(mult19B6,mult19AE);
          real mult19B9#1 = RMul(coeff172A,prod19A7);
          real sum19BA#1 = RAdd(mult19B9,mult19AB);
          real mult19BD#1 = RMul(coeff1715,prod19A7);
          real mult19BE#2 = RMul(coeff1731,prod19A2);
          real sum19BF#1 = RAdd(mult19BD,mult19BE);
          real mult19C1#1 = RMul(coeff1715,prod19A4);
          real mult19C2#1 = RMul(coeff1731,prod199F);
          real sum19C3#1 = RAdd(mult19BE,mult19C2);
          real sum19C4#1 = RAdd(mult19C1,sum19C3);
          tensor[6] intermediateCons19C6#1 = <tensor[6]>[sum19B3,sum19B7,sum19BA,mult19AD,sum19BF,sum19C4];
          real compositionl19F6#1 = VDot<6>(dofs16F2,intermediateCons19C6);
          real op1_e3_l_1119F9#1 = RSub(compositionl19F6,_t1439);
          real op1_e3_l_1219FC#1 = RMul(gradEps198C,_t1777);
          real f119FF#4 = RSub(op1_e3_l_1119F9,op1_e3_l_1219FC);
          string _t1A02#1 = "vals:";
          tensor[2] _t1A04#2 = <tensor[2]>[f0176E,f119FF];
          string _t1A06#6 = "\n";
          Print<[string,tensor[2],string]>(_t1A02,_t1A04,_t1A06);
          bool _t1A0B#2 = GT<real>(f0176E,basisEval1792);
          if _t1A0B then goto JOIN1A10 else goto ASSIGN1C17
        JOIN1A10:  preds = [COND1A0D,JOIN1AAC]
          int _t1A0E#1 = phi(_t141C,_t1A0F)
          bool _t1A11#2 = GT<real>(f119FF,basisEval1792);
          if _t1A11 then goto JOIN1A16 else goto ASSIGN1C19
        JOIN1A16:  preds = [COND1A13,JOIN1AA4]
          int _t1A14#1 = phi(_t141C,_t1A15)
          int _t1A17#1 = IMul(_t1A0E,_t1A14);
          int _t1A19#4 = 0;
          bool _t1A1B#1 = GT<int>(_t1A17,_t1A19);
          bool _t1A1D#1 = BNot(_t1A1B);
          if _t1A1D then goto COND1A20 else goto ASSIGN1A8A
        COND1A20:  preds = [COND1A1F]
          if _t1A0B then goto JOIN1A23 else goto ASSIGN1C1B
        JOIN1A23:  preds = [COND1A20,JOIN1A86]
          int _t1A21#1 = phi(_t141C,_t1A22)
          if _t1A11 then goto JOIN1A27 else goto ASSIGN1C1C
        JOIN1A27:  preds = [COND1A24,JOIN1A80]
          int _t1A25#1 = phi(_t141C,_t1A26)
          int _t1A28#1 = IMul(_t1A21,_t1A25);
          bool _t1A2A#1 = EQ<int>(_t1A28,_t1A19);
          if _t1A2A then goto ASSIGN1A2E else goto JOIN1A30
        ASSIGN1A2E:  preds = [COND1A2C]
          string _t1A2D#1 = "Warn: 0 update\n";
          Print<[string]>(_t1A2D);
          goto JOIN1A30
        JOIN1A30:  preds = [MASSIGN1A2F,COND1A2C]
          string _t1A31#1 = "update with interval:";
          Print<[string,real,string]>(_t1A31,gradEps198C,_t1A06);
          string _t1A34#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1A34,_t1A04,_t1A06);
          string _t1A37#1 = "New interval:";
          real _t1A39#2 = RAdd(s1410,gradEps198C);
          tensor[2] _t1A3C#2 = <tensor[2]>[s1410,_t1A39];
          Print<[string,tensor[2],string]>(_t1A37,_t1A3C,_t1A06);
          tensor[2][] intervals1A3F#1 = Append<tensor[2]>(intervals1418,_t1A3C);
          femData:MeshCell[] newCells1A41#1 = Append<femData:MeshCell>(newCells141A,cc1414);
          goto JOIN1A47
        JOIN1A47:  preds = [ASSIGN1A42,ASSIGN1A9D]
          femData:MeshCell[] newCells1A43#2 = phi(newCells1A41,newCells141A)
          tensor[2][] intervals1A44#2 = phi(intervals1A3F,intervals1418)
          real s1A45#3 = phi(_t1A39,s1A46)
          bool _t1A48#1 = GTE<real>(s1A45,e1412);
          if _t1A48 then goto ASSIGN1A4C else goto JOIN1A66
        ASSIGN1A4C:  preds = [COND1A4A]
          int itter1A4B#4 = IAdd(itter140C,_t141C);
          bool _t1A4D#1 = GTE<int>(itter1A4B,len140A);
          if _t1A4D then goto SAVE1A50 else goto ASSIGN1A71
        SAVE1A50:  preds = [COND1A4F]
          self.itter = itter1A4B;
          self.s = s1A45;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          stabilize
          goto JOIN1A5F
        JOIN1A5F:  preds = [*STABILIZE1A54,ASSIGN1A7A]
          femData:FuncCell fc1A55#1 = phi(_t1A56)
          femData:MeshCell cc1A57#1 = phi(cc1A58)
          real e1A59#1 = phi(e1A5A)
          real s1A5B#1 = phi(s1A5C)
          tensor[2] interval1A5D#1 = phi(interval1A5E)
          goto JOIN1A66
        JOIN1A66:  preds = [JOIN1A5F,COND1A4A]
          femData:FuncCell fc1A60#1 = phi(fc1A55,fc1416)
          femData:MeshCell cc1A61#1 = phi(cc1A57,cc1414)
          real e1A62#1 = phi(e1A59,e1412)
          real s1A63#1 = phi(s1A5B,s1A45)
          tensor[2] interval1A64#1 = phi(interval1A5D,interval140E)
          int itter1A65#1 = phi(itter1A4B,itter140C)
          self.itter = itter1A65;
          self.interval = interval1A64;
          self.s = s1A63;
          self.e = e1A62;
          self.cc = cc1A61;
          self.fc = fc1A60;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          active
        ASSIGN1A71:  preds = [COND1A4F]
          int _t1A70#2 = IAdd(offset1408,itter1A4B);
          tensor[2] interval1A5E#3 = Subscript<tensor[2][]>(times1400,_t1A70);
          int _t1A73#1 = Subscript<int[]>(cells1402,_t1A70);
          femData:MeshCell cc1A58#2 = Subscript<femData:MeshCell[]>(0cell_a13FC,_t1A73);
          real s1A5C#1 = VIndex<2,0>(interval1A5E);
          real e1A5A#1 = VIndex<2,1>(interval1A5E);
          int _t1A78#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1A58);
          femData:FuncCell _t1A56#1 = LoadFem<femData:FuncCell>(c13FE,_t1A78);
          goto JOIN1A5F
        ASSIGN1C1C:  preds = [COND1A24]
          bool _t1A7B#1 = LT<real>(f119FF,basisEval1792);
          if _t1A7B then goto ASSIGN1A7F else goto JOIN1A80
        ASSIGN1A7F:  preds = [COND1A7D]
          int _t1A7E#1 = -1;
          goto JOIN1A80
        JOIN1A80:  preds = [ASSIGN1A7F,COND1A7D]
          int _t1A26#1 = phi(_t1A7E,_t1A19)
          goto JOIN1A27
        ASSIGN1C1B:  preds = [COND1A20]
          bool _t1A81#1 = LT<real>(f0176E,basisEval1792);
          if _t1A81 then goto ASSIGN1A85 else goto JOIN1A86
        ASSIGN1A85:  preds = [COND1A83]
          int _t1A84#1 = -1;
          goto JOIN1A86
        JOIN1A86:  preds = [ASSIGN1A85,COND1A83]
          int _t1A22#1 = phi(_t1A84,_t1A19)
          goto JOIN1A23
        ASSIGN1A8A:  preds = [COND1A1F]
          real _t1A89#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t1435,_t1779);
          real op1_e3_l_121A8B#1 = Abs<real>(f0176E);
          real op1_e3_l_131A8E#1 = RMul(coeff1710,_t1A89);
          real _t1A91#1 = RDiv(op1_e3_l_121A8B,op1_e3_l_131A8E);
          real epsUpdate1A94#2 = Max<real>(gradEps198C,_t1A91);
          string _t1A96#1 = "update L:";
          Print<[string,real,string]>(_t1A96,epsUpdate1A94,_t1A06);
          string _t1A99#1 = "update G:";
          Print<[string,real,string]>(_t1A99,gradEps198C,_t1A06);
          real s1A46#1 = RAdd(s1410,epsUpdate1A94);
          goto JOIN1A47
        ASSIGN1C19:  preds = [COND1A13]
          bool _t1A9E#1 = LT<real>(f119FF,basisEval1792);
          if _t1A9E then goto ASSIGN1AA2 else goto ASSIGN1AA5
        ASSIGN1AA2:  preds = [COND1AA0]
          int _t1AA1#1 = -1;
          goto JOIN1AA4
        JOIN1AA4:  preds = [ASSIGN1AA2,ASSIGN1AA5]
          int _t1A15#1 = phi(_t1AA1,_t1AA3)
          goto JOIN1A16
        ASSIGN1AA5:  preds = [COND1AA0]
          int _t1AA3#1 = 0;
          goto JOIN1AA4
        ASSIGN1C17:  preds = [COND1A0D]
          bool _t1AA6#1 = LT<real>(f0176E,basisEval1792);
          if _t1AA6 then goto ASSIGN1AAA else goto ASSIGN1AAD
        ASSIGN1AAA:  preds = [COND1AA8]
          int _t1AA9#1 = -1;
          goto JOIN1AAC
        JOIN1AAC:  preds = [ASSIGN1AAA,ASSIGN1AAD]
          int _t1A0F#1 = phi(_t1AA9,_t1AAB)
          goto JOIN1A10
        ASSIGN1AAD:  preds = [COND1AA8]
          int _t1AAB#1 = 0;
          goto JOIN1AAC
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1AAE:  preds = []
      int iresU1AAF#1 = globals.iresU11AD;
      int iresV1AB1#1 = globals.iresV11AE;
      int _t1AB3#2 = 0;
      int _t1AB5#2 = 1;
      int _t1AB7#1 = ISub(iresU1AAF,_t1AB5);
      int[] _t1AB9#1 = Range(_t1AB3,_t1AB7);
    FOREACH1ABC:  preds = [ASSIGN1ABA,NEXT1AC5]
      foreach (vi1ABB in _t1AB9) on exit goto RETURN1AC6
      int _t1ABD#1 = ISub(iresV1AB1,_t1AB5);
      int[] _t1ABF#1 = Range(_t1AB3,_t1ABD);
    FOREACH1AC2:  preds = [ASSIGN1AC0,NEXT1AC4]
      foreach (ui1AC1 in _t1ABF) on exit goto NEXT1AC5
      new ray(ui1AC1,vi1ABB);
      goto FOREACH1AC2
    NEXT1AC5:  preds = [FOREACH1AC2]
      goto FOREACH1ABC
    RETURN1AC6:  preds = [FOREACH1ABC]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a11A4 (a) = <no-default>
  input 0b0412_intermedateGlobal11A5 (b) = <no-default>
  input 0c0414_intermedateGlobal11A6 (c) = <no-default>
  input isoval11A7 (isoval) = <default>
  input thick11A8 (thick) = <default>
  input camEye11A9 (camEye) = <default>
  input camAt11AA (camAt) = <default>
  input camUp11AB (camUp) = <default>
  input camFOV11AC (camFOV) = <default>
  input iresU11AD (iresU) = <default>
  input iresV11AE (iresV) = <default>
  input camNear11AF (camNear) = <default>
  input camFar11B0 (camFar) = <default>
  input refStep11B1 (refStep) = <default>
  input rayStep11B2 (rayStep) = <default>
  input lightVsp11B3 (lightVsp) = <default>
  input phongKa11B4 (phongKa) = <default>
  input phongKd11B5 (phongKd) = <default>
  input debug11B6 (debug) = <default>
  input debugU11B7 (debugU) = <default>
  input debugV11B8 (debugV) = <default>
  input eps11B9 (eps) = <default>
  input indecies11BA (indecies) = <no-default>
  input times11BB (times) = <no-default>
  input cells11BC (cells) = <no-default>
  global femData:MeshCell[] 0cell_a11BD
  global femData:FemFunc c11BE
  global tensor[3] camU11BF
  global tensor[3] camV11C0
  global real camVmax11C1
  global real camUmax11C2
  global tensor[3] rayVec11C3
## functions
  function femData:MeshPos _0994_msh_newtonInverse143C (tensor[2] pos143D#2, int cellInt143E#2, femData:Mesh mesh143F#12) {
    ENTRY1440:  preds = []
      real _t1441#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn1443#1 = <tensor[2]>[_t1441,_t1441];
      int _t1445#1 = 0;
      int _t1447#1 = 16;
      int[] _t1449#1 = Range(_t1445,_t1447);
    FOREACH144C:  preds = [ASSIGN144A,NEXT16A3]
      foreach (itter144B in _t1449) on exit goto ASSIGN16A8
        tensor[2] xn15C3#3 = phi(xn1443,xn1637)
      int ilit144E#1 = 3;
      int mulRes144F#3 = IMul(cellInt143E,ilit144E);
      int idx1452#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,mulRes144F);
      int ilit1453#4 = 1;
      int addRes1454#1 = IAdd(mulRes144F,ilit1453);
      int idx1455#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1454);
      int ilit1456#4 = 2;
      int addRes1457#1 = IAdd(mulRes144F,ilit1456);
      int idx1458#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh143F,addRes1457);
      int mulRes146B#2 = IMul(ilit1456,idx1452);
      int addRes146E#1 = IAdd(ilit1453,mulRes146B);
      real dof_load146F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes146B);
      real dof_load1470#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes146E);
      int mulRes1473#2 = IMul(ilit1456,idx1455);
      int addRes1475#1 = IAdd(ilit1453,mulRes1473);
      real dof_load1476#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes1473);
      real dof_load1477#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes1475);
      int mulRes147A#2 = IMul(ilit1456,idx1458);
      int addRes147C#1 = IAdd(ilit1453,mulRes147A);
      real dof_load147D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,mulRes147A);
      real dof_load147E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh143F,addRes147C);
      real coeff149E#8 = -0.1e1;
      real one149F#15 = 0.1e1;
      real prod14A0#2 = RMul(one149F,one149F);
      real basisEval14A1#2 = RMul(coeff149E,prod14A0);
      real basisEval14A2#5 = RMul(one149F,prod14A0);
      real basisEval14A3#12 = 0.e0;
      real r14B6#2 = RMul(dof_load146F,basisEval14A1);
      real r14B9#1 = RMul(dof_load1476,basisEval14A2);
      real r14BC#1 = RMul(dof_load147D,basisEval14A3);
      real r14BD#1 = RAdd(r14B6,r14B9);
      real r14BE#3 = RAdd(r14BD,r14BC);
      real r14C2#1 = RMul(dof_load1476,basisEval14A3);
      real r14C4#1 = RMul(dof_load147D,basisEval14A2);
      real r14C5#1 = RAdd(r14B6,r14C2);
      real r14C6#3 = RAdd(r14C5,r14C4);
      real r14C9#2 = RMul(dof_load1470,basisEval14A1);
      real r14CB#1 = RMul(dof_load1477,basisEval14A2);
      real r14CD#1 = RMul(dof_load147E,basisEval14A3);
      real r14CE#1 = RAdd(r14C9,r14CB);
      real r14CF#3 = RAdd(r14CE,r14CD);
      real r14D1#1 = RMul(dof_load1477,basisEval14A3);
      real r14D2#1 = RMul(dof_load147E,basisEval14A2);
      real r14D3#1 = RAdd(r14C9,r14D1);
      real r14D4#3 = RAdd(r14D3,r14D2);
      real r14FD#1 = RMul(basisEval14A3,r14BE);
      real r1500#1 = RMul(coeff149E,r14CF);
      real r1501#2 = RAdd(r14FD,r1500);
      real r1503#2 = RMul(basisEval14A3,r14C6);
      real r1505#1 = RMul(coeff149E,r14D4);
      real r1506#2 = RAdd(r1503,r1505);
      real r1509#1 = RMul(one149F,r14BE);
      real r150A#1 = RMul(basisEval14A3,r14CF);
      real r150B#2 = RAdd(r1509,r150A);
      real r150C#1 = RMul(one149F,r14C6);
      real r150D#2 = RMul(basisEval14A3,r14D4);
      real r150E#2 = RAdd(r150C,r150D);
      tensor[2] probe_l_121527#1 = <tensor[2]>[r14BE,r14CF];
      real r157F#1 = RMul(one149F,r14D4);
      real r1580#1 = RAdd(r1503,r157F);
      real r1582#1 = RMul(coeff149E,r14C6);
      real r1584#1 = RAdd(r1582,r150D);
      tensor[2] op1_e3_l_141579#1 = <tensor[2]>[r1580,r1584];
      real r1595#1 = RMul(basisEval14A3,r1501);
      real r1598#1 = RMul(coeff149E,r1506);
      real r1599#1 = RAdd(r1595,r1598);
      real r159B#1 = RMul(basisEval14A3,r150B);
      real r159D#1 = RMul(coeff149E,r150E);
      real r159E#1 = RAdd(r159B,r159D);
      real r15A1#1 = RMul(one149F,r1501);
      real r15A2#1 = RMul(basisEval14A3,r1506);
      real r15A3#1 = RAdd(r15A1,r15A2);
      real r15A4#1 = RMul(one149F,r150B);
      real r15A5#1 = RMul(basisEval14A3,r150E);
      real r15A6#1 = RAdd(r15A4,r15A5);
      real op1_e3_l_1615BF#4 = VDot<2>(probe_l_121527,op1_e3_l_141579);
      real varAcc15C4#1 = VIndex<2,0>(xn15C3);
      real varAcc15C5#1 = VIndex<2,1>(xn15C3);
      real prod15C9#2 = RMul(varAcc15C4,one149F);
      real prod15CB#2 = RMul(one149F,varAcc15C5);
      real mult15CE#1 = RMul(coeff149E,prod15CB);
      real mult15CF#1 = RMul(coeff149E,prod15C9);
      real sum15D0#1 = RAdd(mult15CE,mult15CF);
      real sum15D1#2 = RAdd(basisEval14A2,sum15D0);
      real basisEval15D3#2 = RMul(one149F,prod15C9);
      real basisEval15D4#2 = RMul(one149F,prod15CB);
      real r15EC#1 = RMul(dof_load146F,sum15D1);
      real r15EF#1 = RMul(dof_load1476,basisEval15D3);
      real r15F2#1 = RMul(dof_load147D,basisEval15D4);
      real r15F3#1 = RAdd(r15EC,r15EF);
      real r15F4#1 = RAdd(r15F3,r15F2);
      real r15F6#1 = RMul(dof_load1470,sum15D1);
      real r15F8#1 = RMul(dof_load1477,basisEval15D3);
      real r15FA#1 = RMul(dof_load147E,basisEval15D4);
      real r15FB#1 = RAdd(r15F6,r15F8);
      real r15FC#1 = RAdd(r15FB,r15FA);
      tensor[2] probe_l_1715E9#1 = <tensor[2]>[r15F4,r15FC];
      real r1614#1 = RDiv(r1599,op1_e3_l_1615BF);
      real r1616#1 = RDiv(r159E,op1_e3_l_1615BF);
      tensor[2] tensor1617#1 = <tensor[2]>[r1614,r1616];
      real r1619#1 = RDiv(r15A3,op1_e3_l_1615BF);
      real r161B#1 = RDiv(r15A6,op1_e3_l_1615BF);
      tensor[2] tensor161C#1 = <tensor[2]>[r1619,r161B];
      tensor[2] op1_e3_l_191629#2 = VSub<2>(probe_l_1715E9,pos143D);
      real vdot162E#1 = VDot<2>(tensor1617,op1_e3_l_191629);
      real vdot1630#1 = VDot<2>(tensor161C,op1_e3_l_191629);
      tensor[2] op1_e3_l_20162C#3 = <tensor[2]>[vdot162E,vdot1630];
      tensor[2] xn1637#4 = VSub<2>(xn15C3,op1_e3_l_20162C);
      real _t163A#2 = 0.1e-7;
      real _t163C#1 = RMul(_t163A,_t163A);
      real _t1676#1 = VDot<2>(op1_e3_l_20162C,op1_e3_l_20162C);
      bool _t1679#1 = GTE<real>(_t163C,_t1676);
      if _t1679 then goto ASSIGN167F else goto JOIN16A2
    ASSIGN167F:  preds = [COND167B]
      real _t167E#3 = 0.1e-8;
      real _t1680#1 = RAdd(one149F,_t167E);
      tensor[2] _t1683#1 = <tensor[2]>[one149F,one149F];
      real _t1685#1 = VDot<2>(_t1683,xn1637);
      bool _t1688#1 = GT<real>(_t1680,_t1685);
      tensor[2] _t168A#1 = <tensor[2]>[_t167E,_t167E];
      tensor[2] _t168C#2 = VAdd<2>(_t168A,xn1637);
      real _t168F#1 = VIndex<2,0>(_t168C);
      real _t1691#2 = -0.e0;
      bool _t1693#1 = GT<real>(_t168F,_t1691);
      real _t1695#1 = VIndex<2,1>(_t168C);
      bool _t1697#1 = GT<real>(_t1695,_t1691);
      bool _t1699#1 = BAnd(_t1693,_t1697);
      bool _t169B#1 = BAnd(_t1688,_t1699);
      if _t169B then goto ASSIGN169F else goto ASSIGN16A5
    ASSIGN169F:  preds = [COND169D]
      femData:MeshPos _t169E#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh143F,cellInt143E,xn1637,pos143D);
      return _t169E
      goto JOIN16A1
    JOIN16A1:  preds = [*RETURN(_t169E)16A0,*RETURN(_t16A4)16A6]
      goto JOIN16A2
    JOIN16A2:  preds = [*JOIN16A1,COND167B]
      goto FOREACH144C
    ASSIGN16A5:  preds = [COND169D]
      femData:MeshPos _t16A4#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A4
      goto JOIN16A1
    ASSIGN16A8:  preds = [FOREACH144C]
      femData:MeshPos _t16A7#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh143F);
      return _t16A7
}
## input initialization
  ENTRY11C4:  preds = []
    real isoval11C5#1 = 0.2e0;
    globals.isoval11A7 = isoval11C5;
    real thick11C8#1 = 0.7e-1;
    globals.thick11A8 = thick11C8;
    real _t11CB#1 = -0.5e0;
    real _t11CD#5 = 0.5e0;
    tensor[3] camEye11CF#1 = <tensor[3]>[_t11CB,_t11CD,_t11CD];
    globals.camEye11A9 = camEye11CF;
    tensor[3] camAt11D2#1 = <tensor[3]>[_t11CD,_t11CD,_t11CD];
    globals.camAt11AA = camAt11D2;
    real _t11D5#2 = 0.e0;
    real _t11D7#2 = 0.1e1;
    tensor[3] camUp11D9#2 = <tensor[3]>[_t11D5,_t11D5,_t11D7];
    globals.camUp11AB = camUp11D9;
    real camFOV11DC#1 = 0.137e2;
    globals.camFOV11AC = camFOV11DC;
    int iresU11DF#2 = 10;
    globals.iresU11AD = iresU11DF;
    globals.iresV11AE = iresU11DF;
    real camNear11E3#1 = -0.2e1;
    globals.camNear11AF = camNear11E3;
    real camFar11E6#1 = 0.5e1;
    globals.camFar11B0 = camFar11E6;
    globals.refStep11B1 = _t11D7;
    real rayStep11EA#1 = 0.1e-1;
    globals.rayStep11B2 = rayStep11EA;
    globals.lightVsp11B3 = camUp11D9;
    real phongKa11EE#1 = 0.1e0;
    globals.phongKa11B4 = phongKa11EE;
    real phongKd11F1#1 = 0.9e0;
    globals.phongKd11B5 = phongKd11F1;
    bool debug11F4#1 = false;
    globals.debug11B6 = debug11F4;
    int debugU11F7#1 = 8;
    globals.debugU11B7 = debugU11F7;
    int debugV11FA#1 = 2;
    globals.debugV11B8 = debugV11FA;
    real eps11FD#1 = 0.1e-8;
    globals.eps11B9 = eps11FD;
    return
## global-variable initialization
  ENTRY1201:  preds = []
    femData:Mesh a1202#3 = globals.a11A4;
    femData:Space 0b0412_intermedateGlobal1204#1 = globals.0b0412_intermedateGlobal11A5;
    femData:FemFunc 0c0414_intermedateGlobal1206#1 = globals.0c0414_intermedateGlobal11A6;
    tensor[3] camEye1208#1 = globals.camEye11A9;
    tensor[3] camAt120A#1 = globals.camAt11AA;
    tensor[3] camUp120C#3 = globals.camUp11AB;
    real camFOV120E#1 = globals.camFOV11AC;
    int iresU1210#1 = globals.iresU11AD;
    int iresV1212#1 = globals.iresV11AE;
    int _t1214#1 = 0;
    int _t1216#1 = 1;
    int _t1218#1 = ExtractFemItem<int,NumCell(Mesh)>(a1202);
    int _t121A#1 = ISub(_t1218,_t1216);
    int[] _t121C#1 = Range(_t1214,_t121A);
    femData:MeshCell[] _t121E#1 = <femData:MeshCell[]>{};
  FOREACH1221:  preds = [ASSIGN121F,NEXT1227]
    foreach (_t1220 in _t121C) on exit goto GASSIGN1228
      femData:MeshCell[] _t1225#2 = phi(_t121E,_t1224)
    femData:MeshCell _t1222#1 = LoadFem<femData:MeshCell>(a1202,_t1220);
    femData:MeshCell[] _t1224#1 = Append<femData:MeshCell>(_t1225,_t1222);
    goto FOREACH1221
  GASSIGN1228:  preds = [FOREACH1221]
    globals.0cell_a11BD = _t1225;
    femData:Space b1229#1 = LoadFem<femData:Space>(0b0412_intermedateGlobal1204,a1202);
    femData:FemFunc c122B#1 = LoadFem<femData:FemFunc>(0c0414_intermedateGlobal1206,b1229);
    globals.c11BE = c122B;
    tensor[3] op1_e3_l_4122E#9 = VSub<3>(camAt120A,camEye1208);
    real op1_e3_l_61231#1 = VDot<3>(op1_e3_l_4122E,op1_e3_l_4122E);
    real op1_e3_l_71234#3 = Sqrt(op1_e3_l_61231);
    real realLit1238#8 = 0.1e1;
    real op1_e3_l_91237#6 = RDiv(realLit1238,op1_e3_l_71234);
    tensor[3] camN123C#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_4122E);
    real realLit1240#6 = 0.e0;
    real r1241#3 = TensorIndex<tensor[3],[0]>(camUp120C);
    real r1242#3 = RMul(realLit1240,r1241);
    real r1243#3 = TensorIndex<tensor[3],[1]>(camUp120C);
    real r1244#3 = RMul(realLit1240,r1243);
    real r1245#3 = TensorIndex<tensor[3],[2]>(camUp120C);
    real r1246#5 = RMul(realLit1240,r1245);
    real r1247#3 = RAdd(r1242,r1244);
    real r1248#3 = RAdd(r1247,r1246);
    real r124A#1 = RMul(realLit1238,r1245);
    real r124B#1 = RAdd(r1247,r124A);
    real realLit124C#6 = -0.1e1;
    real r124D#1 = RMul(realLit124C,r1243);
    real r124E#1 = RAdd(r1242,r124D);
    real r124F#1 = RAdd(r124E,r1246);
    tensor[3] tensor1250#1 = <tensor[3]>[r1248,r124B,r124F];
    real r1251#1 = RMul(realLit124C,r1245);
    real r1252#1 = RAdd(r1247,r1251);
    real r1253#1 = RMul(realLit1238,r1241);
    real r1254#1 = RAdd(r1253,r1244);
    real r1255#1 = RAdd(r1254,r1246);
    tensor[3] tensor1256#1 = <tensor[3]>[r1252,r1248,r1255];
    real r1257#1 = RMul(realLit1238,r1243);
    real r1258#1 = RAdd(r1242,r1257);
    real r1259#1 = RAdd(r1258,r1246);
    real r125A#1 = RMul(realLit124C,r1241);
    real r125B#1 = RAdd(r125A,r1244);
    real r125C#1 = RAdd(r125B,r1246);
    tensor[3] tensor125D#1 = <tensor[3]>[r1259,r125C,r1248];
    real vdot1280#1 = VDot<3>(op1_e3_l_4122E,tensor1250);
    real vdot1282#1 = VDot<3>(op1_e3_l_4122E,tensor1256);
    real vdot1284#1 = VDot<3>(op1_e3_l_4122E,tensor125D);
    tensor[3] op1_e3_l_17127E#6 = <tensor[3]>[vdot1280,vdot1282,vdot1284];
    real op1_e3_l_34128D#1 = VDot<3>(op1_e3_l_17127E,op1_e3_l_17127E);
    real r1291#1 = RMul(op1_e3_l_91237,op1_e3_l_91237);
    real op1_e3_l_351290#1 = RMul(r1291,op1_e3_l_34128D);
    real op1_e3_l_361295#1 = Sqrt(op1_e3_l_351290);
    tensor[3] op1_e3_l_371298#1 = VScale<3>(op1_e3_l_91237,op1_e3_l_17127E);
    real op1_e3_l_38129B#2 = RDiv(realLit1238,op1_e3_l_361295);
    tensor[3] camU12A0#1 = VScale<3>(op1_e3_l_38129B,op1_e3_l_371298);
    globals.camU11BF = camU12A0;
    real r12A6#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_4122E);
    real r12A7#3 = RMul(realLit1240,r12A6);
    real r12A8#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_4122E);
    real r12A9#3 = RMul(realLit1240,r12A8);
    real r12AA#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_4122E);
    real r12AB#5 = RMul(realLit1240,r12AA);
    real r12AC#3 = RAdd(r12A7,r12A9);
    real r12AD#3 = RAdd(r12AC,r12AB);
    real r12AF#1 = RMul(realLit1238,r12AA);
    real r12B0#1 = RAdd(r12AC,r12AF);
    real r12B2#1 = RMul(realLit124C,r12A8);
    real r12B3#1 = RAdd(r12A7,r12B2);
    real r12B4#1 = RAdd(r12B3,r12AB);
    tensor[3] tensor12B5#1 = <tensor[3]>[r12AD,r12B0,r12B4];
    real r12B6#1 = RMul(realLit124C,r12AA);
    real r12B7#1 = RAdd(r12AC,r12B6);
    real r12B8#1 = RMul(realLit1238,r12A6);
    real r12B9#1 = RAdd(r12B8,r12A9);
    real r12BA#1 = RAdd(r12B9,r12AB);
    tensor[3] tensor12BB#1 = <tensor[3]>[r12B7,r12AD,r12BA];
    real r12BC#1 = RMul(realLit1238,r12A8);
    real r12BD#1 = RAdd(r12A7,r12BC);
    real r12BE#1 = RAdd(r12BD,r12AB);
    real r12BF#1 = RMul(realLit124C,r12A6);
    real r12C0#1 = RAdd(r12BF,r12A9);
    real r12C1#1 = RAdd(r12C0,r12AB);
    tensor[3] tensor12C2#1 = <tensor[3]>[r12BE,r12C1,r12AD];
    real vdot12E5#1 = VDot<3>(op1_e3_l_17127E,tensor12B5);
    real vdot12E7#1 = VDot<3>(op1_e3_l_17127E,tensor12BB);
    real vdot12E9#1 = VDot<3>(op1_e3_l_17127E,tensor12C2);
    tensor[3] op1_e3_l_4712E3#1 = <tensor[3]>[vdot12E5,vdot12E7,vdot12E9];
    tensor[3] op1_e3_l_5012F2#3 = VScale<3>(op1_e3_l_91237,op1_e3_l_4712E3);
    real r12F6#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_5012F2);
    real r12F7#3 = RMul(op1_e3_l_38129B,op1_e3_l_91237);
    real r12F8#1 = RMul(r12F7,r12F6);
    real r12F9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_5012F2);
    real r12FA#1 = RMul(r12F7,r12F9);
    real r12FB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_5012F2);
    real r12FC#1 = RMul(r12F7,r12FB);
    tensor[3] camV12F5#1 = <tensor[3]>[r12F8,r12FA,r12FC];
    globals.camV11C0 = camV12F5;
    real _t1307#1 = 0.314159265358979323846264338327950288e1;
    real _t1309#1 = 0.36e3;
    real op1_e3_l_5130B#1 = RMul(camFOV120E,_t1307);
    real op1_e3_l_6130E#1 = RDiv(op1_e3_l_5130B,_t1309);
    real op1_e3_l_101311#2 = Tan(op1_e3_l_6130E);
    real camVmax1314#1 = RMul(op1_e3_l_101311,op1_e3_l_71234);
    globals.camVmax11C1 = camVmax1314;
    real _t1318#1 = IntToReal(iresU1210);
    real _t131A#1 = IntToReal(iresV1212);
    real r131D#1 = RMul(_t1318,op1_e3_l_101311);
    real op1_e3_l_14131C#1 = RMul(r131D,op1_e3_l_71234);
    real camUmax1321#1 = RDiv(op1_e3_l_14131C,_t131A);
    globals.camUmax11C2 = camUmax1321;
    globals.rayVec11C3 = camN123C;
    return
## strand
  strand ray (int ui1327#2, int vi1328#3)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      tensor[3] rayOrig;
      int offset;
      int len;
      int itter;
      int idx;
      tensor[2] interval;
      real s;
      real e;
      femData:MeshCell cc;
      femData:FuncCell fc;
      output tensor[2][] intervals;
      output femData:MeshCell[] newCells;
    state init
      ENTRY1338:  preds = []
        femData:MeshCell[] 0cell_a1339#1 = globals.0cell_a11BD;
        femData:FemFunc c133B#1 = globals.c11BE;
        tensor[3] camEye133D#1 = globals.camEye11A9;
        int iresU133F#2 = globals.iresU11AD;
        int iresV1341#3 = globals.iresV11AE;
        int[] indecies1343#2 = globals.indecies11BA;
        tensor[2][] times1345#1 = globals.times11BB;
        tensor[3] camU1347#1 = globals.camU11BF;
        tensor[3] camV1349#1 = globals.camV11C0;
        real camVmax134B#2 = globals.camVmax11C1;
        real camUmax134D#2 = globals.camUmax11C2;
        real _t134F#4 = -0.5e0;
        real _t1351#1 = IntToReal(ui1327);
        real _t1353#1 = IntToReal(iresU133F);
        real _t1355#2 = 0.5e0;
        real op1_e3_l_61357#1 = RSub(_t1353,_t1355);
        real op1_e3_l_7135A#1 = RSub(_t1351,_t134F);
        real op1_e3_l_8135D#1 = RSub(op1_e3_l_61357,_t134F);
        real op1_e3_l_91360#2 = RNeg(camUmax134D);
        real op1_e3_l_101363#1 = RDiv(op1_e3_l_7135A,op1_e3_l_8135D);
        real op1_e3_l_111366#1 = RSub(camUmax134D,op1_e3_l_91360);
        real op1_e3_l_131369#1 = RMul(op1_e3_l_101363,op1_e3_l_111366);
        real rayU136C#2 = RAdd(op1_e3_l_91360,op1_e3_l_131369);
        real _t136F#1 = IntToReal(vi1328);
        real _t1371#1 = IntToReal(iresV1341);
        real op1_e3_l_61373#1 = RSub(_t1371,_t1355);
        real op1_e3_l_71376#1 = RSub(_t136F,_t134F);
        real op1_e3_l_81379#1 = RSub(op1_e3_l_61373,_t134F);
        real op1_e3_l_9137C#2 = RNeg(camVmax134B);
        real op1_e3_l_10137F#1 = RDiv(op1_e3_l_71376,op1_e3_l_81379);
        real op1_e3_l_111382#1 = RSub(camVmax134B,op1_e3_l_9137C);
        real op1_e3_l_131385#1 = RMul(op1_e3_l_10137F,op1_e3_l_111382);
        real rayV1388#2 = RAdd(op1_e3_l_9137C,op1_e3_l_131385);
        tensor[3] op1_e3_l_32139A#2 = VScale<3>(rayU136C,camU1347);
        tensor[3] op1_e3_l_33139D#2 = VScale<3>(rayV1388,camV1349);
        tensor[3] UV13A0#1 = VAdd<3>(op1_e3_l_32139A,op1_e3_l_33139D);
        tensor[3] v13A4#1 = VAdd<3>(camEye133D,op1_e3_l_32139A);
        tensor[3] rayOrig13A3#1 = VAdd<3>(v13A4,op1_e3_l_33139D);
        int _t13A8#2 = IMul(ui1327,iresV1341);
        int _t13AA#1 = IAdd(_t13A8,vi1328);
        int offset13AC#3 = Subscript<int[]>(indecies1343,_t13AA);
        int _t13AE#1 = IMul(iresU133F,iresV1341);
        int _t13B0#1 = IAdd(_t13AE,_t13A8);
        int _t13B2#1 = IAdd(_t13B0,vi1328);
        int len13B4#1 = Subscript<int[]>(indecies1343,_t13B2);
        int itter13B6#2 = 0;
        tensor[2] interval13BA#3 = Subscript<tensor[2][]>(times1345,offset13AC);
        real s13BC#1 = VIndex<2,0>(interval13BA);
        real e13BE#1 = VIndex<2,1>(interval13BA);
        femData:MeshCell cc13C0#2 = Subscript<femData:MeshCell[]>(0cell_a1339,itter13B6);
        int _t13C2#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13C0);
        femData:FuncCell _t13C4#1 = LoadFem<femData:FuncCell>(c133B,_t13C2);
        tensor[2][0] _t13C6#1 = <tensor[2][0]>{};
        tensor[2][] _t13C8#1 = MkDynamic<tensor[2],0>(_t13C6);
        femData:MeshCell[0] _t13CA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t13CC#1 = MkDynamic<femData:MeshCell,0>(_t13CA);
        self.rayU = rayU136C;
        self.rayV = rayV1388;
        self.UV = UV13A0;
        self.rayOrig = rayOrig13A3;
        self.offset = offset13AC;
        self.len = len13B4;
        self.itter = itter13B6;
        self.idx = offset13AC;
        self.interval = interval13BA;
        self.s = s13BC;
        self.e = e13BE;
        self.cc = cc13C0;
        self.fc = _t13C4;
        self.intervals = _t13C8;
        self.newCells = _t13CC;
        return
    end state init
    method start
        ENTRY13DE:  preds = []
          femData:MeshCell[] 0cell_a13DF#1 = globals.0cell_a11BD;
          femData:FemFunc c13E1#1 = globals.c11BE;
          int[] cells13E3#1 = globals.cells11BC;
          int len13E5#1 = self.len;
          int idx13E7#1 = self.idx;
          int _t13E9#1 = 0;
          bool _t13EB#1 = EQ<int>(len13E5,_t13E9);
          if _t13EB then goto STABILIZE13EE else goto JOIN13EF
        STABILIZE13EE:  preds = [COND13ED]
          stabilize
          goto JOIN13EF
        JOIN13EF:  preds = [*STABILIZE13EE,COND13ED]
          int _t13F0#1 = Subscript<int[]>(cells13E3,idx13E7);
          femData:MeshCell cc13F2#2 = Subscript<femData:MeshCell[]>(0cell_a13DF,_t13F0);
          int _t13F4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc13F2);
          femData:FuncCell _t13F6#1 = LoadFem<femData:FuncCell>(c13E1,_t13F4);
          self.cc = cc13F2;
          self.fc = _t13F6;
          active
    end start
    method update
        ENTRY13FB:  preds = []
          femData:MeshCell[] 0cell_a13FC#1 = globals.0cell_a11BD;
          femData:FemFunc c13FE#1 = globals.c11BE;
          tensor[2][] times1400#1 = globals.times11BB;
          int[] cells1402#1 = globals.cells11BC;
          tensor[3] rayVec1404#4 = globals.rayVec11C3;
          tensor[3] rayOrig1406#1 = self.rayOrig;
          int offset1408#1 = self.offset;
          int len140A#2 = self.len;
          int itter140C#2 = self.itter;
          tensor[2] interval140E#1 = self.interval;
          real s1410#5 = self.s;
          real e1412#3 = self.e;
          femData:MeshCell cc1414#5 = self.cc;
          femData:FuncCell fc1416#3 = self.fc;
          tensor[2][] intervals1418#2 = self.intervals;
          femData:MeshCell[] newCells141A#2 = self.newCells;
          int _t141C#17 = 1;
          bool _t141E#1 = LT<int>(len140A,_t141C);
          if _t141E then goto STABILIZE1421 else goto JOIN1422
        STABILIZE1421:  preds = [COND1420]
          stabilize
          goto JOIN1422
        JOIN1422:  preds = [*STABILIZE1421,COND1420]
          tensor[3] op1_e3_l_31423#1 = VScale<3>(s1410,rayVec1404);
          tensor[3] rayStart1426#3 = VAdd<3>(rayOrig1406,op1_e3_l_31423);
          real _t1429#1 = VIndex<3,0>(rayStart1426);
          real _t142B#1 = VIndex<3,1>(rayStart1426);
          tensor[2] project142D#2 = <tensor[2]>[_t1429,_t142B];
          femData:FemFunc _t142F#7 = ExtractFem<femData:FemFunc,femData:FuncCell>(fc1416);
          femData:Space _t1431#6 = ExtractFem<femData:Space,femData:FemFunc>(_t142F);
          int _t1433#1 = ExtractFemItem<int,CellIndex(FuncCell)>(fc1416);
          femData:Mesh _t1435#13 = ExtractFem<femData:Mesh,femData:MeshCell>(cc1414);
          int _t1437#3 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1414);
          real _t1439#2 = VIndex<3,2>(rayStart1426);
          femData:MeshPos callNewtonPos143B#1 = _0994_msh_newtonInverse143C (project142D,_t1437,_t1435);
          tensor[2] refPos16AB#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos143B);
          int ilit16AE#1 = 6;
          int mulRes16AF#6 = IMul(_t1433,ilit16AE);
          int idx16B2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,mulRes16AF);
          int addRes16B4#1 = IAdd(mulRes16AF,_t141C);
          int idx16B5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B4);
          int ilit16B6#5 = 2;
          int addRes16B7#1 = IAdd(mulRes16AF,ilit16B6);
          int idx16B8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16B7);
          int ilit16B9#2 = 3;
          int addRes16BA#1 = IAdd(mulRes16AF,ilit16B9);
          int idx16BB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BA);
          int ilit16BC#1 = 4;
          int addRes16BD#1 = IAdd(mulRes16AF,ilit16BC);
          int idx16BE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16BD);
          int ilit16BF#1 = 5;
          int addRes16C0#1 = IAdd(mulRes16AF,ilit16BF);
          int idx16C1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1431,addRes16C0);
          int mulRes16DD#1 = IMul(_t141C,idx16B2);
          int mulRes16DF#1 = IMul(_t141C,idx16B5);
          int mulRes16E2#1 = IMul(_t141C,idx16B8);
          int mulRes16E5#1 = IMul(_t141C,idx16BB);
          int mulRes16E8#1 = IMul(_t141C,idx16BE);
          int mulRes16EB#1 = IMul(_t141C,idx16C1);
          real dof16EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DD);
          real dof16ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16DF);
          real dof16EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E2);
          real dof16EF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E5);
          real dof16F0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16E8);
          real dof16F1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t142F,mulRes16EB);
          tensor[6] dofs16F2#4 = <tensor[6]>[dof16EC,dof16ED,dof16EE,dof16EF,dof16F0,dof16F1];
          real varAcc170E#4 = VIndex<2,0>(refPos16AB);
          real varAcc170F#4 = VIndex<2,1>(refPos16AB);
          real coeff1710#5 = 0.2e1;
          real prod21712#1 = RMul(varAcc170E,varAcc170E);
          real one1713#16 = 0.1e1;
          real prod1714#2 = RMul(prod21712,one1713);
          real coeff1715#7 = 0.4e1;
          real prod1717#2 = RMul(varAcc170E,varAcc170F);
          real coeff1718#5 = -0.3e1;
          real prod1719#5 = RMul(varAcc170E,one1713);
          real prod2171A#1 = RMul(varAcc170F,varAcc170F);
          real prod171B#1 = RMul(one1713,prod2171A);
          real prod171C#4 = RMul(one1713,varAcc170F);
          real prod171D#4 = RMul(one1713,one1713);
          real mult171E#6 = RMul(one1713,prod171D);
          real mult171F#1 = RMul(coeff1718,prod171C);
          real mult1720#2 = RMul(coeff1710,prod171B);
          real mult1721#1 = RMul(coeff1718,prod1719);
          real mult1722#2 = RMul(coeff1715,prod1717);
          real mult1723#2 = RMul(coeff1710,prod1714);
          real sum1724#1 = RAdd(mult1722,mult1723);
          real sum1725#1 = RAdd(mult1721,sum1724);
          real sum1726#1 = RAdd(mult1720,sum1725);
          real sum1727#1 = RAdd(mult171F,sum1726);
          real sum1728#1 = RAdd(mult171E,sum1727);
          real coeff172A#10 = -0.1e1;
          real mult172B#1 = RMul(coeff172A,prod1719);
          real sum172C#1 = RAdd(mult172B,mult1723);
          real mult172E#1 = RMul(coeff172A,prod171C);
          real sum172F#1 = RAdd(mult172E,mult1720);
          real coeff1731#6 = -0.4e1;
          real mult1732#4 = RMul(coeff1715,prod171C);
          real mult1733#2 = RMul(coeff1731,prod1717);
          real sum1734#1 = RAdd(mult1732,mult1733);
          real mult1736#4 = RMul(coeff1715,prod1719);
          real mult1737#1 = RMul(coeff1731,prod1714);
          real sum1738#1 = RAdd(mult1733,mult1737);
          real sum1739#1 = RAdd(mult1736,sum1738);
          tensor[6] intermediateCons173B#1 = <tensor[6]>[sum1728,sum172C,sum172F,mult1722,sum1734,sum1739];
          real compositionl176B#1 = VDot<6>(dofs16F2,intermediateCons173B);
          real f0176E#5 = RSub(compositionl176B,_t1439);
          real _t1771#1 = VIndex<3,0>(rayVec1404);
          real _t1773#1 = VIndex<3,1>(rayVec1404);
          tensor[2] _t1775#2 = <tensor[2]>[_t1771,_t1773];
          real _t1777#2 = VIndex<3,2>(rayVec1404);
          int _t1779#2 = ExtractFemItem<int,CellIndex(Mesh)>(cc1414);
          real _t177B#1 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(_t1435,_t1779);
          real mult1788#1 = RMul(coeff1718,prod171D);
          real sum178B#1 = RAdd(mult1732,mult1736);
          real sum178C#2 = RAdd(mult1788,sum178B);
          real mult178F#4 = RMul(coeff172A,prod171D);
          real sum1790#1 = RAdd(mult178F,mult1736);
          real basisEval1792#20 = 0.e0;
          real basisEval1794#2 = RMul(coeff1731,prod171C);
          real coeff1795#1 = -0.8e1;
          real mult1796#2 = RMul(coeff1715,prod171D);
          real mult1797#1 = RMul(coeff1795,prod1719);
          real sum1798#1 = RAdd(basisEval1794,mult1797);
          real sum1799#1 = RAdd(mult1796,sum1798);
          real sum179C#1 = RAdd(mult178F,mult1732);
          real mult179E#2 = RMul(coeff1731,prod1719);
          real sum179F#1 = RAdd(mult1796,mult179E);
          tensor[6] intermediateCons17A1#1 = <tensor[6]>[sum178C,sum1790,basisEval1792,mult1732,basisEval1794,sum1799];
          tensor[6] intermediateCons17A2#1 = <tensor[6]>[sum178C,basisEval1792,sum179C,mult1736,sum179F,mult179E];
          real vdot17CD#2 = VDot<6>(dofs16F2,intermediateCons17A1);
          real vdot17CF#2 = VDot<6>(dofs16F2,intermediateCons17A2);
          int mulRes17D8#3 = IMul(_t1437,ilit16B9);
          int idx17DB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,mulRes17D8);
          int addRes17DD#1 = IAdd(mulRes17D8,_t141C);
          int idx17DE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17DD);
          int addRes17E0#1 = IAdd(mulRes17D8,ilit16B6);
          int idx17E1#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1435,addRes17E0);
          int mulRes17F4#2 = IMul(ilit16B6,idx17DB);
          int addRes17F7#1 = IAdd(_t141C,mulRes17F4);
          real dof_load17F8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17F4);
          real dof_load17F9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17F7);
          int mulRes17FC#2 = IMul(ilit16B6,idx17DE);
          int addRes17FE#1 = IAdd(_t141C,mulRes17FC);
          real dof_load17FF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes17FC);
          real dof_load1800#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes17FE);
          int mulRes1803#2 = IMul(ilit16B6,idx17E1);
          int addRes1805#1 = IAdd(_t141C,mulRes1803);
          real dof_load1806#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,mulRes1803);
          real dof_load1807#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1435,addRes1805);
          real r183F#2 = RMul(dof_load17F8,mult178F);
          real r1842#1 = RMul(dof_load17FF,mult171E);
          real r1845#1 = RMul(dof_load1806,basisEval1792);
          real r1846#1 = RAdd(r183F,r1842);
          real r1847#3 = RAdd(r1846,r1845);
          real r184B#1 = RMul(dof_load17FF,basisEval1792);
          real r184D#1 = RMul(dof_load1806,mult171E);
          real r184E#1 = RAdd(r183F,r184B);
          real r184F#3 = RAdd(r184E,r184D);
          real r1852#2 = RMul(dof_load17F9,mult178F);
          real r1854#1 = RMul(dof_load1800,mult171E);
          real r1856#1 = RMul(dof_load1807,basisEval1792);
          real r1857#1 = RAdd(r1852,r1854);
          real r1858#3 = RAdd(r1857,r1856);
          real r185A#1 = RMul(dof_load1800,basisEval1792);
          real r185B#1 = RMul(dof_load1807,mult171E);
          real r185C#1 = RAdd(r1852,r185A);
          real r185D#3 = RAdd(r185C,r185B);
          real r1886#1 = RMul(basisEval1792,r1847);
          real r1889#1 = RMul(coeff172A,r1858);
          real r188A#2 = RAdd(r1886,r1889);
          real r188C#2 = RMul(basisEval1792,r184F);
          real r188E#1 = RMul(coeff172A,r185D);
          real r188F#2 = RAdd(r188C,r188E);
          real r1892#1 = RMul(one1713,r1847);
          real r1893#1 = RMul(basisEval1792,r1858);
          real r1894#2 = RAdd(r1892,r1893);
          real r1895#1 = RMul(one1713,r184F);
          real r1896#2 = RMul(basisEval1792,r185D);
          real r1897#2 = RAdd(r1895,r1896);
          tensor[2] probe_l_1318B0#1 = <tensor[2]>[r1847,r1858];
          real r1908#1 = RMul(one1713,r185D);
          real r1909#1 = RAdd(r188C,r1908);
          real r190B#1 = RMul(coeff172A,r184F);
          real r190D#1 = RAdd(r190B,r1896);
          tensor[2] op1_e3_l_151902#1 = <tensor[2]>[r1909,r190D];
          real r191E#1 = RMul(basisEval1792,r188A);
          real r1921#1 = RMul(coeff172A,r188F);
          real r1922#1 = RAdd(r191E,r1921);
          real r1924#1 = RMul(basisEval1792,r1894);
          real r1926#1 = RMul(coeff172A,r1897);
          real r1927#1 = RAdd(r1924,r1926);
          real r192A#1 = RMul(one1713,r188A);
          real r192B#1 = RMul(basisEval1792,r188F);
          real r192C#1 = RAdd(r192A,r192B);
          real r192D#1 = RMul(one1713,r1894);
          real r192E#1 = RMul(basisEval1792,r1897);
          real r192F#1 = RAdd(r192D,r192E);
          real op1_e3_l_171948#4 = VDot<2>(probe_l_1318B0,op1_e3_l_151902);
          real r194D#1 = RDiv(r1922,op1_e3_l_171948);
          real r194F#1 = RDiv(r1927,op1_e3_l_171948);
          real r1952#1 = RDiv(r192C,op1_e3_l_171948);
          real r1954#1 = RDiv(r192F,op1_e3_l_171948);
          real r1965#1 = RMul(vdot17CD,r194D);
          real r1968#1 = RMul(vdot17CF,r1952);
          real r1969#1 = RAdd(r1965,r1968);
          real r196B#1 = RMul(vdot17CD,r194F);
          real r196D#1 = RMul(vdot17CF,r1954);
          real r196E#1 = RAdd(r196B,r196D);
          tensor[2] op1_e3_l_191962#1 = <tensor[2]>[r1969,r196E];
          real op1_e3_l_20197D#1 = VDot<2>(_t1775,op1_e3_l_191962);
          real op1_e3_l_211980#1 = RSub(op1_e3_l_20197D,_t1777);
          real op1_e3_l_221983#1 = Abs<real>(op1_e3_l_211980);
          real _t1986#1 = RDiv(op1_e3_l_221983,_t177B);
          real _t1989#1 = RSub(e1412,s1410);
          real gradEps198C#6 = Min<real>(_t1986,_t1989);
          tensor[2] op1_e3_l_3198E#1 = VScale<2>(gradEps198C,_t1775);
          tensor[2] _t1991#1 = VAdd<2>(project142D,op1_e3_l_3198E);
          femData:MeshPos callNewtonPos1994#1 = _0994_msh_newtonInverse143C (_t1991,_t1437,_t1435);
          tensor[2] refPos1996#2 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos1994);
          real varAcc1999#4 = VIndex<2,0>(refPos1996);
          real varAcc199A#4 = VIndex<2,1>(refPos1996);
          real prod2199D#1 = RMul(varAcc1999,varAcc1999);
          real prod199F#2 = RMul(prod2199D,one1713);
          real prod19A2#2 = RMul(varAcc1999,varAcc199A);
          real prod19A4#3 = RMul(varAcc1999,one1713);
          real prod219A5#1 = RMul(varAcc199A,varAcc199A);
          real prod19A6#1 = RMul(one1713,prod219A5);
          real prod19A7#3 = RMul(one1713,varAcc199A);
          real mult19AA#1 = RMul(coeff1718,prod19A7);
          real mult19AB#2 = RMul(coeff1710,prod19A6);
          real mult19AC#1 = RMul(coeff1718,prod19A4);
          real mult19AD#2 = RMul(coeff1715,prod19A2);
          real mult19AE#2 = RMul(coeff1710,prod199F);
          real sum19AF#1 = RAdd(mult19AD,mult19AE);
          real sum19B0#1 = RAdd(mult19AC,sum19AF);
          real sum19B1#1 = RAdd(mult19AB,sum19B0);
          real sum19B2#1 = RAdd(mult19AA,sum19B1);
          real sum19B3#1 = RAdd(mult171E,sum19B2);
          real mult19B6#1 = RMul(coeff172A,prod19A4);
          real sum19B7#1 = RAdd(mult19B6,mult19AE);
          real mult19B9#1 = RMul(coeff172A,prod19A7);
          real sum19BA#1 = RAdd(mult19B9,mult19AB);
          real mult19BD#1 = RMul(coeff1715,prod19A7);
          real mult19BE#2 = RMul(coeff1731,prod19A2);
          real sum19BF#1 = RAdd(mult19BD,mult19BE);
          real mult19C1#1 = RMul(coeff1715,prod19A4);
          real mult19C2#1 = RMul(coeff1731,prod199F);
          real sum19C3#1 = RAdd(mult19BE,mult19C2);
          real sum19C4#1 = RAdd(mult19C1,sum19C3);
          tensor[6] intermediateCons19C6#1 = <tensor[6]>[sum19B3,sum19B7,sum19BA,mult19AD,sum19BF,sum19C4];
          real compositionl19F6#1 = VDot<6>(dofs16F2,intermediateCons19C6);
          real op1_e3_l_1119F9#1 = RSub(compositionl19F6,_t1439);
          real op1_e3_l_1219FC#1 = RMul(gradEps198C,_t1777);
          real f119FF#4 = RSub(op1_e3_l_1119F9,op1_e3_l_1219FC);
          string _t1A02#1 = "vals:";
          tensor[2] _t1A04#2 = <tensor[2]>[f0176E,f119FF];
          string _t1A06#6 = "\n";
          Print<[string,tensor[2],string]>(_t1A02,_t1A04,_t1A06);
          bool _t1A0B#2 = GT<real>(f0176E,basisEval1792);
          if _t1A0B then goto JOIN1A10 else goto ASSIGN1C17
        JOIN1A10:  preds = [COND1A0D,JOIN1AAC]
          int _t1A0E#1 = phi(_t141C,_t1A0F)
          bool _t1A11#2 = GT<real>(f119FF,basisEval1792);
          if _t1A11 then goto JOIN1A16 else goto ASSIGN1C19
        JOIN1A16:  preds = [COND1A13,JOIN1AA4]
          int _t1A14#1 = phi(_t141C,_t1A15)
          int _t1A17#1 = IMul(_t1A0E,_t1A14);
          int _t1A19#4 = 0;
          bool _t1A1B#1 = GT<int>(_t1A17,_t1A19);
          bool _t1A1D#1 = BNot(_t1A1B);
          if _t1A1D then goto COND1A20 else goto ASSIGN1A8A
        COND1A20:  preds = [COND1A1F]
          if _t1A0B then goto JOIN1A23 else goto ASSIGN1C1B
        JOIN1A23:  preds = [COND1A20,JOIN1A86]
          int _t1A21#1 = phi(_t141C,_t1A22)
          if _t1A11 then goto JOIN1A27 else goto ASSIGN1C1C
        JOIN1A27:  preds = [COND1A24,JOIN1A80]
          int _t1A25#1 = phi(_t141C,_t1A26)
          int _t1A28#1 = IMul(_t1A21,_t1A25);
          bool _t1A2A#1 = EQ<int>(_t1A28,_t1A19);
          if _t1A2A then goto ASSIGN1A2E else goto JOIN1A30
        ASSIGN1A2E:  preds = [COND1A2C]
          string _t1A2D#1 = "Warn: 0 update\n";
          Print<[string]>(_t1A2D);
          goto JOIN1A30
        JOIN1A30:  preds = [MASSIGN1A2F,COND1A2C]
          string _t1A31#1 = "update with interval:";
          Print<[string,real,string]>(_t1A31,gradEps198C,_t1A06);
          string _t1A34#1 = "Vals I:";
          Print<[string,tensor[2],string]>(_t1A34,_t1A04,_t1A06);
          string _t1A37#1 = "New interval:";
          real _t1A39#2 = RAdd(s1410,gradEps198C);
          tensor[2] _t1A3C#2 = <tensor[2]>[s1410,_t1A39];
          Print<[string,tensor[2],string]>(_t1A37,_t1A3C,_t1A06);
          tensor[2][] intervals1A3F#1 = Append<tensor[2]>(intervals1418,_t1A3C);
          femData:MeshCell[] newCells1A41#1 = Append<femData:MeshCell>(newCells141A,cc1414);
          goto JOIN1A47
        JOIN1A47:  preds = [ASSIGN1A42,ASSIGN1A9D]
          femData:MeshCell[] newCells1A43#2 = phi(newCells1A41,newCells141A)
          tensor[2][] intervals1A44#2 = phi(intervals1A3F,intervals1418)
          real s1A45#3 = phi(_t1A39,s1A46)
          bool _t1A48#1 = GTE<real>(s1A45,e1412);
          if _t1A48 then goto ASSIGN1A4C else goto JOIN1A66
        ASSIGN1A4C:  preds = [COND1A4A]
          int itter1A4B#4 = IAdd(itter140C,_t141C);
          bool _t1A4D#1 = GTE<int>(itter1A4B,len140A);
          if _t1A4D then goto SAVE1A50 else goto ASSIGN1A71
        SAVE1A50:  preds = [COND1A4F]
          self.itter = itter1A4B;
          self.s = s1A45;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          stabilize
          goto JOIN1A5F
        JOIN1A5F:  preds = [*STABILIZE1A54,ASSIGN1A7A]
          femData:FuncCell fc1A55#1 = phi(_t1A56)
          femData:MeshCell cc1A57#1 = phi(cc1A58)
          real e1A59#1 = phi(e1A5A)
          real s1A5B#1 = phi(s1A5C)
          tensor[2] interval1A5D#1 = phi(interval1A5E)
          goto JOIN1A66
        JOIN1A66:  preds = [JOIN1A5F,COND1A4A]
          femData:FuncCell fc1A60#1 = phi(fc1A55,fc1416)
          femData:MeshCell cc1A61#1 = phi(cc1A57,cc1414)
          real e1A62#1 = phi(e1A59,e1412)
          real s1A63#1 = phi(s1A5B,s1A45)
          tensor[2] interval1A64#1 = phi(interval1A5D,interval140E)
          int itter1A65#1 = phi(itter1A4B,itter140C)
          self.itter = itter1A65;
          self.interval = interval1A64;
          self.s = s1A63;
          self.e = e1A62;
          self.cc = cc1A61;
          self.fc = fc1A60;
          self.intervals = intervals1A44;
          self.newCells = newCells1A43;
          active
        ASSIGN1A71:  preds = [COND1A4F]
          int _t1A70#2 = IAdd(offset1408,itter1A4B);
          tensor[2] interval1A5E#3 = Subscript<tensor[2][]>(times1400,_t1A70);
          int _t1A73#1 = Subscript<int[]>(cells1402,_t1A70);
          femData:MeshCell cc1A58#2 = Subscript<femData:MeshCell[]>(0cell_a13FC,_t1A73);
          real s1A5C#1 = VIndex<2,0>(interval1A5E);
          real e1A5A#1 = VIndex<2,1>(interval1A5E);
          int _t1A78#1 = ExtractFemItem<int,CellIndex(MeshCell)>(cc1A58);
          femData:FuncCell _t1A56#1 = LoadFem<femData:FuncCell>(c13FE,_t1A78);
          goto JOIN1A5F
        ASSIGN1C1C:  preds = [COND1A24]
          bool _t1A7B#1 = LT<real>(f119FF,basisEval1792);
          if _t1A7B then goto ASSIGN1A7F else goto JOIN1A80
        ASSIGN1A7F:  preds = [COND1A7D]
          int _t1A7E#1 = -1;
          goto JOIN1A80
        JOIN1A80:  preds = [ASSIGN1A7F,COND1A7D]
          int _t1A26#1 = phi(_t1A7E,_t1A19)
          goto JOIN1A27
        ASSIGN1C1B:  preds = [COND1A20]
          bool _t1A81#1 = LT<real>(f0176E,basisEval1792);
          if _t1A81 then goto ASSIGN1A85 else goto JOIN1A86
        ASSIGN1A85:  preds = [COND1A83]
          int _t1A84#1 = -1;
          goto JOIN1A86
        JOIN1A86:  preds = [ASSIGN1A85,COND1A83]
          int _t1A22#1 = phi(_t1A84,_t1A19)
          goto JOIN1A23
        ASSIGN1A8A:  preds = [COND1A1F]
          real _t1A89#1 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(_t1435,_t1779);
          real op1_e3_l_121A8B#1 = Abs<real>(f0176E);
          real op1_e3_l_131A8E#1 = RMul(coeff1710,_t1A89);
          real _t1A91#1 = RDiv(op1_e3_l_121A8B,op1_e3_l_131A8E);
          real epsUpdate1A94#2 = Max<real>(gradEps198C,_t1A91);
          string _t1A96#1 = "update L:";
          Print<[string,real,string]>(_t1A96,epsUpdate1A94,_t1A06);
          string _t1A99#1 = "update G:";
          Print<[string,real,string]>(_t1A99,gradEps198C,_t1A06);
          real s1A46#1 = RAdd(s1410,epsUpdate1A94);
          goto JOIN1A47
        ASSIGN1C19:  preds = [COND1A13]
          bool _t1A9E#1 = LT<real>(f119FF,basisEval1792);
          if _t1A9E then goto ASSIGN1AA2 else goto ASSIGN1AA5
        ASSIGN1AA2:  preds = [COND1AA0]
          int _t1AA1#1 = -1;
          goto JOIN1AA4
        JOIN1AA4:  preds = [ASSIGN1AA2,ASSIGN1AA5]
          int _t1A15#1 = phi(_t1AA1,_t1AA3)
          goto JOIN1A16
        ASSIGN1AA5:  preds = [COND1AA0]
          int _t1AA3#1 = 0;
          goto JOIN1AA4
        ASSIGN1C17:  preds = [COND1A0D]
          bool _t1AA6#1 = LT<real>(f0176E,basisEval1792);
          if _t1AA6 then goto ASSIGN1AAA else goto ASSIGN1AAD
        ASSIGN1AAA:  preds = [COND1AA8]
          int _t1AA9#1 = -1;
          goto JOIN1AAC
        JOIN1AAC:  preds = [ASSIGN1AAA,ASSIGN1AAD]
          int _t1A0F#1 = phi(_t1AA9,_t1AAB)
          goto JOIN1A10
        ASSIGN1AAD:  preds = [COND1AA8]
          int _t1AAB#1 = 0;
          goto JOIN1AAC
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY1AAE:  preds = []
      int iresU1AAF#1 = globals.iresU11AD;
      int iresV1AB1#1 = globals.iresV11AE;
      int _t1AB3#2 = 0;
      int _t1AB5#2 = 1;
      int _t1AB7#1 = ISub(iresU1AAF,_t1AB5);
      int[] _t1AB9#1 = Range(_t1AB3,_t1AB7);
    FOREACH1ABC:  preds = [ASSIGN1ABA,NEXT1AC5]
      foreach (vi1ABB in _t1AB9) on exit goto RETURN1AC6
      int _t1ABD#1 = ISub(iresV1AB1,_t1AB5);
      int[] _t1ABF#1 = Range(_t1AB3,_t1ABD);
    FOREACH1AC2:  preds = [ASSIGN1AC0,NEXT1AC4]
      foreach (ui1AC1 in _t1ABF) on exit goto NEXT1AC5
      new ray(ui1AC1,vi1ABB);
      goto FOREACH1AC2
    NEXT1AC5:  preds = [FOREACH1AC2]
      goto FOREACH1ABC
    RETURN1AC6:  preds = [FOREACH1ABC]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b0412_intermedateGlobal;
input femData(FemFunc) 0c0414_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
input int[] indecies;
input tensor[2][] times;
input int[] cells;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(-0.5e0,0.5e0,0.5e0));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-8;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global femData(FemFunc) c;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] rayVec;
//***** FUNCTIONS *****
  function femData(MeshPos) _0994_msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_50;
    l__t_50 = <femData(MeshCell)[]>{};
    for i__t_51 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_50 = Append<femData(MeshCell),femData(MeshCell)>(l__t_50,LoadFem<femData(MeshCell)>(globals.a,i__t_51));
    }
    globals.0cell_a = l__t_50;
    globals.c = LoadFem<femData(FemFunc)>(globals.0c0414_intermedateGlobal,LoadFem<femData(Space)>(globals.0b0412_intermedateGlobal,globals.a));
    vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_53 = Sqrt(VDot<3,4>(v_52,v_52));
    real l_op1_e3_l_9_54 = RDiv(0.1e1,l_op1_e3_l_7_53);
    real l_r_55 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_56 = RMul(0.e0,l_r_55);
    real l_r_57 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_58 = RMul(0.e0,l_r_57);
    real l_r_59 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = RAdd(l_r_56,l_r_58);
    real l_r_62 = RAdd(l_r_61,l_r_60);
    vec3{4} v_63 = VEC3{4}(VDot<3,4>(v_52,VEC3{4}(l_r_62,RAdd(l_r_61,RMul(0.1e1,l_r_59)),RAdd(RAdd(l_r_56,RMul(-0.1e1,l_r_57)),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(l_r_61,RMul(-0.1e1,l_r_59)),l_r_62,RAdd(RAdd(RMul(0.1e1,l_r_55),l_r_58),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(RAdd(l_r_56,RMul(0.1e1,l_r_57)),l_r_60),RAdd(RAdd(RMul(-0.1e1,l_r_55),l_r_58),l_r_60),l_r_62)));
    real l_op1_e3_l_38_64 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_54,l_op1_e3_l_9_54),VDot<3,4>(v_63,v_63))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_64,VScale<3,4>(l_op1_e3_l_9_54,v_63)));
    real l_r_66 = VIndex<3,4,0>(v_52);
    real l_r_67 = RMul(0.e0,l_r_66);
    real l_r_68 = VIndex<3,4,1>(v_52);
    real l_r_69 = RMul(0.e0,l_r_68);
    real l_r_70 = VIndex<3,4,2>(v_52);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = RAdd(l_r_67,l_r_69);
    real l_r_73 = RAdd(l_r_72,l_r_71);
    vec3{4} v_74 = VScale<3,4>(l_op1_e3_l_9_54,VEC3{4}(VDot<3,4>(v_63,VEC3{4}(l_r_73,RAdd(l_r_72,RMul(0.1e1,l_r_70)),RAdd(RAdd(l_r_67,RMul(-0.1e1,l_r_68)),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(l_r_72,RMul(-0.1e1,l_r_70)),l_r_73,RAdd(RAdd(RMul(0.1e1,l_r_66),l_r_69),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(RAdd(l_r_67,RMul(0.1e1,l_r_68)),l_r_71),RAdd(RAdd(RMul(-0.1e1,l_r_66),l_r_69),l_r_71),l_r_73))));
    real l_r_75 = RMul(l_op1_e3_l_38_64,l_op1_e3_l_9_54);
    globals.camV = PACK(VEC3{4}(RMul(l_r_75,VIndex<3,4,0>(v_74)),RMul(l_r_75,VIndex<3,4,1>(v_74)),RMul(l_r_75,VIndex<3,4,2>(v_74))));
    real l_op1_e3_l_10_77 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_77,l_op1_e3_l_7_53);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_77),l_op1_e3_l_7_53),IntToReal(globals.iresV));
    globals.rayVec = PACK(VScale<3,4>(l_op1_e3_l_9_54,v_52));
  }
//***** STRAND *****
strand ray (int p_ui_79,int p_vi_80) {
  real rayU;
  real rayV;
  tensor[3] UV;
  tensor[3] rayOrig;
  int offset;
  int len;
  varying int itter;
  int idx;
  varying tensor[2] interval;
  varying real s;
  varying real e;
  varying femData(MeshCell) cc;
  varying femData(FuncCell) fc;
  varying output tensor[2][] intervals;
  varying output femData(MeshCell)[] newCells;
  initialize (globals) {
    real l_op1_e3_l_9_81 = RNeg(globals.camUmax);
    real l_rayU_82 = RAdd(l_op1_e3_l_9_81,RMul(RDiv(RSub(IntToReal(p_ui_79),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_81)));
    real l_op1_e3_l_9_83 = RNeg(globals.camVmax);
    real l_rayV_84 = RAdd(l_op1_e3_l_9_83,RMul(RDiv(RSub(IntToReal(p_vi_80),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_83)));
    vec3{4} v_85 = VScale<3,4>(l_rayU_82,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_86 = VScale<3,4>(l_rayV_84,LOAD_0(TensorRef<[3]>(globals.camV)));
    int l__t_87 = IMul(p_ui_79,globals.iresV);
    int l_offset_88 = Subscript<int[]>(globals.indecies,IAdd(l__t_87,p_vi_80));
    &tensor[2] l_interval_89 = Subscript<tensor[2][]>(globals.times,l_offset_88);
    femData(MeshCell) l_cc_90 = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    tensor[2][0] t_92 = <tensor[2][0]>{};
    tensor[2][] l__t_91 = MkDynamic<tensor[2],0>(t_92);
    femData(MeshCell)[0] t_94 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_93 = MkDynamic<femData(MeshCell),0>(t_94);
    self.rayU = l_rayU_82;
    self.rayV = l_rayV_84;
    self.UV = PACK(VAdd<3,4>(v_85,v_86));
    self.rayOrig = PACK(VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_85),v_86));
    self.offset = l_offset_88;
    self.len = Subscript<int[]>(globals.indecies,IAdd(IAdd(IMul(globals.iresU,globals.iresV),l__t_87),p_vi_80));
    self.itter = 0;
    self.idx = l_offset_88;
    self.interval = TensorCopy<[2]>(l_interval_89);
    self.s = VIndex<2,2,0>(LOAD_0(l_interval_89));
    self.e = VIndex<2,2,1>(LOAD_0(l_interval_89));
    self.cc = l_cc_90;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_90));
    self.intervals = l__t_91;
    self.newCells = l__t_93;
  }
  start (globals) {
    if (EQ<int>(self.len,0)) {
      stabilize;
    }
    femData(MeshCell) l_cc_97 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,self.idx));
    self.cc = l_cc_97;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_97));
    active;
  }
  update (world, globals) {
    int l_itter_227;
    vec2 v_226;
    real l_s_225;
    real l_e_224;
    femData(MeshCell) l_cc_223;
    femData(FuncCell) l_fc_222;
    real l__t_210;
    tensor[2][] l_intervals_209;
    femData(MeshCell)[] l_newCells_208;
    int l__t_197;
    int l__t_194;
    if (LT<int>(self.len,1)) {
      stabilize;
    }
    vec3{4} v_98 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.s,LOAD_0(TensorRef<[3]>(globals.rayVec))));
    vec2 v_99 = VEC2(VIndex<3,4,0>(v_98),VIndex<3,4,1>(v_98));
    femData(FemFunc) l__t_100 = ExtractFem<femData(FemFunc),femData(FuncCell)>(self.fc);
    femData(Space) l__t_101 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_100);
    femData(Mesh) l__t_102 = ExtractFem<femData(Mesh),femData(MeshCell)>(self.cc);
    int l__t_103 = ExtractFemItem<int,CellIndex(MeshCell)>(self.cc);
    real l__t_104 = VIndex<3,4,2>(v_98);
    tensor[2] _arg_105 = PACK(v_99);
    femData(MeshPos) l_callNewtonPos_106 = _0994_msh_newtonInverse$1C53(_arg_105,l__t_103,l__t_102);
    &tensor[2] l_refPos_107 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_106);
    int l_mulRes_108 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(self.fc),6);
    int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,l_mulRes_108);
    int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,1));
    int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,2));
    int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,3));
    int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,4));
    int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,5));
    real t_115 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_114));
    real t_116 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_113));
    real t_117 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_112));
    real t_118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_111));
    real t_119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_110));
    real t_120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_109));
    vec4 v_121 = VEC4(t_120,t_119,t_118,t_117);
    vec2 v_122 = VEC2(t_116,t_115);
    real l_varAcc_123 = VIndex<2,2,0>(LOAD_0(l_refPos_107));
    real l_varAcc_124 = VIndex<2,2,1>(LOAD_0(l_refPos_107));
    real l_prod_125 = RMul(RMul(l_varAcc_123,l_varAcc_123),0.1e1);
    real l_prod_126 = RMul(l_varAcc_123,l_varAcc_124);
    real l_prod_127 = RMul(l_varAcc_123,0.1e1);
    real l_prod_128 = RMul(0.1e1,l_varAcc_124);
    real l_prod_129 = RMul(0.1e1,0.1e1);
    real l_mult_130 = RMul(0.1e1,l_prod_129);
    real l_mult_131 = RMul(0.2e1,RMul(0.1e1,RMul(l_varAcc_124,l_varAcc_124)));
    real l_mult_132 = RMul(0.4e1,l_prod_126);
    real l_mult_133 = RMul(0.2e1,l_prod_125);
    real l_mult_134 = RMul(0.4e1,l_prod_128);
    real l_mult_135 = RMul(-0.4e1,l_prod_126);
    real l_mult_136 = RMul(0.4e1,l_prod_127);
    real l_f0_137 = RSub(RAdd(VDot<2,2>(v_122,VEC2(RAdd(l_mult_134,l_mult_135),RAdd(l_mult_136,RAdd(l_mult_135,RMul(-0.4e1,l_prod_125))))),VDot<4,4>(v_121,VEC4(RAdd(l_mult_130,RAdd(RMul(-0.3e1,l_prod_128),RAdd(l_mult_131,RAdd(RMul(-0.3e1,l_prod_127),RAdd(l_mult_132,l_mult_133))))),RAdd(RMul(-0.1e1,l_prod_127),l_mult_133),RAdd(RMul(-0.1e1,l_prod_128),l_mult_131),l_mult_132))),l__t_104);
    vec2 v_138 = VEC2(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(globals.rayVec))),VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(globals.rayVec))));
    real l__t_139 = VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(globals.rayVec)));
    int l__t_140 = ExtractFemItem<int,CellIndex(Mesh)>(self.cc);
    real l_sum_141 = RAdd(RMul(-0.3e1,l_prod_129),RAdd(l_mult_134,l_mult_136));
    real l_mult_142 = RMul(-0.1e1,l_prod_129);
    real l_basisEval_143 = RMul(-0.4e1,l_prod_128);
    real l_mult_144 = RMul(0.4e1,l_prod_129);
    real l_mult_145 = RMul(-0.4e1,l_prod_127);
    real l_vdot_146 = RAdd(VDot<2,2>(v_122,VEC2(l_basisEval_143,RAdd(l_mult_144,RAdd(l_basisEval_143,RMul(-0.8e1,l_prod_127))))),VDot<4,4>(v_121,VEC4(l_sum_141,RAdd(l_mult_142,l_mult_136),0.e0,l_mult_134)));
    real l_vdot_147 = RAdd(VDot<2,2>(v_122,VEC2(RAdd(l_mult_144,l_mult_145),l_mult_145)),VDot<4,4>(v_121,VEC4(l_sum_141,0.e0,RAdd(l_mult_142,l_mult_134),l_mult_136)));
    int l_mulRes_148 = IMul(l__t_103,3);
    int t_149 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,l_mulRes_148);
    int l_mulRes_150 = IMul(2,t_149);
    int t_151 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,IAdd(l_mulRes_148,1));
    int l_mulRes_152 = IMul(2,t_151);
    real l_dof_load_153 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_152);
    real l_dof_load_154 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_152));
    int t_155 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,IAdd(l_mulRes_148,2));
    int l_mulRes_156 = IMul(2,t_155);
    real l_dof_load_157 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_156);
    real l_dof_load_158 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_156));
    real t_159 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_150);
    real l_r_160 = RMul(t_159,l_mult_142);
    real l_r_161 = RAdd(RAdd(l_r_160,RMul(l_dof_load_153,l_mult_130)),RMul(l_dof_load_157,0.e0));
    real l_r_162 = RAdd(RAdd(l_r_160,RMul(l_dof_load_153,0.e0)),RMul(l_dof_load_157,l_mult_130));
    real t_163 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_150));
    real l_r_164 = RMul(t_163,l_mult_142);
    real l_r_165 = RAdd(RAdd(l_r_164,RMul(l_dof_load_154,l_mult_130)),RMul(l_dof_load_158,0.e0));
    real l_r_166 = RAdd(RAdd(l_r_164,RMul(l_dof_load_154,0.e0)),RMul(l_dof_load_158,l_mult_130));
    real l_r_167 = RAdd(RMul(0.e0,l_r_161),RMul(-0.1e1,l_r_165));
    real l_r_168 = RMul(0.e0,l_r_162);
    real l_r_169 = RAdd(l_r_168,RMul(-0.1e1,l_r_166));
    real l_r_170 = RAdd(RMul(0.1e1,l_r_161),RMul(0.e0,l_r_165));
    real l_r_171 = RMul(0.e0,l_r_166);
    real l_r_172 = RAdd(RMul(0.1e1,l_r_162),l_r_171);
    real l_op1_e3_l_17_173 = VDot<2,2>(VEC2(l_r_161,l_r_165),VEC2(RAdd(l_r_168,RMul(0.1e1,l_r_166)),RAdd(RMul(-0.1e1,l_r_162),l_r_171)));
    real t_174 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(l__t_102,l__t_140);
    real l_gradEps_175 = Min<real>(RDiv(Abs<real>(RSub(VDot<2,2>(v_138,VEC2(RAdd(RMul(l_vdot_146,RDiv(RAdd(RMul(0.e0,l_r_167),RMul(-0.1e1,l_r_169)),l_op1_e3_l_17_173)),RMul(l_vdot_147,RDiv(RAdd(RMul(0.1e1,l_r_167),RMul(0.e0,l_r_169)),l_op1_e3_l_17_173))),RAdd(RMul(l_vdot_146,RDiv(RAdd(RMul(0.e0,l_r_170),RMul(-0.1e1,l_r_172)),l_op1_e3_l_17_173)),RMul(l_vdot_147,RDiv(RAdd(RMul(0.1e1,l_r_170),RMul(0.e0,l_r_172)),l_op1_e3_l_17_173))))),l__t_139)),t_174),RSub(self.e,self.s));
    tensor[2] _arg_176 = PACK(VAdd<2,2>(v_99,VScale<2,2>(l_gradEps_175,v_138)));
    femData(MeshPos) l_callNewtonPos_177 = _0994_msh_newtonInverse$1C53(_arg_176,l__t_103,l__t_102);
    &tensor[2] l_refPos_178 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_177);
    real l_varAcc_179 = VIndex<2,2,0>(LOAD_0(l_refPos_178));
    real l_varAcc_180 = VIndex<2,2,1>(LOAD_0(l_refPos_178));
    real l_prod_181 = RMul(RMul(l_varAcc_179,l_varAcc_179),0.1e1);
    real l_prod_182 = RMul(l_varAcc_179,l_varAcc_180);
    real l_prod_183 = RMul(l_varAcc_179,0.1e1);
    real l_prod_184 = RMul(0.1e1,l_varAcc_180);
    real l_mult_185 = RMul(0.2e1,RMul(0.1e1,RMul(l_varAcc_180,l_varAcc_180)));
    real l_mult_186 = RMul(0.4e1,l_prod_182);
    real l_mult_187 = RMul(0.2e1,l_prod_181);
    real l_mult_188 = RMul(-0.4e1,l_prod_182);
    real l_f1_189 = RSub(RSub(RAdd(VDot<2,2>(v_122,VEC2(RAdd(RMul(0.4e1,l_prod_184),l_mult_188),RAdd(RMul(0.4e1,l_prod_183),RAdd(l_mult_188,RMul(-0.4e1,l_prod_181))))),VDot<4,4>(v_121,VEC4(RAdd(l_mult_130,RAdd(RMul(-0.3e1,l_prod_184),RAdd(l_mult_185,RAdd(RMul(-0.3e1,l_prod_183),RAdd(l_mult_186,l_mult_187))))),RAdd(RMul(-0.1e1,l_prod_183),l_mult_187),RAdd(RMul(-0.1e1,l_prod_184),l_mult_185),l_mult_186))),l__t_104),RMul(l_gradEps_175,l__t_139));
    vec2 v_190 = VEC2(l_f0_137,l_f1_189);
    tensor[2] _arg_191 = PACK(v_190);
    print("vals:",TensorRef<[2]>(_arg_191),"\n");
    bool l__t_192 = GT<real>(l_f0_137,0.e0);
    vec2 v_193 = v_190;
    if (l__t_192) {
      l__t_194 = 1;
    } else {
      int l__t_195;
      if (LT<real>(l_f0_137,0.e0)) {
        l__t_195 = -1;
      } else {
        l__t_195 = 0;
      }
      l__t_194 = l__t_195;
    }
    bool l__t_196 = GT<real>(l_f1_189,0.e0);
    if (l__t_196) {
      l__t_197 = 1;
    } else {
      int l__t_198;
      if (LT<real>(l_f1_189,0.e0)) {
        l__t_198 = -1;
      } else {
        l__t_198 = 0;
      }
      l__t_197 = l__t_198;
    }
    if (BNot(GT<int>(IMul(l__t_194,l__t_197),0))) {
      int l__t_201;
      int l__t_199;
      if (l__t_192) {
        l__t_199 = 1;
      } else {
        int l__t_200;
        if (LT<real>(l_f0_137,0.e0)) {
          l__t_200 = -1;
        } else {
          l__t_200 = 0;
        }
        l__t_199 = l__t_200;
      }
      if (l__t_196) {
        l__t_201 = 1;
      } else {
        int l__t_202;
        if (LT<real>(l_f1_189,0.e0)) {
          l__t_202 = -1;
        } else {
          l__t_202 = 0;
        }
        l__t_201 = l__t_202;
      }
      if (EQ<int>(IMul(l__t_199,l__t_201),0)) {
        print("Warn: 0 update\n");
      }
      print("update with interval:",l_gradEps_175,"\n");
      tensor[2] _arg_203 = PACK(v_193);
      print("Vals I:",TensorRef<[2]>(_arg_203),"\n");
      real l__t_204 = RAdd(self.s,l_gradEps_175);
      vec2 v_205 = VEC2(self.s,l__t_204);
      tensor[2] _arg_206 = PACK(v_205);
      print("New interval:",TensorRef<[2]>(_arg_206),"\n");
      tensor[2] _arg_207 = PACK(v_205);
      l_newCells_208 = Append<femData(MeshCell),femData(MeshCell)>(self.newCells,self.cc);
      l_intervals_209 = Append<tensor[2],tensor[2]>(self.intervals,_arg_207);
      l__t_210 = l__t_204;
    } else {
      real t_211 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(l__t_102,l__t_140);
      real l_epsUpdate_212 = Max<real>(l_gradEps_175,RDiv(Abs<real>(l_f0_137),RMul(0.2e1,t_211)));
      print("update L:",l_epsUpdate_212,"\n");
      print("update G:",l_gradEps_175,"\n");
      l_newCells_208 = self.newCells;
      l_intervals_209 = self.intervals;
      l__t_210 = RAdd(self.s,l_epsUpdate_212);
    }
    if (GTE<real>(l__t_210,self.e)) {
      vec2 v_221;
      real l_s_220;
      real l_e_219;
      femData(MeshCell) l_cc_218;
      femData(FuncCell) l__t_217;
      int l_itter_213 = IAdd(self.itter,1);
      if (GTE<int>(l_itter_213,self.len)) {
        self.itter = l_itter_213;
        self.s = l__t_210;
        self.intervals = l_intervals_209;
        self.newCells = l_newCells_208;
        stabilize;
      } else {
        int l__t_214 = IAdd(self.offset,l_itter_213);
        &tensor[2] l_interval_215 = Subscript<tensor[2][]>(globals.times,l__t_214);
        femData(MeshCell) l_cc_216 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,l__t_214));
        l__t_217 = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_216));
        l_cc_218 = l_cc_216;
        l_e_219 = VIndex<2,2,1>(LOAD_0(l_interval_215));
        l_s_220 = VIndex<2,2,0>(LOAD_0(l_interval_215));
        v_221 = LOAD_0(l_interval_215);
      }
      l_fc_222 = l__t_217;
      l_cc_223 = l_cc_218;
      l_e_224 = l_e_219;
      l_s_225 = l_s_220;
      v_226 = v_221;
      l_itter_227 = l_itter_213;
    } else {
      l_fc_222 = self.fc;
      l_cc_223 = self.cc;
      l_e_224 = self.e;
      l_s_225 = l__t_210;
      v_226 = LOAD_0(TensorRef<[2]>(self.interval));
      l_itter_227 = self.itter;
    }
    self.itter = l_itter_227;
    self.interval = PACK(v_226);
    self.s = l_s_225;
    self.e = l_e_224;
    self.cc = l_cc_223;
    self.fc = l_fc_222;
    self.intervals = l_intervals_209;
    self.newCells = l_newCells_208;
    active;
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_229 = 0 to ISub(globals.iresU,1) {
      for i_ui_230 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_230,i_vi_229);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b0412_intermedateGlobal;
input femData(FemFunc) 0c0414_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
input int[] indecies;
input tensor[2][] times;
input int[] cells;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[-0.5e0,0.5e0,0.5e0];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-8;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global femData(FemFunc) c;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] rayVec;
//***** FUNCTIONS *****
  function femData(MeshPos) _0994_msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_50;
    l__t_50 = <femData(MeshCell)[]>{};
    for i__t_51 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_50 = Append<femData(MeshCell),femData(MeshCell)>(l__t_50,LoadFem<femData(MeshCell)>(globals.a,i__t_51));
    }
    globals.0cell_a = l__t_50;
    globals.c = LoadFem<femData(FemFunc)>(globals.0c0414_intermedateGlobal,LoadFem<femData(Space)>(globals.0b0412_intermedateGlobal,globals.a));
    vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_7_53 = Sqrt(VDot<3,4>(v_52,v_52));
    real l_op1_e3_l_9_54 = RDiv(0.1e1,l_op1_e3_l_7_53);
    real l_r_55 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_56 = RMul(0.e0,l_r_55);
    real l_r_57 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_58 = RMul(0.e0,l_r_57);
    real l_r_59 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = RAdd(l_r_56,l_r_58);
    real l_r_62 = RAdd(l_r_61,l_r_60);
    vec3{4} v_63 = VEC3{4}(VDot<3,4>(v_52,VEC3{4}(l_r_62,RAdd(l_r_61,RMul(0.1e1,l_r_59)),RAdd(RAdd(l_r_56,RMul(-0.1e1,l_r_57)),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(l_r_61,RMul(-0.1e1,l_r_59)),l_r_62,RAdd(RAdd(RMul(0.1e1,l_r_55),l_r_58),l_r_60))),VDot<3,4>(v_52,VEC3{4}(RAdd(RAdd(l_r_56,RMul(0.1e1,l_r_57)),l_r_60),RAdd(RAdd(RMul(-0.1e1,l_r_55),l_r_58),l_r_60),l_r_62)));
    real l_op1_e3_l_38_64 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_54,l_op1_e3_l_9_54),VDot<3,4>(v_63,v_63))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_64,VScale<3,4>(l_op1_e3_l_9_54,v_63)));
    real l_r_66 = VIndex<3,4,0>(v_52);
    real l_r_67 = RMul(0.e0,l_r_66);
    real l_r_68 = VIndex<3,4,1>(v_52);
    real l_r_69 = RMul(0.e0,l_r_68);
    real l_r_70 = VIndex<3,4,2>(v_52);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = RAdd(l_r_67,l_r_69);
    real l_r_73 = RAdd(l_r_72,l_r_71);
    vec3{4} v_74 = VScale<3,4>(l_op1_e3_l_9_54,VEC3{4}(VDot<3,4>(v_63,VEC3{4}(l_r_73,RAdd(l_r_72,RMul(0.1e1,l_r_70)),RAdd(RAdd(l_r_67,RMul(-0.1e1,l_r_68)),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(l_r_72,RMul(-0.1e1,l_r_70)),l_r_73,RAdd(RAdd(RMul(0.1e1,l_r_66),l_r_69),l_r_71))),VDot<3,4>(v_63,VEC3{4}(RAdd(RAdd(l_r_67,RMul(0.1e1,l_r_68)),l_r_71),RAdd(RAdd(RMul(-0.1e1,l_r_66),l_r_69),l_r_71),l_r_73))));
    real l_r_75 = RMul(l_op1_e3_l_38_64,l_op1_e3_l_9_54);
    globals.camV = <tensor[3]>[RMul(l_r_75,VIndex<3,4,0>(v_74)),RMul(l_r_75,VIndex<3,4,1>(v_74)),RMul(l_r_75,VIndex<3,4,2>(v_74))];
    real l_op1_e3_l_10_77 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_77,l_op1_e3_l_7_53);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_77),l_op1_e3_l_7_53),IntToReal(globals.iresV));
    globals.rayVec = PACK(VScale<3,4>(l_op1_e3_l_9_54,v_52));
  }
//***** STRAND *****
strand ray (int p_ui_79,int p_vi_80) {
  real rayU;
  real rayV;
  tensor[3] UV;
  tensor[3] rayOrig;
  int offset;
  int len;
  varying int itter;
  int idx;
  varying tensor[2] interval;
  varying real s;
  varying real e;
  varying femData(MeshCell) cc;
  varying femData(FuncCell) fc;
  varying output tensor[2][] intervals;
  varying output femData(MeshCell)[] newCells;
  initialize (globals) {
    real l_op1_e3_l_9_81 = RNeg(globals.camUmax);
    real l_rayU_82 = RAdd(l_op1_e3_l_9_81,RMul(RDiv(RSub(IntToReal(p_ui_79),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_81)));
    real l_op1_e3_l_9_83 = RNeg(globals.camVmax);
    real l_rayV_84 = RAdd(l_op1_e3_l_9_83,RMul(RDiv(RSub(IntToReal(p_vi_80),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_83)));
    vec3{4} v_85 = VScale<3,4>(l_rayU_82,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_86 = VScale<3,4>(l_rayV_84,LOAD_0(TensorRef<[3]>(globals.camV)));
    int l__t_87 = IMul(p_ui_79,globals.iresV);
    int l_offset_88 = Subscript<int[]>(globals.indecies,IAdd(l__t_87,p_vi_80));
    &tensor[2] l_interval_89 = Subscript<tensor[2][]>(globals.times,l_offset_88);
    femData(MeshCell) l_cc_90 = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    tensor[2][0] t_92 = <tensor[2][0]>{};
    tensor[2][] l__t_91 = MkDynamic<tensor[2],0>(t_92);
    femData(MeshCell)[0] t_94 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_93 = MkDynamic<femData(MeshCell),0>(t_94);
    self.rayU = l_rayU_82;
    self.rayV = l_rayV_84;
    self.UV = PACK(VAdd<3,4>(v_85,v_86));
    self.rayOrig = PACK(VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_85),v_86));
    self.offset = l_offset_88;
    self.len = Subscript<int[]>(globals.indecies,IAdd(IAdd(IMul(globals.iresU,globals.iresV),l__t_87),p_vi_80));
    self.itter = 0;
    self.idx = l_offset_88;
    self.interval = TensorCopy<[2]>(l_interval_89);
    self.s = TensorIndex<&tensor[2],[0]>(l_interval_89);
    self.e = TensorIndex<&tensor[2],[1]>(l_interval_89);
    self.cc = l_cc_90;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_90));
    self.intervals = l__t_91;
    self.newCells = l__t_93;
  }
  start (globals) {
    if (EQ<int>(self.len,0)) {
      stabilize;
    }
    femData(MeshCell) l_cc_97 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,self.idx));
    self.cc = l_cc_97;
    self.fc = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_97));
    active;
  }
  update (world, globals) {
    int l_itter_227;
    vec2 v_226;
    real l_s_225;
    real l_e_224;
    femData(MeshCell) l_cc_223;
    femData(FuncCell) l_fc_222;
    real l__t_210;
    tensor[2][] l_intervals_209;
    femData(MeshCell)[] l_newCells_208;
    int l__t_197;
    int l__t_194;
    if (LT<int>(self.len,1)) {
      stabilize;
    }
    vec3{4} v_98 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.s,LOAD_0(TensorRef<[3]>(globals.rayVec))));
    vec2 v_99 = VEC2(VIndex<3,4,0>(v_98),VIndex<3,4,1>(v_98));
    femData(FemFunc) l__t_100 = ExtractFem<femData(FemFunc),femData(FuncCell)>(self.fc);
    femData(Space) l__t_101 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_100);
    femData(Mesh) l__t_102 = ExtractFem<femData(Mesh),femData(MeshCell)>(self.cc);
    int l__t_103 = ExtractFemItem<int,CellIndex(MeshCell)>(self.cc);
    real l__t_104 = VIndex<3,4,2>(v_98);
    tensor[2] _arg_105 = PACK(v_99);
    femData(MeshPos) l_callNewtonPos_106 = _0994_msh_newtonInverse$1C53(_arg_105,l__t_103,l__t_102);
    &tensor[2] l_refPos_107 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_106);
    int l_mulRes_108 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(self.fc),6);
    int t_109 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,l_mulRes_108);
    int t_110 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,1));
    int t_111 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,2));
    int t_112 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,3));
    int t_113 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,4));
    int t_114 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_101,IAdd(l_mulRes_108,5));
    real t_115 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_114));
    real t_116 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_113));
    real t_117 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_112));
    real t_118 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_111));
    real t_119 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_110));
    real t_120 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_100,IMul(1,t_109));
    vec4 v_121 = VEC4(t_120,t_119,t_118,t_117);
    vec2 v_122 = VEC2(t_116,t_115);
    real l_varAcc_123 = TensorIndex<&tensor[2],[0]>(l_refPos_107);
    real l_varAcc_124 = TensorIndex<&tensor[2],[1]>(l_refPos_107);
    real l_prod_125 = RMul(RMul(l_varAcc_123,l_varAcc_123),0.1e1);
    real l_prod_126 = RMul(l_varAcc_123,l_varAcc_124);
    real l_prod_127 = RMul(l_varAcc_123,0.1e1);
    real l_prod_128 = RMul(0.1e1,l_varAcc_124);
    real l_prod_129 = RMul(0.1e1,0.1e1);
    real l_mult_130 = RMul(0.1e1,l_prod_129);
    real l_mult_131 = RMul(0.2e1,RMul(0.1e1,RMul(l_varAcc_124,l_varAcc_124)));
    real l_mult_132 = RMul(0.4e1,l_prod_126);
    real l_mult_133 = RMul(0.2e1,l_prod_125);
    real l_mult_134 = RMul(0.4e1,l_prod_128);
    real l_mult_135 = RMul(-0.4e1,l_prod_126);
    real l_mult_136 = RMul(0.4e1,l_prod_127);
    real l_f0_137 = RSub(RAdd(VDot<2,2>(v_122,VEC2(RAdd(l_mult_134,l_mult_135),RAdd(l_mult_136,RAdd(l_mult_135,RMul(-0.4e1,l_prod_125))))),VDot<4,4>(v_121,VEC4(RAdd(l_mult_130,RAdd(RMul(-0.3e1,l_prod_128),RAdd(l_mult_131,RAdd(RMul(-0.3e1,l_prod_127),RAdd(l_mult_132,l_mult_133))))),RAdd(RMul(-0.1e1,l_prod_127),l_mult_133),RAdd(RMul(-0.1e1,l_prod_128),l_mult_131),l_mult_132))),l__t_104);
    vec2 v_138 = VEC2(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.rayVec)),TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.rayVec)));
    real l__t_139 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.rayVec));
    int l__t_140 = ExtractFemItem<int,CellIndex(Mesh)>(self.cc);
    real l_sum_141 = RAdd(RMul(-0.3e1,l_prod_129),RAdd(l_mult_134,l_mult_136));
    real l_mult_142 = RMul(-0.1e1,l_prod_129);
    real l_basisEval_143 = RMul(-0.4e1,l_prod_128);
    real l_mult_144 = RMul(0.4e1,l_prod_129);
    real l_mult_145 = RMul(-0.4e1,l_prod_127);
    real l_vdot_146 = RAdd(VDot<2,2>(v_122,VEC2(l_basisEval_143,RAdd(l_mult_144,RAdd(l_basisEval_143,RMul(-0.8e1,l_prod_127))))),VDot<4,4>(v_121,VEC4(l_sum_141,RAdd(l_mult_142,l_mult_136),0.e0,l_mult_134)));
    real l_vdot_147 = RAdd(VDot<2,2>(v_122,VEC2(RAdd(l_mult_144,l_mult_145),l_mult_145)),VDot<4,4>(v_121,VEC4(l_sum_141,0.e0,RAdd(l_mult_142,l_mult_134),l_mult_136)));
    int l_mulRes_148 = IMul(l__t_103,3);
    int t_149 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,l_mulRes_148);
    int l_mulRes_150 = IMul(2,t_149);
    int t_151 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,IAdd(l_mulRes_148,1));
    int l_mulRes_152 = IMul(2,t_151);
    real l_dof_load_153 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_152);
    real l_dof_load_154 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_152));
    int t_155 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_102,IAdd(l_mulRes_148,2));
    int l_mulRes_156 = IMul(2,t_155);
    real l_dof_load_157 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_156);
    real l_dof_load_158 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_156));
    real t_159 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,l_mulRes_150);
    real l_r_160 = RMul(t_159,l_mult_142);
    real l_r_161 = RAdd(RAdd(l_r_160,RMul(l_dof_load_153,l_mult_130)),RMul(l_dof_load_157,0.e0));
    real l_r_162 = RAdd(RAdd(l_r_160,RMul(l_dof_load_153,0.e0)),RMul(l_dof_load_157,l_mult_130));
    real t_163 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_102,IAdd(1,l_mulRes_150));
    real l_r_164 = RMul(t_163,l_mult_142);
    real l_r_165 = RAdd(RAdd(l_r_164,RMul(l_dof_load_154,l_mult_130)),RMul(l_dof_load_158,0.e0));
    real l_r_166 = RAdd(RAdd(l_r_164,RMul(l_dof_load_154,0.e0)),RMul(l_dof_load_158,l_mult_130));
    real l_r_167 = RAdd(RMul(0.e0,l_r_161),RMul(-0.1e1,l_r_165));
    real l_r_168 = RMul(0.e0,l_r_162);
    real l_r_169 = RAdd(l_r_168,RMul(-0.1e1,l_r_166));
    real l_r_170 = RAdd(RMul(0.1e1,l_r_161),RMul(0.e0,l_r_165));
    real l_r_171 = RMul(0.e0,l_r_166);
    real l_r_172 = RAdd(RMul(0.1e1,l_r_162),l_r_171);
    real l_op1_e3_l_17_173 = VDot<2,2>(VEC2(l_r_161,l_r_165),VEC2(RAdd(l_r_168,RMul(0.1e1,l_r_166)),RAdd(RMul(-0.1e1,l_r_162),l_r_171)));
    real t_174 = ExtractFemItem2<int,real,CellData(G)(Mesh)>(l__t_102,l__t_140);
    real l_gradEps_175 = Min<real>(RDiv(Abs<real>(RSub(VDot<2,2>(v_138,VEC2(RAdd(RMul(l_vdot_146,RDiv(RAdd(RMul(0.e0,l_r_167),RMul(-0.1e1,l_r_169)),l_op1_e3_l_17_173)),RMul(l_vdot_147,RDiv(RAdd(RMul(0.1e1,l_r_167),RMul(0.e0,l_r_169)),l_op1_e3_l_17_173))),RAdd(RMul(l_vdot_146,RDiv(RAdd(RMul(0.e0,l_r_170),RMul(-0.1e1,l_r_172)),l_op1_e3_l_17_173)),RMul(l_vdot_147,RDiv(RAdd(RMul(0.1e1,l_r_170),RMul(0.e0,l_r_172)),l_op1_e3_l_17_173))))),l__t_139)),t_174),RSub(self.e,self.s));
    tensor[2] _arg_176 = PACK(VAdd<2,2>(v_99,VScale<2,2>(l_gradEps_175,v_138)));
    femData(MeshPos) l_callNewtonPos_177 = _0994_msh_newtonInverse$1C53(_arg_176,l__t_103,l__t_102);
    &tensor[2] l_refPos_178 = ExtractFemItem<tensor[2],RefPos(Mesh)>(l_callNewtonPos_177);
    real l_varAcc_179 = TensorIndex<&tensor[2],[0]>(l_refPos_178);
    real l_varAcc_180 = TensorIndex<&tensor[2],[1]>(l_refPos_178);
    real l_prod_181 = RMul(RMul(l_varAcc_179,l_varAcc_179),0.1e1);
    real l_prod_182 = RMul(l_varAcc_179,l_varAcc_180);
    real l_prod_183 = RMul(l_varAcc_179,0.1e1);
    real l_prod_184 = RMul(0.1e1,l_varAcc_180);
    real l_mult_185 = RMul(0.2e1,RMul(0.1e1,RMul(l_varAcc_180,l_varAcc_180)));
    real l_mult_186 = RMul(0.4e1,l_prod_182);
    real l_mult_187 = RMul(0.2e1,l_prod_181);
    real l_mult_188 = RMul(-0.4e1,l_prod_182);
    real l_f1_189 = RSub(RSub(RAdd(VDot<2,2>(v_122,VEC2(RAdd(RMul(0.4e1,l_prod_184),l_mult_188),RAdd(RMul(0.4e1,l_prod_183),RAdd(l_mult_188,RMul(-0.4e1,l_prod_181))))),VDot<4,4>(v_121,VEC4(RAdd(l_mult_130,RAdd(RMul(-0.3e1,l_prod_184),RAdd(l_mult_185,RAdd(RMul(-0.3e1,l_prod_183),RAdd(l_mult_186,l_mult_187))))),RAdd(RMul(-0.1e1,l_prod_183),l_mult_187),RAdd(RMul(-0.1e1,l_prod_184),l_mult_185),l_mult_186))),l__t_104),RMul(l_gradEps_175,l__t_139));
    vec2 v_190 = VEC2(l_f0_137,l_f1_189);
    tensor[2] _arg_191 = PACK(v_190);
    print("vals:",TensorRef<[2]>(_arg_191),"\n");
    bool l__t_192 = GT<real>(l_f0_137,0.e0);
    vec2 v_193 = v_190;
    if (l__t_192) {
      l__t_194 = 1;
    } else {
      int l__t_195;
      if (LT<real>(l_f0_137,0.e0)) {
        l__t_195 = -1;
      } else {
        l__t_195 = 0;
      }
      l__t_194 = l__t_195;
    }
    bool l__t_196 = GT<real>(l_f1_189,0.e0);
    if (l__t_196) {
      l__t_197 = 1;
    } else {
      int l__t_198;
      if (LT<real>(l_f1_189,0.e0)) {
        l__t_198 = -1;
      } else {
        l__t_198 = 0;
      }
      l__t_197 = l__t_198;
    }
    if (BNot(GT<int>(IMul(l__t_194,l__t_197),0))) {
      int l__t_201;
      int l__t_199;
      if (l__t_192) {
        l__t_199 = 1;
      } else {
        int l__t_200;
        if (LT<real>(l_f0_137,0.e0)) {
          l__t_200 = -1;
        } else {
          l__t_200 = 0;
        }
        l__t_199 = l__t_200;
      }
      if (l__t_196) {
        l__t_201 = 1;
      } else {
        int l__t_202;
        if (LT<real>(l_f1_189,0.e0)) {
          l__t_202 = -1;
        } else {
          l__t_202 = 0;
        }
        l__t_201 = l__t_202;
      }
      if (EQ<int>(IMul(l__t_199,l__t_201),0)) {
        print("Warn: 0 update\n");
      }
      print("update with interval:",l_gradEps_175,"\n");
      tensor[2] _arg_203 = PACK(v_193);
      print("Vals I:",TensorRef<[2]>(_arg_203),"\n");
      real l__t_204 = RAdd(self.s,l_gradEps_175);
      vec2 v_205 = VEC2(self.s,l__t_204);
      tensor[2] _arg_206 = PACK(v_205);
      print("New interval:",TensorRef<[2]>(_arg_206),"\n");
      tensor[2] _arg_207 = PACK(v_205);
      l_newCells_208 = Append<femData(MeshCell),femData(MeshCell)>(self.newCells,self.cc);
      l_intervals_209 = Append<tensor[2],tensor[2]>(self.intervals,_arg_207);
      l__t_210 = l__t_204;
    } else {
      real t_211 = ExtractFemItem2<int,real,CellData(L)(Mesh)>(l__t_102,l__t_140);
      real l_epsUpdate_212 = Max<real>(l_gradEps_175,RDiv(Abs<real>(l_f0_137),RMul(0.2e1,t_211)));
      print("update L:",l_epsUpdate_212,"\n");
      print("update G:",l_gradEps_175,"\n");
      l_newCells_208 = self.newCells;
      l_intervals_209 = self.intervals;
      l__t_210 = RAdd(self.s,l_epsUpdate_212);
    }
    if (GTE<real>(l__t_210,self.e)) {
      vec2 v_221;
      real l_s_220;
      real l_e_219;
      femData(MeshCell) l_cc_218;
      femData(FuncCell) l__t_217;
      int l_itter_213 = IAdd(self.itter,1);
      if (GTE<int>(l_itter_213,self.len)) {
        self.itter = l_itter_213;
        self.s = l__t_210;
        self.intervals = l_intervals_209;
        self.newCells = l_newCells_208;
        stabilize;
      } else {
        int l__t_214 = IAdd(self.offset,l_itter_213);
        &tensor[2] l_interval_215 = Subscript<tensor[2][]>(globals.times,l__t_214);
        femData(MeshCell) l_cc_216 = Subscript<femData(MeshCell)[]>(globals.0cell_a,Subscript<int[]>(globals.cells,l__t_214));
        l__t_217 = LoadFem<femData(FuncCell)>(globals.c,ExtractFemItem<int,CellIndex(MeshCell)>(l_cc_216));
        l_cc_218 = l_cc_216;
        l_e_219 = TensorIndex<&tensor[2],[1]>(l_interval_215);
        l_s_220 = TensorIndex<&tensor[2],[0]>(l_interval_215);
        v_221 = LOAD_0(l_interval_215);
      }
      l_fc_222 = l__t_217;
      l_cc_223 = l_cc_218;
      l_e_224 = l_e_219;
      l_s_225 = l_s_220;
      v_226 = v_221;
      l_itter_227 = l_itter_213;
    } else {
      l_fc_222 = self.fc;
      l_cc_223 = self.cc;
      l_e_224 = self.e;
      l_s_225 = l__t_210;
      v_226 = LOAD_0(TensorRef<[2]>(self.interval));
      l_itter_227 = self.itter;
    }
    self.itter = l_itter_227;
    self.interval = PACK(v_226);
    self.s = l_s_225;
    self.e = l_e_224;
    self.cc = l_cc_223;
    self.fc = l_fc_222;
    self.intervals = l_intervals_209;
    self.newCells = l_newCells_208;
    active;
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_229 = 0 to ISub(globals.iresU,1) {
      for i_ui_230 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_230,i_vi_229);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.033     1.627
    front end .......................................................................   0.221     0.267
      parser ........................................................................   0.031     0.031
      typechecker ...................................................................   0.016     0.016
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.008     0.008
    High IR optimization ............................................................   0.016     0.033
      High IR value numbering .......................................................   0.008     0.008
      High IR normalization .........................................................   0.009     0.009
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.020     0.020
    Mid IR optimization .............................................................   0.017     0.030
      Mid IR contraction ............................................................   0.002     0.002
      Mid IR value numbering ........................................................   0.009     0.009
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.015     0.015
    Low IR optimization .............................................................   0.029     0.057
      Low IR contraction ............................................................   0.013     0.013
      Low IR value numbering ........................................................   0.016     0.016
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.024     0.024
    Tree IR optimization ............................................................   0.004     0.004
      Tree IR contraction ...........................................................   0.000     0.000
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.025     1.134
      C compiler ....................................................................   1.109     1.109
