/* ParseTree: After parsing */
  Program @ [evalProg.diderot:2.1-217.0] 
    [
      Type: msh= @ [evalProg.diderot:2.1-3.0] 
        Mesh @ [evalProg.diderot:2.6-10] 
        From File : evalProg.json @ [evalProg.diderot:2.1-3.0] 
      Const: dim= @ [evalProg.diderot:3.1-4.0] 
        Select @ [evalProg.diderot:3.17-24] 
          Var: msh @ [evalProg.diderot:3.17-20] 
          dim
      Input: a @ [evalProg.diderot:5.1-6.0] 
      Input: isoval= @ [evalProg.diderot:7.1-25] 
        Lit: 0.2e0 @ [evalProg.diderot:7.21-24] 
      Input: thick= @ [evalProg.diderot:7.27-8.0] 
        Lit: 0.7e-1 @ [evalProg.diderot:7.46-50] 
      Input: camEye= @ [evalProg.diderot:8.1-36] 
        Cons @ [evalProg.diderot:8.21-35] 
          [
            Lit: 0.3e1 @ [evalProg.diderot:8.22-25] 
            UnaryOp: unary - @ [evalProg.diderot:8.26-30] 
              Lit: 0.3e1 @ [evalProg.diderot:8.27-30] 
            Lit: 0.3e1 @ [evalProg.diderot:8.31-34] 
          ]
      Input: camAt= @ [evalProg.diderot:8.38-71] 
        Cons @ [evalProg.diderot:8.57-70] 
          [
            Lit: 0.5e0 @ [evalProg.diderot:8.58-61] 
            Lit: 0.5e0 @ [evalProg.diderot:8.62-65] 
            Lit: 0.5e0 @ [evalProg.diderot:8.66-69] 
          ]
      Input: camUp= @ [evalProg.diderot:8.74-9.0] 
        Cons @ [evalProg.diderot:8.93-100] 
          [
            Lit: 0 @ [evalProg.diderot:8.94-95] 
            Lit: 0 @ [evalProg.diderot:8.96-97] 
            Lit: 1 @ [evalProg.diderot:8.98-99] 
          ]
      Input: camFOV= @ [evalProg.diderot:9.1-26] 
        Lit: 0.137e2 @ [evalProg.diderot:9.21-25] 
      Input: iresU= @ [evalProg.diderot:9.28-49] 
        Lit: 10 @ [evalProg.diderot:9.46-48] 
      Input: iresV= @ [evalProg.diderot:9.53-10.0] 
        Lit: 10 @ [evalProg.diderot:9.71-73] 
      Input: camNear= @ [evalProg.diderot:10.1-25] 
        UnaryOp: unary - @ [evalProg.diderot:10.22-24] 
          Lit: 2 @ [evalProg.diderot:10.23-24] 
      Input: camFar= @ [evalProg.diderot:10.26-48] 
        Lit: 5 @ [evalProg.diderot:10.46-47] 
      Input: refStep= @ [evalProg.diderot:11.1-26] 
        Lit: 0.1e1 @ [evalProg.diderot:11.22-25] 
      Input: rayStep= @ [evalProg.diderot:11.27-12.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:11.47-51] 
      Input: lightVsp= @ [evalProg.diderot:12.1-39] 
        Cons @ [evalProg.diderot:12.23-38] 
          [
            Lit: 0.e0 @ [evalProg.diderot:12.24-27] 
            Lit: 0.e0 @ [evalProg.diderot:12.29-32] 
            Lit: 0.1e1 @ [evalProg.diderot:12.34-37] 
          ]
      Input: phongKa= @ [evalProg.diderot:13.1-26] 
        Lit: 0.1e0 @ [evalProg.diderot:13.22-25] 
      Input: phongKd= @ [evalProg.diderot:13.27-14.0] 
        Lit: 0.9e0 @ [evalProg.diderot:13.48-51] 
      Input: debug= @ [evalProg.diderot:15.1-16.0] 
        Lit: false @ [evalProg.diderot:15.20-25] 
      Input: debugU= @ [evalProg.diderot:16.1-17.0] 
        Lit: 8 @ [evalProg.diderot:16.20-21] 
      Input: debugV= @ [evalProg.diderot:17.1-18.0] 
        Lit: 2 @ [evalProg.diderot:17.20-21] 
      Input: eps= @ [evalProg.diderot:18.1-19.0] 
        Lit: 0.1e-7 @ [evalProg.diderot:18.18-28] 
      Var @ [evalProg.diderot:20.1-21.0] 
        Decl: camDist= @ [evalProg.diderot:20.1-21.0] 
          UnaryOp: |()| @ [evalProg.diderot:20.16-32] 
            BinOp: - @ [evalProg.diderot:20.17-31] 
              Var: camAt @ [evalProg.diderot:20.17-22] 
              Var: camEye @ [evalProg.diderot:20.25-31] 
      Var @ [evalProg.diderot:21.1-37] 
        Decl: camNearVsp= @ [evalProg.diderot:21.1-37] 
          BinOp: + @ [evalProg.diderot:21.19-36] 
            Var: camNear @ [evalProg.diderot:21.19-26] 
            Var: camDist @ [evalProg.diderot:21.29-36] 
      Var @ [evalProg.diderot:22.1-35] 
        Decl: camFarVsp= @ [evalProg.diderot:22.1-35] 
          BinOp: + @ [evalProg.diderot:22.18-34] 
            Var: camFar @ [evalProg.diderot:22.18-24] 
            Var: camDist @ [evalProg.diderot:22.27-34] 
      Var @ [evalProg.diderot:23.1-39] 
        Decl: camN= @ [evalProg.diderot:23.1-39] 
          Apply @ [evalProg.diderot:23.13-38] 
            Var: normalize @ [evalProg.diderot:23.13-22] 
            [
              BinOp: - @ [evalProg.diderot:23.23-37] 
                Var: camAt @ [evalProg.diderot:23.23-28] 
                Var: camEye @ [evalProg.diderot:23.31-37] 
            ]
      Var @ [evalProg.diderot:24.1-38] 
        Decl: camU= @ [evalProg.diderot:24.1-38] 
          Apply @ [evalProg.diderot:24.13-37] 
            Var: normalize @ [evalProg.diderot:24.13-22] 
            [
              BinOp: × @ [evalProg.diderot:24.23-36] 
                Var: camN @ [evalProg.diderot:24.23-27] 
                Var: camUp @ [evalProg.diderot:24.31-36] 
            ]
      Var @ [evalProg.diderot:25.1-26] 
        Decl: camV= @ [evalProg.diderot:25.1-26] 
          BinOp: × @ [evalProg.diderot:25.13-25] 
            Var: camU @ [evalProg.diderot:25.13-17] 
            Var: camN @ [evalProg.diderot:25.21-25] 
      Var @ [evalProg.diderot:26.1-27.0] 
        Decl: camVmax= @ [evalProg.diderot:26.1-27.0] 
          BinOp: * @ [evalProg.diderot:26.16-42] 
            Apply @ [evalProg.diderot:26.16-34] 
              Var: tan @ [evalProg.diderot:26.16-19] 
              [
                BinOp: / @ [evalProg.diderot:26.20-33] 
                  BinOp: * @ [evalProg.diderot:26.20-29] 
                    Var: camFOV @ [evalProg.diderot:26.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [evalProg.diderot:26.27-29] 
                  Lit: 360 @ [evalProg.diderot:26.30-33] 
              ]
            Var: camDist @ [evalProg.diderot:26.35-42] 
      Var @ [evalProg.diderot:27.1-28.0] 
        Decl: camUmax= @ [evalProg.diderot:27.1-28.0] 
          BinOp: / @ [evalProg.diderot:27.16-35] 
            BinOp: * @ [evalProg.diderot:27.16-29] 
              Var: camVmax @ [evalProg.diderot:27.16-23] 
              Var: iresU @ [evalProg.diderot:27.24-29] 
            Var: iresV @ [evalProg.diderot:27.30-35] 
      Var @ [evalProg.diderot:28.1-29.0] 
        Decl: light= @ [evalProg.diderot:28.1-29.0] 
          BinOp: • @ [evalProg.diderot:28.14-63] 
            Apply @ [evalProg.diderot:28.14-41] 
              Var: transpose @ [evalProg.diderot:28.14-23] 
              [
                Cons @ [evalProg.diderot:28.24-40] 
                  [
                    Var: camU @ [evalProg.diderot:28.25-29] 
                    Var: camV @ [evalProg.diderot:28.30-34] 
                    Var: camN @ [evalProg.diderot:28.35-39] 
                  ]
              ]
            Apply @ [evalProg.diderot:28.44-63] 
              Var: normalize @ [evalProg.diderot:28.44-53] 
              [
                Var: lightVsp @ [evalProg.diderot:28.54-62] 
              ]
      Var @ [evalProg.diderot:31.1-32.0] 
        Decl: R= @ [evalProg.diderot:31.1-32.0] 
          Apply @ [evalProg.diderot:31.18-29] 
            Select @ [evalProg.diderot:31.18-29] 
              Var: a @ [evalProg.diderot:31.18-19] 
              refcell
            [ ]
    ]
    Strand: ray @ [evalProg.diderot:32.1-216.3] 
      [
        Param: ui @ [evalProg.diderot:32.12-18] 
          Int @ [evalProg.diderot:32.12-16] 
        Param: vi @ [evalProg.diderot:32.20-26] 
          Int @ [evalProg.diderot:32.20-24] 
      ]
      [
        VarDcl @ [evalProg.diderot:33.3-60] 
        VarDcl @ [evalProg.diderot:34.3-35.0] 
        VarDcl @ [evalProg.diderot:35.3-36.0] 
        VarDcl: output @ [evalProg.diderot:37.3-38.0] 
        VarDcl: output @ [evalProg.diderot:38.3-39] 
        VarDcl: output @ [evalProg.diderot:39.3-40.0] 
        VarDcl: output @ [evalProg.diderot:40.3-41.0] 
        VarDcl @ [evalProg.diderot:41.3-42.0] 
        VarDcl @ [evalProg.diderot:42.3-43.0] 
        VarDcl @ [evalProg.diderot:43.3-44.0] 
        VarDcl @ [evalProg.diderot:44.3-45.0] 
        VarDcl @ [evalProg.diderot:45.3-46.0] 
        VarDcl: output @ [evalProg.diderot:46.3-47.0] 
        VarDcl: output @ [evalProg.diderot:47.3-48.0] 
        VarDcl @ [evalProg.diderot:48.3-49.0] 
        VarDcl: output @ [evalProg.diderot:49.3-50.0] 
        VarDcl: output @ [evalProg.diderot:50.3-51.0] 
        VarDcl: output @ [evalProg.diderot:51.3-52.0] 
        VarDcl: output @ [evalProg.diderot:52.3-53.0] 
        VarDcl @ [evalProg.diderot:53.3-54.0] 
        VarDcl @ [evalProg.diderot:54.3-55.0] 
        VarDcl @ [evalProg.diderot:55.3-56.0] 
        VarDcl @ [evalProg.diderot:56.3-57.0] 
        VarDcl @ [evalProg.diderot:58.3-59.0] 
        VarDcl @ [evalProg.diderot:59.3-60.0] 
        VarDcl @ [evalProg.diderot:61.3-62.0] 
        VarDcl @ [evalProg.diderot:62.3-63.0] 
      ]
      [
        Method: Start @ [evalProg.diderot:63.3-119.3] 
          Block @ [evalProg.diderot:63.9-117.0] 
            [
              Decl @ [evalProg.diderot:63.9-117.0] 
                Decl: startTime= @ [evalProg.diderot:64.5-65.0] 
                  Var: camFarVsp @ [evalProg.diderot:64.22-31] 
              IfThen @ [evalProg.diderot:65.5-68.5] 
                AndAlso @ [evalProg.diderot:65.9-48] 
                  OrElse @ [evalProg.diderot:65.10-38] 
                    BinOp: != @ [evalProg.diderot:65.10-23] 
                      Var: ui @ [evalProg.diderot:65.10-12] 
                      Var: debugU @ [evalProg.diderot:65.16-22] 
                    BinOp: != @ [evalProg.diderot:65.26-38] 
                      Var: vi @ [evalProg.diderot:65.26-28] 
                      Var: debugV @ [evalProg.diderot:65.32-38] 
                  Var: debug @ [evalProg.diderot:65.43-48] 
                Stabilize @ [evalProg.diderot:66.7-67.0] 
              Foreach @ [evalProg.diderot:68.5-97.0] 
                Cell(msh) @ [evalProg.diderot:68.14-23] 
                Iterator: c @ [evalProg.diderot:68.24-38] 
                  Apply @ [evalProg.diderot:68.29-38] 
                    Select @ [evalProg.diderot:68.29-38] 
                      Var: a @ [evalProg.diderot:68.29-30] 
                      cells
                    [ ]
                Block @ [evalProg.diderot:69.7-97.0] 
                  [
                    Print @ [evalProg.diderot:70.2-71.0] 
                      [
                        Lit: "Cell:" @ [evalProg.diderot:70.8-15] 
                        Var: c @ [evalProg.diderot:70.16-17] 
                        Lit: "\n" @ [evalProg.diderot:70.18-22] 
                      ]
                    IfThenElse @ [evalProg.diderot:71.2-95.0] 
                      Apply @ [evalProg.diderot:71.6-30] 
                        Select @ [evalProg.diderot:71.6-30] 
                          Var: c @ [evalProg.diderot:71.6-7] 
                          isInside
                        [
                          Var: rayStartProj @ [evalProg.diderot:71.17-29] 
                        ]
                      Block @ [evalProg.diderot:71.31-81.0] 
                        [
                          Print @ [evalProg.diderot:72.4-73.0] 
                            [
                              Lit: "pos starts inside\n" @ [evalProg.diderot:72.10-31] 
                            ]
                          Decl @ [evalProg.diderot:71.31-81.0] 
                            Decl: p= @ [evalProg.diderot:73.4-74.0] 
                              Apply @ [evalProg.diderot:73.22-65] 
                                Select @ [evalProg.diderot:73.22-65] 
                                  Var: c @ [evalProg.diderot:73.22-23] 
                                  meshPos
                                [
                                  Apply @ [evalProg.diderot:73.32-64] 
                                    Select @ [evalProg.diderot:73.32-64] 
                                      Var: c @ [evalProg.diderot:73.32-33] 
                                      inverseTransform
                                    [
                                      Var: rayStartProj @ [evalProg.diderot:73.51-63] 
                                    ]
                                ]
                          Assign: poses= @ [evalProg.diderot:74.4-75.0] 
                            BinOp: @ @ [evalProg.diderot:74.12-19] 
                              Var: poses @ [evalProg.diderot:74.12-17] 
                              Var: p @ [evalProg.diderot:74.18-19] 
                          Assign: normalizedTimes= @ [evalProg.diderot:75.4-76.0] 
                            BinOp: @ @ [evalProg.diderot:75.22-48] 
                              Var: normalizedTimes @ [evalProg.diderot:75.22-37] 
                              Var: camNearVsp @ [evalProg.diderot:75.38-48] 
                          Assign: startTime= @ [evalProg.diderot:76.4-77.0] 
                            Var: camNearVsp @ [evalProg.diderot:76.16-26] 
                          Assign: currentCellInt= @ [evalProg.diderot:77.4-78.0] 
                            Var: cellIntersects @ [evalProg.diderot:77.21-35] 
                          Assign: cellIntersects+= @ [evalProg.diderot:78.4-79.0] 
                            Lit: 1 @ [evalProg.diderot:78.20-21] 
                          Assign: startsInside= @ [evalProg.diderot:79.4-80.0] 
                            Lit: true @ [evalProg.diderot:79.19-23] 
                        ]
                      Block @ [evalProg.diderot:81.7-95.0] 
                        [
                          Decl @ [evalProg.diderot:81.7-95.0] 
                            Decl: newTime= @ [evalProg.diderot:82.4-83.0] 
                              Apply @ [evalProg.diderot:82.19-50] 
                                Select @ [evalProg.diderot:82.19-50] 
                                  Var: c @ [evalProg.diderot:82.19-20] 
                                  enter
                                [
                                  Var: rayStartProj @ [evalProg.diderot:82.27-39] 
                                  Var: dposProj @ [evalProg.diderot:82.41-49] 
                                ]
                          IfThen @ [evalProg.diderot:85.4-94.2] 
                            BinOp: >= @ [evalProg.diderot:85.8-22] 
                              Var: newTime @ [evalProg.diderot:85.8-15] 
                              Lit: 0.e0 @ [evalProg.diderot:85.19-22] 
                            Block @ [evalProg.diderot:85.23-94.0] 
                              [
                                Decl @ [evalProg.diderot:85.23-94.0] 
                                  Decl: p= @ [evalProg.diderot:86.6-87.0] 
                                    Apply @ [evalProg.diderot:86.24-58] 
                                      Select @ [evalProg.diderot:86.24-58] 
                                        Var: c @ [evalProg.diderot:86.24-25] 
                                        enterPos
                                      [
                                        Var: rayStartProj @ [evalProg.diderot:86.35-47] 
                                        Var: dposProj @ [evalProg.diderot:86.49-57] 
                                      ]
                                Decl @ [evalProg.diderot:85.23-94.0] 
                                  Decl: newRayTime= @ [evalProg.diderot:87.6-88.0] 
                                    Apply @ [evalProg.diderot:87.24-59] 
                                      Var: lerp @ [evalProg.diderot:87.24-28] 
                                      [
                                        Var: camNearVsp @ [evalProg.diderot:87.29-39] 
                                        Var: camFarVsp @ [evalProg.diderot:87.40-49] 
                                        Var: newTime @ [evalProg.diderot:87.51-58] 
                                      ]
                                Assign: normalizedTimes= @ [evalProg.diderot:89.6-90.0] 
                                  BinOp: @ @ [evalProg.diderot:89.24-50] 
                                    Var: normalizedTimes @ [evalProg.diderot:89.24-39] 
                                    Var: newRayTime @ [evalProg.diderot:89.40-50] 
                                Assign: poses= @ [evalProg.diderot:90.6-91.0] 
                                  BinOp: @ @ [evalProg.diderot:90.14-21] 
                                    Var: poses @ [evalProg.diderot:90.14-19] 
                                    Var: p @ [evalProg.diderot:90.20-21] 
                                IfThen @ [evalProg.diderot:91.6-92.6] 
                                  BinOp: > @ [evalProg.diderot:91.10-32] 
                                    Var: startTime @ [evalProg.diderot:91.10-19] 
                                    Var: newRayTime @ [evalProg.diderot:91.22-32] 
                                  Block @ [evalProg.diderot:91.33-92.0] 
                                    [
                                      Assign: startTime= @ [evalProg.diderot:91.34-58] 
                                        Var: newRayTime @ [evalProg.diderot:91.47-57] 
                                      Assign: currentCellInt= @ [evalProg.diderot:91.59-91] 
                                        Var: cellIntersects @ [evalProg.diderot:91.76-90] 
                                    ]
                                Assign: cellIntersects+= @ [evalProg.diderot:92.6-93.0] 
                                  Lit: 1 @ [evalProg.diderot:92.22-23] 
                              ]
                        ]
                  ]
              IfThenElse @ [evalProg.diderot:100.5-114.0] 
                BinOp: != @ [evalProg.diderot:100.9-28] 
                  Var: cellIntersects @ [evalProg.diderot:100.9-23] 
                  Lit: 0 @ [evalProg.diderot:100.27-28] 
                Block @ [evalProg.diderot:100.29-110.6] 
                  [
                    Assign: pos= @ [evalProg.diderot:101.7-102.0] 
                      Subscript @ [evalProg.diderot:101.13-34] 
                        Var: poses @ [evalProg.diderot:101.13-18] 
                        [
                          Var: currentCellInt @ [evalProg.diderot:101.19-33] 
                        ]
                    Assign: rayN= @ [evalProg.diderot:102.7-103.0] 
                      Subscript @ [evalProg.diderot:102.14-45] 
                        Var: normalizedTimes @ [evalProg.diderot:102.14-29] 
                        [
                          Var: currentCellInt @ [evalProg.diderot:102.30-44] 
                        ]
                    Assign: spaceInter= @ [evalProg.diderot:103.7-104.0] 
                      BinOp: @ @ [evalProg.diderot:103.20-63] 
                        Var: spaceInter @ [evalProg.diderot:103.20-30] 
                        Sequence @ [evalProg.diderot:103.31-63] 
                          [
                            Var: rayOrig @ [evalProg.diderot:103.32-39] 
                            BinOp: + @ [evalProg.diderot:103.41-62] 
                              Var: rayOrig @ [evalProg.diderot:103.41-48] 
                              BinOp: * @ [evalProg.diderot:103.51-62] 
                                Var: rayN @ [evalProg.diderot:103.51-55] 
                                Var: rayVec @ [evalProg.diderot:103.56-62] 
                          ]
                    Assign: refSpaceInter= @ [evalProg.diderot:104.7-105.0] 
                      Sequence @ [evalProg.diderot:104.23-35] 
                        [
                          Select @ [evalProg.diderot:104.24-34] 
                            Var: pos @ [evalProg.diderot:104.24-27] 
                            refPos
                        ]
                    Assign: currentCell= @ [evalProg.diderot:105.7-106.0] 
                      Select @ [evalProg.diderot:105.21-27] 
                        Var: pos @ [evalProg.diderot:105.21-24] 
                        mc
                    Assign: cellInter= @ [evalProg.diderot:106.7-107.0] 
                      Sequence @ [evalProg.diderot:106.19-32] 
                        [
                          Var: currentCell @ [evalProg.diderot:106.20-31] 
                        ]
                    Print @ [evalProg.diderot:107.7-108.0] 
                      [
                        Lit: "In the interval:" @ [evalProg.diderot:107.13-31] 
                        Cons @ [evalProg.diderot:107.33-56] 
                          [
                            Var: camNearVsp @ [evalProg.diderot:107.34-44] 
                            Var: camFarVsp @ [evalProg.diderot:107.46-55] 
                          ]
                        Lit: "\n" @ [evalProg.diderot:107.58-62] 
                      ]
                    Print @ [evalProg.diderot:108.7-109.0] 
                      [
                        Lit: "Possible times:" @ [evalProg.diderot:108.13-30] 
                        Var: normalizedTimes @ [evalProg.diderot:108.32-47] 
                        Lit: "\n" @ [evalProg.diderot:108.49-53] 
                      ]
                    Print @ [evalProg.diderot:109.7-110.0] 
                      [
                        Lit: "cells:" @ [evalProg.diderot:109.13-21] 
                        SeqComp @ [evalProg.diderot:109.23-42] 
                          Comprehension @ [evalProg.diderot:109.23-42] 
                            Select @ [evalProg.diderot:109.24-28] 
                              Var: p @ [evalProg.diderot:109.24-25] 
                              mc
                            [
                              Iterator: p @ [evalProg.diderot:109.31-41] 
                                Var: poses @ [evalProg.diderot:109.36-41] 
                            ]
                        Lit: "\n" @ [evalProg.diderot:109.44-48] 
                      ]
                  ]
                Block @ [evalProg.diderot:110.12-114.0] 
                  [
                    Print @ [evalProg.diderot:111.7-112.0] 
                      [
                        Lit: "No intersection!\n" @ [evalProg.diderot:111.13-33] 
                      ]
                    Print @ [evalProg.diderot:112.7-113.0] 
                      [
                        Lit: "Ui: " @ [evalProg.diderot:112.13-19] 
                        Var: ui @ [evalProg.diderot:112.21-23] 
                        Lit: " Vi:" @ [evalProg.diderot:112.25-31] 
                        Var: vi @ [evalProg.diderot:112.33-35] 
                        Lit: "\n" @ [evalProg.diderot:112.36-40] 
                      ]
                    Stabilize @ [evalProg.diderot:113.7-17] 
                  ]
            ]
        Method: Update @ [evalProg.diderot:119.3-216.1] 
          Block @ [evalProg.diderot:119.10-216.0] 
            [
              Print @ [evalProg.diderot:120.5-121.0] 
                [
                  Lit: "Ui: " @ [evalProg.diderot:120.11-17] 
                  Var: ui @ [evalProg.diderot:120.19-21] 
                  Lit: " vi: " @ [evalProg.diderot:120.23-30] 
                  Var: vi @ [evalProg.diderot:120.32-34] 
                  Lit: "\n" @ [evalProg.diderot:120.36-40] 
                ]
              Print @ [evalProg.diderot:121.5-122.0] 
                [
                  Lit: "The current ref pos is:" @ [evalProg.diderot:121.11-36] 
                  Select @ [evalProg.diderot:121.38-48] 
                    Var: pos @ [evalProg.diderot:121.38-41] 
                    refPos
                  Lit: "\n" @ [evalProg.diderot:121.50-54] 
                ]
              Print @ [evalProg.diderot:122.5-123.0] 
                [
                  Lit: "Current cell:" @ [evalProg.diderot:122.11-26] 
                  Select @ [evalProg.diderot:122.28-34] 
                    Var: pos @ [evalProg.diderot:122.28-31] 
                    mc
                  Lit: "\n" @ [evalProg.diderot:122.36-40] 
                ]
              Print @ [evalProg.diderot:123.5-124.0] 
                [
                  Lit: "The current time is:" @ [evalProg.diderot:123.11-33] 
                  Var: rayN @ [evalProg.diderot:123.35-39] 
                  Lit: "\n" @ [evalProg.diderot:123.41-45] 
                ]
              Print @ [evalProg.diderot:124.5-125.0] 
                [
                  Lit: "The current world pos is:" @ [evalProg.diderot:124.11-38] 
                  Apply @ [evalProg.diderot:124.40-54] 
                    Select @ [evalProg.diderot:124.40-54] 
                      Var: pos @ [evalProg.diderot:124.40-43] 
                      worldPos
                    [ ]
                  Lit: "\n" @ [evalProg.diderot:124.56-60] 
                ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: stupid= @ [evalProg.diderot:125.5-126.0] 
                  BinOp: + @ [evalProg.diderot:125.19-42] 
                    Var: rayOrig @ [evalProg.diderot:125.19-26] 
                    BinOp: * @ [evalProg.diderot:125.29-42] 
                      Var: rayN @ [evalProg.diderot:125.29-33] 
                      Var: rayVec @ [evalProg.diderot:125.36-42] 
              Print @ [evalProg.diderot:126.5-127.0] 
                [
                  Lit: "The current world pos should be:" @ [evalProg.diderot:126.11-45] 
                  Cons @ [evalProg.diderot:126.46-68] 
                    [
                      Subscript @ [evalProg.diderot:126.47-56] 
                        Var: stupid @ [evalProg.diderot:126.47-53] 
                        [
                          Lit: 0 @ [evalProg.diderot:126.54-55] 
                        ]
                      Subscript @ [evalProg.diderot:126.58-67] 
                        Var: stupid @ [evalProg.diderot:126.58-64] 
                        [
                          Lit: 1 @ [evalProg.diderot:126.65-66] 
                        ]
                    ]
                  Lit: "\n" @ [evalProg.diderot:126.71-75] 
                ]
              IfThen @ [evalProg.diderot:128.5-134.5] 
                UnaryOp: ! @ [evalProg.diderot:128.9-34] 
                  Apply @ [evalProg.diderot:128.11-33] 
                    Select @ [evalProg.diderot:128.11-33] 
                      Var: R @ [evalProg.diderot:128.11-12] 
                      isInside
                    [
                      Select @ [evalProg.diderot:128.22-32] 
                        Var: pos @ [evalProg.diderot:128.22-25] 
                        refPos
                    ]
                Block @ [evalProg.diderot:128.35-134.0] 
                  [
                    Print @ [evalProg.diderot:129.7-130.0] 
                      [
                        Lit: "nerror: invalid pos created\n" @ [evalProg.diderot:129.13-44] 
                      ]
                    IfThen @ [evalProg.diderot:130.11-133.5] 
                      UnaryOp: ! @ [evalProg.diderot:130.14-27] 
                        Var: startsInside @ [evalProg.diderot:130.15-27] 
                      Print @ [evalProg.diderot:131.6-132.0] 
                        [
                          Lit: "Not because of an inside\n" @ [evalProg.diderot:131.12-40] 
                        ]
                  ]
              Print @ [evalProg.diderot:134.5-135.0] 
                [
                  Lit: "The current world pos is:" @ [evalProg.diderot:134.11-38] 
                  Apply @ [evalProg.diderot:134.40-54] 
                    Select @ [evalProg.diderot:134.40-54] 
                      Var: pos @ [evalProg.diderot:134.40-43] 
                      worldPos
                    [ ]
                  Lit: "\n" @ [evalProg.diderot:134.56-60] 
                ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: cpos= @ [evalProg.diderot:136.5-137.0] 
                  BinOp: + @ [evalProg.diderot:136.17-40] 
                    Var: rayOrig @ [evalProg.diderot:136.17-24] 
                    BinOp: * @ [evalProg.diderot:136.27-40] 
                      Var: rayN @ [evalProg.diderot:136.27-31] 
                      Var: rayVec @ [evalProg.diderot:136.34-40] 
              Print @ [evalProg.diderot:137.5-138.0] 
                [
                  Lit: "The current world pos should be:" @ [evalProg.diderot:137.11-45] 
                  Cons @ [evalProg.diderot:137.47-65] 
                    [
                      Subscript @ [evalProg.diderot:137.48-55] 
                        Var: cpos @ [evalProg.diderot:137.48-52] 
                        [
                          Lit: 0 @ [evalProg.diderot:137.53-54] 
                        ]
                      Subscript @ [evalProg.diderot:137.57-64] 
                        Var: cpos @ [evalProg.diderot:137.57-61] 
                        [
                          Lit: 1 @ [evalProg.diderot:137.62-63] 
                        ]
                    ]
                  Lit: "\n" @ [evalProg.diderot:137.68-72] 
                ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: err= @ [evalProg.diderot:138.5-139.0] 
                  UnaryOp: |()| @ [evalProg.diderot:138.16-53] 
                    BinOp: - @ [evalProg.diderot:138.17-52] 
                      Apply @ [evalProg.diderot:138.17-31] 
                        Select @ [evalProg.diderot:138.17-31] 
                          Var: pos @ [evalProg.diderot:138.17-20] 
                          worldPos
                        [ ]
                      Cons @ [evalProg.diderot:138.34-52] 
                        [
                          Subscript @ [evalProg.diderot:138.35-42] 
                            Var: cpos @ [evalProg.diderot:138.35-39] 
                            [
                              Lit: 0 @ [evalProg.diderot:138.40-41] 
                            ]
                          Subscript @ [evalProg.diderot:138.44-51] 
                            Var: cpos @ [evalProg.diderot:138.44-48] 
                            [
                              Lit: 1 @ [evalProg.diderot:138.49-50] 
                            ]
                        ]
              IfThenElse @ [evalProg.diderot:139.5-145.0] 
                BinOp: > @ [evalProg.diderot:139.10-23] 
                  Var: err @ [evalProg.diderot:139.10-13] 
                  Lit: 0.1e-4 @ [evalProg.diderot:139.16-23] 
                Print @ [evalProg.diderot:140.7-141.0] 
                  [
                    Lit: "nerror:Warning! Moved off ray:" @ [evalProg.diderot:140.13-45] 
                    Var: err @ [evalProg.diderot:140.47-50] 
                    Lit: "\n" @ [evalProg.diderot:140.52-56] 
                  ]
                Print @ [evalProg.diderot:143.7-144.0] 
                  [
                    Lit: "Did not move off ray!\n" @ [evalProg.diderot:143.13-38] 
                  ]
              Assign: steps+= @ [evalProg.diderot:145.5-146.0] 
                Lit: 1 @ [evalProg.diderot:145.12-13] 
              Print @ [evalProg.diderot:147.5-148.0] 
                [
                  Lit: "Orig:" @ [evalProg.diderot:147.11-18] 
                  Var: rayOrig @ [evalProg.diderot:147.20-27] 
                  Lit: " dir:" @ [evalProg.diderot:147.29-36] 
                  Var: rayVec @ [evalProg.diderot:147.38-44] 
                  Lit: "\n" @ [evalProg.diderot:147.46-50] 
                ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: startPos= @ [evalProg.diderot:148.5-149.0] 
                  BinOp: + @ [evalProg.diderot:148.21-44] 
                    Var: rayOrig @ [evalProg.diderot:148.21-28] 
                    BinOp: * @ [evalProg.diderot:148.31-44] 
                      Var: rayN @ [evalProg.diderot:148.31-35] 
                      Var: rayVec @ [evalProg.diderot:148.38-44] 
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: newDpos= @ [evalProg.diderot:149.5-150.0] 
                  BinOp: * @ [evalProg.diderot:149.20-47] 
                    BinOp: - @ [evalProg.diderot:149.21-37] 
                      Var: camFarVsp @ [evalProg.diderot:149.21-30] 
                      Var: rayN @ [evalProg.diderot:149.33-37] 
                    Var: rayVec @ [evalProg.diderot:149.41-47] 
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: nextTime= @ [evalProg.diderot:150.5-151.0] 
                  Apply @ [evalProg.diderot:150.21-55] 
                    Select @ [evalProg.diderot:150.21-55] 
                      Var: pos @ [evalProg.diderot:150.21-24] 
                      exit
                    [
                      Cons @ [evalProg.diderot:150.30-54] 
                        [
                          Subscript @ [evalProg.diderot:150.31-41] 
                            Var: newDpos @ [evalProg.diderot:150.31-38] 
                            [
                              Lit: 0 @ [evalProg.diderot:150.39-40] 
                            ]
                          Subscript @ [evalProg.diderot:150.43-53] 
                            Var: newDpos @ [evalProg.diderot:150.43-50] 
                            [
                              Lit: 1 @ [evalProg.diderot:150.51-52] 
                            ]
                        ]
                    ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: rayN'= @ [evalProg.diderot:151.5-152.0] 
                  Apply @ [evalProg.diderot:151.18-76] 
                    Var: max @ [evalProg.diderot:151.18-21] 
                    [
                      Var: rayN @ [evalProg.diderot:151.22-26] 
                      Apply @ [evalProg.diderot:151.28-75] 
                        Var: min @ [evalProg.diderot:151.28-31] 
                        [
                          Var: camFarVsp @ [evalProg.diderot:151.32-41] 
                          Apply @ [evalProg.diderot:151.43-74] 
                            Var: lerp @ [evalProg.diderot:151.43-47] 
                            [
                              Var: rayN @ [evalProg.diderot:151.48-52] 
                              Var: camFarVsp @ [evalProg.diderot:151.54-63] 
                              Var: nextTime @ [evalProg.diderot:151.65-73] 
                            ]
                        ]
                    ]
              Print @ [evalProg.diderot:153.5-154.0] 
                [
                  Lit: "Next time:" @ [evalProg.diderot:153.11-23] 
                  Var: nextTime @ [evalProg.diderot:153.25-33] 
                  Lit: "\n" @ [evalProg.diderot:153.35-39] 
                ]
              IfThen @ [evalProg.diderot:154.5-177.5] 
                BinOp: >= @ [evalProg.diderot:154.9-22] 
                  Var: nextTime @ [evalProg.diderot:154.9-17] 
                  Lit: 0 @ [evalProg.diderot:154.21-22] 
                Block @ [evalProg.diderot:154.23-177.0] 
                  [
                    Assign: rayCellInter= @ [evalProg.diderot:155.7-156.0] 
                      BinOp: @ @ [evalProg.diderot:155.22-47] 
                        Var: rayCellInter @ [evalProg.diderot:155.22-34] 
                        Cons @ [evalProg.diderot:155.35-47] 
                          [
                            Var: rayN @ [evalProg.diderot:155.36-40] 
                            Var: rayN' @ [evalProg.diderot:155.41-46] 
                          ]
                    Assign: rayN= @ [evalProg.diderot:156.7-157.0] 
                      Var: rayN' @ [evalProg.diderot:156.14-19] 
                    Decl @ [evalProg.diderot:154.23-177.0] 
                      Decl: pos'= @ [evalProg.diderot:157.7-158.0] 
                        Apply @ [evalProg.diderot:157.28-65] 
                          Select @ [evalProg.diderot:157.28-65] 
                            Var: pos @ [evalProg.diderot:157.28-31] 
                            exitPos
                          [
                            Cons @ [evalProg.diderot:157.40-64] 
                              [
                                Subscript @ [evalProg.diderot:157.41-51] 
                                  Var: newDpos @ [evalProg.diderot:157.41-48] 
                                  [
                                    Lit: 0 @ [evalProg.diderot:157.49-50] 
                                  ]
                                Subscript @ [evalProg.diderot:157.53-63] 
                                  Var: newDpos @ [evalProg.diderot:157.53-60] 
                                  [
                                    Lit: 1 @ [evalProg.diderot:157.61-62] 
                                  ]
                              ]
                          ]
                    IfThen @ [evalProg.diderot:158.7-163.7] 
                      BinOp: >= @ [evalProg.diderot:158.11-28] 
                        Var: rayN @ [evalProg.diderot:158.11-15] 
                        Var: camFarVsp @ [evalProg.diderot:158.19-28] 
                      Block @ [evalProg.diderot:158.29-162.0] 
                        [
                          Print @ [evalProg.diderot:159.2-160.0] 
                            [
                              Lit: "cells: " @ [evalProg.diderot:159.8-17] 
                              Var: cellInter @ [evalProg.diderot:159.18-27] 
                              Lit: "\n" @ [evalProg.diderot:159.28-32] 
                            ]
                          Assign: spaceInter= @ [evalProg.diderot:160.2-161.0] 
                            BinOp: @ @ [evalProg.diderot:160.15-56] 
                              Var: spaceInter @ [evalProg.diderot:160.15-25] 
                              BinOp: + @ [evalProg.diderot:160.27-55] 
                                Var: rayOrig @ [evalProg.diderot:160.27-34] 
                                BinOp: * @ [evalProg.diderot:160.37-55] 
                                  Var: camFarVsp @ [evalProg.diderot:160.37-46] 
                                  Var: rayVec @ [evalProg.diderot:160.49-55] 
                          Stabilize @ [evalProg.diderot:161.2-12] 
                        ]
                    Assign: spaceInter= @ [evalProg.diderot:163.7-164.0] 
                      BinOp: @ @ [evalProg.diderot:163.20-56] 
                        Var: spaceInter @ [evalProg.diderot:163.20-30] 
                        BinOp: + @ [evalProg.diderot:163.32-55] 
                          Var: rayOrig @ [evalProg.diderot:163.32-39] 
                          BinOp: * @ [evalProg.diderot:163.42-55] 
                            Var: rayN @ [evalProg.diderot:163.42-46] 
                            Var: rayVec @ [evalProg.diderot:163.49-55] 
                    Assign: refSpaceInter= @ [evalProg.diderot:164.7-165.0] 
                      BinOp: @ @ [evalProg.diderot:164.23-50] 
                        Var: refSpaceInter @ [evalProg.diderot:164.23-36] 
                        Select @ [evalProg.diderot:164.38-49] 
                          Var: pos' @ [evalProg.diderot:164.38-42] 
                          refPos
                    IfThenElse @ [evalProg.diderot:166.7-176.0] 
                      Apply @ [evalProg.diderot:166.11-25] 
                        Select @ [evalProg.diderot:166.11-25] 
                          Var: pos' @ [evalProg.diderot:166.11-15] 
                          isValid
                        [ ]
                      Block @ [evalProg.diderot:166.26-174.0] 
                        [
                          Assign: pos= @ [evalProg.diderot:168.2-169.0] 
                            Var: pos' @ [evalProg.diderot:168.8-12] 
                          Print @ [evalProg.diderot:169.2-170.0] 
                            [
                              Lit: "Next cell:" @ [evalProg.diderot:169.8-20] 
                              Select @ [evalProg.diderot:169.22-28] 
                                Var: pos @ [evalProg.diderot:169.22-25] 
                                mc
                              Lit: "\n" @ [evalProg.diderot:169.30-34] 
                            ]
                          Assign: currentCell= @ [evalProg.diderot:170.2-171.0] 
                            Apply @ [evalProg.diderot:170.16-24] 
                              Select @ [evalProg.diderot:170.16-24] 
                                Var: pos @ [evalProg.diderot:170.16-19] 
                                mc
                              [ ]
                          Assign: cellInter= @ [evalProg.diderot:171.2-172.0] 
                            BinOp: @ @ [evalProg.diderot:171.14-35] 
                              Var: cellInter @ [evalProg.diderot:171.14-23] 
                              Var: currentCell @ [evalProg.diderot:171.24-35] 
                          Continue @ [evalProg.diderot:172.2-173.0] 
                        ]
                      Print @ [evalProg.diderot:175.2-22] 
                        [
                          Lit: "Invalid\n" @ [evalProg.diderot:175.9-20] 
                        ]
                  ]
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: newIdx= @ [evalProg.diderot:177.5-178.0] 
                  UnaryOp: unary - @ [evalProg.diderot:177.18-20] 
                    Lit: 1 @ [evalProg.diderot:177.19-20] 
              Decl @ [evalProg.diderot:119.10-216.0] 
                Decl: estimate= @ [evalProg.diderot:178.5-179.0] 
                  Var: camFarVsp @ [evalProg.diderot:178.21-30] 
              Foreach @ [evalProg.diderot:179.5-187.0] 
                Int @ [evalProg.diderot:179.14-18] 
                Iterator: i @ [evalProg.diderot:179.18-44] 
                  Range @ [evalProg.diderot:179.23-44] 
                    Lit: 0 @ [evalProg.diderot:179.23-24] 
                    BinOp: - @ [evalProg.diderot:179.27-43] 
                      Var: cellIntersects @ [evalProg.diderot:179.27-41] 
                      Lit: 1 @ [evalProg.diderot:179.42-43] 
                Block @ [evalProg.diderot:179.45-187.0] 
                  [
                    Decl @ [evalProg.diderot:179.45-187.0] 
                      Decl: t= @ [evalProg.diderot:180.7-181.0] 
                        Subscript @ [evalProg.diderot:180.16-34] 
                          Var: normalizedTimes @ [evalProg.diderot:180.16-31] 
                          [
                            Var: i @ [evalProg.diderot:180.32-33] 
                          ]
                    Decl @ [evalProg.diderot:179.45-187.0] 
                      Decl: pos'= @ [evalProg.diderot:181.7-182.0] 
                        Subscript @ [evalProg.diderot:181.28-36] 
                          Var: poses @ [evalProg.diderot:181.28-33] 
                          [
                            Var: i @ [evalProg.diderot:181.34-35] 
                          ]
                    IfThen @ [evalProg.diderot:182.7-186.5] 
                      AndAlso @ [evalProg.diderot:182.11-58] 
                        BinOp: >= @ [evalProg.diderot:182.11-21] 
                          Var: t @ [evalProg.diderot:182.11-12] 
                          Var: rayN @ [evalProg.diderot:182.16-20] 
                        AndAlso @ [evalProg.diderot:182.21-58] 
                          BinOp: >= @ [evalProg.diderot:182.24-38] 
                            Var: estimate @ [evalProg.diderot:182.24-32] 
                            Var: t @ [evalProg.diderot:182.36-37] 
                          BinOp: != @ [evalProg.diderot:182.41-58] 
                            Select @ [evalProg.diderot:182.41-48] 
                              Var: pos' @ [evalProg.diderot:182.41-45] 
                              mc
                            Select @ [evalProg.diderot:182.52-58] 
                              Var: pos @ [evalProg.diderot:182.52-55] 
                              mc
                      Block @ [evalProg.diderot:182.59-186.0] 
                        [
                          Assign: estimate= @ [evalProg.diderot:183.2-184.0] 
                            Var: t @ [evalProg.diderot:183.13-14] 
                          Assign: newIdx= @ [evalProg.diderot:184.2-185.0] 
                            Var: i @ [evalProg.diderot:184.11-12] 
                        ]
                  ]
              IfThenElse @ [evalProg.diderot:187.5-213.0] 
                BinOp: > @ [evalProg.diderot:187.9-20] 
                  Var: newIdx @ [evalProg.diderot:187.9-15] 
                  UnaryOp: unary - @ [evalProg.diderot:187.18-20] 
                    Lit: 1 @ [evalProg.diderot:187.19-20] 
                Block @ [evalProg.diderot:187.21-205.6] 
                  [
                    Print @ [evalProg.diderot:188.7-189.0] 
                      [
                        Lit: "nerror:Impossible happened\n" @ [evalProg.diderot:188.13-43] 
                      ]
                    IfThen @ [evalProg.diderot:189.7-192.7] 
                      Var: startsInside @ [evalProg.diderot:189.10-22] 
                      Print @ [evalProg.diderot:190.2-191.0] 
                        [
                          Lit: "because of an inside\n" @ [evalProg.diderot:190.8-32] 
                        ]
                    Print @ [evalProg.diderot:192.7-193.0] 
                      [
                        Lit: "Direction:" @ [evalProg.diderot:192.13-25] 
                        Var: rayVec @ [evalProg.diderot:192.27-33] 
                        Lit: "\n" @ [evalProg.diderot:192.35-39] 
                      ]
                    Print @ [evalProg.diderot:193.7-194.0] 
                      [
                        Lit: "world pos was:" @ [evalProg.diderot:193.13-29] 
                        Apply @ [evalProg.diderot:193.31-45] 
                          Select @ [evalProg.diderot:193.31-45] 
                            Var: pos @ [evalProg.diderot:193.31-34] 
                            worldPos
                          [ ]
                        Lit: "\n" @ [evalProg.diderot:193.47-51] 
                      ]
                    Print @ [evalProg.diderot:194.7-195.0] 
                      [
                        Lit: "Interior pos was:" @ [evalProg.diderot:194.13-32] 
                        Select @ [evalProg.diderot:194.34-44] 
                          Var: pos @ [evalProg.diderot:194.34-37] 
                          refPos
                        Lit: "\n" @ [evalProg.diderot:194.46-50] 
                      ]
                    Print @ [evalProg.diderot:195.7-196.0] 
                      [
                        Var: normalizedTimes @ [evalProg.diderot:195.13-28] 
                        Lit: " at " @ [evalProg.diderot:195.30-36] 
                        Var: newIdx @ [evalProg.diderot:195.38-44] 
                        Lit: "\n" @ [evalProg.diderot:195.46-50] 
                      ]
                    Print @ [evalProg.diderot:196.7-197.0] 
                      [
                        Lit: "Original time was:" @ [evalProg.diderot:196.13-33] 
                        Var: rayN @ [evalProg.diderot:196.35-39] 
                        Lit: "\n" @ [evalProg.diderot:196.41-45] 
                      ]
                    Assign: pos= @ [evalProg.diderot:197.7-198.0] 
                      Subscript @ [evalProg.diderot:197.13-26] 
                        Var: poses @ [evalProg.diderot:197.13-18] 
                        [
                          Var: newIdx @ [evalProg.diderot:197.19-25] 
                        ]
                    Assign: currentCell= @ [evalProg.diderot:198.7-199.0] 
                      Apply @ [evalProg.diderot:198.21-29] 
                        Select @ [evalProg.diderot:198.21-29] 
                          Var: pos @ [evalProg.diderot:198.21-24] 
                          mc
                        [ ]
                    Assign: cellInter= @ [evalProg.diderot:199.7-200.0] 
                      BinOp: @ @ [evalProg.diderot:199.19-40] 
                        Var: cellInter @ [evalProg.diderot:199.19-28] 
                        Var: currentCell @ [evalProg.diderot:199.29-40] 
                    Assign: rayN= @ [evalProg.diderot:203.7-204.0] 
                      Subscript @ [evalProg.diderot:203.14-37] 
                        Var: normalizedTimes @ [evalProg.diderot:203.14-29] 
                        [
                          Var: newIdx @ [evalProg.diderot:203.30-36] 
                        ]
                    Continue @ [evalProg.diderot:204.7-205.0] 
                  ]
                Block @ [evalProg.diderot:205.12-213.0] 
                  [
                    Print @ [evalProg.diderot:206.7-207.0] 
                      [
                        Lit: "Enter times:" @ [evalProg.diderot:206.13-27] 
                        Var: normalizedTimes @ [evalProg.diderot:206.29-44] 
                        Lit: "\n" @ [evalProg.diderot:206.46-50] 
                      ]
                    Print @ [evalProg.diderot:207.7-208.0] 
                      [
                        Lit: "Ray enter times:" @ [evalProg.diderot:207.13-31] 
                        Var: rayCellInter @ [evalProg.diderot:207.33-45] 
                        Lit: "\n" @ [evalProg.diderot:207.47-51] 
                      ]
                    Print @ [evalProg.diderot:208.7-209.0] 
                      [
                        Lit: "cells:" @ [evalProg.diderot:208.13-21] 
                        Var: cellInter @ [evalProg.diderot:208.23-32] 
                        Lit: "\n" @ [evalProg.diderot:208.33-37] 
                      ]
                    Print @ [evalProg.diderot:209.7-210.0] 
                      [
                        Lit: "End\n" @ [evalProg.diderot:209.13-20] 
                      ]
                    Stabilize @ [evalProg.diderot:212.7-17] 
                  ]
            ]
      ]
    Grid @ [evalProg.diderot:216.3-217.0] 
      Comprehension @ [evalProg.diderot:216.16-65] 
        Apply @ [evalProg.diderot:216.17-27] 
          Var: ray @ [evalProg.diderot:216.17-20] 
          [
            Var: ui @ [evalProg.diderot:216.21-23] 
            Var: vi @ [evalProg.diderot:216.24-26] 
          ]
        [
          Iterator: vi @ [evalProg.diderot:216.30-46] 
            Range @ [evalProg.diderot:216.36-46] 
              Lit: 0 @ [evalProg.diderot:216.36-37] 
              BinOp: - @ [evalProg.diderot:216.39-46] 
                Var: iresU @ [evalProg.diderot:216.39-44] 
                Lit: 1 @ [evalProg.diderot:216.45-46] 
          Iterator: ui @ [evalProg.diderot:216.48-64] 
            Range @ [evalProg.diderot:216.54-64] 
              Lit: 0 @ [evalProg.diderot:216.54-55] 
              BinOp: - @ [evalProg.diderot:216.57-64] 
                Var: iresV @ [evalProg.diderot:216.57-62] 
                Lit: 1 @ [evalProg.diderot:216.63-64] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStartMethod,HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 2;
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [0.3e1, -0.3e1, 0.3e1];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 10;
input int iresV = 10;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int debugU = 8;
input int debugV = 2;
input real eps = 0.1e-7;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec2 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec2, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    cellInt = cellItter;
    A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
      xn = -<$[2]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
          }
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[2,2,2,2] msh_transform_3 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2,2]> (∇⊗<#; %2; $[2,2]; %2> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )))), pos);
  }
function tensor[2,2,2] msh_transform_2 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2,2]> (∇⊗<#; %2; $[2]; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, ))), pos);
  }
function mat2 msh_transform_1 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(mesh,cell,field(2)[2], Transform, )), pos);
  }
function vec2 msh_transform_0 (vec2 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %2; $[2]> (femField(mesh,cell,field(2)[2], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec2 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(mesh,cellInt,field(2)[2], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %2; $[2]> (•<#; %2; $[2,2]; $[2]; $[2]> (A, -<#; %2; $[2]> (femField(mesh,cellInt,field(2)[2], Transform, ), pos)), xn);
    xn = -<$[2]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[2]; $[2]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], xn)), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], xn)[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], xn)[1], -0.e0))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec2 (pos, msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec2 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec2, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec2 refPos, vec2 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec2,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), +<$[2]> ($sub<vec2; %3> ({[0.1e1, 0.e0], [0.e0, 0.e0], [0.e0, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), *<$[2]> ($sub<vec2; %3> ({[-0.1e1, 0.1e1], [0.e0, 0.1e1], [0.1e1, 0.e0]}, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), / (-<$[]> ($sub<real; %2> ({+<$[2]> (*<$[2]> (time[0], dPos), refPos)[0], +<$[2]> (*<$[2]> (time[0], dPos), refPos)[1]}, $sub<int; %3> ({1, 1, 0}, $r2i (time[1]))), $sub<real; %2> ($sub<real[2]; %3> ({{0.1e1, 0.e0}, {0.e0, 0.e0}, {0.e0, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))), $sub<real; %2> ($sub<real[2]; %3> ({{-0.1e1, 0.1e1}, {0.e0, 0.1e1}, {0.1e1, 0.e0}}, $r2i (time[1])), $sub<int; %3> ({1, 1, 0}, $r2i (time[1])))))), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec2 (mesh, +<$[2]> (*<$[2]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 6), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec2 refPos, vec2 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], +<$[2]> (refPos, *<$[2]> (dPos, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))))))[1], -0.e0))) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec2 refPos, vec2 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (× (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])))), >= (|()|<$[]> (× (dPos, [-0.1e1, 0.1e1])), 0.1e-20)))
    if != (i, 0) {
      time = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      face = 0;
      }
    else {
      faceTime = × (-<$[2]> ([0.1e1, 0.e0], refPos), /<$[2]> ([-0.1e1, 0.1e1], × (dPos, [-0.1e1, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])))), >= (|()|<$[]> (× (dPos, [0.e0, 0.1e1])), 0.1e-20)))
    if != (i, 1) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      face = 1;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.e0, 0.1e1], × (dPos, [0.e0, 0.1e1])));
      }
    if $and (>= (× (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0]))), -0.1e-15), $and (> (time, × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])))), >= (|()|<$[]> (× (dPos, [0.1e1, 0.e0])), 0.1e-20)))
    if != (i, 2) {
      time = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      face = 2;
      }
    else {
      faceTime = × (-<$[2]> ([0.e0, 0.e0], refPos), /<$[2]> ([0.1e1, 0.e0], × (dPos, [0.1e1, 0.e0])));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
real camNearVsp = +<$[]> (camNear, camDist);
real camFarVsp = +<$[]> (camFar, camDist);
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
FemType: RefCell with type var:msh R = refcell (a);
strand ray (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (unary -<$[]> (camVmax), camVmax, unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  vec3 UV = +<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV));
  output vec3 rayOrig = +<$[3]> (camEye, UV);
  output vec3 rayVec = +<$[3]> (camN, [0.e0, 0.e0, 0.e0]);
  output real camNearVsp = camNearVsp;
  output real camFarVsp = camFarVsp;
  vec3 rayStart = +<$[3]> (rayOrig, *<$[3]> (camNearVsp, rayVec));
  vec2 rayStartProj = [rayStart[0], rayStart[1]];
  vec3 rayEnd = +<$[3]> (rayOrig, *<$[3]> (camFarVsp, rayVec));
  vec3 dpos = -<$[3]> (rayEnd, rayStart);
  vec2 dposProj = [dpos[0], dpos[1]];
  output FemType: MeshPos with type var:msh[] poses = (FemType: MeshPos with type var:msh[]){};
  output real[] normalizedTimes = (real[]){};
  int cellIntersects = 0;
  output vec2[] rayCellInter = (vec2[]){};
  output vec3[] spaceInter = (vec3[]){};
  output vec2[] refSpaceInter = (vec2[]){};
  output FemType: MeshCell with type var:msh[] cellInter = (FemType: MeshCell with type var:msh[]){};
  int currentCellInt = unary - (1);
  real rayN = 0.e0;
  FemType: MeshCell with type var:msh currentCell = $dynsub<FemType: MeshCell with type var:msh> (extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh)), 0);
  int steps = 0;
  vec3[] umm1 = (vec3[]){};
  vec3[] umm2 = (vec3[]){};
  FemType: MeshPos with type var:msh pos = extractFemItemN(InvalidBuild(MeshPos),msh( using FemType: Mesh with type var:NONE) (a)):FemType: MeshPos with type var:msh;
  bool startsInside = false;
  start {
    real startTime = camFarVsp;
    if ((!= (ui, debugU) || != (vi, debugV)) && debug)
      stabilize;
      foreach (FemType: MeshCell with type var:msh c in extractFemItem(a, FemType: MeshCell with type var:msh[], Cells(Mesh))) {
      print ("Cell:", c, "\n");
      if extractFemItem(_msh_newtonInverse (rayStartProj, extractFemItem(c, int, CellIndex(MeshCell)), extractFem(Mesh,c )), bool, Valid(MeshPos)) {
        print ("pos starts inside\n");
        FemType: MeshPos with type var:msh p = extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec2 (extractFem(Mesh,c ), extractFemItem(c, int, CellIndex(MeshCell)), @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], InvTransform, _msh_newtonInverse), rayStartProj))):FemType: MeshPos with type var:msh;
        poses = @<FemType: MeshPos with type var:msh> (poses, p);
        normalizedTimes = @<real> (normalizedTimes, camNearVsp);
        startTime = camNearVsp;
        currentCellInt = cellIntersects;
        cellIntersects = + (cellIntersects, 1);
        startsInside = true;
        }
      else {
        real newTime = _enter (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), -<$[2]> (rayStartProj, @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, ), [-0.e0, -0.e0]))), •<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), dposProj))[0];
        if >= (newTime, 0.e0) {
          FemType: MeshPos with type var:msh p = extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec2,vec2,int (extractFem(Mesh,c ), extractFemItem(c, int, CellIndex(MeshCell)), +<$[2]> (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), -<$[2]> (rayStartProj, @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, ), [-0.e0, -0.e0]))), *<$[2]> (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), dposProj), _enter (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), -<$[2]> (rayStartProj, @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, ), [-0.e0, -0.e0]))), •<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), dposProj))[0])), +<$[2]> (rayStartProj, *<$[2]> (dposProj, _enter (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), -<$[2]> (rayStartProj, @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, ), [-0.e0, -0.e0]))), •<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), dposProj))[0])), $r2i (_enter (•<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), -<$[2]> (rayStartProj, @<#; %2; $[2]> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, ), [-0.e0, -0.e0]))), •<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,c ),extractFemItem(c, int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), dposProj))[1]))):FemType: MeshPos with type var:msh;
          real newRayTime = lerp<$[]> (camNearVsp, camFarVsp, newTime);
          normalizedTimes = @<real> (normalizedTimes, newRayTime);
          poses = @<FemType: MeshPos with type var:msh> (poses, p);
          if > (startTime, newRayTime) {
            startTime = newRayTime;
            currentCellInt = cellIntersects;
            }
          cellIntersects = + (cellIntersects, 1);
          }
        }
      }
    if != (cellIntersects, 0) {
      pos = $dynsub<FemType: MeshPos with type var:msh> (poses, currentCellInt);
      rayN = $dynsub<real> (normalizedTimes, currentCellInt);
      spaceInter = @<vec3> (spaceInter, (vec3[]){rayOrig, +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec))});
      refSpaceInter = (vec2[]){extractFemItem(pos, vec2, RefPos(MeshPos))};
      currentCell = loadFem(MeshCell);
      cellInter = (FemType: MeshCell with type var:msh[]){currentCell};
      print ("In the interval:", [camNearVsp, camFarVsp], "\n");
      print ("Possible times:", normalizedTimes, "\n");
      print ("cells:", {loadFem(MeshCell) | FemType: MeshPos with type var:msh p in poses}, "\n");
      }
    else {
      print ("No intersection!\n");
      print ("Ui: ", ui, " Vi:", vi, "\n");
      stabilize;
      }
    }
  update {
    print ("Ui: ", ui, " vi: ", vi, "\n");
    print ("The current ref pos is:", extractFemItem(pos, vec2, RefPos(MeshPos)), "\n");
    print ("Current cell:", loadFem(MeshCell), "\n");
    print ("The current time is:", rayN, "\n");
    print ("The current world pos is:", worldPos (pos), "\n");
    vec3 stupid = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    print ("The current world pos should be:", [stupid[0], stupid[1]], "\n");
    if ! ($and (> (+<$[]> (0.1e1, 0.1e-8), •<$[2]; $[2]; $[]> ([0.1e1, 0.1e1], extractFemItem(pos, vec2, RefPos(MeshPos)))), $and (> (+<$[2]> ([0.1e-8, 0.1e-8], extractFemItem(pos, vec2, RefPos(MeshPos)))[0], -0.e0), > (+<$[2]> ([0.1e-8, 0.1e-8], extractFemItem(pos, vec2, RefPos(MeshPos)))[1], -0.e0)))) {
      print ("nerror: invalid pos created\n");
      if ! (startsInside)
        print ("Not because of an inside\n");
        }
    print ("The current world pos is:", worldPos (pos), "\n");
    vec3 cpos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    print ("The current world pos should be:", [cpos[0], cpos[1]], "\n");
    real err = |()|<$[2]> (-<$[2]> (worldPos (pos), [cpos[0], cpos[1]]));
    if > (err, 0.1e-4) {
      print ("nerror:Warning! Moved off ray:", err, "\n");
      }
    else {
      print ("Did not move off ray!\n");
      }
    steps = + (steps, 1);
    print ("Orig:", rayOrig, " dir:", rayVec, "\n");
    vec3 startPos = +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec));
    vec3 newDpos = *<$[3]> (-<$[]> (camFarVsp, rayN), rayVec);
    real nextTime = _exit (extractFemItem(pos, vec2, RefPos(Mesh)), •<$[2,2]; $[2]; $[2]> (inv (@<#; %2; $[2,2]> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,loadFem(MeshCell) ),extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)),field(2)[2], Transform, )), [-0.e0, -0.e0])), [newDpos[0], newDpos[1]]), extractFemItem(pos, int, PosEntryFacet(MeshPos)))[0];
    real rayN' = max (rayN, min (camFarVsp, lerp<$[]> (rayN, camFarVsp, nextTime)));
    print ("Next time:", nextTime, "\n");
    if >= (nextTime, (real)0) {
      rayCellInter = @<vec2> (rayCellInter, [rayN, rayN']);
      rayN = rayN';
      FemType: MeshPos with type var:msh pos' = $exitPos (extractFem(Mesh,pos ), extractFemItem(pos, int, CellIndex(Mesh)), extractFemItem(pos, vec2, RefPos(Mesh)), •<$[2,2]; $[2]; $[2]> (@<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,loadFem(MeshCell) ),extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)),field(2)[2], Transform, ))), [-0.e0, -0.e0]), [newDpos[0], newDpos[1]]), _exit (extractFemItem(pos, vec2, RefPos(Mesh)), •<$[2,2]; $[2]; $[2]> (@<#; %2; $[2,2]> (inv<#; %2> (∇⊗<#; %2; $[]; %2> (femField(extractFem(Mesh,loadFem(MeshCell) ),extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)),field(2)[2], Transform, ))), [-0.e0, -0.e0]), [newDpos[0], newDpos[1]]), extractFemItem(pos, int, PosEntryFacet(MeshPos))));
      if >= (rayN, camFarVsp) {
        print ("cells: ", cellInter, "\n");
        spaceInter = @<vec3> (spaceInter, +<$[3]> (rayOrig, *<$[3]> (camFarVsp, rayVec)));
        stabilize;
        }
      spaceInter = @<vec3> (spaceInter, +<$[3]> (rayOrig, *<$[3]> (rayN, rayVec)));
      refSpaceInter = @<vec2> (refSpaceInter, extractFemItem(pos', vec2, RefPos(MeshPos)));
      if extractFemItem(pos', bool, Valid(MeshPos)) {
        pos = pos';
        print ("Next cell:", loadFem(MeshCell), "\n");
        currentCell = loadFem(MeshCell);
        cellInter = @<FemType: MeshCell with type var:msh> (cellInter, currentCell);
        continue;
        }
      else {
        print ("Invalid\n");
        }
      }
    int newIdx = unary - (1);
    real estimate = camFarVsp;
    foreach (int i in $range (0, - (cellIntersects, 1))) {
      real t = $dynsub<real> (normalizedTimes, i);
      FemType: MeshPos with type var:msh pos' = $dynsub<FemType: MeshPos with type var:msh> (poses, i);
      if (>= (t, rayN) && (>= (estimate, t) && != (loadFem(MeshCell), loadFem(MeshCell)))) {
        estimate = t;
        newIdx = i;
        }
      }
    if > (newIdx, unary - (1)) {
      print ("nerror:Impossible happened\n");
      if startsInside
        print ("because of an inside\n");
        print ("Direction:", rayVec, "\n");
      print ("world pos was:", worldPos (pos), "\n");
      print ("Interior pos was:", extractFemItem(pos, vec2, RefPos(MeshPos)), "\n");
      print (normalizedTimes, " at ", newIdx, "\n");
      print ("Original time was:", rayN, "\n");
      pos = $dynsub<FemType: MeshPos with type var:msh> (poses, newIdx);
      currentCell = loadFem(MeshCell);
      cellInter = @<FemType: MeshCell with type var:msh> (cellInter, currentCell);
      rayN = $dynsub<real> (normalizedTimes, newIdx);
      continue;
      }
    else {
      print ("Enter times:", normalizedTimes, "\n");
      print ("Ray enter times:", rayCellInter, "\n");
      print ("cells:", cellInter, "\n");
      print ("End\n");
      stabilize;
      }
    }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresU, 1))) {
      foreach (int ui in $range (0, - (iresV, 1))) {
        new ray (ui, vi);
        }
      }
    }
  
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
global vec3 light080E;
global Femdata: RefCell R080F;
function bool#1 !=047F (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0484 = prim !=0086 (_t0482, _t0483);
  return _t0484;
}
function bool#0 ==0485 (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0486 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0487 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0488 = prim ==0082 (_t0486, _t0487);
  return _t0488;
}
function Femdata: MeshPos#0 findPos0489 (Femdata: Mesh mesh048A, vec2 pos048B)
{
  real _t048C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048E = [_t048C, _t048D];
  newtonInt048F = 0;
  cellInt0490 = extractFemItem(StartCell(Mesh), int, mesh048A);
  int _t0491 = extractFemItem(NumCell(Mesh), int, mesh048A);
  int _t0492 = 1;
  numCell0493 = prim -0024 (_t0491, _t0492);
  yayCells0494 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh048A, pos048B : vec2);
  foreach cellItter0495 in yayCells0494 {
    cellInt0490 = cellItter0495;
    field(2)[2] _t0496 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
    field(2)[2,2] _t0497 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0496);
    field(2)[2,2] _t0498 = prim inv015B<#∞; %2> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t049B = [_t0499, _t049A];
    A049C = prim @00A5<#∞; %2; $[2,2]> (_t0498, _t049B);
    int _t049D = 0;
    int _t049E = 16;
    int[] _t049F = prim $range01C3 (_t049D, _t049E);
    foreach newtonItter04C2 in _t049F {
      field(2)[2] _t04A0 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
      field(2)[2] _t04A1 = prim -002E<#∞; %2; $[2]> (_t04A0, pos048B);
      field(2)[2] _t04A2 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A049C, _t04A1);
      delta04A3 = prim @00A5<#∞; %2; $[2]> (_t04A2, xn048E);
      xn048E = prim -0026<$[2]> (xn048E, delta04A3);
      real _t04A4 = 0.1e-7;
      real _t04A5 = 0.1e-7;
      real _t04A6 = prim *0034 (_t04A4, _t04A5);
      real _t04A7 = prim •00CE<$[2]; $[2]; $[]> (delta04A3, delta04A3);
      bool _t04A8 = prim >=007E (_t04A6, _t04A7);
      if _t04A8 {
        real _t04A9 = 0.1e1;
        real _t04AA = 0.1e-8;
        real _t04AB = prim +0017<$[]> (_t04A9, _t04AA);
        real _t04AC = 0.1e1;
        real _t04AD = 0.1e1;
        vec2 _t04AE = [_t04AC, _t04AD];
        real _t04AF = prim •00CE<$[2]; $[2]; $[]> (_t04AE, xn048E);
        bool _t04B0 = prim >0080 (_t04AB, _t04AF);
        real _t04B1 = 0.1e-8;
        real _t04B2 = 0.1e-8;
        vec2 _t04B3 = [_t04B1, _t04B2];
        vec2 _t04B4 = prim +0017<$[2]> (_t04B3, xn048E);
        real _t04B5 = _t04B4[0];
        real _t04B6 = -0.e0;
        bool _t04B7 = prim >0080 (_t04B5, _t04B6);
        real _t04B8 = 0.1e-8;
        real _t04B9 = 0.1e-8;
        vec2 _t04BA = [_t04B8, _t04B9];
        vec2 _t04BB = prim +0017<$[2]> (_t04BA, xn048E);
        real _t04BC = _t04BB[1];
        real _t04BD = -0.e0;
        bool _t04BE = prim >0080 (_t04BC, _t04BD);
        bool _t04BF = prim $and01C4 (_t04B7, _t04BE);
        bool _t04C0 = prim $and01C4 (_t04B0, _t04BF);
        if _t04C0 {
          Femdata: MeshPos _t04C1 = extractFemItemN((mesh048A, cellInt0490, xn048E, pos048B),AllBuild(MeshPos),);
          return _t04C1;
        }
      }
    }
  }
  string _t04C3 = "Bad end 2";
  string _t04C4 = "\n";
  print (_t04C3, _t04C4);
  Femdata: MeshPos _t04C5 = extractFemItemN((mesh048A),InvalidBuild(MeshPos),);
  return _t04C5;
}
function Femdata: RefCell#1 refcell04C6 (Femdata: Mesh arg004C7)
{
  Femdata: RefCell _t04C8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004C7);
  return _t04C8;
}
function Femdata: MeshCell[]#0 cells04C9 (Femdata: Mesh arg004CA)
{
  Femdata: MeshCell[] _t04CB = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004CA);
  return _t04CB;
}
function Femdata: MeshCell[]#0 cells04CC (Femdata: Mesh arg004CA)
{
  int _t04CD = 0;
  int _t04CE = extractFemItem(NumCell(Mesh), int, arg004CA);
  int[] _t04CF = prim $range01C3 (_t04CD, _t04CE);
  Femdata: MeshCell[] accum04D2 = {};
  foreach i04D0 in _t04CF {
    Femdata: MeshCell _t04D1 = loadFem(MeshCell, arg004CA, i04D0);
    accum04D2 = prim @0010<Femdata: MeshCell> (accum04D2, _t04D1);
  }
  return accum04D2;
}
function int#0 numCell04D3 (Femdata: Mesh arg004C7)
{
  int _t04D4 = extractFemItem(NumCell(Mesh), int, arg004C7);
  return _t04D4;
}
function tensor[2,2,2,2]#0 msh_transform_304D5 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04D9 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D9);
  field(2)[2,2,2] _t04DB = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04DA);
  field(2)[2,2,2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04DB);
  tensor[2,2,2,2] _t04DD = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04DC, pos04D6);
  return _t04DD;
}
function tensor[2,2,2]#0 msh_transform_204DE (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04DF = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E0 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DF);
  field(2)[2,2,2] _t04E1 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04E0);
  tensor[2,2,2] _t04E2 = prim @00A5<#∞; %2; $[2,2,2]> (_t04E1, pos04D6);
  return _t04E2;
}
function tensor[2,2]#0 msh_transform_104E3 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E4 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E5 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E4);
  tensor[2,2] _t04E6 = prim @00A5<#∞; %2; $[2,2]> (_t04E5, pos04D6);
  return _t04E6;
}
function vec2#2 msh_transform_004E7 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E8 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  vec2 _t04E9 = prim @00A5<#∞; %2; $[2]> (_t04E8, pos04D6);
  return _t04E9;
}
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0520 (Femdata: MeshPos pos0521)
{
  bool _t0522 = extractFemItem(WorldTest(MeshPos), bool, pos0521);
  if _t0522 {
    vec2 _t0523 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
    int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos0521);
    Femdata: Mesh _t0525 = extractFem(pos0521, Mesh);
    vec2 _t0526 = func msh_transform_004E7 (_t0523, _t0524, _t0525);
    Femdata: MeshPos _t0527 = extractFemItemN((pos0521, _t0526),NewWorld(MeshPos),);
    return _t0527;
  } else {
    return pos0521;
  }
}
function vec2#4 worldPos0528 (Femdata: MeshPos pos0521)
{
  vec2 _t0529 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
  int _t052A = extractFemItem(CellIndex(MeshPos), int, pos0521);
  Femdata: Mesh _t052B = extractFem(pos0521, Mesh);
  vec2 _t052C = func msh_transform_004E7 (_t0529, _t052A, _t052B);
  return _t052C;
}
function Femdata: MeshPos#1 $exitPos052D (Femdata: Mesh mesh052E, int cellId052F, vec2 refPos0530, vec2 dPos0531, real[2] time0532)
{
  int _t0533 = -1;
  real _t0534 = time0532[1];
  int _t0535 = prim $r2i01B7 (_t0534);
  int[2] _t0537 = func nextCell40536 (_t0535, cellId052F, mesh052E);
  int _t0538 = 0;
  int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
  bool _t053A = prim !=0086 (_t0533, _t0539);
  if _t053A {
    real _t053B = time0532[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int[2] _t053D = func nextCell40536 (_t053C, cellId052F, mesh052E);
    int _t053E = 0;
    int _t053F = prim $sub01C0<int; %2> (_t053D, _t053E);
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    vec2 _t0542 = [_t0540, _t0541];
    real _t0543 = 0.e0;
    real _t0544 = 0.e0;
    vec2 _t0545 = [_t0543, _t0544];
    real _t0546 = 0.e0;
    real _t0547 = 0.e0;
    vec2 _t0548 = [_t0546, _t0547];
    vec2[3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time0532[1];
    int _t054B = prim $r2i01B7 (_t054A);
    int[2] _t054C = func nextCell40536 (_t054B, cellId052F, mesh052E);
    int _t054D = 1;
    int _t054E = prim $sub01C0<int; %2> (_t054C, _t054D);
    vec2 _t054F = prim $sub01C0<vec2; %3> (_t0549, _t054E);
    real _t0550 = -0.1e1;
    real _t0551 = 0.1e1;
    vec2 _t0552 = [_t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.1e1;
    vec2 _t0555 = [_t0553, _t0554];
    real _t0556 = 0.1e1;
    real _t0557 = 0.e0;
    vec2 _t0558 = [_t0556, _t0557];
    vec2[3] _t0559 = {_t0552, _t0555, _t0558};
    real _t055A = time0532[1];
    int _t055B = prim $r2i01B7 (_t055A);
    int[2] _t055C = func nextCell40536 (_t055B, cellId052F, mesh052E);
    int _t055D = 1;
    int _t055E = prim $sub01C0<int; %2> (_t055C, _t055D);
    vec2 _t055F = prim $sub01C0<vec2; %3> (_t0559, _t055E);
    real _t0560 = time0532[0];
    vec2 _t0561 = prim *0036<$[2]> (_t0560, dPos0531);
    vec2 _t0562 = prim +0017<$[2]> (_t0561, refPos0530);
    real _t0563 = _t0562[0];
    real _t0564 = time0532[0];
    vec2 _t0565 = prim *0036<$[2]> (_t0564, dPos0531);
    vec2 _t0566 = prim +0017<$[2]> (_t0565, refPos0530);
    real _t0567 = _t0566[1];
    real[2] _t0568 = {_t0563, _t0567};
    int _t0569 = 1;
    int _t056A = 1;
    int _t056B = 0;
    int[3] _t056C = {_t0569, _t056A, _t056B};
    real _t056D = time0532[1];
    int _t056E = prim $r2i01B7 (_t056D);
    int _t056F = prim $sub01C0<int; %3> (_t056C, _t056E);
    real _t0570 = prim $sub01C0<real; %2> (_t0568, _t056F);
    real _t0571 = 0.1e1;
    real _t0572 = 0.e0;
    real[2] _t0573 = {_t0571, _t0572};
    real _t0574 = 0.e0;
    real _t0575 = 0.e0;
    real[2] _t0576 = {_t0574, _t0575};
    real _t0577 = 0.e0;
    real _t0578 = 0.e0;
    real[2] _t0579 = {_t0577, _t0578};
    real[2][3] _t057A = {_t0573, _t0576, _t0579};
    real _t057B = time0532[1];
    int _t057C = prim $r2i01B7 (_t057B);
    real[2] _t057D = prim $sub01C0<real[2]; %3> (_t057A, _t057C);
    int _t057E = 1;
    int _t057F = 1;
    int _t0580 = 0;
    int[3] _t0581 = {_t057E, _t057F, _t0580};
    real _t0582 = time0532[1];
    int _t0583 = prim $r2i01B7 (_t0582);
    int _t0584 = prim $sub01C0<int; %3> (_t0581, _t0583);
    real _t0585 = prim $sub01C0<real; %2> (_t057D, _t0584);
    real _t0586 = prim -0026<$[]> (_t0570, _t0585);
    real _t0587 = -0.1e1;
    real _t0588 = 0.1e1;
    real[2] _t0589 = {_t0587, _t0588};
    real _t058A = 0.e0;
    real _t058B = 0.1e1;
    real[2] _t058C = {_t058A, _t058B};
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real[2] _t058F = {_t058D, _t058E};
    real[2][3] _t0590 = {_t0589, _t058C, _t058F};
    real _t0591 = time0532[1];
    int _t0592 = prim $r2i01B7 (_t0591);
    real[2] _t0593 = prim $sub01C0<real[2]; %3> (_t0590, _t0592);
    int _t0594 = 1;
    int _t0595 = 1;
    int _t0596 = 0;
    int[3] _t0597 = {_t0594, _t0595, _t0596};
    real _t0598 = time0532[1];
    int _t0599 = prim $r2i01B7 (_t0598);
    int _t059A = prim $sub01C0<int; %3> (_t0597, _t0599);
    real _t059B = prim $sub01C0<real; %2> (_t0593, _t059A);
    real _t059C = prim /0055 (_t0586, _t059B);
    vec2 _t059D = prim *0038<$[2]> (_t055F, _t059C);
    vec2 _t059E = prim +0017<$[2]> (_t054F, _t059D);
    real _t059F = time0532[1];
    int _t05A0 = prim $r2i01B7 (_t059F);
    int[2] _t05A1 = func nextCell40536 (_t05A0, cellId052F, mesh052E);
    int _t05A2 = 1;
    int _t05A3 = prim $sub01C0<int; %2> (_t05A1, _t05A2);
    Femdata: MeshPos _t05A4 = extractFemItemN((mesh052E, _t053F, _t059E, _t05A3),RefBuild(Mesh),);
    return _t05A4;
  } else {
    real _t05A5 = time0532[0];
    vec2 _t05A6 = prim *0036<$[2]> (_t05A5, dPos0531);
    vec2 _t05A7 = prim +0017<$[2]> (_t05A6, refPos0530);
    Femdata: MeshPos _t05A8 = extractFemItemN((mesh052E, _t05A7),InvalidBuildBoundary(MeshPos),);
    return _t05A8;
  }
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
function vec2#4 _enter05B2 (vec2 refPos05B3, vec2 dPos05B4)
{
  real time05B5 = +inf;
  int face05B6 = -1;
  real faceTime05B7 = -inf;
  real _t05B8 = 0.1e1;
  real _t05B9 = 0.e0;
  vec2 _t05BA = [_t05B8, _t05B9];
  vec2 _t05BB = prim -0026<$[2]> (_t05BA, refPos05B3);
  real _t05BC = -0.1e1;
  real _t05BD = 0.1e1;
  vec2 _t05BE = [_t05BC, _t05BD];
  real _t05BF = -0.1e1;
  real _t05C0 = 0.1e1;
  vec2 _t05C1 = [_t05BF, _t05C0];
  real _t05C2 = prim ×00BD (dPos05B4, _t05C1);
  vec2 _t05C3 = prim /0057<$[2]> (_t05BE, _t05C2);
  real _t05C4 = prim ×00BD (_t05BB, _t05C3);
  real _t05C5 = -0.1e-15;
  bool _t05C6 = prim >=007E (_t05C4, _t05C5);
  real _t05C7 = 0.1e1;
  real _t05C8 = 0.e0;
  vec2 _t05C9 = [_t05C7, _t05C8];
  vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos05B3);
  real _t05CB = -0.1e1;
  real _t05CC = 0.1e1;
  vec2 _t05CD = [_t05CB, _t05CC];
  real _t05CE = -0.1e1;
  real _t05CF = 0.1e1;
  vec2 _t05D0 = [_t05CE, _t05CF];
  real _t05D1 = prim ×00BD (dPos05B4, _t05D0);
  vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
  real _t05D3 = prim ×00BD (_t05CA, _t05D2);
  bool _t05D4 = prim >0080 (time05B5, _t05D3);
  real _t05D5 = -0.1e1;
  real _t05D6 = 0.1e1;
  vec2 _t05D7 = [_t05D5, _t05D6];
  real _t05D8 = prim ×00BD (dPos05B4, _t05D7);
  real _t05D9 = prim |()|00B5<$[]> (_t05D8);
  real _t05DA = 0.1e-20;
  bool _t05DB = prim >=007E (_t05D9, _t05DA);
  bool _t05DC = prim $and01C4 (_t05D4, _t05DB);
  bool _t05DD = prim $and01C4 (_t05C6, _t05DC);
  if _t05DD {
    real _t05DE = 0.1e1;
    real _t05DF = 0.1e-8;
    real _t05E0 = prim +0017<$[]> (_t05DE, _t05DF);
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.1e1;
    vec2 _t05E3 = [_t05E1, _t05E2];
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec2 _t05E6 = [_t05E4, _t05E5];
    vec2 _t05E7 = prim -0026<$[2]> (_t05E6, refPos05B3);
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.1e1;
    vec2 _t05EA = [_t05E8, _t05E9];
    real _t05EB = -0.1e1;
    real _t05EC = 0.1e1;
    vec2 _t05ED = [_t05EB, _t05EC];
    real _t05EE = prim ×00BD (dPos05B4, _t05ED);
    vec2 _t05EF = prim /0057<$[2]> (_t05EA, _t05EE);
    real _t05F0 = prim ×00BD (_t05E7, _t05EF);
    vec2 _t05F1 = prim *0038<$[2]> (dPos05B4, _t05F0);
    vec2 _t05F2 = prim +0017<$[2]> (refPos05B3, _t05F1);
    real _t05F3 = prim •00CE<$[2]; $[2]; $[]> (_t05E3, _t05F2);
    bool _t05F4 = prim >0080 (_t05E0, _t05F3);
    real _t05F5 = 0.1e-8;
    real _t05F6 = 0.1e-8;
    vec2 _t05F7 = [_t05F5, _t05F6];
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    vec2 _t05FA = [_t05F8, _t05F9];
    vec2 _t05FB = prim -0026<$[2]> (_t05FA, refPos05B3);
    real _t05FC = -0.1e1;
    real _t05FD = 0.1e1;
    vec2 _t05FE = [_t05FC, _t05FD];
    real _t05FF = -0.1e1;
    real _t0600 = 0.1e1;
    vec2 _t0601 = [_t05FF, _t0600];
    real _t0602 = prim ×00BD (dPos05B4, _t0601);
    vec2 _t0603 = prim /0057<$[2]> (_t05FE, _t0602);
    real _t0604 = prim ×00BD (_t05FB, _t0603);
    vec2 _t0605 = prim *0038<$[2]> (dPos05B4, _t0604);
    vec2 _t0606 = prim +0017<$[2]> (refPos05B3, _t0605);
    vec2 _t0607 = prim +0017<$[2]> (_t05F7, _t0606);
    real _t0608 = _t0607[0];
    real _t0609 = -0.e0;
    bool _t060A = prim >0080 (_t0608, _t0609);
    real _t060B = 0.1e-8;
    real _t060C = 0.1e-8;
    vec2 _t060D = [_t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec2 _t0610 = [_t060E, _t060F];
    vec2 _t0611 = prim -0026<$[2]> (_t0610, refPos05B3);
    real _t0612 = -0.1e1;
    real _t0613 = 0.1e1;
    vec2 _t0614 = [_t0612, _t0613];
    real _t0615 = -0.1e1;
    real _t0616 = 0.1e1;
    vec2 _t0617 = [_t0615, _t0616];
    real _t0618 = prim ×00BD (dPos05B4, _t0617);
    vec2 _t0619 = prim /0057<$[2]> (_t0614, _t0618);
    real _t061A = prim ×00BD (_t0611, _t0619);
    vec2 _t061B = prim *0038<$[2]> (dPos05B4, _t061A);
    vec2 _t061C = prim +0017<$[2]> (refPos05B3, _t061B);
    vec2 _t061D = prim +0017<$[2]> (_t060D, _t061C);
    real _t061E = _t061D[1];
    real _t061F = -0.e0;
    bool _t0620 = prim >0080 (_t061E, _t061F);
    bool _t0621 = prim $and01C4 (_t060A, _t0620);
    bool _t0622 = prim $and01C4 (_t05F4, _t0621);
    if _t0622 {
      real _t0623 = 0.1e1;
      real _t0624 = 0.e0;
      vec2 _t0625 = [_t0623, _t0624];
      vec2 _t0626 = prim -0026<$[2]> (_t0625, refPos05B3);
      real _t0627 = -0.1e1;
      real _t0628 = 0.1e1;
      vec2 _t0629 = [_t0627, _t0628];
      real _t062A = -0.1e1;
      real _t062B = 0.1e1;
      vec2 _t062C = [_t062A, _t062B];
      real _t062D = prim ×00BD (dPos05B4, _t062C);
      vec2 _t062E = prim /0057<$[2]> (_t0629, _t062D);
      time05B5 = prim ×00BD (_t0626, _t062E);
      face05B6 = 0;
    }
  }
  real _t062F = 0.e0;
  real _t0630 = 0.e0;
  vec2 _t0631 = [_t062F, _t0630];
  vec2 _t0632 = prim -0026<$[2]> (_t0631, refPos05B3);
  real _t0633 = 0.e0;
  real _t0634 = 0.1e1;
  vec2 _t0635 = [_t0633, _t0634];
  real _t0636 = 0.e0;
  real _t0637 = 0.1e1;
  vec2 _t0638 = [_t0636, _t0637];
  real _t0639 = prim ×00BD (dPos05B4, _t0638);
  vec2 _t063A = prim /0057<$[2]> (_t0635, _t0639);
  real _t063B = prim ×00BD (_t0632, _t063A);
  real _t063C = -0.1e-15;
  bool _t063D = prim >=007E (_t063B, _t063C);
  real _t063E = 0.e0;
  real _t063F = 0.e0;
  vec2 _t0640 = [_t063E, _t063F];
  vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos05B3);
  real _t0642 = 0.e0;
  real _t0643 = 0.1e1;
  vec2 _t0644 = [_t0642, _t0643];
  real _t0645 = 0.e0;
  real _t0646 = 0.1e1;
  vec2 _t0647 = [_t0645, _t0646];
  real _t0648 = prim ×00BD (dPos05B4, _t0647);
  vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
  real _t064A = prim ×00BD (_t0641, _t0649);
  bool _t064B = prim >0080 (time05B5, _t064A);
  real _t064C = 0.e0;
  real _t064D = 0.1e1;
  vec2 _t064E = [_t064C, _t064D];
  real _t064F = prim ×00BD (dPos05B4, _t064E);
  real _t0650 = prim |()|00B5<$[]> (_t064F);
  real _t0651 = 0.1e-20;
  bool _t0652 = prim >=007E (_t0650, _t0651);
  bool _t0653 = prim $and01C4 (_t064B, _t0652);
  bool _t0654 = prim $and01C4 (_t063D, _t0653);
  if _t0654 {
    real _t0655 = 0.1e1;
    real _t0656 = 0.1e-8;
    real _t0657 = prim +0017<$[]> (_t0655, _t0656);
    real _t0658 = 0.1e1;
    real _t0659 = 0.1e1;
    vec2 _t065A = [_t0658, _t0659];
    real _t065B = 0.e0;
    real _t065C = 0.e0;
    vec2 _t065D = [_t065B, _t065C];
    vec2 _t065E = prim -0026<$[2]> (_t065D, refPos05B3);
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec2 _t0661 = [_t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec2 _t0664 = [_t0662, _t0663];
    real _t0665 = prim ×00BD (dPos05B4, _t0664);
    vec2 _t0666 = prim /0057<$[2]> (_t0661, _t0665);
    real _t0667 = prim ×00BD (_t065E, _t0666);
    vec2 _t0668 = prim *0038<$[2]> (dPos05B4, _t0667);
    vec2 _t0669 = prim +0017<$[2]> (refPos05B3, _t0668);
    real _t066A = prim •00CE<$[2]; $[2]; $[]> (_t065A, _t0669);
    bool _t066B = prim >0080 (_t0657, _t066A);
    real _t066C = 0.1e-8;
    real _t066D = 0.1e-8;
    vec2 _t066E = [_t066C, _t066D];
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec2 _t0671 = [_t066F, _t0670];
    vec2 _t0672 = prim -0026<$[2]> (_t0671, refPos05B3);
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    vec2 _t0675 = [_t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    vec2 _t0678 = [_t0676, _t0677];
    real _t0679 = prim ×00BD (dPos05B4, _t0678);
    vec2 _t067A = prim /0057<$[2]> (_t0675, _t0679);
    real _t067B = prim ×00BD (_t0672, _t067A);
    vec2 _t067C = prim *0038<$[2]> (dPos05B4, _t067B);
    vec2 _t067D = prim +0017<$[2]> (refPos05B3, _t067C);
    vec2 _t067E = prim +0017<$[2]> (_t066E, _t067D);
    real _t067F = _t067E[0];
    real _t0680 = -0.e0;
    bool _t0681 = prim >0080 (_t067F, _t0680);
    real _t0682 = 0.1e-8;
    real _t0683 = 0.1e-8;
    vec2 _t0684 = [_t0682, _t0683];
    real _t0685 = 0.e0;
    real _t0686 = 0.e0;
    vec2 _t0687 = [_t0685, _t0686];
    vec2 _t0688 = prim -0026<$[2]> (_t0687, refPos05B3);
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec2 _t068B = [_t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.1e1;
    vec2 _t068E = [_t068C, _t068D];
    real _t068F = prim ×00BD (dPos05B4, _t068E);
    vec2 _t0690 = prim /0057<$[2]> (_t068B, _t068F);
    real _t0691 = prim ×00BD (_t0688, _t0690);
    vec2 _t0692 = prim *0038<$[2]> (dPos05B4, _t0691);
    vec2 _t0693 = prim +0017<$[2]> (refPos05B3, _t0692);
    vec2 _t0694 = prim +0017<$[2]> (_t0684, _t0693);
    real _t0695 = _t0694[1];
    real _t0696 = -0.e0;
    bool _t0697 = prim >0080 (_t0695, _t0696);
    bool _t0698 = prim $and01C4 (_t0681, _t0697);
    bool _t0699 = prim $and01C4 (_t066B, _t0698);
    if _t0699 {
      real _t069A = 0.e0;
      real _t069B = 0.e0;
      vec2 _t069C = [_t069A, _t069B];
      vec2 _t069D = prim -0026<$[2]> (_t069C, refPos05B3);
      real _t069E = 0.e0;
      real _t069F = 0.1e1;
      vec2 _t06A0 = [_t069E, _t069F];
      real _t06A1 = 0.e0;
      real _t06A2 = 0.1e1;
      vec2 _t06A3 = [_t06A1, _t06A2];
      real _t06A4 = prim ×00BD (dPos05B4, _t06A3);
      vec2 _t06A5 = prim /0057<$[2]> (_t06A0, _t06A4);
      time05B5 = prim ×00BD (_t069D, _t06A5);
      face05B6 = 1;
    }
  }
  real _t06A6 = 0.e0;
  real _t06A7 = 0.e0;
  vec2 _t06A8 = [_t06A6, _t06A7];
  vec2 _t06A9 = prim -0026<$[2]> (_t06A8, refPos05B3);
  real _t06AA = 0.1e1;
  real _t06AB = 0.e0;
  vec2 _t06AC = [_t06AA, _t06AB];
  real _t06AD = 0.1e1;
  real _t06AE = 0.e0;
  vec2 _t06AF = [_t06AD, _t06AE];
  real _t06B0 = prim ×00BD (dPos05B4, _t06AF);
  vec2 _t06B1 = prim /0057<$[2]> (_t06AC, _t06B0);
  real _t06B2 = prim ×00BD (_t06A9, _t06B1);
  real _t06B3 = -0.1e-15;
  bool _t06B4 = prim >=007E (_t06B2, _t06B3);
  real _t06B5 = 0.e0;
  real _t06B6 = 0.e0;
  vec2 _t06B7 = [_t06B5, _t06B6];
  vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos05B3);
  real _t06B9 = 0.1e1;
  real _t06BA = 0.e0;
  vec2 _t06BB = [_t06B9, _t06BA];
  real _t06BC = 0.1e1;
  real _t06BD = 0.e0;
  vec2 _t06BE = [_t06BC, _t06BD];
  real _t06BF = prim ×00BD (dPos05B4, _t06BE);
  vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
  real _t06C1 = prim ×00BD (_t06B8, _t06C0);
  bool _t06C2 = prim >0080 (time05B5, _t06C1);
  real _t06C3 = 0.1e1;
  real _t06C4 = 0.e0;
  vec2 _t06C5 = [_t06C3, _t06C4];
  real _t06C6 = prim ×00BD (dPos05B4, _t06C5);
  real _t06C7 = prim |()|00B5<$[]> (_t06C6);
  real _t06C8 = 0.1e-20;
  bool _t06C9 = prim >=007E (_t06C7, _t06C8);
  bool _t06CA = prim $and01C4 (_t06C2, _t06C9);
  bool _t06CB = prim $and01C4 (_t06B4, _t06CA);
  if _t06CB {
    real _t06CC = 0.1e1;
    real _t06CD = 0.1e-8;
    real _t06CE = prim +0017<$[]> (_t06CC, _t06CD);
    real _t06CF = 0.1e1;
    real _t06D0 = 0.1e1;
    vec2 _t06D1 = [_t06CF, _t06D0];
    real _t06D2 = 0.e0;
    real _t06D3 = 0.e0;
    vec2 _t06D4 = [_t06D2, _t06D3];
    vec2 _t06D5 = prim -0026<$[2]> (_t06D4, refPos05B3);
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.e0;
    vec2 _t06D8 = [_t06D6, _t06D7];
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    vec2 _t06DB = [_t06D9, _t06DA];
    real _t06DC = prim ×00BD (dPos05B4, _t06DB);
    vec2 _t06DD = prim /0057<$[2]> (_t06D8, _t06DC);
    real _t06DE = prim ×00BD (_t06D5, _t06DD);
    vec2 _t06DF = prim *0038<$[2]> (dPos05B4, _t06DE);
    vec2 _t06E0 = prim +0017<$[2]> (refPos05B3, _t06DF);
    real _t06E1 = prim •00CE<$[2]; $[2]; $[]> (_t06D1, _t06E0);
    bool _t06E2 = prim >0080 (_t06CE, _t06E1);
    real _t06E3 = 0.1e-8;
    real _t06E4 = 0.1e-8;
    vec2 _t06E5 = [_t06E3, _t06E4];
    real _t06E6 = 0.e0;
    real _t06E7 = 0.e0;
    vec2 _t06E8 = [_t06E6, _t06E7];
    vec2 _t06E9 = prim -0026<$[2]> (_t06E8, refPos05B3);
    real _t06EA = 0.1e1;
    real _t06EB = 0.e0;
    vec2 _t06EC = [_t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    vec2 _t06EF = [_t06ED, _t06EE];
    real _t06F0 = prim ×00BD (dPos05B4, _t06EF);
    vec2 _t06F1 = prim /0057<$[2]> (_t06EC, _t06F0);
    real _t06F2 = prim ×00BD (_t06E9, _t06F1);
    vec2 _t06F3 = prim *0038<$[2]> (dPos05B4, _t06F2);
    vec2 _t06F4 = prim +0017<$[2]> (refPos05B3, _t06F3);
    vec2 _t06F5 = prim +0017<$[2]> (_t06E5, _t06F4);
    real _t06F6 = _t06F5[0];
    real _t06F7 = -0.e0;
    bool _t06F8 = prim >0080 (_t06F6, _t06F7);
    real _t06F9 = 0.1e-8;
    real _t06FA = 0.1e-8;
    vec2 _t06FB = [_t06F9, _t06FA];
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec2 _t06FE = [_t06FC, _t06FD];
    vec2 _t06FF = prim -0026<$[2]> (_t06FE, refPos05B3);
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    vec2 _t0702 = [_t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    vec2 _t0705 = [_t0703, _t0704];
    real _t0706 = prim ×00BD (dPos05B4, _t0705);
    vec2 _t0707 = prim /0057<$[2]> (_t0702, _t0706);
    real _t0708 = prim ×00BD (_t06FF, _t0707);
    vec2 _t0709 = prim *0038<$[2]> (dPos05B4, _t0708);
    vec2 _t070A = prim +0017<$[2]> (refPos05B3, _t0709);
    vec2 _t070B = prim +0017<$[2]> (_t06FB, _t070A);
    real _t070C = _t070B[1];
    real _t070D = -0.e0;
    bool _t070E = prim >0080 (_t070C, _t070D);
    bool _t070F = prim $and01C4 (_t06F8, _t070E);
    bool _t0710 = prim $and01C4 (_t06E2, _t070F);
    if _t0710 {
      real _t0711 = 0.e0;
      real _t0712 = 0.e0;
      vec2 _t0713 = [_t0711, _t0712];
      vec2 _t0714 = prim -0026<$[2]> (_t0713, refPos05B3);
      real _t0715 = 0.1e1;
      real _t0716 = 0.e0;
      vec2 _t0717 = [_t0715, _t0716];
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      real _t071B = prim ×00BD (dPos05B4, _t071A);
      vec2 _t071C = prim /0057<$[2]> (_t0717, _t071B);
      time05B5 = prim ×00BD (_t0714, _t071C);
      face05B6 = 2;
    }
  }
  int _t071D = -1;
  bool _t071E = prim !=0086 (face05B6, _t071D);
  if _t071E {
    real _t071F = 0.e0;
    real _t0720 = prim max0125 (time05B5, _t071F);
    real _t0721 = (real)face05B6;
    vec2 _t0722 = [_t0720, _t0721];
    return _t0722;
  } else {
    real _t0723 = -0.1e1;
    real _t0724 = -0.1e1;
    vec2 _t0725 = [_t0723, _t0724];
    return _t0725;
  }
}
function vec2#2 _exit0726 (vec2 refPos05B3, vec2 dPos05B4, int i0727)
{
  real time0728 = +inf;
  int face0729 = -1;
  real faceTime072A = -inf;
  real _t072B = 0.1e1;
  real _t072C = 0.e0;
  vec2 _t072D = [_t072B, _t072C];
  vec2 _t072E = prim -0026<$[2]> (_t072D, refPos05B3);
  real _t072F = -0.1e1;
  real _t0730 = 0.1e1;
  vec2 _t0731 = [_t072F, _t0730];
  real _t0732 = -0.1e1;
  real _t0733 = 0.1e1;
  vec2 _t0734 = [_t0732, _t0733];
  real _t0735 = prim ×00BD (dPos05B4, _t0734);
  vec2 _t0736 = prim /0057<$[2]> (_t0731, _t0735);
  real _t0737 = prim ×00BD (_t072E, _t0736);
  real _t0738 = -0.1e-15;
  bool _t0739 = prim >=007E (_t0737, _t0738);
  real _t073A = 0.1e1;
  real _t073B = 0.e0;
  vec2 _t073C = [_t073A, _t073B];
  vec2 _t073D = prim -0026<$[2]> (_t073C, refPos05B3);
  real _t073E = -0.1e1;
  real _t073F = 0.1e1;
  vec2 _t0740 = [_t073E, _t073F];
  real _t0741 = -0.1e1;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos05B4, _t0743);
  vec2 _t0745 = prim /0057<$[2]> (_t0740, _t0744);
  real _t0746 = prim ×00BD (_t073D, _t0745);
  bool _t0747 = prim >0080 (time0728, _t0746);
  real _t0748 = -0.1e1;
  real _t0749 = 0.1e1;
  vec2 _t074A = [_t0748, _t0749];
  real _t074B = prim ×00BD (dPos05B4, _t074A);
  real _t074C = prim |()|00B5<$[]> (_t074B);
  real _t074D = 0.1e-20;
  bool _t074E = prim >=007E (_t074C, _t074D);
  bool _t074F = prim $and01C4 (_t0747, _t074E);
  bool _t0750 = prim $and01C4 (_t0739, _t074F);
  if _t0750 {
    int _t0751 = 0;
    bool _t0752 = prim !=0086 (i0727, _t0751);
    if _t0752 {
      real _t0753 = 0.1e1;
      real _t0754 = 0.e0;
      vec2 _t0755 = [_t0753, _t0754];
      vec2 _t0756 = prim -0026<$[2]> (_t0755, refPos05B3);
      real _t0757 = -0.1e1;
      real _t0758 = 0.1e1;
      vec2 _t0759 = [_t0757, _t0758];
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = prim ×00BD (dPos05B4, _t075C);
      vec2 _t075E = prim /0057<$[2]> (_t0759, _t075D);
      time0728 = prim ×00BD (_t0756, _t075E);
      face0729 = 0;
    } else {
      real _t075F = 0.1e1;
      real _t0760 = 0.e0;
      vec2 _t0761 = [_t075F, _t0760];
      vec2 _t0762 = prim -0026<$[2]> (_t0761, refPos05B3);
      real _t0763 = -0.1e1;
      real _t0764 = 0.1e1;
      vec2 _t0765 = [_t0763, _t0764];
      real _t0766 = -0.1e1;
      real _t0767 = 0.1e1;
      vec2 _t0768 = [_t0766, _t0767];
      real _t0769 = prim ×00BD (dPos05B4, _t0768);
      vec2 _t076A = prim /0057<$[2]> (_t0765, _t0769);
      faceTime072A = prim ×00BD (_t0762, _t076A);
    }
  }
  real _t076B = 0.e0;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  vec2 _t076E = prim -0026<$[2]> (_t076D, refPos05B3);
  real _t076F = 0.e0;
  real _t0770 = 0.1e1;
  vec2 _t0771 = [_t076F, _t0770];
  real _t0772 = 0.e0;
  real _t0773 = 0.1e1;
  vec2 _t0774 = [_t0772, _t0773];
  real _t0775 = prim ×00BD (dPos05B4, _t0774);
  vec2 _t0776 = prim /0057<$[2]> (_t0771, _t0775);
  real _t0777 = prim ×00BD (_t076E, _t0776);
  real _t0778 = -0.1e-15;
  bool _t0779 = prim >=007E (_t0777, _t0778);
  real _t077A = 0.e0;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  vec2 _t077D = prim -0026<$[2]> (_t077C, refPos05B3);
  real _t077E = 0.e0;
  real _t077F = 0.1e1;
  vec2 _t0780 = [_t077E, _t077F];
  real _t0781 = 0.e0;
  real _t0782 = 0.1e1;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos05B4, _t0783);
  vec2 _t0785 = prim /0057<$[2]> (_t0780, _t0784);
  real _t0786 = prim ×00BD (_t077D, _t0785);
  bool _t0787 = prim >0080 (time0728, _t0786);
  real _t0788 = 0.e0;
  real _t0789 = 0.1e1;
  vec2 _t078A = [_t0788, _t0789];
  real _t078B = prim ×00BD (dPos05B4, _t078A);
  real _t078C = prim |()|00B5<$[]> (_t078B);
  real _t078D = 0.1e-20;
  bool _t078E = prim >=007E (_t078C, _t078D);
  bool _t078F = prim $and01C4 (_t0787, _t078E);
  bool _t0790 = prim $and01C4 (_t0779, _t078F);
  if _t0790 {
    int _t0791 = 1;
    bool _t0792 = prim !=0086 (i0727, _t0791);
    if _t0792 {
      real _t0793 = 0.e0;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      vec2 _t0796 = prim -0026<$[2]> (_t0795, refPos05B3);
      real _t0797 = 0.e0;
      real _t0798 = 0.1e1;
      vec2 _t0799 = [_t0797, _t0798];
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = prim ×00BD (dPos05B4, _t079C);
      vec2 _t079E = prim /0057<$[2]> (_t0799, _t079D);
      time0728 = prim ×00BD (_t0796, _t079E);
      face0729 = 1;
    } else {
      real _t079F = 0.e0;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      vec2 _t07A2 = prim -0026<$[2]> (_t07A1, refPos05B3);
      real _t07A3 = 0.e0;
      real _t07A4 = 0.1e1;
      vec2 _t07A5 = [_t07A3, _t07A4];
      real _t07A6 = 0.e0;
      real _t07A7 = 0.1e1;
      vec2 _t07A8 = [_t07A6, _t07A7];
      real _t07A9 = prim ×00BD (dPos05B4, _t07A8);
      vec2 _t07AA = prim /0057<$[2]> (_t07A5, _t07A9);
      faceTime072A = prim ×00BD (_t07A2, _t07AA);
    }
  }
  real _t07AB = 0.e0;
  real _t07AC = 0.e0;
  vec2 _t07AD = [_t07AB, _t07AC];
  vec2 _t07AE = prim -0026<$[2]> (_t07AD, refPos05B3);
  real _t07AF = 0.1e1;
  real _t07B0 = 0.e0;
  vec2 _t07B1 = [_t07AF, _t07B0];
  real _t07B2 = 0.1e1;
  real _t07B3 = 0.e0;
  vec2 _t07B4 = [_t07B2, _t07B3];
  real _t07B5 = prim ×00BD (dPos05B4, _t07B4);
  vec2 _t07B6 = prim /0057<$[2]> (_t07B1, _t07B5);
  real _t07B7 = prim ×00BD (_t07AE, _t07B6);
  real _t07B8 = -0.1e-15;
  bool _t07B9 = prim >=007E (_t07B7, _t07B8);
  real _t07BA = 0.e0;
  real _t07BB = 0.e0;
  vec2 _t07BC = [_t07BA, _t07BB];
  vec2 _t07BD = prim -0026<$[2]> (_t07BC, refPos05B3);
  real _t07BE = 0.1e1;
  real _t07BF = 0.e0;
  vec2 _t07C0 = [_t07BE, _t07BF];
  real _t07C1 = 0.1e1;
  real _t07C2 = 0.e0;
  vec2 _t07C3 = [_t07C1, _t07C2];
  real _t07C4 = prim ×00BD (dPos05B4, _t07C3);
  vec2 _t07C5 = prim /0057<$[2]> (_t07C0, _t07C4);
  real _t07C6 = prim ×00BD (_t07BD, _t07C5);
  bool _t07C7 = prim >0080 (time0728, _t07C6);
  real _t07C8 = 0.1e1;
  real _t07C9 = 0.e0;
  vec2 _t07CA = [_t07C8, _t07C9];
  real _t07CB = prim ×00BD (dPos05B4, _t07CA);
  real _t07CC = prim |()|00B5<$[]> (_t07CB);
  real _t07CD = 0.1e-20;
  bool _t07CE = prim >=007E (_t07CC, _t07CD);
  bool _t07CF = prim $and01C4 (_t07C7, _t07CE);
  bool _t07D0 = prim $and01C4 (_t07B9, _t07CF);
  if _t07D0 {
    int _t07D1 = 2;
    bool _t07D2 = prim !=0086 (i0727, _t07D1);
    if _t07D2 {
      real _t07D3 = 0.e0;
      real _t07D4 = 0.e0;
      vec2 _t07D5 = [_t07D3, _t07D4];
      vec2 _t07D6 = prim -0026<$[2]> (_t07D5, refPos05B3);
      real _t07D7 = 0.1e1;
      real _t07D8 = 0.e0;
      vec2 _t07D9 = [_t07D7, _t07D8];
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = prim ×00BD (dPos05B4, _t07DC);
      vec2 _t07DE = prim /0057<$[2]> (_t07D9, _t07DD);
      time0728 = prim ×00BD (_t07D6, _t07DE);
      face0729 = 2;
    } else {
      real _t07DF = 0.e0;
      real _t07E0 = 0.e0;
      vec2 _t07E1 = [_t07DF, _t07E0];
      vec2 _t07E2 = prim -0026<$[2]> (_t07E1, refPos05B3);
      real _t07E3 = 0.1e1;
      real _t07E4 = 0.e0;
      vec2 _t07E5 = [_t07E3, _t07E4];
      real _t07E6 = 0.1e1;
      real _t07E7 = 0.e0;
      vec2 _t07E8 = [_t07E6, _t07E7];
      real _t07E9 = prim ×00BD (dPos05B4, _t07E8);
      vec2 _t07EA = prim /0057<$[2]> (_t07E5, _t07E9);
      faceTime072A = prim ×00BD (_t07E2, _t07EA);
    }
  }
  int _t07EB = -1;
  bool _t07EC = prim !=0086 (face0729, _t07EB);
  if _t07EC {
    real _t07ED = 0.e0;
    real _t07EE = prim max0125 (time0728, _t07ED);
    real _t07EF = (real)face0729;
    vec2 _t07F0 = [_t07EE, _t07EF];
    return _t07F0;
  } else {
    real _t07F1 = -inf;
    bool _t07F2 = prim ==0084 (_t07F1, faceTime072A);
    if _t07F2 {
      real _t07F3 = -0.1e1;
      real _t07F4 = -0.1e1;
      vec2 _t07F5 = [_t07F3, _t07F4];
      return _t07F5;
    } else {
      real _t07F6 = (real)i0727;
      vec2 _t07F7 = [faceTime072A, _t07F6];
      return _t07F7;
    }
  }
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
  tensor[3,3] _t080B = [camU07FF, camV0800, camN07FD];
  tensor[3,3] _t080C = prim transpose0145<%3; %3> (_t080B);
  vec3 _t080D = prim normalize0137<$[3]> (lightVsp0475);
  light080E = prim •00CE<$[3,3]; $[3]; $[3]> (_t080C, _t080D);
  R080F = func refcell04C6 (a0454);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  vec3[] umm1084E;
  vec3[] umm20851;
  Femdata: MeshPos pos0854;
  vec2 _pos0855;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    vec3[0] _t084F = {};
    vec3[] _t0850 = (vec3[])_t084F;
    umm1084E = _t0850;
    vec3[0] _t0852 = {};
    vec3[] _t0853 = (vec3[])_t0852;
    umm20851 = _t0853;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    _t0858 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    _t0857 = extractFem(pos0854, Mesh);
    _t0856 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    _t0859 = femField(_t0857,_t0858,field(2)[2],Transform,);
    _pos0855 = prim @00A5<#∞; %2; $[2]> (_t0859, _t0856);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E = func _enter05B2 (_t0882, _t088D);
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2 = func _enter05B2 (_t08C6, _t08D1);
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5 = func _enter05B2 (_t08E9, _t08F4);
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918 = func _enter05B2 (_t090C, _t0917);
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      _t0923 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      _t0922 = extractFem(pos0854, Mesh);
      _t0921 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      _t0924 = femField(_t0922,_t0923,field(2)[2],Transform,);
      _pos0855 = prim @00A5<#∞; %2; $[2]> (_t0924, _t0921);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E = func worldPos0528 (pos0854);
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977 = func worldPos0528 (pos0854);
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980 = func worldPos0528 (pos0854);
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    vec3 _t098F = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 startPos0990 = prim +0017<$[3]> (rayOrig0823, _t098F);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC = func _exit0726 (_t0993, _t09AA, _t09AB);
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9 = func _exit0726 (_t09D0, _t09E7, _t09E8);
      Femdata: MeshPos posp09EA = func $exitPos052D (_t09B6, _t09B7, _t09B8, _t09CF, _t09E9);
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        _t09F6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
        _t09F5 = extractFem(pos0854, Mesh);
        _t09F4 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
        _t09F7 = femField(_t09F5,_t09F6,field(2)[2],Transform,);
        _pos0855 = prim @00A5<#∞; %2; $[2]> (_t09F7, _t09F4);
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11 = func !=047F (_t0A0D, _t0A10);
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19 = func worldPos0528 (pos0854);
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      _t0A24 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      _t0A23 = extractFem(pos0854, Mesh);
      _t0A22 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      _t0A25 = femField(_t0A23,_t0A24,field(2)[2],Transform,);
      _pos0855 = prim @00A5<#∞; %2; $[2]> (_t0A25, _t0A22);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function bool#1 !=047F (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0484 = prim !=0086 (_t0482, _t0483);
  return _t0484;
}
function bool#0 ==0485 (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0486 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0487 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0488 = prim ==0082 (_t0486, _t0487);
  return _t0488;
}
function Femdata: MeshPos#0 findPos0489 (Femdata: Mesh mesh048A, vec2 pos048B)
{
  real _t048C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048E = [_t048C, _t048D];
  newtonInt048F = 0;
  cellInt0490 = extractFemItem(StartCell(Mesh), int, mesh048A);
  int _t0491 = extractFemItem(NumCell(Mesh), int, mesh048A);
  int _t0492 = 1;
  numCell0493 = prim -0024 (_t0491, _t0492);
  yayCells0494 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh048A, pos048B : vec2);
  foreach cellItter0495 in yayCells0494 {
    cellInt0490 = cellItter0495;
    field(2)[2] _t0496 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
    field(2)[2,2] _t0497 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0496);
    field(2)[2,2] _t0498 = prim inv015B<#∞; %2> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t049B = [_t0499, _t049A];
    A049C = prim @00A5<#∞; %2; $[2,2]> (_t0498, _t049B);
    int _t049D = 0;
    int _t049E = 16;
    int[] _t049F = prim $range01C3 (_t049D, _t049E);
    foreach newtonItter04C2 in _t049F {
      field(2)[2] _t04A0 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
      field(2)[2] _t04A1 = prim -002E<#∞; %2; $[2]> (_t04A0, pos048B);
      field(2)[2] _t04A2 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A049C, _t04A1);
      delta04A3 = prim @00A5<#∞; %2; $[2]> (_t04A2, xn048E);
      xn048E = prim -0026<$[2]> (xn048E, delta04A3);
      real _t04A4 = 0.1e-7;
      real _t04A5 = 0.1e-7;
      real _t04A6 = prim *0034 (_t04A4, _t04A5);
      real _t04A7 = prim •00CE<$[2]; $[2]; $[]> (delta04A3, delta04A3);
      bool _t04A8 = prim >=007E (_t04A6, _t04A7);
      if _t04A8 {
        real _t04A9 = 0.1e1;
        real _t04AA = 0.1e-8;
        real _t04AB = prim +0017<$[]> (_t04A9, _t04AA);
        real _t04AC = 0.1e1;
        real _t04AD = 0.1e1;
        vec2 _t04AE = [_t04AC, _t04AD];
        real _t04AF = prim •00CE<$[2]; $[2]; $[]> (_t04AE, xn048E);
        bool _t04B0 = prim >0080 (_t04AB, _t04AF);
        real _t04B1 = 0.1e-8;
        real _t04B2 = 0.1e-8;
        vec2 _t04B3 = [_t04B1, _t04B2];
        vec2 _t04B4 = prim +0017<$[2]> (_t04B3, xn048E);
        real _t04B5 = _t04B4[0];
        real _t04B6 = -0.e0;
        bool _t04B7 = prim >0080 (_t04B5, _t04B6);
        real _t04B8 = 0.1e-8;
        real _t04B9 = 0.1e-8;
        vec2 _t04BA = [_t04B8, _t04B9];
        vec2 _t04BB = prim +0017<$[2]> (_t04BA, xn048E);
        real _t04BC = _t04BB[1];
        real _t04BD = -0.e0;
        bool _t04BE = prim >0080 (_t04BC, _t04BD);
        bool _t04BF = prim $and01C4 (_t04B7, _t04BE);
        bool _t04C0 = prim $and01C4 (_t04B0, _t04BF);
        if _t04C0 {
          Femdata: MeshPos _t04C1 = extractFemItemN((mesh048A, cellInt0490, xn048E, pos048B),AllBuild(MeshPos),);
          return _t04C1;
        }
      }
    }
  }
  string _t04C3 = "Bad end 2";
  string _t04C4 = "\n";
  print (_t04C3, _t04C4);
  Femdata: MeshPos _t04C5 = extractFemItemN((mesh048A),InvalidBuild(MeshPos),);
  return _t04C5;
}
function Femdata: RefCell#1 refcell04C6 (Femdata: Mesh arg004C7)
{
  Femdata: RefCell _t04C8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004C7);
  return _t04C8;
}
function Femdata: MeshCell[]#0 cells04C9 (Femdata: Mesh arg004CA)
{
  Femdata: MeshCell[] _t04CB = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004CA);
  return _t04CB;
}
function Femdata: MeshCell[]#0 cells04CC (Femdata: Mesh arg004CA)
{
  int _t04CD = 0;
  int _t04CE = extractFemItem(NumCell(Mesh), int, arg004CA);
  int[] _t04CF = prim $range01C3 (_t04CD, _t04CE);
  Femdata: MeshCell[] accum04D2 = {};
  foreach i04D0 in _t04CF {
    Femdata: MeshCell _t04D1 = loadFem(MeshCell, arg004CA, i04D0);
    accum04D2 = prim @0010<Femdata: MeshCell> (accum04D2, _t04D1);
  }
  return accum04D2;
}
function int#0 numCell04D3 (Femdata: Mesh arg004C7)
{
  int _t04D4 = extractFemItem(NumCell(Mesh), int, arg004C7);
  return _t04D4;
}
function tensor[2,2,2,2]#0 msh_transform_304D5 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04D9 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D9);
  field(2)[2,2,2] _t04DB = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04DA);
  field(2)[2,2,2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04DB);
  tensor[2,2,2,2] _t04DD = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04DC, pos04D6);
  return _t04DD;
}
function tensor[2,2,2]#0 msh_transform_204DE (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04DF = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E0 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DF);
  field(2)[2,2,2] _t04E1 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04E0);
  tensor[2,2,2] _t04E2 = prim @00A5<#∞; %2; $[2,2,2]> (_t04E1, pos04D6);
  return _t04E2;
}
function tensor[2,2]#0 msh_transform_104E3 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E4 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E5 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E4);
  tensor[2,2] _t04E6 = prim @00A5<#∞; %2; $[2,2]> (_t04E5, pos04D6);
  return _t04E6;
}
function vec2#2 msh_transform_004E7 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E8 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  vec2 _t04E9 = prim @00A5<#∞; %2; $[2]> (_t04E8, pos04D6);
  return _t04E9;
}
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0520 (Femdata: MeshPos pos0521)
{
  bool _t0522 = extractFemItem(WorldTest(MeshPos), bool, pos0521);
  if _t0522 {
    vec2 _t0523 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
    int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos0521);
    Femdata: Mesh _t0525 = extractFem(pos0521, Mesh);
    vec2 _t0526 = func msh_transform_004E7 (_t0523, _t0524, _t0525);
    Femdata: MeshPos _t0527 = extractFemItemN((pos0521, _t0526),NewWorld(MeshPos),);
    return _t0527;
  } else {
    return pos0521;
  }
}
function vec2#4 worldPos0528 (Femdata: MeshPos pos0521)
{
  vec2 _t0529 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
  int _t052A = extractFemItem(CellIndex(MeshPos), int, pos0521);
  Femdata: Mesh _t052B = extractFem(pos0521, Mesh);
  vec2 _t052C = func msh_transform_004E7 (_t0529, _t052A, _t052B);
  return _t052C;
}
function Femdata: MeshPos#1 $exitPos052D (Femdata: Mesh mesh052E, int cellId052F, vec2 refPos0530, vec2 dPos0531, real[2] time0532)
{
  int _t0533 = -1;
  real _t0534 = time0532[1];
  int _t0535 = prim $r2i01B7 (_t0534);
  int[2] _t0537 = func nextCell40536 (_t0535, cellId052F, mesh052E);
  int _t0538 = 0;
  int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
  bool _t053A = prim !=0086 (_t0533, _t0539);
  if _t053A {
    real _t053B = time0532[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int[2] _t053D = func nextCell40536 (_t053C, cellId052F, mesh052E);
    int _t053E = 0;
    int _t053F = prim $sub01C0<int; %2> (_t053D, _t053E);
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    vec2 _t0542 = [_t0540, _t0541];
    real _t0543 = 0.e0;
    real _t0544 = 0.e0;
    vec2 _t0545 = [_t0543, _t0544];
    real _t0546 = 0.e0;
    real _t0547 = 0.e0;
    vec2 _t0548 = [_t0546, _t0547];
    vec2[3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time0532[1];
    int _t054B = prim $r2i01B7 (_t054A);
    int[2] _t054C = func nextCell40536 (_t054B, cellId052F, mesh052E);
    int _t054D = 1;
    int _t054E = prim $sub01C0<int; %2> (_t054C, _t054D);
    vec2 _t054F = prim $sub01C0<vec2; %3> (_t0549, _t054E);
    real _t0550 = -0.1e1;
    real _t0551 = 0.1e1;
    vec2 _t0552 = [_t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.1e1;
    vec2 _t0555 = [_t0553, _t0554];
    real _t0556 = 0.1e1;
    real _t0557 = 0.e0;
    vec2 _t0558 = [_t0556, _t0557];
    vec2[3] _t0559 = {_t0552, _t0555, _t0558};
    real _t055A = time0532[1];
    int _t055B = prim $r2i01B7 (_t055A);
    int[2] _t055C = func nextCell40536 (_t055B, cellId052F, mesh052E);
    int _t055D = 1;
    int _t055E = prim $sub01C0<int; %2> (_t055C, _t055D);
    vec2 _t055F = prim $sub01C0<vec2; %3> (_t0559, _t055E);
    real _t0560 = time0532[0];
    vec2 _t0561 = prim *0036<$[2]> (_t0560, dPos0531);
    vec2 _t0562 = prim +0017<$[2]> (_t0561, refPos0530);
    real _t0563 = _t0562[0];
    real _t0564 = time0532[0];
    vec2 _t0565 = prim *0036<$[2]> (_t0564, dPos0531);
    vec2 _t0566 = prim +0017<$[2]> (_t0565, refPos0530);
    real _t0567 = _t0566[1];
    real[2] _t0568 = {_t0563, _t0567};
    int _t0569 = 1;
    int _t056A = 1;
    int _t056B = 0;
    int[3] _t056C = {_t0569, _t056A, _t056B};
    real _t056D = time0532[1];
    int _t056E = prim $r2i01B7 (_t056D);
    int _t056F = prim $sub01C0<int; %3> (_t056C, _t056E);
    real _t0570 = prim $sub01C0<real; %2> (_t0568, _t056F);
    real _t0571 = 0.1e1;
    real _t0572 = 0.e0;
    real[2] _t0573 = {_t0571, _t0572};
    real _t0574 = 0.e0;
    real _t0575 = 0.e0;
    real[2] _t0576 = {_t0574, _t0575};
    real _t0577 = 0.e0;
    real _t0578 = 0.e0;
    real[2] _t0579 = {_t0577, _t0578};
    real[2][3] _t057A = {_t0573, _t0576, _t0579};
    real _t057B = time0532[1];
    int _t057C = prim $r2i01B7 (_t057B);
    real[2] _t057D = prim $sub01C0<real[2]; %3> (_t057A, _t057C);
    int _t057E = 1;
    int _t057F = 1;
    int _t0580 = 0;
    int[3] _t0581 = {_t057E, _t057F, _t0580};
    real _t0582 = time0532[1];
    int _t0583 = prim $r2i01B7 (_t0582);
    int _t0584 = prim $sub01C0<int; %3> (_t0581, _t0583);
    real _t0585 = prim $sub01C0<real; %2> (_t057D, _t0584);
    real _t0586 = prim -0026<$[]> (_t0570, _t0585);
    real _t0587 = -0.1e1;
    real _t0588 = 0.1e1;
    real[2] _t0589 = {_t0587, _t0588};
    real _t058A = 0.e0;
    real _t058B = 0.1e1;
    real[2] _t058C = {_t058A, _t058B};
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real[2] _t058F = {_t058D, _t058E};
    real[2][3] _t0590 = {_t0589, _t058C, _t058F};
    real _t0591 = time0532[1];
    int _t0592 = prim $r2i01B7 (_t0591);
    real[2] _t0593 = prim $sub01C0<real[2]; %3> (_t0590, _t0592);
    int _t0594 = 1;
    int _t0595 = 1;
    int _t0596 = 0;
    int[3] _t0597 = {_t0594, _t0595, _t0596};
    real _t0598 = time0532[1];
    int _t0599 = prim $r2i01B7 (_t0598);
    int _t059A = prim $sub01C0<int; %3> (_t0597, _t0599);
    real _t059B = prim $sub01C0<real; %2> (_t0593, _t059A);
    real _t059C = prim /0055 (_t0586, _t059B);
    vec2 _t059D = prim *0038<$[2]> (_t055F, _t059C);
    vec2 _t059E = prim +0017<$[2]> (_t054F, _t059D);
    real _t059F = time0532[1];
    int _t05A0 = prim $r2i01B7 (_t059F);
    int[2] _t05A1 = func nextCell40536 (_t05A0, cellId052F, mesh052E);
    int _t05A2 = 1;
    int _t05A3 = prim $sub01C0<int; %2> (_t05A1, _t05A2);
    Femdata: MeshPos _t05A4 = extractFemItemN((mesh052E, _t053F, _t059E, _t05A3),RefBuild(Mesh),);
    return _t05A4;
  } else {
    real _t05A5 = time0532[0];
    vec2 _t05A6 = prim *0036<$[2]> (_t05A5, dPos0531);
    vec2 _t05A7 = prim +0017<$[2]> (_t05A6, refPos0530);
    Femdata: MeshPos _t05A8 = extractFemItemN((mesh052E, _t05A7),InvalidBuildBoundary(MeshPos),);
    return _t05A8;
  }
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
function vec2#4 _enter05B2 (vec2 refPos05B3, vec2 dPos05B4)
{
  real time05B5 = +inf;
  int face05B6 = -1;
  real faceTime05B7 = -inf;
  real _t05B8 = 0.1e1;
  real _t05B9 = 0.e0;
  vec2 _t05BA = [_t05B8, _t05B9];
  vec2 _t05BB = prim -0026<$[2]> (_t05BA, refPos05B3);
  real _t05BC = -0.1e1;
  real _t05BD = 0.1e1;
  vec2 _t05BE = [_t05BC, _t05BD];
  real _t05BF = -0.1e1;
  real _t05C0 = 0.1e1;
  vec2 _t05C1 = [_t05BF, _t05C0];
  real _t05C2 = prim ×00BD (dPos05B4, _t05C1);
  vec2 _t05C3 = prim /0057<$[2]> (_t05BE, _t05C2);
  real _t05C4 = prim ×00BD (_t05BB, _t05C3);
  real _t05C5 = -0.1e-15;
  bool _t05C6 = prim >=007E (_t05C4, _t05C5);
  real _t05C7 = 0.1e1;
  real _t05C8 = 0.e0;
  vec2 _t05C9 = [_t05C7, _t05C8];
  vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos05B3);
  real _t05CB = -0.1e1;
  real _t05CC = 0.1e1;
  vec2 _t05CD = [_t05CB, _t05CC];
  real _t05CE = -0.1e1;
  real _t05CF = 0.1e1;
  vec2 _t05D0 = [_t05CE, _t05CF];
  real _t05D1 = prim ×00BD (dPos05B4, _t05D0);
  vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
  real _t05D3 = prim ×00BD (_t05CA, _t05D2);
  bool _t05D4 = prim >0080 (time05B5, _t05D3);
  real _t05D5 = -0.1e1;
  real _t05D6 = 0.1e1;
  vec2 _t05D7 = [_t05D5, _t05D6];
  real _t05D8 = prim ×00BD (dPos05B4, _t05D7);
  real _t05D9 = prim |()|00B5<$[]> (_t05D8);
  real _t05DA = 0.1e-20;
  bool _t05DB = prim >=007E (_t05D9, _t05DA);
  bool _t05DC = prim $and01C4 (_t05D4, _t05DB);
  bool _t05DD = prim $and01C4 (_t05C6, _t05DC);
  if _t05DD {
    real _t05DE = 0.1e1;
    real _t05DF = 0.1e-8;
    real _t05E0 = prim +0017<$[]> (_t05DE, _t05DF);
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.1e1;
    vec2 _t05E3 = [_t05E1, _t05E2];
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec2 _t05E6 = [_t05E4, _t05E5];
    vec2 _t05E7 = prim -0026<$[2]> (_t05E6, refPos05B3);
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.1e1;
    vec2 _t05EA = [_t05E8, _t05E9];
    real _t05EB = -0.1e1;
    real _t05EC = 0.1e1;
    vec2 _t05ED = [_t05EB, _t05EC];
    real _t05EE = prim ×00BD (dPos05B4, _t05ED);
    vec2 _t05EF = prim /0057<$[2]> (_t05EA, _t05EE);
    real _t05F0 = prim ×00BD (_t05E7, _t05EF);
    vec2 _t05F1 = prim *0038<$[2]> (dPos05B4, _t05F0);
    vec2 _t05F2 = prim +0017<$[2]> (refPos05B3, _t05F1);
    real _t05F3 = prim •00CE<$[2]; $[2]; $[]> (_t05E3, _t05F2);
    bool _t05F4 = prim >0080 (_t05E0, _t05F3);
    real _t05F5 = 0.1e-8;
    real _t05F6 = 0.1e-8;
    vec2 _t05F7 = [_t05F5, _t05F6];
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    vec2 _t05FA = [_t05F8, _t05F9];
    vec2 _t05FB = prim -0026<$[2]> (_t05FA, refPos05B3);
    real _t05FC = -0.1e1;
    real _t05FD = 0.1e1;
    vec2 _t05FE = [_t05FC, _t05FD];
    real _t05FF = -0.1e1;
    real _t0600 = 0.1e1;
    vec2 _t0601 = [_t05FF, _t0600];
    real _t0602 = prim ×00BD (dPos05B4, _t0601);
    vec2 _t0603 = prim /0057<$[2]> (_t05FE, _t0602);
    real _t0604 = prim ×00BD (_t05FB, _t0603);
    vec2 _t0605 = prim *0038<$[2]> (dPos05B4, _t0604);
    vec2 _t0606 = prim +0017<$[2]> (refPos05B3, _t0605);
    vec2 _t0607 = prim +0017<$[2]> (_t05F7, _t0606);
    real _t0608 = _t0607[0];
    real _t0609 = -0.e0;
    bool _t060A = prim >0080 (_t0608, _t0609);
    real _t060B = 0.1e-8;
    real _t060C = 0.1e-8;
    vec2 _t060D = [_t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec2 _t0610 = [_t060E, _t060F];
    vec2 _t0611 = prim -0026<$[2]> (_t0610, refPos05B3);
    real _t0612 = -0.1e1;
    real _t0613 = 0.1e1;
    vec2 _t0614 = [_t0612, _t0613];
    real _t0615 = -0.1e1;
    real _t0616 = 0.1e1;
    vec2 _t0617 = [_t0615, _t0616];
    real _t0618 = prim ×00BD (dPos05B4, _t0617);
    vec2 _t0619 = prim /0057<$[2]> (_t0614, _t0618);
    real _t061A = prim ×00BD (_t0611, _t0619);
    vec2 _t061B = prim *0038<$[2]> (dPos05B4, _t061A);
    vec2 _t061C = prim +0017<$[2]> (refPos05B3, _t061B);
    vec2 _t061D = prim +0017<$[2]> (_t060D, _t061C);
    real _t061E = _t061D[1];
    real _t061F = -0.e0;
    bool _t0620 = prim >0080 (_t061E, _t061F);
    bool _t0621 = prim $and01C4 (_t060A, _t0620);
    bool _t0622 = prim $and01C4 (_t05F4, _t0621);
    if _t0622 {
      real _t0623 = 0.1e1;
      real _t0624 = 0.e0;
      vec2 _t0625 = [_t0623, _t0624];
      vec2 _t0626 = prim -0026<$[2]> (_t0625, refPos05B3);
      real _t0627 = -0.1e1;
      real _t0628 = 0.1e1;
      vec2 _t0629 = [_t0627, _t0628];
      real _t062A = -0.1e1;
      real _t062B = 0.1e1;
      vec2 _t062C = [_t062A, _t062B];
      real _t062D = prim ×00BD (dPos05B4, _t062C);
      vec2 _t062E = prim /0057<$[2]> (_t0629, _t062D);
      time05B5 = prim ×00BD (_t0626, _t062E);
      face05B6 = 0;
    }
  }
  real _t062F = 0.e0;
  real _t0630 = 0.e0;
  vec2 _t0631 = [_t062F, _t0630];
  vec2 _t0632 = prim -0026<$[2]> (_t0631, refPos05B3);
  real _t0633 = 0.e0;
  real _t0634 = 0.1e1;
  vec2 _t0635 = [_t0633, _t0634];
  real _t0636 = 0.e0;
  real _t0637 = 0.1e1;
  vec2 _t0638 = [_t0636, _t0637];
  real _t0639 = prim ×00BD (dPos05B4, _t0638);
  vec2 _t063A = prim /0057<$[2]> (_t0635, _t0639);
  real _t063B = prim ×00BD (_t0632, _t063A);
  real _t063C = -0.1e-15;
  bool _t063D = prim >=007E (_t063B, _t063C);
  real _t063E = 0.e0;
  real _t063F = 0.e0;
  vec2 _t0640 = [_t063E, _t063F];
  vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos05B3);
  real _t0642 = 0.e0;
  real _t0643 = 0.1e1;
  vec2 _t0644 = [_t0642, _t0643];
  real _t0645 = 0.e0;
  real _t0646 = 0.1e1;
  vec2 _t0647 = [_t0645, _t0646];
  real _t0648 = prim ×00BD (dPos05B4, _t0647);
  vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
  real _t064A = prim ×00BD (_t0641, _t0649);
  bool _t064B = prim >0080 (time05B5, _t064A);
  real _t064C = 0.e0;
  real _t064D = 0.1e1;
  vec2 _t064E = [_t064C, _t064D];
  real _t064F = prim ×00BD (dPos05B4, _t064E);
  real _t0650 = prim |()|00B5<$[]> (_t064F);
  real _t0651 = 0.1e-20;
  bool _t0652 = prim >=007E (_t0650, _t0651);
  bool _t0653 = prim $and01C4 (_t064B, _t0652);
  bool _t0654 = prim $and01C4 (_t063D, _t0653);
  if _t0654 {
    real _t0655 = 0.1e1;
    real _t0656 = 0.1e-8;
    real _t0657 = prim +0017<$[]> (_t0655, _t0656);
    real _t0658 = 0.1e1;
    real _t0659 = 0.1e1;
    vec2 _t065A = [_t0658, _t0659];
    real _t065B = 0.e0;
    real _t065C = 0.e0;
    vec2 _t065D = [_t065B, _t065C];
    vec2 _t065E = prim -0026<$[2]> (_t065D, refPos05B3);
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec2 _t0661 = [_t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec2 _t0664 = [_t0662, _t0663];
    real _t0665 = prim ×00BD (dPos05B4, _t0664);
    vec2 _t0666 = prim /0057<$[2]> (_t0661, _t0665);
    real _t0667 = prim ×00BD (_t065E, _t0666);
    vec2 _t0668 = prim *0038<$[2]> (dPos05B4, _t0667);
    vec2 _t0669 = prim +0017<$[2]> (refPos05B3, _t0668);
    real _t066A = prim •00CE<$[2]; $[2]; $[]> (_t065A, _t0669);
    bool _t066B = prim >0080 (_t0657, _t066A);
    real _t066C = 0.1e-8;
    real _t066D = 0.1e-8;
    vec2 _t066E = [_t066C, _t066D];
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec2 _t0671 = [_t066F, _t0670];
    vec2 _t0672 = prim -0026<$[2]> (_t0671, refPos05B3);
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    vec2 _t0675 = [_t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    vec2 _t0678 = [_t0676, _t0677];
    real _t0679 = prim ×00BD (dPos05B4, _t0678);
    vec2 _t067A = prim /0057<$[2]> (_t0675, _t0679);
    real _t067B = prim ×00BD (_t0672, _t067A);
    vec2 _t067C = prim *0038<$[2]> (dPos05B4, _t067B);
    vec2 _t067D = prim +0017<$[2]> (refPos05B3, _t067C);
    vec2 _t067E = prim +0017<$[2]> (_t066E, _t067D);
    real _t067F = _t067E[0];
    real _t0680 = -0.e0;
    bool _t0681 = prim >0080 (_t067F, _t0680);
    real _t0682 = 0.1e-8;
    real _t0683 = 0.1e-8;
    vec2 _t0684 = [_t0682, _t0683];
    real _t0685 = 0.e0;
    real _t0686 = 0.e0;
    vec2 _t0687 = [_t0685, _t0686];
    vec2 _t0688 = prim -0026<$[2]> (_t0687, refPos05B3);
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec2 _t068B = [_t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.1e1;
    vec2 _t068E = [_t068C, _t068D];
    real _t068F = prim ×00BD (dPos05B4, _t068E);
    vec2 _t0690 = prim /0057<$[2]> (_t068B, _t068F);
    real _t0691 = prim ×00BD (_t0688, _t0690);
    vec2 _t0692 = prim *0038<$[2]> (dPos05B4, _t0691);
    vec2 _t0693 = prim +0017<$[2]> (refPos05B3, _t0692);
    vec2 _t0694 = prim +0017<$[2]> (_t0684, _t0693);
    real _t0695 = _t0694[1];
    real _t0696 = -0.e0;
    bool _t0697 = prim >0080 (_t0695, _t0696);
    bool _t0698 = prim $and01C4 (_t0681, _t0697);
    bool _t0699 = prim $and01C4 (_t066B, _t0698);
    if _t0699 {
      real _t069A = 0.e0;
      real _t069B = 0.e0;
      vec2 _t069C = [_t069A, _t069B];
      vec2 _t069D = prim -0026<$[2]> (_t069C, refPos05B3);
      real _t069E = 0.e0;
      real _t069F = 0.1e1;
      vec2 _t06A0 = [_t069E, _t069F];
      real _t06A1 = 0.e0;
      real _t06A2 = 0.1e1;
      vec2 _t06A3 = [_t06A1, _t06A2];
      real _t06A4 = prim ×00BD (dPos05B4, _t06A3);
      vec2 _t06A5 = prim /0057<$[2]> (_t06A0, _t06A4);
      time05B5 = prim ×00BD (_t069D, _t06A5);
      face05B6 = 1;
    }
  }
  real _t06A6 = 0.e0;
  real _t06A7 = 0.e0;
  vec2 _t06A8 = [_t06A6, _t06A7];
  vec2 _t06A9 = prim -0026<$[2]> (_t06A8, refPos05B3);
  real _t06AA = 0.1e1;
  real _t06AB = 0.e0;
  vec2 _t06AC = [_t06AA, _t06AB];
  real _t06AD = 0.1e1;
  real _t06AE = 0.e0;
  vec2 _t06AF = [_t06AD, _t06AE];
  real _t06B0 = prim ×00BD (dPos05B4, _t06AF);
  vec2 _t06B1 = prim /0057<$[2]> (_t06AC, _t06B0);
  real _t06B2 = prim ×00BD (_t06A9, _t06B1);
  real _t06B3 = -0.1e-15;
  bool _t06B4 = prim >=007E (_t06B2, _t06B3);
  real _t06B5 = 0.e0;
  real _t06B6 = 0.e0;
  vec2 _t06B7 = [_t06B5, _t06B6];
  vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos05B3);
  real _t06B9 = 0.1e1;
  real _t06BA = 0.e0;
  vec2 _t06BB = [_t06B9, _t06BA];
  real _t06BC = 0.1e1;
  real _t06BD = 0.e0;
  vec2 _t06BE = [_t06BC, _t06BD];
  real _t06BF = prim ×00BD (dPos05B4, _t06BE);
  vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
  real _t06C1 = prim ×00BD (_t06B8, _t06C0);
  bool _t06C2 = prim >0080 (time05B5, _t06C1);
  real _t06C3 = 0.1e1;
  real _t06C4 = 0.e0;
  vec2 _t06C5 = [_t06C3, _t06C4];
  real _t06C6 = prim ×00BD (dPos05B4, _t06C5);
  real _t06C7 = prim |()|00B5<$[]> (_t06C6);
  real _t06C8 = 0.1e-20;
  bool _t06C9 = prim >=007E (_t06C7, _t06C8);
  bool _t06CA = prim $and01C4 (_t06C2, _t06C9);
  bool _t06CB = prim $and01C4 (_t06B4, _t06CA);
  if _t06CB {
    real _t06CC = 0.1e1;
    real _t06CD = 0.1e-8;
    real _t06CE = prim +0017<$[]> (_t06CC, _t06CD);
    real _t06CF = 0.1e1;
    real _t06D0 = 0.1e1;
    vec2 _t06D1 = [_t06CF, _t06D0];
    real _t06D2 = 0.e0;
    real _t06D3 = 0.e0;
    vec2 _t06D4 = [_t06D2, _t06D3];
    vec2 _t06D5 = prim -0026<$[2]> (_t06D4, refPos05B3);
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.e0;
    vec2 _t06D8 = [_t06D6, _t06D7];
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    vec2 _t06DB = [_t06D9, _t06DA];
    real _t06DC = prim ×00BD (dPos05B4, _t06DB);
    vec2 _t06DD = prim /0057<$[2]> (_t06D8, _t06DC);
    real _t06DE = prim ×00BD (_t06D5, _t06DD);
    vec2 _t06DF = prim *0038<$[2]> (dPos05B4, _t06DE);
    vec2 _t06E0 = prim +0017<$[2]> (refPos05B3, _t06DF);
    real _t06E1 = prim •00CE<$[2]; $[2]; $[]> (_t06D1, _t06E0);
    bool _t06E2 = prim >0080 (_t06CE, _t06E1);
    real _t06E3 = 0.1e-8;
    real _t06E4 = 0.1e-8;
    vec2 _t06E5 = [_t06E3, _t06E4];
    real _t06E6 = 0.e0;
    real _t06E7 = 0.e0;
    vec2 _t06E8 = [_t06E6, _t06E7];
    vec2 _t06E9 = prim -0026<$[2]> (_t06E8, refPos05B3);
    real _t06EA = 0.1e1;
    real _t06EB = 0.e0;
    vec2 _t06EC = [_t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    vec2 _t06EF = [_t06ED, _t06EE];
    real _t06F0 = prim ×00BD (dPos05B4, _t06EF);
    vec2 _t06F1 = prim /0057<$[2]> (_t06EC, _t06F0);
    real _t06F2 = prim ×00BD (_t06E9, _t06F1);
    vec2 _t06F3 = prim *0038<$[2]> (dPos05B4, _t06F2);
    vec2 _t06F4 = prim +0017<$[2]> (refPos05B3, _t06F3);
    vec2 _t06F5 = prim +0017<$[2]> (_t06E5, _t06F4);
    real _t06F6 = _t06F5[0];
    real _t06F7 = -0.e0;
    bool _t06F8 = prim >0080 (_t06F6, _t06F7);
    real _t06F9 = 0.1e-8;
    real _t06FA = 0.1e-8;
    vec2 _t06FB = [_t06F9, _t06FA];
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec2 _t06FE = [_t06FC, _t06FD];
    vec2 _t06FF = prim -0026<$[2]> (_t06FE, refPos05B3);
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    vec2 _t0702 = [_t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    vec2 _t0705 = [_t0703, _t0704];
    real _t0706 = prim ×00BD (dPos05B4, _t0705);
    vec2 _t0707 = prim /0057<$[2]> (_t0702, _t0706);
    real _t0708 = prim ×00BD (_t06FF, _t0707);
    vec2 _t0709 = prim *0038<$[2]> (dPos05B4, _t0708);
    vec2 _t070A = prim +0017<$[2]> (refPos05B3, _t0709);
    vec2 _t070B = prim +0017<$[2]> (_t06FB, _t070A);
    real _t070C = _t070B[1];
    real _t070D = -0.e0;
    bool _t070E = prim >0080 (_t070C, _t070D);
    bool _t070F = prim $and01C4 (_t06F8, _t070E);
    bool _t0710 = prim $and01C4 (_t06E2, _t070F);
    if _t0710 {
      real _t0711 = 0.e0;
      real _t0712 = 0.e0;
      vec2 _t0713 = [_t0711, _t0712];
      vec2 _t0714 = prim -0026<$[2]> (_t0713, refPos05B3);
      real _t0715 = 0.1e1;
      real _t0716 = 0.e0;
      vec2 _t0717 = [_t0715, _t0716];
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      real _t071B = prim ×00BD (dPos05B4, _t071A);
      vec2 _t071C = prim /0057<$[2]> (_t0717, _t071B);
      time05B5 = prim ×00BD (_t0714, _t071C);
      face05B6 = 2;
    }
  }
  int _t071D = -1;
  bool _t071E = prim !=0086 (face05B6, _t071D);
  if _t071E {
    real _t071F = 0.e0;
    real _t0720 = prim max0125 (time05B5, _t071F);
    real _t0721 = (real)face05B6;
    vec2 _t0722 = [_t0720, _t0721];
    return _t0722;
  } else {
    real _t0723 = -0.1e1;
    real _t0724 = -0.1e1;
    vec2 _t0725 = [_t0723, _t0724];
    return _t0725;
  }
}
function vec2#2 _exit0726 (vec2 refPos05B3, vec2 dPos05B4, int i0727)
{
  real time0728 = +inf;
  int face0729 = -1;
  real faceTime072A = -inf;
  real _t072B = 0.1e1;
  real _t072C = 0.e0;
  vec2 _t072D = [_t072B, _t072C];
  vec2 _t072E = prim -0026<$[2]> (_t072D, refPos05B3);
  real _t072F = -0.1e1;
  real _t0730 = 0.1e1;
  vec2 _t0731 = [_t072F, _t0730];
  real _t0732 = -0.1e1;
  real _t0733 = 0.1e1;
  vec2 _t0734 = [_t0732, _t0733];
  real _t0735 = prim ×00BD (dPos05B4, _t0734);
  vec2 _t0736 = prim /0057<$[2]> (_t0731, _t0735);
  real _t0737 = prim ×00BD (_t072E, _t0736);
  real _t0738 = -0.1e-15;
  bool _t0739 = prim >=007E (_t0737, _t0738);
  real _t073A = 0.1e1;
  real _t073B = 0.e0;
  vec2 _t073C = [_t073A, _t073B];
  vec2 _t073D = prim -0026<$[2]> (_t073C, refPos05B3);
  real _t073E = -0.1e1;
  real _t073F = 0.1e1;
  vec2 _t0740 = [_t073E, _t073F];
  real _t0741 = -0.1e1;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos05B4, _t0743);
  vec2 _t0745 = prim /0057<$[2]> (_t0740, _t0744);
  real _t0746 = prim ×00BD (_t073D, _t0745);
  bool _t0747 = prim >0080 (time0728, _t0746);
  real _t0748 = -0.1e1;
  real _t0749 = 0.1e1;
  vec2 _t074A = [_t0748, _t0749];
  real _t074B = prim ×00BD (dPos05B4, _t074A);
  real _t074C = prim |()|00B5<$[]> (_t074B);
  real _t074D = 0.1e-20;
  bool _t074E = prim >=007E (_t074C, _t074D);
  bool _t074F = prim $and01C4 (_t0747, _t074E);
  bool _t0750 = prim $and01C4 (_t0739, _t074F);
  if _t0750 {
    int _t0751 = 0;
    bool _t0752 = prim !=0086 (i0727, _t0751);
    if _t0752 {
      real _t0753 = 0.1e1;
      real _t0754 = 0.e0;
      vec2 _t0755 = [_t0753, _t0754];
      vec2 _t0756 = prim -0026<$[2]> (_t0755, refPos05B3);
      real _t0757 = -0.1e1;
      real _t0758 = 0.1e1;
      vec2 _t0759 = [_t0757, _t0758];
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = prim ×00BD (dPos05B4, _t075C);
      vec2 _t075E = prim /0057<$[2]> (_t0759, _t075D);
      time0728 = prim ×00BD (_t0756, _t075E);
      face0729 = 0;
    } else {
      real _t075F = 0.1e1;
      real _t0760 = 0.e0;
      vec2 _t0761 = [_t075F, _t0760];
      vec2 _t0762 = prim -0026<$[2]> (_t0761, refPos05B3);
      real _t0763 = -0.1e1;
      real _t0764 = 0.1e1;
      vec2 _t0765 = [_t0763, _t0764];
      real _t0766 = -0.1e1;
      real _t0767 = 0.1e1;
      vec2 _t0768 = [_t0766, _t0767];
      real _t0769 = prim ×00BD (dPos05B4, _t0768);
      vec2 _t076A = prim /0057<$[2]> (_t0765, _t0769);
      faceTime072A = prim ×00BD (_t0762, _t076A);
    }
  }
  real _t076B = 0.e0;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  vec2 _t076E = prim -0026<$[2]> (_t076D, refPos05B3);
  real _t076F = 0.e0;
  real _t0770 = 0.1e1;
  vec2 _t0771 = [_t076F, _t0770];
  real _t0772 = 0.e0;
  real _t0773 = 0.1e1;
  vec2 _t0774 = [_t0772, _t0773];
  real _t0775 = prim ×00BD (dPos05B4, _t0774);
  vec2 _t0776 = prim /0057<$[2]> (_t0771, _t0775);
  real _t0777 = prim ×00BD (_t076E, _t0776);
  real _t0778 = -0.1e-15;
  bool _t0779 = prim >=007E (_t0777, _t0778);
  real _t077A = 0.e0;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  vec2 _t077D = prim -0026<$[2]> (_t077C, refPos05B3);
  real _t077E = 0.e0;
  real _t077F = 0.1e1;
  vec2 _t0780 = [_t077E, _t077F];
  real _t0781 = 0.e0;
  real _t0782 = 0.1e1;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos05B4, _t0783);
  vec2 _t0785 = prim /0057<$[2]> (_t0780, _t0784);
  real _t0786 = prim ×00BD (_t077D, _t0785);
  bool _t0787 = prim >0080 (time0728, _t0786);
  real _t0788 = 0.e0;
  real _t0789 = 0.1e1;
  vec2 _t078A = [_t0788, _t0789];
  real _t078B = prim ×00BD (dPos05B4, _t078A);
  real _t078C = prim |()|00B5<$[]> (_t078B);
  real _t078D = 0.1e-20;
  bool _t078E = prim >=007E (_t078C, _t078D);
  bool _t078F = prim $and01C4 (_t0787, _t078E);
  bool _t0790 = prim $and01C4 (_t0779, _t078F);
  if _t0790 {
    int _t0791 = 1;
    bool _t0792 = prim !=0086 (i0727, _t0791);
    if _t0792 {
      real _t0793 = 0.e0;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      vec2 _t0796 = prim -0026<$[2]> (_t0795, refPos05B3);
      real _t0797 = 0.e0;
      real _t0798 = 0.1e1;
      vec2 _t0799 = [_t0797, _t0798];
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = prim ×00BD (dPos05B4, _t079C);
      vec2 _t079E = prim /0057<$[2]> (_t0799, _t079D);
      time0728 = prim ×00BD (_t0796, _t079E);
      face0729 = 1;
    } else {
      real _t079F = 0.e0;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      vec2 _t07A2 = prim -0026<$[2]> (_t07A1, refPos05B3);
      real _t07A3 = 0.e0;
      real _t07A4 = 0.1e1;
      vec2 _t07A5 = [_t07A3, _t07A4];
      real _t07A6 = 0.e0;
      real _t07A7 = 0.1e1;
      vec2 _t07A8 = [_t07A6, _t07A7];
      real _t07A9 = prim ×00BD (dPos05B4, _t07A8);
      vec2 _t07AA = prim /0057<$[2]> (_t07A5, _t07A9);
      faceTime072A = prim ×00BD (_t07A2, _t07AA);
    }
  }
  real _t07AB = 0.e0;
  real _t07AC = 0.e0;
  vec2 _t07AD = [_t07AB, _t07AC];
  vec2 _t07AE = prim -0026<$[2]> (_t07AD, refPos05B3);
  real _t07AF = 0.1e1;
  real _t07B0 = 0.e0;
  vec2 _t07B1 = [_t07AF, _t07B0];
  real _t07B2 = 0.1e1;
  real _t07B3 = 0.e0;
  vec2 _t07B4 = [_t07B2, _t07B3];
  real _t07B5 = prim ×00BD (dPos05B4, _t07B4);
  vec2 _t07B6 = prim /0057<$[2]> (_t07B1, _t07B5);
  real _t07B7 = prim ×00BD (_t07AE, _t07B6);
  real _t07B8 = -0.1e-15;
  bool _t07B9 = prim >=007E (_t07B7, _t07B8);
  real _t07BA = 0.e0;
  real _t07BB = 0.e0;
  vec2 _t07BC = [_t07BA, _t07BB];
  vec2 _t07BD = prim -0026<$[2]> (_t07BC, refPos05B3);
  real _t07BE = 0.1e1;
  real _t07BF = 0.e0;
  vec2 _t07C0 = [_t07BE, _t07BF];
  real _t07C1 = 0.1e1;
  real _t07C2 = 0.e0;
  vec2 _t07C3 = [_t07C1, _t07C2];
  real _t07C4 = prim ×00BD (dPos05B4, _t07C3);
  vec2 _t07C5 = prim /0057<$[2]> (_t07C0, _t07C4);
  real _t07C6 = prim ×00BD (_t07BD, _t07C5);
  bool _t07C7 = prim >0080 (time0728, _t07C6);
  real _t07C8 = 0.1e1;
  real _t07C9 = 0.e0;
  vec2 _t07CA = [_t07C8, _t07C9];
  real _t07CB = prim ×00BD (dPos05B4, _t07CA);
  real _t07CC = prim |()|00B5<$[]> (_t07CB);
  real _t07CD = 0.1e-20;
  bool _t07CE = prim >=007E (_t07CC, _t07CD);
  bool _t07CF = prim $and01C4 (_t07C7, _t07CE);
  bool _t07D0 = prim $and01C4 (_t07B9, _t07CF);
  if _t07D0 {
    int _t07D1 = 2;
    bool _t07D2 = prim !=0086 (i0727, _t07D1);
    if _t07D2 {
      real _t07D3 = 0.e0;
      real _t07D4 = 0.e0;
      vec2 _t07D5 = [_t07D3, _t07D4];
      vec2 _t07D6 = prim -0026<$[2]> (_t07D5, refPos05B3);
      real _t07D7 = 0.1e1;
      real _t07D8 = 0.e0;
      vec2 _t07D9 = [_t07D7, _t07D8];
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = prim ×00BD (dPos05B4, _t07DC);
      vec2 _t07DE = prim /0057<$[2]> (_t07D9, _t07DD);
      time0728 = prim ×00BD (_t07D6, _t07DE);
      face0729 = 2;
    } else {
      real _t07DF = 0.e0;
      real _t07E0 = 0.e0;
      vec2 _t07E1 = [_t07DF, _t07E0];
      vec2 _t07E2 = prim -0026<$[2]> (_t07E1, refPos05B3);
      real _t07E3 = 0.1e1;
      real _t07E4 = 0.e0;
      vec2 _t07E5 = [_t07E3, _t07E4];
      real _t07E6 = 0.1e1;
      real _t07E7 = 0.e0;
      vec2 _t07E8 = [_t07E6, _t07E7];
      real _t07E9 = prim ×00BD (dPos05B4, _t07E8);
      vec2 _t07EA = prim /0057<$[2]> (_t07E5, _t07E9);
      faceTime072A = prim ×00BD (_t07E2, _t07EA);
    }
  }
  int _t07EB = -1;
  bool _t07EC = prim !=0086 (face0729, _t07EB);
  if _t07EC {
    real _t07ED = 0.e0;
    real _t07EE = prim max0125 (time0728, _t07ED);
    real _t07EF = (real)face0729;
    vec2 _t07F0 = [_t07EE, _t07EF];
    return _t07F0;
  } else {
    real _t07F1 = -inf;
    bool _t07F2 = prim ==0084 (_t07F1, faceTime072A);
    if _t07F2 {
      real _t07F3 = -0.1e1;
      real _t07F4 = -0.1e1;
      vec2 _t07F5 = [_t07F3, _t07F4];
      return _t07F5;
    } else {
      real _t07F6 = (real)i0727;
      vec2 _t07F7 = [faceTime072A, _t07F6];
      return _t07F7;
    }
  }
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
  R080F = func refcell04C6 (a0454);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E = func _enter05B2 (_t0882, _t088D);
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2 = func _enter05B2 (_t08C6, _t08D1);
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5 = func _enter05B2 (_t08E9, _t08F4);
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918 = func _enter05B2 (_t090C, _t0917);
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E = func worldPos0528 (pos0854);
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977 = func worldPos0528 (pos0854);
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980 = func worldPos0528 (pos0854);
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC = func _exit0726 (_t0993, _t09AA, _t09AB);
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9 = func _exit0726 (_t09D0, _t09E7, _t09E8);
      Femdata: MeshPos posp09EA = func $exitPos052D (_t09B6, _t09B7, _t09B8, _t09CF, _t09E9);
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11 = func !=047F (_t0A0D, _t0A10);
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19 = func worldPos0528 (pos0854);
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function bool#1 !=047F (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0484 = prim !=0086 (_t0482, _t0483);
  return _t0484;
}
function bool#0 ==0485 (Femdata: MeshCell cell10480, Femdata: MeshCell cell10481)
{
  int _t0486 = extractFemItem(CellIndex(Mesh), int, cell10480);
  int _t0487 = extractFemItem(CellIndex(Mesh), int, cell10481);
  bool _t0488 = prim ==0082 (_t0486, _t0487);
  return _t0488;
}
function Femdata: MeshPos#0 findPos0489 (Femdata: Mesh mesh048A, vec2 pos048B)
{
  real _t048C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048E = [_t048C, _t048D];
  newtonInt048F = 0;
  cellInt0490 = extractFemItem(StartCell(Mesh), int, mesh048A);
  int _t0491 = extractFemItem(NumCell(Mesh), int, mesh048A);
  int _t0492 = 1;
  numCell0493 = prim -0024 (_t0491, _t0492);
  yayCells0494 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec2, mesh048A, pos048B : vec2);
  foreach cellItter0495 in yayCells0494 {
    cellInt0490 = cellItter0495;
    field(2)[2] _t0496 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
    field(2)[2,2] _t0497 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0496);
    field(2)[2,2] _t0498 = prim inv015B<#∞; %2> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec2 _t049B = [_t0499, _t049A];
    A049C = prim @00A5<#∞; %2; $[2,2]> (_t0498, _t049B);
    int _t049D = 0;
    int _t049E = 16;
    int[] _t049F = prim $range01C3 (_t049D, _t049E);
    foreach newtonItter04C2 in _t049F {
      field(2)[2] _t04A0 = femField(mesh048A,cellInt0490,field(2)[2],Transform,);
      field(2)[2] _t04A1 = prim -002E<#∞; %2; $[2]> (_t04A0, pos048B);
      field(2)[2] _t04A2 = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A049C, _t04A1);
      delta04A3 = prim @00A5<#∞; %2; $[2]> (_t04A2, xn048E);
      xn048E = prim -0026<$[2]> (xn048E, delta04A3);
      real _t04A4 = 0.1e-7;
      real _t04A5 = 0.1e-7;
      real _t04A6 = prim *0034 (_t04A4, _t04A5);
      real _t04A7 = prim •00CE<$[2]; $[2]; $[]> (delta04A3, delta04A3);
      bool _t04A8 = prim >=007E (_t04A6, _t04A7);
      if _t04A8 {
        real _t04A9 = 0.1e1;
        real _t04AA = 0.1e-8;
        real _t04AB = prim +0017<$[]> (_t04A9, _t04AA);
        real _t04AC = 0.1e1;
        real _t04AD = 0.1e1;
        vec2 _t04AE = [_t04AC, _t04AD];
        real _t04AF = prim •00CE<$[2]; $[2]; $[]> (_t04AE, xn048E);
        bool _t04B0 = prim >0080 (_t04AB, _t04AF);
        real _t04B1 = 0.1e-8;
        real _t04B2 = 0.1e-8;
        vec2 _t04B3 = [_t04B1, _t04B2];
        vec2 _t04B4 = prim +0017<$[2]> (_t04B3, xn048E);
        real _t04B5 = _t04B4[0];
        real _t04B6 = -0.e0;
        bool _t04B7 = prim >0080 (_t04B5, _t04B6);
        real _t04B8 = 0.1e-8;
        real _t04B9 = 0.1e-8;
        vec2 _t04BA = [_t04B8, _t04B9];
        vec2 _t04BB = prim +0017<$[2]> (_t04BA, xn048E);
        real _t04BC = _t04BB[1];
        real _t04BD = -0.e0;
        bool _t04BE = prim >0080 (_t04BC, _t04BD);
        bool _t04BF = prim $and01C4 (_t04B7, _t04BE);
        bool _t04C0 = prim $and01C4 (_t04B0, _t04BF);
        if _t04C0 {
          Femdata: MeshPos _t04C1 = extractFemItemN((mesh048A, cellInt0490, xn048E, pos048B),AllBuild(MeshPos),);
          return _t04C1;
        }
      }
    }
  }
  string _t04C3 = "Bad end 2";
  string _t04C4 = "\n";
  print (_t04C3, _t04C4);
  Femdata: MeshPos _t04C5 = extractFemItemN((mesh048A),InvalidBuild(MeshPos),);
  return _t04C5;
}
function Femdata: RefCell#1 refcell04C6 (Femdata: Mesh arg004C7)
{
  Femdata: RefCell _t04C8 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004C7);
  return _t04C8;
}
function Femdata: MeshCell[]#0 cells04C9 (Femdata: Mesh arg004CA)
{
  Femdata: MeshCell[] _t04CB = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004CA);
  return _t04CB;
}
function Femdata: MeshCell[]#0 cells04CC (Femdata: Mesh arg004CA)
{
  int _t04CD = 0;
  int _t04CE = extractFemItem(NumCell(Mesh), int, arg004CA);
  int[] _t04CF = prim $range01C3 (_t04CD, _t04CE);
  Femdata: MeshCell[] accum04D2 = {};
  foreach i04D0 in _t04CF {
    Femdata: MeshCell _t04D1 = loadFem(MeshCell, arg004CA, i04D0);
    accum04D2 = prim @0010<Femdata: MeshCell> (accum04D2, _t04D1);
  }
  return accum04D2;
}
function int#0 numCell04D3 (Femdata: Mesh arg004C7)
{
  int _t04D4 = extractFemItem(NumCell(Mesh), int, arg004C7);
  return _t04D4;
}
function tensor[2,2,2,2]#0 msh_transform_304D5 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04D9 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04D9);
  field(2)[2,2,2] _t04DB = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04DA);
  field(2)[2,2,2,2] _t04DC = prim ∇⊗00AD<#∞; %2; $[2,2]; %2> (_t04DB);
  tensor[2,2,2,2] _t04DD = prim @00A5<#∞; %2; $[2,2,2,2]> (_t04DC, pos04D6);
  return _t04DD;
}
function tensor[2,2,2]#0 msh_transform_204DE (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04DF = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E0 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04DF);
  field(2)[2,2,2] _t04E1 = prim ∇⊗00AD<#∞; %2; $[2]; %2> (_t04E0);
  tensor[2,2,2] _t04E2 = prim @00A5<#∞; %2; $[2,2,2]> (_t04E1, pos04D6);
  return _t04E2;
}
function tensor[2,2]#0 msh_transform_104E3 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E4 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  field(2)[2,2] _t04E5 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04E4);
  tensor[2,2] _t04E6 = prim @00A5<#∞; %2; $[2,2]> (_t04E5, pos04D6);
  return _t04E6;
}
function vec2#2 msh_transform_004E7 (vec2 pos04D6, int cell04D7, Femdata: Mesh mesh04D8)
{
  field(2)[2] _t04E8 = femField(mesh04D8,cell04D7,field(2)[2],Transform,);
  vec2 _t04E9 = prim @00A5<#∞; %2; $[2]> (_t04E8, pos04D6);
  return _t04E9;
}
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0520 (Femdata: MeshPos pos0521)
{
  bool _t0522 = extractFemItem(WorldTest(MeshPos), bool, pos0521);
  if _t0522 {
    vec2 _t0523 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
    int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos0521);
    Femdata: Mesh _t0525 = extractFem(pos0521, Mesh);
    vec2 _t0526 = func msh_transform_004E7 (_t0523, _t0524, _t0525);
    Femdata: MeshPos _t0527 = extractFemItemN((pos0521, _t0526),NewWorld(MeshPos),);
    return _t0527;
  } else {
    return pos0521;
  }
}
function vec2#4 worldPos0528 (Femdata: MeshPos pos0521)
{
  vec2 _t0529 = extractFemItem(RefPos(MeshPos), vec2, pos0521);
  int _t052A = extractFemItem(CellIndex(MeshPos), int, pos0521);
  Femdata: Mesh _t052B = extractFem(pos0521, Mesh);
  vec2 _t052C = func msh_transform_004E7 (_t0529, _t052A, _t052B);
  return _t052C;
}
function Femdata: MeshPos#1 $exitPos052D (Femdata: Mesh mesh052E, int cellId052F, vec2 refPos0530, vec2 dPos0531, real[2] time0532)
{
  int _t0533 = -1;
  real _t0534 = time0532[1];
  int _t0535 = prim $r2i01B7 (_t0534);
  int[2] _t0537 = func nextCell40536 (_t0535, cellId052F, mesh052E);
  int _t0538 = 0;
  int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
  bool _t053A = prim !=0086 (_t0533, _t0539);
  if _t053A {
    real _t053B = time0532[1];
    int _t053C = prim $r2i01B7 (_t053B);
    int[2] _t053D = func nextCell40536 (_t053C, cellId052F, mesh052E);
    int _t053E = 0;
    int _t053F = prim $sub01C0<int; %2> (_t053D, _t053E);
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    vec2 _t0542 = [_t0540, _t0541];
    real _t0543 = 0.e0;
    real _t0544 = 0.e0;
    vec2 _t0545 = [_t0543, _t0544];
    real _t0546 = 0.e0;
    real _t0547 = 0.e0;
    vec2 _t0548 = [_t0546, _t0547];
    vec2[3] _t0549 = {_t0542, _t0545, _t0548};
    real _t054A = time0532[1];
    int _t054B = prim $r2i01B7 (_t054A);
    int[2] _t054C = func nextCell40536 (_t054B, cellId052F, mesh052E);
    int _t054D = 1;
    int _t054E = prim $sub01C0<int; %2> (_t054C, _t054D);
    vec2 _t054F = prim $sub01C0<vec2; %3> (_t0549, _t054E);
    real _t0550 = -0.1e1;
    real _t0551 = 0.1e1;
    vec2 _t0552 = [_t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.1e1;
    vec2 _t0555 = [_t0553, _t0554];
    real _t0556 = 0.1e1;
    real _t0557 = 0.e0;
    vec2 _t0558 = [_t0556, _t0557];
    vec2[3] _t0559 = {_t0552, _t0555, _t0558};
    real _t055A = time0532[1];
    int _t055B = prim $r2i01B7 (_t055A);
    int[2] _t055C = func nextCell40536 (_t055B, cellId052F, mesh052E);
    int _t055D = 1;
    int _t055E = prim $sub01C0<int; %2> (_t055C, _t055D);
    vec2 _t055F = prim $sub01C0<vec2; %3> (_t0559, _t055E);
    real _t0560 = time0532[0];
    vec2 _t0561 = prim *0036<$[2]> (_t0560, dPos0531);
    vec2 _t0562 = prim +0017<$[2]> (_t0561, refPos0530);
    real _t0563 = _t0562[0];
    real _t0564 = time0532[0];
    vec2 _t0565 = prim *0036<$[2]> (_t0564, dPos0531);
    vec2 _t0566 = prim +0017<$[2]> (_t0565, refPos0530);
    real _t0567 = _t0566[1];
    real[2] _t0568 = {_t0563, _t0567};
    int _t0569 = 1;
    int _t056A = 1;
    int _t056B = 0;
    int[3] _t056C = {_t0569, _t056A, _t056B};
    real _t056D = time0532[1];
    int _t056E = prim $r2i01B7 (_t056D);
    int _t056F = prim $sub01C0<int; %3> (_t056C, _t056E);
    real _t0570 = prim $sub01C0<real; %2> (_t0568, _t056F);
    real _t0571 = 0.1e1;
    real _t0572 = 0.e0;
    real[2] _t0573 = {_t0571, _t0572};
    real _t0574 = 0.e0;
    real _t0575 = 0.e0;
    real[2] _t0576 = {_t0574, _t0575};
    real _t0577 = 0.e0;
    real _t0578 = 0.e0;
    real[2] _t0579 = {_t0577, _t0578};
    real[2][3] _t057A = {_t0573, _t0576, _t0579};
    real _t057B = time0532[1];
    int _t057C = prim $r2i01B7 (_t057B);
    real[2] _t057D = prim $sub01C0<real[2]; %3> (_t057A, _t057C);
    int _t057E = 1;
    int _t057F = 1;
    int _t0580 = 0;
    int[3] _t0581 = {_t057E, _t057F, _t0580};
    real _t0582 = time0532[1];
    int _t0583 = prim $r2i01B7 (_t0582);
    int _t0584 = prim $sub01C0<int; %3> (_t0581, _t0583);
    real _t0585 = prim $sub01C0<real; %2> (_t057D, _t0584);
    real _t0586 = prim -0026<$[]> (_t0570, _t0585);
    real _t0587 = -0.1e1;
    real _t0588 = 0.1e1;
    real[2] _t0589 = {_t0587, _t0588};
    real _t058A = 0.e0;
    real _t058B = 0.1e1;
    real[2] _t058C = {_t058A, _t058B};
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real[2] _t058F = {_t058D, _t058E};
    real[2][3] _t0590 = {_t0589, _t058C, _t058F};
    real _t0591 = time0532[1];
    int _t0592 = prim $r2i01B7 (_t0591);
    real[2] _t0593 = prim $sub01C0<real[2]; %3> (_t0590, _t0592);
    int _t0594 = 1;
    int _t0595 = 1;
    int _t0596 = 0;
    int[3] _t0597 = {_t0594, _t0595, _t0596};
    real _t0598 = time0532[1];
    int _t0599 = prim $r2i01B7 (_t0598);
    int _t059A = prim $sub01C0<int; %3> (_t0597, _t0599);
    real _t059B = prim $sub01C0<real; %2> (_t0593, _t059A);
    real _t059C = prim /0055 (_t0586, _t059B);
    vec2 _t059D = prim *0038<$[2]> (_t055F, _t059C);
    vec2 _t059E = prim +0017<$[2]> (_t054F, _t059D);
    real _t059F = time0532[1];
    int _t05A0 = prim $r2i01B7 (_t059F);
    int[2] _t05A1 = func nextCell40536 (_t05A0, cellId052F, mesh052E);
    int _t05A2 = 1;
    int _t05A3 = prim $sub01C0<int; %2> (_t05A1, _t05A2);
    Femdata: MeshPos _t05A4 = extractFemItemN((mesh052E, _t053F, _t059E, _t05A3),RefBuild(Mesh),);
    return _t05A4;
  } else {
    real _t05A5 = time0532[0];
    vec2 _t05A6 = prim *0036<$[2]> (_t05A5, dPos0531);
    vec2 _t05A7 = prim +0017<$[2]> (_t05A6, refPos0530);
    Femdata: MeshPos _t05A8 = extractFemItemN((mesh052E, _t05A7),InvalidBuildBoundary(MeshPos),);
    return _t05A8;
  }
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
function vec2#4 _enter05B2 (vec2 refPos05B3, vec2 dPos05B4)
{
  real time05B5 = +inf;
  int face05B6 = -1;
  real faceTime05B7 = -inf;
  real _t05B8 = 0.1e1;
  real _t05B9 = 0.e0;
  vec2 _t05BA = [_t05B8, _t05B9];
  vec2 _t05BB = prim -0026<$[2]> (_t05BA, refPos05B3);
  real _t05BC = -0.1e1;
  real _t05BD = 0.1e1;
  vec2 _t05BE = [_t05BC, _t05BD];
  real _t05BF = -0.1e1;
  real _t05C0 = 0.1e1;
  vec2 _t05C1 = [_t05BF, _t05C0];
  real _t05C2 = prim ×00BD (dPos05B4, _t05C1);
  vec2 _t05C3 = prim /0057<$[2]> (_t05BE, _t05C2);
  real _t05C4 = prim ×00BD (_t05BB, _t05C3);
  real _t05C5 = -0.1e-15;
  bool _t05C6 = prim >=007E (_t05C4, _t05C5);
  real _t05C7 = 0.1e1;
  real _t05C8 = 0.e0;
  vec2 _t05C9 = [_t05C7, _t05C8];
  vec2 _t05CA = prim -0026<$[2]> (_t05C9, refPos05B3);
  real _t05CB = -0.1e1;
  real _t05CC = 0.1e1;
  vec2 _t05CD = [_t05CB, _t05CC];
  real _t05CE = -0.1e1;
  real _t05CF = 0.1e1;
  vec2 _t05D0 = [_t05CE, _t05CF];
  real _t05D1 = prim ×00BD (dPos05B4, _t05D0);
  vec2 _t05D2 = prim /0057<$[2]> (_t05CD, _t05D1);
  real _t05D3 = prim ×00BD (_t05CA, _t05D2);
  bool _t05D4 = prim >0080 (time05B5, _t05D3);
  real _t05D5 = -0.1e1;
  real _t05D6 = 0.1e1;
  vec2 _t05D7 = [_t05D5, _t05D6];
  real _t05D8 = prim ×00BD (dPos05B4, _t05D7);
  real _t05D9 = prim |()|00B5<$[]> (_t05D8);
  real _t05DA = 0.1e-20;
  bool _t05DB = prim >=007E (_t05D9, _t05DA);
  bool _t05DC = prim $and01C4 (_t05D4, _t05DB);
  bool _t05DD = prim $and01C4 (_t05C6, _t05DC);
  if _t05DD {
    real _t05DE = 0.1e1;
    real _t05DF = 0.1e-8;
    real _t05E0 = prim +0017<$[]> (_t05DE, _t05DF);
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.1e1;
    vec2 _t05E3 = [_t05E1, _t05E2];
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec2 _t05E6 = [_t05E4, _t05E5];
    vec2 _t05E7 = prim -0026<$[2]> (_t05E6, refPos05B3);
    real _t05E8 = -0.1e1;
    real _t05E9 = 0.1e1;
    vec2 _t05EA = [_t05E8, _t05E9];
    real _t05EB = -0.1e1;
    real _t05EC = 0.1e1;
    vec2 _t05ED = [_t05EB, _t05EC];
    real _t05EE = prim ×00BD (dPos05B4, _t05ED);
    vec2 _t05EF = prim /0057<$[2]> (_t05EA, _t05EE);
    real _t05F0 = prim ×00BD (_t05E7, _t05EF);
    vec2 _t05F1 = prim *0038<$[2]> (dPos05B4, _t05F0);
    vec2 _t05F2 = prim +0017<$[2]> (refPos05B3, _t05F1);
    real _t05F3 = prim •00CE<$[2]; $[2]; $[]> (_t05E3, _t05F2);
    bool _t05F4 = prim >0080 (_t05E0, _t05F3);
    real _t05F5 = 0.1e-8;
    real _t05F6 = 0.1e-8;
    vec2 _t05F7 = [_t05F5, _t05F6];
    real _t05F8 = 0.1e1;
    real _t05F9 = 0.e0;
    vec2 _t05FA = [_t05F8, _t05F9];
    vec2 _t05FB = prim -0026<$[2]> (_t05FA, refPos05B3);
    real _t05FC = -0.1e1;
    real _t05FD = 0.1e1;
    vec2 _t05FE = [_t05FC, _t05FD];
    real _t05FF = -0.1e1;
    real _t0600 = 0.1e1;
    vec2 _t0601 = [_t05FF, _t0600];
    real _t0602 = prim ×00BD (dPos05B4, _t0601);
    vec2 _t0603 = prim /0057<$[2]> (_t05FE, _t0602);
    real _t0604 = prim ×00BD (_t05FB, _t0603);
    vec2 _t0605 = prim *0038<$[2]> (dPos05B4, _t0604);
    vec2 _t0606 = prim +0017<$[2]> (refPos05B3, _t0605);
    vec2 _t0607 = prim +0017<$[2]> (_t05F7, _t0606);
    real _t0608 = _t0607[0];
    real _t0609 = -0.e0;
    bool _t060A = prim >0080 (_t0608, _t0609);
    real _t060B = 0.1e-8;
    real _t060C = 0.1e-8;
    vec2 _t060D = [_t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec2 _t0610 = [_t060E, _t060F];
    vec2 _t0611 = prim -0026<$[2]> (_t0610, refPos05B3);
    real _t0612 = -0.1e1;
    real _t0613 = 0.1e1;
    vec2 _t0614 = [_t0612, _t0613];
    real _t0615 = -0.1e1;
    real _t0616 = 0.1e1;
    vec2 _t0617 = [_t0615, _t0616];
    real _t0618 = prim ×00BD (dPos05B4, _t0617);
    vec2 _t0619 = prim /0057<$[2]> (_t0614, _t0618);
    real _t061A = prim ×00BD (_t0611, _t0619);
    vec2 _t061B = prim *0038<$[2]> (dPos05B4, _t061A);
    vec2 _t061C = prim +0017<$[2]> (refPos05B3, _t061B);
    vec2 _t061D = prim +0017<$[2]> (_t060D, _t061C);
    real _t061E = _t061D[1];
    real _t061F = -0.e0;
    bool _t0620 = prim >0080 (_t061E, _t061F);
    bool _t0621 = prim $and01C4 (_t060A, _t0620);
    bool _t0622 = prim $and01C4 (_t05F4, _t0621);
    if _t0622 {
      real _t0623 = 0.1e1;
      real _t0624 = 0.e0;
      vec2 _t0625 = [_t0623, _t0624];
      vec2 _t0626 = prim -0026<$[2]> (_t0625, refPos05B3);
      real _t0627 = -0.1e1;
      real _t0628 = 0.1e1;
      vec2 _t0629 = [_t0627, _t0628];
      real _t062A = -0.1e1;
      real _t062B = 0.1e1;
      vec2 _t062C = [_t062A, _t062B];
      real _t062D = prim ×00BD (dPos05B4, _t062C);
      vec2 _t062E = prim /0057<$[2]> (_t0629, _t062D);
      time05B5 = prim ×00BD (_t0626, _t062E);
      face05B6 = 0;
    }
  }
  real _t062F = 0.e0;
  real _t0630 = 0.e0;
  vec2 _t0631 = [_t062F, _t0630];
  vec2 _t0632 = prim -0026<$[2]> (_t0631, refPos05B3);
  real _t0633 = 0.e0;
  real _t0634 = 0.1e1;
  vec2 _t0635 = [_t0633, _t0634];
  real _t0636 = 0.e0;
  real _t0637 = 0.1e1;
  vec2 _t0638 = [_t0636, _t0637];
  real _t0639 = prim ×00BD (dPos05B4, _t0638);
  vec2 _t063A = prim /0057<$[2]> (_t0635, _t0639);
  real _t063B = prim ×00BD (_t0632, _t063A);
  real _t063C = -0.1e-15;
  bool _t063D = prim >=007E (_t063B, _t063C);
  real _t063E = 0.e0;
  real _t063F = 0.e0;
  vec2 _t0640 = [_t063E, _t063F];
  vec2 _t0641 = prim -0026<$[2]> (_t0640, refPos05B3);
  real _t0642 = 0.e0;
  real _t0643 = 0.1e1;
  vec2 _t0644 = [_t0642, _t0643];
  real _t0645 = 0.e0;
  real _t0646 = 0.1e1;
  vec2 _t0647 = [_t0645, _t0646];
  real _t0648 = prim ×00BD (dPos05B4, _t0647);
  vec2 _t0649 = prim /0057<$[2]> (_t0644, _t0648);
  real _t064A = prim ×00BD (_t0641, _t0649);
  bool _t064B = prim >0080 (time05B5, _t064A);
  real _t064C = 0.e0;
  real _t064D = 0.1e1;
  vec2 _t064E = [_t064C, _t064D];
  real _t064F = prim ×00BD (dPos05B4, _t064E);
  real _t0650 = prim |()|00B5<$[]> (_t064F);
  real _t0651 = 0.1e-20;
  bool _t0652 = prim >=007E (_t0650, _t0651);
  bool _t0653 = prim $and01C4 (_t064B, _t0652);
  bool _t0654 = prim $and01C4 (_t063D, _t0653);
  if _t0654 {
    real _t0655 = 0.1e1;
    real _t0656 = 0.1e-8;
    real _t0657 = prim +0017<$[]> (_t0655, _t0656);
    real _t0658 = 0.1e1;
    real _t0659 = 0.1e1;
    vec2 _t065A = [_t0658, _t0659];
    real _t065B = 0.e0;
    real _t065C = 0.e0;
    vec2 _t065D = [_t065B, _t065C];
    vec2 _t065E = prim -0026<$[2]> (_t065D, refPos05B3);
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec2 _t0661 = [_t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.1e1;
    vec2 _t0664 = [_t0662, _t0663];
    real _t0665 = prim ×00BD (dPos05B4, _t0664);
    vec2 _t0666 = prim /0057<$[2]> (_t0661, _t0665);
    real _t0667 = prim ×00BD (_t065E, _t0666);
    vec2 _t0668 = prim *0038<$[2]> (dPos05B4, _t0667);
    vec2 _t0669 = prim +0017<$[2]> (refPos05B3, _t0668);
    real _t066A = prim •00CE<$[2]; $[2]; $[]> (_t065A, _t0669);
    bool _t066B = prim >0080 (_t0657, _t066A);
    real _t066C = 0.1e-8;
    real _t066D = 0.1e-8;
    vec2 _t066E = [_t066C, _t066D];
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec2 _t0671 = [_t066F, _t0670];
    vec2 _t0672 = prim -0026<$[2]> (_t0671, refPos05B3);
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    vec2 _t0675 = [_t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.1e1;
    vec2 _t0678 = [_t0676, _t0677];
    real _t0679 = prim ×00BD (dPos05B4, _t0678);
    vec2 _t067A = prim /0057<$[2]> (_t0675, _t0679);
    real _t067B = prim ×00BD (_t0672, _t067A);
    vec2 _t067C = prim *0038<$[2]> (dPos05B4, _t067B);
    vec2 _t067D = prim +0017<$[2]> (refPos05B3, _t067C);
    vec2 _t067E = prim +0017<$[2]> (_t066E, _t067D);
    real _t067F = _t067E[0];
    real _t0680 = -0.e0;
    bool _t0681 = prim >0080 (_t067F, _t0680);
    real _t0682 = 0.1e-8;
    real _t0683 = 0.1e-8;
    vec2 _t0684 = [_t0682, _t0683];
    real _t0685 = 0.e0;
    real _t0686 = 0.e0;
    vec2 _t0687 = [_t0685, _t0686];
    vec2 _t0688 = prim -0026<$[2]> (_t0687, refPos05B3);
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec2 _t068B = [_t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.1e1;
    vec2 _t068E = [_t068C, _t068D];
    real _t068F = prim ×00BD (dPos05B4, _t068E);
    vec2 _t0690 = prim /0057<$[2]> (_t068B, _t068F);
    real _t0691 = prim ×00BD (_t0688, _t0690);
    vec2 _t0692 = prim *0038<$[2]> (dPos05B4, _t0691);
    vec2 _t0693 = prim +0017<$[2]> (refPos05B3, _t0692);
    vec2 _t0694 = prim +0017<$[2]> (_t0684, _t0693);
    real _t0695 = _t0694[1];
    real _t0696 = -0.e0;
    bool _t0697 = prim >0080 (_t0695, _t0696);
    bool _t0698 = prim $and01C4 (_t0681, _t0697);
    bool _t0699 = prim $and01C4 (_t066B, _t0698);
    if _t0699 {
      real _t069A = 0.e0;
      real _t069B = 0.e0;
      vec2 _t069C = [_t069A, _t069B];
      vec2 _t069D = prim -0026<$[2]> (_t069C, refPos05B3);
      real _t069E = 0.e0;
      real _t069F = 0.1e1;
      vec2 _t06A0 = [_t069E, _t069F];
      real _t06A1 = 0.e0;
      real _t06A2 = 0.1e1;
      vec2 _t06A3 = [_t06A1, _t06A2];
      real _t06A4 = prim ×00BD (dPos05B4, _t06A3);
      vec2 _t06A5 = prim /0057<$[2]> (_t06A0, _t06A4);
      time05B5 = prim ×00BD (_t069D, _t06A5);
      face05B6 = 1;
    }
  }
  real _t06A6 = 0.e0;
  real _t06A7 = 0.e0;
  vec2 _t06A8 = [_t06A6, _t06A7];
  vec2 _t06A9 = prim -0026<$[2]> (_t06A8, refPos05B3);
  real _t06AA = 0.1e1;
  real _t06AB = 0.e0;
  vec2 _t06AC = [_t06AA, _t06AB];
  real _t06AD = 0.1e1;
  real _t06AE = 0.e0;
  vec2 _t06AF = [_t06AD, _t06AE];
  real _t06B0 = prim ×00BD (dPos05B4, _t06AF);
  vec2 _t06B1 = prim /0057<$[2]> (_t06AC, _t06B0);
  real _t06B2 = prim ×00BD (_t06A9, _t06B1);
  real _t06B3 = -0.1e-15;
  bool _t06B4 = prim >=007E (_t06B2, _t06B3);
  real _t06B5 = 0.e0;
  real _t06B6 = 0.e0;
  vec2 _t06B7 = [_t06B5, _t06B6];
  vec2 _t06B8 = prim -0026<$[2]> (_t06B7, refPos05B3);
  real _t06B9 = 0.1e1;
  real _t06BA = 0.e0;
  vec2 _t06BB = [_t06B9, _t06BA];
  real _t06BC = 0.1e1;
  real _t06BD = 0.e0;
  vec2 _t06BE = [_t06BC, _t06BD];
  real _t06BF = prim ×00BD (dPos05B4, _t06BE);
  vec2 _t06C0 = prim /0057<$[2]> (_t06BB, _t06BF);
  real _t06C1 = prim ×00BD (_t06B8, _t06C0);
  bool _t06C2 = prim >0080 (time05B5, _t06C1);
  real _t06C3 = 0.1e1;
  real _t06C4 = 0.e0;
  vec2 _t06C5 = [_t06C3, _t06C4];
  real _t06C6 = prim ×00BD (dPos05B4, _t06C5);
  real _t06C7 = prim |()|00B5<$[]> (_t06C6);
  real _t06C8 = 0.1e-20;
  bool _t06C9 = prim >=007E (_t06C7, _t06C8);
  bool _t06CA = prim $and01C4 (_t06C2, _t06C9);
  bool _t06CB = prim $and01C4 (_t06B4, _t06CA);
  if _t06CB {
    real _t06CC = 0.1e1;
    real _t06CD = 0.1e-8;
    real _t06CE = prim +0017<$[]> (_t06CC, _t06CD);
    real _t06CF = 0.1e1;
    real _t06D0 = 0.1e1;
    vec2 _t06D1 = [_t06CF, _t06D0];
    real _t06D2 = 0.e0;
    real _t06D3 = 0.e0;
    vec2 _t06D4 = [_t06D2, _t06D3];
    vec2 _t06D5 = prim -0026<$[2]> (_t06D4, refPos05B3);
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.e0;
    vec2 _t06D8 = [_t06D6, _t06D7];
    real _t06D9 = 0.1e1;
    real _t06DA = 0.e0;
    vec2 _t06DB = [_t06D9, _t06DA];
    real _t06DC = prim ×00BD (dPos05B4, _t06DB);
    vec2 _t06DD = prim /0057<$[2]> (_t06D8, _t06DC);
    real _t06DE = prim ×00BD (_t06D5, _t06DD);
    vec2 _t06DF = prim *0038<$[2]> (dPos05B4, _t06DE);
    vec2 _t06E0 = prim +0017<$[2]> (refPos05B3, _t06DF);
    real _t06E1 = prim •00CE<$[2]; $[2]; $[]> (_t06D1, _t06E0);
    bool _t06E2 = prim >0080 (_t06CE, _t06E1);
    real _t06E3 = 0.1e-8;
    real _t06E4 = 0.1e-8;
    vec2 _t06E5 = [_t06E3, _t06E4];
    real _t06E6 = 0.e0;
    real _t06E7 = 0.e0;
    vec2 _t06E8 = [_t06E6, _t06E7];
    vec2 _t06E9 = prim -0026<$[2]> (_t06E8, refPos05B3);
    real _t06EA = 0.1e1;
    real _t06EB = 0.e0;
    vec2 _t06EC = [_t06EA, _t06EB];
    real _t06ED = 0.1e1;
    real _t06EE = 0.e0;
    vec2 _t06EF = [_t06ED, _t06EE];
    real _t06F0 = prim ×00BD (dPos05B4, _t06EF);
    vec2 _t06F1 = prim /0057<$[2]> (_t06EC, _t06F0);
    real _t06F2 = prim ×00BD (_t06E9, _t06F1);
    vec2 _t06F3 = prim *0038<$[2]> (dPos05B4, _t06F2);
    vec2 _t06F4 = prim +0017<$[2]> (refPos05B3, _t06F3);
    vec2 _t06F5 = prim +0017<$[2]> (_t06E5, _t06F4);
    real _t06F6 = _t06F5[0];
    real _t06F7 = -0.e0;
    bool _t06F8 = prim >0080 (_t06F6, _t06F7);
    real _t06F9 = 0.1e-8;
    real _t06FA = 0.1e-8;
    vec2 _t06FB = [_t06F9, _t06FA];
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec2 _t06FE = [_t06FC, _t06FD];
    vec2 _t06FF = prim -0026<$[2]> (_t06FE, refPos05B3);
    real _t0700 = 0.1e1;
    real _t0701 = 0.e0;
    vec2 _t0702 = [_t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    vec2 _t0705 = [_t0703, _t0704];
    real _t0706 = prim ×00BD (dPos05B4, _t0705);
    vec2 _t0707 = prim /0057<$[2]> (_t0702, _t0706);
    real _t0708 = prim ×00BD (_t06FF, _t0707);
    vec2 _t0709 = prim *0038<$[2]> (dPos05B4, _t0708);
    vec2 _t070A = prim +0017<$[2]> (refPos05B3, _t0709);
    vec2 _t070B = prim +0017<$[2]> (_t06FB, _t070A);
    real _t070C = _t070B[1];
    real _t070D = -0.e0;
    bool _t070E = prim >0080 (_t070C, _t070D);
    bool _t070F = prim $and01C4 (_t06F8, _t070E);
    bool _t0710 = prim $and01C4 (_t06E2, _t070F);
    if _t0710 {
      real _t0711 = 0.e0;
      real _t0712 = 0.e0;
      vec2 _t0713 = [_t0711, _t0712];
      vec2 _t0714 = prim -0026<$[2]> (_t0713, refPos05B3);
      real _t0715 = 0.1e1;
      real _t0716 = 0.e0;
      vec2 _t0717 = [_t0715, _t0716];
      real _t0718 = 0.1e1;
      real _t0719 = 0.e0;
      vec2 _t071A = [_t0718, _t0719];
      real _t071B = prim ×00BD (dPos05B4, _t071A);
      vec2 _t071C = prim /0057<$[2]> (_t0717, _t071B);
      time05B5 = prim ×00BD (_t0714, _t071C);
      face05B6 = 2;
    }
  }
  int _t071D = -1;
  bool _t071E = prim !=0086 (face05B6, _t071D);
  if _t071E {
    real _t071F = 0.e0;
    real _t0720 = prim max0125 (time05B5, _t071F);
    real _t0721 = (real)face05B6;
    vec2 _t0722 = [_t0720, _t0721];
    return _t0722;
  } else {
    real _t0723 = -0.1e1;
    real _t0724 = -0.1e1;
    vec2 _t0725 = [_t0723, _t0724];
    return _t0725;
  }
}
function vec2#2 _exit0726 (vec2 refPos05B3, vec2 dPos05B4, int i0727)
{
  real time0728 = +inf;
  int face0729 = -1;
  real faceTime072A = -inf;
  real _t072B = 0.1e1;
  real _t072C = 0.e0;
  vec2 _t072D = [_t072B, _t072C];
  vec2 _t072E = prim -0026<$[2]> (_t072D, refPos05B3);
  real _t072F = -0.1e1;
  real _t0730 = 0.1e1;
  vec2 _t0731 = [_t072F, _t0730];
  real _t0732 = -0.1e1;
  real _t0733 = 0.1e1;
  vec2 _t0734 = [_t0732, _t0733];
  real _t0735 = prim ×00BD (dPos05B4, _t0734);
  vec2 _t0736 = prim /0057<$[2]> (_t0731, _t0735);
  real _t0737 = prim ×00BD (_t072E, _t0736);
  real _t0738 = -0.1e-15;
  bool _t0739 = prim >=007E (_t0737, _t0738);
  real _t073A = 0.1e1;
  real _t073B = 0.e0;
  vec2 _t073C = [_t073A, _t073B];
  vec2 _t073D = prim -0026<$[2]> (_t073C, refPos05B3);
  real _t073E = -0.1e1;
  real _t073F = 0.1e1;
  vec2 _t0740 = [_t073E, _t073F];
  real _t0741 = -0.1e1;
  real _t0742 = 0.1e1;
  vec2 _t0743 = [_t0741, _t0742];
  real _t0744 = prim ×00BD (dPos05B4, _t0743);
  vec2 _t0745 = prim /0057<$[2]> (_t0740, _t0744);
  real _t0746 = prim ×00BD (_t073D, _t0745);
  bool _t0747 = prim >0080 (time0728, _t0746);
  real _t0748 = -0.1e1;
  real _t0749 = 0.1e1;
  vec2 _t074A = [_t0748, _t0749];
  real _t074B = prim ×00BD (dPos05B4, _t074A);
  real _t074C = prim |()|00B5<$[]> (_t074B);
  real _t074D = 0.1e-20;
  bool _t074E = prim >=007E (_t074C, _t074D);
  bool _t074F = prim $and01C4 (_t0747, _t074E);
  bool _t0750 = prim $and01C4 (_t0739, _t074F);
  if _t0750 {
    int _t0751 = 0;
    bool _t0752 = prim !=0086 (i0727, _t0751);
    if _t0752 {
      real _t0753 = 0.1e1;
      real _t0754 = 0.e0;
      vec2 _t0755 = [_t0753, _t0754];
      vec2 _t0756 = prim -0026<$[2]> (_t0755, refPos05B3);
      real _t0757 = -0.1e1;
      real _t0758 = 0.1e1;
      vec2 _t0759 = [_t0757, _t0758];
      real _t075A = -0.1e1;
      real _t075B = 0.1e1;
      vec2 _t075C = [_t075A, _t075B];
      real _t075D = prim ×00BD (dPos05B4, _t075C);
      vec2 _t075E = prim /0057<$[2]> (_t0759, _t075D);
      time0728 = prim ×00BD (_t0756, _t075E);
      face0729 = 0;
    } else {
      real _t075F = 0.1e1;
      real _t0760 = 0.e0;
      vec2 _t0761 = [_t075F, _t0760];
      vec2 _t0762 = prim -0026<$[2]> (_t0761, refPos05B3);
      real _t0763 = -0.1e1;
      real _t0764 = 0.1e1;
      vec2 _t0765 = [_t0763, _t0764];
      real _t0766 = -0.1e1;
      real _t0767 = 0.1e1;
      vec2 _t0768 = [_t0766, _t0767];
      real _t0769 = prim ×00BD (dPos05B4, _t0768);
      vec2 _t076A = prim /0057<$[2]> (_t0765, _t0769);
      faceTime072A = prim ×00BD (_t0762, _t076A);
    }
  }
  real _t076B = 0.e0;
  real _t076C = 0.e0;
  vec2 _t076D = [_t076B, _t076C];
  vec2 _t076E = prim -0026<$[2]> (_t076D, refPos05B3);
  real _t076F = 0.e0;
  real _t0770 = 0.1e1;
  vec2 _t0771 = [_t076F, _t0770];
  real _t0772 = 0.e0;
  real _t0773 = 0.1e1;
  vec2 _t0774 = [_t0772, _t0773];
  real _t0775 = prim ×00BD (dPos05B4, _t0774);
  vec2 _t0776 = prim /0057<$[2]> (_t0771, _t0775);
  real _t0777 = prim ×00BD (_t076E, _t0776);
  real _t0778 = -0.1e-15;
  bool _t0779 = prim >=007E (_t0777, _t0778);
  real _t077A = 0.e0;
  real _t077B = 0.e0;
  vec2 _t077C = [_t077A, _t077B];
  vec2 _t077D = prim -0026<$[2]> (_t077C, refPos05B3);
  real _t077E = 0.e0;
  real _t077F = 0.1e1;
  vec2 _t0780 = [_t077E, _t077F];
  real _t0781 = 0.e0;
  real _t0782 = 0.1e1;
  vec2 _t0783 = [_t0781, _t0782];
  real _t0784 = prim ×00BD (dPos05B4, _t0783);
  vec2 _t0785 = prim /0057<$[2]> (_t0780, _t0784);
  real _t0786 = prim ×00BD (_t077D, _t0785);
  bool _t0787 = prim >0080 (time0728, _t0786);
  real _t0788 = 0.e0;
  real _t0789 = 0.1e1;
  vec2 _t078A = [_t0788, _t0789];
  real _t078B = prim ×00BD (dPos05B4, _t078A);
  real _t078C = prim |()|00B5<$[]> (_t078B);
  real _t078D = 0.1e-20;
  bool _t078E = prim >=007E (_t078C, _t078D);
  bool _t078F = prim $and01C4 (_t0787, _t078E);
  bool _t0790 = prim $and01C4 (_t0779, _t078F);
  if _t0790 {
    int _t0791 = 1;
    bool _t0792 = prim !=0086 (i0727, _t0791);
    if _t0792 {
      real _t0793 = 0.e0;
      real _t0794 = 0.e0;
      vec2 _t0795 = [_t0793, _t0794];
      vec2 _t0796 = prim -0026<$[2]> (_t0795, refPos05B3);
      real _t0797 = 0.e0;
      real _t0798 = 0.1e1;
      vec2 _t0799 = [_t0797, _t0798];
      real _t079A = 0.e0;
      real _t079B = 0.1e1;
      vec2 _t079C = [_t079A, _t079B];
      real _t079D = prim ×00BD (dPos05B4, _t079C);
      vec2 _t079E = prim /0057<$[2]> (_t0799, _t079D);
      time0728 = prim ×00BD (_t0796, _t079E);
      face0729 = 1;
    } else {
      real _t079F = 0.e0;
      real _t07A0 = 0.e0;
      vec2 _t07A1 = [_t079F, _t07A0];
      vec2 _t07A2 = prim -0026<$[2]> (_t07A1, refPos05B3);
      real _t07A3 = 0.e0;
      real _t07A4 = 0.1e1;
      vec2 _t07A5 = [_t07A3, _t07A4];
      real _t07A6 = 0.e0;
      real _t07A7 = 0.1e1;
      vec2 _t07A8 = [_t07A6, _t07A7];
      real _t07A9 = prim ×00BD (dPos05B4, _t07A8);
      vec2 _t07AA = prim /0057<$[2]> (_t07A5, _t07A9);
      faceTime072A = prim ×00BD (_t07A2, _t07AA);
    }
  }
  real _t07AB = 0.e0;
  real _t07AC = 0.e0;
  vec2 _t07AD = [_t07AB, _t07AC];
  vec2 _t07AE = prim -0026<$[2]> (_t07AD, refPos05B3);
  real _t07AF = 0.1e1;
  real _t07B0 = 0.e0;
  vec2 _t07B1 = [_t07AF, _t07B0];
  real _t07B2 = 0.1e1;
  real _t07B3 = 0.e0;
  vec2 _t07B4 = [_t07B2, _t07B3];
  real _t07B5 = prim ×00BD (dPos05B4, _t07B4);
  vec2 _t07B6 = prim /0057<$[2]> (_t07B1, _t07B5);
  real _t07B7 = prim ×00BD (_t07AE, _t07B6);
  real _t07B8 = -0.1e-15;
  bool _t07B9 = prim >=007E (_t07B7, _t07B8);
  real _t07BA = 0.e0;
  real _t07BB = 0.e0;
  vec2 _t07BC = [_t07BA, _t07BB];
  vec2 _t07BD = prim -0026<$[2]> (_t07BC, refPos05B3);
  real _t07BE = 0.1e1;
  real _t07BF = 0.e0;
  vec2 _t07C0 = [_t07BE, _t07BF];
  real _t07C1 = 0.1e1;
  real _t07C2 = 0.e0;
  vec2 _t07C3 = [_t07C1, _t07C2];
  real _t07C4 = prim ×00BD (dPos05B4, _t07C3);
  vec2 _t07C5 = prim /0057<$[2]> (_t07C0, _t07C4);
  real _t07C6 = prim ×00BD (_t07BD, _t07C5);
  bool _t07C7 = prim >0080 (time0728, _t07C6);
  real _t07C8 = 0.1e1;
  real _t07C9 = 0.e0;
  vec2 _t07CA = [_t07C8, _t07C9];
  real _t07CB = prim ×00BD (dPos05B4, _t07CA);
  real _t07CC = prim |()|00B5<$[]> (_t07CB);
  real _t07CD = 0.1e-20;
  bool _t07CE = prim >=007E (_t07CC, _t07CD);
  bool _t07CF = prim $and01C4 (_t07C7, _t07CE);
  bool _t07D0 = prim $and01C4 (_t07B9, _t07CF);
  if _t07D0 {
    int _t07D1 = 2;
    bool _t07D2 = prim !=0086 (i0727, _t07D1);
    if _t07D2 {
      real _t07D3 = 0.e0;
      real _t07D4 = 0.e0;
      vec2 _t07D5 = [_t07D3, _t07D4];
      vec2 _t07D6 = prim -0026<$[2]> (_t07D5, refPos05B3);
      real _t07D7 = 0.1e1;
      real _t07D8 = 0.e0;
      vec2 _t07D9 = [_t07D7, _t07D8];
      real _t07DA = 0.1e1;
      real _t07DB = 0.e0;
      vec2 _t07DC = [_t07DA, _t07DB];
      real _t07DD = prim ×00BD (dPos05B4, _t07DC);
      vec2 _t07DE = prim /0057<$[2]> (_t07D9, _t07DD);
      time0728 = prim ×00BD (_t07D6, _t07DE);
      face0729 = 2;
    } else {
      real _t07DF = 0.e0;
      real _t07E0 = 0.e0;
      vec2 _t07E1 = [_t07DF, _t07E0];
      vec2 _t07E2 = prim -0026<$[2]> (_t07E1, refPos05B3);
      real _t07E3 = 0.1e1;
      real _t07E4 = 0.e0;
      vec2 _t07E5 = [_t07E3, _t07E4];
      real _t07E6 = 0.1e1;
      real _t07E7 = 0.e0;
      vec2 _t07E8 = [_t07E6, _t07E7];
      real _t07E9 = prim ×00BD (dPos05B4, _t07E8);
      vec2 _t07EA = prim /0057<$[2]> (_t07E5, _t07E9);
      faceTime072A = prim ×00BD (_t07E2, _t07EA);
    }
  }
  int _t07EB = -1;
  bool _t07EC = prim !=0086 (face0729, _t07EB);
  if _t07EC {
    real _t07ED = 0.e0;
    real _t07EE = prim max0125 (time0728, _t07ED);
    real _t07EF = (real)face0729;
    vec2 _t07F0 = [_t07EE, _t07EF];
    return _t07F0;
  } else {
    real _t07F1 = -inf;
    bool _t07F2 = prim ==0084 (_t07F1, faceTime072A);
    if _t07F2 {
      real _t07F3 = -0.1e1;
      real _t07F4 = -0.1e1;
      vec2 _t07F5 = [_t07F3, _t07F4];
      return _t07F5;
    } else {
      real _t07F6 = (real)i0727;
      vec2 _t07F7 = [faceTime072A, _t07F6];
      return _t07F7;
    }
  }
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
  R080F = func refcell04C6 (a0454);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E = func _enter05B2 (_t0882, _t088D);
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2 = func _enter05B2 (_t08C6, _t08D1);
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5 = func _enter05B2 (_t08E9, _t08F4);
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918 = func _enter05B2 (_t090C, _t0917);
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E = func worldPos0528 (pos0854);
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977 = func worldPos0528 (pos0854);
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980 = func worldPos0528 (pos0854);
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC = func _exit0726 (_t0993, _t09AA, _t09AB);
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9 = func _exit0726 (_t09D0, _t09E7, _t09E8);
      Femdata: MeshPos posp09EA = func $exitPos052D (_t09B6, _t09B7, _t09B8, _t09CF, _t09E9);
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11 = func !=047F (_t0A0D, _t0A10);
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19 = func worldPos0528 (pos0854);
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
  Femdata: RefCell R0A3D;
  Femdata: RefCell _t0A3E = extractFemItem(RefCell(Mesh), Femdata: RefCell, a0454);
  R0A3D = _t0A3E;
  R080F = R0A3D;
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E;
        real time0E92 = +inf;
        int face0E93 = -1;
        real faceTime0E94 = -inf;
        real _t0E95 = 0.1e1;
        real _t0E96 = 0.e0;
        vec2 _t0E97 = [_t0E95, _t0E96];
        vec2 _t0E98 = prim -0026<$[2]> (_t0E97, _t0882);
        real _t0E99 = -0.1e1;
        real _t0E9A = 0.1e1;
        vec2 _t0E9B = [_t0E99, _t0E9A];
        real _t0E9C = -0.1e1;
        real _t0E9D = 0.1e1;
        vec2 _t0E9E = [_t0E9C, _t0E9D];
        real _t0E9F = prim ×00BD (_t088D, _t0E9E);
        vec2 _t0EA0 = prim /0057<$[2]> (_t0E9B, _t0E9F);
        real _t0EA1 = prim ×00BD (_t0E98, _t0EA0);
        real _t0EA2 = -0.1e-15;
        bool _t0EA3 = prim >=007E (_t0EA1, _t0EA2);
        real _t0EA4 = 0.1e1;
        real _t0EA5 = 0.e0;
        vec2 _t0EA6 = [_t0EA4, _t0EA5];
        vec2 _t0EA7 = prim -0026<$[2]> (_t0EA6, _t0882);
        real _t0EA8 = -0.1e1;
        real _t0EA9 = 0.1e1;
        vec2 _t0EAA = [_t0EA8, _t0EA9];
        real _t0EAB = -0.1e1;
        real _t0EAC = 0.1e1;
        vec2 _t0EAD = [_t0EAB, _t0EAC];
        real _t0EAE = prim ×00BD (_t088D, _t0EAD);
        vec2 _t0EAF = prim /0057<$[2]> (_t0EAA, _t0EAE);
        real _t0EB0 = prim ×00BD (_t0EA7, _t0EAF);
        bool _t0EB1 = prim >0080 (time0E92, _t0EB0);
        real _t0EB2 = -0.1e1;
        real _t0EB3 = 0.1e1;
        vec2 _t0EB4 = [_t0EB2, _t0EB3];
        real _t0EB5 = prim ×00BD (_t088D, _t0EB4);
        real _t0EB6 = prim |()|00B5<$[]> (_t0EB5);
        real _t0EB7 = 0.1e-20;
        bool _t0EB8 = prim >=007E (_t0EB6, _t0EB7);
        bool _t0EB9 = prim $and01C4 (_t0EB1, _t0EB8);
        bool _t0EBA = prim $and01C4 (_t0EA3, _t0EB9);
        if _t0EBA {
          real _t0EBB = 0.1e1;
          real _t0EBC = 0.1e-8;
          real _t0EBD = prim +0017<$[]> (_t0EBB, _t0EBC);
          real _t0EBE = 0.1e1;
          real _t0EBF = 0.1e1;
          vec2 _t0EC0 = [_t0EBE, _t0EBF];
          real _t0EC1 = 0.1e1;
          real _t0EC2 = 0.e0;
          vec2 _t0EC3 = [_t0EC1, _t0EC2];
          vec2 _t0EC4 = prim -0026<$[2]> (_t0EC3, _t0882);
          real _t0EC5 = -0.1e1;
          real _t0EC6 = 0.1e1;
          vec2 _t0EC7 = [_t0EC5, _t0EC6];
          real _t0EC8 = -0.1e1;
          real _t0EC9 = 0.1e1;
          vec2 _t0ECA = [_t0EC8, _t0EC9];
          real _t0ECB = prim ×00BD (_t088D, _t0ECA);
          vec2 _t0ECC = prim /0057<$[2]> (_t0EC7, _t0ECB);
          real _t0ECD = prim ×00BD (_t0EC4, _t0ECC);
          vec2 _t0ECE = prim *0038<$[2]> (_t088D, _t0ECD);
          vec2 _t0ECF = prim +0017<$[2]> (_t0882, _t0ECE);
          real _t0ED0 = prim •00CE<$[2]; $[2]; $[]> (_t0EC0, _t0ECF);
          bool _t0ED1 = prim >0080 (_t0EBD, _t0ED0);
          real _t0ED2 = 0.1e-8;
          real _t0ED3 = 0.1e-8;
          vec2 _t0ED4 = [_t0ED2, _t0ED3];
          real _t0ED5 = 0.1e1;
          real _t0ED6 = 0.e0;
          vec2 _t0ED7 = [_t0ED5, _t0ED6];
          vec2 _t0ED8 = prim -0026<$[2]> (_t0ED7, _t0882);
          real _t0ED9 = -0.1e1;
          real _t0EDA = 0.1e1;
          vec2 _t0EDB = [_t0ED9, _t0EDA];
          real _t0EDC = -0.1e1;
          real _t0EDD = 0.1e1;
          vec2 _t0EDE = [_t0EDC, _t0EDD];
          real _t0EDF = prim ×00BD (_t088D, _t0EDE);
          vec2 _t0EE0 = prim /0057<$[2]> (_t0EDB, _t0EDF);
          real _t0EE1 = prim ×00BD (_t0ED8, _t0EE0);
          vec2 _t0EE2 = prim *0038<$[2]> (_t088D, _t0EE1);
          vec2 _t0EE3 = prim +0017<$[2]> (_t0882, _t0EE2);
          vec2 _t0EE4 = prim +0017<$[2]> (_t0ED4, _t0EE3);
          real _t0EE5 = _t0EE4[0];
          real _t0EE6 = -0.e0;
          bool _t0EE7 = prim >0080 (_t0EE5, _t0EE6);
          real _t0EE8 = 0.1e-8;
          real _t0EE9 = 0.1e-8;
          vec2 _t0EEA = [_t0EE8, _t0EE9];
          real _t0EEB = 0.1e1;
          real _t0EEC = 0.e0;
          vec2 _t0EED = [_t0EEB, _t0EEC];
          vec2 _t0EEE = prim -0026<$[2]> (_t0EED, _t0882);
          real _t0EEF = -0.1e1;
          real _t0EF0 = 0.1e1;
          vec2 _t0EF1 = [_t0EEF, _t0EF0];
          real _t0EF2 = -0.1e1;
          real _t0EF3 = 0.1e1;
          vec2 _t0EF4 = [_t0EF2, _t0EF3];
          real _t0EF5 = prim ×00BD (_t088D, _t0EF4);
          vec2 _t0EF6 = prim /0057<$[2]> (_t0EF1, _t0EF5);
          real _t0EF7 = prim ×00BD (_t0EEE, _t0EF6);
          vec2 _t0EF8 = prim *0038<$[2]> (_t088D, _t0EF7);
          vec2 _t0EF9 = prim +0017<$[2]> (_t0882, _t0EF8);
          vec2 _t0EFA = prim +0017<$[2]> (_t0EEA, _t0EF9);
          real _t0EFB = _t0EFA[1];
          real _t0EFC = -0.e0;
          bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
          bool _t0EFE = prim $and01C4 (_t0EE7, _t0EFD);
          bool _t0EFF = prim $and01C4 (_t0ED1, _t0EFE);
          if _t0EFF {
            real _t0F00 = 0.1e1;
            real _t0F01 = 0.e0;
            vec2 _t0F02 = [_t0F00, _t0F01];
            vec2 _t0F03 = prim -0026<$[2]> (_t0F02, _t0882);
            real _t0F04 = -0.1e1;
            real _t0F05 = 0.1e1;
            vec2 _t0F06 = [_t0F04, _t0F05];
            real _t0F07 = -0.1e1;
            real _t0F08 = 0.1e1;
            vec2 _t0F09 = [_t0F07, _t0F08];
            real _t0F0A = prim ×00BD (_t088D, _t0F09);
            vec2 _t0F0B = prim /0057<$[2]> (_t0F06, _t0F0A);
            time0E92 = prim ×00BD (_t0F03, _t0F0B);
            face0E93 = 0;
          }
        }
        real _t0F0C = 0.e0;
        real _t0F0D = 0.e0;
        vec2 _t0F0E = [_t0F0C, _t0F0D];
        vec2 _t0F0F = prim -0026<$[2]> (_t0F0E, _t0882);
        real _t0F10 = 0.e0;
        real _t0F11 = 0.1e1;
        vec2 _t0F12 = [_t0F10, _t0F11];
        real _t0F13 = 0.e0;
        real _t0F14 = 0.1e1;
        vec2 _t0F15 = [_t0F13, _t0F14];
        real _t0F16 = prim ×00BD (_t088D, _t0F15);
        vec2 _t0F17 = prim /0057<$[2]> (_t0F12, _t0F16);
        real _t0F18 = prim ×00BD (_t0F0F, _t0F17);
        real _t0F19 = -0.1e-15;
        bool _t0F1A = prim >=007E (_t0F18, _t0F19);
        real _t0F1B = 0.e0;
        real _t0F1C = 0.e0;
        vec2 _t0F1D = [_t0F1B, _t0F1C];
        vec2 _t0F1E = prim -0026<$[2]> (_t0F1D, _t0882);
        real _t0F1F = 0.e0;
        real _t0F20 = 0.1e1;
        vec2 _t0F21 = [_t0F1F, _t0F20];
        real _t0F22 = 0.e0;
        real _t0F23 = 0.1e1;
        vec2 _t0F24 = [_t0F22, _t0F23];
        real _t0F25 = prim ×00BD (_t088D, _t0F24);
        vec2 _t0F26 = prim /0057<$[2]> (_t0F21, _t0F25);
        real _t0F27 = prim ×00BD (_t0F1E, _t0F26);
        bool _t0F28 = prim >0080 (time0E92, _t0F27);
        real _t0F29 = 0.e0;
        real _t0F2A = 0.1e1;
        vec2 _t0F2B = [_t0F29, _t0F2A];
        real _t0F2C = prim ×00BD (_t088D, _t0F2B);
        real _t0F2D = prim |()|00B5<$[]> (_t0F2C);
        real _t0F2E = 0.1e-20;
        bool _t0F2F = prim >=007E (_t0F2D, _t0F2E);
        bool _t0F30 = prim $and01C4 (_t0F28, _t0F2F);
        bool _t0F31 = prim $and01C4 (_t0F1A, _t0F30);
        if _t0F31 {
          real _t0F32 = 0.1e1;
          real _t0F33 = 0.1e-8;
          real _t0F34 = prim +0017<$[]> (_t0F32, _t0F33);
          real _t0F35 = 0.1e1;
          real _t0F36 = 0.1e1;
          vec2 _t0F37 = [_t0F35, _t0F36];
          real _t0F38 = 0.e0;
          real _t0F39 = 0.e0;
          vec2 _t0F3A = [_t0F38, _t0F39];
          vec2 _t0F3B = prim -0026<$[2]> (_t0F3A, _t0882);
          real _t0F3C = 0.e0;
          real _t0F3D = 0.1e1;
          vec2 _t0F3E = [_t0F3C, _t0F3D];
          real _t0F3F = 0.e0;
          real _t0F40 = 0.1e1;
          vec2 _t0F41 = [_t0F3F, _t0F40];
          real _t0F42 = prim ×00BD (_t088D, _t0F41);
          vec2 _t0F43 = prim /0057<$[2]> (_t0F3E, _t0F42);
          real _t0F44 = prim ×00BD (_t0F3B, _t0F43);
          vec2 _t0F45 = prim *0038<$[2]> (_t088D, _t0F44);
          vec2 _t0F46 = prim +0017<$[2]> (_t0882, _t0F45);
          real _t0F47 = prim •00CE<$[2]; $[2]; $[]> (_t0F37, _t0F46);
          bool _t0F48 = prim >0080 (_t0F34, _t0F47);
          real _t0F49 = 0.1e-8;
          real _t0F4A = 0.1e-8;
          vec2 _t0F4B = [_t0F49, _t0F4A];
          real _t0F4C = 0.e0;
          real _t0F4D = 0.e0;
          vec2 _t0F4E = [_t0F4C, _t0F4D];
          vec2 _t0F4F = prim -0026<$[2]> (_t0F4E, _t0882);
          real _t0F50 = 0.e0;
          real _t0F51 = 0.1e1;
          vec2 _t0F52 = [_t0F50, _t0F51];
          real _t0F53 = 0.e0;
          real _t0F54 = 0.1e1;
          vec2 _t0F55 = [_t0F53, _t0F54];
          real _t0F56 = prim ×00BD (_t088D, _t0F55);
          vec2 _t0F57 = prim /0057<$[2]> (_t0F52, _t0F56);
          real _t0F58 = prim ×00BD (_t0F4F, _t0F57);
          vec2 _t0F59 = prim *0038<$[2]> (_t088D, _t0F58);
          vec2 _t0F5A = prim +0017<$[2]> (_t0882, _t0F59);
          vec2 _t0F5B = prim +0017<$[2]> (_t0F4B, _t0F5A);
          real _t0F5C = _t0F5B[0];
          real _t0F5D = -0.e0;
          bool _t0F5E = prim >0080 (_t0F5C, _t0F5D);
          real _t0F5F = 0.1e-8;
          real _t0F60 = 0.1e-8;
          vec2 _t0F61 = [_t0F5F, _t0F60];
          real _t0F62 = 0.e0;
          real _t0F63 = 0.e0;
          vec2 _t0F64 = [_t0F62, _t0F63];
          vec2 _t0F65 = prim -0026<$[2]> (_t0F64, _t0882);
          real _t0F66 = 0.e0;
          real _t0F67 = 0.1e1;
          vec2 _t0F68 = [_t0F66, _t0F67];
          real _t0F69 = 0.e0;
          real _t0F6A = 0.1e1;
          vec2 _t0F6B = [_t0F69, _t0F6A];
          real _t0F6C = prim ×00BD (_t088D, _t0F6B);
          vec2 _t0F6D = prim /0057<$[2]> (_t0F68, _t0F6C);
          real _t0F6E = prim ×00BD (_t0F65, _t0F6D);
          vec2 _t0F6F = prim *0038<$[2]> (_t088D, _t0F6E);
          vec2 _t0F70 = prim +0017<$[2]> (_t0882, _t0F6F);
          vec2 _t0F71 = prim +0017<$[2]> (_t0F61, _t0F70);
          real _t0F72 = _t0F71[1];
          real _t0F73 = -0.e0;
          bool _t0F74 = prim >0080 (_t0F72, _t0F73);
          bool _t0F75 = prim $and01C4 (_t0F5E, _t0F74);
          bool _t0F76 = prim $and01C4 (_t0F48, _t0F75);
          if _t0F76 {
            real _t0F77 = 0.e0;
            real _t0F78 = 0.e0;
            vec2 _t0F79 = [_t0F77, _t0F78];
            vec2 _t0F7A = prim -0026<$[2]> (_t0F79, _t0882);
            real _t0F7B = 0.e0;
            real _t0F7C = 0.1e1;
            vec2 _t0F7D = [_t0F7B, _t0F7C];
            real _t0F7E = 0.e0;
            real _t0F7F = 0.1e1;
            vec2 _t0F80 = [_t0F7E, _t0F7F];
            real _t0F81 = prim ×00BD (_t088D, _t0F80);
            vec2 _t0F82 = prim /0057<$[2]> (_t0F7D, _t0F81);
            time0E92 = prim ×00BD (_t0F7A, _t0F82);
            face0E93 = 1;
          }
        }
        real _t0F83 = 0.e0;
        real _t0F84 = 0.e0;
        vec2 _t0F85 = [_t0F83, _t0F84];
        vec2 _t0F86 = prim -0026<$[2]> (_t0F85, _t0882);
        real _t0F87 = 0.1e1;
        real _t0F88 = 0.e0;
        vec2 _t0F89 = [_t0F87, _t0F88];
        real _t0F8A = 0.1e1;
        real _t0F8B = 0.e0;
        vec2 _t0F8C = [_t0F8A, _t0F8B];
        real _t0F8D = prim ×00BD (_t088D, _t0F8C);
        vec2 _t0F8E = prim /0057<$[2]> (_t0F89, _t0F8D);
        real _t0F8F = prim ×00BD (_t0F86, _t0F8E);
        real _t0F90 = -0.1e-15;
        bool _t0F91 = prim >=007E (_t0F8F, _t0F90);
        real _t0F92 = 0.e0;
        real _t0F93 = 0.e0;
        vec2 _t0F94 = [_t0F92, _t0F93];
        vec2 _t0F95 = prim -0026<$[2]> (_t0F94, _t0882);
        real _t0F96 = 0.1e1;
        real _t0F97 = 0.e0;
        vec2 _t0F98 = [_t0F96, _t0F97];
        real _t0F99 = 0.1e1;
        real _t0F9A = 0.e0;
        vec2 _t0F9B = [_t0F99, _t0F9A];
        real _t0F9C = prim ×00BD (_t088D, _t0F9B);
        vec2 _t0F9D = prim /0057<$[2]> (_t0F98, _t0F9C);
        real _t0F9E = prim ×00BD (_t0F95, _t0F9D);
        bool _t0F9F = prim >0080 (time0E92, _t0F9E);
        real _t0FA0 = 0.1e1;
        real _t0FA1 = 0.e0;
        vec2 _t0FA2 = [_t0FA0, _t0FA1];
        real _t0FA3 = prim ×00BD (_t088D, _t0FA2);
        real _t0FA4 = prim |()|00B5<$[]> (_t0FA3);
        real _t0FA5 = 0.1e-20;
        bool _t0FA6 = prim >=007E (_t0FA4, _t0FA5);
        bool _t0FA7 = prim $and01C4 (_t0F9F, _t0FA6);
        bool _t0FA8 = prim $and01C4 (_t0F91, _t0FA7);
        if _t0FA8 {
          real _t0FA9 = 0.1e1;
          real _t0FAA = 0.1e-8;
          real _t0FAB = prim +0017<$[]> (_t0FA9, _t0FAA);
          real _t0FAC = 0.1e1;
          real _t0FAD = 0.1e1;
          vec2 _t0FAE = [_t0FAC, _t0FAD];
          real _t0FAF = 0.e0;
          real _t0FB0 = 0.e0;
          vec2 _t0FB1 = [_t0FAF, _t0FB0];
          vec2 _t0FB2 = prim -0026<$[2]> (_t0FB1, _t0882);
          real _t0FB3 = 0.1e1;
          real _t0FB4 = 0.e0;
          vec2 _t0FB5 = [_t0FB3, _t0FB4];
          real _t0FB6 = 0.1e1;
          real _t0FB7 = 0.e0;
          vec2 _t0FB8 = [_t0FB6, _t0FB7];
          real _t0FB9 = prim ×00BD (_t088D, _t0FB8);
          vec2 _t0FBA = prim /0057<$[2]> (_t0FB5, _t0FB9);
          real _t0FBB = prim ×00BD (_t0FB2, _t0FBA);
          vec2 _t0FBC = prim *0038<$[2]> (_t088D, _t0FBB);
          vec2 _t0FBD = prim +0017<$[2]> (_t0882, _t0FBC);
          real _t0FBE = prim •00CE<$[2]; $[2]; $[]> (_t0FAE, _t0FBD);
          bool _t0FBF = prim >0080 (_t0FAB, _t0FBE);
          real _t0FC0 = 0.1e-8;
          real _t0FC1 = 0.1e-8;
          vec2 _t0FC2 = [_t0FC0, _t0FC1];
          real _t0FC3 = 0.e0;
          real _t0FC4 = 0.e0;
          vec2 _t0FC5 = [_t0FC3, _t0FC4];
          vec2 _t0FC6 = prim -0026<$[2]> (_t0FC5, _t0882);
          real _t0FC7 = 0.1e1;
          real _t0FC8 = 0.e0;
          vec2 _t0FC9 = [_t0FC7, _t0FC8];
          real _t0FCA = 0.1e1;
          real _t0FCB = 0.e0;
          vec2 _t0FCC = [_t0FCA, _t0FCB];
          real _t0FCD = prim ×00BD (_t088D, _t0FCC);
          vec2 _t0FCE = prim /0057<$[2]> (_t0FC9, _t0FCD);
          real _t0FCF = prim ×00BD (_t0FC6, _t0FCE);
          vec2 _t0FD0 = prim *0038<$[2]> (_t088D, _t0FCF);
          vec2 _t0FD1 = prim +0017<$[2]> (_t0882, _t0FD0);
          vec2 _t0FD2 = prim +0017<$[2]> (_t0FC2, _t0FD1);
          real _t0FD3 = _t0FD2[0];
          real _t0FD4 = -0.e0;
          bool _t0FD5 = prim >0080 (_t0FD3, _t0FD4);
          real _t0FD6 = 0.1e-8;
          real _t0FD7 = 0.1e-8;
          vec2 _t0FD8 = [_t0FD6, _t0FD7];
          real _t0FD9 = 0.e0;
          real _t0FDA = 0.e0;
          vec2 _t0FDB = [_t0FD9, _t0FDA];
          vec2 _t0FDC = prim -0026<$[2]> (_t0FDB, _t0882);
          real _t0FDD = 0.1e1;
          real _t0FDE = 0.e0;
          vec2 _t0FDF = [_t0FDD, _t0FDE];
          real _t0FE0 = 0.1e1;
          real _t0FE1 = 0.e0;
          vec2 _t0FE2 = [_t0FE0, _t0FE1];
          real _t0FE3 = prim ×00BD (_t088D, _t0FE2);
          vec2 _t0FE4 = prim /0057<$[2]> (_t0FDF, _t0FE3);
          real _t0FE5 = prim ×00BD (_t0FDC, _t0FE4);
          vec2 _t0FE6 = prim *0038<$[2]> (_t088D, _t0FE5);
          vec2 _t0FE7 = prim +0017<$[2]> (_t0882, _t0FE6);
          vec2 _t0FE8 = prim +0017<$[2]> (_t0FD8, _t0FE7);
          real _t0FE9 = _t0FE8[1];
          real _t0FEA = -0.e0;
          bool _t0FEB = prim >0080 (_t0FE9, _t0FEA);
          bool _t0FEC = prim $and01C4 (_t0FD5, _t0FEB);
          bool _t0FED = prim $and01C4 (_t0FBF, _t0FEC);
          if _t0FED {
            real _t0FEE = 0.e0;
            real _t0FEF = 0.e0;
            vec2 _t0FF0 = [_t0FEE, _t0FEF];
            vec2 _t0FF1 = prim -0026<$[2]> (_t0FF0, _t0882);
            real _t0FF2 = 0.1e1;
            real _t0FF3 = 0.e0;
            vec2 _t0FF4 = [_t0FF2, _t0FF3];
            real _t0FF5 = 0.1e1;
            real _t0FF6 = 0.e0;
            vec2 _t0FF7 = [_t0FF5, _t0FF6];
            real _t0FF8 = prim ×00BD (_t088D, _t0FF7);
            vec2 _t0FF9 = prim /0057<$[2]> (_t0FF4, _t0FF8);
            time0E92 = prim ×00BD (_t0FF1, _t0FF9);
            face0E93 = 2;
          }
        }
        int _t0FFA = -1;
        bool _t0FFB = prim !=0086 (face0E93, _t0FFA);
        if _t0FFB {
          real _t0FFC = 0.e0;
          real _t0FFD = prim max0125 (time0E92, _t0FFC);
          real _t0FFE = (real)face0E93;
          vec2 _t0FFF = [_t0FFD, _t0FFE];
          _t088E = _t0FFF;
        } else {
          real _t1000 = -0.1e1;
          real _t1001 = -0.1e1;
          vec2 _t1002 = [_t1000, _t1001];
          _t088E = _t1002;
        }
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2;
          real time0D21 = +inf;
          int face0D22 = -1;
          real faceTime0D23 = -inf;
          real _t0D24 = 0.1e1;
          real _t0D25 = 0.e0;
          vec2 _t0D26 = [_t0D24, _t0D25];
          vec2 _t0D27 = prim -0026<$[2]> (_t0D26, _t08C6);
          real _t0D28 = -0.1e1;
          real _t0D29 = 0.1e1;
          vec2 _t0D2A = [_t0D28, _t0D29];
          real _t0D2B = -0.1e1;
          real _t0D2C = 0.1e1;
          vec2 _t0D2D = [_t0D2B, _t0D2C];
          real _t0D2E = prim ×00BD (_t08D1, _t0D2D);
          vec2 _t0D2F = prim /0057<$[2]> (_t0D2A, _t0D2E);
          real _t0D30 = prim ×00BD (_t0D27, _t0D2F);
          real _t0D31 = -0.1e-15;
          bool _t0D32 = prim >=007E (_t0D30, _t0D31);
          real _t0D33 = 0.1e1;
          real _t0D34 = 0.e0;
          vec2 _t0D35 = [_t0D33, _t0D34];
          vec2 _t0D36 = prim -0026<$[2]> (_t0D35, _t08C6);
          real _t0D37 = -0.1e1;
          real _t0D38 = 0.1e1;
          vec2 _t0D39 = [_t0D37, _t0D38];
          real _t0D3A = -0.1e1;
          real _t0D3B = 0.1e1;
          vec2 _t0D3C = [_t0D3A, _t0D3B];
          real _t0D3D = prim ×00BD (_t08D1, _t0D3C);
          vec2 _t0D3E = prim /0057<$[2]> (_t0D39, _t0D3D);
          real _t0D3F = prim ×00BD (_t0D36, _t0D3E);
          bool _t0D40 = prim >0080 (time0D21, _t0D3F);
          real _t0D41 = -0.1e1;
          real _t0D42 = 0.1e1;
          vec2 _t0D43 = [_t0D41, _t0D42];
          real _t0D44 = prim ×00BD (_t08D1, _t0D43);
          real _t0D45 = prim |()|00B5<$[]> (_t0D44);
          real _t0D46 = 0.1e-20;
          bool _t0D47 = prim >=007E (_t0D45, _t0D46);
          bool _t0D48 = prim $and01C4 (_t0D40, _t0D47);
          bool _t0D49 = prim $and01C4 (_t0D32, _t0D48);
          if _t0D49 {
            real _t0D4A = 0.1e1;
            real _t0D4B = 0.1e-8;
            real _t0D4C = prim +0017<$[]> (_t0D4A, _t0D4B);
            real _t0D4D = 0.1e1;
            real _t0D4E = 0.1e1;
            vec2 _t0D4F = [_t0D4D, _t0D4E];
            real _t0D50 = 0.1e1;
            real _t0D51 = 0.e0;
            vec2 _t0D52 = [_t0D50, _t0D51];
            vec2 _t0D53 = prim -0026<$[2]> (_t0D52, _t08C6);
            real _t0D54 = -0.1e1;
            real _t0D55 = 0.1e1;
            vec2 _t0D56 = [_t0D54, _t0D55];
            real _t0D57 = -0.1e1;
            real _t0D58 = 0.1e1;
            vec2 _t0D59 = [_t0D57, _t0D58];
            real _t0D5A = prim ×00BD (_t08D1, _t0D59);
            vec2 _t0D5B = prim /0057<$[2]> (_t0D56, _t0D5A);
            real _t0D5C = prim ×00BD (_t0D53, _t0D5B);
            vec2 _t0D5D = prim *0038<$[2]> (_t08D1, _t0D5C);
            vec2 _t0D5E = prim +0017<$[2]> (_t08C6, _t0D5D);
            real _t0D5F = prim •00CE<$[2]; $[2]; $[]> (_t0D4F, _t0D5E);
            bool _t0D60 = prim >0080 (_t0D4C, _t0D5F);
            real _t0D61 = 0.1e-8;
            real _t0D62 = 0.1e-8;
            vec2 _t0D63 = [_t0D61, _t0D62];
            real _t0D64 = 0.1e1;
            real _t0D65 = 0.e0;
            vec2 _t0D66 = [_t0D64, _t0D65];
            vec2 _t0D67 = prim -0026<$[2]> (_t0D66, _t08C6);
            real _t0D68 = -0.1e1;
            real _t0D69 = 0.1e1;
            vec2 _t0D6A = [_t0D68, _t0D69];
            real _t0D6B = -0.1e1;
            real _t0D6C = 0.1e1;
            vec2 _t0D6D = [_t0D6B, _t0D6C];
            real _t0D6E = prim ×00BD (_t08D1, _t0D6D);
            vec2 _t0D6F = prim /0057<$[2]> (_t0D6A, _t0D6E);
            real _t0D70 = prim ×00BD (_t0D67, _t0D6F);
            vec2 _t0D71 = prim *0038<$[2]> (_t08D1, _t0D70);
            vec2 _t0D72 = prim +0017<$[2]> (_t08C6, _t0D71);
            vec2 _t0D73 = prim +0017<$[2]> (_t0D63, _t0D72);
            real _t0D74 = _t0D73[0];
            real _t0D75 = -0.e0;
            bool _t0D76 = prim >0080 (_t0D74, _t0D75);
            real _t0D77 = 0.1e-8;
            real _t0D78 = 0.1e-8;
            vec2 _t0D79 = [_t0D77, _t0D78];
            real _t0D7A = 0.1e1;
            real _t0D7B = 0.e0;
            vec2 _t0D7C = [_t0D7A, _t0D7B];
            vec2 _t0D7D = prim -0026<$[2]> (_t0D7C, _t08C6);
            real _t0D7E = -0.1e1;
            real _t0D7F = 0.1e1;
            vec2 _t0D80 = [_t0D7E, _t0D7F];
            real _t0D81 = -0.1e1;
            real _t0D82 = 0.1e1;
            vec2 _t0D83 = [_t0D81, _t0D82];
            real _t0D84 = prim ×00BD (_t08D1, _t0D83);
            vec2 _t0D85 = prim /0057<$[2]> (_t0D80, _t0D84);
            real _t0D86 = prim ×00BD (_t0D7D, _t0D85);
            vec2 _t0D87 = prim *0038<$[2]> (_t08D1, _t0D86);
            vec2 _t0D88 = prim +0017<$[2]> (_t08C6, _t0D87);
            vec2 _t0D89 = prim +0017<$[2]> (_t0D79, _t0D88);
            real _t0D8A = _t0D89[1];
            real _t0D8B = -0.e0;
            bool _t0D8C = prim >0080 (_t0D8A, _t0D8B);
            bool _t0D8D = prim $and01C4 (_t0D76, _t0D8C);
            bool _t0D8E = prim $and01C4 (_t0D60, _t0D8D);
            if _t0D8E {
              real _t0D8F = 0.1e1;
              real _t0D90 = 0.e0;
              vec2 _t0D91 = [_t0D8F, _t0D90];
              vec2 _t0D92 = prim -0026<$[2]> (_t0D91, _t08C6);
              real _t0D93 = -0.1e1;
              real _t0D94 = 0.1e1;
              vec2 _t0D95 = [_t0D93, _t0D94];
              real _t0D96 = -0.1e1;
              real _t0D97 = 0.1e1;
              vec2 _t0D98 = [_t0D96, _t0D97];
              real _t0D99 = prim ×00BD (_t08D1, _t0D98);
              vec2 _t0D9A = prim /0057<$[2]> (_t0D95, _t0D99);
              time0D21 = prim ×00BD (_t0D92, _t0D9A);
              face0D22 = 0;
            }
          }
          real _t0D9B = 0.e0;
          real _t0D9C = 0.e0;
          vec2 _t0D9D = [_t0D9B, _t0D9C];
          vec2 _t0D9E = prim -0026<$[2]> (_t0D9D, _t08C6);
          real _t0D9F = 0.e0;
          real _t0DA0 = 0.1e1;
          vec2 _t0DA1 = [_t0D9F, _t0DA0];
          real _t0DA2 = 0.e0;
          real _t0DA3 = 0.1e1;
          vec2 _t0DA4 = [_t0DA2, _t0DA3];
          real _t0DA5 = prim ×00BD (_t08D1, _t0DA4);
          vec2 _t0DA6 = prim /0057<$[2]> (_t0DA1, _t0DA5);
          real _t0DA7 = prim ×00BD (_t0D9E, _t0DA6);
          real _t0DA8 = -0.1e-15;
          bool _t0DA9 = prim >=007E (_t0DA7, _t0DA8);
          real _t0DAA = 0.e0;
          real _t0DAB = 0.e0;
          vec2 _t0DAC = [_t0DAA, _t0DAB];
          vec2 _t0DAD = prim -0026<$[2]> (_t0DAC, _t08C6);
          real _t0DAE = 0.e0;
          real _t0DAF = 0.1e1;
          vec2 _t0DB0 = [_t0DAE, _t0DAF];
          real _t0DB1 = 0.e0;
          real _t0DB2 = 0.1e1;
          vec2 _t0DB3 = [_t0DB1, _t0DB2];
          real _t0DB4 = prim ×00BD (_t08D1, _t0DB3);
          vec2 _t0DB5 = prim /0057<$[2]> (_t0DB0, _t0DB4);
          real _t0DB6 = prim ×00BD (_t0DAD, _t0DB5);
          bool _t0DB7 = prim >0080 (time0D21, _t0DB6);
          real _t0DB8 = 0.e0;
          real _t0DB9 = 0.1e1;
          vec2 _t0DBA = [_t0DB8, _t0DB9];
          real _t0DBB = prim ×00BD (_t08D1, _t0DBA);
          real _t0DBC = prim |()|00B5<$[]> (_t0DBB);
          real _t0DBD = 0.1e-20;
          bool _t0DBE = prim >=007E (_t0DBC, _t0DBD);
          bool _t0DBF = prim $and01C4 (_t0DB7, _t0DBE);
          bool _t0DC0 = prim $and01C4 (_t0DA9, _t0DBF);
          if _t0DC0 {
            real _t0DC1 = 0.1e1;
            real _t0DC2 = 0.1e-8;
            real _t0DC3 = prim +0017<$[]> (_t0DC1, _t0DC2);
            real _t0DC4 = 0.1e1;
            real _t0DC5 = 0.1e1;
            vec2 _t0DC6 = [_t0DC4, _t0DC5];
            real _t0DC7 = 0.e0;
            real _t0DC8 = 0.e0;
            vec2 _t0DC9 = [_t0DC7, _t0DC8];
            vec2 _t0DCA = prim -0026<$[2]> (_t0DC9, _t08C6);
            real _t0DCB = 0.e0;
            real _t0DCC = 0.1e1;
            vec2 _t0DCD = [_t0DCB, _t0DCC];
            real _t0DCE = 0.e0;
            real _t0DCF = 0.1e1;
            vec2 _t0DD0 = [_t0DCE, _t0DCF];
            real _t0DD1 = prim ×00BD (_t08D1, _t0DD0);
            vec2 _t0DD2 = prim /0057<$[2]> (_t0DCD, _t0DD1);
            real _t0DD3 = prim ×00BD (_t0DCA, _t0DD2);
            vec2 _t0DD4 = prim *0038<$[2]> (_t08D1, _t0DD3);
            vec2 _t0DD5 = prim +0017<$[2]> (_t08C6, _t0DD4);
            real _t0DD6 = prim •00CE<$[2]; $[2]; $[]> (_t0DC6, _t0DD5);
            bool _t0DD7 = prim >0080 (_t0DC3, _t0DD6);
            real _t0DD8 = 0.1e-8;
            real _t0DD9 = 0.1e-8;
            vec2 _t0DDA = [_t0DD8, _t0DD9];
            real _t0DDB = 0.e0;
            real _t0DDC = 0.e0;
            vec2 _t0DDD = [_t0DDB, _t0DDC];
            vec2 _t0DDE = prim -0026<$[2]> (_t0DDD, _t08C6);
            real _t0DDF = 0.e0;
            real _t0DE0 = 0.1e1;
            vec2 _t0DE1 = [_t0DDF, _t0DE0];
            real _t0DE2 = 0.e0;
            real _t0DE3 = 0.1e1;
            vec2 _t0DE4 = [_t0DE2, _t0DE3];
            real _t0DE5 = prim ×00BD (_t08D1, _t0DE4);
            vec2 _t0DE6 = prim /0057<$[2]> (_t0DE1, _t0DE5);
            real _t0DE7 = prim ×00BD (_t0DDE, _t0DE6);
            vec2 _t0DE8 = prim *0038<$[2]> (_t08D1, _t0DE7);
            vec2 _t0DE9 = prim +0017<$[2]> (_t08C6, _t0DE8);
            vec2 _t0DEA = prim +0017<$[2]> (_t0DDA, _t0DE9);
            real _t0DEB = _t0DEA[0];
            real _t0DEC = -0.e0;
            bool _t0DED = prim >0080 (_t0DEB, _t0DEC);
            real _t0DEE = 0.1e-8;
            real _t0DEF = 0.1e-8;
            vec2 _t0DF0 = [_t0DEE, _t0DEF];
            real _t0DF1 = 0.e0;
            real _t0DF2 = 0.e0;
            vec2 _t0DF3 = [_t0DF1, _t0DF2];
            vec2 _t0DF4 = prim -0026<$[2]> (_t0DF3, _t08C6);
            real _t0DF5 = 0.e0;
            real _t0DF6 = 0.1e1;
            vec2 _t0DF7 = [_t0DF5, _t0DF6];
            real _t0DF8 = 0.e0;
            real _t0DF9 = 0.1e1;
            vec2 _t0DFA = [_t0DF8, _t0DF9];
            real _t0DFB = prim ×00BD (_t08D1, _t0DFA);
            vec2 _t0DFC = prim /0057<$[2]> (_t0DF7, _t0DFB);
            real _t0DFD = prim ×00BD (_t0DF4, _t0DFC);
            vec2 _t0DFE = prim *0038<$[2]> (_t08D1, _t0DFD);
            vec2 _t0DFF = prim +0017<$[2]> (_t08C6, _t0DFE);
            vec2 _t0E00 = prim +0017<$[2]> (_t0DF0, _t0DFF);
            real _t0E01 = _t0E00[1];
            real _t0E02 = -0.e0;
            bool _t0E03 = prim >0080 (_t0E01, _t0E02);
            bool _t0E04 = prim $and01C4 (_t0DED, _t0E03);
            bool _t0E05 = prim $and01C4 (_t0DD7, _t0E04);
            if _t0E05 {
              real _t0E06 = 0.e0;
              real _t0E07 = 0.e0;
              vec2 _t0E08 = [_t0E06, _t0E07];
              vec2 _t0E09 = prim -0026<$[2]> (_t0E08, _t08C6);
              real _t0E0A = 0.e0;
              real _t0E0B = 0.1e1;
              vec2 _t0E0C = [_t0E0A, _t0E0B];
              real _t0E0D = 0.e0;
              real _t0E0E = 0.1e1;
              vec2 _t0E0F = [_t0E0D, _t0E0E];
              real _t0E10 = prim ×00BD (_t08D1, _t0E0F);
              vec2 _t0E11 = prim /0057<$[2]> (_t0E0C, _t0E10);
              time0D21 = prim ×00BD (_t0E09, _t0E11);
              face0D22 = 1;
            }
          }
          real _t0E12 = 0.e0;
          real _t0E13 = 0.e0;
          vec2 _t0E14 = [_t0E12, _t0E13];
          vec2 _t0E15 = prim -0026<$[2]> (_t0E14, _t08C6);
          real _t0E16 = 0.1e1;
          real _t0E17 = 0.e0;
          vec2 _t0E18 = [_t0E16, _t0E17];
          real _t0E19 = 0.1e1;
          real _t0E1A = 0.e0;
          vec2 _t0E1B = [_t0E19, _t0E1A];
          real _t0E1C = prim ×00BD (_t08D1, _t0E1B);
          vec2 _t0E1D = prim /0057<$[2]> (_t0E18, _t0E1C);
          real _t0E1E = prim ×00BD (_t0E15, _t0E1D);
          real _t0E1F = -0.1e-15;
          bool _t0E20 = prim >=007E (_t0E1E, _t0E1F);
          real _t0E21 = 0.e0;
          real _t0E22 = 0.e0;
          vec2 _t0E23 = [_t0E21, _t0E22];
          vec2 _t0E24 = prim -0026<$[2]> (_t0E23, _t08C6);
          real _t0E25 = 0.1e1;
          real _t0E26 = 0.e0;
          vec2 _t0E27 = [_t0E25, _t0E26];
          real _t0E28 = 0.1e1;
          real _t0E29 = 0.e0;
          vec2 _t0E2A = [_t0E28, _t0E29];
          real _t0E2B = prim ×00BD (_t08D1, _t0E2A);
          vec2 _t0E2C = prim /0057<$[2]> (_t0E27, _t0E2B);
          real _t0E2D = prim ×00BD (_t0E24, _t0E2C);
          bool _t0E2E = prim >0080 (time0D21, _t0E2D);
          real _t0E2F = 0.1e1;
          real _t0E30 = 0.e0;
          vec2 _t0E31 = [_t0E2F, _t0E30];
          real _t0E32 = prim ×00BD (_t08D1, _t0E31);
          real _t0E33 = prim |()|00B5<$[]> (_t0E32);
          real _t0E34 = 0.1e-20;
          bool _t0E35 = prim >=007E (_t0E33, _t0E34);
          bool _t0E36 = prim $and01C4 (_t0E2E, _t0E35);
          bool _t0E37 = prim $and01C4 (_t0E20, _t0E36);
          if _t0E37 {
            real _t0E38 = 0.1e1;
            real _t0E39 = 0.1e-8;
            real _t0E3A = prim +0017<$[]> (_t0E38, _t0E39);
            real _t0E3B = 0.1e1;
            real _t0E3C = 0.1e1;
            vec2 _t0E3D = [_t0E3B, _t0E3C];
            real _t0E3E = 0.e0;
            real _t0E3F = 0.e0;
            vec2 _t0E40 = [_t0E3E, _t0E3F];
            vec2 _t0E41 = prim -0026<$[2]> (_t0E40, _t08C6);
            real _t0E42 = 0.1e1;
            real _t0E43 = 0.e0;
            vec2 _t0E44 = [_t0E42, _t0E43];
            real _t0E45 = 0.1e1;
            real _t0E46 = 0.e0;
            vec2 _t0E47 = [_t0E45, _t0E46];
            real _t0E48 = prim ×00BD (_t08D1, _t0E47);
            vec2 _t0E49 = prim /0057<$[2]> (_t0E44, _t0E48);
            real _t0E4A = prim ×00BD (_t0E41, _t0E49);
            vec2 _t0E4B = prim *0038<$[2]> (_t08D1, _t0E4A);
            vec2 _t0E4C = prim +0017<$[2]> (_t08C6, _t0E4B);
            real _t0E4D = prim •00CE<$[2]; $[2]; $[]> (_t0E3D, _t0E4C);
            bool _t0E4E = prim >0080 (_t0E3A, _t0E4D);
            real _t0E4F = 0.1e-8;
            real _t0E50 = 0.1e-8;
            vec2 _t0E51 = [_t0E4F, _t0E50];
            real _t0E52 = 0.e0;
            real _t0E53 = 0.e0;
            vec2 _t0E54 = [_t0E52, _t0E53];
            vec2 _t0E55 = prim -0026<$[2]> (_t0E54, _t08C6);
            real _t0E56 = 0.1e1;
            real _t0E57 = 0.e0;
            vec2 _t0E58 = [_t0E56, _t0E57];
            real _t0E59 = 0.1e1;
            real _t0E5A = 0.e0;
            vec2 _t0E5B = [_t0E59, _t0E5A];
            real _t0E5C = prim ×00BD (_t08D1, _t0E5B);
            vec2 _t0E5D = prim /0057<$[2]> (_t0E58, _t0E5C);
            real _t0E5E = prim ×00BD (_t0E55, _t0E5D);
            vec2 _t0E5F = prim *0038<$[2]> (_t08D1, _t0E5E);
            vec2 _t0E60 = prim +0017<$[2]> (_t08C6, _t0E5F);
            vec2 _t0E61 = prim +0017<$[2]> (_t0E51, _t0E60);
            real _t0E62 = _t0E61[0];
            real _t0E63 = -0.e0;
            bool _t0E64 = prim >0080 (_t0E62, _t0E63);
            real _t0E65 = 0.1e-8;
            real _t0E66 = 0.1e-8;
            vec2 _t0E67 = [_t0E65, _t0E66];
            real _t0E68 = 0.e0;
            real _t0E69 = 0.e0;
            vec2 _t0E6A = [_t0E68, _t0E69];
            vec2 _t0E6B = prim -0026<$[2]> (_t0E6A, _t08C6);
            real _t0E6C = 0.1e1;
            real _t0E6D = 0.e0;
            vec2 _t0E6E = [_t0E6C, _t0E6D];
            real _t0E6F = 0.1e1;
            real _t0E70 = 0.e0;
            vec2 _t0E71 = [_t0E6F, _t0E70];
            real _t0E72 = prim ×00BD (_t08D1, _t0E71);
            vec2 _t0E73 = prim /0057<$[2]> (_t0E6E, _t0E72);
            real _t0E74 = prim ×00BD (_t0E6B, _t0E73);
            vec2 _t0E75 = prim *0038<$[2]> (_t08D1, _t0E74);
            vec2 _t0E76 = prim +0017<$[2]> (_t08C6, _t0E75);
            vec2 _t0E77 = prim +0017<$[2]> (_t0E67, _t0E76);
            real _t0E78 = _t0E77[1];
            real _t0E79 = -0.e0;
            bool _t0E7A = prim >0080 (_t0E78, _t0E79);
            bool _t0E7B = prim $and01C4 (_t0E64, _t0E7A);
            bool _t0E7C = prim $and01C4 (_t0E4E, _t0E7B);
            if _t0E7C {
              real _t0E7D = 0.e0;
              real _t0E7E = 0.e0;
              vec2 _t0E7F = [_t0E7D, _t0E7E];
              vec2 _t0E80 = prim -0026<$[2]> (_t0E7F, _t08C6);
              real _t0E81 = 0.1e1;
              real _t0E82 = 0.e0;
              vec2 _t0E83 = [_t0E81, _t0E82];
              real _t0E84 = 0.1e1;
              real _t0E85 = 0.e0;
              vec2 _t0E86 = [_t0E84, _t0E85];
              real _t0E87 = prim ×00BD (_t08D1, _t0E86);
              vec2 _t0E88 = prim /0057<$[2]> (_t0E83, _t0E87);
              time0D21 = prim ×00BD (_t0E80, _t0E88);
              face0D22 = 2;
            }
          }
          int _t0E89 = -1;
          bool _t0E8A = prim !=0086 (face0D22, _t0E89);
          if _t0E8A {
            real _t0E8B = 0.e0;
            real _t0E8C = prim max0125 (time0D21, _t0E8B);
            real _t0E8D = (real)face0D22;
            vec2 _t0E8E = [_t0E8C, _t0E8D];
            _t08D2 = _t0E8E;
          } else {
            real _t0E8F = -0.1e1;
            real _t0E90 = -0.1e1;
            vec2 _t0E91 = [_t0E8F, _t0E90];
            _t08D2 = _t0E91;
          }
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5;
          real time0BB0 = +inf;
          int face0BB1 = -1;
          real faceTime0BB2 = -inf;
          real _t0BB3 = 0.1e1;
          real _t0BB4 = 0.e0;
          vec2 _t0BB5 = [_t0BB3, _t0BB4];
          vec2 _t0BB6 = prim -0026<$[2]> (_t0BB5, _t08E9);
          real _t0BB7 = -0.1e1;
          real _t0BB8 = 0.1e1;
          vec2 _t0BB9 = [_t0BB7, _t0BB8];
          real _t0BBA = -0.1e1;
          real _t0BBB = 0.1e1;
          vec2 _t0BBC = [_t0BBA, _t0BBB];
          real _t0BBD = prim ×00BD (_t08F4, _t0BBC);
          vec2 _t0BBE = prim /0057<$[2]> (_t0BB9, _t0BBD);
          real _t0BBF = prim ×00BD (_t0BB6, _t0BBE);
          real _t0BC0 = -0.1e-15;
          bool _t0BC1 = prim >=007E (_t0BBF, _t0BC0);
          real _t0BC2 = 0.1e1;
          real _t0BC3 = 0.e0;
          vec2 _t0BC4 = [_t0BC2, _t0BC3];
          vec2 _t0BC5 = prim -0026<$[2]> (_t0BC4, _t08E9);
          real _t0BC6 = -0.1e1;
          real _t0BC7 = 0.1e1;
          vec2 _t0BC8 = [_t0BC6, _t0BC7];
          real _t0BC9 = -0.1e1;
          real _t0BCA = 0.1e1;
          vec2 _t0BCB = [_t0BC9, _t0BCA];
          real _t0BCC = prim ×00BD (_t08F4, _t0BCB);
          vec2 _t0BCD = prim /0057<$[2]> (_t0BC8, _t0BCC);
          real _t0BCE = prim ×00BD (_t0BC5, _t0BCD);
          bool _t0BCF = prim >0080 (time0BB0, _t0BCE);
          real _t0BD0 = -0.1e1;
          real _t0BD1 = 0.1e1;
          vec2 _t0BD2 = [_t0BD0, _t0BD1];
          real _t0BD3 = prim ×00BD (_t08F4, _t0BD2);
          real _t0BD4 = prim |()|00B5<$[]> (_t0BD3);
          real _t0BD5 = 0.1e-20;
          bool _t0BD6 = prim >=007E (_t0BD4, _t0BD5);
          bool _t0BD7 = prim $and01C4 (_t0BCF, _t0BD6);
          bool _t0BD8 = prim $and01C4 (_t0BC1, _t0BD7);
          if _t0BD8 {
            real _t0BD9 = 0.1e1;
            real _t0BDA = 0.1e-8;
            real _t0BDB = prim +0017<$[]> (_t0BD9, _t0BDA);
            real _t0BDC = 0.1e1;
            real _t0BDD = 0.1e1;
            vec2 _t0BDE = [_t0BDC, _t0BDD];
            real _t0BDF = 0.1e1;
            real _t0BE0 = 0.e0;
            vec2 _t0BE1 = [_t0BDF, _t0BE0];
            vec2 _t0BE2 = prim -0026<$[2]> (_t0BE1, _t08E9);
            real _t0BE3 = -0.1e1;
            real _t0BE4 = 0.1e1;
            vec2 _t0BE5 = [_t0BE3, _t0BE4];
            real _t0BE6 = -0.1e1;
            real _t0BE7 = 0.1e1;
            vec2 _t0BE8 = [_t0BE6, _t0BE7];
            real _t0BE9 = prim ×00BD (_t08F4, _t0BE8);
            vec2 _t0BEA = prim /0057<$[2]> (_t0BE5, _t0BE9);
            real _t0BEB = prim ×00BD (_t0BE2, _t0BEA);
            vec2 _t0BEC = prim *0038<$[2]> (_t08F4, _t0BEB);
            vec2 _t0BED = prim +0017<$[2]> (_t08E9, _t0BEC);
            real _t0BEE = prim •00CE<$[2]; $[2]; $[]> (_t0BDE, _t0BED);
            bool _t0BEF = prim >0080 (_t0BDB, _t0BEE);
            real _t0BF0 = 0.1e-8;
            real _t0BF1 = 0.1e-8;
            vec2 _t0BF2 = [_t0BF0, _t0BF1];
            real _t0BF3 = 0.1e1;
            real _t0BF4 = 0.e0;
            vec2 _t0BF5 = [_t0BF3, _t0BF4];
            vec2 _t0BF6 = prim -0026<$[2]> (_t0BF5, _t08E9);
            real _t0BF7 = -0.1e1;
            real _t0BF8 = 0.1e1;
            vec2 _t0BF9 = [_t0BF7, _t0BF8];
            real _t0BFA = -0.1e1;
            real _t0BFB = 0.1e1;
            vec2 _t0BFC = [_t0BFA, _t0BFB];
            real _t0BFD = prim ×00BD (_t08F4, _t0BFC);
            vec2 _t0BFE = prim /0057<$[2]> (_t0BF9, _t0BFD);
            real _t0BFF = prim ×00BD (_t0BF6, _t0BFE);
            vec2 _t0C00 = prim *0038<$[2]> (_t08F4, _t0BFF);
            vec2 _t0C01 = prim +0017<$[2]> (_t08E9, _t0C00);
            vec2 _t0C02 = prim +0017<$[2]> (_t0BF2, _t0C01);
            real _t0C03 = _t0C02[0];
            real _t0C04 = -0.e0;
            bool _t0C05 = prim >0080 (_t0C03, _t0C04);
            real _t0C06 = 0.1e-8;
            real _t0C07 = 0.1e-8;
            vec2 _t0C08 = [_t0C06, _t0C07];
            real _t0C09 = 0.1e1;
            real _t0C0A = 0.e0;
            vec2 _t0C0B = [_t0C09, _t0C0A];
            vec2 _t0C0C = prim -0026<$[2]> (_t0C0B, _t08E9);
            real _t0C0D = -0.1e1;
            real _t0C0E = 0.1e1;
            vec2 _t0C0F = [_t0C0D, _t0C0E];
            real _t0C10 = -0.1e1;
            real _t0C11 = 0.1e1;
            vec2 _t0C12 = [_t0C10, _t0C11];
            real _t0C13 = prim ×00BD (_t08F4, _t0C12);
            vec2 _t0C14 = prim /0057<$[2]> (_t0C0F, _t0C13);
            real _t0C15 = prim ×00BD (_t0C0C, _t0C14);
            vec2 _t0C16 = prim *0038<$[2]> (_t08F4, _t0C15);
            vec2 _t0C17 = prim +0017<$[2]> (_t08E9, _t0C16);
            vec2 _t0C18 = prim +0017<$[2]> (_t0C08, _t0C17);
            real _t0C19 = _t0C18[1];
            real _t0C1A = -0.e0;
            bool _t0C1B = prim >0080 (_t0C19, _t0C1A);
            bool _t0C1C = prim $and01C4 (_t0C05, _t0C1B);
            bool _t0C1D = prim $and01C4 (_t0BEF, _t0C1C);
            if _t0C1D {
              real _t0C1E = 0.1e1;
              real _t0C1F = 0.e0;
              vec2 _t0C20 = [_t0C1E, _t0C1F];
              vec2 _t0C21 = prim -0026<$[2]> (_t0C20, _t08E9);
              real _t0C22 = -0.1e1;
              real _t0C23 = 0.1e1;
              vec2 _t0C24 = [_t0C22, _t0C23];
              real _t0C25 = -0.1e1;
              real _t0C26 = 0.1e1;
              vec2 _t0C27 = [_t0C25, _t0C26];
              real _t0C28 = prim ×00BD (_t08F4, _t0C27);
              vec2 _t0C29 = prim /0057<$[2]> (_t0C24, _t0C28);
              time0BB0 = prim ×00BD (_t0C21, _t0C29);
              face0BB1 = 0;
            }
          }
          real _t0C2A = 0.e0;
          real _t0C2B = 0.e0;
          vec2 _t0C2C = [_t0C2A, _t0C2B];
          vec2 _t0C2D = prim -0026<$[2]> (_t0C2C, _t08E9);
          real _t0C2E = 0.e0;
          real _t0C2F = 0.1e1;
          vec2 _t0C30 = [_t0C2E, _t0C2F];
          real _t0C31 = 0.e0;
          real _t0C32 = 0.1e1;
          vec2 _t0C33 = [_t0C31, _t0C32];
          real _t0C34 = prim ×00BD (_t08F4, _t0C33);
          vec2 _t0C35 = prim /0057<$[2]> (_t0C30, _t0C34);
          real _t0C36 = prim ×00BD (_t0C2D, _t0C35);
          real _t0C37 = -0.1e-15;
          bool _t0C38 = prim >=007E (_t0C36, _t0C37);
          real _t0C39 = 0.e0;
          real _t0C3A = 0.e0;
          vec2 _t0C3B = [_t0C39, _t0C3A];
          vec2 _t0C3C = prim -0026<$[2]> (_t0C3B, _t08E9);
          real _t0C3D = 0.e0;
          real _t0C3E = 0.1e1;
          vec2 _t0C3F = [_t0C3D, _t0C3E];
          real _t0C40 = 0.e0;
          real _t0C41 = 0.1e1;
          vec2 _t0C42 = [_t0C40, _t0C41];
          real _t0C43 = prim ×00BD (_t08F4, _t0C42);
          vec2 _t0C44 = prim /0057<$[2]> (_t0C3F, _t0C43);
          real _t0C45 = prim ×00BD (_t0C3C, _t0C44);
          bool _t0C46 = prim >0080 (time0BB0, _t0C45);
          real _t0C47 = 0.e0;
          real _t0C48 = 0.1e1;
          vec2 _t0C49 = [_t0C47, _t0C48];
          real _t0C4A = prim ×00BD (_t08F4, _t0C49);
          real _t0C4B = prim |()|00B5<$[]> (_t0C4A);
          real _t0C4C = 0.1e-20;
          bool _t0C4D = prim >=007E (_t0C4B, _t0C4C);
          bool _t0C4E = prim $and01C4 (_t0C46, _t0C4D);
          bool _t0C4F = prim $and01C4 (_t0C38, _t0C4E);
          if _t0C4F {
            real _t0C50 = 0.1e1;
            real _t0C51 = 0.1e-8;
            real _t0C52 = prim +0017<$[]> (_t0C50, _t0C51);
            real _t0C53 = 0.1e1;
            real _t0C54 = 0.1e1;
            vec2 _t0C55 = [_t0C53, _t0C54];
            real _t0C56 = 0.e0;
            real _t0C57 = 0.e0;
            vec2 _t0C58 = [_t0C56, _t0C57];
            vec2 _t0C59 = prim -0026<$[2]> (_t0C58, _t08E9);
            real _t0C5A = 0.e0;
            real _t0C5B = 0.1e1;
            vec2 _t0C5C = [_t0C5A, _t0C5B];
            real _t0C5D = 0.e0;
            real _t0C5E = 0.1e1;
            vec2 _t0C5F = [_t0C5D, _t0C5E];
            real _t0C60 = prim ×00BD (_t08F4, _t0C5F);
            vec2 _t0C61 = prim /0057<$[2]> (_t0C5C, _t0C60);
            real _t0C62 = prim ×00BD (_t0C59, _t0C61);
            vec2 _t0C63 = prim *0038<$[2]> (_t08F4, _t0C62);
            vec2 _t0C64 = prim +0017<$[2]> (_t08E9, _t0C63);
            real _t0C65 = prim •00CE<$[2]; $[2]; $[]> (_t0C55, _t0C64);
            bool _t0C66 = prim >0080 (_t0C52, _t0C65);
            real _t0C67 = 0.1e-8;
            real _t0C68 = 0.1e-8;
            vec2 _t0C69 = [_t0C67, _t0C68];
            real _t0C6A = 0.e0;
            real _t0C6B = 0.e0;
            vec2 _t0C6C = [_t0C6A, _t0C6B];
            vec2 _t0C6D = prim -0026<$[2]> (_t0C6C, _t08E9);
            real _t0C6E = 0.e0;
            real _t0C6F = 0.1e1;
            vec2 _t0C70 = [_t0C6E, _t0C6F];
            real _t0C71 = 0.e0;
            real _t0C72 = 0.1e1;
            vec2 _t0C73 = [_t0C71, _t0C72];
            real _t0C74 = prim ×00BD (_t08F4, _t0C73);
            vec2 _t0C75 = prim /0057<$[2]> (_t0C70, _t0C74);
            real _t0C76 = prim ×00BD (_t0C6D, _t0C75);
            vec2 _t0C77 = prim *0038<$[2]> (_t08F4, _t0C76);
            vec2 _t0C78 = prim +0017<$[2]> (_t08E9, _t0C77);
            vec2 _t0C79 = prim +0017<$[2]> (_t0C69, _t0C78);
            real _t0C7A = _t0C79[0];
            real _t0C7B = -0.e0;
            bool _t0C7C = prim >0080 (_t0C7A, _t0C7B);
            real _t0C7D = 0.1e-8;
            real _t0C7E = 0.1e-8;
            vec2 _t0C7F = [_t0C7D, _t0C7E];
            real _t0C80 = 0.e0;
            real _t0C81 = 0.e0;
            vec2 _t0C82 = [_t0C80, _t0C81];
            vec2 _t0C83 = prim -0026<$[2]> (_t0C82, _t08E9);
            real _t0C84 = 0.e0;
            real _t0C85 = 0.1e1;
            vec2 _t0C86 = [_t0C84, _t0C85];
            real _t0C87 = 0.e0;
            real _t0C88 = 0.1e1;
            vec2 _t0C89 = [_t0C87, _t0C88];
            real _t0C8A = prim ×00BD (_t08F4, _t0C89);
            vec2 _t0C8B = prim /0057<$[2]> (_t0C86, _t0C8A);
            real _t0C8C = prim ×00BD (_t0C83, _t0C8B);
            vec2 _t0C8D = prim *0038<$[2]> (_t08F4, _t0C8C);
            vec2 _t0C8E = prim +0017<$[2]> (_t08E9, _t0C8D);
            vec2 _t0C8F = prim +0017<$[2]> (_t0C7F, _t0C8E);
            real _t0C90 = _t0C8F[1];
            real _t0C91 = -0.e0;
            bool _t0C92 = prim >0080 (_t0C90, _t0C91);
            bool _t0C93 = prim $and01C4 (_t0C7C, _t0C92);
            bool _t0C94 = prim $and01C4 (_t0C66, _t0C93);
            if _t0C94 {
              real _t0C95 = 0.e0;
              real _t0C96 = 0.e0;
              vec2 _t0C97 = [_t0C95, _t0C96];
              vec2 _t0C98 = prim -0026<$[2]> (_t0C97, _t08E9);
              real _t0C99 = 0.e0;
              real _t0C9A = 0.1e1;
              vec2 _t0C9B = [_t0C99, _t0C9A];
              real _t0C9C = 0.e0;
              real _t0C9D = 0.1e1;
              vec2 _t0C9E = [_t0C9C, _t0C9D];
              real _t0C9F = prim ×00BD (_t08F4, _t0C9E);
              vec2 _t0CA0 = prim /0057<$[2]> (_t0C9B, _t0C9F);
              time0BB0 = prim ×00BD (_t0C98, _t0CA0);
              face0BB1 = 1;
            }
          }
          real _t0CA1 = 0.e0;
          real _t0CA2 = 0.e0;
          vec2 _t0CA3 = [_t0CA1, _t0CA2];
          vec2 _t0CA4 = prim -0026<$[2]> (_t0CA3, _t08E9);
          real _t0CA5 = 0.1e1;
          real _t0CA6 = 0.e0;
          vec2 _t0CA7 = [_t0CA5, _t0CA6];
          real _t0CA8 = 0.1e1;
          real _t0CA9 = 0.e0;
          vec2 _t0CAA = [_t0CA8, _t0CA9];
          real _t0CAB = prim ×00BD (_t08F4, _t0CAA);
          vec2 _t0CAC = prim /0057<$[2]> (_t0CA7, _t0CAB);
          real _t0CAD = prim ×00BD (_t0CA4, _t0CAC);
          real _t0CAE = -0.1e-15;
          bool _t0CAF = prim >=007E (_t0CAD, _t0CAE);
          real _t0CB0 = 0.e0;
          real _t0CB1 = 0.e0;
          vec2 _t0CB2 = [_t0CB0, _t0CB1];
          vec2 _t0CB3 = prim -0026<$[2]> (_t0CB2, _t08E9);
          real _t0CB4 = 0.1e1;
          real _t0CB5 = 0.e0;
          vec2 _t0CB6 = [_t0CB4, _t0CB5];
          real _t0CB7 = 0.1e1;
          real _t0CB8 = 0.e0;
          vec2 _t0CB9 = [_t0CB7, _t0CB8];
          real _t0CBA = prim ×00BD (_t08F4, _t0CB9);
          vec2 _t0CBB = prim /0057<$[2]> (_t0CB6, _t0CBA);
          real _t0CBC = prim ×00BD (_t0CB3, _t0CBB);
          bool _t0CBD = prim >0080 (time0BB0, _t0CBC);
          real _t0CBE = 0.1e1;
          real _t0CBF = 0.e0;
          vec2 _t0CC0 = [_t0CBE, _t0CBF];
          real _t0CC1 = prim ×00BD (_t08F4, _t0CC0);
          real _t0CC2 = prim |()|00B5<$[]> (_t0CC1);
          real _t0CC3 = 0.1e-20;
          bool _t0CC4 = prim >=007E (_t0CC2, _t0CC3);
          bool _t0CC5 = prim $and01C4 (_t0CBD, _t0CC4);
          bool _t0CC6 = prim $and01C4 (_t0CAF, _t0CC5);
          if _t0CC6 {
            real _t0CC7 = 0.1e1;
            real _t0CC8 = 0.1e-8;
            real _t0CC9 = prim +0017<$[]> (_t0CC7, _t0CC8);
            real _t0CCA = 0.1e1;
            real _t0CCB = 0.1e1;
            vec2 _t0CCC = [_t0CCA, _t0CCB];
            real _t0CCD = 0.e0;
            real _t0CCE = 0.e0;
            vec2 _t0CCF = [_t0CCD, _t0CCE];
            vec2 _t0CD0 = prim -0026<$[2]> (_t0CCF, _t08E9);
            real _t0CD1 = 0.1e1;
            real _t0CD2 = 0.e0;
            vec2 _t0CD3 = [_t0CD1, _t0CD2];
            real _t0CD4 = 0.1e1;
            real _t0CD5 = 0.e0;
            vec2 _t0CD6 = [_t0CD4, _t0CD5];
            real _t0CD7 = prim ×00BD (_t08F4, _t0CD6);
            vec2 _t0CD8 = prim /0057<$[2]> (_t0CD3, _t0CD7);
            real _t0CD9 = prim ×00BD (_t0CD0, _t0CD8);
            vec2 _t0CDA = prim *0038<$[2]> (_t08F4, _t0CD9);
            vec2 _t0CDB = prim +0017<$[2]> (_t08E9, _t0CDA);
            real _t0CDC = prim •00CE<$[2]; $[2]; $[]> (_t0CCC, _t0CDB);
            bool _t0CDD = prim >0080 (_t0CC9, _t0CDC);
            real _t0CDE = 0.1e-8;
            real _t0CDF = 0.1e-8;
            vec2 _t0CE0 = [_t0CDE, _t0CDF];
            real _t0CE1 = 0.e0;
            real _t0CE2 = 0.e0;
            vec2 _t0CE3 = [_t0CE1, _t0CE2];
            vec2 _t0CE4 = prim -0026<$[2]> (_t0CE3, _t08E9);
            real _t0CE5 = 0.1e1;
            real _t0CE6 = 0.e0;
            vec2 _t0CE7 = [_t0CE5, _t0CE6];
            real _t0CE8 = 0.1e1;
            real _t0CE9 = 0.e0;
            vec2 _t0CEA = [_t0CE8, _t0CE9];
            real _t0CEB = prim ×00BD (_t08F4, _t0CEA);
            vec2 _t0CEC = prim /0057<$[2]> (_t0CE7, _t0CEB);
            real _t0CED = prim ×00BD (_t0CE4, _t0CEC);
            vec2 _t0CEE = prim *0038<$[2]> (_t08F4, _t0CED);
            vec2 _t0CEF = prim +0017<$[2]> (_t08E9, _t0CEE);
            vec2 _t0CF0 = prim +0017<$[2]> (_t0CE0, _t0CEF);
            real _t0CF1 = _t0CF0[0];
            real _t0CF2 = -0.e0;
            bool _t0CF3 = prim >0080 (_t0CF1, _t0CF2);
            real _t0CF4 = 0.1e-8;
            real _t0CF5 = 0.1e-8;
            vec2 _t0CF6 = [_t0CF4, _t0CF5];
            real _t0CF7 = 0.e0;
            real _t0CF8 = 0.e0;
            vec2 _t0CF9 = [_t0CF7, _t0CF8];
            vec2 _t0CFA = prim -0026<$[2]> (_t0CF9, _t08E9);
            real _t0CFB = 0.1e1;
            real _t0CFC = 0.e0;
            vec2 _t0CFD = [_t0CFB, _t0CFC];
            real _t0CFE = 0.1e1;
            real _t0CFF = 0.e0;
            vec2 _t0D00 = [_t0CFE, _t0CFF];
            real _t0D01 = prim ×00BD (_t08F4, _t0D00);
            vec2 _t0D02 = prim /0057<$[2]> (_t0CFD, _t0D01);
            real _t0D03 = prim ×00BD (_t0CFA, _t0D02);
            vec2 _t0D04 = prim *0038<$[2]> (_t08F4, _t0D03);
            vec2 _t0D05 = prim +0017<$[2]> (_t08E9, _t0D04);
            vec2 _t0D06 = prim +0017<$[2]> (_t0CF6, _t0D05);
            real _t0D07 = _t0D06[1];
            real _t0D08 = -0.e0;
            bool _t0D09 = prim >0080 (_t0D07, _t0D08);
            bool _t0D0A = prim $and01C4 (_t0CF3, _t0D09);
            bool _t0D0B = prim $and01C4 (_t0CDD, _t0D0A);
            if _t0D0B {
              real _t0D0C = 0.e0;
              real _t0D0D = 0.e0;
              vec2 _t0D0E = [_t0D0C, _t0D0D];
              vec2 _t0D0F = prim -0026<$[2]> (_t0D0E, _t08E9);
              real _t0D10 = 0.1e1;
              real _t0D11 = 0.e0;
              vec2 _t0D12 = [_t0D10, _t0D11];
              real _t0D13 = 0.1e1;
              real _t0D14 = 0.e0;
              vec2 _t0D15 = [_t0D13, _t0D14];
              real _t0D16 = prim ×00BD (_t08F4, _t0D15);
              vec2 _t0D17 = prim /0057<$[2]> (_t0D12, _t0D16);
              time0BB0 = prim ×00BD (_t0D0F, _t0D17);
              face0BB1 = 2;
            }
          }
          int _t0D18 = -1;
          bool _t0D19 = prim !=0086 (face0BB1, _t0D18);
          if _t0D19 {
            real _t0D1A = 0.e0;
            real _t0D1B = prim max0125 (time0BB0, _t0D1A);
            real _t0D1C = (real)face0BB1;
            vec2 _t0D1D = [_t0D1B, _t0D1C];
            _t08F5 = _t0D1D;
          } else {
            real _t0D1E = -0.1e1;
            real _t0D1F = -0.1e1;
            vec2 _t0D20 = [_t0D1E, _t0D1F];
            _t08F5 = _t0D20;
          }
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918;
          real time0A3F = +inf;
          int face0A40 = -1;
          real faceTime0A41 = -inf;
          real _t0A42 = 0.1e1;
          real _t0A43 = 0.e0;
          vec2 _t0A44 = [_t0A42, _t0A43];
          vec2 _t0A45 = prim -0026<$[2]> (_t0A44, _t090C);
          real _t0A46 = -0.1e1;
          real _t0A47 = 0.1e1;
          vec2 _t0A48 = [_t0A46, _t0A47];
          real _t0A49 = -0.1e1;
          real _t0A4A = 0.1e1;
          vec2 _t0A4B = [_t0A49, _t0A4A];
          real _t0A4C = prim ×00BD (_t0917, _t0A4B);
          vec2 _t0A4D = prim /0057<$[2]> (_t0A48, _t0A4C);
          real _t0A4E = prim ×00BD (_t0A45, _t0A4D);
          real _t0A4F = -0.1e-15;
          bool _t0A50 = prim >=007E (_t0A4E, _t0A4F);
          real _t0A51 = 0.1e1;
          real _t0A52 = 0.e0;
          vec2 _t0A53 = [_t0A51, _t0A52];
          vec2 _t0A54 = prim -0026<$[2]> (_t0A53, _t090C);
          real _t0A55 = -0.1e1;
          real _t0A56 = 0.1e1;
          vec2 _t0A57 = [_t0A55, _t0A56];
          real _t0A58 = -0.1e1;
          real _t0A59 = 0.1e1;
          vec2 _t0A5A = [_t0A58, _t0A59];
          real _t0A5B = prim ×00BD (_t0917, _t0A5A);
          vec2 _t0A5C = prim /0057<$[2]> (_t0A57, _t0A5B);
          real _t0A5D = prim ×00BD (_t0A54, _t0A5C);
          bool _t0A5E = prim >0080 (time0A3F, _t0A5D);
          real _t0A5F = -0.1e1;
          real _t0A60 = 0.1e1;
          vec2 _t0A61 = [_t0A5F, _t0A60];
          real _t0A62 = prim ×00BD (_t0917, _t0A61);
          real _t0A63 = prim |()|00B5<$[]> (_t0A62);
          real _t0A64 = 0.1e-20;
          bool _t0A65 = prim >=007E (_t0A63, _t0A64);
          bool _t0A66 = prim $and01C4 (_t0A5E, _t0A65);
          bool _t0A67 = prim $and01C4 (_t0A50, _t0A66);
          if _t0A67 {
            real _t0A68 = 0.1e1;
            real _t0A69 = 0.1e-8;
            real _t0A6A = prim +0017<$[]> (_t0A68, _t0A69);
            real _t0A6B = 0.1e1;
            real _t0A6C = 0.1e1;
            vec2 _t0A6D = [_t0A6B, _t0A6C];
            real _t0A6E = 0.1e1;
            real _t0A6F = 0.e0;
            vec2 _t0A70 = [_t0A6E, _t0A6F];
            vec2 _t0A71 = prim -0026<$[2]> (_t0A70, _t090C);
            real _t0A72 = -0.1e1;
            real _t0A73 = 0.1e1;
            vec2 _t0A74 = [_t0A72, _t0A73];
            real _t0A75 = -0.1e1;
            real _t0A76 = 0.1e1;
            vec2 _t0A77 = [_t0A75, _t0A76];
            real _t0A78 = prim ×00BD (_t0917, _t0A77);
            vec2 _t0A79 = prim /0057<$[2]> (_t0A74, _t0A78);
            real _t0A7A = prim ×00BD (_t0A71, _t0A79);
            vec2 _t0A7B = prim *0038<$[2]> (_t0917, _t0A7A);
            vec2 _t0A7C = prim +0017<$[2]> (_t090C, _t0A7B);
            real _t0A7D = prim •00CE<$[2]; $[2]; $[]> (_t0A6D, _t0A7C);
            bool _t0A7E = prim >0080 (_t0A6A, _t0A7D);
            real _t0A7F = 0.1e-8;
            real _t0A80 = 0.1e-8;
            vec2 _t0A81 = [_t0A7F, _t0A80];
            real _t0A82 = 0.1e1;
            real _t0A83 = 0.e0;
            vec2 _t0A84 = [_t0A82, _t0A83];
            vec2 _t0A85 = prim -0026<$[2]> (_t0A84, _t090C);
            real _t0A86 = -0.1e1;
            real _t0A87 = 0.1e1;
            vec2 _t0A88 = [_t0A86, _t0A87];
            real _t0A89 = -0.1e1;
            real _t0A8A = 0.1e1;
            vec2 _t0A8B = [_t0A89, _t0A8A];
            real _t0A8C = prim ×00BD (_t0917, _t0A8B);
            vec2 _t0A8D = prim /0057<$[2]> (_t0A88, _t0A8C);
            real _t0A8E = prim ×00BD (_t0A85, _t0A8D);
            vec2 _t0A8F = prim *0038<$[2]> (_t0917, _t0A8E);
            vec2 _t0A90 = prim +0017<$[2]> (_t090C, _t0A8F);
            vec2 _t0A91 = prim +0017<$[2]> (_t0A81, _t0A90);
            real _t0A92 = _t0A91[0];
            real _t0A93 = -0.e0;
            bool _t0A94 = prim >0080 (_t0A92, _t0A93);
            real _t0A95 = 0.1e-8;
            real _t0A96 = 0.1e-8;
            vec2 _t0A97 = [_t0A95, _t0A96];
            real _t0A98 = 0.1e1;
            real _t0A99 = 0.e0;
            vec2 _t0A9A = [_t0A98, _t0A99];
            vec2 _t0A9B = prim -0026<$[2]> (_t0A9A, _t090C);
            real _t0A9C = -0.1e1;
            real _t0A9D = 0.1e1;
            vec2 _t0A9E = [_t0A9C, _t0A9D];
            real _t0A9F = -0.1e1;
            real _t0AA0 = 0.1e1;
            vec2 _t0AA1 = [_t0A9F, _t0AA0];
            real _t0AA2 = prim ×00BD (_t0917, _t0AA1);
            vec2 _t0AA3 = prim /0057<$[2]> (_t0A9E, _t0AA2);
            real _t0AA4 = prim ×00BD (_t0A9B, _t0AA3);
            vec2 _t0AA5 = prim *0038<$[2]> (_t0917, _t0AA4);
            vec2 _t0AA6 = prim +0017<$[2]> (_t090C, _t0AA5);
            vec2 _t0AA7 = prim +0017<$[2]> (_t0A97, _t0AA6);
            real _t0AA8 = _t0AA7[1];
            real _t0AA9 = -0.e0;
            bool _t0AAA = prim >0080 (_t0AA8, _t0AA9);
            bool _t0AAB = prim $and01C4 (_t0A94, _t0AAA);
            bool _t0AAC = prim $and01C4 (_t0A7E, _t0AAB);
            if _t0AAC {
              real _t0AAD = 0.1e1;
              real _t0AAE = 0.e0;
              vec2 _t0AAF = [_t0AAD, _t0AAE];
              vec2 _t0AB0 = prim -0026<$[2]> (_t0AAF, _t090C);
              real _t0AB1 = -0.1e1;
              real _t0AB2 = 0.1e1;
              vec2 _t0AB3 = [_t0AB1, _t0AB2];
              real _t0AB4 = -0.1e1;
              real _t0AB5 = 0.1e1;
              vec2 _t0AB6 = [_t0AB4, _t0AB5];
              real _t0AB7 = prim ×00BD (_t0917, _t0AB6);
              vec2 _t0AB8 = prim /0057<$[2]> (_t0AB3, _t0AB7);
              time0A3F = prim ×00BD (_t0AB0, _t0AB8);
              face0A40 = 0;
            }
          }
          real _t0AB9 = 0.e0;
          real _t0ABA = 0.e0;
          vec2 _t0ABB = [_t0AB9, _t0ABA];
          vec2 _t0ABC = prim -0026<$[2]> (_t0ABB, _t090C);
          real _t0ABD = 0.e0;
          real _t0ABE = 0.1e1;
          vec2 _t0ABF = [_t0ABD, _t0ABE];
          real _t0AC0 = 0.e0;
          real _t0AC1 = 0.1e1;
          vec2 _t0AC2 = [_t0AC0, _t0AC1];
          real _t0AC3 = prim ×00BD (_t0917, _t0AC2);
          vec2 _t0AC4 = prim /0057<$[2]> (_t0ABF, _t0AC3);
          real _t0AC5 = prim ×00BD (_t0ABC, _t0AC4);
          real _t0AC6 = -0.1e-15;
          bool _t0AC7 = prim >=007E (_t0AC5, _t0AC6);
          real _t0AC8 = 0.e0;
          real _t0AC9 = 0.e0;
          vec2 _t0ACA = [_t0AC8, _t0AC9];
          vec2 _t0ACB = prim -0026<$[2]> (_t0ACA, _t090C);
          real _t0ACC = 0.e0;
          real _t0ACD = 0.1e1;
          vec2 _t0ACE = [_t0ACC, _t0ACD];
          real _t0ACF = 0.e0;
          real _t0AD0 = 0.1e1;
          vec2 _t0AD1 = [_t0ACF, _t0AD0];
          real _t0AD2 = prim ×00BD (_t0917, _t0AD1);
          vec2 _t0AD3 = prim /0057<$[2]> (_t0ACE, _t0AD2);
          real _t0AD4 = prim ×00BD (_t0ACB, _t0AD3);
          bool _t0AD5 = prim >0080 (time0A3F, _t0AD4);
          real _t0AD6 = 0.e0;
          real _t0AD7 = 0.1e1;
          vec2 _t0AD8 = [_t0AD6, _t0AD7];
          real _t0AD9 = prim ×00BD (_t0917, _t0AD8);
          real _t0ADA = prim |()|00B5<$[]> (_t0AD9);
          real _t0ADB = 0.1e-20;
          bool _t0ADC = prim >=007E (_t0ADA, _t0ADB);
          bool _t0ADD = prim $and01C4 (_t0AD5, _t0ADC);
          bool _t0ADE = prim $and01C4 (_t0AC7, _t0ADD);
          if _t0ADE {
            real _t0ADF = 0.1e1;
            real _t0AE0 = 0.1e-8;
            real _t0AE1 = prim +0017<$[]> (_t0ADF, _t0AE0);
            real _t0AE2 = 0.1e1;
            real _t0AE3 = 0.1e1;
            vec2 _t0AE4 = [_t0AE2, _t0AE3];
            real _t0AE5 = 0.e0;
            real _t0AE6 = 0.e0;
            vec2 _t0AE7 = [_t0AE5, _t0AE6];
            vec2 _t0AE8 = prim -0026<$[2]> (_t0AE7, _t090C);
            real _t0AE9 = 0.e0;
            real _t0AEA = 0.1e1;
            vec2 _t0AEB = [_t0AE9, _t0AEA];
            real _t0AEC = 0.e0;
            real _t0AED = 0.1e1;
            vec2 _t0AEE = [_t0AEC, _t0AED];
            real _t0AEF = prim ×00BD (_t0917, _t0AEE);
            vec2 _t0AF0 = prim /0057<$[2]> (_t0AEB, _t0AEF);
            real _t0AF1 = prim ×00BD (_t0AE8, _t0AF0);
            vec2 _t0AF2 = prim *0038<$[2]> (_t0917, _t0AF1);
            vec2 _t0AF3 = prim +0017<$[2]> (_t090C, _t0AF2);
            real _t0AF4 = prim •00CE<$[2]; $[2]; $[]> (_t0AE4, _t0AF3);
            bool _t0AF5 = prim >0080 (_t0AE1, _t0AF4);
            real _t0AF6 = 0.1e-8;
            real _t0AF7 = 0.1e-8;
            vec2 _t0AF8 = [_t0AF6, _t0AF7];
            real _t0AF9 = 0.e0;
            real _t0AFA = 0.e0;
            vec2 _t0AFB = [_t0AF9, _t0AFA];
            vec2 _t0AFC = prim -0026<$[2]> (_t0AFB, _t090C);
            real _t0AFD = 0.e0;
            real _t0AFE = 0.1e1;
            vec2 _t0AFF = [_t0AFD, _t0AFE];
            real _t0B00 = 0.e0;
            real _t0B01 = 0.1e1;
            vec2 _t0B02 = [_t0B00, _t0B01];
            real _t0B03 = prim ×00BD (_t0917, _t0B02);
            vec2 _t0B04 = prim /0057<$[2]> (_t0AFF, _t0B03);
            real _t0B05 = prim ×00BD (_t0AFC, _t0B04);
            vec2 _t0B06 = prim *0038<$[2]> (_t0917, _t0B05);
            vec2 _t0B07 = prim +0017<$[2]> (_t090C, _t0B06);
            vec2 _t0B08 = prim +0017<$[2]> (_t0AF8, _t0B07);
            real _t0B09 = _t0B08[0];
            real _t0B0A = -0.e0;
            bool _t0B0B = prim >0080 (_t0B09, _t0B0A);
            real _t0B0C = 0.1e-8;
            real _t0B0D = 0.1e-8;
            vec2 _t0B0E = [_t0B0C, _t0B0D];
            real _t0B0F = 0.e0;
            real _t0B10 = 0.e0;
            vec2 _t0B11 = [_t0B0F, _t0B10];
            vec2 _t0B12 = prim -0026<$[2]> (_t0B11, _t090C);
            real _t0B13 = 0.e0;
            real _t0B14 = 0.1e1;
            vec2 _t0B15 = [_t0B13, _t0B14];
            real _t0B16 = 0.e0;
            real _t0B17 = 0.1e1;
            vec2 _t0B18 = [_t0B16, _t0B17];
            real _t0B19 = prim ×00BD (_t0917, _t0B18);
            vec2 _t0B1A = prim /0057<$[2]> (_t0B15, _t0B19);
            real _t0B1B = prim ×00BD (_t0B12, _t0B1A);
            vec2 _t0B1C = prim *0038<$[2]> (_t0917, _t0B1B);
            vec2 _t0B1D = prim +0017<$[2]> (_t090C, _t0B1C);
            vec2 _t0B1E = prim +0017<$[2]> (_t0B0E, _t0B1D);
            real _t0B1F = _t0B1E[1];
            real _t0B20 = -0.e0;
            bool _t0B21 = prim >0080 (_t0B1F, _t0B20);
            bool _t0B22 = prim $and01C4 (_t0B0B, _t0B21);
            bool _t0B23 = prim $and01C4 (_t0AF5, _t0B22);
            if _t0B23 {
              real _t0B24 = 0.e0;
              real _t0B25 = 0.e0;
              vec2 _t0B26 = [_t0B24, _t0B25];
              vec2 _t0B27 = prim -0026<$[2]> (_t0B26, _t090C);
              real _t0B28 = 0.e0;
              real _t0B29 = 0.1e1;
              vec2 _t0B2A = [_t0B28, _t0B29];
              real _t0B2B = 0.e0;
              real _t0B2C = 0.1e1;
              vec2 _t0B2D = [_t0B2B, _t0B2C];
              real _t0B2E = prim ×00BD (_t0917, _t0B2D);
              vec2 _t0B2F = prim /0057<$[2]> (_t0B2A, _t0B2E);
              time0A3F = prim ×00BD (_t0B27, _t0B2F);
              face0A40 = 1;
            }
          }
          real _t0B30 = 0.e0;
          real _t0B31 = 0.e0;
          vec2 _t0B32 = [_t0B30, _t0B31];
          vec2 _t0B33 = prim -0026<$[2]> (_t0B32, _t090C);
          real _t0B34 = 0.1e1;
          real _t0B35 = 0.e0;
          vec2 _t0B36 = [_t0B34, _t0B35];
          real _t0B37 = 0.1e1;
          real _t0B38 = 0.e0;
          vec2 _t0B39 = [_t0B37, _t0B38];
          real _t0B3A = prim ×00BD (_t0917, _t0B39);
          vec2 _t0B3B = prim /0057<$[2]> (_t0B36, _t0B3A);
          real _t0B3C = prim ×00BD (_t0B33, _t0B3B);
          real _t0B3D = -0.1e-15;
          bool _t0B3E = prim >=007E (_t0B3C, _t0B3D);
          real _t0B3F = 0.e0;
          real _t0B40 = 0.e0;
          vec2 _t0B41 = [_t0B3F, _t0B40];
          vec2 _t0B42 = prim -0026<$[2]> (_t0B41, _t090C);
          real _t0B43 = 0.1e1;
          real _t0B44 = 0.e0;
          vec2 _t0B45 = [_t0B43, _t0B44];
          real _t0B46 = 0.1e1;
          real _t0B47 = 0.e0;
          vec2 _t0B48 = [_t0B46, _t0B47];
          real _t0B49 = prim ×00BD (_t0917, _t0B48);
          vec2 _t0B4A = prim /0057<$[2]> (_t0B45, _t0B49);
          real _t0B4B = prim ×00BD (_t0B42, _t0B4A);
          bool _t0B4C = prim >0080 (time0A3F, _t0B4B);
          real _t0B4D = 0.1e1;
          real _t0B4E = 0.e0;
          vec2 _t0B4F = [_t0B4D, _t0B4E];
          real _t0B50 = prim ×00BD (_t0917, _t0B4F);
          real _t0B51 = prim |()|00B5<$[]> (_t0B50);
          real _t0B52 = 0.1e-20;
          bool _t0B53 = prim >=007E (_t0B51, _t0B52);
          bool _t0B54 = prim $and01C4 (_t0B4C, _t0B53);
          bool _t0B55 = prim $and01C4 (_t0B3E, _t0B54);
          if _t0B55 {
            real _t0B56 = 0.1e1;
            real _t0B57 = 0.1e-8;
            real _t0B58 = prim +0017<$[]> (_t0B56, _t0B57);
            real _t0B59 = 0.1e1;
            real _t0B5A = 0.1e1;
            vec2 _t0B5B = [_t0B59, _t0B5A];
            real _t0B5C = 0.e0;
            real _t0B5D = 0.e0;
            vec2 _t0B5E = [_t0B5C, _t0B5D];
            vec2 _t0B5F = prim -0026<$[2]> (_t0B5E, _t090C);
            real _t0B60 = 0.1e1;
            real _t0B61 = 0.e0;
            vec2 _t0B62 = [_t0B60, _t0B61];
            real _t0B63 = 0.1e1;
            real _t0B64 = 0.e0;
            vec2 _t0B65 = [_t0B63, _t0B64];
            real _t0B66 = prim ×00BD (_t0917, _t0B65);
            vec2 _t0B67 = prim /0057<$[2]> (_t0B62, _t0B66);
            real _t0B68 = prim ×00BD (_t0B5F, _t0B67);
            vec2 _t0B69 = prim *0038<$[2]> (_t0917, _t0B68);
            vec2 _t0B6A = prim +0017<$[2]> (_t090C, _t0B69);
            real _t0B6B = prim •00CE<$[2]; $[2]; $[]> (_t0B5B, _t0B6A);
            bool _t0B6C = prim >0080 (_t0B58, _t0B6B);
            real _t0B6D = 0.1e-8;
            real _t0B6E = 0.1e-8;
            vec2 _t0B6F = [_t0B6D, _t0B6E];
            real _t0B70 = 0.e0;
            real _t0B71 = 0.e0;
            vec2 _t0B72 = [_t0B70, _t0B71];
            vec2 _t0B73 = prim -0026<$[2]> (_t0B72, _t090C);
            real _t0B74 = 0.1e1;
            real _t0B75 = 0.e0;
            vec2 _t0B76 = [_t0B74, _t0B75];
            real _t0B77 = 0.1e1;
            real _t0B78 = 0.e0;
            vec2 _t0B79 = [_t0B77, _t0B78];
            real _t0B7A = prim ×00BD (_t0917, _t0B79);
            vec2 _t0B7B = prim /0057<$[2]> (_t0B76, _t0B7A);
            real _t0B7C = prim ×00BD (_t0B73, _t0B7B);
            vec2 _t0B7D = prim *0038<$[2]> (_t0917, _t0B7C);
            vec2 _t0B7E = prim +0017<$[2]> (_t090C, _t0B7D);
            vec2 _t0B7F = prim +0017<$[2]> (_t0B6F, _t0B7E);
            real _t0B80 = _t0B7F[0];
            real _t0B81 = -0.e0;
            bool _t0B82 = prim >0080 (_t0B80, _t0B81);
            real _t0B83 = 0.1e-8;
            real _t0B84 = 0.1e-8;
            vec2 _t0B85 = [_t0B83, _t0B84];
            real _t0B86 = 0.e0;
            real _t0B87 = 0.e0;
            vec2 _t0B88 = [_t0B86, _t0B87];
            vec2 _t0B89 = prim -0026<$[2]> (_t0B88, _t090C);
            real _t0B8A = 0.1e1;
            real _t0B8B = 0.e0;
            vec2 _t0B8C = [_t0B8A, _t0B8B];
            real _t0B8D = 0.1e1;
            real _t0B8E = 0.e0;
            vec2 _t0B8F = [_t0B8D, _t0B8E];
            real _t0B90 = prim ×00BD (_t0917, _t0B8F);
            vec2 _t0B91 = prim /0057<$[2]> (_t0B8C, _t0B90);
            real _t0B92 = prim ×00BD (_t0B89, _t0B91);
            vec2 _t0B93 = prim *0038<$[2]> (_t0917, _t0B92);
            vec2 _t0B94 = prim +0017<$[2]> (_t090C, _t0B93);
            vec2 _t0B95 = prim +0017<$[2]> (_t0B85, _t0B94);
            real _t0B96 = _t0B95[1];
            real _t0B97 = -0.e0;
            bool _t0B98 = prim >0080 (_t0B96, _t0B97);
            bool _t0B99 = prim $and01C4 (_t0B82, _t0B98);
            bool _t0B9A = prim $and01C4 (_t0B6C, _t0B99);
            if _t0B9A {
              real _t0B9B = 0.e0;
              real _t0B9C = 0.e0;
              vec2 _t0B9D = [_t0B9B, _t0B9C];
              vec2 _t0B9E = prim -0026<$[2]> (_t0B9D, _t090C);
              real _t0B9F = 0.1e1;
              real _t0BA0 = 0.e0;
              vec2 _t0BA1 = [_t0B9F, _t0BA0];
              real _t0BA2 = 0.1e1;
              real _t0BA3 = 0.e0;
              vec2 _t0BA4 = [_t0BA2, _t0BA3];
              real _t0BA5 = prim ×00BD (_t0917, _t0BA4);
              vec2 _t0BA6 = prim /0057<$[2]> (_t0BA1, _t0BA5);
              time0A3F = prim ×00BD (_t0B9E, _t0BA6);
              face0A40 = 2;
            }
          }
          int _t0BA7 = -1;
          bool _t0BA8 = prim !=0086 (face0A40, _t0BA7);
          if _t0BA8 {
            real _t0BA9 = 0.e0;
            real _t0BAA = prim max0125 (time0A3F, _t0BA9);
            real _t0BAB = (real)face0A40;
            vec2 _t0BAC = [_t0BAA, _t0BAB];
            _t0918 = _t0BAC;
          } else {
            real _t0BAD = -0.1e1;
            real _t0BAE = -0.1e1;
            vec2 _t0BAF = [_t0BAD, _t0BAE];
            _t0918 = _t0BAF;
          }
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E;
    vec2 _t122D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t122E = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t122F = extractFem(pos0854, Mesh);
    vec2 _t1230;
    field(2)[2] _t1231 = femField(_t122F,_t122E,field(2)[2],Transform,);
    vec2 _t1232 = prim @00A5<#∞; %2; $[2]> (_t1231, _t122D);
    _t1230 = _t1232;
    _t094E = _t1230;
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977;
    vec2 _t1227 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1228 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1229 = extractFem(pos0854, Mesh);
    vec2 _t122A;
    field(2)[2] _t122B = femField(_t1229,_t1228,field(2)[2],Transform,);
    vec2 _t122C = prim @00A5<#∞; %2; $[2]> (_t122B, _t1227);
    _t122A = _t122C;
    _t0977 = _t122A;
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980;
    vec2 _t1221 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1222 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1223 = extractFem(pos0854, Mesh);
    vec2 _t1224;
    field(2)[2] _t1225 = femField(_t1223,_t1222,field(2)[2],Transform,);
    vec2 _t1226 = prim @00A5<#∞; %2; $[2]> (_t1225, _t1221);
    _t1224 = _t1226;
    _t0980 = _t1224;
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC;
    real time1151 = +inf;
    int face1152 = -1;
    real faceTime1153 = -inf;
    real _t1154 = 0.1e1;
    real _t1155 = 0.e0;
    vec2 _t1156 = [_t1154, _t1155];
    vec2 _t1157 = prim -0026<$[2]> (_t1156, _t0993);
    real _t1158 = -0.1e1;
    real _t1159 = 0.1e1;
    vec2 _t115A = [_t1158, _t1159];
    real _t115B = -0.1e1;
    real _t115C = 0.1e1;
    vec2 _t115D = [_t115B, _t115C];
    real _t115E = prim ×00BD (_t09AA, _t115D);
    vec2 _t115F = prim /0057<$[2]> (_t115A, _t115E);
    real _t1160 = prim ×00BD (_t1157, _t115F);
    real _t1161 = -0.1e-15;
    bool _t1162 = prim >=007E (_t1160, _t1161);
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    vec2 _t1165 = [_t1163, _t1164];
    vec2 _t1166 = prim -0026<$[2]> (_t1165, _t0993);
    real _t1167 = -0.1e1;
    real _t1168 = 0.1e1;
    vec2 _t1169 = [_t1167, _t1168];
    real _t116A = -0.1e1;
    real _t116B = 0.1e1;
    vec2 _t116C = [_t116A, _t116B];
    real _t116D = prim ×00BD (_t09AA, _t116C);
    vec2 _t116E = prim /0057<$[2]> (_t1169, _t116D);
    real _t116F = prim ×00BD (_t1166, _t116E);
    bool _t1170 = prim >0080 (time1151, _t116F);
    real _t1171 = -0.1e1;
    real _t1172 = 0.1e1;
    vec2 _t1173 = [_t1171, _t1172];
    real _t1174 = prim ×00BD (_t09AA, _t1173);
    real _t1175 = prim |()|00B5<$[]> (_t1174);
    real _t1176 = 0.1e-20;
    bool _t1177 = prim >=007E (_t1175, _t1176);
    bool _t1178 = prim $and01C4 (_t1170, _t1177);
    bool _t1179 = prim $and01C4 (_t1162, _t1178);
    if _t1179 {
      int _t117A = 0;
      bool _t117B = prim !=0086 (_t09AB, _t117A);
      if _t117B {
        real _t117C = 0.1e1;
        real _t117D = 0.e0;
        vec2 _t117E = [_t117C, _t117D];
        vec2 _t117F = prim -0026<$[2]> (_t117E, _t0993);
        real _t1180 = -0.1e1;
        real _t1181 = 0.1e1;
        vec2 _t1182 = [_t1180, _t1181];
        real _t1183 = -0.1e1;
        real _t1184 = 0.1e1;
        vec2 _t1185 = [_t1183, _t1184];
        real _t1186 = prim ×00BD (_t09AA, _t1185);
        vec2 _t1187 = prim /0057<$[2]> (_t1182, _t1186);
        time1151 = prim ×00BD (_t117F, _t1187);
        face1152 = 0;
      } else {
        real _t1188 = 0.1e1;
        real _t1189 = 0.e0;
        vec2 _t118A = [_t1188, _t1189];
        vec2 _t118B = prim -0026<$[2]> (_t118A, _t0993);
        real _t118C = -0.1e1;
        real _t118D = 0.1e1;
        vec2 _t118E = [_t118C, _t118D];
        real _t118F = -0.1e1;
        real _t1190 = 0.1e1;
        vec2 _t1191 = [_t118F, _t1190];
        real _t1192 = prim ×00BD (_t09AA, _t1191);
        vec2 _t1193 = prim /0057<$[2]> (_t118E, _t1192);
        faceTime1153 = prim ×00BD (_t118B, _t1193);
      }
    }
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    vec2 _t1196 = [_t1194, _t1195];
    vec2 _t1197 = prim -0026<$[2]> (_t1196, _t0993);
    real _t1198 = 0.e0;
    real _t1199 = 0.1e1;
    vec2 _t119A = [_t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec2 _t119D = [_t119B, _t119C];
    real _t119E = prim ×00BD (_t09AA, _t119D);
    vec2 _t119F = prim /0057<$[2]> (_t119A, _t119E);
    real _t11A0 = prim ×00BD (_t1197, _t119F);
    real _t11A1 = -0.1e-15;
    bool _t11A2 = prim >=007E (_t11A0, _t11A1);
    real _t11A3 = 0.e0;
    real _t11A4 = 0.e0;
    vec2 _t11A5 = [_t11A3, _t11A4];
    vec2 _t11A6 = prim -0026<$[2]> (_t11A5, _t0993);
    real _t11A7 = 0.e0;
    real _t11A8 = 0.1e1;
    vec2 _t11A9 = [_t11A7, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    vec2 _t11AC = [_t11AA, _t11AB];
    real _t11AD = prim ×00BD (_t09AA, _t11AC);
    vec2 _t11AE = prim /0057<$[2]> (_t11A9, _t11AD);
    real _t11AF = prim ×00BD (_t11A6, _t11AE);
    bool _t11B0 = prim >0080 (time1151, _t11AF);
    real _t11B1 = 0.e0;
    real _t11B2 = 0.1e1;
    vec2 _t11B3 = [_t11B1, _t11B2];
    real _t11B4 = prim ×00BD (_t09AA, _t11B3);
    real _t11B5 = prim |()|00B5<$[]> (_t11B4);
    real _t11B6 = 0.1e-20;
    bool _t11B7 = prim >=007E (_t11B5, _t11B6);
    bool _t11B8 = prim $and01C4 (_t11B0, _t11B7);
    bool _t11B9 = prim $and01C4 (_t11A2, _t11B8);
    if _t11B9 {
      int _t11BA = 1;
      bool _t11BB = prim !=0086 (_t09AB, _t11BA);
      if _t11BB {
        real _t11BC = 0.e0;
        real _t11BD = 0.e0;
        vec2 _t11BE = [_t11BC, _t11BD];
        vec2 _t11BF = prim -0026<$[2]> (_t11BE, _t0993);
        real _t11C0 = 0.e0;
        real _t11C1 = 0.1e1;
        vec2 _t11C2 = [_t11C0, _t11C1];
        real _t11C3 = 0.e0;
        real _t11C4 = 0.1e1;
        vec2 _t11C5 = [_t11C3, _t11C4];
        real _t11C6 = prim ×00BD (_t09AA, _t11C5);
        vec2 _t11C7 = prim /0057<$[2]> (_t11C2, _t11C6);
        time1151 = prim ×00BD (_t11BF, _t11C7);
        face1152 = 1;
      } else {
        real _t11C8 = 0.e0;
        real _t11C9 = 0.e0;
        vec2 _t11CA = [_t11C8, _t11C9];
        vec2 _t11CB = prim -0026<$[2]> (_t11CA, _t0993);
        real _t11CC = 0.e0;
        real _t11CD = 0.1e1;
        vec2 _t11CE = [_t11CC, _t11CD];
        real _t11CF = 0.e0;
        real _t11D0 = 0.1e1;
        vec2 _t11D1 = [_t11CF, _t11D0];
        real _t11D2 = prim ×00BD (_t09AA, _t11D1);
        vec2 _t11D3 = prim /0057<$[2]> (_t11CE, _t11D2);
        faceTime1153 = prim ×00BD (_t11CB, _t11D3);
      }
    }
    real _t11D4 = 0.e0;
    real _t11D5 = 0.e0;
    vec2 _t11D6 = [_t11D4, _t11D5];
    vec2 _t11D7 = prim -0026<$[2]> (_t11D6, _t0993);
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec2 _t11DA = [_t11D8, _t11D9];
    real _t11DB = 0.1e1;
    real _t11DC = 0.e0;
    vec2 _t11DD = [_t11DB, _t11DC];
    real _t11DE = prim ×00BD (_t09AA, _t11DD);
    vec2 _t11DF = prim /0057<$[2]> (_t11DA, _t11DE);
    real _t11E0 = prim ×00BD (_t11D7, _t11DF);
    real _t11E1 = -0.1e-15;
    bool _t11E2 = prim >=007E (_t11E0, _t11E1);
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec2 _t11E5 = [_t11E3, _t11E4];
    vec2 _t11E6 = prim -0026<$[2]> (_t11E5, _t0993);
    real _t11E7 = 0.1e1;
    real _t11E8 = 0.e0;
    vec2 _t11E9 = [_t11E7, _t11E8];
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    vec2 _t11EC = [_t11EA, _t11EB];
    real _t11ED = prim ×00BD (_t09AA, _t11EC);
    vec2 _t11EE = prim /0057<$[2]> (_t11E9, _t11ED);
    real _t11EF = prim ×00BD (_t11E6, _t11EE);
    bool _t11F0 = prim >0080 (time1151, _t11EF);
    real _t11F1 = 0.1e1;
    real _t11F2 = 0.e0;
    vec2 _t11F3 = [_t11F1, _t11F2];
    real _t11F4 = prim ×00BD (_t09AA, _t11F3);
    real _t11F5 = prim |()|00B5<$[]> (_t11F4);
    real _t11F6 = 0.1e-20;
    bool _t11F7 = prim >=007E (_t11F5, _t11F6);
    bool _t11F8 = prim $and01C4 (_t11F0, _t11F7);
    bool _t11F9 = prim $and01C4 (_t11E2, _t11F8);
    if _t11F9 {
      int _t11FA = 2;
      bool _t11FB = prim !=0086 (_t09AB, _t11FA);
      if _t11FB {
        real _t11FC = 0.e0;
        real _t11FD = 0.e0;
        vec2 _t11FE = [_t11FC, _t11FD];
        vec2 _t11FF = prim -0026<$[2]> (_t11FE, _t0993);
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec2 _t1202 = [_t1200, _t1201];
        real _t1203 = 0.1e1;
        real _t1204 = 0.e0;
        vec2 _t1205 = [_t1203, _t1204];
        real _t1206 = prim ×00BD (_t09AA, _t1205);
        vec2 _t1207 = prim /0057<$[2]> (_t1202, _t1206);
        time1151 = prim ×00BD (_t11FF, _t1207);
        face1152 = 2;
      } else {
        real _t1208 = 0.e0;
        real _t1209 = 0.e0;
        vec2 _t120A = [_t1208, _t1209];
        vec2 _t120B = prim -0026<$[2]> (_t120A, _t0993);
        real _t120C = 0.1e1;
        real _t120D = 0.e0;
        vec2 _t120E = [_t120C, _t120D];
        real _t120F = 0.1e1;
        real _t1210 = 0.e0;
        vec2 _t1211 = [_t120F, _t1210];
        real _t1212 = prim ×00BD (_t09AA, _t1211);
        vec2 _t1213 = prim /0057<$[2]> (_t120E, _t1212);
        faceTime1153 = prim ×00BD (_t120B, _t1213);
      }
    }
    int _t1214 = -1;
    bool _t1215 = prim !=0086 (face1152, _t1214);
    if _t1215 {
      real _t1216 = 0.e0;
      real _t1217 = prim max0125 (time1151, _t1216);
      real _t1218 = (real)face1152;
      vec2 _t1219 = [_t1217, _t1218];
      _t09AC = _t1219;
    } else {
      real _t121A = -inf;
      bool _t121B = prim ==0084 (_t121A, faceTime1153);
      if _t121B {
        real _t121C = -0.1e1;
        real _t121D = -0.1e1;
        vec2 _t121E = [_t121C, _t121D];
        _t09AC = _t121E;
      } else {
        real _t121F = (real)_t09AB;
        vec2 _t1220 = [faceTime1153, _t121F];
        _t09AC = _t1220;
      }
    }
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9;
      real time1081 = +inf;
      int face1082 = -1;
      real faceTime1083 = -inf;
      real _t1084 = 0.1e1;
      real _t1085 = 0.e0;
      vec2 _t1086 = [_t1084, _t1085];
      vec2 _t1087 = prim -0026<$[2]> (_t1086, _t09D0);
      real _t1088 = -0.1e1;
      real _t1089 = 0.1e1;
      vec2 _t108A = [_t1088, _t1089];
      real _t108B = -0.1e1;
      real _t108C = 0.1e1;
      vec2 _t108D = [_t108B, _t108C];
      real _t108E = prim ×00BD (_t09E7, _t108D);
      vec2 _t108F = prim /0057<$[2]> (_t108A, _t108E);
      real _t1090 = prim ×00BD (_t1087, _t108F);
      real _t1091 = -0.1e-15;
      bool _t1092 = prim >=007E (_t1090, _t1091);
      real _t1093 = 0.1e1;
      real _t1094 = 0.e0;
      vec2 _t1095 = [_t1093, _t1094];
      vec2 _t1096 = prim -0026<$[2]> (_t1095, _t09D0);
      real _t1097 = -0.1e1;
      real _t1098 = 0.1e1;
      vec2 _t1099 = [_t1097, _t1098];
      real _t109A = -0.1e1;
      real _t109B = 0.1e1;
      vec2 _t109C = [_t109A, _t109B];
      real _t109D = prim ×00BD (_t09E7, _t109C);
      vec2 _t109E = prim /0057<$[2]> (_t1099, _t109D);
      real _t109F = prim ×00BD (_t1096, _t109E);
      bool _t10A0 = prim >0080 (time1081, _t109F);
      real _t10A1 = -0.1e1;
      real _t10A2 = 0.1e1;
      vec2 _t10A3 = [_t10A1, _t10A2];
      real _t10A4 = prim ×00BD (_t09E7, _t10A3);
      real _t10A5 = prim |()|00B5<$[]> (_t10A4);
      real _t10A6 = 0.1e-20;
      bool _t10A7 = prim >=007E (_t10A5, _t10A6);
      bool _t10A8 = prim $and01C4 (_t10A0, _t10A7);
      bool _t10A9 = prim $and01C4 (_t1092, _t10A8);
      if _t10A9 {
        int _t10AA = 0;
        bool _t10AB = prim !=0086 (_t09E8, _t10AA);
        if _t10AB {
          real _t10AC = 0.1e1;
          real _t10AD = 0.e0;
          vec2 _t10AE = [_t10AC, _t10AD];
          vec2 _t10AF = prim -0026<$[2]> (_t10AE, _t09D0);
          real _t10B0 = -0.1e1;
          real _t10B1 = 0.1e1;
          vec2 _t10B2 = [_t10B0, _t10B1];
          real _t10B3 = -0.1e1;
          real _t10B4 = 0.1e1;
          vec2 _t10B5 = [_t10B3, _t10B4];
          real _t10B6 = prim ×00BD (_t09E7, _t10B5);
          vec2 _t10B7 = prim /0057<$[2]> (_t10B2, _t10B6);
          time1081 = prim ×00BD (_t10AF, _t10B7);
          face1082 = 0;
        } else {
          real _t10B8 = 0.1e1;
          real _t10B9 = 0.e0;
          vec2 _t10BA = [_t10B8, _t10B9];
          vec2 _t10BB = prim -0026<$[2]> (_t10BA, _t09D0);
          real _t10BC = -0.1e1;
          real _t10BD = 0.1e1;
          vec2 _t10BE = [_t10BC, _t10BD];
          real _t10BF = -0.1e1;
          real _t10C0 = 0.1e1;
          vec2 _t10C1 = [_t10BF, _t10C0];
          real _t10C2 = prim ×00BD (_t09E7, _t10C1);
          vec2 _t10C3 = prim /0057<$[2]> (_t10BE, _t10C2);
          faceTime1083 = prim ×00BD (_t10BB, _t10C3);
        }
      }
      real _t10C4 = 0.e0;
      real _t10C5 = 0.e0;
      vec2 _t10C6 = [_t10C4, _t10C5];
      vec2 _t10C7 = prim -0026<$[2]> (_t10C6, _t09D0);
      real _t10C8 = 0.e0;
      real _t10C9 = 0.1e1;
      vec2 _t10CA = [_t10C8, _t10C9];
      real _t10CB = 0.e0;
      real _t10CC = 0.1e1;
      vec2 _t10CD = [_t10CB, _t10CC];
      real _t10CE = prim ×00BD (_t09E7, _t10CD);
      vec2 _t10CF = prim /0057<$[2]> (_t10CA, _t10CE);
      real _t10D0 = prim ×00BD (_t10C7, _t10CF);
      real _t10D1 = -0.1e-15;
      bool _t10D2 = prim >=007E (_t10D0, _t10D1);
      real _t10D3 = 0.e0;
      real _t10D4 = 0.e0;
      vec2 _t10D5 = [_t10D3, _t10D4];
      vec2 _t10D6 = prim -0026<$[2]> (_t10D5, _t09D0);
      real _t10D7 = 0.e0;
      real _t10D8 = 0.1e1;
      vec2 _t10D9 = [_t10D7, _t10D8];
      real _t10DA = 0.e0;
      real _t10DB = 0.1e1;
      vec2 _t10DC = [_t10DA, _t10DB];
      real _t10DD = prim ×00BD (_t09E7, _t10DC);
      vec2 _t10DE = prim /0057<$[2]> (_t10D9, _t10DD);
      real _t10DF = prim ×00BD (_t10D6, _t10DE);
      bool _t10E0 = prim >0080 (time1081, _t10DF);
      real _t10E1 = 0.e0;
      real _t10E2 = 0.1e1;
      vec2 _t10E3 = [_t10E1, _t10E2];
      real _t10E4 = prim ×00BD (_t09E7, _t10E3);
      real _t10E5 = prim |()|00B5<$[]> (_t10E4);
      real _t10E6 = 0.1e-20;
      bool _t10E7 = prim >=007E (_t10E5, _t10E6);
      bool _t10E8 = prim $and01C4 (_t10E0, _t10E7);
      bool _t10E9 = prim $and01C4 (_t10D2, _t10E8);
      if _t10E9 {
        int _t10EA = 1;
        bool _t10EB = prim !=0086 (_t09E8, _t10EA);
        if _t10EB {
          real _t10EC = 0.e0;
          real _t10ED = 0.e0;
          vec2 _t10EE = [_t10EC, _t10ED];
          vec2 _t10EF = prim -0026<$[2]> (_t10EE, _t09D0);
          real _t10F0 = 0.e0;
          real _t10F1 = 0.1e1;
          vec2 _t10F2 = [_t10F0, _t10F1];
          real _t10F3 = 0.e0;
          real _t10F4 = 0.1e1;
          vec2 _t10F5 = [_t10F3, _t10F4];
          real _t10F6 = prim ×00BD (_t09E7, _t10F5);
          vec2 _t10F7 = prim /0057<$[2]> (_t10F2, _t10F6);
          time1081 = prim ×00BD (_t10EF, _t10F7);
          face1082 = 1;
        } else {
          real _t10F8 = 0.e0;
          real _t10F9 = 0.e0;
          vec2 _t10FA = [_t10F8, _t10F9];
          vec2 _t10FB = prim -0026<$[2]> (_t10FA, _t09D0);
          real _t10FC = 0.e0;
          real _t10FD = 0.1e1;
          vec2 _t10FE = [_t10FC, _t10FD];
          real _t10FF = 0.e0;
          real _t1100 = 0.1e1;
          vec2 _t1101 = [_t10FF, _t1100];
          real _t1102 = prim ×00BD (_t09E7, _t1101);
          vec2 _t1103 = prim /0057<$[2]> (_t10FE, _t1102);
          faceTime1083 = prim ×00BD (_t10FB, _t1103);
        }
      }
      real _t1104 = 0.e0;
      real _t1105 = 0.e0;
      vec2 _t1106 = [_t1104, _t1105];
      vec2 _t1107 = prim -0026<$[2]> (_t1106, _t09D0);
      real _t1108 = 0.1e1;
      real _t1109 = 0.e0;
      vec2 _t110A = [_t1108, _t1109];
      real _t110B = 0.1e1;
      real _t110C = 0.e0;
      vec2 _t110D = [_t110B, _t110C];
      real _t110E = prim ×00BD (_t09E7, _t110D);
      vec2 _t110F = prim /0057<$[2]> (_t110A, _t110E);
      real _t1110 = prim ×00BD (_t1107, _t110F);
      real _t1111 = -0.1e-15;
      bool _t1112 = prim >=007E (_t1110, _t1111);
      real _t1113 = 0.e0;
      real _t1114 = 0.e0;
      vec2 _t1115 = [_t1113, _t1114];
      vec2 _t1116 = prim -0026<$[2]> (_t1115, _t09D0);
      real _t1117 = 0.1e1;
      real _t1118 = 0.e0;
      vec2 _t1119 = [_t1117, _t1118];
      real _t111A = 0.1e1;
      real _t111B = 0.e0;
      vec2 _t111C = [_t111A, _t111B];
      real _t111D = prim ×00BD (_t09E7, _t111C);
      vec2 _t111E = prim /0057<$[2]> (_t1119, _t111D);
      real _t111F = prim ×00BD (_t1116, _t111E);
      bool _t1120 = prim >0080 (time1081, _t111F);
      real _t1121 = 0.1e1;
      real _t1122 = 0.e0;
      vec2 _t1123 = [_t1121, _t1122];
      real _t1124 = prim ×00BD (_t09E7, _t1123);
      real _t1125 = prim |()|00B5<$[]> (_t1124);
      real _t1126 = 0.1e-20;
      bool _t1127 = prim >=007E (_t1125, _t1126);
      bool _t1128 = prim $and01C4 (_t1120, _t1127);
      bool _t1129 = prim $and01C4 (_t1112, _t1128);
      if _t1129 {
        int _t112A = 2;
        bool _t112B = prim !=0086 (_t09E8, _t112A);
        if _t112B {
          real _t112C = 0.e0;
          real _t112D = 0.e0;
          vec2 _t112E = [_t112C, _t112D];
          vec2 _t112F = prim -0026<$[2]> (_t112E, _t09D0);
          real _t1130 = 0.1e1;
          real _t1131 = 0.e0;
          vec2 _t1132 = [_t1130, _t1131];
          real _t1133 = 0.1e1;
          real _t1134 = 0.e0;
          vec2 _t1135 = [_t1133, _t1134];
          real _t1136 = prim ×00BD (_t09E7, _t1135);
          vec2 _t1137 = prim /0057<$[2]> (_t1132, _t1136);
          time1081 = prim ×00BD (_t112F, _t1137);
          face1082 = 2;
        } else {
          real _t1138 = 0.e0;
          real _t1139 = 0.e0;
          vec2 _t113A = [_t1138, _t1139];
          vec2 _t113B = prim -0026<$[2]> (_t113A, _t09D0);
          real _t113C = 0.1e1;
          real _t113D = 0.e0;
          vec2 _t113E = [_t113C, _t113D];
          real _t113F = 0.1e1;
          real _t1140 = 0.e0;
          vec2 _t1141 = [_t113F, _t1140];
          real _t1142 = prim ×00BD (_t09E7, _t1141);
          vec2 _t1143 = prim /0057<$[2]> (_t113E, _t1142);
          faceTime1083 = prim ×00BD (_t113B, _t1143);
        }
      }
      int _t1144 = -1;
      bool _t1145 = prim !=0086 (face1082, _t1144);
      if _t1145 {
        real _t1146 = 0.e0;
        real _t1147 = prim max0125 (time1081, _t1146);
        real _t1148 = (real)face1082;
        vec2 _t1149 = [_t1147, _t1148];
        _t09E9 = _t1149;
      } else {
        real _t114A = -inf;
        bool _t114B = prim ==0084 (_t114A, faceTime1083);
        if _t114B {
          real _t114C = -0.1e1;
          real _t114D = -0.1e1;
          vec2 _t114E = [_t114C, _t114D];
          _t09E9 = _t114E;
        } else {
          real _t114F = (real)_t09E8;
          vec2 _t1150 = [faceTime1083, _t114F];
          _t09E9 = _t1150;
        }
      }
      Femdata: MeshPos posp09EA;
      int _t100C = -1;
      real _t100D = _t09E9[1];
      int _t100E = prim $r2i01B7 (_t100D);
      int[2] _t100F = func nextCell40536 (_t100E, _t09B7, _t09B6);
      int _t1010 = 0;
      int _t1011 = prim $sub01C0<int; %2> (_t100F, _t1010);
      bool _t1012 = prim !=0086 (_t100C, _t1011);
      if _t1012 {
        real _t1013 = _t09E9[1];
        int _t1014 = prim $r2i01B7 (_t1013);
        int[2] _t1015 = func nextCell40536 (_t1014, _t09B7, _t09B6);
        int _t1016 = 0;
        int _t1017 = prim $sub01C0<int; %2> (_t1015, _t1016);
        real _t1018 = 0.1e1;
        real _t1019 = 0.e0;
        vec2 _t101A = [_t1018, _t1019];
        real _t101B = 0.e0;
        real _t101C = 0.e0;
        vec2 _t101D = [_t101B, _t101C];
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec2 _t1020 = [_t101E, _t101F];
        vec2[3] _t1021 = {_t101A, _t101D, _t1020};
        real _t1022 = _t09E9[1];
        int _t1023 = prim $r2i01B7 (_t1022);
        int[2] _t1024 = func nextCell40536 (_t1023, _t09B7, _t09B6);
        int _t1025 = 1;
        int _t1026 = prim $sub01C0<int; %2> (_t1024, _t1025);
        vec2 _t1027 = prim $sub01C0<vec2; %3> (_t1021, _t1026);
        real _t1028 = -0.1e1;
        real _t1029 = 0.1e1;
        vec2 _t102A = [_t1028, _t1029];
        real _t102B = 0.e0;
        real _t102C = 0.1e1;
        vec2 _t102D = [_t102B, _t102C];
        real _t102E = 0.1e1;
        real _t102F = 0.e0;
        vec2 _t1030 = [_t102E, _t102F];
        vec2[3] _t1031 = {_t102A, _t102D, _t1030};
        real _t1032 = _t09E9[1];
        int _t1033 = prim $r2i01B7 (_t1032);
        int[2] _t1034 = func nextCell40536 (_t1033, _t09B7, _t09B6);
        int _t1035 = 1;
        int _t1036 = prim $sub01C0<int; %2> (_t1034, _t1035);
        vec2 _t1037 = prim $sub01C0<vec2; %3> (_t1031, _t1036);
        real _t1038 = _t09E9[0];
        vec2 _t1039 = prim *0036<$[2]> (_t1038, _t09CF);
        vec2 _t103A = prim +0017<$[2]> (_t1039, _t09B8);
        real _t103B = _t103A[0];
        real _t103C = _t09E9[0];
        vec2 _t103D = prim *0036<$[2]> (_t103C, _t09CF);
        vec2 _t103E = prim +0017<$[2]> (_t103D, _t09B8);
        real _t103F = _t103E[1];
        real[2] _t1040 = {_t103B, _t103F};
        int _t1041 = 1;
        int _t1042 = 1;
        int _t1043 = 0;
        int[3] _t1044 = {_t1041, _t1042, _t1043};
        real _t1045 = _t09E9[1];
        int _t1046 = prim $r2i01B7 (_t1045);
        int _t1047 = prim $sub01C0<int; %3> (_t1044, _t1046);
        real _t1048 = prim $sub01C0<real; %2> (_t1040, _t1047);
        real _t1049 = 0.1e1;
        real _t104A = 0.e0;
        real[2] _t104B = {_t1049, _t104A};
        real _t104C = 0.e0;
        real _t104D = 0.e0;
        real[2] _t104E = {_t104C, _t104D};
        real _t104F = 0.e0;
        real _t1050 = 0.e0;
        real[2] _t1051 = {_t104F, _t1050};
        real[2][3] _t1052 = {_t104B, _t104E, _t1051};
        real _t1053 = _t09E9[1];
        int _t1054 = prim $r2i01B7 (_t1053);
        real[2] _t1055 = prim $sub01C0<real[2]; %3> (_t1052, _t1054);
        int _t1056 = 1;
        int _t1057 = 1;
        int _t1058 = 0;
        int[3] _t1059 = {_t1056, _t1057, _t1058};
        real _t105A = _t09E9[1];
        int _t105B = prim $r2i01B7 (_t105A);
        int _t105C = prim $sub01C0<int; %3> (_t1059, _t105B);
        real _t105D = prim $sub01C0<real; %2> (_t1055, _t105C);
        real _t105E = prim -0026<$[]> (_t1048, _t105D);
        real _t105F = -0.1e1;
        real _t1060 = 0.1e1;
        real[2] _t1061 = {_t105F, _t1060};
        real _t1062 = 0.e0;
        real _t1063 = 0.1e1;
        real[2] _t1064 = {_t1062, _t1063};
        real _t1065 = 0.1e1;
        real _t1066 = 0.e0;
        real[2] _t1067 = {_t1065, _t1066};
        real[2][3] _t1068 = {_t1061, _t1064, _t1067};
        real _t1069 = _t09E9[1];
        int _t106A = prim $r2i01B7 (_t1069);
        real[2] _t106B = prim $sub01C0<real[2]; %3> (_t1068, _t106A);
        int _t106C = 1;
        int _t106D = 1;
        int _t106E = 0;
        int[3] _t106F = {_t106C, _t106D, _t106E};
        real _t1070 = _t09E9[1];
        int _t1071 = prim $r2i01B7 (_t1070);
        int _t1072 = prim $sub01C0<int; %3> (_t106F, _t1071);
        real _t1073 = prim $sub01C0<real; %2> (_t106B, _t1072);
        real _t1074 = prim /0055 (_t105E, _t1073);
        vec2 _t1075 = prim *0038<$[2]> (_t1037, _t1074);
        vec2 _t1076 = prim +0017<$[2]> (_t1027, _t1075);
        real _t1077 = _t09E9[1];
        int _t1078 = prim $r2i01B7 (_t1077);
        int[2] _t1079 = func nextCell40536 (_t1078, _t09B7, _t09B6);
        int _t107A = 1;
        int _t107B = prim $sub01C0<int; %2> (_t1079, _t107A);
        Femdata: MeshPos _t107C = extractFemItemN((_t09B6, _t1017, _t1076, _t107B),RefBuild(Mesh),);
        posp09EA = _t107C;
      } else {
        real _t107D = _t09E9[0];
        vec2 _t107E = prim *0036<$[2]> (_t107D, _t09CF);
        vec2 _t107F = prim +0017<$[2]> (_t107E, _t09B8);
        Femdata: MeshPos _t1080 = extractFemItemN((_t09B6, _t107F),InvalidBuildBoundary(MeshPos),);
        posp09EA = _t1080;
      }
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11;
          int _t1009 = extractFemItem(CellIndex(Mesh), int, _t0A0D);
          int _t100A = extractFemItem(CellIndex(Mesh), int, _t0A10);
          bool _t100B = prim !=0086 (_t1009, _t100A);
          _t0A11 = _t100B;
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19;
      vec2 _t1003 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      int _t1004 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: Mesh _t1005 = extractFem(pos0854, Mesh);
      vec2 _t1006;
      field(2)[2] _t1007 = femField(_t1005,_t1004,field(2)[2],Transform,);
      vec2 _t1008 = prim @00A5<#∞; %2; $[2]> (_t1007, _t1003);
      _t1006 = _t1008;
      _t0A19 = _t1006;
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E;
        real time0E92 = +inf;
        int face0E93 = -1;
        real _t0E95 = 0.1e1;
        real _t0E96 = 0.e0;
        vec2 _t0E97 = [_t0E95, _t0E96];
        vec2 _t0E98 = prim -0026<$[2]> (_t0E97, _t0882);
        real _t0E99 = -0.1e1;
        real _t0E9A = 0.1e1;
        vec2 _t0E9B = [_t0E99, _t0E9A];
        real _t0E9C = -0.1e1;
        real _t0E9D = 0.1e1;
        vec2 _t0E9E = [_t0E9C, _t0E9D];
        real _t0E9F = prim ×00BD (_t088D, _t0E9E);
        vec2 _t0EA0 = prim /0057<$[2]> (_t0E9B, _t0E9F);
        real _t0EA1 = prim ×00BD (_t0E98, _t0EA0);
        real _t0EA2 = -0.1e-15;
        bool _t0EA3 = prim >=007E (_t0EA1, _t0EA2);
        real _t0EA4 = 0.1e1;
        real _t0EA5 = 0.e0;
        vec2 _t0EA6 = [_t0EA4, _t0EA5];
        vec2 _t0EA7 = prim -0026<$[2]> (_t0EA6, _t0882);
        real _t0EA8 = -0.1e1;
        real _t0EA9 = 0.1e1;
        vec2 _t0EAA = [_t0EA8, _t0EA9];
        real _t0EAB = -0.1e1;
        real _t0EAC = 0.1e1;
        vec2 _t0EAD = [_t0EAB, _t0EAC];
        real _t0EAE = prim ×00BD (_t088D, _t0EAD);
        vec2 _t0EAF = prim /0057<$[2]> (_t0EAA, _t0EAE);
        real _t0EB0 = prim ×00BD (_t0EA7, _t0EAF);
        bool _t0EB1 = prim >0080 (time0E92, _t0EB0);
        real _t0EB2 = -0.1e1;
        real _t0EB3 = 0.1e1;
        vec2 _t0EB4 = [_t0EB2, _t0EB3];
        real _t0EB5 = prim ×00BD (_t088D, _t0EB4);
        real _t0EB6 = prim |()|00B5<$[]> (_t0EB5);
        real _t0EB7 = 0.1e-20;
        bool _t0EB8 = prim >=007E (_t0EB6, _t0EB7);
        bool _t0EB9 = prim $and01C4 (_t0EB1, _t0EB8);
        bool _t0EBA = prim $and01C4 (_t0EA3, _t0EB9);
        if _t0EBA {
          real _t0EBB = 0.1e1;
          real _t0EBC = 0.1e-8;
          real _t0EBD = prim +0017<$[]> (_t0EBB, _t0EBC);
          real _t0EBE = 0.1e1;
          real _t0EBF = 0.1e1;
          vec2 _t0EC0 = [_t0EBE, _t0EBF];
          real _t0EC1 = 0.1e1;
          real _t0EC2 = 0.e0;
          vec2 _t0EC3 = [_t0EC1, _t0EC2];
          vec2 _t0EC4 = prim -0026<$[2]> (_t0EC3, _t0882);
          real _t0EC5 = -0.1e1;
          real _t0EC6 = 0.1e1;
          vec2 _t0EC7 = [_t0EC5, _t0EC6];
          real _t0EC8 = -0.1e1;
          real _t0EC9 = 0.1e1;
          vec2 _t0ECA = [_t0EC8, _t0EC9];
          real _t0ECB = prim ×00BD (_t088D, _t0ECA);
          vec2 _t0ECC = prim /0057<$[2]> (_t0EC7, _t0ECB);
          real _t0ECD = prim ×00BD (_t0EC4, _t0ECC);
          vec2 _t0ECE = prim *0038<$[2]> (_t088D, _t0ECD);
          vec2 _t0ECF = prim +0017<$[2]> (_t0882, _t0ECE);
          real _t0ED0 = prim •00CE<$[2]; $[2]; $[]> (_t0EC0, _t0ECF);
          bool _t0ED1 = prim >0080 (_t0EBD, _t0ED0);
          real _t0ED2 = 0.1e-8;
          real _t0ED3 = 0.1e-8;
          vec2 _t0ED4 = [_t0ED2, _t0ED3];
          real _t0ED5 = 0.1e1;
          real _t0ED6 = 0.e0;
          vec2 _t0ED7 = [_t0ED5, _t0ED6];
          vec2 _t0ED8 = prim -0026<$[2]> (_t0ED7, _t0882);
          real _t0ED9 = -0.1e1;
          real _t0EDA = 0.1e1;
          vec2 _t0EDB = [_t0ED9, _t0EDA];
          real _t0EDC = -0.1e1;
          real _t0EDD = 0.1e1;
          vec2 _t0EDE = [_t0EDC, _t0EDD];
          real _t0EDF = prim ×00BD (_t088D, _t0EDE);
          vec2 _t0EE0 = prim /0057<$[2]> (_t0EDB, _t0EDF);
          real _t0EE1 = prim ×00BD (_t0ED8, _t0EE0);
          vec2 _t0EE2 = prim *0038<$[2]> (_t088D, _t0EE1);
          vec2 _t0EE3 = prim +0017<$[2]> (_t0882, _t0EE2);
          vec2 _t0EE4 = prim +0017<$[2]> (_t0ED4, _t0EE3);
          real _t0EE5 = _t0EE4[0];
          real _t0EE6 = -0.e0;
          bool _t0EE7 = prim >0080 (_t0EE5, _t0EE6);
          real _t0EE8 = 0.1e-8;
          real _t0EE9 = 0.1e-8;
          vec2 _t0EEA = [_t0EE8, _t0EE9];
          real _t0EEB = 0.1e1;
          real _t0EEC = 0.e0;
          vec2 _t0EED = [_t0EEB, _t0EEC];
          vec2 _t0EEE = prim -0026<$[2]> (_t0EED, _t0882);
          real _t0EEF = -0.1e1;
          real _t0EF0 = 0.1e1;
          vec2 _t0EF1 = [_t0EEF, _t0EF0];
          real _t0EF2 = -0.1e1;
          real _t0EF3 = 0.1e1;
          vec2 _t0EF4 = [_t0EF2, _t0EF3];
          real _t0EF5 = prim ×00BD (_t088D, _t0EF4);
          vec2 _t0EF6 = prim /0057<$[2]> (_t0EF1, _t0EF5);
          real _t0EF7 = prim ×00BD (_t0EEE, _t0EF6);
          vec2 _t0EF8 = prim *0038<$[2]> (_t088D, _t0EF7);
          vec2 _t0EF9 = prim +0017<$[2]> (_t0882, _t0EF8);
          vec2 _t0EFA = prim +0017<$[2]> (_t0EEA, _t0EF9);
          real _t0EFB = _t0EFA[1];
          real _t0EFC = -0.e0;
          bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
          bool _t0EFE = prim $and01C4 (_t0EE7, _t0EFD);
          bool _t0EFF = prim $and01C4 (_t0ED1, _t0EFE);
          if _t0EFF {
            real _t0F00 = 0.1e1;
            real _t0F01 = 0.e0;
            vec2 _t0F02 = [_t0F00, _t0F01];
            vec2 _t0F03 = prim -0026<$[2]> (_t0F02, _t0882);
            real _t0F04 = -0.1e1;
            real _t0F05 = 0.1e1;
            vec2 _t0F06 = [_t0F04, _t0F05];
            real _t0F07 = -0.1e1;
            real _t0F08 = 0.1e1;
            vec2 _t0F09 = [_t0F07, _t0F08];
            real _t0F0A = prim ×00BD (_t088D, _t0F09);
            vec2 _t0F0B = prim /0057<$[2]> (_t0F06, _t0F0A);
            time0E92 = prim ×00BD (_t0F03, _t0F0B);
            face0E93 = 0;
          }
        }
        real _t0F0C = 0.e0;
        real _t0F0D = 0.e0;
        vec2 _t0F0E = [_t0F0C, _t0F0D];
        vec2 _t0F0F = prim -0026<$[2]> (_t0F0E, _t0882);
        real _t0F10 = 0.e0;
        real _t0F11 = 0.1e1;
        vec2 _t0F12 = [_t0F10, _t0F11];
        real _t0F13 = 0.e0;
        real _t0F14 = 0.1e1;
        vec2 _t0F15 = [_t0F13, _t0F14];
        real _t0F16 = prim ×00BD (_t088D, _t0F15);
        vec2 _t0F17 = prim /0057<$[2]> (_t0F12, _t0F16);
        real _t0F18 = prim ×00BD (_t0F0F, _t0F17);
        real _t0F19 = -0.1e-15;
        bool _t0F1A = prim >=007E (_t0F18, _t0F19);
        real _t0F1B = 0.e0;
        real _t0F1C = 0.e0;
        vec2 _t0F1D = [_t0F1B, _t0F1C];
        vec2 _t0F1E = prim -0026<$[2]> (_t0F1D, _t0882);
        real _t0F1F = 0.e0;
        real _t0F20 = 0.1e1;
        vec2 _t0F21 = [_t0F1F, _t0F20];
        real _t0F22 = 0.e0;
        real _t0F23 = 0.1e1;
        vec2 _t0F24 = [_t0F22, _t0F23];
        real _t0F25 = prim ×00BD (_t088D, _t0F24);
        vec2 _t0F26 = prim /0057<$[2]> (_t0F21, _t0F25);
        real _t0F27 = prim ×00BD (_t0F1E, _t0F26);
        bool _t0F28 = prim >0080 (time0E92, _t0F27);
        real _t0F29 = 0.e0;
        real _t0F2A = 0.1e1;
        vec2 _t0F2B = [_t0F29, _t0F2A];
        real _t0F2C = prim ×00BD (_t088D, _t0F2B);
        real _t0F2D = prim |()|00B5<$[]> (_t0F2C);
        real _t0F2E = 0.1e-20;
        bool _t0F2F = prim >=007E (_t0F2D, _t0F2E);
        bool _t0F30 = prim $and01C4 (_t0F28, _t0F2F);
        bool _t0F31 = prim $and01C4 (_t0F1A, _t0F30);
        if _t0F31 {
          real _t0F32 = 0.1e1;
          real _t0F33 = 0.1e-8;
          real _t0F34 = prim +0017<$[]> (_t0F32, _t0F33);
          real _t0F35 = 0.1e1;
          real _t0F36 = 0.1e1;
          vec2 _t0F37 = [_t0F35, _t0F36];
          real _t0F38 = 0.e0;
          real _t0F39 = 0.e0;
          vec2 _t0F3A = [_t0F38, _t0F39];
          vec2 _t0F3B = prim -0026<$[2]> (_t0F3A, _t0882);
          real _t0F3C = 0.e0;
          real _t0F3D = 0.1e1;
          vec2 _t0F3E = [_t0F3C, _t0F3D];
          real _t0F3F = 0.e0;
          real _t0F40 = 0.1e1;
          vec2 _t0F41 = [_t0F3F, _t0F40];
          real _t0F42 = prim ×00BD (_t088D, _t0F41);
          vec2 _t0F43 = prim /0057<$[2]> (_t0F3E, _t0F42);
          real _t0F44 = prim ×00BD (_t0F3B, _t0F43);
          vec2 _t0F45 = prim *0038<$[2]> (_t088D, _t0F44);
          vec2 _t0F46 = prim +0017<$[2]> (_t0882, _t0F45);
          real _t0F47 = prim •00CE<$[2]; $[2]; $[]> (_t0F37, _t0F46);
          bool _t0F48 = prim >0080 (_t0F34, _t0F47);
          real _t0F49 = 0.1e-8;
          real _t0F4A = 0.1e-8;
          vec2 _t0F4B = [_t0F49, _t0F4A];
          real _t0F4C = 0.e0;
          real _t0F4D = 0.e0;
          vec2 _t0F4E = [_t0F4C, _t0F4D];
          vec2 _t0F4F = prim -0026<$[2]> (_t0F4E, _t0882);
          real _t0F50 = 0.e0;
          real _t0F51 = 0.1e1;
          vec2 _t0F52 = [_t0F50, _t0F51];
          real _t0F53 = 0.e0;
          real _t0F54 = 0.1e1;
          vec2 _t0F55 = [_t0F53, _t0F54];
          real _t0F56 = prim ×00BD (_t088D, _t0F55);
          vec2 _t0F57 = prim /0057<$[2]> (_t0F52, _t0F56);
          real _t0F58 = prim ×00BD (_t0F4F, _t0F57);
          vec2 _t0F59 = prim *0038<$[2]> (_t088D, _t0F58);
          vec2 _t0F5A = prim +0017<$[2]> (_t0882, _t0F59);
          vec2 _t0F5B = prim +0017<$[2]> (_t0F4B, _t0F5A);
          real _t0F5C = _t0F5B[0];
          real _t0F5D = -0.e0;
          bool _t0F5E = prim >0080 (_t0F5C, _t0F5D);
          real _t0F5F = 0.1e-8;
          real _t0F60 = 0.1e-8;
          vec2 _t0F61 = [_t0F5F, _t0F60];
          real _t0F62 = 0.e0;
          real _t0F63 = 0.e0;
          vec2 _t0F64 = [_t0F62, _t0F63];
          vec2 _t0F65 = prim -0026<$[2]> (_t0F64, _t0882);
          real _t0F66 = 0.e0;
          real _t0F67 = 0.1e1;
          vec2 _t0F68 = [_t0F66, _t0F67];
          real _t0F69 = 0.e0;
          real _t0F6A = 0.1e1;
          vec2 _t0F6B = [_t0F69, _t0F6A];
          real _t0F6C = prim ×00BD (_t088D, _t0F6B);
          vec2 _t0F6D = prim /0057<$[2]> (_t0F68, _t0F6C);
          real _t0F6E = prim ×00BD (_t0F65, _t0F6D);
          vec2 _t0F6F = prim *0038<$[2]> (_t088D, _t0F6E);
          vec2 _t0F70 = prim +0017<$[2]> (_t0882, _t0F6F);
          vec2 _t0F71 = prim +0017<$[2]> (_t0F61, _t0F70);
          real _t0F72 = _t0F71[1];
          real _t0F73 = -0.e0;
          bool _t0F74 = prim >0080 (_t0F72, _t0F73);
          bool _t0F75 = prim $and01C4 (_t0F5E, _t0F74);
          bool _t0F76 = prim $and01C4 (_t0F48, _t0F75);
          if _t0F76 {
            real _t0F77 = 0.e0;
            real _t0F78 = 0.e0;
            vec2 _t0F79 = [_t0F77, _t0F78];
            vec2 _t0F7A = prim -0026<$[2]> (_t0F79, _t0882);
            real _t0F7B = 0.e0;
            real _t0F7C = 0.1e1;
            vec2 _t0F7D = [_t0F7B, _t0F7C];
            real _t0F7E = 0.e0;
            real _t0F7F = 0.1e1;
            vec2 _t0F80 = [_t0F7E, _t0F7F];
            real _t0F81 = prim ×00BD (_t088D, _t0F80);
            vec2 _t0F82 = prim /0057<$[2]> (_t0F7D, _t0F81);
            time0E92 = prim ×00BD (_t0F7A, _t0F82);
            face0E93 = 1;
          }
        }
        real _t0F83 = 0.e0;
        real _t0F84 = 0.e0;
        vec2 _t0F85 = [_t0F83, _t0F84];
        vec2 _t0F86 = prim -0026<$[2]> (_t0F85, _t0882);
        real _t0F87 = 0.1e1;
        real _t0F88 = 0.e0;
        vec2 _t0F89 = [_t0F87, _t0F88];
        real _t0F8A = 0.1e1;
        real _t0F8B = 0.e0;
        vec2 _t0F8C = [_t0F8A, _t0F8B];
        real _t0F8D = prim ×00BD (_t088D, _t0F8C);
        vec2 _t0F8E = prim /0057<$[2]> (_t0F89, _t0F8D);
        real _t0F8F = prim ×00BD (_t0F86, _t0F8E);
        real _t0F90 = -0.1e-15;
        bool _t0F91 = prim >=007E (_t0F8F, _t0F90);
        real _t0F92 = 0.e0;
        real _t0F93 = 0.e0;
        vec2 _t0F94 = [_t0F92, _t0F93];
        vec2 _t0F95 = prim -0026<$[2]> (_t0F94, _t0882);
        real _t0F96 = 0.1e1;
        real _t0F97 = 0.e0;
        vec2 _t0F98 = [_t0F96, _t0F97];
        real _t0F99 = 0.1e1;
        real _t0F9A = 0.e0;
        vec2 _t0F9B = [_t0F99, _t0F9A];
        real _t0F9C = prim ×00BD (_t088D, _t0F9B);
        vec2 _t0F9D = prim /0057<$[2]> (_t0F98, _t0F9C);
        real _t0F9E = prim ×00BD (_t0F95, _t0F9D);
        bool _t0F9F = prim >0080 (time0E92, _t0F9E);
        real _t0FA0 = 0.1e1;
        real _t0FA1 = 0.e0;
        vec2 _t0FA2 = [_t0FA0, _t0FA1];
        real _t0FA3 = prim ×00BD (_t088D, _t0FA2);
        real _t0FA4 = prim |()|00B5<$[]> (_t0FA3);
        real _t0FA5 = 0.1e-20;
        bool _t0FA6 = prim >=007E (_t0FA4, _t0FA5);
        bool _t0FA7 = prim $and01C4 (_t0F9F, _t0FA6);
        bool _t0FA8 = prim $and01C4 (_t0F91, _t0FA7);
        if _t0FA8 {
          real _t0FA9 = 0.1e1;
          real _t0FAA = 0.1e-8;
          real _t0FAB = prim +0017<$[]> (_t0FA9, _t0FAA);
          real _t0FAC = 0.1e1;
          real _t0FAD = 0.1e1;
          vec2 _t0FAE = [_t0FAC, _t0FAD];
          real _t0FAF = 0.e0;
          real _t0FB0 = 0.e0;
          vec2 _t0FB1 = [_t0FAF, _t0FB0];
          vec2 _t0FB2 = prim -0026<$[2]> (_t0FB1, _t0882);
          real _t0FB3 = 0.1e1;
          real _t0FB4 = 0.e0;
          vec2 _t0FB5 = [_t0FB3, _t0FB4];
          real _t0FB6 = 0.1e1;
          real _t0FB7 = 0.e0;
          vec2 _t0FB8 = [_t0FB6, _t0FB7];
          real _t0FB9 = prim ×00BD (_t088D, _t0FB8);
          vec2 _t0FBA = prim /0057<$[2]> (_t0FB5, _t0FB9);
          real _t0FBB = prim ×00BD (_t0FB2, _t0FBA);
          vec2 _t0FBC = prim *0038<$[2]> (_t088D, _t0FBB);
          vec2 _t0FBD = prim +0017<$[2]> (_t0882, _t0FBC);
          real _t0FBE = prim •00CE<$[2]; $[2]; $[]> (_t0FAE, _t0FBD);
          bool _t0FBF = prim >0080 (_t0FAB, _t0FBE);
          real _t0FC0 = 0.1e-8;
          real _t0FC1 = 0.1e-8;
          vec2 _t0FC2 = [_t0FC0, _t0FC1];
          real _t0FC3 = 0.e0;
          real _t0FC4 = 0.e0;
          vec2 _t0FC5 = [_t0FC3, _t0FC4];
          vec2 _t0FC6 = prim -0026<$[2]> (_t0FC5, _t0882);
          real _t0FC7 = 0.1e1;
          real _t0FC8 = 0.e0;
          vec2 _t0FC9 = [_t0FC7, _t0FC8];
          real _t0FCA = 0.1e1;
          real _t0FCB = 0.e0;
          vec2 _t0FCC = [_t0FCA, _t0FCB];
          real _t0FCD = prim ×00BD (_t088D, _t0FCC);
          vec2 _t0FCE = prim /0057<$[2]> (_t0FC9, _t0FCD);
          real _t0FCF = prim ×00BD (_t0FC6, _t0FCE);
          vec2 _t0FD0 = prim *0038<$[2]> (_t088D, _t0FCF);
          vec2 _t0FD1 = prim +0017<$[2]> (_t0882, _t0FD0);
          vec2 _t0FD2 = prim +0017<$[2]> (_t0FC2, _t0FD1);
          real _t0FD3 = _t0FD2[0];
          real _t0FD4 = -0.e0;
          bool _t0FD5 = prim >0080 (_t0FD3, _t0FD4);
          real _t0FD6 = 0.1e-8;
          real _t0FD7 = 0.1e-8;
          vec2 _t0FD8 = [_t0FD6, _t0FD7];
          real _t0FD9 = 0.e0;
          real _t0FDA = 0.e0;
          vec2 _t0FDB = [_t0FD9, _t0FDA];
          vec2 _t0FDC = prim -0026<$[2]> (_t0FDB, _t0882);
          real _t0FDD = 0.1e1;
          real _t0FDE = 0.e0;
          vec2 _t0FDF = [_t0FDD, _t0FDE];
          real _t0FE0 = 0.1e1;
          real _t0FE1 = 0.e0;
          vec2 _t0FE2 = [_t0FE0, _t0FE1];
          real _t0FE3 = prim ×00BD (_t088D, _t0FE2);
          vec2 _t0FE4 = prim /0057<$[2]> (_t0FDF, _t0FE3);
          real _t0FE5 = prim ×00BD (_t0FDC, _t0FE4);
          vec2 _t0FE6 = prim *0038<$[2]> (_t088D, _t0FE5);
          vec2 _t0FE7 = prim +0017<$[2]> (_t0882, _t0FE6);
          vec2 _t0FE8 = prim +0017<$[2]> (_t0FD8, _t0FE7);
          real _t0FE9 = _t0FE8[1];
          real _t0FEA = -0.e0;
          bool _t0FEB = prim >0080 (_t0FE9, _t0FEA);
          bool _t0FEC = prim $and01C4 (_t0FD5, _t0FEB);
          bool _t0FED = prim $and01C4 (_t0FBF, _t0FEC);
          if _t0FED {
            real _t0FEE = 0.e0;
            real _t0FEF = 0.e0;
            vec2 _t0FF0 = [_t0FEE, _t0FEF];
            vec2 _t0FF1 = prim -0026<$[2]> (_t0FF0, _t0882);
            real _t0FF2 = 0.1e1;
            real _t0FF3 = 0.e0;
            vec2 _t0FF4 = [_t0FF2, _t0FF3];
            real _t0FF5 = 0.1e1;
            real _t0FF6 = 0.e0;
            vec2 _t0FF7 = [_t0FF5, _t0FF6];
            real _t0FF8 = prim ×00BD (_t088D, _t0FF7);
            vec2 _t0FF9 = prim /0057<$[2]> (_t0FF4, _t0FF8);
            time0E92 = prim ×00BD (_t0FF1, _t0FF9);
            face0E93 = 2;
          }
        }
        int _t0FFA = -1;
        bool _t0FFB = prim !=0086 (face0E93, _t0FFA);
        if _t0FFB {
          real _t0FFC = 0.e0;
          real _t0FFD = prim max0125 (time0E92, _t0FFC);
          real _t0FFE = (real)face0E93;
          vec2 _t0FFF = [_t0FFD, _t0FFE];
          _t088E = _t0FFF;
        } else {
          real _t1000 = -0.1e1;
          real _t1001 = -0.1e1;
          vec2 _t1002 = [_t1000, _t1001];
          _t088E = _t1002;
        }
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2;
          real time0D21 = +inf;
          int face0D22 = -1;
          real _t0D24 = 0.1e1;
          real _t0D25 = 0.e0;
          vec2 _t0D26 = [_t0D24, _t0D25];
          vec2 _t0D27 = prim -0026<$[2]> (_t0D26, _t08C6);
          real _t0D28 = -0.1e1;
          real _t0D29 = 0.1e1;
          vec2 _t0D2A = [_t0D28, _t0D29];
          real _t0D2B = -0.1e1;
          real _t0D2C = 0.1e1;
          vec2 _t0D2D = [_t0D2B, _t0D2C];
          real _t0D2E = prim ×00BD (_t08D1, _t0D2D);
          vec2 _t0D2F = prim /0057<$[2]> (_t0D2A, _t0D2E);
          real _t0D30 = prim ×00BD (_t0D27, _t0D2F);
          real _t0D31 = -0.1e-15;
          bool _t0D32 = prim >=007E (_t0D30, _t0D31);
          real _t0D33 = 0.1e1;
          real _t0D34 = 0.e0;
          vec2 _t0D35 = [_t0D33, _t0D34];
          vec2 _t0D36 = prim -0026<$[2]> (_t0D35, _t08C6);
          real _t0D37 = -0.1e1;
          real _t0D38 = 0.1e1;
          vec2 _t0D39 = [_t0D37, _t0D38];
          real _t0D3A = -0.1e1;
          real _t0D3B = 0.1e1;
          vec2 _t0D3C = [_t0D3A, _t0D3B];
          real _t0D3D = prim ×00BD (_t08D1, _t0D3C);
          vec2 _t0D3E = prim /0057<$[2]> (_t0D39, _t0D3D);
          real _t0D3F = prim ×00BD (_t0D36, _t0D3E);
          bool _t0D40 = prim >0080 (time0D21, _t0D3F);
          real _t0D41 = -0.1e1;
          real _t0D42 = 0.1e1;
          vec2 _t0D43 = [_t0D41, _t0D42];
          real _t0D44 = prim ×00BD (_t08D1, _t0D43);
          real _t0D45 = prim |()|00B5<$[]> (_t0D44);
          real _t0D46 = 0.1e-20;
          bool _t0D47 = prim >=007E (_t0D45, _t0D46);
          bool _t0D48 = prim $and01C4 (_t0D40, _t0D47);
          bool _t0D49 = prim $and01C4 (_t0D32, _t0D48);
          if _t0D49 {
            real _t0D4A = 0.1e1;
            real _t0D4B = 0.1e-8;
            real _t0D4C = prim +0017<$[]> (_t0D4A, _t0D4B);
            real _t0D4D = 0.1e1;
            real _t0D4E = 0.1e1;
            vec2 _t0D4F = [_t0D4D, _t0D4E];
            real _t0D50 = 0.1e1;
            real _t0D51 = 0.e0;
            vec2 _t0D52 = [_t0D50, _t0D51];
            vec2 _t0D53 = prim -0026<$[2]> (_t0D52, _t08C6);
            real _t0D54 = -0.1e1;
            real _t0D55 = 0.1e1;
            vec2 _t0D56 = [_t0D54, _t0D55];
            real _t0D57 = -0.1e1;
            real _t0D58 = 0.1e1;
            vec2 _t0D59 = [_t0D57, _t0D58];
            real _t0D5A = prim ×00BD (_t08D1, _t0D59);
            vec2 _t0D5B = prim /0057<$[2]> (_t0D56, _t0D5A);
            real _t0D5C = prim ×00BD (_t0D53, _t0D5B);
            vec2 _t0D5D = prim *0038<$[2]> (_t08D1, _t0D5C);
            vec2 _t0D5E = prim +0017<$[2]> (_t08C6, _t0D5D);
            real _t0D5F = prim •00CE<$[2]; $[2]; $[]> (_t0D4F, _t0D5E);
            bool _t0D60 = prim >0080 (_t0D4C, _t0D5F);
            real _t0D61 = 0.1e-8;
            real _t0D62 = 0.1e-8;
            vec2 _t0D63 = [_t0D61, _t0D62];
            real _t0D64 = 0.1e1;
            real _t0D65 = 0.e0;
            vec2 _t0D66 = [_t0D64, _t0D65];
            vec2 _t0D67 = prim -0026<$[2]> (_t0D66, _t08C6);
            real _t0D68 = -0.1e1;
            real _t0D69 = 0.1e1;
            vec2 _t0D6A = [_t0D68, _t0D69];
            real _t0D6B = -0.1e1;
            real _t0D6C = 0.1e1;
            vec2 _t0D6D = [_t0D6B, _t0D6C];
            real _t0D6E = prim ×00BD (_t08D1, _t0D6D);
            vec2 _t0D6F = prim /0057<$[2]> (_t0D6A, _t0D6E);
            real _t0D70 = prim ×00BD (_t0D67, _t0D6F);
            vec2 _t0D71 = prim *0038<$[2]> (_t08D1, _t0D70);
            vec2 _t0D72 = prim +0017<$[2]> (_t08C6, _t0D71);
            vec2 _t0D73 = prim +0017<$[2]> (_t0D63, _t0D72);
            real _t0D74 = _t0D73[0];
            real _t0D75 = -0.e0;
            bool _t0D76 = prim >0080 (_t0D74, _t0D75);
            real _t0D77 = 0.1e-8;
            real _t0D78 = 0.1e-8;
            vec2 _t0D79 = [_t0D77, _t0D78];
            real _t0D7A = 0.1e1;
            real _t0D7B = 0.e0;
            vec2 _t0D7C = [_t0D7A, _t0D7B];
            vec2 _t0D7D = prim -0026<$[2]> (_t0D7C, _t08C6);
            real _t0D7E = -0.1e1;
            real _t0D7F = 0.1e1;
            vec2 _t0D80 = [_t0D7E, _t0D7F];
            real _t0D81 = -0.1e1;
            real _t0D82 = 0.1e1;
            vec2 _t0D83 = [_t0D81, _t0D82];
            real _t0D84 = prim ×00BD (_t08D1, _t0D83);
            vec2 _t0D85 = prim /0057<$[2]> (_t0D80, _t0D84);
            real _t0D86 = prim ×00BD (_t0D7D, _t0D85);
            vec2 _t0D87 = prim *0038<$[2]> (_t08D1, _t0D86);
            vec2 _t0D88 = prim +0017<$[2]> (_t08C6, _t0D87);
            vec2 _t0D89 = prim +0017<$[2]> (_t0D79, _t0D88);
            real _t0D8A = _t0D89[1];
            real _t0D8B = -0.e0;
            bool _t0D8C = prim >0080 (_t0D8A, _t0D8B);
            bool _t0D8D = prim $and01C4 (_t0D76, _t0D8C);
            bool _t0D8E = prim $and01C4 (_t0D60, _t0D8D);
            if _t0D8E {
              real _t0D8F = 0.1e1;
              real _t0D90 = 0.e0;
              vec2 _t0D91 = [_t0D8F, _t0D90];
              vec2 _t0D92 = prim -0026<$[2]> (_t0D91, _t08C6);
              real _t0D93 = -0.1e1;
              real _t0D94 = 0.1e1;
              vec2 _t0D95 = [_t0D93, _t0D94];
              real _t0D96 = -0.1e1;
              real _t0D97 = 0.1e1;
              vec2 _t0D98 = [_t0D96, _t0D97];
              real _t0D99 = prim ×00BD (_t08D1, _t0D98);
              vec2 _t0D9A = prim /0057<$[2]> (_t0D95, _t0D99);
              time0D21 = prim ×00BD (_t0D92, _t0D9A);
              face0D22 = 0;
            }
          }
          real _t0D9B = 0.e0;
          real _t0D9C = 0.e0;
          vec2 _t0D9D = [_t0D9B, _t0D9C];
          vec2 _t0D9E = prim -0026<$[2]> (_t0D9D, _t08C6);
          real _t0D9F = 0.e0;
          real _t0DA0 = 0.1e1;
          vec2 _t0DA1 = [_t0D9F, _t0DA0];
          real _t0DA2 = 0.e0;
          real _t0DA3 = 0.1e1;
          vec2 _t0DA4 = [_t0DA2, _t0DA3];
          real _t0DA5 = prim ×00BD (_t08D1, _t0DA4);
          vec2 _t0DA6 = prim /0057<$[2]> (_t0DA1, _t0DA5);
          real _t0DA7 = prim ×00BD (_t0D9E, _t0DA6);
          real _t0DA8 = -0.1e-15;
          bool _t0DA9 = prim >=007E (_t0DA7, _t0DA8);
          real _t0DAA = 0.e0;
          real _t0DAB = 0.e0;
          vec2 _t0DAC = [_t0DAA, _t0DAB];
          vec2 _t0DAD = prim -0026<$[2]> (_t0DAC, _t08C6);
          real _t0DAE = 0.e0;
          real _t0DAF = 0.1e1;
          vec2 _t0DB0 = [_t0DAE, _t0DAF];
          real _t0DB1 = 0.e0;
          real _t0DB2 = 0.1e1;
          vec2 _t0DB3 = [_t0DB1, _t0DB2];
          real _t0DB4 = prim ×00BD (_t08D1, _t0DB3);
          vec2 _t0DB5 = prim /0057<$[2]> (_t0DB0, _t0DB4);
          real _t0DB6 = prim ×00BD (_t0DAD, _t0DB5);
          bool _t0DB7 = prim >0080 (time0D21, _t0DB6);
          real _t0DB8 = 0.e0;
          real _t0DB9 = 0.1e1;
          vec2 _t0DBA = [_t0DB8, _t0DB9];
          real _t0DBB = prim ×00BD (_t08D1, _t0DBA);
          real _t0DBC = prim |()|00B5<$[]> (_t0DBB);
          real _t0DBD = 0.1e-20;
          bool _t0DBE = prim >=007E (_t0DBC, _t0DBD);
          bool _t0DBF = prim $and01C4 (_t0DB7, _t0DBE);
          bool _t0DC0 = prim $and01C4 (_t0DA9, _t0DBF);
          if _t0DC0 {
            real _t0DC1 = 0.1e1;
            real _t0DC2 = 0.1e-8;
            real _t0DC3 = prim +0017<$[]> (_t0DC1, _t0DC2);
            real _t0DC4 = 0.1e1;
            real _t0DC5 = 0.1e1;
            vec2 _t0DC6 = [_t0DC4, _t0DC5];
            real _t0DC7 = 0.e0;
            real _t0DC8 = 0.e0;
            vec2 _t0DC9 = [_t0DC7, _t0DC8];
            vec2 _t0DCA = prim -0026<$[2]> (_t0DC9, _t08C6);
            real _t0DCB = 0.e0;
            real _t0DCC = 0.1e1;
            vec2 _t0DCD = [_t0DCB, _t0DCC];
            real _t0DCE = 0.e0;
            real _t0DCF = 0.1e1;
            vec2 _t0DD0 = [_t0DCE, _t0DCF];
            real _t0DD1 = prim ×00BD (_t08D1, _t0DD0);
            vec2 _t0DD2 = prim /0057<$[2]> (_t0DCD, _t0DD1);
            real _t0DD3 = prim ×00BD (_t0DCA, _t0DD2);
            vec2 _t0DD4 = prim *0038<$[2]> (_t08D1, _t0DD3);
            vec2 _t0DD5 = prim +0017<$[2]> (_t08C6, _t0DD4);
            real _t0DD6 = prim •00CE<$[2]; $[2]; $[]> (_t0DC6, _t0DD5);
            bool _t0DD7 = prim >0080 (_t0DC3, _t0DD6);
            real _t0DD8 = 0.1e-8;
            real _t0DD9 = 0.1e-8;
            vec2 _t0DDA = [_t0DD8, _t0DD9];
            real _t0DDB = 0.e0;
            real _t0DDC = 0.e0;
            vec2 _t0DDD = [_t0DDB, _t0DDC];
            vec2 _t0DDE = prim -0026<$[2]> (_t0DDD, _t08C6);
            real _t0DDF = 0.e0;
            real _t0DE0 = 0.1e1;
            vec2 _t0DE1 = [_t0DDF, _t0DE0];
            real _t0DE2 = 0.e0;
            real _t0DE3 = 0.1e1;
            vec2 _t0DE4 = [_t0DE2, _t0DE3];
            real _t0DE5 = prim ×00BD (_t08D1, _t0DE4);
            vec2 _t0DE6 = prim /0057<$[2]> (_t0DE1, _t0DE5);
            real _t0DE7 = prim ×00BD (_t0DDE, _t0DE6);
            vec2 _t0DE8 = prim *0038<$[2]> (_t08D1, _t0DE7);
            vec2 _t0DE9 = prim +0017<$[2]> (_t08C6, _t0DE8);
            vec2 _t0DEA = prim +0017<$[2]> (_t0DDA, _t0DE9);
            real _t0DEB = _t0DEA[0];
            real _t0DEC = -0.e0;
            bool _t0DED = prim >0080 (_t0DEB, _t0DEC);
            real _t0DEE = 0.1e-8;
            real _t0DEF = 0.1e-8;
            vec2 _t0DF0 = [_t0DEE, _t0DEF];
            real _t0DF1 = 0.e0;
            real _t0DF2 = 0.e0;
            vec2 _t0DF3 = [_t0DF1, _t0DF2];
            vec2 _t0DF4 = prim -0026<$[2]> (_t0DF3, _t08C6);
            real _t0DF5 = 0.e0;
            real _t0DF6 = 0.1e1;
            vec2 _t0DF7 = [_t0DF5, _t0DF6];
            real _t0DF8 = 0.e0;
            real _t0DF9 = 0.1e1;
            vec2 _t0DFA = [_t0DF8, _t0DF9];
            real _t0DFB = prim ×00BD (_t08D1, _t0DFA);
            vec2 _t0DFC = prim /0057<$[2]> (_t0DF7, _t0DFB);
            real _t0DFD = prim ×00BD (_t0DF4, _t0DFC);
            vec2 _t0DFE = prim *0038<$[2]> (_t08D1, _t0DFD);
            vec2 _t0DFF = prim +0017<$[2]> (_t08C6, _t0DFE);
            vec2 _t0E00 = prim +0017<$[2]> (_t0DF0, _t0DFF);
            real _t0E01 = _t0E00[1];
            real _t0E02 = -0.e0;
            bool _t0E03 = prim >0080 (_t0E01, _t0E02);
            bool _t0E04 = prim $and01C4 (_t0DED, _t0E03);
            bool _t0E05 = prim $and01C4 (_t0DD7, _t0E04);
            if _t0E05 {
              real _t0E06 = 0.e0;
              real _t0E07 = 0.e0;
              vec2 _t0E08 = [_t0E06, _t0E07];
              vec2 _t0E09 = prim -0026<$[2]> (_t0E08, _t08C6);
              real _t0E0A = 0.e0;
              real _t0E0B = 0.1e1;
              vec2 _t0E0C = [_t0E0A, _t0E0B];
              real _t0E0D = 0.e0;
              real _t0E0E = 0.1e1;
              vec2 _t0E0F = [_t0E0D, _t0E0E];
              real _t0E10 = prim ×00BD (_t08D1, _t0E0F);
              vec2 _t0E11 = prim /0057<$[2]> (_t0E0C, _t0E10);
              time0D21 = prim ×00BD (_t0E09, _t0E11);
              face0D22 = 1;
            }
          }
          real _t0E12 = 0.e0;
          real _t0E13 = 0.e0;
          vec2 _t0E14 = [_t0E12, _t0E13];
          vec2 _t0E15 = prim -0026<$[2]> (_t0E14, _t08C6);
          real _t0E16 = 0.1e1;
          real _t0E17 = 0.e0;
          vec2 _t0E18 = [_t0E16, _t0E17];
          real _t0E19 = 0.1e1;
          real _t0E1A = 0.e0;
          vec2 _t0E1B = [_t0E19, _t0E1A];
          real _t0E1C = prim ×00BD (_t08D1, _t0E1B);
          vec2 _t0E1D = prim /0057<$[2]> (_t0E18, _t0E1C);
          real _t0E1E = prim ×00BD (_t0E15, _t0E1D);
          real _t0E1F = -0.1e-15;
          bool _t0E20 = prim >=007E (_t0E1E, _t0E1F);
          real _t0E21 = 0.e0;
          real _t0E22 = 0.e0;
          vec2 _t0E23 = [_t0E21, _t0E22];
          vec2 _t0E24 = prim -0026<$[2]> (_t0E23, _t08C6);
          real _t0E25 = 0.1e1;
          real _t0E26 = 0.e0;
          vec2 _t0E27 = [_t0E25, _t0E26];
          real _t0E28 = 0.1e1;
          real _t0E29 = 0.e0;
          vec2 _t0E2A = [_t0E28, _t0E29];
          real _t0E2B = prim ×00BD (_t08D1, _t0E2A);
          vec2 _t0E2C = prim /0057<$[2]> (_t0E27, _t0E2B);
          real _t0E2D = prim ×00BD (_t0E24, _t0E2C);
          bool _t0E2E = prim >0080 (time0D21, _t0E2D);
          real _t0E2F = 0.1e1;
          real _t0E30 = 0.e0;
          vec2 _t0E31 = [_t0E2F, _t0E30];
          real _t0E32 = prim ×00BD (_t08D1, _t0E31);
          real _t0E33 = prim |()|00B5<$[]> (_t0E32);
          real _t0E34 = 0.1e-20;
          bool _t0E35 = prim >=007E (_t0E33, _t0E34);
          bool _t0E36 = prim $and01C4 (_t0E2E, _t0E35);
          bool _t0E37 = prim $and01C4 (_t0E20, _t0E36);
          if _t0E37 {
            real _t0E38 = 0.1e1;
            real _t0E39 = 0.1e-8;
            real _t0E3A = prim +0017<$[]> (_t0E38, _t0E39);
            real _t0E3B = 0.1e1;
            real _t0E3C = 0.1e1;
            vec2 _t0E3D = [_t0E3B, _t0E3C];
            real _t0E3E = 0.e0;
            real _t0E3F = 0.e0;
            vec2 _t0E40 = [_t0E3E, _t0E3F];
            vec2 _t0E41 = prim -0026<$[2]> (_t0E40, _t08C6);
            real _t0E42 = 0.1e1;
            real _t0E43 = 0.e0;
            vec2 _t0E44 = [_t0E42, _t0E43];
            real _t0E45 = 0.1e1;
            real _t0E46 = 0.e0;
            vec2 _t0E47 = [_t0E45, _t0E46];
            real _t0E48 = prim ×00BD (_t08D1, _t0E47);
            vec2 _t0E49 = prim /0057<$[2]> (_t0E44, _t0E48);
            real _t0E4A = prim ×00BD (_t0E41, _t0E49);
            vec2 _t0E4B = prim *0038<$[2]> (_t08D1, _t0E4A);
            vec2 _t0E4C = prim +0017<$[2]> (_t08C6, _t0E4B);
            real _t0E4D = prim •00CE<$[2]; $[2]; $[]> (_t0E3D, _t0E4C);
            bool _t0E4E = prim >0080 (_t0E3A, _t0E4D);
            real _t0E4F = 0.1e-8;
            real _t0E50 = 0.1e-8;
            vec2 _t0E51 = [_t0E4F, _t0E50];
            real _t0E52 = 0.e0;
            real _t0E53 = 0.e0;
            vec2 _t0E54 = [_t0E52, _t0E53];
            vec2 _t0E55 = prim -0026<$[2]> (_t0E54, _t08C6);
            real _t0E56 = 0.1e1;
            real _t0E57 = 0.e0;
            vec2 _t0E58 = [_t0E56, _t0E57];
            real _t0E59 = 0.1e1;
            real _t0E5A = 0.e0;
            vec2 _t0E5B = [_t0E59, _t0E5A];
            real _t0E5C = prim ×00BD (_t08D1, _t0E5B);
            vec2 _t0E5D = prim /0057<$[2]> (_t0E58, _t0E5C);
            real _t0E5E = prim ×00BD (_t0E55, _t0E5D);
            vec2 _t0E5F = prim *0038<$[2]> (_t08D1, _t0E5E);
            vec2 _t0E60 = prim +0017<$[2]> (_t08C6, _t0E5F);
            vec2 _t0E61 = prim +0017<$[2]> (_t0E51, _t0E60);
            real _t0E62 = _t0E61[0];
            real _t0E63 = -0.e0;
            bool _t0E64 = prim >0080 (_t0E62, _t0E63);
            real _t0E65 = 0.1e-8;
            real _t0E66 = 0.1e-8;
            vec2 _t0E67 = [_t0E65, _t0E66];
            real _t0E68 = 0.e0;
            real _t0E69 = 0.e0;
            vec2 _t0E6A = [_t0E68, _t0E69];
            vec2 _t0E6B = prim -0026<$[2]> (_t0E6A, _t08C6);
            real _t0E6C = 0.1e1;
            real _t0E6D = 0.e0;
            vec2 _t0E6E = [_t0E6C, _t0E6D];
            real _t0E6F = 0.1e1;
            real _t0E70 = 0.e0;
            vec2 _t0E71 = [_t0E6F, _t0E70];
            real _t0E72 = prim ×00BD (_t08D1, _t0E71);
            vec2 _t0E73 = prim /0057<$[2]> (_t0E6E, _t0E72);
            real _t0E74 = prim ×00BD (_t0E6B, _t0E73);
            vec2 _t0E75 = prim *0038<$[2]> (_t08D1, _t0E74);
            vec2 _t0E76 = prim +0017<$[2]> (_t08C6, _t0E75);
            vec2 _t0E77 = prim +0017<$[2]> (_t0E67, _t0E76);
            real _t0E78 = _t0E77[1];
            real _t0E79 = -0.e0;
            bool _t0E7A = prim >0080 (_t0E78, _t0E79);
            bool _t0E7B = prim $and01C4 (_t0E64, _t0E7A);
            bool _t0E7C = prim $and01C4 (_t0E4E, _t0E7B);
            if _t0E7C {
              real _t0E7D = 0.e0;
              real _t0E7E = 0.e0;
              vec2 _t0E7F = [_t0E7D, _t0E7E];
              vec2 _t0E80 = prim -0026<$[2]> (_t0E7F, _t08C6);
              real _t0E81 = 0.1e1;
              real _t0E82 = 0.e0;
              vec2 _t0E83 = [_t0E81, _t0E82];
              real _t0E84 = 0.1e1;
              real _t0E85 = 0.e0;
              vec2 _t0E86 = [_t0E84, _t0E85];
              real _t0E87 = prim ×00BD (_t08D1, _t0E86);
              vec2 _t0E88 = prim /0057<$[2]> (_t0E83, _t0E87);
              time0D21 = prim ×00BD (_t0E80, _t0E88);
              face0D22 = 2;
            }
          }
          int _t0E89 = -1;
          bool _t0E8A = prim !=0086 (face0D22, _t0E89);
          if _t0E8A {
            real _t0E8B = 0.e0;
            real _t0E8C = prim max0125 (time0D21, _t0E8B);
            real _t0E8D = (real)face0D22;
            vec2 _t0E8E = [_t0E8C, _t0E8D];
            _t08D2 = _t0E8E;
          } else {
            real _t0E8F = -0.1e1;
            real _t0E90 = -0.1e1;
            vec2 _t0E91 = [_t0E8F, _t0E90];
            _t08D2 = _t0E91;
          }
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5;
          real time0BB0 = +inf;
          int face0BB1 = -1;
          real _t0BB3 = 0.1e1;
          real _t0BB4 = 0.e0;
          vec2 _t0BB5 = [_t0BB3, _t0BB4];
          vec2 _t0BB6 = prim -0026<$[2]> (_t0BB5, _t08E9);
          real _t0BB7 = -0.1e1;
          real _t0BB8 = 0.1e1;
          vec2 _t0BB9 = [_t0BB7, _t0BB8];
          real _t0BBA = -0.1e1;
          real _t0BBB = 0.1e1;
          vec2 _t0BBC = [_t0BBA, _t0BBB];
          real _t0BBD = prim ×00BD (_t08F4, _t0BBC);
          vec2 _t0BBE = prim /0057<$[2]> (_t0BB9, _t0BBD);
          real _t0BBF = prim ×00BD (_t0BB6, _t0BBE);
          real _t0BC0 = -0.1e-15;
          bool _t0BC1 = prim >=007E (_t0BBF, _t0BC0);
          real _t0BC2 = 0.1e1;
          real _t0BC3 = 0.e0;
          vec2 _t0BC4 = [_t0BC2, _t0BC3];
          vec2 _t0BC5 = prim -0026<$[2]> (_t0BC4, _t08E9);
          real _t0BC6 = -0.1e1;
          real _t0BC7 = 0.1e1;
          vec2 _t0BC8 = [_t0BC6, _t0BC7];
          real _t0BC9 = -0.1e1;
          real _t0BCA = 0.1e1;
          vec2 _t0BCB = [_t0BC9, _t0BCA];
          real _t0BCC = prim ×00BD (_t08F4, _t0BCB);
          vec2 _t0BCD = prim /0057<$[2]> (_t0BC8, _t0BCC);
          real _t0BCE = prim ×00BD (_t0BC5, _t0BCD);
          bool _t0BCF = prim >0080 (time0BB0, _t0BCE);
          real _t0BD0 = -0.1e1;
          real _t0BD1 = 0.1e1;
          vec2 _t0BD2 = [_t0BD0, _t0BD1];
          real _t0BD3 = prim ×00BD (_t08F4, _t0BD2);
          real _t0BD4 = prim |()|00B5<$[]> (_t0BD3);
          real _t0BD5 = 0.1e-20;
          bool _t0BD6 = prim >=007E (_t0BD4, _t0BD5);
          bool _t0BD7 = prim $and01C4 (_t0BCF, _t0BD6);
          bool _t0BD8 = prim $and01C4 (_t0BC1, _t0BD7);
          if _t0BD8 {
            real _t0BD9 = 0.1e1;
            real _t0BDA = 0.1e-8;
            real _t0BDB = prim +0017<$[]> (_t0BD9, _t0BDA);
            real _t0BDC = 0.1e1;
            real _t0BDD = 0.1e1;
            vec2 _t0BDE = [_t0BDC, _t0BDD];
            real _t0BDF = 0.1e1;
            real _t0BE0 = 0.e0;
            vec2 _t0BE1 = [_t0BDF, _t0BE0];
            vec2 _t0BE2 = prim -0026<$[2]> (_t0BE1, _t08E9);
            real _t0BE3 = -0.1e1;
            real _t0BE4 = 0.1e1;
            vec2 _t0BE5 = [_t0BE3, _t0BE4];
            real _t0BE6 = -0.1e1;
            real _t0BE7 = 0.1e1;
            vec2 _t0BE8 = [_t0BE6, _t0BE7];
            real _t0BE9 = prim ×00BD (_t08F4, _t0BE8);
            vec2 _t0BEA = prim /0057<$[2]> (_t0BE5, _t0BE9);
            real _t0BEB = prim ×00BD (_t0BE2, _t0BEA);
            vec2 _t0BEC = prim *0038<$[2]> (_t08F4, _t0BEB);
            vec2 _t0BED = prim +0017<$[2]> (_t08E9, _t0BEC);
            real _t0BEE = prim •00CE<$[2]; $[2]; $[]> (_t0BDE, _t0BED);
            bool _t0BEF = prim >0080 (_t0BDB, _t0BEE);
            real _t0BF0 = 0.1e-8;
            real _t0BF1 = 0.1e-8;
            vec2 _t0BF2 = [_t0BF0, _t0BF1];
            real _t0BF3 = 0.1e1;
            real _t0BF4 = 0.e0;
            vec2 _t0BF5 = [_t0BF3, _t0BF4];
            vec2 _t0BF6 = prim -0026<$[2]> (_t0BF5, _t08E9);
            real _t0BF7 = -0.1e1;
            real _t0BF8 = 0.1e1;
            vec2 _t0BF9 = [_t0BF7, _t0BF8];
            real _t0BFA = -0.1e1;
            real _t0BFB = 0.1e1;
            vec2 _t0BFC = [_t0BFA, _t0BFB];
            real _t0BFD = prim ×00BD (_t08F4, _t0BFC);
            vec2 _t0BFE = prim /0057<$[2]> (_t0BF9, _t0BFD);
            real _t0BFF = prim ×00BD (_t0BF6, _t0BFE);
            vec2 _t0C00 = prim *0038<$[2]> (_t08F4, _t0BFF);
            vec2 _t0C01 = prim +0017<$[2]> (_t08E9, _t0C00);
            vec2 _t0C02 = prim +0017<$[2]> (_t0BF2, _t0C01);
            real _t0C03 = _t0C02[0];
            real _t0C04 = -0.e0;
            bool _t0C05 = prim >0080 (_t0C03, _t0C04);
            real _t0C06 = 0.1e-8;
            real _t0C07 = 0.1e-8;
            vec2 _t0C08 = [_t0C06, _t0C07];
            real _t0C09 = 0.1e1;
            real _t0C0A = 0.e0;
            vec2 _t0C0B = [_t0C09, _t0C0A];
            vec2 _t0C0C = prim -0026<$[2]> (_t0C0B, _t08E9);
            real _t0C0D = -0.1e1;
            real _t0C0E = 0.1e1;
            vec2 _t0C0F = [_t0C0D, _t0C0E];
            real _t0C10 = -0.1e1;
            real _t0C11 = 0.1e1;
            vec2 _t0C12 = [_t0C10, _t0C11];
            real _t0C13 = prim ×00BD (_t08F4, _t0C12);
            vec2 _t0C14 = prim /0057<$[2]> (_t0C0F, _t0C13);
            real _t0C15 = prim ×00BD (_t0C0C, _t0C14);
            vec2 _t0C16 = prim *0038<$[2]> (_t08F4, _t0C15);
            vec2 _t0C17 = prim +0017<$[2]> (_t08E9, _t0C16);
            vec2 _t0C18 = prim +0017<$[2]> (_t0C08, _t0C17);
            real _t0C19 = _t0C18[1];
            real _t0C1A = -0.e0;
            bool _t0C1B = prim >0080 (_t0C19, _t0C1A);
            bool _t0C1C = prim $and01C4 (_t0C05, _t0C1B);
            bool _t0C1D = prim $and01C4 (_t0BEF, _t0C1C);
            if _t0C1D {
              real _t0C1E = 0.1e1;
              real _t0C1F = 0.e0;
              vec2 _t0C20 = [_t0C1E, _t0C1F];
              vec2 _t0C21 = prim -0026<$[2]> (_t0C20, _t08E9);
              real _t0C22 = -0.1e1;
              real _t0C23 = 0.1e1;
              vec2 _t0C24 = [_t0C22, _t0C23];
              real _t0C25 = -0.1e1;
              real _t0C26 = 0.1e1;
              vec2 _t0C27 = [_t0C25, _t0C26];
              real _t0C28 = prim ×00BD (_t08F4, _t0C27);
              vec2 _t0C29 = prim /0057<$[2]> (_t0C24, _t0C28);
              time0BB0 = prim ×00BD (_t0C21, _t0C29);
              face0BB1 = 0;
            }
          }
          real _t0C2A = 0.e0;
          real _t0C2B = 0.e0;
          vec2 _t0C2C = [_t0C2A, _t0C2B];
          vec2 _t0C2D = prim -0026<$[2]> (_t0C2C, _t08E9);
          real _t0C2E = 0.e0;
          real _t0C2F = 0.1e1;
          vec2 _t0C30 = [_t0C2E, _t0C2F];
          real _t0C31 = 0.e0;
          real _t0C32 = 0.1e1;
          vec2 _t0C33 = [_t0C31, _t0C32];
          real _t0C34 = prim ×00BD (_t08F4, _t0C33);
          vec2 _t0C35 = prim /0057<$[2]> (_t0C30, _t0C34);
          real _t0C36 = prim ×00BD (_t0C2D, _t0C35);
          real _t0C37 = -0.1e-15;
          bool _t0C38 = prim >=007E (_t0C36, _t0C37);
          real _t0C39 = 0.e0;
          real _t0C3A = 0.e0;
          vec2 _t0C3B = [_t0C39, _t0C3A];
          vec2 _t0C3C = prim -0026<$[2]> (_t0C3B, _t08E9);
          real _t0C3D = 0.e0;
          real _t0C3E = 0.1e1;
          vec2 _t0C3F = [_t0C3D, _t0C3E];
          real _t0C40 = 0.e0;
          real _t0C41 = 0.1e1;
          vec2 _t0C42 = [_t0C40, _t0C41];
          real _t0C43 = prim ×00BD (_t08F4, _t0C42);
          vec2 _t0C44 = prim /0057<$[2]> (_t0C3F, _t0C43);
          real _t0C45 = prim ×00BD (_t0C3C, _t0C44);
          bool _t0C46 = prim >0080 (time0BB0, _t0C45);
          real _t0C47 = 0.e0;
          real _t0C48 = 0.1e1;
          vec2 _t0C49 = [_t0C47, _t0C48];
          real _t0C4A = prim ×00BD (_t08F4, _t0C49);
          real _t0C4B = prim |()|00B5<$[]> (_t0C4A);
          real _t0C4C = 0.1e-20;
          bool _t0C4D = prim >=007E (_t0C4B, _t0C4C);
          bool _t0C4E = prim $and01C4 (_t0C46, _t0C4D);
          bool _t0C4F = prim $and01C4 (_t0C38, _t0C4E);
          if _t0C4F {
            real _t0C50 = 0.1e1;
            real _t0C51 = 0.1e-8;
            real _t0C52 = prim +0017<$[]> (_t0C50, _t0C51);
            real _t0C53 = 0.1e1;
            real _t0C54 = 0.1e1;
            vec2 _t0C55 = [_t0C53, _t0C54];
            real _t0C56 = 0.e0;
            real _t0C57 = 0.e0;
            vec2 _t0C58 = [_t0C56, _t0C57];
            vec2 _t0C59 = prim -0026<$[2]> (_t0C58, _t08E9);
            real _t0C5A = 0.e0;
            real _t0C5B = 0.1e1;
            vec2 _t0C5C = [_t0C5A, _t0C5B];
            real _t0C5D = 0.e0;
            real _t0C5E = 0.1e1;
            vec2 _t0C5F = [_t0C5D, _t0C5E];
            real _t0C60 = prim ×00BD (_t08F4, _t0C5F);
            vec2 _t0C61 = prim /0057<$[2]> (_t0C5C, _t0C60);
            real _t0C62 = prim ×00BD (_t0C59, _t0C61);
            vec2 _t0C63 = prim *0038<$[2]> (_t08F4, _t0C62);
            vec2 _t0C64 = prim +0017<$[2]> (_t08E9, _t0C63);
            real _t0C65 = prim •00CE<$[2]; $[2]; $[]> (_t0C55, _t0C64);
            bool _t0C66 = prim >0080 (_t0C52, _t0C65);
            real _t0C67 = 0.1e-8;
            real _t0C68 = 0.1e-8;
            vec2 _t0C69 = [_t0C67, _t0C68];
            real _t0C6A = 0.e0;
            real _t0C6B = 0.e0;
            vec2 _t0C6C = [_t0C6A, _t0C6B];
            vec2 _t0C6D = prim -0026<$[2]> (_t0C6C, _t08E9);
            real _t0C6E = 0.e0;
            real _t0C6F = 0.1e1;
            vec2 _t0C70 = [_t0C6E, _t0C6F];
            real _t0C71 = 0.e0;
            real _t0C72 = 0.1e1;
            vec2 _t0C73 = [_t0C71, _t0C72];
            real _t0C74 = prim ×00BD (_t08F4, _t0C73);
            vec2 _t0C75 = prim /0057<$[2]> (_t0C70, _t0C74);
            real _t0C76 = prim ×00BD (_t0C6D, _t0C75);
            vec2 _t0C77 = prim *0038<$[2]> (_t08F4, _t0C76);
            vec2 _t0C78 = prim +0017<$[2]> (_t08E9, _t0C77);
            vec2 _t0C79 = prim +0017<$[2]> (_t0C69, _t0C78);
            real _t0C7A = _t0C79[0];
            real _t0C7B = -0.e0;
            bool _t0C7C = prim >0080 (_t0C7A, _t0C7B);
            real _t0C7D = 0.1e-8;
            real _t0C7E = 0.1e-8;
            vec2 _t0C7F = [_t0C7D, _t0C7E];
            real _t0C80 = 0.e0;
            real _t0C81 = 0.e0;
            vec2 _t0C82 = [_t0C80, _t0C81];
            vec2 _t0C83 = prim -0026<$[2]> (_t0C82, _t08E9);
            real _t0C84 = 0.e0;
            real _t0C85 = 0.1e1;
            vec2 _t0C86 = [_t0C84, _t0C85];
            real _t0C87 = 0.e0;
            real _t0C88 = 0.1e1;
            vec2 _t0C89 = [_t0C87, _t0C88];
            real _t0C8A = prim ×00BD (_t08F4, _t0C89);
            vec2 _t0C8B = prim /0057<$[2]> (_t0C86, _t0C8A);
            real _t0C8C = prim ×00BD (_t0C83, _t0C8B);
            vec2 _t0C8D = prim *0038<$[2]> (_t08F4, _t0C8C);
            vec2 _t0C8E = prim +0017<$[2]> (_t08E9, _t0C8D);
            vec2 _t0C8F = prim +0017<$[2]> (_t0C7F, _t0C8E);
            real _t0C90 = _t0C8F[1];
            real _t0C91 = -0.e0;
            bool _t0C92 = prim >0080 (_t0C90, _t0C91);
            bool _t0C93 = prim $and01C4 (_t0C7C, _t0C92);
            bool _t0C94 = prim $and01C4 (_t0C66, _t0C93);
            if _t0C94 {
              real _t0C95 = 0.e0;
              real _t0C96 = 0.e0;
              vec2 _t0C97 = [_t0C95, _t0C96];
              vec2 _t0C98 = prim -0026<$[2]> (_t0C97, _t08E9);
              real _t0C99 = 0.e0;
              real _t0C9A = 0.1e1;
              vec2 _t0C9B = [_t0C99, _t0C9A];
              real _t0C9C = 0.e0;
              real _t0C9D = 0.1e1;
              vec2 _t0C9E = [_t0C9C, _t0C9D];
              real _t0C9F = prim ×00BD (_t08F4, _t0C9E);
              vec2 _t0CA0 = prim /0057<$[2]> (_t0C9B, _t0C9F);
              time0BB0 = prim ×00BD (_t0C98, _t0CA0);
              face0BB1 = 1;
            }
          }
          real _t0CA1 = 0.e0;
          real _t0CA2 = 0.e0;
          vec2 _t0CA3 = [_t0CA1, _t0CA2];
          vec2 _t0CA4 = prim -0026<$[2]> (_t0CA3, _t08E9);
          real _t0CA5 = 0.1e1;
          real _t0CA6 = 0.e0;
          vec2 _t0CA7 = [_t0CA5, _t0CA6];
          real _t0CA8 = 0.1e1;
          real _t0CA9 = 0.e0;
          vec2 _t0CAA = [_t0CA8, _t0CA9];
          real _t0CAB = prim ×00BD (_t08F4, _t0CAA);
          vec2 _t0CAC = prim /0057<$[2]> (_t0CA7, _t0CAB);
          real _t0CAD = prim ×00BD (_t0CA4, _t0CAC);
          real _t0CAE = -0.1e-15;
          bool _t0CAF = prim >=007E (_t0CAD, _t0CAE);
          real _t0CB0 = 0.e0;
          real _t0CB1 = 0.e0;
          vec2 _t0CB2 = [_t0CB0, _t0CB1];
          vec2 _t0CB3 = prim -0026<$[2]> (_t0CB2, _t08E9);
          real _t0CB4 = 0.1e1;
          real _t0CB5 = 0.e0;
          vec2 _t0CB6 = [_t0CB4, _t0CB5];
          real _t0CB7 = 0.1e1;
          real _t0CB8 = 0.e0;
          vec2 _t0CB9 = [_t0CB7, _t0CB8];
          real _t0CBA = prim ×00BD (_t08F4, _t0CB9);
          vec2 _t0CBB = prim /0057<$[2]> (_t0CB6, _t0CBA);
          real _t0CBC = prim ×00BD (_t0CB3, _t0CBB);
          bool _t0CBD = prim >0080 (time0BB0, _t0CBC);
          real _t0CBE = 0.1e1;
          real _t0CBF = 0.e0;
          vec2 _t0CC0 = [_t0CBE, _t0CBF];
          real _t0CC1 = prim ×00BD (_t08F4, _t0CC0);
          real _t0CC2 = prim |()|00B5<$[]> (_t0CC1);
          real _t0CC3 = 0.1e-20;
          bool _t0CC4 = prim >=007E (_t0CC2, _t0CC3);
          bool _t0CC5 = prim $and01C4 (_t0CBD, _t0CC4);
          bool _t0CC6 = prim $and01C4 (_t0CAF, _t0CC5);
          if _t0CC6 {
            real _t0CC7 = 0.1e1;
            real _t0CC8 = 0.1e-8;
            real _t0CC9 = prim +0017<$[]> (_t0CC7, _t0CC8);
            real _t0CCA = 0.1e1;
            real _t0CCB = 0.1e1;
            vec2 _t0CCC = [_t0CCA, _t0CCB];
            real _t0CCD = 0.e0;
            real _t0CCE = 0.e0;
            vec2 _t0CCF = [_t0CCD, _t0CCE];
            vec2 _t0CD0 = prim -0026<$[2]> (_t0CCF, _t08E9);
            real _t0CD1 = 0.1e1;
            real _t0CD2 = 0.e0;
            vec2 _t0CD3 = [_t0CD1, _t0CD2];
            real _t0CD4 = 0.1e1;
            real _t0CD5 = 0.e0;
            vec2 _t0CD6 = [_t0CD4, _t0CD5];
            real _t0CD7 = prim ×00BD (_t08F4, _t0CD6);
            vec2 _t0CD8 = prim /0057<$[2]> (_t0CD3, _t0CD7);
            real _t0CD9 = prim ×00BD (_t0CD0, _t0CD8);
            vec2 _t0CDA = prim *0038<$[2]> (_t08F4, _t0CD9);
            vec2 _t0CDB = prim +0017<$[2]> (_t08E9, _t0CDA);
            real _t0CDC = prim •00CE<$[2]; $[2]; $[]> (_t0CCC, _t0CDB);
            bool _t0CDD = prim >0080 (_t0CC9, _t0CDC);
            real _t0CDE = 0.1e-8;
            real _t0CDF = 0.1e-8;
            vec2 _t0CE0 = [_t0CDE, _t0CDF];
            real _t0CE1 = 0.e0;
            real _t0CE2 = 0.e0;
            vec2 _t0CE3 = [_t0CE1, _t0CE2];
            vec2 _t0CE4 = prim -0026<$[2]> (_t0CE3, _t08E9);
            real _t0CE5 = 0.1e1;
            real _t0CE6 = 0.e0;
            vec2 _t0CE7 = [_t0CE5, _t0CE6];
            real _t0CE8 = 0.1e1;
            real _t0CE9 = 0.e0;
            vec2 _t0CEA = [_t0CE8, _t0CE9];
            real _t0CEB = prim ×00BD (_t08F4, _t0CEA);
            vec2 _t0CEC = prim /0057<$[2]> (_t0CE7, _t0CEB);
            real _t0CED = prim ×00BD (_t0CE4, _t0CEC);
            vec2 _t0CEE = prim *0038<$[2]> (_t08F4, _t0CED);
            vec2 _t0CEF = prim +0017<$[2]> (_t08E9, _t0CEE);
            vec2 _t0CF0 = prim +0017<$[2]> (_t0CE0, _t0CEF);
            real _t0CF1 = _t0CF0[0];
            real _t0CF2 = -0.e0;
            bool _t0CF3 = prim >0080 (_t0CF1, _t0CF2);
            real _t0CF4 = 0.1e-8;
            real _t0CF5 = 0.1e-8;
            vec2 _t0CF6 = [_t0CF4, _t0CF5];
            real _t0CF7 = 0.e0;
            real _t0CF8 = 0.e0;
            vec2 _t0CF9 = [_t0CF7, _t0CF8];
            vec2 _t0CFA = prim -0026<$[2]> (_t0CF9, _t08E9);
            real _t0CFB = 0.1e1;
            real _t0CFC = 0.e0;
            vec2 _t0CFD = [_t0CFB, _t0CFC];
            real _t0CFE = 0.1e1;
            real _t0CFF = 0.e0;
            vec2 _t0D00 = [_t0CFE, _t0CFF];
            real _t0D01 = prim ×00BD (_t08F4, _t0D00);
            vec2 _t0D02 = prim /0057<$[2]> (_t0CFD, _t0D01);
            real _t0D03 = prim ×00BD (_t0CFA, _t0D02);
            vec2 _t0D04 = prim *0038<$[2]> (_t08F4, _t0D03);
            vec2 _t0D05 = prim +0017<$[2]> (_t08E9, _t0D04);
            vec2 _t0D06 = prim +0017<$[2]> (_t0CF6, _t0D05);
            real _t0D07 = _t0D06[1];
            real _t0D08 = -0.e0;
            bool _t0D09 = prim >0080 (_t0D07, _t0D08);
            bool _t0D0A = prim $and01C4 (_t0CF3, _t0D09);
            bool _t0D0B = prim $and01C4 (_t0CDD, _t0D0A);
            if _t0D0B {
              real _t0D0C = 0.e0;
              real _t0D0D = 0.e0;
              vec2 _t0D0E = [_t0D0C, _t0D0D];
              vec2 _t0D0F = prim -0026<$[2]> (_t0D0E, _t08E9);
              real _t0D10 = 0.1e1;
              real _t0D11 = 0.e0;
              vec2 _t0D12 = [_t0D10, _t0D11];
              real _t0D13 = 0.1e1;
              real _t0D14 = 0.e0;
              vec2 _t0D15 = [_t0D13, _t0D14];
              real _t0D16 = prim ×00BD (_t08F4, _t0D15);
              vec2 _t0D17 = prim /0057<$[2]> (_t0D12, _t0D16);
              time0BB0 = prim ×00BD (_t0D0F, _t0D17);
              face0BB1 = 2;
            }
          }
          int _t0D18 = -1;
          bool _t0D19 = prim !=0086 (face0BB1, _t0D18);
          if _t0D19 {
            real _t0D1A = 0.e0;
            real _t0D1B = prim max0125 (time0BB0, _t0D1A);
            real _t0D1C = (real)face0BB1;
            vec2 _t0D1D = [_t0D1B, _t0D1C];
            _t08F5 = _t0D1D;
          } else {
            real _t0D1E = -0.1e1;
            real _t0D1F = -0.1e1;
            vec2 _t0D20 = [_t0D1E, _t0D1F];
            _t08F5 = _t0D20;
          }
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918;
          real time0A3F = +inf;
          int face0A40 = -1;
          real _t0A42 = 0.1e1;
          real _t0A43 = 0.e0;
          vec2 _t0A44 = [_t0A42, _t0A43];
          vec2 _t0A45 = prim -0026<$[2]> (_t0A44, _t090C);
          real _t0A46 = -0.1e1;
          real _t0A47 = 0.1e1;
          vec2 _t0A48 = [_t0A46, _t0A47];
          real _t0A49 = -0.1e1;
          real _t0A4A = 0.1e1;
          vec2 _t0A4B = [_t0A49, _t0A4A];
          real _t0A4C = prim ×00BD (_t0917, _t0A4B);
          vec2 _t0A4D = prim /0057<$[2]> (_t0A48, _t0A4C);
          real _t0A4E = prim ×00BD (_t0A45, _t0A4D);
          real _t0A4F = -0.1e-15;
          bool _t0A50 = prim >=007E (_t0A4E, _t0A4F);
          real _t0A51 = 0.1e1;
          real _t0A52 = 0.e0;
          vec2 _t0A53 = [_t0A51, _t0A52];
          vec2 _t0A54 = prim -0026<$[2]> (_t0A53, _t090C);
          real _t0A55 = -0.1e1;
          real _t0A56 = 0.1e1;
          vec2 _t0A57 = [_t0A55, _t0A56];
          real _t0A58 = -0.1e1;
          real _t0A59 = 0.1e1;
          vec2 _t0A5A = [_t0A58, _t0A59];
          real _t0A5B = prim ×00BD (_t0917, _t0A5A);
          vec2 _t0A5C = prim /0057<$[2]> (_t0A57, _t0A5B);
          real _t0A5D = prim ×00BD (_t0A54, _t0A5C);
          bool _t0A5E = prim >0080 (time0A3F, _t0A5D);
          real _t0A5F = -0.1e1;
          real _t0A60 = 0.1e1;
          vec2 _t0A61 = [_t0A5F, _t0A60];
          real _t0A62 = prim ×00BD (_t0917, _t0A61);
          real _t0A63 = prim |()|00B5<$[]> (_t0A62);
          real _t0A64 = 0.1e-20;
          bool _t0A65 = prim >=007E (_t0A63, _t0A64);
          bool _t0A66 = prim $and01C4 (_t0A5E, _t0A65);
          bool _t0A67 = prim $and01C4 (_t0A50, _t0A66);
          if _t0A67 {
            real _t0A68 = 0.1e1;
            real _t0A69 = 0.1e-8;
            real _t0A6A = prim +0017<$[]> (_t0A68, _t0A69);
            real _t0A6B = 0.1e1;
            real _t0A6C = 0.1e1;
            vec2 _t0A6D = [_t0A6B, _t0A6C];
            real _t0A6E = 0.1e1;
            real _t0A6F = 0.e0;
            vec2 _t0A70 = [_t0A6E, _t0A6F];
            vec2 _t0A71 = prim -0026<$[2]> (_t0A70, _t090C);
            real _t0A72 = -0.1e1;
            real _t0A73 = 0.1e1;
            vec2 _t0A74 = [_t0A72, _t0A73];
            real _t0A75 = -0.1e1;
            real _t0A76 = 0.1e1;
            vec2 _t0A77 = [_t0A75, _t0A76];
            real _t0A78 = prim ×00BD (_t0917, _t0A77);
            vec2 _t0A79 = prim /0057<$[2]> (_t0A74, _t0A78);
            real _t0A7A = prim ×00BD (_t0A71, _t0A79);
            vec2 _t0A7B = prim *0038<$[2]> (_t0917, _t0A7A);
            vec2 _t0A7C = prim +0017<$[2]> (_t090C, _t0A7B);
            real _t0A7D = prim •00CE<$[2]; $[2]; $[]> (_t0A6D, _t0A7C);
            bool _t0A7E = prim >0080 (_t0A6A, _t0A7D);
            real _t0A7F = 0.1e-8;
            real _t0A80 = 0.1e-8;
            vec2 _t0A81 = [_t0A7F, _t0A80];
            real _t0A82 = 0.1e1;
            real _t0A83 = 0.e0;
            vec2 _t0A84 = [_t0A82, _t0A83];
            vec2 _t0A85 = prim -0026<$[2]> (_t0A84, _t090C);
            real _t0A86 = -0.1e1;
            real _t0A87 = 0.1e1;
            vec2 _t0A88 = [_t0A86, _t0A87];
            real _t0A89 = -0.1e1;
            real _t0A8A = 0.1e1;
            vec2 _t0A8B = [_t0A89, _t0A8A];
            real _t0A8C = prim ×00BD (_t0917, _t0A8B);
            vec2 _t0A8D = prim /0057<$[2]> (_t0A88, _t0A8C);
            real _t0A8E = prim ×00BD (_t0A85, _t0A8D);
            vec2 _t0A8F = prim *0038<$[2]> (_t0917, _t0A8E);
            vec2 _t0A90 = prim +0017<$[2]> (_t090C, _t0A8F);
            vec2 _t0A91 = prim +0017<$[2]> (_t0A81, _t0A90);
            real _t0A92 = _t0A91[0];
            real _t0A93 = -0.e0;
            bool _t0A94 = prim >0080 (_t0A92, _t0A93);
            real _t0A95 = 0.1e-8;
            real _t0A96 = 0.1e-8;
            vec2 _t0A97 = [_t0A95, _t0A96];
            real _t0A98 = 0.1e1;
            real _t0A99 = 0.e0;
            vec2 _t0A9A = [_t0A98, _t0A99];
            vec2 _t0A9B = prim -0026<$[2]> (_t0A9A, _t090C);
            real _t0A9C = -0.1e1;
            real _t0A9D = 0.1e1;
            vec2 _t0A9E = [_t0A9C, _t0A9D];
            real _t0A9F = -0.1e1;
            real _t0AA0 = 0.1e1;
            vec2 _t0AA1 = [_t0A9F, _t0AA0];
            real _t0AA2 = prim ×00BD (_t0917, _t0AA1);
            vec2 _t0AA3 = prim /0057<$[2]> (_t0A9E, _t0AA2);
            real _t0AA4 = prim ×00BD (_t0A9B, _t0AA3);
            vec2 _t0AA5 = prim *0038<$[2]> (_t0917, _t0AA4);
            vec2 _t0AA6 = prim +0017<$[2]> (_t090C, _t0AA5);
            vec2 _t0AA7 = prim +0017<$[2]> (_t0A97, _t0AA6);
            real _t0AA8 = _t0AA7[1];
            real _t0AA9 = -0.e0;
            bool _t0AAA = prim >0080 (_t0AA8, _t0AA9);
            bool _t0AAB = prim $and01C4 (_t0A94, _t0AAA);
            bool _t0AAC = prim $and01C4 (_t0A7E, _t0AAB);
            if _t0AAC {
              real _t0AAD = 0.1e1;
              real _t0AAE = 0.e0;
              vec2 _t0AAF = [_t0AAD, _t0AAE];
              vec2 _t0AB0 = prim -0026<$[2]> (_t0AAF, _t090C);
              real _t0AB1 = -0.1e1;
              real _t0AB2 = 0.1e1;
              vec2 _t0AB3 = [_t0AB1, _t0AB2];
              real _t0AB4 = -0.1e1;
              real _t0AB5 = 0.1e1;
              vec2 _t0AB6 = [_t0AB4, _t0AB5];
              real _t0AB7 = prim ×00BD (_t0917, _t0AB6);
              vec2 _t0AB8 = prim /0057<$[2]> (_t0AB3, _t0AB7);
              time0A3F = prim ×00BD (_t0AB0, _t0AB8);
              face0A40 = 0;
            }
          }
          real _t0AB9 = 0.e0;
          real _t0ABA = 0.e0;
          vec2 _t0ABB = [_t0AB9, _t0ABA];
          vec2 _t0ABC = prim -0026<$[2]> (_t0ABB, _t090C);
          real _t0ABD = 0.e0;
          real _t0ABE = 0.1e1;
          vec2 _t0ABF = [_t0ABD, _t0ABE];
          real _t0AC0 = 0.e0;
          real _t0AC1 = 0.1e1;
          vec2 _t0AC2 = [_t0AC0, _t0AC1];
          real _t0AC3 = prim ×00BD (_t0917, _t0AC2);
          vec2 _t0AC4 = prim /0057<$[2]> (_t0ABF, _t0AC3);
          real _t0AC5 = prim ×00BD (_t0ABC, _t0AC4);
          real _t0AC6 = -0.1e-15;
          bool _t0AC7 = prim >=007E (_t0AC5, _t0AC6);
          real _t0AC8 = 0.e0;
          real _t0AC9 = 0.e0;
          vec2 _t0ACA = [_t0AC8, _t0AC9];
          vec2 _t0ACB = prim -0026<$[2]> (_t0ACA, _t090C);
          real _t0ACC = 0.e0;
          real _t0ACD = 0.1e1;
          vec2 _t0ACE = [_t0ACC, _t0ACD];
          real _t0ACF = 0.e0;
          real _t0AD0 = 0.1e1;
          vec2 _t0AD1 = [_t0ACF, _t0AD0];
          real _t0AD2 = prim ×00BD (_t0917, _t0AD1);
          vec2 _t0AD3 = prim /0057<$[2]> (_t0ACE, _t0AD2);
          real _t0AD4 = prim ×00BD (_t0ACB, _t0AD3);
          bool _t0AD5 = prim >0080 (time0A3F, _t0AD4);
          real _t0AD6 = 0.e0;
          real _t0AD7 = 0.1e1;
          vec2 _t0AD8 = [_t0AD6, _t0AD7];
          real _t0AD9 = prim ×00BD (_t0917, _t0AD8);
          real _t0ADA = prim |()|00B5<$[]> (_t0AD9);
          real _t0ADB = 0.1e-20;
          bool _t0ADC = prim >=007E (_t0ADA, _t0ADB);
          bool _t0ADD = prim $and01C4 (_t0AD5, _t0ADC);
          bool _t0ADE = prim $and01C4 (_t0AC7, _t0ADD);
          if _t0ADE {
            real _t0ADF = 0.1e1;
            real _t0AE0 = 0.1e-8;
            real _t0AE1 = prim +0017<$[]> (_t0ADF, _t0AE0);
            real _t0AE2 = 0.1e1;
            real _t0AE3 = 0.1e1;
            vec2 _t0AE4 = [_t0AE2, _t0AE3];
            real _t0AE5 = 0.e0;
            real _t0AE6 = 0.e0;
            vec2 _t0AE7 = [_t0AE5, _t0AE6];
            vec2 _t0AE8 = prim -0026<$[2]> (_t0AE7, _t090C);
            real _t0AE9 = 0.e0;
            real _t0AEA = 0.1e1;
            vec2 _t0AEB = [_t0AE9, _t0AEA];
            real _t0AEC = 0.e0;
            real _t0AED = 0.1e1;
            vec2 _t0AEE = [_t0AEC, _t0AED];
            real _t0AEF = prim ×00BD (_t0917, _t0AEE);
            vec2 _t0AF0 = prim /0057<$[2]> (_t0AEB, _t0AEF);
            real _t0AF1 = prim ×00BD (_t0AE8, _t0AF0);
            vec2 _t0AF2 = prim *0038<$[2]> (_t0917, _t0AF1);
            vec2 _t0AF3 = prim +0017<$[2]> (_t090C, _t0AF2);
            real _t0AF4 = prim •00CE<$[2]; $[2]; $[]> (_t0AE4, _t0AF3);
            bool _t0AF5 = prim >0080 (_t0AE1, _t0AF4);
            real _t0AF6 = 0.1e-8;
            real _t0AF7 = 0.1e-8;
            vec2 _t0AF8 = [_t0AF6, _t0AF7];
            real _t0AF9 = 0.e0;
            real _t0AFA = 0.e0;
            vec2 _t0AFB = [_t0AF9, _t0AFA];
            vec2 _t0AFC = prim -0026<$[2]> (_t0AFB, _t090C);
            real _t0AFD = 0.e0;
            real _t0AFE = 0.1e1;
            vec2 _t0AFF = [_t0AFD, _t0AFE];
            real _t0B00 = 0.e0;
            real _t0B01 = 0.1e1;
            vec2 _t0B02 = [_t0B00, _t0B01];
            real _t0B03 = prim ×00BD (_t0917, _t0B02);
            vec2 _t0B04 = prim /0057<$[2]> (_t0AFF, _t0B03);
            real _t0B05 = prim ×00BD (_t0AFC, _t0B04);
            vec2 _t0B06 = prim *0038<$[2]> (_t0917, _t0B05);
            vec2 _t0B07 = prim +0017<$[2]> (_t090C, _t0B06);
            vec2 _t0B08 = prim +0017<$[2]> (_t0AF8, _t0B07);
            real _t0B09 = _t0B08[0];
            real _t0B0A = -0.e0;
            bool _t0B0B = prim >0080 (_t0B09, _t0B0A);
            real _t0B0C = 0.1e-8;
            real _t0B0D = 0.1e-8;
            vec2 _t0B0E = [_t0B0C, _t0B0D];
            real _t0B0F = 0.e0;
            real _t0B10 = 0.e0;
            vec2 _t0B11 = [_t0B0F, _t0B10];
            vec2 _t0B12 = prim -0026<$[2]> (_t0B11, _t090C);
            real _t0B13 = 0.e0;
            real _t0B14 = 0.1e1;
            vec2 _t0B15 = [_t0B13, _t0B14];
            real _t0B16 = 0.e0;
            real _t0B17 = 0.1e1;
            vec2 _t0B18 = [_t0B16, _t0B17];
            real _t0B19 = prim ×00BD (_t0917, _t0B18);
            vec2 _t0B1A = prim /0057<$[2]> (_t0B15, _t0B19);
            real _t0B1B = prim ×00BD (_t0B12, _t0B1A);
            vec2 _t0B1C = prim *0038<$[2]> (_t0917, _t0B1B);
            vec2 _t0B1D = prim +0017<$[2]> (_t090C, _t0B1C);
            vec2 _t0B1E = prim +0017<$[2]> (_t0B0E, _t0B1D);
            real _t0B1F = _t0B1E[1];
            real _t0B20 = -0.e0;
            bool _t0B21 = prim >0080 (_t0B1F, _t0B20);
            bool _t0B22 = prim $and01C4 (_t0B0B, _t0B21);
            bool _t0B23 = prim $and01C4 (_t0AF5, _t0B22);
            if _t0B23 {
              real _t0B24 = 0.e0;
              real _t0B25 = 0.e0;
              vec2 _t0B26 = [_t0B24, _t0B25];
              vec2 _t0B27 = prim -0026<$[2]> (_t0B26, _t090C);
              real _t0B28 = 0.e0;
              real _t0B29 = 0.1e1;
              vec2 _t0B2A = [_t0B28, _t0B29];
              real _t0B2B = 0.e0;
              real _t0B2C = 0.1e1;
              vec2 _t0B2D = [_t0B2B, _t0B2C];
              real _t0B2E = prim ×00BD (_t0917, _t0B2D);
              vec2 _t0B2F = prim /0057<$[2]> (_t0B2A, _t0B2E);
              time0A3F = prim ×00BD (_t0B27, _t0B2F);
              face0A40 = 1;
            }
          }
          real _t0B30 = 0.e0;
          real _t0B31 = 0.e0;
          vec2 _t0B32 = [_t0B30, _t0B31];
          vec2 _t0B33 = prim -0026<$[2]> (_t0B32, _t090C);
          real _t0B34 = 0.1e1;
          real _t0B35 = 0.e0;
          vec2 _t0B36 = [_t0B34, _t0B35];
          real _t0B37 = 0.1e1;
          real _t0B38 = 0.e0;
          vec2 _t0B39 = [_t0B37, _t0B38];
          real _t0B3A = prim ×00BD (_t0917, _t0B39);
          vec2 _t0B3B = prim /0057<$[2]> (_t0B36, _t0B3A);
          real _t0B3C = prim ×00BD (_t0B33, _t0B3B);
          real _t0B3D = -0.1e-15;
          bool _t0B3E = prim >=007E (_t0B3C, _t0B3D);
          real _t0B3F = 0.e0;
          real _t0B40 = 0.e0;
          vec2 _t0B41 = [_t0B3F, _t0B40];
          vec2 _t0B42 = prim -0026<$[2]> (_t0B41, _t090C);
          real _t0B43 = 0.1e1;
          real _t0B44 = 0.e0;
          vec2 _t0B45 = [_t0B43, _t0B44];
          real _t0B46 = 0.1e1;
          real _t0B47 = 0.e0;
          vec2 _t0B48 = [_t0B46, _t0B47];
          real _t0B49 = prim ×00BD (_t0917, _t0B48);
          vec2 _t0B4A = prim /0057<$[2]> (_t0B45, _t0B49);
          real _t0B4B = prim ×00BD (_t0B42, _t0B4A);
          bool _t0B4C = prim >0080 (time0A3F, _t0B4B);
          real _t0B4D = 0.1e1;
          real _t0B4E = 0.e0;
          vec2 _t0B4F = [_t0B4D, _t0B4E];
          real _t0B50 = prim ×00BD (_t0917, _t0B4F);
          real _t0B51 = prim |()|00B5<$[]> (_t0B50);
          real _t0B52 = 0.1e-20;
          bool _t0B53 = prim >=007E (_t0B51, _t0B52);
          bool _t0B54 = prim $and01C4 (_t0B4C, _t0B53);
          bool _t0B55 = prim $and01C4 (_t0B3E, _t0B54);
          if _t0B55 {
            real _t0B56 = 0.1e1;
            real _t0B57 = 0.1e-8;
            real _t0B58 = prim +0017<$[]> (_t0B56, _t0B57);
            real _t0B59 = 0.1e1;
            real _t0B5A = 0.1e1;
            vec2 _t0B5B = [_t0B59, _t0B5A];
            real _t0B5C = 0.e0;
            real _t0B5D = 0.e0;
            vec2 _t0B5E = [_t0B5C, _t0B5D];
            vec2 _t0B5F = prim -0026<$[2]> (_t0B5E, _t090C);
            real _t0B60 = 0.1e1;
            real _t0B61 = 0.e0;
            vec2 _t0B62 = [_t0B60, _t0B61];
            real _t0B63 = 0.1e1;
            real _t0B64 = 0.e0;
            vec2 _t0B65 = [_t0B63, _t0B64];
            real _t0B66 = prim ×00BD (_t0917, _t0B65);
            vec2 _t0B67 = prim /0057<$[2]> (_t0B62, _t0B66);
            real _t0B68 = prim ×00BD (_t0B5F, _t0B67);
            vec2 _t0B69 = prim *0038<$[2]> (_t0917, _t0B68);
            vec2 _t0B6A = prim +0017<$[2]> (_t090C, _t0B69);
            real _t0B6B = prim •00CE<$[2]; $[2]; $[]> (_t0B5B, _t0B6A);
            bool _t0B6C = prim >0080 (_t0B58, _t0B6B);
            real _t0B6D = 0.1e-8;
            real _t0B6E = 0.1e-8;
            vec2 _t0B6F = [_t0B6D, _t0B6E];
            real _t0B70 = 0.e0;
            real _t0B71 = 0.e0;
            vec2 _t0B72 = [_t0B70, _t0B71];
            vec2 _t0B73 = prim -0026<$[2]> (_t0B72, _t090C);
            real _t0B74 = 0.1e1;
            real _t0B75 = 0.e0;
            vec2 _t0B76 = [_t0B74, _t0B75];
            real _t0B77 = 0.1e1;
            real _t0B78 = 0.e0;
            vec2 _t0B79 = [_t0B77, _t0B78];
            real _t0B7A = prim ×00BD (_t0917, _t0B79);
            vec2 _t0B7B = prim /0057<$[2]> (_t0B76, _t0B7A);
            real _t0B7C = prim ×00BD (_t0B73, _t0B7B);
            vec2 _t0B7D = prim *0038<$[2]> (_t0917, _t0B7C);
            vec2 _t0B7E = prim +0017<$[2]> (_t090C, _t0B7D);
            vec2 _t0B7F = prim +0017<$[2]> (_t0B6F, _t0B7E);
            real _t0B80 = _t0B7F[0];
            real _t0B81 = -0.e0;
            bool _t0B82 = prim >0080 (_t0B80, _t0B81);
            real _t0B83 = 0.1e-8;
            real _t0B84 = 0.1e-8;
            vec2 _t0B85 = [_t0B83, _t0B84];
            real _t0B86 = 0.e0;
            real _t0B87 = 0.e0;
            vec2 _t0B88 = [_t0B86, _t0B87];
            vec2 _t0B89 = prim -0026<$[2]> (_t0B88, _t090C);
            real _t0B8A = 0.1e1;
            real _t0B8B = 0.e0;
            vec2 _t0B8C = [_t0B8A, _t0B8B];
            real _t0B8D = 0.1e1;
            real _t0B8E = 0.e0;
            vec2 _t0B8F = [_t0B8D, _t0B8E];
            real _t0B90 = prim ×00BD (_t0917, _t0B8F);
            vec2 _t0B91 = prim /0057<$[2]> (_t0B8C, _t0B90);
            real _t0B92 = prim ×00BD (_t0B89, _t0B91);
            vec2 _t0B93 = prim *0038<$[2]> (_t0917, _t0B92);
            vec2 _t0B94 = prim +0017<$[2]> (_t090C, _t0B93);
            vec2 _t0B95 = prim +0017<$[2]> (_t0B85, _t0B94);
            real _t0B96 = _t0B95[1];
            real _t0B97 = -0.e0;
            bool _t0B98 = prim >0080 (_t0B96, _t0B97);
            bool _t0B99 = prim $and01C4 (_t0B82, _t0B98);
            bool _t0B9A = prim $and01C4 (_t0B6C, _t0B99);
            if _t0B9A {
              real _t0B9B = 0.e0;
              real _t0B9C = 0.e0;
              vec2 _t0B9D = [_t0B9B, _t0B9C];
              vec2 _t0B9E = prim -0026<$[2]> (_t0B9D, _t090C);
              real _t0B9F = 0.1e1;
              real _t0BA0 = 0.e0;
              vec2 _t0BA1 = [_t0B9F, _t0BA0];
              real _t0BA2 = 0.1e1;
              real _t0BA3 = 0.e0;
              vec2 _t0BA4 = [_t0BA2, _t0BA3];
              real _t0BA5 = prim ×00BD (_t0917, _t0BA4);
              vec2 _t0BA6 = prim /0057<$[2]> (_t0BA1, _t0BA5);
              time0A3F = prim ×00BD (_t0B9E, _t0BA6);
              face0A40 = 2;
            }
          }
          int _t0BA7 = -1;
          bool _t0BA8 = prim !=0086 (face0A40, _t0BA7);
          if _t0BA8 {
            real _t0BA9 = 0.e0;
            real _t0BAA = prim max0125 (time0A3F, _t0BA9);
            real _t0BAB = (real)face0A40;
            vec2 _t0BAC = [_t0BAA, _t0BAB];
            _t0918 = _t0BAC;
          } else {
            real _t0BAD = -0.1e1;
            real _t0BAE = -0.1e1;
            vec2 _t0BAF = [_t0BAD, _t0BAE];
            _t0918 = _t0BAF;
          }
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E;
    vec2 _t122D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t122E = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t122F = extractFem(pos0854, Mesh);
    vec2 _t1230;
    field(2)[2] _t1231 = femField(_t122F,_t122E,field(2)[2],Transform,);
    vec2 _t1232 = prim @00A5<#∞; %2; $[2]> (_t1231, _t122D);
    _t1230 = _t1232;
    _t094E = _t1230;
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977;
    vec2 _t1227 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1228 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1229 = extractFem(pos0854, Mesh);
    vec2 _t122A;
    field(2)[2] _t122B = femField(_t1229,_t1228,field(2)[2],Transform,);
    vec2 _t122C = prim @00A5<#∞; %2; $[2]> (_t122B, _t1227);
    _t122A = _t122C;
    _t0977 = _t122A;
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980;
    vec2 _t1221 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1222 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1223 = extractFem(pos0854, Mesh);
    vec2 _t1224;
    field(2)[2] _t1225 = femField(_t1223,_t1222,field(2)[2],Transform,);
    vec2 _t1226 = prim @00A5<#∞; %2; $[2]> (_t1225, _t1221);
    _t1224 = _t1226;
    _t0980 = _t1224;
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC;
    real time1151 = +inf;
    int face1152 = -1;
    real faceTime1153 = -inf;
    real _t1154 = 0.1e1;
    real _t1155 = 0.e0;
    vec2 _t1156 = [_t1154, _t1155];
    vec2 _t1157 = prim -0026<$[2]> (_t1156, _t0993);
    real _t1158 = -0.1e1;
    real _t1159 = 0.1e1;
    vec2 _t115A = [_t1158, _t1159];
    real _t115B = -0.1e1;
    real _t115C = 0.1e1;
    vec2 _t115D = [_t115B, _t115C];
    real _t115E = prim ×00BD (_t09AA, _t115D);
    vec2 _t115F = prim /0057<$[2]> (_t115A, _t115E);
    real _t1160 = prim ×00BD (_t1157, _t115F);
    real _t1161 = -0.1e-15;
    bool _t1162 = prim >=007E (_t1160, _t1161);
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    vec2 _t1165 = [_t1163, _t1164];
    vec2 _t1166 = prim -0026<$[2]> (_t1165, _t0993);
    real _t1167 = -0.1e1;
    real _t1168 = 0.1e1;
    vec2 _t1169 = [_t1167, _t1168];
    real _t116A = -0.1e1;
    real _t116B = 0.1e1;
    vec2 _t116C = [_t116A, _t116B];
    real _t116D = prim ×00BD (_t09AA, _t116C);
    vec2 _t116E = prim /0057<$[2]> (_t1169, _t116D);
    real _t116F = prim ×00BD (_t1166, _t116E);
    bool _t1170 = prim >0080 (time1151, _t116F);
    real _t1171 = -0.1e1;
    real _t1172 = 0.1e1;
    vec2 _t1173 = [_t1171, _t1172];
    real _t1174 = prim ×00BD (_t09AA, _t1173);
    real _t1175 = prim |()|00B5<$[]> (_t1174);
    real _t1176 = 0.1e-20;
    bool _t1177 = prim >=007E (_t1175, _t1176);
    bool _t1178 = prim $and01C4 (_t1170, _t1177);
    bool _t1179 = prim $and01C4 (_t1162, _t1178);
    if _t1179 {
      int _t117A = 0;
      bool _t117B = prim !=0086 (_t09AB, _t117A);
      if _t117B {
        real _t117C = 0.1e1;
        real _t117D = 0.e0;
        vec2 _t117E = [_t117C, _t117D];
        vec2 _t117F = prim -0026<$[2]> (_t117E, _t0993);
        real _t1180 = -0.1e1;
        real _t1181 = 0.1e1;
        vec2 _t1182 = [_t1180, _t1181];
        real _t1183 = -0.1e1;
        real _t1184 = 0.1e1;
        vec2 _t1185 = [_t1183, _t1184];
        real _t1186 = prim ×00BD (_t09AA, _t1185);
        vec2 _t1187 = prim /0057<$[2]> (_t1182, _t1186);
        time1151 = prim ×00BD (_t117F, _t1187);
        face1152 = 0;
      } else {
        real _t1188 = 0.1e1;
        real _t1189 = 0.e0;
        vec2 _t118A = [_t1188, _t1189];
        vec2 _t118B = prim -0026<$[2]> (_t118A, _t0993);
        real _t118C = -0.1e1;
        real _t118D = 0.1e1;
        vec2 _t118E = [_t118C, _t118D];
        real _t118F = -0.1e1;
        real _t1190 = 0.1e1;
        vec2 _t1191 = [_t118F, _t1190];
        real _t1192 = prim ×00BD (_t09AA, _t1191);
        vec2 _t1193 = prim /0057<$[2]> (_t118E, _t1192);
        faceTime1153 = prim ×00BD (_t118B, _t1193);
      }
    }
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    vec2 _t1196 = [_t1194, _t1195];
    vec2 _t1197 = prim -0026<$[2]> (_t1196, _t0993);
    real _t1198 = 0.e0;
    real _t1199 = 0.1e1;
    vec2 _t119A = [_t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec2 _t119D = [_t119B, _t119C];
    real _t119E = prim ×00BD (_t09AA, _t119D);
    vec2 _t119F = prim /0057<$[2]> (_t119A, _t119E);
    real _t11A0 = prim ×00BD (_t1197, _t119F);
    real _t11A1 = -0.1e-15;
    bool _t11A2 = prim >=007E (_t11A0, _t11A1);
    real _t11A3 = 0.e0;
    real _t11A4 = 0.e0;
    vec2 _t11A5 = [_t11A3, _t11A4];
    vec2 _t11A6 = prim -0026<$[2]> (_t11A5, _t0993);
    real _t11A7 = 0.e0;
    real _t11A8 = 0.1e1;
    vec2 _t11A9 = [_t11A7, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    vec2 _t11AC = [_t11AA, _t11AB];
    real _t11AD = prim ×00BD (_t09AA, _t11AC);
    vec2 _t11AE = prim /0057<$[2]> (_t11A9, _t11AD);
    real _t11AF = prim ×00BD (_t11A6, _t11AE);
    bool _t11B0 = prim >0080 (time1151, _t11AF);
    real _t11B1 = 0.e0;
    real _t11B2 = 0.1e1;
    vec2 _t11B3 = [_t11B1, _t11B2];
    real _t11B4 = prim ×00BD (_t09AA, _t11B3);
    real _t11B5 = prim |()|00B5<$[]> (_t11B4);
    real _t11B6 = 0.1e-20;
    bool _t11B7 = prim >=007E (_t11B5, _t11B6);
    bool _t11B8 = prim $and01C4 (_t11B0, _t11B7);
    bool _t11B9 = prim $and01C4 (_t11A2, _t11B8);
    if _t11B9 {
      int _t11BA = 1;
      bool _t11BB = prim !=0086 (_t09AB, _t11BA);
      if _t11BB {
        real _t11BC = 0.e0;
        real _t11BD = 0.e0;
        vec2 _t11BE = [_t11BC, _t11BD];
        vec2 _t11BF = prim -0026<$[2]> (_t11BE, _t0993);
        real _t11C0 = 0.e0;
        real _t11C1 = 0.1e1;
        vec2 _t11C2 = [_t11C0, _t11C1];
        real _t11C3 = 0.e0;
        real _t11C4 = 0.1e1;
        vec2 _t11C5 = [_t11C3, _t11C4];
        real _t11C6 = prim ×00BD (_t09AA, _t11C5);
        vec2 _t11C7 = prim /0057<$[2]> (_t11C2, _t11C6);
        time1151 = prim ×00BD (_t11BF, _t11C7);
        face1152 = 1;
      } else {
        real _t11C8 = 0.e0;
        real _t11C9 = 0.e0;
        vec2 _t11CA = [_t11C8, _t11C9];
        vec2 _t11CB = prim -0026<$[2]> (_t11CA, _t0993);
        real _t11CC = 0.e0;
        real _t11CD = 0.1e1;
        vec2 _t11CE = [_t11CC, _t11CD];
        real _t11CF = 0.e0;
        real _t11D0 = 0.1e1;
        vec2 _t11D1 = [_t11CF, _t11D0];
        real _t11D2 = prim ×00BD (_t09AA, _t11D1);
        vec2 _t11D3 = prim /0057<$[2]> (_t11CE, _t11D2);
        faceTime1153 = prim ×00BD (_t11CB, _t11D3);
      }
    }
    real _t11D4 = 0.e0;
    real _t11D5 = 0.e0;
    vec2 _t11D6 = [_t11D4, _t11D5];
    vec2 _t11D7 = prim -0026<$[2]> (_t11D6, _t0993);
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec2 _t11DA = [_t11D8, _t11D9];
    real _t11DB = 0.1e1;
    real _t11DC = 0.e0;
    vec2 _t11DD = [_t11DB, _t11DC];
    real _t11DE = prim ×00BD (_t09AA, _t11DD);
    vec2 _t11DF = prim /0057<$[2]> (_t11DA, _t11DE);
    real _t11E0 = prim ×00BD (_t11D7, _t11DF);
    real _t11E1 = -0.1e-15;
    bool _t11E2 = prim >=007E (_t11E0, _t11E1);
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec2 _t11E5 = [_t11E3, _t11E4];
    vec2 _t11E6 = prim -0026<$[2]> (_t11E5, _t0993);
    real _t11E7 = 0.1e1;
    real _t11E8 = 0.e0;
    vec2 _t11E9 = [_t11E7, _t11E8];
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    vec2 _t11EC = [_t11EA, _t11EB];
    real _t11ED = prim ×00BD (_t09AA, _t11EC);
    vec2 _t11EE = prim /0057<$[2]> (_t11E9, _t11ED);
    real _t11EF = prim ×00BD (_t11E6, _t11EE);
    bool _t11F0 = prim >0080 (time1151, _t11EF);
    real _t11F1 = 0.1e1;
    real _t11F2 = 0.e0;
    vec2 _t11F3 = [_t11F1, _t11F2];
    real _t11F4 = prim ×00BD (_t09AA, _t11F3);
    real _t11F5 = prim |()|00B5<$[]> (_t11F4);
    real _t11F6 = 0.1e-20;
    bool _t11F7 = prim >=007E (_t11F5, _t11F6);
    bool _t11F8 = prim $and01C4 (_t11F0, _t11F7);
    bool _t11F9 = prim $and01C4 (_t11E2, _t11F8);
    if _t11F9 {
      int _t11FA = 2;
      bool _t11FB = prim !=0086 (_t09AB, _t11FA);
      if _t11FB {
        real _t11FC = 0.e0;
        real _t11FD = 0.e0;
        vec2 _t11FE = [_t11FC, _t11FD];
        vec2 _t11FF = prim -0026<$[2]> (_t11FE, _t0993);
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec2 _t1202 = [_t1200, _t1201];
        real _t1203 = 0.1e1;
        real _t1204 = 0.e0;
        vec2 _t1205 = [_t1203, _t1204];
        real _t1206 = prim ×00BD (_t09AA, _t1205);
        vec2 _t1207 = prim /0057<$[2]> (_t1202, _t1206);
        time1151 = prim ×00BD (_t11FF, _t1207);
        face1152 = 2;
      } else {
        real _t1208 = 0.e0;
        real _t1209 = 0.e0;
        vec2 _t120A = [_t1208, _t1209];
        vec2 _t120B = prim -0026<$[2]> (_t120A, _t0993);
        real _t120C = 0.1e1;
        real _t120D = 0.e0;
        vec2 _t120E = [_t120C, _t120D];
        real _t120F = 0.1e1;
        real _t1210 = 0.e0;
        vec2 _t1211 = [_t120F, _t1210];
        real _t1212 = prim ×00BD (_t09AA, _t1211);
        vec2 _t1213 = prim /0057<$[2]> (_t120E, _t1212);
        faceTime1153 = prim ×00BD (_t120B, _t1213);
      }
    }
    int _t1214 = -1;
    bool _t1215 = prim !=0086 (face1152, _t1214);
    if _t1215 {
      real _t1216 = 0.e0;
      real _t1217 = prim max0125 (time1151, _t1216);
      real _t1218 = (real)face1152;
      vec2 _t1219 = [_t1217, _t1218];
      _t09AC = _t1219;
    } else {
      real _t121A = -inf;
      bool _t121B = prim ==0084 (_t121A, faceTime1153);
      if _t121B {
        real _t121C = -0.1e1;
        real _t121D = -0.1e1;
        vec2 _t121E = [_t121C, _t121D];
        _t09AC = _t121E;
      } else {
        real _t121F = (real)_t09AB;
        vec2 _t1220 = [faceTime1153, _t121F];
        _t09AC = _t1220;
      }
    }
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9;
      real time1081 = +inf;
      int face1082 = -1;
      real faceTime1083 = -inf;
      real _t1084 = 0.1e1;
      real _t1085 = 0.e0;
      vec2 _t1086 = [_t1084, _t1085];
      vec2 _t1087 = prim -0026<$[2]> (_t1086, _t09D0);
      real _t1088 = -0.1e1;
      real _t1089 = 0.1e1;
      vec2 _t108A = [_t1088, _t1089];
      real _t108B = -0.1e1;
      real _t108C = 0.1e1;
      vec2 _t108D = [_t108B, _t108C];
      real _t108E = prim ×00BD (_t09E7, _t108D);
      vec2 _t108F = prim /0057<$[2]> (_t108A, _t108E);
      real _t1090 = prim ×00BD (_t1087, _t108F);
      real _t1091 = -0.1e-15;
      bool _t1092 = prim >=007E (_t1090, _t1091);
      real _t1093 = 0.1e1;
      real _t1094 = 0.e0;
      vec2 _t1095 = [_t1093, _t1094];
      vec2 _t1096 = prim -0026<$[2]> (_t1095, _t09D0);
      real _t1097 = -0.1e1;
      real _t1098 = 0.1e1;
      vec2 _t1099 = [_t1097, _t1098];
      real _t109A = -0.1e1;
      real _t109B = 0.1e1;
      vec2 _t109C = [_t109A, _t109B];
      real _t109D = prim ×00BD (_t09E7, _t109C);
      vec2 _t109E = prim /0057<$[2]> (_t1099, _t109D);
      real _t109F = prim ×00BD (_t1096, _t109E);
      bool _t10A0 = prim >0080 (time1081, _t109F);
      real _t10A1 = -0.1e1;
      real _t10A2 = 0.1e1;
      vec2 _t10A3 = [_t10A1, _t10A2];
      real _t10A4 = prim ×00BD (_t09E7, _t10A3);
      real _t10A5 = prim |()|00B5<$[]> (_t10A4);
      real _t10A6 = 0.1e-20;
      bool _t10A7 = prim >=007E (_t10A5, _t10A6);
      bool _t10A8 = prim $and01C4 (_t10A0, _t10A7);
      bool _t10A9 = prim $and01C4 (_t1092, _t10A8);
      if _t10A9 {
        int _t10AA = 0;
        bool _t10AB = prim !=0086 (_t09E8, _t10AA);
        if _t10AB {
          real _t10AC = 0.1e1;
          real _t10AD = 0.e0;
          vec2 _t10AE = [_t10AC, _t10AD];
          vec2 _t10AF = prim -0026<$[2]> (_t10AE, _t09D0);
          real _t10B0 = -0.1e1;
          real _t10B1 = 0.1e1;
          vec2 _t10B2 = [_t10B0, _t10B1];
          real _t10B3 = -0.1e1;
          real _t10B4 = 0.1e1;
          vec2 _t10B5 = [_t10B3, _t10B4];
          real _t10B6 = prim ×00BD (_t09E7, _t10B5);
          vec2 _t10B7 = prim /0057<$[2]> (_t10B2, _t10B6);
          time1081 = prim ×00BD (_t10AF, _t10B7);
          face1082 = 0;
        } else {
          real _t10B8 = 0.1e1;
          real _t10B9 = 0.e0;
          vec2 _t10BA = [_t10B8, _t10B9];
          vec2 _t10BB = prim -0026<$[2]> (_t10BA, _t09D0);
          real _t10BC = -0.1e1;
          real _t10BD = 0.1e1;
          vec2 _t10BE = [_t10BC, _t10BD];
          real _t10BF = -0.1e1;
          real _t10C0 = 0.1e1;
          vec2 _t10C1 = [_t10BF, _t10C0];
          real _t10C2 = prim ×00BD (_t09E7, _t10C1);
          vec2 _t10C3 = prim /0057<$[2]> (_t10BE, _t10C2);
          faceTime1083 = prim ×00BD (_t10BB, _t10C3);
        }
      }
      real _t10C4 = 0.e0;
      real _t10C5 = 0.e0;
      vec2 _t10C6 = [_t10C4, _t10C5];
      vec2 _t10C7 = prim -0026<$[2]> (_t10C6, _t09D0);
      real _t10C8 = 0.e0;
      real _t10C9 = 0.1e1;
      vec2 _t10CA = [_t10C8, _t10C9];
      real _t10CB = 0.e0;
      real _t10CC = 0.1e1;
      vec2 _t10CD = [_t10CB, _t10CC];
      real _t10CE = prim ×00BD (_t09E7, _t10CD);
      vec2 _t10CF = prim /0057<$[2]> (_t10CA, _t10CE);
      real _t10D0 = prim ×00BD (_t10C7, _t10CF);
      real _t10D1 = -0.1e-15;
      bool _t10D2 = prim >=007E (_t10D0, _t10D1);
      real _t10D3 = 0.e0;
      real _t10D4 = 0.e0;
      vec2 _t10D5 = [_t10D3, _t10D4];
      vec2 _t10D6 = prim -0026<$[2]> (_t10D5, _t09D0);
      real _t10D7 = 0.e0;
      real _t10D8 = 0.1e1;
      vec2 _t10D9 = [_t10D7, _t10D8];
      real _t10DA = 0.e0;
      real _t10DB = 0.1e1;
      vec2 _t10DC = [_t10DA, _t10DB];
      real _t10DD = prim ×00BD (_t09E7, _t10DC);
      vec2 _t10DE = prim /0057<$[2]> (_t10D9, _t10DD);
      real _t10DF = prim ×00BD (_t10D6, _t10DE);
      bool _t10E0 = prim >0080 (time1081, _t10DF);
      real _t10E1 = 0.e0;
      real _t10E2 = 0.1e1;
      vec2 _t10E3 = [_t10E1, _t10E2];
      real _t10E4 = prim ×00BD (_t09E7, _t10E3);
      real _t10E5 = prim |()|00B5<$[]> (_t10E4);
      real _t10E6 = 0.1e-20;
      bool _t10E7 = prim >=007E (_t10E5, _t10E6);
      bool _t10E8 = prim $and01C4 (_t10E0, _t10E7);
      bool _t10E9 = prim $and01C4 (_t10D2, _t10E8);
      if _t10E9 {
        int _t10EA = 1;
        bool _t10EB = prim !=0086 (_t09E8, _t10EA);
        if _t10EB {
          real _t10EC = 0.e0;
          real _t10ED = 0.e0;
          vec2 _t10EE = [_t10EC, _t10ED];
          vec2 _t10EF = prim -0026<$[2]> (_t10EE, _t09D0);
          real _t10F0 = 0.e0;
          real _t10F1 = 0.1e1;
          vec2 _t10F2 = [_t10F0, _t10F1];
          real _t10F3 = 0.e0;
          real _t10F4 = 0.1e1;
          vec2 _t10F5 = [_t10F3, _t10F4];
          real _t10F6 = prim ×00BD (_t09E7, _t10F5);
          vec2 _t10F7 = prim /0057<$[2]> (_t10F2, _t10F6);
          time1081 = prim ×00BD (_t10EF, _t10F7);
          face1082 = 1;
        } else {
          real _t10F8 = 0.e0;
          real _t10F9 = 0.e0;
          vec2 _t10FA = [_t10F8, _t10F9];
          vec2 _t10FB = prim -0026<$[2]> (_t10FA, _t09D0);
          real _t10FC = 0.e0;
          real _t10FD = 0.1e1;
          vec2 _t10FE = [_t10FC, _t10FD];
          real _t10FF = 0.e0;
          real _t1100 = 0.1e1;
          vec2 _t1101 = [_t10FF, _t1100];
          real _t1102 = prim ×00BD (_t09E7, _t1101);
          vec2 _t1103 = prim /0057<$[2]> (_t10FE, _t1102);
          faceTime1083 = prim ×00BD (_t10FB, _t1103);
        }
      }
      real _t1104 = 0.e0;
      real _t1105 = 0.e0;
      vec2 _t1106 = [_t1104, _t1105];
      vec2 _t1107 = prim -0026<$[2]> (_t1106, _t09D0);
      real _t1108 = 0.1e1;
      real _t1109 = 0.e0;
      vec2 _t110A = [_t1108, _t1109];
      real _t110B = 0.1e1;
      real _t110C = 0.e0;
      vec2 _t110D = [_t110B, _t110C];
      real _t110E = prim ×00BD (_t09E7, _t110D);
      vec2 _t110F = prim /0057<$[2]> (_t110A, _t110E);
      real _t1110 = prim ×00BD (_t1107, _t110F);
      real _t1111 = -0.1e-15;
      bool _t1112 = prim >=007E (_t1110, _t1111);
      real _t1113 = 0.e0;
      real _t1114 = 0.e0;
      vec2 _t1115 = [_t1113, _t1114];
      vec2 _t1116 = prim -0026<$[2]> (_t1115, _t09D0);
      real _t1117 = 0.1e1;
      real _t1118 = 0.e0;
      vec2 _t1119 = [_t1117, _t1118];
      real _t111A = 0.1e1;
      real _t111B = 0.e0;
      vec2 _t111C = [_t111A, _t111B];
      real _t111D = prim ×00BD (_t09E7, _t111C);
      vec2 _t111E = prim /0057<$[2]> (_t1119, _t111D);
      real _t111F = prim ×00BD (_t1116, _t111E);
      bool _t1120 = prim >0080 (time1081, _t111F);
      real _t1121 = 0.1e1;
      real _t1122 = 0.e0;
      vec2 _t1123 = [_t1121, _t1122];
      real _t1124 = prim ×00BD (_t09E7, _t1123);
      real _t1125 = prim |()|00B5<$[]> (_t1124);
      real _t1126 = 0.1e-20;
      bool _t1127 = prim >=007E (_t1125, _t1126);
      bool _t1128 = prim $and01C4 (_t1120, _t1127);
      bool _t1129 = prim $and01C4 (_t1112, _t1128);
      if _t1129 {
        int _t112A = 2;
        bool _t112B = prim !=0086 (_t09E8, _t112A);
        if _t112B {
          real _t112C = 0.e0;
          real _t112D = 0.e0;
          vec2 _t112E = [_t112C, _t112D];
          vec2 _t112F = prim -0026<$[2]> (_t112E, _t09D0);
          real _t1130 = 0.1e1;
          real _t1131 = 0.e0;
          vec2 _t1132 = [_t1130, _t1131];
          real _t1133 = 0.1e1;
          real _t1134 = 0.e0;
          vec2 _t1135 = [_t1133, _t1134];
          real _t1136 = prim ×00BD (_t09E7, _t1135);
          vec2 _t1137 = prim /0057<$[2]> (_t1132, _t1136);
          time1081 = prim ×00BD (_t112F, _t1137);
          face1082 = 2;
        } else {
          real _t1138 = 0.e0;
          real _t1139 = 0.e0;
          vec2 _t113A = [_t1138, _t1139];
          vec2 _t113B = prim -0026<$[2]> (_t113A, _t09D0);
          real _t113C = 0.1e1;
          real _t113D = 0.e0;
          vec2 _t113E = [_t113C, _t113D];
          real _t113F = 0.1e1;
          real _t1140 = 0.e0;
          vec2 _t1141 = [_t113F, _t1140];
          real _t1142 = prim ×00BD (_t09E7, _t1141);
          vec2 _t1143 = prim /0057<$[2]> (_t113E, _t1142);
          faceTime1083 = prim ×00BD (_t113B, _t1143);
        }
      }
      int _t1144 = -1;
      bool _t1145 = prim !=0086 (face1082, _t1144);
      if _t1145 {
        real _t1146 = 0.e0;
        real _t1147 = prim max0125 (time1081, _t1146);
        real _t1148 = (real)face1082;
        vec2 _t1149 = [_t1147, _t1148];
        _t09E9 = _t1149;
      } else {
        real _t114A = -inf;
        bool _t114B = prim ==0084 (_t114A, faceTime1083);
        if _t114B {
          real _t114C = -0.1e1;
          real _t114D = -0.1e1;
          vec2 _t114E = [_t114C, _t114D];
          _t09E9 = _t114E;
        } else {
          real _t114F = (real)_t09E8;
          vec2 _t1150 = [faceTime1083, _t114F];
          _t09E9 = _t1150;
        }
      }
      Femdata: MeshPos posp09EA;
      int _t100C = -1;
      real _t100D = _t09E9[1];
      int _t100E = prim $r2i01B7 (_t100D);
      int[2] _t100F = func nextCell40536 (_t100E, _t09B7, _t09B6);
      int _t1010 = 0;
      int _t1011 = prim $sub01C0<int; %2> (_t100F, _t1010);
      bool _t1012 = prim !=0086 (_t100C, _t1011);
      if _t1012 {
        real _t1013 = _t09E9[1];
        int _t1014 = prim $r2i01B7 (_t1013);
        int[2] _t1015 = func nextCell40536 (_t1014, _t09B7, _t09B6);
        int _t1016 = 0;
        int _t1017 = prim $sub01C0<int; %2> (_t1015, _t1016);
        real _t1018 = 0.1e1;
        real _t1019 = 0.e0;
        vec2 _t101A = [_t1018, _t1019];
        real _t101B = 0.e0;
        real _t101C = 0.e0;
        vec2 _t101D = [_t101B, _t101C];
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec2 _t1020 = [_t101E, _t101F];
        vec2[3] _t1021 = {_t101A, _t101D, _t1020};
        real _t1022 = _t09E9[1];
        int _t1023 = prim $r2i01B7 (_t1022);
        int[2] _t1024 = func nextCell40536 (_t1023, _t09B7, _t09B6);
        int _t1025 = 1;
        int _t1026 = prim $sub01C0<int; %2> (_t1024, _t1025);
        vec2 _t1027 = prim $sub01C0<vec2; %3> (_t1021, _t1026);
        real _t1028 = -0.1e1;
        real _t1029 = 0.1e1;
        vec2 _t102A = [_t1028, _t1029];
        real _t102B = 0.e0;
        real _t102C = 0.1e1;
        vec2 _t102D = [_t102B, _t102C];
        real _t102E = 0.1e1;
        real _t102F = 0.e0;
        vec2 _t1030 = [_t102E, _t102F];
        vec2[3] _t1031 = {_t102A, _t102D, _t1030};
        real _t1032 = _t09E9[1];
        int _t1033 = prim $r2i01B7 (_t1032);
        int[2] _t1034 = func nextCell40536 (_t1033, _t09B7, _t09B6);
        int _t1035 = 1;
        int _t1036 = prim $sub01C0<int; %2> (_t1034, _t1035);
        vec2 _t1037 = prim $sub01C0<vec2; %3> (_t1031, _t1036);
        real _t1038 = _t09E9[0];
        vec2 _t1039 = prim *0036<$[2]> (_t1038, _t09CF);
        vec2 _t103A = prim +0017<$[2]> (_t1039, _t09B8);
        real _t103B = _t103A[0];
        real _t103C = _t09E9[0];
        vec2 _t103D = prim *0036<$[2]> (_t103C, _t09CF);
        vec2 _t103E = prim +0017<$[2]> (_t103D, _t09B8);
        real _t103F = _t103E[1];
        real[2] _t1040 = {_t103B, _t103F};
        int _t1041 = 1;
        int _t1042 = 1;
        int _t1043 = 0;
        int[3] _t1044 = {_t1041, _t1042, _t1043};
        real _t1045 = _t09E9[1];
        int _t1046 = prim $r2i01B7 (_t1045);
        int _t1047 = prim $sub01C0<int; %3> (_t1044, _t1046);
        real _t1048 = prim $sub01C0<real; %2> (_t1040, _t1047);
        real _t1049 = 0.1e1;
        real _t104A = 0.e0;
        real[2] _t104B = {_t1049, _t104A};
        real _t104C = 0.e0;
        real _t104D = 0.e0;
        real[2] _t104E = {_t104C, _t104D};
        real _t104F = 0.e0;
        real _t1050 = 0.e0;
        real[2] _t1051 = {_t104F, _t1050};
        real[2][3] _t1052 = {_t104B, _t104E, _t1051};
        real _t1053 = _t09E9[1];
        int _t1054 = prim $r2i01B7 (_t1053);
        real[2] _t1055 = prim $sub01C0<real[2]; %3> (_t1052, _t1054);
        int _t1056 = 1;
        int _t1057 = 1;
        int _t1058 = 0;
        int[3] _t1059 = {_t1056, _t1057, _t1058};
        real _t105A = _t09E9[1];
        int _t105B = prim $r2i01B7 (_t105A);
        int _t105C = prim $sub01C0<int; %3> (_t1059, _t105B);
        real _t105D = prim $sub01C0<real; %2> (_t1055, _t105C);
        real _t105E = prim -0026<$[]> (_t1048, _t105D);
        real _t105F = -0.1e1;
        real _t1060 = 0.1e1;
        real[2] _t1061 = {_t105F, _t1060};
        real _t1062 = 0.e0;
        real _t1063 = 0.1e1;
        real[2] _t1064 = {_t1062, _t1063};
        real _t1065 = 0.1e1;
        real _t1066 = 0.e0;
        real[2] _t1067 = {_t1065, _t1066};
        real[2][3] _t1068 = {_t1061, _t1064, _t1067};
        real _t1069 = _t09E9[1];
        int _t106A = prim $r2i01B7 (_t1069);
        real[2] _t106B = prim $sub01C0<real[2]; %3> (_t1068, _t106A);
        int _t106C = 1;
        int _t106D = 1;
        int _t106E = 0;
        int[3] _t106F = {_t106C, _t106D, _t106E};
        real _t1070 = _t09E9[1];
        int _t1071 = prim $r2i01B7 (_t1070);
        int _t1072 = prim $sub01C0<int; %3> (_t106F, _t1071);
        real _t1073 = prim $sub01C0<real; %2> (_t106B, _t1072);
        real _t1074 = prim /0055 (_t105E, _t1073);
        vec2 _t1075 = prim *0038<$[2]> (_t1037, _t1074);
        vec2 _t1076 = prim +0017<$[2]> (_t1027, _t1075);
        real _t1077 = _t09E9[1];
        int _t1078 = prim $r2i01B7 (_t1077);
        int[2] _t1079 = func nextCell40536 (_t1078, _t09B7, _t09B6);
        int _t107A = 1;
        int _t107B = prim $sub01C0<int; %2> (_t1079, _t107A);
        Femdata: MeshPos _t107C = extractFemItemN((_t09B6, _t1017, _t1076, _t107B),RefBuild(Mesh),);
        posp09EA = _t107C;
      } else {
        real _t107D = _t09E9[0];
        vec2 _t107E = prim *0036<$[2]> (_t107D, _t09CF);
        vec2 _t107F = prim +0017<$[2]> (_t107E, _t09B8);
        Femdata: MeshPos _t1080 = extractFemItemN((_t09B6, _t107F),InvalidBuildBoundary(MeshPos),);
        posp09EA = _t1080;
      }
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11;
          int _t1009 = extractFemItem(CellIndex(Mesh), int, _t0A0D);
          int _t100A = extractFemItem(CellIndex(Mesh), int, _t0A10);
          bool _t100B = prim !=0086 (_t1009, _t100A);
          _t0A11 = _t100B;
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19;
      vec2 _t1003 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      int _t1004 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: Mesh _t1005 = extractFem(pos0854, Mesh);
      vec2 _t1006;
      field(2)[2] _t1007 = femField(_t1005,_t1004,field(2)[2],Transform,);
      vec2 _t1008 = prim @00A5<#∞; %2; $[2]> (_t1007, _t1003);
      _t1006 = _t1008;
      _t0A19 = _t1006;
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui0810, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi0811, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E;
        real time0E92 = +inf;
        int face0E93 = -1;
        real _t0E95 = 0.1e1;
        real _t0E96 = 0.e0;
        vec2 _t0E97 = [_t0E95, _t0E96];
        vec2 _t0E98 = prim -0026<$[2]> (_t0E97, _t0882);
        real _t0E99 = -0.1e1;
        real _t0E9A = 0.1e1;
        vec2 _t0E9B = [_t0E99, _t0E9A];
        real _t0E9C = -0.1e1;
        real _t0E9D = 0.1e1;
        vec2 _t0E9E = [_t0E9C, _t0E9D];
        real _t0E9F = prim ×00BD (_t088D, _t0E9E);
        vec2 _t0EA0 = prim /0057<$[2]> (_t0E9B, _t0E9F);
        real _t0EA1 = prim ×00BD (_t0E98, _t0EA0);
        real _t0EA2 = -0.1e-15;
        bool _t0EA3 = prim >=007E (_t0EA1, _t0EA2);
        real _t0EA4 = 0.1e1;
        real _t0EA5 = 0.e0;
        vec2 _t0EA6 = [_t0EA4, _t0EA5];
        vec2 _t0EA7 = prim -0026<$[2]> (_t0EA6, _t0882);
        real _t0EA8 = -0.1e1;
        real _t0EA9 = 0.1e1;
        vec2 _t0EAA = [_t0EA8, _t0EA9];
        real _t0EAB = -0.1e1;
        real _t0EAC = 0.1e1;
        vec2 _t0EAD = [_t0EAB, _t0EAC];
        real _t0EAE = prim ×00BD (_t088D, _t0EAD);
        vec2 _t0EAF = prim /0057<$[2]> (_t0EAA, _t0EAE);
        real _t0EB0 = prim ×00BD (_t0EA7, _t0EAF);
        bool _t0EB1 = prim >0080 (time0E92, _t0EB0);
        real _t0EB2 = -0.1e1;
        real _t0EB3 = 0.1e1;
        vec2 _t0EB4 = [_t0EB2, _t0EB3];
        real _t0EB5 = prim ×00BD (_t088D, _t0EB4);
        real _t0EB6 = prim |()|00B5<$[]> (_t0EB5);
        real _t0EB7 = 0.1e-20;
        bool _t0EB8 = prim >=007E (_t0EB6, _t0EB7);
        bool _t0EB9 = prim $and01C4 (_t0EB1, _t0EB8);
        bool _t0EBA = prim $and01C4 (_t0EA3, _t0EB9);
        if _t0EBA {
          real _t0EBB = 0.1e1;
          real _t0EBC = 0.1e-8;
          real _t0EBD = prim +0017<$[]> (_t0EBB, _t0EBC);
          real _t0EBE = 0.1e1;
          real _t0EBF = 0.1e1;
          vec2 _t0EC0 = [_t0EBE, _t0EBF];
          real _t0EC1 = 0.1e1;
          real _t0EC2 = 0.e0;
          vec2 _t0EC3 = [_t0EC1, _t0EC2];
          vec2 _t0EC4 = prim -0026<$[2]> (_t0EC3, _t0882);
          real _t0EC5 = -0.1e1;
          real _t0EC6 = 0.1e1;
          vec2 _t0EC7 = [_t0EC5, _t0EC6];
          real _t0EC8 = -0.1e1;
          real _t0EC9 = 0.1e1;
          vec2 _t0ECA = [_t0EC8, _t0EC9];
          real _t0ECB = prim ×00BD (_t088D, _t0ECA);
          vec2 _t0ECC = prim /0057<$[2]> (_t0EC7, _t0ECB);
          real _t0ECD = prim ×00BD (_t0EC4, _t0ECC);
          vec2 _t0ECE = prim *0038<$[2]> (_t088D, _t0ECD);
          vec2 _t0ECF = prim +0017<$[2]> (_t0882, _t0ECE);
          real _t0ED0 = prim •00CE<$[2]; $[2]; $[]> (_t0EC0, _t0ECF);
          bool _t0ED1 = prim >0080 (_t0EBD, _t0ED0);
          real _t0ED2 = 0.1e-8;
          real _t0ED3 = 0.1e-8;
          vec2 _t0ED4 = [_t0ED2, _t0ED3];
          real _t0ED5 = 0.1e1;
          real _t0ED6 = 0.e0;
          vec2 _t0ED7 = [_t0ED5, _t0ED6];
          vec2 _t0ED8 = prim -0026<$[2]> (_t0ED7, _t0882);
          real _t0ED9 = -0.1e1;
          real _t0EDA = 0.1e1;
          vec2 _t0EDB = [_t0ED9, _t0EDA];
          real _t0EDC = -0.1e1;
          real _t0EDD = 0.1e1;
          vec2 _t0EDE = [_t0EDC, _t0EDD];
          real _t0EDF = prim ×00BD (_t088D, _t0EDE);
          vec2 _t0EE0 = prim /0057<$[2]> (_t0EDB, _t0EDF);
          real _t0EE1 = prim ×00BD (_t0ED8, _t0EE0);
          vec2 _t0EE2 = prim *0038<$[2]> (_t088D, _t0EE1);
          vec2 _t0EE3 = prim +0017<$[2]> (_t0882, _t0EE2);
          vec2 _t0EE4 = prim +0017<$[2]> (_t0ED4, _t0EE3);
          real _t0EE5 = _t0EE4[0];
          real _t0EE6 = -0.e0;
          bool _t0EE7 = prim >0080 (_t0EE5, _t0EE6);
          real _t0EE8 = 0.1e-8;
          real _t0EE9 = 0.1e-8;
          vec2 _t0EEA = [_t0EE8, _t0EE9];
          real _t0EEB = 0.1e1;
          real _t0EEC = 0.e0;
          vec2 _t0EED = [_t0EEB, _t0EEC];
          vec2 _t0EEE = prim -0026<$[2]> (_t0EED, _t0882);
          real _t0EEF = -0.1e1;
          real _t0EF0 = 0.1e1;
          vec2 _t0EF1 = [_t0EEF, _t0EF0];
          real _t0EF2 = -0.1e1;
          real _t0EF3 = 0.1e1;
          vec2 _t0EF4 = [_t0EF2, _t0EF3];
          real _t0EF5 = prim ×00BD (_t088D, _t0EF4);
          vec2 _t0EF6 = prim /0057<$[2]> (_t0EF1, _t0EF5);
          real _t0EF7 = prim ×00BD (_t0EEE, _t0EF6);
          vec2 _t0EF8 = prim *0038<$[2]> (_t088D, _t0EF7);
          vec2 _t0EF9 = prim +0017<$[2]> (_t0882, _t0EF8);
          vec2 _t0EFA = prim +0017<$[2]> (_t0EEA, _t0EF9);
          real _t0EFB = _t0EFA[1];
          real _t0EFC = -0.e0;
          bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
          bool _t0EFE = prim $and01C4 (_t0EE7, _t0EFD);
          bool _t0EFF = prim $and01C4 (_t0ED1, _t0EFE);
          if _t0EFF {
            real _t0F00 = 0.1e1;
            real _t0F01 = 0.e0;
            vec2 _t0F02 = [_t0F00, _t0F01];
            vec2 _t0F03 = prim -0026<$[2]> (_t0F02, _t0882);
            real _t0F04 = -0.1e1;
            real _t0F05 = 0.1e1;
            vec2 _t0F06 = [_t0F04, _t0F05];
            real _t0F07 = -0.1e1;
            real _t0F08 = 0.1e1;
            vec2 _t0F09 = [_t0F07, _t0F08];
            real _t0F0A = prim ×00BD (_t088D, _t0F09);
            vec2 _t0F0B = prim /0057<$[2]> (_t0F06, _t0F0A);
            time0E92 = prim ×00BD (_t0F03, _t0F0B);
            face0E93 = 0;
          }
        }
        real _t0F0C = 0.e0;
        real _t0F0D = 0.e0;
        vec2 _t0F0E = [_t0F0C, _t0F0D];
        vec2 _t0F0F = prim -0026<$[2]> (_t0F0E, _t0882);
        real _t0F10 = 0.e0;
        real _t0F11 = 0.1e1;
        vec2 _t0F12 = [_t0F10, _t0F11];
        real _t0F13 = 0.e0;
        real _t0F14 = 0.1e1;
        vec2 _t0F15 = [_t0F13, _t0F14];
        real _t0F16 = prim ×00BD (_t088D, _t0F15);
        vec2 _t0F17 = prim /0057<$[2]> (_t0F12, _t0F16);
        real _t0F18 = prim ×00BD (_t0F0F, _t0F17);
        real _t0F19 = -0.1e-15;
        bool _t0F1A = prim >=007E (_t0F18, _t0F19);
        real _t0F1B = 0.e0;
        real _t0F1C = 0.e0;
        vec2 _t0F1D = [_t0F1B, _t0F1C];
        vec2 _t0F1E = prim -0026<$[2]> (_t0F1D, _t0882);
        real _t0F1F = 0.e0;
        real _t0F20 = 0.1e1;
        vec2 _t0F21 = [_t0F1F, _t0F20];
        real _t0F22 = 0.e0;
        real _t0F23 = 0.1e1;
        vec2 _t0F24 = [_t0F22, _t0F23];
        real _t0F25 = prim ×00BD (_t088D, _t0F24);
        vec2 _t0F26 = prim /0057<$[2]> (_t0F21, _t0F25);
        real _t0F27 = prim ×00BD (_t0F1E, _t0F26);
        bool _t0F28 = prim >0080 (time0E92, _t0F27);
        real _t0F29 = 0.e0;
        real _t0F2A = 0.1e1;
        vec2 _t0F2B = [_t0F29, _t0F2A];
        real _t0F2C = prim ×00BD (_t088D, _t0F2B);
        real _t0F2D = prim |()|00B5<$[]> (_t0F2C);
        real _t0F2E = 0.1e-20;
        bool _t0F2F = prim >=007E (_t0F2D, _t0F2E);
        bool _t0F30 = prim $and01C4 (_t0F28, _t0F2F);
        bool _t0F31 = prim $and01C4 (_t0F1A, _t0F30);
        if _t0F31 {
          real _t0F32 = 0.1e1;
          real _t0F33 = 0.1e-8;
          real _t0F34 = prim +0017<$[]> (_t0F32, _t0F33);
          real _t0F35 = 0.1e1;
          real _t0F36 = 0.1e1;
          vec2 _t0F37 = [_t0F35, _t0F36];
          real _t0F38 = 0.e0;
          real _t0F39 = 0.e0;
          vec2 _t0F3A = [_t0F38, _t0F39];
          vec2 _t0F3B = prim -0026<$[2]> (_t0F3A, _t0882);
          real _t0F3C = 0.e0;
          real _t0F3D = 0.1e1;
          vec2 _t0F3E = [_t0F3C, _t0F3D];
          real _t0F3F = 0.e0;
          real _t0F40 = 0.1e1;
          vec2 _t0F41 = [_t0F3F, _t0F40];
          real _t0F42 = prim ×00BD (_t088D, _t0F41);
          vec2 _t0F43 = prim /0057<$[2]> (_t0F3E, _t0F42);
          real _t0F44 = prim ×00BD (_t0F3B, _t0F43);
          vec2 _t0F45 = prim *0038<$[2]> (_t088D, _t0F44);
          vec2 _t0F46 = prim +0017<$[2]> (_t0882, _t0F45);
          real _t0F47 = prim •00CE<$[2]; $[2]; $[]> (_t0F37, _t0F46);
          bool _t0F48 = prim >0080 (_t0F34, _t0F47);
          real _t0F49 = 0.1e-8;
          real _t0F4A = 0.1e-8;
          vec2 _t0F4B = [_t0F49, _t0F4A];
          real _t0F4C = 0.e0;
          real _t0F4D = 0.e0;
          vec2 _t0F4E = [_t0F4C, _t0F4D];
          vec2 _t0F4F = prim -0026<$[2]> (_t0F4E, _t0882);
          real _t0F50 = 0.e0;
          real _t0F51 = 0.1e1;
          vec2 _t0F52 = [_t0F50, _t0F51];
          real _t0F53 = 0.e0;
          real _t0F54 = 0.1e1;
          vec2 _t0F55 = [_t0F53, _t0F54];
          real _t0F56 = prim ×00BD (_t088D, _t0F55);
          vec2 _t0F57 = prim /0057<$[2]> (_t0F52, _t0F56);
          real _t0F58 = prim ×00BD (_t0F4F, _t0F57);
          vec2 _t0F59 = prim *0038<$[2]> (_t088D, _t0F58);
          vec2 _t0F5A = prim +0017<$[2]> (_t0882, _t0F59);
          vec2 _t0F5B = prim +0017<$[2]> (_t0F4B, _t0F5A);
          real _t0F5C = _t0F5B[0];
          real _t0F5D = -0.e0;
          bool _t0F5E = prim >0080 (_t0F5C, _t0F5D);
          real _t0F5F = 0.1e-8;
          real _t0F60 = 0.1e-8;
          vec2 _t0F61 = [_t0F5F, _t0F60];
          real _t0F62 = 0.e0;
          real _t0F63 = 0.e0;
          vec2 _t0F64 = [_t0F62, _t0F63];
          vec2 _t0F65 = prim -0026<$[2]> (_t0F64, _t0882);
          real _t0F66 = 0.e0;
          real _t0F67 = 0.1e1;
          vec2 _t0F68 = [_t0F66, _t0F67];
          real _t0F69 = 0.e0;
          real _t0F6A = 0.1e1;
          vec2 _t0F6B = [_t0F69, _t0F6A];
          real _t0F6C = prim ×00BD (_t088D, _t0F6B);
          vec2 _t0F6D = prim /0057<$[2]> (_t0F68, _t0F6C);
          real _t0F6E = prim ×00BD (_t0F65, _t0F6D);
          vec2 _t0F6F = prim *0038<$[2]> (_t088D, _t0F6E);
          vec2 _t0F70 = prim +0017<$[2]> (_t0882, _t0F6F);
          vec2 _t0F71 = prim +0017<$[2]> (_t0F61, _t0F70);
          real _t0F72 = _t0F71[1];
          real _t0F73 = -0.e0;
          bool _t0F74 = prim >0080 (_t0F72, _t0F73);
          bool _t0F75 = prim $and01C4 (_t0F5E, _t0F74);
          bool _t0F76 = prim $and01C4 (_t0F48, _t0F75);
          if _t0F76 {
            real _t0F77 = 0.e0;
            real _t0F78 = 0.e0;
            vec2 _t0F79 = [_t0F77, _t0F78];
            vec2 _t0F7A = prim -0026<$[2]> (_t0F79, _t0882);
            real _t0F7B = 0.e0;
            real _t0F7C = 0.1e1;
            vec2 _t0F7D = [_t0F7B, _t0F7C];
            real _t0F7E = 0.e0;
            real _t0F7F = 0.1e1;
            vec2 _t0F80 = [_t0F7E, _t0F7F];
            real _t0F81 = prim ×00BD (_t088D, _t0F80);
            vec2 _t0F82 = prim /0057<$[2]> (_t0F7D, _t0F81);
            time0E92 = prim ×00BD (_t0F7A, _t0F82);
            face0E93 = 1;
          }
        }
        real _t0F83 = 0.e0;
        real _t0F84 = 0.e0;
        vec2 _t0F85 = [_t0F83, _t0F84];
        vec2 _t0F86 = prim -0026<$[2]> (_t0F85, _t0882);
        real _t0F87 = 0.1e1;
        real _t0F88 = 0.e0;
        vec2 _t0F89 = [_t0F87, _t0F88];
        real _t0F8A = 0.1e1;
        real _t0F8B = 0.e0;
        vec2 _t0F8C = [_t0F8A, _t0F8B];
        real _t0F8D = prim ×00BD (_t088D, _t0F8C);
        vec2 _t0F8E = prim /0057<$[2]> (_t0F89, _t0F8D);
        real _t0F8F = prim ×00BD (_t0F86, _t0F8E);
        real _t0F90 = -0.1e-15;
        bool _t0F91 = prim >=007E (_t0F8F, _t0F90);
        real _t0F92 = 0.e0;
        real _t0F93 = 0.e0;
        vec2 _t0F94 = [_t0F92, _t0F93];
        vec2 _t0F95 = prim -0026<$[2]> (_t0F94, _t0882);
        real _t0F96 = 0.1e1;
        real _t0F97 = 0.e0;
        vec2 _t0F98 = [_t0F96, _t0F97];
        real _t0F99 = 0.1e1;
        real _t0F9A = 0.e0;
        vec2 _t0F9B = [_t0F99, _t0F9A];
        real _t0F9C = prim ×00BD (_t088D, _t0F9B);
        vec2 _t0F9D = prim /0057<$[2]> (_t0F98, _t0F9C);
        real _t0F9E = prim ×00BD (_t0F95, _t0F9D);
        bool _t0F9F = prim >0080 (time0E92, _t0F9E);
        real _t0FA0 = 0.1e1;
        real _t0FA1 = 0.e0;
        vec2 _t0FA2 = [_t0FA0, _t0FA1];
        real _t0FA3 = prim ×00BD (_t088D, _t0FA2);
        real _t0FA4 = prim |()|00B5<$[]> (_t0FA3);
        real _t0FA5 = 0.1e-20;
        bool _t0FA6 = prim >=007E (_t0FA4, _t0FA5);
        bool _t0FA7 = prim $and01C4 (_t0F9F, _t0FA6);
        bool _t0FA8 = prim $and01C4 (_t0F91, _t0FA7);
        if _t0FA8 {
          real _t0FA9 = 0.1e1;
          real _t0FAA = 0.1e-8;
          real _t0FAB = prim +0017<$[]> (_t0FA9, _t0FAA);
          real _t0FAC = 0.1e1;
          real _t0FAD = 0.1e1;
          vec2 _t0FAE = [_t0FAC, _t0FAD];
          real _t0FAF = 0.e0;
          real _t0FB0 = 0.e0;
          vec2 _t0FB1 = [_t0FAF, _t0FB0];
          vec2 _t0FB2 = prim -0026<$[2]> (_t0FB1, _t0882);
          real _t0FB3 = 0.1e1;
          real _t0FB4 = 0.e0;
          vec2 _t0FB5 = [_t0FB3, _t0FB4];
          real _t0FB6 = 0.1e1;
          real _t0FB7 = 0.e0;
          vec2 _t0FB8 = [_t0FB6, _t0FB7];
          real _t0FB9 = prim ×00BD (_t088D, _t0FB8);
          vec2 _t0FBA = prim /0057<$[2]> (_t0FB5, _t0FB9);
          real _t0FBB = prim ×00BD (_t0FB2, _t0FBA);
          vec2 _t0FBC = prim *0038<$[2]> (_t088D, _t0FBB);
          vec2 _t0FBD = prim +0017<$[2]> (_t0882, _t0FBC);
          real _t0FBE = prim •00CE<$[2]; $[2]; $[]> (_t0FAE, _t0FBD);
          bool _t0FBF = prim >0080 (_t0FAB, _t0FBE);
          real _t0FC0 = 0.1e-8;
          real _t0FC1 = 0.1e-8;
          vec2 _t0FC2 = [_t0FC0, _t0FC1];
          real _t0FC3 = 0.e0;
          real _t0FC4 = 0.e0;
          vec2 _t0FC5 = [_t0FC3, _t0FC4];
          vec2 _t0FC6 = prim -0026<$[2]> (_t0FC5, _t0882);
          real _t0FC7 = 0.1e1;
          real _t0FC8 = 0.e0;
          vec2 _t0FC9 = [_t0FC7, _t0FC8];
          real _t0FCA = 0.1e1;
          real _t0FCB = 0.e0;
          vec2 _t0FCC = [_t0FCA, _t0FCB];
          real _t0FCD = prim ×00BD (_t088D, _t0FCC);
          vec2 _t0FCE = prim /0057<$[2]> (_t0FC9, _t0FCD);
          real _t0FCF = prim ×00BD (_t0FC6, _t0FCE);
          vec2 _t0FD0 = prim *0038<$[2]> (_t088D, _t0FCF);
          vec2 _t0FD1 = prim +0017<$[2]> (_t0882, _t0FD0);
          vec2 _t0FD2 = prim +0017<$[2]> (_t0FC2, _t0FD1);
          real _t0FD3 = _t0FD2[0];
          real _t0FD4 = -0.e0;
          bool _t0FD5 = prim >0080 (_t0FD3, _t0FD4);
          real _t0FD6 = 0.1e-8;
          real _t0FD7 = 0.1e-8;
          vec2 _t0FD8 = [_t0FD6, _t0FD7];
          real _t0FD9 = 0.e0;
          real _t0FDA = 0.e0;
          vec2 _t0FDB = [_t0FD9, _t0FDA];
          vec2 _t0FDC = prim -0026<$[2]> (_t0FDB, _t0882);
          real _t0FDD = 0.1e1;
          real _t0FDE = 0.e0;
          vec2 _t0FDF = [_t0FDD, _t0FDE];
          real _t0FE0 = 0.1e1;
          real _t0FE1 = 0.e0;
          vec2 _t0FE2 = [_t0FE0, _t0FE1];
          real _t0FE3 = prim ×00BD (_t088D, _t0FE2);
          vec2 _t0FE4 = prim /0057<$[2]> (_t0FDF, _t0FE3);
          real _t0FE5 = prim ×00BD (_t0FDC, _t0FE4);
          vec2 _t0FE6 = prim *0038<$[2]> (_t088D, _t0FE5);
          vec2 _t0FE7 = prim +0017<$[2]> (_t0882, _t0FE6);
          vec2 _t0FE8 = prim +0017<$[2]> (_t0FD8, _t0FE7);
          real _t0FE9 = _t0FE8[1];
          real _t0FEA = -0.e0;
          bool _t0FEB = prim >0080 (_t0FE9, _t0FEA);
          bool _t0FEC = prim $and01C4 (_t0FD5, _t0FEB);
          bool _t0FED = prim $and01C4 (_t0FBF, _t0FEC);
          if _t0FED {
            real _t0FEE = 0.e0;
            real _t0FEF = 0.e0;
            vec2 _t0FF0 = [_t0FEE, _t0FEF];
            vec2 _t0FF1 = prim -0026<$[2]> (_t0FF0, _t0882);
            real _t0FF2 = 0.1e1;
            real _t0FF3 = 0.e0;
            vec2 _t0FF4 = [_t0FF2, _t0FF3];
            real _t0FF5 = 0.1e1;
            real _t0FF6 = 0.e0;
            vec2 _t0FF7 = [_t0FF5, _t0FF6];
            real _t0FF8 = prim ×00BD (_t088D, _t0FF7);
            vec2 _t0FF9 = prim /0057<$[2]> (_t0FF4, _t0FF8);
            time0E92 = prim ×00BD (_t0FF1, _t0FF9);
            face0E93 = 2;
          }
        }
        int _t0FFA = -1;
        bool _t0FFB = prim !=0086 (face0E93, _t0FFA);
        if _t0FFB {
          real _t0FFC = 0.e0;
          real _t0FFD = prim max0125 (time0E92, _t0FFC);
          real _t0FFE = (real)face0E93;
          vec2 _t0FFF = [_t0FFD, _t0FFE];
          _t088E = _t0FFF;
        } else {
          real _t1000 = -0.1e1;
          real _t1001 = -0.1e1;
          vec2 _t1002 = [_t1000, _t1001];
          _t088E = _t1002;
        }
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2;
          real time0D21 = +inf;
          int face0D22 = -1;
          real _t0D24 = 0.1e1;
          real _t0D25 = 0.e0;
          vec2 _t0D26 = [_t0D24, _t0D25];
          vec2 _t0D27 = prim -0026<$[2]> (_t0D26, _t08C6);
          real _t0D28 = -0.1e1;
          real _t0D29 = 0.1e1;
          vec2 _t0D2A = [_t0D28, _t0D29];
          real _t0D2B = -0.1e1;
          real _t0D2C = 0.1e1;
          vec2 _t0D2D = [_t0D2B, _t0D2C];
          real _t0D2E = prim ×00BD (_t08D1, _t0D2D);
          vec2 _t0D2F = prim /0057<$[2]> (_t0D2A, _t0D2E);
          real _t0D30 = prim ×00BD (_t0D27, _t0D2F);
          real _t0D31 = -0.1e-15;
          bool _t0D32 = prim >=007E (_t0D30, _t0D31);
          real _t0D33 = 0.1e1;
          real _t0D34 = 0.e0;
          vec2 _t0D35 = [_t0D33, _t0D34];
          vec2 _t0D36 = prim -0026<$[2]> (_t0D35, _t08C6);
          real _t0D37 = -0.1e1;
          real _t0D38 = 0.1e1;
          vec2 _t0D39 = [_t0D37, _t0D38];
          real _t0D3A = -0.1e1;
          real _t0D3B = 0.1e1;
          vec2 _t0D3C = [_t0D3A, _t0D3B];
          real _t0D3D = prim ×00BD (_t08D1, _t0D3C);
          vec2 _t0D3E = prim /0057<$[2]> (_t0D39, _t0D3D);
          real _t0D3F = prim ×00BD (_t0D36, _t0D3E);
          bool _t0D40 = prim >0080 (time0D21, _t0D3F);
          real _t0D41 = -0.1e1;
          real _t0D42 = 0.1e1;
          vec2 _t0D43 = [_t0D41, _t0D42];
          real _t0D44 = prim ×00BD (_t08D1, _t0D43);
          real _t0D45 = prim |()|00B5<$[]> (_t0D44);
          real _t0D46 = 0.1e-20;
          bool _t0D47 = prim >=007E (_t0D45, _t0D46);
          bool _t0D48 = prim $and01C4 (_t0D40, _t0D47);
          bool _t0D49 = prim $and01C4 (_t0D32, _t0D48);
          if _t0D49 {
            real _t0D4A = 0.1e1;
            real _t0D4B = 0.1e-8;
            real _t0D4C = prim +0017<$[]> (_t0D4A, _t0D4B);
            real _t0D4D = 0.1e1;
            real _t0D4E = 0.1e1;
            vec2 _t0D4F = [_t0D4D, _t0D4E];
            real _t0D50 = 0.1e1;
            real _t0D51 = 0.e0;
            vec2 _t0D52 = [_t0D50, _t0D51];
            vec2 _t0D53 = prim -0026<$[2]> (_t0D52, _t08C6);
            real _t0D54 = -0.1e1;
            real _t0D55 = 0.1e1;
            vec2 _t0D56 = [_t0D54, _t0D55];
            real _t0D57 = -0.1e1;
            real _t0D58 = 0.1e1;
            vec2 _t0D59 = [_t0D57, _t0D58];
            real _t0D5A = prim ×00BD (_t08D1, _t0D59);
            vec2 _t0D5B = prim /0057<$[2]> (_t0D56, _t0D5A);
            real _t0D5C = prim ×00BD (_t0D53, _t0D5B);
            vec2 _t0D5D = prim *0038<$[2]> (_t08D1, _t0D5C);
            vec2 _t0D5E = prim +0017<$[2]> (_t08C6, _t0D5D);
            real _t0D5F = prim •00CE<$[2]; $[2]; $[]> (_t0D4F, _t0D5E);
            bool _t0D60 = prim >0080 (_t0D4C, _t0D5F);
            real _t0D61 = 0.1e-8;
            real _t0D62 = 0.1e-8;
            vec2 _t0D63 = [_t0D61, _t0D62];
            real _t0D64 = 0.1e1;
            real _t0D65 = 0.e0;
            vec2 _t0D66 = [_t0D64, _t0D65];
            vec2 _t0D67 = prim -0026<$[2]> (_t0D66, _t08C6);
            real _t0D68 = -0.1e1;
            real _t0D69 = 0.1e1;
            vec2 _t0D6A = [_t0D68, _t0D69];
            real _t0D6B = -0.1e1;
            real _t0D6C = 0.1e1;
            vec2 _t0D6D = [_t0D6B, _t0D6C];
            real _t0D6E = prim ×00BD (_t08D1, _t0D6D);
            vec2 _t0D6F = prim /0057<$[2]> (_t0D6A, _t0D6E);
            real _t0D70 = prim ×00BD (_t0D67, _t0D6F);
            vec2 _t0D71 = prim *0038<$[2]> (_t08D1, _t0D70);
            vec2 _t0D72 = prim +0017<$[2]> (_t08C6, _t0D71);
            vec2 _t0D73 = prim +0017<$[2]> (_t0D63, _t0D72);
            real _t0D74 = _t0D73[0];
            real _t0D75 = -0.e0;
            bool _t0D76 = prim >0080 (_t0D74, _t0D75);
            real _t0D77 = 0.1e-8;
            real _t0D78 = 0.1e-8;
            vec2 _t0D79 = [_t0D77, _t0D78];
            real _t0D7A = 0.1e1;
            real _t0D7B = 0.e0;
            vec2 _t0D7C = [_t0D7A, _t0D7B];
            vec2 _t0D7D = prim -0026<$[2]> (_t0D7C, _t08C6);
            real _t0D7E = -0.1e1;
            real _t0D7F = 0.1e1;
            vec2 _t0D80 = [_t0D7E, _t0D7F];
            real _t0D81 = -0.1e1;
            real _t0D82 = 0.1e1;
            vec2 _t0D83 = [_t0D81, _t0D82];
            real _t0D84 = prim ×00BD (_t08D1, _t0D83);
            vec2 _t0D85 = prim /0057<$[2]> (_t0D80, _t0D84);
            real _t0D86 = prim ×00BD (_t0D7D, _t0D85);
            vec2 _t0D87 = prim *0038<$[2]> (_t08D1, _t0D86);
            vec2 _t0D88 = prim +0017<$[2]> (_t08C6, _t0D87);
            vec2 _t0D89 = prim +0017<$[2]> (_t0D79, _t0D88);
            real _t0D8A = _t0D89[1];
            real _t0D8B = -0.e0;
            bool _t0D8C = prim >0080 (_t0D8A, _t0D8B);
            bool _t0D8D = prim $and01C4 (_t0D76, _t0D8C);
            bool _t0D8E = prim $and01C4 (_t0D60, _t0D8D);
            if _t0D8E {
              real _t0D8F = 0.1e1;
              real _t0D90 = 0.e0;
              vec2 _t0D91 = [_t0D8F, _t0D90];
              vec2 _t0D92 = prim -0026<$[2]> (_t0D91, _t08C6);
              real _t0D93 = -0.1e1;
              real _t0D94 = 0.1e1;
              vec2 _t0D95 = [_t0D93, _t0D94];
              real _t0D96 = -0.1e1;
              real _t0D97 = 0.1e1;
              vec2 _t0D98 = [_t0D96, _t0D97];
              real _t0D99 = prim ×00BD (_t08D1, _t0D98);
              vec2 _t0D9A = prim /0057<$[2]> (_t0D95, _t0D99);
              time0D21 = prim ×00BD (_t0D92, _t0D9A);
              face0D22 = 0;
            }
          }
          real _t0D9B = 0.e0;
          real _t0D9C = 0.e0;
          vec2 _t0D9D = [_t0D9B, _t0D9C];
          vec2 _t0D9E = prim -0026<$[2]> (_t0D9D, _t08C6);
          real _t0D9F = 0.e0;
          real _t0DA0 = 0.1e1;
          vec2 _t0DA1 = [_t0D9F, _t0DA0];
          real _t0DA2 = 0.e0;
          real _t0DA3 = 0.1e1;
          vec2 _t0DA4 = [_t0DA2, _t0DA3];
          real _t0DA5 = prim ×00BD (_t08D1, _t0DA4);
          vec2 _t0DA6 = prim /0057<$[2]> (_t0DA1, _t0DA5);
          real _t0DA7 = prim ×00BD (_t0D9E, _t0DA6);
          real _t0DA8 = -0.1e-15;
          bool _t0DA9 = prim >=007E (_t0DA7, _t0DA8);
          real _t0DAA = 0.e0;
          real _t0DAB = 0.e0;
          vec2 _t0DAC = [_t0DAA, _t0DAB];
          vec2 _t0DAD = prim -0026<$[2]> (_t0DAC, _t08C6);
          real _t0DAE = 0.e0;
          real _t0DAF = 0.1e1;
          vec2 _t0DB0 = [_t0DAE, _t0DAF];
          real _t0DB1 = 0.e0;
          real _t0DB2 = 0.1e1;
          vec2 _t0DB3 = [_t0DB1, _t0DB2];
          real _t0DB4 = prim ×00BD (_t08D1, _t0DB3);
          vec2 _t0DB5 = prim /0057<$[2]> (_t0DB0, _t0DB4);
          real _t0DB6 = prim ×00BD (_t0DAD, _t0DB5);
          bool _t0DB7 = prim >0080 (time0D21, _t0DB6);
          real _t0DB8 = 0.e0;
          real _t0DB9 = 0.1e1;
          vec2 _t0DBA = [_t0DB8, _t0DB9];
          real _t0DBB = prim ×00BD (_t08D1, _t0DBA);
          real _t0DBC = prim |()|00B5<$[]> (_t0DBB);
          real _t0DBD = 0.1e-20;
          bool _t0DBE = prim >=007E (_t0DBC, _t0DBD);
          bool _t0DBF = prim $and01C4 (_t0DB7, _t0DBE);
          bool _t0DC0 = prim $and01C4 (_t0DA9, _t0DBF);
          if _t0DC0 {
            real _t0DC1 = 0.1e1;
            real _t0DC2 = 0.1e-8;
            real _t0DC3 = prim +0017<$[]> (_t0DC1, _t0DC2);
            real _t0DC4 = 0.1e1;
            real _t0DC5 = 0.1e1;
            vec2 _t0DC6 = [_t0DC4, _t0DC5];
            real _t0DC7 = 0.e0;
            real _t0DC8 = 0.e0;
            vec2 _t0DC9 = [_t0DC7, _t0DC8];
            vec2 _t0DCA = prim -0026<$[2]> (_t0DC9, _t08C6);
            real _t0DCB = 0.e0;
            real _t0DCC = 0.1e1;
            vec2 _t0DCD = [_t0DCB, _t0DCC];
            real _t0DCE = 0.e0;
            real _t0DCF = 0.1e1;
            vec2 _t0DD0 = [_t0DCE, _t0DCF];
            real _t0DD1 = prim ×00BD (_t08D1, _t0DD0);
            vec2 _t0DD2 = prim /0057<$[2]> (_t0DCD, _t0DD1);
            real _t0DD3 = prim ×00BD (_t0DCA, _t0DD2);
            vec2 _t0DD4 = prim *0038<$[2]> (_t08D1, _t0DD3);
            vec2 _t0DD5 = prim +0017<$[2]> (_t08C6, _t0DD4);
            real _t0DD6 = prim •00CE<$[2]; $[2]; $[]> (_t0DC6, _t0DD5);
            bool _t0DD7 = prim >0080 (_t0DC3, _t0DD6);
            real _t0DD8 = 0.1e-8;
            real _t0DD9 = 0.1e-8;
            vec2 _t0DDA = [_t0DD8, _t0DD9];
            real _t0DDB = 0.e0;
            real _t0DDC = 0.e0;
            vec2 _t0DDD = [_t0DDB, _t0DDC];
            vec2 _t0DDE = prim -0026<$[2]> (_t0DDD, _t08C6);
            real _t0DDF = 0.e0;
            real _t0DE0 = 0.1e1;
            vec2 _t0DE1 = [_t0DDF, _t0DE0];
            real _t0DE2 = 0.e0;
            real _t0DE3 = 0.1e1;
            vec2 _t0DE4 = [_t0DE2, _t0DE3];
            real _t0DE5 = prim ×00BD (_t08D1, _t0DE4);
            vec2 _t0DE6 = prim /0057<$[2]> (_t0DE1, _t0DE5);
            real _t0DE7 = prim ×00BD (_t0DDE, _t0DE6);
            vec2 _t0DE8 = prim *0038<$[2]> (_t08D1, _t0DE7);
            vec2 _t0DE9 = prim +0017<$[2]> (_t08C6, _t0DE8);
            vec2 _t0DEA = prim +0017<$[2]> (_t0DDA, _t0DE9);
            real _t0DEB = _t0DEA[0];
            real _t0DEC = -0.e0;
            bool _t0DED = prim >0080 (_t0DEB, _t0DEC);
            real _t0DEE = 0.1e-8;
            real _t0DEF = 0.1e-8;
            vec2 _t0DF0 = [_t0DEE, _t0DEF];
            real _t0DF1 = 0.e0;
            real _t0DF2 = 0.e0;
            vec2 _t0DF3 = [_t0DF1, _t0DF2];
            vec2 _t0DF4 = prim -0026<$[2]> (_t0DF3, _t08C6);
            real _t0DF5 = 0.e0;
            real _t0DF6 = 0.1e1;
            vec2 _t0DF7 = [_t0DF5, _t0DF6];
            real _t0DF8 = 0.e0;
            real _t0DF9 = 0.1e1;
            vec2 _t0DFA = [_t0DF8, _t0DF9];
            real _t0DFB = prim ×00BD (_t08D1, _t0DFA);
            vec2 _t0DFC = prim /0057<$[2]> (_t0DF7, _t0DFB);
            real _t0DFD = prim ×00BD (_t0DF4, _t0DFC);
            vec2 _t0DFE = prim *0038<$[2]> (_t08D1, _t0DFD);
            vec2 _t0DFF = prim +0017<$[2]> (_t08C6, _t0DFE);
            vec2 _t0E00 = prim +0017<$[2]> (_t0DF0, _t0DFF);
            real _t0E01 = _t0E00[1];
            real _t0E02 = -0.e0;
            bool _t0E03 = prim >0080 (_t0E01, _t0E02);
            bool _t0E04 = prim $and01C4 (_t0DED, _t0E03);
            bool _t0E05 = prim $and01C4 (_t0DD7, _t0E04);
            if _t0E05 {
              real _t0E06 = 0.e0;
              real _t0E07 = 0.e0;
              vec2 _t0E08 = [_t0E06, _t0E07];
              vec2 _t0E09 = prim -0026<$[2]> (_t0E08, _t08C6);
              real _t0E0A = 0.e0;
              real _t0E0B = 0.1e1;
              vec2 _t0E0C = [_t0E0A, _t0E0B];
              real _t0E0D = 0.e0;
              real _t0E0E = 0.1e1;
              vec2 _t0E0F = [_t0E0D, _t0E0E];
              real _t0E10 = prim ×00BD (_t08D1, _t0E0F);
              vec2 _t0E11 = prim /0057<$[2]> (_t0E0C, _t0E10);
              time0D21 = prim ×00BD (_t0E09, _t0E11);
              face0D22 = 1;
            }
          }
          real _t0E12 = 0.e0;
          real _t0E13 = 0.e0;
          vec2 _t0E14 = [_t0E12, _t0E13];
          vec2 _t0E15 = prim -0026<$[2]> (_t0E14, _t08C6);
          real _t0E16 = 0.1e1;
          real _t0E17 = 0.e0;
          vec2 _t0E18 = [_t0E16, _t0E17];
          real _t0E19 = 0.1e1;
          real _t0E1A = 0.e0;
          vec2 _t0E1B = [_t0E19, _t0E1A];
          real _t0E1C = prim ×00BD (_t08D1, _t0E1B);
          vec2 _t0E1D = prim /0057<$[2]> (_t0E18, _t0E1C);
          real _t0E1E = prim ×00BD (_t0E15, _t0E1D);
          real _t0E1F = -0.1e-15;
          bool _t0E20 = prim >=007E (_t0E1E, _t0E1F);
          real _t0E21 = 0.e0;
          real _t0E22 = 0.e0;
          vec2 _t0E23 = [_t0E21, _t0E22];
          vec2 _t0E24 = prim -0026<$[2]> (_t0E23, _t08C6);
          real _t0E25 = 0.1e1;
          real _t0E26 = 0.e0;
          vec2 _t0E27 = [_t0E25, _t0E26];
          real _t0E28 = 0.1e1;
          real _t0E29 = 0.e0;
          vec2 _t0E2A = [_t0E28, _t0E29];
          real _t0E2B = prim ×00BD (_t08D1, _t0E2A);
          vec2 _t0E2C = prim /0057<$[2]> (_t0E27, _t0E2B);
          real _t0E2D = prim ×00BD (_t0E24, _t0E2C);
          bool _t0E2E = prim >0080 (time0D21, _t0E2D);
          real _t0E2F = 0.1e1;
          real _t0E30 = 0.e0;
          vec2 _t0E31 = [_t0E2F, _t0E30];
          real _t0E32 = prim ×00BD (_t08D1, _t0E31);
          real _t0E33 = prim |()|00B5<$[]> (_t0E32);
          real _t0E34 = 0.1e-20;
          bool _t0E35 = prim >=007E (_t0E33, _t0E34);
          bool _t0E36 = prim $and01C4 (_t0E2E, _t0E35);
          bool _t0E37 = prim $and01C4 (_t0E20, _t0E36);
          if _t0E37 {
            real _t0E38 = 0.1e1;
            real _t0E39 = 0.1e-8;
            real _t0E3A = prim +0017<$[]> (_t0E38, _t0E39);
            real _t0E3B = 0.1e1;
            real _t0E3C = 0.1e1;
            vec2 _t0E3D = [_t0E3B, _t0E3C];
            real _t0E3E = 0.e0;
            real _t0E3F = 0.e0;
            vec2 _t0E40 = [_t0E3E, _t0E3F];
            vec2 _t0E41 = prim -0026<$[2]> (_t0E40, _t08C6);
            real _t0E42 = 0.1e1;
            real _t0E43 = 0.e0;
            vec2 _t0E44 = [_t0E42, _t0E43];
            real _t0E45 = 0.1e1;
            real _t0E46 = 0.e0;
            vec2 _t0E47 = [_t0E45, _t0E46];
            real _t0E48 = prim ×00BD (_t08D1, _t0E47);
            vec2 _t0E49 = prim /0057<$[2]> (_t0E44, _t0E48);
            real _t0E4A = prim ×00BD (_t0E41, _t0E49);
            vec2 _t0E4B = prim *0038<$[2]> (_t08D1, _t0E4A);
            vec2 _t0E4C = prim +0017<$[2]> (_t08C6, _t0E4B);
            real _t0E4D = prim •00CE<$[2]; $[2]; $[]> (_t0E3D, _t0E4C);
            bool _t0E4E = prim >0080 (_t0E3A, _t0E4D);
            real _t0E4F = 0.1e-8;
            real _t0E50 = 0.1e-8;
            vec2 _t0E51 = [_t0E4F, _t0E50];
            real _t0E52 = 0.e0;
            real _t0E53 = 0.e0;
            vec2 _t0E54 = [_t0E52, _t0E53];
            vec2 _t0E55 = prim -0026<$[2]> (_t0E54, _t08C6);
            real _t0E56 = 0.1e1;
            real _t0E57 = 0.e0;
            vec2 _t0E58 = [_t0E56, _t0E57];
            real _t0E59 = 0.1e1;
            real _t0E5A = 0.e0;
            vec2 _t0E5B = [_t0E59, _t0E5A];
            real _t0E5C = prim ×00BD (_t08D1, _t0E5B);
            vec2 _t0E5D = prim /0057<$[2]> (_t0E58, _t0E5C);
            real _t0E5E = prim ×00BD (_t0E55, _t0E5D);
            vec2 _t0E5F = prim *0038<$[2]> (_t08D1, _t0E5E);
            vec2 _t0E60 = prim +0017<$[2]> (_t08C6, _t0E5F);
            vec2 _t0E61 = prim +0017<$[2]> (_t0E51, _t0E60);
            real _t0E62 = _t0E61[0];
            real _t0E63 = -0.e0;
            bool _t0E64 = prim >0080 (_t0E62, _t0E63);
            real _t0E65 = 0.1e-8;
            real _t0E66 = 0.1e-8;
            vec2 _t0E67 = [_t0E65, _t0E66];
            real _t0E68 = 0.e0;
            real _t0E69 = 0.e0;
            vec2 _t0E6A = [_t0E68, _t0E69];
            vec2 _t0E6B = prim -0026<$[2]> (_t0E6A, _t08C6);
            real _t0E6C = 0.1e1;
            real _t0E6D = 0.e0;
            vec2 _t0E6E = [_t0E6C, _t0E6D];
            real _t0E6F = 0.1e1;
            real _t0E70 = 0.e0;
            vec2 _t0E71 = [_t0E6F, _t0E70];
            real _t0E72 = prim ×00BD (_t08D1, _t0E71);
            vec2 _t0E73 = prim /0057<$[2]> (_t0E6E, _t0E72);
            real _t0E74 = prim ×00BD (_t0E6B, _t0E73);
            vec2 _t0E75 = prim *0038<$[2]> (_t08D1, _t0E74);
            vec2 _t0E76 = prim +0017<$[2]> (_t08C6, _t0E75);
            vec2 _t0E77 = prim +0017<$[2]> (_t0E67, _t0E76);
            real _t0E78 = _t0E77[1];
            real _t0E79 = -0.e0;
            bool _t0E7A = prim >0080 (_t0E78, _t0E79);
            bool _t0E7B = prim $and01C4 (_t0E64, _t0E7A);
            bool _t0E7C = prim $and01C4 (_t0E4E, _t0E7B);
            if _t0E7C {
              real _t0E7D = 0.e0;
              real _t0E7E = 0.e0;
              vec2 _t0E7F = [_t0E7D, _t0E7E];
              vec2 _t0E80 = prim -0026<$[2]> (_t0E7F, _t08C6);
              real _t0E81 = 0.1e1;
              real _t0E82 = 0.e0;
              vec2 _t0E83 = [_t0E81, _t0E82];
              real _t0E84 = 0.1e1;
              real _t0E85 = 0.e0;
              vec2 _t0E86 = [_t0E84, _t0E85];
              real _t0E87 = prim ×00BD (_t08D1, _t0E86);
              vec2 _t0E88 = prim /0057<$[2]> (_t0E83, _t0E87);
              time0D21 = prim ×00BD (_t0E80, _t0E88);
              face0D22 = 2;
            }
          }
          int _t0E89 = -1;
          bool _t0E8A = prim !=0086 (face0D22, _t0E89);
          if _t0E8A {
            real _t0E8B = 0.e0;
            real _t0E8C = prim max0125 (time0D21, _t0E8B);
            real _t0E8D = (real)face0D22;
            vec2 _t0E8E = [_t0E8C, _t0E8D];
            _t08D2 = _t0E8E;
          } else {
            real _t0E8F = -0.1e1;
            real _t0E90 = -0.1e1;
            vec2 _t0E91 = [_t0E8F, _t0E90];
            _t08D2 = _t0E91;
          }
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5;
          real time0BB0 = +inf;
          int face0BB1 = -1;
          real _t0BB3 = 0.1e1;
          real _t0BB4 = 0.e0;
          vec2 _t0BB5 = [_t0BB3, _t0BB4];
          vec2 _t0BB6 = prim -0026<$[2]> (_t0BB5, _t08E9);
          real _t0BB7 = -0.1e1;
          real _t0BB8 = 0.1e1;
          vec2 _t0BB9 = [_t0BB7, _t0BB8];
          real _t0BBA = -0.1e1;
          real _t0BBB = 0.1e1;
          vec2 _t0BBC = [_t0BBA, _t0BBB];
          real _t0BBD = prim ×00BD (_t08F4, _t0BBC);
          vec2 _t0BBE = prim /0057<$[2]> (_t0BB9, _t0BBD);
          real _t0BBF = prim ×00BD (_t0BB6, _t0BBE);
          real _t0BC0 = -0.1e-15;
          bool _t0BC1 = prim >=007E (_t0BBF, _t0BC0);
          real _t0BC2 = 0.1e1;
          real _t0BC3 = 0.e0;
          vec2 _t0BC4 = [_t0BC2, _t0BC3];
          vec2 _t0BC5 = prim -0026<$[2]> (_t0BC4, _t08E9);
          real _t0BC6 = -0.1e1;
          real _t0BC7 = 0.1e1;
          vec2 _t0BC8 = [_t0BC6, _t0BC7];
          real _t0BC9 = -0.1e1;
          real _t0BCA = 0.1e1;
          vec2 _t0BCB = [_t0BC9, _t0BCA];
          real _t0BCC = prim ×00BD (_t08F4, _t0BCB);
          vec2 _t0BCD = prim /0057<$[2]> (_t0BC8, _t0BCC);
          real _t0BCE = prim ×00BD (_t0BC5, _t0BCD);
          bool _t0BCF = prim >0080 (time0BB0, _t0BCE);
          real _t0BD0 = -0.1e1;
          real _t0BD1 = 0.1e1;
          vec2 _t0BD2 = [_t0BD0, _t0BD1];
          real _t0BD3 = prim ×00BD (_t08F4, _t0BD2);
          real _t0BD4 = prim |()|00B5<$[]> (_t0BD3);
          real _t0BD5 = 0.1e-20;
          bool _t0BD6 = prim >=007E (_t0BD4, _t0BD5);
          bool _t0BD7 = prim $and01C4 (_t0BCF, _t0BD6);
          bool _t0BD8 = prim $and01C4 (_t0BC1, _t0BD7);
          if _t0BD8 {
            real _t0BD9 = 0.1e1;
            real _t0BDA = 0.1e-8;
            real _t0BDB = prim +0017<$[]> (_t0BD9, _t0BDA);
            real _t0BDC = 0.1e1;
            real _t0BDD = 0.1e1;
            vec2 _t0BDE = [_t0BDC, _t0BDD];
            real _t0BDF = 0.1e1;
            real _t0BE0 = 0.e0;
            vec2 _t0BE1 = [_t0BDF, _t0BE0];
            vec2 _t0BE2 = prim -0026<$[2]> (_t0BE1, _t08E9);
            real _t0BE3 = -0.1e1;
            real _t0BE4 = 0.1e1;
            vec2 _t0BE5 = [_t0BE3, _t0BE4];
            real _t0BE6 = -0.1e1;
            real _t0BE7 = 0.1e1;
            vec2 _t0BE8 = [_t0BE6, _t0BE7];
            real _t0BE9 = prim ×00BD (_t08F4, _t0BE8);
            vec2 _t0BEA = prim /0057<$[2]> (_t0BE5, _t0BE9);
            real _t0BEB = prim ×00BD (_t0BE2, _t0BEA);
            vec2 _t0BEC = prim *0038<$[2]> (_t08F4, _t0BEB);
            vec2 _t0BED = prim +0017<$[2]> (_t08E9, _t0BEC);
            real _t0BEE = prim •00CE<$[2]; $[2]; $[]> (_t0BDE, _t0BED);
            bool _t0BEF = prim >0080 (_t0BDB, _t0BEE);
            real _t0BF0 = 0.1e-8;
            real _t0BF1 = 0.1e-8;
            vec2 _t0BF2 = [_t0BF0, _t0BF1];
            real _t0BF3 = 0.1e1;
            real _t0BF4 = 0.e0;
            vec2 _t0BF5 = [_t0BF3, _t0BF4];
            vec2 _t0BF6 = prim -0026<$[2]> (_t0BF5, _t08E9);
            real _t0BF7 = -0.1e1;
            real _t0BF8 = 0.1e1;
            vec2 _t0BF9 = [_t0BF7, _t0BF8];
            real _t0BFA = -0.1e1;
            real _t0BFB = 0.1e1;
            vec2 _t0BFC = [_t0BFA, _t0BFB];
            real _t0BFD = prim ×00BD (_t08F4, _t0BFC);
            vec2 _t0BFE = prim /0057<$[2]> (_t0BF9, _t0BFD);
            real _t0BFF = prim ×00BD (_t0BF6, _t0BFE);
            vec2 _t0C00 = prim *0038<$[2]> (_t08F4, _t0BFF);
            vec2 _t0C01 = prim +0017<$[2]> (_t08E9, _t0C00);
            vec2 _t0C02 = prim +0017<$[2]> (_t0BF2, _t0C01);
            real _t0C03 = _t0C02[0];
            real _t0C04 = -0.e0;
            bool _t0C05 = prim >0080 (_t0C03, _t0C04);
            real _t0C06 = 0.1e-8;
            real _t0C07 = 0.1e-8;
            vec2 _t0C08 = [_t0C06, _t0C07];
            real _t0C09 = 0.1e1;
            real _t0C0A = 0.e0;
            vec2 _t0C0B = [_t0C09, _t0C0A];
            vec2 _t0C0C = prim -0026<$[2]> (_t0C0B, _t08E9);
            real _t0C0D = -0.1e1;
            real _t0C0E = 0.1e1;
            vec2 _t0C0F = [_t0C0D, _t0C0E];
            real _t0C10 = -0.1e1;
            real _t0C11 = 0.1e1;
            vec2 _t0C12 = [_t0C10, _t0C11];
            real _t0C13 = prim ×00BD (_t08F4, _t0C12);
            vec2 _t0C14 = prim /0057<$[2]> (_t0C0F, _t0C13);
            real _t0C15 = prim ×00BD (_t0C0C, _t0C14);
            vec2 _t0C16 = prim *0038<$[2]> (_t08F4, _t0C15);
            vec2 _t0C17 = prim +0017<$[2]> (_t08E9, _t0C16);
            vec2 _t0C18 = prim +0017<$[2]> (_t0C08, _t0C17);
            real _t0C19 = _t0C18[1];
            real _t0C1A = -0.e0;
            bool _t0C1B = prim >0080 (_t0C19, _t0C1A);
            bool _t0C1C = prim $and01C4 (_t0C05, _t0C1B);
            bool _t0C1D = prim $and01C4 (_t0BEF, _t0C1C);
            if _t0C1D {
              real _t0C1E = 0.1e1;
              real _t0C1F = 0.e0;
              vec2 _t0C20 = [_t0C1E, _t0C1F];
              vec2 _t0C21 = prim -0026<$[2]> (_t0C20, _t08E9);
              real _t0C22 = -0.1e1;
              real _t0C23 = 0.1e1;
              vec2 _t0C24 = [_t0C22, _t0C23];
              real _t0C25 = -0.1e1;
              real _t0C26 = 0.1e1;
              vec2 _t0C27 = [_t0C25, _t0C26];
              real _t0C28 = prim ×00BD (_t08F4, _t0C27);
              vec2 _t0C29 = prim /0057<$[2]> (_t0C24, _t0C28);
              time0BB0 = prim ×00BD (_t0C21, _t0C29);
              face0BB1 = 0;
            }
          }
          real _t0C2A = 0.e0;
          real _t0C2B = 0.e0;
          vec2 _t0C2C = [_t0C2A, _t0C2B];
          vec2 _t0C2D = prim -0026<$[2]> (_t0C2C, _t08E9);
          real _t0C2E = 0.e0;
          real _t0C2F = 0.1e1;
          vec2 _t0C30 = [_t0C2E, _t0C2F];
          real _t0C31 = 0.e0;
          real _t0C32 = 0.1e1;
          vec2 _t0C33 = [_t0C31, _t0C32];
          real _t0C34 = prim ×00BD (_t08F4, _t0C33);
          vec2 _t0C35 = prim /0057<$[2]> (_t0C30, _t0C34);
          real _t0C36 = prim ×00BD (_t0C2D, _t0C35);
          real _t0C37 = -0.1e-15;
          bool _t0C38 = prim >=007E (_t0C36, _t0C37);
          real _t0C39 = 0.e0;
          real _t0C3A = 0.e0;
          vec2 _t0C3B = [_t0C39, _t0C3A];
          vec2 _t0C3C = prim -0026<$[2]> (_t0C3B, _t08E9);
          real _t0C3D = 0.e0;
          real _t0C3E = 0.1e1;
          vec2 _t0C3F = [_t0C3D, _t0C3E];
          real _t0C40 = 0.e0;
          real _t0C41 = 0.1e1;
          vec2 _t0C42 = [_t0C40, _t0C41];
          real _t0C43 = prim ×00BD (_t08F4, _t0C42);
          vec2 _t0C44 = prim /0057<$[2]> (_t0C3F, _t0C43);
          real _t0C45 = prim ×00BD (_t0C3C, _t0C44);
          bool _t0C46 = prim >0080 (time0BB0, _t0C45);
          real _t0C47 = 0.e0;
          real _t0C48 = 0.1e1;
          vec2 _t0C49 = [_t0C47, _t0C48];
          real _t0C4A = prim ×00BD (_t08F4, _t0C49);
          real _t0C4B = prim |()|00B5<$[]> (_t0C4A);
          real _t0C4C = 0.1e-20;
          bool _t0C4D = prim >=007E (_t0C4B, _t0C4C);
          bool _t0C4E = prim $and01C4 (_t0C46, _t0C4D);
          bool _t0C4F = prim $and01C4 (_t0C38, _t0C4E);
          if _t0C4F {
            real _t0C50 = 0.1e1;
            real _t0C51 = 0.1e-8;
            real _t0C52 = prim +0017<$[]> (_t0C50, _t0C51);
            real _t0C53 = 0.1e1;
            real _t0C54 = 0.1e1;
            vec2 _t0C55 = [_t0C53, _t0C54];
            real _t0C56 = 0.e0;
            real _t0C57 = 0.e0;
            vec2 _t0C58 = [_t0C56, _t0C57];
            vec2 _t0C59 = prim -0026<$[2]> (_t0C58, _t08E9);
            real _t0C5A = 0.e0;
            real _t0C5B = 0.1e1;
            vec2 _t0C5C = [_t0C5A, _t0C5B];
            real _t0C5D = 0.e0;
            real _t0C5E = 0.1e1;
            vec2 _t0C5F = [_t0C5D, _t0C5E];
            real _t0C60 = prim ×00BD (_t08F4, _t0C5F);
            vec2 _t0C61 = prim /0057<$[2]> (_t0C5C, _t0C60);
            real _t0C62 = prim ×00BD (_t0C59, _t0C61);
            vec2 _t0C63 = prim *0038<$[2]> (_t08F4, _t0C62);
            vec2 _t0C64 = prim +0017<$[2]> (_t08E9, _t0C63);
            real _t0C65 = prim •00CE<$[2]; $[2]; $[]> (_t0C55, _t0C64);
            bool _t0C66 = prim >0080 (_t0C52, _t0C65);
            real _t0C67 = 0.1e-8;
            real _t0C68 = 0.1e-8;
            vec2 _t0C69 = [_t0C67, _t0C68];
            real _t0C6A = 0.e0;
            real _t0C6B = 0.e0;
            vec2 _t0C6C = [_t0C6A, _t0C6B];
            vec2 _t0C6D = prim -0026<$[2]> (_t0C6C, _t08E9);
            real _t0C6E = 0.e0;
            real _t0C6F = 0.1e1;
            vec2 _t0C70 = [_t0C6E, _t0C6F];
            real _t0C71 = 0.e0;
            real _t0C72 = 0.1e1;
            vec2 _t0C73 = [_t0C71, _t0C72];
            real _t0C74 = prim ×00BD (_t08F4, _t0C73);
            vec2 _t0C75 = prim /0057<$[2]> (_t0C70, _t0C74);
            real _t0C76 = prim ×00BD (_t0C6D, _t0C75);
            vec2 _t0C77 = prim *0038<$[2]> (_t08F4, _t0C76);
            vec2 _t0C78 = prim +0017<$[2]> (_t08E9, _t0C77);
            vec2 _t0C79 = prim +0017<$[2]> (_t0C69, _t0C78);
            real _t0C7A = _t0C79[0];
            real _t0C7B = -0.e0;
            bool _t0C7C = prim >0080 (_t0C7A, _t0C7B);
            real _t0C7D = 0.1e-8;
            real _t0C7E = 0.1e-8;
            vec2 _t0C7F = [_t0C7D, _t0C7E];
            real _t0C80 = 0.e0;
            real _t0C81 = 0.e0;
            vec2 _t0C82 = [_t0C80, _t0C81];
            vec2 _t0C83 = prim -0026<$[2]> (_t0C82, _t08E9);
            real _t0C84 = 0.e0;
            real _t0C85 = 0.1e1;
            vec2 _t0C86 = [_t0C84, _t0C85];
            real _t0C87 = 0.e0;
            real _t0C88 = 0.1e1;
            vec2 _t0C89 = [_t0C87, _t0C88];
            real _t0C8A = prim ×00BD (_t08F4, _t0C89);
            vec2 _t0C8B = prim /0057<$[2]> (_t0C86, _t0C8A);
            real _t0C8C = prim ×00BD (_t0C83, _t0C8B);
            vec2 _t0C8D = prim *0038<$[2]> (_t08F4, _t0C8C);
            vec2 _t0C8E = prim +0017<$[2]> (_t08E9, _t0C8D);
            vec2 _t0C8F = prim +0017<$[2]> (_t0C7F, _t0C8E);
            real _t0C90 = _t0C8F[1];
            real _t0C91 = -0.e0;
            bool _t0C92 = prim >0080 (_t0C90, _t0C91);
            bool _t0C93 = prim $and01C4 (_t0C7C, _t0C92);
            bool _t0C94 = prim $and01C4 (_t0C66, _t0C93);
            if _t0C94 {
              real _t0C95 = 0.e0;
              real _t0C96 = 0.e0;
              vec2 _t0C97 = [_t0C95, _t0C96];
              vec2 _t0C98 = prim -0026<$[2]> (_t0C97, _t08E9);
              real _t0C99 = 0.e0;
              real _t0C9A = 0.1e1;
              vec2 _t0C9B = [_t0C99, _t0C9A];
              real _t0C9C = 0.e0;
              real _t0C9D = 0.1e1;
              vec2 _t0C9E = [_t0C9C, _t0C9D];
              real _t0C9F = prim ×00BD (_t08F4, _t0C9E);
              vec2 _t0CA0 = prim /0057<$[2]> (_t0C9B, _t0C9F);
              time0BB0 = prim ×00BD (_t0C98, _t0CA0);
              face0BB1 = 1;
            }
          }
          real _t0CA1 = 0.e0;
          real _t0CA2 = 0.e0;
          vec2 _t0CA3 = [_t0CA1, _t0CA2];
          vec2 _t0CA4 = prim -0026<$[2]> (_t0CA3, _t08E9);
          real _t0CA5 = 0.1e1;
          real _t0CA6 = 0.e0;
          vec2 _t0CA7 = [_t0CA5, _t0CA6];
          real _t0CA8 = 0.1e1;
          real _t0CA9 = 0.e0;
          vec2 _t0CAA = [_t0CA8, _t0CA9];
          real _t0CAB = prim ×00BD (_t08F4, _t0CAA);
          vec2 _t0CAC = prim /0057<$[2]> (_t0CA7, _t0CAB);
          real _t0CAD = prim ×00BD (_t0CA4, _t0CAC);
          real _t0CAE = -0.1e-15;
          bool _t0CAF = prim >=007E (_t0CAD, _t0CAE);
          real _t0CB0 = 0.e0;
          real _t0CB1 = 0.e0;
          vec2 _t0CB2 = [_t0CB0, _t0CB1];
          vec2 _t0CB3 = prim -0026<$[2]> (_t0CB2, _t08E9);
          real _t0CB4 = 0.1e1;
          real _t0CB5 = 0.e0;
          vec2 _t0CB6 = [_t0CB4, _t0CB5];
          real _t0CB7 = 0.1e1;
          real _t0CB8 = 0.e0;
          vec2 _t0CB9 = [_t0CB7, _t0CB8];
          real _t0CBA = prim ×00BD (_t08F4, _t0CB9);
          vec2 _t0CBB = prim /0057<$[2]> (_t0CB6, _t0CBA);
          real _t0CBC = prim ×00BD (_t0CB3, _t0CBB);
          bool _t0CBD = prim >0080 (time0BB0, _t0CBC);
          real _t0CBE = 0.1e1;
          real _t0CBF = 0.e0;
          vec2 _t0CC0 = [_t0CBE, _t0CBF];
          real _t0CC1 = prim ×00BD (_t08F4, _t0CC0);
          real _t0CC2 = prim |()|00B5<$[]> (_t0CC1);
          real _t0CC3 = 0.1e-20;
          bool _t0CC4 = prim >=007E (_t0CC2, _t0CC3);
          bool _t0CC5 = prim $and01C4 (_t0CBD, _t0CC4);
          bool _t0CC6 = prim $and01C4 (_t0CAF, _t0CC5);
          if _t0CC6 {
            real _t0CC7 = 0.1e1;
            real _t0CC8 = 0.1e-8;
            real _t0CC9 = prim +0017<$[]> (_t0CC7, _t0CC8);
            real _t0CCA = 0.1e1;
            real _t0CCB = 0.1e1;
            vec2 _t0CCC = [_t0CCA, _t0CCB];
            real _t0CCD = 0.e0;
            real _t0CCE = 0.e0;
            vec2 _t0CCF = [_t0CCD, _t0CCE];
            vec2 _t0CD0 = prim -0026<$[2]> (_t0CCF, _t08E9);
            real _t0CD1 = 0.1e1;
            real _t0CD2 = 0.e0;
            vec2 _t0CD3 = [_t0CD1, _t0CD2];
            real _t0CD4 = 0.1e1;
            real _t0CD5 = 0.e0;
            vec2 _t0CD6 = [_t0CD4, _t0CD5];
            real _t0CD7 = prim ×00BD (_t08F4, _t0CD6);
            vec2 _t0CD8 = prim /0057<$[2]> (_t0CD3, _t0CD7);
            real _t0CD9 = prim ×00BD (_t0CD0, _t0CD8);
            vec2 _t0CDA = prim *0038<$[2]> (_t08F4, _t0CD9);
            vec2 _t0CDB = prim +0017<$[2]> (_t08E9, _t0CDA);
            real _t0CDC = prim •00CE<$[2]; $[2]; $[]> (_t0CCC, _t0CDB);
            bool _t0CDD = prim >0080 (_t0CC9, _t0CDC);
            real _t0CDE = 0.1e-8;
            real _t0CDF = 0.1e-8;
            vec2 _t0CE0 = [_t0CDE, _t0CDF];
            real _t0CE1 = 0.e0;
            real _t0CE2 = 0.e0;
            vec2 _t0CE3 = [_t0CE1, _t0CE2];
            vec2 _t0CE4 = prim -0026<$[2]> (_t0CE3, _t08E9);
            real _t0CE5 = 0.1e1;
            real _t0CE6 = 0.e0;
            vec2 _t0CE7 = [_t0CE5, _t0CE6];
            real _t0CE8 = 0.1e1;
            real _t0CE9 = 0.e0;
            vec2 _t0CEA = [_t0CE8, _t0CE9];
            real _t0CEB = prim ×00BD (_t08F4, _t0CEA);
            vec2 _t0CEC = prim /0057<$[2]> (_t0CE7, _t0CEB);
            real _t0CED = prim ×00BD (_t0CE4, _t0CEC);
            vec2 _t0CEE = prim *0038<$[2]> (_t08F4, _t0CED);
            vec2 _t0CEF = prim +0017<$[2]> (_t08E9, _t0CEE);
            vec2 _t0CF0 = prim +0017<$[2]> (_t0CE0, _t0CEF);
            real _t0CF1 = _t0CF0[0];
            real _t0CF2 = -0.e0;
            bool _t0CF3 = prim >0080 (_t0CF1, _t0CF2);
            real _t0CF4 = 0.1e-8;
            real _t0CF5 = 0.1e-8;
            vec2 _t0CF6 = [_t0CF4, _t0CF5];
            real _t0CF7 = 0.e0;
            real _t0CF8 = 0.e0;
            vec2 _t0CF9 = [_t0CF7, _t0CF8];
            vec2 _t0CFA = prim -0026<$[2]> (_t0CF9, _t08E9);
            real _t0CFB = 0.1e1;
            real _t0CFC = 0.e0;
            vec2 _t0CFD = [_t0CFB, _t0CFC];
            real _t0CFE = 0.1e1;
            real _t0CFF = 0.e0;
            vec2 _t0D00 = [_t0CFE, _t0CFF];
            real _t0D01 = prim ×00BD (_t08F4, _t0D00);
            vec2 _t0D02 = prim /0057<$[2]> (_t0CFD, _t0D01);
            real _t0D03 = prim ×00BD (_t0CFA, _t0D02);
            vec2 _t0D04 = prim *0038<$[2]> (_t08F4, _t0D03);
            vec2 _t0D05 = prim +0017<$[2]> (_t08E9, _t0D04);
            vec2 _t0D06 = prim +0017<$[2]> (_t0CF6, _t0D05);
            real _t0D07 = _t0D06[1];
            real _t0D08 = -0.e0;
            bool _t0D09 = prim >0080 (_t0D07, _t0D08);
            bool _t0D0A = prim $and01C4 (_t0CF3, _t0D09);
            bool _t0D0B = prim $and01C4 (_t0CDD, _t0D0A);
            if _t0D0B {
              real _t0D0C = 0.e0;
              real _t0D0D = 0.e0;
              vec2 _t0D0E = [_t0D0C, _t0D0D];
              vec2 _t0D0F = prim -0026<$[2]> (_t0D0E, _t08E9);
              real _t0D10 = 0.1e1;
              real _t0D11 = 0.e0;
              vec2 _t0D12 = [_t0D10, _t0D11];
              real _t0D13 = 0.1e1;
              real _t0D14 = 0.e0;
              vec2 _t0D15 = [_t0D13, _t0D14];
              real _t0D16 = prim ×00BD (_t08F4, _t0D15);
              vec2 _t0D17 = prim /0057<$[2]> (_t0D12, _t0D16);
              time0BB0 = prim ×00BD (_t0D0F, _t0D17);
              face0BB1 = 2;
            }
          }
          int _t0D18 = -1;
          bool _t0D19 = prim !=0086 (face0BB1, _t0D18);
          if _t0D19 {
            real _t0D1A = 0.e0;
            real _t0D1B = prim max0125 (time0BB0, _t0D1A);
            real _t0D1C = (real)face0BB1;
            vec2 _t0D1D = [_t0D1B, _t0D1C];
            _t08F5 = _t0D1D;
          } else {
            real _t0D1E = -0.1e1;
            real _t0D1F = -0.1e1;
            vec2 _t0D20 = [_t0D1E, _t0D1F];
            _t08F5 = _t0D20;
          }
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918;
          real time0A3F = +inf;
          int face0A40 = -1;
          real _t0A42 = 0.1e1;
          real _t0A43 = 0.e0;
          vec2 _t0A44 = [_t0A42, _t0A43];
          vec2 _t0A45 = prim -0026<$[2]> (_t0A44, _t090C);
          real _t0A46 = -0.1e1;
          real _t0A47 = 0.1e1;
          vec2 _t0A48 = [_t0A46, _t0A47];
          real _t0A49 = -0.1e1;
          real _t0A4A = 0.1e1;
          vec2 _t0A4B = [_t0A49, _t0A4A];
          real _t0A4C = prim ×00BD (_t0917, _t0A4B);
          vec2 _t0A4D = prim /0057<$[2]> (_t0A48, _t0A4C);
          real _t0A4E = prim ×00BD (_t0A45, _t0A4D);
          real _t0A4F = -0.1e-15;
          bool _t0A50 = prim >=007E (_t0A4E, _t0A4F);
          real _t0A51 = 0.1e1;
          real _t0A52 = 0.e0;
          vec2 _t0A53 = [_t0A51, _t0A52];
          vec2 _t0A54 = prim -0026<$[2]> (_t0A53, _t090C);
          real _t0A55 = -0.1e1;
          real _t0A56 = 0.1e1;
          vec2 _t0A57 = [_t0A55, _t0A56];
          real _t0A58 = -0.1e1;
          real _t0A59 = 0.1e1;
          vec2 _t0A5A = [_t0A58, _t0A59];
          real _t0A5B = prim ×00BD (_t0917, _t0A5A);
          vec2 _t0A5C = prim /0057<$[2]> (_t0A57, _t0A5B);
          real _t0A5D = prim ×00BD (_t0A54, _t0A5C);
          bool _t0A5E = prim >0080 (time0A3F, _t0A5D);
          real _t0A5F = -0.1e1;
          real _t0A60 = 0.1e1;
          vec2 _t0A61 = [_t0A5F, _t0A60];
          real _t0A62 = prim ×00BD (_t0917, _t0A61);
          real _t0A63 = prim |()|00B5<$[]> (_t0A62);
          real _t0A64 = 0.1e-20;
          bool _t0A65 = prim >=007E (_t0A63, _t0A64);
          bool _t0A66 = prim $and01C4 (_t0A5E, _t0A65);
          bool _t0A67 = prim $and01C4 (_t0A50, _t0A66);
          if _t0A67 {
            real _t0A68 = 0.1e1;
            real _t0A69 = 0.1e-8;
            real _t0A6A = prim +0017<$[]> (_t0A68, _t0A69);
            real _t0A6B = 0.1e1;
            real _t0A6C = 0.1e1;
            vec2 _t0A6D = [_t0A6B, _t0A6C];
            real _t0A6E = 0.1e1;
            real _t0A6F = 0.e0;
            vec2 _t0A70 = [_t0A6E, _t0A6F];
            vec2 _t0A71 = prim -0026<$[2]> (_t0A70, _t090C);
            real _t0A72 = -0.1e1;
            real _t0A73 = 0.1e1;
            vec2 _t0A74 = [_t0A72, _t0A73];
            real _t0A75 = -0.1e1;
            real _t0A76 = 0.1e1;
            vec2 _t0A77 = [_t0A75, _t0A76];
            real _t0A78 = prim ×00BD (_t0917, _t0A77);
            vec2 _t0A79 = prim /0057<$[2]> (_t0A74, _t0A78);
            real _t0A7A = prim ×00BD (_t0A71, _t0A79);
            vec2 _t0A7B = prim *0038<$[2]> (_t0917, _t0A7A);
            vec2 _t0A7C = prim +0017<$[2]> (_t090C, _t0A7B);
            real _t0A7D = prim •00CE<$[2]; $[2]; $[]> (_t0A6D, _t0A7C);
            bool _t0A7E = prim >0080 (_t0A6A, _t0A7D);
            real _t0A7F = 0.1e-8;
            real _t0A80 = 0.1e-8;
            vec2 _t0A81 = [_t0A7F, _t0A80];
            real _t0A82 = 0.1e1;
            real _t0A83 = 0.e0;
            vec2 _t0A84 = [_t0A82, _t0A83];
            vec2 _t0A85 = prim -0026<$[2]> (_t0A84, _t090C);
            real _t0A86 = -0.1e1;
            real _t0A87 = 0.1e1;
            vec2 _t0A88 = [_t0A86, _t0A87];
            real _t0A89 = -0.1e1;
            real _t0A8A = 0.1e1;
            vec2 _t0A8B = [_t0A89, _t0A8A];
            real _t0A8C = prim ×00BD (_t0917, _t0A8B);
            vec2 _t0A8D = prim /0057<$[2]> (_t0A88, _t0A8C);
            real _t0A8E = prim ×00BD (_t0A85, _t0A8D);
            vec2 _t0A8F = prim *0038<$[2]> (_t0917, _t0A8E);
            vec2 _t0A90 = prim +0017<$[2]> (_t090C, _t0A8F);
            vec2 _t0A91 = prim +0017<$[2]> (_t0A81, _t0A90);
            real _t0A92 = _t0A91[0];
            real _t0A93 = -0.e0;
            bool _t0A94 = prim >0080 (_t0A92, _t0A93);
            real _t0A95 = 0.1e-8;
            real _t0A96 = 0.1e-8;
            vec2 _t0A97 = [_t0A95, _t0A96];
            real _t0A98 = 0.1e1;
            real _t0A99 = 0.e0;
            vec2 _t0A9A = [_t0A98, _t0A99];
            vec2 _t0A9B = prim -0026<$[2]> (_t0A9A, _t090C);
            real _t0A9C = -0.1e1;
            real _t0A9D = 0.1e1;
            vec2 _t0A9E = [_t0A9C, _t0A9D];
            real _t0A9F = -0.1e1;
            real _t0AA0 = 0.1e1;
            vec2 _t0AA1 = [_t0A9F, _t0AA0];
            real _t0AA2 = prim ×00BD (_t0917, _t0AA1);
            vec2 _t0AA3 = prim /0057<$[2]> (_t0A9E, _t0AA2);
            real _t0AA4 = prim ×00BD (_t0A9B, _t0AA3);
            vec2 _t0AA5 = prim *0038<$[2]> (_t0917, _t0AA4);
            vec2 _t0AA6 = prim +0017<$[2]> (_t090C, _t0AA5);
            vec2 _t0AA7 = prim +0017<$[2]> (_t0A97, _t0AA6);
            real _t0AA8 = _t0AA7[1];
            real _t0AA9 = -0.e0;
            bool _t0AAA = prim >0080 (_t0AA8, _t0AA9);
            bool _t0AAB = prim $and01C4 (_t0A94, _t0AAA);
            bool _t0AAC = prim $and01C4 (_t0A7E, _t0AAB);
            if _t0AAC {
              real _t0AAD = 0.1e1;
              real _t0AAE = 0.e0;
              vec2 _t0AAF = [_t0AAD, _t0AAE];
              vec2 _t0AB0 = prim -0026<$[2]> (_t0AAF, _t090C);
              real _t0AB1 = -0.1e1;
              real _t0AB2 = 0.1e1;
              vec2 _t0AB3 = [_t0AB1, _t0AB2];
              real _t0AB4 = -0.1e1;
              real _t0AB5 = 0.1e1;
              vec2 _t0AB6 = [_t0AB4, _t0AB5];
              real _t0AB7 = prim ×00BD (_t0917, _t0AB6);
              vec2 _t0AB8 = prim /0057<$[2]> (_t0AB3, _t0AB7);
              time0A3F = prim ×00BD (_t0AB0, _t0AB8);
              face0A40 = 0;
            }
          }
          real _t0AB9 = 0.e0;
          real _t0ABA = 0.e0;
          vec2 _t0ABB = [_t0AB9, _t0ABA];
          vec2 _t0ABC = prim -0026<$[2]> (_t0ABB, _t090C);
          real _t0ABD = 0.e0;
          real _t0ABE = 0.1e1;
          vec2 _t0ABF = [_t0ABD, _t0ABE];
          real _t0AC0 = 0.e0;
          real _t0AC1 = 0.1e1;
          vec2 _t0AC2 = [_t0AC0, _t0AC1];
          real _t0AC3 = prim ×00BD (_t0917, _t0AC2);
          vec2 _t0AC4 = prim /0057<$[2]> (_t0ABF, _t0AC3);
          real _t0AC5 = prim ×00BD (_t0ABC, _t0AC4);
          real _t0AC6 = -0.1e-15;
          bool _t0AC7 = prim >=007E (_t0AC5, _t0AC6);
          real _t0AC8 = 0.e0;
          real _t0AC9 = 0.e0;
          vec2 _t0ACA = [_t0AC8, _t0AC9];
          vec2 _t0ACB = prim -0026<$[2]> (_t0ACA, _t090C);
          real _t0ACC = 0.e0;
          real _t0ACD = 0.1e1;
          vec2 _t0ACE = [_t0ACC, _t0ACD];
          real _t0ACF = 0.e0;
          real _t0AD0 = 0.1e1;
          vec2 _t0AD1 = [_t0ACF, _t0AD0];
          real _t0AD2 = prim ×00BD (_t0917, _t0AD1);
          vec2 _t0AD3 = prim /0057<$[2]> (_t0ACE, _t0AD2);
          real _t0AD4 = prim ×00BD (_t0ACB, _t0AD3);
          bool _t0AD5 = prim >0080 (time0A3F, _t0AD4);
          real _t0AD6 = 0.e0;
          real _t0AD7 = 0.1e1;
          vec2 _t0AD8 = [_t0AD6, _t0AD7];
          real _t0AD9 = prim ×00BD (_t0917, _t0AD8);
          real _t0ADA = prim |()|00B5<$[]> (_t0AD9);
          real _t0ADB = 0.1e-20;
          bool _t0ADC = prim >=007E (_t0ADA, _t0ADB);
          bool _t0ADD = prim $and01C4 (_t0AD5, _t0ADC);
          bool _t0ADE = prim $and01C4 (_t0AC7, _t0ADD);
          if _t0ADE {
            real _t0ADF = 0.1e1;
            real _t0AE0 = 0.1e-8;
            real _t0AE1 = prim +0017<$[]> (_t0ADF, _t0AE0);
            real _t0AE2 = 0.1e1;
            real _t0AE3 = 0.1e1;
            vec2 _t0AE4 = [_t0AE2, _t0AE3];
            real _t0AE5 = 0.e0;
            real _t0AE6 = 0.e0;
            vec2 _t0AE7 = [_t0AE5, _t0AE6];
            vec2 _t0AE8 = prim -0026<$[2]> (_t0AE7, _t090C);
            real _t0AE9 = 0.e0;
            real _t0AEA = 0.1e1;
            vec2 _t0AEB = [_t0AE9, _t0AEA];
            real _t0AEC = 0.e0;
            real _t0AED = 0.1e1;
            vec2 _t0AEE = [_t0AEC, _t0AED];
            real _t0AEF = prim ×00BD (_t0917, _t0AEE);
            vec2 _t0AF0 = prim /0057<$[2]> (_t0AEB, _t0AEF);
            real _t0AF1 = prim ×00BD (_t0AE8, _t0AF0);
            vec2 _t0AF2 = prim *0038<$[2]> (_t0917, _t0AF1);
            vec2 _t0AF3 = prim +0017<$[2]> (_t090C, _t0AF2);
            real _t0AF4 = prim •00CE<$[2]; $[2]; $[]> (_t0AE4, _t0AF3);
            bool _t0AF5 = prim >0080 (_t0AE1, _t0AF4);
            real _t0AF6 = 0.1e-8;
            real _t0AF7 = 0.1e-8;
            vec2 _t0AF8 = [_t0AF6, _t0AF7];
            real _t0AF9 = 0.e0;
            real _t0AFA = 0.e0;
            vec2 _t0AFB = [_t0AF9, _t0AFA];
            vec2 _t0AFC = prim -0026<$[2]> (_t0AFB, _t090C);
            real _t0AFD = 0.e0;
            real _t0AFE = 0.1e1;
            vec2 _t0AFF = [_t0AFD, _t0AFE];
            real _t0B00 = 0.e0;
            real _t0B01 = 0.1e1;
            vec2 _t0B02 = [_t0B00, _t0B01];
            real _t0B03 = prim ×00BD (_t0917, _t0B02);
            vec2 _t0B04 = prim /0057<$[2]> (_t0AFF, _t0B03);
            real _t0B05 = prim ×00BD (_t0AFC, _t0B04);
            vec2 _t0B06 = prim *0038<$[2]> (_t0917, _t0B05);
            vec2 _t0B07 = prim +0017<$[2]> (_t090C, _t0B06);
            vec2 _t0B08 = prim +0017<$[2]> (_t0AF8, _t0B07);
            real _t0B09 = _t0B08[0];
            real _t0B0A = -0.e0;
            bool _t0B0B = prim >0080 (_t0B09, _t0B0A);
            real _t0B0C = 0.1e-8;
            real _t0B0D = 0.1e-8;
            vec2 _t0B0E = [_t0B0C, _t0B0D];
            real _t0B0F = 0.e0;
            real _t0B10 = 0.e0;
            vec2 _t0B11 = [_t0B0F, _t0B10];
            vec2 _t0B12 = prim -0026<$[2]> (_t0B11, _t090C);
            real _t0B13 = 0.e0;
            real _t0B14 = 0.1e1;
            vec2 _t0B15 = [_t0B13, _t0B14];
            real _t0B16 = 0.e0;
            real _t0B17 = 0.1e1;
            vec2 _t0B18 = [_t0B16, _t0B17];
            real _t0B19 = prim ×00BD (_t0917, _t0B18);
            vec2 _t0B1A = prim /0057<$[2]> (_t0B15, _t0B19);
            real _t0B1B = prim ×00BD (_t0B12, _t0B1A);
            vec2 _t0B1C = prim *0038<$[2]> (_t0917, _t0B1B);
            vec2 _t0B1D = prim +0017<$[2]> (_t090C, _t0B1C);
            vec2 _t0B1E = prim +0017<$[2]> (_t0B0E, _t0B1D);
            real _t0B1F = _t0B1E[1];
            real _t0B20 = -0.e0;
            bool _t0B21 = prim >0080 (_t0B1F, _t0B20);
            bool _t0B22 = prim $and01C4 (_t0B0B, _t0B21);
            bool _t0B23 = prim $and01C4 (_t0AF5, _t0B22);
            if _t0B23 {
              real _t0B24 = 0.e0;
              real _t0B25 = 0.e0;
              vec2 _t0B26 = [_t0B24, _t0B25];
              vec2 _t0B27 = prim -0026<$[2]> (_t0B26, _t090C);
              real _t0B28 = 0.e0;
              real _t0B29 = 0.1e1;
              vec2 _t0B2A = [_t0B28, _t0B29];
              real _t0B2B = 0.e0;
              real _t0B2C = 0.1e1;
              vec2 _t0B2D = [_t0B2B, _t0B2C];
              real _t0B2E = prim ×00BD (_t0917, _t0B2D);
              vec2 _t0B2F = prim /0057<$[2]> (_t0B2A, _t0B2E);
              time0A3F = prim ×00BD (_t0B27, _t0B2F);
              face0A40 = 1;
            }
          }
          real _t0B30 = 0.e0;
          real _t0B31 = 0.e0;
          vec2 _t0B32 = [_t0B30, _t0B31];
          vec2 _t0B33 = prim -0026<$[2]> (_t0B32, _t090C);
          real _t0B34 = 0.1e1;
          real _t0B35 = 0.e0;
          vec2 _t0B36 = [_t0B34, _t0B35];
          real _t0B37 = 0.1e1;
          real _t0B38 = 0.e0;
          vec2 _t0B39 = [_t0B37, _t0B38];
          real _t0B3A = prim ×00BD (_t0917, _t0B39);
          vec2 _t0B3B = prim /0057<$[2]> (_t0B36, _t0B3A);
          real _t0B3C = prim ×00BD (_t0B33, _t0B3B);
          real _t0B3D = -0.1e-15;
          bool _t0B3E = prim >=007E (_t0B3C, _t0B3D);
          real _t0B3F = 0.e0;
          real _t0B40 = 0.e0;
          vec2 _t0B41 = [_t0B3F, _t0B40];
          vec2 _t0B42 = prim -0026<$[2]> (_t0B41, _t090C);
          real _t0B43 = 0.1e1;
          real _t0B44 = 0.e0;
          vec2 _t0B45 = [_t0B43, _t0B44];
          real _t0B46 = 0.1e1;
          real _t0B47 = 0.e0;
          vec2 _t0B48 = [_t0B46, _t0B47];
          real _t0B49 = prim ×00BD (_t0917, _t0B48);
          vec2 _t0B4A = prim /0057<$[2]> (_t0B45, _t0B49);
          real _t0B4B = prim ×00BD (_t0B42, _t0B4A);
          bool _t0B4C = prim >0080 (time0A3F, _t0B4B);
          real _t0B4D = 0.1e1;
          real _t0B4E = 0.e0;
          vec2 _t0B4F = [_t0B4D, _t0B4E];
          real _t0B50 = prim ×00BD (_t0917, _t0B4F);
          real _t0B51 = prim |()|00B5<$[]> (_t0B50);
          real _t0B52 = 0.1e-20;
          bool _t0B53 = prim >=007E (_t0B51, _t0B52);
          bool _t0B54 = prim $and01C4 (_t0B4C, _t0B53);
          bool _t0B55 = prim $and01C4 (_t0B3E, _t0B54);
          if _t0B55 {
            real _t0B56 = 0.1e1;
            real _t0B57 = 0.1e-8;
            real _t0B58 = prim +0017<$[]> (_t0B56, _t0B57);
            real _t0B59 = 0.1e1;
            real _t0B5A = 0.1e1;
            vec2 _t0B5B = [_t0B59, _t0B5A];
            real _t0B5C = 0.e0;
            real _t0B5D = 0.e0;
            vec2 _t0B5E = [_t0B5C, _t0B5D];
            vec2 _t0B5F = prim -0026<$[2]> (_t0B5E, _t090C);
            real _t0B60 = 0.1e1;
            real _t0B61 = 0.e0;
            vec2 _t0B62 = [_t0B60, _t0B61];
            real _t0B63 = 0.1e1;
            real _t0B64 = 0.e0;
            vec2 _t0B65 = [_t0B63, _t0B64];
            real _t0B66 = prim ×00BD (_t0917, _t0B65);
            vec2 _t0B67 = prim /0057<$[2]> (_t0B62, _t0B66);
            real _t0B68 = prim ×00BD (_t0B5F, _t0B67);
            vec2 _t0B69 = prim *0038<$[2]> (_t0917, _t0B68);
            vec2 _t0B6A = prim +0017<$[2]> (_t090C, _t0B69);
            real _t0B6B = prim •00CE<$[2]; $[2]; $[]> (_t0B5B, _t0B6A);
            bool _t0B6C = prim >0080 (_t0B58, _t0B6B);
            real _t0B6D = 0.1e-8;
            real _t0B6E = 0.1e-8;
            vec2 _t0B6F = [_t0B6D, _t0B6E];
            real _t0B70 = 0.e0;
            real _t0B71 = 0.e0;
            vec2 _t0B72 = [_t0B70, _t0B71];
            vec2 _t0B73 = prim -0026<$[2]> (_t0B72, _t090C);
            real _t0B74 = 0.1e1;
            real _t0B75 = 0.e0;
            vec2 _t0B76 = [_t0B74, _t0B75];
            real _t0B77 = 0.1e1;
            real _t0B78 = 0.e0;
            vec2 _t0B79 = [_t0B77, _t0B78];
            real _t0B7A = prim ×00BD (_t0917, _t0B79);
            vec2 _t0B7B = prim /0057<$[2]> (_t0B76, _t0B7A);
            real _t0B7C = prim ×00BD (_t0B73, _t0B7B);
            vec2 _t0B7D = prim *0038<$[2]> (_t0917, _t0B7C);
            vec2 _t0B7E = prim +0017<$[2]> (_t090C, _t0B7D);
            vec2 _t0B7F = prim +0017<$[2]> (_t0B6F, _t0B7E);
            real _t0B80 = _t0B7F[0];
            real _t0B81 = -0.e0;
            bool _t0B82 = prim >0080 (_t0B80, _t0B81);
            real _t0B83 = 0.1e-8;
            real _t0B84 = 0.1e-8;
            vec2 _t0B85 = [_t0B83, _t0B84];
            real _t0B86 = 0.e0;
            real _t0B87 = 0.e0;
            vec2 _t0B88 = [_t0B86, _t0B87];
            vec2 _t0B89 = prim -0026<$[2]> (_t0B88, _t090C);
            real _t0B8A = 0.1e1;
            real _t0B8B = 0.e0;
            vec2 _t0B8C = [_t0B8A, _t0B8B];
            real _t0B8D = 0.1e1;
            real _t0B8E = 0.e0;
            vec2 _t0B8F = [_t0B8D, _t0B8E];
            real _t0B90 = prim ×00BD (_t0917, _t0B8F);
            vec2 _t0B91 = prim /0057<$[2]> (_t0B8C, _t0B90);
            real _t0B92 = prim ×00BD (_t0B89, _t0B91);
            vec2 _t0B93 = prim *0038<$[2]> (_t0917, _t0B92);
            vec2 _t0B94 = prim +0017<$[2]> (_t090C, _t0B93);
            vec2 _t0B95 = prim +0017<$[2]> (_t0B85, _t0B94);
            real _t0B96 = _t0B95[1];
            real _t0B97 = -0.e0;
            bool _t0B98 = prim >0080 (_t0B96, _t0B97);
            bool _t0B99 = prim $and01C4 (_t0B82, _t0B98);
            bool _t0B9A = prim $and01C4 (_t0B6C, _t0B99);
            if _t0B9A {
              real _t0B9B = 0.e0;
              real _t0B9C = 0.e0;
              vec2 _t0B9D = [_t0B9B, _t0B9C];
              vec2 _t0B9E = prim -0026<$[2]> (_t0B9D, _t090C);
              real _t0B9F = 0.1e1;
              real _t0BA0 = 0.e0;
              vec2 _t0BA1 = [_t0B9F, _t0BA0];
              real _t0BA2 = 0.1e1;
              real _t0BA3 = 0.e0;
              vec2 _t0BA4 = [_t0BA2, _t0BA3];
              real _t0BA5 = prim ×00BD (_t0917, _t0BA4);
              vec2 _t0BA6 = prim /0057<$[2]> (_t0BA1, _t0BA5);
              time0A3F = prim ×00BD (_t0B9E, _t0BA6);
              face0A40 = 2;
            }
          }
          int _t0BA7 = -1;
          bool _t0BA8 = prim !=0086 (face0A40, _t0BA7);
          if _t0BA8 {
            real _t0BA9 = 0.e0;
            real _t0BAA = prim max0125 (time0A3F, _t0BA9);
            real _t0BAB = (real)face0A40;
            vec2 _t0BAC = [_t0BAA, _t0BAB];
            _t0918 = _t0BAC;
          } else {
            real _t0BAD = -0.1e1;
            real _t0BAE = -0.1e1;
            vec2 _t0BAF = [_t0BAD, _t0BAE];
            _t0918 = _t0BAF;
          }
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui0810, _t093E, vi0811, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui0810, _t0941, vi0811, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E;
    vec2 _t122D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t122E = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t122F = extractFem(pos0854, Mesh);
    vec2 _t1230;
    field(2)[2] _t1231 = femField(_t122F,_t122E,field(2)[2],Transform,);
    vec2 _t1232 = prim @00A5<#∞; %2; $[2]> (_t1231, _t122D);
    _t1230 = _t1232;
    _t094E = _t1230;
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977;
    vec2 _t1227 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1228 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1229 = extractFem(pos0854, Mesh);
    vec2 _t122A;
    field(2)[2] _t122B = femField(_t1229,_t1228,field(2)[2],Transform,);
    vec2 _t122C = prim @00A5<#∞; %2; $[2]> (_t122B, _t1227);
    _t122A = _t122C;
    _t0977 = _t122A;
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980;
    vec2 _t1221 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1222 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1223 = extractFem(pos0854, Mesh);
    vec2 _t1224;
    field(2)[2] _t1225 = femField(_t1223,_t1222,field(2)[2],Transform,);
    vec2 _t1226 = prim @00A5<#∞; %2; $[2]> (_t1225, _t1221);
    _t1224 = _t1226;
    _t0980 = _t1224;
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC;
    real time1151 = +inf;
    int face1152 = -1;
    real faceTime1153 = -inf;
    real _t1154 = 0.1e1;
    real _t1155 = 0.e0;
    vec2 _t1156 = [_t1154, _t1155];
    vec2 _t1157 = prim -0026<$[2]> (_t1156, _t0993);
    real _t1158 = -0.1e1;
    real _t1159 = 0.1e1;
    vec2 _t115A = [_t1158, _t1159];
    real _t115B = -0.1e1;
    real _t115C = 0.1e1;
    vec2 _t115D = [_t115B, _t115C];
    real _t115E = prim ×00BD (_t09AA, _t115D);
    vec2 _t115F = prim /0057<$[2]> (_t115A, _t115E);
    real _t1160 = prim ×00BD (_t1157, _t115F);
    real _t1161 = -0.1e-15;
    bool _t1162 = prim >=007E (_t1160, _t1161);
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    vec2 _t1165 = [_t1163, _t1164];
    vec2 _t1166 = prim -0026<$[2]> (_t1165, _t0993);
    real _t1167 = -0.1e1;
    real _t1168 = 0.1e1;
    vec2 _t1169 = [_t1167, _t1168];
    real _t116A = -0.1e1;
    real _t116B = 0.1e1;
    vec2 _t116C = [_t116A, _t116B];
    real _t116D = prim ×00BD (_t09AA, _t116C);
    vec2 _t116E = prim /0057<$[2]> (_t1169, _t116D);
    real _t116F = prim ×00BD (_t1166, _t116E);
    bool _t1170 = prim >0080 (time1151, _t116F);
    real _t1171 = -0.1e1;
    real _t1172 = 0.1e1;
    vec2 _t1173 = [_t1171, _t1172];
    real _t1174 = prim ×00BD (_t09AA, _t1173);
    real _t1175 = prim |()|00B5<$[]> (_t1174);
    real _t1176 = 0.1e-20;
    bool _t1177 = prim >=007E (_t1175, _t1176);
    bool _t1178 = prim $and01C4 (_t1170, _t1177);
    bool _t1179 = prim $and01C4 (_t1162, _t1178);
    if _t1179 {
      int _t117A = 0;
      bool _t117B = prim !=0086 (_t09AB, _t117A);
      if _t117B {
        real _t117C = 0.1e1;
        real _t117D = 0.e0;
        vec2 _t117E = [_t117C, _t117D];
        vec2 _t117F = prim -0026<$[2]> (_t117E, _t0993);
        real _t1180 = -0.1e1;
        real _t1181 = 0.1e1;
        vec2 _t1182 = [_t1180, _t1181];
        real _t1183 = -0.1e1;
        real _t1184 = 0.1e1;
        vec2 _t1185 = [_t1183, _t1184];
        real _t1186 = prim ×00BD (_t09AA, _t1185);
        vec2 _t1187 = prim /0057<$[2]> (_t1182, _t1186);
        time1151 = prim ×00BD (_t117F, _t1187);
        face1152 = 0;
      } else {
        real _t1188 = 0.1e1;
        real _t1189 = 0.e0;
        vec2 _t118A = [_t1188, _t1189];
        vec2 _t118B = prim -0026<$[2]> (_t118A, _t0993);
        real _t118C = -0.1e1;
        real _t118D = 0.1e1;
        vec2 _t118E = [_t118C, _t118D];
        real _t118F = -0.1e1;
        real _t1190 = 0.1e1;
        vec2 _t1191 = [_t118F, _t1190];
        real _t1192 = prim ×00BD (_t09AA, _t1191);
        vec2 _t1193 = prim /0057<$[2]> (_t118E, _t1192);
        faceTime1153 = prim ×00BD (_t118B, _t1193);
      }
    }
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    vec2 _t1196 = [_t1194, _t1195];
    vec2 _t1197 = prim -0026<$[2]> (_t1196, _t0993);
    real _t1198 = 0.e0;
    real _t1199 = 0.1e1;
    vec2 _t119A = [_t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec2 _t119D = [_t119B, _t119C];
    real _t119E = prim ×00BD (_t09AA, _t119D);
    vec2 _t119F = prim /0057<$[2]> (_t119A, _t119E);
    real _t11A0 = prim ×00BD (_t1197, _t119F);
    real _t11A1 = -0.1e-15;
    bool _t11A2 = prim >=007E (_t11A0, _t11A1);
    real _t11A3 = 0.e0;
    real _t11A4 = 0.e0;
    vec2 _t11A5 = [_t11A3, _t11A4];
    vec2 _t11A6 = prim -0026<$[2]> (_t11A5, _t0993);
    real _t11A7 = 0.e0;
    real _t11A8 = 0.1e1;
    vec2 _t11A9 = [_t11A7, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    vec2 _t11AC = [_t11AA, _t11AB];
    real _t11AD = prim ×00BD (_t09AA, _t11AC);
    vec2 _t11AE = prim /0057<$[2]> (_t11A9, _t11AD);
    real _t11AF = prim ×00BD (_t11A6, _t11AE);
    bool _t11B0 = prim >0080 (time1151, _t11AF);
    real _t11B1 = 0.e0;
    real _t11B2 = 0.1e1;
    vec2 _t11B3 = [_t11B1, _t11B2];
    real _t11B4 = prim ×00BD (_t09AA, _t11B3);
    real _t11B5 = prim |()|00B5<$[]> (_t11B4);
    real _t11B6 = 0.1e-20;
    bool _t11B7 = prim >=007E (_t11B5, _t11B6);
    bool _t11B8 = prim $and01C4 (_t11B0, _t11B7);
    bool _t11B9 = prim $and01C4 (_t11A2, _t11B8);
    if _t11B9 {
      int _t11BA = 1;
      bool _t11BB = prim !=0086 (_t09AB, _t11BA);
      if _t11BB {
        real _t11BC = 0.e0;
        real _t11BD = 0.e0;
        vec2 _t11BE = [_t11BC, _t11BD];
        vec2 _t11BF = prim -0026<$[2]> (_t11BE, _t0993);
        real _t11C0 = 0.e0;
        real _t11C1 = 0.1e1;
        vec2 _t11C2 = [_t11C0, _t11C1];
        real _t11C3 = 0.e0;
        real _t11C4 = 0.1e1;
        vec2 _t11C5 = [_t11C3, _t11C4];
        real _t11C6 = prim ×00BD (_t09AA, _t11C5);
        vec2 _t11C7 = prim /0057<$[2]> (_t11C2, _t11C6);
        time1151 = prim ×00BD (_t11BF, _t11C7);
        face1152 = 1;
      } else {
        real _t11C8 = 0.e0;
        real _t11C9 = 0.e0;
        vec2 _t11CA = [_t11C8, _t11C9];
        vec2 _t11CB = prim -0026<$[2]> (_t11CA, _t0993);
        real _t11CC = 0.e0;
        real _t11CD = 0.1e1;
        vec2 _t11CE = [_t11CC, _t11CD];
        real _t11CF = 0.e0;
        real _t11D0 = 0.1e1;
        vec2 _t11D1 = [_t11CF, _t11D0];
        real _t11D2 = prim ×00BD (_t09AA, _t11D1);
        vec2 _t11D3 = prim /0057<$[2]> (_t11CE, _t11D2);
        faceTime1153 = prim ×00BD (_t11CB, _t11D3);
      }
    }
    real _t11D4 = 0.e0;
    real _t11D5 = 0.e0;
    vec2 _t11D6 = [_t11D4, _t11D5];
    vec2 _t11D7 = prim -0026<$[2]> (_t11D6, _t0993);
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec2 _t11DA = [_t11D8, _t11D9];
    real _t11DB = 0.1e1;
    real _t11DC = 0.e0;
    vec2 _t11DD = [_t11DB, _t11DC];
    real _t11DE = prim ×00BD (_t09AA, _t11DD);
    vec2 _t11DF = prim /0057<$[2]> (_t11DA, _t11DE);
    real _t11E0 = prim ×00BD (_t11D7, _t11DF);
    real _t11E1 = -0.1e-15;
    bool _t11E2 = prim >=007E (_t11E0, _t11E1);
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec2 _t11E5 = [_t11E3, _t11E4];
    vec2 _t11E6 = prim -0026<$[2]> (_t11E5, _t0993);
    real _t11E7 = 0.1e1;
    real _t11E8 = 0.e0;
    vec2 _t11E9 = [_t11E7, _t11E8];
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    vec2 _t11EC = [_t11EA, _t11EB];
    real _t11ED = prim ×00BD (_t09AA, _t11EC);
    vec2 _t11EE = prim /0057<$[2]> (_t11E9, _t11ED);
    real _t11EF = prim ×00BD (_t11E6, _t11EE);
    bool _t11F0 = prim >0080 (time1151, _t11EF);
    real _t11F1 = 0.1e1;
    real _t11F2 = 0.e0;
    vec2 _t11F3 = [_t11F1, _t11F2];
    real _t11F4 = prim ×00BD (_t09AA, _t11F3);
    real _t11F5 = prim |()|00B5<$[]> (_t11F4);
    real _t11F6 = 0.1e-20;
    bool _t11F7 = prim >=007E (_t11F5, _t11F6);
    bool _t11F8 = prim $and01C4 (_t11F0, _t11F7);
    bool _t11F9 = prim $and01C4 (_t11E2, _t11F8);
    if _t11F9 {
      int _t11FA = 2;
      bool _t11FB = prim !=0086 (_t09AB, _t11FA);
      if _t11FB {
        real _t11FC = 0.e0;
        real _t11FD = 0.e0;
        vec2 _t11FE = [_t11FC, _t11FD];
        vec2 _t11FF = prim -0026<$[2]> (_t11FE, _t0993);
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec2 _t1202 = [_t1200, _t1201];
        real _t1203 = 0.1e1;
        real _t1204 = 0.e0;
        vec2 _t1205 = [_t1203, _t1204];
        real _t1206 = prim ×00BD (_t09AA, _t1205);
        vec2 _t1207 = prim /0057<$[2]> (_t1202, _t1206);
        time1151 = prim ×00BD (_t11FF, _t1207);
        face1152 = 2;
      } else {
        real _t1208 = 0.e0;
        real _t1209 = 0.e0;
        vec2 _t120A = [_t1208, _t1209];
        vec2 _t120B = prim -0026<$[2]> (_t120A, _t0993);
        real _t120C = 0.1e1;
        real _t120D = 0.e0;
        vec2 _t120E = [_t120C, _t120D];
        real _t120F = 0.1e1;
        real _t1210 = 0.e0;
        vec2 _t1211 = [_t120F, _t1210];
        real _t1212 = prim ×00BD (_t09AA, _t1211);
        vec2 _t1213 = prim /0057<$[2]> (_t120E, _t1212);
        faceTime1153 = prim ×00BD (_t120B, _t1213);
      }
    }
    int _t1214 = -1;
    bool _t1215 = prim !=0086 (face1152, _t1214);
    if _t1215 {
      real _t1216 = 0.e0;
      real _t1217 = prim max0125 (time1151, _t1216);
      real _t1218 = (real)face1152;
      vec2 _t1219 = [_t1217, _t1218];
      _t09AC = _t1219;
    } else {
      real _t121A = -inf;
      bool _t121B = prim ==0084 (_t121A, faceTime1153);
      if _t121B {
        real _t121C = -0.1e1;
        real _t121D = -0.1e1;
        vec2 _t121E = [_t121C, _t121D];
        _t09AC = _t121E;
      } else {
        real _t121F = (real)_t09AB;
        vec2 _t1220 = [faceTime1153, _t121F];
        _t09AC = _t1220;
      }
    }
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9;
      real time1081 = +inf;
      int face1082 = -1;
      real faceTime1083 = -inf;
      real _t1084 = 0.1e1;
      real _t1085 = 0.e0;
      vec2 _t1086 = [_t1084, _t1085];
      vec2 _t1087 = prim -0026<$[2]> (_t1086, _t09D0);
      real _t1088 = -0.1e1;
      real _t1089 = 0.1e1;
      vec2 _t108A = [_t1088, _t1089];
      real _t108B = -0.1e1;
      real _t108C = 0.1e1;
      vec2 _t108D = [_t108B, _t108C];
      real _t108E = prim ×00BD (_t09E7, _t108D);
      vec2 _t108F = prim /0057<$[2]> (_t108A, _t108E);
      real _t1090 = prim ×00BD (_t1087, _t108F);
      real _t1091 = -0.1e-15;
      bool _t1092 = prim >=007E (_t1090, _t1091);
      real _t1093 = 0.1e1;
      real _t1094 = 0.e0;
      vec2 _t1095 = [_t1093, _t1094];
      vec2 _t1096 = prim -0026<$[2]> (_t1095, _t09D0);
      real _t1097 = -0.1e1;
      real _t1098 = 0.1e1;
      vec2 _t1099 = [_t1097, _t1098];
      real _t109A = -0.1e1;
      real _t109B = 0.1e1;
      vec2 _t109C = [_t109A, _t109B];
      real _t109D = prim ×00BD (_t09E7, _t109C);
      vec2 _t109E = prim /0057<$[2]> (_t1099, _t109D);
      real _t109F = prim ×00BD (_t1096, _t109E);
      bool _t10A0 = prim >0080 (time1081, _t109F);
      real _t10A1 = -0.1e1;
      real _t10A2 = 0.1e1;
      vec2 _t10A3 = [_t10A1, _t10A2];
      real _t10A4 = prim ×00BD (_t09E7, _t10A3);
      real _t10A5 = prim |()|00B5<$[]> (_t10A4);
      real _t10A6 = 0.1e-20;
      bool _t10A7 = prim >=007E (_t10A5, _t10A6);
      bool _t10A8 = prim $and01C4 (_t10A0, _t10A7);
      bool _t10A9 = prim $and01C4 (_t1092, _t10A8);
      if _t10A9 {
        int _t10AA = 0;
        bool _t10AB = prim !=0086 (_t09E8, _t10AA);
        if _t10AB {
          real _t10AC = 0.1e1;
          real _t10AD = 0.e0;
          vec2 _t10AE = [_t10AC, _t10AD];
          vec2 _t10AF = prim -0026<$[2]> (_t10AE, _t09D0);
          real _t10B0 = -0.1e1;
          real _t10B1 = 0.1e1;
          vec2 _t10B2 = [_t10B0, _t10B1];
          real _t10B3 = -0.1e1;
          real _t10B4 = 0.1e1;
          vec2 _t10B5 = [_t10B3, _t10B4];
          real _t10B6 = prim ×00BD (_t09E7, _t10B5);
          vec2 _t10B7 = prim /0057<$[2]> (_t10B2, _t10B6);
          time1081 = prim ×00BD (_t10AF, _t10B7);
          face1082 = 0;
        } else {
          real _t10B8 = 0.1e1;
          real _t10B9 = 0.e0;
          vec2 _t10BA = [_t10B8, _t10B9];
          vec2 _t10BB = prim -0026<$[2]> (_t10BA, _t09D0);
          real _t10BC = -0.1e1;
          real _t10BD = 0.1e1;
          vec2 _t10BE = [_t10BC, _t10BD];
          real _t10BF = -0.1e1;
          real _t10C0 = 0.1e1;
          vec2 _t10C1 = [_t10BF, _t10C0];
          real _t10C2 = prim ×00BD (_t09E7, _t10C1);
          vec2 _t10C3 = prim /0057<$[2]> (_t10BE, _t10C2);
          faceTime1083 = prim ×00BD (_t10BB, _t10C3);
        }
      }
      real _t10C4 = 0.e0;
      real _t10C5 = 0.e0;
      vec2 _t10C6 = [_t10C4, _t10C5];
      vec2 _t10C7 = prim -0026<$[2]> (_t10C6, _t09D0);
      real _t10C8 = 0.e0;
      real _t10C9 = 0.1e1;
      vec2 _t10CA = [_t10C8, _t10C9];
      real _t10CB = 0.e0;
      real _t10CC = 0.1e1;
      vec2 _t10CD = [_t10CB, _t10CC];
      real _t10CE = prim ×00BD (_t09E7, _t10CD);
      vec2 _t10CF = prim /0057<$[2]> (_t10CA, _t10CE);
      real _t10D0 = prim ×00BD (_t10C7, _t10CF);
      real _t10D1 = -0.1e-15;
      bool _t10D2 = prim >=007E (_t10D0, _t10D1);
      real _t10D3 = 0.e0;
      real _t10D4 = 0.e0;
      vec2 _t10D5 = [_t10D3, _t10D4];
      vec2 _t10D6 = prim -0026<$[2]> (_t10D5, _t09D0);
      real _t10D7 = 0.e0;
      real _t10D8 = 0.1e1;
      vec2 _t10D9 = [_t10D7, _t10D8];
      real _t10DA = 0.e0;
      real _t10DB = 0.1e1;
      vec2 _t10DC = [_t10DA, _t10DB];
      real _t10DD = prim ×00BD (_t09E7, _t10DC);
      vec2 _t10DE = prim /0057<$[2]> (_t10D9, _t10DD);
      real _t10DF = prim ×00BD (_t10D6, _t10DE);
      bool _t10E0 = prim >0080 (time1081, _t10DF);
      real _t10E1 = 0.e0;
      real _t10E2 = 0.1e1;
      vec2 _t10E3 = [_t10E1, _t10E2];
      real _t10E4 = prim ×00BD (_t09E7, _t10E3);
      real _t10E5 = prim |()|00B5<$[]> (_t10E4);
      real _t10E6 = 0.1e-20;
      bool _t10E7 = prim >=007E (_t10E5, _t10E6);
      bool _t10E8 = prim $and01C4 (_t10E0, _t10E7);
      bool _t10E9 = prim $and01C4 (_t10D2, _t10E8);
      if _t10E9 {
        int _t10EA = 1;
        bool _t10EB = prim !=0086 (_t09E8, _t10EA);
        if _t10EB {
          real _t10EC = 0.e0;
          real _t10ED = 0.e0;
          vec2 _t10EE = [_t10EC, _t10ED];
          vec2 _t10EF = prim -0026<$[2]> (_t10EE, _t09D0);
          real _t10F0 = 0.e0;
          real _t10F1 = 0.1e1;
          vec2 _t10F2 = [_t10F0, _t10F1];
          real _t10F3 = 0.e0;
          real _t10F4 = 0.1e1;
          vec2 _t10F5 = [_t10F3, _t10F4];
          real _t10F6 = prim ×00BD (_t09E7, _t10F5);
          vec2 _t10F7 = prim /0057<$[2]> (_t10F2, _t10F6);
          time1081 = prim ×00BD (_t10EF, _t10F7);
          face1082 = 1;
        } else {
          real _t10F8 = 0.e0;
          real _t10F9 = 0.e0;
          vec2 _t10FA = [_t10F8, _t10F9];
          vec2 _t10FB = prim -0026<$[2]> (_t10FA, _t09D0);
          real _t10FC = 0.e0;
          real _t10FD = 0.1e1;
          vec2 _t10FE = [_t10FC, _t10FD];
          real _t10FF = 0.e0;
          real _t1100 = 0.1e1;
          vec2 _t1101 = [_t10FF, _t1100];
          real _t1102 = prim ×00BD (_t09E7, _t1101);
          vec2 _t1103 = prim /0057<$[2]> (_t10FE, _t1102);
          faceTime1083 = prim ×00BD (_t10FB, _t1103);
        }
      }
      real _t1104 = 0.e0;
      real _t1105 = 0.e0;
      vec2 _t1106 = [_t1104, _t1105];
      vec2 _t1107 = prim -0026<$[2]> (_t1106, _t09D0);
      real _t1108 = 0.1e1;
      real _t1109 = 0.e0;
      vec2 _t110A = [_t1108, _t1109];
      real _t110B = 0.1e1;
      real _t110C = 0.e0;
      vec2 _t110D = [_t110B, _t110C];
      real _t110E = prim ×00BD (_t09E7, _t110D);
      vec2 _t110F = prim /0057<$[2]> (_t110A, _t110E);
      real _t1110 = prim ×00BD (_t1107, _t110F);
      real _t1111 = -0.1e-15;
      bool _t1112 = prim >=007E (_t1110, _t1111);
      real _t1113 = 0.e0;
      real _t1114 = 0.e0;
      vec2 _t1115 = [_t1113, _t1114];
      vec2 _t1116 = prim -0026<$[2]> (_t1115, _t09D0);
      real _t1117 = 0.1e1;
      real _t1118 = 0.e0;
      vec2 _t1119 = [_t1117, _t1118];
      real _t111A = 0.1e1;
      real _t111B = 0.e0;
      vec2 _t111C = [_t111A, _t111B];
      real _t111D = prim ×00BD (_t09E7, _t111C);
      vec2 _t111E = prim /0057<$[2]> (_t1119, _t111D);
      real _t111F = prim ×00BD (_t1116, _t111E);
      bool _t1120 = prim >0080 (time1081, _t111F);
      real _t1121 = 0.1e1;
      real _t1122 = 0.e0;
      vec2 _t1123 = [_t1121, _t1122];
      real _t1124 = prim ×00BD (_t09E7, _t1123);
      real _t1125 = prim |()|00B5<$[]> (_t1124);
      real _t1126 = 0.1e-20;
      bool _t1127 = prim >=007E (_t1125, _t1126);
      bool _t1128 = prim $and01C4 (_t1120, _t1127);
      bool _t1129 = prim $and01C4 (_t1112, _t1128);
      if _t1129 {
        int _t112A = 2;
        bool _t112B = prim !=0086 (_t09E8, _t112A);
        if _t112B {
          real _t112C = 0.e0;
          real _t112D = 0.e0;
          vec2 _t112E = [_t112C, _t112D];
          vec2 _t112F = prim -0026<$[2]> (_t112E, _t09D0);
          real _t1130 = 0.1e1;
          real _t1131 = 0.e0;
          vec2 _t1132 = [_t1130, _t1131];
          real _t1133 = 0.1e1;
          real _t1134 = 0.e0;
          vec2 _t1135 = [_t1133, _t1134];
          real _t1136 = prim ×00BD (_t09E7, _t1135);
          vec2 _t1137 = prim /0057<$[2]> (_t1132, _t1136);
          time1081 = prim ×00BD (_t112F, _t1137);
          face1082 = 2;
        } else {
          real _t1138 = 0.e0;
          real _t1139 = 0.e0;
          vec2 _t113A = [_t1138, _t1139];
          vec2 _t113B = prim -0026<$[2]> (_t113A, _t09D0);
          real _t113C = 0.1e1;
          real _t113D = 0.e0;
          vec2 _t113E = [_t113C, _t113D];
          real _t113F = 0.1e1;
          real _t1140 = 0.e0;
          vec2 _t1141 = [_t113F, _t1140];
          real _t1142 = prim ×00BD (_t09E7, _t1141);
          vec2 _t1143 = prim /0057<$[2]> (_t113E, _t1142);
          faceTime1083 = prim ×00BD (_t113B, _t1143);
        }
      }
      int _t1144 = -1;
      bool _t1145 = prim !=0086 (face1082, _t1144);
      if _t1145 {
        real _t1146 = 0.e0;
        real _t1147 = prim max0125 (time1081, _t1146);
        real _t1148 = (real)face1082;
        vec2 _t1149 = [_t1147, _t1148];
        _t09E9 = _t1149;
      } else {
        real _t114A = -inf;
        bool _t114B = prim ==0084 (_t114A, faceTime1083);
        if _t114B {
          real _t114C = -0.1e1;
          real _t114D = -0.1e1;
          vec2 _t114E = [_t114C, _t114D];
          _t09E9 = _t114E;
        } else {
          real _t114F = (real)_t09E8;
          vec2 _t1150 = [faceTime1083, _t114F];
          _t09E9 = _t1150;
        }
      }
      Femdata: MeshPos posp09EA;
      int _t100C = -1;
      real _t100D = _t09E9[1];
      int _t100E = prim $r2i01B7 (_t100D);
      int[2] _t100F = func nextCell40536 (_t100E, _t09B7, _t09B6);
      int _t1010 = 0;
      int _t1011 = prim $sub01C0<int; %2> (_t100F, _t1010);
      bool _t1012 = prim !=0086 (_t100C, _t1011);
      if _t1012 {
        real _t1013 = _t09E9[1];
        int _t1014 = prim $r2i01B7 (_t1013);
        int[2] _t1015 = func nextCell40536 (_t1014, _t09B7, _t09B6);
        int _t1016 = 0;
        int _t1017 = prim $sub01C0<int; %2> (_t1015, _t1016);
        real _t1018 = 0.1e1;
        real _t1019 = 0.e0;
        vec2 _t101A = [_t1018, _t1019];
        real _t101B = 0.e0;
        real _t101C = 0.e0;
        vec2 _t101D = [_t101B, _t101C];
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec2 _t1020 = [_t101E, _t101F];
        vec2[3] _t1021 = {_t101A, _t101D, _t1020};
        real _t1022 = _t09E9[1];
        int _t1023 = prim $r2i01B7 (_t1022);
        int[2] _t1024 = func nextCell40536 (_t1023, _t09B7, _t09B6);
        int _t1025 = 1;
        int _t1026 = prim $sub01C0<int; %2> (_t1024, _t1025);
        vec2 _t1027 = prim $sub01C0<vec2; %3> (_t1021, _t1026);
        real _t1028 = -0.1e1;
        real _t1029 = 0.1e1;
        vec2 _t102A = [_t1028, _t1029];
        real _t102B = 0.e0;
        real _t102C = 0.1e1;
        vec2 _t102D = [_t102B, _t102C];
        real _t102E = 0.1e1;
        real _t102F = 0.e0;
        vec2 _t1030 = [_t102E, _t102F];
        vec2[3] _t1031 = {_t102A, _t102D, _t1030};
        real _t1032 = _t09E9[1];
        int _t1033 = prim $r2i01B7 (_t1032);
        int[2] _t1034 = func nextCell40536 (_t1033, _t09B7, _t09B6);
        int _t1035 = 1;
        int _t1036 = prim $sub01C0<int; %2> (_t1034, _t1035);
        vec2 _t1037 = prim $sub01C0<vec2; %3> (_t1031, _t1036);
        real _t1038 = _t09E9[0];
        vec2 _t1039 = prim *0036<$[2]> (_t1038, _t09CF);
        vec2 _t103A = prim +0017<$[2]> (_t1039, _t09B8);
        real _t103B = _t103A[0];
        real _t103C = _t09E9[0];
        vec2 _t103D = prim *0036<$[2]> (_t103C, _t09CF);
        vec2 _t103E = prim +0017<$[2]> (_t103D, _t09B8);
        real _t103F = _t103E[1];
        real[2] _t1040 = {_t103B, _t103F};
        int _t1041 = 1;
        int _t1042 = 1;
        int _t1043 = 0;
        int[3] _t1044 = {_t1041, _t1042, _t1043};
        real _t1045 = _t09E9[1];
        int _t1046 = prim $r2i01B7 (_t1045);
        int _t1047 = prim $sub01C0<int; %3> (_t1044, _t1046);
        real _t1048 = prim $sub01C0<real; %2> (_t1040, _t1047);
        real _t1049 = 0.1e1;
        real _t104A = 0.e0;
        real[2] _t104B = {_t1049, _t104A};
        real _t104C = 0.e0;
        real _t104D = 0.e0;
        real[2] _t104E = {_t104C, _t104D};
        real _t104F = 0.e0;
        real _t1050 = 0.e0;
        real[2] _t1051 = {_t104F, _t1050};
        real[2][3] _t1052 = {_t104B, _t104E, _t1051};
        real _t1053 = _t09E9[1];
        int _t1054 = prim $r2i01B7 (_t1053);
        real[2] _t1055 = prim $sub01C0<real[2]; %3> (_t1052, _t1054);
        int _t1056 = 1;
        int _t1057 = 1;
        int _t1058 = 0;
        int[3] _t1059 = {_t1056, _t1057, _t1058};
        real _t105A = _t09E9[1];
        int _t105B = prim $r2i01B7 (_t105A);
        int _t105C = prim $sub01C0<int; %3> (_t1059, _t105B);
        real _t105D = prim $sub01C0<real; %2> (_t1055, _t105C);
        real _t105E = prim -0026<$[]> (_t1048, _t105D);
        real _t105F = -0.1e1;
        real _t1060 = 0.1e1;
        real[2] _t1061 = {_t105F, _t1060};
        real _t1062 = 0.e0;
        real _t1063 = 0.1e1;
        real[2] _t1064 = {_t1062, _t1063};
        real _t1065 = 0.1e1;
        real _t1066 = 0.e0;
        real[2] _t1067 = {_t1065, _t1066};
        real[2][3] _t1068 = {_t1061, _t1064, _t1067};
        real _t1069 = _t09E9[1];
        int _t106A = prim $r2i01B7 (_t1069);
        real[2] _t106B = prim $sub01C0<real[2]; %3> (_t1068, _t106A);
        int _t106C = 1;
        int _t106D = 1;
        int _t106E = 0;
        int[3] _t106F = {_t106C, _t106D, _t106E};
        real _t1070 = _t09E9[1];
        int _t1071 = prim $r2i01B7 (_t1070);
        int _t1072 = prim $sub01C0<int; %3> (_t106F, _t1071);
        real _t1073 = prim $sub01C0<real; %2> (_t106B, _t1072);
        real _t1074 = prim /0055 (_t105E, _t1073);
        vec2 _t1075 = prim *0038<$[2]> (_t1037, _t1074);
        vec2 _t1076 = prim +0017<$[2]> (_t1027, _t1075);
        real _t1077 = _t09E9[1];
        int _t1078 = prim $r2i01B7 (_t1077);
        int[2] _t1079 = func nextCell40536 (_t1078, _t09B7, _t09B6);
        int _t107A = 1;
        int _t107B = prim $sub01C0<int; %2> (_t1079, _t107A);
        Femdata: MeshPos _t107C = extractFemItemN((_t09B6, _t1017, _t1076, _t107B),RefBuild(Mesh),);
        posp09EA = _t107C;
      } else {
        real _t107D = _t09E9[0];
        vec2 _t107E = prim *0036<$[2]> (_t107D, _t09CF);
        vec2 _t107F = prim +0017<$[2]> (_t107E, _t09B8);
        Femdata: MeshPos _t1080 = extractFemItemN((_t09B6, _t107F),InvalidBuildBoundary(MeshPos),);
        posp09EA = _t1080;
      }
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11;
          int _t1009 = extractFemItem(CellIndex(Mesh), int, _t0A0D);
          int _t100A = extractFemItem(CellIndex(Mesh), int, _t0A10);
          bool _t100B = prim !=0086 (_t1009, _t100A);
          _t0A11 = _t100B;
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19;
      vec2 _t1003 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      int _t1004 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: Mesh _t1005 = extractFem(pos0854, Mesh);
      vec2 _t1006;
      field(2)[2] _t1007 = femField(_t1005,_t1004,field(2)[2],Transform,);
      vec2 _t1008 = prim @00A5<#∞; %2; $[2]> (_t1007, _t1003);
      _t1006 = _t1008;
      _t0A19 = _t1006;
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  int ui1234;
  int vi1233;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
    ui1234 = ui0810;
    vi1233 = vi0811;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui1234, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi1233, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E;
        real time0E92 = +inf;
        int face0E93 = -1;
        real _t0E95 = 0.1e1;
        real _t0E96 = 0.e0;
        vec2 _t0E97 = [_t0E95, _t0E96];
        vec2 _t0E98 = prim -0026<$[2]> (_t0E97, _t0882);
        real _t0E99 = -0.1e1;
        real _t0E9A = 0.1e1;
        vec2 _t0E9B = [_t0E99, _t0E9A];
        real _t0E9C = -0.1e1;
        real _t0E9D = 0.1e1;
        vec2 _t0E9E = [_t0E9C, _t0E9D];
        real _t0E9F = prim ×00BD (_t088D, _t0E9E);
        vec2 _t0EA0 = prim /0057<$[2]> (_t0E9B, _t0E9F);
        real _t0EA1 = prim ×00BD (_t0E98, _t0EA0);
        real _t0EA2 = -0.1e-15;
        bool _t0EA3 = prim >=007E (_t0EA1, _t0EA2);
        real _t0EA4 = 0.1e1;
        real _t0EA5 = 0.e0;
        vec2 _t0EA6 = [_t0EA4, _t0EA5];
        vec2 _t0EA7 = prim -0026<$[2]> (_t0EA6, _t0882);
        real _t0EA8 = -0.1e1;
        real _t0EA9 = 0.1e1;
        vec2 _t0EAA = [_t0EA8, _t0EA9];
        real _t0EAB = -0.1e1;
        real _t0EAC = 0.1e1;
        vec2 _t0EAD = [_t0EAB, _t0EAC];
        real _t0EAE = prim ×00BD (_t088D, _t0EAD);
        vec2 _t0EAF = prim /0057<$[2]> (_t0EAA, _t0EAE);
        real _t0EB0 = prim ×00BD (_t0EA7, _t0EAF);
        bool _t0EB1 = prim >0080 (time0E92, _t0EB0);
        real _t0EB2 = -0.1e1;
        real _t0EB3 = 0.1e1;
        vec2 _t0EB4 = [_t0EB2, _t0EB3];
        real _t0EB5 = prim ×00BD (_t088D, _t0EB4);
        real _t0EB6 = prim |()|00B5<$[]> (_t0EB5);
        real _t0EB7 = 0.1e-20;
        bool _t0EB8 = prim >=007E (_t0EB6, _t0EB7);
        bool _t0EB9 = prim $and01C4 (_t0EB1, _t0EB8);
        bool _t0EBA = prim $and01C4 (_t0EA3, _t0EB9);
        if _t0EBA {
          real _t0EBB = 0.1e1;
          real _t0EBC = 0.1e-8;
          real _t0EBD = prim +0017<$[]> (_t0EBB, _t0EBC);
          real _t0EBE = 0.1e1;
          real _t0EBF = 0.1e1;
          vec2 _t0EC0 = [_t0EBE, _t0EBF];
          real _t0EC1 = 0.1e1;
          real _t0EC2 = 0.e0;
          vec2 _t0EC3 = [_t0EC1, _t0EC2];
          vec2 _t0EC4 = prim -0026<$[2]> (_t0EC3, _t0882);
          real _t0EC5 = -0.1e1;
          real _t0EC6 = 0.1e1;
          vec2 _t0EC7 = [_t0EC5, _t0EC6];
          real _t0EC8 = -0.1e1;
          real _t0EC9 = 0.1e1;
          vec2 _t0ECA = [_t0EC8, _t0EC9];
          real _t0ECB = prim ×00BD (_t088D, _t0ECA);
          vec2 _t0ECC = prim /0057<$[2]> (_t0EC7, _t0ECB);
          real _t0ECD = prim ×00BD (_t0EC4, _t0ECC);
          vec2 _t0ECE = prim *0038<$[2]> (_t088D, _t0ECD);
          vec2 _t0ECF = prim +0017<$[2]> (_t0882, _t0ECE);
          real _t0ED0 = prim •00CE<$[2]; $[2]; $[]> (_t0EC0, _t0ECF);
          bool _t0ED1 = prim >0080 (_t0EBD, _t0ED0);
          real _t0ED2 = 0.1e-8;
          real _t0ED3 = 0.1e-8;
          vec2 _t0ED4 = [_t0ED2, _t0ED3];
          real _t0ED5 = 0.1e1;
          real _t0ED6 = 0.e0;
          vec2 _t0ED7 = [_t0ED5, _t0ED6];
          vec2 _t0ED8 = prim -0026<$[2]> (_t0ED7, _t0882);
          real _t0ED9 = -0.1e1;
          real _t0EDA = 0.1e1;
          vec2 _t0EDB = [_t0ED9, _t0EDA];
          real _t0EDC = -0.1e1;
          real _t0EDD = 0.1e1;
          vec2 _t0EDE = [_t0EDC, _t0EDD];
          real _t0EDF = prim ×00BD (_t088D, _t0EDE);
          vec2 _t0EE0 = prim /0057<$[2]> (_t0EDB, _t0EDF);
          real _t0EE1 = prim ×00BD (_t0ED8, _t0EE0);
          vec2 _t0EE2 = prim *0038<$[2]> (_t088D, _t0EE1);
          vec2 _t0EE3 = prim +0017<$[2]> (_t0882, _t0EE2);
          vec2 _t0EE4 = prim +0017<$[2]> (_t0ED4, _t0EE3);
          real _t0EE5 = _t0EE4[0];
          real _t0EE6 = -0.e0;
          bool _t0EE7 = prim >0080 (_t0EE5, _t0EE6);
          real _t0EE8 = 0.1e-8;
          real _t0EE9 = 0.1e-8;
          vec2 _t0EEA = [_t0EE8, _t0EE9];
          real _t0EEB = 0.1e1;
          real _t0EEC = 0.e0;
          vec2 _t0EED = [_t0EEB, _t0EEC];
          vec2 _t0EEE = prim -0026<$[2]> (_t0EED, _t0882);
          real _t0EEF = -0.1e1;
          real _t0EF0 = 0.1e1;
          vec2 _t0EF1 = [_t0EEF, _t0EF0];
          real _t0EF2 = -0.1e1;
          real _t0EF3 = 0.1e1;
          vec2 _t0EF4 = [_t0EF2, _t0EF3];
          real _t0EF5 = prim ×00BD (_t088D, _t0EF4);
          vec2 _t0EF6 = prim /0057<$[2]> (_t0EF1, _t0EF5);
          real _t0EF7 = prim ×00BD (_t0EEE, _t0EF6);
          vec2 _t0EF8 = prim *0038<$[2]> (_t088D, _t0EF7);
          vec2 _t0EF9 = prim +0017<$[2]> (_t0882, _t0EF8);
          vec2 _t0EFA = prim +0017<$[2]> (_t0EEA, _t0EF9);
          real _t0EFB = _t0EFA[1];
          real _t0EFC = -0.e0;
          bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
          bool _t0EFE = prim $and01C4 (_t0EE7, _t0EFD);
          bool _t0EFF = prim $and01C4 (_t0ED1, _t0EFE);
          if _t0EFF {
            real _t0F00 = 0.1e1;
            real _t0F01 = 0.e0;
            vec2 _t0F02 = [_t0F00, _t0F01];
            vec2 _t0F03 = prim -0026<$[2]> (_t0F02, _t0882);
            real _t0F04 = -0.1e1;
            real _t0F05 = 0.1e1;
            vec2 _t0F06 = [_t0F04, _t0F05];
            real _t0F07 = -0.1e1;
            real _t0F08 = 0.1e1;
            vec2 _t0F09 = [_t0F07, _t0F08];
            real _t0F0A = prim ×00BD (_t088D, _t0F09);
            vec2 _t0F0B = prim /0057<$[2]> (_t0F06, _t0F0A);
            time0E92 = prim ×00BD (_t0F03, _t0F0B);
            face0E93 = 0;
          }
        }
        real _t0F0C = 0.e0;
        real _t0F0D = 0.e0;
        vec2 _t0F0E = [_t0F0C, _t0F0D];
        vec2 _t0F0F = prim -0026<$[2]> (_t0F0E, _t0882);
        real _t0F10 = 0.e0;
        real _t0F11 = 0.1e1;
        vec2 _t0F12 = [_t0F10, _t0F11];
        real _t0F13 = 0.e0;
        real _t0F14 = 0.1e1;
        vec2 _t0F15 = [_t0F13, _t0F14];
        real _t0F16 = prim ×00BD (_t088D, _t0F15);
        vec2 _t0F17 = prim /0057<$[2]> (_t0F12, _t0F16);
        real _t0F18 = prim ×00BD (_t0F0F, _t0F17);
        real _t0F19 = -0.1e-15;
        bool _t0F1A = prim >=007E (_t0F18, _t0F19);
        real _t0F1B = 0.e0;
        real _t0F1C = 0.e0;
        vec2 _t0F1D = [_t0F1B, _t0F1C];
        vec2 _t0F1E = prim -0026<$[2]> (_t0F1D, _t0882);
        real _t0F1F = 0.e0;
        real _t0F20 = 0.1e1;
        vec2 _t0F21 = [_t0F1F, _t0F20];
        real _t0F22 = 0.e0;
        real _t0F23 = 0.1e1;
        vec2 _t0F24 = [_t0F22, _t0F23];
        real _t0F25 = prim ×00BD (_t088D, _t0F24);
        vec2 _t0F26 = prim /0057<$[2]> (_t0F21, _t0F25);
        real _t0F27 = prim ×00BD (_t0F1E, _t0F26);
        bool _t0F28 = prim >0080 (time0E92, _t0F27);
        real _t0F29 = 0.e0;
        real _t0F2A = 0.1e1;
        vec2 _t0F2B = [_t0F29, _t0F2A];
        real _t0F2C = prim ×00BD (_t088D, _t0F2B);
        real _t0F2D = prim |()|00B5<$[]> (_t0F2C);
        real _t0F2E = 0.1e-20;
        bool _t0F2F = prim >=007E (_t0F2D, _t0F2E);
        bool _t0F30 = prim $and01C4 (_t0F28, _t0F2F);
        bool _t0F31 = prim $and01C4 (_t0F1A, _t0F30);
        if _t0F31 {
          real _t0F32 = 0.1e1;
          real _t0F33 = 0.1e-8;
          real _t0F34 = prim +0017<$[]> (_t0F32, _t0F33);
          real _t0F35 = 0.1e1;
          real _t0F36 = 0.1e1;
          vec2 _t0F37 = [_t0F35, _t0F36];
          real _t0F38 = 0.e0;
          real _t0F39 = 0.e0;
          vec2 _t0F3A = [_t0F38, _t0F39];
          vec2 _t0F3B = prim -0026<$[2]> (_t0F3A, _t0882);
          real _t0F3C = 0.e0;
          real _t0F3D = 0.1e1;
          vec2 _t0F3E = [_t0F3C, _t0F3D];
          real _t0F3F = 0.e0;
          real _t0F40 = 0.1e1;
          vec2 _t0F41 = [_t0F3F, _t0F40];
          real _t0F42 = prim ×00BD (_t088D, _t0F41);
          vec2 _t0F43 = prim /0057<$[2]> (_t0F3E, _t0F42);
          real _t0F44 = prim ×00BD (_t0F3B, _t0F43);
          vec2 _t0F45 = prim *0038<$[2]> (_t088D, _t0F44);
          vec2 _t0F46 = prim +0017<$[2]> (_t0882, _t0F45);
          real _t0F47 = prim •00CE<$[2]; $[2]; $[]> (_t0F37, _t0F46);
          bool _t0F48 = prim >0080 (_t0F34, _t0F47);
          real _t0F49 = 0.1e-8;
          real _t0F4A = 0.1e-8;
          vec2 _t0F4B = [_t0F49, _t0F4A];
          real _t0F4C = 0.e0;
          real _t0F4D = 0.e0;
          vec2 _t0F4E = [_t0F4C, _t0F4D];
          vec2 _t0F4F = prim -0026<$[2]> (_t0F4E, _t0882);
          real _t0F50 = 0.e0;
          real _t0F51 = 0.1e1;
          vec2 _t0F52 = [_t0F50, _t0F51];
          real _t0F53 = 0.e0;
          real _t0F54 = 0.1e1;
          vec2 _t0F55 = [_t0F53, _t0F54];
          real _t0F56 = prim ×00BD (_t088D, _t0F55);
          vec2 _t0F57 = prim /0057<$[2]> (_t0F52, _t0F56);
          real _t0F58 = prim ×00BD (_t0F4F, _t0F57);
          vec2 _t0F59 = prim *0038<$[2]> (_t088D, _t0F58);
          vec2 _t0F5A = prim +0017<$[2]> (_t0882, _t0F59);
          vec2 _t0F5B = prim +0017<$[2]> (_t0F4B, _t0F5A);
          real _t0F5C = _t0F5B[0];
          real _t0F5D = -0.e0;
          bool _t0F5E = prim >0080 (_t0F5C, _t0F5D);
          real _t0F5F = 0.1e-8;
          real _t0F60 = 0.1e-8;
          vec2 _t0F61 = [_t0F5F, _t0F60];
          real _t0F62 = 0.e0;
          real _t0F63 = 0.e0;
          vec2 _t0F64 = [_t0F62, _t0F63];
          vec2 _t0F65 = prim -0026<$[2]> (_t0F64, _t0882);
          real _t0F66 = 0.e0;
          real _t0F67 = 0.1e1;
          vec2 _t0F68 = [_t0F66, _t0F67];
          real _t0F69 = 0.e0;
          real _t0F6A = 0.1e1;
          vec2 _t0F6B = [_t0F69, _t0F6A];
          real _t0F6C = prim ×00BD (_t088D, _t0F6B);
          vec2 _t0F6D = prim /0057<$[2]> (_t0F68, _t0F6C);
          real _t0F6E = prim ×00BD (_t0F65, _t0F6D);
          vec2 _t0F6F = prim *0038<$[2]> (_t088D, _t0F6E);
          vec2 _t0F70 = prim +0017<$[2]> (_t0882, _t0F6F);
          vec2 _t0F71 = prim +0017<$[2]> (_t0F61, _t0F70);
          real _t0F72 = _t0F71[1];
          real _t0F73 = -0.e0;
          bool _t0F74 = prim >0080 (_t0F72, _t0F73);
          bool _t0F75 = prim $and01C4 (_t0F5E, _t0F74);
          bool _t0F76 = prim $and01C4 (_t0F48, _t0F75);
          if _t0F76 {
            real _t0F77 = 0.e0;
            real _t0F78 = 0.e0;
            vec2 _t0F79 = [_t0F77, _t0F78];
            vec2 _t0F7A = prim -0026<$[2]> (_t0F79, _t0882);
            real _t0F7B = 0.e0;
            real _t0F7C = 0.1e1;
            vec2 _t0F7D = [_t0F7B, _t0F7C];
            real _t0F7E = 0.e0;
            real _t0F7F = 0.1e1;
            vec2 _t0F80 = [_t0F7E, _t0F7F];
            real _t0F81 = prim ×00BD (_t088D, _t0F80);
            vec2 _t0F82 = prim /0057<$[2]> (_t0F7D, _t0F81);
            time0E92 = prim ×00BD (_t0F7A, _t0F82);
            face0E93 = 1;
          }
        }
        real _t0F83 = 0.e0;
        real _t0F84 = 0.e0;
        vec2 _t0F85 = [_t0F83, _t0F84];
        vec2 _t0F86 = prim -0026<$[2]> (_t0F85, _t0882);
        real _t0F87 = 0.1e1;
        real _t0F88 = 0.e0;
        vec2 _t0F89 = [_t0F87, _t0F88];
        real _t0F8A = 0.1e1;
        real _t0F8B = 0.e0;
        vec2 _t0F8C = [_t0F8A, _t0F8B];
        real _t0F8D = prim ×00BD (_t088D, _t0F8C);
        vec2 _t0F8E = prim /0057<$[2]> (_t0F89, _t0F8D);
        real _t0F8F = prim ×00BD (_t0F86, _t0F8E);
        real _t0F90 = -0.1e-15;
        bool _t0F91 = prim >=007E (_t0F8F, _t0F90);
        real _t0F92 = 0.e0;
        real _t0F93 = 0.e0;
        vec2 _t0F94 = [_t0F92, _t0F93];
        vec2 _t0F95 = prim -0026<$[2]> (_t0F94, _t0882);
        real _t0F96 = 0.1e1;
        real _t0F97 = 0.e0;
        vec2 _t0F98 = [_t0F96, _t0F97];
        real _t0F99 = 0.1e1;
        real _t0F9A = 0.e0;
        vec2 _t0F9B = [_t0F99, _t0F9A];
        real _t0F9C = prim ×00BD (_t088D, _t0F9B);
        vec2 _t0F9D = prim /0057<$[2]> (_t0F98, _t0F9C);
        real _t0F9E = prim ×00BD (_t0F95, _t0F9D);
        bool _t0F9F = prim >0080 (time0E92, _t0F9E);
        real _t0FA0 = 0.1e1;
        real _t0FA1 = 0.e0;
        vec2 _t0FA2 = [_t0FA0, _t0FA1];
        real _t0FA3 = prim ×00BD (_t088D, _t0FA2);
        real _t0FA4 = prim |()|00B5<$[]> (_t0FA3);
        real _t0FA5 = 0.1e-20;
        bool _t0FA6 = prim >=007E (_t0FA4, _t0FA5);
        bool _t0FA7 = prim $and01C4 (_t0F9F, _t0FA6);
        bool _t0FA8 = prim $and01C4 (_t0F91, _t0FA7);
        if _t0FA8 {
          real _t0FA9 = 0.1e1;
          real _t0FAA = 0.1e-8;
          real _t0FAB = prim +0017<$[]> (_t0FA9, _t0FAA);
          real _t0FAC = 0.1e1;
          real _t0FAD = 0.1e1;
          vec2 _t0FAE = [_t0FAC, _t0FAD];
          real _t0FAF = 0.e0;
          real _t0FB0 = 0.e0;
          vec2 _t0FB1 = [_t0FAF, _t0FB0];
          vec2 _t0FB2 = prim -0026<$[2]> (_t0FB1, _t0882);
          real _t0FB3 = 0.1e1;
          real _t0FB4 = 0.e0;
          vec2 _t0FB5 = [_t0FB3, _t0FB4];
          real _t0FB6 = 0.1e1;
          real _t0FB7 = 0.e0;
          vec2 _t0FB8 = [_t0FB6, _t0FB7];
          real _t0FB9 = prim ×00BD (_t088D, _t0FB8);
          vec2 _t0FBA = prim /0057<$[2]> (_t0FB5, _t0FB9);
          real _t0FBB = prim ×00BD (_t0FB2, _t0FBA);
          vec2 _t0FBC = prim *0038<$[2]> (_t088D, _t0FBB);
          vec2 _t0FBD = prim +0017<$[2]> (_t0882, _t0FBC);
          real _t0FBE = prim •00CE<$[2]; $[2]; $[]> (_t0FAE, _t0FBD);
          bool _t0FBF = prim >0080 (_t0FAB, _t0FBE);
          real _t0FC0 = 0.1e-8;
          real _t0FC1 = 0.1e-8;
          vec2 _t0FC2 = [_t0FC0, _t0FC1];
          real _t0FC3 = 0.e0;
          real _t0FC4 = 0.e0;
          vec2 _t0FC5 = [_t0FC3, _t0FC4];
          vec2 _t0FC6 = prim -0026<$[2]> (_t0FC5, _t0882);
          real _t0FC7 = 0.1e1;
          real _t0FC8 = 0.e0;
          vec2 _t0FC9 = [_t0FC7, _t0FC8];
          real _t0FCA = 0.1e1;
          real _t0FCB = 0.e0;
          vec2 _t0FCC = [_t0FCA, _t0FCB];
          real _t0FCD = prim ×00BD (_t088D, _t0FCC);
          vec2 _t0FCE = prim /0057<$[2]> (_t0FC9, _t0FCD);
          real _t0FCF = prim ×00BD (_t0FC6, _t0FCE);
          vec2 _t0FD0 = prim *0038<$[2]> (_t088D, _t0FCF);
          vec2 _t0FD1 = prim +0017<$[2]> (_t0882, _t0FD0);
          vec2 _t0FD2 = prim +0017<$[2]> (_t0FC2, _t0FD1);
          real _t0FD3 = _t0FD2[0];
          real _t0FD4 = -0.e0;
          bool _t0FD5 = prim >0080 (_t0FD3, _t0FD4);
          real _t0FD6 = 0.1e-8;
          real _t0FD7 = 0.1e-8;
          vec2 _t0FD8 = [_t0FD6, _t0FD7];
          real _t0FD9 = 0.e0;
          real _t0FDA = 0.e0;
          vec2 _t0FDB = [_t0FD9, _t0FDA];
          vec2 _t0FDC = prim -0026<$[2]> (_t0FDB, _t0882);
          real _t0FDD = 0.1e1;
          real _t0FDE = 0.e0;
          vec2 _t0FDF = [_t0FDD, _t0FDE];
          real _t0FE0 = 0.1e1;
          real _t0FE1 = 0.e0;
          vec2 _t0FE2 = [_t0FE0, _t0FE1];
          real _t0FE3 = prim ×00BD (_t088D, _t0FE2);
          vec2 _t0FE4 = prim /0057<$[2]> (_t0FDF, _t0FE3);
          real _t0FE5 = prim ×00BD (_t0FDC, _t0FE4);
          vec2 _t0FE6 = prim *0038<$[2]> (_t088D, _t0FE5);
          vec2 _t0FE7 = prim +0017<$[2]> (_t0882, _t0FE6);
          vec2 _t0FE8 = prim +0017<$[2]> (_t0FD8, _t0FE7);
          real _t0FE9 = _t0FE8[1];
          real _t0FEA = -0.e0;
          bool _t0FEB = prim >0080 (_t0FE9, _t0FEA);
          bool _t0FEC = prim $and01C4 (_t0FD5, _t0FEB);
          bool _t0FED = prim $and01C4 (_t0FBF, _t0FEC);
          if _t0FED {
            real _t0FEE = 0.e0;
            real _t0FEF = 0.e0;
            vec2 _t0FF0 = [_t0FEE, _t0FEF];
            vec2 _t0FF1 = prim -0026<$[2]> (_t0FF0, _t0882);
            real _t0FF2 = 0.1e1;
            real _t0FF3 = 0.e0;
            vec2 _t0FF4 = [_t0FF2, _t0FF3];
            real _t0FF5 = 0.1e1;
            real _t0FF6 = 0.e0;
            vec2 _t0FF7 = [_t0FF5, _t0FF6];
            real _t0FF8 = prim ×00BD (_t088D, _t0FF7);
            vec2 _t0FF9 = prim /0057<$[2]> (_t0FF4, _t0FF8);
            time0E92 = prim ×00BD (_t0FF1, _t0FF9);
            face0E93 = 2;
          }
        }
        int _t0FFA = -1;
        bool _t0FFB = prim !=0086 (face0E93, _t0FFA);
        if _t0FFB {
          real _t0FFC = 0.e0;
          real _t0FFD = prim max0125 (time0E92, _t0FFC);
          real _t0FFE = (real)face0E93;
          vec2 _t0FFF = [_t0FFD, _t0FFE];
          _t088E = _t0FFF;
        } else {
          real _t1000 = -0.1e1;
          real _t1001 = -0.1e1;
          vec2 _t1002 = [_t1000, _t1001];
          _t088E = _t1002;
        }
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2;
          real time0D21 = +inf;
          int face0D22 = -1;
          real _t0D24 = 0.1e1;
          real _t0D25 = 0.e0;
          vec2 _t0D26 = [_t0D24, _t0D25];
          vec2 _t0D27 = prim -0026<$[2]> (_t0D26, _t08C6);
          real _t0D28 = -0.1e1;
          real _t0D29 = 0.1e1;
          vec2 _t0D2A = [_t0D28, _t0D29];
          real _t0D2B = -0.1e1;
          real _t0D2C = 0.1e1;
          vec2 _t0D2D = [_t0D2B, _t0D2C];
          real _t0D2E = prim ×00BD (_t08D1, _t0D2D);
          vec2 _t0D2F = prim /0057<$[2]> (_t0D2A, _t0D2E);
          real _t0D30 = prim ×00BD (_t0D27, _t0D2F);
          real _t0D31 = -0.1e-15;
          bool _t0D32 = prim >=007E (_t0D30, _t0D31);
          real _t0D33 = 0.1e1;
          real _t0D34 = 0.e0;
          vec2 _t0D35 = [_t0D33, _t0D34];
          vec2 _t0D36 = prim -0026<$[2]> (_t0D35, _t08C6);
          real _t0D37 = -0.1e1;
          real _t0D38 = 0.1e1;
          vec2 _t0D39 = [_t0D37, _t0D38];
          real _t0D3A = -0.1e1;
          real _t0D3B = 0.1e1;
          vec2 _t0D3C = [_t0D3A, _t0D3B];
          real _t0D3D = prim ×00BD (_t08D1, _t0D3C);
          vec2 _t0D3E = prim /0057<$[2]> (_t0D39, _t0D3D);
          real _t0D3F = prim ×00BD (_t0D36, _t0D3E);
          bool _t0D40 = prim >0080 (time0D21, _t0D3F);
          real _t0D41 = -0.1e1;
          real _t0D42 = 0.1e1;
          vec2 _t0D43 = [_t0D41, _t0D42];
          real _t0D44 = prim ×00BD (_t08D1, _t0D43);
          real _t0D45 = prim |()|00B5<$[]> (_t0D44);
          real _t0D46 = 0.1e-20;
          bool _t0D47 = prim >=007E (_t0D45, _t0D46);
          bool _t0D48 = prim $and01C4 (_t0D40, _t0D47);
          bool _t0D49 = prim $and01C4 (_t0D32, _t0D48);
          if _t0D49 {
            real _t0D4A = 0.1e1;
            real _t0D4B = 0.1e-8;
            real _t0D4C = prim +0017<$[]> (_t0D4A, _t0D4B);
            real _t0D4D = 0.1e1;
            real _t0D4E = 0.1e1;
            vec2 _t0D4F = [_t0D4D, _t0D4E];
            real _t0D50 = 0.1e1;
            real _t0D51 = 0.e0;
            vec2 _t0D52 = [_t0D50, _t0D51];
            vec2 _t0D53 = prim -0026<$[2]> (_t0D52, _t08C6);
            real _t0D54 = -0.1e1;
            real _t0D55 = 0.1e1;
            vec2 _t0D56 = [_t0D54, _t0D55];
            real _t0D57 = -0.1e1;
            real _t0D58 = 0.1e1;
            vec2 _t0D59 = [_t0D57, _t0D58];
            real _t0D5A = prim ×00BD (_t08D1, _t0D59);
            vec2 _t0D5B = prim /0057<$[2]> (_t0D56, _t0D5A);
            real _t0D5C = prim ×00BD (_t0D53, _t0D5B);
            vec2 _t0D5D = prim *0038<$[2]> (_t08D1, _t0D5C);
            vec2 _t0D5E = prim +0017<$[2]> (_t08C6, _t0D5D);
            real _t0D5F = prim •00CE<$[2]; $[2]; $[]> (_t0D4F, _t0D5E);
            bool _t0D60 = prim >0080 (_t0D4C, _t0D5F);
            real _t0D61 = 0.1e-8;
            real _t0D62 = 0.1e-8;
            vec2 _t0D63 = [_t0D61, _t0D62];
            real _t0D64 = 0.1e1;
            real _t0D65 = 0.e0;
            vec2 _t0D66 = [_t0D64, _t0D65];
            vec2 _t0D67 = prim -0026<$[2]> (_t0D66, _t08C6);
            real _t0D68 = -0.1e1;
            real _t0D69 = 0.1e1;
            vec2 _t0D6A = [_t0D68, _t0D69];
            real _t0D6B = -0.1e1;
            real _t0D6C = 0.1e1;
            vec2 _t0D6D = [_t0D6B, _t0D6C];
            real _t0D6E = prim ×00BD (_t08D1, _t0D6D);
            vec2 _t0D6F = prim /0057<$[2]> (_t0D6A, _t0D6E);
            real _t0D70 = prim ×00BD (_t0D67, _t0D6F);
            vec2 _t0D71 = prim *0038<$[2]> (_t08D1, _t0D70);
            vec2 _t0D72 = prim +0017<$[2]> (_t08C6, _t0D71);
            vec2 _t0D73 = prim +0017<$[2]> (_t0D63, _t0D72);
            real _t0D74 = _t0D73[0];
            real _t0D75 = -0.e0;
            bool _t0D76 = prim >0080 (_t0D74, _t0D75);
            real _t0D77 = 0.1e-8;
            real _t0D78 = 0.1e-8;
            vec2 _t0D79 = [_t0D77, _t0D78];
            real _t0D7A = 0.1e1;
            real _t0D7B = 0.e0;
            vec2 _t0D7C = [_t0D7A, _t0D7B];
            vec2 _t0D7D = prim -0026<$[2]> (_t0D7C, _t08C6);
            real _t0D7E = -0.1e1;
            real _t0D7F = 0.1e1;
            vec2 _t0D80 = [_t0D7E, _t0D7F];
            real _t0D81 = -0.1e1;
            real _t0D82 = 0.1e1;
            vec2 _t0D83 = [_t0D81, _t0D82];
            real _t0D84 = prim ×00BD (_t08D1, _t0D83);
            vec2 _t0D85 = prim /0057<$[2]> (_t0D80, _t0D84);
            real _t0D86 = prim ×00BD (_t0D7D, _t0D85);
            vec2 _t0D87 = prim *0038<$[2]> (_t08D1, _t0D86);
            vec2 _t0D88 = prim +0017<$[2]> (_t08C6, _t0D87);
            vec2 _t0D89 = prim +0017<$[2]> (_t0D79, _t0D88);
            real _t0D8A = _t0D89[1];
            real _t0D8B = -0.e0;
            bool _t0D8C = prim >0080 (_t0D8A, _t0D8B);
            bool _t0D8D = prim $and01C4 (_t0D76, _t0D8C);
            bool _t0D8E = prim $and01C4 (_t0D60, _t0D8D);
            if _t0D8E {
              real _t0D8F = 0.1e1;
              real _t0D90 = 0.e0;
              vec2 _t0D91 = [_t0D8F, _t0D90];
              vec2 _t0D92 = prim -0026<$[2]> (_t0D91, _t08C6);
              real _t0D93 = -0.1e1;
              real _t0D94 = 0.1e1;
              vec2 _t0D95 = [_t0D93, _t0D94];
              real _t0D96 = -0.1e1;
              real _t0D97 = 0.1e1;
              vec2 _t0D98 = [_t0D96, _t0D97];
              real _t0D99 = prim ×00BD (_t08D1, _t0D98);
              vec2 _t0D9A = prim /0057<$[2]> (_t0D95, _t0D99);
              time0D21 = prim ×00BD (_t0D92, _t0D9A);
              face0D22 = 0;
            }
          }
          real _t0D9B = 0.e0;
          real _t0D9C = 0.e0;
          vec2 _t0D9D = [_t0D9B, _t0D9C];
          vec2 _t0D9E = prim -0026<$[2]> (_t0D9D, _t08C6);
          real _t0D9F = 0.e0;
          real _t0DA0 = 0.1e1;
          vec2 _t0DA1 = [_t0D9F, _t0DA0];
          real _t0DA2 = 0.e0;
          real _t0DA3 = 0.1e1;
          vec2 _t0DA4 = [_t0DA2, _t0DA3];
          real _t0DA5 = prim ×00BD (_t08D1, _t0DA4);
          vec2 _t0DA6 = prim /0057<$[2]> (_t0DA1, _t0DA5);
          real _t0DA7 = prim ×00BD (_t0D9E, _t0DA6);
          real _t0DA8 = -0.1e-15;
          bool _t0DA9 = prim >=007E (_t0DA7, _t0DA8);
          real _t0DAA = 0.e0;
          real _t0DAB = 0.e0;
          vec2 _t0DAC = [_t0DAA, _t0DAB];
          vec2 _t0DAD = prim -0026<$[2]> (_t0DAC, _t08C6);
          real _t0DAE = 0.e0;
          real _t0DAF = 0.1e1;
          vec2 _t0DB0 = [_t0DAE, _t0DAF];
          real _t0DB1 = 0.e0;
          real _t0DB2 = 0.1e1;
          vec2 _t0DB3 = [_t0DB1, _t0DB2];
          real _t0DB4 = prim ×00BD (_t08D1, _t0DB3);
          vec2 _t0DB5 = prim /0057<$[2]> (_t0DB0, _t0DB4);
          real _t0DB6 = prim ×00BD (_t0DAD, _t0DB5);
          bool _t0DB7 = prim >0080 (time0D21, _t0DB6);
          real _t0DB8 = 0.e0;
          real _t0DB9 = 0.1e1;
          vec2 _t0DBA = [_t0DB8, _t0DB9];
          real _t0DBB = prim ×00BD (_t08D1, _t0DBA);
          real _t0DBC = prim |()|00B5<$[]> (_t0DBB);
          real _t0DBD = 0.1e-20;
          bool _t0DBE = prim >=007E (_t0DBC, _t0DBD);
          bool _t0DBF = prim $and01C4 (_t0DB7, _t0DBE);
          bool _t0DC0 = prim $and01C4 (_t0DA9, _t0DBF);
          if _t0DC0 {
            real _t0DC1 = 0.1e1;
            real _t0DC2 = 0.1e-8;
            real _t0DC3 = prim +0017<$[]> (_t0DC1, _t0DC2);
            real _t0DC4 = 0.1e1;
            real _t0DC5 = 0.1e1;
            vec2 _t0DC6 = [_t0DC4, _t0DC5];
            real _t0DC7 = 0.e0;
            real _t0DC8 = 0.e0;
            vec2 _t0DC9 = [_t0DC7, _t0DC8];
            vec2 _t0DCA = prim -0026<$[2]> (_t0DC9, _t08C6);
            real _t0DCB = 0.e0;
            real _t0DCC = 0.1e1;
            vec2 _t0DCD = [_t0DCB, _t0DCC];
            real _t0DCE = 0.e0;
            real _t0DCF = 0.1e1;
            vec2 _t0DD0 = [_t0DCE, _t0DCF];
            real _t0DD1 = prim ×00BD (_t08D1, _t0DD0);
            vec2 _t0DD2 = prim /0057<$[2]> (_t0DCD, _t0DD1);
            real _t0DD3 = prim ×00BD (_t0DCA, _t0DD2);
            vec2 _t0DD4 = prim *0038<$[2]> (_t08D1, _t0DD3);
            vec2 _t0DD5 = prim +0017<$[2]> (_t08C6, _t0DD4);
            real _t0DD6 = prim •00CE<$[2]; $[2]; $[]> (_t0DC6, _t0DD5);
            bool _t0DD7 = prim >0080 (_t0DC3, _t0DD6);
            real _t0DD8 = 0.1e-8;
            real _t0DD9 = 0.1e-8;
            vec2 _t0DDA = [_t0DD8, _t0DD9];
            real _t0DDB = 0.e0;
            real _t0DDC = 0.e0;
            vec2 _t0DDD = [_t0DDB, _t0DDC];
            vec2 _t0DDE = prim -0026<$[2]> (_t0DDD, _t08C6);
            real _t0DDF = 0.e0;
            real _t0DE0 = 0.1e1;
            vec2 _t0DE1 = [_t0DDF, _t0DE0];
            real _t0DE2 = 0.e0;
            real _t0DE3 = 0.1e1;
            vec2 _t0DE4 = [_t0DE2, _t0DE3];
            real _t0DE5 = prim ×00BD (_t08D1, _t0DE4);
            vec2 _t0DE6 = prim /0057<$[2]> (_t0DE1, _t0DE5);
            real _t0DE7 = prim ×00BD (_t0DDE, _t0DE6);
            vec2 _t0DE8 = prim *0038<$[2]> (_t08D1, _t0DE7);
            vec2 _t0DE9 = prim +0017<$[2]> (_t08C6, _t0DE8);
            vec2 _t0DEA = prim +0017<$[2]> (_t0DDA, _t0DE9);
            real _t0DEB = _t0DEA[0];
            real _t0DEC = -0.e0;
            bool _t0DED = prim >0080 (_t0DEB, _t0DEC);
            real _t0DEE = 0.1e-8;
            real _t0DEF = 0.1e-8;
            vec2 _t0DF0 = [_t0DEE, _t0DEF];
            real _t0DF1 = 0.e0;
            real _t0DF2 = 0.e0;
            vec2 _t0DF3 = [_t0DF1, _t0DF2];
            vec2 _t0DF4 = prim -0026<$[2]> (_t0DF3, _t08C6);
            real _t0DF5 = 0.e0;
            real _t0DF6 = 0.1e1;
            vec2 _t0DF7 = [_t0DF5, _t0DF6];
            real _t0DF8 = 0.e0;
            real _t0DF9 = 0.1e1;
            vec2 _t0DFA = [_t0DF8, _t0DF9];
            real _t0DFB = prim ×00BD (_t08D1, _t0DFA);
            vec2 _t0DFC = prim /0057<$[2]> (_t0DF7, _t0DFB);
            real _t0DFD = prim ×00BD (_t0DF4, _t0DFC);
            vec2 _t0DFE = prim *0038<$[2]> (_t08D1, _t0DFD);
            vec2 _t0DFF = prim +0017<$[2]> (_t08C6, _t0DFE);
            vec2 _t0E00 = prim +0017<$[2]> (_t0DF0, _t0DFF);
            real _t0E01 = _t0E00[1];
            real _t0E02 = -0.e0;
            bool _t0E03 = prim >0080 (_t0E01, _t0E02);
            bool _t0E04 = prim $and01C4 (_t0DED, _t0E03);
            bool _t0E05 = prim $and01C4 (_t0DD7, _t0E04);
            if _t0E05 {
              real _t0E06 = 0.e0;
              real _t0E07 = 0.e0;
              vec2 _t0E08 = [_t0E06, _t0E07];
              vec2 _t0E09 = prim -0026<$[2]> (_t0E08, _t08C6);
              real _t0E0A = 0.e0;
              real _t0E0B = 0.1e1;
              vec2 _t0E0C = [_t0E0A, _t0E0B];
              real _t0E0D = 0.e0;
              real _t0E0E = 0.1e1;
              vec2 _t0E0F = [_t0E0D, _t0E0E];
              real _t0E10 = prim ×00BD (_t08D1, _t0E0F);
              vec2 _t0E11 = prim /0057<$[2]> (_t0E0C, _t0E10);
              time0D21 = prim ×00BD (_t0E09, _t0E11);
              face0D22 = 1;
            }
          }
          real _t0E12 = 0.e0;
          real _t0E13 = 0.e0;
          vec2 _t0E14 = [_t0E12, _t0E13];
          vec2 _t0E15 = prim -0026<$[2]> (_t0E14, _t08C6);
          real _t0E16 = 0.1e1;
          real _t0E17 = 0.e0;
          vec2 _t0E18 = [_t0E16, _t0E17];
          real _t0E19 = 0.1e1;
          real _t0E1A = 0.e0;
          vec2 _t0E1B = [_t0E19, _t0E1A];
          real _t0E1C = prim ×00BD (_t08D1, _t0E1B);
          vec2 _t0E1D = prim /0057<$[2]> (_t0E18, _t0E1C);
          real _t0E1E = prim ×00BD (_t0E15, _t0E1D);
          real _t0E1F = -0.1e-15;
          bool _t0E20 = prim >=007E (_t0E1E, _t0E1F);
          real _t0E21 = 0.e0;
          real _t0E22 = 0.e0;
          vec2 _t0E23 = [_t0E21, _t0E22];
          vec2 _t0E24 = prim -0026<$[2]> (_t0E23, _t08C6);
          real _t0E25 = 0.1e1;
          real _t0E26 = 0.e0;
          vec2 _t0E27 = [_t0E25, _t0E26];
          real _t0E28 = 0.1e1;
          real _t0E29 = 0.e0;
          vec2 _t0E2A = [_t0E28, _t0E29];
          real _t0E2B = prim ×00BD (_t08D1, _t0E2A);
          vec2 _t0E2C = prim /0057<$[2]> (_t0E27, _t0E2B);
          real _t0E2D = prim ×00BD (_t0E24, _t0E2C);
          bool _t0E2E = prim >0080 (time0D21, _t0E2D);
          real _t0E2F = 0.1e1;
          real _t0E30 = 0.e0;
          vec2 _t0E31 = [_t0E2F, _t0E30];
          real _t0E32 = prim ×00BD (_t08D1, _t0E31);
          real _t0E33 = prim |()|00B5<$[]> (_t0E32);
          real _t0E34 = 0.1e-20;
          bool _t0E35 = prim >=007E (_t0E33, _t0E34);
          bool _t0E36 = prim $and01C4 (_t0E2E, _t0E35);
          bool _t0E37 = prim $and01C4 (_t0E20, _t0E36);
          if _t0E37 {
            real _t0E38 = 0.1e1;
            real _t0E39 = 0.1e-8;
            real _t0E3A = prim +0017<$[]> (_t0E38, _t0E39);
            real _t0E3B = 0.1e1;
            real _t0E3C = 0.1e1;
            vec2 _t0E3D = [_t0E3B, _t0E3C];
            real _t0E3E = 0.e0;
            real _t0E3F = 0.e0;
            vec2 _t0E40 = [_t0E3E, _t0E3F];
            vec2 _t0E41 = prim -0026<$[2]> (_t0E40, _t08C6);
            real _t0E42 = 0.1e1;
            real _t0E43 = 0.e0;
            vec2 _t0E44 = [_t0E42, _t0E43];
            real _t0E45 = 0.1e1;
            real _t0E46 = 0.e0;
            vec2 _t0E47 = [_t0E45, _t0E46];
            real _t0E48 = prim ×00BD (_t08D1, _t0E47);
            vec2 _t0E49 = prim /0057<$[2]> (_t0E44, _t0E48);
            real _t0E4A = prim ×00BD (_t0E41, _t0E49);
            vec2 _t0E4B = prim *0038<$[2]> (_t08D1, _t0E4A);
            vec2 _t0E4C = prim +0017<$[2]> (_t08C6, _t0E4B);
            real _t0E4D = prim •00CE<$[2]; $[2]; $[]> (_t0E3D, _t0E4C);
            bool _t0E4E = prim >0080 (_t0E3A, _t0E4D);
            real _t0E4F = 0.1e-8;
            real _t0E50 = 0.1e-8;
            vec2 _t0E51 = [_t0E4F, _t0E50];
            real _t0E52 = 0.e0;
            real _t0E53 = 0.e0;
            vec2 _t0E54 = [_t0E52, _t0E53];
            vec2 _t0E55 = prim -0026<$[2]> (_t0E54, _t08C6);
            real _t0E56 = 0.1e1;
            real _t0E57 = 0.e0;
            vec2 _t0E58 = [_t0E56, _t0E57];
            real _t0E59 = 0.1e1;
            real _t0E5A = 0.e0;
            vec2 _t0E5B = [_t0E59, _t0E5A];
            real _t0E5C = prim ×00BD (_t08D1, _t0E5B);
            vec2 _t0E5D = prim /0057<$[2]> (_t0E58, _t0E5C);
            real _t0E5E = prim ×00BD (_t0E55, _t0E5D);
            vec2 _t0E5F = prim *0038<$[2]> (_t08D1, _t0E5E);
            vec2 _t0E60 = prim +0017<$[2]> (_t08C6, _t0E5F);
            vec2 _t0E61 = prim +0017<$[2]> (_t0E51, _t0E60);
            real _t0E62 = _t0E61[0];
            real _t0E63 = -0.e0;
            bool _t0E64 = prim >0080 (_t0E62, _t0E63);
            real _t0E65 = 0.1e-8;
            real _t0E66 = 0.1e-8;
            vec2 _t0E67 = [_t0E65, _t0E66];
            real _t0E68 = 0.e0;
            real _t0E69 = 0.e0;
            vec2 _t0E6A = [_t0E68, _t0E69];
            vec2 _t0E6B = prim -0026<$[2]> (_t0E6A, _t08C6);
            real _t0E6C = 0.1e1;
            real _t0E6D = 0.e0;
            vec2 _t0E6E = [_t0E6C, _t0E6D];
            real _t0E6F = 0.1e1;
            real _t0E70 = 0.e0;
            vec2 _t0E71 = [_t0E6F, _t0E70];
            real _t0E72 = prim ×00BD (_t08D1, _t0E71);
            vec2 _t0E73 = prim /0057<$[2]> (_t0E6E, _t0E72);
            real _t0E74 = prim ×00BD (_t0E6B, _t0E73);
            vec2 _t0E75 = prim *0038<$[2]> (_t08D1, _t0E74);
            vec2 _t0E76 = prim +0017<$[2]> (_t08C6, _t0E75);
            vec2 _t0E77 = prim +0017<$[2]> (_t0E67, _t0E76);
            real _t0E78 = _t0E77[1];
            real _t0E79 = -0.e0;
            bool _t0E7A = prim >0080 (_t0E78, _t0E79);
            bool _t0E7B = prim $and01C4 (_t0E64, _t0E7A);
            bool _t0E7C = prim $and01C4 (_t0E4E, _t0E7B);
            if _t0E7C {
              real _t0E7D = 0.e0;
              real _t0E7E = 0.e0;
              vec2 _t0E7F = [_t0E7D, _t0E7E];
              vec2 _t0E80 = prim -0026<$[2]> (_t0E7F, _t08C6);
              real _t0E81 = 0.1e1;
              real _t0E82 = 0.e0;
              vec2 _t0E83 = [_t0E81, _t0E82];
              real _t0E84 = 0.1e1;
              real _t0E85 = 0.e0;
              vec2 _t0E86 = [_t0E84, _t0E85];
              real _t0E87 = prim ×00BD (_t08D1, _t0E86);
              vec2 _t0E88 = prim /0057<$[2]> (_t0E83, _t0E87);
              time0D21 = prim ×00BD (_t0E80, _t0E88);
              face0D22 = 2;
            }
          }
          int _t0E89 = -1;
          bool _t0E8A = prim !=0086 (face0D22, _t0E89);
          if _t0E8A {
            real _t0E8B = 0.e0;
            real _t0E8C = prim max0125 (time0D21, _t0E8B);
            real _t0E8D = (real)face0D22;
            vec2 _t0E8E = [_t0E8C, _t0E8D];
            _t08D2 = _t0E8E;
          } else {
            real _t0E8F = -0.1e1;
            real _t0E90 = -0.1e1;
            vec2 _t0E91 = [_t0E8F, _t0E90];
            _t08D2 = _t0E91;
          }
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5;
          real time0BB0 = +inf;
          int face0BB1 = -1;
          real _t0BB3 = 0.1e1;
          real _t0BB4 = 0.e0;
          vec2 _t0BB5 = [_t0BB3, _t0BB4];
          vec2 _t0BB6 = prim -0026<$[2]> (_t0BB5, _t08E9);
          real _t0BB7 = -0.1e1;
          real _t0BB8 = 0.1e1;
          vec2 _t0BB9 = [_t0BB7, _t0BB8];
          real _t0BBA = -0.1e1;
          real _t0BBB = 0.1e1;
          vec2 _t0BBC = [_t0BBA, _t0BBB];
          real _t0BBD = prim ×00BD (_t08F4, _t0BBC);
          vec2 _t0BBE = prim /0057<$[2]> (_t0BB9, _t0BBD);
          real _t0BBF = prim ×00BD (_t0BB6, _t0BBE);
          real _t0BC0 = -0.1e-15;
          bool _t0BC1 = prim >=007E (_t0BBF, _t0BC0);
          real _t0BC2 = 0.1e1;
          real _t0BC3 = 0.e0;
          vec2 _t0BC4 = [_t0BC2, _t0BC3];
          vec2 _t0BC5 = prim -0026<$[2]> (_t0BC4, _t08E9);
          real _t0BC6 = -0.1e1;
          real _t0BC7 = 0.1e1;
          vec2 _t0BC8 = [_t0BC6, _t0BC7];
          real _t0BC9 = -0.1e1;
          real _t0BCA = 0.1e1;
          vec2 _t0BCB = [_t0BC9, _t0BCA];
          real _t0BCC = prim ×00BD (_t08F4, _t0BCB);
          vec2 _t0BCD = prim /0057<$[2]> (_t0BC8, _t0BCC);
          real _t0BCE = prim ×00BD (_t0BC5, _t0BCD);
          bool _t0BCF = prim >0080 (time0BB0, _t0BCE);
          real _t0BD0 = -0.1e1;
          real _t0BD1 = 0.1e1;
          vec2 _t0BD2 = [_t0BD0, _t0BD1];
          real _t0BD3 = prim ×00BD (_t08F4, _t0BD2);
          real _t0BD4 = prim |()|00B5<$[]> (_t0BD3);
          real _t0BD5 = 0.1e-20;
          bool _t0BD6 = prim >=007E (_t0BD4, _t0BD5);
          bool _t0BD7 = prim $and01C4 (_t0BCF, _t0BD6);
          bool _t0BD8 = prim $and01C4 (_t0BC1, _t0BD7);
          if _t0BD8 {
            real _t0BD9 = 0.1e1;
            real _t0BDA = 0.1e-8;
            real _t0BDB = prim +0017<$[]> (_t0BD9, _t0BDA);
            real _t0BDC = 0.1e1;
            real _t0BDD = 0.1e1;
            vec2 _t0BDE = [_t0BDC, _t0BDD];
            real _t0BDF = 0.1e1;
            real _t0BE0 = 0.e0;
            vec2 _t0BE1 = [_t0BDF, _t0BE0];
            vec2 _t0BE2 = prim -0026<$[2]> (_t0BE1, _t08E9);
            real _t0BE3 = -0.1e1;
            real _t0BE4 = 0.1e1;
            vec2 _t0BE5 = [_t0BE3, _t0BE4];
            real _t0BE6 = -0.1e1;
            real _t0BE7 = 0.1e1;
            vec2 _t0BE8 = [_t0BE6, _t0BE7];
            real _t0BE9 = prim ×00BD (_t08F4, _t0BE8);
            vec2 _t0BEA = prim /0057<$[2]> (_t0BE5, _t0BE9);
            real _t0BEB = prim ×00BD (_t0BE2, _t0BEA);
            vec2 _t0BEC = prim *0038<$[2]> (_t08F4, _t0BEB);
            vec2 _t0BED = prim +0017<$[2]> (_t08E9, _t0BEC);
            real _t0BEE = prim •00CE<$[2]; $[2]; $[]> (_t0BDE, _t0BED);
            bool _t0BEF = prim >0080 (_t0BDB, _t0BEE);
            real _t0BF0 = 0.1e-8;
            real _t0BF1 = 0.1e-8;
            vec2 _t0BF2 = [_t0BF0, _t0BF1];
            real _t0BF3 = 0.1e1;
            real _t0BF4 = 0.e0;
            vec2 _t0BF5 = [_t0BF3, _t0BF4];
            vec2 _t0BF6 = prim -0026<$[2]> (_t0BF5, _t08E9);
            real _t0BF7 = -0.1e1;
            real _t0BF8 = 0.1e1;
            vec2 _t0BF9 = [_t0BF7, _t0BF8];
            real _t0BFA = -0.1e1;
            real _t0BFB = 0.1e1;
            vec2 _t0BFC = [_t0BFA, _t0BFB];
            real _t0BFD = prim ×00BD (_t08F4, _t0BFC);
            vec2 _t0BFE = prim /0057<$[2]> (_t0BF9, _t0BFD);
            real _t0BFF = prim ×00BD (_t0BF6, _t0BFE);
            vec2 _t0C00 = prim *0038<$[2]> (_t08F4, _t0BFF);
            vec2 _t0C01 = prim +0017<$[2]> (_t08E9, _t0C00);
            vec2 _t0C02 = prim +0017<$[2]> (_t0BF2, _t0C01);
            real _t0C03 = _t0C02[0];
            real _t0C04 = -0.e0;
            bool _t0C05 = prim >0080 (_t0C03, _t0C04);
            real _t0C06 = 0.1e-8;
            real _t0C07 = 0.1e-8;
            vec2 _t0C08 = [_t0C06, _t0C07];
            real _t0C09 = 0.1e1;
            real _t0C0A = 0.e0;
            vec2 _t0C0B = [_t0C09, _t0C0A];
            vec2 _t0C0C = prim -0026<$[2]> (_t0C0B, _t08E9);
            real _t0C0D = -0.1e1;
            real _t0C0E = 0.1e1;
            vec2 _t0C0F = [_t0C0D, _t0C0E];
            real _t0C10 = -0.1e1;
            real _t0C11 = 0.1e1;
            vec2 _t0C12 = [_t0C10, _t0C11];
            real _t0C13 = prim ×00BD (_t08F4, _t0C12);
            vec2 _t0C14 = prim /0057<$[2]> (_t0C0F, _t0C13);
            real _t0C15 = prim ×00BD (_t0C0C, _t0C14);
            vec2 _t0C16 = prim *0038<$[2]> (_t08F4, _t0C15);
            vec2 _t0C17 = prim +0017<$[2]> (_t08E9, _t0C16);
            vec2 _t0C18 = prim +0017<$[2]> (_t0C08, _t0C17);
            real _t0C19 = _t0C18[1];
            real _t0C1A = -0.e0;
            bool _t0C1B = prim >0080 (_t0C19, _t0C1A);
            bool _t0C1C = prim $and01C4 (_t0C05, _t0C1B);
            bool _t0C1D = prim $and01C4 (_t0BEF, _t0C1C);
            if _t0C1D {
              real _t0C1E = 0.1e1;
              real _t0C1F = 0.e0;
              vec2 _t0C20 = [_t0C1E, _t0C1F];
              vec2 _t0C21 = prim -0026<$[2]> (_t0C20, _t08E9);
              real _t0C22 = -0.1e1;
              real _t0C23 = 0.1e1;
              vec2 _t0C24 = [_t0C22, _t0C23];
              real _t0C25 = -0.1e1;
              real _t0C26 = 0.1e1;
              vec2 _t0C27 = [_t0C25, _t0C26];
              real _t0C28 = prim ×00BD (_t08F4, _t0C27);
              vec2 _t0C29 = prim /0057<$[2]> (_t0C24, _t0C28);
              time0BB0 = prim ×00BD (_t0C21, _t0C29);
              face0BB1 = 0;
            }
          }
          real _t0C2A = 0.e0;
          real _t0C2B = 0.e0;
          vec2 _t0C2C = [_t0C2A, _t0C2B];
          vec2 _t0C2D = prim -0026<$[2]> (_t0C2C, _t08E9);
          real _t0C2E = 0.e0;
          real _t0C2F = 0.1e1;
          vec2 _t0C30 = [_t0C2E, _t0C2F];
          real _t0C31 = 0.e0;
          real _t0C32 = 0.1e1;
          vec2 _t0C33 = [_t0C31, _t0C32];
          real _t0C34 = prim ×00BD (_t08F4, _t0C33);
          vec2 _t0C35 = prim /0057<$[2]> (_t0C30, _t0C34);
          real _t0C36 = prim ×00BD (_t0C2D, _t0C35);
          real _t0C37 = -0.1e-15;
          bool _t0C38 = prim >=007E (_t0C36, _t0C37);
          real _t0C39 = 0.e0;
          real _t0C3A = 0.e0;
          vec2 _t0C3B = [_t0C39, _t0C3A];
          vec2 _t0C3C = prim -0026<$[2]> (_t0C3B, _t08E9);
          real _t0C3D = 0.e0;
          real _t0C3E = 0.1e1;
          vec2 _t0C3F = [_t0C3D, _t0C3E];
          real _t0C40 = 0.e0;
          real _t0C41 = 0.1e1;
          vec2 _t0C42 = [_t0C40, _t0C41];
          real _t0C43 = prim ×00BD (_t08F4, _t0C42);
          vec2 _t0C44 = prim /0057<$[2]> (_t0C3F, _t0C43);
          real _t0C45 = prim ×00BD (_t0C3C, _t0C44);
          bool _t0C46 = prim >0080 (time0BB0, _t0C45);
          real _t0C47 = 0.e0;
          real _t0C48 = 0.1e1;
          vec2 _t0C49 = [_t0C47, _t0C48];
          real _t0C4A = prim ×00BD (_t08F4, _t0C49);
          real _t0C4B = prim |()|00B5<$[]> (_t0C4A);
          real _t0C4C = 0.1e-20;
          bool _t0C4D = prim >=007E (_t0C4B, _t0C4C);
          bool _t0C4E = prim $and01C4 (_t0C46, _t0C4D);
          bool _t0C4F = prim $and01C4 (_t0C38, _t0C4E);
          if _t0C4F {
            real _t0C50 = 0.1e1;
            real _t0C51 = 0.1e-8;
            real _t0C52 = prim +0017<$[]> (_t0C50, _t0C51);
            real _t0C53 = 0.1e1;
            real _t0C54 = 0.1e1;
            vec2 _t0C55 = [_t0C53, _t0C54];
            real _t0C56 = 0.e0;
            real _t0C57 = 0.e0;
            vec2 _t0C58 = [_t0C56, _t0C57];
            vec2 _t0C59 = prim -0026<$[2]> (_t0C58, _t08E9);
            real _t0C5A = 0.e0;
            real _t0C5B = 0.1e1;
            vec2 _t0C5C = [_t0C5A, _t0C5B];
            real _t0C5D = 0.e0;
            real _t0C5E = 0.1e1;
            vec2 _t0C5F = [_t0C5D, _t0C5E];
            real _t0C60 = prim ×00BD (_t08F4, _t0C5F);
            vec2 _t0C61 = prim /0057<$[2]> (_t0C5C, _t0C60);
            real _t0C62 = prim ×00BD (_t0C59, _t0C61);
            vec2 _t0C63 = prim *0038<$[2]> (_t08F4, _t0C62);
            vec2 _t0C64 = prim +0017<$[2]> (_t08E9, _t0C63);
            real _t0C65 = prim •00CE<$[2]; $[2]; $[]> (_t0C55, _t0C64);
            bool _t0C66 = prim >0080 (_t0C52, _t0C65);
            real _t0C67 = 0.1e-8;
            real _t0C68 = 0.1e-8;
            vec2 _t0C69 = [_t0C67, _t0C68];
            real _t0C6A = 0.e0;
            real _t0C6B = 0.e0;
            vec2 _t0C6C = [_t0C6A, _t0C6B];
            vec2 _t0C6D = prim -0026<$[2]> (_t0C6C, _t08E9);
            real _t0C6E = 0.e0;
            real _t0C6F = 0.1e1;
            vec2 _t0C70 = [_t0C6E, _t0C6F];
            real _t0C71 = 0.e0;
            real _t0C72 = 0.1e1;
            vec2 _t0C73 = [_t0C71, _t0C72];
            real _t0C74 = prim ×00BD (_t08F4, _t0C73);
            vec2 _t0C75 = prim /0057<$[2]> (_t0C70, _t0C74);
            real _t0C76 = prim ×00BD (_t0C6D, _t0C75);
            vec2 _t0C77 = prim *0038<$[2]> (_t08F4, _t0C76);
            vec2 _t0C78 = prim +0017<$[2]> (_t08E9, _t0C77);
            vec2 _t0C79 = prim +0017<$[2]> (_t0C69, _t0C78);
            real _t0C7A = _t0C79[0];
            real _t0C7B = -0.e0;
            bool _t0C7C = prim >0080 (_t0C7A, _t0C7B);
            real _t0C7D = 0.1e-8;
            real _t0C7E = 0.1e-8;
            vec2 _t0C7F = [_t0C7D, _t0C7E];
            real _t0C80 = 0.e0;
            real _t0C81 = 0.e0;
            vec2 _t0C82 = [_t0C80, _t0C81];
            vec2 _t0C83 = prim -0026<$[2]> (_t0C82, _t08E9);
            real _t0C84 = 0.e0;
            real _t0C85 = 0.1e1;
            vec2 _t0C86 = [_t0C84, _t0C85];
            real _t0C87 = 0.e0;
            real _t0C88 = 0.1e1;
            vec2 _t0C89 = [_t0C87, _t0C88];
            real _t0C8A = prim ×00BD (_t08F4, _t0C89);
            vec2 _t0C8B = prim /0057<$[2]> (_t0C86, _t0C8A);
            real _t0C8C = prim ×00BD (_t0C83, _t0C8B);
            vec2 _t0C8D = prim *0038<$[2]> (_t08F4, _t0C8C);
            vec2 _t0C8E = prim +0017<$[2]> (_t08E9, _t0C8D);
            vec2 _t0C8F = prim +0017<$[2]> (_t0C7F, _t0C8E);
            real _t0C90 = _t0C8F[1];
            real _t0C91 = -0.e0;
            bool _t0C92 = prim >0080 (_t0C90, _t0C91);
            bool _t0C93 = prim $and01C4 (_t0C7C, _t0C92);
            bool _t0C94 = prim $and01C4 (_t0C66, _t0C93);
            if _t0C94 {
              real _t0C95 = 0.e0;
              real _t0C96 = 0.e0;
              vec2 _t0C97 = [_t0C95, _t0C96];
              vec2 _t0C98 = prim -0026<$[2]> (_t0C97, _t08E9);
              real _t0C99 = 0.e0;
              real _t0C9A = 0.1e1;
              vec2 _t0C9B = [_t0C99, _t0C9A];
              real _t0C9C = 0.e0;
              real _t0C9D = 0.1e1;
              vec2 _t0C9E = [_t0C9C, _t0C9D];
              real _t0C9F = prim ×00BD (_t08F4, _t0C9E);
              vec2 _t0CA0 = prim /0057<$[2]> (_t0C9B, _t0C9F);
              time0BB0 = prim ×00BD (_t0C98, _t0CA0);
              face0BB1 = 1;
            }
          }
          real _t0CA1 = 0.e0;
          real _t0CA2 = 0.e0;
          vec2 _t0CA3 = [_t0CA1, _t0CA2];
          vec2 _t0CA4 = prim -0026<$[2]> (_t0CA3, _t08E9);
          real _t0CA5 = 0.1e1;
          real _t0CA6 = 0.e0;
          vec2 _t0CA7 = [_t0CA5, _t0CA6];
          real _t0CA8 = 0.1e1;
          real _t0CA9 = 0.e0;
          vec2 _t0CAA = [_t0CA8, _t0CA9];
          real _t0CAB = prim ×00BD (_t08F4, _t0CAA);
          vec2 _t0CAC = prim /0057<$[2]> (_t0CA7, _t0CAB);
          real _t0CAD = prim ×00BD (_t0CA4, _t0CAC);
          real _t0CAE = -0.1e-15;
          bool _t0CAF = prim >=007E (_t0CAD, _t0CAE);
          real _t0CB0 = 0.e0;
          real _t0CB1 = 0.e0;
          vec2 _t0CB2 = [_t0CB0, _t0CB1];
          vec2 _t0CB3 = prim -0026<$[2]> (_t0CB2, _t08E9);
          real _t0CB4 = 0.1e1;
          real _t0CB5 = 0.e0;
          vec2 _t0CB6 = [_t0CB4, _t0CB5];
          real _t0CB7 = 0.1e1;
          real _t0CB8 = 0.e0;
          vec2 _t0CB9 = [_t0CB7, _t0CB8];
          real _t0CBA = prim ×00BD (_t08F4, _t0CB9);
          vec2 _t0CBB = prim /0057<$[2]> (_t0CB6, _t0CBA);
          real _t0CBC = prim ×00BD (_t0CB3, _t0CBB);
          bool _t0CBD = prim >0080 (time0BB0, _t0CBC);
          real _t0CBE = 0.1e1;
          real _t0CBF = 0.e0;
          vec2 _t0CC0 = [_t0CBE, _t0CBF];
          real _t0CC1 = prim ×00BD (_t08F4, _t0CC0);
          real _t0CC2 = prim |()|00B5<$[]> (_t0CC1);
          real _t0CC3 = 0.1e-20;
          bool _t0CC4 = prim >=007E (_t0CC2, _t0CC3);
          bool _t0CC5 = prim $and01C4 (_t0CBD, _t0CC4);
          bool _t0CC6 = prim $and01C4 (_t0CAF, _t0CC5);
          if _t0CC6 {
            real _t0CC7 = 0.1e1;
            real _t0CC8 = 0.1e-8;
            real _t0CC9 = prim +0017<$[]> (_t0CC7, _t0CC8);
            real _t0CCA = 0.1e1;
            real _t0CCB = 0.1e1;
            vec2 _t0CCC = [_t0CCA, _t0CCB];
            real _t0CCD = 0.e0;
            real _t0CCE = 0.e0;
            vec2 _t0CCF = [_t0CCD, _t0CCE];
            vec2 _t0CD0 = prim -0026<$[2]> (_t0CCF, _t08E9);
            real _t0CD1 = 0.1e1;
            real _t0CD2 = 0.e0;
            vec2 _t0CD3 = [_t0CD1, _t0CD2];
            real _t0CD4 = 0.1e1;
            real _t0CD5 = 0.e0;
            vec2 _t0CD6 = [_t0CD4, _t0CD5];
            real _t0CD7 = prim ×00BD (_t08F4, _t0CD6);
            vec2 _t0CD8 = prim /0057<$[2]> (_t0CD3, _t0CD7);
            real _t0CD9 = prim ×00BD (_t0CD0, _t0CD8);
            vec2 _t0CDA = prim *0038<$[2]> (_t08F4, _t0CD9);
            vec2 _t0CDB = prim +0017<$[2]> (_t08E9, _t0CDA);
            real _t0CDC = prim •00CE<$[2]; $[2]; $[]> (_t0CCC, _t0CDB);
            bool _t0CDD = prim >0080 (_t0CC9, _t0CDC);
            real _t0CDE = 0.1e-8;
            real _t0CDF = 0.1e-8;
            vec2 _t0CE0 = [_t0CDE, _t0CDF];
            real _t0CE1 = 0.e0;
            real _t0CE2 = 0.e0;
            vec2 _t0CE3 = [_t0CE1, _t0CE2];
            vec2 _t0CE4 = prim -0026<$[2]> (_t0CE3, _t08E9);
            real _t0CE5 = 0.1e1;
            real _t0CE6 = 0.e0;
            vec2 _t0CE7 = [_t0CE5, _t0CE6];
            real _t0CE8 = 0.1e1;
            real _t0CE9 = 0.e0;
            vec2 _t0CEA = [_t0CE8, _t0CE9];
            real _t0CEB = prim ×00BD (_t08F4, _t0CEA);
            vec2 _t0CEC = prim /0057<$[2]> (_t0CE7, _t0CEB);
            real _t0CED = prim ×00BD (_t0CE4, _t0CEC);
            vec2 _t0CEE = prim *0038<$[2]> (_t08F4, _t0CED);
            vec2 _t0CEF = prim +0017<$[2]> (_t08E9, _t0CEE);
            vec2 _t0CF0 = prim +0017<$[2]> (_t0CE0, _t0CEF);
            real _t0CF1 = _t0CF0[0];
            real _t0CF2 = -0.e0;
            bool _t0CF3 = prim >0080 (_t0CF1, _t0CF2);
            real _t0CF4 = 0.1e-8;
            real _t0CF5 = 0.1e-8;
            vec2 _t0CF6 = [_t0CF4, _t0CF5];
            real _t0CF7 = 0.e0;
            real _t0CF8 = 0.e0;
            vec2 _t0CF9 = [_t0CF7, _t0CF8];
            vec2 _t0CFA = prim -0026<$[2]> (_t0CF9, _t08E9);
            real _t0CFB = 0.1e1;
            real _t0CFC = 0.e0;
            vec2 _t0CFD = [_t0CFB, _t0CFC];
            real _t0CFE = 0.1e1;
            real _t0CFF = 0.e0;
            vec2 _t0D00 = [_t0CFE, _t0CFF];
            real _t0D01 = prim ×00BD (_t08F4, _t0D00);
            vec2 _t0D02 = prim /0057<$[2]> (_t0CFD, _t0D01);
            real _t0D03 = prim ×00BD (_t0CFA, _t0D02);
            vec2 _t0D04 = prim *0038<$[2]> (_t08F4, _t0D03);
            vec2 _t0D05 = prim +0017<$[2]> (_t08E9, _t0D04);
            vec2 _t0D06 = prim +0017<$[2]> (_t0CF6, _t0D05);
            real _t0D07 = _t0D06[1];
            real _t0D08 = -0.e0;
            bool _t0D09 = prim >0080 (_t0D07, _t0D08);
            bool _t0D0A = prim $and01C4 (_t0CF3, _t0D09);
            bool _t0D0B = prim $and01C4 (_t0CDD, _t0D0A);
            if _t0D0B {
              real _t0D0C = 0.e0;
              real _t0D0D = 0.e0;
              vec2 _t0D0E = [_t0D0C, _t0D0D];
              vec2 _t0D0F = prim -0026<$[2]> (_t0D0E, _t08E9);
              real _t0D10 = 0.1e1;
              real _t0D11 = 0.e0;
              vec2 _t0D12 = [_t0D10, _t0D11];
              real _t0D13 = 0.1e1;
              real _t0D14 = 0.e0;
              vec2 _t0D15 = [_t0D13, _t0D14];
              real _t0D16 = prim ×00BD (_t08F4, _t0D15);
              vec2 _t0D17 = prim /0057<$[2]> (_t0D12, _t0D16);
              time0BB0 = prim ×00BD (_t0D0F, _t0D17);
              face0BB1 = 2;
            }
          }
          int _t0D18 = -1;
          bool _t0D19 = prim !=0086 (face0BB1, _t0D18);
          if _t0D19 {
            real _t0D1A = 0.e0;
            real _t0D1B = prim max0125 (time0BB0, _t0D1A);
            real _t0D1C = (real)face0BB1;
            vec2 _t0D1D = [_t0D1B, _t0D1C];
            _t08F5 = _t0D1D;
          } else {
            real _t0D1E = -0.1e1;
            real _t0D1F = -0.1e1;
            vec2 _t0D20 = [_t0D1E, _t0D1F];
            _t08F5 = _t0D20;
          }
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918;
          real time0A3F = +inf;
          int face0A40 = -1;
          real _t0A42 = 0.1e1;
          real _t0A43 = 0.e0;
          vec2 _t0A44 = [_t0A42, _t0A43];
          vec2 _t0A45 = prim -0026<$[2]> (_t0A44, _t090C);
          real _t0A46 = -0.1e1;
          real _t0A47 = 0.1e1;
          vec2 _t0A48 = [_t0A46, _t0A47];
          real _t0A49 = -0.1e1;
          real _t0A4A = 0.1e1;
          vec2 _t0A4B = [_t0A49, _t0A4A];
          real _t0A4C = prim ×00BD (_t0917, _t0A4B);
          vec2 _t0A4D = prim /0057<$[2]> (_t0A48, _t0A4C);
          real _t0A4E = prim ×00BD (_t0A45, _t0A4D);
          real _t0A4F = -0.1e-15;
          bool _t0A50 = prim >=007E (_t0A4E, _t0A4F);
          real _t0A51 = 0.1e1;
          real _t0A52 = 0.e0;
          vec2 _t0A53 = [_t0A51, _t0A52];
          vec2 _t0A54 = prim -0026<$[2]> (_t0A53, _t090C);
          real _t0A55 = -0.1e1;
          real _t0A56 = 0.1e1;
          vec2 _t0A57 = [_t0A55, _t0A56];
          real _t0A58 = -0.1e1;
          real _t0A59 = 0.1e1;
          vec2 _t0A5A = [_t0A58, _t0A59];
          real _t0A5B = prim ×00BD (_t0917, _t0A5A);
          vec2 _t0A5C = prim /0057<$[2]> (_t0A57, _t0A5B);
          real _t0A5D = prim ×00BD (_t0A54, _t0A5C);
          bool _t0A5E = prim >0080 (time0A3F, _t0A5D);
          real _t0A5F = -0.1e1;
          real _t0A60 = 0.1e1;
          vec2 _t0A61 = [_t0A5F, _t0A60];
          real _t0A62 = prim ×00BD (_t0917, _t0A61);
          real _t0A63 = prim |()|00B5<$[]> (_t0A62);
          real _t0A64 = 0.1e-20;
          bool _t0A65 = prim >=007E (_t0A63, _t0A64);
          bool _t0A66 = prim $and01C4 (_t0A5E, _t0A65);
          bool _t0A67 = prim $and01C4 (_t0A50, _t0A66);
          if _t0A67 {
            real _t0A68 = 0.1e1;
            real _t0A69 = 0.1e-8;
            real _t0A6A = prim +0017<$[]> (_t0A68, _t0A69);
            real _t0A6B = 0.1e1;
            real _t0A6C = 0.1e1;
            vec2 _t0A6D = [_t0A6B, _t0A6C];
            real _t0A6E = 0.1e1;
            real _t0A6F = 0.e0;
            vec2 _t0A70 = [_t0A6E, _t0A6F];
            vec2 _t0A71 = prim -0026<$[2]> (_t0A70, _t090C);
            real _t0A72 = -0.1e1;
            real _t0A73 = 0.1e1;
            vec2 _t0A74 = [_t0A72, _t0A73];
            real _t0A75 = -0.1e1;
            real _t0A76 = 0.1e1;
            vec2 _t0A77 = [_t0A75, _t0A76];
            real _t0A78 = prim ×00BD (_t0917, _t0A77);
            vec2 _t0A79 = prim /0057<$[2]> (_t0A74, _t0A78);
            real _t0A7A = prim ×00BD (_t0A71, _t0A79);
            vec2 _t0A7B = prim *0038<$[2]> (_t0917, _t0A7A);
            vec2 _t0A7C = prim +0017<$[2]> (_t090C, _t0A7B);
            real _t0A7D = prim •00CE<$[2]; $[2]; $[]> (_t0A6D, _t0A7C);
            bool _t0A7E = prim >0080 (_t0A6A, _t0A7D);
            real _t0A7F = 0.1e-8;
            real _t0A80 = 0.1e-8;
            vec2 _t0A81 = [_t0A7F, _t0A80];
            real _t0A82 = 0.1e1;
            real _t0A83 = 0.e0;
            vec2 _t0A84 = [_t0A82, _t0A83];
            vec2 _t0A85 = prim -0026<$[2]> (_t0A84, _t090C);
            real _t0A86 = -0.1e1;
            real _t0A87 = 0.1e1;
            vec2 _t0A88 = [_t0A86, _t0A87];
            real _t0A89 = -0.1e1;
            real _t0A8A = 0.1e1;
            vec2 _t0A8B = [_t0A89, _t0A8A];
            real _t0A8C = prim ×00BD (_t0917, _t0A8B);
            vec2 _t0A8D = prim /0057<$[2]> (_t0A88, _t0A8C);
            real _t0A8E = prim ×00BD (_t0A85, _t0A8D);
            vec2 _t0A8F = prim *0038<$[2]> (_t0917, _t0A8E);
            vec2 _t0A90 = prim +0017<$[2]> (_t090C, _t0A8F);
            vec2 _t0A91 = prim +0017<$[2]> (_t0A81, _t0A90);
            real _t0A92 = _t0A91[0];
            real _t0A93 = -0.e0;
            bool _t0A94 = prim >0080 (_t0A92, _t0A93);
            real _t0A95 = 0.1e-8;
            real _t0A96 = 0.1e-8;
            vec2 _t0A97 = [_t0A95, _t0A96];
            real _t0A98 = 0.1e1;
            real _t0A99 = 0.e0;
            vec2 _t0A9A = [_t0A98, _t0A99];
            vec2 _t0A9B = prim -0026<$[2]> (_t0A9A, _t090C);
            real _t0A9C = -0.1e1;
            real _t0A9D = 0.1e1;
            vec2 _t0A9E = [_t0A9C, _t0A9D];
            real _t0A9F = -0.1e1;
            real _t0AA0 = 0.1e1;
            vec2 _t0AA1 = [_t0A9F, _t0AA0];
            real _t0AA2 = prim ×00BD (_t0917, _t0AA1);
            vec2 _t0AA3 = prim /0057<$[2]> (_t0A9E, _t0AA2);
            real _t0AA4 = prim ×00BD (_t0A9B, _t0AA3);
            vec2 _t0AA5 = prim *0038<$[2]> (_t0917, _t0AA4);
            vec2 _t0AA6 = prim +0017<$[2]> (_t090C, _t0AA5);
            vec2 _t0AA7 = prim +0017<$[2]> (_t0A97, _t0AA6);
            real _t0AA8 = _t0AA7[1];
            real _t0AA9 = -0.e0;
            bool _t0AAA = prim >0080 (_t0AA8, _t0AA9);
            bool _t0AAB = prim $and01C4 (_t0A94, _t0AAA);
            bool _t0AAC = prim $and01C4 (_t0A7E, _t0AAB);
            if _t0AAC {
              real _t0AAD = 0.1e1;
              real _t0AAE = 0.e0;
              vec2 _t0AAF = [_t0AAD, _t0AAE];
              vec2 _t0AB0 = prim -0026<$[2]> (_t0AAF, _t090C);
              real _t0AB1 = -0.1e1;
              real _t0AB2 = 0.1e1;
              vec2 _t0AB3 = [_t0AB1, _t0AB2];
              real _t0AB4 = -0.1e1;
              real _t0AB5 = 0.1e1;
              vec2 _t0AB6 = [_t0AB4, _t0AB5];
              real _t0AB7 = prim ×00BD (_t0917, _t0AB6);
              vec2 _t0AB8 = prim /0057<$[2]> (_t0AB3, _t0AB7);
              time0A3F = prim ×00BD (_t0AB0, _t0AB8);
              face0A40 = 0;
            }
          }
          real _t0AB9 = 0.e0;
          real _t0ABA = 0.e0;
          vec2 _t0ABB = [_t0AB9, _t0ABA];
          vec2 _t0ABC = prim -0026<$[2]> (_t0ABB, _t090C);
          real _t0ABD = 0.e0;
          real _t0ABE = 0.1e1;
          vec2 _t0ABF = [_t0ABD, _t0ABE];
          real _t0AC0 = 0.e0;
          real _t0AC1 = 0.1e1;
          vec2 _t0AC2 = [_t0AC0, _t0AC1];
          real _t0AC3 = prim ×00BD (_t0917, _t0AC2);
          vec2 _t0AC4 = prim /0057<$[2]> (_t0ABF, _t0AC3);
          real _t0AC5 = prim ×00BD (_t0ABC, _t0AC4);
          real _t0AC6 = -0.1e-15;
          bool _t0AC7 = prim >=007E (_t0AC5, _t0AC6);
          real _t0AC8 = 0.e0;
          real _t0AC9 = 0.e0;
          vec2 _t0ACA = [_t0AC8, _t0AC9];
          vec2 _t0ACB = prim -0026<$[2]> (_t0ACA, _t090C);
          real _t0ACC = 0.e0;
          real _t0ACD = 0.1e1;
          vec2 _t0ACE = [_t0ACC, _t0ACD];
          real _t0ACF = 0.e0;
          real _t0AD0 = 0.1e1;
          vec2 _t0AD1 = [_t0ACF, _t0AD0];
          real _t0AD2 = prim ×00BD (_t0917, _t0AD1);
          vec2 _t0AD3 = prim /0057<$[2]> (_t0ACE, _t0AD2);
          real _t0AD4 = prim ×00BD (_t0ACB, _t0AD3);
          bool _t0AD5 = prim >0080 (time0A3F, _t0AD4);
          real _t0AD6 = 0.e0;
          real _t0AD7 = 0.1e1;
          vec2 _t0AD8 = [_t0AD6, _t0AD7];
          real _t0AD9 = prim ×00BD (_t0917, _t0AD8);
          real _t0ADA = prim |()|00B5<$[]> (_t0AD9);
          real _t0ADB = 0.1e-20;
          bool _t0ADC = prim >=007E (_t0ADA, _t0ADB);
          bool _t0ADD = prim $and01C4 (_t0AD5, _t0ADC);
          bool _t0ADE = prim $and01C4 (_t0AC7, _t0ADD);
          if _t0ADE {
            real _t0ADF = 0.1e1;
            real _t0AE0 = 0.1e-8;
            real _t0AE1 = prim +0017<$[]> (_t0ADF, _t0AE0);
            real _t0AE2 = 0.1e1;
            real _t0AE3 = 0.1e1;
            vec2 _t0AE4 = [_t0AE2, _t0AE3];
            real _t0AE5 = 0.e0;
            real _t0AE6 = 0.e0;
            vec2 _t0AE7 = [_t0AE5, _t0AE6];
            vec2 _t0AE8 = prim -0026<$[2]> (_t0AE7, _t090C);
            real _t0AE9 = 0.e0;
            real _t0AEA = 0.1e1;
            vec2 _t0AEB = [_t0AE9, _t0AEA];
            real _t0AEC = 0.e0;
            real _t0AED = 0.1e1;
            vec2 _t0AEE = [_t0AEC, _t0AED];
            real _t0AEF = prim ×00BD (_t0917, _t0AEE);
            vec2 _t0AF0 = prim /0057<$[2]> (_t0AEB, _t0AEF);
            real _t0AF1 = prim ×00BD (_t0AE8, _t0AF0);
            vec2 _t0AF2 = prim *0038<$[2]> (_t0917, _t0AF1);
            vec2 _t0AF3 = prim +0017<$[2]> (_t090C, _t0AF2);
            real _t0AF4 = prim •00CE<$[2]; $[2]; $[]> (_t0AE4, _t0AF3);
            bool _t0AF5 = prim >0080 (_t0AE1, _t0AF4);
            real _t0AF6 = 0.1e-8;
            real _t0AF7 = 0.1e-8;
            vec2 _t0AF8 = [_t0AF6, _t0AF7];
            real _t0AF9 = 0.e0;
            real _t0AFA = 0.e0;
            vec2 _t0AFB = [_t0AF9, _t0AFA];
            vec2 _t0AFC = prim -0026<$[2]> (_t0AFB, _t090C);
            real _t0AFD = 0.e0;
            real _t0AFE = 0.1e1;
            vec2 _t0AFF = [_t0AFD, _t0AFE];
            real _t0B00 = 0.e0;
            real _t0B01 = 0.1e1;
            vec2 _t0B02 = [_t0B00, _t0B01];
            real _t0B03 = prim ×00BD (_t0917, _t0B02);
            vec2 _t0B04 = prim /0057<$[2]> (_t0AFF, _t0B03);
            real _t0B05 = prim ×00BD (_t0AFC, _t0B04);
            vec2 _t0B06 = prim *0038<$[2]> (_t0917, _t0B05);
            vec2 _t0B07 = prim +0017<$[2]> (_t090C, _t0B06);
            vec2 _t0B08 = prim +0017<$[2]> (_t0AF8, _t0B07);
            real _t0B09 = _t0B08[0];
            real _t0B0A = -0.e0;
            bool _t0B0B = prim >0080 (_t0B09, _t0B0A);
            real _t0B0C = 0.1e-8;
            real _t0B0D = 0.1e-8;
            vec2 _t0B0E = [_t0B0C, _t0B0D];
            real _t0B0F = 0.e0;
            real _t0B10 = 0.e0;
            vec2 _t0B11 = [_t0B0F, _t0B10];
            vec2 _t0B12 = prim -0026<$[2]> (_t0B11, _t090C);
            real _t0B13 = 0.e0;
            real _t0B14 = 0.1e1;
            vec2 _t0B15 = [_t0B13, _t0B14];
            real _t0B16 = 0.e0;
            real _t0B17 = 0.1e1;
            vec2 _t0B18 = [_t0B16, _t0B17];
            real _t0B19 = prim ×00BD (_t0917, _t0B18);
            vec2 _t0B1A = prim /0057<$[2]> (_t0B15, _t0B19);
            real _t0B1B = prim ×00BD (_t0B12, _t0B1A);
            vec2 _t0B1C = prim *0038<$[2]> (_t0917, _t0B1B);
            vec2 _t0B1D = prim +0017<$[2]> (_t090C, _t0B1C);
            vec2 _t0B1E = prim +0017<$[2]> (_t0B0E, _t0B1D);
            real _t0B1F = _t0B1E[1];
            real _t0B20 = -0.e0;
            bool _t0B21 = prim >0080 (_t0B1F, _t0B20);
            bool _t0B22 = prim $and01C4 (_t0B0B, _t0B21);
            bool _t0B23 = prim $and01C4 (_t0AF5, _t0B22);
            if _t0B23 {
              real _t0B24 = 0.e0;
              real _t0B25 = 0.e0;
              vec2 _t0B26 = [_t0B24, _t0B25];
              vec2 _t0B27 = prim -0026<$[2]> (_t0B26, _t090C);
              real _t0B28 = 0.e0;
              real _t0B29 = 0.1e1;
              vec2 _t0B2A = [_t0B28, _t0B29];
              real _t0B2B = 0.e0;
              real _t0B2C = 0.1e1;
              vec2 _t0B2D = [_t0B2B, _t0B2C];
              real _t0B2E = prim ×00BD (_t0917, _t0B2D);
              vec2 _t0B2F = prim /0057<$[2]> (_t0B2A, _t0B2E);
              time0A3F = prim ×00BD (_t0B27, _t0B2F);
              face0A40 = 1;
            }
          }
          real _t0B30 = 0.e0;
          real _t0B31 = 0.e0;
          vec2 _t0B32 = [_t0B30, _t0B31];
          vec2 _t0B33 = prim -0026<$[2]> (_t0B32, _t090C);
          real _t0B34 = 0.1e1;
          real _t0B35 = 0.e0;
          vec2 _t0B36 = [_t0B34, _t0B35];
          real _t0B37 = 0.1e1;
          real _t0B38 = 0.e0;
          vec2 _t0B39 = [_t0B37, _t0B38];
          real _t0B3A = prim ×00BD (_t0917, _t0B39);
          vec2 _t0B3B = prim /0057<$[2]> (_t0B36, _t0B3A);
          real _t0B3C = prim ×00BD (_t0B33, _t0B3B);
          real _t0B3D = -0.1e-15;
          bool _t0B3E = prim >=007E (_t0B3C, _t0B3D);
          real _t0B3F = 0.e0;
          real _t0B40 = 0.e0;
          vec2 _t0B41 = [_t0B3F, _t0B40];
          vec2 _t0B42 = prim -0026<$[2]> (_t0B41, _t090C);
          real _t0B43 = 0.1e1;
          real _t0B44 = 0.e0;
          vec2 _t0B45 = [_t0B43, _t0B44];
          real _t0B46 = 0.1e1;
          real _t0B47 = 0.e0;
          vec2 _t0B48 = [_t0B46, _t0B47];
          real _t0B49 = prim ×00BD (_t0917, _t0B48);
          vec2 _t0B4A = prim /0057<$[2]> (_t0B45, _t0B49);
          real _t0B4B = prim ×00BD (_t0B42, _t0B4A);
          bool _t0B4C = prim >0080 (time0A3F, _t0B4B);
          real _t0B4D = 0.1e1;
          real _t0B4E = 0.e0;
          vec2 _t0B4F = [_t0B4D, _t0B4E];
          real _t0B50 = prim ×00BD (_t0917, _t0B4F);
          real _t0B51 = prim |()|00B5<$[]> (_t0B50);
          real _t0B52 = 0.1e-20;
          bool _t0B53 = prim >=007E (_t0B51, _t0B52);
          bool _t0B54 = prim $and01C4 (_t0B4C, _t0B53);
          bool _t0B55 = prim $and01C4 (_t0B3E, _t0B54);
          if _t0B55 {
            real _t0B56 = 0.1e1;
            real _t0B57 = 0.1e-8;
            real _t0B58 = prim +0017<$[]> (_t0B56, _t0B57);
            real _t0B59 = 0.1e1;
            real _t0B5A = 0.1e1;
            vec2 _t0B5B = [_t0B59, _t0B5A];
            real _t0B5C = 0.e0;
            real _t0B5D = 0.e0;
            vec2 _t0B5E = [_t0B5C, _t0B5D];
            vec2 _t0B5F = prim -0026<$[2]> (_t0B5E, _t090C);
            real _t0B60 = 0.1e1;
            real _t0B61 = 0.e0;
            vec2 _t0B62 = [_t0B60, _t0B61];
            real _t0B63 = 0.1e1;
            real _t0B64 = 0.e0;
            vec2 _t0B65 = [_t0B63, _t0B64];
            real _t0B66 = prim ×00BD (_t0917, _t0B65);
            vec2 _t0B67 = prim /0057<$[2]> (_t0B62, _t0B66);
            real _t0B68 = prim ×00BD (_t0B5F, _t0B67);
            vec2 _t0B69 = prim *0038<$[2]> (_t0917, _t0B68);
            vec2 _t0B6A = prim +0017<$[2]> (_t090C, _t0B69);
            real _t0B6B = prim •00CE<$[2]; $[2]; $[]> (_t0B5B, _t0B6A);
            bool _t0B6C = prim >0080 (_t0B58, _t0B6B);
            real _t0B6D = 0.1e-8;
            real _t0B6E = 0.1e-8;
            vec2 _t0B6F = [_t0B6D, _t0B6E];
            real _t0B70 = 0.e0;
            real _t0B71 = 0.e0;
            vec2 _t0B72 = [_t0B70, _t0B71];
            vec2 _t0B73 = prim -0026<$[2]> (_t0B72, _t090C);
            real _t0B74 = 0.1e1;
            real _t0B75 = 0.e0;
            vec2 _t0B76 = [_t0B74, _t0B75];
            real _t0B77 = 0.1e1;
            real _t0B78 = 0.e0;
            vec2 _t0B79 = [_t0B77, _t0B78];
            real _t0B7A = prim ×00BD (_t0917, _t0B79);
            vec2 _t0B7B = prim /0057<$[2]> (_t0B76, _t0B7A);
            real _t0B7C = prim ×00BD (_t0B73, _t0B7B);
            vec2 _t0B7D = prim *0038<$[2]> (_t0917, _t0B7C);
            vec2 _t0B7E = prim +0017<$[2]> (_t090C, _t0B7D);
            vec2 _t0B7F = prim +0017<$[2]> (_t0B6F, _t0B7E);
            real _t0B80 = _t0B7F[0];
            real _t0B81 = -0.e0;
            bool _t0B82 = prim >0080 (_t0B80, _t0B81);
            real _t0B83 = 0.1e-8;
            real _t0B84 = 0.1e-8;
            vec2 _t0B85 = [_t0B83, _t0B84];
            real _t0B86 = 0.e0;
            real _t0B87 = 0.e0;
            vec2 _t0B88 = [_t0B86, _t0B87];
            vec2 _t0B89 = prim -0026<$[2]> (_t0B88, _t090C);
            real _t0B8A = 0.1e1;
            real _t0B8B = 0.e0;
            vec2 _t0B8C = [_t0B8A, _t0B8B];
            real _t0B8D = 0.1e1;
            real _t0B8E = 0.e0;
            vec2 _t0B8F = [_t0B8D, _t0B8E];
            real _t0B90 = prim ×00BD (_t0917, _t0B8F);
            vec2 _t0B91 = prim /0057<$[2]> (_t0B8C, _t0B90);
            real _t0B92 = prim ×00BD (_t0B89, _t0B91);
            vec2 _t0B93 = prim *0038<$[2]> (_t0917, _t0B92);
            vec2 _t0B94 = prim +0017<$[2]> (_t090C, _t0B93);
            vec2 _t0B95 = prim +0017<$[2]> (_t0B85, _t0B94);
            real _t0B96 = _t0B95[1];
            real _t0B97 = -0.e0;
            bool _t0B98 = prim >0080 (_t0B96, _t0B97);
            bool _t0B99 = prim $and01C4 (_t0B82, _t0B98);
            bool _t0B9A = prim $and01C4 (_t0B6C, _t0B99);
            if _t0B9A {
              real _t0B9B = 0.e0;
              real _t0B9C = 0.e0;
              vec2 _t0B9D = [_t0B9B, _t0B9C];
              vec2 _t0B9E = prim -0026<$[2]> (_t0B9D, _t090C);
              real _t0B9F = 0.1e1;
              real _t0BA0 = 0.e0;
              vec2 _t0BA1 = [_t0B9F, _t0BA0];
              real _t0BA2 = 0.1e1;
              real _t0BA3 = 0.e0;
              vec2 _t0BA4 = [_t0BA2, _t0BA3];
              real _t0BA5 = prim ×00BD (_t0917, _t0BA4);
              vec2 _t0BA6 = prim /0057<$[2]> (_t0BA1, _t0BA5);
              time0A3F = prim ×00BD (_t0B9E, _t0BA6);
              face0A40 = 2;
            }
          }
          int _t0BA7 = -1;
          bool _t0BA8 = prim !=0086 (face0A40, _t0BA7);
          if _t0BA8 {
            real _t0BA9 = 0.e0;
            real _t0BAA = prim max0125 (time0A3F, _t0BA9);
            real _t0BAB = (real)face0A40;
            vec2 _t0BAC = [_t0BAA, _t0BAB];
            _t0918 = _t0BAC;
          } else {
            real _t0BAD = -0.1e1;
            real _t0BAE = -0.1e1;
            vec2 _t0BAF = [_t0BAD, _t0BAE];
            _t0918 = _t0BAF;
          }
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui1234, _t093E, vi1233, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui1234, _t0941, vi1233, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E;
    vec2 _t122D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t122E = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t122F = extractFem(pos0854, Mesh);
    vec2 _t1230;
    field(2)[2] _t1231 = femField(_t122F,_t122E,field(2)[2],Transform,);
    vec2 _t1232 = prim @00A5<#∞; %2; $[2]> (_t1231, _t122D);
    _t1230 = _t1232;
    _t094E = _t1230;
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977;
    vec2 _t1227 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1228 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1229 = extractFem(pos0854, Mesh);
    vec2 _t122A;
    field(2)[2] _t122B = femField(_t1229,_t1228,field(2)[2],Transform,);
    vec2 _t122C = prim @00A5<#∞; %2; $[2]> (_t122B, _t1227);
    _t122A = _t122C;
    _t0977 = _t122A;
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980;
    vec2 _t1221 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1222 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1223 = extractFem(pos0854, Mesh);
    vec2 _t1224;
    field(2)[2] _t1225 = femField(_t1223,_t1222,field(2)[2],Transform,);
    vec2 _t1226 = prim @00A5<#∞; %2; $[2]> (_t1225, _t1221);
    _t1224 = _t1226;
    _t0980 = _t1224;
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC;
    real time1151 = +inf;
    int face1152 = -1;
    real faceTime1153 = -inf;
    real _t1154 = 0.1e1;
    real _t1155 = 0.e0;
    vec2 _t1156 = [_t1154, _t1155];
    vec2 _t1157 = prim -0026<$[2]> (_t1156, _t0993);
    real _t1158 = -0.1e1;
    real _t1159 = 0.1e1;
    vec2 _t115A = [_t1158, _t1159];
    real _t115B = -0.1e1;
    real _t115C = 0.1e1;
    vec2 _t115D = [_t115B, _t115C];
    real _t115E = prim ×00BD (_t09AA, _t115D);
    vec2 _t115F = prim /0057<$[2]> (_t115A, _t115E);
    real _t1160 = prim ×00BD (_t1157, _t115F);
    real _t1161 = -0.1e-15;
    bool _t1162 = prim >=007E (_t1160, _t1161);
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    vec2 _t1165 = [_t1163, _t1164];
    vec2 _t1166 = prim -0026<$[2]> (_t1165, _t0993);
    real _t1167 = -0.1e1;
    real _t1168 = 0.1e1;
    vec2 _t1169 = [_t1167, _t1168];
    real _t116A = -0.1e1;
    real _t116B = 0.1e1;
    vec2 _t116C = [_t116A, _t116B];
    real _t116D = prim ×00BD (_t09AA, _t116C);
    vec2 _t116E = prim /0057<$[2]> (_t1169, _t116D);
    real _t116F = prim ×00BD (_t1166, _t116E);
    bool _t1170 = prim >0080 (time1151, _t116F);
    real _t1171 = -0.1e1;
    real _t1172 = 0.1e1;
    vec2 _t1173 = [_t1171, _t1172];
    real _t1174 = prim ×00BD (_t09AA, _t1173);
    real _t1175 = prim |()|00B5<$[]> (_t1174);
    real _t1176 = 0.1e-20;
    bool _t1177 = prim >=007E (_t1175, _t1176);
    bool _t1178 = prim $and01C4 (_t1170, _t1177);
    bool _t1179 = prim $and01C4 (_t1162, _t1178);
    if _t1179 {
      int _t117A = 0;
      bool _t117B = prim !=0086 (_t09AB, _t117A);
      if _t117B {
        real _t117C = 0.1e1;
        real _t117D = 0.e0;
        vec2 _t117E = [_t117C, _t117D];
        vec2 _t117F = prim -0026<$[2]> (_t117E, _t0993);
        real _t1180 = -0.1e1;
        real _t1181 = 0.1e1;
        vec2 _t1182 = [_t1180, _t1181];
        real _t1183 = -0.1e1;
        real _t1184 = 0.1e1;
        vec2 _t1185 = [_t1183, _t1184];
        real _t1186 = prim ×00BD (_t09AA, _t1185);
        vec2 _t1187 = prim /0057<$[2]> (_t1182, _t1186);
        time1151 = prim ×00BD (_t117F, _t1187);
        face1152 = 0;
      } else {
        real _t1188 = 0.1e1;
        real _t1189 = 0.e0;
        vec2 _t118A = [_t1188, _t1189];
        vec2 _t118B = prim -0026<$[2]> (_t118A, _t0993);
        real _t118C = -0.1e1;
        real _t118D = 0.1e1;
        vec2 _t118E = [_t118C, _t118D];
        real _t118F = -0.1e1;
        real _t1190 = 0.1e1;
        vec2 _t1191 = [_t118F, _t1190];
        real _t1192 = prim ×00BD (_t09AA, _t1191);
        vec2 _t1193 = prim /0057<$[2]> (_t118E, _t1192);
        faceTime1153 = prim ×00BD (_t118B, _t1193);
      }
    }
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    vec2 _t1196 = [_t1194, _t1195];
    vec2 _t1197 = prim -0026<$[2]> (_t1196, _t0993);
    real _t1198 = 0.e0;
    real _t1199 = 0.1e1;
    vec2 _t119A = [_t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec2 _t119D = [_t119B, _t119C];
    real _t119E = prim ×00BD (_t09AA, _t119D);
    vec2 _t119F = prim /0057<$[2]> (_t119A, _t119E);
    real _t11A0 = prim ×00BD (_t1197, _t119F);
    real _t11A1 = -0.1e-15;
    bool _t11A2 = prim >=007E (_t11A0, _t11A1);
    real _t11A3 = 0.e0;
    real _t11A4 = 0.e0;
    vec2 _t11A5 = [_t11A3, _t11A4];
    vec2 _t11A6 = prim -0026<$[2]> (_t11A5, _t0993);
    real _t11A7 = 0.e0;
    real _t11A8 = 0.1e1;
    vec2 _t11A9 = [_t11A7, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    vec2 _t11AC = [_t11AA, _t11AB];
    real _t11AD = prim ×00BD (_t09AA, _t11AC);
    vec2 _t11AE = prim /0057<$[2]> (_t11A9, _t11AD);
    real _t11AF = prim ×00BD (_t11A6, _t11AE);
    bool _t11B0 = prim >0080 (time1151, _t11AF);
    real _t11B1 = 0.e0;
    real _t11B2 = 0.1e1;
    vec2 _t11B3 = [_t11B1, _t11B2];
    real _t11B4 = prim ×00BD (_t09AA, _t11B3);
    real _t11B5 = prim |()|00B5<$[]> (_t11B4);
    real _t11B6 = 0.1e-20;
    bool _t11B7 = prim >=007E (_t11B5, _t11B6);
    bool _t11B8 = prim $and01C4 (_t11B0, _t11B7);
    bool _t11B9 = prim $and01C4 (_t11A2, _t11B8);
    if _t11B9 {
      int _t11BA = 1;
      bool _t11BB = prim !=0086 (_t09AB, _t11BA);
      if _t11BB {
        real _t11BC = 0.e0;
        real _t11BD = 0.e0;
        vec2 _t11BE = [_t11BC, _t11BD];
        vec2 _t11BF = prim -0026<$[2]> (_t11BE, _t0993);
        real _t11C0 = 0.e0;
        real _t11C1 = 0.1e1;
        vec2 _t11C2 = [_t11C0, _t11C1];
        real _t11C3 = 0.e0;
        real _t11C4 = 0.1e1;
        vec2 _t11C5 = [_t11C3, _t11C4];
        real _t11C6 = prim ×00BD (_t09AA, _t11C5);
        vec2 _t11C7 = prim /0057<$[2]> (_t11C2, _t11C6);
        time1151 = prim ×00BD (_t11BF, _t11C7);
        face1152 = 1;
      } else {
        real _t11C8 = 0.e0;
        real _t11C9 = 0.e0;
        vec2 _t11CA = [_t11C8, _t11C9];
        vec2 _t11CB = prim -0026<$[2]> (_t11CA, _t0993);
        real _t11CC = 0.e0;
        real _t11CD = 0.1e1;
        vec2 _t11CE = [_t11CC, _t11CD];
        real _t11CF = 0.e0;
        real _t11D0 = 0.1e1;
        vec2 _t11D1 = [_t11CF, _t11D0];
        real _t11D2 = prim ×00BD (_t09AA, _t11D1);
        vec2 _t11D3 = prim /0057<$[2]> (_t11CE, _t11D2);
        faceTime1153 = prim ×00BD (_t11CB, _t11D3);
      }
    }
    real _t11D4 = 0.e0;
    real _t11D5 = 0.e0;
    vec2 _t11D6 = [_t11D4, _t11D5];
    vec2 _t11D7 = prim -0026<$[2]> (_t11D6, _t0993);
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec2 _t11DA = [_t11D8, _t11D9];
    real _t11DB = 0.1e1;
    real _t11DC = 0.e0;
    vec2 _t11DD = [_t11DB, _t11DC];
    real _t11DE = prim ×00BD (_t09AA, _t11DD);
    vec2 _t11DF = prim /0057<$[2]> (_t11DA, _t11DE);
    real _t11E0 = prim ×00BD (_t11D7, _t11DF);
    real _t11E1 = -0.1e-15;
    bool _t11E2 = prim >=007E (_t11E0, _t11E1);
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec2 _t11E5 = [_t11E3, _t11E4];
    vec2 _t11E6 = prim -0026<$[2]> (_t11E5, _t0993);
    real _t11E7 = 0.1e1;
    real _t11E8 = 0.e0;
    vec2 _t11E9 = [_t11E7, _t11E8];
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    vec2 _t11EC = [_t11EA, _t11EB];
    real _t11ED = prim ×00BD (_t09AA, _t11EC);
    vec2 _t11EE = prim /0057<$[2]> (_t11E9, _t11ED);
    real _t11EF = prim ×00BD (_t11E6, _t11EE);
    bool _t11F0 = prim >0080 (time1151, _t11EF);
    real _t11F1 = 0.1e1;
    real _t11F2 = 0.e0;
    vec2 _t11F3 = [_t11F1, _t11F2];
    real _t11F4 = prim ×00BD (_t09AA, _t11F3);
    real _t11F5 = prim |()|00B5<$[]> (_t11F4);
    real _t11F6 = 0.1e-20;
    bool _t11F7 = prim >=007E (_t11F5, _t11F6);
    bool _t11F8 = prim $and01C4 (_t11F0, _t11F7);
    bool _t11F9 = prim $and01C4 (_t11E2, _t11F8);
    if _t11F9 {
      int _t11FA = 2;
      bool _t11FB = prim !=0086 (_t09AB, _t11FA);
      if _t11FB {
        real _t11FC = 0.e0;
        real _t11FD = 0.e0;
        vec2 _t11FE = [_t11FC, _t11FD];
        vec2 _t11FF = prim -0026<$[2]> (_t11FE, _t0993);
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec2 _t1202 = [_t1200, _t1201];
        real _t1203 = 0.1e1;
        real _t1204 = 0.e0;
        vec2 _t1205 = [_t1203, _t1204];
        real _t1206 = prim ×00BD (_t09AA, _t1205);
        vec2 _t1207 = prim /0057<$[2]> (_t1202, _t1206);
        time1151 = prim ×00BD (_t11FF, _t1207);
        face1152 = 2;
      } else {
        real _t1208 = 0.e0;
        real _t1209 = 0.e0;
        vec2 _t120A = [_t1208, _t1209];
        vec2 _t120B = prim -0026<$[2]> (_t120A, _t0993);
        real _t120C = 0.1e1;
        real _t120D = 0.e0;
        vec2 _t120E = [_t120C, _t120D];
        real _t120F = 0.1e1;
        real _t1210 = 0.e0;
        vec2 _t1211 = [_t120F, _t1210];
        real _t1212 = prim ×00BD (_t09AA, _t1211);
        vec2 _t1213 = prim /0057<$[2]> (_t120E, _t1212);
        faceTime1153 = prim ×00BD (_t120B, _t1213);
      }
    }
    int _t1214 = -1;
    bool _t1215 = prim !=0086 (face1152, _t1214);
    if _t1215 {
      real _t1216 = 0.e0;
      real _t1217 = prim max0125 (time1151, _t1216);
      real _t1218 = (real)face1152;
      vec2 _t1219 = [_t1217, _t1218];
      _t09AC = _t1219;
    } else {
      real _t121A = -inf;
      bool _t121B = prim ==0084 (_t121A, faceTime1153);
      if _t121B {
        real _t121C = -0.1e1;
        real _t121D = -0.1e1;
        vec2 _t121E = [_t121C, _t121D];
        _t09AC = _t121E;
      } else {
        real _t121F = (real)_t09AB;
        vec2 _t1220 = [faceTime1153, _t121F];
        _t09AC = _t1220;
      }
    }
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9;
      real time1081 = +inf;
      int face1082 = -1;
      real faceTime1083 = -inf;
      real _t1084 = 0.1e1;
      real _t1085 = 0.e0;
      vec2 _t1086 = [_t1084, _t1085];
      vec2 _t1087 = prim -0026<$[2]> (_t1086, _t09D0);
      real _t1088 = -0.1e1;
      real _t1089 = 0.1e1;
      vec2 _t108A = [_t1088, _t1089];
      real _t108B = -0.1e1;
      real _t108C = 0.1e1;
      vec2 _t108D = [_t108B, _t108C];
      real _t108E = prim ×00BD (_t09E7, _t108D);
      vec2 _t108F = prim /0057<$[2]> (_t108A, _t108E);
      real _t1090 = prim ×00BD (_t1087, _t108F);
      real _t1091 = -0.1e-15;
      bool _t1092 = prim >=007E (_t1090, _t1091);
      real _t1093 = 0.1e1;
      real _t1094 = 0.e0;
      vec2 _t1095 = [_t1093, _t1094];
      vec2 _t1096 = prim -0026<$[2]> (_t1095, _t09D0);
      real _t1097 = -0.1e1;
      real _t1098 = 0.1e1;
      vec2 _t1099 = [_t1097, _t1098];
      real _t109A = -0.1e1;
      real _t109B = 0.1e1;
      vec2 _t109C = [_t109A, _t109B];
      real _t109D = prim ×00BD (_t09E7, _t109C);
      vec2 _t109E = prim /0057<$[2]> (_t1099, _t109D);
      real _t109F = prim ×00BD (_t1096, _t109E);
      bool _t10A0 = prim >0080 (time1081, _t109F);
      real _t10A1 = -0.1e1;
      real _t10A2 = 0.1e1;
      vec2 _t10A3 = [_t10A1, _t10A2];
      real _t10A4 = prim ×00BD (_t09E7, _t10A3);
      real _t10A5 = prim |()|00B5<$[]> (_t10A4);
      real _t10A6 = 0.1e-20;
      bool _t10A7 = prim >=007E (_t10A5, _t10A6);
      bool _t10A8 = prim $and01C4 (_t10A0, _t10A7);
      bool _t10A9 = prim $and01C4 (_t1092, _t10A8);
      if _t10A9 {
        int _t10AA = 0;
        bool _t10AB = prim !=0086 (_t09E8, _t10AA);
        if _t10AB {
          real _t10AC = 0.1e1;
          real _t10AD = 0.e0;
          vec2 _t10AE = [_t10AC, _t10AD];
          vec2 _t10AF = prim -0026<$[2]> (_t10AE, _t09D0);
          real _t10B0 = -0.1e1;
          real _t10B1 = 0.1e1;
          vec2 _t10B2 = [_t10B0, _t10B1];
          real _t10B3 = -0.1e1;
          real _t10B4 = 0.1e1;
          vec2 _t10B5 = [_t10B3, _t10B4];
          real _t10B6 = prim ×00BD (_t09E7, _t10B5);
          vec2 _t10B7 = prim /0057<$[2]> (_t10B2, _t10B6);
          time1081 = prim ×00BD (_t10AF, _t10B7);
          face1082 = 0;
        } else {
          real _t10B8 = 0.1e1;
          real _t10B9 = 0.e0;
          vec2 _t10BA = [_t10B8, _t10B9];
          vec2 _t10BB = prim -0026<$[2]> (_t10BA, _t09D0);
          real _t10BC = -0.1e1;
          real _t10BD = 0.1e1;
          vec2 _t10BE = [_t10BC, _t10BD];
          real _t10BF = -0.1e1;
          real _t10C0 = 0.1e1;
          vec2 _t10C1 = [_t10BF, _t10C0];
          real _t10C2 = prim ×00BD (_t09E7, _t10C1);
          vec2 _t10C3 = prim /0057<$[2]> (_t10BE, _t10C2);
          faceTime1083 = prim ×00BD (_t10BB, _t10C3);
        }
      }
      real _t10C4 = 0.e0;
      real _t10C5 = 0.e0;
      vec2 _t10C6 = [_t10C4, _t10C5];
      vec2 _t10C7 = prim -0026<$[2]> (_t10C6, _t09D0);
      real _t10C8 = 0.e0;
      real _t10C9 = 0.1e1;
      vec2 _t10CA = [_t10C8, _t10C9];
      real _t10CB = 0.e0;
      real _t10CC = 0.1e1;
      vec2 _t10CD = [_t10CB, _t10CC];
      real _t10CE = prim ×00BD (_t09E7, _t10CD);
      vec2 _t10CF = prim /0057<$[2]> (_t10CA, _t10CE);
      real _t10D0 = prim ×00BD (_t10C7, _t10CF);
      real _t10D1 = -0.1e-15;
      bool _t10D2 = prim >=007E (_t10D0, _t10D1);
      real _t10D3 = 0.e0;
      real _t10D4 = 0.e0;
      vec2 _t10D5 = [_t10D3, _t10D4];
      vec2 _t10D6 = prim -0026<$[2]> (_t10D5, _t09D0);
      real _t10D7 = 0.e0;
      real _t10D8 = 0.1e1;
      vec2 _t10D9 = [_t10D7, _t10D8];
      real _t10DA = 0.e0;
      real _t10DB = 0.1e1;
      vec2 _t10DC = [_t10DA, _t10DB];
      real _t10DD = prim ×00BD (_t09E7, _t10DC);
      vec2 _t10DE = prim /0057<$[2]> (_t10D9, _t10DD);
      real _t10DF = prim ×00BD (_t10D6, _t10DE);
      bool _t10E0 = prim >0080 (time1081, _t10DF);
      real _t10E1 = 0.e0;
      real _t10E2 = 0.1e1;
      vec2 _t10E3 = [_t10E1, _t10E2];
      real _t10E4 = prim ×00BD (_t09E7, _t10E3);
      real _t10E5 = prim |()|00B5<$[]> (_t10E4);
      real _t10E6 = 0.1e-20;
      bool _t10E7 = prim >=007E (_t10E5, _t10E6);
      bool _t10E8 = prim $and01C4 (_t10E0, _t10E7);
      bool _t10E9 = prim $and01C4 (_t10D2, _t10E8);
      if _t10E9 {
        int _t10EA = 1;
        bool _t10EB = prim !=0086 (_t09E8, _t10EA);
        if _t10EB {
          real _t10EC = 0.e0;
          real _t10ED = 0.e0;
          vec2 _t10EE = [_t10EC, _t10ED];
          vec2 _t10EF = prim -0026<$[2]> (_t10EE, _t09D0);
          real _t10F0 = 0.e0;
          real _t10F1 = 0.1e1;
          vec2 _t10F2 = [_t10F0, _t10F1];
          real _t10F3 = 0.e0;
          real _t10F4 = 0.1e1;
          vec2 _t10F5 = [_t10F3, _t10F4];
          real _t10F6 = prim ×00BD (_t09E7, _t10F5);
          vec2 _t10F7 = prim /0057<$[2]> (_t10F2, _t10F6);
          time1081 = prim ×00BD (_t10EF, _t10F7);
          face1082 = 1;
        } else {
          real _t10F8 = 0.e0;
          real _t10F9 = 0.e0;
          vec2 _t10FA = [_t10F8, _t10F9];
          vec2 _t10FB = prim -0026<$[2]> (_t10FA, _t09D0);
          real _t10FC = 0.e0;
          real _t10FD = 0.1e1;
          vec2 _t10FE = [_t10FC, _t10FD];
          real _t10FF = 0.e0;
          real _t1100 = 0.1e1;
          vec2 _t1101 = [_t10FF, _t1100];
          real _t1102 = prim ×00BD (_t09E7, _t1101);
          vec2 _t1103 = prim /0057<$[2]> (_t10FE, _t1102);
          faceTime1083 = prim ×00BD (_t10FB, _t1103);
        }
      }
      real _t1104 = 0.e0;
      real _t1105 = 0.e0;
      vec2 _t1106 = [_t1104, _t1105];
      vec2 _t1107 = prim -0026<$[2]> (_t1106, _t09D0);
      real _t1108 = 0.1e1;
      real _t1109 = 0.e0;
      vec2 _t110A = [_t1108, _t1109];
      real _t110B = 0.1e1;
      real _t110C = 0.e0;
      vec2 _t110D = [_t110B, _t110C];
      real _t110E = prim ×00BD (_t09E7, _t110D);
      vec2 _t110F = prim /0057<$[2]> (_t110A, _t110E);
      real _t1110 = prim ×00BD (_t1107, _t110F);
      real _t1111 = -0.1e-15;
      bool _t1112 = prim >=007E (_t1110, _t1111);
      real _t1113 = 0.e0;
      real _t1114 = 0.e0;
      vec2 _t1115 = [_t1113, _t1114];
      vec2 _t1116 = prim -0026<$[2]> (_t1115, _t09D0);
      real _t1117 = 0.1e1;
      real _t1118 = 0.e0;
      vec2 _t1119 = [_t1117, _t1118];
      real _t111A = 0.1e1;
      real _t111B = 0.e0;
      vec2 _t111C = [_t111A, _t111B];
      real _t111D = prim ×00BD (_t09E7, _t111C);
      vec2 _t111E = prim /0057<$[2]> (_t1119, _t111D);
      real _t111F = prim ×00BD (_t1116, _t111E);
      bool _t1120 = prim >0080 (time1081, _t111F);
      real _t1121 = 0.1e1;
      real _t1122 = 0.e0;
      vec2 _t1123 = [_t1121, _t1122];
      real _t1124 = prim ×00BD (_t09E7, _t1123);
      real _t1125 = prim |()|00B5<$[]> (_t1124);
      real _t1126 = 0.1e-20;
      bool _t1127 = prim >=007E (_t1125, _t1126);
      bool _t1128 = prim $and01C4 (_t1120, _t1127);
      bool _t1129 = prim $and01C4 (_t1112, _t1128);
      if _t1129 {
        int _t112A = 2;
        bool _t112B = prim !=0086 (_t09E8, _t112A);
        if _t112B {
          real _t112C = 0.e0;
          real _t112D = 0.e0;
          vec2 _t112E = [_t112C, _t112D];
          vec2 _t112F = prim -0026<$[2]> (_t112E, _t09D0);
          real _t1130 = 0.1e1;
          real _t1131 = 0.e0;
          vec2 _t1132 = [_t1130, _t1131];
          real _t1133 = 0.1e1;
          real _t1134 = 0.e0;
          vec2 _t1135 = [_t1133, _t1134];
          real _t1136 = prim ×00BD (_t09E7, _t1135);
          vec2 _t1137 = prim /0057<$[2]> (_t1132, _t1136);
          time1081 = prim ×00BD (_t112F, _t1137);
          face1082 = 2;
        } else {
          real _t1138 = 0.e0;
          real _t1139 = 0.e0;
          vec2 _t113A = [_t1138, _t1139];
          vec2 _t113B = prim -0026<$[2]> (_t113A, _t09D0);
          real _t113C = 0.1e1;
          real _t113D = 0.e0;
          vec2 _t113E = [_t113C, _t113D];
          real _t113F = 0.1e1;
          real _t1140 = 0.e0;
          vec2 _t1141 = [_t113F, _t1140];
          real _t1142 = prim ×00BD (_t09E7, _t1141);
          vec2 _t1143 = prim /0057<$[2]> (_t113E, _t1142);
          faceTime1083 = prim ×00BD (_t113B, _t1143);
        }
      }
      int _t1144 = -1;
      bool _t1145 = prim !=0086 (face1082, _t1144);
      if _t1145 {
        real _t1146 = 0.e0;
        real _t1147 = prim max0125 (time1081, _t1146);
        real _t1148 = (real)face1082;
        vec2 _t1149 = [_t1147, _t1148];
        _t09E9 = _t1149;
      } else {
        real _t114A = -inf;
        bool _t114B = prim ==0084 (_t114A, faceTime1083);
        if _t114B {
          real _t114C = -0.1e1;
          real _t114D = -0.1e1;
          vec2 _t114E = [_t114C, _t114D];
          _t09E9 = _t114E;
        } else {
          real _t114F = (real)_t09E8;
          vec2 _t1150 = [faceTime1083, _t114F];
          _t09E9 = _t1150;
        }
      }
      Femdata: MeshPos posp09EA;
      int _t100C = -1;
      real _t100D = _t09E9[1];
      int _t100E = prim $r2i01B7 (_t100D);
      int[2] _t100F = func nextCell40536 (_t100E, _t09B7, _t09B6);
      int _t1010 = 0;
      int _t1011 = prim $sub01C0<int; %2> (_t100F, _t1010);
      bool _t1012 = prim !=0086 (_t100C, _t1011);
      if _t1012 {
        real _t1013 = _t09E9[1];
        int _t1014 = prim $r2i01B7 (_t1013);
        int[2] _t1015 = func nextCell40536 (_t1014, _t09B7, _t09B6);
        int _t1016 = 0;
        int _t1017 = prim $sub01C0<int; %2> (_t1015, _t1016);
        real _t1018 = 0.1e1;
        real _t1019 = 0.e0;
        vec2 _t101A = [_t1018, _t1019];
        real _t101B = 0.e0;
        real _t101C = 0.e0;
        vec2 _t101D = [_t101B, _t101C];
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec2 _t1020 = [_t101E, _t101F];
        vec2[3] _t1021 = {_t101A, _t101D, _t1020};
        real _t1022 = _t09E9[1];
        int _t1023 = prim $r2i01B7 (_t1022);
        int[2] _t1024 = func nextCell40536 (_t1023, _t09B7, _t09B6);
        int _t1025 = 1;
        int _t1026 = prim $sub01C0<int; %2> (_t1024, _t1025);
        vec2 _t1027 = prim $sub01C0<vec2; %3> (_t1021, _t1026);
        real _t1028 = -0.1e1;
        real _t1029 = 0.1e1;
        vec2 _t102A = [_t1028, _t1029];
        real _t102B = 0.e0;
        real _t102C = 0.1e1;
        vec2 _t102D = [_t102B, _t102C];
        real _t102E = 0.1e1;
        real _t102F = 0.e0;
        vec2 _t1030 = [_t102E, _t102F];
        vec2[3] _t1031 = {_t102A, _t102D, _t1030};
        real _t1032 = _t09E9[1];
        int _t1033 = prim $r2i01B7 (_t1032);
        int[2] _t1034 = func nextCell40536 (_t1033, _t09B7, _t09B6);
        int _t1035 = 1;
        int _t1036 = prim $sub01C0<int; %2> (_t1034, _t1035);
        vec2 _t1037 = prim $sub01C0<vec2; %3> (_t1031, _t1036);
        real _t1038 = _t09E9[0];
        vec2 _t1039 = prim *0036<$[2]> (_t1038, _t09CF);
        vec2 _t103A = prim +0017<$[2]> (_t1039, _t09B8);
        real _t103B = _t103A[0];
        real _t103C = _t09E9[0];
        vec2 _t103D = prim *0036<$[2]> (_t103C, _t09CF);
        vec2 _t103E = prim +0017<$[2]> (_t103D, _t09B8);
        real _t103F = _t103E[1];
        real[2] _t1040 = {_t103B, _t103F};
        int _t1041 = 1;
        int _t1042 = 1;
        int _t1043 = 0;
        int[3] _t1044 = {_t1041, _t1042, _t1043};
        real _t1045 = _t09E9[1];
        int _t1046 = prim $r2i01B7 (_t1045);
        int _t1047 = prim $sub01C0<int; %3> (_t1044, _t1046);
        real _t1048 = prim $sub01C0<real; %2> (_t1040, _t1047);
        real _t1049 = 0.1e1;
        real _t104A = 0.e0;
        real[2] _t104B = {_t1049, _t104A};
        real _t104C = 0.e0;
        real _t104D = 0.e0;
        real[2] _t104E = {_t104C, _t104D};
        real _t104F = 0.e0;
        real _t1050 = 0.e0;
        real[2] _t1051 = {_t104F, _t1050};
        real[2][3] _t1052 = {_t104B, _t104E, _t1051};
        real _t1053 = _t09E9[1];
        int _t1054 = prim $r2i01B7 (_t1053);
        real[2] _t1055 = prim $sub01C0<real[2]; %3> (_t1052, _t1054);
        int _t1056 = 1;
        int _t1057 = 1;
        int _t1058 = 0;
        int[3] _t1059 = {_t1056, _t1057, _t1058};
        real _t105A = _t09E9[1];
        int _t105B = prim $r2i01B7 (_t105A);
        int _t105C = prim $sub01C0<int; %3> (_t1059, _t105B);
        real _t105D = prim $sub01C0<real; %2> (_t1055, _t105C);
        real _t105E = prim -0026<$[]> (_t1048, _t105D);
        real _t105F = -0.1e1;
        real _t1060 = 0.1e1;
        real[2] _t1061 = {_t105F, _t1060};
        real _t1062 = 0.e0;
        real _t1063 = 0.1e1;
        real[2] _t1064 = {_t1062, _t1063};
        real _t1065 = 0.1e1;
        real _t1066 = 0.e0;
        real[2] _t1067 = {_t1065, _t1066};
        real[2][3] _t1068 = {_t1061, _t1064, _t1067};
        real _t1069 = _t09E9[1];
        int _t106A = prim $r2i01B7 (_t1069);
        real[2] _t106B = prim $sub01C0<real[2]; %3> (_t1068, _t106A);
        int _t106C = 1;
        int _t106D = 1;
        int _t106E = 0;
        int[3] _t106F = {_t106C, _t106D, _t106E};
        real _t1070 = _t09E9[1];
        int _t1071 = prim $r2i01B7 (_t1070);
        int _t1072 = prim $sub01C0<int; %3> (_t106F, _t1071);
        real _t1073 = prim $sub01C0<real; %2> (_t106B, _t1072);
        real _t1074 = prim /0055 (_t105E, _t1073);
        vec2 _t1075 = prim *0038<$[2]> (_t1037, _t1074);
        vec2 _t1076 = prim +0017<$[2]> (_t1027, _t1075);
        real _t1077 = _t09E9[1];
        int _t1078 = prim $r2i01B7 (_t1077);
        int[2] _t1079 = func nextCell40536 (_t1078, _t09B7, _t09B6);
        int _t107A = 1;
        int _t107B = prim $sub01C0<int; %2> (_t1079, _t107A);
        Femdata: MeshPos _t107C = extractFemItemN((_t09B6, _t1017, _t1076, _t107B),RefBuild(Mesh),);
        posp09EA = _t107C;
      } else {
        real _t107D = _t09E9[0];
        vec2 _t107E = prim *0036<$[2]> (_t107D, _t09CF);
        vec2 _t107F = prim +0017<$[2]> (_t107E, _t09B8);
        Femdata: MeshPos _t1080 = extractFemItemN((_t09B6, _t107F),InvalidBuildBoundary(MeshPos),);
        posp09EA = _t1080;
      }
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11;
          int _t1009 = extractFemItem(CellIndex(Mesh), int, _t0A0D);
          int _t100A = extractFemItem(CellIndex(Mesh), int, _t0A10);
          bool _t100B = prim !=0086 (_t1009, _t100A);
          _t0A11 = _t100B;
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19;
      vec2 _t1003 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      int _t1004 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: Mesh _t1005 = extractFem(pos0854, Mesh);
      vec2 _t1006;
      field(2)[2] _t1007 = femField(_t1005,_t1004,field(2)[2],Transform,);
      vec2 _t1008 = prim @00A5<#∞; %2; $[2]> (_t1007, _t1003);
      _t1006 = _t1008;
      _t0A19 = _t1006;
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStartMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0454;
input real isoval0460 = <default>;
input real thick0461 = <default>;
input vec3 camEye0462 = <default>;
input vec3 camAt0466 = <default>;
input vec3 camUp046A = <default>;
input real camFOV046E = <default>;
input int iresU046F = <default>;
input int iresV0470 = <default>;
input real camNear0471 = <default>;
input real camFar0472 = <default>;
input real refStep0473 = <default>;
input real rayStep0474 = <default>;
input vec3 lightVsp0475 = <default>;
input real phongKa0479 = <default>;
input real phongKd047A = <default>;
input bool debug047B = <default>;
input int debugU047C = <default>;
input int debugV047D = <default>;
input real eps047E = <default>;
constants {
  isoval0460 = 0.2e0;
  thick0461 = 0.7e-1;
  real _t0463 = 0.3e1;
  real _t0464 = -0.3e1;
  real _t0465 = 0.3e1;
  camEye0462 = [_t0463, _t0464, _t0465];
  real _t0467 = 0.5e0;
  real _t0468 = 0.5e0;
  real _t0469 = 0.5e0;
  camAt0466 = [_t0467, _t0468, _t0469];
  real _t046B = 0.e0;
  real _t046C = 0.e0;
  real _t046D = 0.1e1;
  camUp046A = [_t046B, _t046C, _t046D];
  camFOV046E = 0.137e2;
  iresU046F = 10;
  iresV0470 = 10;
  camNear0471 = -0.2e1;
  camFar0472 = 0.5e1;
  refStep0473 = 0.1e1;
  rayStep0474 = 0.1e-1;
  real _t0476 = 0.e0;
  real _t0477 = 0.e0;
  real _t0478 = 0.1e1;
  lightVsp0475 = [_t0476, _t0477, _t0478];
  phongKa0479 = 0.1e0;
  phongKd047A = 0.9e0;
  debug047B = false;
  debugU047C = 8;
  debugV047D = 2;
  eps047E = 0.1e-7;
}
global Femdata: MeshCell[] 0cell_a0455;
global real camDist07F9;
global real camNearVsp07FA;
global real camFarVsp07FB;
global vec3 camN07FD;
global vec3 camU07FF;
global vec3 camV0800;
global real camVmax0806;
global real camUmax080A;
function Femdata: MeshPos#2 _msh_newtonInverse04EA (vec2 pos04EB, int cellInt04EC, Femdata: Mesh mesh04ED)
{
  real _t04EE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04EF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04F0 = [_t04EE, _t04EF];
  field(2)[2] _t04F1 = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
  field(2)[2,2] _t04F2 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t04F1);
  field(2)[2,2] _t04F3 = prim inv015B<#∞; %2> (_t04F2);
  real _t04F4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04F5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec2 _t04F6 = [_t04F4, _t04F5];
  A04F7 = prim @00A5<#∞; %2; $[2,2]> (_t04F3, _t04F6);
  int _t04F8 = 0;
  int _t04F9 = 16;
  int[] _t04FA = prim $range01C3 (_t04F8, _t04F9);
  foreach itter051E in _t04FA {
    field(2)[2] _t04FB = femField(mesh04ED,cellInt04EC,field(2)[2],Transform,);
    field(2)[2] _t04FC = prim -002E<#∞; %2; $[2]> (_t04FB, pos04EB);
    field(2)[2] _t04FD = prim •00D4<#∞; %2; $[2,2]; $[2]; $[2]> (A04F7, _t04FC);
    delta04FE = prim @00A5<#∞; %2; $[2]> (_t04FD, xn04F0);
    xn04F0 = prim -0026<$[2]> (xn04F0, delta04FE);
    real _t04FF = 0.1e-7;
    real _t0500 = 0.1e-7;
    real _t0501 = prim *0034 (_t04FF, _t0500);
    real _t0502 = prim •00CE<$[2]; $[2]; $[]> (delta04FE, delta04FE);
    bool _t0503 = prim >=007E (_t0501, _t0502);
    if _t0503 {
      real _t0504 = 0.1e1;
      real _t0505 = 0.1e-8;
      real _t0506 = prim +0017<$[]> (_t0504, _t0505);
      real _t0507 = 0.1e1;
      real _t0508 = 0.1e1;
      vec2 _t0509 = [_t0507, _t0508];
      real _t050A = prim •00CE<$[2]; $[2]; $[]> (_t0509, xn04F0);
      bool _t050B = prim >0080 (_t0506, _t050A);
      real _t050C = 0.1e-8;
      real _t050D = 0.1e-8;
      vec2 _t050E = [_t050C, _t050D];
      vec2 _t050F = prim +0017<$[2]> (_t050E, xn04F0);
      real _t0510 = _t050F[0];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      real _t0513 = 0.1e-8;
      real _t0514 = 0.1e-8;
      vec2 _t0515 = [_t0513, _t0514];
      vec2 _t0516 = prim +0017<$[2]> (_t0515, xn04F0);
      real _t0517 = _t0516[1];
      real _t0518 = -0.e0;
      bool _t0519 = prim >0080 (_t0517, _t0518);
      bool _t051A = prim $and01C4 (_t0512, _t0519);
      bool _t051B = prim $and01C4 (_t050B, _t051A);
      if _t051B {
        Femdata: MeshPos _t051C = extractFemItemN((mesh04ED, cellInt04EC, xn04F0, pos04EB),AllBuild(MeshPos),);
        return _t051C;
      } else {
        Femdata: MeshPos _t051D = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
        return _t051D;
      }
    }
  }
  Femdata: MeshPos _t051F = extractFemItemN((mesh04ED),InvalidBuild(MeshPos),);
  return _t051F;
}
function int[2]#5 nextCell40536 (int faceIdx05A9, int cell05AA, Femdata: Mesh mesh05AB)
{
  int _t05AC = 6;
  int _t05AD = prim *0033 (cell05AA, _t05AC);
  int _t05AE = 2;
  int _t05AF = prim *0033 (faceIdx05A9, _t05AE);
  int _t05B0 = prim +0015 (_t05AD, _t05AF);
  int[2] _t05B1 = extractFemItemN((mesh05AB, _t05B0),CellFaceCell(Mesh),);
  return _t05B1;
}
globalInit {
  int _t0458 = 0;
  int _t0456 = 1;
  int _t045A = extractFemItem(NumCell(Mesh), int, a0454);
  int _t0459 = prim -0024 (_t045A, _t0456);
  int[] _t045D = prim $range01C3 (_t0458, _t0459);
  Femdata: MeshCell[] _t045E = {};
  foreach _t045C in _t045D {
    Femdata: MeshCell _t045F = loadFem(MeshCell, a0454, _t045C);
    _t045E = prim @0010<Femdata: MeshCell> (_t045E, _t045F);
  }
  0cell_a0455 = _t045E;
  vec3 _t07F8 = prim -0026<$[3]> (camAt0466, camEye0462);
  camDist07F9 = prim |()|00B5<$[3]> (_t07F8);
  camNearVsp07FA = prim +0017<$[]> (camNear0471, camDist07F9);
  camFarVsp07FB = prim +0017<$[]> (camFar0472, camDist07F9);
  vec3 _t07FC = prim -0026<$[3]> (camAt0466, camEye0462);
  camN07FD = prim normalize0137<$[3]> (_t07FC);
  vec3 _t07FE = prim ×00BE (camN07FD, camUp046A);
  camU07FF = prim normalize0137<$[3]> (_t07FE);
  camV0800 = prim ×00BE (camU07FF, camN07FD);
  real _t0801 = 0.314159265358979323846264338327950288e1;
  real _t0802 = prim *0034 (camFOV046E, _t0801);
  real _t0803 = 0.36e3;
  real _t0804 = prim /0055 (_t0802, _t0803);
  real _t0805 = prim tan0179 (_t0804);
  camVmax0806 = prim *0034 (_t0805, camDist07F9);
  real _t0807 = (real)iresU046F;
  real _t0808 = prim *0034 (camVmax0806, _t0807);
  real _t0809 = (real)iresV0470;
  camUmax080A = prim /0055 (_t0808, _t0809);
}
strand ray (int ui0810, int vi0811) {
  real rayU0812;
  real rayV0819;
  vec3 UV0820;
  output vec3 rayOrig0823;
  output vec3 rayVec0824;
  output real camNearVsp0829;
  output real camFarVsp082A;
  vec3 rayStart082B;
  vec2 rayStartProj082D;
  vec3 rayEnd0830;
  vec3 dpos0832;
  vec2 dposProj0833;
  output Femdata: MeshPos[] poses0836;
  output real[] normalizedTimes0839;
  int cellIntersects083C;
  output vec2[] rayCellInter083D;
  output vec3[] spaceInter0840;
  output vec2[] refSpaceInter0843;
  output Femdata: MeshCell[] cellInter0846;
  int currentCellInt0849;
  real rayN084A;
  Femdata: MeshCell currentCell084B;
  int steps084D;
  Femdata: MeshPos pos0854;
  bool startsInside085A;
  int ui1234;
  int vi1233;
  {
    real _t0813 = prim unary -008B<$[]> (camUmax080A);
    real _t0814 = -0.5e0;
    real _t0815 = (real)ui0810;
    real _t0816 = (real)iresU046F;
    real _t0817 = 0.5e0;
    real _t0818 = prim -0026<$[]> (_t0816, _t0817);
    rayU0812 = prim lerp0098<$[]> (_t0813, camUmax080A, _t0814, _t0815, _t0818);
    real _t081A = prim unary -008B<$[]> (camVmax0806);
    real _t081B = -0.5e0;
    real _t081C = (real)vi0811;
    real _t081D = (real)iresV0470;
    real _t081E = 0.5e0;
    real _t081F = prim -0026<$[]> (_t081D, _t081E);
    rayV0819 = prim lerp0098<$[]> (_t081A, camVmax0806, _t081B, _t081C, _t081F);
    vec3 _t0821 = prim *0036<$[3]> (rayU0812, camU07FF);
    vec3 _t0822 = prim *0036<$[3]> (rayV0819, camV0800);
    UV0820 = prim +0017<$[3]> (_t0821, _t0822);
    rayOrig0823 = prim +0017<$[3]> (camEye0462, UV0820);
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec3 _t0828 = [_t0825, _t0826, _t0827];
    rayVec0824 = prim +0017<$[3]> (camN07FD, _t0828);
    camNearVsp0829 = camNearVsp07FA;
    camFarVsp082A = camFarVsp07FB;
    vec3 _t082C = prim *0036<$[3]> (camNearVsp0829, rayVec0824);
    rayStart082B = prim +0017<$[3]> (rayOrig0823, _t082C);
    real _t082E = rayStart082B[0];
    real _t082F = rayStart082B[1];
    rayStartProj082D = [_t082E, _t082F];
    vec3 _t0831 = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
    rayEnd0830 = prim +0017<$[3]> (rayOrig0823, _t0831);
    dpos0832 = prim -0026<$[3]> (rayEnd0830, rayStart082B);
    real _t0834 = dpos0832[0];
    real _t0835 = dpos0832[1];
    dposProj0833 = [_t0834, _t0835];
    Femdata: MeshPos[0] _t0837 = {};
    Femdata: MeshPos[] _t0838 = (Femdata: MeshPos[])_t0837;
    poses0836 = _t0838;
    real[0] _t083A = {};
    real[] _t083B = (real[])_t083A;
    normalizedTimes0839 = _t083B;
    cellIntersects083C = 0;
    vec2[0] _t083E = {};
    vec2[] _t083F = (vec2[])_t083E;
    rayCellInter083D = _t083F;
    vec3[0] _t0841 = {};
    vec3[] _t0842 = (vec3[])_t0841;
    spaceInter0840 = _t0842;
    vec2[0] _t0844 = {};
    vec2[] _t0845 = (vec2[])_t0844;
    refSpaceInter0843 = _t0845;
    Femdata: MeshCell[0] _t0847 = {};
    Femdata: MeshCell[] _t0848 = (Femdata: MeshCell[])_t0847;
    cellInter0846 = _t0848;
    currentCellInt0849 = -1;
    rayN084A = 0.e0;
    int _t084C = 0;
    currentCell084B = prim $dynsub01C2<Femdata: MeshCell> (0cell_a0455, _t084C);
    steps084D = 0;
    pos0854 = extractFemItemN((a0454),InvalidBuild(MeshPos),);
    startsInside085A = false;
    ui1234 = ui0810;
    vi1233 = vi0811;
  }
  start
  {
    real startTime085B = camFarVsp082A;
    bool _t085C;
    bool _t085D = prim !=0086 (ui1234, debugU047C);
    if _t085D {
      _t085C = true;
    } else {
      _t085C = prim !=0086 (vi1233, debugV047D);
    }
    if _t085C {
      if debug047B {
        stabilize;
      }
    }
    foreach c085F in 0cell_a0455 {
      string _t085E = "Cell:";
      string _t0860 = "\n";
      print (_t085E, c085F, _t0860);
      int _t0861 = extractFemItem(CellIndex(MeshCell), int, c085F);
      Femdata: Mesh _t0862 = extractFem(c085F, Mesh);
      Femdata: MeshPos _t0863 = func _msh_newtonInverse04EA (rayStartProj082D, _t0861, _t0862);
      bool _t0864 = extractFemItem(Valid(MeshPos), bool, _t0863);
      if _t0864 {
        string _t0865 = "pos starts inside\n";
        print (_t0865);
        Femdata: Mesh _t0866 = extractFem(c085F, Mesh);
        int _t0867 = extractFemItem(CellIndex(MeshCell), int, c085F);
        Femdata: Mesh _t0868 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0869 = extractFem(c085F, Mesh);
        int _t086A = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t086B = femField(_t0868,_t086A,field(2)[2],InvTransform,_msh_newtonInverse04EA );
        vec2 _t086C = prim @00A5<#∞; %2; $[2]> (_t086B, rayStartProj082D);
        Femdata: MeshPos p086D = extractFemItemN((_t0866, _t0867, _t086C),RefBuild(Mesh),);
        poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p086D);
        normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, camNearVsp0829);
        startTime085B = camNearVsp0829;
        currentCellInt0849 = cellIntersects083C;
        int _t086E = 1;
        cellIntersects083C = prim +0015 (cellIntersects083C, _t086E);
        startsInside085A = true;
      } else {
        Femdata: Mesh _t086F = extractFem(c085F, Mesh);
        Femdata: Mesh _t0870 = extractFem(c085F, Mesh);
        int _t0871 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0872 = femField(_t086F,_t0871,field(2)[2],Transform,);
        field(2)[2,2] _t0873 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0872);
        real _t0874 = -0.e0;
        real _t0875 = -0.e0;
        vec2 _t0876 = [_t0874, _t0875];
        tensor[2,2] _t0877 = prim @00A5<#∞; %2; $[2,2]> (_t0873, _t0876);
        tensor[2,2] _t0878 = prim inv0154 (_t0877);
        Femdata: Mesh _t0879 = extractFem(c085F, Mesh);
        Femdata: Mesh _t087A = extractFem(c085F, Mesh);
        int _t087B = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t087C = femField(_t0879,_t087B,field(2)[2],Transform,);
        real _t087D = -0.e0;
        real _t087E = -0.e0;
        vec2 _t087F = [_t087D, _t087E];
        vec2 _t0880 = prim @00A5<#∞; %2; $[2]> (_t087C, _t087F);
        vec2 _t0881 = prim -0026<$[2]> (rayStartProj082D, _t0880);
        vec2 _t0882 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0878, _t0881);
        Femdata: Mesh _t0883 = extractFem(c085F, Mesh);
        Femdata: Mesh _t0884 = extractFem(c085F, Mesh);
        int _t0885 = extractFemItem(CellIndex(MeshCell), int, c085F);
        field(2)[2] _t0886 = femField(_t0883,_t0885,field(2)[2],Transform,);
        field(2)[2,2] _t0887 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0886);
        real _t0888 = -0.e0;
        real _t0889 = -0.e0;
        vec2 _t088A = [_t0888, _t0889];
        tensor[2,2] _t088B = prim @00A5<#∞; %2; $[2,2]> (_t0887, _t088A);
        tensor[2,2] _t088C = prim inv0154 (_t088B);
        vec2 _t088D = prim •00CE<$[2,2]; $[2]; $[2]> (_t088C, dposProj0833);
        vec2 _t088E;
        real time0E92 = +inf;
        int face0E93 = -1;
        real _t0E95 = 0.1e1;
        real _t0E96 = 0.e0;
        vec2 _t0E97 = [_t0E95, _t0E96];
        vec2 _t0E98 = prim -0026<$[2]> (_t0E97, _t0882);
        real _t0E99 = -0.1e1;
        real _t0E9A = 0.1e1;
        vec2 _t0E9B = [_t0E99, _t0E9A];
        real _t0E9C = -0.1e1;
        real _t0E9D = 0.1e1;
        vec2 _t0E9E = [_t0E9C, _t0E9D];
        real _t0E9F = prim ×00BD (_t088D, _t0E9E);
        vec2 _t0EA0 = prim /0057<$[2]> (_t0E9B, _t0E9F);
        real _t0EA1 = prim ×00BD (_t0E98, _t0EA0);
        real _t0EA2 = -0.1e-15;
        bool _t0EA3 = prim >=007E (_t0EA1, _t0EA2);
        real _t0EA4 = 0.1e1;
        real _t0EA5 = 0.e0;
        vec2 _t0EA6 = [_t0EA4, _t0EA5];
        vec2 _t0EA7 = prim -0026<$[2]> (_t0EA6, _t0882);
        real _t0EA8 = -0.1e1;
        real _t0EA9 = 0.1e1;
        vec2 _t0EAA = [_t0EA8, _t0EA9];
        real _t0EAB = -0.1e1;
        real _t0EAC = 0.1e1;
        vec2 _t0EAD = [_t0EAB, _t0EAC];
        real _t0EAE = prim ×00BD (_t088D, _t0EAD);
        vec2 _t0EAF = prim /0057<$[2]> (_t0EAA, _t0EAE);
        real _t0EB0 = prim ×00BD (_t0EA7, _t0EAF);
        bool _t0EB1 = prim >0080 (time0E92, _t0EB0);
        real _t0EB2 = -0.1e1;
        real _t0EB3 = 0.1e1;
        vec2 _t0EB4 = [_t0EB2, _t0EB3];
        real _t0EB5 = prim ×00BD (_t088D, _t0EB4);
        real _t0EB6 = prim |()|00B5<$[]> (_t0EB5);
        real _t0EB7 = 0.1e-20;
        bool _t0EB8 = prim >=007E (_t0EB6, _t0EB7);
        bool _t0EB9 = prim $and01C4 (_t0EB1, _t0EB8);
        bool _t0EBA = prim $and01C4 (_t0EA3, _t0EB9);
        if _t0EBA {
          real _t0EBB = 0.1e1;
          real _t0EBC = 0.1e-8;
          real _t0EBD = prim +0017<$[]> (_t0EBB, _t0EBC);
          real _t0EBE = 0.1e1;
          real _t0EBF = 0.1e1;
          vec2 _t0EC0 = [_t0EBE, _t0EBF];
          real _t0EC1 = 0.1e1;
          real _t0EC2 = 0.e0;
          vec2 _t0EC3 = [_t0EC1, _t0EC2];
          vec2 _t0EC4 = prim -0026<$[2]> (_t0EC3, _t0882);
          real _t0EC5 = -0.1e1;
          real _t0EC6 = 0.1e1;
          vec2 _t0EC7 = [_t0EC5, _t0EC6];
          real _t0EC8 = -0.1e1;
          real _t0EC9 = 0.1e1;
          vec2 _t0ECA = [_t0EC8, _t0EC9];
          real _t0ECB = prim ×00BD (_t088D, _t0ECA);
          vec2 _t0ECC = prim /0057<$[2]> (_t0EC7, _t0ECB);
          real _t0ECD = prim ×00BD (_t0EC4, _t0ECC);
          vec2 _t0ECE = prim *0038<$[2]> (_t088D, _t0ECD);
          vec2 _t0ECF = prim +0017<$[2]> (_t0882, _t0ECE);
          real _t0ED0 = prim •00CE<$[2]; $[2]; $[]> (_t0EC0, _t0ECF);
          bool _t0ED1 = prim >0080 (_t0EBD, _t0ED0);
          real _t0ED2 = 0.1e-8;
          real _t0ED3 = 0.1e-8;
          vec2 _t0ED4 = [_t0ED2, _t0ED3];
          real _t0ED5 = 0.1e1;
          real _t0ED6 = 0.e0;
          vec2 _t0ED7 = [_t0ED5, _t0ED6];
          vec2 _t0ED8 = prim -0026<$[2]> (_t0ED7, _t0882);
          real _t0ED9 = -0.1e1;
          real _t0EDA = 0.1e1;
          vec2 _t0EDB = [_t0ED9, _t0EDA];
          real _t0EDC = -0.1e1;
          real _t0EDD = 0.1e1;
          vec2 _t0EDE = [_t0EDC, _t0EDD];
          real _t0EDF = prim ×00BD (_t088D, _t0EDE);
          vec2 _t0EE0 = prim /0057<$[2]> (_t0EDB, _t0EDF);
          real _t0EE1 = prim ×00BD (_t0ED8, _t0EE0);
          vec2 _t0EE2 = prim *0038<$[2]> (_t088D, _t0EE1);
          vec2 _t0EE3 = prim +0017<$[2]> (_t0882, _t0EE2);
          vec2 _t0EE4 = prim +0017<$[2]> (_t0ED4, _t0EE3);
          real _t0EE5 = _t0EE4[0];
          real _t0EE6 = -0.e0;
          bool _t0EE7 = prim >0080 (_t0EE5, _t0EE6);
          real _t0EE8 = 0.1e-8;
          real _t0EE9 = 0.1e-8;
          vec2 _t0EEA = [_t0EE8, _t0EE9];
          real _t0EEB = 0.1e1;
          real _t0EEC = 0.e0;
          vec2 _t0EED = [_t0EEB, _t0EEC];
          vec2 _t0EEE = prim -0026<$[2]> (_t0EED, _t0882);
          real _t0EEF = -0.1e1;
          real _t0EF0 = 0.1e1;
          vec2 _t0EF1 = [_t0EEF, _t0EF0];
          real _t0EF2 = -0.1e1;
          real _t0EF3 = 0.1e1;
          vec2 _t0EF4 = [_t0EF2, _t0EF3];
          real _t0EF5 = prim ×00BD (_t088D, _t0EF4);
          vec2 _t0EF6 = prim /0057<$[2]> (_t0EF1, _t0EF5);
          real _t0EF7 = prim ×00BD (_t0EEE, _t0EF6);
          vec2 _t0EF8 = prim *0038<$[2]> (_t088D, _t0EF7);
          vec2 _t0EF9 = prim +0017<$[2]> (_t0882, _t0EF8);
          vec2 _t0EFA = prim +0017<$[2]> (_t0EEA, _t0EF9);
          real _t0EFB = _t0EFA[1];
          real _t0EFC = -0.e0;
          bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
          bool _t0EFE = prim $and01C4 (_t0EE7, _t0EFD);
          bool _t0EFF = prim $and01C4 (_t0ED1, _t0EFE);
          if _t0EFF {
            real _t0F00 = 0.1e1;
            real _t0F01 = 0.e0;
            vec2 _t0F02 = [_t0F00, _t0F01];
            vec2 _t0F03 = prim -0026<$[2]> (_t0F02, _t0882);
            real _t0F04 = -0.1e1;
            real _t0F05 = 0.1e1;
            vec2 _t0F06 = [_t0F04, _t0F05];
            real _t0F07 = -0.1e1;
            real _t0F08 = 0.1e1;
            vec2 _t0F09 = [_t0F07, _t0F08];
            real _t0F0A = prim ×00BD (_t088D, _t0F09);
            vec2 _t0F0B = prim /0057<$[2]> (_t0F06, _t0F0A);
            time0E92 = prim ×00BD (_t0F03, _t0F0B);
            face0E93 = 0;
          }
        }
        real _t0F0C = 0.e0;
        real _t0F0D = 0.e0;
        vec2 _t0F0E = [_t0F0C, _t0F0D];
        vec2 _t0F0F = prim -0026<$[2]> (_t0F0E, _t0882);
        real _t0F10 = 0.e0;
        real _t0F11 = 0.1e1;
        vec2 _t0F12 = [_t0F10, _t0F11];
        real _t0F13 = 0.e0;
        real _t0F14 = 0.1e1;
        vec2 _t0F15 = [_t0F13, _t0F14];
        real _t0F16 = prim ×00BD (_t088D, _t0F15);
        vec2 _t0F17 = prim /0057<$[2]> (_t0F12, _t0F16);
        real _t0F18 = prim ×00BD (_t0F0F, _t0F17);
        real _t0F19 = -0.1e-15;
        bool _t0F1A = prim >=007E (_t0F18, _t0F19);
        real _t0F1B = 0.e0;
        real _t0F1C = 0.e0;
        vec2 _t0F1D = [_t0F1B, _t0F1C];
        vec2 _t0F1E = prim -0026<$[2]> (_t0F1D, _t0882);
        real _t0F1F = 0.e0;
        real _t0F20 = 0.1e1;
        vec2 _t0F21 = [_t0F1F, _t0F20];
        real _t0F22 = 0.e0;
        real _t0F23 = 0.1e1;
        vec2 _t0F24 = [_t0F22, _t0F23];
        real _t0F25 = prim ×00BD (_t088D, _t0F24);
        vec2 _t0F26 = prim /0057<$[2]> (_t0F21, _t0F25);
        real _t0F27 = prim ×00BD (_t0F1E, _t0F26);
        bool _t0F28 = prim >0080 (time0E92, _t0F27);
        real _t0F29 = 0.e0;
        real _t0F2A = 0.1e1;
        vec2 _t0F2B = [_t0F29, _t0F2A];
        real _t0F2C = prim ×00BD (_t088D, _t0F2B);
        real _t0F2D = prim |()|00B5<$[]> (_t0F2C);
        real _t0F2E = 0.1e-20;
        bool _t0F2F = prim >=007E (_t0F2D, _t0F2E);
        bool _t0F30 = prim $and01C4 (_t0F28, _t0F2F);
        bool _t0F31 = prim $and01C4 (_t0F1A, _t0F30);
        if _t0F31 {
          real _t0F32 = 0.1e1;
          real _t0F33 = 0.1e-8;
          real _t0F34 = prim +0017<$[]> (_t0F32, _t0F33);
          real _t0F35 = 0.1e1;
          real _t0F36 = 0.1e1;
          vec2 _t0F37 = [_t0F35, _t0F36];
          real _t0F38 = 0.e0;
          real _t0F39 = 0.e0;
          vec2 _t0F3A = [_t0F38, _t0F39];
          vec2 _t0F3B = prim -0026<$[2]> (_t0F3A, _t0882);
          real _t0F3C = 0.e0;
          real _t0F3D = 0.1e1;
          vec2 _t0F3E = [_t0F3C, _t0F3D];
          real _t0F3F = 0.e0;
          real _t0F40 = 0.1e1;
          vec2 _t0F41 = [_t0F3F, _t0F40];
          real _t0F42 = prim ×00BD (_t088D, _t0F41);
          vec2 _t0F43 = prim /0057<$[2]> (_t0F3E, _t0F42);
          real _t0F44 = prim ×00BD (_t0F3B, _t0F43);
          vec2 _t0F45 = prim *0038<$[2]> (_t088D, _t0F44);
          vec2 _t0F46 = prim +0017<$[2]> (_t0882, _t0F45);
          real _t0F47 = prim •00CE<$[2]; $[2]; $[]> (_t0F37, _t0F46);
          bool _t0F48 = prim >0080 (_t0F34, _t0F47);
          real _t0F49 = 0.1e-8;
          real _t0F4A = 0.1e-8;
          vec2 _t0F4B = [_t0F49, _t0F4A];
          real _t0F4C = 0.e0;
          real _t0F4D = 0.e0;
          vec2 _t0F4E = [_t0F4C, _t0F4D];
          vec2 _t0F4F = prim -0026<$[2]> (_t0F4E, _t0882);
          real _t0F50 = 0.e0;
          real _t0F51 = 0.1e1;
          vec2 _t0F52 = [_t0F50, _t0F51];
          real _t0F53 = 0.e0;
          real _t0F54 = 0.1e1;
          vec2 _t0F55 = [_t0F53, _t0F54];
          real _t0F56 = prim ×00BD (_t088D, _t0F55);
          vec2 _t0F57 = prim /0057<$[2]> (_t0F52, _t0F56);
          real _t0F58 = prim ×00BD (_t0F4F, _t0F57);
          vec2 _t0F59 = prim *0038<$[2]> (_t088D, _t0F58);
          vec2 _t0F5A = prim +0017<$[2]> (_t0882, _t0F59);
          vec2 _t0F5B = prim +0017<$[2]> (_t0F4B, _t0F5A);
          real _t0F5C = _t0F5B[0];
          real _t0F5D = -0.e0;
          bool _t0F5E = prim >0080 (_t0F5C, _t0F5D);
          real _t0F5F = 0.1e-8;
          real _t0F60 = 0.1e-8;
          vec2 _t0F61 = [_t0F5F, _t0F60];
          real _t0F62 = 0.e0;
          real _t0F63 = 0.e0;
          vec2 _t0F64 = [_t0F62, _t0F63];
          vec2 _t0F65 = prim -0026<$[2]> (_t0F64, _t0882);
          real _t0F66 = 0.e0;
          real _t0F67 = 0.1e1;
          vec2 _t0F68 = [_t0F66, _t0F67];
          real _t0F69 = 0.e0;
          real _t0F6A = 0.1e1;
          vec2 _t0F6B = [_t0F69, _t0F6A];
          real _t0F6C = prim ×00BD (_t088D, _t0F6B);
          vec2 _t0F6D = prim /0057<$[2]> (_t0F68, _t0F6C);
          real _t0F6E = prim ×00BD (_t0F65, _t0F6D);
          vec2 _t0F6F = prim *0038<$[2]> (_t088D, _t0F6E);
          vec2 _t0F70 = prim +0017<$[2]> (_t0882, _t0F6F);
          vec2 _t0F71 = prim +0017<$[2]> (_t0F61, _t0F70);
          real _t0F72 = _t0F71[1];
          real _t0F73 = -0.e0;
          bool _t0F74 = prim >0080 (_t0F72, _t0F73);
          bool _t0F75 = prim $and01C4 (_t0F5E, _t0F74);
          bool _t0F76 = prim $and01C4 (_t0F48, _t0F75);
          if _t0F76 {
            real _t0F77 = 0.e0;
            real _t0F78 = 0.e0;
            vec2 _t0F79 = [_t0F77, _t0F78];
            vec2 _t0F7A = prim -0026<$[2]> (_t0F79, _t0882);
            real _t0F7B = 0.e0;
            real _t0F7C = 0.1e1;
            vec2 _t0F7D = [_t0F7B, _t0F7C];
            real _t0F7E = 0.e0;
            real _t0F7F = 0.1e1;
            vec2 _t0F80 = [_t0F7E, _t0F7F];
            real _t0F81 = prim ×00BD (_t088D, _t0F80);
            vec2 _t0F82 = prim /0057<$[2]> (_t0F7D, _t0F81);
            time0E92 = prim ×00BD (_t0F7A, _t0F82);
            face0E93 = 1;
          }
        }
        real _t0F83 = 0.e0;
        real _t0F84 = 0.e0;
        vec2 _t0F85 = [_t0F83, _t0F84];
        vec2 _t0F86 = prim -0026<$[2]> (_t0F85, _t0882);
        real _t0F87 = 0.1e1;
        real _t0F88 = 0.e0;
        vec2 _t0F89 = [_t0F87, _t0F88];
        real _t0F8A = 0.1e1;
        real _t0F8B = 0.e0;
        vec2 _t0F8C = [_t0F8A, _t0F8B];
        real _t0F8D = prim ×00BD (_t088D, _t0F8C);
        vec2 _t0F8E = prim /0057<$[2]> (_t0F89, _t0F8D);
        real _t0F8F = prim ×00BD (_t0F86, _t0F8E);
        real _t0F90 = -0.1e-15;
        bool _t0F91 = prim >=007E (_t0F8F, _t0F90);
        real _t0F92 = 0.e0;
        real _t0F93 = 0.e0;
        vec2 _t0F94 = [_t0F92, _t0F93];
        vec2 _t0F95 = prim -0026<$[2]> (_t0F94, _t0882);
        real _t0F96 = 0.1e1;
        real _t0F97 = 0.e0;
        vec2 _t0F98 = [_t0F96, _t0F97];
        real _t0F99 = 0.1e1;
        real _t0F9A = 0.e0;
        vec2 _t0F9B = [_t0F99, _t0F9A];
        real _t0F9C = prim ×00BD (_t088D, _t0F9B);
        vec2 _t0F9D = prim /0057<$[2]> (_t0F98, _t0F9C);
        real _t0F9E = prim ×00BD (_t0F95, _t0F9D);
        bool _t0F9F = prim >0080 (time0E92, _t0F9E);
        real _t0FA0 = 0.1e1;
        real _t0FA1 = 0.e0;
        vec2 _t0FA2 = [_t0FA0, _t0FA1];
        real _t0FA3 = prim ×00BD (_t088D, _t0FA2);
        real _t0FA4 = prim |()|00B5<$[]> (_t0FA3);
        real _t0FA5 = 0.1e-20;
        bool _t0FA6 = prim >=007E (_t0FA4, _t0FA5);
        bool _t0FA7 = prim $and01C4 (_t0F9F, _t0FA6);
        bool _t0FA8 = prim $and01C4 (_t0F91, _t0FA7);
        if _t0FA8 {
          real _t0FA9 = 0.1e1;
          real _t0FAA = 0.1e-8;
          real _t0FAB = prim +0017<$[]> (_t0FA9, _t0FAA);
          real _t0FAC = 0.1e1;
          real _t0FAD = 0.1e1;
          vec2 _t0FAE = [_t0FAC, _t0FAD];
          real _t0FAF = 0.e0;
          real _t0FB0 = 0.e0;
          vec2 _t0FB1 = [_t0FAF, _t0FB0];
          vec2 _t0FB2 = prim -0026<$[2]> (_t0FB1, _t0882);
          real _t0FB3 = 0.1e1;
          real _t0FB4 = 0.e0;
          vec2 _t0FB5 = [_t0FB3, _t0FB4];
          real _t0FB6 = 0.1e1;
          real _t0FB7 = 0.e0;
          vec2 _t0FB8 = [_t0FB6, _t0FB7];
          real _t0FB9 = prim ×00BD (_t088D, _t0FB8);
          vec2 _t0FBA = prim /0057<$[2]> (_t0FB5, _t0FB9);
          real _t0FBB = prim ×00BD (_t0FB2, _t0FBA);
          vec2 _t0FBC = prim *0038<$[2]> (_t088D, _t0FBB);
          vec2 _t0FBD = prim +0017<$[2]> (_t0882, _t0FBC);
          real _t0FBE = prim •00CE<$[2]; $[2]; $[]> (_t0FAE, _t0FBD);
          bool _t0FBF = prim >0080 (_t0FAB, _t0FBE);
          real _t0FC0 = 0.1e-8;
          real _t0FC1 = 0.1e-8;
          vec2 _t0FC2 = [_t0FC0, _t0FC1];
          real _t0FC3 = 0.e0;
          real _t0FC4 = 0.e0;
          vec2 _t0FC5 = [_t0FC3, _t0FC4];
          vec2 _t0FC6 = prim -0026<$[2]> (_t0FC5, _t0882);
          real _t0FC7 = 0.1e1;
          real _t0FC8 = 0.e0;
          vec2 _t0FC9 = [_t0FC7, _t0FC8];
          real _t0FCA = 0.1e1;
          real _t0FCB = 0.e0;
          vec2 _t0FCC = [_t0FCA, _t0FCB];
          real _t0FCD = prim ×00BD (_t088D, _t0FCC);
          vec2 _t0FCE = prim /0057<$[2]> (_t0FC9, _t0FCD);
          real _t0FCF = prim ×00BD (_t0FC6, _t0FCE);
          vec2 _t0FD0 = prim *0038<$[2]> (_t088D, _t0FCF);
          vec2 _t0FD1 = prim +0017<$[2]> (_t0882, _t0FD0);
          vec2 _t0FD2 = prim +0017<$[2]> (_t0FC2, _t0FD1);
          real _t0FD3 = _t0FD2[0];
          real _t0FD4 = -0.e0;
          bool _t0FD5 = prim >0080 (_t0FD3, _t0FD4);
          real _t0FD6 = 0.1e-8;
          real _t0FD7 = 0.1e-8;
          vec2 _t0FD8 = [_t0FD6, _t0FD7];
          real _t0FD9 = 0.e0;
          real _t0FDA = 0.e0;
          vec2 _t0FDB = [_t0FD9, _t0FDA];
          vec2 _t0FDC = prim -0026<$[2]> (_t0FDB, _t0882);
          real _t0FDD = 0.1e1;
          real _t0FDE = 0.e0;
          vec2 _t0FDF = [_t0FDD, _t0FDE];
          real _t0FE0 = 0.1e1;
          real _t0FE1 = 0.e0;
          vec2 _t0FE2 = [_t0FE0, _t0FE1];
          real _t0FE3 = prim ×00BD (_t088D, _t0FE2);
          vec2 _t0FE4 = prim /0057<$[2]> (_t0FDF, _t0FE3);
          real _t0FE5 = prim ×00BD (_t0FDC, _t0FE4);
          vec2 _t0FE6 = prim *0038<$[2]> (_t088D, _t0FE5);
          vec2 _t0FE7 = prim +0017<$[2]> (_t0882, _t0FE6);
          vec2 _t0FE8 = prim +0017<$[2]> (_t0FD8, _t0FE7);
          real _t0FE9 = _t0FE8[1];
          real _t0FEA = -0.e0;
          bool _t0FEB = prim >0080 (_t0FE9, _t0FEA);
          bool _t0FEC = prim $and01C4 (_t0FD5, _t0FEB);
          bool _t0FED = prim $and01C4 (_t0FBF, _t0FEC);
          if _t0FED {
            real _t0FEE = 0.e0;
            real _t0FEF = 0.e0;
            vec2 _t0FF0 = [_t0FEE, _t0FEF];
            vec2 _t0FF1 = prim -0026<$[2]> (_t0FF0, _t0882);
            real _t0FF2 = 0.1e1;
            real _t0FF3 = 0.e0;
            vec2 _t0FF4 = [_t0FF2, _t0FF3];
            real _t0FF5 = 0.1e1;
            real _t0FF6 = 0.e0;
            vec2 _t0FF7 = [_t0FF5, _t0FF6];
            real _t0FF8 = prim ×00BD (_t088D, _t0FF7);
            vec2 _t0FF9 = prim /0057<$[2]> (_t0FF4, _t0FF8);
            time0E92 = prim ×00BD (_t0FF1, _t0FF9);
            face0E93 = 2;
          }
        }
        int _t0FFA = -1;
        bool _t0FFB = prim !=0086 (face0E93, _t0FFA);
        if _t0FFB {
          real _t0FFC = 0.e0;
          real _t0FFD = prim max0125 (time0E92, _t0FFC);
          real _t0FFE = (real)face0E93;
          vec2 _t0FFF = [_t0FFD, _t0FFE];
          _t088E = _t0FFF;
        } else {
          real _t1000 = -0.1e1;
          real _t1001 = -0.1e1;
          vec2 _t1002 = [_t1000, _t1001];
          _t088E = _t1002;
        }
        real newTime088F = _t088E[0];
        real _t0890 = 0.e0;
        bool _t0891 = prim >=007E (newTime088F, _t0890);
        if _t0891 {
          Femdata: Mesh _t0892 = extractFem(c085F, Mesh);
          int _t0893 = extractFemItem(CellIndex(MeshCell), int, c085F);
          Femdata: Mesh _t0894 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0895 = extractFem(c085F, Mesh);
          int _t0896 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0897 = femField(_t0894,_t0896,field(2)[2],Transform,);
          field(2)[2,2] _t0898 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0897);
          real _t0899 = -0.e0;
          real _t089A = -0.e0;
          vec2 _t089B = [_t0899, _t089A];
          tensor[2,2] _t089C = prim @00A5<#∞; %2; $[2,2]> (_t0898, _t089B);
          tensor[2,2] _t089D = prim inv0154 (_t089C);
          Femdata: Mesh _t089E = extractFem(c085F, Mesh);
          Femdata: Mesh _t089F = extractFem(c085F, Mesh);
          int _t08A0 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08A1 = femField(_t089E,_t08A0,field(2)[2],Transform,);
          real _t08A2 = -0.e0;
          real _t08A3 = -0.e0;
          vec2 _t08A4 = [_t08A2, _t08A3];
          vec2 _t08A5 = prim @00A5<#∞; %2; $[2]> (_t08A1, _t08A4);
          vec2 _t08A6 = prim -0026<$[2]> (rayStartProj082D, _t08A5);
          vec2 _t08A7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t089D, _t08A6);
          Femdata: Mesh _t08A8 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08A9 = extractFem(c085F, Mesh);
          int _t08AA = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08AB = femField(_t08A8,_t08AA,field(2)[2],Transform,);
          field(2)[2,2] _t08AC = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08AB);
          real _t08AD = -0.e0;
          real _t08AE = -0.e0;
          vec2 _t08AF = [_t08AD, _t08AE];
          tensor[2,2] _t08B0 = prim @00A5<#∞; %2; $[2,2]> (_t08AC, _t08AF);
          tensor[2,2] _t08B1 = prim inv0154 (_t08B0);
          vec2 _t08B2 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08B1, dposProj0833);
          Femdata: Mesh _t08B3 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08B4 = extractFem(c085F, Mesh);
          int _t08B5 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08B6 = femField(_t08B3,_t08B5,field(2)[2],Transform,);
          field(2)[2,2] _t08B7 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08B6);
          real _t08B8 = -0.e0;
          real _t08B9 = -0.e0;
          vec2 _t08BA = [_t08B8, _t08B9];
          tensor[2,2] _t08BB = prim @00A5<#∞; %2; $[2,2]> (_t08B7, _t08BA);
          tensor[2,2] _t08BC = prim inv0154 (_t08BB);
          Femdata: Mesh _t08BD = extractFem(c085F, Mesh);
          Femdata: Mesh _t08BE = extractFem(c085F, Mesh);
          int _t08BF = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08C0 = femField(_t08BD,_t08BF,field(2)[2],Transform,);
          real _t08C1 = -0.e0;
          real _t08C2 = -0.e0;
          vec2 _t08C3 = [_t08C1, _t08C2];
          vec2 _t08C4 = prim @00A5<#∞; %2; $[2]> (_t08C0, _t08C3);
          vec2 _t08C5 = prim -0026<$[2]> (rayStartProj082D, _t08C4);
          vec2 _t08C6 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08BC, _t08C5);
          Femdata: Mesh _t08C7 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08C8 = extractFem(c085F, Mesh);
          int _t08C9 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08CA = femField(_t08C7,_t08C9,field(2)[2],Transform,);
          field(2)[2,2] _t08CB = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08CA);
          real _t08CC = -0.e0;
          real _t08CD = -0.e0;
          vec2 _t08CE = [_t08CC, _t08CD];
          tensor[2,2] _t08CF = prim @00A5<#∞; %2; $[2,2]> (_t08CB, _t08CE);
          tensor[2,2] _t08D0 = prim inv0154 (_t08CF);
          vec2 _t08D1 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08D0, dposProj0833);
          vec2 _t08D2;
          real time0D21 = +inf;
          int face0D22 = -1;
          real _t0D24 = 0.1e1;
          real _t0D25 = 0.e0;
          vec2 _t0D26 = [_t0D24, _t0D25];
          vec2 _t0D27 = prim -0026<$[2]> (_t0D26, _t08C6);
          real _t0D28 = -0.1e1;
          real _t0D29 = 0.1e1;
          vec2 _t0D2A = [_t0D28, _t0D29];
          real _t0D2B = -0.1e1;
          real _t0D2C = 0.1e1;
          vec2 _t0D2D = [_t0D2B, _t0D2C];
          real _t0D2E = prim ×00BD (_t08D1, _t0D2D);
          vec2 _t0D2F = prim /0057<$[2]> (_t0D2A, _t0D2E);
          real _t0D30 = prim ×00BD (_t0D27, _t0D2F);
          real _t0D31 = -0.1e-15;
          bool _t0D32 = prim >=007E (_t0D30, _t0D31);
          real _t0D33 = 0.1e1;
          real _t0D34 = 0.e0;
          vec2 _t0D35 = [_t0D33, _t0D34];
          vec2 _t0D36 = prim -0026<$[2]> (_t0D35, _t08C6);
          real _t0D37 = -0.1e1;
          real _t0D38 = 0.1e1;
          vec2 _t0D39 = [_t0D37, _t0D38];
          real _t0D3A = -0.1e1;
          real _t0D3B = 0.1e1;
          vec2 _t0D3C = [_t0D3A, _t0D3B];
          real _t0D3D = prim ×00BD (_t08D1, _t0D3C);
          vec2 _t0D3E = prim /0057<$[2]> (_t0D39, _t0D3D);
          real _t0D3F = prim ×00BD (_t0D36, _t0D3E);
          bool _t0D40 = prim >0080 (time0D21, _t0D3F);
          real _t0D41 = -0.1e1;
          real _t0D42 = 0.1e1;
          vec2 _t0D43 = [_t0D41, _t0D42];
          real _t0D44 = prim ×00BD (_t08D1, _t0D43);
          real _t0D45 = prim |()|00B5<$[]> (_t0D44);
          real _t0D46 = 0.1e-20;
          bool _t0D47 = prim >=007E (_t0D45, _t0D46);
          bool _t0D48 = prim $and01C4 (_t0D40, _t0D47);
          bool _t0D49 = prim $and01C4 (_t0D32, _t0D48);
          if _t0D49 {
            real _t0D4A = 0.1e1;
            real _t0D4B = 0.1e-8;
            real _t0D4C = prim +0017<$[]> (_t0D4A, _t0D4B);
            real _t0D4D = 0.1e1;
            real _t0D4E = 0.1e1;
            vec2 _t0D4F = [_t0D4D, _t0D4E];
            real _t0D50 = 0.1e1;
            real _t0D51 = 0.e0;
            vec2 _t0D52 = [_t0D50, _t0D51];
            vec2 _t0D53 = prim -0026<$[2]> (_t0D52, _t08C6);
            real _t0D54 = -0.1e1;
            real _t0D55 = 0.1e1;
            vec2 _t0D56 = [_t0D54, _t0D55];
            real _t0D57 = -0.1e1;
            real _t0D58 = 0.1e1;
            vec2 _t0D59 = [_t0D57, _t0D58];
            real _t0D5A = prim ×00BD (_t08D1, _t0D59);
            vec2 _t0D5B = prim /0057<$[2]> (_t0D56, _t0D5A);
            real _t0D5C = prim ×00BD (_t0D53, _t0D5B);
            vec2 _t0D5D = prim *0038<$[2]> (_t08D1, _t0D5C);
            vec2 _t0D5E = prim +0017<$[2]> (_t08C6, _t0D5D);
            real _t0D5F = prim •00CE<$[2]; $[2]; $[]> (_t0D4F, _t0D5E);
            bool _t0D60 = prim >0080 (_t0D4C, _t0D5F);
            real _t0D61 = 0.1e-8;
            real _t0D62 = 0.1e-8;
            vec2 _t0D63 = [_t0D61, _t0D62];
            real _t0D64 = 0.1e1;
            real _t0D65 = 0.e0;
            vec2 _t0D66 = [_t0D64, _t0D65];
            vec2 _t0D67 = prim -0026<$[2]> (_t0D66, _t08C6);
            real _t0D68 = -0.1e1;
            real _t0D69 = 0.1e1;
            vec2 _t0D6A = [_t0D68, _t0D69];
            real _t0D6B = -0.1e1;
            real _t0D6C = 0.1e1;
            vec2 _t0D6D = [_t0D6B, _t0D6C];
            real _t0D6E = prim ×00BD (_t08D1, _t0D6D);
            vec2 _t0D6F = prim /0057<$[2]> (_t0D6A, _t0D6E);
            real _t0D70 = prim ×00BD (_t0D67, _t0D6F);
            vec2 _t0D71 = prim *0038<$[2]> (_t08D1, _t0D70);
            vec2 _t0D72 = prim +0017<$[2]> (_t08C6, _t0D71);
            vec2 _t0D73 = prim +0017<$[2]> (_t0D63, _t0D72);
            real _t0D74 = _t0D73[0];
            real _t0D75 = -0.e0;
            bool _t0D76 = prim >0080 (_t0D74, _t0D75);
            real _t0D77 = 0.1e-8;
            real _t0D78 = 0.1e-8;
            vec2 _t0D79 = [_t0D77, _t0D78];
            real _t0D7A = 0.1e1;
            real _t0D7B = 0.e0;
            vec2 _t0D7C = [_t0D7A, _t0D7B];
            vec2 _t0D7D = prim -0026<$[2]> (_t0D7C, _t08C6);
            real _t0D7E = -0.1e1;
            real _t0D7F = 0.1e1;
            vec2 _t0D80 = [_t0D7E, _t0D7F];
            real _t0D81 = -0.1e1;
            real _t0D82 = 0.1e1;
            vec2 _t0D83 = [_t0D81, _t0D82];
            real _t0D84 = prim ×00BD (_t08D1, _t0D83);
            vec2 _t0D85 = prim /0057<$[2]> (_t0D80, _t0D84);
            real _t0D86 = prim ×00BD (_t0D7D, _t0D85);
            vec2 _t0D87 = prim *0038<$[2]> (_t08D1, _t0D86);
            vec2 _t0D88 = prim +0017<$[2]> (_t08C6, _t0D87);
            vec2 _t0D89 = prim +0017<$[2]> (_t0D79, _t0D88);
            real _t0D8A = _t0D89[1];
            real _t0D8B = -0.e0;
            bool _t0D8C = prim >0080 (_t0D8A, _t0D8B);
            bool _t0D8D = prim $and01C4 (_t0D76, _t0D8C);
            bool _t0D8E = prim $and01C4 (_t0D60, _t0D8D);
            if _t0D8E {
              real _t0D8F = 0.1e1;
              real _t0D90 = 0.e0;
              vec2 _t0D91 = [_t0D8F, _t0D90];
              vec2 _t0D92 = prim -0026<$[2]> (_t0D91, _t08C6);
              real _t0D93 = -0.1e1;
              real _t0D94 = 0.1e1;
              vec2 _t0D95 = [_t0D93, _t0D94];
              real _t0D96 = -0.1e1;
              real _t0D97 = 0.1e1;
              vec2 _t0D98 = [_t0D96, _t0D97];
              real _t0D99 = prim ×00BD (_t08D1, _t0D98);
              vec2 _t0D9A = prim /0057<$[2]> (_t0D95, _t0D99);
              time0D21 = prim ×00BD (_t0D92, _t0D9A);
              face0D22 = 0;
            }
          }
          real _t0D9B = 0.e0;
          real _t0D9C = 0.e0;
          vec2 _t0D9D = [_t0D9B, _t0D9C];
          vec2 _t0D9E = prim -0026<$[2]> (_t0D9D, _t08C6);
          real _t0D9F = 0.e0;
          real _t0DA0 = 0.1e1;
          vec2 _t0DA1 = [_t0D9F, _t0DA0];
          real _t0DA2 = 0.e0;
          real _t0DA3 = 0.1e1;
          vec2 _t0DA4 = [_t0DA2, _t0DA3];
          real _t0DA5 = prim ×00BD (_t08D1, _t0DA4);
          vec2 _t0DA6 = prim /0057<$[2]> (_t0DA1, _t0DA5);
          real _t0DA7 = prim ×00BD (_t0D9E, _t0DA6);
          real _t0DA8 = -0.1e-15;
          bool _t0DA9 = prim >=007E (_t0DA7, _t0DA8);
          real _t0DAA = 0.e0;
          real _t0DAB = 0.e0;
          vec2 _t0DAC = [_t0DAA, _t0DAB];
          vec2 _t0DAD = prim -0026<$[2]> (_t0DAC, _t08C6);
          real _t0DAE = 0.e0;
          real _t0DAF = 0.1e1;
          vec2 _t0DB0 = [_t0DAE, _t0DAF];
          real _t0DB1 = 0.e0;
          real _t0DB2 = 0.1e1;
          vec2 _t0DB3 = [_t0DB1, _t0DB2];
          real _t0DB4 = prim ×00BD (_t08D1, _t0DB3);
          vec2 _t0DB5 = prim /0057<$[2]> (_t0DB0, _t0DB4);
          real _t0DB6 = prim ×00BD (_t0DAD, _t0DB5);
          bool _t0DB7 = prim >0080 (time0D21, _t0DB6);
          real _t0DB8 = 0.e0;
          real _t0DB9 = 0.1e1;
          vec2 _t0DBA = [_t0DB8, _t0DB9];
          real _t0DBB = prim ×00BD (_t08D1, _t0DBA);
          real _t0DBC = prim |()|00B5<$[]> (_t0DBB);
          real _t0DBD = 0.1e-20;
          bool _t0DBE = prim >=007E (_t0DBC, _t0DBD);
          bool _t0DBF = prim $and01C4 (_t0DB7, _t0DBE);
          bool _t0DC0 = prim $and01C4 (_t0DA9, _t0DBF);
          if _t0DC0 {
            real _t0DC1 = 0.1e1;
            real _t0DC2 = 0.1e-8;
            real _t0DC3 = prim +0017<$[]> (_t0DC1, _t0DC2);
            real _t0DC4 = 0.1e1;
            real _t0DC5 = 0.1e1;
            vec2 _t0DC6 = [_t0DC4, _t0DC5];
            real _t0DC7 = 0.e0;
            real _t0DC8 = 0.e0;
            vec2 _t0DC9 = [_t0DC7, _t0DC8];
            vec2 _t0DCA = prim -0026<$[2]> (_t0DC9, _t08C6);
            real _t0DCB = 0.e0;
            real _t0DCC = 0.1e1;
            vec2 _t0DCD = [_t0DCB, _t0DCC];
            real _t0DCE = 0.e0;
            real _t0DCF = 0.1e1;
            vec2 _t0DD0 = [_t0DCE, _t0DCF];
            real _t0DD1 = prim ×00BD (_t08D1, _t0DD0);
            vec2 _t0DD2 = prim /0057<$[2]> (_t0DCD, _t0DD1);
            real _t0DD3 = prim ×00BD (_t0DCA, _t0DD2);
            vec2 _t0DD4 = prim *0038<$[2]> (_t08D1, _t0DD3);
            vec2 _t0DD5 = prim +0017<$[2]> (_t08C6, _t0DD4);
            real _t0DD6 = prim •00CE<$[2]; $[2]; $[]> (_t0DC6, _t0DD5);
            bool _t0DD7 = prim >0080 (_t0DC3, _t0DD6);
            real _t0DD8 = 0.1e-8;
            real _t0DD9 = 0.1e-8;
            vec2 _t0DDA = [_t0DD8, _t0DD9];
            real _t0DDB = 0.e0;
            real _t0DDC = 0.e0;
            vec2 _t0DDD = [_t0DDB, _t0DDC];
            vec2 _t0DDE = prim -0026<$[2]> (_t0DDD, _t08C6);
            real _t0DDF = 0.e0;
            real _t0DE0 = 0.1e1;
            vec2 _t0DE1 = [_t0DDF, _t0DE0];
            real _t0DE2 = 0.e0;
            real _t0DE3 = 0.1e1;
            vec2 _t0DE4 = [_t0DE2, _t0DE3];
            real _t0DE5 = prim ×00BD (_t08D1, _t0DE4);
            vec2 _t0DE6 = prim /0057<$[2]> (_t0DE1, _t0DE5);
            real _t0DE7 = prim ×00BD (_t0DDE, _t0DE6);
            vec2 _t0DE8 = prim *0038<$[2]> (_t08D1, _t0DE7);
            vec2 _t0DE9 = prim +0017<$[2]> (_t08C6, _t0DE8);
            vec2 _t0DEA = prim +0017<$[2]> (_t0DDA, _t0DE9);
            real _t0DEB = _t0DEA[0];
            real _t0DEC = -0.e0;
            bool _t0DED = prim >0080 (_t0DEB, _t0DEC);
            real _t0DEE = 0.1e-8;
            real _t0DEF = 0.1e-8;
            vec2 _t0DF0 = [_t0DEE, _t0DEF];
            real _t0DF1 = 0.e0;
            real _t0DF2 = 0.e0;
            vec2 _t0DF3 = [_t0DF1, _t0DF2];
            vec2 _t0DF4 = prim -0026<$[2]> (_t0DF3, _t08C6);
            real _t0DF5 = 0.e0;
            real _t0DF6 = 0.1e1;
            vec2 _t0DF7 = [_t0DF5, _t0DF6];
            real _t0DF8 = 0.e0;
            real _t0DF9 = 0.1e1;
            vec2 _t0DFA = [_t0DF8, _t0DF9];
            real _t0DFB = prim ×00BD (_t08D1, _t0DFA);
            vec2 _t0DFC = prim /0057<$[2]> (_t0DF7, _t0DFB);
            real _t0DFD = prim ×00BD (_t0DF4, _t0DFC);
            vec2 _t0DFE = prim *0038<$[2]> (_t08D1, _t0DFD);
            vec2 _t0DFF = prim +0017<$[2]> (_t08C6, _t0DFE);
            vec2 _t0E00 = prim +0017<$[2]> (_t0DF0, _t0DFF);
            real _t0E01 = _t0E00[1];
            real _t0E02 = -0.e0;
            bool _t0E03 = prim >0080 (_t0E01, _t0E02);
            bool _t0E04 = prim $and01C4 (_t0DED, _t0E03);
            bool _t0E05 = prim $and01C4 (_t0DD7, _t0E04);
            if _t0E05 {
              real _t0E06 = 0.e0;
              real _t0E07 = 0.e0;
              vec2 _t0E08 = [_t0E06, _t0E07];
              vec2 _t0E09 = prim -0026<$[2]> (_t0E08, _t08C6);
              real _t0E0A = 0.e0;
              real _t0E0B = 0.1e1;
              vec2 _t0E0C = [_t0E0A, _t0E0B];
              real _t0E0D = 0.e0;
              real _t0E0E = 0.1e1;
              vec2 _t0E0F = [_t0E0D, _t0E0E];
              real _t0E10 = prim ×00BD (_t08D1, _t0E0F);
              vec2 _t0E11 = prim /0057<$[2]> (_t0E0C, _t0E10);
              time0D21 = prim ×00BD (_t0E09, _t0E11);
              face0D22 = 1;
            }
          }
          real _t0E12 = 0.e0;
          real _t0E13 = 0.e0;
          vec2 _t0E14 = [_t0E12, _t0E13];
          vec2 _t0E15 = prim -0026<$[2]> (_t0E14, _t08C6);
          real _t0E16 = 0.1e1;
          real _t0E17 = 0.e0;
          vec2 _t0E18 = [_t0E16, _t0E17];
          real _t0E19 = 0.1e1;
          real _t0E1A = 0.e0;
          vec2 _t0E1B = [_t0E19, _t0E1A];
          real _t0E1C = prim ×00BD (_t08D1, _t0E1B);
          vec2 _t0E1D = prim /0057<$[2]> (_t0E18, _t0E1C);
          real _t0E1E = prim ×00BD (_t0E15, _t0E1D);
          real _t0E1F = -0.1e-15;
          bool _t0E20 = prim >=007E (_t0E1E, _t0E1F);
          real _t0E21 = 0.e0;
          real _t0E22 = 0.e0;
          vec2 _t0E23 = [_t0E21, _t0E22];
          vec2 _t0E24 = prim -0026<$[2]> (_t0E23, _t08C6);
          real _t0E25 = 0.1e1;
          real _t0E26 = 0.e0;
          vec2 _t0E27 = [_t0E25, _t0E26];
          real _t0E28 = 0.1e1;
          real _t0E29 = 0.e0;
          vec2 _t0E2A = [_t0E28, _t0E29];
          real _t0E2B = prim ×00BD (_t08D1, _t0E2A);
          vec2 _t0E2C = prim /0057<$[2]> (_t0E27, _t0E2B);
          real _t0E2D = prim ×00BD (_t0E24, _t0E2C);
          bool _t0E2E = prim >0080 (time0D21, _t0E2D);
          real _t0E2F = 0.1e1;
          real _t0E30 = 0.e0;
          vec2 _t0E31 = [_t0E2F, _t0E30];
          real _t0E32 = prim ×00BD (_t08D1, _t0E31);
          real _t0E33 = prim |()|00B5<$[]> (_t0E32);
          real _t0E34 = 0.1e-20;
          bool _t0E35 = prim >=007E (_t0E33, _t0E34);
          bool _t0E36 = prim $and01C4 (_t0E2E, _t0E35);
          bool _t0E37 = prim $and01C4 (_t0E20, _t0E36);
          if _t0E37 {
            real _t0E38 = 0.1e1;
            real _t0E39 = 0.1e-8;
            real _t0E3A = prim +0017<$[]> (_t0E38, _t0E39);
            real _t0E3B = 0.1e1;
            real _t0E3C = 0.1e1;
            vec2 _t0E3D = [_t0E3B, _t0E3C];
            real _t0E3E = 0.e0;
            real _t0E3F = 0.e0;
            vec2 _t0E40 = [_t0E3E, _t0E3F];
            vec2 _t0E41 = prim -0026<$[2]> (_t0E40, _t08C6);
            real _t0E42 = 0.1e1;
            real _t0E43 = 0.e0;
            vec2 _t0E44 = [_t0E42, _t0E43];
            real _t0E45 = 0.1e1;
            real _t0E46 = 0.e0;
            vec2 _t0E47 = [_t0E45, _t0E46];
            real _t0E48 = prim ×00BD (_t08D1, _t0E47);
            vec2 _t0E49 = prim /0057<$[2]> (_t0E44, _t0E48);
            real _t0E4A = prim ×00BD (_t0E41, _t0E49);
            vec2 _t0E4B = prim *0038<$[2]> (_t08D1, _t0E4A);
            vec2 _t0E4C = prim +0017<$[2]> (_t08C6, _t0E4B);
            real _t0E4D = prim •00CE<$[2]; $[2]; $[]> (_t0E3D, _t0E4C);
            bool _t0E4E = prim >0080 (_t0E3A, _t0E4D);
            real _t0E4F = 0.1e-8;
            real _t0E50 = 0.1e-8;
            vec2 _t0E51 = [_t0E4F, _t0E50];
            real _t0E52 = 0.e0;
            real _t0E53 = 0.e0;
            vec2 _t0E54 = [_t0E52, _t0E53];
            vec2 _t0E55 = prim -0026<$[2]> (_t0E54, _t08C6);
            real _t0E56 = 0.1e1;
            real _t0E57 = 0.e0;
            vec2 _t0E58 = [_t0E56, _t0E57];
            real _t0E59 = 0.1e1;
            real _t0E5A = 0.e0;
            vec2 _t0E5B = [_t0E59, _t0E5A];
            real _t0E5C = prim ×00BD (_t08D1, _t0E5B);
            vec2 _t0E5D = prim /0057<$[2]> (_t0E58, _t0E5C);
            real _t0E5E = prim ×00BD (_t0E55, _t0E5D);
            vec2 _t0E5F = prim *0038<$[2]> (_t08D1, _t0E5E);
            vec2 _t0E60 = prim +0017<$[2]> (_t08C6, _t0E5F);
            vec2 _t0E61 = prim +0017<$[2]> (_t0E51, _t0E60);
            real _t0E62 = _t0E61[0];
            real _t0E63 = -0.e0;
            bool _t0E64 = prim >0080 (_t0E62, _t0E63);
            real _t0E65 = 0.1e-8;
            real _t0E66 = 0.1e-8;
            vec2 _t0E67 = [_t0E65, _t0E66];
            real _t0E68 = 0.e0;
            real _t0E69 = 0.e0;
            vec2 _t0E6A = [_t0E68, _t0E69];
            vec2 _t0E6B = prim -0026<$[2]> (_t0E6A, _t08C6);
            real _t0E6C = 0.1e1;
            real _t0E6D = 0.e0;
            vec2 _t0E6E = [_t0E6C, _t0E6D];
            real _t0E6F = 0.1e1;
            real _t0E70 = 0.e0;
            vec2 _t0E71 = [_t0E6F, _t0E70];
            real _t0E72 = prim ×00BD (_t08D1, _t0E71);
            vec2 _t0E73 = prim /0057<$[2]> (_t0E6E, _t0E72);
            real _t0E74 = prim ×00BD (_t0E6B, _t0E73);
            vec2 _t0E75 = prim *0038<$[2]> (_t08D1, _t0E74);
            vec2 _t0E76 = prim +0017<$[2]> (_t08C6, _t0E75);
            vec2 _t0E77 = prim +0017<$[2]> (_t0E67, _t0E76);
            real _t0E78 = _t0E77[1];
            real _t0E79 = -0.e0;
            bool _t0E7A = prim >0080 (_t0E78, _t0E79);
            bool _t0E7B = prim $and01C4 (_t0E64, _t0E7A);
            bool _t0E7C = prim $and01C4 (_t0E4E, _t0E7B);
            if _t0E7C {
              real _t0E7D = 0.e0;
              real _t0E7E = 0.e0;
              vec2 _t0E7F = [_t0E7D, _t0E7E];
              vec2 _t0E80 = prim -0026<$[2]> (_t0E7F, _t08C6);
              real _t0E81 = 0.1e1;
              real _t0E82 = 0.e0;
              vec2 _t0E83 = [_t0E81, _t0E82];
              real _t0E84 = 0.1e1;
              real _t0E85 = 0.e0;
              vec2 _t0E86 = [_t0E84, _t0E85];
              real _t0E87 = prim ×00BD (_t08D1, _t0E86);
              vec2 _t0E88 = prim /0057<$[2]> (_t0E83, _t0E87);
              time0D21 = prim ×00BD (_t0E80, _t0E88);
              face0D22 = 2;
            }
          }
          int _t0E89 = -1;
          bool _t0E8A = prim !=0086 (face0D22, _t0E89);
          if _t0E8A {
            real _t0E8B = 0.e0;
            real _t0E8C = prim max0125 (time0D21, _t0E8B);
            real _t0E8D = (real)face0D22;
            vec2 _t0E8E = [_t0E8C, _t0E8D];
            _t08D2 = _t0E8E;
          } else {
            real _t0E8F = -0.1e1;
            real _t0E90 = -0.1e1;
            vec2 _t0E91 = [_t0E8F, _t0E90];
            _t08D2 = _t0E91;
          }
          real _t08D3 = _t08D2[0];
          vec2 _t08D4 = prim *0038<$[2]> (_t08B2, _t08D3);
          vec2 _t08D5 = prim +0017<$[2]> (_t08A7, _t08D4);
          Femdata: Mesh _t08D6 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08D7 = extractFem(c085F, Mesh);
          int _t08D8 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08D9 = femField(_t08D6,_t08D8,field(2)[2],Transform,);
          field(2)[2,2] _t08DA = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08D9);
          real _t08DB = -0.e0;
          real _t08DC = -0.e0;
          vec2 _t08DD = [_t08DB, _t08DC];
          tensor[2,2] _t08DE = prim @00A5<#∞; %2; $[2,2]> (_t08DA, _t08DD);
          tensor[2,2] _t08DF = prim inv0154 (_t08DE);
          Femdata: Mesh _t08E0 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08E1 = extractFem(c085F, Mesh);
          int _t08E2 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08E3 = femField(_t08E0,_t08E2,field(2)[2],Transform,);
          real _t08E4 = -0.e0;
          real _t08E5 = -0.e0;
          vec2 _t08E6 = [_t08E4, _t08E5];
          vec2 _t08E7 = prim @00A5<#∞; %2; $[2]> (_t08E3, _t08E6);
          vec2 _t08E8 = prim -0026<$[2]> (rayStartProj082D, _t08E7);
          vec2 _t08E9 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08DF, _t08E8);
          Femdata: Mesh _t08EA = extractFem(c085F, Mesh);
          Femdata: Mesh _t08EB = extractFem(c085F, Mesh);
          int _t08EC = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08ED = femField(_t08EA,_t08EC,field(2)[2],Transform,);
          field(2)[2,2] _t08EE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08ED);
          real _t08EF = -0.e0;
          real _t08F0 = -0.e0;
          vec2 _t08F1 = [_t08EF, _t08F0];
          tensor[2,2] _t08F2 = prim @00A5<#∞; %2; $[2,2]> (_t08EE, _t08F1);
          tensor[2,2] _t08F3 = prim inv0154 (_t08F2);
          vec2 _t08F4 = prim •00CE<$[2,2]; $[2]; $[2]> (_t08F3, dposProj0833);
          vec2 _t08F5;
          real time0BB0 = +inf;
          int face0BB1 = -1;
          real _t0BB3 = 0.1e1;
          real _t0BB4 = 0.e0;
          vec2 _t0BB5 = [_t0BB3, _t0BB4];
          vec2 _t0BB6 = prim -0026<$[2]> (_t0BB5, _t08E9);
          real _t0BB7 = -0.1e1;
          real _t0BB8 = 0.1e1;
          vec2 _t0BB9 = [_t0BB7, _t0BB8];
          real _t0BBA = -0.1e1;
          real _t0BBB = 0.1e1;
          vec2 _t0BBC = [_t0BBA, _t0BBB];
          real _t0BBD = prim ×00BD (_t08F4, _t0BBC);
          vec2 _t0BBE = prim /0057<$[2]> (_t0BB9, _t0BBD);
          real _t0BBF = prim ×00BD (_t0BB6, _t0BBE);
          real _t0BC0 = -0.1e-15;
          bool _t0BC1 = prim >=007E (_t0BBF, _t0BC0);
          real _t0BC2 = 0.1e1;
          real _t0BC3 = 0.e0;
          vec2 _t0BC4 = [_t0BC2, _t0BC3];
          vec2 _t0BC5 = prim -0026<$[2]> (_t0BC4, _t08E9);
          real _t0BC6 = -0.1e1;
          real _t0BC7 = 0.1e1;
          vec2 _t0BC8 = [_t0BC6, _t0BC7];
          real _t0BC9 = -0.1e1;
          real _t0BCA = 0.1e1;
          vec2 _t0BCB = [_t0BC9, _t0BCA];
          real _t0BCC = prim ×00BD (_t08F4, _t0BCB);
          vec2 _t0BCD = prim /0057<$[2]> (_t0BC8, _t0BCC);
          real _t0BCE = prim ×00BD (_t0BC5, _t0BCD);
          bool _t0BCF = prim >0080 (time0BB0, _t0BCE);
          real _t0BD0 = -0.1e1;
          real _t0BD1 = 0.1e1;
          vec2 _t0BD2 = [_t0BD0, _t0BD1];
          real _t0BD3 = prim ×00BD (_t08F4, _t0BD2);
          real _t0BD4 = prim |()|00B5<$[]> (_t0BD3);
          real _t0BD5 = 0.1e-20;
          bool _t0BD6 = prim >=007E (_t0BD4, _t0BD5);
          bool _t0BD7 = prim $and01C4 (_t0BCF, _t0BD6);
          bool _t0BD8 = prim $and01C4 (_t0BC1, _t0BD7);
          if _t0BD8 {
            real _t0BD9 = 0.1e1;
            real _t0BDA = 0.1e-8;
            real _t0BDB = prim +0017<$[]> (_t0BD9, _t0BDA);
            real _t0BDC = 0.1e1;
            real _t0BDD = 0.1e1;
            vec2 _t0BDE = [_t0BDC, _t0BDD];
            real _t0BDF = 0.1e1;
            real _t0BE0 = 0.e0;
            vec2 _t0BE1 = [_t0BDF, _t0BE0];
            vec2 _t0BE2 = prim -0026<$[2]> (_t0BE1, _t08E9);
            real _t0BE3 = -0.1e1;
            real _t0BE4 = 0.1e1;
            vec2 _t0BE5 = [_t0BE3, _t0BE4];
            real _t0BE6 = -0.1e1;
            real _t0BE7 = 0.1e1;
            vec2 _t0BE8 = [_t0BE6, _t0BE7];
            real _t0BE9 = prim ×00BD (_t08F4, _t0BE8);
            vec2 _t0BEA = prim /0057<$[2]> (_t0BE5, _t0BE9);
            real _t0BEB = prim ×00BD (_t0BE2, _t0BEA);
            vec2 _t0BEC = prim *0038<$[2]> (_t08F4, _t0BEB);
            vec2 _t0BED = prim +0017<$[2]> (_t08E9, _t0BEC);
            real _t0BEE = prim •00CE<$[2]; $[2]; $[]> (_t0BDE, _t0BED);
            bool _t0BEF = prim >0080 (_t0BDB, _t0BEE);
            real _t0BF0 = 0.1e-8;
            real _t0BF1 = 0.1e-8;
            vec2 _t0BF2 = [_t0BF0, _t0BF1];
            real _t0BF3 = 0.1e1;
            real _t0BF4 = 0.e0;
            vec2 _t0BF5 = [_t0BF3, _t0BF4];
            vec2 _t0BF6 = prim -0026<$[2]> (_t0BF5, _t08E9);
            real _t0BF7 = -0.1e1;
            real _t0BF8 = 0.1e1;
            vec2 _t0BF9 = [_t0BF7, _t0BF8];
            real _t0BFA = -0.1e1;
            real _t0BFB = 0.1e1;
            vec2 _t0BFC = [_t0BFA, _t0BFB];
            real _t0BFD = prim ×00BD (_t08F4, _t0BFC);
            vec2 _t0BFE = prim /0057<$[2]> (_t0BF9, _t0BFD);
            real _t0BFF = prim ×00BD (_t0BF6, _t0BFE);
            vec2 _t0C00 = prim *0038<$[2]> (_t08F4, _t0BFF);
            vec2 _t0C01 = prim +0017<$[2]> (_t08E9, _t0C00);
            vec2 _t0C02 = prim +0017<$[2]> (_t0BF2, _t0C01);
            real _t0C03 = _t0C02[0];
            real _t0C04 = -0.e0;
            bool _t0C05 = prim >0080 (_t0C03, _t0C04);
            real _t0C06 = 0.1e-8;
            real _t0C07 = 0.1e-8;
            vec2 _t0C08 = [_t0C06, _t0C07];
            real _t0C09 = 0.1e1;
            real _t0C0A = 0.e0;
            vec2 _t0C0B = [_t0C09, _t0C0A];
            vec2 _t0C0C = prim -0026<$[2]> (_t0C0B, _t08E9);
            real _t0C0D = -0.1e1;
            real _t0C0E = 0.1e1;
            vec2 _t0C0F = [_t0C0D, _t0C0E];
            real _t0C10 = -0.1e1;
            real _t0C11 = 0.1e1;
            vec2 _t0C12 = [_t0C10, _t0C11];
            real _t0C13 = prim ×00BD (_t08F4, _t0C12);
            vec2 _t0C14 = prim /0057<$[2]> (_t0C0F, _t0C13);
            real _t0C15 = prim ×00BD (_t0C0C, _t0C14);
            vec2 _t0C16 = prim *0038<$[2]> (_t08F4, _t0C15);
            vec2 _t0C17 = prim +0017<$[2]> (_t08E9, _t0C16);
            vec2 _t0C18 = prim +0017<$[2]> (_t0C08, _t0C17);
            real _t0C19 = _t0C18[1];
            real _t0C1A = -0.e0;
            bool _t0C1B = prim >0080 (_t0C19, _t0C1A);
            bool _t0C1C = prim $and01C4 (_t0C05, _t0C1B);
            bool _t0C1D = prim $and01C4 (_t0BEF, _t0C1C);
            if _t0C1D {
              real _t0C1E = 0.1e1;
              real _t0C1F = 0.e0;
              vec2 _t0C20 = [_t0C1E, _t0C1F];
              vec2 _t0C21 = prim -0026<$[2]> (_t0C20, _t08E9);
              real _t0C22 = -0.1e1;
              real _t0C23 = 0.1e1;
              vec2 _t0C24 = [_t0C22, _t0C23];
              real _t0C25 = -0.1e1;
              real _t0C26 = 0.1e1;
              vec2 _t0C27 = [_t0C25, _t0C26];
              real _t0C28 = prim ×00BD (_t08F4, _t0C27);
              vec2 _t0C29 = prim /0057<$[2]> (_t0C24, _t0C28);
              time0BB0 = prim ×00BD (_t0C21, _t0C29);
              face0BB1 = 0;
            }
          }
          real _t0C2A = 0.e0;
          real _t0C2B = 0.e0;
          vec2 _t0C2C = [_t0C2A, _t0C2B];
          vec2 _t0C2D = prim -0026<$[2]> (_t0C2C, _t08E9);
          real _t0C2E = 0.e0;
          real _t0C2F = 0.1e1;
          vec2 _t0C30 = [_t0C2E, _t0C2F];
          real _t0C31 = 0.e0;
          real _t0C32 = 0.1e1;
          vec2 _t0C33 = [_t0C31, _t0C32];
          real _t0C34 = prim ×00BD (_t08F4, _t0C33);
          vec2 _t0C35 = prim /0057<$[2]> (_t0C30, _t0C34);
          real _t0C36 = prim ×00BD (_t0C2D, _t0C35);
          real _t0C37 = -0.1e-15;
          bool _t0C38 = prim >=007E (_t0C36, _t0C37);
          real _t0C39 = 0.e0;
          real _t0C3A = 0.e0;
          vec2 _t0C3B = [_t0C39, _t0C3A];
          vec2 _t0C3C = prim -0026<$[2]> (_t0C3B, _t08E9);
          real _t0C3D = 0.e0;
          real _t0C3E = 0.1e1;
          vec2 _t0C3F = [_t0C3D, _t0C3E];
          real _t0C40 = 0.e0;
          real _t0C41 = 0.1e1;
          vec2 _t0C42 = [_t0C40, _t0C41];
          real _t0C43 = prim ×00BD (_t08F4, _t0C42);
          vec2 _t0C44 = prim /0057<$[2]> (_t0C3F, _t0C43);
          real _t0C45 = prim ×00BD (_t0C3C, _t0C44);
          bool _t0C46 = prim >0080 (time0BB0, _t0C45);
          real _t0C47 = 0.e0;
          real _t0C48 = 0.1e1;
          vec2 _t0C49 = [_t0C47, _t0C48];
          real _t0C4A = prim ×00BD (_t08F4, _t0C49);
          real _t0C4B = prim |()|00B5<$[]> (_t0C4A);
          real _t0C4C = 0.1e-20;
          bool _t0C4D = prim >=007E (_t0C4B, _t0C4C);
          bool _t0C4E = prim $and01C4 (_t0C46, _t0C4D);
          bool _t0C4F = prim $and01C4 (_t0C38, _t0C4E);
          if _t0C4F {
            real _t0C50 = 0.1e1;
            real _t0C51 = 0.1e-8;
            real _t0C52 = prim +0017<$[]> (_t0C50, _t0C51);
            real _t0C53 = 0.1e1;
            real _t0C54 = 0.1e1;
            vec2 _t0C55 = [_t0C53, _t0C54];
            real _t0C56 = 0.e0;
            real _t0C57 = 0.e0;
            vec2 _t0C58 = [_t0C56, _t0C57];
            vec2 _t0C59 = prim -0026<$[2]> (_t0C58, _t08E9);
            real _t0C5A = 0.e0;
            real _t0C5B = 0.1e1;
            vec2 _t0C5C = [_t0C5A, _t0C5B];
            real _t0C5D = 0.e0;
            real _t0C5E = 0.1e1;
            vec2 _t0C5F = [_t0C5D, _t0C5E];
            real _t0C60 = prim ×00BD (_t08F4, _t0C5F);
            vec2 _t0C61 = prim /0057<$[2]> (_t0C5C, _t0C60);
            real _t0C62 = prim ×00BD (_t0C59, _t0C61);
            vec2 _t0C63 = prim *0038<$[2]> (_t08F4, _t0C62);
            vec2 _t0C64 = prim +0017<$[2]> (_t08E9, _t0C63);
            real _t0C65 = prim •00CE<$[2]; $[2]; $[]> (_t0C55, _t0C64);
            bool _t0C66 = prim >0080 (_t0C52, _t0C65);
            real _t0C67 = 0.1e-8;
            real _t0C68 = 0.1e-8;
            vec2 _t0C69 = [_t0C67, _t0C68];
            real _t0C6A = 0.e0;
            real _t0C6B = 0.e0;
            vec2 _t0C6C = [_t0C6A, _t0C6B];
            vec2 _t0C6D = prim -0026<$[2]> (_t0C6C, _t08E9);
            real _t0C6E = 0.e0;
            real _t0C6F = 0.1e1;
            vec2 _t0C70 = [_t0C6E, _t0C6F];
            real _t0C71 = 0.e0;
            real _t0C72 = 0.1e1;
            vec2 _t0C73 = [_t0C71, _t0C72];
            real _t0C74 = prim ×00BD (_t08F4, _t0C73);
            vec2 _t0C75 = prim /0057<$[2]> (_t0C70, _t0C74);
            real _t0C76 = prim ×00BD (_t0C6D, _t0C75);
            vec2 _t0C77 = prim *0038<$[2]> (_t08F4, _t0C76);
            vec2 _t0C78 = prim +0017<$[2]> (_t08E9, _t0C77);
            vec2 _t0C79 = prim +0017<$[2]> (_t0C69, _t0C78);
            real _t0C7A = _t0C79[0];
            real _t0C7B = -0.e0;
            bool _t0C7C = prim >0080 (_t0C7A, _t0C7B);
            real _t0C7D = 0.1e-8;
            real _t0C7E = 0.1e-8;
            vec2 _t0C7F = [_t0C7D, _t0C7E];
            real _t0C80 = 0.e0;
            real _t0C81 = 0.e0;
            vec2 _t0C82 = [_t0C80, _t0C81];
            vec2 _t0C83 = prim -0026<$[2]> (_t0C82, _t08E9);
            real _t0C84 = 0.e0;
            real _t0C85 = 0.1e1;
            vec2 _t0C86 = [_t0C84, _t0C85];
            real _t0C87 = 0.e0;
            real _t0C88 = 0.1e1;
            vec2 _t0C89 = [_t0C87, _t0C88];
            real _t0C8A = prim ×00BD (_t08F4, _t0C89);
            vec2 _t0C8B = prim /0057<$[2]> (_t0C86, _t0C8A);
            real _t0C8C = prim ×00BD (_t0C83, _t0C8B);
            vec2 _t0C8D = prim *0038<$[2]> (_t08F4, _t0C8C);
            vec2 _t0C8E = prim +0017<$[2]> (_t08E9, _t0C8D);
            vec2 _t0C8F = prim +0017<$[2]> (_t0C7F, _t0C8E);
            real _t0C90 = _t0C8F[1];
            real _t0C91 = -0.e0;
            bool _t0C92 = prim >0080 (_t0C90, _t0C91);
            bool _t0C93 = prim $and01C4 (_t0C7C, _t0C92);
            bool _t0C94 = prim $and01C4 (_t0C66, _t0C93);
            if _t0C94 {
              real _t0C95 = 0.e0;
              real _t0C96 = 0.e0;
              vec2 _t0C97 = [_t0C95, _t0C96];
              vec2 _t0C98 = prim -0026<$[2]> (_t0C97, _t08E9);
              real _t0C99 = 0.e0;
              real _t0C9A = 0.1e1;
              vec2 _t0C9B = [_t0C99, _t0C9A];
              real _t0C9C = 0.e0;
              real _t0C9D = 0.1e1;
              vec2 _t0C9E = [_t0C9C, _t0C9D];
              real _t0C9F = prim ×00BD (_t08F4, _t0C9E);
              vec2 _t0CA0 = prim /0057<$[2]> (_t0C9B, _t0C9F);
              time0BB0 = prim ×00BD (_t0C98, _t0CA0);
              face0BB1 = 1;
            }
          }
          real _t0CA1 = 0.e0;
          real _t0CA2 = 0.e0;
          vec2 _t0CA3 = [_t0CA1, _t0CA2];
          vec2 _t0CA4 = prim -0026<$[2]> (_t0CA3, _t08E9);
          real _t0CA5 = 0.1e1;
          real _t0CA6 = 0.e0;
          vec2 _t0CA7 = [_t0CA5, _t0CA6];
          real _t0CA8 = 0.1e1;
          real _t0CA9 = 0.e0;
          vec2 _t0CAA = [_t0CA8, _t0CA9];
          real _t0CAB = prim ×00BD (_t08F4, _t0CAA);
          vec2 _t0CAC = prim /0057<$[2]> (_t0CA7, _t0CAB);
          real _t0CAD = prim ×00BD (_t0CA4, _t0CAC);
          real _t0CAE = -0.1e-15;
          bool _t0CAF = prim >=007E (_t0CAD, _t0CAE);
          real _t0CB0 = 0.e0;
          real _t0CB1 = 0.e0;
          vec2 _t0CB2 = [_t0CB0, _t0CB1];
          vec2 _t0CB3 = prim -0026<$[2]> (_t0CB2, _t08E9);
          real _t0CB4 = 0.1e1;
          real _t0CB5 = 0.e0;
          vec2 _t0CB6 = [_t0CB4, _t0CB5];
          real _t0CB7 = 0.1e1;
          real _t0CB8 = 0.e0;
          vec2 _t0CB9 = [_t0CB7, _t0CB8];
          real _t0CBA = prim ×00BD (_t08F4, _t0CB9);
          vec2 _t0CBB = prim /0057<$[2]> (_t0CB6, _t0CBA);
          real _t0CBC = prim ×00BD (_t0CB3, _t0CBB);
          bool _t0CBD = prim >0080 (time0BB0, _t0CBC);
          real _t0CBE = 0.1e1;
          real _t0CBF = 0.e0;
          vec2 _t0CC0 = [_t0CBE, _t0CBF];
          real _t0CC1 = prim ×00BD (_t08F4, _t0CC0);
          real _t0CC2 = prim |()|00B5<$[]> (_t0CC1);
          real _t0CC3 = 0.1e-20;
          bool _t0CC4 = prim >=007E (_t0CC2, _t0CC3);
          bool _t0CC5 = prim $and01C4 (_t0CBD, _t0CC4);
          bool _t0CC6 = prim $and01C4 (_t0CAF, _t0CC5);
          if _t0CC6 {
            real _t0CC7 = 0.1e1;
            real _t0CC8 = 0.1e-8;
            real _t0CC9 = prim +0017<$[]> (_t0CC7, _t0CC8);
            real _t0CCA = 0.1e1;
            real _t0CCB = 0.1e1;
            vec2 _t0CCC = [_t0CCA, _t0CCB];
            real _t0CCD = 0.e0;
            real _t0CCE = 0.e0;
            vec2 _t0CCF = [_t0CCD, _t0CCE];
            vec2 _t0CD0 = prim -0026<$[2]> (_t0CCF, _t08E9);
            real _t0CD1 = 0.1e1;
            real _t0CD2 = 0.e0;
            vec2 _t0CD3 = [_t0CD1, _t0CD2];
            real _t0CD4 = 0.1e1;
            real _t0CD5 = 0.e0;
            vec2 _t0CD6 = [_t0CD4, _t0CD5];
            real _t0CD7 = prim ×00BD (_t08F4, _t0CD6);
            vec2 _t0CD8 = prim /0057<$[2]> (_t0CD3, _t0CD7);
            real _t0CD9 = prim ×00BD (_t0CD0, _t0CD8);
            vec2 _t0CDA = prim *0038<$[2]> (_t08F4, _t0CD9);
            vec2 _t0CDB = prim +0017<$[2]> (_t08E9, _t0CDA);
            real _t0CDC = prim •00CE<$[2]; $[2]; $[]> (_t0CCC, _t0CDB);
            bool _t0CDD = prim >0080 (_t0CC9, _t0CDC);
            real _t0CDE = 0.1e-8;
            real _t0CDF = 0.1e-8;
            vec2 _t0CE0 = [_t0CDE, _t0CDF];
            real _t0CE1 = 0.e0;
            real _t0CE2 = 0.e0;
            vec2 _t0CE3 = [_t0CE1, _t0CE2];
            vec2 _t0CE4 = prim -0026<$[2]> (_t0CE3, _t08E9);
            real _t0CE5 = 0.1e1;
            real _t0CE6 = 0.e0;
            vec2 _t0CE7 = [_t0CE5, _t0CE6];
            real _t0CE8 = 0.1e1;
            real _t0CE9 = 0.e0;
            vec2 _t0CEA = [_t0CE8, _t0CE9];
            real _t0CEB = prim ×00BD (_t08F4, _t0CEA);
            vec2 _t0CEC = prim /0057<$[2]> (_t0CE7, _t0CEB);
            real _t0CED = prim ×00BD (_t0CE4, _t0CEC);
            vec2 _t0CEE = prim *0038<$[2]> (_t08F4, _t0CED);
            vec2 _t0CEF = prim +0017<$[2]> (_t08E9, _t0CEE);
            vec2 _t0CF0 = prim +0017<$[2]> (_t0CE0, _t0CEF);
            real _t0CF1 = _t0CF0[0];
            real _t0CF2 = -0.e0;
            bool _t0CF3 = prim >0080 (_t0CF1, _t0CF2);
            real _t0CF4 = 0.1e-8;
            real _t0CF5 = 0.1e-8;
            vec2 _t0CF6 = [_t0CF4, _t0CF5];
            real _t0CF7 = 0.e0;
            real _t0CF8 = 0.e0;
            vec2 _t0CF9 = [_t0CF7, _t0CF8];
            vec2 _t0CFA = prim -0026<$[2]> (_t0CF9, _t08E9);
            real _t0CFB = 0.1e1;
            real _t0CFC = 0.e0;
            vec2 _t0CFD = [_t0CFB, _t0CFC];
            real _t0CFE = 0.1e1;
            real _t0CFF = 0.e0;
            vec2 _t0D00 = [_t0CFE, _t0CFF];
            real _t0D01 = prim ×00BD (_t08F4, _t0D00);
            vec2 _t0D02 = prim /0057<$[2]> (_t0CFD, _t0D01);
            real _t0D03 = prim ×00BD (_t0CFA, _t0D02);
            vec2 _t0D04 = prim *0038<$[2]> (_t08F4, _t0D03);
            vec2 _t0D05 = prim +0017<$[2]> (_t08E9, _t0D04);
            vec2 _t0D06 = prim +0017<$[2]> (_t0CF6, _t0D05);
            real _t0D07 = _t0D06[1];
            real _t0D08 = -0.e0;
            bool _t0D09 = prim >0080 (_t0D07, _t0D08);
            bool _t0D0A = prim $and01C4 (_t0CF3, _t0D09);
            bool _t0D0B = prim $and01C4 (_t0CDD, _t0D0A);
            if _t0D0B {
              real _t0D0C = 0.e0;
              real _t0D0D = 0.e0;
              vec2 _t0D0E = [_t0D0C, _t0D0D];
              vec2 _t0D0F = prim -0026<$[2]> (_t0D0E, _t08E9);
              real _t0D10 = 0.1e1;
              real _t0D11 = 0.e0;
              vec2 _t0D12 = [_t0D10, _t0D11];
              real _t0D13 = 0.1e1;
              real _t0D14 = 0.e0;
              vec2 _t0D15 = [_t0D13, _t0D14];
              real _t0D16 = prim ×00BD (_t08F4, _t0D15);
              vec2 _t0D17 = prim /0057<$[2]> (_t0D12, _t0D16);
              time0BB0 = prim ×00BD (_t0D0F, _t0D17);
              face0BB1 = 2;
            }
          }
          int _t0D18 = -1;
          bool _t0D19 = prim !=0086 (face0BB1, _t0D18);
          if _t0D19 {
            real _t0D1A = 0.e0;
            real _t0D1B = prim max0125 (time0BB0, _t0D1A);
            real _t0D1C = (real)face0BB1;
            vec2 _t0D1D = [_t0D1B, _t0D1C];
            _t08F5 = _t0D1D;
          } else {
            real _t0D1E = -0.1e1;
            real _t0D1F = -0.1e1;
            vec2 _t0D20 = [_t0D1E, _t0D1F];
            _t08F5 = _t0D20;
          }
          real _t08F6 = _t08F5[0];
          vec2 _t08F7 = prim *0038<$[2]> (dposProj0833, _t08F6);
          vec2 _t08F8 = prim +0017<$[2]> (rayStartProj082D, _t08F7);
          Femdata: Mesh _t08F9 = extractFem(c085F, Mesh);
          Femdata: Mesh _t08FA = extractFem(c085F, Mesh);
          int _t08FB = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t08FC = femField(_t08F9,_t08FB,field(2)[2],Transform,);
          field(2)[2,2] _t08FD = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t08FC);
          real _t08FE = -0.e0;
          real _t08FF = -0.e0;
          vec2 _t0900 = [_t08FE, _t08FF];
          tensor[2,2] _t0901 = prim @00A5<#∞; %2; $[2,2]> (_t08FD, _t0900);
          tensor[2,2] _t0902 = prim inv0154 (_t0901);
          Femdata: Mesh _t0903 = extractFem(c085F, Mesh);
          Femdata: Mesh _t0904 = extractFem(c085F, Mesh);
          int _t0905 = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0906 = femField(_t0903,_t0905,field(2)[2],Transform,);
          real _t0907 = -0.e0;
          real _t0908 = -0.e0;
          vec2 _t0909 = [_t0907, _t0908];
          vec2 _t090A = prim @00A5<#∞; %2; $[2]> (_t0906, _t0909);
          vec2 _t090B = prim -0026<$[2]> (rayStartProj082D, _t090A);
          vec2 _t090C = prim •00CE<$[2,2]; $[2]; $[2]> (_t0902, _t090B);
          Femdata: Mesh _t090D = extractFem(c085F, Mesh);
          Femdata: Mesh _t090E = extractFem(c085F, Mesh);
          int _t090F = extractFemItem(CellIndex(MeshCell), int, c085F);
          field(2)[2] _t0910 = femField(_t090D,_t090F,field(2)[2],Transform,);
          field(2)[2,2] _t0911 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t0910);
          real _t0912 = -0.e0;
          real _t0913 = -0.e0;
          vec2 _t0914 = [_t0912, _t0913];
          tensor[2,2] _t0915 = prim @00A5<#∞; %2; $[2,2]> (_t0911, _t0914);
          tensor[2,2] _t0916 = prim inv0154 (_t0915);
          vec2 _t0917 = prim •00CE<$[2,2]; $[2]; $[2]> (_t0916, dposProj0833);
          vec2 _t0918;
          real time0A3F = +inf;
          int face0A40 = -1;
          real _t0A42 = 0.1e1;
          real _t0A43 = 0.e0;
          vec2 _t0A44 = [_t0A42, _t0A43];
          vec2 _t0A45 = prim -0026<$[2]> (_t0A44, _t090C);
          real _t0A46 = -0.1e1;
          real _t0A47 = 0.1e1;
          vec2 _t0A48 = [_t0A46, _t0A47];
          real _t0A49 = -0.1e1;
          real _t0A4A = 0.1e1;
          vec2 _t0A4B = [_t0A49, _t0A4A];
          real _t0A4C = prim ×00BD (_t0917, _t0A4B);
          vec2 _t0A4D = prim /0057<$[2]> (_t0A48, _t0A4C);
          real _t0A4E = prim ×00BD (_t0A45, _t0A4D);
          real _t0A4F = -0.1e-15;
          bool _t0A50 = prim >=007E (_t0A4E, _t0A4F);
          real _t0A51 = 0.1e1;
          real _t0A52 = 0.e0;
          vec2 _t0A53 = [_t0A51, _t0A52];
          vec2 _t0A54 = prim -0026<$[2]> (_t0A53, _t090C);
          real _t0A55 = -0.1e1;
          real _t0A56 = 0.1e1;
          vec2 _t0A57 = [_t0A55, _t0A56];
          real _t0A58 = -0.1e1;
          real _t0A59 = 0.1e1;
          vec2 _t0A5A = [_t0A58, _t0A59];
          real _t0A5B = prim ×00BD (_t0917, _t0A5A);
          vec2 _t0A5C = prim /0057<$[2]> (_t0A57, _t0A5B);
          real _t0A5D = prim ×00BD (_t0A54, _t0A5C);
          bool _t0A5E = prim >0080 (time0A3F, _t0A5D);
          real _t0A5F = -0.1e1;
          real _t0A60 = 0.1e1;
          vec2 _t0A61 = [_t0A5F, _t0A60];
          real _t0A62 = prim ×00BD (_t0917, _t0A61);
          real _t0A63 = prim |()|00B5<$[]> (_t0A62);
          real _t0A64 = 0.1e-20;
          bool _t0A65 = prim >=007E (_t0A63, _t0A64);
          bool _t0A66 = prim $and01C4 (_t0A5E, _t0A65);
          bool _t0A67 = prim $and01C4 (_t0A50, _t0A66);
          if _t0A67 {
            real _t0A68 = 0.1e1;
            real _t0A69 = 0.1e-8;
            real _t0A6A = prim +0017<$[]> (_t0A68, _t0A69);
            real _t0A6B = 0.1e1;
            real _t0A6C = 0.1e1;
            vec2 _t0A6D = [_t0A6B, _t0A6C];
            real _t0A6E = 0.1e1;
            real _t0A6F = 0.e0;
            vec2 _t0A70 = [_t0A6E, _t0A6F];
            vec2 _t0A71 = prim -0026<$[2]> (_t0A70, _t090C);
            real _t0A72 = -0.1e1;
            real _t0A73 = 0.1e1;
            vec2 _t0A74 = [_t0A72, _t0A73];
            real _t0A75 = -0.1e1;
            real _t0A76 = 0.1e1;
            vec2 _t0A77 = [_t0A75, _t0A76];
            real _t0A78 = prim ×00BD (_t0917, _t0A77);
            vec2 _t0A79 = prim /0057<$[2]> (_t0A74, _t0A78);
            real _t0A7A = prim ×00BD (_t0A71, _t0A79);
            vec2 _t0A7B = prim *0038<$[2]> (_t0917, _t0A7A);
            vec2 _t0A7C = prim +0017<$[2]> (_t090C, _t0A7B);
            real _t0A7D = prim •00CE<$[2]; $[2]; $[]> (_t0A6D, _t0A7C);
            bool _t0A7E = prim >0080 (_t0A6A, _t0A7D);
            real _t0A7F = 0.1e-8;
            real _t0A80 = 0.1e-8;
            vec2 _t0A81 = [_t0A7F, _t0A80];
            real _t0A82 = 0.1e1;
            real _t0A83 = 0.e0;
            vec2 _t0A84 = [_t0A82, _t0A83];
            vec2 _t0A85 = prim -0026<$[2]> (_t0A84, _t090C);
            real _t0A86 = -0.1e1;
            real _t0A87 = 0.1e1;
            vec2 _t0A88 = [_t0A86, _t0A87];
            real _t0A89 = -0.1e1;
            real _t0A8A = 0.1e1;
            vec2 _t0A8B = [_t0A89, _t0A8A];
            real _t0A8C = prim ×00BD (_t0917, _t0A8B);
            vec2 _t0A8D = prim /0057<$[2]> (_t0A88, _t0A8C);
            real _t0A8E = prim ×00BD (_t0A85, _t0A8D);
            vec2 _t0A8F = prim *0038<$[2]> (_t0917, _t0A8E);
            vec2 _t0A90 = prim +0017<$[2]> (_t090C, _t0A8F);
            vec2 _t0A91 = prim +0017<$[2]> (_t0A81, _t0A90);
            real _t0A92 = _t0A91[0];
            real _t0A93 = -0.e0;
            bool _t0A94 = prim >0080 (_t0A92, _t0A93);
            real _t0A95 = 0.1e-8;
            real _t0A96 = 0.1e-8;
            vec2 _t0A97 = [_t0A95, _t0A96];
            real _t0A98 = 0.1e1;
            real _t0A99 = 0.e0;
            vec2 _t0A9A = [_t0A98, _t0A99];
            vec2 _t0A9B = prim -0026<$[2]> (_t0A9A, _t090C);
            real _t0A9C = -0.1e1;
            real _t0A9D = 0.1e1;
            vec2 _t0A9E = [_t0A9C, _t0A9D];
            real _t0A9F = -0.1e1;
            real _t0AA0 = 0.1e1;
            vec2 _t0AA1 = [_t0A9F, _t0AA0];
            real _t0AA2 = prim ×00BD (_t0917, _t0AA1);
            vec2 _t0AA3 = prim /0057<$[2]> (_t0A9E, _t0AA2);
            real _t0AA4 = prim ×00BD (_t0A9B, _t0AA3);
            vec2 _t0AA5 = prim *0038<$[2]> (_t0917, _t0AA4);
            vec2 _t0AA6 = prim +0017<$[2]> (_t090C, _t0AA5);
            vec2 _t0AA7 = prim +0017<$[2]> (_t0A97, _t0AA6);
            real _t0AA8 = _t0AA7[1];
            real _t0AA9 = -0.e0;
            bool _t0AAA = prim >0080 (_t0AA8, _t0AA9);
            bool _t0AAB = prim $and01C4 (_t0A94, _t0AAA);
            bool _t0AAC = prim $and01C4 (_t0A7E, _t0AAB);
            if _t0AAC {
              real _t0AAD = 0.1e1;
              real _t0AAE = 0.e0;
              vec2 _t0AAF = [_t0AAD, _t0AAE];
              vec2 _t0AB0 = prim -0026<$[2]> (_t0AAF, _t090C);
              real _t0AB1 = -0.1e1;
              real _t0AB2 = 0.1e1;
              vec2 _t0AB3 = [_t0AB1, _t0AB2];
              real _t0AB4 = -0.1e1;
              real _t0AB5 = 0.1e1;
              vec2 _t0AB6 = [_t0AB4, _t0AB5];
              real _t0AB7 = prim ×00BD (_t0917, _t0AB6);
              vec2 _t0AB8 = prim /0057<$[2]> (_t0AB3, _t0AB7);
              time0A3F = prim ×00BD (_t0AB0, _t0AB8);
              face0A40 = 0;
            }
          }
          real _t0AB9 = 0.e0;
          real _t0ABA = 0.e0;
          vec2 _t0ABB = [_t0AB9, _t0ABA];
          vec2 _t0ABC = prim -0026<$[2]> (_t0ABB, _t090C);
          real _t0ABD = 0.e0;
          real _t0ABE = 0.1e1;
          vec2 _t0ABF = [_t0ABD, _t0ABE];
          real _t0AC0 = 0.e0;
          real _t0AC1 = 0.1e1;
          vec2 _t0AC2 = [_t0AC0, _t0AC1];
          real _t0AC3 = prim ×00BD (_t0917, _t0AC2);
          vec2 _t0AC4 = prim /0057<$[2]> (_t0ABF, _t0AC3);
          real _t0AC5 = prim ×00BD (_t0ABC, _t0AC4);
          real _t0AC6 = -0.1e-15;
          bool _t0AC7 = prim >=007E (_t0AC5, _t0AC6);
          real _t0AC8 = 0.e0;
          real _t0AC9 = 0.e0;
          vec2 _t0ACA = [_t0AC8, _t0AC9];
          vec2 _t0ACB = prim -0026<$[2]> (_t0ACA, _t090C);
          real _t0ACC = 0.e0;
          real _t0ACD = 0.1e1;
          vec2 _t0ACE = [_t0ACC, _t0ACD];
          real _t0ACF = 0.e0;
          real _t0AD0 = 0.1e1;
          vec2 _t0AD1 = [_t0ACF, _t0AD0];
          real _t0AD2 = prim ×00BD (_t0917, _t0AD1);
          vec2 _t0AD3 = prim /0057<$[2]> (_t0ACE, _t0AD2);
          real _t0AD4 = prim ×00BD (_t0ACB, _t0AD3);
          bool _t0AD5 = prim >0080 (time0A3F, _t0AD4);
          real _t0AD6 = 0.e0;
          real _t0AD7 = 0.1e1;
          vec2 _t0AD8 = [_t0AD6, _t0AD7];
          real _t0AD9 = prim ×00BD (_t0917, _t0AD8);
          real _t0ADA = prim |()|00B5<$[]> (_t0AD9);
          real _t0ADB = 0.1e-20;
          bool _t0ADC = prim >=007E (_t0ADA, _t0ADB);
          bool _t0ADD = prim $and01C4 (_t0AD5, _t0ADC);
          bool _t0ADE = prim $and01C4 (_t0AC7, _t0ADD);
          if _t0ADE {
            real _t0ADF = 0.1e1;
            real _t0AE0 = 0.1e-8;
            real _t0AE1 = prim +0017<$[]> (_t0ADF, _t0AE0);
            real _t0AE2 = 0.1e1;
            real _t0AE3 = 0.1e1;
            vec2 _t0AE4 = [_t0AE2, _t0AE3];
            real _t0AE5 = 0.e0;
            real _t0AE6 = 0.e0;
            vec2 _t0AE7 = [_t0AE5, _t0AE6];
            vec2 _t0AE8 = prim -0026<$[2]> (_t0AE7, _t090C);
            real _t0AE9 = 0.e0;
            real _t0AEA = 0.1e1;
            vec2 _t0AEB = [_t0AE9, _t0AEA];
            real _t0AEC = 0.e0;
            real _t0AED = 0.1e1;
            vec2 _t0AEE = [_t0AEC, _t0AED];
            real _t0AEF = prim ×00BD (_t0917, _t0AEE);
            vec2 _t0AF0 = prim /0057<$[2]> (_t0AEB, _t0AEF);
            real _t0AF1 = prim ×00BD (_t0AE8, _t0AF0);
            vec2 _t0AF2 = prim *0038<$[2]> (_t0917, _t0AF1);
            vec2 _t0AF3 = prim +0017<$[2]> (_t090C, _t0AF2);
            real _t0AF4 = prim •00CE<$[2]; $[2]; $[]> (_t0AE4, _t0AF3);
            bool _t0AF5 = prim >0080 (_t0AE1, _t0AF4);
            real _t0AF6 = 0.1e-8;
            real _t0AF7 = 0.1e-8;
            vec2 _t0AF8 = [_t0AF6, _t0AF7];
            real _t0AF9 = 0.e0;
            real _t0AFA = 0.e0;
            vec2 _t0AFB = [_t0AF9, _t0AFA];
            vec2 _t0AFC = prim -0026<$[2]> (_t0AFB, _t090C);
            real _t0AFD = 0.e0;
            real _t0AFE = 0.1e1;
            vec2 _t0AFF = [_t0AFD, _t0AFE];
            real _t0B00 = 0.e0;
            real _t0B01 = 0.1e1;
            vec2 _t0B02 = [_t0B00, _t0B01];
            real _t0B03 = prim ×00BD (_t0917, _t0B02);
            vec2 _t0B04 = prim /0057<$[2]> (_t0AFF, _t0B03);
            real _t0B05 = prim ×00BD (_t0AFC, _t0B04);
            vec2 _t0B06 = prim *0038<$[2]> (_t0917, _t0B05);
            vec2 _t0B07 = prim +0017<$[2]> (_t090C, _t0B06);
            vec2 _t0B08 = prim +0017<$[2]> (_t0AF8, _t0B07);
            real _t0B09 = _t0B08[0];
            real _t0B0A = -0.e0;
            bool _t0B0B = prim >0080 (_t0B09, _t0B0A);
            real _t0B0C = 0.1e-8;
            real _t0B0D = 0.1e-8;
            vec2 _t0B0E = [_t0B0C, _t0B0D];
            real _t0B0F = 0.e0;
            real _t0B10 = 0.e0;
            vec2 _t0B11 = [_t0B0F, _t0B10];
            vec2 _t0B12 = prim -0026<$[2]> (_t0B11, _t090C);
            real _t0B13 = 0.e0;
            real _t0B14 = 0.1e1;
            vec2 _t0B15 = [_t0B13, _t0B14];
            real _t0B16 = 0.e0;
            real _t0B17 = 0.1e1;
            vec2 _t0B18 = [_t0B16, _t0B17];
            real _t0B19 = prim ×00BD (_t0917, _t0B18);
            vec2 _t0B1A = prim /0057<$[2]> (_t0B15, _t0B19);
            real _t0B1B = prim ×00BD (_t0B12, _t0B1A);
            vec2 _t0B1C = prim *0038<$[2]> (_t0917, _t0B1B);
            vec2 _t0B1D = prim +0017<$[2]> (_t090C, _t0B1C);
            vec2 _t0B1E = prim +0017<$[2]> (_t0B0E, _t0B1D);
            real _t0B1F = _t0B1E[1];
            real _t0B20 = -0.e0;
            bool _t0B21 = prim >0080 (_t0B1F, _t0B20);
            bool _t0B22 = prim $and01C4 (_t0B0B, _t0B21);
            bool _t0B23 = prim $and01C4 (_t0AF5, _t0B22);
            if _t0B23 {
              real _t0B24 = 0.e0;
              real _t0B25 = 0.e0;
              vec2 _t0B26 = [_t0B24, _t0B25];
              vec2 _t0B27 = prim -0026<$[2]> (_t0B26, _t090C);
              real _t0B28 = 0.e0;
              real _t0B29 = 0.1e1;
              vec2 _t0B2A = [_t0B28, _t0B29];
              real _t0B2B = 0.e0;
              real _t0B2C = 0.1e1;
              vec2 _t0B2D = [_t0B2B, _t0B2C];
              real _t0B2E = prim ×00BD (_t0917, _t0B2D);
              vec2 _t0B2F = prim /0057<$[2]> (_t0B2A, _t0B2E);
              time0A3F = prim ×00BD (_t0B27, _t0B2F);
              face0A40 = 1;
            }
          }
          real _t0B30 = 0.e0;
          real _t0B31 = 0.e0;
          vec2 _t0B32 = [_t0B30, _t0B31];
          vec2 _t0B33 = prim -0026<$[2]> (_t0B32, _t090C);
          real _t0B34 = 0.1e1;
          real _t0B35 = 0.e0;
          vec2 _t0B36 = [_t0B34, _t0B35];
          real _t0B37 = 0.1e1;
          real _t0B38 = 0.e0;
          vec2 _t0B39 = [_t0B37, _t0B38];
          real _t0B3A = prim ×00BD (_t0917, _t0B39);
          vec2 _t0B3B = prim /0057<$[2]> (_t0B36, _t0B3A);
          real _t0B3C = prim ×00BD (_t0B33, _t0B3B);
          real _t0B3D = -0.1e-15;
          bool _t0B3E = prim >=007E (_t0B3C, _t0B3D);
          real _t0B3F = 0.e0;
          real _t0B40 = 0.e0;
          vec2 _t0B41 = [_t0B3F, _t0B40];
          vec2 _t0B42 = prim -0026<$[2]> (_t0B41, _t090C);
          real _t0B43 = 0.1e1;
          real _t0B44 = 0.e0;
          vec2 _t0B45 = [_t0B43, _t0B44];
          real _t0B46 = 0.1e1;
          real _t0B47 = 0.e0;
          vec2 _t0B48 = [_t0B46, _t0B47];
          real _t0B49 = prim ×00BD (_t0917, _t0B48);
          vec2 _t0B4A = prim /0057<$[2]> (_t0B45, _t0B49);
          real _t0B4B = prim ×00BD (_t0B42, _t0B4A);
          bool _t0B4C = prim >0080 (time0A3F, _t0B4B);
          real _t0B4D = 0.1e1;
          real _t0B4E = 0.e0;
          vec2 _t0B4F = [_t0B4D, _t0B4E];
          real _t0B50 = prim ×00BD (_t0917, _t0B4F);
          real _t0B51 = prim |()|00B5<$[]> (_t0B50);
          real _t0B52 = 0.1e-20;
          bool _t0B53 = prim >=007E (_t0B51, _t0B52);
          bool _t0B54 = prim $and01C4 (_t0B4C, _t0B53);
          bool _t0B55 = prim $and01C4 (_t0B3E, _t0B54);
          if _t0B55 {
            real _t0B56 = 0.1e1;
            real _t0B57 = 0.1e-8;
            real _t0B58 = prim +0017<$[]> (_t0B56, _t0B57);
            real _t0B59 = 0.1e1;
            real _t0B5A = 0.1e1;
            vec2 _t0B5B = [_t0B59, _t0B5A];
            real _t0B5C = 0.e0;
            real _t0B5D = 0.e0;
            vec2 _t0B5E = [_t0B5C, _t0B5D];
            vec2 _t0B5F = prim -0026<$[2]> (_t0B5E, _t090C);
            real _t0B60 = 0.1e1;
            real _t0B61 = 0.e0;
            vec2 _t0B62 = [_t0B60, _t0B61];
            real _t0B63 = 0.1e1;
            real _t0B64 = 0.e0;
            vec2 _t0B65 = [_t0B63, _t0B64];
            real _t0B66 = prim ×00BD (_t0917, _t0B65);
            vec2 _t0B67 = prim /0057<$[2]> (_t0B62, _t0B66);
            real _t0B68 = prim ×00BD (_t0B5F, _t0B67);
            vec2 _t0B69 = prim *0038<$[2]> (_t0917, _t0B68);
            vec2 _t0B6A = prim +0017<$[2]> (_t090C, _t0B69);
            real _t0B6B = prim •00CE<$[2]; $[2]; $[]> (_t0B5B, _t0B6A);
            bool _t0B6C = prim >0080 (_t0B58, _t0B6B);
            real _t0B6D = 0.1e-8;
            real _t0B6E = 0.1e-8;
            vec2 _t0B6F = [_t0B6D, _t0B6E];
            real _t0B70 = 0.e0;
            real _t0B71 = 0.e0;
            vec2 _t0B72 = [_t0B70, _t0B71];
            vec2 _t0B73 = prim -0026<$[2]> (_t0B72, _t090C);
            real _t0B74 = 0.1e1;
            real _t0B75 = 0.e0;
            vec2 _t0B76 = [_t0B74, _t0B75];
            real _t0B77 = 0.1e1;
            real _t0B78 = 0.e0;
            vec2 _t0B79 = [_t0B77, _t0B78];
            real _t0B7A = prim ×00BD (_t0917, _t0B79);
            vec2 _t0B7B = prim /0057<$[2]> (_t0B76, _t0B7A);
            real _t0B7C = prim ×00BD (_t0B73, _t0B7B);
            vec2 _t0B7D = prim *0038<$[2]> (_t0917, _t0B7C);
            vec2 _t0B7E = prim +0017<$[2]> (_t090C, _t0B7D);
            vec2 _t0B7F = prim +0017<$[2]> (_t0B6F, _t0B7E);
            real _t0B80 = _t0B7F[0];
            real _t0B81 = -0.e0;
            bool _t0B82 = prim >0080 (_t0B80, _t0B81);
            real _t0B83 = 0.1e-8;
            real _t0B84 = 0.1e-8;
            vec2 _t0B85 = [_t0B83, _t0B84];
            real _t0B86 = 0.e0;
            real _t0B87 = 0.e0;
            vec2 _t0B88 = [_t0B86, _t0B87];
            vec2 _t0B89 = prim -0026<$[2]> (_t0B88, _t090C);
            real _t0B8A = 0.1e1;
            real _t0B8B = 0.e0;
            vec2 _t0B8C = [_t0B8A, _t0B8B];
            real _t0B8D = 0.1e1;
            real _t0B8E = 0.e0;
            vec2 _t0B8F = [_t0B8D, _t0B8E];
            real _t0B90 = prim ×00BD (_t0917, _t0B8F);
            vec2 _t0B91 = prim /0057<$[2]> (_t0B8C, _t0B90);
            real _t0B92 = prim ×00BD (_t0B89, _t0B91);
            vec2 _t0B93 = prim *0038<$[2]> (_t0917, _t0B92);
            vec2 _t0B94 = prim +0017<$[2]> (_t090C, _t0B93);
            vec2 _t0B95 = prim +0017<$[2]> (_t0B85, _t0B94);
            real _t0B96 = _t0B95[1];
            real _t0B97 = -0.e0;
            bool _t0B98 = prim >0080 (_t0B96, _t0B97);
            bool _t0B99 = prim $and01C4 (_t0B82, _t0B98);
            bool _t0B9A = prim $and01C4 (_t0B6C, _t0B99);
            if _t0B9A {
              real _t0B9B = 0.e0;
              real _t0B9C = 0.e0;
              vec2 _t0B9D = [_t0B9B, _t0B9C];
              vec2 _t0B9E = prim -0026<$[2]> (_t0B9D, _t090C);
              real _t0B9F = 0.1e1;
              real _t0BA0 = 0.e0;
              vec2 _t0BA1 = [_t0B9F, _t0BA0];
              real _t0BA2 = 0.1e1;
              real _t0BA3 = 0.e0;
              vec2 _t0BA4 = [_t0BA2, _t0BA3];
              real _t0BA5 = prim ×00BD (_t0917, _t0BA4);
              vec2 _t0BA6 = prim /0057<$[2]> (_t0BA1, _t0BA5);
              time0A3F = prim ×00BD (_t0B9E, _t0BA6);
              face0A40 = 2;
            }
          }
          int _t0BA7 = -1;
          bool _t0BA8 = prim !=0086 (face0A40, _t0BA7);
          if _t0BA8 {
            real _t0BA9 = 0.e0;
            real _t0BAA = prim max0125 (time0A3F, _t0BA9);
            real _t0BAB = (real)face0A40;
            vec2 _t0BAC = [_t0BAA, _t0BAB];
            _t0918 = _t0BAC;
          } else {
            real _t0BAD = -0.1e1;
            real _t0BAE = -0.1e1;
            vec2 _t0BAF = [_t0BAD, _t0BAE];
            _t0918 = _t0BAF;
          }
          real _t0919 = _t0918[1];
          int _t091A = prim $r2i01B7 (_t0919);
          Femdata: MeshPos p091B = extractFemItemN((_t0892, _t0893, _t08D5, _t08F8, _t091A),AllBuild(MeshPos),);
          real newRayTime091C = prim lerp0096<$[]> (camNearVsp0829, camFarVsp082A, newTime088F);
          normalizedTimes0839 = prim @0010<real> (normalizedTimes0839, newRayTime091C);
          poses0836 = prim @0010<Femdata: MeshPos> (poses0836, p091B);
          bool _t091D = prim >0080 (startTime085B, newRayTime091C);
          if _t091D {
            startTime085B = newRayTime091C;
            currentCellInt0849 = cellIntersects083C;
          }
          int _t091E = 1;
          cellIntersects083C = prim +0015 (cellIntersects083C, _t091E);
        }
      }
    }
    int _t091F = 0;
    bool _t0920 = prim !=0086 (cellIntersects083C, _t091F);
    if _t0920 {
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, currentCellInt0849);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, currentCellInt0849);
      vec3 _t0925 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t0926 = prim +0017<$[3]> (rayOrig0823, _t0925);
      vec3[2] _t0927 = {rayOrig0823, _t0926};
      vec3[] _t0928 = (vec3[])_t0927;
      spaceInter0840 = prim @0014<vec3> (spaceInter0840, _t0928);
      vec2 _t0929 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      vec2[1] _t092A = {_t0929};
      vec2[] _t092B = (vec2[])_t092A;
      refSpaceInter0843 = _t092B;
      Femdata: Mesh _t092C = extractFem(pos0854, Mesh);
      int _t092D = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t092C, _t092D);
      Femdata: MeshCell[1] _t092E = {currentCell084B};
      Femdata: MeshCell[] _t092F = (Femdata: MeshCell[])_t092E;
      cellInter0846 = _t092F;
      string _t0930 = "In the interval:";
      vec2 _t0931 = [camNearVsp0829, camFarVsp082A];
      string _t0932 = "\n";
      print (_t0930, _t0931, _t0932);
      string _t0933 = "Possible times:";
      string _t0934 = "\n";
      print (_t0933, normalizedTimes0839, _t0934);
      string _t0935 = "cells:";
      Femdata: MeshCell[] accum093A = {};
      foreach p0936 in poses0836 {
        Femdata: Mesh _t0937 = extractFem(p0936, Mesh);
        int _t0938 = extractFemItem(CellIndex(MeshPos), int, p0936);
        Femdata: MeshCell _t0939 = loadFem(MeshCell, _t0937, _t0938);
        accum093A = prim @0010<Femdata: MeshCell> (accum093A, _t0939);
      }
      string _t093B = "\n";
      print (_t0935, accum093A, _t093B);
    } else {
      string _t093C = "No intersection!\n";
      print (_t093C);
      string _t093D = "Ui: ";
      string _t093E = " Vi:";
      string _t093F = "\n";
      print (_t093D, ui1234, _t093E, vi1233, _t093F);
      stabilize;
    }
  }
  update
  {
    string _t0940 = "Ui: ";
    string _t0941 = " vi: ";
    string _t0942 = "\n";
    print (_t0940, ui1234, _t0941, vi1233, _t0942);
    string _t0943 = "The current ref pos is:";
    vec2 _t0944 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    string _t0945 = "\n";
    print (_t0943, _t0944, _t0945);
    string _t0946 = "Current cell:";
    Femdata: Mesh _t0947 = extractFem(pos0854, Mesh);
    int _t0948 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0949 = loadFem(MeshCell, _t0947, _t0948);
    string _t094A = "\n";
    print (_t0946, _t0949, _t094A);
    string _t094B = "The current time is:";
    string _t094C = "\n";
    print (_t094B, rayN084A, _t094C);
    string _t094D = "The current world pos is:";
    vec2 _t094E;
    vec2 _t122D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t122E = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t122F = extractFem(pos0854, Mesh);
    vec2 _t1230;
    field(2)[2] _t1231 = femField(_t122F,_t122E,field(2)[2],Transform,);
    vec2 _t1232 = prim @00A5<#∞; %2; $[2]> (_t1231, _t122D);
    _t1230 = _t1232;
    _t094E = _t1230;
    string _t094F = "\n";
    print (_t094D, _t094E, _t094F);
    vec3 _t0950 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 stupid0951 = prim +0017<$[3]> (rayOrig0823, _t0950);
    string _t0952 = "The current world pos should be:";
    real _t0953 = stupid0951[0];
    real _t0954 = stupid0951[1];
    vec2 _t0955 = [_t0953, _t0954];
    string _t0956 = "\n";
    print (_t0952, _t0955, _t0956);
    real _t0957 = 0.1e1;
    real _t0958 = 0.1e-8;
    real _t0959 = prim +0017<$[]> (_t0957, _t0958);
    real _t095A = 0.1e1;
    real _t095B = 0.1e1;
    vec2 _t095C = [_t095A, _t095B];
    vec2 _t095D = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    real _t095E = prim •00CE<$[2]; $[2]; $[]> (_t095C, _t095D);
    bool _t095F = prim >0080 (_t0959, _t095E);
    real _t0960 = 0.1e-8;
    real _t0961 = 0.1e-8;
    vec2 _t0962 = [_t0960, _t0961];
    vec2 _t0963 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t0964 = prim +0017<$[2]> (_t0962, _t0963);
    real _t0965 = _t0964[0];
    real _t0966 = -0.e0;
    bool _t0967 = prim >0080 (_t0965, _t0966);
    real _t0968 = 0.1e-8;
    real _t0969 = 0.1e-8;
    vec2 _t096A = [_t0968, _t0969];
    vec2 _t096B = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    vec2 _t096C = prim +0017<$[2]> (_t096A, _t096B);
    real _t096D = _t096C[1];
    real _t096E = -0.e0;
    bool _t096F = prim >0080 (_t096D, _t096E);
    bool _t0970 = prim $and01C4 (_t0967, _t096F);
    bool _t0971 = prim $and01C4 (_t095F, _t0970);
    bool _t0972 = prim !00BC (_t0971);
    if _t0972 {
      string _t0973 = "nerror: invalid pos created\n";
      print (_t0973);
      bool _t0974 = prim !00BC (startsInside085A);
      if _t0974 {
        string _t0975 = "Not because of an inside\n";
        print (_t0975);
      }
    }
    string _t0976 = "The current world pos is:";
    vec2 _t0977;
    vec2 _t1227 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1228 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1229 = extractFem(pos0854, Mesh);
    vec2 _t122A;
    field(2)[2] _t122B = femField(_t1229,_t1228,field(2)[2],Transform,);
    vec2 _t122C = prim @00A5<#∞; %2; $[2]> (_t122B, _t1227);
    _t122A = _t122C;
    _t0977 = _t122A;
    string _t0978 = "\n";
    print (_t0976, _t0977, _t0978);
    vec3 _t0979 = prim *0036<$[3]> (rayN084A, rayVec0824);
    vec3 cpos097A = prim +0017<$[3]> (rayOrig0823, _t0979);
    string _t097B = "The current world pos should be:";
    real _t097C = cpos097A[0];
    real _t097D = cpos097A[1];
    vec2 _t097E = [_t097C, _t097D];
    string _t097F = "\n";
    print (_t097B, _t097E, _t097F);
    vec2 _t0980;
    vec2 _t1221 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
    int _t1222 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: Mesh _t1223 = extractFem(pos0854, Mesh);
    vec2 _t1224;
    field(2)[2] _t1225 = femField(_t1223,_t1222,field(2)[2],Transform,);
    vec2 _t1226 = prim @00A5<#∞; %2; $[2]> (_t1225, _t1221);
    _t1224 = _t1226;
    _t0980 = _t1224;
    real _t0981 = cpos097A[0];
    real _t0982 = cpos097A[1];
    vec2 _t0983 = [_t0981, _t0982];
    vec2 _t0984 = prim -0026<$[2]> (_t0980, _t0983);
    real err0985 = prim |()|00B5<$[2]> (_t0984);
    real _t0986 = 0.1e-4;
    bool _t0987 = prim >0080 (err0985, _t0986);
    if _t0987 {
      string _t0988 = "nerror:Warning! Moved off ray:";
      string _t0989 = "\n";
      print (_t0988, err0985, _t0989);
    } else {
      string _t098A = "Did not move off ray!\n";
      print (_t098A);
    }
    int _t098B = 1;
    steps084D = prim +0015 (steps084D, _t098B);
    string _t098C = "Orig:";
    string _t098D = " dir:";
    string _t098E = "\n";
    print (_t098C, rayOrig0823, _t098D, rayVec0824, _t098E);
    real _t0991 = prim -0026<$[]> (camFarVsp082A, rayN084A);
    vec3 newDpos0992 = prim *0036<$[3]> (_t0991, rayVec0824);
    vec2 _t0993 = extractFemItem(RefPos(Mesh), vec2, pos0854);
    Femdata: Mesh _t0994 = extractFem(pos0854, Mesh);
    int _t0995 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t0996 = loadFem(MeshCell, _t0994, _t0995);
    Femdata: Mesh _t0997 = extractFem(_t0996, Mesh);
    Femdata: Mesh _t0998 = extractFem(pos0854, Mesh);
    int _t0999 = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099A = loadFem(MeshCell, _t0998, _t0999);
    Femdata: Mesh _t099B = extractFem(_t099A, Mesh);
    Femdata: Mesh _t099C = extractFem(pos0854, Mesh);
    int _t099D = extractFemItem(CellIndex(MeshPos), int, pos0854);
    Femdata: MeshCell _t099E = loadFem(MeshCell, _t099C, _t099D);
    int _t099F = extractFemItem(CellIndex(MeshCell), int, _t099E);
    field(2)[2] _t09A0 = femField(_t0997,_t099F,field(2)[2],Transform,);
    field(2)[2,2] _t09A1 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09A0);
    real _t09A2 = -0.e0;
    real _t09A3 = -0.e0;
    vec2 _t09A4 = [_t09A2, _t09A3];
    tensor[2,2] _t09A5 = prim @00A5<#∞; %2; $[2,2]> (_t09A1, _t09A4);
    tensor[2,2] _t09A6 = prim inv0154 (_t09A5);
    real _t09A7 = newDpos0992[0];
    real _t09A8 = newDpos0992[1];
    vec2 _t09A9 = [_t09A7, _t09A8];
    vec2 _t09AA = prim •00CE<$[2,2]; $[2]; $[2]> (_t09A6, _t09A9);
    int _t09AB = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
    vec2 _t09AC;
    real time1151 = +inf;
    int face1152 = -1;
    real faceTime1153 = -inf;
    real _t1154 = 0.1e1;
    real _t1155 = 0.e0;
    vec2 _t1156 = [_t1154, _t1155];
    vec2 _t1157 = prim -0026<$[2]> (_t1156, _t0993);
    real _t1158 = -0.1e1;
    real _t1159 = 0.1e1;
    vec2 _t115A = [_t1158, _t1159];
    real _t115B = -0.1e1;
    real _t115C = 0.1e1;
    vec2 _t115D = [_t115B, _t115C];
    real _t115E = prim ×00BD (_t09AA, _t115D);
    vec2 _t115F = prim /0057<$[2]> (_t115A, _t115E);
    real _t1160 = prim ×00BD (_t1157, _t115F);
    real _t1161 = -0.1e-15;
    bool _t1162 = prim >=007E (_t1160, _t1161);
    real _t1163 = 0.1e1;
    real _t1164 = 0.e0;
    vec2 _t1165 = [_t1163, _t1164];
    vec2 _t1166 = prim -0026<$[2]> (_t1165, _t0993);
    real _t1167 = -0.1e1;
    real _t1168 = 0.1e1;
    vec2 _t1169 = [_t1167, _t1168];
    real _t116A = -0.1e1;
    real _t116B = 0.1e1;
    vec2 _t116C = [_t116A, _t116B];
    real _t116D = prim ×00BD (_t09AA, _t116C);
    vec2 _t116E = prim /0057<$[2]> (_t1169, _t116D);
    real _t116F = prim ×00BD (_t1166, _t116E);
    bool _t1170 = prim >0080 (time1151, _t116F);
    real _t1171 = -0.1e1;
    real _t1172 = 0.1e1;
    vec2 _t1173 = [_t1171, _t1172];
    real _t1174 = prim ×00BD (_t09AA, _t1173);
    real _t1175 = prim |()|00B5<$[]> (_t1174);
    real _t1176 = 0.1e-20;
    bool _t1177 = prim >=007E (_t1175, _t1176);
    bool _t1178 = prim $and01C4 (_t1170, _t1177);
    bool _t1179 = prim $and01C4 (_t1162, _t1178);
    if _t1179 {
      int _t117A = 0;
      bool _t117B = prim !=0086 (_t09AB, _t117A);
      if _t117B {
        real _t117C = 0.1e1;
        real _t117D = 0.e0;
        vec2 _t117E = [_t117C, _t117D];
        vec2 _t117F = prim -0026<$[2]> (_t117E, _t0993);
        real _t1180 = -0.1e1;
        real _t1181 = 0.1e1;
        vec2 _t1182 = [_t1180, _t1181];
        real _t1183 = -0.1e1;
        real _t1184 = 0.1e1;
        vec2 _t1185 = [_t1183, _t1184];
        real _t1186 = prim ×00BD (_t09AA, _t1185);
        vec2 _t1187 = prim /0057<$[2]> (_t1182, _t1186);
        time1151 = prim ×00BD (_t117F, _t1187);
        face1152 = 0;
      } else {
        real _t1188 = 0.1e1;
        real _t1189 = 0.e0;
        vec2 _t118A = [_t1188, _t1189];
        vec2 _t118B = prim -0026<$[2]> (_t118A, _t0993);
        real _t118C = -0.1e1;
        real _t118D = 0.1e1;
        vec2 _t118E = [_t118C, _t118D];
        real _t118F = -0.1e1;
        real _t1190 = 0.1e1;
        vec2 _t1191 = [_t118F, _t1190];
        real _t1192 = prim ×00BD (_t09AA, _t1191);
        vec2 _t1193 = prim /0057<$[2]> (_t118E, _t1192);
        faceTime1153 = prim ×00BD (_t118B, _t1193);
      }
    }
    real _t1194 = 0.e0;
    real _t1195 = 0.e0;
    vec2 _t1196 = [_t1194, _t1195];
    vec2 _t1197 = prim -0026<$[2]> (_t1196, _t0993);
    real _t1198 = 0.e0;
    real _t1199 = 0.1e1;
    vec2 _t119A = [_t1198, _t1199];
    real _t119B = 0.e0;
    real _t119C = 0.1e1;
    vec2 _t119D = [_t119B, _t119C];
    real _t119E = prim ×00BD (_t09AA, _t119D);
    vec2 _t119F = prim /0057<$[2]> (_t119A, _t119E);
    real _t11A0 = prim ×00BD (_t1197, _t119F);
    real _t11A1 = -0.1e-15;
    bool _t11A2 = prim >=007E (_t11A0, _t11A1);
    real _t11A3 = 0.e0;
    real _t11A4 = 0.e0;
    vec2 _t11A5 = [_t11A3, _t11A4];
    vec2 _t11A6 = prim -0026<$[2]> (_t11A5, _t0993);
    real _t11A7 = 0.e0;
    real _t11A8 = 0.1e1;
    vec2 _t11A9 = [_t11A7, _t11A8];
    real _t11AA = 0.e0;
    real _t11AB = 0.1e1;
    vec2 _t11AC = [_t11AA, _t11AB];
    real _t11AD = prim ×00BD (_t09AA, _t11AC);
    vec2 _t11AE = prim /0057<$[2]> (_t11A9, _t11AD);
    real _t11AF = prim ×00BD (_t11A6, _t11AE);
    bool _t11B0 = prim >0080 (time1151, _t11AF);
    real _t11B1 = 0.e0;
    real _t11B2 = 0.1e1;
    vec2 _t11B3 = [_t11B1, _t11B2];
    real _t11B4 = prim ×00BD (_t09AA, _t11B3);
    real _t11B5 = prim |()|00B5<$[]> (_t11B4);
    real _t11B6 = 0.1e-20;
    bool _t11B7 = prim >=007E (_t11B5, _t11B6);
    bool _t11B8 = prim $and01C4 (_t11B0, _t11B7);
    bool _t11B9 = prim $and01C4 (_t11A2, _t11B8);
    if _t11B9 {
      int _t11BA = 1;
      bool _t11BB = prim !=0086 (_t09AB, _t11BA);
      if _t11BB {
        real _t11BC = 0.e0;
        real _t11BD = 0.e0;
        vec2 _t11BE = [_t11BC, _t11BD];
        vec2 _t11BF = prim -0026<$[2]> (_t11BE, _t0993);
        real _t11C0 = 0.e0;
        real _t11C1 = 0.1e1;
        vec2 _t11C2 = [_t11C0, _t11C1];
        real _t11C3 = 0.e0;
        real _t11C4 = 0.1e1;
        vec2 _t11C5 = [_t11C3, _t11C4];
        real _t11C6 = prim ×00BD (_t09AA, _t11C5);
        vec2 _t11C7 = prim /0057<$[2]> (_t11C2, _t11C6);
        time1151 = prim ×00BD (_t11BF, _t11C7);
        face1152 = 1;
      } else {
        real _t11C8 = 0.e0;
        real _t11C9 = 0.e0;
        vec2 _t11CA = [_t11C8, _t11C9];
        vec2 _t11CB = prim -0026<$[2]> (_t11CA, _t0993);
        real _t11CC = 0.e0;
        real _t11CD = 0.1e1;
        vec2 _t11CE = [_t11CC, _t11CD];
        real _t11CF = 0.e0;
        real _t11D0 = 0.1e1;
        vec2 _t11D1 = [_t11CF, _t11D0];
        real _t11D2 = prim ×00BD (_t09AA, _t11D1);
        vec2 _t11D3 = prim /0057<$[2]> (_t11CE, _t11D2);
        faceTime1153 = prim ×00BD (_t11CB, _t11D3);
      }
    }
    real _t11D4 = 0.e0;
    real _t11D5 = 0.e0;
    vec2 _t11D6 = [_t11D4, _t11D5];
    vec2 _t11D7 = prim -0026<$[2]> (_t11D6, _t0993);
    real _t11D8 = 0.1e1;
    real _t11D9 = 0.e0;
    vec2 _t11DA = [_t11D8, _t11D9];
    real _t11DB = 0.1e1;
    real _t11DC = 0.e0;
    vec2 _t11DD = [_t11DB, _t11DC];
    real _t11DE = prim ×00BD (_t09AA, _t11DD);
    vec2 _t11DF = prim /0057<$[2]> (_t11DA, _t11DE);
    real _t11E0 = prim ×00BD (_t11D7, _t11DF);
    real _t11E1 = -0.1e-15;
    bool _t11E2 = prim >=007E (_t11E0, _t11E1);
    real _t11E3 = 0.e0;
    real _t11E4 = 0.e0;
    vec2 _t11E5 = [_t11E3, _t11E4];
    vec2 _t11E6 = prim -0026<$[2]> (_t11E5, _t0993);
    real _t11E7 = 0.1e1;
    real _t11E8 = 0.e0;
    vec2 _t11E9 = [_t11E7, _t11E8];
    real _t11EA = 0.1e1;
    real _t11EB = 0.e0;
    vec2 _t11EC = [_t11EA, _t11EB];
    real _t11ED = prim ×00BD (_t09AA, _t11EC);
    vec2 _t11EE = prim /0057<$[2]> (_t11E9, _t11ED);
    real _t11EF = prim ×00BD (_t11E6, _t11EE);
    bool _t11F0 = prim >0080 (time1151, _t11EF);
    real _t11F1 = 0.1e1;
    real _t11F2 = 0.e0;
    vec2 _t11F3 = [_t11F1, _t11F2];
    real _t11F4 = prim ×00BD (_t09AA, _t11F3);
    real _t11F5 = prim |()|00B5<$[]> (_t11F4);
    real _t11F6 = 0.1e-20;
    bool _t11F7 = prim >=007E (_t11F5, _t11F6);
    bool _t11F8 = prim $and01C4 (_t11F0, _t11F7);
    bool _t11F9 = prim $and01C4 (_t11E2, _t11F8);
    if _t11F9 {
      int _t11FA = 2;
      bool _t11FB = prim !=0086 (_t09AB, _t11FA);
      if _t11FB {
        real _t11FC = 0.e0;
        real _t11FD = 0.e0;
        vec2 _t11FE = [_t11FC, _t11FD];
        vec2 _t11FF = prim -0026<$[2]> (_t11FE, _t0993);
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec2 _t1202 = [_t1200, _t1201];
        real _t1203 = 0.1e1;
        real _t1204 = 0.e0;
        vec2 _t1205 = [_t1203, _t1204];
        real _t1206 = prim ×00BD (_t09AA, _t1205);
        vec2 _t1207 = prim /0057<$[2]> (_t1202, _t1206);
        time1151 = prim ×00BD (_t11FF, _t1207);
        face1152 = 2;
      } else {
        real _t1208 = 0.e0;
        real _t1209 = 0.e0;
        vec2 _t120A = [_t1208, _t1209];
        vec2 _t120B = prim -0026<$[2]> (_t120A, _t0993);
        real _t120C = 0.1e1;
        real _t120D = 0.e0;
        vec2 _t120E = [_t120C, _t120D];
        real _t120F = 0.1e1;
        real _t1210 = 0.e0;
        vec2 _t1211 = [_t120F, _t1210];
        real _t1212 = prim ×00BD (_t09AA, _t1211);
        vec2 _t1213 = prim /0057<$[2]> (_t120E, _t1212);
        faceTime1153 = prim ×00BD (_t120B, _t1213);
      }
    }
    int _t1214 = -1;
    bool _t1215 = prim !=0086 (face1152, _t1214);
    if _t1215 {
      real _t1216 = 0.e0;
      real _t1217 = prim max0125 (time1151, _t1216);
      real _t1218 = (real)face1152;
      vec2 _t1219 = [_t1217, _t1218];
      _t09AC = _t1219;
    } else {
      real _t121A = -inf;
      bool _t121B = prim ==0084 (_t121A, faceTime1153);
      if _t121B {
        real _t121C = -0.1e1;
        real _t121D = -0.1e1;
        vec2 _t121E = [_t121C, _t121D];
        _t09AC = _t121E;
      } else {
        real _t121F = (real)_t09AB;
        vec2 _t1220 = [faceTime1153, _t121F];
        _t09AC = _t1220;
      }
    }
    real nextTime09AD = _t09AC[0];
    real _t09AE = prim lerp0096<$[]> (rayN084A, camFarVsp082A, nextTime09AD);
    real _t09AF = prim min0127 (camFarVsp082A, _t09AE);
    real rayNp09B0 = prim max0125 (rayN084A, _t09AF);
    string _t09B1 = "Next time:";
    string _t09B2 = "\n";
    print (_t09B1, nextTime09AD, _t09B2);
    real _t09B3 = 0.e0;
    bool _t09B4 = prim >=007E (nextTime09AD, _t09B3);
    if _t09B4 {
      vec2 _t09B5 = [rayN084A, rayNp09B0];
      rayCellInter083D = prim @0010<vec2> (rayCellInter083D, _t09B5);
      rayN084A = rayNp09B0;
      Femdata: Mesh _t09B6 = extractFem(pos0854, Mesh);
      int _t09B7 = extractFemItem(CellIndex(Mesh), int, pos0854);
      vec2 _t09B8 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09B9 = extractFem(pos0854, Mesh);
      int _t09BA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BB = loadFem(MeshCell, _t09B9, _t09BA);
      Femdata: Mesh _t09BC = extractFem(_t09BB, Mesh);
      Femdata: Mesh _t09BD = extractFem(pos0854, Mesh);
      int _t09BE = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09BF = loadFem(MeshCell, _t09BD, _t09BE);
      Femdata: Mesh _t09C0 = extractFem(_t09BF, Mesh);
      Femdata: Mesh _t09C1 = extractFem(pos0854, Mesh);
      int _t09C2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09C3 = loadFem(MeshCell, _t09C1, _t09C2);
      int _t09C4 = extractFemItem(CellIndex(MeshCell), int, _t09C3);
      field(2)[2] _t09C5 = femField(_t09BC,_t09C4,field(2)[2],Transform,);
      field(2)[2,2] _t09C6 = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09C5);
      field(2)[2,2] _t09C7 = prim inv015B<#∞; %2> (_t09C6);
      real _t09C8 = -0.e0;
      real _t09C9 = -0.e0;
      vec2 _t09CA = [_t09C8, _t09C9];
      tensor[2,2] _t09CB = prim @00A5<#∞; %2; $[2,2]> (_t09C7, _t09CA);
      real _t09CC = newDpos0992[0];
      real _t09CD = newDpos0992[1];
      vec2 _t09CE = [_t09CC, _t09CD];
      vec2 _t09CF = prim •00CE<$[2,2]; $[2]; $[2]> (_t09CB, _t09CE);
      vec2 _t09D0 = extractFemItem(RefPos(Mesh), vec2, pos0854);
      Femdata: Mesh _t09D1 = extractFem(pos0854, Mesh);
      int _t09D2 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D3 = loadFem(MeshCell, _t09D1, _t09D2);
      Femdata: Mesh _t09D4 = extractFem(_t09D3, Mesh);
      Femdata: Mesh _t09D5 = extractFem(pos0854, Mesh);
      int _t09D6 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09D7 = loadFem(MeshCell, _t09D5, _t09D6);
      Femdata: Mesh _t09D8 = extractFem(_t09D7, Mesh);
      Femdata: Mesh _t09D9 = extractFem(pos0854, Mesh);
      int _t09DA = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: MeshCell _t09DB = loadFem(MeshCell, _t09D9, _t09DA);
      int _t09DC = extractFemItem(CellIndex(MeshCell), int, _t09DB);
      field(2)[2] _t09DD = femField(_t09D4,_t09DC,field(2)[2],Transform,);
      field(2)[2,2] _t09DE = prim ∇⊗00AD<#∞; %2; $[]; %2> (_t09DD);
      field(2)[2,2] _t09DF = prim inv015B<#∞; %2> (_t09DE);
      real _t09E0 = -0.e0;
      real _t09E1 = -0.e0;
      vec2 _t09E2 = [_t09E0, _t09E1];
      tensor[2,2] _t09E3 = prim @00A5<#∞; %2; $[2,2]> (_t09DF, _t09E2);
      real _t09E4 = newDpos0992[0];
      real _t09E5 = newDpos0992[1];
      vec2 _t09E6 = [_t09E4, _t09E5];
      vec2 _t09E7 = prim •00CE<$[2,2]; $[2]; $[2]> (_t09E3, _t09E6);
      int _t09E8 = extractFemItem(PosEntryFacet(MeshPos), int, pos0854);
      vec2 _t09E9;
      real time1081 = +inf;
      int face1082 = -1;
      real faceTime1083 = -inf;
      real _t1084 = 0.1e1;
      real _t1085 = 0.e0;
      vec2 _t1086 = [_t1084, _t1085];
      vec2 _t1087 = prim -0026<$[2]> (_t1086, _t09D0);
      real _t1088 = -0.1e1;
      real _t1089 = 0.1e1;
      vec2 _t108A = [_t1088, _t1089];
      real _t108B = -0.1e1;
      real _t108C = 0.1e1;
      vec2 _t108D = [_t108B, _t108C];
      real _t108E = prim ×00BD (_t09E7, _t108D);
      vec2 _t108F = prim /0057<$[2]> (_t108A, _t108E);
      real _t1090 = prim ×00BD (_t1087, _t108F);
      real _t1091 = -0.1e-15;
      bool _t1092 = prim >=007E (_t1090, _t1091);
      real _t1093 = 0.1e1;
      real _t1094 = 0.e0;
      vec2 _t1095 = [_t1093, _t1094];
      vec2 _t1096 = prim -0026<$[2]> (_t1095, _t09D0);
      real _t1097 = -0.1e1;
      real _t1098 = 0.1e1;
      vec2 _t1099 = [_t1097, _t1098];
      real _t109A = -0.1e1;
      real _t109B = 0.1e1;
      vec2 _t109C = [_t109A, _t109B];
      real _t109D = prim ×00BD (_t09E7, _t109C);
      vec2 _t109E = prim /0057<$[2]> (_t1099, _t109D);
      real _t109F = prim ×00BD (_t1096, _t109E);
      bool _t10A0 = prim >0080 (time1081, _t109F);
      real _t10A1 = -0.1e1;
      real _t10A2 = 0.1e1;
      vec2 _t10A3 = [_t10A1, _t10A2];
      real _t10A4 = prim ×00BD (_t09E7, _t10A3);
      real _t10A5 = prim |()|00B5<$[]> (_t10A4);
      real _t10A6 = 0.1e-20;
      bool _t10A7 = prim >=007E (_t10A5, _t10A6);
      bool _t10A8 = prim $and01C4 (_t10A0, _t10A7);
      bool _t10A9 = prim $and01C4 (_t1092, _t10A8);
      if _t10A9 {
        int _t10AA = 0;
        bool _t10AB = prim !=0086 (_t09E8, _t10AA);
        if _t10AB {
          real _t10AC = 0.1e1;
          real _t10AD = 0.e0;
          vec2 _t10AE = [_t10AC, _t10AD];
          vec2 _t10AF = prim -0026<$[2]> (_t10AE, _t09D0);
          real _t10B0 = -0.1e1;
          real _t10B1 = 0.1e1;
          vec2 _t10B2 = [_t10B0, _t10B1];
          real _t10B3 = -0.1e1;
          real _t10B4 = 0.1e1;
          vec2 _t10B5 = [_t10B3, _t10B4];
          real _t10B6 = prim ×00BD (_t09E7, _t10B5);
          vec2 _t10B7 = prim /0057<$[2]> (_t10B2, _t10B6);
          time1081 = prim ×00BD (_t10AF, _t10B7);
          face1082 = 0;
        } else {
          real _t10B8 = 0.1e1;
          real _t10B9 = 0.e0;
          vec2 _t10BA = [_t10B8, _t10B9];
          vec2 _t10BB = prim -0026<$[2]> (_t10BA, _t09D0);
          real _t10BC = -0.1e1;
          real _t10BD = 0.1e1;
          vec2 _t10BE = [_t10BC, _t10BD];
          real _t10BF = -0.1e1;
          real _t10C0 = 0.1e1;
          vec2 _t10C1 = [_t10BF, _t10C0];
          real _t10C2 = prim ×00BD (_t09E7, _t10C1);
          vec2 _t10C3 = prim /0057<$[2]> (_t10BE, _t10C2);
          faceTime1083 = prim ×00BD (_t10BB, _t10C3);
        }
      }
      real _t10C4 = 0.e0;
      real _t10C5 = 0.e0;
      vec2 _t10C6 = [_t10C4, _t10C5];
      vec2 _t10C7 = prim -0026<$[2]> (_t10C6, _t09D0);
      real _t10C8 = 0.e0;
      real _t10C9 = 0.1e1;
      vec2 _t10CA = [_t10C8, _t10C9];
      real _t10CB = 0.e0;
      real _t10CC = 0.1e1;
      vec2 _t10CD = [_t10CB, _t10CC];
      real _t10CE = prim ×00BD (_t09E7, _t10CD);
      vec2 _t10CF = prim /0057<$[2]> (_t10CA, _t10CE);
      real _t10D0 = prim ×00BD (_t10C7, _t10CF);
      real _t10D1 = -0.1e-15;
      bool _t10D2 = prim >=007E (_t10D0, _t10D1);
      real _t10D3 = 0.e0;
      real _t10D4 = 0.e0;
      vec2 _t10D5 = [_t10D3, _t10D4];
      vec2 _t10D6 = prim -0026<$[2]> (_t10D5, _t09D0);
      real _t10D7 = 0.e0;
      real _t10D8 = 0.1e1;
      vec2 _t10D9 = [_t10D7, _t10D8];
      real _t10DA = 0.e0;
      real _t10DB = 0.1e1;
      vec2 _t10DC = [_t10DA, _t10DB];
      real _t10DD = prim ×00BD (_t09E7, _t10DC);
      vec2 _t10DE = prim /0057<$[2]> (_t10D9, _t10DD);
      real _t10DF = prim ×00BD (_t10D6, _t10DE);
      bool _t10E0 = prim >0080 (time1081, _t10DF);
      real _t10E1 = 0.e0;
      real _t10E2 = 0.1e1;
      vec2 _t10E3 = [_t10E1, _t10E2];
      real _t10E4 = prim ×00BD (_t09E7, _t10E3);
      real _t10E5 = prim |()|00B5<$[]> (_t10E4);
      real _t10E6 = 0.1e-20;
      bool _t10E7 = prim >=007E (_t10E5, _t10E6);
      bool _t10E8 = prim $and01C4 (_t10E0, _t10E7);
      bool _t10E9 = prim $and01C4 (_t10D2, _t10E8);
      if _t10E9 {
        int _t10EA = 1;
        bool _t10EB = prim !=0086 (_t09E8, _t10EA);
        if _t10EB {
          real _t10EC = 0.e0;
          real _t10ED = 0.e0;
          vec2 _t10EE = [_t10EC, _t10ED];
          vec2 _t10EF = prim -0026<$[2]> (_t10EE, _t09D0);
          real _t10F0 = 0.e0;
          real _t10F1 = 0.1e1;
          vec2 _t10F2 = [_t10F0, _t10F1];
          real _t10F3 = 0.e0;
          real _t10F4 = 0.1e1;
          vec2 _t10F5 = [_t10F3, _t10F4];
          real _t10F6 = prim ×00BD (_t09E7, _t10F5);
          vec2 _t10F7 = prim /0057<$[2]> (_t10F2, _t10F6);
          time1081 = prim ×00BD (_t10EF, _t10F7);
          face1082 = 1;
        } else {
          real _t10F8 = 0.e0;
          real _t10F9 = 0.e0;
          vec2 _t10FA = [_t10F8, _t10F9];
          vec2 _t10FB = prim -0026<$[2]> (_t10FA, _t09D0);
          real _t10FC = 0.e0;
          real _t10FD = 0.1e1;
          vec2 _t10FE = [_t10FC, _t10FD];
          real _t10FF = 0.e0;
          real _t1100 = 0.1e1;
          vec2 _t1101 = [_t10FF, _t1100];
          real _t1102 = prim ×00BD (_t09E7, _t1101);
          vec2 _t1103 = prim /0057<$[2]> (_t10FE, _t1102);
          faceTime1083 = prim ×00BD (_t10FB, _t1103);
        }
      }
      real _t1104 = 0.e0;
      real _t1105 = 0.e0;
      vec2 _t1106 = [_t1104, _t1105];
      vec2 _t1107 = prim -0026<$[2]> (_t1106, _t09D0);
      real _t1108 = 0.1e1;
      real _t1109 = 0.e0;
      vec2 _t110A = [_t1108, _t1109];
      real _t110B = 0.1e1;
      real _t110C = 0.e0;
      vec2 _t110D = [_t110B, _t110C];
      real _t110E = prim ×00BD (_t09E7, _t110D);
      vec2 _t110F = prim /0057<$[2]> (_t110A, _t110E);
      real _t1110 = prim ×00BD (_t1107, _t110F);
      real _t1111 = -0.1e-15;
      bool _t1112 = prim >=007E (_t1110, _t1111);
      real _t1113 = 0.e0;
      real _t1114 = 0.e0;
      vec2 _t1115 = [_t1113, _t1114];
      vec2 _t1116 = prim -0026<$[2]> (_t1115, _t09D0);
      real _t1117 = 0.1e1;
      real _t1118 = 0.e0;
      vec2 _t1119 = [_t1117, _t1118];
      real _t111A = 0.1e1;
      real _t111B = 0.e0;
      vec2 _t111C = [_t111A, _t111B];
      real _t111D = prim ×00BD (_t09E7, _t111C);
      vec2 _t111E = prim /0057<$[2]> (_t1119, _t111D);
      real _t111F = prim ×00BD (_t1116, _t111E);
      bool _t1120 = prim >0080 (time1081, _t111F);
      real _t1121 = 0.1e1;
      real _t1122 = 0.e0;
      vec2 _t1123 = [_t1121, _t1122];
      real _t1124 = prim ×00BD (_t09E7, _t1123);
      real _t1125 = prim |()|00B5<$[]> (_t1124);
      real _t1126 = 0.1e-20;
      bool _t1127 = prim >=007E (_t1125, _t1126);
      bool _t1128 = prim $and01C4 (_t1120, _t1127);
      bool _t1129 = prim $and01C4 (_t1112, _t1128);
      if _t1129 {
        int _t112A = 2;
        bool _t112B = prim !=0086 (_t09E8, _t112A);
        if _t112B {
          real _t112C = 0.e0;
          real _t112D = 0.e0;
          vec2 _t112E = [_t112C, _t112D];
          vec2 _t112F = prim -0026<$[2]> (_t112E, _t09D0);
          real _t1130 = 0.1e1;
          real _t1131 = 0.e0;
          vec2 _t1132 = [_t1130, _t1131];
          real _t1133 = 0.1e1;
          real _t1134 = 0.e0;
          vec2 _t1135 = [_t1133, _t1134];
          real _t1136 = prim ×00BD (_t09E7, _t1135);
          vec2 _t1137 = prim /0057<$[2]> (_t1132, _t1136);
          time1081 = prim ×00BD (_t112F, _t1137);
          face1082 = 2;
        } else {
          real _t1138 = 0.e0;
          real _t1139 = 0.e0;
          vec2 _t113A = [_t1138, _t1139];
          vec2 _t113B = prim -0026<$[2]> (_t113A, _t09D0);
          real _t113C = 0.1e1;
          real _t113D = 0.e0;
          vec2 _t113E = [_t113C, _t113D];
          real _t113F = 0.1e1;
          real _t1140 = 0.e0;
          vec2 _t1141 = [_t113F, _t1140];
          real _t1142 = prim ×00BD (_t09E7, _t1141);
          vec2 _t1143 = prim /0057<$[2]> (_t113E, _t1142);
          faceTime1083 = prim ×00BD (_t113B, _t1143);
        }
      }
      int _t1144 = -1;
      bool _t1145 = prim !=0086 (face1082, _t1144);
      if _t1145 {
        real _t1146 = 0.e0;
        real _t1147 = prim max0125 (time1081, _t1146);
        real _t1148 = (real)face1082;
        vec2 _t1149 = [_t1147, _t1148];
        _t09E9 = _t1149;
      } else {
        real _t114A = -inf;
        bool _t114B = prim ==0084 (_t114A, faceTime1083);
        if _t114B {
          real _t114C = -0.1e1;
          real _t114D = -0.1e1;
          vec2 _t114E = [_t114C, _t114D];
          _t09E9 = _t114E;
        } else {
          real _t114F = (real)_t09E8;
          vec2 _t1150 = [faceTime1083, _t114F];
          _t09E9 = _t1150;
        }
      }
      Femdata: MeshPos posp09EA;
      int _t100C = -1;
      real _t100D = _t09E9[1];
      int _t100E = prim $r2i01B7 (_t100D);
      int[2] _t100F = func nextCell40536 (_t100E, _t09B7, _t09B6);
      int _t1010 = 0;
      int _t1011 = prim $sub01C0<int; %2> (_t100F, _t1010);
      bool _t1012 = prim !=0086 (_t100C, _t1011);
      if _t1012 {
        real _t1013 = _t09E9[1];
        int _t1014 = prim $r2i01B7 (_t1013);
        int[2] _t1015 = func nextCell40536 (_t1014, _t09B7, _t09B6);
        int _t1016 = 0;
        int _t1017 = prim $sub01C0<int; %2> (_t1015, _t1016);
        real _t1018 = 0.1e1;
        real _t1019 = 0.e0;
        vec2 _t101A = [_t1018, _t1019];
        real _t101B = 0.e0;
        real _t101C = 0.e0;
        vec2 _t101D = [_t101B, _t101C];
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec2 _t1020 = [_t101E, _t101F];
        vec2[3] _t1021 = {_t101A, _t101D, _t1020};
        real _t1022 = _t09E9[1];
        int _t1023 = prim $r2i01B7 (_t1022);
        int[2] _t1024 = func nextCell40536 (_t1023, _t09B7, _t09B6);
        int _t1025 = 1;
        int _t1026 = prim $sub01C0<int; %2> (_t1024, _t1025);
        vec2 _t1027 = prim $sub01C0<vec2; %3> (_t1021, _t1026);
        real _t1028 = -0.1e1;
        real _t1029 = 0.1e1;
        vec2 _t102A = [_t1028, _t1029];
        real _t102B = 0.e0;
        real _t102C = 0.1e1;
        vec2 _t102D = [_t102B, _t102C];
        real _t102E = 0.1e1;
        real _t102F = 0.e0;
        vec2 _t1030 = [_t102E, _t102F];
        vec2[3] _t1031 = {_t102A, _t102D, _t1030};
        real _t1032 = _t09E9[1];
        int _t1033 = prim $r2i01B7 (_t1032);
        int[2] _t1034 = func nextCell40536 (_t1033, _t09B7, _t09B6);
        int _t1035 = 1;
        int _t1036 = prim $sub01C0<int; %2> (_t1034, _t1035);
        vec2 _t1037 = prim $sub01C0<vec2; %3> (_t1031, _t1036);
        real _t1038 = _t09E9[0];
        vec2 _t1039 = prim *0036<$[2]> (_t1038, _t09CF);
        vec2 _t103A = prim +0017<$[2]> (_t1039, _t09B8);
        real _t103B = _t103A[0];
        real _t103C = _t09E9[0];
        vec2 _t103D = prim *0036<$[2]> (_t103C, _t09CF);
        vec2 _t103E = prim +0017<$[2]> (_t103D, _t09B8);
        real _t103F = _t103E[1];
        real[2] _t1040 = {_t103B, _t103F};
        int _t1041 = 1;
        int _t1042 = 1;
        int _t1043 = 0;
        int[3] _t1044 = {_t1041, _t1042, _t1043};
        real _t1045 = _t09E9[1];
        int _t1046 = prim $r2i01B7 (_t1045);
        int _t1047 = prim $sub01C0<int; %3> (_t1044, _t1046);
        real _t1048 = prim $sub01C0<real; %2> (_t1040, _t1047);
        real _t1049 = 0.1e1;
        real _t104A = 0.e0;
        real[2] _t104B = {_t1049, _t104A};
        real _t104C = 0.e0;
        real _t104D = 0.e0;
        real[2] _t104E = {_t104C, _t104D};
        real _t104F = 0.e0;
        real _t1050 = 0.e0;
        real[2] _t1051 = {_t104F, _t1050};
        real[2][3] _t1052 = {_t104B, _t104E, _t1051};
        real _t1053 = _t09E9[1];
        int _t1054 = prim $r2i01B7 (_t1053);
        real[2] _t1055 = prim $sub01C0<real[2]; %3> (_t1052, _t1054);
        int _t1056 = 1;
        int _t1057 = 1;
        int _t1058 = 0;
        int[3] _t1059 = {_t1056, _t1057, _t1058};
        real _t105A = _t09E9[1];
        int _t105B = prim $r2i01B7 (_t105A);
        int _t105C = prim $sub01C0<int; %3> (_t1059, _t105B);
        real _t105D = prim $sub01C0<real; %2> (_t1055, _t105C);
        real _t105E = prim -0026<$[]> (_t1048, _t105D);
        real _t105F = -0.1e1;
        real _t1060 = 0.1e1;
        real[2] _t1061 = {_t105F, _t1060};
        real _t1062 = 0.e0;
        real _t1063 = 0.1e1;
        real[2] _t1064 = {_t1062, _t1063};
        real _t1065 = 0.1e1;
        real _t1066 = 0.e0;
        real[2] _t1067 = {_t1065, _t1066};
        real[2][3] _t1068 = {_t1061, _t1064, _t1067};
        real _t1069 = _t09E9[1];
        int _t106A = prim $r2i01B7 (_t1069);
        real[2] _t106B = prim $sub01C0<real[2]; %3> (_t1068, _t106A);
        int _t106C = 1;
        int _t106D = 1;
        int _t106E = 0;
        int[3] _t106F = {_t106C, _t106D, _t106E};
        real _t1070 = _t09E9[1];
        int _t1071 = prim $r2i01B7 (_t1070);
        int _t1072 = prim $sub01C0<int; %3> (_t106F, _t1071);
        real _t1073 = prim $sub01C0<real; %2> (_t106B, _t1072);
        real _t1074 = prim /0055 (_t105E, _t1073);
        vec2 _t1075 = prim *0038<$[2]> (_t1037, _t1074);
        vec2 _t1076 = prim +0017<$[2]> (_t1027, _t1075);
        real _t1077 = _t09E9[1];
        int _t1078 = prim $r2i01B7 (_t1077);
        int[2] _t1079 = func nextCell40536 (_t1078, _t09B7, _t09B6);
        int _t107A = 1;
        int _t107B = prim $sub01C0<int; %2> (_t1079, _t107A);
        Femdata: MeshPos _t107C = extractFemItemN((_t09B6, _t1017, _t1076, _t107B),RefBuild(Mesh),);
        posp09EA = _t107C;
      } else {
        real _t107D = _t09E9[0];
        vec2 _t107E = prim *0036<$[2]> (_t107D, _t09CF);
        vec2 _t107F = prim +0017<$[2]> (_t107E, _t09B8);
        Femdata: MeshPos _t1080 = extractFemItemN((_t09B6, _t107F),InvalidBuildBoundary(MeshPos),);
        posp09EA = _t1080;
      }
      bool _t09EB = prim >=007E (rayN084A, camFarVsp082A);
      if _t09EB {
        string _t09EC = "cells: ";
        string _t09ED = "\n";
        print (_t09EC, cellInter0846, _t09ED);
        vec3 _t09EE = prim *0036<$[3]> (camFarVsp082A, rayVec0824);
        vec3 _t09EF = prim +0017<$[3]> (rayOrig0823, _t09EE);
        spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09EF);
        stabilize;
      }
      vec3 _t09F0 = prim *0036<$[3]> (rayN084A, rayVec0824);
      vec3 _t09F1 = prim +0017<$[3]> (rayOrig0823, _t09F0);
      spaceInter0840 = prim @0010<vec3> (spaceInter0840, _t09F1);
      vec2 _t09F2 = extractFemItem(RefPos(MeshPos), vec2, posp09EA);
      refSpaceInter0843 = prim @0010<vec2> (refSpaceInter0843, _t09F2);
      bool _t09F3 = extractFemItem(Valid(MeshPos), bool, posp09EA);
      if _t09F3 {
        pos0854 = posp09EA;
        string _t09F8 = "Next cell:";
        Femdata: Mesh _t09F9 = extractFem(pos0854, Mesh);
        int _t09FA = extractFemItem(CellIndex(MeshPos), int, pos0854);
        Femdata: MeshCell _t09FB = loadFem(MeshCell, _t09F9, _t09FA);
        string _t09FC = "\n";
        print (_t09F8, _t09FB, _t09FC);
        Femdata: Mesh _t09FD = extractFem(pos0854, Mesh);
        int _t09FE = extractFemItem(CellIndex(MeshPos), int, pos0854);
        currentCell084B = loadFem(MeshCell, _t09FD, _t09FE);
        cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
        continue;
      } else {
        string _t09FF = "Invalid\n";
        print (_t09FF);
      }
    }
    int newIdx0A00 = -1;
    real estimate0A01 = camFarVsp082A;
    int _t0A02 = 0;
    int _t0A03 = 1;
    int _t0A04 = prim -0024 (cellIntersects083C, _t0A03);
    int[] _t0A05 = prim $range01C3 (_t0A02, _t0A04);
    foreach i0A06 in _t0A05 {
      real t0A07 = prim $dynsub01C2<real> (normalizedTimes0839, i0A06);
      Femdata: MeshPos posp0A08 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, i0A06);
      bool _t0A09 = prim >=007E (t0A07, rayN084A);
      if _t0A09 {
        bool _t0A0A = prim >=007E (estimate0A01, t0A07);
        if _t0A0A {
          Femdata: Mesh _t0A0B = extractFem(posp0A08, Mesh);
          int _t0A0C = extractFemItem(CellIndex(MeshPos), int, posp0A08);
          Femdata: MeshCell _t0A0D = loadFem(MeshCell, _t0A0B, _t0A0C);
          Femdata: Mesh _t0A0E = extractFem(pos0854, Mesh);
          int _t0A0F = extractFemItem(CellIndex(MeshPos), int, pos0854);
          Femdata: MeshCell _t0A10 = loadFem(MeshCell, _t0A0E, _t0A0F);
          bool _t0A11;
          int _t1009 = extractFemItem(CellIndex(Mesh), int, _t0A0D);
          int _t100A = extractFemItem(CellIndex(Mesh), int, _t0A10);
          bool _t100B = prim !=0086 (_t1009, _t100A);
          _t0A11 = _t100B;
          if _t0A11 {
            estimate0A01 = t0A07;
            newIdx0A00 = i0A06;
          }
        }
      }
    }
    int _t0A12 = -1;
    bool _t0A13 = prim >007F (newIdx0A00, _t0A12);
    if _t0A13 {
      string _t0A14 = "nerror:Impossible happened\n";
      print (_t0A14);
      if startsInside085A {
        string _t0A15 = "because of an inside\n";
        print (_t0A15);
      }
      string _t0A16 = "Direction:";
      string _t0A17 = "\n";
      print (_t0A16, rayVec0824, _t0A17);
      string _t0A18 = "world pos was:";
      vec2 _t0A19;
      vec2 _t1003 = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      int _t1004 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      Femdata: Mesh _t1005 = extractFem(pos0854, Mesh);
      vec2 _t1006;
      field(2)[2] _t1007 = femField(_t1005,_t1004,field(2)[2],Transform,);
      vec2 _t1008 = prim @00A5<#∞; %2; $[2]> (_t1007, _t1003);
      _t1006 = _t1008;
      _t0A19 = _t1006;
      string _t0A1A = "\n";
      print (_t0A18, _t0A19, _t0A1A);
      string _t0A1B = "Interior pos was:";
      vec2 _t0A1C = extractFemItem(RefPos(MeshPos), vec2, pos0854);
      string _t0A1D = "\n";
      print (_t0A1B, _t0A1C, _t0A1D);
      string _t0A1E = " at ";
      string _t0A1F = "\n";
      print (normalizedTimes0839, _t0A1E, newIdx0A00, _t0A1F);
      string _t0A20 = "Original time was:";
      string _t0A21 = "\n";
      print (_t0A20, rayN084A, _t0A21);
      pos0854 = prim $dynsub01C2<Femdata: MeshPos> (poses0836, newIdx0A00);
      Femdata: Mesh _t0A26 = extractFem(pos0854, Mesh);
      int _t0A27 = extractFemItem(CellIndex(MeshPos), int, pos0854);
      currentCell084B = loadFem(MeshCell, _t0A26, _t0A27);
      cellInter0846 = prim @0010<Femdata: MeshCell> (cellInter0846, currentCell084B);
      rayN084A = prim $dynsub01C2<real> (normalizedTimes0839, newIdx0A00);
      continue;
    } else {
      string _t0A28 = "Enter times:";
      string _t0A29 = "\n";
      print (_t0A28, normalizedTimes0839, _t0A29);
      string _t0A2A = "Ray enter times:";
      string _t0A2B = "\n";
      print (_t0A2A, rayCellInter083D, _t0A2B);
      string _t0A2C = "cells:";
      string _t0A2D = "\n";
      print (_t0A2C, cellInter0846, _t0A2D);
      string _t0A2E = "End\n";
      print (_t0A2E);
      stabilize;
    }
  }
}
grid(2) {
  int _t0A2F = 0;
  int _t0A30 = 1;
  int _t0A31 = prim -0024 (iresU046F, _t0A30);
  int[] _t0A32 = prim $range01C3 (_t0A2F, _t0A31);
  foreach vi0A38 in _t0A32 {
    int _t0A33 = 0;
    int _t0A34 = 1;
    int _t0A35 = prim -0024 (iresV0470, _t0A34);
    int[] _t0A36 = prim $range01C3 (_t0A33, _t0A35);
    foreach ui0A37 in _t0A36 {
      new ray (ui0A37, vi0A38);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1235 (a) = <no-default>
  input isoval1236 (isoval) = <default>
  input thick1237 (thick) = <default>
  input camEye1238 (camEye) = <default>
  input camAt1239 (camAt) = <default>
  input camUp123A (camUp) = <default>
  input camFOV123B (camFOV) = <default>
  input iresU123C (iresU) = <default>
  input iresV123D (iresV) = <default>
  input camNear123E (camNear) = <default>
  input camFar123F (camFar) = <default>
  input refStep1240 (refStep) = <default>
  input rayStep1241 (rayStep) = <default>
  input lightVsp1242 (lightVsp) = <default>
  input phongKa1243 (phongKa) = <default>
  input phongKd1244 (phongKd) = <default>
  input debug1245 (debug) = <default>
  input debugU1246 (debugU) = <default>
  input debugV1247 (debugV) = <default>
  input eps1248 (eps) = <default>
  global femData:MeshCell[] 0cell_a129C
  global real camDist129D
  global real camNearVsp129E
  global real camFarVsp129F
  global tensor[3] camN12A0
  global tensor[3] camU12A1
  global tensor[3] camV12A2
  global real camVmax12A3
  global real camUmax12A4
## functions
  function femData:MeshPos _msh_newtonInverse1318 (tensor[2] pos12A5#2, int cellInt12A6#3, femData:Mesh mesh12A7#7) {
    ENTRY1317:  preds = []
      real _t12A8#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t12AA#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn12AC#1 = <tensor[2]>[_t12A8,_t12AA];
      field _t12AE#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt12A6,mesh12A7,mesh12A7);
      field _t12B0#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t12AE);
      field _t12B2#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t12B0);
      real _t12B4#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t12B6#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] _t12B8#1 = <tensor[2]>[_t12B4,_t12B6];
      tensor[2,2] A12BA#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t12B2,_t12B8);
      int _t12BC#1 = 0;
      int _t12BE#1 = 16;
      int[] _t12C0#1 = Range(_t12BC,_t12BE);
    FOREACH12C4:  preds = [ASSIGN12C1,NEXT1313]
      foreach (itter12C2 in _t12C0) on exit goto ASSIGN1315
        tensor[2] xn12C3#2 = phi(xn12AC,xn12CD)
      field _t12C5#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt12A6,mesh12A7,mesh12A7);
      field _t12C7#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos12A5,_t12C5);
      field _t12C9#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A12BA,_t12C7);
      tensor[2] delta12CB#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t12C9,xn12C3);
      tensor[2] xn12CD#5 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn12C3,delta12CB);
      real _t12CF#1 = 0.1e-7;
      real _t12D1#1 = 0.1e-7;
      real _t12D3#1 = λ(T0[],T1[])<(T0 * T1)> (_t12CF,_t12D1);
      real _t12D5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta12CB,delta12CB);
      bool _t12D7#1 = GTE<real>(_t12D3,_t12D5);
      if _t12D7 then goto ASSIGN12DB else goto JOIN12D9
    ASSIGN12DB:  preds = [COND1312]
      real _t12DA#1 = 0.1e1;
      real _t12DC#1 = 0.1e-8;
      real _t12DE#1 = λ(T0[],T1[])<(T0 + T1)> (_t12DA,_t12DC);
      real _t12E0#1 = 0.1e1;
      real _t12E2#1 = 0.1e1;
      tensor[2] _t12E4#1 = <tensor[2]>[_t12E0,_t12E2];
      real _t12E6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t12E4,xn12CD);
      bool _t12E8#1 = GT<real>(_t12DE,_t12E6);
      real _t12EA#1 = 0.1e-8;
      real _t12EC#1 = 0.1e-8;
      tensor[2] _t12EE#1 = <tensor[2]>[_t12EA,_t12EC];
      tensor[2] _t12F0#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t12EE,xn12CD);
      real _t12F2#1 = TensorIndex<tensor[2],[0]>(_t12F0);
      real _t12F4#1 = -0.e0;
      bool _t12F6#1 = GT<real>(_t12F2,_t12F4);
      real _t12F8#1 = 0.1e-8;
      real _t12FA#1 = 0.1e-8;
      tensor[2] _t12FC#1 = <tensor[2]>[_t12F8,_t12FA];
      tensor[2] _t12FE#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t12FC,xn12CD);
      real _t1300#1 = TensorIndex<tensor[2],[1]>(_t12FE);
      real _t1302#1 = -0.e0;
      bool _t1304#1 = GT<real>(_t1300,_t1302);
      bool _t1306#1 = BAnd(_t12F6,_t1304);
      bool _t1308#1 = BAnd(_t12E8,_t1306);
      if _t1308 then goto ASSIGN130C else goto ASSIGN130F
    ASSIGN130C:  preds = [COND1311]
      femData:MeshPos _t130B#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh12A7,cellInt12A6,xn12CD,pos12A5);
      return _t130B
      goto JOIN130A
    JOIN130A:  preds = [*RETURN(_t130B)130D,*RETURN(_t130E)1310]
      goto JOIN12D9
    JOIN12D9:  preds = [*JOIN130A,COND1312]
      goto FOREACH12C4
    ASSIGN130F:  preds = [COND1311]
      femData:MeshPos _t130E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t130E
      goto JOIN130A
    ASSIGN1315:  preds = [FOREACH12C4]
      femData:MeshPos _t1314#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t1314
}
  function int[2] nextCell4132A (int faceIdx1319#1, int cell131A#1, femData:Mesh mesh131B#1) {
    ENTRY1329:  preds = []
      int _t131C#1 = 6;
      int _t131E#1 = IMul(cell131A,_t131C);
      int _t1320#1 = 2;
      int _t1322#1 = IMul(faceIdx1319,_t1320);
      int _t1324#1 = IAdd(_t131E,_t1322);
      int[2] _t1326#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh131B,_t1324);
      return _t1326
}
## input initialization
  ENTRY129A:  preds = []
    real isoval1249#1 = 0.2e0;
    globals.isoval1236 = isoval1249;
    real thick124C#1 = 0.7e-1;
    globals.thick1237 = thick124C;
    real _t124F#1 = 0.3e1;
    real _t1251#1 = -0.3e1;
    real _t1253#1 = 0.3e1;
    tensor[3] camEye1255#1 = <tensor[3]>[_t124F,_t1251,_t1253];
    globals.camEye1238 = camEye1255;
    real _t1258#1 = 0.5e0;
    real _t125A#1 = 0.5e0;
    real _t125C#1 = 0.5e0;
    tensor[3] camAt125E#1 = <tensor[3]>[_t1258,_t125A,_t125C];
    globals.camAt1239 = camAt125E;
    real _t1261#1 = 0.e0;
    real _t1263#1 = 0.e0;
    real _t1265#1 = 0.1e1;
    tensor[3] camUp1267#1 = <tensor[3]>[_t1261,_t1263,_t1265];
    globals.camUp123A = camUp1267;
    real camFOV126A#1 = 0.137e2;
    globals.camFOV123B = camFOV126A;
    int iresU126D#1 = 10;
    globals.iresU123C = iresU126D;
    int iresV1270#1 = 10;
    globals.iresV123D = iresV1270;
    real camNear1273#1 = -0.2e1;
    globals.camNear123E = camNear1273;
    real camFar1276#1 = 0.5e1;
    globals.camFar123F = camFar1276;
    real refStep1279#1 = 0.1e1;
    globals.refStep1240 = refStep1279;
    real rayStep127C#1 = 0.1e-1;
    globals.rayStep1241 = rayStep127C;
    real _t127F#1 = 0.e0;
    real _t1281#1 = 0.e0;
    real _t1283#1 = 0.1e1;
    tensor[3] lightVsp1285#1 = <tensor[3]>[_t127F,_t1281,_t1283];
    globals.lightVsp1242 = lightVsp1285;
    real phongKa1288#1 = 0.1e0;
    globals.phongKa1243 = phongKa1288;
    real phongKd128B#1 = 0.9e0;
    globals.phongKd1244 = phongKd128B;
    bool debug128E#1 = false;
    globals.debug1245 = debug128E;
    int debugU1291#1 = 8;
    globals.debugU1246 = debugU1291;
    int debugV1294#1 = 2;
    globals.debugV1247 = debugV1294;
    real eps1297#1 = 0.1e-7;
    globals.eps1248 = eps1297;
    return
## global-variable initialization
  ENTRY1382:  preds = []
    femData:Mesh a1333#2 = globals.a1235;
    tensor[3] camEye1332#2 = globals.camEye1238;
    tensor[3] camAt1331#2 = globals.camAt1239;
    tensor[3] camUp1330#1 = globals.camUp123A;
    real camFOV132F#1 = globals.camFOV123B;
    int iresU132E#1 = globals.iresU123C;
    int iresV132D#1 = globals.iresV123D;
    real camNear132C#1 = globals.camNear123E;
    real camFar132B#1 = globals.camFar123F;
    int _t133D#1 = 0;
    int _t133F#1 = 1;
    int _t1341#1 = ExtractFemItem<int,NumCell(Mesh)>(a1333);
    int _t1343#1 = ISub(_t1341,_t133F);
    int[] _t1345#1 = Range(_t133D,_t1343);
    femData:MeshCell[] _t1347#1 = <femData:MeshCell[]>{};
  FOREACH134B:  preds = [ASSIGN1348,NEXT1350]
    foreach (_t1349 in _t1345) on exit goto ASSIGN1352
      femData:MeshCell[] _t134A#2 = phi(_t1347,_t134E)
    femData:MeshCell _t134C#1 = LoadFem<femData:MeshCell>(a1333,_t1349);
    femData:MeshCell[] _t134E#1 = Append<femData:MeshCell>(_t134A,_t134C);
    goto FOREACH134B
  ASSIGN1352:  preds = [FOREACH134B]
    femData:MeshCell[] 0cell_a1351#1 = _t134A;
    globals.0cell_a129C = 0cell_a1351;
    tensor[3] _t1354#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1331,camEye1332);
    real camDist1356#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1354);
    globals.camDist129D = camDist1356;
    real camNearVsp1359#1 = λ(T0[],T1[])<(T0 + T1)> (camNear132C,camDist1356);
    globals.camNearVsp129E = camNearVsp1359;
    real camFarVsp135C#1 = λ(T0[],T1[])<(T0 + T1)> (camFar132B,camDist1356);
    globals.camFarVsp129F = camFarVsp135C;
    tensor[3] _t135F#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1331,camEye1332);
    tensor[3] camN1361#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t135F,_t135F);
    globals.camN12A0 = camN1361;
    tensor[3] _t1364#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN1361,camUp1330);
    tensor[3] camU1366#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1364,_t1364);
    globals.camU12A1 = camU1366;
    tensor[3] camV1369#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1366,camN1361);
    globals.camV12A2 = camV1369;
    real _t136C#1 = 0.314159265358979323846264338327950288e1;
    real _t136E#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV132F,_t136C);
    real _t1370#1 = 0.36e3;
    real _t1372#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t136E,_t1370);
    real _t1374#1 = λ(T0[])<Tangent(T0)> (_t1372);
    real camVmax1376#2 = λ(T0[],T1[])<(T0 * T1)> (_t1374,camDist1356);
    globals.camVmax12A3 = camVmax1376;
    real _t1379#1 = IntToReal(iresU132E);
    real _t137B#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1376,_t1379);
    real _t137D#1 = IntToReal(iresV132D);
    real camUmax137F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t137B,_t137D);
    globals.camUmax12A4 = camUmax137F;
    return
## strand
  strand ray (int ui13A1#2, int vi13A2#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY1471:  preds = []
        femData:Mesh a13C9#1 = globals.a1235;
        femData:MeshCell[] 0cell_a13C8#1 = globals.0cell_a129C;
        tensor[3] camEye13C7#1 = globals.camEye1238;
        int iresU13C6#1 = globals.iresU123C;
        int iresV13C5#1 = globals.iresV123D;
        real camNearVsp13C4#1 = globals.camNearVsp129E;
        real camFarVsp13C3#1 = globals.camFarVsp129F;
        tensor[3] camN13C2#1 = globals.camN12A0;
        tensor[3] camU13C1#1 = globals.camU12A1;
        tensor[3] camV13C0#1 = globals.camV12A2;
        real camVmax13BF#2 = globals.camVmax12A3;
        real camUmax13BE#2 = globals.camUmax12A4;
        real _t13F1#1 = λ(T0[])<Neg(T0)> (camUmax13BE);
        real _t13F3#1 = -0.5e0;
        real _t13F5#1 = IntToReal(ui13A1);
        real _t13F7#1 = IntToReal(iresU13C6);
        real _t13F9#1 = 0.5e0;
        real _t13FB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t13F7,_t13F9);
        real rayU13FD#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13F1,camUmax13BE,_t13F3,_t13F5,_t13FB);
        real _t13FF#1 = λ(T0[])<Neg(T0)> (camVmax13BF);
        real _t1401#1 = -0.5e0;
        real _t1403#1 = IntToReal(vi13A2);
        real _t1405#1 = IntToReal(iresV13C5);
        real _t1407#1 = 0.5e0;
        real _t1409#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1405,_t1407);
        real rayV140B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13FF,camVmax13BF,_t1401,_t1403,_t1409);
        tensor[3] _t140D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU13FD,camU13C1);
        tensor[3] _t140F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV140B,camV13C0);
        tensor[3] UV1411#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t140D,_t140F);
        tensor[3] rayOrig1413#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye13C7,UV1411);
        real _t1415#1 = 0.e0;
        real _t1417#1 = 0.e0;
        real _t1419#1 = 0.e0;
        tensor[3] _t141B#1 = <tensor[3]>[_t1415,_t1417,_t1419];
        tensor[3] rayVec141D#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN13C2,_t141B);
        real camNearVsp141F#2 = camNearVsp13C4;
        real camFarVsp1421#2 = camFarVsp13C3;
        tensor[3] _t1423#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp141F,rayVec141D);
        tensor[3] rayStart1425#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1413,_t1423);
        real _t1427#1 = TensorIndex<tensor[3],[0]>(rayStart1425);
        real _t1429#1 = TensorIndex<tensor[3],[1]>(rayStart1425);
        tensor[2] rayStartProj142B#1 = <tensor[2]>[_t1427,_t1429];
        tensor[3] _t142D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp1421,rayVec141D);
        tensor[3] rayEnd142F#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1413,_t142D);
        tensor[3] dpos1431#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (rayEnd142F,rayStart1425);
        real _t1433#1 = TensorIndex<tensor[3],[0]>(dpos1431);
        real _t1435#1 = TensorIndex<tensor[3],[1]>(dpos1431);
        tensor[2] dposProj1437#1 = <tensor[2]>[_t1433,_t1435];
        femData:MeshPos[0] _t1439#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t143B#1 = MkDynamic<femData:MeshPos,0>(_t1439);
        femData:MeshPos[] poses143D#1 = _t143B;
        real[0] _t143F#1 = <real[0]>{};
        real[] _t1441#1 = MkDynamic<real,0>(_t143F);
        real[] normalizedTimes1443#1 = _t1441;
        int cellIntersects1445#1 = 0;
        tensor[2][0] _t1447#1 = <tensor[2][0]>{};
        tensor[2][] _t1449#1 = MkDynamic<tensor[2],0>(_t1447);
        tensor[2][] rayCellInter144B#1 = _t1449;
        tensor[3][0] _t144D#1 = <tensor[3][0]>{};
        tensor[3][] _t144F#1 = MkDynamic<tensor[3],0>(_t144D);
        tensor[3][] spaceInter1451#1 = _t144F;
        tensor[2][0] _t1453#1 = <tensor[2][0]>{};
        tensor[2][] _t1455#1 = MkDynamic<tensor[2],0>(_t1453);
        tensor[2][] refSpaceInter1457#1 = _t1455;
        femData:MeshCell[0] _t1459#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t145B#1 = MkDynamic<femData:MeshCell,0>(_t1459);
        femData:MeshCell[] cellInter145D#1 = _t145B;
        int currentCellInt145F#1 = -1;
        real rayN1461#1 = 0.e0;
        int _t1463#1 = 0;
        femData:MeshCell currentCell1465#1 = Subscript<femData:MeshCell[]>(0cell_a13C8,_t1463);
        int steps1467#1 = 0;
        femData:MeshPos pos1469#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a13C9);
        bool startsInside146B#1 = false;
        int ui146D#1 = ui13A1;
        int vi146F#1 = vi13A2;
        self.rayU = rayU13FD;
        self.rayV = rayV140B;
        self.UV = UV1411;
        self.rayOrig = rayOrig1413;
        self.rayVec = rayVec141D;
        self.camNearVsp = camNearVsp141F;
        self.camFarVsp = camFarVsp1421;
        self.rayStart = rayStart1425;
        self.rayStartProj = rayStartProj142B;
        self.rayEnd = rayEnd142F;
        self.dpos = dpos1431;
        self.dposProj = dposProj1437;
        self.poses = poses143D;
        self.normalizedTimes = normalizedTimes1443;
        self.cellIntersects = cellIntersects1445;
        self.rayCellInter = rayCellInter144B;
        self.spaceInter = spaceInter1451;
        self.refSpaceInter = refSpaceInter1457;
        self.cellInter = cellInter145D;
        self.currentCellInt = currentCellInt145F;
        self.rayN = rayN1461;
        self.currentCell = currentCell1465;
        self.steps = steps1467;
        self.pos = pos1469;
        self.startsInside = startsInside146B;
        self.ui = ui146D;
        self.vi = vi146F;
        return
    end state init
    method start
        ENTRY232B:  preds = []
          femData:MeshCell[] 0cell_a1491#1 = globals.0cell_a129C;
          bool debug1490#1 = globals.debug1245;
          int debugU148F#1 = globals.debugU1246;
          int debugV148E#1 = globals.debugV1247;
          real rayU1496#0 = self.rayU;
          real rayV1497#0 = self.rayV;
          tensor[3] UV1498#0 = self.UV;
          tensor[3] rayOrig1499#2 = self.rayOrig;
          tensor[3] rayVec149A#1 = self.rayVec;
          real camNearVsp149B#4 = self.camNearVsp;
          real camFarVsp149C#3 = self.camFarVsp;
          tensor[3] rayStart149D#0 = self.rayStart;
          tensor[2] rayStartProj149E#8 = self.rayStartProj;
          tensor[3] rayEnd149F#0 = self.rayEnd;
          tensor[3] dpos14A0#0 = self.dpos;
          tensor[2] dposProj14A1#6 = self.dposProj;
          femData:MeshPos[] poses14A2#2 = self.poses;
          real[] normalizedTimes14A3#2 = self.normalizedTimes;
          int cellIntersects14A4#2 = self.cellIntersects;
          tensor[2][] rayCellInter14A5#3 = self.rayCellInter;
          tensor[3][] spaceInter14A6#3 = self.spaceInter;
          tensor[2][] refSpaceInter14A7#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter14A8#2 = self.cellInter;
          int currentCellInt14A9#2 = self.currentCellInt;
          real rayN14AA#2 = self.rayN;
          femData:MeshCell currentCell14AB#2 = self.currentCell;
          int steps14AC#3 = self.steps;
          femData:MeshPos pos14AD#2 = self.pos;
          bool startsInside14AE#3 = self.startsInside;
          int ui14AF#2 = self.ui;
          int vi14B0#2 = self.vi;
          real startTime14CC#1 = camFarVsp149C;
          bool _t14CF#1 = NEQ<int>(ui14AF,debugU148F);
          if _t14CF then goto ASSIGN14D4 else goto ASSIGN14D6
        ASSIGN14D4:  preds = [COND14D7]
          bool _t14D2#1 = true;
          goto JOIN14D1
        JOIN14D1:  preds = [ASSIGN14D4,ASSIGN14D6]
          bool _t14D3#1 = phi(_t14D2,_t14D5)
          if _t14D3 then goto COND14E8 else goto JOIN14D8
        COND14E8:  preds = [COND14E9]
          if debug1490 then goto SAVE14DB else goto JOIN14D9
        SAVE14DB:  preds = [COND14E8]
          self.poses = poses14A2;
          self.normalizedTimes = normalizedTimes14A3;
          self.cellIntersects = cellIntersects14A4;
          self.rayCellInter = rayCellInter14A5;
          self.spaceInter = spaceInter14A6;
          self.refSpaceInter = refSpaceInter14A7;
          self.cellInter = cellInter14A8;
          self.currentCellInt = currentCellInt14A9;
          self.rayN = rayN14AA;
          self.currentCell = currentCell14AB;
          self.steps = steps14AC;
          self.pos = pos14AD;
          self.startsInside = startsInside14AE;
          stabilize
          goto JOIN14D9
        JOIN14D9:  preds = [*STABILIZE14DA,COND14E8]
          goto JOIN14D8
        JOIN14D8:  preds = [JOIN14D9,COND14E9]
        FOREACH14F0:  preds = [JOIN14D8,NEXT22C5]
          foreach (c14EA in 0cell_a1491) on exit goto ASSIGN22C7
            real startTime14EF#3 = phi(startTime14CC,startTime1519)
            bool startsInside22C4#2 = phi(startsInside14AE,startsInside1524)
            int currentCellInt14EE#6 = phi(currentCellInt14A9,currentCellInt151C)
            int cellIntersects14ED#8 = phi(cellIntersects14A4,cellIntersects1521)
            real[] normalizedTimes14EC#7 = phi(normalizedTimes14A3,normalizedTimes1516)
            femData:MeshPos[] poses14EB#7 = phi(poses14A2,poses1513)
          string _t14F1#1 = "Cell:";
          string _t14F3#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t14F1,c14EA,_t14F3);
          int _t14F6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t14F8#1 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:MeshPos _t14FA#1 = _msh_newtonInverse1318 (rayStartProj149E,_t14F6,_t14F8);
          bool _t14FC#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t14FA);
          if _t14FC then goto ASSIGN1500 else goto ASSIGN1527
        ASSIGN1500:  preds = [COND22C3]
          string _t14FF#1 = "pos starts inside\n";
          Print<[string]>(_t14FF);
          femData:Mesh _t1502#1 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1504#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t1506#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1508#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t150A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t150C#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(1318, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t150A,_t1506,_t1506);
          tensor[2] _t150E#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t150C,rayStartProj149E);
          femData:MeshPos p1510#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t1502,_t1504,_t150E);
          femData:MeshPos[] poses1512#1 = Append<femData:MeshPos>(poses14EB,p1510);
          real[] normalizedTimes1515#1 = Append<real>(normalizedTimes14EC,camNearVsp149B);
          real startTime1518#1 = camNearVsp149B;
          int currentCellInt151B#1 = cellIntersects14ED;
          int _t151E#1 = 1;
          int cellIntersects1520#1 = IAdd(cellIntersects14ED,_t151E);
          bool startsInside1523#1 = true;
          goto JOIN14FE
        JOIN14FE:  preds = [ASSIGN1525,JOIN1876]
          real startTime1519#1 = phi(startTime1518,startTime22BC)
          bool startsInside1524#1 = phi(startsInside1523,startsInside14AE)
          int currentCellInt151C#1 = phi(currentCellInt151B,currentCellInt22BB)
          int cellIntersects1521#1 = phi(cellIntersects1520,cellIntersects22C0)
          real[] normalizedTimes1516#1 = phi(normalizedTimes1515,normalizedTimes22AC)
          femData:MeshPos[] poses1513#1 = phi(poses1512,poses22AF)
          goto FOREACH14F0
        ASSIGN1527:  preds = [COND22C3]
          femData:Mesh _t1526#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1528#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t152A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t152C#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t152A,_t1526,_t1526);
          field _t152E#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t152C);
          real _t1530#1 = -0.e0;
          real _t1532#1 = -0.e0;
          tensor[2] _t1534#1 = <tensor[2]>[_t1530,_t1532];
          tensor[2,2] _t1536#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t152E,_t1534);
          tensor[2,2] _t1538#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1536);
          femData:Mesh _t153A#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t153C#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t153E#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1540#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t153E,_t153A,_t153A);
          real _t1542#1 = -0.e0;
          real _t1544#1 = -0.e0;
          tensor[2] _t1546#1 = <tensor[2]>[_t1542,_t1544];
          tensor[2] _t1548#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t1540,_t1546);
          tensor[2] _t154A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t1548);
          tensor[2] _t154C#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1538,_t154A);
          femData:Mesh _t154E#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1550#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1552#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1554#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1552,_t154E,_t154E);
          field _t1556#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1554);
          real _t1558#1 = -0.e0;
          real _t155A#1 = -0.e0;
          tensor[2] _t155C#1 = <tensor[2]>[_t1558,_t155A];
          tensor[2,2] _t155E#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1556,_t155C);
          tensor[2,2] _t1560#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t155E);
          tensor[2] _t1562#30 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1560,dposProj14A1);
          real time1565#3 = +inf;
          int face1567#2 = -1;
          real _t1569#1 = 0.1e1;
          real _t156B#1 = 0.e0;
          tensor[2] _t156D#1 = <tensor[2]>[_t1569,_t156B];
          tensor[2] _t156F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t156D,_t154C);
          real _t1571#1 = -0.1e1;
          real _t1573#1 = 0.1e1;
          tensor[2] _t1575#1 = <tensor[2]>[_t1571,_t1573];
          real _t1577#1 = -0.1e1;
          real _t1579#1 = 0.1e1;
          tensor[2] _t157B#1 = <tensor[2]>[_t1577,_t1579];
          real _t157D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t157B);
          tensor[2] _t157F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1575,_t157D);
          real _t1581#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t156F,_t157F);
          real _t1583#1 = -0.1e-15;
          bool _t1585#1 = GTE<real>(_t1581,_t1583);
          real _t1587#1 = 0.1e1;
          real _t1589#1 = 0.e0;
          tensor[2] _t158B#1 = <tensor[2]>[_t1587,_t1589];
          tensor[2] _t158D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t158B,_t154C);
          real _t158F#1 = -0.1e1;
          real _t1591#1 = 0.1e1;
          tensor[2] _t1593#1 = <tensor[2]>[_t158F,_t1591];
          real _t1595#1 = -0.1e1;
          real _t1597#1 = 0.1e1;
          tensor[2] _t1599#1 = <tensor[2]>[_t1595,_t1597];
          real _t159B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1599);
          tensor[2] _t159D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1593,_t159B);
          real _t159F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t158D,_t159D);
          bool _t15A1#1 = GT<real>(time1565,_t159F);
          real _t15A3#1 = -0.1e1;
          real _t15A5#1 = 0.1e1;
          tensor[2] _t15A7#1 = <tensor[2]>[_t15A3,_t15A5];
          real _t15A9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t15A7);
          real _t15AB#1 = λ(T0[])<Abs(T0)> (_t15A9);
          real _t15AD#1 = 0.1e-20;
          bool _t15AF#1 = GTE<real>(_t15AB,_t15AD);
          bool _t15B1#1 = BAnd(_t15A1,_t15AF);
          bool _t15B3#1 = BAnd(_t1585,_t15B1);
          if _t15B3 then goto ASSIGN15B7 else goto JOIN15B5
        ASSIGN15B7:  preds = [COND1662]
          real _t15B6#1 = 0.1e1;
          real _t15B8#1 = 0.1e-8;
          real _t15BA#1 = λ(T0[],T1[])<(T0 + T1)> (_t15B6,_t15B8);
          real _t15BC#1 = 0.1e1;
          real _t15BE#1 = 0.1e1;
          tensor[2] _t15C0#1 = <tensor[2]>[_t15BC,_t15BE];
          real _t15C2#1 = 0.1e1;
          real _t15C4#1 = 0.e0;
          tensor[2] _t15C6#1 = <tensor[2]>[_t15C2,_t15C4];
          tensor[2] _t15C8#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t15C6,_t154C);
          real _t15CA#1 = -0.1e1;
          real _t15CC#1 = 0.1e1;
          tensor[2] _t15CE#1 = <tensor[2]>[_t15CA,_t15CC];
          real _t15D0#1 = -0.1e1;
          real _t15D2#1 = 0.1e1;
          tensor[2] _t15D4#1 = <tensor[2]>[_t15D0,_t15D2];
          real _t15D6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t15D4);
          tensor[2] _t15D8#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t15CE,_t15D6);
          real _t15DA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t15C8,_t15D8);
          tensor[2] _t15DC#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t15DA,_t1562);
          tensor[2] _t15DE#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t15DC);
          real _t15E0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t15C0,_t15DE);
          bool _t15E2#1 = GT<real>(_t15BA,_t15E0);
          real _t15E4#1 = 0.1e-8;
          real _t15E6#1 = 0.1e-8;
          tensor[2] _t15E8#1 = <tensor[2]>[_t15E4,_t15E6];
          real _t15EA#1 = 0.1e1;
          real _t15EC#1 = 0.e0;
          tensor[2] _t15EE#1 = <tensor[2]>[_t15EA,_t15EC];
          tensor[2] _t15F0#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t15EE,_t154C);
          real _t15F2#1 = -0.1e1;
          real _t15F4#1 = 0.1e1;
          tensor[2] _t15F6#1 = <tensor[2]>[_t15F2,_t15F4];
          real _t15F8#1 = -0.1e1;
          real _t15FA#1 = 0.1e1;
          tensor[2] _t15FC#1 = <tensor[2]>[_t15F8,_t15FA];
          real _t15FE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t15FC);
          tensor[2] _t1600#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t15F6,_t15FE);
          real _t1602#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t15F0,_t1600);
          tensor[2] _t1604#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1602,_t1562);
          tensor[2] _t1606#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1604);
          tensor[2] _t1608#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t15E8,_t1606);
          real _t160A#1 = TensorIndex<tensor[2],[0]>(_t1608);
          real _t160C#1 = -0.e0;
          bool _t160E#1 = GT<real>(_t160A,_t160C);
          real _t1610#1 = 0.1e-8;
          real _t1612#1 = 0.1e-8;
          tensor[2] _t1614#1 = <tensor[2]>[_t1610,_t1612];
          real _t1616#1 = 0.1e1;
          real _t1618#1 = 0.e0;
          tensor[2] _t161A#1 = <tensor[2]>[_t1616,_t1618];
          tensor[2] _t161C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t161A,_t154C);
          real _t161E#1 = -0.1e1;
          real _t1620#1 = 0.1e1;
          tensor[2] _t1622#1 = <tensor[2]>[_t161E,_t1620];
          real _t1624#1 = -0.1e1;
          real _t1626#1 = 0.1e1;
          tensor[2] _t1628#1 = <tensor[2]>[_t1624,_t1626];
          real _t162A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1628);
          tensor[2] _t162C#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1622,_t162A);
          real _t162E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t161C,_t162C);
          tensor[2] _t1630#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t162E,_t1562);
          tensor[2] _t1632#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1630);
          tensor[2] _t1634#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1614,_t1632);
          real _t1636#1 = TensorIndex<tensor[2],[1]>(_t1634);
          real _t1638#1 = -0.e0;
          bool _t163A#1 = GT<real>(_t1636,_t1638);
          bool _t163C#1 = BAnd(_t160E,_t163A);
          bool _t163E#1 = BAnd(_t15E2,_t163C);
          if _t163E then goto ASSIGN1642 else goto JOIN1640
        ASSIGN1642:  preds = [COND165F]
          real _t1641#1 = 0.1e1;
          real _t1643#1 = 0.e0;
          tensor[2] _t1645#1 = <tensor[2]>[_t1641,_t1643];
          tensor[2] _t1647#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1645,_t154C);
          real _t1649#1 = -0.1e1;
          real _t164B#1 = 0.1e1;
          tensor[2] _t164D#1 = <tensor[2]>[_t1649,_t164B];
          real _t164F#1 = -0.1e1;
          real _t1651#1 = 0.1e1;
          tensor[2] _t1653#1 = <tensor[2]>[_t164F,_t1651];
          real _t1655#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1653);
          tensor[2] _t1657#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t164D,_t1655);
          real time1659#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1647,_t1657);
          int face165C#1 = 0;
          goto JOIN1640
        JOIN1640:  preds = [ASSIGN165E,COND165F]
          int face165D#1 = phi(face165C,face1567)
          real time165A#1 = phi(time1659,time1565)
          goto JOIN15B5
        JOIN15B5:  preds = [JOIN1640,COND1662]
          int face1661#2 = phi(face165D,face1567)
          real time1660#3 = phi(time165A,time1565)
          real _t1663#1 = 0.e0;
          real _t1665#1 = 0.e0;
          tensor[2] _t1667#1 = <tensor[2]>[_t1663,_t1665];
          tensor[2] _t1669#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1667,_t154C);
          real _t166B#1 = 0.e0;
          real _t166D#1 = 0.1e1;
          tensor[2] _t166F#1 = <tensor[2]>[_t166B,_t166D];
          real _t1671#1 = 0.e0;
          real _t1673#1 = 0.1e1;
          tensor[2] _t1675#1 = <tensor[2]>[_t1671,_t1673];
          real _t1677#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1675);
          tensor[2] _t1679#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t166F,_t1677);
          real _t167B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1669,_t1679);
          real _t167D#1 = -0.1e-15;
          bool _t167F#1 = GTE<real>(_t167B,_t167D);
          real _t1681#1 = 0.e0;
          real _t1683#1 = 0.e0;
          tensor[2] _t1685#1 = <tensor[2]>[_t1681,_t1683];
          tensor[2] _t1687#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1685,_t154C);
          real _t1689#1 = 0.e0;
          real _t168B#1 = 0.1e1;
          tensor[2] _t168D#1 = <tensor[2]>[_t1689,_t168B];
          real _t168F#1 = 0.e0;
          real _t1691#1 = 0.1e1;
          tensor[2] _t1693#1 = <tensor[2]>[_t168F,_t1691];
          real _t1695#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1693);
          tensor[2] _t1697#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t168D,_t1695);
          real _t1699#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1687,_t1697);
          bool _t169B#1 = GT<real>(time1660,_t1699);
          real _t169D#1 = 0.e0;
          real _t169F#1 = 0.1e1;
          tensor[2] _t16A1#1 = <tensor[2]>[_t169D,_t169F];
          real _t16A3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t16A1);
          real _t16A5#1 = λ(T0[])<Abs(T0)> (_t16A3);
          real _t16A7#1 = 0.1e-20;
          bool _t16A9#1 = GTE<real>(_t16A5,_t16A7);
          bool _t16AB#1 = BAnd(_t169B,_t16A9);
          bool _t16AD#1 = BAnd(_t167F,_t16AB);
          if _t16AD then goto ASSIGN16B1 else goto JOIN16AF
        ASSIGN16B1:  preds = [COND175C]
          real _t16B0#1 = 0.1e1;
          real _t16B2#1 = 0.1e-8;
          real _t16B4#1 = λ(T0[],T1[])<(T0 + T1)> (_t16B0,_t16B2);
          real _t16B6#1 = 0.1e1;
          real _t16B8#1 = 0.1e1;
          tensor[2] _t16BA#1 = <tensor[2]>[_t16B6,_t16B8];
          real _t16BC#1 = 0.e0;
          real _t16BE#1 = 0.e0;
          tensor[2] _t16C0#1 = <tensor[2]>[_t16BC,_t16BE];
          tensor[2] _t16C2#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t16C0,_t154C);
          real _t16C4#1 = 0.e0;
          real _t16C6#1 = 0.1e1;
          tensor[2] _t16C8#1 = <tensor[2]>[_t16C4,_t16C6];
          real _t16CA#1 = 0.e0;
          real _t16CC#1 = 0.1e1;
          tensor[2] _t16CE#1 = <tensor[2]>[_t16CA,_t16CC];
          real _t16D0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t16CE);
          tensor[2] _t16D2#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t16C8,_t16D0);
          real _t16D4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t16C2,_t16D2);
          tensor[2] _t16D6#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t16D4,_t1562);
          tensor[2] _t16D8#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t16D6);
          real _t16DA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t16BA,_t16D8);
          bool _t16DC#1 = GT<real>(_t16B4,_t16DA);
          real _t16DE#1 = 0.1e-8;
          real _t16E0#1 = 0.1e-8;
          tensor[2] _t16E2#1 = <tensor[2]>[_t16DE,_t16E0];
          real _t16E4#1 = 0.e0;
          real _t16E6#1 = 0.e0;
          tensor[2] _t16E8#1 = <tensor[2]>[_t16E4,_t16E6];
          tensor[2] _t16EA#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t16E8,_t154C);
          real _t16EC#1 = 0.e0;
          real _t16EE#1 = 0.1e1;
          tensor[2] _t16F0#1 = <tensor[2]>[_t16EC,_t16EE];
          real _t16F2#1 = 0.e0;
          real _t16F4#1 = 0.1e1;
          tensor[2] _t16F6#1 = <tensor[2]>[_t16F2,_t16F4];
          real _t16F8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t16F6);
          tensor[2] _t16FA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t16F0,_t16F8);
          real _t16FC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t16EA,_t16FA);
          tensor[2] _t16FE#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t16FC,_t1562);
          tensor[2] _t1700#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t16FE);
          tensor[2] _t1702#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t16E2,_t1700);
          real _t1704#1 = TensorIndex<tensor[2],[0]>(_t1702);
          real _t1706#1 = -0.e0;
          bool _t1708#1 = GT<real>(_t1704,_t1706);
          real _t170A#1 = 0.1e-8;
          real _t170C#1 = 0.1e-8;
          tensor[2] _t170E#1 = <tensor[2]>[_t170A,_t170C];
          real _t1710#1 = 0.e0;
          real _t1712#1 = 0.e0;
          tensor[2] _t1714#1 = <tensor[2]>[_t1710,_t1712];
          tensor[2] _t1716#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1714,_t154C);
          real _t1718#1 = 0.e0;
          real _t171A#1 = 0.1e1;
          tensor[2] _t171C#1 = <tensor[2]>[_t1718,_t171A];
          real _t171E#1 = 0.e0;
          real _t1720#1 = 0.1e1;
          tensor[2] _t1722#1 = <tensor[2]>[_t171E,_t1720];
          real _t1724#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1722);
          tensor[2] _t1726#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t171C,_t1724);
          real _t1728#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1716,_t1726);
          tensor[2] _t172A#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1728,_t1562);
          tensor[2] _t172C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t172A);
          tensor[2] _t172E#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t170E,_t172C);
          real _t1730#1 = TensorIndex<tensor[2],[1]>(_t172E);
          real _t1732#1 = -0.e0;
          bool _t1734#1 = GT<real>(_t1730,_t1732);
          bool _t1736#1 = BAnd(_t1708,_t1734);
          bool _t1738#1 = BAnd(_t16DC,_t1736);
          if _t1738 then goto ASSIGN173C else goto JOIN173A
        ASSIGN173C:  preds = [COND1759]
          real _t173B#1 = 0.e0;
          real _t173D#1 = 0.e0;
          tensor[2] _t173F#1 = <tensor[2]>[_t173B,_t173D];
          tensor[2] _t1741#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t173F,_t154C);
          real _t1743#1 = 0.e0;
          real _t1745#1 = 0.1e1;
          tensor[2] _t1747#1 = <tensor[2]>[_t1743,_t1745];
          real _t1749#1 = 0.e0;
          real _t174B#1 = 0.1e1;
          tensor[2] _t174D#1 = <tensor[2]>[_t1749,_t174B];
          real _t174F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t174D);
          tensor[2] _t1751#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1747,_t174F);
          real time1753#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1741,_t1751);
          int face1756#1 = 1;
          goto JOIN173A
        JOIN173A:  preds = [ASSIGN1758,COND1759]
          int face1757#1 = phi(face1756,face1661)
          real time1754#1 = phi(time1753,time1660)
          goto JOIN16AF
        JOIN16AF:  preds = [JOIN173A,COND175C]
          int face175B#2 = phi(face1757,face1661)
          real time175A#3 = phi(time1754,time1660)
          real _t175D#1 = 0.e0;
          real _t175F#1 = 0.e0;
          tensor[2] _t1761#1 = <tensor[2]>[_t175D,_t175F];
          tensor[2] _t1763#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1761,_t154C);
          real _t1765#1 = 0.1e1;
          real _t1767#1 = 0.e0;
          tensor[2] _t1769#1 = <tensor[2]>[_t1765,_t1767];
          real _t176B#1 = 0.1e1;
          real _t176D#1 = 0.e0;
          tensor[2] _t176F#1 = <tensor[2]>[_t176B,_t176D];
          real _t1771#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t176F);
          tensor[2] _t1773#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1769,_t1771);
          real _t1775#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1763,_t1773);
          real _t1777#1 = -0.1e-15;
          bool _t1779#1 = GTE<real>(_t1775,_t1777);
          real _t177B#1 = 0.e0;
          real _t177D#1 = 0.e0;
          tensor[2] _t177F#1 = <tensor[2]>[_t177B,_t177D];
          tensor[2] _t1781#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t177F,_t154C);
          real _t1783#1 = 0.1e1;
          real _t1785#1 = 0.e0;
          tensor[2] _t1787#1 = <tensor[2]>[_t1783,_t1785];
          real _t1789#1 = 0.1e1;
          real _t178B#1 = 0.e0;
          tensor[2] _t178D#1 = <tensor[2]>[_t1789,_t178B];
          real _t178F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t178D);
          tensor[2] _t1791#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1787,_t178F);
          real _t1793#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1781,_t1791);
          bool _t1795#1 = GT<real>(time175A,_t1793);
          real _t1797#1 = 0.1e1;
          real _t1799#1 = 0.e0;
          tensor[2] _t179B#1 = <tensor[2]>[_t1797,_t1799];
          real _t179D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t179B);
          real _t179F#1 = λ(T0[])<Abs(T0)> (_t179D);
          real _t17A1#1 = 0.1e-20;
          bool _t17A3#1 = GTE<real>(_t179F,_t17A1);
          bool _t17A5#1 = BAnd(_t1795,_t17A3);
          bool _t17A7#1 = BAnd(_t1779,_t17A5);
          if _t17A7 then goto ASSIGN17AB else goto JOIN17A9
        ASSIGN17AB:  preds = [COND1856]
          real _t17AA#1 = 0.1e1;
          real _t17AC#1 = 0.1e-8;
          real _t17AE#1 = λ(T0[],T1[])<(T0 + T1)> (_t17AA,_t17AC);
          real _t17B0#1 = 0.1e1;
          real _t17B2#1 = 0.1e1;
          tensor[2] _t17B4#1 = <tensor[2]>[_t17B0,_t17B2];
          real _t17B6#1 = 0.e0;
          real _t17B8#1 = 0.e0;
          tensor[2] _t17BA#1 = <tensor[2]>[_t17B6,_t17B8];
          tensor[2] _t17BC#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t17BA,_t154C);
          real _t17BE#1 = 0.1e1;
          real _t17C0#1 = 0.e0;
          tensor[2] _t17C2#1 = <tensor[2]>[_t17BE,_t17C0];
          real _t17C4#1 = 0.1e1;
          real _t17C6#1 = 0.e0;
          tensor[2] _t17C8#1 = <tensor[2]>[_t17C4,_t17C6];
          real _t17CA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t17C8);
          tensor[2] _t17CC#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t17C2,_t17CA);
          real _t17CE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t17BC,_t17CC);
          tensor[2] _t17D0#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t17CE,_t1562);
          tensor[2] _t17D2#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t17D0);
          real _t17D4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t17B4,_t17D2);
          bool _t17D6#1 = GT<real>(_t17AE,_t17D4);
          real _t17D8#1 = 0.1e-8;
          real _t17DA#1 = 0.1e-8;
          tensor[2] _t17DC#1 = <tensor[2]>[_t17D8,_t17DA];
          real _t17DE#1 = 0.e0;
          real _t17E0#1 = 0.e0;
          tensor[2] _t17E2#1 = <tensor[2]>[_t17DE,_t17E0];
          tensor[2] _t17E4#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t17E2,_t154C);
          real _t17E6#1 = 0.1e1;
          real _t17E8#1 = 0.e0;
          tensor[2] _t17EA#1 = <tensor[2]>[_t17E6,_t17E8];
          real _t17EC#1 = 0.1e1;
          real _t17EE#1 = 0.e0;
          tensor[2] _t17F0#1 = <tensor[2]>[_t17EC,_t17EE];
          real _t17F2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t17F0);
          tensor[2] _t17F4#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t17EA,_t17F2);
          real _t17F6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t17E4,_t17F4);
          tensor[2] _t17F8#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t17F6,_t1562);
          tensor[2] _t17FA#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t17F8);
          tensor[2] _t17FC#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t17DC,_t17FA);
          real _t17FE#1 = TensorIndex<tensor[2],[0]>(_t17FC);
          real _t1800#1 = -0.e0;
          bool _t1802#1 = GT<real>(_t17FE,_t1800);
          real _t1804#1 = 0.1e-8;
          real _t1806#1 = 0.1e-8;
          tensor[2] _t1808#1 = <tensor[2]>[_t1804,_t1806];
          real _t180A#1 = 0.e0;
          real _t180C#1 = 0.e0;
          tensor[2] _t180E#1 = <tensor[2]>[_t180A,_t180C];
          tensor[2] _t1810#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t180E,_t154C);
          real _t1812#1 = 0.1e1;
          real _t1814#1 = 0.e0;
          tensor[2] _t1816#1 = <tensor[2]>[_t1812,_t1814];
          real _t1818#1 = 0.1e1;
          real _t181A#1 = 0.e0;
          tensor[2] _t181C#1 = <tensor[2]>[_t1818,_t181A];
          real _t181E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t181C);
          tensor[2] _t1820#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1816,_t181E);
          real _t1822#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1810,_t1820);
          tensor[2] _t1824#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1822,_t1562);
          tensor[2] _t1826#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1824);
          tensor[2] _t1828#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1808,_t1826);
          real _t182A#1 = TensorIndex<tensor[2],[1]>(_t1828);
          real _t182C#1 = -0.e0;
          bool _t182E#1 = GT<real>(_t182A,_t182C);
          bool _t1830#1 = BAnd(_t1802,_t182E);
          bool _t1832#1 = BAnd(_t17D6,_t1830);
          if _t1832 then goto ASSIGN1836 else goto JOIN1834
        ASSIGN1836:  preds = [COND1853]
          real _t1835#1 = 0.e0;
          real _t1837#1 = 0.e0;
          tensor[2] _t1839#1 = <tensor[2]>[_t1835,_t1837];
          tensor[2] _t183B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1839,_t154C);
          real _t183D#1 = 0.1e1;
          real _t183F#1 = 0.e0;
          tensor[2] _t1841#1 = <tensor[2]>[_t183D,_t183F];
          real _t1843#1 = 0.1e1;
          real _t1845#1 = 0.e0;
          tensor[2] _t1847#1 = <tensor[2]>[_t1843,_t1845];
          real _t1849#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1847);
          tensor[2] _t184B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1841,_t1849);
          real time184D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t183B,_t184B);
          int face1850#1 = 2;
          goto JOIN1834
        JOIN1834:  preds = [ASSIGN1852,COND1853]
          int face1851#1 = phi(face1850,face175B)
          real time184E#1 = phi(time184D,time175A)
          goto JOIN17A9
        JOIN17A9:  preds = [JOIN1834,COND1856]
          int face1855#2 = phi(face1851,face175B)
          real time1854#1 = phi(time184E,time175A)
          int _t1857#1 = -1;
          bool _t1859#1 = NEQ<int>(face1855,_t1857);
          if _t1859 then goto ASSIGN185D else goto ASSIGN1868
        ASSIGN185D:  preds = [COND186F]
          real _t185C#1 = 0.e0;
          real _t185E#1 = Max<real>(time1854,_t185C);
          real _t1860#1 = IntToReal(face1855);
          tensor[2] _t1862#1 = <tensor[2]>[_t185E,_t1860];
          tensor[2] _t1864#1 = _t1862;
          goto JOIN185B
        JOIN185B:  preds = [ASSIGN1866,ASSIGN186E]
          tensor[2] _t1865#1 = phi(_t1864,_t186D)
          real newTime1870#2 = TensorIndex<tensor[2],[0]>(_t1865);
          real _t1872#1 = 0.e0;
          bool _t1874#1 = GTE<real>(newTime1870,_t1872);
          if _t1874 then goto ASSIGN1878 else goto JOIN1876
        ASSIGN1878:  preds = [COND22C2]
          femData:Mesh _t1877#1 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1879#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t187B#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t187D#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t187F#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1881#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t187F,_t187B,_t187B);
          field _t1883#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1881);
          real _t1885#1 = -0.e0;
          real _t1887#1 = -0.e0;
          tensor[2] _t1889#1 = <tensor[2]>[_t1885,_t1887];
          tensor[2,2] _t188B#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1883,_t1889);
          tensor[2,2] _t188D#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t188B);
          femData:Mesh _t188F#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1891#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1893#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1895#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1893,_t188F,_t188F);
          real _t1897#1 = -0.e0;
          real _t1899#1 = -0.e0;
          tensor[2] _t189B#1 = <tensor[2]>[_t1897,_t1899];
          tensor[2] _t189D#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t1895,_t189B);
          tensor[2] _t189F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t189D);
          tensor[2] _t18A1#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t188D,_t189F);
          femData:Mesh _t18A3#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t18A5#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t18A7#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t18A9#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t18A7,_t18A3,_t18A3);
          field _t18AB#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t18A9);
          real _t18AD#1 = -0.e0;
          real _t18AF#1 = -0.e0;
          tensor[2] _t18B1#1 = <tensor[2]>[_t18AD,_t18AF];
          tensor[2,2] _t18B3#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t18AB,_t18B1);
          tensor[2,2] _t18B5#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t18B3);
          tensor[2] _t18B7#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t18B5,dposProj14A1);
          femData:Mesh _t18B9#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t18BB#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t18BD#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t18BF#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t18BD,_t18B9,_t18B9);
          field _t18C1#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t18BF);
          real _t18C3#1 = -0.e0;
          real _t18C5#1 = -0.e0;
          tensor[2] _t18C7#1 = <tensor[2]>[_t18C3,_t18C5];
          tensor[2,2] _t18C9#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t18C1,_t18C7);
          tensor[2,2] _t18CB#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t18C9);
          femData:Mesh _t18CD#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t18CF#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t18D1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t18D3#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t18D1,_t18CD,_t18CD);
          real _t18D5#1 = -0.e0;
          real _t18D7#1 = -0.e0;
          tensor[2] _t18D9#1 = <tensor[2]>[_t18D5,_t18D7];
          tensor[2] _t18DB#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t18D3,_t18D9);
          tensor[2] _t18DD#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t18DB);
          tensor[2] _t18DF#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t18CB,_t18DD);
          femData:Mesh _t18E1#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t18E3#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t18E5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t18E7#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t18E5,_t18E1,_t18E1);
          field _t18E9#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t18E7);
          real _t18EB#1 = -0.e0;
          real _t18ED#1 = -0.e0;
          tensor[2] _t18EF#1 = <tensor[2]>[_t18EB,_t18ED];
          tensor[2,2] _t18F1#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t18E9,_t18EF);
          tensor[2,2] _t18F3#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t18F1);
          tensor[2] _t18F5#30 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t18F3,dposProj14A1);
          real time18F8#3 = +inf;
          int face18FA#2 = -1;
          real _t18FC#1 = 0.1e1;
          real _t18FE#1 = 0.e0;
          tensor[2] _t1900#1 = <tensor[2]>[_t18FC,_t18FE];
          tensor[2] _t1902#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1900,_t18DF);
          real _t1904#1 = -0.1e1;
          real _t1906#1 = 0.1e1;
          tensor[2] _t1908#1 = <tensor[2]>[_t1904,_t1906];
          real _t190A#1 = -0.1e1;
          real _t190C#1 = 0.1e1;
          tensor[2] _t190E#1 = <tensor[2]>[_t190A,_t190C];
          real _t1910#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t190E);
          tensor[2] _t1912#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1908,_t1910);
          real _t1914#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1902,_t1912);
          real _t1916#1 = -0.1e-15;
          bool _t1918#1 = GTE<real>(_t1914,_t1916);
          real _t191A#1 = 0.1e1;
          real _t191C#1 = 0.e0;
          tensor[2] _t191E#1 = <tensor[2]>[_t191A,_t191C];
          tensor[2] _t1920#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t191E,_t18DF);
          real _t1922#1 = -0.1e1;
          real _t1924#1 = 0.1e1;
          tensor[2] _t1926#1 = <tensor[2]>[_t1922,_t1924];
          real _t1928#1 = -0.1e1;
          real _t192A#1 = 0.1e1;
          tensor[2] _t192C#1 = <tensor[2]>[_t1928,_t192A];
          real _t192E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t192C);
          tensor[2] _t1930#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1926,_t192E);
          real _t1932#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1920,_t1930);
          bool _t1934#1 = GT<real>(time18F8,_t1932);
          real _t1936#1 = -0.1e1;
          real _t1938#1 = 0.1e1;
          tensor[2] _t193A#1 = <tensor[2]>[_t1936,_t1938];
          real _t193C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t193A);
          real _t193E#1 = λ(T0[])<Abs(T0)> (_t193C);
          real _t1940#1 = 0.1e-20;
          bool _t1942#1 = GTE<real>(_t193E,_t1940);
          bool _t1944#1 = BAnd(_t1934,_t1942);
          bool _t1946#1 = BAnd(_t1918,_t1944);
          if _t1946 then goto ASSIGN194A else goto JOIN1948
        ASSIGN194A:  preds = [COND19F5]
          real _t1949#1 = 0.1e1;
          real _t194B#1 = 0.1e-8;
          real _t194D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1949,_t194B);
          real _t194F#1 = 0.1e1;
          real _t1951#1 = 0.1e1;
          tensor[2] _t1953#1 = <tensor[2]>[_t194F,_t1951];
          real _t1955#1 = 0.1e1;
          real _t1957#1 = 0.e0;
          tensor[2] _t1959#1 = <tensor[2]>[_t1955,_t1957];
          tensor[2] _t195B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1959,_t18DF);
          real _t195D#1 = -0.1e1;
          real _t195F#1 = 0.1e1;
          tensor[2] _t1961#1 = <tensor[2]>[_t195D,_t195F];
          real _t1963#1 = -0.1e1;
          real _t1965#1 = 0.1e1;
          tensor[2] _t1967#1 = <tensor[2]>[_t1963,_t1965];
          real _t1969#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1967);
          tensor[2] _t196B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1961,_t1969);
          real _t196D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t195B,_t196B);
          tensor[2] _t196F#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t196D,_t18F5);
          tensor[2] _t1971#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t196F);
          real _t1973#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1953,_t1971);
          bool _t1975#1 = GT<real>(_t194D,_t1973);
          real _t1977#1 = 0.1e-8;
          real _t1979#1 = 0.1e-8;
          tensor[2] _t197B#1 = <tensor[2]>[_t1977,_t1979];
          real _t197D#1 = 0.1e1;
          real _t197F#1 = 0.e0;
          tensor[2] _t1981#1 = <tensor[2]>[_t197D,_t197F];
          tensor[2] _t1983#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1981,_t18DF);
          real _t1985#1 = -0.1e1;
          real _t1987#1 = 0.1e1;
          tensor[2] _t1989#1 = <tensor[2]>[_t1985,_t1987];
          real _t198B#1 = -0.1e1;
          real _t198D#1 = 0.1e1;
          tensor[2] _t198F#1 = <tensor[2]>[_t198B,_t198D];
          real _t1991#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t198F);
          tensor[2] _t1993#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1989,_t1991);
          real _t1995#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1983,_t1993);
          tensor[2] _t1997#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1995,_t18F5);
          tensor[2] _t1999#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1997);
          tensor[2] _t199B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t197B,_t1999);
          real _t199D#1 = TensorIndex<tensor[2],[0]>(_t199B);
          real _t199F#1 = -0.e0;
          bool _t19A1#1 = GT<real>(_t199D,_t199F);
          real _t19A3#1 = 0.1e-8;
          real _t19A5#1 = 0.1e-8;
          tensor[2] _t19A7#1 = <tensor[2]>[_t19A3,_t19A5];
          real _t19A9#1 = 0.1e1;
          real _t19AB#1 = 0.e0;
          tensor[2] _t19AD#1 = <tensor[2]>[_t19A9,_t19AB];
          tensor[2] _t19AF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t19AD,_t18DF);
          real _t19B1#1 = -0.1e1;
          real _t19B3#1 = 0.1e1;
          tensor[2] _t19B5#1 = <tensor[2]>[_t19B1,_t19B3];
          real _t19B7#1 = -0.1e1;
          real _t19B9#1 = 0.1e1;
          tensor[2] _t19BB#1 = <tensor[2]>[_t19B7,_t19B9];
          real _t19BD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t19BB);
          tensor[2] _t19BF#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t19B5,_t19BD);
          real _t19C1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t19AF,_t19BF);
          tensor[2] _t19C3#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t19C1,_t18F5);
          tensor[2] _t19C5#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t19C3);
          tensor[2] _t19C7#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t19A7,_t19C5);
          real _t19C9#1 = TensorIndex<tensor[2],[1]>(_t19C7);
          real _t19CB#1 = -0.e0;
          bool _t19CD#1 = GT<real>(_t19C9,_t19CB);
          bool _t19CF#1 = BAnd(_t19A1,_t19CD);
          bool _t19D1#1 = BAnd(_t1975,_t19CF);
          if _t19D1 then goto ASSIGN19D5 else goto JOIN19D3
        ASSIGN19D5:  preds = [COND19F2]
          real _t19D4#1 = 0.1e1;
          real _t19D6#1 = 0.e0;
          tensor[2] _t19D8#1 = <tensor[2]>[_t19D4,_t19D6];
          tensor[2] _t19DA#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t19D8,_t18DF);
          real _t19DC#1 = -0.1e1;
          real _t19DE#1 = 0.1e1;
          tensor[2] _t19E0#1 = <tensor[2]>[_t19DC,_t19DE];
          real _t19E2#1 = -0.1e1;
          real _t19E4#1 = 0.1e1;
          tensor[2] _t19E6#1 = <tensor[2]>[_t19E2,_t19E4];
          real _t19E8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t19E6);
          tensor[2] _t19EA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t19E0,_t19E8);
          real time19EC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t19DA,_t19EA);
          int face19EF#1 = 0;
          goto JOIN19D3
        JOIN19D3:  preds = [ASSIGN19F1,COND19F2]
          int face19F0#1 = phi(face19EF,face18FA)
          real time19ED#1 = phi(time19EC,time18F8)
          goto JOIN1948
        JOIN1948:  preds = [JOIN19D3,COND19F5]
          int face19F4#2 = phi(face19F0,face18FA)
          real time19F3#3 = phi(time19ED,time18F8)
          real _t19F6#1 = 0.e0;
          real _t19F8#1 = 0.e0;
          tensor[2] _t19FA#1 = <tensor[2]>[_t19F6,_t19F8];
          tensor[2] _t19FC#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t19FA,_t18DF);
          real _t19FE#1 = 0.e0;
          real _t1A00#1 = 0.1e1;
          tensor[2] _t1A02#1 = <tensor[2]>[_t19FE,_t1A00];
          real _t1A04#1 = 0.e0;
          real _t1A06#1 = 0.1e1;
          tensor[2] _t1A08#1 = <tensor[2]>[_t1A04,_t1A06];
          real _t1A0A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1A08);
          tensor[2] _t1A0C#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1A02,_t1A0A);
          real _t1A0E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t19FC,_t1A0C);
          real _t1A10#1 = -0.1e-15;
          bool _t1A12#1 = GTE<real>(_t1A0E,_t1A10);
          real _t1A14#1 = 0.e0;
          real _t1A16#1 = 0.e0;
          tensor[2] _t1A18#1 = <tensor[2]>[_t1A14,_t1A16];
          tensor[2] _t1A1A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1A18,_t18DF);
          real _t1A1C#1 = 0.e0;
          real _t1A1E#1 = 0.1e1;
          tensor[2] _t1A20#1 = <tensor[2]>[_t1A1C,_t1A1E];
          real _t1A22#1 = 0.e0;
          real _t1A24#1 = 0.1e1;
          tensor[2] _t1A26#1 = <tensor[2]>[_t1A22,_t1A24];
          real _t1A28#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1A26);
          tensor[2] _t1A2A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1A20,_t1A28);
          real _t1A2C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1A1A,_t1A2A);
          bool _t1A2E#1 = GT<real>(time19F3,_t1A2C);
          real _t1A30#1 = 0.e0;
          real _t1A32#1 = 0.1e1;
          tensor[2] _t1A34#1 = <tensor[2]>[_t1A30,_t1A32];
          real _t1A36#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1A34);
          real _t1A38#1 = λ(T0[])<Abs(T0)> (_t1A36);
          real _t1A3A#1 = 0.1e-20;
          bool _t1A3C#1 = GTE<real>(_t1A38,_t1A3A);
          bool _t1A3E#1 = BAnd(_t1A2E,_t1A3C);
          bool _t1A40#1 = BAnd(_t1A12,_t1A3E);
          if _t1A40 then goto ASSIGN1A44 else goto JOIN1A42
        ASSIGN1A44:  preds = [COND1AEF]
          real _t1A43#1 = 0.1e1;
          real _t1A45#1 = 0.1e-8;
          real _t1A47#1 = λ(T0[],T1[])<(T0 + T1)> (_t1A43,_t1A45);
          real _t1A49#1 = 0.1e1;
          real _t1A4B#1 = 0.1e1;
          tensor[2] _t1A4D#1 = <tensor[2]>[_t1A49,_t1A4B];
          real _t1A4F#1 = 0.e0;
          real _t1A51#1 = 0.e0;
          tensor[2] _t1A53#1 = <tensor[2]>[_t1A4F,_t1A51];
          tensor[2] _t1A55#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1A53,_t18DF);
          real _t1A57#1 = 0.e0;
          real _t1A59#1 = 0.1e1;
          tensor[2] _t1A5B#1 = <tensor[2]>[_t1A57,_t1A59];
          real _t1A5D#1 = 0.e0;
          real _t1A5F#1 = 0.1e1;
          tensor[2] _t1A61#1 = <tensor[2]>[_t1A5D,_t1A5F];
          real _t1A63#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1A61);
          tensor[2] _t1A65#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1A5B,_t1A63);
          real _t1A67#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1A55,_t1A65);
          tensor[2] _t1A69#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1A67,_t18F5);
          tensor[2] _t1A6B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1A69);
          real _t1A6D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1A4D,_t1A6B);
          bool _t1A6F#1 = GT<real>(_t1A47,_t1A6D);
          real _t1A71#1 = 0.1e-8;
          real _t1A73#1 = 0.1e-8;
          tensor[2] _t1A75#1 = <tensor[2]>[_t1A71,_t1A73];
          real _t1A77#1 = 0.e0;
          real _t1A79#1 = 0.e0;
          tensor[2] _t1A7B#1 = <tensor[2]>[_t1A77,_t1A79];
          tensor[2] _t1A7D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1A7B,_t18DF);
          real _t1A7F#1 = 0.e0;
          real _t1A81#1 = 0.1e1;
          tensor[2] _t1A83#1 = <tensor[2]>[_t1A7F,_t1A81];
          real _t1A85#1 = 0.e0;
          real _t1A87#1 = 0.1e1;
          tensor[2] _t1A89#1 = <tensor[2]>[_t1A85,_t1A87];
          real _t1A8B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1A89);
          tensor[2] _t1A8D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1A83,_t1A8B);
          real _t1A8F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1A7D,_t1A8D);
          tensor[2] _t1A91#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1A8F,_t18F5);
          tensor[2] _t1A93#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1A91);
          tensor[2] _t1A95#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1A75,_t1A93);
          real _t1A97#1 = TensorIndex<tensor[2],[0]>(_t1A95);
          real _t1A99#1 = -0.e0;
          bool _t1A9B#1 = GT<real>(_t1A97,_t1A99);
          real _t1A9D#1 = 0.1e-8;
          real _t1A9F#1 = 0.1e-8;
          tensor[2] _t1AA1#1 = <tensor[2]>[_t1A9D,_t1A9F];
          real _t1AA3#1 = 0.e0;
          real _t1AA5#1 = 0.e0;
          tensor[2] _t1AA7#1 = <tensor[2]>[_t1AA3,_t1AA5];
          tensor[2] _t1AA9#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1AA7,_t18DF);
          real _t1AAB#1 = 0.e0;
          real _t1AAD#1 = 0.1e1;
          tensor[2] _t1AAF#1 = <tensor[2]>[_t1AAB,_t1AAD];
          real _t1AB1#1 = 0.e0;
          real _t1AB3#1 = 0.1e1;
          tensor[2] _t1AB5#1 = <tensor[2]>[_t1AB1,_t1AB3];
          real _t1AB7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1AB5);
          tensor[2] _t1AB9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1AAF,_t1AB7);
          real _t1ABB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1AA9,_t1AB9);
          tensor[2] _t1ABD#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1ABB,_t18F5);
          tensor[2] _t1ABF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1ABD);
          tensor[2] _t1AC1#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1AA1,_t1ABF);
          real _t1AC3#1 = TensorIndex<tensor[2],[1]>(_t1AC1);
          real _t1AC5#1 = -0.e0;
          bool _t1AC7#1 = GT<real>(_t1AC3,_t1AC5);
          bool _t1AC9#1 = BAnd(_t1A9B,_t1AC7);
          bool _t1ACB#1 = BAnd(_t1A6F,_t1AC9);
          if _t1ACB then goto ASSIGN1ACF else goto JOIN1ACD
        ASSIGN1ACF:  preds = [COND1AEC]
          real _t1ACE#1 = 0.e0;
          real _t1AD0#1 = 0.e0;
          tensor[2] _t1AD2#1 = <tensor[2]>[_t1ACE,_t1AD0];
          tensor[2] _t1AD4#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1AD2,_t18DF);
          real _t1AD6#1 = 0.e0;
          real _t1AD8#1 = 0.1e1;
          tensor[2] _t1ADA#1 = <tensor[2]>[_t1AD6,_t1AD8];
          real _t1ADC#1 = 0.e0;
          real _t1ADE#1 = 0.1e1;
          tensor[2] _t1AE0#1 = <tensor[2]>[_t1ADC,_t1ADE];
          real _t1AE2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1AE0);
          tensor[2] _t1AE4#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1ADA,_t1AE2);
          real time1AE6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1AD4,_t1AE4);
          int face1AE9#1 = 1;
          goto JOIN1ACD
        JOIN1ACD:  preds = [ASSIGN1AEB,COND1AEC]
          int face1AEA#1 = phi(face1AE9,face19F4)
          real time1AE7#1 = phi(time1AE6,time19F3)
          goto JOIN1A42
        JOIN1A42:  preds = [JOIN1ACD,COND1AEF]
          int face1AEE#2 = phi(face1AEA,face19F4)
          real time1AED#3 = phi(time1AE7,time19F3)
          real _t1AF0#1 = 0.e0;
          real _t1AF2#1 = 0.e0;
          tensor[2] _t1AF4#1 = <tensor[2]>[_t1AF0,_t1AF2];
          tensor[2] _t1AF6#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1AF4,_t18DF);
          real _t1AF8#1 = 0.1e1;
          real _t1AFA#1 = 0.e0;
          tensor[2] _t1AFC#1 = <tensor[2]>[_t1AF8,_t1AFA];
          real _t1AFE#1 = 0.1e1;
          real _t1B00#1 = 0.e0;
          tensor[2] _t1B02#1 = <tensor[2]>[_t1AFE,_t1B00];
          real _t1B04#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1B02);
          tensor[2] _t1B06#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1AFC,_t1B04);
          real _t1B08#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1AF6,_t1B06);
          real _t1B0A#1 = -0.1e-15;
          bool _t1B0C#1 = GTE<real>(_t1B08,_t1B0A);
          real _t1B0E#1 = 0.e0;
          real _t1B10#1 = 0.e0;
          tensor[2] _t1B12#1 = <tensor[2]>[_t1B0E,_t1B10];
          tensor[2] _t1B14#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1B12,_t18DF);
          real _t1B16#1 = 0.1e1;
          real _t1B18#1 = 0.e0;
          tensor[2] _t1B1A#1 = <tensor[2]>[_t1B16,_t1B18];
          real _t1B1C#1 = 0.1e1;
          real _t1B1E#1 = 0.e0;
          tensor[2] _t1B20#1 = <tensor[2]>[_t1B1C,_t1B1E];
          real _t1B22#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1B20);
          tensor[2] _t1B24#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1B1A,_t1B22);
          real _t1B26#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1B14,_t1B24);
          bool _t1B28#1 = GT<real>(time1AED,_t1B26);
          real _t1B2A#1 = 0.1e1;
          real _t1B2C#1 = 0.e0;
          tensor[2] _t1B2E#1 = <tensor[2]>[_t1B2A,_t1B2C];
          real _t1B30#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1B2E);
          real _t1B32#1 = λ(T0[])<Abs(T0)> (_t1B30);
          real _t1B34#1 = 0.1e-20;
          bool _t1B36#1 = GTE<real>(_t1B32,_t1B34);
          bool _t1B38#1 = BAnd(_t1B28,_t1B36);
          bool _t1B3A#1 = BAnd(_t1B0C,_t1B38);
          if _t1B3A then goto ASSIGN1B3E else goto JOIN1B3C
        ASSIGN1B3E:  preds = [COND1BE9]
          real _t1B3D#1 = 0.1e1;
          real _t1B3F#1 = 0.1e-8;
          real _t1B41#1 = λ(T0[],T1[])<(T0 + T1)> (_t1B3D,_t1B3F);
          real _t1B43#1 = 0.1e1;
          real _t1B45#1 = 0.1e1;
          tensor[2] _t1B47#1 = <tensor[2]>[_t1B43,_t1B45];
          real _t1B49#1 = 0.e0;
          real _t1B4B#1 = 0.e0;
          tensor[2] _t1B4D#1 = <tensor[2]>[_t1B49,_t1B4B];
          tensor[2] _t1B4F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1B4D,_t18DF);
          real _t1B51#1 = 0.1e1;
          real _t1B53#1 = 0.e0;
          tensor[2] _t1B55#1 = <tensor[2]>[_t1B51,_t1B53];
          real _t1B57#1 = 0.1e1;
          real _t1B59#1 = 0.e0;
          tensor[2] _t1B5B#1 = <tensor[2]>[_t1B57,_t1B59];
          real _t1B5D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1B5B);
          tensor[2] _t1B5F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1B55,_t1B5D);
          real _t1B61#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1B4F,_t1B5F);
          tensor[2] _t1B63#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1B61,_t18F5);
          tensor[2] _t1B65#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1B63);
          real _t1B67#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1B47,_t1B65);
          bool _t1B69#1 = GT<real>(_t1B41,_t1B67);
          real _t1B6B#1 = 0.1e-8;
          real _t1B6D#1 = 0.1e-8;
          tensor[2] _t1B6F#1 = <tensor[2]>[_t1B6B,_t1B6D];
          real _t1B71#1 = 0.e0;
          real _t1B73#1 = 0.e0;
          tensor[2] _t1B75#1 = <tensor[2]>[_t1B71,_t1B73];
          tensor[2] _t1B77#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1B75,_t18DF);
          real _t1B79#1 = 0.1e1;
          real _t1B7B#1 = 0.e0;
          tensor[2] _t1B7D#1 = <tensor[2]>[_t1B79,_t1B7B];
          real _t1B7F#1 = 0.1e1;
          real _t1B81#1 = 0.e0;
          tensor[2] _t1B83#1 = <tensor[2]>[_t1B7F,_t1B81];
          real _t1B85#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1B83);
          tensor[2] _t1B87#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1B7D,_t1B85);
          real _t1B89#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1B77,_t1B87);
          tensor[2] _t1B8B#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1B89,_t18F5);
          tensor[2] _t1B8D#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1B8B);
          tensor[2] _t1B8F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1B6F,_t1B8D);
          real _t1B91#1 = TensorIndex<tensor[2],[0]>(_t1B8F);
          real _t1B93#1 = -0.e0;
          bool _t1B95#1 = GT<real>(_t1B91,_t1B93);
          real _t1B97#1 = 0.1e-8;
          real _t1B99#1 = 0.1e-8;
          tensor[2] _t1B9B#1 = <tensor[2]>[_t1B97,_t1B99];
          real _t1B9D#1 = 0.e0;
          real _t1B9F#1 = 0.e0;
          tensor[2] _t1BA1#1 = <tensor[2]>[_t1B9D,_t1B9F];
          tensor[2] _t1BA3#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1BA1,_t18DF);
          real _t1BA5#1 = 0.1e1;
          real _t1BA7#1 = 0.e0;
          tensor[2] _t1BA9#1 = <tensor[2]>[_t1BA5,_t1BA7];
          real _t1BAB#1 = 0.1e1;
          real _t1BAD#1 = 0.e0;
          tensor[2] _t1BAF#1 = <tensor[2]>[_t1BAB,_t1BAD];
          real _t1BB1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1BAF);
          tensor[2] _t1BB3#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1BA9,_t1BB1);
          real _t1BB5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1BA3,_t1BB3);
          tensor[2] _t1BB7#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1BB5,_t18F5);
          tensor[2] _t1BB9#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18DF,_t1BB7);
          tensor[2] _t1BBB#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1B9B,_t1BB9);
          real _t1BBD#1 = TensorIndex<tensor[2],[1]>(_t1BBB);
          real _t1BBF#1 = -0.e0;
          bool _t1BC1#1 = GT<real>(_t1BBD,_t1BBF);
          bool _t1BC3#1 = BAnd(_t1B95,_t1BC1);
          bool _t1BC5#1 = BAnd(_t1B69,_t1BC3);
          if _t1BC5 then goto ASSIGN1BC9 else goto JOIN1BC7
        ASSIGN1BC9:  preds = [COND1BE6]
          real _t1BC8#1 = 0.e0;
          real _t1BCA#1 = 0.e0;
          tensor[2] _t1BCC#1 = <tensor[2]>[_t1BC8,_t1BCA];
          tensor[2] _t1BCE#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1BCC,_t18DF);
          real _t1BD0#1 = 0.1e1;
          real _t1BD2#1 = 0.e0;
          tensor[2] _t1BD4#1 = <tensor[2]>[_t1BD0,_t1BD2];
          real _t1BD6#1 = 0.1e1;
          real _t1BD8#1 = 0.e0;
          tensor[2] _t1BDA#1 = <tensor[2]>[_t1BD6,_t1BD8];
          real _t1BDC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t18F5,_t1BDA);
          tensor[2] _t1BDE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1BD4,_t1BDC);
          real time1BE0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1BCE,_t1BDE);
          int face1BE3#1 = 2;
          goto JOIN1BC7
        JOIN1BC7:  preds = [ASSIGN1BE5,COND1BE6]
          int face1BE4#1 = phi(face1BE3,face1AEE)
          real time1BE1#1 = phi(time1BE0,time1AED)
          goto JOIN1B3C
        JOIN1B3C:  preds = [JOIN1BC7,COND1BE9]
          int face1BE8#2 = phi(face1BE4,face1AEE)
          real time1BE7#1 = phi(time1BE1,time1AED)
          int _t1BEA#1 = -1;
          bool _t1BEC#1 = NEQ<int>(face1BE8,_t1BEA);
          if _t1BEC then goto ASSIGN1BF0 else goto ASSIGN1BFB
        ASSIGN1BF0:  preds = [COND1C02]
          real _t1BEF#1 = 0.e0;
          real _t1BF1#1 = Max<real>(time1BE7,_t1BEF);
          real _t1BF3#1 = IntToReal(face1BE8);
          tensor[2] _t1BF5#1 = <tensor[2]>[_t1BF1,_t1BF3];
          tensor[2] _t1BF7#1 = _t1BF5;
          goto JOIN1BEE
        JOIN1BEE:  preds = [ASSIGN1BF9,ASSIGN1C01]
          tensor[2] _t1BF8#1 = phi(_t1BF7,_t1C00)
          real _t1C03#1 = TensorIndex<tensor[2],[0]>(_t1BF8);
          tensor[2] _t1C05#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1C03,_t18B7);
          tensor[2] _t1C07#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t18A1,_t1C05);
          femData:Mesh _t1C09#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1C0B#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1C0D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1C0F#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1C0D,_t1C09,_t1C09);
          field _t1C11#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1C0F);
          real _t1C13#1 = -0.e0;
          real _t1C15#1 = -0.e0;
          tensor[2] _t1C17#1 = <tensor[2]>[_t1C13,_t1C15];
          tensor[2,2] _t1C19#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1C11,_t1C17);
          tensor[2,2] _t1C1B#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1C19);
          femData:Mesh _t1C1D#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1C1F#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1C21#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1C23#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1C21,_t1C1D,_t1C1D);
          real _t1C25#1 = -0.e0;
          real _t1C27#1 = -0.e0;
          tensor[2] _t1C29#1 = <tensor[2]>[_t1C25,_t1C27];
          tensor[2] _t1C2B#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t1C23,_t1C29);
          tensor[2] _t1C2D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t1C2B);
          tensor[2] _t1C2F#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1C1B,_t1C2D);
          femData:Mesh _t1C31#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1C33#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1C35#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1C37#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1C35,_t1C31,_t1C31);
          field _t1C39#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1C37);
          real _t1C3B#1 = -0.e0;
          real _t1C3D#1 = -0.e0;
          tensor[2] _t1C3F#1 = <tensor[2]>[_t1C3B,_t1C3D];
          tensor[2,2] _t1C41#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1C39,_t1C3F);
          tensor[2,2] _t1C43#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1C41);
          tensor[2] _t1C45#30 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1C43,dposProj14A1);
          real time1C48#3 = +inf;
          int face1C4A#2 = -1;
          real _t1C4C#1 = 0.1e1;
          real _t1C4E#1 = 0.e0;
          tensor[2] _t1C50#1 = <tensor[2]>[_t1C4C,_t1C4E];
          tensor[2] _t1C52#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1C50,_t1C2F);
          real _t1C54#1 = -0.1e1;
          real _t1C56#1 = 0.1e1;
          tensor[2] _t1C58#1 = <tensor[2]>[_t1C54,_t1C56];
          real _t1C5A#1 = -0.1e1;
          real _t1C5C#1 = 0.1e1;
          tensor[2] _t1C5E#1 = <tensor[2]>[_t1C5A,_t1C5C];
          real _t1C60#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1C5E);
          tensor[2] _t1C62#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1C58,_t1C60);
          real _t1C64#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C52,_t1C62);
          real _t1C66#1 = -0.1e-15;
          bool _t1C68#1 = GTE<real>(_t1C64,_t1C66);
          real _t1C6A#1 = 0.1e1;
          real _t1C6C#1 = 0.e0;
          tensor[2] _t1C6E#1 = <tensor[2]>[_t1C6A,_t1C6C];
          tensor[2] _t1C70#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1C6E,_t1C2F);
          real _t1C72#1 = -0.1e1;
          real _t1C74#1 = 0.1e1;
          tensor[2] _t1C76#1 = <tensor[2]>[_t1C72,_t1C74];
          real _t1C78#1 = -0.1e1;
          real _t1C7A#1 = 0.1e1;
          tensor[2] _t1C7C#1 = <tensor[2]>[_t1C78,_t1C7A];
          real _t1C7E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1C7C);
          tensor[2] _t1C80#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1C76,_t1C7E);
          real _t1C82#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C70,_t1C80);
          bool _t1C84#1 = GT<real>(time1C48,_t1C82);
          real _t1C86#1 = -0.1e1;
          real _t1C88#1 = 0.1e1;
          tensor[2] _t1C8A#1 = <tensor[2]>[_t1C86,_t1C88];
          real _t1C8C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1C8A);
          real _t1C8E#1 = λ(T0[])<Abs(T0)> (_t1C8C);
          real _t1C90#1 = 0.1e-20;
          bool _t1C92#1 = GTE<real>(_t1C8E,_t1C90);
          bool _t1C94#1 = BAnd(_t1C84,_t1C92);
          bool _t1C96#1 = BAnd(_t1C68,_t1C94);
          if _t1C96 then goto ASSIGN1C9A else goto JOIN1C98
        ASSIGN1C9A:  preds = [COND1D45]
          real _t1C99#1 = 0.1e1;
          real _t1C9B#1 = 0.1e-8;
          real _t1C9D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1C99,_t1C9B);
          real _t1C9F#1 = 0.1e1;
          real _t1CA1#1 = 0.1e1;
          tensor[2] _t1CA3#1 = <tensor[2]>[_t1C9F,_t1CA1];
          real _t1CA5#1 = 0.1e1;
          real _t1CA7#1 = 0.e0;
          tensor[2] _t1CA9#1 = <tensor[2]>[_t1CA5,_t1CA7];
          tensor[2] _t1CAB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1CA9,_t1C2F);
          real _t1CAD#1 = -0.1e1;
          real _t1CAF#1 = 0.1e1;
          tensor[2] _t1CB1#1 = <tensor[2]>[_t1CAD,_t1CAF];
          real _t1CB3#1 = -0.1e1;
          real _t1CB5#1 = 0.1e1;
          tensor[2] _t1CB7#1 = <tensor[2]>[_t1CB3,_t1CB5];
          real _t1CB9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1CB7);
          tensor[2] _t1CBB#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1CB1,_t1CB9);
          real _t1CBD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1CAB,_t1CBB);
          tensor[2] _t1CBF#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1CBD,_t1C45);
          tensor[2] _t1CC1#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1CBF);
          real _t1CC3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1CA3,_t1CC1);
          bool _t1CC5#1 = GT<real>(_t1C9D,_t1CC3);
          real _t1CC7#1 = 0.1e-8;
          real _t1CC9#1 = 0.1e-8;
          tensor[2] _t1CCB#1 = <tensor[2]>[_t1CC7,_t1CC9];
          real _t1CCD#1 = 0.1e1;
          real _t1CCF#1 = 0.e0;
          tensor[2] _t1CD1#1 = <tensor[2]>[_t1CCD,_t1CCF];
          tensor[2] _t1CD3#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1CD1,_t1C2F);
          real _t1CD5#1 = -0.1e1;
          real _t1CD7#1 = 0.1e1;
          tensor[2] _t1CD9#1 = <tensor[2]>[_t1CD5,_t1CD7];
          real _t1CDB#1 = -0.1e1;
          real _t1CDD#1 = 0.1e1;
          tensor[2] _t1CDF#1 = <tensor[2]>[_t1CDB,_t1CDD];
          real _t1CE1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1CDF);
          tensor[2] _t1CE3#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1CD9,_t1CE1);
          real _t1CE5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1CD3,_t1CE3);
          tensor[2] _t1CE7#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1CE5,_t1C45);
          tensor[2] _t1CE9#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1CE7);
          tensor[2] _t1CEB#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1CCB,_t1CE9);
          real _t1CED#1 = TensorIndex<tensor[2],[0]>(_t1CEB);
          real _t1CEF#1 = -0.e0;
          bool _t1CF1#1 = GT<real>(_t1CED,_t1CEF);
          real _t1CF3#1 = 0.1e-8;
          real _t1CF5#1 = 0.1e-8;
          tensor[2] _t1CF7#1 = <tensor[2]>[_t1CF3,_t1CF5];
          real _t1CF9#1 = 0.1e1;
          real _t1CFB#1 = 0.e0;
          tensor[2] _t1CFD#1 = <tensor[2]>[_t1CF9,_t1CFB];
          tensor[2] _t1CFF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1CFD,_t1C2F);
          real _t1D01#1 = -0.1e1;
          real _t1D03#1 = 0.1e1;
          tensor[2] _t1D05#1 = <tensor[2]>[_t1D01,_t1D03];
          real _t1D07#1 = -0.1e1;
          real _t1D09#1 = 0.1e1;
          tensor[2] _t1D0B#1 = <tensor[2]>[_t1D07,_t1D09];
          real _t1D0D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1D0B);
          tensor[2] _t1D0F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1D05,_t1D0D);
          real _t1D11#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1CFF,_t1D0F);
          tensor[2] _t1D13#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1D11,_t1C45);
          tensor[2] _t1D15#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1D13);
          tensor[2] _t1D17#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1CF7,_t1D15);
          real _t1D19#1 = TensorIndex<tensor[2],[1]>(_t1D17);
          real _t1D1B#1 = -0.e0;
          bool _t1D1D#1 = GT<real>(_t1D19,_t1D1B);
          bool _t1D1F#1 = BAnd(_t1CF1,_t1D1D);
          bool _t1D21#1 = BAnd(_t1CC5,_t1D1F);
          if _t1D21 then goto ASSIGN1D25 else goto JOIN1D23
        ASSIGN1D25:  preds = [COND1D42]
          real _t1D24#1 = 0.1e1;
          real _t1D26#1 = 0.e0;
          tensor[2] _t1D28#1 = <tensor[2]>[_t1D24,_t1D26];
          tensor[2] _t1D2A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1D28,_t1C2F);
          real _t1D2C#1 = -0.1e1;
          real _t1D2E#1 = 0.1e1;
          tensor[2] _t1D30#1 = <tensor[2]>[_t1D2C,_t1D2E];
          real _t1D32#1 = -0.1e1;
          real _t1D34#1 = 0.1e1;
          tensor[2] _t1D36#1 = <tensor[2]>[_t1D32,_t1D34];
          real _t1D38#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1D36);
          tensor[2] _t1D3A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1D30,_t1D38);
          real time1D3C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1D2A,_t1D3A);
          int face1D3F#1 = 0;
          goto JOIN1D23
        JOIN1D23:  preds = [ASSIGN1D41,COND1D42]
          int face1D40#1 = phi(face1D3F,face1C4A)
          real time1D3D#1 = phi(time1D3C,time1C48)
          goto JOIN1C98
        JOIN1C98:  preds = [JOIN1D23,COND1D45]
          int face1D44#2 = phi(face1D40,face1C4A)
          real time1D43#3 = phi(time1D3D,time1C48)
          real _t1D46#1 = 0.e0;
          real _t1D48#1 = 0.e0;
          tensor[2] _t1D4A#1 = <tensor[2]>[_t1D46,_t1D48];
          tensor[2] _t1D4C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1D4A,_t1C2F);
          real _t1D4E#1 = 0.e0;
          real _t1D50#1 = 0.1e1;
          tensor[2] _t1D52#1 = <tensor[2]>[_t1D4E,_t1D50];
          real _t1D54#1 = 0.e0;
          real _t1D56#1 = 0.1e1;
          tensor[2] _t1D58#1 = <tensor[2]>[_t1D54,_t1D56];
          real _t1D5A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1D58);
          tensor[2] _t1D5C#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1D52,_t1D5A);
          real _t1D5E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1D4C,_t1D5C);
          real _t1D60#1 = -0.1e-15;
          bool _t1D62#1 = GTE<real>(_t1D5E,_t1D60);
          real _t1D64#1 = 0.e0;
          real _t1D66#1 = 0.e0;
          tensor[2] _t1D68#1 = <tensor[2]>[_t1D64,_t1D66];
          tensor[2] _t1D6A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1D68,_t1C2F);
          real _t1D6C#1 = 0.e0;
          real _t1D6E#1 = 0.1e1;
          tensor[2] _t1D70#1 = <tensor[2]>[_t1D6C,_t1D6E];
          real _t1D72#1 = 0.e0;
          real _t1D74#1 = 0.1e1;
          tensor[2] _t1D76#1 = <tensor[2]>[_t1D72,_t1D74];
          real _t1D78#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1D76);
          tensor[2] _t1D7A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1D70,_t1D78);
          real _t1D7C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1D6A,_t1D7A);
          bool _t1D7E#1 = GT<real>(time1D43,_t1D7C);
          real _t1D80#1 = 0.e0;
          real _t1D82#1 = 0.1e1;
          tensor[2] _t1D84#1 = <tensor[2]>[_t1D80,_t1D82];
          real _t1D86#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1D84);
          real _t1D88#1 = λ(T0[])<Abs(T0)> (_t1D86);
          real _t1D8A#1 = 0.1e-20;
          bool _t1D8C#1 = GTE<real>(_t1D88,_t1D8A);
          bool _t1D8E#1 = BAnd(_t1D7E,_t1D8C);
          bool _t1D90#1 = BAnd(_t1D62,_t1D8E);
          if _t1D90 then goto ASSIGN1D94 else goto JOIN1D92
        ASSIGN1D94:  preds = [COND1E3F]
          real _t1D93#1 = 0.1e1;
          real _t1D95#1 = 0.1e-8;
          real _t1D97#1 = λ(T0[],T1[])<(T0 + T1)> (_t1D93,_t1D95);
          real _t1D99#1 = 0.1e1;
          real _t1D9B#1 = 0.1e1;
          tensor[2] _t1D9D#1 = <tensor[2]>[_t1D99,_t1D9B];
          real _t1D9F#1 = 0.e0;
          real _t1DA1#1 = 0.e0;
          tensor[2] _t1DA3#1 = <tensor[2]>[_t1D9F,_t1DA1];
          tensor[2] _t1DA5#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1DA3,_t1C2F);
          real _t1DA7#1 = 0.e0;
          real _t1DA9#1 = 0.1e1;
          tensor[2] _t1DAB#1 = <tensor[2]>[_t1DA7,_t1DA9];
          real _t1DAD#1 = 0.e0;
          real _t1DAF#1 = 0.1e1;
          tensor[2] _t1DB1#1 = <tensor[2]>[_t1DAD,_t1DAF];
          real _t1DB3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1DB1);
          tensor[2] _t1DB5#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1DAB,_t1DB3);
          real _t1DB7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1DA5,_t1DB5);
          tensor[2] _t1DB9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1DB7,_t1C45);
          tensor[2] _t1DBB#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1DB9);
          real _t1DBD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1D9D,_t1DBB);
          bool _t1DBF#1 = GT<real>(_t1D97,_t1DBD);
          real _t1DC1#1 = 0.1e-8;
          real _t1DC3#1 = 0.1e-8;
          tensor[2] _t1DC5#1 = <tensor[2]>[_t1DC1,_t1DC3];
          real _t1DC7#1 = 0.e0;
          real _t1DC9#1 = 0.e0;
          tensor[2] _t1DCB#1 = <tensor[2]>[_t1DC7,_t1DC9];
          tensor[2] _t1DCD#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1DCB,_t1C2F);
          real _t1DCF#1 = 0.e0;
          real _t1DD1#1 = 0.1e1;
          tensor[2] _t1DD3#1 = <tensor[2]>[_t1DCF,_t1DD1];
          real _t1DD5#1 = 0.e0;
          real _t1DD7#1 = 0.1e1;
          tensor[2] _t1DD9#1 = <tensor[2]>[_t1DD5,_t1DD7];
          real _t1DDB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1DD9);
          tensor[2] _t1DDD#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1DD3,_t1DDB);
          real _t1DDF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1DCD,_t1DDD);
          tensor[2] _t1DE1#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1DDF,_t1C45);
          tensor[2] _t1DE3#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1DE1);
          tensor[2] _t1DE5#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1DC5,_t1DE3);
          real _t1DE7#1 = TensorIndex<tensor[2],[0]>(_t1DE5);
          real _t1DE9#1 = -0.e0;
          bool _t1DEB#1 = GT<real>(_t1DE7,_t1DE9);
          real _t1DED#1 = 0.1e-8;
          real _t1DEF#1 = 0.1e-8;
          tensor[2] _t1DF1#1 = <tensor[2]>[_t1DED,_t1DEF];
          real _t1DF3#1 = 0.e0;
          real _t1DF5#1 = 0.e0;
          tensor[2] _t1DF7#1 = <tensor[2]>[_t1DF3,_t1DF5];
          tensor[2] _t1DF9#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1DF7,_t1C2F);
          real _t1DFB#1 = 0.e0;
          real _t1DFD#1 = 0.1e1;
          tensor[2] _t1DFF#1 = <tensor[2]>[_t1DFB,_t1DFD];
          real _t1E01#1 = 0.e0;
          real _t1E03#1 = 0.1e1;
          tensor[2] _t1E05#1 = <tensor[2]>[_t1E01,_t1E03];
          real _t1E07#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1E05);
          tensor[2] _t1E09#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1DFF,_t1E07);
          real _t1E0B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1DF9,_t1E09);
          tensor[2] _t1E0D#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1E0B,_t1C45);
          tensor[2] _t1E0F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1E0D);
          tensor[2] _t1E11#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1DF1,_t1E0F);
          real _t1E13#1 = TensorIndex<tensor[2],[1]>(_t1E11);
          real _t1E15#1 = -0.e0;
          bool _t1E17#1 = GT<real>(_t1E13,_t1E15);
          bool _t1E19#1 = BAnd(_t1DEB,_t1E17);
          bool _t1E1B#1 = BAnd(_t1DBF,_t1E19);
          if _t1E1B then goto ASSIGN1E1F else goto JOIN1E1D
        ASSIGN1E1F:  preds = [COND1E3C]
          real _t1E1E#1 = 0.e0;
          real _t1E20#1 = 0.e0;
          tensor[2] _t1E22#1 = <tensor[2]>[_t1E1E,_t1E20];
          tensor[2] _t1E24#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1E22,_t1C2F);
          real _t1E26#1 = 0.e0;
          real _t1E28#1 = 0.1e1;
          tensor[2] _t1E2A#1 = <tensor[2]>[_t1E26,_t1E28];
          real _t1E2C#1 = 0.e0;
          real _t1E2E#1 = 0.1e1;
          tensor[2] _t1E30#1 = <tensor[2]>[_t1E2C,_t1E2E];
          real _t1E32#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1E30);
          tensor[2] _t1E34#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1E2A,_t1E32);
          real time1E36#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1E24,_t1E34);
          int face1E39#1 = 1;
          goto JOIN1E1D
        JOIN1E1D:  preds = [ASSIGN1E3B,COND1E3C]
          int face1E3A#1 = phi(face1E39,face1D44)
          real time1E37#1 = phi(time1E36,time1D43)
          goto JOIN1D92
        JOIN1D92:  preds = [JOIN1E1D,COND1E3F]
          int face1E3E#2 = phi(face1E3A,face1D44)
          real time1E3D#3 = phi(time1E37,time1D43)
          real _t1E40#1 = 0.e0;
          real _t1E42#1 = 0.e0;
          tensor[2] _t1E44#1 = <tensor[2]>[_t1E40,_t1E42];
          tensor[2] _t1E46#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1E44,_t1C2F);
          real _t1E48#1 = 0.1e1;
          real _t1E4A#1 = 0.e0;
          tensor[2] _t1E4C#1 = <tensor[2]>[_t1E48,_t1E4A];
          real _t1E4E#1 = 0.1e1;
          real _t1E50#1 = 0.e0;
          tensor[2] _t1E52#1 = <tensor[2]>[_t1E4E,_t1E50];
          real _t1E54#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1E52);
          tensor[2] _t1E56#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1E4C,_t1E54);
          real _t1E58#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1E46,_t1E56);
          real _t1E5A#1 = -0.1e-15;
          bool _t1E5C#1 = GTE<real>(_t1E58,_t1E5A);
          real _t1E5E#1 = 0.e0;
          real _t1E60#1 = 0.e0;
          tensor[2] _t1E62#1 = <tensor[2]>[_t1E5E,_t1E60];
          tensor[2] _t1E64#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1E62,_t1C2F);
          real _t1E66#1 = 0.1e1;
          real _t1E68#1 = 0.e0;
          tensor[2] _t1E6A#1 = <tensor[2]>[_t1E66,_t1E68];
          real _t1E6C#1 = 0.1e1;
          real _t1E6E#1 = 0.e0;
          tensor[2] _t1E70#1 = <tensor[2]>[_t1E6C,_t1E6E];
          real _t1E72#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1E70);
          tensor[2] _t1E74#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1E6A,_t1E72);
          real _t1E76#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1E64,_t1E74);
          bool _t1E78#1 = GT<real>(time1E3D,_t1E76);
          real _t1E7A#1 = 0.1e1;
          real _t1E7C#1 = 0.e0;
          tensor[2] _t1E7E#1 = <tensor[2]>[_t1E7A,_t1E7C];
          real _t1E80#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1E7E);
          real _t1E82#1 = λ(T0[])<Abs(T0)> (_t1E80);
          real _t1E84#1 = 0.1e-20;
          bool _t1E86#1 = GTE<real>(_t1E82,_t1E84);
          bool _t1E88#1 = BAnd(_t1E78,_t1E86);
          bool _t1E8A#1 = BAnd(_t1E5C,_t1E88);
          if _t1E8A then goto ASSIGN1E8E else goto JOIN1E8C
        ASSIGN1E8E:  preds = [COND1F39]
          real _t1E8D#1 = 0.1e1;
          real _t1E8F#1 = 0.1e-8;
          real _t1E91#1 = λ(T0[],T1[])<(T0 + T1)> (_t1E8D,_t1E8F);
          real _t1E93#1 = 0.1e1;
          real _t1E95#1 = 0.1e1;
          tensor[2] _t1E97#1 = <tensor[2]>[_t1E93,_t1E95];
          real _t1E99#1 = 0.e0;
          real _t1E9B#1 = 0.e0;
          tensor[2] _t1E9D#1 = <tensor[2]>[_t1E99,_t1E9B];
          tensor[2] _t1E9F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1E9D,_t1C2F);
          real _t1EA1#1 = 0.1e1;
          real _t1EA3#1 = 0.e0;
          tensor[2] _t1EA5#1 = <tensor[2]>[_t1EA1,_t1EA3];
          real _t1EA7#1 = 0.1e1;
          real _t1EA9#1 = 0.e0;
          tensor[2] _t1EAB#1 = <tensor[2]>[_t1EA7,_t1EA9];
          real _t1EAD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1EAB);
          tensor[2] _t1EAF#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1EA5,_t1EAD);
          real _t1EB1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1E9F,_t1EAF);
          tensor[2] _t1EB3#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1EB1,_t1C45);
          tensor[2] _t1EB5#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1EB3);
          real _t1EB7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1E97,_t1EB5);
          bool _t1EB9#1 = GT<real>(_t1E91,_t1EB7);
          real _t1EBB#1 = 0.1e-8;
          real _t1EBD#1 = 0.1e-8;
          tensor[2] _t1EBF#1 = <tensor[2]>[_t1EBB,_t1EBD];
          real _t1EC1#1 = 0.e0;
          real _t1EC3#1 = 0.e0;
          tensor[2] _t1EC5#1 = <tensor[2]>[_t1EC1,_t1EC3];
          tensor[2] _t1EC7#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1EC5,_t1C2F);
          real _t1EC9#1 = 0.1e1;
          real _t1ECB#1 = 0.e0;
          tensor[2] _t1ECD#1 = <tensor[2]>[_t1EC9,_t1ECB];
          real _t1ECF#1 = 0.1e1;
          real _t1ED1#1 = 0.e0;
          tensor[2] _t1ED3#1 = <tensor[2]>[_t1ECF,_t1ED1];
          real _t1ED5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1ED3);
          tensor[2] _t1ED7#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1ECD,_t1ED5);
          real _t1ED9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1EC7,_t1ED7);
          tensor[2] _t1EDB#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1ED9,_t1C45);
          tensor[2] _t1EDD#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1EDB);
          tensor[2] _t1EDF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1EBF,_t1EDD);
          real _t1EE1#1 = TensorIndex<tensor[2],[0]>(_t1EDF);
          real _t1EE3#1 = -0.e0;
          bool _t1EE5#1 = GT<real>(_t1EE1,_t1EE3);
          real _t1EE7#1 = 0.1e-8;
          real _t1EE9#1 = 0.1e-8;
          tensor[2] _t1EEB#1 = <tensor[2]>[_t1EE7,_t1EE9];
          real _t1EED#1 = 0.e0;
          real _t1EEF#1 = 0.e0;
          tensor[2] _t1EF1#1 = <tensor[2]>[_t1EED,_t1EEF];
          tensor[2] _t1EF3#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1EF1,_t1C2F);
          real _t1EF5#1 = 0.1e1;
          real _t1EF7#1 = 0.e0;
          tensor[2] _t1EF9#1 = <tensor[2]>[_t1EF5,_t1EF7];
          real _t1EFB#1 = 0.1e1;
          real _t1EFD#1 = 0.e0;
          tensor[2] _t1EFF#1 = <tensor[2]>[_t1EFB,_t1EFD];
          real _t1F01#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1EFF);
          tensor[2] _t1F03#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1EF9,_t1F01);
          real _t1F05#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1EF3,_t1F03);
          tensor[2] _t1F07#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1F05,_t1C45);
          tensor[2] _t1F09#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1C2F,_t1F07);
          tensor[2] _t1F0B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1EEB,_t1F09);
          real _t1F0D#1 = TensorIndex<tensor[2],[1]>(_t1F0B);
          real _t1F0F#1 = -0.e0;
          bool _t1F11#1 = GT<real>(_t1F0D,_t1F0F);
          bool _t1F13#1 = BAnd(_t1EE5,_t1F11);
          bool _t1F15#1 = BAnd(_t1EB9,_t1F13);
          if _t1F15 then goto ASSIGN1F19 else goto JOIN1F17
        ASSIGN1F19:  preds = [COND1F36]
          real _t1F18#1 = 0.e0;
          real _t1F1A#1 = 0.e0;
          tensor[2] _t1F1C#1 = <tensor[2]>[_t1F18,_t1F1A];
          tensor[2] _t1F1E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1F1C,_t1C2F);
          real _t1F20#1 = 0.1e1;
          real _t1F22#1 = 0.e0;
          tensor[2] _t1F24#1 = <tensor[2]>[_t1F20,_t1F22];
          real _t1F26#1 = 0.1e1;
          real _t1F28#1 = 0.e0;
          tensor[2] _t1F2A#1 = <tensor[2]>[_t1F26,_t1F28];
          real _t1F2C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1C45,_t1F2A);
          tensor[2] _t1F2E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1F24,_t1F2C);
          real time1F30#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F1E,_t1F2E);
          int face1F33#1 = 2;
          goto JOIN1F17
        JOIN1F17:  preds = [ASSIGN1F35,COND1F36]
          int face1F34#1 = phi(face1F33,face1E3E)
          real time1F31#1 = phi(time1F30,time1E3D)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1F17,COND1F39]
          int face1F38#2 = phi(face1F34,face1E3E)
          real time1F37#1 = phi(time1F31,time1E3D)
          int _t1F3A#1 = -1;
          bool _t1F3C#1 = NEQ<int>(face1F38,_t1F3A);
          if _t1F3C then goto ASSIGN1F40 else goto ASSIGN1F4B
        ASSIGN1F40:  preds = [COND1F52]
          real _t1F3F#1 = 0.e0;
          real _t1F41#1 = Max<real>(time1F37,_t1F3F);
          real _t1F43#1 = IntToReal(face1F38);
          tensor[2] _t1F45#1 = <tensor[2]>[_t1F41,_t1F43];
          tensor[2] _t1F47#1 = _t1F45;
          goto JOIN1F3E
        JOIN1F3E:  preds = [ASSIGN1F49,ASSIGN1F51]
          tensor[2] _t1F48#1 = phi(_t1F47,_t1F50)
          real _t1F53#1 = TensorIndex<tensor[2],[0]>(_t1F48);
          tensor[2] _t1F55#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1F53,dposProj14A1);
          tensor[2] _t1F57#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj149E,_t1F55);
          femData:Mesh _t1F59#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1F5B#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1F5D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1F5F#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1F5D,_t1F59,_t1F59);
          field _t1F61#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1F5F);
          real _t1F63#1 = -0.e0;
          real _t1F65#1 = -0.e0;
          tensor[2] _t1F67#1 = <tensor[2]>[_t1F63,_t1F65];
          tensor[2,2] _t1F69#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1F61,_t1F67);
          tensor[2,2] _t1F6B#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1F69);
          femData:Mesh _t1F6D#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1F6F#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1F71#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1F73#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1F71,_t1F6D,_t1F6D);
          real _t1F75#1 = -0.e0;
          real _t1F77#1 = -0.e0;
          tensor[2] _t1F79#1 = <tensor[2]>[_t1F75,_t1F77];
          tensor[2] _t1F7B#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t1F73,_t1F79);
          tensor[2] _t1F7D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t1F7B);
          tensor[2] _t1F7F#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1F6B,_t1F7D);
          femData:Mesh _t1F81#2 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:Mesh _t1F83#0 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          int _t1F85#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          field _t1F87#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t1F85,_t1F81,_t1F81);
          field _t1F89#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t1F87);
          real _t1F8B#1 = -0.e0;
          real _t1F8D#1 = -0.e0;
          tensor[2] _t1F8F#1 = <tensor[2]>[_t1F8B,_t1F8D];
          tensor[2,2] _t1F91#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t1F89,_t1F8F);
          tensor[2,2] _t1F93#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1F91);
          tensor[2] _t1F95#30 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1F93,dposProj14A1);
          real time1F98#3 = +inf;
          int face1F9A#2 = -1;
          real _t1F9C#1 = 0.1e1;
          real _t1F9E#1 = 0.e0;
          tensor[2] _t1FA0#1 = <tensor[2]>[_t1F9C,_t1F9E];
          tensor[2] _t1FA2#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1FA0,_t1F7F);
          real _t1FA4#1 = -0.1e1;
          real _t1FA6#1 = 0.1e1;
          tensor[2] _t1FA8#1 = <tensor[2]>[_t1FA4,_t1FA6];
          real _t1FAA#1 = -0.1e1;
          real _t1FAC#1 = 0.1e1;
          tensor[2] _t1FAE#1 = <tensor[2]>[_t1FAA,_t1FAC];
          real _t1FB0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t1FAE);
          tensor[2] _t1FB2#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1FA8,_t1FB0);
          real _t1FB4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1FA2,_t1FB2);
          real _t1FB6#1 = -0.1e-15;
          bool _t1FB8#1 = GTE<real>(_t1FB4,_t1FB6);
          real _t1FBA#1 = 0.1e1;
          real _t1FBC#1 = 0.e0;
          tensor[2] _t1FBE#1 = <tensor[2]>[_t1FBA,_t1FBC];
          tensor[2] _t1FC0#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1FBE,_t1F7F);
          real _t1FC2#1 = -0.1e1;
          real _t1FC4#1 = 0.1e1;
          tensor[2] _t1FC6#1 = <tensor[2]>[_t1FC2,_t1FC4];
          real _t1FC8#1 = -0.1e1;
          real _t1FCA#1 = 0.1e1;
          tensor[2] _t1FCC#1 = <tensor[2]>[_t1FC8,_t1FCA];
          real _t1FCE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t1FCC);
          tensor[2] _t1FD0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1FC6,_t1FCE);
          real _t1FD2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1FC0,_t1FD0);
          bool _t1FD4#1 = GT<real>(time1F98,_t1FD2);
          real _t1FD6#1 = -0.1e1;
          real _t1FD8#1 = 0.1e1;
          tensor[2] _t1FDA#1 = <tensor[2]>[_t1FD6,_t1FD8];
          real _t1FDC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t1FDA);
          real _t1FDE#1 = λ(T0[])<Abs(T0)> (_t1FDC);
          real _t1FE0#1 = 0.1e-20;
          bool _t1FE2#1 = GTE<real>(_t1FDE,_t1FE0);
          bool _t1FE4#1 = BAnd(_t1FD4,_t1FE2);
          bool _t1FE6#1 = BAnd(_t1FB8,_t1FE4);
          if _t1FE6 then goto ASSIGN1FEA else goto JOIN1FE8
        ASSIGN1FEA:  preds = [COND2095]
          real _t1FE9#1 = 0.1e1;
          real _t1FEB#1 = 0.1e-8;
          real _t1FED#1 = λ(T0[],T1[])<(T0 + T1)> (_t1FE9,_t1FEB);
          real _t1FEF#1 = 0.1e1;
          real _t1FF1#1 = 0.1e1;
          tensor[2] _t1FF3#1 = <tensor[2]>[_t1FEF,_t1FF1];
          real _t1FF5#1 = 0.1e1;
          real _t1FF7#1 = 0.e0;
          tensor[2] _t1FF9#1 = <tensor[2]>[_t1FF5,_t1FF7];
          tensor[2] _t1FFB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1FF9,_t1F7F);
          real _t1FFD#1 = -0.1e1;
          real _t1FFF#1 = 0.1e1;
          tensor[2] _t2001#1 = <tensor[2]>[_t1FFD,_t1FFF];
          real _t2003#1 = -0.1e1;
          real _t2005#1 = 0.1e1;
          tensor[2] _t2007#1 = <tensor[2]>[_t2003,_t2005];
          real _t2009#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2007);
          tensor[2] _t200B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2001,_t2009);
          real _t200D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1FFB,_t200B);
          tensor[2] _t200F#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t200D,_t1F95);
          tensor[2] _t2011#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t200F);
          real _t2013#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1FF3,_t2011);
          bool _t2015#1 = GT<real>(_t1FED,_t2013);
          real _t2017#1 = 0.1e-8;
          real _t2019#1 = 0.1e-8;
          tensor[2] _t201B#1 = <tensor[2]>[_t2017,_t2019];
          real _t201D#1 = 0.1e1;
          real _t201F#1 = 0.e0;
          tensor[2] _t2021#1 = <tensor[2]>[_t201D,_t201F];
          tensor[2] _t2023#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2021,_t1F7F);
          real _t2025#1 = -0.1e1;
          real _t2027#1 = 0.1e1;
          tensor[2] _t2029#1 = <tensor[2]>[_t2025,_t2027];
          real _t202B#1 = -0.1e1;
          real _t202D#1 = 0.1e1;
          tensor[2] _t202F#1 = <tensor[2]>[_t202B,_t202D];
          real _t2031#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t202F);
          tensor[2] _t2033#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2029,_t2031);
          real _t2035#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2023,_t2033);
          tensor[2] _t2037#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2035,_t1F95);
          tensor[2] _t2039#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2037);
          tensor[2] _t203B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t201B,_t2039);
          real _t203D#1 = TensorIndex<tensor[2],[0]>(_t203B);
          real _t203F#1 = -0.e0;
          bool _t2041#1 = GT<real>(_t203D,_t203F);
          real _t2043#1 = 0.1e-8;
          real _t2045#1 = 0.1e-8;
          tensor[2] _t2047#1 = <tensor[2]>[_t2043,_t2045];
          real _t2049#1 = 0.1e1;
          real _t204B#1 = 0.e0;
          tensor[2] _t204D#1 = <tensor[2]>[_t2049,_t204B];
          tensor[2] _t204F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t204D,_t1F7F);
          real _t2051#1 = -0.1e1;
          real _t2053#1 = 0.1e1;
          tensor[2] _t2055#1 = <tensor[2]>[_t2051,_t2053];
          real _t2057#1 = -0.1e1;
          real _t2059#1 = 0.1e1;
          tensor[2] _t205B#1 = <tensor[2]>[_t2057,_t2059];
          real _t205D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t205B);
          tensor[2] _t205F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2055,_t205D);
          real _t2061#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t204F,_t205F);
          tensor[2] _t2063#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2061,_t1F95);
          tensor[2] _t2065#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2063);
          tensor[2] _t2067#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2047,_t2065);
          real _t2069#1 = TensorIndex<tensor[2],[1]>(_t2067);
          real _t206B#1 = -0.e0;
          bool _t206D#1 = GT<real>(_t2069,_t206B);
          bool _t206F#1 = BAnd(_t2041,_t206D);
          bool _t2071#1 = BAnd(_t2015,_t206F);
          if _t2071 then goto ASSIGN2075 else goto JOIN2073
        ASSIGN2075:  preds = [COND2092]
          real _t2074#1 = 0.1e1;
          real _t2076#1 = 0.e0;
          tensor[2] _t2078#1 = <tensor[2]>[_t2074,_t2076];
          tensor[2] _t207A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2078,_t1F7F);
          real _t207C#1 = -0.1e1;
          real _t207E#1 = 0.1e1;
          tensor[2] _t2080#1 = <tensor[2]>[_t207C,_t207E];
          real _t2082#1 = -0.1e1;
          real _t2084#1 = 0.1e1;
          tensor[2] _t2086#1 = <tensor[2]>[_t2082,_t2084];
          real _t2088#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2086);
          tensor[2] _t208A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2080,_t2088);
          real time208C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t207A,_t208A);
          int face208F#1 = 0;
          goto JOIN2073
        JOIN2073:  preds = [ASSIGN2091,COND2092]
          int face2090#1 = phi(face208F,face1F9A)
          real time208D#1 = phi(time208C,time1F98)
          goto JOIN1FE8
        JOIN1FE8:  preds = [JOIN2073,COND2095]
          int face2094#2 = phi(face2090,face1F9A)
          real time2093#3 = phi(time208D,time1F98)
          real _t2096#1 = 0.e0;
          real _t2098#1 = 0.e0;
          tensor[2] _t209A#1 = <tensor[2]>[_t2096,_t2098];
          tensor[2] _t209C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t209A,_t1F7F);
          real _t209E#1 = 0.e0;
          real _t20A0#1 = 0.1e1;
          tensor[2] _t20A2#1 = <tensor[2]>[_t209E,_t20A0];
          real _t20A4#1 = 0.e0;
          real _t20A6#1 = 0.1e1;
          tensor[2] _t20A8#1 = <tensor[2]>[_t20A4,_t20A6];
          real _t20AA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t20A8);
          tensor[2] _t20AC#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t20A2,_t20AA);
          real _t20AE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t209C,_t20AC);
          real _t20B0#1 = -0.1e-15;
          bool _t20B2#1 = GTE<real>(_t20AE,_t20B0);
          real _t20B4#1 = 0.e0;
          real _t20B6#1 = 0.e0;
          tensor[2] _t20B8#1 = <tensor[2]>[_t20B4,_t20B6];
          tensor[2] _t20BA#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t20B8,_t1F7F);
          real _t20BC#1 = 0.e0;
          real _t20BE#1 = 0.1e1;
          tensor[2] _t20C0#1 = <tensor[2]>[_t20BC,_t20BE];
          real _t20C2#1 = 0.e0;
          real _t20C4#1 = 0.1e1;
          tensor[2] _t20C6#1 = <tensor[2]>[_t20C2,_t20C4];
          real _t20C8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t20C6);
          tensor[2] _t20CA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t20C0,_t20C8);
          real _t20CC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t20BA,_t20CA);
          bool _t20CE#1 = GT<real>(time2093,_t20CC);
          real _t20D0#1 = 0.e0;
          real _t20D2#1 = 0.1e1;
          tensor[2] _t20D4#1 = <tensor[2]>[_t20D0,_t20D2];
          real _t20D6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t20D4);
          real _t20D8#1 = λ(T0[])<Abs(T0)> (_t20D6);
          real _t20DA#1 = 0.1e-20;
          bool _t20DC#1 = GTE<real>(_t20D8,_t20DA);
          bool _t20DE#1 = BAnd(_t20CE,_t20DC);
          bool _t20E0#1 = BAnd(_t20B2,_t20DE);
          if _t20E0 then goto ASSIGN20E4 else goto JOIN20E2
        ASSIGN20E4:  preds = [COND218F]
          real _t20E3#1 = 0.1e1;
          real _t20E5#1 = 0.1e-8;
          real _t20E7#1 = λ(T0[],T1[])<(T0 + T1)> (_t20E3,_t20E5);
          real _t20E9#1 = 0.1e1;
          real _t20EB#1 = 0.1e1;
          tensor[2] _t20ED#1 = <tensor[2]>[_t20E9,_t20EB];
          real _t20EF#1 = 0.e0;
          real _t20F1#1 = 0.e0;
          tensor[2] _t20F3#1 = <tensor[2]>[_t20EF,_t20F1];
          tensor[2] _t20F5#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t20F3,_t1F7F);
          real _t20F7#1 = 0.e0;
          real _t20F9#1 = 0.1e1;
          tensor[2] _t20FB#1 = <tensor[2]>[_t20F7,_t20F9];
          real _t20FD#1 = 0.e0;
          real _t20FF#1 = 0.1e1;
          tensor[2] _t2101#1 = <tensor[2]>[_t20FD,_t20FF];
          real _t2103#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2101);
          tensor[2] _t2105#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t20FB,_t2103);
          real _t2107#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t20F5,_t2105);
          tensor[2] _t2109#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2107,_t1F95);
          tensor[2] _t210B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2109);
          real _t210D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t20ED,_t210B);
          bool _t210F#1 = GT<real>(_t20E7,_t210D);
          real _t2111#1 = 0.1e-8;
          real _t2113#1 = 0.1e-8;
          tensor[2] _t2115#1 = <tensor[2]>[_t2111,_t2113];
          real _t2117#1 = 0.e0;
          real _t2119#1 = 0.e0;
          tensor[2] _t211B#1 = <tensor[2]>[_t2117,_t2119];
          tensor[2] _t211D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t211B,_t1F7F);
          real _t211F#1 = 0.e0;
          real _t2121#1 = 0.1e1;
          tensor[2] _t2123#1 = <tensor[2]>[_t211F,_t2121];
          real _t2125#1 = 0.e0;
          real _t2127#1 = 0.1e1;
          tensor[2] _t2129#1 = <tensor[2]>[_t2125,_t2127];
          real _t212B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2129);
          tensor[2] _t212D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2123,_t212B);
          real _t212F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t211D,_t212D);
          tensor[2] _t2131#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t212F,_t1F95);
          tensor[2] _t2133#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2131);
          tensor[2] _t2135#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2115,_t2133);
          real _t2137#1 = TensorIndex<tensor[2],[0]>(_t2135);
          real _t2139#1 = -0.e0;
          bool _t213B#1 = GT<real>(_t2137,_t2139);
          real _t213D#1 = 0.1e-8;
          real _t213F#1 = 0.1e-8;
          tensor[2] _t2141#1 = <tensor[2]>[_t213D,_t213F];
          real _t2143#1 = 0.e0;
          real _t2145#1 = 0.e0;
          tensor[2] _t2147#1 = <tensor[2]>[_t2143,_t2145];
          tensor[2] _t2149#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2147,_t1F7F);
          real _t214B#1 = 0.e0;
          real _t214D#1 = 0.1e1;
          tensor[2] _t214F#1 = <tensor[2]>[_t214B,_t214D];
          real _t2151#1 = 0.e0;
          real _t2153#1 = 0.1e1;
          tensor[2] _t2155#1 = <tensor[2]>[_t2151,_t2153];
          real _t2157#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2155);
          tensor[2] _t2159#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t214F,_t2157);
          real _t215B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2149,_t2159);
          tensor[2] _t215D#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t215B,_t1F95);
          tensor[2] _t215F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t215D);
          tensor[2] _t2161#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2141,_t215F);
          real _t2163#1 = TensorIndex<tensor[2],[1]>(_t2161);
          real _t2165#1 = -0.e0;
          bool _t2167#1 = GT<real>(_t2163,_t2165);
          bool _t2169#1 = BAnd(_t213B,_t2167);
          bool _t216B#1 = BAnd(_t210F,_t2169);
          if _t216B then goto ASSIGN216F else goto JOIN216D
        ASSIGN216F:  preds = [COND218C]
          real _t216E#1 = 0.e0;
          real _t2170#1 = 0.e0;
          tensor[2] _t2172#1 = <tensor[2]>[_t216E,_t2170];
          tensor[2] _t2174#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2172,_t1F7F);
          real _t2176#1 = 0.e0;
          real _t2178#1 = 0.1e1;
          tensor[2] _t217A#1 = <tensor[2]>[_t2176,_t2178];
          real _t217C#1 = 0.e0;
          real _t217E#1 = 0.1e1;
          tensor[2] _t2180#1 = <tensor[2]>[_t217C,_t217E];
          real _t2182#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2180);
          tensor[2] _t2184#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t217A,_t2182);
          real time2186#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2174,_t2184);
          int face2189#1 = 1;
          goto JOIN216D
        JOIN216D:  preds = [ASSIGN218B,COND218C]
          int face218A#1 = phi(face2189,face2094)
          real time2187#1 = phi(time2186,time2093)
          goto JOIN20E2
        JOIN20E2:  preds = [JOIN216D,COND218F]
          int face218E#2 = phi(face218A,face2094)
          real time218D#3 = phi(time2187,time2093)
          real _t2190#1 = 0.e0;
          real _t2192#1 = 0.e0;
          tensor[2] _t2194#1 = <tensor[2]>[_t2190,_t2192];
          tensor[2] _t2196#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2194,_t1F7F);
          real _t2198#1 = 0.1e1;
          real _t219A#1 = 0.e0;
          tensor[2] _t219C#1 = <tensor[2]>[_t2198,_t219A];
          real _t219E#1 = 0.1e1;
          real _t21A0#1 = 0.e0;
          tensor[2] _t21A2#1 = <tensor[2]>[_t219E,_t21A0];
          real _t21A4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t21A2);
          tensor[2] _t21A6#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t219C,_t21A4);
          real _t21A8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2196,_t21A6);
          real _t21AA#1 = -0.1e-15;
          bool _t21AC#1 = GTE<real>(_t21A8,_t21AA);
          real _t21AE#1 = 0.e0;
          real _t21B0#1 = 0.e0;
          tensor[2] _t21B2#1 = <tensor[2]>[_t21AE,_t21B0];
          tensor[2] _t21B4#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t21B2,_t1F7F);
          real _t21B6#1 = 0.1e1;
          real _t21B8#1 = 0.e0;
          tensor[2] _t21BA#1 = <tensor[2]>[_t21B6,_t21B8];
          real _t21BC#1 = 0.1e1;
          real _t21BE#1 = 0.e0;
          tensor[2] _t21C0#1 = <tensor[2]>[_t21BC,_t21BE];
          real _t21C2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t21C0);
          tensor[2] _t21C4#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t21BA,_t21C2);
          real _t21C6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t21B4,_t21C4);
          bool _t21C8#1 = GT<real>(time218D,_t21C6);
          real _t21CA#1 = 0.1e1;
          real _t21CC#1 = 0.e0;
          tensor[2] _t21CE#1 = <tensor[2]>[_t21CA,_t21CC];
          real _t21D0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t21CE);
          real _t21D2#1 = λ(T0[])<Abs(T0)> (_t21D0);
          real _t21D4#1 = 0.1e-20;
          bool _t21D6#1 = GTE<real>(_t21D2,_t21D4);
          bool _t21D8#1 = BAnd(_t21C8,_t21D6);
          bool _t21DA#1 = BAnd(_t21AC,_t21D8);
          if _t21DA then goto ASSIGN21DE else goto JOIN21DC
        ASSIGN21DE:  preds = [COND2289]
          real _t21DD#1 = 0.1e1;
          real _t21DF#1 = 0.1e-8;
          real _t21E1#1 = λ(T0[],T1[])<(T0 + T1)> (_t21DD,_t21DF);
          real _t21E3#1 = 0.1e1;
          real _t21E5#1 = 0.1e1;
          tensor[2] _t21E7#1 = <tensor[2]>[_t21E3,_t21E5];
          real _t21E9#1 = 0.e0;
          real _t21EB#1 = 0.e0;
          tensor[2] _t21ED#1 = <tensor[2]>[_t21E9,_t21EB];
          tensor[2] _t21EF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t21ED,_t1F7F);
          real _t21F1#1 = 0.1e1;
          real _t21F3#1 = 0.e0;
          tensor[2] _t21F5#1 = <tensor[2]>[_t21F1,_t21F3];
          real _t21F7#1 = 0.1e1;
          real _t21F9#1 = 0.e0;
          tensor[2] _t21FB#1 = <tensor[2]>[_t21F7,_t21F9];
          real _t21FD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t21FB);
          tensor[2] _t21FF#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t21F5,_t21FD);
          real _t2201#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t21EF,_t21FF);
          tensor[2] _t2203#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2201,_t1F95);
          tensor[2] _t2205#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2203);
          real _t2207#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t21E7,_t2205);
          bool _t2209#1 = GT<real>(_t21E1,_t2207);
          real _t220B#1 = 0.1e-8;
          real _t220D#1 = 0.1e-8;
          tensor[2] _t220F#1 = <tensor[2]>[_t220B,_t220D];
          real _t2211#1 = 0.e0;
          real _t2213#1 = 0.e0;
          tensor[2] _t2215#1 = <tensor[2]>[_t2211,_t2213];
          tensor[2] _t2217#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2215,_t1F7F);
          real _t2219#1 = 0.1e1;
          real _t221B#1 = 0.e0;
          tensor[2] _t221D#1 = <tensor[2]>[_t2219,_t221B];
          real _t221F#1 = 0.1e1;
          real _t2221#1 = 0.e0;
          tensor[2] _t2223#1 = <tensor[2]>[_t221F,_t2221];
          real _t2225#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t2223);
          tensor[2] _t2227#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t221D,_t2225);
          real _t2229#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2217,_t2227);
          tensor[2] _t222B#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2229,_t1F95);
          tensor[2] _t222D#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t222B);
          tensor[2] _t222F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t220F,_t222D);
          real _t2231#1 = TensorIndex<tensor[2],[0]>(_t222F);
          real _t2233#1 = -0.e0;
          bool _t2235#1 = GT<real>(_t2231,_t2233);
          real _t2237#1 = 0.1e-8;
          real _t2239#1 = 0.1e-8;
          tensor[2] _t223B#1 = <tensor[2]>[_t2237,_t2239];
          real _t223D#1 = 0.e0;
          real _t223F#1 = 0.e0;
          tensor[2] _t2241#1 = <tensor[2]>[_t223D,_t223F];
          tensor[2] _t2243#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2241,_t1F7F);
          real _t2245#1 = 0.1e1;
          real _t2247#1 = 0.e0;
          tensor[2] _t2249#1 = <tensor[2]>[_t2245,_t2247];
          real _t224B#1 = 0.1e1;
          real _t224D#1 = 0.e0;
          tensor[2] _t224F#1 = <tensor[2]>[_t224B,_t224D];
          real _t2251#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t224F);
          tensor[2] _t2253#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2249,_t2251);
          real _t2255#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2243,_t2253);
          tensor[2] _t2257#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2255,_t1F95);
          tensor[2] _t2259#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1F7F,_t2257);
          tensor[2] _t225B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t223B,_t2259);
          real _t225D#1 = TensorIndex<tensor[2],[1]>(_t225B);
          real _t225F#1 = -0.e0;
          bool _t2261#1 = GT<real>(_t225D,_t225F);
          bool _t2263#1 = BAnd(_t2235,_t2261);
          bool _t2265#1 = BAnd(_t2209,_t2263);
          if _t2265 then goto ASSIGN2269 else goto JOIN2267
        ASSIGN2269:  preds = [COND2286]
          real _t2268#1 = 0.e0;
          real _t226A#1 = 0.e0;
          tensor[2] _t226C#1 = <tensor[2]>[_t2268,_t226A];
          tensor[2] _t226E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t226C,_t1F7F);
          real _t2270#1 = 0.1e1;
          real _t2272#1 = 0.e0;
          tensor[2] _t2274#1 = <tensor[2]>[_t2270,_t2272];
          real _t2276#1 = 0.1e1;
          real _t2278#1 = 0.e0;
          tensor[2] _t227A#1 = <tensor[2]>[_t2276,_t2278];
          real _t227C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1F95,_t227A);
          tensor[2] _t227E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2274,_t227C);
          real time2280#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t226E,_t227E);
          int face2283#1 = 2;
          goto JOIN2267
        JOIN2267:  preds = [ASSIGN2285,COND2286]
          int face2284#1 = phi(face2283,face218E)
          real time2281#1 = phi(time2280,time218D)
          goto JOIN21DC
        JOIN21DC:  preds = [JOIN2267,COND2289]
          int face2288#2 = phi(face2284,face218E)
          real time2287#1 = phi(time2281,time218D)
          int _t228A#1 = -1;
          bool _t228C#1 = NEQ<int>(face2288,_t228A);
          if _t228C then goto ASSIGN2290 else goto ASSIGN229B
        ASSIGN2290:  preds = [COND22A2]
          real _t228F#1 = 0.e0;
          real _t2291#1 = Max<real>(time2287,_t228F);
          real _t2293#1 = IntToReal(face2288);
          tensor[2] _t2295#1 = <tensor[2]>[_t2291,_t2293];
          tensor[2] _t2297#1 = _t2295;
          goto JOIN228E
        JOIN228E:  preds = [ASSIGN2299,ASSIGN22A1]
          tensor[2] _t2298#1 = phi(_t2297,_t22A0)
          real _t22A3#1 = TensorIndex<tensor[2],[1]>(_t2298);
          int _t22A5#1 = FloorToInt(_t22A3);
          femData:MeshPos p22A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t1877,_t1879,_t1C07,_t1F57,_t22A5);
          real newRayTime22A9#3 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (camNearVsp149B,camFarVsp149C,newTime1870);
          real[] normalizedTimes22AB#1 = Append<real>(normalizedTimes14EC,newRayTime22A9);
          femData:MeshPos[] poses22AE#1 = Append<femData:MeshPos>(poses14EB,p22A7);
          bool _t22B1#1 = GT<real>(startTime14EF,newRayTime22A9);
          if _t22B1 then goto ASSIGN22B6 else goto JOIN22B3
        ASSIGN22B6:  preds = [COND22BA]
          real startTime22B4#1 = newRayTime22A9;
          int currentCellInt22B7#1 = cellIntersects14ED;
          goto JOIN22B3
        JOIN22B3:  preds = [ASSIGN22B9,COND22BA]
          real startTime22B5#1 = phi(startTime22B4,startTime14EF)
          int currentCellInt22B8#1 = phi(currentCellInt22B7,currentCellInt14EE)
          int _t22BD#1 = 1;
          int cellIntersects22BF#1 = IAdd(cellIntersects14ED,_t22BD);
          goto JOIN1876
        JOIN1876:  preds = [ASSIGN22C1,COND22C2]
          real startTime22BC#1 = phi(startTime22B5,startTime14EF)
          int currentCellInt22BB#1 = phi(currentCellInt22B8,currentCellInt14EE)
          int cellIntersects22C0#1 = phi(cellIntersects22BF,cellIntersects14ED)
          real[] normalizedTimes22AC#1 = phi(normalizedTimes22AB,normalizedTimes14EC)
          femData:MeshPos[] poses22AF#1 = phi(poses22AE,poses14EB)
          goto JOIN14FE
        ASSIGN229B:  preds = [COND22A2]
          real _t229A#1 = -0.1e1;
          real _t229C#1 = -0.1e1;
          tensor[2] _t229E#1 = <tensor[2]>[_t229A,_t229C];
          tensor[2] _t22A0#1 = _t229E;
          goto JOIN228E
        ASSIGN1F4B:  preds = [COND1F52]
          real _t1F4A#1 = -0.1e1;
          real _t1F4C#1 = -0.1e1;
          tensor[2] _t1F4E#1 = <tensor[2]>[_t1F4A,_t1F4C];
          tensor[2] _t1F50#1 = _t1F4E;
          goto JOIN1F3E
        ASSIGN1BFB:  preds = [COND1C02]
          real _t1BFA#1 = -0.1e1;
          real _t1BFC#1 = -0.1e1;
          tensor[2] _t1BFE#1 = <tensor[2]>[_t1BFA,_t1BFC];
          tensor[2] _t1C00#1 = _t1BFE;
          goto JOIN1BEE
        ASSIGN1868:  preds = [COND186F]
          real _t1867#1 = -0.1e1;
          real _t1869#1 = -0.1e1;
          tensor[2] _t186B#1 = <tensor[2]>[_t1867,_t1869];
          tensor[2] _t186D#1 = _t186B;
          goto JOIN185B
        ASSIGN22C7:  preds = [FOREACH14F0]
          int _t22C6#1 = 0;
          bool _t22C8#1 = NEQ<int>(cellIntersects14ED,_t22C6);
          if _t22C8 then goto ASSIGN22CD else goto ASSIGN2313
        ASSIGN22CD:  preds = [COND232A]
          femData:MeshPos pos22CB#4 = Subscript<femData:MeshPos[]>(poses14EB,currentCellInt14EE);
          real rayN22CE#2 = Subscript<real[]>(normalizedTimes14EC,currentCellInt14EE);
          tensor[3] _t22D1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN22CE,rayVec149A);
          tensor[3] _t22D3#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1499,_t22D1);
          tensor[3][2] _t22D5#1 = <tensor[3][2]>{rayOrig1499,_t22D3};
          tensor[3][] _t22D7#1 = MkDynamic<tensor[3],2>(_t22D5);
          tensor[3][] spaceInter22D9#1 = Concat<tensor[3]>(spaceInter14A6,_t22D7);
          tensor[2] _t22DC#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos22CB);
          tensor[2][1] _t22DE#1 = <tensor[2][1]>{_t22DC};
          tensor[2][] _t22E0#1 = MkDynamic<tensor[2],1>(_t22DE);
          tensor[2][] refSpaceInter22E2#1 = _t22E0;
          femData:Mesh _t22E5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos22CB);
          int _t22E7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos22CB);
          femData:MeshCell currentCell22E9#2 = LoadFem<femData:MeshCell>(_t22E5,_t22E7);
          femData:MeshCell[1] _t22EC#1 = <femData:MeshCell[1]>{currentCell22E9};
          femData:MeshCell[] _t22EE#1 = MkDynamic<femData:MeshCell,1>(_t22EC);
          femData:MeshCell[] cellInter22F0#1 = _t22EE;
          string _t22F3#1 = "In the interval:";
          tensor[2] _t22F5#1 = <tensor[2]>[camNearVsp149B,camFarVsp149C];
          string _t22F7#1 = "\n";
          Print<[string,tensor[2],string]>(_t22F3,_t22F5,_t22F7);
          string _t22FA#1 = "Possible times:";
          string _t22FC#1 = "\n";
          Print<[string,real[],string]>(_t22FA,normalizedTimes14EC,_t22FC);
          string _t22FF#1 = "cells:";
          femData:MeshCell[] accum2301#1 = <femData:MeshCell[]>{};
        FOREACH2305:  preds = [ASSIGN2302,NEXT230E]
          foreach (p2303 in poses14EB) on exit goto ASSIGN2310
            femData:MeshCell[] accum2304#2 = phi(accum2301,accum230C)
          femData:Mesh _t2306#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p2303);
          int _t2308#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p2303);
          femData:MeshCell _t230A#1 = LoadFem<femData:MeshCell>(_t2306,_t2308);
          femData:MeshCell[] accum230C#1 = Append<femData:MeshCell>(accum2304,_t230A);
          goto FOREACH2305
        ASSIGN2310:  preds = [FOREACH2305]
          string _t230F#1 = "\n";
          Print<[string,femData:MeshCell[],string]>(_t22FF,accum2304,_t230F);
          goto JOIN22CA
        JOIN22CA:  preds = [MASSIGN2311,*STABILIZE231C]
          femData:MeshPos pos22CC#1 = phi(pos22CB)
          femData:MeshCell currentCell22EA#1 = phi(currentCell22E9)
          real rayN22CF#1 = phi(rayN22CE)
          femData:MeshCell[] cellInter22F1#1 = phi(cellInter22F0)
          tensor[2][] refSpaceInter22E3#1 = phi(refSpaceInter22E2)
          tensor[3][] spaceInter22DA#1 = phi(spaceInter22D9)
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.rayCellInter = rayCellInter14A5;
          self.spaceInter = spaceInter22DA;
          self.refSpaceInter = refSpaceInter22E3;
          self.cellInter = cellInter22F1;
          self.currentCellInt = currentCellInt14EE;
          self.rayN = rayN22CF;
          self.currentCell = currentCell22EA;
          self.steps = steps14AC;
          self.pos = pos22CC;
          self.startsInside = startsInside22C4;
          active
        ASSIGN2313:  preds = [COND232A]
          string _t2312#1 = "No intersection!\n";
          Print<[string]>(_t2312);
          string _t2315#1 = "Ui: ";
          string _t2317#1 = " Vi:";
          string _t2319#1 = "\n";
          Print<[string,int,string,int,string]>(_t2315,ui14AF,_t2317,vi14B0,_t2319);
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.rayCellInter = rayCellInter14A5;
          self.spaceInter = spaceInter14A6;
          self.refSpaceInter = refSpaceInter14A7;
          self.cellInter = cellInter14A8;
          self.currentCellInt = currentCellInt14EE;
          self.rayN = rayN14AA;
          self.currentCell = currentCell14AB;
          self.steps = steps14AC;
          self.pos = pos14AD;
          self.startsInside = startsInside22C4;
          stabilize
          goto JOIN22CA
        ASSIGN14D6:  preds = [COND14D7]
          bool _t14D5#1 = NEQ<int>(vi14B0,debugV148E);
          goto JOIN14D1
    end start
    method update
        ENTRY2AC0:  preds = []
          real rayU233A#0 = self.rayU;
          real rayV233B#0 = self.rayV;
          tensor[3] UV233C#0 = self.UV;
          tensor[3] rayOrig233D#5 = self.rayOrig;
          tensor[3] rayVec233E#7 = self.rayVec;
          real camNearVsp233F#0 = self.camNearVsp;
          real camFarVsp2340#6 = self.camFarVsp;
          tensor[3] rayStart2341#0 = self.rayStart;
          tensor[2] rayStartProj2342#0 = self.rayStartProj;
          tensor[3] rayEnd2343#0 = self.rayEnd;
          tensor[3] dpos2344#0 = self.dpos;
          tensor[2] dposProj2345#0 = self.dposProj;
          femData:MeshPos[] poses2346#6 = self.poses;
          real[] normalizedTimes2347#8 = self.normalizedTimes;
          int cellIntersects2348#5 = self.cellIntersects;
          tensor[2][] rayCellInter2349#2 = self.rayCellInter;
          tensor[3][] spaceInter234A#3 = self.spaceInter;
          tensor[2][] refSpaceInter234B#3 = self.refSpaceInter;
          femData:MeshCell[] cellInter234C#5 = self.cellInter;
          int currentCellInt234D#4 = self.currentCellInt;
          real rayN234E#8 = self.rayN;
          femData:MeshCell currentCell234F#3 = self.currentCell;
          int steps2350#1 = self.steps;
          femData:MeshPos pos2351#43 = self.pos;
          bool startsInside2352#6 = self.startsInside;
          int ui2353#1 = self.ui;
          int vi2354#1 = self.vi;
          string _t2370#1 = "Ui: ";
          string _t2372#1 = " vi: ";
          string _t2374#1 = "\n";
          Print<[string,int,string,int,string]>(_t2370,ui2353,_t2372,vi2354,_t2374);
          string _t2377#1 = "The current ref pos is:";
          tensor[2] _t2379#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          string _t237B#1 = "\n";
          Print<[string,tensor[2],string]>(_t2377,_t2379,_t237B);
          string _t237E#1 = "Current cell:";
          femData:Mesh _t2380#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2382#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2384#1 = LoadFem<femData:MeshCell>(_t2380,_t2382);
          string _t2386#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t237E,_t2384,_t2386);
          string _t2389#1 = "The current time is:";
          string _t238B#1 = "\n";
          Print<[string,real,string]>(_t2389,rayN234E,_t238B);
          string _t238E#1 = "The current world pos is:";
          tensor[2] _t2391#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          int _t2393#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:Mesh _t2395#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          field _t2398#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2393,_t2395,_t2395);
          tensor[2] _t239A#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2398,_t2391);
          tensor[2] _t239C#1 = _t239A;
          tensor[2] _t239E#1 = _t239C;
          string _t23A0#1 = "\n";
          Print<[string,tensor[2],string]>(_t238E,_t239E,_t23A0);
          tensor[3] _t23A3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN234E,rayVec233E);
          tensor[3] stupid23A5#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t23A3);
          string _t23A7#1 = "The current world pos should be:";
          real _t23A9#1 = TensorIndex<tensor[3],[0]>(stupid23A5);
          real _t23AB#1 = TensorIndex<tensor[3],[1]>(stupid23A5);
          tensor[2] _t23AD#1 = <tensor[2]>[_t23A9,_t23AB];
          string _t23AF#1 = "\n";
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t23AF);
          real _t23B2#1 = 0.1e1;
          real _t23B4#1 = 0.1e-8;
          real _t23B6#1 = λ(T0[],T1[])<(T0 + T1)> (_t23B2,_t23B4);
          real _t23B8#1 = 0.1e1;
          real _t23BA#1 = 0.1e1;
          tensor[2] _t23BC#1 = <tensor[2]>[_t23B8,_t23BA];
          tensor[2] _t23BE#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          real _t23C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t23BC,_t23BE);
          bool _t23C2#1 = GT<real>(_t23B6,_t23C0);
          real _t23C4#1 = 0.1e-8;
          real _t23C6#1 = 0.1e-8;
          tensor[2] _t23C8#1 = <tensor[2]>[_t23C4,_t23C6];
          tensor[2] _t23CA#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          tensor[2] _t23CC#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t23C8,_t23CA);
          real _t23CE#1 = TensorIndex<tensor[2],[0]>(_t23CC);
          real _t23D0#1 = -0.e0;
          bool _t23D2#1 = GT<real>(_t23CE,_t23D0);
          real _t23D4#1 = 0.1e-8;
          real _t23D6#1 = 0.1e-8;
          tensor[2] _t23D8#1 = <tensor[2]>[_t23D4,_t23D6];
          tensor[2] _t23DA#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          tensor[2] _t23DC#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t23D8,_t23DA);
          real _t23DE#1 = TensorIndex<tensor[2],[1]>(_t23DC);
          real _t23E0#1 = -0.e0;
          bool _t23E2#1 = GT<real>(_t23DE,_t23E0);
          bool _t23E4#1 = BAnd(_t23D2,_t23E2);
          bool _t23E6#1 = BAnd(_t23C2,_t23E4);
          bool _t23E8#1 = BNot(_t23E6);
          if _t23E8 then goto ASSIGN23EC else goto JOIN23EA
        ASSIGN23EC:  preds = [COND23F5]
          string _t23EB#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t23EB);
          bool _t23EE#1 = BNot(startsInside2352);
          if _t23EE then goto ASSIGN23F2 else goto JOIN23F0
        ASSIGN23F2:  preds = [COND23F4]
          string _t23F1#1 = "Not because of an inside\n";
          Print<[string]>(_t23F1);
          goto JOIN23F0
        JOIN23F0:  preds = [MASSIGN23F3,COND23F4]
          goto JOIN23EA
        JOIN23EA:  preds = [JOIN23F0,COND23F5]
          string _t23F6#1 = "The current world pos is:";
          tensor[2] _t23F9#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          int _t23FB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:Mesh _t23FD#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          field _t2400#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t23FB,_t23FD,_t23FD);
          tensor[2] _t2402#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2400,_t23F9);
          tensor[2] _t2404#1 = _t2402;
          tensor[2] _t2406#1 = _t2404;
          string _t2408#1 = "\n";
          Print<[string,tensor[2],string]>(_t23F6,_t2406,_t2408);
          tensor[3] _t240B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN234E,rayVec233E);
          tensor[3] cpos240D#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t240B);
          string _t240F#1 = "The current world pos should be:";
          real _t2411#1 = TensorIndex<tensor[3],[0]>(cpos240D);
          real _t2413#1 = TensorIndex<tensor[3],[1]>(cpos240D);
          tensor[2] _t2415#1 = <tensor[2]>[_t2411,_t2413];
          string _t2417#1 = "\n";
          Print<[string,tensor[2],string]>(_t240F,_t2415,_t2417);
          tensor[2] _t241B#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          int _t241D#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:Mesh _t241F#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          field _t2422#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t241D,_t241F,_t241F);
          tensor[2] _t2424#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2422,_t241B);
          tensor[2] _t2426#1 = _t2424;
          tensor[2] _t2428#1 = _t2426;
          real _t242A#1 = TensorIndex<tensor[3],[0]>(cpos240D);
          real _t242C#1 = TensorIndex<tensor[3],[1]>(cpos240D);
          tensor[2] _t242E#1 = <tensor[2]>[_t242A,_t242C];
          tensor[2] _t2430#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2428,_t242E);
          real err2432#2 = λ(T0[2])<Sqrt(Σ(i0=0..1)<((T0_{i0} * T0_{i0}))>(i0=0..1))> (_t2430);
          real _t2434#1 = 0.1e-4;
          bool _t2436#1 = GT<real>(err2432,_t2434);
          if _t2436 then goto ASSIGN243A else goto ASSIGN243F
        ASSIGN243A:  preds = [COND2441]
          string _t2439#1 = "nerror:Warning! Moved off ray:";
          string _t243B#1 = "\n";
          Print<[string,real,string]>(_t2439,err2432,_t243B);
          goto JOIN2438
        JOIN2438:  preds = [MASSIGN243D,MASSIGN2440]
          int _t2442#1 = 1;
          int steps2444#4 = IAdd(steps2350,_t2442);
          string _t2446#1 = "Orig:";
          string _t2448#1 = " dir:";
          string _t244A#1 = "\n";
          Print<[string,tensor[3],string,tensor[3],string]>(_t2446,rayOrig233D,_t2448,rayVec233E,_t244A);
          real _t244D#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp2340,rayN234E);
          tensor[3] newDpos244F#6 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t244D,rayVec233E);
          tensor[2] _t2451#12 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t2453#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2455#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2457#1 = LoadFem<femData:MeshCell>(_t2453,_t2455);
          femData:Mesh _t2459#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2457);
          femData:Mesh _t245B#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t245D#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t245F#1 = LoadFem<femData:MeshCell>(_t245B,_t245D);
          femData:Mesh _t2461#0 = ExtractFem<femData:Mesh,femData:MeshCell>(_t245F);
          femData:Mesh _t2463#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2465#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2467#1 = LoadFem<femData:MeshCell>(_t2463,_t2465);
          int _t2469#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2467);
          field _t246B#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2469,_t2459,_t2459);
          field _t246D#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t246B);
          real _t246F#1 = -0.e0;
          real _t2471#1 = -0.e0;
          tensor[2] _t2473#1 = <tensor[2]>[_t246F,_t2471];
          tensor[2,2] _t2475#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t246D,_t2473);
          tensor[2,2] _t2477#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t2475);
          real _t2479#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t247B#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t247D#1 = <tensor[2]>[_t2479,_t247B];
          tensor[2] _t247F#15 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t2477,_t247D);
          int _t2481#4 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos2351);
          real time2484#3 = +inf;
          int face2486#2 = -1;
          real faceTime2488#2 = -inf;
          real _t248A#1 = 0.1e1;
          real _t248C#1 = 0.e0;
          tensor[2] _t248E#1 = <tensor[2]>[_t248A,_t248C];
          tensor[2] _t2490#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t248E,_t2451);
          real _t2492#1 = -0.1e1;
          real _t2494#1 = 0.1e1;
          tensor[2] _t2496#1 = <tensor[2]>[_t2492,_t2494];
          real _t2498#1 = -0.1e1;
          real _t249A#1 = 0.1e1;
          tensor[2] _t249C#1 = <tensor[2]>[_t2498,_t249A];
          real _t249E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t249C);
          tensor[2] _t24A0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2496,_t249E);
          real _t24A2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2490,_t24A0);
          real _t24A4#1 = -0.1e-15;
          bool _t24A6#1 = GTE<real>(_t24A2,_t24A4);
          real _t24A8#1 = 0.1e1;
          real _t24AA#1 = 0.e0;
          tensor[2] _t24AC#1 = <tensor[2]>[_t24A8,_t24AA];
          tensor[2] _t24AE#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t24AC,_t2451);
          real _t24B0#1 = -0.1e1;
          real _t24B2#1 = 0.1e1;
          tensor[2] _t24B4#1 = <tensor[2]>[_t24B0,_t24B2];
          real _t24B6#1 = -0.1e1;
          real _t24B8#1 = 0.1e1;
          tensor[2] _t24BA#1 = <tensor[2]>[_t24B6,_t24B8];
          real _t24BC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t24BA);
          tensor[2] _t24BE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t24B4,_t24BC);
          real _t24C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t24AE,_t24BE);
          bool _t24C2#1 = GT<real>(time2484,_t24C0);
          real _t24C4#1 = -0.1e1;
          real _t24C6#1 = 0.1e1;
          tensor[2] _t24C8#1 = <tensor[2]>[_t24C4,_t24C6];
          real _t24CA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t24C8);
          real _t24CC#1 = λ(T0[])<Abs(T0)> (_t24CA);
          real _t24CE#1 = 0.1e-20;
          bool _t24D0#1 = GTE<real>(_t24CC,_t24CE);
          bool _t24D2#1 = BAnd(_t24C2,_t24D0);
          bool _t24D4#1 = BAnd(_t24A6,_t24D2);
          if _t24D4 then goto ASSIGN24D8 else goto JOIN24D6
        ASSIGN24D8:  preds = [COND2519]
          int _t24D7#1 = 0;
          bool _t24D9#1 = NEQ<int>(_t2481,_t24D7);
          if _t24D9 then goto ASSIGN24DD else goto ASSIGN24FB
        ASSIGN24DD:  preds = [COND2515]
          real _t24DC#1 = 0.1e1;
          real _t24DE#1 = 0.e0;
          tensor[2] _t24E0#1 = <tensor[2]>[_t24DC,_t24DE];
          tensor[2] _t24E2#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t24E0,_t2451);
          real _t24E4#1 = -0.1e1;
          real _t24E6#1 = 0.1e1;
          tensor[2] _t24E8#1 = <tensor[2]>[_t24E4,_t24E6];
          real _t24EA#1 = -0.1e1;
          real _t24EC#1 = 0.1e1;
          tensor[2] _t24EE#1 = <tensor[2]>[_t24EA,_t24EC];
          real _t24F0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t24EE);
          tensor[2] _t24F2#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t24E8,_t24F0);
          real time24F4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t24E2,_t24F2);
          int face24F7#1 = 0;
          goto JOIN24DB
        JOIN24DB:  preds = [ASSIGN24F9,ASSIGN2514]
          real faceTime2513#1 = phi(faceTime2488,faceTime2512)
          int face24F8#1 = phi(face24F7,face2486)
          real time24F5#1 = phi(time24F4,time2484)
          goto JOIN24D6
        JOIN24D6:  preds = [JOIN24DB,COND2519]
          real faceTime2518#2 = phi(faceTime2513,faceTime2488)
          int face2517#2 = phi(face24F8,face2486)
          real time2516#3 = phi(time24F5,time2484)
          real _t251A#1 = 0.e0;
          real _t251C#1 = 0.e0;
          tensor[2] _t251E#1 = <tensor[2]>[_t251A,_t251C];
          tensor[2] _t2520#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t251E,_t2451);
          real _t2522#1 = 0.e0;
          real _t2524#1 = 0.1e1;
          tensor[2] _t2526#1 = <tensor[2]>[_t2522,_t2524];
          real _t2528#1 = 0.e0;
          real _t252A#1 = 0.1e1;
          tensor[2] _t252C#1 = <tensor[2]>[_t2528,_t252A];
          real _t252E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t252C);
          tensor[2] _t2530#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2526,_t252E);
          real _t2532#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2520,_t2530);
          real _t2534#1 = -0.1e-15;
          bool _t2536#1 = GTE<real>(_t2532,_t2534);
          real _t2538#1 = 0.e0;
          real _t253A#1 = 0.e0;
          tensor[2] _t253C#1 = <tensor[2]>[_t2538,_t253A];
          tensor[2] _t253E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t253C,_t2451);
          real _t2540#1 = 0.e0;
          real _t2542#1 = 0.1e1;
          tensor[2] _t2544#1 = <tensor[2]>[_t2540,_t2542];
          real _t2546#1 = 0.e0;
          real _t2548#1 = 0.1e1;
          tensor[2] _t254A#1 = <tensor[2]>[_t2546,_t2548];
          real _t254C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t254A);
          tensor[2] _t254E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2544,_t254C);
          real _t2550#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t253E,_t254E);
          bool _t2552#1 = GT<real>(time2516,_t2550);
          real _t2554#1 = 0.e0;
          real _t2556#1 = 0.1e1;
          tensor[2] _t2558#1 = <tensor[2]>[_t2554,_t2556];
          real _t255A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t2558);
          real _t255C#1 = λ(T0[])<Abs(T0)> (_t255A);
          real _t255E#1 = 0.1e-20;
          bool _t2560#1 = GTE<real>(_t255C,_t255E);
          bool _t2562#1 = BAnd(_t2552,_t2560);
          bool _t2564#1 = BAnd(_t2536,_t2562);
          if _t2564 then goto ASSIGN2568 else goto JOIN2566
        ASSIGN2568:  preds = [COND25A9]
          int _t2567#1 = 1;
          bool _t2569#1 = NEQ<int>(_t2481,_t2567);
          if _t2569 then goto ASSIGN256D else goto ASSIGN258B
        ASSIGN256D:  preds = [COND25A5]
          real _t256C#1 = 0.e0;
          real _t256E#1 = 0.e0;
          tensor[2] _t2570#1 = <tensor[2]>[_t256C,_t256E];
          tensor[2] _t2572#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2570,_t2451);
          real _t2574#1 = 0.e0;
          real _t2576#1 = 0.1e1;
          tensor[2] _t2578#1 = <tensor[2]>[_t2574,_t2576];
          real _t257A#1 = 0.e0;
          real _t257C#1 = 0.1e1;
          tensor[2] _t257E#1 = <tensor[2]>[_t257A,_t257C];
          real _t2580#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t257E);
          tensor[2] _t2582#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2578,_t2580);
          real time2584#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2572,_t2582);
          int face2587#1 = 1;
          goto JOIN256B
        JOIN256B:  preds = [ASSIGN2589,ASSIGN25A4]
          real faceTime25A3#1 = phi(faceTime2518,faceTime25A2)
          int face2588#1 = phi(face2587,face2517)
          real time2585#1 = phi(time2584,time2516)
          goto JOIN2566
        JOIN2566:  preds = [JOIN256B,COND25A9]
          real faceTime25A8#2 = phi(faceTime25A3,faceTime2518)
          int face25A7#2 = phi(face2588,face2517)
          real time25A6#3 = phi(time2585,time2516)
          real _t25AA#1 = 0.e0;
          real _t25AC#1 = 0.e0;
          tensor[2] _t25AE#1 = <tensor[2]>[_t25AA,_t25AC];
          tensor[2] _t25B0#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t25AE,_t2451);
          real _t25B2#1 = 0.1e1;
          real _t25B4#1 = 0.e0;
          tensor[2] _t25B6#1 = <tensor[2]>[_t25B2,_t25B4];
          real _t25B8#1 = 0.1e1;
          real _t25BA#1 = 0.e0;
          tensor[2] _t25BC#1 = <tensor[2]>[_t25B8,_t25BA];
          real _t25BE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t25BC);
          tensor[2] _t25C0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t25B6,_t25BE);
          real _t25C2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t25B0,_t25C0);
          real _t25C4#1 = -0.1e-15;
          bool _t25C6#1 = GTE<real>(_t25C2,_t25C4);
          real _t25C8#1 = 0.e0;
          real _t25CA#1 = 0.e0;
          tensor[2] _t25CC#1 = <tensor[2]>[_t25C8,_t25CA];
          tensor[2] _t25CE#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t25CC,_t2451);
          real _t25D0#1 = 0.1e1;
          real _t25D2#1 = 0.e0;
          tensor[2] _t25D4#1 = <tensor[2]>[_t25D0,_t25D2];
          real _t25D6#1 = 0.1e1;
          real _t25D8#1 = 0.e0;
          tensor[2] _t25DA#1 = <tensor[2]>[_t25D6,_t25D8];
          real _t25DC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t25DA);
          tensor[2] _t25DE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t25D4,_t25DC);
          real _t25E0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t25CE,_t25DE);
          bool _t25E2#1 = GT<real>(time25A6,_t25E0);
          real _t25E4#1 = 0.1e1;
          real _t25E6#1 = 0.e0;
          tensor[2] _t25E8#1 = <tensor[2]>[_t25E4,_t25E6];
          real _t25EA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t25E8);
          real _t25EC#1 = λ(T0[])<Abs(T0)> (_t25EA);
          real _t25EE#1 = 0.1e-20;
          bool _t25F0#1 = GTE<real>(_t25EC,_t25EE);
          bool _t25F2#1 = BAnd(_t25E2,_t25F0);
          bool _t25F4#1 = BAnd(_t25C6,_t25F2);
          if _t25F4 then goto ASSIGN25F8 else goto JOIN25F6
        ASSIGN25F8:  preds = [COND2639]
          int _t25F7#1 = 2;
          bool _t25F9#1 = NEQ<int>(_t2481,_t25F7);
          if _t25F9 then goto ASSIGN25FD else goto ASSIGN261B
        ASSIGN25FD:  preds = [COND2635]
          real _t25FC#1 = 0.e0;
          real _t25FE#1 = 0.e0;
          tensor[2] _t2600#1 = <tensor[2]>[_t25FC,_t25FE];
          tensor[2] _t2602#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2600,_t2451);
          real _t2604#1 = 0.1e1;
          real _t2606#1 = 0.e0;
          tensor[2] _t2608#1 = <tensor[2]>[_t2604,_t2606];
          real _t260A#1 = 0.1e1;
          real _t260C#1 = 0.e0;
          tensor[2] _t260E#1 = <tensor[2]>[_t260A,_t260C];
          real _t2610#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t260E);
          tensor[2] _t2612#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2608,_t2610);
          real time2614#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2602,_t2612);
          int face2617#1 = 2;
          goto JOIN25FB
        JOIN25FB:  preds = [ASSIGN2619,ASSIGN2634]
          real faceTime2633#1 = phi(faceTime25A8,faceTime2632)
          int face2618#1 = phi(face2617,face25A7)
          real time2615#1 = phi(time2614,time25A6)
          goto JOIN25F6
        JOIN25F6:  preds = [JOIN25FB,COND2639]
          real faceTime2638#2 = phi(faceTime2633,faceTime25A8)
          int face2637#2 = phi(face2618,face25A7)
          real time2636#1 = phi(time2615,time25A6)
          int _t263A#1 = -1;
          bool _t263C#1 = NEQ<int>(face2637,_t263A);
          if _t263C then goto ASSIGN2640 else goto ASSIGN264B
        ASSIGN2640:  preds = [COND265F]
          real _t263F#1 = 0.e0;
          real _t2641#1 = Max<real>(time2636,_t263F);
          real _t2643#1 = IntToReal(face2637);
          tensor[2] _t2645#1 = <tensor[2]>[_t2641,_t2643];
          tensor[2] _t2647#1 = _t2645;
          goto JOIN263E
        JOIN263E:  preds = [ASSIGN2649,JOIN264E]
          tensor[2] _t2648#1 = phi(_t2647,_t2656)
          real nextTime2660#3 = TensorIndex<tensor[2],[0]>(_t2648);
          real _t2662#1 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (rayN234E,camFarVsp2340,nextTime2660);
          real _t2664#1 = Min<real>(camFarVsp2340,_t2662);
          real rayNp2666#2 = Max<real>(rayN234E,_t2664);
          string _t2668#1 = "Next time:";
          string _t266A#1 = "\n";
          Print<[string,real,string]>(_t2668,nextTime2660,_t266A);
          real _t266D#1 = 0.e0;
          bool _t266F#1 = GTE<real>(nextTime2660,_t266D);
          if _t266F then goto ASSIGN2673 else goto JOIN2671
        ASSIGN2673:  preds = [COND2A09]
          tensor[2] _t2672#1 = <tensor[2]>[rayN234E,rayNp2666];
          tensor[2][] rayCellInter2674#3 = Append<tensor[2]>(rayCellInter2349,_t2672);
          real rayN2677#5 = rayNp2666;
          femData:Mesh _t267A#7 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t267C#5 = ExtractFemItem<int,CellIndex(Mesh)>(pos2351);
          tensor[2] _t267E#3 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t2680#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2682#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2684#1 = LoadFem<femData:MeshCell>(_t2680,_t2682);
          femData:Mesh _t2686#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2684);
          femData:Mesh _t2688#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t268A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t268C#1 = LoadFem<femData:MeshCell>(_t2688,_t268A);
          femData:Mesh _t268E#0 = ExtractFem<femData:Mesh,femData:MeshCell>(_t268C);
          femData:Mesh _t2690#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2692#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2694#1 = LoadFem<femData:MeshCell>(_t2690,_t2692);
          int _t2696#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2694);
          field _t2698#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2696,_t2686,_t2686);
          field _t269A#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t2698);
          field _t269C#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t269A);
          real _t269E#1 = -0.e0;
          real _t26A0#1 = -0.e0;
          tensor[2] _t26A2#1 = <tensor[2]>[_t269E,_t26A0];
          tensor[2,2] _t26A4#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t269C,_t26A2);
          real _t26A6#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t26A8#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t26AA#1 = <tensor[2]>[_t26A6,_t26A8];
          tensor[2] _t26AC#3 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t26A4,_t26AA);
          tensor[2] _t26AE#12 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t26B0#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t26B2#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t26B4#1 = LoadFem<femData:MeshCell>(_t26B0,_t26B2);
          femData:Mesh _t26B6#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t26B4);
          femData:Mesh _t26B8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t26BA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t26BC#1 = LoadFem<femData:MeshCell>(_t26B8,_t26BA);
          femData:Mesh _t26BE#0 = ExtractFem<femData:Mesh,femData:MeshCell>(_t26BC);
          femData:Mesh _t26C0#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t26C2#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t26C4#1 = LoadFem<femData:MeshCell>(_t26C0,_t26C2);
          int _t26C6#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t26C4);
          field _t26C8#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t26C6,_t26B6,_t26B6);
          field _t26CA#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t26C8);
          field _t26CC#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t26CA);
          real _t26CE#1 = -0.e0;
          real _t26D0#1 = -0.e0;
          tensor[2] _t26D2#1 = <tensor[2]>[_t26CE,_t26D0];
          tensor[2,2] _t26D4#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t26CC,_t26D2);
          real _t26D6#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t26D8#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t26DA#1 = <tensor[2]>[_t26D6,_t26D8];
          tensor[2] _t26DC#15 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t26D4,_t26DA);
          int _t26DE#4 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos2351);
          real time26E1#3 = +inf;
          int face26E3#2 = -1;
          real faceTime26E5#2 = -inf;
          real _t26E7#1 = 0.1e1;
          real _t26E9#1 = 0.e0;
          tensor[2] _t26EB#1 = <tensor[2]>[_t26E7,_t26E9];
          tensor[2] _t26ED#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t26EB,_t26AE);
          real _t26EF#1 = -0.1e1;
          real _t26F1#1 = 0.1e1;
          tensor[2] _t26F3#1 = <tensor[2]>[_t26EF,_t26F1];
          real _t26F5#1 = -0.1e1;
          real _t26F7#1 = 0.1e1;
          tensor[2] _t26F9#1 = <tensor[2]>[_t26F5,_t26F7];
          real _t26FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t26F9);
          tensor[2] _t26FD#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t26F3,_t26FB);
          real _t26FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26ED,_t26FD);
          real _t2701#1 = -0.1e-15;
          bool _t2703#1 = GTE<real>(_t26FF,_t2701);
          real _t2705#1 = 0.1e1;
          real _t2707#1 = 0.e0;
          tensor[2] _t2709#1 = <tensor[2]>[_t2705,_t2707];
          tensor[2] _t270B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2709,_t26AE);
          real _t270D#1 = -0.1e1;
          real _t270F#1 = 0.1e1;
          tensor[2] _t2711#1 = <tensor[2]>[_t270D,_t270F];
          real _t2713#1 = -0.1e1;
          real _t2715#1 = 0.1e1;
          tensor[2] _t2717#1 = <tensor[2]>[_t2713,_t2715];
          real _t2719#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2717);
          tensor[2] _t271B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2711,_t2719);
          real _t271D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t270B,_t271B);
          bool _t271F#1 = GT<real>(time26E1,_t271D);
          real _t2721#1 = -0.1e1;
          real _t2723#1 = 0.1e1;
          tensor[2] _t2725#1 = <tensor[2]>[_t2721,_t2723];
          real _t2727#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2725);
          real _t2729#1 = λ(T0[])<Abs(T0)> (_t2727);
          real _t272B#1 = 0.1e-20;
          bool _t272D#1 = GTE<real>(_t2729,_t272B);
          bool _t272F#1 = BAnd(_t271F,_t272D);
          bool _t2731#1 = BAnd(_t2703,_t272F);
          if _t2731 then goto ASSIGN2735 else goto JOIN2733
        ASSIGN2735:  preds = [COND2776]
          int _t2734#1 = 0;
          bool _t2736#1 = NEQ<int>(_t26DE,_t2734);
          if _t2736 then goto ASSIGN273A else goto ASSIGN2758
        ASSIGN273A:  preds = [COND2772]
          real _t2739#1 = 0.1e1;
          real _t273B#1 = 0.e0;
          tensor[2] _t273D#1 = <tensor[2]>[_t2739,_t273B];
          tensor[2] _t273F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t273D,_t26AE);
          real _t2741#1 = -0.1e1;
          real _t2743#1 = 0.1e1;
          tensor[2] _t2745#1 = <tensor[2]>[_t2741,_t2743];
          real _t2747#1 = -0.1e1;
          real _t2749#1 = 0.1e1;
          tensor[2] _t274B#1 = <tensor[2]>[_t2747,_t2749];
          real _t274D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t274B);
          tensor[2] _t274F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2745,_t274D);
          real time2751#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t273F,_t274F);
          int face2754#1 = 0;
          goto JOIN2738
        JOIN2738:  preds = [ASSIGN2756,ASSIGN2771]
          real faceTime2770#1 = phi(faceTime26E5,faceTime276F)
          int face2755#1 = phi(face2754,face26E3)
          real time2752#1 = phi(time2751,time26E1)
          goto JOIN2733
        JOIN2733:  preds = [JOIN2738,COND2776]
          real faceTime2775#2 = phi(faceTime2770,faceTime26E5)
          int face2774#2 = phi(face2755,face26E3)
          real time2773#3 = phi(time2752,time26E1)
          real _t2777#1 = 0.e0;
          real _t2779#1 = 0.e0;
          tensor[2] _t277B#1 = <tensor[2]>[_t2777,_t2779];
          tensor[2] _t277D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t277B,_t26AE);
          real _t277F#1 = 0.e0;
          real _t2781#1 = 0.1e1;
          tensor[2] _t2783#1 = <tensor[2]>[_t277F,_t2781];
          real _t2785#1 = 0.e0;
          real _t2787#1 = 0.1e1;
          tensor[2] _t2789#1 = <tensor[2]>[_t2785,_t2787];
          real _t278B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2789);
          tensor[2] _t278D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2783,_t278B);
          real _t278F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t277D,_t278D);
          real _t2791#1 = -0.1e-15;
          bool _t2793#1 = GTE<real>(_t278F,_t2791);
          real _t2795#1 = 0.e0;
          real _t2797#1 = 0.e0;
          tensor[2] _t2799#1 = <tensor[2]>[_t2795,_t2797];
          tensor[2] _t279B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2799,_t26AE);
          real _t279D#1 = 0.e0;
          real _t279F#1 = 0.1e1;
          tensor[2] _t27A1#1 = <tensor[2]>[_t279D,_t279F];
          real _t27A3#1 = 0.e0;
          real _t27A5#1 = 0.1e1;
          tensor[2] _t27A7#1 = <tensor[2]>[_t27A3,_t27A5];
          real _t27A9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t27A7);
          tensor[2] _t27AB#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t27A1,_t27A9);
          real _t27AD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t279B,_t27AB);
          bool _t27AF#1 = GT<real>(time2773,_t27AD);
          real _t27B1#1 = 0.e0;
          real _t27B3#1 = 0.1e1;
          tensor[2] _t27B5#1 = <tensor[2]>[_t27B1,_t27B3];
          real _t27B7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t27B5);
          real _t27B9#1 = λ(T0[])<Abs(T0)> (_t27B7);
          real _t27BB#1 = 0.1e-20;
          bool _t27BD#1 = GTE<real>(_t27B9,_t27BB);
          bool _t27BF#1 = BAnd(_t27AF,_t27BD);
          bool _t27C1#1 = BAnd(_t2793,_t27BF);
          if _t27C1 then goto ASSIGN27C5 else goto JOIN27C3
        ASSIGN27C5:  preds = [COND2806]
          int _t27C4#1 = 1;
          bool _t27C6#1 = NEQ<int>(_t26DE,_t27C4);
          if _t27C6 then goto ASSIGN27CA else goto ASSIGN27E8
        ASSIGN27CA:  preds = [COND2802]
          real _t27C9#1 = 0.e0;
          real _t27CB#1 = 0.e0;
          tensor[2] _t27CD#1 = <tensor[2]>[_t27C9,_t27CB];
          tensor[2] _t27CF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t27CD,_t26AE);
          real _t27D1#1 = 0.e0;
          real _t27D3#1 = 0.1e1;
          tensor[2] _t27D5#1 = <tensor[2]>[_t27D1,_t27D3];
          real _t27D7#1 = 0.e0;
          real _t27D9#1 = 0.1e1;
          tensor[2] _t27DB#1 = <tensor[2]>[_t27D7,_t27D9];
          real _t27DD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t27DB);
          tensor[2] _t27DF#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t27D5,_t27DD);
          real time27E1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t27CF,_t27DF);
          int face27E4#1 = 1;
          goto JOIN27C8
        JOIN27C8:  preds = [ASSIGN27E6,ASSIGN2801]
          real faceTime2800#1 = phi(faceTime2775,faceTime27FF)
          int face27E5#1 = phi(face27E4,face2774)
          real time27E2#1 = phi(time27E1,time2773)
          goto JOIN27C3
        JOIN27C3:  preds = [JOIN27C8,COND2806]
          real faceTime2805#2 = phi(faceTime2800,faceTime2775)
          int face2804#2 = phi(face27E5,face2774)
          real time2803#3 = phi(time27E2,time2773)
          real _t2807#1 = 0.e0;
          real _t2809#1 = 0.e0;
          tensor[2] _t280B#1 = <tensor[2]>[_t2807,_t2809];
          tensor[2] _t280D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t280B,_t26AE);
          real _t280F#1 = 0.1e1;
          real _t2811#1 = 0.e0;
          tensor[2] _t2813#1 = <tensor[2]>[_t280F,_t2811];
          real _t2815#1 = 0.1e1;
          real _t2817#1 = 0.e0;
          tensor[2] _t2819#1 = <tensor[2]>[_t2815,_t2817];
          real _t281B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2819);
          tensor[2] _t281D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2813,_t281B);
          real _t281F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t280D,_t281D);
          real _t2821#1 = -0.1e-15;
          bool _t2823#1 = GTE<real>(_t281F,_t2821);
          real _t2825#1 = 0.e0;
          real _t2827#1 = 0.e0;
          tensor[2] _t2829#1 = <tensor[2]>[_t2825,_t2827];
          tensor[2] _t282B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t2829,_t26AE);
          real _t282D#1 = 0.1e1;
          real _t282F#1 = 0.e0;
          tensor[2] _t2831#1 = <tensor[2]>[_t282D,_t282F];
          real _t2833#1 = 0.1e1;
          real _t2835#1 = 0.e0;
          tensor[2] _t2837#1 = <tensor[2]>[_t2833,_t2835];
          real _t2839#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2837);
          tensor[2] _t283B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2831,_t2839);
          real _t283D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t282B,_t283B);
          bool _t283F#1 = GT<real>(time2803,_t283D);
          real _t2841#1 = 0.1e1;
          real _t2843#1 = 0.e0;
          tensor[2] _t2845#1 = <tensor[2]>[_t2841,_t2843];
          real _t2847#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2845);
          real _t2849#1 = λ(T0[])<Abs(T0)> (_t2847);
          real _t284B#1 = 0.1e-20;
          bool _t284D#1 = GTE<real>(_t2849,_t284B);
          bool _t284F#1 = BAnd(_t283F,_t284D);
          bool _t2851#1 = BAnd(_t2823,_t284F);
          if _t2851 then goto ASSIGN2855 else goto JOIN2853
        ASSIGN2855:  preds = [COND2896]
          int _t2854#1 = 2;
          bool _t2856#1 = NEQ<int>(_t26DE,_t2854);
          if _t2856 then goto ASSIGN285A else goto ASSIGN2878
        ASSIGN285A:  preds = [COND2892]
          real _t2859#1 = 0.e0;
          real _t285B#1 = 0.e0;
          tensor[2] _t285D#1 = <tensor[2]>[_t2859,_t285B];
          tensor[2] _t285F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t285D,_t26AE);
          real _t2861#1 = 0.1e1;
          real _t2863#1 = 0.e0;
          tensor[2] _t2865#1 = <tensor[2]>[_t2861,_t2863];
          real _t2867#1 = 0.1e1;
          real _t2869#1 = 0.e0;
          tensor[2] _t286B#1 = <tensor[2]>[_t2867,_t2869];
          real _t286D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t286B);
          tensor[2] _t286F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2865,_t286D);
          real time2871#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t285F,_t286F);
          int face2874#1 = 2;
          goto JOIN2858
        JOIN2858:  preds = [ASSIGN2876,ASSIGN2891]
          real faceTime2890#1 = phi(faceTime2805,faceTime288F)
          int face2875#1 = phi(face2874,face2804)
          real time2872#1 = phi(time2871,time2803)
          goto JOIN2853
        JOIN2853:  preds = [JOIN2858,COND2896]
          real faceTime2895#2 = phi(faceTime2890,faceTime2805)
          int face2894#2 = phi(face2875,face2804)
          real time2893#1 = phi(time2872,time2803)
          int _t2897#1 = -1;
          bool _t2899#1 = NEQ<int>(face2894,_t2897);
          if _t2899 then goto ASSIGN289D else goto ASSIGN28A8
        ASSIGN289D:  preds = [COND28BC]
          real _t289C#1 = 0.e0;
          real _t289E#1 = Max<real>(time2893,_t289C);
          real _t28A0#1 = IntToReal(face2894);
          tensor[2] _t28A2#1 = <tensor[2]>[_t289E,_t28A0];
          tensor[2] _t28A4#1 = _t28A2;
          goto JOIN289B
        JOIN289B:  preds = [ASSIGN28A6,JOIN28AB]
          tensor[2] _t28A5#13 = phi(_t28A4,_t28B3)
          int _t28BE#1 = -1;
          real _t28C0#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28C2#1 = FloorToInt(_t28C0);
          int[2] _t28C4#1 = nextCell4132A (_t28C2,_t267C,_t267A);
          int _t28C6#1 = 0;
          int _t28C8#1 = Subscript<int[2]>(_t28C4,_t28C6);
          bool _t28CA#1 = NEQ<int>(_t28BE,_t28C8);
          if _t28CA then goto ASSIGN28CE else goto ASSIGN29A5
        ASSIGN28CE:  preds = [COND29AE]
          real _t28CD#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28CF#1 = FloorToInt(_t28CD);
          int[2] _t28D1#1 = nextCell4132A (_t28CF,_t267C,_t267A);
          int _t28D3#1 = 0;
          int _t28D5#1 = Subscript<int[2]>(_t28D1,_t28D3);
          real _t28D7#1 = 0.1e1;
          real _t28D9#1 = 0.e0;
          tensor[2] _t28DB#1 = <tensor[2]>[_t28D7,_t28D9];
          real _t28DD#1 = 0.e0;
          real _t28DF#1 = 0.e0;
          tensor[2] _t28E1#1 = <tensor[2]>[_t28DD,_t28DF];
          real _t28E3#1 = 0.e0;
          real _t28E5#1 = 0.e0;
          tensor[2] _t28E7#1 = <tensor[2]>[_t28E3,_t28E5];
          tensor[2][3] _t28E9#1 = <tensor[2][3]>{_t28DB,_t28E1,_t28E7};
          real _t28EB#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28ED#1 = FloorToInt(_t28EB);
          int[2] _t28EF#1 = nextCell4132A (_t28ED,_t267C,_t267A);
          int _t28F1#1 = 1;
          int _t28F3#1 = Subscript<int[2]>(_t28EF,_t28F1);
          tensor[2] _t28F5#1 = Subscript<tensor[2][3]>(_t28E9,_t28F3);
          real _t28F7#1 = -0.1e1;
          real _t28F9#1 = 0.1e1;
          tensor[2] _t28FB#1 = <tensor[2]>[_t28F7,_t28F9];
          real _t28FD#1 = 0.e0;
          real _t28FF#1 = 0.1e1;
          tensor[2] _t2901#1 = <tensor[2]>[_t28FD,_t28FF];
          real _t2903#1 = 0.1e1;
          real _t2905#1 = 0.e0;
          tensor[2] _t2907#1 = <tensor[2]>[_t2903,_t2905];
          tensor[2][3] _t2909#1 = <tensor[2][3]>{_t28FB,_t2901,_t2907};
          real _t290B#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t290D#1 = FloorToInt(_t290B);
          int[2] _t290F#1 = nextCell4132A (_t290D,_t267C,_t267A);
          int _t2911#1 = 1;
          int _t2913#1 = Subscript<int[2]>(_t290F,_t2911);
          tensor[2] _t2915#1 = Subscript<tensor[2][3]>(_t2909,_t2913);
          real _t2917#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t2919#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2917,_t26AC);
          tensor[2] _t291B#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2919,_t267E);
          real _t291D#1 = TensorIndex<tensor[2],[0]>(_t291B);
          real _t291F#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t2921#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t291F,_t26AC);
          tensor[2] _t2923#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2921,_t267E);
          real _t2925#1 = TensorIndex<tensor[2],[1]>(_t2923);
          real[2] _t2927#1 = <real[2]>{_t291D,_t2925};
          int _t2929#1 = 1;
          int _t292B#1 = 1;
          int _t292D#1 = 0;
          int[3] _t292F#1 = <int[3]>{_t2929,_t292B,_t292D};
          real _t2931#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t2933#1 = FloorToInt(_t2931);
          int _t2935#1 = Subscript<int[3]>(_t292F,_t2933);
          real _t2937#1 = Subscript<real[2]>(_t2927,_t2935);
          real _t2939#1 = 0.1e1;
          real _t293B#1 = 0.e0;
          real[2] _t293D#1 = <real[2]>{_t2939,_t293B};
          real _t293F#1 = 0.e0;
          real _t2941#1 = 0.e0;
          real[2] _t2943#1 = <real[2]>{_t293F,_t2941};
          real _t2945#1 = 0.e0;
          real _t2947#1 = 0.e0;
          real[2] _t2949#1 = <real[2]>{_t2945,_t2947};
          real[2][3] _t294B#1 = <real[2][3]>{_t293D,_t2943,_t2949};
          real _t294D#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t294F#1 = FloorToInt(_t294D);
          real[2] _t2951#1 = Subscript<real[2][3]>(_t294B,_t294F);
          int _t2953#1 = 1;
          int _t2955#1 = 1;
          int _t2957#1 = 0;
          int[3] _t2959#1 = <int[3]>{_t2953,_t2955,_t2957};
          real _t295B#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t295D#1 = FloorToInt(_t295B);
          int _t295F#1 = Subscript<int[3]>(_t2959,_t295D);
          real _t2961#1 = Subscript<real[2]>(_t2951,_t295F);
          real _t2963#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2937,_t2961);
          real _t2965#1 = -0.1e1;
          real _t2967#1 = 0.1e1;
          real[2] _t2969#1 = <real[2]>{_t2965,_t2967};
          real _t296B#1 = 0.e0;
          real _t296D#1 = 0.1e1;
          real[2] _t296F#1 = <real[2]>{_t296B,_t296D};
          real _t2971#1 = 0.1e1;
          real _t2973#1 = 0.e0;
          real[2] _t2975#1 = <real[2]>{_t2971,_t2973};
          real[2][3] _t2977#1 = <real[2][3]>{_t2969,_t296F,_t2975};
          real _t2979#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t297B#1 = FloorToInt(_t2979);
          real[2] _t297D#1 = Subscript<real[2][3]>(_t2977,_t297B);
          int _t297F#1 = 1;
          int _t2981#1 = 1;
          int _t2983#1 = 0;
          int[3] _t2985#1 = <int[3]>{_t297F,_t2981,_t2983};
          real _t2987#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t2989#1 = FloorToInt(_t2987);
          int _t298B#1 = Subscript<int[3]>(_t2985,_t2989);
          real _t298D#1 = Subscript<real[2]>(_t297D,_t298B);
          real _t298F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2963,_t298D);
          tensor[2] _t2991#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t298F,_t2915);
          tensor[2] _t2993#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t28F5,_t2991);
          real _t2995#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t2997#1 = FloorToInt(_t2995);
          int[2] _t2999#1 = nextCell4132A (_t2997,_t267C,_t267A);
          int _t299B#1 = 1;
          int _t299D#1 = Subscript<int[2]>(_t2999,_t299B);
          femData:MeshPos _t299F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t267A,_t28D5,_t2993,_t299D);
          femData:MeshPos posp29A1#1 = _t299F;
          goto JOIN28CC
        JOIN28CC:  preds = [ASSIGN29A3,ASSIGN29AD]
          femData:MeshPos posp29A2#3 = phi(posp29A1,posp29AC)
          bool _t29AF#1 = GTE<real>(rayN2677,camFarVsp2340);
          if _t29AF then goto ASSIGN29B3 else goto JOIN29B1
        ASSIGN29B3:  preds = [COND29CC]
          string _t29B2#1 = "cells: ";
          string _t29B4#1 = "\n";
          Print<[string,femData:MeshCell[],string]>(_t29B2,cellInter234C,_t29B4);
          tensor[3] _t29B7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2340,rayVec233E);
          tensor[3] _t29B9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t29B7);
          tensor[3][] spaceInter29BB#1 = Append<tensor[3]>(spaceInter234A,_t29B9);
          self.poses = poses2346;
          self.normalizedTimes = normalizedTimes2347;
          self.cellIntersects = cellIntersects2348;
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29BB;
          self.refSpaceInter = refSpaceInter234B;
          self.cellInter = cellInter234C;
          self.currentCellInt = currentCellInt234D;
          self.rayN = rayN2677;
          self.currentCell = currentCell234F;
          self.steps = steps2444;
          self.pos = pos2351;
          self.startsInside = startsInside2352;
          stabilize
          goto JOIN29B1
        JOIN29B1:  preds = [*STABILIZE29BE,COND29CC]
          tensor[3][] spaceInter29BC#1 = phi(spaceInter234A)
          tensor[3] _t29CE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN2677,rayVec233E);
          tensor[3] _t29D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t29CE);
          tensor[3][] spaceInter29D2#2 = Append<tensor[3]>(spaceInter29BC,_t29D0);
          tensor[2] _t29D4#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp29A2);
          tensor[2][] refSpaceInter29D6#2 = Append<tensor[2]>(refSpaceInter234B,_t29D4);
          bool _t29D9#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp29A2);
          if _t29D9 then goto ASSIGN29DE else goto ASSIGN2A03
        ASSIGN29DE:  preds = [COND2A05]
          femData:MeshPos pos29DC#5 = posp29A2;
          string _t29DF#1 = "Next cell:";
          femData:Mesh _t29E1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos29DC);
          int _t29E3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos29DC);
          femData:MeshCell _t29E5#1 = LoadFem<femData:MeshCell>(_t29E1,_t29E3);
          string _t29E7#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t29DF,_t29E5,_t29E7);
          femData:Mesh _t29EA#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos29DC);
          int _t29EC#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos29DC);
          femData:MeshCell currentCell29EE#2 = LoadFem<femData:MeshCell>(_t29EA,_t29EC);
          femData:MeshCell[] cellInter29F1#1 = Append<femData:MeshCell>(cellInter234C,currentCell29EE);
          self.poses = poses2346;
          self.normalizedTimes = normalizedTimes2347;
          self.cellIntersects = cellIntersects2348;
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29D2;
          self.refSpaceInter = refSpaceInter29D6;
          self.cellInter = cellInter29F1;
          self.currentCellInt = currentCellInt234D;
          self.rayN = rayN2677;
          self.currentCell = currentCell29EE;
          self.steps = steps2444;
          self.pos = pos29DC;
          self.startsInside = startsInside2352;
          active
          goto JOIN29DB
        JOIN29DB:  preds = [*ACTIVE29F4,MASSIGN2A04]
          femData:MeshPos pos29DD#1 = phi(pos2351)
          femData:MeshCell currentCell29EF#1 = phi(currentCell234F)
          femData:MeshCell[] cellInter29F2#1 = phi(cellInter234C)
          goto JOIN2671
        JOIN2671:  preds = [JOIN29DB,COND2A09]
          femData:MeshPos pos2A08#7 = phi(pos29DD,pos2351)
          femData:MeshCell currentCell2A07#1 = phi(currentCell29EF,currentCell234F)
          real rayN2678#3 = phi(rayN2677,rayN234E)
          femData:MeshCell[] cellInter2A06#3 = phi(cellInter29F2,cellInter234C)
          tensor[2][] refSpaceInter29D7#2 = phi(refSpaceInter29D6,refSpaceInter234B)
          tensor[3][] spaceInter29CD#2 = phi(spaceInter29D2,spaceInter234A)
          tensor[2][] rayCellInter2675#3 = phi(rayCellInter2674,rayCellInter2349)
          int newIdx2A0A#1 = -1;
          real estimate2A0C#1 = camFarVsp2340;
          int _t2A0E#1 = 0;
          int _t2A10#1 = 1;
          int _t2A12#1 = ISub(cellIntersects2348,_t2A10);
          int[] _t2A14#1 = Range(_t2A0E,_t2A12);
        FOREACH2A19:  preds = [ASSIGN2A15,NEXT2A47]
          foreach (i2A16 in _t2A14) on exit goto ASSIGN2A49
            real estimate2A18#4 = phi(estimate2A0C,estimate2A45)
            int newIdx2A17#7 = phi(newIdx2A0A,newIdx2A44)
          real t2A1A#3 = Subscript<real[]>(normalizedTimes2347,i2A16);
          femData:MeshPos posp2A1C#2 = Subscript<femData:MeshPos[]>(poses2346,i2A16);
          bool _t2A1E#1 = GTE<real>(t2A1A,rayN2678);
          if _t2A1E then goto ASSIGN2A22 else goto JOIN2A20
        ASSIGN2A22:  preds = [COND2A46]
          bool _t2A21#1 = GTE<real>(estimate2A18,t2A1A);
          if _t2A21 then goto ASSIGN2A25 else goto JOIN2A23
        ASSIGN2A25:  preds = [COND2A43]
          femData:Mesh _t2A24#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp2A1C);
          int _t2A26#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp2A1C);
          femData:MeshCell _t2A28#1 = LoadFem<femData:MeshCell>(_t2A24,_t2A26);
          femData:Mesh _t2A2A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          int _t2A2C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:MeshCell _t2A2E#1 = LoadFem<femData:MeshCell>(_t2A2A,_t2A2C);
          int _t2A31#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A28);
          int _t2A33#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A2E);
          bool _t2A35#1 = NEQ<int>(_t2A31,_t2A33);
          bool _t2A37#1 = _t2A35;
          if _t2A37 then goto ASSIGN2A3C else goto JOIN2A39
        ASSIGN2A3C:  preds = [COND2A40]
          real estimate2A3A#1 = t2A1A;
          int newIdx2A3D#1 = i2A16;
          goto JOIN2A39
        JOIN2A39:  preds = [ASSIGN2A3F,COND2A40]
          real estimate2A3B#1 = phi(estimate2A3A,estimate2A18)
          int newIdx2A3E#1 = phi(newIdx2A3D,newIdx2A17)
          goto JOIN2A23
        JOIN2A23:  preds = [JOIN2A39,COND2A43]
          real estimate2A42#1 = phi(estimate2A3B,estimate2A18)
          int newIdx2A41#1 = phi(newIdx2A3E,newIdx2A17)
          goto JOIN2A20
        JOIN2A20:  preds = [JOIN2A23,COND2A46]
          real estimate2A45#1 = phi(estimate2A42,estimate2A18)
          int newIdx2A44#1 = phi(newIdx2A41,newIdx2A17)
          goto FOREACH2A19
        ASSIGN2A49:  preds = [FOREACH2A19]
          int _t2A48#1 = -1;
          bool _t2A4A#1 = GT<int>(newIdx2A17,_t2A48);
          if _t2A4A then goto ASSIGN2A4E else goto ASSIGN2A9F
        ASSIGN2A4E:  preds = [COND2ABE]
          string _t2A4D#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t2A4D);
          if startsInside2352 then goto ASSIGN2A52 else goto JOIN2A50
        ASSIGN2A52:  preds = [COND2A54]
          string _t2A51#1 = "because of an inside\n";
          Print<[string]>(_t2A51);
          goto JOIN2A50
        JOIN2A50:  preds = [MASSIGN2A53,COND2A54]
          string _t2A55#1 = "Direction:";
          string _t2A57#1 = "\n";
          Print<[string,tensor[3],string]>(_t2A55,rayVec233E,_t2A57);
          string _t2A5A#1 = "world pos was:";
          tensor[2] _t2A5D#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2A08);
          int _t2A5F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:Mesh _t2A61#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          field _t2A64#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2A5F,_t2A61,_t2A61);
          tensor[2] _t2A66#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2A64,_t2A5D);
          tensor[2] _t2A68#1 = _t2A66;
          tensor[2] _t2A6A#1 = _t2A68;
          string _t2A6C#1 = "\n";
          Print<[string,tensor[2],string]>(_t2A5A,_t2A6A,_t2A6C);
          string _t2A6F#1 = "Interior pos was:";
          tensor[2] _t2A71#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2A08);
          string _t2A73#1 = "\n";
          Print<[string,tensor[2],string]>(_t2A6F,_t2A71,_t2A73);
          string _t2A76#1 = " at ";
          string _t2A78#1 = "\n";
          Print<[real[],string,int,string]>(normalizedTimes2347,_t2A76,newIdx2A17,_t2A78);
          string _t2A7B#1 = "Original time was:";
          string _t2A7D#1 = "\n";
          Print<[string,real,string]>(_t2A7B,rayN2678,_t2A7D);
          femData:MeshPos pos2A80#3 = Subscript<femData:MeshPos[]>(poses2346,newIdx2A17);
          femData:Mesh _t2A83#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A80);
          int _t2A85#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A80);
          femData:MeshCell currentCell2A87#2 = LoadFem<femData:MeshCell>(_t2A83,_t2A85);
          femData:MeshCell[] cellInter2A8A#1 = Append<femData:MeshCell>(cellInter2A06,currentCell2A87);
          real rayN2A8D#1 = Subscript<real[]>(normalizedTimes2347,newIdx2A17);
          self.poses = poses2346;
          self.normalizedTimes = normalizedTimes2347;
          self.cellIntersects = cellIntersects2348;
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A8A;
          self.currentCellInt = currentCellInt234D;
          self.rayN = rayN2A8D;
          self.currentCell = currentCell2A87;
          self.steps = steps2444;
          self.pos = pos2A80;
          self.startsInside = startsInside2352;
          active
          goto JOIN2A4C
        JOIN2A4C:  preds = [*ACTIVE2A90,*STABILIZE2AB0]
          unreachable
        ASSIGN2A9F:  preds = [COND2ABE]
          string _t2A9E#1 = "Enter times:";
          string _t2AA0#1 = "\n";
          Print<[string,real[],string]>(_t2A9E,normalizedTimes2347,_t2AA0);
          string _t2AA3#1 = "Ray enter times:";
          string _t2AA5#1 = "\n";
          Print<[string,tensor[2][],string]>(_t2AA3,rayCellInter2675,_t2AA5);
          string _t2AA8#1 = "cells:";
          string _t2AAA#1 = "\n";
          Print<[string,femData:MeshCell[],string]>(_t2AA8,cellInter2A06,_t2AAA);
          string _t2AAD#1 = "End\n";
          Print<[string]>(_t2AAD);
          self.poses = poses2346;
          self.normalizedTimes = normalizedTimes2347;
          self.cellIntersects = cellIntersects2348;
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A06;
          self.currentCellInt = currentCellInt234D;
          self.rayN = rayN2678;
          self.currentCell = currentCell2A07;
          self.steps = steps2444;
          self.pos = pos2A08;
          self.startsInside = startsInside2352;
          stabilize
          goto JOIN2A4C
        ASSIGN2A03:  preds = [COND2A05]
          string _t2A02#1 = "Invalid\n";
          Print<[string]>(_t2A02);
          goto JOIN29DB
        ASSIGN29A5:  preds = [COND29AE]
          real _t29A4#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t29A6#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t29A4,_t26AC);
          tensor[2] _t29A8#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t29A6,_t267E);
          femData:MeshPos _t29AA#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t267A,_t29A8);
          femData:MeshPos posp29AC#1 = _t29AA;
          goto JOIN28CC
        ASSIGN28A8:  preds = [COND28BC]
          real _t28A7#1 = -inf;
          bool _t28A9#1 = EQ<real>(_t28A7,faceTime2895);
          if _t28A9 then goto ASSIGN28AD else goto ASSIGN28B6
        ASSIGN28AD:  preds = [COND28BB]
          real _t28AC#1 = -0.1e1;
          real _t28AE#1 = -0.1e1;
          tensor[2] _t28B0#1 = <tensor[2]>[_t28AC,_t28AE];
          tensor[2] _t28B2#1 = _t28B0;
          goto JOIN28AB
        JOIN28AB:  preds = [ASSIGN28B4,ASSIGN28BA]
          tensor[2] _t28B3#1 = phi(_t28B2,_t28B9)
          goto JOIN289B
        ASSIGN28B6:  preds = [COND28BB]
          real _t28B5#1 = IntToReal(_t26DE);
          tensor[2] _t28B7#1 = <tensor[2]>[faceTime2895,_t28B5];
          tensor[2] _t28B9#1 = _t28B7;
          goto JOIN28AB
        ASSIGN2878:  preds = [COND2892]
          real _t2877#1 = 0.e0;
          real _t2879#1 = 0.e0;
          tensor[2] _t287B#1 = <tensor[2]>[_t2877,_t2879];
          tensor[2] _t287D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t287B,_t26AE);
          real _t287F#1 = 0.1e1;
          real _t2881#1 = 0.e0;
          tensor[2] _t2883#1 = <tensor[2]>[_t287F,_t2881];
          real _t2885#1 = 0.1e1;
          real _t2887#1 = 0.e0;
          tensor[2] _t2889#1 = <tensor[2]>[_t2885,_t2887];
          real _t288B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2889);
          tensor[2] _t288D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2883,_t288B);
          real faceTime288F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t287D,_t288D);
          goto JOIN2858
        ASSIGN27E8:  preds = [COND2802]
          real _t27E7#1 = 0.e0;
          real _t27E9#1 = 0.e0;
          tensor[2] _t27EB#1 = <tensor[2]>[_t27E7,_t27E9];
          tensor[2] _t27ED#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t27EB,_t26AE);
          real _t27EF#1 = 0.e0;
          real _t27F1#1 = 0.1e1;
          tensor[2] _t27F3#1 = <tensor[2]>[_t27EF,_t27F1];
          real _t27F5#1 = 0.e0;
          real _t27F7#1 = 0.1e1;
          tensor[2] _t27F9#1 = <tensor[2]>[_t27F5,_t27F7];
          real _t27FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t27F9);
          tensor[2] _t27FD#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t27F3,_t27FB);
          real faceTime27FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t27ED,_t27FD);
          goto JOIN27C8
        ASSIGN2758:  preds = [COND2772]
          real _t2757#1 = 0.1e1;
          real _t2759#1 = 0.e0;
          tensor[2] _t275B#1 = <tensor[2]>[_t2757,_t2759];
          tensor[2] _t275D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t275B,_t26AE);
          real _t275F#1 = -0.1e1;
          real _t2761#1 = 0.1e1;
          tensor[2] _t2763#1 = <tensor[2]>[_t275F,_t2761];
          real _t2765#1 = -0.1e1;
          real _t2767#1 = 0.1e1;
          tensor[2] _t2769#1 = <tensor[2]>[_t2765,_t2767];
          real _t276B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26DC,_t2769);
          tensor[2] _t276D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2763,_t276B);
          real faceTime276F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t275D,_t276D);
          goto JOIN2738
        ASSIGN264B:  preds = [COND265F]
          real _t264A#1 = -inf;
          bool _t264C#1 = EQ<real>(_t264A,faceTime2638);
          if _t264C then goto ASSIGN2650 else goto ASSIGN2659
        ASSIGN2650:  preds = [COND265E]
          real _t264F#1 = -0.1e1;
          real _t2651#1 = -0.1e1;
          tensor[2] _t2653#1 = <tensor[2]>[_t264F,_t2651];
          tensor[2] _t2655#1 = _t2653;
          goto JOIN264E
        JOIN264E:  preds = [ASSIGN2657,ASSIGN265D]
          tensor[2] _t2656#1 = phi(_t2655,_t265C)
          goto JOIN263E
        ASSIGN2659:  preds = [COND265E]
          real _t2658#1 = IntToReal(_t2481);
          tensor[2] _t265A#1 = <tensor[2]>[faceTime2638,_t2658];
          tensor[2] _t265C#1 = _t265A;
          goto JOIN264E
        ASSIGN261B:  preds = [COND2635]
          real _t261A#1 = 0.e0;
          real _t261C#1 = 0.e0;
          tensor[2] _t261E#1 = <tensor[2]>[_t261A,_t261C];
          tensor[2] _t2620#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t261E,_t2451);
          real _t2622#1 = 0.1e1;
          real _t2624#1 = 0.e0;
          tensor[2] _t2626#1 = <tensor[2]>[_t2622,_t2624];
          real _t2628#1 = 0.1e1;
          real _t262A#1 = 0.e0;
          tensor[2] _t262C#1 = <tensor[2]>[_t2628,_t262A];
          real _t262E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t262C);
          tensor[2] _t2630#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2626,_t262E);
          real faceTime2632#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2620,_t2630);
          goto JOIN25FB
        ASSIGN258B:  preds = [COND25A5]
          real _t258A#1 = 0.e0;
          real _t258C#1 = 0.e0;
          tensor[2] _t258E#1 = <tensor[2]>[_t258A,_t258C];
          tensor[2] _t2590#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t258E,_t2451);
          real _t2592#1 = 0.e0;
          real _t2594#1 = 0.1e1;
          tensor[2] _t2596#1 = <tensor[2]>[_t2592,_t2594];
          real _t2598#1 = 0.e0;
          real _t259A#1 = 0.1e1;
          tensor[2] _t259C#1 = <tensor[2]>[_t2598,_t259A];
          real _t259E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t259C);
          tensor[2] _t25A0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2596,_t259E);
          real faceTime25A2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2590,_t25A0);
          goto JOIN256B
        ASSIGN24FB:  preds = [COND2515]
          real _t24FA#1 = 0.1e1;
          real _t24FC#1 = 0.e0;
          tensor[2] _t24FE#1 = <tensor[2]>[_t24FA,_t24FC];
          tensor[2] _t2500#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t24FE,_t2451);
          real _t2502#1 = -0.1e1;
          real _t2504#1 = 0.1e1;
          tensor[2] _t2506#1 = <tensor[2]>[_t2502,_t2504];
          real _t2508#1 = -0.1e1;
          real _t250A#1 = 0.1e1;
          tensor[2] _t250C#1 = <tensor[2]>[_t2508,_t250A];
          real _t250E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t250C);
          tensor[2] _t2510#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2506,_t250E);
          real faceTime2512#1 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2500,_t2510);
          goto JOIN24DB
        ASSIGN243F:  preds = [COND2441]
          string _t243E#1 = "Did not move off ray!\n";
          Print<[string]>(_t243E);
          goto JOIN2438
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY139F:  preds = []
      int iresU1385#1 = globals.iresU123C;
      int iresV1384#1 = globals.iresV123D;
      int _t1388#1 = 0;
      int _t138A#1 = 1;
      int _t138C#1 = ISub(iresU1385,_t138A);
      int[] _t138E#1 = Range(_t1388,_t138C);
    FOREACH1391:  preds = [ASSIGN138F,NEXT139E]
      foreach (vi1390 in _t138E) on exit goto RETURN13A0
      int _t1392#1 = 0;
      int _t1394#1 = 1;
      int _t1396#1 = ISub(iresV1384,_t1394);
      int[] _t1398#1 = Range(_t1392,_t1396);
    FOREACH139B:  preds = [ASSIGN1399,NEXT139D]
      foreach (ui139A in _t1398) on exit goto NEXT139E
      new ray(ui139A,vi1390);
      goto FOREACH139B
    NEXT139E:  preds = [FOREACH139B]
      goto FOREACH1391
    RETURN13A0:  preds = [FOREACH1391]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1235 (a) = <no-default>
  input isoval1236 (isoval) = <default>
  input thick1237 (thick) = <default>
  input camEye1238 (camEye) = <default>
  input camAt1239 (camAt) = <default>
  input camUp123A (camUp) = <default>
  input camFOV123B (camFOV) = <default>
  input iresU123C (iresU) = <default>
  input iresV123D (iresV) = <default>
  input camNear123E (camNear) = <default>
  input camFar123F (camFar) = <default>
  input refStep1240 (refStep) = <default>
  input rayStep1241 (rayStep) = <default>
  input lightVsp1242 (lightVsp) = <default>
  input phongKa1243 (phongKa) = <default>
  input phongKd1244 (phongKd) = <default>
  input debug1245 (debug) = <default>
  input debugU1246 (debugU) = <default>
  input debugV1247 (debugV) = <default>
  input eps1248 (eps) = <default>
  global femData:MeshCell[] 0cell_a129C
  global real camDist129D
  global real camNearVsp129E
  global real camFarVsp129F
  global tensor[3] camN12A0
  global tensor[3] camU12A1
  global tensor[3] camV12A2
  global real camVmax12A3
  global real camUmax12A4
## functions
  function femData:MeshPos _msh_newtonInverse1318 (tensor[2] pos12A5#2, int cellInt12A6#2, femData:Mesh mesh12A7#5) {
    ENTRY1317:  preds = []
      real _t12A8#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn12AC#2 = <tensor[2]>[_t12A8,_t12A8];
      field _t12AE#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (cellInt12A6,mesh12A7,mesh12A7);
      field _t12B0#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t12AE);
      field _t12B2#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t12B0);
      tensor[2,2] A12BA#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t12B2,xn12AC);
      int _t12BC#1 = 0;
      int _t12BE#1 = 16;
      int[] _t12C0#1 = Range(_t12BC,_t12BE);
    FOREACH12C4:  preds = [ASSIGN12C1,NEXT1313]
      foreach (itter12C2 in _t12C0) on exit goto ASSIGN1315
        tensor[2] xn12C3#2 = phi(xn12AC,xn12CD)
      field _t12C7#1 = λ(T0[2],F1[2])<(F1_{i0}) - («T0_{i0}»)>_{2} (pos12A5,_t12AE);
      field _t12C9#1 = λ(T0[2 2],F1[2])<Σ(i1=0..1)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..1)>_{2} (A12BA,_t12C7);
      tensor[2] delta12CB#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t12C9,xn12C3);
      tensor[2] xn12CD#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn12C3,delta12CB);
      real _t12CF#2 = 0.1e-7;
      real _t12D3#1 = λ(T0[],T1[])<(T0 * T1)> (_t12CF,_t12CF);
      real _t12D5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (delta12CB,delta12CB);
      bool _t12D7#1 = GTE<real>(_t12D3,_t12D5);
      if _t12D7 then goto ASSIGN12DB else goto JOIN12D9
    ASSIGN12DB:  preds = [COND1312]
      real _t12DA#3 = 0.1e1;
      real _t12DC#3 = 0.1e-8;
      real _t12DE#1 = λ(T0[],T1[])<(T0 + T1)> (_t12DA,_t12DC);
      tensor[2] _t12E4#1 = <tensor[2]>[_t12DA,_t12DA];
      real _t12E6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t12E4,xn12CD);
      bool _t12E8#1 = GT<real>(_t12DE,_t12E6);
      tensor[2] _t12EE#1 = <tensor[2]>[_t12DC,_t12DC];
      tensor[2] _t12F0#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t12EE,xn12CD);
      real _t12F2#1 = TensorIndex<tensor[2],[0]>(_t12F0);
      real _t12F4#2 = -0.e0;
      bool _t12F6#1 = GT<real>(_t12F2,_t12F4);
      real _t1300#1 = TensorIndex<tensor[2],[1]>(_t12F0);
      bool _t1304#1 = GT<real>(_t1300,_t12F4);
      bool _t1306#1 = BAnd(_t12F6,_t1304);
      bool _t1308#1 = BAnd(_t12E8,_t1306);
      if _t1308 then goto ASSIGN130C else goto ASSIGN130F
    ASSIGN130C:  preds = [COND1311]
      femData:MeshPos _t130B#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh12A7,cellInt12A6,xn12CD,pos12A5);
      return _t130B
      goto JOIN130A
    JOIN130A:  preds = [*RETURN(_t130B)130D,*RETURN(_t130E)1310]
      goto JOIN12D9
    JOIN12D9:  preds = [*JOIN130A,COND1312]
      goto FOREACH12C4
    ASSIGN130F:  preds = [COND1311]
      femData:MeshPos _t130E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t130E
      goto JOIN130A
    ASSIGN1315:  preds = [FOREACH12C4]
      femData:MeshPos _t1314#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t1314
}
  function int[2] nextCell4132A (int faceIdx1319#1, int cell131A#1, femData:Mesh mesh131B#1) {
    ENTRY1329:  preds = []
      int _t131C#1 = 6;
      int _t131E#1 = IMul(cell131A,_t131C);
      int _t1320#1 = 2;
      int _t1322#1 = IMul(faceIdx1319,_t1320);
      int _t1324#1 = IAdd(_t131E,_t1322);
      int[2] _t1326#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh131B,_t1324);
      return _t1326
}
## input initialization
  ENTRY129A:  preds = []
    real isoval1249#1 = 0.2e0;
    globals.isoval1236 = isoval1249;
    real thick124C#1 = 0.7e-1;
    globals.thick1237 = thick124C;
    real _t124F#2 = 0.3e1;
    real _t1251#1 = -0.3e1;
    tensor[3] camEye1255#1 = <tensor[3]>[_t124F,_t1251,_t124F];
    globals.camEye1238 = camEye1255;
    real _t1258#3 = 0.5e0;
    tensor[3] camAt125E#1 = <tensor[3]>[_t1258,_t1258,_t1258];
    globals.camAt1239 = camAt125E;
    real _t1261#2 = 0.e0;
    real _t1265#2 = 0.1e1;
    tensor[3] camUp1267#2 = <tensor[3]>[_t1261,_t1261,_t1265];
    globals.camUp123A = camUp1267;
    real camFOV126A#1 = 0.137e2;
    globals.camFOV123B = camFOV126A;
    int iresU126D#2 = 10;
    globals.iresU123C = iresU126D;
    globals.iresV123D = iresU126D;
    real camNear1273#1 = -0.2e1;
    globals.camNear123E = camNear1273;
    real camFar1276#1 = 0.5e1;
    globals.camFar123F = camFar1276;
    globals.refStep1240 = _t1265;
    real rayStep127C#1 = 0.1e-1;
    globals.rayStep1241 = rayStep127C;
    globals.lightVsp1242 = camUp1267;
    real phongKa1288#1 = 0.1e0;
    globals.phongKa1243 = phongKa1288;
    real phongKd128B#1 = 0.9e0;
    globals.phongKd1244 = phongKd128B;
    bool debug128E#1 = false;
    globals.debug1245 = debug128E;
    int debugU1291#1 = 8;
    globals.debugU1246 = debugU1291;
    int debugV1294#1 = 2;
    globals.debugV1247 = debugV1294;
    real eps1297#1 = 0.1e-7;
    globals.eps1248 = eps1297;
    return
## global-variable initialization
  ENTRY1382:  preds = []
    femData:Mesh a1333#2 = globals.a1235;
    tensor[3] camEye1332#1 = globals.camEye1238;
    tensor[3] camAt1331#1 = globals.camAt1239;
    tensor[3] camUp1330#1 = globals.camUp123A;
    real camFOV132F#1 = globals.camFOV123B;
    int iresU132E#1 = globals.iresU123C;
    int iresV132D#1 = globals.iresV123D;
    real camNear132C#1 = globals.camNear123E;
    real camFar132B#1 = globals.camFar123F;
    int _t133D#1 = 0;
    int _t133F#1 = 1;
    int _t1341#1 = ExtractFemItem<int,NumCell(Mesh)>(a1333);
    int _t1343#1 = ISub(_t1341,_t133F);
    int[] _t1345#1 = Range(_t133D,_t1343);
    femData:MeshCell[] _t1347#1 = <femData:MeshCell[]>{};
  FOREACH134B:  preds = [ASSIGN1348,NEXT1350]
    foreach (_t1349 in _t1345) on exit goto GASSIGN2AD2
      femData:MeshCell[] _t134A#2 = phi(_t1347,_t134E)
    femData:MeshCell _t134C#1 = LoadFem<femData:MeshCell>(a1333,_t1349);
    femData:MeshCell[] _t134E#1 = Append<femData:MeshCell>(_t134A,_t134C);
    goto FOREACH134B
  GASSIGN2AD2:  preds = [FOREACH134B]
    globals.0cell_a129C = _t134A;
    tensor[3] _t1354#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1331,camEye1332);
    real camDist1356#4 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1354);
    globals.camDist129D = camDist1356;
    real camNearVsp1359#1 = λ(T0[],T1[])<(T0 + T1)> (camNear132C,camDist1356);
    globals.camNearVsp129E = camNearVsp1359;
    real camFarVsp135C#1 = λ(T0[],T1[])<(T0 + T1)> (camFar132B,camDist1356);
    globals.camFarVsp129F = camFarVsp135C;
    tensor[3] camN1361#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1354,_t1354);
    globals.camN12A0 = camN1361;
    tensor[3] _t1364#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN1361,camUp1330);
    tensor[3] camU1366#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1364,_t1364);
    globals.camU12A1 = camU1366;
    tensor[3] camV1369#1 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1366,camN1361);
    globals.camV12A2 = camV1369;
    real _t136C#1 = 0.314159265358979323846264338327950288e1;
    real _t136E#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV132F,_t136C);
    real _t1370#1 = 0.36e3;
    real _t1372#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t136E,_t1370);
    real _t1374#1 = λ(T0[])<Tangent(T0)> (_t1372);
    real camVmax1376#2 = λ(T0[],T1[])<(T0 * T1)> (_t1374,camDist1356);
    globals.camVmax12A3 = camVmax1376;
    real _t1379#1 = IntToReal(iresU132E);
    real _t137B#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1376,_t1379);
    real _t137D#1 = IntToReal(iresV132D);
    real camUmax137F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t137B,_t137D);
    globals.camUmax12A4 = camUmax137F;
    return
## strand
  strand ray (int ui13A1#2, int vi13A2#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY1471:  preds = []
        femData:Mesh a13C9#1 = globals.a1235;
        femData:MeshCell[] 0cell_a13C8#1 = globals.0cell_a129C;
        tensor[3] camEye13C7#1 = globals.camEye1238;
        int iresU13C6#1 = globals.iresU123C;
        int iresV13C5#1 = globals.iresV123D;
        real camNearVsp13C4#2 = globals.camNearVsp129E;
        real camFarVsp13C3#2 = globals.camFarVsp129F;
        tensor[3] camN13C2#1 = globals.camN12A0;
        tensor[3] camU13C1#1 = globals.camU12A1;
        tensor[3] camV13C0#1 = globals.camV12A2;
        real camVmax13BF#2 = globals.camVmax12A3;
        real camUmax13BE#2 = globals.camUmax12A4;
        real _t13F1#1 = λ(T0[])<Neg(T0)> (camUmax13BE);
        real _t13F3#2 = -0.5e0;
        real _t13F5#1 = IntToReal(ui13A1);
        real _t13F7#1 = IntToReal(iresU13C6);
        real _t13F9#2 = 0.5e0;
        real _t13FB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t13F7,_t13F9);
        real rayU13FD#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13F1,camUmax13BE,_t13F3,_t13F5,_t13FB);
        real _t13FF#1 = λ(T0[])<Neg(T0)> (camVmax13BF);
        real _t1403#1 = IntToReal(vi13A2);
        real _t1405#1 = IntToReal(iresV13C5);
        real _t1409#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1405,_t13F9);
        real rayV140B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13FF,camVmax13BF,_t13F3,_t1403,_t1409);
        tensor[3] _t140D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU13FD,camU13C1);
        tensor[3] _t140F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV140B,camV13C0);
        tensor[3] UV1411#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t140D,_t140F);
        tensor[3] rayOrig1413#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye13C7,UV1411);
        real _t1415#4 = 0.e0;
        tensor[3] _t141B#1 = <tensor[3]>[_t1415,_t1415,_t1415];
        tensor[3] rayVec141D#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN13C2,_t141B);
        tensor[3] _t1423#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp13C4,rayVec141D);
        tensor[3] rayStart1425#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1413,_t1423);
        real _t1427#1 = TensorIndex<tensor[3],[0]>(rayStart1425);
        real _t1429#1 = TensorIndex<tensor[3],[1]>(rayStart1425);
        tensor[2] rayStartProj142B#1 = <tensor[2]>[_t1427,_t1429];
        tensor[3] _t142D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp13C3,rayVec141D);
        tensor[3] rayEnd142F#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1413,_t142D);
        tensor[3] dpos1431#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (rayEnd142F,rayStart1425);
        real _t1433#1 = TensorIndex<tensor[3],[0]>(dpos1431);
        real _t1435#1 = TensorIndex<tensor[3],[1]>(dpos1431);
        tensor[2] dposProj1437#1 = <tensor[2]>[_t1433,_t1435];
        femData:MeshPos[0] _t1439#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t143B#1 = MkDynamic<femData:MeshPos,0>(_t1439);
        real[0] _t143F#1 = <real[0]>{};
        real[] _t1441#1 = MkDynamic<real,0>(_t143F);
        int cellIntersects1445#3 = 0;
        tensor[2][0] _t1447#1 = <tensor[2][0]>{};
        tensor[2][] _t1449#1 = MkDynamic<tensor[2],0>(_t1447);
        tensor[3][0] _t144D#1 = <tensor[3][0]>{};
        tensor[3][] _t144F#1 = MkDynamic<tensor[3],0>(_t144D);
        tensor[2][0] _t1453#1 = <tensor[2][0]>{};
        tensor[2][] _t1455#1 = MkDynamic<tensor[2],0>(_t1453);
        femData:MeshCell[0] _t1459#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t145B#1 = MkDynamic<femData:MeshCell,0>(_t1459);
        int currentCellInt145F#1 = -1;
        femData:MeshCell currentCell1465#1 = Subscript<femData:MeshCell[]>(0cell_a13C8,cellIntersects1445);
        femData:MeshPos pos1469#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a13C9);
        bool startsInside146B#1 = false;
        self.rayU = rayU13FD;
        self.rayV = rayV140B;
        self.UV = UV1411;
        self.rayOrig = rayOrig1413;
        self.rayVec = rayVec141D;
        self.camNearVsp = camNearVsp13C4;
        self.camFarVsp = camFarVsp13C3;
        self.rayStart = rayStart1425;
        self.rayStartProj = rayStartProj142B;
        self.rayEnd = rayEnd142F;
        self.dpos = dpos1431;
        self.dposProj = dposProj1437;
        self.poses = _t143B;
        self.normalizedTimes = _t1441;
        self.cellIntersects = cellIntersects1445;
        self.rayCellInter = _t1449;
        self.spaceInter = _t144F;
        self.refSpaceInter = _t1455;
        self.cellInter = _t145B;
        self.currentCellInt = currentCellInt145F;
        self.rayN = _t1415;
        self.currentCell = currentCell1465;
        self.steps = cellIntersects1445;
        self.pos = pos1469;
        self.startsInside = startsInside146B;
        self.ui = ui13A1;
        self.vi = vi13A2;
        return
    end state init
    method start
        ENTRY232B:  preds = []
          femData:MeshCell[] 0cell_a1491#1 = globals.0cell_a129C;
          bool debug1490#1 = globals.debug1245;
          int debugU148F#1 = globals.debugU1246;
          int debugV148E#1 = globals.debugV1247;
          real rayU1496#0 = self.rayU;
          real rayV1497#0 = self.rayV;
          tensor[3] UV1498#0 = self.UV;
          tensor[3] rayOrig1499#2 = self.rayOrig;
          tensor[3] rayVec149A#1 = self.rayVec;
          real camNearVsp149B#4 = self.camNearVsp;
          real camFarVsp149C#3 = self.camFarVsp;
          tensor[3] rayStart149D#0 = self.rayStart;
          tensor[2] rayStartProj149E#4 = self.rayStartProj;
          tensor[3] rayEnd149F#0 = self.rayEnd;
          tensor[3] dpos14A0#0 = self.dpos;
          tensor[2] dposProj14A1#2 = self.dposProj;
          femData:MeshPos[] poses14A2#1 = self.poses;
          real[] normalizedTimes14A3#1 = self.normalizedTimes;
          int cellIntersects14A4#1 = self.cellIntersects;
          tensor[2][] rayCellInter14A5#0 = self.rayCellInter;
          tensor[3][] spaceInter14A6#1 = self.spaceInter;
          tensor[2][] refSpaceInter14A7#0 = self.refSpaceInter;
          femData:MeshCell[] cellInter14A8#0 = self.cellInter;
          int currentCellInt14A9#1 = self.currentCellInt;
          real rayN14AA#0 = self.rayN;
          femData:MeshCell currentCell14AB#0 = self.currentCell;
          int steps14AC#0 = self.steps;
          femData:MeshPos pos14AD#0 = self.pos;
          bool startsInside14AE#2 = self.startsInside;
          int ui14AF#2 = self.ui;
          int vi14B0#2 = self.vi;
          bool _t14CF#1 = NEQ<int>(ui14AF,debugU148F);
          if _t14CF then goto ASSIGN14D4 else goto ASSIGN14D6
        ASSIGN14D4:  preds = [COND14D7]
          bool _t14D2#1 = true;
          goto JOIN14D1
        JOIN14D1:  preds = [ASSIGN14D4,ASSIGN14D6]
          bool _t14D3#1 = phi(_t14D2,_t14D5)
          if _t14D3 then goto COND14E8 else goto JOIN14D8
        COND14E8:  preds = [COND14E9]
          if debug1490 then goto STABILIZE14DA else goto JOIN14D9
        STABILIZE14DA:  preds = [COND14E8]
          stabilize
          goto JOIN14D9
        JOIN14D9:  preds = [*STABILIZE14DA,COND14E8]
          goto JOIN14D8
        JOIN14D8:  preds = [JOIN14D9,COND14E9]
        FOREACH14F0:  preds = [JOIN14D8,NEXT22C5]
          foreach (c14EA in 0cell_a1491) on exit goto ASSIGN22C7
            real startTime14EF#3 = phi(camFarVsp149C,startTime1519)
            bool startsInside22C4#2 = phi(startsInside14AE,startsInside1524)
            int currentCellInt14EE#6 = phi(currentCellInt14A9,currentCellInt151C)
            int cellIntersects14ED#8 = phi(cellIntersects14A4,cellIntersects1521)
            real[] normalizedTimes14EC#7 = phi(normalizedTimes14A3,normalizedTimes1516)
            femData:MeshPos[] poses14EB#7 = phi(poses14A2,poses1513)
          string _t14F1#1 = "Cell:";
          string _t14F3#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t14F1,c14EA,_t14F3);
          int _t14F6#5 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t14F8#7 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:MeshPos _t14FA#1 = _msh_newtonInverse1318 (rayStartProj149E,_t14F6,_t14F8);
          bool _t14FC#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t14FA);
          if _t14FC then goto ASSIGN1500 else goto ASSIGN2AE8
        ASSIGN1500:  preds = [COND22C3]
          string _t14FF#1 = "pos starts inside\n";
          Print<[string]>(_t14FF);
          field _t150C#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femInvV(1318, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t14F6,_t14F8,_t14F8);
          tensor[2] _t150E#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t150C,rayStartProj149E);
          femData:MeshPos p1510#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t14F8,_t14F6,_t150E);
          femData:MeshPos[] poses1512#1 = Append<femData:MeshPos>(poses14EB,p1510);
          real[] normalizedTimes1515#1 = Append<real>(normalizedTimes14EC,camNearVsp149B);
          int _t151E#1 = 1;
          int cellIntersects1520#1 = IAdd(cellIntersects14ED,_t151E);
          bool startsInside1523#1 = true;
          goto JOIN14FE
        JOIN14FE:  preds = [ASSIGN1525,JOIN1876]
          real startTime1519#1 = phi(camNearVsp149B,startTime22BC)
          bool startsInside1524#1 = phi(startsInside1523,startsInside14AE)
          int currentCellInt151C#1 = phi(cellIntersects14ED,currentCellInt22BB)
          int cellIntersects1521#1 = phi(cellIntersects1520,cellIntersects22C0)
          real[] normalizedTimes1516#1 = phi(normalizedTimes1515,normalizedTimes22AC)
          femData:MeshPos[] poses1513#1 = phi(poses1512,poses22AF)
          goto FOREACH14F0
        ASSIGN2AE8:  preds = [COND22C3]
          field _t152C#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t14F6,_t14F8,_t14F8);
          field _t152E#1 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t152C);
          real _t1530#26 = -0.e0;
          tensor[2] _t1534#2 = <tensor[2]>[_t1530,_t1530];
          tensor[2,2] _t1536#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t152E,_t1534);
          tensor[2,2] _t1538#2 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t1536);
          tensor[2] _t1548#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t152C,_t1534);
          tensor[2] _t154A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj149E,_t1548);
          tensor[2] _t154C#15 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1538,_t154A);
          tensor[2] _t1562#16 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t1538,dposProj14A1);
          real time1565#9 = +inf;
          int face1567#12 = -1;
          real _t1569#39 = 0.1e1;
          real _t156B#9 = 0.e0;
          tensor[2] _t156D#3 = <tensor[2]>[_t1569,_t156B];
          tensor[2] _t156F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t156D,_t154C);
          real _t1571#9 = -0.1e1;
          tensor[2] _t1575#2 = <tensor[2]>[_t1571,_t1569];
          real _t157D#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t1575);
          tensor[2] _t157F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t1575,_t157D);
          real _t1581#10 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t156F,_t157F);
          real _t1583#3 = -0.1e-15;
          bool _t1585#1 = GTE<real>(_t1581,_t1583);
          bool _t15A1#1 = GT<real>(time1565,_t1581);
          real _t15AB#1 = λ(T0[])<Abs(T0)> (_t157D);
          real _t15AD#3 = 0.1e-20;
          bool _t15AF#1 = GTE<real>(_t15AB,_t15AD);
          bool _t15B1#1 = BAnd(_t15A1,_t15AF);
          bool _t15B3#4 = BAnd(_t1585,_t15B1);
          if _t15B3 then goto ASSIGN15B9 else goto JOIN15B5
        ASSIGN15B9:  preds = [COND1662]
          real _t15B8#3 = 0.1e-8;
          real _t15BA#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t15B8);
          tensor[2] _t15C0#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t15DC#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1581,_t1562);
          tensor[2] _t15DE#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t15DC);
          real _t15E0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t15C0,_t15DE);
          bool _t15E2#1 = GT<real>(_t15BA,_t15E0);
          tensor[2] _t15E8#1 = <tensor[2]>[_t15B8,_t15B8];
          tensor[2] _t1608#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t15E8,_t15DE);
          real _t160A#1 = TensorIndex<tensor[2],[0]>(_t1608);
          bool _t160E#1 = GT<real>(_t160A,_t1530);
          real _t1636#1 = TensorIndex<tensor[2],[1]>(_t1608);
          bool _t163A#1 = GT<real>(_t1636,_t1530);
          bool _t163C#1 = BAnd(_t160E,_t163A);
          bool _t163E#1 = BAnd(_t15E2,_t163C);
          if _t163E then goto ASSIGN165E else goto JOIN1640
        ASSIGN165E:  preds = [COND165F]
          int face165C#1 = 0;
          goto JOIN1640
        JOIN1640:  preds = [ASSIGN165E,COND165F]
          int face165D#1 = phi(face165C,face1567)
          real time165A#1 = phi(_t1581,time1565)
          goto JOIN15B5
        JOIN15B5:  preds = [JOIN1640,COND1662]
          int face1661#2 = phi(face165D,face1567)
          real time1660#3 = phi(time165A,time1565)
          tensor[2] _t1667#1 = <tensor[2]>[_t156B,_t156B];
          tensor[2] _t1669#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t1667,_t154C);
          tensor[2] _t166F#2 = <tensor[2]>[_t156B,_t1569];
          real _t1677#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t166F);
          tensor[2] _t1679#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t166F,_t1677);
          real _t167B#13 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1669,_t1679);
          bool _t167F#4 = GTE<real>(_t167B,_t1583);
          bool _t169B#1 = GT<real>(time1660,_t167B);
          real _t16A5#1 = λ(T0[])<Abs(T0)> (_t1677);
          bool _t16A9#4 = GTE<real>(_t16A5,_t15AD);
          bool _t16AB#1 = BAnd(_t169B,_t16A9);
          bool _t16AD#1 = BAnd(_t167F,_t16AB);
          if _t16AD then goto ASSIGN16B3 else goto JOIN16AF
        ASSIGN16B3:  preds = [COND175C]
          real _t16B2#3 = 0.1e-8;
          real _t16B4#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t16B2);
          tensor[2] _t16BA#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t16D6#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t167B,_t1562);
          tensor[2] _t16D8#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t16D6);
          real _t16DA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t16BA,_t16D8);
          bool _t16DC#1 = GT<real>(_t16B4,_t16DA);
          tensor[2] _t16E2#1 = <tensor[2]>[_t16B2,_t16B2];
          tensor[2] _t1702#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t16E2,_t16D8);
          real _t1704#1 = TensorIndex<tensor[2],[0]>(_t1702);
          bool _t1708#1 = GT<real>(_t1704,_t1530);
          real _t1730#1 = TensorIndex<tensor[2],[1]>(_t1702);
          bool _t1734#1 = GT<real>(_t1730,_t1530);
          bool _t1736#1 = BAnd(_t1708,_t1734);
          bool _t1738#1 = BAnd(_t16DC,_t1736);
          if _t1738 then goto ASSIGN1758 else goto JOIN173A
        ASSIGN1758:  preds = [COND1759]
          int face1756#1 = 1;
          goto JOIN173A
        JOIN173A:  preds = [ASSIGN1758,COND1759]
          int face1757#1 = phi(face1756,face1661)
          real time1754#1 = phi(_t167B,time1660)
          goto JOIN16AF
        JOIN16AF:  preds = [JOIN173A,COND175C]
          int face175B#2 = phi(face1757,face1661)
          real time175A#3 = phi(time1754,time1660)
          real _t1771#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1562,_t156D);
          tensor[2] _t1773#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t156D,_t1771);
          real _t1775#13 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t1669,_t1773);
          bool _t1779#4 = GTE<real>(_t1775,_t1583);
          bool _t1795#1 = GT<real>(time175A,_t1775);
          real _t179F#1 = λ(T0[])<Abs(T0)> (_t1771);
          bool _t17A3#4 = GTE<real>(_t179F,_t15AD);
          bool _t17A5#1 = BAnd(_t1795,_t17A3);
          bool _t17A7#1 = BAnd(_t1779,_t17A5);
          if _t17A7 then goto ASSIGN17AD else goto JOIN17A9
        ASSIGN17AD:  preds = [COND1856]
          real _t17AC#3 = 0.1e-8;
          real _t17AE#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t17AC);
          tensor[2] _t17B4#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t17D0#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1775,_t1562);
          tensor[2] _t17D2#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t17D0);
          real _t17D4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t17B4,_t17D2);
          bool _t17D6#1 = GT<real>(_t17AE,_t17D4);
          tensor[2] _t17DC#1 = <tensor[2]>[_t17AC,_t17AC];
          tensor[2] _t17FC#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t17DC,_t17D2);
          real _t17FE#1 = TensorIndex<tensor[2],[0]>(_t17FC);
          bool _t1802#1 = GT<real>(_t17FE,_t1530);
          real _t182A#1 = TensorIndex<tensor[2],[1]>(_t17FC);
          bool _t182E#1 = GT<real>(_t182A,_t1530);
          bool _t1830#1 = BAnd(_t1802,_t182E);
          bool _t1832#1 = BAnd(_t17D6,_t1830);
          if _t1832 then goto ASSIGN1852 else goto JOIN1834
        ASSIGN1852:  preds = [COND1853]
          int face1850#1 = 2;
          goto JOIN1834
        JOIN1834:  preds = [ASSIGN1852,COND1853]
          int face1851#1 = phi(face1850,face175B)
          real time184E#1 = phi(_t1775,time175A)
          goto JOIN17A9
        JOIN17A9:  preds = [JOIN1834,COND1856]
          int face1855#2 = phi(face1851,face175B)
          real time1854#1 = phi(time184E,time175A)
          bool _t1859#1 = NEQ<int>(face1855,face1567);
          if _t1859 then goto ASSIGN2B18 else goto ASSIGN2B17
        ASSIGN2B18:  preds = [COND186F]
          real _t185E#1 = Max<real>(time1854,_t156B);
          real _t1860#1 = IntToReal(face1855);
          tensor[2] _t1862#1 = <tensor[2]>[_t185E,_t1860];
          goto JOIN185B
        JOIN185B:  preds = [ASSIGN1863,ASSIGN2B17]
          tensor[2] _t1865#1 = phi(_t1862,_t186B)
          real newTime1870#2 = TensorIndex<tensor[2],[0]>(_t1865);
          bool _t1874#1 = GTE<real>(newTime1870,_t156B);
          if _t1874 then goto COND19F5 else goto JOIN1876
        COND19F5:  preds = [COND22C2]
          if _t15B3 then goto ASSIGN194C else goto JOIN1948
        ASSIGN194C:  preds = [COND19F5]
          real _t194B#3 = 0.1e-8;
          real _t194D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t194B);
          tensor[2] _t1953#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t196F#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1581,_t1562);
          tensor[2] _t1971#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t196F);
          real _t1973#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1953,_t1971);
          bool _t1975#1 = GT<real>(_t194D,_t1973);
          tensor[2] _t197B#1 = <tensor[2]>[_t194B,_t194B];
          tensor[2] _t199B#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t197B,_t1971);
          real _t199D#1 = TensorIndex<tensor[2],[0]>(_t199B);
          bool _t19A1#1 = GT<real>(_t199D,_t1530);
          real _t19C9#1 = TensorIndex<tensor[2],[1]>(_t199B);
          bool _t19CD#1 = GT<real>(_t19C9,_t1530);
          bool _t19CF#1 = BAnd(_t19A1,_t19CD);
          bool _t19D1#1 = BAnd(_t1975,_t19CF);
          if _t19D1 then goto ASSIGN19F1 else goto JOIN19D3
        ASSIGN19F1:  preds = [COND19F2]
          int face19EF#1 = 0;
          goto JOIN19D3
        JOIN19D3:  preds = [ASSIGN19F1,COND19F2]
          int face19F0#1 = phi(face19EF,face1567)
          real time19ED#1 = phi(_t1581,time1565)
          goto JOIN1948
        JOIN1948:  preds = [JOIN19D3,COND19F5]
          int face19F4#2 = phi(face19F0,face1567)
          real time19F3#3 = phi(time19ED,time1565)
          bool _t1A2E#1 = GT<real>(time19F3,_t167B);
          bool _t1A3E#1 = BAnd(_t1A2E,_t16A9);
          bool _t1A40#1 = BAnd(_t167F,_t1A3E);
          if _t1A40 then goto ASSIGN1A46 else goto JOIN1A42
        ASSIGN1A46:  preds = [COND1AEF]
          real _t1A45#3 = 0.1e-8;
          real _t1A47#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1A45);
          tensor[2] _t1A4D#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t1A69#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t167B,_t1562);
          tensor[2] _t1A6B#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1A69);
          real _t1A6D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1A4D,_t1A6B);
          bool _t1A6F#1 = GT<real>(_t1A47,_t1A6D);
          tensor[2] _t1A75#1 = <tensor[2]>[_t1A45,_t1A45];
          tensor[2] _t1A95#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1A75,_t1A6B);
          real _t1A97#1 = TensorIndex<tensor[2],[0]>(_t1A95);
          bool _t1A9B#1 = GT<real>(_t1A97,_t1530);
          real _t1AC3#1 = TensorIndex<tensor[2],[1]>(_t1A95);
          bool _t1AC7#1 = GT<real>(_t1AC3,_t1530);
          bool _t1AC9#1 = BAnd(_t1A9B,_t1AC7);
          bool _t1ACB#1 = BAnd(_t1A6F,_t1AC9);
          if _t1ACB then goto ASSIGN1AEB else goto JOIN1ACD
        ASSIGN1AEB:  preds = [COND1AEC]
          int face1AE9#1 = 1;
          goto JOIN1ACD
        JOIN1ACD:  preds = [ASSIGN1AEB,COND1AEC]
          int face1AEA#1 = phi(face1AE9,face19F4)
          real time1AE7#1 = phi(_t167B,time19F3)
          goto JOIN1A42
        JOIN1A42:  preds = [JOIN1ACD,COND1AEF]
          int face1AEE#2 = phi(face1AEA,face19F4)
          real time1AED#3 = phi(time1AE7,time19F3)
          bool _t1B28#1 = GT<real>(time1AED,_t1775);
          bool _t1B38#1 = BAnd(_t1B28,_t17A3);
          bool _t1B3A#1 = BAnd(_t1779,_t1B38);
          if _t1B3A then goto ASSIGN1B40 else goto JOIN1B3C
        ASSIGN1B40:  preds = [COND1BE9]
          real _t1B3F#3 = 0.1e-8;
          real _t1B41#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1B3F);
          tensor[2] _t1B47#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t1B63#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1775,_t1562);
          tensor[2] _t1B65#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1B63);
          real _t1B67#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1B47,_t1B65);
          bool _t1B69#1 = GT<real>(_t1B41,_t1B67);
          tensor[2] _t1B6F#1 = <tensor[2]>[_t1B3F,_t1B3F];
          tensor[2] _t1B8F#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1B6F,_t1B65);
          real _t1B91#1 = TensorIndex<tensor[2],[0]>(_t1B8F);
          bool _t1B95#1 = GT<real>(_t1B91,_t1530);
          real _t1BBD#1 = TensorIndex<tensor[2],[1]>(_t1B8F);
          bool _t1BC1#1 = GT<real>(_t1BBD,_t1530);
          bool _t1BC3#1 = BAnd(_t1B95,_t1BC1);
          bool _t1BC5#1 = BAnd(_t1B69,_t1BC3);
          if _t1BC5 then goto ASSIGN1BE5 else goto JOIN1BC7
        ASSIGN1BE5:  preds = [COND1BE6]
          int face1BE3#1 = 2;
          goto JOIN1BC7
        JOIN1BC7:  preds = [ASSIGN1BE5,COND1BE6]
          int face1BE4#1 = phi(face1BE3,face1AEE)
          real time1BE1#1 = phi(_t1775,time1AED)
          goto JOIN1B3C
        JOIN1B3C:  preds = [JOIN1BC7,COND1BE9]
          int face1BE8#2 = phi(face1BE4,face1AEE)
          real time1BE7#1 = phi(time1BE1,time1AED)
          bool _t1BEC#1 = NEQ<int>(face1BE8,face1567);
          if _t1BEC then goto ASSIGN2B3D else goto ASSIGN2B3C
        ASSIGN2B3D:  preds = [COND1C02]
          real _t1BF1#1 = Max<real>(time1BE7,_t156B);
          real _t1BF3#1 = IntToReal(face1BE8);
          tensor[2] _t1BF5#1 = <tensor[2]>[_t1BF1,_t1BF3];
          goto JOIN1BEE
        JOIN1BEE:  preds = [ASSIGN1BF6,ASSIGN2B3C]
          tensor[2] _t1BF8#1 = phi(_t1BF5,_t1BFE)
          real _t1C03#1 = TensorIndex<tensor[2],[0]>(_t1BF8);
          tensor[2] _t1C05#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1C03,_t1562);
          tensor[2] _t1C07#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1C05);
          if _t15B3 then goto ASSIGN1C9C else goto JOIN1C98
        ASSIGN1C9C:  preds = [COND1D45]
          real _t1C9B#3 = 0.1e-8;
          real _t1C9D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1C9B);
          tensor[2] _t1CA3#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t1CBF#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1581,_t1562);
          tensor[2] _t1CC1#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1CBF);
          real _t1CC3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1CA3,_t1CC1);
          bool _t1CC5#1 = GT<real>(_t1C9D,_t1CC3);
          tensor[2] _t1CCB#1 = <tensor[2]>[_t1C9B,_t1C9B];
          tensor[2] _t1CEB#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1CCB,_t1CC1);
          real _t1CED#1 = TensorIndex<tensor[2],[0]>(_t1CEB);
          bool _t1CF1#1 = GT<real>(_t1CED,_t1530);
          real _t1D19#1 = TensorIndex<tensor[2],[1]>(_t1CEB);
          bool _t1D1D#1 = GT<real>(_t1D19,_t1530);
          bool _t1D1F#1 = BAnd(_t1CF1,_t1D1D);
          bool _t1D21#1 = BAnd(_t1CC5,_t1D1F);
          if _t1D21 then goto ASSIGN1D41 else goto JOIN1D23
        ASSIGN1D41:  preds = [COND1D42]
          int face1D3F#1 = 0;
          goto JOIN1D23
        JOIN1D23:  preds = [ASSIGN1D41,COND1D42]
          int face1D40#1 = phi(face1D3F,face1567)
          real time1D3D#1 = phi(_t1581,time1565)
          goto JOIN1C98
        JOIN1C98:  preds = [JOIN1D23,COND1D45]
          int face1D44#2 = phi(face1D40,face1567)
          real time1D43#3 = phi(time1D3D,time1565)
          bool _t1D7E#1 = GT<real>(time1D43,_t167B);
          bool _t1D8E#1 = BAnd(_t1D7E,_t16A9);
          bool _t1D90#1 = BAnd(_t167F,_t1D8E);
          if _t1D90 then goto ASSIGN1D96 else goto JOIN1D92
        ASSIGN1D96:  preds = [COND1E3F]
          real _t1D95#3 = 0.1e-8;
          real _t1D97#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1D95);
          tensor[2] _t1D9D#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t1DB9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t167B,_t1562);
          tensor[2] _t1DBB#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1DB9);
          real _t1DBD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1D9D,_t1DBB);
          bool _t1DBF#1 = GT<real>(_t1D97,_t1DBD);
          tensor[2] _t1DC5#1 = <tensor[2]>[_t1D95,_t1D95];
          tensor[2] _t1DE5#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1DC5,_t1DBB);
          real _t1DE7#1 = TensorIndex<tensor[2],[0]>(_t1DE5);
          bool _t1DEB#1 = GT<real>(_t1DE7,_t1530);
          real _t1E13#1 = TensorIndex<tensor[2],[1]>(_t1DE5);
          bool _t1E17#1 = GT<real>(_t1E13,_t1530);
          bool _t1E19#1 = BAnd(_t1DEB,_t1E17);
          bool _t1E1B#1 = BAnd(_t1DBF,_t1E19);
          if _t1E1B then goto ASSIGN1E3B else goto JOIN1E1D
        ASSIGN1E3B:  preds = [COND1E3C]
          int face1E39#1 = 1;
          goto JOIN1E1D
        JOIN1E1D:  preds = [ASSIGN1E3B,COND1E3C]
          int face1E3A#1 = phi(face1E39,face1D44)
          real time1E37#1 = phi(_t167B,time1D43)
          goto JOIN1D92
        JOIN1D92:  preds = [JOIN1E1D,COND1E3F]
          int face1E3E#2 = phi(face1E3A,face1D44)
          real time1E3D#3 = phi(time1E37,time1D43)
          bool _t1E78#1 = GT<real>(time1E3D,_t1775);
          bool _t1E88#1 = BAnd(_t1E78,_t17A3);
          bool _t1E8A#1 = BAnd(_t1779,_t1E88);
          if _t1E8A then goto ASSIGN1E90 else goto JOIN1E8C
        ASSIGN1E90:  preds = [COND1F39]
          real _t1E8F#3 = 0.1e-8;
          real _t1E91#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1E8F);
          tensor[2] _t1E97#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t1EB3#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1775,_t1562);
          tensor[2] _t1EB5#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t1EB3);
          real _t1EB7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1E97,_t1EB5);
          bool _t1EB9#1 = GT<real>(_t1E91,_t1EB7);
          tensor[2] _t1EBF#1 = <tensor[2]>[_t1E8F,_t1E8F];
          tensor[2] _t1EDF#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t1EBF,_t1EB5);
          real _t1EE1#1 = TensorIndex<tensor[2],[0]>(_t1EDF);
          bool _t1EE5#1 = GT<real>(_t1EE1,_t1530);
          real _t1F0D#1 = TensorIndex<tensor[2],[1]>(_t1EDF);
          bool _t1F11#1 = GT<real>(_t1F0D,_t1530);
          bool _t1F13#1 = BAnd(_t1EE5,_t1F11);
          bool _t1F15#1 = BAnd(_t1EB9,_t1F13);
          if _t1F15 then goto ASSIGN1F35 else goto JOIN1F17
        ASSIGN1F35:  preds = [COND1F36]
          int face1F33#1 = 2;
          goto JOIN1F17
        JOIN1F17:  preds = [ASSIGN1F35,COND1F36]
          int face1F34#1 = phi(face1F33,face1E3E)
          real time1F31#1 = phi(_t1775,time1E3D)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1F17,COND1F39]
          int face1F38#2 = phi(face1F34,face1E3E)
          real time1F37#1 = phi(time1F31,time1E3D)
          bool _t1F3C#1 = NEQ<int>(face1F38,face1567);
          if _t1F3C then goto ASSIGN2B63 else goto ASSIGN2B62
        ASSIGN2B63:  preds = [COND1F52]
          real _t1F41#1 = Max<real>(time1F37,_t156B);
          real _t1F43#1 = IntToReal(face1F38);
          tensor[2] _t1F45#1 = <tensor[2]>[_t1F41,_t1F43];
          goto JOIN1F3E
        JOIN1F3E:  preds = [ASSIGN1F46,ASSIGN2B62]
          tensor[2] _t1F48#1 = phi(_t1F45,_t1F4E)
          real _t1F53#1 = TensorIndex<tensor[2],[0]>(_t1F48);
          tensor[2] _t1F55#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1F53,dposProj14A1);
          tensor[2] _t1F57#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj149E,_t1F55);
          if _t15B3 then goto ASSIGN1FEC else goto JOIN1FE8
        ASSIGN1FEC:  preds = [COND2095]
          real _t1FEB#3 = 0.1e-8;
          real _t1FED#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1FEB);
          tensor[2] _t1FF3#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t200F#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1581,_t1562);
          tensor[2] _t2011#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t200F);
          real _t2013#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t1FF3,_t2011);
          bool _t2015#1 = GT<real>(_t1FED,_t2013);
          tensor[2] _t201B#1 = <tensor[2]>[_t1FEB,_t1FEB];
          tensor[2] _t203B#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t201B,_t2011);
          real _t203D#1 = TensorIndex<tensor[2],[0]>(_t203B);
          bool _t2041#1 = GT<real>(_t203D,_t1530);
          real _t2069#1 = TensorIndex<tensor[2],[1]>(_t203B);
          bool _t206D#1 = GT<real>(_t2069,_t1530);
          bool _t206F#1 = BAnd(_t2041,_t206D);
          bool _t2071#1 = BAnd(_t2015,_t206F);
          if _t2071 then goto ASSIGN2091 else goto JOIN2073
        ASSIGN2091:  preds = [COND2092]
          int face208F#1 = 0;
          goto JOIN2073
        JOIN2073:  preds = [ASSIGN2091,COND2092]
          int face2090#1 = phi(face208F,face1567)
          real time208D#1 = phi(_t1581,time1565)
          goto JOIN1FE8
        JOIN1FE8:  preds = [JOIN2073,COND2095]
          int face2094#2 = phi(face2090,face1567)
          real time2093#3 = phi(time208D,time1565)
          bool _t20CE#1 = GT<real>(time2093,_t167B);
          bool _t20DE#1 = BAnd(_t20CE,_t16A9);
          bool _t20E0#1 = BAnd(_t167F,_t20DE);
          if _t20E0 then goto ASSIGN20E6 else goto JOIN20E2
        ASSIGN20E6:  preds = [COND218F]
          real _t20E5#3 = 0.1e-8;
          real _t20E7#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t20E5);
          tensor[2] _t20ED#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t2109#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t167B,_t1562);
          tensor[2] _t210B#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t2109);
          real _t210D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t20ED,_t210B);
          bool _t210F#1 = GT<real>(_t20E7,_t210D);
          tensor[2] _t2115#1 = <tensor[2]>[_t20E5,_t20E5];
          tensor[2] _t2135#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2115,_t210B);
          real _t2137#1 = TensorIndex<tensor[2],[0]>(_t2135);
          bool _t213B#1 = GT<real>(_t2137,_t1530);
          real _t2163#1 = TensorIndex<tensor[2],[1]>(_t2135);
          bool _t2167#1 = GT<real>(_t2163,_t1530);
          bool _t2169#1 = BAnd(_t213B,_t2167);
          bool _t216B#1 = BAnd(_t210F,_t2169);
          if _t216B then goto ASSIGN218B else goto JOIN216D
        ASSIGN218B:  preds = [COND218C]
          int face2189#1 = 1;
          goto JOIN216D
        JOIN216D:  preds = [ASSIGN218B,COND218C]
          int face218A#1 = phi(face2189,face2094)
          real time2187#1 = phi(_t167B,time2093)
          goto JOIN20E2
        JOIN20E2:  preds = [JOIN216D,COND218F]
          int face218E#2 = phi(face218A,face2094)
          real time218D#3 = phi(time2187,time2093)
          bool _t21C8#1 = GT<real>(time218D,_t1775);
          bool _t21D8#1 = BAnd(_t21C8,_t17A3);
          bool _t21DA#1 = BAnd(_t1779,_t21D8);
          if _t21DA then goto ASSIGN21E0 else goto JOIN21DC
        ASSIGN21E0:  preds = [COND2289]
          real _t21DF#3 = 0.1e-8;
          real _t21E1#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t21DF);
          tensor[2] _t21E7#1 = <tensor[2]>[_t1569,_t1569];
          tensor[2] _t2203#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t1775,_t1562);
          tensor[2] _t2205#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t154C,_t2203);
          real _t2207#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t21E7,_t2205);
          bool _t2209#1 = GT<real>(_t21E1,_t2207);
          tensor[2] _t220F#1 = <tensor[2]>[_t21DF,_t21DF];
          tensor[2] _t222F#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t220F,_t2205);
          real _t2231#1 = TensorIndex<tensor[2],[0]>(_t222F);
          bool _t2235#1 = GT<real>(_t2231,_t1530);
          real _t225D#1 = TensorIndex<tensor[2],[1]>(_t222F);
          bool _t2261#1 = GT<real>(_t225D,_t1530);
          bool _t2263#1 = BAnd(_t2235,_t2261);
          bool _t2265#1 = BAnd(_t2209,_t2263);
          if _t2265 then goto ASSIGN2285 else goto JOIN2267
        ASSIGN2285:  preds = [COND2286]
          int face2283#1 = 2;
          goto JOIN2267
        JOIN2267:  preds = [ASSIGN2285,COND2286]
          int face2284#1 = phi(face2283,face218E)
          real time2281#1 = phi(_t1775,time218D)
          goto JOIN21DC
        JOIN21DC:  preds = [JOIN2267,COND2289]
          int face2288#2 = phi(face2284,face218E)
          real time2287#1 = phi(time2281,time218D)
          bool _t228C#1 = NEQ<int>(face2288,face1567);
          if _t228C then goto ASSIGN2B87 else goto ASSIGN2B86
        ASSIGN2B87:  preds = [COND22A2]
          real _t2291#1 = Max<real>(time2287,_t156B);
          real _t2293#1 = IntToReal(face2288);
          tensor[2] _t2295#1 = <tensor[2]>[_t2291,_t2293];
          goto JOIN228E
        JOIN228E:  preds = [ASSIGN2296,ASSIGN2B86]
          tensor[2] _t2298#1 = phi(_t2295,_t229E)
          real _t22A3#1 = TensorIndex<tensor[2],[1]>(_t2298);
          int _t22A5#1 = FloorToInt(_t22A3);
          femData:MeshPos p22A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t14F8,_t14F6,_t1C07,_t1F57,_t22A5);
          real newRayTime22A9#3 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (camNearVsp149B,camFarVsp149C,newTime1870);
          real[] normalizedTimes22AB#1 = Append<real>(normalizedTimes14EC,newRayTime22A9);
          femData:MeshPos[] poses22AE#1 = Append<femData:MeshPos>(poses14EB,p22A7);
          bool _t22B1#1 = GT<real>(startTime14EF,newRayTime22A9);
          if _t22B1 then goto JOIN22B3 else goto JOIN22B3
        JOIN22B3:  preds = [COND22BA,COND22BA]
          real startTime22B5#1 = phi(newRayTime22A9,startTime14EF)
          int currentCellInt22B8#1 = phi(cellIntersects14ED,currentCellInt14EE)
          int _t22BD#1 = 1;
          int cellIntersects22BF#1 = IAdd(cellIntersects14ED,_t22BD);
          goto JOIN1876
        JOIN1876:  preds = [ASSIGN22C1,COND22C2]
          real startTime22BC#1 = phi(startTime22B5,startTime14EF)
          int currentCellInt22BB#1 = phi(currentCellInt22B8,currentCellInt14EE)
          int cellIntersects22C0#1 = phi(cellIntersects22BF,cellIntersects14ED)
          real[] normalizedTimes22AC#1 = phi(normalizedTimes22AB,normalizedTimes14EC)
          femData:MeshPos[] poses22AF#1 = phi(poses22AE,poses14EB)
          goto JOIN14FE
        ASSIGN2B86:  preds = [COND22A2]
          tensor[2] _t229E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN228E
        ASSIGN2B62:  preds = [COND1F52]
          tensor[2] _t1F4E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1F3E
        ASSIGN2B3C:  preds = [COND1C02]
          tensor[2] _t1BFE#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1BEE
        ASSIGN2B17:  preds = [COND186F]
          tensor[2] _t186B#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN185B
        ASSIGN22C7:  preds = [FOREACH14F0]
          int _t22C6#1 = 0;
          bool _t22C8#1 = NEQ<int>(cellIntersects14ED,_t22C6);
          if _t22C8 then goto ASSIGN22CD else goto ASSIGN2313
        ASSIGN22CD:  preds = [COND232A]
          femData:MeshPos pos22CB#4 = Subscript<femData:MeshPos[]>(poses14EB,currentCellInt14EE);
          real rayN22CE#2 = Subscript<real[]>(normalizedTimes14EC,currentCellInt14EE);
          tensor[3] _t22D1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN22CE,rayVec149A);
          tensor[3] _t22D3#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig1499,_t22D1);
          tensor[3][2] _t22D5#1 = <tensor[3][2]>{rayOrig1499,_t22D3};
          tensor[3][] _t22D7#1 = MkDynamic<tensor[3],2>(_t22D5);
          tensor[3][] spaceInter22D9#1 = Concat<tensor[3]>(spaceInter14A6,_t22D7);
          tensor[2] _t22DC#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos22CB);
          tensor[2][1] _t22DE#1 = <tensor[2][1]>{_t22DC};
          tensor[2][] _t22E0#1 = MkDynamic<tensor[2],1>(_t22DE);
          femData:Mesh _t22E5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos22CB);
          int _t22E7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos22CB);
          femData:MeshCell currentCell22E9#2 = LoadFem<femData:MeshCell>(_t22E5,_t22E7);
          femData:MeshCell[1] _t22EC#1 = <femData:MeshCell[1]>{currentCell22E9};
          femData:MeshCell[] _t22EE#1 = MkDynamic<femData:MeshCell,1>(_t22EC);
          string _t22F3#1 = "In the interval:";
          tensor[2] _t22F5#1 = <tensor[2]>[camNearVsp149B,camFarVsp149C];
          string _t22F7#3 = "\n";
          Print<[string,tensor[2],string]>(_t22F3,_t22F5,_t22F7);
          string _t22FA#1 = "Possible times:";
          Print<[string,real[],string]>(_t22FA,normalizedTimes14EC,_t22F7);
          string _t22FF#1 = "cells:";
          femData:MeshCell[] accum2301#1 = <femData:MeshCell[]>{};
        FOREACH2305:  preds = [ASSIGN2302,NEXT230E]
          foreach (p2303 in poses14EB) on exit goto MASSIGN2AE7
            femData:MeshCell[] accum2304#2 = phi(accum2301,accum230C)
          femData:Mesh _t2306#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p2303);
          int _t2308#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p2303);
          femData:MeshCell _t230A#1 = LoadFem<femData:MeshCell>(_t2306,_t2308);
          femData:MeshCell[] accum230C#1 = Append<femData:MeshCell>(accum2304,_t230A);
          goto FOREACH2305
        MASSIGN2AE7:  preds = [FOREACH2305]
          Print<[string,femData:MeshCell[],string]>(_t22FF,accum2304,_t22F7);
          goto JOIN22CA
        JOIN22CA:  preds = [MASSIGN2AE7,*STABILIZE231C]
          femData:MeshPos pos22CC#1 = phi(pos22CB)
          femData:MeshCell currentCell22EA#1 = phi(currentCell22E9)
          real rayN22CF#1 = phi(rayN22CE)
          femData:MeshCell[] cellInter22F1#1 = phi(_t22EE)
          tensor[2][] refSpaceInter22E3#1 = phi(_t22E0)
          tensor[3][] spaceInter22DA#1 = phi(spaceInter22D9)
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.spaceInter = spaceInter22DA;
          self.refSpaceInter = refSpaceInter22E3;
          self.cellInter = cellInter22F1;
          self.currentCellInt = currentCellInt14EE;
          self.rayN = rayN22CF;
          self.currentCell = currentCell22EA;
          self.pos = pos22CC;
          self.startsInside = startsInside22C4;
          active
        ASSIGN2313:  preds = [COND232A]
          string _t2312#1 = "No intersection!\n";
          Print<[string]>(_t2312);
          string _t2315#1 = "Ui: ";
          string _t2317#1 = " Vi:";
          string _t2319#1 = "\n";
          Print<[string,int,string,int,string]>(_t2315,ui14AF,_t2317,vi14B0,_t2319);
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.currentCellInt = currentCellInt14EE;
          self.startsInside = startsInside22C4;
          stabilize
          goto JOIN22CA
        ASSIGN14D6:  preds = [COND14D7]
          bool _t14D5#1 = NEQ<int>(vi14B0,debugV148E);
          goto JOIN14D1
    end start
    method update
        ENTRY2AC0:  preds = []
          real rayU233A#0 = self.rayU;
          real rayV233B#0 = self.rayV;
          tensor[3] UV233C#0 = self.UV;
          tensor[3] rayOrig233D#4 = self.rayOrig;
          tensor[3] rayVec233E#6 = self.rayVec;
          real camNearVsp233F#0 = self.camNearVsp;
          real camFarVsp2340#6 = self.camFarVsp;
          tensor[3] rayStart2341#0 = self.rayStart;
          tensor[2] rayStartProj2342#0 = self.rayStartProj;
          tensor[3] rayEnd2343#0 = self.rayEnd;
          tensor[3] dpos2344#0 = self.dpos;
          tensor[2] dposProj2345#0 = self.dposProj;
          femData:MeshPos[] poses2346#2 = self.poses;
          real[] normalizedTimes2347#4 = self.normalizedTimes;
          int cellIntersects2348#1 = self.cellIntersects;
          tensor[2][] rayCellInter2349#2 = self.rayCellInter;
          tensor[3][] spaceInter234A#3 = self.spaceInter;
          tensor[2][] refSpaceInter234B#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter234C#4 = self.cellInter;
          int currentCellInt234D#0 = self.currentCellInt;
          real rayN234E#7 = self.rayN;
          femData:MeshCell currentCell234F#2 = self.currentCell;
          int steps2350#1 = self.steps;
          femData:MeshPos pos2351#8 = self.pos;
          bool startsInside2352#2 = self.startsInside;
          int ui2353#1 = self.ui;
          int vi2354#1 = self.vi;
          string _t2370#1 = "Ui: ";
          string _t2372#1 = " vi: ";
          string _t2374#21 = "\n";
          Print<[string,int,string,int,string]>(_t2370,ui2353,_t2372,vi2354,_t2374);
          string _t2377#1 = "The current ref pos is:";
          tensor[2] _t2379#4 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          Print<[string,tensor[2],string]>(_t2377,_t2379,_t2374);
          string _t237E#1 = "Current cell:";
          femData:Mesh _t2380#6 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2382#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2384#3 = LoadFem<femData:MeshCell>(_t2380,_t2382);
          Print<[string,femData:MeshCell,string]>(_t237E,_t2384,_t2374);
          string _t2389#1 = "The current time is:";
          Print<[string,real,string]>(_t2389,rayN234E,_t2374);
          string _t238E#2 = "The current world pos is:";
          field _t2398#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2382,_t2380,_t2380);
          tensor[2] _t239A#3 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2398,_t2379);
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          tensor[3] _t23A3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN234E,rayVec233E);
          tensor[3] stupid23A5#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t23A3);
          string _t23A7#2 = "The current world pos should be:";
          real _t23A9#1 = TensorIndex<tensor[3],[0]>(stupid23A5);
          real _t23AB#1 = TensorIndex<tensor[3],[1]>(stupid23A5);
          tensor[2] _t23AD#3 = <tensor[2]>[_t23A9,_t23AB];
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          real _t23B2#10 = 0.1e1;
          real _t23B4#3 = 0.1e-8;
          real _t23B6#1 = λ(T0[],T1[])<(T0 + T1)> (_t23B2,_t23B4);
          tensor[2] _t23BC#1 = <tensor[2]>[_t23B2,_t23B2];
          real _t23C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t23BC,_t2379);
          bool _t23C2#1 = GT<real>(_t23B6,_t23C0);
          tensor[2] _t23C8#1 = <tensor[2]>[_t23B4,_t23B4];
          tensor[2] _t23CC#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t23C8,_t2379);
          real _t23CE#1 = TensorIndex<tensor[2],[0]>(_t23CC);
          real _t23D0#4 = -0.e0;
          bool _t23D2#1 = GT<real>(_t23CE,_t23D0);
          real _t23DE#1 = TensorIndex<tensor[2],[1]>(_t23CC);
          bool _t23E2#1 = GT<real>(_t23DE,_t23D0);
          bool _t23E4#1 = BAnd(_t23D2,_t23E2);
          bool _t23E6#1 = BAnd(_t23C2,_t23E4);
          bool _t23E8#1 = BNot(_t23E6);
          if _t23E8 then goto ASSIGN23EC else goto JOIN23EA
        ASSIGN23EC:  preds = [COND23F5]
          string _t23EB#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t23EB);
          bool _t23EE#1 = BNot(startsInside2352);
          if _t23EE then goto ASSIGN23F2 else goto JOIN23F0
        ASSIGN23F2:  preds = [COND23F4]
          string _t23F1#1 = "Not because of an inside\n";
          Print<[string]>(_t23F1);
          goto JOIN23F0
        JOIN23F0:  preds = [MASSIGN23F3,COND23F4]
          goto JOIN23EA
        JOIN23EA:  preds = [JOIN23F0,COND23F5]
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          tensor[2] _t2430#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t239A,_t23AD);
          real err2432#2 = λ(T0[2])<Sqrt(Σ(i0=0..1)<((T0_{i0} * T0_{i0}))>(i0=0..1))> (_t2430);
          real _t2434#1 = 0.1e-4;
          bool _t2436#1 = GT<real>(err2432,_t2434);
          if _t2436 then goto ASSIGN243A else goto ASSIGN243F
        ASSIGN243A:  preds = [COND2441]
          string _t2439#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t2439,err2432,_t2374);
          goto JOIN2438
        JOIN2438:  preds = [MASSIGN2B9B,MASSIGN2440]
          int _t2442#13 = 1;
          int steps2444#4 = IAdd(steps2350,_t2442);
          string _t2446#1 = "Orig:";
          string _t2448#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t2446,rayOrig233D,_t2448,rayVec233E,_t2374);
          real _t244D#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp2340,rayN234E);
          tensor[3] newDpos244F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t244D,rayVec233E);
          tensor[2] _t2451#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t2459#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2384);
          int _t2469#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2384);
          field _t246B#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2469,_t2459,_t2459);
          field _t246D#2 = λ(F0[2])<∂/∂x_{i1}@(F0_{i0})>_{2 2} (_t246B);
          tensor[2] _t2473#2 = <tensor[2]>[_t23D0,_t23D0];
          tensor[2,2] _t2475#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t246D,_t2473);
          tensor[2,2] _t2477#1 = λ(T0[2 2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * T0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * T0_{i3,'0'} * T0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t2475);
          real _t2479#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t247B#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t247D#2 = <tensor[2]>[_t2479,_t247B];
          tensor[2] _t247F#3 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t2477,_t247D);
          int _t2481#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos2351);
          real time2484#6 = +inf;
          int face2486#9 = -1;
          real faceTime2488#6 = -inf;
          real _t248C#14 = 0.e0;
          tensor[2] _t248E#7 = <tensor[2]>[_t23B2,_t248C];
          tensor[2] _t2490#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t248E,_t2451);
          real _t2492#6 = -0.1e1;
          tensor[2] _t2496#5 = <tensor[2]>[_t2492,_t23B2];
          real _t249E#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t2496);
          tensor[2] _t24A0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2496,_t249E);
          real _t24A2#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2490,_t24A0);
          real _t24A4#6 = -0.1e-15;
          bool _t24A6#1 = GTE<real>(_t24A2,_t24A4);
          bool _t24C2#1 = GT<real>(time2484,_t24A2);
          real _t24CC#1 = λ(T0[])<Abs(T0)> (_t249E);
          real _t24CE#6 = 0.1e-20;
          bool _t24D0#1 = GTE<real>(_t24CC,_t24CE);
          bool _t24D2#1 = BAnd(_t24C2,_t24D0);
          bool _t24D4#1 = BAnd(_t24A6,_t24D2);
          if _t24D4 then goto ASSIGN24D8 else goto JOIN24D6
        ASSIGN24D8:  preds = [COND2519]
          int _t24D7#2 = 0;
          bool _t24D9#1 = NEQ<int>(_t2481,_t24D7);
          if _t24D9 then goto JOIN24DB else goto JOIN24DB
        JOIN24DB:  preds = [COND2515,COND2515]
          real faceTime2513#1 = phi(faceTime2488,_t24A2)
          int face24F8#1 = phi(_t24D7,face2486)
          real time24F5#1 = phi(_t24A2,time2484)
          goto JOIN24D6
        JOIN24D6:  preds = [JOIN24DB,COND2519]
          real faceTime2518#2 = phi(faceTime2513,faceTime2488)
          int face2517#2 = phi(face24F8,face2486)
          real time2516#3 = phi(time24F5,time2484)
          tensor[2] _t251E#3 = <tensor[2]>[_t248C,_t248C];
          tensor[2] _t2520#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t251E,_t2451);
          tensor[2] _t2526#5 = <tensor[2]>[_t248C,_t23B2];
          real _t252E#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t2526);
          tensor[2] _t2530#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2526,_t252E);
          real _t2532#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2520,_t2530);
          bool _t2536#1 = GTE<real>(_t2532,_t24A4);
          bool _t2552#1 = GT<real>(time2516,_t2532);
          real _t255C#1 = λ(T0[])<Abs(T0)> (_t252E);
          bool _t2560#1 = GTE<real>(_t255C,_t24CE);
          bool _t2562#1 = BAnd(_t2552,_t2560);
          bool _t2564#1 = BAnd(_t2536,_t2562);
          if _t2564 then goto ASSIGN2BAC else goto JOIN2566
        ASSIGN2BAC:  preds = [COND25A9]
          bool _t2569#1 = NEQ<int>(_t2481,_t2442);
          if _t2569 then goto JOIN256B else goto JOIN256B
        JOIN256B:  preds = [COND25A5,COND25A5]
          real faceTime25A3#1 = phi(faceTime2518,_t2532)
          int face2588#1 = phi(_t2442,face2517)
          real time2585#1 = phi(_t2532,time2516)
          goto JOIN2566
        JOIN2566:  preds = [JOIN256B,COND25A9]
          real faceTime25A8#2 = phi(faceTime25A3,faceTime2518)
          int face25A7#2 = phi(face2588,face2517)
          real time25A6#3 = phi(time2585,time2516)
          real _t25BE#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t247F,_t248E);
          tensor[2] _t25C0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t248E,_t25BE);
          real _t25C2#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2520,_t25C0);
          bool _t25C6#1 = GTE<real>(_t25C2,_t24A4);
          bool _t25E2#1 = GT<real>(time25A6,_t25C2);
          real _t25EC#1 = λ(T0[])<Abs(T0)> (_t25BE);
          bool _t25F0#1 = GTE<real>(_t25EC,_t24CE);
          bool _t25F2#1 = BAnd(_t25E2,_t25F0);
          bool _t25F4#1 = BAnd(_t25C6,_t25F2);
          if _t25F4 then goto ASSIGN25F8 else goto JOIN25F6
        ASSIGN25F8:  preds = [COND2639]
          int _t25F7#2 = 2;
          bool _t25F9#1 = NEQ<int>(_t2481,_t25F7);
          if _t25F9 then goto JOIN25FB else goto JOIN25FB
        JOIN25FB:  preds = [COND2635,COND2635]
          real faceTime2633#1 = phi(faceTime25A8,_t25C2)
          int face2618#1 = phi(_t25F7,face25A7)
          real time2615#1 = phi(_t25C2,time25A6)
          goto JOIN25F6
        JOIN25F6:  preds = [JOIN25FB,COND2639]
          real faceTime2638#2 = phi(faceTime2633,faceTime25A8)
          int face2637#2 = phi(face2618,face25A7)
          real time2636#1 = phi(time2615,time25A6)
          bool _t263C#1 = NEQ<int>(face2637,face2486);
          if _t263C then goto ASSIGN2BB7 else goto ASSIGN2BB5
        ASSIGN2BB7:  preds = [COND265F]
          real _t2641#1 = Max<real>(time2636,_t248C);
          real _t2643#1 = IntToReal(face2637);
          tensor[2] _t2645#1 = <tensor[2]>[_t2641,_t2643];
          goto JOIN263E
        JOIN263E:  preds = [ASSIGN2646,JOIN264E]
          tensor[2] _t2648#1 = phi(_t2645,_t2656)
          real nextTime2660#3 = TensorIndex<tensor[2],[0]>(_t2648);
          real _t2662#1 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (rayN234E,camFarVsp2340,nextTime2660);
          real _t2664#1 = Min<real>(camFarVsp2340,_t2662);
          real rayNp2666#6 = Max<real>(rayN234E,_t2664);
          string _t2668#1 = "Next time:";
          Print<[string,real,string]>(_t2668,nextTime2660,_t2374);
          bool _t266F#1 = GTE<real>(nextTime2660,_t248C);
          if _t266F then goto ASSIGN2673 else goto JOIN2671
        ASSIGN2673:  preds = [COND2A09]
          tensor[2] _t2672#1 = <tensor[2]>[rayN234E,rayNp2666];
          tensor[2][] rayCellInter2674#3 = Append<tensor[2]>(rayCellInter2349,_t2672);
          int _t267C#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos2351);
          field _t269C#1 = λ(F0[2])<((Σ(i5=0..1)(i7=0..1)<((ϵ_{ii5,ii0} * ϵ_{ii7,ii1} * F0_{i7,i5}))>(i5=0..1)(i7=0..1)) / ( 1)) / ( Σ(i3=0..1)(i4=0..1)<((ϵ_{ii3,ii4} * F0_{i3,'0'} * F0_{i4,'1'}))>(i3=0..1)(i4=0..1))>_{2 2} (_t246D);
          tensor[2,2] _t26A4#1 = λ(F0[2],T1[2])<Probe(F0_{i0,i1},T1)>_{2 2} (_t269C,_t2473);
          tensor[2] _t26AC#5 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (_t26A4,_t247D);
          real _t26FB#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26AC,_t2496);
          tensor[2] _t26FD#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2496,_t26FB);
          real _t26FF#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2490,_t26FD);
          bool _t2703#1 = GTE<real>(_t26FF,_t24A4);
          bool _t271F#1 = GT<real>(time2484,_t26FF);
          real _t2729#1 = λ(T0[])<Abs(T0)> (_t26FB);
          bool _t272D#1 = GTE<real>(_t2729,_t24CE);
          bool _t272F#1 = BAnd(_t271F,_t272D);
          bool _t2731#1 = BAnd(_t2703,_t272F);
          if _t2731 then goto ASSIGN2735 else goto JOIN2733
        ASSIGN2735:  preds = [COND2776]
          int _t2734#2 = 0;
          bool _t2736#1 = NEQ<int>(_t2481,_t2734);
          if _t2736 then goto JOIN2738 else goto JOIN2738
        JOIN2738:  preds = [COND2772,COND2772]
          real faceTime2770#1 = phi(faceTime2488,_t26FF)
          int face2755#1 = phi(_t2734,face2486)
          real time2752#1 = phi(_t26FF,time2484)
          goto JOIN2733
        JOIN2733:  preds = [JOIN2738,COND2776]
          real faceTime2775#2 = phi(faceTime2770,faceTime2488)
          int face2774#2 = phi(face2755,face2486)
          real time2773#3 = phi(time2752,time2484)
          real _t278B#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26AC,_t2526);
          tensor[2] _t278D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t2526,_t278B);
          real _t278F#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2520,_t278D);
          bool _t2793#1 = GTE<real>(_t278F,_t24A4);
          bool _t27AF#1 = GT<real>(time2773,_t278F);
          real _t27B9#1 = λ(T0[])<Abs(T0)> (_t278B);
          bool _t27BD#1 = GTE<real>(_t27B9,_t24CE);
          bool _t27BF#1 = BAnd(_t27AF,_t27BD);
          bool _t27C1#1 = BAnd(_t2793,_t27BF);
          if _t27C1 then goto ASSIGN2BCC else goto JOIN27C3
        ASSIGN2BCC:  preds = [COND2806]
          bool _t27C6#1 = NEQ<int>(_t2481,_t2442);
          if _t27C6 then goto JOIN27C8 else goto JOIN27C8
        JOIN27C8:  preds = [COND2802,COND2802]
          real faceTime2800#1 = phi(faceTime2775,_t278F)
          int face27E5#1 = phi(_t2442,face2774)
          real time27E2#1 = phi(_t278F,time2773)
          goto JOIN27C3
        JOIN27C3:  preds = [JOIN27C8,COND2806]
          real faceTime2805#2 = phi(faceTime2800,faceTime2775)
          int face2804#2 = phi(face27E5,face2774)
          real time2803#3 = phi(time27E2,time2773)
          real _t281B#2 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t26AC,_t248E);
          tensor[2] _t281D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t248E,_t281B);
          real _t281F#4 = λ(T0[2],T1[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i0} * T1_{i1}))>(i0=0..1)(i1=0..1)> (_t2520,_t281D);
          bool _t2823#1 = GTE<real>(_t281F,_t24A4);
          bool _t283F#1 = GT<real>(time2803,_t281F);
          real _t2849#1 = λ(T0[])<Abs(T0)> (_t281B);
          bool _t284D#1 = GTE<real>(_t2849,_t24CE);
          bool _t284F#1 = BAnd(_t283F,_t284D);
          bool _t2851#1 = BAnd(_t2823,_t284F);
          if _t2851 then goto ASSIGN2855 else goto JOIN2853
        ASSIGN2855:  preds = [COND2896]
          int _t2854#2 = 2;
          bool _t2856#1 = NEQ<int>(_t2481,_t2854);
          if _t2856 then goto JOIN2858 else goto JOIN2858
        JOIN2858:  preds = [COND2892,COND2892]
          real faceTime2890#1 = phi(faceTime2805,_t281F)
          int face2875#1 = phi(_t2854,face2804)
          real time2872#1 = phi(_t281F,time2803)
          goto JOIN2853
        JOIN2853:  preds = [JOIN2858,COND2896]
          real faceTime2895#2 = phi(faceTime2890,faceTime2805)
          int face2894#2 = phi(face2875,face2804)
          real time2893#1 = phi(time2872,time2803)
          bool _t2899#1 = NEQ<int>(face2894,face2486);
          if _t2899 then goto ASSIGN2BD9 else goto ASSIGN2BD6
        ASSIGN2BD9:  preds = [COND28BC]
          real _t289E#1 = Max<real>(time2893,_t248C);
          real _t28A0#1 = IntToReal(face2894);
          tensor[2] _t28A2#1 = <tensor[2]>[_t289E,_t28A0];
          goto JOIN289B
        JOIN289B:  preds = [ASSIGN28A3,JOIN28AB]
          tensor[2] _t28A5#3 = phi(_t28A2,_t28B3)
          real _t28C0#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28C2#6 = FloorToInt(_t28C0);
          int[2] _t28C4#2 = nextCell4132A (_t28C2,_t267C,_t2380);
          int _t28C6#4 = 0;
          int _t28C8#2 = Subscript<int[2]>(_t28C4,_t28C6);
          bool _t28CA#1 = NEQ<int>(face2486,_t28C8);
          if _t28CA then goto ASSIGN2BDE else goto ASSIGN29A5
        ASSIGN2BDE:  preds = [COND29AE]
          tensor[2][3] _t28E9#1 = <tensor[2][3]>{_t248E,_t251E,_t251E};
          int _t28F3#3 = Subscript<int[2]>(_t28C4,_t2442);
          tensor[2] _t28F5#1 = Subscript<tensor[2][3]>(_t28E9,_t28F3);
          tensor[2][3] _t2909#1 = <tensor[2][3]>{_t2496,_t2526,_t248E};
          tensor[2] _t2915#1 = Subscript<tensor[2][3]>(_t2909,_t28F3);
          real _t2917#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t2919#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t2917,_t26AC);
          tensor[2] _t291B#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t2919,_t2451);
          real _t291D#1 = TensorIndex<tensor[2],[0]>(_t291B);
          real _t2925#1 = TensorIndex<tensor[2],[1]>(_t291B);
          real[2] _t2927#1 = <real[2]>{_t291D,_t2925};
          int[3] _t292F#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t2935#1 = Subscript<int[3]>(_t292F,_t28C2);
          real _t2937#1 = Subscript<real[2]>(_t2927,_t2935);
          real[2] _t293D#1 = <real[2]>{_t23B2,_t248C};
          real[2] _t2943#1 = <real[2]>{_t248C,_t248C};
          real[2] _t2949#1 = <real[2]>{_t248C,_t248C};
          real[2][3] _t294B#1 = <real[2][3]>{_t293D,_t2943,_t2949};
          real[2] _t2951#1 = Subscript<real[2][3]>(_t294B,_t28C2);
          int[3] _t2959#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t295F#1 = Subscript<int[3]>(_t2959,_t28C2);
          real _t2961#1 = Subscript<real[2]>(_t2951,_t295F);
          real _t2963#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2937,_t2961);
          real[2] _t2969#1 = <real[2]>{_t2492,_t23B2};
          real[2] _t296F#1 = <real[2]>{_t248C,_t23B2};
          real[2] _t2975#1 = <real[2]>{_t23B2,_t248C};
          real[2][3] _t2977#1 = <real[2][3]>{_t2969,_t296F,_t2975};
          real[2] _t297D#1 = Subscript<real[2][3]>(_t2977,_t28C2);
          int[3] _t2985#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t298B#1 = Subscript<int[3]>(_t2985,_t28C2);
          real _t298D#1 = Subscript<real[2]>(_t297D,_t298B);
          real _t298F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2963,_t298D);
          tensor[2] _t2991#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t298F,_t2915);
          tensor[2] _t2993#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t28F5,_t2991);
          femData:MeshPos _t299F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2380,_t28C8,_t2993,_t28F3);
          goto JOIN28CC
        JOIN28CC:  preds = [ASSIGN2BF2,ASSIGN2BDD]
          femData:MeshPos posp29A2#5 = phi(_t299F,_t29AA)
          bool _t29AF#1 = GTE<real>(rayNp2666,camFarVsp2340);
          if _t29AF then goto ASSIGN29B3 else goto JOIN29B1
        ASSIGN29B3:  preds = [COND29CC]
          string _t29B2#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t29B2,cellInter234C,_t2374);
          tensor[3] _t29B7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2340,rayVec233E);
          tensor[3] _t29B9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t29B7);
          tensor[3][] spaceInter29BB#1 = Append<tensor[3]>(spaceInter234A,_t29B9);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29BB;
          self.rayN = rayNp2666;
          self.steps = steps2444;
          stabilize
          goto JOIN29B1
        JOIN29B1:  preds = [*STABILIZE29BE,COND29CC]
          tensor[3][] spaceInter29BC#1 = phi(spaceInter234A)
          tensor[3] _t29CE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayNp2666,rayVec233E);
          tensor[3] _t29D0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig233D,_t29CE);
          tensor[3][] spaceInter29D2#2 = Append<tensor[3]>(spaceInter29BC,_t29D0);
          tensor[2] _t29D4#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp29A2);
          tensor[2][] refSpaceInter29D6#2 = Append<tensor[2]>(refSpaceInter234B,_t29D4);
          bool _t29D9#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp29A2);
          if _t29D9 then goto ASSIGN29E0 else goto ASSIGN2A03
        ASSIGN29E0:  preds = [COND2A05]
          string _t29DF#1 = "Next cell:";
          femData:Mesh _t29E1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp29A2);
          int _t29E3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp29A2);
          femData:MeshCell _t29E5#3 = LoadFem<femData:MeshCell>(_t29E1,_t29E3);
          Print<[string,femData:MeshCell,string]>(_t29DF,_t29E5,_t2374);
          femData:MeshCell[] cellInter29F1#1 = Append<femData:MeshCell>(cellInter234C,_t29E5);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29D2;
          self.refSpaceInter = refSpaceInter29D6;
          self.cellInter = cellInter29F1;
          self.rayN = rayNp2666;
          self.currentCell = _t29E5;
          self.steps = steps2444;
          self.pos = posp29A2;
          active
          goto JOIN29DB
        JOIN29DB:  preds = [*ACTIVE29F4,MASSIGN2A04]
          femData:MeshPos pos29DD#1 = phi(pos2351)
          femData:MeshCell currentCell29EF#1 = phi(currentCell234F)
          femData:MeshCell[] cellInter29F2#1 = phi(cellInter234C)
          goto JOIN2671
        JOIN2671:  preds = [JOIN29DB,COND2A09]
          femData:MeshPos pos2A08#6 = phi(pos29DD,pos2351)
          femData:MeshCell currentCell2A07#1 = phi(currentCell29EF,currentCell234F)
          real rayN2678#3 = phi(rayNp2666,rayN234E)
          femData:MeshCell[] cellInter2A06#3 = phi(cellInter29F2,cellInter234C)
          tensor[2][] refSpaceInter29D7#2 = phi(refSpaceInter29D6,refSpaceInter234B)
          tensor[3][] spaceInter29CD#2 = phi(spaceInter29D2,spaceInter234A)
          tensor[2][] rayCellInter2675#3 = phi(rayCellInter2674,rayCellInter2349)
          int _t2A0E#1 = 0;
          int _t2A12#1 = ISub(cellIntersects2348,_t2442);
          int[] _t2A14#1 = Range(_t2A0E,_t2A12);
        FOREACH2A19:  preds = [ASSIGN2A15,NEXT2A47]
          foreach (i2A16 in _t2A14) on exit goto ASSIGN2BFF
            real estimate2A18#4 = phi(camFarVsp2340,estimate2A45)
            int newIdx2A17#7 = phi(face2486,newIdx2A44)
          real t2A1A#3 = Subscript<real[]>(normalizedTimes2347,i2A16);
          femData:MeshPos posp2A1C#2 = Subscript<femData:MeshPos[]>(poses2346,i2A16);
          bool _t2A1E#1 = GTE<real>(t2A1A,rayN2678);
          if _t2A1E then goto ASSIGN2A22 else goto JOIN2A20
        ASSIGN2A22:  preds = [COND2A46]
          bool _t2A21#1 = GTE<real>(estimate2A18,t2A1A);
          if _t2A21 then goto ASSIGN2A25 else goto JOIN2A23
        ASSIGN2A25:  preds = [COND2A43]
          femData:Mesh _t2A24#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp2A1C);
          int _t2A26#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp2A1C);
          femData:MeshCell _t2A28#1 = LoadFem<femData:MeshCell>(_t2A24,_t2A26);
          femData:Mesh _t2A2A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          int _t2A2C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:MeshCell _t2A2E#1 = LoadFem<femData:MeshCell>(_t2A2A,_t2A2C);
          int _t2A31#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A28);
          int _t2A33#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A2E);
          bool _t2A35#1 = NEQ<int>(_t2A31,_t2A33);
          if _t2A35 then goto JOIN2A39 else goto JOIN2A39
        JOIN2A39:  preds = [COND2A40,COND2A40]
          real estimate2A3B#1 = phi(t2A1A,estimate2A18)
          int newIdx2A3E#1 = phi(i2A16,newIdx2A17)
          goto JOIN2A23
        JOIN2A23:  preds = [JOIN2A39,COND2A43]
          real estimate2A42#1 = phi(estimate2A3B,estimate2A18)
          int newIdx2A41#1 = phi(newIdx2A3E,newIdx2A17)
          goto JOIN2A20
        JOIN2A20:  preds = [JOIN2A23,COND2A46]
          real estimate2A45#1 = phi(estimate2A42,estimate2A18)
          int newIdx2A44#1 = phi(newIdx2A41,newIdx2A17)
          goto FOREACH2A19
        ASSIGN2BFF:  preds = [FOREACH2A19]
          bool _t2A4A#1 = GT<int>(newIdx2A17,face2486);
          if _t2A4A then goto ASSIGN2A4E else goto ASSIGN2A9F
        ASSIGN2A4E:  preds = [COND2ABE]
          string _t2A4D#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t2A4D);
          if startsInside2352 then goto ASSIGN2A52 else goto JOIN2A50
        ASSIGN2A52:  preds = [COND2A54]
          string _t2A51#1 = "because of an inside\n";
          Print<[string]>(_t2A51);
          goto JOIN2A50
        JOIN2A50:  preds = [MASSIGN2A53,COND2A54]
          string _t2A55#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t2A55,rayVec233E,_t2374);
          string _t2A5A#1 = "world pos was:";
          tensor[2] _t2A5D#2 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2A08);
          int _t2A5F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:Mesh _t2A61#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          field _t2A64#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{2} (_t2A5F,_t2A61,_t2A61);
          tensor[2] _t2A66#1 = λ(F0[2],T1[2])<Probe(F0_{i0},T1)>_{2} (_t2A64,_t2A5D);
          Print<[string,tensor[2],string]>(_t2A5A,_t2A66,_t2374);
          string _t2A6F#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t2A6F,_t2A5D,_t2374);
          string _t2A76#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes2347,_t2A76,newIdx2A17,_t2374);
          string _t2A7B#1 = "Original time was:";
          Print<[string,real,string]>(_t2A7B,rayN2678,_t2374);
          femData:MeshPos pos2A80#3 = Subscript<femData:MeshPos[]>(poses2346,newIdx2A17);
          femData:Mesh _t2A83#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A80);
          int _t2A85#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A80);
          femData:MeshCell currentCell2A87#2 = LoadFem<femData:MeshCell>(_t2A83,_t2A85);
          femData:MeshCell[] cellInter2A8A#1 = Append<femData:MeshCell>(cellInter2A06,currentCell2A87);
          real rayN2A8D#1 = Subscript<real[]>(normalizedTimes2347,newIdx2A17);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A8A;
          self.rayN = rayN2A8D;
          self.currentCell = currentCell2A87;
          self.steps = steps2444;
          self.pos = pos2A80;
          active
          goto JOIN2A4C
        JOIN2A4C:  preds = [*ACTIVE2A90,*STABILIZE2AB0]
          unreachable
        ASSIGN2A9F:  preds = [COND2ABE]
          string _t2A9E#1 = "Enter times:";
          Print<[string,real[],string]>(_t2A9E,normalizedTimes2347,_t2374);
          string _t2AA3#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t2AA3,rayCellInter2675,_t2374);
          string _t2AA8#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t2AA8,cellInter2A06,_t2374);
          string _t2AAD#1 = "End\n";
          Print<[string]>(_t2AAD);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A06;
          self.rayN = rayN2678;
          self.currentCell = currentCell2A07;
          self.steps = steps2444;
          self.pos = pos2A08;
          stabilize
          goto JOIN2A4C
        ASSIGN2A03:  preds = [COND2A05]
          string _t2A02#1 = "Invalid\n";
          Print<[string]>(_t2A02);
          goto JOIN29DB
        ASSIGN29A5:  preds = [COND29AE]
          real _t29A4#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t29A6#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t29A4,_t26AC);
          tensor[2] _t29A8#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t29A6,_t2451);
          femData:MeshPos _t29AA#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2380,_t29A8);
          goto JOIN28CC
        ASSIGN2BD6:  preds = [COND28BC]
          bool _t28A9#1 = EQ<real>(faceTime2488,faceTime2895);
          if _t28A9 then goto ASSIGN2BD8 else goto ASSIGN2BD7
        ASSIGN2BD8:  preds = [COND28BB]
          tensor[2] _t28B0#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN28AB
        JOIN28AB:  preds = [ASSIGN2BD8,ASSIGN28B8]
          tensor[2] _t28B3#1 = phi(_t28B0,_t28B7)
          goto JOIN289B
        ASSIGN2BD7:  preds = [COND28BB]
          real _t28B5#1 = IntToReal(_t2481);
          tensor[2] _t28B7#1 = <tensor[2]>[faceTime2895,_t28B5];
          goto JOIN28AB
        ASSIGN2BB5:  preds = [COND265F]
          bool _t264C#1 = EQ<real>(faceTime2488,faceTime2638);
          if _t264C then goto ASSIGN2BB6 else goto ASSIGN2659
        ASSIGN2BB6:  preds = [COND265E]
          tensor[2] _t2653#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN264E
        JOIN264E:  preds = [ASSIGN2BB6,ASSIGN265B]
          tensor[2] _t2656#1 = phi(_t2653,_t265A)
          goto JOIN263E
        ASSIGN2659:  preds = [COND265E]
          real _t2658#1 = IntToReal(_t2481);
          tensor[2] _t265A#1 = <tensor[2]>[faceTime2638,_t2658];
          goto JOIN264E
        ASSIGN243F:  preds = [COND2441]
          string _t243E#1 = "Did not move off ray!\n";
          Print<[string]>(_t243E);
          goto JOIN2438
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY139F:  preds = []
      int iresU1385#1 = globals.iresU123C;
      int iresV1384#1 = globals.iresV123D;
      int _t1388#2 = 0;
      int _t138A#2 = 1;
      int _t138C#1 = ISub(iresU1385,_t138A);
      int[] _t138E#1 = Range(_t1388,_t138C);
    FOREACH1391:  preds = [ASSIGN138F,NEXT139E]
      foreach (vi1390 in _t138E) on exit goto RETURN13A0
      int _t1396#1 = ISub(iresV1384,_t138A);
      int[] _t1398#1 = Range(_t1388,_t1396);
    FOREACH139B:  preds = [ASSIGN2AC3,NEXT139D]
      foreach (ui139A in _t1398) on exit goto NEXT139E
      new ray(ui139A,vi1390);
      goto FOREACH139B
    NEXT139E:  preds = [FOREACH139B]
      goto FOREACH1391
    RETURN13A0:  preds = [FOREACH1391]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1235 (a) = <no-default>
  input isoval1236 (isoval) = <default>
  input thick1237 (thick) = <default>
  input camEye1238 (camEye) = <default>
  input camAt1239 (camAt) = <default>
  input camUp123A (camUp) = <default>
  input camFOV123B (camFOV) = <default>
  input iresU123C (iresU) = <default>
  input iresV123D (iresV) = <default>
  input camNear123E (camNear) = <default>
  input camFar123F (camFar) = <default>
  input refStep1240 (refStep) = <default>
  input rayStep1241 (rayStep) = <default>
  input lightVsp1242 (lightVsp) = <default>
  input phongKa1243 (phongKa) = <default>
  input phongKd1244 (phongKd) = <default>
  input debug1245 (debug) = <default>
  input debugU1246 (debugU) = <default>
  input debugV1247 (debugV) = <default>
  input eps1248 (eps) = <default>
  global femData:MeshCell[] 0cell_a129C
  global real camNearVsp129E
  global real camFarVsp129F
  global tensor[3] camN12A0
  global tensor[3] camU12A1
  global tensor[3] camV12A2
  global real camVmax12A3
  global real camUmax12A4
## functions
  function femData:MeshPos _msh_newtonInverse1318 (tensor[2] pos12A5#6, int cellInt12A6#11, femData:Mesh mesh12A7#23) {
    ENTRY1317:  preds = []
      real _t12A8#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn12AC#6 = <tensor[2]>[_t12A8,_t12A8];
      int _t12BC#1 = 0;
      int _t12BE#1 = 16;
      int[] _t12C0#1 = Range(_t12BC,_t12BE);
    FOREACH12C4:  preds = [ASSIGN12C1,NEXT1313]
      foreach (itter12C2 in _t12C0) on exit goto ASSIGN1315
        tensor[2] xn12C3#8 = phi(xn12AC,xn12CD)
      tensor[2] xn12CD#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      real _t12CF#2 = 0.1e-7;
      real _t12D3#1 = λ(T0[],T1[])<(T0 * T1)> (_t12CF,_t12CF);
      real _t12D5#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      bool _t12D7#1 = GTE<real>(_t12D3,_t12D5);
      if _t12D7 then goto ASSIGN12DB else goto JOIN12D9
    ASSIGN12DB:  preds = [COND1312]
      real _t12DA#3 = 0.1e1;
      real _t12DC#3 = 0.1e-8;
      real _t12DE#1 = λ(T0[],T1[])<(T0 + T1)> (_t12DA,_t12DC);
      tensor[2] _t12E4#1 = <tensor[2]>[_t12DA,_t12DA];
      real _t12E6#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t12E4,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      bool _t12E8#1 = GT<real>(_t12DE,_t12E6);
      tensor[2] _t12EE#1 = <tensor[2]>[_t12DC,_t12DC];
      tensor[2] _t12F0#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t12EE,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      real _t12F2#1 = TensorIndex<tensor[2],[0]>(_t12F0);
      real _t12F4#2 = -0.e0;
      bool _t12F6#1 = GT<real>(_t12F2,_t12F4);
      real _t1300#1 = TensorIndex<tensor[2],[1]>(_t12F0);
      bool _t1304#1 = GT<real>(_t1300,_t12F4);
      bool _t1306#1 = BAnd(_t12F6,_t1304);
      bool _t1308#1 = BAnd(_t12E8,_t1306);
      if _t1308 then goto ASSIGN130C else goto ASSIGN130F
    ASSIGN130C:  preds = [COND1311]
      femData:MeshPos _t130B#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh12A7,cellInt12A6,xn12CD,pos12A5);
      return _t130B
      goto JOIN130A
    JOIN130A:  preds = [*RETURN(_t130B)130D,*RETURN(_t130E)1310]
      goto JOIN12D9
    JOIN12D9:  preds = [*JOIN130A,COND1312]
      goto FOREACH12C4
    ASSIGN130F:  preds = [COND1311]
      femData:MeshPos _t130E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t130E
      goto JOIN130A
    ASSIGN1315:  preds = [FOREACH12C4]
      femData:MeshPos _t1314#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t1314
}
  function int[2] nextCell4132A (int faceIdx1319#1, int cell131A#1, femData:Mesh mesh131B#1) {
    ENTRY1329:  preds = []
      int _t131C#1 = 6;
      int _t131E#1 = IMul(cell131A,_t131C);
      int _t1320#1 = 2;
      int _t1322#1 = IMul(faceIdx1319,_t1320);
      int _t1324#1 = IAdd(_t131E,_t1322);
      int[2] _t1326#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh131B,_t1324);
      return _t1326
}
## input initialization
  ENTRY129A:  preds = []
    real isoval1249#1 = 0.2e0;
    globals.isoval1236 = isoval1249;
    real thick124C#1 = 0.7e-1;
    globals.thick1237 = thick124C;
    real _t124F#2 = 0.3e1;
    real _t1251#1 = -0.3e1;
    tensor[3] camEye1255#1 = <tensor[3]>[_t124F,_t1251,_t124F];
    globals.camEye1238 = camEye1255;
    real _t1258#3 = 0.5e0;
    tensor[3] camAt125E#1 = <tensor[3]>[_t1258,_t1258,_t1258];
    globals.camAt1239 = camAt125E;
    real _t1261#2 = 0.e0;
    real _t1265#2 = 0.1e1;
    tensor[3] camUp1267#2 = <tensor[3]>[_t1261,_t1261,_t1265];
    globals.camUp123A = camUp1267;
    real camFOV126A#1 = 0.137e2;
    globals.camFOV123B = camFOV126A;
    int iresU126D#2 = 10;
    globals.iresU123C = iresU126D;
    globals.iresV123D = iresU126D;
    real camNear1273#1 = -0.2e1;
    globals.camNear123E = camNear1273;
    real camFar1276#1 = 0.5e1;
    globals.camFar123F = camFar1276;
    globals.refStep1240 = _t1265;
    real rayStep127C#1 = 0.1e-1;
    globals.rayStep1241 = rayStep127C;
    globals.lightVsp1242 = camUp1267;
    real phongKa1288#1 = 0.1e0;
    globals.phongKa1243 = phongKa1288;
    real phongKd128B#1 = 0.9e0;
    globals.phongKd1244 = phongKd128B;
    bool debug128E#1 = false;
    globals.debug1245 = debug128E;
    int debugU1291#1 = 8;
    globals.debugU1246 = debugU1291;
    int debugV1294#1 = 2;
    globals.debugV1247 = debugV1294;
    real eps1297#1 = 0.1e-7;
    globals.eps1248 = eps1297;
    return
## global-variable initialization
  ENTRY1382:  preds = []
    femData:Mesh a1333#2 = globals.a1235;
    tensor[3] camEye1332#16 = globals.camEye1238;
    tensor[3] camAt1331#16 = globals.camAt1239;
    tensor[3] camUp1330#4 = globals.camUp123A;
    real camFOV132F#2 = globals.camFOV123B;
    int iresU132E#1 = globals.iresU123C;
    int iresV132D#1 = globals.iresV123D;
    real camNear132C#1 = globals.camNear123E;
    real camFar132B#1 = globals.camFar123F;
    int _t133D#1 = 0;
    int _t133F#1 = 1;
    int _t1341#1 = ExtractFemItem<int,NumCell(Mesh)>(a1333);
    int _t1343#1 = ISub(_t1341,_t133F);
    int[] _t1345#1 = Range(_t133D,_t1343);
    femData:MeshCell[] _t1347#1 = <femData:MeshCell[]>{};
  FOREACH134B:  preds = [ASSIGN1348,NEXT1350]
    foreach (_t1349 in _t1345) on exit goto GASSIGN2AD2
      femData:MeshCell[] _t134A#2 = phi(_t1347,_t134E)
    femData:MeshCell _t134C#1 = LoadFem<femData:MeshCell>(a1333,_t1349);
    femData:MeshCell[] _t134E#1 = Append<femData:MeshCell>(_t134A,_t134C);
    goto FOREACH134B
  GASSIGN2AD2:  preds = [FOREACH134B]
    globals.0cell_a129C = _t134A;
    real camNearVsp1359#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear132C,camAt1331,camEye1332);
    globals.camNearVsp129E = camNearVsp1359;
    real camFarVsp135C#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar132B,camAt1331,camEye1332);
    globals.camFarVsp129F = camFarVsp135C;
    tensor[3] camN1361#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt1331,camEye1332,camAt1331,camEye1332);
    globals.camN12A0 = camN1361;
    tensor[3] camU1366#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332,camUp1330);
    globals.camU12A1 = camU1366;
    tensor[3] camV1369#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332);
    globals.camV12A2 = camV1369;
    real _t136C#2 = 0.314159265358979323846264338327950288e1;
    real _t1370#2 = 0.36e3;
    real camVmax1376#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV132F,_t136C,_t1370,camAt1331,camEye1332);
    globals.camVmax12A3 = camVmax1376;
    real _t1379#1 = IntToReal(iresU132E);
    real _t137D#1 = IntToReal(iresV132D);
    real camUmax137F#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV132F,_t136C,_t1370,camAt1331,camEye1332,_t1379,_t137D);
    globals.camUmax12A4 = camUmax137F;
    return
## strand
  strand ray (int ui13A1#2, int vi13A2#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY1471:  preds = []
        femData:Mesh a13C9#1 = globals.a1235;
        femData:MeshCell[] 0cell_a13C8#1 = globals.0cell_a129C;
        tensor[3] camEye13C7#5 = globals.camEye1238;
        int iresU13C6#1 = globals.iresU123C;
        int iresV13C5#1 = globals.iresV123D;
        real camNearVsp13C4#3 = globals.camNearVsp129E;
        real camFarVsp13C3#3 = globals.camFarVsp129F;
        tensor[3] camN13C2#5 = globals.camN12A0;
        tensor[3] camU13C1#6 = globals.camU12A1;
        tensor[3] camV13C0#6 = globals.camV12A2;
        real camVmax13BF#14 = globals.camVmax12A3;
        real camUmax13BE#14 = globals.camUmax12A4;
        real _t13F3#14 = -0.5e0;
        real _t13F5#7 = IntToReal(ui13A1);
        real _t13F7#7 = IntToReal(iresU13C6);
        real _t13F9#14 = 0.5e0;
        real rayU13FD#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9);
        real _t1403#7 = IntToReal(vi13A2);
        real _t1405#7 = IntToReal(iresV13C5);
        real rayV140B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9);
        tensor[3] UV1411#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0);
        tensor[3] rayOrig1413#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0);
        real _t1415#4 = 0.e0;
        tensor[3] _t141B#5 = <tensor[3]>[_t1415,_t1415,_t1415];
        tensor[3] rayVec141D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN13C2,_t141B);
        tensor[3] rayStart1425#3 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camNearVsp13C4,camN13C2,_t141B);
        real _t1427#1 = TensorIndex<tensor[3],[0]>(rayStart1425);
        real _t1429#1 = TensorIndex<tensor[3],[1]>(rayStart1425);
        tensor[2] rayStartProj142B#1 = <tensor[2]>[_t1427,_t1429];
        tensor[3] rayEnd142F#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camFarVsp13C3,camN13C2,_t141B);
        tensor[3] dpos1431#3 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3],T18[3],T19[],T20[],T21[],T22[],T23[],T24[],T25[3],T26[],T27[],T28[],T29[],T30[],T31[],T32[3],T33[],T34[3],T35[3])<((T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))) - ((T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T33 * (T16_{i0} + T17_{i0}))))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camFarVsp13C3,camN13C2,_t141B,camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camNearVsp13C4,camN13C2,_t141B);
        real _t1433#1 = TensorIndex<tensor[3],[0]>(dpos1431);
        real _t1435#1 = TensorIndex<tensor[3],[1]>(dpos1431);
        tensor[2] dposProj1437#1 = <tensor[2]>[_t1433,_t1435];
        femData:MeshPos[0] _t1439#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t143B#1 = MkDynamic<femData:MeshPos,0>(_t1439);
        real[0] _t143F#1 = <real[0]>{};
        real[] _t1441#1 = MkDynamic<real,0>(_t143F);
        int cellIntersects1445#3 = 0;
        tensor[2][0] _t1447#1 = <tensor[2][0]>{};
        tensor[2][] _t1449#1 = MkDynamic<tensor[2],0>(_t1447);
        tensor[3][0] _t144D#1 = <tensor[3][0]>{};
        tensor[3][] _t144F#1 = MkDynamic<tensor[3],0>(_t144D);
        tensor[2][0] _t1453#1 = <tensor[2][0]>{};
        tensor[2][] _t1455#1 = MkDynamic<tensor[2],0>(_t1453);
        femData:MeshCell[0] _t1459#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t145B#1 = MkDynamic<femData:MeshCell,0>(_t1459);
        int currentCellInt145F#1 = -1;
        femData:MeshCell currentCell1465#1 = Subscript<femData:MeshCell[]>(0cell_a13C8,cellIntersects1445);
        femData:MeshPos pos1469#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a13C9);
        bool startsInside146B#1 = false;
        self.rayU = rayU13FD;
        self.rayV = rayV140B;
        self.UV = UV1411;
        self.rayOrig = rayOrig1413;
        self.rayVec = rayVec141D;
        self.camNearVsp = camNearVsp13C4;
        self.camFarVsp = camFarVsp13C3;
        self.rayStart = rayStart1425;
        self.rayStartProj = rayStartProj142B;
        self.rayEnd = rayEnd142F;
        self.dpos = dpos1431;
        self.dposProj = dposProj1437;
        self.poses = _t143B;
        self.normalizedTimes = _t1441;
        self.cellIntersects = cellIntersects1445;
        self.rayCellInter = _t1449;
        self.spaceInter = _t144F;
        self.refSpaceInter = _t1455;
        self.cellInter = _t145B;
        self.currentCellInt = currentCellInt145F;
        self.rayN = _t1415;
        self.currentCell = currentCell1465;
        self.steps = cellIntersects1445;
        self.pos = pos1469;
        self.startsInside = startsInside146B;
        self.ui = ui13A1;
        self.vi = vi13A2;
        return
    end state init
    method start
        ENTRY232B:  preds = []
          femData:MeshCell[] 0cell_a1491#1 = globals.0cell_a129C;
          bool debug1490#1 = globals.debug1245;
          int debugU148F#1 = globals.debugU1246;
          int debugV148E#1 = globals.debugV1247;
          tensor[3] rayOrig1499#2 = self.rayOrig;
          tensor[3] rayVec149A#1 = self.rayVec;
          real camNearVsp149B#4 = self.camNearVsp;
          real camFarVsp149C#3 = self.camFarVsp;
          tensor[2] rayStartProj149E#55 = self.rayStartProj;
          tensor[2] dposProj14A1#56 = self.dposProj;
          femData:MeshPos[] poses14A2#1 = self.poses;
          real[] normalizedTimes14A3#1 = self.normalizedTimes;
          int cellIntersects14A4#1 = self.cellIntersects;
          tensor[3][] spaceInter14A6#1 = self.spaceInter;
          int currentCellInt14A9#1 = self.currentCellInt;
          bool startsInside14AE#2 = self.startsInside;
          int ui14AF#2 = self.ui;
          int vi14B0#2 = self.vi;
          bool _t14CF#1 = NEQ<int>(ui14AF,debugU148F);
          if _t14CF then goto ASSIGN14D4 else goto ASSIGN14D6
        ASSIGN14D4:  preds = [COND14D7]
          bool _t14D2#1 = true;
          goto JOIN14D1
        JOIN14D1:  preds = [ASSIGN14D4,ASSIGN14D6]
          bool _t14D3#1 = phi(_t14D2,_t14D5)
          if _t14D3 then goto COND14E8 else goto JOIN14D8
        COND14E8:  preds = [COND14E9]
          if debug1490 then goto STABILIZE14DA else goto JOIN14D9
        STABILIZE14DA:  preds = [COND14E8]
          stabilize
          goto JOIN14D9
        JOIN14D9:  preds = [*STABILIZE14DA,COND14E8]
          goto JOIN14D8
        JOIN14D8:  preds = [JOIN14D9,COND14E9]
        FOREACH14F0:  preds = [JOIN14D8,NEXT22C5]
          foreach (c14EA in 0cell_a1491) on exit goto ASSIGN22C7
            real startTime14EF#3 = phi(camFarVsp149C,startTime1519)
            bool startsInside22C4#2 = phi(startsInside14AE,startsInside1524)
            int currentCellInt14EE#6 = phi(currentCellInt14A9,currentCellInt151C)
            int cellIntersects14ED#8 = phi(cellIntersects14A4,cellIntersects1521)
            real[] normalizedTimes14EC#7 = phi(normalizedTimes14A3,normalizedTimes1516)
            femData:MeshPos[] poses14EB#7 = phi(poses14A2,poses1513)
          string _t14F1#1 = "Cell:";
          string _t14F3#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t14F1,c14EA,_t14F3);
          int _t14F6#163 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t14F8#323 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:MeshPos _t14FA#1 = _msh_newtonInverse1318 (rayStartProj149E,_t14F6,_t14F8);
          bool _t14FC#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t14FA);
          if _t14FC then goto ASSIGN1500 else goto ASSIGN1531
        ASSIGN1500:  preds = [COND22C3]
          string _t14FF#1 = "pos starts inside\n";
          Print<[string]>(_t14FF);
          tensor[2] _t150E#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femInvV(1318, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t14F6,_t14F8,_t14F8,rayStartProj149E);
          femData:MeshPos p1510#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t14F8,_t14F6,_t150E);
          femData:MeshPos[] poses1512#1 = Append<femData:MeshPos>(poses14EB,p1510);
          real[] normalizedTimes1515#1 = Append<real>(normalizedTimes14EC,camNearVsp149B);
          int _t151E#1 = 1;
          int cellIntersects1520#1 = IAdd(cellIntersects14ED,_t151E);
          bool startsInside1523#1 = true;
          goto JOIN14FE
        JOIN14FE:  preds = [ASSIGN1525,JOIN1876]
          real startTime1519#1 = phi(camNearVsp149B,startTime22BC)
          bool startsInside1524#1 = phi(startsInside1523,startsInside14AE)
          int currentCellInt151C#1 = phi(cellIntersects14ED,currentCellInt22BB)
          int cellIntersects1521#1 = phi(cellIntersects1520,cellIntersects22C0)
          real[] normalizedTimes1516#1 = phi(normalizedTimes1515,normalizedTimes22AC)
          femData:MeshPos[] poses1513#1 = phi(poses1512,poses22AF)
          goto FOREACH14F0
        ASSIGN1531:  preds = [COND22C3]
          real _t1530#26 = -0.e0;
          tensor[2] _t1534#159 = <tensor[2]>[_t1530,_t1530];
          real time1565#9 = +inf;
          int face1567#12 = -1;
          real _t1569#39 = 0.1e1;
          real _t156B#9 = 0.e0;
          tensor[2] _t156D#28 = <tensor[2]>[_t1569,_t156B];
          real _t1571#9 = -0.1e1;
          tensor[2] _t1575#19 = <tensor[2]>[_t1571,_t1569];
          real _t1581#6 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575);
          real _t1583#3 = -0.1e-15;
          bool _t1585#1 = GTE<real>(_t1581,_t1583);
          bool _t15A1#1 = GT<real>(time1565,_t1581);
          real _t15AB#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575);
          real _t15AD#3 = 0.1e-20;
          bool _t15AF#1 = GTE<real>(_t15AB,_t15AD);
          bool _t15B1#1 = BAnd(_t15A1,_t15AF);
          bool _t15B3#4 = BAnd(_t1585,_t15B1);
          if _t15B3 then goto ASSIGN15B9 else goto JOIN15B5
        ASSIGN15B9:  preds = [COND1662]
          real _t15B8#3 = 0.1e-8;
          real _t15BA#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t15B8);
          tensor[2] _t15C0#1 = <tensor[2]>[_t1569,_t1569];
          real _t15E0#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t15C0,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t15E2#1 = GT<real>(_t15BA,_t15E0);
          tensor[2] _t15E8#1 = <tensor[2]>[_t15B8,_t15B8];
          tensor[2] _t1608#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t15E8,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t160A#1 = TensorIndex<tensor[2],[0]>(_t1608);
          bool _t160E#1 = GT<real>(_t160A,_t1530);
          real _t1636#1 = TensorIndex<tensor[2],[1]>(_t1608);
          bool _t163A#1 = GT<real>(_t1636,_t1530);
          bool _t163C#1 = BAnd(_t160E,_t163A);
          bool _t163E#1 = BAnd(_t15E2,_t163C);
          if _t163E then goto ASSIGN165E else goto JOIN1640
        ASSIGN165E:  preds = [COND165F]
          int face165C#1 = 0;
          goto JOIN1640
        JOIN1640:  preds = [ASSIGN165E,COND165F]
          int face165D#1 = phi(face165C,face1567)
          real time165A#1 = phi(_t1581,time1565)
          goto JOIN15B5
        JOIN15B5:  preds = [JOIN1640,COND1662]
          int face1661#2 = phi(face165D,face1567)
          real time1660#3 = phi(time165A,time1565)
          tensor[2] _t1667#18 = <tensor[2]>[_t156B,_t156B];
          tensor[2] _t166F#19 = <tensor[2]>[_t156B,_t1569];
          real _t167B#9 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F);
          bool _t167F#4 = GTE<real>(_t167B,_t1583);
          bool _t169B#1 = GT<real>(time1660,_t167B);
          real _t16A5#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F);
          bool _t16A9#4 = GTE<real>(_t16A5,_t15AD);
          bool _t16AB#1 = BAnd(_t169B,_t16A9);
          bool _t16AD#1 = BAnd(_t167F,_t16AB);
          if _t16AD then goto ASSIGN16B3 else goto JOIN16AF
        ASSIGN16B3:  preds = [COND175C]
          real _t16B2#3 = 0.1e-8;
          real _t16B4#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t16B2);
          tensor[2] _t16BA#1 = <tensor[2]>[_t1569,_t1569];
          real _t16DA#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t16BA,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t16DC#1 = GT<real>(_t16B4,_t16DA);
          tensor[2] _t16E2#1 = <tensor[2]>[_t16B2,_t16B2];
          tensor[2] _t1702#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t16E2,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1704#1 = TensorIndex<tensor[2],[0]>(_t1702);
          bool _t1708#1 = GT<real>(_t1704,_t1530);
          real _t1730#1 = TensorIndex<tensor[2],[1]>(_t1702);
          bool _t1734#1 = GT<real>(_t1730,_t1530);
          bool _t1736#1 = BAnd(_t1708,_t1734);
          bool _t1738#1 = BAnd(_t16DC,_t1736);
          if _t1738 then goto ASSIGN1758 else goto JOIN173A
        ASSIGN1758:  preds = [COND1759]
          int face1756#1 = 1;
          goto JOIN173A
        JOIN173A:  preds = [ASSIGN1758,COND1759]
          int face1757#1 = phi(face1756,face1661)
          real time1754#1 = phi(_t167B,time1660)
          goto JOIN16AF
        JOIN16AF:  preds = [JOIN173A,COND175C]
          int face175B#2 = phi(face1757,face1661)
          real time175A#3 = phi(time1754,time1660)
          real _t1775#9 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D);
          bool _t1779#4 = GTE<real>(_t1775,_t1583);
          bool _t1795#1 = GT<real>(time175A,_t1775);
          real _t179F#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D);
          bool _t17A3#4 = GTE<real>(_t179F,_t15AD);
          bool _t17A5#1 = BAnd(_t1795,_t17A3);
          bool _t17A7#1 = BAnd(_t1779,_t17A5);
          if _t17A7 then goto ASSIGN17AD else goto JOIN17A9
        ASSIGN17AD:  preds = [COND1856]
          real _t17AC#3 = 0.1e-8;
          real _t17AE#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t17AC);
          tensor[2] _t17B4#1 = <tensor[2]>[_t1569,_t1569];
          real _t17D4#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t17B4,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t17D6#1 = GT<real>(_t17AE,_t17D4);
          tensor[2] _t17DC#1 = <tensor[2]>[_t17AC,_t17AC];
          tensor[2] _t17FC#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t17DC,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t17FE#1 = TensorIndex<tensor[2],[0]>(_t17FC);
          bool _t1802#1 = GT<real>(_t17FE,_t1530);
          real _t182A#1 = TensorIndex<tensor[2],[1]>(_t17FC);
          bool _t182E#1 = GT<real>(_t182A,_t1530);
          bool _t1830#1 = BAnd(_t1802,_t182E);
          bool _t1832#1 = BAnd(_t17D6,_t1830);
          if _t1832 then goto ASSIGN1852 else goto JOIN1834
        ASSIGN1852:  preds = [COND1853]
          int face1850#1 = 2;
          goto JOIN1834
        JOIN1834:  preds = [ASSIGN1852,COND1853]
          int face1851#1 = phi(face1850,face175B)
          real time184E#1 = phi(_t1775,time175A)
          goto JOIN17A9
        JOIN17A9:  preds = [JOIN1834,COND1856]
          int face1855#2 = phi(face1851,face175B)
          real time1854#1 = phi(time184E,time175A)
          bool _t1859#1 = NEQ<int>(face1855,face1567);
          if _t1859 then goto ASSIGN2B18 else goto ASSIGN2B17
        ASSIGN2B18:  preds = [COND186F]
          real _t185E#1 = Max<real>(time1854,_t156B);
          real _t1860#1 = IntToReal(face1855);
          tensor[2] _t1862#1 = <tensor[2]>[_t185E,_t1860];
          goto JOIN185B
        JOIN185B:  preds = [ASSIGN1863,ASSIGN2B17]
          tensor[2] _t1865#1 = phi(_t1862,_t186B)
          real newTime1870#2 = TensorIndex<tensor[2],[0]>(_t1865);
          bool _t1874#1 = GTE<real>(newTime1870,_t156B);
          if _t1874 then goto COND19F5 else goto JOIN1876
        COND19F5:  preds = [COND22C2]
          if _t15B3 then goto ASSIGN194C else goto JOIN1948
        ASSIGN194C:  preds = [COND19F5]
          real _t194B#3 = 0.1e-8;
          real _t194D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t194B);
          tensor[2] _t1953#1 = <tensor[2]>[_t1569,_t1569];
          real _t1973#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1953,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1975#1 = GT<real>(_t194D,_t1973);
          tensor[2] _t197B#1 = <tensor[2]>[_t194B,_t194B];
          tensor[2] _t199B#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t197B,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t199D#1 = TensorIndex<tensor[2],[0]>(_t199B);
          bool _t19A1#1 = GT<real>(_t199D,_t1530);
          real _t19C9#1 = TensorIndex<tensor[2],[1]>(_t199B);
          bool _t19CD#1 = GT<real>(_t19C9,_t1530);
          bool _t19CF#1 = BAnd(_t19A1,_t19CD);
          bool _t19D1#1 = BAnd(_t1975,_t19CF);
          if _t19D1 then goto ASSIGN19F1 else goto JOIN19D3
        ASSIGN19F1:  preds = [COND19F2]
          int face19EF#1 = 0;
          goto JOIN19D3
        JOIN19D3:  preds = [ASSIGN19F1,COND19F2]
          int face19F0#1 = phi(face19EF,face1567)
          real time19ED#1 = phi(_t1581,time1565)
          goto JOIN1948
        JOIN1948:  preds = [JOIN19D3,COND19F5]
          int face19F4#2 = phi(face19F0,face1567)
          real time19F3#3 = phi(time19ED,time1565)
          bool _t1A2E#1 = GT<real>(time19F3,_t167B);
          bool _t1A3E#1 = BAnd(_t1A2E,_t16A9);
          bool _t1A40#1 = BAnd(_t167F,_t1A3E);
          if _t1A40 then goto ASSIGN1A46 else goto JOIN1A42
        ASSIGN1A46:  preds = [COND1AEF]
          real _t1A45#3 = 0.1e-8;
          real _t1A47#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1A45);
          tensor[2] _t1A4D#1 = <tensor[2]>[_t1569,_t1569];
          real _t1A6D#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1A4D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1A6F#1 = GT<real>(_t1A47,_t1A6D);
          tensor[2] _t1A75#1 = <tensor[2]>[_t1A45,_t1A45];
          tensor[2] _t1A95#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1A75,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1A97#1 = TensorIndex<tensor[2],[0]>(_t1A95);
          bool _t1A9B#1 = GT<real>(_t1A97,_t1530);
          real _t1AC3#1 = TensorIndex<tensor[2],[1]>(_t1A95);
          bool _t1AC7#1 = GT<real>(_t1AC3,_t1530);
          bool _t1AC9#1 = BAnd(_t1A9B,_t1AC7);
          bool _t1ACB#1 = BAnd(_t1A6F,_t1AC9);
          if _t1ACB then goto ASSIGN1AEB else goto JOIN1ACD
        ASSIGN1AEB:  preds = [COND1AEC]
          int face1AE9#1 = 1;
          goto JOIN1ACD
        JOIN1ACD:  preds = [ASSIGN1AEB,COND1AEC]
          int face1AEA#1 = phi(face1AE9,face19F4)
          real time1AE7#1 = phi(_t167B,time19F3)
          goto JOIN1A42
        JOIN1A42:  preds = [JOIN1ACD,COND1AEF]
          int face1AEE#2 = phi(face1AEA,face19F4)
          real time1AED#3 = phi(time1AE7,time19F3)
          bool _t1B28#1 = GT<real>(time1AED,_t1775);
          bool _t1B38#1 = BAnd(_t1B28,_t17A3);
          bool _t1B3A#1 = BAnd(_t1779,_t1B38);
          if _t1B3A then goto ASSIGN1B40 else goto JOIN1B3C
        ASSIGN1B40:  preds = [COND1BE9]
          real _t1B3F#3 = 0.1e-8;
          real _t1B41#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1B3F);
          tensor[2] _t1B47#1 = <tensor[2]>[_t1569,_t1569];
          real _t1B67#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1B47,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1B69#1 = GT<real>(_t1B41,_t1B67);
          tensor[2] _t1B6F#1 = <tensor[2]>[_t1B3F,_t1B3F];
          tensor[2] _t1B8F#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1B6F,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1B91#1 = TensorIndex<tensor[2],[0]>(_t1B8F);
          bool _t1B95#1 = GT<real>(_t1B91,_t1530);
          real _t1BBD#1 = TensorIndex<tensor[2],[1]>(_t1B8F);
          bool _t1BC1#1 = GT<real>(_t1BBD,_t1530);
          bool _t1BC3#1 = BAnd(_t1B95,_t1BC1);
          bool _t1BC5#1 = BAnd(_t1B69,_t1BC3);
          if _t1BC5 then goto ASSIGN1BE5 else goto JOIN1BC7
        ASSIGN1BE5:  preds = [COND1BE6]
          int face1BE3#1 = 2;
          goto JOIN1BC7
        JOIN1BC7:  preds = [ASSIGN1BE5,COND1BE6]
          int face1BE4#1 = phi(face1BE3,face1AEE)
          real time1BE1#1 = phi(_t1775,time1AED)
          goto JOIN1B3C
        JOIN1B3C:  preds = [JOIN1BC7,COND1BE9]
          int face1BE8#2 = phi(face1BE4,face1AEE)
          real time1BE7#1 = phi(time1BE1,time1AED)
          bool _t1BEC#1 = NEQ<int>(face1BE8,face1567);
          if _t1BEC then goto ASSIGN2B3D else goto ASSIGN2B3C
        ASSIGN2B3D:  preds = [COND1C02]
          real _t1BF1#1 = Max<real>(time1BE7,_t156B);
          real _t1BF3#1 = IntToReal(face1BE8);
          tensor[2] _t1BF5#1 = <tensor[2]>[_t1BF1,_t1BF3];
          goto JOIN1BEE
        JOIN1BEE:  preds = [ASSIGN1BF6,ASSIGN2B3C]
          tensor[2] _t1BF8#1 = phi(_t1BF5,_t1BFE)
          real _t1C03#1 = TensorIndex<tensor[2],[0]>(_t1BF8);
          tensor[2] _t1C07#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],T9[],INT10,FEM(msh)11,FEM(msh)12,T13[2],T14[2])<(Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * (T4_{i2}) - (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T3))))>(i2=0..1) + (T9 * Σ(i8=0..1)<(((Σ(i13=0..1)<((ϵ_{ii13,ii0} * Σ(i15=0..1)<((ϵ_{ii15,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{i13},T3)))>(i15=0..1)))>(i13=0..1)) / ( Σ(i11=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{'0'},T3) * Σ(i12=0..1)<((ϵ_{ii11,ii12} * Probe(femV(noFunc, 0, 1, 1)_{i12}⊛Basis()dx_{'1'},T3)))>(i12=0..1)))>(i11=0..1)) * T14_{i8}))>(i8=0..1)))>_{2} (_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1C03,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          if _t15B3 then goto ASSIGN1C9C else goto JOIN1C98
        ASSIGN1C9C:  preds = [COND1D45]
          real _t1C9B#3 = 0.1e-8;
          real _t1C9D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1C9B);
          tensor[2] _t1CA3#1 = <tensor[2]>[_t1569,_t1569];
          real _t1CC3#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1CA3,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1CC5#1 = GT<real>(_t1C9D,_t1CC3);
          tensor[2] _t1CCB#1 = <tensor[2]>[_t1C9B,_t1C9B];
          tensor[2] _t1CEB#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1CCB,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1CED#1 = TensorIndex<tensor[2],[0]>(_t1CEB);
          bool _t1CF1#1 = GT<real>(_t1CED,_t1530);
          real _t1D19#1 = TensorIndex<tensor[2],[1]>(_t1CEB);
          bool _t1D1D#1 = GT<real>(_t1D19,_t1530);
          bool _t1D1F#1 = BAnd(_t1CF1,_t1D1D);
          bool _t1D21#1 = BAnd(_t1CC5,_t1D1F);
          if _t1D21 then goto ASSIGN1D41 else goto JOIN1D23
        ASSIGN1D41:  preds = [COND1D42]
          int face1D3F#1 = 0;
          goto JOIN1D23
        JOIN1D23:  preds = [ASSIGN1D41,COND1D42]
          int face1D40#1 = phi(face1D3F,face1567)
          real time1D3D#1 = phi(_t1581,time1565)
          goto JOIN1C98
        JOIN1C98:  preds = [JOIN1D23,COND1D45]
          int face1D44#2 = phi(face1D40,face1567)
          real time1D43#3 = phi(time1D3D,time1565)
          bool _t1D7E#1 = GT<real>(time1D43,_t167B);
          bool _t1D8E#1 = BAnd(_t1D7E,_t16A9);
          bool _t1D90#1 = BAnd(_t167F,_t1D8E);
          if _t1D90 then goto ASSIGN1D96 else goto JOIN1D92
        ASSIGN1D96:  preds = [COND1E3F]
          real _t1D95#3 = 0.1e-8;
          real _t1D97#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1D95);
          tensor[2] _t1D9D#1 = <tensor[2]>[_t1569,_t1569];
          real _t1DBD#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1D9D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1DBF#1 = GT<real>(_t1D97,_t1DBD);
          tensor[2] _t1DC5#1 = <tensor[2]>[_t1D95,_t1D95];
          tensor[2] _t1DE5#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1DC5,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1DE7#1 = TensorIndex<tensor[2],[0]>(_t1DE5);
          bool _t1DEB#1 = GT<real>(_t1DE7,_t1530);
          real _t1E13#1 = TensorIndex<tensor[2],[1]>(_t1DE5);
          bool _t1E17#1 = GT<real>(_t1E13,_t1530);
          bool _t1E19#1 = BAnd(_t1DEB,_t1E17);
          bool _t1E1B#1 = BAnd(_t1DBF,_t1E19);
          if _t1E1B then goto ASSIGN1E3B else goto JOIN1E1D
        ASSIGN1E3B:  preds = [COND1E3C]
          int face1E39#1 = 1;
          goto JOIN1E1D
        JOIN1E1D:  preds = [ASSIGN1E3B,COND1E3C]
          int face1E3A#1 = phi(face1E39,face1D44)
          real time1E37#1 = phi(_t167B,time1D43)
          goto JOIN1D92
        JOIN1D92:  preds = [JOIN1E1D,COND1E3F]
          int face1E3E#2 = phi(face1E3A,face1D44)
          real time1E3D#3 = phi(time1E37,time1D43)
          bool _t1E78#1 = GT<real>(time1E3D,_t1775);
          bool _t1E88#1 = BAnd(_t1E78,_t17A3);
          bool _t1E8A#1 = BAnd(_t1779,_t1E88);
          if _t1E8A then goto ASSIGN1E90 else goto JOIN1E8C
        ASSIGN1E90:  preds = [COND1F39]
          real _t1E8F#3 = 0.1e-8;
          real _t1E91#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1E8F);
          tensor[2] _t1E97#1 = <tensor[2]>[_t1569,_t1569];
          real _t1EB7#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1E97,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1EB9#1 = GT<real>(_t1E91,_t1EB7);
          tensor[2] _t1EBF#1 = <tensor[2]>[_t1E8F,_t1E8F];
          tensor[2] _t1EDF#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1EBF,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1EE1#1 = TensorIndex<tensor[2],[0]>(_t1EDF);
          bool _t1EE5#1 = GT<real>(_t1EE1,_t1530);
          real _t1F0D#1 = TensorIndex<tensor[2],[1]>(_t1EDF);
          bool _t1F11#1 = GT<real>(_t1F0D,_t1530);
          bool _t1F13#1 = BAnd(_t1EE5,_t1F11);
          bool _t1F15#1 = BAnd(_t1EB9,_t1F13);
          if _t1F15 then goto ASSIGN1F35 else goto JOIN1F17
        ASSIGN1F35:  preds = [COND1F36]
          int face1F33#1 = 2;
          goto JOIN1F17
        JOIN1F17:  preds = [ASSIGN1F35,COND1F36]
          int face1F34#1 = phi(face1F33,face1E3E)
          real time1F31#1 = phi(_t1775,time1E3D)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1F17,COND1F39]
          int face1F38#2 = phi(face1F34,face1E3E)
          real time1F37#1 = phi(time1F31,time1E3D)
          bool _t1F3C#1 = NEQ<int>(face1F38,face1567);
          if _t1F3C then goto ASSIGN2B63 else goto ASSIGN2B62
        ASSIGN2B63:  preds = [COND1F52]
          real _t1F41#1 = Max<real>(time1F37,_t156B);
          real _t1F43#1 = IntToReal(face1F38);
          tensor[2] _t1F45#1 = <tensor[2]>[_t1F41,_t1F43];
          goto JOIN1F3E
        JOIN1F3E:  preds = [ASSIGN1F46,ASSIGN2B62]
          tensor[2] _t1F48#1 = phi(_t1F45,_t1F4E)
          real _t1F53#1 = TensorIndex<tensor[2],[0]>(_t1F48);
          tensor[2] _t1F57#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (rayStartProj149E,_t1F53,dposProj14A1);
          if _t15B3 then goto ASSIGN1FEC else goto JOIN1FE8
        ASSIGN1FEC:  preds = [COND2095]
          real _t1FEB#3 = 0.1e-8;
          real _t1FED#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1FEB);
          tensor[2] _t1FF3#1 = <tensor[2]>[_t1569,_t1569];
          real _t2013#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1FF3,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t2015#1 = GT<real>(_t1FED,_t2013);
          tensor[2] _t201B#1 = <tensor[2]>[_t1FEB,_t1FEB];
          tensor[2] _t203B#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t201B,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t203D#1 = TensorIndex<tensor[2],[0]>(_t203B);
          bool _t2041#1 = GT<real>(_t203D,_t1530);
          real _t2069#1 = TensorIndex<tensor[2],[1]>(_t203B);
          bool _t206D#1 = GT<real>(_t2069,_t1530);
          bool _t206F#1 = BAnd(_t2041,_t206D);
          bool _t2071#1 = BAnd(_t2015,_t206F);
          if _t2071 then goto ASSIGN2091 else goto JOIN2073
        ASSIGN2091:  preds = [COND2092]
          int face208F#1 = 0;
          goto JOIN2073
        JOIN2073:  preds = [ASSIGN2091,COND2092]
          int face2090#1 = phi(face208F,face1567)
          real time208D#1 = phi(_t1581,time1565)
          goto JOIN1FE8
        JOIN1FE8:  preds = [JOIN2073,COND2095]
          int face2094#2 = phi(face2090,face1567)
          real time2093#3 = phi(time208D,time1565)
          bool _t20CE#1 = GT<real>(time2093,_t167B);
          bool _t20DE#1 = BAnd(_t20CE,_t16A9);
          bool _t20E0#1 = BAnd(_t167F,_t20DE);
          if _t20E0 then goto ASSIGN20E6 else goto JOIN20E2
        ASSIGN20E6:  preds = [COND218F]
          real _t20E5#3 = 0.1e-8;
          real _t20E7#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t20E5);
          tensor[2] _t20ED#1 = <tensor[2]>[_t1569,_t1569];
          real _t210D#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t20ED,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t210F#1 = GT<real>(_t20E7,_t210D);
          tensor[2] _t2115#1 = <tensor[2]>[_t20E5,_t20E5];
          tensor[2] _t2135#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t2115,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t2137#1 = TensorIndex<tensor[2],[0]>(_t2135);
          bool _t213B#1 = GT<real>(_t2137,_t1530);
          real _t2163#1 = TensorIndex<tensor[2],[1]>(_t2135);
          bool _t2167#1 = GT<real>(_t2163,_t1530);
          bool _t2169#1 = BAnd(_t213B,_t2167);
          bool _t216B#1 = BAnd(_t210F,_t2169);
          if _t216B then goto ASSIGN218B else goto JOIN216D
        ASSIGN218B:  preds = [COND218C]
          int face2189#1 = 1;
          goto JOIN216D
        JOIN216D:  preds = [ASSIGN218B,COND218C]
          int face218A#1 = phi(face2189,face2094)
          real time2187#1 = phi(_t167B,time2093)
          goto JOIN20E2
        JOIN20E2:  preds = [JOIN216D,COND218F]
          int face218E#2 = phi(face218A,face2094)
          real time218D#3 = phi(time2187,time2093)
          bool _t21C8#1 = GT<real>(time218D,_t1775);
          bool _t21D8#1 = BAnd(_t21C8,_t17A3);
          bool _t21DA#1 = BAnd(_t1779,_t21D8);
          if _t21DA then goto ASSIGN21E0 else goto JOIN21DC
        ASSIGN21E0:  preds = [COND2289]
          real _t21DF#3 = 0.1e-8;
          real _t21E1#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t21DF);
          tensor[2] _t21E7#1 = <tensor[2]>[_t1569,_t1569];
          real _t2207#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t21E7,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t2209#1 = GT<real>(_t21E1,_t2207);
          tensor[2] _t220F#1 = <tensor[2]>[_t21DF,_t21DF];
          tensor[2] _t222F#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t220F,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t2231#1 = TensorIndex<tensor[2],[0]>(_t222F);
          bool _t2235#1 = GT<real>(_t2231,_t1530);
          real _t225D#1 = TensorIndex<tensor[2],[1]>(_t222F);
          bool _t2261#1 = GT<real>(_t225D,_t1530);
          bool _t2263#1 = BAnd(_t2235,_t2261);
          bool _t2265#1 = BAnd(_t2209,_t2263);
          if _t2265 then goto ASSIGN2285 else goto JOIN2267
        ASSIGN2285:  preds = [COND2286]
          int face2283#1 = 2;
          goto JOIN2267
        JOIN2267:  preds = [ASSIGN2285,COND2286]
          int face2284#1 = phi(face2283,face218E)
          real time2281#1 = phi(_t1775,time218D)
          goto JOIN21DC
        JOIN21DC:  preds = [JOIN2267,COND2289]
          int face2288#2 = phi(face2284,face218E)
          real time2287#1 = phi(time2281,time218D)
          bool _t228C#1 = NEQ<int>(face2288,face1567);
          if _t228C then goto ASSIGN2B87 else goto ASSIGN2B86
        ASSIGN2B87:  preds = [COND22A2]
          real _t2291#1 = Max<real>(time2287,_t156B);
          real _t2293#1 = IntToReal(face2288);
          tensor[2] _t2295#1 = <tensor[2]>[_t2291,_t2293];
          goto JOIN228E
        JOIN228E:  preds = [ASSIGN2296,ASSIGN2B86]
          tensor[2] _t2298#1 = phi(_t2295,_t229E)
          real _t22A3#1 = TensorIndex<tensor[2],[1]>(_t2298);
          int _t22A5#1 = FloorToInt(_t22A3);
          femData:MeshPos p22A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t14F8,_t14F6,_t1C07,_t1F57,_t22A5);
          real newRayTime22A9#3 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (camNearVsp149B,camFarVsp149C,newTime1870);
          real[] normalizedTimes22AB#1 = Append<real>(normalizedTimes14EC,newRayTime22A9);
          femData:MeshPos[] poses22AE#1 = Append<femData:MeshPos>(poses14EB,p22A7);
          bool _t22B1#1 = GT<real>(startTime14EF,newRayTime22A9);
          if _t22B1 then goto JOIN22B3 else goto JOIN22B3
        JOIN22B3:  preds = [COND22BA,COND22BA]
          real startTime22B5#1 = phi(newRayTime22A9,startTime14EF)
          int currentCellInt22B8#1 = phi(cellIntersects14ED,currentCellInt14EE)
          int _t22BD#1 = 1;
          int cellIntersects22BF#1 = IAdd(cellIntersects14ED,_t22BD);
          goto JOIN1876
        JOIN1876:  preds = [ASSIGN22C1,COND22C2]
          real startTime22BC#1 = phi(startTime22B5,startTime14EF)
          int currentCellInt22BB#1 = phi(currentCellInt22B8,currentCellInt14EE)
          int cellIntersects22C0#1 = phi(cellIntersects22BF,cellIntersects14ED)
          real[] normalizedTimes22AC#1 = phi(normalizedTimes22AB,normalizedTimes14EC)
          femData:MeshPos[] poses22AF#1 = phi(poses22AE,poses14EB)
          goto JOIN14FE
        ASSIGN2B86:  preds = [COND22A2]
          tensor[2] _t229E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN228E
        ASSIGN2B62:  preds = [COND1F52]
          tensor[2] _t1F4E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1F3E
        ASSIGN2B3C:  preds = [COND1C02]
          tensor[2] _t1BFE#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1BEE
        ASSIGN2B17:  preds = [COND186F]
          tensor[2] _t186B#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN185B
        ASSIGN22C7:  preds = [FOREACH14F0]
          int _t22C6#1 = 0;
          bool _t22C8#1 = NEQ<int>(cellIntersects14ED,_t22C6);
          if _t22C8 then goto ASSIGN22CD else goto ASSIGN2313
        ASSIGN22CD:  preds = [COND232A]
          femData:MeshPos pos22CB#4 = Subscript<femData:MeshPos[]>(poses14EB,currentCellInt14EE);
          real rayN22CE#2 = Subscript<real[]>(normalizedTimes14EC,currentCellInt14EE);
          tensor[3] _t22D3#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig1499,rayN22CE,rayVec149A);
          tensor[3][2] _t22D5#1 = <tensor[3][2]>{rayOrig1499,_t22D3};
          tensor[3][] _t22D7#1 = MkDynamic<tensor[3],2>(_t22D5);
          tensor[3][] spaceInter22D9#1 = Concat<tensor[3]>(spaceInter14A6,_t22D7);
          tensor[2] _t22DC#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos22CB);
          tensor[2][1] _t22DE#1 = <tensor[2][1]>{_t22DC};
          tensor[2][] _t22E0#1 = MkDynamic<tensor[2],1>(_t22DE);
          femData:Mesh _t22E5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos22CB);
          int _t22E7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos22CB);
          femData:MeshCell currentCell22E9#2 = LoadFem<femData:MeshCell>(_t22E5,_t22E7);
          femData:MeshCell[1] _t22EC#1 = <femData:MeshCell[1]>{currentCell22E9};
          femData:MeshCell[] _t22EE#1 = MkDynamic<femData:MeshCell,1>(_t22EC);
          string _t22F3#1 = "In the interval:";
          tensor[2] _t22F5#1 = <tensor[2]>[camNearVsp149B,camFarVsp149C];
          string _t22F7#3 = "\n";
          Print<[string,tensor[2],string]>(_t22F3,_t22F5,_t22F7);
          string _t22FA#1 = "Possible times:";
          Print<[string,real[],string]>(_t22FA,normalizedTimes14EC,_t22F7);
          string _t22FF#1 = "cells:";
          femData:MeshCell[] accum2301#1 = <femData:MeshCell[]>{};
        FOREACH2305:  preds = [ASSIGN2302,NEXT230E]
          foreach (p2303 in poses14EB) on exit goto MASSIGN2AE7
            femData:MeshCell[] accum2304#2 = phi(accum2301,accum230C)
          femData:Mesh _t2306#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p2303);
          int _t2308#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p2303);
          femData:MeshCell _t230A#1 = LoadFem<femData:MeshCell>(_t2306,_t2308);
          femData:MeshCell[] accum230C#1 = Append<femData:MeshCell>(accum2304,_t230A);
          goto FOREACH2305
        MASSIGN2AE7:  preds = [FOREACH2305]
          Print<[string,femData:MeshCell[],string]>(_t22FF,accum2304,_t22F7);
          goto JOIN22CA
        JOIN22CA:  preds = [MASSIGN2AE7,*STABILIZE231C]
          femData:MeshPos pos22CC#1 = phi(pos22CB)
          femData:MeshCell currentCell22EA#1 = phi(currentCell22E9)
          real rayN22CF#1 = phi(rayN22CE)
          femData:MeshCell[] cellInter22F1#1 = phi(_t22EE)
          tensor[2][] refSpaceInter22E3#1 = phi(_t22E0)
          tensor[3][] spaceInter22DA#1 = phi(spaceInter22D9)
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.spaceInter = spaceInter22DA;
          self.refSpaceInter = refSpaceInter22E3;
          self.cellInter = cellInter22F1;
          self.currentCellInt = currentCellInt14EE;
          self.rayN = rayN22CF;
          self.currentCell = currentCell22EA;
          self.pos = pos22CC;
          self.startsInside = startsInside22C4;
          active
        ASSIGN2313:  preds = [COND232A]
          string _t2312#1 = "No intersection!\n";
          Print<[string]>(_t2312);
          string _t2315#1 = "Ui: ";
          string _t2317#1 = " Vi:";
          string _t2319#1 = "\n";
          Print<[string,int,string,int,string]>(_t2315,ui14AF,_t2317,vi14B0,_t2319);
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.currentCellInt = currentCellInt14EE;
          self.startsInside = startsInside22C4;
          stabilize
          goto JOIN22CA
        ASSIGN14D6:  preds = [COND14D7]
          bool _t14D5#1 = NEQ<int>(vi14B0,debugV148E);
          goto JOIN14D1
    end start
    method update
        ENTRY2AC0:  preds = []
          tensor[3] rayOrig233D#4 = self.rayOrig;
          tensor[3] rayVec233E#6 = self.rayVec;
          real camFarVsp2340#6 = self.camFarVsp;
          femData:MeshPos[] poses2346#2 = self.poses;
          real[] normalizedTimes2347#4 = self.normalizedTimes;
          int cellIntersects2348#1 = self.cellIntersects;
          tensor[2][] rayCellInter2349#2 = self.rayCellInter;
          tensor[3][] spaceInter234A#3 = self.spaceInter;
          tensor[2][] refSpaceInter234B#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter234C#4 = self.cellInter;
          real rayN234E#7 = self.rayN;
          femData:MeshCell currentCell234F#2 = self.currentCell;
          int steps2350#1 = self.steps;
          femData:MeshPos pos2351#8 = self.pos;
          bool startsInside2352#2 = self.startsInside;
          int ui2353#1 = self.ui;
          int vi2354#1 = self.vi;
          string _t2370#1 = "Ui: ";
          string _t2372#1 = " vi: ";
          string _t2374#21 = "\n";
          Print<[string,int,string,int,string]>(_t2370,ui2353,_t2372,vi2354,_t2374);
          string _t2377#1 = "The current ref pos is:";
          tensor[2] _t2379#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          Print<[string,tensor[2],string]>(_t2377,_t2379,_t2374);
          string _t237E#1 = "Current cell:";
          femData:Mesh _t2380#8 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2382#3 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2384#3 = LoadFem<femData:MeshCell>(_t2380,_t2382);
          Print<[string,femData:MeshCell,string]>(_t237E,_t2384,_t2374);
          string _t2389#1 = "The current time is:";
          Print<[string,real,string]>(_t2389,rayN234E,_t2374);
          string _t238E#2 = "The current world pos is:";
          tensor[2] _t239A#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t2382,_t2380,_t2380,_t2379);
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          tensor[3] stupid23A5#2 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,rayN234E,rayVec233E);
          string _t23A7#2 = "The current world pos should be:";
          real _t23A9#1 = TensorIndex<tensor[3],[0]>(stupid23A5);
          real _t23AB#1 = TensorIndex<tensor[3],[1]>(stupid23A5);
          tensor[2] _t23AD#3 = <tensor[2]>[_t23A9,_t23AB];
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          real _t23B2#10 = 0.1e1;
          real _t23B4#3 = 0.1e-8;
          real _t23B6#1 = λ(T0[],T1[])<(T0 + T1)> (_t23B2,_t23B4);
          tensor[2] _t23BC#1 = <tensor[2]>[_t23B2,_t23B2];
          real _t23C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t23BC,_t2379);
          bool _t23C2#1 = GT<real>(_t23B6,_t23C0);
          tensor[2] _t23C8#1 = <tensor[2]>[_t23B4,_t23B4];
          tensor[2] _t23CC#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t23C8,_t2379);
          real _t23CE#1 = TensorIndex<tensor[2],[0]>(_t23CC);
          real _t23D0#4 = -0.e0;
          bool _t23D2#1 = GT<real>(_t23CE,_t23D0);
          real _t23DE#1 = TensorIndex<tensor[2],[1]>(_t23CC);
          bool _t23E2#1 = GT<real>(_t23DE,_t23D0);
          bool _t23E4#1 = BAnd(_t23D2,_t23E2);
          bool _t23E6#1 = BAnd(_t23C2,_t23E4);
          bool _t23E8#1 = BNot(_t23E6);
          if _t23E8 then goto ASSIGN23EC else goto JOIN23EA
        ASSIGN23EC:  preds = [COND23F5]
          string _t23EB#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t23EB);
          bool _t23EE#1 = BNot(startsInside2352);
          if _t23EE then goto ASSIGN23F2 else goto JOIN23F0
        ASSIGN23F2:  preds = [COND23F4]
          string _t23F1#1 = "Not because of an inside\n";
          Print<[string]>(_t23F1);
          goto JOIN23F0
        JOIN23F0:  preds = [MASSIGN23F3,COND23F4]
          goto JOIN23EA
        JOIN23EA:  preds = [JOIN23F0,COND23F5]
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          real err2432#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2])<Sqrt(Σ(i0=0..1)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..1))> (_t2382,_t2380,_t2380,_t2379,_t23AD);
          real _t2434#1 = 0.1e-4;
          bool _t2436#1 = GT<real>(err2432,_t2434);
          if _t2436 then goto ASSIGN243A else goto ASSIGN243F
        ASSIGN243A:  preds = [COND2441]
          string _t2439#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t2439,err2432,_t2374);
          goto JOIN2438
        JOIN2438:  preds = [MASSIGN2B9B,MASSIGN2440]
          int _t2442#13 = 1;
          int steps2444#4 = IAdd(steps2350,_t2442);
          string _t2446#1 = "Orig:";
          string _t2448#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t2446,rayOrig233D,_t2448,rayVec233E,_t2374);
          tensor[3] newDpos244F#2 = λ(T0[],T1[],T2[3])<((T0) - (T1) * T2_{i0})>_{3} (camFarVsp2340,rayN234E,rayVec233E);
          tensor[2] _t2451#8 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t2459#28 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2384);
          int _t2469#14 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2384);
          tensor[2] _t2473#14 = <tensor[2]>[_t23D0,_t23D0];
          real _t2479#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t247B#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t247D#14 = <tensor[2]>[_t2479,_t247B];
          int _t2481#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos2351);
          real time2484#6 = +inf;
          int face2486#9 = -1;
          real faceTime2488#6 = -inf;
          real _t248C#14 = 0.e0;
          tensor[2] _t248E#10 = <tensor[2]>[_t23B2,_t248C];
          real _t2492#6 = -0.1e1;
          tensor[2] _t2496#7 = <tensor[2]>[_t2492,_t23B2];
          real _t24A2#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t248E,_t2451,_t2496,_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          real _t24A4#6 = -0.1e-15;
          bool _t24A6#1 = GTE<real>(_t24A2,_t24A4);
          bool _t24C2#1 = GT<real>(time2484,_t24A2);
          real _t24CC#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          real _t24CE#6 = 0.1e-20;
          bool _t24D0#1 = GTE<real>(_t24CC,_t24CE);
          bool _t24D2#1 = BAnd(_t24C2,_t24D0);
          bool _t24D4#1 = BAnd(_t24A6,_t24D2);
          if _t24D4 then goto ASSIGN24D8 else goto JOIN24D6
        ASSIGN24D8:  preds = [COND2519]
          int _t24D7#2 = 0;
          bool _t24D9#1 = NEQ<int>(_t2481,_t24D7);
          if _t24D9 then goto JOIN24DB else goto JOIN24DB
        JOIN24DB:  preds = [COND2515,COND2515]
          real faceTime2513#1 = phi(faceTime2488,_t24A2)
          int face24F8#1 = phi(_t24D7,face2486)
          real time24F5#1 = phi(_t24A2,time2484)
          goto JOIN24D6
        JOIN24D6:  preds = [JOIN24DB,COND2519]
          real faceTime2518#2 = phi(faceTime2513,faceTime2488)
          int face2517#2 = phi(face24F8,face2486)
          real time2516#3 = phi(time24F5,time2484)
          tensor[2] _t251E#6 = <tensor[2]>[_t248C,_t248C];
          tensor[2] _t2526#7 = <tensor[2]>[_t248C,_t23B2];
          real _t2532#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t2526,_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2536#1 = GTE<real>(_t2532,_t24A4);
          bool _t2552#1 = GT<real>(time2516,_t2532);
          real _t255C#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2560#1 = GTE<real>(_t255C,_t24CE);
          bool _t2562#1 = BAnd(_t2552,_t2560);
          bool _t2564#1 = BAnd(_t2536,_t2562);
          if _t2564 then goto ASSIGN2BAC else goto JOIN2566
        ASSIGN2BAC:  preds = [COND25A9]
          bool _t2569#1 = NEQ<int>(_t2481,_t2442);
          if _t2569 then goto JOIN256B else goto JOIN256B
        JOIN256B:  preds = [COND25A5,COND25A5]
          real faceTime25A3#1 = phi(faceTime2518,_t2532)
          int face2588#1 = phi(_t2442,face2517)
          real time2585#1 = phi(_t2532,time2516)
          goto JOIN2566
        JOIN2566:  preds = [JOIN256B,COND25A9]
          real faceTime25A8#2 = phi(faceTime25A3,faceTime2518)
          int face25A7#2 = phi(face2588,face2517)
          real time25A6#3 = phi(time2585,time2516)
          real _t25C2#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t248E,_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t25C6#1 = GTE<real>(_t25C2,_t24A4);
          bool _t25E2#1 = GT<real>(time25A6,_t25C2);
          real _t25EC#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t25F0#1 = GTE<real>(_t25EC,_t24CE);
          bool _t25F2#1 = BAnd(_t25E2,_t25F0);
          bool _t25F4#1 = BAnd(_t25C6,_t25F2);
          if _t25F4 then goto ASSIGN25F8 else goto JOIN25F6
        ASSIGN25F8:  preds = [COND2639]
          int _t25F7#2 = 2;
          bool _t25F9#1 = NEQ<int>(_t2481,_t25F7);
          if _t25F9 then goto JOIN25FB else goto JOIN25FB
        JOIN25FB:  preds = [COND2635,COND2635]
          real faceTime2633#1 = phi(faceTime25A8,_t25C2)
          int face2618#1 = phi(_t25F7,face25A7)
          real time2615#1 = phi(_t25C2,time25A6)
          goto JOIN25F6
        JOIN25F6:  preds = [JOIN25FB,COND2639]
          real faceTime2638#2 = phi(faceTime2633,faceTime25A8)
          int face2637#2 = phi(face2618,face25A7)
          real time2636#1 = phi(time2615,time25A6)
          bool _t263C#1 = NEQ<int>(face2637,face2486);
          if _t263C then goto ASSIGN2BB7 else goto ASSIGN2BB5
        ASSIGN2BB7:  preds = [COND265F]
          real _t2641#1 = Max<real>(time2636,_t248C);
          real _t2643#1 = IntToReal(face2637);
          tensor[2] _t2645#1 = <tensor[2]>[_t2641,_t2643];
          goto JOIN263E
        JOIN263E:  preds = [ASSIGN2646,JOIN264E]
          tensor[2] _t2648#1 = phi(_t2645,_t2656)
          real nextTime2660#3 = TensorIndex<tensor[2],[0]>(_t2648);
          real _t2662#1 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (rayN234E,camFarVsp2340,nextTime2660);
          real _t2664#1 = Min<real>(camFarVsp2340,_t2662);
          real rayNp2666#6 = Max<real>(rayN234E,_t2664);
          string _t2668#1 = "Next time:";
          Print<[string,real,string]>(_t2668,nextTime2660,_t2374);
          bool _t266F#1 = GTE<real>(nextTime2660,_t248C);
          if _t266F then goto ASSIGN2673 else goto JOIN2671
        ASSIGN2673:  preds = [COND2A09]
          tensor[2] _t2672#1 = <tensor[2]>[rayN234E,rayNp2666];
          tensor[2][] rayCellInter2674#3 = Append<tensor[2]>(rayCellInter2349,_t2672);
          int _t267C#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos2351);
          real _t26FF#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t248E,_t2451,_t2496,_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          bool _t2703#1 = GTE<real>(_t26FF,_t24A4);
          bool _t271F#1 = GT<real>(time2484,_t26FF);
          real _t2729#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          bool _t272D#1 = GTE<real>(_t2729,_t24CE);
          bool _t272F#1 = BAnd(_t271F,_t272D);
          bool _t2731#1 = BAnd(_t2703,_t272F);
          if _t2731 then goto ASSIGN2735 else goto JOIN2733
        ASSIGN2735:  preds = [COND2776]
          int _t2734#2 = 0;
          bool _t2736#1 = NEQ<int>(_t2481,_t2734);
          if _t2736 then goto JOIN2738 else goto JOIN2738
        JOIN2738:  preds = [COND2772,COND2772]
          real faceTime2770#1 = phi(faceTime2488,_t26FF)
          int face2755#1 = phi(_t2734,face2486)
          real time2752#1 = phi(_t26FF,time2484)
          goto JOIN2733
        JOIN2733:  preds = [JOIN2738,COND2776]
          real faceTime2775#2 = phi(faceTime2770,faceTime2488)
          int face2774#2 = phi(face2755,face2486)
          real time2773#3 = phi(time2752,time2484)
          real _t278F#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t2526,_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2793#1 = GTE<real>(_t278F,_t24A4);
          bool _t27AF#1 = GT<real>(time2773,_t278F);
          real _t27B9#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t27BD#1 = GTE<real>(_t27B9,_t24CE);
          bool _t27BF#1 = BAnd(_t27AF,_t27BD);
          bool _t27C1#1 = BAnd(_t2793,_t27BF);
          if _t27C1 then goto ASSIGN2BCC else goto JOIN27C3
        ASSIGN2BCC:  preds = [COND2806]
          bool _t27C6#1 = NEQ<int>(_t2481,_t2442);
          if _t27C6 then goto JOIN27C8 else goto JOIN27C8
        JOIN27C8:  preds = [COND2802,COND2802]
          real faceTime2800#1 = phi(faceTime2775,_t278F)
          int face27E5#1 = phi(_t2442,face2774)
          real time27E2#1 = phi(_t278F,time2773)
          goto JOIN27C3
        JOIN27C3:  preds = [JOIN27C8,COND2806]
          real faceTime2805#2 = phi(faceTime2800,faceTime2775)
          int face2804#2 = phi(face27E5,face2774)
          real time2803#3 = phi(time27E2,time2773)
          real _t281F#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t248E,_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t2823#1 = GTE<real>(_t281F,_t24A4);
          bool _t283F#1 = GT<real>(time2803,_t281F);
          real _t2849#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t284D#1 = GTE<real>(_t2849,_t24CE);
          bool _t284F#1 = BAnd(_t283F,_t284D);
          bool _t2851#1 = BAnd(_t2823,_t284F);
          if _t2851 then goto ASSIGN2855 else goto JOIN2853
        ASSIGN2855:  preds = [COND2896]
          int _t2854#2 = 2;
          bool _t2856#1 = NEQ<int>(_t2481,_t2854);
          if _t2856 then goto JOIN2858 else goto JOIN2858
        JOIN2858:  preds = [COND2892,COND2892]
          real faceTime2890#1 = phi(faceTime2805,_t281F)
          int face2875#1 = phi(_t2854,face2804)
          real time2872#1 = phi(_t281F,time2803)
          goto JOIN2853
        JOIN2853:  preds = [JOIN2858,COND2896]
          real faceTime2895#2 = phi(faceTime2890,faceTime2805)
          int face2894#2 = phi(face2875,face2804)
          real time2893#1 = phi(time2872,time2803)
          bool _t2899#1 = NEQ<int>(face2894,face2486);
          if _t2899 then goto ASSIGN2BD9 else goto ASSIGN2BD6
        ASSIGN2BD9:  preds = [COND28BC]
          real _t289E#1 = Max<real>(time2893,_t248C);
          real _t28A0#1 = IntToReal(face2894);
          tensor[2] _t28A2#1 = <tensor[2]>[_t289E,_t28A0];
          goto JOIN289B
        JOIN289B:  preds = [ASSIGN28A3,JOIN28AB]
          tensor[2] _t28A5#3 = phi(_t28A2,_t28B3)
          real _t28C0#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28C2#6 = FloorToInt(_t28C0);
          int[2] _t28C4#2 = nextCell4132A (_t28C2,_t267C,_t2380);
          int _t28C6#4 = 0;
          int _t28C8#2 = Subscript<int[2]>(_t28C4,_t28C6);
          bool _t28CA#1 = NEQ<int>(face2486,_t28C8);
          if _t28CA then goto ASSIGN2BDE else goto ASSIGN29A5
        ASSIGN2BDE:  preds = [COND29AE]
          tensor[2][3] _t28E9#1 = <tensor[2][3]>{_t248E,_t251E,_t251E};
          int _t28F3#3 = Subscript<int[2]>(_t28C4,_t2442);
          tensor[2] _t28F5#1 = Subscript<tensor[2][3]>(_t28E9,_t28F3);
          tensor[2][3] _t2909#1 = <tensor[2][3]>{_t2496,_t2526,_t248E};
          tensor[2] _t2915#1 = Subscript<tensor[2][3]>(_t2909,_t28F3);
          real _t2917#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t291B#2 = λ(T0[],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],T6[2])<((T0 * Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * T5_{i3}))>(i3=0..1)) + T6_{i0})>_{2} (_t2917,_t2469,_t2459,_t2459,_t2473,_t247D,_t2451);
          real _t291D#1 = TensorIndex<tensor[2],[0]>(_t291B);
          real _t2925#1 = TensorIndex<tensor[2],[1]>(_t291B);
          real[2] _t2927#1 = <real[2]>{_t291D,_t2925};
          int[3] _t292F#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t2935#1 = Subscript<int[3]>(_t292F,_t28C2);
          real _t2937#1 = Subscript<real[2]>(_t2927,_t2935);
          real[2] _t293D#1 = <real[2]>{_t23B2,_t248C};
          real[2] _t2943#1 = <real[2]>{_t248C,_t248C};
          real[2] _t2949#1 = <real[2]>{_t248C,_t248C};
          real[2][3] _t294B#1 = <real[2][3]>{_t293D,_t2943,_t2949};
          real[2] _t2951#1 = Subscript<real[2][3]>(_t294B,_t28C2);
          int[3] _t2959#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t295F#1 = Subscript<int[3]>(_t2959,_t28C2);
          real _t2961#1 = Subscript<real[2]>(_t2951,_t295F);
          real[2] _t2969#1 = <real[2]>{_t2492,_t23B2};
          real[2] _t296F#1 = <real[2]>{_t248C,_t23B2};
          real[2] _t2975#1 = <real[2]>{_t23B2,_t248C};
          real[2][3] _t2977#1 = <real[2][3]>{_t2969,_t296F,_t2975};
          real[2] _t297D#1 = Subscript<real[2][3]>(_t2977,_t28C2);
          int[3] _t2985#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t298B#1 = Subscript<int[3]>(_t2985,_t28C2);
          real _t298D#1 = Subscript<real[2]>(_t297D,_t298B);
          tensor[2] _t2993#1 = λ(T0[2],T1[],T2[],T3[],T4[2])<(T0_{i0} + (((T1) - (T2)) / ( T3) * T4_{i0}))>_{2} (_t28F5,_t2937,_t2961,_t298D,_t2915);
          femData:MeshPos _t299F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2380,_t28C8,_t2993,_t28F3);
          goto JOIN28CC
        JOIN28CC:  preds = [ASSIGN2BF2,ASSIGN2BDD]
          femData:MeshPos posp29A2#5 = phi(_t299F,_t29AA)
          bool _t29AF#1 = GTE<real>(rayNp2666,camFarVsp2340);
          if _t29AF then goto ASSIGN29B3 else goto JOIN29B1
        ASSIGN29B3:  preds = [COND29CC]
          string _t29B2#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t29B2,cellInter234C,_t2374);
          tensor[3] _t29B9#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,camFarVsp2340,rayVec233E);
          tensor[3][] spaceInter29BB#1 = Append<tensor[3]>(spaceInter234A,_t29B9);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29BB;
          self.rayN = rayNp2666;
          self.steps = steps2444;
          stabilize
          goto JOIN29B1
        JOIN29B1:  preds = [*STABILIZE29BE,COND29CC]
          tensor[3][] spaceInter29BC#1 = phi(spaceInter234A)
          tensor[3] _t29D0#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,rayNp2666,rayVec233E);
          tensor[3][] spaceInter29D2#2 = Append<tensor[3]>(spaceInter29BC,_t29D0);
          tensor[2] _t29D4#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp29A2);
          tensor[2][] refSpaceInter29D6#2 = Append<tensor[2]>(refSpaceInter234B,_t29D4);
          bool _t29D9#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp29A2);
          if _t29D9 then goto ASSIGN29E0 else goto ASSIGN2A03
        ASSIGN29E0:  preds = [COND2A05]
          string _t29DF#1 = "Next cell:";
          femData:Mesh _t29E1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp29A2);
          int _t29E3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp29A2);
          femData:MeshCell _t29E5#3 = LoadFem<femData:MeshCell>(_t29E1,_t29E3);
          Print<[string,femData:MeshCell,string]>(_t29DF,_t29E5,_t2374);
          femData:MeshCell[] cellInter29F1#1 = Append<femData:MeshCell>(cellInter234C,_t29E5);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29D2;
          self.refSpaceInter = refSpaceInter29D6;
          self.cellInter = cellInter29F1;
          self.rayN = rayNp2666;
          self.currentCell = _t29E5;
          self.steps = steps2444;
          self.pos = posp29A2;
          active
          goto JOIN29DB
        JOIN29DB:  preds = [*ACTIVE29F4,MASSIGN2A04]
          femData:MeshPos pos29DD#1 = phi(pos2351)
          femData:MeshCell currentCell29EF#1 = phi(currentCell234F)
          femData:MeshCell[] cellInter29F2#1 = phi(cellInter234C)
          goto JOIN2671
        JOIN2671:  preds = [JOIN29DB,COND2A09]
          femData:MeshPos pos2A08#6 = phi(pos29DD,pos2351)
          femData:MeshCell currentCell2A07#1 = phi(currentCell29EF,currentCell234F)
          real rayN2678#3 = phi(rayNp2666,rayN234E)
          femData:MeshCell[] cellInter2A06#3 = phi(cellInter29F2,cellInter234C)
          tensor[2][] refSpaceInter29D7#2 = phi(refSpaceInter29D6,refSpaceInter234B)
          tensor[3][] spaceInter29CD#2 = phi(spaceInter29D2,spaceInter234A)
          tensor[2][] rayCellInter2675#3 = phi(rayCellInter2674,rayCellInter2349)
          int _t2A0E#1 = 0;
          int _t2A12#1 = ISub(cellIntersects2348,_t2442);
          int[] _t2A14#1 = Range(_t2A0E,_t2A12);
        FOREACH2A19:  preds = [ASSIGN2A15,NEXT2A47]
          foreach (i2A16 in _t2A14) on exit goto ASSIGN2BFF
            real estimate2A18#4 = phi(camFarVsp2340,estimate2A45)
            int newIdx2A17#7 = phi(face2486,newIdx2A44)
          real t2A1A#3 = Subscript<real[]>(normalizedTimes2347,i2A16);
          femData:MeshPos posp2A1C#2 = Subscript<femData:MeshPos[]>(poses2346,i2A16);
          bool _t2A1E#1 = GTE<real>(t2A1A,rayN2678);
          if _t2A1E then goto ASSIGN2A22 else goto JOIN2A20
        ASSIGN2A22:  preds = [COND2A46]
          bool _t2A21#1 = GTE<real>(estimate2A18,t2A1A);
          if _t2A21 then goto ASSIGN2A25 else goto JOIN2A23
        ASSIGN2A25:  preds = [COND2A43]
          femData:Mesh _t2A24#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp2A1C);
          int _t2A26#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp2A1C);
          femData:MeshCell _t2A28#1 = LoadFem<femData:MeshCell>(_t2A24,_t2A26);
          femData:Mesh _t2A2A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          int _t2A2C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:MeshCell _t2A2E#1 = LoadFem<femData:MeshCell>(_t2A2A,_t2A2C);
          int _t2A31#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A28);
          int _t2A33#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A2E);
          bool _t2A35#1 = NEQ<int>(_t2A31,_t2A33);
          if _t2A35 then goto JOIN2A39 else goto JOIN2A39
        JOIN2A39:  preds = [COND2A40,COND2A40]
          real estimate2A3B#1 = phi(t2A1A,estimate2A18)
          int newIdx2A3E#1 = phi(i2A16,newIdx2A17)
          goto JOIN2A23
        JOIN2A23:  preds = [JOIN2A39,COND2A43]
          real estimate2A42#1 = phi(estimate2A3B,estimate2A18)
          int newIdx2A41#1 = phi(newIdx2A3E,newIdx2A17)
          goto JOIN2A20
        JOIN2A20:  preds = [JOIN2A23,COND2A46]
          real estimate2A45#1 = phi(estimate2A42,estimate2A18)
          int newIdx2A44#1 = phi(newIdx2A41,newIdx2A17)
          goto FOREACH2A19
        ASSIGN2BFF:  preds = [FOREACH2A19]
          bool _t2A4A#1 = GT<int>(newIdx2A17,face2486);
          if _t2A4A then goto ASSIGN2A4E else goto ASSIGN2A9F
        ASSIGN2A4E:  preds = [COND2ABE]
          string _t2A4D#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t2A4D);
          if startsInside2352 then goto ASSIGN2A52 else goto JOIN2A50
        ASSIGN2A52:  preds = [COND2A54]
          string _t2A51#1 = "because of an inside\n";
          Print<[string]>(_t2A51);
          goto JOIN2A50
        JOIN2A50:  preds = [MASSIGN2A53,COND2A54]
          string _t2A55#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t2A55,rayVec233E,_t2374);
          string _t2A5A#1 = "world pos was:";
          tensor[2] _t2A5D#2 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2A08);
          int _t2A5F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:Mesh _t2A61#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          tensor[2] _t2A66#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t2A5F,_t2A61,_t2A61,_t2A5D);
          Print<[string,tensor[2],string]>(_t2A5A,_t2A66,_t2374);
          string _t2A6F#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t2A6F,_t2A5D,_t2374);
          string _t2A76#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes2347,_t2A76,newIdx2A17,_t2374);
          string _t2A7B#1 = "Original time was:";
          Print<[string,real,string]>(_t2A7B,rayN2678,_t2374);
          femData:MeshPos pos2A80#3 = Subscript<femData:MeshPos[]>(poses2346,newIdx2A17);
          femData:Mesh _t2A83#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A80);
          int _t2A85#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A80);
          femData:MeshCell currentCell2A87#2 = LoadFem<femData:MeshCell>(_t2A83,_t2A85);
          femData:MeshCell[] cellInter2A8A#1 = Append<femData:MeshCell>(cellInter2A06,currentCell2A87);
          real rayN2A8D#1 = Subscript<real[]>(normalizedTimes2347,newIdx2A17);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A8A;
          self.rayN = rayN2A8D;
          self.currentCell = currentCell2A87;
          self.steps = steps2444;
          self.pos = pos2A80;
          active
          goto JOIN2A4C
        JOIN2A4C:  preds = [*ACTIVE2A90,*STABILIZE2AB0]
          unreachable
        ASSIGN2A9F:  preds = [COND2ABE]
          string _t2A9E#1 = "Enter times:";
          Print<[string,real[],string]>(_t2A9E,normalizedTimes2347,_t2374);
          string _t2AA3#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t2AA3,rayCellInter2675,_t2374);
          string _t2AA8#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t2AA8,cellInter2A06,_t2374);
          string _t2AAD#1 = "End\n";
          Print<[string]>(_t2AAD);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A06;
          self.rayN = rayN2678;
          self.currentCell = currentCell2A07;
          self.steps = steps2444;
          self.pos = pos2A08;
          stabilize
          goto JOIN2A4C
        ASSIGN2A03:  preds = [COND2A05]
          string _t2A02#1 = "Invalid\n";
          Print<[string]>(_t2A02);
          goto JOIN29DB
        ASSIGN29A5:  preds = [COND29AE]
          real _t29A4#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t29A8#1 = λ(T0[],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],T6[2])<((T0 * Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * T5_{i3}))>(i3=0..1)) + T6_{i0})>_{2} (_t29A4,_t2469,_t2459,_t2459,_t2473,_t247D,_t2451);
          femData:MeshPos _t29AA#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2380,_t29A8);
          goto JOIN28CC
        ASSIGN2BD6:  preds = [COND28BC]
          bool _t28A9#1 = EQ<real>(faceTime2488,faceTime2895);
          if _t28A9 then goto ASSIGN2BD8 else goto ASSIGN2BD7
        ASSIGN2BD8:  preds = [COND28BB]
          tensor[2] _t28B0#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN28AB
        JOIN28AB:  preds = [ASSIGN2BD8,ASSIGN28B8]
          tensor[2] _t28B3#1 = phi(_t28B0,_t28B7)
          goto JOIN289B
        ASSIGN2BD7:  preds = [COND28BB]
          real _t28B5#1 = IntToReal(_t2481);
          tensor[2] _t28B7#1 = <tensor[2]>[faceTime2895,_t28B5];
          goto JOIN28AB
        ASSIGN2BB5:  preds = [COND265F]
          bool _t264C#1 = EQ<real>(faceTime2488,faceTime2638);
          if _t264C then goto ASSIGN2BB6 else goto ASSIGN2659
        ASSIGN2BB6:  preds = [COND265E]
          tensor[2] _t2653#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN264E
        JOIN264E:  preds = [ASSIGN2BB6,ASSIGN265B]
          tensor[2] _t2656#1 = phi(_t2653,_t265A)
          goto JOIN263E
        ASSIGN2659:  preds = [COND265E]
          real _t2658#1 = IntToReal(_t2481);
          tensor[2] _t265A#1 = <tensor[2]>[faceTime2638,_t2658];
          goto JOIN264E
        ASSIGN243F:  preds = [COND2441]
          string _t243E#1 = "Did not move off ray!\n";
          Print<[string]>(_t243E);
          goto JOIN2438
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY139F:  preds = []
      int iresU1385#1 = globals.iresU123C;
      int iresV1384#1 = globals.iresV123D;
      int _t1388#2 = 0;
      int _t138A#2 = 1;
      int _t138C#1 = ISub(iresU1385,_t138A);
      int[] _t138E#1 = Range(_t1388,_t138C);
    FOREACH1391:  preds = [ASSIGN138F,NEXT139E]
      foreach (vi1390 in _t138E) on exit goto RETURN13A0
      int _t1396#1 = ISub(iresV1384,_t138A);
      int[] _t1398#1 = Range(_t1388,_t1396);
    FOREACH139B:  preds = [ASSIGN2AC3,NEXT139D]
      foreach (ui139A in _t1398) on exit goto NEXT139E
      new ray(ui139A,vi1390);
      goto FOREACH139B
    NEXT139E:  preds = [FOREACH139B]
      goto FOREACH1391
    RETURN13A0:  preds = [FOREACH1391]
      return
#### end program ####
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1235 (a) = <no-default>
  input isoval1236 (isoval) = <default>
  input thick1237 (thick) = <default>
  input camEye1238 (camEye) = <default>
  input camAt1239 (camAt) = <default>
  input camUp123A (camUp) = <default>
  input camFOV123B (camFOV) = <default>
  input iresU123C (iresU) = <default>
  input iresV123D (iresV) = <default>
  input camNear123E (camNear) = <default>
  input camFar123F (camFar) = <default>
  input refStep1240 (refStep) = <default>
  input rayStep1241 (rayStep) = <default>
  input lightVsp1242 (lightVsp) = <default>
  input phongKa1243 (phongKa) = <default>
  input phongKd1244 (phongKd) = <default>
  input debug1245 (debug) = <default>
  input debugU1246 (debugU) = <default>
  input debugV1247 (debugV) = <default>
  input eps1248 (eps) = <default>
  global femData:MeshCell[] 0cell_a129C
  global real camNearVsp129E
  global real camFarVsp129F
  global tensor[3] camN12A0
  global tensor[3] camU12A1
  global tensor[3] camV12A2
  global real camVmax12A3
  global real camUmax12A4
## functions
  function femData:MeshPos _msh_newtonInverse1318 (tensor[2] pos12A5#6, int cellInt12A6#11, femData:Mesh mesh12A7#23) {
    ENTRY1317:  preds = []
      real _t12A8#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn12AC#6 = <tensor[2]>[_t12A8,_t12A8];
      int _t12BC#1 = 0;
      int _t12BE#1 = 16;
      int[] _t12C0#1 = Range(_t12BC,_t12BE);
    FOREACH12C4:  preds = [ASSIGN12C1,NEXT1313]
      foreach (itter12C2 in _t12C0) on exit goto ASSIGN1315
        tensor[2] xn12C3#8 = phi(xn12AC,xn12CD)
      tensor[2] xn12CD#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2])<(T0_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..1))>_{2} (xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      real _t12CF#2 = 0.1e-7;
      real _t12D3#1 = λ(T0[],T1[])<(T0 * T1)> (_t12CF,_t12CF);
      real _t12D5#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],INT9,FEM(msh)10,FEM(msh)11,T12[2],T13[2],INT14,FEM(msh)15,FEM(msh)16,T17[2])<Σ(i0=0..1)<((Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..1) * Σ(i10=0..1)<(((Σ(i17=0..1)<((ϵ_{ii17,ii0} * Σ(i19=0..1)<((ϵ_{ii19,ii10} * Probe(femV(noFunc, 0, 1, 1)_{i19}⊛Basis()dx_{i17},T3)))>(i19=0..1)))>(i17=0..1)) / ( Σ(i15=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{'0'},T3) * Σ(i16=0..1)<((ϵ_{ii15,ii16} * Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'1'},T3)))>(i16=0..1)))>(i15=0..1)) * (Probe(femV(noFunc, 0, 1, 1)_{i10}⊛Basis(),T8)) - (T4_{i10})))>(i10=0..1)))>(i0=0..1)> (cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      bool _t12D7#1 = GTE<real>(_t12D3,_t12D5);
      if _t12D7 then goto ASSIGN12DB else goto JOIN12D9
    ASSIGN12DB:  preds = [COND1312]
      real _t12DA#3 = 0.1e1;
      real _t12DC#3 = 0.1e-8;
      real _t12DE#1 = λ(T0[],T1[])<(T0 + T1)> (_t12DA,_t12DC);
      tensor[2] _t12E4#1 = <tensor[2]>[_t12DA,_t12DA];
      real _t12E6#1 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<Σ(i0=0..1)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i10},T5)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5)))>(i9=0..1)))>(i8=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..1))))>(i0=0..1)> (_t12E4,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      bool _t12E8#1 = GT<real>(_t12DE,_t12E6);
      tensor[2] _t12EE#1 = <tensor[2]>[_t12DC,_t12DC];
      tensor[2] _t12F0#2 = λ(T0[2],T1[2],INT2,FEM(msh)3,FEM(msh)4,T5[2],T6[2],INT7,FEM(msh)8,FEM(msh)9,T10[2])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii0} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i11},T5)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5)))>(i10=0..1)))>(i9=0..1)) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..1)))>_{2} (_t12EE,xn12C3,cellInt12A6,mesh12A7,mesh12A7,xn12AC,pos12A5,cellInt12A6,mesh12A7,mesh12A7,xn12C3);
      real _t12F2#1 = TensorIndex<tensor[2],[0]>(_t12F0);
      real _t12F4#2 = -0.e0;
      bool _t12F6#1 = GT<real>(_t12F2,_t12F4);
      real _t1300#1 = TensorIndex<tensor[2],[1]>(_t12F0);
      bool _t1304#1 = GT<real>(_t1300,_t12F4);
      bool _t1306#1 = BAnd(_t12F6,_t1304);
      bool _t1308#1 = BAnd(_t12E8,_t1306);
      if _t1308 then goto ASSIGN130C else goto ASSIGN130F
    ASSIGN130C:  preds = [COND1311]
      femData:MeshPos _t130B#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh12A7,cellInt12A6,xn12CD,pos12A5);
      return _t130B
      goto JOIN130A
    JOIN130A:  preds = [*RETURN(_t130B)130D,*RETURN(_t130E)1310]
      goto JOIN12D9
    JOIN12D9:  preds = [*JOIN130A,COND1312]
      goto FOREACH12C4
    ASSIGN130F:  preds = [COND1311]
      femData:MeshPos _t130E#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t130E
      goto JOIN130A
    ASSIGN1315:  preds = [FOREACH12C4]
      femData:MeshPos _t1314#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh12A7);
      return _t1314
}
  function int[2] nextCell4132A (int faceIdx1319#1, int cell131A#1, femData:Mesh mesh131B#1) {
    ENTRY1329:  preds = []
      int _t131C#1 = 6;
      int _t131E#1 = IMul(cell131A,_t131C);
      int _t1320#1 = 2;
      int _t1322#1 = IMul(faceIdx1319,_t1320);
      int _t1324#1 = IAdd(_t131E,_t1322);
      int[2] _t1326#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh131B,_t1324);
      return _t1326
}
## input initialization
  ENTRY129A:  preds = []
    real isoval1249#1 = 0.2e0;
    globals.isoval1236 = isoval1249;
    real thick124C#1 = 0.7e-1;
    globals.thick1237 = thick124C;
    real _t124F#2 = 0.3e1;
    real _t1251#1 = -0.3e1;
    tensor[3] camEye1255#1 = <tensor[3]>[_t124F,_t1251,_t124F];
    globals.camEye1238 = camEye1255;
    real _t1258#3 = 0.5e0;
    tensor[3] camAt125E#1 = <tensor[3]>[_t1258,_t1258,_t1258];
    globals.camAt1239 = camAt125E;
    real _t1261#2 = 0.e0;
    real _t1265#2 = 0.1e1;
    tensor[3] camUp1267#2 = <tensor[3]>[_t1261,_t1261,_t1265];
    globals.camUp123A = camUp1267;
    real camFOV126A#1 = 0.137e2;
    globals.camFOV123B = camFOV126A;
    int iresU126D#2 = 10;
    globals.iresU123C = iresU126D;
    globals.iresV123D = iresU126D;
    real camNear1273#1 = -0.2e1;
    globals.camNear123E = camNear1273;
    real camFar1276#1 = 0.5e1;
    globals.camFar123F = camFar1276;
    globals.refStep1240 = _t1265;
    real rayStep127C#1 = 0.1e-1;
    globals.rayStep1241 = rayStep127C;
    globals.lightVsp1242 = camUp1267;
    real phongKa1288#1 = 0.1e0;
    globals.phongKa1243 = phongKa1288;
    real phongKd128B#1 = 0.9e0;
    globals.phongKd1244 = phongKd128B;
    bool debug128E#1 = false;
    globals.debug1245 = debug128E;
    int debugU1291#1 = 8;
    globals.debugU1246 = debugU1291;
    int debugV1294#1 = 2;
    globals.debugV1247 = debugV1294;
    real eps1297#1 = 0.1e-7;
    globals.eps1248 = eps1297;
    return
## global-variable initialization
  ENTRY1382:  preds = []
    femData:Mesh a1333#2 = globals.a1235;
    tensor[3] camEye1332#16 = globals.camEye1238;
    tensor[3] camAt1331#16 = globals.camAt1239;
    tensor[3] camUp1330#4 = globals.camUp123A;
    real camFOV132F#2 = globals.camFOV123B;
    int iresU132E#1 = globals.iresU123C;
    int iresV132D#1 = globals.iresV123D;
    real camNear132C#1 = globals.camNear123E;
    real camFar132B#1 = globals.camFar123F;
    int _t133D#1 = 0;
    int _t133F#1 = 1;
    int _t1341#1 = ExtractFemItem<int,NumCell(Mesh)>(a1333);
    int _t1343#1 = ISub(_t1341,_t133F);
    int[] _t1345#1 = Range(_t133D,_t1343);
    femData:MeshCell[] _t1347#1 = <femData:MeshCell[]>{};
  FOREACH134B:  preds = [ASSIGN1348,NEXT1350]
    foreach (_t1349 in _t1345) on exit goto GASSIGN2AD2
      femData:MeshCell[] _t134A#2 = phi(_t1347,_t134E)
    femData:MeshCell _t134C#1 = LoadFem<femData:MeshCell>(a1333,_t1349);
    femData:MeshCell[] _t134E#1 = Append<femData:MeshCell>(_t134A,_t134C);
    goto FOREACH134B
  GASSIGN2AD2:  preds = [FOREACH134B]
    globals.0cell_a129C = _t134A;
    real camNearVsp1359#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camNear132C,camAt1331,camEye1332);
    globals.camNearVsp129E = camNearVsp1359;
    real camFarVsp135C#1 = λ(T0[],T1[3],T2[3])<(T0 + Sqrt(Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (camFar132B,camAt1331,camEye1332);
    globals.camFarVsp129F = camFarVsp135C;
    tensor[3] camN1361#1 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt1331,camEye1332,camAt1331,camEye1332);
    globals.camN12A0 = camN1361;
    tensor[3] camU1366#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332,camUp1330);
    globals.camU12A1 = camU1366;
    tensor[3] camV1369#1 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332,camUp1330,camAt1331,camEye1332,camAt1331,camEye1332);
    globals.camV12A2 = camV1369;
    real _t136C#2 = 0.314159265358979323846264338327950288e1;
    real _t1370#2 = 0.36e3;
    real camVmax1376#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV132F,_t136C,_t1370,camAt1331,camEye1332);
    globals.camVmax12A3 = camVmax1376;
    real _t1379#1 = IntToReal(iresU132E);
    real _t137D#1 = IntToReal(iresV132D);
    real camUmax137F#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV132F,_t136C,_t1370,camAt1331,camEye1332,_t1379,_t137D);
    globals.camUmax12A4 = camUmax137F;
    return
## strand
  strand ray (int ui13A1#2, int vi13A2#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY1471:  preds = []
        femData:Mesh a13C9#1 = globals.a1235;
        femData:MeshCell[] 0cell_a13C8#1 = globals.0cell_a129C;
        tensor[3] camEye13C7#5 = globals.camEye1238;
        int iresU13C6#1 = globals.iresU123C;
        int iresV13C5#1 = globals.iresV123D;
        real camNearVsp13C4#3 = globals.camNearVsp129E;
        real camFarVsp13C3#3 = globals.camFarVsp129F;
        tensor[3] camN13C2#5 = globals.camN12A0;
        tensor[3] camU13C1#6 = globals.camU12A1;
        tensor[3] camV13C0#6 = globals.camV12A2;
        real camVmax13BF#14 = globals.camVmax12A3;
        real camUmax13BE#14 = globals.camUmax12A4;
        real _t13F3#14 = -0.5e0;
        real _t13F5#7 = IntToReal(ui13A1);
        real _t13F7#7 = IntToReal(iresU13C6);
        real _t13F9#14 = 0.5e0;
        real rayU13FD#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9);
        real _t1403#7 = IntToReal(vi13A2);
        real _t1405#7 = IntToReal(iresV13C5);
        real rayV140B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9);
        tensor[3] UV1411#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],T6[3],T7[],T8[],T9[],T10[],T11[],T12[],T13[3])<(((Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T0) - (Neg(T0)))) * T6_{i0}) + ((Neg(T7) + (((T10) - (T2)) / ( ((T11) - (T5)) - (T2)) * (T7) - (Neg(T7)))) * T13_{i0}))>_{3} (camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0);
        tensor[3] rayOrig1413#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0);
        real _t1415#4 = 0.e0;
        tensor[3] _t141B#5 = <tensor[3]>[_t1415,_t1415,_t1415];
        tensor[3] rayVec141D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN13C2,_t141B);
        tensor[3] rayStart1425#3 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camNearVsp13C4,camN13C2,_t141B);
        real _t1427#1 = TensorIndex<tensor[3],[0]>(rayStart1425);
        real _t1429#1 = TensorIndex<tensor[3],[1]>(rayStart1425);
        tensor[2] rayStartProj142B#1 = <tensor[2]>[_t1427,_t1429];
        tensor[3] rayEnd142F#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3])<(T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camFarVsp13C3,camN13C2,_t141B);
        tensor[3] dpos1431#3 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[],T16[3],T17[3],T18[3],T19[],T20[],T21[],T22[],T23[],T24[],T25[3],T26[],T27[],T28[],T29[],T30[],T31[],T32[3],T33[],T34[3],T35[3])<((T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T15 * (T16_{i0} + T17_{i0})))) - ((T0_{i0} + ((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((Neg(T8) + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (T8) - (Neg(T8)))) * T14_{i0}) + (T33 * (T16_{i0} + T17_{i0}))))>_{3} (camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camFarVsp13C3,camN13C2,_t141B,camEye13C7,camUmax13BE,camUmax13BE,_t13F3,_t13F5,_t13F7,_t13F9,camU13C1,camVmax13BF,camVmax13BF,_t13F3,_t1403,_t1405,_t13F9,camV13C0,camNearVsp13C4,camN13C2,_t141B);
        real _t1433#1 = TensorIndex<tensor[3],[0]>(dpos1431);
        real _t1435#1 = TensorIndex<tensor[3],[1]>(dpos1431);
        tensor[2] dposProj1437#1 = <tensor[2]>[_t1433,_t1435];
        femData:MeshPos[0] _t1439#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t143B#1 = MkDynamic<femData:MeshPos,0>(_t1439);
        real[0] _t143F#1 = <real[0]>{};
        real[] _t1441#1 = MkDynamic<real,0>(_t143F);
        int cellIntersects1445#3 = 0;
        tensor[2][0] _t1447#1 = <tensor[2][0]>{};
        tensor[2][] _t1449#1 = MkDynamic<tensor[2],0>(_t1447);
        tensor[3][0] _t144D#1 = <tensor[3][0]>{};
        tensor[3][] _t144F#1 = MkDynamic<tensor[3],0>(_t144D);
        tensor[2][0] _t1453#1 = <tensor[2][0]>{};
        tensor[2][] _t1455#1 = MkDynamic<tensor[2],0>(_t1453);
        femData:MeshCell[0] _t1459#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t145B#1 = MkDynamic<femData:MeshCell,0>(_t1459);
        int currentCellInt145F#1 = -1;
        femData:MeshCell currentCell1465#1 = Subscript<femData:MeshCell[]>(0cell_a13C8,cellIntersects1445);
        femData:MeshPos pos1469#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a13C9);
        bool startsInside146B#1 = false;
        self.rayU = rayU13FD;
        self.rayV = rayV140B;
        self.UV = UV1411;
        self.rayOrig = rayOrig1413;
        self.rayVec = rayVec141D;
        self.camNearVsp = camNearVsp13C4;
        self.camFarVsp = camFarVsp13C3;
        self.rayStart = rayStart1425;
        self.rayStartProj = rayStartProj142B;
        self.rayEnd = rayEnd142F;
        self.dpos = dpos1431;
        self.dposProj = dposProj1437;
        self.poses = _t143B;
        self.normalizedTimes = _t1441;
        self.cellIntersects = cellIntersects1445;
        self.rayCellInter = _t1449;
        self.spaceInter = _t144F;
        self.refSpaceInter = _t1455;
        self.cellInter = _t145B;
        self.currentCellInt = currentCellInt145F;
        self.rayN = _t1415;
        self.currentCell = currentCell1465;
        self.steps = cellIntersects1445;
        self.pos = pos1469;
        self.startsInside = startsInside146B;
        self.ui = ui13A1;
        self.vi = vi13A2;
        return
    end state init
    method start
        ENTRY232B:  preds = []
          femData:MeshCell[] 0cell_a1491#1 = globals.0cell_a129C;
          bool debug1490#1 = globals.debug1245;
          int debugU148F#1 = globals.debugU1246;
          int debugV148E#1 = globals.debugV1247;
          tensor[3] rayOrig1499#2 = self.rayOrig;
          tensor[3] rayVec149A#1 = self.rayVec;
          real camNearVsp149B#4 = self.camNearVsp;
          real camFarVsp149C#3 = self.camFarVsp;
          tensor[2] rayStartProj149E#55 = self.rayStartProj;
          tensor[2] dposProj14A1#56 = self.dposProj;
          femData:MeshPos[] poses14A2#1 = self.poses;
          real[] normalizedTimes14A3#1 = self.normalizedTimes;
          int cellIntersects14A4#1 = self.cellIntersects;
          tensor[3][] spaceInter14A6#1 = self.spaceInter;
          int currentCellInt14A9#1 = self.currentCellInt;
          bool startsInside14AE#2 = self.startsInside;
          int ui14AF#2 = self.ui;
          int vi14B0#2 = self.vi;
          bool _t14CF#1 = NEQ<int>(ui14AF,debugU148F);
          if _t14CF then goto ASSIGN14D4 else goto ASSIGN14D6
        ASSIGN14D4:  preds = [COND14D7]
          bool _t14D2#1 = true;
          goto JOIN14D1
        JOIN14D1:  preds = [ASSIGN14D4,ASSIGN14D6]
          bool _t14D3#1 = phi(_t14D2,_t14D5)
          if _t14D3 then goto COND14E8 else goto JOIN14D8
        COND14E8:  preds = [COND14E9]
          if debug1490 then goto STABILIZE14DA else goto JOIN14D9
        STABILIZE14DA:  preds = [COND14E8]
          stabilize
          goto JOIN14D9
        JOIN14D9:  preds = [*STABILIZE14DA,COND14E8]
          goto JOIN14D8
        JOIN14D8:  preds = [JOIN14D9,COND14E9]
        FOREACH14F0:  preds = [JOIN14D8,NEXT22C5]
          foreach (c14EA in 0cell_a1491) on exit goto ASSIGN22C7
            real startTime14EF#3 = phi(camFarVsp149C,startTime1519)
            bool startsInside22C4#2 = phi(startsInside14AE,startsInside1524)
            int currentCellInt14EE#6 = phi(currentCellInt14A9,currentCellInt151C)
            int cellIntersects14ED#8 = phi(cellIntersects14A4,cellIntersects1521)
            real[] normalizedTimes14EC#7 = phi(normalizedTimes14A3,normalizedTimes1516)
            femData:MeshPos[] poses14EB#7 = phi(poses14A2,poses1513)
          string _t14F1#1 = "Cell:";
          string _t14F3#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t14F1,c14EA,_t14F3);
          int _t14F6#163 = ExtractFemItem<int,CellIndex(MeshCell)>(c14EA);
          femData:Mesh _t14F8#323 = ExtractFem<femData:Mesh,femData:MeshCell>(c14EA);
          femData:MeshPos _t14FA#1 = _msh_newtonInverse1318 (rayStartProj149E,_t14F6,_t14F8);
          bool _t14FC#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t14FA);
          if _t14FC then goto ASSIGN1500 else goto ASSIGN1531
        ASSIGN1500:  preds = [COND22C3]
          string _t14FF#1 = "pos starts inside\n";
          Print<[string]>(_t14FF);
          tensor[2] _t150E#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femInvV(1318, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t14F6,_t14F8,_t14F8,rayStartProj149E);
          femData:MeshPos p1510#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t14F8,_t14F6,_t150E);
          femData:MeshPos[] poses1512#1 = Append<femData:MeshPos>(poses14EB,p1510);
          real[] normalizedTimes1515#1 = Append<real>(normalizedTimes14EC,camNearVsp149B);
          int _t151E#1 = 1;
          int cellIntersects1520#1 = IAdd(cellIntersects14ED,_t151E);
          bool startsInside1523#1 = true;
          goto JOIN14FE
        JOIN14FE:  preds = [ASSIGN1525,JOIN1876]
          real startTime1519#1 = phi(camNearVsp149B,startTime22BC)
          bool startsInside1524#1 = phi(startsInside1523,startsInside14AE)
          int currentCellInt151C#1 = phi(cellIntersects14ED,currentCellInt22BB)
          int cellIntersects1521#1 = phi(cellIntersects1520,cellIntersects22C0)
          real[] normalizedTimes1516#1 = phi(normalizedTimes1515,normalizedTimes22AC)
          femData:MeshPos[] poses1513#1 = phi(poses1512,poses22AF)
          goto FOREACH14F0
        ASSIGN1531:  preds = [COND22C3]
          real _t1530#26 = -0.e0;
          tensor[2] _t1534#159 = <tensor[2]>[_t1530,_t1530];
          real time1565#9 = +inf;
          int face1567#12 = -1;
          real _t1569#39 = 0.1e1;
          real _t156B#9 = 0.e0;
          tensor[2] _t156D#28 = <tensor[2]>[_t1569,_t156B];
          real _t1571#9 = -0.1e1;
          tensor[2] _t1575#19 = <tensor[2]>[_t1571,_t1569];
          real _t1581#6 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575);
          real _t1583#3 = -0.1e-15;
          bool _t1585#1 = GTE<real>(_t1581,_t1583);
          bool _t15A1#1 = GT<real>(time1565,_t1581);
          real _t15AB#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575);
          real _t15AD#3 = 0.1e-20;
          bool _t15AF#1 = GTE<real>(_t15AB,_t15AD);
          bool _t15B1#1 = BAnd(_t15A1,_t15AF);
          bool _t15B3#4 = BAnd(_t1585,_t15B1);
          if _t15B3 then goto ASSIGN15B9 else goto JOIN15B5
        ASSIGN15B9:  preds = [COND1662]
          real _t15B8#3 = 0.1e-8;
          real _t15BA#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t15B8);
          tensor[2] _t15C0#1 = <tensor[2]>[_t1569,_t1569];
          real _t15E0#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t15C0,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t15E2#1 = GT<real>(_t15BA,_t15E0);
          tensor[2] _t15E8#1 = <tensor[2]>[_t15B8,_t15B8];
          tensor[2] _t1608#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t15E8,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t160A#1 = TensorIndex<tensor[2],[0]>(_t1608);
          bool _t160E#1 = GT<real>(_t160A,_t1530);
          real _t1636#1 = TensorIndex<tensor[2],[1]>(_t1608);
          bool _t163A#1 = GT<real>(_t1636,_t1530);
          bool _t163C#1 = BAnd(_t160E,_t163A);
          bool _t163E#1 = BAnd(_t15E2,_t163C);
          if _t163E then goto ASSIGN165E else goto JOIN1640
        ASSIGN165E:  preds = [COND165F]
          int face165C#1 = 0;
          goto JOIN1640
        JOIN1640:  preds = [ASSIGN165E,COND165F]
          int face165D#1 = phi(face165C,face1567)
          real time165A#1 = phi(_t1581,time1565)
          goto JOIN15B5
        JOIN15B5:  preds = [JOIN1640,COND1662]
          int face1661#2 = phi(face165D,face1567)
          real time1660#3 = phi(time165A,time1565)
          tensor[2] _t1667#18 = <tensor[2]>[_t156B,_t156B];
          tensor[2] _t166F#19 = <tensor[2]>[_t156B,_t1569];
          real _t167B#9 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F);
          bool _t167F#4 = GTE<real>(_t167B,_t1583);
          bool _t169B#1 = GT<real>(time1660,_t167B);
          real _t16A5#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F);
          bool _t16A9#4 = GTE<real>(_t16A5,_t15AD);
          bool _t16AB#1 = BAnd(_t169B,_t16A9);
          bool _t16AD#1 = BAnd(_t167F,_t16AB);
          if _t16AD then goto ASSIGN16B3 else goto JOIN16AF
        ASSIGN16B3:  preds = [COND175C]
          real _t16B2#3 = 0.1e-8;
          real _t16B4#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t16B2);
          tensor[2] _t16BA#1 = <tensor[2]>[_t1569,_t1569];
          real _t16DA#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t16BA,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t16DC#1 = GT<real>(_t16B4,_t16DA);
          tensor[2] _t16E2#1 = <tensor[2]>[_t16B2,_t16B2];
          tensor[2] _t1702#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t16E2,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1704#1 = TensorIndex<tensor[2],[0]>(_t1702);
          bool _t1708#1 = GT<real>(_t1704,_t1530);
          real _t1730#1 = TensorIndex<tensor[2],[1]>(_t1702);
          bool _t1734#1 = GT<real>(_t1730,_t1530);
          bool _t1736#1 = BAnd(_t1708,_t1734);
          bool _t1738#1 = BAnd(_t16DC,_t1736);
          if _t1738 then goto ASSIGN1758 else goto JOIN173A
        ASSIGN1758:  preds = [COND1759]
          int face1756#1 = 1;
          goto JOIN173A
        JOIN173A:  preds = [ASSIGN1758,COND1759]
          int face1757#1 = phi(face1756,face1661)
          real time1754#1 = phi(_t167B,time1660)
          goto JOIN16AF
        JOIN16AF:  preds = [JOIN173A,COND175C]
          int face175B#2 = phi(face1757,face1661)
          real time175A#3 = phi(time1754,time1660)
          real _t1775#9 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],T16[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1)) * (T10_{i1}) / ( Σ(i8=0..1)(i9=0..1)<((ϵ_{ii8,ii9} * Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii8} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * T15_{i10}))>(i10=0..1) * T10_{i9}))>(i8=0..1)(i9=0..1))))>(i0=0..1)(i1=0..1)> (_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D);
          bool _t1779#4 = GTE<real>(_t1775,_t1583);
          bool _t1795#1 = GT<real>(time175A,_t1775);
          real _t179F#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D);
          bool _t17A3#4 = GTE<real>(_t179F,_t15AD);
          bool _t17A5#1 = BAnd(_t1795,_t17A3);
          bool _t17A7#1 = BAnd(_t1779,_t17A5);
          if _t17A7 then goto ASSIGN17AD else goto JOIN17A9
        ASSIGN17AD:  preds = [COND1856]
          real _t17AC#3 = 0.1e-8;
          real _t17AE#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t17AC);
          tensor[2] _t17B4#1 = <tensor[2]>[_t1569,_t1569];
          real _t17D4#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t17B4,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t17D6#1 = GT<real>(_t17AE,_t17D4);
          tensor[2] _t17DC#1 = <tensor[2]>[_t17AC,_t17AC];
          tensor[2] _t17FC#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t17DC,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t17FE#1 = TensorIndex<tensor[2],[0]>(_t17FC);
          bool _t1802#1 = GT<real>(_t17FE,_t1530);
          real _t182A#1 = TensorIndex<tensor[2],[1]>(_t17FC);
          bool _t182E#1 = GT<real>(_t182A,_t1530);
          bool _t1830#1 = BAnd(_t1802,_t182E);
          bool _t1832#1 = BAnd(_t17D6,_t1830);
          if _t1832 then goto ASSIGN1852 else goto JOIN1834
        ASSIGN1852:  preds = [COND1853]
          int face1850#1 = 2;
          goto JOIN1834
        JOIN1834:  preds = [ASSIGN1852,COND1853]
          int face1851#1 = phi(face1850,face175B)
          real time184E#1 = phi(_t1775,time175A)
          goto JOIN17A9
        JOIN17A9:  preds = [JOIN1834,COND1856]
          int face1855#2 = phi(face1851,face175B)
          real time1854#1 = phi(time184E,time175A)
          bool _t1859#1 = NEQ<int>(face1855,face1567);
          if _t1859 then goto ASSIGN2B18 else goto ASSIGN2B17
        ASSIGN2B18:  preds = [COND186F]
          real _t185E#1 = Max<real>(time1854,_t156B);
          real _t1860#1 = IntToReal(face1855);
          tensor[2] _t1862#1 = <tensor[2]>[_t185E,_t1860];
          goto JOIN185B
        JOIN185B:  preds = [ASSIGN1863,ASSIGN2B17]
          tensor[2] _t1865#1 = phi(_t1862,_t186B)
          real newTime1870#2 = TensorIndex<tensor[2],[0]>(_t1865);
          bool _t1874#1 = GTE<real>(newTime1870,_t156B);
          if _t1874 then goto COND19F5 else goto JOIN1876
        COND19F5:  preds = [COND22C2]
          if _t15B3 then goto ASSIGN194C else goto JOIN1948
        ASSIGN194C:  preds = [COND19F5]
          real _t194B#3 = 0.1e-8;
          real _t194D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t194B);
          tensor[2] _t1953#1 = <tensor[2]>[_t1569,_t1569];
          real _t1973#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1953,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1975#1 = GT<real>(_t194D,_t1973);
          tensor[2] _t197B#1 = <tensor[2]>[_t194B,_t194B];
          tensor[2] _t199B#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t197B,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t199D#1 = TensorIndex<tensor[2],[0]>(_t199B);
          bool _t19A1#1 = GT<real>(_t199D,_t1530);
          real _t19C9#1 = TensorIndex<tensor[2],[1]>(_t199B);
          bool _t19CD#1 = GT<real>(_t19C9,_t1530);
          bool _t19CF#1 = BAnd(_t19A1,_t19CD);
          bool _t19D1#1 = BAnd(_t1975,_t19CF);
          if _t19D1 then goto ASSIGN19F1 else goto JOIN19D3
        ASSIGN19F1:  preds = [COND19F2]
          int face19EF#1 = 0;
          goto JOIN19D3
        JOIN19D3:  preds = [ASSIGN19F1,COND19F2]
          int face19F0#1 = phi(face19EF,face1567)
          real time19ED#1 = phi(_t1581,time1565)
          goto JOIN1948
        JOIN1948:  preds = [JOIN19D3,COND19F5]
          int face19F4#2 = phi(face19F0,face1567)
          real time19F3#3 = phi(time19ED,time1565)
          bool _t1A2E#1 = GT<real>(time19F3,_t167B);
          bool _t1A3E#1 = BAnd(_t1A2E,_t16A9);
          bool _t1A40#1 = BAnd(_t167F,_t1A3E);
          if _t1A40 then goto ASSIGN1A46 else goto JOIN1A42
        ASSIGN1A46:  preds = [COND1AEF]
          real _t1A45#3 = 0.1e-8;
          real _t1A47#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1A45);
          tensor[2] _t1A4D#1 = <tensor[2]>[_t1569,_t1569];
          real _t1A6D#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1A4D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1A6F#1 = GT<real>(_t1A47,_t1A6D);
          tensor[2] _t1A75#1 = <tensor[2]>[_t1A45,_t1A45];
          tensor[2] _t1A95#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1A75,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1A97#1 = TensorIndex<tensor[2],[0]>(_t1A95);
          bool _t1A9B#1 = GT<real>(_t1A97,_t1530);
          real _t1AC3#1 = TensorIndex<tensor[2],[1]>(_t1A95);
          bool _t1AC7#1 = GT<real>(_t1AC3,_t1530);
          bool _t1AC9#1 = BAnd(_t1A9B,_t1AC7);
          bool _t1ACB#1 = BAnd(_t1A6F,_t1AC9);
          if _t1ACB then goto ASSIGN1AEB else goto JOIN1ACD
        ASSIGN1AEB:  preds = [COND1AEC]
          int face1AE9#1 = 1;
          goto JOIN1ACD
        JOIN1ACD:  preds = [ASSIGN1AEB,COND1AEC]
          int face1AEA#1 = phi(face1AE9,face19F4)
          real time1AE7#1 = phi(_t167B,time19F3)
          goto JOIN1A42
        JOIN1A42:  preds = [JOIN1ACD,COND1AEF]
          int face1AEE#2 = phi(face1AEA,face19F4)
          real time1AED#3 = phi(time1AE7,time19F3)
          bool _t1B28#1 = GT<real>(time1AED,_t1775);
          bool _t1B38#1 = BAnd(_t1B28,_t17A3);
          bool _t1B3A#1 = BAnd(_t1779,_t1B38);
          if _t1B3A then goto ASSIGN1B40 else goto JOIN1B3C
        ASSIGN1B40:  preds = [COND1BE9]
          real _t1B3F#3 = 0.1e-8;
          real _t1B41#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1B3F);
          tensor[2] _t1B47#1 = <tensor[2]>[_t1569,_t1569];
          real _t1B67#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1B47,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1B69#1 = GT<real>(_t1B41,_t1B67);
          tensor[2] _t1B6F#1 = <tensor[2]>[_t1B3F,_t1B3F];
          tensor[2] _t1B8F#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1B6F,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1B91#1 = TensorIndex<tensor[2],[0]>(_t1B8F);
          bool _t1B95#1 = GT<real>(_t1B91,_t1530);
          real _t1BBD#1 = TensorIndex<tensor[2],[1]>(_t1B8F);
          bool _t1BC1#1 = GT<real>(_t1BBD,_t1530);
          bool _t1BC3#1 = BAnd(_t1B95,_t1BC1);
          bool _t1BC5#1 = BAnd(_t1B69,_t1BC3);
          if _t1BC5 then goto ASSIGN1BE5 else goto JOIN1BC7
        ASSIGN1BE5:  preds = [COND1BE6]
          int face1BE3#1 = 2;
          goto JOIN1BC7
        JOIN1BC7:  preds = [ASSIGN1BE5,COND1BE6]
          int face1BE4#1 = phi(face1BE3,face1AEE)
          real time1BE1#1 = phi(_t1775,time1AED)
          goto JOIN1B3C
        JOIN1B3C:  preds = [JOIN1BC7,COND1BE9]
          int face1BE8#2 = phi(face1BE4,face1AEE)
          real time1BE7#1 = phi(time1BE1,time1AED)
          bool _t1BEC#1 = NEQ<int>(face1BE8,face1567);
          if _t1BEC then goto ASSIGN2B3D else goto ASSIGN2B3C
        ASSIGN2B3D:  preds = [COND1C02]
          real _t1BF1#1 = Max<real>(time1BE7,_t156B);
          real _t1BF3#1 = IntToReal(face1BE8);
          tensor[2] _t1BF5#1 = <tensor[2]>[_t1BF1,_t1BF3];
          goto JOIN1BEE
        JOIN1BEE:  preds = [ASSIGN1BF6,ASSIGN2B3C]
          tensor[2] _t1BF8#1 = phi(_t1BF5,_t1BFE)
          real _t1C03#1 = TensorIndex<tensor[2],[0]>(_t1BF8);
          tensor[2] _t1C07#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],INT5,FEM(msh)6,FEM(msh)7,T8[2],T9[],INT10,FEM(msh)11,FEM(msh)12,T13[2],T14[2])<(Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * (T4_{i2}) - (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T3))))>(i2=0..1) + (T9 * Σ(i8=0..1)<(((Σ(i13=0..1)<((ϵ_{ii13,ii0} * Σ(i15=0..1)<((ϵ_{ii15,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i15}⊛Basis()dx_{i13},T3)))>(i15=0..1)))>(i13=0..1)) / ( Σ(i11=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{'0'},T3) * Σ(i12=0..1)<((ϵ_{ii11,ii12} * Probe(femV(noFunc, 0, 1, 1)_{i12}⊛Basis()dx_{'1'},T3)))>(i12=0..1)))>(i11=0..1)) * T14_{i8}))>(i8=0..1)))>_{2} (_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1C03,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          if _t15B3 then goto ASSIGN1C9C else goto JOIN1C98
        ASSIGN1C9C:  preds = [COND1D45]
          real _t1C9B#3 = 0.1e-8;
          real _t1C9D#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1C9B);
          tensor[2] _t1CA3#1 = <tensor[2]>[_t1569,_t1569];
          real _t1CC3#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1CA3,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1CC5#1 = GT<real>(_t1C9D,_t1CC3);
          tensor[2] _t1CCB#1 = <tensor[2]>[_t1C9B,_t1C9B];
          tensor[2] _t1CEB#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1CCB,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1CED#1 = TensorIndex<tensor[2],[0]>(_t1CEB);
          bool _t1CF1#1 = GT<real>(_t1CED,_t1530);
          real _t1D19#1 = TensorIndex<tensor[2],[1]>(_t1CEB);
          bool _t1D1D#1 = GT<real>(_t1D19,_t1530);
          bool _t1D1F#1 = BAnd(_t1CF1,_t1D1D);
          bool _t1D21#1 = BAnd(_t1CC5,_t1D1F);
          if _t1D21 then goto ASSIGN1D41 else goto JOIN1D23
        ASSIGN1D41:  preds = [COND1D42]
          int face1D3F#1 = 0;
          goto JOIN1D23
        JOIN1D23:  preds = [ASSIGN1D41,COND1D42]
          int face1D40#1 = phi(face1D3F,face1567)
          real time1D3D#1 = phi(_t1581,time1565)
          goto JOIN1C98
        JOIN1C98:  preds = [JOIN1D23,COND1D45]
          int face1D44#2 = phi(face1D40,face1567)
          real time1D43#3 = phi(time1D3D,time1565)
          bool _t1D7E#1 = GT<real>(time1D43,_t167B);
          bool _t1D8E#1 = BAnd(_t1D7E,_t16A9);
          bool _t1D90#1 = BAnd(_t167F,_t1D8E);
          if _t1D90 then goto ASSIGN1D96 else goto JOIN1D92
        ASSIGN1D96:  preds = [COND1E3F]
          real _t1D95#3 = 0.1e-8;
          real _t1D97#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1D95);
          tensor[2] _t1D9D#1 = <tensor[2]>[_t1569,_t1569];
          real _t1DBD#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1D9D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1DBF#1 = GT<real>(_t1D97,_t1DBD);
          tensor[2] _t1DC5#1 = <tensor[2]>[_t1D95,_t1D95];
          tensor[2] _t1DE5#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1DC5,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1DE7#1 = TensorIndex<tensor[2],[0]>(_t1DE5);
          bool _t1DEB#1 = GT<real>(_t1DE7,_t1530);
          real _t1E13#1 = TensorIndex<tensor[2],[1]>(_t1DE5);
          bool _t1E17#1 = GT<real>(_t1E13,_t1530);
          bool _t1E19#1 = BAnd(_t1DEB,_t1E17);
          bool _t1E1B#1 = BAnd(_t1DBF,_t1E19);
          if _t1E1B then goto ASSIGN1E3B else goto JOIN1E1D
        ASSIGN1E3B:  preds = [COND1E3C]
          int face1E39#1 = 1;
          goto JOIN1E1D
        JOIN1E1D:  preds = [ASSIGN1E3B,COND1E3C]
          int face1E3A#1 = phi(face1E39,face1D44)
          real time1E37#1 = phi(_t167B,time1D43)
          goto JOIN1D92
        JOIN1D92:  preds = [JOIN1E1D,COND1E3F]
          int face1E3E#2 = phi(face1E3A,face1D44)
          real time1E3D#3 = phi(time1E37,time1D43)
          bool _t1E78#1 = GT<real>(time1E3D,_t1775);
          bool _t1E88#1 = BAnd(_t1E78,_t17A3);
          bool _t1E8A#1 = BAnd(_t1779,_t1E88);
          if _t1E8A then goto ASSIGN1E90 else goto JOIN1E8C
        ASSIGN1E90:  preds = [COND1F39]
          real _t1E8F#3 = 0.1e-8;
          real _t1E91#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1E8F);
          tensor[2] _t1E97#1 = <tensor[2]>[_t1569,_t1569];
          real _t1EB7#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1E97,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t1EB9#1 = GT<real>(_t1E91,_t1EB7);
          tensor[2] _t1EBF#1 = <tensor[2]>[_t1E8F,_t1E8F];
          tensor[2] _t1EDF#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t1EBF,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t1EE1#1 = TensorIndex<tensor[2],[0]>(_t1EDF);
          bool _t1EE5#1 = GT<real>(_t1EE1,_t1530);
          real _t1F0D#1 = TensorIndex<tensor[2],[1]>(_t1EDF);
          bool _t1F11#1 = GT<real>(_t1F0D,_t1530);
          bool _t1F13#1 = BAnd(_t1EE5,_t1F11);
          bool _t1F15#1 = BAnd(_t1EB9,_t1F13);
          if _t1F15 then goto ASSIGN1F35 else goto JOIN1F17
        ASSIGN1F35:  preds = [COND1F36]
          int face1F33#1 = 2;
          goto JOIN1F17
        JOIN1F17:  preds = [ASSIGN1F35,COND1F36]
          int face1F34#1 = phi(face1F33,face1E3E)
          real time1F31#1 = phi(_t1775,time1E3D)
          goto JOIN1E8C
        JOIN1E8C:  preds = [JOIN1F17,COND1F39]
          int face1F38#2 = phi(face1F34,face1E3E)
          real time1F37#1 = phi(time1F31,time1E3D)
          bool _t1F3C#1 = NEQ<int>(face1F38,face1567);
          if _t1F3C then goto ASSIGN2B63 else goto ASSIGN2B62
        ASSIGN2B63:  preds = [COND1F52]
          real _t1F41#1 = Max<real>(time1F37,_t156B);
          real _t1F43#1 = IntToReal(face1F38);
          tensor[2] _t1F45#1 = <tensor[2]>[_t1F41,_t1F43];
          goto JOIN1F3E
        JOIN1F3E:  preds = [ASSIGN1F46,ASSIGN2B62]
          tensor[2] _t1F48#1 = phi(_t1F45,_t1F4E)
          real _t1F53#1 = TensorIndex<tensor[2],[0]>(_t1F48);
          tensor[2] _t1F57#1 = λ(T0[2],T1[],T2[2])<(T0_{i0} + (T1 * T2_{i0}))>_{2} (rayStartProj149E,_t1F53,dposProj14A1);
          if _t15B3 then goto ASSIGN1FEC else goto JOIN1FE8
        ASSIGN1FEC:  preds = [COND2095]
          real _t1FEB#3 = 0.1e-8;
          real _t1FED#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t1FEB);
          tensor[2] _t1FF3#1 = <tensor[2]>[_t1569,_t1569];
          real _t2013#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t1FF3,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t2015#1 = GT<real>(_t1FED,_t2013);
          tensor[2] _t201B#1 = <tensor[2]>[_t1FEB,_t1FEB];
          tensor[2] _t203B#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t201B,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t1575,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t203D#1 = TensorIndex<tensor[2],[0]>(_t203B);
          bool _t2041#1 = GT<real>(_t203D,_t1530);
          real _t2069#1 = TensorIndex<tensor[2],[1]>(_t203B);
          bool _t206D#1 = GT<real>(_t2069,_t1530);
          bool _t206F#1 = BAnd(_t2041,_t206D);
          bool _t2071#1 = BAnd(_t2015,_t206F);
          if _t2071 then goto ASSIGN2091 else goto JOIN2073
        ASSIGN2091:  preds = [COND2092]
          int face208F#1 = 0;
          goto JOIN2073
        JOIN2073:  preds = [ASSIGN2091,COND2092]
          int face2090#1 = phi(face208F,face1567)
          real time208D#1 = phi(_t1581,time1565)
          goto JOIN1FE8
        JOIN1FE8:  preds = [JOIN2073,COND2095]
          int face2094#2 = phi(face2090,face1567)
          real time2093#3 = phi(time208D,time1565)
          bool _t20CE#1 = GT<real>(time2093,_t167B);
          bool _t20DE#1 = BAnd(_t20CE,_t16A9);
          bool _t20E0#1 = BAnd(_t167F,_t20DE);
          if _t20E0 then goto ASSIGN20E6 else goto JOIN20E2
        ASSIGN20E6:  preds = [COND218F]
          real _t20E5#3 = 0.1e-8;
          real _t20E7#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t20E5);
          tensor[2] _t20ED#1 = <tensor[2]>[_t1569,_t1569];
          real _t210D#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t20ED,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t210F#1 = GT<real>(_t20E7,_t210D);
          tensor[2] _t2115#1 = <tensor[2]>[_t20E5,_t20E5];
          tensor[2] _t2135#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t2115,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t166F,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t2137#1 = TensorIndex<tensor[2],[0]>(_t2135);
          bool _t213B#1 = GT<real>(_t2137,_t1530);
          real _t2163#1 = TensorIndex<tensor[2],[1]>(_t2135);
          bool _t2167#1 = GT<real>(_t2163,_t1530);
          bool _t2169#1 = BAnd(_t213B,_t2167);
          bool _t216B#1 = BAnd(_t210F,_t2169);
          if _t216B then goto ASSIGN218B else goto JOIN216D
        ASSIGN218B:  preds = [COND218C]
          int face2189#1 = 1;
          goto JOIN216D
        JOIN216D:  preds = [ASSIGN218B,COND218C]
          int face218A#1 = phi(face2189,face2094)
          real time2187#1 = phi(_t167B,time2093)
          goto JOIN20E2
        JOIN20E2:  preds = [JOIN216D,COND218F]
          int face218E#2 = phi(face218A,face2094)
          real time218D#3 = phi(time2187,time2093)
          bool _t21C8#1 = GT<real>(time218D,_t1775);
          bool _t21D8#1 = BAnd(_t21C8,_t17A3);
          bool _t21DA#1 = BAnd(_t1779,_t21D8);
          if _t21DA then goto ASSIGN21E0 else goto JOIN21DC
        ASSIGN21E0:  preds = [COND2289]
          real _t21DF#3 = 0.1e-8;
          real _t21E1#1 = λ(T0[],T1[])<(T0 + T1)> (_t1569,_t21DF);
          tensor[2] _t21E7#1 = <tensor[2]>[_t1569,_t1569];
          real _t2207#1 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<Σ(i0=0..1)<((T0_{i0} * (Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{i7},T4)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i5}⊛Basis()dx_{'0'},T4) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'1'},T4)))>(i6=0..1)))>(i5=0..1)) * (T5_{i2}) - (Probe(femV(noFunc, 1, 2, 2)_{i2}⊛Basis(),T4))))>(i2=0..1) + (Σ(i7=0..1)(i8=0..1)<((ϵ_{ii7,ii8} * (T10_{i7}) - (Σ(i10=0..1)<(((Σ(i15=0..1)<((ϵ_{ii15,ii7} * Σ(i17=0..1)<((ϵ_{ii17,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i17}⊛Basis()dx_{i15},T4)))>(i17=0..1)))>(i15=0..1)) / ( Σ(i13=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i13}⊛Basis()dx_{'0'},T4) * Σ(i14=0..1)<((ϵ_{ii13,ii14} * Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'1'},T4)))>(i14=0..1)))>(i13=0..1)) * (T5_{i10}) - (Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis(),T4))))>(i10=0..1)) * (T20_{i8}) / ( Σ(i15=0..1)(i16=0..1)<((ϵ_{ii15,ii16} * Σ(i17=0..1)<(((Σ(i22=0..1)<((ϵ_{ii22,ii15} * Σ(i24=0..1)<((ϵ_{ii24,ii17} * Probe(femV(noFunc, 1, 2, 2)_{i24}⊛Basis()dx_{i22},T4)))>(i24=0..1)))>(i22=0..1)) / ( Σ(i20=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i20}⊛Basis()dx_{'0'},T4) * Σ(i21=0..1)<((ϵ_{ii20,ii21} * Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'1'},T4)))>(i21=0..1)))>(i20=0..1)) * T25_{i17}))>(i17=0..1) * T20_{i16}))>(i15=0..1)(i16=0..1))))>(i7=0..1)(i8=0..1) * Σ(i22=0..1)<(((Σ(i27=0..1)<((ϵ_{ii27,ii0} * Σ(i29=0..1)<((ϵ_{ii29,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i29}⊛Basis()dx_{i27},T4)))>(i29=0..1)))>(i27=0..1)) / ( Σ(i25=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{'0'},T4) * Σ(i26=0..1)<((ϵ_{ii25,ii26} * Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'1'},T4)))>(i26=0..1)))>(i25=0..1)) * T25_{i22}))>(i22=0..1)))))>(i0=0..1)> (_t21E7,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          bool _t2209#1 = GT<real>(_t21E1,_t2207);
          tensor[2] _t220F#1 = <tensor[2]>[_t21DF,_t21DF];
          tensor[2] _t222F#2 = λ(T0[2],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],INT6,FEM(msh)7,FEM(msh)8,T9[2],T10[2],INT11,FEM(msh)12,FEM(msh)13,T14[2],T15[2],INT16,FEM(msh)17,FEM(msh)18,T19[2],T20[2],INT21,FEM(msh)22,FEM(msh)23,T24[2],T25[2],T26[2],INT27,FEM(msh)28,FEM(msh)29,T30[2],T31[2])<(T0_{i0} + Σ(i3=0..1)<(((Σ(i8=0..1)<((ϵ_{ii8,ii0} * Σ(i10=0..1)<((ϵ_{ii10,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{i8},T4)))>(i10=0..1)))>(i8=0..1)) / ( Σ(i6=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i6}⊛Basis()dx_{'0'},T4) * Σ(i7=0..1)<((ϵ_{ii6,ii7} * Probe(femV(noFunc, 1, 2, 2)_{i7}⊛Basis()dx_{'1'},T4)))>(i7=0..1)))>(i6=0..1)) * (T5_{i3}) - (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T4))))>(i3=0..1) + (Σ(i8=0..1)<(((T10_{i8}) - (Σ(i11=0..1)<(((Σ(i16=0..1)<((ϵ_{ii16,ii8} * Σ(i18=0..1)<((ϵ_{ii18,ii11} * Probe(femV(noFunc, 1, 2, 2)_{i18}⊛Basis()dx_{i16},T4)))>(i18=0..1)))>(i16=0..1)) / ( Σ(i14=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{'0'},T4) * Σ(i15=0..1)<((ϵ_{ii14,ii15} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{'1'},T4)))>(i15=0..1)))>(i14=0..1)) * (T5_{i11}) - (Probe(femV(noFunc, 1, 2, 2)_{i11}⊛Basis(),T4))))>(i11=0..1)) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * (T20_{i9}) / ( Σ(i16=0..1)(i17=0..1)<((ϵ_{ii16,ii17} * Σ(i18=0..1)<(((Σ(i23=0..1)<((ϵ_{ii23,ii16} * Σ(i25=0..1)<((ϵ_{ii25,ii18} * Probe(femV(noFunc, 1, 2, 2)_{i25}⊛Basis()dx_{i23},T4)))>(i25=0..1)))>(i23=0..1)) / ( Σ(i21=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i21}⊛Basis()dx_{'0'},T4) * Σ(i22=0..1)<((ϵ_{ii21,ii22} * Probe(femV(noFunc, 1, 2, 2)_{i22}⊛Basis()dx_{'1'},T4)))>(i22=0..1)))>(i21=0..1)) * T25_{i18}))>(i18=0..1) * T20_{i17}))>(i16=0..1)(i17=0..1))))>(i9=0..1)))>(i8=0..1) * Σ(i23=0..1)<(((Σ(i28=0..1)<((ϵ_{ii28,ii0} * Σ(i30=0..1)<((ϵ_{ii30,ii23} * Probe(femV(noFunc, 1, 2, 2)_{i30}⊛Basis()dx_{i28},T4)))>(i30=0..1)))>(i28=0..1)) / ( Σ(i26=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i26}⊛Basis()dx_{'0'},T4) * Σ(i27=0..1)<((ϵ_{ii26,ii27} * Probe(femV(noFunc, 1, 2, 2)_{i27}⊛Basis()dx_{'1'},T4)))>(i27=0..1)))>(i26=0..1)) * T25_{i23}))>(i23=0..1)))>_{2} (_t220F,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t1667,_t14F6,_t14F8,_t14F8,_t1534,rayStartProj149E,_t14F6,_t14F8,_t14F8,_t1534,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1,_t156D,_t14F6,_t14F8,_t14F8,_t1534,dposProj14A1);
          real _t2231#1 = TensorIndex<tensor[2],[0]>(_t222F);
          bool _t2235#1 = GT<real>(_t2231,_t1530);
          real _t225D#1 = TensorIndex<tensor[2],[1]>(_t222F);
          bool _t2261#1 = GT<real>(_t225D,_t1530);
          bool _t2263#1 = BAnd(_t2235,_t2261);
          bool _t2265#1 = BAnd(_t2209,_t2263);
          if _t2265 then goto ASSIGN2285 else goto JOIN2267
        ASSIGN2285:  preds = [COND2286]
          int face2283#1 = 2;
          goto JOIN2267
        JOIN2267:  preds = [ASSIGN2285,COND2286]
          int face2284#1 = phi(face2283,face218E)
          real time2281#1 = phi(_t1775,time218D)
          goto JOIN21DC
        JOIN21DC:  preds = [JOIN2267,COND2289]
          int face2288#2 = phi(face2284,face218E)
          real time2287#1 = phi(time2281,time218D)
          bool _t228C#1 = NEQ<int>(face2288,face1567);
          if _t228C then goto ASSIGN2B87 else goto ASSIGN2B86
        ASSIGN2B87:  preds = [COND22A2]
          real _t2291#1 = Max<real>(time2287,_t156B);
          real _t2293#1 = IntToReal(face2288);
          tensor[2] _t2295#1 = <tensor[2]>[_t2291,_t2293];
          goto JOIN228E
        JOIN228E:  preds = [ASSIGN2296,ASSIGN2B86]
          tensor[2] _t2298#1 = phi(_t2295,_t229E)
          real _t22A3#1 = TensorIndex<tensor[2],[1]>(_t2298);
          int _t22A5#1 = FloorToInt(_t22A3);
          femData:MeshPos p22A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t14F8,_t14F6,_t1C07,_t1F57,_t22A5);
          real newRayTime22A9#3 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (camNearVsp149B,camFarVsp149C,newTime1870);
          real[] normalizedTimes22AB#1 = Append<real>(normalizedTimes14EC,newRayTime22A9);
          femData:MeshPos[] poses22AE#1 = Append<femData:MeshPos>(poses14EB,p22A7);
          bool _t22B1#1 = GT<real>(startTime14EF,newRayTime22A9);
          if _t22B1 then goto JOIN22B3 else goto JOIN22B3
        JOIN22B3:  preds = [COND22BA,COND22BA]
          real startTime22B5#1 = phi(newRayTime22A9,startTime14EF)
          int currentCellInt22B8#1 = phi(cellIntersects14ED,currentCellInt14EE)
          int _t22BD#1 = 1;
          int cellIntersects22BF#1 = IAdd(cellIntersects14ED,_t22BD);
          goto JOIN1876
        JOIN1876:  preds = [ASSIGN22C1,COND22C2]
          real startTime22BC#1 = phi(startTime22B5,startTime14EF)
          int currentCellInt22BB#1 = phi(currentCellInt22B8,currentCellInt14EE)
          int cellIntersects22C0#1 = phi(cellIntersects22BF,cellIntersects14ED)
          real[] normalizedTimes22AC#1 = phi(normalizedTimes22AB,normalizedTimes14EC)
          femData:MeshPos[] poses22AF#1 = phi(poses22AE,poses14EB)
          goto JOIN14FE
        ASSIGN2B86:  preds = [COND22A2]
          tensor[2] _t229E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN228E
        ASSIGN2B62:  preds = [COND1F52]
          tensor[2] _t1F4E#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1F3E
        ASSIGN2B3C:  preds = [COND1C02]
          tensor[2] _t1BFE#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN1BEE
        ASSIGN2B17:  preds = [COND186F]
          tensor[2] _t186B#1 = <tensor[2]>[_t1571,_t1571];
          goto JOIN185B
        ASSIGN22C7:  preds = [FOREACH14F0]
          int _t22C6#1 = 0;
          bool _t22C8#1 = NEQ<int>(cellIntersects14ED,_t22C6);
          if _t22C8 then goto ASSIGN22CD else goto ASSIGN2313
        ASSIGN22CD:  preds = [COND232A]
          femData:MeshPos pos22CB#4 = Subscript<femData:MeshPos[]>(poses14EB,currentCellInt14EE);
          real rayN22CE#2 = Subscript<real[]>(normalizedTimes14EC,currentCellInt14EE);
          tensor[3] _t22D3#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig1499,rayN22CE,rayVec149A);
          tensor[3][2] _t22D5#1 = <tensor[3][2]>{rayOrig1499,_t22D3};
          tensor[3][] _t22D7#1 = MkDynamic<tensor[3],2>(_t22D5);
          tensor[3][] spaceInter22D9#1 = Concat<tensor[3]>(spaceInter14A6,_t22D7);
          tensor[2] _t22DC#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos22CB);
          tensor[2][1] _t22DE#1 = <tensor[2][1]>{_t22DC};
          tensor[2][] _t22E0#1 = MkDynamic<tensor[2],1>(_t22DE);
          femData:Mesh _t22E5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos22CB);
          int _t22E7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos22CB);
          femData:MeshCell currentCell22E9#2 = LoadFem<femData:MeshCell>(_t22E5,_t22E7);
          femData:MeshCell[1] _t22EC#1 = <femData:MeshCell[1]>{currentCell22E9};
          femData:MeshCell[] _t22EE#1 = MkDynamic<femData:MeshCell,1>(_t22EC);
          string _t22F3#1 = "In the interval:";
          tensor[2] _t22F5#1 = <tensor[2]>[camNearVsp149B,camFarVsp149C];
          string _t22F7#3 = "\n";
          Print<[string,tensor[2],string]>(_t22F3,_t22F5,_t22F7);
          string _t22FA#1 = "Possible times:";
          Print<[string,real[],string]>(_t22FA,normalizedTimes14EC,_t22F7);
          string _t22FF#1 = "cells:";
          femData:MeshCell[] accum2301#1 = <femData:MeshCell[]>{};
        FOREACH2305:  preds = [ASSIGN2302,NEXT230E]
          foreach (p2303 in poses14EB) on exit goto MASSIGN2AE7
            femData:MeshCell[] accum2304#2 = phi(accum2301,accum230C)
          femData:Mesh _t2306#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p2303);
          int _t2308#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p2303);
          femData:MeshCell _t230A#1 = LoadFem<femData:MeshCell>(_t2306,_t2308);
          femData:MeshCell[] accum230C#1 = Append<femData:MeshCell>(accum2304,_t230A);
          goto FOREACH2305
        MASSIGN2AE7:  preds = [FOREACH2305]
          Print<[string,femData:MeshCell[],string]>(_t22FF,accum2304,_t22F7);
          goto JOIN22CA
        JOIN22CA:  preds = [MASSIGN2AE7,*STABILIZE231C]
          femData:MeshPos pos22CC#1 = phi(pos22CB)
          femData:MeshCell currentCell22EA#1 = phi(currentCell22E9)
          real rayN22CF#1 = phi(rayN22CE)
          femData:MeshCell[] cellInter22F1#1 = phi(_t22EE)
          tensor[2][] refSpaceInter22E3#1 = phi(_t22E0)
          tensor[3][] spaceInter22DA#1 = phi(spaceInter22D9)
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.spaceInter = spaceInter22DA;
          self.refSpaceInter = refSpaceInter22E3;
          self.cellInter = cellInter22F1;
          self.currentCellInt = currentCellInt14EE;
          self.rayN = rayN22CF;
          self.currentCell = currentCell22EA;
          self.pos = pos22CC;
          self.startsInside = startsInside22C4;
          active
        ASSIGN2313:  preds = [COND232A]
          string _t2312#1 = "No intersection!\n";
          Print<[string]>(_t2312);
          string _t2315#1 = "Ui: ";
          string _t2317#1 = " Vi:";
          string _t2319#1 = "\n";
          Print<[string,int,string,int,string]>(_t2315,ui14AF,_t2317,vi14B0,_t2319);
          self.poses = poses14EB;
          self.normalizedTimes = normalizedTimes14EC;
          self.cellIntersects = cellIntersects14ED;
          self.currentCellInt = currentCellInt14EE;
          self.startsInside = startsInside22C4;
          stabilize
          goto JOIN22CA
        ASSIGN14D6:  preds = [COND14D7]
          bool _t14D5#1 = NEQ<int>(vi14B0,debugV148E);
          goto JOIN14D1
    end start
    method update
        ENTRY2AC0:  preds = []
          tensor[3] rayOrig233D#4 = self.rayOrig;
          tensor[3] rayVec233E#6 = self.rayVec;
          real camFarVsp2340#6 = self.camFarVsp;
          femData:MeshPos[] poses2346#2 = self.poses;
          real[] normalizedTimes2347#4 = self.normalizedTimes;
          int cellIntersects2348#1 = self.cellIntersects;
          tensor[2][] rayCellInter2349#2 = self.rayCellInter;
          tensor[3][] spaceInter234A#3 = self.spaceInter;
          tensor[2][] refSpaceInter234B#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter234C#4 = self.cellInter;
          real rayN234E#7 = self.rayN;
          femData:MeshCell currentCell234F#2 = self.currentCell;
          int steps2350#1 = self.steps;
          femData:MeshPos pos2351#8 = self.pos;
          bool startsInside2352#2 = self.startsInside;
          int ui2353#1 = self.ui;
          int vi2354#1 = self.vi;
          string _t2370#1 = "Ui: ";
          string _t2372#1 = " vi: ";
          string _t2374#21 = "\n";
          Print<[string,int,string,int,string]>(_t2370,ui2353,_t2372,vi2354,_t2374);
          string _t2377#1 = "The current ref pos is:";
          tensor[2] _t2379#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2351);
          Print<[string,tensor[2],string]>(_t2377,_t2379,_t2374);
          string _t237E#1 = "Current cell:";
          femData:Mesh _t2380#8 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2351);
          int _t2382#3 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2351);
          femData:MeshCell _t2384#3 = LoadFem<femData:MeshCell>(_t2380,_t2382);
          Print<[string,femData:MeshCell,string]>(_t237E,_t2384,_t2374);
          string _t2389#1 = "The current time is:";
          Print<[string,real,string]>(_t2389,rayN234E,_t2374);
          string _t238E#2 = "The current world pos is:";
          tensor[2] _t239A#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t2382,_t2380,_t2380,_t2379);
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          tensor[3] stupid23A5#2 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,rayN234E,rayVec233E);
          string _t23A7#2 = "The current world pos should be:";
          real _t23A9#1 = TensorIndex<tensor[3],[0]>(stupid23A5);
          real _t23AB#1 = TensorIndex<tensor[3],[1]>(stupid23A5);
          tensor[2] _t23AD#3 = <tensor[2]>[_t23A9,_t23AB];
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          real _t23B2#10 = 0.1e1;
          real _t23B4#3 = 0.1e-8;
          real _t23B6#1 = λ(T0[],T1[])<(T0 + T1)> (_t23B2,_t23B4);
          tensor[2] _t23BC#1 = <tensor[2]>[_t23B2,_t23B2];
          real _t23C0#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t23BC,_t2379);
          bool _t23C2#1 = GT<real>(_t23B6,_t23C0);
          tensor[2] _t23C8#1 = <tensor[2]>[_t23B4,_t23B4];
          tensor[2] _t23CC#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t23C8,_t2379);
          real _t23CE#1 = TensorIndex<tensor[2],[0]>(_t23CC);
          real _t23D0#4 = -0.e0;
          bool _t23D2#1 = GT<real>(_t23CE,_t23D0);
          real _t23DE#1 = TensorIndex<tensor[2],[1]>(_t23CC);
          bool _t23E2#1 = GT<real>(_t23DE,_t23D0);
          bool _t23E4#1 = BAnd(_t23D2,_t23E2);
          bool _t23E6#1 = BAnd(_t23C2,_t23E4);
          bool _t23E8#1 = BNot(_t23E6);
          if _t23E8 then goto ASSIGN23EC else goto JOIN23EA
        ASSIGN23EC:  preds = [COND23F5]
          string _t23EB#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t23EB);
          bool _t23EE#1 = BNot(startsInside2352);
          if _t23EE then goto ASSIGN23F2 else goto JOIN23F0
        ASSIGN23F2:  preds = [COND23F4]
          string _t23F1#1 = "Not because of an inside\n";
          Print<[string]>(_t23F1);
          goto JOIN23F0
        JOIN23F0:  preds = [MASSIGN23F3,COND23F4]
          goto JOIN23EA
        JOIN23EA:  preds = [JOIN23F0,COND23F5]
          Print<[string,tensor[2],string]>(_t238E,_t239A,_t2374);
          Print<[string,tensor[2],string]>(_t23A7,_t23AD,_t2374);
          real err2432#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2])<Sqrt(Σ(i0=0..1)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..1))> (_t2382,_t2380,_t2380,_t2379,_t23AD);
          real _t2434#1 = 0.1e-4;
          bool _t2436#1 = GT<real>(err2432,_t2434);
          if _t2436 then goto ASSIGN243A else goto ASSIGN243F
        ASSIGN243A:  preds = [COND2441]
          string _t2439#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t2439,err2432,_t2374);
          goto JOIN2438
        JOIN2438:  preds = [MASSIGN2B9B,MASSIGN2440]
          int _t2442#13 = 1;
          int steps2444#4 = IAdd(steps2350,_t2442);
          string _t2446#1 = "Orig:";
          string _t2448#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t2446,rayOrig233D,_t2448,rayVec233E,_t2374);
          tensor[3] newDpos244F#2 = λ(T0[],T1[],T2[3])<((T0) - (T1) * T2_{i0})>_{3} (camFarVsp2340,rayN234E,rayVec233E);
          tensor[2] _t2451#8 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos2351);
          femData:Mesh _t2459#28 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2384);
          int _t2469#14 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2384);
          tensor[2] _t2473#14 = <tensor[2]>[_t23D0,_t23D0];
          real _t2479#1 = TensorIndex<tensor[3],[0]>(newDpos244F);
          real _t247B#1 = TensorIndex<tensor[3],[1]>(newDpos244F);
          tensor[2] _t247D#14 = <tensor[2]>[_t2479,_t247B];
          int _t2481#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos2351);
          real time2484#6 = +inf;
          int face2486#9 = -1;
          real faceTime2488#6 = -inf;
          real _t248C#14 = 0.e0;
          tensor[2] _t248E#10 = <tensor[2]>[_t23B2,_t248C];
          real _t2492#6 = -0.1e1;
          tensor[2] _t2496#7 = <tensor[2]>[_t2492,_t23B2];
          real _t24A2#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t248E,_t2451,_t2496,_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          real _t24A4#6 = -0.1e-15;
          bool _t24A6#1 = GTE<real>(_t24A2,_t24A4);
          bool _t24C2#1 = GT<real>(time2484,_t24A2);
          real _t24CC#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          real _t24CE#6 = 0.1e-20;
          bool _t24D0#1 = GTE<real>(_t24CC,_t24CE);
          bool _t24D2#1 = BAnd(_t24C2,_t24D0);
          bool _t24D4#1 = BAnd(_t24A6,_t24D2);
          if _t24D4 then goto ASSIGN24D8 else goto JOIN24D6
        ASSIGN24D8:  preds = [COND2519]
          int _t24D7#2 = 0;
          bool _t24D9#1 = NEQ<int>(_t2481,_t24D7);
          if _t24D9 then goto JOIN24DB else goto JOIN24DB
        JOIN24DB:  preds = [COND2515,COND2515]
          real faceTime2513#1 = phi(faceTime2488,_t24A2)
          int face24F8#1 = phi(_t24D7,face2486)
          real time24F5#1 = phi(_t24A2,time2484)
          goto JOIN24D6
        JOIN24D6:  preds = [JOIN24DB,COND2519]
          real faceTime2518#2 = phi(faceTime2513,faceTime2488)
          int face2517#2 = phi(face24F8,face2486)
          real time2516#3 = phi(time24F5,time2484)
          tensor[2] _t251E#6 = <tensor[2]>[_t248C,_t248C];
          tensor[2] _t2526#7 = <tensor[2]>[_t248C,_t23B2];
          real _t2532#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t2526,_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2536#1 = GTE<real>(_t2532,_t24A4);
          bool _t2552#1 = GT<real>(time2516,_t2532);
          real _t255C#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2560#1 = GTE<real>(_t255C,_t24CE);
          bool _t2562#1 = BAnd(_t2552,_t2560);
          bool _t2564#1 = BAnd(_t2536,_t2562);
          if _t2564 then goto ASSIGN2BAC else goto JOIN2566
        ASSIGN2BAC:  preds = [COND25A9]
          bool _t2569#1 = NEQ<int>(_t2481,_t2442);
          if _t2569 then goto JOIN256B else goto JOIN256B
        JOIN256B:  preds = [COND25A5,COND25A5]
          real faceTime25A3#1 = phi(faceTime2518,_t2532)
          int face2588#1 = phi(_t2442,face2517)
          real time2585#1 = phi(_t2532,time2516)
          goto JOIN2566
        JOIN2566:  preds = [JOIN256B,COND25A9]
          real faceTime25A8#2 = phi(faceTime25A3,faceTime2518)
          int face25A7#2 = phi(face2588,face2517)
          real time25A6#3 = phi(time2585,time2516)
          real _t25C2#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii2} * Σ(i11=0..1)<((ϵ_{ii11,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i11}⊛Basis()dx_{i9},T6)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T6) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T6)))>(i8=0..1)))>(i7=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t248E,_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t25C6#1 = GTE<real>(_t25C2,_t24A4);
          bool _t25E2#1 = GT<real>(time25A6,_t25C2);
          real _t25EC#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i7=0..1)<((ϵ_{ii7,ii0} * Σ(i9=0..1)<((ϵ_{ii9,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{i7},T3)))>(i9=0..1)))>(i7=0..1)) / ( Σ(i5=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i5}⊛Basis()dx_{'0'},T3) * Σ(i6=0..1)<((ϵ_{ii5,ii6} * Probe(femV(noFunc, 0, 1, 1)_{i6}⊛Basis()dx_{'1'},T3)))>(i6=0..1)))>(i5=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t25F0#1 = GTE<real>(_t25EC,_t24CE);
          bool _t25F2#1 = BAnd(_t25E2,_t25F0);
          bool _t25F4#1 = BAnd(_t25C6,_t25F2);
          if _t25F4 then goto ASSIGN25F8 else goto JOIN25F6
        ASSIGN25F8:  preds = [COND2639]
          int _t25F7#2 = 2;
          bool _t25F9#1 = NEQ<int>(_t2481,_t25F7);
          if _t25F9 then goto JOIN25FB else goto JOIN25FB
        JOIN25FB:  preds = [COND2635,COND2635]
          real faceTime2633#1 = phi(faceTime25A8,_t25C2)
          int face2618#1 = phi(_t25F7,face25A7)
          real time2615#1 = phi(_t25C2,time25A6)
          goto JOIN25F6
        JOIN25F6:  preds = [JOIN25FB,COND2639]
          real faceTime2638#2 = phi(faceTime2633,faceTime25A8)
          int face2637#2 = phi(face2618,face25A7)
          real time2636#1 = phi(time2615,time25A6)
          bool _t263C#1 = NEQ<int>(face2637,face2486);
          if _t263C then goto ASSIGN2BB7 else goto ASSIGN2BB5
        ASSIGN2BB7:  preds = [COND265F]
          real _t2641#1 = Max<real>(time2636,_t248C);
          real _t2643#1 = IntToReal(face2637);
          tensor[2] _t2645#1 = <tensor[2]>[_t2641,_t2643];
          goto JOIN263E
        JOIN263E:  preds = [ASSIGN2646,JOIN264E]
          tensor[2] _t2648#1 = phi(_t2645,_t2656)
          real nextTime2660#3 = TensorIndex<tensor[2],[0]>(_t2648);
          real _t2662#1 = λ(T0[],T1[],T2[])<(T0 + (T2 * (T1) - (T0)))> (rayN234E,camFarVsp2340,nextTime2660);
          real _t2664#1 = Min<real>(camFarVsp2340,_t2662);
          real rayNp2666#6 = Max<real>(rayN234E,_t2664);
          string _t2668#1 = "Next time:";
          Print<[string,real,string]>(_t2668,nextTime2660,_t2374);
          bool _t266F#1 = GTE<real>(nextTime2660,_t248C);
          if _t266F then goto ASSIGN2673 else goto JOIN2671
        ASSIGN2673:  preds = [COND2A09]
          tensor[2] _t2672#1 = <tensor[2]>[rayN234E,rayNp2666];
          tensor[2][] rayCellInter2674#3 = Append<tensor[2]>(rayCellInter2349,_t2672);
          int _t267C#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos2351);
          real _t26FF#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t248E,_t2451,_t2496,_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          bool _t2703#1 = GTE<real>(_t26FF,_t24A4);
          bool _t271F#1 = GT<real>(time2484,_t26FF);
          real _t2729#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2496);
          bool _t272D#1 = GTE<real>(_t2729,_t24CE);
          bool _t272F#1 = BAnd(_t271F,_t272D);
          bool _t2731#1 = BAnd(_t2703,_t272F);
          if _t2731 then goto ASSIGN2735 else goto JOIN2733
        ASSIGN2735:  preds = [COND2776]
          int _t2734#2 = 0;
          bool _t2736#1 = NEQ<int>(_t2481,_t2734);
          if _t2736 then goto JOIN2738 else goto JOIN2738
        JOIN2738:  preds = [COND2772,COND2772]
          real faceTime2770#1 = phi(faceTime2488,_t26FF)
          int face2755#1 = phi(_t2734,face2486)
          real time2752#1 = phi(_t26FF,time2484)
          goto JOIN2733
        JOIN2733:  preds = [JOIN2738,COND2776]
          real faceTime2775#2 = phi(faceTime2770,faceTime2488)
          int face2774#2 = phi(face2755,face2486)
          real time2773#3 = phi(time2752,time2484)
          real _t278F#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t2526,_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t2793#1 = GTE<real>(_t278F,_t24A4);
          bool _t27AF#1 = GT<real>(time2773,_t278F);
          real _t27B9#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t2526);
          bool _t27BD#1 = GTE<real>(_t27B9,_t24CE);
          bool _t27BF#1 = BAnd(_t27AF,_t27BD);
          bool _t27C1#1 = BAnd(_t2793,_t27BF);
          if _t27C1 then goto ASSIGN2BCC else goto JOIN27C3
        ASSIGN2BCC:  preds = [COND2806]
          bool _t27C6#1 = NEQ<int>(_t2481,_t2442);
          if _t27C6 then goto JOIN27C8 else goto JOIN27C8
        JOIN27C8:  preds = [COND2802,COND2802]
          real faceTime2800#1 = phi(faceTime2775,_t278F)
          int face27E5#1 = phi(_t2442,face2774)
          real time27E2#1 = phi(_t278F,time2773)
          goto JOIN27C3
        JOIN27C3:  preds = [JOIN27C8,COND2806]
          real faceTime2805#2 = phi(faceTime2800,faceTime2775)
          int face2804#2 = phi(face27E5,face2774)
          real time2803#3 = phi(time27E2,time2773)
          real _t281F#4 = λ(T0[2],T1[2],T2[2],INT3,FEM(msh)4,FEM(msh)5,T6[2],T7[2],T8[2])<Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * (T0_{i0}) - (T1_{i0}) * (T2_{i1}) / ( Σ(i2=0..1)(i3=0..1)<((ϵ_{ii2,ii3} * Σ(i4=0..1)<(((Σ(i11=0..1)<((ϵ_{ii11,ii2} * Σ(i13=0..1)<((ϵ_{ii13,ii4} * Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i11},T6)))>(i13=0..1)))>(i11=0..1)) / ( Σ(i9=0..1)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'0'},T6) * Σ(i10=0..1)<((ϵ_{ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'1'},T6)))>(i10=0..1)))>(i9=0..1)) * T7_{i4}))>(i4=0..1) * T2_{i3}))>(i2=0..1)(i3=0..1))))>(i0=0..1)(i1=0..1)> (_t251E,_t2451,_t248E,_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t2823#1 = GTE<real>(_t281F,_t24A4);
          bool _t283F#1 = GT<real>(time2803,_t281F);
          real _t2849#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[2],T5[2])<Abs(Σ(i0=0..1)(i1=0..1)<((ϵ_{ii0,ii1} * Σ(i2=0..1)<(((Σ(i9=0..1)<((ϵ_{ii9,ii0} * Σ(i11=0..1)<((ϵ_{ii11,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis()dx_{i9},T3)))>(i11=0..1)))>(i9=0..1)) / ( Σ(i7=0..1)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..1)<((ϵ_{ii7,ii8} * Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3)))>(i8=0..1)))>(i7=0..1)) * T4_{i2}))>(i2=0..1) * T5_{i1}))>(i0=0..1)(i1=0..1))> (_t2469,_t2459,_t2459,_t2473,_t247D,_t248E);
          bool _t284D#1 = GTE<real>(_t2849,_t24CE);
          bool _t284F#1 = BAnd(_t283F,_t284D);
          bool _t2851#1 = BAnd(_t2823,_t284F);
          if _t2851 then goto ASSIGN2855 else goto JOIN2853
        ASSIGN2855:  preds = [COND2896]
          int _t2854#2 = 2;
          bool _t2856#1 = NEQ<int>(_t2481,_t2854);
          if _t2856 then goto JOIN2858 else goto JOIN2858
        JOIN2858:  preds = [COND2892,COND2892]
          real faceTime2890#1 = phi(faceTime2805,_t281F)
          int face2875#1 = phi(_t2854,face2804)
          real time2872#1 = phi(_t281F,time2803)
          goto JOIN2853
        JOIN2853:  preds = [JOIN2858,COND2896]
          real faceTime2895#2 = phi(faceTime2890,faceTime2805)
          int face2894#2 = phi(face2875,face2804)
          real time2893#1 = phi(time2872,time2803)
          bool _t2899#1 = NEQ<int>(face2894,face2486);
          if _t2899 then goto ASSIGN2BD9 else goto ASSIGN2BD6
        ASSIGN2BD9:  preds = [COND28BC]
          real _t289E#1 = Max<real>(time2893,_t248C);
          real _t28A0#1 = IntToReal(face2894);
          tensor[2] _t28A2#1 = <tensor[2]>[_t289E,_t28A0];
          goto JOIN289B
        JOIN289B:  preds = [ASSIGN28A3,JOIN28AB]
          tensor[2] _t28A5#3 = phi(_t28A2,_t28B3)
          real _t28C0#1 = TensorIndex<tensor[2],[1]>(_t28A5);
          int _t28C2#6 = FloorToInt(_t28C0);
          int[2] _t28C4#2 = nextCell4132A (_t28C2,_t267C,_t2380);
          int _t28C6#4 = 0;
          int _t28C8#2 = Subscript<int[2]>(_t28C4,_t28C6);
          bool _t28CA#1 = NEQ<int>(face2486,_t28C8);
          if _t28CA then goto ASSIGN2BDE else goto ASSIGN29A5
        ASSIGN2BDE:  preds = [COND29AE]
          tensor[2][3] _t28E9#1 = <tensor[2][3]>{_t248E,_t251E,_t251E};
          int _t28F3#3 = Subscript<int[2]>(_t28C4,_t2442);
          tensor[2] _t28F5#1 = Subscript<tensor[2][3]>(_t28E9,_t28F3);
          tensor[2][3] _t2909#1 = <tensor[2][3]>{_t2496,_t2526,_t248E};
          tensor[2] _t2915#1 = Subscript<tensor[2][3]>(_t2909,_t28F3);
          real _t2917#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t291B#2 = λ(T0[],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],T6[2])<((T0 * Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * T5_{i3}))>(i3=0..1)) + T6_{i0})>_{2} (_t2917,_t2469,_t2459,_t2459,_t2473,_t247D,_t2451);
          real _t291D#1 = TensorIndex<tensor[2],[0]>(_t291B);
          real _t2925#1 = TensorIndex<tensor[2],[1]>(_t291B);
          real[2] _t2927#1 = <real[2]>{_t291D,_t2925};
          int[3] _t292F#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t2935#1 = Subscript<int[3]>(_t292F,_t28C2);
          real _t2937#1 = Subscript<real[2]>(_t2927,_t2935);
          real[2] _t293D#1 = <real[2]>{_t23B2,_t248C};
          real[2] _t2943#1 = <real[2]>{_t248C,_t248C};
          real[2] _t2949#1 = <real[2]>{_t248C,_t248C};
          real[2][3] _t294B#1 = <real[2][3]>{_t293D,_t2943,_t2949};
          real[2] _t2951#1 = Subscript<real[2][3]>(_t294B,_t28C2);
          int[3] _t2959#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t295F#1 = Subscript<int[3]>(_t2959,_t28C2);
          real _t2961#1 = Subscript<real[2]>(_t2951,_t295F);
          real[2] _t2969#1 = <real[2]>{_t2492,_t23B2};
          real[2] _t296F#1 = <real[2]>{_t248C,_t23B2};
          real[2] _t2975#1 = <real[2]>{_t23B2,_t248C};
          real[2][3] _t2977#1 = <real[2][3]>{_t2969,_t296F,_t2975};
          real[2] _t297D#1 = Subscript<real[2][3]>(_t2977,_t28C2);
          int[3] _t2985#1 = <int[3]>{_t2442,_t2442,_t28C6};
          int _t298B#1 = Subscript<int[3]>(_t2985,_t28C2);
          real _t298D#1 = Subscript<real[2]>(_t297D,_t298B);
          tensor[2] _t2993#1 = λ(T0[2],T1[],T2[],T3[],T4[2])<(T0_{i0} + (((T1) - (T2)) / ( T3) * T4_{i0}))>_{2} (_t28F5,_t2937,_t2961,_t298D,_t2915);
          femData:MeshPos _t299F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2380,_t28C8,_t2993,_t28F3);
          goto JOIN28CC
        JOIN28CC:  preds = [ASSIGN2BF2,ASSIGN2BDD]
          femData:MeshPos posp29A2#5 = phi(_t299F,_t29AA)
          bool _t29AF#1 = GTE<real>(rayNp2666,camFarVsp2340);
          if _t29AF then goto ASSIGN29B3 else goto JOIN29B1
        ASSIGN29B3:  preds = [COND29CC]
          string _t29B2#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t29B2,cellInter234C,_t2374);
          tensor[3] _t29B9#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,camFarVsp2340,rayVec233E);
          tensor[3][] spaceInter29BB#1 = Append<tensor[3]>(spaceInter234A,_t29B9);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29BB;
          self.rayN = rayNp2666;
          self.steps = steps2444;
          stabilize
          goto JOIN29B1
        JOIN29B1:  preds = [*STABILIZE29BE,COND29CC]
          tensor[3][] spaceInter29BC#1 = phi(spaceInter234A)
          tensor[3] _t29D0#1 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (rayOrig233D,rayNp2666,rayVec233E);
          tensor[3][] spaceInter29D2#2 = Append<tensor[3]>(spaceInter29BC,_t29D0);
          tensor[2] _t29D4#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp29A2);
          tensor[2][] refSpaceInter29D6#2 = Append<tensor[2]>(refSpaceInter234B,_t29D4);
          bool _t29D9#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp29A2);
          if _t29D9 then goto ASSIGN29E0 else goto ASSIGN2A03
        ASSIGN29E0:  preds = [COND2A05]
          string _t29DF#1 = "Next cell:";
          femData:Mesh _t29E1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp29A2);
          int _t29E3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp29A2);
          femData:MeshCell _t29E5#3 = LoadFem<femData:MeshCell>(_t29E1,_t29E3);
          Print<[string,femData:MeshCell,string]>(_t29DF,_t29E5,_t2374);
          femData:MeshCell[] cellInter29F1#1 = Append<femData:MeshCell>(cellInter234C,_t29E5);
          self.rayCellInter = rayCellInter2674;
          self.spaceInter = spaceInter29D2;
          self.refSpaceInter = refSpaceInter29D6;
          self.cellInter = cellInter29F1;
          self.rayN = rayNp2666;
          self.currentCell = _t29E5;
          self.steps = steps2444;
          self.pos = posp29A2;
          active
          goto JOIN29DB
        JOIN29DB:  preds = [*ACTIVE29F4,MASSIGN2A04]
          femData:MeshPos pos29DD#1 = phi(pos2351)
          femData:MeshCell currentCell29EF#1 = phi(currentCell234F)
          femData:MeshCell[] cellInter29F2#1 = phi(cellInter234C)
          goto JOIN2671
        JOIN2671:  preds = [JOIN29DB,COND2A09]
          femData:MeshPos pos2A08#6 = phi(pos29DD,pos2351)
          femData:MeshCell currentCell2A07#1 = phi(currentCell29EF,currentCell234F)
          real rayN2678#3 = phi(rayNp2666,rayN234E)
          femData:MeshCell[] cellInter2A06#3 = phi(cellInter29F2,cellInter234C)
          tensor[2][] refSpaceInter29D7#2 = phi(refSpaceInter29D6,refSpaceInter234B)
          tensor[3][] spaceInter29CD#2 = phi(spaceInter29D2,spaceInter234A)
          tensor[2][] rayCellInter2675#3 = phi(rayCellInter2674,rayCellInter2349)
          int _t2A0E#1 = 0;
          int _t2A12#1 = ISub(cellIntersects2348,_t2442);
          int[] _t2A14#1 = Range(_t2A0E,_t2A12);
        FOREACH2A19:  preds = [ASSIGN2A15,NEXT2A47]
          foreach (i2A16 in _t2A14) on exit goto ASSIGN2BFF
            real estimate2A18#4 = phi(camFarVsp2340,estimate2A45)
            int newIdx2A17#7 = phi(face2486,newIdx2A44)
          real t2A1A#3 = Subscript<real[]>(normalizedTimes2347,i2A16);
          femData:MeshPos posp2A1C#2 = Subscript<femData:MeshPos[]>(poses2346,i2A16);
          bool _t2A1E#1 = GTE<real>(t2A1A,rayN2678);
          if _t2A1E then goto ASSIGN2A22 else goto JOIN2A20
        ASSIGN2A22:  preds = [COND2A46]
          bool _t2A21#1 = GTE<real>(estimate2A18,t2A1A);
          if _t2A21 then goto ASSIGN2A25 else goto JOIN2A23
        ASSIGN2A25:  preds = [COND2A43]
          femData:Mesh _t2A24#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp2A1C);
          int _t2A26#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp2A1C);
          femData:MeshCell _t2A28#1 = LoadFem<femData:MeshCell>(_t2A24,_t2A26);
          femData:Mesh _t2A2A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          int _t2A2C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:MeshCell _t2A2E#1 = LoadFem<femData:MeshCell>(_t2A2A,_t2A2C);
          int _t2A31#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A28);
          int _t2A33#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t2A2E);
          bool _t2A35#1 = NEQ<int>(_t2A31,_t2A33);
          if _t2A35 then goto JOIN2A39 else goto JOIN2A39
        JOIN2A39:  preds = [COND2A40,COND2A40]
          real estimate2A3B#1 = phi(t2A1A,estimate2A18)
          int newIdx2A3E#1 = phi(i2A16,newIdx2A17)
          goto JOIN2A23
        JOIN2A23:  preds = [JOIN2A39,COND2A43]
          real estimate2A42#1 = phi(estimate2A3B,estimate2A18)
          int newIdx2A41#1 = phi(newIdx2A3E,newIdx2A17)
          goto JOIN2A20
        JOIN2A20:  preds = [JOIN2A23,COND2A46]
          real estimate2A45#1 = phi(estimate2A42,estimate2A18)
          int newIdx2A44#1 = phi(newIdx2A41,newIdx2A17)
          goto FOREACH2A19
        ASSIGN2BFF:  preds = [FOREACH2A19]
          bool _t2A4A#1 = GT<int>(newIdx2A17,face2486);
          if _t2A4A then goto ASSIGN2A4E else goto ASSIGN2A9F
        ASSIGN2A4E:  preds = [COND2ABE]
          string _t2A4D#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t2A4D);
          if startsInside2352 then goto ASSIGN2A52 else goto JOIN2A50
        ASSIGN2A52:  preds = [COND2A54]
          string _t2A51#1 = "because of an inside\n";
          Print<[string]>(_t2A51);
          goto JOIN2A50
        JOIN2A50:  preds = [MASSIGN2A53,COND2A54]
          string _t2A55#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t2A55,rayVec233E,_t2374);
          string _t2A5A#1 = "world pos was:";
          tensor[2] _t2A5D#2 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos2A08);
          int _t2A5F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A08);
          femData:Mesh _t2A61#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A08);
          tensor[2] _t2A66#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{2} (_t2A5F,_t2A61,_t2A61,_t2A5D);
          Print<[string,tensor[2],string]>(_t2A5A,_t2A66,_t2374);
          string _t2A6F#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t2A6F,_t2A5D,_t2374);
          string _t2A76#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes2347,_t2A76,newIdx2A17,_t2374);
          string _t2A7B#1 = "Original time was:";
          Print<[string,real,string]>(_t2A7B,rayN2678,_t2374);
          femData:MeshPos pos2A80#3 = Subscript<femData:MeshPos[]>(poses2346,newIdx2A17);
          femData:Mesh _t2A83#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos2A80);
          int _t2A85#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos2A80);
          femData:MeshCell currentCell2A87#2 = LoadFem<femData:MeshCell>(_t2A83,_t2A85);
          femData:MeshCell[] cellInter2A8A#1 = Append<femData:MeshCell>(cellInter2A06,currentCell2A87);
          real rayN2A8D#1 = Subscript<real[]>(normalizedTimes2347,newIdx2A17);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A8A;
          self.rayN = rayN2A8D;
          self.currentCell = currentCell2A87;
          self.steps = steps2444;
          self.pos = pos2A80;
          active
          goto JOIN2A4C
        JOIN2A4C:  preds = [*ACTIVE2A90,*STABILIZE2AB0]
          unreachable
        ASSIGN2A9F:  preds = [COND2ABE]
          string _t2A9E#1 = "Enter times:";
          Print<[string,real[],string]>(_t2A9E,normalizedTimes2347,_t2374);
          string _t2AA3#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t2AA3,rayCellInter2675,_t2374);
          string _t2AA8#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t2AA8,cellInter2A06,_t2374);
          string _t2AAD#1 = "End\n";
          Print<[string]>(_t2AAD);
          self.rayCellInter = rayCellInter2675;
          self.spaceInter = spaceInter29CD;
          self.refSpaceInter = refSpaceInter29D7;
          self.cellInter = cellInter2A06;
          self.rayN = rayN2678;
          self.currentCell = currentCell2A07;
          self.steps = steps2444;
          self.pos = pos2A08;
          stabilize
          goto JOIN2A4C
        ASSIGN2A03:  preds = [COND2A05]
          string _t2A02#1 = "Invalid\n";
          Print<[string]>(_t2A02);
          goto JOIN29DB
        ASSIGN29A5:  preds = [COND29AE]
          real _t29A4#1 = TensorIndex<tensor[2],[0]>(_t28A5);
          tensor[2] _t29A8#1 = λ(T0[],INT1,FEM(msh)2,FEM(msh)3,T4[2],T5[2],T6[2])<((T0 * Σ(i3=0..1)<(((Σ(i10=0..1)<((ϵ_{ii10,ii0} * Σ(i12=0..1)<((ϵ_{ii12,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i12}⊛Basis()dx_{i10},T4)))>(i12=0..1)))>(i10=0..1)) / ( Σ(i8=0..1)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..1)<((ϵ_{ii8,ii9} * Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4)))>(i9=0..1)))>(i8=0..1)) * T5_{i3}))>(i3=0..1)) + T6_{i0})>_{2} (_t29A4,_t2469,_t2459,_t2459,_t2473,_t247D,_t2451);
          femData:MeshPos _t29AA#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2380,_t29A8);
          goto JOIN28CC
        ASSIGN2BD6:  preds = [COND28BC]
          bool _t28A9#1 = EQ<real>(faceTime2488,faceTime2895);
          if _t28A9 then goto ASSIGN2BD8 else goto ASSIGN2BD7
        ASSIGN2BD8:  preds = [COND28BB]
          tensor[2] _t28B0#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN28AB
        JOIN28AB:  preds = [ASSIGN2BD8,ASSIGN28B8]
          tensor[2] _t28B3#1 = phi(_t28B0,_t28B7)
          goto JOIN289B
        ASSIGN2BD7:  preds = [COND28BB]
          real _t28B5#1 = IntToReal(_t2481);
          tensor[2] _t28B7#1 = <tensor[2]>[faceTime2895,_t28B5];
          goto JOIN28AB
        ASSIGN2BB5:  preds = [COND265F]
          bool _t264C#1 = EQ<real>(faceTime2488,faceTime2638);
          if _t264C then goto ASSIGN2BB6 else goto ASSIGN2659
        ASSIGN2BB6:  preds = [COND265E]
          tensor[2] _t2653#1 = <tensor[2]>[_t2492,_t2492];
          goto JOIN264E
        JOIN264E:  preds = [ASSIGN2BB6,ASSIGN265B]
          tensor[2] _t2656#1 = phi(_t2653,_t265A)
          goto JOIN263E
        ASSIGN2659:  preds = [COND265E]
          real _t2658#1 = IntToReal(_t2481);
          tensor[2] _t265A#1 = <tensor[2]>[faceTime2638,_t2658];
          goto JOIN264E
        ASSIGN243F:  preds = [COND2441]
          string _t243E#1 = "Did not move off ray!\n";
          Print<[string]>(_t243E);
          goto JOIN2438
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY139F:  preds = []
      int iresU1385#1 = globals.iresU123C;
      int iresV1384#1 = globals.iresV123D;
      int _t1388#2 = 0;
      int _t138A#2 = 1;
      int _t138C#1 = ISub(iresU1385,_t138A);
      int[] _t138E#1 = Range(_t1388,_t138C);
    FOREACH1391:  preds = [ASSIGN138F,NEXT139E]
      foreach (vi1390 in _t138E) on exit goto RETURN13A0
      int _t1396#1 = ISub(iresV1384,_t138A);
      int[] _t1398#1 = Range(_t1388,_t1396);
    FOREACH139B:  preds = [ASSIGN2AC3,NEXT139D]
      foreach (ui139A in _t1398) on exit goto NEXT139E
      new ray(ui139A,vi1390);
      goto FOREACH139B
    NEXT139E:  preds = [FOREACH139B]
      goto FOREACH1391
    RETURN13A0:  preds = [FOREACH1391]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a2CA1 (a) = <no-default>
  input isoval2CA2 (isoval) = <default>
  input thick2CA3 (thick) = <default>
  input camEye2CA4 (camEye) = <default>
  input camAt2CA5 (camAt) = <default>
  input camUp2CA6 (camUp) = <default>
  input camFOV2CA7 (camFOV) = <default>
  input iresU2CA8 (iresU) = <default>
  input iresV2CA9 (iresV) = <default>
  input camNear2CAA (camNear) = <default>
  input camFar2CAB (camFar) = <default>
  input refStep2CAC (refStep) = <default>
  input rayStep2CAD (rayStep) = <default>
  input lightVsp2CAE (lightVsp) = <default>
  input phongKa2CAF (phongKa) = <default>
  input phongKd2CB0 (phongKd) = <default>
  input debug2CB1 (debug) = <default>
  input debugU2CB2 (debugU) = <default>
  input debugV2CB3 (debugV) = <default>
  input eps2CB4 (eps) = <default>
  global femData:MeshCell[] 0cell_a2CB5
  global real camNearVsp2CB6
  global real camFarVsp2CB7
  global tensor[3] camN2CB8
  global tensor[3] camU2CB9
  global tensor[3] camV2CBA
  global real camVmax2CBB
  global real camUmax2CBC
## functions
  function femData:MeshPos _msh_newtonInverse2F5F (tensor[2] pos2F60#5, int cellInt2F61#21, femData:Mesh mesh2F62#27) {
    ENTRY2F63:  preds = []
      real _t2F64#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn2F66#37 = <tensor[2]>[_t2F64,_t2F64];
      int _t2F68#1 = 0;
      int _t2F6A#1 = 16;
      int[] _t2F6C#1 = Range(_t2F68,_t2F6A);
    FOREACH2F6F:  preds = [ASSIGN2F6D,NEXT304C]
      foreach (itter2F6E in _t2F6C) on exit goto ASSIGN3051
        tensor[2] xn2F71#15 = phi(xn2F66,xn2F70)
      int[3] femIndicies2F7E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2F7F#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2F7E);
      tensor[3,2] dofs2F7D#1 = femDofs2F7F;
      tensor[2,3] basisResult2F80#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_102F72#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,dofs2F7D,basisResult2F80,xn2F66);
      tensor[2,2] op1_e3_l_112F73#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_102F72);
      tensor[3,2] dofs2F81#1 = femDofs2F7F;
      tensor[2,3] basisResult2F82#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_122F74#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2F81,basisResult2F82,xn2F66);
      tensor[3,2] dofs2F83#1 = femDofs2F7F;
      tensor[2,3] basisResult2F84#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_132F75#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2F83,basisResult2F84,xn2F66);
      tensor[2] op1_e3_l_142F76#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_132F75);
      tensor[2,2] op1_e3_l_152F77#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_112F73);
      real op1_e3_l_162F78#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_122F74,op1_e3_l_142F76);
      tensor[3,2] dofs2F85#1 = femDofs2F7F;
      tensor[3] basisResult2F86#1 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_172F79#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,dofs2F85,basisResult2F86,xn2F71);
      tensor[2,2] op1_e3_l_182F7A#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_152F77,op1_e3_l_162F78);
      tensor[2] op1_e3_l_192F7B#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_172F79);
      tensor[2] op1_e3_l_202F7C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_192F7B);
      tensor[2] xn2F70#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_202F7C);
      real _t2F9D#2 = 0.1e-7;
      real _t2F9F#1 = λ(T0[],T1[])<(T0 * T1)> (_t2F9D,_t2F9D);
      int[3] femIndicies2FAE#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2FAF#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2FAE);
      tensor[3,2] dofs2FAD#1 = femDofs2FAF;
      tensor[2,3] basisResult2FB0#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_182FA2#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,dofs2FAD,basisResult2FB0,xn2F66);
      tensor[2,2] op1_e3_l_192FA3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_182FA2);
      tensor[3,2] dofs2FB1#1 = femDofs2FAF;
      tensor[2,3] basisResult2FB2#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_202FA4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2FB1,basisResult2FB2,xn2F66);
      tensor[3,2] dofs2FB3#1 = femDofs2FAF;
      tensor[2,3] basisResult2FB4#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_212FA5#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2FB3,basisResult2FB4,xn2F66);
      tensor[2] op1_e3_l_222FA6#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_212FA5);
      tensor[2,2] op1_e3_l_232FA7#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_192FA3);
      real op1_e3_l_242FA8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_202FA4,op1_e3_l_222FA6);
      tensor[3,2] dofs2FB5#1 = femDofs2FAF;
      tensor[3] basisResult2FB6#1 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_252FA9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F71,dofs2FB5,basisResult2FB6,xn2F71);
      tensor[2,2] op1_e3_l_262FAA#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_232FA7,op1_e3_l_242FA8);
      tensor[2] op1_e3_l_272FAB#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_252FA9);
      tensor[2] op1_e3_l_382FAC#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_262FAA,op1_e3_l_272FAB);
      real _t2FA1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_382FAC,op1_e3_l_382FAC);
      bool _t2FCD#1 = GTE<real>(_t2F9F,_t2FA1);
      if _t2FCD then goto ASSIGN2FD1 else goto JOIN304B
    ASSIGN2FD1:  preds = [COND2FCF]
      real _t2FD0#3 = 0.1e1;
      real _t2FD2#3 = 0.1e-8;
      real _t2FD4#1 = λ(T0[],T1[])<(T0 + T1)> (_t2FD0,_t2FD2);
      tensor[2] _t2FD6#1 = <tensor[2]>[_t2FD0,_t2FD0];
      int[3] femIndicies2FE6#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2FE7#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2FE6);
      tensor[3,2] dofs2FE5#1 = femDofs2FE7;
      tensor[2,3] basisResult2FE8#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_112FD9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,dofs2FE5,basisResult2FE8,xn2F66);
      tensor[2,2] op1_e3_l_122FDA#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_112FD9);
      tensor[3,2] dofs2FE9#1 = femDofs2FE7;
      tensor[2,3] basisResult2FEA#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_132FDB#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2FE9,basisResult2FEA,xn2F66);
      tensor[3,2] dofs2FEB#1 = femDofs2FE7;
      tensor[2,3] basisResult2FEC#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_142FDC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs2FEB,basisResult2FEC,xn2F66);
      tensor[2] op1_e3_l_152FDD#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_142FDC);
      tensor[2,2] op1_e3_l_162FDE#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_122FDA);
      real op1_e3_l_172FDF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_132FDB,op1_e3_l_152FDD);
      tensor[3,2] dofs2FED#1 = femDofs2FE7;
      tensor[3] basisResult2FEE#1 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_182FE0#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,dofs2FED,basisResult2FEE,xn2F71);
      tensor[2,2] op1_e3_l_192FE1#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_162FDE,op1_e3_l_172FDF);
      tensor[2] op1_e3_l_202FE2#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_182FE0);
      tensor[2] op1_e3_l_212FE3#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_192FE1,op1_e3_l_202FE2);
      tensor[2] op1_e3_l_222FE4#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_212FE3);
      real _t2FD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t2FD6,op1_e3_l_222FE4);
      bool _t3006#1 = GT<real>(_t2FD4,_t2FD8);
      tensor[2] _t3008#1 = <tensor[2]>[_t2FD2,_t2FD2];
      int[3] femIndicies3018#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs3019#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies3018);
      tensor[3,2] dofs3017#1 = femDofs3019;
      tensor[2,3] basisResult301A#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_11300B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,dofs3017,basisResult301A,xn2F66);
      tensor[2,2] op1_e3_l_12300C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_11300B);
      tensor[3,2] dofs301B#1 = femDofs3019;
      tensor[2,3] basisResult301C#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_13300D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs301B,basisResult301C,xn2F66);
      tensor[3,2] dofs301D#1 = femDofs3019;
      tensor[2,3] basisResult301E#1 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2] probe_l_14300E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,dofs301D,basisResult301E,xn2F66);
      tensor[2] op1_e3_l_15300F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_14300E);
      tensor[2,2] op1_e3_l_163010#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_12300C);
      real op1_e3_l_173011#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_13300D,op1_e3_l_15300F);
      tensor[3,2] dofs301F#1 = femDofs3019;
      tensor[3] basisResult3020#1 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_183012#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,dofs301F,basisResult3020,xn2F71);
      tensor[2,2] op1_e3_l_193013#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_163010,op1_e3_l_173011);
      tensor[2] op1_e3_l_203014#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_183012);
      tensor[2] op1_e3_l_213015#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_193013,op1_e3_l_203014);
      tensor[2] op1_e3_l_223016#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_213015);
      tensor[2] _t300A#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3008,op1_e3_l_223016);
      real _t3038#1 = TensorIndex<tensor[2],[0]>(_t300A);
      real _t303A#2 = -0.e0;
      bool _t303C#1 = GT<real>(_t3038,_t303A);
      real _t303E#1 = TensorIndex<tensor[2],[1]>(_t300A);
      bool _t3040#1 = GT<real>(_t303E,_t303A);
      bool _t3042#1 = BAnd(_t303C,_t3040);
      bool _t3044#1 = BAnd(_t3006,_t3042);
      if _t3044 then goto ASSIGN3048 else goto ASSIGN304E
    ASSIGN3048:  preds = [COND3046]
      femData:MeshPos _t3047#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2F62,cellInt2F61,xn2F70,pos2F60);
      return _t3047
      goto JOIN304A
    JOIN304A:  preds = [*RETURN(_t3047)3049,*RETURN(_t304D)304F]
      goto JOIN304B
    JOIN304B:  preds = [*JOIN304A,COND2FCF]
      goto FOREACH2F6F
    ASSIGN304E:  preds = [COND3046]
      femData:MeshPos _t304D#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t304D
      goto JOIN304A
    ASSIGN3051:  preds = [FOREACH2F6F]
      femData:MeshPos _t3050#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t3050
}
  function int[2] nextCell43DB9 (int faceIdx3DBA#1, int cell3DBB#1, femData:Mesh mesh3DBC#1) {
    ENTRY3DBD:  preds = []
      int _t3DBE#1 = 6;
      int _t3DC0#1 = IMul(cell3DBB,_t3DBE);
      int _t3DC2#1 = 2;
      int _t3DC4#1 = IMul(faceIdx3DBA,_t3DC2);
      int _t3DC6#1 = IAdd(_t3DC0,_t3DC4);
      int[2] _t3DC8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3DBC,_t3DC6);
      return _t3DC8
}
## input initialization
  ENTRY2CBD:  preds = []
    real isoval2CBE#1 = 0.2e0;
    globals.isoval2CA2 = isoval2CBE;
    real thick2CC1#1 = 0.7e-1;
    globals.thick2CA3 = thick2CC1;
    real _t2CC4#2 = 0.3e1;
    real _t2CC6#1 = -0.3e1;
    tensor[3] camEye2CC8#1 = <tensor[3]>[_t2CC4,_t2CC6,_t2CC4];
    globals.camEye2CA4 = camEye2CC8;
    real _t2CCB#3 = 0.5e0;
    tensor[3] camAt2CCD#1 = <tensor[3]>[_t2CCB,_t2CCB,_t2CCB];
    globals.camAt2CA5 = camAt2CCD;
    real _t2CD0#2 = 0.e0;
    real _t2CD2#2 = 0.1e1;
    tensor[3] camUp2CD4#2 = <tensor[3]>[_t2CD0,_t2CD0,_t2CD2];
    globals.camUp2CA6 = camUp2CD4;
    real camFOV2CD7#1 = 0.137e2;
    globals.camFOV2CA7 = camFOV2CD7;
    int iresU2CDA#2 = 10;
    globals.iresU2CA8 = iresU2CDA;
    globals.iresV2CA9 = iresU2CDA;
    real camNear2CDE#1 = -0.2e1;
    globals.camNear2CAA = camNear2CDE;
    real camFar2CE1#1 = 0.5e1;
    globals.camFar2CAB = camFar2CE1;
    globals.refStep2CAC = _t2CD2;
    real rayStep2CE5#1 = 0.1e-1;
    globals.rayStep2CAD = rayStep2CE5;
    globals.lightVsp2CAE = camUp2CD4;
    real phongKa2CE9#1 = 0.1e0;
    globals.phongKa2CAF = phongKa2CE9;
    real phongKd2CEC#1 = 0.9e0;
    globals.phongKd2CB0 = phongKd2CEC;
    bool debug2CEF#1 = false;
    globals.debug2CB1 = debug2CEF;
    int debugU2CF2#1 = 8;
    globals.debugU2CB2 = debugU2CF2;
    int debugV2CF5#1 = 2;
    globals.debugV2CB3 = debugV2CF5;
    real eps2CF8#1 = 0.1e-7;
    globals.eps2CB4 = eps2CF8;
    return
## global-variable initialization
  ENTRY2CFC:  preds = []
    femData:Mesh a2CFD#2 = globals.a2CA1;
    tensor[3] camEye2CFF#7 = globals.camEye2CA4;
    tensor[3] camAt2D01#7 = globals.camAt2CA5;
    tensor[3] camUp2D03#2 = globals.camUp2CA6;
    real camFOV2D05#2 = globals.camFOV2CA7;
    int iresU2D07#1 = globals.iresU2CA8;
    int iresV2D09#1 = globals.iresV2CA9;
    real camNear2D0B#1 = globals.camNear2CAA;
    real camFar2D0D#1 = globals.camFar2CAB;
    int _t2D0F#1 = 0;
    int _t2D11#1 = 1;
    int _t2D13#1 = ExtractFemItem<int,NumCell(Mesh)>(a2CFD);
    int _t2D15#1 = ISub(_t2D13,_t2D11);
    int[] _t2D17#1 = Range(_t2D0F,_t2D15);
    femData:MeshCell[] _t2D19#1 = <femData:MeshCell[]>{};
  FOREACH2D1C:  preds = [ASSIGN2D1A,NEXT2D22]
    foreach (_t2D1B in _t2D17) on exit goto GASSIGN2D23
      femData:MeshCell[] _t2D20#2 = phi(_t2D19,_t2D1F)
    femData:MeshCell _t2D1D#1 = LoadFem<femData:MeshCell>(a2CFD,_t2D1B);
    femData:MeshCell[] _t2D1F#1 = Append<femData:MeshCell>(_t2D20,_t2D1D);
    goto FOREACH2D1C
  GASSIGN2D23:  preds = [FOREACH2D1C]
    globals.0cell_a2CB5 = _t2D20;
    tensor[3] op1_e3_l_32D25#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_52D26#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_32D25,op1_e3_l_32D25);
    real op1_e3_l_62D27#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_52D26);
    real camNearVsp2D24#1 = λ(T0[],T1[])<(T0 + T1)> (camNear2D0B,op1_e3_l_62D27);
    globals.camNearVsp2CB6 = camNearVsp2D24;
    tensor[3] op1_e3_l_32D2E#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_52D2F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_32D2E,op1_e3_l_32D2E);
    real op1_e3_l_62D30#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_52D2F);
    real camFarVsp2D2D#1 = λ(T0[],T1[])<(T0 + T1)> (camFar2D0D,op1_e3_l_62D30);
    globals.camFarVsp2CB7 = camFarVsp2D2D;
    tensor[3] op1_e3_l_42D37#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_62D38#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_42D37,op1_e3_l_42D37);
    real op1_e3_l_72D39#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_62D38);
    real op1_e3_l_92D3A#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_72D39);
    tensor[3] camN2D36#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_42D37,op1_e3_l_92D3A);
    globals.camN2CB8 = camN2D36;
    tensor[3] op1_e3_l_102D42#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_122D43#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_102D42,op1_e3_l_102D42);
    real op1_e3_l_132D44#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_122D43);
    tensor[3,3] op1_e3_l_152D45#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp2D03);
    real op1_e3_l_162D46#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_132D44);
    tensor[3] op1_e3_l_172D47#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_102D42,op1_e3_l_152D45);
    real op1_e3_l_342D48#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_172D47,op1_e3_l_172D47);
    real op1_e3_l_352D49#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_162D46,op1_e3_l_162D46,op1_e3_l_342D48);
    real op1_e3_l_362D4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_352D49);
    tensor[3] op1_e3_l_372D4B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_162D46,op1_e3_l_172D47);
    real op1_e3_l_382D4C#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_362D4A);
    tensor[3] camU2D41#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_372D4B,op1_e3_l_382D4C);
    globals.camU2CB9 = camU2D41;
    tensor[3] op1_e3_l_142D5B#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_162D5C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_142D5B,op1_e3_l_142D5B);
    real op1_e3_l_172D5D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_162D5C);
    tensor[3,3] op1_e3_l_232D5E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp2D03);
    tensor[3] op1_e3_l_262D5F#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_142D5B,op1_e3_l_232D5E);
    real op1_e3_l_282D60#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_172D5D);
    real op1_e3_l_302D61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_262D5F,op1_e3_l_262D5F);
    real op1_e3_l_312D62#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_282D60,op1_e3_l_282D60,op1_e3_l_302D61);
    real op1_e3_l_322D63#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_312D62);
    tensor[3,3] op1_e3_l_452D64#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_142D5B);
    tensor[3] op1_e3_l_472D65#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_262D5F,op1_e3_l_452D64);
    real op1_e3_l_482D66#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_322D63);
    tensor[3] op1_e3_l_502D67#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_282D60,op1_e3_l_472D65);
    tensor[3] camV2D5A#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_482D66,op1_e3_l_282D60,op1_e3_l_502D67);
    globals.camV2CBA = camV2D5A;
    real _t2D77#2 = 0.314159265358979323846264338327950288e1;
    real _t2D79#2 = 0.36e3;
    real op1_e3_l_52D7C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV2D05,_t2D77);
    real op1_e3_l_62D7D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D79,op1_e3_l_52D7C);
    tensor[3] op1_e3_l_72D7E#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_92D7F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_72D7E,op1_e3_l_72D7E);
    real op1_e3_l_102D80#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_62D7D);
    real op1_e3_l_112D81#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_92D7F);
    real camVmax2D7B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102D80,op1_e3_l_112D81);
    globals.camVmax2CBB = camVmax2D7B;
    real _t2D8A#1 = IntToReal(iresU2D07);
    real _t2D8C#1 = IntToReal(iresV2D09);
    real op1_e3_l_72D8F#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV2D05,_t2D77);
    real op1_e3_l_82D90#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D79,op1_e3_l_72D8F);
    tensor[3] op1_e3_l_92D91#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_112D92#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_92D91,op1_e3_l_92D91);
    real op1_e3_l_122D93#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_82D90);
    real op1_e3_l_132D94#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_112D92);
    real op1_e3_l_142D95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t2D8A,op1_e3_l_122D93,op1_e3_l_132D94);
    real camUmax2D8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D8C,op1_e3_l_142D95);
    globals.camUmax2CBC = camUmax2D8E;
    return
## strand
  strand ray (int ui2DA0#2, int vi2DA1#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY2DBD:  preds = []
        femData:Mesh a2DBE#1 = globals.a2CA1;
        femData:MeshCell[] 0cell_a2DC0#1 = globals.0cell_a2CB5;
        tensor[3] camEye2DC2#5 = globals.camEye2CA4;
        int iresU2DC4#1 = globals.iresU2CA8;
        int iresV2DC6#1 = globals.iresV2CA9;
        real camNearVsp2DC8#3 = globals.camNearVsp2CB6;
        real camFarVsp2DCA#3 = globals.camFarVsp2CB7;
        tensor[3] camN2DCC#4 = globals.camN2CB8;
        tensor[3] camU2DCE#5 = globals.camU2CB9;
        tensor[3] camV2DD0#5 = globals.camV2CBA;
        real camVmax2DD2#12 = globals.camVmax2CBB;
        real camUmax2DD4#12 = globals.camUmax2CBC;
        real _t2DD6#24 = -0.5e0;
        real _t2DD8#6 = IntToReal(ui2DA0);
        real _t2DDA#6 = IntToReal(iresU2DC4);
        real _t2DDC#12 = 0.5e0;
        real op1_e3_l_62DDF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_72DE0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_82DE1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DDF);
        real op1_e3_l_92DE2#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_102DE3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DE0,op1_e3_l_82DE1);
        real op1_e3_l_112DE4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_92DE2);
        real op1_e3_l_132DE5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DE3,op1_e3_l_112DE4);
        real rayU2DDE#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DE2,op1_e3_l_132DE5);
        real _t2DEE#6 = IntToReal(vi2DA1);
        real _t2DF0#6 = IntToReal(iresV2DC6);
        real op1_e3_l_62DF3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DF0,_t2DDC);
        real op1_e3_l_72DF4#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_82DF5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DF3);
        real op1_e3_l_92DF6#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_102DF7#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_82DF5);
        real op1_e3_l_112DF8#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_92DF6);
        real op1_e3_l_132DF9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DF7,op1_e3_l_112DF8);
        real rayV2DF2#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_132DF9);
        real op1_e3_l_142E03#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_152E04#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_162E05#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_142E03);
        real op1_e3_l_172E06#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_182E07#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_152E04,op1_e3_l_162E05);
        real op1_e3_l_192E08#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_172E06);
        real op1_e3_l_212E09#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_182E07,op1_e3_l_192E08);
        real op1_e3_l_222E0A#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_172E06,op1_e3_l_212E09);
        real op1_e3_l_232E0B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_242E0C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_252E0D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_232E0B);
        real op1_e3_l_262E0E#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_272E0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_242E0C,op1_e3_l_252E0D);
        real op1_e3_l_282E10#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_262E0E);
        real op1_e3_l_302E11#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_272E0F,op1_e3_l_282E10);
        real op1_e3_l_312E12#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_262E0E,op1_e3_l_302E11);
        tensor[3] op1_e3_l_322E13#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,op1_e3_l_222E0A);
        tensor[3] op1_e3_l_332E14#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_312E12);
        tensor[3] UV2E02#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_322E13,op1_e3_l_332E14);
        real op1_e3_l_152E29#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_162E2A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_172E2B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_152E29);
        real op1_e3_l_182E2C#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_192E2D#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_162E2A,op1_e3_l_172E2B);
        real op1_e3_l_202E2E#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_182E2C);
        real op1_e3_l_222E2F#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_192E2D,op1_e3_l_202E2E);
        real op1_e3_l_232E30#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_182E2C,op1_e3_l_222E2F);
        real op1_e3_l_242E31#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_252E32#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_262E33#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_242E31);
        real op1_e3_l_272E34#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_282E35#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_252E32,op1_e3_l_262E33);
        real op1_e3_l_292E36#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_272E34);
        real op1_e3_l_312E37#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_282E35,op1_e3_l_292E36);
        real op1_e3_l_322E38#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_272E34,op1_e3_l_312E37);
        tensor[3] op1_e3_l_332E39#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,op1_e3_l_232E30);
        tensor[3] op1_e3_l_342E3A#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_322E38);
        tensor[3] rayOrig2E28#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye2DC2,op1_e3_l_332E39,op1_e3_l_342E3A);
        real _t2E4E#4 = 0.e0;
        tensor[3] _t2E50#4 = <tensor[3]>[_t2E4E,_t2E4E,_t2E4E];
        tensor[3] rayVec2E52#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        real op1_e3_l_182E55#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_192E56#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_202E57#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_182E55);
        real op1_e3_l_212E58#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_222E59#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_192E56,op1_e3_l_202E57);
        real op1_e3_l_232E5A#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_212E58);
        real op1_e3_l_252E5B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_222E59,op1_e3_l_232E5A);
        real op1_e3_l_262E5C#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_212E58,op1_e3_l_252E5B);
        real op1_e3_l_272E5D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_282E5E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_292E5F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_272E5D);
        real op1_e3_l_302E60#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_312E61#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282E5E,op1_e3_l_292E5F);
        real op1_e3_l_322E62#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_302E60);
        real op1_e3_l_342E63#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_312E61,op1_e3_l_322E62);
        real op1_e3_l_352E64#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_302E60,op1_e3_l_342E63);
        tensor[3] op1_e3_l_362E65#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_372E66#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,op1_e3_l_262E5C);
        tensor[3] op1_e3_l_382E67#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_352E64);
        tensor[3] op1_e3_l_392E68#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp2DC8,op1_e3_l_362E65);
        tensor[3] rayStart2E54#3 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_372E66,op1_e3_l_382E67,op1_e3_l_392E68);
        real _t2E7E#1 = TensorIndex<tensor[3],[0]>(rayStart2E54);
        real _t2E80#1 = TensorIndex<tensor[3],[1]>(rayStart2E54);
        tensor[2] rayStartProj2E82#1 = <tensor[2]>[_t2E7E,_t2E80];
        real op1_e3_l_182E85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_192E86#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_202E87#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_182E85);
        real op1_e3_l_212E88#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_222E89#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_192E86,op1_e3_l_202E87);
        real op1_e3_l_232E8A#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_212E88);
        real op1_e3_l_252E8B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_222E89,op1_e3_l_232E8A);
        real op1_e3_l_262E8C#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_212E88,op1_e3_l_252E8B);
        real op1_e3_l_272E8D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_282E8E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_292E8F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_272E8D);
        real op1_e3_l_302E90#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_312E91#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_282E8E,op1_e3_l_292E8F);
        real op1_e3_l_322E92#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_302E90);
        real op1_e3_l_342E93#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_312E91,op1_e3_l_322E92);
        real op1_e3_l_352E94#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_302E90,op1_e3_l_342E93);
        tensor[3] op1_e3_l_362E95#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_372E96#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,op1_e3_l_262E8C);
        tensor[3] op1_e3_l_382E97#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_352E94);
        tensor[3] op1_e3_l_392E98#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2DCA,op1_e3_l_362E95);
        tensor[3] rayEnd2E84#1 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_372E96,op1_e3_l_382E97,op1_e3_l_392E98);
        real op1_e3_l_362EAF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_372EB0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_382EB1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_362EAF);
        real op1_e3_l_392EB2#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_402EB3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_372EB0,op1_e3_l_382EB1);
        real op1_e3_l_412EB4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_392EB2);
        real op1_e3_l_432EB5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_402EB3,op1_e3_l_412EB4);
        real op1_e3_l_442EB6#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_392EB2,op1_e3_l_432EB5);
        real op1_e3_l_452EB7#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_462EB8#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_472EB9#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_452EB7);
        real op1_e3_l_482EBA#2 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_492EBB#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_462EB8,op1_e3_l_472EB9);
        real op1_e3_l_502EBC#1 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_482EBA);
        real op1_e3_l_522EBD#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_492EBB,op1_e3_l_502EBC);
        real op1_e3_l_532EBE#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_482EBA,op1_e3_l_522EBD);
        tensor[3] op1_e3_l_542EBF#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_552EC0#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,op1_e3_l_442EB6);
        tensor[3] op1_e3_l_562EC1#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_532EBE);
        tensor[3] op1_e3_l_572EC2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2DCA,op1_e3_l_542EBF);
        tensor[3] op1_e3_l_792EC3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp2DC8,op1_e3_l_542EBF);
        tensor[3] op1_e3_l_802EC4#1 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_552EC0,op1_e3_l_562EC1,op1_e3_l_572EC2);
        tensor[3] op1_e3_l_812EC5#1 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_552EC0,op1_e3_l_562EC1,op1_e3_l_792EC3);
        tensor[3] dpos2EAE#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_802EC4,op1_e3_l_812EC5);
        real _t2EDE#1 = TensorIndex<tensor[3],[0]>(dpos2EAE);
        real _t2EE0#1 = TensorIndex<tensor[3],[1]>(dpos2EAE);
        tensor[2] dposProj2EE2#1 = <tensor[2]>[_t2EDE,_t2EE0];
        femData:MeshPos[0] _t2EE4#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t2EE6#1 = MkDynamic<femData:MeshPos,0>(_t2EE4);
        real[0] _t2EE8#1 = <real[0]>{};
        real[] _t2EEA#1 = MkDynamic<real,0>(_t2EE8);
        int cellIntersects2EEC#3 = 0;
        tensor[2][0] _t2EEE#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF0#1 = MkDynamic<tensor[2],0>(_t2EEE);
        tensor[3][0] _t2EF2#1 = <tensor[3][0]>{};
        tensor[3][] _t2EF4#1 = MkDynamic<tensor[3],0>(_t2EF2);
        tensor[2][0] _t2EF6#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF8#1 = MkDynamic<tensor[2],0>(_t2EF6);
        femData:MeshCell[0] _t2EFA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t2EFC#1 = MkDynamic<femData:MeshCell,0>(_t2EFA);
        int currentCellInt2EFE#1 = -1;
        femData:MeshCell currentCell2F00#1 = Subscript<femData:MeshCell[]>(0cell_a2DC0,cellIntersects2EEC);
        femData:MeshPos pos2F02#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a2DBE);
        bool startsInside2F04#1 = false;
        self.rayU = rayU2DDE;
        self.rayV = rayV2DF2;
        self.UV = UV2E02;
        self.rayOrig = rayOrig2E28;
        self.rayVec = rayVec2E52;
        self.camNearVsp = camNearVsp2DC8;
        self.camFarVsp = camFarVsp2DCA;
        self.rayStart = rayStart2E54;
        self.rayStartProj = rayStartProj2E82;
        self.rayEnd = rayEnd2E84;
        self.dpos = dpos2EAE;
        self.dposProj = dposProj2EE2;
        self.poses = _t2EE6;
        self.normalizedTimes = _t2EEA;
        self.cellIntersects = cellIntersects2EEC;
        self.rayCellInter = _t2EF0;
        self.spaceInter = _t2EF4;
        self.refSpaceInter = _t2EF8;
        self.cellInter = _t2EFC;
        self.currentCellInt = currentCellInt2EFE;
        self.rayN = _t2E4E;
        self.currentCell = currentCell2F00;
        self.steps = cellIntersects2EEC;
        self.pos = pos2F02;
        self.startsInside = startsInside2F04;
        self.ui = ui2DA0;
        self.vi = vi2DA1;
        return
    end state init
    method start
        ENTRY2F22:  preds = []
          femData:MeshCell[] 0cell_a2F23#1 = globals.0cell_a2CB5;
          bool debug2F25#1 = globals.debug2CB1;
          int debugU2F27#1 = globals.debugU2CB2;
          int debugV2F29#1 = globals.debugV2CB3;
          tensor[3] rayOrig2F2B#2 = self.rayOrig;
          tensor[3] rayVec2F2D#1 = self.rayVec;
          real camNearVsp2F2F#5 = self.camNearVsp;
          real camFarVsp2F31#3 = self.camFarVsp;
          tensor[2] rayStartProj2F33#31 = self.rayStartProj;
          tensor[2] dposProj2F35#32 = self.dposProj;
          femData:MeshPos[] poses2F37#1 = self.poses;
          real[] normalizedTimes2F39#1 = self.normalizedTimes;
          int cellIntersects2F3B#1 = self.cellIntersects;
          tensor[3][] spaceInter2F3D#1 = self.spaceInter;
          int currentCellInt2F3F#1 = self.currentCellInt;
          bool startsInside2F41#2 = self.startsInside;
          int ui2F43#2 = self.ui;
          int vi2F45#2 = self.vi;
          bool _t2F47#1 = NEQ<int>(ui2F43,debugU2F27);
          if _t2F47 then goto ASSIGN2F4B else goto ASSIGN3A23
        ASSIGN2F4B:  preds = [COND2F49]
          bool _t2F4A#1 = true;
          goto JOIN2F4E
        JOIN2F4E:  preds = [ASSIGN2F4B,ASSIGN3A23]
          bool _t2F4C#1 = phi(_t2F4A,_t2F4D)
          if _t2F4C then goto COND2F50 else goto JOIN2F53
        COND2F50:  preds = [COND2F4F]
          if debug2F25 then goto STABILIZE2F51 else goto JOIN2F52
        STABILIZE2F51:  preds = [COND2F50]
          stabilize
          goto JOIN2F52
        JOIN2F52:  preds = [*STABILIZE2F51,COND2F50]
          goto JOIN2F53
        JOIN2F53:  preds = [JOIN2F52,COND2F4F]
        FOREACH2F55:  preds = [JOIN2F53,NEXT307C]
          foreach (c2F54 in 0cell_a2F23) on exit goto ASSIGN39C3
            real startTime39B1#3 = phi(camFarVsp2F31,startTime3070)
            bool startsInside39C1#2 = phi(startsInside2F41,startsInside3072)
            int currentCellInt39B6#6 = phi(currentCellInt2F3F,currentCellInt3073)
            int cellIntersects306C#8 = phi(cellIntersects2F3B,cellIntersects3075)
            real[] normalizedTimes3067#7 = phi(normalizedTimes2F39,normalizedTimes3077)
            femData:MeshPos[] poses3064#7 = phi(poses2F37,poses3079)
          string _t2F56#1 = "Cell:";
          string _t2F58#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F56,c2F54,_t2F58);
          int _t2F5B#156 = ExtractFemItem<int,CellIndex(MeshCell)>(c2F54);
          femData:Mesh _t2F5D#187 = ExtractFem<femData:Mesh,femData:MeshCell>(c2F54);
          femData:MeshPos _t3053#1 = _msh_newtonInverse2F5F (rayStartProj2F33,_t2F5B,_t2F5D);
          bool _t3055#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3053);
          if _t3055 then goto ASSIGN3059 else goto ASSIGN307E
        ASSIGN3059:  preds = [COND3057]
          string _t3058#1 = "pos starts inside\n";
          Print<[string]>(_t3058);
          femData:MeshPos callNewtonPos305C#1 = _msh_newtonInverse2F5F (rayStartProj2F33,_t2F5B,_t2F5D);
          tensor[2] refPos305D#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(callNewtonPos305C);
          tensor[2] _t305B#1 = refPos305D;
          femData:MeshPos p3061#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2F5D,_t2F5B,_t305B);
          femData:MeshPos[] poses3063#1 = Append<femData:MeshPos>(poses3064,p3061);
          real[] normalizedTimes3066#1 = Append<real>(normalizedTimes3067,camNearVsp2F2F);
          int _t3069#1 = 1;
          int cellIntersects306B#1 = IAdd(cellIntersects306C,_t3069);
          bool startsInside306E#1 = true;
          goto JOIN307B
        JOIN307B:  preds = [ASSIGN306F,JOIN39BC]
          real startTime3070#1 = phi(camNearVsp2F2F,startTime3071)
          bool startsInside3072#1 = phi(startsInside306E,startsInside2F41)
          int currentCellInt3073#1 = phi(cellIntersects306C,currentCellInt3074)
          int cellIntersects3075#1 = phi(cellIntersects306B,cellIntersects3076)
          real[] normalizedTimes3077#1 = phi(normalizedTimes3066,normalizedTimes3078)
          femData:MeshPos[] poses3079#1 = phi(poses3063,poses307A)
          goto FOREACH2F55
        ASSIGN307E:  preds = [COND3057]
          real _t307D#26 = -0.e0;
          tensor[2] _t307F#363 = <tensor[2]>[_t307D,_t307D];
          real time3081#9 = +inf;
          int face3083#12 = -1;
          real _t3085#39 = 0.1e1;
          real _t3087#9 = 0.e0;
          tensor[2] _t3089#28 = <tensor[2]>[_t3085,_t3087];
          real _t308B#9 = -0.1e1;
          tensor[2] _t308D#19 = <tensor[2]>[_t308B,_t3085];
          int[3] femIndicies30A2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs30A3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies30A2);
          tensor[3,2] dofs30A1#1 = femDofs30A3;
          tensor[2,3] basisResult30A4#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_173090#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs30A1,basisResult30A4,_t307F);
          tensor[2,2] op1_e3_l_183091#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_173090);
          tensor[3,2] dofs30A5#1 = femDofs30A3;
          tensor[2,3] basisResult30A6#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_193092#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs30A5,basisResult30A6,_t307F);
          tensor[3,2] dofs30A7#1 = femDofs30A3;
          tensor[2,3] basisResult30A8#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_203093#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs30A7,basisResult30A8,_t307F);
          tensor[2] op1_e3_l_213094#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_203093);
          tensor[2,2] op1_e3_l_223095#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_183091);
          real op1_e3_l_233096#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_193092,op1_e3_l_213094);
          tensor[3,2] dofs30A9#1 = femDofs30A3;
          tensor[3] basisResult30AA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_243097#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs30A9,basisResult30AA,_t307F);
          tensor[2,2] op1_e3_l_253098#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_223095,op1_e3_l_233096);
          tensor[2] op1_e3_l_263099#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_243097);
          tensor[2] op1_e3_l_27309A#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_253098,op1_e3_l_263099);
          tensor[2] op1_e3_l_36309B#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_253098);
          tensor[2] op1_e3_l_37309C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_38309D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_37309C);
          tensor[2] op1_e3_l_39309E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_38309D);
          tensor[2] op1_e3_l_40309F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4130A0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_39309E);
          real _t308F#6 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_40309F,op1_e3_l_4130A0);
          real _t30C7#3 = -0.1e-15;
          bool _t30C9#1 = GTE<real>(_t308F,_t30C7);
          bool _t30CB#1 = GT<real>(time3081,_t308F);
          int[3] femIndicies30DA#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs30DB#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies30DA);
          tensor[3,2] dofs30D9#1 = femDofs30DB;
          tensor[2,3] basisResult30DC#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_630CE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs30D9,basisResult30DC,_t307F);
          tensor[2,2] op1_e3_l_730CF#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_630CE);
          tensor[3,2] dofs30DD#1 = femDofs30DB;
          tensor[2,3] basisResult30DE#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_830D0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs30DD,basisResult30DE,_t307F);
          tensor[3,2] dofs30DF#1 = femDofs30DB;
          tensor[2,3] basisResult30E0#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_930D1#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs30DF,basisResult30E0,_t307F);
          tensor[2] op1_e3_l_1030D2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_930D1);
          tensor[2,2] op1_e3_l_1130D3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_730CF);
          real op1_e3_l_1230D4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_830D0,op1_e3_l_1030D2);
          tensor[2,2] op1_e3_l_1330D5#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_1130D3,op1_e3_l_1230D4);
          tensor[2] op1_e3_l_1430D6#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_1330D5);
          tensor[2] op1_e3_l_1530D7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_1630D8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_1430D6,op1_e3_l_1530D7);
          real _t30CD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_1630D8);
          real _t30F5#3 = 0.1e-20;
          bool _t30F7#1 = GTE<real>(_t30CD,_t30F5);
          bool _t30F9#1 = BAnd(_t30CB,_t30F7);
          bool _t30FB#4 = BAnd(_t30C9,_t30F9);
          if _t30FB then goto ASSIGN30FF else goto JOIN3196
        ASSIGN30FF:  preds = [COND30FD]
          real _t30FE#3 = 0.1e-8;
          real _t3100#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t30FE);
          tensor[2] _t3102#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies311A#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs311B#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies311A);
          tensor[3,2] dofs3119#1 = femDofs311B;
          tensor[2,3] basisResult311C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323105#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3119,basisResult311C,_t307F);
          tensor[2,2] op1_e3_l_333106#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323105);
          tensor[3,2] dofs311D#1 = femDofs311B;
          tensor[2,3] basisResult311E#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343107#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs311D,basisResult311E,_t307F);
          tensor[3,2] dofs311F#1 = femDofs311B;
          tensor[2,3] basisResult3120#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353108#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs311F,basisResult3120,_t307F);
          tensor[2] op1_e3_l_363109#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353108);
          tensor[2,2] op1_e3_l_37310A#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333106);
          real op1_e3_l_38310B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343107,op1_e3_l_363109);
          tensor[3,2] dofs3121#1 = femDofs311B;
          tensor[3] basisResult3122#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39310C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3121,basisResult3122,_t307F);
          tensor[2,2] op1_e3_l_40310D#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_37310A,op1_e3_l_38310B);
          tensor[2] op1_e3_l_41310E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39310C);
          tensor[2] op1_e3_l_52310F#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40310D,op1_e3_l_41310E);
          tensor[2] op1_e3_l_613110#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40310D);
          tensor[2] op1_e3_l_623111#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_633112#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613110,op1_e3_l_623111);
          tensor[2] op1_e3_l_643113#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_633112);
          tensor[2] op1_e3_l_653114#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_52310F);
          tensor[2] op1_e3_l_663115#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643113);
          real op1_e3_l_753116#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653114,op1_e3_l_663115);
          tensor[2] op1_e3_l_783117#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753116,op1_e3_l_613110);
          tensor[2] op1_e3_l_793118#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52310F,op1_e3_l_783117);
          real _t3104#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3102,op1_e3_l_793118);
          bool _t3142#1 = GT<real>(_t3100,_t3104);
          tensor[2] _t3144#1 = <tensor[2]>[_t30FE,_t30FE];
          int[3] femIndicies315B#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs315C#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies315B);
          tensor[3,2] dofs315A#1 = femDofs315C;
          tensor[2,3] basisResult315D#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323147#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs315A,basisResult315D,_t307F);
          tensor[2,2] op1_e3_l_333148#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323147);
          tensor[3,2] dofs315E#1 = femDofs315C;
          tensor[2,3] basisResult315F#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343149#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs315E,basisResult315F,_t307F);
          tensor[3,2] dofs3160#1 = femDofs315C;
          tensor[2,3] basisResult3161#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_35314A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3160,basisResult3161,_t307F);
          tensor[2] op1_e3_l_36314B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_35314A);
          tensor[2,2] op1_e3_l_37314C#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333148);
          real op1_e3_l_38314D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343149,op1_e3_l_36314B);
          tensor[3,2] dofs3162#1 = femDofs315C;
          tensor[3] basisResult3163#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39314E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3162,basisResult3163,_t307F);
          tensor[2,2] op1_e3_l_40314F#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_37314C,op1_e3_l_38314D);
          tensor[2] op1_e3_l_413150#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39314E);
          tensor[2] op1_e3_l_523151#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40314F,op1_e3_l_413150);
          tensor[2] op1_e3_l_613152#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40314F);
          tensor[2] op1_e3_l_623153#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_633154#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613152,op1_e3_l_623153);
          tensor[2] op1_e3_l_643155#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_633154);
          tensor[2] op1_e3_l_653156#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_523151);
          tensor[2] op1_e3_l_663157#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643155);
          real op1_e3_l_753158#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653156,op1_e3_l_663157);
          tensor[2] op1_e3_l_783159#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753158,op1_e3_l_613152);
          tensor[2] _t3146#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3144,op1_e3_l_523151,op1_e3_l_783159);
          real _t3182#1 = TensorIndex<tensor[2],[0]>(_t3146);
          bool _t3184#1 = GT<real>(_t3182,_t307D);
          real _t3186#1 = TensorIndex<tensor[2],[1]>(_t3146);
          bool _t3188#1 = GT<real>(_t3186,_t307D);
          bool _t318A#1 = BAnd(_t3184,_t3188);
          bool _t318C#1 = BAnd(_t3142,_t318A);
          if _t318C then goto ASSIGN3190 else goto JOIN3193
        ASSIGN3190:  preds = [COND318E]
          int face318F#1 = 0;
          goto JOIN3193
        JOIN3193:  preds = [ASSIGN3190,COND318E]
          int face3191#1 = phi(face318F,face3083)
          real time3192#1 = phi(_t308F,time3081)
          goto JOIN3196
        JOIN3196:  preds = [JOIN3193,COND30FD]
          int face3194#2 = phi(face3191,face3083)
          real time3195#3 = phi(time3192,time3081)
          tensor[2] _t3197#18 = <tensor[2]>[_t3087,_t3087];
          tensor[2] _t3199#19 = <tensor[2]>[_t3087,_t3085];
          int[3] femIndicies31AE#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs31AF#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies31AE);
          tensor[3,2] dofs31AD#1 = femDofs31AF;
          tensor[2,3] basisResult31B0#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_17319C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs31AD,basisResult31B0,_t307F);
          tensor[2,2] op1_e3_l_18319D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_17319C);
          tensor[3,2] dofs31B1#1 = femDofs31AF;
          tensor[2,3] basisResult31B2#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_19319E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs31B1,basisResult31B2,_t307F);
          tensor[3,2] dofs31B3#1 = femDofs31AF;
          tensor[2,3] basisResult31B4#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_20319F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs31B3,basisResult31B4,_t307F);
          tensor[2] op1_e3_l_2131A0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_20319F);
          tensor[2,2] op1_e3_l_2231A1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_18319D);
          real op1_e3_l_2331A2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_19319E,op1_e3_l_2131A0);
          tensor[3,2] dofs31B5#1 = femDofs31AF;
          tensor[3] basisResult31B6#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_2431A3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs31B5,basisResult31B6,_t307F);
          tensor[2,2] op1_e3_l_2531A4#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_2231A1,op1_e3_l_2331A2);
          tensor[2] op1_e3_l_2631A5#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_2431A3);
          tensor[2] op1_e3_l_2731A6#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_2531A4,op1_e3_l_2631A5);
          tensor[2] op1_e3_l_3631A7#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_2531A4);
          tensor[2] op1_e3_l_3731A8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_3831A9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3631A7,op1_e3_l_3731A8);
          tensor[2] op1_e3_l_3931AA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_3831A9);
          tensor[2] op1_e3_l_4031AB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_2731A6);
          tensor[2] op1_e3_l_4131AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3931AA);
          real _t319B#9 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4131AC);
          bool _t31D3#4 = GTE<real>(_t319B,_t30C7);
          bool _t31D5#1 = GT<real>(time3195,_t319B);
          int[3] femIndicies31E4#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs31E5#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies31E4);
          tensor[3,2] dofs31E3#1 = femDofs31E5;
          tensor[2,3] basisResult31E6#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_631D8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs31E3,basisResult31E6,_t307F);
          tensor[2,2] op1_e3_l_731D9#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_631D8);
          tensor[3,2] dofs31E7#1 = femDofs31E5;
          tensor[2,3] basisResult31E8#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_831DA#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs31E7,basisResult31E8,_t307F);
          tensor[3,2] dofs31E9#1 = femDofs31E5;
          tensor[2,3] basisResult31EA#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_931DB#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs31E9,basisResult31EA,_t307F);
          tensor[2] op1_e3_l_1031DC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_931DB);
          tensor[2,2] op1_e3_l_1131DD#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_731D9);
          real op1_e3_l_1231DE#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_831DA,op1_e3_l_1031DC);
          tensor[2,2] op1_e3_l_1331DF#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_1131DD,op1_e3_l_1231DE);
          tensor[2] op1_e3_l_1431E0#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_1331DF);
          tensor[2] op1_e3_l_1531E1#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_1631E2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_1431E0,op1_e3_l_1531E1);
          real _t31D7#1 = λ(T0[])<Abs(T0)> (op1_e3_l_1631E2);
          bool _t31FF#4 = GTE<real>(_t31D7,_t30F5);
          bool _t3201#1 = BAnd(_t31D5,_t31FF);
          bool _t3203#1 = BAnd(_t31D3,_t3201);
          if _t3203 then goto ASSIGN3207 else goto JOIN329E
        ASSIGN3207:  preds = [COND3205]
          real _t3206#3 = 0.1e-8;
          real _t3208#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3206);
          tensor[2] _t320A#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3222#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3223#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3222);
          tensor[3,2] dofs3221#1 = femDofs3223;
          tensor[2,3] basisResult3224#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_32320D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3221,basisResult3224,_t307F);
          tensor[2,2] op1_e3_l_33320E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_32320D);
          tensor[3,2] dofs3225#1 = femDofs3223;
          tensor[2,3] basisResult3226#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_34320F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3225,basisResult3226,_t307F);
          tensor[3,2] dofs3227#1 = femDofs3223;
          tensor[2,3] basisResult3228#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353210#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3227,basisResult3228,_t307F);
          tensor[2] op1_e3_l_363211#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353210);
          tensor[2,2] op1_e3_l_373212#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_33320E);
          real op1_e3_l_383213#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_34320F,op1_e3_l_363211);
          tensor[3,2] dofs3229#1 = femDofs3223;
          tensor[3] basisResult322A#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393214#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3229,basisResult322A,_t307F);
          tensor[2,2] op1_e3_l_403215#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373212,op1_e3_l_383213);
          tensor[2] op1_e3_l_413216#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393214);
          tensor[2] op1_e3_l_523217#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403215,op1_e3_l_413216);
          tensor[2] op1_e3_l_613218#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403215);
          tensor[2] op1_e3_l_623219#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_63321A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613218,op1_e3_l_623219);
          tensor[2] op1_e3_l_64321B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_63321A);
          tensor[2] op1_e3_l_65321C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523217);
          tensor[2] op1_e3_l_66321D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64321B);
          real op1_e3_l_75321E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65321C,op1_e3_l_66321D);
          tensor[2] op1_e3_l_78321F#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_75321E,op1_e3_l_613218);
          tensor[2] op1_e3_l_793220#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_523217,op1_e3_l_78321F);
          real _t320C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t320A,op1_e3_l_793220);
          bool _t324A#1 = GT<real>(_t3208,_t320C);
          tensor[2] _t324C#1 = <tensor[2]>[_t3206,_t3206];
          int[3] femIndicies3263#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3264#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3263);
          tensor[3,2] dofs3262#1 = femDofs3264;
          tensor[2,3] basisResult3265#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_32324F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3262,basisResult3265,_t307F);
          tensor[2,2] op1_e3_l_333250#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_32324F);
          tensor[3,2] dofs3266#1 = femDofs3264;
          tensor[2,3] basisResult3267#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343251#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3266,basisResult3267,_t307F);
          tensor[3,2] dofs3268#1 = femDofs3264;
          tensor[2,3] basisResult3269#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353252#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3268,basisResult3269,_t307F);
          tensor[2] op1_e3_l_363253#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353252);
          tensor[2,2] op1_e3_l_373254#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333250);
          real op1_e3_l_383255#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343251,op1_e3_l_363253);
          tensor[3,2] dofs326A#1 = femDofs3264;
          tensor[3] basisResult326B#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393256#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs326A,basisResult326B,_t307F);
          tensor[2,2] op1_e3_l_403257#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373254,op1_e3_l_383255);
          tensor[2] op1_e3_l_413258#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393256);
          tensor[2] op1_e3_l_523259#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403257,op1_e3_l_413258);
          tensor[2] op1_e3_l_61325A#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403257);
          tensor[2] op1_e3_l_62325B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_63325C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61325A,op1_e3_l_62325B);
          tensor[2] op1_e3_l_64325D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_63325C);
          tensor[2] op1_e3_l_65325E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523259);
          tensor[2] op1_e3_l_66325F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64325D);
          real op1_e3_l_753260#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65325E,op1_e3_l_66325F);
          tensor[2] op1_e3_l_783261#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753260,op1_e3_l_61325A);
          tensor[2] _t324E#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t324C,op1_e3_l_523259,op1_e3_l_783261);
          real _t328A#1 = TensorIndex<tensor[2],[0]>(_t324E);
          bool _t328C#1 = GT<real>(_t328A,_t307D);
          real _t328E#1 = TensorIndex<tensor[2],[1]>(_t324E);
          bool _t3290#1 = GT<real>(_t328E,_t307D);
          bool _t3292#1 = BAnd(_t328C,_t3290);
          bool _t3294#1 = BAnd(_t324A,_t3292);
          if _t3294 then goto ASSIGN3298 else goto JOIN329B
        ASSIGN3298:  preds = [COND3296]
          int face3297#1 = 1;
          goto JOIN329B
        JOIN329B:  preds = [ASSIGN3298,COND3296]
          int face3299#1 = phi(face3297,face3194)
          real time329A#1 = phi(_t319B,time3195)
          goto JOIN329E
        JOIN329E:  preds = [JOIN329B,COND3205]
          int face329C#2 = phi(face3299,face3194)
          real time329D#3 = phi(time329A,time3195)
          int[3] femIndicies32B2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs32B3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies32B2);
          tensor[3,2] dofs32B1#1 = femDofs32B3;
          tensor[2,3] basisResult32B4#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_1732A0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs32B1,basisResult32B4,_t307F);
          tensor[2,2] op1_e3_l_1832A1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_1732A0);
          tensor[3,2] dofs32B5#1 = femDofs32B3;
          tensor[2,3] basisResult32B6#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_1932A2#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs32B5,basisResult32B6,_t307F);
          tensor[3,2] dofs32B7#1 = femDofs32B3;
          tensor[2,3] basisResult32B8#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_2032A3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs32B7,basisResult32B8,_t307F);
          tensor[2] op1_e3_l_2132A4#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_2032A3);
          tensor[2,2] op1_e3_l_2232A5#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_1832A1);
          real op1_e3_l_2332A6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_1932A2,op1_e3_l_2132A4);
          tensor[3,2] dofs32B9#1 = femDofs32B3;
          tensor[3] basisResult32BA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_2432A7#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs32B9,basisResult32BA,_t307F);
          tensor[2,2] op1_e3_l_2532A8#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_2232A5,op1_e3_l_2332A6);
          tensor[2] op1_e3_l_2632A9#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_2432A7);
          tensor[2] op1_e3_l_2732AA#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_2532A8,op1_e3_l_2632A9);
          tensor[2] op1_e3_l_3632AB#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_2532A8);
          tensor[2] op1_e3_l_3732AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_3832AD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_3632AB,op1_e3_l_3732AC);
          tensor[2] op1_e3_l_3932AE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_3832AD);
          tensor[2] op1_e3_l_4032AF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_2732AA);
          tensor[2] op1_e3_l_4132B0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3932AE);
          real _t329F#9 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4032AF,op1_e3_l_4132B0);
          bool _t32D7#4 = GTE<real>(_t329F,_t30C7);
          bool _t32D9#1 = GT<real>(time329D,_t329F);
          int[3] femIndicies32E8#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs32E9#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies32E8);
          tensor[3,2] dofs32E7#1 = femDofs32E9;
          tensor[2,3] basisResult32EA#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_632DC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs32E7,basisResult32EA,_t307F);
          tensor[2,2] op1_e3_l_732DD#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_632DC);
          tensor[3,2] dofs32EB#1 = femDofs32E9;
          tensor[2,3] basisResult32EC#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_832DE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs32EB,basisResult32EC,_t307F);
          tensor[3,2] dofs32ED#1 = femDofs32E9;
          tensor[2,3] basisResult32EE#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_932DF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs32ED,basisResult32EE,_t307F);
          tensor[2] op1_e3_l_1032E0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_932DF);
          tensor[2,2] op1_e3_l_1132E1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_732DD);
          real op1_e3_l_1232E2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_832DE,op1_e3_l_1032E0);
          tensor[2,2] op1_e3_l_1332E3#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_1132E1,op1_e3_l_1232E2);
          tensor[2] op1_e3_l_1432E4#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_1332E3);
          tensor[2] op1_e3_l_1532E5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_1632E6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_1432E4,op1_e3_l_1532E5);
          real _t32DB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_1632E6);
          bool _t3303#4 = GTE<real>(_t32DB,_t30F5);
          bool _t3305#1 = BAnd(_t32D9,_t3303);
          bool _t3307#1 = BAnd(_t32D7,_t3305);
          if _t3307 then goto ASSIGN330B else goto JOIN33A2
        ASSIGN330B:  preds = [COND3309]
          real _t330A#3 = 0.1e-8;
          real _t330C#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t330A);
          tensor[2] _t330E#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3326#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3327#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3326);
          tensor[3,2] dofs3325#1 = femDofs3327;
          tensor[2,3] basisResult3328#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323311#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3325,basisResult3328,_t307F);
          tensor[2,2] op1_e3_l_333312#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323311);
          tensor[3,2] dofs3329#1 = femDofs3327;
          tensor[2,3] basisResult332A#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343313#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3329,basisResult332A,_t307F);
          tensor[3,2] dofs332B#1 = femDofs3327;
          tensor[2,3] basisResult332C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353314#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs332B,basisResult332C,_t307F);
          tensor[2] op1_e3_l_363315#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353314);
          tensor[2,2] op1_e3_l_373316#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333312);
          real op1_e3_l_383317#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343313,op1_e3_l_363315);
          tensor[3,2] dofs332D#1 = femDofs3327;
          tensor[3] basisResult332E#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393318#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs332D,basisResult332E,_t307F);
          tensor[2,2] op1_e3_l_403319#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373316,op1_e3_l_383317);
          tensor[2] op1_e3_l_41331A#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393318);
          tensor[2] op1_e3_l_52331B#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403319,op1_e3_l_41331A);
          tensor[2] op1_e3_l_61331C#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403319);
          tensor[2] op1_e3_l_62331D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_63331E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61331C,op1_e3_l_62331D);
          tensor[2] op1_e3_l_64331F#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_63331E);
          tensor[2] op1_e3_l_653320#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52331B);
          tensor[2] op1_e3_l_663321#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64331F);
          real op1_e3_l_753322#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653320,op1_e3_l_663321);
          tensor[2] op1_e3_l_783323#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753322,op1_e3_l_61331C);
          tensor[2] op1_e3_l_793324#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52331B,op1_e3_l_783323);
          real _t3310#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t330E,op1_e3_l_793324);
          bool _t334E#1 = GT<real>(_t330C,_t3310);
          tensor[2] _t3350#1 = <tensor[2]>[_t330A,_t330A];
          int[3] femIndicies3367#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3368#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3367);
          tensor[3,2] dofs3366#1 = femDofs3368;
          tensor[2,3] basisResult3369#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323353#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3366,basisResult3369,_t307F);
          tensor[2,2] op1_e3_l_333354#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323353);
          tensor[3,2] dofs336A#1 = femDofs3368;
          tensor[2,3] basisResult336B#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343355#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs336A,basisResult336B,_t307F);
          tensor[3,2] dofs336C#1 = femDofs3368;
          tensor[2,3] basisResult336D#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353356#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs336C,basisResult336D,_t307F);
          tensor[2] op1_e3_l_363357#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353356);
          tensor[2,2] op1_e3_l_373358#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333354);
          real op1_e3_l_383359#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343355,op1_e3_l_363357);
          tensor[3,2] dofs336E#1 = femDofs3368;
          tensor[3] basisResult336F#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39335A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs336E,basisResult336F,_t307F);
          tensor[2,2] op1_e3_l_40335B#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373358,op1_e3_l_383359);
          tensor[2] op1_e3_l_41335C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39335A);
          tensor[2] op1_e3_l_52335D#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40335B,op1_e3_l_41335C);
          tensor[2] op1_e3_l_61335E#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40335B);
          tensor[2] op1_e3_l_62335F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_633360#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61335E,op1_e3_l_62335F);
          tensor[2] op1_e3_l_643361#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_633360);
          tensor[2] op1_e3_l_653362#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52335D);
          tensor[2] op1_e3_l_663363#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643361);
          real op1_e3_l_753364#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653362,op1_e3_l_663363);
          tensor[2] op1_e3_l_783365#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753364,op1_e3_l_61335E);
          tensor[2] _t3352#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3350,op1_e3_l_52335D,op1_e3_l_783365);
          real _t338E#1 = TensorIndex<tensor[2],[0]>(_t3352);
          bool _t3390#1 = GT<real>(_t338E,_t307D);
          real _t3392#1 = TensorIndex<tensor[2],[1]>(_t3352);
          bool _t3394#1 = GT<real>(_t3392,_t307D);
          bool _t3396#1 = BAnd(_t3390,_t3394);
          bool _t3398#1 = BAnd(_t334E,_t3396);
          if _t3398 then goto ASSIGN339C else goto JOIN339F
        ASSIGN339C:  preds = [COND339A]
          int face339B#1 = 2;
          goto JOIN339F
        JOIN339F:  preds = [ASSIGN339C,COND339A]
          int face339D#1 = phi(face339B,face329C)
          real time339E#1 = phi(_t329F,time329D)
          goto JOIN33A2
        JOIN33A2:  preds = [JOIN339F,COND3309]
          int face33A0#2 = phi(face339D,face329C)
          real time33A1#1 = phi(time339E,time329D)
          bool _t33A3#1 = NEQ<int>(face33A0,face3083);
          if _t33A3 then goto ASSIGN33A7 else goto ASSIGN39C0
        ASSIGN33A7:  preds = [COND33A5]
          real _t33A6#1 = Max<real>(time33A1,_t3087);
          real _t33A8#1 = IntToReal(face33A0);
          tensor[2] _t33AA#1 = <tensor[2]>[_t33A6,_t33A8];
          goto JOIN33AE
        JOIN33AE:  preds = [ASSIGN33AB,ASSIGN39C0]
          tensor[2] _t33AC#1 = phi(_t33AA,_t33AD)
          real newTime33AF#2 = TensorIndex<tensor[2],[0]>(_t33AC);
          bool _t33B1#1 = GTE<real>(newTime33AF,_t3087);
          if _t33B1 then goto COND33B4 else goto JOIN39BC
        COND33B4:  preds = [COND33B3]
          if _t30FB then goto ASSIGN33B6 else goto JOIN344D
        ASSIGN33B6:  preds = [COND33B4]
          real _t33B5#3 = 0.1e-8;
          real _t33B7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t33B5);
          tensor[2] _t33B9#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies33D1#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs33D2#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies33D1);
          tensor[3,2] dofs33D0#1 = femDofs33D2;
          tensor[2,3] basisResult33D3#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3233BC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs33D0,basisResult33D3,_t307F);
          tensor[2,2] op1_e3_l_3333BD#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3233BC);
          tensor[3,2] dofs33D4#1 = femDofs33D2;
          tensor[2,3] basisResult33D5#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3433BE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs33D4,basisResult33D5,_t307F);
          tensor[3,2] dofs33D6#1 = femDofs33D2;
          tensor[2,3] basisResult33D7#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3533BF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs33D6,basisResult33D7,_t307F);
          tensor[2] op1_e3_l_3633C0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3533BF);
          tensor[2,2] op1_e3_l_3733C1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3333BD);
          real op1_e3_l_3833C2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3433BE,op1_e3_l_3633C0);
          tensor[3,2] dofs33D8#1 = femDofs33D2;
          tensor[3] basisResult33D9#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3933C3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs33D8,basisResult33D9,_t307F);
          tensor[2,2] op1_e3_l_4033C4#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3733C1,op1_e3_l_3833C2);
          tensor[2] op1_e3_l_4133C5#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3933C3);
          tensor[2] op1_e3_l_5233C6#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4033C4,op1_e3_l_4133C5);
          tensor[2] op1_e3_l_6133C7#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4033C4);
          tensor[2] op1_e3_l_6233C8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_6333C9#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6133C7,op1_e3_l_6233C8);
          tensor[2] op1_e3_l_6433CA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_6333C9);
          tensor[2] op1_e3_l_6533CB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_5233C6);
          tensor[2] op1_e3_l_6633CC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6433CA);
          real op1_e3_l_7533CD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6533CB,op1_e3_l_6633CC);
          tensor[2] op1_e3_l_7833CE#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7533CD,op1_e3_l_6133C7);
          tensor[2] op1_e3_l_7933CF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_5233C6,op1_e3_l_7833CE);
          real _t33BB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t33B9,op1_e3_l_7933CF);
          bool _t33F9#1 = GT<real>(_t33B7,_t33BB);
          tensor[2] _t33FB#1 = <tensor[2]>[_t33B5,_t33B5];
          int[3] femIndicies3412#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3413#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3412);
          tensor[3,2] dofs3411#1 = femDofs3413;
          tensor[2,3] basisResult3414#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3233FE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3411,basisResult3414,_t307F);
          tensor[2,2] op1_e3_l_3333FF#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3233FE);
          tensor[3,2] dofs3415#1 = femDofs3413;
          tensor[2,3] basisResult3416#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343400#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3415,basisResult3416,_t307F);
          tensor[3,2] dofs3417#1 = femDofs3413;
          tensor[2,3] basisResult3418#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353401#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3417,basisResult3418,_t307F);
          tensor[2] op1_e3_l_363402#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353401);
          tensor[2,2] op1_e3_l_373403#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3333FF);
          real op1_e3_l_383404#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343400,op1_e3_l_363402);
          tensor[3,2] dofs3419#1 = femDofs3413;
          tensor[3] basisResult341A#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393405#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3419,basisResult341A,_t307F);
          tensor[2,2] op1_e3_l_403406#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373403,op1_e3_l_383404);
          tensor[2] op1_e3_l_413407#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393405);
          tensor[2] op1_e3_l_523408#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403406,op1_e3_l_413407);
          tensor[2] op1_e3_l_613409#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403406);
          tensor[2] op1_e3_l_62340A#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_63340B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613409,op1_e3_l_62340A);
          tensor[2] op1_e3_l_64340C#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_63340B);
          tensor[2] op1_e3_l_65340D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_523408);
          tensor[2] op1_e3_l_66340E#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64340C);
          real op1_e3_l_75340F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65340D,op1_e3_l_66340E);
          tensor[2] op1_e3_l_783410#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_75340F,op1_e3_l_613409);
          tensor[2] _t33FD#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t33FB,op1_e3_l_523408,op1_e3_l_783410);
          real _t3439#1 = TensorIndex<tensor[2],[0]>(_t33FD);
          bool _t343B#1 = GT<real>(_t3439,_t307D);
          real _t343D#1 = TensorIndex<tensor[2],[1]>(_t33FD);
          bool _t343F#1 = GT<real>(_t343D,_t307D);
          bool _t3441#1 = BAnd(_t343B,_t343F);
          bool _t3443#1 = BAnd(_t33F9,_t3441);
          if _t3443 then goto ASSIGN3447 else goto JOIN344A
        ASSIGN3447:  preds = [COND3445]
          int face3446#1 = 0;
          goto JOIN344A
        JOIN344A:  preds = [ASSIGN3447,COND3445]
          int face3448#1 = phi(face3446,face3083)
          real time3449#1 = phi(_t308F,time3081)
          goto JOIN344D
        JOIN344D:  preds = [JOIN344A,COND33B4]
          int face344B#2 = phi(face3448,face3083)
          real time344C#3 = phi(time3449,time3081)
          bool _t344E#1 = GT<real>(time344C,_t319B);
          bool _t3450#1 = BAnd(_t344E,_t31FF);
          bool _t3452#1 = BAnd(_t31D3,_t3450);
          if _t3452 then goto ASSIGN3456 else goto JOIN34ED
        ASSIGN3456:  preds = [COND3454]
          real _t3455#3 = 0.1e-8;
          real _t3457#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3455);
          tensor[2] _t3459#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3471#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3472#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3471);
          tensor[3,2] dofs3470#1 = femDofs3472;
          tensor[2,3] basisResult3473#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_32345C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3470,basisResult3473,_t307F);
          tensor[2,2] op1_e3_l_33345D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_32345C);
          tensor[3,2] dofs3474#1 = femDofs3472;
          tensor[2,3] basisResult3475#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_34345E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3474,basisResult3475,_t307F);
          tensor[3,2] dofs3476#1 = femDofs3472;
          tensor[2,3] basisResult3477#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_35345F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3476,basisResult3477,_t307F);
          tensor[2] op1_e3_l_363460#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_35345F);
          tensor[2,2] op1_e3_l_373461#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_33345D);
          real op1_e3_l_383462#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_34345E,op1_e3_l_363460);
          tensor[3,2] dofs3478#1 = femDofs3472;
          tensor[3] basisResult3479#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393463#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3478,basisResult3479,_t307F);
          tensor[2,2] op1_e3_l_403464#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373461,op1_e3_l_383462);
          tensor[2] op1_e3_l_413465#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393463);
          tensor[2] op1_e3_l_523466#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403464,op1_e3_l_413465);
          tensor[2] op1_e3_l_613467#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403464);
          tensor[2] op1_e3_l_623468#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_633469#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613467,op1_e3_l_623468);
          tensor[2] op1_e3_l_64346A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_633469);
          tensor[2] op1_e3_l_65346B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523466);
          tensor[2] op1_e3_l_66346C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64346A);
          real op1_e3_l_75346D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65346B,op1_e3_l_66346C);
          tensor[2] op1_e3_l_78346E#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_75346D,op1_e3_l_613467);
          tensor[2] op1_e3_l_79346F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_523466,op1_e3_l_78346E);
          real _t345B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3459,op1_e3_l_79346F);
          bool _t3499#1 = GT<real>(_t3457,_t345B);
          tensor[2] _t349B#1 = <tensor[2]>[_t3455,_t3455];
          int[3] femIndicies34B2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs34B3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies34B2);
          tensor[3,2] dofs34B1#1 = femDofs34B3;
          tensor[2,3] basisResult34B4#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_32349E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs34B1,basisResult34B4,_t307F);
          tensor[2,2] op1_e3_l_33349F#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_32349E);
          tensor[3,2] dofs34B5#1 = femDofs34B3;
          tensor[2,3] basisResult34B6#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3434A0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs34B5,basisResult34B6,_t307F);
          tensor[3,2] dofs34B7#1 = femDofs34B3;
          tensor[2,3] basisResult34B8#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3534A1#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs34B7,basisResult34B8,_t307F);
          tensor[2] op1_e3_l_3634A2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3534A1);
          tensor[2,2] op1_e3_l_3734A3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_33349F);
          real op1_e3_l_3834A4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3434A0,op1_e3_l_3634A2);
          tensor[3,2] dofs34B9#1 = femDofs34B3;
          tensor[3] basisResult34BA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3934A5#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs34B9,basisResult34BA,_t307F);
          tensor[2,2] op1_e3_l_4034A6#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3734A3,op1_e3_l_3834A4);
          tensor[2] op1_e3_l_4134A7#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3934A5);
          tensor[2] op1_e3_l_5234A8#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4034A6,op1_e3_l_4134A7);
          tensor[2] op1_e3_l_6134A9#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4034A6);
          tensor[2] op1_e3_l_6234AA#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_6334AB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6134A9,op1_e3_l_6234AA);
          tensor[2] op1_e3_l_6434AC#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_6334AB);
          tensor[2] op1_e3_l_6534AD#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_5234A8);
          tensor[2] op1_e3_l_6634AE#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6434AC);
          real op1_e3_l_7534AF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6534AD,op1_e3_l_6634AE);
          tensor[2] op1_e3_l_7834B0#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7534AF,op1_e3_l_6134A9);
          tensor[2] _t349D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t349B,op1_e3_l_5234A8,op1_e3_l_7834B0);
          real _t34D9#1 = TensorIndex<tensor[2],[0]>(_t349D);
          bool _t34DB#1 = GT<real>(_t34D9,_t307D);
          real _t34DD#1 = TensorIndex<tensor[2],[1]>(_t349D);
          bool _t34DF#1 = GT<real>(_t34DD,_t307D);
          bool _t34E1#1 = BAnd(_t34DB,_t34DF);
          bool _t34E3#1 = BAnd(_t3499,_t34E1);
          if _t34E3 then goto ASSIGN34E7 else goto JOIN34EA
        ASSIGN34E7:  preds = [COND34E5]
          int face34E6#1 = 1;
          goto JOIN34EA
        JOIN34EA:  preds = [ASSIGN34E7,COND34E5]
          int face34E8#1 = phi(face34E6,face344B)
          real time34E9#1 = phi(_t319B,time344C)
          goto JOIN34ED
        JOIN34ED:  preds = [JOIN34EA,COND3454]
          int face34EB#2 = phi(face34E8,face344B)
          real time34EC#3 = phi(time34E9,time344C)
          bool _t34EE#1 = GT<real>(time34EC,_t329F);
          bool _t34F0#1 = BAnd(_t34EE,_t3303);
          bool _t34F2#1 = BAnd(_t32D7,_t34F0);
          if _t34F2 then goto ASSIGN34F6 else goto JOIN358D
        ASSIGN34F6:  preds = [COND34F4]
          real _t34F5#3 = 0.1e-8;
          real _t34F7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t34F5);
          tensor[2] _t34F9#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3511#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3512#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3511);
          tensor[3,2] dofs3510#1 = femDofs3512;
          tensor[2,3] basisResult3513#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3234FC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3510,basisResult3513,_t307F);
          tensor[2,2] op1_e3_l_3334FD#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3234FC);
          tensor[3,2] dofs3514#1 = femDofs3512;
          tensor[2,3] basisResult3515#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3434FE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3514,basisResult3515,_t307F);
          tensor[3,2] dofs3516#1 = femDofs3512;
          tensor[2,3] basisResult3517#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3534FF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3516,basisResult3517,_t307F);
          tensor[2] op1_e3_l_363500#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3534FF);
          tensor[2,2] op1_e3_l_373501#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3334FD);
          real op1_e3_l_383502#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3434FE,op1_e3_l_363500);
          tensor[3,2] dofs3518#1 = femDofs3512;
          tensor[3] basisResult3519#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393503#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3518,basisResult3519,_t307F);
          tensor[2,2] op1_e3_l_403504#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373501,op1_e3_l_383502);
          tensor[2] op1_e3_l_413505#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393503);
          tensor[2] op1_e3_l_523506#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403504,op1_e3_l_413505);
          tensor[2] op1_e3_l_613507#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403504);
          tensor[2] op1_e3_l_623508#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_633509#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613507,op1_e3_l_623508);
          tensor[2] op1_e3_l_64350A#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_633509);
          tensor[2] op1_e3_l_65350B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523506);
          tensor[2] op1_e3_l_66350C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64350A);
          real op1_e3_l_75350D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65350B,op1_e3_l_66350C);
          tensor[2] op1_e3_l_78350E#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_75350D,op1_e3_l_613507);
          tensor[2] op1_e3_l_79350F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_523506,op1_e3_l_78350E);
          real _t34FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t34F9,op1_e3_l_79350F);
          bool _t3539#1 = GT<real>(_t34F7,_t34FB);
          tensor[2] _t353B#1 = <tensor[2]>[_t34F5,_t34F5];
          int[3] femIndicies3552#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3553#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3552);
          tensor[3,2] dofs3551#1 = femDofs3553;
          tensor[2,3] basisResult3554#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_32353E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3551,basisResult3554,_t307F);
          tensor[2,2] op1_e3_l_33353F#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_32353E);
          tensor[3,2] dofs3555#1 = femDofs3553;
          tensor[2,3] basisResult3556#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343540#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3555,basisResult3556,_t307F);
          tensor[3,2] dofs3557#1 = femDofs3553;
          tensor[2,3] basisResult3558#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353541#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3557,basisResult3558,_t307F);
          tensor[2] op1_e3_l_363542#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353541);
          tensor[2,2] op1_e3_l_373543#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_33353F);
          real op1_e3_l_383544#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343540,op1_e3_l_363542);
          tensor[3,2] dofs3559#1 = femDofs3553;
          tensor[3] basisResult355A#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393545#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3559,basisResult355A,_t307F);
          tensor[2,2] op1_e3_l_403546#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373543,op1_e3_l_383544);
          tensor[2] op1_e3_l_413547#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393545);
          tensor[2] op1_e3_l_523548#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403546,op1_e3_l_413547);
          tensor[2] op1_e3_l_613549#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403546);
          tensor[2] op1_e3_l_62354A#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_63354B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613549,op1_e3_l_62354A);
          tensor[2] op1_e3_l_64354C#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_63354B);
          tensor[2] op1_e3_l_65354D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523548);
          tensor[2] op1_e3_l_66354E#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64354C);
          real op1_e3_l_75354F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65354D,op1_e3_l_66354E);
          tensor[2] op1_e3_l_783550#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_75354F,op1_e3_l_613549);
          tensor[2] _t353D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t353B,op1_e3_l_523548,op1_e3_l_783550);
          real _t3579#1 = TensorIndex<tensor[2],[0]>(_t353D);
          bool _t357B#1 = GT<real>(_t3579,_t307D);
          real _t357D#1 = TensorIndex<tensor[2],[1]>(_t353D);
          bool _t357F#1 = GT<real>(_t357D,_t307D);
          bool _t3581#1 = BAnd(_t357B,_t357F);
          bool _t3583#1 = BAnd(_t3539,_t3581);
          if _t3583 then goto ASSIGN3587 else goto JOIN358A
        ASSIGN3587:  preds = [COND3585]
          int face3586#1 = 2;
          goto JOIN358A
        JOIN358A:  preds = [ASSIGN3587,COND3585]
          int face3588#1 = phi(face3586,face34EB)
          real time3589#1 = phi(_t329F,time34EC)
          goto JOIN358D
        JOIN358D:  preds = [JOIN358A,COND34F4]
          int face358B#2 = phi(face3588,face34EB)
          real time358C#1 = phi(time3589,time34EC)
          bool _t358E#1 = NEQ<int>(face358B,face3083);
          if _t358E then goto ASSIGN3592 else goto ASSIGN39BF
        ASSIGN3592:  preds = [COND3590]
          real _t3591#1 = Max<real>(time358C,_t3087);
          real _t3593#1 = IntToReal(face358B);
          tensor[2] _t3595#1 = <tensor[2]>[_t3591,_t3593];
          goto JOIN3599
        JOIN3599:  preds = [ASSIGN3596,ASSIGN39BF]
          tensor[2] _t3597#1 = phi(_t3595,_t3598)
          real _t359A#1 = TensorIndex<tensor[2],[0]>(_t3597);
          int[3] femIndicies35AB#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs35AC#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies35AB);
          tensor[3,2] dofs35AA#1 = femDofs35AC;
          tensor[2,3] basisResult35AD#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_15359D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs35AA,basisResult35AD,_t307F);
          tensor[2,2] op1_e3_l_16359E#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_15359D);
          tensor[3,2] dofs35AE#1 = femDofs35AC;
          tensor[2,3] basisResult35AF#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_17359F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35AE,basisResult35AF,_t307F);
          tensor[3,2] dofs35B0#1 = femDofs35AC;
          tensor[2,3] basisResult35B1#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_1835A0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35B0,basisResult35B1,_t307F);
          tensor[2] op1_e3_l_1935A1#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_1835A0);
          tensor[2,2] op1_e3_l_2035A2#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_16359E);
          real op1_e3_l_2135A3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_17359F,op1_e3_l_1935A1);
          tensor[3,2] dofs35B2#1 = femDofs35AC;
          tensor[3] basisResult35B3#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_2235A4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35B2,basisResult35B3,_t307F);
          tensor[2,2] op1_e3_l_2335A5#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_2035A2,op1_e3_l_2135A3);
          tensor[2] op1_e3_l_2435A6#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_2235A4);
          tensor[2] op1_e3_l_3335A7#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_2335A5);
          tensor[2] op1_e3_l_3435A8#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_2335A5,op1_e3_l_2435A6);
          tensor[2] op1_e3_l_3535A9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t359A,op1_e3_l_3335A7);
          tensor[2] _t359C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_3435A8,op1_e3_l_3535A9);
          if _t30FB then goto ASSIGN35CE else goto JOIN3665
        ASSIGN35CE:  preds = [COND35CC]
          real _t35CD#3 = 0.1e-8;
          real _t35CF#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t35CD);
          tensor[2] _t35D1#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies35E9#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs35EA#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies35E9);
          tensor[3,2] dofs35E8#1 = femDofs35EA;
          tensor[2,3] basisResult35EB#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3235D4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs35E8,basisResult35EB,_t307F);
          tensor[2,2] op1_e3_l_3335D5#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3235D4);
          tensor[3,2] dofs35EC#1 = femDofs35EA;
          tensor[2,3] basisResult35ED#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3435D6#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35EC,basisResult35ED,_t307F);
          tensor[3,2] dofs35EE#1 = femDofs35EA;
          tensor[2,3] basisResult35EF#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3535D7#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35EE,basisResult35EF,_t307F);
          tensor[2] op1_e3_l_3635D8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3535D7);
          tensor[2,2] op1_e3_l_3735D9#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3335D5);
          real op1_e3_l_3835DA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3435D6,op1_e3_l_3635D8);
          tensor[3,2] dofs35F0#1 = femDofs35EA;
          tensor[3] basisResult35F1#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3935DB#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs35F0,basisResult35F1,_t307F);
          tensor[2,2] op1_e3_l_4035DC#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3735D9,op1_e3_l_3835DA);
          tensor[2] op1_e3_l_4135DD#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3935DB);
          tensor[2] op1_e3_l_5235DE#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4035DC,op1_e3_l_4135DD);
          tensor[2] op1_e3_l_6135DF#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4035DC);
          tensor[2] op1_e3_l_6235E0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_6335E1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6135DF,op1_e3_l_6235E0);
          tensor[2] op1_e3_l_6435E2#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_6335E1);
          tensor[2] op1_e3_l_6535E3#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_5235DE);
          tensor[2] op1_e3_l_6635E4#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6435E2);
          real op1_e3_l_7535E5#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6535E3,op1_e3_l_6635E4);
          tensor[2] op1_e3_l_7835E6#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7535E5,op1_e3_l_6135DF);
          tensor[2] op1_e3_l_7935E7#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_5235DE,op1_e3_l_7835E6);
          real _t35D3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t35D1,op1_e3_l_7935E7);
          bool _t3611#1 = GT<real>(_t35CF,_t35D3);
          tensor[2] _t3613#1 = <tensor[2]>[_t35CD,_t35CD];
          int[3] femIndicies362A#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs362B#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies362A);
          tensor[3,2] dofs3629#1 = femDofs362B;
          tensor[2,3] basisResult362C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323616#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3629,basisResult362C,_t307F);
          tensor[2,2] op1_e3_l_333617#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323616);
          tensor[3,2] dofs362D#1 = femDofs362B;
          tensor[2,3] basisResult362E#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343618#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs362D,basisResult362E,_t307F);
          tensor[3,2] dofs362F#1 = femDofs362B;
          tensor[2,3] basisResult3630#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353619#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs362F,basisResult3630,_t307F);
          tensor[2] op1_e3_l_36361A#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353619);
          tensor[2,2] op1_e3_l_37361B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333617);
          real op1_e3_l_38361C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343618,op1_e3_l_36361A);
          tensor[3,2] dofs3631#1 = femDofs362B;
          tensor[3] basisResult3632#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39361D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3631,basisResult3632,_t307F);
          tensor[2,2] op1_e3_l_40361E#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_37361B,op1_e3_l_38361C);
          tensor[2] op1_e3_l_41361F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39361D);
          tensor[2] op1_e3_l_523620#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40361E,op1_e3_l_41361F);
          tensor[2] op1_e3_l_613621#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40361E);
          tensor[2] op1_e3_l_623622#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_633623#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613621,op1_e3_l_623622);
          tensor[2] op1_e3_l_643624#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_633623);
          tensor[2] op1_e3_l_653625#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_523620);
          tensor[2] op1_e3_l_663626#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643624);
          real op1_e3_l_753627#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653625,op1_e3_l_663626);
          tensor[2] op1_e3_l_783628#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753627,op1_e3_l_613621);
          tensor[2] _t3615#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3613,op1_e3_l_523620,op1_e3_l_783628);
          real _t3651#1 = TensorIndex<tensor[2],[0]>(_t3615);
          bool _t3653#1 = GT<real>(_t3651,_t307D);
          real _t3655#1 = TensorIndex<tensor[2],[1]>(_t3615);
          bool _t3657#1 = GT<real>(_t3655,_t307D);
          bool _t3659#1 = BAnd(_t3653,_t3657);
          bool _t365B#1 = BAnd(_t3611,_t3659);
          if _t365B then goto ASSIGN365F else goto JOIN3662
        ASSIGN365F:  preds = [COND365D]
          int face365E#1 = 0;
          goto JOIN3662
        JOIN3662:  preds = [ASSIGN365F,COND365D]
          int face3660#1 = phi(face365E,face3083)
          real time3661#1 = phi(_t308F,time3081)
          goto JOIN3665
        JOIN3665:  preds = [JOIN3662,COND35CC]
          int face3663#2 = phi(face3660,face3083)
          real time3664#3 = phi(time3661,time3081)
          bool _t3666#1 = GT<real>(time3664,_t319B);
          bool _t3668#1 = BAnd(_t3666,_t31FF);
          bool _t366A#1 = BAnd(_t31D3,_t3668);
          if _t366A then goto ASSIGN366E else goto JOIN3705
        ASSIGN366E:  preds = [COND366C]
          real _t366D#3 = 0.1e-8;
          real _t366F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t366D);
          tensor[2] _t3671#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3689#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs368A#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3689);
          tensor[3,2] dofs3688#1 = femDofs368A;
          tensor[2,3] basisResult368B#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323674#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3688,basisResult368B,_t307F);
          tensor[2,2] op1_e3_l_333675#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323674);
          tensor[3,2] dofs368C#1 = femDofs368A;
          tensor[2,3] basisResult368D#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343676#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs368C,basisResult368D,_t307F);
          tensor[3,2] dofs368E#1 = femDofs368A;
          tensor[2,3] basisResult368F#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353677#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs368E,basisResult368F,_t307F);
          tensor[2] op1_e3_l_363678#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353677);
          tensor[2,2] op1_e3_l_373679#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333675);
          real op1_e3_l_38367A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343676,op1_e3_l_363678);
          tensor[3,2] dofs3690#1 = femDofs368A;
          tensor[3] basisResult3691#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39367B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3690,basisResult3691,_t307F);
          tensor[2,2] op1_e3_l_40367C#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373679,op1_e3_l_38367A);
          tensor[2] op1_e3_l_41367D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39367B);
          tensor[2] op1_e3_l_52367E#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40367C,op1_e3_l_41367D);
          tensor[2] op1_e3_l_61367F#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40367C);
          tensor[2] op1_e3_l_623680#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_633681#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61367F,op1_e3_l_623680);
          tensor[2] op1_e3_l_643682#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_633681);
          tensor[2] op1_e3_l_653683#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52367E);
          tensor[2] op1_e3_l_663684#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643682);
          real op1_e3_l_753685#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653683,op1_e3_l_663684);
          tensor[2] op1_e3_l_783686#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753685,op1_e3_l_61367F);
          tensor[2] op1_e3_l_793687#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52367E,op1_e3_l_783686);
          real _t3673#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3671,op1_e3_l_793687);
          bool _t36B1#1 = GT<real>(_t366F,_t3673);
          tensor[2] _t36B3#1 = <tensor[2]>[_t366D,_t366D];
          int[3] femIndicies36CA#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs36CB#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies36CA);
          tensor[3,2] dofs36C9#1 = femDofs36CB;
          tensor[2,3] basisResult36CC#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3236B6#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs36C9,basisResult36CC,_t307F);
          tensor[2,2] op1_e3_l_3336B7#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3236B6);
          tensor[3,2] dofs36CD#1 = femDofs36CB;
          tensor[2,3] basisResult36CE#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3436B8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs36CD,basisResult36CE,_t307F);
          tensor[3,2] dofs36CF#1 = femDofs36CB;
          tensor[2,3] basisResult36D0#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3536B9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs36CF,basisResult36D0,_t307F);
          tensor[2] op1_e3_l_3636BA#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3536B9);
          tensor[2,2] op1_e3_l_3736BB#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3336B7);
          real op1_e3_l_3836BC#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3436B8,op1_e3_l_3636BA);
          tensor[3,2] dofs36D1#1 = femDofs36CB;
          tensor[3] basisResult36D2#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3936BD#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs36D1,basisResult36D2,_t307F);
          tensor[2,2] op1_e3_l_4036BE#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3736BB,op1_e3_l_3836BC);
          tensor[2] op1_e3_l_4136BF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3936BD);
          tensor[2] op1_e3_l_5236C0#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4036BE,op1_e3_l_4136BF);
          tensor[2] op1_e3_l_6136C1#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4036BE);
          tensor[2] op1_e3_l_6236C2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_6336C3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6136C1,op1_e3_l_6236C2);
          tensor[2] op1_e3_l_6436C4#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_6336C3);
          tensor[2] op1_e3_l_6536C5#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_5236C0);
          tensor[2] op1_e3_l_6636C6#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6436C4);
          real op1_e3_l_7536C7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6536C5,op1_e3_l_6636C6);
          tensor[2] op1_e3_l_7836C8#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7536C7,op1_e3_l_6136C1);
          tensor[2] _t36B5#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t36B3,op1_e3_l_5236C0,op1_e3_l_7836C8);
          real _t36F1#1 = TensorIndex<tensor[2],[0]>(_t36B5);
          bool _t36F3#1 = GT<real>(_t36F1,_t307D);
          real _t36F5#1 = TensorIndex<tensor[2],[1]>(_t36B5);
          bool _t36F7#1 = GT<real>(_t36F5,_t307D);
          bool _t36F9#1 = BAnd(_t36F3,_t36F7);
          bool _t36FB#1 = BAnd(_t36B1,_t36F9);
          if _t36FB then goto ASSIGN36FF else goto JOIN3702
        ASSIGN36FF:  preds = [COND36FD]
          int face36FE#1 = 1;
          goto JOIN3702
        JOIN3702:  preds = [ASSIGN36FF,COND36FD]
          int face3700#1 = phi(face36FE,face3663)
          real time3701#1 = phi(_t319B,time3664)
          goto JOIN3705
        JOIN3705:  preds = [JOIN3702,COND366C]
          int face3703#2 = phi(face3700,face3663)
          real time3704#3 = phi(time3701,time3664)
          bool _t3706#1 = GT<real>(time3704,_t329F);
          bool _t3708#1 = BAnd(_t3706,_t3303);
          bool _t370A#1 = BAnd(_t32D7,_t3708);
          if _t370A then goto ASSIGN370E else goto JOIN37A5
        ASSIGN370E:  preds = [COND370C]
          real _t370D#3 = 0.1e-8;
          real _t370F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t370D);
          tensor[2] _t3711#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3729#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs372A#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3729);
          tensor[3,2] dofs3728#1 = femDofs372A;
          tensor[2,3] basisResult372B#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323714#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3728,basisResult372B,_t307F);
          tensor[2,2] op1_e3_l_333715#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323714);
          tensor[3,2] dofs372C#1 = femDofs372A;
          tensor[2,3] basisResult372D#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343716#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs372C,basisResult372D,_t307F);
          tensor[3,2] dofs372E#1 = femDofs372A;
          tensor[2,3] basisResult372F#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353717#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs372E,basisResult372F,_t307F);
          tensor[2] op1_e3_l_363718#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353717);
          tensor[2,2] op1_e3_l_373719#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333715);
          real op1_e3_l_38371A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343716,op1_e3_l_363718);
          tensor[3,2] dofs3730#1 = femDofs372A;
          tensor[3] basisResult3731#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39371B#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3730,basisResult3731,_t307F);
          tensor[2,2] op1_e3_l_40371C#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373719,op1_e3_l_38371A);
          tensor[2] op1_e3_l_41371D#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39371B);
          tensor[2] op1_e3_l_52371E#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40371C,op1_e3_l_41371D);
          tensor[2] op1_e3_l_61371F#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40371C);
          tensor[2] op1_e3_l_623720#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_633721#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61371F,op1_e3_l_623720);
          tensor[2] op1_e3_l_643722#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_633721);
          tensor[2] op1_e3_l_653723#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52371E);
          tensor[2] op1_e3_l_663724#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643722);
          real op1_e3_l_753725#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653723,op1_e3_l_663724);
          tensor[2] op1_e3_l_783726#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753725,op1_e3_l_61371F);
          tensor[2] op1_e3_l_793727#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52371E,op1_e3_l_783726);
          real _t3713#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3711,op1_e3_l_793727);
          bool _t3751#1 = GT<real>(_t370F,_t3713);
          tensor[2] _t3753#1 = <tensor[2]>[_t370D,_t370D];
          int[3] femIndicies376A#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs376B#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies376A);
          tensor[3,2] dofs3769#1 = femDofs376B;
          tensor[2,3] basisResult376C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323756#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3769,basisResult376C,_t307F);
          tensor[2,2] op1_e3_l_333757#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323756);
          tensor[3,2] dofs376D#1 = femDofs376B;
          tensor[2,3] basisResult376E#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343758#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs376D,basisResult376E,_t307F);
          tensor[3,2] dofs376F#1 = femDofs376B;
          tensor[2,3] basisResult3770#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353759#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs376F,basisResult3770,_t307F);
          tensor[2] op1_e3_l_36375A#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353759);
          tensor[2,2] op1_e3_l_37375B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333757);
          real op1_e3_l_38375C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343758,op1_e3_l_36375A);
          tensor[3,2] dofs3771#1 = femDofs376B;
          tensor[3] basisResult3772#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_39375D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3771,basisResult3772,_t307F);
          tensor[2,2] op1_e3_l_40375E#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_37375B,op1_e3_l_38375C);
          tensor[2] op1_e3_l_41375F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_39375D);
          tensor[2] op1_e3_l_523760#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40375E,op1_e3_l_41375F);
          tensor[2] op1_e3_l_613761#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40375E);
          tensor[2] op1_e3_l_623762#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_633763#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_613761,op1_e3_l_623762);
          tensor[2] op1_e3_l_643764#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_633763);
          tensor[2] op1_e3_l_653765#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_523760);
          tensor[2] op1_e3_l_663766#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643764);
          real op1_e3_l_753767#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653765,op1_e3_l_663766);
          tensor[2] op1_e3_l_783768#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753767,op1_e3_l_613761);
          tensor[2] _t3755#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3753,op1_e3_l_523760,op1_e3_l_783768);
          real _t3791#1 = TensorIndex<tensor[2],[0]>(_t3755);
          bool _t3793#1 = GT<real>(_t3791,_t307D);
          real _t3795#1 = TensorIndex<tensor[2],[1]>(_t3755);
          bool _t3797#1 = GT<real>(_t3795,_t307D);
          bool _t3799#1 = BAnd(_t3793,_t3797);
          bool _t379B#1 = BAnd(_t3751,_t3799);
          if _t379B then goto ASSIGN379F else goto JOIN37A2
        ASSIGN379F:  preds = [COND379D]
          int face379E#1 = 2;
          goto JOIN37A2
        JOIN37A2:  preds = [ASSIGN379F,COND379D]
          int face37A0#1 = phi(face379E,face3703)
          real time37A1#1 = phi(_t329F,time3704)
          goto JOIN37A5
        JOIN37A5:  preds = [JOIN37A2,COND370C]
          int face37A3#2 = phi(face37A0,face3703)
          real time37A4#1 = phi(time37A1,time3704)
          bool _t37A6#1 = NEQ<int>(face37A3,face3083);
          if _t37A6 then goto ASSIGN37AA else goto ASSIGN39BE
        ASSIGN37AA:  preds = [COND37A8]
          real _t37A9#1 = Max<real>(time37A4,_t3087);
          real _t37AB#1 = IntToReal(face37A3);
          tensor[2] _t37AD#1 = <tensor[2]>[_t37A9,_t37AB];
          goto JOIN37B1
        JOIN37B1:  preds = [ASSIGN37AE,ASSIGN39BE]
          tensor[2] _t37AF#1 = phi(_t37AD,_t37B0)
          real _t37B2#1 = TensorIndex<tensor[2],[0]>(_t37AF);
          tensor[2] op1_e3_l_337B5#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t37B2,dposProj2F35);
          tensor[2] _t37B4#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj2F33,op1_e3_l_337B5);
          if _t30FB then goto ASSIGN37BA else goto JOIN3851
        ASSIGN37BA:  preds = [COND37B8]
          real _t37B9#3 = 0.1e-8;
          real _t37BB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t37B9);
          tensor[2] _t37BD#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies37D5#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs37D6#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies37D5);
          tensor[3,2] dofs37D4#1 = femDofs37D6;
          tensor[2,3] basisResult37D7#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3237C0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs37D4,basisResult37D7,_t307F);
          tensor[2,2] op1_e3_l_3337C1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3237C0);
          tensor[3,2] dofs37D8#1 = femDofs37D6;
          tensor[2,3] basisResult37D9#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3437C2#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs37D8,basisResult37D9,_t307F);
          tensor[3,2] dofs37DA#1 = femDofs37D6;
          tensor[2,3] basisResult37DB#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3537C3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs37DA,basisResult37DB,_t307F);
          tensor[2] op1_e3_l_3637C4#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3537C3);
          tensor[2,2] op1_e3_l_3737C5#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3337C1);
          real op1_e3_l_3837C6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3437C2,op1_e3_l_3637C4);
          tensor[3,2] dofs37DC#1 = femDofs37D6;
          tensor[3] basisResult37DD#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3937C7#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs37DC,basisResult37DD,_t307F);
          tensor[2,2] op1_e3_l_4037C8#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3737C5,op1_e3_l_3837C6);
          tensor[2] op1_e3_l_4137C9#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3937C7);
          tensor[2] op1_e3_l_5237CA#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4037C8,op1_e3_l_4137C9);
          tensor[2] op1_e3_l_6137CB#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4037C8);
          tensor[2] op1_e3_l_6237CC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_6337CD#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6137CB,op1_e3_l_6237CC);
          tensor[2] op1_e3_l_6437CE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_6337CD);
          tensor[2] op1_e3_l_6537CF#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_5237CA);
          tensor[2] op1_e3_l_6637D0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6437CE);
          real op1_e3_l_7537D1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6537CF,op1_e3_l_6637D0);
          tensor[2] op1_e3_l_7837D2#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7537D1,op1_e3_l_6137CB);
          tensor[2] op1_e3_l_7937D3#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_5237CA,op1_e3_l_7837D2);
          real _t37BF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t37BD,op1_e3_l_7937D3);
          bool _t37FD#1 = GT<real>(_t37BB,_t37BF);
          tensor[2] _t37FF#1 = <tensor[2]>[_t37B9,_t37B9];
          int[3] femIndicies3816#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3817#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3816);
          tensor[3,2] dofs3815#1 = femDofs3817;
          tensor[2,3] basisResult3818#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323802#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3815,basisResult3818,_t307F);
          tensor[2,2] op1_e3_l_333803#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323802);
          tensor[3,2] dofs3819#1 = femDofs3817;
          tensor[2,3] basisResult381A#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343804#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3819,basisResult381A,_t307F);
          tensor[3,2] dofs381B#1 = femDofs3817;
          tensor[2,3] basisResult381C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353805#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs381B,basisResult381C,_t307F);
          tensor[2] op1_e3_l_363806#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353805);
          tensor[2,2] op1_e3_l_373807#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333803);
          real op1_e3_l_383808#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343804,op1_e3_l_363806);
          tensor[3,2] dofs381D#1 = femDofs3817;
          tensor[3] basisResult381E#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393809#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs381D,basisResult381E,_t307F);
          tensor[2,2] op1_e3_l_40380A#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373807,op1_e3_l_383808);
          tensor[2] op1_e3_l_41380B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393809);
          tensor[2] op1_e3_l_52380C#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40380A,op1_e3_l_41380B);
          tensor[2] op1_e3_l_61380D#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40380A);
          tensor[2] op1_e3_l_62380E#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_63380F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61380D,op1_e3_l_62380E);
          tensor[2] op1_e3_l_643810#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_63380F);
          tensor[2] op1_e3_l_653811#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_52380C);
          tensor[2] op1_e3_l_663812#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643810);
          real op1_e3_l_753813#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653811,op1_e3_l_663812);
          tensor[2] op1_e3_l_783814#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753813,op1_e3_l_61380D);
          tensor[2] _t3801#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t37FF,op1_e3_l_52380C,op1_e3_l_783814);
          real _t383D#1 = TensorIndex<tensor[2],[0]>(_t3801);
          bool _t383F#1 = GT<real>(_t383D,_t307D);
          real _t3841#1 = TensorIndex<tensor[2],[1]>(_t3801);
          bool _t3843#1 = GT<real>(_t3841,_t307D);
          bool _t3845#1 = BAnd(_t383F,_t3843);
          bool _t3847#1 = BAnd(_t37FD,_t3845);
          if _t3847 then goto ASSIGN384B else goto JOIN384E
        ASSIGN384B:  preds = [COND3849]
          int face384A#1 = 0;
          goto JOIN384E
        JOIN384E:  preds = [ASSIGN384B,COND3849]
          int face384C#1 = phi(face384A,face3083)
          real time384D#1 = phi(_t308F,time3081)
          goto JOIN3851
        JOIN3851:  preds = [JOIN384E,COND37B8]
          int face384F#2 = phi(face384C,face3083)
          real time3850#3 = phi(time384D,time3081)
          bool _t3852#1 = GT<real>(time3850,_t319B);
          bool _t3854#1 = BAnd(_t3852,_t31FF);
          bool _t3856#1 = BAnd(_t31D3,_t3854);
          if _t3856 then goto ASSIGN385A else goto JOIN38F1
        ASSIGN385A:  preds = [COND3858]
          real _t3859#3 = 0.1e-8;
          real _t385B#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3859);
          tensor[2] _t385D#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3875#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3876#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3875);
          tensor[3,2] dofs3874#1 = femDofs3876;
          tensor[2,3] basisResult3877#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323860#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3874,basisResult3877,_t307F);
          tensor[2,2] op1_e3_l_333861#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323860);
          tensor[3,2] dofs3878#1 = femDofs3876;
          tensor[2,3] basisResult3879#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343862#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3878,basisResult3879,_t307F);
          tensor[3,2] dofs387A#1 = femDofs3876;
          tensor[2,3] basisResult387B#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353863#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs387A,basisResult387B,_t307F);
          tensor[2] op1_e3_l_363864#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353863);
          tensor[2,2] op1_e3_l_373865#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333861);
          real op1_e3_l_383866#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343862,op1_e3_l_363864);
          tensor[3,2] dofs387C#1 = femDofs3876;
          tensor[3] basisResult387D#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393867#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs387C,basisResult387D,_t307F);
          tensor[2,2] op1_e3_l_403868#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373865,op1_e3_l_383866);
          tensor[2] op1_e3_l_413869#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393867);
          tensor[2] op1_e3_l_52386A#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403868,op1_e3_l_413869);
          tensor[2] op1_e3_l_61386B#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403868);
          tensor[2] op1_e3_l_62386C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_63386D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61386B,op1_e3_l_62386C);
          tensor[2] op1_e3_l_64386E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_63386D);
          tensor[2] op1_e3_l_65386F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52386A);
          tensor[2] op1_e3_l_663870#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64386E);
          real op1_e3_l_753871#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65386F,op1_e3_l_663870);
          tensor[2] op1_e3_l_783872#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753871,op1_e3_l_61386B);
          tensor[2] op1_e3_l_793873#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52386A,op1_e3_l_783872);
          real _t385F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t385D,op1_e3_l_793873);
          bool _t389D#1 = GT<real>(_t385B,_t385F);
          tensor[2] _t389F#1 = <tensor[2]>[_t3859,_t3859];
          int[3] femIndicies38B6#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs38B7#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies38B6);
          tensor[3,2] dofs38B5#1 = femDofs38B7;
          tensor[2,3] basisResult38B8#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_3238A2#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs38B5,basisResult38B8,_t307F);
          tensor[2,2] op1_e3_l_3338A3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_3238A2);
          tensor[3,2] dofs38B9#1 = femDofs38B7;
          tensor[2,3] basisResult38BA#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3438A4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs38B9,basisResult38BA,_t307F);
          tensor[3,2] dofs38BB#1 = femDofs38B7;
          tensor[2,3] basisResult38BC#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_3538A5#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs38BB,basisResult38BC,_t307F);
          tensor[2] op1_e3_l_3638A6#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_3538A5);
          tensor[2,2] op1_e3_l_3738A7#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_3338A3);
          real op1_e3_l_3838A8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_3438A4,op1_e3_l_3638A6);
          tensor[3,2] dofs38BD#1 = femDofs38B7;
          tensor[3] basisResult38BE#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_3938A9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs38BD,basisResult38BE,_t307F);
          tensor[2,2] op1_e3_l_4038AA#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_3738A7,op1_e3_l_3838A8);
          tensor[2] op1_e3_l_4138AB#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_3938A9);
          tensor[2] op1_e3_l_5238AC#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_4038AA,op1_e3_l_4138AB);
          tensor[2] op1_e3_l_6138AD#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_4038AA);
          tensor[2] op1_e3_l_6238AE#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_6338AF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6138AD,op1_e3_l_6238AE);
          tensor[2] op1_e3_l_6438B0#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_6338AF);
          tensor[2] op1_e3_l_6538B1#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_5238AC);
          tensor[2] op1_e3_l_6638B2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_6438B0);
          real op1_e3_l_7538B3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_6538B1,op1_e3_l_6638B2);
          tensor[2] op1_e3_l_7838B4#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_7538B3,op1_e3_l_6138AD);
          tensor[2] _t38A1#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t389F,op1_e3_l_5238AC,op1_e3_l_7838B4);
          real _t38DD#1 = TensorIndex<tensor[2],[0]>(_t38A1);
          bool _t38DF#1 = GT<real>(_t38DD,_t307D);
          real _t38E1#1 = TensorIndex<tensor[2],[1]>(_t38A1);
          bool _t38E3#1 = GT<real>(_t38E1,_t307D);
          bool _t38E5#1 = BAnd(_t38DF,_t38E3);
          bool _t38E7#1 = BAnd(_t389D,_t38E5);
          if _t38E7 then goto ASSIGN38EB else goto JOIN38EE
        ASSIGN38EB:  preds = [COND38E9]
          int face38EA#1 = 1;
          goto JOIN38EE
        JOIN38EE:  preds = [ASSIGN38EB,COND38E9]
          int face38EC#1 = phi(face38EA,face384F)
          real time38ED#1 = phi(_t319B,time3850)
          goto JOIN38F1
        JOIN38F1:  preds = [JOIN38EE,COND3858]
          int face38EF#2 = phi(face38EC,face384F)
          real time38F0#3 = phi(time38ED,time3850)
          bool _t38F2#1 = GT<real>(time38F0,_t329F);
          bool _t38F4#1 = BAnd(_t38F2,_t3303);
          bool _t38F6#1 = BAnd(_t32D7,_t38F4);
          if _t38F6 then goto ASSIGN38FA else goto JOIN3991
        ASSIGN38FA:  preds = [COND38F8]
          real _t38F9#3 = 0.1e-8;
          real _t38FB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t38F9);
          tensor[2] _t38FD#1 = <tensor[2]>[_t3085,_t3085];
          int[3] femIndicies3915#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3916#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3915);
          tensor[3,2] dofs3914#1 = femDofs3916;
          tensor[2,3] basisResult3917#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323900#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3914,basisResult3917,_t307F);
          tensor[2,2] op1_e3_l_333901#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323900);
          tensor[3,2] dofs3918#1 = femDofs3916;
          tensor[2,3] basisResult3919#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343902#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3918,basisResult3919,_t307F);
          tensor[3,2] dofs391A#1 = femDofs3916;
          tensor[2,3] basisResult391B#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353903#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs391A,basisResult391B,_t307F);
          tensor[2] op1_e3_l_363904#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353903);
          tensor[2,2] op1_e3_l_373905#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333901);
          real op1_e3_l_383906#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343902,op1_e3_l_363904);
          tensor[3,2] dofs391C#1 = femDofs3916;
          tensor[3] basisResult391D#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393907#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs391C,basisResult391D,_t307F);
          tensor[2,2] op1_e3_l_403908#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373905,op1_e3_l_383906);
          tensor[2] op1_e3_l_413909#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393907);
          tensor[2] op1_e3_l_52390A#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_403908,op1_e3_l_413909);
          tensor[2] op1_e3_l_61390B#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_403908);
          tensor[2] op1_e3_l_62390C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_63390D#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61390B,op1_e3_l_62390C);
          tensor[2] op1_e3_l_64390E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_63390D);
          tensor[2] op1_e3_l_65390F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52390A);
          tensor[2] op1_e3_l_663910#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_64390E);
          real op1_e3_l_753911#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_65390F,op1_e3_l_663910);
          tensor[2] op1_e3_l_783912#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753911,op1_e3_l_61390B);
          tensor[2] op1_e3_l_793913#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_52390A,op1_e3_l_783912);
          real _t38FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t38FD,op1_e3_l_793913);
          bool _t393D#1 = GT<real>(_t38FB,_t38FF);
          tensor[2] _t393F#1 = <tensor[2]>[_t38F9,_t38F9];
          int[3] femIndicies3956#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs3957#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies3956);
          tensor[3,2] dofs3955#1 = femDofs3957;
          tensor[2,3] basisResult3958#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_323942#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,dofs3955,basisResult3958,_t307F);
          tensor[2,2] op1_e3_l_333943#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_323942);
          tensor[3,2] dofs3959#1 = femDofs3957;
          tensor[2,3] basisResult395A#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_343944#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs3959,basisResult395A,_t307F);
          tensor[3,2] dofs395B#1 = femDofs3957;
          tensor[2,3] basisResult395C#1 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2] probe_l_353945#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs395B,basisResult395C,_t307F);
          tensor[2] op1_e3_l_363946#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_353945);
          tensor[2,2] op1_e3_l_373947#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_333943);
          real op1_e3_l_383948#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_343944,op1_e3_l_363946);
          tensor[3,2] dofs395D#1 = femDofs3957;
          tensor[3] basisResult395E#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_393949#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,dofs395D,basisResult395E,_t307F);
          tensor[2,2] op1_e3_l_40394A#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_373947,op1_e3_l_383948);
          tensor[2] op1_e3_l_41394B#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_393949);
          tensor[2] op1_e3_l_52394C#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_40394A,op1_e3_l_41394B);
          tensor[2] op1_e3_l_61394D#2 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_40394A);
          tensor[2] op1_e3_l_62394E#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_63394F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_61394D,op1_e3_l_62394E);
          tensor[2] op1_e3_l_643950#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_63394F);
          tensor[2] op1_e3_l_653951#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_52394C);
          tensor[2] op1_e3_l_663952#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_643950);
          real op1_e3_l_753953#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_653951,op1_e3_l_663952);
          tensor[2] op1_e3_l_783954#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (op1_e3_l_753953,op1_e3_l_61394D);
          tensor[2] _t3941#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t393F,op1_e3_l_52394C,op1_e3_l_783954);
          real _t397D#1 = TensorIndex<tensor[2],[0]>(_t3941);
          bool _t397F#1 = GT<real>(_t397D,_t307D);
          real _t3981#1 = TensorIndex<tensor[2],[1]>(_t3941);
          bool _t3983#1 = GT<real>(_t3981,_t307D);
          bool _t3985#1 = BAnd(_t397F,_t3983);
          bool _t3987#1 = BAnd(_t393D,_t3985);
          if _t3987 then goto ASSIGN398B else goto JOIN398E
        ASSIGN398B:  preds = [COND3989]
          int face398A#1 = 2;
          goto JOIN398E
        JOIN398E:  preds = [ASSIGN398B,COND3989]
          int face398C#1 = phi(face398A,face38EF)
          real time398D#1 = phi(_t329F,time38F0)
          goto JOIN3991
        JOIN3991:  preds = [JOIN398E,COND38F8]
          int face398F#2 = phi(face398C,face38EF)
          real time3990#1 = phi(time398D,time38F0)
          bool _t3992#1 = NEQ<int>(face398F,face3083);
          if _t3992 then goto ASSIGN3996 else goto ASSIGN39BD
        ASSIGN3996:  preds = [COND3994]
          real _t3995#1 = Max<real>(time3990,_t3087);
          real _t3997#1 = IntToReal(face398F);
          tensor[2] _t3999#1 = <tensor[2]>[_t3995,_t3997];
          goto JOIN399D
        JOIN399D:  preds = [ASSIGN399A,ASSIGN39BD]
          tensor[2] _t399B#1 = phi(_t3999,_t399C)
          real _t399E#1 = TensorIndex<tensor[2],[1]>(_t399B);
          real t39A1#1 = Floor<1>(_t399E);
          int _t39A0#1 = RealToInt<1>(t39A1);
          femData:MeshPos p39A4#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t2F5D,_t2F5B,_t359C,_t37B4,_t39A0);
          real op1_e3_l_339A7#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp2F2F,camFarVsp2F31);
          real op1_e3_l_439A8#1 = λ(T0[],T1[])<(T0 * T1)> (newTime33AF,op1_e3_l_339A7);
          real newRayTime39A6#3 = λ(T0[],T1[])<(T0 + T1)> (camNearVsp2F2F,op1_e3_l_439A8);
          real[] normalizedTimes39AC#1 = Append<real>(normalizedTimes3067,newRayTime39A6);
          femData:MeshPos[] poses39AE#1 = Append<femData:MeshPos>(poses3064,p39A4);
          bool _t39B0#1 = GT<real>(startTime39B1,newRayTime39A6);
          if _t39B0 then goto JOIN39B7 else goto JOIN39B7
        JOIN39B7:  preds = [COND39B3,COND39B3]
          real startTime39B4#1 = phi(newRayTime39A6,startTime39B1)
          int currentCellInt39B5#1 = phi(cellIntersects306C,currentCellInt39B6)
          int _t39B8#1 = 1;
          int cellIntersects39BA#1 = IAdd(cellIntersects306C,_t39B8);
          goto JOIN39BC
        JOIN39BC:  preds = [ASSIGN39BB,COND33B3]
          real startTime3071#1 = phi(startTime39B4,startTime39B1)
          int currentCellInt3074#1 = phi(currentCellInt39B5,currentCellInt39B6)
          int cellIntersects3076#1 = phi(cellIntersects39BA,cellIntersects306C)
          real[] normalizedTimes3078#1 = phi(normalizedTimes39AC,normalizedTimes3067)
          femData:MeshPos[] poses307A#1 = phi(poses39AE,poses3064)
          goto JOIN307B
        ASSIGN39BD:  preds = [COND3994]
          tensor[2] _t399C#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN399D
        ASSIGN39BE:  preds = [COND37A8]
          tensor[2] _t37B0#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN37B1
        ASSIGN39BF:  preds = [COND3590]
          tensor[2] _t3598#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN3599
        ASSIGN39C0:  preds = [COND33A5]
          tensor[2] _t33AD#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN33AE
        ASSIGN39C3:  preds = [FOREACH2F55]
          int _t39C2#1 = 0;
          bool _t39C4#1 = NEQ<int>(cellIntersects306C,_t39C2);
          if _t39C4 then goto ASSIGN39C8 else goto ASSIGN3A14
        ASSIGN39C8:  preds = [COND39C6]
          femData:MeshPos pos39C7#4 = Subscript<femData:MeshPos[]>(poses3064,currentCellInt39B6);
          real rayN39C9#2 = Subscript<real[]>(normalizedTimes3067,currentCellInt39B6);
          tensor[3] op1_e3_l_339CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN39C9,rayVec2F2D);
          tensor[3] _t39CB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig2F2B,op1_e3_l_339CC);
          tensor[3][2] _t39CF#1 = <tensor[3][2]>{rayOrig2F2B,_t39CB};
          tensor[3][] _t39D1#1 = MkDynamic<tensor[3],2>(_t39CF);
          tensor[3][] spaceInter39D3#1 = Concat<tensor[3]>(spaceInter2F3D,_t39D1);
          tensor[2] _t39D5#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos39C7);
          tensor[2][1] _t39D7#1 = <tensor[2][1]>{_t39D5};
          tensor[2][] _t39D9#1 = MkDynamic<tensor[2],1>(_t39D7);
          femData:Mesh _t39DB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos39C7);
          int _t39DD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos39C7);
          femData:MeshCell currentCell39DF#2 = LoadFem<femData:MeshCell>(_t39DB,_t39DD);
          femData:MeshCell[1] _t39E1#1 = <femData:MeshCell[1]>{currentCell39DF};
          femData:MeshCell[] _t39E3#1 = MkDynamic<femData:MeshCell,1>(_t39E1);
          string _t39E5#1 = "In the interval:";
          tensor[2] _t39E7#1 = <tensor[2]>[camNearVsp2F2F,camFarVsp2F31];
          string _t39E9#3 = "\n";
          Print<[string,tensor[2],string]>(_t39E5,_t39E7,_t39E9);
          string _t39EC#1 = "Possible times:";
          Print<[string,real[],string]>(_t39EC,normalizedTimes3067,_t39E9);
          string _t39EF#1 = "cells:";
          femData:MeshCell[] accum39F1#1 = <femData:MeshCell[]>{};
        FOREACH39F4:  preds = [ASSIGN39F2,NEXT39FE]
          foreach (p39F3 in poses3064) on exit goto MASSIGN39FF
            femData:MeshCell[] accum39FC#2 = phi(accum39F1,accum39FB)
          femData:Mesh _t39F5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p39F3);
          int _t39F7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p39F3);
          femData:MeshCell _t39F9#1 = LoadFem<femData:MeshCell>(_t39F5,_t39F7);
          femData:MeshCell[] accum39FB#1 = Append<femData:MeshCell>(accum39FC,_t39F9);
          goto FOREACH39F4
        MASSIGN39FF:  preds = [FOREACH39F4]
          Print<[string,femData:MeshCell[],string]>(_t39EF,accum39FC,_t39E9);
          goto JOIN3A06
        JOIN3A06:  preds = [MASSIGN39FF,*STABILIZE3A22]
          femData:MeshPos pos3A00#1 = phi(pos39C7)
          femData:MeshCell currentCell3A01#1 = phi(currentCell39DF)
          real rayN3A02#1 = phi(rayN39C9)
          femData:MeshCell[] cellInter3A03#1 = phi(_t39E3)
          tensor[2][] refSpaceInter3A04#1 = phi(_t39D9)
          tensor[3][] spaceInter3A05#1 = phi(spaceInter39D3)
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.spaceInter = spaceInter3A05;
          self.refSpaceInter = refSpaceInter3A04;
          self.cellInter = cellInter3A03;
          self.currentCellInt = currentCellInt39B6;
          self.rayN = rayN3A02;
          self.currentCell = currentCell3A01;
          self.pos = pos3A00;
          self.startsInside = startsInside39C1;
          active
        ASSIGN3A14:  preds = [COND39C6]
          string _t3A13#1 = "No intersection!\n";
          Print<[string]>(_t3A13);
          string _t3A16#1 = "Ui: ";
          string _t3A18#1 = " Vi:";
          string _t3A1A#1 = "\n";
          Print<[string,int,string,int,string]>(_t3A16,ui2F43,_t3A18,vi2F45,_t3A1A);
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.currentCellInt = currentCellInt39B6;
          self.startsInside = startsInside39C1;
          stabilize
          goto JOIN3A06
        ASSIGN3A23:  preds = [COND2F49]
          bool _t2F4D#1 = NEQ<int>(vi2F45,debugV2F29);
          goto JOIN2F4E
    end start
    method update
        ENTRY3A24:  preds = []
          tensor[3] rayOrig3A25#4 = self.rayOrig;
          tensor[3] rayVec3A27#6 = self.rayVec;
          real camFarVsp3A29#6 = self.camFarVsp;
          femData:MeshPos[] poses3A2B#2 = self.poses;
          real[] normalizedTimes3A2D#4 = self.normalizedTimes;
          int cellIntersects3A2F#1 = self.cellIntersects;
          tensor[2][] rayCellInter3A31#2 = self.rayCellInter;
          tensor[3][] spaceInter3A33#3 = self.spaceInter;
          tensor[2][] refSpaceInter3A35#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter3A37#4 = self.cellInter;
          real rayN3A39#8 = self.rayN;
          femData:MeshCell currentCell3A3B#2 = self.currentCell;
          int steps3A3D#1 = self.steps;
          femData:MeshPos pos3A3F#8 = self.pos;
          bool startsInside3A41#2 = self.startsInside;
          int ui3A43#1 = self.ui;
          int vi3A45#1 = self.vi;
          string _t3A47#1 = "Ui: ";
          string _t3A49#1 = " vi: ";
          string _t3A4B#21 = "\n";
          Print<[string,int,string,int,string]>(_t3A47,ui3A43,_t3A49,vi3A45,_t3A4B);
          string _t3A4E#1 = "The current ref pos is:";
          tensor[2] _t3A50#9 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3A3F);
          Print<[string,tensor[2],string]>(_t3A4E,_t3A50,_t3A4B);
          string _t3A53#1 = "Current cell:";
          femData:Mesh _t3A55#11 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3A3F);
          int _t3A57#5 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3A3F);
          femData:MeshCell _t3A59#3 = LoadFem<femData:MeshCell>(_t3A55,_t3A57);
          Print<[string,femData:MeshCell,string]>(_t3A53,_t3A59,_t3A4B);
          string _t3A5C#1 = "The current time is:";
          Print<[string,real,string]>(_t3A5C,rayN3A39,_t3A4B);
          string _t3A5F#2 = "The current world pos is:";
          int[3] femIndicies3A63#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3A55,_t3A57);
          tensor[3,2] femDofs3A64#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3A55,femIndicies3A63);
          tensor[3,2] dofs3A62#1 = femDofs3A64;
          tensor[3] basisResult3A65#1 = EvaluateBasis<BasisArray(3)>(_t3A50);
          tensor[2] _t3A61#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A55,_t3A50,dofs3A62,basisResult3A65,_t3A50);
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          tensor[3] op1_e3_l_33A6D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN3A39,rayVec3A27);
          tensor[3] stupid3A6C#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33A6D);
          string _t3A70#2 = "The current world pos should be:";
          real _t3A72#1 = TensorIndex<tensor[3],[0]>(stupid3A6C);
          real _t3A74#1 = TensorIndex<tensor[3],[1]>(stupid3A6C);
          tensor[2] _t3A76#3 = <tensor[2]>[_t3A72,_t3A74];
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          real _t3A79#10 = 0.1e1;
          real _t3A7B#3 = 0.1e-8;
          real _t3A7D#1 = λ(T0[],T1[])<(T0 + T1)> (_t3A79,_t3A7B);
          tensor[2] _t3A7F#1 = <tensor[2]>[_t3A79,_t3A79];
          real _t3A81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3A7F,_t3A50);
          bool _t3A83#1 = GT<real>(_t3A7D,_t3A81);
          tensor[2] _t3A85#1 = <tensor[2]>[_t3A7B,_t3A7B];
          tensor[2] _t3A87#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3A85,_t3A50);
          real _t3A89#1 = TensorIndex<tensor[2],[0]>(_t3A87);
          real _t3A8B#4 = -0.e0;
          bool _t3A8D#1 = GT<real>(_t3A89,_t3A8B);
          real _t3A8F#1 = TensorIndex<tensor[2],[1]>(_t3A87);
          bool _t3A91#1 = GT<real>(_t3A8F,_t3A8B);
          bool _t3A93#1 = BAnd(_t3A8D,_t3A91);
          bool _t3A95#1 = BAnd(_t3A83,_t3A93);
          bool _t3A97#1 = BNot(_t3A95);
          if _t3A97 then goto ASSIGN3A9B else goto JOIN3AA4
        ASSIGN3A9B:  preds = [COND3A99]
          string _t3A9A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t3A9A);
          bool _t3A9D#1 = BNot(startsInside3A41);
          if _t3A9D then goto ASSIGN3AA1 else goto JOIN3AA3
        ASSIGN3AA1:  preds = [COND3A9F]
          string _t3AA0#1 = "Not because of an inside\n";
          Print<[string]>(_t3AA0);
          goto JOIN3AA3
        JOIN3AA3:  preds = [MASSIGN3AA2,COND3A9F]
          goto JOIN3AA4
        JOIN3AA4:  preds = [JOIN3AA3,COND3A99]
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          int[3] femIndicies3AAC#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3A55,_t3A57);
          tensor[3,2] femDofs3AAD#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3A55,femIndicies3AAC);
          tensor[3,2] dofs3AAB#1 = femDofs3AAD;
          tensor[3] basisResult3AAE#1 = EvaluateBasis<BasisArray(3)>(_t3A50);
          tensor[2] probe_l_53AA8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A50,dofs3AAB,basisResult3AAE,_t3A50);
          tensor[2] op1_e3_l_73AA9#2 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (_t3A76,probe_l_53AA8);
          real op1_e3_l_93AAA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_73AA9,op1_e3_l_73AA9);
          real err3AA7#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_93AAA);
          real _t3AB7#1 = 0.1e-4;
          bool _t3AB9#1 = GT<real>(err3AA7,_t3AB7);
          if _t3AB9 then goto ASSIGN3ABD else goto ASSIGN3F47
        ASSIGN3ABD:  preds = [COND3ABB]
          string _t3ABC#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t3ABC,err3AA7,_t3A4B);
          goto JOIN3ABF
        JOIN3ABF:  preds = [MASSIGN3ABE,MASSIGN3F48]
          int _t3AC0#13 = 1;
          int steps3AC2#4 = IAdd(steps3A3D,_t3AC0);
          string _t3AC4#1 = "Orig:";
          string _t3AC6#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t3AC4,rayOrig3A25,_t3AC6,rayVec3A27,_t3A4B);
          real op1_e3_l_33ACA#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp3A29,rayN3A39);
          tensor[3] newDpos3AC9#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec3A27,op1_e3_l_33ACA);
          tensor[2] _t3ACD#8 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos3A3F);
          femData:Mesh _t3ACF#70 = ExtractFem<femData:Mesh,femData:MeshCell>(_t3A59);
          int _t3AD1#56 = ExtractFemItem<int,CellIndex(MeshCell)>(_t3A59);
          tensor[2] _t3AD3#126 = <tensor[2]>[_t3A8B,_t3A8B];
          real _t3AD5#1 = TensorIndex<tensor[3],[0]>(newDpos3AC9);
          real _t3AD7#1 = TensorIndex<tensor[3],[1]>(newDpos3AC9);
          tensor[2] _t3AD9#14 = <tensor[2]>[_t3AD5,_t3AD7];
          int _t3ADB#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos3A3F);
          real time3ADD#6 = +inf;
          int face3ADF#9 = -1;
          real faceTime3AE1#6 = -inf;
          real _t3AE3#14 = 0.e0;
          tensor[2] _t3AE5#10 = <tensor[2]>[_t3A79,_t3AE3];
          real _t3AE7#6 = -0.1e1;
          tensor[2] _t3AE9#7 = <tensor[2]>[_t3AE7,_t3A79];
          int[3] femIndicies3AFB#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3AFC#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3AFB);
          tensor[3,2] dofs3AFA#1 = femDofs3AFC;
          tensor[2,3] basisResult3AFD#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93AEC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3AFA,basisResult3AFD,_t3AD3);
          tensor[2,2] op1_e3_l_103AED#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93AEC);
          tensor[3,2] dofs3AFE#1 = femDofs3AFC;
          tensor[2,3] basisResult3AFF#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113AEE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3AFE,basisResult3AFF,_t3AD3);
          tensor[3,2] dofs3B00#1 = femDofs3AFC;
          tensor[2,3] basisResult3B01#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123AEF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3B00,basisResult3B01,_t3AD3);
          tensor[2] op1_e3_l_133AF0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123AEF);
          tensor[2,2] op1_e3_l_143AF1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103AED);
          real op1_e3_l_153AF2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113AEE,op1_e3_l_133AF0);
          tensor[2,2] op1_e3_l_163AF3#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143AF1,op1_e3_l_153AF2);
          tensor[2] op1_e3_l_173AF4#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163AF3);
          tensor[2] op1_e3_l_183AF5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_193AF6#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183AF5);
          tensor[2] op1_e3_l_203AF7#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE9,op1_e3_l_193AF6);
          tensor[2] op1_e3_l_213AF8#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3AE5,_t3ACD);
          tensor[2] op1_e3_l_223AF9#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203AF7);
          real _t3AEB#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213AF8,op1_e3_l_223AF9);
          real _t3B19#6 = -0.1e-15;
          bool _t3B1B#1 = GTE<real>(_t3AEB,_t3B19);
          bool _t3B1D#1 = GT<real>(time3ADD,_t3AEB);
          int[3] femIndicies3B2C#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3B2D#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3B2C);
          tensor[3,2] dofs3B2B#1 = femDofs3B2D;
          tensor[2,3] basisResult3B2E#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63B20#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3B2B,basisResult3B2E,_t3AD3);
          tensor[2,2] op1_e3_l_73B21#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63B20);
          tensor[3,2] dofs3B2F#1 = femDofs3B2D;
          tensor[2,3] basisResult3B30#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83B22#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3B2F,basisResult3B30,_t3AD3);
          tensor[3,2] dofs3B31#1 = femDofs3B2D;
          tensor[2,3] basisResult3B32#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93B23#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3B31,basisResult3B32,_t3AD3);
          tensor[2] op1_e3_l_103B24#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93B23);
          tensor[2,2] op1_e3_l_113B25#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73B21);
          real op1_e3_l_123B26#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83B22,op1_e3_l_103B24);
          tensor[2,2] op1_e3_l_133B27#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113B25,op1_e3_l_123B26);
          tensor[2] op1_e3_l_143B28#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133B27);
          tensor[2] op1_e3_l_153B29#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_163B2A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143B28,op1_e3_l_153B29);
          real _t3B1F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163B2A);
          real _t3B47#6 = 0.1e-20;
          bool _t3B49#1 = GTE<real>(_t3B1F,_t3B47);
          bool _t3B4B#1 = BAnd(_t3B1D,_t3B49);
          bool _t3B4D#1 = BAnd(_t3B1B,_t3B4B);
          if _t3B4D then goto ASSIGN3B51 else goto JOIN3B5C
        ASSIGN3B51:  preds = [COND3B4F]
          int _t3B50#2 = 0;
          bool _t3B52#1 = NEQ<int>(_t3ADB,_t3B50);
          if _t3B52 then goto JOIN3B58 else goto JOIN3B58
        JOIN3B58:  preds = [COND3B54,COND3B54]
          real faceTime3B55#1 = phi(faceTime3AE1,_t3AEB)
          int face3B56#1 = phi(_t3B50,face3ADF)
          real time3B57#1 = phi(_t3AEB,time3ADD)
          goto JOIN3B5C
        JOIN3B5C:  preds = [JOIN3B58,COND3B4F]
          real faceTime3B59#2 = phi(faceTime3B55,faceTime3AE1)
          int face3B5A#2 = phi(face3B56,face3ADF)
          real time3B5B#3 = phi(time3B57,time3ADD)
          tensor[2] _t3B5D#6 = <tensor[2]>[_t3AE3,_t3AE3];
          tensor[2] _t3B5F#7 = <tensor[2]>[_t3AE3,_t3A79];
          int[3] femIndicies3B71#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3B72#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3B71);
          tensor[3,2] dofs3B70#1 = femDofs3B72;
          tensor[2,3] basisResult3B73#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93B62#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3B70,basisResult3B73,_t3AD3);
          tensor[2,2] op1_e3_l_103B63#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93B62);
          tensor[3,2] dofs3B74#1 = femDofs3B72;
          tensor[2,3] basisResult3B75#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113B64#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3B74,basisResult3B75,_t3AD3);
          tensor[3,2] dofs3B76#1 = femDofs3B72;
          tensor[2,3] basisResult3B77#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123B65#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3B76,basisResult3B77,_t3AD3);
          tensor[2] op1_e3_l_133B66#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123B65);
          tensor[2,2] op1_e3_l_143B67#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103B63);
          real op1_e3_l_153B68#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113B64,op1_e3_l_133B66);
          tensor[2,2] op1_e3_l_163B69#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143B67,op1_e3_l_153B68);
          tensor[2] op1_e3_l_173B6A#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163B69);
          tensor[2] op1_e3_l_183B6B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_193B6C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173B6A,op1_e3_l_183B6B);
          tensor[2] op1_e3_l_203B6D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3B5F,op1_e3_l_193B6C);
          tensor[2] op1_e3_l_213B6E#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223B6F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203B6D);
          real _t3B61#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223B6F);
          bool _t3B8F#1 = GTE<real>(_t3B61,_t3B19);
          bool _t3B91#1 = GT<real>(time3B5B,_t3B61);
          int[3] femIndicies3BA0#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3BA1#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3BA0);
          tensor[3,2] dofs3B9F#1 = femDofs3BA1;
          tensor[2,3] basisResult3BA2#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63B94#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3B9F,basisResult3BA2,_t3AD3);
          tensor[2,2] op1_e3_l_73B95#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63B94);
          tensor[3,2] dofs3BA3#1 = femDofs3BA1;
          tensor[2,3] basisResult3BA4#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83B96#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3BA3,basisResult3BA4,_t3AD3);
          tensor[3,2] dofs3BA5#1 = femDofs3BA1;
          tensor[2,3] basisResult3BA6#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93B97#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3BA5,basisResult3BA6,_t3AD3);
          tensor[2] op1_e3_l_103B98#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93B97);
          tensor[2,2] op1_e3_l_113B99#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73B95);
          real op1_e3_l_123B9A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83B96,op1_e3_l_103B98);
          tensor[2,2] op1_e3_l_133B9B#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113B99,op1_e3_l_123B9A);
          tensor[2] op1_e3_l_143B9C#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133B9B);
          tensor[2] op1_e3_l_153B9D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_163B9E#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143B9C,op1_e3_l_153B9D);
          real _t3B93#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163B9E);
          bool _t3BBB#1 = GTE<real>(_t3B93,_t3B47);
          bool _t3BBD#1 = BAnd(_t3B91,_t3BBB);
          bool _t3BBF#1 = BAnd(_t3B8F,_t3BBD);
          if _t3BBF then goto ASSIGN3BC3 else goto JOIN3BCC
        ASSIGN3BC3:  preds = [COND3BC1]
          bool _t3BC2#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3BC2 then goto JOIN3BC8 else goto JOIN3BC8
        JOIN3BC8:  preds = [COND3BC4,COND3BC4]
          real faceTime3BC5#1 = phi(faceTime3B59,_t3B61)
          int face3BC6#1 = phi(_t3AC0,face3B5A)
          real time3BC7#1 = phi(_t3B61,time3B5B)
          goto JOIN3BCC
        JOIN3BCC:  preds = [JOIN3BC8,COND3BC1]
          real faceTime3BC9#2 = phi(faceTime3BC5,faceTime3B59)
          int face3BCA#2 = phi(face3BC6,face3B5A)
          real time3BCB#3 = phi(time3BC7,time3B5B)
          int[3] femIndicies3BDD#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3BDE#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3BDD);
          tensor[3,2] dofs3BDC#1 = femDofs3BDE;
          tensor[2,3] basisResult3BDF#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93BCE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3BDC,basisResult3BDF,_t3AD3);
          tensor[2,2] op1_e3_l_103BCF#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93BCE);
          tensor[3,2] dofs3BE0#1 = femDofs3BDE;
          tensor[2,3] basisResult3BE1#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113BD0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3BE0,basisResult3BE1,_t3AD3);
          tensor[3,2] dofs3BE2#1 = femDofs3BDE;
          tensor[2,3] basisResult3BE3#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123BD1#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3BE2,basisResult3BE3,_t3AD3);
          tensor[2] op1_e3_l_133BD2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123BD1);
          tensor[2,2] op1_e3_l_143BD3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103BCF);
          real op1_e3_l_153BD4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113BD0,op1_e3_l_133BD2);
          tensor[2,2] op1_e3_l_163BD5#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143BD3,op1_e3_l_153BD4);
          tensor[2] op1_e3_l_173BD6#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163BD5);
          tensor[2] op1_e3_l_183BD7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_193BD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173BD6,op1_e3_l_183BD7);
          tensor[2] op1_e3_l_203BD9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE5,op1_e3_l_193BD8);
          tensor[2] op1_e3_l_213BDA#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223BDB#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203BD9);
          real _t3BCD#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213BDA,op1_e3_l_223BDB);
          bool _t3BFB#1 = GTE<real>(_t3BCD,_t3B19);
          bool _t3BFD#1 = GT<real>(time3BCB,_t3BCD);
          int[3] femIndicies3C0C#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3C0D#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3C0C);
          tensor[3,2] dofs3C0B#1 = femDofs3C0D;
          tensor[2,3] basisResult3C0E#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63C00#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3C0B,basisResult3C0E,_t3AD3);
          tensor[2,2] op1_e3_l_73C01#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63C00);
          tensor[3,2] dofs3C0F#1 = femDofs3C0D;
          tensor[2,3] basisResult3C10#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83C02#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3C0F,basisResult3C10,_t3AD3);
          tensor[3,2] dofs3C11#1 = femDofs3C0D;
          tensor[2,3] basisResult3C12#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93C03#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3C11,basisResult3C12,_t3AD3);
          tensor[2] op1_e3_l_103C04#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93C03);
          tensor[2,2] op1_e3_l_113C05#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73C01);
          real op1_e3_l_123C06#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83C02,op1_e3_l_103C04);
          tensor[2,2] op1_e3_l_133C07#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113C05,op1_e3_l_123C06);
          tensor[2] op1_e3_l_143C08#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133C07);
          tensor[2] op1_e3_l_153C09#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_163C0A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143C08,op1_e3_l_153C09);
          real _t3BFF#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163C0A);
          bool _t3C27#1 = GTE<real>(_t3BFF,_t3B47);
          bool _t3C29#1 = BAnd(_t3BFD,_t3C27);
          bool _t3C2B#1 = BAnd(_t3BFB,_t3C29);
          if _t3C2B then goto ASSIGN3C2F else goto JOIN3C3A
        ASSIGN3C2F:  preds = [COND3C2D]
          int _t3C2E#2 = 2;
          bool _t3C30#1 = NEQ<int>(_t3ADB,_t3C2E);
          if _t3C30 then goto JOIN3C36 else goto JOIN3C36
        JOIN3C36:  preds = [COND3C32,COND3C32]
          real faceTime3C33#1 = phi(faceTime3BC9,_t3BCD)
          int face3C34#1 = phi(_t3C2E,face3BCA)
          real time3C35#1 = phi(_t3BCD,time3BCB)
          goto JOIN3C3A
        JOIN3C3A:  preds = [JOIN3C36,COND3C2D]
          real faceTime3C37#2 = phi(faceTime3C33,faceTime3BC9)
          int face3C38#2 = phi(face3C34,face3BCA)
          real time3C39#1 = phi(time3C35,time3BCB)
          bool _t3C3B#1 = NEQ<int>(face3C38,face3ADF);
          if _t3C3B then goto ASSIGN3C3F else goto ASSIGN3F3D
        ASSIGN3C3F:  preds = [COND3C3D]
          real _t3C3E#1 = Max<real>(time3C39,_t3AE3);
          real _t3C40#1 = IntToReal(face3C38);
          tensor[2] _t3C42#1 = <tensor[2]>[_t3C3E,_t3C40];
          goto JOIN3C46
        JOIN3C46:  preds = [ASSIGN3C43,JOIN3F42]
          tensor[2] _t3C44#1 = phi(_t3C42,_t3C45)
          real nextTime3C47#3 = TensorIndex<tensor[2],[0]>(_t3C44);
          real op1_e3_l_33C4A#1 = λ(T0[],T1[])<(T1) - (T0)> (rayN3A39,camFarVsp3A29);
          real op1_e3_l_43C4B#1 = λ(T0[],T1[])<(T0 * T1)> (nextTime3C47,op1_e3_l_33C4A);
          real _t3C49#1 = λ(T0[],T1[])<(T0 + T1)> (rayN3A39,op1_e3_l_43C4B);
          real _t3C4F#1 = Min<real>(camFarVsp3A29,_t3C49);
          real rayNp3C51#6 = Max<real>(rayN3A39,_t3C4F);
          string _t3C53#1 = "Next time:";
          Print<[string,real,string]>(_t3C53,nextTime3C47,_t3A4B);
          bool _t3C56#1 = GTE<real>(nextTime3C47,_t3AE3);
          if _t3C56 then goto ASSIGN3C5A else goto JOIN3E7E
        ASSIGN3C5A:  preds = [COND3C58]
          tensor[2] _t3C59#1 = <tensor[2]>[rayN3A39,rayNp3C51];
          tensor[2][] rayCellInter3C5B#3 = Append<tensor[2]>(rayCellInter3A31,_t3C59);
          int _t3C5D#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos3A3F);
          int[3] femIndicies3C6F#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3C70#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3C6F);
          tensor[3,2] dofs3C6E#1 = femDofs3C70;
          tensor[2,3] basisResult3C71#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93C60#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3C6E,basisResult3C71,_t3AD3);
          tensor[2,2] op1_e3_l_103C61#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93C60);
          tensor[3,2] dofs3C72#1 = femDofs3C70;
          tensor[2,3] basisResult3C73#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113C62#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3C72,basisResult3C73,_t3AD3);
          tensor[3,2] dofs3C74#1 = femDofs3C70;
          tensor[2,3] basisResult3C75#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123C63#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3C74,basisResult3C75,_t3AD3);
          tensor[2] op1_e3_l_133C64#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123C63);
          tensor[2,2] op1_e3_l_143C65#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103C61);
          real op1_e3_l_153C66#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113C62,op1_e3_l_133C64);
          tensor[2,2] op1_e3_l_163C67#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143C65,op1_e3_l_153C66);
          tensor[2] op1_e3_l_173C68#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163C67);
          tensor[2] op1_e3_l_183C69#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_193C6A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173C68,op1_e3_l_183C69);
          tensor[2] op1_e3_l_203C6B#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE9,op1_e3_l_193C6A);
          tensor[2] op1_e3_l_213C6C#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3AE5,_t3ACD);
          tensor[2] op1_e3_l_223C6D#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203C6B);
          real _t3C5F#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213C6C,op1_e3_l_223C6D);
          bool _t3C8D#1 = GTE<real>(_t3C5F,_t3B19);
          bool _t3C8F#1 = GT<real>(time3ADD,_t3C5F);
          int[3] femIndicies3C9E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3C9F#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3C9E);
          tensor[3,2] dofs3C9D#1 = femDofs3C9F;
          tensor[2,3] basisResult3CA0#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63C92#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3C9D,basisResult3CA0,_t3AD3);
          tensor[2,2] op1_e3_l_73C93#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63C92);
          tensor[3,2] dofs3CA1#1 = femDofs3C9F;
          tensor[2,3] basisResult3CA2#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83C94#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3CA1,basisResult3CA2,_t3AD3);
          tensor[3,2] dofs3CA3#1 = femDofs3C9F;
          tensor[2,3] basisResult3CA4#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93C95#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3CA3,basisResult3CA4,_t3AD3);
          tensor[2] op1_e3_l_103C96#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93C95);
          tensor[2,2] op1_e3_l_113C97#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73C93);
          real op1_e3_l_123C98#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83C94,op1_e3_l_103C96);
          tensor[2,2] op1_e3_l_133C99#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113C97,op1_e3_l_123C98);
          tensor[2] op1_e3_l_143C9A#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133C99);
          tensor[2] op1_e3_l_153C9B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_163C9C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143C9A,op1_e3_l_153C9B);
          real _t3C91#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163C9C);
          bool _t3CB9#1 = GTE<real>(_t3C91,_t3B47);
          bool _t3CBB#1 = BAnd(_t3C8F,_t3CB9);
          bool _t3CBD#1 = BAnd(_t3C8D,_t3CBB);
          if _t3CBD then goto ASSIGN3CC1 else goto JOIN3CCC
        ASSIGN3CC1:  preds = [COND3CBF]
          int _t3CC0#2 = 0;
          bool _t3CC2#1 = NEQ<int>(_t3ADB,_t3CC0);
          if _t3CC2 then goto JOIN3CC8 else goto JOIN3CC8
        JOIN3CC8:  preds = [COND3CC4,COND3CC4]
          real faceTime3CC5#1 = phi(faceTime3AE1,_t3C5F)
          int face3CC6#1 = phi(_t3CC0,face3ADF)
          real time3CC7#1 = phi(_t3C5F,time3ADD)
          goto JOIN3CCC
        JOIN3CCC:  preds = [JOIN3CC8,COND3CBF]
          real faceTime3CC9#2 = phi(faceTime3CC5,faceTime3AE1)
          int face3CCA#2 = phi(face3CC6,face3ADF)
          real time3CCB#3 = phi(time3CC7,time3ADD)
          int[3] femIndicies3CDD#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3CDE#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3CDD);
          tensor[3,2] dofs3CDC#1 = femDofs3CDE;
          tensor[2,3] basisResult3CDF#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93CCE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3CDC,basisResult3CDF,_t3AD3);
          tensor[2,2] op1_e3_l_103CCF#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93CCE);
          tensor[3,2] dofs3CE0#1 = femDofs3CDE;
          tensor[2,3] basisResult3CE1#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113CD0#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3CE0,basisResult3CE1,_t3AD3);
          tensor[3,2] dofs3CE2#1 = femDofs3CDE;
          tensor[2,3] basisResult3CE3#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123CD1#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3CE2,basisResult3CE3,_t3AD3);
          tensor[2] op1_e3_l_133CD2#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123CD1);
          tensor[2,2] op1_e3_l_143CD3#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103CCF);
          real op1_e3_l_153CD4#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113CD0,op1_e3_l_133CD2);
          tensor[2,2] op1_e3_l_163CD5#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143CD3,op1_e3_l_153CD4);
          tensor[2] op1_e3_l_173CD6#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163CD5);
          tensor[2] op1_e3_l_183CD7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_193CD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173CD6,op1_e3_l_183CD7);
          tensor[2] op1_e3_l_203CD9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3B5F,op1_e3_l_193CD8);
          tensor[2] op1_e3_l_213CDA#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223CDB#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203CD9);
          real _t3CCD#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213CDA,op1_e3_l_223CDB);
          bool _t3CFB#1 = GTE<real>(_t3CCD,_t3B19);
          bool _t3CFD#1 = GT<real>(time3CCB,_t3CCD);
          int[3] femIndicies3D0C#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3D0D#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3D0C);
          tensor[3,2] dofs3D0B#1 = femDofs3D0D;
          tensor[2,3] basisResult3D0E#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63D00#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3D0B,basisResult3D0E,_t3AD3);
          tensor[2,2] op1_e3_l_73D01#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63D00);
          tensor[3,2] dofs3D0F#1 = femDofs3D0D;
          tensor[2,3] basisResult3D10#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83D02#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D0F,basisResult3D10,_t3AD3);
          tensor[3,2] dofs3D11#1 = femDofs3D0D;
          tensor[2,3] basisResult3D12#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93D03#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D11,basisResult3D12,_t3AD3);
          tensor[2] op1_e3_l_103D04#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93D03);
          tensor[2,2] op1_e3_l_113D05#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73D01);
          real op1_e3_l_123D06#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83D02,op1_e3_l_103D04);
          tensor[2,2] op1_e3_l_133D07#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113D05,op1_e3_l_123D06);
          tensor[2] op1_e3_l_143D08#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133D07);
          tensor[2] op1_e3_l_153D09#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_163D0A#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143D08,op1_e3_l_153D09);
          real _t3CFF#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163D0A);
          bool _t3D27#1 = GTE<real>(_t3CFF,_t3B47);
          bool _t3D29#1 = BAnd(_t3CFD,_t3D27);
          bool _t3D2B#1 = BAnd(_t3CFB,_t3D29);
          if _t3D2B then goto ASSIGN3D2F else goto JOIN3D38
        ASSIGN3D2F:  preds = [COND3D2D]
          bool _t3D2E#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3D2E then goto JOIN3D34 else goto JOIN3D34
        JOIN3D34:  preds = [COND3D30,COND3D30]
          real faceTime3D31#1 = phi(faceTime3CC9,_t3CCD)
          int face3D32#1 = phi(_t3AC0,face3CCA)
          real time3D33#1 = phi(_t3CCD,time3CCB)
          goto JOIN3D38
        JOIN3D38:  preds = [JOIN3D34,COND3D2D]
          real faceTime3D35#2 = phi(faceTime3D31,faceTime3CC9)
          int face3D36#2 = phi(face3D32,face3CCA)
          real time3D37#3 = phi(time3D33,time3CCB)
          int[3] femIndicies3D49#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3D4A#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3D49);
          tensor[3,2] dofs3D48#1 = femDofs3D4A;
          tensor[2,3] basisResult3D4B#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93D3A#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3D48,basisResult3D4B,_t3AD3);
          tensor[2,2] op1_e3_l_103D3B#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93D3A);
          tensor[3,2] dofs3D4C#1 = femDofs3D4A;
          tensor[2,3] basisResult3D4D#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_113D3C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D4C,basisResult3D4D,_t3AD3);
          tensor[3,2] dofs3D4E#1 = femDofs3D4A;
          tensor[2,3] basisResult3D4F#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_123D3D#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D4E,basisResult3D4F,_t3AD3);
          tensor[2] op1_e3_l_133D3E#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123D3D);
          tensor[2,2] op1_e3_l_143D3F#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103D3B);
          real op1_e3_l_153D40#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113D3C,op1_e3_l_133D3E);
          tensor[2,2] op1_e3_l_163D41#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143D3F,op1_e3_l_153D40);
          tensor[2] op1_e3_l_173D42#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163D41);
          tensor[2] op1_e3_l_183D43#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_193D44#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173D42,op1_e3_l_183D43);
          tensor[2] op1_e3_l_203D45#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE5,op1_e3_l_193D44);
          tensor[2] op1_e3_l_213D46#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223D47#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203D45);
          real _t3D39#4 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213D46,op1_e3_l_223D47);
          bool _t3D67#1 = GTE<real>(_t3D39,_t3B19);
          bool _t3D69#1 = GT<real>(time3D37,_t3D39);
          int[3] femIndicies3D78#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3D79#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3D78);
          tensor[3,2] dofs3D77#1 = femDofs3D79;
          tensor[2,3] basisResult3D7A#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_63D6C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3D77,basisResult3D7A,_t3AD3);
          tensor[2,2] op1_e3_l_73D6D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_63D6C);
          tensor[3,2] dofs3D7B#1 = femDofs3D79;
          tensor[2,3] basisResult3D7C#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_83D6E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D7B,basisResult3D7C,_t3AD3);
          tensor[3,2] dofs3D7D#1 = femDofs3D79;
          tensor[2,3] basisResult3D7E#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93D6F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3D7D,basisResult3D7E,_t3AD3);
          tensor[2] op1_e3_l_103D70#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_93D6F);
          tensor[2,2] op1_e3_l_113D71#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_73D6D);
          real op1_e3_l_123D72#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_83D6E,op1_e3_l_103D70);
          tensor[2,2] op1_e3_l_133D73#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_113D71,op1_e3_l_123D72);
          tensor[2] op1_e3_l_143D74#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_133D73);
          tensor[2] op1_e3_l_153D75#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_163D76#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_143D74,op1_e3_l_153D75);
          real _t3D6B#1 = λ(T0[])<Abs(T0)> (op1_e3_l_163D76);
          bool _t3D93#1 = GTE<real>(_t3D6B,_t3B47);
          bool _t3D95#1 = BAnd(_t3D69,_t3D93);
          bool _t3D97#1 = BAnd(_t3D67,_t3D95);
          if _t3D97 then goto ASSIGN3D9B else goto JOIN3DA6
        ASSIGN3D9B:  preds = [COND3D99]
          int _t3D9A#2 = 2;
          bool _t3D9C#1 = NEQ<int>(_t3ADB,_t3D9A);
          if _t3D9C then goto JOIN3DA2 else goto JOIN3DA2
        JOIN3DA2:  preds = [COND3D9E,COND3D9E]
          real faceTime3D9F#1 = phi(faceTime3D35,_t3D39)
          int face3DA0#1 = phi(_t3D9A,face3D36)
          real time3DA1#1 = phi(_t3D39,time3D37)
          goto JOIN3DA6
        JOIN3DA6:  preds = [JOIN3DA2,COND3D99]
          real faceTime3DA3#2 = phi(faceTime3D9F,faceTime3D35)
          int face3DA4#2 = phi(face3DA0,face3D36)
          real time3DA5#1 = phi(time3DA1,time3D37)
          bool _t3DA7#1 = NEQ<int>(face3DA4,face3ADF);
          if _t3DA7 then goto ASSIGN3DAB else goto ASSIGN3F33
        ASSIGN3DAB:  preds = [COND3DA9]
          real _t3DAA#1 = Max<real>(time3DA5,_t3AE3);
          real _t3DAC#1 = IntToReal(face3DA4);
          tensor[2] _t3DAE#1 = <tensor[2]>[_t3DAA,_t3DAC];
          goto JOIN3DB2
        JOIN3DB2:  preds = [ASSIGN3DAF,JOIN3F38]
          tensor[2] _t3DB0#3 = phi(_t3DAE,_t3DB1)
          real _t3DB3#1 = TensorIndex<tensor[2],[1]>(_t3DB0);
          real t3DB6#1 = Floor<1>(_t3DB3);
          int _t3DB5#6 = RealToInt<1>(t3DB6);
          int[2] _t3DCB#2 = nextCell43DB9 (_t3DB5,_t3C5D,_t3A55);
          int _t3DCD#4 = 0;
          int _t3DCF#2 = Subscript<int[2]>(_t3DCB,_t3DCD);
          bool _t3DD1#1 = NEQ<int>(face3ADF,_t3DCF);
          if _t3DD1 then goto ASSIGN3DD5 else goto ASSIGN3F0A
        ASSIGN3DD5:  preds = [COND3DD3]
          tensor[2][3] _t3DD4#1 = <tensor[2][3]>{_t3AE5,_t3B5D,_t3B5D};
          int _t3DD6#3 = Subscript<int[2]>(_t3DCB,_t3AC0);
          tensor[2] _t3DD8#1 = Subscript<tensor[2][3]>(_t3DD4,_t3DD6);
          tensor[2][3] _t3DDA#1 = <tensor[2][3]>{_t3AE9,_t3B5F,_t3AE5};
          tensor[2] _t3DDC#1 = Subscript<tensor[2][3]>(_t3DDA,_t3DD6);
          real _t3DDE#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          int[3] femIndicies3DEC#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3DED#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3DEC);
          tensor[3,2] dofs3DEB#1 = femDofs3DED;
          tensor[2,3] basisResult3DEE#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_73DE1#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3DEB,basisResult3DEE,_t3AD3);
          tensor[2,2] op1_e3_l_83DE2#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_73DE1);
          tensor[3,2] dofs3DEF#1 = femDofs3DED;
          tensor[2,3] basisResult3DF0#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93DE3#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3DEF,basisResult3DF0,_t3AD3);
          tensor[3,2] dofs3DF1#1 = femDofs3DED;
          tensor[2,3] basisResult3DF2#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_103DE4#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3DF1,basisResult3DF2,_t3AD3);
          tensor[2] op1_e3_l_113DE5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_103DE4);
          tensor[2,2] op1_e3_l_123DE6#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_83DE2);
          real op1_e3_l_133DE7#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_93DE3,op1_e3_l_113DE5);
          tensor[2,2] op1_e3_l_143DE8#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_123DE6,op1_e3_l_133DE7);
          tensor[2] op1_e3_l_153DE9#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_143DE8);
          tensor[2] op1_e3_l_163DEA#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3DDE,op1_e3_l_153DE9);
          tensor[2] _t3DE0#2 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163DEA);
          real _t3E06#1 = TensorIndex<tensor[2],[0]>(_t3DE0);
          real _t3E08#1 = TensorIndex<tensor[2],[1]>(_t3DE0);
          real[2] _t3E0A#1 = <real[2]>{_t3E06,_t3E08};
          int[3] _t3E0C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E0E#1 = Subscript<int[3]>(_t3E0C,_t3DB5);
          real _t3E10#1 = Subscript<real[2]>(_t3E0A,_t3E0E);
          real[2] _t3E12#1 = <real[2]>{_t3A79,_t3AE3};
          real[2] _t3E14#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2] _t3E16#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2][3] _t3E18#1 = <real[2][3]>{_t3E12,_t3E14,_t3E16};
          real[2] _t3E1A#1 = Subscript<real[2][3]>(_t3E18,_t3DB5);
          int[3] _t3E1C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E1E#1 = Subscript<int[3]>(_t3E1C,_t3DB5);
          real _t3E20#1 = Subscript<real[2]>(_t3E1A,_t3E1E);
          real[2] _t3E22#1 = <real[2]>{_t3AE7,_t3A79};
          real[2] _t3E24#1 = <real[2]>{_t3AE3,_t3A79};
          real[2] _t3E26#1 = <real[2]>{_t3A79,_t3AE3};
          real[2][3] _t3E28#1 = <real[2][3]>{_t3E22,_t3E24,_t3E26};
          real[2] _t3E2A#1 = Subscript<real[2][3]>(_t3E28,_t3DB5);
          int[3] _t3E2C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E2E#1 = Subscript<int[3]>(_t3E2C,_t3DB5);
          real _t3E30#1 = Subscript<real[2]>(_t3E2A,_t3E2E);
          real op1_e3_l_53E33#1 = λ(T0[],T1[])<(T0) - (T1)> (_t3E10,_t3E20);
          real op1_e3_l_63E34#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t3E30,op1_e3_l_53E33);
          tensor[2] op1_e3_l_73E35#1 = λ(T0[2],T1[])<(T1 * T0_{i0})>_{2} (_t3DDC,op1_e3_l_63E34);
          tensor[2] _t3E32#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3DD8,op1_e3_l_73E35);
          femData:MeshPos _t3E3A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t3A55,_t3DCF,_t3E32,_t3DD6);
          goto JOIN3E3E
        JOIN3E3E:  preds = [ASSIGN3E3B,ASSIGN3F31]
          femData:MeshPos posp3E3C#5 = phi(_t3E3A,_t3E3D)
          bool _t3E3F#1 = GTE<real>(rayNp3C51,camFarVsp3A29);
          if _t3E3F then goto ASSIGN3E43 else goto JOIN3E51
        ASSIGN3E43:  preds = [COND3E41]
          string _t3E42#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t3E42,cellInter3A37,_t3A4B);
          tensor[3] op1_e3_l_33E46#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp3A29,rayVec3A27);
          tensor[3] _t3E45#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E46);
          tensor[3][] spaceInter3E49#1 = Append<tensor[3]>(spaceInter3A33,_t3E45);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E49;
          self.rayN = rayNp3C51;
          self.steps = steps3AC2;
          stabilize
          goto JOIN3E51
        JOIN3E51:  preds = [*STABILIZE3E4F,COND3E41]
          tensor[3][] spaceInter3E50#1 = phi(spaceInter3A33)
          tensor[3] op1_e3_l_33E53#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayNp3C51,rayVec3A27);
          tensor[3] _t3E52#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E53);
          tensor[3][] spaceInter3E56#2 = Append<tensor[3]>(spaceInter3E50,_t3E52);
          tensor[2] _t3E58#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp3E3C);
          tensor[2][] refSpaceInter3E5A#2 = Append<tensor[2]>(refSpaceInter3A35,_t3E58);
          bool _t3E5C#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp3E3C);
          if _t3E5C then goto ASSIGN3E60 else goto ASSIGN3F07
        ASSIGN3E60:  preds = [COND3E5E]
          string _t3E5F#1 = "Next cell:";
          femData:Mesh _t3E61#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E3C);
          int _t3E63#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E3C);
          femData:MeshCell _t3E65#3 = LoadFem<femData:MeshCell>(_t3E61,_t3E63);
          Print<[string,femData:MeshCell,string]>(_t3E5F,_t3E65,_t3A4B);
          femData:MeshCell[] cellInter3E68#1 = Append<femData:MeshCell>(cellInter3A37,_t3E65);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E56;
          self.refSpaceInter = refSpaceInter3E5A;
          self.cellInter = cellInter3E68;
          self.rayN = rayNp3C51;
          self.currentCell = _t3E65;
          self.steps = steps3AC2;
          self.pos = posp3E3C;
          active
          goto JOIN3E76
        JOIN3E76:  preds = [*ACTIVE3E72,MASSIGN3F08]
          femData:MeshPos pos3E73#1 = phi(pos3A3F)
          femData:MeshCell currentCell3E74#1 = phi(currentCell3A3B)
          femData:MeshCell[] cellInter3E75#1 = phi(cellInter3A37)
          goto JOIN3E7E
        JOIN3E7E:  preds = [JOIN3E76,COND3C58]
          femData:MeshPos pos3E77#6 = phi(pos3E73,pos3A3F)
          femData:MeshCell currentCell3E78#1 = phi(currentCell3E74,currentCell3A3B)
          real rayN3E79#3 = phi(rayNp3C51,rayN3A39)
          femData:MeshCell[] cellInter3E7A#3 = phi(cellInter3E75,cellInter3A37)
          tensor[2][] refSpaceInter3E7B#2 = phi(refSpaceInter3E5A,refSpaceInter3A35)
          tensor[3][] spaceInter3E7C#2 = phi(spaceInter3E56,spaceInter3A33)
          tensor[2][] rayCellInter3E7D#3 = phi(rayCellInter3C5B,rayCellInter3A31)
          int _t3E7F#1 = 0;
          int _t3E81#1 = ISub(cellIntersects3A2F,_t3AC0);
          int[] _t3E83#1 = Range(_t3E7F,_t3E81);
        FOREACH3E86:  preds = [ASSIGN3E84,NEXT3EAF]
          foreach (i3E85 in _t3E83) on exit goto ASSIGN3EB1
            real estimate3E8F#4 = phi(camFarVsp3A29,estimate3EAC)
            int newIdx3EA7#7 = phi(face3ADF,newIdx3EAD)
          real t3E87#3 = Subscript<real[]>(normalizedTimes3A2D,i3E85);
          femData:MeshPos posp3E89#2 = Subscript<femData:MeshPos[]>(poses3A2B,i3E85);
          bool _t3E8B#1 = GTE<real>(t3E87,rayN3E79);
          if _t3E8B then goto ASSIGN3E90 else goto JOIN3EAE
        ASSIGN3E90:  preds = [COND3E8D]
          bool _t3E8E#1 = GTE<real>(estimate3E8F,t3E87);
          if _t3E8E then goto ASSIGN3E93 else goto JOIN3EAB
        ASSIGN3E93:  preds = [COND3E91]
          femData:Mesh _t3E92#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E89);
          int _t3E94#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E89);
          femData:MeshCell _t3E96#1 = LoadFem<femData:MeshCell>(_t3E92,_t3E94);
          femData:Mesh _t3E98#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int _t3E9A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:MeshCell _t3E9C#1 = LoadFem<femData:MeshCell>(_t3E98,_t3E9A);
          int _t3E9E#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E96);
          int _t3EA0#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E9C);
          bool _t3EA2#1 = NEQ<int>(_t3E9E,_t3EA0);
          if _t3EA2 then goto JOIN3EA8 else goto JOIN3EA8
        JOIN3EA8:  preds = [COND3EA4,COND3EA4]
          real estimate3EA5#1 = phi(t3E87,estimate3E8F)
          int newIdx3EA6#1 = phi(i3E85,newIdx3EA7)
          goto JOIN3EAB
        JOIN3EAB:  preds = [JOIN3EA8,COND3E91]
          real estimate3EA9#1 = phi(estimate3EA5,estimate3E8F)
          int newIdx3EAA#1 = phi(newIdx3EA6,newIdx3EA7)
          goto JOIN3EAE
        JOIN3EAE:  preds = [JOIN3EAB,COND3E8D]
          real estimate3EAC#1 = phi(estimate3EA9,estimate3E8F)
          int newIdx3EAD#1 = phi(newIdx3EAA,newIdx3EA7)
          goto FOREACH3E86
        ASSIGN3EB1:  preds = [FOREACH3E86]
          bool _t3EB0#1 = GT<int>(newIdx3EA7,face3ADF);
          if _t3EB0 then goto ASSIGN3EB4 else goto ASSIGN3EF2
        ASSIGN3EB4:  preds = [COND3EB2]
          string _t3EB3#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t3EB3);
          if startsInside3A41 then goto ASSIGN3EB8 else goto JOIN3EBA
        ASSIGN3EB8:  preds = [COND3EB6]
          string _t3EB7#1 = "because of an inside\n";
          Print<[string]>(_t3EB7);
          goto JOIN3EBA
        JOIN3EBA:  preds = [MASSIGN3EB9,COND3EB6]
          string _t3EBB#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t3EBB,rayVec3A27,_t3A4B);
          string _t3EBE#1 = "world pos was:";
          tensor[2] _t3EC0#4 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3E77);
          int _t3EC2#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:Mesh _t3EC4#4 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int[3] femIndicies3EC8#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3EC4,_t3EC2);
          tensor[3,2] femDofs3EC9#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3EC4,femIndicies3EC8);
          tensor[3,2] dofs3EC7#1 = femDofs3EC9;
          tensor[3] basisResult3ECA#1 = EvaluateBasis<BasisArray(3)>(_t3EC0);
          tensor[2] _t3EC6#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3EC2,_t3EC4,_t3EC4,_t3EC0,dofs3EC7,basisResult3ECA,_t3EC0);
          Print<[string,tensor[2],string]>(_t3EBE,_t3EC6,_t3A4B);
          string _t3ED1#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t3ED1,_t3EC0,_t3A4B);
          string _t3ED4#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes3A2D,_t3ED4,newIdx3EA7,_t3A4B);
          string _t3ED7#1 = "Original time was:";
          Print<[string,real,string]>(_t3ED7,rayN3E79,_t3A4B);
          femData:MeshPos pos3EDA#3 = Subscript<femData:MeshPos[]>(poses3A2B,newIdx3EA7);
          femData:Mesh _t3EDC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3EDA);
          int _t3EDE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3EDA);
          femData:MeshCell currentCell3EE0#2 = LoadFem<femData:MeshCell>(_t3EDC,_t3EDE);
          femData:MeshCell[] cellInter3EE2#1 = Append<femData:MeshCell>(cellInter3E7A,currentCell3EE0);
          real rayN3EE4#1 = Subscript<real[]>(normalizedTimes3A2D,newIdx3EA7);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3EE2;
          self.rayN = rayN3EE4;
          self.currentCell = currentCell3EE0;
          self.steps = steps3AC2;
          self.pos = pos3EDA;
          active
          goto JOIN3EEF
        JOIN3EEF:  preds = [*ACTIVE3EEE,*STABILIZE3F05]
          unreachable
        ASSIGN3EF2:  preds = [COND3EB2]
          string _t3EF1#1 = "Enter times:";
          Print<[string,real[],string]>(_t3EF1,normalizedTimes3A2D,_t3A4B);
          string _t3EF4#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t3EF4,rayCellInter3E7D,_t3A4B);
          string _t3EF7#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t3EF7,cellInter3E7A,_t3A4B);
          string _t3EFA#1 = "End\n";
          Print<[string]>(_t3EFA);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3E7A;
          self.rayN = rayN3E79;
          self.currentCell = currentCell3E78;
          self.steps = steps3AC2;
          self.pos = pos3E77;
          stabilize
          goto JOIN3EEF
        ASSIGN3F07:  preds = [COND3E5E]
          string _t3F06#1 = "Invalid\n";
          Print<[string]>(_t3F06);
          goto JOIN3E76
        ASSIGN3F0A:  preds = [COND3DD3]
          real _t3F09#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          int[3] femIndicies3F17#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3F18#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3F17);
          tensor[3,2] dofs3F16#1 = femDofs3F18;
          tensor[2,3] basisResult3F19#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_73F0C#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,dofs3F16,basisResult3F19,_t3AD3);
          tensor[2,2] op1_e3_l_83F0D#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_73F0C);
          tensor[3,2] dofs3F1A#1 = femDofs3F18;
          tensor[2,3] basisResult3F1B#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_93F0E#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3F1A,basisResult3F1B,_t3AD3);
          tensor[3,2] dofs3F1C#1 = femDofs3F18;
          tensor[2,3] basisResult3F1D#1 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2] probe_l_103F0F#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,dofs3F1C,basisResult3F1D,_t3AD3);
          tensor[2] op1_e3_l_113F10#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_103F0F);
          tensor[2,2] op1_e3_l_123F11#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_83F0D);
          real op1_e3_l_133F12#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_93F0E,op1_e3_l_113F10);
          tensor[2,2] op1_e3_l_143F13#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_123F11,op1_e3_l_133F12);
          tensor[2] op1_e3_l_153F14#1 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_143F13);
          tensor[2] op1_e3_l_163F15#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3F09,op1_e3_l_153F14);
          tensor[2] _t3F0B#1 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163F15);
          femData:MeshPos _t3E3D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t3A55,_t3F0B);
          goto JOIN3E3E
        ASSIGN3F33:  preds = [COND3DA9]
          bool _t3F32#1 = EQ<real>(faceTime3AE1,faceTime3DA3);
          if _t3F32 then goto ASSIGN3F36 else goto ASSIGN3F3A
        ASSIGN3F36:  preds = [COND3F34]
          tensor[2] _t3F35#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F38
        JOIN3F38:  preds = [ASSIGN3F36,ASSIGN3F3B]
          tensor[2] _t3DB1#1 = phi(_t3F35,_t3F37)
          goto JOIN3DB2
        ASSIGN3F3A:  preds = [COND3F34]
          real _t3F39#1 = IntToReal(_t3ADB);
          tensor[2] _t3F37#1 = <tensor[2]>[faceTime3DA3,_t3F39];
          goto JOIN3F38
        ASSIGN3F3D:  preds = [COND3C3D]
          bool _t3F3C#1 = EQ<real>(faceTime3AE1,faceTime3C37);
          if _t3F3C then goto ASSIGN3F40 else goto ASSIGN3F44
        ASSIGN3F40:  preds = [COND3F3E]
          tensor[2] _t3F3F#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F42
        JOIN3F42:  preds = [ASSIGN3F40,ASSIGN3F45]
          tensor[2] _t3C45#1 = phi(_t3F3F,_t3F41)
          goto JOIN3C46
        ASSIGN3F44:  preds = [COND3F3E]
          real _t3F43#1 = IntToReal(_t3ADB);
          tensor[2] _t3F41#1 = <tensor[2]>[faceTime3C37,_t3F43];
          goto JOIN3F42
        ASSIGN3F47:  preds = [COND3ABB]
          string _t3F46#1 = "Did not move off ray!\n";
          Print<[string]>(_t3F46);
          goto JOIN3ABF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY3F4A:  preds = []
      int iresU3F4B#1 = globals.iresU2CA8;
      int iresV3F4D#1 = globals.iresV2CA9;
      int _t3F4F#2 = 0;
      int _t3F51#2 = 1;
      int _t3F53#1 = ISub(iresU3F4B,_t3F51);
      int[] _t3F55#1 = Range(_t3F4F,_t3F53);
    FOREACH3F58:  preds = [ASSIGN3F56,NEXT3F61]
      foreach (vi3F57 in _t3F55) on exit goto RETURN3F62
      int _t3F59#1 = ISub(iresV3F4D,_t3F51);
      int[] _t3F5B#1 = Range(_t3F4F,_t3F59);
    FOREACH3F5E:  preds = [ASSIGN3F5C,NEXT3F60]
      foreach (ui3F5D in _t3F5B) on exit goto NEXT3F61
      new ray(ui3F5D,vi3F57);
      goto FOREACH3F5E
    NEXT3F61:  preds = [FOREACH3F5E]
      goto FOREACH3F58
    RETURN3F62:  preds = [FOREACH3F58]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a2CA1 (a) = <no-default>
  input isoval2CA2 (isoval) = <default>
  input thick2CA3 (thick) = <default>
  input camEye2CA4 (camEye) = <default>
  input camAt2CA5 (camAt) = <default>
  input camUp2CA6 (camUp) = <default>
  input camFOV2CA7 (camFOV) = <default>
  input iresU2CA8 (iresU) = <default>
  input iresV2CA9 (iresV) = <default>
  input camNear2CAA (camNear) = <default>
  input camFar2CAB (camFar) = <default>
  input refStep2CAC (refStep) = <default>
  input rayStep2CAD (rayStep) = <default>
  input lightVsp2CAE (lightVsp) = <default>
  input phongKa2CAF (phongKa) = <default>
  input phongKd2CB0 (phongKd) = <default>
  input debug2CB1 (debug) = <default>
  input debugU2CB2 (debugU) = <default>
  input debugV2CB3 (debugV) = <default>
  input eps2CB4 (eps) = <default>
  global femData:MeshCell[] 0cell_a2CB5
  global real camNearVsp2CB6
  global real camFarVsp2CB7
  global tensor[3] camN2CB8
  global tensor[3] camU2CB9
  global tensor[3] camV2CBA
  global real camVmax2CBB
  global real camUmax2CBC
## functions
  function femData:MeshPos _msh_newtonInverse2F5F (tensor[2] pos2F60#3, int cellInt2F61#7, femData:Mesh mesh2F62#10) {
    ENTRY2F63:  preds = []
      real _t2F64#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn2F66#8 = <tensor[2]>[_t2F64,_t2F64];
      int _t2F68#1 = 0;
      int _t2F6A#1 = 16;
      int[] _t2F6C#1 = Range(_t2F68,_t2F6A);
    FOREACH2F6F:  preds = [ASSIGN2F6D,NEXT304C]
      foreach (itter2F6E in _t2F6C) on exit goto ASSIGN3051
        tensor[2] xn2F71#6 = phi(xn2F66,xn2F70)
      int[3] femIndicies2F7E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2F7F#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2F7E);
      tensor[2,3] basisResult2F80#3 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_102F72#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2,2] op1_e3_l_112F73#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_102F72);
      tensor[2] probe_l_122F74#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] probe_l_132F75#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] op1_e3_l_142F76#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_132F75);
      tensor[2,2] op1_e3_l_152F77#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_112F73);
      real op1_e3_l_162F78#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_122F74,op1_e3_l_142F76);
      tensor[3] basisResult2F86#2 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_172F79#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2,2] op1_e3_l_182F7A#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_152F77,op1_e3_l_162F78);
      tensor[2] op1_e3_l_192F7B#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_172F79);
      tensor[2] op1_e3_l_202F7C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_192F7B);
      tensor[2] xn2F70#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_202F7C);
      real _t2F9D#2 = 0.1e-7;
      real _t2F9F#1 = λ(T0[],T1[])<(T0 * T1)> (_t2F9D,_t2F9D);
      tensor[2] probe_l_252FA9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F71,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2] op1_e3_l_272FAB#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_252FA9);
      tensor[2] op1_e3_l_382FAC#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_272FAB);
      real _t2FA1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_382FAC,op1_e3_l_382FAC);
      bool _t2FCD#1 = GTE<real>(_t2F9F,_t2FA1);
      if _t2FCD then goto ASSIGN2FD1 else goto JOIN304B
    ASSIGN2FD1:  preds = [COND2FCF]
      real _t2FD0#3 = 0.1e1;
      real _t2FD2#3 = 0.1e-8;
      real _t2FD4#1 = λ(T0[],T1[])<(T0 + T1)> (_t2FD0,_t2FD2);
      tensor[2] _t2FD6#1 = <tensor[2]>[_t2FD0,_t2FD0];
      real _t2FD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t2FD6,xn2F70);
      bool _t3006#1 = GT<real>(_t2FD4,_t2FD8);
      tensor[2] _t3008#1 = <tensor[2]>[_t2FD2,_t2FD2];
      tensor[2] _t300A#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3008,xn2F70);
      real _t3038#1 = TensorIndex<tensor[2],[0]>(_t300A);
      real _t303A#2 = -0.e0;
      bool _t303C#1 = GT<real>(_t3038,_t303A);
      real _t303E#1 = TensorIndex<tensor[2],[1]>(_t300A);
      bool _t3040#1 = GT<real>(_t303E,_t303A);
      bool _t3042#1 = BAnd(_t303C,_t3040);
      bool _t3044#1 = BAnd(_t3006,_t3042);
      if _t3044 then goto ASSIGN3048 else goto ASSIGN304E
    ASSIGN3048:  preds = [COND3046]
      femData:MeshPos _t3047#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2F62,cellInt2F61,xn2F70,pos2F60);
      return _t3047
      goto JOIN304A
    JOIN304A:  preds = [*RETURN(_t3047)3049,*RETURN(_t304D)304F]
      goto JOIN304B
    JOIN304B:  preds = [*JOIN304A,COND2FCF]
      goto FOREACH2F6F
    ASSIGN304E:  preds = [COND3046]
      femData:MeshPos _t304D#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t304D
      goto JOIN304A
    ASSIGN3051:  preds = [FOREACH2F6F]
      femData:MeshPos _t3050#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t3050
}
  function int[2] nextCell43DB9 (int faceIdx3DBA#1, int cell3DBB#1, femData:Mesh mesh3DBC#1) {
    ENTRY3DBD:  preds = []
      int _t3DBE#1 = 6;
      int _t3DC0#1 = IMul(cell3DBB,_t3DBE);
      int _t3DC2#1 = 2;
      int _t3DC4#1 = IMul(faceIdx3DBA,_t3DC2);
      int _t3DC6#1 = IAdd(_t3DC0,_t3DC4);
      int[2] _t3DC8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3DBC,_t3DC6);
      return _t3DC8
}
## input initialization
  ENTRY2CBD:  preds = []
    real isoval2CBE#1 = 0.2e0;
    globals.isoval2CA2 = isoval2CBE;
    real thick2CC1#1 = 0.7e-1;
    globals.thick2CA3 = thick2CC1;
    real _t2CC4#2 = 0.3e1;
    real _t2CC6#1 = -0.3e1;
    tensor[3] camEye2CC8#1 = <tensor[3]>[_t2CC4,_t2CC6,_t2CC4];
    globals.camEye2CA4 = camEye2CC8;
    real _t2CCB#3 = 0.5e0;
    tensor[3] camAt2CCD#1 = <tensor[3]>[_t2CCB,_t2CCB,_t2CCB];
    globals.camAt2CA5 = camAt2CCD;
    real _t2CD0#2 = 0.e0;
    real _t2CD2#2 = 0.1e1;
    tensor[3] camUp2CD4#2 = <tensor[3]>[_t2CD0,_t2CD0,_t2CD2];
    globals.camUp2CA6 = camUp2CD4;
    real camFOV2CD7#1 = 0.137e2;
    globals.camFOV2CA7 = camFOV2CD7;
    int iresU2CDA#2 = 10;
    globals.iresU2CA8 = iresU2CDA;
    globals.iresV2CA9 = iresU2CDA;
    real camNear2CDE#1 = -0.2e1;
    globals.camNear2CAA = camNear2CDE;
    real camFar2CE1#1 = 0.5e1;
    globals.camFar2CAB = camFar2CE1;
    globals.refStep2CAC = _t2CD2;
    real rayStep2CE5#1 = 0.1e-1;
    globals.rayStep2CAD = rayStep2CE5;
    globals.lightVsp2CAE = camUp2CD4;
    real phongKa2CE9#1 = 0.1e0;
    globals.phongKa2CAF = phongKa2CE9;
    real phongKd2CEC#1 = 0.9e0;
    globals.phongKd2CB0 = phongKd2CEC;
    bool debug2CEF#1 = false;
    globals.debug2CB1 = debug2CEF;
    int debugU2CF2#1 = 8;
    globals.debugU2CB2 = debugU2CF2;
    int debugV2CF5#1 = 2;
    globals.debugV2CB3 = debugV2CF5;
    real eps2CF8#1 = 0.1e-7;
    globals.eps2CB4 = eps2CF8;
    return
## global-variable initialization
  ENTRY2CFC:  preds = []
    femData:Mesh a2CFD#2 = globals.a2CA1;
    tensor[3] camEye2CFF#1 = globals.camEye2CA4;
    tensor[3] camAt2D01#1 = globals.camAt2CA5;
    tensor[3] camUp2D03#1 = globals.camUp2CA6;
    real camFOV2D05#1 = globals.camFOV2CA7;
    int iresU2D07#1 = globals.iresU2CA8;
    int iresV2D09#1 = globals.iresV2CA9;
    real camNear2D0B#1 = globals.camNear2CAA;
    real camFar2D0D#1 = globals.camFar2CAB;
    int _t2D0F#1 = 0;
    int _t2D11#1 = 1;
    int _t2D13#1 = ExtractFemItem<int,NumCell(Mesh)>(a2CFD);
    int _t2D15#1 = ISub(_t2D13,_t2D11);
    int[] _t2D17#1 = Range(_t2D0F,_t2D15);
    femData:MeshCell[] _t2D19#1 = <femData:MeshCell[]>{};
  FOREACH2D1C:  preds = [ASSIGN2D1A,NEXT2D22]
    foreach (_t2D1B in _t2D17) on exit goto GASSIGN2D23
      femData:MeshCell[] _t2D20#2 = phi(_t2D19,_t2D1F)
    femData:MeshCell _t2D1D#1 = LoadFem<femData:MeshCell>(a2CFD,_t2D1B);
    femData:MeshCell[] _t2D1F#1 = Append<femData:MeshCell>(_t2D20,_t2D1D);
    goto FOREACH2D1C
  GASSIGN2D23:  preds = [FOREACH2D1C]
    globals.0cell_a2CB5 = _t2D20;
    tensor[3] op1_e3_l_32D25#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_52D26#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_32D25,op1_e3_l_32D25);
    real op1_e3_l_62D27#5 = λ(T0[])<Sqrt(T0)> (op1_e3_l_52D26);
    real camNearVsp2D24#1 = λ(T0[],T1[])<(T0 + T1)> (camNear2D0B,op1_e3_l_62D27);
    globals.camNearVsp2CB6 = camNearVsp2D24;
    real camFarVsp2D2D#1 = λ(T0[],T1[])<(T0 + T1)> (camFar2D0D,op1_e3_l_62D27);
    globals.camFarVsp2CB7 = camFarVsp2D2D;
    real op1_e3_l_92D3A#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_62D27);
    tensor[3] camN2D36#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_32D25,op1_e3_l_92D3A);
    globals.camN2CB8 = camN2D36;
    tensor[3,3] op1_e3_l_152D45#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp2D03);
    tensor[3] op1_e3_l_172D47#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_32D25,op1_e3_l_152D45);
    real op1_e3_l_342D48#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_172D47,op1_e3_l_172D47);
    real op1_e3_l_352D49#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_92D3A,op1_e3_l_92D3A,op1_e3_l_342D48);
    real op1_e3_l_362D4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_352D49);
    tensor[3] op1_e3_l_372D4B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_172D47);
    real op1_e3_l_382D4C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_362D4A);
    tensor[3] camU2D41#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_372D4B,op1_e3_l_382D4C);
    globals.camU2CB9 = camU2D41;
    tensor[3,3] op1_e3_l_452D64#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_32D25);
    tensor[3] op1_e3_l_472D65#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_172D47,op1_e3_l_452D64);
    tensor[3] op1_e3_l_502D67#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_472D65);
    tensor[3] camV2D5A#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_382D4C,op1_e3_l_92D3A,op1_e3_l_502D67);
    globals.camV2CBA = camV2D5A;
    real _t2D77#1 = 0.314159265358979323846264338327950288e1;
    real _t2D79#1 = 0.36e3;
    real op1_e3_l_52D7C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV2D05,_t2D77);
    real op1_e3_l_62D7D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D79,op1_e3_l_52D7C);
    real op1_e3_l_102D80#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_62D7D);
    real camVmax2D7B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102D80,op1_e3_l_62D27);
    globals.camVmax2CBB = camVmax2D7B;
    real _t2D8A#1 = IntToReal(iresU2D07);
    real _t2D8C#1 = IntToReal(iresV2D09);
    real op1_e3_l_142D95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t2D8A,op1_e3_l_102D80,op1_e3_l_62D27);
    real camUmax2D8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D8C,op1_e3_l_142D95);
    globals.camUmax2CBC = camUmax2D8E;
    return
## strand
  strand ray (int ui2DA0#2, int vi2DA1#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY2DBD:  preds = []
        femData:Mesh a2DBE#1 = globals.a2CA1;
        femData:MeshCell[] 0cell_a2DC0#1 = globals.0cell_a2CB5;
        tensor[3] camEye2DC2#3 = globals.camEye2CA4;
        int iresU2DC4#1 = globals.iresU2CA8;
        int iresV2DC6#1 = globals.iresV2CA9;
        real camNearVsp2DC8#2 = globals.camNearVsp2CB6;
        real camFarVsp2DCA#2 = globals.camFarVsp2CB7;
        tensor[3] camN2DCC#1 = globals.camN2CB8;
        tensor[3] camU2DCE#1 = globals.camU2CB9;
        tensor[3] camV2DD0#1 = globals.camV2CBA;
        real camVmax2DD2#2 = globals.camVmax2CBB;
        real camUmax2DD4#2 = globals.camUmax2CBC;
        real _t2DD6#5 = -0.5e0;
        real _t2DD8#1 = IntToReal(ui2DA0);
        real _t2DDA#1 = IntToReal(iresU2DC4);
        real _t2DDC#3 = 0.5e0;
        real op1_e3_l_62DDF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_72DE0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_82DE1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DDF);
        real op1_e3_l_92DE2#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_102DE3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DE0,op1_e3_l_82DE1);
        real op1_e3_l_112DE4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_92DE2);
        real op1_e3_l_132DE5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DE3,op1_e3_l_112DE4);
        real rayU2DDE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DE2,op1_e3_l_132DE5);
        real _t2DEE#1 = IntToReal(vi2DA1);
        real _t2DF0#2 = IntToReal(iresV2DC6);
        real op1_e3_l_62DF3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DF0,_t2DDC);
        real op1_e3_l_72DF4#2 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_82DF5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DF3);
        real op1_e3_l_92DF6#3 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_102DF7#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_82DF5);
        real op1_e3_l_112DF8#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_92DF6);
        real op1_e3_l_132DF9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DF7,op1_e3_l_112DF8);
        real rayV2DF2#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_132DF9);
        real op1_e3_l_232E0B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_252E0D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_232E0B);
        real op1_e3_l_272E0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_252E0D);
        real op1_e3_l_302E11#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_272E0F,op1_e3_l_112DF8);
        real op1_e3_l_312E12#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_302E11);
        tensor[3] op1_e3_l_322E13#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,rayU2DDE);
        tensor[3] op1_e3_l_332E14#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_312E12);
        tensor[3] UV2E02#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_322E13,op1_e3_l_332E14);
        tensor[3] rayOrig2E28#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14);
        real _t2E4E#4 = 0.e0;
        tensor[3] _t2E50#1 = <tensor[3]>[_t2E4E,_t2E4E,_t2E4E];
        tensor[3] rayVec2E52#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_392E68#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp2DC8,rayVec2E52);
        tensor[3] rayStart2E54#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E68);
        real _t2E7E#1 = TensorIndex<tensor[3],[0]>(rayStart2E54);
        real _t2E80#1 = TensorIndex<tensor[3],[1]>(rayStart2E54);
        tensor[2] rayStartProj2E82#1 = <tensor[2]>[_t2E7E,_t2E80];
        tensor[3] op1_e3_l_392E98#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2DCA,rayVec2E52);
        tensor[3] rayEnd2E84#2 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E98);
        tensor[3] dpos2EAE#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (rayEnd2E84,rayStart2E54);
        real _t2EDE#1 = TensorIndex<tensor[3],[0]>(dpos2EAE);
        real _t2EE0#1 = TensorIndex<tensor[3],[1]>(dpos2EAE);
        tensor[2] dposProj2EE2#1 = <tensor[2]>[_t2EDE,_t2EE0];
        femData:MeshPos[0] _t2EE4#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t2EE6#1 = MkDynamic<femData:MeshPos,0>(_t2EE4);
        real[0] _t2EE8#1 = <real[0]>{};
        real[] _t2EEA#1 = MkDynamic<real,0>(_t2EE8);
        int cellIntersects2EEC#3 = 0;
        tensor[2][0] _t2EEE#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF0#1 = MkDynamic<tensor[2],0>(_t2EEE);
        tensor[3][0] _t2EF2#1 = <tensor[3][0]>{};
        tensor[3][] _t2EF4#1 = MkDynamic<tensor[3],0>(_t2EF2);
        tensor[2][0] _t2EF6#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF8#1 = MkDynamic<tensor[2],0>(_t2EF6);
        femData:MeshCell[0] _t2EFA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t2EFC#1 = MkDynamic<femData:MeshCell,0>(_t2EFA);
        int currentCellInt2EFE#1 = -1;
        femData:MeshCell currentCell2F00#1 = Subscript<femData:MeshCell[]>(0cell_a2DC0,cellIntersects2EEC);
        femData:MeshPos pos2F02#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a2DBE);
        bool startsInside2F04#1 = false;
        self.rayU = rayU2DDE;
        self.rayV = rayV2DF2;
        self.UV = UV2E02;
        self.rayOrig = rayOrig2E28;
        self.rayVec = rayVec2E52;
        self.camNearVsp = camNearVsp2DC8;
        self.camFarVsp = camFarVsp2DCA;
        self.rayStart = rayStart2E54;
        self.rayStartProj = rayStartProj2E82;
        self.rayEnd = rayEnd2E84;
        self.dpos = dpos2EAE;
        self.dposProj = dposProj2EE2;
        self.poses = _t2EE6;
        self.normalizedTimes = _t2EEA;
        self.cellIntersects = cellIntersects2EEC;
        self.rayCellInter = _t2EF0;
        self.spaceInter = _t2EF4;
        self.refSpaceInter = _t2EF8;
        self.cellInter = _t2EFC;
        self.currentCellInt = currentCellInt2EFE;
        self.rayN = _t2E4E;
        self.currentCell = currentCell2F00;
        self.steps = cellIntersects2EEC;
        self.pos = pos2F02;
        self.startsInside = startsInside2F04;
        self.ui = ui2DA0;
        self.vi = vi2DA1;
        return
    end state init
    method start
        ENTRY2F22:  preds = []
          femData:MeshCell[] 0cell_a2F23#1 = globals.0cell_a2CB5;
          bool debug2F25#1 = globals.debug2CB1;
          int debugU2F27#1 = globals.debugU2CB2;
          int debugV2F29#1 = globals.debugV2CB3;
          tensor[3] rayOrig2F2B#2 = self.rayOrig;
          tensor[3] rayVec2F2D#1 = self.rayVec;
          real camNearVsp2F2F#5 = self.camNearVsp;
          real camFarVsp2F31#3 = self.camFarVsp;
          tensor[2] rayStartProj2F33#3 = self.rayStartProj;
          tensor[2] dposProj2F35#2 = self.dposProj;
          femData:MeshPos[] poses2F37#1 = self.poses;
          real[] normalizedTimes2F39#1 = self.normalizedTimes;
          int cellIntersects2F3B#1 = self.cellIntersects;
          tensor[3][] spaceInter2F3D#1 = self.spaceInter;
          int currentCellInt2F3F#1 = self.currentCellInt;
          bool startsInside2F41#2 = self.startsInside;
          int ui2F43#2 = self.ui;
          int vi2F45#2 = self.vi;
          bool _t2F47#1 = NEQ<int>(ui2F43,debugU2F27);
          if _t2F47 then goto ASSIGN2F4B else goto ASSIGN3A23
        ASSIGN2F4B:  preds = [COND2F49]
          bool _t2F4A#1 = true;
          goto JOIN2F4E
        JOIN2F4E:  preds = [ASSIGN2F4B,ASSIGN3A23]
          bool _t2F4C#1 = phi(_t2F4A,_t2F4D)
          if _t2F4C then goto COND2F50 else goto JOIN2F53
        COND2F50:  preds = [COND2F4F]
          if debug2F25 then goto STABILIZE2F51 else goto JOIN2F52
        STABILIZE2F51:  preds = [COND2F50]
          stabilize
          goto JOIN2F52
        JOIN2F52:  preds = [*STABILIZE2F51,COND2F50]
          goto JOIN2F53
        JOIN2F53:  preds = [JOIN2F52,COND2F4F]
        FOREACH2F55:  preds = [JOIN2F53,NEXT307C]
          foreach (c2F54 in 0cell_a2F23) on exit goto ASSIGN39C3
            real startTime39B1#3 = phi(camFarVsp2F31,startTime3070)
            bool startsInside39C1#2 = phi(startsInside2F41,startsInside3072)
            int currentCellInt39B6#6 = phi(currentCellInt2F3F,currentCellInt3073)
            int cellIntersects306C#8 = phi(cellIntersects2F3B,cellIntersects3075)
            real[] normalizedTimes3067#7 = phi(normalizedTimes2F39,normalizedTimes3077)
            femData:MeshPos[] poses3064#7 = phi(poses2F37,poses3079)
          string _t2F56#1 = "Cell:";
          string _t2F58#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F56,c2F54,_t2F58);
          int _t2F5B#8 = ExtractFemItem<int,CellIndex(MeshCell)>(c2F54);
          femData:Mesh _t2F5D#9 = ExtractFem<femData:Mesh,femData:MeshCell>(c2F54);
          femData:MeshPos _t3053#2 = _msh_newtonInverse2F5F (rayStartProj2F33,_t2F5B,_t2F5D);
          bool _t3055#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3053);
          if _t3055 then goto ASSIGN3059 else goto ASSIGN307E
        ASSIGN3059:  preds = [COND3057]
          string _t3058#1 = "pos starts inside\n";
          Print<[string]>(_t3058);
          tensor[2] refPos305D#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t3053);
          femData:MeshPos p3061#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2F5D,_t2F5B,refPos305D);
          femData:MeshPos[] poses3063#1 = Append<femData:MeshPos>(poses3064,p3061);
          real[] normalizedTimes3066#1 = Append<real>(normalizedTimes3067,camNearVsp2F2F);
          int _t3069#1 = 1;
          int cellIntersects306B#1 = IAdd(cellIntersects306C,_t3069);
          bool startsInside306E#1 = true;
          goto JOIN307B
        JOIN307B:  preds = [ASSIGN306F,JOIN39BC]
          real startTime3070#1 = phi(camNearVsp2F2F,startTime3071)
          bool startsInside3072#1 = phi(startsInside306E,startsInside2F41)
          int currentCellInt3073#1 = phi(cellIntersects306C,currentCellInt3074)
          int cellIntersects3075#1 = phi(cellIntersects306B,cellIntersects3076)
          real[] normalizedTimes3077#1 = phi(normalizedTimes3066,normalizedTimes3078)
          femData:MeshPos[] poses3079#1 = phi(poses3063,poses307A)
          goto FOREACH2F55
        ASSIGN307E:  preds = [COND3057]
          real _t307D#26 = -0.e0;
          tensor[2] _t307F#10 = <tensor[2]>[_t307D,_t307D];
          real time3081#9 = +inf;
          int face3083#12 = -1;
          real _t3085#39 = 0.1e1;
          real _t3087#9 = 0.e0;
          tensor[2] _t3089#3 = <tensor[2]>[_t3085,_t3087];
          real _t308B#9 = -0.1e1;
          tensor[2] _t308D#2 = <tensor[2]>[_t308B,_t3085];
          int[3] femIndicies30A2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs30A3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies30A2);
          tensor[2,3] basisResult30A4#3 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_173090#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2,2] op1_e3_l_183091#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_173090);
          tensor[2] probe_l_193092#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] probe_l_203093#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] op1_e3_l_213094#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_203093);
          tensor[2,2] op1_e3_l_223095#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_183091);
          real op1_e3_l_233096#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_193092,op1_e3_l_213094);
          tensor[3] basisResult30AA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_243097#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30AA,_t307F);
          tensor[2,2] op1_e3_l_253098#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_223095,op1_e3_l_233096);
          tensor[2] op1_e3_l_263099#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_243097);
          tensor[2] op1_e3_l_27309A#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_253098,op1_e3_l_263099);
          tensor[2] op1_e3_l_36309B#16 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_253098);
          tensor[2] op1_e3_l_37309C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_38309D#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_37309C);
          tensor[2] op1_e3_l_39309E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_38309D);
          tensor[2] op1_e3_l_40309F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4130A0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_39309E);
          real _t308F#10 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_40309F,op1_e3_l_4130A0);
          real _t30C7#3 = -0.1e-15;
          bool _t30C9#1 = GTE<real>(_t308F,_t30C7);
          bool _t30CB#1 = GT<real>(time3081,_t308F);
          real _t30CD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_38309D);
          real _t30F5#3 = 0.1e-20;
          bool _t30F7#1 = GTE<real>(_t30CD,_t30F5);
          bool _t30F9#1 = BAnd(_t30CB,_t30F7);
          bool _t30FB#4 = BAnd(_t30C9,_t30F9);
          if _t30FB then goto ASSIGN30FF else goto JOIN3196
        ASSIGN30FF:  preds = [COND30FD]
          real _t30FE#3 = 0.1e-8;
          real _t3100#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t30FE);
          tensor[2] _t3102#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783117#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793118#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783117);
          real _t3104#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3102,op1_e3_l_793118);
          bool _t3142#1 = GT<real>(_t3100,_t3104);
          tensor[2] _t3144#1 = <tensor[2]>[_t30FE,_t30FE];
          tensor[2] _t3146#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3144,op1_e3_l_27309A,op1_e3_l_783117);
          real _t3182#1 = TensorIndex<tensor[2],[0]>(_t3146);
          bool _t3184#1 = GT<real>(_t3182,_t307D);
          real _t3186#1 = TensorIndex<tensor[2],[1]>(_t3146);
          bool _t3188#1 = GT<real>(_t3186,_t307D);
          bool _t318A#1 = BAnd(_t3184,_t3188);
          bool _t318C#1 = BAnd(_t3142,_t318A);
          if _t318C then goto ASSIGN3190 else goto JOIN3193
        ASSIGN3190:  preds = [COND318E]
          int face318F#1 = 0;
          goto JOIN3193
        JOIN3193:  preds = [ASSIGN3190,COND318E]
          int face3191#1 = phi(face318F,face3083)
          real time3192#1 = phi(_t308F,time3081)
          goto JOIN3196
        JOIN3196:  preds = [JOIN3193,COND30FD]
          int face3194#2 = phi(face3191,face3083)
          real time3195#3 = phi(time3192,time3081)
          tensor[2] _t3197#1 = <tensor[2]>[_t3087,_t3087];
          tensor[2] _t3199#2 = <tensor[2]>[_t3087,_t3085];
          tensor[2] op1_e3_l_3731A8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_3831A9#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3731A8);
          tensor[2] op1_e3_l_3931AA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_3831A9);
          tensor[2] op1_e3_l_4031AB#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4131AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3931AA);
          real _t319B#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4131AC);
          bool _t31D3#4 = GTE<real>(_t319B,_t30C7);
          bool _t31D5#1 = GT<real>(time3195,_t319B);
          real _t31D7#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3831A9);
          bool _t31FF#4 = GTE<real>(_t31D7,_t30F5);
          bool _t3201#1 = BAnd(_t31D5,_t31FF);
          bool _t3203#1 = BAnd(_t31D3,_t3201);
          if _t3203 then goto ASSIGN3207 else goto JOIN329E
        ASSIGN3207:  preds = [COND3205]
          real _t3206#3 = 0.1e-8;
          real _t3208#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3206);
          tensor[2] _t320A#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78321F#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793220#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78321F);
          real _t320C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t320A,op1_e3_l_793220);
          bool _t324A#1 = GT<real>(_t3208,_t320C);
          tensor[2] _t324C#1 = <tensor[2]>[_t3206,_t3206];
          tensor[2] _t324E#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t324C,op1_e3_l_27309A,op1_e3_l_78321F);
          real _t328A#1 = TensorIndex<tensor[2],[0]>(_t324E);
          bool _t328C#1 = GT<real>(_t328A,_t307D);
          real _t328E#1 = TensorIndex<tensor[2],[1]>(_t324E);
          bool _t3290#1 = GT<real>(_t328E,_t307D);
          bool _t3292#1 = BAnd(_t328C,_t3290);
          bool _t3294#1 = BAnd(_t324A,_t3292);
          if _t3294 then goto ASSIGN3298 else goto JOIN329B
        ASSIGN3298:  preds = [COND3296]
          int face3297#1 = 1;
          goto JOIN329B
        JOIN329B:  preds = [ASSIGN3298,COND3296]
          int face3299#1 = phi(face3297,face3194)
          real time329A#1 = phi(_t319B,time3195)
          goto JOIN329E
        JOIN329E:  preds = [JOIN329B,COND3205]
          int face329C#2 = phi(face3299,face3194)
          real time329D#3 = phi(time329A,time3195)
          tensor[2] op1_e3_l_3732AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_3832AD#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3732AC);
          tensor[2] op1_e3_l_3932AE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_3832AD);
          tensor[2] op1_e3_l_4132B0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3932AE);
          real _t329F#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4132B0);
          bool _t32D7#4 = GTE<real>(_t329F,_t30C7);
          bool _t32D9#1 = GT<real>(time329D,_t329F);
          real _t32DB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3832AD);
          bool _t3303#4 = GTE<real>(_t32DB,_t30F5);
          bool _t3305#1 = BAnd(_t32D9,_t3303);
          bool _t3307#1 = BAnd(_t32D7,_t3305);
          if _t3307 then goto ASSIGN330B else goto JOIN33A2
        ASSIGN330B:  preds = [COND3309]
          real _t330A#3 = 0.1e-8;
          real _t330C#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t330A);
          tensor[2] _t330E#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783323#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793324#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783323);
          real _t3310#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t330E,op1_e3_l_793324);
          bool _t334E#1 = GT<real>(_t330C,_t3310);
          tensor[2] _t3350#1 = <tensor[2]>[_t330A,_t330A];
          tensor[2] _t3352#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3350,op1_e3_l_27309A,op1_e3_l_783323);
          real _t338E#1 = TensorIndex<tensor[2],[0]>(_t3352);
          bool _t3390#1 = GT<real>(_t338E,_t307D);
          real _t3392#1 = TensorIndex<tensor[2],[1]>(_t3352);
          bool _t3394#1 = GT<real>(_t3392,_t307D);
          bool _t3396#1 = BAnd(_t3390,_t3394);
          bool _t3398#1 = BAnd(_t334E,_t3396);
          if _t3398 then goto ASSIGN339C else goto JOIN339F
        ASSIGN339C:  preds = [COND339A]
          int face339B#1 = 2;
          goto JOIN339F
        JOIN339F:  preds = [ASSIGN339C,COND339A]
          int face339D#1 = phi(face339B,face329C)
          real time339E#1 = phi(_t329F,time329D)
          goto JOIN33A2
        JOIN33A2:  preds = [JOIN339F,COND3309]
          int face33A0#2 = phi(face339D,face329C)
          real time33A1#1 = phi(time339E,time329D)
          bool _t33A3#1 = NEQ<int>(face33A0,face3083);
          if _t33A3 then goto ASSIGN33A7 else goto ASSIGN39C0
        ASSIGN33A7:  preds = [COND33A5]
          real _t33A6#1 = Max<real>(time33A1,_t3087);
          real _t33A8#1 = IntToReal(face33A0);
          tensor[2] _t33AA#1 = <tensor[2]>[_t33A6,_t33A8];
          goto JOIN33AE
        JOIN33AE:  preds = [ASSIGN33AB,ASSIGN39C0]
          tensor[2] _t33AC#1 = phi(_t33AA,_t33AD)
          real newTime33AF#2 = TensorIndex<tensor[2],[0]>(_t33AC);
          bool _t33B1#1 = GTE<real>(newTime33AF,_t3087);
          if _t33B1 then goto COND33B4 else goto JOIN39BC
        COND33B4:  preds = [COND33B3]
          if _t30FB then goto ASSIGN33B6 else goto JOIN344D
        ASSIGN33B6:  preds = [COND33B4]
          real _t33B5#3 = 0.1e-8;
          real _t33B7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t33B5);
          tensor[2] _t33B9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7833CE#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7933CF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t33BB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t33B9,op1_e3_l_7933CF);
          bool _t33F9#1 = GT<real>(_t33B7,_t33BB);
          tensor[2] _t33FB#1 = <tensor[2]>[_t33B5,_t33B5];
          tensor[2] _t33FD#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t33FB,op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t3439#1 = TensorIndex<tensor[2],[0]>(_t33FD);
          bool _t343B#1 = GT<real>(_t3439,_t307D);
          real _t343D#1 = TensorIndex<tensor[2],[1]>(_t33FD);
          bool _t343F#1 = GT<real>(_t343D,_t307D);
          bool _t3441#1 = BAnd(_t343B,_t343F);
          bool _t3443#1 = BAnd(_t33F9,_t3441);
          if _t3443 then goto ASSIGN3447 else goto JOIN344A
        ASSIGN3447:  preds = [COND3445]
          int face3446#1 = 0;
          goto JOIN344A
        JOIN344A:  preds = [ASSIGN3447,COND3445]
          int face3448#1 = phi(face3446,face3083)
          real time3449#1 = phi(_t308F,time3081)
          goto JOIN344D
        JOIN344D:  preds = [JOIN344A,COND33B4]
          int face344B#2 = phi(face3448,face3083)
          real time344C#3 = phi(time3449,time3081)
          bool _t344E#1 = GT<real>(time344C,_t319B);
          bool _t3450#1 = BAnd(_t344E,_t31FF);
          bool _t3452#1 = BAnd(_t31D3,_t3450);
          if _t3452 then goto ASSIGN3456 else goto JOIN34ED
        ASSIGN3456:  preds = [COND3454]
          real _t3455#3 = 0.1e-8;
          real _t3457#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3455);
          tensor[2] _t3459#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78346E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79346F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78346E);
          real _t345B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3459,op1_e3_l_79346F);
          bool _t3499#1 = GT<real>(_t3457,_t345B);
          tensor[2] _t349B#1 = <tensor[2]>[_t3455,_t3455];
          tensor[2] _t349D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t349B,op1_e3_l_27309A,op1_e3_l_78346E);
          real _t34D9#1 = TensorIndex<tensor[2],[0]>(_t349D);
          bool _t34DB#1 = GT<real>(_t34D9,_t307D);
          real _t34DD#1 = TensorIndex<tensor[2],[1]>(_t349D);
          bool _t34DF#1 = GT<real>(_t34DD,_t307D);
          bool _t34E1#1 = BAnd(_t34DB,_t34DF);
          bool _t34E3#1 = BAnd(_t3499,_t34E1);
          if _t34E3 then goto ASSIGN34E7 else goto JOIN34EA
        ASSIGN34E7:  preds = [COND34E5]
          int face34E6#1 = 1;
          goto JOIN34EA
        JOIN34EA:  preds = [ASSIGN34E7,COND34E5]
          int face34E8#1 = phi(face34E6,face344B)
          real time34E9#1 = phi(_t319B,time344C)
          goto JOIN34ED
        JOIN34ED:  preds = [JOIN34EA,COND3454]
          int face34EB#2 = phi(face34E8,face344B)
          real time34EC#3 = phi(time34E9,time344C)
          bool _t34EE#1 = GT<real>(time34EC,_t329F);
          bool _t34F0#1 = BAnd(_t34EE,_t3303);
          bool _t34F2#1 = BAnd(_t32D7,_t34F0);
          if _t34F2 then goto ASSIGN34F6 else goto JOIN358D
        ASSIGN34F6:  preds = [COND34F4]
          real _t34F5#3 = 0.1e-8;
          real _t34F7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t34F5);
          tensor[2] _t34F9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78350E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79350F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78350E);
          real _t34FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t34F9,op1_e3_l_79350F);
          bool _t3539#1 = GT<real>(_t34F7,_t34FB);
          tensor[2] _t353B#1 = <tensor[2]>[_t34F5,_t34F5];
          tensor[2] _t353D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t353B,op1_e3_l_27309A,op1_e3_l_78350E);
          real _t3579#1 = TensorIndex<tensor[2],[0]>(_t353D);
          bool _t357B#1 = GT<real>(_t3579,_t307D);
          real _t357D#1 = TensorIndex<tensor[2],[1]>(_t353D);
          bool _t357F#1 = GT<real>(_t357D,_t307D);
          bool _t3581#1 = BAnd(_t357B,_t357F);
          bool _t3583#1 = BAnd(_t3539,_t3581);
          if _t3583 then goto ASSIGN3587 else goto JOIN358A
        ASSIGN3587:  preds = [COND3585]
          int face3586#1 = 2;
          goto JOIN358A
        JOIN358A:  preds = [ASSIGN3587,COND3585]
          int face3588#1 = phi(face3586,face34EB)
          real time3589#1 = phi(_t329F,time34EC)
          goto JOIN358D
        JOIN358D:  preds = [JOIN358A,COND34F4]
          int face358B#2 = phi(face3588,face34EB)
          real time358C#1 = phi(time3589,time34EC)
          bool _t358E#1 = NEQ<int>(face358B,face3083);
          if _t358E then goto ASSIGN3592 else goto ASSIGN39BF
        ASSIGN3592:  preds = [COND3590]
          real _t3591#1 = Max<real>(time358C,_t3087);
          real _t3593#1 = IntToReal(face358B);
          tensor[2] _t3595#1 = <tensor[2]>[_t3591,_t3593];
          goto JOIN3599
        JOIN3599:  preds = [ASSIGN3596,ASSIGN39BF]
          tensor[2] _t3597#1 = phi(_t3595,_t3598)
          real _t359A#1 = TensorIndex<tensor[2],[0]>(_t3597);
          tensor[2] op1_e3_l_3535A9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t359A,op1_e3_l_36309B);
          tensor[2] _t359C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_3535A9);
          if _t30FB then goto ASSIGN35CE else goto JOIN3665
        ASSIGN35CE:  preds = [COND35CC]
          real _t35CD#3 = 0.1e-8;
          real _t35CF#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t35CD);
          tensor[2] _t35D1#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7835E6#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7935E7#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t35D3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t35D1,op1_e3_l_7935E7);
          bool _t3611#1 = GT<real>(_t35CF,_t35D3);
          tensor[2] _t3613#1 = <tensor[2]>[_t35CD,_t35CD];
          tensor[2] _t3615#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3613,op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t3651#1 = TensorIndex<tensor[2],[0]>(_t3615);
          bool _t3653#1 = GT<real>(_t3651,_t307D);
          real _t3655#1 = TensorIndex<tensor[2],[1]>(_t3615);
          bool _t3657#1 = GT<real>(_t3655,_t307D);
          bool _t3659#1 = BAnd(_t3653,_t3657);
          bool _t365B#1 = BAnd(_t3611,_t3659);
          if _t365B then goto ASSIGN365F else goto JOIN3662
        ASSIGN365F:  preds = [COND365D]
          int face365E#1 = 0;
          goto JOIN3662
        JOIN3662:  preds = [ASSIGN365F,COND365D]
          int face3660#1 = phi(face365E,face3083)
          real time3661#1 = phi(_t308F,time3081)
          goto JOIN3665
        JOIN3665:  preds = [JOIN3662,COND35CC]
          int face3663#2 = phi(face3660,face3083)
          real time3664#3 = phi(time3661,time3081)
          bool _t3666#1 = GT<real>(time3664,_t319B);
          bool _t3668#1 = BAnd(_t3666,_t31FF);
          bool _t366A#1 = BAnd(_t31D3,_t3668);
          if _t366A then goto ASSIGN366E else goto JOIN3705
        ASSIGN366E:  preds = [COND366C]
          real _t366D#3 = 0.1e-8;
          real _t366F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t366D);
          tensor[2] _t3671#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783686#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793687#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783686);
          real _t3673#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3671,op1_e3_l_793687);
          bool _t36B1#1 = GT<real>(_t366F,_t3673);
          tensor[2] _t36B3#1 = <tensor[2]>[_t366D,_t366D];
          tensor[2] _t36B5#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t36B3,op1_e3_l_27309A,op1_e3_l_783686);
          real _t36F1#1 = TensorIndex<tensor[2],[0]>(_t36B5);
          bool _t36F3#1 = GT<real>(_t36F1,_t307D);
          real _t36F5#1 = TensorIndex<tensor[2],[1]>(_t36B5);
          bool _t36F7#1 = GT<real>(_t36F5,_t307D);
          bool _t36F9#1 = BAnd(_t36F3,_t36F7);
          bool _t36FB#1 = BAnd(_t36B1,_t36F9);
          if _t36FB then goto ASSIGN36FF else goto JOIN3702
        ASSIGN36FF:  preds = [COND36FD]
          int face36FE#1 = 1;
          goto JOIN3702
        JOIN3702:  preds = [ASSIGN36FF,COND36FD]
          int face3700#1 = phi(face36FE,face3663)
          real time3701#1 = phi(_t319B,time3664)
          goto JOIN3705
        JOIN3705:  preds = [JOIN3702,COND366C]
          int face3703#2 = phi(face3700,face3663)
          real time3704#3 = phi(time3701,time3664)
          bool _t3706#1 = GT<real>(time3704,_t329F);
          bool _t3708#1 = BAnd(_t3706,_t3303);
          bool _t370A#1 = BAnd(_t32D7,_t3708);
          if _t370A then goto ASSIGN370E else goto JOIN37A5
        ASSIGN370E:  preds = [COND370C]
          real _t370D#3 = 0.1e-8;
          real _t370F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t370D);
          tensor[2] _t3711#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783726#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793727#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783726);
          real _t3713#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3711,op1_e3_l_793727);
          bool _t3751#1 = GT<real>(_t370F,_t3713);
          tensor[2] _t3753#1 = <tensor[2]>[_t370D,_t370D];
          tensor[2] _t3755#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3753,op1_e3_l_27309A,op1_e3_l_783726);
          real _t3791#1 = TensorIndex<tensor[2],[0]>(_t3755);
          bool _t3793#1 = GT<real>(_t3791,_t307D);
          real _t3795#1 = TensorIndex<tensor[2],[1]>(_t3755);
          bool _t3797#1 = GT<real>(_t3795,_t307D);
          bool _t3799#1 = BAnd(_t3793,_t3797);
          bool _t379B#1 = BAnd(_t3751,_t3799);
          if _t379B then goto ASSIGN379F else goto JOIN37A2
        ASSIGN379F:  preds = [COND379D]
          int face379E#1 = 2;
          goto JOIN37A2
        JOIN37A2:  preds = [ASSIGN379F,COND379D]
          int face37A0#1 = phi(face379E,face3703)
          real time37A1#1 = phi(_t329F,time3704)
          goto JOIN37A5
        JOIN37A5:  preds = [JOIN37A2,COND370C]
          int face37A3#2 = phi(face37A0,face3703)
          real time37A4#1 = phi(time37A1,time3704)
          bool _t37A6#1 = NEQ<int>(face37A3,face3083);
          if _t37A6 then goto ASSIGN37AA else goto ASSIGN39BE
        ASSIGN37AA:  preds = [COND37A8]
          real _t37A9#1 = Max<real>(time37A4,_t3087);
          real _t37AB#1 = IntToReal(face37A3);
          tensor[2] _t37AD#1 = <tensor[2]>[_t37A9,_t37AB];
          goto JOIN37B1
        JOIN37B1:  preds = [ASSIGN37AE,ASSIGN39BE]
          tensor[2] _t37AF#1 = phi(_t37AD,_t37B0)
          real _t37B2#1 = TensorIndex<tensor[2],[0]>(_t37AF);
          tensor[2] op1_e3_l_337B5#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t37B2,dposProj2F35);
          tensor[2] _t37B4#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj2F33,op1_e3_l_337B5);
          if _t30FB then goto ASSIGN37BA else goto JOIN3851
        ASSIGN37BA:  preds = [COND37B8]
          real _t37B9#3 = 0.1e-8;
          real _t37BB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t37B9);
          tensor[2] _t37BD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7837D2#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7937D3#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t37BF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t37BD,op1_e3_l_7937D3);
          bool _t37FD#1 = GT<real>(_t37BB,_t37BF);
          tensor[2] _t37FF#1 = <tensor[2]>[_t37B9,_t37B9];
          tensor[2] _t3801#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t37FF,op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t383D#1 = TensorIndex<tensor[2],[0]>(_t3801);
          bool _t383F#1 = GT<real>(_t383D,_t307D);
          real _t3841#1 = TensorIndex<tensor[2],[1]>(_t3801);
          bool _t3843#1 = GT<real>(_t3841,_t307D);
          bool _t3845#1 = BAnd(_t383F,_t3843);
          bool _t3847#1 = BAnd(_t37FD,_t3845);
          if _t3847 then goto ASSIGN384B else goto JOIN384E
        ASSIGN384B:  preds = [COND3849]
          int face384A#1 = 0;
          goto JOIN384E
        JOIN384E:  preds = [ASSIGN384B,COND3849]
          int face384C#1 = phi(face384A,face3083)
          real time384D#1 = phi(_t308F,time3081)
          goto JOIN3851
        JOIN3851:  preds = [JOIN384E,COND37B8]
          int face384F#2 = phi(face384C,face3083)
          real time3850#3 = phi(time384D,time3081)
          bool _t3852#1 = GT<real>(time3850,_t319B);
          bool _t3854#1 = BAnd(_t3852,_t31FF);
          bool _t3856#1 = BAnd(_t31D3,_t3854);
          if _t3856 then goto ASSIGN385A else goto JOIN38F1
        ASSIGN385A:  preds = [COND3858]
          real _t3859#3 = 0.1e-8;
          real _t385B#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3859);
          tensor[2] _t385D#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783872#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793873#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783872);
          real _t385F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t385D,op1_e3_l_793873);
          bool _t389D#1 = GT<real>(_t385B,_t385F);
          tensor[2] _t389F#1 = <tensor[2]>[_t3859,_t3859];
          tensor[2] _t38A1#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t389F,op1_e3_l_27309A,op1_e3_l_783872);
          real _t38DD#1 = TensorIndex<tensor[2],[0]>(_t38A1);
          bool _t38DF#1 = GT<real>(_t38DD,_t307D);
          real _t38E1#1 = TensorIndex<tensor[2],[1]>(_t38A1);
          bool _t38E3#1 = GT<real>(_t38E1,_t307D);
          bool _t38E5#1 = BAnd(_t38DF,_t38E3);
          bool _t38E7#1 = BAnd(_t389D,_t38E5);
          if _t38E7 then goto ASSIGN38EB else goto JOIN38EE
        ASSIGN38EB:  preds = [COND38E9]
          int face38EA#1 = 1;
          goto JOIN38EE
        JOIN38EE:  preds = [ASSIGN38EB,COND38E9]
          int face38EC#1 = phi(face38EA,face384F)
          real time38ED#1 = phi(_t319B,time3850)
          goto JOIN38F1
        JOIN38F1:  preds = [JOIN38EE,COND3858]
          int face38EF#2 = phi(face38EC,face384F)
          real time38F0#3 = phi(time38ED,time3850)
          bool _t38F2#1 = GT<real>(time38F0,_t329F);
          bool _t38F4#1 = BAnd(_t38F2,_t3303);
          bool _t38F6#1 = BAnd(_t32D7,_t38F4);
          if _t38F6 then goto ASSIGN38FA else goto JOIN3991
        ASSIGN38FA:  preds = [COND38F8]
          real _t38F9#3 = 0.1e-8;
          real _t38FB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t38F9);
          tensor[2] _t38FD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783912#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793913#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783912);
          real _t38FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t38FD,op1_e3_l_793913);
          bool _t393D#1 = GT<real>(_t38FB,_t38FF);
          tensor[2] _t393F#1 = <tensor[2]>[_t38F9,_t38F9];
          tensor[2] _t3941#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t393F,op1_e3_l_27309A,op1_e3_l_783912);
          real _t397D#1 = TensorIndex<tensor[2],[0]>(_t3941);
          bool _t397F#1 = GT<real>(_t397D,_t307D);
          real _t3981#1 = TensorIndex<tensor[2],[1]>(_t3941);
          bool _t3983#1 = GT<real>(_t3981,_t307D);
          bool _t3985#1 = BAnd(_t397F,_t3983);
          bool _t3987#1 = BAnd(_t393D,_t3985);
          if _t3987 then goto ASSIGN398B else goto JOIN398E
        ASSIGN398B:  preds = [COND3989]
          int face398A#1 = 2;
          goto JOIN398E
        JOIN398E:  preds = [ASSIGN398B,COND3989]
          int face398C#1 = phi(face398A,face38EF)
          real time398D#1 = phi(_t329F,time38F0)
          goto JOIN3991
        JOIN3991:  preds = [JOIN398E,COND38F8]
          int face398F#2 = phi(face398C,face38EF)
          real time3990#1 = phi(time398D,time38F0)
          bool _t3992#1 = NEQ<int>(face398F,face3083);
          if _t3992 then goto ASSIGN3996 else goto ASSIGN39BD
        ASSIGN3996:  preds = [COND3994]
          real _t3995#1 = Max<real>(time3990,_t3087);
          real _t3997#1 = IntToReal(face398F);
          tensor[2] _t3999#1 = <tensor[2]>[_t3995,_t3997];
          goto JOIN399D
        JOIN399D:  preds = [ASSIGN399A,ASSIGN39BD]
          tensor[2] _t399B#1 = phi(_t3999,_t399C)
          real _t399E#1 = TensorIndex<tensor[2],[1]>(_t399B);
          real t39A1#1 = Floor<1>(_t399E);
          int _t39A0#1 = RealToInt<1>(t39A1);
          femData:MeshPos p39A4#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t2F5D,_t2F5B,_t359C,_t37B4,_t39A0);
          real op1_e3_l_339A7#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp2F2F,camFarVsp2F31);
          real op1_e3_l_439A8#1 = λ(T0[],T1[])<(T0 * T1)> (newTime33AF,op1_e3_l_339A7);
          real newRayTime39A6#3 = λ(T0[],T1[])<(T0 + T1)> (camNearVsp2F2F,op1_e3_l_439A8);
          real[] normalizedTimes39AC#1 = Append<real>(normalizedTimes3067,newRayTime39A6);
          femData:MeshPos[] poses39AE#1 = Append<femData:MeshPos>(poses3064,p39A4);
          bool _t39B0#1 = GT<real>(startTime39B1,newRayTime39A6);
          if _t39B0 then goto JOIN39B7 else goto JOIN39B7
        JOIN39B7:  preds = [COND39B3,COND39B3]
          real startTime39B4#1 = phi(newRayTime39A6,startTime39B1)
          int currentCellInt39B5#1 = phi(cellIntersects306C,currentCellInt39B6)
          int _t39B8#1 = 1;
          int cellIntersects39BA#1 = IAdd(cellIntersects306C,_t39B8);
          goto JOIN39BC
        JOIN39BC:  preds = [ASSIGN39BB,COND33B3]
          real startTime3071#1 = phi(startTime39B4,startTime39B1)
          int currentCellInt3074#1 = phi(currentCellInt39B5,currentCellInt39B6)
          int cellIntersects3076#1 = phi(cellIntersects39BA,cellIntersects306C)
          real[] normalizedTimes3078#1 = phi(normalizedTimes39AC,normalizedTimes3067)
          femData:MeshPos[] poses307A#1 = phi(poses39AE,poses3064)
          goto JOIN307B
        ASSIGN39BD:  preds = [COND3994]
          tensor[2] _t399C#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN399D
        ASSIGN39BE:  preds = [COND37A8]
          tensor[2] _t37B0#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN37B1
        ASSIGN39BF:  preds = [COND3590]
          tensor[2] _t3598#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN3599
        ASSIGN39C0:  preds = [COND33A5]
          tensor[2] _t33AD#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN33AE
        ASSIGN39C3:  preds = [FOREACH2F55]
          int _t39C2#1 = 0;
          bool _t39C4#1 = NEQ<int>(cellIntersects306C,_t39C2);
          if _t39C4 then goto ASSIGN39C8 else goto ASSIGN3A14
        ASSIGN39C8:  preds = [COND39C6]
          femData:MeshPos pos39C7#4 = Subscript<femData:MeshPos[]>(poses3064,currentCellInt39B6);
          real rayN39C9#2 = Subscript<real[]>(normalizedTimes3067,currentCellInt39B6);
          tensor[3] op1_e3_l_339CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN39C9,rayVec2F2D);
          tensor[3] _t39CB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig2F2B,op1_e3_l_339CC);
          tensor[3][2] _t39CF#1 = <tensor[3][2]>{rayOrig2F2B,_t39CB};
          tensor[3][] _t39D1#1 = MkDynamic<tensor[3],2>(_t39CF);
          tensor[3][] spaceInter39D3#1 = Concat<tensor[3]>(spaceInter2F3D,_t39D1);
          tensor[2] _t39D5#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos39C7);
          tensor[2][1] _t39D7#1 = <tensor[2][1]>{_t39D5};
          tensor[2][] _t39D9#1 = MkDynamic<tensor[2],1>(_t39D7);
          femData:Mesh _t39DB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos39C7);
          int _t39DD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos39C7);
          femData:MeshCell currentCell39DF#2 = LoadFem<femData:MeshCell>(_t39DB,_t39DD);
          femData:MeshCell[1] _t39E1#1 = <femData:MeshCell[1]>{currentCell39DF};
          femData:MeshCell[] _t39E3#1 = MkDynamic<femData:MeshCell,1>(_t39E1);
          string _t39E5#1 = "In the interval:";
          tensor[2] _t39E7#1 = <tensor[2]>[camNearVsp2F2F,camFarVsp2F31];
          string _t39E9#3 = "\n";
          Print<[string,tensor[2],string]>(_t39E5,_t39E7,_t39E9);
          string _t39EC#1 = "Possible times:";
          Print<[string,real[],string]>(_t39EC,normalizedTimes3067,_t39E9);
          string _t39EF#1 = "cells:";
          femData:MeshCell[] accum39F1#1 = <femData:MeshCell[]>{};
        FOREACH39F4:  preds = [ASSIGN39F2,NEXT39FE]
          foreach (p39F3 in poses3064) on exit goto MASSIGN39FF
            femData:MeshCell[] accum39FC#2 = phi(accum39F1,accum39FB)
          femData:Mesh _t39F5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p39F3);
          int _t39F7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p39F3);
          femData:MeshCell _t39F9#1 = LoadFem<femData:MeshCell>(_t39F5,_t39F7);
          femData:MeshCell[] accum39FB#1 = Append<femData:MeshCell>(accum39FC,_t39F9);
          goto FOREACH39F4
        MASSIGN39FF:  preds = [FOREACH39F4]
          Print<[string,femData:MeshCell[],string]>(_t39EF,accum39FC,_t39E9);
          goto JOIN3A06
        JOIN3A06:  preds = [MASSIGN39FF,*STABILIZE3A22]
          femData:MeshPos pos3A00#1 = phi(pos39C7)
          femData:MeshCell currentCell3A01#1 = phi(currentCell39DF)
          real rayN3A02#1 = phi(rayN39C9)
          femData:MeshCell[] cellInter3A03#1 = phi(_t39E3)
          tensor[2][] refSpaceInter3A04#1 = phi(_t39D9)
          tensor[3][] spaceInter3A05#1 = phi(spaceInter39D3)
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.spaceInter = spaceInter3A05;
          self.refSpaceInter = refSpaceInter3A04;
          self.cellInter = cellInter3A03;
          self.currentCellInt = currentCellInt39B6;
          self.rayN = rayN3A02;
          self.currentCell = currentCell3A01;
          self.pos = pos3A00;
          self.startsInside = startsInside39C1;
          active
        ASSIGN3A14:  preds = [COND39C6]
          string _t3A13#1 = "No intersection!\n";
          Print<[string]>(_t3A13);
          string _t3A16#1 = "Ui: ";
          string _t3A18#1 = " Vi:";
          string _t3A1A#1 = "\n";
          Print<[string,int,string,int,string]>(_t3A16,ui2F43,_t3A18,vi2F45,_t3A1A);
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.currentCellInt = currentCellInt39B6;
          self.startsInside = startsInside39C1;
          stabilize
          goto JOIN3A06
        ASSIGN3A23:  preds = [COND2F49]
          bool _t2F4D#1 = NEQ<int>(vi2F45,debugV2F29);
          goto JOIN2F4E
    end start
    method update
        ENTRY3A24:  preds = []
          tensor[3] rayOrig3A25#4 = self.rayOrig;
          tensor[3] rayVec3A27#6 = self.rayVec;
          real camFarVsp3A29#6 = self.camFarVsp;
          femData:MeshPos[] poses3A2B#2 = self.poses;
          real[] normalizedTimes3A2D#4 = self.normalizedTimes;
          int cellIntersects3A2F#1 = self.cellIntersects;
          tensor[2][] rayCellInter3A31#2 = self.rayCellInter;
          tensor[3][] spaceInter3A33#3 = self.spaceInter;
          tensor[2][] refSpaceInter3A35#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter3A37#4 = self.cellInter;
          real rayN3A39#8 = self.rayN;
          femData:MeshCell currentCell3A3B#2 = self.currentCell;
          int steps3A3D#1 = self.steps;
          femData:MeshPos pos3A3F#8 = self.pos;
          bool startsInside3A41#2 = self.startsInside;
          int ui3A43#1 = self.ui;
          int vi3A45#1 = self.vi;
          string _t3A47#1 = "Ui: ";
          string _t3A49#1 = " vi: ";
          string _t3A4B#21 = "\n";
          Print<[string,int,string,int,string]>(_t3A47,ui3A43,_t3A49,vi3A45,_t3A4B);
          string _t3A4E#1 = "The current ref pos is:";
          tensor[2] _t3A50#8 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3A3F);
          Print<[string,tensor[2],string]>(_t3A4E,_t3A50,_t3A4B);
          string _t3A53#1 = "Current cell:";
          femData:Mesh _t3A55#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3A3F);
          int _t3A57#4 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3A3F);
          femData:MeshCell _t3A59#3 = LoadFem<femData:MeshCell>(_t3A55,_t3A57);
          Print<[string,femData:MeshCell,string]>(_t3A53,_t3A59,_t3A4B);
          string _t3A5C#1 = "The current time is:";
          Print<[string,real,string]>(_t3A5C,rayN3A39,_t3A4B);
          string _t3A5F#2 = "The current world pos is:";
          int[3] femIndicies3A63#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3A55,_t3A57);
          tensor[3,2] femDofs3A64#2 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3A55,femIndicies3A63);
          tensor[3] basisResult3A65#2 = EvaluateBasis<BasisArray(3)>(_t3A50);
          tensor[2] _t3A61#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          tensor[3] op1_e3_l_33A6D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN3A39,rayVec3A27);
          tensor[3] stupid3A6C#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33A6D);
          string _t3A70#2 = "The current world pos should be:";
          real _t3A72#1 = TensorIndex<tensor[3],[0]>(stupid3A6C);
          real _t3A74#1 = TensorIndex<tensor[3],[1]>(stupid3A6C);
          tensor[2] _t3A76#3 = <tensor[2]>[_t3A72,_t3A74];
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          real _t3A79#10 = 0.1e1;
          real _t3A7B#3 = 0.1e-8;
          real _t3A7D#1 = λ(T0[],T1[])<(T0 + T1)> (_t3A79,_t3A7B);
          tensor[2] _t3A7F#1 = <tensor[2]>[_t3A79,_t3A79];
          real _t3A81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3A7F,_t3A50);
          bool _t3A83#1 = GT<real>(_t3A7D,_t3A81);
          tensor[2] _t3A85#1 = <tensor[2]>[_t3A7B,_t3A7B];
          tensor[2] _t3A87#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3A85,_t3A50);
          real _t3A89#1 = TensorIndex<tensor[2],[0]>(_t3A87);
          real _t3A8B#4 = -0.e0;
          bool _t3A8D#1 = GT<real>(_t3A89,_t3A8B);
          real _t3A8F#1 = TensorIndex<tensor[2],[1]>(_t3A87);
          bool _t3A91#1 = GT<real>(_t3A8F,_t3A8B);
          bool _t3A93#1 = BAnd(_t3A8D,_t3A91);
          bool _t3A95#1 = BAnd(_t3A83,_t3A93);
          bool _t3A97#1 = BNot(_t3A95);
          if _t3A97 then goto ASSIGN3A9B else goto JOIN3AA4
        ASSIGN3A9B:  preds = [COND3A99]
          string _t3A9A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t3A9A);
          bool _t3A9D#1 = BNot(startsInside3A41);
          if _t3A9D then goto ASSIGN3AA1 else goto JOIN3AA3
        ASSIGN3AA1:  preds = [COND3A9F]
          string _t3AA0#1 = "Not because of an inside\n";
          Print<[string]>(_t3AA0);
          goto JOIN3AA3
        JOIN3AA3:  preds = [MASSIGN3AA2,COND3A9F]
          goto JOIN3AA4
        JOIN3AA4:  preds = [JOIN3AA3,COND3A99]
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          tensor[2] probe_l_53AA8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          tensor[2] op1_e3_l_73AA9#2 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (_t3A76,probe_l_53AA8);
          real op1_e3_l_93AAA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_73AA9,op1_e3_l_73AA9);
          real err3AA7#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_93AAA);
          real _t3AB7#1 = 0.1e-4;
          bool _t3AB9#1 = GT<real>(err3AA7,_t3AB7);
          if _t3AB9 then goto ASSIGN3ABD else goto ASSIGN3F47
        ASSIGN3ABD:  preds = [COND3ABB]
          string _t3ABC#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t3ABC,err3AA7,_t3A4B);
          goto JOIN3ABF
        JOIN3ABF:  preds = [MASSIGN3ABE,MASSIGN3F48]
          int _t3AC0#13 = 1;
          int steps3AC2#4 = IAdd(steps3A3D,_t3AC0);
          string _t3AC4#1 = "Orig:";
          string _t3AC6#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t3AC4,rayOrig3A25,_t3AC6,rayVec3A27,_t3A4B);
          real op1_e3_l_33ACA#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp3A29,rayN3A39);
          tensor[3] newDpos3AC9#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec3A27,op1_e3_l_33ACA);
          tensor[2] _t3ACD#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos3A3F);
          femData:Mesh _t3ACF#5 = ExtractFem<femData:Mesh,femData:MeshCell>(_t3A59);
          int _t3AD1#4 = ExtractFemItem<int,CellIndex(MeshCell)>(_t3A59);
          tensor[2] _t3AD3#7 = <tensor[2]>[_t3A8B,_t3A8B];
          real _t3AD5#1 = TensorIndex<tensor[3],[0]>(newDpos3AC9);
          real _t3AD7#1 = TensorIndex<tensor[3],[1]>(newDpos3AC9);
          tensor[2] _t3AD9#1 = <tensor[2]>[_t3AD5,_t3AD7];
          int _t3ADB#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos3A3F);
          real time3ADD#5 = +inf;
          int face3ADF#9 = -1;
          real faceTime3AE1#6 = -inf;
          real _t3AE3#14 = 0.e0;
          tensor[2] _t3AE5#5 = <tensor[2]>[_t3A79,_t3AE3];
          real _t3AE7#6 = -0.1e1;
          tensor[2] _t3AE9#3 = <tensor[2]>[_t3AE7,_t3A79];
          int[3] femIndicies3AFB#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3AFC#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3AFB);
          tensor[2,3] basisResult3AFD#3 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93AEC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2,2] op1_e3_l_103AED#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93AEC);
          tensor[2] probe_l_113AEE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] probe_l_123AEF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] op1_e3_l_133AF0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123AEF);
          tensor[2,2] op1_e3_l_143AF1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103AED);
          real op1_e3_l_153AF2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113AEE,op1_e3_l_133AF0);
          tensor[2,2] op1_e3_l_163AF3#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143AF1,op1_e3_l_153AF2);
          tensor[2] op1_e3_l_173AF4#5 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163AF3);
          tensor[2] op1_e3_l_183AF5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_193AF6#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183AF5);
          tensor[2] op1_e3_l_203AF7#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE9,op1_e3_l_193AF6);
          tensor[2] op1_e3_l_213AF8#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3AE5,_t3ACD);
          tensor[2] op1_e3_l_223AF9#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203AF7);
          real _t3AEB#6 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213AF8,op1_e3_l_223AF9);
          real _t3B19#3 = -0.1e-15;
          bool _t3B1B#1 = GTE<real>(_t3AEB,_t3B19);
          bool _t3B1D#1 = GT<real>(time3ADD,_t3AEB);
          real _t3B1F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193AF6);
          real _t3B47#3 = 0.1e-20;
          bool _t3B49#1 = GTE<real>(_t3B1F,_t3B47);
          bool _t3B4B#1 = BAnd(_t3B1D,_t3B49);
          bool _t3B4D#2 = BAnd(_t3B1B,_t3B4B);
          if _t3B4D then goto ASSIGN3B51 else goto JOIN3B5C
        ASSIGN3B51:  preds = [COND3B4F]
          int _t3B50#2 = 0;
          bool _t3B52#1 = NEQ<int>(_t3ADB,_t3B50);
          if _t3B52 then goto JOIN3B58 else goto JOIN3B58
        JOIN3B58:  preds = [COND3B54,COND3B54]
          real faceTime3B55#1 = phi(faceTime3AE1,_t3AEB)
          int face3B56#1 = phi(_t3B50,face3ADF)
          real time3B57#1 = phi(_t3AEB,time3ADD)
          goto JOIN3B5C
        JOIN3B5C:  preds = [JOIN3B58,COND3B4F]
          real faceTime3B59#2 = phi(faceTime3B55,faceTime3AE1)
          int face3B5A#2 = phi(face3B56,face3ADF)
          real time3B5B#3 = phi(time3B57,time3ADD)
          tensor[2] _t3B5D#3 = <tensor[2]>[_t3AE3,_t3AE3];
          tensor[2] _t3B5F#3 = <tensor[2]>[_t3AE3,_t3A79];
          tensor[2] op1_e3_l_183B6B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_193B6C#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183B6B);
          tensor[2] op1_e3_l_203B6D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3B5F,op1_e3_l_193B6C);
          tensor[2] op1_e3_l_213B6E#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223B6F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203B6D);
          real _t3B61#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223B6F);
          bool _t3B8F#2 = GTE<real>(_t3B61,_t3B19);
          bool _t3B91#1 = GT<real>(time3B5B,_t3B61);
          real _t3B93#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193B6C);
          bool _t3BBB#2 = GTE<real>(_t3B93,_t3B47);
          bool _t3BBD#1 = BAnd(_t3B91,_t3BBB);
          bool _t3BBF#1 = BAnd(_t3B8F,_t3BBD);
          if _t3BBF then goto ASSIGN3BC3 else goto JOIN3BCC
        ASSIGN3BC3:  preds = [COND3BC1]
          bool _t3BC2#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3BC2 then goto JOIN3BC8 else goto JOIN3BC8
        JOIN3BC8:  preds = [COND3BC4,COND3BC4]
          real faceTime3BC5#1 = phi(faceTime3B59,_t3B61)
          int face3BC6#1 = phi(_t3AC0,face3B5A)
          real time3BC7#1 = phi(_t3B61,time3B5B)
          goto JOIN3BCC
        JOIN3BCC:  preds = [JOIN3BC8,COND3BC1]
          real faceTime3BC9#2 = phi(faceTime3BC5,faceTime3B59)
          int face3BCA#2 = phi(face3BC6,face3B5A)
          real time3BCB#3 = phi(time3BC7,time3B5B)
          tensor[2] op1_e3_l_183BD7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_193BD8#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183BD7);
          tensor[2] op1_e3_l_203BD9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE5,op1_e3_l_193BD8);
          tensor[2] op1_e3_l_223BDB#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203BD9);
          real _t3BCD#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223BDB);
          bool _t3BFB#2 = GTE<real>(_t3BCD,_t3B19);
          bool _t3BFD#1 = GT<real>(time3BCB,_t3BCD);
          real _t3BFF#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193BD8);
          bool _t3C27#2 = GTE<real>(_t3BFF,_t3B47);
          bool _t3C29#1 = BAnd(_t3BFD,_t3C27);
          bool _t3C2B#1 = BAnd(_t3BFB,_t3C29);
          if _t3C2B then goto ASSIGN3C2F else goto JOIN3C3A
        ASSIGN3C2F:  preds = [COND3C2D]
          int _t3C2E#2 = 2;
          bool _t3C30#1 = NEQ<int>(_t3ADB,_t3C2E);
          if _t3C30 then goto JOIN3C36 else goto JOIN3C36
        JOIN3C36:  preds = [COND3C32,COND3C32]
          real faceTime3C33#1 = phi(faceTime3BC9,_t3BCD)
          int face3C34#1 = phi(_t3C2E,face3BCA)
          real time3C35#1 = phi(_t3BCD,time3BCB)
          goto JOIN3C3A
        JOIN3C3A:  preds = [JOIN3C36,COND3C2D]
          real faceTime3C37#2 = phi(faceTime3C33,faceTime3BC9)
          int face3C38#2 = phi(face3C34,face3BCA)
          real time3C39#1 = phi(time3C35,time3BCB)
          bool _t3C3B#1 = NEQ<int>(face3C38,face3ADF);
          if _t3C3B then goto ASSIGN3C3F else goto ASSIGN3F3D
        ASSIGN3C3F:  preds = [COND3C3D]
          real _t3C3E#1 = Max<real>(time3C39,_t3AE3);
          real _t3C40#1 = IntToReal(face3C38);
          tensor[2] _t3C42#1 = <tensor[2]>[_t3C3E,_t3C40];
          goto JOIN3C46
        JOIN3C46:  preds = [ASSIGN3C43,JOIN3F42]
          tensor[2] _t3C44#1 = phi(_t3C42,_t3C45)
          real nextTime3C47#3 = TensorIndex<tensor[2],[0]>(_t3C44);
          real op1_e3_l_33C4A#1 = λ(T0[],T1[])<(T1) - (T0)> (rayN3A39,camFarVsp3A29);
          real op1_e3_l_43C4B#1 = λ(T0[],T1[])<(T0 * T1)> (nextTime3C47,op1_e3_l_33C4A);
          real _t3C49#1 = λ(T0[],T1[])<(T0 + T1)> (rayN3A39,op1_e3_l_43C4B);
          real _t3C4F#1 = Min<real>(camFarVsp3A29,_t3C49);
          real rayNp3C51#6 = Max<real>(rayN3A39,_t3C4F);
          string _t3C53#1 = "Next time:";
          Print<[string,real,string]>(_t3C53,nextTime3C47,_t3A4B);
          bool _t3C56#1 = GTE<real>(nextTime3C47,_t3AE3);
          if _t3C56 then goto ASSIGN3C5A else goto JOIN3E7E
        ASSIGN3C5A:  preds = [COND3C58]
          tensor[2] _t3C59#1 = <tensor[2]>[rayN3A39,rayNp3C51];
          tensor[2][] rayCellInter3C5B#3 = Append<tensor[2]>(rayCellInter3A31,_t3C59);
          int _t3C5D#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos3A3F);
          if _t3B4D then goto ASSIGN3CC1 else goto JOIN3CCC
        ASSIGN3CC1:  preds = [COND3CBF]
          int _t3CC0#2 = 0;
          bool _t3CC2#1 = NEQ<int>(_t3ADB,_t3CC0);
          if _t3CC2 then goto JOIN3CC8 else goto JOIN3CC8
        JOIN3CC8:  preds = [COND3CC4,COND3CC4]
          real faceTime3CC5#1 = phi(faceTime3AE1,_t3AEB)
          int face3CC6#1 = phi(_t3CC0,face3ADF)
          real time3CC7#1 = phi(_t3AEB,time3ADD)
          goto JOIN3CCC
        JOIN3CCC:  preds = [JOIN3CC8,COND3CBF]
          real faceTime3CC9#2 = phi(faceTime3CC5,faceTime3AE1)
          int face3CCA#2 = phi(face3CC6,face3ADF)
          real time3CCB#3 = phi(time3CC7,time3ADD)
          bool _t3CFD#1 = GT<real>(time3CCB,_t3B61);
          bool _t3D29#1 = BAnd(_t3CFD,_t3BBB);
          bool _t3D2B#1 = BAnd(_t3B8F,_t3D29);
          if _t3D2B then goto ASSIGN3D2F else goto JOIN3D38
        ASSIGN3D2F:  preds = [COND3D2D]
          bool _t3D2E#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3D2E then goto JOIN3D34 else goto JOIN3D34
        JOIN3D34:  preds = [COND3D30,COND3D30]
          real faceTime3D31#1 = phi(faceTime3CC9,_t3B61)
          int face3D32#1 = phi(_t3AC0,face3CCA)
          real time3D33#1 = phi(_t3B61,time3CCB)
          goto JOIN3D38
        JOIN3D38:  preds = [JOIN3D34,COND3D2D]
          real faceTime3D35#2 = phi(faceTime3D31,faceTime3CC9)
          int face3D36#2 = phi(face3D32,face3CCA)
          real time3D37#3 = phi(time3D33,time3CCB)
          bool _t3D69#1 = GT<real>(time3D37,_t3BCD);
          bool _t3D95#1 = BAnd(_t3D69,_t3C27);
          bool _t3D97#1 = BAnd(_t3BFB,_t3D95);
          if _t3D97 then goto ASSIGN3D9B else goto JOIN3DA6
        ASSIGN3D9B:  preds = [COND3D99]
          int _t3D9A#2 = 2;
          bool _t3D9C#1 = NEQ<int>(_t3ADB,_t3D9A);
          if _t3D9C then goto JOIN3DA2 else goto JOIN3DA2
        JOIN3DA2:  preds = [COND3D9E,COND3D9E]
          real faceTime3D9F#1 = phi(faceTime3D35,_t3BCD)
          int face3DA0#1 = phi(_t3D9A,face3D36)
          real time3DA1#1 = phi(_t3BCD,time3D37)
          goto JOIN3DA6
        JOIN3DA6:  preds = [JOIN3DA2,COND3D99]
          real faceTime3DA3#2 = phi(faceTime3D9F,faceTime3D35)
          int face3DA4#2 = phi(face3DA0,face3D36)
          real time3DA5#1 = phi(time3DA1,time3D37)
          bool _t3DA7#1 = NEQ<int>(face3DA4,face3ADF);
          if _t3DA7 then goto ASSIGN3DAB else goto ASSIGN3F33
        ASSIGN3DAB:  preds = [COND3DA9]
          real _t3DAA#1 = Max<real>(time3DA5,_t3AE3);
          real _t3DAC#1 = IntToReal(face3DA4);
          tensor[2] _t3DAE#1 = <tensor[2]>[_t3DAA,_t3DAC];
          goto JOIN3DB2
        JOIN3DB2:  preds = [ASSIGN3DAF,JOIN3F38]
          tensor[2] _t3DB0#3 = phi(_t3DAE,_t3DB1)
          real _t3DB3#1 = TensorIndex<tensor[2],[1]>(_t3DB0);
          real t3DB6#1 = Floor<1>(_t3DB3);
          int _t3DB5#6 = RealToInt<1>(t3DB6);
          int[2] _t3DCB#2 = nextCell43DB9 (_t3DB5,_t3C5D,_t3A55);
          int _t3DCD#4 = 0;
          int _t3DCF#2 = Subscript<int[2]>(_t3DCB,_t3DCD);
          bool _t3DD1#1 = NEQ<int>(face3ADF,_t3DCF);
          if _t3DD1 then goto ASSIGN3DD5 else goto ASSIGN3F0A
        ASSIGN3DD5:  preds = [COND3DD3]
          tensor[2][3] _t3DD4#1 = <tensor[2][3]>{_t3AE5,_t3B5D,_t3B5D};
          int _t3DD6#3 = Subscript<int[2]>(_t3DCB,_t3AC0);
          tensor[2] _t3DD8#1 = Subscript<tensor[2][3]>(_t3DD4,_t3DD6);
          tensor[2][3] _t3DDA#1 = <tensor[2][3]>{_t3AE9,_t3B5F,_t3AE5};
          tensor[2] _t3DDC#1 = Subscript<tensor[2][3]>(_t3DDA,_t3DD6);
          real _t3DDE#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163DEA#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3DDE,op1_e3_l_173AF4);
          tensor[2] _t3DE0#2 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163DEA);
          real _t3E06#1 = TensorIndex<tensor[2],[0]>(_t3DE0);
          real _t3E08#1 = TensorIndex<tensor[2],[1]>(_t3DE0);
          real[2] _t3E0A#1 = <real[2]>{_t3E06,_t3E08};
          int[3] _t3E0C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E0E#1 = Subscript<int[3]>(_t3E0C,_t3DB5);
          real _t3E10#1 = Subscript<real[2]>(_t3E0A,_t3E0E);
          real[2] _t3E12#1 = <real[2]>{_t3A79,_t3AE3};
          real[2] _t3E14#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2] _t3E16#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2][3] _t3E18#1 = <real[2][3]>{_t3E12,_t3E14,_t3E16};
          real[2] _t3E1A#1 = Subscript<real[2][3]>(_t3E18,_t3DB5);
          int[3] _t3E1C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E1E#1 = Subscript<int[3]>(_t3E1C,_t3DB5);
          real _t3E20#1 = Subscript<real[2]>(_t3E1A,_t3E1E);
          real[2] _t3E22#1 = <real[2]>{_t3AE7,_t3A79};
          real[2] _t3E24#1 = <real[2]>{_t3AE3,_t3A79};
          real[2] _t3E26#1 = <real[2]>{_t3A79,_t3AE3};
          real[2][3] _t3E28#1 = <real[2][3]>{_t3E22,_t3E24,_t3E26};
          real[2] _t3E2A#1 = Subscript<real[2][3]>(_t3E28,_t3DB5);
          int[3] _t3E2C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E2E#1 = Subscript<int[3]>(_t3E2C,_t3DB5);
          real _t3E30#1 = Subscript<real[2]>(_t3E2A,_t3E2E);
          real op1_e3_l_53E33#1 = λ(T0[],T1[])<(T0) - (T1)> (_t3E10,_t3E20);
          real op1_e3_l_63E34#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t3E30,op1_e3_l_53E33);
          tensor[2] op1_e3_l_73E35#1 = λ(T0[2],T1[])<(T1 * T0_{i0})>_{2} (_t3DDC,op1_e3_l_63E34);
          tensor[2] _t3E32#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3DD8,op1_e3_l_73E35);
          femData:MeshPos _t3E3A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t3A55,_t3DCF,_t3E32,_t3DD6);
          goto JOIN3E3E
        JOIN3E3E:  preds = [ASSIGN3E3B,ASSIGN3F31]
          femData:MeshPos posp3E3C#5 = phi(_t3E3A,_t3E3D)
          bool _t3E3F#1 = GTE<real>(rayNp3C51,camFarVsp3A29);
          if _t3E3F then goto ASSIGN3E43 else goto JOIN3E51
        ASSIGN3E43:  preds = [COND3E41]
          string _t3E42#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t3E42,cellInter3A37,_t3A4B);
          tensor[3] op1_e3_l_33E46#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp3A29,rayVec3A27);
          tensor[3] _t3E45#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E46);
          tensor[3][] spaceInter3E49#1 = Append<tensor[3]>(spaceInter3A33,_t3E45);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E49;
          self.rayN = rayNp3C51;
          self.steps = steps3AC2;
          stabilize
          goto JOIN3E51
        JOIN3E51:  preds = [*STABILIZE3E4F,COND3E41]
          tensor[3][] spaceInter3E50#1 = phi(spaceInter3A33)
          tensor[3] op1_e3_l_33E53#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayNp3C51,rayVec3A27);
          tensor[3] _t3E52#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E53);
          tensor[3][] spaceInter3E56#2 = Append<tensor[3]>(spaceInter3E50,_t3E52);
          tensor[2] _t3E58#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp3E3C);
          tensor[2][] refSpaceInter3E5A#2 = Append<tensor[2]>(refSpaceInter3A35,_t3E58);
          bool _t3E5C#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp3E3C);
          if _t3E5C then goto ASSIGN3E60 else goto ASSIGN3F07
        ASSIGN3E60:  preds = [COND3E5E]
          string _t3E5F#1 = "Next cell:";
          femData:Mesh _t3E61#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E3C);
          int _t3E63#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E3C);
          femData:MeshCell _t3E65#3 = LoadFem<femData:MeshCell>(_t3E61,_t3E63);
          Print<[string,femData:MeshCell,string]>(_t3E5F,_t3E65,_t3A4B);
          femData:MeshCell[] cellInter3E68#1 = Append<femData:MeshCell>(cellInter3A37,_t3E65);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E56;
          self.refSpaceInter = refSpaceInter3E5A;
          self.cellInter = cellInter3E68;
          self.rayN = rayNp3C51;
          self.currentCell = _t3E65;
          self.steps = steps3AC2;
          self.pos = posp3E3C;
          active
          goto JOIN3E76
        JOIN3E76:  preds = [*ACTIVE3E72,MASSIGN3F08]
          femData:MeshPos pos3E73#1 = phi(pos3A3F)
          femData:MeshCell currentCell3E74#1 = phi(currentCell3A3B)
          femData:MeshCell[] cellInter3E75#1 = phi(cellInter3A37)
          goto JOIN3E7E
        JOIN3E7E:  preds = [JOIN3E76,COND3C58]
          femData:MeshPos pos3E77#6 = phi(pos3E73,pos3A3F)
          femData:MeshCell currentCell3E78#1 = phi(currentCell3E74,currentCell3A3B)
          real rayN3E79#3 = phi(rayNp3C51,rayN3A39)
          femData:MeshCell[] cellInter3E7A#3 = phi(cellInter3E75,cellInter3A37)
          tensor[2][] refSpaceInter3E7B#2 = phi(refSpaceInter3E5A,refSpaceInter3A35)
          tensor[3][] spaceInter3E7C#2 = phi(spaceInter3E56,spaceInter3A33)
          tensor[2][] rayCellInter3E7D#3 = phi(rayCellInter3C5B,rayCellInter3A31)
          int _t3E7F#1 = 0;
          int _t3E81#1 = ISub(cellIntersects3A2F,_t3AC0);
          int[] _t3E83#1 = Range(_t3E7F,_t3E81);
        FOREACH3E86:  preds = [ASSIGN3E84,NEXT3EAF]
          foreach (i3E85 in _t3E83) on exit goto ASSIGN3EB1
            real estimate3E8F#4 = phi(camFarVsp3A29,estimate3EAC)
            int newIdx3EA7#7 = phi(face3ADF,newIdx3EAD)
          real t3E87#3 = Subscript<real[]>(normalizedTimes3A2D,i3E85);
          femData:MeshPos posp3E89#2 = Subscript<femData:MeshPos[]>(poses3A2B,i3E85);
          bool _t3E8B#1 = GTE<real>(t3E87,rayN3E79);
          if _t3E8B then goto ASSIGN3E90 else goto JOIN3EAE
        ASSIGN3E90:  preds = [COND3E8D]
          bool _t3E8E#1 = GTE<real>(estimate3E8F,t3E87);
          if _t3E8E then goto ASSIGN3E93 else goto JOIN3EAB
        ASSIGN3E93:  preds = [COND3E91]
          femData:Mesh _t3E92#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E89);
          int _t3E94#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E89);
          femData:MeshCell _t3E96#1 = LoadFem<femData:MeshCell>(_t3E92,_t3E94);
          femData:Mesh _t3E98#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int _t3E9A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:MeshCell _t3E9C#1 = LoadFem<femData:MeshCell>(_t3E98,_t3E9A);
          int _t3E9E#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E96);
          int _t3EA0#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E9C);
          bool _t3EA2#1 = NEQ<int>(_t3E9E,_t3EA0);
          if _t3EA2 then goto JOIN3EA8 else goto JOIN3EA8
        JOIN3EA8:  preds = [COND3EA4,COND3EA4]
          real estimate3EA5#1 = phi(t3E87,estimate3E8F)
          int newIdx3EA6#1 = phi(i3E85,newIdx3EA7)
          goto JOIN3EAB
        JOIN3EAB:  preds = [JOIN3EA8,COND3E91]
          real estimate3EA9#1 = phi(estimate3EA5,estimate3E8F)
          int newIdx3EAA#1 = phi(newIdx3EA6,newIdx3EA7)
          goto JOIN3EAE
        JOIN3EAE:  preds = [JOIN3EAB,COND3E8D]
          real estimate3EAC#1 = phi(estimate3EA9,estimate3E8F)
          int newIdx3EAD#1 = phi(newIdx3EAA,newIdx3EA7)
          goto FOREACH3E86
        ASSIGN3EB1:  preds = [FOREACH3E86]
          bool _t3EB0#1 = GT<int>(newIdx3EA7,face3ADF);
          if _t3EB0 then goto ASSIGN3EB4 else goto ASSIGN3EF2
        ASSIGN3EB4:  preds = [COND3EB2]
          string _t3EB3#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t3EB3);
          if startsInside3A41 then goto ASSIGN3EB8 else goto JOIN3EBA
        ASSIGN3EB8:  preds = [COND3EB6]
          string _t3EB7#1 = "because of an inside\n";
          Print<[string]>(_t3EB7);
          goto JOIN3EBA
        JOIN3EBA:  preds = [MASSIGN3EB9,COND3EB6]
          string _t3EBB#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t3EBB,rayVec3A27,_t3A4B);
          string _t3EBE#1 = "world pos was:";
          tensor[2] _t3EC0#4 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3E77);
          int _t3EC2#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:Mesh _t3EC4#4 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int[3] femIndicies3EC8#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3EC4,_t3EC2);
          tensor[3,2] femDofs3EC9#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3EC4,femIndicies3EC8);
          tensor[3] basisResult3ECA#1 = EvaluateBasis<BasisArray(3)>(_t3EC0);
          tensor[2] _t3EC6#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3EC2,_t3EC4,_t3EC4,_t3EC0,femDofs3EC9,basisResult3ECA,_t3EC0);
          Print<[string,tensor[2],string]>(_t3EBE,_t3EC6,_t3A4B);
          string _t3ED1#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t3ED1,_t3EC0,_t3A4B);
          string _t3ED4#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes3A2D,_t3ED4,newIdx3EA7,_t3A4B);
          string _t3ED7#1 = "Original time was:";
          Print<[string,real,string]>(_t3ED7,rayN3E79,_t3A4B);
          femData:MeshPos pos3EDA#3 = Subscript<femData:MeshPos[]>(poses3A2B,newIdx3EA7);
          femData:Mesh _t3EDC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3EDA);
          int _t3EDE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3EDA);
          femData:MeshCell currentCell3EE0#2 = LoadFem<femData:MeshCell>(_t3EDC,_t3EDE);
          femData:MeshCell[] cellInter3EE2#1 = Append<femData:MeshCell>(cellInter3E7A,currentCell3EE0);
          real rayN3EE4#1 = Subscript<real[]>(normalizedTimes3A2D,newIdx3EA7);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3EE2;
          self.rayN = rayN3EE4;
          self.currentCell = currentCell3EE0;
          self.steps = steps3AC2;
          self.pos = pos3EDA;
          active
          goto JOIN3EEF
        JOIN3EEF:  preds = [*ACTIVE3EEE,*STABILIZE3F05]
          unreachable
        ASSIGN3EF2:  preds = [COND3EB2]
          string _t3EF1#1 = "Enter times:";
          Print<[string,real[],string]>(_t3EF1,normalizedTimes3A2D,_t3A4B);
          string _t3EF4#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t3EF4,rayCellInter3E7D,_t3A4B);
          string _t3EF7#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t3EF7,cellInter3E7A,_t3A4B);
          string _t3EFA#1 = "End\n";
          Print<[string]>(_t3EFA);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3E7A;
          self.rayN = rayN3E79;
          self.currentCell = currentCell3E78;
          self.steps = steps3AC2;
          self.pos = pos3E77;
          stabilize
          goto JOIN3EEF
        ASSIGN3F07:  preds = [COND3E5E]
          string _t3F06#1 = "Invalid\n";
          Print<[string]>(_t3F06);
          goto JOIN3E76
        ASSIGN3F0A:  preds = [COND3DD3]
          real _t3F09#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163F15#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3F09,op1_e3_l_173AF4);
          tensor[2] _t3F0B#1 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163F15);
          femData:MeshPos _t3E3D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t3A55,_t3F0B);
          goto JOIN3E3E
        ASSIGN3F33:  preds = [COND3DA9]
          bool _t3F32#1 = EQ<real>(faceTime3AE1,faceTime3DA3);
          if _t3F32 then goto ASSIGN3F36 else goto ASSIGN3F3A
        ASSIGN3F36:  preds = [COND3F34]
          tensor[2] _t3F35#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F38
        JOIN3F38:  preds = [ASSIGN3F36,ASSIGN3F3B]
          tensor[2] _t3DB1#1 = phi(_t3F35,_t3F37)
          goto JOIN3DB2
        ASSIGN3F3A:  preds = [COND3F34]
          real _t3F39#1 = IntToReal(_t3ADB);
          tensor[2] _t3F37#1 = <tensor[2]>[faceTime3DA3,_t3F39];
          goto JOIN3F38
        ASSIGN3F3D:  preds = [COND3C3D]
          bool _t3F3C#1 = EQ<real>(faceTime3AE1,faceTime3C37);
          if _t3F3C then goto ASSIGN3F40 else goto ASSIGN3F44
        ASSIGN3F40:  preds = [COND3F3E]
          tensor[2] _t3F3F#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F42
        JOIN3F42:  preds = [ASSIGN3F40,ASSIGN3F45]
          tensor[2] _t3C45#1 = phi(_t3F3F,_t3F41)
          goto JOIN3C46
        ASSIGN3F44:  preds = [COND3F3E]
          real _t3F43#1 = IntToReal(_t3ADB);
          tensor[2] _t3F41#1 = <tensor[2]>[faceTime3C37,_t3F43];
          goto JOIN3F42
        ASSIGN3F47:  preds = [COND3ABB]
          string _t3F46#1 = "Did not move off ray!\n";
          Print<[string]>(_t3F46);
          goto JOIN3ABF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY3F4A:  preds = []
      int iresU3F4B#1 = globals.iresU2CA8;
      int iresV3F4D#1 = globals.iresV2CA9;
      int _t3F4F#2 = 0;
      int _t3F51#2 = 1;
      int _t3F53#1 = ISub(iresU3F4B,_t3F51);
      int[] _t3F55#1 = Range(_t3F4F,_t3F53);
    FOREACH3F58:  preds = [ASSIGN3F56,NEXT3F61]
      foreach (vi3F57 in _t3F55) on exit goto RETURN3F62
      int _t3F59#1 = ISub(iresV3F4D,_t3F51);
      int[] _t3F5B#1 = Range(_t3F4F,_t3F59);
    FOREACH3F5E:  preds = [ASSIGN3F5C,NEXT3F60]
      foreach (ui3F5D in _t3F5B) on exit goto NEXT3F61
      new ray(ui3F5D,vi3F57);
      goto FOREACH3F5E
    NEXT3F61:  preds = [FOREACH3F5E]
      goto FOREACH3F58
    RETURN3F62:  preds = [FOREACH3F58]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a2CA1 (a) = <no-default>
  input isoval2CA2 (isoval) = <default>
  input thick2CA3 (thick) = <default>
  input camEye2CA4 (camEye) = <default>
  input camAt2CA5 (camAt) = <default>
  input camUp2CA6 (camUp) = <default>
  input camFOV2CA7 (camFOV) = <default>
  input iresU2CA8 (iresU) = <default>
  input iresV2CA9 (iresV) = <default>
  input camNear2CAA (camNear) = <default>
  input camFar2CAB (camFar) = <default>
  input refStep2CAC (refStep) = <default>
  input rayStep2CAD (rayStep) = <default>
  input lightVsp2CAE (lightVsp) = <default>
  input phongKa2CAF (phongKa) = <default>
  input phongKd2CB0 (phongKd) = <default>
  input debug2CB1 (debug) = <default>
  input debugU2CB2 (debugU) = <default>
  input debugV2CB3 (debugV) = <default>
  input eps2CB4 (eps) = <default>
  global femData:MeshCell[] 0cell_a2CB5
  global real camNearVsp2CB6
  global real camFarVsp2CB7
  global tensor[3] camN2CB8
  global tensor[3] camU2CB9
  global tensor[3] camV2CBA
  global real camVmax2CBB
  global real camUmax2CBC
## functions
  function femData:MeshPos _msh_newtonInverse2F5F (tensor[2] pos2F60#3, int cellInt2F61#7, femData:Mesh mesh2F62#10) {
    ENTRY2F63:  preds = []
      real _t2F64#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn2F66#8 = <tensor[2]>[_t2F64,_t2F64];
      int _t2F68#1 = 0;
      int _t2F6A#1 = 16;
      int[] _t2F6C#1 = Range(_t2F68,_t2F6A);
    FOREACH2F6F:  preds = [ASSIGN2F6D,NEXT304C]
      foreach (itter2F6E in _t2F6C) on exit goto ASSIGN3051
        tensor[2] xn2F71#6 = phi(xn2F66,xn2F70)
      int[3] femIndicies2F7E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2F7F#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2F7E);
      tensor[2,3] basisResult2F80#3 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_102F72#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2,2] op1_e3_l_112F73#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_102F72);
      tensor[2] probe_l_122F74#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] probe_l_132F75#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] op1_e3_l_142F76#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_132F75);
      tensor[2,2] op1_e3_l_152F77#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_112F73);
      real op1_e3_l_162F78#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_122F74,op1_e3_l_142F76);
      tensor[3] basisResult2F86#2 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_172F79#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2,2] op1_e3_l_182F7A#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_152F77,op1_e3_l_162F78);
      tensor[2] op1_e3_l_192F7B#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_172F79);
      tensor[2] op1_e3_l_202F7C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_192F7B);
      tensor[2] xn2F70#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_202F7C);
      real _t2F9D#2 = 0.1e-7;
      real _t2F9F#1 = λ(T0[],T1[])<(T0 * T1)> (_t2F9D,_t2F9D);
      tensor[2] probe_l_252FA9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F71,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2] op1_e3_l_272FAB#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_252FA9);
      tensor[2] op1_e3_l_382FAC#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_272FAB);
      real _t2FA1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_382FAC,op1_e3_l_382FAC);
      bool _t2FCD#1 = GTE<real>(_t2F9F,_t2FA1);
      if _t2FCD then goto ASSIGN2FD1 else goto JOIN304B
    ASSIGN2FD1:  preds = [COND2FCF]
      real _t2FD0#3 = 0.1e1;
      real _t2FD2#3 = 0.1e-8;
      real _t2FD4#1 = λ(T0[],T1[])<(T0 + T1)> (_t2FD0,_t2FD2);
      tensor[2] _t2FD6#1 = <tensor[2]>[_t2FD0,_t2FD0];
      real _t2FD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t2FD6,xn2F70);
      bool _t3006#1 = GT<real>(_t2FD4,_t2FD8);
      tensor[2] _t3008#1 = <tensor[2]>[_t2FD2,_t2FD2];
      tensor[2] _t300A#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3008,xn2F70);
      real _t3038#1 = TensorIndex<tensor[2],[0]>(_t300A);
      real _t303A#2 = -0.e0;
      bool _t303C#1 = GT<real>(_t3038,_t303A);
      real _t303E#1 = TensorIndex<tensor[2],[1]>(_t300A);
      bool _t3040#1 = GT<real>(_t303E,_t303A);
      bool _t3042#1 = BAnd(_t303C,_t3040);
      bool _t3044#1 = BAnd(_t3006,_t3042);
      if _t3044 then goto ASSIGN3048 else goto ASSIGN304E
    ASSIGN3048:  preds = [COND3046]
      femData:MeshPos _t3047#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2F62,cellInt2F61,xn2F70,pos2F60);
      return _t3047
      goto JOIN304A
    JOIN304A:  preds = [*RETURN(_t3047)3049,*RETURN(_t304D)304F]
      goto JOIN304B
    JOIN304B:  preds = [*JOIN304A,COND2FCF]
      goto FOREACH2F6F
    ASSIGN304E:  preds = [COND3046]
      femData:MeshPos _t304D#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t304D
      goto JOIN304A
    ASSIGN3051:  preds = [FOREACH2F6F]
      femData:MeshPos _t3050#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t3050
}
  function int[2] nextCell43DB9 (int faceIdx3DBA#1, int cell3DBB#1, femData:Mesh mesh3DBC#1) {
    ENTRY3DBD:  preds = []
      int _t3DBE#1 = 6;
      int _t3DC0#1 = IMul(cell3DBB,_t3DBE);
      int _t3DC2#1 = 2;
      int _t3DC4#1 = IMul(faceIdx3DBA,_t3DC2);
      int _t3DC6#1 = IAdd(_t3DC0,_t3DC4);
      int[2] _t3DC8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3DBC,_t3DC6);
      return _t3DC8
}
## input initialization
  ENTRY2CBD:  preds = []
    real isoval2CBE#1 = 0.2e0;
    globals.isoval2CA2 = isoval2CBE;
    real thick2CC1#1 = 0.7e-1;
    globals.thick2CA3 = thick2CC1;
    real _t2CC4#2 = 0.3e1;
    real _t2CC6#1 = -0.3e1;
    tensor[3] camEye2CC8#1 = <tensor[3]>[_t2CC4,_t2CC6,_t2CC4];
    globals.camEye2CA4 = camEye2CC8;
    real _t2CCB#3 = 0.5e0;
    tensor[3] camAt2CCD#1 = <tensor[3]>[_t2CCB,_t2CCB,_t2CCB];
    globals.camAt2CA5 = camAt2CCD;
    real _t2CD0#2 = 0.e0;
    real _t2CD2#2 = 0.1e1;
    tensor[3] camUp2CD4#2 = <tensor[3]>[_t2CD0,_t2CD0,_t2CD2];
    globals.camUp2CA6 = camUp2CD4;
    real camFOV2CD7#1 = 0.137e2;
    globals.camFOV2CA7 = camFOV2CD7;
    int iresU2CDA#2 = 10;
    globals.iresU2CA8 = iresU2CDA;
    globals.iresV2CA9 = iresU2CDA;
    real camNear2CDE#1 = -0.2e1;
    globals.camNear2CAA = camNear2CDE;
    real camFar2CE1#1 = 0.5e1;
    globals.camFar2CAB = camFar2CE1;
    globals.refStep2CAC = _t2CD2;
    real rayStep2CE5#1 = 0.1e-1;
    globals.rayStep2CAD = rayStep2CE5;
    globals.lightVsp2CAE = camUp2CD4;
    real phongKa2CE9#1 = 0.1e0;
    globals.phongKa2CAF = phongKa2CE9;
    real phongKd2CEC#1 = 0.9e0;
    globals.phongKd2CB0 = phongKd2CEC;
    bool debug2CEF#1 = false;
    globals.debug2CB1 = debug2CEF;
    int debugU2CF2#1 = 8;
    globals.debugU2CB2 = debugU2CF2;
    int debugV2CF5#1 = 2;
    globals.debugV2CB3 = debugV2CF5;
    real eps2CF8#1 = 0.1e-7;
    globals.eps2CB4 = eps2CF8;
    return
## global-variable initialization
  ENTRY2CFC:  preds = []
    femData:Mesh a2CFD#2 = globals.a2CA1;
    tensor[3] camEye2CFF#1 = globals.camEye2CA4;
    tensor[3] camAt2D01#1 = globals.camAt2CA5;
    tensor[3] camUp2D03#1 = globals.camUp2CA6;
    real camFOV2D05#1 = globals.camFOV2CA7;
    int iresU2D07#1 = globals.iresU2CA8;
    int iresV2D09#1 = globals.iresV2CA9;
    real camNear2D0B#1 = globals.camNear2CAA;
    real camFar2D0D#1 = globals.camFar2CAB;
    int _t2D0F#1 = 0;
    int _t2D11#1 = 1;
    int _t2D13#1 = ExtractFemItem<int,NumCell(Mesh)>(a2CFD);
    int _t2D15#1 = ISub(_t2D13,_t2D11);
    int[] _t2D17#1 = Range(_t2D0F,_t2D15);
    femData:MeshCell[] _t2D19#1 = <femData:MeshCell[]>{};
  FOREACH2D1C:  preds = [ASSIGN2D1A,NEXT2D22]
    foreach (_t2D1B in _t2D17) on exit goto GASSIGN2D23
      femData:MeshCell[] _t2D20#2 = phi(_t2D19,_t2D1F)
    femData:MeshCell _t2D1D#1 = LoadFem<femData:MeshCell>(a2CFD,_t2D1B);
    femData:MeshCell[] _t2D1F#1 = Append<femData:MeshCell>(_t2D20,_t2D1D);
    goto FOREACH2D1C
  GASSIGN2D23:  preds = [FOREACH2D1C]
    globals.0cell_a2CB5 = _t2D20;
    tensor[3] op1_e3_l_32D25#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_52D26#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_32D25,op1_e3_l_32D25);
    real op1_e3_l_62D27#5 = λ(T0[])<Sqrt(T0)> (op1_e3_l_52D26);
    real camNearVsp2D24#1 = λ(T0[],T1[])<(T0 + T1)> (camNear2D0B,op1_e3_l_62D27);
    globals.camNearVsp2CB6 = camNearVsp2D24;
    real camFarVsp2D2D#1 = λ(T0[],T1[])<(T0 + T1)> (camFar2D0D,op1_e3_l_62D27);
    globals.camFarVsp2CB7 = camFarVsp2D2D;
    real op1_e3_l_92D3A#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_62D27);
    tensor[3] camN2D36#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_32D25,op1_e3_l_92D3A);
    globals.camN2CB8 = camN2D36;
    tensor[3,3] op1_e3_l_152D45#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp2D03);
    tensor[3] op1_e3_l_172D47#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_32D25,op1_e3_l_152D45);
    real op1_e3_l_342D48#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_172D47,op1_e3_l_172D47);
    real op1_e3_l_352D49#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_92D3A,op1_e3_l_92D3A,op1_e3_l_342D48);
    real op1_e3_l_362D4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_352D49);
    tensor[3] op1_e3_l_372D4B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_172D47);
    real op1_e3_l_382D4C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_362D4A);
    tensor[3] camU2D41#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_372D4B,op1_e3_l_382D4C);
    globals.camU2CB9 = camU2D41;
    tensor[3,3] op1_e3_l_452D64#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_32D25);
    tensor[3] op1_e3_l_472D65#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_172D47,op1_e3_l_452D64);
    tensor[3] op1_e3_l_502D67#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_472D65);
    tensor[3] camV2D5A#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_382D4C,op1_e3_l_92D3A,op1_e3_l_502D67);
    globals.camV2CBA = camV2D5A;
    real _t2D77#1 = 0.314159265358979323846264338327950288e1;
    real _t2D79#1 = 0.36e3;
    real op1_e3_l_52D7C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV2D05,_t2D77);
    real op1_e3_l_62D7D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D79,op1_e3_l_52D7C);
    real op1_e3_l_102D80#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_62D7D);
    real camVmax2D7B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102D80,op1_e3_l_62D27);
    globals.camVmax2CBB = camVmax2D7B;
    real _t2D8A#1 = IntToReal(iresU2D07);
    real _t2D8C#1 = IntToReal(iresV2D09);
    real op1_e3_l_142D95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t2D8A,op1_e3_l_102D80,op1_e3_l_62D27);
    real camUmax2D8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D8C,op1_e3_l_142D95);
    globals.camUmax2CBC = camUmax2D8E;
    return
## strand
  strand ray (int ui2DA0#2, int vi2DA1#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY2DBD:  preds = []
        femData:Mesh a2DBE#1 = globals.a2CA1;
        femData:MeshCell[] 0cell_a2DC0#1 = globals.0cell_a2CB5;
        tensor[3] camEye2DC2#3 = globals.camEye2CA4;
        int iresU2DC4#1 = globals.iresU2CA8;
        int iresV2DC6#1 = globals.iresV2CA9;
        real camNearVsp2DC8#2 = globals.camNearVsp2CB6;
        real camFarVsp2DCA#2 = globals.camFarVsp2CB7;
        tensor[3] camN2DCC#1 = globals.camN2CB8;
        tensor[3] camU2DCE#1 = globals.camU2CB9;
        tensor[3] camV2DD0#1 = globals.camV2CBA;
        real camVmax2DD2#2 = globals.camVmax2CBB;
        real camUmax2DD4#2 = globals.camUmax2CBC;
        real _t2DD6#5 = -0.5e0;
        real _t2DD8#1 = IntToReal(ui2DA0);
        real _t2DDA#1 = IntToReal(iresU2DC4);
        real _t2DDC#3 = 0.5e0;
        real op1_e3_l_62DDF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_72DE0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_82DE1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DDF);
        real op1_e3_l_92DE2#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_102DE3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DE0,op1_e3_l_82DE1);
        real op1_e3_l_112DE4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_92DE2);
        real op1_e3_l_132DE5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DE3,op1_e3_l_112DE4);
        real rayU2DDE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DE2,op1_e3_l_132DE5);
        real _t2DEE#1 = IntToReal(vi2DA1);
        real _t2DF0#2 = IntToReal(iresV2DC6);
        real op1_e3_l_62DF3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DF0,_t2DDC);
        real op1_e3_l_72DF4#2 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_82DF5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DF3);
        real op1_e3_l_92DF6#3 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_102DF7#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_82DF5);
        real op1_e3_l_112DF8#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_92DF6);
        real op1_e3_l_132DF9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DF7,op1_e3_l_112DF8);
        real rayV2DF2#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_132DF9);
        real op1_e3_l_232E0B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_252E0D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_232E0B);
        real op1_e3_l_272E0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_252E0D);
        real op1_e3_l_302E11#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_272E0F,op1_e3_l_112DF8);
        real op1_e3_l_312E12#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_302E11);
        tensor[3] op1_e3_l_322E13#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,rayU2DDE);
        tensor[3] op1_e3_l_332E14#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_312E12);
        tensor[3] UV2E02#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_322E13,op1_e3_l_332E14);
        tensor[3] rayOrig2E28#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14);
        real _t2E4E#4 = 0.e0;
        tensor[3] _t2E50#1 = <tensor[3]>[_t2E4E,_t2E4E,_t2E4E];
        tensor[3] rayVec2E52#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_392E68#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp2DC8,rayVec2E52);
        tensor[3] rayStart2E54#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E68);
        real _t2E7E#1 = TensorIndex<tensor[3],[0]>(rayStart2E54);
        real _t2E80#1 = TensorIndex<tensor[3],[1]>(rayStart2E54);
        tensor[2] rayStartProj2E82#1 = <tensor[2]>[_t2E7E,_t2E80];
        tensor[3] op1_e3_l_392E98#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2DCA,rayVec2E52);
        tensor[3] rayEnd2E84#2 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E98);
        tensor[3] dpos2EAE#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (rayEnd2E84,rayStart2E54);
        real _t2EDE#1 = TensorIndex<tensor[3],[0]>(dpos2EAE);
        real _t2EE0#1 = TensorIndex<tensor[3],[1]>(dpos2EAE);
        tensor[2] dposProj2EE2#1 = <tensor[2]>[_t2EDE,_t2EE0];
        femData:MeshPos[0] _t2EE4#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t2EE6#1 = MkDynamic<femData:MeshPos,0>(_t2EE4);
        real[0] _t2EE8#1 = <real[0]>{};
        real[] _t2EEA#1 = MkDynamic<real,0>(_t2EE8);
        int cellIntersects2EEC#3 = 0;
        tensor[2][0] _t2EEE#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF0#1 = MkDynamic<tensor[2],0>(_t2EEE);
        tensor[3][0] _t2EF2#1 = <tensor[3][0]>{};
        tensor[3][] _t2EF4#1 = MkDynamic<tensor[3],0>(_t2EF2);
        tensor[2][0] _t2EF6#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF8#1 = MkDynamic<tensor[2],0>(_t2EF6);
        femData:MeshCell[0] _t2EFA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t2EFC#1 = MkDynamic<femData:MeshCell,0>(_t2EFA);
        int currentCellInt2EFE#1 = -1;
        femData:MeshCell currentCell2F00#1 = Subscript<femData:MeshCell[]>(0cell_a2DC0,cellIntersects2EEC);
        femData:MeshPos pos2F02#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a2DBE);
        bool startsInside2F04#1 = false;
        self.rayU = rayU2DDE;
        self.rayV = rayV2DF2;
        self.UV = UV2E02;
        self.rayOrig = rayOrig2E28;
        self.rayVec = rayVec2E52;
        self.camNearVsp = camNearVsp2DC8;
        self.camFarVsp = camFarVsp2DCA;
        self.rayStart = rayStart2E54;
        self.rayStartProj = rayStartProj2E82;
        self.rayEnd = rayEnd2E84;
        self.dpos = dpos2EAE;
        self.dposProj = dposProj2EE2;
        self.poses = _t2EE6;
        self.normalizedTimes = _t2EEA;
        self.cellIntersects = cellIntersects2EEC;
        self.rayCellInter = _t2EF0;
        self.spaceInter = _t2EF4;
        self.refSpaceInter = _t2EF8;
        self.cellInter = _t2EFC;
        self.currentCellInt = currentCellInt2EFE;
        self.rayN = _t2E4E;
        self.currentCell = currentCell2F00;
        self.steps = cellIntersects2EEC;
        self.pos = pos2F02;
        self.startsInside = startsInside2F04;
        self.ui = ui2DA0;
        self.vi = vi2DA1;
        return
    end state init
    method start
        ENTRY2F22:  preds = []
          femData:MeshCell[] 0cell_a2F23#1 = globals.0cell_a2CB5;
          bool debug2F25#1 = globals.debug2CB1;
          int debugU2F27#1 = globals.debugU2CB2;
          int debugV2F29#1 = globals.debugV2CB3;
          tensor[3] rayOrig2F2B#2 = self.rayOrig;
          tensor[3] rayVec2F2D#1 = self.rayVec;
          real camNearVsp2F2F#5 = self.camNearVsp;
          real camFarVsp2F31#3 = self.camFarVsp;
          tensor[2] rayStartProj2F33#3 = self.rayStartProj;
          tensor[2] dposProj2F35#2 = self.dposProj;
          femData:MeshPos[] poses2F37#1 = self.poses;
          real[] normalizedTimes2F39#1 = self.normalizedTimes;
          int cellIntersects2F3B#1 = self.cellIntersects;
          tensor[3][] spaceInter2F3D#1 = self.spaceInter;
          int currentCellInt2F3F#1 = self.currentCellInt;
          bool startsInside2F41#2 = self.startsInside;
          int ui2F43#2 = self.ui;
          int vi2F45#2 = self.vi;
          bool _t2F47#1 = NEQ<int>(ui2F43,debugU2F27);
          if _t2F47 then goto ASSIGN2F4B else goto ASSIGN3A23
        ASSIGN2F4B:  preds = [COND2F49]
          bool _t2F4A#1 = true;
          goto JOIN2F4E
        JOIN2F4E:  preds = [ASSIGN2F4B,ASSIGN3A23]
          bool _t2F4C#1 = phi(_t2F4A,_t2F4D)
          if _t2F4C then goto COND2F50 else goto JOIN2F53
        COND2F50:  preds = [COND2F4F]
          if debug2F25 then goto STABILIZE2F51 else goto JOIN2F52
        STABILIZE2F51:  preds = [COND2F50]
          stabilize
          goto JOIN2F52
        JOIN2F52:  preds = [*STABILIZE2F51,COND2F50]
          goto JOIN2F53
        JOIN2F53:  preds = [JOIN2F52,COND2F4F]
        FOREACH2F55:  preds = [JOIN2F53,NEXT307C]
          foreach (c2F54 in 0cell_a2F23) on exit goto ASSIGN39C3
            real startTime39B1#3 = phi(camFarVsp2F31,startTime3070)
            bool startsInside39C1#2 = phi(startsInside2F41,startsInside3072)
            int currentCellInt39B6#6 = phi(currentCellInt2F3F,currentCellInt3073)
            int cellIntersects306C#8 = phi(cellIntersects2F3B,cellIntersects3075)
            real[] normalizedTimes3067#7 = phi(normalizedTimes2F39,normalizedTimes3077)
            femData:MeshPos[] poses3064#7 = phi(poses2F37,poses3079)
          string _t2F56#1 = "Cell:";
          string _t2F58#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F56,c2F54,_t2F58);
          int _t2F5B#8 = ExtractFemItem<int,CellIndex(MeshCell)>(c2F54);
          femData:Mesh _t2F5D#9 = ExtractFem<femData:Mesh,femData:MeshCell>(c2F54);
          femData:MeshPos _t3053#2 = _msh_newtonInverse2F5F (rayStartProj2F33,_t2F5B,_t2F5D);
          bool _t3055#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3053);
          if _t3055 then goto ASSIGN3059 else goto ASSIGN307E
        ASSIGN3059:  preds = [COND3057]
          string _t3058#1 = "pos starts inside\n";
          Print<[string]>(_t3058);
          tensor[2] refPos305D#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t3053);
          femData:MeshPos p3061#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2F5D,_t2F5B,refPos305D);
          femData:MeshPos[] poses3063#1 = Append<femData:MeshPos>(poses3064,p3061);
          real[] normalizedTimes3066#1 = Append<real>(normalizedTimes3067,camNearVsp2F2F);
          int _t3069#1 = 1;
          int cellIntersects306B#1 = IAdd(cellIntersects306C,_t3069);
          bool startsInside306E#1 = true;
          goto JOIN307B
        JOIN307B:  preds = [ASSIGN306F,JOIN39BC]
          real startTime3070#1 = phi(camNearVsp2F2F,startTime3071)
          bool startsInside3072#1 = phi(startsInside306E,startsInside2F41)
          int currentCellInt3073#1 = phi(cellIntersects306C,currentCellInt3074)
          int cellIntersects3075#1 = phi(cellIntersects306B,cellIntersects3076)
          real[] normalizedTimes3077#1 = phi(normalizedTimes3066,normalizedTimes3078)
          femData:MeshPos[] poses3079#1 = phi(poses3063,poses307A)
          goto FOREACH2F55
        ASSIGN307E:  preds = [COND3057]
          real _t307D#26 = -0.e0;
          tensor[2] _t307F#10 = <tensor[2]>[_t307D,_t307D];
          real time3081#9 = +inf;
          int face3083#12 = -1;
          real _t3085#39 = 0.1e1;
          real _t3087#9 = 0.e0;
          tensor[2] _t3089#3 = <tensor[2]>[_t3085,_t3087];
          real _t308B#9 = -0.1e1;
          tensor[2] _t308D#2 = <tensor[2]>[_t308B,_t3085];
          int[3] femIndicies30A2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs30A3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies30A2);
          tensor[2,3] basisResult30A4#3 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_173090#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2,2] op1_e3_l_183091#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_173090);
          tensor[2] probe_l_193092#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] probe_l_203093#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] op1_e3_l_213094#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_203093);
          tensor[2,2] op1_e3_l_223095#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_183091);
          real op1_e3_l_233096#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_193092,op1_e3_l_213094);
          tensor[3] basisResult30AA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_243097#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30AA,_t307F);
          tensor[2,2] op1_e3_l_253098#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_223095,op1_e3_l_233096);
          tensor[2] op1_e3_l_263099#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_243097);
          tensor[2] op1_e3_l_27309A#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_253098,op1_e3_l_263099);
          tensor[2] op1_e3_l_36309B#16 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_253098);
          tensor[2] op1_e3_l_37309C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_38309D#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_37309C);
          tensor[2] op1_e3_l_39309E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_38309D);
          tensor[2] op1_e3_l_40309F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4130A0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_39309E);
          real _t308F#10 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_40309F,op1_e3_l_4130A0);
          real _t30C7#3 = -0.1e-15;
          bool _t30C9#1 = GTE<real>(_t308F,_t30C7);
          bool _t30CB#1 = GT<real>(time3081,_t308F);
          real _t30CD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_38309D);
          real _t30F5#3 = 0.1e-20;
          bool _t30F7#1 = GTE<real>(_t30CD,_t30F5);
          bool _t30F9#1 = BAnd(_t30CB,_t30F7);
          bool _t30FB#4 = BAnd(_t30C9,_t30F9);
          if _t30FB then goto ASSIGN30FF else goto JOIN3196
        ASSIGN30FF:  preds = [COND30FD]
          real _t30FE#3 = 0.1e-8;
          real _t3100#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t30FE);
          tensor[2] _t3102#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783117#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793118#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783117);
          real _t3104#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3102,op1_e3_l_793118);
          bool _t3142#1 = GT<real>(_t3100,_t3104);
          tensor[2] _t3144#1 = <tensor[2]>[_t30FE,_t30FE];
          tensor[2] _t3146#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3144,op1_e3_l_27309A,op1_e3_l_783117);
          real _t3182#1 = TensorIndex<tensor[2],[0]>(_t3146);
          bool _t3184#1 = GT<real>(_t3182,_t307D);
          real _t3186#1 = TensorIndex<tensor[2],[1]>(_t3146);
          bool _t3188#1 = GT<real>(_t3186,_t307D);
          bool _t318A#1 = BAnd(_t3184,_t3188);
          bool _t318C#1 = BAnd(_t3142,_t318A);
          if _t318C then goto ASSIGN3190 else goto JOIN3193
        ASSIGN3190:  preds = [COND318E]
          int face318F#1 = 0;
          goto JOIN3193
        JOIN3193:  preds = [ASSIGN3190,COND318E]
          int face3191#1 = phi(face318F,face3083)
          real time3192#1 = phi(_t308F,time3081)
          goto JOIN3196
        JOIN3196:  preds = [JOIN3193,COND30FD]
          int face3194#2 = phi(face3191,face3083)
          real time3195#3 = phi(time3192,time3081)
          tensor[2] _t3197#1 = <tensor[2]>[_t3087,_t3087];
          tensor[2] _t3199#2 = <tensor[2]>[_t3087,_t3085];
          tensor[2] op1_e3_l_3731A8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_3831A9#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3731A8);
          tensor[2] op1_e3_l_3931AA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_3831A9);
          tensor[2] op1_e3_l_4031AB#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4131AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3931AA);
          real _t319B#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4131AC);
          bool _t31D3#4 = GTE<real>(_t319B,_t30C7);
          bool _t31D5#1 = GT<real>(time3195,_t319B);
          real _t31D7#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3831A9);
          bool _t31FF#4 = GTE<real>(_t31D7,_t30F5);
          bool _t3201#1 = BAnd(_t31D5,_t31FF);
          bool _t3203#1 = BAnd(_t31D3,_t3201);
          if _t3203 then goto ASSIGN3207 else goto JOIN329E
        ASSIGN3207:  preds = [COND3205]
          real _t3206#3 = 0.1e-8;
          real _t3208#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3206);
          tensor[2] _t320A#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78321F#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793220#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78321F);
          real _t320C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t320A,op1_e3_l_793220);
          bool _t324A#1 = GT<real>(_t3208,_t320C);
          tensor[2] _t324C#1 = <tensor[2]>[_t3206,_t3206];
          tensor[2] _t324E#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t324C,op1_e3_l_27309A,op1_e3_l_78321F);
          real _t328A#1 = TensorIndex<tensor[2],[0]>(_t324E);
          bool _t328C#1 = GT<real>(_t328A,_t307D);
          real _t328E#1 = TensorIndex<tensor[2],[1]>(_t324E);
          bool _t3290#1 = GT<real>(_t328E,_t307D);
          bool _t3292#1 = BAnd(_t328C,_t3290);
          bool _t3294#1 = BAnd(_t324A,_t3292);
          if _t3294 then goto ASSIGN3298 else goto JOIN329B
        ASSIGN3298:  preds = [COND3296]
          int face3297#1 = 1;
          goto JOIN329B
        JOIN329B:  preds = [ASSIGN3298,COND3296]
          int face3299#1 = phi(face3297,face3194)
          real time329A#1 = phi(_t319B,time3195)
          goto JOIN329E
        JOIN329E:  preds = [JOIN329B,COND3205]
          int face329C#2 = phi(face3299,face3194)
          real time329D#3 = phi(time329A,time3195)
          tensor[2] op1_e3_l_3732AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_3832AD#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3732AC);
          tensor[2] op1_e3_l_3932AE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_3832AD);
          tensor[2] op1_e3_l_4132B0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3932AE);
          real _t329F#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4132B0);
          bool _t32D7#4 = GTE<real>(_t329F,_t30C7);
          bool _t32D9#1 = GT<real>(time329D,_t329F);
          real _t32DB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3832AD);
          bool _t3303#4 = GTE<real>(_t32DB,_t30F5);
          bool _t3305#1 = BAnd(_t32D9,_t3303);
          bool _t3307#1 = BAnd(_t32D7,_t3305);
          if _t3307 then goto ASSIGN330B else goto JOIN33A2
        ASSIGN330B:  preds = [COND3309]
          real _t330A#3 = 0.1e-8;
          real _t330C#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t330A);
          tensor[2] _t330E#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783323#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793324#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783323);
          real _t3310#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t330E,op1_e3_l_793324);
          bool _t334E#1 = GT<real>(_t330C,_t3310);
          tensor[2] _t3350#1 = <tensor[2]>[_t330A,_t330A];
          tensor[2] _t3352#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3350,op1_e3_l_27309A,op1_e3_l_783323);
          real _t338E#1 = TensorIndex<tensor[2],[0]>(_t3352);
          bool _t3390#1 = GT<real>(_t338E,_t307D);
          real _t3392#1 = TensorIndex<tensor[2],[1]>(_t3352);
          bool _t3394#1 = GT<real>(_t3392,_t307D);
          bool _t3396#1 = BAnd(_t3390,_t3394);
          bool _t3398#1 = BAnd(_t334E,_t3396);
          if _t3398 then goto ASSIGN339C else goto JOIN339F
        ASSIGN339C:  preds = [COND339A]
          int face339B#1 = 2;
          goto JOIN339F
        JOIN339F:  preds = [ASSIGN339C,COND339A]
          int face339D#1 = phi(face339B,face329C)
          real time339E#1 = phi(_t329F,time329D)
          goto JOIN33A2
        JOIN33A2:  preds = [JOIN339F,COND3309]
          int face33A0#2 = phi(face339D,face329C)
          real time33A1#1 = phi(time339E,time329D)
          bool _t33A3#1 = NEQ<int>(face33A0,face3083);
          if _t33A3 then goto ASSIGN33A7 else goto ASSIGN39C0
        ASSIGN33A7:  preds = [COND33A5]
          real _t33A6#1 = Max<real>(time33A1,_t3087);
          real _t33A8#1 = IntToReal(face33A0);
          tensor[2] _t33AA#1 = <tensor[2]>[_t33A6,_t33A8];
          goto JOIN33AE
        JOIN33AE:  preds = [ASSIGN33AB,ASSIGN39C0]
          tensor[2] _t33AC#1 = phi(_t33AA,_t33AD)
          real newTime33AF#2 = TensorIndex<tensor[2],[0]>(_t33AC);
          bool _t33B1#1 = GTE<real>(newTime33AF,_t3087);
          if _t33B1 then goto COND33B4 else goto JOIN39BC
        COND33B4:  preds = [COND33B3]
          if _t30FB then goto ASSIGN33B6 else goto JOIN344D
        ASSIGN33B6:  preds = [COND33B4]
          real _t33B5#3 = 0.1e-8;
          real _t33B7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t33B5);
          tensor[2] _t33B9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7833CE#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7933CF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t33BB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t33B9,op1_e3_l_7933CF);
          bool _t33F9#1 = GT<real>(_t33B7,_t33BB);
          tensor[2] _t33FB#1 = <tensor[2]>[_t33B5,_t33B5];
          tensor[2] _t33FD#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t33FB,op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t3439#1 = TensorIndex<tensor[2],[0]>(_t33FD);
          bool _t343B#1 = GT<real>(_t3439,_t307D);
          real _t343D#1 = TensorIndex<tensor[2],[1]>(_t33FD);
          bool _t343F#1 = GT<real>(_t343D,_t307D);
          bool _t3441#1 = BAnd(_t343B,_t343F);
          bool _t3443#1 = BAnd(_t33F9,_t3441);
          if _t3443 then goto ASSIGN3447 else goto JOIN344A
        ASSIGN3447:  preds = [COND3445]
          int face3446#1 = 0;
          goto JOIN344A
        JOIN344A:  preds = [ASSIGN3447,COND3445]
          int face3448#1 = phi(face3446,face3083)
          real time3449#1 = phi(_t308F,time3081)
          goto JOIN344D
        JOIN344D:  preds = [JOIN344A,COND33B4]
          int face344B#2 = phi(face3448,face3083)
          real time344C#3 = phi(time3449,time3081)
          bool _t344E#1 = GT<real>(time344C,_t319B);
          bool _t3450#1 = BAnd(_t344E,_t31FF);
          bool _t3452#1 = BAnd(_t31D3,_t3450);
          if _t3452 then goto ASSIGN3456 else goto JOIN34ED
        ASSIGN3456:  preds = [COND3454]
          real _t3455#3 = 0.1e-8;
          real _t3457#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3455);
          tensor[2] _t3459#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78346E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79346F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78346E);
          real _t345B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3459,op1_e3_l_79346F);
          bool _t3499#1 = GT<real>(_t3457,_t345B);
          tensor[2] _t349B#1 = <tensor[2]>[_t3455,_t3455];
          tensor[2] _t349D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t349B,op1_e3_l_27309A,op1_e3_l_78346E);
          real _t34D9#1 = TensorIndex<tensor[2],[0]>(_t349D);
          bool _t34DB#1 = GT<real>(_t34D9,_t307D);
          real _t34DD#1 = TensorIndex<tensor[2],[1]>(_t349D);
          bool _t34DF#1 = GT<real>(_t34DD,_t307D);
          bool _t34E1#1 = BAnd(_t34DB,_t34DF);
          bool _t34E3#1 = BAnd(_t3499,_t34E1);
          if _t34E3 then goto ASSIGN34E7 else goto JOIN34EA
        ASSIGN34E7:  preds = [COND34E5]
          int face34E6#1 = 1;
          goto JOIN34EA
        JOIN34EA:  preds = [ASSIGN34E7,COND34E5]
          int face34E8#1 = phi(face34E6,face344B)
          real time34E9#1 = phi(_t319B,time344C)
          goto JOIN34ED
        JOIN34ED:  preds = [JOIN34EA,COND3454]
          int face34EB#2 = phi(face34E8,face344B)
          real time34EC#3 = phi(time34E9,time344C)
          bool _t34EE#1 = GT<real>(time34EC,_t329F);
          bool _t34F0#1 = BAnd(_t34EE,_t3303);
          bool _t34F2#1 = BAnd(_t32D7,_t34F0);
          if _t34F2 then goto ASSIGN34F6 else goto JOIN358D
        ASSIGN34F6:  preds = [COND34F4]
          real _t34F5#3 = 0.1e-8;
          real _t34F7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t34F5);
          tensor[2] _t34F9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78350E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79350F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78350E);
          real _t34FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t34F9,op1_e3_l_79350F);
          bool _t3539#1 = GT<real>(_t34F7,_t34FB);
          tensor[2] _t353B#1 = <tensor[2]>[_t34F5,_t34F5];
          tensor[2] _t353D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t353B,op1_e3_l_27309A,op1_e3_l_78350E);
          real _t3579#1 = TensorIndex<tensor[2],[0]>(_t353D);
          bool _t357B#1 = GT<real>(_t3579,_t307D);
          real _t357D#1 = TensorIndex<tensor[2],[1]>(_t353D);
          bool _t357F#1 = GT<real>(_t357D,_t307D);
          bool _t3581#1 = BAnd(_t357B,_t357F);
          bool _t3583#1 = BAnd(_t3539,_t3581);
          if _t3583 then goto ASSIGN3587 else goto JOIN358A
        ASSIGN3587:  preds = [COND3585]
          int face3586#1 = 2;
          goto JOIN358A
        JOIN358A:  preds = [ASSIGN3587,COND3585]
          int face3588#1 = phi(face3586,face34EB)
          real time3589#1 = phi(_t329F,time34EC)
          goto JOIN358D
        JOIN358D:  preds = [JOIN358A,COND34F4]
          int face358B#2 = phi(face3588,face34EB)
          real time358C#1 = phi(time3589,time34EC)
          bool _t358E#1 = NEQ<int>(face358B,face3083);
          if _t358E then goto ASSIGN3592 else goto ASSIGN39BF
        ASSIGN3592:  preds = [COND3590]
          real _t3591#1 = Max<real>(time358C,_t3087);
          real _t3593#1 = IntToReal(face358B);
          tensor[2] _t3595#1 = <tensor[2]>[_t3591,_t3593];
          goto JOIN3599
        JOIN3599:  preds = [ASSIGN3596,ASSIGN39BF]
          tensor[2] _t3597#1 = phi(_t3595,_t3598)
          real _t359A#1 = TensorIndex<tensor[2],[0]>(_t3597);
          tensor[2] op1_e3_l_3535A9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t359A,op1_e3_l_36309B);
          tensor[2] _t359C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_3535A9);
          if _t30FB then goto ASSIGN35CE else goto JOIN3665
        ASSIGN35CE:  preds = [COND35CC]
          real _t35CD#3 = 0.1e-8;
          real _t35CF#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t35CD);
          tensor[2] _t35D1#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7835E6#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7935E7#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t35D3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t35D1,op1_e3_l_7935E7);
          bool _t3611#1 = GT<real>(_t35CF,_t35D3);
          tensor[2] _t3613#1 = <tensor[2]>[_t35CD,_t35CD];
          tensor[2] _t3615#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3613,op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t3651#1 = TensorIndex<tensor[2],[0]>(_t3615);
          bool _t3653#1 = GT<real>(_t3651,_t307D);
          real _t3655#1 = TensorIndex<tensor[2],[1]>(_t3615);
          bool _t3657#1 = GT<real>(_t3655,_t307D);
          bool _t3659#1 = BAnd(_t3653,_t3657);
          bool _t365B#1 = BAnd(_t3611,_t3659);
          if _t365B then goto ASSIGN365F else goto JOIN3662
        ASSIGN365F:  preds = [COND365D]
          int face365E#1 = 0;
          goto JOIN3662
        JOIN3662:  preds = [ASSIGN365F,COND365D]
          int face3660#1 = phi(face365E,face3083)
          real time3661#1 = phi(_t308F,time3081)
          goto JOIN3665
        JOIN3665:  preds = [JOIN3662,COND35CC]
          int face3663#2 = phi(face3660,face3083)
          real time3664#3 = phi(time3661,time3081)
          bool _t3666#1 = GT<real>(time3664,_t319B);
          bool _t3668#1 = BAnd(_t3666,_t31FF);
          bool _t366A#1 = BAnd(_t31D3,_t3668);
          if _t366A then goto ASSIGN366E else goto JOIN3705
        ASSIGN366E:  preds = [COND366C]
          real _t366D#3 = 0.1e-8;
          real _t366F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t366D);
          tensor[2] _t3671#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783686#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793687#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783686);
          real _t3673#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3671,op1_e3_l_793687);
          bool _t36B1#1 = GT<real>(_t366F,_t3673);
          tensor[2] _t36B3#1 = <tensor[2]>[_t366D,_t366D];
          tensor[2] _t36B5#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t36B3,op1_e3_l_27309A,op1_e3_l_783686);
          real _t36F1#1 = TensorIndex<tensor[2],[0]>(_t36B5);
          bool _t36F3#1 = GT<real>(_t36F1,_t307D);
          real _t36F5#1 = TensorIndex<tensor[2],[1]>(_t36B5);
          bool _t36F7#1 = GT<real>(_t36F5,_t307D);
          bool _t36F9#1 = BAnd(_t36F3,_t36F7);
          bool _t36FB#1 = BAnd(_t36B1,_t36F9);
          if _t36FB then goto ASSIGN36FF else goto JOIN3702
        ASSIGN36FF:  preds = [COND36FD]
          int face36FE#1 = 1;
          goto JOIN3702
        JOIN3702:  preds = [ASSIGN36FF,COND36FD]
          int face3700#1 = phi(face36FE,face3663)
          real time3701#1 = phi(_t319B,time3664)
          goto JOIN3705
        JOIN3705:  preds = [JOIN3702,COND366C]
          int face3703#2 = phi(face3700,face3663)
          real time3704#3 = phi(time3701,time3664)
          bool _t3706#1 = GT<real>(time3704,_t329F);
          bool _t3708#1 = BAnd(_t3706,_t3303);
          bool _t370A#1 = BAnd(_t32D7,_t3708);
          if _t370A then goto ASSIGN370E else goto JOIN37A5
        ASSIGN370E:  preds = [COND370C]
          real _t370D#3 = 0.1e-8;
          real _t370F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t370D);
          tensor[2] _t3711#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783726#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793727#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783726);
          real _t3713#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3711,op1_e3_l_793727);
          bool _t3751#1 = GT<real>(_t370F,_t3713);
          tensor[2] _t3753#1 = <tensor[2]>[_t370D,_t370D];
          tensor[2] _t3755#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3753,op1_e3_l_27309A,op1_e3_l_783726);
          real _t3791#1 = TensorIndex<tensor[2],[0]>(_t3755);
          bool _t3793#1 = GT<real>(_t3791,_t307D);
          real _t3795#1 = TensorIndex<tensor[2],[1]>(_t3755);
          bool _t3797#1 = GT<real>(_t3795,_t307D);
          bool _t3799#1 = BAnd(_t3793,_t3797);
          bool _t379B#1 = BAnd(_t3751,_t3799);
          if _t379B then goto ASSIGN379F else goto JOIN37A2
        ASSIGN379F:  preds = [COND379D]
          int face379E#1 = 2;
          goto JOIN37A2
        JOIN37A2:  preds = [ASSIGN379F,COND379D]
          int face37A0#1 = phi(face379E,face3703)
          real time37A1#1 = phi(_t329F,time3704)
          goto JOIN37A5
        JOIN37A5:  preds = [JOIN37A2,COND370C]
          int face37A3#2 = phi(face37A0,face3703)
          real time37A4#1 = phi(time37A1,time3704)
          bool _t37A6#1 = NEQ<int>(face37A3,face3083);
          if _t37A6 then goto ASSIGN37AA else goto ASSIGN39BE
        ASSIGN37AA:  preds = [COND37A8]
          real _t37A9#1 = Max<real>(time37A4,_t3087);
          real _t37AB#1 = IntToReal(face37A3);
          tensor[2] _t37AD#1 = <tensor[2]>[_t37A9,_t37AB];
          goto JOIN37B1
        JOIN37B1:  preds = [ASSIGN37AE,ASSIGN39BE]
          tensor[2] _t37AF#1 = phi(_t37AD,_t37B0)
          real _t37B2#1 = TensorIndex<tensor[2],[0]>(_t37AF);
          tensor[2] op1_e3_l_337B5#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t37B2,dposProj2F35);
          tensor[2] _t37B4#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj2F33,op1_e3_l_337B5);
          if _t30FB then goto ASSIGN37BA else goto JOIN3851
        ASSIGN37BA:  preds = [COND37B8]
          real _t37B9#3 = 0.1e-8;
          real _t37BB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t37B9);
          tensor[2] _t37BD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7837D2#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7937D3#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t37BF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t37BD,op1_e3_l_7937D3);
          bool _t37FD#1 = GT<real>(_t37BB,_t37BF);
          tensor[2] _t37FF#1 = <tensor[2]>[_t37B9,_t37B9];
          tensor[2] _t3801#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t37FF,op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t383D#1 = TensorIndex<tensor[2],[0]>(_t3801);
          bool _t383F#1 = GT<real>(_t383D,_t307D);
          real _t3841#1 = TensorIndex<tensor[2],[1]>(_t3801);
          bool _t3843#1 = GT<real>(_t3841,_t307D);
          bool _t3845#1 = BAnd(_t383F,_t3843);
          bool _t3847#1 = BAnd(_t37FD,_t3845);
          if _t3847 then goto ASSIGN384B else goto JOIN384E
        ASSIGN384B:  preds = [COND3849]
          int face384A#1 = 0;
          goto JOIN384E
        JOIN384E:  preds = [ASSIGN384B,COND3849]
          int face384C#1 = phi(face384A,face3083)
          real time384D#1 = phi(_t308F,time3081)
          goto JOIN3851
        JOIN3851:  preds = [JOIN384E,COND37B8]
          int face384F#2 = phi(face384C,face3083)
          real time3850#3 = phi(time384D,time3081)
          bool _t3852#1 = GT<real>(time3850,_t319B);
          bool _t3854#1 = BAnd(_t3852,_t31FF);
          bool _t3856#1 = BAnd(_t31D3,_t3854);
          if _t3856 then goto ASSIGN385A else goto JOIN38F1
        ASSIGN385A:  preds = [COND3858]
          real _t3859#3 = 0.1e-8;
          real _t385B#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3859);
          tensor[2] _t385D#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783872#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793873#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783872);
          real _t385F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t385D,op1_e3_l_793873);
          bool _t389D#1 = GT<real>(_t385B,_t385F);
          tensor[2] _t389F#1 = <tensor[2]>[_t3859,_t3859];
          tensor[2] _t38A1#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t389F,op1_e3_l_27309A,op1_e3_l_783872);
          real _t38DD#1 = TensorIndex<tensor[2],[0]>(_t38A1);
          bool _t38DF#1 = GT<real>(_t38DD,_t307D);
          real _t38E1#1 = TensorIndex<tensor[2],[1]>(_t38A1);
          bool _t38E3#1 = GT<real>(_t38E1,_t307D);
          bool _t38E5#1 = BAnd(_t38DF,_t38E3);
          bool _t38E7#1 = BAnd(_t389D,_t38E5);
          if _t38E7 then goto ASSIGN38EB else goto JOIN38EE
        ASSIGN38EB:  preds = [COND38E9]
          int face38EA#1 = 1;
          goto JOIN38EE
        JOIN38EE:  preds = [ASSIGN38EB,COND38E9]
          int face38EC#1 = phi(face38EA,face384F)
          real time38ED#1 = phi(_t319B,time3850)
          goto JOIN38F1
        JOIN38F1:  preds = [JOIN38EE,COND3858]
          int face38EF#2 = phi(face38EC,face384F)
          real time38F0#3 = phi(time38ED,time3850)
          bool _t38F2#1 = GT<real>(time38F0,_t329F);
          bool _t38F4#1 = BAnd(_t38F2,_t3303);
          bool _t38F6#1 = BAnd(_t32D7,_t38F4);
          if _t38F6 then goto ASSIGN38FA else goto JOIN3991
        ASSIGN38FA:  preds = [COND38F8]
          real _t38F9#3 = 0.1e-8;
          real _t38FB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t38F9);
          tensor[2] _t38FD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783912#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793913#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783912);
          real _t38FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t38FD,op1_e3_l_793913);
          bool _t393D#1 = GT<real>(_t38FB,_t38FF);
          tensor[2] _t393F#1 = <tensor[2]>[_t38F9,_t38F9];
          tensor[2] _t3941#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t393F,op1_e3_l_27309A,op1_e3_l_783912);
          real _t397D#1 = TensorIndex<tensor[2],[0]>(_t3941);
          bool _t397F#1 = GT<real>(_t397D,_t307D);
          real _t3981#1 = TensorIndex<tensor[2],[1]>(_t3941);
          bool _t3983#1 = GT<real>(_t3981,_t307D);
          bool _t3985#1 = BAnd(_t397F,_t3983);
          bool _t3987#1 = BAnd(_t393D,_t3985);
          if _t3987 then goto ASSIGN398B else goto JOIN398E
        ASSIGN398B:  preds = [COND3989]
          int face398A#1 = 2;
          goto JOIN398E
        JOIN398E:  preds = [ASSIGN398B,COND3989]
          int face398C#1 = phi(face398A,face38EF)
          real time398D#1 = phi(_t329F,time38F0)
          goto JOIN3991
        JOIN3991:  preds = [JOIN398E,COND38F8]
          int face398F#2 = phi(face398C,face38EF)
          real time3990#1 = phi(time398D,time38F0)
          bool _t3992#1 = NEQ<int>(face398F,face3083);
          if _t3992 then goto ASSIGN3996 else goto ASSIGN39BD
        ASSIGN3996:  preds = [COND3994]
          real _t3995#1 = Max<real>(time3990,_t3087);
          real _t3997#1 = IntToReal(face398F);
          tensor[2] _t3999#1 = <tensor[2]>[_t3995,_t3997];
          goto JOIN399D
        JOIN399D:  preds = [ASSIGN399A,ASSIGN39BD]
          tensor[2] _t399B#1 = phi(_t3999,_t399C)
          real _t399E#1 = TensorIndex<tensor[2],[1]>(_t399B);
          real t39A1#1 = Floor<1>(_t399E);
          int _t39A0#1 = RealToInt<1>(t39A1);
          femData:MeshPos p39A4#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t2F5D,_t2F5B,_t359C,_t37B4,_t39A0);
          real op1_e3_l_339A7#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp2F2F,camFarVsp2F31);
          real op1_e3_l_439A8#1 = λ(T0[],T1[])<(T0 * T1)> (newTime33AF,op1_e3_l_339A7);
          real newRayTime39A6#3 = λ(T0[],T1[])<(T0 + T1)> (camNearVsp2F2F,op1_e3_l_439A8);
          real[] normalizedTimes39AC#1 = Append<real>(normalizedTimes3067,newRayTime39A6);
          femData:MeshPos[] poses39AE#1 = Append<femData:MeshPos>(poses3064,p39A4);
          bool _t39B0#1 = GT<real>(startTime39B1,newRayTime39A6);
          if _t39B0 then goto JOIN39B7 else goto JOIN39B7
        JOIN39B7:  preds = [COND39B3,COND39B3]
          real startTime39B4#1 = phi(newRayTime39A6,startTime39B1)
          int currentCellInt39B5#1 = phi(cellIntersects306C,currentCellInt39B6)
          int _t39B8#1 = 1;
          int cellIntersects39BA#1 = IAdd(cellIntersects306C,_t39B8);
          goto JOIN39BC
        JOIN39BC:  preds = [ASSIGN39BB,COND33B3]
          real startTime3071#1 = phi(startTime39B4,startTime39B1)
          int currentCellInt3074#1 = phi(currentCellInt39B5,currentCellInt39B6)
          int cellIntersects3076#1 = phi(cellIntersects39BA,cellIntersects306C)
          real[] normalizedTimes3078#1 = phi(normalizedTimes39AC,normalizedTimes3067)
          femData:MeshPos[] poses307A#1 = phi(poses39AE,poses3064)
          goto JOIN307B
        ASSIGN39BD:  preds = [COND3994]
          tensor[2] _t399C#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN399D
        ASSIGN39BE:  preds = [COND37A8]
          tensor[2] _t37B0#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN37B1
        ASSIGN39BF:  preds = [COND3590]
          tensor[2] _t3598#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN3599
        ASSIGN39C0:  preds = [COND33A5]
          tensor[2] _t33AD#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN33AE
        ASSIGN39C3:  preds = [FOREACH2F55]
          int _t39C2#1 = 0;
          bool _t39C4#1 = NEQ<int>(cellIntersects306C,_t39C2);
          if _t39C4 then goto ASSIGN39C8 else goto ASSIGN3A14
        ASSIGN39C8:  preds = [COND39C6]
          femData:MeshPos pos39C7#4 = Subscript<femData:MeshPos[]>(poses3064,currentCellInt39B6);
          real rayN39C9#2 = Subscript<real[]>(normalizedTimes3067,currentCellInt39B6);
          tensor[3] op1_e3_l_339CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN39C9,rayVec2F2D);
          tensor[3] _t39CB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig2F2B,op1_e3_l_339CC);
          tensor[3][2] _t39CF#1 = <tensor[3][2]>{rayOrig2F2B,_t39CB};
          tensor[3][] _t39D1#1 = MkDynamic<tensor[3],2>(_t39CF);
          tensor[3][] spaceInter39D3#1 = Concat<tensor[3]>(spaceInter2F3D,_t39D1);
          tensor[2] _t39D5#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos39C7);
          tensor[2][1] _t39D7#1 = <tensor[2][1]>{_t39D5};
          tensor[2][] _t39D9#1 = MkDynamic<tensor[2],1>(_t39D7);
          femData:Mesh _t39DB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos39C7);
          int _t39DD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos39C7);
          femData:MeshCell currentCell39DF#2 = LoadFem<femData:MeshCell>(_t39DB,_t39DD);
          femData:MeshCell[1] _t39E1#1 = <femData:MeshCell[1]>{currentCell39DF};
          femData:MeshCell[] _t39E3#1 = MkDynamic<femData:MeshCell,1>(_t39E1);
          string _t39E5#1 = "In the interval:";
          tensor[2] _t39E7#1 = <tensor[2]>[camNearVsp2F2F,camFarVsp2F31];
          string _t39E9#3 = "\n";
          Print<[string,tensor[2],string]>(_t39E5,_t39E7,_t39E9);
          string _t39EC#1 = "Possible times:";
          Print<[string,real[],string]>(_t39EC,normalizedTimes3067,_t39E9);
          string _t39EF#1 = "cells:";
          femData:MeshCell[] accum39F1#1 = <femData:MeshCell[]>{};
        FOREACH39F4:  preds = [ASSIGN39F2,NEXT39FE]
          foreach (p39F3 in poses3064) on exit goto MASSIGN39FF
            femData:MeshCell[] accum39FC#2 = phi(accum39F1,accum39FB)
          femData:Mesh _t39F5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p39F3);
          int _t39F7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p39F3);
          femData:MeshCell _t39F9#1 = LoadFem<femData:MeshCell>(_t39F5,_t39F7);
          femData:MeshCell[] accum39FB#1 = Append<femData:MeshCell>(accum39FC,_t39F9);
          goto FOREACH39F4
        MASSIGN39FF:  preds = [FOREACH39F4]
          Print<[string,femData:MeshCell[],string]>(_t39EF,accum39FC,_t39E9);
          goto JOIN3A06
        JOIN3A06:  preds = [MASSIGN39FF,*STABILIZE3A22]
          femData:MeshPos pos3A00#1 = phi(pos39C7)
          femData:MeshCell currentCell3A01#1 = phi(currentCell39DF)
          real rayN3A02#1 = phi(rayN39C9)
          femData:MeshCell[] cellInter3A03#1 = phi(_t39E3)
          tensor[2][] refSpaceInter3A04#1 = phi(_t39D9)
          tensor[3][] spaceInter3A05#1 = phi(spaceInter39D3)
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.spaceInter = spaceInter3A05;
          self.refSpaceInter = refSpaceInter3A04;
          self.cellInter = cellInter3A03;
          self.currentCellInt = currentCellInt39B6;
          self.rayN = rayN3A02;
          self.currentCell = currentCell3A01;
          self.pos = pos3A00;
          self.startsInside = startsInside39C1;
          active
        ASSIGN3A14:  preds = [COND39C6]
          string _t3A13#1 = "No intersection!\n";
          Print<[string]>(_t3A13);
          string _t3A16#1 = "Ui: ";
          string _t3A18#1 = " Vi:";
          string _t3A1A#1 = "\n";
          Print<[string,int,string,int,string]>(_t3A16,ui2F43,_t3A18,vi2F45,_t3A1A);
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.currentCellInt = currentCellInt39B6;
          self.startsInside = startsInside39C1;
          stabilize
          goto JOIN3A06
        ASSIGN3A23:  preds = [COND2F49]
          bool _t2F4D#1 = NEQ<int>(vi2F45,debugV2F29);
          goto JOIN2F4E
    end start
    method update
        ENTRY3A24:  preds = []
          tensor[3] rayOrig3A25#4 = self.rayOrig;
          tensor[3] rayVec3A27#6 = self.rayVec;
          real camFarVsp3A29#6 = self.camFarVsp;
          femData:MeshPos[] poses3A2B#2 = self.poses;
          real[] normalizedTimes3A2D#4 = self.normalizedTimes;
          int cellIntersects3A2F#1 = self.cellIntersects;
          tensor[2][] rayCellInter3A31#2 = self.rayCellInter;
          tensor[3][] spaceInter3A33#3 = self.spaceInter;
          tensor[2][] refSpaceInter3A35#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter3A37#4 = self.cellInter;
          real rayN3A39#8 = self.rayN;
          femData:MeshCell currentCell3A3B#2 = self.currentCell;
          int steps3A3D#1 = self.steps;
          femData:MeshPos pos3A3F#8 = self.pos;
          bool startsInside3A41#2 = self.startsInside;
          int ui3A43#1 = self.ui;
          int vi3A45#1 = self.vi;
          string _t3A47#1 = "Ui: ";
          string _t3A49#1 = " vi: ";
          string _t3A4B#21 = "\n";
          Print<[string,int,string,int,string]>(_t3A47,ui3A43,_t3A49,vi3A45,_t3A4B);
          string _t3A4E#1 = "The current ref pos is:";
          tensor[2] _t3A50#8 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3A3F);
          Print<[string,tensor[2],string]>(_t3A4E,_t3A50,_t3A4B);
          string _t3A53#1 = "Current cell:";
          femData:Mesh _t3A55#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3A3F);
          int _t3A57#4 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3A3F);
          femData:MeshCell _t3A59#3 = LoadFem<femData:MeshCell>(_t3A55,_t3A57);
          Print<[string,femData:MeshCell,string]>(_t3A53,_t3A59,_t3A4B);
          string _t3A5C#1 = "The current time is:";
          Print<[string,real,string]>(_t3A5C,rayN3A39,_t3A4B);
          string _t3A5F#2 = "The current world pos is:";
          int[3] femIndicies3A63#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3A55,_t3A57);
          tensor[3,2] femDofs3A64#2 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3A55,femIndicies3A63);
          tensor[3] basisResult3A65#2 = EvaluateBasis<BasisArray(3)>(_t3A50);
          tensor[2] _t3A61#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          tensor[3] op1_e3_l_33A6D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN3A39,rayVec3A27);
          tensor[3] stupid3A6C#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33A6D);
          string _t3A70#2 = "The current world pos should be:";
          real _t3A72#1 = TensorIndex<tensor[3],[0]>(stupid3A6C);
          real _t3A74#1 = TensorIndex<tensor[3],[1]>(stupid3A6C);
          tensor[2] _t3A76#3 = <tensor[2]>[_t3A72,_t3A74];
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          real _t3A79#10 = 0.1e1;
          real _t3A7B#3 = 0.1e-8;
          real _t3A7D#1 = λ(T0[],T1[])<(T0 + T1)> (_t3A79,_t3A7B);
          tensor[2] _t3A7F#1 = <tensor[2]>[_t3A79,_t3A79];
          real _t3A81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3A7F,_t3A50);
          bool _t3A83#1 = GT<real>(_t3A7D,_t3A81);
          tensor[2] _t3A85#1 = <tensor[2]>[_t3A7B,_t3A7B];
          tensor[2] _t3A87#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3A85,_t3A50);
          real _t3A89#1 = TensorIndex<tensor[2],[0]>(_t3A87);
          real _t3A8B#4 = -0.e0;
          bool _t3A8D#1 = GT<real>(_t3A89,_t3A8B);
          real _t3A8F#1 = TensorIndex<tensor[2],[1]>(_t3A87);
          bool _t3A91#1 = GT<real>(_t3A8F,_t3A8B);
          bool _t3A93#1 = BAnd(_t3A8D,_t3A91);
          bool _t3A95#1 = BAnd(_t3A83,_t3A93);
          bool _t3A97#1 = BNot(_t3A95);
          if _t3A97 then goto ASSIGN3A9B else goto JOIN3AA4
        ASSIGN3A9B:  preds = [COND3A99]
          string _t3A9A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t3A9A);
          bool _t3A9D#1 = BNot(startsInside3A41);
          if _t3A9D then goto ASSIGN3AA1 else goto JOIN3AA3
        ASSIGN3AA1:  preds = [COND3A9F]
          string _t3AA0#1 = "Not because of an inside\n";
          Print<[string]>(_t3AA0);
          goto JOIN3AA3
        JOIN3AA3:  preds = [MASSIGN3AA2,COND3A9F]
          goto JOIN3AA4
        JOIN3AA4:  preds = [JOIN3AA3,COND3A99]
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          tensor[2] probe_l_53AA8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          tensor[2] op1_e3_l_73AA9#2 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (_t3A76,probe_l_53AA8);
          real op1_e3_l_93AAA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_73AA9,op1_e3_l_73AA9);
          real err3AA7#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_93AAA);
          real _t3AB7#1 = 0.1e-4;
          bool _t3AB9#1 = GT<real>(err3AA7,_t3AB7);
          if _t3AB9 then goto ASSIGN3ABD else goto ASSIGN3F47
        ASSIGN3ABD:  preds = [COND3ABB]
          string _t3ABC#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t3ABC,err3AA7,_t3A4B);
          goto JOIN3ABF
        JOIN3ABF:  preds = [MASSIGN3ABE,MASSIGN3F48]
          int _t3AC0#13 = 1;
          int steps3AC2#4 = IAdd(steps3A3D,_t3AC0);
          string _t3AC4#1 = "Orig:";
          string _t3AC6#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t3AC4,rayOrig3A25,_t3AC6,rayVec3A27,_t3A4B);
          real op1_e3_l_33ACA#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp3A29,rayN3A39);
          tensor[3] newDpos3AC9#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec3A27,op1_e3_l_33ACA);
          tensor[2] _t3ACD#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos3A3F);
          femData:Mesh _t3ACF#5 = ExtractFem<femData:Mesh,femData:MeshCell>(_t3A59);
          int _t3AD1#4 = ExtractFemItem<int,CellIndex(MeshCell)>(_t3A59);
          tensor[2] _t3AD3#7 = <tensor[2]>[_t3A8B,_t3A8B];
          real _t3AD5#1 = TensorIndex<tensor[3],[0]>(newDpos3AC9);
          real _t3AD7#1 = TensorIndex<tensor[3],[1]>(newDpos3AC9);
          tensor[2] _t3AD9#1 = <tensor[2]>[_t3AD5,_t3AD7];
          int _t3ADB#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos3A3F);
          real time3ADD#5 = +inf;
          int face3ADF#9 = -1;
          real faceTime3AE1#6 = -inf;
          real _t3AE3#14 = 0.e0;
          tensor[2] _t3AE5#5 = <tensor[2]>[_t3A79,_t3AE3];
          real _t3AE7#6 = -0.1e1;
          tensor[2] _t3AE9#3 = <tensor[2]>[_t3AE7,_t3A79];
          int[3] femIndicies3AFB#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3AFC#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3AFB);
          tensor[2,3] basisResult3AFD#3 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93AEC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2,2] op1_e3_l_103AED#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93AEC);
          tensor[2] probe_l_113AEE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] probe_l_123AEF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] op1_e3_l_133AF0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123AEF);
          tensor[2,2] op1_e3_l_143AF1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103AED);
          real op1_e3_l_153AF2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113AEE,op1_e3_l_133AF0);
          tensor[2,2] op1_e3_l_163AF3#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143AF1,op1_e3_l_153AF2);
          tensor[2] op1_e3_l_173AF4#5 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163AF3);
          tensor[2] op1_e3_l_183AF5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_193AF6#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183AF5);
          tensor[2] op1_e3_l_203AF7#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE9,op1_e3_l_193AF6);
          tensor[2] op1_e3_l_213AF8#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3AE5,_t3ACD);
          tensor[2] op1_e3_l_223AF9#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203AF7);
          real _t3AEB#6 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213AF8,op1_e3_l_223AF9);
          real _t3B19#3 = -0.1e-15;
          bool _t3B1B#1 = GTE<real>(_t3AEB,_t3B19);
          bool _t3B1D#1 = GT<real>(time3ADD,_t3AEB);
          real _t3B1F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193AF6);
          real _t3B47#3 = 0.1e-20;
          bool _t3B49#1 = GTE<real>(_t3B1F,_t3B47);
          bool _t3B4B#1 = BAnd(_t3B1D,_t3B49);
          bool _t3B4D#2 = BAnd(_t3B1B,_t3B4B);
          if _t3B4D then goto ASSIGN3B51 else goto JOIN3B5C
        ASSIGN3B51:  preds = [COND3B4F]
          int _t3B50#2 = 0;
          bool _t3B52#1 = NEQ<int>(_t3ADB,_t3B50);
          if _t3B52 then goto JOIN3B58 else goto JOIN3B58
        JOIN3B58:  preds = [COND3B54,COND3B54]
          real faceTime3B55#1 = phi(faceTime3AE1,_t3AEB)
          int face3B56#1 = phi(_t3B50,face3ADF)
          real time3B57#1 = phi(_t3AEB,time3ADD)
          goto JOIN3B5C
        JOIN3B5C:  preds = [JOIN3B58,COND3B4F]
          real faceTime3B59#2 = phi(faceTime3B55,faceTime3AE1)
          int face3B5A#2 = phi(face3B56,face3ADF)
          real time3B5B#3 = phi(time3B57,time3ADD)
          tensor[2] _t3B5D#3 = <tensor[2]>[_t3AE3,_t3AE3];
          tensor[2] _t3B5F#3 = <tensor[2]>[_t3AE3,_t3A79];
          tensor[2] op1_e3_l_183B6B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_193B6C#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183B6B);
          tensor[2] op1_e3_l_203B6D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3B5F,op1_e3_l_193B6C);
          tensor[2] op1_e3_l_213B6E#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223B6F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203B6D);
          real _t3B61#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223B6F);
          bool _t3B8F#2 = GTE<real>(_t3B61,_t3B19);
          bool _t3B91#1 = GT<real>(time3B5B,_t3B61);
          real _t3B93#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193B6C);
          bool _t3BBB#2 = GTE<real>(_t3B93,_t3B47);
          bool _t3BBD#1 = BAnd(_t3B91,_t3BBB);
          bool _t3BBF#1 = BAnd(_t3B8F,_t3BBD);
          if _t3BBF then goto ASSIGN3BC3 else goto JOIN3BCC
        ASSIGN3BC3:  preds = [COND3BC1]
          bool _t3BC2#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3BC2 then goto JOIN3BC8 else goto JOIN3BC8
        JOIN3BC8:  preds = [COND3BC4,COND3BC4]
          real faceTime3BC5#1 = phi(faceTime3B59,_t3B61)
          int face3BC6#1 = phi(_t3AC0,face3B5A)
          real time3BC7#1 = phi(_t3B61,time3B5B)
          goto JOIN3BCC
        JOIN3BCC:  preds = [JOIN3BC8,COND3BC1]
          real faceTime3BC9#2 = phi(faceTime3BC5,faceTime3B59)
          int face3BCA#2 = phi(face3BC6,face3B5A)
          real time3BCB#3 = phi(time3BC7,time3B5B)
          tensor[2] op1_e3_l_183BD7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_193BD8#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183BD7);
          tensor[2] op1_e3_l_203BD9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE5,op1_e3_l_193BD8);
          tensor[2] op1_e3_l_223BDB#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203BD9);
          real _t3BCD#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223BDB);
          bool _t3BFB#2 = GTE<real>(_t3BCD,_t3B19);
          bool _t3BFD#1 = GT<real>(time3BCB,_t3BCD);
          real _t3BFF#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193BD8);
          bool _t3C27#2 = GTE<real>(_t3BFF,_t3B47);
          bool _t3C29#1 = BAnd(_t3BFD,_t3C27);
          bool _t3C2B#1 = BAnd(_t3BFB,_t3C29);
          if _t3C2B then goto ASSIGN3C2F else goto JOIN3C3A
        ASSIGN3C2F:  preds = [COND3C2D]
          int _t3C2E#2 = 2;
          bool _t3C30#1 = NEQ<int>(_t3ADB,_t3C2E);
          if _t3C30 then goto JOIN3C36 else goto JOIN3C36
        JOIN3C36:  preds = [COND3C32,COND3C32]
          real faceTime3C33#1 = phi(faceTime3BC9,_t3BCD)
          int face3C34#1 = phi(_t3C2E,face3BCA)
          real time3C35#1 = phi(_t3BCD,time3BCB)
          goto JOIN3C3A
        JOIN3C3A:  preds = [JOIN3C36,COND3C2D]
          real faceTime3C37#2 = phi(faceTime3C33,faceTime3BC9)
          int face3C38#2 = phi(face3C34,face3BCA)
          real time3C39#1 = phi(time3C35,time3BCB)
          bool _t3C3B#1 = NEQ<int>(face3C38,face3ADF);
          if _t3C3B then goto ASSIGN3C3F else goto ASSIGN3F3D
        ASSIGN3C3F:  preds = [COND3C3D]
          real _t3C3E#1 = Max<real>(time3C39,_t3AE3);
          real _t3C40#1 = IntToReal(face3C38);
          tensor[2] _t3C42#1 = <tensor[2]>[_t3C3E,_t3C40];
          goto JOIN3C46
        JOIN3C46:  preds = [ASSIGN3C43,JOIN3F42]
          tensor[2] _t3C44#1 = phi(_t3C42,_t3C45)
          real nextTime3C47#3 = TensorIndex<tensor[2],[0]>(_t3C44);
          real op1_e3_l_33C4A#1 = λ(T0[],T1[])<(T1) - (T0)> (rayN3A39,camFarVsp3A29);
          real op1_e3_l_43C4B#1 = λ(T0[],T1[])<(T0 * T1)> (nextTime3C47,op1_e3_l_33C4A);
          real _t3C49#1 = λ(T0[],T1[])<(T0 + T1)> (rayN3A39,op1_e3_l_43C4B);
          real _t3C4F#1 = Min<real>(camFarVsp3A29,_t3C49);
          real rayNp3C51#6 = Max<real>(rayN3A39,_t3C4F);
          string _t3C53#1 = "Next time:";
          Print<[string,real,string]>(_t3C53,nextTime3C47,_t3A4B);
          bool _t3C56#1 = GTE<real>(nextTime3C47,_t3AE3);
          if _t3C56 then goto ASSIGN3C5A else goto JOIN3E7E
        ASSIGN3C5A:  preds = [COND3C58]
          tensor[2] _t3C59#1 = <tensor[2]>[rayN3A39,rayNp3C51];
          tensor[2][] rayCellInter3C5B#3 = Append<tensor[2]>(rayCellInter3A31,_t3C59);
          int _t3C5D#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos3A3F);
          if _t3B4D then goto ASSIGN3CC1 else goto JOIN3CCC
        ASSIGN3CC1:  preds = [COND3CBF]
          int _t3CC0#2 = 0;
          bool _t3CC2#1 = NEQ<int>(_t3ADB,_t3CC0);
          if _t3CC2 then goto JOIN3CC8 else goto JOIN3CC8
        JOIN3CC8:  preds = [COND3CC4,COND3CC4]
          real faceTime3CC5#1 = phi(faceTime3AE1,_t3AEB)
          int face3CC6#1 = phi(_t3CC0,face3ADF)
          real time3CC7#1 = phi(_t3AEB,time3ADD)
          goto JOIN3CCC
        JOIN3CCC:  preds = [JOIN3CC8,COND3CBF]
          real faceTime3CC9#2 = phi(faceTime3CC5,faceTime3AE1)
          int face3CCA#2 = phi(face3CC6,face3ADF)
          real time3CCB#3 = phi(time3CC7,time3ADD)
          bool _t3CFD#1 = GT<real>(time3CCB,_t3B61);
          bool _t3D29#1 = BAnd(_t3CFD,_t3BBB);
          bool _t3D2B#1 = BAnd(_t3B8F,_t3D29);
          if _t3D2B then goto ASSIGN3D2F else goto JOIN3D38
        ASSIGN3D2F:  preds = [COND3D2D]
          bool _t3D2E#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3D2E then goto JOIN3D34 else goto JOIN3D34
        JOIN3D34:  preds = [COND3D30,COND3D30]
          real faceTime3D31#1 = phi(faceTime3CC9,_t3B61)
          int face3D32#1 = phi(_t3AC0,face3CCA)
          real time3D33#1 = phi(_t3B61,time3CCB)
          goto JOIN3D38
        JOIN3D38:  preds = [JOIN3D34,COND3D2D]
          real faceTime3D35#2 = phi(faceTime3D31,faceTime3CC9)
          int face3D36#2 = phi(face3D32,face3CCA)
          real time3D37#3 = phi(time3D33,time3CCB)
          bool _t3D69#1 = GT<real>(time3D37,_t3BCD);
          bool _t3D95#1 = BAnd(_t3D69,_t3C27);
          bool _t3D97#1 = BAnd(_t3BFB,_t3D95);
          if _t3D97 then goto ASSIGN3D9B else goto JOIN3DA6
        ASSIGN3D9B:  preds = [COND3D99]
          int _t3D9A#2 = 2;
          bool _t3D9C#1 = NEQ<int>(_t3ADB,_t3D9A);
          if _t3D9C then goto JOIN3DA2 else goto JOIN3DA2
        JOIN3DA2:  preds = [COND3D9E,COND3D9E]
          real faceTime3D9F#1 = phi(faceTime3D35,_t3BCD)
          int face3DA0#1 = phi(_t3D9A,face3D36)
          real time3DA1#1 = phi(_t3BCD,time3D37)
          goto JOIN3DA6
        JOIN3DA6:  preds = [JOIN3DA2,COND3D99]
          real faceTime3DA3#2 = phi(faceTime3D9F,faceTime3D35)
          int face3DA4#2 = phi(face3DA0,face3D36)
          real time3DA5#1 = phi(time3DA1,time3D37)
          bool _t3DA7#1 = NEQ<int>(face3DA4,face3ADF);
          if _t3DA7 then goto ASSIGN3DAB else goto ASSIGN3F33
        ASSIGN3DAB:  preds = [COND3DA9]
          real _t3DAA#1 = Max<real>(time3DA5,_t3AE3);
          real _t3DAC#1 = IntToReal(face3DA4);
          tensor[2] _t3DAE#1 = <tensor[2]>[_t3DAA,_t3DAC];
          goto JOIN3DB2
        JOIN3DB2:  preds = [ASSIGN3DAF,JOIN3F38]
          tensor[2] _t3DB0#3 = phi(_t3DAE,_t3DB1)
          real _t3DB3#1 = TensorIndex<tensor[2],[1]>(_t3DB0);
          real t3DB6#1 = Floor<1>(_t3DB3);
          int _t3DB5#6 = RealToInt<1>(t3DB6);
          int[2] _t3DCB#2 = nextCell43DB9 (_t3DB5,_t3C5D,_t3A55);
          int _t3DCD#4 = 0;
          int _t3DCF#2 = Subscript<int[2]>(_t3DCB,_t3DCD);
          bool _t3DD1#1 = NEQ<int>(face3ADF,_t3DCF);
          if _t3DD1 then goto ASSIGN3DD5 else goto ASSIGN3F0A
        ASSIGN3DD5:  preds = [COND3DD3]
          tensor[2][3] _t3DD4#1 = <tensor[2][3]>{_t3AE5,_t3B5D,_t3B5D};
          int _t3DD6#3 = Subscript<int[2]>(_t3DCB,_t3AC0);
          tensor[2] _t3DD8#1 = Subscript<tensor[2][3]>(_t3DD4,_t3DD6);
          tensor[2][3] _t3DDA#1 = <tensor[2][3]>{_t3AE9,_t3B5F,_t3AE5};
          tensor[2] _t3DDC#1 = Subscript<tensor[2][3]>(_t3DDA,_t3DD6);
          real _t3DDE#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163DEA#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3DDE,op1_e3_l_173AF4);
          tensor[2] _t3DE0#2 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163DEA);
          real _t3E06#1 = TensorIndex<tensor[2],[0]>(_t3DE0);
          real _t3E08#1 = TensorIndex<tensor[2],[1]>(_t3DE0);
          real[2] _t3E0A#1 = <real[2]>{_t3E06,_t3E08};
          int[3] _t3E0C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E0E#1 = Subscript<int[3]>(_t3E0C,_t3DB5);
          real _t3E10#1 = Subscript<real[2]>(_t3E0A,_t3E0E);
          real[2] _t3E12#1 = <real[2]>{_t3A79,_t3AE3};
          real[2] _t3E14#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2] _t3E16#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2][3] _t3E18#1 = <real[2][3]>{_t3E12,_t3E14,_t3E16};
          real[2] _t3E1A#1 = Subscript<real[2][3]>(_t3E18,_t3DB5);
          int[3] _t3E1C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E1E#1 = Subscript<int[3]>(_t3E1C,_t3DB5);
          real _t3E20#1 = Subscript<real[2]>(_t3E1A,_t3E1E);
          real[2] _t3E22#1 = <real[2]>{_t3AE7,_t3A79};
          real[2] _t3E24#1 = <real[2]>{_t3AE3,_t3A79};
          real[2] _t3E26#1 = <real[2]>{_t3A79,_t3AE3};
          real[2][3] _t3E28#1 = <real[2][3]>{_t3E22,_t3E24,_t3E26};
          real[2] _t3E2A#1 = Subscript<real[2][3]>(_t3E28,_t3DB5);
          int[3] _t3E2C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E2E#1 = Subscript<int[3]>(_t3E2C,_t3DB5);
          real _t3E30#1 = Subscript<real[2]>(_t3E2A,_t3E2E);
          real op1_e3_l_53E33#1 = λ(T0[],T1[])<(T0) - (T1)> (_t3E10,_t3E20);
          real op1_e3_l_63E34#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t3E30,op1_e3_l_53E33);
          tensor[2] op1_e3_l_73E35#1 = λ(T0[2],T1[])<(T1 * T0_{i0})>_{2} (_t3DDC,op1_e3_l_63E34);
          tensor[2] _t3E32#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3DD8,op1_e3_l_73E35);
          femData:MeshPos _t3E3A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t3A55,_t3DCF,_t3E32,_t3DD6);
          goto JOIN3E3E
        JOIN3E3E:  preds = [ASSIGN3E3B,ASSIGN3F31]
          femData:MeshPos posp3E3C#5 = phi(_t3E3A,_t3E3D)
          bool _t3E3F#1 = GTE<real>(rayNp3C51,camFarVsp3A29);
          if _t3E3F then goto ASSIGN3E43 else goto JOIN3E51
        ASSIGN3E43:  preds = [COND3E41]
          string _t3E42#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t3E42,cellInter3A37,_t3A4B);
          tensor[3] op1_e3_l_33E46#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp3A29,rayVec3A27);
          tensor[3] _t3E45#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E46);
          tensor[3][] spaceInter3E49#1 = Append<tensor[3]>(spaceInter3A33,_t3E45);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E49;
          self.rayN = rayNp3C51;
          self.steps = steps3AC2;
          stabilize
          goto JOIN3E51
        JOIN3E51:  preds = [*STABILIZE3E4F,COND3E41]
          tensor[3][] spaceInter3E50#1 = phi(spaceInter3A33)
          tensor[3] op1_e3_l_33E53#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayNp3C51,rayVec3A27);
          tensor[3] _t3E52#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E53);
          tensor[3][] spaceInter3E56#2 = Append<tensor[3]>(spaceInter3E50,_t3E52);
          tensor[2] _t3E58#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp3E3C);
          tensor[2][] refSpaceInter3E5A#2 = Append<tensor[2]>(refSpaceInter3A35,_t3E58);
          bool _t3E5C#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp3E3C);
          if _t3E5C then goto ASSIGN3E60 else goto ASSIGN3F07
        ASSIGN3E60:  preds = [COND3E5E]
          string _t3E5F#1 = "Next cell:";
          femData:Mesh _t3E61#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E3C);
          int _t3E63#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E3C);
          femData:MeshCell _t3E65#3 = LoadFem<femData:MeshCell>(_t3E61,_t3E63);
          Print<[string,femData:MeshCell,string]>(_t3E5F,_t3E65,_t3A4B);
          femData:MeshCell[] cellInter3E68#1 = Append<femData:MeshCell>(cellInter3A37,_t3E65);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E56;
          self.refSpaceInter = refSpaceInter3E5A;
          self.cellInter = cellInter3E68;
          self.rayN = rayNp3C51;
          self.currentCell = _t3E65;
          self.steps = steps3AC2;
          self.pos = posp3E3C;
          active
          goto JOIN3E76
        JOIN3E76:  preds = [*ACTIVE3E72,MASSIGN3F08]
          femData:MeshPos pos3E73#1 = phi(pos3A3F)
          femData:MeshCell currentCell3E74#1 = phi(currentCell3A3B)
          femData:MeshCell[] cellInter3E75#1 = phi(cellInter3A37)
          goto JOIN3E7E
        JOIN3E7E:  preds = [JOIN3E76,COND3C58]
          femData:MeshPos pos3E77#6 = phi(pos3E73,pos3A3F)
          femData:MeshCell currentCell3E78#1 = phi(currentCell3E74,currentCell3A3B)
          real rayN3E79#3 = phi(rayNp3C51,rayN3A39)
          femData:MeshCell[] cellInter3E7A#3 = phi(cellInter3E75,cellInter3A37)
          tensor[2][] refSpaceInter3E7B#2 = phi(refSpaceInter3E5A,refSpaceInter3A35)
          tensor[3][] spaceInter3E7C#2 = phi(spaceInter3E56,spaceInter3A33)
          tensor[2][] rayCellInter3E7D#3 = phi(rayCellInter3C5B,rayCellInter3A31)
          int _t3E7F#1 = 0;
          int _t3E81#1 = ISub(cellIntersects3A2F,_t3AC0);
          int[] _t3E83#1 = Range(_t3E7F,_t3E81);
        FOREACH3E86:  preds = [ASSIGN3E84,NEXT3EAF]
          foreach (i3E85 in _t3E83) on exit goto ASSIGN3EB1
            real estimate3E8F#4 = phi(camFarVsp3A29,estimate3EAC)
            int newIdx3EA7#7 = phi(face3ADF,newIdx3EAD)
          real t3E87#3 = Subscript<real[]>(normalizedTimes3A2D,i3E85);
          femData:MeshPos posp3E89#2 = Subscript<femData:MeshPos[]>(poses3A2B,i3E85);
          bool _t3E8B#1 = GTE<real>(t3E87,rayN3E79);
          if _t3E8B then goto ASSIGN3E90 else goto JOIN3EAE
        ASSIGN3E90:  preds = [COND3E8D]
          bool _t3E8E#1 = GTE<real>(estimate3E8F,t3E87);
          if _t3E8E then goto ASSIGN3E93 else goto JOIN3EAB
        ASSIGN3E93:  preds = [COND3E91]
          femData:Mesh _t3E92#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E89);
          int _t3E94#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E89);
          femData:MeshCell _t3E96#1 = LoadFem<femData:MeshCell>(_t3E92,_t3E94);
          femData:Mesh _t3E98#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int _t3E9A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:MeshCell _t3E9C#1 = LoadFem<femData:MeshCell>(_t3E98,_t3E9A);
          int _t3E9E#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E96);
          int _t3EA0#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E9C);
          bool _t3EA2#1 = NEQ<int>(_t3E9E,_t3EA0);
          if _t3EA2 then goto JOIN3EA8 else goto JOIN3EA8
        JOIN3EA8:  preds = [COND3EA4,COND3EA4]
          real estimate3EA5#1 = phi(t3E87,estimate3E8F)
          int newIdx3EA6#1 = phi(i3E85,newIdx3EA7)
          goto JOIN3EAB
        JOIN3EAB:  preds = [JOIN3EA8,COND3E91]
          real estimate3EA9#1 = phi(estimate3EA5,estimate3E8F)
          int newIdx3EAA#1 = phi(newIdx3EA6,newIdx3EA7)
          goto JOIN3EAE
        JOIN3EAE:  preds = [JOIN3EAB,COND3E8D]
          real estimate3EAC#1 = phi(estimate3EA9,estimate3E8F)
          int newIdx3EAD#1 = phi(newIdx3EAA,newIdx3EA7)
          goto FOREACH3E86
        ASSIGN3EB1:  preds = [FOREACH3E86]
          bool _t3EB0#1 = GT<int>(newIdx3EA7,face3ADF);
          if _t3EB0 then goto ASSIGN3EB4 else goto ASSIGN3EF2
        ASSIGN3EB4:  preds = [COND3EB2]
          string _t3EB3#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t3EB3);
          if startsInside3A41 then goto ASSIGN3EB8 else goto JOIN3EBA
        ASSIGN3EB8:  preds = [COND3EB6]
          string _t3EB7#1 = "because of an inside\n";
          Print<[string]>(_t3EB7);
          goto JOIN3EBA
        JOIN3EBA:  preds = [MASSIGN3EB9,COND3EB6]
          string _t3EBB#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t3EBB,rayVec3A27,_t3A4B);
          string _t3EBE#1 = "world pos was:";
          tensor[2] _t3EC0#4 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3E77);
          int _t3EC2#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:Mesh _t3EC4#4 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int[3] femIndicies3EC8#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3EC4,_t3EC2);
          tensor[3,2] femDofs3EC9#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3EC4,femIndicies3EC8);
          tensor[3] basisResult3ECA#1 = EvaluateBasis<BasisArray(3)>(_t3EC0);
          tensor[2] _t3EC6#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3EC2,_t3EC4,_t3EC4,_t3EC0,femDofs3EC9,basisResult3ECA,_t3EC0);
          Print<[string,tensor[2],string]>(_t3EBE,_t3EC6,_t3A4B);
          string _t3ED1#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t3ED1,_t3EC0,_t3A4B);
          string _t3ED4#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes3A2D,_t3ED4,newIdx3EA7,_t3A4B);
          string _t3ED7#1 = "Original time was:";
          Print<[string,real,string]>(_t3ED7,rayN3E79,_t3A4B);
          femData:MeshPos pos3EDA#3 = Subscript<femData:MeshPos[]>(poses3A2B,newIdx3EA7);
          femData:Mesh _t3EDC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3EDA);
          int _t3EDE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3EDA);
          femData:MeshCell currentCell3EE0#2 = LoadFem<femData:MeshCell>(_t3EDC,_t3EDE);
          femData:MeshCell[] cellInter3EE2#1 = Append<femData:MeshCell>(cellInter3E7A,currentCell3EE0);
          real rayN3EE4#1 = Subscript<real[]>(normalizedTimes3A2D,newIdx3EA7);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3EE2;
          self.rayN = rayN3EE4;
          self.currentCell = currentCell3EE0;
          self.steps = steps3AC2;
          self.pos = pos3EDA;
          active
          goto JOIN3EEF
        JOIN3EEF:  preds = [*ACTIVE3EEE,*STABILIZE3F05]
          unreachable
        ASSIGN3EF2:  preds = [COND3EB2]
          string _t3EF1#1 = "Enter times:";
          Print<[string,real[],string]>(_t3EF1,normalizedTimes3A2D,_t3A4B);
          string _t3EF4#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t3EF4,rayCellInter3E7D,_t3A4B);
          string _t3EF7#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t3EF7,cellInter3E7A,_t3A4B);
          string _t3EFA#1 = "End\n";
          Print<[string]>(_t3EFA);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3E7A;
          self.rayN = rayN3E79;
          self.currentCell = currentCell3E78;
          self.steps = steps3AC2;
          self.pos = pos3E77;
          stabilize
          goto JOIN3EEF
        ASSIGN3F07:  preds = [COND3E5E]
          string _t3F06#1 = "Invalid\n";
          Print<[string]>(_t3F06);
          goto JOIN3E76
        ASSIGN3F0A:  preds = [COND3DD3]
          real _t3F09#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163F15#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3F09,op1_e3_l_173AF4);
          tensor[2] _t3F0B#1 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163F15);
          femData:MeshPos _t3E3D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t3A55,_t3F0B);
          goto JOIN3E3E
        ASSIGN3F33:  preds = [COND3DA9]
          bool _t3F32#1 = EQ<real>(faceTime3AE1,faceTime3DA3);
          if _t3F32 then goto ASSIGN3F36 else goto ASSIGN3F3A
        ASSIGN3F36:  preds = [COND3F34]
          tensor[2] _t3F35#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F38
        JOIN3F38:  preds = [ASSIGN3F36,ASSIGN3F3B]
          tensor[2] _t3DB1#1 = phi(_t3F35,_t3F37)
          goto JOIN3DB2
        ASSIGN3F3A:  preds = [COND3F34]
          real _t3F39#1 = IntToReal(_t3ADB);
          tensor[2] _t3F37#1 = <tensor[2]>[faceTime3DA3,_t3F39];
          goto JOIN3F38
        ASSIGN3F3D:  preds = [COND3C3D]
          bool _t3F3C#1 = EQ<real>(faceTime3AE1,faceTime3C37);
          if _t3F3C then goto ASSIGN3F40 else goto ASSIGN3F44
        ASSIGN3F40:  preds = [COND3F3E]
          tensor[2] _t3F3F#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F42
        JOIN3F42:  preds = [ASSIGN3F40,ASSIGN3F45]
          tensor[2] _t3C45#1 = phi(_t3F3F,_t3F41)
          goto JOIN3C46
        ASSIGN3F44:  preds = [COND3F3E]
          real _t3F43#1 = IntToReal(_t3ADB);
          tensor[2] _t3F41#1 = <tensor[2]>[faceTime3C37,_t3F43];
          goto JOIN3F42
        ASSIGN3F47:  preds = [COND3ABB]
          string _t3F46#1 = "Did not move off ray!\n";
          Print<[string]>(_t3F46);
          goto JOIN3ABF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY3F4A:  preds = []
      int iresU3F4B#1 = globals.iresU2CA8;
      int iresV3F4D#1 = globals.iresV2CA9;
      int _t3F4F#2 = 0;
      int _t3F51#2 = 1;
      int _t3F53#1 = ISub(iresU3F4B,_t3F51);
      int[] _t3F55#1 = Range(_t3F4F,_t3F53);
    FOREACH3F58:  preds = [ASSIGN3F56,NEXT3F61]
      foreach (vi3F57 in _t3F55) on exit goto RETURN3F62
      int _t3F59#1 = ISub(iresV3F4D,_t3F51);
      int[] _t3F5B#1 = Range(_t3F4F,_t3F59);
    FOREACH3F5E:  preds = [ASSIGN3F5C,NEXT3F60]
      foreach (ui3F5D in _t3F5B) on exit goto NEXT3F61
      new ray(ui3F5D,vi3F57);
      goto FOREACH3F5E
    NEXT3F61:  preds = [FOREACH3F5E]
      goto FOREACH3F58
    RETURN3F62:  preds = [FOREACH3F58]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a2CA1 (a) = <no-default>
  input isoval2CA2 (isoval) = <default>
  input thick2CA3 (thick) = <default>
  input camEye2CA4 (camEye) = <default>
  input camAt2CA5 (camAt) = <default>
  input camUp2CA6 (camUp) = <default>
  input camFOV2CA7 (camFOV) = <default>
  input iresU2CA8 (iresU) = <default>
  input iresV2CA9 (iresV) = <default>
  input camNear2CAA (camNear) = <default>
  input camFar2CAB (camFar) = <default>
  input refStep2CAC (refStep) = <default>
  input rayStep2CAD (rayStep) = <default>
  input lightVsp2CAE (lightVsp) = <default>
  input phongKa2CAF (phongKa) = <default>
  input phongKd2CB0 (phongKd) = <default>
  input debug2CB1 (debug) = <default>
  input debugU2CB2 (debugU) = <default>
  input debugV2CB3 (debugV) = <default>
  input eps2CB4 (eps) = <default>
  global femData:MeshCell[] 0cell_a2CB5
  global real camNearVsp2CB6
  global real camFarVsp2CB7
  global tensor[3] camN2CB8
  global tensor[3] camU2CB9
  global tensor[3] camV2CBA
  global real camVmax2CBB
  global real camUmax2CBC
## functions
  function femData:MeshPos _msh_newtonInverse2F5F (tensor[2] pos2F60#3, int cellInt2F61#7, femData:Mesh mesh2F62#10) {
    ENTRY2F63:  preds = []
      real _t2F64#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn2F66#8 = <tensor[2]>[_t2F64,_t2F64];
      int _t2F68#1 = 0;
      int _t2F6A#1 = 16;
      int[] _t2F6C#1 = Range(_t2F68,_t2F6A);
    FOREACH2F6F:  preds = [ASSIGN2F6D,NEXT304C]
      foreach (itter2F6E in _t2F6C) on exit goto ASSIGN3051
        tensor[2] xn2F71#6 = phi(xn2F66,xn2F70)
      int[3] femIndicies2F7E#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(mesh2F62,cellInt2F61);
      tensor[3,2] femDofs2F7F#5 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(mesh2F62,femIndicies2F7E);
      tensor[2,3] basisResult2F80#3 = EvaluateBasis<BasisArray(2,3)>(xn2F66);
      tensor[2,2] probe_l_102F72#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2,2] op1_e3_l_112F73#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_102F72);
      tensor[2] probe_l_122F74#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] probe_l_132F75#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F66,femDofs2F7F,basisResult2F80,xn2F66);
      tensor[2] op1_e3_l_142F76#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_132F75);
      tensor[2,2] op1_e3_l_152F77#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_112F73);
      real op1_e3_l_162F78#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_122F74,op1_e3_l_142F76);
      tensor[3] basisResult2F86#2 = EvaluateBasis<BasisArray(3)>(xn2F71);
      tensor[2] probe_l_172F79#1 = λ(T0[2],INT1,FEM(msh)2,T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (xn2F71,cellInt2F61,mesh2F62,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2,2] op1_e3_l_182F7A#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_152F77,op1_e3_l_162F78);
      tensor[2] op1_e3_l_192F7B#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_172F79);
      tensor[2] op1_e3_l_202F7C#1 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_192F7B);
      tensor[2] xn2F70#4 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (xn2F71,op1_e3_l_202F7C);
      real _t2F9D#2 = 0.1e-7;
      real _t2F9F#1 = λ(T0[],T1[])<(T0 * T1)> (_t2F9D,_t2F9D);
      tensor[2] probe_l_252FA9#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (cellInt2F61,mesh2F62,xn2F71,femDofs2F7F,basisResult2F86,xn2F71);
      tensor[2] op1_e3_l_272FAB#1 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (pos2F60,probe_l_252FA9);
      tensor[2] op1_e3_l_382FAC#2 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_182F7A,op1_e3_l_272FAB);
      real _t2FA1#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_382FAC,op1_e3_l_382FAC);
      bool _t2FCD#1 = GTE<real>(_t2F9F,_t2FA1);
      if _t2FCD then goto ASSIGN2FD1 else goto JOIN304B
    ASSIGN2FD1:  preds = [COND2FCF]
      real _t2FD0#3 = 0.1e1;
      real _t2FD2#3 = 0.1e-8;
      real _t2FD4#1 = λ(T0[],T1[])<(T0 + T1)> (_t2FD0,_t2FD2);
      tensor[2] _t2FD6#1 = <tensor[2]>[_t2FD0,_t2FD0];
      real _t2FD8#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t2FD6,xn2F70);
      bool _t3006#1 = GT<real>(_t2FD4,_t2FD8);
      tensor[2] _t3008#1 = <tensor[2]>[_t2FD2,_t2FD2];
      tensor[2] _t300A#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3008,xn2F70);
      real _t3038#1 = TensorIndex<tensor[2],[0]>(_t300A);
      real _t303A#2 = -0.e0;
      bool _t303C#1 = GT<real>(_t3038,_t303A);
      real _t303E#1 = TensorIndex<tensor[2],[1]>(_t300A);
      bool _t3040#1 = GT<real>(_t303E,_t303A);
      bool _t3042#1 = BAnd(_t303C,_t3040);
      bool _t3044#1 = BAnd(_t3006,_t3042);
      if _t3044 then goto ASSIGN3048 else goto ASSIGN304E
    ASSIGN3048:  preds = [COND3046]
      femData:MeshPos _t3047#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2F62,cellInt2F61,xn2F70,pos2F60);
      return _t3047
      goto JOIN304A
    JOIN304A:  preds = [*RETURN(_t3047)3049,*RETURN(_t304D)304F]
      goto JOIN304B
    JOIN304B:  preds = [*JOIN304A,COND2FCF]
      goto FOREACH2F6F
    ASSIGN304E:  preds = [COND3046]
      femData:MeshPos _t304D#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t304D
      goto JOIN304A
    ASSIGN3051:  preds = [FOREACH2F6F]
      femData:MeshPos _t3050#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2F62);
      return _t3050
}
  function int[2] nextCell43DB9 (int faceIdx3DBA#1, int cell3DBB#1, femData:Mesh mesh3DBC#1) {
    ENTRY3DBD:  preds = []
      int _t3DBE#1 = 6;
      int _t3DC0#1 = IMul(cell3DBB,_t3DBE);
      int _t3DC2#1 = 2;
      int _t3DC4#1 = IMul(faceIdx3DBA,_t3DC2);
      int _t3DC6#1 = IAdd(_t3DC0,_t3DC4);
      int[2] _t3DC8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3DBC,_t3DC6);
      return _t3DC8
}
## input initialization
  ENTRY2CBD:  preds = []
    real isoval2CBE#1 = 0.2e0;
    globals.isoval2CA2 = isoval2CBE;
    real thick2CC1#1 = 0.7e-1;
    globals.thick2CA3 = thick2CC1;
    real _t2CC4#2 = 0.3e1;
    real _t2CC6#1 = -0.3e1;
    tensor[3] camEye2CC8#1 = <tensor[3]>[_t2CC4,_t2CC6,_t2CC4];
    globals.camEye2CA4 = camEye2CC8;
    real _t2CCB#3 = 0.5e0;
    tensor[3] camAt2CCD#1 = <tensor[3]>[_t2CCB,_t2CCB,_t2CCB];
    globals.camAt2CA5 = camAt2CCD;
    real _t2CD0#2 = 0.e0;
    real _t2CD2#2 = 0.1e1;
    tensor[3] camUp2CD4#2 = <tensor[3]>[_t2CD0,_t2CD0,_t2CD2];
    globals.camUp2CA6 = camUp2CD4;
    real camFOV2CD7#1 = 0.137e2;
    globals.camFOV2CA7 = camFOV2CD7;
    int iresU2CDA#2 = 10;
    globals.iresU2CA8 = iresU2CDA;
    globals.iresV2CA9 = iresU2CDA;
    real camNear2CDE#1 = -0.2e1;
    globals.camNear2CAA = camNear2CDE;
    real camFar2CE1#1 = 0.5e1;
    globals.camFar2CAB = camFar2CE1;
    globals.refStep2CAC = _t2CD2;
    real rayStep2CE5#1 = 0.1e-1;
    globals.rayStep2CAD = rayStep2CE5;
    globals.lightVsp2CAE = camUp2CD4;
    real phongKa2CE9#1 = 0.1e0;
    globals.phongKa2CAF = phongKa2CE9;
    real phongKd2CEC#1 = 0.9e0;
    globals.phongKd2CB0 = phongKd2CEC;
    bool debug2CEF#1 = false;
    globals.debug2CB1 = debug2CEF;
    int debugU2CF2#1 = 8;
    globals.debugU2CB2 = debugU2CF2;
    int debugV2CF5#1 = 2;
    globals.debugV2CB3 = debugV2CF5;
    real eps2CF8#1 = 0.1e-7;
    globals.eps2CB4 = eps2CF8;
    return
## global-variable initialization
  ENTRY2CFC:  preds = []
    femData:Mesh a2CFD#2 = globals.a2CA1;
    tensor[3] camEye2CFF#1 = globals.camEye2CA4;
    tensor[3] camAt2D01#1 = globals.camAt2CA5;
    tensor[3] camUp2D03#1 = globals.camUp2CA6;
    real camFOV2D05#1 = globals.camFOV2CA7;
    int iresU2D07#1 = globals.iresU2CA8;
    int iresV2D09#1 = globals.iresV2CA9;
    real camNear2D0B#1 = globals.camNear2CAA;
    real camFar2D0D#1 = globals.camFar2CAB;
    int _t2D0F#1 = 0;
    int _t2D11#1 = 1;
    int _t2D13#1 = ExtractFemItem<int,NumCell(Mesh)>(a2CFD);
    int _t2D15#1 = ISub(_t2D13,_t2D11);
    int[] _t2D17#1 = Range(_t2D0F,_t2D15);
    femData:MeshCell[] _t2D19#1 = <femData:MeshCell[]>{};
  FOREACH2D1C:  preds = [ASSIGN2D1A,NEXT2D22]
    foreach (_t2D1B in _t2D17) on exit goto GASSIGN2D23
      femData:MeshCell[] _t2D20#2 = phi(_t2D19,_t2D1F)
    femData:MeshCell _t2D1D#1 = LoadFem<femData:MeshCell>(a2CFD,_t2D1B);
    femData:MeshCell[] _t2D1F#1 = Append<femData:MeshCell>(_t2D20,_t2D1D);
    goto FOREACH2D1C
  GASSIGN2D23:  preds = [FOREACH2D1C]
    globals.0cell_a2CB5 = _t2D20;
    tensor[3] op1_e3_l_32D25#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt2D01,camEye2CFF);
    real op1_e3_l_52D26#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_32D25,op1_e3_l_32D25);
    real op1_e3_l_62D27#5 = λ(T0[])<Sqrt(T0)> (op1_e3_l_52D26);
    real camNearVsp2D24#1 = λ(T0[],T1[])<(T0 + T1)> (camNear2D0B,op1_e3_l_62D27);
    globals.camNearVsp2CB6 = camNearVsp2D24;
    real camFarVsp2D2D#1 = λ(T0[],T1[])<(T0 + T1)> (camFar2D0D,op1_e3_l_62D27);
    globals.camFarVsp2CB7 = camFarVsp2D2D;
    real op1_e3_l_92D3A#6 = λ(T0[])<(1) / ( T0)> (op1_e3_l_62D27);
    tensor[3] camN2D36#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_32D25,op1_e3_l_92D3A);
    globals.camN2CB8 = camN2D36;
    tensor[3,3] op1_e3_l_152D45#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp2D03);
    tensor[3] op1_e3_l_172D47#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_32D25,op1_e3_l_152D45);
    real op1_e3_l_342D48#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_172D47,op1_e3_l_172D47);
    real op1_e3_l_352D49#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_92D3A,op1_e3_l_92D3A,op1_e3_l_342D48);
    real op1_e3_l_362D4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_352D49);
    tensor[3] op1_e3_l_372D4B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_172D47);
    real op1_e3_l_382D4C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_362D4A);
    tensor[3] camU2D41#1 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_372D4B,op1_e3_l_382D4C);
    globals.camU2CB9 = camU2D41;
    tensor[3,3] op1_e3_l_452D64#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_32D25);
    tensor[3] op1_e3_l_472D65#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_172D47,op1_e3_l_452D64);
    tensor[3] op1_e3_l_502D67#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_92D3A,op1_e3_l_472D65);
    tensor[3] camV2D5A#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_382D4C,op1_e3_l_92D3A,op1_e3_l_502D67);
    globals.camV2CBA = camV2D5A;
    real _t2D77#1 = 0.314159265358979323846264338327950288e1;
    real _t2D79#1 = 0.36e3;
    real op1_e3_l_52D7C#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV2D05,_t2D77);
    real op1_e3_l_62D7D#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D79,op1_e3_l_52D7C);
    real op1_e3_l_102D80#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_62D7D);
    real camVmax2D7B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102D80,op1_e3_l_62D27);
    globals.camVmax2CBB = camVmax2D7B;
    real _t2D8A#1 = IntToReal(iresU2D07);
    real _t2D8C#1 = IntToReal(iresV2D09);
    real op1_e3_l_142D95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t2D8A,op1_e3_l_102D80,op1_e3_l_62D27);
    real camUmax2D8E#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t2D8C,op1_e3_l_142D95);
    globals.camUmax2CBC = camUmax2D8E;
    return
## strand
  strand ray (int ui2DA0#2, int vi2DA1#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY2DBD:  preds = []
        femData:Mesh a2DBE#1 = globals.a2CA1;
        femData:MeshCell[] 0cell_a2DC0#1 = globals.0cell_a2CB5;
        tensor[3] camEye2DC2#3 = globals.camEye2CA4;
        int iresU2DC4#1 = globals.iresU2CA8;
        int iresV2DC6#1 = globals.iresV2CA9;
        real camNearVsp2DC8#2 = globals.camNearVsp2CB6;
        real camFarVsp2DCA#2 = globals.camFarVsp2CB7;
        tensor[3] camN2DCC#1 = globals.camN2CB8;
        tensor[3] camU2DCE#1 = globals.camU2CB9;
        tensor[3] camV2DD0#1 = globals.camV2CBA;
        real camVmax2DD2#2 = globals.camVmax2CBB;
        real camUmax2DD4#2 = globals.camUmax2CBC;
        real _t2DD6#5 = -0.5e0;
        real _t2DD8#1 = IntToReal(ui2DA0);
        real _t2DDA#1 = IntToReal(iresU2DC4);
        real _t2DDC#3 = 0.5e0;
        real op1_e3_l_62DDF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DDA,_t2DDC);
        real op1_e3_l_72DE0#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DD8);
        real op1_e3_l_82DE1#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DDF);
        real op1_e3_l_92DE2#2 = λ(T0[])<Neg(T0)> (camUmax2DD4);
        real op1_e3_l_102DE3#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DE0,op1_e3_l_82DE1);
        real op1_e3_l_112DE4#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax2DD4,op1_e3_l_92DE2);
        real op1_e3_l_132DE5#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DE3,op1_e3_l_112DE4);
        real rayU2DDE#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DE2,op1_e3_l_132DE5);
        real _t2DEE#1 = IntToReal(vi2DA1);
        real _t2DF0#2 = IntToReal(iresV2DC6);
        real op1_e3_l_62DF3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2DF0,_t2DDC);
        real op1_e3_l_72DF4#2 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,_t2DEE);
        real op1_e3_l_82DF5#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_62DF3);
        real op1_e3_l_92DF6#3 = λ(T0[])<Neg(T0)> (camVmax2DD2);
        real op1_e3_l_102DF7#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_82DF5);
        real op1_e3_l_112DF8#2 = λ(T0[],T1[])<(T0) - (T1)> (camVmax2DD2,op1_e3_l_92DF6);
        real op1_e3_l_132DF9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_102DF7,op1_e3_l_112DF8);
        real rayV2DF2#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_132DF9);
        real op1_e3_l_232E0B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DDC,_t2DF0);
        real op1_e3_l_252E0D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t2DD6,op1_e3_l_232E0B);
        real op1_e3_l_272E0F#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_72DF4,op1_e3_l_252E0D);
        real op1_e3_l_302E11#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_272E0F,op1_e3_l_112DF8);
        real op1_e3_l_312E12#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_92DF6,op1_e3_l_302E11);
        tensor[3] op1_e3_l_322E13#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU2DCE,rayU2DDE);
        tensor[3] op1_e3_l_332E14#4 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV2DD0,op1_e3_l_312E12);
        tensor[3] UV2E02#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_322E13,op1_e3_l_332E14);
        tensor[3] rayOrig2E28#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14);
        real _t2E4E#4 = 0.e0;
        tensor[3] _t2E50#1 = <tensor[3]>[_t2E4E,_t2E4E,_t2E4E];
        tensor[3] rayVec2E52#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN2DCC,_t2E50);
        tensor[3] op1_e3_l_392E68#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camNearVsp2DC8,rayVec2E52);
        tensor[3] rayStart2E54#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E68);
        real _t2E7E#1 = TensorIndex<tensor[3],[0]>(rayStart2E54);
        real _t2E80#1 = TensorIndex<tensor[3],[1]>(rayStart2E54);
        tensor[2] rayStartProj2E82#1 = <tensor[2]>[_t2E7E,_t2E80];
        tensor[3] op1_e3_l_392E98#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp2DCA,rayVec2E52);
        tensor[3] rayEnd2E84#2 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T1_{i0} + T2_{i0} + T3_{i0})>_{3} (camEye2DC2,op1_e3_l_322E13,op1_e3_l_332E14,op1_e3_l_392E98);
        tensor[3] dpos2EAE#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (rayEnd2E84,rayStart2E54);
        real _t2EDE#1 = TensorIndex<tensor[3],[0]>(dpos2EAE);
        real _t2EE0#1 = TensorIndex<tensor[3],[1]>(dpos2EAE);
        tensor[2] dposProj2EE2#1 = <tensor[2]>[_t2EDE,_t2EE0];
        femData:MeshPos[0] _t2EE4#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t2EE6#1 = MkDynamic<femData:MeshPos,0>(_t2EE4);
        real[0] _t2EE8#1 = <real[0]>{};
        real[] _t2EEA#1 = MkDynamic<real,0>(_t2EE8);
        int cellIntersects2EEC#3 = 0;
        tensor[2][0] _t2EEE#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF0#1 = MkDynamic<tensor[2],0>(_t2EEE);
        tensor[3][0] _t2EF2#1 = <tensor[3][0]>{};
        tensor[3][] _t2EF4#1 = MkDynamic<tensor[3],0>(_t2EF2);
        tensor[2][0] _t2EF6#1 = <tensor[2][0]>{};
        tensor[2][] _t2EF8#1 = MkDynamic<tensor[2],0>(_t2EF6);
        femData:MeshCell[0] _t2EFA#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t2EFC#1 = MkDynamic<femData:MeshCell,0>(_t2EFA);
        int currentCellInt2EFE#1 = -1;
        femData:MeshCell currentCell2F00#1 = Subscript<femData:MeshCell[]>(0cell_a2DC0,cellIntersects2EEC);
        femData:MeshPos pos2F02#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a2DBE);
        bool startsInside2F04#1 = false;
        self.rayU = rayU2DDE;
        self.rayV = rayV2DF2;
        self.UV = UV2E02;
        self.rayOrig = rayOrig2E28;
        self.rayVec = rayVec2E52;
        self.camNearVsp = camNearVsp2DC8;
        self.camFarVsp = camFarVsp2DCA;
        self.rayStart = rayStart2E54;
        self.rayStartProj = rayStartProj2E82;
        self.rayEnd = rayEnd2E84;
        self.dpos = dpos2EAE;
        self.dposProj = dposProj2EE2;
        self.poses = _t2EE6;
        self.normalizedTimes = _t2EEA;
        self.cellIntersects = cellIntersects2EEC;
        self.rayCellInter = _t2EF0;
        self.spaceInter = _t2EF4;
        self.refSpaceInter = _t2EF8;
        self.cellInter = _t2EFC;
        self.currentCellInt = currentCellInt2EFE;
        self.rayN = _t2E4E;
        self.currentCell = currentCell2F00;
        self.steps = cellIntersects2EEC;
        self.pos = pos2F02;
        self.startsInside = startsInside2F04;
        self.ui = ui2DA0;
        self.vi = vi2DA1;
        return
    end state init
    method start
        ENTRY2F22:  preds = []
          femData:MeshCell[] 0cell_a2F23#1 = globals.0cell_a2CB5;
          bool debug2F25#1 = globals.debug2CB1;
          int debugU2F27#1 = globals.debugU2CB2;
          int debugV2F29#1 = globals.debugV2CB3;
          tensor[3] rayOrig2F2B#2 = self.rayOrig;
          tensor[3] rayVec2F2D#1 = self.rayVec;
          real camNearVsp2F2F#5 = self.camNearVsp;
          real camFarVsp2F31#3 = self.camFarVsp;
          tensor[2] rayStartProj2F33#3 = self.rayStartProj;
          tensor[2] dposProj2F35#2 = self.dposProj;
          femData:MeshPos[] poses2F37#1 = self.poses;
          real[] normalizedTimes2F39#1 = self.normalizedTimes;
          int cellIntersects2F3B#1 = self.cellIntersects;
          tensor[3][] spaceInter2F3D#1 = self.spaceInter;
          int currentCellInt2F3F#1 = self.currentCellInt;
          bool startsInside2F41#2 = self.startsInside;
          int ui2F43#2 = self.ui;
          int vi2F45#2 = self.vi;
          bool _t2F47#1 = NEQ<int>(ui2F43,debugU2F27);
          if _t2F47 then goto ASSIGN2F4B else goto ASSIGN3A23
        ASSIGN2F4B:  preds = [COND2F49]
          bool _t2F4A#1 = true;
          goto JOIN2F4E
        JOIN2F4E:  preds = [ASSIGN2F4B,ASSIGN3A23]
          bool _t2F4C#1 = phi(_t2F4A,_t2F4D)
          if _t2F4C then goto COND2F50 else goto JOIN2F53
        COND2F50:  preds = [COND2F4F]
          if debug2F25 then goto STABILIZE2F51 else goto JOIN2F52
        STABILIZE2F51:  preds = [COND2F50]
          stabilize
          goto JOIN2F52
        JOIN2F52:  preds = [*STABILIZE2F51,COND2F50]
          goto JOIN2F53
        JOIN2F53:  preds = [JOIN2F52,COND2F4F]
        FOREACH2F55:  preds = [JOIN2F53,NEXT307C]
          foreach (c2F54 in 0cell_a2F23) on exit goto ASSIGN39C3
            real startTime39B1#3 = phi(camFarVsp2F31,startTime3070)
            bool startsInside39C1#2 = phi(startsInside2F41,startsInside3072)
            int currentCellInt39B6#6 = phi(currentCellInt2F3F,currentCellInt3073)
            int cellIntersects306C#8 = phi(cellIntersects2F3B,cellIntersects3075)
            real[] normalizedTimes3067#7 = phi(normalizedTimes2F39,normalizedTimes3077)
            femData:MeshPos[] poses3064#7 = phi(poses2F37,poses3079)
          string _t2F56#1 = "Cell:";
          string _t2F58#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F56,c2F54,_t2F58);
          int _t2F5B#8 = ExtractFemItem<int,CellIndex(MeshCell)>(c2F54);
          femData:Mesh _t2F5D#9 = ExtractFem<femData:Mesh,femData:MeshCell>(c2F54);
          femData:MeshPos _t3053#2 = _msh_newtonInverse2F5F (rayStartProj2F33,_t2F5B,_t2F5D);
          bool _t3055#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3053);
          if _t3055 then goto ASSIGN3059 else goto ASSIGN307E
        ASSIGN3059:  preds = [COND3057]
          string _t3058#1 = "pos starts inside\n";
          Print<[string]>(_t3058);
          tensor[2] refPos305D#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t3053);
          femData:MeshPos p3061#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2F5D,_t2F5B,refPos305D);
          femData:MeshPos[] poses3063#1 = Append<femData:MeshPos>(poses3064,p3061);
          real[] normalizedTimes3066#1 = Append<real>(normalizedTimes3067,camNearVsp2F2F);
          int _t3069#1 = 1;
          int cellIntersects306B#1 = IAdd(cellIntersects306C,_t3069);
          bool startsInside306E#1 = true;
          goto JOIN307B
        JOIN307B:  preds = [ASSIGN306F,JOIN39BC]
          real startTime3070#1 = phi(camNearVsp2F2F,startTime3071)
          bool startsInside3072#1 = phi(startsInside306E,startsInside2F41)
          int currentCellInt3073#1 = phi(cellIntersects306C,currentCellInt3074)
          int cellIntersects3075#1 = phi(cellIntersects306B,cellIntersects3076)
          real[] normalizedTimes3077#1 = phi(normalizedTimes3066,normalizedTimes3078)
          femData:MeshPos[] poses3079#1 = phi(poses3063,poses307A)
          goto FOREACH2F55
        ASSIGN307E:  preds = [COND3057]
          real _t307D#26 = -0.e0;
          tensor[2] _t307F#10 = <tensor[2]>[_t307D,_t307D];
          real time3081#9 = +inf;
          int face3083#12 = -1;
          real _t3085#39 = 0.1e1;
          real _t3087#9 = 0.e0;
          tensor[2] _t3089#3 = <tensor[2]>[_t3085,_t3087];
          real _t308B#9 = -0.1e1;
          tensor[2] _t308D#2 = <tensor[2]>[_t308B,_t3085];
          int[3] femIndicies30A2#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t2F5D,_t2F5B);
          tensor[3,2] femDofs30A3#4 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t2F5D,femIndicies30A2);
          tensor[2,3] basisResult30A4#3 = EvaluateBasis<BasisArray(2,3)>(_t307F);
          tensor[2,2] probe_l_173090#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2,2] op1_e3_l_183091#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_173090);
          tensor[2] probe_l_193092#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] probe_l_203093#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30A4,_t307F);
          tensor[2] op1_e3_l_213094#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_203093);
          tensor[2,2] op1_e3_l_223095#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_183091);
          real op1_e3_l_233096#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_193092,op1_e3_l_213094);
          tensor[3] basisResult30AA#1 = EvaluateBasis<BasisArray(3)>(_t307F);
          tensor[2] probe_l_243097#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t2F5B,_t2F5D,_t307F,femDofs30A3,basisResult30AA,_t307F);
          tensor[2,2] op1_e3_l_253098#2 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_223095,op1_e3_l_233096);
          tensor[2] op1_e3_l_263099#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (rayStartProj2F33,probe_l_243097);
          tensor[2] op1_e3_l_27309A#27 = λ(T0[2 2],T1[2])<Σ(i1=0..1)<((T0_{i0,i1} * T1_{i1}))>(i1=0..1)>_{2} (op1_e3_l_253098,op1_e3_l_263099);
          tensor[2] op1_e3_l_36309B#16 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (dposProj2F35,op1_e3_l_253098);
          tensor[2] op1_e3_l_37309C#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t308D);
          real op1_e3_l_38309D#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_37309C);
          tensor[2] op1_e3_l_39309E#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t308D,op1_e3_l_38309D);
          tensor[2] op1_e3_l_40309F#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3089,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4130A0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_39309E);
          real _t308F#10 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_40309F,op1_e3_l_4130A0);
          real _t30C7#3 = -0.1e-15;
          bool _t30C9#1 = GTE<real>(_t308F,_t30C7);
          bool _t30CB#1 = GT<real>(time3081,_t308F);
          real _t30CD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_38309D);
          real _t30F5#3 = 0.1e-20;
          bool _t30F7#1 = GTE<real>(_t30CD,_t30F5);
          bool _t30F9#1 = BAnd(_t30CB,_t30F7);
          bool _t30FB#4 = BAnd(_t30C9,_t30F9);
          if _t30FB then goto ASSIGN30FF else goto JOIN3196
        ASSIGN30FF:  preds = [COND30FD]
          real _t30FE#3 = 0.1e-8;
          real _t3100#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t30FE);
          tensor[2] _t3102#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783117#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793118#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783117);
          real _t3104#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3102,op1_e3_l_793118);
          bool _t3142#1 = GT<real>(_t3100,_t3104);
          tensor[2] _t3144#1 = <tensor[2]>[_t30FE,_t30FE];
          tensor[2] _t3146#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3144,op1_e3_l_27309A,op1_e3_l_783117);
          real _t3182#1 = TensorIndex<tensor[2],[0]>(_t3146);
          bool _t3184#1 = GT<real>(_t3182,_t307D);
          real _t3186#1 = TensorIndex<tensor[2],[1]>(_t3146);
          bool _t3188#1 = GT<real>(_t3186,_t307D);
          bool _t318A#1 = BAnd(_t3184,_t3188);
          bool _t318C#1 = BAnd(_t3142,_t318A);
          if _t318C then goto ASSIGN3190 else goto JOIN3193
        ASSIGN3190:  preds = [COND318E]
          int face318F#1 = 0;
          goto JOIN3193
        JOIN3193:  preds = [ASSIGN3190,COND318E]
          int face3191#1 = phi(face318F,face3083)
          real time3192#1 = phi(_t308F,time3081)
          goto JOIN3196
        JOIN3196:  preds = [JOIN3193,COND30FD]
          int face3194#2 = phi(face3191,face3083)
          real time3195#3 = phi(time3192,time3081)
          tensor[2] _t3197#1 = <tensor[2]>[_t3087,_t3087];
          tensor[2] _t3199#2 = <tensor[2]>[_t3087,_t3085];
          tensor[2] op1_e3_l_3731A8#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3199);
          real op1_e3_l_3831A9#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3731A8);
          tensor[2] op1_e3_l_3931AA#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3199,op1_e3_l_3831A9);
          tensor[2] op1_e3_l_4031AB#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3197,op1_e3_l_27309A);
          tensor[2] op1_e3_l_4131AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3931AA);
          real _t319B#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4131AC);
          bool _t31D3#4 = GTE<real>(_t319B,_t30C7);
          bool _t31D5#1 = GT<real>(time3195,_t319B);
          real _t31D7#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3831A9);
          bool _t31FF#4 = GTE<real>(_t31D7,_t30F5);
          bool _t3201#1 = BAnd(_t31D5,_t31FF);
          bool _t3203#1 = BAnd(_t31D3,_t3201);
          if _t3203 then goto ASSIGN3207 else goto JOIN329E
        ASSIGN3207:  preds = [COND3205]
          real _t3206#3 = 0.1e-8;
          real _t3208#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3206);
          tensor[2] _t320A#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78321F#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793220#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78321F);
          real _t320C#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t320A,op1_e3_l_793220);
          bool _t324A#1 = GT<real>(_t3208,_t320C);
          tensor[2] _t324C#1 = <tensor[2]>[_t3206,_t3206];
          tensor[2] _t324E#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t324C,op1_e3_l_27309A,op1_e3_l_78321F);
          real _t328A#1 = TensorIndex<tensor[2],[0]>(_t324E);
          bool _t328C#1 = GT<real>(_t328A,_t307D);
          real _t328E#1 = TensorIndex<tensor[2],[1]>(_t324E);
          bool _t3290#1 = GT<real>(_t328E,_t307D);
          bool _t3292#1 = BAnd(_t328C,_t3290);
          bool _t3294#1 = BAnd(_t324A,_t3292);
          if _t3294 then goto ASSIGN3298 else goto JOIN329B
        ASSIGN3298:  preds = [COND3296]
          int face3297#1 = 1;
          goto JOIN329B
        JOIN329B:  preds = [ASSIGN3298,COND3296]
          int face3299#1 = phi(face3297,face3194)
          real time329A#1 = phi(_t319B,time3195)
          goto JOIN329E
        JOIN329E:  preds = [JOIN329B,COND3205]
          int face329C#2 = phi(face3299,face3194)
          real time329D#3 = phi(time329A,time3195)
          tensor[2] op1_e3_l_3732AC#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3089);
          real op1_e3_l_3832AD#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_36309B,op1_e3_l_3732AC);
          tensor[2] op1_e3_l_3932AE#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3089,op1_e3_l_3832AD);
          tensor[2] op1_e3_l_4132B0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_3932AE);
          real _t329F#13 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_4031AB,op1_e3_l_4132B0);
          bool _t32D7#4 = GTE<real>(_t329F,_t30C7);
          bool _t32D9#1 = GT<real>(time329D,_t329F);
          real _t32DB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_3832AD);
          bool _t3303#4 = GTE<real>(_t32DB,_t30F5);
          bool _t3305#1 = BAnd(_t32D9,_t3303);
          bool _t3307#1 = BAnd(_t32D7,_t3305);
          if _t3307 then goto ASSIGN330B else goto JOIN33A2
        ASSIGN330B:  preds = [COND3309]
          real _t330A#3 = 0.1e-8;
          real _t330C#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t330A);
          tensor[2] _t330E#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783323#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793324#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783323);
          real _t3310#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t330E,op1_e3_l_793324);
          bool _t334E#1 = GT<real>(_t330C,_t3310);
          tensor[2] _t3350#1 = <tensor[2]>[_t330A,_t330A];
          tensor[2] _t3352#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3350,op1_e3_l_27309A,op1_e3_l_783323);
          real _t338E#1 = TensorIndex<tensor[2],[0]>(_t3352);
          bool _t3390#1 = GT<real>(_t338E,_t307D);
          real _t3392#1 = TensorIndex<tensor[2],[1]>(_t3352);
          bool _t3394#1 = GT<real>(_t3392,_t307D);
          bool _t3396#1 = BAnd(_t3390,_t3394);
          bool _t3398#1 = BAnd(_t334E,_t3396);
          if _t3398 then goto ASSIGN339C else goto JOIN339F
        ASSIGN339C:  preds = [COND339A]
          int face339B#1 = 2;
          goto JOIN339F
        JOIN339F:  preds = [ASSIGN339C,COND339A]
          int face339D#1 = phi(face339B,face329C)
          real time339E#1 = phi(_t329F,time329D)
          goto JOIN33A2
        JOIN33A2:  preds = [JOIN339F,COND3309]
          int face33A0#2 = phi(face339D,face329C)
          real time33A1#1 = phi(time339E,time329D)
          bool _t33A3#1 = NEQ<int>(face33A0,face3083);
          if _t33A3 then goto ASSIGN33A7 else goto ASSIGN39C0
        ASSIGN33A7:  preds = [COND33A5]
          real _t33A6#1 = Max<real>(time33A1,_t3087);
          real _t33A8#1 = IntToReal(face33A0);
          tensor[2] _t33AA#1 = <tensor[2]>[_t33A6,_t33A8];
          goto JOIN33AE
        JOIN33AE:  preds = [ASSIGN33AB,ASSIGN39C0]
          tensor[2] _t33AC#1 = phi(_t33AA,_t33AD)
          real newTime33AF#2 = TensorIndex<tensor[2],[0]>(_t33AC);
          bool _t33B1#1 = GTE<real>(newTime33AF,_t3087);
          if _t33B1 then goto COND33B4 else goto JOIN39BC
        COND33B4:  preds = [COND33B3]
          if _t30FB then goto ASSIGN33B6 else goto JOIN344D
        ASSIGN33B6:  preds = [COND33B4]
          real _t33B5#3 = 0.1e-8;
          real _t33B7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t33B5);
          tensor[2] _t33B9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7833CE#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7933CF#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t33BB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t33B9,op1_e3_l_7933CF);
          bool _t33F9#1 = GT<real>(_t33B7,_t33BB);
          tensor[2] _t33FB#1 = <tensor[2]>[_t33B5,_t33B5];
          tensor[2] _t33FD#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t33FB,op1_e3_l_27309A,op1_e3_l_7833CE);
          real _t3439#1 = TensorIndex<tensor[2],[0]>(_t33FD);
          bool _t343B#1 = GT<real>(_t3439,_t307D);
          real _t343D#1 = TensorIndex<tensor[2],[1]>(_t33FD);
          bool _t343F#1 = GT<real>(_t343D,_t307D);
          bool _t3441#1 = BAnd(_t343B,_t343F);
          bool _t3443#1 = BAnd(_t33F9,_t3441);
          if _t3443 then goto ASSIGN3447 else goto JOIN344A
        ASSIGN3447:  preds = [COND3445]
          int face3446#1 = 0;
          goto JOIN344A
        JOIN344A:  preds = [ASSIGN3447,COND3445]
          int face3448#1 = phi(face3446,face3083)
          real time3449#1 = phi(_t308F,time3081)
          goto JOIN344D
        JOIN344D:  preds = [JOIN344A,COND33B4]
          int face344B#2 = phi(face3448,face3083)
          real time344C#3 = phi(time3449,time3081)
          bool _t344E#1 = GT<real>(time344C,_t319B);
          bool _t3450#1 = BAnd(_t344E,_t31FF);
          bool _t3452#1 = BAnd(_t31D3,_t3450);
          if _t3452 then goto ASSIGN3456 else goto JOIN34ED
        ASSIGN3456:  preds = [COND3454]
          real _t3455#3 = 0.1e-8;
          real _t3457#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3455);
          tensor[2] _t3459#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78346E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79346F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78346E);
          real _t345B#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3459,op1_e3_l_79346F);
          bool _t3499#1 = GT<real>(_t3457,_t345B);
          tensor[2] _t349B#1 = <tensor[2]>[_t3455,_t3455];
          tensor[2] _t349D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t349B,op1_e3_l_27309A,op1_e3_l_78346E);
          real _t34D9#1 = TensorIndex<tensor[2],[0]>(_t349D);
          bool _t34DB#1 = GT<real>(_t34D9,_t307D);
          real _t34DD#1 = TensorIndex<tensor[2],[1]>(_t349D);
          bool _t34DF#1 = GT<real>(_t34DD,_t307D);
          bool _t34E1#1 = BAnd(_t34DB,_t34DF);
          bool _t34E3#1 = BAnd(_t3499,_t34E1);
          if _t34E3 then goto ASSIGN34E7 else goto JOIN34EA
        ASSIGN34E7:  preds = [COND34E5]
          int face34E6#1 = 1;
          goto JOIN34EA
        JOIN34EA:  preds = [ASSIGN34E7,COND34E5]
          int face34E8#1 = phi(face34E6,face344B)
          real time34E9#1 = phi(_t319B,time344C)
          goto JOIN34ED
        JOIN34ED:  preds = [JOIN34EA,COND3454]
          int face34EB#2 = phi(face34E8,face344B)
          real time34EC#3 = phi(time34E9,time344C)
          bool _t34EE#1 = GT<real>(time34EC,_t329F);
          bool _t34F0#1 = BAnd(_t34EE,_t3303);
          bool _t34F2#1 = BAnd(_t32D7,_t34F0);
          if _t34F2 then goto ASSIGN34F6 else goto JOIN358D
        ASSIGN34F6:  preds = [COND34F4]
          real _t34F5#3 = 0.1e-8;
          real _t34F7#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t34F5);
          tensor[2] _t34F9#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_78350E#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_79350F#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_78350E);
          real _t34FB#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t34F9,op1_e3_l_79350F);
          bool _t3539#1 = GT<real>(_t34F7,_t34FB);
          tensor[2] _t353B#1 = <tensor[2]>[_t34F5,_t34F5];
          tensor[2] _t353D#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t353B,op1_e3_l_27309A,op1_e3_l_78350E);
          real _t3579#1 = TensorIndex<tensor[2],[0]>(_t353D);
          bool _t357B#1 = GT<real>(_t3579,_t307D);
          real _t357D#1 = TensorIndex<tensor[2],[1]>(_t353D);
          bool _t357F#1 = GT<real>(_t357D,_t307D);
          bool _t3581#1 = BAnd(_t357B,_t357F);
          bool _t3583#1 = BAnd(_t3539,_t3581);
          if _t3583 then goto ASSIGN3587 else goto JOIN358A
        ASSIGN3587:  preds = [COND3585]
          int face3586#1 = 2;
          goto JOIN358A
        JOIN358A:  preds = [ASSIGN3587,COND3585]
          int face3588#1 = phi(face3586,face34EB)
          real time3589#1 = phi(_t329F,time34EC)
          goto JOIN358D
        JOIN358D:  preds = [JOIN358A,COND34F4]
          int face358B#2 = phi(face3588,face34EB)
          real time358C#1 = phi(time3589,time34EC)
          bool _t358E#1 = NEQ<int>(face358B,face3083);
          if _t358E then goto ASSIGN3592 else goto ASSIGN39BF
        ASSIGN3592:  preds = [COND3590]
          real _t3591#1 = Max<real>(time358C,_t3087);
          real _t3593#1 = IntToReal(face358B);
          tensor[2] _t3595#1 = <tensor[2]>[_t3591,_t3593];
          goto JOIN3599
        JOIN3599:  preds = [ASSIGN3596,ASSIGN39BF]
          tensor[2] _t3597#1 = phi(_t3595,_t3598)
          real _t359A#1 = TensorIndex<tensor[2],[0]>(_t3597);
          tensor[2] op1_e3_l_3535A9#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t359A,op1_e3_l_36309B);
          tensor[2] _t359C#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_3535A9);
          if _t30FB then goto ASSIGN35CE else goto JOIN3665
        ASSIGN35CE:  preds = [COND35CC]
          real _t35CD#3 = 0.1e-8;
          real _t35CF#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t35CD);
          tensor[2] _t35D1#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7835E6#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7935E7#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t35D3#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t35D1,op1_e3_l_7935E7);
          bool _t3611#1 = GT<real>(_t35CF,_t35D3);
          tensor[2] _t3613#1 = <tensor[2]>[_t35CD,_t35CD];
          tensor[2] _t3615#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3613,op1_e3_l_27309A,op1_e3_l_7835E6);
          real _t3651#1 = TensorIndex<tensor[2],[0]>(_t3615);
          bool _t3653#1 = GT<real>(_t3651,_t307D);
          real _t3655#1 = TensorIndex<tensor[2],[1]>(_t3615);
          bool _t3657#1 = GT<real>(_t3655,_t307D);
          bool _t3659#1 = BAnd(_t3653,_t3657);
          bool _t365B#1 = BAnd(_t3611,_t3659);
          if _t365B then goto ASSIGN365F else goto JOIN3662
        ASSIGN365F:  preds = [COND365D]
          int face365E#1 = 0;
          goto JOIN3662
        JOIN3662:  preds = [ASSIGN365F,COND365D]
          int face3660#1 = phi(face365E,face3083)
          real time3661#1 = phi(_t308F,time3081)
          goto JOIN3665
        JOIN3665:  preds = [JOIN3662,COND35CC]
          int face3663#2 = phi(face3660,face3083)
          real time3664#3 = phi(time3661,time3081)
          bool _t3666#1 = GT<real>(time3664,_t319B);
          bool _t3668#1 = BAnd(_t3666,_t31FF);
          bool _t366A#1 = BAnd(_t31D3,_t3668);
          if _t366A then goto ASSIGN366E else goto JOIN3705
        ASSIGN366E:  preds = [COND366C]
          real _t366D#3 = 0.1e-8;
          real _t366F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t366D);
          tensor[2] _t3671#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783686#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793687#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783686);
          real _t3673#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3671,op1_e3_l_793687);
          bool _t36B1#1 = GT<real>(_t366F,_t3673);
          tensor[2] _t36B3#1 = <tensor[2]>[_t366D,_t366D];
          tensor[2] _t36B5#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t36B3,op1_e3_l_27309A,op1_e3_l_783686);
          real _t36F1#1 = TensorIndex<tensor[2],[0]>(_t36B5);
          bool _t36F3#1 = GT<real>(_t36F1,_t307D);
          real _t36F5#1 = TensorIndex<tensor[2],[1]>(_t36B5);
          bool _t36F7#1 = GT<real>(_t36F5,_t307D);
          bool _t36F9#1 = BAnd(_t36F3,_t36F7);
          bool _t36FB#1 = BAnd(_t36B1,_t36F9);
          if _t36FB then goto ASSIGN36FF else goto JOIN3702
        ASSIGN36FF:  preds = [COND36FD]
          int face36FE#1 = 1;
          goto JOIN3702
        JOIN3702:  preds = [ASSIGN36FF,COND36FD]
          int face3700#1 = phi(face36FE,face3663)
          real time3701#1 = phi(_t319B,time3664)
          goto JOIN3705
        JOIN3705:  preds = [JOIN3702,COND366C]
          int face3703#2 = phi(face3700,face3663)
          real time3704#3 = phi(time3701,time3664)
          bool _t3706#1 = GT<real>(time3704,_t329F);
          bool _t3708#1 = BAnd(_t3706,_t3303);
          bool _t370A#1 = BAnd(_t32D7,_t3708);
          if _t370A then goto ASSIGN370E else goto JOIN37A5
        ASSIGN370E:  preds = [COND370C]
          real _t370D#3 = 0.1e-8;
          real _t370F#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t370D);
          tensor[2] _t3711#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783726#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793727#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783726);
          real _t3713#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3711,op1_e3_l_793727);
          bool _t3751#1 = GT<real>(_t370F,_t3713);
          tensor[2] _t3753#1 = <tensor[2]>[_t370D,_t370D];
          tensor[2] _t3755#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t3753,op1_e3_l_27309A,op1_e3_l_783726);
          real _t3791#1 = TensorIndex<tensor[2],[0]>(_t3755);
          bool _t3793#1 = GT<real>(_t3791,_t307D);
          real _t3795#1 = TensorIndex<tensor[2],[1]>(_t3755);
          bool _t3797#1 = GT<real>(_t3795,_t307D);
          bool _t3799#1 = BAnd(_t3793,_t3797);
          bool _t379B#1 = BAnd(_t3751,_t3799);
          if _t379B then goto ASSIGN379F else goto JOIN37A2
        ASSIGN379F:  preds = [COND379D]
          int face379E#1 = 2;
          goto JOIN37A2
        JOIN37A2:  preds = [ASSIGN379F,COND379D]
          int face37A0#1 = phi(face379E,face3703)
          real time37A1#1 = phi(_t329F,time3704)
          goto JOIN37A5
        JOIN37A5:  preds = [JOIN37A2,COND370C]
          int face37A3#2 = phi(face37A0,face3703)
          real time37A4#1 = phi(time37A1,time3704)
          bool _t37A6#1 = NEQ<int>(face37A3,face3083);
          if _t37A6 then goto ASSIGN37AA else goto ASSIGN39BE
        ASSIGN37AA:  preds = [COND37A8]
          real _t37A9#1 = Max<real>(time37A4,_t3087);
          real _t37AB#1 = IntToReal(face37A3);
          tensor[2] _t37AD#1 = <tensor[2]>[_t37A9,_t37AB];
          goto JOIN37B1
        JOIN37B1:  preds = [ASSIGN37AE,ASSIGN39BE]
          tensor[2] _t37AF#1 = phi(_t37AD,_t37B0)
          real _t37B2#1 = TensorIndex<tensor[2],[0]>(_t37AF);
          tensor[2] op1_e3_l_337B5#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t37B2,dposProj2F35);
          tensor[2] _t37B4#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (rayStartProj2F33,op1_e3_l_337B5);
          if _t30FB then goto ASSIGN37BA else goto JOIN3851
        ASSIGN37BA:  preds = [COND37B8]
          real _t37B9#3 = 0.1e-8;
          real _t37BB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t37B9);
          tensor[2] _t37BD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_7837D2#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t308F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_7937D3#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t37BF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t37BD,op1_e3_l_7937D3);
          bool _t37FD#1 = GT<real>(_t37BB,_t37BF);
          tensor[2] _t37FF#1 = <tensor[2]>[_t37B9,_t37B9];
          tensor[2] _t3801#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t37FF,op1_e3_l_27309A,op1_e3_l_7837D2);
          real _t383D#1 = TensorIndex<tensor[2],[0]>(_t3801);
          bool _t383F#1 = GT<real>(_t383D,_t307D);
          real _t3841#1 = TensorIndex<tensor[2],[1]>(_t3801);
          bool _t3843#1 = GT<real>(_t3841,_t307D);
          bool _t3845#1 = BAnd(_t383F,_t3843);
          bool _t3847#1 = BAnd(_t37FD,_t3845);
          if _t3847 then goto ASSIGN384B else goto JOIN384E
        ASSIGN384B:  preds = [COND3849]
          int face384A#1 = 0;
          goto JOIN384E
        JOIN384E:  preds = [ASSIGN384B,COND3849]
          int face384C#1 = phi(face384A,face3083)
          real time384D#1 = phi(_t308F,time3081)
          goto JOIN3851
        JOIN3851:  preds = [JOIN384E,COND37B8]
          int face384F#2 = phi(face384C,face3083)
          real time3850#3 = phi(time384D,time3081)
          bool _t3852#1 = GT<real>(time3850,_t319B);
          bool _t3854#1 = BAnd(_t3852,_t31FF);
          bool _t3856#1 = BAnd(_t31D3,_t3854);
          if _t3856 then goto ASSIGN385A else goto JOIN38F1
        ASSIGN385A:  preds = [COND3858]
          real _t3859#3 = 0.1e-8;
          real _t385B#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t3859);
          tensor[2] _t385D#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783872#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t319B,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793873#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783872);
          real _t385F#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t385D,op1_e3_l_793873);
          bool _t389D#1 = GT<real>(_t385B,_t385F);
          tensor[2] _t389F#1 = <tensor[2]>[_t3859,_t3859];
          tensor[2] _t38A1#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t389F,op1_e3_l_27309A,op1_e3_l_783872);
          real _t38DD#1 = TensorIndex<tensor[2],[0]>(_t38A1);
          bool _t38DF#1 = GT<real>(_t38DD,_t307D);
          real _t38E1#1 = TensorIndex<tensor[2],[1]>(_t38A1);
          bool _t38E3#1 = GT<real>(_t38E1,_t307D);
          bool _t38E5#1 = BAnd(_t38DF,_t38E3);
          bool _t38E7#1 = BAnd(_t389D,_t38E5);
          if _t38E7 then goto ASSIGN38EB else goto JOIN38EE
        ASSIGN38EB:  preds = [COND38E9]
          int face38EA#1 = 1;
          goto JOIN38EE
        JOIN38EE:  preds = [ASSIGN38EB,COND38E9]
          int face38EC#1 = phi(face38EA,face384F)
          real time38ED#1 = phi(_t319B,time3850)
          goto JOIN38F1
        JOIN38F1:  preds = [JOIN38EE,COND3858]
          int face38EF#2 = phi(face38EC,face384F)
          real time38F0#3 = phi(time38ED,time3850)
          bool _t38F2#1 = GT<real>(time38F0,_t329F);
          bool _t38F4#1 = BAnd(_t38F2,_t3303);
          bool _t38F6#1 = BAnd(_t32D7,_t38F4);
          if _t38F6 then goto ASSIGN38FA else goto JOIN3991
        ASSIGN38FA:  preds = [COND38F8]
          real _t38F9#3 = 0.1e-8;
          real _t38FB#1 = λ(T0[],T1[])<(T0 + T1)> (_t3085,_t38F9);
          tensor[2] _t38FD#1 = <tensor[2]>[_t3085,_t3085];
          tensor[2] op1_e3_l_783912#2 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t329F,op1_e3_l_36309B);
          tensor[2] op1_e3_l_793913#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (op1_e3_l_27309A,op1_e3_l_783912);
          real _t38FF#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t38FD,op1_e3_l_793913);
          bool _t393D#1 = GT<real>(_t38FB,_t38FF);
          tensor[2] _t393F#1 = <tensor[2]>[_t38F9,_t38F9];
          tensor[2] _t3941#2 = λ(T0[2],T1[2],T2[2])<(T0_{i0} + T1_{i0} + T2_{i0})>_{2} (_t393F,op1_e3_l_27309A,op1_e3_l_783912);
          real _t397D#1 = TensorIndex<tensor[2],[0]>(_t3941);
          bool _t397F#1 = GT<real>(_t397D,_t307D);
          real _t3981#1 = TensorIndex<tensor[2],[1]>(_t3941);
          bool _t3983#1 = GT<real>(_t3981,_t307D);
          bool _t3985#1 = BAnd(_t397F,_t3983);
          bool _t3987#1 = BAnd(_t393D,_t3985);
          if _t3987 then goto ASSIGN398B else goto JOIN398E
        ASSIGN398B:  preds = [COND3989]
          int face398A#1 = 2;
          goto JOIN398E
        JOIN398E:  preds = [ASSIGN398B,COND3989]
          int face398C#1 = phi(face398A,face38EF)
          real time398D#1 = phi(_t329F,time38F0)
          goto JOIN3991
        JOIN3991:  preds = [JOIN398E,COND38F8]
          int face398F#2 = phi(face398C,face38EF)
          real time3990#1 = phi(time398D,time38F0)
          bool _t3992#1 = NEQ<int>(face398F,face3083);
          if _t3992 then goto ASSIGN3996 else goto ASSIGN39BD
        ASSIGN3996:  preds = [COND3994]
          real _t3995#1 = Max<real>(time3990,_t3087);
          real _t3997#1 = IntToReal(face398F);
          tensor[2] _t3999#1 = <tensor[2]>[_t3995,_t3997];
          goto JOIN399D
        JOIN399D:  preds = [ASSIGN399A,ASSIGN39BD]
          tensor[2] _t399B#1 = phi(_t3999,_t399C)
          real _t399E#1 = TensorIndex<tensor[2],[1]>(_t399B);
          real t39A1#1 = Floor<1>(_t399E);
          int _t39A0#1 = RealToInt<1>(t39A1);
          femData:MeshPos p39A4#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t2F5D,_t2F5B,_t359C,_t37B4,_t39A0);
          real op1_e3_l_339A7#1 = λ(T0[],T1[])<(T1) - (T0)> (camNearVsp2F2F,camFarVsp2F31);
          real op1_e3_l_439A8#1 = λ(T0[],T1[])<(T0 * T1)> (newTime33AF,op1_e3_l_339A7);
          real newRayTime39A6#3 = λ(T0[],T1[])<(T0 + T1)> (camNearVsp2F2F,op1_e3_l_439A8);
          real[] normalizedTimes39AC#1 = Append<real>(normalizedTimes3067,newRayTime39A6);
          femData:MeshPos[] poses39AE#1 = Append<femData:MeshPos>(poses3064,p39A4);
          bool _t39B0#1 = GT<real>(startTime39B1,newRayTime39A6);
          if _t39B0 then goto JOIN39B7 else goto JOIN39B7
        JOIN39B7:  preds = [COND39B3,COND39B3]
          real startTime39B4#1 = phi(newRayTime39A6,startTime39B1)
          int currentCellInt39B5#1 = phi(cellIntersects306C,currentCellInt39B6)
          int _t39B8#1 = 1;
          int cellIntersects39BA#1 = IAdd(cellIntersects306C,_t39B8);
          goto JOIN39BC
        JOIN39BC:  preds = [ASSIGN39BB,COND33B3]
          real startTime3071#1 = phi(startTime39B4,startTime39B1)
          int currentCellInt3074#1 = phi(currentCellInt39B5,currentCellInt39B6)
          int cellIntersects3076#1 = phi(cellIntersects39BA,cellIntersects306C)
          real[] normalizedTimes3078#1 = phi(normalizedTimes39AC,normalizedTimes3067)
          femData:MeshPos[] poses307A#1 = phi(poses39AE,poses3064)
          goto JOIN307B
        ASSIGN39BD:  preds = [COND3994]
          tensor[2] _t399C#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN399D
        ASSIGN39BE:  preds = [COND37A8]
          tensor[2] _t37B0#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN37B1
        ASSIGN39BF:  preds = [COND3590]
          tensor[2] _t3598#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN3599
        ASSIGN39C0:  preds = [COND33A5]
          tensor[2] _t33AD#1 = <tensor[2]>[_t308B,_t308B];
          goto JOIN33AE
        ASSIGN39C3:  preds = [FOREACH2F55]
          int _t39C2#1 = 0;
          bool _t39C4#1 = NEQ<int>(cellIntersects306C,_t39C2);
          if _t39C4 then goto ASSIGN39C8 else goto ASSIGN3A14
        ASSIGN39C8:  preds = [COND39C6]
          femData:MeshPos pos39C7#4 = Subscript<femData:MeshPos[]>(poses3064,currentCellInt39B6);
          real rayN39C9#2 = Subscript<real[]>(normalizedTimes3067,currentCellInt39B6);
          tensor[3] op1_e3_l_339CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN39C9,rayVec2F2D);
          tensor[3] _t39CB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig2F2B,op1_e3_l_339CC);
          tensor[3][2] _t39CF#1 = <tensor[3][2]>{rayOrig2F2B,_t39CB};
          tensor[3][] _t39D1#1 = MkDynamic<tensor[3],2>(_t39CF);
          tensor[3][] spaceInter39D3#1 = Concat<tensor[3]>(spaceInter2F3D,_t39D1);
          tensor[2] _t39D5#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos39C7);
          tensor[2][1] _t39D7#1 = <tensor[2][1]>{_t39D5};
          tensor[2][] _t39D9#1 = MkDynamic<tensor[2],1>(_t39D7);
          femData:Mesh _t39DB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos39C7);
          int _t39DD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos39C7);
          femData:MeshCell currentCell39DF#2 = LoadFem<femData:MeshCell>(_t39DB,_t39DD);
          femData:MeshCell[1] _t39E1#1 = <femData:MeshCell[1]>{currentCell39DF};
          femData:MeshCell[] _t39E3#1 = MkDynamic<femData:MeshCell,1>(_t39E1);
          string _t39E5#1 = "In the interval:";
          tensor[2] _t39E7#1 = <tensor[2]>[camNearVsp2F2F,camFarVsp2F31];
          string _t39E9#3 = "\n";
          Print<[string,tensor[2],string]>(_t39E5,_t39E7,_t39E9);
          string _t39EC#1 = "Possible times:";
          Print<[string,real[],string]>(_t39EC,normalizedTimes3067,_t39E9);
          string _t39EF#1 = "cells:";
          femData:MeshCell[] accum39F1#1 = <femData:MeshCell[]>{};
        FOREACH39F4:  preds = [ASSIGN39F2,NEXT39FE]
          foreach (p39F3 in poses3064) on exit goto MASSIGN39FF
            femData:MeshCell[] accum39FC#2 = phi(accum39F1,accum39FB)
          femData:Mesh _t39F5#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p39F3);
          int _t39F7#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p39F3);
          femData:MeshCell _t39F9#1 = LoadFem<femData:MeshCell>(_t39F5,_t39F7);
          femData:MeshCell[] accum39FB#1 = Append<femData:MeshCell>(accum39FC,_t39F9);
          goto FOREACH39F4
        MASSIGN39FF:  preds = [FOREACH39F4]
          Print<[string,femData:MeshCell[],string]>(_t39EF,accum39FC,_t39E9);
          goto JOIN3A06
        JOIN3A06:  preds = [MASSIGN39FF,*STABILIZE3A22]
          femData:MeshPos pos3A00#1 = phi(pos39C7)
          femData:MeshCell currentCell3A01#1 = phi(currentCell39DF)
          real rayN3A02#1 = phi(rayN39C9)
          femData:MeshCell[] cellInter3A03#1 = phi(_t39E3)
          tensor[2][] refSpaceInter3A04#1 = phi(_t39D9)
          tensor[3][] spaceInter3A05#1 = phi(spaceInter39D3)
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.spaceInter = spaceInter3A05;
          self.refSpaceInter = refSpaceInter3A04;
          self.cellInter = cellInter3A03;
          self.currentCellInt = currentCellInt39B6;
          self.rayN = rayN3A02;
          self.currentCell = currentCell3A01;
          self.pos = pos3A00;
          self.startsInside = startsInside39C1;
          active
        ASSIGN3A14:  preds = [COND39C6]
          string _t3A13#1 = "No intersection!\n";
          Print<[string]>(_t3A13);
          string _t3A16#1 = "Ui: ";
          string _t3A18#1 = " Vi:";
          string _t3A1A#1 = "\n";
          Print<[string,int,string,int,string]>(_t3A16,ui2F43,_t3A18,vi2F45,_t3A1A);
          self.poses = poses3064;
          self.normalizedTimes = normalizedTimes3067;
          self.cellIntersects = cellIntersects306C;
          self.currentCellInt = currentCellInt39B6;
          self.startsInside = startsInside39C1;
          stabilize
          goto JOIN3A06
        ASSIGN3A23:  preds = [COND2F49]
          bool _t2F4D#1 = NEQ<int>(vi2F45,debugV2F29);
          goto JOIN2F4E
    end start
    method update
        ENTRY3A24:  preds = []
          tensor[3] rayOrig3A25#4 = self.rayOrig;
          tensor[3] rayVec3A27#6 = self.rayVec;
          real camFarVsp3A29#6 = self.camFarVsp;
          femData:MeshPos[] poses3A2B#2 = self.poses;
          real[] normalizedTimes3A2D#4 = self.normalizedTimes;
          int cellIntersects3A2F#1 = self.cellIntersects;
          tensor[2][] rayCellInter3A31#2 = self.rayCellInter;
          tensor[3][] spaceInter3A33#3 = self.spaceInter;
          tensor[2][] refSpaceInter3A35#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter3A37#4 = self.cellInter;
          real rayN3A39#8 = self.rayN;
          femData:MeshCell currentCell3A3B#2 = self.currentCell;
          int steps3A3D#1 = self.steps;
          femData:MeshPos pos3A3F#8 = self.pos;
          bool startsInside3A41#2 = self.startsInside;
          int ui3A43#1 = self.ui;
          int vi3A45#1 = self.vi;
          string _t3A47#1 = "Ui: ";
          string _t3A49#1 = " vi: ";
          string _t3A4B#21 = "\n";
          Print<[string,int,string,int,string]>(_t3A47,ui3A43,_t3A49,vi3A45,_t3A4B);
          string _t3A4E#1 = "The current ref pos is:";
          tensor[2] _t3A50#8 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3A3F);
          Print<[string,tensor[2],string]>(_t3A4E,_t3A50,_t3A4B);
          string _t3A53#1 = "Current cell:";
          femData:Mesh _t3A55#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3A3F);
          int _t3A57#4 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3A3F);
          femData:MeshCell _t3A59#3 = LoadFem<femData:MeshCell>(_t3A55,_t3A57);
          Print<[string,femData:MeshCell,string]>(_t3A53,_t3A59,_t3A4B);
          string _t3A5C#1 = "The current time is:";
          Print<[string,real,string]>(_t3A5C,rayN3A39,_t3A4B);
          string _t3A5F#2 = "The current world pos is:";
          int[3] femIndicies3A63#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3A55,_t3A57);
          tensor[3,2] femDofs3A64#2 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3A55,femIndicies3A63);
          tensor[3] basisResult3A65#2 = EvaluateBasis<BasisArray(3)>(_t3A50);
          tensor[2] _t3A61#2 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          tensor[3] op1_e3_l_33A6D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN3A39,rayVec3A27);
          tensor[3] stupid3A6C#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33A6D);
          string _t3A70#2 = "The current world pos should be:";
          real _t3A72#1 = TensorIndex<tensor[3],[0]>(stupid3A6C);
          real _t3A74#1 = TensorIndex<tensor[3],[1]>(stupid3A6C);
          tensor[2] _t3A76#3 = <tensor[2]>[_t3A72,_t3A74];
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          real _t3A79#10 = 0.1e1;
          real _t3A7B#3 = 0.1e-8;
          real _t3A7D#1 = λ(T0[],T1[])<(T0 + T1)> (_t3A79,_t3A7B);
          tensor[2] _t3A7F#1 = <tensor[2]>[_t3A79,_t3A79];
          real _t3A81#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (_t3A7F,_t3A50);
          bool _t3A83#1 = GT<real>(_t3A7D,_t3A81);
          tensor[2] _t3A85#1 = <tensor[2]>[_t3A7B,_t3A7B];
          tensor[2] _t3A87#2 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3A85,_t3A50);
          real _t3A89#1 = TensorIndex<tensor[2],[0]>(_t3A87);
          real _t3A8B#4 = -0.e0;
          bool _t3A8D#1 = GT<real>(_t3A89,_t3A8B);
          real _t3A8F#1 = TensorIndex<tensor[2],[1]>(_t3A87);
          bool _t3A91#1 = GT<real>(_t3A8F,_t3A8B);
          bool _t3A93#1 = BAnd(_t3A8D,_t3A91);
          bool _t3A95#1 = BAnd(_t3A83,_t3A93);
          bool _t3A97#1 = BNot(_t3A95);
          if _t3A97 then goto ASSIGN3A9B else goto JOIN3AA4
        ASSIGN3A9B:  preds = [COND3A99]
          string _t3A9A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t3A9A);
          bool _t3A9D#1 = BNot(startsInside3A41);
          if _t3A9D then goto ASSIGN3AA1 else goto JOIN3AA3
        ASSIGN3AA1:  preds = [COND3A9F]
          string _t3AA0#1 = "Not because of an inside\n";
          Print<[string]>(_t3AA0);
          goto JOIN3AA3
        JOIN3AA3:  preds = [MASSIGN3AA2,COND3A9F]
          goto JOIN3AA4
        JOIN3AA4:  preds = [JOIN3AA3,COND3A99]
          Print<[string,tensor[2],string]>(_t3A5F,_t3A61,_t3A4B);
          Print<[string,tensor[2],string]>(_t3A70,_t3A76,_t3A4B);
          tensor[2] probe_l_53AA8#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[3],T5[2])<Σ(i1=0..2)<((T3_{i1,i0} * T4_{i1}))>(i1=0..2)>_{2} (_t3A57,_t3A55,_t3A50,femDofs3A64,basisResult3A65,_t3A50);
          tensor[2] op1_e3_l_73AA9#2 = λ(T0[2],T1[2])<(T1_{i0}) - (T0_{i0})>_{2} (_t3A76,probe_l_53AA8);
          real op1_e3_l_93AAA#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_73AA9,op1_e3_l_73AA9);
          real err3AA7#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_93AAA);
          real _t3AB7#1 = 0.1e-4;
          bool _t3AB9#1 = GT<real>(err3AA7,_t3AB7);
          if _t3AB9 then goto ASSIGN3ABD else goto ASSIGN3F47
        ASSIGN3ABD:  preds = [COND3ABB]
          string _t3ABC#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t3ABC,err3AA7,_t3A4B);
          goto JOIN3ABF
        JOIN3ABF:  preds = [MASSIGN3ABE,MASSIGN3F48]
          int _t3AC0#13 = 1;
          int steps3AC2#4 = IAdd(steps3A3D,_t3AC0);
          string _t3AC4#1 = "Orig:";
          string _t3AC6#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t3AC4,rayOrig3A25,_t3AC6,rayVec3A27,_t3A4B);
          real op1_e3_l_33ACA#1 = λ(T0[],T1[])<(T0) - (T1)> (camFarVsp3A29,rayN3A39);
          tensor[3] newDpos3AC9#2 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (rayVec3A27,op1_e3_l_33ACA);
          tensor[2] _t3ACD#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos3A3F);
          femData:Mesh _t3ACF#5 = ExtractFem<femData:Mesh,femData:MeshCell>(_t3A59);
          int _t3AD1#4 = ExtractFemItem<int,CellIndex(MeshCell)>(_t3A59);
          tensor[2] _t3AD3#7 = <tensor[2]>[_t3A8B,_t3A8B];
          real _t3AD5#1 = TensorIndex<tensor[3],[0]>(newDpos3AC9);
          real _t3AD7#1 = TensorIndex<tensor[3],[1]>(newDpos3AC9);
          tensor[2] _t3AD9#1 = <tensor[2]>[_t3AD5,_t3AD7];
          int _t3ADB#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos3A3F);
          real time3ADD#5 = +inf;
          int face3ADF#9 = -1;
          real faceTime3AE1#6 = -inf;
          real _t3AE3#14 = 0.e0;
          tensor[2] _t3AE5#5 = <tensor[2]>[_t3A79,_t3AE3];
          real _t3AE7#6 = -0.1e1;
          tensor[2] _t3AE9#3 = <tensor[2]>[_t3AE7,_t3A79];
          int[3] femIndicies3AFB#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3ACF,_t3AD1);
          tensor[3,2] femDofs3AFC#3 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3ACF,femIndicies3AFB);
          tensor[2,3] basisResult3AFD#3 = EvaluateBasis<BasisArray(2,3)>(_t3AD3);
          tensor[2,2] probe_l_93AEC#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i3=0..2)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..2)>_{2 2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2,2] op1_e3_l_103AED#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i2,i1}))>(i2=0..1)>_{2 2} (probe_l_93AEC);
          tensor[2] probe_l_113AEE#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] probe_l_123AEF#1 = λ(INT0,FEM(msh)1,T2[2],T3[3 2],T4[2 3],T5[2])<Σ(i2=0..2)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..2)>_{2} (_t3AD1,_t3ACF,_t3AD3,femDofs3AFC,basisResult3AFD,_t3AD3);
          tensor[2] op1_e3_l_133AF0#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (probe_l_123AEF);
          tensor[2,2] op1_e3_l_143AF1#1 = λ(T0[2 2])<Σ(i2=0..1)<((ϵ_{ii2,ii0} * T0_{i1,i2}))>(i2=0..1)>_{2 2} (op1_e3_l_103AED);
          real op1_e3_l_153AF2#1 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (probe_l_113AEE,op1_e3_l_133AF0);
          tensor[2,2] op1_e3_l_163AF3#1 = λ(T0[2 2],T1[])<(T0_{i0,i1}) / ( T1)>_{2 2} (op1_e3_l_143AF1,op1_e3_l_153AF2);
          tensor[2] op1_e3_l_173AF4#5 = λ(T0[2],T1[2 2])<Σ(i1=0..1)<((T1_{i0,i1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AD9,op1_e3_l_163AF3);
          tensor[2] op1_e3_l_183AF5#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE9);
          real op1_e3_l_193AF6#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183AF5);
          tensor[2] op1_e3_l_203AF7#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE9,op1_e3_l_193AF6);
          tensor[2] op1_e3_l_213AF8#1 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3AE5,_t3ACD);
          tensor[2] op1_e3_l_223AF9#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203AF7);
          real _t3AEB#6 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213AF8,op1_e3_l_223AF9);
          real _t3B19#3 = -0.1e-15;
          bool _t3B1B#1 = GTE<real>(_t3AEB,_t3B19);
          bool _t3B1D#1 = GT<real>(time3ADD,_t3AEB);
          real _t3B1F#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193AF6);
          real _t3B47#3 = 0.1e-20;
          bool _t3B49#1 = GTE<real>(_t3B1F,_t3B47);
          bool _t3B4B#1 = BAnd(_t3B1D,_t3B49);
          bool _t3B4D#2 = BAnd(_t3B1B,_t3B4B);
          if _t3B4D then goto ASSIGN3B51 else goto JOIN3B5C
        ASSIGN3B51:  preds = [COND3B4F]
          int _t3B50#2 = 0;
          bool _t3B52#1 = NEQ<int>(_t3ADB,_t3B50);
          if _t3B52 then goto JOIN3B58 else goto JOIN3B58
        JOIN3B58:  preds = [COND3B54,COND3B54]
          real faceTime3B55#1 = phi(faceTime3AE1,_t3AEB)
          int face3B56#1 = phi(_t3B50,face3ADF)
          real time3B57#1 = phi(_t3AEB,time3ADD)
          goto JOIN3B5C
        JOIN3B5C:  preds = [JOIN3B58,COND3B4F]
          real faceTime3B59#2 = phi(faceTime3B55,faceTime3AE1)
          int face3B5A#2 = phi(face3B56,face3ADF)
          real time3B5B#3 = phi(time3B57,time3ADD)
          tensor[2] _t3B5D#3 = <tensor[2]>[_t3AE3,_t3AE3];
          tensor[2] _t3B5F#3 = <tensor[2]>[_t3AE3,_t3A79];
          tensor[2] op1_e3_l_183B6B#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3B5F);
          real op1_e3_l_193B6C#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183B6B);
          tensor[2] op1_e3_l_203B6D#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3B5F,op1_e3_l_193B6C);
          tensor[2] op1_e3_l_213B6E#2 = λ(T0[2],T1[2])<(T0_{i0}) - (T1_{i0})>_{2} (_t3B5D,_t3ACD);
          tensor[2] op1_e3_l_223B6F#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203B6D);
          real _t3B61#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223B6F);
          bool _t3B8F#2 = GTE<real>(_t3B61,_t3B19);
          bool _t3B91#1 = GT<real>(time3B5B,_t3B61);
          real _t3B93#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193B6C);
          bool _t3BBB#2 = GTE<real>(_t3B93,_t3B47);
          bool _t3BBD#1 = BAnd(_t3B91,_t3BBB);
          bool _t3BBF#1 = BAnd(_t3B8F,_t3BBD);
          if _t3BBF then goto ASSIGN3BC3 else goto JOIN3BCC
        ASSIGN3BC3:  preds = [COND3BC1]
          bool _t3BC2#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3BC2 then goto JOIN3BC8 else goto JOIN3BC8
        JOIN3BC8:  preds = [COND3BC4,COND3BC4]
          real faceTime3BC5#1 = phi(faceTime3B59,_t3B61)
          int face3BC6#1 = phi(_t3AC0,face3B5A)
          real time3BC7#1 = phi(_t3B61,time3B5B)
          goto JOIN3BCC
        JOIN3BCC:  preds = [JOIN3BC8,COND3BC1]
          real faceTime3BC9#2 = phi(faceTime3BC5,faceTime3B59)
          int face3BCA#2 = phi(face3BC6,face3B5A)
          real time3BCB#3 = phi(time3BC7,time3B5B)
          tensor[2] op1_e3_l_183BD7#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (_t3AE5);
          real op1_e3_l_193BD8#2 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_173AF4,op1_e3_l_183BD7);
          tensor[2] op1_e3_l_203BD9#1 = λ(T0[2],T1[])<(T0_{i0}) / ( T1)>_{2} (_t3AE5,op1_e3_l_193BD8);
          tensor[2] op1_e3_l_223BDB#1 = λ(T0[2])<Σ(i1=0..1)<((ϵ_{ii0,ii1} * T0_{i1}))>(i1=0..1)>_{2} (op1_e3_l_203BD9);
          real _t3BCD#7 = λ(T0[2],T1[2])<Σ(i0=0..1)<((T0_{i0} * T1_{i0}))>(i0=0..1)> (op1_e3_l_213B6E,op1_e3_l_223BDB);
          bool _t3BFB#2 = GTE<real>(_t3BCD,_t3B19);
          bool _t3BFD#1 = GT<real>(time3BCB,_t3BCD);
          real _t3BFF#1 = λ(T0[])<Abs(T0)> (op1_e3_l_193BD8);
          bool _t3C27#2 = GTE<real>(_t3BFF,_t3B47);
          bool _t3C29#1 = BAnd(_t3BFD,_t3C27);
          bool _t3C2B#1 = BAnd(_t3BFB,_t3C29);
          if _t3C2B then goto ASSIGN3C2F else goto JOIN3C3A
        ASSIGN3C2F:  preds = [COND3C2D]
          int _t3C2E#2 = 2;
          bool _t3C30#1 = NEQ<int>(_t3ADB,_t3C2E);
          if _t3C30 then goto JOIN3C36 else goto JOIN3C36
        JOIN3C36:  preds = [COND3C32,COND3C32]
          real faceTime3C33#1 = phi(faceTime3BC9,_t3BCD)
          int face3C34#1 = phi(_t3C2E,face3BCA)
          real time3C35#1 = phi(_t3BCD,time3BCB)
          goto JOIN3C3A
        JOIN3C3A:  preds = [JOIN3C36,COND3C2D]
          real faceTime3C37#2 = phi(faceTime3C33,faceTime3BC9)
          int face3C38#2 = phi(face3C34,face3BCA)
          real time3C39#1 = phi(time3C35,time3BCB)
          bool _t3C3B#1 = NEQ<int>(face3C38,face3ADF);
          if _t3C3B then goto ASSIGN3C3F else goto ASSIGN3F3D
        ASSIGN3C3F:  preds = [COND3C3D]
          real _t3C3E#1 = Max<real>(time3C39,_t3AE3);
          real _t3C40#1 = IntToReal(face3C38);
          tensor[2] _t3C42#1 = <tensor[2]>[_t3C3E,_t3C40];
          goto JOIN3C46
        JOIN3C46:  preds = [ASSIGN3C43,JOIN3F42]
          tensor[2] _t3C44#1 = phi(_t3C42,_t3C45)
          real nextTime3C47#3 = TensorIndex<tensor[2],[0]>(_t3C44);
          real op1_e3_l_33C4A#1 = λ(T0[],T1[])<(T1) - (T0)> (rayN3A39,camFarVsp3A29);
          real op1_e3_l_43C4B#1 = λ(T0[],T1[])<(T0 * T1)> (nextTime3C47,op1_e3_l_33C4A);
          real _t3C49#1 = λ(T0[],T1[])<(T0 + T1)> (rayN3A39,op1_e3_l_43C4B);
          real _t3C4F#1 = Min<real>(camFarVsp3A29,_t3C49);
          real rayNp3C51#6 = Max<real>(rayN3A39,_t3C4F);
          string _t3C53#1 = "Next time:";
          Print<[string,real,string]>(_t3C53,nextTime3C47,_t3A4B);
          bool _t3C56#1 = GTE<real>(nextTime3C47,_t3AE3);
          if _t3C56 then goto ASSIGN3C5A else goto JOIN3E7E
        ASSIGN3C5A:  preds = [COND3C58]
          tensor[2] _t3C59#1 = <tensor[2]>[rayN3A39,rayNp3C51];
          tensor[2][] rayCellInter3C5B#3 = Append<tensor[2]>(rayCellInter3A31,_t3C59);
          int _t3C5D#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos3A3F);
          if _t3B4D then goto ASSIGN3CC1 else goto JOIN3CCC
        ASSIGN3CC1:  preds = [COND3CBF]
          int _t3CC0#2 = 0;
          bool _t3CC2#1 = NEQ<int>(_t3ADB,_t3CC0);
          if _t3CC2 then goto JOIN3CC8 else goto JOIN3CC8
        JOIN3CC8:  preds = [COND3CC4,COND3CC4]
          real faceTime3CC5#1 = phi(faceTime3AE1,_t3AEB)
          int face3CC6#1 = phi(_t3CC0,face3ADF)
          real time3CC7#1 = phi(_t3AEB,time3ADD)
          goto JOIN3CCC
        JOIN3CCC:  preds = [JOIN3CC8,COND3CBF]
          real faceTime3CC9#2 = phi(faceTime3CC5,faceTime3AE1)
          int face3CCA#2 = phi(face3CC6,face3ADF)
          real time3CCB#3 = phi(time3CC7,time3ADD)
          bool _t3CFD#1 = GT<real>(time3CCB,_t3B61);
          bool _t3D29#1 = BAnd(_t3CFD,_t3BBB);
          bool _t3D2B#1 = BAnd(_t3B8F,_t3D29);
          if _t3D2B then goto ASSIGN3D2F else goto JOIN3D38
        ASSIGN3D2F:  preds = [COND3D2D]
          bool _t3D2E#1 = NEQ<int>(_t3ADB,_t3AC0);
          if _t3D2E then goto JOIN3D34 else goto JOIN3D34
        JOIN3D34:  preds = [COND3D30,COND3D30]
          real faceTime3D31#1 = phi(faceTime3CC9,_t3B61)
          int face3D32#1 = phi(_t3AC0,face3CCA)
          real time3D33#1 = phi(_t3B61,time3CCB)
          goto JOIN3D38
        JOIN3D38:  preds = [JOIN3D34,COND3D2D]
          real faceTime3D35#2 = phi(faceTime3D31,faceTime3CC9)
          int face3D36#2 = phi(face3D32,face3CCA)
          real time3D37#3 = phi(time3D33,time3CCB)
          bool _t3D69#1 = GT<real>(time3D37,_t3BCD);
          bool _t3D95#1 = BAnd(_t3D69,_t3C27);
          bool _t3D97#1 = BAnd(_t3BFB,_t3D95);
          if _t3D97 then goto ASSIGN3D9B else goto JOIN3DA6
        ASSIGN3D9B:  preds = [COND3D99]
          int _t3D9A#2 = 2;
          bool _t3D9C#1 = NEQ<int>(_t3ADB,_t3D9A);
          if _t3D9C then goto JOIN3DA2 else goto JOIN3DA2
        JOIN3DA2:  preds = [COND3D9E,COND3D9E]
          real faceTime3D9F#1 = phi(faceTime3D35,_t3BCD)
          int face3DA0#1 = phi(_t3D9A,face3D36)
          real time3DA1#1 = phi(_t3BCD,time3D37)
          goto JOIN3DA6
        JOIN3DA6:  preds = [JOIN3DA2,COND3D99]
          real faceTime3DA3#2 = phi(faceTime3D9F,faceTime3D35)
          int face3DA4#2 = phi(face3DA0,face3D36)
          real time3DA5#1 = phi(time3DA1,time3D37)
          bool _t3DA7#1 = NEQ<int>(face3DA4,face3ADF);
          if _t3DA7 then goto ASSIGN3DAB else goto ASSIGN3F33
        ASSIGN3DAB:  preds = [COND3DA9]
          real _t3DAA#1 = Max<real>(time3DA5,_t3AE3);
          real _t3DAC#1 = IntToReal(face3DA4);
          tensor[2] _t3DAE#1 = <tensor[2]>[_t3DAA,_t3DAC];
          goto JOIN3DB2
        JOIN3DB2:  preds = [ASSIGN3DAF,JOIN3F38]
          tensor[2] _t3DB0#3 = phi(_t3DAE,_t3DB1)
          real _t3DB3#1 = TensorIndex<tensor[2],[1]>(_t3DB0);
          real t3DB6#1 = Floor<1>(_t3DB3);
          int _t3DB5#6 = RealToInt<1>(t3DB6);
          int[2] _t3DCB#2 = nextCell43DB9 (_t3DB5,_t3C5D,_t3A55);
          int _t3DCD#4 = 0;
          int _t3DCF#2 = Subscript<int[2]>(_t3DCB,_t3DCD);
          bool _t3DD1#1 = NEQ<int>(face3ADF,_t3DCF);
          if _t3DD1 then goto ASSIGN3DD5 else goto ASSIGN3F0A
        ASSIGN3DD5:  preds = [COND3DD3]
          tensor[2][3] _t3DD4#1 = <tensor[2][3]>{_t3AE5,_t3B5D,_t3B5D};
          int _t3DD6#3 = Subscript<int[2]>(_t3DCB,_t3AC0);
          tensor[2] _t3DD8#1 = Subscript<tensor[2][3]>(_t3DD4,_t3DD6);
          tensor[2][3] _t3DDA#1 = <tensor[2][3]>{_t3AE9,_t3B5F,_t3AE5};
          tensor[2] _t3DDC#1 = Subscript<tensor[2][3]>(_t3DDA,_t3DD6);
          real _t3DDE#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163DEA#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3DDE,op1_e3_l_173AF4);
          tensor[2] _t3DE0#2 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163DEA);
          real _t3E06#1 = TensorIndex<tensor[2],[0]>(_t3DE0);
          real _t3E08#1 = TensorIndex<tensor[2],[1]>(_t3DE0);
          real[2] _t3E0A#1 = <real[2]>{_t3E06,_t3E08};
          int[3] _t3E0C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E0E#1 = Subscript<int[3]>(_t3E0C,_t3DB5);
          real _t3E10#1 = Subscript<real[2]>(_t3E0A,_t3E0E);
          real[2] _t3E12#1 = <real[2]>{_t3A79,_t3AE3};
          real[2] _t3E14#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2] _t3E16#1 = <real[2]>{_t3AE3,_t3AE3};
          real[2][3] _t3E18#1 = <real[2][3]>{_t3E12,_t3E14,_t3E16};
          real[2] _t3E1A#1 = Subscript<real[2][3]>(_t3E18,_t3DB5);
          int[3] _t3E1C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E1E#1 = Subscript<int[3]>(_t3E1C,_t3DB5);
          real _t3E20#1 = Subscript<real[2]>(_t3E1A,_t3E1E);
          real[2] _t3E22#1 = <real[2]>{_t3AE7,_t3A79};
          real[2] _t3E24#1 = <real[2]>{_t3AE3,_t3A79};
          real[2] _t3E26#1 = <real[2]>{_t3A79,_t3AE3};
          real[2][3] _t3E28#1 = <real[2][3]>{_t3E22,_t3E24,_t3E26};
          real[2] _t3E2A#1 = Subscript<real[2][3]>(_t3E28,_t3DB5);
          int[3] _t3E2C#1 = <int[3]>{_t3AC0,_t3AC0,_t3DCD};
          int _t3E2E#1 = Subscript<int[3]>(_t3E2C,_t3DB5);
          real _t3E30#1 = Subscript<real[2]>(_t3E2A,_t3E2E);
          real op1_e3_l_53E33#1 = λ(T0[],T1[])<(T0) - (T1)> (_t3E10,_t3E20);
          real op1_e3_l_63E34#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t3E30,op1_e3_l_53E33);
          tensor[2] op1_e3_l_73E35#1 = λ(T0[2],T1[])<(T1 * T0_{i0})>_{2} (_t3DDC,op1_e3_l_63E34);
          tensor[2] _t3E32#1 = λ(T0[2],T1[2])<(T0_{i0} + T1_{i0})>_{2} (_t3DD8,op1_e3_l_73E35);
          femData:MeshPos _t3E3A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t3A55,_t3DCF,_t3E32,_t3DD6);
          goto JOIN3E3E
        JOIN3E3E:  preds = [ASSIGN3E3B,ASSIGN3F31]
          femData:MeshPos posp3E3C#5 = phi(_t3E3A,_t3E3D)
          bool _t3E3F#1 = GTE<real>(rayNp3C51,camFarVsp3A29);
          if _t3E3F then goto ASSIGN3E43 else goto JOIN3E51
        ASSIGN3E43:  preds = [COND3E41]
          string _t3E42#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t3E42,cellInter3A37,_t3A4B);
          tensor[3] op1_e3_l_33E46#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (camFarVsp3A29,rayVec3A27);
          tensor[3] _t3E45#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E46);
          tensor[3][] spaceInter3E49#1 = Append<tensor[3]>(spaceInter3A33,_t3E45);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E49;
          self.rayN = rayNp3C51;
          self.steps = steps3AC2;
          stabilize
          goto JOIN3E51
        JOIN3E51:  preds = [*STABILIZE3E4F,COND3E41]
          tensor[3][] spaceInter3E50#1 = phi(spaceInter3A33)
          tensor[3] op1_e3_l_33E53#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayNp3C51,rayVec3A27);
          tensor[3] _t3E52#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rayOrig3A25,op1_e3_l_33E53);
          tensor[3][] spaceInter3E56#2 = Append<tensor[3]>(spaceInter3E50,_t3E52);
          tensor[2] _t3E58#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp3E3C);
          tensor[2][] refSpaceInter3E5A#2 = Append<tensor[2]>(refSpaceInter3A35,_t3E58);
          bool _t3E5C#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp3E3C);
          if _t3E5C then goto ASSIGN3E60 else goto ASSIGN3F07
        ASSIGN3E60:  preds = [COND3E5E]
          string _t3E5F#1 = "Next cell:";
          femData:Mesh _t3E61#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E3C);
          int _t3E63#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E3C);
          femData:MeshCell _t3E65#3 = LoadFem<femData:MeshCell>(_t3E61,_t3E63);
          Print<[string,femData:MeshCell,string]>(_t3E5F,_t3E65,_t3A4B);
          femData:MeshCell[] cellInter3E68#1 = Append<femData:MeshCell>(cellInter3A37,_t3E65);
          self.rayCellInter = rayCellInter3C5B;
          self.spaceInter = spaceInter3E56;
          self.refSpaceInter = refSpaceInter3E5A;
          self.cellInter = cellInter3E68;
          self.rayN = rayNp3C51;
          self.currentCell = _t3E65;
          self.steps = steps3AC2;
          self.pos = posp3E3C;
          active
          goto JOIN3E76
        JOIN3E76:  preds = [*ACTIVE3E72,MASSIGN3F08]
          femData:MeshPos pos3E73#1 = phi(pos3A3F)
          femData:MeshCell currentCell3E74#1 = phi(currentCell3A3B)
          femData:MeshCell[] cellInter3E75#1 = phi(cellInter3A37)
          goto JOIN3E7E
        JOIN3E7E:  preds = [JOIN3E76,COND3C58]
          femData:MeshPos pos3E77#6 = phi(pos3E73,pos3A3F)
          femData:MeshCell currentCell3E78#1 = phi(currentCell3E74,currentCell3A3B)
          real rayN3E79#3 = phi(rayNp3C51,rayN3A39)
          femData:MeshCell[] cellInter3E7A#3 = phi(cellInter3E75,cellInter3A37)
          tensor[2][] refSpaceInter3E7B#2 = phi(refSpaceInter3E5A,refSpaceInter3A35)
          tensor[3][] spaceInter3E7C#2 = phi(spaceInter3E56,spaceInter3A33)
          tensor[2][] rayCellInter3E7D#3 = phi(rayCellInter3C5B,rayCellInter3A31)
          int _t3E7F#1 = 0;
          int _t3E81#1 = ISub(cellIntersects3A2F,_t3AC0);
          int[] _t3E83#1 = Range(_t3E7F,_t3E81);
        FOREACH3E86:  preds = [ASSIGN3E84,NEXT3EAF]
          foreach (i3E85 in _t3E83) on exit goto ASSIGN3EB1
            real estimate3E8F#4 = phi(camFarVsp3A29,estimate3EAC)
            int newIdx3EA7#7 = phi(face3ADF,newIdx3EAD)
          real t3E87#3 = Subscript<real[]>(normalizedTimes3A2D,i3E85);
          femData:MeshPos posp3E89#2 = Subscript<femData:MeshPos[]>(poses3A2B,i3E85);
          bool _t3E8B#1 = GTE<real>(t3E87,rayN3E79);
          if _t3E8B then goto ASSIGN3E90 else goto JOIN3EAE
        ASSIGN3E90:  preds = [COND3E8D]
          bool _t3E8E#1 = GTE<real>(estimate3E8F,t3E87);
          if _t3E8E then goto ASSIGN3E93 else goto JOIN3EAB
        ASSIGN3E93:  preds = [COND3E91]
          femData:Mesh _t3E92#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp3E89);
          int _t3E94#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp3E89);
          femData:MeshCell _t3E96#1 = LoadFem<femData:MeshCell>(_t3E92,_t3E94);
          femData:Mesh _t3E98#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int _t3E9A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:MeshCell _t3E9C#1 = LoadFem<femData:MeshCell>(_t3E98,_t3E9A);
          int _t3E9E#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E96);
          int _t3EA0#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t3E9C);
          bool _t3EA2#1 = NEQ<int>(_t3E9E,_t3EA0);
          if _t3EA2 then goto JOIN3EA8 else goto JOIN3EA8
        JOIN3EA8:  preds = [COND3EA4,COND3EA4]
          real estimate3EA5#1 = phi(t3E87,estimate3E8F)
          int newIdx3EA6#1 = phi(i3E85,newIdx3EA7)
          goto JOIN3EAB
        JOIN3EAB:  preds = [JOIN3EA8,COND3E91]
          real estimate3EA9#1 = phi(estimate3EA5,estimate3E8F)
          int newIdx3EAA#1 = phi(newIdx3EA6,newIdx3EA7)
          goto JOIN3EAE
        JOIN3EAE:  preds = [JOIN3EAB,COND3E8D]
          real estimate3EAC#1 = phi(estimate3EA9,estimate3E8F)
          int newIdx3EAD#1 = phi(newIdx3EAA,newIdx3EA7)
          goto FOREACH3E86
        ASSIGN3EB1:  preds = [FOREACH3E86]
          bool _t3EB0#1 = GT<int>(newIdx3EA7,face3ADF);
          if _t3EB0 then goto ASSIGN3EB4 else goto ASSIGN3EF2
        ASSIGN3EB4:  preds = [COND3EB2]
          string _t3EB3#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t3EB3);
          if startsInside3A41 then goto ASSIGN3EB8 else goto JOIN3EBA
        ASSIGN3EB8:  preds = [COND3EB6]
          string _t3EB7#1 = "because of an inside\n";
          Print<[string]>(_t3EB7);
          goto JOIN3EBA
        JOIN3EBA:  preds = [MASSIGN3EB9,COND3EB6]
          string _t3EBB#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t3EBB,rayVec3A27,_t3A4B);
          string _t3EBE#1 = "world pos was:";
          tensor[2] _t3EC0#4 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos3E77);
          int _t3EC2#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3E77);
          femData:Mesh _t3EC4#4 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3E77);
          int[3] femIndicies3EC8#1 = ExtractFemItem2<int,int[3],ExtractIndices(Mesh)>(_t3EC4,_t3EC2);
          tensor[3,2] femDofs3EC9#1 = ExtractFemItem2<int[3],tensor[3,2],ExtractDofsSeq(Mesh)>(_t3EC4,femIndicies3EC8);
          tensor[3] basisResult3ECA#1 = EvaluateBasis<BasisArray(3)>(_t3EC0);
          tensor[2] _t3EC6#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[2],T4[3 2],T5[3],T6[2])<Σ(i1=0..2)<((T4_{i1,i0} * T5_{i1}))>(i1=0..2)>_{2} (_t3EC2,_t3EC4,_t3EC4,_t3EC0,femDofs3EC9,basisResult3ECA,_t3EC0);
          Print<[string,tensor[2],string]>(_t3EBE,_t3EC6,_t3A4B);
          string _t3ED1#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t3ED1,_t3EC0,_t3A4B);
          string _t3ED4#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes3A2D,_t3ED4,newIdx3EA7,_t3A4B);
          string _t3ED7#1 = "Original time was:";
          Print<[string,real,string]>(_t3ED7,rayN3E79,_t3A4B);
          femData:MeshPos pos3EDA#3 = Subscript<femData:MeshPos[]>(poses3A2B,newIdx3EA7);
          femData:Mesh _t3EDC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos3EDA);
          int _t3EDE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos3EDA);
          femData:MeshCell currentCell3EE0#2 = LoadFem<femData:MeshCell>(_t3EDC,_t3EDE);
          femData:MeshCell[] cellInter3EE2#1 = Append<femData:MeshCell>(cellInter3E7A,currentCell3EE0);
          real rayN3EE4#1 = Subscript<real[]>(normalizedTimes3A2D,newIdx3EA7);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3EE2;
          self.rayN = rayN3EE4;
          self.currentCell = currentCell3EE0;
          self.steps = steps3AC2;
          self.pos = pos3EDA;
          active
          goto JOIN3EEF
        JOIN3EEF:  preds = [*ACTIVE3EEE,*STABILIZE3F05]
          unreachable
        ASSIGN3EF2:  preds = [COND3EB2]
          string _t3EF1#1 = "Enter times:";
          Print<[string,real[],string]>(_t3EF1,normalizedTimes3A2D,_t3A4B);
          string _t3EF4#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t3EF4,rayCellInter3E7D,_t3A4B);
          string _t3EF7#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t3EF7,cellInter3E7A,_t3A4B);
          string _t3EFA#1 = "End\n";
          Print<[string]>(_t3EFA);
          self.rayCellInter = rayCellInter3E7D;
          self.spaceInter = spaceInter3E7C;
          self.refSpaceInter = refSpaceInter3E7B;
          self.cellInter = cellInter3E7A;
          self.rayN = rayN3E79;
          self.currentCell = currentCell3E78;
          self.steps = steps3AC2;
          self.pos = pos3E77;
          stabilize
          goto JOIN3EEF
        ASSIGN3F07:  preds = [COND3E5E]
          string _t3F06#1 = "Invalid\n";
          Print<[string]>(_t3F06);
          goto JOIN3E76
        ASSIGN3F0A:  preds = [COND3DD3]
          real _t3F09#1 = TensorIndex<tensor[2],[0]>(_t3DB0);
          tensor[2] op1_e3_l_163F15#1 = λ(T0[],T1[2])<(T0 * T1_{i0})>_{2} (_t3F09,op1_e3_l_173AF4);
          tensor[2] _t3F0B#1 = λ(T0[2],T1[2])<(T1_{i0} + T0_{i0})>_{2} (_t3ACD,op1_e3_l_163F15);
          femData:MeshPos _t3E3D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t3A55,_t3F0B);
          goto JOIN3E3E
        ASSIGN3F33:  preds = [COND3DA9]
          bool _t3F32#1 = EQ<real>(faceTime3AE1,faceTime3DA3);
          if _t3F32 then goto ASSIGN3F36 else goto ASSIGN3F3A
        ASSIGN3F36:  preds = [COND3F34]
          tensor[2] _t3F35#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F38
        JOIN3F38:  preds = [ASSIGN3F36,ASSIGN3F3B]
          tensor[2] _t3DB1#1 = phi(_t3F35,_t3F37)
          goto JOIN3DB2
        ASSIGN3F3A:  preds = [COND3F34]
          real _t3F39#1 = IntToReal(_t3ADB);
          tensor[2] _t3F37#1 = <tensor[2]>[faceTime3DA3,_t3F39];
          goto JOIN3F38
        ASSIGN3F3D:  preds = [COND3C3D]
          bool _t3F3C#1 = EQ<real>(faceTime3AE1,faceTime3C37);
          if _t3F3C then goto ASSIGN3F40 else goto ASSIGN3F44
        ASSIGN3F40:  preds = [COND3F3E]
          tensor[2] _t3F3F#1 = <tensor[2]>[_t3AE7,_t3AE7];
          goto JOIN3F42
        JOIN3F42:  preds = [ASSIGN3F40,ASSIGN3F45]
          tensor[2] _t3C45#1 = phi(_t3F3F,_t3F41)
          goto JOIN3C46
        ASSIGN3F44:  preds = [COND3F3E]
          real _t3F43#1 = IntToReal(_t3ADB);
          tensor[2] _t3F41#1 = <tensor[2]>[faceTime3C37,_t3F43];
          goto JOIN3F42
        ASSIGN3F47:  preds = [COND3ABB]
          string _t3F46#1 = "Did not move off ray!\n";
          Print<[string]>(_t3F46);
          goto JOIN3ABF
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY3F4A:  preds = []
      int iresU3F4B#1 = globals.iresU2CA8;
      int iresV3F4D#1 = globals.iresV2CA9;
      int _t3F4F#2 = 0;
      int _t3F51#2 = 1;
      int _t3F53#1 = ISub(iresU3F4B,_t3F51);
      int[] _t3F55#1 = Range(_t3F4F,_t3F53);
    FOREACH3F58:  preds = [ASSIGN3F56,NEXT3F61]
      foreach (vi3F57 in _t3F55) on exit goto RETURN3F62
      int _t3F59#1 = ISub(iresV3F4D,_t3F51);
      int[] _t3F5B#1 = Range(_t3F4F,_t3F59);
    FOREACH3F5E:  preds = [ASSIGN3F5C,NEXT3F60]
      foreach (ui3F5D in _t3F5B) on exit goto NEXT3F61
      new ray(ui3F5D,vi3F57);
      goto FOREACH3F5E
    NEXT3F61:  preds = [FOREACH3F5E]
      goto FOREACH3F58
    RETURN3F62:  preds = [FOREACH3F58]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a3FC8 (a) = <no-default>
  input isoval3FC9 (isoval) = <default>
  input thick3FCA (thick) = <default>
  input camEye3FCB (camEye) = <default>
  input camAt3FCC (camAt) = <default>
  input camUp3FCD (camUp) = <default>
  input camFOV3FCE (camFOV) = <default>
  input iresU3FCF (iresU) = <default>
  input iresV3FD0 (iresV) = <default>
  input camNear3FD1 (camNear) = <default>
  input camFar3FD2 (camFar) = <default>
  input refStep3FD3 (refStep) = <default>
  input rayStep3FD4 (rayStep) = <default>
  input lightVsp3FD5 (lightVsp) = <default>
  input phongKa3FD6 (phongKa) = <default>
  input phongKd3FD7 (phongKd) = <default>
  input debug3FD8 (debug) = <default>
  input debugU3FD9 (debugU) = <default>
  input debugV3FDA (debugV) = <default>
  input eps3FDB (eps) = <default>
  global femData:MeshCell[] 0cell_a3FDC
  global real camNearVsp3FDD
  global real camFarVsp3FDE
  global tensor[3] camN3FDF
  global tensor[3] camU3FE0
  global tensor[3] camV3FE1
  global real camVmax3FE2
  global real camUmax3FE3
## functions
  function femData:MeshPos _msh_newtonInverse4281 (tensor[2] pos4282#3, int cellInt4283#2, femData:Mesh mesh4284#12) {
    ENTRY4285:  preds = []
      real _t4286#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn4288#3 = <tensor[2]>[_t4286,_t4286];
      int _t428A#1 = 0;
      int _t428C#1 = 16;
      int[] _t428E#1 = Range(_t428A,_t428C);
    FOREACH4291:  preds = [ASSIGN428F,NEXT44E8]
      foreach (itter4290 in _t428E) on exit goto ASSIGN44ED
        tensor[2] xn4408#3 = phi(xn4288,xn447C)
      int ilit4293#1 = 3;
      int mulRes4294#3 = IMul(cellInt4283,ilit4293);
      int ilit4295#1 = 0;
      int addRes4296#1 = IAdd(mulRes4294,ilit4295);
      int idx4297#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4296);
      int ilit4298#1 = 1;
      int addRes4299#1 = IAdd(mulRes4294,ilit4298);
      int idx429A#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4299);
      int ilit429B#1 = 2;
      int addRes429C#1 = IAdd(mulRes4294,ilit429B);
      int idx429D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes429C);
      int[3] seq429E#1 = <int[3]>{idx4297,idx429A,idx429D};
      int[3] femIndicies4292#3 = seq429E;
      int ilit42AD#4 = 0;
      int ilit42AE#4 = 2;
      int idx42AF#1 = Subscript<int>(femIndicies4292,ilit42AD);
      int mulRes42B0#2 = IMul(ilit42AE,idx42AF);
      int addRes42B1#1 = IAdd(ilit42AD,mulRes42B0);
      int ilit42B2#4 = 1;
      int addRes42B3#1 = IAdd(ilit42B2,mulRes42B0);
      real dof_load42B4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B1);
      real dof_load42B5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B3);
      tensor[2] interCons42B6#1 = <tensor[2]>[dof_load42B4,dof_load42B5];
      int idx42B7#1 = Subscript<int>(femIndicies4292,ilit42B2);
      int mulRes42B8#2 = IMul(ilit42AE,idx42B7);
      int addRes42B9#1 = IAdd(ilit42AD,mulRes42B8);
      int addRes42BA#1 = IAdd(ilit42B2,mulRes42B8);
      real dof_load42BB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B9);
      real dof_load42BC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42BA);
      tensor[2] interCons42BD#1 = <tensor[2]>[dof_load42BB,dof_load42BC];
      int idx42BE#1 = Subscript<int>(femIndicies4292,ilit42AE);
      int mulRes42BF#2 = IMul(ilit42AE,idx42BE);
      int addRes42C0#1 = IAdd(ilit42AD,mulRes42BF);
      int addRes42C1#1 = IAdd(ilit42B2,mulRes42BF);
      real dof_load42C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C0);
      real dof_load42C3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C1);
      tensor[2] interCons42C4#1 = <tensor[2]>[dof_load42C2,dof_load42C3];
      tensor[3,2] dofs42C5#1 = <tensor[3,2]>[interCons42B6,interCons42BD,interCons42C4];
      tensor[3,2] femDofs42AC#30 = dofs42C5;
      real varAcc42E1#0 = VIndex<2,0>(xn4288);
      real varAcc42E2#0 = VIndex<2,1>(xn4288);
      real coeff42E3#1 = -0.1e1;
      real one42E4#3 = 0.1e1;
      real prod42E5#2 = RMul(one42E4,one42E4);
      real basisEval42E6#2 = RMul(coeff42E3,prod42E5);
      real basisEval42E7#2 = RMul(one42E4,prod42E5);
      real basisEval42E8#2 = 0.e0;
      tensor[3] intermediateCons42E9#1 = <tensor[3]>[basisEval42E6,basisEval42E7,basisEval42E8];
      tensor[3] intermediateCons42EA#1 = <tensor[3]>[basisEval42E6,basisEval42E8,basisEval42E7];
      tensor[2,3] intermediateCons42EB#1 = <tensor[2,3]>[intermediateCons42E9,intermediateCons42EA];
      tensor[2,3] basisResult42E0#12 = intermediateCons42EB;
      real r42F9#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs42AC);
      real r42FA#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult42E0);
      real r42FB#1 = RMul(r42F9,r42FA);
      real r42FC#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs42AC);
      real r42FD#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult42E0);
      real r42FE#1 = RMul(r42FC,r42FD);
      real r42FF#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs42AC);
      real r4300#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult42E0);
      real r4301#1 = RMul(r42FF,r4300);
      real r4302#1 = RAdd(r42FB,r42FE);
      real r4303#1 = RAdd(r4302,r4301);
      real r4304#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult42E0);
      real r4305#1 = RMul(r42F9,r4304);
      real r4306#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult42E0);
      real r4307#1 = RMul(r42FC,r4306);
      real r4308#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult42E0);
      real r4309#1 = RMul(r42FF,r4308);
      real r430A#1 = RAdd(r4305,r4307);
      real r430B#1 = RAdd(r430A,r4309);
      tensor[2] tensor430C#1 = <tensor[2]>[r4303,r430B];
      real r430D#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs42AC);
      real r430E#1 = RMul(r430D,r42FA);
      real r430F#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs42AC);
      real r4310#1 = RMul(r430F,r42FD);
      real r4311#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs42AC);
      real r4312#1 = RMul(r4311,r4300);
      real r4313#1 = RAdd(r430E,r4310);
      real r4314#1 = RAdd(r4313,r4312);
      real r4315#1 = RMul(r430D,r4304);
      real r4316#1 = RMul(r430F,r4306);
      real r4317#1 = RMul(r4311,r4308);
      real r4318#1 = RAdd(r4315,r4316);
      real r4319#1 = RAdd(r4318,r4317);
      tensor[2] tensor431A#1 = <tensor[2]>[r4314,r4319];
      tensor[2,2] probe_l_1042F8#4 = <tensor[2,2]>[tensor430C,tensor431A];
      real realLit4340#4 = 0.e0;
      real r4341#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_1042F8);
      real r4342#1 = RMul(realLit4340,r4341);
      real realLit4343#2 = -0.1e1;
      real r4344#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_1042F8);
      real r4345#1 = RMul(realLit4343,r4344);
      real r4346#1 = RAdd(r4342,r4345);
      real r4347#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_1042F8);
      real r4348#1 = RMul(realLit4340,r4347);
      real r4349#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_1042F8);
      real r434A#1 = RMul(realLit4343,r4349);
      real r434B#1 = RAdd(r4348,r434A);
      tensor[2] tensor434C#1 = <tensor[2]>[r4346,r434B];
      real realLit434D#2 = 0.1e1;
      real r434E#1 = RMul(realLit434D,r4341);
      real r434F#1 = RMul(realLit4340,r4344);
      real r4350#1 = RAdd(r434E,r434F);
      real r4351#1 = RMul(realLit434D,r4347);
      real r4352#1 = RMul(realLit4340,r4349);
      real r4353#1 = RAdd(r4351,r4352);
      tensor[2] tensor4354#1 = <tensor[2]>[r4350,r4353];
      tensor[2,2] op1_e3_l_11433F#4 = <tensor[2,2]>[tensor434C,tensor4354];
      real r436D#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs42AC);
      real r436E#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult42E0);
      real r436F#1 = RMul(r436D,r436E);
      real r4370#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs42AC);
      real r4371#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult42E0);
      real r4372#1 = RMul(r4370,r4371);
      real r4373#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs42AC);
      real r4374#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult42E0);
      real r4375#1 = RMul(r4373,r4374);
      real r4376#1 = RAdd(r436F,r4372);
      real r4377#1 = RAdd(r4376,r4375);
      real r4378#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs42AC);
      real r4379#1 = RMul(r4378,r436E);
      real r437A#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs42AC);
      real r437B#1 = RMul(r437A,r4371);
      real r437C#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs42AC);
      real r437D#1 = RMul(r437C,r4374);
      real r437E#1 = RAdd(r4379,r437B);
      real r437F#1 = RAdd(r437E,r437D);
      tensor[2] probe_l_12436C#1 = <tensor[2]>[r4377,r437F];
      real r4396#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs42AC);
      real r4397#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult42E0);
      real r4398#1 = RMul(r4396,r4397);
      real r4399#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs42AC);
      real r439A#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult42E0);
      real r439B#1 = RMul(r4399,r439A);
      real r439C#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs42AC);
      real r439D#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult42E0);
      real r439E#1 = RMul(r439C,r439D);
      real r439F#1 = RAdd(r4398,r439B);
      real r43A0#1 = RAdd(r439F,r439E);
      real r43A1#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs42AC);
      real r43A2#1 = RMul(r43A1,r4397);
      real r43A3#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs42AC);
      real r43A4#1 = RMul(r43A3,r439A);
      real r43A5#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs42AC);
      real r43A6#1 = RMul(r43A5,r439D);
      real r43A7#1 = RAdd(r43A2,r43A4);
      real r43A8#1 = RAdd(r43A7,r43A6);
      tensor[2] probe_l_134395#2 = <tensor[2]>[r43A0,r43A8];
      real realLit43BF#2 = 0.e0;
      real r43C0#2 = TensorIndex<tensor[2],[0]>(probe_l_134395);
      real r43C1#1 = RMul(realLit43BF,r43C0);
      real realLit43C2#1 = 0.1e1;
      real r43C3#2 = TensorIndex<tensor[2],[1]>(probe_l_134395);
      real r43C4#1 = RMul(realLit43C2,r43C3);
      real r43C5#1 = RAdd(r43C1,r43C4);
      real realLit43C6#1 = -0.1e1;
      real r43C7#1 = RMul(realLit43C6,r43C0);
      real r43C8#1 = RMul(realLit43BF,r43C3);
      real r43C9#1 = RAdd(r43C7,r43C8);
      tensor[2] op1_e3_l_1443BE#1 = <tensor[2]>[r43C5,r43C9];
      real realLit43D8#4 = 0.e0;
      real r43D9#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_11433F);
      real r43DA#1 = RMul(realLit43D8,r43D9);
      real realLit43DB#2 = -0.1e1;
      real r43DC#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_11433F);
      real r43DD#1 = RMul(realLit43DB,r43DC);
      real r43DE#1 = RAdd(r43DA,r43DD);
      real r43DF#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_11433F);
      real r43E0#1 = RMul(realLit43D8,r43DF);
      real r43E1#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_11433F);
      real r43E2#1 = RMul(realLit43DB,r43E1);
      real r43E3#1 = RAdd(r43E0,r43E2);
      tensor[2] tensor43E4#1 = <tensor[2]>[r43DE,r43E3];
      real realLit43E5#2 = 0.1e1;
      real r43E6#1 = RMul(realLit43E5,r43D9);
      real r43E7#1 = RMul(realLit43D8,r43DC);
      real r43E8#1 = RAdd(r43E6,r43E7);
      real r43E9#1 = RMul(realLit43E5,r43DF);
      real r43EA#1 = RMul(realLit43D8,r43E1);
      real r43EB#1 = RAdd(r43E9,r43EA);
      tensor[2] tensor43EC#1 = <tensor[2]>[r43E8,r43EB];
      tensor[2,2] op1_e3_l_1543D7#4 = <tensor[2,2]>[tensor43E4,tensor43EC];
      real op1_e3_l_164404#4 = VDot<2>(probe_l_12436C,op1_e3_l_1443BE);
      real varAcc4409#1 = VIndex<2,0>(xn4408);
      real varAcc440A#1 = VIndex<2,1>(xn4408);
      real coeff440B#2 = -0.1e1;
      real iden440C#1 = varAcc4409;
      real one440D#7 = 0.1e1;
      real prod440E#2 = RMul(iden440C,one440D);
      real iden440F#1 = varAcc440A;
      real prod4410#2 = RMul(one440D,iden440F);
      real prod4411#1 = RMul(one440D,one440D);
      real mult4412#1 = RMul(one440D,prod4411);
      real mult4413#1 = RMul(coeff440B,prod4410);
      real mult4414#1 = RMul(coeff440B,prod440E);
      real sum4415#1 = RAdd(mult4413,mult4414);
      real sum4416#1 = RAdd(mult4412,sum4415);
      real intermediate4417#1 = sum4416;
      real basisEval4418#1 = RMul(one440D,prod440E);
      real basisEval4419#1 = RMul(one440D,prod4410);
      tensor[3] intermediateCons441A#1 = <tensor[3]>[intermediate4417,basisEval4418,basisEval4419];
      tensor[3] basisResult4407#6 = intermediateCons441A;
      real r442F#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs42AC);
      real r4430#2 = TensorIndex<tensor[3],[0]>(basisResult4407);
      real r4431#1 = RMul(r442F,r4430);
      real r4432#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs42AC);
      real r4433#2 = TensorIndex<tensor[3],[1]>(basisResult4407);
      real r4434#1 = RMul(r4432,r4433);
      real r4435#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs42AC);
      real r4436#2 = TensorIndex<tensor[3],[2]>(basisResult4407);
      real r4437#1 = RMul(r4435,r4436);
      real r4438#1 = RAdd(r4431,r4434);
      real r4439#1 = RAdd(r4438,r4437);
      real r443A#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs42AC);
      real r443B#1 = RMul(r443A,r4430);
      real r443C#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs42AC);
      real r443D#1 = RMul(r443C,r4433);
      real r443E#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs42AC);
      real r443F#1 = RMul(r443E,r4436);
      real r4440#1 = RAdd(r443B,r443D);
      real r4441#1 = RAdd(r4440,r443F);
      tensor[2] probe_l_17442E#1 = <tensor[2]>[r4439,r4441];
      real r4458#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_1543D7);
      real r4459#1 = RDiv(r4458,op1_e3_l_164404);
      real r445A#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_1543D7);
      real r445B#1 = RDiv(r445A,op1_e3_l_164404);
      tensor[2] tensor445C#1 = <tensor[2]>[r4459,r445B];
      real r445D#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_1543D7);
      real r445E#1 = RDiv(r445D,op1_e3_l_164404);
      real r445F#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_1543D7);
      real r4460#1 = RDiv(r445F,op1_e3_l_164404);
      tensor[2] tensor4461#1 = <tensor[2]>[r445E,r4460];
      tensor[2,2] op1_e3_l_184457#4 = <tensor[2,2]>[tensor445C,tensor4461];
      tensor[2] op1_e3_l_19446E#2 = VSub<2>(probe_l_17442E,pos4282);
      tensor[2] projParam4472#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_184457);
      real vdot4473#1 = VDot<2>(projParam4472,op1_e3_l_19446E);
      tensor[2] projParam4474#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_184457);
      real vdot4475#1 = VDot<2>(projParam4474,op1_e3_l_19446E);
      tensor[2] op1_e3_l_204471#1 = <tensor[2]>[vdot4473,vdot4475];
      tensor[2] xn447C#4 = VSub<2>(xn4408,op1_e3_l_204471);
      real _t447F#2 = 0.1e-7;
      real _t4481#1 = RMul(_t447F,_t447F);
      real r4485#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs42AC);
      real r4486#2 = TensorIndex<tensor[3],[0]>(basisResult4407);
      real r4487#1 = RMul(r4485,r4486);
      real r4488#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs42AC);
      real r4489#2 = TensorIndex<tensor[3],[1]>(basisResult4407);
      real r448A#1 = RMul(r4488,r4489);
      real r448B#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs42AC);
      real r448C#2 = TensorIndex<tensor[3],[2]>(basisResult4407);
      real r448D#1 = RMul(r448B,r448C);
      real r448E#1 = RAdd(r4487,r448A);
      real r448F#1 = RAdd(r448E,r448D);
      real r4490#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs42AC);
      real r4491#1 = RMul(r4490,r4486);
      real r4492#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs42AC);
      real r4493#1 = RMul(r4492,r4489);
      real r4494#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs42AC);
      real r4495#1 = RMul(r4494,r448C);
      real r4496#1 = RAdd(r4491,r4493);
      real r4497#1 = RAdd(r4496,r4495);
      tensor[2] probe_l_254484#1 = <tensor[2]>[r448F,r4497];
      tensor[2] op1_e3_l_2744AD#2 = VSub<2>(probe_l_254484,pos4282);
      tensor[2] projParam44B1#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_184457);
      real vdot44B2#1 = VDot<2>(projParam44B1,op1_e3_l_2744AD);
      tensor[2] projParam44B3#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_184457);
      real vdot44B4#1 = VDot<2>(projParam44B3,op1_e3_l_2744AD);
      tensor[2] op1_e3_l_3844B0#2 = <tensor[2]>[vdot44B2,vdot44B4];
      real _t44BB#1 = VDot<2>(op1_e3_l_3844B0,op1_e3_l_3844B0);
      bool _t44BE#1 = GTE<real>(_t4481,_t44BB);
      if _t44BE then goto ASSIGN44C2 else goto JOIN44E7
    ASSIGN44C2:  preds = [COND44C0]
      real _t44C1#3 = 0.1e1;
      real _t44C3#3 = 0.1e-8;
      real _t44C5#1 = RAdd(_t44C1,_t44C3);
      tensor[2] _t44C8#1 = <tensor[2]>[_t44C1,_t44C1];
      real _t44CA#1 = VDot<2>(_t44C8,xn447C);
      bool _t44CD#1 = GT<real>(_t44C5,_t44CA);
      tensor[2] _t44CF#1 = <tensor[2]>[_t44C3,_t44C3];
      tensor[2] _t44D1#2 = VAdd<2>(_t44CF,xn447C);
      real _t44D4#1 = VIndex<2,0>(_t44D1);
      real _t44D6#2 = -0.e0;
      bool _t44D8#1 = GT<real>(_t44D4,_t44D6);
      real _t44DA#1 = VIndex<2,1>(_t44D1);
      bool _t44DC#1 = GT<real>(_t44DA,_t44D6);
      bool _t44DE#1 = BAnd(_t44D8,_t44DC);
      bool _t44E0#1 = BAnd(_t44CD,_t44DE);
      if _t44E0 then goto ASSIGN44E4 else goto ASSIGN44EA
    ASSIGN44E4:  preds = [COND44E2]
      femData:MeshPos _t44E3#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh4284,cellInt4283,xn447C,pos4282);
      return _t44E3
      goto JOIN44E6
    JOIN44E6:  preds = [*RETURN(_t44E3)44E5,*RETURN(_t44E9)44EB]
      goto JOIN44E7
    JOIN44E7:  preds = [*JOIN44E6,COND44C0]
      goto FOREACH4291
    ASSIGN44EA:  preds = [COND44E2]
      femData:MeshPos _t44E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44E9
      goto JOIN44E6
    ASSIGN44ED:  preds = [FOREACH4291]
      femData:MeshPos _t44EC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44EC
}
  function int[2] nextCell45006 (int faceIdx5007#1, int cell5008#1, femData:Mesh mesh5009#1) {
    ENTRY500A:  preds = []
      int _t500B#1 = 6;
      int _t500D#1 = IMul(cell5008,_t500B);
      int _t500F#1 = 2;
      int _t5011#1 = IMul(faceIdx5007,_t500F);
      int _t5013#1 = IAdd(_t500D,_t5011);
      int[2] _t5015#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh5009,_t5013);
      return _t5015
}
## input initialization
  ENTRY3FE4:  preds = []
    real isoval3FE5#1 = 0.2e0;
    globals.isoval3FC9 = isoval3FE5;
    real thick3FE8#1 = 0.7e-1;
    globals.thick3FCA = thick3FE8;
    real _t3FEB#2 = 0.3e1;
    real _t3FED#1 = -0.3e1;
    tensor[3] camEye3FEF#1 = <tensor[3]>[_t3FEB,_t3FED,_t3FEB];
    globals.camEye3FCB = camEye3FEF;
    real _t3FF2#3 = 0.5e0;
    tensor[3] camAt3FF4#1 = <tensor[3]>[_t3FF2,_t3FF2,_t3FF2];
    globals.camAt3FCC = camAt3FF4;
    real _t3FF7#2 = 0.e0;
    real _t3FF9#2 = 0.1e1;
    tensor[3] camUp3FFB#2 = <tensor[3]>[_t3FF7,_t3FF7,_t3FF9];
    globals.camUp3FCD = camUp3FFB;
    real camFOV3FFE#1 = 0.137e2;
    globals.camFOV3FCE = camFOV3FFE;
    int iresU4001#2 = 10;
    globals.iresU3FCF = iresU4001;
    globals.iresV3FD0 = iresU4001;
    real camNear4005#1 = -0.2e1;
    globals.camNear3FD1 = camNear4005;
    real camFar4008#1 = 0.5e1;
    globals.camFar3FD2 = camFar4008;
    globals.refStep3FD3 = _t3FF9;
    real rayStep400C#1 = 0.1e-1;
    globals.rayStep3FD4 = rayStep400C;
    globals.lightVsp3FD5 = camUp3FFB;
    real phongKa4010#1 = 0.1e0;
    globals.phongKa3FD6 = phongKa4010;
    real phongKd4013#1 = 0.9e0;
    globals.phongKd3FD7 = phongKd4013;
    bool debug4016#1 = false;
    globals.debug3FD8 = debug4016;
    int debugU4019#1 = 8;
    globals.debugU3FD9 = debugU4019;
    int debugV401C#1 = 2;
    globals.debugV3FDA = debugV401C;
    real eps401F#1 = 0.1e-7;
    globals.eps3FDB = eps401F;
    return
## global-variable initialization
  ENTRY4023:  preds = []
    femData:Mesh a4024#2 = globals.a3FC8;
    tensor[3] camEye4026#1 = globals.camEye3FCB;
    tensor[3] camAt4028#1 = globals.camAt3FCC;
    tensor[3] camUp402A#3 = globals.camUp3FCD;
    real camFOV402C#1 = globals.camFOV3FCE;
    int iresU402E#1 = globals.iresU3FCF;
    int iresV4030#1 = globals.iresV3FD0;
    real camNear4032#1 = globals.camNear3FD1;
    real camFar4034#1 = globals.camFar3FD2;
    int _t4036#1 = 0;
    int _t4038#1 = 1;
    int _t403A#1 = ExtractFemItem<int,NumCell(Mesh)>(a4024);
    int _t403C#1 = ISub(_t403A,_t4038);
    int[] _t403E#1 = Range(_t4036,_t403C);
    femData:MeshCell[] _t4040#1 = <femData:MeshCell[]>{};
  FOREACH4043:  preds = [ASSIGN4041,NEXT4049]
    foreach (_t4042 in _t403E) on exit goto GASSIGN404A
      femData:MeshCell[] _t4047#2 = phi(_t4040,_t4046)
    femData:MeshCell _t4044#1 = LoadFem<femData:MeshCell>(a4024,_t4042);
    femData:MeshCell[] _t4046#1 = Append<femData:MeshCell>(_t4047,_t4044);
    goto FOREACH4043
  GASSIGN404A:  preds = [FOREACH4043]
    globals.0cell_a3FDC = _t4047;
    tensor[3] op1_e3_l_3404B#9 = VSub<3>(camAt4028,camEye4026);
    real op1_e3_l_5404E#1 = VDot<3>(op1_e3_l_3404B,op1_e3_l_3404B);
    real op1_e3_l_64051#5 = Sqrt(op1_e3_l_5404E);
    real camNearVsp4054#1 = RAdd(camNear4032,op1_e3_l_64051);
    globals.camNearVsp3FDD = camNearVsp4054;
    real camFarVsp4058#1 = RAdd(camFar4034,op1_e3_l_64051);
    globals.camFarVsp3FDE = camFarVsp4058;
    real realLit405D#1 = 0.1e1;
    real op1_e3_l_9405C#6 = RDiv(realLit405D,op1_e3_l_64051);
    tensor[3] camN4061#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_3404B);
    globals.camN3FDF = camN4061;
    real realLit4066#3 = 0.e0;
    real r4067#3 = TensorIndex<tensor[3],[0]>(camUp402A);
    real r4068#3 = RMul(realLit4066,r4067);
    real r4069#3 = TensorIndex<tensor[3],[1]>(camUp402A);
    real r406A#3 = RMul(realLit4066,r4069);
    real r406B#3 = TensorIndex<tensor[3],[2]>(camUp402A);
    real r406C#5 = RMul(realLit4066,r406B);
    real r406D#3 = RAdd(r4068,r406A);
    real r406E#3 = RAdd(r406D,r406C);
    real realLit406F#3 = 0.1e1;
    real r4070#1 = RMul(realLit406F,r406B);
    real r4071#1 = RAdd(r406D,r4070);
    real realLit4072#3 = -0.1e1;
    real r4073#1 = RMul(realLit4072,r4069);
    real r4074#1 = RAdd(r4068,r4073);
    real r4075#1 = RAdd(r4074,r406C);
    tensor[3] tensor4076#1 = <tensor[3]>[r406E,r4071,r4075];
    real r4077#1 = RMul(realLit4072,r406B);
    real r4078#1 = RAdd(r406D,r4077);
    real r4079#1 = RMul(realLit406F,r4067);
    real r407A#1 = RAdd(r4079,r406A);
    real r407B#1 = RAdd(r407A,r406C);
    tensor[3] tensor407C#1 = <tensor[3]>[r4078,r406E,r407B];
    real r407D#1 = RMul(realLit406F,r4069);
    real r407E#1 = RAdd(r4068,r407D);
    real r407F#1 = RAdd(r407E,r406C);
    real r4080#1 = RMul(realLit4072,r4067);
    real r4081#1 = RAdd(r4080,r406A);
    real r4082#1 = RAdd(r4081,r406C);
    tensor[3] tensor4083#1 = <tensor[3]>[r407F,r4082,r406E];
    tensor[3,3] op1_e3_l_154065#3 = <tensor[3,3]>[tensor4076,tensor407C,tensor4083];
    tensor[3] projParam40A5#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_154065);
    real vdot40A6#1 = VDot<3>(op1_e3_l_3404B,projParam40A5);
    tensor[3] projParam40A7#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_154065);
    real vdot40A8#1 = VDot<3>(op1_e3_l_3404B,projParam40A7);
    tensor[3] projParam40A9#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_154065);
    real vdot40AA#1 = VDot<3>(op1_e3_l_3404B,projParam40A9);
    tensor[3] op1_e3_l_1740A4#6 = <tensor[3]>[vdot40A6,vdot40A8,vdot40AA];
    real op1_e3_l_3440B3#1 = VDot<3>(op1_e3_l_1740A4,op1_e3_l_1740A4);
    real r40B7#1 = RMul(op1_e3_l_9405C,op1_e3_l_9405C);
    real op1_e3_l_3540B6#1 = RMul(r40B7,op1_e3_l_3440B3);
    real op1_e3_l_3640BB#1 = Sqrt(op1_e3_l_3540B6);
    tensor[3] op1_e3_l_3740BE#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_1740A4);
    real realLit40C2#1 = 0.1e1;
    real op1_e3_l_3840C1#2 = RDiv(realLit40C2,op1_e3_l_3640BB);
    tensor[3] camU40C6#1 = VScale<3>(op1_e3_l_3840C1,op1_e3_l_3740BE);
    globals.camU3FE0 = camU40C6;
    real realLit40CB#3 = 0.e0;
    real r40CC#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_3404B);
    real r40CD#3 = RMul(realLit40CB,r40CC);
    real r40CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_3404B);
    real r40CF#3 = RMul(realLit40CB,r40CE);
    real r40D0#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_3404B);
    real r40D1#5 = RMul(realLit40CB,r40D0);
    real r40D2#3 = RAdd(r40CD,r40CF);
    real r40D3#3 = RAdd(r40D2,r40D1);
    real realLit40D4#3 = 0.1e1;
    real r40D5#1 = RMul(realLit40D4,r40D0);
    real r40D6#1 = RAdd(r40D2,r40D5);
    real realLit40D7#3 = -0.1e1;
    real r40D8#1 = RMul(realLit40D7,r40CE);
    real r40D9#1 = RAdd(r40CD,r40D8);
    real r40DA#1 = RAdd(r40D9,r40D1);
    tensor[3] tensor40DB#1 = <tensor[3]>[r40D3,r40D6,r40DA];
    real r40DC#1 = RMul(realLit40D7,r40D0);
    real r40DD#1 = RAdd(r40D2,r40DC);
    real r40DE#1 = RMul(realLit40D4,r40CC);
    real r40DF#1 = RAdd(r40DE,r40CF);
    real r40E0#1 = RAdd(r40DF,r40D1);
    tensor[3] tensor40E1#1 = <tensor[3]>[r40DD,r40D3,r40E0];
    real r40E2#1 = RMul(realLit40D4,r40CE);
    real r40E3#1 = RAdd(r40CD,r40E2);
    real r40E4#1 = RAdd(r40E3,r40D1);
    real r40E5#1 = RMul(realLit40D7,r40CC);
    real r40E6#1 = RAdd(r40E5,r40CF);
    real r40E7#1 = RAdd(r40E6,r40D1);
    tensor[3] tensor40E8#1 = <tensor[3]>[r40E4,r40E7,r40D3];
    tensor[3,3] op1_e3_l_4540CA#3 = <tensor[3,3]>[tensor40DB,tensor40E1,tensor40E8];
    tensor[3] projParam410A#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_4540CA);
    real vdot410B#1 = VDot<3>(op1_e3_l_1740A4,projParam410A);
    tensor[3] projParam410C#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_4540CA);
    real vdot410D#1 = VDot<3>(op1_e3_l_1740A4,projParam410C);
    tensor[3] projParam410E#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_4540CA);
    real vdot410F#1 = VDot<3>(op1_e3_l_1740A4,projParam410E);
    tensor[3] op1_e3_l_474109#1 = <tensor[3]>[vdot410B,vdot410D,vdot410F];
    tensor[3] op1_e3_l_504118#3 = VScale<3>(op1_e3_l_9405C,op1_e3_l_474109);
    real r411C#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_504118);
    real r411D#3 = RMul(op1_e3_l_3840C1,op1_e3_l_9405C);
    real r411E#1 = RMul(r411D,r411C);
    real r411F#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_504118);
    real r4120#1 = RMul(r411D,r411F);
    real r4121#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_504118);
    real r4122#1 = RMul(r411D,r4121);
    tensor[3] camV411B#1 = <tensor[3]>[r411E,r4120,r4122];
    globals.camV3FE1 = camV411B;
    real _t412D#1 = 0.314159265358979323846264338327950288e1;
    real _t412F#1 = 0.36e3;
    real op1_e3_l_54131#1 = RMul(camFOV402C,_t412D);
    real op1_e3_l_64134#1 = RDiv(op1_e3_l_54131,_t412F);
    real op1_e3_l_104137#2 = Tan(op1_e3_l_64134);
    real camVmax413A#1 = RMul(op1_e3_l_104137,op1_e3_l_64051);
    globals.camVmax3FE2 = camVmax413A;
    real _t413E#1 = IntToReal(iresU402E);
    real _t4140#1 = IntToReal(iresV4030);
    real r4143#1 = RMul(_t413E,op1_e3_l_104137);
    real op1_e3_l_144142#1 = RMul(r4143,op1_e3_l_64051);
    real camUmax4147#1 = RDiv(op1_e3_l_144142,_t4140);
    globals.camUmax3FE3 = camUmax4147;
    return
## strand
  strand ray (int ui414C#2, int vi414D#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY4169:  preds = []
        femData:Mesh a416A#1 = globals.a3FC8;
        femData:MeshCell[] 0cell_a416C#1 = globals.0cell_a3FDC;
        tensor[3] camEye416E#3 = globals.camEye3FCB;
        int iresU4170#1 = globals.iresU3FCF;
        int iresV4172#1 = globals.iresV3FD0;
        real camNearVsp4174#2 = globals.camNearVsp3FDD;
        real camFarVsp4176#2 = globals.camFarVsp3FDE;
        tensor[3] camN4178#1 = globals.camN3FDF;
        tensor[3] camU417A#1 = globals.camU3FE0;
        tensor[3] camV417C#1 = globals.camV3FE1;
        real camVmax417E#2 = globals.camVmax3FE2;
        real camUmax4180#2 = globals.camUmax3FE3;
        real _t4182#5 = -0.5e0;
        real _t4184#1 = IntToReal(ui414C);
        real _t4186#1 = IntToReal(iresU4170);
        real _t4188#3 = 0.5e0;
        real op1_e3_l_6418A#1 = RSub(_t4186,_t4188);
        real op1_e3_l_7418D#1 = RSub(_t4184,_t4182);
        real op1_e3_l_84190#1 = RSub(op1_e3_l_6418A,_t4182);
        real op1_e3_l_94193#2 = RNeg(camUmax4180);
        real op1_e3_l_104196#1 = RDiv(op1_e3_l_7418D,op1_e3_l_84190);
        real op1_e3_l_114199#1 = RSub(camUmax4180,op1_e3_l_94193);
        real op1_e3_l_13419C#1 = RMul(op1_e3_l_104196,op1_e3_l_114199);
        real rayU419F#2 = RAdd(op1_e3_l_94193,op1_e3_l_13419C);
        real _t41A2#1 = IntToReal(vi414D);
        real _t41A4#2 = IntToReal(iresV4172);
        real op1_e3_l_641A6#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_741A9#2 = RSub(_t41A2,_t4182);
        real op1_e3_l_841AC#1 = RSub(op1_e3_l_641A6,_t4182);
        real op1_e3_l_941AF#3 = RNeg(camVmax417E);
        real op1_e3_l_1041B2#1 = RDiv(op1_e3_l_741A9,op1_e3_l_841AC);
        real op1_e3_l_1141B5#2 = RSub(camVmax417E,op1_e3_l_941AF);
        real op1_e3_l_1341B8#1 = RMul(op1_e3_l_1041B2,op1_e3_l_1141B5);
        real rayV41BB#1 = RAdd(op1_e3_l_941AF,op1_e3_l_1341B8);
        real op1_e3_l_2341BE#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_2541C1#1 = RSub(op1_e3_l_2341BE,_t4182);
        real op1_e3_l_2741C4#1 = RDiv(op1_e3_l_741A9,op1_e3_l_2541C1);
        real op1_e3_l_3041C7#1 = RMul(op1_e3_l_2741C4,op1_e3_l_1141B5);
        real op1_e3_l_3141CA#1 = RAdd(op1_e3_l_941AF,op1_e3_l_3041C7);
        tensor[3] op1_e3_l_3241CD#4 = VScale<3>(rayU419F,camU417A);
        tensor[3] op1_e3_l_3341D0#4 = VScale<3>(op1_e3_l_3141CA,camV417C);
        tensor[3] UV41D3#1 = VAdd<3>(op1_e3_l_3241CD,op1_e3_l_3341D0);
        tensor[3] v41D7#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] rayOrig41D6#1 = VAdd<3>(v41D7,op1_e3_l_3341D0);
        real _t41DB#4 = 0.e0;
        tensor[3] _t41DD#1 = <tensor[3]>[_t41DB,_t41DB,_t41DB];
        tensor[3] rayVec41DF#3 = VAdd<3>(camN4178,_t41DD);
        tensor[3] op1_e3_l_3941E2#1 = VScale<3>(camNearVsp4174,rayVec41DF);
        tensor[3] v41E6#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] v41E7#1 = VAdd<3>(v41E6,op1_e3_l_3341D0);
        tensor[3] rayStart41E5#4 = VAdd<3>(v41E7,op1_e3_l_3941E2);
        real _t41EC#1 = VIndex<3,0>(rayStart41E5);
        real _t41EE#1 = VIndex<3,1>(rayStart41E5);
        tensor[2] rayStartProj41F0#1 = <tensor[2]>[_t41EC,_t41EE];
        tensor[3] op1_e3_l_3941F2#1 = VScale<3>(camFarVsp4176,rayVec41DF);
        tensor[3] v41F6#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] v41F7#1 = VAdd<3>(v41F6,op1_e3_l_3341D0);
        tensor[3] rayEnd41F5#2 = VAdd<3>(v41F7,op1_e3_l_3941F2);
        tensor[3] dpos41FC#3 = VSub<3>(rayEnd41F5,rayStart41E5);
        real _t41FF#1 = VIndex<3,0>(dpos41FC);
        real _t4201#1 = VIndex<3,1>(dpos41FC);
        tensor[2] dposProj4203#1 = <tensor[2]>[_t41FF,_t4201];
        femData:MeshPos[0] _t4205#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t4207#1 = MkDynamic<femData:MeshPos,0>(_t4205);
        real[0] _t4209#1 = <real[0]>{};
        real[] _t420B#1 = MkDynamic<real,0>(_t4209);
        int cellIntersects420D#3 = 0;
        tensor[2][0] _t420F#1 = <tensor[2][0]>{};
        tensor[2][] _t4211#1 = MkDynamic<tensor[2],0>(_t420F);
        tensor[3][0] _t4213#1 = <tensor[3][0]>{};
        tensor[3][] _t4215#1 = MkDynamic<tensor[3],0>(_t4213);
        tensor[2][0] _t4217#1 = <tensor[2][0]>{};
        tensor[2][] _t4219#1 = MkDynamic<tensor[2],0>(_t4217);
        femData:MeshCell[0] _t421B#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t421D#1 = MkDynamic<femData:MeshCell,0>(_t421B);
        int currentCellInt421F#1 = -1;
        femData:MeshCell currentCell4221#1 = Subscript<femData:MeshCell[]>(0cell_a416C,cellIntersects420D);
        femData:MeshPos pos4223#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a416A);
        bool startsInside4225#1 = false;
        self.rayU = rayU419F;
        self.rayV = rayV41BB;
        self.UV = UV41D3;
        self.rayOrig = rayOrig41D6;
        self.rayVec = rayVec41DF;
        self.camNearVsp = camNearVsp4174;
        self.camFarVsp = camFarVsp4176;
        self.rayStart = rayStart41E5;
        self.rayStartProj = rayStartProj41F0;
        self.rayEnd = rayEnd41F5;
        self.dpos = dpos41FC;
        self.dposProj = dposProj4203;
        self.poses = _t4207;
        self.normalizedTimes = _t420B;
        self.cellIntersects = cellIntersects420D;
        self.rayCellInter = _t4211;
        self.spaceInter = _t4215;
        self.refSpaceInter = _t4219;
        self.cellInter = _t421D;
        self.currentCellInt = currentCellInt421F;
        self.rayN = _t41DB;
        self.currentCell = currentCell4221;
        self.steps = cellIntersects420D;
        self.pos = pos4223;
        self.startsInside = startsInside4225;
        self.ui = ui414C;
        self.vi = vi414D;
        return
    end state init
    method start
        ENTRY4243:  preds = []
          femData:MeshCell[] 0cell_a4244#1 = globals.0cell_a3FDC;
          bool debug4246#1 = globals.debug3FD8;
          int debugU4248#1 = globals.debugU3FD9;
          int debugV424A#1 = globals.debugV3FDA;
          tensor[3] rayOrig424C#2 = self.rayOrig;
          tensor[3] rayVec424E#1 = self.rayVec;
          real camNearVsp4250#5 = self.camNearVsp;
          real camFarVsp4252#3 = self.camFarVsp;
          tensor[2] rayStartProj4254#3 = self.rayStartProj;
          tensor[2] dposProj4256#3 = self.dposProj;
          femData:MeshPos[] poses4258#1 = self.poses;
          real[] normalizedTimes425A#1 = self.normalizedTimes;
          int cellIntersects425C#1 = self.cellIntersects;
          tensor[3][] spaceInter425E#1 = self.spaceInter;
          int currentCellInt4260#1 = self.currentCellInt;
          bool startsInside4262#2 = self.startsInside;
          int ui4264#2 = self.ui;
          int vi4266#2 = self.vi;
          bool _t4268#1 = NEQ<int>(ui4264,debugU4248);
          if _t4268 then goto ASSIGN426C else goto ASSIGN4B4B
        ASSIGN426C:  preds = [COND426A]
          bool _t426B#1 = true;
          goto JOIN426F
        JOIN426F:  preds = [ASSIGN426C,ASSIGN4B4B]
          bool _t426D#1 = phi(_t426B,_t426E)
          if _t426D then goto COND4271 else goto JOIN4274
        COND4271:  preds = [COND4270]
          if debug4246 then goto STABILIZE4272 else goto JOIN4273
        STABILIZE4272:  preds = [COND4271]
          stabilize
          goto JOIN4273
        JOIN4273:  preds = [*STABILIZE4272,COND4271]
          goto JOIN4274
        JOIN4274:  preds = [JOIN4273,COND4270]
        FOREACH4276:  preds = [JOIN4274,NEXT4513]
          foreach (c4275 in 0cell_a4244) on exit goto ASSIGN4AE9
            real startTime4AD7#3 = phi(camFarVsp4252,startTime4507)
            bool startsInside4AE7#2 = phi(startsInside4262,startsInside4509)
            int currentCellInt4ADC#6 = phi(currentCellInt4260,currentCellInt450A)
            int cellIntersects4503#8 = phi(cellIntersects425C,cellIntersects450C)
            real[] normalizedTimes44FE#7 = phi(normalizedTimes425A,normalizedTimes450E)
            femData:MeshPos[] poses44FB#7 = phi(poses4258,poses4510)
          string _t4277#1 = "Cell:";
          string _t4279#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t4277,c4275,_t4279);
          int _t427C#4 = ExtractFemItem<int,CellIndex(MeshCell)>(c4275);
          femData:Mesh _t427E#12 = ExtractFem<femData:Mesh,femData:MeshCell>(c4275);
          femData:MeshPos _t4280#2 = _msh_newtonInverse4281 (rayStartProj4254,_t427C,_t427E);
          bool _t44F0#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t4280);
          if _t44F0 then goto ASSIGN44F4 else goto ASSIGN4515
        ASSIGN44F4:  preds = [COND44F2]
          string _t44F3#1 = "pos starts inside\n";
          Print<[string]>(_t44F3);
          tensor[2] refPos44F6#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t4280);
          femData:MeshPos p44F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t427E,_t427C,refPos44F6);
          femData:MeshPos[] poses44FA#1 = Append<femData:MeshPos>(poses44FB,p44F8);
          real[] normalizedTimes44FD#1 = Append<real>(normalizedTimes44FE,camNearVsp4250);
          int _t4500#1 = 1;
          int cellIntersects4502#1 = IAdd(cellIntersects4503,_t4500);
          bool startsInside4505#1 = true;
          goto JOIN4512
        JOIN4512:  preds = [ASSIGN4506,JOIN4AE2]
          real startTime4507#1 = phi(camNearVsp4250,startTime4508)
          bool startsInside4509#1 = phi(startsInside4505,startsInside4262)
          int currentCellInt450A#1 = phi(cellIntersects4503,currentCellInt450B)
          int cellIntersects450C#1 = phi(cellIntersects4502,cellIntersects450D)
          real[] normalizedTimes450E#1 = phi(normalizedTimes44FD,normalizedTimes450F)
          femData:MeshPos[] poses4510#1 = phi(poses44FA,poses4511)
          goto FOREACH4276
        ASSIGN4515:  preds = [COND44F2]
          real _t4514#26 = -0.e0;
          tensor[2] _t4516#4 = <tensor[2]>[_t4514,_t4514];
          real time4518#9 = +inf;
          int face451A#12 = -1;
          real _t451C#39 = 0.1e1;
          real _t451E#9 = 0.e0;
          tensor[2] _t4520#5 = <tensor[2]>[_t451C,_t451E];
          real _t4522#9 = -0.1e1;
          tensor[2] _t4524#4 = <tensor[2]>[_t4522,_t451C];
          int ilit4527#1 = 3;
          int mulRes4528#3 = IMul(_t427C,ilit4527);
          int ilit4529#1 = 0;
          int addRes452A#1 = IAdd(mulRes4528,ilit4529);
          int idx452B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452A);
          int ilit452C#1 = 1;
          int addRes452D#1 = IAdd(mulRes4528,ilit452C);
          int idx452E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452D);
          int ilit452F#1 = 2;
          int addRes4530#1 = IAdd(mulRes4528,ilit452F);
          int idx4531#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes4530);
          int[3] seq4532#1 = <int[3]>{idx452B,idx452E,idx4531};
          int[3] femIndicies4526#3 = seq4532;
          int ilit4541#4 = 0;
          int ilit4542#4 = 2;
          int idx4543#1 = Subscript<int>(femIndicies4526,ilit4541);
          int mulRes4544#2 = IMul(ilit4542,idx4543);
          int addRes4545#1 = IAdd(ilit4541,mulRes4544);
          int ilit4546#4 = 1;
          int addRes4547#1 = IAdd(ilit4546,mulRes4544);
          real dof_load4548#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4545);
          real dof_load4549#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4547);
          tensor[2] interCons454A#1 = <tensor[2]>[dof_load4548,dof_load4549];
          int idx454B#1 = Subscript<int>(femIndicies4526,ilit4546);
          int mulRes454C#2 = IMul(ilit4542,idx454B);
          int addRes454D#1 = IAdd(ilit4541,mulRes454C);
          int addRes454E#1 = IAdd(ilit4546,mulRes454C);
          real dof_load454F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454D);
          real dof_load4550#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454E);
          tensor[2] interCons4551#1 = <tensor[2]>[dof_load454F,dof_load4550];
          int idx4552#1 = Subscript<int>(femIndicies4526,ilit4542);
          int mulRes4553#2 = IMul(ilit4542,idx4552);
          int addRes4554#1 = IAdd(ilit4541,mulRes4553);
          int addRes4555#1 = IAdd(ilit4546,mulRes4553);
          real dof_load4556#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4554);
          real dof_load4557#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4555);
          tensor[2] interCons4558#1 = <tensor[2]>[dof_load4556,dof_load4557];
          tensor[3,2] dofs4559#1 = <tensor[3,2]>[interCons454A,interCons4551,interCons4558];
          tensor[3,2] femDofs4540#24 = dofs4559;
          real varAcc4575#0 = VIndex<2,0>(_t4516);
          real varAcc4576#0 = VIndex<2,1>(_t4516);
          real coeff4577#1 = -0.1e1;
          real one4578#3 = 0.1e1;
          real prod4579#2 = RMul(one4578,one4578);
          real basisEval457A#2 = RMul(coeff4577,prod4579);
          real basisEval457B#2 = RMul(one4578,prod4579);
          real basisEval457C#2 = 0.e0;
          tensor[3] intermediateCons457D#1 = <tensor[3]>[basisEval457A,basisEval457B,basisEval457C];
          tensor[3] intermediateCons457E#1 = <tensor[3]>[basisEval457A,basisEval457C,basisEval457B];
          tensor[2,3] intermediateCons457F#1 = <tensor[2,3]>[intermediateCons457D,intermediateCons457E];
          tensor[2,3] basisResult4574#12 = intermediateCons457F;
          real r458D#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs4540);
          real r458E#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult4574);
          real r458F#1 = RMul(r458D,r458E);
          real r4590#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs4540);
          real r4591#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult4574);
          real r4592#1 = RMul(r4590,r4591);
          real r4593#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs4540);
          real r4594#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult4574);
          real r4595#1 = RMul(r4593,r4594);
          real r4596#1 = RAdd(r458F,r4592);
          real r4597#1 = RAdd(r4596,r4595);
          real r4598#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult4574);
          real r4599#1 = RMul(r458D,r4598);
          real r459A#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult4574);
          real r459B#1 = RMul(r4590,r459A);
          real r459C#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult4574);
          real r459D#1 = RMul(r4593,r459C);
          real r459E#1 = RAdd(r4599,r459B);
          real r459F#1 = RAdd(r459E,r459D);
          tensor[2] tensor45A0#1 = <tensor[2]>[r4597,r459F];
          real r45A1#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs4540);
          real r45A2#1 = RMul(r45A1,r458E);
          real r45A3#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs4540);
          real r45A4#1 = RMul(r45A3,r4591);
          real r45A5#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs4540);
          real r45A6#1 = RMul(r45A5,r4594);
          real r45A7#1 = RAdd(r45A2,r45A4);
          real r45A8#1 = RAdd(r45A7,r45A6);
          real r45A9#1 = RMul(r45A1,r4598);
          real r45AA#1 = RMul(r45A3,r459A);
          real r45AB#1 = RMul(r45A5,r459C);
          real r45AC#1 = RAdd(r45A9,r45AA);
          real r45AD#1 = RAdd(r45AC,r45AB);
          tensor[2] tensor45AE#1 = <tensor[2]>[r45A8,r45AD];
          tensor[2,2] probe_l_17458C#4 = <tensor[2,2]>[tensor45A0,tensor45AE];
          real realLit45D4#4 = 0.e0;
          real r45D5#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_17458C);
          real r45D6#1 = RMul(realLit45D4,r45D5);
          real realLit45D7#2 = -0.1e1;
          real r45D8#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_17458C);
          real r45D9#1 = RMul(realLit45D7,r45D8);
          real r45DA#1 = RAdd(r45D6,r45D9);
          real r45DB#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_17458C);
          real r45DC#1 = RMul(realLit45D4,r45DB);
          real r45DD#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_17458C);
          real r45DE#1 = RMul(realLit45D7,r45DD);
          real r45DF#1 = RAdd(r45DC,r45DE);
          tensor[2] tensor45E0#1 = <tensor[2]>[r45DA,r45DF];
          real realLit45E1#2 = 0.1e1;
          real r45E2#1 = RMul(realLit45E1,r45D5);
          real r45E3#1 = RMul(realLit45D4,r45D8);
          real r45E4#1 = RAdd(r45E2,r45E3);
          real r45E5#1 = RMul(realLit45E1,r45DB);
          real r45E6#1 = RMul(realLit45D4,r45DD);
          real r45E7#1 = RAdd(r45E5,r45E6);
          tensor[2] tensor45E8#1 = <tensor[2]>[r45E4,r45E7];
          tensor[2,2] op1_e3_l_1845D3#4 = <tensor[2,2]>[tensor45E0,tensor45E8];
          real r4601#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4540);
          real r4602#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult4574);
          real r4603#1 = RMul(r4601,r4602);
          real r4604#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4540);
          real r4605#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult4574);
          real r4606#1 = RMul(r4604,r4605);
          real r4607#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4540);
          real r4608#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult4574);
          real r4609#1 = RMul(r4607,r4608);
          real r460A#1 = RAdd(r4603,r4606);
          real r460B#1 = RAdd(r460A,r4609);
          real r460C#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4540);
          real r460D#1 = RMul(r460C,r4602);
          real r460E#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4540);
          real r460F#1 = RMul(r460E,r4605);
          real r4610#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4540);
          real r4611#1 = RMul(r4610,r4608);
          real r4612#1 = RAdd(r460D,r460F);
          real r4613#1 = RAdd(r4612,r4611);
          tensor[2] probe_l_194600#1 = <tensor[2]>[r460B,r4613];
          real r462A#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4540);
          real r462B#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult4574);
          real r462C#1 = RMul(r462A,r462B);
          real r462D#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4540);
          real r462E#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult4574);
          real r462F#1 = RMul(r462D,r462E);
          real r4630#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4540);
          real r4631#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult4574);
          real r4632#1 = RMul(r4630,r4631);
          real r4633#1 = RAdd(r462C,r462F);
          real r4634#1 = RAdd(r4633,r4632);
          real r4635#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4540);
          real r4636#1 = RMul(r4635,r462B);
          real r4637#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4540);
          real r4638#1 = RMul(r4637,r462E);
          real r4639#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4540);
          real r463A#1 = RMul(r4639,r4631);
          real r463B#1 = RAdd(r4636,r4638);
          real r463C#1 = RAdd(r463B,r463A);
          tensor[2] probe_l_204629#2 = <tensor[2]>[r4634,r463C];
          real realLit4653#2 = 0.e0;
          real r4654#2 = TensorIndex<tensor[2],[0]>(probe_l_204629);
          real r4655#1 = RMul(realLit4653,r4654);
          real realLit4656#1 = 0.1e1;
          real r4657#2 = TensorIndex<tensor[2],[1]>(probe_l_204629);
          real r4658#1 = RMul(realLit4656,r4657);
          real r4659#1 = RAdd(r4655,r4658);
          real realLit465A#1 = -0.1e1;
          real r465B#1 = RMul(realLit465A,r4654);
          real r465C#1 = RMul(realLit4653,r4657);
          real r465D#1 = RAdd(r465B,r465C);
          tensor[2] op1_e3_l_214652#1 = <tensor[2]>[r4659,r465D];
          real realLit466C#4 = 0.e0;
          real r466D#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_1845D3);
          real r466E#1 = RMul(realLit466C,r466D);
          real realLit466F#2 = -0.1e1;
          real r4670#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_1845D3);
          real r4671#1 = RMul(realLit466F,r4670);
          real r4672#1 = RAdd(r466E,r4671);
          real r4673#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_1845D3);
          real r4674#1 = RMul(realLit466C,r4673);
          real r4675#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_1845D3);
          real r4676#1 = RMul(realLit466F,r4675);
          real r4677#1 = RAdd(r4674,r4676);
          tensor[2] tensor4678#1 = <tensor[2]>[r4672,r4677];
          real realLit4679#2 = 0.1e1;
          real r467A#1 = RMul(realLit4679,r466D);
          real r467B#1 = RMul(realLit466C,r4670);
          real r467C#1 = RAdd(r467A,r467B);
          real r467D#1 = RMul(realLit4679,r4673);
          real r467E#1 = RMul(realLit466C,r4675);
          real r467F#1 = RAdd(r467D,r467E);
          tensor[2] tensor4680#1 = <tensor[2]>[r467C,r467F];
          tensor[2,2] op1_e3_l_22466B#4 = <tensor[2,2]>[tensor4678,tensor4680];
          real op1_e3_l_234698#4 = VDot<2>(probe_l_194600,op1_e3_l_214652);
          real varAcc469C#1 = VIndex<2,0>(_t4516);
          real varAcc469D#1 = VIndex<2,1>(_t4516);
          real coeff469E#2 = -0.1e1;
          real iden469F#1 = varAcc469C;
          real one46A0#7 = 0.1e1;
          real prod46A1#2 = RMul(iden469F,one46A0);
          real iden46A2#1 = varAcc469D;
          real prod46A3#2 = RMul(one46A0,iden46A2);
          real prod46A4#1 = RMul(one46A0,one46A0);
          real mult46A5#1 = RMul(one46A0,prod46A4);
          real mult46A6#1 = RMul(coeff469E,prod46A3);
          real mult46A7#1 = RMul(coeff469E,prod46A1);
          real sum46A8#1 = RAdd(mult46A6,mult46A7);
          real sum46A9#1 = RAdd(mult46A5,sum46A8);
          real intermediate46AA#1 = sum46A9;
          real basisEval46AB#1 = RMul(one46A0,prod46A1);
          real basisEval46AC#1 = RMul(one46A0,prod46A3);
          tensor[3] intermediateCons46AD#1 = <tensor[3]>[intermediate46AA,basisEval46AB,basisEval46AC];
          tensor[3] basisResult469B#3 = intermediateCons46AD;
          real r46C2#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4540);
          real r46C3#2 = TensorIndex<tensor[3],[0]>(basisResult469B);
          real r46C4#1 = RMul(r46C2,r46C3);
          real r46C5#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4540);
          real r46C6#2 = TensorIndex<tensor[3],[1]>(basisResult469B);
          real r46C7#1 = RMul(r46C5,r46C6);
          real r46C8#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4540);
          real r46C9#2 = TensorIndex<tensor[3],[2]>(basisResult469B);
          real r46CA#1 = RMul(r46C8,r46C9);
          real r46CB#1 = RAdd(r46C4,r46C7);
          real r46CC#1 = RAdd(r46CB,r46CA);
          real r46CD#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4540);
          real r46CE#1 = RMul(r46CD,r46C3);
          real r46CF#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4540);
          real r46D0#1 = RMul(r46CF,r46C6);
          real r46D1#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4540);
          real r46D2#1 = RMul(r46D1,r46C9);
          real r46D3#1 = RAdd(r46CE,r46D0);
          real r46D4#1 = RAdd(r46D3,r46D2);
          tensor[2] probe_l_2446C1#1 = <tensor[2]>[r46CC,r46D4];
          real r46EB#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_22466B);
          real r46EC#1 = RDiv(r46EB,op1_e3_l_234698);
          real r46ED#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_22466B);
          real r46EE#1 = RDiv(r46ED,op1_e3_l_234698);
          tensor[2] tensor46EF#1 = <tensor[2]>[r46EC,r46EE];
          real r46F0#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_22466B);
          real r46F1#1 = RDiv(r46F0,op1_e3_l_234698);
          real r46F2#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_22466B);
          real r46F3#1 = RDiv(r46F2,op1_e3_l_234698);
          tensor[2] tensor46F4#1 = <tensor[2]>[r46F1,r46F3];
          tensor[2,2] op1_e3_l_2546EA#4 = <tensor[2,2]>[tensor46EF,tensor46F4];
          tensor[2] op1_e3_l_264701#2 = VSub<2>(rayStartProj4254,probe_l_2446C1);
          tensor[2] projParam4705#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_2546EA);
          real vdot4706#1 = VDot<2>(projParam4705,op1_e3_l_264701);
          tensor[2] projParam4707#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_2546EA);
          real vdot4708#1 = VDot<2>(projParam4707,op1_e3_l_264701);
          tensor[2] op1_e3_l_274704#27 = <tensor[2]>[vdot4706,vdot4708];
          tensor[2] projParam4710#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_2546EA);
          real vdot4711#1 = VDot<2>(projParam4710,dposProj4256);
          tensor[2] projParam4712#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_2546EA);
          real vdot4713#1 = VDot<2>(projParam4712,dposProj4256);
          tensor[2] op1_e3_l_36470F#16 = <tensor[2]>[vdot4711,vdot4713];
          real realLit471B#2 = 0.e0;
          real r471C#2 = TensorIndex<tensor[2],[0]>(_t4524);
          real r471D#1 = RMul(realLit471B,r471C);
          real realLit471E#1 = 0.1e1;
          real r471F#2 = TensorIndex<tensor[2],[1]>(_t4524);
          real r4720#1 = RMul(realLit471E,r471F);
          real r4721#1 = RAdd(r471D,r4720);
          real realLit4722#1 = -0.1e1;
          real r4723#1 = RMul(realLit4722,r471C);
          real r4724#1 = RMul(realLit471B,r471F);
          real r4725#1 = RAdd(r4723,r4724);
          tensor[2] op1_e3_l_37471A#1 = <tensor[2]>[r4721,r4725];
          real op1_e3_l_384733#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37471A);
          real realLit4737#1 = 0.1e1;
          real r4738#2 = RDiv(realLit4737,op1_e3_l_384733);
          real r4739#1 = TensorIndex<tensor[2],[0]>(_t4524);
          real r473A#1 = RMul(r4738,r4739);
          real r473B#1 = TensorIndex<tensor[2],[1]>(_t4524);
          real r473C#1 = RMul(r4738,r473B);
          tensor[2] op1_e3_l_394736#2 = <tensor[2]>[r473A,r473C];
          tensor[2] op1_e3_l_404745#1 = VSub<2>(_t4520,op1_e3_l_274704);
          real realLit4749#2 = 0.e0;
          real r474A#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_394736);
          real r474B#1 = RMul(realLit4749,r474A);
          real realLit474C#1 = 0.1e1;
          real r474D#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_394736);
          real r474E#1 = RMul(realLit474C,r474D);
          real r474F#1 = RAdd(r474B,r474E);
          real realLit4750#1 = -0.1e1;
          real r4751#1 = RMul(realLit4750,r474A);
          real r4752#1 = RMul(realLit4749,r474D);
          real r4753#1 = RAdd(r4751,r4752);
          tensor[2] op1_e3_l_414748#1 = <tensor[2]>[r474F,r4753];
          real _t4761#10 = VDot<2>(op1_e3_l_404745,op1_e3_l_414748);
          real _t4764#3 = -0.1e-15;
          bool _t4766#1 = GTE<real>(_t4761,_t4764);
          bool _t4768#1 = GT<real>(time4518,_t4761);
          real _t476A#1 = Abs<real>(op1_e3_l_384733);
          real _t476D#3 = 0.1e-20;
          bool _t476F#1 = GTE<real>(_t476A,_t476D);
          bool _t4771#1 = BAnd(_t4768,_t476F);
          bool _t4773#4 = BAnd(_t4766,_t4771);
          if _t4773 then goto ASSIGN4777 else goto JOIN47A3
        ASSIGN4777:  preds = [COND4775]
          real _t4776#3 = 0.1e-8;
          real _t4778#1 = RAdd(_t451C,_t4776);
          tensor[2] _t477B#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78477D#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794780#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78477D);
          real _t4783#1 = VDot<2>(_t477B,op1_e3_l_794780);
          bool _t4786#1 = GT<real>(_t4778,_t4783);
          tensor[2] _t4788#1 = <tensor[2]>[_t4776,_t4776];
          tensor[2] v478B#1 = VAdd<2>(_t4788,op1_e3_l_274704);
          tensor[2] _t478A#2 = VAdd<2>(v478B,op1_e3_l_78477D);
          real _t478F#1 = VIndex<2,0>(_t478A);
          bool _t4791#1 = GT<real>(_t478F,_t4514);
          real _t4793#1 = VIndex<2,1>(_t478A);
          bool _t4795#1 = GT<real>(_t4793,_t4514);
          bool _t4797#1 = BAnd(_t4791,_t4795);
          bool _t4799#1 = BAnd(_t4786,_t4797);
          if _t4799 then goto ASSIGN479D else goto JOIN47A0
        ASSIGN479D:  preds = [COND479B]
          int face479C#1 = 0;
          goto JOIN47A0
        JOIN47A0:  preds = [ASSIGN479D,COND479B]
          int face479E#1 = phi(face479C,face451A)
          real time479F#1 = phi(_t4761,time4518)
          goto JOIN47A3
        JOIN47A3:  preds = [JOIN47A0,COND4775]
          int face47A1#2 = phi(face479E,face451A)
          real time47A2#3 = phi(time479F,time4518)
          tensor[2] _t47A4#1 = <tensor[2]>[_t451E,_t451E];
          tensor[2] _t47A6#4 = <tensor[2]>[_t451E,_t451C];
          real realLit47A9#2 = 0.e0;
          real r47AA#2 = TensorIndex<tensor[2],[0]>(_t47A6);
          real r47AB#1 = RMul(realLit47A9,r47AA);
          real realLit47AC#1 = 0.1e1;
          real r47AD#2 = TensorIndex<tensor[2],[1]>(_t47A6);
          real r47AE#1 = RMul(realLit47AC,r47AD);
          real r47AF#1 = RAdd(r47AB,r47AE);
          real realLit47B0#1 = -0.1e1;
          real r47B1#1 = RMul(realLit47B0,r47AA);
          real r47B2#1 = RMul(realLit47A9,r47AD);
          real r47B3#1 = RAdd(r47B1,r47B2);
          tensor[2] op1_e3_l_3747A8#1 = <tensor[2]>[r47AF,r47B3];
          real op1_e3_l_3847C1#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_3747A8);
          real realLit47C5#1 = 0.1e1;
          real r47C6#2 = RDiv(realLit47C5,op1_e3_l_3847C1);
          real r47C7#1 = TensorIndex<tensor[2],[0]>(_t47A6);
          real r47C8#1 = RMul(r47C6,r47C7);
          real r47C9#1 = TensorIndex<tensor[2],[1]>(_t47A6);
          real r47CA#1 = RMul(r47C6,r47C9);
          tensor[2] op1_e3_l_3947C4#2 = <tensor[2]>[r47C8,r47CA];
          tensor[2] op1_e3_l_4047D3#2 = VSub<2>(_t47A4,op1_e3_l_274704);
          real realLit47D7#2 = 0.e0;
          real r47D8#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_3947C4);
          real r47D9#1 = RMul(realLit47D7,r47D8);
          real realLit47DA#1 = 0.1e1;
          real r47DB#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_3947C4);
          real r47DC#1 = RMul(realLit47DA,r47DB);
          real r47DD#1 = RAdd(r47D9,r47DC);
          real realLit47DE#1 = -0.1e1;
          real r47DF#1 = RMul(realLit47DE,r47D8);
          real r47E0#1 = RMul(realLit47D7,r47DB);
          real r47E1#1 = RAdd(r47DF,r47E0);
          tensor[2] op1_e3_l_4147D6#1 = <tensor[2]>[r47DD,r47E1];
          real _t47EF#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_4147D6);
          bool _t47F2#4 = GTE<real>(_t47EF,_t4764);
          bool _t47F4#1 = GT<real>(time47A2,_t47EF);
          real _t47F6#1 = Abs<real>(op1_e3_l_3847C1);
          bool _t47F9#4 = GTE<real>(_t47F6,_t476D);
          bool _t47FB#1 = BAnd(_t47F4,_t47F9);
          bool _t47FD#1 = BAnd(_t47F2,_t47FB);
          if _t47FD then goto ASSIGN4801 else goto JOIN482D
        ASSIGN4801:  preds = [COND47FF]
          real _t4800#3 = 0.1e-8;
          real _t4802#1 = RAdd(_t451C,_t4800);
          tensor[2] _t4805#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784807#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79480A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784807);
          real _t480D#1 = VDot<2>(_t4805,op1_e3_l_79480A);
          bool _t4810#1 = GT<real>(_t4802,_t480D);
          tensor[2] _t4812#1 = <tensor[2]>[_t4800,_t4800];
          tensor[2] v4815#1 = VAdd<2>(_t4812,op1_e3_l_274704);
          tensor[2] _t4814#2 = VAdd<2>(v4815,op1_e3_l_784807);
          real _t4819#1 = VIndex<2,0>(_t4814);
          bool _t481B#1 = GT<real>(_t4819,_t4514);
          real _t481D#1 = VIndex<2,1>(_t4814);
          bool _t481F#1 = GT<real>(_t481D,_t4514);
          bool _t4821#1 = BAnd(_t481B,_t481F);
          bool _t4823#1 = BAnd(_t4810,_t4821);
          if _t4823 then goto ASSIGN4827 else goto JOIN482A
        ASSIGN4827:  preds = [COND4825]
          int face4826#1 = 1;
          goto JOIN482A
        JOIN482A:  preds = [ASSIGN4827,COND4825]
          int face4828#1 = phi(face4826,face47A1)
          real time4829#1 = phi(_t47EF,time47A2)
          goto JOIN482D
        JOIN482D:  preds = [JOIN482A,COND47FF]
          int face482B#2 = phi(face4828,face47A1)
          real time482C#3 = phi(time4829,time47A2)
          real realLit482F#2 = 0.e0;
          real r4830#2 = TensorIndex<tensor[2],[0]>(_t4520);
          real r4831#1 = RMul(realLit482F,r4830);
          real realLit4832#1 = 0.1e1;
          real r4833#2 = TensorIndex<tensor[2],[1]>(_t4520);
          real r4834#1 = RMul(realLit4832,r4833);
          real r4835#1 = RAdd(r4831,r4834);
          real realLit4836#1 = -0.1e1;
          real r4837#1 = RMul(realLit4836,r4830);
          real r4838#1 = RMul(realLit482F,r4833);
          real r4839#1 = RAdd(r4837,r4838);
          tensor[2] op1_e3_l_37482E#1 = <tensor[2]>[r4835,r4839];
          real op1_e3_l_384847#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37482E);
          real realLit484B#1 = 0.1e1;
          real r484C#2 = RDiv(realLit484B,op1_e3_l_384847);
          real r484D#1 = TensorIndex<tensor[2],[0]>(_t4520);
          real r484E#1 = RMul(r484C,r484D);
          real r484F#1 = TensorIndex<tensor[2],[1]>(_t4520);
          real r4850#1 = RMul(r484C,r484F);
          tensor[2] op1_e3_l_39484A#2 = <tensor[2]>[r484E,r4850];
          real realLit485A#2 = 0.e0;
          real r485B#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_39484A);
          real r485C#1 = RMul(realLit485A,r485B);
          real realLit485D#1 = 0.1e1;
          real r485E#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_39484A);
          real r485F#1 = RMul(realLit485D,r485E);
          real r4860#1 = RAdd(r485C,r485F);
          real realLit4861#1 = -0.1e1;
          real r4862#1 = RMul(realLit4861,r485B);
          real r4863#1 = RMul(realLit485A,r485E);
          real r4864#1 = RAdd(r4862,r4863);
          tensor[2] op1_e3_l_414859#1 = <tensor[2]>[r4860,r4864];
          real _t4872#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_414859);
          bool _t4875#4 = GTE<real>(_t4872,_t4764);
          bool _t4877#1 = GT<real>(time482C,_t4872);
          real _t4879#1 = Abs<real>(op1_e3_l_384847);
          bool _t487C#4 = GTE<real>(_t4879,_t476D);
          bool _t487E#1 = BAnd(_t4877,_t487C);
          bool _t4880#1 = BAnd(_t4875,_t487E);
          if _t4880 then goto ASSIGN4884 else goto JOIN48B0
        ASSIGN4884:  preds = [COND4882]
          real _t4883#3 = 0.1e-8;
          real _t4885#1 = RAdd(_t451C,_t4883);
          tensor[2] _t4888#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78488A#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79488D#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78488A);
          real _t4890#1 = VDot<2>(_t4888,op1_e3_l_79488D);
          bool _t4893#1 = GT<real>(_t4885,_t4890);
          tensor[2] _t4895#1 = <tensor[2]>[_t4883,_t4883];
          tensor[2] v4898#1 = VAdd<2>(_t4895,op1_e3_l_274704);
          tensor[2] _t4897#2 = VAdd<2>(v4898,op1_e3_l_78488A);
          real _t489C#1 = VIndex<2,0>(_t4897);
          bool _t489E#1 = GT<real>(_t489C,_t4514);
          real _t48A0#1 = VIndex<2,1>(_t4897);
          bool _t48A2#1 = GT<real>(_t48A0,_t4514);
          bool _t48A4#1 = BAnd(_t489E,_t48A2);
          bool _t48A6#1 = BAnd(_t4893,_t48A4);
          if _t48A6 then goto ASSIGN48AA else goto JOIN48AD
        ASSIGN48AA:  preds = [COND48A8]
          int face48A9#1 = 2;
          goto JOIN48AD
        JOIN48AD:  preds = [ASSIGN48AA,COND48A8]
          int face48AB#1 = phi(face48A9,face482B)
          real time48AC#1 = phi(_t4872,time482C)
          goto JOIN48B0
        JOIN48B0:  preds = [JOIN48AD,COND4882]
          int face48AE#2 = phi(face48AB,face482B)
          real time48AF#1 = phi(time48AC,time482C)
          bool _t48B1#1 = NEQ<int>(face48AE,face451A);
          if _t48B1 then goto ASSIGN48B5 else goto ASSIGN4AE6
        ASSIGN48B5:  preds = [COND48B3]
          real _t48B4#1 = Max<real>(time48AF,_t451E);
          real _t48B6#1 = IntToReal(face48AE);
          tensor[2] _t48B8#1 = <tensor[2]>[_t48B4,_t48B6];
          goto JOIN48BC
        JOIN48BC:  preds = [ASSIGN48B9,ASSIGN4AE6]
          tensor[2] _t48BA#1 = phi(_t48B8,_t48BB)
          real newTime48BD#2 = VIndex<2,0>(_t48BA);
          bool _t48BF#1 = GTE<real>(newTime48BD,_t451E);
          if _t48BF then goto COND48C2 else goto JOIN4AE2
        COND48C2:  preds = [COND48C1]
          if _t4773 then goto ASSIGN48C4 else goto JOIN48F0
        ASSIGN48C4:  preds = [COND48C2]
          real _t48C3#3 = 0.1e-8;
          real _t48C5#1 = RAdd(_t451C,_t48C3);
          tensor[2] _t48C8#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848CA#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7948CD#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848CA);
          real _t48D0#1 = VDot<2>(_t48C8,op1_e3_l_7948CD);
          bool _t48D3#1 = GT<real>(_t48C5,_t48D0);
          tensor[2] _t48D5#1 = <tensor[2]>[_t48C3,_t48C3];
          tensor[2] v48D8#1 = VAdd<2>(_t48D5,op1_e3_l_274704);
          tensor[2] _t48D7#2 = VAdd<2>(v48D8,op1_e3_l_7848CA);
          real _t48DC#1 = VIndex<2,0>(_t48D7);
          bool _t48DE#1 = GT<real>(_t48DC,_t4514);
          real _t48E0#1 = VIndex<2,1>(_t48D7);
          bool _t48E2#1 = GT<real>(_t48E0,_t4514);
          bool _t48E4#1 = BAnd(_t48DE,_t48E2);
          bool _t48E6#1 = BAnd(_t48D3,_t48E4);
          if _t48E6 then goto ASSIGN48EA else goto JOIN48ED
        ASSIGN48EA:  preds = [COND48E8]
          int face48E9#1 = 0;
          goto JOIN48ED
        JOIN48ED:  preds = [ASSIGN48EA,COND48E8]
          int face48EB#1 = phi(face48E9,face451A)
          real time48EC#1 = phi(_t4761,time4518)
          goto JOIN48F0
        JOIN48F0:  preds = [JOIN48ED,COND48C2]
          int face48EE#2 = phi(face48EB,face451A)
          real time48EF#3 = phi(time48EC,time4518)
          bool _t48F1#1 = GT<real>(time48EF,_t47EF);
          bool _t48F3#1 = BAnd(_t48F1,_t47F9);
          bool _t48F5#1 = BAnd(_t47F2,_t48F3);
          if _t48F5 then goto ASSIGN48F9 else goto JOIN4925
        ASSIGN48F9:  preds = [COND48F7]
          real _t48F8#3 = 0.1e-8;
          real _t48FA#1 = RAdd(_t451C,_t48F8);
          tensor[2] _t48FD#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848FF#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794902#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848FF);
          real _t4905#1 = VDot<2>(_t48FD,op1_e3_l_794902);
          bool _t4908#1 = GT<real>(_t48FA,_t4905);
          tensor[2] _t490A#1 = <tensor[2]>[_t48F8,_t48F8];
          tensor[2] v490D#1 = VAdd<2>(_t490A,op1_e3_l_274704);
          tensor[2] _t490C#2 = VAdd<2>(v490D,op1_e3_l_7848FF);
          real _t4911#1 = VIndex<2,0>(_t490C);
          bool _t4913#1 = GT<real>(_t4911,_t4514);
          real _t4915#1 = VIndex<2,1>(_t490C);
          bool _t4917#1 = GT<real>(_t4915,_t4514);
          bool _t4919#1 = BAnd(_t4913,_t4917);
          bool _t491B#1 = BAnd(_t4908,_t4919);
          if _t491B then goto ASSIGN491F else goto JOIN4922
        ASSIGN491F:  preds = [COND491D]
          int face491E#1 = 1;
          goto JOIN4922
        JOIN4922:  preds = [ASSIGN491F,COND491D]
          int face4920#1 = phi(face491E,face48EE)
          real time4921#1 = phi(_t47EF,time48EF)
          goto JOIN4925
        JOIN4925:  preds = [JOIN4922,COND48F7]
          int face4923#2 = phi(face4920,face48EE)
          real time4924#3 = phi(time4921,time48EF)
          bool _t4926#1 = GT<real>(time4924,_t4872);
          bool _t4928#1 = BAnd(_t4926,_t487C);
          bool _t492A#1 = BAnd(_t4875,_t4928);
          if _t492A then goto ASSIGN492E else goto JOIN495A
        ASSIGN492E:  preds = [COND492C]
          real _t492D#3 = 0.1e-8;
          real _t492F#1 = RAdd(_t451C,_t492D);
          tensor[2] _t4932#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784934#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794937#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784934);
          real _t493A#1 = VDot<2>(_t4932,op1_e3_l_794937);
          bool _t493D#1 = GT<real>(_t492F,_t493A);
          tensor[2] _t493F#1 = <tensor[2]>[_t492D,_t492D];
          tensor[2] v4942#1 = VAdd<2>(_t493F,op1_e3_l_274704);
          tensor[2] _t4941#2 = VAdd<2>(v4942,op1_e3_l_784934);
          real _t4946#1 = VIndex<2,0>(_t4941);
          bool _t4948#1 = GT<real>(_t4946,_t4514);
          real _t494A#1 = VIndex<2,1>(_t4941);
          bool _t494C#1 = GT<real>(_t494A,_t4514);
          bool _t494E#1 = BAnd(_t4948,_t494C);
          bool _t4950#1 = BAnd(_t493D,_t494E);
          if _t4950 then goto ASSIGN4954 else goto JOIN4957
        ASSIGN4954:  preds = [COND4952]
          int face4953#1 = 2;
          goto JOIN4957
        JOIN4957:  preds = [ASSIGN4954,COND4952]
          int face4955#1 = phi(face4953,face4923)
          real time4956#1 = phi(_t4872,time4924)
          goto JOIN495A
        JOIN495A:  preds = [JOIN4957,COND492C]
          int face4958#2 = phi(face4955,face4923)
          real time4959#1 = phi(time4956,time4924)
          bool _t495B#1 = NEQ<int>(face4958,face451A);
          if _t495B then goto ASSIGN495F else goto ASSIGN4AE5
        ASSIGN495F:  preds = [COND495D]
          real _t495E#1 = Max<real>(time4959,_t451E);
          real _t4960#1 = IntToReal(face4958);
          tensor[2] _t4962#1 = <tensor[2]>[_t495E,_t4960];
          goto JOIN4966
        JOIN4966:  preds = [ASSIGN4963,ASSIGN4AE5]
          tensor[2] _t4964#1 = phi(_t4962,_t4965)
          real _t4967#1 = VIndex<2,0>(_t4964);
          tensor[2] op1_e3_l_354969#1 = VScale<2>(_t4967,op1_e3_l_36470F);
          tensor[2] _t496C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_354969);
          if _t4773 then goto ASSIGN4971 else goto JOIN499D
        ASSIGN4971:  preds = [COND496F]
          real _t4970#3 = 0.1e-8;
          real _t4972#1 = RAdd(_t451C,_t4970);
          tensor[2] _t4975#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784977#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79497A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784977);
          real _t497D#1 = VDot<2>(_t4975,op1_e3_l_79497A);
          bool _t4980#1 = GT<real>(_t4972,_t497D);
          tensor[2] _t4982#1 = <tensor[2]>[_t4970,_t4970];
          tensor[2] v4985#1 = VAdd<2>(_t4982,op1_e3_l_274704);
          tensor[2] _t4984#2 = VAdd<2>(v4985,op1_e3_l_784977);
          real _t4989#1 = VIndex<2,0>(_t4984);
          bool _t498B#1 = GT<real>(_t4989,_t4514);
          real _t498D#1 = VIndex<2,1>(_t4984);
          bool _t498F#1 = GT<real>(_t498D,_t4514);
          bool _t4991#1 = BAnd(_t498B,_t498F);
          bool _t4993#1 = BAnd(_t4980,_t4991);
          if _t4993 then goto ASSIGN4997 else goto JOIN499A
        ASSIGN4997:  preds = [COND4995]
          int face4996#1 = 0;
          goto JOIN499A
        JOIN499A:  preds = [ASSIGN4997,COND4995]
          int face4998#1 = phi(face4996,face451A)
          real time4999#1 = phi(_t4761,time4518)
          goto JOIN499D
        JOIN499D:  preds = [JOIN499A,COND496F]
          int face499B#2 = phi(face4998,face451A)
          real time499C#3 = phi(time4999,time4518)
          bool _t499E#1 = GT<real>(time499C,_t47EF);
          bool _t49A0#1 = BAnd(_t499E,_t47F9);
          bool _t49A2#1 = BAnd(_t47F2,_t49A0);
          if _t49A2 then goto ASSIGN49A6 else goto JOIN49D2
        ASSIGN49A6:  preds = [COND49A4]
          real _t49A5#3 = 0.1e-8;
          real _t49A7#1 = RAdd(_t451C,_t49A5);
          tensor[2] _t49AA#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849AC#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949AF#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849AC);
          real _t49B2#1 = VDot<2>(_t49AA,op1_e3_l_7949AF);
          bool _t49B5#1 = GT<real>(_t49A7,_t49B2);
          tensor[2] _t49B7#1 = <tensor[2]>[_t49A5,_t49A5];
          tensor[2] v49BA#1 = VAdd<2>(_t49B7,op1_e3_l_274704);
          tensor[2] _t49B9#2 = VAdd<2>(v49BA,op1_e3_l_7849AC);
          real _t49BE#1 = VIndex<2,0>(_t49B9);
          bool _t49C0#1 = GT<real>(_t49BE,_t4514);
          real _t49C2#1 = VIndex<2,1>(_t49B9);
          bool _t49C4#1 = GT<real>(_t49C2,_t4514);
          bool _t49C6#1 = BAnd(_t49C0,_t49C4);
          bool _t49C8#1 = BAnd(_t49B5,_t49C6);
          if _t49C8 then goto ASSIGN49CC else goto JOIN49CF
        ASSIGN49CC:  preds = [COND49CA]
          int face49CB#1 = 1;
          goto JOIN49CF
        JOIN49CF:  preds = [ASSIGN49CC,COND49CA]
          int face49CD#1 = phi(face49CB,face499B)
          real time49CE#1 = phi(_t47EF,time499C)
          goto JOIN49D2
        JOIN49D2:  preds = [JOIN49CF,COND49A4]
          int face49D0#2 = phi(face49CD,face499B)
          real time49D1#3 = phi(time49CE,time499C)
          bool _t49D3#1 = GT<real>(time49D1,_t4872);
          bool _t49D5#1 = BAnd(_t49D3,_t487C);
          bool _t49D7#1 = BAnd(_t4875,_t49D5);
          if _t49D7 then goto ASSIGN49DB else goto JOIN4A07
        ASSIGN49DB:  preds = [COND49D9]
          real _t49DA#3 = 0.1e-8;
          real _t49DC#1 = RAdd(_t451C,_t49DA);
          tensor[2] _t49DF#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849E1#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949E4#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849E1);
          real _t49E7#1 = VDot<2>(_t49DF,op1_e3_l_7949E4);
          bool _t49EA#1 = GT<real>(_t49DC,_t49E7);
          tensor[2] _t49EC#1 = <tensor[2]>[_t49DA,_t49DA];
          tensor[2] v49EF#1 = VAdd<2>(_t49EC,op1_e3_l_274704);
          tensor[2] _t49EE#2 = VAdd<2>(v49EF,op1_e3_l_7849E1);
          real _t49F3#1 = VIndex<2,0>(_t49EE);
          bool _t49F5#1 = GT<real>(_t49F3,_t4514);
          real _t49F7#1 = VIndex<2,1>(_t49EE);
          bool _t49F9#1 = GT<real>(_t49F7,_t4514);
          bool _t49FB#1 = BAnd(_t49F5,_t49F9);
          bool _t49FD#1 = BAnd(_t49EA,_t49FB);
          if _t49FD then goto ASSIGN4A01 else goto JOIN4A04
        ASSIGN4A01:  preds = [COND49FF]
          int face4A00#1 = 2;
          goto JOIN4A04
        JOIN4A04:  preds = [ASSIGN4A01,COND49FF]
          int face4A02#1 = phi(face4A00,face49D0)
          real time4A03#1 = phi(_t4872,time49D1)
          goto JOIN4A07
        JOIN4A07:  preds = [JOIN4A04,COND49D9]
          int face4A05#2 = phi(face4A02,face49D0)
          real time4A06#1 = phi(time4A03,time49D1)
          bool _t4A08#1 = NEQ<int>(face4A05,face451A);
          if _t4A08 then goto ASSIGN4A0C else goto ASSIGN4AE4
        ASSIGN4A0C:  preds = [COND4A0A]
          real _t4A0B#1 = Max<real>(time4A06,_t451E);
          real _t4A0D#1 = IntToReal(face4A05);
          tensor[2] _t4A0F#1 = <tensor[2]>[_t4A0B,_t4A0D];
          goto JOIN4A13
        JOIN4A13:  preds = [ASSIGN4A10,ASSIGN4AE4]
          tensor[2] _t4A11#1 = phi(_t4A0F,_t4A12)
          real _t4A14#1 = VIndex<2,0>(_t4A11);
          tensor[2] op1_e3_l_34A16#1 = VScale<2>(_t4A14,dposProj4256);
          tensor[2] _t4A19#1 = VAdd<2>(rayStartProj4254,op1_e3_l_34A16);
          if _t4773 then goto ASSIGN4A1E else goto JOIN4A4A
        ASSIGN4A1E:  preds = [COND4A1C]
          real _t4A1D#3 = 0.1e-8;
          real _t4A1F#1 = RAdd(_t451C,_t4A1D);
          tensor[2] _t4A22#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A24#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A27#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A24);
          real _t4A2A#1 = VDot<2>(_t4A22,op1_e3_l_794A27);
          bool _t4A2D#1 = GT<real>(_t4A1F,_t4A2A);
          tensor[2] _t4A2F#1 = <tensor[2]>[_t4A1D,_t4A1D];
          tensor[2] v4A32#1 = VAdd<2>(_t4A2F,op1_e3_l_274704);
          tensor[2] _t4A31#2 = VAdd<2>(v4A32,op1_e3_l_784A24);
          real _t4A36#1 = VIndex<2,0>(_t4A31);
          bool _t4A38#1 = GT<real>(_t4A36,_t4514);
          real _t4A3A#1 = VIndex<2,1>(_t4A31);
          bool _t4A3C#1 = GT<real>(_t4A3A,_t4514);
          bool _t4A3E#1 = BAnd(_t4A38,_t4A3C);
          bool _t4A40#1 = BAnd(_t4A2D,_t4A3E);
          if _t4A40 then goto ASSIGN4A44 else goto JOIN4A47
        ASSIGN4A44:  preds = [COND4A42]
          int face4A43#1 = 0;
          goto JOIN4A47
        JOIN4A47:  preds = [ASSIGN4A44,COND4A42]
          int face4A45#1 = phi(face4A43,face451A)
          real time4A46#1 = phi(_t4761,time4518)
          goto JOIN4A4A
        JOIN4A4A:  preds = [JOIN4A47,COND4A1C]
          int face4A48#2 = phi(face4A45,face451A)
          real time4A49#3 = phi(time4A46,time4518)
          bool _t4A4B#1 = GT<real>(time4A49,_t47EF);
          bool _t4A4D#1 = BAnd(_t4A4B,_t47F9);
          bool _t4A4F#1 = BAnd(_t47F2,_t4A4D);
          if _t4A4F then goto ASSIGN4A53 else goto JOIN4A7F
        ASSIGN4A53:  preds = [COND4A51]
          real _t4A52#3 = 0.1e-8;
          real _t4A54#1 = RAdd(_t451C,_t4A52);
          tensor[2] _t4A57#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A59#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A5C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A59);
          real _t4A5F#1 = VDot<2>(_t4A57,op1_e3_l_794A5C);
          bool _t4A62#1 = GT<real>(_t4A54,_t4A5F);
          tensor[2] _t4A64#1 = <tensor[2]>[_t4A52,_t4A52];
          tensor[2] v4A67#1 = VAdd<2>(_t4A64,op1_e3_l_274704);
          tensor[2] _t4A66#2 = VAdd<2>(v4A67,op1_e3_l_784A59);
          real _t4A6B#1 = VIndex<2,0>(_t4A66);
          bool _t4A6D#1 = GT<real>(_t4A6B,_t4514);
          real _t4A6F#1 = VIndex<2,1>(_t4A66);
          bool _t4A71#1 = GT<real>(_t4A6F,_t4514);
          bool _t4A73#1 = BAnd(_t4A6D,_t4A71);
          bool _t4A75#1 = BAnd(_t4A62,_t4A73);
          if _t4A75 then goto ASSIGN4A79 else goto JOIN4A7C
        ASSIGN4A79:  preds = [COND4A77]
          int face4A78#1 = 1;
          goto JOIN4A7C
        JOIN4A7C:  preds = [ASSIGN4A79,COND4A77]
          int face4A7A#1 = phi(face4A78,face4A48)
          real time4A7B#1 = phi(_t47EF,time4A49)
          goto JOIN4A7F
        JOIN4A7F:  preds = [JOIN4A7C,COND4A51]
          int face4A7D#2 = phi(face4A7A,face4A48)
          real time4A7E#3 = phi(time4A7B,time4A49)
          bool _t4A80#1 = GT<real>(time4A7E,_t4872);
          bool _t4A82#1 = BAnd(_t4A80,_t487C);
          bool _t4A84#1 = BAnd(_t4875,_t4A82);
          if _t4A84 then goto ASSIGN4A88 else goto JOIN4AB4
        ASSIGN4A88:  preds = [COND4A86]
          real _t4A87#3 = 0.1e-8;
          real _t4A89#1 = RAdd(_t451C,_t4A87);
          tensor[2] _t4A8C#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A8E#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A91#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A8E);
          real _t4A94#1 = VDot<2>(_t4A8C,op1_e3_l_794A91);
          bool _t4A97#1 = GT<real>(_t4A89,_t4A94);
          tensor[2] _t4A99#1 = <tensor[2]>[_t4A87,_t4A87];
          tensor[2] v4A9C#1 = VAdd<2>(_t4A99,op1_e3_l_274704);
          tensor[2] _t4A9B#2 = VAdd<2>(v4A9C,op1_e3_l_784A8E);
          real _t4AA0#1 = VIndex<2,0>(_t4A9B);
          bool _t4AA2#1 = GT<real>(_t4AA0,_t4514);
          real _t4AA4#1 = VIndex<2,1>(_t4A9B);
          bool _t4AA6#1 = GT<real>(_t4AA4,_t4514);
          bool _t4AA8#1 = BAnd(_t4AA2,_t4AA6);
          bool _t4AAA#1 = BAnd(_t4A97,_t4AA8);
          if _t4AAA then goto ASSIGN4AAE else goto JOIN4AB1
        ASSIGN4AAE:  preds = [COND4AAC]
          int face4AAD#1 = 2;
          goto JOIN4AB1
        JOIN4AB1:  preds = [ASSIGN4AAE,COND4AAC]
          int face4AAF#1 = phi(face4AAD,face4A7D)
          real time4AB0#1 = phi(_t4872,time4A7E)
          goto JOIN4AB4
        JOIN4AB4:  preds = [JOIN4AB1,COND4A86]
          int face4AB2#2 = phi(face4AAF,face4A7D)
          real time4AB3#1 = phi(time4AB0,time4A7E)
          bool _t4AB5#1 = NEQ<int>(face4AB2,face451A);
          if _t4AB5 then goto ASSIGN4AB9 else goto ASSIGN4AE3
        ASSIGN4AB9:  preds = [COND4AB7]
          real _t4AB8#1 = Max<real>(time4AB3,_t451E);
          real _t4ABA#1 = IntToReal(face4AB2);
          tensor[2] _t4ABC#1 = <tensor[2]>[_t4AB8,_t4ABA];
          goto JOIN4AC0
        JOIN4AC0:  preds = [ASSIGN4ABD,ASSIGN4AE3]
          tensor[2] _t4ABE#1 = phi(_t4ABC,_t4ABF)
          real _t4AC1#1 = VIndex<2,1>(_t4ABE);
          real t4AC3#1 = Floor<1>(_t4AC1);
          int _t4AC5#1 = RealToInt<1>(t4AC3);
          femData:MeshPos p4AC7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t427E,_t427C,_t496C,_t4A19,_t4AC5);
          real op1_e3_l_34AC9#1 = RSub(camFarVsp4252,camNearVsp4250);
          real op1_e3_l_44ACC#1 = RMul(newTime48BD,op1_e3_l_34AC9);
          real newRayTime4ACF#3 = RAdd(camNearVsp4250,op1_e3_l_44ACC);
          real[] normalizedTimes4AD2#1 = Append<real>(normalizedTimes44FE,newRayTime4ACF);
          femData:MeshPos[] poses4AD4#1 = Append<femData:MeshPos>(poses44FB,p4AC7);
          bool _t4AD6#1 = GT<real>(startTime4AD7,newRayTime4ACF);
          if _t4AD6 then goto JOIN4ADD else goto JOIN4ADD
        JOIN4ADD:  preds = [COND4AD9,COND4AD9]
          real startTime4ADA#1 = phi(newRayTime4ACF,startTime4AD7)
          int currentCellInt4ADB#1 = phi(cellIntersects4503,currentCellInt4ADC)
          int _t4ADE#1 = 1;
          int cellIntersects4AE0#1 = IAdd(cellIntersects4503,_t4ADE);
          goto JOIN4AE2
        JOIN4AE2:  preds = [ASSIGN4AE1,COND48C1]
          real startTime4508#1 = phi(startTime4ADA,startTime4AD7)
          int currentCellInt450B#1 = phi(currentCellInt4ADB,currentCellInt4ADC)
          int cellIntersects450D#1 = phi(cellIntersects4AE0,cellIntersects4503)
          real[] normalizedTimes450F#1 = phi(normalizedTimes4AD2,normalizedTimes44FE)
          femData:MeshPos[] poses4511#1 = phi(poses4AD4,poses44FB)
          goto JOIN4512
        ASSIGN4AE3:  preds = [COND4AB7]
          tensor[2] _t4ABF#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4AC0
        ASSIGN4AE4:  preds = [COND4A0A]
          tensor[2] _t4A12#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4A13
        ASSIGN4AE5:  preds = [COND495D]
          tensor[2] _t4965#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4966
        ASSIGN4AE6:  preds = [COND48B3]
          tensor[2] _t48BB#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN48BC
        ASSIGN4AE9:  preds = [FOREACH4276]
          int _t4AE8#1 = 0;
          bool _t4AEA#1 = NEQ<int>(cellIntersects4503,_t4AE8);
          if _t4AEA then goto ASSIGN4AEE else goto ASSIGN4B3C
        ASSIGN4AEE:  preds = [COND4AEC]
          femData:MeshPos pos4AED#4 = Subscript<femData:MeshPos[]>(poses44FB,currentCellInt4ADC);
          real rayN4AEF#2 = Subscript<real[]>(normalizedTimes44FE,currentCellInt4ADC);
          tensor[3] op1_e3_l_34AF1#1 = VScale<3>(rayN4AEF,rayVec424E);
          tensor[3] _t4AF4#1 = VAdd<3>(rayOrig424C,op1_e3_l_34AF1);
          tensor[3][2] _t4AF7#1 = <tensor[3][2]>{rayOrig424C,_t4AF4};
          tensor[3][] _t4AF9#1 = MkDynamic<tensor[3],2>(_t4AF7);
          tensor[3][] spaceInter4AFB#1 = Concat<tensor[3]>(spaceInter425E,_t4AF9);
          tensor[2] _t4AFD#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4AED);
          tensor[2][1] _t4AFF#1 = <tensor[2][1]>{_t4AFD};
          tensor[2][] _t4B01#1 = MkDynamic<tensor[2],1>(_t4AFF);
          femData:Mesh _t4B03#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4AED);
          int _t4B05#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4AED);
          femData:MeshCell currentCell4B07#2 = LoadFem<femData:MeshCell>(_t4B03,_t4B05);
          femData:MeshCell[1] _t4B09#1 = <femData:MeshCell[1]>{currentCell4B07};
          femData:MeshCell[] _t4B0B#1 = MkDynamic<femData:MeshCell,1>(_t4B09);
          string _t4B0D#1 = "In the interval:";
          tensor[2] _t4B0F#1 = <tensor[2]>[camNearVsp4250,camFarVsp4252];
          string _t4B11#3 = "\n";
          Print<[string,tensor[2],string]>(_t4B0D,_t4B0F,_t4B11);
          string _t4B14#1 = "Possible times:";
          Print<[string,real[],string]>(_t4B14,normalizedTimes44FE,_t4B11);
          string _t4B17#1 = "cells:";
          femData:MeshCell[] accum4B19#1 = <femData:MeshCell[]>{};
        FOREACH4B1C:  preds = [ASSIGN4B1A,NEXT4B26]
          foreach (p4B1B in poses44FB) on exit goto MASSIGN4B27
            femData:MeshCell[] accum4B24#2 = phi(accum4B19,accum4B23)
          femData:Mesh _t4B1D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p4B1B);
          int _t4B1F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p4B1B);
          femData:MeshCell _t4B21#1 = LoadFem<femData:MeshCell>(_t4B1D,_t4B1F);
          femData:MeshCell[] accum4B23#1 = Append<femData:MeshCell>(accum4B24,_t4B21);
          goto FOREACH4B1C
        MASSIGN4B27:  preds = [FOREACH4B1C]
          Print<[string,femData:MeshCell[],string]>(_t4B17,accum4B24,_t4B11);
          goto JOIN4B2E
        JOIN4B2E:  preds = [MASSIGN4B27,*STABILIZE4B4A]
          femData:MeshPos pos4B28#1 = phi(pos4AED)
          femData:MeshCell currentCell4B29#1 = phi(currentCell4B07)
          real rayN4B2A#1 = phi(rayN4AEF)
          femData:MeshCell[] cellInter4B2B#1 = phi(_t4B0B)
          tensor[2][] refSpaceInter4B2C#1 = phi(_t4B01)
          tensor[3][] spaceInter4B2D#1 = phi(spaceInter4AFB)
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.spaceInter = spaceInter4B2D;
          self.refSpaceInter = refSpaceInter4B2C;
          self.cellInter = cellInter4B2B;
          self.currentCellInt = currentCellInt4ADC;
          self.rayN = rayN4B2A;
          self.currentCell = currentCell4B29;
          self.pos = pos4B28;
          self.startsInside = startsInside4AE7;
          active
        ASSIGN4B3C:  preds = [COND4AEC]
          string _t4B3B#1 = "No intersection!\n";
          Print<[string]>(_t4B3B);
          string _t4B3E#1 = "Ui: ";
          string _t4B40#1 = " Vi:";
          string _t4B42#1 = "\n";
          Print<[string,int,string,int,string]>(_t4B3E,ui4264,_t4B40,vi4266,_t4B42);
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.currentCellInt = currentCellInt4ADC;
          self.startsInside = startsInside4AE7;
          stabilize
          goto JOIN4B2E
        ASSIGN4B4B:  preds = [COND426A]
          bool _t426E#1 = NEQ<int>(vi4266,debugV424A);
          goto JOIN426F
    end start
    method update
        ENTRY4B4C:  preds = []
          tensor[3] rayOrig4B4D#4 = self.rayOrig;
          tensor[3] rayVec4B4F#6 = self.rayVec;
          real camFarVsp4B51#6 = self.camFarVsp;
          femData:MeshPos[] poses4B53#2 = self.poses;
          real[] normalizedTimes4B55#4 = self.normalizedTimes;
          int cellIntersects4B57#1 = self.cellIntersects;
          tensor[2][] rayCellInter4B59#2 = self.rayCellInter;
          tensor[3][] spaceInter4B5B#3 = self.spaceInter;
          tensor[2][] refSpaceInter4B5D#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter4B5F#4 = self.cellInter;
          real rayN4B61#8 = self.rayN;
          femData:MeshCell currentCell4B63#2 = self.currentCell;
          int steps4B65#1 = self.steps;
          femData:MeshPos pos4B67#8 = self.pos;
          bool startsInside4B69#2 = self.startsInside;
          int ui4B6B#1 = self.ui;
          int vi4B6D#1 = self.vi;
          string _t4B6F#1 = "Ui: ";
          string _t4B71#1 = " vi: ";
          string _t4B73#21 = "\n";
          Print<[string,int,string,int,string]>(_t4B6F,ui4B6B,_t4B71,vi4B6D,_t4B73);
          string _t4B76#1 = "The current ref pos is:";
          tensor[2] _t4B78#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4B67);
          Print<[string,tensor[2],string]>(_t4B76,_t4B78,_t4B73);
          string _t4B7B#1 = "Current cell:";
          femData:Mesh _t4B7D#13 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4B67);
          int _t4B7F#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4B67);
          femData:MeshCell _t4B81#3 = LoadFem<femData:MeshCell>(_t4B7D,_t4B7F);
          Print<[string,femData:MeshCell,string]>(_t4B7B,_t4B81,_t4B73);
          string _t4B84#1 = "The current time is:";
          Print<[string,real,string]>(_t4B84,rayN4B61,_t4B73);
          string _t4B87#2 = "The current world pos is:";
          int ilit4B8A#1 = 3;
          int mulRes4B8B#3 = IMul(_t4B7F,ilit4B8A);
          int ilit4B8C#1 = 0;
          int addRes4B8D#1 = IAdd(mulRes4B8B,ilit4B8C);
          int idx4B8E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B8D);
          int ilit4B8F#1 = 1;
          int addRes4B90#1 = IAdd(mulRes4B8B,ilit4B8F);
          int idx4B91#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B90);
          int ilit4B92#1 = 2;
          int addRes4B93#1 = IAdd(mulRes4B8B,ilit4B92);
          int idx4B94#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B93);
          int[3] seq4B95#1 = <int[3]>{idx4B8E,idx4B91,idx4B94};
          int[3] femIndicies4B89#3 = seq4B95;
          int ilit4BA4#4 = 0;
          int ilit4BA5#4 = 2;
          int idx4BA6#1 = Subscript<int>(femIndicies4B89,ilit4BA4);
          int mulRes4BA7#2 = IMul(ilit4BA5,idx4BA6);
          int addRes4BA8#1 = IAdd(ilit4BA4,mulRes4BA7);
          int ilit4BA9#4 = 1;
          int addRes4BAA#1 = IAdd(ilit4BA9,mulRes4BA7);
          real dof_load4BAB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BA8);
          real dof_load4BAC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BAA);
          tensor[2] interCons4BAD#1 = <tensor[2]>[dof_load4BAB,dof_load4BAC];
          int idx4BAE#1 = Subscript<int>(femIndicies4B89,ilit4BA9);
          int mulRes4BAF#2 = IMul(ilit4BA5,idx4BAE);
          int addRes4BB0#1 = IAdd(ilit4BA4,mulRes4BAF);
          int addRes4BB1#1 = IAdd(ilit4BA9,mulRes4BAF);
          real dof_load4BB2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB0);
          real dof_load4BB3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB1);
          tensor[2] interCons4BB4#1 = <tensor[2]>[dof_load4BB2,dof_load4BB3];
          int idx4BB5#1 = Subscript<int>(femIndicies4B89,ilit4BA5);
          int mulRes4BB6#2 = IMul(ilit4BA5,idx4BB5);
          int addRes4BB7#1 = IAdd(ilit4BA4,mulRes4BB6);
          int addRes4BB8#1 = IAdd(ilit4BA9,mulRes4BB6);
          real dof_load4BB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB7);
          real dof_load4BBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB8);
          tensor[2] interCons4BBB#1 = <tensor[2]>[dof_load4BB9,dof_load4BBA];
          tensor[3,2] dofs4BBC#1 = <tensor[3,2]>[interCons4BAD,interCons4BB4,interCons4BBB];
          tensor[3,2] femDofs4BA3#12 = dofs4BBC;
          real varAcc4BD8#1 = VIndex<2,0>(_t4B78);
          real varAcc4BD9#1 = VIndex<2,1>(_t4B78);
          real coeff4BDA#2 = -0.1e1;
          real iden4BDB#1 = varAcc4BD8;
          real one4BDC#7 = 0.1e1;
          real prod4BDD#2 = RMul(iden4BDB,one4BDC);
          real iden4BDE#1 = varAcc4BD9;
          real prod4BDF#2 = RMul(one4BDC,iden4BDE);
          real prod4BE0#1 = RMul(one4BDC,one4BDC);
          real mult4BE1#1 = RMul(one4BDC,prod4BE0);
          real mult4BE2#1 = RMul(coeff4BDA,prod4BDF);
          real mult4BE3#1 = RMul(coeff4BDA,prod4BDD);
          real sum4BE4#1 = RAdd(mult4BE2,mult4BE3);
          real sum4BE5#1 = RAdd(mult4BE1,sum4BE4);
          real intermediate4BE6#1 = sum4BE5;
          real basisEval4BE7#1 = RMul(one4BDC,prod4BDD);
          real basisEval4BE8#1 = RMul(one4BDC,prod4BDF);
          tensor[3] intermediateCons4BE9#1 = <tensor[3]>[intermediate4BE6,basisEval4BE7,basisEval4BE8];
          tensor[3] basisResult4BD7#6 = intermediateCons4BE9;
          real r4BFE#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4BA3);
          real r4BFF#2 = TensorIndex<tensor[3],[0]>(basisResult4BD7);
          real r4C00#1 = RMul(r4BFE,r4BFF);
          real r4C01#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4BA3);
          real r4C02#2 = TensorIndex<tensor[3],[1]>(basisResult4BD7);
          real r4C03#1 = RMul(r4C01,r4C02);
          real r4C04#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4BA3);
          real r4C05#2 = TensorIndex<tensor[3],[2]>(basisResult4BD7);
          real r4C06#1 = RMul(r4C04,r4C05);
          real r4C07#1 = RAdd(r4C00,r4C03);
          real r4C08#1 = RAdd(r4C07,r4C06);
          real r4C09#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4BA3);
          real r4C0A#1 = RMul(r4C09,r4BFF);
          real r4C0B#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4BA3);
          real r4C0C#1 = RMul(r4C0B,r4C02);
          real r4C0D#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4BA3);
          real r4C0E#1 = RMul(r4C0D,r4C05);
          real r4C0F#1 = RAdd(r4C0A,r4C0C);
          real r4C10#1 = RAdd(r4C0F,r4C0E);
          tensor[2] _t4BFD#2 = <tensor[2]>[r4C08,r4C10];
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          tensor[3] op1_e3_l_34C27#1 = VScale<3>(rayN4B61,rayVec4B4F);
          tensor[3] stupid4C2A#2 = VAdd<3>(rayOrig4B4D,op1_e3_l_34C27);
          string _t4C2D#2 = "The current world pos should be:";
          real _t4C2F#1 = VIndex<3,0>(stupid4C2A);
          real _t4C31#1 = VIndex<3,1>(stupid4C2A);
          tensor[2] _t4C33#3 = <tensor[2]>[_t4C2F,_t4C31];
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real _t4C36#10 = 0.1e1;
          real _t4C38#3 = 0.1e-8;
          real _t4C3A#1 = RAdd(_t4C36,_t4C38);
          tensor[2] _t4C3D#1 = <tensor[2]>[_t4C36,_t4C36];
          real _t4C3F#1 = VDot<2>(_t4C3D,_t4B78);
          bool _t4C42#1 = GT<real>(_t4C3A,_t4C3F);
          tensor[2] _t4C44#1 = <tensor[2]>[_t4C38,_t4C38];
          tensor[2] _t4C46#2 = VAdd<2>(_t4C44,_t4B78);
          real _t4C49#1 = VIndex<2,0>(_t4C46);
          real _t4C4B#4 = -0.e0;
          bool _t4C4D#1 = GT<real>(_t4C49,_t4C4B);
          real _t4C4F#1 = VIndex<2,1>(_t4C46);
          bool _t4C51#1 = GT<real>(_t4C4F,_t4C4B);
          bool _t4C53#1 = BAnd(_t4C4D,_t4C51);
          bool _t4C55#1 = BAnd(_t4C42,_t4C53);
          bool _t4C57#1 = BNot(_t4C55);
          if _t4C57 then goto ASSIGN4C5B else goto JOIN4C64
        ASSIGN4C5B:  preds = [COND4C59]
          string _t4C5A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t4C5A);
          bool _t4C5D#1 = BNot(startsInside4B69);
          if _t4C5D then goto ASSIGN4C61 else goto JOIN4C63
        ASSIGN4C61:  preds = [COND4C5F]
          string _t4C60#1 = "Not because of an inside\n";
          Print<[string]>(_t4C60);
          goto JOIN4C63
        JOIN4C63:  preds = [MASSIGN4C62,COND4C5F]
          goto JOIN4C64
        JOIN4C64:  preds = [JOIN4C63,COND4C59]
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real r4C68#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4BA3);
          real r4C69#2 = TensorIndex<tensor[3],[0]>(basisResult4BD7);
          real r4C6A#1 = RMul(r4C68,r4C69);
          real r4C6B#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4BA3);
          real r4C6C#2 = TensorIndex<tensor[3],[1]>(basisResult4BD7);
          real r4C6D#1 = RMul(r4C6B,r4C6C);
          real r4C6E#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4BA3);
          real r4C6F#2 = TensorIndex<tensor[3],[2]>(basisResult4BD7);
          real r4C70#1 = RMul(r4C6E,r4C6F);
          real r4C71#1 = RAdd(r4C6A,r4C6D);
          real r4C72#1 = RAdd(r4C71,r4C70);
          real r4C73#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4BA3);
          real r4C74#1 = RMul(r4C73,r4C69);
          real r4C75#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4BA3);
          real r4C76#1 = RMul(r4C75,r4C6C);
          real r4C77#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4BA3);
          real r4C78#1 = RMul(r4C77,r4C6F);
          real r4C79#1 = RAdd(r4C74,r4C76);
          real r4C7A#1 = RAdd(r4C79,r4C78);
          tensor[2] probe_l_54C67#1 = <tensor[2]>[r4C72,r4C7A];
          tensor[2] op1_e3_l_74C90#2 = VSub<2>(probe_l_54C67,_t4C33);
          real op1_e3_l_94C93#1 = VDot<2>(op1_e3_l_74C90,op1_e3_l_74C90);
          real err4C96#2 = Sqrt(op1_e3_l_94C93);
          real _t4C99#1 = 0.1e-4;
          bool _t4C9B#1 = GT<real>(err4C96,_t4C99);
          if _t4C9B then goto ASSIGN4C9F else goto ASSIGN51EE
        ASSIGN4C9F:  preds = [COND4C9D]
          string _t4C9E#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t4C9E,err4C96,_t4B73);
          goto JOIN4CA1
        JOIN4CA1:  preds = [MASSIGN4CA0,MASSIGN51EF]
          int _t4CA2#13 = 1;
          int steps4CA4#4 = IAdd(steps4B65,_t4CA2);
          string _t4CA6#1 = "Orig:";
          string _t4CA8#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t4CA6,rayOrig4B4D,_t4CA8,rayVec4B4F,_t4B73);
          real op1_e3_l_34CAB#1 = RSub(camFarVsp4B51,rayN4B61);
          tensor[3] newDpos4CAE#2 = VScale<3>(op1_e3_l_34CAB,rayVec4B4F);
          tensor[2] _t4CB1#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos4B67);
          femData:Mesh _t4CB3#9 = ExtractFem<femData:Mesh,femData:MeshCell>(_t4B81);
          int _t4CB5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t4B81);
          tensor[2] _t4CB7#2 = <tensor[2]>[_t4C4B,_t4C4B];
          real _t4CB9#1 = VIndex<3,0>(newDpos4CAE);
          real _t4CBB#1 = VIndex<3,1>(newDpos4CAE);
          tensor[2] _t4CBD#2 = <tensor[2]>[_t4CB9,_t4CBB];
          int _t4CBF#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos4B67);
          real time4CC1#5 = +inf;
          int face4CC3#9 = -1;
          real faceTime4CC5#6 = -inf;
          real _t4CC7#14 = 0.e0;
          tensor[2] _t4CC9#7 = <tensor[2]>[_t4C36,_t4CC7];
          real _t4CCB#6 = -0.1e1;
          tensor[2] _t4CCD#5 = <tensor[2]>[_t4CCB,_t4C36];
          int ilit4CD0#1 = 3;
          int mulRes4CD1#3 = IMul(_t4CB5,ilit4CD0);
          int ilit4CD2#1 = 0;
          int addRes4CD3#1 = IAdd(mulRes4CD1,ilit4CD2);
          int idx4CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD3);
          int ilit4CD5#1 = 1;
          int addRes4CD6#1 = IAdd(mulRes4CD1,ilit4CD5);
          int idx4CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD6);
          int ilit4CD8#1 = 2;
          int addRes4CD9#1 = IAdd(mulRes4CD1,ilit4CD8);
          int idx4CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD9);
          int[3] seq4CDB#1 = <int[3]>{idx4CD4,idx4CD7,idx4CDA};
          int[3] femIndicies4CCF#3 = seq4CDB;
          int ilit4CEA#4 = 0;
          int ilit4CEB#4 = 2;
          int idx4CEC#1 = Subscript<int>(femIndicies4CCF,ilit4CEA);
          int mulRes4CED#2 = IMul(ilit4CEB,idx4CEC);
          int addRes4CEE#1 = IAdd(ilit4CEA,mulRes4CED);
          int ilit4CEF#4 = 1;
          int addRes4CF0#1 = IAdd(ilit4CEF,mulRes4CED);
          real dof_load4CF1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CEE);
          real dof_load4CF2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF0);
          tensor[2] interCons4CF3#1 = <tensor[2]>[dof_load4CF1,dof_load4CF2];
          int idx4CF4#1 = Subscript<int>(femIndicies4CCF,ilit4CEF);
          int mulRes4CF5#2 = IMul(ilit4CEB,idx4CF4);
          int addRes4CF6#1 = IAdd(ilit4CEA,mulRes4CF5);
          int addRes4CF7#1 = IAdd(ilit4CEF,mulRes4CF5);
          real dof_load4CF8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF6);
          real dof_load4CF9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF7);
          tensor[2] interCons4CFA#1 = <tensor[2]>[dof_load4CF8,dof_load4CF9];
          int idx4CFB#1 = Subscript<int>(femIndicies4CCF,ilit4CEB);
          int mulRes4CFC#2 = IMul(ilit4CEB,idx4CFB);
          int addRes4CFD#1 = IAdd(ilit4CEA,mulRes4CFC);
          int addRes4CFE#1 = IAdd(ilit4CEF,mulRes4CFC);
          real dof_load4CFF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFD);
          real dof_load4D00#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFE);
          tensor[2] interCons4D01#1 = <tensor[2]>[dof_load4CFF,dof_load4D00];
          tensor[3,2] dofs4D02#1 = <tensor[3,2]>[interCons4CF3,interCons4CFA,interCons4D01];
          tensor[3,2] femDofs4CE9#18 = dofs4D02;
          real varAcc4D1E#0 = VIndex<2,0>(_t4CB7);
          real varAcc4D1F#0 = VIndex<2,1>(_t4CB7);
          real coeff4D20#1 = -0.1e1;
          real one4D21#3 = 0.1e1;
          real prod4D22#2 = RMul(one4D21,one4D21);
          real basisEval4D23#2 = RMul(coeff4D20,prod4D22);
          real basisEval4D24#2 = RMul(one4D21,prod4D22);
          real basisEval4D25#2 = 0.e0;
          tensor[3] intermediateCons4D26#1 = <tensor[3]>[basisEval4D23,basisEval4D24,basisEval4D25];
          tensor[3] intermediateCons4D27#1 = <tensor[3]>[basisEval4D23,basisEval4D25,basisEval4D24];
          tensor[2,3] intermediateCons4D28#1 = <tensor[2,3]>[intermediateCons4D26,intermediateCons4D27];
          tensor[2,3] basisResult4D1D#12 = intermediateCons4D28;
          real r4D36#2 = TensorIndex<tensor[3,2],[0,0]>(femDofs4CE9);
          real r4D37#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult4D1D);
          real r4D38#1 = RMul(r4D36,r4D37);
          real r4D39#2 = TensorIndex<tensor[3,2],[1,0]>(femDofs4CE9);
          real r4D3A#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult4D1D);
          real r4D3B#1 = RMul(r4D39,r4D3A);
          real r4D3C#2 = TensorIndex<tensor[3,2],[2,0]>(femDofs4CE9);
          real r4D3D#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult4D1D);
          real r4D3E#1 = RMul(r4D3C,r4D3D);
          real r4D3F#1 = RAdd(r4D38,r4D3B);
          real r4D40#1 = RAdd(r4D3F,r4D3E);
          real r4D41#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult4D1D);
          real r4D42#1 = RMul(r4D36,r4D41);
          real r4D43#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult4D1D);
          real r4D44#1 = RMul(r4D39,r4D43);
          real r4D45#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult4D1D);
          real r4D46#1 = RMul(r4D3C,r4D45);
          real r4D47#1 = RAdd(r4D42,r4D44);
          real r4D48#1 = RAdd(r4D47,r4D46);
          tensor[2] tensor4D49#1 = <tensor[2]>[r4D40,r4D48];
          real r4D4A#2 = TensorIndex<tensor[3,2],[0,1]>(femDofs4CE9);
          real r4D4B#1 = RMul(r4D4A,r4D37);
          real r4D4C#2 = TensorIndex<tensor[3,2],[1,1]>(femDofs4CE9);
          real r4D4D#1 = RMul(r4D4C,r4D3A);
          real r4D4E#2 = TensorIndex<tensor[3,2],[2,1]>(femDofs4CE9);
          real r4D4F#1 = RMul(r4D4E,r4D3D);
          real r4D50#1 = RAdd(r4D4B,r4D4D);
          real r4D51#1 = RAdd(r4D50,r4D4F);
          real r4D52#1 = RMul(r4D4A,r4D41);
          real r4D53#1 = RMul(r4D4C,r4D43);
          real r4D54#1 = RMul(r4D4E,r4D45);
          real r4D55#1 = RAdd(r4D52,r4D53);
          real r4D56#1 = RAdd(r4D55,r4D54);
          tensor[2] tensor4D57#1 = <tensor[2]>[r4D51,r4D56];
          tensor[2,2] probe_l_94D35#4 = <tensor[2,2]>[tensor4D49,tensor4D57];
          real realLit4D7D#4 = 0.e0;
          real r4D7E#2 = TensorIndex<tensor[2,2],[0,0]>(probe_l_94D35);
          real r4D7F#1 = RMul(realLit4D7D,r4D7E);
          real realLit4D80#2 = -0.1e1;
          real r4D81#2 = TensorIndex<tensor[2,2],[1,0]>(probe_l_94D35);
          real r4D82#1 = RMul(realLit4D80,r4D81);
          real r4D83#1 = RAdd(r4D7F,r4D82);
          real r4D84#2 = TensorIndex<tensor[2,2],[0,1]>(probe_l_94D35);
          real r4D85#1 = RMul(realLit4D7D,r4D84);
          real r4D86#2 = TensorIndex<tensor[2,2],[1,1]>(probe_l_94D35);
          real r4D87#1 = RMul(realLit4D80,r4D86);
          real r4D88#1 = RAdd(r4D85,r4D87);
          tensor[2] tensor4D89#1 = <tensor[2]>[r4D83,r4D88];
          real realLit4D8A#2 = 0.1e1;
          real r4D8B#1 = RMul(realLit4D8A,r4D7E);
          real r4D8C#1 = RMul(realLit4D7D,r4D81);
          real r4D8D#1 = RAdd(r4D8B,r4D8C);
          real r4D8E#1 = RMul(realLit4D8A,r4D84);
          real r4D8F#1 = RMul(realLit4D7D,r4D86);
          real r4D90#1 = RAdd(r4D8E,r4D8F);
          tensor[2] tensor4D91#1 = <tensor[2]>[r4D8D,r4D90];
          tensor[2,2] op1_e3_l_104D7C#4 = <tensor[2,2]>[tensor4D89,tensor4D91];
          real r4DAA#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4CE9);
          real r4DAB#2 = TensorIndex<tensor[2,3],[0,0]>(basisResult4D1D);
          real r4DAC#1 = RMul(r4DAA,r4DAB);
          real r4DAD#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4CE9);
          real r4DAE#2 = TensorIndex<tensor[2,3],[0,1]>(basisResult4D1D);
          real r4DAF#1 = RMul(r4DAD,r4DAE);
          real r4DB0#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4CE9);
          real r4DB1#2 = TensorIndex<tensor[2,3],[0,2]>(basisResult4D1D);
          real r4DB2#1 = RMul(r4DB0,r4DB1);
          real r4DB3#1 = RAdd(r4DAC,r4DAF);
          real r4DB4#1 = RAdd(r4DB3,r4DB2);
          real r4DB5#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4CE9);
          real r4DB6#1 = RMul(r4DB5,r4DAB);
          real r4DB7#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4CE9);
          real r4DB8#1 = RMul(r4DB7,r4DAE);
          real r4DB9#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4CE9);
          real r4DBA#1 = RMul(r4DB9,r4DB1);
          real r4DBB#1 = RAdd(r4DB6,r4DB8);
          real r4DBC#1 = RAdd(r4DBB,r4DBA);
          tensor[2] probe_l_114DA9#1 = <tensor[2]>[r4DB4,r4DBC];
          real r4DD3#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs4CE9);
          real r4DD4#2 = TensorIndex<tensor[2,3],[1,0]>(basisResult4D1D);
          real r4DD5#1 = RMul(r4DD3,r4DD4);
          real r4DD6#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs4CE9);
          real r4DD7#2 = TensorIndex<tensor[2,3],[1,1]>(basisResult4D1D);
          real r4DD8#1 = RMul(r4DD6,r4DD7);
          real r4DD9#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs4CE9);
          real r4DDA#2 = TensorIndex<tensor[2,3],[1,2]>(basisResult4D1D);
          real r4DDB#1 = RMul(r4DD9,r4DDA);
          real r4DDC#1 = RAdd(r4DD5,r4DD8);
          real r4DDD#1 = RAdd(r4DDC,r4DDB);
          real r4DDE#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs4CE9);
          real r4DDF#1 = RMul(r4DDE,r4DD4);
          real r4DE0#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs4CE9);
          real r4DE1#1 = RMul(r4DE0,r4DD7);
          real r4DE2#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs4CE9);
          real r4DE3#1 = RMul(r4DE2,r4DDA);
          real r4DE4#1 = RAdd(r4DDF,r4DE1);
          real r4DE5#1 = RAdd(r4DE4,r4DE3);
          tensor[2] probe_l_124DD2#2 = <tensor[2]>[r4DDD,r4DE5];
          real realLit4DFC#2 = 0.e0;
          real r4DFD#2 = TensorIndex<tensor[2],[0]>(probe_l_124DD2);
          real r4DFE#1 = RMul(realLit4DFC,r4DFD);
          real realLit4DFF#1 = 0.1e1;
          real r4E00#2 = TensorIndex<tensor[2],[1]>(probe_l_124DD2);
          real r4E01#1 = RMul(realLit4DFF,r4E00);
          real r4E02#1 = RAdd(r4DFE,r4E01);
          real realLit4E03#1 = -0.1e1;
          real r4E04#1 = RMul(realLit4E03,r4DFD);
          real r4E05#1 = RMul(realLit4DFC,r4E00);
          real r4E06#1 = RAdd(r4E04,r4E05);
          tensor[2] op1_e3_l_134DFB#1 = <tensor[2]>[r4E02,r4E06];
          real realLit4E15#4 = 0.e0;
          real r4E16#2 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_104D7C);
          real r4E17#1 = RMul(realLit4E15,r4E16);
          real realLit4E18#2 = -0.1e1;
          real r4E19#2 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_104D7C);
          real r4E1A#1 = RMul(realLit4E18,r4E19);
          real r4E1B#1 = RAdd(r4E17,r4E1A);
          real r4E1C#2 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_104D7C);
          real r4E1D#1 = RMul(realLit4E15,r4E1C);
          real r4E1E#2 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_104D7C);
          real r4E1F#1 = RMul(realLit4E18,r4E1E);
          real r4E20#1 = RAdd(r4E1D,r4E1F);
          tensor[2] tensor4E21#1 = <tensor[2]>[r4E1B,r4E20];
          real realLit4E22#2 = 0.1e1;
          real r4E23#1 = RMul(realLit4E22,r4E16);
          real r4E24#1 = RMul(realLit4E15,r4E19);
          real r4E25#1 = RAdd(r4E23,r4E24);
          real r4E26#1 = RMul(realLit4E22,r4E1C);
          real r4E27#1 = RMul(realLit4E15,r4E1E);
          real r4E28#1 = RAdd(r4E26,r4E27);
          tensor[2] tensor4E29#1 = <tensor[2]>[r4E25,r4E28];
          tensor[2,2] op1_e3_l_144E14#4 = <tensor[2,2]>[tensor4E21,tensor4E29];
          real op1_e3_l_154E41#4 = VDot<2>(probe_l_114DA9,op1_e3_l_134DFB);
          real r4E45#1 = TensorIndex<tensor[2,2],[0,0]>(op1_e3_l_144E14);
          real r4E46#1 = RDiv(r4E45,op1_e3_l_154E41);
          real r4E47#1 = TensorIndex<tensor[2,2],[0,1]>(op1_e3_l_144E14);
          real r4E48#1 = RDiv(r4E47,op1_e3_l_154E41);
          tensor[2] tensor4E49#1 = <tensor[2]>[r4E46,r4E48];
          real r4E4A#1 = TensorIndex<tensor[2,2],[1,0]>(op1_e3_l_144E14);
          real r4E4B#1 = RDiv(r4E4A,op1_e3_l_154E41);
          real r4E4C#1 = TensorIndex<tensor[2,2],[1,1]>(op1_e3_l_144E14);
          real r4E4D#1 = RDiv(r4E4C,op1_e3_l_154E41);
          tensor[2] tensor4E4E#1 = <tensor[2]>[r4E4B,r4E4D];
          tensor[2,2] op1_e3_l_164E44#2 = <tensor[2,2]>[tensor4E49,tensor4E4E];
          tensor[2] projParam4E5C#1 = ProjectLast<tensor[2,2],[0]>(op1_e3_l_164E44);
          real vdot4E5D#1 = VDot<2>(projParam4E5C,_t4CBD);
          tensor[2] projParam4E5E#1 = ProjectLast<tensor[2,2],[1]>(op1_e3_l_164E44);
          real vdot4E5F#1 = VDot<2>(projParam4E5E,_t4CBD);
          tensor[2] op1_e3_l_174E5B#5 = <tensor[2]>[vdot4E5D,vdot4E5F];
          real realLit4E67#2 = 0.e0;
          real r4E68#2 = TensorIndex<tensor[2],[0]>(_t4CCD);
          real r4E69#1 = RMul(realLit4E67,r4E68);
          real realLit4E6A#1 = 0.1e1;
          real r4E6B#2 = TensorIndex<tensor[2],[1]>(_t4CCD);
          real r4E6C#1 = RMul(realLit4E6A,r4E6B);
          real r4E6D#1 = RAdd(r4E69,r4E6C);
          real realLit4E6E#1 = -0.1e1;
          real r4E6F#1 = RMul(realLit4E6E,r4E68);
          real r4E70#1 = RMul(realLit4E67,r4E6B);
          real r4E71#1 = RAdd(r4E6F,r4E70);
          tensor[2] op1_e3_l_184E66#1 = <tensor[2]>[r4E6D,r4E71];
          real op1_e3_l_194E7F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184E66);
          real realLit4E83#1 = 0.1e1;
          real r4E84#2 = RDiv(realLit4E83,op1_e3_l_194E7F);
          real r4E85#1 = TensorIndex<tensor[2],[0]>(_t4CCD);
          real r4E86#1 = RMul(r4E84,r4E85);
          real r4E87#1 = TensorIndex<tensor[2],[1]>(_t4CCD);
          real r4E88#1 = RMul(r4E84,r4E87);
          tensor[2] op1_e3_l_204E82#2 = <tensor[2]>[r4E86,r4E88];
          tensor[2] op1_e3_l_214E91#1 = VSub<2>(_t4CC9,_t4CB1);
          real realLit4E95#2 = 0.e0;
          real r4E96#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_204E82);
          real r4E97#1 = RMul(realLit4E95,r4E96);
          real realLit4E98#1 = 0.1e1;
          real r4E99#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_204E82);
          real r4E9A#1 = RMul(realLit4E98,r4E99);
          real r4E9B#1 = RAdd(r4E97,r4E9A);
          real realLit4E9C#1 = -0.1e1;
          real r4E9D#1 = RMul(realLit4E9C,r4E96);
          real r4E9E#1 = RMul(realLit4E95,r4E99);
          real r4E9F#1 = RAdd(r4E9D,r4E9E);
          tensor[2] op1_e3_l_224E94#1 = <tensor[2]>[r4E9B,r4E9F];
          real _t4EAD#6 = VDot<2>(op1_e3_l_214E91,op1_e3_l_224E94);
          real _t4EB0#3 = -0.1e-15;
          bool _t4EB2#1 = GTE<real>(_t4EAD,_t4EB0);
          bool _t4EB4#1 = GT<real>(time4CC1,_t4EAD);
          real _t4EB6#1 = Abs<real>(op1_e3_l_194E7F);
          real _t4EB9#3 = 0.1e-20;
          bool _t4EBB#1 = GTE<real>(_t4EB6,_t4EB9);
          bool _t4EBD#1 = BAnd(_t4EB4,_t4EBB);
          bool _t4EBF#2 = BAnd(_t4EB2,_t4EBD);
          if _t4EBF then goto ASSIGN4EC3 else goto JOIN4ECE
        ASSIGN4EC3:  preds = [COND4EC1]
          int _t4EC2#2 = 0;
          bool _t4EC4#1 = NEQ<int>(_t4CBF,_t4EC2);
          if _t4EC4 then goto JOIN4ECA else goto JOIN4ECA
        JOIN4ECA:  preds = [COND4EC6,COND4EC6]
          real faceTime4EC7#1 = phi(faceTime4CC5,_t4EAD)
          int face4EC8#1 = phi(_t4EC2,face4CC3)
          real time4EC9#1 = phi(_t4EAD,time4CC1)
          goto JOIN4ECE
        JOIN4ECE:  preds = [JOIN4ECA,COND4EC1]
          real faceTime4ECB#2 = phi(faceTime4EC7,faceTime4CC5)
          int face4ECC#2 = phi(face4EC8,face4CC3)
          real time4ECD#3 = phi(time4EC9,time4CC1)
          tensor[2] _t4ECF#3 = <tensor[2]>[_t4CC7,_t4CC7];
          tensor[2] _t4ED1#5 = <tensor[2]>[_t4CC7,_t4C36];
          real realLit4ED4#2 = 0.e0;
          real r4ED5#2 = TensorIndex<tensor[2],[0]>(_t4ED1);
          real r4ED6#1 = RMul(realLit4ED4,r4ED5);
          real realLit4ED7#1 = 0.1e1;
          real r4ED8#2 = TensorIndex<tensor[2],[1]>(_t4ED1);
          real r4ED9#1 = RMul(realLit4ED7,r4ED8);
          real r4EDA#1 = RAdd(r4ED6,r4ED9);
          real realLit4EDB#1 = -0.1e1;
          real r4EDC#1 = RMul(realLit4EDB,r4ED5);
          real r4EDD#1 = RMul(realLit4ED4,r4ED8);
          real r4EDE#1 = RAdd(r4EDC,r4EDD);
          tensor[2] op1_e3_l_184ED3#1 = <tensor[2]>[r4EDA,r4EDE];
          real op1_e3_l_194EEC#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184ED3);
          real realLit4EF0#1 = 0.1e1;
          real r4EF1#2 = RDiv(realLit4EF0,op1_e3_l_194EEC);
          real r4EF2#1 = TensorIndex<tensor[2],[0]>(_t4ED1);
          real r4EF3#1 = RMul(r4EF1,r4EF2);
          real r4EF4#1 = TensorIndex<tensor[2],[1]>(_t4ED1);
          real r4EF5#1 = RMul(r4EF1,r4EF4);
          tensor[2] op1_e3_l_204EEF#2 = <tensor[2]>[r4EF3,r4EF5];
          tensor[2] op1_e3_l_214EFE#2 = VSub<2>(_t4ECF,_t4CB1);
          real realLit4F02#2 = 0.e0;
          real r4F03#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_204EEF);
          real r4F04#1 = RMul(realLit4F02,r4F03);
          real realLit4F05#1 = 0.1e1;
          real r4F06#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_204EEF);
          real r4F07#1 = RMul(realLit4F05,r4F06);
          real r4F08#1 = RAdd(r4F04,r4F07);
          real realLit4F09#1 = -0.1e1;
          real r4F0A#1 = RMul(realLit4F09,r4F03);
          real r4F0B#1 = RMul(realLit4F02,r4F06);
          real r4F0C#1 = RAdd(r4F0A,r4F0B);
          tensor[2] op1_e3_l_224F01#1 = <tensor[2]>[r4F08,r4F0C];
          real _t4F1A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F01);
          bool _t4F1D#2 = GTE<real>(_t4F1A,_t4EB0);
          bool _t4F1F#1 = GT<real>(time4ECD,_t4F1A);
          real _t4F21#1 = Abs<real>(op1_e3_l_194EEC);
          bool _t4F24#2 = GTE<real>(_t4F21,_t4EB9);
          bool _t4F26#1 = BAnd(_t4F1F,_t4F24);
          bool _t4F28#1 = BAnd(_t4F1D,_t4F26);
          if _t4F28 then goto ASSIGN4F2C else goto JOIN4F35
        ASSIGN4F2C:  preds = [COND4F2A]
          bool _t4F2B#1 = NEQ<int>(_t4CBF,_t4CA2);
          if _t4F2B then goto JOIN4F31 else goto JOIN4F31
        JOIN4F31:  preds = [COND4F2D,COND4F2D]
          real faceTime4F2E#1 = phi(faceTime4ECB,_t4F1A)
          int face4F2F#1 = phi(_t4CA2,face4ECC)
          real time4F30#1 = phi(_t4F1A,time4ECD)
          goto JOIN4F35
        JOIN4F35:  preds = [JOIN4F31,COND4F2A]
          real faceTime4F32#2 = phi(faceTime4F2E,faceTime4ECB)
          int face4F33#2 = phi(face4F2F,face4ECC)
          real time4F34#3 = phi(time4F30,time4ECD)
          real realLit4F37#2 = 0.e0;
          real r4F38#2 = TensorIndex<tensor[2],[0]>(_t4CC9);
          real r4F39#1 = RMul(realLit4F37,r4F38);
          real realLit4F3A#1 = 0.1e1;
          real r4F3B#2 = TensorIndex<tensor[2],[1]>(_t4CC9);
          real r4F3C#1 = RMul(realLit4F3A,r4F3B);
          real r4F3D#1 = RAdd(r4F39,r4F3C);
          real realLit4F3E#1 = -0.1e1;
          real r4F3F#1 = RMul(realLit4F3E,r4F38);
          real r4F40#1 = RMul(realLit4F37,r4F3B);
          real r4F41#1 = RAdd(r4F3F,r4F40);
          tensor[2] op1_e3_l_184F36#1 = <tensor[2]>[r4F3D,r4F41];
          real op1_e3_l_194F4F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184F36);
          real realLit4F53#1 = 0.1e1;
          real r4F54#2 = RDiv(realLit4F53,op1_e3_l_194F4F);
          real r4F55#1 = TensorIndex<tensor[2],[0]>(_t4CC9);
          real r4F56#1 = RMul(r4F54,r4F55);
          real r4F57#1 = TensorIndex<tensor[2],[1]>(_t4CC9);
          real r4F58#1 = RMul(r4F54,r4F57);
          tensor[2] op1_e3_l_204F52#2 = <tensor[2]>[r4F56,r4F58];
          real realLit4F62#2 = 0.e0;
          real r4F63#2 = TensorIndex<tensor[2],[0]>(op1_e3_l_204F52);
          real r4F64#1 = RMul(realLit4F62,r4F63);
          real realLit4F65#1 = 0.1e1;
          real r4F66#2 = TensorIndex<tensor[2],[1]>(op1_e3_l_204F52);
          real r4F67#1 = RMul(realLit4F65,r4F66);
          real r4F68#1 = RAdd(r4F64,r4F67);
          real realLit4F69#1 = -0.1e1;
          real r4F6A#1 = RMul(realLit4F69,r4F63);
          real r4F6B#1 = RMul(realLit4F62,r4F66);
          real r4F6C#1 = RAdd(r4F6A,r4F6B);
          tensor[2] op1_e3_l_224F61#1 = <tensor[2]>[r4F68,r4F6C];
          real _t4F7A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F61);
          bool _t4F7D#2 = GTE<real>(_t4F7A,_t4EB0);
          bool _t4F7F#1 = GT<real>(time4F34,_t4F7A);
          real _t4F81#1 = Abs<real>(op1_e3_l_194F4F);
          bool _t4F84#2 = GTE<real>(_t4F81,_t4EB9);
          bool _t4F86#1 = BAnd(_t4F7F,_t4F84);
          bool _t4F88#1 = BAnd(_t4F7D,_t4F86);
          if _t4F88 then goto ASSIGN4F8C else goto JOIN4F97
        ASSIGN4F8C:  preds = [COND4F8A]
          int _t4F8B#2 = 2;
          bool _t4F8D#1 = NEQ<int>(_t4CBF,_t4F8B);
          if _t4F8D then goto JOIN4F93 else goto JOIN4F93
        JOIN4F93:  preds = [COND4F8F,COND4F8F]
          real faceTime4F90#1 = phi(faceTime4F32,_t4F7A)
          int face4F91#1 = phi(_t4F8B,face4F33)
          real time4F92#1 = phi(_t4F7A,time4F34)
          goto JOIN4F97
        JOIN4F97:  preds = [JOIN4F93,COND4F8A]
          real faceTime4F94#2 = phi(faceTime4F90,faceTime4F32)
          int face4F95#2 = phi(face4F91,face4F33)
          real time4F96#1 = phi(time4F92,time4F34)
          bool _t4F98#1 = NEQ<int>(face4F95,face4CC3);
          if _t4F98 then goto ASSIGN4F9C else goto ASSIGN51E4
        ASSIGN4F9C:  preds = [COND4F9A]
          real _t4F9B#1 = Max<real>(time4F96,_t4CC7);
          real _t4F9D#1 = IntToReal(face4F95);
          tensor[2] _t4F9F#1 = <tensor[2]>[_t4F9B,_t4F9D];
          goto JOIN4FA3
        JOIN4FA3:  preds = [ASSIGN4FA0,JOIN51E9]
          tensor[2] _t4FA1#1 = phi(_t4F9F,_t4FA2)
          real nextTime4FA4#3 = VIndex<2,0>(_t4FA1);
          real op1_e3_l_34FA6#1 = RSub(camFarVsp4B51,rayN4B61);
          real op1_e3_l_44FA9#1 = RMul(nextTime4FA4,op1_e3_l_34FA6);
          real _t4FAC#1 = RAdd(rayN4B61,op1_e3_l_44FA9);
          real _t4FAF#1 = Min<real>(camFarVsp4B51,_t4FAC);
          real rayNp4FB1#6 = Max<real>(rayN4B61,_t4FAF);
          string _t4FB3#1 = "Next time:";
          Print<[string,real,string]>(_t4FB3,nextTime4FA4,_t4B73);
          bool _t4FB6#1 = GTE<real>(nextTime4FA4,_t4CC7);
          if _t4FB6 then goto ASSIGN4FBA else goto JOIN50B2
        ASSIGN4FBA:  preds = [COND4FB8]
          tensor[2] _t4FB9#1 = <tensor[2]>[rayN4B61,rayNp4FB1];
          tensor[2][] rayCellInter4FBB#3 = Append<tensor[2]>(rayCellInter4B59,_t4FB9);
          int _t4FBD#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos4B67);
          if _t4EBF then goto ASSIGN4FC1 else goto JOIN4FCC
        ASSIGN4FC1:  preds = [COND4FBF]
          int _t4FC0#2 = 0;
          bool _t4FC2#1 = NEQ<int>(_t4CBF,_t4FC0);
          if _t4FC2 then goto JOIN4FC8 else goto JOIN4FC8
        JOIN4FC8:  preds = [COND4FC4,COND4FC4]
          real faceTime4FC5#1 = phi(faceTime4CC5,_t4EAD)
          int face4FC6#1 = phi(_t4FC0,face4CC3)
          real time4FC7#1 = phi(_t4EAD,time4CC1)
          goto JOIN4FCC
        JOIN4FCC:  preds = [JOIN4FC8,COND4FBF]
          real faceTime4FC9#2 = phi(faceTime4FC5,faceTime4CC5)
          int face4FCA#2 = phi(face4FC6,face4CC3)
          real time4FCB#3 = phi(time4FC7,time4CC1)
          bool _t4FCD#1 = GT<real>(time4FCB,_t4F1A);
          bool _t4FCF#1 = BAnd(_t4FCD,_t4F24);
          bool _t4FD1#1 = BAnd(_t4F1D,_t4FCF);
          if _t4FD1 then goto ASSIGN4FD5 else goto JOIN4FDE
        ASSIGN4FD5:  preds = [COND4FD3]
          bool _t4FD4#1 = NEQ<int>(_t4CBF,_t4CA2);
          if _t4FD4 then goto JOIN4FDA else goto JOIN4FDA
        JOIN4FDA:  preds = [COND4FD6,COND4FD6]
          real faceTime4FD7#1 = phi(faceTime4FC9,_t4F1A)
          int face4FD8#1 = phi(_t4CA2,face4FCA)
          real time4FD9#1 = phi(_t4F1A,time4FCB)
          goto JOIN4FDE
        JOIN4FDE:  preds = [JOIN4FDA,COND4FD3]
          real faceTime4FDB#2 = phi(faceTime4FD7,faceTime4FC9)
          int face4FDC#2 = phi(face4FD8,face4FCA)
          real time4FDD#3 = phi(time4FD9,time4FCB)
          bool _t4FDF#1 = GT<real>(time4FDD,_t4F7A);
          bool _t4FE1#1 = BAnd(_t4FDF,_t4F84);
          bool _t4FE3#1 = BAnd(_t4F7D,_t4FE1);
          if _t4FE3 then goto ASSIGN4FE7 else goto JOIN4FF2
        ASSIGN4FE7:  preds = [COND4FE5]
          int _t4FE6#2 = 2;
          bool _t4FE8#1 = NEQ<int>(_t4CBF,_t4FE6);
          if _t4FE8 then goto JOIN4FEE else goto JOIN4FEE
        JOIN4FEE:  preds = [COND4FEA,COND4FEA]
          real faceTime4FEB#1 = phi(faceTime4FDB,_t4F7A)
          int face4FEC#1 = phi(_t4FE6,face4FDC)
          real time4FED#1 = phi(_t4F7A,time4FDD)
          goto JOIN4FF2
        JOIN4FF2:  preds = [JOIN4FEE,COND4FE5]
          real faceTime4FEF#2 = phi(faceTime4FEB,faceTime4FDB)
          int face4FF0#2 = phi(face4FEC,face4FDC)
          real time4FF1#1 = phi(time4FED,time4FDD)
          bool _t4FF3#1 = NEQ<int>(face4FF0,face4CC3);
          if _t4FF3 then goto ASSIGN4FF7 else goto ASSIGN51DA
        ASSIGN4FF7:  preds = [COND4FF5]
          real _t4FF6#1 = Max<real>(time4FF1,_t4CC7);
          real _t4FF8#1 = IntToReal(face4FF0);
          tensor[2] _t4FFA#1 = <tensor[2]>[_t4FF6,_t4FF8];
          goto JOIN4FFE
        JOIN4FFE:  preds = [ASSIGN4FFB,JOIN51DF]
          tensor[2] _t4FFC#3 = phi(_t4FFA,_t4FFD)
          real _t4FFF#1 = VIndex<2,1>(_t4FFC);
          real t5001#1 = Floor<1>(_t4FFF);
          int _t5003#6 = RealToInt<1>(t5001);
          int[2] _t5005#2 = nextCell45006 (_t5003,_t4FBD,_t4B7D);
          int _t5019#4 = 0;
          int _t501B#2 = Subscript<int[2]>(_t5005,_t5019);
          bool _t501D#1 = NEQ<int>(face4CC3,_t501B);
          if _t501D then goto ASSIGN5021 else goto ASSIGN51D1
        ASSIGN5021:  preds = [COND501F]
          tensor[2][3] _t5020#1 = <tensor[2][3]>{_t4CC9,_t4ECF,_t4ECF};
          int _t5022#3 = Subscript<int[2]>(_t5005,_t4CA2);
          tensor[2] _t5024#1 = Subscript<tensor[2][3]>(_t5020,_t5022);
          tensor[2][3] _t5026#1 = <tensor[2][3]>{_t4CCD,_t4ED1,_t4CC9};
          tensor[2] _t5028#1 = Subscript<tensor[2][3]>(_t5026,_t5022);
          real _t502A#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_16502C#1 = VScale<2>(_t502A,op1_e3_l_174E5B);
          tensor[2] _t502F#2 = VAdd<2>(op1_e3_l_16502C,_t4CB1);
          real _t5032#1 = VIndex<2,0>(_t502F);
          real _t5034#1 = VIndex<2,1>(_t502F);
          real[2] _t5036#1 = <real[2]>{_t5032,_t5034};
          int[3] _t5038#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t503A#1 = Subscript<int[3]>(_t5038,_t5003);
          real _t503C#1 = Subscript<real[2]>(_t5036,_t503A);
          real[2] _t503E#1 = <real[2]>{_t4C36,_t4CC7};
          real[2] _t5040#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2] _t5042#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2][3] _t5044#1 = <real[2][3]>{_t503E,_t5040,_t5042};
          real[2] _t5046#1 = Subscript<real[2][3]>(_t5044,_t5003);
          int[3] _t5048#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t504A#1 = Subscript<int[3]>(_t5048,_t5003);
          real _t504C#1 = Subscript<real[2]>(_t5046,_t504A);
          real[2] _t504E#1 = <real[2]>{_t4CCB,_t4C36};
          real[2] _t5050#1 = <real[2]>{_t4CC7,_t4C36};
          real[2] _t5052#1 = <real[2]>{_t4C36,_t4CC7};
          real[2][3] _t5054#1 = <real[2][3]>{_t504E,_t5050,_t5052};
          real[2] _t5056#1 = Subscript<real[2][3]>(_t5054,_t5003);
          int[3] _t5058#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t505A#1 = Subscript<int[3]>(_t5058,_t5003);
          real _t505C#1 = Subscript<real[2]>(_t5056,_t505A);
          real op1_e3_l_5505E#1 = RSub(_t503C,_t504C);
          real op1_e3_l_65061#1 = RDiv(op1_e3_l_5505E,_t505C);
          tensor[2] op1_e3_l_75064#1 = VScale<2>(op1_e3_l_65061,_t5028);
          tensor[2] _t5067#1 = VAdd<2>(_t5024,op1_e3_l_75064);
          femData:MeshPos _t506A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t4B7D,_t501B,_t5067,_t5022);
          goto JOIN506E
        JOIN506E:  preds = [ASSIGN506B,ASSIGN51D8]
          femData:MeshPos posp506C#5 = phi(_t506A,_t506D)
          bool _t506F#1 = GTE<real>(rayNp4FB1,camFarVsp4B51);
          if _t506F then goto ASSIGN5073 else goto JOIN5083
        ASSIGN5073:  preds = [COND5071]
          string _t5072#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t5072,cellInter4B5F,_t4B73);
          tensor[3] op1_e3_l_35075#1 = VScale<3>(camFarVsp4B51,rayVec4B4F);
          tensor[3] _t5078#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35075);
          tensor[3][] spaceInter507B#1 = Append<tensor[3]>(spaceInter4B5B,_t5078);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter507B;
          self.rayN = rayNp4FB1;
          self.steps = steps4CA4;
          stabilize
          goto JOIN5083
        JOIN5083:  preds = [*STABILIZE5081,COND5071]
          tensor[3][] spaceInter5082#1 = phi(spaceInter4B5B)
          tensor[3] op1_e3_l_35084#1 = VScale<3>(rayNp4FB1,rayVec4B4F);
          tensor[3] _t5087#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35084);
          tensor[3][] spaceInter508A#2 = Append<tensor[3]>(spaceInter5082,_t5087);
          tensor[2] _t508C#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp506C);
          tensor[2][] refSpaceInter508E#2 = Append<tensor[2]>(refSpaceInter4B5D,_t508C);
          bool _t5090#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp506C);
          if _t5090 then goto ASSIGN5094 else goto ASSIGN51CE
        ASSIGN5094:  preds = [COND5092]
          string _t5093#1 = "Next cell:";
          femData:Mesh _t5095#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp506C);
          int _t5097#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp506C);
          femData:MeshCell _t5099#3 = LoadFem<femData:MeshCell>(_t5095,_t5097);
          Print<[string,femData:MeshCell,string]>(_t5093,_t5099,_t4B73);
          femData:MeshCell[] cellInter509C#1 = Append<femData:MeshCell>(cellInter4B5F,_t5099);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter508A;
          self.refSpaceInter = refSpaceInter508E;
          self.cellInter = cellInter509C;
          self.rayN = rayNp4FB1;
          self.currentCell = _t5099;
          self.steps = steps4CA4;
          self.pos = posp506C;
          active
          goto JOIN50AA
        JOIN50AA:  preds = [*ACTIVE50A6,MASSIGN51CF]
          femData:MeshPos pos50A7#1 = phi(pos4B67)
          femData:MeshCell currentCell50A8#1 = phi(currentCell4B63)
          femData:MeshCell[] cellInter50A9#1 = phi(cellInter4B5F)
          goto JOIN50B2
        JOIN50B2:  preds = [JOIN50AA,COND4FB8]
          femData:MeshPos pos50AB#6 = phi(pos50A7,pos4B67)
          femData:MeshCell currentCell50AC#1 = phi(currentCell50A8,currentCell4B63)
          real rayN50AD#3 = phi(rayNp4FB1,rayN4B61)
          femData:MeshCell[] cellInter50AE#3 = phi(cellInter50A9,cellInter4B5F)
          tensor[2][] refSpaceInter50AF#2 = phi(refSpaceInter508E,refSpaceInter4B5D)
          tensor[3][] spaceInter50B0#2 = phi(spaceInter508A,spaceInter4B5B)
          tensor[2][] rayCellInter50B1#3 = phi(rayCellInter4FBB,rayCellInter4B59)
          int _t50B3#1 = 0;
          int _t50B5#1 = ISub(cellIntersects4B57,_t4CA2);
          int[] _t50B7#1 = Range(_t50B3,_t50B5);
        FOREACH50BA:  preds = [ASSIGN50B8,NEXT50E3]
          foreach (i50B9 in _t50B7) on exit goto ASSIGN50E5
            real estimate50C3#4 = phi(camFarVsp4B51,estimate50E0)
            int newIdx50DB#7 = phi(face4CC3,newIdx50E1)
          real t50BB#3 = Subscript<real[]>(normalizedTimes4B55,i50B9);
          femData:MeshPos posp50BD#2 = Subscript<femData:MeshPos[]>(poses4B53,i50B9);
          bool _t50BF#1 = GTE<real>(t50BB,rayN50AD);
          if _t50BF then goto ASSIGN50C4 else goto JOIN50E2
        ASSIGN50C4:  preds = [COND50C1]
          bool _t50C2#1 = GTE<real>(estimate50C3,t50BB);
          if _t50C2 then goto ASSIGN50C7 else goto JOIN50DF
        ASSIGN50C7:  preds = [COND50C5]
          femData:Mesh _t50C6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp50BD);
          int _t50C8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp50BD);
          femData:MeshCell _t50CA#1 = LoadFem<femData:MeshCell>(_t50C6,_t50C8);
          femData:Mesh _t50CC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int _t50CE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:MeshCell _t50D0#1 = LoadFem<femData:MeshCell>(_t50CC,_t50CE);
          int _t50D2#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50CA);
          int _t50D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50D0);
          bool _t50D6#1 = NEQ<int>(_t50D2,_t50D4);
          if _t50D6 then goto JOIN50DC else goto JOIN50DC
        JOIN50DC:  preds = [COND50D8,COND50D8]
          real estimate50D9#1 = phi(t50BB,estimate50C3)
          int newIdx50DA#1 = phi(i50B9,newIdx50DB)
          goto JOIN50DF
        JOIN50DF:  preds = [JOIN50DC,COND50C5]
          real estimate50DD#1 = phi(estimate50D9,estimate50C3)
          int newIdx50DE#1 = phi(newIdx50DA,newIdx50DB)
          goto JOIN50E2
        JOIN50E2:  preds = [JOIN50DF,COND50C1]
          real estimate50E0#1 = phi(estimate50DD,estimate50C3)
          int newIdx50E1#1 = phi(newIdx50DE,newIdx50DB)
          goto FOREACH50BA
        ASSIGN50E5:  preds = [FOREACH50BA]
          bool _t50E4#1 = GT<int>(newIdx50DB,face4CC3);
          if _t50E4 then goto ASSIGN50E8 else goto ASSIGN51B9
        ASSIGN50E8:  preds = [COND50E6]
          string _t50E7#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t50E7);
          if startsInside4B69 then goto ASSIGN50EC else goto JOIN50EE
        ASSIGN50EC:  preds = [COND50EA]
          string _t50EB#1 = "because of an inside\n";
          Print<[string]>(_t50EB);
          goto JOIN50EE
        JOIN50EE:  preds = [MASSIGN50ED,COND50EA]
          string _t50EF#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t50EF,rayVec4B4F,_t4B73);
          string _t50F2#1 = "world pos was:";
          tensor[2] _t50F4#3 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos50AB);
          int _t50F6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:Mesh _t50F8#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int ilit50FB#1 = 3;
          int mulRes50FC#3 = IMul(_t50F6,ilit50FB);
          int ilit50FD#1 = 0;
          int addRes50FE#1 = IAdd(mulRes50FC,ilit50FD);
          int idx50FF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes50FE);
          int ilit5100#1 = 1;
          int addRes5101#1 = IAdd(mulRes50FC,ilit5100);
          int idx5102#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5101);
          int ilit5103#1 = 2;
          int addRes5104#1 = IAdd(mulRes50FC,ilit5103);
          int idx5105#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5104);
          int[3] seq5106#1 = <int[3]>{idx50FF,idx5102,idx5105};
          int[3] femIndicies50FA#3 = seq5106;
          int ilit5115#4 = 0;
          int ilit5116#4 = 2;
          int idx5117#1 = Subscript<int>(femIndicies50FA,ilit5115);
          int mulRes5118#2 = IMul(ilit5116,idx5117);
          int addRes5119#1 = IAdd(ilit5115,mulRes5118);
          int ilit511A#4 = 1;
          int addRes511B#1 = IAdd(ilit511A,mulRes5118);
          real dof_load511C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5119);
          real dof_load511D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes511B);
          tensor[2] interCons511E#1 = <tensor[2]>[dof_load511C,dof_load511D];
          int idx511F#1 = Subscript<int>(femIndicies50FA,ilit511A);
          int mulRes5120#2 = IMul(ilit5116,idx511F);
          int addRes5121#1 = IAdd(ilit5115,mulRes5120);
          int addRes5122#1 = IAdd(ilit511A,mulRes5120);
          real dof_load5123#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5121);
          real dof_load5124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5122);
          tensor[2] interCons5125#1 = <tensor[2]>[dof_load5123,dof_load5124];
          int idx5126#1 = Subscript<int>(femIndicies50FA,ilit5116);
          int mulRes5127#2 = IMul(ilit5116,idx5126);
          int addRes5128#1 = IAdd(ilit5115,mulRes5127);
          int addRes5129#1 = IAdd(ilit511A,mulRes5127);
          real dof_load512A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5128);
          real dof_load512B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5129);
          tensor[2] interCons512C#1 = <tensor[2]>[dof_load512A,dof_load512B];
          tensor[3,2] dofs512D#1 = <tensor[3,2]>[interCons511E,interCons5125,interCons512C];
          tensor[3,2] femDofs5114#6 = dofs512D;
          real varAcc5149#1 = VIndex<2,0>(_t50F4);
          real varAcc514A#1 = VIndex<2,1>(_t50F4);
          real coeff514B#2 = -0.1e1;
          real iden514C#1 = varAcc5149;
          real one514D#7 = 0.1e1;
          real prod514E#2 = RMul(iden514C,one514D);
          real iden514F#1 = varAcc514A;
          real prod5150#2 = RMul(one514D,iden514F);
          real prod5151#1 = RMul(one514D,one514D);
          real mult5152#1 = RMul(one514D,prod5151);
          real mult5153#1 = RMul(coeff514B,prod5150);
          real mult5154#1 = RMul(coeff514B,prod514E);
          real sum5155#1 = RAdd(mult5153,mult5154);
          real sum5156#1 = RAdd(mult5152,sum5155);
          real intermediate5157#1 = sum5156;
          real basisEval5158#1 = RMul(one514D,prod514E);
          real basisEval5159#1 = RMul(one514D,prod5150);
          tensor[3] intermediateCons515A#1 = <tensor[3]>[intermediate5157,basisEval5158,basisEval5159];
          tensor[3] basisResult5148#3 = intermediateCons515A;
          real r516F#1 = TensorIndex<tensor[3,2],[0,0]>(femDofs5114);
          real r5170#2 = TensorIndex<tensor[3],[0]>(basisResult5148);
          real r5171#1 = RMul(r516F,r5170);
          real r5172#1 = TensorIndex<tensor[3,2],[1,0]>(femDofs5114);
          real r5173#2 = TensorIndex<tensor[3],[1]>(basisResult5148);
          real r5174#1 = RMul(r5172,r5173);
          real r5175#1 = TensorIndex<tensor[3,2],[2,0]>(femDofs5114);
          real r5176#2 = TensorIndex<tensor[3],[2]>(basisResult5148);
          real r5177#1 = RMul(r5175,r5176);
          real r5178#1 = RAdd(r5171,r5174);
          real r5179#1 = RAdd(r5178,r5177);
          real r517A#1 = TensorIndex<tensor[3,2],[0,1]>(femDofs5114);
          real r517B#1 = RMul(r517A,r5170);
          real r517C#1 = TensorIndex<tensor[3,2],[1,1]>(femDofs5114);
          real r517D#1 = RMul(r517C,r5173);
          real r517E#1 = TensorIndex<tensor[3,2],[2,1]>(femDofs5114);
          real r517F#1 = RMul(r517E,r5176);
          real r5180#1 = RAdd(r517B,r517D);
          real r5181#1 = RAdd(r5180,r517F);
          tensor[2] _t516E#1 = <tensor[2]>[r5179,r5181];
          Print<[string,tensor[2],string]>(_t50F2,_t516E,_t4B73);
          string _t5198#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t5198,_t50F4,_t4B73);
          string _t519B#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes4B55,_t519B,newIdx50DB,_t4B73);
          string _t519E#1 = "Original time was:";
          Print<[string,real,string]>(_t519E,rayN50AD,_t4B73);
          femData:MeshPos pos51A1#3 = Subscript<femData:MeshPos[]>(poses4B53,newIdx50DB);
          femData:Mesh _t51A3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos51A1);
          int _t51A5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos51A1);
          femData:MeshCell currentCell51A7#2 = LoadFem<femData:MeshCell>(_t51A3,_t51A5);
          femData:MeshCell[] cellInter51A9#1 = Append<femData:MeshCell>(cellInter50AE,currentCell51A7);
          real rayN51AB#1 = Subscript<real[]>(normalizedTimes4B55,newIdx50DB);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter51A9;
          self.rayN = rayN51AB;
          self.currentCell = currentCell51A7;
          self.steps = steps4CA4;
          self.pos = pos51A1;
          active
          goto JOIN51B6
        JOIN51B6:  preds = [*ACTIVE51B5,*STABILIZE51CC]
          unreachable
        ASSIGN51B9:  preds = [COND50E6]
          string _t51B8#1 = "Enter times:";
          Print<[string,real[],string]>(_t51B8,normalizedTimes4B55,_t4B73);
          string _t51BB#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t51BB,rayCellInter50B1,_t4B73);
          string _t51BE#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t51BE,cellInter50AE,_t4B73);
          string _t51C1#1 = "End\n";
          Print<[string]>(_t51C1);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter50AE;
          self.rayN = rayN50AD;
          self.currentCell = currentCell50AC;
          self.steps = steps4CA4;
          self.pos = pos50AB;
          stabilize
          goto JOIN51B6
        ASSIGN51CE:  preds = [COND5092]
          string _t51CD#1 = "Invalid\n";
          Print<[string]>(_t51CD);
          goto JOIN50AA
        ASSIGN51D1:  preds = [COND501F]
          real _t51D0#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_1651D2#1 = VScale<2>(_t51D0,op1_e3_l_174E5B);
          tensor[2] _t51D5#1 = VAdd<2>(op1_e3_l_1651D2,_t4CB1);
          femData:MeshPos _t506D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t4B7D,_t51D5);
          goto JOIN506E
        ASSIGN51DA:  preds = [COND4FF5]
          bool _t51D9#1 = EQ<real>(faceTime4CC5,faceTime4FEF);
          if _t51D9 then goto ASSIGN51DD else goto ASSIGN51E1
        ASSIGN51DD:  preds = [COND51DB]
          tensor[2] _t51DC#1 = <tensor[2]>[_t4CCB,_t4CCB];
          goto JOIN51DF
        JOIN51DF:  preds = [ASSIGN51DD,ASSIGN51E2]
          tensor[2] _t4FFD#1 = phi(_t51DC,_t51DE)
          goto JOIN4FFE
        ASSIGN51E1:  preds = [COND51DB]
          real _t51E0#1 = IntToReal(_t4CBF);
          tensor[2] _t51DE#1 = <tensor[2]>[faceTime4FEF,_t51E0];
          goto JOIN51DF
        ASSIGN51E4:  preds = [COND4F9A]
          bool _t51E3#1 = EQ<real>(faceTime4CC5,faceTime4F94);
          if _t51E3 then goto ASSIGN51E7 else goto ASSIGN51EB
        ASSIGN51E7:  preds = [COND51E5]
          tensor[2] _t51E6#1 = <tensor[2]>[_t4CCB,_t4CCB];
          goto JOIN51E9
        JOIN51E9:  preds = [ASSIGN51E7,ASSIGN51EC]
          tensor[2] _t4FA2#1 = phi(_t51E6,_t51E8)
          goto JOIN4FA3
        ASSIGN51EB:  preds = [COND51E5]
          real _t51EA#1 = IntToReal(_t4CBF);
          tensor[2] _t51E8#1 = <tensor[2]>[faceTime4F94,_t51EA];
          goto JOIN51E9
        ASSIGN51EE:  preds = [COND4C9D]
          string _t51ED#1 = "Did not move off ray!\n";
          Print<[string]>(_t51ED);
          goto JOIN4CA1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY51F1:  preds = []
      int iresU51F2#1 = globals.iresU3FCF;
      int iresV51F4#1 = globals.iresV3FD0;
      int _t51F6#2 = 0;
      int _t51F8#2 = 1;
      int _t51FA#1 = ISub(iresU51F2,_t51F8);
      int[] _t51FC#1 = Range(_t51F6,_t51FA);
    FOREACH51FF:  preds = [ASSIGN51FD,NEXT5208]
      foreach (vi51FE in _t51FC) on exit goto RETURN5209
      int _t5200#1 = ISub(iresV51F4,_t51F8);
      int[] _t5202#1 = Range(_t51F6,_t5200);
    FOREACH5205:  preds = [ASSIGN5203,NEXT5207]
      foreach (ui5204 in _t5202) on exit goto NEXT5208
      new ray(ui5204,vi51FE);
      goto FOREACH5205
    NEXT5208:  preds = [FOREACH5205]
      goto FOREACH51FF
    RETURN5209:  preds = [FOREACH51FF]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a3FC8 (a) = <no-default>
  input isoval3FC9 (isoval) = <default>
  input thick3FCA (thick) = <default>
  input camEye3FCB (camEye) = <default>
  input camAt3FCC (camAt) = <default>
  input camUp3FCD (camUp) = <default>
  input camFOV3FCE (camFOV) = <default>
  input iresU3FCF (iresU) = <default>
  input iresV3FD0 (iresV) = <default>
  input camNear3FD1 (camNear) = <default>
  input camFar3FD2 (camFar) = <default>
  input refStep3FD3 (refStep) = <default>
  input rayStep3FD4 (rayStep) = <default>
  input lightVsp3FD5 (lightVsp) = <default>
  input phongKa3FD6 (phongKa) = <default>
  input phongKd3FD7 (phongKd) = <default>
  input debug3FD8 (debug) = <default>
  input debugU3FD9 (debugU) = <default>
  input debugV3FDA (debugV) = <default>
  input eps3FDB (eps) = <default>
  global femData:MeshCell[] 0cell_a3FDC
  global real camNearVsp3FDD
  global real camFarVsp3FDE
  global tensor[3] camN3FDF
  global tensor[3] camU3FE0
  global tensor[3] camV3FE1
  global real camVmax3FE2
  global real camUmax3FE3
## functions
  function femData:MeshPos _msh_newtonInverse4281 (tensor[2] pos4282#3, int cellInt4283#2, femData:Mesh mesh4284#12) {
    ENTRY4285:  preds = []
      real _t4286#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn4288#1 = <tensor[2]>[_t4286,_t4286];
      int _t428A#1 = 0;
      int _t428C#1 = 16;
      int[] _t428E#1 = Range(_t428A,_t428C);
    FOREACH4291:  preds = [ASSIGN428F,NEXT44E8]
      foreach (itter4290 in _t428E) on exit goto ASSIGN44ED
        tensor[2] xn4408#3 = phi(xn4288,xn447C)
      int ilit4293#1 = 3;
      int mulRes4294#3 = IMul(cellInt4283,ilit4293);
      int addRes4296#1 = mulRes4294;
      int idx4297#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4296);
      int ilit4298#1 = 1;
      int addRes4299#1 = IAdd(mulRes4294,ilit4298);
      int idx429A#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4299);
      int ilit429B#1 = 2;
      int addRes429C#1 = IAdd(mulRes4294,ilit429B);
      int idx429D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes429C);
      int ilit42AE#3 = 2;
      int idx42AF#1 = idx4297;
      int mulRes42B0#2 = IMul(ilit42AE,idx42AF);
      int addRes42B1#1 = mulRes42B0;
      int ilit42B2#3 = 1;
      int addRes42B3#1 = IAdd(ilit42B2,mulRes42B0);
      real dof_load42B4#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B1);
      real dof_load42B5#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B3);
      int idx42B7#1 = idx429A;
      int mulRes42B8#2 = IMul(ilit42AE,idx42B7);
      int addRes42B9#1 = mulRes42B8;
      int addRes42BA#1 = IAdd(ilit42B2,mulRes42B8);
      real dof_load42BB#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B9);
      real dof_load42BC#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42BA);
      int idx42BE#1 = idx429D;
      int mulRes42BF#2 = IMul(ilit42AE,idx42BE);
      int addRes42C0#1 = mulRes42BF;
      int addRes42C1#1 = IAdd(ilit42B2,mulRes42BF);
      real dof_load42C2#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C0);
      real dof_load42C3#5 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C1);
      real coeff42E3#1 = -0.1e1;
      real one42E4#3 = 0.1e1;
      real prod42E5#2 = RMul(one42E4,one42E4);
      real basisEval42E6#4 = RMul(coeff42E3,prod42E5);
      real basisEval42E7#4 = RMul(one42E4,prod42E5);
      real basisEval42E8#4 = 0.e0;
      real r42F9#2 = dof_load42B4;
      real r42FA#2 = basisEval42E6;
      real r42FB#1 = RMul(r42F9,r42FA);
      real r42FC#2 = dof_load42BB;
      real r42FD#2 = basisEval42E7;
      real r42FE#1 = RMul(r42FC,r42FD);
      real r42FF#2 = dof_load42C2;
      real r4300#2 = basisEval42E8;
      real r4301#1 = RMul(r42FF,r4300);
      real r4302#1 = RAdd(r42FB,r42FE);
      real r4303#1 = RAdd(r4302,r4301);
      real r4304#2 = basisEval42E6;
      real r4305#1 = RMul(r42F9,r4304);
      real r4306#2 = basisEval42E8;
      real r4307#1 = RMul(r42FC,r4306);
      real r4308#2 = basisEval42E7;
      real r4309#1 = RMul(r42FF,r4308);
      real r430A#1 = RAdd(r4305,r4307);
      real r430B#1 = RAdd(r430A,r4309);
      real r430D#2 = dof_load42B5;
      real r430E#1 = RMul(r430D,r42FA);
      real r430F#2 = dof_load42BC;
      real r4310#1 = RMul(r430F,r42FD);
      real r4311#2 = dof_load42C3;
      real r4312#1 = RMul(r4311,r4300);
      real r4313#1 = RAdd(r430E,r4310);
      real r4314#1 = RAdd(r4313,r4312);
      real r4315#1 = RMul(r430D,r4304);
      real r4316#1 = RMul(r430F,r4306);
      real r4317#1 = RMul(r4311,r4308);
      real r4318#1 = RAdd(r4315,r4316);
      real r4319#1 = RAdd(r4318,r4317);
      real realLit4340#4 = 0.e0;
      real r4341#2 = r4303;
      real r4342#1 = RMul(realLit4340,r4341);
      real realLit4343#2 = -0.1e1;
      real r4344#2 = r4314;
      real r4345#1 = RMul(realLit4343,r4344);
      real r4346#1 = RAdd(r4342,r4345);
      real r4347#2 = r430B;
      real r4348#1 = RMul(realLit4340,r4347);
      real r4349#2 = r4319;
      real r434A#1 = RMul(realLit4343,r4349);
      real r434B#1 = RAdd(r4348,r434A);
      real realLit434D#2 = 0.1e1;
      real r434E#1 = RMul(realLit434D,r4341);
      real r434F#1 = RMul(realLit4340,r4344);
      real r4350#1 = RAdd(r434E,r434F);
      real r4351#1 = RMul(realLit434D,r4347);
      real r4352#1 = RMul(realLit4340,r4349);
      real r4353#1 = RAdd(r4351,r4352);
      real r436D#1 = dof_load42B4;
      real r436E#2 = basisEval42E6;
      real r436F#1 = RMul(r436D,r436E);
      real r4370#1 = dof_load42BB;
      real r4371#2 = basisEval42E7;
      real r4372#1 = RMul(r4370,r4371);
      real r4373#1 = dof_load42C2;
      real r4374#2 = basisEval42E8;
      real r4375#1 = RMul(r4373,r4374);
      real r4376#1 = RAdd(r436F,r4372);
      real r4377#1 = RAdd(r4376,r4375);
      real r4378#1 = dof_load42B5;
      real r4379#1 = RMul(r4378,r436E);
      real r437A#1 = dof_load42BC;
      real r437B#1 = RMul(r437A,r4371);
      real r437C#1 = dof_load42C3;
      real r437D#1 = RMul(r437C,r4374);
      real r437E#1 = RAdd(r4379,r437B);
      real r437F#1 = RAdd(r437E,r437D);
      tensor[2] probe_l_12436C#1 = <tensor[2]>[r4377,r437F];
      real r4396#1 = dof_load42B4;
      real r4397#2 = basisEval42E6;
      real r4398#1 = RMul(r4396,r4397);
      real r4399#1 = dof_load42BB;
      real r439A#2 = basisEval42E8;
      real r439B#1 = RMul(r4399,r439A);
      real r439C#1 = dof_load42C2;
      real r439D#2 = basisEval42E7;
      real r439E#1 = RMul(r439C,r439D);
      real r439F#1 = RAdd(r4398,r439B);
      real r43A0#1 = RAdd(r439F,r439E);
      real r43A1#1 = dof_load42B5;
      real r43A2#1 = RMul(r43A1,r4397);
      real r43A3#1 = dof_load42BC;
      real r43A4#1 = RMul(r43A3,r439A);
      real r43A5#1 = dof_load42C3;
      real r43A6#1 = RMul(r43A5,r439D);
      real r43A7#1 = RAdd(r43A2,r43A4);
      real r43A8#1 = RAdd(r43A7,r43A6);
      real realLit43BF#2 = 0.e0;
      real r43C0#2 = r43A0;
      real r43C1#1 = RMul(realLit43BF,r43C0);
      real realLit43C2#1 = 0.1e1;
      real r43C3#2 = r43A8;
      real r43C4#1 = RMul(realLit43C2,r43C3);
      real r43C5#1 = RAdd(r43C1,r43C4);
      real realLit43C6#1 = -0.1e1;
      real r43C7#1 = RMul(realLit43C6,r43C0);
      real r43C8#1 = RMul(realLit43BF,r43C3);
      real r43C9#1 = RAdd(r43C7,r43C8);
      tensor[2] op1_e3_l_1443BE#1 = <tensor[2]>[r43C5,r43C9];
      real realLit43D8#4 = 0.e0;
      real r43D9#2 = r4346;
      real r43DA#1 = RMul(realLit43D8,r43D9);
      real realLit43DB#2 = -0.1e1;
      real r43DC#2 = r434B;
      real r43DD#1 = RMul(realLit43DB,r43DC);
      real r43DE#1 = RAdd(r43DA,r43DD);
      real r43DF#2 = r4350;
      real r43E0#1 = RMul(realLit43D8,r43DF);
      real r43E1#2 = r4353;
      real r43E2#1 = RMul(realLit43DB,r43E1);
      real r43E3#1 = RAdd(r43E0,r43E2);
      real realLit43E5#2 = 0.1e1;
      real r43E6#1 = RMul(realLit43E5,r43D9);
      real r43E7#1 = RMul(realLit43D8,r43DC);
      real r43E8#1 = RAdd(r43E6,r43E7);
      real r43E9#1 = RMul(realLit43E5,r43DF);
      real r43EA#1 = RMul(realLit43D8,r43E1);
      real r43EB#1 = RAdd(r43E9,r43EA);
      real op1_e3_l_164404#4 = VDot<2>(probe_l_12436C,op1_e3_l_1443BE);
      real varAcc4409#1 = VIndex<2,0>(xn4408);
      real varAcc440A#1 = VIndex<2,1>(xn4408);
      real coeff440B#2 = -0.1e1;
      real iden440C#1 = varAcc4409;
      real one440D#7 = 0.1e1;
      real prod440E#2 = RMul(iden440C,one440D);
      real iden440F#1 = varAcc440A;
      real prod4410#2 = RMul(one440D,iden440F);
      real prod4411#1 = RMul(one440D,one440D);
      real mult4412#1 = RMul(one440D,prod4411);
      real mult4413#1 = RMul(coeff440B,prod4410);
      real mult4414#1 = RMul(coeff440B,prod440E);
      real sum4415#1 = RAdd(mult4413,mult4414);
      real sum4416#1 = RAdd(mult4412,sum4415);
      real intermediate4417#2 = sum4416;
      real basisEval4418#2 = RMul(one440D,prod440E);
      real basisEval4419#2 = RMul(one440D,prod4410);
      real r442F#1 = dof_load42B4;
      real r4430#2 = intermediate4417;
      real r4431#1 = RMul(r442F,r4430);
      real r4432#1 = dof_load42BB;
      real r4433#2 = basisEval4418;
      real r4434#1 = RMul(r4432,r4433);
      real r4435#1 = dof_load42C2;
      real r4436#2 = basisEval4419;
      real r4437#1 = RMul(r4435,r4436);
      real r4438#1 = RAdd(r4431,r4434);
      real r4439#1 = RAdd(r4438,r4437);
      real r443A#1 = dof_load42B5;
      real r443B#1 = RMul(r443A,r4430);
      real r443C#1 = dof_load42BC;
      real r443D#1 = RMul(r443C,r4433);
      real r443E#1 = dof_load42C3;
      real r443F#1 = RMul(r443E,r4436);
      real r4440#1 = RAdd(r443B,r443D);
      real r4441#1 = RAdd(r4440,r443F);
      tensor[2] probe_l_17442E#1 = <tensor[2]>[r4439,r4441];
      real r4458#1 = r43DE;
      real r4459#1 = RDiv(r4458,op1_e3_l_164404);
      real r445A#1 = r43E3;
      real r445B#1 = RDiv(r445A,op1_e3_l_164404);
      tensor[2] tensor445C#2 = <tensor[2]>[r4459,r445B];
      real r445D#1 = r43E8;
      real r445E#1 = RDiv(r445D,op1_e3_l_164404);
      real r445F#1 = r43EB;
      real r4460#1 = RDiv(r445F,op1_e3_l_164404);
      tensor[2] tensor4461#2 = <tensor[2]>[r445E,r4460];
      tensor[2] op1_e3_l_19446E#2 = VSub<2>(probe_l_17442E,pos4282);
      tensor[2] projParam4472#1 = tensor445C;
      real vdot4473#1 = VDot<2>(projParam4472,op1_e3_l_19446E);
      tensor[2] projParam4474#1 = tensor4461;
      real vdot4475#1 = VDot<2>(projParam4474,op1_e3_l_19446E);
      tensor[2] op1_e3_l_204471#1 = <tensor[2]>[vdot4473,vdot4475];
      tensor[2] xn447C#4 = VSub<2>(xn4408,op1_e3_l_204471);
      real _t447F#2 = 0.1e-7;
      real _t4481#1 = RMul(_t447F,_t447F);
      real r4485#1 = dof_load42B4;
      real r4486#2 = intermediate4417;
      real r4487#1 = RMul(r4485,r4486);
      real r4488#1 = dof_load42BB;
      real r4489#2 = basisEval4418;
      real r448A#1 = RMul(r4488,r4489);
      real r448B#1 = dof_load42C2;
      real r448C#2 = basisEval4419;
      real r448D#1 = RMul(r448B,r448C);
      real r448E#1 = RAdd(r4487,r448A);
      real r448F#1 = RAdd(r448E,r448D);
      real r4490#1 = dof_load42B5;
      real r4491#1 = RMul(r4490,r4486);
      real r4492#1 = dof_load42BC;
      real r4493#1 = RMul(r4492,r4489);
      real r4494#1 = dof_load42C3;
      real r4495#1 = RMul(r4494,r448C);
      real r4496#1 = RAdd(r4491,r4493);
      real r4497#1 = RAdd(r4496,r4495);
      tensor[2] probe_l_254484#1 = <tensor[2]>[r448F,r4497];
      tensor[2] op1_e3_l_2744AD#2 = VSub<2>(probe_l_254484,pos4282);
      tensor[2] projParam44B1#1 = tensor445C;
      real vdot44B2#1 = VDot<2>(projParam44B1,op1_e3_l_2744AD);
      tensor[2] projParam44B3#1 = tensor4461;
      real vdot44B4#1 = VDot<2>(projParam44B3,op1_e3_l_2744AD);
      tensor[2] op1_e3_l_3844B0#2 = <tensor[2]>[vdot44B2,vdot44B4];
      real _t44BB#1 = VDot<2>(op1_e3_l_3844B0,op1_e3_l_3844B0);
      bool _t44BE#1 = GTE<real>(_t4481,_t44BB);
      if _t44BE then goto ASSIGN44C2 else goto JOIN44E7
    ASSIGN44C2:  preds = [COND44C0]
      real _t44C1#3 = 0.1e1;
      real _t44C3#3 = 0.1e-8;
      real _t44C5#1 = RAdd(_t44C1,_t44C3);
      tensor[2] _t44C8#1 = <tensor[2]>[_t44C1,_t44C1];
      real _t44CA#1 = VDot<2>(_t44C8,xn447C);
      bool _t44CD#1 = GT<real>(_t44C5,_t44CA);
      tensor[2] _t44CF#1 = <tensor[2]>[_t44C3,_t44C3];
      tensor[2] _t44D1#2 = VAdd<2>(_t44CF,xn447C);
      real _t44D4#1 = VIndex<2,0>(_t44D1);
      real _t44D6#2 = -0.e0;
      bool _t44D8#1 = GT<real>(_t44D4,_t44D6);
      real _t44DA#1 = VIndex<2,1>(_t44D1);
      bool _t44DC#1 = GT<real>(_t44DA,_t44D6);
      bool _t44DE#1 = BAnd(_t44D8,_t44DC);
      bool _t44E0#1 = BAnd(_t44CD,_t44DE);
      if _t44E0 then goto ASSIGN44E4 else goto ASSIGN44EA
    ASSIGN44E4:  preds = [COND44E2]
      femData:MeshPos _t44E3#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh4284,cellInt4283,xn447C,pos4282);
      return _t44E3
      goto JOIN44E6
    JOIN44E6:  preds = [*RETURN(_t44E3)44E5,*RETURN(_t44E9)44EB]
      goto JOIN44E7
    JOIN44E7:  preds = [*JOIN44E6,COND44C0]
      goto FOREACH4291
    ASSIGN44EA:  preds = [COND44E2]
      femData:MeshPos _t44E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44E9
      goto JOIN44E6
    ASSIGN44ED:  preds = [FOREACH4291]
      femData:MeshPos _t44EC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44EC
}
  function int[2] nextCell45006 (int faceIdx5007#1, int cell5008#1, femData:Mesh mesh5009#1) {
    ENTRY500A:  preds = []
      int _t500B#1 = 6;
      int _t500D#1 = IMul(cell5008,_t500B);
      int _t500F#1 = 2;
      int _t5011#1 = IMul(faceIdx5007,_t500F);
      int _t5013#1 = IAdd(_t500D,_t5011);
      int[2] _t5015#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh5009,_t5013);
      return _t5015
}
## input initialization
  ENTRY3FE4:  preds = []
    real isoval3FE5#1 = 0.2e0;
    globals.isoval3FC9 = isoval3FE5;
    real thick3FE8#1 = 0.7e-1;
    globals.thick3FCA = thick3FE8;
    real _t3FEB#2 = 0.3e1;
    real _t3FED#1 = -0.3e1;
    tensor[3] camEye3FEF#1 = <tensor[3]>[_t3FEB,_t3FED,_t3FEB];
    globals.camEye3FCB = camEye3FEF;
    real _t3FF2#3 = 0.5e0;
    tensor[3] camAt3FF4#1 = <tensor[3]>[_t3FF2,_t3FF2,_t3FF2];
    globals.camAt3FCC = camAt3FF4;
    real _t3FF7#2 = 0.e0;
    real _t3FF9#2 = 0.1e1;
    tensor[3] camUp3FFB#2 = <tensor[3]>[_t3FF7,_t3FF7,_t3FF9];
    globals.camUp3FCD = camUp3FFB;
    real camFOV3FFE#1 = 0.137e2;
    globals.camFOV3FCE = camFOV3FFE;
    int iresU4001#2 = 10;
    globals.iresU3FCF = iresU4001;
    globals.iresV3FD0 = iresU4001;
    real camNear4005#1 = -0.2e1;
    globals.camNear3FD1 = camNear4005;
    real camFar4008#1 = 0.5e1;
    globals.camFar3FD2 = camFar4008;
    globals.refStep3FD3 = _t3FF9;
    real rayStep400C#1 = 0.1e-1;
    globals.rayStep3FD4 = rayStep400C;
    globals.lightVsp3FD5 = camUp3FFB;
    real phongKa4010#1 = 0.1e0;
    globals.phongKa3FD6 = phongKa4010;
    real phongKd4013#1 = 0.9e0;
    globals.phongKd3FD7 = phongKd4013;
    bool debug4016#1 = false;
    globals.debug3FD8 = debug4016;
    int debugU4019#1 = 8;
    globals.debugU3FD9 = debugU4019;
    int debugV401C#1 = 2;
    globals.debugV3FDA = debugV401C;
    real eps401F#1 = 0.1e-7;
    globals.eps3FDB = eps401F;
    return
## global-variable initialization
  ENTRY4023:  preds = []
    femData:Mesh a4024#2 = globals.a3FC8;
    tensor[3] camEye4026#1 = globals.camEye3FCB;
    tensor[3] camAt4028#1 = globals.camAt3FCC;
    tensor[3] camUp402A#3 = globals.camUp3FCD;
    real camFOV402C#1 = globals.camFOV3FCE;
    int iresU402E#1 = globals.iresU3FCF;
    int iresV4030#1 = globals.iresV3FD0;
    real camNear4032#1 = globals.camNear3FD1;
    real camFar4034#1 = globals.camFar3FD2;
    int _t4036#1 = 0;
    int _t4038#1 = 1;
    int _t403A#1 = ExtractFemItem<int,NumCell(Mesh)>(a4024);
    int _t403C#1 = ISub(_t403A,_t4038);
    int[] _t403E#1 = Range(_t4036,_t403C);
    femData:MeshCell[] _t4040#1 = <femData:MeshCell[]>{};
  FOREACH4043:  preds = [ASSIGN4041,NEXT4049]
    foreach (_t4042 in _t403E) on exit goto GASSIGN404A
      femData:MeshCell[] _t4047#2 = phi(_t4040,_t4046)
    femData:MeshCell _t4044#1 = LoadFem<femData:MeshCell>(a4024,_t4042);
    femData:MeshCell[] _t4046#1 = Append<femData:MeshCell>(_t4047,_t4044);
    goto FOREACH4043
  GASSIGN404A:  preds = [FOREACH4043]
    globals.0cell_a3FDC = _t4047;
    tensor[3] op1_e3_l_3404B#9 = VSub<3>(camAt4028,camEye4026);
    real op1_e3_l_5404E#1 = VDot<3>(op1_e3_l_3404B,op1_e3_l_3404B);
    real op1_e3_l_64051#5 = Sqrt(op1_e3_l_5404E);
    real camNearVsp4054#1 = RAdd(camNear4032,op1_e3_l_64051);
    globals.camNearVsp3FDD = camNearVsp4054;
    real camFarVsp4058#1 = RAdd(camFar4034,op1_e3_l_64051);
    globals.camFarVsp3FDE = camFarVsp4058;
    real realLit405D#1 = 0.1e1;
    real op1_e3_l_9405C#6 = RDiv(realLit405D,op1_e3_l_64051);
    tensor[3] camN4061#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_3404B);
    globals.camN3FDF = camN4061;
    real realLit4066#3 = 0.e0;
    real r4067#3 = TensorIndex<tensor[3],[0]>(camUp402A);
    real r4068#3 = RMul(realLit4066,r4067);
    real r4069#3 = TensorIndex<tensor[3],[1]>(camUp402A);
    real r406A#3 = RMul(realLit4066,r4069);
    real r406B#3 = TensorIndex<tensor[3],[2]>(camUp402A);
    real r406C#5 = RMul(realLit4066,r406B);
    real r406D#3 = RAdd(r4068,r406A);
    real r406E#3 = RAdd(r406D,r406C);
    real realLit406F#3 = 0.1e1;
    real r4070#1 = RMul(realLit406F,r406B);
    real r4071#1 = RAdd(r406D,r4070);
    real realLit4072#3 = -0.1e1;
    real r4073#1 = RMul(realLit4072,r4069);
    real r4074#1 = RAdd(r4068,r4073);
    real r4075#1 = RAdd(r4074,r406C);
    tensor[3] tensor4076#1 = <tensor[3]>[r406E,r4071,r4075];
    real r4077#1 = RMul(realLit4072,r406B);
    real r4078#1 = RAdd(r406D,r4077);
    real r4079#1 = RMul(realLit406F,r4067);
    real r407A#1 = RAdd(r4079,r406A);
    real r407B#1 = RAdd(r407A,r406C);
    tensor[3] tensor407C#1 = <tensor[3]>[r4078,r406E,r407B];
    real r407D#1 = RMul(realLit406F,r4069);
    real r407E#1 = RAdd(r4068,r407D);
    real r407F#1 = RAdd(r407E,r406C);
    real r4080#1 = RMul(realLit4072,r4067);
    real r4081#1 = RAdd(r4080,r406A);
    real r4082#1 = RAdd(r4081,r406C);
    tensor[3] tensor4083#1 = <tensor[3]>[r407F,r4082,r406E];
    tensor[3] projParam40A5#1 = tensor4076;
    real vdot40A6#1 = VDot<3>(op1_e3_l_3404B,projParam40A5);
    tensor[3] projParam40A7#1 = tensor407C;
    real vdot40A8#1 = VDot<3>(op1_e3_l_3404B,projParam40A7);
    tensor[3] projParam40A9#1 = tensor4083;
    real vdot40AA#1 = VDot<3>(op1_e3_l_3404B,projParam40A9);
    tensor[3] op1_e3_l_1740A4#6 = <tensor[3]>[vdot40A6,vdot40A8,vdot40AA];
    real op1_e3_l_3440B3#1 = VDot<3>(op1_e3_l_1740A4,op1_e3_l_1740A4);
    real r40B7#1 = RMul(op1_e3_l_9405C,op1_e3_l_9405C);
    real op1_e3_l_3540B6#1 = RMul(r40B7,op1_e3_l_3440B3);
    real op1_e3_l_3640BB#1 = Sqrt(op1_e3_l_3540B6);
    tensor[3] op1_e3_l_3740BE#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_1740A4);
    real realLit40C2#1 = 0.1e1;
    real op1_e3_l_3840C1#2 = RDiv(realLit40C2,op1_e3_l_3640BB);
    tensor[3] camU40C6#1 = VScale<3>(op1_e3_l_3840C1,op1_e3_l_3740BE);
    globals.camU3FE0 = camU40C6;
    real realLit40CB#3 = 0.e0;
    real r40CC#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_3404B);
    real r40CD#3 = RMul(realLit40CB,r40CC);
    real r40CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_3404B);
    real r40CF#3 = RMul(realLit40CB,r40CE);
    real r40D0#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_3404B);
    real r40D1#5 = RMul(realLit40CB,r40D0);
    real r40D2#3 = RAdd(r40CD,r40CF);
    real r40D3#3 = RAdd(r40D2,r40D1);
    real realLit40D4#3 = 0.1e1;
    real r40D5#1 = RMul(realLit40D4,r40D0);
    real r40D6#1 = RAdd(r40D2,r40D5);
    real realLit40D7#3 = -0.1e1;
    real r40D8#1 = RMul(realLit40D7,r40CE);
    real r40D9#1 = RAdd(r40CD,r40D8);
    real r40DA#1 = RAdd(r40D9,r40D1);
    tensor[3] tensor40DB#1 = <tensor[3]>[r40D3,r40D6,r40DA];
    real r40DC#1 = RMul(realLit40D7,r40D0);
    real r40DD#1 = RAdd(r40D2,r40DC);
    real r40DE#1 = RMul(realLit40D4,r40CC);
    real r40DF#1 = RAdd(r40DE,r40CF);
    real r40E0#1 = RAdd(r40DF,r40D1);
    tensor[3] tensor40E1#1 = <tensor[3]>[r40DD,r40D3,r40E0];
    real r40E2#1 = RMul(realLit40D4,r40CE);
    real r40E3#1 = RAdd(r40CD,r40E2);
    real r40E4#1 = RAdd(r40E3,r40D1);
    real r40E5#1 = RMul(realLit40D7,r40CC);
    real r40E6#1 = RAdd(r40E5,r40CF);
    real r40E7#1 = RAdd(r40E6,r40D1);
    tensor[3] tensor40E8#1 = <tensor[3]>[r40E4,r40E7,r40D3];
    tensor[3] projParam410A#1 = tensor40DB;
    real vdot410B#1 = VDot<3>(op1_e3_l_1740A4,projParam410A);
    tensor[3] projParam410C#1 = tensor40E1;
    real vdot410D#1 = VDot<3>(op1_e3_l_1740A4,projParam410C);
    tensor[3] projParam410E#1 = tensor40E8;
    real vdot410F#1 = VDot<3>(op1_e3_l_1740A4,projParam410E);
    tensor[3] op1_e3_l_474109#1 = <tensor[3]>[vdot410B,vdot410D,vdot410F];
    tensor[3] op1_e3_l_504118#3 = VScale<3>(op1_e3_l_9405C,op1_e3_l_474109);
    real r411C#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_504118);
    real r411D#3 = RMul(op1_e3_l_3840C1,op1_e3_l_9405C);
    real r411E#1 = RMul(r411D,r411C);
    real r411F#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_504118);
    real r4120#1 = RMul(r411D,r411F);
    real r4121#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_504118);
    real r4122#1 = RMul(r411D,r4121);
    tensor[3] camV411B#1 = <tensor[3]>[r411E,r4120,r4122];
    globals.camV3FE1 = camV411B;
    real _t412D#1 = 0.314159265358979323846264338327950288e1;
    real _t412F#1 = 0.36e3;
    real op1_e3_l_54131#1 = RMul(camFOV402C,_t412D);
    real op1_e3_l_64134#1 = RDiv(op1_e3_l_54131,_t412F);
    real op1_e3_l_104137#2 = Tan(op1_e3_l_64134);
    real camVmax413A#1 = RMul(op1_e3_l_104137,op1_e3_l_64051);
    globals.camVmax3FE2 = camVmax413A;
    real _t413E#1 = IntToReal(iresU402E);
    real _t4140#1 = IntToReal(iresV4030);
    real r4143#1 = RMul(_t413E,op1_e3_l_104137);
    real op1_e3_l_144142#1 = RMul(r4143,op1_e3_l_64051);
    real camUmax4147#1 = RDiv(op1_e3_l_144142,_t4140);
    globals.camUmax3FE3 = camUmax4147;
    return
## strand
  strand ray (int ui414C#2, int vi414D#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY4169:  preds = []
        femData:Mesh a416A#1 = globals.a3FC8;
        femData:MeshCell[] 0cell_a416C#1 = globals.0cell_a3FDC;
        tensor[3] camEye416E#3 = globals.camEye3FCB;
        int iresU4170#1 = globals.iresU3FCF;
        int iresV4172#1 = globals.iresV3FD0;
        real camNearVsp4174#2 = globals.camNearVsp3FDD;
        real camFarVsp4176#2 = globals.camFarVsp3FDE;
        tensor[3] camN4178#1 = globals.camN3FDF;
        tensor[3] camU417A#1 = globals.camU3FE0;
        tensor[3] camV417C#1 = globals.camV3FE1;
        real camVmax417E#2 = globals.camVmax3FE2;
        real camUmax4180#2 = globals.camUmax3FE3;
        real _t4182#5 = -0.5e0;
        real _t4184#1 = IntToReal(ui414C);
        real _t4186#1 = IntToReal(iresU4170);
        real _t4188#3 = 0.5e0;
        real op1_e3_l_6418A#1 = RSub(_t4186,_t4188);
        real op1_e3_l_7418D#1 = RSub(_t4184,_t4182);
        real op1_e3_l_84190#1 = RSub(op1_e3_l_6418A,_t4182);
        real op1_e3_l_94193#2 = RNeg(camUmax4180);
        real op1_e3_l_104196#1 = RDiv(op1_e3_l_7418D,op1_e3_l_84190);
        real op1_e3_l_114199#1 = RSub(camUmax4180,op1_e3_l_94193);
        real op1_e3_l_13419C#1 = RMul(op1_e3_l_104196,op1_e3_l_114199);
        real rayU419F#2 = RAdd(op1_e3_l_94193,op1_e3_l_13419C);
        real _t41A2#1 = IntToReal(vi414D);
        real _t41A4#2 = IntToReal(iresV4172);
        real op1_e3_l_641A6#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_741A9#2 = RSub(_t41A2,_t4182);
        real op1_e3_l_841AC#1 = RSub(op1_e3_l_641A6,_t4182);
        real op1_e3_l_941AF#3 = RNeg(camVmax417E);
        real op1_e3_l_1041B2#1 = RDiv(op1_e3_l_741A9,op1_e3_l_841AC);
        real op1_e3_l_1141B5#2 = RSub(camVmax417E,op1_e3_l_941AF);
        real op1_e3_l_1341B8#1 = RMul(op1_e3_l_1041B2,op1_e3_l_1141B5);
        real rayV41BB#1 = RAdd(op1_e3_l_941AF,op1_e3_l_1341B8);
        real op1_e3_l_2341BE#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_2541C1#1 = RSub(op1_e3_l_2341BE,_t4182);
        real op1_e3_l_2741C4#1 = RDiv(op1_e3_l_741A9,op1_e3_l_2541C1);
        real op1_e3_l_3041C7#1 = RMul(op1_e3_l_2741C4,op1_e3_l_1141B5);
        real op1_e3_l_3141CA#1 = RAdd(op1_e3_l_941AF,op1_e3_l_3041C7);
        tensor[3] op1_e3_l_3241CD#4 = VScale<3>(rayU419F,camU417A);
        tensor[3] op1_e3_l_3341D0#4 = VScale<3>(op1_e3_l_3141CA,camV417C);
        tensor[3] UV41D3#1 = VAdd<3>(op1_e3_l_3241CD,op1_e3_l_3341D0);
        tensor[3] v41D7#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] rayOrig41D6#1 = VAdd<3>(v41D7,op1_e3_l_3341D0);
        real _t41DB#4 = 0.e0;
        tensor[3] _t41DD#1 = <tensor[3]>[_t41DB,_t41DB,_t41DB];
        tensor[3] rayVec41DF#3 = VAdd<3>(camN4178,_t41DD);
        tensor[3] op1_e3_l_3941E2#1 = VScale<3>(camNearVsp4174,rayVec41DF);
        tensor[3] v41E6#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] v41E7#1 = VAdd<3>(v41E6,op1_e3_l_3341D0);
        tensor[3] rayStart41E5#4 = VAdd<3>(v41E7,op1_e3_l_3941E2);
        real _t41EC#1 = VIndex<3,0>(rayStart41E5);
        real _t41EE#1 = VIndex<3,1>(rayStart41E5);
        tensor[2] rayStartProj41F0#1 = <tensor[2]>[_t41EC,_t41EE];
        tensor[3] op1_e3_l_3941F2#1 = VScale<3>(camFarVsp4176,rayVec41DF);
        tensor[3] v41F6#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] v41F7#1 = VAdd<3>(v41F6,op1_e3_l_3341D0);
        tensor[3] rayEnd41F5#2 = VAdd<3>(v41F7,op1_e3_l_3941F2);
        tensor[3] dpos41FC#3 = VSub<3>(rayEnd41F5,rayStart41E5);
        real _t41FF#1 = VIndex<3,0>(dpos41FC);
        real _t4201#1 = VIndex<3,1>(dpos41FC);
        tensor[2] dposProj4203#1 = <tensor[2]>[_t41FF,_t4201];
        femData:MeshPos[0] _t4205#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t4207#1 = MkDynamic<femData:MeshPos,0>(_t4205);
        real[0] _t4209#1 = <real[0]>{};
        real[] _t420B#1 = MkDynamic<real,0>(_t4209);
        int cellIntersects420D#3 = 0;
        tensor[2][0] _t420F#1 = <tensor[2][0]>{};
        tensor[2][] _t4211#1 = MkDynamic<tensor[2],0>(_t420F);
        tensor[3][0] _t4213#1 = <tensor[3][0]>{};
        tensor[3][] _t4215#1 = MkDynamic<tensor[3],0>(_t4213);
        tensor[2][0] _t4217#1 = <tensor[2][0]>{};
        tensor[2][] _t4219#1 = MkDynamic<tensor[2],0>(_t4217);
        femData:MeshCell[0] _t421B#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t421D#1 = MkDynamic<femData:MeshCell,0>(_t421B);
        int currentCellInt421F#1 = -1;
        femData:MeshCell currentCell4221#1 = Subscript<femData:MeshCell[]>(0cell_a416C,cellIntersects420D);
        femData:MeshPos pos4223#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a416A);
        bool startsInside4225#1 = false;
        self.rayU = rayU419F;
        self.rayV = rayV41BB;
        self.UV = UV41D3;
        self.rayOrig = rayOrig41D6;
        self.rayVec = rayVec41DF;
        self.camNearVsp = camNearVsp4174;
        self.camFarVsp = camFarVsp4176;
        self.rayStart = rayStart41E5;
        self.rayStartProj = rayStartProj41F0;
        self.rayEnd = rayEnd41F5;
        self.dpos = dpos41FC;
        self.dposProj = dposProj4203;
        self.poses = _t4207;
        self.normalizedTimes = _t420B;
        self.cellIntersects = cellIntersects420D;
        self.rayCellInter = _t4211;
        self.spaceInter = _t4215;
        self.refSpaceInter = _t4219;
        self.cellInter = _t421D;
        self.currentCellInt = currentCellInt421F;
        self.rayN = _t41DB;
        self.currentCell = currentCell4221;
        self.steps = cellIntersects420D;
        self.pos = pos4223;
        self.startsInside = startsInside4225;
        self.ui = ui414C;
        self.vi = vi414D;
        return
    end state init
    method start
        ENTRY4243:  preds = []
          femData:MeshCell[] 0cell_a4244#1 = globals.0cell_a3FDC;
          bool debug4246#1 = globals.debug3FD8;
          int debugU4248#1 = globals.debugU3FD9;
          int debugV424A#1 = globals.debugV3FDA;
          tensor[3] rayOrig424C#2 = self.rayOrig;
          tensor[3] rayVec424E#1 = self.rayVec;
          real camNearVsp4250#5 = self.camNearVsp;
          real camFarVsp4252#3 = self.camFarVsp;
          tensor[2] rayStartProj4254#3 = self.rayStartProj;
          tensor[2] dposProj4256#3 = self.dposProj;
          femData:MeshPos[] poses4258#1 = self.poses;
          real[] normalizedTimes425A#1 = self.normalizedTimes;
          int cellIntersects425C#1 = self.cellIntersects;
          tensor[3][] spaceInter425E#1 = self.spaceInter;
          int currentCellInt4260#1 = self.currentCellInt;
          bool startsInside4262#2 = self.startsInside;
          int ui4264#2 = self.ui;
          int vi4266#2 = self.vi;
          bool _t4268#1 = NEQ<int>(ui4264,debugU4248);
          if _t4268 then goto ASSIGN426C else goto ASSIGN4B4B
        ASSIGN426C:  preds = [COND426A]
          bool _t426B#1 = true;
          goto JOIN426F
        JOIN426F:  preds = [ASSIGN426C,ASSIGN4B4B]
          bool _t426D#1 = phi(_t426B,_t426E)
          if _t426D then goto COND4271 else goto JOIN4274
        COND4271:  preds = [COND4270]
          if debug4246 then goto STABILIZE4272 else goto JOIN4273
        STABILIZE4272:  preds = [COND4271]
          stabilize
          goto JOIN4273
        JOIN4273:  preds = [*STABILIZE4272,COND4271]
          goto JOIN4274
        JOIN4274:  preds = [JOIN4273,COND4270]
        FOREACH4276:  preds = [JOIN4274,NEXT4513]
          foreach (c4275 in 0cell_a4244) on exit goto ASSIGN4AE9
            real startTime4AD7#3 = phi(camFarVsp4252,startTime4507)
            bool startsInside4AE7#2 = phi(startsInside4262,startsInside4509)
            int currentCellInt4ADC#6 = phi(currentCellInt4260,currentCellInt450A)
            int cellIntersects4503#8 = phi(cellIntersects425C,cellIntersects450C)
            real[] normalizedTimes44FE#7 = phi(normalizedTimes425A,normalizedTimes450E)
            femData:MeshPos[] poses44FB#7 = phi(poses4258,poses4510)
          string _t4277#1 = "Cell:";
          string _t4279#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t4277,c4275,_t4279);
          int _t427C#4 = ExtractFemItem<int,CellIndex(MeshCell)>(c4275);
          femData:Mesh _t427E#12 = ExtractFem<femData:Mesh,femData:MeshCell>(c4275);
          femData:MeshPos _t4280#2 = _msh_newtonInverse4281 (rayStartProj4254,_t427C,_t427E);
          bool _t44F0#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t4280);
          if _t44F0 then goto ASSIGN44F4 else goto ASSIGN4515
        ASSIGN44F4:  preds = [COND44F2]
          string _t44F3#1 = "pos starts inside\n";
          Print<[string]>(_t44F3);
          tensor[2] refPos44F6#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t4280);
          femData:MeshPos p44F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t427E,_t427C,refPos44F6);
          femData:MeshPos[] poses44FA#1 = Append<femData:MeshPos>(poses44FB,p44F8);
          real[] normalizedTimes44FD#1 = Append<real>(normalizedTimes44FE,camNearVsp4250);
          int _t4500#1 = 1;
          int cellIntersects4502#1 = IAdd(cellIntersects4503,_t4500);
          bool startsInside4505#1 = true;
          goto JOIN4512
        JOIN4512:  preds = [ASSIGN4506,JOIN4AE2]
          real startTime4507#1 = phi(camNearVsp4250,startTime4508)
          bool startsInside4509#1 = phi(startsInside4505,startsInside4262)
          int currentCellInt450A#1 = phi(cellIntersects4503,currentCellInt450B)
          int cellIntersects450C#1 = phi(cellIntersects4502,cellIntersects450D)
          real[] normalizedTimes450E#1 = phi(normalizedTimes44FD,normalizedTimes450F)
          femData:MeshPos[] poses4510#1 = phi(poses44FA,poses4511)
          goto FOREACH4276
        ASSIGN4515:  preds = [COND44F2]
          real _t4514#26 = -0.e0;
          tensor[2] _t4516#2 = <tensor[2]>[_t4514,_t4514];
          real time4518#9 = +inf;
          int face451A#12 = -1;
          real _t451C#43 = 0.1e1;
          real _t451E#12 = 0.e0;
          tensor[2] _t4520#1 = <tensor[2]>[_t451C,_t451E];
          real _t4522#10 = -0.1e1;
          int ilit4527#1 = 3;
          int mulRes4528#3 = IMul(_t427C,ilit4527);
          int addRes452A#1 = mulRes4528;
          int idx452B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452A);
          int ilit452C#1 = 1;
          int addRes452D#1 = IAdd(mulRes4528,ilit452C);
          int idx452E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452D);
          int ilit452F#1 = 2;
          int addRes4530#1 = IAdd(mulRes4528,ilit452F);
          int idx4531#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes4530);
          int ilit4542#3 = 2;
          int idx4543#1 = idx452B;
          int mulRes4544#2 = IMul(ilit4542,idx4543);
          int addRes4545#1 = mulRes4544;
          int ilit4546#3 = 1;
          int addRes4547#1 = IAdd(ilit4546,mulRes4544);
          real dof_load4548#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4545);
          real dof_load4549#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4547);
          int idx454B#1 = idx452E;
          int mulRes454C#2 = IMul(ilit4542,idx454B);
          int addRes454D#1 = mulRes454C;
          int addRes454E#1 = IAdd(ilit4546,mulRes454C);
          real dof_load454F#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454D);
          real dof_load4550#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454E);
          int idx4552#1 = idx4531;
          int mulRes4553#2 = IMul(ilit4542,idx4552);
          int addRes4554#1 = mulRes4553;
          int addRes4555#1 = IAdd(ilit4546,mulRes4553);
          real dof_load4556#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4554);
          real dof_load4557#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4555);
          real coeff4577#1 = -0.1e1;
          real one4578#3 = 0.1e1;
          real prod4579#2 = RMul(one4578,one4578);
          real basisEval457A#4 = RMul(coeff4577,prod4579);
          real basisEval457B#4 = RMul(one4578,prod4579);
          real basisEval457C#4 = 0.e0;
          real r458D#2 = dof_load4548;
          real r458E#2 = basisEval457A;
          real r458F#1 = RMul(r458D,r458E);
          real r4590#2 = dof_load454F;
          real r4591#2 = basisEval457B;
          real r4592#1 = RMul(r4590,r4591);
          real r4593#2 = dof_load4556;
          real r4594#2 = basisEval457C;
          real r4595#1 = RMul(r4593,r4594);
          real r4596#1 = RAdd(r458F,r4592);
          real r4597#1 = RAdd(r4596,r4595);
          real r4598#2 = basisEval457A;
          real r4599#1 = RMul(r458D,r4598);
          real r459A#2 = basisEval457C;
          real r459B#1 = RMul(r4590,r459A);
          real r459C#2 = basisEval457B;
          real r459D#1 = RMul(r4593,r459C);
          real r459E#1 = RAdd(r4599,r459B);
          real r459F#1 = RAdd(r459E,r459D);
          real r45A1#2 = dof_load4549;
          real r45A2#1 = RMul(r45A1,r458E);
          real r45A3#2 = dof_load4550;
          real r45A4#1 = RMul(r45A3,r4591);
          real r45A5#2 = dof_load4557;
          real r45A6#1 = RMul(r45A5,r4594);
          real r45A7#1 = RAdd(r45A2,r45A4);
          real r45A8#1 = RAdd(r45A7,r45A6);
          real r45A9#1 = RMul(r45A1,r4598);
          real r45AA#1 = RMul(r45A3,r459A);
          real r45AB#1 = RMul(r45A5,r459C);
          real r45AC#1 = RAdd(r45A9,r45AA);
          real r45AD#1 = RAdd(r45AC,r45AB);
          real realLit45D4#4 = 0.e0;
          real r45D5#2 = r4597;
          real r45D6#1 = RMul(realLit45D4,r45D5);
          real realLit45D7#2 = -0.1e1;
          real r45D8#2 = r45A8;
          real r45D9#1 = RMul(realLit45D7,r45D8);
          real r45DA#1 = RAdd(r45D6,r45D9);
          real r45DB#2 = r459F;
          real r45DC#1 = RMul(realLit45D4,r45DB);
          real r45DD#2 = r45AD;
          real r45DE#1 = RMul(realLit45D7,r45DD);
          real r45DF#1 = RAdd(r45DC,r45DE);
          real realLit45E1#2 = 0.1e1;
          real r45E2#1 = RMul(realLit45E1,r45D5);
          real r45E3#1 = RMul(realLit45D4,r45D8);
          real r45E4#1 = RAdd(r45E2,r45E3);
          real r45E5#1 = RMul(realLit45E1,r45DB);
          real r45E6#1 = RMul(realLit45D4,r45DD);
          real r45E7#1 = RAdd(r45E5,r45E6);
          real r4601#1 = dof_load4548;
          real r4602#2 = basisEval457A;
          real r4603#1 = RMul(r4601,r4602);
          real r4604#1 = dof_load454F;
          real r4605#2 = basisEval457B;
          real r4606#1 = RMul(r4604,r4605);
          real r4607#1 = dof_load4556;
          real r4608#2 = basisEval457C;
          real r4609#1 = RMul(r4607,r4608);
          real r460A#1 = RAdd(r4603,r4606);
          real r460B#1 = RAdd(r460A,r4609);
          real r460C#1 = dof_load4549;
          real r460D#1 = RMul(r460C,r4602);
          real r460E#1 = dof_load4550;
          real r460F#1 = RMul(r460E,r4605);
          real r4610#1 = dof_load4557;
          real r4611#1 = RMul(r4610,r4608);
          real r4612#1 = RAdd(r460D,r460F);
          real r4613#1 = RAdd(r4612,r4611);
          tensor[2] probe_l_194600#1 = <tensor[2]>[r460B,r4613];
          real r462A#1 = dof_load4548;
          real r462B#2 = basisEval457A;
          real r462C#1 = RMul(r462A,r462B);
          real r462D#1 = dof_load454F;
          real r462E#2 = basisEval457C;
          real r462F#1 = RMul(r462D,r462E);
          real r4630#1 = dof_load4556;
          real r4631#2 = basisEval457B;
          real r4632#1 = RMul(r4630,r4631);
          real r4633#1 = RAdd(r462C,r462F);
          real r4634#1 = RAdd(r4633,r4632);
          real r4635#1 = dof_load4549;
          real r4636#1 = RMul(r4635,r462B);
          real r4637#1 = dof_load4550;
          real r4638#1 = RMul(r4637,r462E);
          real r4639#1 = dof_load4557;
          real r463A#1 = RMul(r4639,r4631);
          real r463B#1 = RAdd(r4636,r4638);
          real r463C#1 = RAdd(r463B,r463A);
          real realLit4653#2 = 0.e0;
          real r4654#2 = r4634;
          real r4655#1 = RMul(realLit4653,r4654);
          real realLit4656#1 = 0.1e1;
          real r4657#2 = r463C;
          real r4658#1 = RMul(realLit4656,r4657);
          real r4659#1 = RAdd(r4655,r4658);
          real realLit465A#1 = -0.1e1;
          real r465B#1 = RMul(realLit465A,r4654);
          real r465C#1 = RMul(realLit4653,r4657);
          real r465D#1 = RAdd(r465B,r465C);
          tensor[2] op1_e3_l_214652#1 = <tensor[2]>[r4659,r465D];
          real realLit466C#4 = 0.e0;
          real r466D#2 = r45DA;
          real r466E#1 = RMul(realLit466C,r466D);
          real realLit466F#2 = -0.1e1;
          real r4670#2 = r45DF;
          real r4671#1 = RMul(realLit466F,r4670);
          real r4672#1 = RAdd(r466E,r4671);
          real r4673#2 = r45E4;
          real r4674#1 = RMul(realLit466C,r4673);
          real r4675#2 = r45E7;
          real r4676#1 = RMul(realLit466F,r4675);
          real r4677#1 = RAdd(r4674,r4676);
          real realLit4679#2 = 0.1e1;
          real r467A#1 = RMul(realLit4679,r466D);
          real r467B#1 = RMul(realLit466C,r4670);
          real r467C#1 = RAdd(r467A,r467B);
          real r467D#1 = RMul(realLit4679,r4673);
          real r467E#1 = RMul(realLit466C,r4675);
          real r467F#1 = RAdd(r467D,r467E);
          real op1_e3_l_234698#4 = VDot<2>(probe_l_194600,op1_e3_l_214652);
          real varAcc469C#1 = VIndex<2,0>(_t4516);
          real varAcc469D#1 = VIndex<2,1>(_t4516);
          real coeff469E#2 = -0.1e1;
          real iden469F#1 = varAcc469C;
          real one46A0#7 = 0.1e1;
          real prod46A1#2 = RMul(iden469F,one46A0);
          real iden46A2#1 = varAcc469D;
          real prod46A3#2 = RMul(one46A0,iden46A2);
          real prod46A4#1 = RMul(one46A0,one46A0);
          real mult46A5#1 = RMul(one46A0,prod46A4);
          real mult46A6#1 = RMul(coeff469E,prod46A3);
          real mult46A7#1 = RMul(coeff469E,prod46A1);
          real sum46A8#1 = RAdd(mult46A6,mult46A7);
          real sum46A9#1 = RAdd(mult46A5,sum46A8);
          real intermediate46AA#1 = sum46A9;
          real basisEval46AB#1 = RMul(one46A0,prod46A1);
          real basisEval46AC#1 = RMul(one46A0,prod46A3);
          real r46C2#1 = dof_load4548;
          real r46C3#2 = intermediate46AA;
          real r46C4#1 = RMul(r46C2,r46C3);
          real r46C5#1 = dof_load454F;
          real r46C6#2 = basisEval46AB;
          real r46C7#1 = RMul(r46C5,r46C6);
          real r46C8#1 = dof_load4556;
          real r46C9#2 = basisEval46AC;
          real r46CA#1 = RMul(r46C8,r46C9);
          real r46CB#1 = RAdd(r46C4,r46C7);
          real r46CC#1 = RAdd(r46CB,r46CA);
          real r46CD#1 = dof_load4549;
          real r46CE#1 = RMul(r46CD,r46C3);
          real r46CF#1 = dof_load4550;
          real r46D0#1 = RMul(r46CF,r46C6);
          real r46D1#1 = dof_load4557;
          real r46D2#1 = RMul(r46D1,r46C9);
          real r46D3#1 = RAdd(r46CE,r46D0);
          real r46D4#1 = RAdd(r46D3,r46D2);
          tensor[2] probe_l_2446C1#1 = <tensor[2]>[r46CC,r46D4];
          real r46EB#1 = r4672;
          real r46EC#1 = RDiv(r46EB,op1_e3_l_234698);
          real r46ED#1 = r4677;
          real r46EE#1 = RDiv(r46ED,op1_e3_l_234698);
          tensor[2] tensor46EF#2 = <tensor[2]>[r46EC,r46EE];
          real r46F0#1 = r467C;
          real r46F1#1 = RDiv(r46F0,op1_e3_l_234698);
          real r46F2#1 = r467F;
          real r46F3#1 = RDiv(r46F2,op1_e3_l_234698);
          tensor[2] tensor46F4#2 = <tensor[2]>[r46F1,r46F3];
          tensor[2] op1_e3_l_264701#2 = VSub<2>(rayStartProj4254,probe_l_2446C1);
          tensor[2] projParam4705#1 = tensor46EF;
          real vdot4706#1 = VDot<2>(projParam4705,op1_e3_l_264701);
          tensor[2] projParam4707#1 = tensor46F4;
          real vdot4708#1 = VDot<2>(projParam4707,op1_e3_l_264701);
          tensor[2] op1_e3_l_274704#27 = <tensor[2]>[vdot4706,vdot4708];
          tensor[2] projParam4710#1 = tensor46EF;
          real vdot4711#1 = VDot<2>(projParam4710,dposProj4256);
          tensor[2] projParam4712#1 = tensor46F4;
          real vdot4713#1 = VDot<2>(projParam4712,dposProj4256);
          tensor[2] op1_e3_l_36470F#16 = <tensor[2]>[vdot4711,vdot4713];
          real realLit471B#2 = 0.e0;
          real r471C#2 = _t4522;
          real r471D#1 = RMul(realLit471B,r471C);
          real realLit471E#1 = 0.1e1;
          real r471F#2 = _t451C;
          real r4720#1 = RMul(realLit471E,r471F);
          real r4721#1 = RAdd(r471D,r4720);
          real realLit4722#1 = -0.1e1;
          real r4723#1 = RMul(realLit4722,r471C);
          real r4724#1 = RMul(realLit471B,r471F);
          real r4725#1 = RAdd(r4723,r4724);
          tensor[2] op1_e3_l_37471A#1 = <tensor[2]>[r4721,r4725];
          real op1_e3_l_384733#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37471A);
          real realLit4737#1 = 0.1e1;
          real r4738#2 = RDiv(realLit4737,op1_e3_l_384733);
          real r4739#1 = _t4522;
          real r473A#1 = RMul(r4738,r4739);
          real r473B#1 = _t451C;
          real r473C#1 = RMul(r4738,r473B);
          tensor[2] op1_e3_l_404745#1 = VSub<2>(_t4520,op1_e3_l_274704);
          real realLit4749#2 = 0.e0;
          real r474A#2 = r473A;
          real r474B#1 = RMul(realLit4749,r474A);
          real realLit474C#1 = 0.1e1;
          real r474D#2 = r473C;
          real r474E#1 = RMul(realLit474C,r474D);
          real r474F#1 = RAdd(r474B,r474E);
          real realLit4750#1 = -0.1e1;
          real r4751#1 = RMul(realLit4750,r474A);
          real r4752#1 = RMul(realLit4749,r474D);
          real r4753#1 = RAdd(r4751,r4752);
          tensor[2] op1_e3_l_414748#1 = <tensor[2]>[r474F,r4753];
          real _t4761#10 = VDot<2>(op1_e3_l_404745,op1_e3_l_414748);
          real _t4764#3 = -0.1e-15;
          bool _t4766#1 = GTE<real>(_t4761,_t4764);
          bool _t4768#1 = GT<real>(time4518,_t4761);
          real _t476A#1 = Abs<real>(op1_e3_l_384733);
          real _t476D#3 = 0.1e-20;
          bool _t476F#1 = GTE<real>(_t476A,_t476D);
          bool _t4771#1 = BAnd(_t4768,_t476F);
          bool _t4773#4 = BAnd(_t4766,_t4771);
          if _t4773 then goto ASSIGN4777 else goto JOIN47A3
        ASSIGN4777:  preds = [COND4775]
          real _t4776#3 = 0.1e-8;
          real _t4778#1 = RAdd(_t451C,_t4776);
          tensor[2] _t477B#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78477D#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794780#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78477D);
          real _t4783#1 = VDot<2>(_t477B,op1_e3_l_794780);
          bool _t4786#1 = GT<real>(_t4778,_t4783);
          tensor[2] _t4788#1 = <tensor[2]>[_t4776,_t4776];
          tensor[2] v478B#1 = VAdd<2>(_t4788,op1_e3_l_274704);
          tensor[2] _t478A#2 = VAdd<2>(v478B,op1_e3_l_78477D);
          real _t478F#1 = VIndex<2,0>(_t478A);
          bool _t4791#1 = GT<real>(_t478F,_t4514);
          real _t4793#1 = VIndex<2,1>(_t478A);
          bool _t4795#1 = GT<real>(_t4793,_t4514);
          bool _t4797#1 = BAnd(_t4791,_t4795);
          bool _t4799#1 = BAnd(_t4786,_t4797);
          if _t4799 then goto ASSIGN479D else goto JOIN47A0
        ASSIGN479D:  preds = [COND479B]
          int face479C#1 = 0;
          goto JOIN47A0
        JOIN47A0:  preds = [ASSIGN479D,COND479B]
          int face479E#1 = phi(face479C,face451A)
          real time479F#1 = phi(_t4761,time4518)
          goto JOIN47A3
        JOIN47A3:  preds = [JOIN47A0,COND4775]
          int face47A1#2 = phi(face479E,face451A)
          real time47A2#3 = phi(time479F,time4518)
          tensor[2] _t47A4#1 = <tensor[2]>[_t451E,_t451E];
          real realLit47A9#2 = 0.e0;
          real r47AA#2 = _t451E;
          real r47AB#1 = RMul(realLit47A9,r47AA);
          real realLit47AC#1 = 0.1e1;
          real r47AD#2 = _t451C;
          real r47AE#1 = RMul(realLit47AC,r47AD);
          real r47AF#1 = RAdd(r47AB,r47AE);
          real realLit47B0#1 = -0.1e1;
          real r47B1#1 = RMul(realLit47B0,r47AA);
          real r47B2#1 = RMul(realLit47A9,r47AD);
          real r47B3#1 = RAdd(r47B1,r47B2);
          tensor[2] op1_e3_l_3747A8#1 = <tensor[2]>[r47AF,r47B3];
          real op1_e3_l_3847C1#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_3747A8);
          real realLit47C5#1 = 0.1e1;
          real r47C6#2 = RDiv(realLit47C5,op1_e3_l_3847C1);
          real r47C7#1 = _t451E;
          real r47C8#1 = RMul(r47C6,r47C7);
          real r47C9#1 = _t451C;
          real r47CA#1 = RMul(r47C6,r47C9);
          tensor[2] op1_e3_l_4047D3#2 = VSub<2>(_t47A4,op1_e3_l_274704);
          real realLit47D7#2 = 0.e0;
          real r47D8#2 = r47C8;
          real r47D9#1 = RMul(realLit47D7,r47D8);
          real realLit47DA#1 = 0.1e1;
          real r47DB#2 = r47CA;
          real r47DC#1 = RMul(realLit47DA,r47DB);
          real r47DD#1 = RAdd(r47D9,r47DC);
          real realLit47DE#1 = -0.1e1;
          real r47DF#1 = RMul(realLit47DE,r47D8);
          real r47E0#1 = RMul(realLit47D7,r47DB);
          real r47E1#1 = RAdd(r47DF,r47E0);
          tensor[2] op1_e3_l_4147D6#1 = <tensor[2]>[r47DD,r47E1];
          real _t47EF#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_4147D6);
          bool _t47F2#4 = GTE<real>(_t47EF,_t4764);
          bool _t47F4#1 = GT<real>(time47A2,_t47EF);
          real _t47F6#1 = Abs<real>(op1_e3_l_3847C1);
          bool _t47F9#4 = GTE<real>(_t47F6,_t476D);
          bool _t47FB#1 = BAnd(_t47F4,_t47F9);
          bool _t47FD#1 = BAnd(_t47F2,_t47FB);
          if _t47FD then goto ASSIGN4801 else goto JOIN482D
        ASSIGN4801:  preds = [COND47FF]
          real _t4800#3 = 0.1e-8;
          real _t4802#1 = RAdd(_t451C,_t4800);
          tensor[2] _t4805#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784807#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79480A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784807);
          real _t480D#1 = VDot<2>(_t4805,op1_e3_l_79480A);
          bool _t4810#1 = GT<real>(_t4802,_t480D);
          tensor[2] _t4812#1 = <tensor[2]>[_t4800,_t4800];
          tensor[2] v4815#1 = VAdd<2>(_t4812,op1_e3_l_274704);
          tensor[2] _t4814#2 = VAdd<2>(v4815,op1_e3_l_784807);
          real _t4819#1 = VIndex<2,0>(_t4814);
          bool _t481B#1 = GT<real>(_t4819,_t4514);
          real _t481D#1 = VIndex<2,1>(_t4814);
          bool _t481F#1 = GT<real>(_t481D,_t4514);
          bool _t4821#1 = BAnd(_t481B,_t481F);
          bool _t4823#1 = BAnd(_t4810,_t4821);
          if _t4823 then goto ASSIGN4827 else goto JOIN482A
        ASSIGN4827:  preds = [COND4825]
          int face4826#1 = 1;
          goto JOIN482A
        JOIN482A:  preds = [ASSIGN4827,COND4825]
          int face4828#1 = phi(face4826,face47A1)
          real time4829#1 = phi(_t47EF,time47A2)
          goto JOIN482D
        JOIN482D:  preds = [JOIN482A,COND47FF]
          int face482B#2 = phi(face4828,face47A1)
          real time482C#3 = phi(time4829,time47A2)
          real realLit482F#2 = 0.e0;
          real r4830#2 = _t451C;
          real r4831#1 = RMul(realLit482F,r4830);
          real realLit4832#1 = 0.1e1;
          real r4833#2 = _t451E;
          real r4834#1 = RMul(realLit4832,r4833);
          real r4835#1 = RAdd(r4831,r4834);
          real realLit4836#1 = -0.1e1;
          real r4837#1 = RMul(realLit4836,r4830);
          real r4838#1 = RMul(realLit482F,r4833);
          real r4839#1 = RAdd(r4837,r4838);
          tensor[2] op1_e3_l_37482E#1 = <tensor[2]>[r4835,r4839];
          real op1_e3_l_384847#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37482E);
          real realLit484B#1 = 0.1e1;
          real r484C#2 = RDiv(realLit484B,op1_e3_l_384847);
          real r484D#1 = _t451C;
          real r484E#1 = RMul(r484C,r484D);
          real r484F#1 = _t451E;
          real r4850#1 = RMul(r484C,r484F);
          real realLit485A#2 = 0.e0;
          real r485B#2 = r484E;
          real r485C#1 = RMul(realLit485A,r485B);
          real realLit485D#1 = 0.1e1;
          real r485E#2 = r4850;
          real r485F#1 = RMul(realLit485D,r485E);
          real r4860#1 = RAdd(r485C,r485F);
          real realLit4861#1 = -0.1e1;
          real r4862#1 = RMul(realLit4861,r485B);
          real r4863#1 = RMul(realLit485A,r485E);
          real r4864#1 = RAdd(r4862,r4863);
          tensor[2] op1_e3_l_414859#1 = <tensor[2]>[r4860,r4864];
          real _t4872#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_414859);
          bool _t4875#4 = GTE<real>(_t4872,_t4764);
          bool _t4877#1 = GT<real>(time482C,_t4872);
          real _t4879#1 = Abs<real>(op1_e3_l_384847);
          bool _t487C#4 = GTE<real>(_t4879,_t476D);
          bool _t487E#1 = BAnd(_t4877,_t487C);
          bool _t4880#1 = BAnd(_t4875,_t487E);
          if _t4880 then goto ASSIGN4884 else goto JOIN48B0
        ASSIGN4884:  preds = [COND4882]
          real _t4883#3 = 0.1e-8;
          real _t4885#1 = RAdd(_t451C,_t4883);
          tensor[2] _t4888#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78488A#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79488D#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78488A);
          real _t4890#1 = VDot<2>(_t4888,op1_e3_l_79488D);
          bool _t4893#1 = GT<real>(_t4885,_t4890);
          tensor[2] _t4895#1 = <tensor[2]>[_t4883,_t4883];
          tensor[2] v4898#1 = VAdd<2>(_t4895,op1_e3_l_274704);
          tensor[2] _t4897#2 = VAdd<2>(v4898,op1_e3_l_78488A);
          real _t489C#1 = VIndex<2,0>(_t4897);
          bool _t489E#1 = GT<real>(_t489C,_t4514);
          real _t48A0#1 = VIndex<2,1>(_t4897);
          bool _t48A2#1 = GT<real>(_t48A0,_t4514);
          bool _t48A4#1 = BAnd(_t489E,_t48A2);
          bool _t48A6#1 = BAnd(_t4893,_t48A4);
          if _t48A6 then goto ASSIGN48AA else goto JOIN48AD
        ASSIGN48AA:  preds = [COND48A8]
          int face48A9#1 = 2;
          goto JOIN48AD
        JOIN48AD:  preds = [ASSIGN48AA,COND48A8]
          int face48AB#1 = phi(face48A9,face482B)
          real time48AC#1 = phi(_t4872,time482C)
          goto JOIN48B0
        JOIN48B0:  preds = [JOIN48AD,COND4882]
          int face48AE#2 = phi(face48AB,face482B)
          real time48AF#1 = phi(time48AC,time482C)
          bool _t48B1#1 = NEQ<int>(face48AE,face451A);
          if _t48B1 then goto ASSIGN48B5 else goto ASSIGN4AE6
        ASSIGN48B5:  preds = [COND48B3]
          real _t48B4#1 = Max<real>(time48AF,_t451E);
          real _t48B6#1 = IntToReal(face48AE);
          tensor[2] _t48B8#1 = <tensor[2]>[_t48B4,_t48B6];
          goto JOIN48BC
        JOIN48BC:  preds = [ASSIGN48B9,ASSIGN4AE6]
          tensor[2] _t48BA#1 = phi(_t48B8,_t48BB)
          real newTime48BD#2 = VIndex<2,0>(_t48BA);
          bool _t48BF#1 = GTE<real>(newTime48BD,_t451E);
          if _t48BF then goto COND48C2 else goto JOIN4AE2
        COND48C2:  preds = [COND48C1]
          if _t4773 then goto ASSIGN48C4 else goto JOIN48F0
        ASSIGN48C4:  preds = [COND48C2]
          real _t48C3#3 = 0.1e-8;
          real _t48C5#1 = RAdd(_t451C,_t48C3);
          tensor[2] _t48C8#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848CA#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7948CD#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848CA);
          real _t48D0#1 = VDot<2>(_t48C8,op1_e3_l_7948CD);
          bool _t48D3#1 = GT<real>(_t48C5,_t48D0);
          tensor[2] _t48D5#1 = <tensor[2]>[_t48C3,_t48C3];
          tensor[2] v48D8#1 = VAdd<2>(_t48D5,op1_e3_l_274704);
          tensor[2] _t48D7#2 = VAdd<2>(v48D8,op1_e3_l_7848CA);
          real _t48DC#1 = VIndex<2,0>(_t48D7);
          bool _t48DE#1 = GT<real>(_t48DC,_t4514);
          real _t48E0#1 = VIndex<2,1>(_t48D7);
          bool _t48E2#1 = GT<real>(_t48E0,_t4514);
          bool _t48E4#1 = BAnd(_t48DE,_t48E2);
          bool _t48E6#1 = BAnd(_t48D3,_t48E4);
          if _t48E6 then goto ASSIGN48EA else goto JOIN48ED
        ASSIGN48EA:  preds = [COND48E8]
          int face48E9#1 = 0;
          goto JOIN48ED
        JOIN48ED:  preds = [ASSIGN48EA,COND48E8]
          int face48EB#1 = phi(face48E9,face451A)
          real time48EC#1 = phi(_t4761,time4518)
          goto JOIN48F0
        JOIN48F0:  preds = [JOIN48ED,COND48C2]
          int face48EE#2 = phi(face48EB,face451A)
          real time48EF#3 = phi(time48EC,time4518)
          bool _t48F1#1 = GT<real>(time48EF,_t47EF);
          bool _t48F3#1 = BAnd(_t48F1,_t47F9);
          bool _t48F5#1 = BAnd(_t47F2,_t48F3);
          if _t48F5 then goto ASSIGN48F9 else goto JOIN4925
        ASSIGN48F9:  preds = [COND48F7]
          real _t48F8#3 = 0.1e-8;
          real _t48FA#1 = RAdd(_t451C,_t48F8);
          tensor[2] _t48FD#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848FF#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794902#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848FF);
          real _t4905#1 = VDot<2>(_t48FD,op1_e3_l_794902);
          bool _t4908#1 = GT<real>(_t48FA,_t4905);
          tensor[2] _t490A#1 = <tensor[2]>[_t48F8,_t48F8];
          tensor[2] v490D#1 = VAdd<2>(_t490A,op1_e3_l_274704);
          tensor[2] _t490C#2 = VAdd<2>(v490D,op1_e3_l_7848FF);
          real _t4911#1 = VIndex<2,0>(_t490C);
          bool _t4913#1 = GT<real>(_t4911,_t4514);
          real _t4915#1 = VIndex<2,1>(_t490C);
          bool _t4917#1 = GT<real>(_t4915,_t4514);
          bool _t4919#1 = BAnd(_t4913,_t4917);
          bool _t491B#1 = BAnd(_t4908,_t4919);
          if _t491B then goto ASSIGN491F else goto JOIN4922
        ASSIGN491F:  preds = [COND491D]
          int face491E#1 = 1;
          goto JOIN4922
        JOIN4922:  preds = [ASSIGN491F,COND491D]
          int face4920#1 = phi(face491E,face48EE)
          real time4921#1 = phi(_t47EF,time48EF)
          goto JOIN4925
        JOIN4925:  preds = [JOIN4922,COND48F7]
          int face4923#2 = phi(face4920,face48EE)
          real time4924#3 = phi(time4921,time48EF)
          bool _t4926#1 = GT<real>(time4924,_t4872);
          bool _t4928#1 = BAnd(_t4926,_t487C);
          bool _t492A#1 = BAnd(_t4875,_t4928);
          if _t492A then goto ASSIGN492E else goto JOIN495A
        ASSIGN492E:  preds = [COND492C]
          real _t492D#3 = 0.1e-8;
          real _t492F#1 = RAdd(_t451C,_t492D);
          tensor[2] _t4932#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784934#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794937#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784934);
          real _t493A#1 = VDot<2>(_t4932,op1_e3_l_794937);
          bool _t493D#1 = GT<real>(_t492F,_t493A);
          tensor[2] _t493F#1 = <tensor[2]>[_t492D,_t492D];
          tensor[2] v4942#1 = VAdd<2>(_t493F,op1_e3_l_274704);
          tensor[2] _t4941#2 = VAdd<2>(v4942,op1_e3_l_784934);
          real _t4946#1 = VIndex<2,0>(_t4941);
          bool _t4948#1 = GT<real>(_t4946,_t4514);
          real _t494A#1 = VIndex<2,1>(_t4941);
          bool _t494C#1 = GT<real>(_t494A,_t4514);
          bool _t494E#1 = BAnd(_t4948,_t494C);
          bool _t4950#1 = BAnd(_t493D,_t494E);
          if _t4950 then goto ASSIGN4954 else goto JOIN4957
        ASSIGN4954:  preds = [COND4952]
          int face4953#1 = 2;
          goto JOIN4957
        JOIN4957:  preds = [ASSIGN4954,COND4952]
          int face4955#1 = phi(face4953,face4923)
          real time4956#1 = phi(_t4872,time4924)
          goto JOIN495A
        JOIN495A:  preds = [JOIN4957,COND492C]
          int face4958#2 = phi(face4955,face4923)
          real time4959#1 = phi(time4956,time4924)
          bool _t495B#1 = NEQ<int>(face4958,face451A);
          if _t495B then goto ASSIGN495F else goto ASSIGN4AE5
        ASSIGN495F:  preds = [COND495D]
          real _t495E#1 = Max<real>(time4959,_t451E);
          real _t4960#1 = IntToReal(face4958);
          tensor[2] _t4962#1 = <tensor[2]>[_t495E,_t4960];
          goto JOIN4966
        JOIN4966:  preds = [ASSIGN4963,ASSIGN4AE5]
          tensor[2] _t4964#1 = phi(_t4962,_t4965)
          real _t4967#1 = VIndex<2,0>(_t4964);
          tensor[2] op1_e3_l_354969#1 = VScale<2>(_t4967,op1_e3_l_36470F);
          tensor[2] _t496C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_354969);
          if _t4773 then goto ASSIGN4971 else goto JOIN499D
        ASSIGN4971:  preds = [COND496F]
          real _t4970#3 = 0.1e-8;
          real _t4972#1 = RAdd(_t451C,_t4970);
          tensor[2] _t4975#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784977#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79497A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784977);
          real _t497D#1 = VDot<2>(_t4975,op1_e3_l_79497A);
          bool _t4980#1 = GT<real>(_t4972,_t497D);
          tensor[2] _t4982#1 = <tensor[2]>[_t4970,_t4970];
          tensor[2] v4985#1 = VAdd<2>(_t4982,op1_e3_l_274704);
          tensor[2] _t4984#2 = VAdd<2>(v4985,op1_e3_l_784977);
          real _t4989#1 = VIndex<2,0>(_t4984);
          bool _t498B#1 = GT<real>(_t4989,_t4514);
          real _t498D#1 = VIndex<2,1>(_t4984);
          bool _t498F#1 = GT<real>(_t498D,_t4514);
          bool _t4991#1 = BAnd(_t498B,_t498F);
          bool _t4993#1 = BAnd(_t4980,_t4991);
          if _t4993 then goto ASSIGN4997 else goto JOIN499A
        ASSIGN4997:  preds = [COND4995]
          int face4996#1 = 0;
          goto JOIN499A
        JOIN499A:  preds = [ASSIGN4997,COND4995]
          int face4998#1 = phi(face4996,face451A)
          real time4999#1 = phi(_t4761,time4518)
          goto JOIN499D
        JOIN499D:  preds = [JOIN499A,COND496F]
          int face499B#2 = phi(face4998,face451A)
          real time499C#3 = phi(time4999,time4518)
          bool _t499E#1 = GT<real>(time499C,_t47EF);
          bool _t49A0#1 = BAnd(_t499E,_t47F9);
          bool _t49A2#1 = BAnd(_t47F2,_t49A0);
          if _t49A2 then goto ASSIGN49A6 else goto JOIN49D2
        ASSIGN49A6:  preds = [COND49A4]
          real _t49A5#3 = 0.1e-8;
          real _t49A7#1 = RAdd(_t451C,_t49A5);
          tensor[2] _t49AA#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849AC#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949AF#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849AC);
          real _t49B2#1 = VDot<2>(_t49AA,op1_e3_l_7949AF);
          bool _t49B5#1 = GT<real>(_t49A7,_t49B2);
          tensor[2] _t49B7#1 = <tensor[2]>[_t49A5,_t49A5];
          tensor[2] v49BA#1 = VAdd<2>(_t49B7,op1_e3_l_274704);
          tensor[2] _t49B9#2 = VAdd<2>(v49BA,op1_e3_l_7849AC);
          real _t49BE#1 = VIndex<2,0>(_t49B9);
          bool _t49C0#1 = GT<real>(_t49BE,_t4514);
          real _t49C2#1 = VIndex<2,1>(_t49B9);
          bool _t49C4#1 = GT<real>(_t49C2,_t4514);
          bool _t49C6#1 = BAnd(_t49C0,_t49C4);
          bool _t49C8#1 = BAnd(_t49B5,_t49C6);
          if _t49C8 then goto ASSIGN49CC else goto JOIN49CF
        ASSIGN49CC:  preds = [COND49CA]
          int face49CB#1 = 1;
          goto JOIN49CF
        JOIN49CF:  preds = [ASSIGN49CC,COND49CA]
          int face49CD#1 = phi(face49CB,face499B)
          real time49CE#1 = phi(_t47EF,time499C)
          goto JOIN49D2
        JOIN49D2:  preds = [JOIN49CF,COND49A4]
          int face49D0#2 = phi(face49CD,face499B)
          real time49D1#3 = phi(time49CE,time499C)
          bool _t49D3#1 = GT<real>(time49D1,_t4872);
          bool _t49D5#1 = BAnd(_t49D3,_t487C);
          bool _t49D7#1 = BAnd(_t4875,_t49D5);
          if _t49D7 then goto ASSIGN49DB else goto JOIN4A07
        ASSIGN49DB:  preds = [COND49D9]
          real _t49DA#3 = 0.1e-8;
          real _t49DC#1 = RAdd(_t451C,_t49DA);
          tensor[2] _t49DF#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849E1#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949E4#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849E1);
          real _t49E7#1 = VDot<2>(_t49DF,op1_e3_l_7949E4);
          bool _t49EA#1 = GT<real>(_t49DC,_t49E7);
          tensor[2] _t49EC#1 = <tensor[2]>[_t49DA,_t49DA];
          tensor[2] v49EF#1 = VAdd<2>(_t49EC,op1_e3_l_274704);
          tensor[2] _t49EE#2 = VAdd<2>(v49EF,op1_e3_l_7849E1);
          real _t49F3#1 = VIndex<2,0>(_t49EE);
          bool _t49F5#1 = GT<real>(_t49F3,_t4514);
          real _t49F7#1 = VIndex<2,1>(_t49EE);
          bool _t49F9#1 = GT<real>(_t49F7,_t4514);
          bool _t49FB#1 = BAnd(_t49F5,_t49F9);
          bool _t49FD#1 = BAnd(_t49EA,_t49FB);
          if _t49FD then goto ASSIGN4A01 else goto JOIN4A04
        ASSIGN4A01:  preds = [COND49FF]
          int face4A00#1 = 2;
          goto JOIN4A04
        JOIN4A04:  preds = [ASSIGN4A01,COND49FF]
          int face4A02#1 = phi(face4A00,face49D0)
          real time4A03#1 = phi(_t4872,time49D1)
          goto JOIN4A07
        JOIN4A07:  preds = [JOIN4A04,COND49D9]
          int face4A05#2 = phi(face4A02,face49D0)
          real time4A06#1 = phi(time4A03,time49D1)
          bool _t4A08#1 = NEQ<int>(face4A05,face451A);
          if _t4A08 then goto ASSIGN4A0C else goto ASSIGN4AE4
        ASSIGN4A0C:  preds = [COND4A0A]
          real _t4A0B#1 = Max<real>(time4A06,_t451E);
          real _t4A0D#1 = IntToReal(face4A05);
          tensor[2] _t4A0F#1 = <tensor[2]>[_t4A0B,_t4A0D];
          goto JOIN4A13
        JOIN4A13:  preds = [ASSIGN4A10,ASSIGN4AE4]
          tensor[2] _t4A11#1 = phi(_t4A0F,_t4A12)
          real _t4A14#1 = VIndex<2,0>(_t4A11);
          tensor[2] op1_e3_l_34A16#1 = VScale<2>(_t4A14,dposProj4256);
          tensor[2] _t4A19#1 = VAdd<2>(rayStartProj4254,op1_e3_l_34A16);
          if _t4773 then goto ASSIGN4A1E else goto JOIN4A4A
        ASSIGN4A1E:  preds = [COND4A1C]
          real _t4A1D#3 = 0.1e-8;
          real _t4A1F#1 = RAdd(_t451C,_t4A1D);
          tensor[2] _t4A22#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A24#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A27#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A24);
          real _t4A2A#1 = VDot<2>(_t4A22,op1_e3_l_794A27);
          bool _t4A2D#1 = GT<real>(_t4A1F,_t4A2A);
          tensor[2] _t4A2F#1 = <tensor[2]>[_t4A1D,_t4A1D];
          tensor[2] v4A32#1 = VAdd<2>(_t4A2F,op1_e3_l_274704);
          tensor[2] _t4A31#2 = VAdd<2>(v4A32,op1_e3_l_784A24);
          real _t4A36#1 = VIndex<2,0>(_t4A31);
          bool _t4A38#1 = GT<real>(_t4A36,_t4514);
          real _t4A3A#1 = VIndex<2,1>(_t4A31);
          bool _t4A3C#1 = GT<real>(_t4A3A,_t4514);
          bool _t4A3E#1 = BAnd(_t4A38,_t4A3C);
          bool _t4A40#1 = BAnd(_t4A2D,_t4A3E);
          if _t4A40 then goto ASSIGN4A44 else goto JOIN4A47
        ASSIGN4A44:  preds = [COND4A42]
          int face4A43#1 = 0;
          goto JOIN4A47
        JOIN4A47:  preds = [ASSIGN4A44,COND4A42]
          int face4A45#1 = phi(face4A43,face451A)
          real time4A46#1 = phi(_t4761,time4518)
          goto JOIN4A4A
        JOIN4A4A:  preds = [JOIN4A47,COND4A1C]
          int face4A48#2 = phi(face4A45,face451A)
          real time4A49#3 = phi(time4A46,time4518)
          bool _t4A4B#1 = GT<real>(time4A49,_t47EF);
          bool _t4A4D#1 = BAnd(_t4A4B,_t47F9);
          bool _t4A4F#1 = BAnd(_t47F2,_t4A4D);
          if _t4A4F then goto ASSIGN4A53 else goto JOIN4A7F
        ASSIGN4A53:  preds = [COND4A51]
          real _t4A52#3 = 0.1e-8;
          real _t4A54#1 = RAdd(_t451C,_t4A52);
          tensor[2] _t4A57#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A59#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A5C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A59);
          real _t4A5F#1 = VDot<2>(_t4A57,op1_e3_l_794A5C);
          bool _t4A62#1 = GT<real>(_t4A54,_t4A5F);
          tensor[2] _t4A64#1 = <tensor[2]>[_t4A52,_t4A52];
          tensor[2] v4A67#1 = VAdd<2>(_t4A64,op1_e3_l_274704);
          tensor[2] _t4A66#2 = VAdd<2>(v4A67,op1_e3_l_784A59);
          real _t4A6B#1 = VIndex<2,0>(_t4A66);
          bool _t4A6D#1 = GT<real>(_t4A6B,_t4514);
          real _t4A6F#1 = VIndex<2,1>(_t4A66);
          bool _t4A71#1 = GT<real>(_t4A6F,_t4514);
          bool _t4A73#1 = BAnd(_t4A6D,_t4A71);
          bool _t4A75#1 = BAnd(_t4A62,_t4A73);
          if _t4A75 then goto ASSIGN4A79 else goto JOIN4A7C
        ASSIGN4A79:  preds = [COND4A77]
          int face4A78#1 = 1;
          goto JOIN4A7C
        JOIN4A7C:  preds = [ASSIGN4A79,COND4A77]
          int face4A7A#1 = phi(face4A78,face4A48)
          real time4A7B#1 = phi(_t47EF,time4A49)
          goto JOIN4A7F
        JOIN4A7F:  preds = [JOIN4A7C,COND4A51]
          int face4A7D#2 = phi(face4A7A,face4A48)
          real time4A7E#3 = phi(time4A7B,time4A49)
          bool _t4A80#1 = GT<real>(time4A7E,_t4872);
          bool _t4A82#1 = BAnd(_t4A80,_t487C);
          bool _t4A84#1 = BAnd(_t4875,_t4A82);
          if _t4A84 then goto ASSIGN4A88 else goto JOIN4AB4
        ASSIGN4A88:  preds = [COND4A86]
          real _t4A87#3 = 0.1e-8;
          real _t4A89#1 = RAdd(_t451C,_t4A87);
          tensor[2] _t4A8C#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A8E#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A91#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A8E);
          real _t4A94#1 = VDot<2>(_t4A8C,op1_e3_l_794A91);
          bool _t4A97#1 = GT<real>(_t4A89,_t4A94);
          tensor[2] _t4A99#1 = <tensor[2]>[_t4A87,_t4A87];
          tensor[2] v4A9C#1 = VAdd<2>(_t4A99,op1_e3_l_274704);
          tensor[2] _t4A9B#2 = VAdd<2>(v4A9C,op1_e3_l_784A8E);
          real _t4AA0#1 = VIndex<2,0>(_t4A9B);
          bool _t4AA2#1 = GT<real>(_t4AA0,_t4514);
          real _t4AA4#1 = VIndex<2,1>(_t4A9B);
          bool _t4AA6#1 = GT<real>(_t4AA4,_t4514);
          bool _t4AA8#1 = BAnd(_t4AA2,_t4AA6);
          bool _t4AAA#1 = BAnd(_t4A97,_t4AA8);
          if _t4AAA then goto ASSIGN4AAE else goto JOIN4AB1
        ASSIGN4AAE:  preds = [COND4AAC]
          int face4AAD#1 = 2;
          goto JOIN4AB1
        JOIN4AB1:  preds = [ASSIGN4AAE,COND4AAC]
          int face4AAF#1 = phi(face4AAD,face4A7D)
          real time4AB0#1 = phi(_t4872,time4A7E)
          goto JOIN4AB4
        JOIN4AB4:  preds = [JOIN4AB1,COND4A86]
          int face4AB2#2 = phi(face4AAF,face4A7D)
          real time4AB3#1 = phi(time4AB0,time4A7E)
          bool _t4AB5#1 = NEQ<int>(face4AB2,face451A);
          if _t4AB5 then goto ASSIGN4AB9 else goto ASSIGN4AE3
        ASSIGN4AB9:  preds = [COND4AB7]
          real _t4AB8#1 = Max<real>(time4AB3,_t451E);
          real _t4ABA#1 = IntToReal(face4AB2);
          tensor[2] _t4ABC#1 = <tensor[2]>[_t4AB8,_t4ABA];
          goto JOIN4AC0
        JOIN4AC0:  preds = [ASSIGN4ABD,ASSIGN4AE3]
          tensor[2] _t4ABE#1 = phi(_t4ABC,_t4ABF)
          real _t4AC1#1 = VIndex<2,1>(_t4ABE);
          real t4AC3#1 = Floor<1>(_t4AC1);
          int _t4AC5#1 = RealToInt<1>(t4AC3);
          femData:MeshPos p4AC7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t427E,_t427C,_t496C,_t4A19,_t4AC5);
          real op1_e3_l_34AC9#1 = RSub(camFarVsp4252,camNearVsp4250);
          real op1_e3_l_44ACC#1 = RMul(newTime48BD,op1_e3_l_34AC9);
          real newRayTime4ACF#3 = RAdd(camNearVsp4250,op1_e3_l_44ACC);
          real[] normalizedTimes4AD2#1 = Append<real>(normalizedTimes44FE,newRayTime4ACF);
          femData:MeshPos[] poses4AD4#1 = Append<femData:MeshPos>(poses44FB,p4AC7);
          bool _t4AD6#1 = GT<real>(startTime4AD7,newRayTime4ACF);
          if _t4AD6 then goto JOIN4ADD else goto JOIN4ADD
        JOIN4ADD:  preds = [COND4AD9,COND4AD9]
          real startTime4ADA#1 = phi(newRayTime4ACF,startTime4AD7)
          int currentCellInt4ADB#1 = phi(cellIntersects4503,currentCellInt4ADC)
          int _t4ADE#1 = 1;
          int cellIntersects4AE0#1 = IAdd(cellIntersects4503,_t4ADE);
          goto JOIN4AE2
        JOIN4AE2:  preds = [ASSIGN4AE1,COND48C1]
          real startTime4508#1 = phi(startTime4ADA,startTime4AD7)
          int currentCellInt450B#1 = phi(currentCellInt4ADB,currentCellInt4ADC)
          int cellIntersects450D#1 = phi(cellIntersects4AE0,cellIntersects4503)
          real[] normalizedTimes450F#1 = phi(normalizedTimes4AD2,normalizedTimes44FE)
          femData:MeshPos[] poses4511#1 = phi(poses4AD4,poses44FB)
          goto JOIN4512
        ASSIGN4AE3:  preds = [COND4AB7]
          tensor[2] _t4ABF#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4AC0
        ASSIGN4AE4:  preds = [COND4A0A]
          tensor[2] _t4A12#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4A13
        ASSIGN4AE5:  preds = [COND495D]
          tensor[2] _t4965#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4966
        ASSIGN4AE6:  preds = [COND48B3]
          tensor[2] _t48BB#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN48BC
        ASSIGN4AE9:  preds = [FOREACH4276]
          int _t4AE8#1 = 0;
          bool _t4AEA#1 = NEQ<int>(cellIntersects4503,_t4AE8);
          if _t4AEA then goto ASSIGN4AEE else goto ASSIGN4B3C
        ASSIGN4AEE:  preds = [COND4AEC]
          femData:MeshPos pos4AED#4 = Subscript<femData:MeshPos[]>(poses44FB,currentCellInt4ADC);
          real rayN4AEF#2 = Subscript<real[]>(normalizedTimes44FE,currentCellInt4ADC);
          tensor[3] op1_e3_l_34AF1#1 = VScale<3>(rayN4AEF,rayVec424E);
          tensor[3] _t4AF4#1 = VAdd<3>(rayOrig424C,op1_e3_l_34AF1);
          tensor[3][2] _t4AF7#1 = <tensor[3][2]>{rayOrig424C,_t4AF4};
          tensor[3][] _t4AF9#1 = MkDynamic<tensor[3],2>(_t4AF7);
          tensor[3][] spaceInter4AFB#1 = Concat<tensor[3]>(spaceInter425E,_t4AF9);
          tensor[2] _t4AFD#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4AED);
          tensor[2][1] _t4AFF#1 = <tensor[2][1]>{_t4AFD};
          tensor[2][] _t4B01#1 = MkDynamic<tensor[2],1>(_t4AFF);
          femData:Mesh _t4B03#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4AED);
          int _t4B05#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4AED);
          femData:MeshCell currentCell4B07#2 = LoadFem<femData:MeshCell>(_t4B03,_t4B05);
          femData:MeshCell[1] _t4B09#1 = <femData:MeshCell[1]>{currentCell4B07};
          femData:MeshCell[] _t4B0B#1 = MkDynamic<femData:MeshCell,1>(_t4B09);
          string _t4B0D#1 = "In the interval:";
          tensor[2] _t4B0F#1 = <tensor[2]>[camNearVsp4250,camFarVsp4252];
          string _t4B11#3 = "\n";
          Print<[string,tensor[2],string]>(_t4B0D,_t4B0F,_t4B11);
          string _t4B14#1 = "Possible times:";
          Print<[string,real[],string]>(_t4B14,normalizedTimes44FE,_t4B11);
          string _t4B17#1 = "cells:";
          femData:MeshCell[] accum4B19#1 = <femData:MeshCell[]>{};
        FOREACH4B1C:  preds = [ASSIGN4B1A,NEXT4B26]
          foreach (p4B1B in poses44FB) on exit goto MASSIGN4B27
            femData:MeshCell[] accum4B24#2 = phi(accum4B19,accum4B23)
          femData:Mesh _t4B1D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p4B1B);
          int _t4B1F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p4B1B);
          femData:MeshCell _t4B21#1 = LoadFem<femData:MeshCell>(_t4B1D,_t4B1F);
          femData:MeshCell[] accum4B23#1 = Append<femData:MeshCell>(accum4B24,_t4B21);
          goto FOREACH4B1C
        MASSIGN4B27:  preds = [FOREACH4B1C]
          Print<[string,femData:MeshCell[],string]>(_t4B17,accum4B24,_t4B11);
          goto JOIN4B2E
        JOIN4B2E:  preds = [MASSIGN4B27,*STABILIZE4B4A]
          femData:MeshPos pos4B28#1 = phi(pos4AED)
          femData:MeshCell currentCell4B29#1 = phi(currentCell4B07)
          real rayN4B2A#1 = phi(rayN4AEF)
          femData:MeshCell[] cellInter4B2B#1 = phi(_t4B0B)
          tensor[2][] refSpaceInter4B2C#1 = phi(_t4B01)
          tensor[3][] spaceInter4B2D#1 = phi(spaceInter4AFB)
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.spaceInter = spaceInter4B2D;
          self.refSpaceInter = refSpaceInter4B2C;
          self.cellInter = cellInter4B2B;
          self.currentCellInt = currentCellInt4ADC;
          self.rayN = rayN4B2A;
          self.currentCell = currentCell4B29;
          self.pos = pos4B28;
          self.startsInside = startsInside4AE7;
          active
        ASSIGN4B3C:  preds = [COND4AEC]
          string _t4B3B#1 = "No intersection!\n";
          Print<[string]>(_t4B3B);
          string _t4B3E#1 = "Ui: ";
          string _t4B40#1 = " Vi:";
          string _t4B42#1 = "\n";
          Print<[string,int,string,int,string]>(_t4B3E,ui4264,_t4B40,vi4266,_t4B42);
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.currentCellInt = currentCellInt4ADC;
          self.startsInside = startsInside4AE7;
          stabilize
          goto JOIN4B2E
        ASSIGN4B4B:  preds = [COND426A]
          bool _t426E#1 = NEQ<int>(vi4266,debugV424A);
          goto JOIN426F
    end start
    method update
        ENTRY4B4C:  preds = []
          tensor[3] rayOrig4B4D#4 = self.rayOrig;
          tensor[3] rayVec4B4F#6 = self.rayVec;
          real camFarVsp4B51#6 = self.camFarVsp;
          femData:MeshPos[] poses4B53#2 = self.poses;
          real[] normalizedTimes4B55#4 = self.normalizedTimes;
          int cellIntersects4B57#1 = self.cellIntersects;
          tensor[2][] rayCellInter4B59#2 = self.rayCellInter;
          tensor[3][] spaceInter4B5B#3 = self.spaceInter;
          tensor[2][] refSpaceInter4B5D#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter4B5F#4 = self.cellInter;
          real rayN4B61#8 = self.rayN;
          femData:MeshCell currentCell4B63#2 = self.currentCell;
          int steps4B65#1 = self.steps;
          femData:MeshPos pos4B67#8 = self.pos;
          bool startsInside4B69#2 = self.startsInside;
          int ui4B6B#1 = self.ui;
          int vi4B6D#1 = self.vi;
          string _t4B6F#1 = "Ui: ";
          string _t4B71#1 = " vi: ";
          string _t4B73#21 = "\n";
          Print<[string,int,string,int,string]>(_t4B6F,ui4B6B,_t4B71,vi4B6D,_t4B73);
          string _t4B76#1 = "The current ref pos is:";
          tensor[2] _t4B78#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4B67);
          Print<[string,tensor[2],string]>(_t4B76,_t4B78,_t4B73);
          string _t4B7B#1 = "Current cell:";
          femData:Mesh _t4B7D#13 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4B67);
          int _t4B7F#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4B67);
          femData:MeshCell _t4B81#3 = LoadFem<femData:MeshCell>(_t4B7D,_t4B7F);
          Print<[string,femData:MeshCell,string]>(_t4B7B,_t4B81,_t4B73);
          string _t4B84#1 = "The current time is:";
          Print<[string,real,string]>(_t4B84,rayN4B61,_t4B73);
          string _t4B87#2 = "The current world pos is:";
          int ilit4B8A#1 = 3;
          int mulRes4B8B#3 = IMul(_t4B7F,ilit4B8A);
          int addRes4B8D#1 = mulRes4B8B;
          int idx4B8E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B8D);
          int ilit4B8F#1 = 1;
          int addRes4B90#1 = IAdd(mulRes4B8B,ilit4B8F);
          int idx4B91#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B90);
          int ilit4B92#1 = 2;
          int addRes4B93#1 = IAdd(mulRes4B8B,ilit4B92);
          int idx4B94#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B93);
          int ilit4BA5#3 = 2;
          int idx4BA6#1 = idx4B8E;
          int mulRes4BA7#2 = IMul(ilit4BA5,idx4BA6);
          int addRes4BA8#1 = mulRes4BA7;
          int ilit4BA9#3 = 1;
          int addRes4BAA#1 = IAdd(ilit4BA9,mulRes4BA7);
          real dof_load4BAB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BA8);
          real dof_load4BAC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BAA);
          int idx4BAE#1 = idx4B91;
          int mulRes4BAF#2 = IMul(ilit4BA5,idx4BAE);
          int addRes4BB0#1 = mulRes4BAF;
          int addRes4BB1#1 = IAdd(ilit4BA9,mulRes4BAF);
          real dof_load4BB2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB0);
          real dof_load4BB3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB1);
          int idx4BB5#1 = idx4B94;
          int mulRes4BB6#2 = IMul(ilit4BA5,idx4BB5);
          int addRes4BB7#1 = mulRes4BB6;
          int addRes4BB8#1 = IAdd(ilit4BA9,mulRes4BB6);
          real dof_load4BB9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB7);
          real dof_load4BBA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB8);
          real varAcc4BD8#1 = VIndex<2,0>(_t4B78);
          real varAcc4BD9#1 = VIndex<2,1>(_t4B78);
          real coeff4BDA#2 = -0.1e1;
          real iden4BDB#1 = varAcc4BD8;
          real one4BDC#7 = 0.1e1;
          real prod4BDD#2 = RMul(iden4BDB,one4BDC);
          real iden4BDE#1 = varAcc4BD9;
          real prod4BDF#2 = RMul(one4BDC,iden4BDE);
          real prod4BE0#1 = RMul(one4BDC,one4BDC);
          real mult4BE1#1 = RMul(one4BDC,prod4BE0);
          real mult4BE2#1 = RMul(coeff4BDA,prod4BDF);
          real mult4BE3#1 = RMul(coeff4BDA,prod4BDD);
          real sum4BE4#1 = RAdd(mult4BE2,mult4BE3);
          real sum4BE5#1 = RAdd(mult4BE1,sum4BE4);
          real intermediate4BE6#2 = sum4BE5;
          real basisEval4BE7#2 = RMul(one4BDC,prod4BDD);
          real basisEval4BE8#2 = RMul(one4BDC,prod4BDF);
          real r4BFE#1 = dof_load4BAB;
          real r4BFF#2 = intermediate4BE6;
          real r4C00#1 = RMul(r4BFE,r4BFF);
          real r4C01#1 = dof_load4BB2;
          real r4C02#2 = basisEval4BE7;
          real r4C03#1 = RMul(r4C01,r4C02);
          real r4C04#1 = dof_load4BB9;
          real r4C05#2 = basisEval4BE8;
          real r4C06#1 = RMul(r4C04,r4C05);
          real r4C07#1 = RAdd(r4C00,r4C03);
          real r4C08#1 = RAdd(r4C07,r4C06);
          real r4C09#1 = dof_load4BAC;
          real r4C0A#1 = RMul(r4C09,r4BFF);
          real r4C0B#1 = dof_load4BB3;
          real r4C0C#1 = RMul(r4C0B,r4C02);
          real r4C0D#1 = dof_load4BBA;
          real r4C0E#1 = RMul(r4C0D,r4C05);
          real r4C0F#1 = RAdd(r4C0A,r4C0C);
          real r4C10#1 = RAdd(r4C0F,r4C0E);
          tensor[2] _t4BFD#2 = <tensor[2]>[r4C08,r4C10];
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          tensor[3] op1_e3_l_34C27#1 = VScale<3>(rayN4B61,rayVec4B4F);
          tensor[3] stupid4C2A#2 = VAdd<3>(rayOrig4B4D,op1_e3_l_34C27);
          string _t4C2D#2 = "The current world pos should be:";
          real _t4C2F#1 = VIndex<3,0>(stupid4C2A);
          real _t4C31#1 = VIndex<3,1>(stupid4C2A);
          tensor[2] _t4C33#3 = <tensor[2]>[_t4C2F,_t4C31];
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real _t4C36#16 = 0.1e1;
          real _t4C38#3 = 0.1e-8;
          real _t4C3A#1 = RAdd(_t4C36,_t4C38);
          tensor[2] _t4C3D#1 = <tensor[2]>[_t4C36,_t4C36];
          real _t4C3F#1 = VDot<2>(_t4C3D,_t4B78);
          bool _t4C42#1 = GT<real>(_t4C3A,_t4C3F);
          tensor[2] _t4C44#1 = <tensor[2]>[_t4C38,_t4C38];
          tensor[2] _t4C46#2 = VAdd<2>(_t4C44,_t4B78);
          real _t4C49#1 = VIndex<2,0>(_t4C46);
          real _t4C4B#2 = -0.e0;
          bool _t4C4D#1 = GT<real>(_t4C49,_t4C4B);
          real _t4C4F#1 = VIndex<2,1>(_t4C46);
          bool _t4C51#1 = GT<real>(_t4C4F,_t4C4B);
          bool _t4C53#1 = BAnd(_t4C4D,_t4C51);
          bool _t4C55#1 = BAnd(_t4C42,_t4C53);
          bool _t4C57#1 = BNot(_t4C55);
          if _t4C57 then goto ASSIGN4C5B else goto JOIN4C64
        ASSIGN4C5B:  preds = [COND4C59]
          string _t4C5A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t4C5A);
          bool _t4C5D#1 = BNot(startsInside4B69);
          if _t4C5D then goto ASSIGN4C61 else goto JOIN4C63
        ASSIGN4C61:  preds = [COND4C5F]
          string _t4C60#1 = "Not because of an inside\n";
          Print<[string]>(_t4C60);
          goto JOIN4C63
        JOIN4C63:  preds = [MASSIGN4C62,COND4C5F]
          goto JOIN4C64
        JOIN4C64:  preds = [JOIN4C63,COND4C59]
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real r4C68#1 = dof_load4BAB;
          real r4C69#2 = intermediate4BE6;
          real r4C6A#1 = RMul(r4C68,r4C69);
          real r4C6B#1 = dof_load4BB2;
          real r4C6C#2 = basisEval4BE7;
          real r4C6D#1 = RMul(r4C6B,r4C6C);
          real r4C6E#1 = dof_load4BB9;
          real r4C6F#2 = basisEval4BE8;
          real r4C70#1 = RMul(r4C6E,r4C6F);
          real r4C71#1 = RAdd(r4C6A,r4C6D);
          real r4C72#1 = RAdd(r4C71,r4C70);
          real r4C73#1 = dof_load4BAC;
          real r4C74#1 = RMul(r4C73,r4C69);
          real r4C75#1 = dof_load4BB3;
          real r4C76#1 = RMul(r4C75,r4C6C);
          real r4C77#1 = dof_load4BBA;
          real r4C78#1 = RMul(r4C77,r4C6F);
          real r4C79#1 = RAdd(r4C74,r4C76);
          real r4C7A#1 = RAdd(r4C79,r4C78);
          tensor[2] probe_l_54C67#1 = <tensor[2]>[r4C72,r4C7A];
          tensor[2] op1_e3_l_74C90#2 = VSub<2>(probe_l_54C67,_t4C33);
          real op1_e3_l_94C93#1 = VDot<2>(op1_e3_l_74C90,op1_e3_l_74C90);
          real err4C96#2 = Sqrt(op1_e3_l_94C93);
          real _t4C99#1 = 0.1e-4;
          bool _t4C9B#1 = GT<real>(err4C96,_t4C99);
          if _t4C9B then goto ASSIGN4C9F else goto ASSIGN51EE
        ASSIGN4C9F:  preds = [COND4C9D]
          string _t4C9E#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t4C9E,err4C96,_t4B73);
          goto JOIN4CA1
        JOIN4CA1:  preds = [MASSIGN4CA0,MASSIGN51EF]
          int _t4CA2#13 = 1;
          int steps4CA4#4 = IAdd(steps4B65,_t4CA2);
          string _t4CA6#1 = "Orig:";
          string _t4CA8#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t4CA6,rayOrig4B4D,_t4CA8,rayVec4B4F,_t4B73);
          real op1_e3_l_34CAB#1 = RSub(camFarVsp4B51,rayN4B61);
          tensor[3] newDpos4CAE#2 = VScale<3>(op1_e3_l_34CAB,rayVec4B4F);
          tensor[2] _t4CB1#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos4B67);
          femData:Mesh _t4CB3#9 = ExtractFem<femData:Mesh,femData:MeshCell>(_t4B81);
          int _t4CB5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t4B81);
          real _t4CB9#1 = VIndex<3,0>(newDpos4CAE);
          real _t4CBB#1 = VIndex<3,1>(newDpos4CAE);
          tensor[2] _t4CBD#2 = <tensor[2]>[_t4CB9,_t4CBB];
          int _t4CBF#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos4B67);
          real time4CC1#5 = +inf;
          int face4CC3#9 = -1;
          real faceTime4CC5#6 = -inf;
          real _t4CC7#18 = 0.e0;
          tensor[2] _t4CC9#3 = <tensor[2]>[_t4C36,_t4CC7];
          real _t4CCB#8 = -0.1e1;
          tensor[2] _t4CCD#1 = <tensor[2]>[_t4CCB,_t4C36];
          int ilit4CD0#1 = 3;
          int mulRes4CD1#3 = IMul(_t4CB5,ilit4CD0);
          int addRes4CD3#1 = mulRes4CD1;
          int idx4CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD3);
          int ilit4CD5#1 = 1;
          int addRes4CD6#1 = IAdd(mulRes4CD1,ilit4CD5);
          int idx4CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD6);
          int ilit4CD8#1 = 2;
          int addRes4CD9#1 = IAdd(mulRes4CD1,ilit4CD8);
          int idx4CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD9);
          int ilit4CEB#3 = 2;
          int idx4CEC#1 = idx4CD4;
          int mulRes4CED#2 = IMul(ilit4CEB,idx4CEC);
          int addRes4CEE#1 = mulRes4CED;
          int ilit4CEF#3 = 1;
          int addRes4CF0#1 = IAdd(ilit4CEF,mulRes4CED);
          real dof_load4CF1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CEE);
          real dof_load4CF2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF0);
          int idx4CF4#1 = idx4CD7;
          int mulRes4CF5#2 = IMul(ilit4CEB,idx4CF4);
          int addRes4CF6#1 = mulRes4CF5;
          int addRes4CF7#1 = IAdd(ilit4CEF,mulRes4CF5);
          real dof_load4CF8#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF6);
          real dof_load4CF9#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF7);
          int idx4CFB#1 = idx4CDA;
          int mulRes4CFC#2 = IMul(ilit4CEB,idx4CFB);
          int addRes4CFD#1 = mulRes4CFC;
          int addRes4CFE#1 = IAdd(ilit4CEF,mulRes4CFC);
          real dof_load4CFF#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFD);
          real dof_load4D00#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFE);
          real coeff4D20#1 = -0.1e1;
          real one4D21#3 = 0.1e1;
          real prod4D22#2 = RMul(one4D21,one4D21);
          real basisEval4D23#4 = RMul(coeff4D20,prod4D22);
          real basisEval4D24#4 = RMul(one4D21,prod4D22);
          real basisEval4D25#4 = 0.e0;
          real r4D36#2 = dof_load4CF1;
          real r4D37#2 = basisEval4D23;
          real r4D38#1 = RMul(r4D36,r4D37);
          real r4D39#2 = dof_load4CF8;
          real r4D3A#2 = basisEval4D24;
          real r4D3B#1 = RMul(r4D39,r4D3A);
          real r4D3C#2 = dof_load4CFF;
          real r4D3D#2 = basisEval4D25;
          real r4D3E#1 = RMul(r4D3C,r4D3D);
          real r4D3F#1 = RAdd(r4D38,r4D3B);
          real r4D40#1 = RAdd(r4D3F,r4D3E);
          real r4D41#2 = basisEval4D23;
          real r4D42#1 = RMul(r4D36,r4D41);
          real r4D43#2 = basisEval4D25;
          real r4D44#1 = RMul(r4D39,r4D43);
          real r4D45#2 = basisEval4D24;
          real r4D46#1 = RMul(r4D3C,r4D45);
          real r4D47#1 = RAdd(r4D42,r4D44);
          real r4D48#1 = RAdd(r4D47,r4D46);
          real r4D4A#2 = dof_load4CF2;
          real r4D4B#1 = RMul(r4D4A,r4D37);
          real r4D4C#2 = dof_load4CF9;
          real r4D4D#1 = RMul(r4D4C,r4D3A);
          real r4D4E#2 = dof_load4D00;
          real r4D4F#1 = RMul(r4D4E,r4D3D);
          real r4D50#1 = RAdd(r4D4B,r4D4D);
          real r4D51#1 = RAdd(r4D50,r4D4F);
          real r4D52#1 = RMul(r4D4A,r4D41);
          real r4D53#1 = RMul(r4D4C,r4D43);
          real r4D54#1 = RMul(r4D4E,r4D45);
          real r4D55#1 = RAdd(r4D52,r4D53);
          real r4D56#1 = RAdd(r4D55,r4D54);
          real realLit4D7D#4 = 0.e0;
          real r4D7E#2 = r4D40;
          real r4D7F#1 = RMul(realLit4D7D,r4D7E);
          real realLit4D80#2 = -0.1e1;
          real r4D81#2 = r4D51;
          real r4D82#1 = RMul(realLit4D80,r4D81);
          real r4D83#1 = RAdd(r4D7F,r4D82);
          real r4D84#2 = r4D48;
          real r4D85#1 = RMul(realLit4D7D,r4D84);
          real r4D86#2 = r4D56;
          real r4D87#1 = RMul(realLit4D80,r4D86);
          real r4D88#1 = RAdd(r4D85,r4D87);
          real realLit4D8A#2 = 0.1e1;
          real r4D8B#1 = RMul(realLit4D8A,r4D7E);
          real r4D8C#1 = RMul(realLit4D7D,r4D81);
          real r4D8D#1 = RAdd(r4D8B,r4D8C);
          real r4D8E#1 = RMul(realLit4D8A,r4D84);
          real r4D8F#1 = RMul(realLit4D7D,r4D86);
          real r4D90#1 = RAdd(r4D8E,r4D8F);
          real r4DAA#1 = dof_load4CF1;
          real r4DAB#2 = basisEval4D23;
          real r4DAC#1 = RMul(r4DAA,r4DAB);
          real r4DAD#1 = dof_load4CF8;
          real r4DAE#2 = basisEval4D24;
          real r4DAF#1 = RMul(r4DAD,r4DAE);
          real r4DB0#1 = dof_load4CFF;
          real r4DB1#2 = basisEval4D25;
          real r4DB2#1 = RMul(r4DB0,r4DB1);
          real r4DB3#1 = RAdd(r4DAC,r4DAF);
          real r4DB4#1 = RAdd(r4DB3,r4DB2);
          real r4DB5#1 = dof_load4CF2;
          real r4DB6#1 = RMul(r4DB5,r4DAB);
          real r4DB7#1 = dof_load4CF9;
          real r4DB8#1 = RMul(r4DB7,r4DAE);
          real r4DB9#1 = dof_load4D00;
          real r4DBA#1 = RMul(r4DB9,r4DB1);
          real r4DBB#1 = RAdd(r4DB6,r4DB8);
          real r4DBC#1 = RAdd(r4DBB,r4DBA);
          tensor[2] probe_l_114DA9#1 = <tensor[2]>[r4DB4,r4DBC];
          real r4DD3#1 = dof_load4CF1;
          real r4DD4#2 = basisEval4D23;
          real r4DD5#1 = RMul(r4DD3,r4DD4);
          real r4DD6#1 = dof_load4CF8;
          real r4DD7#2 = basisEval4D25;
          real r4DD8#1 = RMul(r4DD6,r4DD7);
          real r4DD9#1 = dof_load4CFF;
          real r4DDA#2 = basisEval4D24;
          real r4DDB#1 = RMul(r4DD9,r4DDA);
          real r4DDC#1 = RAdd(r4DD5,r4DD8);
          real r4DDD#1 = RAdd(r4DDC,r4DDB);
          real r4DDE#1 = dof_load4CF2;
          real r4DDF#1 = RMul(r4DDE,r4DD4);
          real r4DE0#1 = dof_load4CF9;
          real r4DE1#1 = RMul(r4DE0,r4DD7);
          real r4DE2#1 = dof_load4D00;
          real r4DE3#1 = RMul(r4DE2,r4DDA);
          real r4DE4#1 = RAdd(r4DDF,r4DE1);
          real r4DE5#1 = RAdd(r4DE4,r4DE3);
          real realLit4DFC#2 = 0.e0;
          real r4DFD#2 = r4DDD;
          real r4DFE#1 = RMul(realLit4DFC,r4DFD);
          real realLit4DFF#1 = 0.1e1;
          real r4E00#2 = r4DE5;
          real r4E01#1 = RMul(realLit4DFF,r4E00);
          real r4E02#1 = RAdd(r4DFE,r4E01);
          real realLit4E03#1 = -0.1e1;
          real r4E04#1 = RMul(realLit4E03,r4DFD);
          real r4E05#1 = RMul(realLit4DFC,r4E00);
          real r4E06#1 = RAdd(r4E04,r4E05);
          tensor[2] op1_e3_l_134DFB#1 = <tensor[2]>[r4E02,r4E06];
          real realLit4E15#4 = 0.e0;
          real r4E16#2 = r4D83;
          real r4E17#1 = RMul(realLit4E15,r4E16);
          real realLit4E18#2 = -0.1e1;
          real r4E19#2 = r4D88;
          real r4E1A#1 = RMul(realLit4E18,r4E19);
          real r4E1B#1 = RAdd(r4E17,r4E1A);
          real r4E1C#2 = r4D8D;
          real r4E1D#1 = RMul(realLit4E15,r4E1C);
          real r4E1E#2 = r4D90;
          real r4E1F#1 = RMul(realLit4E18,r4E1E);
          real r4E20#1 = RAdd(r4E1D,r4E1F);
          real realLit4E22#2 = 0.1e1;
          real r4E23#1 = RMul(realLit4E22,r4E16);
          real r4E24#1 = RMul(realLit4E15,r4E19);
          real r4E25#1 = RAdd(r4E23,r4E24);
          real r4E26#1 = RMul(realLit4E22,r4E1C);
          real r4E27#1 = RMul(realLit4E15,r4E1E);
          real r4E28#1 = RAdd(r4E26,r4E27);
          real op1_e3_l_154E41#4 = VDot<2>(probe_l_114DA9,op1_e3_l_134DFB);
          real r4E45#1 = r4E1B;
          real r4E46#1 = RDiv(r4E45,op1_e3_l_154E41);
          real r4E47#1 = r4E20;
          real r4E48#1 = RDiv(r4E47,op1_e3_l_154E41);
          tensor[2] tensor4E49#1 = <tensor[2]>[r4E46,r4E48];
          real r4E4A#1 = r4E25;
          real r4E4B#1 = RDiv(r4E4A,op1_e3_l_154E41);
          real r4E4C#1 = r4E28;
          real r4E4D#1 = RDiv(r4E4C,op1_e3_l_154E41);
          tensor[2] tensor4E4E#1 = <tensor[2]>[r4E4B,r4E4D];
          tensor[2] projParam4E5C#1 = tensor4E49;
          real vdot4E5D#1 = VDot<2>(projParam4E5C,_t4CBD);
          tensor[2] projParam4E5E#1 = tensor4E4E;
          real vdot4E5F#1 = VDot<2>(projParam4E5E,_t4CBD);
          tensor[2] op1_e3_l_174E5B#5 = <tensor[2]>[vdot4E5D,vdot4E5F];
          real realLit4E67#2 = 0.e0;
          real r4E68#2 = _t4CCB;
          real r4E69#1 = RMul(realLit4E67,r4E68);
          real realLit4E6A#1 = 0.1e1;
          real r4E6B#2 = _t4C36;
          real r4E6C#1 = RMul(realLit4E6A,r4E6B);
          real r4E6D#1 = RAdd(r4E69,r4E6C);
          real realLit4E6E#1 = -0.1e1;
          real r4E6F#1 = RMul(realLit4E6E,r4E68);
          real r4E70#1 = RMul(realLit4E67,r4E6B);
          real r4E71#1 = RAdd(r4E6F,r4E70);
          tensor[2] op1_e3_l_184E66#1 = <tensor[2]>[r4E6D,r4E71];
          real op1_e3_l_194E7F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184E66);
          real realLit4E83#1 = 0.1e1;
          real r4E84#2 = RDiv(realLit4E83,op1_e3_l_194E7F);
          real r4E85#1 = _t4CCB;
          real r4E86#1 = RMul(r4E84,r4E85);
          real r4E87#1 = _t4C36;
          real r4E88#1 = RMul(r4E84,r4E87);
          tensor[2] op1_e3_l_214E91#1 = VSub<2>(_t4CC9,_t4CB1);
          real realLit4E95#2 = 0.e0;
          real r4E96#2 = r4E86;
          real r4E97#1 = RMul(realLit4E95,r4E96);
          real realLit4E98#1 = 0.1e1;
          real r4E99#2 = r4E88;
          real r4E9A#1 = RMul(realLit4E98,r4E99);
          real r4E9B#1 = RAdd(r4E97,r4E9A);
          real realLit4E9C#1 = -0.1e1;
          real r4E9D#1 = RMul(realLit4E9C,r4E96);
          real r4E9E#1 = RMul(realLit4E95,r4E99);
          real r4E9F#1 = RAdd(r4E9D,r4E9E);
          tensor[2] op1_e3_l_224E94#1 = <tensor[2]>[r4E9B,r4E9F];
          real _t4EAD#6 = VDot<2>(op1_e3_l_214E91,op1_e3_l_224E94);
          real _t4EB0#3 = -0.1e-15;
          bool _t4EB2#1 = GTE<real>(_t4EAD,_t4EB0);
          bool _t4EB4#1 = GT<real>(time4CC1,_t4EAD);
          real _t4EB6#1 = Abs<real>(op1_e3_l_194E7F);
          real _t4EB9#3 = 0.1e-20;
          bool _t4EBB#1 = GTE<real>(_t4EB6,_t4EB9);
          bool _t4EBD#1 = BAnd(_t4EB4,_t4EBB);
          bool _t4EBF#2 = BAnd(_t4EB2,_t4EBD);
          if _t4EBF then goto ASSIGN4EC3 else goto JOIN4ECE
        ASSIGN4EC3:  preds = [COND4EC1]
          int _t4EC2#2 = 0;
          bool _t4EC4#1 = NEQ<int>(_t4CBF,_t4EC2);
          if _t4EC4 then goto JOIN4ECA else goto JOIN4ECA
        JOIN4ECA:  preds = [COND4EC6,COND4EC6]
          real faceTime4EC7#1 = phi(faceTime4CC5,_t4EAD)
          int face4EC8#1 = phi(_t4EC2,face4CC3)
          real time4EC9#1 = phi(_t4EAD,time4CC1)
          goto JOIN4ECE
        JOIN4ECE:  preds = [JOIN4ECA,COND4EC1]
          real faceTime4ECB#2 = phi(faceTime4EC7,faceTime4CC5)
          int face4ECC#2 = phi(face4EC8,face4CC3)
          real time4ECD#3 = phi(time4EC9,time4CC1)
          tensor[2] _t4ECF#3 = <tensor[2]>[_t4CC7,_t4CC7];
          tensor[2] _t4ED1#1 = <tensor[2]>[_t4CC7,_t4C36];
          real realLit4ED4#2 = 0.e0;
          real r4ED5#2 = _t4CC7;
          real r4ED6#1 = RMul(realLit4ED4,r4ED5);
          real realLit4ED7#1 = 0.1e1;
          real r4ED8#2 = _t4C36;
          real r4ED9#1 = RMul(realLit4ED7,r4ED8);
          real r4EDA#1 = RAdd(r4ED6,r4ED9);
          real realLit4EDB#1 = -0.1e1;
          real r4EDC#1 = RMul(realLit4EDB,r4ED5);
          real r4EDD#1 = RMul(realLit4ED4,r4ED8);
          real r4EDE#1 = RAdd(r4EDC,r4EDD);
          tensor[2] op1_e3_l_184ED3#1 = <tensor[2]>[r4EDA,r4EDE];
          real op1_e3_l_194EEC#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184ED3);
          real realLit4EF0#1 = 0.1e1;
          real r4EF1#2 = RDiv(realLit4EF0,op1_e3_l_194EEC);
          real r4EF2#1 = _t4CC7;
          real r4EF3#1 = RMul(r4EF1,r4EF2);
          real r4EF4#1 = _t4C36;
          real r4EF5#1 = RMul(r4EF1,r4EF4);
          tensor[2] op1_e3_l_214EFE#2 = VSub<2>(_t4ECF,_t4CB1);
          real realLit4F02#2 = 0.e0;
          real r4F03#2 = r4EF3;
          real r4F04#1 = RMul(realLit4F02,r4F03);
          real realLit4F05#1 = 0.1e1;
          real r4F06#2 = r4EF5;
          real r4F07#1 = RMul(realLit4F05,r4F06);
          real r4F08#1 = RAdd(r4F04,r4F07);
          real realLit4F09#1 = -0.1e1;
          real r4F0A#1 = RMul(realLit4F09,r4F03);
          real r4F0B#1 = RMul(realLit4F02,r4F06);
          real r4F0C#1 = RAdd(r4F0A,r4F0B);
          tensor[2] op1_e3_l_224F01#1 = <tensor[2]>[r4F08,r4F0C];
          real _t4F1A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F01);
          bool _t4F1D#2 = GTE<real>(_t4F1A,_t4EB0);
          bool _t4F1F#1 = GT<real>(time4ECD,_t4F1A);
          real _t4F21#1 = Abs<real>(op1_e3_l_194EEC);
          bool _t4F24#2 = GTE<real>(_t4F21,_t4EB9);
          bool _t4F26#1 = BAnd(_t4F1F,_t4F24);
          bool _t4F28#1 = BAnd(_t4F1D,_t4F26);
          if _t4F28 then goto ASSIGN4F2C else goto JOIN4F35
        ASSIGN4F2C:  preds = [COND4F2A]
          bool _t4F2B#1 = NEQ<int>(_t4CBF,_t4CA2);
          if _t4F2B then goto JOIN4F31 else goto JOIN4F31
        JOIN4F31:  preds = [COND4F2D,COND4F2D]
          real faceTime4F2E#1 = phi(faceTime4ECB,_t4F1A)
          int face4F2F#1 = phi(_t4CA2,face4ECC)
          real time4F30#1 = phi(_t4F1A,time4ECD)
          goto JOIN4F35
        JOIN4F35:  preds = [JOIN4F31,COND4F2A]
          real faceTime4F32#2 = phi(faceTime4F2E,faceTime4ECB)
          int face4F33#2 = phi(face4F2F,face4ECC)
          real time4F34#3 = phi(time4F30,time4ECD)
          real realLit4F37#2 = 0.e0;
          real r4F38#2 = _t4C36;
          real r4F39#1 = RMul(realLit4F37,r4F38);
          real realLit4F3A#1 = 0.1e1;
          real r4F3B#2 = _t4CC7;
          real r4F3C#1 = RMul(realLit4F3A,r4F3B);
          real r4F3D#1 = RAdd(r4F39,r4F3C);
          real realLit4F3E#1 = -0.1e1;
          real r4F3F#1 = RMul(realLit4F3E,r4F38);
          real r4F40#1 = RMul(realLit4F37,r4F3B);
          real r4F41#1 = RAdd(r4F3F,r4F40);
          tensor[2] op1_e3_l_184F36#1 = <tensor[2]>[r4F3D,r4F41];
          real op1_e3_l_194F4F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184F36);
          real realLit4F53#1 = 0.1e1;
          real r4F54#2 = RDiv(realLit4F53,op1_e3_l_194F4F);
          real r4F55#1 = _t4C36;
          real r4F56#1 = RMul(r4F54,r4F55);
          real r4F57#1 = _t4CC7;
          real r4F58#1 = RMul(r4F54,r4F57);
          real realLit4F62#2 = 0.e0;
          real r4F63#2 = r4F56;
          real r4F64#1 = RMul(realLit4F62,r4F63);
          real realLit4F65#1 = 0.1e1;
          real r4F66#2 = r4F58;
          real r4F67#1 = RMul(realLit4F65,r4F66);
          real r4F68#1 = RAdd(r4F64,r4F67);
          real realLit4F69#1 = -0.1e1;
          real r4F6A#1 = RMul(realLit4F69,r4F63);
          real r4F6B#1 = RMul(realLit4F62,r4F66);
          real r4F6C#1 = RAdd(r4F6A,r4F6B);
          tensor[2] op1_e3_l_224F61#1 = <tensor[2]>[r4F68,r4F6C];
          real _t4F7A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F61);
          bool _t4F7D#2 = GTE<real>(_t4F7A,_t4EB0);
          bool _t4F7F#1 = GT<real>(time4F34,_t4F7A);
          real _t4F81#1 = Abs<real>(op1_e3_l_194F4F);
          bool _t4F84#2 = GTE<real>(_t4F81,_t4EB9);
          bool _t4F86#1 = BAnd(_t4F7F,_t4F84);
          bool _t4F88#1 = BAnd(_t4F7D,_t4F86);
          if _t4F88 then goto ASSIGN4F8C else goto JOIN4F97
        ASSIGN4F8C:  preds = [COND4F8A]
          int _t4F8B#2 = 2;
          bool _t4F8D#1 = NEQ<int>(_t4CBF,_t4F8B);
          if _t4F8D then goto JOIN4F93 else goto JOIN4F93
        JOIN4F93:  preds = [COND4F8F,COND4F8F]
          real faceTime4F90#1 = phi(faceTime4F32,_t4F7A)
          int face4F91#1 = phi(_t4F8B,face4F33)
          real time4F92#1 = phi(_t4F7A,time4F34)
          goto JOIN4F97
        JOIN4F97:  preds = [JOIN4F93,COND4F8A]
          real faceTime4F94#2 = phi(faceTime4F90,faceTime4F32)
          int face4F95#2 = phi(face4F91,face4F33)
          real time4F96#1 = phi(time4F92,time4F34)
          bool _t4F98#1 = NEQ<int>(face4F95,face4CC3);
          if _t4F98 then goto ASSIGN4F9C else goto ASSIGN51E4
        ASSIGN4F9C:  preds = [COND4F9A]
          real _t4F9B#1 = Max<real>(time4F96,_t4CC7);
          real _t4F9D#1 = IntToReal(face4F95);
          tensor[2] _t4F9F#1 = <tensor[2]>[_t4F9B,_t4F9D];
          goto JOIN4FA3
        JOIN4FA3:  preds = [ASSIGN4FA0,JOIN51E9]
          tensor[2] _t4FA1#1 = phi(_t4F9F,_t4FA2)
          real nextTime4FA4#3 = VIndex<2,0>(_t4FA1);
          real op1_e3_l_34FA6#1 = RSub(camFarVsp4B51,rayN4B61);
          real op1_e3_l_44FA9#1 = RMul(nextTime4FA4,op1_e3_l_34FA6);
          real _t4FAC#1 = RAdd(rayN4B61,op1_e3_l_44FA9);
          real _t4FAF#1 = Min<real>(camFarVsp4B51,_t4FAC);
          real rayNp4FB1#6 = Max<real>(rayN4B61,_t4FAF);
          string _t4FB3#1 = "Next time:";
          Print<[string,real,string]>(_t4FB3,nextTime4FA4,_t4B73);
          bool _t4FB6#1 = GTE<real>(nextTime4FA4,_t4CC7);
          if _t4FB6 then goto ASSIGN4FBA else goto JOIN50B2
        ASSIGN4FBA:  preds = [COND4FB8]
          tensor[2] _t4FB9#1 = <tensor[2]>[rayN4B61,rayNp4FB1];
          tensor[2][] rayCellInter4FBB#3 = Append<tensor[2]>(rayCellInter4B59,_t4FB9);
          int _t4FBD#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos4B67);
          if _t4EBF then goto ASSIGN4FC1 else goto JOIN4FCC
        ASSIGN4FC1:  preds = [COND4FBF]
          int _t4FC0#2 = 0;
          bool _t4FC2#1 = NEQ<int>(_t4CBF,_t4FC0);
          if _t4FC2 then goto JOIN4FC8 else goto JOIN4FC8
        JOIN4FC8:  preds = [COND4FC4,COND4FC4]
          real faceTime4FC5#1 = phi(faceTime4CC5,_t4EAD)
          int face4FC6#1 = phi(_t4FC0,face4CC3)
          real time4FC7#1 = phi(_t4EAD,time4CC1)
          goto JOIN4FCC
        JOIN4FCC:  preds = [JOIN4FC8,COND4FBF]
          real faceTime4FC9#2 = phi(faceTime4FC5,faceTime4CC5)
          int face4FCA#2 = phi(face4FC6,face4CC3)
          real time4FCB#3 = phi(time4FC7,time4CC1)
          bool _t4FCD#1 = GT<real>(time4FCB,_t4F1A);
          bool _t4FCF#1 = BAnd(_t4FCD,_t4F24);
          bool _t4FD1#1 = BAnd(_t4F1D,_t4FCF);
          if _t4FD1 then goto ASSIGN4FD5 else goto JOIN4FDE
        ASSIGN4FD5:  preds = [COND4FD3]
          bool _t4FD4#1 = NEQ<int>(_t4CBF,_t4CA2);
          if _t4FD4 then goto JOIN4FDA else goto JOIN4FDA
        JOIN4FDA:  preds = [COND4FD6,COND4FD6]
          real faceTime4FD7#1 = phi(faceTime4FC9,_t4F1A)
          int face4FD8#1 = phi(_t4CA2,face4FCA)
          real time4FD9#1 = phi(_t4F1A,time4FCB)
          goto JOIN4FDE
        JOIN4FDE:  preds = [JOIN4FDA,COND4FD3]
          real faceTime4FDB#2 = phi(faceTime4FD7,faceTime4FC9)
          int face4FDC#2 = phi(face4FD8,face4FCA)
          real time4FDD#3 = phi(time4FD9,time4FCB)
          bool _t4FDF#1 = GT<real>(time4FDD,_t4F7A);
          bool _t4FE1#1 = BAnd(_t4FDF,_t4F84);
          bool _t4FE3#1 = BAnd(_t4F7D,_t4FE1);
          if _t4FE3 then goto ASSIGN4FE7 else goto JOIN4FF2
        ASSIGN4FE7:  preds = [COND4FE5]
          int _t4FE6#2 = 2;
          bool _t4FE8#1 = NEQ<int>(_t4CBF,_t4FE6);
          if _t4FE8 then goto JOIN4FEE else goto JOIN4FEE
        JOIN4FEE:  preds = [COND4FEA,COND4FEA]
          real faceTime4FEB#1 = phi(faceTime4FDB,_t4F7A)
          int face4FEC#1 = phi(_t4FE6,face4FDC)
          real time4FED#1 = phi(_t4F7A,time4FDD)
          goto JOIN4FF2
        JOIN4FF2:  preds = [JOIN4FEE,COND4FE5]
          real faceTime4FEF#2 = phi(faceTime4FEB,faceTime4FDB)
          int face4FF0#2 = phi(face4FEC,face4FDC)
          real time4FF1#1 = phi(time4FED,time4FDD)
          bool _t4FF3#1 = NEQ<int>(face4FF0,face4CC3);
          if _t4FF3 then goto ASSIGN4FF7 else goto ASSIGN51DA
        ASSIGN4FF7:  preds = [COND4FF5]
          real _t4FF6#1 = Max<real>(time4FF1,_t4CC7);
          real _t4FF8#1 = IntToReal(face4FF0);
          tensor[2] _t4FFA#1 = <tensor[2]>[_t4FF6,_t4FF8];
          goto JOIN4FFE
        JOIN4FFE:  preds = [ASSIGN4FFB,JOIN51DF]
          tensor[2] _t4FFC#3 = phi(_t4FFA,_t4FFD)
          real _t4FFF#1 = VIndex<2,1>(_t4FFC);
          real t5001#1 = Floor<1>(_t4FFF);
          int _t5003#6 = RealToInt<1>(t5001);
          int[2] _t5005#2 = nextCell45006 (_t5003,_t4FBD,_t4B7D);
          int _t5019#4 = 0;
          int _t501B#2 = Subscript<int[2]>(_t5005,_t5019);
          bool _t501D#1 = NEQ<int>(face4CC3,_t501B);
          if _t501D then goto ASSIGN5021 else goto ASSIGN51D1
        ASSIGN5021:  preds = [COND501F]
          tensor[2][3] _t5020#1 = <tensor[2][3]>{_t4CC9,_t4ECF,_t4ECF};
          int _t5022#3 = Subscript<int[2]>(_t5005,_t4CA2);
          tensor[2] _t5024#1 = Subscript<tensor[2][3]>(_t5020,_t5022);
          tensor[2][3] _t5026#1 = <tensor[2][3]>{_t4CCD,_t4ED1,_t4CC9};
          tensor[2] _t5028#1 = Subscript<tensor[2][3]>(_t5026,_t5022);
          real _t502A#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_16502C#1 = VScale<2>(_t502A,op1_e3_l_174E5B);
          tensor[2] _t502F#2 = VAdd<2>(op1_e3_l_16502C,_t4CB1);
          real _t5032#1 = VIndex<2,0>(_t502F);
          real _t5034#1 = VIndex<2,1>(_t502F);
          real[2] _t5036#1 = <real[2]>{_t5032,_t5034};
          int[3] _t5038#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t503A#1 = Subscript<int[3]>(_t5038,_t5003);
          real _t503C#1 = Subscript<real[2]>(_t5036,_t503A);
          real[2] _t503E#1 = <real[2]>{_t4C36,_t4CC7};
          real[2] _t5040#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2] _t5042#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2][3] _t5044#1 = <real[2][3]>{_t503E,_t5040,_t5042};
          real[2] _t5046#1 = Subscript<real[2][3]>(_t5044,_t5003);
          int[3] _t5048#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t504A#1 = Subscript<int[3]>(_t5048,_t5003);
          real _t504C#1 = Subscript<real[2]>(_t5046,_t504A);
          real[2] _t504E#1 = <real[2]>{_t4CCB,_t4C36};
          real[2] _t5050#1 = <real[2]>{_t4CC7,_t4C36};
          real[2] _t5052#1 = <real[2]>{_t4C36,_t4CC7};
          real[2][3] _t5054#1 = <real[2][3]>{_t504E,_t5050,_t5052};
          real[2] _t5056#1 = Subscript<real[2][3]>(_t5054,_t5003);
          int[3] _t5058#1 = <int[3]>{_t4CA2,_t4CA2,_t5019};
          int _t505A#1 = Subscript<int[3]>(_t5058,_t5003);
          real _t505C#1 = Subscript<real[2]>(_t5056,_t505A);
          real op1_e3_l_5505E#1 = RSub(_t503C,_t504C);
          real op1_e3_l_65061#1 = RDiv(op1_e3_l_5505E,_t505C);
          tensor[2] op1_e3_l_75064#1 = VScale<2>(op1_e3_l_65061,_t5028);
          tensor[2] _t5067#1 = VAdd<2>(_t5024,op1_e3_l_75064);
          femData:MeshPos _t506A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t4B7D,_t501B,_t5067,_t5022);
          goto JOIN506E
        JOIN506E:  preds = [ASSIGN506B,ASSIGN51D8]
          femData:MeshPos posp506C#5 = phi(_t506A,_t506D)
          bool _t506F#1 = GTE<real>(rayNp4FB1,camFarVsp4B51);
          if _t506F then goto ASSIGN5073 else goto JOIN5083
        ASSIGN5073:  preds = [COND5071]
          string _t5072#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t5072,cellInter4B5F,_t4B73);
          tensor[3] op1_e3_l_35075#1 = VScale<3>(camFarVsp4B51,rayVec4B4F);
          tensor[3] _t5078#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35075);
          tensor[3][] spaceInter507B#1 = Append<tensor[3]>(spaceInter4B5B,_t5078);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter507B;
          self.rayN = rayNp4FB1;
          self.steps = steps4CA4;
          stabilize
          goto JOIN5083
        JOIN5083:  preds = [*STABILIZE5081,COND5071]
          tensor[3][] spaceInter5082#1 = phi(spaceInter4B5B)
          tensor[3] op1_e3_l_35084#1 = VScale<3>(rayNp4FB1,rayVec4B4F);
          tensor[3] _t5087#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35084);
          tensor[3][] spaceInter508A#2 = Append<tensor[3]>(spaceInter5082,_t5087);
          tensor[2] _t508C#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp506C);
          tensor[2][] refSpaceInter508E#2 = Append<tensor[2]>(refSpaceInter4B5D,_t508C);
          bool _t5090#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp506C);
          if _t5090 then goto ASSIGN5094 else goto ASSIGN51CE
        ASSIGN5094:  preds = [COND5092]
          string _t5093#1 = "Next cell:";
          femData:Mesh _t5095#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp506C);
          int _t5097#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp506C);
          femData:MeshCell _t5099#3 = LoadFem<femData:MeshCell>(_t5095,_t5097);
          Print<[string,femData:MeshCell,string]>(_t5093,_t5099,_t4B73);
          femData:MeshCell[] cellInter509C#1 = Append<femData:MeshCell>(cellInter4B5F,_t5099);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter508A;
          self.refSpaceInter = refSpaceInter508E;
          self.cellInter = cellInter509C;
          self.rayN = rayNp4FB1;
          self.currentCell = _t5099;
          self.steps = steps4CA4;
          self.pos = posp506C;
          active
          goto JOIN50AA
        JOIN50AA:  preds = [*ACTIVE50A6,MASSIGN51CF]
          femData:MeshPos pos50A7#1 = phi(pos4B67)
          femData:MeshCell currentCell50A8#1 = phi(currentCell4B63)
          femData:MeshCell[] cellInter50A9#1 = phi(cellInter4B5F)
          goto JOIN50B2
        JOIN50B2:  preds = [JOIN50AA,COND4FB8]
          femData:MeshPos pos50AB#6 = phi(pos50A7,pos4B67)
          femData:MeshCell currentCell50AC#1 = phi(currentCell50A8,currentCell4B63)
          real rayN50AD#3 = phi(rayNp4FB1,rayN4B61)
          femData:MeshCell[] cellInter50AE#3 = phi(cellInter50A9,cellInter4B5F)
          tensor[2][] refSpaceInter50AF#2 = phi(refSpaceInter508E,refSpaceInter4B5D)
          tensor[3][] spaceInter50B0#2 = phi(spaceInter508A,spaceInter4B5B)
          tensor[2][] rayCellInter50B1#3 = phi(rayCellInter4FBB,rayCellInter4B59)
          int _t50B3#1 = 0;
          int _t50B5#1 = ISub(cellIntersects4B57,_t4CA2);
          int[] _t50B7#1 = Range(_t50B3,_t50B5);
        FOREACH50BA:  preds = [ASSIGN50B8,NEXT50E3]
          foreach (i50B9 in _t50B7) on exit goto ASSIGN50E5
            real estimate50C3#4 = phi(camFarVsp4B51,estimate50E0)
            int newIdx50DB#7 = phi(face4CC3,newIdx50E1)
          real t50BB#3 = Subscript<real[]>(normalizedTimes4B55,i50B9);
          femData:MeshPos posp50BD#2 = Subscript<femData:MeshPos[]>(poses4B53,i50B9);
          bool _t50BF#1 = GTE<real>(t50BB,rayN50AD);
          if _t50BF then goto ASSIGN50C4 else goto JOIN50E2
        ASSIGN50C4:  preds = [COND50C1]
          bool _t50C2#1 = GTE<real>(estimate50C3,t50BB);
          if _t50C2 then goto ASSIGN50C7 else goto JOIN50DF
        ASSIGN50C7:  preds = [COND50C5]
          femData:Mesh _t50C6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp50BD);
          int _t50C8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp50BD);
          femData:MeshCell _t50CA#1 = LoadFem<femData:MeshCell>(_t50C6,_t50C8);
          femData:Mesh _t50CC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int _t50CE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:MeshCell _t50D0#1 = LoadFem<femData:MeshCell>(_t50CC,_t50CE);
          int _t50D2#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50CA);
          int _t50D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50D0);
          bool _t50D6#1 = NEQ<int>(_t50D2,_t50D4);
          if _t50D6 then goto JOIN50DC else goto JOIN50DC
        JOIN50DC:  preds = [COND50D8,COND50D8]
          real estimate50D9#1 = phi(t50BB,estimate50C3)
          int newIdx50DA#1 = phi(i50B9,newIdx50DB)
          goto JOIN50DF
        JOIN50DF:  preds = [JOIN50DC,COND50C5]
          real estimate50DD#1 = phi(estimate50D9,estimate50C3)
          int newIdx50DE#1 = phi(newIdx50DA,newIdx50DB)
          goto JOIN50E2
        JOIN50E2:  preds = [JOIN50DF,COND50C1]
          real estimate50E0#1 = phi(estimate50DD,estimate50C3)
          int newIdx50E1#1 = phi(newIdx50DE,newIdx50DB)
          goto FOREACH50BA
        ASSIGN50E5:  preds = [FOREACH50BA]
          bool _t50E4#1 = GT<int>(newIdx50DB,face4CC3);
          if _t50E4 then goto ASSIGN50E8 else goto ASSIGN51B9
        ASSIGN50E8:  preds = [COND50E6]
          string _t50E7#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t50E7);
          if startsInside4B69 then goto ASSIGN50EC else goto JOIN50EE
        ASSIGN50EC:  preds = [COND50EA]
          string _t50EB#1 = "because of an inside\n";
          Print<[string]>(_t50EB);
          goto JOIN50EE
        JOIN50EE:  preds = [MASSIGN50ED,COND50EA]
          string _t50EF#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t50EF,rayVec4B4F,_t4B73);
          string _t50F2#1 = "world pos was:";
          tensor[2] _t50F4#3 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos50AB);
          int _t50F6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:Mesh _t50F8#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int ilit50FB#1 = 3;
          int mulRes50FC#3 = IMul(_t50F6,ilit50FB);
          int addRes50FE#1 = mulRes50FC;
          int idx50FF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes50FE);
          int ilit5100#1 = 1;
          int addRes5101#1 = IAdd(mulRes50FC,ilit5100);
          int idx5102#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5101);
          int ilit5103#1 = 2;
          int addRes5104#1 = IAdd(mulRes50FC,ilit5103);
          int idx5105#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5104);
          int ilit5116#3 = 2;
          int idx5117#1 = idx50FF;
          int mulRes5118#2 = IMul(ilit5116,idx5117);
          int addRes5119#1 = mulRes5118;
          int ilit511A#3 = 1;
          int addRes511B#1 = IAdd(ilit511A,mulRes5118);
          real dof_load511C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5119);
          real dof_load511D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes511B);
          int idx511F#1 = idx5102;
          int mulRes5120#2 = IMul(ilit5116,idx511F);
          int addRes5121#1 = mulRes5120;
          int addRes5122#1 = IAdd(ilit511A,mulRes5120);
          real dof_load5123#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5121);
          real dof_load5124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5122);
          int idx5126#1 = idx5105;
          int mulRes5127#2 = IMul(ilit5116,idx5126);
          int addRes5128#1 = mulRes5127;
          int addRes5129#1 = IAdd(ilit511A,mulRes5127);
          real dof_load512A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5128);
          real dof_load512B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5129);
          real varAcc5149#1 = VIndex<2,0>(_t50F4);
          real varAcc514A#1 = VIndex<2,1>(_t50F4);
          real coeff514B#2 = -0.1e1;
          real iden514C#1 = varAcc5149;
          real one514D#7 = 0.1e1;
          real prod514E#2 = RMul(iden514C,one514D);
          real iden514F#1 = varAcc514A;
          real prod5150#2 = RMul(one514D,iden514F);
          real prod5151#1 = RMul(one514D,one514D);
          real mult5152#1 = RMul(one514D,prod5151);
          real mult5153#1 = RMul(coeff514B,prod5150);
          real mult5154#1 = RMul(coeff514B,prod514E);
          real sum5155#1 = RAdd(mult5153,mult5154);
          real sum5156#1 = RAdd(mult5152,sum5155);
          real intermediate5157#1 = sum5156;
          real basisEval5158#1 = RMul(one514D,prod514E);
          real basisEval5159#1 = RMul(one514D,prod5150);
          real r516F#1 = dof_load511C;
          real r5170#2 = intermediate5157;
          real r5171#1 = RMul(r516F,r5170);
          real r5172#1 = dof_load5123;
          real r5173#2 = basisEval5158;
          real r5174#1 = RMul(r5172,r5173);
          real r5175#1 = dof_load512A;
          real r5176#2 = basisEval5159;
          real r5177#1 = RMul(r5175,r5176);
          real r5178#1 = RAdd(r5171,r5174);
          real r5179#1 = RAdd(r5178,r5177);
          real r517A#1 = dof_load511D;
          real r517B#1 = RMul(r517A,r5170);
          real r517C#1 = dof_load5124;
          real r517D#1 = RMul(r517C,r5173);
          real r517E#1 = dof_load512B;
          real r517F#1 = RMul(r517E,r5176);
          real r5180#1 = RAdd(r517B,r517D);
          real r5181#1 = RAdd(r5180,r517F);
          tensor[2] _t516E#1 = <tensor[2]>[r5179,r5181];
          Print<[string,tensor[2],string]>(_t50F2,_t516E,_t4B73);
          string _t5198#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t5198,_t50F4,_t4B73);
          string _t519B#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes4B55,_t519B,newIdx50DB,_t4B73);
          string _t519E#1 = "Original time was:";
          Print<[string,real,string]>(_t519E,rayN50AD,_t4B73);
          femData:MeshPos pos51A1#3 = Subscript<femData:MeshPos[]>(poses4B53,newIdx50DB);
          femData:Mesh _t51A3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos51A1);
          int _t51A5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos51A1);
          femData:MeshCell currentCell51A7#2 = LoadFem<femData:MeshCell>(_t51A3,_t51A5);
          femData:MeshCell[] cellInter51A9#1 = Append<femData:MeshCell>(cellInter50AE,currentCell51A7);
          real rayN51AB#1 = Subscript<real[]>(normalizedTimes4B55,newIdx50DB);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter51A9;
          self.rayN = rayN51AB;
          self.currentCell = currentCell51A7;
          self.steps = steps4CA4;
          self.pos = pos51A1;
          active
          goto JOIN51B6
        JOIN51B6:  preds = [*ACTIVE51B5,*STABILIZE51CC]
          unreachable
        ASSIGN51B9:  preds = [COND50E6]
          string _t51B8#1 = "Enter times:";
          Print<[string,real[],string]>(_t51B8,normalizedTimes4B55,_t4B73);
          string _t51BB#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t51BB,rayCellInter50B1,_t4B73);
          string _t51BE#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t51BE,cellInter50AE,_t4B73);
          string _t51C1#1 = "End\n";
          Print<[string]>(_t51C1);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter50AE;
          self.rayN = rayN50AD;
          self.currentCell = currentCell50AC;
          self.steps = steps4CA4;
          self.pos = pos50AB;
          stabilize
          goto JOIN51B6
        ASSIGN51CE:  preds = [COND5092]
          string _t51CD#1 = "Invalid\n";
          Print<[string]>(_t51CD);
          goto JOIN50AA
        ASSIGN51D1:  preds = [COND501F]
          real _t51D0#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_1651D2#1 = VScale<2>(_t51D0,op1_e3_l_174E5B);
          tensor[2] _t51D5#1 = VAdd<2>(op1_e3_l_1651D2,_t4CB1);
          femData:MeshPos _t506D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t4B7D,_t51D5);
          goto JOIN506E
        ASSIGN51DA:  preds = [COND4FF5]
          bool _t51D9#1 = EQ<real>(faceTime4CC5,faceTime4FEF);
          if _t51D9 then goto ASSIGN51DD else goto ASSIGN51E1
        ASSIGN51DD:  preds = [COND51DB]
          tensor[2] _t51DC#1 = <tensor[2]>[_t4CCB,_t4CCB];
          goto JOIN51DF
        JOIN51DF:  preds = [ASSIGN51DD,ASSIGN51E2]
          tensor[2] _t4FFD#1 = phi(_t51DC,_t51DE)
          goto JOIN4FFE
        ASSIGN51E1:  preds = [COND51DB]
          real _t51E0#1 = IntToReal(_t4CBF);
          tensor[2] _t51DE#1 = <tensor[2]>[faceTime4FEF,_t51E0];
          goto JOIN51DF
        ASSIGN51E4:  preds = [COND4F9A]
          bool _t51E3#1 = EQ<real>(faceTime4CC5,faceTime4F94);
          if _t51E3 then goto ASSIGN51E7 else goto ASSIGN51EB
        ASSIGN51E7:  preds = [COND51E5]
          tensor[2] _t51E6#1 = <tensor[2]>[_t4CCB,_t4CCB];
          goto JOIN51E9
        JOIN51E9:  preds = [ASSIGN51E7,ASSIGN51EC]
          tensor[2] _t4FA2#1 = phi(_t51E6,_t51E8)
          goto JOIN4FA3
        ASSIGN51EB:  preds = [COND51E5]
          real _t51EA#1 = IntToReal(_t4CBF);
          tensor[2] _t51E8#1 = <tensor[2]>[faceTime4F94,_t51EA];
          goto JOIN51E9
        ASSIGN51EE:  preds = [COND4C9D]
          string _t51ED#1 = "Did not move off ray!\n";
          Print<[string]>(_t51ED);
          goto JOIN4CA1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY51F1:  preds = []
      int iresU51F2#1 = globals.iresU3FCF;
      int iresV51F4#1 = globals.iresV3FD0;
      int _t51F6#2 = 0;
      int _t51F8#2 = 1;
      int _t51FA#1 = ISub(iresU51F2,_t51F8);
      int[] _t51FC#1 = Range(_t51F6,_t51FA);
    FOREACH51FF:  preds = [ASSIGN51FD,NEXT5208]
      foreach (vi51FE in _t51FC) on exit goto RETURN5209
      int _t5200#1 = ISub(iresV51F4,_t51F8);
      int[] _t5202#1 = Range(_t51F6,_t5200);
    FOREACH5205:  preds = [ASSIGN5203,NEXT5207]
      foreach (ui5204 in _t5202) on exit goto NEXT5208
      new ray(ui5204,vi51FE);
      goto FOREACH5205
    NEXT5208:  preds = [FOREACH5205]
      goto FOREACH51FF
    RETURN5209:  preds = [FOREACH51FF]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a3FC8 (a) = <no-default>
  input isoval3FC9 (isoval) = <default>
  input thick3FCA (thick) = <default>
  input camEye3FCB (camEye) = <default>
  input camAt3FCC (camAt) = <default>
  input camUp3FCD (camUp) = <default>
  input camFOV3FCE (camFOV) = <default>
  input iresU3FCF (iresU) = <default>
  input iresV3FD0 (iresV) = <default>
  input camNear3FD1 (camNear) = <default>
  input camFar3FD2 (camFar) = <default>
  input refStep3FD3 (refStep) = <default>
  input rayStep3FD4 (rayStep) = <default>
  input lightVsp3FD5 (lightVsp) = <default>
  input phongKa3FD6 (phongKa) = <default>
  input phongKd3FD7 (phongKd) = <default>
  input debug3FD8 (debug) = <default>
  input debugU3FD9 (debugU) = <default>
  input debugV3FDA (debugV) = <default>
  input eps3FDB (eps) = <default>
  global femData:MeshCell[] 0cell_a3FDC
  global real camNearVsp3FDD
  global real camFarVsp3FDE
  global tensor[3] camN3FDF
  global tensor[3] camU3FE0
  global tensor[3] camV3FE1
  global real camVmax3FE2
  global real camUmax3FE3
## functions
  function femData:MeshPos _msh_newtonInverse4281 (tensor[2] pos4282#2, int cellInt4283#2, femData:Mesh mesh4284#12) {
    ENTRY4285:  preds = []
      real _t4286#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn4288#1 = <tensor[2]>[_t4286,_t4286];
      int _t428A#1 = 0;
      int _t428C#1 = 16;
      int[] _t428E#1 = Range(_t428A,_t428C);
    FOREACH4291:  preds = [ASSIGN428F,NEXT44E8]
      foreach (itter4290 in _t428E) on exit goto ASSIGN44ED
        tensor[2] xn4408#3 = phi(xn4288,xn447C)
      int ilit4293#1 = 3;
      int mulRes4294#3 = IMul(cellInt4283,ilit4293);
      int idx4297#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,mulRes4294);
      int ilit4298#4 = 1;
      int addRes4299#1 = IAdd(mulRes4294,ilit4298);
      int idx429A#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4299);
      int ilit429B#4 = 2;
      int addRes429C#1 = IAdd(mulRes4294,ilit429B);
      int idx429D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes429C);
      int mulRes42B0#2 = IMul(ilit429B,idx4297);
      int addRes42B3#1 = IAdd(ilit4298,mulRes42B0);
      real dof_load42B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B0);
      real dof_load42B5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B3);
      int mulRes42B8#2 = IMul(ilit429B,idx429A);
      int addRes42BA#1 = IAdd(ilit4298,mulRes42B8);
      real dof_load42BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B8);
      real dof_load42BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42BA);
      int mulRes42BF#2 = IMul(ilit429B,idx429D);
      int addRes42C1#1 = IAdd(ilit4298,mulRes42BF);
      real dof_load42C2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42BF);
      real dof_load42C3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C1);
      real coeff42E3#8 = -0.1e1;
      real one42E4#15 = 0.1e1;
      real prod42E5#2 = RMul(one42E4,one42E4);
      real basisEval42E6#2 = RMul(coeff42E3,prod42E5);
      real basisEval42E7#5 = RMul(one42E4,prod42E5);
      real basisEval42E8#12 = 0.e0;
      real r42FB#2 = RMul(dof_load42B4,basisEval42E6);
      real r42FE#1 = RMul(dof_load42BB,basisEval42E7);
      real r4301#1 = RMul(dof_load42C2,basisEval42E8);
      real r4302#1 = RAdd(r42FB,r42FE);
      real r4303#3 = RAdd(r4302,r4301);
      real r4307#1 = RMul(dof_load42BB,basisEval42E8);
      real r4309#1 = RMul(dof_load42C2,basisEval42E7);
      real r430A#1 = RAdd(r42FB,r4307);
      real r430B#3 = RAdd(r430A,r4309);
      real r430E#2 = RMul(dof_load42B5,basisEval42E6);
      real r4310#1 = RMul(dof_load42BC,basisEval42E7);
      real r4312#1 = RMul(dof_load42C3,basisEval42E8);
      real r4313#1 = RAdd(r430E,r4310);
      real r4314#3 = RAdd(r4313,r4312);
      real r4316#1 = RMul(dof_load42BC,basisEval42E8);
      real r4317#1 = RMul(dof_load42C3,basisEval42E7);
      real r4318#1 = RAdd(r430E,r4316);
      real r4319#3 = RAdd(r4318,r4317);
      real r4342#1 = RMul(basisEval42E8,r4303);
      real r4345#1 = RMul(coeff42E3,r4314);
      real r4346#2 = RAdd(r4342,r4345);
      real r4348#2 = RMul(basisEval42E8,r430B);
      real r434A#1 = RMul(coeff42E3,r4319);
      real r434B#2 = RAdd(r4348,r434A);
      real r434E#1 = RMul(one42E4,r4303);
      real r434F#1 = RMul(basisEval42E8,r4314);
      real r4350#2 = RAdd(r434E,r434F);
      real r4351#1 = RMul(one42E4,r430B);
      real r4352#2 = RMul(basisEval42E8,r4319);
      real r4353#2 = RAdd(r4351,r4352);
      tensor[2] probe_l_12436C#1 = <tensor[2]>[r4303,r4314];
      real r43C4#1 = RMul(one42E4,r4319);
      real r43C5#1 = RAdd(r4348,r43C4);
      real r43C7#1 = RMul(coeff42E3,r430B);
      real r43C9#1 = RAdd(r43C7,r4352);
      tensor[2] op1_e3_l_1443BE#1 = <tensor[2]>[r43C5,r43C9];
      real r43DA#1 = RMul(basisEval42E8,r4346);
      real r43DD#1 = RMul(coeff42E3,r434B);
      real r43DE#1 = RAdd(r43DA,r43DD);
      real r43E0#1 = RMul(basisEval42E8,r4350);
      real r43E2#1 = RMul(coeff42E3,r4353);
      real r43E3#1 = RAdd(r43E0,r43E2);
      real r43E6#1 = RMul(one42E4,r4346);
      real r43E7#1 = RMul(basisEval42E8,r434B);
      real r43E8#1 = RAdd(r43E6,r43E7);
      real r43E9#1 = RMul(one42E4,r4350);
      real r43EA#1 = RMul(basisEval42E8,r4353);
      real r43EB#1 = RAdd(r43E9,r43EA);
      real op1_e3_l_164404#4 = VDot<2>(probe_l_12436C,op1_e3_l_1443BE);
      real varAcc4409#1 = VIndex<2,0>(xn4408);
      real varAcc440A#1 = VIndex<2,1>(xn4408);
      real prod440E#2 = RMul(varAcc4409,one42E4);
      real prod4410#2 = RMul(one42E4,varAcc440A);
      real mult4413#1 = RMul(coeff42E3,prod4410);
      real mult4414#1 = RMul(coeff42E3,prod440E);
      real sum4415#1 = RAdd(mult4413,mult4414);
      real sum4416#2 = RAdd(basisEval42E7,sum4415);
      real basisEval4418#2 = RMul(one42E4,prod440E);
      real basisEval4419#2 = RMul(one42E4,prod4410);
      real r4431#1 = RMul(dof_load42B4,sum4416);
      real r4434#1 = RMul(dof_load42BB,basisEval4418);
      real r4437#1 = RMul(dof_load42C2,basisEval4419);
      real r4438#1 = RAdd(r4431,r4434);
      real r4439#1 = RAdd(r4438,r4437);
      real r443B#1 = RMul(dof_load42B5,sum4416);
      real r443D#1 = RMul(dof_load42BC,basisEval4418);
      real r443F#1 = RMul(dof_load42C3,basisEval4419);
      real r4440#1 = RAdd(r443B,r443D);
      real r4441#1 = RAdd(r4440,r443F);
      tensor[2] probe_l_17442E#1 = <tensor[2]>[r4439,r4441];
      real r4459#1 = RDiv(r43DE,op1_e3_l_164404);
      real r445B#1 = RDiv(r43E3,op1_e3_l_164404);
      tensor[2] tensor445C#1 = <tensor[2]>[r4459,r445B];
      real r445E#1 = RDiv(r43E8,op1_e3_l_164404);
      real r4460#1 = RDiv(r43EB,op1_e3_l_164404);
      tensor[2] tensor4461#1 = <tensor[2]>[r445E,r4460];
      tensor[2] op1_e3_l_19446E#2 = VSub<2>(probe_l_17442E,pos4282);
      real vdot4473#1 = VDot<2>(tensor445C,op1_e3_l_19446E);
      real vdot4475#1 = VDot<2>(tensor4461,op1_e3_l_19446E);
      tensor[2] op1_e3_l_204471#3 = <tensor[2]>[vdot4473,vdot4475];
      tensor[2] xn447C#4 = VSub<2>(xn4408,op1_e3_l_204471);
      real _t447F#2 = 0.1e-7;
      real _t4481#1 = RMul(_t447F,_t447F);
      real _t44BB#1 = VDot<2>(op1_e3_l_204471,op1_e3_l_204471);
      bool _t44BE#1 = GTE<real>(_t4481,_t44BB);
      if _t44BE then goto ASSIGN44C4 else goto JOIN44E7
    ASSIGN44C4:  preds = [COND44C0]
      real _t44C3#3 = 0.1e-8;
      real _t44C5#1 = RAdd(one42E4,_t44C3);
      tensor[2] _t44C8#1 = <tensor[2]>[one42E4,one42E4];
      real _t44CA#1 = VDot<2>(_t44C8,xn447C);
      bool _t44CD#1 = GT<real>(_t44C5,_t44CA);
      tensor[2] _t44CF#1 = <tensor[2]>[_t44C3,_t44C3];
      tensor[2] _t44D1#2 = VAdd<2>(_t44CF,xn447C);
      real _t44D4#1 = VIndex<2,0>(_t44D1);
      real _t44D6#2 = -0.e0;
      bool _t44D8#1 = GT<real>(_t44D4,_t44D6);
      real _t44DA#1 = VIndex<2,1>(_t44D1);
      bool _t44DC#1 = GT<real>(_t44DA,_t44D6);
      bool _t44DE#1 = BAnd(_t44D8,_t44DC);
      bool _t44E0#1 = BAnd(_t44CD,_t44DE);
      if _t44E0 then goto ASSIGN44E4 else goto ASSIGN44EA
    ASSIGN44E4:  preds = [COND44E2]
      femData:MeshPos _t44E3#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh4284,cellInt4283,xn447C,pos4282);
      return _t44E3
      goto JOIN44E6
    JOIN44E6:  preds = [*RETURN(_t44E3)44E5,*RETURN(_t44E9)44EB]
      goto JOIN44E7
    JOIN44E7:  preds = [*JOIN44E6,COND44C0]
      goto FOREACH4291
    ASSIGN44EA:  preds = [COND44E2]
      femData:MeshPos _t44E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44E9
      goto JOIN44E6
    ASSIGN44ED:  preds = [FOREACH4291]
      femData:MeshPos _t44EC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44EC
}
  function int[2] nextCell45006 (int faceIdx5007#1, int cell5008#1, femData:Mesh mesh5009#1) {
    ENTRY500A:  preds = []
      int _t500B#1 = 6;
      int _t500D#1 = IMul(cell5008,_t500B);
      int _t500F#1 = 2;
      int _t5011#1 = IMul(faceIdx5007,_t500F);
      int _t5013#1 = IAdd(_t500D,_t5011);
      int[2] _t5015#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh5009,_t5013);
      return _t5015
}
## input initialization
  ENTRY3FE4:  preds = []
    real isoval3FE5#1 = 0.2e0;
    globals.isoval3FC9 = isoval3FE5;
    real thick3FE8#1 = 0.7e-1;
    globals.thick3FCA = thick3FE8;
    real _t3FEB#2 = 0.3e1;
    real _t3FED#1 = -0.3e1;
    tensor[3] camEye3FEF#1 = <tensor[3]>[_t3FEB,_t3FED,_t3FEB];
    globals.camEye3FCB = camEye3FEF;
    real _t3FF2#3 = 0.5e0;
    tensor[3] camAt3FF4#1 = <tensor[3]>[_t3FF2,_t3FF2,_t3FF2];
    globals.camAt3FCC = camAt3FF4;
    real _t3FF7#2 = 0.e0;
    real _t3FF9#2 = 0.1e1;
    tensor[3] camUp3FFB#2 = <tensor[3]>[_t3FF7,_t3FF7,_t3FF9];
    globals.camUp3FCD = camUp3FFB;
    real camFOV3FFE#1 = 0.137e2;
    globals.camFOV3FCE = camFOV3FFE;
    int iresU4001#2 = 10;
    globals.iresU3FCF = iresU4001;
    globals.iresV3FD0 = iresU4001;
    real camNear4005#1 = -0.2e1;
    globals.camNear3FD1 = camNear4005;
    real camFar4008#1 = 0.5e1;
    globals.camFar3FD2 = camFar4008;
    globals.refStep3FD3 = _t3FF9;
    real rayStep400C#1 = 0.1e-1;
    globals.rayStep3FD4 = rayStep400C;
    globals.lightVsp3FD5 = camUp3FFB;
    real phongKa4010#1 = 0.1e0;
    globals.phongKa3FD6 = phongKa4010;
    real phongKd4013#1 = 0.9e0;
    globals.phongKd3FD7 = phongKd4013;
    bool debug4016#1 = false;
    globals.debug3FD8 = debug4016;
    int debugU4019#1 = 8;
    globals.debugU3FD9 = debugU4019;
    int debugV401C#1 = 2;
    globals.debugV3FDA = debugV401C;
    real eps401F#1 = 0.1e-7;
    globals.eps3FDB = eps401F;
    return
## global-variable initialization
  ENTRY4023:  preds = []
    femData:Mesh a4024#2 = globals.a3FC8;
    tensor[3] camEye4026#1 = globals.camEye3FCB;
    tensor[3] camAt4028#1 = globals.camAt3FCC;
    tensor[3] camUp402A#3 = globals.camUp3FCD;
    real camFOV402C#1 = globals.camFOV3FCE;
    int iresU402E#1 = globals.iresU3FCF;
    int iresV4030#1 = globals.iresV3FD0;
    real camNear4032#1 = globals.camNear3FD1;
    real camFar4034#1 = globals.camFar3FD2;
    int _t4036#1 = 0;
    int _t4038#1 = 1;
    int _t403A#1 = ExtractFemItem<int,NumCell(Mesh)>(a4024);
    int _t403C#1 = ISub(_t403A,_t4038);
    int[] _t403E#1 = Range(_t4036,_t403C);
    femData:MeshCell[] _t4040#1 = <femData:MeshCell[]>{};
  FOREACH4043:  preds = [ASSIGN4041,NEXT4049]
    foreach (_t4042 in _t403E) on exit goto GASSIGN404A
      femData:MeshCell[] _t4047#2 = phi(_t4040,_t4046)
    femData:MeshCell _t4044#1 = LoadFem<femData:MeshCell>(a4024,_t4042);
    femData:MeshCell[] _t4046#1 = Append<femData:MeshCell>(_t4047,_t4044);
    goto FOREACH4043
  GASSIGN404A:  preds = [FOREACH4043]
    globals.0cell_a3FDC = _t4047;
    tensor[3] op1_e3_l_3404B#9 = VSub<3>(camAt4028,camEye4026);
    real op1_e3_l_5404E#1 = VDot<3>(op1_e3_l_3404B,op1_e3_l_3404B);
    real op1_e3_l_64051#5 = Sqrt(op1_e3_l_5404E);
    real camNearVsp4054#1 = RAdd(camNear4032,op1_e3_l_64051);
    globals.camNearVsp3FDD = camNearVsp4054;
    real camFarVsp4058#1 = RAdd(camFar4034,op1_e3_l_64051);
    globals.camFarVsp3FDE = camFarVsp4058;
    real realLit405D#8 = 0.1e1;
    real op1_e3_l_9405C#6 = RDiv(realLit405D,op1_e3_l_64051);
    tensor[3] camN4061#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_3404B);
    globals.camN3FDF = camN4061;
    real realLit4066#6 = 0.e0;
    real r4067#3 = TensorIndex<tensor[3],[0]>(camUp402A);
    real r4068#3 = RMul(realLit4066,r4067);
    real r4069#3 = TensorIndex<tensor[3],[1]>(camUp402A);
    real r406A#3 = RMul(realLit4066,r4069);
    real r406B#3 = TensorIndex<tensor[3],[2]>(camUp402A);
    real r406C#5 = RMul(realLit4066,r406B);
    real r406D#3 = RAdd(r4068,r406A);
    real r406E#3 = RAdd(r406D,r406C);
    real r4070#1 = RMul(realLit405D,r406B);
    real r4071#1 = RAdd(r406D,r4070);
    real realLit4072#6 = -0.1e1;
    real r4073#1 = RMul(realLit4072,r4069);
    real r4074#1 = RAdd(r4068,r4073);
    real r4075#1 = RAdd(r4074,r406C);
    tensor[3] tensor4076#1 = <tensor[3]>[r406E,r4071,r4075];
    real r4077#1 = RMul(realLit4072,r406B);
    real r4078#1 = RAdd(r406D,r4077);
    real r4079#1 = RMul(realLit405D,r4067);
    real r407A#1 = RAdd(r4079,r406A);
    real r407B#1 = RAdd(r407A,r406C);
    tensor[3] tensor407C#1 = <tensor[3]>[r4078,r406E,r407B];
    real r407D#1 = RMul(realLit405D,r4069);
    real r407E#1 = RAdd(r4068,r407D);
    real r407F#1 = RAdd(r407E,r406C);
    real r4080#1 = RMul(realLit4072,r4067);
    real r4081#1 = RAdd(r4080,r406A);
    real r4082#1 = RAdd(r4081,r406C);
    tensor[3] tensor4083#1 = <tensor[3]>[r407F,r4082,r406E];
    real vdot40A6#1 = VDot<3>(op1_e3_l_3404B,tensor4076);
    real vdot40A8#1 = VDot<3>(op1_e3_l_3404B,tensor407C);
    real vdot40AA#1 = VDot<3>(op1_e3_l_3404B,tensor4083);
    tensor[3] op1_e3_l_1740A4#6 = <tensor[3]>[vdot40A6,vdot40A8,vdot40AA];
    real op1_e3_l_3440B3#1 = VDot<3>(op1_e3_l_1740A4,op1_e3_l_1740A4);
    real r40B7#1 = RMul(op1_e3_l_9405C,op1_e3_l_9405C);
    real op1_e3_l_3540B6#1 = RMul(r40B7,op1_e3_l_3440B3);
    real op1_e3_l_3640BB#1 = Sqrt(op1_e3_l_3540B6);
    tensor[3] op1_e3_l_3740BE#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_1740A4);
    real op1_e3_l_3840C1#2 = RDiv(realLit405D,op1_e3_l_3640BB);
    tensor[3] camU40C6#1 = VScale<3>(op1_e3_l_3840C1,op1_e3_l_3740BE);
    globals.camU3FE0 = camU40C6;
    real r40CC#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_3404B);
    real r40CD#3 = RMul(realLit4066,r40CC);
    real r40CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_3404B);
    real r40CF#3 = RMul(realLit4066,r40CE);
    real r40D0#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_3404B);
    real r40D1#5 = RMul(realLit4066,r40D0);
    real r40D2#3 = RAdd(r40CD,r40CF);
    real r40D3#3 = RAdd(r40D2,r40D1);
    real r40D5#1 = RMul(realLit405D,r40D0);
    real r40D6#1 = RAdd(r40D2,r40D5);
    real r40D8#1 = RMul(realLit4072,r40CE);
    real r40D9#1 = RAdd(r40CD,r40D8);
    real r40DA#1 = RAdd(r40D9,r40D1);
    tensor[3] tensor40DB#1 = <tensor[3]>[r40D3,r40D6,r40DA];
    real r40DC#1 = RMul(realLit4072,r40D0);
    real r40DD#1 = RAdd(r40D2,r40DC);
    real r40DE#1 = RMul(realLit405D,r40CC);
    real r40DF#1 = RAdd(r40DE,r40CF);
    real r40E0#1 = RAdd(r40DF,r40D1);
    tensor[3] tensor40E1#1 = <tensor[3]>[r40DD,r40D3,r40E0];
    real r40E2#1 = RMul(realLit405D,r40CE);
    real r40E3#1 = RAdd(r40CD,r40E2);
    real r40E4#1 = RAdd(r40E3,r40D1);
    real r40E5#1 = RMul(realLit4072,r40CC);
    real r40E6#1 = RAdd(r40E5,r40CF);
    real r40E7#1 = RAdd(r40E6,r40D1);
    tensor[3] tensor40E8#1 = <tensor[3]>[r40E4,r40E7,r40D3];
    real vdot410B#1 = VDot<3>(op1_e3_l_1740A4,tensor40DB);
    real vdot410D#1 = VDot<3>(op1_e3_l_1740A4,tensor40E1);
    real vdot410F#1 = VDot<3>(op1_e3_l_1740A4,tensor40E8);
    tensor[3] op1_e3_l_474109#1 = <tensor[3]>[vdot410B,vdot410D,vdot410F];
    tensor[3] op1_e3_l_504118#3 = VScale<3>(op1_e3_l_9405C,op1_e3_l_474109);
    real r411C#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_504118);
    real r411D#3 = RMul(op1_e3_l_3840C1,op1_e3_l_9405C);
    real r411E#1 = RMul(r411D,r411C);
    real r411F#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_504118);
    real r4120#1 = RMul(r411D,r411F);
    real r4121#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_504118);
    real r4122#1 = RMul(r411D,r4121);
    tensor[3] camV411B#1 = <tensor[3]>[r411E,r4120,r4122];
    globals.camV3FE1 = camV411B;
    real _t412D#1 = 0.314159265358979323846264338327950288e1;
    real _t412F#1 = 0.36e3;
    real op1_e3_l_54131#1 = RMul(camFOV402C,_t412D);
    real op1_e3_l_64134#1 = RDiv(op1_e3_l_54131,_t412F);
    real op1_e3_l_104137#2 = Tan(op1_e3_l_64134);
    real camVmax413A#1 = RMul(op1_e3_l_104137,op1_e3_l_64051);
    globals.camVmax3FE2 = camVmax413A;
    real _t413E#1 = IntToReal(iresU402E);
    real _t4140#1 = IntToReal(iresV4030);
    real r4143#1 = RMul(_t413E,op1_e3_l_104137);
    real op1_e3_l_144142#1 = RMul(r4143,op1_e3_l_64051);
    real camUmax4147#1 = RDiv(op1_e3_l_144142,_t4140);
    globals.camUmax3FE3 = camUmax4147;
    return
## strand
  strand ray (int ui414C#2, int vi414D#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY4169:  preds = []
        femData:Mesh a416A#1 = globals.a3FC8;
        femData:MeshCell[] 0cell_a416C#1 = globals.0cell_a3FDC;
        tensor[3] camEye416E#1 = globals.camEye3FCB;
        int iresU4170#1 = globals.iresU3FCF;
        int iresV4172#1 = globals.iresV3FD0;
        real camNearVsp4174#2 = globals.camNearVsp3FDD;
        real camFarVsp4176#2 = globals.camFarVsp3FDE;
        tensor[3] camN4178#1 = globals.camN3FDF;
        tensor[3] camU417A#1 = globals.camU3FE0;
        tensor[3] camV417C#1 = globals.camV3FE1;
        real camVmax417E#2 = globals.camVmax3FE2;
        real camUmax4180#2 = globals.camUmax3FE3;
        real _t4182#4 = -0.5e0;
        real _t4184#1 = IntToReal(ui414C);
        real _t4186#1 = IntToReal(iresU4170);
        real _t4188#2 = 0.5e0;
        real op1_e3_l_6418A#1 = RSub(_t4186,_t4188);
        real op1_e3_l_7418D#1 = RSub(_t4184,_t4182);
        real op1_e3_l_84190#1 = RSub(op1_e3_l_6418A,_t4182);
        real op1_e3_l_94193#2 = RNeg(camUmax4180);
        real op1_e3_l_104196#1 = RDiv(op1_e3_l_7418D,op1_e3_l_84190);
        real op1_e3_l_114199#1 = RSub(camUmax4180,op1_e3_l_94193);
        real op1_e3_l_13419C#1 = RMul(op1_e3_l_104196,op1_e3_l_114199);
        real rayU419F#2 = RAdd(op1_e3_l_94193,op1_e3_l_13419C);
        real _t41A2#1 = IntToReal(vi414D);
        real _t41A4#1 = IntToReal(iresV4172);
        real op1_e3_l_641A6#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_741A9#1 = RSub(_t41A2,_t4182);
        real op1_e3_l_841AC#1 = RSub(op1_e3_l_641A6,_t4182);
        real op1_e3_l_941AF#2 = RNeg(camVmax417E);
        real op1_e3_l_1041B2#1 = RDiv(op1_e3_l_741A9,op1_e3_l_841AC);
        real op1_e3_l_1141B5#1 = RSub(camVmax417E,op1_e3_l_941AF);
        real op1_e3_l_1341B8#1 = RMul(op1_e3_l_1041B2,op1_e3_l_1141B5);
        real rayV41BB#2 = RAdd(op1_e3_l_941AF,op1_e3_l_1341B8);
        tensor[3] op1_e3_l_3241CD#2 = VScale<3>(rayU419F,camU417A);
        tensor[3] op1_e3_l_3341D0#2 = VScale<3>(rayV41BB,camV417C);
        tensor[3] UV41D3#1 = VAdd<3>(op1_e3_l_3241CD,op1_e3_l_3341D0);
        tensor[3] v41D7#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] rayOrig41D6#3 = VAdd<3>(v41D7,op1_e3_l_3341D0);
        real _t41DB#4 = 0.e0;
        tensor[3] _t41DD#1 = <tensor[3]>[_t41DB,_t41DB,_t41DB];
        tensor[3] rayVec41DF#3 = VAdd<3>(camN4178,_t41DD);
        tensor[3] op1_e3_l_3941E2#1 = VScale<3>(camNearVsp4174,rayVec41DF);
        tensor[3] rayStart41E5#4 = VAdd<3>(rayOrig41D6,op1_e3_l_3941E2);
        real _t41EC#1 = VIndex<3,0>(rayStart41E5);
        real _t41EE#1 = VIndex<3,1>(rayStart41E5);
        tensor[2] rayStartProj41F0#1 = <tensor[2]>[_t41EC,_t41EE];
        tensor[3] op1_e3_l_3941F2#1 = VScale<3>(camFarVsp4176,rayVec41DF);
        tensor[3] rayEnd41F5#2 = VAdd<3>(rayOrig41D6,op1_e3_l_3941F2);
        tensor[3] dpos41FC#3 = VSub<3>(rayEnd41F5,rayStart41E5);
        real _t41FF#1 = VIndex<3,0>(dpos41FC);
        real _t4201#1 = VIndex<3,1>(dpos41FC);
        tensor[2] dposProj4203#1 = <tensor[2]>[_t41FF,_t4201];
        femData:MeshPos[0] _t4205#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t4207#1 = MkDynamic<femData:MeshPos,0>(_t4205);
        real[0] _t4209#1 = <real[0]>{};
        real[] _t420B#1 = MkDynamic<real,0>(_t4209);
        int cellIntersects420D#3 = 0;
        tensor[2][0] _t420F#1 = <tensor[2][0]>{};
        tensor[2][] _t4211#1 = MkDynamic<tensor[2],0>(_t420F);
        tensor[3][0] _t4213#1 = <tensor[3][0]>{};
        tensor[3][] _t4215#1 = MkDynamic<tensor[3],0>(_t4213);
        tensor[2][0] _t4217#1 = <tensor[2][0]>{};
        tensor[2][] _t4219#1 = MkDynamic<tensor[2],0>(_t4217);
        femData:MeshCell[0] _t421B#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t421D#1 = MkDynamic<femData:MeshCell,0>(_t421B);
        int currentCellInt421F#1 = -1;
        femData:MeshCell currentCell4221#1 = Subscript<femData:MeshCell[]>(0cell_a416C,cellIntersects420D);
        femData:MeshPos pos4223#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a416A);
        bool startsInside4225#1 = false;
        self.rayU = rayU419F;
        self.rayV = rayV41BB;
        self.UV = UV41D3;
        self.rayOrig = rayOrig41D6;
        self.rayVec = rayVec41DF;
        self.camNearVsp = camNearVsp4174;
        self.camFarVsp = camFarVsp4176;
        self.rayStart = rayStart41E5;
        self.rayStartProj = rayStartProj41F0;
        self.rayEnd = rayEnd41F5;
        self.dpos = dpos41FC;
        self.dposProj = dposProj4203;
        self.poses = _t4207;
        self.normalizedTimes = _t420B;
        self.cellIntersects = cellIntersects420D;
        self.rayCellInter = _t4211;
        self.spaceInter = _t4215;
        self.refSpaceInter = _t4219;
        self.cellInter = _t421D;
        self.currentCellInt = currentCellInt421F;
        self.rayN = _t41DB;
        self.currentCell = currentCell4221;
        self.steps = cellIntersects420D;
        self.pos = pos4223;
        self.startsInside = startsInside4225;
        self.ui = ui414C;
        self.vi = vi414D;
        return
    end state init
    method start
        ENTRY4243:  preds = []
          femData:MeshCell[] 0cell_a4244#1 = globals.0cell_a3FDC;
          bool debug4246#1 = globals.debug3FD8;
          int debugU4248#1 = globals.debugU3FD9;
          int debugV424A#1 = globals.debugV3FDA;
          tensor[3] rayOrig424C#2 = self.rayOrig;
          tensor[3] rayVec424E#1 = self.rayVec;
          real camNearVsp4250#5 = self.camNearVsp;
          real camFarVsp4252#3 = self.camFarVsp;
          tensor[2] rayStartProj4254#3 = self.rayStartProj;
          tensor[2] dposProj4256#3 = self.dposProj;
          femData:MeshPos[] poses4258#1 = self.poses;
          real[] normalizedTimes425A#1 = self.normalizedTimes;
          int cellIntersects425C#1 = self.cellIntersects;
          tensor[3][] spaceInter425E#1 = self.spaceInter;
          int currentCellInt4260#1 = self.currentCellInt;
          bool startsInside4262#2 = self.startsInside;
          int ui4264#2 = self.ui;
          int vi4266#2 = self.vi;
          bool _t4268#1 = NEQ<int>(ui4264,debugU4248);
          if _t4268 then goto ASSIGN426C else goto ASSIGN4B4B
        ASSIGN426C:  preds = [COND426A]
          bool _t426B#1 = true;
          goto JOIN426F
        JOIN426F:  preds = [ASSIGN426C,ASSIGN4B4B]
          bool _t426D#1 = phi(_t426B,_t426E)
          if _t426D then goto COND4271 else goto JOIN4274
        COND4271:  preds = [COND4270]
          if debug4246 then goto STABILIZE4272 else goto JOIN4273
        STABILIZE4272:  preds = [COND4271]
          stabilize
          goto JOIN4273
        JOIN4273:  preds = [*STABILIZE4272,COND4271]
          goto JOIN4274
        JOIN4274:  preds = [JOIN4273,COND4270]
        FOREACH4276:  preds = [JOIN4274,NEXT4513]
          foreach (c4275 in 0cell_a4244) on exit goto ASSIGN4AE9
            real startTime4AD7#3 = phi(camFarVsp4252,startTime4507)
            bool startsInside4AE7#2 = phi(startsInside4262,startsInside4509)
            int currentCellInt4ADC#6 = phi(currentCellInt4260,currentCellInt450A)
            int cellIntersects4503#8 = phi(cellIntersects425C,cellIntersects450C)
            real[] normalizedTimes44FE#7 = phi(normalizedTimes425A,normalizedTimes450E)
            femData:MeshPos[] poses44FB#7 = phi(poses4258,poses4510)
          string _t4277#1 = "Cell:";
          string _t4279#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t4277,c4275,_t4279);
          int _t427C#4 = ExtractFemItem<int,CellIndex(MeshCell)>(c4275);
          femData:Mesh _t427E#12 = ExtractFem<femData:Mesh,femData:MeshCell>(c4275);
          femData:MeshPos _t4280#2 = _msh_newtonInverse4281 (rayStartProj4254,_t427C,_t427E);
          bool _t44F0#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t4280);
          if _t44F0 then goto ASSIGN44F4 else goto ASSIGN4515
        ASSIGN44F4:  preds = [COND44F2]
          string _t44F3#1 = "pos starts inside\n";
          Print<[string]>(_t44F3);
          tensor[2] refPos44F6#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t4280);
          femData:MeshPos p44F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t427E,_t427C,refPos44F6);
          femData:MeshPos[] poses44FA#1 = Append<femData:MeshPos>(poses44FB,p44F8);
          real[] normalizedTimes44FD#1 = Append<real>(normalizedTimes44FE,camNearVsp4250);
          int _t4500#1 = 1;
          int cellIntersects4502#1 = IAdd(cellIntersects4503,_t4500);
          bool startsInside4505#1 = true;
          goto JOIN4512
        JOIN4512:  preds = [ASSIGN4506,JOIN4AE2]
          real startTime4507#1 = phi(camNearVsp4250,startTime4508)
          bool startsInside4509#1 = phi(startsInside4505,startsInside4262)
          int currentCellInt450A#1 = phi(cellIntersects4503,currentCellInt450B)
          int cellIntersects450C#1 = phi(cellIntersects4502,cellIntersects450D)
          real[] normalizedTimes450E#1 = phi(normalizedTimes44FD,normalizedTimes450F)
          femData:MeshPos[] poses4510#1 = phi(poses44FA,poses4511)
          goto FOREACH4276
        ASSIGN4515:  preds = [COND44F2]
          real _t4514#26 = -0.e0;
          tensor[2] _t4516#2 = <tensor[2]>[_t4514,_t4514];
          real time4518#9 = +inf;
          int face451A#12 = -1;
          real _t451C#61 = 0.1e1;
          real _t451E#34 = 0.e0;
          tensor[2] _t4520#1 = <tensor[2]>[_t451C,_t451E];
          real _t4522#25 = -0.1e1;
          int ilit4527#1 = 3;
          int mulRes4528#3 = IMul(_t427C,ilit4527);
          int idx452B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,mulRes4528);
          int ilit452C#9 = 1;
          int addRes452D#1 = IAdd(mulRes4528,ilit452C);
          int idx452E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452D);
          int ilit452F#8 = 2;
          int addRes4530#1 = IAdd(mulRes4528,ilit452F);
          int idx4531#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes4530);
          int mulRes4544#2 = IMul(ilit452F,idx452B);
          int addRes4547#1 = IAdd(ilit452C,mulRes4544);
          real dof_load4548#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4544);
          real dof_load4549#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4547);
          int mulRes454C#2 = IMul(ilit452F,idx452E);
          int addRes454E#1 = IAdd(ilit452C,mulRes454C);
          real dof_load454F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes454C);
          real dof_load4550#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454E);
          int mulRes4553#2 = IMul(ilit452F,idx4531);
          int addRes4555#1 = IAdd(ilit452C,mulRes4553);
          real dof_load4556#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4553);
          real dof_load4557#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4555);
          real prod4579#4 = RMul(_t451C,_t451C);
          real basisEval457A#2 = RMul(_t4522,prod4579);
          real basisEval457B#5 = RMul(_t451C,prod4579);
          real r458F#2 = RMul(dof_load4548,basisEval457A);
          real r4592#1 = RMul(dof_load454F,basisEval457B);
          real r4595#1 = RMul(dof_load4556,_t451E);
          real r4596#1 = RAdd(r458F,r4592);
          real r4597#3 = RAdd(r4596,r4595);
          real r459B#1 = RMul(dof_load454F,_t451E);
          real r459D#1 = RMul(dof_load4556,basisEval457B);
          real r459E#1 = RAdd(r458F,r459B);
          real r459F#3 = RAdd(r459E,r459D);
          real r45A2#2 = RMul(dof_load4549,basisEval457A);
          real r45A4#1 = RMul(dof_load4550,basisEval457B);
          real r45A6#1 = RMul(dof_load4557,_t451E);
          real r45A7#1 = RAdd(r45A2,r45A4);
          real r45A8#3 = RAdd(r45A7,r45A6);
          real r45AA#1 = RMul(dof_load4550,_t451E);
          real r45AB#1 = RMul(dof_load4557,basisEval457B);
          real r45AC#1 = RAdd(r45A2,r45AA);
          real r45AD#3 = RAdd(r45AC,r45AB);
          real r45D6#1 = RMul(_t451E,r4597);
          real r45D9#1 = RMul(_t4522,r45A8);
          real r45DA#2 = RAdd(r45D6,r45D9);
          real r45DC#2 = RMul(_t451E,r459F);
          real r45DE#1 = RMul(_t4522,r45AD);
          real r45DF#2 = RAdd(r45DC,r45DE);
          real r45E2#1 = RMul(_t451C,r4597);
          real r45E3#1 = RMul(_t451E,r45A8);
          real r45E4#2 = RAdd(r45E2,r45E3);
          real r45E5#1 = RMul(_t451C,r459F);
          real r45E6#2 = RMul(_t451E,r45AD);
          real r45E7#2 = RAdd(r45E5,r45E6);
          tensor[2] probe_l_194600#1 = <tensor[2]>[r4597,r45A8];
          real r4658#1 = RMul(_t451C,r45AD);
          real r4659#1 = RAdd(r45DC,r4658);
          real r465B#1 = RMul(_t4522,r459F);
          real r465D#1 = RAdd(r465B,r45E6);
          tensor[2] op1_e3_l_214652#1 = <tensor[2]>[r4659,r465D];
          real r466E#1 = RMul(_t451E,r45DA);
          real r4671#1 = RMul(_t4522,r45DF);
          real r4672#1 = RAdd(r466E,r4671);
          real r4674#1 = RMul(_t451E,r45E4);
          real r4676#1 = RMul(_t4522,r45E7);
          real r4677#1 = RAdd(r4674,r4676);
          real r467A#1 = RMul(_t451C,r45DA);
          real r467B#1 = RMul(_t451E,r45DF);
          real r467C#1 = RAdd(r467A,r467B);
          real r467D#1 = RMul(_t451C,r45E4);
          real r467E#1 = RMul(_t451E,r45E7);
          real r467F#1 = RAdd(r467D,r467E);
          real op1_e3_l_234698#4 = VDot<2>(probe_l_194600,op1_e3_l_214652);
          real varAcc469C#1 = VIndex<2,0>(_t4516);
          real varAcc469D#1 = VIndex<2,1>(_t4516);
          real prod46A1#2 = RMul(varAcc469C,_t451C);
          real prod46A3#2 = RMul(_t451C,varAcc469D);
          real mult46A6#1 = RMul(_t4522,prod46A3);
          real mult46A7#1 = RMul(_t4522,prod46A1);
          real sum46A8#1 = RAdd(mult46A6,mult46A7);
          real sum46A9#2 = RAdd(basisEval457B,sum46A8);
          real basisEval46AB#2 = RMul(_t451C,prod46A1);
          real basisEval46AC#2 = RMul(_t451C,prod46A3);
          real r46C4#1 = RMul(dof_load4548,sum46A9);
          real r46C7#1 = RMul(dof_load454F,basisEval46AB);
          real r46CA#1 = RMul(dof_load4556,basisEval46AC);
          real r46CB#1 = RAdd(r46C4,r46C7);
          real r46CC#1 = RAdd(r46CB,r46CA);
          real r46CE#1 = RMul(dof_load4549,sum46A9);
          real r46D0#1 = RMul(dof_load4550,basisEval46AB);
          real r46D2#1 = RMul(dof_load4557,basisEval46AC);
          real r46D3#1 = RAdd(r46CE,r46D0);
          real r46D4#1 = RAdd(r46D3,r46D2);
          tensor[2] probe_l_2446C1#1 = <tensor[2]>[r46CC,r46D4];
          real r46EC#1 = RDiv(r4672,op1_e3_l_234698);
          real r46EE#1 = RDiv(r4677,op1_e3_l_234698);
          tensor[2] tensor46EF#2 = <tensor[2]>[r46EC,r46EE];
          real r46F1#1 = RDiv(r467C,op1_e3_l_234698);
          real r46F3#1 = RDiv(r467F,op1_e3_l_234698);
          tensor[2] tensor46F4#2 = <tensor[2]>[r46F1,r46F3];
          tensor[2] op1_e3_l_264701#2 = VSub<2>(rayStartProj4254,probe_l_2446C1);
          real vdot4706#1 = VDot<2>(tensor46EF,op1_e3_l_264701);
          real vdot4708#1 = VDot<2>(tensor46F4,op1_e3_l_264701);
          tensor[2] op1_e3_l_274704#27 = <tensor[2]>[vdot4706,vdot4708];
          real vdot4711#1 = VDot<2>(tensor46EF,dposProj4256);
          real vdot4713#1 = VDot<2>(tensor46F4,dposProj4256);
          tensor[2] op1_e3_l_36470F#16 = <tensor[2]>[vdot4711,vdot4713];
          real r471D#1 = RMul(_t451E,_t4522);
          real r4721#1 = RAdd(r471D,prod4579);
          real r4723#1 = RMul(_t4522,_t4522);
          real r4724#3 = RMul(_t451E,_t451C);
          real r4725#1 = RAdd(r4723,r4724);
          tensor[2] op1_e3_l_37471A#1 = <tensor[2]>[r4721,r4725];
          real op1_e3_l_384733#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37471A);
          real r4738#2 = RDiv(_t451C,op1_e3_l_384733);
          real r473A#2 = RMul(r4738,_t4522);
          real r473C#2 = RMul(r4738,_t451C);
          tensor[2] op1_e3_l_404745#1 = VSub<2>(_t4520,op1_e3_l_274704);
          real r474B#1 = RMul(_t451E,r473A);
          real r474E#1 = RMul(_t451C,r473C);
          real r474F#1 = RAdd(r474B,r474E);
          real r4751#1 = RMul(_t4522,r473A);
          real r4752#1 = RMul(_t451E,r473C);
          real r4753#1 = RAdd(r4751,r4752);
          tensor[2] op1_e3_l_414748#1 = <tensor[2]>[r474F,r4753];
          real _t4761#10 = VDot<2>(op1_e3_l_404745,op1_e3_l_414748);
          real _t4764#3 = -0.1e-15;
          bool _t4766#1 = GTE<real>(_t4761,_t4764);
          bool _t4768#1 = GT<real>(time4518,_t4761);
          real _t476A#1 = Abs<real>(op1_e3_l_384733);
          real _t476D#3 = 0.1e-20;
          bool _t476F#1 = GTE<real>(_t476A,_t476D);
          bool _t4771#1 = BAnd(_t4768,_t476F);
          bool _t4773#4 = BAnd(_t4766,_t4771);
          if _t4773 then goto ASSIGN4777 else goto JOIN47A3
        ASSIGN4777:  preds = [COND4775]
          real _t4776#3 = 0.1e-8;
          real _t4778#1 = RAdd(_t451C,_t4776);
          tensor[2] _t477B#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78477D#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794780#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78477D);
          real _t4783#1 = VDot<2>(_t477B,op1_e3_l_794780);
          bool _t4786#1 = GT<real>(_t4778,_t4783);
          tensor[2] _t4788#1 = <tensor[2]>[_t4776,_t4776];
          tensor[2] v478B#1 = VAdd<2>(_t4788,op1_e3_l_274704);
          tensor[2] _t478A#2 = VAdd<2>(v478B,op1_e3_l_78477D);
          real _t478F#1 = VIndex<2,0>(_t478A);
          bool _t4791#1 = GT<real>(_t478F,_t4514);
          real _t4793#1 = VIndex<2,1>(_t478A);
          bool _t4795#1 = GT<real>(_t4793,_t4514);
          bool _t4797#1 = BAnd(_t4791,_t4795);
          bool _t4799#1 = BAnd(_t4786,_t4797);
          if _t4799 then goto ASSIGN479D else goto JOIN47A0
        ASSIGN479D:  preds = [COND479B]
          int face479C#1 = 0;
          goto JOIN47A0
        JOIN47A0:  preds = [ASSIGN479D,COND479B]
          int face479E#1 = phi(face479C,face451A)
          real time479F#1 = phi(_t4761,time4518)
          goto JOIN47A3
        JOIN47A3:  preds = [JOIN47A0,COND4775]
          int face47A1#2 = phi(face479E,face451A)
          real time47A2#3 = phi(time479F,time4518)
          tensor[2] _t47A4#1 = <tensor[2]>[_t451E,_t451E];
          real r47AB#2 = RMul(_t451E,_t451E);
          real r47AF#1 = RAdd(r47AB,prod4579);
          real r47B1#1 = RMul(_t4522,_t451E);
          real r47B3#1 = RAdd(r47B1,r4724);
          tensor[2] op1_e3_l_3747A8#1 = <tensor[2]>[r47AF,r47B3];
          real op1_e3_l_3847C1#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_3747A8);
          real r47C6#2 = RDiv(_t451C,op1_e3_l_3847C1);
          real r47C8#2 = RMul(r47C6,_t451E);
          real r47CA#2 = RMul(r47C6,_t451C);
          tensor[2] op1_e3_l_4047D3#2 = VSub<2>(_t47A4,op1_e3_l_274704);
          real r47D9#1 = RMul(_t451E,r47C8);
          real r47DC#1 = RMul(_t451C,r47CA);
          real r47DD#1 = RAdd(r47D9,r47DC);
          real r47DF#1 = RMul(_t4522,r47C8);
          real r47E0#1 = RMul(_t451E,r47CA);
          real r47E1#1 = RAdd(r47DF,r47E0);
          tensor[2] op1_e3_l_4147D6#1 = <tensor[2]>[r47DD,r47E1];
          real _t47EF#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_4147D6);
          bool _t47F2#4 = GTE<real>(_t47EF,_t4764);
          bool _t47F4#1 = GT<real>(time47A2,_t47EF);
          real _t47F6#1 = Abs<real>(op1_e3_l_3847C1);
          bool _t47F9#4 = GTE<real>(_t47F6,_t476D);
          bool _t47FB#1 = BAnd(_t47F4,_t47F9);
          bool _t47FD#1 = BAnd(_t47F2,_t47FB);
          if _t47FD then goto ASSIGN4801 else goto JOIN482D
        ASSIGN4801:  preds = [COND47FF]
          real _t4800#3 = 0.1e-8;
          real _t4802#1 = RAdd(_t451C,_t4800);
          tensor[2] _t4805#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784807#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79480A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784807);
          real _t480D#1 = VDot<2>(_t4805,op1_e3_l_79480A);
          bool _t4810#1 = GT<real>(_t4802,_t480D);
          tensor[2] _t4812#1 = <tensor[2]>[_t4800,_t4800];
          tensor[2] v4815#1 = VAdd<2>(_t4812,op1_e3_l_274704);
          tensor[2] _t4814#2 = VAdd<2>(v4815,op1_e3_l_784807);
          real _t4819#1 = VIndex<2,0>(_t4814);
          bool _t481B#1 = GT<real>(_t4819,_t4514);
          real _t481D#1 = VIndex<2,1>(_t4814);
          bool _t481F#1 = GT<real>(_t481D,_t4514);
          bool _t4821#1 = BAnd(_t481B,_t481F);
          bool _t4823#1 = BAnd(_t4810,_t4821);
          if _t4823 then goto JOIN482A else goto JOIN482A
        JOIN482A:  preds = [COND4825,COND4825]
          int face4828#1 = phi(ilit452C,face47A1)
          real time4829#1 = phi(_t47EF,time47A2)
          goto JOIN482D
        JOIN482D:  preds = [JOIN482A,COND47FF]
          int face482B#2 = phi(face4828,face47A1)
          real time482C#3 = phi(time4829,time47A2)
          real r4834#1 = RMul(_t451C,_t451E);
          real r4835#1 = RAdd(r4724,r4834);
          real r4837#1 = RMul(_t4522,_t451C);
          real r4839#1 = RAdd(r4837,r47AB);
          tensor[2] op1_e3_l_37482E#1 = <tensor[2]>[r4835,r4839];
          real op1_e3_l_384847#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37482E);
          real r484C#2 = RDiv(_t451C,op1_e3_l_384847);
          real r484E#2 = RMul(r484C,_t451C);
          real r4850#2 = RMul(r484C,_t451E);
          real r485C#1 = RMul(_t451E,r484E);
          real r485F#1 = RMul(_t451C,r4850);
          real r4860#1 = RAdd(r485C,r485F);
          real r4862#1 = RMul(_t4522,r484E);
          real r4863#1 = RMul(_t451E,r4850);
          real r4864#1 = RAdd(r4862,r4863);
          tensor[2] op1_e3_l_414859#1 = <tensor[2]>[r4860,r4864];
          real _t4872#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_414859);
          bool _t4875#4 = GTE<real>(_t4872,_t4764);
          bool _t4877#1 = GT<real>(time482C,_t4872);
          real _t4879#1 = Abs<real>(op1_e3_l_384847);
          bool _t487C#4 = GTE<real>(_t4879,_t476D);
          bool _t487E#1 = BAnd(_t4877,_t487C);
          bool _t4880#1 = BAnd(_t4875,_t487E);
          if _t4880 then goto ASSIGN4884 else goto JOIN48B0
        ASSIGN4884:  preds = [COND4882]
          real _t4883#3 = 0.1e-8;
          real _t4885#1 = RAdd(_t451C,_t4883);
          tensor[2] _t4888#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78488A#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79488D#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78488A);
          real _t4890#1 = VDot<2>(_t4888,op1_e3_l_79488D);
          bool _t4893#1 = GT<real>(_t4885,_t4890);
          tensor[2] _t4895#1 = <tensor[2]>[_t4883,_t4883];
          tensor[2] v4898#1 = VAdd<2>(_t4895,op1_e3_l_274704);
          tensor[2] _t4897#2 = VAdd<2>(v4898,op1_e3_l_78488A);
          real _t489C#1 = VIndex<2,0>(_t4897);
          bool _t489E#1 = GT<real>(_t489C,_t4514);
          real _t48A0#1 = VIndex<2,1>(_t4897);
          bool _t48A2#1 = GT<real>(_t48A0,_t4514);
          bool _t48A4#1 = BAnd(_t489E,_t48A2);
          bool _t48A6#1 = BAnd(_t4893,_t48A4);
          if _t48A6 then goto JOIN48AD else goto JOIN48AD
        JOIN48AD:  preds = [COND48A8,COND48A8]
          int face48AB#1 = phi(ilit452F,face482B)
          real time48AC#1 = phi(_t4872,time482C)
          goto JOIN48B0
        JOIN48B0:  preds = [JOIN48AD,COND4882]
          int face48AE#2 = phi(face48AB,face482B)
          real time48AF#1 = phi(time48AC,time482C)
          bool _t48B1#1 = NEQ<int>(face48AE,face451A);
          if _t48B1 then goto ASSIGN48B5 else goto ASSIGN4AE6
        ASSIGN48B5:  preds = [COND48B3]
          real _t48B4#1 = Max<real>(time48AF,_t451E);
          real _t48B6#1 = IntToReal(face48AE);
          tensor[2] _t48B8#1 = <tensor[2]>[_t48B4,_t48B6];
          goto JOIN48BC
        JOIN48BC:  preds = [ASSIGN48B9,ASSIGN4AE6]
          tensor[2] _t48BA#1 = phi(_t48B8,_t48BB)
          real newTime48BD#2 = VIndex<2,0>(_t48BA);
          bool _t48BF#1 = GTE<real>(newTime48BD,_t451E);
          if _t48BF then goto COND48C2 else goto JOIN4AE2
        COND48C2:  preds = [COND48C1]
          if _t4773 then goto ASSIGN48C4 else goto JOIN48F0
        ASSIGN48C4:  preds = [COND48C2]
          real _t48C3#3 = 0.1e-8;
          real _t48C5#1 = RAdd(_t451C,_t48C3);
          tensor[2] _t48C8#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848CA#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7948CD#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848CA);
          real _t48D0#1 = VDot<2>(_t48C8,op1_e3_l_7948CD);
          bool _t48D3#1 = GT<real>(_t48C5,_t48D0);
          tensor[2] _t48D5#1 = <tensor[2]>[_t48C3,_t48C3];
          tensor[2] v48D8#1 = VAdd<2>(_t48D5,op1_e3_l_274704);
          tensor[2] _t48D7#2 = VAdd<2>(v48D8,op1_e3_l_7848CA);
          real _t48DC#1 = VIndex<2,0>(_t48D7);
          bool _t48DE#1 = GT<real>(_t48DC,_t4514);
          real _t48E0#1 = VIndex<2,1>(_t48D7);
          bool _t48E2#1 = GT<real>(_t48E0,_t4514);
          bool _t48E4#1 = BAnd(_t48DE,_t48E2);
          bool _t48E6#1 = BAnd(_t48D3,_t48E4);
          if _t48E6 then goto ASSIGN48EA else goto JOIN48ED
        ASSIGN48EA:  preds = [COND48E8]
          int face48E9#1 = 0;
          goto JOIN48ED
        JOIN48ED:  preds = [ASSIGN48EA,COND48E8]
          int face48EB#1 = phi(face48E9,face451A)
          real time48EC#1 = phi(_t4761,time4518)
          goto JOIN48F0
        JOIN48F0:  preds = [JOIN48ED,COND48C2]
          int face48EE#2 = phi(face48EB,face451A)
          real time48EF#3 = phi(time48EC,time4518)
          bool _t48F1#1 = GT<real>(time48EF,_t47EF);
          bool _t48F3#1 = BAnd(_t48F1,_t47F9);
          bool _t48F5#1 = BAnd(_t47F2,_t48F3);
          if _t48F5 then goto ASSIGN48F9 else goto JOIN4925
        ASSIGN48F9:  preds = [COND48F7]
          real _t48F8#3 = 0.1e-8;
          real _t48FA#1 = RAdd(_t451C,_t48F8);
          tensor[2] _t48FD#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848FF#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794902#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848FF);
          real _t4905#1 = VDot<2>(_t48FD,op1_e3_l_794902);
          bool _t4908#1 = GT<real>(_t48FA,_t4905);
          tensor[2] _t490A#1 = <tensor[2]>[_t48F8,_t48F8];
          tensor[2] v490D#1 = VAdd<2>(_t490A,op1_e3_l_274704);
          tensor[2] _t490C#2 = VAdd<2>(v490D,op1_e3_l_7848FF);
          real _t4911#1 = VIndex<2,0>(_t490C);
          bool _t4913#1 = GT<real>(_t4911,_t4514);
          real _t4915#1 = VIndex<2,1>(_t490C);
          bool _t4917#1 = GT<real>(_t4915,_t4514);
          bool _t4919#1 = BAnd(_t4913,_t4917);
          bool _t491B#1 = BAnd(_t4908,_t4919);
          if _t491B then goto JOIN4922 else goto JOIN4922
        JOIN4922:  preds = [COND491D,COND491D]
          int face4920#1 = phi(ilit452C,face48EE)
          real time4921#1 = phi(_t47EF,time48EF)
          goto JOIN4925
        JOIN4925:  preds = [JOIN4922,COND48F7]
          int face4923#2 = phi(face4920,face48EE)
          real time4924#3 = phi(time4921,time48EF)
          bool _t4926#1 = GT<real>(time4924,_t4872);
          bool _t4928#1 = BAnd(_t4926,_t487C);
          bool _t492A#1 = BAnd(_t4875,_t4928);
          if _t492A then goto ASSIGN492E else goto JOIN495A
        ASSIGN492E:  preds = [COND492C]
          real _t492D#3 = 0.1e-8;
          real _t492F#1 = RAdd(_t451C,_t492D);
          tensor[2] _t4932#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784934#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794937#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784934);
          real _t493A#1 = VDot<2>(_t4932,op1_e3_l_794937);
          bool _t493D#1 = GT<real>(_t492F,_t493A);
          tensor[2] _t493F#1 = <tensor[2]>[_t492D,_t492D];
          tensor[2] v4942#1 = VAdd<2>(_t493F,op1_e3_l_274704);
          tensor[2] _t4941#2 = VAdd<2>(v4942,op1_e3_l_784934);
          real _t4946#1 = VIndex<2,0>(_t4941);
          bool _t4948#1 = GT<real>(_t4946,_t4514);
          real _t494A#1 = VIndex<2,1>(_t4941);
          bool _t494C#1 = GT<real>(_t494A,_t4514);
          bool _t494E#1 = BAnd(_t4948,_t494C);
          bool _t4950#1 = BAnd(_t493D,_t494E);
          if _t4950 then goto JOIN4957 else goto JOIN4957
        JOIN4957:  preds = [COND4952,COND4952]
          int face4955#1 = phi(ilit452F,face4923)
          real time4956#1 = phi(_t4872,time4924)
          goto JOIN495A
        JOIN495A:  preds = [JOIN4957,COND492C]
          int face4958#2 = phi(face4955,face4923)
          real time4959#1 = phi(time4956,time4924)
          bool _t495B#1 = NEQ<int>(face4958,face451A);
          if _t495B then goto ASSIGN495F else goto ASSIGN4AE5
        ASSIGN495F:  preds = [COND495D]
          real _t495E#1 = Max<real>(time4959,_t451E);
          real _t4960#1 = IntToReal(face4958);
          tensor[2] _t4962#1 = <tensor[2]>[_t495E,_t4960];
          goto JOIN4966
        JOIN4966:  preds = [ASSIGN4963,ASSIGN4AE5]
          tensor[2] _t4964#1 = phi(_t4962,_t4965)
          real _t4967#1 = VIndex<2,0>(_t4964);
          tensor[2] op1_e3_l_354969#1 = VScale<2>(_t4967,op1_e3_l_36470F);
          tensor[2] _t496C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_354969);
          if _t4773 then goto ASSIGN4971 else goto JOIN499D
        ASSIGN4971:  preds = [COND496F]
          real _t4970#3 = 0.1e-8;
          real _t4972#1 = RAdd(_t451C,_t4970);
          tensor[2] _t4975#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784977#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79497A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784977);
          real _t497D#1 = VDot<2>(_t4975,op1_e3_l_79497A);
          bool _t4980#1 = GT<real>(_t4972,_t497D);
          tensor[2] _t4982#1 = <tensor[2]>[_t4970,_t4970];
          tensor[2] v4985#1 = VAdd<2>(_t4982,op1_e3_l_274704);
          tensor[2] _t4984#2 = VAdd<2>(v4985,op1_e3_l_784977);
          real _t4989#1 = VIndex<2,0>(_t4984);
          bool _t498B#1 = GT<real>(_t4989,_t4514);
          real _t498D#1 = VIndex<2,1>(_t4984);
          bool _t498F#1 = GT<real>(_t498D,_t4514);
          bool _t4991#1 = BAnd(_t498B,_t498F);
          bool _t4993#1 = BAnd(_t4980,_t4991);
          if _t4993 then goto ASSIGN4997 else goto JOIN499A
        ASSIGN4997:  preds = [COND4995]
          int face4996#1 = 0;
          goto JOIN499A
        JOIN499A:  preds = [ASSIGN4997,COND4995]
          int face4998#1 = phi(face4996,face451A)
          real time4999#1 = phi(_t4761,time4518)
          goto JOIN499D
        JOIN499D:  preds = [JOIN499A,COND496F]
          int face499B#2 = phi(face4998,face451A)
          real time499C#3 = phi(time4999,time4518)
          bool _t499E#1 = GT<real>(time499C,_t47EF);
          bool _t49A0#1 = BAnd(_t499E,_t47F9);
          bool _t49A2#1 = BAnd(_t47F2,_t49A0);
          if _t49A2 then goto ASSIGN49A6 else goto JOIN49D2
        ASSIGN49A6:  preds = [COND49A4]
          real _t49A5#3 = 0.1e-8;
          real _t49A7#1 = RAdd(_t451C,_t49A5);
          tensor[2] _t49AA#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849AC#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949AF#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849AC);
          real _t49B2#1 = VDot<2>(_t49AA,op1_e3_l_7949AF);
          bool _t49B5#1 = GT<real>(_t49A7,_t49B2);
          tensor[2] _t49B7#1 = <tensor[2]>[_t49A5,_t49A5];
          tensor[2] v49BA#1 = VAdd<2>(_t49B7,op1_e3_l_274704);
          tensor[2] _t49B9#2 = VAdd<2>(v49BA,op1_e3_l_7849AC);
          real _t49BE#1 = VIndex<2,0>(_t49B9);
          bool _t49C0#1 = GT<real>(_t49BE,_t4514);
          real _t49C2#1 = VIndex<2,1>(_t49B9);
          bool _t49C4#1 = GT<real>(_t49C2,_t4514);
          bool _t49C6#1 = BAnd(_t49C0,_t49C4);
          bool _t49C8#1 = BAnd(_t49B5,_t49C6);
          if _t49C8 then goto JOIN49CF else goto JOIN49CF
        JOIN49CF:  preds = [COND49CA,COND49CA]
          int face49CD#1 = phi(ilit452C,face499B)
          real time49CE#1 = phi(_t47EF,time499C)
          goto JOIN49D2
        JOIN49D2:  preds = [JOIN49CF,COND49A4]
          int face49D0#2 = phi(face49CD,face499B)
          real time49D1#3 = phi(time49CE,time499C)
          bool _t49D3#1 = GT<real>(time49D1,_t4872);
          bool _t49D5#1 = BAnd(_t49D3,_t487C);
          bool _t49D7#1 = BAnd(_t4875,_t49D5);
          if _t49D7 then goto ASSIGN49DB else goto JOIN4A07
        ASSIGN49DB:  preds = [COND49D9]
          real _t49DA#3 = 0.1e-8;
          real _t49DC#1 = RAdd(_t451C,_t49DA);
          tensor[2] _t49DF#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849E1#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949E4#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849E1);
          real _t49E7#1 = VDot<2>(_t49DF,op1_e3_l_7949E4);
          bool _t49EA#1 = GT<real>(_t49DC,_t49E7);
          tensor[2] _t49EC#1 = <tensor[2]>[_t49DA,_t49DA];
          tensor[2] v49EF#1 = VAdd<2>(_t49EC,op1_e3_l_274704);
          tensor[2] _t49EE#2 = VAdd<2>(v49EF,op1_e3_l_7849E1);
          real _t49F3#1 = VIndex<2,0>(_t49EE);
          bool _t49F5#1 = GT<real>(_t49F3,_t4514);
          real _t49F7#1 = VIndex<2,1>(_t49EE);
          bool _t49F9#1 = GT<real>(_t49F7,_t4514);
          bool _t49FB#1 = BAnd(_t49F5,_t49F9);
          bool _t49FD#1 = BAnd(_t49EA,_t49FB);
          if _t49FD then goto JOIN4A04 else goto JOIN4A04
        JOIN4A04:  preds = [COND49FF,COND49FF]
          int face4A02#1 = phi(ilit452F,face49D0)
          real time4A03#1 = phi(_t4872,time49D1)
          goto JOIN4A07
        JOIN4A07:  preds = [JOIN4A04,COND49D9]
          int face4A05#2 = phi(face4A02,face49D0)
          real time4A06#1 = phi(time4A03,time49D1)
          bool _t4A08#1 = NEQ<int>(face4A05,face451A);
          if _t4A08 then goto ASSIGN4A0C else goto ASSIGN4AE4
        ASSIGN4A0C:  preds = [COND4A0A]
          real _t4A0B#1 = Max<real>(time4A06,_t451E);
          real _t4A0D#1 = IntToReal(face4A05);
          tensor[2] _t4A0F#1 = <tensor[2]>[_t4A0B,_t4A0D];
          goto JOIN4A13
        JOIN4A13:  preds = [ASSIGN4A10,ASSIGN4AE4]
          tensor[2] _t4A11#1 = phi(_t4A0F,_t4A12)
          real _t4A14#1 = VIndex<2,0>(_t4A11);
          tensor[2] op1_e3_l_34A16#1 = VScale<2>(_t4A14,dposProj4256);
          tensor[2] _t4A19#1 = VAdd<2>(rayStartProj4254,op1_e3_l_34A16);
          if _t4773 then goto ASSIGN4A1E else goto JOIN4A4A
        ASSIGN4A1E:  preds = [COND4A1C]
          real _t4A1D#3 = 0.1e-8;
          real _t4A1F#1 = RAdd(_t451C,_t4A1D);
          tensor[2] _t4A22#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A24#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A27#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A24);
          real _t4A2A#1 = VDot<2>(_t4A22,op1_e3_l_794A27);
          bool _t4A2D#1 = GT<real>(_t4A1F,_t4A2A);
          tensor[2] _t4A2F#1 = <tensor[2]>[_t4A1D,_t4A1D];
          tensor[2] v4A32#1 = VAdd<2>(_t4A2F,op1_e3_l_274704);
          tensor[2] _t4A31#2 = VAdd<2>(v4A32,op1_e3_l_784A24);
          real _t4A36#1 = VIndex<2,0>(_t4A31);
          bool _t4A38#1 = GT<real>(_t4A36,_t4514);
          real _t4A3A#1 = VIndex<2,1>(_t4A31);
          bool _t4A3C#1 = GT<real>(_t4A3A,_t4514);
          bool _t4A3E#1 = BAnd(_t4A38,_t4A3C);
          bool _t4A40#1 = BAnd(_t4A2D,_t4A3E);
          if _t4A40 then goto ASSIGN4A44 else goto JOIN4A47
        ASSIGN4A44:  preds = [COND4A42]
          int face4A43#1 = 0;
          goto JOIN4A47
        JOIN4A47:  preds = [ASSIGN4A44,COND4A42]
          int face4A45#1 = phi(face4A43,face451A)
          real time4A46#1 = phi(_t4761,time4518)
          goto JOIN4A4A
        JOIN4A4A:  preds = [JOIN4A47,COND4A1C]
          int face4A48#2 = phi(face4A45,face451A)
          real time4A49#3 = phi(time4A46,time4518)
          bool _t4A4B#1 = GT<real>(time4A49,_t47EF);
          bool _t4A4D#1 = BAnd(_t4A4B,_t47F9);
          bool _t4A4F#1 = BAnd(_t47F2,_t4A4D);
          if _t4A4F then goto ASSIGN4A53 else goto JOIN4A7F
        ASSIGN4A53:  preds = [COND4A51]
          real _t4A52#3 = 0.1e-8;
          real _t4A54#1 = RAdd(_t451C,_t4A52);
          tensor[2] _t4A57#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A59#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A5C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A59);
          real _t4A5F#1 = VDot<2>(_t4A57,op1_e3_l_794A5C);
          bool _t4A62#1 = GT<real>(_t4A54,_t4A5F);
          tensor[2] _t4A64#1 = <tensor[2]>[_t4A52,_t4A52];
          tensor[2] v4A67#1 = VAdd<2>(_t4A64,op1_e3_l_274704);
          tensor[2] _t4A66#2 = VAdd<2>(v4A67,op1_e3_l_784A59);
          real _t4A6B#1 = VIndex<2,0>(_t4A66);
          bool _t4A6D#1 = GT<real>(_t4A6B,_t4514);
          real _t4A6F#1 = VIndex<2,1>(_t4A66);
          bool _t4A71#1 = GT<real>(_t4A6F,_t4514);
          bool _t4A73#1 = BAnd(_t4A6D,_t4A71);
          bool _t4A75#1 = BAnd(_t4A62,_t4A73);
          if _t4A75 then goto JOIN4A7C else goto JOIN4A7C
        JOIN4A7C:  preds = [COND4A77,COND4A77]
          int face4A7A#1 = phi(ilit452C,face4A48)
          real time4A7B#1 = phi(_t47EF,time4A49)
          goto JOIN4A7F
        JOIN4A7F:  preds = [JOIN4A7C,COND4A51]
          int face4A7D#2 = phi(face4A7A,face4A48)
          real time4A7E#3 = phi(time4A7B,time4A49)
          bool _t4A80#1 = GT<real>(time4A7E,_t4872);
          bool _t4A82#1 = BAnd(_t4A80,_t487C);
          bool _t4A84#1 = BAnd(_t4875,_t4A82);
          if _t4A84 then goto ASSIGN4A88 else goto JOIN4AB4
        ASSIGN4A88:  preds = [COND4A86]
          real _t4A87#3 = 0.1e-8;
          real _t4A89#1 = RAdd(_t451C,_t4A87);
          tensor[2] _t4A8C#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A8E#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A91#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A8E);
          real _t4A94#1 = VDot<2>(_t4A8C,op1_e3_l_794A91);
          bool _t4A97#1 = GT<real>(_t4A89,_t4A94);
          tensor[2] _t4A99#1 = <tensor[2]>[_t4A87,_t4A87];
          tensor[2] v4A9C#1 = VAdd<2>(_t4A99,op1_e3_l_274704);
          tensor[2] _t4A9B#2 = VAdd<2>(v4A9C,op1_e3_l_784A8E);
          real _t4AA0#1 = VIndex<2,0>(_t4A9B);
          bool _t4AA2#1 = GT<real>(_t4AA0,_t4514);
          real _t4AA4#1 = VIndex<2,1>(_t4A9B);
          bool _t4AA6#1 = GT<real>(_t4AA4,_t4514);
          bool _t4AA8#1 = BAnd(_t4AA2,_t4AA6);
          bool _t4AAA#1 = BAnd(_t4A97,_t4AA8);
          if _t4AAA then goto JOIN4AB1 else goto JOIN4AB1
        JOIN4AB1:  preds = [COND4AAC,COND4AAC]
          int face4AAF#1 = phi(ilit452F,face4A7D)
          real time4AB0#1 = phi(_t4872,time4A7E)
          goto JOIN4AB4
        JOIN4AB4:  preds = [JOIN4AB1,COND4A86]
          int face4AB2#2 = phi(face4AAF,face4A7D)
          real time4AB3#1 = phi(time4AB0,time4A7E)
          bool _t4AB5#1 = NEQ<int>(face4AB2,face451A);
          if _t4AB5 then goto ASSIGN4AB9 else goto ASSIGN4AE3
        ASSIGN4AB9:  preds = [COND4AB7]
          real _t4AB8#1 = Max<real>(time4AB3,_t451E);
          real _t4ABA#1 = IntToReal(face4AB2);
          tensor[2] _t4ABC#1 = <tensor[2]>[_t4AB8,_t4ABA];
          goto JOIN4AC0
        JOIN4AC0:  preds = [ASSIGN4ABD,ASSIGN4AE3]
          tensor[2] _t4ABE#1 = phi(_t4ABC,_t4ABF)
          real _t4AC1#1 = VIndex<2,1>(_t4ABE);
          real t4AC3#1 = Floor<1>(_t4AC1);
          int _t4AC5#1 = RealToInt<1>(t4AC3);
          femData:MeshPos p4AC7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t427E,_t427C,_t496C,_t4A19,_t4AC5);
          real op1_e3_l_34AC9#1 = RSub(camFarVsp4252,camNearVsp4250);
          real op1_e3_l_44ACC#1 = RMul(newTime48BD,op1_e3_l_34AC9);
          real newRayTime4ACF#3 = RAdd(camNearVsp4250,op1_e3_l_44ACC);
          real[] normalizedTimes4AD2#1 = Append<real>(normalizedTimes44FE,newRayTime4ACF);
          femData:MeshPos[] poses4AD4#1 = Append<femData:MeshPos>(poses44FB,p4AC7);
          bool _t4AD6#1 = GT<real>(startTime4AD7,newRayTime4ACF);
          if _t4AD6 then goto JOIN4ADD else goto JOIN4ADD
        JOIN4ADD:  preds = [COND4AD9,COND4AD9]
          real startTime4ADA#1 = phi(newRayTime4ACF,startTime4AD7)
          int currentCellInt4ADB#1 = phi(cellIntersects4503,currentCellInt4ADC)
          int cellIntersects4AE0#1 = IAdd(cellIntersects4503,ilit452C);
          goto JOIN4AE2
        JOIN4AE2:  preds = [ASSIGN53D6,COND48C1]
          real startTime4508#1 = phi(startTime4ADA,startTime4AD7)
          int currentCellInt450B#1 = phi(currentCellInt4ADB,currentCellInt4ADC)
          int cellIntersects450D#1 = phi(cellIntersects4AE0,cellIntersects4503)
          real[] normalizedTimes450F#1 = phi(normalizedTimes4AD2,normalizedTimes44FE)
          femData:MeshPos[] poses4511#1 = phi(poses4AD4,poses44FB)
          goto JOIN4512
        ASSIGN4AE3:  preds = [COND4AB7]
          tensor[2] _t4ABF#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4AC0
        ASSIGN4AE4:  preds = [COND4A0A]
          tensor[2] _t4A12#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4A13
        ASSIGN4AE5:  preds = [COND495D]
          tensor[2] _t4965#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4966
        ASSIGN4AE6:  preds = [COND48B3]
          tensor[2] _t48BB#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN48BC
        ASSIGN4AE9:  preds = [FOREACH4276]
          int _t4AE8#1 = 0;
          bool _t4AEA#1 = NEQ<int>(cellIntersects4503,_t4AE8);
          if _t4AEA then goto ASSIGN4AEE else goto ASSIGN4B3C
        ASSIGN4AEE:  preds = [COND4AEC]
          femData:MeshPos pos4AED#4 = Subscript<femData:MeshPos[]>(poses44FB,currentCellInt4ADC);
          real rayN4AEF#2 = Subscript<real[]>(normalizedTimes44FE,currentCellInt4ADC);
          tensor[3] op1_e3_l_34AF1#1 = VScale<3>(rayN4AEF,rayVec424E);
          tensor[3] _t4AF4#1 = VAdd<3>(rayOrig424C,op1_e3_l_34AF1);
          tensor[3][2] _t4AF7#1 = <tensor[3][2]>{rayOrig424C,_t4AF4};
          tensor[3][] _t4AF9#1 = MkDynamic<tensor[3],2>(_t4AF7);
          tensor[3][] spaceInter4AFB#1 = Concat<tensor[3]>(spaceInter425E,_t4AF9);
          tensor[2] _t4AFD#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4AED);
          tensor[2][1] _t4AFF#1 = <tensor[2][1]>{_t4AFD};
          tensor[2][] _t4B01#1 = MkDynamic<tensor[2],1>(_t4AFF);
          femData:Mesh _t4B03#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4AED);
          int _t4B05#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4AED);
          femData:MeshCell currentCell4B07#2 = LoadFem<femData:MeshCell>(_t4B03,_t4B05);
          femData:MeshCell[1] _t4B09#1 = <femData:MeshCell[1]>{currentCell4B07};
          femData:MeshCell[] _t4B0B#1 = MkDynamic<femData:MeshCell,1>(_t4B09);
          string _t4B0D#1 = "In the interval:";
          tensor[2] _t4B0F#1 = <tensor[2]>[camNearVsp4250,camFarVsp4252];
          string _t4B11#3 = "\n";
          Print<[string,tensor[2],string]>(_t4B0D,_t4B0F,_t4B11);
          string _t4B14#1 = "Possible times:";
          Print<[string,real[],string]>(_t4B14,normalizedTimes44FE,_t4B11);
          string _t4B17#1 = "cells:";
          femData:MeshCell[] accum4B19#1 = <femData:MeshCell[]>{};
        FOREACH4B1C:  preds = [ASSIGN4B1A,NEXT4B26]
          foreach (p4B1B in poses44FB) on exit goto MASSIGN4B27
            femData:MeshCell[] accum4B24#2 = phi(accum4B19,accum4B23)
          femData:Mesh _t4B1D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p4B1B);
          int _t4B1F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p4B1B);
          femData:MeshCell _t4B21#1 = LoadFem<femData:MeshCell>(_t4B1D,_t4B1F);
          femData:MeshCell[] accum4B23#1 = Append<femData:MeshCell>(accum4B24,_t4B21);
          goto FOREACH4B1C
        MASSIGN4B27:  preds = [FOREACH4B1C]
          Print<[string,femData:MeshCell[],string]>(_t4B17,accum4B24,_t4B11);
          goto JOIN4B2E
        JOIN4B2E:  preds = [MASSIGN4B27,*STABILIZE4B4A]
          femData:MeshPos pos4B28#1 = phi(pos4AED)
          femData:MeshCell currentCell4B29#1 = phi(currentCell4B07)
          real rayN4B2A#1 = phi(rayN4AEF)
          femData:MeshCell[] cellInter4B2B#1 = phi(_t4B0B)
          tensor[2][] refSpaceInter4B2C#1 = phi(_t4B01)
          tensor[3][] spaceInter4B2D#1 = phi(spaceInter4AFB)
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.spaceInter = spaceInter4B2D;
          self.refSpaceInter = refSpaceInter4B2C;
          self.cellInter = cellInter4B2B;
          self.currentCellInt = currentCellInt4ADC;
          self.rayN = rayN4B2A;
          self.currentCell = currentCell4B29;
          self.pos = pos4B28;
          self.startsInside = startsInside4AE7;
          active
        ASSIGN4B3C:  preds = [COND4AEC]
          string _t4B3B#1 = "No intersection!\n";
          Print<[string]>(_t4B3B);
          string _t4B3E#1 = "Ui: ";
          string _t4B40#1 = " Vi:";
          string _t4B42#1 = "\n";
          Print<[string,int,string,int,string]>(_t4B3E,ui4264,_t4B40,vi4266,_t4B42);
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.currentCellInt = currentCellInt4ADC;
          self.startsInside = startsInside4AE7;
          stabilize
          goto JOIN4B2E
        ASSIGN4B4B:  preds = [COND426A]
          bool _t426E#1 = NEQ<int>(vi4266,debugV424A);
          goto JOIN426F
    end start
    method update
        ENTRY4B4C:  preds = []
          tensor[3] rayOrig4B4D#4 = self.rayOrig;
          tensor[3] rayVec4B4F#6 = self.rayVec;
          real camFarVsp4B51#5 = self.camFarVsp;
          femData:MeshPos[] poses4B53#2 = self.poses;
          real[] normalizedTimes4B55#4 = self.normalizedTimes;
          int cellIntersects4B57#1 = self.cellIntersects;
          tensor[2][] rayCellInter4B59#2 = self.rayCellInter;
          tensor[3][] spaceInter4B5B#3 = self.spaceInter;
          tensor[2][] refSpaceInter4B5D#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter4B5F#4 = self.cellInter;
          real rayN4B61#7 = self.rayN;
          femData:MeshCell currentCell4B63#2 = self.currentCell;
          int steps4B65#1 = self.steps;
          femData:MeshPos pos4B67#8 = self.pos;
          bool startsInside4B69#2 = self.startsInside;
          int ui4B6B#1 = self.ui;
          int vi4B6D#1 = self.vi;
          string _t4B6F#1 = "Ui: ";
          string _t4B71#1 = " vi: ";
          string _t4B73#21 = "\n";
          Print<[string,int,string,int,string]>(_t4B6F,ui4B6B,_t4B71,vi4B6D,_t4B73);
          string _t4B76#1 = "The current ref pos is:";
          tensor[2] _t4B78#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4B67);
          Print<[string,tensor[2],string]>(_t4B76,_t4B78,_t4B73);
          string _t4B7B#1 = "Current cell:";
          femData:Mesh _t4B7D#13 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4B67);
          int _t4B7F#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4B67);
          femData:MeshCell _t4B81#3 = LoadFem<femData:MeshCell>(_t4B7D,_t4B7F);
          Print<[string,femData:MeshCell,string]>(_t4B7B,_t4B81,_t4B73);
          string _t4B84#1 = "The current time is:";
          Print<[string,real,string]>(_t4B84,rayN4B61,_t4B73);
          string _t4B87#2 = "The current world pos is:";
          int ilit4B8A#3 = 3;
          int mulRes4B8B#3 = IMul(_t4B7F,ilit4B8A);
          int idx4B8E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,mulRes4B8B);
          int ilit4B8F#25 = 1;
          int addRes4B90#1 = IAdd(mulRes4B8B,ilit4B8F);
          int idx4B91#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B90);
          int ilit4B92#16 = 2;
          int addRes4B93#1 = IAdd(mulRes4B8B,ilit4B92);
          int idx4B94#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B93);
          int mulRes4BA7#2 = IMul(ilit4B92,idx4B8E);
          int addRes4BAA#1 = IAdd(ilit4B8F,mulRes4BA7);
          real dof_load4BAB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BA7);
          real dof_load4BAC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BAA);
          int mulRes4BAF#2 = IMul(ilit4B92,idx4B91);
          int addRes4BB1#1 = IAdd(ilit4B8F,mulRes4BAF);
          real dof_load4BB2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BAF);
          real dof_load4BB3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB1);
          int mulRes4BB6#2 = IMul(ilit4B92,idx4B94);
          int addRes4BB8#1 = IAdd(ilit4B8F,mulRes4BB6);
          real dof_load4BB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BB6);
          real dof_load4BBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB8);
          real varAcc4BD8#1 = VIndex<2,0>(_t4B78);
          real varAcc4BD9#1 = VIndex<2,1>(_t4B78);
          real coeff4BDA#25 = -0.1e1;
          real one4BDC#38 = 0.1e1;
          real prod4BDD#2 = RMul(varAcc4BD8,one4BDC);
          real prod4BDF#2 = RMul(one4BDC,varAcc4BD9);
          real prod4BE0#4 = RMul(one4BDC,one4BDC);
          real mult4BE1#6 = RMul(one4BDC,prod4BE0);
          real mult4BE2#1 = RMul(coeff4BDA,prod4BDF);
          real mult4BE3#1 = RMul(coeff4BDA,prod4BDD);
          real sum4BE4#1 = RAdd(mult4BE2,mult4BE3);
          real sum4BE5#2 = RAdd(mult4BE1,sum4BE4);
          real basisEval4BE7#2 = RMul(one4BDC,prod4BDD);
          real basisEval4BE8#2 = RMul(one4BDC,prod4BDF);
          real r4C00#1 = RMul(dof_load4BAB,sum4BE5);
          real r4C03#1 = RMul(dof_load4BB2,basisEval4BE7);
          real r4C06#1 = RMul(dof_load4BB9,basisEval4BE8);
          real r4C07#1 = RAdd(r4C00,r4C03);
          real r4C08#1 = RAdd(r4C07,r4C06);
          real r4C0A#1 = RMul(dof_load4BAC,sum4BE5);
          real r4C0C#1 = RMul(dof_load4BB3,basisEval4BE7);
          real r4C0E#1 = RMul(dof_load4BBA,basisEval4BE8);
          real r4C0F#1 = RAdd(r4C0A,r4C0C);
          real r4C10#1 = RAdd(r4C0F,r4C0E);
          tensor[2] _t4BFD#3 = <tensor[2]>[r4C08,r4C10];
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          tensor[3] op1_e3_l_34C27#1 = VScale<3>(rayN4B61,rayVec4B4F);
          tensor[3] stupid4C2A#2 = VAdd<3>(rayOrig4B4D,op1_e3_l_34C27);
          string _t4C2D#2 = "The current world pos should be:";
          real _t4C2F#1 = VIndex<3,0>(stupid4C2A);
          real _t4C31#1 = VIndex<3,1>(stupid4C2A);
          tensor[2] _t4C33#3 = <tensor[2]>[_t4C2F,_t4C31];
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real _t4C38#3 = 0.1e-8;
          real _t4C3A#1 = RAdd(one4BDC,_t4C38);
          tensor[2] _t4C3D#1 = <tensor[2]>[one4BDC,one4BDC];
          real _t4C3F#1 = VDot<2>(_t4C3D,_t4B78);
          bool _t4C42#1 = GT<real>(_t4C3A,_t4C3F);
          tensor[2] _t4C44#1 = <tensor[2]>[_t4C38,_t4C38];
          tensor[2] _t4C46#2 = VAdd<2>(_t4C44,_t4B78);
          real _t4C49#1 = VIndex<2,0>(_t4C46);
          real _t4C4B#2 = -0.e0;
          bool _t4C4D#1 = GT<real>(_t4C49,_t4C4B);
          real _t4C4F#1 = VIndex<2,1>(_t4C46);
          bool _t4C51#1 = GT<real>(_t4C4F,_t4C4B);
          bool _t4C53#1 = BAnd(_t4C4D,_t4C51);
          bool _t4C55#1 = BAnd(_t4C42,_t4C53);
          bool _t4C57#1 = BNot(_t4C55);
          if _t4C57 then goto ASSIGN4C5B else goto JOIN4C64
        ASSIGN4C5B:  preds = [COND4C59]
          string _t4C5A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t4C5A);
          bool _t4C5D#1 = BNot(startsInside4B69);
          if _t4C5D then goto ASSIGN4C61 else goto JOIN4C63
        ASSIGN4C61:  preds = [COND4C5F]
          string _t4C60#1 = "Not because of an inside\n";
          Print<[string]>(_t4C60);
          goto JOIN4C63
        JOIN4C63:  preds = [MASSIGN4C62,COND4C5F]
          goto JOIN4C64
        JOIN4C64:  preds = [JOIN4C63,COND4C59]
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          tensor[2] op1_e3_l_74C90#2 = VSub<2>(_t4BFD,_t4C33);
          real op1_e3_l_94C93#1 = VDot<2>(op1_e3_l_74C90,op1_e3_l_74C90);
          real err4C96#2 = Sqrt(op1_e3_l_94C93);
          real _t4C99#1 = 0.1e-4;
          bool _t4C9B#1 = GT<real>(err4C96,_t4C99);
          if _t4C9B then goto ASSIGN4C9F else goto ASSIGN51EE
        ASSIGN4C9F:  preds = [COND4C9D]
          string _t4C9E#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t4C9E,err4C96,_t4B73);
          goto JOIN4CA1
        JOIN4CA1:  preds = [MASSIGN4CA0,MASSIGN51EF]
          int steps4CA4#4 = IAdd(steps4B65,ilit4B8F);
          string _t4CA6#1 = "Orig:";
          string _t4CA8#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t4CA6,rayOrig4B4D,_t4CA8,rayVec4B4F,_t4B73);
          real op1_e3_l_34CAB#2 = RSub(camFarVsp4B51,rayN4B61);
          tensor[3] newDpos4CAE#2 = VScale<3>(op1_e3_l_34CAB,rayVec4B4F);
          tensor[2] _t4CB1#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos4B67);
          femData:Mesh _t4CB3#9 = ExtractFem<femData:Mesh,femData:MeshCell>(_t4B81);
          int _t4CB5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t4B81);
          real _t4CB9#1 = VIndex<3,0>(newDpos4CAE);
          real _t4CBB#1 = VIndex<3,1>(newDpos4CAE);
          tensor[2] _t4CBD#2 = <tensor[2]>[_t4CB9,_t4CBB];
          int _t4CBF#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos4B67);
          real time4CC1#5 = +inf;
          int face4CC3#9 = -1;
          real faceTime4CC5#6 = -inf;
          real _t4CC7#40 = 0.e0;
          tensor[2] _t4CC9#3 = <tensor[2]>[one4BDC,_t4CC7];
          tensor[2] _t4CCD#1 = <tensor[2]>[coeff4BDA,one4BDC];
          int mulRes4CD1#3 = IMul(_t4CB5,ilit4B8A);
          int idx4CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,mulRes4CD1);
          int addRes4CD6#1 = IAdd(mulRes4CD1,ilit4B8F);
          int idx4CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD6);
          int addRes4CD9#1 = IAdd(mulRes4CD1,ilit4B92);
          int idx4CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD9);
          int mulRes4CED#2 = IMul(ilit4B92,idx4CD4);
          int addRes4CF0#1 = IAdd(ilit4B8F,mulRes4CED);
          real dof_load4CF1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CED);
          real dof_load4CF2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF0);
          int mulRes4CF5#2 = IMul(ilit4B92,idx4CD7);
          int addRes4CF7#1 = IAdd(ilit4B8F,mulRes4CF5);
          real dof_load4CF8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CF5);
          real dof_load4CF9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF7);
          int mulRes4CFC#2 = IMul(ilit4B92,idx4CDA);
          int addRes4CFE#1 = IAdd(ilit4B8F,mulRes4CFC);
          real dof_load4CFF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CFC);
          real dof_load4D00#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFE);
          real basisEval4D23#2 = RMul(coeff4BDA,prod4BE0);
          real r4D38#2 = RMul(dof_load4CF1,basisEval4D23);
          real r4D3B#1 = RMul(dof_load4CF8,mult4BE1);
          real r4D3E#1 = RMul(dof_load4CFF,_t4CC7);
          real r4D3F#1 = RAdd(r4D38,r4D3B);
          real r4D40#3 = RAdd(r4D3F,r4D3E);
          real r4D44#1 = RMul(dof_load4CF8,_t4CC7);
          real r4D46#1 = RMul(dof_load4CFF,mult4BE1);
          real r4D47#1 = RAdd(r4D38,r4D44);
          real r4D48#3 = RAdd(r4D47,r4D46);
          real r4D4B#2 = RMul(dof_load4CF2,basisEval4D23);
          real r4D4D#1 = RMul(dof_load4CF9,mult4BE1);
          real r4D4F#1 = RMul(dof_load4D00,_t4CC7);
          real r4D50#1 = RAdd(r4D4B,r4D4D);
          real r4D51#3 = RAdd(r4D50,r4D4F);
          real r4D53#1 = RMul(dof_load4CF9,_t4CC7);
          real r4D54#1 = RMul(dof_load4D00,mult4BE1);
          real r4D55#1 = RAdd(r4D4B,r4D53);
          real r4D56#3 = RAdd(r4D55,r4D54);
          real r4D7F#1 = RMul(_t4CC7,r4D40);
          real r4D82#1 = RMul(coeff4BDA,r4D51);
          real r4D83#2 = RAdd(r4D7F,r4D82);
          real r4D85#2 = RMul(_t4CC7,r4D48);
          real r4D87#1 = RMul(coeff4BDA,r4D56);
          real r4D88#2 = RAdd(r4D85,r4D87);
          real r4D8B#1 = RMul(one4BDC,r4D40);
          real r4D8C#1 = RMul(_t4CC7,r4D51);
          real r4D8D#2 = RAdd(r4D8B,r4D8C);
          real r4D8E#1 = RMul(one4BDC,r4D48);
          real r4D8F#2 = RMul(_t4CC7,r4D56);
          real r4D90#2 = RAdd(r4D8E,r4D8F);
          tensor[2] probe_l_114DA9#1 = <tensor[2]>[r4D40,r4D51];
          real r4E01#1 = RMul(one4BDC,r4D56);
          real r4E02#1 = RAdd(r4D85,r4E01);
          real r4E04#1 = RMul(coeff4BDA,r4D48);
          real r4E06#1 = RAdd(r4E04,r4D8F);
          tensor[2] op1_e3_l_134DFB#1 = <tensor[2]>[r4E02,r4E06];
          real r4E17#1 = RMul(_t4CC7,r4D83);
          real r4E1A#1 = RMul(coeff4BDA,r4D88);
          real r4E1B#1 = RAdd(r4E17,r4E1A);
          real r4E1D#1 = RMul(_t4CC7,r4D8D);
          real r4E1F#1 = RMul(coeff4BDA,r4D90);
          real r4E20#1 = RAdd(r4E1D,r4E1F);
          real r4E23#1 = RMul(one4BDC,r4D83);
          real r4E24#1 = RMul(_t4CC7,r4D88);
          real r4E25#1 = RAdd(r4E23,r4E24);
          real r4E26#1 = RMul(one4BDC,r4D8D);
          real r4E27#1 = RMul(_t4CC7,r4D90);
          real r4E28#1 = RAdd(r4E26,r4E27);
          real op1_e3_l_154E41#4 = VDot<2>(probe_l_114DA9,op1_e3_l_134DFB);
          real r4E46#1 = RDiv(r4E1B,op1_e3_l_154E41);
          real r4E48#1 = RDiv(r4E20,op1_e3_l_154E41);
          tensor[2] tensor4E49#1 = <tensor[2]>[r4E46,r4E48];
          real r4E4B#1 = RDiv(r4E25,op1_e3_l_154E41);
          real r4E4D#1 = RDiv(r4E28,op1_e3_l_154E41);
          tensor[2] tensor4E4E#1 = <tensor[2]>[r4E4B,r4E4D];
          real vdot4E5D#1 = VDot<2>(tensor4E49,_t4CBD);
          real vdot4E5F#1 = VDot<2>(tensor4E4E,_t4CBD);
          tensor[2] op1_e3_l_174E5B#5 = <tensor[2]>[vdot4E5D,vdot4E5F];
          real r4E69#1 = RMul(_t4CC7,coeff4BDA);
          real r4E6D#1 = RAdd(r4E69,prod4BE0);
          real r4E6F#1 = RMul(coeff4BDA,coeff4BDA);
          real r4E70#3 = RMul(_t4CC7,one4BDC);
          real r4E71#1 = RAdd(r4E6F,r4E70);
          tensor[2] op1_e3_l_184E66#1 = <tensor[2]>[r4E6D,r4E71];
          real op1_e3_l_194E7F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184E66);
          real r4E84#2 = RDiv(one4BDC,op1_e3_l_194E7F);
          real r4E86#2 = RMul(r4E84,coeff4BDA);
          real r4E88#2 = RMul(r4E84,one4BDC);
          tensor[2] op1_e3_l_214E91#1 = VSub<2>(_t4CC9,_t4CB1);
          real r4E97#1 = RMul(_t4CC7,r4E86);
          real r4E9A#1 = RMul(one4BDC,r4E88);
          real r4E9B#1 = RAdd(r4E97,r4E9A);
          real r4E9D#1 = RMul(coeff4BDA,r4E86);
          real r4E9E#1 = RMul(_t4CC7,r4E88);
          real r4E9F#1 = RAdd(r4E9D,r4E9E);
          tensor[2] op1_e3_l_224E94#1 = <tensor[2]>[r4E9B,r4E9F];
          real _t4EAD#6 = VDot<2>(op1_e3_l_214E91,op1_e3_l_224E94);
          real _t4EB0#3 = -0.1e-15;
          bool _t4EB2#1 = GTE<real>(_t4EAD,_t4EB0);
          bool _t4EB4#1 = GT<real>(time4CC1,_t4EAD);
          real _t4EB6#1 = Abs<real>(op1_e3_l_194E7F);
          real _t4EB9#3 = 0.1e-20;
          bool _t4EBB#1 = GTE<real>(_t4EB6,_t4EB9);
          bool _t4EBD#1 = BAnd(_t4EB4,_t4EBB);
          bool _t4EBF#2 = BAnd(_t4EB2,_t4EBD);
          if _t4EBF then goto ASSIGN4EC3 else goto JOIN4ECE
        ASSIGN4EC3:  preds = [COND4EC1]
          int _t4EC2#2 = 0;
          bool _t4EC4#1 = NEQ<int>(_t4CBF,_t4EC2);
          if _t4EC4 then goto JOIN4ECA else goto JOIN4ECA
        JOIN4ECA:  preds = [COND4EC6,COND4EC6]
          real faceTime4EC7#1 = phi(faceTime4CC5,_t4EAD)
          int face4EC8#1 = phi(_t4EC2,face4CC3)
          real time4EC9#1 = phi(_t4EAD,time4CC1)
          goto JOIN4ECE
        JOIN4ECE:  preds = [JOIN4ECA,COND4EC1]
          real faceTime4ECB#2 = phi(faceTime4EC7,faceTime4CC5)
          int face4ECC#2 = phi(face4EC8,face4CC3)
          real time4ECD#3 = phi(time4EC9,time4CC1)
          tensor[2] _t4ECF#3 = <tensor[2]>[_t4CC7,_t4CC7];
          tensor[2] _t4ED1#1 = <tensor[2]>[_t4CC7,one4BDC];
          real r4ED6#2 = RMul(_t4CC7,_t4CC7);
          real r4EDA#1 = RAdd(r4ED6,prod4BE0);
          real r4EDC#1 = RMul(coeff4BDA,_t4CC7);
          real r4EDE#1 = RAdd(r4EDC,r4E70);
          tensor[2] op1_e3_l_184ED3#1 = <tensor[2]>[r4EDA,r4EDE];
          real op1_e3_l_194EEC#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184ED3);
          real r4EF1#2 = RDiv(one4BDC,op1_e3_l_194EEC);
          real r4EF3#2 = RMul(r4EF1,_t4CC7);
          real r4EF5#2 = RMul(r4EF1,one4BDC);
          tensor[2] op1_e3_l_214EFE#2 = VSub<2>(_t4ECF,_t4CB1);
          real r4F04#1 = RMul(_t4CC7,r4EF3);
          real r4F07#1 = RMul(one4BDC,r4EF5);
          real r4F08#1 = RAdd(r4F04,r4F07);
          real r4F0A#1 = RMul(coeff4BDA,r4EF3);
          real r4F0B#1 = RMul(_t4CC7,r4EF5);
          real r4F0C#1 = RAdd(r4F0A,r4F0B);
          tensor[2] op1_e3_l_224F01#1 = <tensor[2]>[r4F08,r4F0C];
          real _t4F1A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F01);
          bool _t4F1D#2 = GTE<real>(_t4F1A,_t4EB0);
          bool _t4F1F#1 = GT<real>(time4ECD,_t4F1A);
          real _t4F21#1 = Abs<real>(op1_e3_l_194EEC);
          bool _t4F24#2 = GTE<real>(_t4F21,_t4EB9);
          bool _t4F26#1 = BAnd(_t4F1F,_t4F24);
          bool _t4F28#1 = BAnd(_t4F1D,_t4F26);
          if _t4F28 then goto ASSIGN543B else goto JOIN4F35
        ASSIGN543B:  preds = [COND4F2A]
          bool _t4F2B#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4F2B then goto JOIN4F31 else goto JOIN4F31
        JOIN4F31:  preds = [COND4F2D,COND4F2D]
          real faceTime4F2E#1 = phi(faceTime4ECB,_t4F1A)
          int face4F2F#1 = phi(ilit4B8F,face4ECC)
          real time4F30#1 = phi(_t4F1A,time4ECD)
          goto JOIN4F35
        JOIN4F35:  preds = [JOIN4F31,COND4F2A]
          real faceTime4F32#2 = phi(faceTime4F2E,faceTime4ECB)
          int face4F33#2 = phi(face4F2F,face4ECC)
          real time4F34#3 = phi(time4F30,time4ECD)
          real r4F3C#1 = RMul(one4BDC,_t4CC7);
          real r4F3D#1 = RAdd(r4E70,r4F3C);
          real r4F3F#1 = RMul(coeff4BDA,one4BDC);
          real r4F41#1 = RAdd(r4F3F,r4ED6);
          tensor[2] op1_e3_l_184F36#1 = <tensor[2]>[r4F3D,r4F41];
          real op1_e3_l_194F4F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184F36);
          real r4F54#2 = RDiv(one4BDC,op1_e3_l_194F4F);
          real r4F56#2 = RMul(r4F54,one4BDC);
          real r4F58#2 = RMul(r4F54,_t4CC7);
          real r4F64#1 = RMul(_t4CC7,r4F56);
          real r4F67#1 = RMul(one4BDC,r4F58);
          real r4F68#1 = RAdd(r4F64,r4F67);
          real r4F6A#1 = RMul(coeff4BDA,r4F56);
          real r4F6B#1 = RMul(_t4CC7,r4F58);
          real r4F6C#1 = RAdd(r4F6A,r4F6B);
          tensor[2] op1_e3_l_224F61#1 = <tensor[2]>[r4F68,r4F6C];
          real _t4F7A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F61);
          bool _t4F7D#2 = GTE<real>(_t4F7A,_t4EB0);
          bool _t4F7F#1 = GT<real>(time4F34,_t4F7A);
          real _t4F81#1 = Abs<real>(op1_e3_l_194F4F);
          bool _t4F84#2 = GTE<real>(_t4F81,_t4EB9);
          bool _t4F86#1 = BAnd(_t4F7F,_t4F84);
          bool _t4F88#1 = BAnd(_t4F7D,_t4F86);
          if _t4F88 then goto ASSIGN5447 else goto JOIN4F97
        ASSIGN5447:  preds = [COND4F8A]
          bool _t4F8D#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4F8D then goto JOIN4F93 else goto JOIN4F93
        JOIN4F93:  preds = [COND4F8F,COND4F8F]
          real faceTime4F90#1 = phi(faceTime4F32,_t4F7A)
          int face4F91#1 = phi(ilit4B92,face4F33)
          real time4F92#1 = phi(_t4F7A,time4F34)
          goto JOIN4F97
        JOIN4F97:  preds = [JOIN4F93,COND4F8A]
          real faceTime4F94#2 = phi(faceTime4F90,faceTime4F32)
          int face4F95#2 = phi(face4F91,face4F33)
          real time4F96#1 = phi(time4F92,time4F34)
          bool _t4F98#1 = NEQ<int>(face4F95,face4CC3);
          if _t4F98 then goto ASSIGN4F9C else goto ASSIGN51E4
        ASSIGN4F9C:  preds = [COND4F9A]
          real _t4F9B#1 = Max<real>(time4F96,_t4CC7);
          real _t4F9D#1 = IntToReal(face4F95);
          tensor[2] _t4F9F#1 = <tensor[2]>[_t4F9B,_t4F9D];
          goto JOIN4FA3
        JOIN4FA3:  preds = [ASSIGN4FA0,JOIN51E9]
          tensor[2] _t4FA1#1 = phi(_t4F9F,_t4FA2)
          real nextTime4FA4#3 = VIndex<2,0>(_t4FA1);
          real op1_e3_l_44FA9#1 = RMul(nextTime4FA4,op1_e3_l_34CAB);
          real _t4FAC#1 = RAdd(rayN4B61,op1_e3_l_44FA9);
          real _t4FAF#1 = Min<real>(camFarVsp4B51,_t4FAC);
          real rayNp4FB1#6 = Max<real>(rayN4B61,_t4FAF);
          string _t4FB3#1 = "Next time:";
          Print<[string,real,string]>(_t4FB3,nextTime4FA4,_t4B73);
          bool _t4FB6#1 = GTE<real>(nextTime4FA4,_t4CC7);
          if _t4FB6 then goto ASSIGN4FBA else goto JOIN50B2
        ASSIGN4FBA:  preds = [COND4FB8]
          tensor[2] _t4FB9#1 = <tensor[2]>[rayN4B61,rayNp4FB1];
          tensor[2][] rayCellInter4FBB#3 = Append<tensor[2]>(rayCellInter4B59,_t4FB9);
          int _t4FBD#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos4B67);
          if _t4EBF then goto ASSIGN4FC1 else goto JOIN4FCC
        ASSIGN4FC1:  preds = [COND4FBF]
          int _t4FC0#2 = 0;
          bool _t4FC2#1 = NEQ<int>(_t4CBF,_t4FC0);
          if _t4FC2 then goto JOIN4FC8 else goto JOIN4FC8
        JOIN4FC8:  preds = [COND4FC4,COND4FC4]
          real faceTime4FC5#1 = phi(faceTime4CC5,_t4EAD)
          int face4FC6#1 = phi(_t4FC0,face4CC3)
          real time4FC7#1 = phi(_t4EAD,time4CC1)
          goto JOIN4FCC
        JOIN4FCC:  preds = [JOIN4FC8,COND4FBF]
          real faceTime4FC9#2 = phi(faceTime4FC5,faceTime4CC5)
          int face4FCA#2 = phi(face4FC6,face4CC3)
          real time4FCB#3 = phi(time4FC7,time4CC1)
          bool _t4FCD#1 = GT<real>(time4FCB,_t4F1A);
          bool _t4FCF#1 = BAnd(_t4FCD,_t4F24);
          bool _t4FD1#1 = BAnd(_t4F1D,_t4FCF);
          if _t4FD1 then goto ASSIGN544A else goto JOIN4FDE
        ASSIGN544A:  preds = [COND4FD3]
          bool _t4FD4#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4FD4 then goto JOIN4FDA else goto JOIN4FDA
        JOIN4FDA:  preds = [COND4FD6,COND4FD6]
          real faceTime4FD7#1 = phi(faceTime4FC9,_t4F1A)
          int face4FD8#1 = phi(ilit4B8F,face4FCA)
          real time4FD9#1 = phi(_t4F1A,time4FCB)
          goto JOIN4FDE
        JOIN4FDE:  preds = [JOIN4FDA,COND4FD3]
          real faceTime4FDB#2 = phi(faceTime4FD7,faceTime4FC9)
          int face4FDC#2 = phi(face4FD8,face4FCA)
          real time4FDD#3 = phi(time4FD9,time4FCB)
          bool _t4FDF#1 = GT<real>(time4FDD,_t4F7A);
          bool _t4FE1#1 = BAnd(_t4FDF,_t4F84);
          bool _t4FE3#1 = BAnd(_t4F7D,_t4FE1);
          if _t4FE3 then goto ASSIGN544B else goto JOIN4FF2
        ASSIGN544B:  preds = [COND4FE5]
          bool _t4FE8#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4FE8 then goto JOIN4FEE else goto JOIN4FEE
        JOIN4FEE:  preds = [COND4FEA,COND4FEA]
          real faceTime4FEB#1 = phi(faceTime4FDB,_t4F7A)
          int face4FEC#1 = phi(ilit4B92,face4FDC)
          real time4FED#1 = phi(_t4F7A,time4FDD)
          goto JOIN4FF2
        JOIN4FF2:  preds = [JOIN4FEE,COND4FE5]
          real faceTime4FEF#2 = phi(faceTime4FEB,faceTime4FDB)
          int face4FF0#2 = phi(face4FEC,face4FDC)
          real time4FF1#1 = phi(time4FED,time4FDD)
          bool _t4FF3#1 = NEQ<int>(face4FF0,face4CC3);
          if _t4FF3 then goto ASSIGN4FF7 else goto ASSIGN51DA
        ASSIGN4FF7:  preds = [COND4FF5]
          real _t4FF6#1 = Max<real>(time4FF1,_t4CC7);
          real _t4FF8#1 = IntToReal(face4FF0);
          tensor[2] _t4FFA#1 = <tensor[2]>[_t4FF6,_t4FF8];
          goto JOIN4FFE
        JOIN4FFE:  preds = [ASSIGN4FFB,JOIN51DF]
          tensor[2] _t4FFC#3 = phi(_t4FFA,_t4FFD)
          real _t4FFF#1 = VIndex<2,1>(_t4FFC);
          real t5001#1 = Floor<1>(_t4FFF);
          int _t5003#6 = RealToInt<1>(t5001);
          int[2] _t5005#2 = nextCell45006 (_t5003,_t4FBD,_t4B7D);
          int _t5019#4 = 0;
          int _t501B#2 = Subscript<int[2]>(_t5005,_t5019);
          bool _t501D#1 = NEQ<int>(face4CC3,_t501B);
          if _t501D then goto ASSIGN5021 else goto ASSIGN51D1
        ASSIGN5021:  preds = [COND501F]
          tensor[2][3] _t5020#1 = <tensor[2][3]>{_t4CC9,_t4ECF,_t4ECF};
          int _t5022#3 = Subscript<int[2]>(_t5005,ilit4B8F);
          tensor[2] _t5024#1 = Subscript<tensor[2][3]>(_t5020,_t5022);
          tensor[2][3] _t5026#1 = <tensor[2][3]>{_t4CCD,_t4ED1,_t4CC9};
          tensor[2] _t5028#1 = Subscript<tensor[2][3]>(_t5026,_t5022);
          real _t502A#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_16502C#1 = VScale<2>(_t502A,op1_e3_l_174E5B);
          tensor[2] _t502F#2 = VAdd<2>(op1_e3_l_16502C,_t4CB1);
          real _t5032#1 = VIndex<2,0>(_t502F);
          real _t5034#1 = VIndex<2,1>(_t502F);
          real[2] _t5036#1 = <real[2]>{_t5032,_t5034};
          int[3] _t5038#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t503A#1 = Subscript<int[3]>(_t5038,_t5003);
          real _t503C#1 = Subscript<real[2]>(_t5036,_t503A);
          real[2] _t503E#1 = <real[2]>{one4BDC,_t4CC7};
          real[2] _t5040#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2] _t5042#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2][3] _t5044#1 = <real[2][3]>{_t503E,_t5040,_t5042};
          real[2] _t5046#1 = Subscript<real[2][3]>(_t5044,_t5003);
          int[3] _t5048#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t504A#1 = Subscript<int[3]>(_t5048,_t5003);
          real _t504C#1 = Subscript<real[2]>(_t5046,_t504A);
          real[2] _t504E#1 = <real[2]>{coeff4BDA,one4BDC};
          real[2] _t5050#1 = <real[2]>{_t4CC7,one4BDC};
          real[2] _t5052#1 = <real[2]>{one4BDC,_t4CC7};
          real[2][3] _t5054#1 = <real[2][3]>{_t504E,_t5050,_t5052};
          real[2] _t5056#1 = Subscript<real[2][3]>(_t5054,_t5003);
          int[3] _t5058#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t505A#1 = Subscript<int[3]>(_t5058,_t5003);
          real _t505C#1 = Subscript<real[2]>(_t5056,_t505A);
          real op1_e3_l_5505E#1 = RSub(_t503C,_t504C);
          real op1_e3_l_65061#1 = RDiv(op1_e3_l_5505E,_t505C);
          tensor[2] op1_e3_l_75064#1 = VScale<2>(op1_e3_l_65061,_t5028);
          tensor[2] _t5067#1 = VAdd<2>(_t5024,op1_e3_l_75064);
          femData:MeshPos _t506A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t4B7D,_t501B,_t5067,_t5022);
          goto JOIN506E
        JOIN506E:  preds = [ASSIGN506B,ASSIGN51D8]
          femData:MeshPos posp506C#5 = phi(_t506A,_t506D)
          bool _t506F#1 = GTE<real>(rayNp4FB1,camFarVsp4B51);
          if _t506F then goto ASSIGN5073 else goto JOIN5083
        ASSIGN5073:  preds = [COND5071]
          string _t5072#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t5072,cellInter4B5F,_t4B73);
          tensor[3] op1_e3_l_35075#1 = VScale<3>(camFarVsp4B51,rayVec4B4F);
          tensor[3] _t5078#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35075);
          tensor[3][] spaceInter507B#1 = Append<tensor[3]>(spaceInter4B5B,_t5078);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter507B;
          self.rayN = rayNp4FB1;
          self.steps = steps4CA4;
          stabilize
          goto JOIN5083
        JOIN5083:  preds = [*STABILIZE5081,COND5071]
          tensor[3][] spaceInter5082#1 = phi(spaceInter4B5B)
          tensor[3] op1_e3_l_35084#1 = VScale<3>(rayNp4FB1,rayVec4B4F);
          tensor[3] _t5087#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35084);
          tensor[3][] spaceInter508A#2 = Append<tensor[3]>(spaceInter5082,_t5087);
          tensor[2] _t508C#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp506C);
          tensor[2][] refSpaceInter508E#2 = Append<tensor[2]>(refSpaceInter4B5D,_t508C);
          bool _t5090#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp506C);
          if _t5090 then goto ASSIGN5094 else goto ASSIGN51CE
        ASSIGN5094:  preds = [COND5092]
          string _t5093#1 = "Next cell:";
          femData:Mesh _t5095#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp506C);
          int _t5097#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp506C);
          femData:MeshCell _t5099#3 = LoadFem<femData:MeshCell>(_t5095,_t5097);
          Print<[string,femData:MeshCell,string]>(_t5093,_t5099,_t4B73);
          femData:MeshCell[] cellInter509C#1 = Append<femData:MeshCell>(cellInter4B5F,_t5099);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter508A;
          self.refSpaceInter = refSpaceInter508E;
          self.cellInter = cellInter509C;
          self.rayN = rayNp4FB1;
          self.currentCell = _t5099;
          self.steps = steps4CA4;
          self.pos = posp506C;
          active
          goto JOIN50AA
        JOIN50AA:  preds = [*ACTIVE50A6,MASSIGN51CF]
          femData:MeshPos pos50A7#1 = phi(pos4B67)
          femData:MeshCell currentCell50A8#1 = phi(currentCell4B63)
          femData:MeshCell[] cellInter50A9#1 = phi(cellInter4B5F)
          goto JOIN50B2
        JOIN50B2:  preds = [JOIN50AA,COND4FB8]
          femData:MeshPos pos50AB#6 = phi(pos50A7,pos4B67)
          femData:MeshCell currentCell50AC#1 = phi(currentCell50A8,currentCell4B63)
          real rayN50AD#3 = phi(rayNp4FB1,rayN4B61)
          femData:MeshCell[] cellInter50AE#3 = phi(cellInter50A9,cellInter4B5F)
          tensor[2][] refSpaceInter50AF#2 = phi(refSpaceInter508E,refSpaceInter4B5D)
          tensor[3][] spaceInter50B0#2 = phi(spaceInter508A,spaceInter4B5B)
          tensor[2][] rayCellInter50B1#3 = phi(rayCellInter4FBB,rayCellInter4B59)
          int _t50B3#1 = 0;
          int _t50B5#1 = ISub(cellIntersects4B57,ilit4B8F);
          int[] _t50B7#1 = Range(_t50B3,_t50B5);
        FOREACH50BA:  preds = [ASSIGN50B8,NEXT50E3]
          foreach (i50B9 in _t50B7) on exit goto ASSIGN50E5
            real estimate50C3#4 = phi(camFarVsp4B51,estimate50E0)
            int newIdx50DB#7 = phi(face4CC3,newIdx50E1)
          real t50BB#3 = Subscript<real[]>(normalizedTimes4B55,i50B9);
          femData:MeshPos posp50BD#2 = Subscript<femData:MeshPos[]>(poses4B53,i50B9);
          bool _t50BF#1 = GTE<real>(t50BB,rayN50AD);
          if _t50BF then goto ASSIGN50C4 else goto JOIN50E2
        ASSIGN50C4:  preds = [COND50C1]
          bool _t50C2#1 = GTE<real>(estimate50C3,t50BB);
          if _t50C2 then goto ASSIGN50C7 else goto JOIN50DF
        ASSIGN50C7:  preds = [COND50C5]
          femData:Mesh _t50C6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp50BD);
          int _t50C8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp50BD);
          femData:MeshCell _t50CA#1 = LoadFem<femData:MeshCell>(_t50C6,_t50C8);
          femData:Mesh _t50CC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int _t50CE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:MeshCell _t50D0#1 = LoadFem<femData:MeshCell>(_t50CC,_t50CE);
          int _t50D2#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50CA);
          int _t50D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50D0);
          bool _t50D6#1 = NEQ<int>(_t50D2,_t50D4);
          if _t50D6 then goto JOIN50DC else goto JOIN50DC
        JOIN50DC:  preds = [COND50D8,COND50D8]
          real estimate50D9#1 = phi(t50BB,estimate50C3)
          int newIdx50DA#1 = phi(i50B9,newIdx50DB)
          goto JOIN50DF
        JOIN50DF:  preds = [JOIN50DC,COND50C5]
          real estimate50DD#1 = phi(estimate50D9,estimate50C3)
          int newIdx50DE#1 = phi(newIdx50DA,newIdx50DB)
          goto JOIN50E2
        JOIN50E2:  preds = [JOIN50DF,COND50C1]
          real estimate50E0#1 = phi(estimate50DD,estimate50C3)
          int newIdx50E1#1 = phi(newIdx50DE,newIdx50DB)
          goto FOREACH50BA
        ASSIGN50E5:  preds = [FOREACH50BA]
          bool _t50E4#1 = GT<int>(newIdx50DB,face4CC3);
          if _t50E4 then goto ASSIGN50E8 else goto ASSIGN51B9
        ASSIGN50E8:  preds = [COND50E6]
          string _t50E7#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t50E7);
          if startsInside4B69 then goto ASSIGN50EC else goto JOIN50EE
        ASSIGN50EC:  preds = [COND50EA]
          string _t50EB#1 = "because of an inside\n";
          Print<[string]>(_t50EB);
          goto JOIN50EE
        JOIN50EE:  preds = [MASSIGN50ED,COND50EA]
          string _t50EF#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t50EF,rayVec4B4F,_t4B73);
          string _t50F2#1 = "world pos was:";
          tensor[2] _t50F4#3 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos50AB);
          int _t50F6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:Mesh _t50F8#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int mulRes50FC#3 = IMul(_t50F6,ilit4B8A);
          int idx50FF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,mulRes50FC);
          int addRes5101#1 = IAdd(mulRes50FC,ilit4B8F);
          int idx5102#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5101);
          int addRes5104#1 = IAdd(mulRes50FC,ilit4B92);
          int idx5105#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5104);
          int mulRes5118#2 = IMul(ilit4B92,idx50FF);
          int addRes511B#1 = IAdd(ilit4B8F,mulRes5118);
          real dof_load511C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5118);
          real dof_load511D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes511B);
          int mulRes5120#2 = IMul(ilit4B92,idx5102);
          int addRes5122#1 = IAdd(ilit4B8F,mulRes5120);
          real dof_load5123#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5120);
          real dof_load5124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5122);
          int mulRes5127#2 = IMul(ilit4B92,idx5105);
          int addRes5129#1 = IAdd(ilit4B8F,mulRes5127);
          real dof_load512A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5127);
          real dof_load512B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5129);
          real varAcc5149#1 = VIndex<2,0>(_t50F4);
          real varAcc514A#1 = VIndex<2,1>(_t50F4);
          real prod514E#2 = RMul(varAcc5149,one4BDC);
          real prod5150#2 = RMul(one4BDC,varAcc514A);
          real mult5153#1 = RMul(coeff4BDA,prod5150);
          real mult5154#1 = RMul(coeff4BDA,prod514E);
          real sum5155#1 = RAdd(mult5153,mult5154);
          real sum5156#2 = RAdd(mult4BE1,sum5155);
          real basisEval5158#2 = RMul(one4BDC,prod514E);
          real basisEval5159#2 = RMul(one4BDC,prod5150);
          real r5171#1 = RMul(dof_load511C,sum5156);
          real r5174#1 = RMul(dof_load5123,basisEval5158);
          real r5177#1 = RMul(dof_load512A,basisEval5159);
          real r5178#1 = RAdd(r5171,r5174);
          real r5179#1 = RAdd(r5178,r5177);
          real r517B#1 = RMul(dof_load511D,sum5156);
          real r517D#1 = RMul(dof_load5124,basisEval5158);
          real r517F#1 = RMul(dof_load512B,basisEval5159);
          real r5180#1 = RAdd(r517B,r517D);
          real r5181#1 = RAdd(r5180,r517F);
          tensor[2] _t516E#1 = <tensor[2]>[r5179,r5181];
          Print<[string,tensor[2],string]>(_t50F2,_t516E,_t4B73);
          string _t5198#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t5198,_t50F4,_t4B73);
          string _t519B#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes4B55,_t519B,newIdx50DB,_t4B73);
          string _t519E#1 = "Original time was:";
          Print<[string,real,string]>(_t519E,rayN50AD,_t4B73);
          femData:MeshPos pos51A1#3 = Subscript<femData:MeshPos[]>(poses4B53,newIdx50DB);
          femData:Mesh _t51A3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos51A1);
          int _t51A5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos51A1);
          femData:MeshCell currentCell51A7#2 = LoadFem<femData:MeshCell>(_t51A3,_t51A5);
          femData:MeshCell[] cellInter51A9#1 = Append<femData:MeshCell>(cellInter50AE,currentCell51A7);
          real rayN51AB#1 = Subscript<real[]>(normalizedTimes4B55,newIdx50DB);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter51A9;
          self.rayN = rayN51AB;
          self.currentCell = currentCell51A7;
          self.steps = steps4CA4;
          self.pos = pos51A1;
          active
          goto JOIN51B6
        JOIN51B6:  preds = [*ACTIVE51B5,*STABILIZE51CC]
          unreachable
        ASSIGN51B9:  preds = [COND50E6]
          string _t51B8#1 = "Enter times:";
          Print<[string,real[],string]>(_t51B8,normalizedTimes4B55,_t4B73);
          string _t51BB#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t51BB,rayCellInter50B1,_t4B73);
          string _t51BE#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t51BE,cellInter50AE,_t4B73);
          string _t51C1#1 = "End\n";
          Print<[string]>(_t51C1);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter50AE;
          self.rayN = rayN50AD;
          self.currentCell = currentCell50AC;
          self.steps = steps4CA4;
          self.pos = pos50AB;
          stabilize
          goto JOIN51B6
        ASSIGN51CE:  preds = [COND5092]
          string _t51CD#1 = "Invalid\n";
          Print<[string]>(_t51CD);
          goto JOIN50AA
        ASSIGN51D1:  preds = [COND501F]
          real _t51D0#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_1651D2#1 = VScale<2>(_t51D0,op1_e3_l_174E5B);
          tensor[2] _t51D5#1 = VAdd<2>(op1_e3_l_1651D2,_t4CB1);
          femData:MeshPos _t506D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t4B7D,_t51D5);
          goto JOIN506E
        ASSIGN51DA:  preds = [COND4FF5]
          bool _t51D9#1 = EQ<real>(faceTime4CC5,faceTime4FEF);
          if _t51D9 then goto ASSIGN544C else goto ASSIGN51E1
        ASSIGN544C:  preds = [COND51DB]
          tensor[2] _t51DC#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51DF
        JOIN51DF:  preds = [ASSIGN544C,ASSIGN51E2]
          tensor[2] _t4FFD#1 = phi(_t51DC,_t51DE)
          goto JOIN4FFE
        ASSIGN51E1:  preds = [COND51DB]
          real _t51E0#1 = IntToReal(_t4CBF);
          tensor[2] _t51DE#1 = <tensor[2]>[faceTime4FEF,_t51E0];
          goto JOIN51DF
        ASSIGN51E4:  preds = [COND4F9A]
          bool _t51E3#1 = EQ<real>(faceTime4CC5,faceTime4F94);
          if _t51E3 then goto ASSIGN5448 else goto ASSIGN51EB
        ASSIGN5448:  preds = [COND51E5]
          tensor[2] _t51E6#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51E9
        JOIN51E9:  preds = [ASSIGN5448,ASSIGN51EC]
          tensor[2] _t4FA2#1 = phi(_t51E6,_t51E8)
          goto JOIN4FA3
        ASSIGN51EB:  preds = [COND51E5]
          real _t51EA#1 = IntToReal(_t4CBF);
          tensor[2] _t51E8#1 = <tensor[2]>[faceTime4F94,_t51EA];
          goto JOIN51E9
        ASSIGN51EE:  preds = [COND4C9D]
          string _t51ED#1 = "Did not move off ray!\n";
          Print<[string]>(_t51ED);
          goto JOIN4CA1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY51F1:  preds = []
      int iresU51F2#1 = globals.iresU3FCF;
      int iresV51F4#1 = globals.iresV3FD0;
      int _t51F6#2 = 0;
      int _t51F8#2 = 1;
      int _t51FA#1 = ISub(iresU51F2,_t51F8);
      int[] _t51FC#1 = Range(_t51F6,_t51FA);
    FOREACH51FF:  preds = [ASSIGN51FD,NEXT5208]
      foreach (vi51FE in _t51FC) on exit goto RETURN5209
      int _t5200#1 = ISub(iresV51F4,_t51F8);
      int[] _t5202#1 = Range(_t51F6,_t5200);
    FOREACH5205:  preds = [ASSIGN5203,NEXT5207]
      foreach (ui5204 in _t5202) on exit goto NEXT5208
      new ray(ui5204,vi51FE);
      goto FOREACH5205
    NEXT5208:  preds = [FOREACH5205]
      goto FOREACH51FF
    RETURN5209:  preds = [FOREACH51FF]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a3FC8 (a) = <no-default>
  input isoval3FC9 (isoval) = <default>
  input thick3FCA (thick) = <default>
  input camEye3FCB (camEye) = <default>
  input camAt3FCC (camAt) = <default>
  input camUp3FCD (camUp) = <default>
  input camFOV3FCE (camFOV) = <default>
  input iresU3FCF (iresU) = <default>
  input iresV3FD0 (iresV) = <default>
  input camNear3FD1 (camNear) = <default>
  input camFar3FD2 (camFar) = <default>
  input refStep3FD3 (refStep) = <default>
  input rayStep3FD4 (rayStep) = <default>
  input lightVsp3FD5 (lightVsp) = <default>
  input phongKa3FD6 (phongKa) = <default>
  input phongKd3FD7 (phongKd) = <default>
  input debug3FD8 (debug) = <default>
  input debugU3FD9 (debugU) = <default>
  input debugV3FDA (debugV) = <default>
  input eps3FDB (eps) = <default>
  global femData:MeshCell[] 0cell_a3FDC
  global real camNearVsp3FDD
  global real camFarVsp3FDE
  global tensor[3] camN3FDF
  global tensor[3] camU3FE0
  global tensor[3] camV3FE1
  global real camVmax3FE2
  global real camUmax3FE3
## functions
  function femData:MeshPos _msh_newtonInverse4281 (tensor[2] pos4282#2, int cellInt4283#2, femData:Mesh mesh4284#12) {
    ENTRY4285:  preds = []
      real _t4286#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn4288#1 = <tensor[2]>[_t4286,_t4286];
      int _t428A#1 = 0;
      int _t428C#1 = 16;
      int[] _t428E#1 = Range(_t428A,_t428C);
    FOREACH4291:  preds = [ASSIGN428F,NEXT44E8]
      foreach (itter4290 in _t428E) on exit goto ASSIGN44ED
        tensor[2] xn4408#3 = phi(xn4288,xn447C)
      int ilit4293#1 = 3;
      int mulRes4294#3 = IMul(cellInt4283,ilit4293);
      int idx4297#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,mulRes4294);
      int ilit4298#4 = 1;
      int addRes4299#1 = IAdd(mulRes4294,ilit4298);
      int idx429A#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4299);
      int ilit429B#4 = 2;
      int addRes429C#1 = IAdd(mulRes4294,ilit429B);
      int idx429D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes429C);
      int mulRes42B0#2 = IMul(ilit429B,idx4297);
      int addRes42B3#1 = IAdd(ilit4298,mulRes42B0);
      real dof_load42B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B0);
      real dof_load42B5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B3);
      int mulRes42B8#2 = IMul(ilit429B,idx429A);
      int addRes42BA#1 = IAdd(ilit4298,mulRes42B8);
      real dof_load42BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B8);
      real dof_load42BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42BA);
      int mulRes42BF#2 = IMul(ilit429B,idx429D);
      int addRes42C1#1 = IAdd(ilit4298,mulRes42BF);
      real dof_load42C2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42BF);
      real dof_load42C3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C1);
      real coeff42E3#8 = -0.1e1;
      real one42E4#15 = 0.1e1;
      real prod42E5#2 = RMul(one42E4,one42E4);
      real basisEval42E6#2 = RMul(coeff42E3,prod42E5);
      real basisEval42E7#5 = RMul(one42E4,prod42E5);
      real basisEval42E8#12 = 0.e0;
      real r42FB#2 = RMul(dof_load42B4,basisEval42E6);
      real r42FE#1 = RMul(dof_load42BB,basisEval42E7);
      real r4301#1 = RMul(dof_load42C2,basisEval42E8);
      real r4302#1 = RAdd(r42FB,r42FE);
      real r4303#3 = RAdd(r4302,r4301);
      real r4307#1 = RMul(dof_load42BB,basisEval42E8);
      real r4309#1 = RMul(dof_load42C2,basisEval42E7);
      real r430A#1 = RAdd(r42FB,r4307);
      real r430B#3 = RAdd(r430A,r4309);
      real r430E#2 = RMul(dof_load42B5,basisEval42E6);
      real r4310#1 = RMul(dof_load42BC,basisEval42E7);
      real r4312#1 = RMul(dof_load42C3,basisEval42E8);
      real r4313#1 = RAdd(r430E,r4310);
      real r4314#3 = RAdd(r4313,r4312);
      real r4316#1 = RMul(dof_load42BC,basisEval42E8);
      real r4317#1 = RMul(dof_load42C3,basisEval42E7);
      real r4318#1 = RAdd(r430E,r4316);
      real r4319#3 = RAdd(r4318,r4317);
      real r4342#1 = RMul(basisEval42E8,r4303);
      real r4345#1 = RMul(coeff42E3,r4314);
      real r4346#2 = RAdd(r4342,r4345);
      real r4348#2 = RMul(basisEval42E8,r430B);
      real r434A#1 = RMul(coeff42E3,r4319);
      real r434B#2 = RAdd(r4348,r434A);
      real r434E#1 = RMul(one42E4,r4303);
      real r434F#1 = RMul(basisEval42E8,r4314);
      real r4350#2 = RAdd(r434E,r434F);
      real r4351#1 = RMul(one42E4,r430B);
      real r4352#2 = RMul(basisEval42E8,r4319);
      real r4353#2 = RAdd(r4351,r4352);
      tensor[2] probe_l_12436C#1 = <tensor[2]>[r4303,r4314];
      real r43C4#1 = RMul(one42E4,r4319);
      real r43C5#1 = RAdd(r4348,r43C4);
      real r43C7#1 = RMul(coeff42E3,r430B);
      real r43C9#1 = RAdd(r43C7,r4352);
      tensor[2] op1_e3_l_1443BE#1 = <tensor[2]>[r43C5,r43C9];
      real r43DA#1 = RMul(basisEval42E8,r4346);
      real r43DD#1 = RMul(coeff42E3,r434B);
      real r43DE#1 = RAdd(r43DA,r43DD);
      real r43E0#1 = RMul(basisEval42E8,r4350);
      real r43E2#1 = RMul(coeff42E3,r4353);
      real r43E3#1 = RAdd(r43E0,r43E2);
      real r43E6#1 = RMul(one42E4,r4346);
      real r43E7#1 = RMul(basisEval42E8,r434B);
      real r43E8#1 = RAdd(r43E6,r43E7);
      real r43E9#1 = RMul(one42E4,r4350);
      real r43EA#1 = RMul(basisEval42E8,r4353);
      real r43EB#1 = RAdd(r43E9,r43EA);
      real op1_e3_l_164404#4 = VDot<2>(probe_l_12436C,op1_e3_l_1443BE);
      real varAcc4409#1 = VIndex<2,0>(xn4408);
      real varAcc440A#1 = VIndex<2,1>(xn4408);
      real prod440E#2 = RMul(varAcc4409,one42E4);
      real prod4410#2 = RMul(one42E4,varAcc440A);
      real mult4413#1 = RMul(coeff42E3,prod4410);
      real mult4414#1 = RMul(coeff42E3,prod440E);
      real sum4415#1 = RAdd(mult4413,mult4414);
      real sum4416#2 = RAdd(basisEval42E7,sum4415);
      real basisEval4418#2 = RMul(one42E4,prod440E);
      real basisEval4419#2 = RMul(one42E4,prod4410);
      real r4431#1 = RMul(dof_load42B4,sum4416);
      real r4434#1 = RMul(dof_load42BB,basisEval4418);
      real r4437#1 = RMul(dof_load42C2,basisEval4419);
      real r4438#1 = RAdd(r4431,r4434);
      real r4439#1 = RAdd(r4438,r4437);
      real r443B#1 = RMul(dof_load42B5,sum4416);
      real r443D#1 = RMul(dof_load42BC,basisEval4418);
      real r443F#1 = RMul(dof_load42C3,basisEval4419);
      real r4440#1 = RAdd(r443B,r443D);
      real r4441#1 = RAdd(r4440,r443F);
      tensor[2] probe_l_17442E#1 = <tensor[2]>[r4439,r4441];
      real r4459#1 = RDiv(r43DE,op1_e3_l_164404);
      real r445B#1 = RDiv(r43E3,op1_e3_l_164404);
      tensor[2] tensor445C#1 = <tensor[2]>[r4459,r445B];
      real r445E#1 = RDiv(r43E8,op1_e3_l_164404);
      real r4460#1 = RDiv(r43EB,op1_e3_l_164404);
      tensor[2] tensor4461#1 = <tensor[2]>[r445E,r4460];
      tensor[2] op1_e3_l_19446E#2 = VSub<2>(probe_l_17442E,pos4282);
      real vdot4473#1 = VDot<2>(tensor445C,op1_e3_l_19446E);
      real vdot4475#1 = VDot<2>(tensor4461,op1_e3_l_19446E);
      tensor[2] op1_e3_l_204471#3 = <tensor[2]>[vdot4473,vdot4475];
      tensor[2] xn447C#4 = VSub<2>(xn4408,op1_e3_l_204471);
      real _t447F#2 = 0.1e-7;
      real _t4481#1 = RMul(_t447F,_t447F);
      real _t44BB#1 = VDot<2>(op1_e3_l_204471,op1_e3_l_204471);
      bool _t44BE#1 = GTE<real>(_t4481,_t44BB);
      if _t44BE then goto ASSIGN44C4 else goto JOIN44E7
    ASSIGN44C4:  preds = [COND44C0]
      real _t44C3#3 = 0.1e-8;
      real _t44C5#1 = RAdd(one42E4,_t44C3);
      tensor[2] _t44C8#1 = <tensor[2]>[one42E4,one42E4];
      real _t44CA#1 = VDot<2>(_t44C8,xn447C);
      bool _t44CD#1 = GT<real>(_t44C5,_t44CA);
      tensor[2] _t44CF#1 = <tensor[2]>[_t44C3,_t44C3];
      tensor[2] _t44D1#2 = VAdd<2>(_t44CF,xn447C);
      real _t44D4#1 = VIndex<2,0>(_t44D1);
      real _t44D6#2 = -0.e0;
      bool _t44D8#1 = GT<real>(_t44D4,_t44D6);
      real _t44DA#1 = VIndex<2,1>(_t44D1);
      bool _t44DC#1 = GT<real>(_t44DA,_t44D6);
      bool _t44DE#1 = BAnd(_t44D8,_t44DC);
      bool _t44E0#1 = BAnd(_t44CD,_t44DE);
      if _t44E0 then goto ASSIGN44E4 else goto ASSIGN44EA
    ASSIGN44E4:  preds = [COND44E2]
      femData:MeshPos _t44E3#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh4284,cellInt4283,xn447C,pos4282);
      return _t44E3
      goto JOIN44E6
    JOIN44E6:  preds = [*RETURN(_t44E3)44E5,*RETURN(_t44E9)44EB]
      goto JOIN44E7
    JOIN44E7:  preds = [*JOIN44E6,COND44C0]
      goto FOREACH4291
    ASSIGN44EA:  preds = [COND44E2]
      femData:MeshPos _t44E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44E9
      goto JOIN44E6
    ASSIGN44ED:  preds = [FOREACH4291]
      femData:MeshPos _t44EC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44EC
}
  function int[2] nextCell45006 (int faceIdx5007#1, int cell5008#1, femData:Mesh mesh5009#1) {
    ENTRY500A:  preds = []
      int _t500B#1 = 6;
      int _t500D#1 = IMul(cell5008,_t500B);
      int _t500F#1 = 2;
      int _t5011#1 = IMul(faceIdx5007,_t500F);
      int _t5013#1 = IAdd(_t500D,_t5011);
      int[2] _t5015#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh5009,_t5013);
      return _t5015
}
## input initialization
  ENTRY3FE4:  preds = []
    real isoval3FE5#1 = 0.2e0;
    globals.isoval3FC9 = isoval3FE5;
    real thick3FE8#1 = 0.7e-1;
    globals.thick3FCA = thick3FE8;
    real _t3FEB#2 = 0.3e1;
    real _t3FED#1 = -0.3e1;
    tensor[3] camEye3FEF#1 = <tensor[3]>[_t3FEB,_t3FED,_t3FEB];
    globals.camEye3FCB = camEye3FEF;
    real _t3FF2#3 = 0.5e0;
    tensor[3] camAt3FF4#1 = <tensor[3]>[_t3FF2,_t3FF2,_t3FF2];
    globals.camAt3FCC = camAt3FF4;
    real _t3FF7#2 = 0.e0;
    real _t3FF9#2 = 0.1e1;
    tensor[3] camUp3FFB#2 = <tensor[3]>[_t3FF7,_t3FF7,_t3FF9];
    globals.camUp3FCD = camUp3FFB;
    real camFOV3FFE#1 = 0.137e2;
    globals.camFOV3FCE = camFOV3FFE;
    int iresU4001#2 = 10;
    globals.iresU3FCF = iresU4001;
    globals.iresV3FD0 = iresU4001;
    real camNear4005#1 = -0.2e1;
    globals.camNear3FD1 = camNear4005;
    real camFar4008#1 = 0.5e1;
    globals.camFar3FD2 = camFar4008;
    globals.refStep3FD3 = _t3FF9;
    real rayStep400C#1 = 0.1e-1;
    globals.rayStep3FD4 = rayStep400C;
    globals.lightVsp3FD5 = camUp3FFB;
    real phongKa4010#1 = 0.1e0;
    globals.phongKa3FD6 = phongKa4010;
    real phongKd4013#1 = 0.9e0;
    globals.phongKd3FD7 = phongKd4013;
    bool debug4016#1 = false;
    globals.debug3FD8 = debug4016;
    int debugU4019#1 = 8;
    globals.debugU3FD9 = debugU4019;
    int debugV401C#1 = 2;
    globals.debugV3FDA = debugV401C;
    real eps401F#1 = 0.1e-7;
    globals.eps3FDB = eps401F;
    return
## global-variable initialization
  ENTRY4023:  preds = []
    femData:Mesh a4024#2 = globals.a3FC8;
    tensor[3] camEye4026#1 = globals.camEye3FCB;
    tensor[3] camAt4028#1 = globals.camAt3FCC;
    tensor[3] camUp402A#3 = globals.camUp3FCD;
    real camFOV402C#1 = globals.camFOV3FCE;
    int iresU402E#1 = globals.iresU3FCF;
    int iresV4030#1 = globals.iresV3FD0;
    real camNear4032#1 = globals.camNear3FD1;
    real camFar4034#1 = globals.camFar3FD2;
    int _t4036#1 = 0;
    int _t4038#1 = 1;
    int _t403A#1 = ExtractFemItem<int,NumCell(Mesh)>(a4024);
    int _t403C#1 = ISub(_t403A,_t4038);
    int[] _t403E#1 = Range(_t4036,_t403C);
    femData:MeshCell[] _t4040#1 = <femData:MeshCell[]>{};
  FOREACH4043:  preds = [ASSIGN4041,NEXT4049]
    foreach (_t4042 in _t403E) on exit goto GASSIGN404A
      femData:MeshCell[] _t4047#2 = phi(_t4040,_t4046)
    femData:MeshCell _t4044#1 = LoadFem<femData:MeshCell>(a4024,_t4042);
    femData:MeshCell[] _t4046#1 = Append<femData:MeshCell>(_t4047,_t4044);
    goto FOREACH4043
  GASSIGN404A:  preds = [FOREACH4043]
    globals.0cell_a3FDC = _t4047;
    tensor[3] op1_e3_l_3404B#9 = VSub<3>(camAt4028,camEye4026);
    real op1_e3_l_5404E#1 = VDot<3>(op1_e3_l_3404B,op1_e3_l_3404B);
    real op1_e3_l_64051#5 = Sqrt(op1_e3_l_5404E);
    real camNearVsp4054#1 = RAdd(camNear4032,op1_e3_l_64051);
    globals.camNearVsp3FDD = camNearVsp4054;
    real camFarVsp4058#1 = RAdd(camFar4034,op1_e3_l_64051);
    globals.camFarVsp3FDE = camFarVsp4058;
    real realLit405D#8 = 0.1e1;
    real op1_e3_l_9405C#6 = RDiv(realLit405D,op1_e3_l_64051);
    tensor[3] camN4061#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_3404B);
    globals.camN3FDF = camN4061;
    real realLit4066#6 = 0.e0;
    real r4067#3 = TensorIndex<tensor[3],[0]>(camUp402A);
    real r4068#3 = RMul(realLit4066,r4067);
    real r4069#3 = TensorIndex<tensor[3],[1]>(camUp402A);
    real r406A#3 = RMul(realLit4066,r4069);
    real r406B#3 = TensorIndex<tensor[3],[2]>(camUp402A);
    real r406C#5 = RMul(realLit4066,r406B);
    real r406D#3 = RAdd(r4068,r406A);
    real r406E#3 = RAdd(r406D,r406C);
    real r4070#1 = RMul(realLit405D,r406B);
    real r4071#1 = RAdd(r406D,r4070);
    real realLit4072#6 = -0.1e1;
    real r4073#1 = RMul(realLit4072,r4069);
    real r4074#1 = RAdd(r4068,r4073);
    real r4075#1 = RAdd(r4074,r406C);
    tensor[3] tensor4076#1 = <tensor[3]>[r406E,r4071,r4075];
    real r4077#1 = RMul(realLit4072,r406B);
    real r4078#1 = RAdd(r406D,r4077);
    real r4079#1 = RMul(realLit405D,r4067);
    real r407A#1 = RAdd(r4079,r406A);
    real r407B#1 = RAdd(r407A,r406C);
    tensor[3] tensor407C#1 = <tensor[3]>[r4078,r406E,r407B];
    real r407D#1 = RMul(realLit405D,r4069);
    real r407E#1 = RAdd(r4068,r407D);
    real r407F#1 = RAdd(r407E,r406C);
    real r4080#1 = RMul(realLit4072,r4067);
    real r4081#1 = RAdd(r4080,r406A);
    real r4082#1 = RAdd(r4081,r406C);
    tensor[3] tensor4083#1 = <tensor[3]>[r407F,r4082,r406E];
    real vdot40A6#1 = VDot<3>(op1_e3_l_3404B,tensor4076);
    real vdot40A8#1 = VDot<3>(op1_e3_l_3404B,tensor407C);
    real vdot40AA#1 = VDot<3>(op1_e3_l_3404B,tensor4083);
    tensor[3] op1_e3_l_1740A4#6 = <tensor[3]>[vdot40A6,vdot40A8,vdot40AA];
    real op1_e3_l_3440B3#1 = VDot<3>(op1_e3_l_1740A4,op1_e3_l_1740A4);
    real r40B7#1 = RMul(op1_e3_l_9405C,op1_e3_l_9405C);
    real op1_e3_l_3540B6#1 = RMul(r40B7,op1_e3_l_3440B3);
    real op1_e3_l_3640BB#1 = Sqrt(op1_e3_l_3540B6);
    tensor[3] op1_e3_l_3740BE#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_1740A4);
    real op1_e3_l_3840C1#2 = RDiv(realLit405D,op1_e3_l_3640BB);
    tensor[3] camU40C6#1 = VScale<3>(op1_e3_l_3840C1,op1_e3_l_3740BE);
    globals.camU3FE0 = camU40C6;
    real r40CC#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_3404B);
    real r40CD#3 = RMul(realLit4066,r40CC);
    real r40CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_3404B);
    real r40CF#3 = RMul(realLit4066,r40CE);
    real r40D0#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_3404B);
    real r40D1#5 = RMul(realLit4066,r40D0);
    real r40D2#3 = RAdd(r40CD,r40CF);
    real r40D3#3 = RAdd(r40D2,r40D1);
    real r40D5#1 = RMul(realLit405D,r40D0);
    real r40D6#1 = RAdd(r40D2,r40D5);
    real r40D8#1 = RMul(realLit4072,r40CE);
    real r40D9#1 = RAdd(r40CD,r40D8);
    real r40DA#1 = RAdd(r40D9,r40D1);
    tensor[3] tensor40DB#1 = <tensor[3]>[r40D3,r40D6,r40DA];
    real r40DC#1 = RMul(realLit4072,r40D0);
    real r40DD#1 = RAdd(r40D2,r40DC);
    real r40DE#1 = RMul(realLit405D,r40CC);
    real r40DF#1 = RAdd(r40DE,r40CF);
    real r40E0#1 = RAdd(r40DF,r40D1);
    tensor[3] tensor40E1#1 = <tensor[3]>[r40DD,r40D3,r40E0];
    real r40E2#1 = RMul(realLit405D,r40CE);
    real r40E3#1 = RAdd(r40CD,r40E2);
    real r40E4#1 = RAdd(r40E3,r40D1);
    real r40E5#1 = RMul(realLit4072,r40CC);
    real r40E6#1 = RAdd(r40E5,r40CF);
    real r40E7#1 = RAdd(r40E6,r40D1);
    tensor[3] tensor40E8#1 = <tensor[3]>[r40E4,r40E7,r40D3];
    real vdot410B#1 = VDot<3>(op1_e3_l_1740A4,tensor40DB);
    real vdot410D#1 = VDot<3>(op1_e3_l_1740A4,tensor40E1);
    real vdot410F#1 = VDot<3>(op1_e3_l_1740A4,tensor40E8);
    tensor[3] op1_e3_l_474109#1 = <tensor[3]>[vdot410B,vdot410D,vdot410F];
    tensor[3] op1_e3_l_504118#3 = VScale<3>(op1_e3_l_9405C,op1_e3_l_474109);
    real r411C#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_504118);
    real r411D#3 = RMul(op1_e3_l_3840C1,op1_e3_l_9405C);
    real r411E#1 = RMul(r411D,r411C);
    real r411F#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_504118);
    real r4120#1 = RMul(r411D,r411F);
    real r4121#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_504118);
    real r4122#1 = RMul(r411D,r4121);
    tensor[3] camV411B#1 = <tensor[3]>[r411E,r4120,r4122];
    globals.camV3FE1 = camV411B;
    real _t412D#1 = 0.314159265358979323846264338327950288e1;
    real _t412F#1 = 0.36e3;
    real op1_e3_l_54131#1 = RMul(camFOV402C,_t412D);
    real op1_e3_l_64134#1 = RDiv(op1_e3_l_54131,_t412F);
    real op1_e3_l_104137#2 = Tan(op1_e3_l_64134);
    real camVmax413A#1 = RMul(op1_e3_l_104137,op1_e3_l_64051);
    globals.camVmax3FE2 = camVmax413A;
    real _t413E#1 = IntToReal(iresU402E);
    real _t4140#1 = IntToReal(iresV4030);
    real r4143#1 = RMul(_t413E,op1_e3_l_104137);
    real op1_e3_l_144142#1 = RMul(r4143,op1_e3_l_64051);
    real camUmax4147#1 = RDiv(op1_e3_l_144142,_t4140);
    globals.camUmax3FE3 = camUmax4147;
    return
## strand
  strand ray (int ui414C#2, int vi414D#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY4169:  preds = []
        femData:Mesh a416A#1 = globals.a3FC8;
        femData:MeshCell[] 0cell_a416C#1 = globals.0cell_a3FDC;
        tensor[3] camEye416E#1 = globals.camEye3FCB;
        int iresU4170#1 = globals.iresU3FCF;
        int iresV4172#1 = globals.iresV3FD0;
        real camNearVsp4174#2 = globals.camNearVsp3FDD;
        real camFarVsp4176#2 = globals.camFarVsp3FDE;
        tensor[3] camN4178#1 = globals.camN3FDF;
        tensor[3] camU417A#1 = globals.camU3FE0;
        tensor[3] camV417C#1 = globals.camV3FE1;
        real camVmax417E#2 = globals.camVmax3FE2;
        real camUmax4180#2 = globals.camUmax3FE3;
        real _t4182#4 = -0.5e0;
        real _t4184#1 = IntToReal(ui414C);
        real _t4186#1 = IntToReal(iresU4170);
        real _t4188#2 = 0.5e0;
        real op1_e3_l_6418A#1 = RSub(_t4186,_t4188);
        real op1_e3_l_7418D#1 = RSub(_t4184,_t4182);
        real op1_e3_l_84190#1 = RSub(op1_e3_l_6418A,_t4182);
        real op1_e3_l_94193#2 = RNeg(camUmax4180);
        real op1_e3_l_104196#1 = RDiv(op1_e3_l_7418D,op1_e3_l_84190);
        real op1_e3_l_114199#1 = RSub(camUmax4180,op1_e3_l_94193);
        real op1_e3_l_13419C#1 = RMul(op1_e3_l_104196,op1_e3_l_114199);
        real rayU419F#2 = RAdd(op1_e3_l_94193,op1_e3_l_13419C);
        real _t41A2#1 = IntToReal(vi414D);
        real _t41A4#1 = IntToReal(iresV4172);
        real op1_e3_l_641A6#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_741A9#1 = RSub(_t41A2,_t4182);
        real op1_e3_l_841AC#1 = RSub(op1_e3_l_641A6,_t4182);
        real op1_e3_l_941AF#2 = RNeg(camVmax417E);
        real op1_e3_l_1041B2#1 = RDiv(op1_e3_l_741A9,op1_e3_l_841AC);
        real op1_e3_l_1141B5#1 = RSub(camVmax417E,op1_e3_l_941AF);
        real op1_e3_l_1341B8#1 = RMul(op1_e3_l_1041B2,op1_e3_l_1141B5);
        real rayV41BB#2 = RAdd(op1_e3_l_941AF,op1_e3_l_1341B8);
        tensor[3] op1_e3_l_3241CD#2 = VScale<3>(rayU419F,camU417A);
        tensor[3] op1_e3_l_3341D0#2 = VScale<3>(rayV41BB,camV417C);
        tensor[3] UV41D3#1 = VAdd<3>(op1_e3_l_3241CD,op1_e3_l_3341D0);
        tensor[3] v41D7#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] rayOrig41D6#3 = VAdd<3>(v41D7,op1_e3_l_3341D0);
        real _t41DB#4 = 0.e0;
        tensor[3] _t41DD#1 = <tensor[3]>[_t41DB,_t41DB,_t41DB];
        tensor[3] rayVec41DF#3 = VAdd<3>(camN4178,_t41DD);
        tensor[3] op1_e3_l_3941E2#1 = VScale<3>(camNearVsp4174,rayVec41DF);
        tensor[3] rayStart41E5#4 = VAdd<3>(rayOrig41D6,op1_e3_l_3941E2);
        real _t41EC#1 = VIndex<3,0>(rayStart41E5);
        real _t41EE#1 = VIndex<3,1>(rayStart41E5);
        tensor[2] rayStartProj41F0#1 = <tensor[2]>[_t41EC,_t41EE];
        tensor[3] op1_e3_l_3941F2#1 = VScale<3>(camFarVsp4176,rayVec41DF);
        tensor[3] rayEnd41F5#2 = VAdd<3>(rayOrig41D6,op1_e3_l_3941F2);
        tensor[3] dpos41FC#3 = VSub<3>(rayEnd41F5,rayStart41E5);
        real _t41FF#1 = VIndex<3,0>(dpos41FC);
        real _t4201#1 = VIndex<3,1>(dpos41FC);
        tensor[2] dposProj4203#1 = <tensor[2]>[_t41FF,_t4201];
        femData:MeshPos[0] _t4205#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t4207#1 = MkDynamic<femData:MeshPos,0>(_t4205);
        real[0] _t4209#1 = <real[0]>{};
        real[] _t420B#1 = MkDynamic<real,0>(_t4209);
        int cellIntersects420D#3 = 0;
        tensor[2][0] _t420F#1 = <tensor[2][0]>{};
        tensor[2][] _t4211#1 = MkDynamic<tensor[2],0>(_t420F);
        tensor[3][0] _t4213#1 = <tensor[3][0]>{};
        tensor[3][] _t4215#1 = MkDynamic<tensor[3],0>(_t4213);
        tensor[2][0] _t4217#1 = <tensor[2][0]>{};
        tensor[2][] _t4219#1 = MkDynamic<tensor[2],0>(_t4217);
        femData:MeshCell[0] _t421B#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t421D#1 = MkDynamic<femData:MeshCell,0>(_t421B);
        int currentCellInt421F#1 = -1;
        femData:MeshCell currentCell4221#1 = Subscript<femData:MeshCell[]>(0cell_a416C,cellIntersects420D);
        femData:MeshPos pos4223#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a416A);
        bool startsInside4225#1 = false;
        self.rayU = rayU419F;
        self.rayV = rayV41BB;
        self.UV = UV41D3;
        self.rayOrig = rayOrig41D6;
        self.rayVec = rayVec41DF;
        self.camNearVsp = camNearVsp4174;
        self.camFarVsp = camFarVsp4176;
        self.rayStart = rayStart41E5;
        self.rayStartProj = rayStartProj41F0;
        self.rayEnd = rayEnd41F5;
        self.dpos = dpos41FC;
        self.dposProj = dposProj4203;
        self.poses = _t4207;
        self.normalizedTimes = _t420B;
        self.cellIntersects = cellIntersects420D;
        self.rayCellInter = _t4211;
        self.spaceInter = _t4215;
        self.refSpaceInter = _t4219;
        self.cellInter = _t421D;
        self.currentCellInt = currentCellInt421F;
        self.rayN = _t41DB;
        self.currentCell = currentCell4221;
        self.steps = cellIntersects420D;
        self.pos = pos4223;
        self.startsInside = startsInside4225;
        self.ui = ui414C;
        self.vi = vi414D;
        return
    end state init
    method start
        ENTRY4243:  preds = []
          femData:MeshCell[] 0cell_a4244#1 = globals.0cell_a3FDC;
          bool debug4246#1 = globals.debug3FD8;
          int debugU4248#1 = globals.debugU3FD9;
          int debugV424A#1 = globals.debugV3FDA;
          tensor[3] rayOrig424C#2 = self.rayOrig;
          tensor[3] rayVec424E#1 = self.rayVec;
          real camNearVsp4250#5 = self.camNearVsp;
          real camFarVsp4252#3 = self.camFarVsp;
          tensor[2] rayStartProj4254#3 = self.rayStartProj;
          tensor[2] dposProj4256#3 = self.dposProj;
          femData:MeshPos[] poses4258#1 = self.poses;
          real[] normalizedTimes425A#1 = self.normalizedTimes;
          int cellIntersects425C#1 = self.cellIntersects;
          tensor[3][] spaceInter425E#1 = self.spaceInter;
          int currentCellInt4260#1 = self.currentCellInt;
          bool startsInside4262#2 = self.startsInside;
          int ui4264#2 = self.ui;
          int vi4266#2 = self.vi;
          bool _t4268#1 = NEQ<int>(ui4264,debugU4248);
          if _t4268 then goto ASSIGN426C else goto ASSIGN4B4B
        ASSIGN426C:  preds = [COND426A]
          bool _t426B#1 = true;
          goto JOIN426F
        JOIN426F:  preds = [ASSIGN426C,ASSIGN4B4B]
          bool _t426D#1 = phi(_t426B,_t426E)
          if _t426D then goto COND4271 else goto JOIN4274
        COND4271:  preds = [COND4270]
          if debug4246 then goto STABILIZE4272 else goto JOIN4273
        STABILIZE4272:  preds = [COND4271]
          stabilize
          goto JOIN4273
        JOIN4273:  preds = [*STABILIZE4272,COND4271]
          goto JOIN4274
        JOIN4274:  preds = [JOIN4273,COND4270]
        FOREACH4276:  preds = [JOIN4274,NEXT4513]
          foreach (c4275 in 0cell_a4244) on exit goto ASSIGN4AE9
            real startTime4AD7#3 = phi(camFarVsp4252,startTime4507)
            bool startsInside4AE7#2 = phi(startsInside4262,startsInside4509)
            int currentCellInt4ADC#6 = phi(currentCellInt4260,currentCellInt450A)
            int cellIntersects4503#8 = phi(cellIntersects425C,cellIntersects450C)
            real[] normalizedTimes44FE#7 = phi(normalizedTimes425A,normalizedTimes450E)
            femData:MeshPos[] poses44FB#7 = phi(poses4258,poses4510)
          string _t4277#1 = "Cell:";
          string _t4279#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t4277,c4275,_t4279);
          int _t427C#4 = ExtractFemItem<int,CellIndex(MeshCell)>(c4275);
          femData:Mesh _t427E#12 = ExtractFem<femData:Mesh,femData:MeshCell>(c4275);
          femData:MeshPos _t4280#2 = _msh_newtonInverse4281 (rayStartProj4254,_t427C,_t427E);
          bool _t44F0#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t4280);
          if _t44F0 then goto ASSIGN44F4 else goto ASSIGN4515
        ASSIGN44F4:  preds = [COND44F2]
          string _t44F3#1 = "pos starts inside\n";
          Print<[string]>(_t44F3);
          tensor[2] refPos44F6#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t4280);
          femData:MeshPos p44F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t427E,_t427C,refPos44F6);
          femData:MeshPos[] poses44FA#1 = Append<femData:MeshPos>(poses44FB,p44F8);
          real[] normalizedTimes44FD#1 = Append<real>(normalizedTimes44FE,camNearVsp4250);
          int _t4500#1 = 1;
          int cellIntersects4502#1 = IAdd(cellIntersects4503,_t4500);
          bool startsInside4505#1 = true;
          goto JOIN4512
        JOIN4512:  preds = [ASSIGN4506,JOIN4AE2]
          real startTime4507#1 = phi(camNearVsp4250,startTime4508)
          bool startsInside4509#1 = phi(startsInside4505,startsInside4262)
          int currentCellInt450A#1 = phi(cellIntersects4503,currentCellInt450B)
          int cellIntersects450C#1 = phi(cellIntersects4502,cellIntersects450D)
          real[] normalizedTimes450E#1 = phi(normalizedTimes44FD,normalizedTimes450F)
          femData:MeshPos[] poses4510#1 = phi(poses44FA,poses4511)
          goto FOREACH4276
        ASSIGN4515:  preds = [COND44F2]
          real _t4514#26 = -0.e0;
          tensor[2] _t4516#2 = <tensor[2]>[_t4514,_t4514];
          real time4518#9 = +inf;
          int face451A#12 = -1;
          real _t451C#61 = 0.1e1;
          real _t451E#34 = 0.e0;
          tensor[2] _t4520#1 = <tensor[2]>[_t451C,_t451E];
          real _t4522#25 = -0.1e1;
          int ilit4527#1 = 3;
          int mulRes4528#3 = IMul(_t427C,ilit4527);
          int idx452B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,mulRes4528);
          int ilit452C#9 = 1;
          int addRes452D#1 = IAdd(mulRes4528,ilit452C);
          int idx452E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452D);
          int ilit452F#8 = 2;
          int addRes4530#1 = IAdd(mulRes4528,ilit452F);
          int idx4531#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes4530);
          int mulRes4544#2 = IMul(ilit452F,idx452B);
          int addRes4547#1 = IAdd(ilit452C,mulRes4544);
          real dof_load4548#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4544);
          real dof_load4549#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4547);
          int mulRes454C#2 = IMul(ilit452F,idx452E);
          int addRes454E#1 = IAdd(ilit452C,mulRes454C);
          real dof_load454F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes454C);
          real dof_load4550#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454E);
          int mulRes4553#2 = IMul(ilit452F,idx4531);
          int addRes4555#1 = IAdd(ilit452C,mulRes4553);
          real dof_load4556#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4553);
          real dof_load4557#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4555);
          real prod4579#4 = RMul(_t451C,_t451C);
          real basisEval457A#2 = RMul(_t4522,prod4579);
          real basisEval457B#5 = RMul(_t451C,prod4579);
          real r458F#2 = RMul(dof_load4548,basisEval457A);
          real r4592#1 = RMul(dof_load454F,basisEval457B);
          real r4595#1 = RMul(dof_load4556,_t451E);
          real r4596#1 = RAdd(r458F,r4592);
          real r4597#3 = RAdd(r4596,r4595);
          real r459B#1 = RMul(dof_load454F,_t451E);
          real r459D#1 = RMul(dof_load4556,basisEval457B);
          real r459E#1 = RAdd(r458F,r459B);
          real r459F#3 = RAdd(r459E,r459D);
          real r45A2#2 = RMul(dof_load4549,basisEval457A);
          real r45A4#1 = RMul(dof_load4550,basisEval457B);
          real r45A6#1 = RMul(dof_load4557,_t451E);
          real r45A7#1 = RAdd(r45A2,r45A4);
          real r45A8#3 = RAdd(r45A7,r45A6);
          real r45AA#1 = RMul(dof_load4550,_t451E);
          real r45AB#1 = RMul(dof_load4557,basisEval457B);
          real r45AC#1 = RAdd(r45A2,r45AA);
          real r45AD#3 = RAdd(r45AC,r45AB);
          real r45D6#1 = RMul(_t451E,r4597);
          real r45D9#1 = RMul(_t4522,r45A8);
          real r45DA#2 = RAdd(r45D6,r45D9);
          real r45DC#2 = RMul(_t451E,r459F);
          real r45DE#1 = RMul(_t4522,r45AD);
          real r45DF#2 = RAdd(r45DC,r45DE);
          real r45E2#1 = RMul(_t451C,r4597);
          real r45E3#1 = RMul(_t451E,r45A8);
          real r45E4#2 = RAdd(r45E2,r45E3);
          real r45E5#1 = RMul(_t451C,r459F);
          real r45E6#2 = RMul(_t451E,r45AD);
          real r45E7#2 = RAdd(r45E5,r45E6);
          tensor[2] probe_l_194600#1 = <tensor[2]>[r4597,r45A8];
          real r4658#1 = RMul(_t451C,r45AD);
          real r4659#1 = RAdd(r45DC,r4658);
          real r465B#1 = RMul(_t4522,r459F);
          real r465D#1 = RAdd(r465B,r45E6);
          tensor[2] op1_e3_l_214652#1 = <tensor[2]>[r4659,r465D];
          real r466E#1 = RMul(_t451E,r45DA);
          real r4671#1 = RMul(_t4522,r45DF);
          real r4672#1 = RAdd(r466E,r4671);
          real r4674#1 = RMul(_t451E,r45E4);
          real r4676#1 = RMul(_t4522,r45E7);
          real r4677#1 = RAdd(r4674,r4676);
          real r467A#1 = RMul(_t451C,r45DA);
          real r467B#1 = RMul(_t451E,r45DF);
          real r467C#1 = RAdd(r467A,r467B);
          real r467D#1 = RMul(_t451C,r45E4);
          real r467E#1 = RMul(_t451E,r45E7);
          real r467F#1 = RAdd(r467D,r467E);
          real op1_e3_l_234698#4 = VDot<2>(probe_l_194600,op1_e3_l_214652);
          real varAcc469C#1 = VIndex<2,0>(_t4516);
          real varAcc469D#1 = VIndex<2,1>(_t4516);
          real prod46A1#2 = RMul(varAcc469C,_t451C);
          real prod46A3#2 = RMul(_t451C,varAcc469D);
          real mult46A6#1 = RMul(_t4522,prod46A3);
          real mult46A7#1 = RMul(_t4522,prod46A1);
          real sum46A8#1 = RAdd(mult46A6,mult46A7);
          real sum46A9#2 = RAdd(basisEval457B,sum46A8);
          real basisEval46AB#2 = RMul(_t451C,prod46A1);
          real basisEval46AC#2 = RMul(_t451C,prod46A3);
          real r46C4#1 = RMul(dof_load4548,sum46A9);
          real r46C7#1 = RMul(dof_load454F,basisEval46AB);
          real r46CA#1 = RMul(dof_load4556,basisEval46AC);
          real r46CB#1 = RAdd(r46C4,r46C7);
          real r46CC#1 = RAdd(r46CB,r46CA);
          real r46CE#1 = RMul(dof_load4549,sum46A9);
          real r46D0#1 = RMul(dof_load4550,basisEval46AB);
          real r46D2#1 = RMul(dof_load4557,basisEval46AC);
          real r46D3#1 = RAdd(r46CE,r46D0);
          real r46D4#1 = RAdd(r46D3,r46D2);
          tensor[2] probe_l_2446C1#1 = <tensor[2]>[r46CC,r46D4];
          real r46EC#1 = RDiv(r4672,op1_e3_l_234698);
          real r46EE#1 = RDiv(r4677,op1_e3_l_234698);
          tensor[2] tensor46EF#2 = <tensor[2]>[r46EC,r46EE];
          real r46F1#1 = RDiv(r467C,op1_e3_l_234698);
          real r46F3#1 = RDiv(r467F,op1_e3_l_234698);
          tensor[2] tensor46F4#2 = <tensor[2]>[r46F1,r46F3];
          tensor[2] op1_e3_l_264701#2 = VSub<2>(rayStartProj4254,probe_l_2446C1);
          real vdot4706#1 = VDot<2>(tensor46EF,op1_e3_l_264701);
          real vdot4708#1 = VDot<2>(tensor46F4,op1_e3_l_264701);
          tensor[2] op1_e3_l_274704#27 = <tensor[2]>[vdot4706,vdot4708];
          real vdot4711#1 = VDot<2>(tensor46EF,dposProj4256);
          real vdot4713#1 = VDot<2>(tensor46F4,dposProj4256);
          tensor[2] op1_e3_l_36470F#16 = <tensor[2]>[vdot4711,vdot4713];
          real r471D#1 = RMul(_t451E,_t4522);
          real r4721#1 = RAdd(r471D,prod4579);
          real r4723#1 = RMul(_t4522,_t4522);
          real r4724#3 = RMul(_t451E,_t451C);
          real r4725#1 = RAdd(r4723,r4724);
          tensor[2] op1_e3_l_37471A#1 = <tensor[2]>[r4721,r4725];
          real op1_e3_l_384733#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37471A);
          real r4738#2 = RDiv(_t451C,op1_e3_l_384733);
          real r473A#2 = RMul(r4738,_t4522);
          real r473C#2 = RMul(r4738,_t451C);
          tensor[2] op1_e3_l_404745#1 = VSub<2>(_t4520,op1_e3_l_274704);
          real r474B#1 = RMul(_t451E,r473A);
          real r474E#1 = RMul(_t451C,r473C);
          real r474F#1 = RAdd(r474B,r474E);
          real r4751#1 = RMul(_t4522,r473A);
          real r4752#1 = RMul(_t451E,r473C);
          real r4753#1 = RAdd(r4751,r4752);
          tensor[2] op1_e3_l_414748#1 = <tensor[2]>[r474F,r4753];
          real _t4761#10 = VDot<2>(op1_e3_l_404745,op1_e3_l_414748);
          real _t4764#3 = -0.1e-15;
          bool _t4766#1 = GTE<real>(_t4761,_t4764);
          bool _t4768#1 = GT<real>(time4518,_t4761);
          real _t476A#1 = Abs<real>(op1_e3_l_384733);
          real _t476D#3 = 0.1e-20;
          bool _t476F#1 = GTE<real>(_t476A,_t476D);
          bool _t4771#1 = BAnd(_t4768,_t476F);
          bool _t4773#4 = BAnd(_t4766,_t4771);
          if _t4773 then goto ASSIGN4777 else goto JOIN47A3
        ASSIGN4777:  preds = [COND4775]
          real _t4776#3 = 0.1e-8;
          real _t4778#1 = RAdd(_t451C,_t4776);
          tensor[2] _t477B#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78477D#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794780#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78477D);
          real _t4783#1 = VDot<2>(_t477B,op1_e3_l_794780);
          bool _t4786#1 = GT<real>(_t4778,_t4783);
          tensor[2] _t4788#1 = <tensor[2]>[_t4776,_t4776];
          tensor[2] v478B#1 = VAdd<2>(_t4788,op1_e3_l_274704);
          tensor[2] _t478A#2 = VAdd<2>(v478B,op1_e3_l_78477D);
          real _t478F#1 = VIndex<2,0>(_t478A);
          bool _t4791#1 = GT<real>(_t478F,_t4514);
          real _t4793#1 = VIndex<2,1>(_t478A);
          bool _t4795#1 = GT<real>(_t4793,_t4514);
          bool _t4797#1 = BAnd(_t4791,_t4795);
          bool _t4799#1 = BAnd(_t4786,_t4797);
          if _t4799 then goto ASSIGN479D else goto JOIN47A0
        ASSIGN479D:  preds = [COND479B]
          int face479C#1 = 0;
          goto JOIN47A0
        JOIN47A0:  preds = [ASSIGN479D,COND479B]
          int face479E#1 = phi(face479C,face451A)
          real time479F#1 = phi(_t4761,time4518)
          goto JOIN47A3
        JOIN47A3:  preds = [JOIN47A0,COND4775]
          int face47A1#2 = phi(face479E,face451A)
          real time47A2#3 = phi(time479F,time4518)
          tensor[2] _t47A4#1 = <tensor[2]>[_t451E,_t451E];
          real r47AB#2 = RMul(_t451E,_t451E);
          real r47AF#1 = RAdd(r47AB,prod4579);
          real r47B1#1 = RMul(_t4522,_t451E);
          real r47B3#1 = RAdd(r47B1,r4724);
          tensor[2] op1_e3_l_3747A8#1 = <tensor[2]>[r47AF,r47B3];
          real op1_e3_l_3847C1#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_3747A8);
          real r47C6#2 = RDiv(_t451C,op1_e3_l_3847C1);
          real r47C8#2 = RMul(r47C6,_t451E);
          real r47CA#2 = RMul(r47C6,_t451C);
          tensor[2] op1_e3_l_4047D3#2 = VSub<2>(_t47A4,op1_e3_l_274704);
          real r47D9#1 = RMul(_t451E,r47C8);
          real r47DC#1 = RMul(_t451C,r47CA);
          real r47DD#1 = RAdd(r47D9,r47DC);
          real r47DF#1 = RMul(_t4522,r47C8);
          real r47E0#1 = RMul(_t451E,r47CA);
          real r47E1#1 = RAdd(r47DF,r47E0);
          tensor[2] op1_e3_l_4147D6#1 = <tensor[2]>[r47DD,r47E1];
          real _t47EF#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_4147D6);
          bool _t47F2#4 = GTE<real>(_t47EF,_t4764);
          bool _t47F4#1 = GT<real>(time47A2,_t47EF);
          real _t47F6#1 = Abs<real>(op1_e3_l_3847C1);
          bool _t47F9#4 = GTE<real>(_t47F6,_t476D);
          bool _t47FB#1 = BAnd(_t47F4,_t47F9);
          bool _t47FD#1 = BAnd(_t47F2,_t47FB);
          if _t47FD then goto ASSIGN4801 else goto JOIN482D
        ASSIGN4801:  preds = [COND47FF]
          real _t4800#3 = 0.1e-8;
          real _t4802#1 = RAdd(_t451C,_t4800);
          tensor[2] _t4805#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784807#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79480A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784807);
          real _t480D#1 = VDot<2>(_t4805,op1_e3_l_79480A);
          bool _t4810#1 = GT<real>(_t4802,_t480D);
          tensor[2] _t4812#1 = <tensor[2]>[_t4800,_t4800];
          tensor[2] v4815#1 = VAdd<2>(_t4812,op1_e3_l_274704);
          tensor[2] _t4814#2 = VAdd<2>(v4815,op1_e3_l_784807);
          real _t4819#1 = VIndex<2,0>(_t4814);
          bool _t481B#1 = GT<real>(_t4819,_t4514);
          real _t481D#1 = VIndex<2,1>(_t4814);
          bool _t481F#1 = GT<real>(_t481D,_t4514);
          bool _t4821#1 = BAnd(_t481B,_t481F);
          bool _t4823#1 = BAnd(_t4810,_t4821);
          if _t4823 then goto JOIN482A else goto JOIN482A
        JOIN482A:  preds = [COND4825,COND4825]
          int face4828#1 = phi(ilit452C,face47A1)
          real time4829#1 = phi(_t47EF,time47A2)
          goto JOIN482D
        JOIN482D:  preds = [JOIN482A,COND47FF]
          int face482B#2 = phi(face4828,face47A1)
          real time482C#3 = phi(time4829,time47A2)
          real r4834#1 = RMul(_t451C,_t451E);
          real r4835#1 = RAdd(r4724,r4834);
          real r4837#1 = RMul(_t4522,_t451C);
          real r4839#1 = RAdd(r4837,r47AB);
          tensor[2] op1_e3_l_37482E#1 = <tensor[2]>[r4835,r4839];
          real op1_e3_l_384847#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37482E);
          real r484C#2 = RDiv(_t451C,op1_e3_l_384847);
          real r484E#2 = RMul(r484C,_t451C);
          real r4850#2 = RMul(r484C,_t451E);
          real r485C#1 = RMul(_t451E,r484E);
          real r485F#1 = RMul(_t451C,r4850);
          real r4860#1 = RAdd(r485C,r485F);
          real r4862#1 = RMul(_t4522,r484E);
          real r4863#1 = RMul(_t451E,r4850);
          real r4864#1 = RAdd(r4862,r4863);
          tensor[2] op1_e3_l_414859#1 = <tensor[2]>[r4860,r4864];
          real _t4872#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_414859);
          bool _t4875#4 = GTE<real>(_t4872,_t4764);
          bool _t4877#1 = GT<real>(time482C,_t4872);
          real _t4879#1 = Abs<real>(op1_e3_l_384847);
          bool _t487C#4 = GTE<real>(_t4879,_t476D);
          bool _t487E#1 = BAnd(_t4877,_t487C);
          bool _t4880#1 = BAnd(_t4875,_t487E);
          if _t4880 then goto ASSIGN4884 else goto JOIN48B0
        ASSIGN4884:  preds = [COND4882]
          real _t4883#3 = 0.1e-8;
          real _t4885#1 = RAdd(_t451C,_t4883);
          tensor[2] _t4888#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78488A#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79488D#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78488A);
          real _t4890#1 = VDot<2>(_t4888,op1_e3_l_79488D);
          bool _t4893#1 = GT<real>(_t4885,_t4890);
          tensor[2] _t4895#1 = <tensor[2]>[_t4883,_t4883];
          tensor[2] v4898#1 = VAdd<2>(_t4895,op1_e3_l_274704);
          tensor[2] _t4897#2 = VAdd<2>(v4898,op1_e3_l_78488A);
          real _t489C#1 = VIndex<2,0>(_t4897);
          bool _t489E#1 = GT<real>(_t489C,_t4514);
          real _t48A0#1 = VIndex<2,1>(_t4897);
          bool _t48A2#1 = GT<real>(_t48A0,_t4514);
          bool _t48A4#1 = BAnd(_t489E,_t48A2);
          bool _t48A6#1 = BAnd(_t4893,_t48A4);
          if _t48A6 then goto JOIN48AD else goto JOIN48AD
        JOIN48AD:  preds = [COND48A8,COND48A8]
          int face48AB#1 = phi(ilit452F,face482B)
          real time48AC#1 = phi(_t4872,time482C)
          goto JOIN48B0
        JOIN48B0:  preds = [JOIN48AD,COND4882]
          int face48AE#2 = phi(face48AB,face482B)
          real time48AF#1 = phi(time48AC,time482C)
          bool _t48B1#1 = NEQ<int>(face48AE,face451A);
          if _t48B1 then goto ASSIGN48B5 else goto ASSIGN4AE6
        ASSIGN48B5:  preds = [COND48B3]
          real _t48B4#1 = Max<real>(time48AF,_t451E);
          real _t48B6#1 = IntToReal(face48AE);
          tensor[2] _t48B8#1 = <tensor[2]>[_t48B4,_t48B6];
          goto JOIN48BC
        JOIN48BC:  preds = [ASSIGN48B9,ASSIGN4AE6]
          tensor[2] _t48BA#1 = phi(_t48B8,_t48BB)
          real newTime48BD#2 = VIndex<2,0>(_t48BA);
          bool _t48BF#1 = GTE<real>(newTime48BD,_t451E);
          if _t48BF then goto COND48C2 else goto JOIN4AE2
        COND48C2:  preds = [COND48C1]
          if _t4773 then goto ASSIGN48C4 else goto JOIN48F0
        ASSIGN48C4:  preds = [COND48C2]
          real _t48C3#3 = 0.1e-8;
          real _t48C5#1 = RAdd(_t451C,_t48C3);
          tensor[2] _t48C8#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848CA#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7948CD#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848CA);
          real _t48D0#1 = VDot<2>(_t48C8,op1_e3_l_7948CD);
          bool _t48D3#1 = GT<real>(_t48C5,_t48D0);
          tensor[2] _t48D5#1 = <tensor[2]>[_t48C3,_t48C3];
          tensor[2] v48D8#1 = VAdd<2>(_t48D5,op1_e3_l_274704);
          tensor[2] _t48D7#2 = VAdd<2>(v48D8,op1_e3_l_7848CA);
          real _t48DC#1 = VIndex<2,0>(_t48D7);
          bool _t48DE#1 = GT<real>(_t48DC,_t4514);
          real _t48E0#1 = VIndex<2,1>(_t48D7);
          bool _t48E2#1 = GT<real>(_t48E0,_t4514);
          bool _t48E4#1 = BAnd(_t48DE,_t48E2);
          bool _t48E6#1 = BAnd(_t48D3,_t48E4);
          if _t48E6 then goto ASSIGN48EA else goto JOIN48ED
        ASSIGN48EA:  preds = [COND48E8]
          int face48E9#1 = 0;
          goto JOIN48ED
        JOIN48ED:  preds = [ASSIGN48EA,COND48E8]
          int face48EB#1 = phi(face48E9,face451A)
          real time48EC#1 = phi(_t4761,time4518)
          goto JOIN48F0
        JOIN48F0:  preds = [JOIN48ED,COND48C2]
          int face48EE#2 = phi(face48EB,face451A)
          real time48EF#3 = phi(time48EC,time4518)
          bool _t48F1#1 = GT<real>(time48EF,_t47EF);
          bool _t48F3#1 = BAnd(_t48F1,_t47F9);
          bool _t48F5#1 = BAnd(_t47F2,_t48F3);
          if _t48F5 then goto ASSIGN48F9 else goto JOIN4925
        ASSIGN48F9:  preds = [COND48F7]
          real _t48F8#3 = 0.1e-8;
          real _t48FA#1 = RAdd(_t451C,_t48F8);
          tensor[2] _t48FD#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848FF#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794902#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848FF);
          real _t4905#1 = VDot<2>(_t48FD,op1_e3_l_794902);
          bool _t4908#1 = GT<real>(_t48FA,_t4905);
          tensor[2] _t490A#1 = <tensor[2]>[_t48F8,_t48F8];
          tensor[2] v490D#1 = VAdd<2>(_t490A,op1_e3_l_274704);
          tensor[2] _t490C#2 = VAdd<2>(v490D,op1_e3_l_7848FF);
          real _t4911#1 = VIndex<2,0>(_t490C);
          bool _t4913#1 = GT<real>(_t4911,_t4514);
          real _t4915#1 = VIndex<2,1>(_t490C);
          bool _t4917#1 = GT<real>(_t4915,_t4514);
          bool _t4919#1 = BAnd(_t4913,_t4917);
          bool _t491B#1 = BAnd(_t4908,_t4919);
          if _t491B then goto JOIN4922 else goto JOIN4922
        JOIN4922:  preds = [COND491D,COND491D]
          int face4920#1 = phi(ilit452C,face48EE)
          real time4921#1 = phi(_t47EF,time48EF)
          goto JOIN4925
        JOIN4925:  preds = [JOIN4922,COND48F7]
          int face4923#2 = phi(face4920,face48EE)
          real time4924#3 = phi(time4921,time48EF)
          bool _t4926#1 = GT<real>(time4924,_t4872);
          bool _t4928#1 = BAnd(_t4926,_t487C);
          bool _t492A#1 = BAnd(_t4875,_t4928);
          if _t492A then goto ASSIGN492E else goto JOIN495A
        ASSIGN492E:  preds = [COND492C]
          real _t492D#3 = 0.1e-8;
          real _t492F#1 = RAdd(_t451C,_t492D);
          tensor[2] _t4932#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784934#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794937#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784934);
          real _t493A#1 = VDot<2>(_t4932,op1_e3_l_794937);
          bool _t493D#1 = GT<real>(_t492F,_t493A);
          tensor[2] _t493F#1 = <tensor[2]>[_t492D,_t492D];
          tensor[2] v4942#1 = VAdd<2>(_t493F,op1_e3_l_274704);
          tensor[2] _t4941#2 = VAdd<2>(v4942,op1_e3_l_784934);
          real _t4946#1 = VIndex<2,0>(_t4941);
          bool _t4948#1 = GT<real>(_t4946,_t4514);
          real _t494A#1 = VIndex<2,1>(_t4941);
          bool _t494C#1 = GT<real>(_t494A,_t4514);
          bool _t494E#1 = BAnd(_t4948,_t494C);
          bool _t4950#1 = BAnd(_t493D,_t494E);
          if _t4950 then goto JOIN4957 else goto JOIN4957
        JOIN4957:  preds = [COND4952,COND4952]
          int face4955#1 = phi(ilit452F,face4923)
          real time4956#1 = phi(_t4872,time4924)
          goto JOIN495A
        JOIN495A:  preds = [JOIN4957,COND492C]
          int face4958#2 = phi(face4955,face4923)
          real time4959#1 = phi(time4956,time4924)
          bool _t495B#1 = NEQ<int>(face4958,face451A);
          if _t495B then goto ASSIGN495F else goto ASSIGN4AE5
        ASSIGN495F:  preds = [COND495D]
          real _t495E#1 = Max<real>(time4959,_t451E);
          real _t4960#1 = IntToReal(face4958);
          tensor[2] _t4962#1 = <tensor[2]>[_t495E,_t4960];
          goto JOIN4966
        JOIN4966:  preds = [ASSIGN4963,ASSIGN4AE5]
          tensor[2] _t4964#1 = phi(_t4962,_t4965)
          real _t4967#1 = VIndex<2,0>(_t4964);
          tensor[2] op1_e3_l_354969#1 = VScale<2>(_t4967,op1_e3_l_36470F);
          tensor[2] _t496C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_354969);
          if _t4773 then goto ASSIGN4971 else goto JOIN499D
        ASSIGN4971:  preds = [COND496F]
          real _t4970#3 = 0.1e-8;
          real _t4972#1 = RAdd(_t451C,_t4970);
          tensor[2] _t4975#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784977#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79497A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784977);
          real _t497D#1 = VDot<2>(_t4975,op1_e3_l_79497A);
          bool _t4980#1 = GT<real>(_t4972,_t497D);
          tensor[2] _t4982#1 = <tensor[2]>[_t4970,_t4970];
          tensor[2] v4985#1 = VAdd<2>(_t4982,op1_e3_l_274704);
          tensor[2] _t4984#2 = VAdd<2>(v4985,op1_e3_l_784977);
          real _t4989#1 = VIndex<2,0>(_t4984);
          bool _t498B#1 = GT<real>(_t4989,_t4514);
          real _t498D#1 = VIndex<2,1>(_t4984);
          bool _t498F#1 = GT<real>(_t498D,_t4514);
          bool _t4991#1 = BAnd(_t498B,_t498F);
          bool _t4993#1 = BAnd(_t4980,_t4991);
          if _t4993 then goto ASSIGN4997 else goto JOIN499A
        ASSIGN4997:  preds = [COND4995]
          int face4996#1 = 0;
          goto JOIN499A
        JOIN499A:  preds = [ASSIGN4997,COND4995]
          int face4998#1 = phi(face4996,face451A)
          real time4999#1 = phi(_t4761,time4518)
          goto JOIN499D
        JOIN499D:  preds = [JOIN499A,COND496F]
          int face499B#2 = phi(face4998,face451A)
          real time499C#3 = phi(time4999,time4518)
          bool _t499E#1 = GT<real>(time499C,_t47EF);
          bool _t49A0#1 = BAnd(_t499E,_t47F9);
          bool _t49A2#1 = BAnd(_t47F2,_t49A0);
          if _t49A2 then goto ASSIGN49A6 else goto JOIN49D2
        ASSIGN49A6:  preds = [COND49A4]
          real _t49A5#3 = 0.1e-8;
          real _t49A7#1 = RAdd(_t451C,_t49A5);
          tensor[2] _t49AA#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849AC#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949AF#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849AC);
          real _t49B2#1 = VDot<2>(_t49AA,op1_e3_l_7949AF);
          bool _t49B5#1 = GT<real>(_t49A7,_t49B2);
          tensor[2] _t49B7#1 = <tensor[2]>[_t49A5,_t49A5];
          tensor[2] v49BA#1 = VAdd<2>(_t49B7,op1_e3_l_274704);
          tensor[2] _t49B9#2 = VAdd<2>(v49BA,op1_e3_l_7849AC);
          real _t49BE#1 = VIndex<2,0>(_t49B9);
          bool _t49C0#1 = GT<real>(_t49BE,_t4514);
          real _t49C2#1 = VIndex<2,1>(_t49B9);
          bool _t49C4#1 = GT<real>(_t49C2,_t4514);
          bool _t49C6#1 = BAnd(_t49C0,_t49C4);
          bool _t49C8#1 = BAnd(_t49B5,_t49C6);
          if _t49C8 then goto JOIN49CF else goto JOIN49CF
        JOIN49CF:  preds = [COND49CA,COND49CA]
          int face49CD#1 = phi(ilit452C,face499B)
          real time49CE#1 = phi(_t47EF,time499C)
          goto JOIN49D2
        JOIN49D2:  preds = [JOIN49CF,COND49A4]
          int face49D0#2 = phi(face49CD,face499B)
          real time49D1#3 = phi(time49CE,time499C)
          bool _t49D3#1 = GT<real>(time49D1,_t4872);
          bool _t49D5#1 = BAnd(_t49D3,_t487C);
          bool _t49D7#1 = BAnd(_t4875,_t49D5);
          if _t49D7 then goto ASSIGN49DB else goto JOIN4A07
        ASSIGN49DB:  preds = [COND49D9]
          real _t49DA#3 = 0.1e-8;
          real _t49DC#1 = RAdd(_t451C,_t49DA);
          tensor[2] _t49DF#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849E1#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949E4#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849E1);
          real _t49E7#1 = VDot<2>(_t49DF,op1_e3_l_7949E4);
          bool _t49EA#1 = GT<real>(_t49DC,_t49E7);
          tensor[2] _t49EC#1 = <tensor[2]>[_t49DA,_t49DA];
          tensor[2] v49EF#1 = VAdd<2>(_t49EC,op1_e3_l_274704);
          tensor[2] _t49EE#2 = VAdd<2>(v49EF,op1_e3_l_7849E1);
          real _t49F3#1 = VIndex<2,0>(_t49EE);
          bool _t49F5#1 = GT<real>(_t49F3,_t4514);
          real _t49F7#1 = VIndex<2,1>(_t49EE);
          bool _t49F9#1 = GT<real>(_t49F7,_t4514);
          bool _t49FB#1 = BAnd(_t49F5,_t49F9);
          bool _t49FD#1 = BAnd(_t49EA,_t49FB);
          if _t49FD then goto JOIN4A04 else goto JOIN4A04
        JOIN4A04:  preds = [COND49FF,COND49FF]
          int face4A02#1 = phi(ilit452F,face49D0)
          real time4A03#1 = phi(_t4872,time49D1)
          goto JOIN4A07
        JOIN4A07:  preds = [JOIN4A04,COND49D9]
          int face4A05#2 = phi(face4A02,face49D0)
          real time4A06#1 = phi(time4A03,time49D1)
          bool _t4A08#1 = NEQ<int>(face4A05,face451A);
          if _t4A08 then goto ASSIGN4A0C else goto ASSIGN4AE4
        ASSIGN4A0C:  preds = [COND4A0A]
          real _t4A0B#1 = Max<real>(time4A06,_t451E);
          real _t4A0D#1 = IntToReal(face4A05);
          tensor[2] _t4A0F#1 = <tensor[2]>[_t4A0B,_t4A0D];
          goto JOIN4A13
        JOIN4A13:  preds = [ASSIGN4A10,ASSIGN4AE4]
          tensor[2] _t4A11#1 = phi(_t4A0F,_t4A12)
          real _t4A14#1 = VIndex<2,0>(_t4A11);
          tensor[2] op1_e3_l_34A16#1 = VScale<2>(_t4A14,dposProj4256);
          tensor[2] _t4A19#1 = VAdd<2>(rayStartProj4254,op1_e3_l_34A16);
          if _t4773 then goto ASSIGN4A1E else goto JOIN4A4A
        ASSIGN4A1E:  preds = [COND4A1C]
          real _t4A1D#3 = 0.1e-8;
          real _t4A1F#1 = RAdd(_t451C,_t4A1D);
          tensor[2] _t4A22#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A24#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A27#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A24);
          real _t4A2A#1 = VDot<2>(_t4A22,op1_e3_l_794A27);
          bool _t4A2D#1 = GT<real>(_t4A1F,_t4A2A);
          tensor[2] _t4A2F#1 = <tensor[2]>[_t4A1D,_t4A1D];
          tensor[2] v4A32#1 = VAdd<2>(_t4A2F,op1_e3_l_274704);
          tensor[2] _t4A31#2 = VAdd<2>(v4A32,op1_e3_l_784A24);
          real _t4A36#1 = VIndex<2,0>(_t4A31);
          bool _t4A38#1 = GT<real>(_t4A36,_t4514);
          real _t4A3A#1 = VIndex<2,1>(_t4A31);
          bool _t4A3C#1 = GT<real>(_t4A3A,_t4514);
          bool _t4A3E#1 = BAnd(_t4A38,_t4A3C);
          bool _t4A40#1 = BAnd(_t4A2D,_t4A3E);
          if _t4A40 then goto ASSIGN4A44 else goto JOIN4A47
        ASSIGN4A44:  preds = [COND4A42]
          int face4A43#1 = 0;
          goto JOIN4A47
        JOIN4A47:  preds = [ASSIGN4A44,COND4A42]
          int face4A45#1 = phi(face4A43,face451A)
          real time4A46#1 = phi(_t4761,time4518)
          goto JOIN4A4A
        JOIN4A4A:  preds = [JOIN4A47,COND4A1C]
          int face4A48#2 = phi(face4A45,face451A)
          real time4A49#3 = phi(time4A46,time4518)
          bool _t4A4B#1 = GT<real>(time4A49,_t47EF);
          bool _t4A4D#1 = BAnd(_t4A4B,_t47F9);
          bool _t4A4F#1 = BAnd(_t47F2,_t4A4D);
          if _t4A4F then goto ASSIGN4A53 else goto JOIN4A7F
        ASSIGN4A53:  preds = [COND4A51]
          real _t4A52#3 = 0.1e-8;
          real _t4A54#1 = RAdd(_t451C,_t4A52);
          tensor[2] _t4A57#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A59#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A5C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A59);
          real _t4A5F#1 = VDot<2>(_t4A57,op1_e3_l_794A5C);
          bool _t4A62#1 = GT<real>(_t4A54,_t4A5F);
          tensor[2] _t4A64#1 = <tensor[2]>[_t4A52,_t4A52];
          tensor[2] v4A67#1 = VAdd<2>(_t4A64,op1_e3_l_274704);
          tensor[2] _t4A66#2 = VAdd<2>(v4A67,op1_e3_l_784A59);
          real _t4A6B#1 = VIndex<2,0>(_t4A66);
          bool _t4A6D#1 = GT<real>(_t4A6B,_t4514);
          real _t4A6F#1 = VIndex<2,1>(_t4A66);
          bool _t4A71#1 = GT<real>(_t4A6F,_t4514);
          bool _t4A73#1 = BAnd(_t4A6D,_t4A71);
          bool _t4A75#1 = BAnd(_t4A62,_t4A73);
          if _t4A75 then goto JOIN4A7C else goto JOIN4A7C
        JOIN4A7C:  preds = [COND4A77,COND4A77]
          int face4A7A#1 = phi(ilit452C,face4A48)
          real time4A7B#1 = phi(_t47EF,time4A49)
          goto JOIN4A7F
        JOIN4A7F:  preds = [JOIN4A7C,COND4A51]
          int face4A7D#2 = phi(face4A7A,face4A48)
          real time4A7E#3 = phi(time4A7B,time4A49)
          bool _t4A80#1 = GT<real>(time4A7E,_t4872);
          bool _t4A82#1 = BAnd(_t4A80,_t487C);
          bool _t4A84#1 = BAnd(_t4875,_t4A82);
          if _t4A84 then goto ASSIGN4A88 else goto JOIN4AB4
        ASSIGN4A88:  preds = [COND4A86]
          real _t4A87#3 = 0.1e-8;
          real _t4A89#1 = RAdd(_t451C,_t4A87);
          tensor[2] _t4A8C#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A8E#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A91#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A8E);
          real _t4A94#1 = VDot<2>(_t4A8C,op1_e3_l_794A91);
          bool _t4A97#1 = GT<real>(_t4A89,_t4A94);
          tensor[2] _t4A99#1 = <tensor[2]>[_t4A87,_t4A87];
          tensor[2] v4A9C#1 = VAdd<2>(_t4A99,op1_e3_l_274704);
          tensor[2] _t4A9B#2 = VAdd<2>(v4A9C,op1_e3_l_784A8E);
          real _t4AA0#1 = VIndex<2,0>(_t4A9B);
          bool _t4AA2#1 = GT<real>(_t4AA0,_t4514);
          real _t4AA4#1 = VIndex<2,1>(_t4A9B);
          bool _t4AA6#1 = GT<real>(_t4AA4,_t4514);
          bool _t4AA8#1 = BAnd(_t4AA2,_t4AA6);
          bool _t4AAA#1 = BAnd(_t4A97,_t4AA8);
          if _t4AAA then goto JOIN4AB1 else goto JOIN4AB1
        JOIN4AB1:  preds = [COND4AAC,COND4AAC]
          int face4AAF#1 = phi(ilit452F,face4A7D)
          real time4AB0#1 = phi(_t4872,time4A7E)
          goto JOIN4AB4
        JOIN4AB4:  preds = [JOIN4AB1,COND4A86]
          int face4AB2#2 = phi(face4AAF,face4A7D)
          real time4AB3#1 = phi(time4AB0,time4A7E)
          bool _t4AB5#1 = NEQ<int>(face4AB2,face451A);
          if _t4AB5 then goto ASSIGN4AB9 else goto ASSIGN4AE3
        ASSIGN4AB9:  preds = [COND4AB7]
          real _t4AB8#1 = Max<real>(time4AB3,_t451E);
          real _t4ABA#1 = IntToReal(face4AB2);
          tensor[2] _t4ABC#1 = <tensor[2]>[_t4AB8,_t4ABA];
          goto JOIN4AC0
        JOIN4AC0:  preds = [ASSIGN4ABD,ASSIGN4AE3]
          tensor[2] _t4ABE#1 = phi(_t4ABC,_t4ABF)
          real _t4AC1#1 = VIndex<2,1>(_t4ABE);
          real t4AC3#1 = Floor<1>(_t4AC1);
          int _t4AC5#1 = RealToInt<1>(t4AC3);
          femData:MeshPos p4AC7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t427E,_t427C,_t496C,_t4A19,_t4AC5);
          real op1_e3_l_34AC9#1 = RSub(camFarVsp4252,camNearVsp4250);
          real op1_e3_l_44ACC#1 = RMul(newTime48BD,op1_e3_l_34AC9);
          real newRayTime4ACF#3 = RAdd(camNearVsp4250,op1_e3_l_44ACC);
          real[] normalizedTimes4AD2#1 = Append<real>(normalizedTimes44FE,newRayTime4ACF);
          femData:MeshPos[] poses4AD4#1 = Append<femData:MeshPos>(poses44FB,p4AC7);
          bool _t4AD6#1 = GT<real>(startTime4AD7,newRayTime4ACF);
          if _t4AD6 then goto JOIN4ADD else goto JOIN4ADD
        JOIN4ADD:  preds = [COND4AD9,COND4AD9]
          real startTime4ADA#1 = phi(newRayTime4ACF,startTime4AD7)
          int currentCellInt4ADB#1 = phi(cellIntersects4503,currentCellInt4ADC)
          int cellIntersects4AE0#1 = IAdd(cellIntersects4503,ilit452C);
          goto JOIN4AE2
        JOIN4AE2:  preds = [ASSIGN53D6,COND48C1]
          real startTime4508#1 = phi(startTime4ADA,startTime4AD7)
          int currentCellInt450B#1 = phi(currentCellInt4ADB,currentCellInt4ADC)
          int cellIntersects450D#1 = phi(cellIntersects4AE0,cellIntersects4503)
          real[] normalizedTimes450F#1 = phi(normalizedTimes4AD2,normalizedTimes44FE)
          femData:MeshPos[] poses4511#1 = phi(poses4AD4,poses44FB)
          goto JOIN4512
        ASSIGN4AE3:  preds = [COND4AB7]
          tensor[2] _t4ABF#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4AC0
        ASSIGN4AE4:  preds = [COND4A0A]
          tensor[2] _t4A12#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4A13
        ASSIGN4AE5:  preds = [COND495D]
          tensor[2] _t4965#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4966
        ASSIGN4AE6:  preds = [COND48B3]
          tensor[2] _t48BB#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN48BC
        ASSIGN4AE9:  preds = [FOREACH4276]
          int _t4AE8#1 = 0;
          bool _t4AEA#1 = NEQ<int>(cellIntersects4503,_t4AE8);
          if _t4AEA then goto ASSIGN4AEE else goto ASSIGN4B3C
        ASSIGN4AEE:  preds = [COND4AEC]
          femData:MeshPos pos4AED#4 = Subscript<femData:MeshPos[]>(poses44FB,currentCellInt4ADC);
          real rayN4AEF#2 = Subscript<real[]>(normalizedTimes44FE,currentCellInt4ADC);
          tensor[3] op1_e3_l_34AF1#1 = VScale<3>(rayN4AEF,rayVec424E);
          tensor[3] _t4AF4#1 = VAdd<3>(rayOrig424C,op1_e3_l_34AF1);
          tensor[3][2] _t4AF7#1 = <tensor[3][2]>{rayOrig424C,_t4AF4};
          tensor[3][] _t4AF9#1 = MkDynamic<tensor[3],2>(_t4AF7);
          tensor[3][] spaceInter4AFB#1 = Concat<tensor[3]>(spaceInter425E,_t4AF9);
          tensor[2] _t4AFD#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4AED);
          tensor[2][1] _t4AFF#1 = <tensor[2][1]>{_t4AFD};
          tensor[2][] _t4B01#1 = MkDynamic<tensor[2],1>(_t4AFF);
          femData:Mesh _t4B03#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4AED);
          int _t4B05#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4AED);
          femData:MeshCell currentCell4B07#2 = LoadFem<femData:MeshCell>(_t4B03,_t4B05);
          femData:MeshCell[1] _t4B09#1 = <femData:MeshCell[1]>{currentCell4B07};
          femData:MeshCell[] _t4B0B#1 = MkDynamic<femData:MeshCell,1>(_t4B09);
          string _t4B0D#1 = "In the interval:";
          tensor[2] _t4B0F#1 = <tensor[2]>[camNearVsp4250,camFarVsp4252];
          string _t4B11#3 = "\n";
          Print<[string,tensor[2],string]>(_t4B0D,_t4B0F,_t4B11);
          string _t4B14#1 = "Possible times:";
          Print<[string,real[],string]>(_t4B14,normalizedTimes44FE,_t4B11);
          string _t4B17#1 = "cells:";
          femData:MeshCell[] accum4B19#1 = <femData:MeshCell[]>{};
        FOREACH4B1C:  preds = [ASSIGN4B1A,NEXT4B26]
          foreach (p4B1B in poses44FB) on exit goto MASSIGN4B27
            femData:MeshCell[] accum4B24#2 = phi(accum4B19,accum4B23)
          femData:Mesh _t4B1D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p4B1B);
          int _t4B1F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p4B1B);
          femData:MeshCell _t4B21#1 = LoadFem<femData:MeshCell>(_t4B1D,_t4B1F);
          femData:MeshCell[] accum4B23#1 = Append<femData:MeshCell>(accum4B24,_t4B21);
          goto FOREACH4B1C
        MASSIGN4B27:  preds = [FOREACH4B1C]
          Print<[string,femData:MeshCell[],string]>(_t4B17,accum4B24,_t4B11);
          goto JOIN4B2E
        JOIN4B2E:  preds = [MASSIGN4B27,*STABILIZE4B4A]
          femData:MeshPos pos4B28#1 = phi(pos4AED)
          femData:MeshCell currentCell4B29#1 = phi(currentCell4B07)
          real rayN4B2A#1 = phi(rayN4AEF)
          femData:MeshCell[] cellInter4B2B#1 = phi(_t4B0B)
          tensor[2][] refSpaceInter4B2C#1 = phi(_t4B01)
          tensor[3][] spaceInter4B2D#1 = phi(spaceInter4AFB)
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.spaceInter = spaceInter4B2D;
          self.refSpaceInter = refSpaceInter4B2C;
          self.cellInter = cellInter4B2B;
          self.currentCellInt = currentCellInt4ADC;
          self.rayN = rayN4B2A;
          self.currentCell = currentCell4B29;
          self.pos = pos4B28;
          self.startsInside = startsInside4AE7;
          active
        ASSIGN4B3C:  preds = [COND4AEC]
          string _t4B3B#1 = "No intersection!\n";
          Print<[string]>(_t4B3B);
          string _t4B3E#1 = "Ui: ";
          string _t4B40#1 = " Vi:";
          string _t4B42#1 = "\n";
          Print<[string,int,string,int,string]>(_t4B3E,ui4264,_t4B40,vi4266,_t4B42);
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.currentCellInt = currentCellInt4ADC;
          self.startsInside = startsInside4AE7;
          stabilize
          goto JOIN4B2E
        ASSIGN4B4B:  preds = [COND426A]
          bool _t426E#1 = NEQ<int>(vi4266,debugV424A);
          goto JOIN426F
    end start
    method update
        ENTRY4B4C:  preds = []
          tensor[3] rayOrig4B4D#4 = self.rayOrig;
          tensor[3] rayVec4B4F#6 = self.rayVec;
          real camFarVsp4B51#5 = self.camFarVsp;
          femData:MeshPos[] poses4B53#2 = self.poses;
          real[] normalizedTimes4B55#4 = self.normalizedTimes;
          int cellIntersects4B57#1 = self.cellIntersects;
          tensor[2][] rayCellInter4B59#2 = self.rayCellInter;
          tensor[3][] spaceInter4B5B#3 = self.spaceInter;
          tensor[2][] refSpaceInter4B5D#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter4B5F#4 = self.cellInter;
          real rayN4B61#7 = self.rayN;
          femData:MeshCell currentCell4B63#2 = self.currentCell;
          int steps4B65#1 = self.steps;
          femData:MeshPos pos4B67#8 = self.pos;
          bool startsInside4B69#2 = self.startsInside;
          int ui4B6B#1 = self.ui;
          int vi4B6D#1 = self.vi;
          string _t4B6F#1 = "Ui: ";
          string _t4B71#1 = " vi: ";
          string _t4B73#21 = "\n";
          Print<[string,int,string,int,string]>(_t4B6F,ui4B6B,_t4B71,vi4B6D,_t4B73);
          string _t4B76#1 = "The current ref pos is:";
          tensor[2] _t4B78#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4B67);
          Print<[string,tensor[2],string]>(_t4B76,_t4B78,_t4B73);
          string _t4B7B#1 = "Current cell:";
          femData:Mesh _t4B7D#13 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4B67);
          int _t4B7F#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4B67);
          femData:MeshCell _t4B81#3 = LoadFem<femData:MeshCell>(_t4B7D,_t4B7F);
          Print<[string,femData:MeshCell,string]>(_t4B7B,_t4B81,_t4B73);
          string _t4B84#1 = "The current time is:";
          Print<[string,real,string]>(_t4B84,rayN4B61,_t4B73);
          string _t4B87#2 = "The current world pos is:";
          int ilit4B8A#3 = 3;
          int mulRes4B8B#3 = IMul(_t4B7F,ilit4B8A);
          int idx4B8E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,mulRes4B8B);
          int ilit4B8F#25 = 1;
          int addRes4B90#1 = IAdd(mulRes4B8B,ilit4B8F);
          int idx4B91#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B90);
          int ilit4B92#16 = 2;
          int addRes4B93#1 = IAdd(mulRes4B8B,ilit4B92);
          int idx4B94#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B93);
          int mulRes4BA7#2 = IMul(ilit4B92,idx4B8E);
          int addRes4BAA#1 = IAdd(ilit4B8F,mulRes4BA7);
          real dof_load4BAB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BA7);
          real dof_load4BAC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BAA);
          int mulRes4BAF#2 = IMul(ilit4B92,idx4B91);
          int addRes4BB1#1 = IAdd(ilit4B8F,mulRes4BAF);
          real dof_load4BB2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BAF);
          real dof_load4BB3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB1);
          int mulRes4BB6#2 = IMul(ilit4B92,idx4B94);
          int addRes4BB8#1 = IAdd(ilit4B8F,mulRes4BB6);
          real dof_load4BB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BB6);
          real dof_load4BBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB8);
          real varAcc4BD8#1 = VIndex<2,0>(_t4B78);
          real varAcc4BD9#1 = VIndex<2,1>(_t4B78);
          real coeff4BDA#25 = -0.1e1;
          real one4BDC#38 = 0.1e1;
          real prod4BDD#2 = RMul(varAcc4BD8,one4BDC);
          real prod4BDF#2 = RMul(one4BDC,varAcc4BD9);
          real prod4BE0#4 = RMul(one4BDC,one4BDC);
          real mult4BE1#6 = RMul(one4BDC,prod4BE0);
          real mult4BE2#1 = RMul(coeff4BDA,prod4BDF);
          real mult4BE3#1 = RMul(coeff4BDA,prod4BDD);
          real sum4BE4#1 = RAdd(mult4BE2,mult4BE3);
          real sum4BE5#2 = RAdd(mult4BE1,sum4BE4);
          real basisEval4BE7#2 = RMul(one4BDC,prod4BDD);
          real basisEval4BE8#2 = RMul(one4BDC,prod4BDF);
          real r4C00#1 = RMul(dof_load4BAB,sum4BE5);
          real r4C03#1 = RMul(dof_load4BB2,basisEval4BE7);
          real r4C06#1 = RMul(dof_load4BB9,basisEval4BE8);
          real r4C07#1 = RAdd(r4C00,r4C03);
          real r4C08#1 = RAdd(r4C07,r4C06);
          real r4C0A#1 = RMul(dof_load4BAC,sum4BE5);
          real r4C0C#1 = RMul(dof_load4BB3,basisEval4BE7);
          real r4C0E#1 = RMul(dof_load4BBA,basisEval4BE8);
          real r4C0F#1 = RAdd(r4C0A,r4C0C);
          real r4C10#1 = RAdd(r4C0F,r4C0E);
          tensor[2] _t4BFD#3 = <tensor[2]>[r4C08,r4C10];
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          tensor[3] op1_e3_l_34C27#1 = VScale<3>(rayN4B61,rayVec4B4F);
          tensor[3] stupid4C2A#2 = VAdd<3>(rayOrig4B4D,op1_e3_l_34C27);
          string _t4C2D#2 = "The current world pos should be:";
          real _t4C2F#1 = VIndex<3,0>(stupid4C2A);
          real _t4C31#1 = VIndex<3,1>(stupid4C2A);
          tensor[2] _t4C33#3 = <tensor[2]>[_t4C2F,_t4C31];
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real _t4C38#3 = 0.1e-8;
          real _t4C3A#1 = RAdd(one4BDC,_t4C38);
          tensor[2] _t4C3D#1 = <tensor[2]>[one4BDC,one4BDC];
          real _t4C3F#1 = VDot<2>(_t4C3D,_t4B78);
          bool _t4C42#1 = GT<real>(_t4C3A,_t4C3F);
          tensor[2] _t4C44#1 = <tensor[2]>[_t4C38,_t4C38];
          tensor[2] _t4C46#2 = VAdd<2>(_t4C44,_t4B78);
          real _t4C49#1 = VIndex<2,0>(_t4C46);
          real _t4C4B#2 = -0.e0;
          bool _t4C4D#1 = GT<real>(_t4C49,_t4C4B);
          real _t4C4F#1 = VIndex<2,1>(_t4C46);
          bool _t4C51#1 = GT<real>(_t4C4F,_t4C4B);
          bool _t4C53#1 = BAnd(_t4C4D,_t4C51);
          bool _t4C55#1 = BAnd(_t4C42,_t4C53);
          bool _t4C57#1 = BNot(_t4C55);
          if _t4C57 then goto ASSIGN4C5B else goto JOIN4C64
        ASSIGN4C5B:  preds = [COND4C59]
          string _t4C5A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t4C5A);
          bool _t4C5D#1 = BNot(startsInside4B69);
          if _t4C5D then goto ASSIGN4C61 else goto JOIN4C63
        ASSIGN4C61:  preds = [COND4C5F]
          string _t4C60#1 = "Not because of an inside\n";
          Print<[string]>(_t4C60);
          goto JOIN4C63
        JOIN4C63:  preds = [MASSIGN4C62,COND4C5F]
          goto JOIN4C64
        JOIN4C64:  preds = [JOIN4C63,COND4C59]
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          tensor[2] op1_e3_l_74C90#2 = VSub<2>(_t4BFD,_t4C33);
          real op1_e3_l_94C93#1 = VDot<2>(op1_e3_l_74C90,op1_e3_l_74C90);
          real err4C96#2 = Sqrt(op1_e3_l_94C93);
          real _t4C99#1 = 0.1e-4;
          bool _t4C9B#1 = GT<real>(err4C96,_t4C99);
          if _t4C9B then goto ASSIGN4C9F else goto ASSIGN51EE
        ASSIGN4C9F:  preds = [COND4C9D]
          string _t4C9E#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t4C9E,err4C96,_t4B73);
          goto JOIN4CA1
        JOIN4CA1:  preds = [MASSIGN4CA0,MASSIGN51EF]
          int steps4CA4#4 = IAdd(steps4B65,ilit4B8F);
          string _t4CA6#1 = "Orig:";
          string _t4CA8#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t4CA6,rayOrig4B4D,_t4CA8,rayVec4B4F,_t4B73);
          real op1_e3_l_34CAB#2 = RSub(camFarVsp4B51,rayN4B61);
          tensor[3] newDpos4CAE#2 = VScale<3>(op1_e3_l_34CAB,rayVec4B4F);
          tensor[2] _t4CB1#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos4B67);
          femData:Mesh _t4CB3#9 = ExtractFem<femData:Mesh,femData:MeshCell>(_t4B81);
          int _t4CB5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t4B81);
          real _t4CB9#1 = VIndex<3,0>(newDpos4CAE);
          real _t4CBB#1 = VIndex<3,1>(newDpos4CAE);
          tensor[2] _t4CBD#2 = <tensor[2]>[_t4CB9,_t4CBB];
          int _t4CBF#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos4B67);
          real time4CC1#5 = +inf;
          int face4CC3#9 = -1;
          real faceTime4CC5#6 = -inf;
          real _t4CC7#40 = 0.e0;
          tensor[2] _t4CC9#3 = <tensor[2]>[one4BDC,_t4CC7];
          tensor[2] _t4CCD#1 = <tensor[2]>[coeff4BDA,one4BDC];
          int mulRes4CD1#3 = IMul(_t4CB5,ilit4B8A);
          int idx4CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,mulRes4CD1);
          int addRes4CD6#1 = IAdd(mulRes4CD1,ilit4B8F);
          int idx4CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD6);
          int addRes4CD9#1 = IAdd(mulRes4CD1,ilit4B92);
          int idx4CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD9);
          int mulRes4CED#2 = IMul(ilit4B92,idx4CD4);
          int addRes4CF0#1 = IAdd(ilit4B8F,mulRes4CED);
          real dof_load4CF1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CED);
          real dof_load4CF2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF0);
          int mulRes4CF5#2 = IMul(ilit4B92,idx4CD7);
          int addRes4CF7#1 = IAdd(ilit4B8F,mulRes4CF5);
          real dof_load4CF8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CF5);
          real dof_load4CF9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF7);
          int mulRes4CFC#2 = IMul(ilit4B92,idx4CDA);
          int addRes4CFE#1 = IAdd(ilit4B8F,mulRes4CFC);
          real dof_load4CFF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CFC);
          real dof_load4D00#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFE);
          real basisEval4D23#2 = RMul(coeff4BDA,prod4BE0);
          real r4D38#2 = RMul(dof_load4CF1,basisEval4D23);
          real r4D3B#1 = RMul(dof_load4CF8,mult4BE1);
          real r4D3E#1 = RMul(dof_load4CFF,_t4CC7);
          real r4D3F#1 = RAdd(r4D38,r4D3B);
          real r4D40#3 = RAdd(r4D3F,r4D3E);
          real r4D44#1 = RMul(dof_load4CF8,_t4CC7);
          real r4D46#1 = RMul(dof_load4CFF,mult4BE1);
          real r4D47#1 = RAdd(r4D38,r4D44);
          real r4D48#3 = RAdd(r4D47,r4D46);
          real r4D4B#2 = RMul(dof_load4CF2,basisEval4D23);
          real r4D4D#1 = RMul(dof_load4CF9,mult4BE1);
          real r4D4F#1 = RMul(dof_load4D00,_t4CC7);
          real r4D50#1 = RAdd(r4D4B,r4D4D);
          real r4D51#3 = RAdd(r4D50,r4D4F);
          real r4D53#1 = RMul(dof_load4CF9,_t4CC7);
          real r4D54#1 = RMul(dof_load4D00,mult4BE1);
          real r4D55#1 = RAdd(r4D4B,r4D53);
          real r4D56#3 = RAdd(r4D55,r4D54);
          real r4D7F#1 = RMul(_t4CC7,r4D40);
          real r4D82#1 = RMul(coeff4BDA,r4D51);
          real r4D83#2 = RAdd(r4D7F,r4D82);
          real r4D85#2 = RMul(_t4CC7,r4D48);
          real r4D87#1 = RMul(coeff4BDA,r4D56);
          real r4D88#2 = RAdd(r4D85,r4D87);
          real r4D8B#1 = RMul(one4BDC,r4D40);
          real r4D8C#1 = RMul(_t4CC7,r4D51);
          real r4D8D#2 = RAdd(r4D8B,r4D8C);
          real r4D8E#1 = RMul(one4BDC,r4D48);
          real r4D8F#2 = RMul(_t4CC7,r4D56);
          real r4D90#2 = RAdd(r4D8E,r4D8F);
          tensor[2] probe_l_114DA9#1 = <tensor[2]>[r4D40,r4D51];
          real r4E01#1 = RMul(one4BDC,r4D56);
          real r4E02#1 = RAdd(r4D85,r4E01);
          real r4E04#1 = RMul(coeff4BDA,r4D48);
          real r4E06#1 = RAdd(r4E04,r4D8F);
          tensor[2] op1_e3_l_134DFB#1 = <tensor[2]>[r4E02,r4E06];
          real r4E17#1 = RMul(_t4CC7,r4D83);
          real r4E1A#1 = RMul(coeff4BDA,r4D88);
          real r4E1B#1 = RAdd(r4E17,r4E1A);
          real r4E1D#1 = RMul(_t4CC7,r4D8D);
          real r4E1F#1 = RMul(coeff4BDA,r4D90);
          real r4E20#1 = RAdd(r4E1D,r4E1F);
          real r4E23#1 = RMul(one4BDC,r4D83);
          real r4E24#1 = RMul(_t4CC7,r4D88);
          real r4E25#1 = RAdd(r4E23,r4E24);
          real r4E26#1 = RMul(one4BDC,r4D8D);
          real r4E27#1 = RMul(_t4CC7,r4D90);
          real r4E28#1 = RAdd(r4E26,r4E27);
          real op1_e3_l_154E41#4 = VDot<2>(probe_l_114DA9,op1_e3_l_134DFB);
          real r4E46#1 = RDiv(r4E1B,op1_e3_l_154E41);
          real r4E48#1 = RDiv(r4E20,op1_e3_l_154E41);
          tensor[2] tensor4E49#1 = <tensor[2]>[r4E46,r4E48];
          real r4E4B#1 = RDiv(r4E25,op1_e3_l_154E41);
          real r4E4D#1 = RDiv(r4E28,op1_e3_l_154E41);
          tensor[2] tensor4E4E#1 = <tensor[2]>[r4E4B,r4E4D];
          real vdot4E5D#1 = VDot<2>(tensor4E49,_t4CBD);
          real vdot4E5F#1 = VDot<2>(tensor4E4E,_t4CBD);
          tensor[2] op1_e3_l_174E5B#5 = <tensor[2]>[vdot4E5D,vdot4E5F];
          real r4E69#1 = RMul(_t4CC7,coeff4BDA);
          real r4E6D#1 = RAdd(r4E69,prod4BE0);
          real r4E6F#1 = RMul(coeff4BDA,coeff4BDA);
          real r4E70#3 = RMul(_t4CC7,one4BDC);
          real r4E71#1 = RAdd(r4E6F,r4E70);
          tensor[2] op1_e3_l_184E66#1 = <tensor[2]>[r4E6D,r4E71];
          real op1_e3_l_194E7F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184E66);
          real r4E84#2 = RDiv(one4BDC,op1_e3_l_194E7F);
          real r4E86#2 = RMul(r4E84,coeff4BDA);
          real r4E88#2 = RMul(r4E84,one4BDC);
          tensor[2] op1_e3_l_214E91#1 = VSub<2>(_t4CC9,_t4CB1);
          real r4E97#1 = RMul(_t4CC7,r4E86);
          real r4E9A#1 = RMul(one4BDC,r4E88);
          real r4E9B#1 = RAdd(r4E97,r4E9A);
          real r4E9D#1 = RMul(coeff4BDA,r4E86);
          real r4E9E#1 = RMul(_t4CC7,r4E88);
          real r4E9F#1 = RAdd(r4E9D,r4E9E);
          tensor[2] op1_e3_l_224E94#1 = <tensor[2]>[r4E9B,r4E9F];
          real _t4EAD#6 = VDot<2>(op1_e3_l_214E91,op1_e3_l_224E94);
          real _t4EB0#3 = -0.1e-15;
          bool _t4EB2#1 = GTE<real>(_t4EAD,_t4EB0);
          bool _t4EB4#1 = GT<real>(time4CC1,_t4EAD);
          real _t4EB6#1 = Abs<real>(op1_e3_l_194E7F);
          real _t4EB9#3 = 0.1e-20;
          bool _t4EBB#1 = GTE<real>(_t4EB6,_t4EB9);
          bool _t4EBD#1 = BAnd(_t4EB4,_t4EBB);
          bool _t4EBF#2 = BAnd(_t4EB2,_t4EBD);
          if _t4EBF then goto ASSIGN4EC3 else goto JOIN4ECE
        ASSIGN4EC3:  preds = [COND4EC1]
          int _t4EC2#2 = 0;
          bool _t4EC4#1 = NEQ<int>(_t4CBF,_t4EC2);
          if _t4EC4 then goto JOIN4ECA else goto JOIN4ECA
        JOIN4ECA:  preds = [COND4EC6,COND4EC6]
          real faceTime4EC7#1 = phi(faceTime4CC5,_t4EAD)
          int face4EC8#1 = phi(_t4EC2,face4CC3)
          real time4EC9#1 = phi(_t4EAD,time4CC1)
          goto JOIN4ECE
        JOIN4ECE:  preds = [JOIN4ECA,COND4EC1]
          real faceTime4ECB#2 = phi(faceTime4EC7,faceTime4CC5)
          int face4ECC#2 = phi(face4EC8,face4CC3)
          real time4ECD#3 = phi(time4EC9,time4CC1)
          tensor[2] _t4ECF#3 = <tensor[2]>[_t4CC7,_t4CC7];
          tensor[2] _t4ED1#1 = <tensor[2]>[_t4CC7,one4BDC];
          real r4ED6#2 = RMul(_t4CC7,_t4CC7);
          real r4EDA#1 = RAdd(r4ED6,prod4BE0);
          real r4EDC#1 = RMul(coeff4BDA,_t4CC7);
          real r4EDE#1 = RAdd(r4EDC,r4E70);
          tensor[2] op1_e3_l_184ED3#1 = <tensor[2]>[r4EDA,r4EDE];
          real op1_e3_l_194EEC#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184ED3);
          real r4EF1#2 = RDiv(one4BDC,op1_e3_l_194EEC);
          real r4EF3#2 = RMul(r4EF1,_t4CC7);
          real r4EF5#2 = RMul(r4EF1,one4BDC);
          tensor[2] op1_e3_l_214EFE#2 = VSub<2>(_t4ECF,_t4CB1);
          real r4F04#1 = RMul(_t4CC7,r4EF3);
          real r4F07#1 = RMul(one4BDC,r4EF5);
          real r4F08#1 = RAdd(r4F04,r4F07);
          real r4F0A#1 = RMul(coeff4BDA,r4EF3);
          real r4F0B#1 = RMul(_t4CC7,r4EF5);
          real r4F0C#1 = RAdd(r4F0A,r4F0B);
          tensor[2] op1_e3_l_224F01#1 = <tensor[2]>[r4F08,r4F0C];
          real _t4F1A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F01);
          bool _t4F1D#2 = GTE<real>(_t4F1A,_t4EB0);
          bool _t4F1F#1 = GT<real>(time4ECD,_t4F1A);
          real _t4F21#1 = Abs<real>(op1_e3_l_194EEC);
          bool _t4F24#2 = GTE<real>(_t4F21,_t4EB9);
          bool _t4F26#1 = BAnd(_t4F1F,_t4F24);
          bool _t4F28#1 = BAnd(_t4F1D,_t4F26);
          if _t4F28 then goto ASSIGN543B else goto JOIN4F35
        ASSIGN543B:  preds = [COND4F2A]
          bool _t4F2B#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4F2B then goto JOIN4F31 else goto JOIN4F31
        JOIN4F31:  preds = [COND4F2D,COND4F2D]
          real faceTime4F2E#1 = phi(faceTime4ECB,_t4F1A)
          int face4F2F#1 = phi(ilit4B8F,face4ECC)
          real time4F30#1 = phi(_t4F1A,time4ECD)
          goto JOIN4F35
        JOIN4F35:  preds = [JOIN4F31,COND4F2A]
          real faceTime4F32#2 = phi(faceTime4F2E,faceTime4ECB)
          int face4F33#2 = phi(face4F2F,face4ECC)
          real time4F34#3 = phi(time4F30,time4ECD)
          real r4F3C#1 = RMul(one4BDC,_t4CC7);
          real r4F3D#1 = RAdd(r4E70,r4F3C);
          real r4F3F#1 = RMul(coeff4BDA,one4BDC);
          real r4F41#1 = RAdd(r4F3F,r4ED6);
          tensor[2] op1_e3_l_184F36#1 = <tensor[2]>[r4F3D,r4F41];
          real op1_e3_l_194F4F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184F36);
          real r4F54#2 = RDiv(one4BDC,op1_e3_l_194F4F);
          real r4F56#2 = RMul(r4F54,one4BDC);
          real r4F58#2 = RMul(r4F54,_t4CC7);
          real r4F64#1 = RMul(_t4CC7,r4F56);
          real r4F67#1 = RMul(one4BDC,r4F58);
          real r4F68#1 = RAdd(r4F64,r4F67);
          real r4F6A#1 = RMul(coeff4BDA,r4F56);
          real r4F6B#1 = RMul(_t4CC7,r4F58);
          real r4F6C#1 = RAdd(r4F6A,r4F6B);
          tensor[2] op1_e3_l_224F61#1 = <tensor[2]>[r4F68,r4F6C];
          real _t4F7A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F61);
          bool _t4F7D#2 = GTE<real>(_t4F7A,_t4EB0);
          bool _t4F7F#1 = GT<real>(time4F34,_t4F7A);
          real _t4F81#1 = Abs<real>(op1_e3_l_194F4F);
          bool _t4F84#2 = GTE<real>(_t4F81,_t4EB9);
          bool _t4F86#1 = BAnd(_t4F7F,_t4F84);
          bool _t4F88#1 = BAnd(_t4F7D,_t4F86);
          if _t4F88 then goto ASSIGN5447 else goto JOIN4F97
        ASSIGN5447:  preds = [COND4F8A]
          bool _t4F8D#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4F8D then goto JOIN4F93 else goto JOIN4F93
        JOIN4F93:  preds = [COND4F8F,COND4F8F]
          real faceTime4F90#1 = phi(faceTime4F32,_t4F7A)
          int face4F91#1 = phi(ilit4B92,face4F33)
          real time4F92#1 = phi(_t4F7A,time4F34)
          goto JOIN4F97
        JOIN4F97:  preds = [JOIN4F93,COND4F8A]
          real faceTime4F94#2 = phi(faceTime4F90,faceTime4F32)
          int face4F95#2 = phi(face4F91,face4F33)
          real time4F96#1 = phi(time4F92,time4F34)
          bool _t4F98#1 = NEQ<int>(face4F95,face4CC3);
          if _t4F98 then goto ASSIGN4F9C else goto ASSIGN51E4
        ASSIGN4F9C:  preds = [COND4F9A]
          real _t4F9B#1 = Max<real>(time4F96,_t4CC7);
          real _t4F9D#1 = IntToReal(face4F95);
          tensor[2] _t4F9F#1 = <tensor[2]>[_t4F9B,_t4F9D];
          goto JOIN4FA3
        JOIN4FA3:  preds = [ASSIGN4FA0,JOIN51E9]
          tensor[2] _t4FA1#1 = phi(_t4F9F,_t4FA2)
          real nextTime4FA4#3 = VIndex<2,0>(_t4FA1);
          real op1_e3_l_44FA9#1 = RMul(nextTime4FA4,op1_e3_l_34CAB);
          real _t4FAC#1 = RAdd(rayN4B61,op1_e3_l_44FA9);
          real _t4FAF#1 = Min<real>(camFarVsp4B51,_t4FAC);
          real rayNp4FB1#6 = Max<real>(rayN4B61,_t4FAF);
          string _t4FB3#1 = "Next time:";
          Print<[string,real,string]>(_t4FB3,nextTime4FA4,_t4B73);
          bool _t4FB6#1 = GTE<real>(nextTime4FA4,_t4CC7);
          if _t4FB6 then goto ASSIGN4FBA else goto JOIN50B2
        ASSIGN4FBA:  preds = [COND4FB8]
          tensor[2] _t4FB9#1 = <tensor[2]>[rayN4B61,rayNp4FB1];
          tensor[2][] rayCellInter4FBB#3 = Append<tensor[2]>(rayCellInter4B59,_t4FB9);
          int _t4FBD#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos4B67);
          if _t4EBF then goto ASSIGN4FC1 else goto JOIN4FCC
        ASSIGN4FC1:  preds = [COND4FBF]
          int _t4FC0#2 = 0;
          bool _t4FC2#1 = NEQ<int>(_t4CBF,_t4FC0);
          if _t4FC2 then goto JOIN4FC8 else goto JOIN4FC8
        JOIN4FC8:  preds = [COND4FC4,COND4FC4]
          real faceTime4FC5#1 = phi(faceTime4CC5,_t4EAD)
          int face4FC6#1 = phi(_t4FC0,face4CC3)
          real time4FC7#1 = phi(_t4EAD,time4CC1)
          goto JOIN4FCC
        JOIN4FCC:  preds = [JOIN4FC8,COND4FBF]
          real faceTime4FC9#2 = phi(faceTime4FC5,faceTime4CC5)
          int face4FCA#2 = phi(face4FC6,face4CC3)
          real time4FCB#3 = phi(time4FC7,time4CC1)
          bool _t4FCD#1 = GT<real>(time4FCB,_t4F1A);
          bool _t4FCF#1 = BAnd(_t4FCD,_t4F24);
          bool _t4FD1#1 = BAnd(_t4F1D,_t4FCF);
          if _t4FD1 then goto ASSIGN544A else goto JOIN4FDE
        ASSIGN544A:  preds = [COND4FD3]
          bool _t4FD4#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4FD4 then goto JOIN4FDA else goto JOIN4FDA
        JOIN4FDA:  preds = [COND4FD6,COND4FD6]
          real faceTime4FD7#1 = phi(faceTime4FC9,_t4F1A)
          int face4FD8#1 = phi(ilit4B8F,face4FCA)
          real time4FD9#1 = phi(_t4F1A,time4FCB)
          goto JOIN4FDE
        JOIN4FDE:  preds = [JOIN4FDA,COND4FD3]
          real faceTime4FDB#2 = phi(faceTime4FD7,faceTime4FC9)
          int face4FDC#2 = phi(face4FD8,face4FCA)
          real time4FDD#3 = phi(time4FD9,time4FCB)
          bool _t4FDF#1 = GT<real>(time4FDD,_t4F7A);
          bool _t4FE1#1 = BAnd(_t4FDF,_t4F84);
          bool _t4FE3#1 = BAnd(_t4F7D,_t4FE1);
          if _t4FE3 then goto ASSIGN544B else goto JOIN4FF2
        ASSIGN544B:  preds = [COND4FE5]
          bool _t4FE8#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4FE8 then goto JOIN4FEE else goto JOIN4FEE
        JOIN4FEE:  preds = [COND4FEA,COND4FEA]
          real faceTime4FEB#1 = phi(faceTime4FDB,_t4F7A)
          int face4FEC#1 = phi(ilit4B92,face4FDC)
          real time4FED#1 = phi(_t4F7A,time4FDD)
          goto JOIN4FF2
        JOIN4FF2:  preds = [JOIN4FEE,COND4FE5]
          real faceTime4FEF#2 = phi(faceTime4FEB,faceTime4FDB)
          int face4FF0#2 = phi(face4FEC,face4FDC)
          real time4FF1#1 = phi(time4FED,time4FDD)
          bool _t4FF3#1 = NEQ<int>(face4FF0,face4CC3);
          if _t4FF3 then goto ASSIGN4FF7 else goto ASSIGN51DA
        ASSIGN4FF7:  preds = [COND4FF5]
          real _t4FF6#1 = Max<real>(time4FF1,_t4CC7);
          real _t4FF8#1 = IntToReal(face4FF0);
          tensor[2] _t4FFA#1 = <tensor[2]>[_t4FF6,_t4FF8];
          goto JOIN4FFE
        JOIN4FFE:  preds = [ASSIGN4FFB,JOIN51DF]
          tensor[2] _t4FFC#3 = phi(_t4FFA,_t4FFD)
          real _t4FFF#1 = VIndex<2,1>(_t4FFC);
          real t5001#1 = Floor<1>(_t4FFF);
          int _t5003#6 = RealToInt<1>(t5001);
          int[2] _t5005#2 = nextCell45006 (_t5003,_t4FBD,_t4B7D);
          int _t5019#4 = 0;
          int _t501B#2 = Subscript<int[2]>(_t5005,_t5019);
          bool _t501D#1 = NEQ<int>(face4CC3,_t501B);
          if _t501D then goto ASSIGN5021 else goto ASSIGN51D1
        ASSIGN5021:  preds = [COND501F]
          tensor[2][3] _t5020#1 = <tensor[2][3]>{_t4CC9,_t4ECF,_t4ECF};
          int _t5022#3 = Subscript<int[2]>(_t5005,ilit4B8F);
          tensor[2] _t5024#1 = Subscript<tensor[2][3]>(_t5020,_t5022);
          tensor[2][3] _t5026#1 = <tensor[2][3]>{_t4CCD,_t4ED1,_t4CC9};
          tensor[2] _t5028#1 = Subscript<tensor[2][3]>(_t5026,_t5022);
          real _t502A#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_16502C#1 = VScale<2>(_t502A,op1_e3_l_174E5B);
          tensor[2] _t502F#2 = VAdd<2>(op1_e3_l_16502C,_t4CB1);
          real _t5032#1 = VIndex<2,0>(_t502F);
          real _t5034#1 = VIndex<2,1>(_t502F);
          real[2] _t5036#1 = <real[2]>{_t5032,_t5034};
          int[3] _t5038#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t503A#1 = Subscript<int[3]>(_t5038,_t5003);
          real _t503C#1 = Subscript<real[2]>(_t5036,_t503A);
          real[2] _t503E#1 = <real[2]>{one4BDC,_t4CC7};
          real[2] _t5040#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2] _t5042#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2][3] _t5044#1 = <real[2][3]>{_t503E,_t5040,_t5042};
          real[2] _t5046#1 = Subscript<real[2][3]>(_t5044,_t5003);
          int[3] _t5048#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t504A#1 = Subscript<int[3]>(_t5048,_t5003);
          real _t504C#1 = Subscript<real[2]>(_t5046,_t504A);
          real[2] _t504E#1 = <real[2]>{coeff4BDA,one4BDC};
          real[2] _t5050#1 = <real[2]>{_t4CC7,one4BDC};
          real[2] _t5052#1 = <real[2]>{one4BDC,_t4CC7};
          real[2][3] _t5054#1 = <real[2][3]>{_t504E,_t5050,_t5052};
          real[2] _t5056#1 = Subscript<real[2][3]>(_t5054,_t5003);
          int[3] _t5058#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t505A#1 = Subscript<int[3]>(_t5058,_t5003);
          real _t505C#1 = Subscript<real[2]>(_t5056,_t505A);
          real op1_e3_l_5505E#1 = RSub(_t503C,_t504C);
          real op1_e3_l_65061#1 = RDiv(op1_e3_l_5505E,_t505C);
          tensor[2] op1_e3_l_75064#1 = VScale<2>(op1_e3_l_65061,_t5028);
          tensor[2] _t5067#1 = VAdd<2>(_t5024,op1_e3_l_75064);
          femData:MeshPos _t506A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t4B7D,_t501B,_t5067,_t5022);
          goto JOIN506E
        JOIN506E:  preds = [ASSIGN506B,ASSIGN51D8]
          femData:MeshPos posp506C#5 = phi(_t506A,_t506D)
          bool _t506F#1 = GTE<real>(rayNp4FB1,camFarVsp4B51);
          if _t506F then goto ASSIGN5073 else goto JOIN5083
        ASSIGN5073:  preds = [COND5071]
          string _t5072#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t5072,cellInter4B5F,_t4B73);
          tensor[3] op1_e3_l_35075#1 = VScale<3>(camFarVsp4B51,rayVec4B4F);
          tensor[3] _t5078#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35075);
          tensor[3][] spaceInter507B#1 = Append<tensor[3]>(spaceInter4B5B,_t5078);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter507B;
          self.rayN = rayNp4FB1;
          self.steps = steps4CA4;
          stabilize
          goto JOIN5083
        JOIN5083:  preds = [*STABILIZE5081,COND5071]
          tensor[3][] spaceInter5082#1 = phi(spaceInter4B5B)
          tensor[3] op1_e3_l_35084#1 = VScale<3>(rayNp4FB1,rayVec4B4F);
          tensor[3] _t5087#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35084);
          tensor[3][] spaceInter508A#2 = Append<tensor[3]>(spaceInter5082,_t5087);
          tensor[2] _t508C#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp506C);
          tensor[2][] refSpaceInter508E#2 = Append<tensor[2]>(refSpaceInter4B5D,_t508C);
          bool _t5090#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp506C);
          if _t5090 then goto ASSIGN5094 else goto ASSIGN51CE
        ASSIGN5094:  preds = [COND5092]
          string _t5093#1 = "Next cell:";
          femData:Mesh _t5095#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp506C);
          int _t5097#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp506C);
          femData:MeshCell _t5099#3 = LoadFem<femData:MeshCell>(_t5095,_t5097);
          Print<[string,femData:MeshCell,string]>(_t5093,_t5099,_t4B73);
          femData:MeshCell[] cellInter509C#1 = Append<femData:MeshCell>(cellInter4B5F,_t5099);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter508A;
          self.refSpaceInter = refSpaceInter508E;
          self.cellInter = cellInter509C;
          self.rayN = rayNp4FB1;
          self.currentCell = _t5099;
          self.steps = steps4CA4;
          self.pos = posp506C;
          active
          goto JOIN50AA
        JOIN50AA:  preds = [*ACTIVE50A6,MASSIGN51CF]
          femData:MeshPos pos50A7#1 = phi(pos4B67)
          femData:MeshCell currentCell50A8#1 = phi(currentCell4B63)
          femData:MeshCell[] cellInter50A9#1 = phi(cellInter4B5F)
          goto JOIN50B2
        JOIN50B2:  preds = [JOIN50AA,COND4FB8]
          femData:MeshPos pos50AB#6 = phi(pos50A7,pos4B67)
          femData:MeshCell currentCell50AC#1 = phi(currentCell50A8,currentCell4B63)
          real rayN50AD#3 = phi(rayNp4FB1,rayN4B61)
          femData:MeshCell[] cellInter50AE#3 = phi(cellInter50A9,cellInter4B5F)
          tensor[2][] refSpaceInter50AF#2 = phi(refSpaceInter508E,refSpaceInter4B5D)
          tensor[3][] spaceInter50B0#2 = phi(spaceInter508A,spaceInter4B5B)
          tensor[2][] rayCellInter50B1#3 = phi(rayCellInter4FBB,rayCellInter4B59)
          int _t50B3#1 = 0;
          int _t50B5#1 = ISub(cellIntersects4B57,ilit4B8F);
          int[] _t50B7#1 = Range(_t50B3,_t50B5);
        FOREACH50BA:  preds = [ASSIGN50B8,NEXT50E3]
          foreach (i50B9 in _t50B7) on exit goto ASSIGN50E5
            real estimate50C3#4 = phi(camFarVsp4B51,estimate50E0)
            int newIdx50DB#7 = phi(face4CC3,newIdx50E1)
          real t50BB#3 = Subscript<real[]>(normalizedTimes4B55,i50B9);
          femData:MeshPos posp50BD#2 = Subscript<femData:MeshPos[]>(poses4B53,i50B9);
          bool _t50BF#1 = GTE<real>(t50BB,rayN50AD);
          if _t50BF then goto ASSIGN50C4 else goto JOIN50E2
        ASSIGN50C4:  preds = [COND50C1]
          bool _t50C2#1 = GTE<real>(estimate50C3,t50BB);
          if _t50C2 then goto ASSIGN50C7 else goto JOIN50DF
        ASSIGN50C7:  preds = [COND50C5]
          femData:Mesh _t50C6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp50BD);
          int _t50C8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp50BD);
          femData:MeshCell _t50CA#1 = LoadFem<femData:MeshCell>(_t50C6,_t50C8);
          femData:Mesh _t50CC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int _t50CE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:MeshCell _t50D0#1 = LoadFem<femData:MeshCell>(_t50CC,_t50CE);
          int _t50D2#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50CA);
          int _t50D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50D0);
          bool _t50D6#1 = NEQ<int>(_t50D2,_t50D4);
          if _t50D6 then goto JOIN50DC else goto JOIN50DC
        JOIN50DC:  preds = [COND50D8,COND50D8]
          real estimate50D9#1 = phi(t50BB,estimate50C3)
          int newIdx50DA#1 = phi(i50B9,newIdx50DB)
          goto JOIN50DF
        JOIN50DF:  preds = [JOIN50DC,COND50C5]
          real estimate50DD#1 = phi(estimate50D9,estimate50C3)
          int newIdx50DE#1 = phi(newIdx50DA,newIdx50DB)
          goto JOIN50E2
        JOIN50E2:  preds = [JOIN50DF,COND50C1]
          real estimate50E0#1 = phi(estimate50DD,estimate50C3)
          int newIdx50E1#1 = phi(newIdx50DE,newIdx50DB)
          goto FOREACH50BA
        ASSIGN50E5:  preds = [FOREACH50BA]
          bool _t50E4#1 = GT<int>(newIdx50DB,face4CC3);
          if _t50E4 then goto ASSIGN50E8 else goto ASSIGN51B9
        ASSIGN50E8:  preds = [COND50E6]
          string _t50E7#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t50E7);
          if startsInside4B69 then goto ASSIGN50EC else goto JOIN50EE
        ASSIGN50EC:  preds = [COND50EA]
          string _t50EB#1 = "because of an inside\n";
          Print<[string]>(_t50EB);
          goto JOIN50EE
        JOIN50EE:  preds = [MASSIGN50ED,COND50EA]
          string _t50EF#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t50EF,rayVec4B4F,_t4B73);
          string _t50F2#1 = "world pos was:";
          tensor[2] _t50F4#3 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos50AB);
          int _t50F6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:Mesh _t50F8#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int mulRes50FC#3 = IMul(_t50F6,ilit4B8A);
          int idx50FF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,mulRes50FC);
          int addRes5101#1 = IAdd(mulRes50FC,ilit4B8F);
          int idx5102#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5101);
          int addRes5104#1 = IAdd(mulRes50FC,ilit4B92);
          int idx5105#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5104);
          int mulRes5118#2 = IMul(ilit4B92,idx50FF);
          int addRes511B#1 = IAdd(ilit4B8F,mulRes5118);
          real dof_load511C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5118);
          real dof_load511D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes511B);
          int mulRes5120#2 = IMul(ilit4B92,idx5102);
          int addRes5122#1 = IAdd(ilit4B8F,mulRes5120);
          real dof_load5123#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5120);
          real dof_load5124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5122);
          int mulRes5127#2 = IMul(ilit4B92,idx5105);
          int addRes5129#1 = IAdd(ilit4B8F,mulRes5127);
          real dof_load512A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5127);
          real dof_load512B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5129);
          real varAcc5149#1 = VIndex<2,0>(_t50F4);
          real varAcc514A#1 = VIndex<2,1>(_t50F4);
          real prod514E#2 = RMul(varAcc5149,one4BDC);
          real prod5150#2 = RMul(one4BDC,varAcc514A);
          real mult5153#1 = RMul(coeff4BDA,prod5150);
          real mult5154#1 = RMul(coeff4BDA,prod514E);
          real sum5155#1 = RAdd(mult5153,mult5154);
          real sum5156#2 = RAdd(mult4BE1,sum5155);
          real basisEval5158#2 = RMul(one4BDC,prod514E);
          real basisEval5159#2 = RMul(one4BDC,prod5150);
          real r5171#1 = RMul(dof_load511C,sum5156);
          real r5174#1 = RMul(dof_load5123,basisEval5158);
          real r5177#1 = RMul(dof_load512A,basisEval5159);
          real r5178#1 = RAdd(r5171,r5174);
          real r5179#1 = RAdd(r5178,r5177);
          real r517B#1 = RMul(dof_load511D,sum5156);
          real r517D#1 = RMul(dof_load5124,basisEval5158);
          real r517F#1 = RMul(dof_load512B,basisEval5159);
          real r5180#1 = RAdd(r517B,r517D);
          real r5181#1 = RAdd(r5180,r517F);
          tensor[2] _t516E#1 = <tensor[2]>[r5179,r5181];
          Print<[string,tensor[2],string]>(_t50F2,_t516E,_t4B73);
          string _t5198#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t5198,_t50F4,_t4B73);
          string _t519B#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes4B55,_t519B,newIdx50DB,_t4B73);
          string _t519E#1 = "Original time was:";
          Print<[string,real,string]>(_t519E,rayN50AD,_t4B73);
          femData:MeshPos pos51A1#3 = Subscript<femData:MeshPos[]>(poses4B53,newIdx50DB);
          femData:Mesh _t51A3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos51A1);
          int _t51A5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos51A1);
          femData:MeshCell currentCell51A7#2 = LoadFem<femData:MeshCell>(_t51A3,_t51A5);
          femData:MeshCell[] cellInter51A9#1 = Append<femData:MeshCell>(cellInter50AE,currentCell51A7);
          real rayN51AB#1 = Subscript<real[]>(normalizedTimes4B55,newIdx50DB);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter51A9;
          self.rayN = rayN51AB;
          self.currentCell = currentCell51A7;
          self.steps = steps4CA4;
          self.pos = pos51A1;
          active
          goto JOIN51B6
        JOIN51B6:  preds = [*ACTIVE51B5,*STABILIZE51CC]
          unreachable
        ASSIGN51B9:  preds = [COND50E6]
          string _t51B8#1 = "Enter times:";
          Print<[string,real[],string]>(_t51B8,normalizedTimes4B55,_t4B73);
          string _t51BB#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t51BB,rayCellInter50B1,_t4B73);
          string _t51BE#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t51BE,cellInter50AE,_t4B73);
          string _t51C1#1 = "End\n";
          Print<[string]>(_t51C1);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter50AE;
          self.rayN = rayN50AD;
          self.currentCell = currentCell50AC;
          self.steps = steps4CA4;
          self.pos = pos50AB;
          stabilize
          goto JOIN51B6
        ASSIGN51CE:  preds = [COND5092]
          string _t51CD#1 = "Invalid\n";
          Print<[string]>(_t51CD);
          goto JOIN50AA
        ASSIGN51D1:  preds = [COND501F]
          real _t51D0#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_1651D2#1 = VScale<2>(_t51D0,op1_e3_l_174E5B);
          tensor[2] _t51D5#1 = VAdd<2>(op1_e3_l_1651D2,_t4CB1);
          femData:MeshPos _t506D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t4B7D,_t51D5);
          goto JOIN506E
        ASSIGN51DA:  preds = [COND4FF5]
          bool _t51D9#1 = EQ<real>(faceTime4CC5,faceTime4FEF);
          if _t51D9 then goto ASSIGN544C else goto ASSIGN51E1
        ASSIGN544C:  preds = [COND51DB]
          tensor[2] _t51DC#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51DF
        JOIN51DF:  preds = [ASSIGN544C,ASSIGN51E2]
          tensor[2] _t4FFD#1 = phi(_t51DC,_t51DE)
          goto JOIN4FFE
        ASSIGN51E1:  preds = [COND51DB]
          real _t51E0#1 = IntToReal(_t4CBF);
          tensor[2] _t51DE#1 = <tensor[2]>[faceTime4FEF,_t51E0];
          goto JOIN51DF
        ASSIGN51E4:  preds = [COND4F9A]
          bool _t51E3#1 = EQ<real>(faceTime4CC5,faceTime4F94);
          if _t51E3 then goto ASSIGN5448 else goto ASSIGN51EB
        ASSIGN5448:  preds = [COND51E5]
          tensor[2] _t51E6#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51E9
        JOIN51E9:  preds = [ASSIGN5448,ASSIGN51EC]
          tensor[2] _t4FA2#1 = phi(_t51E6,_t51E8)
          goto JOIN4FA3
        ASSIGN51EB:  preds = [COND51E5]
          real _t51EA#1 = IntToReal(_t4CBF);
          tensor[2] _t51E8#1 = <tensor[2]>[faceTime4F94,_t51EA];
          goto JOIN51E9
        ASSIGN51EE:  preds = [COND4C9D]
          string _t51ED#1 = "Did not move off ray!\n";
          Print<[string]>(_t51ED);
          goto JOIN4CA1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY51F1:  preds = []
      int iresU51F2#1 = globals.iresU3FCF;
      int iresV51F4#1 = globals.iresV3FD0;
      int _t51F6#2 = 0;
      int _t51F8#2 = 1;
      int _t51FA#1 = ISub(iresU51F2,_t51F8);
      int[] _t51FC#1 = Range(_t51F6,_t51FA);
    FOREACH51FF:  preds = [ASSIGN51FD,NEXT5208]
      foreach (vi51FE in _t51FC) on exit goto RETURN5209
      int _t5200#1 = ISub(iresV51F4,_t51F8);
      int[] _t5202#1 = Range(_t51F6,_t5200);
    FOREACH5205:  preds = [ASSIGN5203,NEXT5207]
      foreach (ui5204 in _t5202) on exit goto NEXT5208
      new ray(ui5204,vi51FE);
      goto FOREACH5205
    NEXT5208:  preds = [FOREACH5205]
      goto FOREACH51FF
    RETURN5209:  preds = [FOREACH51FF]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a3FC8 (a) = <no-default>
  input isoval3FC9 (isoval) = <default>
  input thick3FCA (thick) = <default>
  input camEye3FCB (camEye) = <default>
  input camAt3FCC (camAt) = <default>
  input camUp3FCD (camUp) = <default>
  input camFOV3FCE (camFOV) = <default>
  input iresU3FCF (iresU) = <default>
  input iresV3FD0 (iresV) = <default>
  input camNear3FD1 (camNear) = <default>
  input camFar3FD2 (camFar) = <default>
  input refStep3FD3 (refStep) = <default>
  input rayStep3FD4 (rayStep) = <default>
  input lightVsp3FD5 (lightVsp) = <default>
  input phongKa3FD6 (phongKa) = <default>
  input phongKd3FD7 (phongKd) = <default>
  input debug3FD8 (debug) = <default>
  input debugU3FD9 (debugU) = <default>
  input debugV3FDA (debugV) = <default>
  input eps3FDB (eps) = <default>
  global femData:MeshCell[] 0cell_a3FDC
  global real camNearVsp3FDD
  global real camFarVsp3FDE
  global tensor[3] camN3FDF
  global tensor[3] camU3FE0
  global tensor[3] camV3FE1
  global real camVmax3FE2
  global real camUmax3FE3
## functions
  function femData:MeshPos _msh_newtonInverse4281 (tensor[2] pos4282#2, int cellInt4283#2, femData:Mesh mesh4284#12) {
    ENTRY4285:  preds = []
      real _t4286#2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[2] xn4288#1 = <tensor[2]>[_t4286,_t4286];
      int _t428A#1 = 0;
      int _t428C#1 = 16;
      int[] _t428E#1 = Range(_t428A,_t428C);
    FOREACH4291:  preds = [ASSIGN428F,NEXT44E8]
      foreach (itter4290 in _t428E) on exit goto ASSIGN44ED
        tensor[2] xn4408#3 = phi(xn4288,xn447C)
      int ilit4293#1 = 3;
      int mulRes4294#3 = IMul(cellInt4283,ilit4293);
      int idx4297#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,mulRes4294);
      int ilit4298#4 = 1;
      int addRes4299#1 = IAdd(mulRes4294,ilit4298);
      int idx429A#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes4299);
      int ilit429B#4 = 2;
      int addRes429C#1 = IAdd(mulRes4294,ilit429B);
      int idx429D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh4284,addRes429C);
      int mulRes42B0#2 = IMul(ilit429B,idx4297);
      int addRes42B3#1 = IAdd(ilit4298,mulRes42B0);
      real dof_load42B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B0);
      real dof_load42B5#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42B3);
      int mulRes42B8#2 = IMul(ilit429B,idx429A);
      int addRes42BA#1 = IAdd(ilit4298,mulRes42B8);
      real dof_load42BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42B8);
      real dof_load42BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42BA);
      int mulRes42BF#2 = IMul(ilit429B,idx429D);
      int addRes42C1#1 = IAdd(ilit4298,mulRes42BF);
      real dof_load42C2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,mulRes42BF);
      real dof_load42C3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh4284,addRes42C1);
      real coeff42E3#8 = -0.1e1;
      real one42E4#15 = 0.1e1;
      real prod42E5#2 = RMul(one42E4,one42E4);
      real basisEval42E6#2 = RMul(coeff42E3,prod42E5);
      real basisEval42E7#5 = RMul(one42E4,prod42E5);
      real basisEval42E8#12 = 0.e0;
      real r42FB#2 = RMul(dof_load42B4,basisEval42E6);
      real r42FE#1 = RMul(dof_load42BB,basisEval42E7);
      real r4301#1 = RMul(dof_load42C2,basisEval42E8);
      real r4302#1 = RAdd(r42FB,r42FE);
      real r4303#3 = RAdd(r4302,r4301);
      real r4307#1 = RMul(dof_load42BB,basisEval42E8);
      real r4309#1 = RMul(dof_load42C2,basisEval42E7);
      real r430A#1 = RAdd(r42FB,r4307);
      real r430B#3 = RAdd(r430A,r4309);
      real r430E#2 = RMul(dof_load42B5,basisEval42E6);
      real r4310#1 = RMul(dof_load42BC,basisEval42E7);
      real r4312#1 = RMul(dof_load42C3,basisEval42E8);
      real r4313#1 = RAdd(r430E,r4310);
      real r4314#3 = RAdd(r4313,r4312);
      real r4316#1 = RMul(dof_load42BC,basisEval42E8);
      real r4317#1 = RMul(dof_load42C3,basisEval42E7);
      real r4318#1 = RAdd(r430E,r4316);
      real r4319#3 = RAdd(r4318,r4317);
      real r4342#1 = RMul(basisEval42E8,r4303);
      real r4345#1 = RMul(coeff42E3,r4314);
      real r4346#2 = RAdd(r4342,r4345);
      real r4348#2 = RMul(basisEval42E8,r430B);
      real r434A#1 = RMul(coeff42E3,r4319);
      real r434B#2 = RAdd(r4348,r434A);
      real r434E#1 = RMul(one42E4,r4303);
      real r434F#1 = RMul(basisEval42E8,r4314);
      real r4350#2 = RAdd(r434E,r434F);
      real r4351#1 = RMul(one42E4,r430B);
      real r4352#2 = RMul(basisEval42E8,r4319);
      real r4353#2 = RAdd(r4351,r4352);
      tensor[2] probe_l_12436C#1 = <tensor[2]>[r4303,r4314];
      real r43C4#1 = RMul(one42E4,r4319);
      real r43C5#1 = RAdd(r4348,r43C4);
      real r43C7#1 = RMul(coeff42E3,r430B);
      real r43C9#1 = RAdd(r43C7,r4352);
      tensor[2] op1_e3_l_1443BE#1 = <tensor[2]>[r43C5,r43C9];
      real r43DA#1 = RMul(basisEval42E8,r4346);
      real r43DD#1 = RMul(coeff42E3,r434B);
      real r43DE#1 = RAdd(r43DA,r43DD);
      real r43E0#1 = RMul(basisEval42E8,r4350);
      real r43E2#1 = RMul(coeff42E3,r4353);
      real r43E3#1 = RAdd(r43E0,r43E2);
      real r43E6#1 = RMul(one42E4,r4346);
      real r43E7#1 = RMul(basisEval42E8,r434B);
      real r43E8#1 = RAdd(r43E6,r43E7);
      real r43E9#1 = RMul(one42E4,r4350);
      real r43EA#1 = RMul(basisEval42E8,r4353);
      real r43EB#1 = RAdd(r43E9,r43EA);
      real op1_e3_l_164404#4 = VDot<2>(probe_l_12436C,op1_e3_l_1443BE);
      real varAcc4409#1 = VIndex<2,0>(xn4408);
      real varAcc440A#1 = VIndex<2,1>(xn4408);
      real prod440E#2 = RMul(varAcc4409,one42E4);
      real prod4410#2 = RMul(one42E4,varAcc440A);
      real mult4413#1 = RMul(coeff42E3,prod4410);
      real mult4414#1 = RMul(coeff42E3,prod440E);
      real sum4415#1 = RAdd(mult4413,mult4414);
      real sum4416#2 = RAdd(basisEval42E7,sum4415);
      real basisEval4418#2 = RMul(one42E4,prod440E);
      real basisEval4419#2 = RMul(one42E4,prod4410);
      real r4431#1 = RMul(dof_load42B4,sum4416);
      real r4434#1 = RMul(dof_load42BB,basisEval4418);
      real r4437#1 = RMul(dof_load42C2,basisEval4419);
      real r4438#1 = RAdd(r4431,r4434);
      real r4439#1 = RAdd(r4438,r4437);
      real r443B#1 = RMul(dof_load42B5,sum4416);
      real r443D#1 = RMul(dof_load42BC,basisEval4418);
      real r443F#1 = RMul(dof_load42C3,basisEval4419);
      real r4440#1 = RAdd(r443B,r443D);
      real r4441#1 = RAdd(r4440,r443F);
      tensor[2] probe_l_17442E#1 = <tensor[2]>[r4439,r4441];
      real r4459#1 = RDiv(r43DE,op1_e3_l_164404);
      real r445B#1 = RDiv(r43E3,op1_e3_l_164404);
      tensor[2] tensor445C#1 = <tensor[2]>[r4459,r445B];
      real r445E#1 = RDiv(r43E8,op1_e3_l_164404);
      real r4460#1 = RDiv(r43EB,op1_e3_l_164404);
      tensor[2] tensor4461#1 = <tensor[2]>[r445E,r4460];
      tensor[2] op1_e3_l_19446E#2 = VSub<2>(probe_l_17442E,pos4282);
      real vdot4473#1 = VDot<2>(tensor445C,op1_e3_l_19446E);
      real vdot4475#1 = VDot<2>(tensor4461,op1_e3_l_19446E);
      tensor[2] op1_e3_l_204471#3 = <tensor[2]>[vdot4473,vdot4475];
      tensor[2] xn447C#4 = VSub<2>(xn4408,op1_e3_l_204471);
      real _t447F#2 = 0.1e-7;
      real _t4481#1 = RMul(_t447F,_t447F);
      real _t44BB#1 = VDot<2>(op1_e3_l_204471,op1_e3_l_204471);
      bool _t44BE#1 = GTE<real>(_t4481,_t44BB);
      if _t44BE then goto ASSIGN44C4 else goto JOIN44E7
    ASSIGN44C4:  preds = [COND44C0]
      real _t44C3#3 = 0.1e-8;
      real _t44C5#1 = RAdd(one42E4,_t44C3);
      tensor[2] _t44C8#1 = <tensor[2]>[one42E4,one42E4];
      real _t44CA#1 = VDot<2>(_t44C8,xn447C);
      bool _t44CD#1 = GT<real>(_t44C5,_t44CA);
      tensor[2] _t44CF#1 = <tensor[2]>[_t44C3,_t44C3];
      tensor[2] _t44D1#2 = VAdd<2>(_t44CF,xn447C);
      real _t44D4#1 = VIndex<2,0>(_t44D1);
      real _t44D6#2 = -0.e0;
      bool _t44D8#1 = GT<real>(_t44D4,_t44D6);
      real _t44DA#1 = VIndex<2,1>(_t44D1);
      bool _t44DC#1 = GT<real>(_t44DA,_t44D6);
      bool _t44DE#1 = BAnd(_t44D8,_t44DC);
      bool _t44E0#1 = BAnd(_t44CD,_t44DE);
      if _t44E0 then goto ASSIGN44E4 else goto ASSIGN44EA
    ASSIGN44E4:  preds = [COND44E2]
      femData:MeshPos _t44E3#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh4284,cellInt4283,xn447C,pos4282);
      return _t44E3
      goto JOIN44E6
    JOIN44E6:  preds = [*RETURN(_t44E3)44E5,*RETURN(_t44E9)44EB]
      goto JOIN44E7
    JOIN44E7:  preds = [*JOIN44E6,COND44C0]
      goto FOREACH4291
    ASSIGN44EA:  preds = [COND44E2]
      femData:MeshPos _t44E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44E9
      goto JOIN44E6
    ASSIGN44ED:  preds = [FOREACH4291]
      femData:MeshPos _t44EC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh4284);
      return _t44EC
}
  function int[2] nextCell45006 (int faceIdx5007#1, int cell5008#1, femData:Mesh mesh5009#1) {
    ENTRY500A:  preds = []
      int _t500B#1 = 6;
      int _t500D#1 = IMul(cell5008,_t500B);
      int _t500F#1 = 2;
      int _t5011#1 = IMul(faceIdx5007,_t500F);
      int _t5013#1 = IAdd(_t500D,_t5011);
      int[2] _t5015#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh5009,_t5013);
      return _t5015
}
## input initialization
  ENTRY3FE4:  preds = []
    real isoval3FE5#1 = 0.2e0;
    globals.isoval3FC9 = isoval3FE5;
    real thick3FE8#1 = 0.7e-1;
    globals.thick3FCA = thick3FE8;
    real _t3FEB#2 = 0.3e1;
    real _t3FED#1 = -0.3e1;
    tensor[3] camEye3FEF#1 = <tensor[3]>[_t3FEB,_t3FED,_t3FEB];
    globals.camEye3FCB = camEye3FEF;
    real _t3FF2#3 = 0.5e0;
    tensor[3] camAt3FF4#1 = <tensor[3]>[_t3FF2,_t3FF2,_t3FF2];
    globals.camAt3FCC = camAt3FF4;
    real _t3FF7#2 = 0.e0;
    real _t3FF9#2 = 0.1e1;
    tensor[3] camUp3FFB#2 = <tensor[3]>[_t3FF7,_t3FF7,_t3FF9];
    globals.camUp3FCD = camUp3FFB;
    real camFOV3FFE#1 = 0.137e2;
    globals.camFOV3FCE = camFOV3FFE;
    int iresU4001#2 = 10;
    globals.iresU3FCF = iresU4001;
    globals.iresV3FD0 = iresU4001;
    real camNear4005#1 = -0.2e1;
    globals.camNear3FD1 = camNear4005;
    real camFar4008#1 = 0.5e1;
    globals.camFar3FD2 = camFar4008;
    globals.refStep3FD3 = _t3FF9;
    real rayStep400C#1 = 0.1e-1;
    globals.rayStep3FD4 = rayStep400C;
    globals.lightVsp3FD5 = camUp3FFB;
    real phongKa4010#1 = 0.1e0;
    globals.phongKa3FD6 = phongKa4010;
    real phongKd4013#1 = 0.9e0;
    globals.phongKd3FD7 = phongKd4013;
    bool debug4016#1 = false;
    globals.debug3FD8 = debug4016;
    int debugU4019#1 = 8;
    globals.debugU3FD9 = debugU4019;
    int debugV401C#1 = 2;
    globals.debugV3FDA = debugV401C;
    real eps401F#1 = 0.1e-7;
    globals.eps3FDB = eps401F;
    return
## global-variable initialization
  ENTRY4023:  preds = []
    femData:Mesh a4024#2 = globals.a3FC8;
    tensor[3] camEye4026#1 = globals.camEye3FCB;
    tensor[3] camAt4028#1 = globals.camAt3FCC;
    tensor[3] camUp402A#3 = globals.camUp3FCD;
    real camFOV402C#1 = globals.camFOV3FCE;
    int iresU402E#1 = globals.iresU3FCF;
    int iresV4030#1 = globals.iresV3FD0;
    real camNear4032#1 = globals.camNear3FD1;
    real camFar4034#1 = globals.camFar3FD2;
    int _t4036#1 = 0;
    int _t4038#1 = 1;
    int _t403A#1 = ExtractFemItem<int,NumCell(Mesh)>(a4024);
    int _t403C#1 = ISub(_t403A,_t4038);
    int[] _t403E#1 = Range(_t4036,_t403C);
    femData:MeshCell[] _t4040#1 = <femData:MeshCell[]>{};
  FOREACH4043:  preds = [ASSIGN4041,NEXT4049]
    foreach (_t4042 in _t403E) on exit goto GASSIGN404A
      femData:MeshCell[] _t4047#2 = phi(_t4040,_t4046)
    femData:MeshCell _t4044#1 = LoadFem<femData:MeshCell>(a4024,_t4042);
    femData:MeshCell[] _t4046#1 = Append<femData:MeshCell>(_t4047,_t4044);
    goto FOREACH4043
  GASSIGN404A:  preds = [FOREACH4043]
    globals.0cell_a3FDC = _t4047;
    tensor[3] op1_e3_l_3404B#9 = VSub<3>(camAt4028,camEye4026);
    real op1_e3_l_5404E#1 = VDot<3>(op1_e3_l_3404B,op1_e3_l_3404B);
    real op1_e3_l_64051#5 = Sqrt(op1_e3_l_5404E);
    real camNearVsp4054#1 = RAdd(camNear4032,op1_e3_l_64051);
    globals.camNearVsp3FDD = camNearVsp4054;
    real camFarVsp4058#1 = RAdd(camFar4034,op1_e3_l_64051);
    globals.camFarVsp3FDE = camFarVsp4058;
    real realLit405D#8 = 0.1e1;
    real op1_e3_l_9405C#6 = RDiv(realLit405D,op1_e3_l_64051);
    tensor[3] camN4061#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_3404B);
    globals.camN3FDF = camN4061;
    real realLit4066#6 = 0.e0;
    real r4067#3 = TensorIndex<tensor[3],[0]>(camUp402A);
    real r4068#3 = RMul(realLit4066,r4067);
    real r4069#3 = TensorIndex<tensor[3],[1]>(camUp402A);
    real r406A#3 = RMul(realLit4066,r4069);
    real r406B#3 = TensorIndex<tensor[3],[2]>(camUp402A);
    real r406C#5 = RMul(realLit4066,r406B);
    real r406D#3 = RAdd(r4068,r406A);
    real r406E#3 = RAdd(r406D,r406C);
    real r4070#1 = RMul(realLit405D,r406B);
    real r4071#1 = RAdd(r406D,r4070);
    real realLit4072#6 = -0.1e1;
    real r4073#1 = RMul(realLit4072,r4069);
    real r4074#1 = RAdd(r4068,r4073);
    real r4075#1 = RAdd(r4074,r406C);
    tensor[3] tensor4076#1 = <tensor[3]>[r406E,r4071,r4075];
    real r4077#1 = RMul(realLit4072,r406B);
    real r4078#1 = RAdd(r406D,r4077);
    real r4079#1 = RMul(realLit405D,r4067);
    real r407A#1 = RAdd(r4079,r406A);
    real r407B#1 = RAdd(r407A,r406C);
    tensor[3] tensor407C#1 = <tensor[3]>[r4078,r406E,r407B];
    real r407D#1 = RMul(realLit405D,r4069);
    real r407E#1 = RAdd(r4068,r407D);
    real r407F#1 = RAdd(r407E,r406C);
    real r4080#1 = RMul(realLit4072,r4067);
    real r4081#1 = RAdd(r4080,r406A);
    real r4082#1 = RAdd(r4081,r406C);
    tensor[3] tensor4083#1 = <tensor[3]>[r407F,r4082,r406E];
    real vdot40A6#1 = VDot<3>(op1_e3_l_3404B,tensor4076);
    real vdot40A8#1 = VDot<3>(op1_e3_l_3404B,tensor407C);
    real vdot40AA#1 = VDot<3>(op1_e3_l_3404B,tensor4083);
    tensor[3] op1_e3_l_1740A4#6 = <tensor[3]>[vdot40A6,vdot40A8,vdot40AA];
    real op1_e3_l_3440B3#1 = VDot<3>(op1_e3_l_1740A4,op1_e3_l_1740A4);
    real r40B7#1 = RMul(op1_e3_l_9405C,op1_e3_l_9405C);
    real op1_e3_l_3540B6#1 = RMul(r40B7,op1_e3_l_3440B3);
    real op1_e3_l_3640BB#1 = Sqrt(op1_e3_l_3540B6);
    tensor[3] op1_e3_l_3740BE#1 = VScale<3>(op1_e3_l_9405C,op1_e3_l_1740A4);
    real op1_e3_l_3840C1#2 = RDiv(realLit405D,op1_e3_l_3640BB);
    tensor[3] camU40C6#1 = VScale<3>(op1_e3_l_3840C1,op1_e3_l_3740BE);
    globals.camU3FE0 = camU40C6;
    real r40CC#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_3404B);
    real r40CD#3 = RMul(realLit4066,r40CC);
    real r40CE#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_3404B);
    real r40CF#3 = RMul(realLit4066,r40CE);
    real r40D0#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_3404B);
    real r40D1#5 = RMul(realLit4066,r40D0);
    real r40D2#3 = RAdd(r40CD,r40CF);
    real r40D3#3 = RAdd(r40D2,r40D1);
    real r40D5#1 = RMul(realLit405D,r40D0);
    real r40D6#1 = RAdd(r40D2,r40D5);
    real r40D8#1 = RMul(realLit4072,r40CE);
    real r40D9#1 = RAdd(r40CD,r40D8);
    real r40DA#1 = RAdd(r40D9,r40D1);
    tensor[3] tensor40DB#1 = <tensor[3]>[r40D3,r40D6,r40DA];
    real r40DC#1 = RMul(realLit4072,r40D0);
    real r40DD#1 = RAdd(r40D2,r40DC);
    real r40DE#1 = RMul(realLit405D,r40CC);
    real r40DF#1 = RAdd(r40DE,r40CF);
    real r40E0#1 = RAdd(r40DF,r40D1);
    tensor[3] tensor40E1#1 = <tensor[3]>[r40DD,r40D3,r40E0];
    real r40E2#1 = RMul(realLit405D,r40CE);
    real r40E3#1 = RAdd(r40CD,r40E2);
    real r40E4#1 = RAdd(r40E3,r40D1);
    real r40E5#1 = RMul(realLit4072,r40CC);
    real r40E6#1 = RAdd(r40E5,r40CF);
    real r40E7#1 = RAdd(r40E6,r40D1);
    tensor[3] tensor40E8#1 = <tensor[3]>[r40E4,r40E7,r40D3];
    real vdot410B#1 = VDot<3>(op1_e3_l_1740A4,tensor40DB);
    real vdot410D#1 = VDot<3>(op1_e3_l_1740A4,tensor40E1);
    real vdot410F#1 = VDot<3>(op1_e3_l_1740A4,tensor40E8);
    tensor[3] op1_e3_l_474109#1 = <tensor[3]>[vdot410B,vdot410D,vdot410F];
    tensor[3] op1_e3_l_504118#3 = VScale<3>(op1_e3_l_9405C,op1_e3_l_474109);
    real r411C#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_504118);
    real r411D#3 = RMul(op1_e3_l_3840C1,op1_e3_l_9405C);
    real r411E#1 = RMul(r411D,r411C);
    real r411F#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_504118);
    real r4120#1 = RMul(r411D,r411F);
    real r4121#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_504118);
    real r4122#1 = RMul(r411D,r4121);
    tensor[3] camV411B#1 = <tensor[3]>[r411E,r4120,r4122];
    globals.camV3FE1 = camV411B;
    real _t412D#1 = 0.314159265358979323846264338327950288e1;
    real _t412F#1 = 0.36e3;
    real op1_e3_l_54131#1 = RMul(camFOV402C,_t412D);
    real op1_e3_l_64134#1 = RDiv(op1_e3_l_54131,_t412F);
    real op1_e3_l_104137#2 = Tan(op1_e3_l_64134);
    real camVmax413A#1 = RMul(op1_e3_l_104137,op1_e3_l_64051);
    globals.camVmax3FE2 = camVmax413A;
    real _t413E#1 = IntToReal(iresU402E);
    real _t4140#1 = IntToReal(iresV4030);
    real r4143#1 = RMul(_t413E,op1_e3_l_104137);
    real op1_e3_l_144142#1 = RMul(r4143,op1_e3_l_64051);
    real camUmax4147#1 = RDiv(op1_e3_l_144142,_t4140);
    globals.camUmax3FE3 = camUmax4147;
    return
## strand
  strand ray (int ui414C#2, int vi414D#2)
    state:
      real rayU;
      real rayV;
      tensor[3] UV;
      output tensor[3] rayOrig;
      output tensor[3] rayVec;
      output real camNearVsp;
      output real camFarVsp;
      tensor[3] rayStart;
      tensor[2] rayStartProj;
      tensor[3] rayEnd;
      tensor[3] dpos;
      tensor[2] dposProj;
      output femData:MeshPos[] poses;
      output real[] normalizedTimes;
      int cellIntersects;
      output tensor[2][] rayCellInter;
      output tensor[3][] spaceInter;
      output tensor[2][] refSpaceInter;
      output femData:MeshCell[] cellInter;
      int currentCellInt;
      real rayN;
      femData:MeshCell currentCell;
      int steps;
      femData:MeshPos pos;
      bool startsInside;
      int ui;
      int vi;
    state init
      ENTRY4169:  preds = []
        femData:Mesh a416A#1 = globals.a3FC8;
        femData:MeshCell[] 0cell_a416C#1 = globals.0cell_a3FDC;
        tensor[3] camEye416E#1 = globals.camEye3FCB;
        int iresU4170#1 = globals.iresU3FCF;
        int iresV4172#1 = globals.iresV3FD0;
        real camNearVsp4174#2 = globals.camNearVsp3FDD;
        real camFarVsp4176#2 = globals.camFarVsp3FDE;
        tensor[3] camN4178#1 = globals.camN3FDF;
        tensor[3] camU417A#1 = globals.camU3FE0;
        tensor[3] camV417C#1 = globals.camV3FE1;
        real camVmax417E#2 = globals.camVmax3FE2;
        real camUmax4180#2 = globals.camUmax3FE3;
        real _t4182#4 = -0.5e0;
        real _t4184#1 = IntToReal(ui414C);
        real _t4186#1 = IntToReal(iresU4170);
        real _t4188#2 = 0.5e0;
        real op1_e3_l_6418A#1 = RSub(_t4186,_t4188);
        real op1_e3_l_7418D#1 = RSub(_t4184,_t4182);
        real op1_e3_l_84190#1 = RSub(op1_e3_l_6418A,_t4182);
        real op1_e3_l_94193#2 = RNeg(camUmax4180);
        real op1_e3_l_104196#1 = RDiv(op1_e3_l_7418D,op1_e3_l_84190);
        real op1_e3_l_114199#1 = RSub(camUmax4180,op1_e3_l_94193);
        real op1_e3_l_13419C#1 = RMul(op1_e3_l_104196,op1_e3_l_114199);
        real rayU419F#2 = RAdd(op1_e3_l_94193,op1_e3_l_13419C);
        real _t41A2#1 = IntToReal(vi414D);
        real _t41A4#1 = IntToReal(iresV4172);
        real op1_e3_l_641A6#1 = RSub(_t41A4,_t4188);
        real op1_e3_l_741A9#1 = RSub(_t41A2,_t4182);
        real op1_e3_l_841AC#1 = RSub(op1_e3_l_641A6,_t4182);
        real op1_e3_l_941AF#2 = RNeg(camVmax417E);
        real op1_e3_l_1041B2#1 = RDiv(op1_e3_l_741A9,op1_e3_l_841AC);
        real op1_e3_l_1141B5#1 = RSub(camVmax417E,op1_e3_l_941AF);
        real op1_e3_l_1341B8#1 = RMul(op1_e3_l_1041B2,op1_e3_l_1141B5);
        real rayV41BB#2 = RAdd(op1_e3_l_941AF,op1_e3_l_1341B8);
        tensor[3] op1_e3_l_3241CD#2 = VScale<3>(rayU419F,camU417A);
        tensor[3] op1_e3_l_3341D0#2 = VScale<3>(rayV41BB,camV417C);
        tensor[3] UV41D3#1 = VAdd<3>(op1_e3_l_3241CD,op1_e3_l_3341D0);
        tensor[3] v41D7#1 = VAdd<3>(camEye416E,op1_e3_l_3241CD);
        tensor[3] rayOrig41D6#3 = VAdd<3>(v41D7,op1_e3_l_3341D0);
        real _t41DB#4 = 0.e0;
        tensor[3] _t41DD#1 = <tensor[3]>[_t41DB,_t41DB,_t41DB];
        tensor[3] rayVec41DF#3 = VAdd<3>(camN4178,_t41DD);
        tensor[3] op1_e3_l_3941E2#1 = VScale<3>(camNearVsp4174,rayVec41DF);
        tensor[3] rayStart41E5#4 = VAdd<3>(rayOrig41D6,op1_e3_l_3941E2);
        real _t41EC#1 = VIndex<3,0>(rayStart41E5);
        real _t41EE#1 = VIndex<3,1>(rayStart41E5);
        tensor[2] rayStartProj41F0#1 = <tensor[2]>[_t41EC,_t41EE];
        tensor[3] op1_e3_l_3941F2#1 = VScale<3>(camFarVsp4176,rayVec41DF);
        tensor[3] rayEnd41F5#2 = VAdd<3>(rayOrig41D6,op1_e3_l_3941F2);
        tensor[3] dpos41FC#3 = VSub<3>(rayEnd41F5,rayStart41E5);
        real _t41FF#1 = VIndex<3,0>(dpos41FC);
        real _t4201#1 = VIndex<3,1>(dpos41FC);
        tensor[2] dposProj4203#1 = <tensor[2]>[_t41FF,_t4201];
        femData:MeshPos[0] _t4205#1 = <femData:MeshPos[0]>{};
        femData:MeshPos[] _t4207#1 = MkDynamic<femData:MeshPos,0>(_t4205);
        real[0] _t4209#1 = <real[0]>{};
        real[] _t420B#1 = MkDynamic<real,0>(_t4209);
        int cellIntersects420D#3 = 0;
        tensor[2][0] _t420F#1 = <tensor[2][0]>{};
        tensor[2][] _t4211#1 = MkDynamic<tensor[2],0>(_t420F);
        tensor[3][0] _t4213#1 = <tensor[3][0]>{};
        tensor[3][] _t4215#1 = MkDynamic<tensor[3],0>(_t4213);
        tensor[2][0] _t4217#1 = <tensor[2][0]>{};
        tensor[2][] _t4219#1 = MkDynamic<tensor[2],0>(_t4217);
        femData:MeshCell[0] _t421B#1 = <femData:MeshCell[0]>{};
        femData:MeshCell[] _t421D#1 = MkDynamic<femData:MeshCell,0>(_t421B);
        int currentCellInt421F#1 = -1;
        femData:MeshCell currentCell4221#1 = Subscript<femData:MeshCell[]>(0cell_a416C,cellIntersects420D);
        femData:MeshPos pos4223#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(a416A);
        bool startsInside4225#1 = false;
        self.rayU = rayU419F;
        self.rayV = rayV41BB;
        self.UV = UV41D3;
        self.rayOrig = rayOrig41D6;
        self.rayVec = rayVec41DF;
        self.camNearVsp = camNearVsp4174;
        self.camFarVsp = camFarVsp4176;
        self.rayStart = rayStart41E5;
        self.rayStartProj = rayStartProj41F0;
        self.rayEnd = rayEnd41F5;
        self.dpos = dpos41FC;
        self.dposProj = dposProj4203;
        self.poses = _t4207;
        self.normalizedTimes = _t420B;
        self.cellIntersects = cellIntersects420D;
        self.rayCellInter = _t4211;
        self.spaceInter = _t4215;
        self.refSpaceInter = _t4219;
        self.cellInter = _t421D;
        self.currentCellInt = currentCellInt421F;
        self.rayN = _t41DB;
        self.currentCell = currentCell4221;
        self.steps = cellIntersects420D;
        self.pos = pos4223;
        self.startsInside = startsInside4225;
        self.ui = ui414C;
        self.vi = vi414D;
        return
    end state init
    method start
        ENTRY4243:  preds = []
          femData:MeshCell[] 0cell_a4244#1 = globals.0cell_a3FDC;
          bool debug4246#1 = globals.debug3FD8;
          int debugU4248#1 = globals.debugU3FD9;
          int debugV424A#1 = globals.debugV3FDA;
          tensor[3] rayOrig424C#2 = self.rayOrig;
          tensor[3] rayVec424E#1 = self.rayVec;
          real camNearVsp4250#5 = self.camNearVsp;
          real camFarVsp4252#3 = self.camFarVsp;
          tensor[2] rayStartProj4254#3 = self.rayStartProj;
          tensor[2] dposProj4256#3 = self.dposProj;
          femData:MeshPos[] poses4258#1 = self.poses;
          real[] normalizedTimes425A#1 = self.normalizedTimes;
          int cellIntersects425C#1 = self.cellIntersects;
          tensor[3][] spaceInter425E#1 = self.spaceInter;
          int currentCellInt4260#1 = self.currentCellInt;
          bool startsInside4262#2 = self.startsInside;
          int ui4264#2 = self.ui;
          int vi4266#2 = self.vi;
          bool _t4268#1 = NEQ<int>(ui4264,debugU4248);
          if _t4268 then goto ASSIGN426C else goto ASSIGN4B4B
        ASSIGN426C:  preds = [COND426A]
          bool _t426B#1 = true;
          goto JOIN426F
        JOIN426F:  preds = [ASSIGN426C,ASSIGN4B4B]
          bool _t426D#1 = phi(_t426B,_t426E)
          if _t426D then goto COND4271 else goto JOIN4274
        COND4271:  preds = [COND4270]
          if debug4246 then goto STABILIZE4272 else goto JOIN4273
        STABILIZE4272:  preds = [COND4271]
          stabilize
          goto JOIN4273
        JOIN4273:  preds = [*STABILIZE4272,COND4271]
          goto JOIN4274
        JOIN4274:  preds = [JOIN4273,COND4270]
        FOREACH4276:  preds = [JOIN4274,NEXT4513]
          foreach (c4275 in 0cell_a4244) on exit goto ASSIGN4AE9
            real startTime4AD7#3 = phi(camFarVsp4252,startTime4507)
            bool startsInside4AE7#2 = phi(startsInside4262,startsInside4509)
            int currentCellInt4ADC#6 = phi(currentCellInt4260,currentCellInt450A)
            int cellIntersects4503#8 = phi(cellIntersects425C,cellIntersects450C)
            real[] normalizedTimes44FE#7 = phi(normalizedTimes425A,normalizedTimes450E)
            femData:MeshPos[] poses44FB#7 = phi(poses4258,poses4510)
          string _t4277#1 = "Cell:";
          string _t4279#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t4277,c4275,_t4279);
          int _t427C#4 = ExtractFemItem<int,CellIndex(MeshCell)>(c4275);
          femData:Mesh _t427E#12 = ExtractFem<femData:Mesh,femData:MeshCell>(c4275);
          femData:MeshPos _t4280#2 = _msh_newtonInverse4281 (rayStartProj4254,_t427C,_t427E);
          bool _t44F0#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t4280);
          if _t44F0 then goto ASSIGN44F4 else goto ASSIGN4515
        ASSIGN44F4:  preds = [COND44F2]
          string _t44F3#1 = "pos starts inside\n";
          Print<[string]>(_t44F3);
          tensor[2] refPos44F6#1 = ExtractFemItem<tensor[2],RefPos(Mesh)>(_t4280);
          femData:MeshPos p44F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t427E,_t427C,refPos44F6);
          femData:MeshPos[] poses44FA#1 = Append<femData:MeshPos>(poses44FB,p44F8);
          real[] normalizedTimes44FD#1 = Append<real>(normalizedTimes44FE,camNearVsp4250);
          int _t4500#1 = 1;
          int cellIntersects4502#1 = IAdd(cellIntersects4503,_t4500);
          bool startsInside4505#1 = true;
          goto JOIN4512
        JOIN4512:  preds = [ASSIGN4506,JOIN4AE2]
          real startTime4507#1 = phi(camNearVsp4250,startTime4508)
          bool startsInside4509#1 = phi(startsInside4505,startsInside4262)
          int currentCellInt450A#1 = phi(cellIntersects4503,currentCellInt450B)
          int cellIntersects450C#1 = phi(cellIntersects4502,cellIntersects450D)
          real[] normalizedTimes450E#1 = phi(normalizedTimes44FD,normalizedTimes450F)
          femData:MeshPos[] poses4510#1 = phi(poses44FA,poses4511)
          goto FOREACH4276
        ASSIGN4515:  preds = [COND44F2]
          real _t4514#26 = -0.e0;
          tensor[2] _t4516#2 = <tensor[2]>[_t4514,_t4514];
          real time4518#9 = +inf;
          int face451A#12 = -1;
          real _t451C#61 = 0.1e1;
          real _t451E#34 = 0.e0;
          tensor[2] _t4520#1 = <tensor[2]>[_t451C,_t451E];
          real _t4522#25 = -0.1e1;
          int ilit4527#1 = 3;
          int mulRes4528#3 = IMul(_t427C,ilit4527);
          int idx452B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,mulRes4528);
          int ilit452C#9 = 1;
          int addRes452D#1 = IAdd(mulRes4528,ilit452C);
          int idx452E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes452D);
          int ilit452F#8 = 2;
          int addRes4530#1 = IAdd(mulRes4528,ilit452F);
          int idx4531#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t427E,addRes4530);
          int mulRes4544#2 = IMul(ilit452F,idx452B);
          int addRes4547#1 = IAdd(ilit452C,mulRes4544);
          real dof_load4548#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4544);
          real dof_load4549#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4547);
          int mulRes454C#2 = IMul(ilit452F,idx452E);
          int addRes454E#1 = IAdd(ilit452C,mulRes454C);
          real dof_load454F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes454C);
          real dof_load4550#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes454E);
          int mulRes4553#2 = IMul(ilit452F,idx4531);
          int addRes4555#1 = IAdd(ilit452C,mulRes4553);
          real dof_load4556#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,mulRes4553);
          real dof_load4557#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t427E,addRes4555);
          real prod4579#4 = RMul(_t451C,_t451C);
          real basisEval457A#2 = RMul(_t4522,prod4579);
          real basisEval457B#5 = RMul(_t451C,prod4579);
          real r458F#2 = RMul(dof_load4548,basisEval457A);
          real r4592#1 = RMul(dof_load454F,basisEval457B);
          real r4595#1 = RMul(dof_load4556,_t451E);
          real r4596#1 = RAdd(r458F,r4592);
          real r4597#3 = RAdd(r4596,r4595);
          real r459B#1 = RMul(dof_load454F,_t451E);
          real r459D#1 = RMul(dof_load4556,basisEval457B);
          real r459E#1 = RAdd(r458F,r459B);
          real r459F#3 = RAdd(r459E,r459D);
          real r45A2#2 = RMul(dof_load4549,basisEval457A);
          real r45A4#1 = RMul(dof_load4550,basisEval457B);
          real r45A6#1 = RMul(dof_load4557,_t451E);
          real r45A7#1 = RAdd(r45A2,r45A4);
          real r45A8#3 = RAdd(r45A7,r45A6);
          real r45AA#1 = RMul(dof_load4550,_t451E);
          real r45AB#1 = RMul(dof_load4557,basisEval457B);
          real r45AC#1 = RAdd(r45A2,r45AA);
          real r45AD#3 = RAdd(r45AC,r45AB);
          real r45D6#1 = RMul(_t451E,r4597);
          real r45D9#1 = RMul(_t4522,r45A8);
          real r45DA#2 = RAdd(r45D6,r45D9);
          real r45DC#2 = RMul(_t451E,r459F);
          real r45DE#1 = RMul(_t4522,r45AD);
          real r45DF#2 = RAdd(r45DC,r45DE);
          real r45E2#1 = RMul(_t451C,r4597);
          real r45E3#1 = RMul(_t451E,r45A8);
          real r45E4#2 = RAdd(r45E2,r45E3);
          real r45E5#1 = RMul(_t451C,r459F);
          real r45E6#2 = RMul(_t451E,r45AD);
          real r45E7#2 = RAdd(r45E5,r45E6);
          tensor[2] probe_l_194600#1 = <tensor[2]>[r4597,r45A8];
          real r4658#1 = RMul(_t451C,r45AD);
          real r4659#1 = RAdd(r45DC,r4658);
          real r465B#1 = RMul(_t4522,r459F);
          real r465D#1 = RAdd(r465B,r45E6);
          tensor[2] op1_e3_l_214652#1 = <tensor[2]>[r4659,r465D];
          real r466E#1 = RMul(_t451E,r45DA);
          real r4671#1 = RMul(_t4522,r45DF);
          real r4672#1 = RAdd(r466E,r4671);
          real r4674#1 = RMul(_t451E,r45E4);
          real r4676#1 = RMul(_t4522,r45E7);
          real r4677#1 = RAdd(r4674,r4676);
          real r467A#1 = RMul(_t451C,r45DA);
          real r467B#1 = RMul(_t451E,r45DF);
          real r467C#1 = RAdd(r467A,r467B);
          real r467D#1 = RMul(_t451C,r45E4);
          real r467E#1 = RMul(_t451E,r45E7);
          real r467F#1 = RAdd(r467D,r467E);
          real op1_e3_l_234698#4 = VDot<2>(probe_l_194600,op1_e3_l_214652);
          real varAcc469C#1 = VIndex<2,0>(_t4516);
          real varAcc469D#1 = VIndex<2,1>(_t4516);
          real prod46A1#2 = RMul(varAcc469C,_t451C);
          real prod46A3#2 = RMul(_t451C,varAcc469D);
          real mult46A6#1 = RMul(_t4522,prod46A3);
          real mult46A7#1 = RMul(_t4522,prod46A1);
          real sum46A8#1 = RAdd(mult46A6,mult46A7);
          real sum46A9#2 = RAdd(basisEval457B,sum46A8);
          real basisEval46AB#2 = RMul(_t451C,prod46A1);
          real basisEval46AC#2 = RMul(_t451C,prod46A3);
          real r46C4#1 = RMul(dof_load4548,sum46A9);
          real r46C7#1 = RMul(dof_load454F,basisEval46AB);
          real r46CA#1 = RMul(dof_load4556,basisEval46AC);
          real r46CB#1 = RAdd(r46C4,r46C7);
          real r46CC#1 = RAdd(r46CB,r46CA);
          real r46CE#1 = RMul(dof_load4549,sum46A9);
          real r46D0#1 = RMul(dof_load4550,basisEval46AB);
          real r46D2#1 = RMul(dof_load4557,basisEval46AC);
          real r46D3#1 = RAdd(r46CE,r46D0);
          real r46D4#1 = RAdd(r46D3,r46D2);
          tensor[2] probe_l_2446C1#1 = <tensor[2]>[r46CC,r46D4];
          real r46EC#1 = RDiv(r4672,op1_e3_l_234698);
          real r46EE#1 = RDiv(r4677,op1_e3_l_234698);
          tensor[2] tensor46EF#2 = <tensor[2]>[r46EC,r46EE];
          real r46F1#1 = RDiv(r467C,op1_e3_l_234698);
          real r46F3#1 = RDiv(r467F,op1_e3_l_234698);
          tensor[2] tensor46F4#2 = <tensor[2]>[r46F1,r46F3];
          tensor[2] op1_e3_l_264701#2 = VSub<2>(rayStartProj4254,probe_l_2446C1);
          real vdot4706#1 = VDot<2>(tensor46EF,op1_e3_l_264701);
          real vdot4708#1 = VDot<2>(tensor46F4,op1_e3_l_264701);
          tensor[2] op1_e3_l_274704#27 = <tensor[2]>[vdot4706,vdot4708];
          real vdot4711#1 = VDot<2>(tensor46EF,dposProj4256);
          real vdot4713#1 = VDot<2>(tensor46F4,dposProj4256);
          tensor[2] op1_e3_l_36470F#16 = <tensor[2]>[vdot4711,vdot4713];
          real r471D#1 = RMul(_t451E,_t4522);
          real r4721#1 = RAdd(r471D,prod4579);
          real r4723#1 = RMul(_t4522,_t4522);
          real r4724#3 = RMul(_t451E,_t451C);
          real r4725#1 = RAdd(r4723,r4724);
          tensor[2] op1_e3_l_37471A#1 = <tensor[2]>[r4721,r4725];
          real op1_e3_l_384733#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37471A);
          real r4738#2 = RDiv(_t451C,op1_e3_l_384733);
          real r473A#2 = RMul(r4738,_t4522);
          real r473C#2 = RMul(r4738,_t451C);
          tensor[2] op1_e3_l_404745#1 = VSub<2>(_t4520,op1_e3_l_274704);
          real r474B#1 = RMul(_t451E,r473A);
          real r474E#1 = RMul(_t451C,r473C);
          real r474F#1 = RAdd(r474B,r474E);
          real r4751#1 = RMul(_t4522,r473A);
          real r4752#1 = RMul(_t451E,r473C);
          real r4753#1 = RAdd(r4751,r4752);
          tensor[2] op1_e3_l_414748#1 = <tensor[2]>[r474F,r4753];
          real _t4761#10 = VDot<2>(op1_e3_l_404745,op1_e3_l_414748);
          real _t4764#3 = -0.1e-15;
          bool _t4766#1 = GTE<real>(_t4761,_t4764);
          bool _t4768#1 = GT<real>(time4518,_t4761);
          real _t476A#1 = Abs<real>(op1_e3_l_384733);
          real _t476D#3 = 0.1e-20;
          bool _t476F#1 = GTE<real>(_t476A,_t476D);
          bool _t4771#1 = BAnd(_t4768,_t476F);
          bool _t4773#4 = BAnd(_t4766,_t4771);
          if _t4773 then goto ASSIGN4777 else goto JOIN47A3
        ASSIGN4777:  preds = [COND4775]
          real _t4776#3 = 0.1e-8;
          real _t4778#1 = RAdd(_t451C,_t4776);
          tensor[2] _t477B#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78477D#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794780#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78477D);
          real _t4783#1 = VDot<2>(_t477B,op1_e3_l_794780);
          bool _t4786#1 = GT<real>(_t4778,_t4783);
          tensor[2] _t4788#1 = <tensor[2]>[_t4776,_t4776];
          tensor[2] v478B#1 = VAdd<2>(_t4788,op1_e3_l_274704);
          tensor[2] _t478A#2 = VAdd<2>(v478B,op1_e3_l_78477D);
          real _t478F#1 = VIndex<2,0>(_t478A);
          bool _t4791#1 = GT<real>(_t478F,_t4514);
          real _t4793#1 = VIndex<2,1>(_t478A);
          bool _t4795#1 = GT<real>(_t4793,_t4514);
          bool _t4797#1 = BAnd(_t4791,_t4795);
          bool _t4799#1 = BAnd(_t4786,_t4797);
          if _t4799 then goto ASSIGN479D else goto JOIN47A0
        ASSIGN479D:  preds = [COND479B]
          int face479C#1 = 0;
          goto JOIN47A0
        JOIN47A0:  preds = [ASSIGN479D,COND479B]
          int face479E#1 = phi(face479C,face451A)
          real time479F#1 = phi(_t4761,time4518)
          goto JOIN47A3
        JOIN47A3:  preds = [JOIN47A0,COND4775]
          int face47A1#2 = phi(face479E,face451A)
          real time47A2#3 = phi(time479F,time4518)
          tensor[2] _t47A4#1 = <tensor[2]>[_t451E,_t451E];
          real r47AB#2 = RMul(_t451E,_t451E);
          real r47AF#1 = RAdd(r47AB,prod4579);
          real r47B1#1 = RMul(_t4522,_t451E);
          real r47B3#1 = RAdd(r47B1,r4724);
          tensor[2] op1_e3_l_3747A8#1 = <tensor[2]>[r47AF,r47B3];
          real op1_e3_l_3847C1#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_3747A8);
          real r47C6#2 = RDiv(_t451C,op1_e3_l_3847C1);
          real r47C8#2 = RMul(r47C6,_t451E);
          real r47CA#2 = RMul(r47C6,_t451C);
          tensor[2] op1_e3_l_4047D3#2 = VSub<2>(_t47A4,op1_e3_l_274704);
          real r47D9#1 = RMul(_t451E,r47C8);
          real r47DC#1 = RMul(_t451C,r47CA);
          real r47DD#1 = RAdd(r47D9,r47DC);
          real r47DF#1 = RMul(_t4522,r47C8);
          real r47E0#1 = RMul(_t451E,r47CA);
          real r47E1#1 = RAdd(r47DF,r47E0);
          tensor[2] op1_e3_l_4147D6#1 = <tensor[2]>[r47DD,r47E1];
          real _t47EF#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_4147D6);
          bool _t47F2#4 = GTE<real>(_t47EF,_t4764);
          bool _t47F4#1 = GT<real>(time47A2,_t47EF);
          real _t47F6#1 = Abs<real>(op1_e3_l_3847C1);
          bool _t47F9#4 = GTE<real>(_t47F6,_t476D);
          bool _t47FB#1 = BAnd(_t47F4,_t47F9);
          bool _t47FD#1 = BAnd(_t47F2,_t47FB);
          if _t47FD then goto ASSIGN4801 else goto JOIN482D
        ASSIGN4801:  preds = [COND47FF]
          real _t4800#3 = 0.1e-8;
          real _t4802#1 = RAdd(_t451C,_t4800);
          tensor[2] _t4805#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784807#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79480A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784807);
          real _t480D#1 = VDot<2>(_t4805,op1_e3_l_79480A);
          bool _t4810#1 = GT<real>(_t4802,_t480D);
          tensor[2] _t4812#1 = <tensor[2]>[_t4800,_t4800];
          tensor[2] v4815#1 = VAdd<2>(_t4812,op1_e3_l_274704);
          tensor[2] _t4814#2 = VAdd<2>(v4815,op1_e3_l_784807);
          real _t4819#1 = VIndex<2,0>(_t4814);
          bool _t481B#1 = GT<real>(_t4819,_t4514);
          real _t481D#1 = VIndex<2,1>(_t4814);
          bool _t481F#1 = GT<real>(_t481D,_t4514);
          bool _t4821#1 = BAnd(_t481B,_t481F);
          bool _t4823#1 = BAnd(_t4810,_t4821);
          if _t4823 then goto JOIN482A else goto JOIN482A
        JOIN482A:  preds = [COND4825,COND4825]
          int face4828#1 = phi(ilit452C,face47A1)
          real time4829#1 = phi(_t47EF,time47A2)
          goto JOIN482D
        JOIN482D:  preds = [JOIN482A,COND47FF]
          int face482B#2 = phi(face4828,face47A1)
          real time482C#3 = phi(time4829,time47A2)
          real r4834#1 = RMul(_t451C,_t451E);
          real r4835#1 = RAdd(r4724,r4834);
          real r4837#1 = RMul(_t4522,_t451C);
          real r4839#1 = RAdd(r4837,r47AB);
          tensor[2] op1_e3_l_37482E#1 = <tensor[2]>[r4835,r4839];
          real op1_e3_l_384847#2 = VDot<2>(op1_e3_l_36470F,op1_e3_l_37482E);
          real r484C#2 = RDiv(_t451C,op1_e3_l_384847);
          real r484E#2 = RMul(r484C,_t451C);
          real r4850#2 = RMul(r484C,_t451E);
          real r485C#1 = RMul(_t451E,r484E);
          real r485F#1 = RMul(_t451C,r4850);
          real r4860#1 = RAdd(r485C,r485F);
          real r4862#1 = RMul(_t4522,r484E);
          real r4863#1 = RMul(_t451E,r4850);
          real r4864#1 = RAdd(r4862,r4863);
          tensor[2] op1_e3_l_414859#1 = <tensor[2]>[r4860,r4864];
          real _t4872#13 = VDot<2>(op1_e3_l_4047D3,op1_e3_l_414859);
          bool _t4875#4 = GTE<real>(_t4872,_t4764);
          bool _t4877#1 = GT<real>(time482C,_t4872);
          real _t4879#1 = Abs<real>(op1_e3_l_384847);
          bool _t487C#4 = GTE<real>(_t4879,_t476D);
          bool _t487E#1 = BAnd(_t4877,_t487C);
          bool _t4880#1 = BAnd(_t4875,_t487E);
          if _t4880 then goto ASSIGN4884 else goto JOIN48B0
        ASSIGN4884:  preds = [COND4882]
          real _t4883#3 = 0.1e-8;
          real _t4885#1 = RAdd(_t451C,_t4883);
          tensor[2] _t4888#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_78488A#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79488D#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_78488A);
          real _t4890#1 = VDot<2>(_t4888,op1_e3_l_79488D);
          bool _t4893#1 = GT<real>(_t4885,_t4890);
          tensor[2] _t4895#1 = <tensor[2]>[_t4883,_t4883];
          tensor[2] v4898#1 = VAdd<2>(_t4895,op1_e3_l_274704);
          tensor[2] _t4897#2 = VAdd<2>(v4898,op1_e3_l_78488A);
          real _t489C#1 = VIndex<2,0>(_t4897);
          bool _t489E#1 = GT<real>(_t489C,_t4514);
          real _t48A0#1 = VIndex<2,1>(_t4897);
          bool _t48A2#1 = GT<real>(_t48A0,_t4514);
          bool _t48A4#1 = BAnd(_t489E,_t48A2);
          bool _t48A6#1 = BAnd(_t4893,_t48A4);
          if _t48A6 then goto JOIN48AD else goto JOIN48AD
        JOIN48AD:  preds = [COND48A8,COND48A8]
          int face48AB#1 = phi(ilit452F,face482B)
          real time48AC#1 = phi(_t4872,time482C)
          goto JOIN48B0
        JOIN48B0:  preds = [JOIN48AD,COND4882]
          int face48AE#2 = phi(face48AB,face482B)
          real time48AF#1 = phi(time48AC,time482C)
          bool _t48B1#1 = NEQ<int>(face48AE,face451A);
          if _t48B1 then goto ASSIGN48B5 else goto ASSIGN4AE6
        ASSIGN48B5:  preds = [COND48B3]
          real _t48B4#1 = Max<real>(time48AF,_t451E);
          real _t48B6#1 = IntToReal(face48AE);
          tensor[2] _t48B8#1 = <tensor[2]>[_t48B4,_t48B6];
          goto JOIN48BC
        JOIN48BC:  preds = [ASSIGN48B9,ASSIGN4AE6]
          tensor[2] _t48BA#1 = phi(_t48B8,_t48BB)
          real newTime48BD#2 = VIndex<2,0>(_t48BA);
          bool _t48BF#1 = GTE<real>(newTime48BD,_t451E);
          if _t48BF then goto COND48C2 else goto JOIN4AE2
        COND48C2:  preds = [COND48C1]
          if _t4773 then goto ASSIGN48C4 else goto JOIN48F0
        ASSIGN48C4:  preds = [COND48C2]
          real _t48C3#3 = 0.1e-8;
          real _t48C5#1 = RAdd(_t451C,_t48C3);
          tensor[2] _t48C8#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848CA#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7948CD#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848CA);
          real _t48D0#1 = VDot<2>(_t48C8,op1_e3_l_7948CD);
          bool _t48D3#1 = GT<real>(_t48C5,_t48D0);
          tensor[2] _t48D5#1 = <tensor[2]>[_t48C3,_t48C3];
          tensor[2] v48D8#1 = VAdd<2>(_t48D5,op1_e3_l_274704);
          tensor[2] _t48D7#2 = VAdd<2>(v48D8,op1_e3_l_7848CA);
          real _t48DC#1 = VIndex<2,0>(_t48D7);
          bool _t48DE#1 = GT<real>(_t48DC,_t4514);
          real _t48E0#1 = VIndex<2,1>(_t48D7);
          bool _t48E2#1 = GT<real>(_t48E0,_t4514);
          bool _t48E4#1 = BAnd(_t48DE,_t48E2);
          bool _t48E6#1 = BAnd(_t48D3,_t48E4);
          if _t48E6 then goto ASSIGN48EA else goto JOIN48ED
        ASSIGN48EA:  preds = [COND48E8]
          int face48E9#1 = 0;
          goto JOIN48ED
        JOIN48ED:  preds = [ASSIGN48EA,COND48E8]
          int face48EB#1 = phi(face48E9,face451A)
          real time48EC#1 = phi(_t4761,time4518)
          goto JOIN48F0
        JOIN48F0:  preds = [JOIN48ED,COND48C2]
          int face48EE#2 = phi(face48EB,face451A)
          real time48EF#3 = phi(time48EC,time4518)
          bool _t48F1#1 = GT<real>(time48EF,_t47EF);
          bool _t48F3#1 = BAnd(_t48F1,_t47F9);
          bool _t48F5#1 = BAnd(_t47F2,_t48F3);
          if _t48F5 then goto ASSIGN48F9 else goto JOIN4925
        ASSIGN48F9:  preds = [COND48F7]
          real _t48F8#3 = 0.1e-8;
          real _t48FA#1 = RAdd(_t451C,_t48F8);
          tensor[2] _t48FD#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7848FF#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794902#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7848FF);
          real _t4905#1 = VDot<2>(_t48FD,op1_e3_l_794902);
          bool _t4908#1 = GT<real>(_t48FA,_t4905);
          tensor[2] _t490A#1 = <tensor[2]>[_t48F8,_t48F8];
          tensor[2] v490D#1 = VAdd<2>(_t490A,op1_e3_l_274704);
          tensor[2] _t490C#2 = VAdd<2>(v490D,op1_e3_l_7848FF);
          real _t4911#1 = VIndex<2,0>(_t490C);
          bool _t4913#1 = GT<real>(_t4911,_t4514);
          real _t4915#1 = VIndex<2,1>(_t490C);
          bool _t4917#1 = GT<real>(_t4915,_t4514);
          bool _t4919#1 = BAnd(_t4913,_t4917);
          bool _t491B#1 = BAnd(_t4908,_t4919);
          if _t491B then goto JOIN4922 else goto JOIN4922
        JOIN4922:  preds = [COND491D,COND491D]
          int face4920#1 = phi(ilit452C,face48EE)
          real time4921#1 = phi(_t47EF,time48EF)
          goto JOIN4925
        JOIN4925:  preds = [JOIN4922,COND48F7]
          int face4923#2 = phi(face4920,face48EE)
          real time4924#3 = phi(time4921,time48EF)
          bool _t4926#1 = GT<real>(time4924,_t4872);
          bool _t4928#1 = BAnd(_t4926,_t487C);
          bool _t492A#1 = BAnd(_t4875,_t4928);
          if _t492A then goto ASSIGN492E else goto JOIN495A
        ASSIGN492E:  preds = [COND492C]
          real _t492D#3 = 0.1e-8;
          real _t492F#1 = RAdd(_t451C,_t492D);
          tensor[2] _t4932#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784934#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794937#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784934);
          real _t493A#1 = VDot<2>(_t4932,op1_e3_l_794937);
          bool _t493D#1 = GT<real>(_t492F,_t493A);
          tensor[2] _t493F#1 = <tensor[2]>[_t492D,_t492D];
          tensor[2] v4942#1 = VAdd<2>(_t493F,op1_e3_l_274704);
          tensor[2] _t4941#2 = VAdd<2>(v4942,op1_e3_l_784934);
          real _t4946#1 = VIndex<2,0>(_t4941);
          bool _t4948#1 = GT<real>(_t4946,_t4514);
          real _t494A#1 = VIndex<2,1>(_t4941);
          bool _t494C#1 = GT<real>(_t494A,_t4514);
          bool _t494E#1 = BAnd(_t4948,_t494C);
          bool _t4950#1 = BAnd(_t493D,_t494E);
          if _t4950 then goto JOIN4957 else goto JOIN4957
        JOIN4957:  preds = [COND4952,COND4952]
          int face4955#1 = phi(ilit452F,face4923)
          real time4956#1 = phi(_t4872,time4924)
          goto JOIN495A
        JOIN495A:  preds = [JOIN4957,COND492C]
          int face4958#2 = phi(face4955,face4923)
          real time4959#1 = phi(time4956,time4924)
          bool _t495B#1 = NEQ<int>(face4958,face451A);
          if _t495B then goto ASSIGN495F else goto ASSIGN4AE5
        ASSIGN495F:  preds = [COND495D]
          real _t495E#1 = Max<real>(time4959,_t451E);
          real _t4960#1 = IntToReal(face4958);
          tensor[2] _t4962#1 = <tensor[2]>[_t495E,_t4960];
          goto JOIN4966
        JOIN4966:  preds = [ASSIGN4963,ASSIGN4AE5]
          tensor[2] _t4964#1 = phi(_t4962,_t4965)
          real _t4967#1 = VIndex<2,0>(_t4964);
          tensor[2] op1_e3_l_354969#1 = VScale<2>(_t4967,op1_e3_l_36470F);
          tensor[2] _t496C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_354969);
          if _t4773 then goto ASSIGN4971 else goto JOIN499D
        ASSIGN4971:  preds = [COND496F]
          real _t4970#3 = 0.1e-8;
          real _t4972#1 = RAdd(_t451C,_t4970);
          tensor[2] _t4975#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784977#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_79497A#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784977);
          real _t497D#1 = VDot<2>(_t4975,op1_e3_l_79497A);
          bool _t4980#1 = GT<real>(_t4972,_t497D);
          tensor[2] _t4982#1 = <tensor[2]>[_t4970,_t4970];
          tensor[2] v4985#1 = VAdd<2>(_t4982,op1_e3_l_274704);
          tensor[2] _t4984#2 = VAdd<2>(v4985,op1_e3_l_784977);
          real _t4989#1 = VIndex<2,0>(_t4984);
          bool _t498B#1 = GT<real>(_t4989,_t4514);
          real _t498D#1 = VIndex<2,1>(_t4984);
          bool _t498F#1 = GT<real>(_t498D,_t4514);
          bool _t4991#1 = BAnd(_t498B,_t498F);
          bool _t4993#1 = BAnd(_t4980,_t4991);
          if _t4993 then goto ASSIGN4997 else goto JOIN499A
        ASSIGN4997:  preds = [COND4995]
          int face4996#1 = 0;
          goto JOIN499A
        JOIN499A:  preds = [ASSIGN4997,COND4995]
          int face4998#1 = phi(face4996,face451A)
          real time4999#1 = phi(_t4761,time4518)
          goto JOIN499D
        JOIN499D:  preds = [JOIN499A,COND496F]
          int face499B#2 = phi(face4998,face451A)
          real time499C#3 = phi(time4999,time4518)
          bool _t499E#1 = GT<real>(time499C,_t47EF);
          bool _t49A0#1 = BAnd(_t499E,_t47F9);
          bool _t49A2#1 = BAnd(_t47F2,_t49A0);
          if _t49A2 then goto ASSIGN49A6 else goto JOIN49D2
        ASSIGN49A6:  preds = [COND49A4]
          real _t49A5#3 = 0.1e-8;
          real _t49A7#1 = RAdd(_t451C,_t49A5);
          tensor[2] _t49AA#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849AC#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949AF#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849AC);
          real _t49B2#1 = VDot<2>(_t49AA,op1_e3_l_7949AF);
          bool _t49B5#1 = GT<real>(_t49A7,_t49B2);
          tensor[2] _t49B7#1 = <tensor[2]>[_t49A5,_t49A5];
          tensor[2] v49BA#1 = VAdd<2>(_t49B7,op1_e3_l_274704);
          tensor[2] _t49B9#2 = VAdd<2>(v49BA,op1_e3_l_7849AC);
          real _t49BE#1 = VIndex<2,0>(_t49B9);
          bool _t49C0#1 = GT<real>(_t49BE,_t4514);
          real _t49C2#1 = VIndex<2,1>(_t49B9);
          bool _t49C4#1 = GT<real>(_t49C2,_t4514);
          bool _t49C6#1 = BAnd(_t49C0,_t49C4);
          bool _t49C8#1 = BAnd(_t49B5,_t49C6);
          if _t49C8 then goto JOIN49CF else goto JOIN49CF
        JOIN49CF:  preds = [COND49CA,COND49CA]
          int face49CD#1 = phi(ilit452C,face499B)
          real time49CE#1 = phi(_t47EF,time499C)
          goto JOIN49D2
        JOIN49D2:  preds = [JOIN49CF,COND49A4]
          int face49D0#2 = phi(face49CD,face499B)
          real time49D1#3 = phi(time49CE,time499C)
          bool _t49D3#1 = GT<real>(time49D1,_t4872);
          bool _t49D5#1 = BAnd(_t49D3,_t487C);
          bool _t49D7#1 = BAnd(_t4875,_t49D5);
          if _t49D7 then goto ASSIGN49DB else goto JOIN4A07
        ASSIGN49DB:  preds = [COND49D9]
          real _t49DA#3 = 0.1e-8;
          real _t49DC#1 = RAdd(_t451C,_t49DA);
          tensor[2] _t49DF#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_7849E1#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_7949E4#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_7849E1);
          real _t49E7#1 = VDot<2>(_t49DF,op1_e3_l_7949E4);
          bool _t49EA#1 = GT<real>(_t49DC,_t49E7);
          tensor[2] _t49EC#1 = <tensor[2]>[_t49DA,_t49DA];
          tensor[2] v49EF#1 = VAdd<2>(_t49EC,op1_e3_l_274704);
          tensor[2] _t49EE#2 = VAdd<2>(v49EF,op1_e3_l_7849E1);
          real _t49F3#1 = VIndex<2,0>(_t49EE);
          bool _t49F5#1 = GT<real>(_t49F3,_t4514);
          real _t49F7#1 = VIndex<2,1>(_t49EE);
          bool _t49F9#1 = GT<real>(_t49F7,_t4514);
          bool _t49FB#1 = BAnd(_t49F5,_t49F9);
          bool _t49FD#1 = BAnd(_t49EA,_t49FB);
          if _t49FD then goto JOIN4A04 else goto JOIN4A04
        JOIN4A04:  preds = [COND49FF,COND49FF]
          int face4A02#1 = phi(ilit452F,face49D0)
          real time4A03#1 = phi(_t4872,time49D1)
          goto JOIN4A07
        JOIN4A07:  preds = [JOIN4A04,COND49D9]
          int face4A05#2 = phi(face4A02,face49D0)
          real time4A06#1 = phi(time4A03,time49D1)
          bool _t4A08#1 = NEQ<int>(face4A05,face451A);
          if _t4A08 then goto ASSIGN4A0C else goto ASSIGN4AE4
        ASSIGN4A0C:  preds = [COND4A0A]
          real _t4A0B#1 = Max<real>(time4A06,_t451E);
          real _t4A0D#1 = IntToReal(face4A05);
          tensor[2] _t4A0F#1 = <tensor[2]>[_t4A0B,_t4A0D];
          goto JOIN4A13
        JOIN4A13:  preds = [ASSIGN4A10,ASSIGN4AE4]
          tensor[2] _t4A11#1 = phi(_t4A0F,_t4A12)
          real _t4A14#1 = VIndex<2,0>(_t4A11);
          tensor[2] op1_e3_l_34A16#1 = VScale<2>(_t4A14,dposProj4256);
          tensor[2] _t4A19#1 = VAdd<2>(rayStartProj4254,op1_e3_l_34A16);
          if _t4773 then goto ASSIGN4A1E else goto JOIN4A4A
        ASSIGN4A1E:  preds = [COND4A1C]
          real _t4A1D#3 = 0.1e-8;
          real _t4A1F#1 = RAdd(_t451C,_t4A1D);
          tensor[2] _t4A22#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A24#2 = VScale<2>(_t4761,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A27#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A24);
          real _t4A2A#1 = VDot<2>(_t4A22,op1_e3_l_794A27);
          bool _t4A2D#1 = GT<real>(_t4A1F,_t4A2A);
          tensor[2] _t4A2F#1 = <tensor[2]>[_t4A1D,_t4A1D];
          tensor[2] v4A32#1 = VAdd<2>(_t4A2F,op1_e3_l_274704);
          tensor[2] _t4A31#2 = VAdd<2>(v4A32,op1_e3_l_784A24);
          real _t4A36#1 = VIndex<2,0>(_t4A31);
          bool _t4A38#1 = GT<real>(_t4A36,_t4514);
          real _t4A3A#1 = VIndex<2,1>(_t4A31);
          bool _t4A3C#1 = GT<real>(_t4A3A,_t4514);
          bool _t4A3E#1 = BAnd(_t4A38,_t4A3C);
          bool _t4A40#1 = BAnd(_t4A2D,_t4A3E);
          if _t4A40 then goto ASSIGN4A44 else goto JOIN4A47
        ASSIGN4A44:  preds = [COND4A42]
          int face4A43#1 = 0;
          goto JOIN4A47
        JOIN4A47:  preds = [ASSIGN4A44,COND4A42]
          int face4A45#1 = phi(face4A43,face451A)
          real time4A46#1 = phi(_t4761,time4518)
          goto JOIN4A4A
        JOIN4A4A:  preds = [JOIN4A47,COND4A1C]
          int face4A48#2 = phi(face4A45,face451A)
          real time4A49#3 = phi(time4A46,time4518)
          bool _t4A4B#1 = GT<real>(time4A49,_t47EF);
          bool _t4A4D#1 = BAnd(_t4A4B,_t47F9);
          bool _t4A4F#1 = BAnd(_t47F2,_t4A4D);
          if _t4A4F then goto ASSIGN4A53 else goto JOIN4A7F
        ASSIGN4A53:  preds = [COND4A51]
          real _t4A52#3 = 0.1e-8;
          real _t4A54#1 = RAdd(_t451C,_t4A52);
          tensor[2] _t4A57#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A59#2 = VScale<2>(_t47EF,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A5C#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A59);
          real _t4A5F#1 = VDot<2>(_t4A57,op1_e3_l_794A5C);
          bool _t4A62#1 = GT<real>(_t4A54,_t4A5F);
          tensor[2] _t4A64#1 = <tensor[2]>[_t4A52,_t4A52];
          tensor[2] v4A67#1 = VAdd<2>(_t4A64,op1_e3_l_274704);
          tensor[2] _t4A66#2 = VAdd<2>(v4A67,op1_e3_l_784A59);
          real _t4A6B#1 = VIndex<2,0>(_t4A66);
          bool _t4A6D#1 = GT<real>(_t4A6B,_t4514);
          real _t4A6F#1 = VIndex<2,1>(_t4A66);
          bool _t4A71#1 = GT<real>(_t4A6F,_t4514);
          bool _t4A73#1 = BAnd(_t4A6D,_t4A71);
          bool _t4A75#1 = BAnd(_t4A62,_t4A73);
          if _t4A75 then goto JOIN4A7C else goto JOIN4A7C
        JOIN4A7C:  preds = [COND4A77,COND4A77]
          int face4A7A#1 = phi(ilit452C,face4A48)
          real time4A7B#1 = phi(_t47EF,time4A49)
          goto JOIN4A7F
        JOIN4A7F:  preds = [JOIN4A7C,COND4A51]
          int face4A7D#2 = phi(face4A7A,face4A48)
          real time4A7E#3 = phi(time4A7B,time4A49)
          bool _t4A80#1 = GT<real>(time4A7E,_t4872);
          bool _t4A82#1 = BAnd(_t4A80,_t487C);
          bool _t4A84#1 = BAnd(_t4875,_t4A82);
          if _t4A84 then goto ASSIGN4A88 else goto JOIN4AB4
        ASSIGN4A88:  preds = [COND4A86]
          real _t4A87#3 = 0.1e-8;
          real _t4A89#1 = RAdd(_t451C,_t4A87);
          tensor[2] _t4A8C#1 = <tensor[2]>[_t451C,_t451C];
          tensor[2] op1_e3_l_784A8E#2 = VScale<2>(_t4872,op1_e3_l_36470F);
          tensor[2] op1_e3_l_794A91#1 = VAdd<2>(op1_e3_l_274704,op1_e3_l_784A8E);
          real _t4A94#1 = VDot<2>(_t4A8C,op1_e3_l_794A91);
          bool _t4A97#1 = GT<real>(_t4A89,_t4A94);
          tensor[2] _t4A99#1 = <tensor[2]>[_t4A87,_t4A87];
          tensor[2] v4A9C#1 = VAdd<2>(_t4A99,op1_e3_l_274704);
          tensor[2] _t4A9B#2 = VAdd<2>(v4A9C,op1_e3_l_784A8E);
          real _t4AA0#1 = VIndex<2,0>(_t4A9B);
          bool _t4AA2#1 = GT<real>(_t4AA0,_t4514);
          real _t4AA4#1 = VIndex<2,1>(_t4A9B);
          bool _t4AA6#1 = GT<real>(_t4AA4,_t4514);
          bool _t4AA8#1 = BAnd(_t4AA2,_t4AA6);
          bool _t4AAA#1 = BAnd(_t4A97,_t4AA8);
          if _t4AAA then goto JOIN4AB1 else goto JOIN4AB1
        JOIN4AB1:  preds = [COND4AAC,COND4AAC]
          int face4AAF#1 = phi(ilit452F,face4A7D)
          real time4AB0#1 = phi(_t4872,time4A7E)
          goto JOIN4AB4
        JOIN4AB4:  preds = [JOIN4AB1,COND4A86]
          int face4AB2#2 = phi(face4AAF,face4A7D)
          real time4AB3#1 = phi(time4AB0,time4A7E)
          bool _t4AB5#1 = NEQ<int>(face4AB2,face451A);
          if _t4AB5 then goto ASSIGN4AB9 else goto ASSIGN4AE3
        ASSIGN4AB9:  preds = [COND4AB7]
          real _t4AB8#1 = Max<real>(time4AB3,_t451E);
          real _t4ABA#1 = IntToReal(face4AB2);
          tensor[2] _t4ABC#1 = <tensor[2]>[_t4AB8,_t4ABA];
          goto JOIN4AC0
        JOIN4AC0:  preds = [ASSIGN4ABD,ASSIGN4AE3]
          tensor[2] _t4ABE#1 = phi(_t4ABC,_t4ABF)
          real _t4AC1#1 = VIndex<2,1>(_t4ABE);
          real t4AC3#1 = Floor<1>(_t4AC1);
          int _t4AC5#1 = RealToInt<1>(t4AC3);
          femData:MeshPos p4AC7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],tensor[2],int],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(_t427E,_t427C,_t496C,_t4A19,_t4AC5);
          real op1_e3_l_34AC9#1 = RSub(camFarVsp4252,camNearVsp4250);
          real op1_e3_l_44ACC#1 = RMul(newTime48BD,op1_e3_l_34AC9);
          real newRayTime4ACF#3 = RAdd(camNearVsp4250,op1_e3_l_44ACC);
          real[] normalizedTimes4AD2#1 = Append<real>(normalizedTimes44FE,newRayTime4ACF);
          femData:MeshPos[] poses4AD4#1 = Append<femData:MeshPos>(poses44FB,p4AC7);
          bool _t4AD6#1 = GT<real>(startTime4AD7,newRayTime4ACF);
          if _t4AD6 then goto JOIN4ADD else goto JOIN4ADD
        JOIN4ADD:  preds = [COND4AD9,COND4AD9]
          real startTime4ADA#1 = phi(newRayTime4ACF,startTime4AD7)
          int currentCellInt4ADB#1 = phi(cellIntersects4503,currentCellInt4ADC)
          int cellIntersects4AE0#1 = IAdd(cellIntersects4503,ilit452C);
          goto JOIN4AE2
        JOIN4AE2:  preds = [ASSIGN53D6,COND48C1]
          real startTime4508#1 = phi(startTime4ADA,startTime4AD7)
          int currentCellInt450B#1 = phi(currentCellInt4ADB,currentCellInt4ADC)
          int cellIntersects450D#1 = phi(cellIntersects4AE0,cellIntersects4503)
          real[] normalizedTimes450F#1 = phi(normalizedTimes4AD2,normalizedTimes44FE)
          femData:MeshPos[] poses4511#1 = phi(poses4AD4,poses44FB)
          goto JOIN4512
        ASSIGN4AE3:  preds = [COND4AB7]
          tensor[2] _t4ABF#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4AC0
        ASSIGN4AE4:  preds = [COND4A0A]
          tensor[2] _t4A12#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4A13
        ASSIGN4AE5:  preds = [COND495D]
          tensor[2] _t4965#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN4966
        ASSIGN4AE6:  preds = [COND48B3]
          tensor[2] _t48BB#1 = <tensor[2]>[_t4522,_t4522];
          goto JOIN48BC
        ASSIGN4AE9:  preds = [FOREACH4276]
          int _t4AE8#1 = 0;
          bool _t4AEA#1 = NEQ<int>(cellIntersects4503,_t4AE8);
          if _t4AEA then goto ASSIGN4AEE else goto ASSIGN4B3C
        ASSIGN4AEE:  preds = [COND4AEC]
          femData:MeshPos pos4AED#4 = Subscript<femData:MeshPos[]>(poses44FB,currentCellInt4ADC);
          real rayN4AEF#2 = Subscript<real[]>(normalizedTimes44FE,currentCellInt4ADC);
          tensor[3] op1_e3_l_34AF1#1 = VScale<3>(rayN4AEF,rayVec424E);
          tensor[3] _t4AF4#1 = VAdd<3>(rayOrig424C,op1_e3_l_34AF1);
          tensor[3][2] _t4AF7#1 = <tensor[3][2]>{rayOrig424C,_t4AF4};
          tensor[3][] _t4AF9#1 = MkDynamic<tensor[3],2>(_t4AF7);
          tensor[3][] spaceInter4AFB#1 = Concat<tensor[3]>(spaceInter425E,_t4AF9);
          tensor[2] _t4AFD#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4AED);
          tensor[2][1] _t4AFF#1 = <tensor[2][1]>{_t4AFD};
          tensor[2][] _t4B01#1 = MkDynamic<tensor[2],1>(_t4AFF);
          femData:Mesh _t4B03#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4AED);
          int _t4B05#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4AED);
          femData:MeshCell currentCell4B07#2 = LoadFem<femData:MeshCell>(_t4B03,_t4B05);
          femData:MeshCell[1] _t4B09#1 = <femData:MeshCell[1]>{currentCell4B07};
          femData:MeshCell[] _t4B0B#1 = MkDynamic<femData:MeshCell,1>(_t4B09);
          string _t4B0D#1 = "In the interval:";
          tensor[2] _t4B0F#1 = <tensor[2]>[camNearVsp4250,camFarVsp4252];
          string _t4B11#3 = "\n";
          Print<[string,tensor[2],string]>(_t4B0D,_t4B0F,_t4B11);
          string _t4B14#1 = "Possible times:";
          Print<[string,real[],string]>(_t4B14,normalizedTimes44FE,_t4B11);
          string _t4B17#1 = "cells:";
          femData:MeshCell[] accum4B19#1 = <femData:MeshCell[]>{};
        FOREACH4B1C:  preds = [ASSIGN4B1A,NEXT4B26]
          foreach (p4B1B in poses44FB) on exit goto MASSIGN4B27
            femData:MeshCell[] accum4B24#2 = phi(accum4B19,accum4B23)
          femData:Mesh _t4B1D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(p4B1B);
          int _t4B1F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(p4B1B);
          femData:MeshCell _t4B21#1 = LoadFem<femData:MeshCell>(_t4B1D,_t4B1F);
          femData:MeshCell[] accum4B23#1 = Append<femData:MeshCell>(accum4B24,_t4B21);
          goto FOREACH4B1C
        MASSIGN4B27:  preds = [FOREACH4B1C]
          Print<[string,femData:MeshCell[],string]>(_t4B17,accum4B24,_t4B11);
          goto JOIN4B2E
        JOIN4B2E:  preds = [MASSIGN4B27,*STABILIZE4B4A]
          femData:MeshPos pos4B28#1 = phi(pos4AED)
          femData:MeshCell currentCell4B29#1 = phi(currentCell4B07)
          real rayN4B2A#1 = phi(rayN4AEF)
          femData:MeshCell[] cellInter4B2B#1 = phi(_t4B0B)
          tensor[2][] refSpaceInter4B2C#1 = phi(_t4B01)
          tensor[3][] spaceInter4B2D#1 = phi(spaceInter4AFB)
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.spaceInter = spaceInter4B2D;
          self.refSpaceInter = refSpaceInter4B2C;
          self.cellInter = cellInter4B2B;
          self.currentCellInt = currentCellInt4ADC;
          self.rayN = rayN4B2A;
          self.currentCell = currentCell4B29;
          self.pos = pos4B28;
          self.startsInside = startsInside4AE7;
          active
        ASSIGN4B3C:  preds = [COND4AEC]
          string _t4B3B#1 = "No intersection!\n";
          Print<[string]>(_t4B3B);
          string _t4B3E#1 = "Ui: ";
          string _t4B40#1 = " Vi:";
          string _t4B42#1 = "\n";
          Print<[string,int,string,int,string]>(_t4B3E,ui4264,_t4B40,vi4266,_t4B42);
          self.poses = poses44FB;
          self.normalizedTimes = normalizedTimes44FE;
          self.cellIntersects = cellIntersects4503;
          self.currentCellInt = currentCellInt4ADC;
          self.startsInside = startsInside4AE7;
          stabilize
          goto JOIN4B2E
        ASSIGN4B4B:  preds = [COND426A]
          bool _t426E#1 = NEQ<int>(vi4266,debugV424A);
          goto JOIN426F
    end start
    method update
        ENTRY4B4C:  preds = []
          tensor[3] rayOrig4B4D#4 = self.rayOrig;
          tensor[3] rayVec4B4F#6 = self.rayVec;
          real camFarVsp4B51#5 = self.camFarVsp;
          femData:MeshPos[] poses4B53#2 = self.poses;
          real[] normalizedTimes4B55#4 = self.normalizedTimes;
          int cellIntersects4B57#1 = self.cellIntersects;
          tensor[2][] rayCellInter4B59#2 = self.rayCellInter;
          tensor[3][] spaceInter4B5B#3 = self.spaceInter;
          tensor[2][] refSpaceInter4B5D#2 = self.refSpaceInter;
          femData:MeshCell[] cellInter4B5F#4 = self.cellInter;
          real rayN4B61#7 = self.rayN;
          femData:MeshCell currentCell4B63#2 = self.currentCell;
          int steps4B65#1 = self.steps;
          femData:MeshPos pos4B67#8 = self.pos;
          bool startsInside4B69#2 = self.startsInside;
          int ui4B6B#1 = self.ui;
          int vi4B6D#1 = self.vi;
          string _t4B6F#1 = "Ui: ";
          string _t4B71#1 = " vi: ";
          string _t4B73#21 = "\n";
          Print<[string,int,string,int,string]>(_t4B6F,ui4B6B,_t4B71,vi4B6D,_t4B73);
          string _t4B76#1 = "The current ref pos is:";
          tensor[2] _t4B78#5 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos4B67);
          Print<[string,tensor[2],string]>(_t4B76,_t4B78,_t4B73);
          string _t4B7B#1 = "Current cell:";
          femData:Mesh _t4B7D#13 = ExtractFem<femData:Mesh,femData:MeshPos>(pos4B67);
          int _t4B7F#2 = ExtractFemItem<int,CellIndex(MeshPos)>(pos4B67);
          femData:MeshCell _t4B81#3 = LoadFem<femData:MeshCell>(_t4B7D,_t4B7F);
          Print<[string,femData:MeshCell,string]>(_t4B7B,_t4B81,_t4B73);
          string _t4B84#1 = "The current time is:";
          Print<[string,real,string]>(_t4B84,rayN4B61,_t4B73);
          string _t4B87#2 = "The current world pos is:";
          int ilit4B8A#3 = 3;
          int mulRes4B8B#3 = IMul(_t4B7F,ilit4B8A);
          int idx4B8E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,mulRes4B8B);
          int ilit4B8F#25 = 1;
          int addRes4B90#1 = IAdd(mulRes4B8B,ilit4B8F);
          int idx4B91#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B90);
          int ilit4B92#16 = 2;
          int addRes4B93#1 = IAdd(mulRes4B8B,ilit4B92);
          int idx4B94#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4B7D,addRes4B93);
          int mulRes4BA7#2 = IMul(ilit4B92,idx4B8E);
          int addRes4BAA#1 = IAdd(ilit4B8F,mulRes4BA7);
          real dof_load4BAB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BA7);
          real dof_load4BAC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BAA);
          int mulRes4BAF#2 = IMul(ilit4B92,idx4B91);
          int addRes4BB1#1 = IAdd(ilit4B8F,mulRes4BAF);
          real dof_load4BB2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BAF);
          real dof_load4BB3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB1);
          int mulRes4BB6#2 = IMul(ilit4B92,idx4B94);
          int addRes4BB8#1 = IAdd(ilit4B8F,mulRes4BB6);
          real dof_load4BB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,mulRes4BB6);
          real dof_load4BBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4B7D,addRes4BB8);
          real varAcc4BD8#1 = VIndex<2,0>(_t4B78);
          real varAcc4BD9#1 = VIndex<2,1>(_t4B78);
          real coeff4BDA#25 = -0.1e1;
          real one4BDC#38 = 0.1e1;
          real prod4BDD#2 = RMul(varAcc4BD8,one4BDC);
          real prod4BDF#2 = RMul(one4BDC,varAcc4BD9);
          real prod4BE0#4 = RMul(one4BDC,one4BDC);
          real mult4BE1#6 = RMul(one4BDC,prod4BE0);
          real mult4BE2#1 = RMul(coeff4BDA,prod4BDF);
          real mult4BE3#1 = RMul(coeff4BDA,prod4BDD);
          real sum4BE4#1 = RAdd(mult4BE2,mult4BE3);
          real sum4BE5#2 = RAdd(mult4BE1,sum4BE4);
          real basisEval4BE7#2 = RMul(one4BDC,prod4BDD);
          real basisEval4BE8#2 = RMul(one4BDC,prod4BDF);
          real r4C00#1 = RMul(dof_load4BAB,sum4BE5);
          real r4C03#1 = RMul(dof_load4BB2,basisEval4BE7);
          real r4C06#1 = RMul(dof_load4BB9,basisEval4BE8);
          real r4C07#1 = RAdd(r4C00,r4C03);
          real r4C08#1 = RAdd(r4C07,r4C06);
          real r4C0A#1 = RMul(dof_load4BAC,sum4BE5);
          real r4C0C#1 = RMul(dof_load4BB3,basisEval4BE7);
          real r4C0E#1 = RMul(dof_load4BBA,basisEval4BE8);
          real r4C0F#1 = RAdd(r4C0A,r4C0C);
          real r4C10#1 = RAdd(r4C0F,r4C0E);
          tensor[2] _t4BFD#3 = <tensor[2]>[r4C08,r4C10];
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          tensor[3] op1_e3_l_34C27#1 = VScale<3>(rayN4B61,rayVec4B4F);
          tensor[3] stupid4C2A#2 = VAdd<3>(rayOrig4B4D,op1_e3_l_34C27);
          string _t4C2D#2 = "The current world pos should be:";
          real _t4C2F#1 = VIndex<3,0>(stupid4C2A);
          real _t4C31#1 = VIndex<3,1>(stupid4C2A);
          tensor[2] _t4C33#3 = <tensor[2]>[_t4C2F,_t4C31];
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          real _t4C38#3 = 0.1e-8;
          real _t4C3A#1 = RAdd(one4BDC,_t4C38);
          tensor[2] _t4C3D#1 = <tensor[2]>[one4BDC,one4BDC];
          real _t4C3F#1 = VDot<2>(_t4C3D,_t4B78);
          bool _t4C42#1 = GT<real>(_t4C3A,_t4C3F);
          tensor[2] _t4C44#1 = <tensor[2]>[_t4C38,_t4C38];
          tensor[2] _t4C46#2 = VAdd<2>(_t4C44,_t4B78);
          real _t4C49#1 = VIndex<2,0>(_t4C46);
          real _t4C4B#2 = -0.e0;
          bool _t4C4D#1 = GT<real>(_t4C49,_t4C4B);
          real _t4C4F#1 = VIndex<2,1>(_t4C46);
          bool _t4C51#1 = GT<real>(_t4C4F,_t4C4B);
          bool _t4C53#1 = BAnd(_t4C4D,_t4C51);
          bool _t4C55#1 = BAnd(_t4C42,_t4C53);
          bool _t4C57#1 = BNot(_t4C55);
          if _t4C57 then goto ASSIGN4C5B else goto JOIN4C64
        ASSIGN4C5B:  preds = [COND4C59]
          string _t4C5A#1 = "nerror: invalid pos created\n";
          Print<[string]>(_t4C5A);
          bool _t4C5D#1 = BNot(startsInside4B69);
          if _t4C5D then goto ASSIGN4C61 else goto JOIN4C63
        ASSIGN4C61:  preds = [COND4C5F]
          string _t4C60#1 = "Not because of an inside\n";
          Print<[string]>(_t4C60);
          goto JOIN4C63
        JOIN4C63:  preds = [MASSIGN4C62,COND4C5F]
          goto JOIN4C64
        JOIN4C64:  preds = [JOIN4C63,COND4C59]
          Print<[string,tensor[2],string]>(_t4B87,_t4BFD,_t4B73);
          Print<[string,tensor[2],string]>(_t4C2D,_t4C33,_t4B73);
          tensor[2] op1_e3_l_74C90#2 = VSub<2>(_t4BFD,_t4C33);
          real op1_e3_l_94C93#1 = VDot<2>(op1_e3_l_74C90,op1_e3_l_74C90);
          real err4C96#2 = Sqrt(op1_e3_l_94C93);
          real _t4C99#1 = 0.1e-4;
          bool _t4C9B#1 = GT<real>(err4C96,_t4C99);
          if _t4C9B then goto ASSIGN4C9F else goto ASSIGN51EE
        ASSIGN4C9F:  preds = [COND4C9D]
          string _t4C9E#1 = "nerror:Warning! Moved off ray:";
          Print<[string,real,string]>(_t4C9E,err4C96,_t4B73);
          goto JOIN4CA1
        JOIN4CA1:  preds = [MASSIGN4CA0,MASSIGN51EF]
          int steps4CA4#4 = IAdd(steps4B65,ilit4B8F);
          string _t4CA6#1 = "Orig:";
          string _t4CA8#1 = " dir:";
          Print<[string,tensor[3],string,tensor[3],string]>(_t4CA6,rayOrig4B4D,_t4CA8,rayVec4B4F,_t4B73);
          real op1_e3_l_34CAB#2 = RSub(camFarVsp4B51,rayN4B61);
          tensor[3] newDpos4CAE#2 = VScale<3>(op1_e3_l_34CAB,rayVec4B4F);
          tensor[2] _t4CB1#4 = ExtractFemItem<tensor[2],RefPos(Mesh)>(pos4B67);
          femData:Mesh _t4CB3#9 = ExtractFem<femData:Mesh,femData:MeshCell>(_t4B81);
          int _t4CB5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t4B81);
          real _t4CB9#1 = VIndex<3,0>(newDpos4CAE);
          real _t4CBB#1 = VIndex<3,1>(newDpos4CAE);
          tensor[2] _t4CBD#2 = <tensor[2]>[_t4CB9,_t4CBB];
          int _t4CBF#8 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(pos4B67);
          real time4CC1#5 = +inf;
          int face4CC3#9 = -1;
          real faceTime4CC5#6 = -inf;
          real _t4CC7#40 = 0.e0;
          tensor[2] _t4CC9#3 = <tensor[2]>[one4BDC,_t4CC7];
          tensor[2] _t4CCD#1 = <tensor[2]>[coeff4BDA,one4BDC];
          int mulRes4CD1#3 = IMul(_t4CB5,ilit4B8A);
          int idx4CD4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,mulRes4CD1);
          int addRes4CD6#1 = IAdd(mulRes4CD1,ilit4B8F);
          int idx4CD7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD6);
          int addRes4CD9#1 = IAdd(mulRes4CD1,ilit4B92);
          int idx4CDA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4CB3,addRes4CD9);
          int mulRes4CED#2 = IMul(ilit4B92,idx4CD4);
          int addRes4CF0#1 = IAdd(ilit4B8F,mulRes4CED);
          real dof_load4CF1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CED);
          real dof_load4CF2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF0);
          int mulRes4CF5#2 = IMul(ilit4B92,idx4CD7);
          int addRes4CF7#1 = IAdd(ilit4B8F,mulRes4CF5);
          real dof_load4CF8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CF5);
          real dof_load4CF9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CF7);
          int mulRes4CFC#2 = IMul(ilit4B92,idx4CDA);
          int addRes4CFE#1 = IAdd(ilit4B8F,mulRes4CFC);
          real dof_load4CFF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,mulRes4CFC);
          real dof_load4D00#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4CB3,addRes4CFE);
          real basisEval4D23#2 = RMul(coeff4BDA,prod4BE0);
          real r4D38#2 = RMul(dof_load4CF1,basisEval4D23);
          real r4D3B#1 = RMul(dof_load4CF8,mult4BE1);
          real r4D3E#1 = RMul(dof_load4CFF,_t4CC7);
          real r4D3F#1 = RAdd(r4D38,r4D3B);
          real r4D40#3 = RAdd(r4D3F,r4D3E);
          real r4D44#1 = RMul(dof_load4CF8,_t4CC7);
          real r4D46#1 = RMul(dof_load4CFF,mult4BE1);
          real r4D47#1 = RAdd(r4D38,r4D44);
          real r4D48#3 = RAdd(r4D47,r4D46);
          real r4D4B#2 = RMul(dof_load4CF2,basisEval4D23);
          real r4D4D#1 = RMul(dof_load4CF9,mult4BE1);
          real r4D4F#1 = RMul(dof_load4D00,_t4CC7);
          real r4D50#1 = RAdd(r4D4B,r4D4D);
          real r4D51#3 = RAdd(r4D50,r4D4F);
          real r4D53#1 = RMul(dof_load4CF9,_t4CC7);
          real r4D54#1 = RMul(dof_load4D00,mult4BE1);
          real r4D55#1 = RAdd(r4D4B,r4D53);
          real r4D56#3 = RAdd(r4D55,r4D54);
          real r4D7F#1 = RMul(_t4CC7,r4D40);
          real r4D82#1 = RMul(coeff4BDA,r4D51);
          real r4D83#2 = RAdd(r4D7F,r4D82);
          real r4D85#2 = RMul(_t4CC7,r4D48);
          real r4D87#1 = RMul(coeff4BDA,r4D56);
          real r4D88#2 = RAdd(r4D85,r4D87);
          real r4D8B#1 = RMul(one4BDC,r4D40);
          real r4D8C#1 = RMul(_t4CC7,r4D51);
          real r4D8D#2 = RAdd(r4D8B,r4D8C);
          real r4D8E#1 = RMul(one4BDC,r4D48);
          real r4D8F#2 = RMul(_t4CC7,r4D56);
          real r4D90#2 = RAdd(r4D8E,r4D8F);
          tensor[2] probe_l_114DA9#1 = <tensor[2]>[r4D40,r4D51];
          real r4E01#1 = RMul(one4BDC,r4D56);
          real r4E02#1 = RAdd(r4D85,r4E01);
          real r4E04#1 = RMul(coeff4BDA,r4D48);
          real r4E06#1 = RAdd(r4E04,r4D8F);
          tensor[2] op1_e3_l_134DFB#1 = <tensor[2]>[r4E02,r4E06];
          real r4E17#1 = RMul(_t4CC7,r4D83);
          real r4E1A#1 = RMul(coeff4BDA,r4D88);
          real r4E1B#1 = RAdd(r4E17,r4E1A);
          real r4E1D#1 = RMul(_t4CC7,r4D8D);
          real r4E1F#1 = RMul(coeff4BDA,r4D90);
          real r4E20#1 = RAdd(r4E1D,r4E1F);
          real r4E23#1 = RMul(one4BDC,r4D83);
          real r4E24#1 = RMul(_t4CC7,r4D88);
          real r4E25#1 = RAdd(r4E23,r4E24);
          real r4E26#1 = RMul(one4BDC,r4D8D);
          real r4E27#1 = RMul(_t4CC7,r4D90);
          real r4E28#1 = RAdd(r4E26,r4E27);
          real op1_e3_l_154E41#4 = VDot<2>(probe_l_114DA9,op1_e3_l_134DFB);
          real r4E46#1 = RDiv(r4E1B,op1_e3_l_154E41);
          real r4E48#1 = RDiv(r4E20,op1_e3_l_154E41);
          tensor[2] tensor4E49#1 = <tensor[2]>[r4E46,r4E48];
          real r4E4B#1 = RDiv(r4E25,op1_e3_l_154E41);
          real r4E4D#1 = RDiv(r4E28,op1_e3_l_154E41);
          tensor[2] tensor4E4E#1 = <tensor[2]>[r4E4B,r4E4D];
          real vdot4E5D#1 = VDot<2>(tensor4E49,_t4CBD);
          real vdot4E5F#1 = VDot<2>(tensor4E4E,_t4CBD);
          tensor[2] op1_e3_l_174E5B#5 = <tensor[2]>[vdot4E5D,vdot4E5F];
          real r4E69#1 = RMul(_t4CC7,coeff4BDA);
          real r4E6D#1 = RAdd(r4E69,prod4BE0);
          real r4E6F#1 = RMul(coeff4BDA,coeff4BDA);
          real r4E70#3 = RMul(_t4CC7,one4BDC);
          real r4E71#1 = RAdd(r4E6F,r4E70);
          tensor[2] op1_e3_l_184E66#1 = <tensor[2]>[r4E6D,r4E71];
          real op1_e3_l_194E7F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184E66);
          real r4E84#2 = RDiv(one4BDC,op1_e3_l_194E7F);
          real r4E86#2 = RMul(r4E84,coeff4BDA);
          real r4E88#2 = RMul(r4E84,one4BDC);
          tensor[2] op1_e3_l_214E91#1 = VSub<2>(_t4CC9,_t4CB1);
          real r4E97#1 = RMul(_t4CC7,r4E86);
          real r4E9A#1 = RMul(one4BDC,r4E88);
          real r4E9B#1 = RAdd(r4E97,r4E9A);
          real r4E9D#1 = RMul(coeff4BDA,r4E86);
          real r4E9E#1 = RMul(_t4CC7,r4E88);
          real r4E9F#1 = RAdd(r4E9D,r4E9E);
          tensor[2] op1_e3_l_224E94#1 = <tensor[2]>[r4E9B,r4E9F];
          real _t4EAD#6 = VDot<2>(op1_e3_l_214E91,op1_e3_l_224E94);
          real _t4EB0#3 = -0.1e-15;
          bool _t4EB2#1 = GTE<real>(_t4EAD,_t4EB0);
          bool _t4EB4#1 = GT<real>(time4CC1,_t4EAD);
          real _t4EB6#1 = Abs<real>(op1_e3_l_194E7F);
          real _t4EB9#3 = 0.1e-20;
          bool _t4EBB#1 = GTE<real>(_t4EB6,_t4EB9);
          bool _t4EBD#1 = BAnd(_t4EB4,_t4EBB);
          bool _t4EBF#2 = BAnd(_t4EB2,_t4EBD);
          if _t4EBF then goto ASSIGN4EC3 else goto JOIN4ECE
        ASSIGN4EC3:  preds = [COND4EC1]
          int _t4EC2#2 = 0;
          bool _t4EC4#1 = NEQ<int>(_t4CBF,_t4EC2);
          if _t4EC4 then goto JOIN4ECA else goto JOIN4ECA
        JOIN4ECA:  preds = [COND4EC6,COND4EC6]
          real faceTime4EC7#1 = phi(faceTime4CC5,_t4EAD)
          int face4EC8#1 = phi(_t4EC2,face4CC3)
          real time4EC9#1 = phi(_t4EAD,time4CC1)
          goto JOIN4ECE
        JOIN4ECE:  preds = [JOIN4ECA,COND4EC1]
          real faceTime4ECB#2 = phi(faceTime4EC7,faceTime4CC5)
          int face4ECC#2 = phi(face4EC8,face4CC3)
          real time4ECD#3 = phi(time4EC9,time4CC1)
          tensor[2] _t4ECF#3 = <tensor[2]>[_t4CC7,_t4CC7];
          tensor[2] _t4ED1#1 = <tensor[2]>[_t4CC7,one4BDC];
          real r4ED6#2 = RMul(_t4CC7,_t4CC7);
          real r4EDA#1 = RAdd(r4ED6,prod4BE0);
          real r4EDC#1 = RMul(coeff4BDA,_t4CC7);
          real r4EDE#1 = RAdd(r4EDC,r4E70);
          tensor[2] op1_e3_l_184ED3#1 = <tensor[2]>[r4EDA,r4EDE];
          real op1_e3_l_194EEC#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184ED3);
          real r4EF1#2 = RDiv(one4BDC,op1_e3_l_194EEC);
          real r4EF3#2 = RMul(r4EF1,_t4CC7);
          real r4EF5#2 = RMul(r4EF1,one4BDC);
          tensor[2] op1_e3_l_214EFE#2 = VSub<2>(_t4ECF,_t4CB1);
          real r4F04#1 = RMul(_t4CC7,r4EF3);
          real r4F07#1 = RMul(one4BDC,r4EF5);
          real r4F08#1 = RAdd(r4F04,r4F07);
          real r4F0A#1 = RMul(coeff4BDA,r4EF3);
          real r4F0B#1 = RMul(_t4CC7,r4EF5);
          real r4F0C#1 = RAdd(r4F0A,r4F0B);
          tensor[2] op1_e3_l_224F01#1 = <tensor[2]>[r4F08,r4F0C];
          real _t4F1A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F01);
          bool _t4F1D#2 = GTE<real>(_t4F1A,_t4EB0);
          bool _t4F1F#1 = GT<real>(time4ECD,_t4F1A);
          real _t4F21#1 = Abs<real>(op1_e3_l_194EEC);
          bool _t4F24#2 = GTE<real>(_t4F21,_t4EB9);
          bool _t4F26#1 = BAnd(_t4F1F,_t4F24);
          bool _t4F28#1 = BAnd(_t4F1D,_t4F26);
          if _t4F28 then goto ASSIGN543B else goto JOIN4F35
        ASSIGN543B:  preds = [COND4F2A]
          bool _t4F2B#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4F2B then goto JOIN4F31 else goto JOIN4F31
        JOIN4F31:  preds = [COND4F2D,COND4F2D]
          real faceTime4F2E#1 = phi(faceTime4ECB,_t4F1A)
          int face4F2F#1 = phi(ilit4B8F,face4ECC)
          real time4F30#1 = phi(_t4F1A,time4ECD)
          goto JOIN4F35
        JOIN4F35:  preds = [JOIN4F31,COND4F2A]
          real faceTime4F32#2 = phi(faceTime4F2E,faceTime4ECB)
          int face4F33#2 = phi(face4F2F,face4ECC)
          real time4F34#3 = phi(time4F30,time4ECD)
          real r4F3C#1 = RMul(one4BDC,_t4CC7);
          real r4F3D#1 = RAdd(r4E70,r4F3C);
          real r4F3F#1 = RMul(coeff4BDA,one4BDC);
          real r4F41#1 = RAdd(r4F3F,r4ED6);
          tensor[2] op1_e3_l_184F36#1 = <tensor[2]>[r4F3D,r4F41];
          real op1_e3_l_194F4F#2 = VDot<2>(op1_e3_l_174E5B,op1_e3_l_184F36);
          real r4F54#2 = RDiv(one4BDC,op1_e3_l_194F4F);
          real r4F56#2 = RMul(r4F54,one4BDC);
          real r4F58#2 = RMul(r4F54,_t4CC7);
          real r4F64#1 = RMul(_t4CC7,r4F56);
          real r4F67#1 = RMul(one4BDC,r4F58);
          real r4F68#1 = RAdd(r4F64,r4F67);
          real r4F6A#1 = RMul(coeff4BDA,r4F56);
          real r4F6B#1 = RMul(_t4CC7,r4F58);
          real r4F6C#1 = RAdd(r4F6A,r4F6B);
          tensor[2] op1_e3_l_224F61#1 = <tensor[2]>[r4F68,r4F6C];
          real _t4F7A#7 = VDot<2>(op1_e3_l_214EFE,op1_e3_l_224F61);
          bool _t4F7D#2 = GTE<real>(_t4F7A,_t4EB0);
          bool _t4F7F#1 = GT<real>(time4F34,_t4F7A);
          real _t4F81#1 = Abs<real>(op1_e3_l_194F4F);
          bool _t4F84#2 = GTE<real>(_t4F81,_t4EB9);
          bool _t4F86#1 = BAnd(_t4F7F,_t4F84);
          bool _t4F88#1 = BAnd(_t4F7D,_t4F86);
          if _t4F88 then goto ASSIGN5447 else goto JOIN4F97
        ASSIGN5447:  preds = [COND4F8A]
          bool _t4F8D#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4F8D then goto JOIN4F93 else goto JOIN4F93
        JOIN4F93:  preds = [COND4F8F,COND4F8F]
          real faceTime4F90#1 = phi(faceTime4F32,_t4F7A)
          int face4F91#1 = phi(ilit4B92,face4F33)
          real time4F92#1 = phi(_t4F7A,time4F34)
          goto JOIN4F97
        JOIN4F97:  preds = [JOIN4F93,COND4F8A]
          real faceTime4F94#2 = phi(faceTime4F90,faceTime4F32)
          int face4F95#2 = phi(face4F91,face4F33)
          real time4F96#1 = phi(time4F92,time4F34)
          bool _t4F98#1 = NEQ<int>(face4F95,face4CC3);
          if _t4F98 then goto ASSIGN4F9C else goto ASSIGN51E4
        ASSIGN4F9C:  preds = [COND4F9A]
          real _t4F9B#1 = Max<real>(time4F96,_t4CC7);
          real _t4F9D#1 = IntToReal(face4F95);
          tensor[2] _t4F9F#1 = <tensor[2]>[_t4F9B,_t4F9D];
          goto JOIN4FA3
        JOIN4FA3:  preds = [ASSIGN4FA0,JOIN51E9]
          tensor[2] _t4FA1#1 = phi(_t4F9F,_t4FA2)
          real nextTime4FA4#3 = VIndex<2,0>(_t4FA1);
          real op1_e3_l_44FA9#1 = RMul(nextTime4FA4,op1_e3_l_34CAB);
          real _t4FAC#1 = RAdd(rayN4B61,op1_e3_l_44FA9);
          real _t4FAF#1 = Min<real>(camFarVsp4B51,_t4FAC);
          real rayNp4FB1#6 = Max<real>(rayN4B61,_t4FAF);
          string _t4FB3#1 = "Next time:";
          Print<[string,real,string]>(_t4FB3,nextTime4FA4,_t4B73);
          bool _t4FB6#1 = GTE<real>(nextTime4FA4,_t4CC7);
          if _t4FB6 then goto ASSIGN4FBA else goto JOIN50B2
        ASSIGN4FBA:  preds = [COND4FB8]
          tensor[2] _t4FB9#1 = <tensor[2]>[rayN4B61,rayNp4FB1];
          tensor[2][] rayCellInter4FBB#3 = Append<tensor[2]>(rayCellInter4B59,_t4FB9);
          int _t4FBD#1 = ExtractFemItem<int,CellIndex(Mesh)>(pos4B67);
          if _t4EBF then goto ASSIGN4FC1 else goto JOIN4FCC
        ASSIGN4FC1:  preds = [COND4FBF]
          int _t4FC0#2 = 0;
          bool _t4FC2#1 = NEQ<int>(_t4CBF,_t4FC0);
          if _t4FC2 then goto JOIN4FC8 else goto JOIN4FC8
        JOIN4FC8:  preds = [COND4FC4,COND4FC4]
          real faceTime4FC5#1 = phi(faceTime4CC5,_t4EAD)
          int face4FC6#1 = phi(_t4FC0,face4CC3)
          real time4FC7#1 = phi(_t4EAD,time4CC1)
          goto JOIN4FCC
        JOIN4FCC:  preds = [JOIN4FC8,COND4FBF]
          real faceTime4FC9#2 = phi(faceTime4FC5,faceTime4CC5)
          int face4FCA#2 = phi(face4FC6,face4CC3)
          real time4FCB#3 = phi(time4FC7,time4CC1)
          bool _t4FCD#1 = GT<real>(time4FCB,_t4F1A);
          bool _t4FCF#1 = BAnd(_t4FCD,_t4F24);
          bool _t4FD1#1 = BAnd(_t4F1D,_t4FCF);
          if _t4FD1 then goto ASSIGN544A else goto JOIN4FDE
        ASSIGN544A:  preds = [COND4FD3]
          bool _t4FD4#1 = NEQ<int>(_t4CBF,ilit4B8F);
          if _t4FD4 then goto JOIN4FDA else goto JOIN4FDA
        JOIN4FDA:  preds = [COND4FD6,COND4FD6]
          real faceTime4FD7#1 = phi(faceTime4FC9,_t4F1A)
          int face4FD8#1 = phi(ilit4B8F,face4FCA)
          real time4FD9#1 = phi(_t4F1A,time4FCB)
          goto JOIN4FDE
        JOIN4FDE:  preds = [JOIN4FDA,COND4FD3]
          real faceTime4FDB#2 = phi(faceTime4FD7,faceTime4FC9)
          int face4FDC#2 = phi(face4FD8,face4FCA)
          real time4FDD#3 = phi(time4FD9,time4FCB)
          bool _t4FDF#1 = GT<real>(time4FDD,_t4F7A);
          bool _t4FE1#1 = BAnd(_t4FDF,_t4F84);
          bool _t4FE3#1 = BAnd(_t4F7D,_t4FE1);
          if _t4FE3 then goto ASSIGN544B else goto JOIN4FF2
        ASSIGN544B:  preds = [COND4FE5]
          bool _t4FE8#1 = NEQ<int>(_t4CBF,ilit4B92);
          if _t4FE8 then goto JOIN4FEE else goto JOIN4FEE
        JOIN4FEE:  preds = [COND4FEA,COND4FEA]
          real faceTime4FEB#1 = phi(faceTime4FDB,_t4F7A)
          int face4FEC#1 = phi(ilit4B92,face4FDC)
          real time4FED#1 = phi(_t4F7A,time4FDD)
          goto JOIN4FF2
        JOIN4FF2:  preds = [JOIN4FEE,COND4FE5]
          real faceTime4FEF#2 = phi(faceTime4FEB,faceTime4FDB)
          int face4FF0#2 = phi(face4FEC,face4FDC)
          real time4FF1#1 = phi(time4FED,time4FDD)
          bool _t4FF3#1 = NEQ<int>(face4FF0,face4CC3);
          if _t4FF3 then goto ASSIGN4FF7 else goto ASSIGN51DA
        ASSIGN4FF7:  preds = [COND4FF5]
          real _t4FF6#1 = Max<real>(time4FF1,_t4CC7);
          real _t4FF8#1 = IntToReal(face4FF0);
          tensor[2] _t4FFA#1 = <tensor[2]>[_t4FF6,_t4FF8];
          goto JOIN4FFE
        JOIN4FFE:  preds = [ASSIGN4FFB,JOIN51DF]
          tensor[2] _t4FFC#3 = phi(_t4FFA,_t4FFD)
          real _t4FFF#1 = VIndex<2,1>(_t4FFC);
          real t5001#1 = Floor<1>(_t4FFF);
          int _t5003#6 = RealToInt<1>(t5001);
          int[2] _t5005#2 = nextCell45006 (_t5003,_t4FBD,_t4B7D);
          int _t5019#4 = 0;
          int _t501B#2 = Subscript<int[2]>(_t5005,_t5019);
          bool _t501D#1 = NEQ<int>(face4CC3,_t501B);
          if _t501D then goto ASSIGN5021 else goto ASSIGN51D1
        ASSIGN5021:  preds = [COND501F]
          tensor[2][3] _t5020#1 = <tensor[2][3]>{_t4CC9,_t4ECF,_t4ECF};
          int _t5022#3 = Subscript<int[2]>(_t5005,ilit4B8F);
          tensor[2] _t5024#1 = Subscript<tensor[2][3]>(_t5020,_t5022);
          tensor[2][3] _t5026#1 = <tensor[2][3]>{_t4CCD,_t4ED1,_t4CC9};
          tensor[2] _t5028#1 = Subscript<tensor[2][3]>(_t5026,_t5022);
          real _t502A#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_16502C#1 = VScale<2>(_t502A,op1_e3_l_174E5B);
          tensor[2] _t502F#2 = VAdd<2>(op1_e3_l_16502C,_t4CB1);
          real _t5032#1 = VIndex<2,0>(_t502F);
          real _t5034#1 = VIndex<2,1>(_t502F);
          real[2] _t5036#1 = <real[2]>{_t5032,_t5034};
          int[3] _t5038#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t503A#1 = Subscript<int[3]>(_t5038,_t5003);
          real _t503C#1 = Subscript<real[2]>(_t5036,_t503A);
          real[2] _t503E#1 = <real[2]>{one4BDC,_t4CC7};
          real[2] _t5040#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2] _t5042#1 = <real[2]>{_t4CC7,_t4CC7};
          real[2][3] _t5044#1 = <real[2][3]>{_t503E,_t5040,_t5042};
          real[2] _t5046#1 = Subscript<real[2][3]>(_t5044,_t5003);
          int[3] _t5048#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t504A#1 = Subscript<int[3]>(_t5048,_t5003);
          real _t504C#1 = Subscript<real[2]>(_t5046,_t504A);
          real[2] _t504E#1 = <real[2]>{coeff4BDA,one4BDC};
          real[2] _t5050#1 = <real[2]>{_t4CC7,one4BDC};
          real[2] _t5052#1 = <real[2]>{one4BDC,_t4CC7};
          real[2][3] _t5054#1 = <real[2][3]>{_t504E,_t5050,_t5052};
          real[2] _t5056#1 = Subscript<real[2][3]>(_t5054,_t5003);
          int[3] _t5058#1 = <int[3]>{ilit4B8F,ilit4B8F,_t5019};
          int _t505A#1 = Subscript<int[3]>(_t5058,_t5003);
          real _t505C#1 = Subscript<real[2]>(_t5056,_t505A);
          real op1_e3_l_5505E#1 = RSub(_t503C,_t504C);
          real op1_e3_l_65061#1 = RDiv(op1_e3_l_5505E,_t505C);
          tensor[2] op1_e3_l_75064#1 = VScale<2>(op1_e3_l_65061,_t5028);
          tensor[2] _t5067#1 = VAdd<2>(_t5024,op1_e3_l_75064);
          femData:MeshPos _t506A#1 = ExtractFemItemN<[femData:Mesh,int,tensor[2],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t4B7D,_t501B,_t5067,_t5022);
          goto JOIN506E
        JOIN506E:  preds = [ASSIGN506B,ASSIGN51D8]
          femData:MeshPos posp506C#5 = phi(_t506A,_t506D)
          bool _t506F#1 = GTE<real>(rayNp4FB1,camFarVsp4B51);
          if _t506F then goto ASSIGN5073 else goto JOIN5083
        ASSIGN5073:  preds = [COND5071]
          string _t5072#1 = "cells: ";
          Print<[string,femData:MeshCell[],string]>(_t5072,cellInter4B5F,_t4B73);
          tensor[3] op1_e3_l_35075#1 = VScale<3>(camFarVsp4B51,rayVec4B4F);
          tensor[3] _t5078#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35075);
          tensor[3][] spaceInter507B#1 = Append<tensor[3]>(spaceInter4B5B,_t5078);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter507B;
          self.rayN = rayNp4FB1;
          self.steps = steps4CA4;
          stabilize
          goto JOIN5083
        JOIN5083:  preds = [*STABILIZE5081,COND5071]
          tensor[3][] spaceInter5082#1 = phi(spaceInter4B5B)
          tensor[3] op1_e3_l_35084#1 = VScale<3>(rayNp4FB1,rayVec4B4F);
          tensor[3] _t5087#1 = VAdd<3>(rayOrig4B4D,op1_e3_l_35084);
          tensor[3][] spaceInter508A#2 = Append<tensor[3]>(spaceInter5082,_t5087);
          tensor[2] _t508C#1 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(posp506C);
          tensor[2][] refSpaceInter508E#2 = Append<tensor[2]>(refSpaceInter4B5D,_t508C);
          bool _t5090#1 = ExtractFemItem<bool,Valid(MeshPos)>(posp506C);
          if _t5090 then goto ASSIGN5094 else goto ASSIGN51CE
        ASSIGN5094:  preds = [COND5092]
          string _t5093#1 = "Next cell:";
          femData:Mesh _t5095#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp506C);
          int _t5097#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp506C);
          femData:MeshCell _t5099#3 = LoadFem<femData:MeshCell>(_t5095,_t5097);
          Print<[string,femData:MeshCell,string]>(_t5093,_t5099,_t4B73);
          femData:MeshCell[] cellInter509C#1 = Append<femData:MeshCell>(cellInter4B5F,_t5099);
          self.rayCellInter = rayCellInter4FBB;
          self.spaceInter = spaceInter508A;
          self.refSpaceInter = refSpaceInter508E;
          self.cellInter = cellInter509C;
          self.rayN = rayNp4FB1;
          self.currentCell = _t5099;
          self.steps = steps4CA4;
          self.pos = posp506C;
          active
          goto JOIN50AA
        JOIN50AA:  preds = [*ACTIVE50A6,MASSIGN51CF]
          femData:MeshPos pos50A7#1 = phi(pos4B67)
          femData:MeshCell currentCell50A8#1 = phi(currentCell4B63)
          femData:MeshCell[] cellInter50A9#1 = phi(cellInter4B5F)
          goto JOIN50B2
        JOIN50B2:  preds = [JOIN50AA,COND4FB8]
          femData:MeshPos pos50AB#6 = phi(pos50A7,pos4B67)
          femData:MeshCell currentCell50AC#1 = phi(currentCell50A8,currentCell4B63)
          real rayN50AD#3 = phi(rayNp4FB1,rayN4B61)
          femData:MeshCell[] cellInter50AE#3 = phi(cellInter50A9,cellInter4B5F)
          tensor[2][] refSpaceInter50AF#2 = phi(refSpaceInter508E,refSpaceInter4B5D)
          tensor[3][] spaceInter50B0#2 = phi(spaceInter508A,spaceInter4B5B)
          tensor[2][] rayCellInter50B1#3 = phi(rayCellInter4FBB,rayCellInter4B59)
          int _t50B3#1 = 0;
          int _t50B5#1 = ISub(cellIntersects4B57,ilit4B8F);
          int[] _t50B7#1 = Range(_t50B3,_t50B5);
        FOREACH50BA:  preds = [ASSIGN50B8,NEXT50E3]
          foreach (i50B9 in _t50B7) on exit goto ASSIGN50E5
            real estimate50C3#4 = phi(camFarVsp4B51,estimate50E0)
            int newIdx50DB#7 = phi(face4CC3,newIdx50E1)
          real t50BB#3 = Subscript<real[]>(normalizedTimes4B55,i50B9);
          femData:MeshPos posp50BD#2 = Subscript<femData:MeshPos[]>(poses4B53,i50B9);
          bool _t50BF#1 = GTE<real>(t50BB,rayN50AD);
          if _t50BF then goto ASSIGN50C4 else goto JOIN50E2
        ASSIGN50C4:  preds = [COND50C1]
          bool _t50C2#1 = GTE<real>(estimate50C3,t50BB);
          if _t50C2 then goto ASSIGN50C7 else goto JOIN50DF
        ASSIGN50C7:  preds = [COND50C5]
          femData:Mesh _t50C6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(posp50BD);
          int _t50C8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(posp50BD);
          femData:MeshCell _t50CA#1 = LoadFem<femData:MeshCell>(_t50C6,_t50C8);
          femData:Mesh _t50CC#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int _t50CE#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:MeshCell _t50D0#1 = LoadFem<femData:MeshCell>(_t50CC,_t50CE);
          int _t50D2#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50CA);
          int _t50D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(_t50D0);
          bool _t50D6#1 = NEQ<int>(_t50D2,_t50D4);
          if _t50D6 then goto JOIN50DC else goto JOIN50DC
        JOIN50DC:  preds = [COND50D8,COND50D8]
          real estimate50D9#1 = phi(t50BB,estimate50C3)
          int newIdx50DA#1 = phi(i50B9,newIdx50DB)
          goto JOIN50DF
        JOIN50DF:  preds = [JOIN50DC,COND50C5]
          real estimate50DD#1 = phi(estimate50D9,estimate50C3)
          int newIdx50DE#1 = phi(newIdx50DA,newIdx50DB)
          goto JOIN50E2
        JOIN50E2:  preds = [JOIN50DF,COND50C1]
          real estimate50E0#1 = phi(estimate50DD,estimate50C3)
          int newIdx50E1#1 = phi(newIdx50DE,newIdx50DB)
          goto FOREACH50BA
        ASSIGN50E5:  preds = [FOREACH50BA]
          bool _t50E4#1 = GT<int>(newIdx50DB,face4CC3);
          if _t50E4 then goto ASSIGN50E8 else goto ASSIGN51B9
        ASSIGN50E8:  preds = [COND50E6]
          string _t50E7#1 = "nerror:Impossible happened\n";
          Print<[string]>(_t50E7);
          if startsInside4B69 then goto ASSIGN50EC else goto JOIN50EE
        ASSIGN50EC:  preds = [COND50EA]
          string _t50EB#1 = "because of an inside\n";
          Print<[string]>(_t50EB);
          goto JOIN50EE
        JOIN50EE:  preds = [MASSIGN50ED,COND50EA]
          string _t50EF#1 = "Direction:";
          Print<[string,tensor[3],string]>(_t50EF,rayVec4B4F,_t4B73);
          string _t50F2#1 = "world pos was:";
          tensor[2] _t50F4#3 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(pos50AB);
          int _t50F6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos50AB);
          femData:Mesh _t50F8#9 = ExtractFem<femData:Mesh,femData:MeshPos>(pos50AB);
          int mulRes50FC#3 = IMul(_t50F6,ilit4B8A);
          int idx50FF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,mulRes50FC);
          int addRes5101#1 = IAdd(mulRes50FC,ilit4B8F);
          int idx5102#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5101);
          int addRes5104#1 = IAdd(mulRes50FC,ilit4B92);
          int idx5105#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t50F8,addRes5104);
          int mulRes5118#2 = IMul(ilit4B92,idx50FF);
          int addRes511B#1 = IAdd(ilit4B8F,mulRes5118);
          real dof_load511C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5118);
          real dof_load511D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes511B);
          int mulRes5120#2 = IMul(ilit4B92,idx5102);
          int addRes5122#1 = IAdd(ilit4B8F,mulRes5120);
          real dof_load5123#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5120);
          real dof_load5124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5122);
          int mulRes5127#2 = IMul(ilit4B92,idx5105);
          int addRes5129#1 = IAdd(ilit4B8F,mulRes5127);
          real dof_load512A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,mulRes5127);
          real dof_load512B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t50F8,addRes5129);
          real varAcc5149#1 = VIndex<2,0>(_t50F4);
          real varAcc514A#1 = VIndex<2,1>(_t50F4);
          real prod514E#2 = RMul(varAcc5149,one4BDC);
          real prod5150#2 = RMul(one4BDC,varAcc514A);
          real mult5153#1 = RMul(coeff4BDA,prod5150);
          real mult5154#1 = RMul(coeff4BDA,prod514E);
          real sum5155#1 = RAdd(mult5153,mult5154);
          real sum5156#2 = RAdd(mult4BE1,sum5155);
          real basisEval5158#2 = RMul(one4BDC,prod514E);
          real basisEval5159#2 = RMul(one4BDC,prod5150);
          real r5171#1 = RMul(dof_load511C,sum5156);
          real r5174#1 = RMul(dof_load5123,basisEval5158);
          real r5177#1 = RMul(dof_load512A,basisEval5159);
          real r5178#1 = RAdd(r5171,r5174);
          real r5179#1 = RAdd(r5178,r5177);
          real r517B#1 = RMul(dof_load511D,sum5156);
          real r517D#1 = RMul(dof_load5124,basisEval5158);
          real r517F#1 = RMul(dof_load512B,basisEval5159);
          real r5180#1 = RAdd(r517B,r517D);
          real r5181#1 = RAdd(r5180,r517F);
          tensor[2] _t516E#1 = <tensor[2]>[r5179,r5181];
          Print<[string,tensor[2],string]>(_t50F2,_t516E,_t4B73);
          string _t5198#1 = "Interior pos was:";
          Print<[string,tensor[2],string]>(_t5198,_t50F4,_t4B73);
          string _t519B#1 = " at ";
          Print<[real[],string,int,string]>(normalizedTimes4B55,_t519B,newIdx50DB,_t4B73);
          string _t519E#1 = "Original time was:";
          Print<[string,real,string]>(_t519E,rayN50AD,_t4B73);
          femData:MeshPos pos51A1#3 = Subscript<femData:MeshPos[]>(poses4B53,newIdx50DB);
          femData:Mesh _t51A3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(pos51A1);
          int _t51A5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos51A1);
          femData:MeshCell currentCell51A7#2 = LoadFem<femData:MeshCell>(_t51A3,_t51A5);
          femData:MeshCell[] cellInter51A9#1 = Append<femData:MeshCell>(cellInter50AE,currentCell51A7);
          real rayN51AB#1 = Subscript<real[]>(normalizedTimes4B55,newIdx50DB);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter51A9;
          self.rayN = rayN51AB;
          self.currentCell = currentCell51A7;
          self.steps = steps4CA4;
          self.pos = pos51A1;
          active
          goto JOIN51B6
        JOIN51B6:  preds = [*ACTIVE51B5,*STABILIZE51CC]
          unreachable
        ASSIGN51B9:  preds = [COND50E6]
          string _t51B8#1 = "Enter times:";
          Print<[string,real[],string]>(_t51B8,normalizedTimes4B55,_t4B73);
          string _t51BB#1 = "Ray enter times:";
          Print<[string,tensor[2][],string]>(_t51BB,rayCellInter50B1,_t4B73);
          string _t51BE#1 = "cells:";
          Print<[string,femData:MeshCell[],string]>(_t51BE,cellInter50AE,_t4B73);
          string _t51C1#1 = "End\n";
          Print<[string]>(_t51C1);
          self.rayCellInter = rayCellInter50B1;
          self.spaceInter = spaceInter50B0;
          self.refSpaceInter = refSpaceInter50AF;
          self.cellInter = cellInter50AE;
          self.rayN = rayN50AD;
          self.currentCell = currentCell50AC;
          self.steps = steps4CA4;
          self.pos = pos50AB;
          stabilize
          goto JOIN51B6
        ASSIGN51CE:  preds = [COND5092]
          string _t51CD#1 = "Invalid\n";
          Print<[string]>(_t51CD);
          goto JOIN50AA
        ASSIGN51D1:  preds = [COND501F]
          real _t51D0#1 = VIndex<2,0>(_t4FFC);
          tensor[2] op1_e3_l_1651D2#1 = VScale<2>(_t51D0,op1_e3_l_174E5B);
          tensor[2] _t51D5#1 = VAdd<2>(op1_e3_l_1651D2,_t4CB1);
          femData:MeshPos _t506D#1 = ExtractFemItemN<[femData:Mesh,tensor[2]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t4B7D,_t51D5);
          goto JOIN506E
        ASSIGN51DA:  preds = [COND4FF5]
          bool _t51D9#1 = EQ<real>(faceTime4CC5,faceTime4FEF);
          if _t51D9 then goto ASSIGN544C else goto ASSIGN51E1
        ASSIGN544C:  preds = [COND51DB]
          tensor[2] _t51DC#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51DF
        JOIN51DF:  preds = [ASSIGN544C,ASSIGN51E2]
          tensor[2] _t4FFD#1 = phi(_t51DC,_t51DE)
          goto JOIN4FFE
        ASSIGN51E1:  preds = [COND51DB]
          real _t51E0#1 = IntToReal(_t4CBF);
          tensor[2] _t51DE#1 = <tensor[2]>[faceTime4FEF,_t51E0];
          goto JOIN51DF
        ASSIGN51E4:  preds = [COND4F9A]
          bool _t51E3#1 = EQ<real>(faceTime4CC5,faceTime4F94);
          if _t51E3 then goto ASSIGN5448 else goto ASSIGN51EB
        ASSIGN5448:  preds = [COND51E5]
          tensor[2] _t51E6#1 = <tensor[2]>[coeff4BDA,coeff4BDA];
          goto JOIN51E9
        JOIN51E9:  preds = [ASSIGN5448,ASSIGN51EC]
          tensor[2] _t4FA2#1 = phi(_t51E6,_t51E8)
          goto JOIN4FA3
        ASSIGN51EB:  preds = [COND51E5]
          real _t51EA#1 = IntToReal(_t4CBF);
          tensor[2] _t51E8#1 = <tensor[2]>[faceTime4F94,_t51EA];
          goto JOIN51E9
        ASSIGN51EE:  preds = [COND4C9D]
          string _t51ED#1 = "Did not move off ray!\n";
          Print<[string]>(_t51ED);
          goto JOIN4CA1
    end update
  end ray
## initial strand creation
  GRID(2)
    ENTRY51F1:  preds = []
      int iresU51F2#1 = globals.iresU3FCF;
      int iresV51F4#1 = globals.iresV3FD0;
      int _t51F6#2 = 0;
      int _t51F8#2 = 1;
      int _t51FA#1 = ISub(iresU51F2,_t51F8);
      int[] _t51FC#1 = Range(_t51F6,_t51FA);
    FOREACH51FF:  preds = [ASSIGN51FD,NEXT5208]
      foreach (vi51FE in _t51FC) on exit goto RETURN5209
      int _t5200#1 = ISub(iresV51F4,_t51F8);
      int[] _t5202#1 = Range(_t51F6,_t5200);
    FOREACH5205:  preds = [ASSIGN5203,NEXT5207]
      foreach (ui5204 in _t5202) on exit goto NEXT5208
      new ray(ui5204,vi51FE);
      goto FOREACH5205
    NEXT5208:  preds = [FOREACH5205]
      goto FOREACH51FF
    RETURN5209:  preds = [FOREACH51FF]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(0.3e1,-0.3e1,0.3e1));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-7;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global real camNearVsp;
global real camFarVsp;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
//***** FUNCTIONS *****
  function femData(MeshPos) _msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
  function int[2] nextCell4 (int p_faceIdx_50,int p_cell_51,femData(Mesh) p_mesh_52) {
    return ExtractFemItemN<[femData(Mesh),int],int[2],CellFaceCell(Mesh),"","",[],int>(p_mesh_52,IAdd(IMul(p_cell_51,6),IMul(p_faceIdx_50,2)))
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_53;
    l__t_53 = <femData(MeshCell)[]>{};
    for i__t_54 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_53 = Append<femData(MeshCell),femData(MeshCell)>(l__t_53,LoadFem<femData(MeshCell)>(globals.a,i__t_54));
    }
    globals.0cell_a = l__t_53;
    vec3{4} v_55 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_6_56 = Sqrt(VDot<3,4>(v_55,v_55));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_6_56);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_6_56);
    real l_op1_e3_l_9_57 = RDiv(0.1e1,l_op1_e3_l_6_56);
    globals.camN = PACK(VScale<3,4>(l_op1_e3_l_9_57,v_55));
    real l_r_59 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_62 = RMul(0.e0,l_r_61);
    real l_r_63 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_64 = RMul(0.e0,l_r_63);
    real l_r_65 = RAdd(l_r_60,l_r_62);
    real l_r_66 = RAdd(l_r_65,l_r_64);
    vec3{4} v_67 = VEC3{4}(VDot<3,4>(v_55,VEC3{4}(l_r_66,RAdd(l_r_65,RMul(0.1e1,l_r_63)),RAdd(RAdd(l_r_60,RMul(-0.1e1,l_r_61)),l_r_64))),VDot<3,4>(v_55,VEC3{4}(RAdd(l_r_65,RMul(-0.1e1,l_r_63)),l_r_66,RAdd(RAdd(RMul(0.1e1,l_r_59),l_r_62),l_r_64))),VDot<3,4>(v_55,VEC3{4}(RAdd(RAdd(l_r_60,RMul(0.1e1,l_r_61)),l_r_64),RAdd(RAdd(RMul(-0.1e1,l_r_59),l_r_62),l_r_64),l_r_66)));
    real l_op1_e3_l_38_68 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_57,l_op1_e3_l_9_57),VDot<3,4>(v_67,v_67))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_68,VScale<3,4>(l_op1_e3_l_9_57,v_67)));
    real l_r_70 = VIndex<3,4,0>(v_55);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = VIndex<3,4,1>(v_55);
    real l_r_73 = RMul(0.e0,l_r_72);
    real l_r_74 = VIndex<3,4,2>(v_55);
    real l_r_75 = RMul(0.e0,l_r_74);
    real l_r_76 = RAdd(l_r_71,l_r_73);
    real l_r_77 = RAdd(l_r_76,l_r_75);
    vec3{4} v_78 = VScale<3,4>(l_op1_e3_l_9_57,VEC3{4}(VDot<3,4>(v_67,VEC3{4}(l_r_77,RAdd(l_r_76,RMul(0.1e1,l_r_74)),RAdd(RAdd(l_r_71,RMul(-0.1e1,l_r_72)),l_r_75))),VDot<3,4>(v_67,VEC3{4}(RAdd(l_r_76,RMul(-0.1e1,l_r_74)),l_r_77,RAdd(RAdd(RMul(0.1e1,l_r_70),l_r_73),l_r_75))),VDot<3,4>(v_67,VEC3{4}(RAdd(RAdd(l_r_71,RMul(0.1e1,l_r_72)),l_r_75),RAdd(RAdd(RMul(-0.1e1,l_r_70),l_r_73),l_r_75),l_r_77))));
    real l_r_79 = RMul(l_op1_e3_l_38_68,l_op1_e3_l_9_57);
    globals.camV = PACK(VEC3{4}(RMul(l_r_79,VIndex<3,4,0>(v_78)),RMul(l_r_79,VIndex<3,4,1>(v_78)),RMul(l_r_79,VIndex<3,4,2>(v_78))));
    real l_op1_e3_l_10_81 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_81,l_op1_e3_l_6_56);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_81),l_op1_e3_l_6_56),IntToReal(globals.iresV));
  }
//***** STRAND *****
strand ray (int p_ui_82,int p_vi_83) {
  real rayU;
  real rayV;
  tensor[3] UV;
  output tensor[3] rayOrig;
  output tensor[3] rayVec;
  output real camNearVsp;
  output real camFarVsp;
  tensor[3] rayStart;
  tensor[2] rayStartProj;
  tensor[3] rayEnd;
  tensor[3] dpos;
  tensor[2] dposProj;
  varying output femData(MeshPos)[] poses;
  varying output real[] normalizedTimes;
  varying int cellIntersects;
  varying output tensor[2][] rayCellInter;
  varying output tensor[3][] spaceInter;
  varying output tensor[2][] refSpaceInter;
  varying output femData(MeshCell)[] cellInter;
  varying int currentCellInt;
  varying real rayN;
  varying femData(MeshCell) currentCell;
  varying int steps;
  varying femData(MeshPos) pos;
  varying bool startsInside;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_84 = RNeg(globals.camUmax);
    real l_rayU_85 = RAdd(l_op1_e3_l_9_84,RMul(RDiv(RSub(IntToReal(p_ui_82),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_84)));
    real l_op1_e3_l_9_86 = RNeg(globals.camVmax);
    real l_rayV_87 = RAdd(l_op1_e3_l_9_86,RMul(RDiv(RSub(IntToReal(p_vi_83),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_86)));
    vec3{4} v_88 = VScale<3,4>(l_rayU_85,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_89 = VScale<3,4>(l_rayV_87,LOAD_0(TensorRef<[3]>(globals.camV)));
    vec3{4} v_90 = VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_88),v_89);
    vec3{4} v_91 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(0.e0,0.e0,0.e0));
    vec3{4} v_92 = VAdd<3,4>(v_90,VScale<3,4>(globals.camNearVsp,v_91));
    vec3{4} v_93 = VAdd<3,4>(v_90,VScale<3,4>(globals.camFarVsp,v_91));
    vec3{4} v_94 = VSub<3,4>(v_93,v_92);
    femData(MeshPos)[0] t_96 = <femData(MeshPos)[0]>{};
    femData(MeshPos)[] l__t_95 = MkDynamic<femData(MeshPos),0>(t_96);
    real[0] t_98 = <real[0]>{};
    real[] l__t_97 = MkDynamic<real,0>(t_98);
    tensor[2][0] t_100 = <tensor[2][0]>{};
    tensor[2][] l__t_99 = MkDynamic<tensor[2],0>(t_100);
    tensor[3][0] t_102 = <tensor[3][0]>{};
    tensor[3][] l__t_101 = MkDynamic<tensor[3],0>(t_102);
    tensor[2][0] t_104 = <tensor[2][0]>{};
    tensor[2][] l__t_103 = MkDynamic<tensor[2],0>(t_104);
    femData(MeshCell)[0] t_106 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_105 = MkDynamic<femData(MeshCell),0>(t_106);
    self.rayU = l_rayU_85;
    self.rayV = l_rayV_87;
    self.UV = PACK(VAdd<3,4>(v_88,v_89));
    self.rayOrig = PACK(v_90);
    self.rayVec = PACK(v_91);
    self.camNearVsp = globals.camNearVsp;
    self.camFarVsp = globals.camFarVsp;
    self.rayStart = PACK(v_92);
    self.rayStartProj = PACK(VEC2(VIndex<3,4,0>(v_92),VIndex<3,4,1>(v_92)));
    self.rayEnd = PACK(v_93);
    self.dpos = PACK(v_94);
    self.dposProj = PACK(VEC2(VIndex<3,4,0>(v_94),VIndex<3,4,1>(v_94)));
    self.poses = l__t_95;
    self.normalizedTimes = l__t_97;
    self.cellIntersects = 0;
    self.rayCellInter = l__t_99;
    self.spaceInter = l__t_101;
    self.refSpaceInter = l__t_103;
    self.cellInter = l__t_105;
    self.currentCellInt = -1;
    self.rayN = 0.e0;
    self.currentCell = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    self.steps = 0;
    self.pos = ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(globals.a);
    self.startsInside = false;
    self.ui = p_ui_82;
    self.vi = p_vi_83;
  }
  start (world, globals) {
    tensor[3][] l_spaceInter_308;
    tensor[2][] l__t_307;
    femData(MeshCell)[] l__t_306;
    real l_rayN_305;
    femData(MeshCell) l_currentCell_304;
    femData(MeshPos) l_pos_303;
    femData(MeshPos)[] l_poses_121;
    real[] l_normalizedTimes_120;
    int l_cellIntersects_119;
    int l_currentCellInt_118;
    bool l_startsInside_117;
    real l_camFarVsp_116;
    bool l__t_115;
    if (NEQ<int>(self.ui,globals.debugU)) {
      l__t_115 = true;
    } else {
      l__t_115 = NEQ<int>(self.vi,globals.debugV);
    }
    if (l__t_115) {
      if (globals.debug) {
        stabilize;
      }
    }
    l_camFarVsp_116 = self.camFarVsp;
    l_startsInside_117 = self.startsInside;
    l_currentCellInt_118 = self.currentCellInt;
    l_cellIntersects_119 = self.cellIntersects;
    l_normalizedTimes_120 = self.normalizedTimes;
    l_poses_121 = self.poses;
    foreach femData(MeshCell) i_c_122 in globals.0cell_a {
      femData(MeshPos)[] l_poses_131;
      real[] l_normalizedTimes_130;
      int l_cellIntersects_129;
      int l_cellIntersects_128;
      bool l_startsInside_127;
      real l_camNearVsp_126;
      print("Cell:",i_c_122,"\n");
      int l__t_123 = ExtractFemItem<int,CellIndex(MeshCell)>(i_c_122);
      femData(Mesh) l__t_124 = ExtractFem<femData(Mesh),femData(MeshCell)>(i_c_122);
      femData(MeshPos) l__t_125 = _msh_newtonInverse$54A6(TensorRef<[2]>(self.rayStartProj),l__t_123,l__t_124);
      if (ExtractFemItem<bool,Valid(MeshPos)>(l__t_125)) {
        print("pos starts inside\n");
        l_camNearVsp_126 = self.camNearVsp;
        l_startsInside_127 = true;
        l_cellIntersects_128 = l_cellIntersects_119;
        l_cellIntersects_129 = IAdd(l_cellIntersects_119,1);
        l_normalizedTimes_130 = Append<real,real>(l_normalizedTimes_120,self.camNearVsp);
        l_poses_131 = Append<femData(MeshPos),femData(MeshPos)>(l_poses_121,ExtractFemItemN<[femData(Mesh),int,tensor[2]],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_124,l__t_123,ExtractFemItem<tensor[2],RefPos(Mesh)>(l__t_125)));
      } else {
        femData(MeshPos)[] l_poses_288;
        real[] l_normalizedTimes_287;
        int l_cellIntersects_286;
        int l_currentCellInt_285;
        real l_startTime_284;
        vec2 v_216;
        real l_time_215;
        int l_face_214;
        real l_time_202;
        int l_face_201;
        real l_time_186;
        int l_face_185;
        vec2 v_132 = VEC2(-0.e0,-0.e0);
        int l_mulRes_133 = IMul(l__t_123,3);
        int t_134 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,l_mulRes_133);
        int l_mulRes_135 = IMul(2,t_134);
        real l_dof_load_136 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_135);
        real l_dof_load_137 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_135));
        int t_138 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,IAdd(l_mulRes_133,1));
        int l_mulRes_139 = IMul(2,t_138);
        real l_dof_load_140 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_139);
        real l_dof_load_141 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_139));
        int t_142 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,IAdd(l_mulRes_133,2));
        int l_mulRes_143 = IMul(2,t_142);
        real l_dof_load_144 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_143);
        real l_dof_load_145 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_143));
        real l_prod_146 = RMul(0.1e1,0.1e1);
        real l_basisEval_147 = RMul(-0.1e1,l_prod_146);
        real l_basisEval_148 = RMul(0.1e1,l_prod_146);
        real l_r_149 = RMul(l_dof_load_136,l_basisEval_147);
        real l_r_150 = RAdd(RAdd(l_r_149,RMul(l_dof_load_140,l_basisEval_148)),RMul(l_dof_load_144,0.e0));
        real l_r_151 = RAdd(RAdd(l_r_149,RMul(l_dof_load_140,0.e0)),RMul(l_dof_load_144,l_basisEval_148));
        real l_r_152 = RMul(l_dof_load_137,l_basisEval_147);
        real l_r_153 = RAdd(RAdd(l_r_152,RMul(l_dof_load_141,l_basisEval_148)),RMul(l_dof_load_145,0.e0));
        real l_r_154 = RAdd(RAdd(l_r_152,RMul(l_dof_load_141,0.e0)),RMul(l_dof_load_145,l_basisEval_148));
        real l_r_155 = RAdd(RMul(0.e0,l_r_150),RMul(-0.1e1,l_r_153));
        real l_r_156 = RMul(0.e0,l_r_151);
        real l_r_157 = RAdd(l_r_156,RMul(-0.1e1,l_r_154));
        real l_r_158 = RAdd(RMul(0.1e1,l_r_150),RMul(0.e0,l_r_153));
        real l_r_159 = RMul(0.e0,l_r_154);
        real l_r_160 = RAdd(RMul(0.1e1,l_r_151),l_r_159);
        real l_op1_e3_l_23_161 = VDot<2,2>(VEC2(l_r_150,l_r_153),VEC2(RAdd(l_r_156,RMul(0.1e1,l_r_154)),RAdd(RMul(-0.1e1,l_r_151),l_r_159)));
        real l_prod_162 = RMul(VIndex<2,2,0>(v_132),0.1e1);
        real l_prod_163 = RMul(0.1e1,VIndex<2,2,1>(v_132));
        real l_sum_164 = RAdd(l_basisEval_148,RAdd(RMul(-0.1e1,l_prod_163),RMul(-0.1e1,l_prod_162)));
        real l_basisEval_165 = RMul(0.1e1,l_prod_162);
        real l_basisEval_166 = RMul(0.1e1,l_prod_163);
        vec2 v_167 = VEC2(RDiv(RAdd(RMul(0.e0,l_r_155),RMul(-0.1e1,l_r_157)),l_op1_e3_l_23_161),RDiv(RAdd(RMul(0.e0,l_r_158),RMul(-0.1e1,l_r_160)),l_op1_e3_l_23_161));
        vec2 v_168 = VEC2(RDiv(RAdd(RMul(0.1e1,l_r_155),RMul(0.e0,l_r_157)),l_op1_e3_l_23_161),RDiv(RAdd(RMul(0.1e1,l_r_158),RMul(0.e0,l_r_160)),l_op1_e3_l_23_161));
        vec2 v_169 = VSub<2,2>(LOAD_0(TensorRef<[2]>(self.rayStartProj)),VEC2(RAdd(RAdd(RMul(l_dof_load_136,l_sum_164),RMul(l_dof_load_140,l_basisEval_165)),RMul(l_dof_load_144,l_basisEval_166)),RAdd(RAdd(RMul(l_dof_load_137,l_sum_164),RMul(l_dof_load_141,l_basisEval_165)),RMul(l_dof_load_145,l_basisEval_166))));
        vec2 v_170 = VEC2(VDot<2,2>(v_167,v_169),VDot<2,2>(v_168,v_169));
        vec2 v_171 = VEC2(VDot<2,2>(v_167,LOAD_0(TensorRef<[2]>(self.dposProj))),VDot<2,2>(v_168,LOAD_0(TensorRef<[2]>(self.dposProj))));
        real l_r_172 = RMul(0.e0,0.1e1);
        real l_op1_e3_l_38_173 = VDot<2,2>(v_171,VEC2(RAdd(RMul(0.e0,-0.1e1),l_prod_146),RAdd(RMul(-0.1e1,-0.1e1),l_r_172)));
        real l_r_174 = RDiv(0.1e1,l_op1_e3_l_38_173);
        real l_r_175 = RMul(l_r_174,-0.1e1);
        real l_r_176 = RMul(l_r_174,0.1e1);
        real l__t_177 = VDot<2,2>(VSub<2,2>(VEC2(0.1e1,0.e0),v_170),VEC2(RAdd(RMul(0.e0,l_r_175),RMul(0.1e1,l_r_176)),RAdd(RMul(-0.1e1,l_r_175),RMul(0.e0,l_r_176))));
        bool l__t_178 = BAnd(GTE<real>(l__t_177,-0.1e-15),BAnd(GT<real>(+inf,l__t_177),GTE<real>(Abs<real>(l_op1_e3_l_38_173),0.1e-20)));
        vec2 v_179 = v_170;
        vec2 v_180 = v_171;
        if (l__t_178) {
          real l__t_184;
          int l_face_183;
          vec2 v_181 = VScale<2,2>(l__t_177,v_180);
          vec2 v_182 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_181);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_181))),BAnd(GT<real>(VIndex<2,2,0>(v_182),-0.e0),GT<real>(VIndex<2,2,1>(v_182),-0.e0)))) {
            l_face_183 = 0;
            l__t_184 = l__t_177;
          } else {
            l_face_183 = -1;
            l__t_184 = +inf;
          }
          l_face_185 = l_face_183;
          l_time_186 = l__t_184;
        } else {
          l_face_185 = -1;
          l_time_186 = +inf;
        }
        real l_r_187 = RMul(0.e0,0.e0);
        real l_op1_e3_l_38_188 = VDot<2,2>(v_180,VEC2(RAdd(l_r_187,l_prod_146),RAdd(RMul(-0.1e1,0.e0),l_r_172)));
        real l_r_189 = RDiv(0.1e1,l_op1_e3_l_38_188);
        real l_r_190 = RMul(l_r_189,0.e0);
        real l_r_191 = RMul(l_r_189,0.1e1);
        vec2 v_192 = VSub<2,2>(VEC2(0.e0,0.e0),v_179);
        real l__t_193 = VDot<2,2>(v_192,VEC2(RAdd(RMul(0.e0,l_r_190),RMul(0.1e1,l_r_191)),RAdd(RMul(-0.1e1,l_r_190),RMul(0.e0,l_r_191))));
        bool l__t_194 = GTE<real>(l__t_193,-0.1e-15);
        bool l__t_195 = GTE<real>(Abs<real>(l_op1_e3_l_38_188),0.1e-20);
        vec2 v_196 = v_192;
        if (BAnd(l__t_194,BAnd(GT<real>(l_time_186,l__t_193),l__t_195))) {
          real l__t_200;
          int l_ilit_199;
          vec2 v_197 = VScale<2,2>(l__t_193,v_180);
          vec2 v_198 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_197);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_197))),BAnd(GT<real>(VIndex<2,2,0>(v_198),-0.e0),GT<real>(VIndex<2,2,1>(v_198),-0.e0)))) {
            l_ilit_199 = 1;
            l__t_200 = l__t_193;
          } else {
            l_ilit_199 = l_face_185;
            l__t_200 = l_time_186;
          }
          l_face_201 = l_ilit_199;
          l_time_202 = l__t_200;
        } else {
          l_face_201 = l_face_185;
          l_time_202 = l_time_186;
        }
        real l_op1_e3_l_38_203 = VDot<2,2>(v_180,VEC2(RAdd(l_r_172,RMul(0.1e1,0.e0)),RAdd(RMul(-0.1e1,0.1e1),l_r_187)));
        real l_r_204 = RDiv(0.1e1,l_op1_e3_l_38_203);
        real l_r_205 = RMul(l_r_204,0.1e1);
        real l_r_206 = RMul(l_r_204,0.e0);
        real l__t_207 = VDot<2,2>(v_196,VEC2(RAdd(RMul(0.e0,l_r_205),RMul(0.1e1,l_r_206)),RAdd(RMul(-0.1e1,l_r_205),RMul(0.e0,l_r_206))));
        bool l__t_208 = GTE<real>(l__t_207,-0.1e-15);
        bool l__t_209 = GTE<real>(Abs<real>(l_op1_e3_l_38_203),0.1e-20);
        if (BAnd(l__t_208,BAnd(GT<real>(l_time_202,l__t_207),l__t_209))) {
          real l__t_213;
          int l_ilit_212;
          vec2 v_210 = VScale<2,2>(l__t_207,v_180);
          vec2 v_211 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_210);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_210))),BAnd(GT<real>(VIndex<2,2,0>(v_211),-0.e0),GT<real>(VIndex<2,2,1>(v_211),-0.e0)))) {
            l_ilit_212 = 2;
            l__t_213 = l__t_207;
          } else {
            l_ilit_212 = l_face_201;
            l__t_213 = l_time_202;
          }
          l_face_214 = l_ilit_212;
          l_time_215 = l__t_213;
        } else {
          l_face_214 = l_face_201;
          l_time_215 = l_time_202;
        }
        if (NEQ<int>(l_face_214,-1)) {
          v_216 = VEC2(Max<real>(l_time_215,0.e0),IntToReal(l_face_214));
        } else {
          v_216 = VEC2(-0.1e1,-0.1e1);
        }
        real l_newTime_217 = VIndex<2,2,0>(v_216);
        if (GTE<real>(l_newTime_217,0.e0)) {
          int l_cellIntersects_283;
          real l_newRayTime_282;
          vec2 v_276;
          real l_time_275;
          int l_face_274;
          real l_time_269;
          int l_face_268;
          real l_time_263;
          int l_face_262;
          vec2 v_256;
          real l_time_255;
          int l_face_254;
          real l_time_249;
          int l_face_248;
          real l_time_243;
          int l_face_242;
          vec2 v_236;
          real l_time_235;
          int l_face_234;
          real l_time_229;
          int l_face_228;
          real l_time_223;
          int l_face_222;
          if (l__t_178) {
            real l__t_221;
            int l_face_220;
            vec2 v_218 = VScale<2,2>(l__t_177,v_180);
            vec2 v_219 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_218);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_218))),BAnd(GT<real>(VIndex<2,2,0>(v_219),-0.e0),GT<real>(VIndex<2,2,1>(v_219),-0.e0)))) {
              l_face_220 = 0;
              l__t_221 = l__t_177;
            } else {
              l_face_220 = -1;
              l__t_221 = +inf;
            }
            l_face_222 = l_face_220;
            l_time_223 = l__t_221;
          } else {
            l_face_222 = -1;
            l_time_223 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_223,l__t_193),l__t_195))) {
            real l__t_227;
            int l_ilit_226;
            vec2 v_224 = VScale<2,2>(l__t_193,v_180);
            vec2 v_225 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_224);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_224))),BAnd(GT<real>(VIndex<2,2,0>(v_225),-0.e0),GT<real>(VIndex<2,2,1>(v_225),-0.e0)))) {
              l_ilit_226 = 1;
              l__t_227 = l__t_193;
            } else {
              l_ilit_226 = l_face_222;
              l__t_227 = l_time_223;
            }
            l_face_228 = l_ilit_226;
            l_time_229 = l__t_227;
          } else {
            l_face_228 = l_face_222;
            l_time_229 = l_time_223;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_229,l__t_207),l__t_209))) {
            real l__t_233;
            int l_ilit_232;
            vec2 v_230 = VScale<2,2>(l__t_207,v_180);
            vec2 v_231 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_230);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_230))),BAnd(GT<real>(VIndex<2,2,0>(v_231),-0.e0),GT<real>(VIndex<2,2,1>(v_231),-0.e0)))) {
              l_ilit_232 = 2;
              l__t_233 = l__t_207;
            } else {
              l_ilit_232 = l_face_228;
              l__t_233 = l_time_229;
            }
            l_face_234 = l_ilit_232;
            l_time_235 = l__t_233;
          } else {
            l_face_234 = l_face_228;
            l_time_235 = l_time_229;
          }
          if (NEQ<int>(l_face_234,-1)) {
            v_236 = VEC2(Max<real>(l_time_235,0.e0),IntToReal(l_face_234));
          } else {
            v_236 = VEC2(-0.1e1,-0.1e1);
          }
          vec2 v_237 = VAdd<2,2>(v_179,VScale<2,2>(VIndex<2,2,0>(v_236),v_180));
          if (l__t_178) {
            real l__t_241;
            int l_face_240;
            vec2 v_238 = VScale<2,2>(l__t_177,v_180);
            vec2 v_239 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_238);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_238))),BAnd(GT<real>(VIndex<2,2,0>(v_239),-0.e0),GT<real>(VIndex<2,2,1>(v_239),-0.e0)))) {
              l_face_240 = 0;
              l__t_241 = l__t_177;
            } else {
              l_face_240 = -1;
              l__t_241 = +inf;
            }
            l_face_242 = l_face_240;
            l_time_243 = l__t_241;
          } else {
            l_face_242 = -1;
            l_time_243 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_243,l__t_193),l__t_195))) {
            real l__t_247;
            int l_ilit_246;
            vec2 v_244 = VScale<2,2>(l__t_193,v_180);
            vec2 v_245 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_244);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_244))),BAnd(GT<real>(VIndex<2,2,0>(v_245),-0.e0),GT<real>(VIndex<2,2,1>(v_245),-0.e0)))) {
              l_ilit_246 = 1;
              l__t_247 = l__t_193;
            } else {
              l_ilit_246 = l_face_242;
              l__t_247 = l_time_243;
            }
            l_face_248 = l_ilit_246;
            l_time_249 = l__t_247;
          } else {
            l_face_248 = l_face_242;
            l_time_249 = l_time_243;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_249,l__t_207),l__t_209))) {
            real l__t_253;
            int l_ilit_252;
            vec2 v_250 = VScale<2,2>(l__t_207,v_180);
            vec2 v_251 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_250);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_250))),BAnd(GT<real>(VIndex<2,2,0>(v_251),-0.e0),GT<real>(VIndex<2,2,1>(v_251),-0.e0)))) {
              l_ilit_252 = 2;
              l__t_253 = l__t_207;
            } else {
              l_ilit_252 = l_face_248;
              l__t_253 = l_time_249;
            }
            l_face_254 = l_ilit_252;
            l_time_255 = l__t_253;
          } else {
            l_face_254 = l_face_248;
            l_time_255 = l_time_249;
          }
          if (NEQ<int>(l_face_254,-1)) {
            v_256 = VEC2(Max<real>(l_time_255,0.e0),IntToReal(l_face_254));
          } else {
            v_256 = VEC2(-0.1e1,-0.1e1);
          }
          vec2 v_257 = VAdd<2,2>(LOAD_0(TensorRef<[2]>(self.rayStartProj)),VScale<2,2>(VIndex<2,2,0>(v_256),LOAD_0(TensorRef<[2]>(self.dposProj))));
          if (l__t_178) {
            real l__t_261;
            int l_face_260;
            vec2 v_258 = VScale<2,2>(l__t_177,v_180);
            vec2 v_259 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_258);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_258))),BAnd(GT<real>(VIndex<2,2,0>(v_259),-0.e0),GT<real>(VIndex<2,2,1>(v_259),-0.e0)))) {
              l_face_260 = 0;
              l__t_261 = l__t_177;
            } else {
              l_face_260 = -1;
              l__t_261 = +inf;
            }
            l_face_262 = l_face_260;
            l_time_263 = l__t_261;
          } else {
            l_face_262 = -1;
            l_time_263 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_263,l__t_193),l__t_195))) {
            real l__t_267;
            int l_ilit_266;
            vec2 v_264 = VScale<2,2>(l__t_193,v_180);
            vec2 v_265 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_264);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_264))),BAnd(GT<real>(VIndex<2,2,0>(v_265),-0.e0),GT<real>(VIndex<2,2,1>(v_265),-0.e0)))) {
              l_ilit_266 = 1;
              l__t_267 = l__t_193;
            } else {
              l_ilit_266 = l_face_262;
              l__t_267 = l_time_263;
            }
            l_face_268 = l_ilit_266;
            l_time_269 = l__t_267;
          } else {
            l_face_268 = l_face_262;
            l_time_269 = l_time_263;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_269,l__t_207),l__t_209))) {
            real l__t_273;
            int l_ilit_272;
            vec2 v_270 = VScale<2,2>(l__t_207,v_180);
            vec2 v_271 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_270);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_270))),BAnd(GT<real>(VIndex<2,2,0>(v_271),-0.e0),GT<real>(VIndex<2,2,1>(v_271),-0.e0)))) {
              l_ilit_272 = 2;
              l__t_273 = l__t_207;
            } else {
              l_ilit_272 = l_face_268;
              l__t_273 = l_time_269;
            }
            l_face_274 = l_ilit_272;
            l_time_275 = l__t_273;
          } else {
            l_face_274 = l_face_268;
            l_time_275 = l_time_269;
          }
          if (NEQ<int>(l_face_274,-1)) {
            v_276 = VEC2(Max<real>(l_time_275,0.e0),IntToReal(l_face_274));
          } else {
            v_276 = VEC2(-0.1e1,-0.1e1);
          }
          tensor[2] _arg_277 = PACK(v_257);
          tensor[2] _arg_278 = PACK(v_237);
          real l_newRayTime_279 = RAdd(self.camNearVsp,RMul(l_newTime_217,RSub(self.camFarVsp,self.camNearVsp)));
          real[] l_normalizedTimes_280 = Append<real,real>(l_normalizedTimes_120,l_newRayTime_279);
          femData(MeshPos)[] l_poses_281 = Append<femData(MeshPos),femData(MeshPos)>(l_poses_121,ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2],int],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(l__t_124,l__t_123,_arg_278,_arg_277,RealToInt(RFloor(VIndex<2,2,1>(v_276)))));
          if (GT<real>(l_camFarVsp_116,l_newRayTime_279)) {
            l_newRayTime_282 = l_newRayTime_279;
            l_cellIntersects_283 = l_cellIntersects_119;
          } else {
            l_newRayTime_282 = l_camFarVsp_116;
            l_cellIntersects_283 = l_currentCellInt_118;
          }
          l_startTime_284 = l_newRayTime_282;
          l_currentCellInt_285 = l_cellIntersects_283;
          l_cellIntersects_286 = IAdd(l_cellIntersects_119,1);
          l_normalizedTimes_287 = l_normalizedTimes_280;
          l_poses_288 = l_poses_281;
        } else {
          l_startTime_284 = l_camFarVsp_116;
          l_currentCellInt_285 = l_currentCellInt_118;
          l_cellIntersects_286 = l_cellIntersects_119;
          l_normalizedTimes_287 = l_normalizedTimes_120;
          l_poses_288 = l_poses_121;
        }
        l_camNearVsp_126 = l_startTime_284;
        l_startsInside_127 = self.startsInside;
        l_cellIntersects_128 = l_currentCellInt_285;
        l_cellIntersects_129 = l_cellIntersects_286;
        l_normalizedTimes_130 = l_normalizedTimes_287;
        l_poses_131 = l_poses_288;
      }
      l_camFarVsp_116 = l_camNearVsp_126;
      l_startsInside_117 = l_startsInside_127;
      l_currentCellInt_118 = l_cellIntersects_128;
      l_cellIntersects_119 = l_cellIntersects_129;
      l_normalizedTimes_120 = l_normalizedTimes_130;
      l_poses_121 = l_poses_131;
    }
    if (NEQ<int>(l_cellIntersects_119,0)) {
      femData(MeshCell)[] l_accum_300;
      femData(MeshPos) l_pos_289 = Subscript<femData(MeshPos)[]>(l_poses_121,l_currentCellInt_118);
      real l_rayN_290 = Subscript<real[]>(l_normalizedTimes_120,l_currentCellInt_118);
      tensor[3] _arg_291 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_290,LOAD_0(TensorRef<[3]>(self.rayVec)))));
      tensor[3][2] t_293 = <tensor[3][2]>{TensorCopy<[3]>(TensorRef<[3]>(self.rayOrig)),_arg_291};
      tensor[3][] l__t_292 = MkDynamic<tensor[3],2>(t_293);
      tensor[2][1] t_295 = <tensor[2][1]>{ExtractFemItem<tensor[2],RefPos(MeshPos)>(l_pos_289)};
      tensor[2][] l__t_294 = MkDynamic<tensor[2],1>(t_295);
      femData(MeshCell) l_currentCell_296 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_289),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_289));
      femData(MeshCell)[1] t_298 = <femData(MeshCell)[1]>{l_currentCell_296};
      femData(MeshCell)[] l__t_297 = MkDynamic<femData(MeshCell),1>(t_298);
      tensor[2] _arg_299 = PACK(VEC2(self.camNearVsp,self.camFarVsp));
      print("In the interval:",TensorRef<[2]>(_arg_299),"\n");
      print("Possible times:",l_normalizedTimes_120,"\n");
      l_accum_300 = <femData(MeshCell)[]>{};
      tensor[3][] l_spaceInter_302 = Concat<tensor[3]>(self.spaceInter,l__t_292);
      foreach femData(MeshPos) i_p_301 in l_poses_121 {
        l_accum_300 = Append<femData(MeshCell),femData(MeshCell)>(l_accum_300,LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(i_p_301),ExtractFemItem<int,CellIndex(MeshPos)>(i_p_301)));
      }
      print("cells:",l_accum_300,"\n");
      l_pos_303 = l_pos_289;
      l_currentCell_304 = l_currentCell_296;
      l_rayN_305 = l_rayN_290;
      l__t_306 = l__t_297;
      l__t_307 = l__t_294;
      l_spaceInter_308 = l_spaceInter_302;
    } else {
      print("No intersection!\n");
      print("Ui: ",self.ui," Vi:",self.vi,"\n");
      self.poses = l_poses_121;
      self.normalizedTimes = l_normalizedTimes_120;
      self.cellIntersects = l_cellIntersects_119;
      self.currentCellInt = l_currentCellInt_118;
      self.startsInside = l_startsInside_117;
      stabilize;
    }
    self.poses = l_poses_121;
    self.normalizedTimes = l_normalizedTimes_120;
    self.cellIntersects = l_cellIntersects_119;
    self.spaceInter = l_spaceInter_308;
    self.refSpaceInter = l__t_307;
    self.cellInter = l__t_306;
    self.currentCellInt = l_currentCellInt_118;
    self.rayN = l_rayN_305;
    self.currentCell = l_currentCell_304;
    self.pos = l_pos_303;
    self.startsInside = l_startsInside_117;
    active;
  }
  update (world) {
    int l_face_501;
    real l_camFarVsp_500;
    tensor[2][] l_rayCellInter_499;
    tensor[3][] l_spaceInter_498;
    tensor[2][] l_refSpaceInter_497;
    femData(MeshCell)[] l_cellInter_496;
    real l_rayNp_495;
    femData(MeshCell) l_currentCell_494;
    femData(MeshPos) l_pos_493;
    vec2 v_429;
    real l_time_428;
    int l_face_427;
    real l_faceTime_426;
    real l_time_415;
    int l_face_414;
    real l_faceTime_413;
    real l_time_396;
    int l_face_395;
    real l_faceTime_394;
    print("Ui: ",self.ui," vi: ",self.vi,"\n");
    &tensor[2] l__t_309 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(self.pos);
    print("The current ref pos is:",l__t_309,"\n");
    femData(Mesh) l__t_310 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.pos);
    int l__t_311 = ExtractFemItem<int,CellIndex(MeshPos)>(self.pos);
    femData(MeshCell) l__t_312 = LoadFem<femData(MeshCell)>(l__t_310,l__t_311);
    print("Current cell:",l__t_312,"\n");
    print("The current time is:",self.rayN,"\n");
    int l_mulRes_313 = IMul(l__t_311,3);
    int t_314 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,l_mulRes_313);
    int l_mulRes_315 = IMul(2,t_314);
    int t_316 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,IAdd(l_mulRes_313,1));
    int l_mulRes_317 = IMul(2,t_316);
    int t_318 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,IAdd(l_mulRes_313,2));
    int l_mulRes_319 = IMul(2,t_318);
    real l_prod_320 = RMul(VIndex<2,2,0>(LOAD_0(l__t_309)),0.1e1);
    real l_prod_321 = RMul(0.1e1,VIndex<2,2,1>(LOAD_0(l__t_309)));
    real l_prod_322 = RMul(0.1e1,0.1e1);
    real l_mult_323 = RMul(0.1e1,l_prod_322);
    real l_sum_324 = RAdd(l_mult_323,RAdd(RMul(-0.1e1,l_prod_321),RMul(-0.1e1,l_prod_320)));
    real l_basisEval_325 = RMul(0.1e1,l_prod_320);
    real l_basisEval_326 = RMul(0.1e1,l_prod_321);
    real t_327 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_315);
    real t_328 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_317);
    real t_329 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_319);
    real t_330 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_315));
    real t_331 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_317));
    real t_332 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_319));
    vec2 v_333 = VEC2(RAdd(RAdd(RMul(t_327,l_sum_324),RMul(t_328,l_basisEval_325)),RMul(t_329,l_basisEval_326)),RAdd(RAdd(RMul(t_330,l_sum_324),RMul(t_331,l_basisEval_325)),RMul(t_332,l_basisEval_326)));
    tensor[2] _arg_334 = PACK(v_333);
    print("The current world pos is:",TensorRef<[2]>(_arg_334),"\n");
    vec3{4} v_335 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    vec2 v_336 = VEC2(VIndex<3,4,0>(v_335),VIndex<3,4,1>(v_335));
    tensor[2] _arg_337 = PACK(v_336);
    print("The current world pos should be:",TensorRef<[2]>(_arg_337),"\n");
    vec2 v_338 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),LOAD_0(l__t_309));
    vec2 v_339 = v_336;
    vec2 v_340 = v_333;
    if (BNot(BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),LOAD_0(l__t_309))),BAnd(GT<real>(VIndex<2,2,0>(v_338),-0.e0),GT<real>(VIndex<2,2,1>(v_338),-0.e0))))) {
      print("nerror: invalid pos created\n");
      if (BNot(self.startsInside)) {
        print("Not because of an inside\n");
      }
    }
    tensor[2] _arg_341 = PACK(v_340);
    print("The current world pos is:",TensorRef<[2]>(_arg_341),"\n");
    tensor[2] _arg_342 = PACK(v_339);
    print("The current world pos should be:",TensorRef<[2]>(_arg_342),"\n");
    vec2 v_343 = VSub<2,2>(v_340,v_339);
    real l_err_344 = Sqrt(VDot<2,2>(v_343,v_343));
    if (GT<real>(l_err_344,0.1e-4)) {
      print("nerror:Warning! Moved off ray:",l_err_344,"\n");
    } else {
      print("Did not move off ray!\n");
    }
    int l_steps_345 = IAdd(self.steps,1);
    print("Orig:",TensorRef<[3]>(self.rayOrig)," dir:",TensorRef<[3]>(self.rayVec),"\n");
    real l_op1_e3_l_3_346 = RSub(self.camFarVsp,self.rayN);
    vec3{4} v_347 = VScale<3,4>(l_op1_e3_l_3_346,LOAD_0(TensorRef<[3]>(self.rayVec)));
    &tensor[2] l__t_348 = ExtractFemItem<tensor[2],RefPos(Mesh)>(self.pos);
    femData(Mesh) l__t_349 = ExtractFem<femData(Mesh),femData(MeshCell)>(l__t_312);
    vec2 v_350 = VEC2(VIndex<3,4,0>(v_347),VIndex<3,4,1>(v_347));
    int l__t_351 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(self.pos);
    vec2 v_352 = VEC2(0.1e1,0.e0);
    int l_mulRes_353 = IMul(ExtractFemItem<int,CellIndex(MeshCell)>(l__t_312),3);
    int t_354 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,l_mulRes_353);
    int l_mulRes_355 = IMul(2,t_354);
    int t_356 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,IAdd(l_mulRes_353,1));
    int l_mulRes_357 = IMul(2,t_356);
    real l_dof_load_358 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_357);
    real l_dof_load_359 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_357));
    int t_360 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,IAdd(l_mulRes_353,2));
    int l_mulRes_361 = IMul(2,t_360);
    real l_dof_load_362 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_361);
    real l_dof_load_363 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_361));
    real l_basisEval_364 = RMul(-0.1e1,l_prod_322);
    real t_365 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_355);
    real l_r_366 = RMul(t_365,l_basisEval_364);
    real l_r_367 = RAdd(RAdd(l_r_366,RMul(l_dof_load_358,l_mult_323)),RMul(l_dof_load_362,0.e0));
    real l_r_368 = RAdd(RAdd(l_r_366,RMul(l_dof_load_358,0.e0)),RMul(l_dof_load_362,l_mult_323));
    real t_369 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_355));
    real l_r_370 = RMul(t_369,l_basisEval_364);
    real l_r_371 = RAdd(RAdd(l_r_370,RMul(l_dof_load_359,l_mult_323)),RMul(l_dof_load_363,0.e0));
    real l_r_372 = RAdd(RAdd(l_r_370,RMul(l_dof_load_359,0.e0)),RMul(l_dof_load_363,l_mult_323));
    real l_r_373 = RAdd(RMul(0.e0,l_r_367),RMul(-0.1e1,l_r_371));
    real l_r_374 = RMul(0.e0,l_r_368);
    real l_r_375 = RAdd(l_r_374,RMul(-0.1e1,l_r_372));
    real l_r_376 = RAdd(RMul(0.1e1,l_r_367),RMul(0.e0,l_r_371));
    real l_r_377 = RMul(0.e0,l_r_372);
    real l_r_378 = RAdd(RMul(0.1e1,l_r_368),l_r_377);
    real l_op1_e3_l_15_379 = VDot<2,2>(VEC2(l_r_367,l_r_371),VEC2(RAdd(l_r_374,RMul(0.1e1,l_r_372)),RAdd(RMul(-0.1e1,l_r_368),l_r_377)));
    vec2 v_380 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_373),RMul(-0.1e1,l_r_375)),l_op1_e3_l_15_379),RDiv(RAdd(RMul(0.e0,l_r_376),RMul(-0.1e1,l_r_378)),l_op1_e3_l_15_379)),v_350),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_373),RMul(0.e0,l_r_375)),l_op1_e3_l_15_379),RDiv(RAdd(RMul(0.1e1,l_r_376),RMul(0.e0,l_r_378)),l_op1_e3_l_15_379)),v_350));
    real l_r_381 = RMul(0.e0,0.1e1);
    real l_op1_e3_l_19_382 = VDot<2,2>(v_380,VEC2(RAdd(RMul(0.e0,-0.1e1),l_prod_322),RAdd(RMul(-0.1e1,-0.1e1),l_r_381)));
    real l_r_383 = RDiv(0.1e1,l_op1_e3_l_19_382);
    real l_r_384 = RMul(l_r_383,-0.1e1);
    real l_r_385 = RMul(l_r_383,0.1e1);
    real l__t_386 = VDot<2,2>(VSub<2,2>(v_352,LOAD_0(l__t_348)),VEC2(RAdd(RMul(0.e0,l_r_384),RMul(0.1e1,l_r_385)),RAdd(RMul(-0.1e1,l_r_384),RMul(0.e0,l_r_385))));
    bool l__t_387 = BAnd(GTE<real>(l__t_386,-0.1e-15),BAnd(GT<real>(+inf,l__t_386),GTE<real>(Abs<real>(l_op1_e3_l_19_382),0.1e-20)));
    vec2 v_388 = v_380;
    vec2 v_389 = v_352;
    vec2 v_390 = VEC2(-0.1e1,0.1e1);
    if (l__t_387) {
      real l__t_393;
      int l__t_392;
      real l_faceTime_391;
      if (NEQ<int>(l__t_351,0)) {
        l_faceTime_391 = -inf;
        l__t_392 = 0;
        l__t_393 = l__t_386;
      } else {
        l_faceTime_391 = l__t_386;
        l__t_392 = -1;
        l__t_393 = +inf;
      }
      l_faceTime_394 = l_faceTime_391;
      l_face_395 = l__t_392;
      l_time_396 = l__t_393;
    } else {
      l_faceTime_394 = -inf;
      l_face_395 = -1;
      l_time_396 = +inf;
    }
    vec2 v_397 = VEC2(0.e0,0.e0);
    real l_r_398 = RMul(0.e0,0.e0);
    real l_op1_e3_l_19_399 = VDot<2,2>(v_388,VEC2(RAdd(l_r_398,l_prod_322),RAdd(RMul(-0.1e1,0.e0),l_r_381)));
    real l_r_400 = RDiv(0.1e1,l_op1_e3_l_19_399);
    real l_r_401 = RMul(l_r_400,0.e0);
    real l_r_402 = RMul(l_r_400,0.1e1);
    vec2 v_403 = VSub<2,2>(v_397,LOAD_0(l__t_348));
    real l__t_404 = VDot<2,2>(v_403,VEC2(RAdd(RMul(0.e0,l_r_401),RMul(0.1e1,l_r_402)),RAdd(RMul(-0.1e1,l_r_401),RMul(0.e0,l_r_402))));
    bool l__t_405 = GTE<real>(l__t_404,-0.1e-15);
    bool l__t_406 = GTE<real>(Abs<real>(l_op1_e3_l_19_399),0.1e-20);
    vec2 v_407 = v_397;
    vec2 v_408 = VEC2(0.e0,0.1e1);
    vec2 v_409 = v_403;
    if (BAnd(l__t_405,BAnd(GT<real>(l_time_396,l__t_404),l__t_406))) {
      real l__t_412;
      int l_ilit_411;
      real l_faceTime_410;
      if (NEQ<int>(l__t_351,1)) {
        l_faceTime_410 = l_faceTime_394;
        l_ilit_411 = 1;
        l__t_412 = l__t_404;
      } else {
        l_faceTime_410 = l__t_404;
        l_ilit_411 = l_face_395;
        l__t_412 = l_time_396;
      }
      l_faceTime_413 = l_faceTime_410;
      l_face_414 = l_ilit_411;
      l_time_415 = l__t_412;
    } else {
      l_faceTime_413 = l_faceTime_394;
      l_face_414 = l_face_395;
      l_time_415 = l_time_396;
    }
    real l_op1_e3_l_19_416 = VDot<2,2>(v_388,VEC2(RAdd(l_r_381,RMul(0.1e1,0.e0)),RAdd(RMul(-0.1e1,0.1e1),l_r_398)));
    real l_r_417 = RDiv(0.1e1,l_op1_e3_l_19_416);
    real l_r_418 = RMul(l_r_417,0.1e1);
    real l_r_419 = RMul(l_r_417,0.e0);
    real l__t_420 = VDot<2,2>(v_409,VEC2(RAdd(RMul(0.e0,l_r_418),RMul(0.1e1,l_r_419)),RAdd(RMul(-0.1e1,l_r_418),RMul(0.e0,l_r_419))));
    bool l__t_421 = GTE<real>(l__t_420,-0.1e-15);
    bool l__t_422 = GTE<real>(Abs<real>(l_op1_e3_l_19_416),0.1e-20);
    if (BAnd(l__t_421,BAnd(GT<real>(l_time_415,l__t_420),l__t_422))) {
      real l__t_425;
      int l_ilit_424;
      real l_faceTime_423;
      if (NEQ<int>(l__t_351,2)) {
        l_faceTime_423 = l_faceTime_413;
        l_ilit_424 = 2;
        l__t_425 = l__t_420;
      } else {
        l_faceTime_423 = l__t_420;
        l_ilit_424 = l_face_414;
        l__t_425 = l_time_415;
      }
      l_faceTime_426 = l_faceTime_423;
      l_face_427 = l_ilit_424;
      l_time_428 = l__t_425;
    } else {
      l_faceTime_426 = l_faceTime_413;
      l_face_427 = l_face_414;
      l_time_428 = l_time_415;
    }
    if (NEQ<int>(l_face_427,-1)) {
      v_429 = VEC2(Max<real>(l_time_428,0.e0),IntToReal(l_face_427));
    } else {
      vec2 v_430;
      if (EQ<real>(-inf,l_faceTime_426)) {
        v_430 = VEC2(-0.1e1,-0.1e1);
      } else {
        v_430 = VEC2(l_faceTime_426,IntToReal(l__t_351));
      }
      v_429 = v_430;
    }
    real l_nextTime_431 = VIndex<2,2,0>(v_429);
    real l_rayNp_432 = Max<real>(self.rayN,Min<real>(self.camFarVsp,RAdd(self.rayN,RMul(l_nextTime_431,l_op1_e3_l_3_346))));
    print("Next time:",l_nextTime_431,"\n");
    if (GTE<real>(l_nextTime_431,0.e0)) {
      femData(MeshCell)[] l_cellInter_492;
      femData(MeshCell) l_currentCell_491;
      femData(MeshPos) l_pos_490;
      tensor[3][] l_spaceInter_485;
      femData(MeshPos) l__t_482;
      vec2 v_454;
      real l_time_453;
      int l_face_452;
      real l_faceTime_451;
      real l_time_447;
      int l_face_446;
      real l_faceTime_445;
      real l_time_441;
      int l_face_440;
      real l_faceTime_439;
      tensor[2] _arg_433 = PACK(VEC2(self.rayN,l_rayNp_432));
      tensor[2][] l_rayCellInter_434 = Append<tensor[2],tensor[2]>(self.rayCellInter,_arg_433);
      int l__t_435 = ExtractFemItem<int,CellIndex(Mesh)>(self.pos);
      if (l__t_387) {
        real l__t_438;
        int l__t_437;
        real l_faceTime_436;
        if (NEQ<int>(l__t_351,0)) {
          l_faceTime_436 = -inf;
          l__t_437 = 0;
          l__t_438 = l__t_386;
        } else {
          l_faceTime_436 = l__t_386;
          l__t_437 = -1;
          l__t_438 = +inf;
        }
        l_faceTime_439 = l_faceTime_436;
        l_face_440 = l__t_437;
        l_time_441 = l__t_438;
      } else {
        l_faceTime_439 = -inf;
        l_face_440 = -1;
        l_time_441 = +inf;
      }
      if (BAnd(l__t_405,BAnd(GT<real>(l_time_441,l__t_404),l__t_406))) {
        real l__t_444;
        int l_ilit_443;
        real l_faceTime_442;
        if (NEQ<int>(l__t_351,1)) {
          l_faceTime_442 = l_faceTime_439;
          l_ilit_443 = 1;
          l__t_444 = l__t_404;
        } else {
          l_faceTime_442 = l__t_404;
          l_ilit_443 = l_face_440;
          l__t_444 = l_time_441;
        }
        l_faceTime_445 = l_faceTime_442;
        l_face_446 = l_ilit_443;
        l_time_447 = l__t_444;
      } else {
        l_faceTime_445 = l_faceTime_439;
        l_face_446 = l_face_440;
        l_time_447 = l_time_441;
      }
      if (BAnd(l__t_421,BAnd(GT<real>(l_time_447,l__t_420),l__t_422))) {
        real l__t_450;
        int l_ilit_449;
        real l_faceTime_448;
        if (NEQ<int>(l__t_351,2)) {
          l_faceTime_448 = l_faceTime_445;
          l_ilit_449 = 2;
          l__t_450 = l__t_420;
        } else {
          l_faceTime_448 = l__t_420;
          l_ilit_449 = l_face_446;
          l__t_450 = l_time_447;
        }
        l_faceTime_451 = l_faceTime_448;
        l_face_452 = l_ilit_449;
        l_time_453 = l__t_450;
      } else {
        l_faceTime_451 = l_faceTime_445;
        l_face_452 = l_face_446;
        l_time_453 = l_time_447;
      }
      if (NEQ<int>(l_face_452,-1)) {
        v_454 = VEC2(Max<real>(l_time_453,0.e0),IntToReal(l_face_452));
      } else {
        vec2 v_455;
        if (EQ<real>(-inf,l_faceTime_451)) {
          v_455 = VEC2(-0.1e1,-0.1e1);
        } else {
          v_455 = VEC2(l_faceTime_451,IntToReal(l__t_351));
        }
        v_454 = v_455;
      }
      int l__t_456 = RealToInt(RFloor(VIndex<2,2,1>(v_454)));
      int[2] l__t_457 = nextCell4$54AA(l__t_456,l__t_435,l__t_310);
      int l__t_458 = Subscript<int[2]>(l__t_457,0);
      if (NEQ<int>(-1,l__t_458)) {
        tensor[2] _arg_459 = PACK(v_407);
        tensor[2] _arg_460 = PACK(v_407);
        tensor[2] _arg_461 = PACK(v_389);
        int l__t_462 = Subscript<int[2]>(l__t_457,1);
        tensor[2][3] t_463 = <tensor[2][3]>{_arg_461,_arg_460,_arg_459};
        tensor[2] _arg_464 = PACK(v_389);
        tensor[2] _arg_465 = PACK(v_408);
        tensor[2] _arg_466 = PACK(v_390);
        tensor[2][3] t_467 = <tensor[2][3]>{_arg_466,_arg_465,_arg_464};
        vec2 v_468 = VAdd<2,2>(VScale<2,2>(VIndex<2,2,0>(v_454),v_388),LOAD_0(l__t_348));
        int[3] t_469 = <int[3]>{1,1,0};
        real[2] t_470 = <real[2]>{VIndex<2,2,0>(v_468),VIndex<2,2,1>(v_468)};
        real[2] t_471 = <real[2]>{0.e0,0.e0};
        real[2] t_472 = <real[2]>{0.e0,0.e0};
        real[2] t_473 = <real[2]>{0.1e1,0.e0};
        real[2][3] t_474 = <real[2][3]>{t_473,t_472,t_471};
        int[3] t_475 = <int[3]>{1,1,0};
        real[2] t_476 = <real[2]>{0.1e1,0.e0};
        real[2] t_477 = <real[2]>{0.e0,0.1e1};
        real[2] t_478 = <real[2]>{-0.1e1,0.1e1};
        real[2][3] t_479 = <real[2][3]>{t_478,t_477,t_476};
        int[3] t_480 = <int[3]>{1,1,0};
        tensor[2] _arg_481 = PACK(VAdd<2,2>(LOAD_0(Subscript<tensor[2][3]>(t_463,l__t_462)),VScale<2,2>(RDiv(RSub(Subscript<real[2]>(t_470,Subscript<int[3]>(t_469,l__t_456)),Subscript<real[2]>(Subscript<real[2][3]>(t_474,l__t_456),Subscript<int[3]>(t_475,l__t_456))),Subscript<real[2]>(Subscript<real[2][3]>(t_479,l__t_456),Subscript<int[3]>(t_480,l__t_456))),LOAD_0(Subscript<tensor[2][3]>(t_467,l__t_462)))));
        l__t_482 = ExtractFemItemN<[femData(Mesh),int,tensor[2],int],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_310,l__t_458,_arg_481,l__t_462);
      } else {
        tensor[2] _arg_483 = PACK(VAdd<2,2>(VScale<2,2>(VIndex<2,2,0>(v_454),v_388),LOAD_0(l__t_348)));
        l__t_482 = ExtractFemItemN<[femData(Mesh),tensor[2]],femData(MeshPos),InvalidBuildBoundary(MeshPos),"","",[],int>(l__t_310,_arg_483);
      }
      if (GTE<real>(l_rayNp_432,self.camFarVsp)) {
        print("cells: ",self.cellInter,"\n");
        tensor[3] _arg_484 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.camFarVsp,LOAD_0(TensorRef<[3]>(self.rayVec)))));
        self.rayCellInter = l_rayCellInter_434;
        self.spaceInter = Append<tensor[3],tensor[3]>(self.spaceInter,_arg_484);
        self.rayN = l_rayNp_432;
        self.steps = l_steps_345;
        stabilize;
      } else {
        l_spaceInter_485 = self.spaceInter;
      }
      tensor[3] _arg_486 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayNp_432,LOAD_0(TensorRef<[3]>(self.rayVec)))));
      tensor[3][] l_spaceInter_487 = Append<tensor[3],tensor[3]>(l_spaceInter_485,_arg_486);
      tensor[2][] l_refSpaceInter_488 = Append<tensor[2],tensor[2]>(self.refSpaceInter,ExtractFemItem<tensor[2],RefPos(MeshPos)>(l__t_482));
      if (ExtractFemItem<bool,Valid(MeshPos)>(l__t_482)) {
        femData(MeshCell) l__t_489 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_482),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_482));
        print("Next cell:",l__t_489,"\n");
        self.rayCellInter = l_rayCellInter_434;
        self.spaceInter = l_spaceInter_487;
        self.refSpaceInter = l_refSpaceInter_488;
        self.cellInter = Append<femData(MeshCell),femData(MeshCell)>(self.cellInter,l__t_489);
        self.rayN = l_rayNp_432;
        self.currentCell = l__t_489;
        self.steps = l_steps_345;
        self.pos = l__t_482;
        active;
      } else {
        print("Invalid\n");
        l_pos_490 = self.pos;
        l_currentCell_491 = self.currentCell;
        l_cellInter_492 = self.cellInter;
      }
      l_pos_493 = l_pos_490;
      l_currentCell_494 = l_currentCell_491;
      l_rayNp_495 = l_rayNp_432;
      l_cellInter_496 = l_cellInter_492;
      l_refSpaceInter_497 = l_refSpaceInter_488;
      l_spaceInter_498 = l_spaceInter_487;
      l_rayCellInter_499 = l_rayCellInter_434;
    } else {
      l_pos_493 = self.pos;
      l_currentCell_494 = self.currentCell;
      l_rayNp_495 = self.rayN;
      l_cellInter_496 = self.cellInter;
      l_refSpaceInter_497 = self.refSpaceInter;
      l_spaceInter_498 = self.spaceInter;
      l_rayCellInter_499 = self.rayCellInter;
    }
    l_camFarVsp_500 = self.camFarVsp;
    l_face_501 = -1;
    for i_i_502 = 0 to ISub(self.cellIntersects,1) {
      int l_newIdx_510;
      real l_estimate_509;
      real l_t_503 = Subscript<real[]>(self.normalizedTimes,i_i_502);
      femData(MeshPos) l_posp_504 = Subscript<femData(MeshPos)[]>(self.poses,i_i_502);
      if (GTE<real>(l_t_503,l_rayNp_495)) {
        int l_newIdx_508;
        real l_estimate_507;
        if (GTE<real>(l_camFarVsp_500,l_t_503)) {
          int l_i_506;
          real l_t_505;
          if (NEQ<int>(ExtractFemItem<int,CellIndex(Mesh)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_posp_504),ExtractFemItem<int,CellIndex(MeshPos)>(l_posp_504))),ExtractFemItem<int,CellIndex(Mesh)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_493),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_493))))) {
            l_t_505 = l_t_503;
            l_i_506 = i_i_502;
          } else {
            l_t_505 = l_camFarVsp_500;
            l_i_506 = l_face_501;
          }
          l_estimate_507 = l_t_505;
          l_newIdx_508 = l_i_506;
        } else {
          l_estimate_507 = l_camFarVsp_500;
          l_newIdx_508 = l_face_501;
        }
        l_estimate_509 = l_estimate_507;
        l_newIdx_510 = l_newIdx_508;
      } else {
        l_estimate_509 = l_camFarVsp_500;
        l_newIdx_510 = l_face_501;
      }
      l_camFarVsp_500 = l_estimate_509;
      l_face_501 = l_newIdx_510;
    }
    if (GT<int>(l_face_501,-1)) {
      print("nerror:Impossible happened\n");
      if (self.startsInside) {
        print("because of an inside\n");
      }
      print("Direction:",TensorRef<[3]>(self.rayVec),"\n");
      &tensor[2] l__t_511 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(l_pos_493);
      femData(Mesh) l__t_512 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_493);
      int l_mulRes_513 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_493),3);
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,l_mulRes_513);
      int l_mulRes_515 = IMul(2,t_514);
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,IAdd(l_mulRes_513,1));
      int l_mulRes_517 = IMul(2,t_516);
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,IAdd(l_mulRes_513,2));
      int l_mulRes_519 = IMul(2,t_518);
      real l_prod_520 = RMul(VIndex<2,2,0>(LOAD_0(l__t_511)),0.1e1);
      real l_prod_521 = RMul(0.1e1,VIndex<2,2,1>(LOAD_0(l__t_511)));
      real l_sum_522 = RAdd(l_mult_323,RAdd(RMul(-0.1e1,l_prod_521),RMul(-0.1e1,l_prod_520)));
      real l_basisEval_523 = RMul(0.1e1,l_prod_520);
      real l_basisEval_524 = RMul(0.1e1,l_prod_521);
      real t_525 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_515);
      real t_526 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_517);
      real t_527 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_519);
      real t_528 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_515));
      real t_529 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_517));
      real t_530 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_519));
      tensor[2] _arg_531 = PACK(VEC2(RAdd(RAdd(RMul(t_525,l_sum_522),RMul(t_526,l_basisEval_523)),RMul(t_527,l_basisEval_524)),RAdd(RAdd(RMul(t_528,l_sum_522),RMul(t_529,l_basisEval_523)),RMul(t_530,l_basisEval_524))));
      print("world pos was:",TensorRef<[2]>(_arg_531),"\n");
      print("Interior pos was:",l__t_511,"\n");
      print(self.normalizedTimes," at ",l_face_501,"\n");
      print("Original time was:",l_rayNp_495,"\n");
      femData(MeshPos) l_pos_532 = Subscript<femData(MeshPos)[]>(self.poses,l_face_501);
      femData(MeshCell) l_currentCell_533 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_532),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_532));
      self.rayCellInter = l_rayCellInter_499;
      self.spaceInter = l_spaceInter_498;
      self.refSpaceInter = l_refSpaceInter_497;
      self.cellInter = Append<femData(MeshCell),femData(MeshCell)>(l_cellInter_496,l_currentCell_533);
      self.rayN = Subscript<real[]>(self.normalizedTimes,l_face_501);
      self.currentCell = l_currentCell_533;
      self.steps = l_steps_345;
      self.pos = l_pos_532;
      active;
    } else {
      print("Enter times:",self.normalizedTimes,"\n");
      print("Ray enter times:",l_rayCellInter_499,"\n");
      print("cells:",l_cellInter_496,"\n");
      print("End\n");
      self.rayCellInter = l_rayCellInter_499;
      self.spaceInter = l_spaceInter_498;
      self.refSpaceInter = l_refSpaceInter_497;
      self.cellInter = l_cellInter_496;
      self.rayN = l_rayNp_495;
      self.currentCell = l_currentCell_494;
      self.steps = l_steps_345;
      self.pos = l_pos_493;
      stabilize;
    }
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_534 = 0 to ISub(globals.iresU,1) {
      for i_ui_535 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_535,i_vi_534);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStartMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int debugU;
input int debugV;
input real eps;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[0.3e1,-0.3e1,0.3e1];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 10;
    globals.iresV = 10;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.debugU = 8;
    globals.debugV = 2;
    globals.eps = 0.1e-7;
  }
//***** GLOBALS *****
global femData(MeshCell)[] 0cell_a;
global real camNearVsp;
global real camFarVsp;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
//***** FUNCTIONS *****
  function femData(MeshPos) _msh_newtonInverse (&tensor[2] p_pos_5,int p_cellInt_6,femData(Mesh) p_mesh_7) {
    vec2 v_8;
    v_8 = VEC2(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_9 = 0 to 16 {
      int l_mulRes_10 = IMul(p_cellInt_6,3);
      int t_11 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,l_mulRes_10);
      int l_mulRes_12 = IMul(2,t_11);
      real l_dof_load_13 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_12);
      real l_dof_load_14 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_12));
      int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,1));
      int l_mulRes_16 = IMul(2,t_15);
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_16);
      real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_16));
      int t_19 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_7,IAdd(l_mulRes_10,2));
      int l_mulRes_20 = IMul(2,t_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,l_mulRes_20);
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_7,IAdd(1,l_mulRes_20));
      real l_prod_23 = RMul(0.1e1,0.1e1);
      real l_basisEval_24 = RMul(-0.1e1,l_prod_23);
      real l_basisEval_25 = RMul(0.1e1,l_prod_23);
      real l_r_26 = RMul(l_dof_load_13,l_basisEval_24);
      real l_r_27 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,l_basisEval_25)),RMul(l_dof_load_21,0.e0));
      real l_r_28 = RAdd(RAdd(l_r_26,RMul(l_dof_load_17,0.e0)),RMul(l_dof_load_21,l_basisEval_25));
      real l_r_29 = RMul(l_dof_load_14,l_basisEval_24);
      real l_r_30 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,l_basisEval_25)),RMul(l_dof_load_22,0.e0));
      real l_r_31 = RAdd(RAdd(l_r_29,RMul(l_dof_load_18,0.e0)),RMul(l_dof_load_22,l_basisEval_25));
      real l_r_32 = RAdd(RMul(0.e0,l_r_27),RMul(-0.1e1,l_r_30));
      real l_r_33 = RMul(0.e0,l_r_28);
      real l_r_34 = RAdd(l_r_33,RMul(-0.1e1,l_r_31));
      real l_r_35 = RAdd(RMul(0.1e1,l_r_27),RMul(0.e0,l_r_30));
      real l_r_36 = RMul(0.e0,l_r_31);
      real l_r_37 = RAdd(RMul(0.1e1,l_r_28),l_r_36);
      real l_op1_e3_l_16_38 = VDot<2,2>(VEC2(l_r_27,l_r_30),VEC2(RAdd(l_r_33,RMul(0.1e1,l_r_31)),RAdd(RMul(-0.1e1,l_r_28),l_r_36)));
      real l_prod_39 = RMul(VIndex<2,2,0>(v_8),0.1e1);
      real l_prod_40 = RMul(0.1e1,VIndex<2,2,1>(v_8));
      real l_sum_41 = RAdd(l_basisEval_25,RAdd(RMul(-0.1e1,l_prod_40),RMul(-0.1e1,l_prod_39)));
      real l_basisEval_42 = RMul(0.1e1,l_prod_39);
      real l_basisEval_43 = RMul(0.1e1,l_prod_40);
      vec2 v_44 = VSub<2,2>(VEC2(RAdd(RAdd(RMul(l_dof_load_13,l_sum_41),RMul(l_dof_load_17,l_basisEval_42)),RMul(l_dof_load_21,l_basisEval_43)),RAdd(RAdd(RMul(l_dof_load_14,l_sum_41),RMul(l_dof_load_18,l_basisEval_42)),RMul(l_dof_load_22,l_basisEval_43))),LOAD_0(p_pos_5));
      vec2 v_45 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_32),RMul(-0.1e1,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.e0,l_r_35),RMul(-0.1e1,l_r_37)),l_op1_e3_l_16_38)),v_44),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_32),RMul(0.e0,l_r_34)),l_op1_e3_l_16_38),RDiv(RAdd(RMul(0.1e1,l_r_35),RMul(0.e0,l_r_37)),l_op1_e3_l_16_38)),v_44));
      vec2 v_46 = VSub<2,2>(v_8,v_45);
      vec2 v_47 = v_46;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<2,2>(v_45,v_45))) {
        vec2 v_48 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_47);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),v_47)),BAnd(GT<real>(VIndex<2,2,0>(v_48),-0.e0),GT<real>(VIndex<2,2,1>(v_48),-0.e0)))) {
          tensor[2] _arg_49 = PACK(v_47);
          return ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_7,p_cellInt_6,_arg_49,p_pos_5)
        } else {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
        }
      }
      v_8 = v_47;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_7)
  }
  function int[2] nextCell4 (int p_faceIdx_50,int p_cell_51,femData(Mesh) p_mesh_52) {
    return ExtractFemItemN<[femData(Mesh),int],int[2],CellFaceCell(Mesh),"","",[],int>(p_mesh_52,IAdd(IMul(p_cell_51,6),IMul(p_faceIdx_50,2)))
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_53;
    l__t_53 = <femData(MeshCell)[]>{};
    for i__t_54 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_53 = Append<femData(MeshCell),femData(MeshCell)>(l__t_53,LoadFem<femData(MeshCell)>(globals.a,i__t_54));
    }
    globals.0cell_a = l__t_53;
    vec3{4} v_55 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_op1_e3_l_6_56 = Sqrt(VDot<3,4>(v_55,v_55));
    globals.camNearVsp = RAdd(globals.camNear,l_op1_e3_l_6_56);
    globals.camFarVsp = RAdd(globals.camFar,l_op1_e3_l_6_56);
    real l_op1_e3_l_9_57 = RDiv(0.1e1,l_op1_e3_l_6_56);
    globals.camN = PACK(VScale<3,4>(l_op1_e3_l_9_57,v_55));
    real l_r_59 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_60 = RMul(0.e0,l_r_59);
    real l_r_61 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_62 = RMul(0.e0,l_r_61);
    real l_r_63 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_64 = RMul(0.e0,l_r_63);
    real l_r_65 = RAdd(l_r_60,l_r_62);
    real l_r_66 = RAdd(l_r_65,l_r_64);
    vec3{4} v_67 = VEC3{4}(VDot<3,4>(v_55,VEC3{4}(l_r_66,RAdd(l_r_65,RMul(0.1e1,l_r_63)),RAdd(RAdd(l_r_60,RMul(-0.1e1,l_r_61)),l_r_64))),VDot<3,4>(v_55,VEC3{4}(RAdd(l_r_65,RMul(-0.1e1,l_r_63)),l_r_66,RAdd(RAdd(RMul(0.1e1,l_r_59),l_r_62),l_r_64))),VDot<3,4>(v_55,VEC3{4}(RAdd(RAdd(l_r_60,RMul(0.1e1,l_r_61)),l_r_64),RAdd(RAdd(RMul(-0.1e1,l_r_59),l_r_62),l_r_64),l_r_66)));
    real l_op1_e3_l_38_68 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_57,l_op1_e3_l_9_57),VDot<3,4>(v_67,v_67))));
    globals.camU = PACK(VScale<3,4>(l_op1_e3_l_38_68,VScale<3,4>(l_op1_e3_l_9_57,v_67)));
    real l_r_70 = VIndex<3,4,0>(v_55);
    real l_r_71 = RMul(0.e0,l_r_70);
    real l_r_72 = VIndex<3,4,1>(v_55);
    real l_r_73 = RMul(0.e0,l_r_72);
    real l_r_74 = VIndex<3,4,2>(v_55);
    real l_r_75 = RMul(0.e0,l_r_74);
    real l_r_76 = RAdd(l_r_71,l_r_73);
    real l_r_77 = RAdd(l_r_76,l_r_75);
    vec3{4} v_78 = VScale<3,4>(l_op1_e3_l_9_57,VEC3{4}(VDot<3,4>(v_67,VEC3{4}(l_r_77,RAdd(l_r_76,RMul(0.1e1,l_r_74)),RAdd(RAdd(l_r_71,RMul(-0.1e1,l_r_72)),l_r_75))),VDot<3,4>(v_67,VEC3{4}(RAdd(l_r_76,RMul(-0.1e1,l_r_74)),l_r_77,RAdd(RAdd(RMul(0.1e1,l_r_70),l_r_73),l_r_75))),VDot<3,4>(v_67,VEC3{4}(RAdd(RAdd(l_r_71,RMul(0.1e1,l_r_72)),l_r_75),RAdd(RAdd(RMul(-0.1e1,l_r_70),l_r_73),l_r_75),l_r_77))));
    real l_r_79 = RMul(l_op1_e3_l_38_68,l_op1_e3_l_9_57);
    globals.camV = <tensor[3]>[RMul(l_r_79,VIndex<3,4,0>(v_78)),RMul(l_r_79,VIndex<3,4,1>(v_78)),RMul(l_r_79,VIndex<3,4,2>(v_78))];
    real l_op1_e3_l_10_81 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_81,l_op1_e3_l_6_56);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_81),l_op1_e3_l_6_56),IntToReal(globals.iresV));
  }
//***** STRAND *****
strand ray (int p_ui_82,int p_vi_83) {
  real rayU;
  real rayV;
  tensor[3] UV;
  output tensor[3] rayOrig;
  output tensor[3] rayVec;
  output real camNearVsp;
  output real camFarVsp;
  tensor[3] rayStart;
  tensor[2] rayStartProj;
  tensor[3] rayEnd;
  tensor[3] dpos;
  tensor[2] dposProj;
  varying output femData(MeshPos)[] poses;
  varying output real[] normalizedTimes;
  varying int cellIntersects;
  varying output tensor[2][] rayCellInter;
  varying output tensor[3][] spaceInter;
  varying output tensor[2][] refSpaceInter;
  varying output femData(MeshCell)[] cellInter;
  varying int currentCellInt;
  varying real rayN;
  varying femData(MeshCell) currentCell;
  varying int steps;
  varying femData(MeshPos) pos;
  varying bool startsInside;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_84 = RNeg(globals.camUmax);
    real l_rayU_85 = RAdd(l_op1_e3_l_9_84,RMul(RDiv(RSub(IntToReal(p_ui_82),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_84)));
    real l_op1_e3_l_9_86 = RNeg(globals.camVmax);
    real l_rayV_87 = RAdd(l_op1_e3_l_9_86,RMul(RDiv(RSub(IntToReal(p_vi_83),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(globals.camVmax,l_op1_e3_l_9_86)));
    vec3{4} v_88 = VScale<3,4>(l_rayU_85,LOAD_0(TensorRef<[3]>(globals.camU)));
    vec3{4} v_89 = VScale<3,4>(l_rayV_87,LOAD_0(TensorRef<[3]>(globals.camV)));
    vec3{4} v_90 = VAdd<3,4>(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),v_88),v_89);
    vec3{4} v_91 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(0.e0,0.e0,0.e0));
    vec3{4} v_92 = VAdd<3,4>(v_90,VScale<3,4>(globals.camNearVsp,v_91));
    vec3{4} v_93 = VAdd<3,4>(v_90,VScale<3,4>(globals.camFarVsp,v_91));
    vec3{4} v_94 = VSub<3,4>(v_93,v_92);
    femData(MeshPos)[0] t_96 = <femData(MeshPos)[0]>{};
    femData(MeshPos)[] l__t_95 = MkDynamic<femData(MeshPos),0>(t_96);
    real[0] t_98 = <real[0]>{};
    real[] l__t_97 = MkDynamic<real,0>(t_98);
    tensor[2][0] t_100 = <tensor[2][0]>{};
    tensor[2][] l__t_99 = MkDynamic<tensor[2],0>(t_100);
    tensor[3][0] t_102 = <tensor[3][0]>{};
    tensor[3][] l__t_101 = MkDynamic<tensor[3],0>(t_102);
    tensor[2][0] t_104 = <tensor[2][0]>{};
    tensor[2][] l__t_103 = MkDynamic<tensor[2],0>(t_104);
    femData(MeshCell)[0] t_106 = <femData(MeshCell)[0]>{};
    femData(MeshCell)[] l__t_105 = MkDynamic<femData(MeshCell),0>(t_106);
    self.rayU = l_rayU_85;
    self.rayV = l_rayV_87;
    self.UV = PACK(VAdd<3,4>(v_88,v_89));
    self.rayOrig = PACK(v_90);
    self.rayVec = PACK(v_91);
    self.camNearVsp = globals.camNearVsp;
    self.camFarVsp = globals.camFarVsp;
    self.rayStart = PACK(v_92);
    self.rayStartProj = <tensor[2]>[VIndex<3,4,0>(v_92),VIndex<3,4,1>(v_92)];
    self.rayEnd = PACK(v_93);
    self.dpos = PACK(v_94);
    self.dposProj = <tensor[2]>[VIndex<3,4,0>(v_94),VIndex<3,4,1>(v_94)];
    self.poses = l__t_95;
    self.normalizedTimes = l__t_97;
    self.cellIntersects = 0;
    self.rayCellInter = l__t_99;
    self.spaceInter = l__t_101;
    self.refSpaceInter = l__t_103;
    self.cellInter = l__t_105;
    self.currentCellInt = -1;
    self.rayN = 0.e0;
    self.currentCell = Subscript<femData(MeshCell)[]>(globals.0cell_a,0);
    self.steps = 0;
    self.pos = ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(globals.a);
    self.startsInside = false;
    self.ui = p_ui_82;
    self.vi = p_vi_83;
  }
  start (world, globals) {
    tensor[3][] l_spaceInter_308;
    tensor[2][] l__t_307;
    femData(MeshCell)[] l__t_306;
    real l_rayN_305;
    femData(MeshCell) l_currentCell_304;
    femData(MeshPos) l_pos_303;
    femData(MeshPos)[] l_poses_121;
    real[] l_normalizedTimes_120;
    int l_cellIntersects_119;
    int l_currentCellInt_118;
    bool l_startsInside_117;
    real l_camFarVsp_116;
    bool l__t_115;
    if (NEQ<int>(self.ui,globals.debugU)) {
      l__t_115 = true;
    } else {
      l__t_115 = NEQ<int>(self.vi,globals.debugV);
    }
    if (l__t_115) {
      if (globals.debug) {
        stabilize;
      }
    }
    l_camFarVsp_116 = self.camFarVsp;
    l_startsInside_117 = self.startsInside;
    l_currentCellInt_118 = self.currentCellInt;
    l_cellIntersects_119 = self.cellIntersects;
    l_normalizedTimes_120 = self.normalizedTimes;
    l_poses_121 = self.poses;
    foreach femData(MeshCell) i_c_122 in globals.0cell_a {
      femData(MeshPos)[] l_poses_131;
      real[] l_normalizedTimes_130;
      int l_cellIntersects_129;
      int l_cellIntersects_128;
      bool l_startsInside_127;
      real l_camNearVsp_126;
      print("Cell:",i_c_122,"\n");
      int l__t_123 = ExtractFemItem<int,CellIndex(MeshCell)>(i_c_122);
      femData(Mesh) l__t_124 = ExtractFem<femData(Mesh),femData(MeshCell)>(i_c_122);
      femData(MeshPos) l__t_125 = _msh_newtonInverse$54A6(TensorRef<[2]>(self.rayStartProj),l__t_123,l__t_124);
      if (ExtractFemItem<bool,Valid(MeshPos)>(l__t_125)) {
        print("pos starts inside\n");
        l_camNearVsp_126 = self.camNearVsp;
        l_startsInside_127 = true;
        l_cellIntersects_128 = l_cellIntersects_119;
        l_cellIntersects_129 = IAdd(l_cellIntersects_119,1);
        l_normalizedTimes_130 = Append<real,real>(l_normalizedTimes_120,self.camNearVsp);
        l_poses_131 = Append<femData(MeshPos),femData(MeshPos)>(l_poses_121,ExtractFemItemN<[femData(Mesh),int,tensor[2]],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_124,l__t_123,ExtractFemItem<tensor[2],RefPos(Mesh)>(l__t_125)));
      } else {
        femData(MeshPos)[] l_poses_288;
        real[] l_normalizedTimes_287;
        int l_cellIntersects_286;
        int l_currentCellInt_285;
        real l_startTime_284;
        vec2 v_216;
        real l_time_215;
        int l_face_214;
        real l_time_202;
        int l_face_201;
        real l_time_186;
        int l_face_185;
        vec2 v_132 = VEC2(-0.e0,-0.e0);
        int l_mulRes_133 = IMul(l__t_123,3);
        int t_134 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,l_mulRes_133);
        int l_mulRes_135 = IMul(2,t_134);
        real l_dof_load_136 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_135);
        real l_dof_load_137 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_135));
        int t_138 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,IAdd(l_mulRes_133,1));
        int l_mulRes_139 = IMul(2,t_138);
        real l_dof_load_140 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_139);
        real l_dof_load_141 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_139));
        int t_142 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_124,IAdd(l_mulRes_133,2));
        int l_mulRes_143 = IMul(2,t_142);
        real l_dof_load_144 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,l_mulRes_143);
        real l_dof_load_145 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_124,IAdd(1,l_mulRes_143));
        real l_prod_146 = RMul(0.1e1,0.1e1);
        real l_basisEval_147 = RMul(-0.1e1,l_prod_146);
        real l_basisEval_148 = RMul(0.1e1,l_prod_146);
        real l_r_149 = RMul(l_dof_load_136,l_basisEval_147);
        real l_r_150 = RAdd(RAdd(l_r_149,RMul(l_dof_load_140,l_basisEval_148)),RMul(l_dof_load_144,0.e0));
        real l_r_151 = RAdd(RAdd(l_r_149,RMul(l_dof_load_140,0.e0)),RMul(l_dof_load_144,l_basisEval_148));
        real l_r_152 = RMul(l_dof_load_137,l_basisEval_147);
        real l_r_153 = RAdd(RAdd(l_r_152,RMul(l_dof_load_141,l_basisEval_148)),RMul(l_dof_load_145,0.e0));
        real l_r_154 = RAdd(RAdd(l_r_152,RMul(l_dof_load_141,0.e0)),RMul(l_dof_load_145,l_basisEval_148));
        real l_r_155 = RAdd(RMul(0.e0,l_r_150),RMul(-0.1e1,l_r_153));
        real l_r_156 = RMul(0.e0,l_r_151);
        real l_r_157 = RAdd(l_r_156,RMul(-0.1e1,l_r_154));
        real l_r_158 = RAdd(RMul(0.1e1,l_r_150),RMul(0.e0,l_r_153));
        real l_r_159 = RMul(0.e0,l_r_154);
        real l_r_160 = RAdd(RMul(0.1e1,l_r_151),l_r_159);
        real l_op1_e3_l_23_161 = VDot<2,2>(VEC2(l_r_150,l_r_153),VEC2(RAdd(l_r_156,RMul(0.1e1,l_r_154)),RAdd(RMul(-0.1e1,l_r_151),l_r_159)));
        real l_prod_162 = RMul(VIndex<2,2,0>(v_132),0.1e1);
        real l_prod_163 = RMul(0.1e1,VIndex<2,2,1>(v_132));
        real l_sum_164 = RAdd(l_basisEval_148,RAdd(RMul(-0.1e1,l_prod_163),RMul(-0.1e1,l_prod_162)));
        real l_basisEval_165 = RMul(0.1e1,l_prod_162);
        real l_basisEval_166 = RMul(0.1e1,l_prod_163);
        vec2 v_167 = VEC2(RDiv(RAdd(RMul(0.e0,l_r_155),RMul(-0.1e1,l_r_157)),l_op1_e3_l_23_161),RDiv(RAdd(RMul(0.e0,l_r_158),RMul(-0.1e1,l_r_160)),l_op1_e3_l_23_161));
        vec2 v_168 = VEC2(RDiv(RAdd(RMul(0.1e1,l_r_155),RMul(0.e0,l_r_157)),l_op1_e3_l_23_161),RDiv(RAdd(RMul(0.1e1,l_r_158),RMul(0.e0,l_r_160)),l_op1_e3_l_23_161));
        vec2 v_169 = VSub<2,2>(LOAD_0(TensorRef<[2]>(self.rayStartProj)),VEC2(RAdd(RAdd(RMul(l_dof_load_136,l_sum_164),RMul(l_dof_load_140,l_basisEval_165)),RMul(l_dof_load_144,l_basisEval_166)),RAdd(RAdd(RMul(l_dof_load_137,l_sum_164),RMul(l_dof_load_141,l_basisEval_165)),RMul(l_dof_load_145,l_basisEval_166))));
        vec2 v_170 = VEC2(VDot<2,2>(v_167,v_169),VDot<2,2>(v_168,v_169));
        vec2 v_171 = VEC2(VDot<2,2>(v_167,LOAD_0(TensorRef<[2]>(self.dposProj))),VDot<2,2>(v_168,LOAD_0(TensorRef<[2]>(self.dposProj))));
        real l_r_172 = RMul(0.e0,0.1e1);
        real l_op1_e3_l_38_173 = VDot<2,2>(v_171,VEC2(RAdd(RMul(0.e0,-0.1e1),l_prod_146),RAdd(RMul(-0.1e1,-0.1e1),l_r_172)));
        real l_r_174 = RDiv(0.1e1,l_op1_e3_l_38_173);
        real l_r_175 = RMul(l_r_174,-0.1e1);
        real l_r_176 = RMul(l_r_174,0.1e1);
        real l__t_177 = VDot<2,2>(VSub<2,2>(VEC2(0.1e1,0.e0),v_170),VEC2(RAdd(RMul(0.e0,l_r_175),RMul(0.1e1,l_r_176)),RAdd(RMul(-0.1e1,l_r_175),RMul(0.e0,l_r_176))));
        bool l__t_178 = BAnd(GTE<real>(l__t_177,-0.1e-15),BAnd(GT<real>(+inf,l__t_177),GTE<real>(Abs<real>(l_op1_e3_l_38_173),0.1e-20)));
        vec2 v_179 = v_170;
        vec2 v_180 = v_171;
        if (l__t_178) {
          real l__t_184;
          int l_face_183;
          vec2 v_181 = VScale<2,2>(l__t_177,v_180);
          vec2 v_182 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_181);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_181))),BAnd(GT<real>(VIndex<2,2,0>(v_182),-0.e0),GT<real>(VIndex<2,2,1>(v_182),-0.e0)))) {
            l_face_183 = 0;
            l__t_184 = l__t_177;
          } else {
            l_face_183 = -1;
            l__t_184 = +inf;
          }
          l_face_185 = l_face_183;
          l_time_186 = l__t_184;
        } else {
          l_face_185 = -1;
          l_time_186 = +inf;
        }
        real l_r_187 = RMul(0.e0,0.e0);
        real l_op1_e3_l_38_188 = VDot<2,2>(v_180,VEC2(RAdd(l_r_187,l_prod_146),RAdd(RMul(-0.1e1,0.e0),l_r_172)));
        real l_r_189 = RDiv(0.1e1,l_op1_e3_l_38_188);
        real l_r_190 = RMul(l_r_189,0.e0);
        real l_r_191 = RMul(l_r_189,0.1e1);
        vec2 v_192 = VSub<2,2>(VEC2(0.e0,0.e0),v_179);
        real l__t_193 = VDot<2,2>(v_192,VEC2(RAdd(RMul(0.e0,l_r_190),RMul(0.1e1,l_r_191)),RAdd(RMul(-0.1e1,l_r_190),RMul(0.e0,l_r_191))));
        bool l__t_194 = GTE<real>(l__t_193,-0.1e-15);
        bool l__t_195 = GTE<real>(Abs<real>(l_op1_e3_l_38_188),0.1e-20);
        vec2 v_196 = v_192;
        if (BAnd(l__t_194,BAnd(GT<real>(l_time_186,l__t_193),l__t_195))) {
          real l__t_200;
          int l_ilit_199;
          vec2 v_197 = VScale<2,2>(l__t_193,v_180);
          vec2 v_198 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_197);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_197))),BAnd(GT<real>(VIndex<2,2,0>(v_198),-0.e0),GT<real>(VIndex<2,2,1>(v_198),-0.e0)))) {
            l_ilit_199 = 1;
            l__t_200 = l__t_193;
          } else {
            l_ilit_199 = l_face_185;
            l__t_200 = l_time_186;
          }
          l_face_201 = l_ilit_199;
          l_time_202 = l__t_200;
        } else {
          l_face_201 = l_face_185;
          l_time_202 = l_time_186;
        }
        real l_op1_e3_l_38_203 = VDot<2,2>(v_180,VEC2(RAdd(l_r_172,RMul(0.1e1,0.e0)),RAdd(RMul(-0.1e1,0.1e1),l_r_187)));
        real l_r_204 = RDiv(0.1e1,l_op1_e3_l_38_203);
        real l_r_205 = RMul(l_r_204,0.1e1);
        real l_r_206 = RMul(l_r_204,0.e0);
        real l__t_207 = VDot<2,2>(v_196,VEC2(RAdd(RMul(0.e0,l_r_205),RMul(0.1e1,l_r_206)),RAdd(RMul(-0.1e1,l_r_205),RMul(0.e0,l_r_206))));
        bool l__t_208 = GTE<real>(l__t_207,-0.1e-15);
        bool l__t_209 = GTE<real>(Abs<real>(l_op1_e3_l_38_203),0.1e-20);
        if (BAnd(l__t_208,BAnd(GT<real>(l_time_202,l__t_207),l__t_209))) {
          real l__t_213;
          int l_ilit_212;
          vec2 v_210 = VScale<2,2>(l__t_207,v_180);
          vec2 v_211 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_210);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_210))),BAnd(GT<real>(VIndex<2,2,0>(v_211),-0.e0),GT<real>(VIndex<2,2,1>(v_211),-0.e0)))) {
            l_ilit_212 = 2;
            l__t_213 = l__t_207;
          } else {
            l_ilit_212 = l_face_201;
            l__t_213 = l_time_202;
          }
          l_face_214 = l_ilit_212;
          l_time_215 = l__t_213;
        } else {
          l_face_214 = l_face_201;
          l_time_215 = l_time_202;
        }
        if (NEQ<int>(l_face_214,-1)) {
          v_216 = VEC2(Max<real>(l_time_215,0.e0),IntToReal(l_face_214));
        } else {
          v_216 = VEC2(-0.1e1,-0.1e1);
        }
        real l_newTime_217 = VIndex<2,2,0>(v_216);
        if (GTE<real>(l_newTime_217,0.e0)) {
          int l_cellIntersects_283;
          real l_newRayTime_282;
          vec2 v_276;
          real l_time_275;
          int l_face_274;
          real l_time_269;
          int l_face_268;
          real l_time_263;
          int l_face_262;
          vec2 v_256;
          real l_time_255;
          int l_face_254;
          real l_time_249;
          int l_face_248;
          real l_time_243;
          int l_face_242;
          vec2 v_236;
          real l_time_235;
          int l_face_234;
          real l_time_229;
          int l_face_228;
          real l_time_223;
          int l_face_222;
          if (l__t_178) {
            real l__t_221;
            int l_face_220;
            vec2 v_218 = VScale<2,2>(l__t_177,v_180);
            vec2 v_219 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_218);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_218))),BAnd(GT<real>(VIndex<2,2,0>(v_219),-0.e0),GT<real>(VIndex<2,2,1>(v_219),-0.e0)))) {
              l_face_220 = 0;
              l__t_221 = l__t_177;
            } else {
              l_face_220 = -1;
              l__t_221 = +inf;
            }
            l_face_222 = l_face_220;
            l_time_223 = l__t_221;
          } else {
            l_face_222 = -1;
            l_time_223 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_223,l__t_193),l__t_195))) {
            real l__t_227;
            int l_ilit_226;
            vec2 v_224 = VScale<2,2>(l__t_193,v_180);
            vec2 v_225 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_224);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_224))),BAnd(GT<real>(VIndex<2,2,0>(v_225),-0.e0),GT<real>(VIndex<2,2,1>(v_225),-0.e0)))) {
              l_ilit_226 = 1;
              l__t_227 = l__t_193;
            } else {
              l_ilit_226 = l_face_222;
              l__t_227 = l_time_223;
            }
            l_face_228 = l_ilit_226;
            l_time_229 = l__t_227;
          } else {
            l_face_228 = l_face_222;
            l_time_229 = l_time_223;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_229,l__t_207),l__t_209))) {
            real l__t_233;
            int l_ilit_232;
            vec2 v_230 = VScale<2,2>(l__t_207,v_180);
            vec2 v_231 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_230);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_230))),BAnd(GT<real>(VIndex<2,2,0>(v_231),-0.e0),GT<real>(VIndex<2,2,1>(v_231),-0.e0)))) {
              l_ilit_232 = 2;
              l__t_233 = l__t_207;
            } else {
              l_ilit_232 = l_face_228;
              l__t_233 = l_time_229;
            }
            l_face_234 = l_ilit_232;
            l_time_235 = l__t_233;
          } else {
            l_face_234 = l_face_228;
            l_time_235 = l_time_229;
          }
          if (NEQ<int>(l_face_234,-1)) {
            v_236 = VEC2(Max<real>(l_time_235,0.e0),IntToReal(l_face_234));
          } else {
            v_236 = VEC2(-0.1e1,-0.1e1);
          }
          vec2 v_237 = VAdd<2,2>(v_179,VScale<2,2>(VIndex<2,2,0>(v_236),v_180));
          if (l__t_178) {
            real l__t_241;
            int l_face_240;
            vec2 v_238 = VScale<2,2>(l__t_177,v_180);
            vec2 v_239 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_238);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_238))),BAnd(GT<real>(VIndex<2,2,0>(v_239),-0.e0),GT<real>(VIndex<2,2,1>(v_239),-0.e0)))) {
              l_face_240 = 0;
              l__t_241 = l__t_177;
            } else {
              l_face_240 = -1;
              l__t_241 = +inf;
            }
            l_face_242 = l_face_240;
            l_time_243 = l__t_241;
          } else {
            l_face_242 = -1;
            l_time_243 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_243,l__t_193),l__t_195))) {
            real l__t_247;
            int l_ilit_246;
            vec2 v_244 = VScale<2,2>(l__t_193,v_180);
            vec2 v_245 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_244);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_244))),BAnd(GT<real>(VIndex<2,2,0>(v_245),-0.e0),GT<real>(VIndex<2,2,1>(v_245),-0.e0)))) {
              l_ilit_246 = 1;
              l__t_247 = l__t_193;
            } else {
              l_ilit_246 = l_face_242;
              l__t_247 = l_time_243;
            }
            l_face_248 = l_ilit_246;
            l_time_249 = l__t_247;
          } else {
            l_face_248 = l_face_242;
            l_time_249 = l_time_243;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_249,l__t_207),l__t_209))) {
            real l__t_253;
            int l_ilit_252;
            vec2 v_250 = VScale<2,2>(l__t_207,v_180);
            vec2 v_251 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_250);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_250))),BAnd(GT<real>(VIndex<2,2,0>(v_251),-0.e0),GT<real>(VIndex<2,2,1>(v_251),-0.e0)))) {
              l_ilit_252 = 2;
              l__t_253 = l__t_207;
            } else {
              l_ilit_252 = l_face_248;
              l__t_253 = l_time_249;
            }
            l_face_254 = l_ilit_252;
            l_time_255 = l__t_253;
          } else {
            l_face_254 = l_face_248;
            l_time_255 = l_time_249;
          }
          if (NEQ<int>(l_face_254,-1)) {
            v_256 = VEC2(Max<real>(l_time_255,0.e0),IntToReal(l_face_254));
          } else {
            v_256 = VEC2(-0.1e1,-0.1e1);
          }
          vec2 v_257 = VAdd<2,2>(LOAD_0(TensorRef<[2]>(self.rayStartProj)),VScale<2,2>(VIndex<2,2,0>(v_256),LOAD_0(TensorRef<[2]>(self.dposProj))));
          if (l__t_178) {
            real l__t_261;
            int l_face_260;
            vec2 v_258 = VScale<2,2>(l__t_177,v_180);
            vec2 v_259 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_258);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_258))),BAnd(GT<real>(VIndex<2,2,0>(v_259),-0.e0),GT<real>(VIndex<2,2,1>(v_259),-0.e0)))) {
              l_face_260 = 0;
              l__t_261 = l__t_177;
            } else {
              l_face_260 = -1;
              l__t_261 = +inf;
            }
            l_face_262 = l_face_260;
            l_time_263 = l__t_261;
          } else {
            l_face_262 = -1;
            l_time_263 = +inf;
          }
          if (BAnd(l__t_194,BAnd(GT<real>(l_time_263,l__t_193),l__t_195))) {
            real l__t_267;
            int l_ilit_266;
            vec2 v_264 = VScale<2,2>(l__t_193,v_180);
            vec2 v_265 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_264);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_264))),BAnd(GT<real>(VIndex<2,2,0>(v_265),-0.e0),GT<real>(VIndex<2,2,1>(v_265),-0.e0)))) {
              l_ilit_266 = 1;
              l__t_267 = l__t_193;
            } else {
              l_ilit_266 = l_face_262;
              l__t_267 = l_time_263;
            }
            l_face_268 = l_ilit_266;
            l_time_269 = l__t_267;
          } else {
            l_face_268 = l_face_262;
            l_time_269 = l_time_263;
          }
          if (BAnd(l__t_208,BAnd(GT<real>(l_time_269,l__t_207),l__t_209))) {
            real l__t_273;
            int l_ilit_272;
            vec2 v_270 = VScale<2,2>(l__t_207,v_180);
            vec2 v_271 = VAdd<2,2>(VAdd<2,2>(VEC2(0.1e-8,0.1e-8),v_179),v_270);
            if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),VAdd<2,2>(v_179,v_270))),BAnd(GT<real>(VIndex<2,2,0>(v_271),-0.e0),GT<real>(VIndex<2,2,1>(v_271),-0.e0)))) {
              l_ilit_272 = 2;
              l__t_273 = l__t_207;
            } else {
              l_ilit_272 = l_face_268;
              l__t_273 = l_time_269;
            }
            l_face_274 = l_ilit_272;
            l_time_275 = l__t_273;
          } else {
            l_face_274 = l_face_268;
            l_time_275 = l_time_269;
          }
          if (NEQ<int>(l_face_274,-1)) {
            v_276 = VEC2(Max<real>(l_time_275,0.e0),IntToReal(l_face_274));
          } else {
            v_276 = VEC2(-0.1e1,-0.1e1);
          }
          tensor[2] _arg_277 = PACK(v_257);
          tensor[2] _arg_278 = PACK(v_237);
          real l_newRayTime_279 = RAdd(self.camNearVsp,RMul(l_newTime_217,RSub(self.camFarVsp,self.camNearVsp)));
          real[] l_normalizedTimes_280 = Append<real,real>(l_normalizedTimes_120,l_newRayTime_279);
          femData(MeshPos)[] l_poses_281 = Append<femData(MeshPos),femData(MeshPos)>(l_poses_121,ExtractFemItemN<[femData(Mesh),int,tensor[2],tensor[2],int],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(l__t_124,l__t_123,_arg_278,_arg_277,RealToInt(RFloor(VIndex<2,2,1>(v_276)))));
          if (GT<real>(l_camFarVsp_116,l_newRayTime_279)) {
            l_newRayTime_282 = l_newRayTime_279;
            l_cellIntersects_283 = l_cellIntersects_119;
          } else {
            l_newRayTime_282 = l_camFarVsp_116;
            l_cellIntersects_283 = l_currentCellInt_118;
          }
          l_startTime_284 = l_newRayTime_282;
          l_currentCellInt_285 = l_cellIntersects_283;
          l_cellIntersects_286 = IAdd(l_cellIntersects_119,1);
          l_normalizedTimes_287 = l_normalizedTimes_280;
          l_poses_288 = l_poses_281;
        } else {
          l_startTime_284 = l_camFarVsp_116;
          l_currentCellInt_285 = l_currentCellInt_118;
          l_cellIntersects_286 = l_cellIntersects_119;
          l_normalizedTimes_287 = l_normalizedTimes_120;
          l_poses_288 = l_poses_121;
        }
        l_camNearVsp_126 = l_startTime_284;
        l_startsInside_127 = self.startsInside;
        l_cellIntersects_128 = l_currentCellInt_285;
        l_cellIntersects_129 = l_cellIntersects_286;
        l_normalizedTimes_130 = l_normalizedTimes_287;
        l_poses_131 = l_poses_288;
      }
      l_camFarVsp_116 = l_camNearVsp_126;
      l_startsInside_117 = l_startsInside_127;
      l_currentCellInt_118 = l_cellIntersects_128;
      l_cellIntersects_119 = l_cellIntersects_129;
      l_normalizedTimes_120 = l_normalizedTimes_130;
      l_poses_121 = l_poses_131;
    }
    if (NEQ<int>(l_cellIntersects_119,0)) {
      femData(MeshCell)[] l_accum_300;
      femData(MeshPos) l_pos_289 = Subscript<femData(MeshPos)[]>(l_poses_121,l_currentCellInt_118);
      real l_rayN_290 = Subscript<real[]>(l_normalizedTimes_120,l_currentCellInt_118);
      tensor[3] _arg_291 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayN_290,LOAD_0(TensorRef<[3]>(self.rayVec)))));
      tensor[3][2] t_293 = <tensor[3][2]>{TensorCopy<[3]>(TensorRef<[3]>(self.rayOrig)),_arg_291};
      tensor[3][] l__t_292 = MkDynamic<tensor[3],2>(t_293);
      tensor[2][1] t_295 = <tensor[2][1]>{ExtractFemItem<tensor[2],RefPos(MeshPos)>(l_pos_289)};
      tensor[2][] l__t_294 = MkDynamic<tensor[2],1>(t_295);
      femData(MeshCell) l_currentCell_296 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_289),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_289));
      femData(MeshCell)[1] t_298 = <femData(MeshCell)[1]>{l_currentCell_296};
      femData(MeshCell)[] l__t_297 = MkDynamic<femData(MeshCell),1>(t_298);
      tensor[2] _arg_299 = <tensor[2]>[self.camNearVsp,self.camFarVsp];
      print("In the interval:",TensorRef<[2]>(_arg_299),"\n");
      print("Possible times:",l_normalizedTimes_120,"\n");
      l_accum_300 = <femData(MeshCell)[]>{};
      tensor[3][] l_spaceInter_302 = Concat<tensor[3]>(self.spaceInter,l__t_292);
      foreach femData(MeshPos) i_p_301 in l_poses_121 {
        l_accum_300 = Append<femData(MeshCell),femData(MeshCell)>(l_accum_300,LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(i_p_301),ExtractFemItem<int,CellIndex(MeshPos)>(i_p_301)));
      }
      print("cells:",l_accum_300,"\n");
      l_pos_303 = l_pos_289;
      l_currentCell_304 = l_currentCell_296;
      l_rayN_305 = l_rayN_290;
      l__t_306 = l__t_297;
      l__t_307 = l__t_294;
      l_spaceInter_308 = l_spaceInter_302;
    } else {
      print("No intersection!\n");
      print("Ui: ",self.ui," Vi:",self.vi,"\n");
      self.poses = l_poses_121;
      self.normalizedTimes = l_normalizedTimes_120;
      self.cellIntersects = l_cellIntersects_119;
      self.currentCellInt = l_currentCellInt_118;
      self.startsInside = l_startsInside_117;
      stabilize;
    }
    self.poses = l_poses_121;
    self.normalizedTimes = l_normalizedTimes_120;
    self.cellIntersects = l_cellIntersects_119;
    self.spaceInter = l_spaceInter_308;
    self.refSpaceInter = l__t_307;
    self.cellInter = l__t_306;
    self.currentCellInt = l_currentCellInt_118;
    self.rayN = l_rayN_305;
    self.currentCell = l_currentCell_304;
    self.pos = l_pos_303;
    self.startsInside = l_startsInside_117;
    active;
  }
  update (world) {
    int l_face_501;
    real l_camFarVsp_500;
    tensor[2][] l_rayCellInter_499;
    tensor[3][] l_spaceInter_498;
    tensor[2][] l_refSpaceInter_497;
    femData(MeshCell)[] l_cellInter_496;
    real l_rayNp_495;
    femData(MeshCell) l_currentCell_494;
    femData(MeshPos) l_pos_493;
    vec2 v_429;
    real l_time_428;
    int l_face_427;
    real l_faceTime_426;
    real l_time_415;
    int l_face_414;
    real l_faceTime_413;
    real l_time_396;
    int l_face_395;
    real l_faceTime_394;
    print("Ui: ",self.ui," vi: ",self.vi,"\n");
    &tensor[2] l__t_309 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(self.pos);
    print("The current ref pos is:",l__t_309,"\n");
    femData(Mesh) l__t_310 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.pos);
    int l__t_311 = ExtractFemItem<int,CellIndex(MeshPos)>(self.pos);
    femData(MeshCell) l__t_312 = LoadFem<femData(MeshCell)>(l__t_310,l__t_311);
    print("Current cell:",l__t_312,"\n");
    print("The current time is:",self.rayN,"\n");
    int l_mulRes_313 = IMul(l__t_311,3);
    int t_314 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,l_mulRes_313);
    int l_mulRes_315 = IMul(2,t_314);
    int t_316 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,IAdd(l_mulRes_313,1));
    int l_mulRes_317 = IMul(2,t_316);
    int t_318 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_310,IAdd(l_mulRes_313,2));
    int l_mulRes_319 = IMul(2,t_318);
    real l_prod_320 = RMul(TensorIndex<&tensor[2],[0]>(l__t_309),0.1e1);
    real l_prod_321 = RMul(0.1e1,TensorIndex<&tensor[2],[1]>(l__t_309));
    real l_prod_322 = RMul(0.1e1,0.1e1);
    real l_mult_323 = RMul(0.1e1,l_prod_322);
    real l_sum_324 = RAdd(l_mult_323,RAdd(RMul(-0.1e1,l_prod_321),RMul(-0.1e1,l_prod_320)));
    real l_basisEval_325 = RMul(0.1e1,l_prod_320);
    real l_basisEval_326 = RMul(0.1e1,l_prod_321);
    real t_327 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_315);
    real t_328 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_317);
    real t_329 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,l_mulRes_319);
    real t_330 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_315));
    real t_331 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_317));
    real t_332 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_310,IAdd(1,l_mulRes_319));
    vec2 v_333 = VEC2(RAdd(RAdd(RMul(t_327,l_sum_324),RMul(t_328,l_basisEval_325)),RMul(t_329,l_basisEval_326)),RAdd(RAdd(RMul(t_330,l_sum_324),RMul(t_331,l_basisEval_325)),RMul(t_332,l_basisEval_326)));
    tensor[2] _arg_334 = PACK(v_333);
    print("The current world pos is:",TensorRef<[2]>(_arg_334),"\n");
    vec3{4} v_335 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    vec2 v_336 = VEC2(VIndex<3,4,0>(v_335),VIndex<3,4,1>(v_335));
    tensor[2] _arg_337 = PACK(v_336);
    print("The current world pos should be:",TensorRef<[2]>(_arg_337),"\n");
    vec2 v_338 = VAdd<2,2>(VEC2(0.1e-8,0.1e-8),LOAD_0(l__t_309));
    vec2 v_339 = v_336;
    vec2 v_340 = v_333;
    if (BNot(BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<2,2>(VEC2(0.1e1,0.1e1),LOAD_0(l__t_309))),BAnd(GT<real>(VIndex<2,2,0>(v_338),-0.e0),GT<real>(VIndex<2,2,1>(v_338),-0.e0))))) {
      print("nerror: invalid pos created\n");
      if (BNot(self.startsInside)) {
        print("Not because of an inside\n");
      }
    }
    tensor[2] _arg_341 = PACK(v_340);
    print("The current world pos is:",TensorRef<[2]>(_arg_341),"\n");
    tensor[2] _arg_342 = PACK(v_339);
    print("The current world pos should be:",TensorRef<[2]>(_arg_342),"\n");
    vec2 v_343 = VSub<2,2>(v_340,v_339);
    real l_err_344 = Sqrt(VDot<2,2>(v_343,v_343));
    if (GT<real>(l_err_344,0.1e-4)) {
      print("nerror:Warning! Moved off ray:",l_err_344,"\n");
    } else {
      print("Did not move off ray!\n");
    }
    int l_steps_345 = IAdd(self.steps,1);
    print("Orig:",TensorRef<[3]>(self.rayOrig)," dir:",TensorRef<[3]>(self.rayVec),"\n");
    real l_op1_e3_l_3_346 = RSub(self.camFarVsp,self.rayN);
    vec3{4} v_347 = VScale<3,4>(l_op1_e3_l_3_346,LOAD_0(TensorRef<[3]>(self.rayVec)));
    &tensor[2] l__t_348 = ExtractFemItem<tensor[2],RefPos(Mesh)>(self.pos);
    femData(Mesh) l__t_349 = ExtractFem<femData(Mesh),femData(MeshCell)>(l__t_312);
    vec2 v_350 = VEC2(VIndex<3,4,0>(v_347),VIndex<3,4,1>(v_347));
    int l__t_351 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(self.pos);
    vec2 v_352 = VEC2(0.1e1,0.e0);
    int l_mulRes_353 = IMul(ExtractFemItem<int,CellIndex(MeshCell)>(l__t_312),3);
    int t_354 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,l_mulRes_353);
    int l_mulRes_355 = IMul(2,t_354);
    int t_356 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,IAdd(l_mulRes_353,1));
    int l_mulRes_357 = IMul(2,t_356);
    real l_dof_load_358 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_357);
    real l_dof_load_359 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_357));
    int t_360 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_349,IAdd(l_mulRes_353,2));
    int l_mulRes_361 = IMul(2,t_360);
    real l_dof_load_362 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_361);
    real l_dof_load_363 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_361));
    real l_basisEval_364 = RMul(-0.1e1,l_prod_322);
    real t_365 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,l_mulRes_355);
    real l_r_366 = RMul(t_365,l_basisEval_364);
    real l_r_367 = RAdd(RAdd(l_r_366,RMul(l_dof_load_358,l_mult_323)),RMul(l_dof_load_362,0.e0));
    real l_r_368 = RAdd(RAdd(l_r_366,RMul(l_dof_load_358,0.e0)),RMul(l_dof_load_362,l_mult_323));
    real t_369 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_349,IAdd(1,l_mulRes_355));
    real l_r_370 = RMul(t_369,l_basisEval_364);
    real l_r_371 = RAdd(RAdd(l_r_370,RMul(l_dof_load_359,l_mult_323)),RMul(l_dof_load_363,0.e0));
    real l_r_372 = RAdd(RAdd(l_r_370,RMul(l_dof_load_359,0.e0)),RMul(l_dof_load_363,l_mult_323));
    real l_r_373 = RAdd(RMul(0.e0,l_r_367),RMul(-0.1e1,l_r_371));
    real l_r_374 = RMul(0.e0,l_r_368);
    real l_r_375 = RAdd(l_r_374,RMul(-0.1e1,l_r_372));
    real l_r_376 = RAdd(RMul(0.1e1,l_r_367),RMul(0.e0,l_r_371));
    real l_r_377 = RMul(0.e0,l_r_372);
    real l_r_378 = RAdd(RMul(0.1e1,l_r_368),l_r_377);
    real l_op1_e3_l_15_379 = VDot<2,2>(VEC2(l_r_367,l_r_371),VEC2(RAdd(l_r_374,RMul(0.1e1,l_r_372)),RAdd(RMul(-0.1e1,l_r_368),l_r_377)));
    vec2 v_380 = VEC2(VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.e0,l_r_373),RMul(-0.1e1,l_r_375)),l_op1_e3_l_15_379),RDiv(RAdd(RMul(0.e0,l_r_376),RMul(-0.1e1,l_r_378)),l_op1_e3_l_15_379)),v_350),VDot<2,2>(VEC2(RDiv(RAdd(RMul(0.1e1,l_r_373),RMul(0.e0,l_r_375)),l_op1_e3_l_15_379),RDiv(RAdd(RMul(0.1e1,l_r_376),RMul(0.e0,l_r_378)),l_op1_e3_l_15_379)),v_350));
    real l_r_381 = RMul(0.e0,0.1e1);
    real l_op1_e3_l_19_382 = VDot<2,2>(v_380,VEC2(RAdd(RMul(0.e0,-0.1e1),l_prod_322),RAdd(RMul(-0.1e1,-0.1e1),l_r_381)));
    real l_r_383 = RDiv(0.1e1,l_op1_e3_l_19_382);
    real l_r_384 = RMul(l_r_383,-0.1e1);
    real l_r_385 = RMul(l_r_383,0.1e1);
    real l__t_386 = VDot<2,2>(VSub<2,2>(v_352,LOAD_0(l__t_348)),VEC2(RAdd(RMul(0.e0,l_r_384),RMul(0.1e1,l_r_385)),RAdd(RMul(-0.1e1,l_r_384),RMul(0.e0,l_r_385))));
    bool l__t_387 = BAnd(GTE<real>(l__t_386,-0.1e-15),BAnd(GT<real>(+inf,l__t_386),GTE<real>(Abs<real>(l_op1_e3_l_19_382),0.1e-20)));
    vec2 v_388 = v_380;
    vec2 v_389 = v_352;
    vec2 v_390 = VEC2(-0.1e1,0.1e1);
    if (l__t_387) {
      real l__t_393;
      int l__t_392;
      real l_faceTime_391;
      if (NEQ<int>(l__t_351,0)) {
        l_faceTime_391 = -inf;
        l__t_392 = 0;
        l__t_393 = l__t_386;
      } else {
        l_faceTime_391 = l__t_386;
        l__t_392 = -1;
        l__t_393 = +inf;
      }
      l_faceTime_394 = l_faceTime_391;
      l_face_395 = l__t_392;
      l_time_396 = l__t_393;
    } else {
      l_faceTime_394 = -inf;
      l_face_395 = -1;
      l_time_396 = +inf;
    }
    vec2 v_397 = VEC2(0.e0,0.e0);
    real l_r_398 = RMul(0.e0,0.e0);
    real l_op1_e3_l_19_399 = VDot<2,2>(v_388,VEC2(RAdd(l_r_398,l_prod_322),RAdd(RMul(-0.1e1,0.e0),l_r_381)));
    real l_r_400 = RDiv(0.1e1,l_op1_e3_l_19_399);
    real l_r_401 = RMul(l_r_400,0.e0);
    real l_r_402 = RMul(l_r_400,0.1e1);
    vec2 v_403 = VSub<2,2>(v_397,LOAD_0(l__t_348));
    real l__t_404 = VDot<2,2>(v_403,VEC2(RAdd(RMul(0.e0,l_r_401),RMul(0.1e1,l_r_402)),RAdd(RMul(-0.1e1,l_r_401),RMul(0.e0,l_r_402))));
    bool l__t_405 = GTE<real>(l__t_404,-0.1e-15);
    bool l__t_406 = GTE<real>(Abs<real>(l_op1_e3_l_19_399),0.1e-20);
    vec2 v_407 = v_397;
    vec2 v_408 = VEC2(0.e0,0.1e1);
    vec2 v_409 = v_403;
    if (BAnd(l__t_405,BAnd(GT<real>(l_time_396,l__t_404),l__t_406))) {
      real l__t_412;
      int l_ilit_411;
      real l_faceTime_410;
      if (NEQ<int>(l__t_351,1)) {
        l_faceTime_410 = l_faceTime_394;
        l_ilit_411 = 1;
        l__t_412 = l__t_404;
      } else {
        l_faceTime_410 = l__t_404;
        l_ilit_411 = l_face_395;
        l__t_412 = l_time_396;
      }
      l_faceTime_413 = l_faceTime_410;
      l_face_414 = l_ilit_411;
      l_time_415 = l__t_412;
    } else {
      l_faceTime_413 = l_faceTime_394;
      l_face_414 = l_face_395;
      l_time_415 = l_time_396;
    }
    real l_op1_e3_l_19_416 = VDot<2,2>(v_388,VEC2(RAdd(l_r_381,RMul(0.1e1,0.e0)),RAdd(RMul(-0.1e1,0.1e1),l_r_398)));
    real l_r_417 = RDiv(0.1e1,l_op1_e3_l_19_416);
    real l_r_418 = RMul(l_r_417,0.1e1);
    real l_r_419 = RMul(l_r_417,0.e0);
    real l__t_420 = VDot<2,2>(v_409,VEC2(RAdd(RMul(0.e0,l_r_418),RMul(0.1e1,l_r_419)),RAdd(RMul(-0.1e1,l_r_418),RMul(0.e0,l_r_419))));
    bool l__t_421 = GTE<real>(l__t_420,-0.1e-15);
    bool l__t_422 = GTE<real>(Abs<real>(l_op1_e3_l_19_416),0.1e-20);
    if (BAnd(l__t_421,BAnd(GT<real>(l_time_415,l__t_420),l__t_422))) {
      real l__t_425;
      int l_ilit_424;
      real l_faceTime_423;
      if (NEQ<int>(l__t_351,2)) {
        l_faceTime_423 = l_faceTime_413;
        l_ilit_424 = 2;
        l__t_425 = l__t_420;
      } else {
        l_faceTime_423 = l__t_420;
        l_ilit_424 = l_face_414;
        l__t_425 = l_time_415;
      }
      l_faceTime_426 = l_faceTime_423;
      l_face_427 = l_ilit_424;
      l_time_428 = l__t_425;
    } else {
      l_faceTime_426 = l_faceTime_413;
      l_face_427 = l_face_414;
      l_time_428 = l_time_415;
    }
    if (NEQ<int>(l_face_427,-1)) {
      v_429 = VEC2(Max<real>(l_time_428,0.e0),IntToReal(l_face_427));
    } else {
      vec2 v_430;
      if (EQ<real>(-inf,l_faceTime_426)) {
        v_430 = VEC2(-0.1e1,-0.1e1);
      } else {
        v_430 = VEC2(l_faceTime_426,IntToReal(l__t_351));
      }
      v_429 = v_430;
    }
    real l_nextTime_431 = VIndex<2,2,0>(v_429);
    real l_rayNp_432 = Max<real>(self.rayN,Min<real>(self.camFarVsp,RAdd(self.rayN,RMul(l_nextTime_431,l_op1_e3_l_3_346))));
    print("Next time:",l_nextTime_431,"\n");
    if (GTE<real>(l_nextTime_431,0.e0)) {
      femData(MeshCell)[] l_cellInter_492;
      femData(MeshCell) l_currentCell_491;
      femData(MeshPos) l_pos_490;
      tensor[3][] l_spaceInter_485;
      femData(MeshPos) l__t_482;
      vec2 v_454;
      real l_time_453;
      int l_face_452;
      real l_faceTime_451;
      real l_time_447;
      int l_face_446;
      real l_faceTime_445;
      real l_time_441;
      int l_face_440;
      real l_faceTime_439;
      tensor[2] _arg_433 = <tensor[2]>[self.rayN,l_rayNp_432];
      tensor[2][] l_rayCellInter_434 = Append<tensor[2],tensor[2]>(self.rayCellInter,_arg_433);
      int l__t_435 = ExtractFemItem<int,CellIndex(Mesh)>(self.pos);
      if (l__t_387) {
        real l__t_438;
        int l__t_437;
        real l_faceTime_436;
        if (NEQ<int>(l__t_351,0)) {
          l_faceTime_436 = -inf;
          l__t_437 = 0;
          l__t_438 = l__t_386;
        } else {
          l_faceTime_436 = l__t_386;
          l__t_437 = -1;
          l__t_438 = +inf;
        }
        l_faceTime_439 = l_faceTime_436;
        l_face_440 = l__t_437;
        l_time_441 = l__t_438;
      } else {
        l_faceTime_439 = -inf;
        l_face_440 = -1;
        l_time_441 = +inf;
      }
      if (BAnd(l__t_405,BAnd(GT<real>(l_time_441,l__t_404),l__t_406))) {
        real l__t_444;
        int l_ilit_443;
        real l_faceTime_442;
        if (NEQ<int>(l__t_351,1)) {
          l_faceTime_442 = l_faceTime_439;
          l_ilit_443 = 1;
          l__t_444 = l__t_404;
        } else {
          l_faceTime_442 = l__t_404;
          l_ilit_443 = l_face_440;
          l__t_444 = l_time_441;
        }
        l_faceTime_445 = l_faceTime_442;
        l_face_446 = l_ilit_443;
        l_time_447 = l__t_444;
      } else {
        l_faceTime_445 = l_faceTime_439;
        l_face_446 = l_face_440;
        l_time_447 = l_time_441;
      }
      if (BAnd(l__t_421,BAnd(GT<real>(l_time_447,l__t_420),l__t_422))) {
        real l__t_450;
        int l_ilit_449;
        real l_faceTime_448;
        if (NEQ<int>(l__t_351,2)) {
          l_faceTime_448 = l_faceTime_445;
          l_ilit_449 = 2;
          l__t_450 = l__t_420;
        } else {
          l_faceTime_448 = l__t_420;
          l_ilit_449 = l_face_446;
          l__t_450 = l_time_447;
        }
        l_faceTime_451 = l_faceTime_448;
        l_face_452 = l_ilit_449;
        l_time_453 = l__t_450;
      } else {
        l_faceTime_451 = l_faceTime_445;
        l_face_452 = l_face_446;
        l_time_453 = l_time_447;
      }
      if (NEQ<int>(l_face_452,-1)) {
        v_454 = VEC2(Max<real>(l_time_453,0.e0),IntToReal(l_face_452));
      } else {
        vec2 v_455;
        if (EQ<real>(-inf,l_faceTime_451)) {
          v_455 = VEC2(-0.1e1,-0.1e1);
        } else {
          v_455 = VEC2(l_faceTime_451,IntToReal(l__t_351));
        }
        v_454 = v_455;
      }
      int l__t_456 = RealToInt(RFloor(VIndex<2,2,1>(v_454)));
      int[2] l__t_457 = nextCell4$54AA(l__t_456,l__t_435,l__t_310);
      int l__t_458 = Subscript<int[2]>(l__t_457,0);
      if (NEQ<int>(-1,l__t_458)) {
        tensor[2] _arg_459 = PACK(v_407);
        tensor[2] _arg_460 = PACK(v_407);
        tensor[2] _arg_461 = PACK(v_389);
        int l__t_462 = Subscript<int[2]>(l__t_457,1);
        tensor[2][3] t_463 = <tensor[2][3]>{_arg_461,_arg_460,_arg_459};
        tensor[2] _arg_464 = PACK(v_389);
        tensor[2] _arg_465 = PACK(v_408);
        tensor[2] _arg_466 = PACK(v_390);
        tensor[2][3] t_467 = <tensor[2][3]>{_arg_466,_arg_465,_arg_464};
        vec2 v_468 = VAdd<2,2>(VScale<2,2>(VIndex<2,2,0>(v_454),v_388),LOAD_0(l__t_348));
        int[3] t_469 = <int[3]>{1,1,0};
        real[2] t_470 = <real[2]>{VIndex<2,2,0>(v_468),VIndex<2,2,1>(v_468)};
        real[2] t_471 = <real[2]>{0.e0,0.e0};
        real[2] t_472 = <real[2]>{0.e0,0.e0};
        real[2] t_473 = <real[2]>{0.1e1,0.e0};
        real[2][3] t_474 = <real[2][3]>{t_473,t_472,t_471};
        int[3] t_475 = <int[3]>{1,1,0};
        real[2] t_476 = <real[2]>{0.1e1,0.e0};
        real[2] t_477 = <real[2]>{0.e0,0.1e1};
        real[2] t_478 = <real[2]>{-0.1e1,0.1e1};
        real[2][3] t_479 = <real[2][3]>{t_478,t_477,t_476};
        int[3] t_480 = <int[3]>{1,1,0};
        tensor[2] _arg_481 = PACK(VAdd<2,2>(LOAD_0(Subscript<tensor[2][3]>(t_463,l__t_462)),VScale<2,2>(RDiv(RSub(Subscript<real[2]>(t_470,Subscript<int[3]>(t_469,l__t_456)),Subscript<real[2]>(Subscript<real[2][3]>(t_474,l__t_456),Subscript<int[3]>(t_475,l__t_456))),Subscript<real[2]>(Subscript<real[2][3]>(t_479,l__t_456),Subscript<int[3]>(t_480,l__t_456))),LOAD_0(Subscript<tensor[2][3]>(t_467,l__t_462)))));
        l__t_482 = ExtractFemItemN<[femData(Mesh),int,tensor[2],int],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_310,l__t_458,_arg_481,l__t_462);
      } else {
        tensor[2] _arg_483 = PACK(VAdd<2,2>(VScale<2,2>(VIndex<2,2,0>(v_454),v_388),LOAD_0(l__t_348)));
        l__t_482 = ExtractFemItemN<[femData(Mesh),tensor[2]],femData(MeshPos),InvalidBuildBoundary(MeshPos),"","",[],int>(l__t_310,_arg_483);
      }
      if (GTE<real>(l_rayNp_432,self.camFarVsp)) {
        print("cells: ",self.cellInter,"\n");
        tensor[3] _arg_484 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(self.camFarVsp,LOAD_0(TensorRef<[3]>(self.rayVec)))));
        self.rayCellInter = l_rayCellInter_434;
        self.spaceInter = Append<tensor[3],tensor[3]>(self.spaceInter,_arg_484);
        self.rayN = l_rayNp_432;
        self.steps = l_steps_345;
        stabilize;
      } else {
        l_spaceInter_485 = self.spaceInter;
      }
      tensor[3] _arg_486 = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rayOrig)),VScale<3,4>(l_rayNp_432,LOAD_0(TensorRef<[3]>(self.rayVec)))));
      tensor[3][] l_spaceInter_487 = Append<tensor[3],tensor[3]>(l_spaceInter_485,_arg_486);
      tensor[2][] l_refSpaceInter_488 = Append<tensor[2],tensor[2]>(self.refSpaceInter,ExtractFemItem<tensor[2],RefPos(MeshPos)>(l__t_482));
      if (ExtractFemItem<bool,Valid(MeshPos)>(l__t_482)) {
        femData(MeshCell) l__t_489 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_482),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_482));
        print("Next cell:",l__t_489,"\n");
        self.rayCellInter = l_rayCellInter_434;
        self.spaceInter = l_spaceInter_487;
        self.refSpaceInter = l_refSpaceInter_488;
        self.cellInter = Append<femData(MeshCell),femData(MeshCell)>(self.cellInter,l__t_489);
        self.rayN = l_rayNp_432;
        self.currentCell = l__t_489;
        self.steps = l_steps_345;
        self.pos = l__t_482;
        active;
      } else {
        print("Invalid\n");
        l_pos_490 = self.pos;
        l_currentCell_491 = self.currentCell;
        l_cellInter_492 = self.cellInter;
      }
      l_pos_493 = l_pos_490;
      l_currentCell_494 = l_currentCell_491;
      l_rayNp_495 = l_rayNp_432;
      l_cellInter_496 = l_cellInter_492;
      l_refSpaceInter_497 = l_refSpaceInter_488;
      l_spaceInter_498 = l_spaceInter_487;
      l_rayCellInter_499 = l_rayCellInter_434;
    } else {
      l_pos_493 = self.pos;
      l_currentCell_494 = self.currentCell;
      l_rayNp_495 = self.rayN;
      l_cellInter_496 = self.cellInter;
      l_refSpaceInter_497 = self.refSpaceInter;
      l_spaceInter_498 = self.spaceInter;
      l_rayCellInter_499 = self.rayCellInter;
    }
    l_camFarVsp_500 = self.camFarVsp;
    l_face_501 = -1;
    for i_i_502 = 0 to ISub(self.cellIntersects,1) {
      int l_newIdx_510;
      real l_estimate_509;
      real l_t_503 = Subscript<real[]>(self.normalizedTimes,i_i_502);
      femData(MeshPos) l_posp_504 = Subscript<femData(MeshPos)[]>(self.poses,i_i_502);
      if (GTE<real>(l_t_503,l_rayNp_495)) {
        int l_newIdx_508;
        real l_estimate_507;
        if (GTE<real>(l_camFarVsp_500,l_t_503)) {
          int l_i_506;
          real l_t_505;
          if (NEQ<int>(ExtractFemItem<int,CellIndex(Mesh)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_posp_504),ExtractFemItem<int,CellIndex(MeshPos)>(l_posp_504))),ExtractFemItem<int,CellIndex(Mesh)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_493),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_493))))) {
            l_t_505 = l_t_503;
            l_i_506 = i_i_502;
          } else {
            l_t_505 = l_camFarVsp_500;
            l_i_506 = l_face_501;
          }
          l_estimate_507 = l_t_505;
          l_newIdx_508 = l_i_506;
        } else {
          l_estimate_507 = l_camFarVsp_500;
          l_newIdx_508 = l_face_501;
        }
        l_estimate_509 = l_estimate_507;
        l_newIdx_510 = l_newIdx_508;
      } else {
        l_estimate_509 = l_camFarVsp_500;
        l_newIdx_510 = l_face_501;
      }
      l_camFarVsp_500 = l_estimate_509;
      l_face_501 = l_newIdx_510;
    }
    if (GT<int>(l_face_501,-1)) {
      print("nerror:Impossible happened\n");
      if (self.startsInside) {
        print("because of an inside\n");
      }
      print("Direction:",TensorRef<[3]>(self.rayVec),"\n");
      &tensor[2] l__t_511 = ExtractFemItem<tensor[2],RefPos(MeshPos)>(l_pos_493);
      femData(Mesh) l__t_512 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_493);
      int l_mulRes_513 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_493),3);
      int t_514 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,l_mulRes_513);
      int l_mulRes_515 = IMul(2,t_514);
      int t_516 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,IAdd(l_mulRes_513,1));
      int l_mulRes_517 = IMul(2,t_516);
      int t_518 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_512,IAdd(l_mulRes_513,2));
      int l_mulRes_519 = IMul(2,t_518);
      real l_prod_520 = RMul(TensorIndex<&tensor[2],[0]>(l__t_511),0.1e1);
      real l_prod_521 = RMul(0.1e1,TensorIndex<&tensor[2],[1]>(l__t_511));
      real l_sum_522 = RAdd(l_mult_323,RAdd(RMul(-0.1e1,l_prod_521),RMul(-0.1e1,l_prod_520)));
      real l_basisEval_523 = RMul(0.1e1,l_prod_520);
      real l_basisEval_524 = RMul(0.1e1,l_prod_521);
      real t_525 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_515);
      real t_526 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_517);
      real t_527 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,l_mulRes_519);
      real t_528 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_515));
      real t_529 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_517));
      real t_530 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_512,IAdd(1,l_mulRes_519));
      tensor[2] _arg_531 = <tensor[2]>[RAdd(RAdd(RMul(t_525,l_sum_522),RMul(t_526,l_basisEval_523)),RMul(t_527,l_basisEval_524)),RAdd(RAdd(RMul(t_528,l_sum_522),RMul(t_529,l_basisEval_523)),RMul(t_530,l_basisEval_524))];
      print("world pos was:",TensorRef<[2]>(_arg_531),"\n");
      print("Interior pos was:",l__t_511,"\n");
      print(self.normalizedTimes," at ",l_face_501,"\n");
      print("Original time was:",l_rayNp_495,"\n");
      femData(MeshPos) l_pos_532 = Subscript<femData(MeshPos)[]>(self.poses,l_face_501);
      femData(MeshCell) l_currentCell_533 = LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_pos_532),ExtractFemItem<int,CellIndex(MeshPos)>(l_pos_532));
      self.rayCellInter = l_rayCellInter_499;
      self.spaceInter = l_spaceInter_498;
      self.refSpaceInter = l_refSpaceInter_497;
      self.cellInter = Append<femData(MeshCell),femData(MeshCell)>(l_cellInter_496,l_currentCell_533);
      self.rayN = Subscript<real[]>(self.normalizedTimes,l_face_501);
      self.currentCell = l_currentCell_533;
      self.steps = l_steps_345;
      self.pos = l_pos_532;
      active;
    } else {
      print("Enter times:",self.normalizedTimes,"\n");
      print("Ray enter times:",l_rayCellInter_499,"\n");
      print("cells:",l_cellInter_496,"\n");
      print("End\n");
      self.rayCellInter = l_rayCellInter_499;
      self.spaceInter = l_spaceInter_498;
      self.refSpaceInter = l_refSpaceInter_497;
      self.cellInter = l_cellInter_496;
      self.rayN = l_rayNp_495;
      self.currentCell = l_currentCell_494;
      self.steps = l_steps_345;
      self.pos = l_pos_493;
      stabilize;
    }
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_534 = 0 to ISub(globals.iresU,1) {
      for i_ui_535 = 0 to ISub(globals.iresV,1) {
        new ray(i_ui_535,i_vi_534);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.115     2.869
    front end .......................................................................   0.638     0.716
      parser ........................................................................   0.055     0.055
      typechecker ...................................................................   0.023     0.023
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.078     0.078
    High IR optimization ............................................................   0.066     0.163
      High IR value numbering .......................................................   0.041     0.041
      High IR normalization .........................................................   0.056     0.056
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.162     0.162
    Mid IR optimization .............................................................   0.042     0.089
      Mid IR contraction ............................................................   0.003     0.003
      Mid IR value numbering ........................................................   0.041     0.041
      Mid IR border control .........................................................   0.003     0.003
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.038     0.038
    Low IR optimization .............................................................   0.064     0.120
      Low IR contraction ............................................................   0.026     0.026
      Low IR value numbering ........................................................   0.031     0.031
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.048     0.048
    Tree IR optimization ............................................................   0.007     0.008
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.038     1.332
      C compiler ....................................................................   1.294     1.294
