/* ParseTree: After parsing */
  Program @ [justTypes.diderot:2.1-95.0] 
    [
      Type: msh= @ [justTypes.diderot:2.1-3.0] 
        Mesh @ [justTypes.diderot:2.6-10] 
        From File : test1.json @ [justTypes.diderot:2.1-3.0] 
      Type: fns= @ [justTypes.diderot:3.1-4.0] 
        FunctionSpace(msh) @ [justTypes.diderot:3.6-26] 
          [ ]
        From File : test1.json @ [justTypes.diderot:3.1-4.0] 
      Type: FUNC= @ [justTypes.diderot:4.1-5.0] 
        FemFunction(fns) @ [justTypes.diderot:4.6-22] 
        From File : test1.json @ [justTypes.diderot:4.1-5.0] 
      Input: a @ [justTypes.diderot:6.1-7.0] 
      Input: b= @ [justTypes.diderot:7.1-22] 
        Apply @ [justTypes.diderot:7.15-21] 
          Var: fns @ [justTypes.diderot:7.15-18] 
          [
            Var: a @ [justTypes.diderot:7.19-20] 
          ]
      Input: c= @ [justTypes.diderot:8.1-9.0] 
        Apply @ [justTypes.diderot:8.16-23] 
          Var: FUNC @ [justTypes.diderot:8.16-20] 
          [
            Var: b @ [justTypes.diderot:8.21-22] 
          ]
      Var @ [justTypes.diderot:9.1-10.0] 
        Decl: V= @ [justTypes.diderot:9.1-10.0] 
          Select @ [justTypes.diderot:9.16-19] 
            Var: c @ [justTypes.diderot:9.16-17] 
            F
      Input: isoval= @ [justTypes.diderot:10.1-25] 
        Lit: 0.2e0 @ [justTypes.diderot:10.21-24] 
      Input: thick= @ [justTypes.diderot:10.27-11.0] 
        Lit: 0.7e-1 @ [justTypes.diderot:10.46-50] 
      Input: camEye= @ [justTypes.diderot:11.1-36] 
        Cons @ [justTypes.diderot:11.21-35] 
          [
            Lit: 0.3e1 @ [justTypes.diderot:11.22-25] 
            UnaryOp: unary - @ [justTypes.diderot:11.26-30] 
              Lit: 0.3e1 @ [justTypes.diderot:11.27-30] 
            Lit: 0.3e1 @ [justTypes.diderot:11.31-34] 
          ]
      Input: camAt= @ [justTypes.diderot:11.38-71] 
        Cons @ [justTypes.diderot:11.57-70] 
          [
            Lit: 0.5e0 @ [justTypes.diderot:11.58-61] 
            Lit: 0.5e0 @ [justTypes.diderot:11.62-65] 
            Lit: 0.5e0 @ [justTypes.diderot:11.66-69] 
          ]
      Input: camUp= @ [justTypes.diderot:11.74-12.0] 
        Cons @ [justTypes.diderot:11.93-100] 
          [
            Lit: 0 @ [justTypes.diderot:11.94-95] 
            Lit: 0 @ [justTypes.diderot:11.96-97] 
            Lit: 1 @ [justTypes.diderot:11.98-99] 
          ]
      Input: camFOV= @ [justTypes.diderot:12.1-26] 
        Lit: 0.137e2 @ [justTypes.diderot:12.21-25] 
      Input: iresU= @ [justTypes.diderot:12.28-50] 
        Lit: 500 @ [justTypes.diderot:12.46-49] 
      Input: iresV= @ [justTypes.diderot:12.54-13.0] 
        Lit: 500 @ [justTypes.diderot:12.72-75] 
      Input: camNear= @ [justTypes.diderot:13.1-25] 
        UnaryOp: unary - @ [justTypes.diderot:13.22-24] 
          Lit: 2 @ [justTypes.diderot:13.23-24] 
      Input: camFar= @ [justTypes.diderot:13.26-48] 
        Lit: 5 @ [justTypes.diderot:13.46-47] 
      Input: refStep= @ [justTypes.diderot:14.1-26] 
        Lit: 0.1e1 @ [justTypes.diderot:14.22-25] 
      Input: rayStep= @ [justTypes.diderot:14.27-15.0] 
        Lit: 0.1e-1 @ [justTypes.diderot:14.47-51] 
      Input: lightVsp= @ [justTypes.diderot:15.1-39] 
        Cons @ [justTypes.diderot:15.23-38] 
          [
            Lit: 0.e0 @ [justTypes.diderot:15.24-27] 
            Lit: 0.e0 @ [justTypes.diderot:15.29-32] 
            Lit: 0.1e1 @ [justTypes.diderot:15.34-37] 
          ]
      Input: phongKa= @ [justTypes.diderot:16.1-26] 
        Lit: 0.1e0 @ [justTypes.diderot:16.22-25] 
      Input: phongKd= @ [justTypes.diderot:16.27-17.0] 
        Lit: 0.9e0 @ [justTypes.diderot:16.48-51] 
      Input: debug= @ [justTypes.diderot:18.1-19.0] 
        Lit: false @ [justTypes.diderot:18.20-25] 
      Input: su= @ [justTypes.diderot:19.1-20.0] 
        Lit: 250 @ [justTypes.diderot:19.16-19] 
      Input: sv= @ [justTypes.diderot:20.1-21.0] 
        Lit: 250 @ [justTypes.diderot:20.16-19] 
      Var @ [justTypes.diderot:23.1-29] 
        Decl: F= @ [justTypes.diderot:23.1-29] 
          BinOp: - @ [justTypes.diderot:23.18-28] 
            Var: V @ [justTypes.diderot:23.18-19] 
            Var: isoval @ [justTypes.diderot:23.22-28] 
      Func: mask @ [justTypes.diderot:24.1-25.0] 
        Tensor @ [justTypes.diderot:24.10-15] 
          [ ]
        [
          Param: x @ [justTypes.diderot:24.20-26] 
            Tensor @ [justTypes.diderot:24.20-25] 
              [
                Lit: 3 @ [justTypes.diderot:24.20-25] 
              ]
        ]
        Expr @ [justTypes.diderot:24.1-25.0] 
          Lit: 0.1e1 @ [justTypes.diderot:24.30-33] 
      Var @ [justTypes.diderot:25.1-26.0] 
        Decl: I= @ [justTypes.diderot:25.1-26.0] 
          Image @ [justTypes.diderot:25.17-40] 
            Lit: "cmap.nrrd" @ [justTypes.diderot:25.28-39] 
      Var @ [justTypes.diderot:26.1-40] 
        Decl: cmap= @ [justTypes.diderot:26.1-40] 
          BinOp: ⊛ @ [justTypes.diderot:26.22-39] 
            Var: tent @ [justTypes.diderot:26.22-26] 
            Apply @ [justTypes.diderot:26.31-39] 
              Var: clamp @ [justTypes.diderot:26.31-36] 
              [
                Var: I @ [justTypes.diderot:26.37-38] 
              ]
      Func: color @ [justTypes.diderot:27.1-28.0] 
        Tensor @ [justTypes.diderot:27.10-15] 
          [
            Lit: 3 @ [justTypes.diderot:27.10-15] 
          ]
        [
          Param: x @ [justTypes.diderot:27.21-27] 
            Tensor @ [justTypes.diderot:27.21-26] 
              [
                Lit: 3 @ [justTypes.diderot:27.21-26] 
              ]
        ]
        Expr @ [justTypes.diderot:27.1-28.0] 
          Apply @ [justTypes.diderot:27.31-41] 
            Var: cmap @ [justTypes.diderot:27.31-35] 
            [
              Apply @ [justTypes.diderot:27.36-40] 
                Var: V @ [justTypes.diderot:27.36-37] 
                [
                  Var: x @ [justTypes.diderot:27.38-39] 
                ]
            ]
      Func: alpha @ [justTypes.diderot:28.1-30.0] 
        Tensor @ [justTypes.diderot:28.10-15] 
          [ ]
        [
          Param: v @ [justTypes.diderot:28.21-27] 
            Tensor @ [justTypes.diderot:28.21-26] 
              [ ]
          Param: g @ [justTypes.diderot:28.29-35] 
            Tensor @ [justTypes.diderot:28.29-34] 
              [ ]
        ]
        Expr @ [justTypes.diderot:28.1-30.0] 
          Apply @ [justTypes.diderot:29.5-41] 
            Var: clamp @ [justTypes.diderot:29.5-10] 
            [
              Lit: 0 @ [justTypes.diderot:29.11-12] 
              Lit: 1 @ [justTypes.diderot:29.14-15] 
              BinOp: * @ [justTypes.diderot:29.17-40] 
                Lit: 0.13e1 @ [justTypes.diderot:29.17-20] 
                BinOp: - @ [justTypes.diderot:29.22-39] 
                  Lit: 1 @ [justTypes.diderot:29.22-23] 
                  BinOp: / @ [justTypes.diderot:29.26-39] 
                    UnaryOp: |()| @ [justTypes.diderot:29.26-29] 
                      Var: v @ [justTypes.diderot:29.27-28] 
                    BinOp: * @ [justTypes.diderot:29.31-38] 
                      Var: g @ [justTypes.diderot:29.31-32] 
                      Var: thick @ [justTypes.diderot:29.33-38] 
            ]
      Var @ [justTypes.diderot:31.1-32.0] 
        Decl: camDist= @ [justTypes.diderot:31.1-32.0] 
          UnaryOp: |()| @ [justTypes.diderot:31.16-32] 
            BinOp: - @ [justTypes.diderot:31.17-31] 
              Var: camAt @ [justTypes.diderot:31.17-22] 
              Var: camEye @ [justTypes.diderot:31.25-31] 
      Var @ [justTypes.diderot:32.1-39] 
        Decl: camN= @ [justTypes.diderot:32.1-39] 
          Apply @ [justTypes.diderot:32.13-38] 
            Var: normalize @ [justTypes.diderot:32.13-22] 
            [
              BinOp: - @ [justTypes.diderot:32.23-37] 
                Var: camAt @ [justTypes.diderot:32.23-28] 
                Var: camEye @ [justTypes.diderot:32.31-37] 
            ]
      Var @ [justTypes.diderot:33.1-38] 
        Decl: camU= @ [justTypes.diderot:33.1-38] 
          Apply @ [justTypes.diderot:33.13-37] 
            Var: normalize @ [justTypes.diderot:33.13-22] 
            [
              BinOp: × @ [justTypes.diderot:33.23-36] 
                Var: camN @ [justTypes.diderot:33.23-27] 
                Var: camUp @ [justTypes.diderot:33.31-36] 
            ]
      Var @ [justTypes.diderot:34.1-26] 
        Decl: camV= @ [justTypes.diderot:34.1-26] 
          BinOp: × @ [justTypes.diderot:34.13-25] 
            Var: camU @ [justTypes.diderot:34.13-17] 
            Var: camN @ [justTypes.diderot:34.21-25] 
      Var @ [justTypes.diderot:35.1-36.0] 
        Decl: camVmax= @ [justTypes.diderot:35.1-36.0] 
          BinOp: * @ [justTypes.diderot:35.16-42] 
            Apply @ [justTypes.diderot:35.16-34] 
              Var: tan @ [justTypes.diderot:35.16-19] 
              [
                BinOp: / @ [justTypes.diderot:35.20-33] 
                  BinOp: * @ [justTypes.diderot:35.20-29] 
                    Var: camFOV @ [justTypes.diderot:35.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [justTypes.diderot:35.27-29] 
                  Lit: 360 @ [justTypes.diderot:35.30-33] 
              ]
            Var: camDist @ [justTypes.diderot:35.35-42] 
      Var @ [justTypes.diderot:36.1-37.0] 
        Decl: camUmax= @ [justTypes.diderot:36.1-37.0] 
          BinOp: / @ [justTypes.diderot:36.16-35] 
            BinOp: * @ [justTypes.diderot:36.16-29] 
              Var: camVmax @ [justTypes.diderot:36.16-23] 
              Var: iresU @ [justTypes.diderot:36.24-29] 
            Var: iresV @ [justTypes.diderot:36.30-35] 
      Var @ [justTypes.diderot:37.1-38.0] 
        Decl: light= @ [justTypes.diderot:37.1-38.0] 
          BinOp: • @ [justTypes.diderot:37.14-63] 
            Apply @ [justTypes.diderot:37.14-41] 
              Var: transpose @ [justTypes.diderot:37.14-23] 
              [
                Cons @ [justTypes.diderot:37.24-40] 
                  [
                    Var: camU @ [justTypes.diderot:37.25-29] 
                    Var: camV @ [justTypes.diderot:37.30-34] 
                    Var: camN @ [justTypes.diderot:37.35-39] 
                  ]
              ]
            Apply @ [justTypes.diderot:37.44-63] 
              Var: normalize @ [justTypes.diderot:37.44-53] 
              [
                Var: lightVsp @ [justTypes.diderot:37.54-62] 
              ]
    ]
    Strand: raycast @ [justTypes.diderot:39.1-94.1] 
      [
        Param: ui @ [justTypes.diderot:39.17-23] 
          Int @ [justTypes.diderot:39.17-21] 
        Param: vi @ [justTypes.diderot:39.25-31] 
          Int @ [justTypes.diderot:39.25-29] 
      ]
      [
        VarDcl @ [justTypes.diderot:40.3-41.0] 
        VarDcl @ [justTypes.diderot:41.3-42.0] 
        VarDcl @ [justTypes.diderot:42.3-43.0] 
        VarDcl @ [justTypes.diderot:43.3-44.0] 
        VarDcl @ [justTypes.diderot:44.3-45.0] 
        VarDcl @ [justTypes.diderot:45.3-46.0] 
        VarDcl: output @ [justTypes.diderot:46.3-47.0] 
        VarDcl: output @ [justTypes.diderot:47.3-48.0] 
      ]
      [
        Method: Update @ [justTypes.diderot:49.3-86.3] 
          Block @ [justTypes.diderot:49.10-86.0] 
            [
              IfThen @ [justTypes.diderot:50.8-55.8] 
                Var: debug @ [justTypes.diderot:50.12-17] 
                IfThen @ [justTypes.diderot:51.2-54.8] 
                  OrElse @ [justTypes.diderot:51.6-26] 
                    BinOp: != @ [justTypes.diderot:51.6-15] 
                      Var: ui @ [justTypes.diderot:51.6-8] 
                      Var: su @ [justTypes.diderot:51.12-14] 
                    BinOp: != @ [justTypes.diderot:51.18-26] 
                      Var: vi @ [justTypes.diderot:51.18-20] 
                      Var: sv @ [justTypes.diderot:51.24-26] 
                  Stabilize @ [justTypes.diderot:52.4-53.0] 
              Decl @ [justTypes.diderot:49.10-86.0] 
                Decl: x= @ [justTypes.diderot:55.8-56.0] 
                  BinOp: + @ [justTypes.diderot:55.17-37] 
                    Var: camEye @ [justTypes.diderot:55.17-23] 
                    BinOp: * @ [justTypes.diderot:55.26-37] 
                      Var: rayN @ [justTypes.diderot:55.26-30] 
                      Var: rayVec @ [justTypes.diderot:55.31-37] 
              IfThen @ [justTypes.diderot:57.8-79.5] 
                AndAlso @ [justTypes.diderot:57.12-92] 
                  BinOp: < @ [justTypes.diderot:57.12-23] 
                    Lit: 0.e0 @ [justTypes.diderot:57.12-15] 
                    Subscript @ [justTypes.diderot:57.18-22] 
                      Var: x @ [justTypes.diderot:57.18-19] 
                      [
                        Lit: 0 @ [justTypes.diderot:57.20-21] 
                      ]
                  AndAlso @ [justTypes.diderot:57.23-92] 
                    BinOp: < @ [justTypes.diderot:57.26-37] 
                      Subscript @ [justTypes.diderot:57.26-30] 
                        Var: x @ [justTypes.diderot:57.26-27] 
                        [
                          Lit: 0 @ [justTypes.diderot:57.28-29] 
                        ]
                      Lit: 0.1e1 @ [justTypes.diderot:57.33-36] 
                    AndAlso @ [justTypes.diderot:57.37-92] 
                      BinOp: < @ [justTypes.diderot:57.40-51] 
                        Lit: 0.e0 @ [justTypes.diderot:57.40-43] 
                        Subscript @ [justTypes.diderot:57.46-50] 
                          Var: x @ [justTypes.diderot:57.46-47] 
                          [
                            Lit: 1 @ [justTypes.diderot:57.48-49] 
                          ]
                      AndAlso @ [justTypes.diderot:57.51-92] 
                        BinOp: < @ [justTypes.diderot:57.54-65] 
                          Subscript @ [justTypes.diderot:57.54-58] 
                            Var: x @ [justTypes.diderot:57.54-55] 
                            [
                              Lit: 1 @ [justTypes.diderot:57.56-57] 
                            ]
                          Lit: 0.1e1 @ [justTypes.diderot:57.61-64] 
                        AndAlso @ [justTypes.diderot:57.65-92] 
                          BinOp: < @ [justTypes.diderot:57.68-79] 
                            Lit: 0.e0 @ [justTypes.diderot:57.68-71] 
                            Subscript @ [justTypes.diderot:57.74-78] 
                              Var: x @ [justTypes.diderot:57.74-75] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.76-77] 
                              ]
                          BinOp: < @ [justTypes.diderot:57.82-92] 
                            Subscript @ [justTypes.diderot:57.82-86] 
                              Var: x @ [justTypes.diderot:57.82-83] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.84-85] 
                              ]
                            Lit: 0.1e1 @ [justTypes.diderot:57.89-92] 
                Block @ [justTypes.diderot:58.3-78.0] 
                  [
                    Decl @ [justTypes.diderot:58.3-78.0] 
                      Decl: p= @ [justTypes.diderot:59.5-60.0] 
                        Apply @ [justTypes.diderot:59.23-35] 
                          Select @ [justTypes.diderot:59.23-35] 
                            Var: a @ [justTypes.diderot:59.23-24] 
                            findPos
                          [
                            Var: x @ [justTypes.diderot:59.33-34] 
                          ]
                    IfThenElse @ [justTypes.diderot:60.5-77.0] 
                      Apply @ [justTypes.diderot:60.9-20] 
                        Select @ [justTypes.diderot:60.9-20] 
                          Var: p @ [justTypes.diderot:60.9-10] 
                          isValid
                        [ ]
                      Block @ [justTypes.diderot:60.22-73.0] 
                        [
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: val= @ [justTypes.diderot:61.7-62.0] 
                              Apply @ [justTypes.diderot:61.18-22] 
                                Var: F @ [justTypes.diderot:61.18-19] 
                                [
                                  Var: x @ [justTypes.diderot:61.20-21] 
                                ]
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: grad= @ [justTypes.diderot:62.7-63.0] 
                              UnaryOp: unary - @ [justTypes.diderot:62.19-27] 
                                Apply @ [justTypes.diderot:62.20-27] 
                                  UnaryOp: ∇ @ [justTypes.diderot:62.20-24] 
                                    Var: F @ [justTypes.diderot:62.23-24] 
                                  [
                                    Var: x @ [justTypes.diderot:62.25-26] 
                                  ]
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: a= @ [justTypes.diderot:63.7-64.0] 
                              BinOp: * @ [justTypes.diderot:63.16-42] 
                                Apply @ [justTypes.diderot:63.16-34] 
                                  Var: alpha @ [justTypes.diderot:63.16-21] 
                                  [
                                    Var: val @ [justTypes.diderot:63.22-25] 
                                    UnaryOp: |()| @ [justTypes.diderot:63.27-33] 
                                      Var: grad @ [justTypes.diderot:63.28-32] 
                                  ]
                                Apply @ [justTypes.diderot:63.35-42] 
                                  Var: mask @ [justTypes.diderot:63.35-39] 
                                  [
                                    Var: x @ [justTypes.diderot:63.40-41] 
                                  ]
                          IfThen @ [justTypes.diderot:64.7-72.5] 
                            BinOp: > @ [justTypes.diderot:64.11-16] 
                              Var: a @ [justTypes.diderot:64.11-12] 
                              Lit: 0 @ [justTypes.diderot:64.15-16] 
                            Block @ [justTypes.diderot:64.18-71.0] 
                              [
                                Assign: a= @ [justTypes.diderot:65.9-66.0] 
                                  BinOp: - @ [justTypes.diderot:65.13-51] 
                                    Lit: 1 @ [justTypes.diderot:65.13-14] 
                                    Apply @ [justTypes.diderot:65.17-51] 
                                      Var: pow @ [justTypes.diderot:65.17-20] 
                                      [
                                        BinOp: - @ [justTypes.diderot:65.21-24] 
                                          Lit: 1 @ [justTypes.diderot:65.21-22] 
                                          Var: a @ [justTypes.diderot:65.23-24] 
                                        BinOp: / @ [justTypes.diderot:65.26-50] 
                                          BinOp: * @ [justTypes.diderot:65.26-42] 
                                            Var: rayStep @ [justTypes.diderot:65.26-33] 
                                            UnaryOp: |()| @ [justTypes.diderot:65.34-42] 
                                              Var: rayVec @ [justTypes.diderot:65.35-41] 
                                          Var: refStep @ [justTypes.diderot:65.43-50] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: depth= @ [justTypes.diderot:66.9-67.0] 
                                    Apply @ [justTypes.diderot:66.22-59] 
                                      Var: lerp @ [justTypes.diderot:66.22-26] 
                                      [
                                        Lit: 0.11e1 @ [justTypes.diderot:66.27-30] 
                                        Lit: 0.7e0 @ [justTypes.diderot:66.32-35] 
                                        Var: camNear @ [justTypes.diderot:66.37-44] 
                                        Var: rayN @ [justTypes.diderot:66.46-50] 
                                        Var: camFar @ [justTypes.diderot:66.52-58] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: shade= @ [justTypes.diderot:67.9-68.0] 
                                    Apply @ [justTypes.diderot:67.22-53] 
                                      Var: max @ [justTypes.diderot:67.22-25] 
                                      [
                                        Lit: 0 @ [justTypes.diderot:67.26-27] 
                                        BinOp: • @ [justTypes.diderot:67.29-52] 
                                          Apply @ [justTypes.diderot:67.29-44] 
                                            Var: normalize @ [justTypes.diderot:67.29-38] 
                                            [
                                              Var: grad @ [justTypes.diderot:67.39-43] 
                                            ]
                                          Var: light @ [justTypes.diderot:67.47-52] 
                                      ]
                                Assign: rgb+= @ [justTypes.diderot:68.9-69.0] 
                                  BinOp: * @ [justTypes.diderot:68.16-65] 
                                    BinOp: * @ [justTypes.diderot:68.16-56] 
                                      BinOp: * @ [justTypes.diderot:68.16-30] 
                                        BinOp: * @ [justTypes.diderot:68.16-24] 
                                          Var: transp @ [justTypes.diderot:68.16-22] 
                                          Var: a @ [justTypes.diderot:68.23-24] 
                                        Var: depth @ [justTypes.diderot:68.25-30] 
                                      BinOp: + @ [justTypes.diderot:68.32-55] 
                                        Var: phongKa @ [justTypes.diderot:68.32-39] 
                                        BinOp: * @ [justTypes.diderot:68.42-55] 
                                          Var: phongKd @ [justTypes.diderot:68.42-49] 
                                          Var: shade @ [justTypes.diderot:68.50-55] 
                                    Apply @ [justTypes.diderot:68.57-65] 
                                      Var: color @ [justTypes.diderot:68.57-62] 
                                      [
                                        Var: x @ [justTypes.diderot:68.63-64] 
                                      ]
                                Assign: transp*= @ [justTypes.diderot:69.9-70.0] 
                                  BinOp: - @ [justTypes.diderot:69.19-24] 
                                    Lit: 1 @ [justTypes.diderot:69.19-20] 
                                    Var: a @ [justTypes.diderot:69.23-24] 
                              ]
                        ]
                      Block @ [justTypes.diderot:73.10-77.0] 
                        [
                          Print @ [justTypes.diderot:74.7-75.0] 
                            [
                              Var: x @ [justTypes.diderot:74.13-14] 
                              Lit: "\n" @ [justTypes.diderot:74.16-20] 
                            ]
                          Print @ [justTypes.diderot:75.7-76.0] 
                            [
                              Lit: "wait what\?\n" @ [justTypes.diderot:75.13-27] 
                            ]
                        ]
                  ]
              IfThen @ [justTypes.diderot:79.5-83.5] 
                BinOp: < @ [justTypes.diderot:79.9-22] 
                  Var: transp @ [justTypes.diderot:79.9-15] 
                  Lit: 0.1e-1 @ [justTypes.diderot:79.18-22] 
                Block @ [justTypes.diderot:79.24-83.0] 
                  [
                    Assign: transp= @ [justTypes.diderot:80.7-81.0] 
                      Lit: 0 @ [justTypes.diderot:80.16-17] 
                    Stabilize @ [justTypes.diderot:81.7-82.0] 
                  ]
              IfThen @ [justTypes.diderot:83.5-84.5] 
                BinOp: > @ [justTypes.diderot:83.9-22] 
                  Var: rayN @ [justTypes.diderot:83.9-13] 
                  Var: camFar @ [justTypes.diderot:83.16-22] 
                Stabilize @ [justTypes.diderot:83.24-84.0] 
              Assign: rayN= @ [justTypes.diderot:84.5-85.0] 
                BinOp: + @ [justTypes.diderot:84.12-26] 
                  Var: rayN @ [justTypes.diderot:84.12-16] 
                  Var: rayStep @ [justTypes.diderot:84.19-26] 
            ]
        Method: Stabilize @ [justTypes.diderot:86.3-93.1] 
          Block @ [justTypes.diderot:86.13-93.0] 
            [
              Decl @ [justTypes.diderot:86.13-93.0] 
                Decl: a= @ [justTypes.diderot:87.5-25] 
                  BinOp: - @ [justTypes.diderot:87.14-24] 
                    Lit: 1 @ [justTypes.diderot:87.14-15] 
                    Var: transp @ [justTypes.diderot:87.18-24] 
              IfThen @ [justTypes.diderot:88.5-89.5] 
                BinOp: > @ [justTypes.diderot:88.9-14] 
                  Var: a @ [justTypes.diderot:88.9-10] 
                  Lit: 0 @ [justTypes.diderot:88.13-14] 
                Assign: rgba= @ [justTypes.diderot:88.16-89.0] 
                  Cons @ [justTypes.diderot:88.23-56] 
                    [
                      BinOp: / @ [justTypes.diderot:88.24-32] 
                        Subscript @ [justTypes.diderot:88.24-30] 
                          Var: rgb @ [justTypes.diderot:88.24-27] 
                          [
                            Lit: 0 @ [justTypes.diderot:88.28-29] 
                          ]
                        Var: a @ [justTypes.diderot:88.31-32] 
                      BinOp: / @ [justTypes.diderot:88.34-42] 
                        Subscript @ [justTypes.diderot:88.34-40] 
                          Var: rgb @ [justTypes.diderot:88.34-37] 
                          [
                            Lit: 1 @ [justTypes.diderot:88.38-39] 
                          ]
                        Var: a @ [justTypes.diderot:88.41-42] 
                      BinOp: / @ [justTypes.diderot:88.44-52] 
                        Subscript @ [justTypes.diderot:88.44-50] 
                          Var: rgb @ [justTypes.diderot:88.44-47] 
                          [
                            Lit: 2 @ [justTypes.diderot:88.48-49] 
                          ]
                        Var: a @ [justTypes.diderot:88.51-52] 
                      Var: a @ [justTypes.diderot:88.54-55] 
                    ]
              IfThen @ [justTypes.diderot:89.5-92.3] 
                AndAlso @ [justTypes.diderot:89.9-38] 
                  BinOp: == @ [justTypes.diderot:89.9-18] 
                    Var: ui @ [justTypes.diderot:89.9-11] 
                    Var: su @ [justTypes.diderot:89.15-17] 
                  AndAlso @ [justTypes.diderot:89.18-38] 
                    BinOp: == @ [justTypes.diderot:89.21-30] 
                      Var: vi @ [justTypes.diderot:89.21-23] 
                      Var: sv @ [justTypes.diderot:89.27-29] 
                    Var: debug @ [justTypes.diderot:89.33-38] 
                Print @ [justTypes.diderot:90.7-91.0] 
                  [
                    Var: a @ [justTypes.diderot:90.13-14] 
                    Var: rgba @ [justTypes.diderot:90.16-20] 
                  ]
            ]
      ]
    Grid @ [justTypes.diderot:94.1-95.0] 
      Comprehension @ [justTypes.diderot:94.14-68] 
        Apply @ [justTypes.diderot:94.15-30] 
          Var: raycast @ [justTypes.diderot:94.15-22] 
          [
            Var: ui @ [justTypes.diderot:94.23-25] 
            Var: vi @ [justTypes.diderot:94.27-29] 
          ]
        [
          Iterator: vi @ [justTypes.diderot:94.33-49] 
            Range @ [justTypes.diderot:94.39-49] 
              Lit: 0 @ [justTypes.diderot:94.39-40] 
              BinOp: - @ [justTypes.diderot:94.42-49] 
                Var: iresV @ [justTypes.diderot:94.42-47] 
                Lit: 1 @ [justTypes.diderot:94.48-49] 
          Iterator: ui @ [justTypes.diderot:94.51-67] 
            Range @ [justTypes.diderot:94.57-67] 
              Lit: 0 @ [justTypes.diderot:94.57-58] 
              BinOp: - @ [justTypes.diderot:94.60-67] 
                Var: iresU @ [justTypes.diderot:94.60-65] 
                Lit: 1 @ [justTypes.diderot:94.66-67] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input FemType: Space with type var:msh b = loadFem(Space);
input FemType: FemFunc with type var:fns c = loadFem(FemFunc);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [0.3e1, -0.3e1, 0.3e1];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 500;
input int iresV = 500;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int su = 250;
input int sv = 250;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec3, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    cellInt = cellItter;
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 2)) {
      delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
      xn = -<$[3]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[2], -0.e0)))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
          }
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] msh_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] msh_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 msh_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 msh_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec3 (pos, msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3 (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]])):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
    }
  }
function int[2] $nextCell2 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  nearbyCells = extractFemItem(mesh, cell : int, int[], CellConnectivity(Mesh));
  numFacetNodes = length<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))});
  if == (3, numFacetNodes)
    foreach (int cellInt in nearbyCells) {
      if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 0};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 1};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 2};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 3};
        }
    return {-1, -1};
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
      face = 0;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      face = 1;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 3;
      }
    if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)))) {
    time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
    face = 0;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
    face = 1;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
    face = 2;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
    face = 3;
    }
  if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function FemType: Mesh with type var:msh domain (FemType: Space with type var:msh arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:msh space (FemType: FemFunc with type var:fns arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:FUNC funcCell (FemType: FemFunc with type var:fns arg0, FemType: MeshCell with type var:msh arg1)
{
  return loadFem(FuncCell);
  }
field(3)[] V = ∘<#; %3; $[]; %3; $[3]> (femField(c,extractFem(Mesh,extractFem(Space,c ) ),field(3)[], refField, findPos), femField(extractFem(Mesh,extractFem(Space,c ) ),extractFem(Mesh,extractFem(Space,c ) ),field(3)[3], InvTransform, findPos));
field#4(3)[] F = (field#4(3)[])(-<#; %3; $[]> (V, isoval));
function real mask (vec3 x)
{
  return 0.1e1;
  }
image(1)[3] I = loadImage<%1; $[3]> ("cmap.nrrd");
field#0(1)[3] cmap = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (I));
function vec3 color (vec3 x)
{
  return @<#0; %1; $[3]> (cmap, @<#; %3; $[]> (V, x));
  }
function real alpha (real v, real g)
{
  return clamp<$[]> ((real)0, (real)1, * (0.13e1, -<$[]> ((real)1, / (|()|<$[]> (v), * (g, thick)))));
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
strand raycast (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (camVmax, unary -<$[]> (camVmax), unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNear;
  vec3 rayVec = +<$[3]> (camN, /<$[3]> (+<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV)), camDist));
  real transp = 0.1e1;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real gray = 0.e0;
  update {
    if debug
      if (!= (ui, su) || != (vi, sv))
        stabilize;
        vec3 x = +<$[3]> (camEye, *<$[3]> (rayN, rayVec));
    if (< (0.e0, x[0]) && (< (x[0], 0.1e1) && (< (0.e0, x[1]) && (< (x[1], 0.1e1) && (< (0.e0, x[2]) && < (x[2], 0.1e1)))))) {
      FemType: MeshPos with type var:msh p = findPos (a, x);
      if extractFemItem(p, bool, Valid(MeshPos)) {
        real val = @<#4; %3; $[]> (F, x);
        vec3 grad = unary -<$[3]> (@<#3; %3; $[3]> (∇<#4; %3> (F), x));
        real a = * (alpha (val, |()|<$[3]> (grad)), mask (x));
        if > (a, (real)0) {
          a = -<$[]> ((real)1, pow (-<$[]> ((real)1, a), / (* (rayStep, |()|<$[3]> (rayVec)), refStep)));
          real depth = lerp<$[]> (0.11e1, 0.7e0, camNear, rayN, camFar);
          real shade = max ((real)0, •<$[3]; $[3]; $[]> (normalize<$[3]> (grad), light));
          rgb = +<$[3]> (rgb, *<$[3]> (* (* (* (transp, a), depth), +<$[]> (phongKa, * (phongKd, shade))), color (x)));
          transp = * (transp, -<$[]> ((real)1, a));
          }
        }
      else {
        print (x, "\n");
        print ("wait what\?\n");
        }
      }
    if < (transp, 0.1e-1) {
      transp = 0.e0;
      stabilize;
      }
    if > (rayN, camFar)
      stabilize;
      rayN = +<$[]> (rayN, rayStep);
    }
  stabilize {
    real a = -<$[]> ((real)1, transp);
    if > (a, (real)0)
      rgba = [/ (rgb[0], a), / (rgb[1], a), / (rgb[2], a), a];
      if (== (ui, su) && (== (vi, sv) && debug))
      print (a, rgba);
      }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new raycast (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: MeshCell[] 0cell_a0430;
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function Femdata: RefCell#0 refcell04B2 (Femdata: Mesh arg004B3)
{
  Femdata: RefCell _t04B4 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004B3);
  return _t04B4;
}
function Femdata: MeshCell[]#0 cells04B5 (Femdata: Mesh arg004B6)
{
  Femdata: MeshCell[] _t04B7 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004B6);
  return _t04B7;
}
function Femdata: MeshCell[]#0 cells04B8 (Femdata: Mesh arg004B6)
{
  int _t04B9 = 0;
  int _t04BA = extractFemItem(NumCell(Mesh), int, arg004B6);
  int[] _t04BB = prim $range01C3 (_t04B9, _t04BA);
  Femdata: MeshCell[] accum04BE = {};
  foreach i04BC in _t04BB {
    Femdata: MeshCell _t04BD = loadFem(MeshCell, arg004B6, i04BC);
    accum04BE = prim @0010<Femdata: MeshCell> (accum04BE, _t04BD);
  }
  return accum04BE;
}
function int#0 numCell04BF (Femdata: Mesh arg004B3)
{
  int _t04C0 = extractFemItem(NumCell(Mesh), int, arg004B3);
  return _t04C0;
}
function tensor[3,3,3,3]#0 msh_transform_304C1 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04C5 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04C6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C5);
  field(3)[3,3,3] _t04C7 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04C6);
  field(3)[3,3,3,3] _t04C8 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04C7);
  tensor[3,3,3,3] _t04C9 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04C8, pos04C2);
  return _t04C9;
}
function tensor[3,3,3]#0 msh_transform_204CA (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04CB = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04CC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04CB);
  field(3)[3,3,3] _t04CD = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04CC);
  tensor[3,3,3] _t04CE = prim @00A5<#∞; %3; $[3,3,3]> (_t04CD, pos04C2);
  return _t04CE;
}
function tensor[3,3]#0 msh_transform_104CF (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D0 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04D1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D0);
  tensor[3,3] _t04D2 = prim @00A5<#∞; %3; $[3,3]> (_t04D1, pos04C2);
  return _t04D2;
}
function vec3#2 msh_transform_004D3 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D4 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  vec3 _t04D5 = prim @00A5<#∞; %3; $[3]> (_t04D4, pos04C2);
  return _t04D5;
}
function Femdata: MeshPos#0 _msh_newtonInverse04D6 (vec3 pos04D7, int cellInt04D8, Femdata: Mesh mesh04D9)
{
  real _t04DA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04DD = [_t04DA, _t04DB, _t04DC];
  field(3)[3] _t04DE = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
  field(3)[3,3] _t04DF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04DE);
  field(3)[3,3] _t04E0 = prim inv015E<#∞; %3> (_t04DF);
  real _t04E1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04E4 = [_t04E1, _t04E2, _t04E3];
  A04E5 = prim @00A5<#∞; %3; $[3,3]> (_t04E0, _t04E4);
  int _t04E6 = 0;
  int _t04E7 = 2;
  int[] _t04E8 = prim $range01C3 (_t04E6, _t04E7);
  foreach itter0518 in _t04E8 {
    field(3)[3] _t04E9 = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
    field(3)[3] _t04EA = prim -002E<#∞; %3; $[3]> (_t04E9, pos04D7);
    field(3)[3] _t04EB = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04E5, _t04EA);
    delta04EC = prim @00A5<#∞; %3; $[3]> (_t04EB, xn04DD);
    xn04DD = prim -0026<$[3]> (xn04DD, delta04EC);
    real _t04ED = 0.1e-7;
    real _t04EE = 0.1e-7;
    real _t04EF = prim *0034 (_t04ED, _t04EE);
    real _t04F0 = prim •00CE<$[3]; $[3]; $[]> (delta04EC, delta04EC);
    bool _t04F1 = prim >=007E (_t04EF, _t04F0);
    if _t04F1 {
      real _t04F2 = 0.1e1;
      real _t04F3 = 0.1e-4;
      real _t04F4 = prim +0017<$[]> (_t04F2, _t04F3);
      real _t04F5 = 0.1e1;
      real _t04F6 = 0.1e1;
      real _t04F7 = 0.1e1;
      vec3 _t04F8 = [_t04F5, _t04F6, _t04F7];
      real _t04F9 = prim •00CE<$[3]; $[3]; $[]> (_t04F8, xn04DD);
      bool _t04FA = prim >0080 (_t04F4, _t04F9);
      real _t04FB = 0.1e-4;
      real _t04FC = 0.1e-4;
      real _t04FD = 0.1e-4;
      vec3 _t04FE = [_t04FB, _t04FC, _t04FD];
      vec3 _t04FF = prim +0017<$[3]> (_t04FE, xn04DD);
      real _t0500 = _t04FF[0];
      real _t0501 = -0.e0;
      bool _t0502 = prim >0080 (_t0500, _t0501);
      real _t0503 = 0.1e-4;
      real _t0504 = 0.1e-4;
      real _t0505 = 0.1e-4;
      vec3 _t0506 = [_t0503, _t0504, _t0505];
      vec3 _t0507 = prim +0017<$[3]> (_t0506, xn04DD);
      real _t0508 = _t0507[1];
      real _t0509 = -0.e0;
      bool _t050A = prim >0080 (_t0508, _t0509);
      real _t050B = 0.1e-4;
      real _t050C = 0.1e-4;
      real _t050D = 0.1e-4;
      vec3 _t050E = [_t050B, _t050C, _t050D];
      vec3 _t050F = prim +0017<$[3]> (_t050E, xn04DD);
      real _t0510 = _t050F[2];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      bool _t0513 = prim $and01C4 (_t050A, _t0512);
      bool _t0514 = prim $and01C4 (_t0502, _t0513);
      bool _t0515 = prim $and01C4 (_t04FA, _t0514);
      if _t0515 {
        Femdata: MeshPos _t0516 = extractFemItemN((mesh04D9, cellInt04D8, xn04DD, pos04D7),AllBuild(MeshPos),);
        return _t0516;
      } else {
        Femdata: MeshPos _t0517 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
        return _t0517;
      }
    }
  }
  Femdata: MeshPos _t0519 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
  return _t0519;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos051A (Femdata: MeshPos pos051B)
{
  bool _t051C = extractFemItem(WorldTest(MeshPos), bool, pos051B);
  if _t051C {
    vec3 _t051D = extractFemItem(RefPos(MeshPos), vec3, pos051B);
    int _t051E = extractFemItem(CellIndex(MeshPos), int, pos051B);
    Femdata: Mesh _t051F = extractFem(pos051B, Mesh);
    vec3 _t0520 = func msh_transform_004D3 (_t051D, _t051E, _t051F);
    Femdata: MeshPos _t0521 = extractFemItemN((pos051B, _t0520),NewWorld(MeshPos),);
    return _t0521;
  } else {
    return pos051B;
  }
}
function vec3#0 worldPos0522 (Femdata: MeshPos pos051B)
{
  vec3 _t0523 = extractFemItem(RefPos(MeshPos), vec3, pos051B);
  int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos051B);
  Femdata: Mesh _t0525 = extractFem(pos051B, Mesh);
  vec3 _t0526 = func msh_transform_004D3 (_t0523, _t0524, _t0525);
  return _t0526;
}
function Femdata: MeshPos#0 $exitPos0527 (Femdata: Mesh mesh0528, int cellId0529, vec3 refPos052A, vec3 dPos052B, real[2] time052C)
{
  int _t052D = -1;
  real _t052E = time052C[1];
  int _t052F = prim $r2i01B7 (_t052E);
  int[2] _t0531 = func nextCell40530 (_t052F, cellId0529, mesh0528);
  int _t0532 = 0;
  int _t0533 = prim $sub01C0<int; %2> (_t0531, _t0532);
  bool _t0534 = prim !=0086 (_t052D, _t0533);
  if _t0534 {
    real _t0535 = time052C[1];
    int _t0536 = prim $r2i01B7 (_t0535);
    int[2] _t0537 = func nextCell40530 (_t0536, cellId0529, mesh0528);
    int _t0538 = 0;
    int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
    real _t053A = 0.1e1;
    real _t053B = 0.e0;
    real _t053C = 0.e0;
    real _t053D = 0.e0;
    vec4 _t053E = [_t053A, _t053B, _t053C, _t053D];
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    real _t0542 = 0.e0;
    vec4 _t0543 = [_t053F, _t0540, _t0541, _t0542];
    real _t0544 = 0.e0;
    real _t0545 = 0.e0;
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.222044604925e-15;
    real _t054A = 0.e0;
    real _t054B = 0.44408920985e-15;
    real _t054C = 0.1e1;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    tensor[4,4] _t054E = [_t053E, _t0543, _t0548, _t054D];
    real _t054F = 0.173205080757e1;
    real _t0550 = 0.173205080757e1;
    real _t0551 = 0.173205080757e1;
    real _t0552 = -0.173205080757e1;
    vec4 _t0553 = [_t054F, _t0550, _t0551, _t0552];
    real _t0554 = 0.1e1;
    real _t0555 = 0.2e1;
    real _t0556 = 0.1e1;
    real _t0557 = -0.1e1;
    vec4 _t0558 = [_t0554, _t0555, _t0556, _t0557];
    real _t0559 = -0.1e1;
    real _t055A = -0.1e1;
    real _t055B = -0.192296268638e-15;
    real _t055C = 0.1e1;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.222044604925e-15;
    real _t055F = 0.e0;
    real _t0560 = 0.44408920985e-15;
    real _t0561 = 0.1e1;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    tensor[4,4] _t0563 = [_t0553, _t0558, _t055D, _t0562];
    real _t0564 = 0.1e1;
    real _t0565 = 0.2e1;
    real _t0566 = 0.1e1;
    real _t0567 = -0.1e1;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.173205080757e1;
    real _t056A = 0.173205080757e1;
    real _t056B = 0.173205080757e1;
    real _t056C = -0.173205080757e1;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = -0.1e1;
    real _t056F = -0.1e1;
    real _t0570 = -0.192296268638e-15;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.222044604925e-15;
    real _t0574 = 0.e0;
    real _t0575 = 0.44408920985e-15;
    real _t0576 = 0.1e1;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    tensor[4,4] _t0578 = [_t0568, _t056D, _t0572, _t0577];
    real _t0579 = 0.1e1;
    real _t057A = 0.2e1;
    real _t057B = 0.1e1;
    real _t057C = -0.1e1;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.1e1;
    real _t057F = -0.1e1;
    real _t0580 = -0.192296268638e-15;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.173205080757e1;
    real _t0584 = 0.173205080757e1;
    real _t0585 = 0.173205080757e1;
    real _t0586 = -0.173205080757e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.222044604925e-15;
    real _t0589 = 0.e0;
    real _t058A = 0.44408920985e-15;
    real _t058B = 0.1e1;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    tensor[4,4] _t058D = [_t057D, _t0582, _t0587, _t058C];
    tensor[4,4][4] _t058E = {_t054E, _t0563, _t0578, _t058D};
    real _t058F = 0.57735026919e0;
    real _t0590 = -0.1e1;
    real _t0591 = -0.1e1;
    real _t0592 = 0.1e1;
    vec4 _t0593 = [_t058F, _t0590, _t0591, _t0592];
    real _t0594 = -0.57735026919e0;
    real _t0595 = 0.1e1;
    real _t0596 = 0.e0;
    real _t0597 = 0.e0;
    vec4 _t0598 = [_t0594, _t0595, _t0596, _t0597];
    real _t0599 = 0.57735026919e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    real _t059C = 0.e0;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.e0;
    real _t059F = 0.e0;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.1e1;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    tensor[4,4] _t05A3 = [_t0593, _t0598, _t059D, _t05A2];
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.e0;
    real _t05A6 = 0.e0;
    real _t05A7 = 0.e0;
    vec4 _t05A8 = [_t05A4, _t05A5, _t05A6, _t05A7];
    real _t05A9 = 0.e0;
    real _t05AA = 0.1e1;
    real _t05AB = 0.e0;
    real _t05AC = 0.e0;
    vec4 _t05AD = [_t05A9, _t05AA, _t05AB, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.e0;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.1e1;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    tensor[4,4] _t05B8 = [_t05A8, _t05AD, _t05B2, _t05B7];
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.1e1;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    tensor[4,4] _t05CD = [_t05BD, _t05C2, _t05C7, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.e0;
    real _t05DF = 0.e0;
    real _t05E0 = 0.1e1;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    tensor[4,4] _t05E2 = [_t05D2, _t05D7, _t05DC, _t05E1];
    tensor[4,4][4] _t05E3 = {_t05A3, _t05B8, _t05CD, _t05E2};
    real _t05E4 = -0.1e1;
    real _t05E5 = 0.57735026919e0;
    real _t05E6 = -0.1e1;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    real _t05E9 = 0.1e1;
    real _t05EA = -0.57735026919e0;
    real _t05EB = 0.e0;
    real _t05EC = 0.e0;
    vec4 _t05ED = [_t05E9, _t05EA, _t05EB, _t05EC];
    real _t05EE = 0.e0;
    real _t05EF = 0.57735026919e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    vec4 _t05F2 = [_t05EE, _t05EF, _t05F0, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.1e1;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    tensor[4,4] _t05F8 = [_t05E8, _t05ED, _t05F2, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    real _t05FC = 0.e0;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.1e1;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    tensor[4,4] _t060D = [_t05FD, _t0602, _t0607, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = 0.1e1;
    real _t0615 = 0.e0;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.1e1;
    real _t061B = 0.e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = 0.e0;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    tensor[4,4] _t0622 = [_t0612, _t0617, _t061C, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.1e1;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    tensor[4,4] _t0637 = [_t0627, _t062C, _t0631, _t0636];
    tensor[4,4][4] _t0638 = {_t05F8, _t060D, _t0622, _t0637};
    real _t0639 = -0.1e1;
    real _t063A = -0.1e1;
    real _t063B = 0.57735026919e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = 0.e0;
    real _t0640 = -0.57735026919e0;
    real _t0641 = 0.e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    real _t0645 = 0.57735026919e0;
    real _t0646 = 0.e0;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    tensor[4,4] _t064D = [_t063D, _t0642, _t0647, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    real _t0656 = 0.e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    tensor[4,4] _t0662 = [_t0652, _t0657, _t065C, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.1e1;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    tensor[4,4] _t0677 = [_t0667, _t066C, _t0671, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    tensor[4,4] _t068C = [_t067C, _t0681, _t0686, _t068B];
    tensor[4,4][4] _t068D = {_t064D, _t0662, _t0677, _t068C};
    tensor[4,4][4][4] _t068E = {_t058E, _t05E3, _t0638, _t068D};
    real _t068F = time052C[1];
    int _t0690 = prim $r2i01B7 (_t068F);
    tensor[4,4][4] _t0691 = prim $sub01C0<tensor[4,4][4]; %4> (_t068E, _t0690);
    real _t0692 = time052C[1];
    int _t0693 = prim $r2i01B7 (_t0692);
    int[2] _t0694 = func nextCell40530 (_t0693, cellId0529, mesh0528);
    int _t0695 = 1;
    int _t0696 = prim $sub01C0<int; %2> (_t0694, _t0695);
    tensor[4,4] _t0697 = prim $sub01C0<tensor[4,4]; %4> (_t0691, _t0696);
    real _t0698 = time052C[0];
    vec3 _t0699 = prim *0036<$[3]> (_t0698, dPos052B);
    vec3 _t069A = prim +0017<$[3]> (_t0699, refPos052A);
    real _t069B = _t069A[0];
    real _t069C = time052C[0];
    vec3 _t069D = prim *0036<$[3]> (_t069C, dPos052B);
    vec3 _t069E = prim +0017<$[3]> (_t069D, refPos052A);
    real _t069F = _t069E[1];
    real _t06A0 = time052C[0];
    vec3 _t06A1 = prim *0036<$[3]> (_t06A0, dPos052B);
    vec3 _t06A2 = prim +0017<$[3]> (_t06A1, refPos052A);
    real _t06A3 = _t06A2[2];
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t069B, _t069F, _t06A3, _t06A4];
    vec4 _t06A6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0697, _t06A5);
    real _t06A7 = _t06A6[0];
    real _t06A8 = 0.1e1;
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.222044604925e-15;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.44408920985e-15;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.173205080757e1;
    real _t06BE = 0.173205080757e1;
    real _t06BF = 0.173205080757e1;
    real _t06C0 = -0.173205080757e1;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.2e1;
    real _t06C4 = 0.1e1;
    real _t06C5 = -0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = -0.1e1;
    real _t06C8 = -0.1e1;
    real _t06C9 = -0.192296268638e-15;
    real _t06CA = 0.1e1;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.222044604925e-15;
    real _t06CD = 0.e0;
    real _t06CE = 0.44408920985e-15;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.2e1;
    real _t06D4 = 0.1e1;
    real _t06D5 = -0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.173205080757e1;
    real _t06D8 = 0.173205080757e1;
    real _t06D9 = 0.173205080757e1;
    real _t06DA = -0.173205080757e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    real _t06DE = -0.192296268638e-15;
    real _t06DF = 0.1e1;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.222044604925e-15;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.44408920985e-15;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.2e1;
    real _t06E9 = 0.1e1;
    real _t06EA = -0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = -0.1e1;
    real _t06ED = -0.1e1;
    real _t06EE = -0.192296268638e-15;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.173205080757e1;
    real _t06F2 = 0.173205080757e1;
    real _t06F3 = 0.173205080757e1;
    real _t06F4 = -0.173205080757e1;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.222044604925e-15;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.44408920985e-15;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = 0.57735026919e0;
    real _t06FE = -0.1e1;
    real _t06FF = -0.1e1;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = -0.57735026919e0;
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.57735026919e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    real _t0752 = -0.1e1;
    real _t0753 = 0.57735026919e0;
    real _t0754 = -0.1e1;
    real _t0755 = 0.1e1;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = 0.1e1;
    real _t0758 = -0.57735026919e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = 0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.1e1;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.1e1;
    real _t079D = 0.e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][4] _t07A6 = {_t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = -0.1e1;
    real _t07A9 = 0.57735026919e0;
    real _t07AA = 0.1e1;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = -0.57735026919e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.1e1;
    real _t07B3 = 0.57735026919e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = 0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = 0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    tensor[4,4][4] _t07FB = {_t07BB, _t07D0, _t07E5, _t07FA};
    tensor[4,4][4][4] _t07FC = {_t06FC, _t0751, _t07A6, _t07FB};
    real _t07FD = time052C[1];
    int _t07FE = prim $r2i01B7 (_t07FD);
    tensor[4,4][4] _t07FF = prim $sub01C0<tensor[4,4][4]; %4> (_t07FC, _t07FE);
    real _t0800 = time052C[1];
    int _t0801 = prim $r2i01B7 (_t0800);
    int[2] _t0802 = func nextCell40530 (_t0801, cellId0529, mesh0528);
    int _t0803 = 1;
    int _t0804 = prim $sub01C0<int; %2> (_t0802, _t0803);
    tensor[4,4] _t0805 = prim $sub01C0<tensor[4,4]; %4> (_t07FF, _t0804);
    real _t0806 = time052C[0];
    vec3 _t0807 = prim *0036<$[3]> (_t0806, dPos052B);
    vec3 _t0808 = prim +0017<$[3]> (_t0807, refPos052A);
    real _t0809 = _t0808[0];
    real _t080A = time052C[0];
    vec3 _t080B = prim *0036<$[3]> (_t080A, dPos052B);
    vec3 _t080C = prim +0017<$[3]> (_t080B, refPos052A);
    real _t080D = _t080C[1];
    real _t080E = time052C[0];
    vec3 _t080F = prim *0036<$[3]> (_t080E, dPos052B);
    vec3 _t0810 = prim +0017<$[3]> (_t080F, refPos052A);
    real _t0811 = _t0810[2];
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t0809, _t080D, _t0811, _t0812];
    vec4 _t0814 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0805, _t0813);
    real _t0815 = _t0814[1];
    real _t0816 = 0.1e1;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.222044604925e-15;
    real _t0826 = 0.e0;
    real _t0827 = 0.44408920985e-15;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.173205080757e1;
    real _t082C = 0.173205080757e1;
    real _t082D = 0.173205080757e1;
    real _t082E = -0.173205080757e1;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.2e1;
    real _t0832 = 0.1e1;
    real _t0833 = -0.1e1;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = -0.1e1;
    real _t0837 = -0.192296268638e-15;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.222044604925e-15;
    real _t083B = 0.e0;
    real _t083C = 0.44408920985e-15;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.2e1;
    real _t0842 = 0.1e1;
    real _t0843 = -0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.173205080757e1;
    real _t0846 = 0.173205080757e1;
    real _t0847 = 0.173205080757e1;
    real _t0848 = -0.173205080757e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = -0.1e1;
    real _t084B = -0.1e1;
    real _t084C = -0.192296268638e-15;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.222044604925e-15;
    real _t0850 = 0.e0;
    real _t0851 = 0.44408920985e-15;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.2e1;
    real _t0857 = 0.1e1;
    real _t0858 = -0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = -0.1e1;
    real _t085B = -0.1e1;
    real _t085C = -0.192296268638e-15;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.173205080757e1;
    real _t0860 = 0.173205080757e1;
    real _t0861 = 0.173205080757e1;
    real _t0862 = -0.173205080757e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.222044604925e-15;
    real _t0865 = 0.e0;
    real _t0866 = 0.44408920985e-15;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = 0.57735026919e0;
    real _t086C = -0.1e1;
    real _t086D = -0.1e1;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = -0.57735026919e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.57735026919e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    real _t08C0 = -0.1e1;
    real _t08C1 = 0.57735026919e0;
    real _t08C2 = -0.1e1;
    real _t08C3 = 0.1e1;
    vec4 _t08C4 = [_t08C0, _t08C1, _t08C2, _t08C3];
    real _t08C5 = 0.1e1;
    real _t08C6 = -0.57735026919e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    tensor[4,4] _t08D4 = [_t08C4, _t08C9, _t08CE, _t08D3];
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.e0;
    vec4 _t08D9 = [_t08D5, _t08D6, _t08D7, _t08D8];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.1e1;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.1e1;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    tensor[4,4] _t08E9 = [_t08D9, _t08DE, _t08E3, _t08E8];
    real _t08EA = 0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    tensor[4,4] _t08FE = [_t08EE, _t08F3, _t08F8, _t08FD];
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    tensor[4,4][4] _t0914 = {_t08D4, _t08E9, _t08FE, _t0913};
    real _t0915 = -0.1e1;
    real _t0916 = -0.1e1;
    real _t0917 = 0.57735026919e0;
    real _t0918 = 0.1e1;
    vec4 _t0919 = [_t0915, _t0916, _t0917, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = -0.57735026919e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.57735026919e0;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.1e1;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    tensor[4,4] _t0929 = [_t0919, _t091E, _t0923, _t0928];
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    real _t092D = 0.e0;
    vec4 _t092E = [_t092A, _t092B, _t092C, _t092D];
    real _t092F = 0.1e1;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.1e1;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    tensor[4,4] _t093E = [_t092E, _t0933, _t0938, _t093D];
    real _t093F = 0.1e1;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.1e1;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    tensor[4,4] _t0953 = [_t0943, _t0948, _t094D, _t0952];
    real _t0954 = 0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.e0;
    real _t0960 = 0.1e1;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.e0;
    real _t0966 = 0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    tensor[4,4] _t0968 = [_t0958, _t095D, _t0962, _t0967];
    tensor[4,4][4] _t0969 = {_t0929, _t093E, _t0953, _t0968};
    tensor[4,4][4][4] _t096A = {_t086A, _t08BF, _t0914, _t0969};
    real _t096B = time052C[1];
    int _t096C = prim $r2i01B7 (_t096B);
    tensor[4,4][4] _t096D = prim $sub01C0<tensor[4,4][4]; %4> (_t096A, _t096C);
    real _t096E = time052C[1];
    int _t096F = prim $r2i01B7 (_t096E);
    int[2] _t0970 = func nextCell40530 (_t096F, cellId0529, mesh0528);
    int _t0971 = 1;
    int _t0972 = prim $sub01C0<int; %2> (_t0970, _t0971);
    tensor[4,4] _t0973 = prim $sub01C0<tensor[4,4]; %4> (_t096D, _t0972);
    real _t0974 = time052C[0];
    vec3 _t0975 = prim *0036<$[3]> (_t0974, dPos052B);
    vec3 _t0976 = prim +0017<$[3]> (_t0975, refPos052A);
    real _t0977 = _t0976[0];
    real _t0978 = time052C[0];
    vec3 _t0979 = prim *0036<$[3]> (_t0978, dPos052B);
    vec3 _t097A = prim +0017<$[3]> (_t0979, refPos052A);
    real _t097B = _t097A[1];
    real _t097C = time052C[0];
    vec3 _t097D = prim *0036<$[3]> (_t097C, dPos052B);
    vec3 _t097E = prim +0017<$[3]> (_t097D, refPos052A);
    real _t097F = _t097E[2];
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t0977, _t097B, _t097F, _t0980];
    vec4 _t0982 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0973, _t0981);
    real _t0983 = _t0982[2];
    vec3 _t0984 = [_t06A7, _t0815, _t0983];
    Femdata: MeshPos _t0985 = extractFemItemN((mesh0528, _t0539, _t0984),RefBuild(Mesh),);
    return _t0985;
  } else {
    real _t0986 = time052C[0];
    vec3 _t0987 = prim *0036<$[3]> (_t0986, dPos052B);
    vec3 _t0988 = prim +0017<$[3]> (_t0987, refPos052A);
    Femdata: MeshPos _t0989 = extractFemItemN((mesh0528, _t0988),InvalidBuildBoundary(MeshPos),);
    return _t0989;
  }
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
function int[2]#0 $nextCell20993 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  nearbyCells0994 = extractFemItem2(CellConnectivity(Mesh), int, mesh098C, cell098B : int);
  int _t0995 = 0;
  int _t0996 = 1;
  int _t0997 = 3;
  int[2] _t0998 = {_t0996, _t0997};
  int _t0999 = 3;
  int _t099A = 3;
  int[2] _t099B = {_t0999, _t099A};
  int _t099C = 9;
  int _t099D = 3;
  int[2] _t099E = {_t099C, _t099D};
  int _t099F = 27;
  int _t09A0 = 3;
  int[2] _t09A1 = {_t099F, _t09A0};
  int[2][4] _t09A2 = {_t0998, _t099B, _t099E, _t09A1};
  int[2] _t09A3 = prim $sub01C0<int[2]; %4> (_t09A2, faceIdx098A);
  int _t09A4 = 1;
  int _t09A5 = prim $sub01C0<int; %2> (_t09A3, _t09A4);
  int[] _t09A6 = prim $range01C3 (_t0995, _t09A5);
  int[] accum09C7 = {};
  foreach i09C4 in _t09A6 {
    int _t09A7 = 1;
    int _t09A8 = 2;
    int _t09A9 = 3;
    int _t09AA = 0;
    int _t09AB = 2;
    int _t09AC = 3;
    int _t09AD = 0;
    int _t09AE = 1;
    int _t09AF = 3;
    int _t09B0 = 0;
    int _t09B1 = 1;
    int _t09B2 = 2;
    int[12] _t09B3 = {_t09A7, _t09A8, _t09A9, _t09AA, _t09AB, _t09AC, _t09AD, _t09AE, _t09AF, _t09B0, _t09B1, _t09B2};
    int _t09B4 = 1;
    int _t09B5 = 3;
    int[2] _t09B6 = {_t09B4, _t09B5};
    int _t09B7 = 3;
    int _t09B8 = 3;
    int[2] _t09B9 = {_t09B7, _t09B8};
    int _t09BA = 9;
    int _t09BB = 3;
    int[2] _t09BC = {_t09BA, _t09BB};
    int _t09BD = 27;
    int _t09BE = 3;
    int[2] _t09BF = {_t09BD, _t09BE};
    int[2][4] _t09C0 = {_t09B6, _t09B9, _t09BC, _t09BF};
    int[2] _t09C1 = prim $sub01C0<int[2]; %4> (_t09C0, faceIdx098A);
    int _t09C2 = 0;
    int _t09C3 = prim $sub01C0<int; %2> (_t09C1, _t09C2);
    int _t09C5 = prim +0015 (_t09C3, i09C4);
    int _t09C6 = prim $sub01C0<int; %12> (_t09B3, _t09C5);
    accum09C7 = prim @0010<int> (accum09C7, _t09C6);
  }
  numFacetNodes09C8 = prim length0123<int> (accum09C7);
  int _t09C9 = 3;
  bool _t09CA = prim ==0082 (_t09C9, numFacetNodes09C8);
  if _t09CA {
    foreach cellInt09CB in nearbyCells0994 {
      int[4] _t09CC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09CD = 1;
      int _t09CE = prim $sub01C0<int; %4> (_t09CC, _t09CD);
      int[4] _t09CF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D0 = 2;
      int _t09D1 = prim $sub01C0<int; %4> (_t09CF, _t09D0);
      int[4] _t09D2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D3 = 3;
      int _t09D4 = prim $sub01C0<int; %4> (_t09D2, _t09D3);
      int[3] _t09D5 = {_t09CE, _t09D1, _t09D4};
      int _t09D6 = 0;
      int _t09D7 = prim $sub01C0<int; %3> (_t09D5, _t09D6);
      int _t09D8 = 0;
      int _t09D9 = 1;
      int _t09DA = 3;
      int[2] _t09DB = {_t09D9, _t09DA};
      int _t09DC = 3;
      int _t09DD = 3;
      int[2] _t09DE = {_t09DC, _t09DD};
      int _t09DF = 9;
      int _t09E0 = 3;
      int[2] _t09E1 = {_t09DF, _t09E0};
      int _t09E2 = 27;
      int _t09E3 = 3;
      int[2] _t09E4 = {_t09E2, _t09E3};
      int[2][4] _t09E5 = {_t09DB, _t09DE, _t09E1, _t09E4};
      int[2] _t09E6 = prim $sub01C0<int[2]; %4> (_t09E5, faceIdx098A);
      int _t09E7 = 1;
      int _t09E8 = prim $sub01C0<int; %2> (_t09E6, _t09E7);
      int[] _t09E9 = prim $range01C3 (_t09D8, _t09E8);
      int[] accum0A09 = {};
      foreach i09C4 in _t09E9 {
        int _t09EA = 1;
        int _t09EB = 2;
        int _t09EC = 3;
        int _t09ED = 0;
        int _t09EE = 2;
        int _t09EF = 3;
        int _t09F0 = 0;
        int _t09F1 = 1;
        int _t09F2 = 3;
        int _t09F3 = 0;
        int _t09F4 = 1;
        int _t09F5 = 2;
        int[12] _t09F6 = {_t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3, _t09F4, _t09F5};
        int _t09F7 = 1;
        int _t09F8 = 3;
        int[2] _t09F9 = {_t09F7, _t09F8};
        int _t09FA = 3;
        int _t09FB = 3;
        int[2] _t09FC = {_t09FA, _t09FB};
        int _t09FD = 9;
        int _t09FE = 3;
        int[2] _t09FF = {_t09FD, _t09FE};
        int _t0A00 = 27;
        int _t0A01 = 3;
        int[2] _t0A02 = {_t0A00, _t0A01};
        int[2][4] _t0A03 = {_t09F9, _t09FC, _t09FF, _t0A02};
        int[2] _t0A04 = prim $sub01C0<int[2]; %4> (_t0A03, faceIdx098A);
        int _t0A05 = 0;
        int _t0A06 = prim $sub01C0<int; %2> (_t0A04, _t0A05);
        int _t0A07 = prim +0015 (_t0A06, i09C4);
        int _t0A08 = prim $sub01C0<int; %12> (_t09F6, _t0A07);
        accum0A09 = prim @0010<int> (accum0A09, _t0A08);
      }
      int _t0A0A = 0;
      int _t0A0B = prim $dynsub01C2<int> (accum0A09, _t0A0A);
      bool _t0A0C = prim ==0082 (_t09D7, _t0A0B);
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx098A);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i09C4 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx098A);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i09C4);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 1;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 2;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx098A);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i09C4 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx098A);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i09C4);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 2;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      bool _t0A8F = prim $and01C4 (_t0A4D, _t0A8E);
      bool _t0A90 = prim $and01C4 (_t0A0C, _t0A8F);
      if _t0A90 {
        int _t0A91 = 0;
        int[2] _t0A92 = {cellInt09CB, _t0A91};
        return _t0A92;
      }
      int[4] _t0A93 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A94 = 0;
      int _t0A95 = prim $sub01C0<int; %4> (_t0A93, _t0A94);
      int[4] _t0A96 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A97 = 2;
      int _t0A98 = prim $sub01C0<int; %4> (_t0A96, _t0A97);
      int[4] _t0A99 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A9A = 3;
      int _t0A9B = prim $sub01C0<int; %4> (_t0A99, _t0A9A);
      int[3] _t0A9C = {_t0A95, _t0A98, _t0A9B};
      int _t0A9D = 0;
      int _t0A9E = prim $sub01C0<int; %3> (_t0A9C, _t0A9D);
      int _t0A9F = 0;
      int _t0AA0 = 1;
      int _t0AA1 = 3;
      int[2] _t0AA2 = {_t0AA0, _t0AA1};
      int _t0AA3 = 3;
      int _t0AA4 = 3;
      int[2] _t0AA5 = {_t0AA3, _t0AA4};
      int _t0AA6 = 9;
      int _t0AA7 = 3;
      int[2] _t0AA8 = {_t0AA6, _t0AA7};
      int _t0AA9 = 27;
      int _t0AAA = 3;
      int[2] _t0AAB = {_t0AA9, _t0AAA};
      int[2][4] _t0AAC = {_t0AA2, _t0AA5, _t0AA8, _t0AAB};
      int[2] _t0AAD = prim $sub01C0<int[2]; %4> (_t0AAC, faceIdx098A);
      int _t0AAE = 1;
      int _t0AAF = prim $sub01C0<int; %2> (_t0AAD, _t0AAE);
      int[] _t0AB0 = prim $range01C3 (_t0A9F, _t0AAF);
      int[] accum0AD0 = {};
      foreach i09C4 in _t0AB0 {
        int _t0AB1 = 1;
        int _t0AB2 = 2;
        int _t0AB3 = 3;
        int _t0AB4 = 0;
        int _t0AB5 = 2;
        int _t0AB6 = 3;
        int _t0AB7 = 0;
        int _t0AB8 = 1;
        int _t0AB9 = 3;
        int _t0ABA = 0;
        int _t0ABB = 1;
        int _t0ABC = 2;
        int[12] _t0ABD = {_t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8, _t0AB9, _t0ABA, _t0ABB, _t0ABC};
        int _t0ABE = 1;
        int _t0ABF = 3;
        int[2] _t0AC0 = {_t0ABE, _t0ABF};
        int _t0AC1 = 3;
        int _t0AC2 = 3;
        int[2] _t0AC3 = {_t0AC1, _t0AC2};
        int _t0AC4 = 9;
        int _t0AC5 = 3;
        int[2] _t0AC6 = {_t0AC4, _t0AC5};
        int _t0AC7 = 27;
        int _t0AC8 = 3;
        int[2] _t0AC9 = {_t0AC7, _t0AC8};
        int[2][4] _t0ACA = {_t0AC0, _t0AC3, _t0AC6, _t0AC9};
        int[2] _t0ACB = prim $sub01C0<int[2]; %4> (_t0ACA, faceIdx098A);
        int _t0ACC = 0;
        int _t0ACD = prim $sub01C0<int; %2> (_t0ACB, _t0ACC);
        int _t0ACE = prim +0015 (_t0ACD, i09C4);
        int _t0ACF = prim $sub01C0<int; %12> (_t0ABD, _t0ACE);
        accum0AD0 = prim @0010<int> (accum0AD0, _t0ACF);
      }
      int _t0AD1 = 0;
      int _t0AD2 = prim $dynsub01C2<int> (accum0AD0, _t0AD1);
      bool _t0AD3 = prim ==0082 (_t0A9E, _t0AD2);
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx098A);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i09C4 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx098A);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i09C4);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 1;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 2;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx098A);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i09C4 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx098A);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i09C4);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 2;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      bool _t0B56 = prim $and01C4 (_t0B14, _t0B55);
      bool _t0B57 = prim $and01C4 (_t0AD3, _t0B56);
      if _t0B57 {
        int _t0B58 = 1;
        int[2] _t0B59 = {cellInt09CB, _t0B58};
        return _t0B59;
      }
      int[4] _t0B5A = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5B = 0;
      int _t0B5C = prim $sub01C0<int; %4> (_t0B5A, _t0B5B);
      int[4] _t0B5D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5E = 1;
      int _t0B5F = prim $sub01C0<int; %4> (_t0B5D, _t0B5E);
      int[4] _t0B60 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B61 = 3;
      int _t0B62 = prim $sub01C0<int; %4> (_t0B60, _t0B61);
      int[3] _t0B63 = {_t0B5C, _t0B5F, _t0B62};
      int _t0B64 = 0;
      int _t0B65 = prim $sub01C0<int; %3> (_t0B63, _t0B64);
      int _t0B66 = 0;
      int _t0B67 = 1;
      int _t0B68 = 3;
      int[2] _t0B69 = {_t0B67, _t0B68};
      int _t0B6A = 3;
      int _t0B6B = 3;
      int[2] _t0B6C = {_t0B6A, _t0B6B};
      int _t0B6D = 9;
      int _t0B6E = 3;
      int[2] _t0B6F = {_t0B6D, _t0B6E};
      int _t0B70 = 27;
      int _t0B71 = 3;
      int[2] _t0B72 = {_t0B70, _t0B71};
      int[2][4] _t0B73 = {_t0B69, _t0B6C, _t0B6F, _t0B72};
      int[2] _t0B74 = prim $sub01C0<int[2]; %4> (_t0B73, faceIdx098A);
      int _t0B75 = 1;
      int _t0B76 = prim $sub01C0<int; %2> (_t0B74, _t0B75);
      int[] _t0B77 = prim $range01C3 (_t0B66, _t0B76);
      int[] accum0B97 = {};
      foreach i09C4 in _t0B77 {
        int _t0B78 = 1;
        int _t0B79 = 2;
        int _t0B7A = 3;
        int _t0B7B = 0;
        int _t0B7C = 2;
        int _t0B7D = 3;
        int _t0B7E = 0;
        int _t0B7F = 1;
        int _t0B80 = 3;
        int _t0B81 = 0;
        int _t0B82 = 1;
        int _t0B83 = 2;
        int[12] _t0B84 = {_t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F, _t0B80, _t0B81, _t0B82, _t0B83};
        int _t0B85 = 1;
        int _t0B86 = 3;
        int[2] _t0B87 = {_t0B85, _t0B86};
        int _t0B88 = 3;
        int _t0B89 = 3;
        int[2] _t0B8A = {_t0B88, _t0B89};
        int _t0B8B = 9;
        int _t0B8C = 3;
        int[2] _t0B8D = {_t0B8B, _t0B8C};
        int _t0B8E = 27;
        int _t0B8F = 3;
        int[2] _t0B90 = {_t0B8E, _t0B8F};
        int[2][4] _t0B91 = {_t0B87, _t0B8A, _t0B8D, _t0B90};
        int[2] _t0B92 = prim $sub01C0<int[2]; %4> (_t0B91, faceIdx098A);
        int _t0B93 = 0;
        int _t0B94 = prim $sub01C0<int; %2> (_t0B92, _t0B93);
        int _t0B95 = prim +0015 (_t0B94, i09C4);
        int _t0B96 = prim $sub01C0<int; %12> (_t0B84, _t0B95);
        accum0B97 = prim @0010<int> (accum0B97, _t0B96);
      }
      int _t0B98 = 0;
      int _t0B99 = prim $dynsub01C2<int> (accum0B97, _t0B98);
      bool _t0B9A = prim ==0082 (_t0B65, _t0B99);
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx098A);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i09C4 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx098A);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i09C4);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 1;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 2;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx098A);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i09C4 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx098A);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i09C4);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 2;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      bool _t0C1D = prim $and01C4 (_t0BDB, _t0C1C);
      bool _t0C1E = prim $and01C4 (_t0B9A, _t0C1D);
      if _t0C1E {
        int _t0C1F = 2;
        int[2] _t0C20 = {cellInt09CB, _t0C1F};
        return _t0C20;
      }
      int[4] _t0C21 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C22 = 0;
      int _t0C23 = prim $sub01C0<int; %4> (_t0C21, _t0C22);
      int[4] _t0C24 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C25 = 1;
      int _t0C26 = prim $sub01C0<int; %4> (_t0C24, _t0C25);
      int[4] _t0C27 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C28 = 2;
      int _t0C29 = prim $sub01C0<int; %4> (_t0C27, _t0C28);
      int[3] _t0C2A = {_t0C23, _t0C26, _t0C29};
      int _t0C2B = 0;
      int _t0C2C = prim $sub01C0<int; %3> (_t0C2A, _t0C2B);
      int _t0C2D = 0;
      int _t0C2E = 1;
      int _t0C2F = 3;
      int[2] _t0C30 = {_t0C2E, _t0C2F};
      int _t0C31 = 3;
      int _t0C32 = 3;
      int[2] _t0C33 = {_t0C31, _t0C32};
      int _t0C34 = 9;
      int _t0C35 = 3;
      int[2] _t0C36 = {_t0C34, _t0C35};
      int _t0C37 = 27;
      int _t0C38 = 3;
      int[2] _t0C39 = {_t0C37, _t0C38};
      int[2][4] _t0C3A = {_t0C30, _t0C33, _t0C36, _t0C39};
      int[2] _t0C3B = prim $sub01C0<int[2]; %4> (_t0C3A, faceIdx098A);
      int _t0C3C = 1;
      int _t0C3D = prim $sub01C0<int; %2> (_t0C3B, _t0C3C);
      int[] _t0C3E = prim $range01C3 (_t0C2D, _t0C3D);
      int[] accum0C5E = {};
      foreach i09C4 in _t0C3E {
        int _t0C3F = 1;
        int _t0C40 = 2;
        int _t0C41 = 3;
        int _t0C42 = 0;
        int _t0C43 = 2;
        int _t0C44 = 3;
        int _t0C45 = 0;
        int _t0C46 = 1;
        int _t0C47 = 3;
        int _t0C48 = 0;
        int _t0C49 = 1;
        int _t0C4A = 2;
        int[12] _t0C4B = {_t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46, _t0C47, _t0C48, _t0C49, _t0C4A};
        int _t0C4C = 1;
        int _t0C4D = 3;
        int[2] _t0C4E = {_t0C4C, _t0C4D};
        int _t0C4F = 3;
        int _t0C50 = 3;
        int[2] _t0C51 = {_t0C4F, _t0C50};
        int _t0C52 = 9;
        int _t0C53 = 3;
        int[2] _t0C54 = {_t0C52, _t0C53};
        int _t0C55 = 27;
        int _t0C56 = 3;
        int[2] _t0C57 = {_t0C55, _t0C56};
        int[2][4] _t0C58 = {_t0C4E, _t0C51, _t0C54, _t0C57};
        int[2] _t0C59 = prim $sub01C0<int[2]; %4> (_t0C58, faceIdx098A);
        int _t0C5A = 0;
        int _t0C5B = prim $sub01C0<int; %2> (_t0C59, _t0C5A);
        int _t0C5C = prim +0015 (_t0C5B, i09C4);
        int _t0C5D = prim $sub01C0<int; %12> (_t0C4B, _t0C5C);
        accum0C5E = prim @0010<int> (accum0C5E, _t0C5D);
      }
      int _t0C5F = 0;
      int _t0C60 = prim $dynsub01C2<int> (accum0C5E, _t0C5F);
      bool _t0C61 = prim ==0082 (_t0C2C, _t0C60);
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx098A);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i09C4 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx098A);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i09C4);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 1;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 2;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx098A);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i09C4 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx098A);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i09C4);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 2;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      bool _t0CE4 = prim $and01C4 (_t0CA2, _t0CE3);
      bool _t0CE5 = prim $and01C4 (_t0C61, _t0CE4);
      if _t0CE5 {
        int _t0CE6 = 3;
        int[2] _t0CE7 = {cellInt09CB, _t0CE6};
        return _t0CE7;
      }
    }
  }
  int _t0CE8 = -1;
  int _t0CE9 = -1;
  int[2] _t0CEA = {_t0CE8, _t0CE9};
  return _t0CEA;
}
function vec2#0 _enter0CEB (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0CEE = +inf;
  int face0CEF = -1;
  real _t0CF0 = 0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  real _t0CF2 = -0.57735026919e0;
  real _t0CF3 = 0.57735026919e0;
  vec3 _t0CF4 = [_t0CF1, _t0CF2, _t0CF3];
  real _t0CF5 = prim •00CE<$[3]; $[3]; $[]> (_t0CF4, refPos0CEC);
  real _t0CF6 = prim -0026<$[]> (_t0CF0, _t0CF5);
  real _t0CF7 = 0.57735026919e0;
  real _t0CF8 = -0.57735026919e0;
  real _t0CF9 = 0.57735026919e0;
  vec3 _t0CFA = [_t0CF7, _t0CF8, _t0CF9];
  real _t0CFB = prim •00CE<$[3]; $[3]; $[]> (_t0CFA, dPos0CED);
  real _t0CFC = prim /0055 (_t0CF6, _t0CFB);
  real _t0CFD = -0.e0;
  bool _t0CFE = prim >0080 (_t0CFC, _t0CFD);
  real _t0CFF = 0.57735026919e0;
  real _t0D00 = 0.57735026919e0;
  real _t0D01 = -0.57735026919e0;
  real _t0D02 = 0.57735026919e0;
  vec3 _t0D03 = [_t0D00, _t0D01, _t0D02];
  real _t0D04 = prim •00CE<$[3]; $[3]; $[]> (_t0D03, refPos0CEC);
  real _t0D05 = prim -0026<$[]> (_t0CFF, _t0D04);
  real _t0D06 = 0.57735026919e0;
  real _t0D07 = -0.57735026919e0;
  real _t0D08 = 0.57735026919e0;
  vec3 _t0D09 = [_t0D06, _t0D07, _t0D08];
  real _t0D0A = prim •00CE<$[3]; $[3]; $[]> (_t0D09, dPos0CED);
  real _t0D0B = prim /0055 (_t0D05, _t0D0A);
  bool _t0D0C = prim >0080 (time0CEE, _t0D0B);
  bool _t0D0D = prim $and01C4 (_t0CFE, _t0D0C);
  if _t0D0D {
    real _t0D0E = 0.1e1;
    real _t0D0F = 0.1e-4;
    real _t0D10 = prim +0017<$[]> (_t0D0E, _t0D0F);
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.1e1;
    vec3 _t0D14 = [_t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.57735026919e0;
    real _t0D16 = 0.57735026919e0;
    real _t0D17 = -0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    vec3 _t0D19 = [_t0D16, _t0D17, _t0D18];
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D19, refPos0CEC);
    real _t0D1B = prim -0026<$[]> (_t0D15, _t0D1A);
    real _t0D1C = 0.57735026919e0;
    real _t0D1D = -0.57735026919e0;
    real _t0D1E = 0.57735026919e0;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = prim •00CE<$[3]; $[3]; $[]> (_t0D1F, dPos0CED);
    real _t0D21 = prim /0055 (_t0D1B, _t0D20);
    vec3 _t0D22 = prim *0038<$[3]> (dPos0CED, _t0D21);
    vec3 _t0D23 = prim +0017<$[3]> (_t0D22, refPos0CEC);
    real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D14, _t0D23);
    bool _t0D25 = prim >0080 (_t0D10, _t0D24);
    real _t0D26 = 0.1e-4;
    real _t0D27 = 0.1e-4;
    real _t0D28 = 0.1e-4;
    vec3 _t0D29 = [_t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.57735026919e0;
    real _t0D2B = 0.57735026919e0;
    real _t0D2C = -0.57735026919e0;
    real _t0D2D = 0.57735026919e0;
    vec3 _t0D2E = [_t0D2B, _t0D2C, _t0D2D];
    real _t0D2F = prim •00CE<$[3]; $[3]; $[]> (_t0D2E, refPos0CEC);
    real _t0D30 = prim -0026<$[]> (_t0D2A, _t0D2F);
    real _t0D31 = 0.57735026919e0;
    real _t0D32 = -0.57735026919e0;
    real _t0D33 = 0.57735026919e0;
    vec3 _t0D34 = [_t0D31, _t0D32, _t0D33];
    real _t0D35 = prim •00CE<$[3]; $[3]; $[]> (_t0D34, dPos0CED);
    real _t0D36 = prim /0055 (_t0D30, _t0D35);
    vec3 _t0D37 = prim *0038<$[3]> (dPos0CED, _t0D36);
    vec3 _t0D38 = prim +0017<$[3]> (_t0D37, refPos0CEC);
    vec3 _t0D39 = prim +0017<$[3]> (_t0D29, _t0D38);
    real _t0D3A = _t0D39[0];
    real _t0D3B = -0.e0;
    bool _t0D3C = prim >0080 (_t0D3A, _t0D3B);
    real _t0D3D = 0.1e-4;
    real _t0D3E = 0.1e-4;
    real _t0D3F = 0.1e-4;
    vec3 _t0D40 = [_t0D3D, _t0D3E, _t0D3F];
    real _t0D41 = 0.57735026919e0;
    real _t0D42 = 0.57735026919e0;
    real _t0D43 = -0.57735026919e0;
    real _t0D44 = 0.57735026919e0;
    vec3 _t0D45 = [_t0D42, _t0D43, _t0D44];
    real _t0D46 = prim •00CE<$[3]; $[3]; $[]> (_t0D45, refPos0CEC);
    real _t0D47 = prim -0026<$[]> (_t0D41, _t0D46);
    real _t0D48 = 0.57735026919e0;
    real _t0D49 = -0.57735026919e0;
    real _t0D4A = 0.57735026919e0;
    vec3 _t0D4B = [_t0D48, _t0D49, _t0D4A];
    real _t0D4C = prim •00CE<$[3]; $[3]; $[]> (_t0D4B, dPos0CED);
    real _t0D4D = prim /0055 (_t0D47, _t0D4C);
    vec3 _t0D4E = prim *0038<$[3]> (dPos0CED, _t0D4D);
    vec3 _t0D4F = prim +0017<$[3]> (_t0D4E, refPos0CEC);
    vec3 _t0D50 = prim +0017<$[3]> (_t0D40, _t0D4F);
    real _t0D51 = _t0D50[1];
    real _t0D52 = -0.e0;
    bool _t0D53 = prim >0080 (_t0D51, _t0D52);
    real _t0D54 = 0.1e-4;
    real _t0D55 = 0.1e-4;
    real _t0D56 = 0.1e-4;
    vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
    real _t0D58 = 0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    real _t0D5A = -0.57735026919e0;
    real _t0D5B = 0.57735026919e0;
    vec3 _t0D5C = [_t0D59, _t0D5A, _t0D5B];
    real _t0D5D = prim •00CE<$[3]; $[3]; $[]> (_t0D5C, refPos0CEC);
    real _t0D5E = prim -0026<$[]> (_t0D58, _t0D5D);
    real _t0D5F = 0.57735026919e0;
    real _t0D60 = -0.57735026919e0;
    real _t0D61 = 0.57735026919e0;
    vec3 _t0D62 = [_t0D5F, _t0D60, _t0D61];
    real _t0D63 = prim •00CE<$[3]; $[3]; $[]> (_t0D62, dPos0CED);
    real _t0D64 = prim /0055 (_t0D5E, _t0D63);
    vec3 _t0D65 = prim *0038<$[3]> (dPos0CED, _t0D64);
    vec3 _t0D66 = prim +0017<$[3]> (_t0D65, refPos0CEC);
    vec3 _t0D67 = prim +0017<$[3]> (_t0D57, _t0D66);
    real _t0D68 = _t0D67[2];
    real _t0D69 = -0.e0;
    bool _t0D6A = prim >0080 (_t0D68, _t0D69);
    bool _t0D6B = prim $and01C4 (_t0D53, _t0D6A);
    bool _t0D6C = prim $and01C4 (_t0D3C, _t0D6B);
    bool _t0D6D = prim $and01C4 (_t0D25, _t0D6C);
    if _t0D6D {
      real _t0D6E = 0.57735026919e0;
      real _t0D6F = 0.57735026919e0;
      real _t0D70 = -0.57735026919e0;
      real _t0D71 = 0.57735026919e0;
      vec3 _t0D72 = [_t0D6F, _t0D70, _t0D71];
      real _t0D73 = prim •00CE<$[3]; $[3]; $[]> (_t0D72, refPos0CEC);
      real _t0D74 = prim -0026<$[]> (_t0D6E, _t0D73);
      real _t0D75 = 0.57735026919e0;
      real _t0D76 = -0.57735026919e0;
      real _t0D77 = 0.57735026919e0;
      vec3 _t0D78 = [_t0D75, _t0D76, _t0D77];
      real _t0D79 = prim •00CE<$[3]; $[3]; $[]> (_t0D78, dPos0CED);
      time0CEE = prim /0055 (_t0D74, _t0D79);
      face0CEF = 0;
    }
  }
  real _t0D7A = 0.e0;
  real _t0D7B = 0.1e1;
  real _t0D7C = 0.e0;
  real _t0D7D = 0.e0;
  vec3 _t0D7E = [_t0D7B, _t0D7C, _t0D7D];
  real _t0D7F = prim •00CE<$[3]; $[3]; $[]> (_t0D7E, refPos0CEC);
  real _t0D80 = prim -0026<$[]> (_t0D7A, _t0D7F);
  real _t0D81 = 0.1e1;
  real _t0D82 = 0.e0;
  real _t0D83 = 0.e0;
  vec3 _t0D84 = [_t0D81, _t0D82, _t0D83];
  real _t0D85 = prim •00CE<$[3]; $[3]; $[]> (_t0D84, dPos0CED);
  real _t0D86 = prim /0055 (_t0D80, _t0D85);
  real _t0D87 = -0.e0;
  bool _t0D88 = prim >0080 (_t0D86, _t0D87);
  real _t0D89 = 0.e0;
  real _t0D8A = 0.1e1;
  real _t0D8B = 0.e0;
  real _t0D8C = 0.e0;
  vec3 _t0D8D = [_t0D8A, _t0D8B, _t0D8C];
  real _t0D8E = prim •00CE<$[3]; $[3]; $[]> (_t0D8D, refPos0CEC);
  real _t0D8F = prim -0026<$[]> (_t0D89, _t0D8E);
  real _t0D90 = 0.1e1;
  real _t0D91 = 0.e0;
  real _t0D92 = 0.e0;
  vec3 _t0D93 = [_t0D90, _t0D91, _t0D92];
  real _t0D94 = prim •00CE<$[3]; $[3]; $[]> (_t0D93, dPos0CED);
  real _t0D95 = prim /0055 (_t0D8F, _t0D94);
  bool _t0D96 = prim >0080 (time0CEE, _t0D95);
  bool _t0D97 = prim $and01C4 (_t0D88, _t0D96);
  if _t0D97 {
    real _t0D98 = 0.1e1;
    real _t0D99 = 0.1e-4;
    real _t0D9A = prim +0017<$[]> (_t0D98, _t0D99);
    real _t0D9B = 0.1e1;
    real _t0D9C = 0.1e1;
    real _t0D9D = 0.1e1;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CEC);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CED);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CED, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CEC);
    real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0D9E, _t0DAD);
    bool _t0DAF = prim >0080 (_t0D9A, _t0DAE);
    real _t0DB0 = 0.1e-4;
    real _t0DB1 = 0.1e-4;
    real _t0DB2 = 0.1e-4;
    vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0CEC);
    real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0CED);
    real _t0DC0 = prim /0055 (_t0DBA, _t0DBF);
    vec3 _t0DC1 = prim *0038<$[3]> (dPos0CED, _t0DC0);
    vec3 _t0DC2 = prim +0017<$[3]> (_t0DC1, refPos0CEC);
    vec3 _t0DC3 = prim +0017<$[3]> (_t0DB3, _t0DC2);
    real _t0DC4 = _t0DC3[0];
    real _t0DC5 = -0.e0;
    bool _t0DC6 = prim >0080 (_t0DC4, _t0DC5);
    real _t0DC7 = 0.1e-4;
    real _t0DC8 = 0.1e-4;
    real _t0DC9 = 0.1e-4;
    vec3 _t0DCA = [_t0DC7, _t0DC8, _t0DC9];
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.e0;
    vec3 _t0DCF = [_t0DCC, _t0DCD, _t0DCE];
    real _t0DD0 = prim •00CE<$[3]; $[3]; $[]> (_t0DCF, refPos0CEC);
    real _t0DD1 = prim -0026<$[]> (_t0DCB, _t0DD0);
    real _t0DD2 = 0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    vec3 _t0DD5 = [_t0DD2, _t0DD3, _t0DD4];
    real _t0DD6 = prim •00CE<$[3]; $[3]; $[]> (_t0DD5, dPos0CED);
    real _t0DD7 = prim /0055 (_t0DD1, _t0DD6);
    vec3 _t0DD8 = prim *0038<$[3]> (dPos0CED, _t0DD7);
    vec3 _t0DD9 = prim +0017<$[3]> (_t0DD8, refPos0CEC);
    vec3 _t0DDA = prim +0017<$[3]> (_t0DCA, _t0DD9);
    real _t0DDB = _t0DDA[1];
    real _t0DDC = -0.e0;
    bool _t0DDD = prim >0080 (_t0DDB, _t0DDC);
    real _t0DDE = 0.1e-4;
    real _t0DDF = 0.1e-4;
    real _t0DE0 = 0.1e-4;
    vec3 _t0DE1 = [_t0DDE, _t0DDF, _t0DE0];
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    real _t0DE5 = 0.e0;
    vec3 _t0DE6 = [_t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = prim •00CE<$[3]; $[3]; $[]> (_t0DE6, refPos0CEC);
    real _t0DE8 = prim -0026<$[]> (_t0DE2, _t0DE7);
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
    real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, dPos0CED);
    real _t0DEE = prim /0055 (_t0DE8, _t0DED);
    vec3 _t0DEF = prim *0038<$[3]> (dPos0CED, _t0DEE);
    vec3 _t0DF0 = prim +0017<$[3]> (_t0DEF, refPos0CEC);
    vec3 _t0DF1 = prim +0017<$[3]> (_t0DE1, _t0DF0);
    real _t0DF2 = _t0DF1[2];
    real _t0DF3 = -0.e0;
    bool _t0DF4 = prim >0080 (_t0DF2, _t0DF3);
    bool _t0DF5 = prim $and01C4 (_t0DDD, _t0DF4);
    bool _t0DF6 = prim $and01C4 (_t0DC6, _t0DF5);
    bool _t0DF7 = prim $and01C4 (_t0DAF, _t0DF6);
    if _t0DF7 {
      real _t0DF8 = 0.e0;
      real _t0DF9 = 0.1e1;
      real _t0DFA = 0.e0;
      real _t0DFB = 0.e0;
      vec3 _t0DFC = [_t0DF9, _t0DFA, _t0DFB];
      real _t0DFD = prim •00CE<$[3]; $[3]; $[]> (_t0DFC, refPos0CEC);
      real _t0DFE = prim -0026<$[]> (_t0DF8, _t0DFD);
      real _t0DFF = 0.1e1;
      real _t0E00 = 0.e0;
      real _t0E01 = 0.e0;
      vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
      real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, dPos0CED);
      time0CEE = prim /0055 (_t0DFE, _t0E03);
      face0CEF = 1;
    }
  }
  real _t0E04 = 0.e0;
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, refPos0CEC);
  real _t0E0A = prim -0026<$[]> (_t0E04, _t0E09);
  real _t0E0B = 0.e0;
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.e0;
  vec3 _t0E0E = [_t0E0B, _t0E0C, _t0E0D];
  real _t0E0F = prim •00CE<$[3]; $[3]; $[]> (_t0E0E, dPos0CED);
  real _t0E10 = prim /0055 (_t0E0A, _t0E0F);
  real _t0E11 = -0.e0;
  bool _t0E12 = prim >0080 (_t0E10, _t0E11);
  real _t0E13 = 0.e0;
  real _t0E14 = 0.e0;
  real _t0E15 = 0.1e1;
  real _t0E16 = 0.e0;
  vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
  real _t0E18 = prim •00CE<$[3]; $[3]; $[]> (_t0E17, refPos0CEC);
  real _t0E19 = prim -0026<$[]> (_t0E13, _t0E18);
  real _t0E1A = 0.e0;
  real _t0E1B = 0.1e1;
  real _t0E1C = 0.e0;
  vec3 _t0E1D = [_t0E1A, _t0E1B, _t0E1C];
  real _t0E1E = prim •00CE<$[3]; $[3]; $[]> (_t0E1D, dPos0CED);
  real _t0E1F = prim /0055 (_t0E19, _t0E1E);
  bool _t0E20 = prim >0080 (time0CEE, _t0E1F);
  bool _t0E21 = prim $and01C4 (_t0E12, _t0E20);
  if _t0E21 {
    real _t0E22 = 0.1e1;
    real _t0E23 = 0.1e-4;
    real _t0E24 = prim +0017<$[]> (_t0E22, _t0E23);
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.1e1;
    vec3 _t0E28 = [_t0E25, _t0E26, _t0E27];
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, refPos0CEC);
    real _t0E2F = prim -0026<$[]> (_t0E29, _t0E2E);
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    real _t0E32 = 0.e0;
    vec3 _t0E33 = [_t0E30, _t0E31, _t0E32];
    real _t0E34 = prim •00CE<$[3]; $[3]; $[]> (_t0E33, dPos0CED);
    real _t0E35 = prim /0055 (_t0E2F, _t0E34);
    vec3 _t0E36 = prim *0038<$[3]> (dPos0CED, _t0E35);
    vec3 _t0E37 = prim +0017<$[3]> (_t0E36, refPos0CEC);
    real _t0E38 = prim •00CE<$[3]; $[3]; $[]> (_t0E28, _t0E37);
    bool _t0E39 = prim >0080 (_t0E24, _t0E38);
    real _t0E3A = 0.1e-4;
    real _t0E3B = 0.1e-4;
    real _t0E3C = 0.1e-4;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CEC);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CED);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CED, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CEC);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[0];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-4;
    real _t0E52 = 0.1e-4;
    real _t0E53 = 0.1e-4;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CEC);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CED);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CED, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CEC);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[1];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    real _t0E68 = 0.1e-4;
    real _t0E69 = 0.1e-4;
    real _t0E6A = 0.1e-4;
    vec3 _t0E6B = [_t0E68, _t0E69, _t0E6A];
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    real _t0E6F = 0.e0;
    vec3 _t0E70 = [_t0E6D, _t0E6E, _t0E6F];
    real _t0E71 = prim •00CE<$[3]; $[3]; $[]> (_t0E70, refPos0CEC);
    real _t0E72 = prim -0026<$[]> (_t0E6C, _t0E71);
    real _t0E73 = 0.e0;
    real _t0E74 = 0.1e1;
    real _t0E75 = 0.e0;
    vec3 _t0E76 = [_t0E73, _t0E74, _t0E75];
    real _t0E77 = prim •00CE<$[3]; $[3]; $[]> (_t0E76, dPos0CED);
    real _t0E78 = prim /0055 (_t0E72, _t0E77);
    vec3 _t0E79 = prim *0038<$[3]> (dPos0CED, _t0E78);
    vec3 _t0E7A = prim +0017<$[3]> (_t0E79, refPos0CEC);
    vec3 _t0E7B = prim +0017<$[3]> (_t0E6B, _t0E7A);
    real _t0E7C = _t0E7B[2];
    real _t0E7D = -0.e0;
    bool _t0E7E = prim >0080 (_t0E7C, _t0E7D);
    bool _t0E7F = prim $and01C4 (_t0E67, _t0E7E);
    bool _t0E80 = prim $and01C4 (_t0E50, _t0E7F);
    bool _t0E81 = prim $and01C4 (_t0E39, _t0E80);
    if _t0E81 {
      real _t0E82 = 0.e0;
      real _t0E83 = 0.e0;
      real _t0E84 = 0.1e1;
      real _t0E85 = 0.e0;
      vec3 _t0E86 = [_t0E83, _t0E84, _t0E85];
      real _t0E87 = prim •00CE<$[3]; $[3]; $[]> (_t0E86, refPos0CEC);
      real _t0E88 = prim -0026<$[]> (_t0E82, _t0E87);
      real _t0E89 = 0.e0;
      real _t0E8A = 0.1e1;
      real _t0E8B = 0.e0;
      vec3 _t0E8C = [_t0E89, _t0E8A, _t0E8B];
      real _t0E8D = prim •00CE<$[3]; $[3]; $[]> (_t0E8C, dPos0CED);
      time0CEE = prim /0055 (_t0E88, _t0E8D);
      face0CEF = 2;
    }
  }
  real _t0E8E = 0.e0;
  real _t0E8F = 0.e0;
  real _t0E90 = 0.e0;
  real _t0E91 = 0.1e1;
  vec3 _t0E92 = [_t0E8F, _t0E90, _t0E91];
  real _t0E93 = prim •00CE<$[3]; $[3]; $[]> (_t0E92, refPos0CEC);
  real _t0E94 = prim -0026<$[]> (_t0E8E, _t0E93);
  real _t0E95 = 0.e0;
  real _t0E96 = 0.e0;
  real _t0E97 = 0.1e1;
  vec3 _t0E98 = [_t0E95, _t0E96, _t0E97];
  real _t0E99 = prim •00CE<$[3]; $[3]; $[]> (_t0E98, dPos0CED);
  real _t0E9A = prim /0055 (_t0E94, _t0E99);
  real _t0E9B = -0.e0;
  bool _t0E9C = prim >0080 (_t0E9A, _t0E9B);
  real _t0E9D = 0.e0;
  real _t0E9E = 0.e0;
  real _t0E9F = 0.e0;
  real _t0EA0 = 0.1e1;
  vec3 _t0EA1 = [_t0E9E, _t0E9F, _t0EA0];
  real _t0EA2 = prim •00CE<$[3]; $[3]; $[]> (_t0EA1, refPos0CEC);
  real _t0EA3 = prim -0026<$[]> (_t0E9D, _t0EA2);
  real _t0EA4 = 0.e0;
  real _t0EA5 = 0.e0;
  real _t0EA6 = 0.1e1;
  vec3 _t0EA7 = [_t0EA4, _t0EA5, _t0EA6];
  real _t0EA8 = prim •00CE<$[3]; $[3]; $[]> (_t0EA7, dPos0CED);
  real _t0EA9 = prim /0055 (_t0EA3, _t0EA8);
  bool _t0EAA = prim >0080 (time0CEE, _t0EA9);
  bool _t0EAB = prim $and01C4 (_t0E9C, _t0EAA);
  if _t0EAB {
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.1e-4;
    real _t0EAE = prim +0017<$[]> (_t0EAC, _t0EAD);
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.1e1;
    vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.1e1;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, refPos0CEC);
    real _t0EB9 = prim -0026<$[]> (_t0EB3, _t0EB8);
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.1e1;
    vec3 _t0EBD = [_t0EBA, _t0EBB, _t0EBC];
    real _t0EBE = prim •00CE<$[3]; $[3]; $[]> (_t0EBD, dPos0CED);
    real _t0EBF = prim /0055 (_t0EB9, _t0EBE);
    vec3 _t0EC0 = prim *0038<$[3]> (dPos0CED, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EC0, refPos0CEC);
    real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, _t0EC1);
    bool _t0EC3 = prim >0080 (_t0EAE, _t0EC2);
    real _t0EC4 = 0.1e-4;
    real _t0EC5 = 0.1e-4;
    real _t0EC6 = 0.1e-4;
    vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.e0;
    real _t0ECB = 0.1e1;
    vec3 _t0ECC = [_t0EC9, _t0ECA, _t0ECB];
    real _t0ECD = prim •00CE<$[3]; $[3]; $[]> (_t0ECC, refPos0CEC);
    real _t0ECE = prim -0026<$[]> (_t0EC8, _t0ECD);
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.1e1;
    vec3 _t0ED2 = [_t0ECF, _t0ED0, _t0ED1];
    real _t0ED3 = prim •00CE<$[3]; $[3]; $[]> (_t0ED2, dPos0CED);
    real _t0ED4 = prim /0055 (_t0ECE, _t0ED3);
    vec3 _t0ED5 = prim *0038<$[3]> (dPos0CED, _t0ED4);
    vec3 _t0ED6 = prim +0017<$[3]> (_t0ED5, refPos0CEC);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0EC7, _t0ED6);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = -0.e0;
    bool _t0EDA = prim >0080 (_t0ED8, _t0ED9);
    real _t0EDB = 0.1e-4;
    real _t0EDC = 0.1e-4;
    real _t0EDD = 0.1e-4;
    vec3 _t0EDE = [_t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.e0;
    real _t0EE2 = 0.1e1;
    vec3 _t0EE3 = [_t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = prim •00CE<$[3]; $[3]; $[]> (_t0EE3, refPos0CEC);
    real _t0EE5 = prim -0026<$[]> (_t0EDF, _t0EE4);
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.1e1;
    vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, dPos0CED);
    real _t0EEB = prim /0055 (_t0EE5, _t0EEA);
    vec3 _t0EEC = prim *0038<$[3]> (dPos0CED, _t0EEB);
    vec3 _t0EED = prim +0017<$[3]> (_t0EEC, refPos0CEC);
    vec3 _t0EEE = prim +0017<$[3]> (_t0EDE, _t0EED);
    real _t0EEF = _t0EEE[1];
    real _t0EF0 = -0.e0;
    bool _t0EF1 = prim >0080 (_t0EEF, _t0EF0);
    real _t0EF2 = 0.1e-4;
    real _t0EF3 = 0.1e-4;
    real _t0EF4 = 0.1e-4;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.1e1;
    vec3 _t0EFA = [_t0EF7, _t0EF8, _t0EF9];
    real _t0EFB = prim •00CE<$[3]; $[3]; $[]> (_t0EFA, refPos0CEC);
    real _t0EFC = prim -0026<$[]> (_t0EF6, _t0EFB);
    real _t0EFD = 0.e0;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.1e1;
    vec3 _t0F00 = [_t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = prim •00CE<$[3]; $[3]; $[]> (_t0F00, dPos0CED);
    real _t0F02 = prim /0055 (_t0EFC, _t0F01);
    vec3 _t0F03 = prim *0038<$[3]> (dPos0CED, _t0F02);
    vec3 _t0F04 = prim +0017<$[3]> (_t0F03, refPos0CEC);
    vec3 _t0F05 = prim +0017<$[3]> (_t0EF5, _t0F04);
    real _t0F06 = _t0F05[2];
    real _t0F07 = -0.e0;
    bool _t0F08 = prim >0080 (_t0F06, _t0F07);
    bool _t0F09 = prim $and01C4 (_t0EF1, _t0F08);
    bool _t0F0A = prim $and01C4 (_t0EDA, _t0F09);
    bool _t0F0B = prim $and01C4 (_t0EC3, _t0F0A);
    if _t0F0B {
      real _t0F0C = 0.e0;
      real _t0F0D = 0.e0;
      real _t0F0E = 0.e0;
      real _t0F0F = 0.1e1;
      vec3 _t0F10 = [_t0F0D, _t0F0E, _t0F0F];
      real _t0F11 = prim •00CE<$[3]; $[3]; $[]> (_t0F10, refPos0CEC);
      real _t0F12 = prim -0026<$[]> (_t0F0C, _t0F11);
      real _t0F13 = 0.e0;
      real _t0F14 = 0.e0;
      real _t0F15 = 0.1e1;
      vec3 _t0F16 = [_t0F13, _t0F14, _t0F15];
      real _t0F17 = prim •00CE<$[3]; $[3]; $[]> (_t0F16, dPos0CED);
      time0CEE = prim /0055 (_t0F12, _t0F17);
      face0CEF = 3;
    }
  }
  int _t0F18 = -1;
  bool _t0F19 = prim !=0086 (face0CEF, _t0F18);
  if _t0F19 {
    real _t0F1A = (real)face0CEF;
    vec2 _t0F1B = [time0CEE, _t0F1A];
    return _t0F1B;
  } else {
    real _t0F1C = -0.1e1;
    real _t0F1D = -0.1e1;
    vec2 _t0F1E = [_t0F1C, _t0F1D];
    return _t0F1E;
  }
}
function vec2#0 _exit0F1F (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0F20 = +inf;
  int face0F21 = -1;
  real _t0F22 = 0.57735026919e0;
  real _t0F23 = 0.57735026919e0;
  real _t0F24 = -0.57735026919e0;
  real _t0F25 = 0.57735026919e0;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0CEC);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.57735026919e0;
  real _t0F2A = -0.57735026919e0;
  real _t0F2B = 0.57735026919e0;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0CED);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  real _t0F2F = -0.e0;
  bool _t0F30 = prim >0080 (_t0F2E, _t0F2F);
  real _t0F31 = 0.57735026919e0;
  real _t0F32 = 0.57735026919e0;
  real _t0F33 = -0.57735026919e0;
  real _t0F34 = 0.57735026919e0;
  vec3 _t0F35 = [_t0F32, _t0F33, _t0F34];
  real _t0F36 = prim •00CE<$[3]; $[3]; $[]> (_t0F35, refPos0CEC);
  real _t0F37 = prim -0026<$[]> (_t0F31, _t0F36);
  real _t0F38 = 0.57735026919e0;
  real _t0F39 = -0.57735026919e0;
  real _t0F3A = 0.57735026919e0;
  vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
  real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, dPos0CED);
  real _t0F3D = prim /0055 (_t0F37, _t0F3C);
  bool _t0F3E = prim >0080 (time0F20, _t0F3D);
  bool _t0F3F = prim $and01C4 (_t0F30, _t0F3E);
  if _t0F3F {
    real _t0F40 = 0.57735026919e0;
    real _t0F41 = 0.57735026919e0;
    real _t0F42 = -0.57735026919e0;
    real _t0F43 = 0.57735026919e0;
    vec3 _t0F44 = [_t0F41, _t0F42, _t0F43];
    real _t0F45 = prim •00CE<$[3]; $[3]; $[]> (_t0F44, refPos0CEC);
    real _t0F46 = prim -0026<$[]> (_t0F40, _t0F45);
    real _t0F47 = 0.57735026919e0;
    real _t0F48 = -0.57735026919e0;
    real _t0F49 = 0.57735026919e0;
    vec3 _t0F4A = [_t0F47, _t0F48, _t0F49];
    real _t0F4B = prim •00CE<$[3]; $[3]; $[]> (_t0F4A, dPos0CED);
    time0F20 = prim /0055 (_t0F46, _t0F4B);
    face0F21 = 0;
  }
  real _t0F4C = 0.e0;
  real _t0F4D = 0.1e1;
  real _t0F4E = 0.e0;
  real _t0F4F = 0.e0;
  vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
  real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0CEC);
  real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
  real _t0F53 = 0.1e1;
  real _t0F54 = 0.e0;
  real _t0F55 = 0.e0;
  vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
  real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0CED);
  real _t0F58 = prim /0055 (_t0F52, _t0F57);
  real _t0F59 = -0.e0;
  bool _t0F5A = prim >0080 (_t0F58, _t0F59);
  real _t0F5B = 0.e0;
  real _t0F5C = 0.1e1;
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  vec3 _t0F5F = [_t0F5C, _t0F5D, _t0F5E];
  real _t0F60 = prim •00CE<$[3]; $[3]; $[]> (_t0F5F, refPos0CEC);
  real _t0F61 = prim -0026<$[]> (_t0F5B, _t0F60);
  real _t0F62 = 0.1e1;
  real _t0F63 = 0.e0;
  real _t0F64 = 0.e0;
  vec3 _t0F65 = [_t0F62, _t0F63, _t0F64];
  real _t0F66 = prim •00CE<$[3]; $[3]; $[]> (_t0F65, dPos0CED);
  real _t0F67 = prim /0055 (_t0F61, _t0F66);
  bool _t0F68 = prim >0080 (time0F20, _t0F67);
  bool _t0F69 = prim $and01C4 (_t0F5A, _t0F68);
  if _t0F69 {
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    vec3 _t0F6E = [_t0F6B, _t0F6C, _t0F6D];
    real _t0F6F = prim •00CE<$[3]; $[3]; $[]> (_t0F6E, refPos0CEC);
    real _t0F70 = prim -0026<$[]> (_t0F6A, _t0F6F);
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
    real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, dPos0CED);
    time0F20 = prim /0055 (_t0F70, _t0F75);
    face0F21 = 1;
  }
  real _t0F76 = 0.e0;
  real _t0F77 = 0.e0;
  real _t0F78 = 0.1e1;
  real _t0F79 = 0.e0;
  vec3 _t0F7A = [_t0F77, _t0F78, _t0F79];
  real _t0F7B = prim •00CE<$[3]; $[3]; $[]> (_t0F7A, refPos0CEC);
  real _t0F7C = prim -0026<$[]> (_t0F76, _t0F7B);
  real _t0F7D = 0.e0;
  real _t0F7E = 0.1e1;
  real _t0F7F = 0.e0;
  vec3 _t0F80 = [_t0F7D, _t0F7E, _t0F7F];
  real _t0F81 = prim •00CE<$[3]; $[3]; $[]> (_t0F80, dPos0CED);
  real _t0F82 = prim /0055 (_t0F7C, _t0F81);
  real _t0F83 = -0.e0;
  bool _t0F84 = prim >0080 (_t0F82, _t0F83);
  real _t0F85 = 0.e0;
  real _t0F86 = 0.e0;
  real _t0F87 = 0.1e1;
  real _t0F88 = 0.e0;
  vec3 _t0F89 = [_t0F86, _t0F87, _t0F88];
  real _t0F8A = prim •00CE<$[3]; $[3]; $[]> (_t0F89, refPos0CEC);
  real _t0F8B = prim -0026<$[]> (_t0F85, _t0F8A);
  real _t0F8C = 0.e0;
  real _t0F8D = 0.1e1;
  real _t0F8E = 0.e0;
  vec3 _t0F8F = [_t0F8C, _t0F8D, _t0F8E];
  real _t0F90 = prim •00CE<$[3]; $[3]; $[]> (_t0F8F, dPos0CED);
  real _t0F91 = prim /0055 (_t0F8B, _t0F90);
  bool _t0F92 = prim >0080 (time0F20, _t0F91);
  bool _t0F93 = prim $and01C4 (_t0F84, _t0F92);
  if _t0F93 {
    real _t0F94 = 0.e0;
    real _t0F95 = 0.e0;
    real _t0F96 = 0.1e1;
    real _t0F97 = 0.e0;
    vec3 _t0F98 = [_t0F95, _t0F96, _t0F97];
    real _t0F99 = prim •00CE<$[3]; $[3]; $[]> (_t0F98, refPos0CEC);
    real _t0F9A = prim -0026<$[]> (_t0F94, _t0F99);
    real _t0F9B = 0.e0;
    real _t0F9C = 0.1e1;
    real _t0F9D = 0.e0;
    vec3 _t0F9E = [_t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = prim •00CE<$[3]; $[3]; $[]> (_t0F9E, dPos0CED);
    time0F20 = prim /0055 (_t0F9A, _t0F9F);
    face0F21 = 2;
  }
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = 0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0CEC);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = 0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0CED);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  real _t0FAD = -0.e0;
  bool _t0FAE = prim >0080 (_t0FAC, _t0FAD);
  real _t0FAF = 0.e0;
  real _t0FB0 = 0.e0;
  real _t0FB1 = 0.e0;
  real _t0FB2 = 0.1e1;
  vec3 _t0FB3 = [_t0FB0, _t0FB1, _t0FB2];
  real _t0FB4 = prim •00CE<$[3]; $[3]; $[]> (_t0FB3, refPos0CEC);
  real _t0FB5 = prim -0026<$[]> (_t0FAF, _t0FB4);
  real _t0FB6 = 0.e0;
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.1e1;
  vec3 _t0FB9 = [_t0FB6, _t0FB7, _t0FB8];
  real _t0FBA = prim •00CE<$[3]; $[3]; $[]> (_t0FB9, dPos0CED);
  real _t0FBB = prim /0055 (_t0FB5, _t0FBA);
  bool _t0FBC = prim >0080 (time0F20, _t0FBB);
  bool _t0FBD = prim $and01C4 (_t0FAE, _t0FBC);
  if _t0FBD {
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    vec3 _t0FC2 = [_t0FBF, _t0FC0, _t0FC1];
    real _t0FC3 = prim •00CE<$[3]; $[3]; $[]> (_t0FC2, refPos0CEC);
    real _t0FC4 = prim -0026<$[]> (_t0FBE, _t0FC3);
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    vec3 _t0FC8 = [_t0FC5, _t0FC6, _t0FC7];
    real _t0FC9 = prim •00CE<$[3]; $[3]; $[]> (_t0FC8, dPos0CED);
    time0F20 = prim /0055 (_t0FC4, _t0FC9);
    face0F21 = 3;
  }
  int _t0FCA = -1;
  bool _t0FCB = prim !=0086 (face0F21, _t0FCA);
  if _t0FCB {
    real _t0FCC = (real)face0F21;
    vec2 _t0FCD = [time0F20, _t0FCC];
    return _t0FCD;
  } else {
    real _t0FCE = -0.1e1;
    real _t0FCF = -0.1e1;
    vec2 _t0FD0 = [_t0FCE, _t0FCF];
    return _t0FD0;
  }
}
function Femdata: Mesh#0 domain0FD1 (Femdata: Space arg00FD2)
{
  Femdata: Mesh _t0FD3 = extractFem(arg00FD2, Mesh);
  return _t0FD3;
}
function Femdata: Space#0 space0FD4 (Femdata: FemFunc arg00FD5)
{
  Femdata: Space _t0FD6 = extractFem(arg00FD5, Space);
  return _t0FD6;
}
function Femdata: FuncCell#0 funcCell0FD7 (Femdata: FemFunc arg00FD8, Femdata: MeshCell arg10FD9)
{
  int _t0FDA = extractFemItem(CellIndex(MeshCell), int, arg10FD9);
  Femdata: FuncCell _t0FDB = loadFem(FuncCell, arg00FD8, _t0FDA);
  return _t0FDB;
}
function real#1 mask0FEB (vec3 x0FEC)
{
  real _t0FED = 0.1e1;
  return _t0FED;
}
function vec3#1 color0FF4 (vec3 x0FF5)
{
  real _t0FF6 = prim @00A5<#∞; %3; $[]> (V0FE7, x0FF5);
  vec3 _t0FF7 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t0FF6);
  return _t0FF7;
}
function real#1 alpha0FF8 (real v0FF9, real g0FFA)
{
  real _t0FFB = 0.e0;
  real _t0FFC = 0.1e1;
  real _t0FFD = 0.13e1;
  real _t0FFE = 0.1e1;
  real _t0FFF = prim |()|00B5<$[]> (v0FF9);
  real _t1000 = prim *0034 (g0FFA, thick0440);
  real _t1001 = prim /0055 (_t0FFF, _t1000);
  real _t1002 = prim -0026<$[]> (_t0FFE, _t1001);
  real _t1003 = prim *0034 (_t0FFD, _t1002);
  real _t1004 = prim clamp0094<$[]> (_t0FFB, _t0FFC, _t1003);
  return _t1004;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  0cell_a0430 = _t0439;
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058 = func alpha0FF8 (val1053, _t1057);
                  real _t1059 = func mask0FEB (x103E);
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070 = func color0FF4 (x103E);
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function Femdata: RefCell#0 refcell04B2 (Femdata: Mesh arg004B3)
{
  Femdata: RefCell _t04B4 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004B3);
  return _t04B4;
}
function Femdata: MeshCell[]#0 cells04B5 (Femdata: Mesh arg004B6)
{
  Femdata: MeshCell[] _t04B7 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004B6);
  return _t04B7;
}
function Femdata: MeshCell[]#0 cells04B8 (Femdata: Mesh arg004B6)
{
  int _t04B9 = 0;
  int _t04BA = extractFemItem(NumCell(Mesh), int, arg004B6);
  int[] _t04BB = prim $range01C3 (_t04B9, _t04BA);
  Femdata: MeshCell[] accum04BE = {};
  foreach i04BC in _t04BB {
    Femdata: MeshCell _t04BD = loadFem(MeshCell, arg004B6, i04BC);
    accum04BE = prim @0010<Femdata: MeshCell> (accum04BE, _t04BD);
  }
  return accum04BE;
}
function int#0 numCell04BF (Femdata: Mesh arg004B3)
{
  int _t04C0 = extractFemItem(NumCell(Mesh), int, arg004B3);
  return _t04C0;
}
function tensor[3,3,3,3]#0 msh_transform_304C1 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04C5 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04C6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C5);
  field(3)[3,3,3] _t04C7 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04C6);
  field(3)[3,3,3,3] _t04C8 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04C7);
  tensor[3,3,3,3] _t04C9 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04C8, pos04C2);
  return _t04C9;
}
function tensor[3,3,3]#0 msh_transform_204CA (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04CB = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04CC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04CB);
  field(3)[3,3,3] _t04CD = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04CC);
  tensor[3,3,3] _t04CE = prim @00A5<#∞; %3; $[3,3,3]> (_t04CD, pos04C2);
  return _t04CE;
}
function tensor[3,3]#0 msh_transform_104CF (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D0 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04D1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D0);
  tensor[3,3] _t04D2 = prim @00A5<#∞; %3; $[3,3]> (_t04D1, pos04C2);
  return _t04D2;
}
function vec3#2 msh_transform_004D3 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D4 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  vec3 _t04D5 = prim @00A5<#∞; %3; $[3]> (_t04D4, pos04C2);
  return _t04D5;
}
function Femdata: MeshPos#0 _msh_newtonInverse04D6 (vec3 pos04D7, int cellInt04D8, Femdata: Mesh mesh04D9)
{
  real _t04DA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04DD = [_t04DA, _t04DB, _t04DC];
  field(3)[3] _t04DE = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
  field(3)[3,3] _t04DF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04DE);
  field(3)[3,3] _t04E0 = prim inv015E<#∞; %3> (_t04DF);
  real _t04E1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04E4 = [_t04E1, _t04E2, _t04E3];
  A04E5 = prim @00A5<#∞; %3; $[3,3]> (_t04E0, _t04E4);
  int _t04E6 = 0;
  int _t04E7 = 2;
  int[] _t04E8 = prim $range01C3 (_t04E6, _t04E7);
  foreach itter0518 in _t04E8 {
    field(3)[3] _t04E9 = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
    field(3)[3] _t04EA = prim -002E<#∞; %3; $[3]> (_t04E9, pos04D7);
    field(3)[3] _t04EB = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04E5, _t04EA);
    delta04EC = prim @00A5<#∞; %3; $[3]> (_t04EB, xn04DD);
    xn04DD = prim -0026<$[3]> (xn04DD, delta04EC);
    real _t04ED = 0.1e-7;
    real _t04EE = 0.1e-7;
    real _t04EF = prim *0034 (_t04ED, _t04EE);
    real _t04F0 = prim •00CE<$[3]; $[3]; $[]> (delta04EC, delta04EC);
    bool _t04F1 = prim >=007E (_t04EF, _t04F0);
    if _t04F1 {
      real _t04F2 = 0.1e1;
      real _t04F3 = 0.1e-4;
      real _t04F4 = prim +0017<$[]> (_t04F2, _t04F3);
      real _t04F5 = 0.1e1;
      real _t04F6 = 0.1e1;
      real _t04F7 = 0.1e1;
      vec3 _t04F8 = [_t04F5, _t04F6, _t04F7];
      real _t04F9 = prim •00CE<$[3]; $[3]; $[]> (_t04F8, xn04DD);
      bool _t04FA = prim >0080 (_t04F4, _t04F9);
      real _t04FB = 0.1e-4;
      real _t04FC = 0.1e-4;
      real _t04FD = 0.1e-4;
      vec3 _t04FE = [_t04FB, _t04FC, _t04FD];
      vec3 _t04FF = prim +0017<$[3]> (_t04FE, xn04DD);
      real _t0500 = _t04FF[0];
      real _t0501 = -0.e0;
      bool _t0502 = prim >0080 (_t0500, _t0501);
      real _t0503 = 0.1e-4;
      real _t0504 = 0.1e-4;
      real _t0505 = 0.1e-4;
      vec3 _t0506 = [_t0503, _t0504, _t0505];
      vec3 _t0507 = prim +0017<$[3]> (_t0506, xn04DD);
      real _t0508 = _t0507[1];
      real _t0509 = -0.e0;
      bool _t050A = prim >0080 (_t0508, _t0509);
      real _t050B = 0.1e-4;
      real _t050C = 0.1e-4;
      real _t050D = 0.1e-4;
      vec3 _t050E = [_t050B, _t050C, _t050D];
      vec3 _t050F = prim +0017<$[3]> (_t050E, xn04DD);
      real _t0510 = _t050F[2];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      bool _t0513 = prim $and01C4 (_t050A, _t0512);
      bool _t0514 = prim $and01C4 (_t0502, _t0513);
      bool _t0515 = prim $and01C4 (_t04FA, _t0514);
      if _t0515 {
        Femdata: MeshPos _t0516 = extractFemItemN((mesh04D9, cellInt04D8, xn04DD, pos04D7),AllBuild(MeshPos),);
        return _t0516;
      } else {
        Femdata: MeshPos _t0517 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
        return _t0517;
      }
    }
  }
  Femdata: MeshPos _t0519 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
  return _t0519;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos051A (Femdata: MeshPos pos051B)
{
  bool _t051C = extractFemItem(WorldTest(MeshPos), bool, pos051B);
  if _t051C {
    vec3 _t051D = extractFemItem(RefPos(MeshPos), vec3, pos051B);
    int _t051E = extractFemItem(CellIndex(MeshPos), int, pos051B);
    Femdata: Mesh _t051F = extractFem(pos051B, Mesh);
    vec3 _t0520 = func msh_transform_004D3 (_t051D, _t051E, _t051F);
    Femdata: MeshPos _t0521 = extractFemItemN((pos051B, _t0520),NewWorld(MeshPos),);
    return _t0521;
  } else {
    return pos051B;
  }
}
function vec3#0 worldPos0522 (Femdata: MeshPos pos051B)
{
  vec3 _t0523 = extractFemItem(RefPos(MeshPos), vec3, pos051B);
  int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos051B);
  Femdata: Mesh _t0525 = extractFem(pos051B, Mesh);
  vec3 _t0526 = func msh_transform_004D3 (_t0523, _t0524, _t0525);
  return _t0526;
}
function Femdata: MeshPos#0 $exitPos0527 (Femdata: Mesh mesh0528, int cellId0529, vec3 refPos052A, vec3 dPos052B, real[2] time052C)
{
  int _t052D = -1;
  real _t052E = time052C[1];
  int _t052F = prim $r2i01B7 (_t052E);
  int[2] _t0531 = func nextCell40530 (_t052F, cellId0529, mesh0528);
  int _t0532 = 0;
  int _t0533 = prim $sub01C0<int; %2> (_t0531, _t0532);
  bool _t0534 = prim !=0086 (_t052D, _t0533);
  if _t0534 {
    real _t0535 = time052C[1];
    int _t0536 = prim $r2i01B7 (_t0535);
    int[2] _t0537 = func nextCell40530 (_t0536, cellId0529, mesh0528);
    int _t0538 = 0;
    int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
    real _t053A = 0.1e1;
    real _t053B = 0.e0;
    real _t053C = 0.e0;
    real _t053D = 0.e0;
    vec4 _t053E = [_t053A, _t053B, _t053C, _t053D];
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    real _t0542 = 0.e0;
    vec4 _t0543 = [_t053F, _t0540, _t0541, _t0542];
    real _t0544 = 0.e0;
    real _t0545 = 0.e0;
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.222044604925e-15;
    real _t054A = 0.e0;
    real _t054B = 0.44408920985e-15;
    real _t054C = 0.1e1;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    tensor[4,4] _t054E = [_t053E, _t0543, _t0548, _t054D];
    real _t054F = 0.173205080757e1;
    real _t0550 = 0.173205080757e1;
    real _t0551 = 0.173205080757e1;
    real _t0552 = -0.173205080757e1;
    vec4 _t0553 = [_t054F, _t0550, _t0551, _t0552];
    real _t0554 = 0.1e1;
    real _t0555 = 0.2e1;
    real _t0556 = 0.1e1;
    real _t0557 = -0.1e1;
    vec4 _t0558 = [_t0554, _t0555, _t0556, _t0557];
    real _t0559 = -0.1e1;
    real _t055A = -0.1e1;
    real _t055B = -0.192296268638e-15;
    real _t055C = 0.1e1;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.222044604925e-15;
    real _t055F = 0.e0;
    real _t0560 = 0.44408920985e-15;
    real _t0561 = 0.1e1;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    tensor[4,4] _t0563 = [_t0553, _t0558, _t055D, _t0562];
    real _t0564 = 0.1e1;
    real _t0565 = 0.2e1;
    real _t0566 = 0.1e1;
    real _t0567 = -0.1e1;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.173205080757e1;
    real _t056A = 0.173205080757e1;
    real _t056B = 0.173205080757e1;
    real _t056C = -0.173205080757e1;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = -0.1e1;
    real _t056F = -0.1e1;
    real _t0570 = -0.192296268638e-15;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.222044604925e-15;
    real _t0574 = 0.e0;
    real _t0575 = 0.44408920985e-15;
    real _t0576 = 0.1e1;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    tensor[4,4] _t0578 = [_t0568, _t056D, _t0572, _t0577];
    real _t0579 = 0.1e1;
    real _t057A = 0.2e1;
    real _t057B = 0.1e1;
    real _t057C = -0.1e1;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.1e1;
    real _t057F = -0.1e1;
    real _t0580 = -0.192296268638e-15;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.173205080757e1;
    real _t0584 = 0.173205080757e1;
    real _t0585 = 0.173205080757e1;
    real _t0586 = -0.173205080757e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.222044604925e-15;
    real _t0589 = 0.e0;
    real _t058A = 0.44408920985e-15;
    real _t058B = 0.1e1;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    tensor[4,4] _t058D = [_t057D, _t0582, _t0587, _t058C];
    tensor[4,4][4] _t058E = {_t054E, _t0563, _t0578, _t058D};
    real _t058F = 0.57735026919e0;
    real _t0590 = -0.1e1;
    real _t0591 = -0.1e1;
    real _t0592 = 0.1e1;
    vec4 _t0593 = [_t058F, _t0590, _t0591, _t0592];
    real _t0594 = -0.57735026919e0;
    real _t0595 = 0.1e1;
    real _t0596 = 0.e0;
    real _t0597 = 0.e0;
    vec4 _t0598 = [_t0594, _t0595, _t0596, _t0597];
    real _t0599 = 0.57735026919e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    real _t059C = 0.e0;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.e0;
    real _t059F = 0.e0;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.1e1;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    tensor[4,4] _t05A3 = [_t0593, _t0598, _t059D, _t05A2];
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.e0;
    real _t05A6 = 0.e0;
    real _t05A7 = 0.e0;
    vec4 _t05A8 = [_t05A4, _t05A5, _t05A6, _t05A7];
    real _t05A9 = 0.e0;
    real _t05AA = 0.1e1;
    real _t05AB = 0.e0;
    real _t05AC = 0.e0;
    vec4 _t05AD = [_t05A9, _t05AA, _t05AB, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.e0;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.1e1;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    tensor[4,4] _t05B8 = [_t05A8, _t05AD, _t05B2, _t05B7];
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.1e1;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    tensor[4,4] _t05CD = [_t05BD, _t05C2, _t05C7, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.e0;
    real _t05DF = 0.e0;
    real _t05E0 = 0.1e1;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    tensor[4,4] _t05E2 = [_t05D2, _t05D7, _t05DC, _t05E1];
    tensor[4,4][4] _t05E3 = {_t05A3, _t05B8, _t05CD, _t05E2};
    real _t05E4 = -0.1e1;
    real _t05E5 = 0.57735026919e0;
    real _t05E6 = -0.1e1;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    real _t05E9 = 0.1e1;
    real _t05EA = -0.57735026919e0;
    real _t05EB = 0.e0;
    real _t05EC = 0.e0;
    vec4 _t05ED = [_t05E9, _t05EA, _t05EB, _t05EC];
    real _t05EE = 0.e0;
    real _t05EF = 0.57735026919e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    vec4 _t05F2 = [_t05EE, _t05EF, _t05F0, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.1e1;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    tensor[4,4] _t05F8 = [_t05E8, _t05ED, _t05F2, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    real _t05FC = 0.e0;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.1e1;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    tensor[4,4] _t060D = [_t05FD, _t0602, _t0607, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = 0.1e1;
    real _t0615 = 0.e0;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.1e1;
    real _t061B = 0.e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = 0.e0;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    tensor[4,4] _t0622 = [_t0612, _t0617, _t061C, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.1e1;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    tensor[4,4] _t0637 = [_t0627, _t062C, _t0631, _t0636];
    tensor[4,4][4] _t0638 = {_t05F8, _t060D, _t0622, _t0637};
    real _t0639 = -0.1e1;
    real _t063A = -0.1e1;
    real _t063B = 0.57735026919e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = 0.e0;
    real _t0640 = -0.57735026919e0;
    real _t0641 = 0.e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    real _t0645 = 0.57735026919e0;
    real _t0646 = 0.e0;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    tensor[4,4] _t064D = [_t063D, _t0642, _t0647, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    real _t0656 = 0.e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    tensor[4,4] _t0662 = [_t0652, _t0657, _t065C, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.1e1;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    tensor[4,4] _t0677 = [_t0667, _t066C, _t0671, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    tensor[4,4] _t068C = [_t067C, _t0681, _t0686, _t068B];
    tensor[4,4][4] _t068D = {_t064D, _t0662, _t0677, _t068C};
    tensor[4,4][4][4] _t068E = {_t058E, _t05E3, _t0638, _t068D};
    real _t068F = time052C[1];
    int _t0690 = prim $r2i01B7 (_t068F);
    tensor[4,4][4] _t0691 = prim $sub01C0<tensor[4,4][4]; %4> (_t068E, _t0690);
    real _t0692 = time052C[1];
    int _t0693 = prim $r2i01B7 (_t0692);
    int[2] _t0694 = func nextCell40530 (_t0693, cellId0529, mesh0528);
    int _t0695 = 1;
    int _t0696 = prim $sub01C0<int; %2> (_t0694, _t0695);
    tensor[4,4] _t0697 = prim $sub01C0<tensor[4,4]; %4> (_t0691, _t0696);
    real _t0698 = time052C[0];
    vec3 _t0699 = prim *0036<$[3]> (_t0698, dPos052B);
    vec3 _t069A = prim +0017<$[3]> (_t0699, refPos052A);
    real _t069B = _t069A[0];
    real _t069C = time052C[0];
    vec3 _t069D = prim *0036<$[3]> (_t069C, dPos052B);
    vec3 _t069E = prim +0017<$[3]> (_t069D, refPos052A);
    real _t069F = _t069E[1];
    real _t06A0 = time052C[0];
    vec3 _t06A1 = prim *0036<$[3]> (_t06A0, dPos052B);
    vec3 _t06A2 = prim +0017<$[3]> (_t06A1, refPos052A);
    real _t06A3 = _t06A2[2];
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t069B, _t069F, _t06A3, _t06A4];
    vec4 _t06A6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0697, _t06A5);
    real _t06A7 = _t06A6[0];
    real _t06A8 = 0.1e1;
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.222044604925e-15;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.44408920985e-15;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.173205080757e1;
    real _t06BE = 0.173205080757e1;
    real _t06BF = 0.173205080757e1;
    real _t06C0 = -0.173205080757e1;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.2e1;
    real _t06C4 = 0.1e1;
    real _t06C5 = -0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = -0.1e1;
    real _t06C8 = -0.1e1;
    real _t06C9 = -0.192296268638e-15;
    real _t06CA = 0.1e1;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.222044604925e-15;
    real _t06CD = 0.e0;
    real _t06CE = 0.44408920985e-15;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.2e1;
    real _t06D4 = 0.1e1;
    real _t06D5 = -0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.173205080757e1;
    real _t06D8 = 0.173205080757e1;
    real _t06D9 = 0.173205080757e1;
    real _t06DA = -0.173205080757e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    real _t06DE = -0.192296268638e-15;
    real _t06DF = 0.1e1;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.222044604925e-15;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.44408920985e-15;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.2e1;
    real _t06E9 = 0.1e1;
    real _t06EA = -0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = -0.1e1;
    real _t06ED = -0.1e1;
    real _t06EE = -0.192296268638e-15;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.173205080757e1;
    real _t06F2 = 0.173205080757e1;
    real _t06F3 = 0.173205080757e1;
    real _t06F4 = -0.173205080757e1;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.222044604925e-15;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.44408920985e-15;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = 0.57735026919e0;
    real _t06FE = -0.1e1;
    real _t06FF = -0.1e1;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = -0.57735026919e0;
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.57735026919e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    real _t0752 = -0.1e1;
    real _t0753 = 0.57735026919e0;
    real _t0754 = -0.1e1;
    real _t0755 = 0.1e1;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = 0.1e1;
    real _t0758 = -0.57735026919e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = 0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.1e1;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.1e1;
    real _t079D = 0.e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][4] _t07A6 = {_t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = -0.1e1;
    real _t07A9 = 0.57735026919e0;
    real _t07AA = 0.1e1;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = -0.57735026919e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.1e1;
    real _t07B3 = 0.57735026919e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = 0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = 0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    tensor[4,4][4] _t07FB = {_t07BB, _t07D0, _t07E5, _t07FA};
    tensor[4,4][4][4] _t07FC = {_t06FC, _t0751, _t07A6, _t07FB};
    real _t07FD = time052C[1];
    int _t07FE = prim $r2i01B7 (_t07FD);
    tensor[4,4][4] _t07FF = prim $sub01C0<tensor[4,4][4]; %4> (_t07FC, _t07FE);
    real _t0800 = time052C[1];
    int _t0801 = prim $r2i01B7 (_t0800);
    int[2] _t0802 = func nextCell40530 (_t0801, cellId0529, mesh0528);
    int _t0803 = 1;
    int _t0804 = prim $sub01C0<int; %2> (_t0802, _t0803);
    tensor[4,4] _t0805 = prim $sub01C0<tensor[4,4]; %4> (_t07FF, _t0804);
    real _t0806 = time052C[0];
    vec3 _t0807 = prim *0036<$[3]> (_t0806, dPos052B);
    vec3 _t0808 = prim +0017<$[3]> (_t0807, refPos052A);
    real _t0809 = _t0808[0];
    real _t080A = time052C[0];
    vec3 _t080B = prim *0036<$[3]> (_t080A, dPos052B);
    vec3 _t080C = prim +0017<$[3]> (_t080B, refPos052A);
    real _t080D = _t080C[1];
    real _t080E = time052C[0];
    vec3 _t080F = prim *0036<$[3]> (_t080E, dPos052B);
    vec3 _t0810 = prim +0017<$[3]> (_t080F, refPos052A);
    real _t0811 = _t0810[2];
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t0809, _t080D, _t0811, _t0812];
    vec4 _t0814 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0805, _t0813);
    real _t0815 = _t0814[1];
    real _t0816 = 0.1e1;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.222044604925e-15;
    real _t0826 = 0.e0;
    real _t0827 = 0.44408920985e-15;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.173205080757e1;
    real _t082C = 0.173205080757e1;
    real _t082D = 0.173205080757e1;
    real _t082E = -0.173205080757e1;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.2e1;
    real _t0832 = 0.1e1;
    real _t0833 = -0.1e1;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = -0.1e1;
    real _t0837 = -0.192296268638e-15;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.222044604925e-15;
    real _t083B = 0.e0;
    real _t083C = 0.44408920985e-15;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.2e1;
    real _t0842 = 0.1e1;
    real _t0843 = -0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.173205080757e1;
    real _t0846 = 0.173205080757e1;
    real _t0847 = 0.173205080757e1;
    real _t0848 = -0.173205080757e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = -0.1e1;
    real _t084B = -0.1e1;
    real _t084C = -0.192296268638e-15;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.222044604925e-15;
    real _t0850 = 0.e0;
    real _t0851 = 0.44408920985e-15;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.2e1;
    real _t0857 = 0.1e1;
    real _t0858 = -0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = -0.1e1;
    real _t085B = -0.1e1;
    real _t085C = -0.192296268638e-15;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.173205080757e1;
    real _t0860 = 0.173205080757e1;
    real _t0861 = 0.173205080757e1;
    real _t0862 = -0.173205080757e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.222044604925e-15;
    real _t0865 = 0.e0;
    real _t0866 = 0.44408920985e-15;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = 0.57735026919e0;
    real _t086C = -0.1e1;
    real _t086D = -0.1e1;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = -0.57735026919e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.57735026919e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    real _t08C0 = -0.1e1;
    real _t08C1 = 0.57735026919e0;
    real _t08C2 = -0.1e1;
    real _t08C3 = 0.1e1;
    vec4 _t08C4 = [_t08C0, _t08C1, _t08C2, _t08C3];
    real _t08C5 = 0.1e1;
    real _t08C6 = -0.57735026919e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    tensor[4,4] _t08D4 = [_t08C4, _t08C9, _t08CE, _t08D3];
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.e0;
    vec4 _t08D9 = [_t08D5, _t08D6, _t08D7, _t08D8];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.1e1;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.1e1;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    tensor[4,4] _t08E9 = [_t08D9, _t08DE, _t08E3, _t08E8];
    real _t08EA = 0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    tensor[4,4] _t08FE = [_t08EE, _t08F3, _t08F8, _t08FD];
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    tensor[4,4][4] _t0914 = {_t08D4, _t08E9, _t08FE, _t0913};
    real _t0915 = -0.1e1;
    real _t0916 = -0.1e1;
    real _t0917 = 0.57735026919e0;
    real _t0918 = 0.1e1;
    vec4 _t0919 = [_t0915, _t0916, _t0917, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = -0.57735026919e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.57735026919e0;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.1e1;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    tensor[4,4] _t0929 = [_t0919, _t091E, _t0923, _t0928];
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    real _t092D = 0.e0;
    vec4 _t092E = [_t092A, _t092B, _t092C, _t092D];
    real _t092F = 0.1e1;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.1e1;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    tensor[4,4] _t093E = [_t092E, _t0933, _t0938, _t093D];
    real _t093F = 0.1e1;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.1e1;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    tensor[4,4] _t0953 = [_t0943, _t0948, _t094D, _t0952];
    real _t0954 = 0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.e0;
    real _t0960 = 0.1e1;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.e0;
    real _t0966 = 0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    tensor[4,4] _t0968 = [_t0958, _t095D, _t0962, _t0967];
    tensor[4,4][4] _t0969 = {_t0929, _t093E, _t0953, _t0968};
    tensor[4,4][4][4] _t096A = {_t086A, _t08BF, _t0914, _t0969};
    real _t096B = time052C[1];
    int _t096C = prim $r2i01B7 (_t096B);
    tensor[4,4][4] _t096D = prim $sub01C0<tensor[4,4][4]; %4> (_t096A, _t096C);
    real _t096E = time052C[1];
    int _t096F = prim $r2i01B7 (_t096E);
    int[2] _t0970 = func nextCell40530 (_t096F, cellId0529, mesh0528);
    int _t0971 = 1;
    int _t0972 = prim $sub01C0<int; %2> (_t0970, _t0971);
    tensor[4,4] _t0973 = prim $sub01C0<tensor[4,4]; %4> (_t096D, _t0972);
    real _t0974 = time052C[0];
    vec3 _t0975 = prim *0036<$[3]> (_t0974, dPos052B);
    vec3 _t0976 = prim +0017<$[3]> (_t0975, refPos052A);
    real _t0977 = _t0976[0];
    real _t0978 = time052C[0];
    vec3 _t0979 = prim *0036<$[3]> (_t0978, dPos052B);
    vec3 _t097A = prim +0017<$[3]> (_t0979, refPos052A);
    real _t097B = _t097A[1];
    real _t097C = time052C[0];
    vec3 _t097D = prim *0036<$[3]> (_t097C, dPos052B);
    vec3 _t097E = prim +0017<$[3]> (_t097D, refPos052A);
    real _t097F = _t097E[2];
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t0977, _t097B, _t097F, _t0980];
    vec4 _t0982 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0973, _t0981);
    real _t0983 = _t0982[2];
    vec3 _t0984 = [_t06A7, _t0815, _t0983];
    Femdata: MeshPos _t0985 = extractFemItemN((mesh0528, _t0539, _t0984),RefBuild(Mesh),);
    return _t0985;
  } else {
    real _t0986 = time052C[0];
    vec3 _t0987 = prim *0036<$[3]> (_t0986, dPos052B);
    vec3 _t0988 = prim +0017<$[3]> (_t0987, refPos052A);
    Femdata: MeshPos _t0989 = extractFemItemN((mesh0528, _t0988),InvalidBuildBoundary(MeshPos),);
    return _t0989;
  }
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
function int[2]#0 $nextCell20993 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  nearbyCells0994 = extractFemItem2(CellConnectivity(Mesh), int, mesh098C, cell098B : int);
  int _t0995 = 0;
  int _t0996 = 1;
  int _t0997 = 3;
  int[2] _t0998 = {_t0996, _t0997};
  int _t0999 = 3;
  int _t099A = 3;
  int[2] _t099B = {_t0999, _t099A};
  int _t099C = 9;
  int _t099D = 3;
  int[2] _t099E = {_t099C, _t099D};
  int _t099F = 27;
  int _t09A0 = 3;
  int[2] _t09A1 = {_t099F, _t09A0};
  int[2][4] _t09A2 = {_t0998, _t099B, _t099E, _t09A1};
  int[2] _t09A3 = prim $sub01C0<int[2]; %4> (_t09A2, faceIdx098A);
  int _t09A4 = 1;
  int _t09A5 = prim $sub01C0<int; %2> (_t09A3, _t09A4);
  int[] _t09A6 = prim $range01C3 (_t0995, _t09A5);
  int[] accum09C7 = {};
  foreach i09C4 in _t09A6 {
    int _t09A7 = 1;
    int _t09A8 = 2;
    int _t09A9 = 3;
    int _t09AA = 0;
    int _t09AB = 2;
    int _t09AC = 3;
    int _t09AD = 0;
    int _t09AE = 1;
    int _t09AF = 3;
    int _t09B0 = 0;
    int _t09B1 = 1;
    int _t09B2 = 2;
    int[12] _t09B3 = {_t09A7, _t09A8, _t09A9, _t09AA, _t09AB, _t09AC, _t09AD, _t09AE, _t09AF, _t09B0, _t09B1, _t09B2};
    int _t09B4 = 1;
    int _t09B5 = 3;
    int[2] _t09B6 = {_t09B4, _t09B5};
    int _t09B7 = 3;
    int _t09B8 = 3;
    int[2] _t09B9 = {_t09B7, _t09B8};
    int _t09BA = 9;
    int _t09BB = 3;
    int[2] _t09BC = {_t09BA, _t09BB};
    int _t09BD = 27;
    int _t09BE = 3;
    int[2] _t09BF = {_t09BD, _t09BE};
    int[2][4] _t09C0 = {_t09B6, _t09B9, _t09BC, _t09BF};
    int[2] _t09C1 = prim $sub01C0<int[2]; %4> (_t09C0, faceIdx098A);
    int _t09C2 = 0;
    int _t09C3 = prim $sub01C0<int; %2> (_t09C1, _t09C2);
    int _t09C5 = prim +0015 (_t09C3, i09C4);
    int _t09C6 = prim $sub01C0<int; %12> (_t09B3, _t09C5);
    accum09C7 = prim @0010<int> (accum09C7, _t09C6);
  }
  numFacetNodes09C8 = prim length0123<int> (accum09C7);
  int _t09C9 = 3;
  bool _t09CA = prim ==0082 (_t09C9, numFacetNodes09C8);
  if _t09CA {
    foreach cellInt09CB in nearbyCells0994 {
      int[4] _t09CC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09CD = 1;
      int _t09CE = prim $sub01C0<int; %4> (_t09CC, _t09CD);
      int[4] _t09CF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D0 = 2;
      int _t09D1 = prim $sub01C0<int; %4> (_t09CF, _t09D0);
      int[4] _t09D2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D3 = 3;
      int _t09D4 = prim $sub01C0<int; %4> (_t09D2, _t09D3);
      int[3] _t09D5 = {_t09CE, _t09D1, _t09D4};
      int _t09D6 = 0;
      int _t09D7 = prim $sub01C0<int; %3> (_t09D5, _t09D6);
      int _t09D8 = 0;
      int _t09D9 = 1;
      int _t09DA = 3;
      int[2] _t09DB = {_t09D9, _t09DA};
      int _t09DC = 3;
      int _t09DD = 3;
      int[2] _t09DE = {_t09DC, _t09DD};
      int _t09DF = 9;
      int _t09E0 = 3;
      int[2] _t09E1 = {_t09DF, _t09E0};
      int _t09E2 = 27;
      int _t09E3 = 3;
      int[2] _t09E4 = {_t09E2, _t09E3};
      int[2][4] _t09E5 = {_t09DB, _t09DE, _t09E1, _t09E4};
      int[2] _t09E6 = prim $sub01C0<int[2]; %4> (_t09E5, faceIdx098A);
      int _t09E7 = 1;
      int _t09E8 = prim $sub01C0<int; %2> (_t09E6, _t09E7);
      int[] _t09E9 = prim $range01C3 (_t09D8, _t09E8);
      int[] accum0A09 = {};
      foreach i09C4 in _t09E9 {
        int _t09EA = 1;
        int _t09EB = 2;
        int _t09EC = 3;
        int _t09ED = 0;
        int _t09EE = 2;
        int _t09EF = 3;
        int _t09F0 = 0;
        int _t09F1 = 1;
        int _t09F2 = 3;
        int _t09F3 = 0;
        int _t09F4 = 1;
        int _t09F5 = 2;
        int[12] _t09F6 = {_t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3, _t09F4, _t09F5};
        int _t09F7 = 1;
        int _t09F8 = 3;
        int[2] _t09F9 = {_t09F7, _t09F8};
        int _t09FA = 3;
        int _t09FB = 3;
        int[2] _t09FC = {_t09FA, _t09FB};
        int _t09FD = 9;
        int _t09FE = 3;
        int[2] _t09FF = {_t09FD, _t09FE};
        int _t0A00 = 27;
        int _t0A01 = 3;
        int[2] _t0A02 = {_t0A00, _t0A01};
        int[2][4] _t0A03 = {_t09F9, _t09FC, _t09FF, _t0A02};
        int[2] _t0A04 = prim $sub01C0<int[2]; %4> (_t0A03, faceIdx098A);
        int _t0A05 = 0;
        int _t0A06 = prim $sub01C0<int; %2> (_t0A04, _t0A05);
        int _t0A07 = prim +0015 (_t0A06, i09C4);
        int _t0A08 = prim $sub01C0<int; %12> (_t09F6, _t0A07);
        accum0A09 = prim @0010<int> (accum0A09, _t0A08);
      }
      int _t0A0A = 0;
      int _t0A0B = prim $dynsub01C2<int> (accum0A09, _t0A0A);
      bool _t0A0C = prim ==0082 (_t09D7, _t0A0B);
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx098A);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i09C4 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx098A);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i09C4);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 1;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 2;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx098A);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i09C4 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx098A);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i09C4);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 2;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      bool _t0A8F = prim $and01C4 (_t0A4D, _t0A8E);
      bool _t0A90 = prim $and01C4 (_t0A0C, _t0A8F);
      if _t0A90 {
        int _t0A91 = 0;
        int[2] _t0A92 = {cellInt09CB, _t0A91};
        return _t0A92;
      }
      int[4] _t0A93 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A94 = 0;
      int _t0A95 = prim $sub01C0<int; %4> (_t0A93, _t0A94);
      int[4] _t0A96 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A97 = 2;
      int _t0A98 = prim $sub01C0<int; %4> (_t0A96, _t0A97);
      int[4] _t0A99 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A9A = 3;
      int _t0A9B = prim $sub01C0<int; %4> (_t0A99, _t0A9A);
      int[3] _t0A9C = {_t0A95, _t0A98, _t0A9B};
      int _t0A9D = 0;
      int _t0A9E = prim $sub01C0<int; %3> (_t0A9C, _t0A9D);
      int _t0A9F = 0;
      int _t0AA0 = 1;
      int _t0AA1 = 3;
      int[2] _t0AA2 = {_t0AA0, _t0AA1};
      int _t0AA3 = 3;
      int _t0AA4 = 3;
      int[2] _t0AA5 = {_t0AA3, _t0AA4};
      int _t0AA6 = 9;
      int _t0AA7 = 3;
      int[2] _t0AA8 = {_t0AA6, _t0AA7};
      int _t0AA9 = 27;
      int _t0AAA = 3;
      int[2] _t0AAB = {_t0AA9, _t0AAA};
      int[2][4] _t0AAC = {_t0AA2, _t0AA5, _t0AA8, _t0AAB};
      int[2] _t0AAD = prim $sub01C0<int[2]; %4> (_t0AAC, faceIdx098A);
      int _t0AAE = 1;
      int _t0AAF = prim $sub01C0<int; %2> (_t0AAD, _t0AAE);
      int[] _t0AB0 = prim $range01C3 (_t0A9F, _t0AAF);
      int[] accum0AD0 = {};
      foreach i09C4 in _t0AB0 {
        int _t0AB1 = 1;
        int _t0AB2 = 2;
        int _t0AB3 = 3;
        int _t0AB4 = 0;
        int _t0AB5 = 2;
        int _t0AB6 = 3;
        int _t0AB7 = 0;
        int _t0AB8 = 1;
        int _t0AB9 = 3;
        int _t0ABA = 0;
        int _t0ABB = 1;
        int _t0ABC = 2;
        int[12] _t0ABD = {_t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8, _t0AB9, _t0ABA, _t0ABB, _t0ABC};
        int _t0ABE = 1;
        int _t0ABF = 3;
        int[2] _t0AC0 = {_t0ABE, _t0ABF};
        int _t0AC1 = 3;
        int _t0AC2 = 3;
        int[2] _t0AC3 = {_t0AC1, _t0AC2};
        int _t0AC4 = 9;
        int _t0AC5 = 3;
        int[2] _t0AC6 = {_t0AC4, _t0AC5};
        int _t0AC7 = 27;
        int _t0AC8 = 3;
        int[2] _t0AC9 = {_t0AC7, _t0AC8};
        int[2][4] _t0ACA = {_t0AC0, _t0AC3, _t0AC6, _t0AC9};
        int[2] _t0ACB = prim $sub01C0<int[2]; %4> (_t0ACA, faceIdx098A);
        int _t0ACC = 0;
        int _t0ACD = prim $sub01C0<int; %2> (_t0ACB, _t0ACC);
        int _t0ACE = prim +0015 (_t0ACD, i09C4);
        int _t0ACF = prim $sub01C0<int; %12> (_t0ABD, _t0ACE);
        accum0AD0 = prim @0010<int> (accum0AD0, _t0ACF);
      }
      int _t0AD1 = 0;
      int _t0AD2 = prim $dynsub01C2<int> (accum0AD0, _t0AD1);
      bool _t0AD3 = prim ==0082 (_t0A9E, _t0AD2);
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx098A);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i09C4 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx098A);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i09C4);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 1;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 2;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx098A);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i09C4 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx098A);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i09C4);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 2;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      bool _t0B56 = prim $and01C4 (_t0B14, _t0B55);
      bool _t0B57 = prim $and01C4 (_t0AD3, _t0B56);
      if _t0B57 {
        int _t0B58 = 1;
        int[2] _t0B59 = {cellInt09CB, _t0B58};
        return _t0B59;
      }
      int[4] _t0B5A = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5B = 0;
      int _t0B5C = prim $sub01C0<int; %4> (_t0B5A, _t0B5B);
      int[4] _t0B5D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5E = 1;
      int _t0B5F = prim $sub01C0<int; %4> (_t0B5D, _t0B5E);
      int[4] _t0B60 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B61 = 3;
      int _t0B62 = prim $sub01C0<int; %4> (_t0B60, _t0B61);
      int[3] _t0B63 = {_t0B5C, _t0B5F, _t0B62};
      int _t0B64 = 0;
      int _t0B65 = prim $sub01C0<int; %3> (_t0B63, _t0B64);
      int _t0B66 = 0;
      int _t0B67 = 1;
      int _t0B68 = 3;
      int[2] _t0B69 = {_t0B67, _t0B68};
      int _t0B6A = 3;
      int _t0B6B = 3;
      int[2] _t0B6C = {_t0B6A, _t0B6B};
      int _t0B6D = 9;
      int _t0B6E = 3;
      int[2] _t0B6F = {_t0B6D, _t0B6E};
      int _t0B70 = 27;
      int _t0B71 = 3;
      int[2] _t0B72 = {_t0B70, _t0B71};
      int[2][4] _t0B73 = {_t0B69, _t0B6C, _t0B6F, _t0B72};
      int[2] _t0B74 = prim $sub01C0<int[2]; %4> (_t0B73, faceIdx098A);
      int _t0B75 = 1;
      int _t0B76 = prim $sub01C0<int; %2> (_t0B74, _t0B75);
      int[] _t0B77 = prim $range01C3 (_t0B66, _t0B76);
      int[] accum0B97 = {};
      foreach i09C4 in _t0B77 {
        int _t0B78 = 1;
        int _t0B79 = 2;
        int _t0B7A = 3;
        int _t0B7B = 0;
        int _t0B7C = 2;
        int _t0B7D = 3;
        int _t0B7E = 0;
        int _t0B7F = 1;
        int _t0B80 = 3;
        int _t0B81 = 0;
        int _t0B82 = 1;
        int _t0B83 = 2;
        int[12] _t0B84 = {_t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F, _t0B80, _t0B81, _t0B82, _t0B83};
        int _t0B85 = 1;
        int _t0B86 = 3;
        int[2] _t0B87 = {_t0B85, _t0B86};
        int _t0B88 = 3;
        int _t0B89 = 3;
        int[2] _t0B8A = {_t0B88, _t0B89};
        int _t0B8B = 9;
        int _t0B8C = 3;
        int[2] _t0B8D = {_t0B8B, _t0B8C};
        int _t0B8E = 27;
        int _t0B8F = 3;
        int[2] _t0B90 = {_t0B8E, _t0B8F};
        int[2][4] _t0B91 = {_t0B87, _t0B8A, _t0B8D, _t0B90};
        int[2] _t0B92 = prim $sub01C0<int[2]; %4> (_t0B91, faceIdx098A);
        int _t0B93 = 0;
        int _t0B94 = prim $sub01C0<int; %2> (_t0B92, _t0B93);
        int _t0B95 = prim +0015 (_t0B94, i09C4);
        int _t0B96 = prim $sub01C0<int; %12> (_t0B84, _t0B95);
        accum0B97 = prim @0010<int> (accum0B97, _t0B96);
      }
      int _t0B98 = 0;
      int _t0B99 = prim $dynsub01C2<int> (accum0B97, _t0B98);
      bool _t0B9A = prim ==0082 (_t0B65, _t0B99);
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx098A);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i09C4 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx098A);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i09C4);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 1;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 2;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx098A);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i09C4 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx098A);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i09C4);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 2;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      bool _t0C1D = prim $and01C4 (_t0BDB, _t0C1C);
      bool _t0C1E = prim $and01C4 (_t0B9A, _t0C1D);
      if _t0C1E {
        int _t0C1F = 2;
        int[2] _t0C20 = {cellInt09CB, _t0C1F};
        return _t0C20;
      }
      int[4] _t0C21 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C22 = 0;
      int _t0C23 = prim $sub01C0<int; %4> (_t0C21, _t0C22);
      int[4] _t0C24 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C25 = 1;
      int _t0C26 = prim $sub01C0<int; %4> (_t0C24, _t0C25);
      int[4] _t0C27 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C28 = 2;
      int _t0C29 = prim $sub01C0<int; %4> (_t0C27, _t0C28);
      int[3] _t0C2A = {_t0C23, _t0C26, _t0C29};
      int _t0C2B = 0;
      int _t0C2C = prim $sub01C0<int; %3> (_t0C2A, _t0C2B);
      int _t0C2D = 0;
      int _t0C2E = 1;
      int _t0C2F = 3;
      int[2] _t0C30 = {_t0C2E, _t0C2F};
      int _t0C31 = 3;
      int _t0C32 = 3;
      int[2] _t0C33 = {_t0C31, _t0C32};
      int _t0C34 = 9;
      int _t0C35 = 3;
      int[2] _t0C36 = {_t0C34, _t0C35};
      int _t0C37 = 27;
      int _t0C38 = 3;
      int[2] _t0C39 = {_t0C37, _t0C38};
      int[2][4] _t0C3A = {_t0C30, _t0C33, _t0C36, _t0C39};
      int[2] _t0C3B = prim $sub01C0<int[2]; %4> (_t0C3A, faceIdx098A);
      int _t0C3C = 1;
      int _t0C3D = prim $sub01C0<int; %2> (_t0C3B, _t0C3C);
      int[] _t0C3E = prim $range01C3 (_t0C2D, _t0C3D);
      int[] accum0C5E = {};
      foreach i09C4 in _t0C3E {
        int _t0C3F = 1;
        int _t0C40 = 2;
        int _t0C41 = 3;
        int _t0C42 = 0;
        int _t0C43 = 2;
        int _t0C44 = 3;
        int _t0C45 = 0;
        int _t0C46 = 1;
        int _t0C47 = 3;
        int _t0C48 = 0;
        int _t0C49 = 1;
        int _t0C4A = 2;
        int[12] _t0C4B = {_t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46, _t0C47, _t0C48, _t0C49, _t0C4A};
        int _t0C4C = 1;
        int _t0C4D = 3;
        int[2] _t0C4E = {_t0C4C, _t0C4D};
        int _t0C4F = 3;
        int _t0C50 = 3;
        int[2] _t0C51 = {_t0C4F, _t0C50};
        int _t0C52 = 9;
        int _t0C53 = 3;
        int[2] _t0C54 = {_t0C52, _t0C53};
        int _t0C55 = 27;
        int _t0C56 = 3;
        int[2] _t0C57 = {_t0C55, _t0C56};
        int[2][4] _t0C58 = {_t0C4E, _t0C51, _t0C54, _t0C57};
        int[2] _t0C59 = prim $sub01C0<int[2]; %4> (_t0C58, faceIdx098A);
        int _t0C5A = 0;
        int _t0C5B = prim $sub01C0<int; %2> (_t0C59, _t0C5A);
        int _t0C5C = prim +0015 (_t0C5B, i09C4);
        int _t0C5D = prim $sub01C0<int; %12> (_t0C4B, _t0C5C);
        accum0C5E = prim @0010<int> (accum0C5E, _t0C5D);
      }
      int _t0C5F = 0;
      int _t0C60 = prim $dynsub01C2<int> (accum0C5E, _t0C5F);
      bool _t0C61 = prim ==0082 (_t0C2C, _t0C60);
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx098A);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i09C4 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx098A);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i09C4);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 1;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 2;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx098A);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i09C4 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx098A);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i09C4);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 2;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      bool _t0CE4 = prim $and01C4 (_t0CA2, _t0CE3);
      bool _t0CE5 = prim $and01C4 (_t0C61, _t0CE4);
      if _t0CE5 {
        int _t0CE6 = 3;
        int[2] _t0CE7 = {cellInt09CB, _t0CE6};
        return _t0CE7;
      }
    }
  }
  int _t0CE8 = -1;
  int _t0CE9 = -1;
  int[2] _t0CEA = {_t0CE8, _t0CE9};
  return _t0CEA;
}
function vec2#0 _enter0CEB (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0CEE = +inf;
  int face0CEF = -1;
  real _t0CF0 = 0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  real _t0CF2 = -0.57735026919e0;
  real _t0CF3 = 0.57735026919e0;
  vec3 _t0CF4 = [_t0CF1, _t0CF2, _t0CF3];
  real _t0CF5 = prim •00CE<$[3]; $[3]; $[]> (_t0CF4, refPos0CEC);
  real _t0CF6 = prim -0026<$[]> (_t0CF0, _t0CF5);
  real _t0CF7 = 0.57735026919e0;
  real _t0CF8 = -0.57735026919e0;
  real _t0CF9 = 0.57735026919e0;
  vec3 _t0CFA = [_t0CF7, _t0CF8, _t0CF9];
  real _t0CFB = prim •00CE<$[3]; $[3]; $[]> (_t0CFA, dPos0CED);
  real _t0CFC = prim /0055 (_t0CF6, _t0CFB);
  real _t0CFD = -0.e0;
  bool _t0CFE = prim >0080 (_t0CFC, _t0CFD);
  real _t0CFF = 0.57735026919e0;
  real _t0D00 = 0.57735026919e0;
  real _t0D01 = -0.57735026919e0;
  real _t0D02 = 0.57735026919e0;
  vec3 _t0D03 = [_t0D00, _t0D01, _t0D02];
  real _t0D04 = prim •00CE<$[3]; $[3]; $[]> (_t0D03, refPos0CEC);
  real _t0D05 = prim -0026<$[]> (_t0CFF, _t0D04);
  real _t0D06 = 0.57735026919e0;
  real _t0D07 = -0.57735026919e0;
  real _t0D08 = 0.57735026919e0;
  vec3 _t0D09 = [_t0D06, _t0D07, _t0D08];
  real _t0D0A = prim •00CE<$[3]; $[3]; $[]> (_t0D09, dPos0CED);
  real _t0D0B = prim /0055 (_t0D05, _t0D0A);
  bool _t0D0C = prim >0080 (time0CEE, _t0D0B);
  bool _t0D0D = prim $and01C4 (_t0CFE, _t0D0C);
  if _t0D0D {
    real _t0D0E = 0.1e1;
    real _t0D0F = 0.1e-4;
    real _t0D10 = prim +0017<$[]> (_t0D0E, _t0D0F);
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.1e1;
    vec3 _t0D14 = [_t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.57735026919e0;
    real _t0D16 = 0.57735026919e0;
    real _t0D17 = -0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    vec3 _t0D19 = [_t0D16, _t0D17, _t0D18];
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D19, refPos0CEC);
    real _t0D1B = prim -0026<$[]> (_t0D15, _t0D1A);
    real _t0D1C = 0.57735026919e0;
    real _t0D1D = -0.57735026919e0;
    real _t0D1E = 0.57735026919e0;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = prim •00CE<$[3]; $[3]; $[]> (_t0D1F, dPos0CED);
    real _t0D21 = prim /0055 (_t0D1B, _t0D20);
    vec3 _t0D22 = prim *0038<$[3]> (dPos0CED, _t0D21);
    vec3 _t0D23 = prim +0017<$[3]> (_t0D22, refPos0CEC);
    real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D14, _t0D23);
    bool _t0D25 = prim >0080 (_t0D10, _t0D24);
    real _t0D26 = 0.1e-4;
    real _t0D27 = 0.1e-4;
    real _t0D28 = 0.1e-4;
    vec3 _t0D29 = [_t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.57735026919e0;
    real _t0D2B = 0.57735026919e0;
    real _t0D2C = -0.57735026919e0;
    real _t0D2D = 0.57735026919e0;
    vec3 _t0D2E = [_t0D2B, _t0D2C, _t0D2D];
    real _t0D2F = prim •00CE<$[3]; $[3]; $[]> (_t0D2E, refPos0CEC);
    real _t0D30 = prim -0026<$[]> (_t0D2A, _t0D2F);
    real _t0D31 = 0.57735026919e0;
    real _t0D32 = -0.57735026919e0;
    real _t0D33 = 0.57735026919e0;
    vec3 _t0D34 = [_t0D31, _t0D32, _t0D33];
    real _t0D35 = prim •00CE<$[3]; $[3]; $[]> (_t0D34, dPos0CED);
    real _t0D36 = prim /0055 (_t0D30, _t0D35);
    vec3 _t0D37 = prim *0038<$[3]> (dPos0CED, _t0D36);
    vec3 _t0D38 = prim +0017<$[3]> (_t0D37, refPos0CEC);
    vec3 _t0D39 = prim +0017<$[3]> (_t0D29, _t0D38);
    real _t0D3A = _t0D39[0];
    real _t0D3B = -0.e0;
    bool _t0D3C = prim >0080 (_t0D3A, _t0D3B);
    real _t0D3D = 0.1e-4;
    real _t0D3E = 0.1e-4;
    real _t0D3F = 0.1e-4;
    vec3 _t0D40 = [_t0D3D, _t0D3E, _t0D3F];
    real _t0D41 = 0.57735026919e0;
    real _t0D42 = 0.57735026919e0;
    real _t0D43 = -0.57735026919e0;
    real _t0D44 = 0.57735026919e0;
    vec3 _t0D45 = [_t0D42, _t0D43, _t0D44];
    real _t0D46 = prim •00CE<$[3]; $[3]; $[]> (_t0D45, refPos0CEC);
    real _t0D47 = prim -0026<$[]> (_t0D41, _t0D46);
    real _t0D48 = 0.57735026919e0;
    real _t0D49 = -0.57735026919e0;
    real _t0D4A = 0.57735026919e0;
    vec3 _t0D4B = [_t0D48, _t0D49, _t0D4A];
    real _t0D4C = prim •00CE<$[3]; $[3]; $[]> (_t0D4B, dPos0CED);
    real _t0D4D = prim /0055 (_t0D47, _t0D4C);
    vec3 _t0D4E = prim *0038<$[3]> (dPos0CED, _t0D4D);
    vec3 _t0D4F = prim +0017<$[3]> (_t0D4E, refPos0CEC);
    vec3 _t0D50 = prim +0017<$[3]> (_t0D40, _t0D4F);
    real _t0D51 = _t0D50[1];
    real _t0D52 = -0.e0;
    bool _t0D53 = prim >0080 (_t0D51, _t0D52);
    real _t0D54 = 0.1e-4;
    real _t0D55 = 0.1e-4;
    real _t0D56 = 0.1e-4;
    vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
    real _t0D58 = 0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    real _t0D5A = -0.57735026919e0;
    real _t0D5B = 0.57735026919e0;
    vec3 _t0D5C = [_t0D59, _t0D5A, _t0D5B];
    real _t0D5D = prim •00CE<$[3]; $[3]; $[]> (_t0D5C, refPos0CEC);
    real _t0D5E = prim -0026<$[]> (_t0D58, _t0D5D);
    real _t0D5F = 0.57735026919e0;
    real _t0D60 = -0.57735026919e0;
    real _t0D61 = 0.57735026919e0;
    vec3 _t0D62 = [_t0D5F, _t0D60, _t0D61];
    real _t0D63 = prim •00CE<$[3]; $[3]; $[]> (_t0D62, dPos0CED);
    real _t0D64 = prim /0055 (_t0D5E, _t0D63);
    vec3 _t0D65 = prim *0038<$[3]> (dPos0CED, _t0D64);
    vec3 _t0D66 = prim +0017<$[3]> (_t0D65, refPos0CEC);
    vec3 _t0D67 = prim +0017<$[3]> (_t0D57, _t0D66);
    real _t0D68 = _t0D67[2];
    real _t0D69 = -0.e0;
    bool _t0D6A = prim >0080 (_t0D68, _t0D69);
    bool _t0D6B = prim $and01C4 (_t0D53, _t0D6A);
    bool _t0D6C = prim $and01C4 (_t0D3C, _t0D6B);
    bool _t0D6D = prim $and01C4 (_t0D25, _t0D6C);
    if _t0D6D {
      real _t0D6E = 0.57735026919e0;
      real _t0D6F = 0.57735026919e0;
      real _t0D70 = -0.57735026919e0;
      real _t0D71 = 0.57735026919e0;
      vec3 _t0D72 = [_t0D6F, _t0D70, _t0D71];
      real _t0D73 = prim •00CE<$[3]; $[3]; $[]> (_t0D72, refPos0CEC);
      real _t0D74 = prim -0026<$[]> (_t0D6E, _t0D73);
      real _t0D75 = 0.57735026919e0;
      real _t0D76 = -0.57735026919e0;
      real _t0D77 = 0.57735026919e0;
      vec3 _t0D78 = [_t0D75, _t0D76, _t0D77];
      real _t0D79 = prim •00CE<$[3]; $[3]; $[]> (_t0D78, dPos0CED);
      time0CEE = prim /0055 (_t0D74, _t0D79);
      face0CEF = 0;
    }
  }
  real _t0D7A = 0.e0;
  real _t0D7B = 0.1e1;
  real _t0D7C = 0.e0;
  real _t0D7D = 0.e0;
  vec3 _t0D7E = [_t0D7B, _t0D7C, _t0D7D];
  real _t0D7F = prim •00CE<$[3]; $[3]; $[]> (_t0D7E, refPos0CEC);
  real _t0D80 = prim -0026<$[]> (_t0D7A, _t0D7F);
  real _t0D81 = 0.1e1;
  real _t0D82 = 0.e0;
  real _t0D83 = 0.e0;
  vec3 _t0D84 = [_t0D81, _t0D82, _t0D83];
  real _t0D85 = prim •00CE<$[3]; $[3]; $[]> (_t0D84, dPos0CED);
  real _t0D86 = prim /0055 (_t0D80, _t0D85);
  real _t0D87 = -0.e0;
  bool _t0D88 = prim >0080 (_t0D86, _t0D87);
  real _t0D89 = 0.e0;
  real _t0D8A = 0.1e1;
  real _t0D8B = 0.e0;
  real _t0D8C = 0.e0;
  vec3 _t0D8D = [_t0D8A, _t0D8B, _t0D8C];
  real _t0D8E = prim •00CE<$[3]; $[3]; $[]> (_t0D8D, refPos0CEC);
  real _t0D8F = prim -0026<$[]> (_t0D89, _t0D8E);
  real _t0D90 = 0.1e1;
  real _t0D91 = 0.e0;
  real _t0D92 = 0.e0;
  vec3 _t0D93 = [_t0D90, _t0D91, _t0D92];
  real _t0D94 = prim •00CE<$[3]; $[3]; $[]> (_t0D93, dPos0CED);
  real _t0D95 = prim /0055 (_t0D8F, _t0D94);
  bool _t0D96 = prim >0080 (time0CEE, _t0D95);
  bool _t0D97 = prim $and01C4 (_t0D88, _t0D96);
  if _t0D97 {
    real _t0D98 = 0.1e1;
    real _t0D99 = 0.1e-4;
    real _t0D9A = prim +0017<$[]> (_t0D98, _t0D99);
    real _t0D9B = 0.1e1;
    real _t0D9C = 0.1e1;
    real _t0D9D = 0.1e1;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CEC);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CED);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CED, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CEC);
    real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0D9E, _t0DAD);
    bool _t0DAF = prim >0080 (_t0D9A, _t0DAE);
    real _t0DB0 = 0.1e-4;
    real _t0DB1 = 0.1e-4;
    real _t0DB2 = 0.1e-4;
    vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0CEC);
    real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0CED);
    real _t0DC0 = prim /0055 (_t0DBA, _t0DBF);
    vec3 _t0DC1 = prim *0038<$[3]> (dPos0CED, _t0DC0);
    vec3 _t0DC2 = prim +0017<$[3]> (_t0DC1, refPos0CEC);
    vec3 _t0DC3 = prim +0017<$[3]> (_t0DB3, _t0DC2);
    real _t0DC4 = _t0DC3[0];
    real _t0DC5 = -0.e0;
    bool _t0DC6 = prim >0080 (_t0DC4, _t0DC5);
    real _t0DC7 = 0.1e-4;
    real _t0DC8 = 0.1e-4;
    real _t0DC9 = 0.1e-4;
    vec3 _t0DCA = [_t0DC7, _t0DC8, _t0DC9];
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.e0;
    vec3 _t0DCF = [_t0DCC, _t0DCD, _t0DCE];
    real _t0DD0 = prim •00CE<$[3]; $[3]; $[]> (_t0DCF, refPos0CEC);
    real _t0DD1 = prim -0026<$[]> (_t0DCB, _t0DD0);
    real _t0DD2 = 0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    vec3 _t0DD5 = [_t0DD2, _t0DD3, _t0DD4];
    real _t0DD6 = prim •00CE<$[3]; $[3]; $[]> (_t0DD5, dPos0CED);
    real _t0DD7 = prim /0055 (_t0DD1, _t0DD6);
    vec3 _t0DD8 = prim *0038<$[3]> (dPos0CED, _t0DD7);
    vec3 _t0DD9 = prim +0017<$[3]> (_t0DD8, refPos0CEC);
    vec3 _t0DDA = prim +0017<$[3]> (_t0DCA, _t0DD9);
    real _t0DDB = _t0DDA[1];
    real _t0DDC = -0.e0;
    bool _t0DDD = prim >0080 (_t0DDB, _t0DDC);
    real _t0DDE = 0.1e-4;
    real _t0DDF = 0.1e-4;
    real _t0DE0 = 0.1e-4;
    vec3 _t0DE1 = [_t0DDE, _t0DDF, _t0DE0];
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    real _t0DE5 = 0.e0;
    vec3 _t0DE6 = [_t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = prim •00CE<$[3]; $[3]; $[]> (_t0DE6, refPos0CEC);
    real _t0DE8 = prim -0026<$[]> (_t0DE2, _t0DE7);
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
    real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, dPos0CED);
    real _t0DEE = prim /0055 (_t0DE8, _t0DED);
    vec3 _t0DEF = prim *0038<$[3]> (dPos0CED, _t0DEE);
    vec3 _t0DF0 = prim +0017<$[3]> (_t0DEF, refPos0CEC);
    vec3 _t0DF1 = prim +0017<$[3]> (_t0DE1, _t0DF0);
    real _t0DF2 = _t0DF1[2];
    real _t0DF3 = -0.e0;
    bool _t0DF4 = prim >0080 (_t0DF2, _t0DF3);
    bool _t0DF5 = prim $and01C4 (_t0DDD, _t0DF4);
    bool _t0DF6 = prim $and01C4 (_t0DC6, _t0DF5);
    bool _t0DF7 = prim $and01C4 (_t0DAF, _t0DF6);
    if _t0DF7 {
      real _t0DF8 = 0.e0;
      real _t0DF9 = 0.1e1;
      real _t0DFA = 0.e0;
      real _t0DFB = 0.e0;
      vec3 _t0DFC = [_t0DF9, _t0DFA, _t0DFB];
      real _t0DFD = prim •00CE<$[3]; $[3]; $[]> (_t0DFC, refPos0CEC);
      real _t0DFE = prim -0026<$[]> (_t0DF8, _t0DFD);
      real _t0DFF = 0.1e1;
      real _t0E00 = 0.e0;
      real _t0E01 = 0.e0;
      vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
      real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, dPos0CED);
      time0CEE = prim /0055 (_t0DFE, _t0E03);
      face0CEF = 1;
    }
  }
  real _t0E04 = 0.e0;
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, refPos0CEC);
  real _t0E0A = prim -0026<$[]> (_t0E04, _t0E09);
  real _t0E0B = 0.e0;
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.e0;
  vec3 _t0E0E = [_t0E0B, _t0E0C, _t0E0D];
  real _t0E0F = prim •00CE<$[3]; $[3]; $[]> (_t0E0E, dPos0CED);
  real _t0E10 = prim /0055 (_t0E0A, _t0E0F);
  real _t0E11 = -0.e0;
  bool _t0E12 = prim >0080 (_t0E10, _t0E11);
  real _t0E13 = 0.e0;
  real _t0E14 = 0.e0;
  real _t0E15 = 0.1e1;
  real _t0E16 = 0.e0;
  vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
  real _t0E18 = prim •00CE<$[3]; $[3]; $[]> (_t0E17, refPos0CEC);
  real _t0E19 = prim -0026<$[]> (_t0E13, _t0E18);
  real _t0E1A = 0.e0;
  real _t0E1B = 0.1e1;
  real _t0E1C = 0.e0;
  vec3 _t0E1D = [_t0E1A, _t0E1B, _t0E1C];
  real _t0E1E = prim •00CE<$[3]; $[3]; $[]> (_t0E1D, dPos0CED);
  real _t0E1F = prim /0055 (_t0E19, _t0E1E);
  bool _t0E20 = prim >0080 (time0CEE, _t0E1F);
  bool _t0E21 = prim $and01C4 (_t0E12, _t0E20);
  if _t0E21 {
    real _t0E22 = 0.1e1;
    real _t0E23 = 0.1e-4;
    real _t0E24 = prim +0017<$[]> (_t0E22, _t0E23);
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.1e1;
    vec3 _t0E28 = [_t0E25, _t0E26, _t0E27];
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, refPos0CEC);
    real _t0E2F = prim -0026<$[]> (_t0E29, _t0E2E);
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    real _t0E32 = 0.e0;
    vec3 _t0E33 = [_t0E30, _t0E31, _t0E32];
    real _t0E34 = prim •00CE<$[3]; $[3]; $[]> (_t0E33, dPos0CED);
    real _t0E35 = prim /0055 (_t0E2F, _t0E34);
    vec3 _t0E36 = prim *0038<$[3]> (dPos0CED, _t0E35);
    vec3 _t0E37 = prim +0017<$[3]> (_t0E36, refPos0CEC);
    real _t0E38 = prim •00CE<$[3]; $[3]; $[]> (_t0E28, _t0E37);
    bool _t0E39 = prim >0080 (_t0E24, _t0E38);
    real _t0E3A = 0.1e-4;
    real _t0E3B = 0.1e-4;
    real _t0E3C = 0.1e-4;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CEC);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CED);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CED, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CEC);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[0];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-4;
    real _t0E52 = 0.1e-4;
    real _t0E53 = 0.1e-4;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CEC);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CED);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CED, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CEC);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[1];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    real _t0E68 = 0.1e-4;
    real _t0E69 = 0.1e-4;
    real _t0E6A = 0.1e-4;
    vec3 _t0E6B = [_t0E68, _t0E69, _t0E6A];
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    real _t0E6F = 0.e0;
    vec3 _t0E70 = [_t0E6D, _t0E6E, _t0E6F];
    real _t0E71 = prim •00CE<$[3]; $[3]; $[]> (_t0E70, refPos0CEC);
    real _t0E72 = prim -0026<$[]> (_t0E6C, _t0E71);
    real _t0E73 = 0.e0;
    real _t0E74 = 0.1e1;
    real _t0E75 = 0.e0;
    vec3 _t0E76 = [_t0E73, _t0E74, _t0E75];
    real _t0E77 = prim •00CE<$[3]; $[3]; $[]> (_t0E76, dPos0CED);
    real _t0E78 = prim /0055 (_t0E72, _t0E77);
    vec3 _t0E79 = prim *0038<$[3]> (dPos0CED, _t0E78);
    vec3 _t0E7A = prim +0017<$[3]> (_t0E79, refPos0CEC);
    vec3 _t0E7B = prim +0017<$[3]> (_t0E6B, _t0E7A);
    real _t0E7C = _t0E7B[2];
    real _t0E7D = -0.e0;
    bool _t0E7E = prim >0080 (_t0E7C, _t0E7D);
    bool _t0E7F = prim $and01C4 (_t0E67, _t0E7E);
    bool _t0E80 = prim $and01C4 (_t0E50, _t0E7F);
    bool _t0E81 = prim $and01C4 (_t0E39, _t0E80);
    if _t0E81 {
      real _t0E82 = 0.e0;
      real _t0E83 = 0.e0;
      real _t0E84 = 0.1e1;
      real _t0E85 = 0.e0;
      vec3 _t0E86 = [_t0E83, _t0E84, _t0E85];
      real _t0E87 = prim •00CE<$[3]; $[3]; $[]> (_t0E86, refPos0CEC);
      real _t0E88 = prim -0026<$[]> (_t0E82, _t0E87);
      real _t0E89 = 0.e0;
      real _t0E8A = 0.1e1;
      real _t0E8B = 0.e0;
      vec3 _t0E8C = [_t0E89, _t0E8A, _t0E8B];
      real _t0E8D = prim •00CE<$[3]; $[3]; $[]> (_t0E8C, dPos0CED);
      time0CEE = prim /0055 (_t0E88, _t0E8D);
      face0CEF = 2;
    }
  }
  real _t0E8E = 0.e0;
  real _t0E8F = 0.e0;
  real _t0E90 = 0.e0;
  real _t0E91 = 0.1e1;
  vec3 _t0E92 = [_t0E8F, _t0E90, _t0E91];
  real _t0E93 = prim •00CE<$[3]; $[3]; $[]> (_t0E92, refPos0CEC);
  real _t0E94 = prim -0026<$[]> (_t0E8E, _t0E93);
  real _t0E95 = 0.e0;
  real _t0E96 = 0.e0;
  real _t0E97 = 0.1e1;
  vec3 _t0E98 = [_t0E95, _t0E96, _t0E97];
  real _t0E99 = prim •00CE<$[3]; $[3]; $[]> (_t0E98, dPos0CED);
  real _t0E9A = prim /0055 (_t0E94, _t0E99);
  real _t0E9B = -0.e0;
  bool _t0E9C = prim >0080 (_t0E9A, _t0E9B);
  real _t0E9D = 0.e0;
  real _t0E9E = 0.e0;
  real _t0E9F = 0.e0;
  real _t0EA0 = 0.1e1;
  vec3 _t0EA1 = [_t0E9E, _t0E9F, _t0EA0];
  real _t0EA2 = prim •00CE<$[3]; $[3]; $[]> (_t0EA1, refPos0CEC);
  real _t0EA3 = prim -0026<$[]> (_t0E9D, _t0EA2);
  real _t0EA4 = 0.e0;
  real _t0EA5 = 0.e0;
  real _t0EA6 = 0.1e1;
  vec3 _t0EA7 = [_t0EA4, _t0EA5, _t0EA6];
  real _t0EA8 = prim •00CE<$[3]; $[3]; $[]> (_t0EA7, dPos0CED);
  real _t0EA9 = prim /0055 (_t0EA3, _t0EA8);
  bool _t0EAA = prim >0080 (time0CEE, _t0EA9);
  bool _t0EAB = prim $and01C4 (_t0E9C, _t0EAA);
  if _t0EAB {
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.1e-4;
    real _t0EAE = prim +0017<$[]> (_t0EAC, _t0EAD);
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.1e1;
    vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.1e1;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, refPos0CEC);
    real _t0EB9 = prim -0026<$[]> (_t0EB3, _t0EB8);
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.1e1;
    vec3 _t0EBD = [_t0EBA, _t0EBB, _t0EBC];
    real _t0EBE = prim •00CE<$[3]; $[3]; $[]> (_t0EBD, dPos0CED);
    real _t0EBF = prim /0055 (_t0EB9, _t0EBE);
    vec3 _t0EC0 = prim *0038<$[3]> (dPos0CED, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EC0, refPos0CEC);
    real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, _t0EC1);
    bool _t0EC3 = prim >0080 (_t0EAE, _t0EC2);
    real _t0EC4 = 0.1e-4;
    real _t0EC5 = 0.1e-4;
    real _t0EC6 = 0.1e-4;
    vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.e0;
    real _t0ECB = 0.1e1;
    vec3 _t0ECC = [_t0EC9, _t0ECA, _t0ECB];
    real _t0ECD = prim •00CE<$[3]; $[3]; $[]> (_t0ECC, refPos0CEC);
    real _t0ECE = prim -0026<$[]> (_t0EC8, _t0ECD);
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.1e1;
    vec3 _t0ED2 = [_t0ECF, _t0ED0, _t0ED1];
    real _t0ED3 = prim •00CE<$[3]; $[3]; $[]> (_t0ED2, dPos0CED);
    real _t0ED4 = prim /0055 (_t0ECE, _t0ED3);
    vec3 _t0ED5 = prim *0038<$[3]> (dPos0CED, _t0ED4);
    vec3 _t0ED6 = prim +0017<$[3]> (_t0ED5, refPos0CEC);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0EC7, _t0ED6);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = -0.e0;
    bool _t0EDA = prim >0080 (_t0ED8, _t0ED9);
    real _t0EDB = 0.1e-4;
    real _t0EDC = 0.1e-4;
    real _t0EDD = 0.1e-4;
    vec3 _t0EDE = [_t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.e0;
    real _t0EE2 = 0.1e1;
    vec3 _t0EE3 = [_t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = prim •00CE<$[3]; $[3]; $[]> (_t0EE3, refPos0CEC);
    real _t0EE5 = prim -0026<$[]> (_t0EDF, _t0EE4);
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.1e1;
    vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, dPos0CED);
    real _t0EEB = prim /0055 (_t0EE5, _t0EEA);
    vec3 _t0EEC = prim *0038<$[3]> (dPos0CED, _t0EEB);
    vec3 _t0EED = prim +0017<$[3]> (_t0EEC, refPos0CEC);
    vec3 _t0EEE = prim +0017<$[3]> (_t0EDE, _t0EED);
    real _t0EEF = _t0EEE[1];
    real _t0EF0 = -0.e0;
    bool _t0EF1 = prim >0080 (_t0EEF, _t0EF0);
    real _t0EF2 = 0.1e-4;
    real _t0EF3 = 0.1e-4;
    real _t0EF4 = 0.1e-4;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.1e1;
    vec3 _t0EFA = [_t0EF7, _t0EF8, _t0EF9];
    real _t0EFB = prim •00CE<$[3]; $[3]; $[]> (_t0EFA, refPos0CEC);
    real _t0EFC = prim -0026<$[]> (_t0EF6, _t0EFB);
    real _t0EFD = 0.e0;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.1e1;
    vec3 _t0F00 = [_t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = prim •00CE<$[3]; $[3]; $[]> (_t0F00, dPos0CED);
    real _t0F02 = prim /0055 (_t0EFC, _t0F01);
    vec3 _t0F03 = prim *0038<$[3]> (dPos0CED, _t0F02);
    vec3 _t0F04 = prim +0017<$[3]> (_t0F03, refPos0CEC);
    vec3 _t0F05 = prim +0017<$[3]> (_t0EF5, _t0F04);
    real _t0F06 = _t0F05[2];
    real _t0F07 = -0.e0;
    bool _t0F08 = prim >0080 (_t0F06, _t0F07);
    bool _t0F09 = prim $and01C4 (_t0EF1, _t0F08);
    bool _t0F0A = prim $and01C4 (_t0EDA, _t0F09);
    bool _t0F0B = prim $and01C4 (_t0EC3, _t0F0A);
    if _t0F0B {
      real _t0F0C = 0.e0;
      real _t0F0D = 0.e0;
      real _t0F0E = 0.e0;
      real _t0F0F = 0.1e1;
      vec3 _t0F10 = [_t0F0D, _t0F0E, _t0F0F];
      real _t0F11 = prim •00CE<$[3]; $[3]; $[]> (_t0F10, refPos0CEC);
      real _t0F12 = prim -0026<$[]> (_t0F0C, _t0F11);
      real _t0F13 = 0.e0;
      real _t0F14 = 0.e0;
      real _t0F15 = 0.1e1;
      vec3 _t0F16 = [_t0F13, _t0F14, _t0F15];
      real _t0F17 = prim •00CE<$[3]; $[3]; $[]> (_t0F16, dPos0CED);
      time0CEE = prim /0055 (_t0F12, _t0F17);
      face0CEF = 3;
    }
  }
  int _t0F18 = -1;
  bool _t0F19 = prim !=0086 (face0CEF, _t0F18);
  if _t0F19 {
    real _t0F1A = (real)face0CEF;
    vec2 _t0F1B = [time0CEE, _t0F1A];
    return _t0F1B;
  } else {
    real _t0F1C = -0.1e1;
    real _t0F1D = -0.1e1;
    vec2 _t0F1E = [_t0F1C, _t0F1D];
    return _t0F1E;
  }
}
function vec2#0 _exit0F1F (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0F20 = +inf;
  int face0F21 = -1;
  real _t0F22 = 0.57735026919e0;
  real _t0F23 = 0.57735026919e0;
  real _t0F24 = -0.57735026919e0;
  real _t0F25 = 0.57735026919e0;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0CEC);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.57735026919e0;
  real _t0F2A = -0.57735026919e0;
  real _t0F2B = 0.57735026919e0;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0CED);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  real _t0F2F = -0.e0;
  bool _t0F30 = prim >0080 (_t0F2E, _t0F2F);
  real _t0F31 = 0.57735026919e0;
  real _t0F32 = 0.57735026919e0;
  real _t0F33 = -0.57735026919e0;
  real _t0F34 = 0.57735026919e0;
  vec3 _t0F35 = [_t0F32, _t0F33, _t0F34];
  real _t0F36 = prim •00CE<$[3]; $[3]; $[]> (_t0F35, refPos0CEC);
  real _t0F37 = prim -0026<$[]> (_t0F31, _t0F36);
  real _t0F38 = 0.57735026919e0;
  real _t0F39 = -0.57735026919e0;
  real _t0F3A = 0.57735026919e0;
  vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
  real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, dPos0CED);
  real _t0F3D = prim /0055 (_t0F37, _t0F3C);
  bool _t0F3E = prim >0080 (time0F20, _t0F3D);
  bool _t0F3F = prim $and01C4 (_t0F30, _t0F3E);
  if _t0F3F {
    real _t0F40 = 0.57735026919e0;
    real _t0F41 = 0.57735026919e0;
    real _t0F42 = -0.57735026919e0;
    real _t0F43 = 0.57735026919e0;
    vec3 _t0F44 = [_t0F41, _t0F42, _t0F43];
    real _t0F45 = prim •00CE<$[3]; $[3]; $[]> (_t0F44, refPos0CEC);
    real _t0F46 = prim -0026<$[]> (_t0F40, _t0F45);
    real _t0F47 = 0.57735026919e0;
    real _t0F48 = -0.57735026919e0;
    real _t0F49 = 0.57735026919e0;
    vec3 _t0F4A = [_t0F47, _t0F48, _t0F49];
    real _t0F4B = prim •00CE<$[3]; $[3]; $[]> (_t0F4A, dPos0CED);
    time0F20 = prim /0055 (_t0F46, _t0F4B);
    face0F21 = 0;
  }
  real _t0F4C = 0.e0;
  real _t0F4D = 0.1e1;
  real _t0F4E = 0.e0;
  real _t0F4F = 0.e0;
  vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
  real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0CEC);
  real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
  real _t0F53 = 0.1e1;
  real _t0F54 = 0.e0;
  real _t0F55 = 0.e0;
  vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
  real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0CED);
  real _t0F58 = prim /0055 (_t0F52, _t0F57);
  real _t0F59 = -0.e0;
  bool _t0F5A = prim >0080 (_t0F58, _t0F59);
  real _t0F5B = 0.e0;
  real _t0F5C = 0.1e1;
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  vec3 _t0F5F = [_t0F5C, _t0F5D, _t0F5E];
  real _t0F60 = prim •00CE<$[3]; $[3]; $[]> (_t0F5F, refPos0CEC);
  real _t0F61 = prim -0026<$[]> (_t0F5B, _t0F60);
  real _t0F62 = 0.1e1;
  real _t0F63 = 0.e0;
  real _t0F64 = 0.e0;
  vec3 _t0F65 = [_t0F62, _t0F63, _t0F64];
  real _t0F66 = prim •00CE<$[3]; $[3]; $[]> (_t0F65, dPos0CED);
  real _t0F67 = prim /0055 (_t0F61, _t0F66);
  bool _t0F68 = prim >0080 (time0F20, _t0F67);
  bool _t0F69 = prim $and01C4 (_t0F5A, _t0F68);
  if _t0F69 {
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    vec3 _t0F6E = [_t0F6B, _t0F6C, _t0F6D];
    real _t0F6F = prim •00CE<$[3]; $[3]; $[]> (_t0F6E, refPos0CEC);
    real _t0F70 = prim -0026<$[]> (_t0F6A, _t0F6F);
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
    real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, dPos0CED);
    time0F20 = prim /0055 (_t0F70, _t0F75);
    face0F21 = 1;
  }
  real _t0F76 = 0.e0;
  real _t0F77 = 0.e0;
  real _t0F78 = 0.1e1;
  real _t0F79 = 0.e0;
  vec3 _t0F7A = [_t0F77, _t0F78, _t0F79];
  real _t0F7B = prim •00CE<$[3]; $[3]; $[]> (_t0F7A, refPos0CEC);
  real _t0F7C = prim -0026<$[]> (_t0F76, _t0F7B);
  real _t0F7D = 0.e0;
  real _t0F7E = 0.1e1;
  real _t0F7F = 0.e0;
  vec3 _t0F80 = [_t0F7D, _t0F7E, _t0F7F];
  real _t0F81 = prim •00CE<$[3]; $[3]; $[]> (_t0F80, dPos0CED);
  real _t0F82 = prim /0055 (_t0F7C, _t0F81);
  real _t0F83 = -0.e0;
  bool _t0F84 = prim >0080 (_t0F82, _t0F83);
  real _t0F85 = 0.e0;
  real _t0F86 = 0.e0;
  real _t0F87 = 0.1e1;
  real _t0F88 = 0.e0;
  vec3 _t0F89 = [_t0F86, _t0F87, _t0F88];
  real _t0F8A = prim •00CE<$[3]; $[3]; $[]> (_t0F89, refPos0CEC);
  real _t0F8B = prim -0026<$[]> (_t0F85, _t0F8A);
  real _t0F8C = 0.e0;
  real _t0F8D = 0.1e1;
  real _t0F8E = 0.e0;
  vec3 _t0F8F = [_t0F8C, _t0F8D, _t0F8E];
  real _t0F90 = prim •00CE<$[3]; $[3]; $[]> (_t0F8F, dPos0CED);
  real _t0F91 = prim /0055 (_t0F8B, _t0F90);
  bool _t0F92 = prim >0080 (time0F20, _t0F91);
  bool _t0F93 = prim $and01C4 (_t0F84, _t0F92);
  if _t0F93 {
    real _t0F94 = 0.e0;
    real _t0F95 = 0.e0;
    real _t0F96 = 0.1e1;
    real _t0F97 = 0.e0;
    vec3 _t0F98 = [_t0F95, _t0F96, _t0F97];
    real _t0F99 = prim •00CE<$[3]; $[3]; $[]> (_t0F98, refPos0CEC);
    real _t0F9A = prim -0026<$[]> (_t0F94, _t0F99);
    real _t0F9B = 0.e0;
    real _t0F9C = 0.1e1;
    real _t0F9D = 0.e0;
    vec3 _t0F9E = [_t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = prim •00CE<$[3]; $[3]; $[]> (_t0F9E, dPos0CED);
    time0F20 = prim /0055 (_t0F9A, _t0F9F);
    face0F21 = 2;
  }
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = 0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0CEC);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = 0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0CED);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  real _t0FAD = -0.e0;
  bool _t0FAE = prim >0080 (_t0FAC, _t0FAD);
  real _t0FAF = 0.e0;
  real _t0FB0 = 0.e0;
  real _t0FB1 = 0.e0;
  real _t0FB2 = 0.1e1;
  vec3 _t0FB3 = [_t0FB0, _t0FB1, _t0FB2];
  real _t0FB4 = prim •00CE<$[3]; $[3]; $[]> (_t0FB3, refPos0CEC);
  real _t0FB5 = prim -0026<$[]> (_t0FAF, _t0FB4);
  real _t0FB6 = 0.e0;
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.1e1;
  vec3 _t0FB9 = [_t0FB6, _t0FB7, _t0FB8];
  real _t0FBA = prim •00CE<$[3]; $[3]; $[]> (_t0FB9, dPos0CED);
  real _t0FBB = prim /0055 (_t0FB5, _t0FBA);
  bool _t0FBC = prim >0080 (time0F20, _t0FBB);
  bool _t0FBD = prim $and01C4 (_t0FAE, _t0FBC);
  if _t0FBD {
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    vec3 _t0FC2 = [_t0FBF, _t0FC0, _t0FC1];
    real _t0FC3 = prim •00CE<$[3]; $[3]; $[]> (_t0FC2, refPos0CEC);
    real _t0FC4 = prim -0026<$[]> (_t0FBE, _t0FC3);
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    vec3 _t0FC8 = [_t0FC5, _t0FC6, _t0FC7];
    real _t0FC9 = prim •00CE<$[3]; $[3]; $[]> (_t0FC8, dPos0CED);
    time0F20 = prim /0055 (_t0FC4, _t0FC9);
    face0F21 = 3;
  }
  int _t0FCA = -1;
  bool _t0FCB = prim !=0086 (face0F21, _t0FCA);
  if _t0FCB {
    real _t0FCC = (real)face0F21;
    vec2 _t0FCD = [time0F20, _t0FCC];
    return _t0FCD;
  } else {
    real _t0FCE = -0.1e1;
    real _t0FCF = -0.1e1;
    vec2 _t0FD0 = [_t0FCE, _t0FCF];
    return _t0FD0;
  }
}
function Femdata: Mesh#0 domain0FD1 (Femdata: Space arg00FD2)
{
  Femdata: Mesh _t0FD3 = extractFem(arg00FD2, Mesh);
  return _t0FD3;
}
function Femdata: Space#0 space0FD4 (Femdata: FemFunc arg00FD5)
{
  Femdata: Space _t0FD6 = extractFem(arg00FD5, Space);
  return _t0FD6;
}
function Femdata: FuncCell#0 funcCell0FD7 (Femdata: FemFunc arg00FD8, Femdata: MeshCell arg10FD9)
{
  int _t0FDA = extractFemItem(CellIndex(MeshCell), int, arg10FD9);
  Femdata: FuncCell _t0FDB = loadFem(FuncCell, arg00FD8, _t0FDA);
  return _t0FDB;
}
function real#1 mask0FEB (vec3 x0FEC)
{
  real _t0FED = 0.1e1;
  return _t0FED;
}
function vec3#1 color0FF4 (vec3 x0FF5)
{
  real _t0FF6 = prim @00A5<#∞; %3; $[]> (V0FE7, x0FF5);
  vec3 _t0FF7 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t0FF6);
  return _t0FF7;
}
function real#1 alpha0FF8 (real v0FF9, real g0FFA)
{
  real _t0FFB = 0.e0;
  real _t0FFC = 0.1e1;
  real _t0FFD = 0.13e1;
  real _t0FFE = 0.1e1;
  real _t0FFF = prim |()|00B5<$[]> (v0FF9);
  real _t1000 = prim *0034 (g0FFA, thick0440);
  real _t1001 = prim /0055 (_t0FFF, _t1000);
  real _t1002 = prim -0026<$[]> (_t0FFE, _t1001);
  real _t1003 = prim *0034 (_t0FFD, _t1002);
  real _t1004 = prim clamp0094<$[]> (_t0FFB, _t0FFC, _t1003);
  return _t1004;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058 = func alpha0FF8 (val1053, _t1057);
                  real _t1059 = func mask0FEB (x103E);
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070 = func color0FF4 (x103E);
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function Femdata: RefCell#0 refcell04B2 (Femdata: Mesh arg004B3)
{
  Femdata: RefCell _t04B4 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004B3);
  return _t04B4;
}
function Femdata: MeshCell[]#0 cells04B5 (Femdata: Mesh arg004B6)
{
  Femdata: MeshCell[] _t04B7 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004B6);
  return _t04B7;
}
function Femdata: MeshCell[]#0 cells04B8 (Femdata: Mesh arg004B6)
{
  int _t04B9 = 0;
  int _t04BA = extractFemItem(NumCell(Mesh), int, arg004B6);
  int[] _t04BB = prim $range01C3 (_t04B9, _t04BA);
  Femdata: MeshCell[] accum04BE = {};
  foreach i04BC in _t04BB {
    Femdata: MeshCell _t04BD = loadFem(MeshCell, arg004B6, i04BC);
    accum04BE = prim @0010<Femdata: MeshCell> (accum04BE, _t04BD);
  }
  return accum04BE;
}
function int#0 numCell04BF (Femdata: Mesh arg004B3)
{
  int _t04C0 = extractFemItem(NumCell(Mesh), int, arg004B3);
  return _t04C0;
}
function tensor[3,3,3,3]#0 msh_transform_304C1 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04C5 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04C6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C5);
  field(3)[3,3,3] _t04C7 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04C6);
  field(3)[3,3,3,3] _t04C8 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04C7);
  tensor[3,3,3,3] _t04C9 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04C8, pos04C2);
  return _t04C9;
}
function tensor[3,3,3]#0 msh_transform_204CA (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04CB = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04CC = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04CB);
  field(3)[3,3,3] _t04CD = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04CC);
  tensor[3,3,3] _t04CE = prim @00A5<#∞; %3; $[3,3,3]> (_t04CD, pos04C2);
  return _t04CE;
}
function tensor[3,3]#0 msh_transform_104CF (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D0 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  field(3)[3,3] _t04D1 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D0);
  tensor[3,3] _t04D2 = prim @00A5<#∞; %3; $[3,3]> (_t04D1, pos04C2);
  return _t04D2;
}
function vec3#2 msh_transform_004D3 (vec3 pos04C2, int cell04C3, Femdata: Mesh mesh04C4)
{
  field(3)[3] _t04D4 = femField(mesh04C4,cell04C3,field(3)[3],Transform,);
  vec3 _t04D5 = prim @00A5<#∞; %3; $[3]> (_t04D4, pos04C2);
  return _t04D5;
}
function Femdata: MeshPos#0 _msh_newtonInverse04D6 (vec3 pos04D7, int cellInt04D8, Femdata: Mesh mesh04D9)
{
  real _t04DA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04DC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04DD = [_t04DA, _t04DB, _t04DC];
  field(3)[3] _t04DE = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
  field(3)[3,3] _t04DF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04DE);
  field(3)[3,3] _t04E0 = prim inv015E<#∞; %3> (_t04DF);
  real _t04E1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04E3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04E4 = [_t04E1, _t04E2, _t04E3];
  A04E5 = prim @00A5<#∞; %3; $[3,3]> (_t04E0, _t04E4);
  int _t04E6 = 0;
  int _t04E7 = 2;
  int[] _t04E8 = prim $range01C3 (_t04E6, _t04E7);
  foreach itter0518 in _t04E8 {
    field(3)[3] _t04E9 = femField(mesh04D9,cellInt04D8,field(3)[3],Transform,);
    field(3)[3] _t04EA = prim -002E<#∞; %3; $[3]> (_t04E9, pos04D7);
    field(3)[3] _t04EB = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04E5, _t04EA);
    delta04EC = prim @00A5<#∞; %3; $[3]> (_t04EB, xn04DD);
    xn04DD = prim -0026<$[3]> (xn04DD, delta04EC);
    real _t04ED = 0.1e-7;
    real _t04EE = 0.1e-7;
    real _t04EF = prim *0034 (_t04ED, _t04EE);
    real _t04F0 = prim •00CE<$[3]; $[3]; $[]> (delta04EC, delta04EC);
    bool _t04F1 = prim >=007E (_t04EF, _t04F0);
    if _t04F1 {
      real _t04F2 = 0.1e1;
      real _t04F3 = 0.1e-4;
      real _t04F4 = prim +0017<$[]> (_t04F2, _t04F3);
      real _t04F5 = 0.1e1;
      real _t04F6 = 0.1e1;
      real _t04F7 = 0.1e1;
      vec3 _t04F8 = [_t04F5, _t04F6, _t04F7];
      real _t04F9 = prim •00CE<$[3]; $[3]; $[]> (_t04F8, xn04DD);
      bool _t04FA = prim >0080 (_t04F4, _t04F9);
      real _t04FB = 0.1e-4;
      real _t04FC = 0.1e-4;
      real _t04FD = 0.1e-4;
      vec3 _t04FE = [_t04FB, _t04FC, _t04FD];
      vec3 _t04FF = prim +0017<$[3]> (_t04FE, xn04DD);
      real _t0500 = _t04FF[0];
      real _t0501 = -0.e0;
      bool _t0502 = prim >0080 (_t0500, _t0501);
      real _t0503 = 0.1e-4;
      real _t0504 = 0.1e-4;
      real _t0505 = 0.1e-4;
      vec3 _t0506 = [_t0503, _t0504, _t0505];
      vec3 _t0507 = prim +0017<$[3]> (_t0506, xn04DD);
      real _t0508 = _t0507[1];
      real _t0509 = -0.e0;
      bool _t050A = prim >0080 (_t0508, _t0509);
      real _t050B = 0.1e-4;
      real _t050C = 0.1e-4;
      real _t050D = 0.1e-4;
      vec3 _t050E = [_t050B, _t050C, _t050D];
      vec3 _t050F = prim +0017<$[3]> (_t050E, xn04DD);
      real _t0510 = _t050F[2];
      real _t0511 = -0.e0;
      bool _t0512 = prim >0080 (_t0510, _t0511);
      bool _t0513 = prim $and01C4 (_t050A, _t0512);
      bool _t0514 = prim $and01C4 (_t0502, _t0513);
      bool _t0515 = prim $and01C4 (_t04FA, _t0514);
      if _t0515 {
        Femdata: MeshPos _t0516 = extractFemItemN((mesh04D9, cellInt04D8, xn04DD, pos04D7),AllBuild(MeshPos),);
        return _t0516;
      } else {
        Femdata: MeshPos _t0517 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
        return _t0517;
      }
    }
  }
  Femdata: MeshPos _t0519 = extractFemItemN((mesh04D9),InvalidBuild(MeshPos),);
  return _t0519;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos051A (Femdata: MeshPos pos051B)
{
  bool _t051C = extractFemItem(WorldTest(MeshPos), bool, pos051B);
  if _t051C {
    vec3 _t051D = extractFemItem(RefPos(MeshPos), vec3, pos051B);
    int _t051E = extractFemItem(CellIndex(MeshPos), int, pos051B);
    Femdata: Mesh _t051F = extractFem(pos051B, Mesh);
    vec3 _t0520 = func msh_transform_004D3 (_t051D, _t051E, _t051F);
    Femdata: MeshPos _t0521 = extractFemItemN((pos051B, _t0520),NewWorld(MeshPos),);
    return _t0521;
  } else {
    return pos051B;
  }
}
function vec3#0 worldPos0522 (Femdata: MeshPos pos051B)
{
  vec3 _t0523 = extractFemItem(RefPos(MeshPos), vec3, pos051B);
  int _t0524 = extractFemItem(CellIndex(MeshPos), int, pos051B);
  Femdata: Mesh _t0525 = extractFem(pos051B, Mesh);
  vec3 _t0526 = func msh_transform_004D3 (_t0523, _t0524, _t0525);
  return _t0526;
}
function Femdata: MeshPos#0 $exitPos0527 (Femdata: Mesh mesh0528, int cellId0529, vec3 refPos052A, vec3 dPos052B, real[2] time052C)
{
  int _t052D = -1;
  real _t052E = time052C[1];
  int _t052F = prim $r2i01B7 (_t052E);
  int[2] _t0531 = func nextCell40530 (_t052F, cellId0529, mesh0528);
  int _t0532 = 0;
  int _t0533 = prim $sub01C0<int; %2> (_t0531, _t0532);
  bool _t0534 = prim !=0086 (_t052D, _t0533);
  if _t0534 {
    real _t0535 = time052C[1];
    int _t0536 = prim $r2i01B7 (_t0535);
    int[2] _t0537 = func nextCell40530 (_t0536, cellId0529, mesh0528);
    int _t0538 = 0;
    int _t0539 = prim $sub01C0<int; %2> (_t0537, _t0538);
    real _t053A = 0.1e1;
    real _t053B = 0.e0;
    real _t053C = 0.e0;
    real _t053D = 0.e0;
    vec4 _t053E = [_t053A, _t053B, _t053C, _t053D];
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    real _t0541 = 0.e0;
    real _t0542 = 0.e0;
    vec4 _t0543 = [_t053F, _t0540, _t0541, _t0542];
    real _t0544 = 0.e0;
    real _t0545 = 0.e0;
    real _t0546 = 0.1e1;
    real _t0547 = 0.e0;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.222044604925e-15;
    real _t054A = 0.e0;
    real _t054B = 0.44408920985e-15;
    real _t054C = 0.1e1;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    tensor[4,4] _t054E = [_t053E, _t0543, _t0548, _t054D];
    real _t054F = 0.173205080757e1;
    real _t0550 = 0.173205080757e1;
    real _t0551 = 0.173205080757e1;
    real _t0552 = -0.173205080757e1;
    vec4 _t0553 = [_t054F, _t0550, _t0551, _t0552];
    real _t0554 = 0.1e1;
    real _t0555 = 0.2e1;
    real _t0556 = 0.1e1;
    real _t0557 = -0.1e1;
    vec4 _t0558 = [_t0554, _t0555, _t0556, _t0557];
    real _t0559 = -0.1e1;
    real _t055A = -0.1e1;
    real _t055B = -0.192296268638e-15;
    real _t055C = 0.1e1;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.222044604925e-15;
    real _t055F = 0.e0;
    real _t0560 = 0.44408920985e-15;
    real _t0561 = 0.1e1;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    tensor[4,4] _t0563 = [_t0553, _t0558, _t055D, _t0562];
    real _t0564 = 0.1e1;
    real _t0565 = 0.2e1;
    real _t0566 = 0.1e1;
    real _t0567 = -0.1e1;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.173205080757e1;
    real _t056A = 0.173205080757e1;
    real _t056B = 0.173205080757e1;
    real _t056C = -0.173205080757e1;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = -0.1e1;
    real _t056F = -0.1e1;
    real _t0570 = -0.192296268638e-15;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.222044604925e-15;
    real _t0574 = 0.e0;
    real _t0575 = 0.44408920985e-15;
    real _t0576 = 0.1e1;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    tensor[4,4] _t0578 = [_t0568, _t056D, _t0572, _t0577];
    real _t0579 = 0.1e1;
    real _t057A = 0.2e1;
    real _t057B = 0.1e1;
    real _t057C = -0.1e1;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.1e1;
    real _t057F = -0.1e1;
    real _t0580 = -0.192296268638e-15;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.173205080757e1;
    real _t0584 = 0.173205080757e1;
    real _t0585 = 0.173205080757e1;
    real _t0586 = -0.173205080757e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.222044604925e-15;
    real _t0589 = 0.e0;
    real _t058A = 0.44408920985e-15;
    real _t058B = 0.1e1;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    tensor[4,4] _t058D = [_t057D, _t0582, _t0587, _t058C];
    tensor[4,4][4] _t058E = {_t054E, _t0563, _t0578, _t058D};
    real _t058F = 0.57735026919e0;
    real _t0590 = -0.1e1;
    real _t0591 = -0.1e1;
    real _t0592 = 0.1e1;
    vec4 _t0593 = [_t058F, _t0590, _t0591, _t0592];
    real _t0594 = -0.57735026919e0;
    real _t0595 = 0.1e1;
    real _t0596 = 0.e0;
    real _t0597 = 0.e0;
    vec4 _t0598 = [_t0594, _t0595, _t0596, _t0597];
    real _t0599 = 0.57735026919e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    real _t059C = 0.e0;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.e0;
    real _t059F = 0.e0;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.1e1;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    tensor[4,4] _t05A3 = [_t0593, _t0598, _t059D, _t05A2];
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.e0;
    real _t05A6 = 0.e0;
    real _t05A7 = 0.e0;
    vec4 _t05A8 = [_t05A4, _t05A5, _t05A6, _t05A7];
    real _t05A9 = 0.e0;
    real _t05AA = 0.1e1;
    real _t05AB = 0.e0;
    real _t05AC = 0.e0;
    vec4 _t05AD = [_t05A9, _t05AA, _t05AB, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.e0;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.1e1;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    tensor[4,4] _t05B8 = [_t05A8, _t05AD, _t05B2, _t05B7];
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.1e1;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    real _t05CB = 0.1e1;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    tensor[4,4] _t05CD = [_t05BD, _t05C2, _t05C7, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.e0;
    real _t05DF = 0.e0;
    real _t05E0 = 0.1e1;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    tensor[4,4] _t05E2 = [_t05D2, _t05D7, _t05DC, _t05E1];
    tensor[4,4][4] _t05E3 = {_t05A3, _t05B8, _t05CD, _t05E2};
    real _t05E4 = -0.1e1;
    real _t05E5 = 0.57735026919e0;
    real _t05E6 = -0.1e1;
    real _t05E7 = 0.1e1;
    vec4 _t05E8 = [_t05E4, _t05E5, _t05E6, _t05E7];
    real _t05E9 = 0.1e1;
    real _t05EA = -0.57735026919e0;
    real _t05EB = 0.e0;
    real _t05EC = 0.e0;
    vec4 _t05ED = [_t05E9, _t05EA, _t05EB, _t05EC];
    real _t05EE = 0.e0;
    real _t05EF = 0.57735026919e0;
    real _t05F0 = 0.1e1;
    real _t05F1 = 0.e0;
    vec4 _t05F2 = [_t05EE, _t05EF, _t05F0, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.1e1;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    tensor[4,4] _t05F8 = [_t05E8, _t05ED, _t05F2, _t05F7];
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    real _t05FC = 0.e0;
    vec4 _t05FD = [_t05F9, _t05FA, _t05FB, _t05FC];
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.1e1;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    tensor[4,4] _t060D = [_t05FD, _t0602, _t0607, _t060C];
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = 0.1e1;
    real _t0615 = 0.e0;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.1e1;
    real _t061B = 0.e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = 0.e0;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.1e1;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    tensor[4,4] _t0622 = [_t0612, _t0617, _t061C, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.1e1;
    real _t062F = 0.e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.e0;
    real _t0634 = 0.e0;
    real _t0635 = 0.1e1;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    tensor[4,4] _t0637 = [_t0627, _t062C, _t0631, _t0636];
    tensor[4,4][4] _t0638 = {_t05F8, _t060D, _t0622, _t0637};
    real _t0639 = -0.1e1;
    real _t063A = -0.1e1;
    real _t063B = 0.57735026919e0;
    real _t063C = 0.1e1;
    vec4 _t063D = [_t0639, _t063A, _t063B, _t063C];
    real _t063E = 0.1e1;
    real _t063F = 0.e0;
    real _t0640 = -0.57735026919e0;
    real _t0641 = 0.e0;
    vec4 _t0642 = [_t063E, _t063F, _t0640, _t0641];
    real _t0643 = 0.e0;
    real _t0644 = 0.1e1;
    real _t0645 = 0.57735026919e0;
    real _t0646 = 0.e0;
    vec4 _t0647 = [_t0643, _t0644, _t0645, _t0646];
    real _t0648 = 0.e0;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.1e1;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    tensor[4,4] _t064D = [_t063D, _t0642, _t0647, _t064C];
    real _t064E = 0.e0;
    real _t064F = 0.e0;
    real _t0650 = 0.1e1;
    real _t0651 = 0.e0;
    vec4 _t0652 = [_t064E, _t064F, _t0650, _t0651];
    real _t0653 = 0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    real _t0656 = 0.e0;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.1e1;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    tensor[4,4] _t0662 = [_t0652, _t0657, _t065C, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.1e1;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    tensor[4,4] _t0677 = [_t0667, _t066C, _t0671, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.1e1;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.e0;
    real _t068A = 0.1e1;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    tensor[4,4] _t068C = [_t067C, _t0681, _t0686, _t068B];
    tensor[4,4][4] _t068D = {_t064D, _t0662, _t0677, _t068C};
    tensor[4,4][4][4] _t068E = {_t058E, _t05E3, _t0638, _t068D};
    real _t068F = time052C[1];
    int _t0690 = prim $r2i01B7 (_t068F);
    tensor[4,4][4] _t0691 = prim $sub01C0<tensor[4,4][4]; %4> (_t068E, _t0690);
    real _t0692 = time052C[1];
    int _t0693 = prim $r2i01B7 (_t0692);
    int[2] _t0694 = func nextCell40530 (_t0693, cellId0529, mesh0528);
    int _t0695 = 1;
    int _t0696 = prim $sub01C0<int; %2> (_t0694, _t0695);
    tensor[4,4] _t0697 = prim $sub01C0<tensor[4,4]; %4> (_t0691, _t0696);
    real _t0698 = time052C[0];
    vec3 _t0699 = prim *0036<$[3]> (_t0698, dPos052B);
    vec3 _t069A = prim +0017<$[3]> (_t0699, refPos052A);
    real _t069B = _t069A[0];
    real _t069C = time052C[0];
    vec3 _t069D = prim *0036<$[3]> (_t069C, dPos052B);
    vec3 _t069E = prim +0017<$[3]> (_t069D, refPos052A);
    real _t069F = _t069E[1];
    real _t06A0 = time052C[0];
    vec3 _t06A1 = prim *0036<$[3]> (_t06A0, dPos052B);
    vec3 _t06A2 = prim +0017<$[3]> (_t06A1, refPos052A);
    real _t06A3 = _t06A2[2];
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t069B, _t069F, _t06A3, _t06A4];
    vec4 _t06A6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0697, _t06A5);
    real _t06A7 = _t06A6[0];
    real _t06A8 = 0.1e1;
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.e0;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.e0;
    real _t06AE = 0.1e1;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = 0.e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.222044604925e-15;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.44408920985e-15;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.173205080757e1;
    real _t06BE = 0.173205080757e1;
    real _t06BF = 0.173205080757e1;
    real _t06C0 = -0.173205080757e1;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.2e1;
    real _t06C4 = 0.1e1;
    real _t06C5 = -0.1e1;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = -0.1e1;
    real _t06C8 = -0.1e1;
    real _t06C9 = -0.192296268638e-15;
    real _t06CA = 0.1e1;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.222044604925e-15;
    real _t06CD = 0.e0;
    real _t06CE = 0.44408920985e-15;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.2e1;
    real _t06D4 = 0.1e1;
    real _t06D5 = -0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.173205080757e1;
    real _t06D8 = 0.173205080757e1;
    real _t06D9 = 0.173205080757e1;
    real _t06DA = -0.173205080757e1;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = -0.1e1;
    real _t06DD = -0.1e1;
    real _t06DE = -0.192296268638e-15;
    real _t06DF = 0.1e1;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.222044604925e-15;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.44408920985e-15;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.2e1;
    real _t06E9 = 0.1e1;
    real _t06EA = -0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = -0.1e1;
    real _t06ED = -0.1e1;
    real _t06EE = -0.192296268638e-15;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.173205080757e1;
    real _t06F2 = 0.173205080757e1;
    real _t06F3 = 0.173205080757e1;
    real _t06F4 = -0.173205080757e1;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.222044604925e-15;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.44408920985e-15;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = 0.57735026919e0;
    real _t06FE = -0.1e1;
    real _t06FF = -0.1e1;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = -0.57735026919e0;
    real _t0703 = 0.1e1;
    real _t0704 = 0.e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.57735026919e0;
    real _t0708 = 0.e0;
    real _t0709 = 0.1e1;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    real _t0714 = 0.e0;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    real _t0752 = -0.1e1;
    real _t0753 = 0.57735026919e0;
    real _t0754 = -0.1e1;
    real _t0755 = 0.1e1;
    vec4 _t0756 = [_t0752, _t0753, _t0754, _t0755];
    real _t0757 = 0.1e1;
    real _t0758 = -0.57735026919e0;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.e0;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.1e1;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    tensor[4,4] _t0766 = [_t0756, _t075B, _t0760, _t0765];
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    real _t0769 = 0.e0;
    real _t076A = 0.e0;
    vec4 _t076B = [_t0767, _t0768, _t0769, _t076A];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.e0;
    real _t0773 = 0.1e1;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.1e1;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    tensor[4,4] _t077B = [_t076B, _t0770, _t0775, _t077A];
    real _t077C = 0.1e1;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.e0;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    real _t0783 = 0.e0;
    real _t0784 = 0.e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.1e1;
    real _t0789 = 0.e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = 0.e0;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    tensor[4,4] _t0790 = [_t0780, _t0785, _t078A, _t078F];
    real _t0791 = 0.1e1;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.e0;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    real _t0796 = 0.e0;
    real _t0797 = 0.e0;
    real _t0798 = 0.1e1;
    real _t0799 = 0.e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.e0;
    real _t079C = 0.1e1;
    real _t079D = 0.e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    tensor[4,4] _t07A5 = [_t0795, _t079A, _t079F, _t07A4];
    tensor[4,4][4] _t07A6 = {_t0766, _t077B, _t0790, _t07A5};
    real _t07A7 = -0.1e1;
    real _t07A8 = -0.1e1;
    real _t07A9 = 0.57735026919e0;
    real _t07AA = 0.1e1;
    vec4 _t07AB = [_t07A7, _t07A8, _t07A9, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = -0.57735026919e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.1e1;
    real _t07B3 = 0.57735026919e0;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.1e1;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    tensor[4,4] _t07BB = [_t07AB, _t07B0, _t07B5, _t07BA];
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    real _t07BF = 0.e0;
    vec4 _t07C0 = [_t07BC, _t07BD, _t07BE, _t07BF];
    real _t07C1 = 0.1e1;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    real _t07C4 = 0.e0;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.1e1;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    tensor[4,4] _t07D0 = [_t07C0, _t07C5, _t07CA, _t07CF];
    real _t07D1 = 0.1e1;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.1e1;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.1e1;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    tensor[4,4] _t07E5 = [_t07D5, _t07DA, _t07DF, _t07E4];
    real _t07E6 = 0.1e1;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.e0;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = 0.e0;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.1e1;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.e0;
    real _t07F8 = 0.1e1;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    tensor[4,4] _t07FA = [_t07EA, _t07EF, _t07F4, _t07F9];
    tensor[4,4][4] _t07FB = {_t07BB, _t07D0, _t07E5, _t07FA};
    tensor[4,4][4][4] _t07FC = {_t06FC, _t0751, _t07A6, _t07FB};
    real _t07FD = time052C[1];
    int _t07FE = prim $r2i01B7 (_t07FD);
    tensor[4,4][4] _t07FF = prim $sub01C0<tensor[4,4][4]; %4> (_t07FC, _t07FE);
    real _t0800 = time052C[1];
    int _t0801 = prim $r2i01B7 (_t0800);
    int[2] _t0802 = func nextCell40530 (_t0801, cellId0529, mesh0528);
    int _t0803 = 1;
    int _t0804 = prim $sub01C0<int; %2> (_t0802, _t0803);
    tensor[4,4] _t0805 = prim $sub01C0<tensor[4,4]; %4> (_t07FF, _t0804);
    real _t0806 = time052C[0];
    vec3 _t0807 = prim *0036<$[3]> (_t0806, dPos052B);
    vec3 _t0808 = prim +0017<$[3]> (_t0807, refPos052A);
    real _t0809 = _t0808[0];
    real _t080A = time052C[0];
    vec3 _t080B = prim *0036<$[3]> (_t080A, dPos052B);
    vec3 _t080C = prim +0017<$[3]> (_t080B, refPos052A);
    real _t080D = _t080C[1];
    real _t080E = time052C[0];
    vec3 _t080F = prim *0036<$[3]> (_t080E, dPos052B);
    vec3 _t0810 = prim +0017<$[3]> (_t080F, refPos052A);
    real _t0811 = _t0810[2];
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t0809, _t080D, _t0811, _t0812];
    vec4 _t0814 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0805, _t0813);
    real _t0815 = _t0814[1];
    real _t0816 = 0.1e1;
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.e0;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.e0;
    real _t081C = 0.1e1;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = 0.e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.222044604925e-15;
    real _t0826 = 0.e0;
    real _t0827 = 0.44408920985e-15;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.173205080757e1;
    real _t082C = 0.173205080757e1;
    real _t082D = 0.173205080757e1;
    real _t082E = -0.173205080757e1;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.2e1;
    real _t0832 = 0.1e1;
    real _t0833 = -0.1e1;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = -0.1e1;
    real _t0836 = -0.1e1;
    real _t0837 = -0.192296268638e-15;
    real _t0838 = 0.1e1;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.222044604925e-15;
    real _t083B = 0.e0;
    real _t083C = 0.44408920985e-15;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.2e1;
    real _t0842 = 0.1e1;
    real _t0843 = -0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.173205080757e1;
    real _t0846 = 0.173205080757e1;
    real _t0847 = 0.173205080757e1;
    real _t0848 = -0.173205080757e1;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = -0.1e1;
    real _t084B = -0.1e1;
    real _t084C = -0.192296268638e-15;
    real _t084D = 0.1e1;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.222044604925e-15;
    real _t0850 = 0.e0;
    real _t0851 = 0.44408920985e-15;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.2e1;
    real _t0857 = 0.1e1;
    real _t0858 = -0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = -0.1e1;
    real _t085B = -0.1e1;
    real _t085C = -0.192296268638e-15;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.173205080757e1;
    real _t0860 = 0.173205080757e1;
    real _t0861 = 0.173205080757e1;
    real _t0862 = -0.173205080757e1;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.222044604925e-15;
    real _t0865 = 0.e0;
    real _t0866 = 0.44408920985e-15;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = 0.57735026919e0;
    real _t086C = -0.1e1;
    real _t086D = -0.1e1;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = -0.57735026919e0;
    real _t0871 = 0.1e1;
    real _t0872 = 0.e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.57735026919e0;
    real _t0876 = 0.e0;
    real _t0877 = 0.1e1;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    real _t0882 = 0.e0;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    real _t08C0 = -0.1e1;
    real _t08C1 = 0.57735026919e0;
    real _t08C2 = -0.1e1;
    real _t08C3 = 0.1e1;
    vec4 _t08C4 = [_t08C0, _t08C1, _t08C2, _t08C3];
    real _t08C5 = 0.1e1;
    real _t08C6 = -0.57735026919e0;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.e0;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.1e1;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    tensor[4,4] _t08D4 = [_t08C4, _t08C9, _t08CE, _t08D3];
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    real _t08D7 = 0.e0;
    real _t08D8 = 0.e0;
    vec4 _t08D9 = [_t08D5, _t08D6, _t08D7, _t08D8];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.1e1;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.1e1;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    tensor[4,4] _t08E9 = [_t08D9, _t08DE, _t08E3, _t08E8];
    real _t08EA = 0.1e1;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.e0;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.1e1;
    real _t08F7 = 0.e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = 0.e0;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    tensor[4,4] _t08FE = [_t08EE, _t08F3, _t08F8, _t08FD];
    real _t08FF = 0.1e1;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.e0;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    real _t0904 = 0.e0;
    real _t0905 = 0.e0;
    real _t0906 = 0.1e1;
    real _t0907 = 0.e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.e0;
    real _t090A = 0.1e1;
    real _t090B = 0.e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    tensor[4,4] _t0913 = [_t0903, _t0908, _t090D, _t0912];
    tensor[4,4][4] _t0914 = {_t08D4, _t08E9, _t08FE, _t0913};
    real _t0915 = -0.1e1;
    real _t0916 = -0.1e1;
    real _t0917 = 0.57735026919e0;
    real _t0918 = 0.1e1;
    vec4 _t0919 = [_t0915, _t0916, _t0917, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = -0.57735026919e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.1e1;
    real _t0921 = 0.57735026919e0;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.1e1;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    tensor[4,4] _t0929 = [_t0919, _t091E, _t0923, _t0928];
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    real _t092D = 0.e0;
    vec4 _t092E = [_t092A, _t092B, _t092C, _t092D];
    real _t092F = 0.1e1;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    real _t0932 = 0.e0;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.1e1;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    tensor[4,4] _t093E = [_t092E, _t0933, _t0938, _t093D];
    real _t093F = 0.1e1;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.1e1;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.1e1;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    tensor[4,4] _t0953 = [_t0943, _t0948, _t094D, _t0952];
    real _t0954 = 0.1e1;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.e0;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = 0.e0;
    real _t095F = 0.e0;
    real _t0960 = 0.1e1;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.e0;
    real _t0966 = 0.1e1;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    tensor[4,4] _t0968 = [_t0958, _t095D, _t0962, _t0967];
    tensor[4,4][4] _t0969 = {_t0929, _t093E, _t0953, _t0968};
    tensor[4,4][4][4] _t096A = {_t086A, _t08BF, _t0914, _t0969};
    real _t096B = time052C[1];
    int _t096C = prim $r2i01B7 (_t096B);
    tensor[4,4][4] _t096D = prim $sub01C0<tensor[4,4][4]; %4> (_t096A, _t096C);
    real _t096E = time052C[1];
    int _t096F = prim $r2i01B7 (_t096E);
    int[2] _t0970 = func nextCell40530 (_t096F, cellId0529, mesh0528);
    int _t0971 = 1;
    int _t0972 = prim $sub01C0<int; %2> (_t0970, _t0971);
    tensor[4,4] _t0973 = prim $sub01C0<tensor[4,4]; %4> (_t096D, _t0972);
    real _t0974 = time052C[0];
    vec3 _t0975 = prim *0036<$[3]> (_t0974, dPos052B);
    vec3 _t0976 = prim +0017<$[3]> (_t0975, refPos052A);
    real _t0977 = _t0976[0];
    real _t0978 = time052C[0];
    vec3 _t0979 = prim *0036<$[3]> (_t0978, dPos052B);
    vec3 _t097A = prim +0017<$[3]> (_t0979, refPos052A);
    real _t097B = _t097A[1];
    real _t097C = time052C[0];
    vec3 _t097D = prim *0036<$[3]> (_t097C, dPos052B);
    vec3 _t097E = prim +0017<$[3]> (_t097D, refPos052A);
    real _t097F = _t097E[2];
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t0977, _t097B, _t097F, _t0980];
    vec4 _t0982 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0973, _t0981);
    real _t0983 = _t0982[2];
    vec3 _t0984 = [_t06A7, _t0815, _t0983];
    Femdata: MeshPos _t0985 = extractFemItemN((mesh0528, _t0539, _t0984),RefBuild(Mesh),);
    return _t0985;
  } else {
    real _t0986 = time052C[0];
    vec3 _t0987 = prim *0036<$[3]> (_t0986, dPos052B);
    vec3 _t0988 = prim +0017<$[3]> (_t0987, refPos052A);
    Femdata: MeshPos _t0989 = extractFemItemN((mesh0528, _t0988),InvalidBuildBoundary(MeshPos),);
    return _t0989;
  }
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
function int[2]#0 $nextCell20993 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  nearbyCells0994 = extractFemItem2(CellConnectivity(Mesh), int, mesh098C, cell098B : int);
  int _t0995 = 0;
  int _t0996 = 1;
  int _t0997 = 3;
  int[2] _t0998 = {_t0996, _t0997};
  int _t0999 = 3;
  int _t099A = 3;
  int[2] _t099B = {_t0999, _t099A};
  int _t099C = 9;
  int _t099D = 3;
  int[2] _t099E = {_t099C, _t099D};
  int _t099F = 27;
  int _t09A0 = 3;
  int[2] _t09A1 = {_t099F, _t09A0};
  int[2][4] _t09A2 = {_t0998, _t099B, _t099E, _t09A1};
  int[2] _t09A3 = prim $sub01C0<int[2]; %4> (_t09A2, faceIdx098A);
  int _t09A4 = 1;
  int _t09A5 = prim $sub01C0<int; %2> (_t09A3, _t09A4);
  int[] _t09A6 = prim $range01C3 (_t0995, _t09A5);
  int[] accum09C7 = {};
  foreach i09C4 in _t09A6 {
    int _t09A7 = 1;
    int _t09A8 = 2;
    int _t09A9 = 3;
    int _t09AA = 0;
    int _t09AB = 2;
    int _t09AC = 3;
    int _t09AD = 0;
    int _t09AE = 1;
    int _t09AF = 3;
    int _t09B0 = 0;
    int _t09B1 = 1;
    int _t09B2 = 2;
    int[12] _t09B3 = {_t09A7, _t09A8, _t09A9, _t09AA, _t09AB, _t09AC, _t09AD, _t09AE, _t09AF, _t09B0, _t09B1, _t09B2};
    int _t09B4 = 1;
    int _t09B5 = 3;
    int[2] _t09B6 = {_t09B4, _t09B5};
    int _t09B7 = 3;
    int _t09B8 = 3;
    int[2] _t09B9 = {_t09B7, _t09B8};
    int _t09BA = 9;
    int _t09BB = 3;
    int[2] _t09BC = {_t09BA, _t09BB};
    int _t09BD = 27;
    int _t09BE = 3;
    int[2] _t09BF = {_t09BD, _t09BE};
    int[2][4] _t09C0 = {_t09B6, _t09B9, _t09BC, _t09BF};
    int[2] _t09C1 = prim $sub01C0<int[2]; %4> (_t09C0, faceIdx098A);
    int _t09C2 = 0;
    int _t09C3 = prim $sub01C0<int; %2> (_t09C1, _t09C2);
    int _t09C5 = prim +0015 (_t09C3, i09C4);
    int _t09C6 = prim $sub01C0<int; %12> (_t09B3, _t09C5);
    accum09C7 = prim @0010<int> (accum09C7, _t09C6);
  }
  numFacetNodes09C8 = prim length0123<int> (accum09C7);
  int _t09C9 = 3;
  bool _t09CA = prim ==0082 (_t09C9, numFacetNodes09C8);
  if _t09CA {
    foreach cellInt09CB in nearbyCells0994 {
      int[4] _t09CC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09CD = 1;
      int _t09CE = prim $sub01C0<int; %4> (_t09CC, _t09CD);
      int[4] _t09CF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D0 = 2;
      int _t09D1 = prim $sub01C0<int; %4> (_t09CF, _t09D0);
      int[4] _t09D2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t09D3 = 3;
      int _t09D4 = prim $sub01C0<int; %4> (_t09D2, _t09D3);
      int[3] _t09D5 = {_t09CE, _t09D1, _t09D4};
      int _t09D6 = 0;
      int _t09D7 = prim $sub01C0<int; %3> (_t09D5, _t09D6);
      int _t09D8 = 0;
      int _t09D9 = 1;
      int _t09DA = 3;
      int[2] _t09DB = {_t09D9, _t09DA};
      int _t09DC = 3;
      int _t09DD = 3;
      int[2] _t09DE = {_t09DC, _t09DD};
      int _t09DF = 9;
      int _t09E0 = 3;
      int[2] _t09E1 = {_t09DF, _t09E0};
      int _t09E2 = 27;
      int _t09E3 = 3;
      int[2] _t09E4 = {_t09E2, _t09E3};
      int[2][4] _t09E5 = {_t09DB, _t09DE, _t09E1, _t09E4};
      int[2] _t09E6 = prim $sub01C0<int[2]; %4> (_t09E5, faceIdx098A);
      int _t09E7 = 1;
      int _t09E8 = prim $sub01C0<int; %2> (_t09E6, _t09E7);
      int[] _t09E9 = prim $range01C3 (_t09D8, _t09E8);
      int[] accum0A09 = {};
      foreach i09C4 in _t09E9 {
        int _t09EA = 1;
        int _t09EB = 2;
        int _t09EC = 3;
        int _t09ED = 0;
        int _t09EE = 2;
        int _t09EF = 3;
        int _t09F0 = 0;
        int _t09F1 = 1;
        int _t09F2 = 3;
        int _t09F3 = 0;
        int _t09F4 = 1;
        int _t09F5 = 2;
        int[12] _t09F6 = {_t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3, _t09F4, _t09F5};
        int _t09F7 = 1;
        int _t09F8 = 3;
        int[2] _t09F9 = {_t09F7, _t09F8};
        int _t09FA = 3;
        int _t09FB = 3;
        int[2] _t09FC = {_t09FA, _t09FB};
        int _t09FD = 9;
        int _t09FE = 3;
        int[2] _t09FF = {_t09FD, _t09FE};
        int _t0A00 = 27;
        int _t0A01 = 3;
        int[2] _t0A02 = {_t0A00, _t0A01};
        int[2][4] _t0A03 = {_t09F9, _t09FC, _t09FF, _t0A02};
        int[2] _t0A04 = prim $sub01C0<int[2]; %4> (_t0A03, faceIdx098A);
        int _t0A05 = 0;
        int _t0A06 = prim $sub01C0<int; %2> (_t0A04, _t0A05);
        int _t0A07 = prim +0015 (_t0A06, i09C4);
        int _t0A08 = prim $sub01C0<int; %12> (_t09F6, _t0A07);
        accum0A09 = prim @0010<int> (accum0A09, _t0A08);
      }
      int _t0A0A = 0;
      int _t0A0B = prim $dynsub01C2<int> (accum0A09, _t0A0A);
      bool _t0A0C = prim ==0082 (_t09D7, _t0A0B);
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx098A);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i09C4 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx098A);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i09C4);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 1;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 2;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx098A);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i09C4 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx098A);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i09C4);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 2;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      bool _t0A8F = prim $and01C4 (_t0A4D, _t0A8E);
      bool _t0A90 = prim $and01C4 (_t0A0C, _t0A8F);
      if _t0A90 {
        int _t0A91 = 0;
        int[2] _t0A92 = {cellInt09CB, _t0A91};
        return _t0A92;
      }
      int[4] _t0A93 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A94 = 0;
      int _t0A95 = prim $sub01C0<int; %4> (_t0A93, _t0A94);
      int[4] _t0A96 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A97 = 2;
      int _t0A98 = prim $sub01C0<int; %4> (_t0A96, _t0A97);
      int[4] _t0A99 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0A9A = 3;
      int _t0A9B = prim $sub01C0<int; %4> (_t0A99, _t0A9A);
      int[3] _t0A9C = {_t0A95, _t0A98, _t0A9B};
      int _t0A9D = 0;
      int _t0A9E = prim $sub01C0<int; %3> (_t0A9C, _t0A9D);
      int _t0A9F = 0;
      int _t0AA0 = 1;
      int _t0AA1 = 3;
      int[2] _t0AA2 = {_t0AA0, _t0AA1};
      int _t0AA3 = 3;
      int _t0AA4 = 3;
      int[2] _t0AA5 = {_t0AA3, _t0AA4};
      int _t0AA6 = 9;
      int _t0AA7 = 3;
      int[2] _t0AA8 = {_t0AA6, _t0AA7};
      int _t0AA9 = 27;
      int _t0AAA = 3;
      int[2] _t0AAB = {_t0AA9, _t0AAA};
      int[2][4] _t0AAC = {_t0AA2, _t0AA5, _t0AA8, _t0AAB};
      int[2] _t0AAD = prim $sub01C0<int[2]; %4> (_t0AAC, faceIdx098A);
      int _t0AAE = 1;
      int _t0AAF = prim $sub01C0<int; %2> (_t0AAD, _t0AAE);
      int[] _t0AB0 = prim $range01C3 (_t0A9F, _t0AAF);
      int[] accum0AD0 = {};
      foreach i09C4 in _t0AB0 {
        int _t0AB1 = 1;
        int _t0AB2 = 2;
        int _t0AB3 = 3;
        int _t0AB4 = 0;
        int _t0AB5 = 2;
        int _t0AB6 = 3;
        int _t0AB7 = 0;
        int _t0AB8 = 1;
        int _t0AB9 = 3;
        int _t0ABA = 0;
        int _t0ABB = 1;
        int _t0ABC = 2;
        int[12] _t0ABD = {_t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8, _t0AB9, _t0ABA, _t0ABB, _t0ABC};
        int _t0ABE = 1;
        int _t0ABF = 3;
        int[2] _t0AC0 = {_t0ABE, _t0ABF};
        int _t0AC1 = 3;
        int _t0AC2 = 3;
        int[2] _t0AC3 = {_t0AC1, _t0AC2};
        int _t0AC4 = 9;
        int _t0AC5 = 3;
        int[2] _t0AC6 = {_t0AC4, _t0AC5};
        int _t0AC7 = 27;
        int _t0AC8 = 3;
        int[2] _t0AC9 = {_t0AC7, _t0AC8};
        int[2][4] _t0ACA = {_t0AC0, _t0AC3, _t0AC6, _t0AC9};
        int[2] _t0ACB = prim $sub01C0<int[2]; %4> (_t0ACA, faceIdx098A);
        int _t0ACC = 0;
        int _t0ACD = prim $sub01C0<int; %2> (_t0ACB, _t0ACC);
        int _t0ACE = prim +0015 (_t0ACD, i09C4);
        int _t0ACF = prim $sub01C0<int; %12> (_t0ABD, _t0ACE);
        accum0AD0 = prim @0010<int> (accum0AD0, _t0ACF);
      }
      int _t0AD1 = 0;
      int _t0AD2 = prim $dynsub01C2<int> (accum0AD0, _t0AD1);
      bool _t0AD3 = prim ==0082 (_t0A9E, _t0AD2);
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx098A);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i09C4 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx098A);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i09C4);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 1;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 2;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx098A);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i09C4 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx098A);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i09C4);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 2;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      bool _t0B56 = prim $and01C4 (_t0B14, _t0B55);
      bool _t0B57 = prim $and01C4 (_t0AD3, _t0B56);
      if _t0B57 {
        int _t0B58 = 1;
        int[2] _t0B59 = {cellInt09CB, _t0B58};
        return _t0B59;
      }
      int[4] _t0B5A = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5B = 0;
      int _t0B5C = prim $sub01C0<int; %4> (_t0B5A, _t0B5B);
      int[4] _t0B5D = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B5E = 1;
      int _t0B5F = prim $sub01C0<int; %4> (_t0B5D, _t0B5E);
      int[4] _t0B60 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B61 = 3;
      int _t0B62 = prim $sub01C0<int; %4> (_t0B60, _t0B61);
      int[3] _t0B63 = {_t0B5C, _t0B5F, _t0B62};
      int _t0B64 = 0;
      int _t0B65 = prim $sub01C0<int; %3> (_t0B63, _t0B64);
      int _t0B66 = 0;
      int _t0B67 = 1;
      int _t0B68 = 3;
      int[2] _t0B69 = {_t0B67, _t0B68};
      int _t0B6A = 3;
      int _t0B6B = 3;
      int[2] _t0B6C = {_t0B6A, _t0B6B};
      int _t0B6D = 9;
      int _t0B6E = 3;
      int[2] _t0B6F = {_t0B6D, _t0B6E};
      int _t0B70 = 27;
      int _t0B71 = 3;
      int[2] _t0B72 = {_t0B70, _t0B71};
      int[2][4] _t0B73 = {_t0B69, _t0B6C, _t0B6F, _t0B72};
      int[2] _t0B74 = prim $sub01C0<int[2]; %4> (_t0B73, faceIdx098A);
      int _t0B75 = 1;
      int _t0B76 = prim $sub01C0<int; %2> (_t0B74, _t0B75);
      int[] _t0B77 = prim $range01C3 (_t0B66, _t0B76);
      int[] accum0B97 = {};
      foreach i09C4 in _t0B77 {
        int _t0B78 = 1;
        int _t0B79 = 2;
        int _t0B7A = 3;
        int _t0B7B = 0;
        int _t0B7C = 2;
        int _t0B7D = 3;
        int _t0B7E = 0;
        int _t0B7F = 1;
        int _t0B80 = 3;
        int _t0B81 = 0;
        int _t0B82 = 1;
        int _t0B83 = 2;
        int[12] _t0B84 = {_t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F, _t0B80, _t0B81, _t0B82, _t0B83};
        int _t0B85 = 1;
        int _t0B86 = 3;
        int[2] _t0B87 = {_t0B85, _t0B86};
        int _t0B88 = 3;
        int _t0B89 = 3;
        int[2] _t0B8A = {_t0B88, _t0B89};
        int _t0B8B = 9;
        int _t0B8C = 3;
        int[2] _t0B8D = {_t0B8B, _t0B8C};
        int _t0B8E = 27;
        int _t0B8F = 3;
        int[2] _t0B90 = {_t0B8E, _t0B8F};
        int[2][4] _t0B91 = {_t0B87, _t0B8A, _t0B8D, _t0B90};
        int[2] _t0B92 = prim $sub01C0<int[2]; %4> (_t0B91, faceIdx098A);
        int _t0B93 = 0;
        int _t0B94 = prim $sub01C0<int; %2> (_t0B92, _t0B93);
        int _t0B95 = prim +0015 (_t0B94, i09C4);
        int _t0B96 = prim $sub01C0<int; %12> (_t0B84, _t0B95);
        accum0B97 = prim @0010<int> (accum0B97, _t0B96);
      }
      int _t0B98 = 0;
      int _t0B99 = prim $dynsub01C2<int> (accum0B97, _t0B98);
      bool _t0B9A = prim ==0082 (_t0B65, _t0B99);
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx098A);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i09C4 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx098A);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i09C4);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 1;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 2;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx098A);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i09C4 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx098A);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i09C4);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 2;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      bool _t0C1D = prim $and01C4 (_t0BDB, _t0C1C);
      bool _t0C1E = prim $and01C4 (_t0B9A, _t0C1D);
      if _t0C1E {
        int _t0C1F = 2;
        int[2] _t0C20 = {cellInt09CB, _t0C1F};
        return _t0C20;
      }
      int[4] _t0C21 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C22 = 0;
      int _t0C23 = prim $sub01C0<int; %4> (_t0C21, _t0C22);
      int[4] _t0C24 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C25 = 1;
      int _t0C26 = prim $sub01C0<int; %4> (_t0C24, _t0C25);
      int[4] _t0C27 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C28 = 2;
      int _t0C29 = prim $sub01C0<int; %4> (_t0C27, _t0C28);
      int[3] _t0C2A = {_t0C23, _t0C26, _t0C29};
      int _t0C2B = 0;
      int _t0C2C = prim $sub01C0<int; %3> (_t0C2A, _t0C2B);
      int _t0C2D = 0;
      int _t0C2E = 1;
      int _t0C2F = 3;
      int[2] _t0C30 = {_t0C2E, _t0C2F};
      int _t0C31 = 3;
      int _t0C32 = 3;
      int[2] _t0C33 = {_t0C31, _t0C32};
      int _t0C34 = 9;
      int _t0C35 = 3;
      int[2] _t0C36 = {_t0C34, _t0C35};
      int _t0C37 = 27;
      int _t0C38 = 3;
      int[2] _t0C39 = {_t0C37, _t0C38};
      int[2][4] _t0C3A = {_t0C30, _t0C33, _t0C36, _t0C39};
      int[2] _t0C3B = prim $sub01C0<int[2]; %4> (_t0C3A, faceIdx098A);
      int _t0C3C = 1;
      int _t0C3D = prim $sub01C0<int; %2> (_t0C3B, _t0C3C);
      int[] _t0C3E = prim $range01C3 (_t0C2D, _t0C3D);
      int[] accum0C5E = {};
      foreach i09C4 in _t0C3E {
        int _t0C3F = 1;
        int _t0C40 = 2;
        int _t0C41 = 3;
        int _t0C42 = 0;
        int _t0C43 = 2;
        int _t0C44 = 3;
        int _t0C45 = 0;
        int _t0C46 = 1;
        int _t0C47 = 3;
        int _t0C48 = 0;
        int _t0C49 = 1;
        int _t0C4A = 2;
        int[12] _t0C4B = {_t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46, _t0C47, _t0C48, _t0C49, _t0C4A};
        int _t0C4C = 1;
        int _t0C4D = 3;
        int[2] _t0C4E = {_t0C4C, _t0C4D};
        int _t0C4F = 3;
        int _t0C50 = 3;
        int[2] _t0C51 = {_t0C4F, _t0C50};
        int _t0C52 = 9;
        int _t0C53 = 3;
        int[2] _t0C54 = {_t0C52, _t0C53};
        int _t0C55 = 27;
        int _t0C56 = 3;
        int[2] _t0C57 = {_t0C55, _t0C56};
        int[2][4] _t0C58 = {_t0C4E, _t0C51, _t0C54, _t0C57};
        int[2] _t0C59 = prim $sub01C0<int[2]; %4> (_t0C58, faceIdx098A);
        int _t0C5A = 0;
        int _t0C5B = prim $sub01C0<int; %2> (_t0C59, _t0C5A);
        int _t0C5C = prim +0015 (_t0C5B, i09C4);
        int _t0C5D = prim $sub01C0<int; %12> (_t0C4B, _t0C5C);
        accum0C5E = prim @0010<int> (accum0C5E, _t0C5D);
      }
      int _t0C5F = 0;
      int _t0C60 = prim $dynsub01C2<int> (accum0C5E, _t0C5F);
      bool _t0C61 = prim ==0082 (_t0C2C, _t0C60);
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx098A);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i09C4 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx098A);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i09C4);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 1;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh098C, cellInt09CB : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 2;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx098A);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i09C4 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx098A);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i09C4);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 2;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      bool _t0CE4 = prim $and01C4 (_t0CA2, _t0CE3);
      bool _t0CE5 = prim $and01C4 (_t0C61, _t0CE4);
      if _t0CE5 {
        int _t0CE6 = 3;
        int[2] _t0CE7 = {cellInt09CB, _t0CE6};
        return _t0CE7;
      }
    }
  }
  int _t0CE8 = -1;
  int _t0CE9 = -1;
  int[2] _t0CEA = {_t0CE8, _t0CE9};
  return _t0CEA;
}
function vec2#0 _enter0CEB (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0CEE = +inf;
  int face0CEF = -1;
  real _t0CF0 = 0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  real _t0CF2 = -0.57735026919e0;
  real _t0CF3 = 0.57735026919e0;
  vec3 _t0CF4 = [_t0CF1, _t0CF2, _t0CF3];
  real _t0CF5 = prim •00CE<$[3]; $[3]; $[]> (_t0CF4, refPos0CEC);
  real _t0CF6 = prim -0026<$[]> (_t0CF0, _t0CF5);
  real _t0CF7 = 0.57735026919e0;
  real _t0CF8 = -0.57735026919e0;
  real _t0CF9 = 0.57735026919e0;
  vec3 _t0CFA = [_t0CF7, _t0CF8, _t0CF9];
  real _t0CFB = prim •00CE<$[3]; $[3]; $[]> (_t0CFA, dPos0CED);
  real _t0CFC = prim /0055 (_t0CF6, _t0CFB);
  real _t0CFD = -0.e0;
  bool _t0CFE = prim >0080 (_t0CFC, _t0CFD);
  real _t0CFF = 0.57735026919e0;
  real _t0D00 = 0.57735026919e0;
  real _t0D01 = -0.57735026919e0;
  real _t0D02 = 0.57735026919e0;
  vec3 _t0D03 = [_t0D00, _t0D01, _t0D02];
  real _t0D04 = prim •00CE<$[3]; $[3]; $[]> (_t0D03, refPos0CEC);
  real _t0D05 = prim -0026<$[]> (_t0CFF, _t0D04);
  real _t0D06 = 0.57735026919e0;
  real _t0D07 = -0.57735026919e0;
  real _t0D08 = 0.57735026919e0;
  vec3 _t0D09 = [_t0D06, _t0D07, _t0D08];
  real _t0D0A = prim •00CE<$[3]; $[3]; $[]> (_t0D09, dPos0CED);
  real _t0D0B = prim /0055 (_t0D05, _t0D0A);
  bool _t0D0C = prim >0080 (time0CEE, _t0D0B);
  bool _t0D0D = prim $and01C4 (_t0CFE, _t0D0C);
  if _t0D0D {
    real _t0D0E = 0.1e1;
    real _t0D0F = 0.1e-4;
    real _t0D10 = prim +0017<$[]> (_t0D0E, _t0D0F);
    real _t0D11 = 0.1e1;
    real _t0D12 = 0.1e1;
    real _t0D13 = 0.1e1;
    vec3 _t0D14 = [_t0D11, _t0D12, _t0D13];
    real _t0D15 = 0.57735026919e0;
    real _t0D16 = 0.57735026919e0;
    real _t0D17 = -0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    vec3 _t0D19 = [_t0D16, _t0D17, _t0D18];
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D19, refPos0CEC);
    real _t0D1B = prim -0026<$[]> (_t0D15, _t0D1A);
    real _t0D1C = 0.57735026919e0;
    real _t0D1D = -0.57735026919e0;
    real _t0D1E = 0.57735026919e0;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = prim •00CE<$[3]; $[3]; $[]> (_t0D1F, dPos0CED);
    real _t0D21 = prim /0055 (_t0D1B, _t0D20);
    vec3 _t0D22 = prim *0038<$[3]> (dPos0CED, _t0D21);
    vec3 _t0D23 = prim +0017<$[3]> (_t0D22, refPos0CEC);
    real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D14, _t0D23);
    bool _t0D25 = prim >0080 (_t0D10, _t0D24);
    real _t0D26 = 0.1e-4;
    real _t0D27 = 0.1e-4;
    real _t0D28 = 0.1e-4;
    vec3 _t0D29 = [_t0D26, _t0D27, _t0D28];
    real _t0D2A = 0.57735026919e0;
    real _t0D2B = 0.57735026919e0;
    real _t0D2C = -0.57735026919e0;
    real _t0D2D = 0.57735026919e0;
    vec3 _t0D2E = [_t0D2B, _t0D2C, _t0D2D];
    real _t0D2F = prim •00CE<$[3]; $[3]; $[]> (_t0D2E, refPos0CEC);
    real _t0D30 = prim -0026<$[]> (_t0D2A, _t0D2F);
    real _t0D31 = 0.57735026919e0;
    real _t0D32 = -0.57735026919e0;
    real _t0D33 = 0.57735026919e0;
    vec3 _t0D34 = [_t0D31, _t0D32, _t0D33];
    real _t0D35 = prim •00CE<$[3]; $[3]; $[]> (_t0D34, dPos0CED);
    real _t0D36 = prim /0055 (_t0D30, _t0D35);
    vec3 _t0D37 = prim *0038<$[3]> (dPos0CED, _t0D36);
    vec3 _t0D38 = prim +0017<$[3]> (_t0D37, refPos0CEC);
    vec3 _t0D39 = prim +0017<$[3]> (_t0D29, _t0D38);
    real _t0D3A = _t0D39[0];
    real _t0D3B = -0.e0;
    bool _t0D3C = prim >0080 (_t0D3A, _t0D3B);
    real _t0D3D = 0.1e-4;
    real _t0D3E = 0.1e-4;
    real _t0D3F = 0.1e-4;
    vec3 _t0D40 = [_t0D3D, _t0D3E, _t0D3F];
    real _t0D41 = 0.57735026919e0;
    real _t0D42 = 0.57735026919e0;
    real _t0D43 = -0.57735026919e0;
    real _t0D44 = 0.57735026919e0;
    vec3 _t0D45 = [_t0D42, _t0D43, _t0D44];
    real _t0D46 = prim •00CE<$[3]; $[3]; $[]> (_t0D45, refPos0CEC);
    real _t0D47 = prim -0026<$[]> (_t0D41, _t0D46);
    real _t0D48 = 0.57735026919e0;
    real _t0D49 = -0.57735026919e0;
    real _t0D4A = 0.57735026919e0;
    vec3 _t0D4B = [_t0D48, _t0D49, _t0D4A];
    real _t0D4C = prim •00CE<$[3]; $[3]; $[]> (_t0D4B, dPos0CED);
    real _t0D4D = prim /0055 (_t0D47, _t0D4C);
    vec3 _t0D4E = prim *0038<$[3]> (dPos0CED, _t0D4D);
    vec3 _t0D4F = prim +0017<$[3]> (_t0D4E, refPos0CEC);
    vec3 _t0D50 = prim +0017<$[3]> (_t0D40, _t0D4F);
    real _t0D51 = _t0D50[1];
    real _t0D52 = -0.e0;
    bool _t0D53 = prim >0080 (_t0D51, _t0D52);
    real _t0D54 = 0.1e-4;
    real _t0D55 = 0.1e-4;
    real _t0D56 = 0.1e-4;
    vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
    real _t0D58 = 0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    real _t0D5A = -0.57735026919e0;
    real _t0D5B = 0.57735026919e0;
    vec3 _t0D5C = [_t0D59, _t0D5A, _t0D5B];
    real _t0D5D = prim •00CE<$[3]; $[3]; $[]> (_t0D5C, refPos0CEC);
    real _t0D5E = prim -0026<$[]> (_t0D58, _t0D5D);
    real _t0D5F = 0.57735026919e0;
    real _t0D60 = -0.57735026919e0;
    real _t0D61 = 0.57735026919e0;
    vec3 _t0D62 = [_t0D5F, _t0D60, _t0D61];
    real _t0D63 = prim •00CE<$[3]; $[3]; $[]> (_t0D62, dPos0CED);
    real _t0D64 = prim /0055 (_t0D5E, _t0D63);
    vec3 _t0D65 = prim *0038<$[3]> (dPos0CED, _t0D64);
    vec3 _t0D66 = prim +0017<$[3]> (_t0D65, refPos0CEC);
    vec3 _t0D67 = prim +0017<$[3]> (_t0D57, _t0D66);
    real _t0D68 = _t0D67[2];
    real _t0D69 = -0.e0;
    bool _t0D6A = prim >0080 (_t0D68, _t0D69);
    bool _t0D6B = prim $and01C4 (_t0D53, _t0D6A);
    bool _t0D6C = prim $and01C4 (_t0D3C, _t0D6B);
    bool _t0D6D = prim $and01C4 (_t0D25, _t0D6C);
    if _t0D6D {
      real _t0D6E = 0.57735026919e0;
      real _t0D6F = 0.57735026919e0;
      real _t0D70 = -0.57735026919e0;
      real _t0D71 = 0.57735026919e0;
      vec3 _t0D72 = [_t0D6F, _t0D70, _t0D71];
      real _t0D73 = prim •00CE<$[3]; $[3]; $[]> (_t0D72, refPos0CEC);
      real _t0D74 = prim -0026<$[]> (_t0D6E, _t0D73);
      real _t0D75 = 0.57735026919e0;
      real _t0D76 = -0.57735026919e0;
      real _t0D77 = 0.57735026919e0;
      vec3 _t0D78 = [_t0D75, _t0D76, _t0D77];
      real _t0D79 = prim •00CE<$[3]; $[3]; $[]> (_t0D78, dPos0CED);
      time0CEE = prim /0055 (_t0D74, _t0D79);
      face0CEF = 0;
    }
  }
  real _t0D7A = 0.e0;
  real _t0D7B = 0.1e1;
  real _t0D7C = 0.e0;
  real _t0D7D = 0.e0;
  vec3 _t0D7E = [_t0D7B, _t0D7C, _t0D7D];
  real _t0D7F = prim •00CE<$[3]; $[3]; $[]> (_t0D7E, refPos0CEC);
  real _t0D80 = prim -0026<$[]> (_t0D7A, _t0D7F);
  real _t0D81 = 0.1e1;
  real _t0D82 = 0.e0;
  real _t0D83 = 0.e0;
  vec3 _t0D84 = [_t0D81, _t0D82, _t0D83];
  real _t0D85 = prim •00CE<$[3]; $[3]; $[]> (_t0D84, dPos0CED);
  real _t0D86 = prim /0055 (_t0D80, _t0D85);
  real _t0D87 = -0.e0;
  bool _t0D88 = prim >0080 (_t0D86, _t0D87);
  real _t0D89 = 0.e0;
  real _t0D8A = 0.1e1;
  real _t0D8B = 0.e0;
  real _t0D8C = 0.e0;
  vec3 _t0D8D = [_t0D8A, _t0D8B, _t0D8C];
  real _t0D8E = prim •00CE<$[3]; $[3]; $[]> (_t0D8D, refPos0CEC);
  real _t0D8F = prim -0026<$[]> (_t0D89, _t0D8E);
  real _t0D90 = 0.1e1;
  real _t0D91 = 0.e0;
  real _t0D92 = 0.e0;
  vec3 _t0D93 = [_t0D90, _t0D91, _t0D92];
  real _t0D94 = prim •00CE<$[3]; $[3]; $[]> (_t0D93, dPos0CED);
  real _t0D95 = prim /0055 (_t0D8F, _t0D94);
  bool _t0D96 = prim >0080 (time0CEE, _t0D95);
  bool _t0D97 = prim $and01C4 (_t0D88, _t0D96);
  if _t0D97 {
    real _t0D98 = 0.1e1;
    real _t0D99 = 0.1e-4;
    real _t0D9A = prim +0017<$[]> (_t0D98, _t0D99);
    real _t0D9B = 0.1e1;
    real _t0D9C = 0.1e1;
    real _t0D9D = 0.1e1;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CEC);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CED);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CED, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CEC);
    real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0D9E, _t0DAD);
    bool _t0DAF = prim >0080 (_t0D9A, _t0DAE);
    real _t0DB0 = 0.1e-4;
    real _t0DB1 = 0.1e-4;
    real _t0DB2 = 0.1e-4;
    vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
    real _t0DB4 = 0.e0;
    real _t0DB5 = 0.1e1;
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.e0;
    vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
    real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0CEC);
    real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
    real _t0DBB = 0.1e1;
    real _t0DBC = 0.e0;
    real _t0DBD = 0.e0;
    vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
    real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0CED);
    real _t0DC0 = prim /0055 (_t0DBA, _t0DBF);
    vec3 _t0DC1 = prim *0038<$[3]> (dPos0CED, _t0DC0);
    vec3 _t0DC2 = prim +0017<$[3]> (_t0DC1, refPos0CEC);
    vec3 _t0DC3 = prim +0017<$[3]> (_t0DB3, _t0DC2);
    real _t0DC4 = _t0DC3[0];
    real _t0DC5 = -0.e0;
    bool _t0DC6 = prim >0080 (_t0DC4, _t0DC5);
    real _t0DC7 = 0.1e-4;
    real _t0DC8 = 0.1e-4;
    real _t0DC9 = 0.1e-4;
    vec3 _t0DCA = [_t0DC7, _t0DC8, _t0DC9];
    real _t0DCB = 0.e0;
    real _t0DCC = 0.1e1;
    real _t0DCD = 0.e0;
    real _t0DCE = 0.e0;
    vec3 _t0DCF = [_t0DCC, _t0DCD, _t0DCE];
    real _t0DD0 = prim •00CE<$[3]; $[3]; $[]> (_t0DCF, refPos0CEC);
    real _t0DD1 = prim -0026<$[]> (_t0DCB, _t0DD0);
    real _t0DD2 = 0.1e1;
    real _t0DD3 = 0.e0;
    real _t0DD4 = 0.e0;
    vec3 _t0DD5 = [_t0DD2, _t0DD3, _t0DD4];
    real _t0DD6 = prim •00CE<$[3]; $[3]; $[]> (_t0DD5, dPos0CED);
    real _t0DD7 = prim /0055 (_t0DD1, _t0DD6);
    vec3 _t0DD8 = prim *0038<$[3]> (dPos0CED, _t0DD7);
    vec3 _t0DD9 = prim +0017<$[3]> (_t0DD8, refPos0CEC);
    vec3 _t0DDA = prim +0017<$[3]> (_t0DCA, _t0DD9);
    real _t0DDB = _t0DDA[1];
    real _t0DDC = -0.e0;
    bool _t0DDD = prim >0080 (_t0DDB, _t0DDC);
    real _t0DDE = 0.1e-4;
    real _t0DDF = 0.1e-4;
    real _t0DE0 = 0.1e-4;
    vec3 _t0DE1 = [_t0DDE, _t0DDF, _t0DE0];
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.1e1;
    real _t0DE4 = 0.e0;
    real _t0DE5 = 0.e0;
    vec3 _t0DE6 = [_t0DE3, _t0DE4, _t0DE5];
    real _t0DE7 = prim •00CE<$[3]; $[3]; $[]> (_t0DE6, refPos0CEC);
    real _t0DE8 = prim -0026<$[]> (_t0DE2, _t0DE7);
    real _t0DE9 = 0.1e1;
    real _t0DEA = 0.e0;
    real _t0DEB = 0.e0;
    vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
    real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, dPos0CED);
    real _t0DEE = prim /0055 (_t0DE8, _t0DED);
    vec3 _t0DEF = prim *0038<$[3]> (dPos0CED, _t0DEE);
    vec3 _t0DF0 = prim +0017<$[3]> (_t0DEF, refPos0CEC);
    vec3 _t0DF1 = prim +0017<$[3]> (_t0DE1, _t0DF0);
    real _t0DF2 = _t0DF1[2];
    real _t0DF3 = -0.e0;
    bool _t0DF4 = prim >0080 (_t0DF2, _t0DF3);
    bool _t0DF5 = prim $and01C4 (_t0DDD, _t0DF4);
    bool _t0DF6 = prim $and01C4 (_t0DC6, _t0DF5);
    bool _t0DF7 = prim $and01C4 (_t0DAF, _t0DF6);
    if _t0DF7 {
      real _t0DF8 = 0.e0;
      real _t0DF9 = 0.1e1;
      real _t0DFA = 0.e0;
      real _t0DFB = 0.e0;
      vec3 _t0DFC = [_t0DF9, _t0DFA, _t0DFB];
      real _t0DFD = prim •00CE<$[3]; $[3]; $[]> (_t0DFC, refPos0CEC);
      real _t0DFE = prim -0026<$[]> (_t0DF8, _t0DFD);
      real _t0DFF = 0.1e1;
      real _t0E00 = 0.e0;
      real _t0E01 = 0.e0;
      vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
      real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, dPos0CED);
      time0CEE = prim /0055 (_t0DFE, _t0E03);
      face0CEF = 1;
    }
  }
  real _t0E04 = 0.e0;
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, refPos0CEC);
  real _t0E0A = prim -0026<$[]> (_t0E04, _t0E09);
  real _t0E0B = 0.e0;
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.e0;
  vec3 _t0E0E = [_t0E0B, _t0E0C, _t0E0D];
  real _t0E0F = prim •00CE<$[3]; $[3]; $[]> (_t0E0E, dPos0CED);
  real _t0E10 = prim /0055 (_t0E0A, _t0E0F);
  real _t0E11 = -0.e0;
  bool _t0E12 = prim >0080 (_t0E10, _t0E11);
  real _t0E13 = 0.e0;
  real _t0E14 = 0.e0;
  real _t0E15 = 0.1e1;
  real _t0E16 = 0.e0;
  vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
  real _t0E18 = prim •00CE<$[3]; $[3]; $[]> (_t0E17, refPos0CEC);
  real _t0E19 = prim -0026<$[]> (_t0E13, _t0E18);
  real _t0E1A = 0.e0;
  real _t0E1B = 0.1e1;
  real _t0E1C = 0.e0;
  vec3 _t0E1D = [_t0E1A, _t0E1B, _t0E1C];
  real _t0E1E = prim •00CE<$[3]; $[3]; $[]> (_t0E1D, dPos0CED);
  real _t0E1F = prim /0055 (_t0E19, _t0E1E);
  bool _t0E20 = prim >0080 (time0CEE, _t0E1F);
  bool _t0E21 = prim $and01C4 (_t0E12, _t0E20);
  if _t0E21 {
    real _t0E22 = 0.1e1;
    real _t0E23 = 0.1e-4;
    real _t0E24 = prim +0017<$[]> (_t0E22, _t0E23);
    real _t0E25 = 0.1e1;
    real _t0E26 = 0.1e1;
    real _t0E27 = 0.1e1;
    vec3 _t0E28 = [_t0E25, _t0E26, _t0E27];
    real _t0E29 = 0.e0;
    real _t0E2A = 0.e0;
    real _t0E2B = 0.1e1;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, refPos0CEC);
    real _t0E2F = prim -0026<$[]> (_t0E29, _t0E2E);
    real _t0E30 = 0.e0;
    real _t0E31 = 0.1e1;
    real _t0E32 = 0.e0;
    vec3 _t0E33 = [_t0E30, _t0E31, _t0E32];
    real _t0E34 = prim •00CE<$[3]; $[3]; $[]> (_t0E33, dPos0CED);
    real _t0E35 = prim /0055 (_t0E2F, _t0E34);
    vec3 _t0E36 = prim *0038<$[3]> (dPos0CED, _t0E35);
    vec3 _t0E37 = prim +0017<$[3]> (_t0E36, refPos0CEC);
    real _t0E38 = prim •00CE<$[3]; $[3]; $[]> (_t0E28, _t0E37);
    bool _t0E39 = prim >0080 (_t0E24, _t0E38);
    real _t0E3A = 0.1e-4;
    real _t0E3B = 0.1e-4;
    real _t0E3C = 0.1e-4;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CEC);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CED);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CED, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CEC);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[0];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-4;
    real _t0E52 = 0.1e-4;
    real _t0E53 = 0.1e-4;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CEC);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CED);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CED, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CEC);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[1];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    real _t0E68 = 0.1e-4;
    real _t0E69 = 0.1e-4;
    real _t0E6A = 0.1e-4;
    vec3 _t0E6B = [_t0E68, _t0E69, _t0E6A];
    real _t0E6C = 0.e0;
    real _t0E6D = 0.e0;
    real _t0E6E = 0.1e1;
    real _t0E6F = 0.e0;
    vec3 _t0E70 = [_t0E6D, _t0E6E, _t0E6F];
    real _t0E71 = prim •00CE<$[3]; $[3]; $[]> (_t0E70, refPos0CEC);
    real _t0E72 = prim -0026<$[]> (_t0E6C, _t0E71);
    real _t0E73 = 0.e0;
    real _t0E74 = 0.1e1;
    real _t0E75 = 0.e0;
    vec3 _t0E76 = [_t0E73, _t0E74, _t0E75];
    real _t0E77 = prim •00CE<$[3]; $[3]; $[]> (_t0E76, dPos0CED);
    real _t0E78 = prim /0055 (_t0E72, _t0E77);
    vec3 _t0E79 = prim *0038<$[3]> (dPos0CED, _t0E78);
    vec3 _t0E7A = prim +0017<$[3]> (_t0E79, refPos0CEC);
    vec3 _t0E7B = prim +0017<$[3]> (_t0E6B, _t0E7A);
    real _t0E7C = _t0E7B[2];
    real _t0E7D = -0.e0;
    bool _t0E7E = prim >0080 (_t0E7C, _t0E7D);
    bool _t0E7F = prim $and01C4 (_t0E67, _t0E7E);
    bool _t0E80 = prim $and01C4 (_t0E50, _t0E7F);
    bool _t0E81 = prim $and01C4 (_t0E39, _t0E80);
    if _t0E81 {
      real _t0E82 = 0.e0;
      real _t0E83 = 0.e0;
      real _t0E84 = 0.1e1;
      real _t0E85 = 0.e0;
      vec3 _t0E86 = [_t0E83, _t0E84, _t0E85];
      real _t0E87 = prim •00CE<$[3]; $[3]; $[]> (_t0E86, refPos0CEC);
      real _t0E88 = prim -0026<$[]> (_t0E82, _t0E87);
      real _t0E89 = 0.e0;
      real _t0E8A = 0.1e1;
      real _t0E8B = 0.e0;
      vec3 _t0E8C = [_t0E89, _t0E8A, _t0E8B];
      real _t0E8D = prim •00CE<$[3]; $[3]; $[]> (_t0E8C, dPos0CED);
      time0CEE = prim /0055 (_t0E88, _t0E8D);
      face0CEF = 2;
    }
  }
  real _t0E8E = 0.e0;
  real _t0E8F = 0.e0;
  real _t0E90 = 0.e0;
  real _t0E91 = 0.1e1;
  vec3 _t0E92 = [_t0E8F, _t0E90, _t0E91];
  real _t0E93 = prim •00CE<$[3]; $[3]; $[]> (_t0E92, refPos0CEC);
  real _t0E94 = prim -0026<$[]> (_t0E8E, _t0E93);
  real _t0E95 = 0.e0;
  real _t0E96 = 0.e0;
  real _t0E97 = 0.1e1;
  vec3 _t0E98 = [_t0E95, _t0E96, _t0E97];
  real _t0E99 = prim •00CE<$[3]; $[3]; $[]> (_t0E98, dPos0CED);
  real _t0E9A = prim /0055 (_t0E94, _t0E99);
  real _t0E9B = -0.e0;
  bool _t0E9C = prim >0080 (_t0E9A, _t0E9B);
  real _t0E9D = 0.e0;
  real _t0E9E = 0.e0;
  real _t0E9F = 0.e0;
  real _t0EA0 = 0.1e1;
  vec3 _t0EA1 = [_t0E9E, _t0E9F, _t0EA0];
  real _t0EA2 = prim •00CE<$[3]; $[3]; $[]> (_t0EA1, refPos0CEC);
  real _t0EA3 = prim -0026<$[]> (_t0E9D, _t0EA2);
  real _t0EA4 = 0.e0;
  real _t0EA5 = 0.e0;
  real _t0EA6 = 0.1e1;
  vec3 _t0EA7 = [_t0EA4, _t0EA5, _t0EA6];
  real _t0EA8 = prim •00CE<$[3]; $[3]; $[]> (_t0EA7, dPos0CED);
  real _t0EA9 = prim /0055 (_t0EA3, _t0EA8);
  bool _t0EAA = prim >0080 (time0CEE, _t0EA9);
  bool _t0EAB = prim $and01C4 (_t0E9C, _t0EAA);
  if _t0EAB {
    real _t0EAC = 0.1e1;
    real _t0EAD = 0.1e-4;
    real _t0EAE = prim +0017<$[]> (_t0EAC, _t0EAD);
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.1e1;
    real _t0EB1 = 0.1e1;
    vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
    real _t0EB3 = 0.e0;
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.e0;
    real _t0EB6 = 0.1e1;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, refPos0CEC);
    real _t0EB9 = prim -0026<$[]> (_t0EB3, _t0EB8);
    real _t0EBA = 0.e0;
    real _t0EBB = 0.e0;
    real _t0EBC = 0.1e1;
    vec3 _t0EBD = [_t0EBA, _t0EBB, _t0EBC];
    real _t0EBE = prim •00CE<$[3]; $[3]; $[]> (_t0EBD, dPos0CED);
    real _t0EBF = prim /0055 (_t0EB9, _t0EBE);
    vec3 _t0EC0 = prim *0038<$[3]> (dPos0CED, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EC0, refPos0CEC);
    real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, _t0EC1);
    bool _t0EC3 = prim >0080 (_t0EAE, _t0EC2);
    real _t0EC4 = 0.1e-4;
    real _t0EC5 = 0.1e-4;
    real _t0EC6 = 0.1e-4;
    vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.e0;
    real _t0ECA = 0.e0;
    real _t0ECB = 0.1e1;
    vec3 _t0ECC = [_t0EC9, _t0ECA, _t0ECB];
    real _t0ECD = prim •00CE<$[3]; $[3]; $[]> (_t0ECC, refPos0CEC);
    real _t0ECE = prim -0026<$[]> (_t0EC8, _t0ECD);
    real _t0ECF = 0.e0;
    real _t0ED0 = 0.e0;
    real _t0ED1 = 0.1e1;
    vec3 _t0ED2 = [_t0ECF, _t0ED0, _t0ED1];
    real _t0ED3 = prim •00CE<$[3]; $[3]; $[]> (_t0ED2, dPos0CED);
    real _t0ED4 = prim /0055 (_t0ECE, _t0ED3);
    vec3 _t0ED5 = prim *0038<$[3]> (dPos0CED, _t0ED4);
    vec3 _t0ED6 = prim +0017<$[3]> (_t0ED5, refPos0CEC);
    vec3 _t0ED7 = prim +0017<$[3]> (_t0EC7, _t0ED6);
    real _t0ED8 = _t0ED7[0];
    real _t0ED9 = -0.e0;
    bool _t0EDA = prim >0080 (_t0ED8, _t0ED9);
    real _t0EDB = 0.1e-4;
    real _t0EDC = 0.1e-4;
    real _t0EDD = 0.1e-4;
    vec3 _t0EDE = [_t0EDB, _t0EDC, _t0EDD];
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.e0;
    real _t0EE1 = 0.e0;
    real _t0EE2 = 0.1e1;
    vec3 _t0EE3 = [_t0EE0, _t0EE1, _t0EE2];
    real _t0EE4 = prim •00CE<$[3]; $[3]; $[]> (_t0EE3, refPos0CEC);
    real _t0EE5 = prim -0026<$[]> (_t0EDF, _t0EE4);
    real _t0EE6 = 0.e0;
    real _t0EE7 = 0.e0;
    real _t0EE8 = 0.1e1;
    vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
    real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, dPos0CED);
    real _t0EEB = prim /0055 (_t0EE5, _t0EEA);
    vec3 _t0EEC = prim *0038<$[3]> (dPos0CED, _t0EEB);
    vec3 _t0EED = prim +0017<$[3]> (_t0EEC, refPos0CEC);
    vec3 _t0EEE = prim +0017<$[3]> (_t0EDE, _t0EED);
    real _t0EEF = _t0EEE[1];
    real _t0EF0 = -0.e0;
    bool _t0EF1 = prim >0080 (_t0EEF, _t0EF0);
    real _t0EF2 = 0.1e-4;
    real _t0EF3 = 0.1e-4;
    real _t0EF4 = 0.1e-4;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.e0;
    real _t0EF8 = 0.e0;
    real _t0EF9 = 0.1e1;
    vec3 _t0EFA = [_t0EF7, _t0EF8, _t0EF9];
    real _t0EFB = prim •00CE<$[3]; $[3]; $[]> (_t0EFA, refPos0CEC);
    real _t0EFC = prim -0026<$[]> (_t0EF6, _t0EFB);
    real _t0EFD = 0.e0;
    real _t0EFE = 0.e0;
    real _t0EFF = 0.1e1;
    vec3 _t0F00 = [_t0EFD, _t0EFE, _t0EFF];
    real _t0F01 = prim •00CE<$[3]; $[3]; $[]> (_t0F00, dPos0CED);
    real _t0F02 = prim /0055 (_t0EFC, _t0F01);
    vec3 _t0F03 = prim *0038<$[3]> (dPos0CED, _t0F02);
    vec3 _t0F04 = prim +0017<$[3]> (_t0F03, refPos0CEC);
    vec3 _t0F05 = prim +0017<$[3]> (_t0EF5, _t0F04);
    real _t0F06 = _t0F05[2];
    real _t0F07 = -0.e0;
    bool _t0F08 = prim >0080 (_t0F06, _t0F07);
    bool _t0F09 = prim $and01C4 (_t0EF1, _t0F08);
    bool _t0F0A = prim $and01C4 (_t0EDA, _t0F09);
    bool _t0F0B = prim $and01C4 (_t0EC3, _t0F0A);
    if _t0F0B {
      real _t0F0C = 0.e0;
      real _t0F0D = 0.e0;
      real _t0F0E = 0.e0;
      real _t0F0F = 0.1e1;
      vec3 _t0F10 = [_t0F0D, _t0F0E, _t0F0F];
      real _t0F11 = prim •00CE<$[3]; $[3]; $[]> (_t0F10, refPos0CEC);
      real _t0F12 = prim -0026<$[]> (_t0F0C, _t0F11);
      real _t0F13 = 0.e0;
      real _t0F14 = 0.e0;
      real _t0F15 = 0.1e1;
      vec3 _t0F16 = [_t0F13, _t0F14, _t0F15];
      real _t0F17 = prim •00CE<$[3]; $[3]; $[]> (_t0F16, dPos0CED);
      time0CEE = prim /0055 (_t0F12, _t0F17);
      face0CEF = 3;
    }
  }
  int _t0F18 = -1;
  bool _t0F19 = prim !=0086 (face0CEF, _t0F18);
  if _t0F19 {
    real _t0F1A = (real)face0CEF;
    vec2 _t0F1B = [time0CEE, _t0F1A];
    return _t0F1B;
  } else {
    real _t0F1C = -0.1e1;
    real _t0F1D = -0.1e1;
    vec2 _t0F1E = [_t0F1C, _t0F1D];
    return _t0F1E;
  }
}
function vec2#0 _exit0F1F (vec3 refPos0CEC, vec3 dPos0CED)
{
  real time0F20 = +inf;
  int face0F21 = -1;
  real _t0F22 = 0.57735026919e0;
  real _t0F23 = 0.57735026919e0;
  real _t0F24 = -0.57735026919e0;
  real _t0F25 = 0.57735026919e0;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0CEC);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.57735026919e0;
  real _t0F2A = -0.57735026919e0;
  real _t0F2B = 0.57735026919e0;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0CED);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  real _t0F2F = -0.e0;
  bool _t0F30 = prim >0080 (_t0F2E, _t0F2F);
  real _t0F31 = 0.57735026919e0;
  real _t0F32 = 0.57735026919e0;
  real _t0F33 = -0.57735026919e0;
  real _t0F34 = 0.57735026919e0;
  vec3 _t0F35 = [_t0F32, _t0F33, _t0F34];
  real _t0F36 = prim •00CE<$[3]; $[3]; $[]> (_t0F35, refPos0CEC);
  real _t0F37 = prim -0026<$[]> (_t0F31, _t0F36);
  real _t0F38 = 0.57735026919e0;
  real _t0F39 = -0.57735026919e0;
  real _t0F3A = 0.57735026919e0;
  vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
  real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, dPos0CED);
  real _t0F3D = prim /0055 (_t0F37, _t0F3C);
  bool _t0F3E = prim >0080 (time0F20, _t0F3D);
  bool _t0F3F = prim $and01C4 (_t0F30, _t0F3E);
  if _t0F3F {
    real _t0F40 = 0.57735026919e0;
    real _t0F41 = 0.57735026919e0;
    real _t0F42 = -0.57735026919e0;
    real _t0F43 = 0.57735026919e0;
    vec3 _t0F44 = [_t0F41, _t0F42, _t0F43];
    real _t0F45 = prim •00CE<$[3]; $[3]; $[]> (_t0F44, refPos0CEC);
    real _t0F46 = prim -0026<$[]> (_t0F40, _t0F45);
    real _t0F47 = 0.57735026919e0;
    real _t0F48 = -0.57735026919e0;
    real _t0F49 = 0.57735026919e0;
    vec3 _t0F4A = [_t0F47, _t0F48, _t0F49];
    real _t0F4B = prim •00CE<$[3]; $[3]; $[]> (_t0F4A, dPos0CED);
    time0F20 = prim /0055 (_t0F46, _t0F4B);
    face0F21 = 0;
  }
  real _t0F4C = 0.e0;
  real _t0F4D = 0.1e1;
  real _t0F4E = 0.e0;
  real _t0F4F = 0.e0;
  vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
  real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0CEC);
  real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
  real _t0F53 = 0.1e1;
  real _t0F54 = 0.e0;
  real _t0F55 = 0.e0;
  vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
  real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0CED);
  real _t0F58 = prim /0055 (_t0F52, _t0F57);
  real _t0F59 = -0.e0;
  bool _t0F5A = prim >0080 (_t0F58, _t0F59);
  real _t0F5B = 0.e0;
  real _t0F5C = 0.1e1;
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  vec3 _t0F5F = [_t0F5C, _t0F5D, _t0F5E];
  real _t0F60 = prim •00CE<$[3]; $[3]; $[]> (_t0F5F, refPos0CEC);
  real _t0F61 = prim -0026<$[]> (_t0F5B, _t0F60);
  real _t0F62 = 0.1e1;
  real _t0F63 = 0.e0;
  real _t0F64 = 0.e0;
  vec3 _t0F65 = [_t0F62, _t0F63, _t0F64];
  real _t0F66 = prim •00CE<$[3]; $[3]; $[]> (_t0F65, dPos0CED);
  real _t0F67 = prim /0055 (_t0F61, _t0F66);
  bool _t0F68 = prim >0080 (time0F20, _t0F67);
  bool _t0F69 = prim $and01C4 (_t0F5A, _t0F68);
  if _t0F69 {
    real _t0F6A = 0.e0;
    real _t0F6B = 0.1e1;
    real _t0F6C = 0.e0;
    real _t0F6D = 0.e0;
    vec3 _t0F6E = [_t0F6B, _t0F6C, _t0F6D];
    real _t0F6F = prim •00CE<$[3]; $[3]; $[]> (_t0F6E, refPos0CEC);
    real _t0F70 = prim -0026<$[]> (_t0F6A, _t0F6F);
    real _t0F71 = 0.1e1;
    real _t0F72 = 0.e0;
    real _t0F73 = 0.e0;
    vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
    real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, dPos0CED);
    time0F20 = prim /0055 (_t0F70, _t0F75);
    face0F21 = 1;
  }
  real _t0F76 = 0.e0;
  real _t0F77 = 0.e0;
  real _t0F78 = 0.1e1;
  real _t0F79 = 0.e0;
  vec3 _t0F7A = [_t0F77, _t0F78, _t0F79];
  real _t0F7B = prim •00CE<$[3]; $[3]; $[]> (_t0F7A, refPos0CEC);
  real _t0F7C = prim -0026<$[]> (_t0F76, _t0F7B);
  real _t0F7D = 0.e0;
  real _t0F7E = 0.1e1;
  real _t0F7F = 0.e0;
  vec3 _t0F80 = [_t0F7D, _t0F7E, _t0F7F];
  real _t0F81 = prim •00CE<$[3]; $[3]; $[]> (_t0F80, dPos0CED);
  real _t0F82 = prim /0055 (_t0F7C, _t0F81);
  real _t0F83 = -0.e0;
  bool _t0F84 = prim >0080 (_t0F82, _t0F83);
  real _t0F85 = 0.e0;
  real _t0F86 = 0.e0;
  real _t0F87 = 0.1e1;
  real _t0F88 = 0.e0;
  vec3 _t0F89 = [_t0F86, _t0F87, _t0F88];
  real _t0F8A = prim •00CE<$[3]; $[3]; $[]> (_t0F89, refPos0CEC);
  real _t0F8B = prim -0026<$[]> (_t0F85, _t0F8A);
  real _t0F8C = 0.e0;
  real _t0F8D = 0.1e1;
  real _t0F8E = 0.e0;
  vec3 _t0F8F = [_t0F8C, _t0F8D, _t0F8E];
  real _t0F90 = prim •00CE<$[3]; $[3]; $[]> (_t0F8F, dPos0CED);
  real _t0F91 = prim /0055 (_t0F8B, _t0F90);
  bool _t0F92 = prim >0080 (time0F20, _t0F91);
  bool _t0F93 = prim $and01C4 (_t0F84, _t0F92);
  if _t0F93 {
    real _t0F94 = 0.e0;
    real _t0F95 = 0.e0;
    real _t0F96 = 0.1e1;
    real _t0F97 = 0.e0;
    vec3 _t0F98 = [_t0F95, _t0F96, _t0F97];
    real _t0F99 = prim •00CE<$[3]; $[3]; $[]> (_t0F98, refPos0CEC);
    real _t0F9A = prim -0026<$[]> (_t0F94, _t0F99);
    real _t0F9B = 0.e0;
    real _t0F9C = 0.1e1;
    real _t0F9D = 0.e0;
    vec3 _t0F9E = [_t0F9B, _t0F9C, _t0F9D];
    real _t0F9F = prim •00CE<$[3]; $[3]; $[]> (_t0F9E, dPos0CED);
    time0F20 = prim /0055 (_t0F9A, _t0F9F);
    face0F21 = 2;
  }
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = 0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0CEC);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = 0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0CED);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  real _t0FAD = -0.e0;
  bool _t0FAE = prim >0080 (_t0FAC, _t0FAD);
  real _t0FAF = 0.e0;
  real _t0FB0 = 0.e0;
  real _t0FB1 = 0.e0;
  real _t0FB2 = 0.1e1;
  vec3 _t0FB3 = [_t0FB0, _t0FB1, _t0FB2];
  real _t0FB4 = prim •00CE<$[3]; $[3]; $[]> (_t0FB3, refPos0CEC);
  real _t0FB5 = prim -0026<$[]> (_t0FAF, _t0FB4);
  real _t0FB6 = 0.e0;
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.1e1;
  vec3 _t0FB9 = [_t0FB6, _t0FB7, _t0FB8];
  real _t0FBA = prim •00CE<$[3]; $[3]; $[]> (_t0FB9, dPos0CED);
  real _t0FBB = prim /0055 (_t0FB5, _t0FBA);
  bool _t0FBC = prim >0080 (time0F20, _t0FBB);
  bool _t0FBD = prim $and01C4 (_t0FAE, _t0FBC);
  if _t0FBD {
    real _t0FBE = 0.e0;
    real _t0FBF = 0.e0;
    real _t0FC0 = 0.e0;
    real _t0FC1 = 0.1e1;
    vec3 _t0FC2 = [_t0FBF, _t0FC0, _t0FC1];
    real _t0FC3 = prim •00CE<$[3]; $[3]; $[]> (_t0FC2, refPos0CEC);
    real _t0FC4 = prim -0026<$[]> (_t0FBE, _t0FC3);
    real _t0FC5 = 0.e0;
    real _t0FC6 = 0.e0;
    real _t0FC7 = 0.1e1;
    vec3 _t0FC8 = [_t0FC5, _t0FC6, _t0FC7];
    real _t0FC9 = prim •00CE<$[3]; $[3]; $[]> (_t0FC8, dPos0CED);
    time0F20 = prim /0055 (_t0FC4, _t0FC9);
    face0F21 = 3;
  }
  int _t0FCA = -1;
  bool _t0FCB = prim !=0086 (face0F21, _t0FCA);
  if _t0FCB {
    real _t0FCC = (real)face0F21;
    vec2 _t0FCD = [time0F20, _t0FCC];
    return _t0FCD;
  } else {
    real _t0FCE = -0.1e1;
    real _t0FCF = -0.1e1;
    vec2 _t0FD0 = [_t0FCE, _t0FCF];
    return _t0FD0;
  }
}
function Femdata: Mesh#0 domain0FD1 (Femdata: Space arg00FD2)
{
  Femdata: Mesh _t0FD3 = extractFem(arg00FD2, Mesh);
  return _t0FD3;
}
function Femdata: Space#0 space0FD4 (Femdata: FemFunc arg00FD5)
{
  Femdata: Space _t0FD6 = extractFem(arg00FD5, Space);
  return _t0FD6;
}
function Femdata: FuncCell#0 funcCell0FD7 (Femdata: FemFunc arg00FD8, Femdata: MeshCell arg10FD9)
{
  int _t0FDA = extractFemItem(CellIndex(MeshCell), int, arg10FD9);
  Femdata: FuncCell _t0FDB = loadFem(FuncCell, arg00FD8, _t0FDA);
  return _t0FDB;
}
function real#1 mask0FEB (vec3 x0FEC)
{
  real _t0FED = 0.1e1;
  return _t0FED;
}
function vec3#1 color0FF4 (vec3 x0FF5)
{
  real _t0FF6 = prim @00A5<#∞; %3; $[]> (V0FE7, x0FF5);
  vec3 _t0FF7 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t0FF6);
  return _t0FF7;
}
function real#1 alpha0FF8 (real v0FF9, real g0FFA)
{
  real _t0FFB = 0.e0;
  real _t0FFC = 0.1e1;
  real _t0FFD = 0.13e1;
  real _t0FFE = 0.1e1;
  real _t0FFF = prim |()|00B5<$[]> (v0FF9);
  real _t1000 = prim *0034 (g0FFA, thick0440);
  real _t1001 = prim /0055 (_t0FFF, _t1000);
  real _t1002 = prim -0026<$[]> (_t0FFE, _t1001);
  real _t1003 = prim *0034 (_t0FFD, _t1002);
  real _t1004 = prim clamp0094<$[]> (_t0FFB, _t0FFC, _t1003);
  return _t1004;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058 = func alpha0FF8 (val1053, _t1057);
                  real _t1059 = func mask0FEB (x103E);
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070 = func color0FF4 (x103E);
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058;
                  real _t1096 = 0.e0;
                  real _t1097 = 0.1e1;
                  real _t1098 = 0.13e1;
                  real _t1099 = 0.1e1;
                  real _t109A = prim |()|00B5<$[]> (val1053);
                  real _t109B = prim *0034 (_t1057, thick0440);
                  real _t109C = prim /0055 (_t109A, _t109B);
                  real _t109D = prim -0026<$[]> (_t1099, _t109C);
                  real _t109E = prim *0034 (_t1098, _t109D);
                  real _t109F = prim clamp0094<$[]> (_t1096, _t1097, _t109E);
                  _t1058 = _t109F;
                  real _t1059;
                  real _t1095 = 0.1e1;
                  _t1059 = _t1095;
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070;
                    real _t1093 = prim @00A5<#∞; %3; $[]> (V0FE7, x103E);
                    vec3 _t1094 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t1093);
                    _t1070 = _t1094;
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058;
                  real _t1096 = 0.e0;
                  real _t1097 = 0.1e1;
                  real _t1098 = 0.13e1;
                  real _t1099 = 0.1e1;
                  real _t109A = prim |()|00B5<$[]> (val1053);
                  real _t109B = prim *0034 (_t1057, thick0440);
                  real _t109C = prim /0055 (_t109A, _t109B);
                  real _t109D = prim -0026<$[]> (_t1099, _t109C);
                  real _t109E = prim *0034 (_t1098, _t109D);
                  real _t109F = prim clamp0094<$[]> (_t1096, _t1097, _t109E);
                  _t1058 = _t109F;
                  real _t1059;
                  real _t1095 = 0.1e1;
                  _t1059 = _t1095;
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070;
                    real _t1093 = prim @00A5<#∞; %3; $[]> (V0FE7, x103E);
                    vec3 _t1094 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t1093);
                    _t1070 = _t1094;
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui101A, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi101B, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058;
                  real _t1096 = 0.e0;
                  real _t1097 = 0.1e1;
                  real _t1098 = 0.13e1;
                  real _t1099 = 0.1e1;
                  real _t109A = prim |()|00B5<$[]> (val1053);
                  real _t109B = prim *0034 (_t1057, thick0440);
                  real _t109C = prim /0055 (_t109A, _t109B);
                  real _t109D = prim -0026<$[]> (_t1099, _t109C);
                  real _t109E = prim *0034 (_t1098, _t109D);
                  real _t109F = prim clamp0094<$[]> (_t1096, _t1097, _t109E);
                  _t1058 = _t109F;
                  real _t1059;
                  real _t1095 = 0.1e1;
                  _t1059 = _t1095;
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070;
                    real _t1093 = prim @00A5<#∞; %3; $[]> (V0FE7, x103E);
                    vec3 _t1094 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t1093);
                    _t1070 = _t1094;
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui101A, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi101B, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  int ui10A1;
  int vi10A0;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
    ui10A1 = ui101A;
    vi10A0 = vi101B;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui10A1, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi10A0, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058;
                  real _t1096 = 0.e0;
                  real _t1097 = 0.1e1;
                  real _t1098 = 0.13e1;
                  real _t1099 = 0.1e1;
                  real _t109A = prim |()|00B5<$[]> (val1053);
                  real _t109B = prim *0034 (_t1057, thick0440);
                  real _t109C = prim /0055 (_t109A, _t109B);
                  real _t109D = prim -0026<$[]> (_t1099, _t109C);
                  real _t109E = prim *0034 (_t1098, _t109D);
                  real _t109F = prim clamp0094<$[]> (_t1096, _t1097, _t109E);
                  _t1058 = _t109F;
                  real _t1059;
                  real _t1095 = 0.1e1;
                  _t1059 = _t1095;
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070;
                    real _t1093 = prim @00A5<#∞; %3; $[]> (V0FE7, x103E);
                    vec3 _t1094 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t1093);
                    _t1070 = _t1094;
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui10A1, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi10A0, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V0FE7;
global field#4(3)[] F0FEA;
global IMAGE1D<double[3]> I0FF0;
global field#0(1)[3] cmap0FF3;
global real camDist1006;
global vec3 camN1008;
global vec3 camU100A;
global vec3 camV100B;
global real camVmax1011;
global real camUmax1015;
global vec3 light1019;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  string _t04AF = "Bad end 2";
  string _t04B0 = "\n";
  print (_t04AF, _t04B0);
  Femdata: MeshPos _t04B1 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04B1;
}
function int[2]#5 nextCell40530 (int faceIdx098A, int cell098B, Femdata: Mesh mesh098C)
{
  int _t098D = 8;
  int _t098E = prim *0033 (cell098B, _t098D);
  int _t098F = 2;
  int _t0990 = prim *0033 (faceIdx098A, _t098F);
  int _t0991 = prim +0015 (_t098E, _t0990);
  int[2] _t0992 = extractFemItemN((mesh098C, _t0991),CellFaceCell(Mesh),);
  return _t0992;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t0FDC = extractFem(c043D, Space);
  Femdata: Space _t0FDD = extractFem(c043D, Space);
  Femdata: Mesh _t0FDE = extractFem(_t0FDD, Mesh);
  field(3)[] _t0FDF = femField(c043D,_t0FDE,field(3)[],refField,findPos0467 );
  Femdata: Space _t0FE0 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE1 = extractFem(_t0FE0, Mesh);
  Femdata: Space _t0FE2 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE3 = extractFem(_t0FE2, Mesh);
  Femdata: Space _t0FE4 = extractFem(c043D, Space);
  Femdata: Mesh _t0FE5 = extractFem(_t0FE4, Mesh);
  field(3)[3] _t0FE6 = femField(_t0FE1,_t0FE5,field(3)[3],InvTransform,findPos0467 );
  V0FE7 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FDF, _t0FE6);
  field(3)[] _t0FE8 = prim -002E<#∞; %3; $[]> (V0FE7, isoval043F);
  field#4(3)[] _t0FE9 = (field#4(3)[])_t0FE8;
  F0FEA = _t0FE9;
  I0FF0 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FF1 = tent;
  IMAGE1D<double[3]> img0FF2 = clamp(I0FF0);
  cmap0FF3 = prim ⊛0074<#0; %1; $[3]> (_t0FF1, img0FF2);
  vec3 _t1005 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1006 = prim |()|00B5<$[3]> (_t1005);
  vec3 _t1007 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1008 = prim normalize0137<$[3]> (_t1007);
  vec3 _t1009 = prim ×00BE (camN1008, camUp0449);
  camU100A = prim normalize0137<$[3]> (_t1009);
  camV100B = prim ×00BE (camU100A, camN1008);
  real _t100C = 0.314159265358979323846264338327950288e1;
  real _t100D = prim *0034 (camFOV044D, _t100C);
  real _t100E = 0.36e3;
  real _t100F = prim /0055 (_t100D, _t100E);
  real _t1010 = prim tan0179 (_t100F);
  camVmax1011 = prim *0034 (_t1010, camDist1006);
  real _t1012 = (real)iresU044E;
  real _t1013 = prim *0034 (camVmax1011, _t1012);
  real _t1014 = (real)iresV044F;
  camUmax1015 = prim /0055 (_t1013, _t1014);
  tensor[3,3] _t1016 = [camU100A, camV100B, camN1008];
  tensor[3,3] _t1017 = prim transpose0145<%3; %3> (_t1016);
  vec3 _t1018 = prim normalize0137<$[3]> (lightVsp0454);
  light1019 = prim •00CE<$[3,3]; $[3]; $[3]> (_t1017, _t1018);
}
strand raycast (int ui101A, int vi101B) {
  real rayU101C;
  real rayV1023;
  real rayN102A;
  vec3 rayVec102B;
  real transp1030;
  vec3 rgb1031;
  output vec4 rgba1035;
  output real gray103A;
  int ui10A1;
  int vi10A0;
  {
    real _t101D = prim unary -008B<$[]> (camUmax1015);
    real _t101E = -0.5e0;
    real _t101F = (real)ui101A;
    real _t1020 = (real)iresU044E;
    real _t1021 = 0.5e0;
    real _t1022 = prim -0026<$[]> (_t1020, _t1021);
    rayU101C = prim lerp0098<$[]> (_t101D, camUmax1015, _t101E, _t101F, _t1022);
    real _t1024 = prim unary -008B<$[]> (camVmax1011);
    real _t1025 = -0.5e0;
    real _t1026 = (real)vi101B;
    real _t1027 = (real)iresV044F;
    real _t1028 = 0.5e0;
    real _t1029 = prim -0026<$[]> (_t1027, _t1028);
    rayV1023 = prim lerp0098<$[]> (camVmax1011, _t1024, _t1025, _t1026, _t1029);
    rayN102A = camNear0450;
    vec3 _t102C = prim *0036<$[3]> (rayU101C, camU100A);
    vec3 _t102D = prim *0036<$[3]> (rayV1023, camV100B);
    vec3 _t102E = prim +0017<$[3]> (_t102C, _t102D);
    vec3 _t102F = prim /0057<$[3]> (_t102E, camDist1006);
    rayVec102B = prim +0017<$[3]> (camN1008, _t102F);
    transp1030 = 0.1e1;
    real _t1032 = 0.e0;
    real _t1033 = 0.e0;
    real _t1034 = 0.e0;
    rgb1031 = [_t1032, _t1033, _t1034];
    real _t1036 = 0.e0;
    real _t1037 = 0.e0;
    real _t1038 = 0.e0;
    real _t1039 = 0.e0;
    rgba1035 = [_t1036, _t1037, _t1038, _t1039];
    gray103A = 0.e0;
    ui10A1 = ui101A;
    vi10A0 = vi101B;
  }
  update
  {
    if debug045A {
      bool _t103B;
      bool _t103C = prim !=0086 (ui10A1, su045B);
      if _t103C {
        _t103B = true;
      } else {
        _t103B = prim !=0086 (vi10A0, sv045C);
      }
      if _t103B {
        stabilize;
      }
    }
    vec3 _t103D = prim *0036<$[3]> (rayN102A, rayVec102B);
    vec3 x103E = prim +0017<$[3]> (camEye0441, _t103D);
    real _t103F = 0.e0;
    real _t1040 = x103E[0];
    bool _t1041 = prim <007A (_t103F, _t1040);
    if _t1041 {
      real _t1042 = x103E[0];
      real _t1043 = 0.1e1;
      bool _t1044 = prim <007A (_t1042, _t1043);
      if _t1044 {
        real _t1045 = 0.e0;
        real _t1046 = x103E[1];
        bool _t1047 = prim <007A (_t1045, _t1046);
        if _t1047 {
          real _t1048 = x103E[1];
          real _t1049 = 0.1e1;
          bool _t104A = prim <007A (_t1048, _t1049);
          if _t104A {
            real _t104B = 0.e0;
            real _t104C = x103E[2];
            bool _t104D = prim <007A (_t104B, _t104C);
            if _t104D {
              real _t104E = x103E[2];
              real _t104F = 0.1e1;
              bool _t1050 = prim <007A (_t104E, _t104F);
              if _t1050 {
                Femdata: MeshPos p1051 = func findPos0467 (a042F, x103E);
                bool _t1052 = extractFemItem(Valid(MeshPos), bool, p1051);
                if _t1052 {
                  real val1053 = prim @00A5<#4; %3; $[]> (F0FEA, x103E);
                  field#3(3)[3] _t1054 = prim ∇00A8<#4; %3> (F0FEA);
                  vec3 _t1055 = prim @00A5<#3; %3; $[3]> (_t1054, x103E);
                  vec3 grad1056 = prim unary -008B<$[3]> (_t1055);
                  real _t1057 = prim |()|00B5<$[3]> (grad1056);
                  real _t1058;
                  real _t1096 = 0.e0;
                  real _t1097 = 0.1e1;
                  real _t1098 = 0.13e1;
                  real _t1099 = 0.1e1;
                  real _t109A = prim |()|00B5<$[]> (val1053);
                  real _t109B = prim *0034 (_t1057, thick0440);
                  real _t109C = prim /0055 (_t109A, _t109B);
                  real _t109D = prim -0026<$[]> (_t1099, _t109C);
                  real _t109E = prim *0034 (_t1098, _t109D);
                  real _t109F = prim clamp0094<$[]> (_t1096, _t1097, _t109E);
                  _t1058 = _t109F;
                  real _t1059;
                  real _t1095 = 0.1e1;
                  _t1059 = _t1095;
                  real a105A = prim *0034 (_t1058, _t1059);
                  real _t105B = 0.e0;
                  bool _t105C = prim >0080 (a105A, _t105B);
                  if _t105C {
                    real _t105D = 0.1e1;
                    real _t105E = 0.1e1;
                    real _t105F = prim -0026<$[]> (_t105E, a105A);
                    real _t1060 = prim |()|00B5<$[3]> (rayVec102B);
                    real _t1061 = prim *0034 (rayStep0453, _t1060);
                    real _t1062 = prim /0055 (_t1061, refStep0452);
                    real _t1063 = prim pow018E (_t105F, _t1062);
                    a105A = prim -0026<$[]> (_t105D, _t1063);
                    real _t1064 = 0.11e1;
                    real _t1065 = 0.7e0;
                    real depth1066 = prim lerp0098<$[]> (_t1064, _t1065, camNear0450, rayN102A, camFar0451);
                    real _t1067 = 0.e0;
                    vec3 _t1068 = prim normalize0137<$[3]> (grad1056);
                    real _t1069 = prim •00CE<$[3]; $[3]; $[]> (_t1068, light1019);
                    real shade106A = prim max0125 (_t1067, _t1069);
                    real _t106B = prim *0034 (transp1030, a105A);
                    real _t106C = prim *0034 (_t106B, depth1066);
                    real _t106D = prim *0034 (phongKd0459, shade106A);
                    real _t106E = prim +0017<$[]> (phongKa0458, _t106D);
                    real _t106F = prim *0034 (_t106C, _t106E);
                    vec3 _t1070;
                    real _t1093 = prim @00A5<#∞; %3; $[]> (V0FE7, x103E);
                    vec3 _t1094 = prim @00A5<#0; %1; $[3]> (cmap0FF3, _t1093);
                    _t1070 = _t1094;
                    vec3 _t1071 = prim *0036<$[3]> (_t106F, _t1070);
                    rgb1031 = prim +0017<$[3]> (rgb1031, _t1071);
                    real _t1072 = 0.1e1;
                    real _t1073 = prim -0026<$[]> (_t1072, a105A);
                    transp1030 = prim *0034 (transp1030, _t1073);
                  }
                } else {
                  string _t1074 = "\n";
                  print (x103E, _t1074);
                  string _t1075 = "wait what\?\n";
                  print (_t1075);
                }
              }
            }
          }
        }
      }
    }
    real _t1076 = 0.1e-1;
    bool _t1077 = prim <007A (transp1030, _t1076);
    if _t1077 {
      transp1030 = 0.e0;
      stabilize;
    }
    bool _t1078 = prim >0080 (rayN102A, camFar0451);
    if _t1078 {
      stabilize;
    }
    rayN102A = prim +0017<$[]> (rayN102A, rayStep0453);
  }
  stabilize
  {
    real _t1079 = 0.1e1;
    real a107A = prim -0026<$[]> (_t1079, transp1030);
    real _t107B = 0.e0;
    bool _t107C = prim >0080 (a107A, _t107B);
    if _t107C {
      real _t107D = rgb1031[0];
      real _t107E = prim /0055 (_t107D, a107A);
      real _t107F = rgb1031[1];
      real _t1080 = prim /0055 (_t107F, a107A);
      real _t1081 = rgb1031[2];
      real _t1082 = prim /0055 (_t1081, a107A);
      rgba1035 = [_t107E, _t1080, _t1082, a107A];
    }
    bool _t1083 = prim ==0082 (ui10A1, su045B);
    if _t1083 {
      bool _t1084 = prim ==0082 (vi10A0, sv045C);
      if _t1084 {
        if debug045A {
          print (a107A, rgba1035);
        }
      }
    }
  }
}
grid(2) {
  int _t1085 = 0;
  int _t1086 = 1;
  int _t1087 = prim -0024 (iresV044F, _t1086);
  int[] _t1088 = prim $range01C3 (_t1085, _t1087);
  foreach vi108E in _t1088 {
    int _t1089 = 0;
    int _t108A = 1;
    int _t108B = prim -0024 (iresU044E, _t108A);
    int[] _t108C = prim $range01C3 (_t1089, _t108B);
    foreach ui108D in _t108C {
      new raycast (ui108D, vi108E);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10A2 (a) = <no-default>
  input 0b043B_intermedateGlobal10A3 (b) = <no-default>
  input 0c043D_intermedateGlobal10A4 (c) = <no-default>
  input isoval10A5 (isoval) = <default>
  input thick10A6 (thick) = <default>
  input camEye10A7 (camEye) = <default>
  input camAt10A8 (camAt) = <default>
  input camUp10A9 (camUp) = <default>
  input camFOV10AA (camFOV) = <default>
  input iresU10AB (iresU) = <default>
  input iresV10AC (iresV) = <default>
  input camNear10AD (camNear) = <default>
  input camFar10AE (camFar) = <default>
  input refStep10AF (refStep) = <default>
  input rayStep10B0 (rayStep) = <default>
  input lightVsp10B1 (lightVsp) = <default>
  input phongKa10B2 (phongKa) = <default>
  input phongKd10B3 (phongKd) = <default>
  input debug10B4 (debug) = <default>
  input su10B5 (su) = <default>
  input sv10B6 (sv) = <default>
  global femData:Space b1107
  global femData:FemFunc c1108
  global field V1109
  global field F110A
  global image(IMAGE1D<double[3]>) I110B
  global field cmap110C
  global real camDist110D
  global tensor[3] camN110E
  global tensor[3] camU110F
  global tensor[3] camV1110
  global real camVmax1111
  global real camUmax1112
  global tensor[3] light1113
## functions
  function femData:MeshPos findPos11B7 (femData:Mesh mesh1114#9, tensor[3] pos1115#3) {
    ENTRY11B6:  preds = []
      real _t1116#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1118#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t111A#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn111C#1 = <tensor[3]>[_t1116,_t1118,_t111A];
      int newtonInt111E#0 = 0;
      int cellInt1120#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1114);
      int _t1122#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1114);
      int _t1124#1 = 1;
      int numCell1126#0 = ISub(_t1122,_t1124);
      int[] yayCells1128#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1114,pos1115);
    FOREACH112C:  preds = [ASSIGN1129,NEXT11AD]
      foreach (cellItter112A in yayCells1128) on exit goto ASSIGN11AF
        int cellInt112E#0 = phi(cellInt1120,cellInt112D)
        tensor[3] xn112B#1 = phi(xn111C,xn1147)
      int cellInt112D#4 = cellItter112A;
      field _t1130#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt112D,mesh1114,mesh1114);
      field _t1132#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1130);
      field _t1134#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1132);
      real _t1136#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1138#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t113A#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t113C#1 = <tensor[3]>[_t1136,_t1138,_t113A];
      tensor[3,3] A113E#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1134,_t113C);
      int _t1140#1 = 0;
      int _t1142#1 = 2;
      int[] _t1144#1 = Range(_t1140,_t1142);
    FOREACH1148:  preds = [ASSIGN1145,NEXT11AC]
      foreach (newtonItter1146 in _t1144) on exit goto NEXT11AD
        tensor[3] xn1147#3 = phi(xn112B,xn1151)
      field _t1149#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt112D,mesh1114,mesh1114);
      field _t114B#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1115,_t1149);
      field _t114D#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A113E,_t114B);
      tensor[3] delta114F#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t114D,xn1147);
      tensor[3] xn1151#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1147,delta114F);
      real _t1153#1 = 0.1e-7;
      real _t1155#1 = 0.1e-7;
      real _t1157#1 = λ(T0[],T1[])<(T0 * T1)> (_t1153,_t1155);
      real _t1159#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta114F,delta114F);
      bool _t115B#1 = GTE<real>(_t1157,_t1159);
      if _t115B then goto ASSIGN115F else goto JOIN115D
    ASSIGN115F:  preds = [COND11AB]
      real _t115E#1 = 0.1e1;
      real _t1160#1 = 0.1e-4;
      real _t1162#1 = λ(T0[],T1[])<(T0 + T1)> (_t115E,_t1160);
      real _t1164#1 = 0.1e1;
      real _t1166#1 = 0.1e1;
      real _t1168#1 = 0.1e1;
      tensor[3] _t116A#1 = <tensor[3]>[_t1164,_t1166,_t1168];
      real _t116C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t116A,xn1151);
      bool _t116E#1 = GT<real>(_t1162,_t116C);
      real _t1170#1 = 0.1e-4;
      real _t1172#1 = 0.1e-4;
      real _t1174#1 = 0.1e-4;
      tensor[3] _t1176#1 = <tensor[3]>[_t1170,_t1172,_t1174];
      tensor[3] _t1178#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1176,xn1151);
      real _t117A#1 = TensorIndex<tensor[3],[0]>(_t1178);
      real _t117C#1 = -0.e0;
      bool _t117E#1 = GT<real>(_t117A,_t117C);
      real _t1180#1 = 0.1e-4;
      real _t1182#1 = 0.1e-4;
      real _t1184#1 = 0.1e-4;
      tensor[3] _t1186#1 = <tensor[3]>[_t1180,_t1182,_t1184];
      tensor[3] _t1188#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1186,xn1151);
      real _t118A#1 = TensorIndex<tensor[3],[1]>(_t1188);
      real _t118C#1 = -0.e0;
      bool _t118E#1 = GT<real>(_t118A,_t118C);
      real _t1190#1 = 0.1e-4;
      real _t1192#1 = 0.1e-4;
      real _t1194#1 = 0.1e-4;
      tensor[3] _t1196#1 = <tensor[3]>[_t1190,_t1192,_t1194];
      tensor[3] _t1198#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1196,xn1151);
      real _t119A#1 = TensorIndex<tensor[3],[2]>(_t1198);
      real _t119C#1 = -0.e0;
      bool _t119E#1 = GT<real>(_t119A,_t119C);
      bool _t11A0#1 = BAnd(_t118E,_t119E);
      bool _t11A2#1 = BAnd(_t117E,_t11A0);
      bool _t11A4#1 = BAnd(_t116E,_t11A2);
      if _t11A4 then goto ASSIGN11A8 else goto JOIN11A6
    ASSIGN11A8:  preds = [COND11AA]
      femData:MeshPos _t11A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1114,cellInt112D,xn1151,pos1115);
      return _t11A7
      goto JOIN11A6
    JOIN11A6:  preds = [*RETURN(_t11A7)11A9,COND11AA]
      goto JOIN115D
    JOIN115D:  preds = [JOIN11A6,COND11AB]
      goto FOREACH1148
    NEXT11AD:  preds = [FOREACH1148]
      goto FOREACH112C
    ASSIGN11AF:  preds = [FOREACH112C]
      string _t11AE#1 = "Bad end 2";
      string _t11B0#1 = "\n";
      Print<[string,string]>(_t11AE,_t11B0);
      femData:MeshPos _t11B3#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1114);
      return _t11B3
}
  function int[2] nextCell411C9 (int faceIdx11B8#1, int cell11B9#1, femData:Mesh mesh11BA#1) {
    ENTRY11C8:  preds = []
      int _t11BB#1 = 8;
      int _t11BD#1 = IMul(cell11B9,_t11BB);
      int _t11BF#1 = 2;
      int _t11C1#1 = IMul(faceIdx11B8,_t11BF);
      int _t11C3#1 = IAdd(_t11BD,_t11C1);
      int[2] _t11C5#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11BA,_t11C3);
      return _t11C5
}
## input initialization
  ENTRY1105:  preds = []
    real isoval10B7#1 = 0.2e0;
    globals.isoval10A5 = isoval10B7;
    real thick10BA#1 = 0.7e-1;
    globals.thick10A6 = thick10BA;
    real _t10BD#1 = 0.3e1;
    real _t10BF#1 = -0.3e1;
    real _t10C1#1 = 0.3e1;
    tensor[3] camEye10C3#1 = <tensor[3]>[_t10BD,_t10BF,_t10C1];
    globals.camEye10A7 = camEye10C3;
    real _t10C6#1 = 0.5e0;
    real _t10C8#1 = 0.5e0;
    real _t10CA#1 = 0.5e0;
    tensor[3] camAt10CC#1 = <tensor[3]>[_t10C6,_t10C8,_t10CA];
    globals.camAt10A8 = camAt10CC;
    real _t10CF#1 = 0.e0;
    real _t10D1#1 = 0.e0;
    real _t10D3#1 = 0.1e1;
    tensor[3] camUp10D5#1 = <tensor[3]>[_t10CF,_t10D1,_t10D3];
    globals.camUp10A9 = camUp10D5;
    real camFOV10D8#1 = 0.137e2;
    globals.camFOV10AA = camFOV10D8;
    int iresU10DB#1 = 500;
    globals.iresU10AB = iresU10DB;
    int iresV10DE#1 = 500;
    globals.iresV10AC = iresV10DE;
    real camNear10E1#1 = -0.2e1;
    globals.camNear10AD = camNear10E1;
    real camFar10E4#1 = 0.5e1;
    globals.camFar10AE = camFar10E4;
    real refStep10E7#1 = 0.1e1;
    globals.refStep10AF = refStep10E7;
    real rayStep10EA#1 = 0.1e-1;
    globals.rayStep10B0 = rayStep10EA;
    real _t10ED#1 = 0.e0;
    real _t10EF#1 = 0.e0;
    real _t10F1#1 = 0.1e1;
    tensor[3] lightVsp10F3#1 = <tensor[3]>[_t10ED,_t10EF,_t10F1];
    globals.lightVsp10B1 = lightVsp10F3;
    real phongKa10F6#1 = 0.1e0;
    globals.phongKa10B2 = phongKa10F6;
    real phongKd10F9#1 = 0.9e0;
    globals.phongKd10B3 = phongKd10F9;
    bool debug10FC#1 = false;
    globals.debug10B4 = debug10FC;
    int su10FF#1 = 250;
    globals.su10B5 = su10FF;
    int sv1102#1 = 250;
    globals.sv10B6 = sv1102;
    return
## global-variable initialization
  ENTRY1255:  preds = []
    femData:Mesh a11D4#3 = globals.a10A2;
    femData:Space 0b043B_intermedateGlobal11D3#1 = globals.0b043B_intermedateGlobal10A3;
    femData:FemFunc 0c043D_intermedateGlobal11D2#1 = globals.0c043D_intermedateGlobal10A4;
    real isoval11D1#1 = globals.isoval10A5;
    tensor[3] camEye11D0#2 = globals.camEye10A7;
    tensor[3] camAt11CF#2 = globals.camAt10A8;
    tensor[3] camUp11CE#1 = globals.camUp10A9;
    real camFOV11CD#1 = globals.camFOV10AA;
    int iresU11CC#1 = globals.iresU10AB;
    int iresV11CB#1 = globals.iresV10AC;
    tensor[3] lightVsp11CA#2 = globals.lightVsp10B1;
    int _t11E0#1 = 0;
    int _t11E2#1 = 1;
    int _t11E4#1 = ExtractFemItem<int,NumCell(Mesh)>(a11D4);
    int _t11E6#1 = ISub(_t11E4,_t11E2);
    int[] _t11E8#1 = Range(_t11E0,_t11E6);
    femData:MeshCell[] _t11EA#1 = <femData:MeshCell[]>{};
  FOREACH11EE:  preds = [ASSIGN11EB,NEXT11F3]
    foreach (_t11EC in _t11E8) on exit goto ASSIGN11F5
      femData:MeshCell[] _t11ED#1 = phi(_t11EA,_t11F1)
    femData:MeshCell _t11EF#1 = LoadFem<femData:MeshCell>(a11D4,_t11EC);
    femData:MeshCell[] _t11F1#1 = Append<femData:MeshCell>(_t11ED,_t11EF);
    goto FOREACH11EE
  ASSIGN11F5:  preds = [FOREACH11EE]
    femData:Space b11F4#2 = LoadFem<femData:Space>(0b043B_intermedateGlobal11D3,a11D4);
    globals.b1107 = b11F4;
    femData:FemFunc c11F7#7 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal11D2,b11F4);
    globals.c1108 = c11F7;
    femData:Space _t11FA#1 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Space _t11FC#1 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t11FE#1 = ExtractFem<femData:Mesh,femData:Space>(_t11FC);
    field _t1200#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(11B7, 0, 1, 2)⊛Basis()> (_t11FE,_t11FA,c11F7);
    femData:Space _t1202#1 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t1204#2 = ExtractFem<femData:Mesh,femData:Space>(_t1202);
    femData:Space _t1206#1 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t1208#0 = ExtractFem<femData:Mesh,femData:Space>(_t1206);
    femData:Space _t120A#1 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t120C#1 = ExtractFem<femData:Mesh,femData:Space>(_t120A);
    field _t120E#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(11B7, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t120C,_t1204,_t1204);
    field V1210#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t1200,_t120E);
    globals.V1109 = V1210;
    field _t1213#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval11D1,V1210);
    field _t1215#1 = _t1213;
    field F1217#1 = _t1215;
    globals.F110A = F1217;
    image(IMAGE1D<double[3]>) I121A#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I110B = I121A;
    kernel _t121D#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img121F#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I121A);
    field cmap1221#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img121F,_t121D);
    globals.cmap110C = cmap1221;
    tensor[3] _t1224#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11CF,camEye11D0);
    real camDist1226#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1224);
    globals.camDist110D = camDist1226;
    tensor[3] _t1229#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11CF,camEye11D0);
    tensor[3] camN122B#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1229,_t1229);
    globals.camN110E = camN122B;
    tensor[3] _t122E#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN122B,camUp11CE);
    tensor[3] camU1230#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t122E,_t122E);
    globals.camU110F = camU1230;
    tensor[3] camV1233#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1230,camN122B);
    globals.camV1110 = camV1233;
    real _t1236#1 = 0.314159265358979323846264338327950288e1;
    real _t1238#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV11CD,_t1236);
    real _t123A#1 = 0.36e3;
    real _t123C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1238,_t123A);
    real _t123E#1 = λ(T0[])<Tangent(T0)> (_t123C);
    real camVmax1240#2 = λ(T0[],T1[])<(T0 * T1)> (_t123E,camDist1226);
    globals.camVmax1111 = camVmax1240;
    real _t1243#1 = IntToReal(iresU11CC);
    real _t1245#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1240,_t1243);
    real _t1247#1 = IntToReal(iresV11CB);
    real camUmax1249#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1245,_t1247);
    globals.camUmax1112 = camUmax1249;
    tensor[3,3] _t124C#1 = <tensor[3,3]>[camU1230,camV1233,camN122B];
    tensor[3,3] _t124E#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t124C);
    tensor[3] _t1250#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp11CA,lightVsp11CA);
    tensor[3] light1252#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t124E,_t1250);
    globals.light1113 = light1252;
    return
## strand
  strand raycast (int ui1274#2, int vi1275#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12DE:  preds = []
        int iresU1288#1 = globals.iresU10AB;
        int iresV1287#1 = globals.iresV10AC;
        real camNear1286#1 = globals.camNear10AD;
        real camDist1285#1 = globals.camDist110D;
        tensor[3] camN1284#1 = globals.camN110E;
        tensor[3] camU1283#1 = globals.camU110F;
        tensor[3] camV1282#1 = globals.camV1110;
        real camVmax1281#2 = globals.camVmax1111;
        real camUmax1280#2 = globals.camUmax1112;
        real _t129C#1 = λ(T0[])<Neg(T0)> (camUmax1280);
        real _t129E#1 = -0.5e0;
        real _t12A0#1 = IntToReal(ui1274);
        real _t12A2#1 = IntToReal(iresU1288);
        real _t12A4#1 = 0.5e0;
        real _t12A6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t12A2,_t12A4);
        real rayU12A8#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t129C,camUmax1280,_t129E,_t12A0,_t12A6);
        real _t12AA#1 = λ(T0[])<Neg(T0)> (camVmax1281);
        real _t12AC#1 = -0.5e0;
        real _t12AE#1 = IntToReal(vi1275);
        real _t12B0#1 = IntToReal(iresV1287);
        real _t12B2#1 = 0.5e0;
        real _t12B4#1 = λ(T0[],T1[])<(T0) - (T1)> (_t12B0,_t12B2);
        real rayV12B6#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax1281,_t12AA,_t12AC,_t12AE,_t12B4);
        real rayN12B8#1 = camNear1286;
        tensor[3] _t12BA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU12A8,camU1283);
        tensor[3] _t12BC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV12B6,camV1282);
        tensor[3] _t12BE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t12BA,_t12BC);
        tensor[3] _t12C0#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t12BE,camDist1285);
        tensor[3] rayVec12C2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1284,_t12C0);
        real transp12C4#1 = 0.1e1;
        real _t12C6#1 = 0.e0;
        real _t12C8#1 = 0.e0;
        real _t12CA#1 = 0.e0;
        tensor[3] rgb12CC#1 = <tensor[3]>[_t12C6,_t12C8,_t12CA];
        real _t12CE#1 = 0.e0;
        real _t12D0#1 = 0.e0;
        real _t12D2#1 = 0.e0;
        real _t12D4#1 = 0.e0;
        tensor[4] rgba12D6#1 = <tensor[4]>[_t12CE,_t12D0,_t12D2,_t12D4];
        real gray12D8#1 = 0.e0;
        int ui12DA#1 = ui1274;
        int vi12DC#1 = vi1275;
        self.rayU = rayU12A8;
        self.rayV = rayV12B6;
        self.rayN = rayN12B8;
        self.rayVec = rayVec12C2;
        self.transp = transp12C4;
        self.rgb = rgb12CC;
        self.rgba = rgba12D6;
        self.gray = gray12D8;
        self.ui = ui12DA;
        self.vi = vi12DC;
        return
    end state init
    method update
        ENTRY1402:  preds = []
          femData:Mesh a12F9#1 = globals.a10A2;
          real thick12F8#1 = globals.thick10A6;
          tensor[3] camEye12F7#1 = globals.camEye10A7;
          real camNear12F6#1 = globals.camNear10AD;
          real camFar12F5#2 = globals.camFar10AE;
          real refStep12F4#1 = globals.refStep10AF;
          real rayStep12F3#2 = globals.rayStep10B0;
          real phongKa12F2#1 = globals.phongKa10B2;
          real phongKd12F1#1 = globals.phongKd10B3;
          bool debug12F0#1 = globals.debug10B4;
          int su12EF#1 = globals.su10B5;
          int sv12EE#1 = globals.sv10B6;
          field V12ED#1 = globals.V1109;
          field F12EC#2 = globals.F110A;
          field cmap12EB#1 = globals.cmap110C;
          tensor[3] light12EA#1 = globals.light1113;
          real rayU130A#0 = self.rayU;
          real rayV130B#0 = self.rayV;
          real rayN130C#7 = self.rayN;
          tensor[3] rayVec130D#2 = self.rayVec;
          real transp130E#11 = self.transp;
          tensor[3] rgb130F#10 = self.rgb;
          tensor[4] rgba1310#4 = self.rgba;
          real gray1311#0 = self.gray;
          int ui1312#1 = self.ui;
          int vi1313#1 = self.vi;
          if debug12F0 then goto ASSIGN1321 else goto JOIN131E
        ASSIGN1321:  preds = [COND1330]
          bool _t1320#1 = NEQ<int>(ui1312,su12EF);
          if _t1320 then goto ASSIGN1325 else goto ASSIGN1327
        ASSIGN1325:  preds = [COND1328]
          bool _t1323#1 = true;
          goto JOIN1322
        JOIN1322:  preds = [ASSIGN1325,ASSIGN1327]
          bool _t1324#1 = phi(_t1323,_t1326)
          if _t1324 then goto SAVE132B else goto JOIN1329
        SAVE132B:  preds = [COND132F]
          self.rayN = rayN130C;
          self.transp = transp130E;
          self.rgb = rgb130F;
          self.rgba = rgba1310;
          stabilize
          goto JOIN1329
        JOIN1329:  preds = [*STABILIZE132A,COND132F]
          goto JOIN131E
        JOIN131E:  preds = [JOIN1329,COND1330]
          tensor[3] _t1331#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN130C,rayVec130D);
          tensor[3] x1333#11 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye12F7,_t1331);
          real _t1335#1 = 0.e0;
          real _t1337#1 = TensorIndex<tensor[3],[0]>(x1333);
          bool _t1339#1 = LT<real>(_t1335,_t1337);
          if _t1339 then goto ASSIGN133D else goto JOIN133B
        ASSIGN133D:  preds = [COND13E8]
          real _t133C#1 = TensorIndex<tensor[3],[0]>(x1333);
          real _t133E#1 = 0.1e1;
          bool _t1340#1 = LT<real>(_t133C,_t133E);
          if _t1340 then goto ASSIGN1344 else goto JOIN1342
        ASSIGN1344:  preds = [COND13E5]
          real _t1343#1 = 0.e0;
          real _t1345#1 = TensorIndex<tensor[3],[1]>(x1333);
          bool _t1347#1 = LT<real>(_t1343,_t1345);
          if _t1347 then goto ASSIGN134B else goto JOIN1349
        ASSIGN134B:  preds = [COND13E2]
          real _t134A#1 = TensorIndex<tensor[3],[1]>(x1333);
          real _t134C#1 = 0.1e1;
          bool _t134E#1 = LT<real>(_t134A,_t134C);
          if _t134E then goto ASSIGN1352 else goto JOIN1350
        ASSIGN1352:  preds = [COND13DF]
          real _t1351#1 = 0.e0;
          real _t1353#1 = TensorIndex<tensor[3],[2]>(x1333);
          bool _t1355#1 = LT<real>(_t1351,_t1353);
          if _t1355 then goto ASSIGN1359 else goto JOIN1357
        ASSIGN1359:  preds = [COND13DC]
          real _t1358#1 = TensorIndex<tensor[3],[2]>(x1333);
          real _t135A#1 = 0.1e1;
          bool _t135C#1 = LT<real>(_t1358,_t135A);
          if _t135C then goto ASSIGN1360 else goto JOIN135E
        ASSIGN1360:  preds = [COND13D9]
          femData:MeshPos p135F#1 = findPos11B7 (a12F9,x1333);
          bool _t1361#1 = ExtractFemItem<bool,Valid(MeshPos)>(p135F);
          if _t1361 then goto ASSIGN1365 else goto ASSIGN13D1
        ASSIGN1365:  preds = [COND13D6]
          real val1364#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F12EC,x1333);
          field _t1366#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F12EC);
          tensor[3] _t1368#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1366,x1333);
          tensor[3] grad136A#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1368);
          real _t136C#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad136A);
          real _t136F#1 = 0.e0;
          real _t1371#1 = 0.1e1;
          real _t1373#1 = 0.13e1;
          real _t1375#1 = 0.1e1;
          real _t1377#1 = λ(T0[])<Abs(T0)> (val1364);
          real _t1379#1 = λ(T0[],T1[])<(T0 * T1)> (_t136C,thick12F8);
          real _t137B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1377,_t1379);
          real _t137D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1375,_t137B);
          real _t137F#1 = λ(T0[],T1[])<(T0 * T1)> (_t1373,_t137D);
          real _t1381#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t136F,_t1371,_t137F);
          real _t1383#1 = _t1381;
          real _t1386#1 = 0.1e1;
          real _t1388#1 = _t1386;
          real a138A#3 = λ(T0[],T1[])<(T0 * T1)> (_t1383,_t1388);
          real _t138C#1 = 0.e0;
          bool _t138E#1 = GT<real>(a138A,_t138C);
          if _t138E then goto ASSIGN1392 else goto JOIN1390
        ASSIGN1392:  preds = [COND13CD]
          real _t1391#1 = 0.1e1;
          real _t1393#1 = 0.1e1;
          real _t1395#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1393,a138A);
          real _t1397#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec130D);
          real _t1399#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep12F3,_t1397);
          real _t139B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1399,refStep12F4);
          real _t139D#1 = MathFn<pow>(_t1395,_t139B);
          real a139F#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1391,_t139D);
          real _t13A2#1 = 0.11e1;
          real _t13A4#1 = 0.7e0;
          real depth13A6#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13A2,_t13A4,camNear12F6,rayN130C,camFar12F5);
          real _t13A8#1 = 0.e0;
          tensor[3] _t13AA#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad136A,grad136A);
          real _t13AC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t13AA,light12EA);
          real shade13AE#1 = Max<real>(_t13A8,_t13AC);
          real _t13B0#1 = λ(T0[],T1[])<(T0 * T1)> (transp130E,a139F);
          real _t13B2#1 = λ(T0[],T1[])<(T0 * T1)> (_t13B0,depth13A6);
          real _t13B4#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd12F1,shade13AE);
          real _t13B6#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa12F2,_t13B4);
          real _t13B8#1 = λ(T0[],T1[])<(T0 * T1)> (_t13B2,_t13B6);
          real _t13BB#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V12ED,x1333);
          tensor[3] _t13BD#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap12EB,_t13BB);
          tensor[3] _t13BF#1 = _t13BD;
          tensor[3] _t13C1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t13B8,_t13BF);
          tensor[3] rgb13C3#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb130F,_t13C1);
          real _t13C6#1 = 0.1e1;
          real _t13C8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t13C6,a139F);
          real transp13CA#1 = λ(T0[],T1[])<(T0 * T1)> (transp130E,_t13C8);
          goto JOIN1390
        JOIN1390:  preds = [ASSIGN13CC,COND13CD]
          real a13A0#0 = phi(a139F,a138A)
          tensor[3] rgb13C4#1 = phi(rgb13C3,rgb130F)
          real transp13CB#1 = phi(transp13CA,transp130E)
          goto JOIN1363
        JOIN1363:  preds = [JOIN1390,MASSIGN13D5]
          tensor[3] rgb13CF#1 = phi(rgb13C4,rgb130F)
          real transp13CE#1 = phi(transp13CB,transp130E)
          goto JOIN135E
        JOIN135E:  preds = [JOIN1363,COND13D9]
          tensor[3] rgb13D8#1 = phi(rgb13CF,rgb130F)
          real transp13D7#1 = phi(transp13CE,transp130E)
          goto JOIN1357
        JOIN1357:  preds = [JOIN135E,COND13DC]
          tensor[3] rgb13DB#1 = phi(rgb13D8,rgb130F)
          real transp13DA#1 = phi(transp13D7,transp130E)
          goto JOIN1350
        JOIN1350:  preds = [JOIN1357,COND13DF]
          tensor[3] rgb13DE#1 = phi(rgb13DB,rgb130F)
          real transp13DD#1 = phi(transp13DA,transp130E)
          goto JOIN1349
        JOIN1349:  preds = [JOIN1350,COND13E2]
          tensor[3] rgb13E1#1 = phi(rgb13DE,rgb130F)
          real transp13E0#1 = phi(transp13DD,transp130E)
          goto JOIN1342
        JOIN1342:  preds = [JOIN1349,COND13E5]
          tensor[3] rgb13E4#1 = phi(rgb13E1,rgb130F)
          real transp13E3#1 = phi(transp13E0,transp130E)
          goto JOIN133B
        JOIN133B:  preds = [JOIN1342,COND13E8]
          tensor[3] rgb13E7#3 = phi(rgb13E4,rgb130F)
          real transp13E6#2 = phi(transp13E3,transp130E)
          real _t13E9#1 = 0.1e-1;
          bool _t13EB#1 = LT<real>(transp13E6,_t13E9);
          if _t13EB then goto ASSIGN13F0 else goto JOIN13ED
        ASSIGN13F0:  preds = [COND13F6]
          real transp13EE#1 = 0.e0;
          self.rayN = rayN130C;
          self.transp = transp13EE;
          self.rgb = rgb13E7;
          self.rgba = rgba1310;
          stabilize
          goto JOIN13ED
        JOIN13ED:  preds = [*STABILIZE13F1,COND13F6]
          real transp13EF#2 = phi(transp13E6)
          bool _t13F7#1 = GT<real>(rayN130C,camFar12F5);
          if _t13F7 then goto SAVE13FB else goto JOIN13F9
        SAVE13FB:  preds = [COND13FF]
          self.rayN = rayN130C;
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          self.rgba = rgba1310;
          stabilize
          goto JOIN13F9
        JOIN13F9:  preds = [*STABILIZE13FA,COND13FF]
          real rayN1400#1 = λ(T0[],T1[])<(T0 + T1)> (rayN130C,rayStep12F3);
          self.rayN = rayN1400;
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          self.rgba = rgba1310;
          active
        ASSIGN13D1:  preds = [COND13D6]
          string _t13D0#1 = "\n";
          Print<[tensor[3],string]>(x1333,_t13D0);
          string _t13D3#1 = "wait what\?\n";
          Print<[string]>(_t13D3);
          goto JOIN1363
        ASSIGN1327:  preds = [COND1328]
          bool _t1326#1 = NEQ<int>(vi1313,sv12EE);
          goto JOIN1322
    end update
    method stabilize
        ENTRY1446:  preds = []
          bool debug140A#1 = globals.debug10B4;
          int su1409#1 = globals.su10B5;
          int sv1408#1 = globals.sv10B6;
          real rayU140E#0 = self.rayU;
          real rayV140F#0 = self.rayV;
          real rayN1410#1 = self.rayN;
          tensor[3] rayVec1411#0 = self.rayVec;
          real transp1412#2 = self.transp;
          tensor[3] rgb1413#4 = self.rgb;
          tensor[4] rgba1414#1 = self.rgba;
          real gray1415#0 = self.gray;
          int ui1416#1 = self.ui;
          int vi1417#1 = self.vi;
          real _t1422#1 = 0.1e1;
          real a1424#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1422,transp1412);
          real _t1426#1 = 0.e0;
          bool _t1428#1 = GT<real>(a1424,_t1426);
          if _t1428 then goto ASSIGN142C else goto JOIN142A
        ASSIGN142C:  preds = [COND143A]
          real _t142B#1 = TensorIndex<tensor[3],[0]>(rgb1413);
          real _t142D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t142B,a1424);
          real _t142F#1 = TensorIndex<tensor[3],[1]>(rgb1413);
          real _t1431#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t142F,a1424);
          real _t1433#1 = TensorIndex<tensor[3],[2]>(rgb1413);
          real _t1435#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1433,a1424);
          tensor[4] rgba1437#1 = <tensor[4]>[_t142D,_t1431,_t1435,a1424];
          goto JOIN142A
        JOIN142A:  preds = [ASSIGN1439,COND143A]
          tensor[4] rgba1438#2 = phi(rgba1437,rgba1414)
          bool _t143B#1 = EQ<int>(ui1416,su1409);
          if _t143B then goto ASSIGN143F else goto JOIN143D
        ASSIGN143F:  preds = [COND1445]
          bool _t143E#1 = EQ<int>(vi1417,sv1408);
          if _t143E then goto COND1443 else goto JOIN1440
        COND1443:  preds = [COND1444]
          if debug140A then goto MASSIGN1442 else goto JOIN1441
        MASSIGN1442:  preds = [COND1443]
          Print<[real,tensor[4]]>(a1424,rgba1438);
          goto JOIN1441
        JOIN1441:  preds = [MASSIGN1442,COND1443]
          goto JOIN1440
        JOIN1440:  preds = [JOIN1441,COND1444]
          goto JOIN143D
        JOIN143D:  preds = [JOIN1440,COND1445]
          self.rayN = rayN1410;
          self.transp = transp1412;
          self.rgb = rgb1413;
          self.rgba = rgba1438;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1272:  preds = []
      int iresU1258#1 = globals.iresU10AB;
      int iresV1257#1 = globals.iresV10AC;
      int _t125B#1 = 0;
      int _t125D#1 = 1;
      int _t125F#1 = ISub(iresV1257,_t125D);
      int[] _t1261#1 = Range(_t125B,_t125F);
    FOREACH1264:  preds = [ASSIGN1262,NEXT1271]
      foreach (vi1263 in _t1261) on exit goto RETURN1273
      int _t1265#1 = 0;
      int _t1267#1 = 1;
      int _t1269#1 = ISub(iresU1258,_t1267);
      int[] _t126B#1 = Range(_t1265,_t1269);
    FOREACH126E:  preds = [ASSIGN126C,NEXT1270]
      foreach (ui126D in _t126B) on exit goto NEXT1271
      new raycast(ui126D,vi1263);
      goto FOREACH126E
    NEXT1271:  preds = [FOREACH126E]
      goto FOREACH1264
    RETURN1273:  preds = [FOREACH1264]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10A2 (a) = <no-default>
  input 0b043B_intermedateGlobal10A3 (b) = <no-default>
  input 0c043D_intermedateGlobal10A4 (c) = <no-default>
  input isoval10A5 (isoval) = <default>
  input thick10A6 (thick) = <default>
  input camEye10A7 (camEye) = <default>
  input camAt10A8 (camAt) = <default>
  input camUp10A9 (camUp) = <default>
  input camFOV10AA (camFOV) = <default>
  input iresU10AB (iresU) = <default>
  input iresV10AC (iresV) = <default>
  input camNear10AD (camNear) = <default>
  input camFar10AE (camFar) = <default>
  input refStep10AF (refStep) = <default>
  input rayStep10B0 (rayStep) = <default>
  input lightVsp10B1 (lightVsp) = <default>
  input phongKa10B2 (phongKa) = <default>
  input phongKd10B3 (phongKd) = <default>
  input debug10B4 (debug) = <default>
  input su10B5 (su) = <default>
  input sv10B6 (sv) = <default>
  global femData:Space b1107
  global femData:FemFunc c1108
  global field V1109
  global field F110A
  global image(IMAGE1D<double[3]>) I110B
  global field cmap110C
  global real camDist110D
  global tensor[3] camN110E
  global tensor[3] camU110F
  global tensor[3] camV1110
  global real camVmax1111
  global real camUmax1112
  global tensor[3] light1113
## functions
  function femData:MeshPos findPos11B7 (femData:Mesh mesh1114#7, tensor[3] pos1115#3) {
    ENTRY11B6:  preds = []
      real _t1116#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn111C#2 = <tensor[3]>[_t1116,_t1116,_t1116];
      int newtonInt111E#1 = 0;
      int cellInt1120#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1114);
      int _t1122#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1114);
      int _t1124#1 = 1;
      int numCell1126#0 = ISub(_t1122,_t1124);
      int[] yayCells1128#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1114,pos1115);
    FOREACH112C:  preds = [ASSIGN1129,NEXT11AD]
      foreach (cellItter112A in yayCells1128) on exit goto ASSIGN11AF
        int cellInt112E#0 = phi(cellInt1120,cellItter112A)
        tensor[3] xn112B#1 = phi(xn111C,xn1147)
      field _t1130#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellItter112A,mesh1114,mesh1114);
      field _t1132#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1130);
      field _t1134#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1132);
      tensor[3,3] A113E#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1134,xn111C);
      int _t1142#1 = 2;
      int[] _t1144#1 = Range(newtonInt111E,_t1142);
    FOREACH1148:  preds = [ASSIGN1458,NEXT11AC]
      foreach (newtonItter1146 in _t1144) on exit goto NEXT11AD
        tensor[3] xn1147#3 = phi(xn112B,xn1151)
      field _t114B#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1115,_t1130);
      field _t114D#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A113E,_t114B);
      tensor[3] delta114F#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t114D,xn1147);
      tensor[3] xn1151#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1147,delta114F);
      real _t1153#2 = 0.1e-7;
      real _t1157#1 = λ(T0[],T1[])<(T0 * T1)> (_t1153,_t1153);
      real _t1159#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta114F,delta114F);
      bool _t115B#1 = GTE<real>(_t1157,_t1159);
      if _t115B then goto ASSIGN115F else goto JOIN115D
    ASSIGN115F:  preds = [COND11AB]
      real _t115E#4 = 0.1e1;
      real _t1160#4 = 0.1e-4;
      real _t1162#1 = λ(T0[],T1[])<(T0 + T1)> (_t115E,_t1160);
      tensor[3] _t116A#1 = <tensor[3]>[_t115E,_t115E,_t115E];
      real _t116C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t116A,xn1151);
      bool _t116E#1 = GT<real>(_t1162,_t116C);
      tensor[3] _t1176#1 = <tensor[3]>[_t1160,_t1160,_t1160];
      tensor[3] _t1178#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1176,xn1151);
      real _t117A#1 = TensorIndex<tensor[3],[0]>(_t1178);
      real _t117C#3 = -0.e0;
      bool _t117E#1 = GT<real>(_t117A,_t117C);
      real _t118A#1 = TensorIndex<tensor[3],[1]>(_t1178);
      bool _t118E#1 = GT<real>(_t118A,_t117C);
      real _t119A#1 = TensorIndex<tensor[3],[2]>(_t1178);
      bool _t119E#1 = GT<real>(_t119A,_t117C);
      bool _t11A0#1 = BAnd(_t118E,_t119E);
      bool _t11A2#1 = BAnd(_t117E,_t11A0);
      bool _t11A4#1 = BAnd(_t116E,_t11A2);
      if _t11A4 then goto ASSIGN1461 else goto JOIN11A6
    ASSIGN1461:  preds = [COND11AA]
      femData:MeshPos _t11A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1114,cellItter112A,xn1151,pos1115);
      return _t11A7
      goto JOIN11A6
    JOIN11A6:  preds = [*RETURN(_t11A7)11A9,COND11AA]
      goto JOIN115D
    JOIN115D:  preds = [JOIN11A6,COND11AB]
      goto FOREACH1148
    NEXT11AD:  preds = [FOREACH1148]
      goto FOREACH112C
    ASSIGN11AF:  preds = [FOREACH112C]
      string _t11AE#1 = "Bad end 2";
      string _t11B0#1 = "\n";
      Print<[string,string]>(_t11AE,_t11B0);
      femData:MeshPos _t11B3#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1114);
      return _t11B3
}
  function int[2] nextCell411C9 (int faceIdx11B8#1, int cell11B9#1, femData:Mesh mesh11BA#1) {
    ENTRY11C8:  preds = []
      int _t11BB#1 = 8;
      int _t11BD#1 = IMul(cell11B9,_t11BB);
      int _t11BF#1 = 2;
      int _t11C1#1 = IMul(faceIdx11B8,_t11BF);
      int _t11C3#1 = IAdd(_t11BD,_t11C1);
      int[2] _t11C5#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11BA,_t11C3);
      return _t11C5
}
## input initialization
  ENTRY1105:  preds = []
    real isoval10B7#1 = 0.2e0;
    globals.isoval10A5 = isoval10B7;
    real thick10BA#1 = 0.7e-1;
    globals.thick10A6 = thick10BA;
    real _t10BD#2 = 0.3e1;
    real _t10BF#1 = -0.3e1;
    tensor[3] camEye10C3#1 = <tensor[3]>[_t10BD,_t10BF,_t10BD];
    globals.camEye10A7 = camEye10C3;
    real _t10C6#3 = 0.5e0;
    tensor[3] camAt10CC#1 = <tensor[3]>[_t10C6,_t10C6,_t10C6];
    globals.camAt10A8 = camAt10CC;
    real _t10CF#2 = 0.e0;
    real _t10D3#2 = 0.1e1;
    tensor[3] camUp10D5#2 = <tensor[3]>[_t10CF,_t10CF,_t10D3];
    globals.camUp10A9 = camUp10D5;
    real camFOV10D8#1 = 0.137e2;
    globals.camFOV10AA = camFOV10D8;
    int iresU10DB#2 = 500;
    globals.iresU10AB = iresU10DB;
    globals.iresV10AC = iresU10DB;
    real camNear10E1#1 = -0.2e1;
    globals.camNear10AD = camNear10E1;
    real camFar10E4#1 = 0.5e1;
    globals.camFar10AE = camFar10E4;
    globals.refStep10AF = _t10D3;
    real rayStep10EA#1 = 0.1e-1;
    globals.rayStep10B0 = rayStep10EA;
    globals.lightVsp10B1 = camUp10D5;
    real phongKa10F6#1 = 0.1e0;
    globals.phongKa10B2 = phongKa10F6;
    real phongKd10F9#1 = 0.9e0;
    globals.phongKd10B3 = phongKd10F9;
    bool debug10FC#1 = false;
    globals.debug10B4 = debug10FC;
    int su10FF#2 = 250;
    globals.su10B5 = su10FF;
    globals.sv10B6 = su10FF;
    return
## global-variable initialization
  ENTRY1255:  preds = []
    femData:Mesh a11D4#3 = globals.a10A2;
    femData:Space 0b043B_intermedateGlobal11D3#1 = globals.0b043B_intermedateGlobal10A3;
    femData:FemFunc 0c043D_intermedateGlobal11D2#1 = globals.0c043D_intermedateGlobal10A4;
    real isoval11D1#1 = globals.isoval10A5;
    tensor[3] camEye11D0#1 = globals.camEye10A7;
    tensor[3] camAt11CF#1 = globals.camAt10A8;
    tensor[3] camUp11CE#1 = globals.camUp10A9;
    real camFOV11CD#1 = globals.camFOV10AA;
    int iresU11CC#1 = globals.iresU10AB;
    int iresV11CB#1 = globals.iresV10AC;
    tensor[3] lightVsp11CA#2 = globals.lightVsp10B1;
    int _t11E0#1 = 0;
    int _t11E2#1 = 1;
    int _t11E4#1 = ExtractFemItem<int,NumCell(Mesh)>(a11D4);
    int _t11E6#1 = ISub(_t11E4,_t11E2);
    int[] _t11E8#1 = Range(_t11E0,_t11E6);
    femData:MeshCell[] _t11EA#1 = <femData:MeshCell[]>{};
  FOREACH11EE:  preds = [ASSIGN11EB,NEXT11F3]
    foreach (_t11EC in _t11E8) on exit goto ASSIGN11F5
      femData:MeshCell[] _t11ED#1 = phi(_t11EA,_t11F1)
    femData:MeshCell _t11EF#1 = LoadFem<femData:MeshCell>(a11D4,_t11EC);
    femData:MeshCell[] _t11F1#1 = Append<femData:MeshCell>(_t11ED,_t11EF);
    goto FOREACH11EE
  ASSIGN11F5:  preds = [FOREACH11EE]
    femData:Space b11F4#2 = LoadFem<femData:Space>(0b043B_intermedateGlobal11D3,a11D4);
    globals.b1107 = b11F4;
    femData:FemFunc c11F7#3 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal11D2,b11F4);
    globals.c1108 = c11F7;
    femData:Space _t11FA#2 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t11FE#4 = ExtractFem<femData:Mesh,femData:Space>(_t11FA);
    field _t1200#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(11B7, 0, 1, 2)⊛Basis()> (_t11FE,_t11FA,c11F7);
    field _t120E#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(11B7, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t11FE,_t11FE,_t11FE);
    field V1210#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t1200,_t120E);
    globals.V1109 = V1210;
    field _t1213#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval11D1,V1210);
    globals.F110A = _t1213;
    image(IMAGE1D<double[3]>) I121A#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I110B = I121A;
    kernel _t121D#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img121F#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I121A);
    field cmap1221#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img121F,_t121D);
    globals.cmap110C = cmap1221;
    tensor[3] _t1224#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11CF,camEye11D0);
    real camDist1226#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1224);
    globals.camDist110D = camDist1226;
    tensor[3] camN122B#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1224,_t1224);
    globals.camN110E = camN122B;
    tensor[3] _t122E#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN122B,camUp11CE);
    tensor[3] camU1230#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t122E,_t122E);
    globals.camU110F = camU1230;
    tensor[3] camV1233#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1230,camN122B);
    globals.camV1110 = camV1233;
    real _t1236#1 = 0.314159265358979323846264338327950288e1;
    real _t1238#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV11CD,_t1236);
    real _t123A#1 = 0.36e3;
    real _t123C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1238,_t123A);
    real _t123E#1 = λ(T0[])<Tangent(T0)> (_t123C);
    real camVmax1240#2 = λ(T0[],T1[])<(T0 * T1)> (_t123E,camDist1226);
    globals.camVmax1111 = camVmax1240;
    real _t1243#1 = IntToReal(iresU11CC);
    real _t1245#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1240,_t1243);
    real _t1247#1 = IntToReal(iresV11CB);
    real camUmax1249#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1245,_t1247);
    globals.camUmax1112 = camUmax1249;
    tensor[3,3] _t124C#1 = <tensor[3,3]>[camU1230,camV1233,camN122B];
    tensor[3,3] _t124E#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t124C);
    tensor[3] _t1250#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp11CA,lightVsp11CA);
    tensor[3] light1252#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t124E,_t1250);
    globals.light1113 = light1252;
    return
## strand
  strand raycast (int ui1274#2, int vi1275#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12DE:  preds = []
        int iresU1288#1 = globals.iresU10AB;
        int iresV1287#1 = globals.iresV10AC;
        real camNear1286#1 = globals.camNear10AD;
        real camDist1285#1 = globals.camDist110D;
        tensor[3] camN1284#1 = globals.camN110E;
        tensor[3] camU1283#1 = globals.camU110F;
        tensor[3] camV1282#1 = globals.camV1110;
        real camVmax1281#2 = globals.camVmax1111;
        real camUmax1280#2 = globals.camUmax1112;
        real _t129C#1 = λ(T0[])<Neg(T0)> (camUmax1280);
        real _t129E#2 = -0.5e0;
        real _t12A0#1 = IntToReal(ui1274);
        real _t12A2#1 = IntToReal(iresU1288);
        real _t12A4#2 = 0.5e0;
        real _t12A6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t12A2,_t12A4);
        real rayU12A8#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t129C,camUmax1280,_t129E,_t12A0,_t12A6);
        real _t12AA#1 = λ(T0[])<Neg(T0)> (camVmax1281);
        real _t12AE#1 = IntToReal(vi1275);
        real _t12B0#1 = IntToReal(iresV1287);
        real _t12B4#1 = λ(T0[],T1[])<(T0) - (T1)> (_t12B0,_t12A4);
        real rayV12B6#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax1281,_t12AA,_t129E,_t12AE,_t12B4);
        tensor[3] _t12BA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU12A8,camU1283);
        tensor[3] _t12BC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV12B6,camV1282);
        tensor[3] _t12BE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t12BA,_t12BC);
        tensor[3] _t12C0#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t12BE,camDist1285);
        tensor[3] rayVec12C2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1284,_t12C0);
        real transp12C4#1 = 0.1e1;
        real _t12C6#8 = 0.e0;
        tensor[3] rgb12CC#1 = <tensor[3]>[_t12C6,_t12C6,_t12C6];
        tensor[4] rgba12D6#1 = <tensor[4]>[_t12C6,_t12C6,_t12C6,_t12C6];
        self.rayU = rayU12A8;
        self.rayV = rayV12B6;
        self.rayN = camNear1286;
        self.rayVec = rayVec12C2;
        self.transp = transp12C4;
        self.rgb = rgb12CC;
        self.rgba = rgba12D6;
        self.gray = _t12C6;
        self.ui = ui1274;
        self.vi = vi1275;
        return
    end state init
    method update
        ENTRY1402:  preds = []
          femData:Mesh a12F9#1 = globals.a10A2;
          real thick12F8#1 = globals.thick10A6;
          tensor[3] camEye12F7#1 = globals.camEye10A7;
          real camNear12F6#1 = globals.camNear10AD;
          real camFar12F5#2 = globals.camFar10AE;
          real refStep12F4#1 = globals.refStep10AF;
          real rayStep12F3#2 = globals.rayStep10B0;
          real phongKa12F2#1 = globals.phongKa10B2;
          real phongKd12F1#1 = globals.phongKd10B3;
          bool debug12F0#1 = globals.debug10B4;
          int su12EF#1 = globals.su10B5;
          int sv12EE#1 = globals.sv10B6;
          field V12ED#1 = globals.V1109;
          field F12EC#2 = globals.F110A;
          field cmap12EB#1 = globals.cmap110C;
          tensor[3] light12EA#1 = globals.light1113;
          real rayU130A#0 = self.rayU;
          real rayV130B#0 = self.rayV;
          real rayN130C#4 = self.rayN;
          tensor[3] rayVec130D#2 = self.rayVec;
          real transp130E#10 = self.transp;
          tensor[3] rgb130F#9 = self.rgb;
          tensor[4] rgba1310#0 = self.rgba;
          real gray1311#0 = self.gray;
          int ui1312#1 = self.ui;
          int vi1313#1 = self.vi;
          if debug12F0 then goto ASSIGN1321 else goto JOIN131E
        ASSIGN1321:  preds = [COND1330]
          bool _t1320#1 = NEQ<int>(ui1312,su12EF);
          if _t1320 then goto ASSIGN1325 else goto ASSIGN1327
        ASSIGN1325:  preds = [COND1328]
          bool _t1323#1 = true;
          goto JOIN1322
        JOIN1322:  preds = [ASSIGN1325,ASSIGN1327]
          bool _t1324#1 = phi(_t1323,_t1326)
          if _t1324 then goto STABILIZE132A else goto JOIN1329
        STABILIZE132A:  preds = [COND132F]
          stabilize
          goto JOIN1329
        JOIN1329:  preds = [*STABILIZE132A,COND132F]
          goto JOIN131E
        JOIN131E:  preds = [JOIN1329,COND1330]
          tensor[3] _t1331#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN130C,rayVec130D);
          tensor[3] x1333#8 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye12F7,_t1331);
          real _t1335#7 = 0.e0;
          real _t1337#2 = TensorIndex<tensor[3],[0]>(x1333);
          bool _t1339#1 = LT<real>(_t1335,_t1337);
          if _t1339 then goto ASSIGN133F else goto JOIN133B
        ASSIGN133F:  preds = [COND13E8]
          real _t133E#9 = 0.1e1;
          bool _t1340#1 = LT<real>(_t1337,_t133E);
          if _t1340 then goto ASSIGN1346 else goto JOIN1342
        ASSIGN1346:  preds = [COND13E5]
          real _t1345#2 = TensorIndex<tensor[3],[1]>(x1333);
          bool _t1347#1 = LT<real>(_t1335,_t1345);
          if _t1347 then goto ASSIGN1470 else goto JOIN1349
        ASSIGN1470:  preds = [COND13E2]
          bool _t134E#1 = LT<real>(_t1345,_t133E);
          if _t134E then goto ASSIGN1354 else goto JOIN1350
        ASSIGN1354:  preds = [COND13DF]
          real _t1353#2 = TensorIndex<tensor[3],[2]>(x1333);
          bool _t1355#1 = LT<real>(_t1335,_t1353);
          if _t1355 then goto ASSIGN1472 else goto JOIN1357
        ASSIGN1472:  preds = [COND13DC]
          bool _t135C#1 = LT<real>(_t1353,_t133E);
          if _t135C then goto ASSIGN1360 else goto JOIN135E
        ASSIGN1360:  preds = [COND13D9]
          femData:MeshPos p135F#1 = findPos11B7 (a12F9,x1333);
          bool _t1361#1 = ExtractFemItem<bool,Valid(MeshPos)>(p135F);
          if _t1361 then goto ASSIGN1365 else goto ASSIGN13D1
        ASSIGN1365:  preds = [COND13D6]
          real val1364#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F12EC,x1333);
          field _t1366#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F12EC);
          tensor[3] _t1368#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1366,x1333);
          tensor[3] grad136A#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1368);
          real _t136C#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad136A);
          real _t1373#1 = 0.13e1;
          real _t1377#1 = λ(T0[])<Abs(T0)> (val1364);
          real _t1379#1 = λ(T0[],T1[])<(T0 * T1)> (_t136C,thick12F8);
          real _t137B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1377,_t1379);
          real _t137D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t133E,_t137B);
          real _t137F#1 = λ(T0[],T1[])<(T0 * T1)> (_t1373,_t137D);
          real _t1381#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1335,_t133E,_t137F);
          real a138A#3 = λ(T0[],T1[])<(T0 * T1)> (_t1381,_t133E);
          bool _t138E#1 = GT<real>(a138A,_t1335);
          if _t138E then goto ASSIGN1477 else goto JOIN1390
        ASSIGN1477:  preds = [COND13CD]
          real _t1395#1 = λ(T0[],T1[])<(T0) - (T1)> (_t133E,a138A);
          real _t1397#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec130D);
          real _t1399#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep12F3,_t1397);
          real _t139B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1399,refStep12F4);
          real _t139D#1 = MathFn<pow>(_t1395,_t139B);
          real a139F#3 = λ(T0[],T1[])<(T0) - (T1)> (_t133E,_t139D);
          real _t13A2#1 = 0.11e1;
          real _t13A4#1 = 0.7e0;
          real depth13A6#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t13A2,_t13A4,camNear12F6,rayN130C,camFar12F5);
          tensor[3] _t13AA#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad136A,grad136A);
          real _t13AC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t13AA,light12EA);
          real shade13AE#1 = Max<real>(_t1335,_t13AC);
          real _t13B0#1 = λ(T0[],T1[])<(T0 * T1)> (transp130E,a139F);
          real _t13B2#1 = λ(T0[],T1[])<(T0 * T1)> (_t13B0,depth13A6);
          real _t13B4#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd12F1,shade13AE);
          real _t13B6#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa12F2,_t13B4);
          real _t13B8#1 = λ(T0[],T1[])<(T0 * T1)> (_t13B2,_t13B6);
          real _t13BB#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V12ED,x1333);
          tensor[3] _t13BD#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap12EB,_t13BB);
          tensor[3] _t13C1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t13B8,_t13BD);
          tensor[3] rgb13C3#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb130F,_t13C1);
          real _t13C8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t133E,a139F);
          real transp13CA#1 = λ(T0[],T1[])<(T0 * T1)> (transp130E,_t13C8);
          goto JOIN1390
        JOIN1390:  preds = [ASSIGN13CC,COND13CD]
          real a13A0#0 = phi(a139F,a138A)
          tensor[3] rgb13C4#1 = phi(rgb13C3,rgb130F)
          real transp13CB#1 = phi(transp13CA,transp130E)
          goto JOIN1363
        JOIN1363:  preds = [JOIN1390,MASSIGN13D5]
          tensor[3] rgb13CF#1 = phi(rgb13C4,rgb130F)
          real transp13CE#1 = phi(transp13CB,transp130E)
          goto JOIN135E
        JOIN135E:  preds = [JOIN1363,COND13D9]
          tensor[3] rgb13D8#1 = phi(rgb13CF,rgb130F)
          real transp13D7#1 = phi(transp13CE,transp130E)
          goto JOIN1357
        JOIN1357:  preds = [JOIN135E,COND13DC]
          tensor[3] rgb13DB#1 = phi(rgb13D8,rgb130F)
          real transp13DA#1 = phi(transp13D7,transp130E)
          goto JOIN1350
        JOIN1350:  preds = [JOIN1357,COND13DF]
          tensor[3] rgb13DE#1 = phi(rgb13DB,rgb130F)
          real transp13DD#1 = phi(transp13DA,transp130E)
          goto JOIN1349
        JOIN1349:  preds = [JOIN1350,COND13E2]
          tensor[3] rgb13E1#1 = phi(rgb13DE,rgb130F)
          real transp13E0#1 = phi(transp13DD,transp130E)
          goto JOIN1342
        JOIN1342:  preds = [JOIN1349,COND13E5]
          tensor[3] rgb13E4#1 = phi(rgb13E1,rgb130F)
          real transp13E3#1 = phi(transp13E0,transp130E)
          goto JOIN133B
        JOIN133B:  preds = [JOIN1342,COND13E8]
          tensor[3] rgb13E7#3 = phi(rgb13E4,rgb130F)
          real transp13E6#2 = phi(transp13E3,transp130E)
          real _t13E9#1 = 0.1e-1;
          bool _t13EB#1 = LT<real>(transp13E6,_t13E9);
          if _t13EB then goto SAVE147C else goto JOIN13ED
        SAVE147C:  preds = [COND13F6]
          self.transp = _t1335;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13ED
        JOIN13ED:  preds = [*STABILIZE13F1,COND13F6]
          real transp13EF#2 = phi(transp13E6)
          bool _t13F7#1 = GT<real>(rayN130C,camFar12F5);
          if _t13F7 then goto SAVE13FC else goto JOIN13F9
        SAVE13FC:  preds = [COND13FF]
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13F9
        JOIN13F9:  preds = [*STABILIZE13FA,COND13FF]
          real rayN1400#1 = λ(T0[],T1[])<(T0 + T1)> (rayN130C,rayStep12F3);
          self.rayN = rayN1400;
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          active
        ASSIGN13D1:  preds = [COND13D6]
          string _t13D0#1 = "\n";
          Print<[tensor[3],string]>(x1333,_t13D0);
          string _t13D3#1 = "wait what\?\n";
          Print<[string]>(_t13D3);
          goto JOIN1363
        ASSIGN1327:  preds = [COND1328]
          bool _t1326#1 = NEQ<int>(vi1313,sv12EE);
          goto JOIN1322
    end update
    method stabilize
        ENTRY1446:  preds = []
          bool debug140A#1 = globals.debug10B4;
          int su1409#1 = globals.su10B5;
          int sv1408#1 = globals.sv10B6;
          real rayU140E#0 = self.rayU;
          real rayV140F#0 = self.rayV;
          real rayN1410#0 = self.rayN;
          tensor[3] rayVec1411#0 = self.rayVec;
          real transp1412#1 = self.transp;
          tensor[3] rgb1413#3 = self.rgb;
          tensor[4] rgba1414#1 = self.rgba;
          real gray1415#0 = self.gray;
          int ui1416#1 = self.ui;
          int vi1417#1 = self.vi;
          real _t1422#1 = 0.1e1;
          real a1424#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1422,transp1412);
          real _t1426#1 = 0.e0;
          bool _t1428#1 = GT<real>(a1424,_t1426);
          if _t1428 then goto ASSIGN142C else goto JOIN142A
        ASSIGN142C:  preds = [COND143A]
          real _t142B#1 = TensorIndex<tensor[3],[0]>(rgb1413);
          real _t142D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t142B,a1424);
          real _t142F#1 = TensorIndex<tensor[3],[1]>(rgb1413);
          real _t1431#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t142F,a1424);
          real _t1433#1 = TensorIndex<tensor[3],[2]>(rgb1413);
          real _t1435#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1433,a1424);
          tensor[4] rgba1437#1 = <tensor[4]>[_t142D,_t1431,_t1435,a1424];
          goto JOIN142A
        JOIN142A:  preds = [ASSIGN1439,COND143A]
          tensor[4] rgba1438#2 = phi(rgba1437,rgba1414)
          bool _t143B#1 = EQ<int>(ui1416,su1409);
          if _t143B then goto ASSIGN143F else goto JOIN143D
        ASSIGN143F:  preds = [COND1445]
          bool _t143E#1 = EQ<int>(vi1417,sv1408);
          if _t143E then goto COND1443 else goto JOIN1440
        COND1443:  preds = [COND1444]
          if debug140A then goto MASSIGN1442 else goto JOIN1441
        MASSIGN1442:  preds = [COND1443]
          Print<[real,tensor[4]]>(a1424,rgba1438);
          goto JOIN1441
        JOIN1441:  preds = [MASSIGN1442,COND1443]
          goto JOIN1440
        JOIN1440:  preds = [JOIN1441,COND1444]
          goto JOIN143D
        JOIN143D:  preds = [JOIN1440,COND1445]
          self.rgba = rgba1438;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1272:  preds = []
      int iresU1258#1 = globals.iresU10AB;
      int iresV1257#1 = globals.iresV10AC;
      int _t125B#2 = 0;
      int _t125D#2 = 1;
      int _t125F#1 = ISub(iresV1257,_t125D);
      int[] _t1261#1 = Range(_t125B,_t125F);
    FOREACH1264:  preds = [ASSIGN1262,NEXT1271]
      foreach (vi1263 in _t1261) on exit goto RETURN1273
      int _t1269#1 = ISub(iresU1258,_t125D);
      int[] _t126B#1 = Range(_t125B,_t1269);
    FOREACH126E:  preds = [ASSIGN144D,NEXT1270]
      foreach (ui126D in _t126B) on exit goto NEXT1271
      new raycast(ui126D,vi1263);
      goto FOREACH126E
    NEXT1271:  preds = [FOREACH126E]
      goto FOREACH1264
    RETURN1273:  preds = [FOREACH1264]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10A2 (a) = <no-default>
  input 0b043B_intermedateGlobal10A3 (b) = <no-default>
  input 0c043D_intermedateGlobal10A4 (c) = <no-default>
  input isoval10A5 (isoval) = <default>
  input thick10A6 (thick) = <default>
  input camEye10A7 (camEye) = <default>
  input camAt10A8 (camAt) = <default>
  input camUp10A9 (camUp) = <default>
  input camFOV10AA (camFOV) = <default>
  input iresU10AB (iresU) = <default>
  input iresV10AC (iresV) = <default>
  input camNear10AD (camNear) = <default>
  input camFar10AE (camFar) = <default>
  input refStep10AF (refStep) = <default>
  input rayStep10B0 (rayStep) = <default>
  input lightVsp10B1 (lightVsp) = <default>
  input phongKa10B2 (phongKa) = <default>
  input phongKd10B3 (phongKd) = <default>
  input debug10B4 (debug) = <default>
  input su10B5 (su) = <default>
  input sv10B6 (sv) = <default>
  global real camDist110D
  global tensor[3] camN110E
  global tensor[3] camU110F
  global tensor[3] camV1110
  global real camVmax1111
  global real camUmax1112
  global tensor[3] light1113
## functions
  function femData:MeshPos findPos11B7 (femData:Mesh mesh1114#23, tensor[3] pos1115#7) {
    ENTRY11B6:  preds = []
      real _t1116#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn111C#6 = <tensor[3]>[_t1116,_t1116,_t1116];
      int newtonInt111E#1 = 0;
      int[] yayCells1128#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1114,pos1115);
    FOREACH112C:  preds = [ASSIGN1129,NEXT11AD]
      foreach (cellItter112A in yayCells1128) on exit goto ASSIGN11AF
        tensor[3] xn112B#1 = phi(xn111C,xn1147)
      int _t1142#1 = 2;
      int[] _t1144#1 = Range(newtonInt111E,_t1142);
    FOREACH1148:  preds = [ASSIGN1458,NEXT11AC]
      foreach (newtonItter1146 in _t1144) on exit goto NEXT11AD
        tensor[3] xn1147#9 = phi(xn112B,xn1151)
      tensor[3] xn1151#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      real _t1153#2 = 0.1e-7;
      real _t1157#1 = λ(T0[],T1[])<(T0 * T1)> (_t1153,_t1153);
      real _t1159#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      bool _t115B#1 = GTE<real>(_t1157,_t1159);
      if _t115B then goto ASSIGN115F else goto JOIN115D
    ASSIGN115F:  preds = [COND11AB]
      real _t115E#4 = 0.1e1;
      real _t1160#4 = 0.1e-4;
      real _t1162#1 = λ(T0[],T1[])<(T0 + T1)> (_t115E,_t1160);
      tensor[3] _t116A#1 = <tensor[3]>[_t115E,_t115E,_t115E];
      real _t116C#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t116A,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      bool _t116E#1 = GT<real>(_t1162,_t116C);
      tensor[3] _t1176#1 = <tensor[3]>[_t1160,_t1160,_t1160];
      tensor[3] _t1178#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t1176,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      real _t117A#1 = TensorIndex<tensor[3],[0]>(_t1178);
      real _t117C#3 = -0.e0;
      bool _t117E#1 = GT<real>(_t117A,_t117C);
      real _t118A#1 = TensorIndex<tensor[3],[1]>(_t1178);
      bool _t118E#1 = GT<real>(_t118A,_t117C);
      real _t119A#1 = TensorIndex<tensor[3],[2]>(_t1178);
      bool _t119E#1 = GT<real>(_t119A,_t117C);
      bool _t11A0#1 = BAnd(_t118E,_t119E);
      bool _t11A2#1 = BAnd(_t117E,_t11A0);
      bool _t11A4#1 = BAnd(_t116E,_t11A2);
      if _t11A4 then goto ASSIGN1461 else goto JOIN11A6
    ASSIGN1461:  preds = [COND11AA]
      femData:MeshPos _t11A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1114,cellItter112A,xn1151,pos1115);
      return _t11A7
      goto JOIN11A6
    JOIN11A6:  preds = [*RETURN(_t11A7)11A9,COND11AA]
      goto JOIN115D
    JOIN115D:  preds = [JOIN11A6,COND11AB]
      goto FOREACH1148
    NEXT11AD:  preds = [FOREACH1148]
      goto FOREACH112C
    ASSIGN11AF:  preds = [FOREACH112C]
      string _t11AE#1 = "Bad end 2";
      string _t11B0#1 = "\n";
      Print<[string,string]>(_t11AE,_t11B0);
      femData:MeshPos _t11B3#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1114);
      return _t11B3
}
  function int[2] nextCell411C9 (int faceIdx11B8#1, int cell11B9#1, femData:Mesh mesh11BA#1) {
    ENTRY11C8:  preds = []
      int _t11BB#1 = 8;
      int _t11BD#1 = IMul(cell11B9,_t11BB);
      int _t11BF#1 = 2;
      int _t11C1#1 = IMul(faceIdx11B8,_t11BF);
      int _t11C3#1 = IAdd(_t11BD,_t11C1);
      int[2] _t11C5#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11BA,_t11C3);
      return _t11C5
}
## input initialization
  ENTRY1105:  preds = []
    real isoval10B7#1 = 0.2e0;
    globals.isoval10A5 = isoval10B7;
    real thick10BA#1 = 0.7e-1;
    globals.thick10A6 = thick10BA;
    real _t10BD#2 = 0.3e1;
    real _t10BF#1 = -0.3e1;
    tensor[3] camEye10C3#1 = <tensor[3]>[_t10BD,_t10BF,_t10BD];
    globals.camEye10A7 = camEye10C3;
    real _t10C6#3 = 0.5e0;
    tensor[3] camAt10CC#1 = <tensor[3]>[_t10C6,_t10C6,_t10C6];
    globals.camAt10A8 = camAt10CC;
    real _t10CF#2 = 0.e0;
    real _t10D3#2 = 0.1e1;
    tensor[3] camUp10D5#2 = <tensor[3]>[_t10CF,_t10CF,_t10D3];
    globals.camUp10A9 = camUp10D5;
    real camFOV10D8#1 = 0.137e2;
    globals.camFOV10AA = camFOV10D8;
    int iresU10DB#2 = 500;
    globals.iresU10AB = iresU10DB;
    globals.iresV10AC = iresU10DB;
    real camNear10E1#1 = -0.2e1;
    globals.camNear10AD = camNear10E1;
    real camFar10E4#1 = 0.5e1;
    globals.camFar10AE = camFar10E4;
    globals.refStep10AF = _t10D3;
    real rayStep10EA#1 = 0.1e-1;
    globals.rayStep10B0 = rayStep10EA;
    globals.lightVsp10B1 = camUp10D5;
    real phongKa10F6#1 = 0.1e0;
    globals.phongKa10B2 = phongKa10F6;
    real phongKd10F9#1 = 0.9e0;
    globals.phongKd10B3 = phongKd10F9;
    bool debug10FC#1 = false;
    globals.debug10B4 = debug10FC;
    int su10FF#2 = 250;
    globals.su10B5 = su10FF;
    globals.sv10B6 = su10FF;
    return
## global-variable initialization
  ENTRY1255:  preds = []
    femData:Mesh a11D4#3 = globals.a10A2;
    femData:Space 0b043B_intermedateGlobal11D3#1 = globals.0b043B_intermedateGlobal10A3;
    femData:FemFunc 0c043D_intermedateGlobal11D2#1 = globals.0c043D_intermedateGlobal10A4;
    real isoval11D1#6 = globals.isoval10A5;
    tensor[3] camEye11D0#15 = globals.camEye10A7;
    tensor[3] camAt11CF#15 = globals.camAt10A8;
    tensor[3] camUp11CE#4 = globals.camUp10A9;
    real camFOV11CD#2 = globals.camFOV10AA;
    int iresU11CC#1 = globals.iresU10AB;
    int iresV11CB#1 = globals.iresV10AC;
    tensor[3] lightVsp11CA#2 = globals.lightVsp10B1;
    int _t11E0#1 = 0;
    int _t11E2#1 = 1;
    int _t11E4#1 = ExtractFemItem<int,NumCell(Mesh)>(a11D4);
    int _t11E6#1 = ISub(_t11E4,_t11E2);
    int[] _t11E8#1 = Range(_t11E0,_t11E6);
    femData:MeshCell[] _t11EA#1 = <femData:MeshCell[]>{};
  FOREACH11EE:  preds = [ASSIGN11EB,NEXT11F3]
    foreach (_t11EC in _t11E8) on exit goto ASSIGN11F5
      femData:MeshCell[] _t11ED#1 = phi(_t11EA,_t11F1)
    femData:MeshCell _t11EF#1 = LoadFem<femData:MeshCell>(a11D4,_t11EC);
    femData:MeshCell[] _t11F1#1 = Append<femData:MeshCell>(_t11ED,_t11EF);
    goto FOREACH11EE
  ASSIGN11F5:  preds = [FOREACH11EE]
    femData:Space b11F4#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal11D3,a11D4);
    femData:FemFunc c11F7#8 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal11D2,b11F4);
    femData:Space _t11FA#8 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t11FE#28 = ExtractFem<femData:Mesh,femData:Space>(_t11FA);
    image(IMAGE1D<double[3]>) I121A#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t121D#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img121F#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I121A);
    real camDist1226#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt11CF,camEye11D0);
    globals.camDist110D = camDist1226;
    tensor[3] camN122B#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0);
    globals.camN110E = camN122B;
    tensor[3] camU1230#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE);
    globals.camU110F = camU1230;
    tensor[3] camV1233#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0);
    globals.camV1110 = camV1233;
    real _t1236#2 = 0.314159265358979323846264338327950288e1;
    real _t123A#2 = 0.36e3;
    real camVmax1240#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV11CD,_t1236,_t123A,camAt11CF,camEye11D0);
    globals.camVmax1111 = camVmax1240;
    real _t1243#1 = IntToReal(iresU11CC);
    real _t1247#1 = IntToReal(iresV11CB);
    real camUmax1249#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV11CD,_t1236,_t123A,camAt11CF,camEye11D0,_t1243,_t1247);
    globals.camUmax1112 = camUmax1249;
    tensor[3,3] _t124C#1 = <tensor[3,3]>[camU1230,camV1233,camN122B];
    tensor[3] light1252#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t124C,lightVsp11CA,lightVsp11CA);
    globals.light1113 = light1252;
    return
## strand
  strand raycast (int ui1274#2, int vi1275#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12DE:  preds = []
        int iresU1288#1 = globals.iresU10AB;
        int iresV1287#1 = globals.iresV10AC;
        real camNear1286#1 = globals.camNear10AD;
        real camDist1285#1 = globals.camDist110D;
        tensor[3] camN1284#1 = globals.camN110E;
        tensor[3] camU1283#1 = globals.camU110F;
        tensor[3] camV1282#1 = globals.camV1110;
        real camVmax1281#4 = globals.camVmax1111;
        real camUmax1280#4 = globals.camUmax1112;
        real _t129E#4 = -0.5e0;
        real _t12A0#2 = IntToReal(ui1274);
        real _t12A2#2 = IntToReal(iresU1288);
        real _t12A4#4 = 0.5e0;
        real rayU12A8#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1280,camUmax1280,_t129E,_t12A0,_t12A2,_t12A4);
        real _t12AE#2 = IntToReal(vi1275);
        real _t12B0#2 = IntToReal(iresV1287);
        real rayV12B6#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax1281,camVmax1281,_t129E,_t12AE,_t12B0,_t12A4);
        tensor[3] rayVec12C2#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1284,camUmax1280,camUmax1280,_t129E,_t12A0,_t12A2,_t12A4,camU1283,camVmax1281,camVmax1281,_t129E,_t12AE,_t12B0,_t12A4,camV1282,camDist1285);
        real transp12C4#1 = 0.1e1;
        real _t12C6#8 = 0.e0;
        tensor[3] rgb12CC#1 = <tensor[3]>[_t12C6,_t12C6,_t12C6];
        tensor[4] rgba12D6#1 = <tensor[4]>[_t12C6,_t12C6,_t12C6,_t12C6];
        self.rayU = rayU12A8;
        self.rayV = rayV12B6;
        self.rayN = camNear1286;
        self.rayVec = rayVec12C2;
        self.transp = transp12C4;
        self.rgb = rgb12CC;
        self.rgba = rgba12D6;
        self.gray = _t12C6;
        self.ui = ui1274;
        self.vi = vi1275;
        return
    end state init
    method update
        ENTRY1402:  preds = []
          femData:Mesh a12F9#1 = globals.a10A2;
          real thick12F8#2 = globals.thick10A6;
          tensor[3] camEye12F7#1 = globals.camEye10A7;
          real camNear12F6#1 = globals.camNear10AD;
          real camFar12F5#2 = globals.camFar10AE;
          real refStep12F4#1 = globals.refStep10AF;
          real rayStep12F3#2 = globals.rayStep10B0;
          real phongKa12F2#1 = globals.phongKa10B2;
          real phongKd12F1#1 = globals.phongKd10B3;
          bool debug12F0#1 = globals.debug10B4;
          int su12EF#1 = globals.su10B5;
          int sv12EE#1 = globals.sv10B6;
          tensor[3] light12EA#1 = globals.light1113;
          real rayN130C#4 = self.rayN;
          tensor[3] rayVec130D#2 = self.rayVec;
          real transp130E#10 = self.transp;
          tensor[3] rgb130F#9 = self.rgb;
          int ui1312#1 = self.ui;
          int vi1313#1 = self.vi;
          if debug12F0 then goto ASSIGN1321 else goto JOIN131E
        ASSIGN1321:  preds = [COND1330]
          bool _t1320#1 = NEQ<int>(ui1312,su12EF);
          if _t1320 then goto ASSIGN1325 else goto ASSIGN1327
        ASSIGN1325:  preds = [COND1328]
          bool _t1323#1 = true;
          goto JOIN1322
        JOIN1322:  preds = [ASSIGN1325,ASSIGN1327]
          bool _t1324#1 = phi(_t1323,_t1326)
          if _t1324 then goto STABILIZE132A else goto JOIN1329
        STABILIZE132A:  preds = [COND132F]
          stabilize
          goto JOIN1329
        JOIN1329:  preds = [*STABILIZE132A,COND132F]
          goto JOIN131E
        JOIN131E:  preds = [JOIN1329,COND1330]
          tensor[3] x1333#12 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye12F7,rayN130C,rayVec130D);
          real _t1335#8 = 0.e0;
          real _t1337#2 = TensorIndex<tensor[3],[0]>(x1333);
          bool _t1339#1 = LT<real>(_t1335,_t1337);
          if _t1339 then goto ASSIGN133F else goto JOIN133B
        ASSIGN133F:  preds = [COND13E8]
          real _t133E#13 = 0.1e1;
          bool _t1340#1 = LT<real>(_t1337,_t133E);
          if _t1340 then goto ASSIGN1346 else goto JOIN1342
        ASSIGN1346:  preds = [COND13E5]
          real _t1345#2 = TensorIndex<tensor[3],[1]>(x1333);
          bool _t1347#1 = LT<real>(_t1335,_t1345);
          if _t1347 then goto ASSIGN1470 else goto JOIN1349
        ASSIGN1470:  preds = [COND13E2]
          bool _t134E#1 = LT<real>(_t1345,_t133E);
          if _t134E then goto ASSIGN1354 else goto JOIN1350
        ASSIGN1354:  preds = [COND13DF]
          real _t1353#2 = TensorIndex<tensor[3],[2]>(x1333);
          bool _t1355#1 = LT<real>(_t1335,_t1353);
          if _t1355 then goto ASSIGN1472 else goto JOIN1357
        ASSIGN1472:  preds = [COND13DC]
          bool _t135C#1 = LT<real>(_t1353,_t133E);
          if _t135C then goto ASSIGN1360 else goto JOIN135E
        ASSIGN1360:  preds = [COND13D9]
          femData:MeshPos p135F#1 = findPos11B7 (a12F9,x1333);
          bool _t1361#1 = ExtractFemItem<bool,Valid(MeshPos)>(p135F);
          if _t1361 then goto ASSIGN1374 else goto ASSIGN13D1
        ASSIGN1374:  preds = [COND13D6]
          real _t1373#2 = 0.13e1;
          real a138A#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis())[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1335,_t133E,_t1373,_t133E,isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,thick12F8,_t133E);
          bool _t138E#1 = GT<real>(a138A,_t1335);
          if _t138E then goto ASSIGN14A8 else goto JOIN1390
        ASSIGN14A8:  preds = [COND13CD]
          real _t1395#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis())[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t133E,_t1335,_t133E,_t1373,_t133E,isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,thick12F8,_t133E);
          real _t139B#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep12F3,rayVec130D,refStep12F4);
          real _t139D#2 = MathFn<pow>(_t1395,_t139B);
          real _t13A2#1 = 0.11e1;
          real _t13A4#1 = 0.7e0;
          real _t13AC#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,isoval11D1,_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333,light12EA);
          real shade13AE#1 = Max<real>(_t1335,_t13AC);
          real _t13BB#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(11B7, 0, 1, 2)⊛Basis())[femInvV(11B7, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t11FE,_t11FA,c11F7,_t11FE,_t11FE,_t11FE,x1333);
          tensor[3] rgb13C3#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb130F,transp130E,_t133E,_t139D,_t13A2,_t13A4,camNear12F6,rayN130C,camFar12F5,phongKa12F2,phongKd12F1,shade13AE,img121F,_t121D,_t13BB);
          real transp13CA#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp130E,_t133E,_t133E,_t139D);
          goto JOIN1390
        JOIN1390:  preds = [ASSIGN14B6,COND13CD]
          tensor[3] rgb13C4#1 = phi(rgb13C3,rgb130F)
          real transp13CB#1 = phi(transp13CA,transp130E)
          goto JOIN1363
        JOIN1363:  preds = [JOIN1390,MASSIGN13D5]
          tensor[3] rgb13CF#1 = phi(rgb13C4,rgb130F)
          real transp13CE#1 = phi(transp13CB,transp130E)
          goto JOIN135E
        JOIN135E:  preds = [JOIN1363,COND13D9]
          tensor[3] rgb13D8#1 = phi(rgb13CF,rgb130F)
          real transp13D7#1 = phi(transp13CE,transp130E)
          goto JOIN1357
        JOIN1357:  preds = [JOIN135E,COND13DC]
          tensor[3] rgb13DB#1 = phi(rgb13D8,rgb130F)
          real transp13DA#1 = phi(transp13D7,transp130E)
          goto JOIN1350
        JOIN1350:  preds = [JOIN1357,COND13DF]
          tensor[3] rgb13DE#1 = phi(rgb13DB,rgb130F)
          real transp13DD#1 = phi(transp13DA,transp130E)
          goto JOIN1349
        JOIN1349:  preds = [JOIN1350,COND13E2]
          tensor[3] rgb13E1#1 = phi(rgb13DE,rgb130F)
          real transp13E0#1 = phi(transp13DD,transp130E)
          goto JOIN1342
        JOIN1342:  preds = [JOIN1349,COND13E5]
          tensor[3] rgb13E4#1 = phi(rgb13E1,rgb130F)
          real transp13E3#1 = phi(transp13E0,transp130E)
          goto JOIN133B
        JOIN133B:  preds = [JOIN1342,COND13E8]
          tensor[3] rgb13E7#3 = phi(rgb13E4,rgb130F)
          real transp13E6#2 = phi(transp13E3,transp130E)
          real _t13E9#1 = 0.1e-1;
          bool _t13EB#1 = LT<real>(transp13E6,_t13E9);
          if _t13EB then goto SAVE147C else goto JOIN13ED
        SAVE147C:  preds = [COND13F6]
          self.transp = _t1335;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13ED
        JOIN13ED:  preds = [*STABILIZE13F1,COND13F6]
          real transp13EF#2 = phi(transp13E6)
          bool _t13F7#1 = GT<real>(rayN130C,camFar12F5);
          if _t13F7 then goto SAVE13FC else goto JOIN13F9
        SAVE13FC:  preds = [COND13FF]
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13F9
        JOIN13F9:  preds = [*STABILIZE13FA,COND13FF]
          real rayN1400#1 = λ(T0[],T1[])<(T0 + T1)> (rayN130C,rayStep12F3);
          self.rayN = rayN1400;
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          active
        ASSIGN13D1:  preds = [COND13D6]
          string _t13D0#1 = "\n";
          Print<[tensor[3],string]>(x1333,_t13D0);
          string _t13D3#1 = "wait what\?\n";
          Print<[string]>(_t13D3);
          goto JOIN1363
        ASSIGN1327:  preds = [COND1328]
          bool _t1326#1 = NEQ<int>(vi1313,sv12EE);
          goto JOIN1322
    end update
    method stabilize
        ENTRY1446:  preds = []
          bool debug140A#1 = globals.debug10B4;
          int su1409#1 = globals.su10B5;
          int sv1408#1 = globals.sv10B6;
          real transp1412#4 = self.transp;
          tensor[3] rgb1413#3 = self.rgb;
          tensor[4] rgba1414#1 = self.rgba;
          int ui1416#1 = self.ui;
          int vi1417#1 = self.vi;
          real _t1422#4 = 0.1e1;
          real a1424#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1422,transp1412);
          real _t1426#1 = 0.e0;
          bool _t1428#1 = GT<real>(a1424,_t1426);
          if _t1428 then goto ASSIGN142C else goto JOIN142A
        ASSIGN142C:  preds = [COND143A]
          real _t142B#1 = TensorIndex<tensor[3],[0]>(rgb1413);
          real _t142D#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t142B,_t1422,transp1412);
          real _t142F#1 = TensorIndex<tensor[3],[1]>(rgb1413);
          real _t1431#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t142F,_t1422,transp1412);
          real _t1433#1 = TensorIndex<tensor[3],[2]>(rgb1413);
          real _t1435#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1433,_t1422,transp1412);
          tensor[4] rgba1437#1 = <tensor[4]>[_t142D,_t1431,_t1435,a1424];
          goto JOIN142A
        JOIN142A:  preds = [ASSIGN1439,COND143A]
          tensor[4] rgba1438#2 = phi(rgba1437,rgba1414)
          bool _t143B#1 = EQ<int>(ui1416,su1409);
          if _t143B then goto ASSIGN143F else goto JOIN143D
        ASSIGN143F:  preds = [COND1445]
          bool _t143E#1 = EQ<int>(vi1417,sv1408);
          if _t143E then goto COND1443 else goto JOIN1440
        COND1443:  preds = [COND1444]
          if debug140A then goto MASSIGN1442 else goto JOIN1441
        MASSIGN1442:  preds = [COND1443]
          Print<[real,tensor[4]]>(a1424,rgba1438);
          goto JOIN1441
        JOIN1441:  preds = [MASSIGN1442,COND1443]
          goto JOIN1440
        JOIN1440:  preds = [JOIN1441,COND1444]
          goto JOIN143D
        JOIN143D:  preds = [JOIN1440,COND1445]
          self.rgba = rgba1438;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1272:  preds = []
      int iresU1258#1 = globals.iresU10AB;
      int iresV1257#1 = globals.iresV10AC;
      int _t125B#2 = 0;
      int _t125D#2 = 1;
      int _t125F#1 = ISub(iresV1257,_t125D);
      int[] _t1261#1 = Range(_t125B,_t125F);
    FOREACH1264:  preds = [ASSIGN1262,NEXT1271]
      foreach (vi1263 in _t1261) on exit goto RETURN1273
      int _t1269#1 = ISub(iresU1258,_t125D);
      int[] _t126B#1 = Range(_t125B,_t1269);
    FOREACH126E:  preds = [ASSIGN144D,NEXT1270]
      foreach (ui126D in _t126B) on exit goto NEXT1271
      new raycast(ui126D,vi1263);
      goto FOREACH126E
    NEXT1271:  preds = [FOREACH126E]
      goto FOREACH1264
    RETURN1273:  preds = [FOREACH1264]
      return
#### end program ####
promote _t11FE --> globals._t14BD
promote _t11FA --> globals._tX14C0
promote c11F7 --> globals.c14C3
promote img121F --> globals.img14CA
promote _t121D --> globals._tXX14CD
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10A2 (a) = <no-default>
  input 0b043B_intermedateGlobal10A3 (b) = <no-default>
  input 0c043D_intermedateGlobal10A4 (c) = <no-default>
  input isoval10A5 (isoval) = <default>
  input thick10A6 (thick) = <default>
  input camEye10A7 (camEye) = <default>
  input camAt10A8 (camAt) = <default>
  input camUp10A9 (camUp) = <default>
  input camFOV10AA (camFOV) = <default>
  input iresU10AB (iresU) = <default>
  input iresV10AC (iresV) = <default>
  input camNear10AD (camNear) = <default>
  input camFar10AE (camFar) = <default>
  input refStep10AF (refStep) = <default>
  input rayStep10B0 (rayStep) = <default>
  input lightVsp10B1 (lightVsp) = <default>
  input phongKa10B2 (phongKa) = <default>
  input phongKd10B3 (phongKd) = <default>
  input debug10B4 (debug) = <default>
  input su10B5 (su) = <default>
  input sv10B6 (sv) = <default>
  global real camDist110D
  global tensor[3] camN110E
  global tensor[3] camU110F
  global tensor[3] camV1110
  global real camVmax1111
  global real camUmax1112
  global tensor[3] light1113
  global femData:Mesh _t14BD
  global femData:Space _tX14C0
  global femData:FemFunc c14C3
  global image(IMAGE1D<double[3]>) img14CA
  global kernel _tXX14CD
## functions
  function femData:MeshPos findPos11B7 (femData:Mesh mesh1114#23, tensor[3] pos1115#7) {
    ENTRY11B6:  preds = []
      real _t1116#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn111C#6 = <tensor[3]>[_t1116,_t1116,_t1116];
      int newtonInt111E#1 = 0;
      int[] yayCells1128#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1114,pos1115);
    FOREACH112C:  preds = [ASSIGN1129,NEXT11AD]
      foreach (cellItter112A in yayCells1128) on exit goto ASSIGN11AF
        tensor[3] xn112B#1 = phi(xn111C,xn1147)
      int _t1142#1 = 2;
      int[] _t1144#1 = Range(newtonInt111E,_t1142);
    FOREACH1148:  preds = [ASSIGN1458,NEXT11AC]
      foreach (newtonItter1146 in _t1144) on exit goto NEXT11AD
        tensor[3] xn1147#9 = phi(xn112B,xn1151)
      tensor[3] xn1151#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      real _t1153#2 = 0.1e-7;
      real _t1157#1 = λ(T0[],T1[])<(T0 * T1)> (_t1153,_t1153);
      real _t1159#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      bool _t115B#1 = GTE<real>(_t1157,_t1159);
      if _t115B then goto ASSIGN115F else goto JOIN115D
    ASSIGN115F:  preds = [COND11AB]
      real _t115E#4 = 0.1e1;
      real _t1160#4 = 0.1e-4;
      real _t1162#1 = λ(T0[],T1[])<(T0 + T1)> (_t115E,_t1160);
      tensor[3] _t116A#1 = <tensor[3]>[_t115E,_t115E,_t115E];
      real _t116C#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t116A,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      bool _t116E#1 = GT<real>(_t1162,_t116C);
      tensor[3] _t1176#1 = <tensor[3]>[_t1160,_t1160,_t1160];
      tensor[3] _t1178#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t1176,xn1147,cellItter112A,mesh1114,mesh1114,xn111C,pos1115,cellItter112A,mesh1114,mesh1114,xn1147);
      real _t117A#1 = TensorIndex<tensor[3],[0]>(_t1178);
      real _t117C#3 = -0.e0;
      bool _t117E#1 = GT<real>(_t117A,_t117C);
      real _t118A#1 = TensorIndex<tensor[3],[1]>(_t1178);
      bool _t118E#1 = GT<real>(_t118A,_t117C);
      real _t119A#1 = TensorIndex<tensor[3],[2]>(_t1178);
      bool _t119E#1 = GT<real>(_t119A,_t117C);
      bool _t11A0#1 = BAnd(_t118E,_t119E);
      bool _t11A2#1 = BAnd(_t117E,_t11A0);
      bool _t11A4#1 = BAnd(_t116E,_t11A2);
      if _t11A4 then goto ASSIGN1461 else goto JOIN11A6
    ASSIGN1461:  preds = [COND11AA]
      femData:MeshPos _t11A7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1114,cellItter112A,xn1151,pos1115);
      return _t11A7
      goto JOIN11A6
    JOIN11A6:  preds = [*RETURN(_t11A7)11A9,COND11AA]
      goto JOIN115D
    JOIN115D:  preds = [JOIN11A6,COND11AB]
      goto FOREACH1148
    NEXT11AD:  preds = [FOREACH1148]
      goto FOREACH112C
    ASSIGN11AF:  preds = [FOREACH112C]
      string _t11AE#1 = "Bad end 2";
      string _t11B0#1 = "\n";
      Print<[string,string]>(_t11AE,_t11B0);
      femData:MeshPos _t11B3#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1114);
      return _t11B3
}
  function int[2] nextCell411C9 (int faceIdx11B8#1, int cell11B9#1, femData:Mesh mesh11BA#1) {
    ENTRY11C8:  preds = []
      int _t11BB#1 = 8;
      int _t11BD#1 = IMul(cell11B9,_t11BB);
      int _t11BF#1 = 2;
      int _t11C1#1 = IMul(faceIdx11B8,_t11BF);
      int _t11C3#1 = IAdd(_t11BD,_t11C1);
      int[2] _t11C5#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11BA,_t11C3);
      return _t11C5
}
## input initialization
  ENTRY1105:  preds = []
    real isoval10B7#1 = 0.2e0;
    globals.isoval10A5 = isoval10B7;
    real thick10BA#1 = 0.7e-1;
    globals.thick10A6 = thick10BA;
    real _t10BD#2 = 0.3e1;
    real _t10BF#1 = -0.3e1;
    tensor[3] camEye10C3#1 = <tensor[3]>[_t10BD,_t10BF,_t10BD];
    globals.camEye10A7 = camEye10C3;
    real _t10C6#3 = 0.5e0;
    tensor[3] camAt10CC#1 = <tensor[3]>[_t10C6,_t10C6,_t10C6];
    globals.camAt10A8 = camAt10CC;
    real _t10CF#2 = 0.e0;
    real _t10D3#2 = 0.1e1;
    tensor[3] camUp10D5#2 = <tensor[3]>[_t10CF,_t10CF,_t10D3];
    globals.camUp10A9 = camUp10D5;
    real camFOV10D8#1 = 0.137e2;
    globals.camFOV10AA = camFOV10D8;
    int iresU10DB#2 = 500;
    globals.iresU10AB = iresU10DB;
    globals.iresV10AC = iresU10DB;
    real camNear10E1#1 = -0.2e1;
    globals.camNear10AD = camNear10E1;
    real camFar10E4#1 = 0.5e1;
    globals.camFar10AE = camFar10E4;
    globals.refStep10AF = _t10D3;
    real rayStep10EA#1 = 0.1e-1;
    globals.rayStep10B0 = rayStep10EA;
    globals.lightVsp10B1 = camUp10D5;
    real phongKa10F6#1 = 0.1e0;
    globals.phongKa10B2 = phongKa10F6;
    real phongKd10F9#1 = 0.9e0;
    globals.phongKd10B3 = phongKd10F9;
    bool debug10FC#1 = false;
    globals.debug10B4 = debug10FC;
    int su10FF#2 = 250;
    globals.su10B5 = su10FF;
    globals.sv10B6 = su10FF;
    return
## global-variable initialization
  ENTRY1255:  preds = []
    femData:Mesh a11D4#3 = globals.a10A2;
    femData:Space 0b043B_intermedateGlobal11D3#1 = globals.0b043B_intermedateGlobal10A3;
    femData:FemFunc 0c043D_intermedateGlobal11D2#1 = globals.0c043D_intermedateGlobal10A4;
    real isoval11D1#0 = globals.isoval10A5;
    tensor[3] camEye11D0#15 = globals.camEye10A7;
    tensor[3] camAt11CF#15 = globals.camAt10A8;
    tensor[3] camUp11CE#4 = globals.camUp10A9;
    real camFOV11CD#2 = globals.camFOV10AA;
    int iresU11CC#1 = globals.iresU10AB;
    int iresV11CB#1 = globals.iresV10AC;
    tensor[3] lightVsp11CA#2 = globals.lightVsp10B1;
    int _t11E0#1 = 0;
    int _t11E2#1 = 1;
    int _t11E4#1 = ExtractFemItem<int,NumCell(Mesh)>(a11D4);
    int _t11E6#1 = ISub(_t11E4,_t11E2);
    int[] _t11E8#1 = Range(_t11E0,_t11E6);
    femData:MeshCell[] _t11EA#1 = <femData:MeshCell[]>{};
  FOREACH11EE:  preds = [ASSIGN11EB,NEXT11F3]
    foreach (_t11EC in _t11E8) on exit goto ASSIGN11F5
      femData:MeshCell[] _t11ED#1 = phi(_t11EA,_t11F1)
    femData:MeshCell _t11EF#1 = LoadFem<femData:MeshCell>(a11D4,_t11EC);
    femData:MeshCell[] _t11F1#1 = Append<femData:MeshCell>(_t11ED,_t11EF);
    goto FOREACH11EE
  ASSIGN11F5:  preds = [FOREACH11EE]
    femData:Space b11F4#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal11D3,a11D4);
    femData:FemFunc c11F7#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal11D2,b11F4);
    femData:Space _t11FA#2 = ExtractFem<femData:Space,femData:FemFunc>(c11F7);
    femData:Mesh _t11FE#1 = ExtractFem<femData:Mesh,femData:Space>(_t11FA);
    image(IMAGE1D<double[3]>) I121A#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t121D#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img121F#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I121A);
    real camDist1226#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt11CF,camEye11D0);
    globals.camDist110D = camDist1226;
    tensor[3] camN122B#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0);
    globals.camN110E = camN122B;
    tensor[3] camU1230#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE);
    globals.camU110F = camU1230;
    tensor[3] camV1233#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0,camUp11CE,camAt11CF,camEye11D0,camAt11CF,camEye11D0);
    globals.camV1110 = camV1233;
    real _t1236#2 = 0.314159265358979323846264338327950288e1;
    real _t123A#2 = 0.36e3;
    real camVmax1240#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV11CD,_t1236,_t123A,camAt11CF,camEye11D0);
    globals.camVmax1111 = camVmax1240;
    real _t1243#1 = IntToReal(iresU11CC);
    real _t1247#1 = IntToReal(iresV11CB);
    real camUmax1249#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV11CD,_t1236,_t123A,camAt11CF,camEye11D0,_t1243,_t1247);
    globals.camUmax1112 = camUmax1249;
    tensor[3,3] _t124C#1 = <tensor[3,3]>[camU1230,camV1233,camN122B];
    tensor[3] light1252#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t124C,lightVsp11CA,lightVsp11CA);
    globals.light1113 = light1252;
    globals._t14BD = _t11FE;
    globals._tX14C0 = _t11FA;
    globals.c14C3 = c11F7;
    globals.img14CA = img121F;
    globals._tXX14CD = _t121D;
    return
## strand
  strand raycast (int ui1274#2, int vi1275#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12DE:  preds = []
        int iresU1288#1 = globals.iresU10AB;
        int iresV1287#1 = globals.iresV10AC;
        real camNear1286#1 = globals.camNear10AD;
        real camDist1285#1 = globals.camDist110D;
        tensor[3] camN1284#1 = globals.camN110E;
        tensor[3] camU1283#1 = globals.camU110F;
        tensor[3] camV1282#1 = globals.camV1110;
        real camVmax1281#4 = globals.camVmax1111;
        real camUmax1280#4 = globals.camUmax1112;
        real _t129E#4 = -0.5e0;
        real _t12A0#2 = IntToReal(ui1274);
        real _t12A2#2 = IntToReal(iresU1288);
        real _t12A4#4 = 0.5e0;
        real rayU12A8#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1280,camUmax1280,_t129E,_t12A0,_t12A2,_t12A4);
        real _t12AE#2 = IntToReal(vi1275);
        real _t12B0#2 = IntToReal(iresV1287);
        real rayV12B6#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax1281,camVmax1281,_t129E,_t12AE,_t12B0,_t12A4);
        tensor[3] rayVec12C2#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1284,camUmax1280,camUmax1280,_t129E,_t12A0,_t12A2,_t12A4,camU1283,camVmax1281,camVmax1281,_t129E,_t12AE,_t12B0,_t12A4,camV1282,camDist1285);
        real transp12C4#1 = 0.1e1;
        real _t12C6#8 = 0.e0;
        tensor[3] rgb12CC#1 = <tensor[3]>[_t12C6,_t12C6,_t12C6];
        tensor[4] rgba12D6#1 = <tensor[4]>[_t12C6,_t12C6,_t12C6,_t12C6];
        self.rayU = rayU12A8;
        self.rayV = rayV12B6;
        self.rayN = camNear1286;
        self.rayVec = rayVec12C2;
        self.transp = transp12C4;
        self.rgb = rgb12CC;
        self.rgba = rgba12D6;
        self.gray = _t12C6;
        self.ui = ui1274;
        self.vi = vi1275;
        return
    end state init
    method update
        ENTRY1402:  preds = []
          real isoval14BB#6 = globals.isoval10A5;
          femData:Mesh _t14BE#28 = globals._t14BD;
          femData:Space _t14C1#7 = globals._tX14C0;
          femData:FemFunc c14C4#7 = globals.c14C3;
          image(IMAGE1D<double[3]>) img14CB#1 = globals.img14CA;
          kernel _t14CE#1 = globals._tXX14CD;
          femData:Mesh a12F9#1 = globals.a10A2;
          real thick12F8#2 = globals.thick10A6;
          tensor[3] camEye12F7#1 = globals.camEye10A7;
          real camNear12F6#1 = globals.camNear10AD;
          real camFar12F5#2 = globals.camFar10AE;
          real refStep12F4#1 = globals.refStep10AF;
          real rayStep12F3#2 = globals.rayStep10B0;
          real phongKa12F2#1 = globals.phongKa10B2;
          real phongKd12F1#1 = globals.phongKd10B3;
          bool debug12F0#1 = globals.debug10B4;
          int su12EF#1 = globals.su10B5;
          int sv12EE#1 = globals.sv10B6;
          tensor[3] light12EA#1 = globals.light1113;
          real rayN130C#4 = self.rayN;
          tensor[3] rayVec130D#2 = self.rayVec;
          real transp130E#10 = self.transp;
          tensor[3] rgb130F#9 = self.rgb;
          int ui1312#1 = self.ui;
          int vi1313#1 = self.vi;
          if debug12F0 then goto ASSIGN1321 else goto JOIN131E
        ASSIGN1321:  preds = [COND1330]
          bool _t1320#1 = NEQ<int>(ui1312,su12EF);
          if _t1320 then goto ASSIGN1325 else goto ASSIGN1327
        ASSIGN1325:  preds = [COND1328]
          bool _t1323#1 = true;
          goto JOIN1322
        JOIN1322:  preds = [ASSIGN1325,ASSIGN1327]
          bool _t1324#1 = phi(_t1323,_t1326)
          if _t1324 then goto STABILIZE132A else goto JOIN1329
        STABILIZE132A:  preds = [COND132F]
          stabilize
          goto JOIN1329
        JOIN1329:  preds = [*STABILIZE132A,COND132F]
          goto JOIN131E
        JOIN131E:  preds = [JOIN1329,COND1330]
          tensor[3] x1333#12 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye12F7,rayN130C,rayVec130D);
          real _t1335#8 = 0.e0;
          real _t1337#2 = TensorIndex<tensor[3],[0]>(x1333);
          bool _t1339#1 = LT<real>(_t1335,_t1337);
          if _t1339 then goto ASSIGN133F else goto JOIN133B
        ASSIGN133F:  preds = [COND13E8]
          real _t133E#13 = 0.1e1;
          bool _t1340#1 = LT<real>(_t1337,_t133E);
          if _t1340 then goto ASSIGN1346 else goto JOIN1342
        ASSIGN1346:  preds = [COND13E5]
          real _t1345#2 = TensorIndex<tensor[3],[1]>(x1333);
          bool _t1347#1 = LT<real>(_t1335,_t1345);
          if _t1347 then goto ASSIGN1470 else goto JOIN1349
        ASSIGN1470:  preds = [COND13E2]
          bool _t134E#1 = LT<real>(_t1345,_t133E);
          if _t134E then goto ASSIGN1354 else goto JOIN1350
        ASSIGN1354:  preds = [COND13DF]
          real _t1353#2 = TensorIndex<tensor[3],[2]>(x1333);
          bool _t1355#1 = LT<real>(_t1335,_t1353);
          if _t1355 then goto ASSIGN1472 else goto JOIN1357
        ASSIGN1472:  preds = [COND13DC]
          bool _t135C#1 = LT<real>(_t1353,_t133E);
          if _t135C then goto ASSIGN1360 else goto JOIN135E
        ASSIGN1360:  preds = [COND13D9]
          femData:MeshPos p135F#1 = findPos11B7 (a12F9,x1333);
          bool _t1361#1 = ExtractFemItem<bool,Valid(MeshPos)>(p135F);
          if _t1361 then goto ASSIGN1374 else goto ASSIGN13D1
        ASSIGN1374:  preds = [COND13D6]
          real _t1373#2 = 0.13e1;
          real a138A#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis())[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11B7, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11B7, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1335,_t133E,_t1373,_t133E,isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,thick12F8,_t133E);
          bool _t138E#1 = GT<real>(a138A,_t1335);
          if _t138E then goto ASSIGN14C6 else goto JOIN1390
        ASSIGN14C6:  preds = [COND13CD]
          real _t1395#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis())[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11B7, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11B7, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11B7, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11B7, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11B7, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t133E,_t1335,_t133E,_t1373,_t133E,isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,thick12F8,_t133E);
          real _t139B#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep12F3,rayVec130D,refStep12F4);
          real _t139D#2 = MathFn<pow>(_t1395,_t139B);
          real _t13A2#1 = 0.11e1;
          real _t13A4#1 = 0.7e0;
          real _t13AC#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11B7, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11B7, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11B7, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11B7, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11B7, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,isoval14BB,_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333,light12EA);
          real shade13AE#1 = Max<real>(_t1335,_t13AC);
          real _t13BB#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(11B7, 0, 1, 2)⊛Basis())[femInvV(11B7, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t14BE,_t14C1,c14C4,_t14BE,_t14BE,_t14BE,x1333);
          tensor[3] rgb13C3#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb130F,transp130E,_t133E,_t139D,_t13A2,_t13A4,camNear12F6,rayN130C,camFar12F5,phongKa12F2,phongKd12F1,shade13AE,img14CB,_t14CE,_t13BB);
          real transp13CA#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp130E,_t133E,_t133E,_t139D);
          goto JOIN1390
        JOIN1390:  preds = [ASSIGN14B6,COND13CD]
          tensor[3] rgb13C4#1 = phi(rgb13C3,rgb130F)
          real transp13CB#1 = phi(transp13CA,transp130E)
          goto JOIN1363
        JOIN1363:  preds = [JOIN1390,MASSIGN13D5]
          tensor[3] rgb13CF#1 = phi(rgb13C4,rgb130F)
          real transp13CE#1 = phi(transp13CB,transp130E)
          goto JOIN135E
        JOIN135E:  preds = [JOIN1363,COND13D9]
          tensor[3] rgb13D8#1 = phi(rgb13CF,rgb130F)
          real transp13D7#1 = phi(transp13CE,transp130E)
          goto JOIN1357
        JOIN1357:  preds = [JOIN135E,COND13DC]
          tensor[3] rgb13DB#1 = phi(rgb13D8,rgb130F)
          real transp13DA#1 = phi(transp13D7,transp130E)
          goto JOIN1350
        JOIN1350:  preds = [JOIN1357,COND13DF]
          tensor[3] rgb13DE#1 = phi(rgb13DB,rgb130F)
          real transp13DD#1 = phi(transp13DA,transp130E)
          goto JOIN1349
        JOIN1349:  preds = [JOIN1350,COND13E2]
          tensor[3] rgb13E1#1 = phi(rgb13DE,rgb130F)
          real transp13E0#1 = phi(transp13DD,transp130E)
          goto JOIN1342
        JOIN1342:  preds = [JOIN1349,COND13E5]
          tensor[3] rgb13E4#1 = phi(rgb13E1,rgb130F)
          real transp13E3#1 = phi(transp13E0,transp130E)
          goto JOIN133B
        JOIN133B:  preds = [JOIN1342,COND13E8]
          tensor[3] rgb13E7#3 = phi(rgb13E4,rgb130F)
          real transp13E6#2 = phi(transp13E3,transp130E)
          real _t13E9#1 = 0.1e-1;
          bool _t13EB#1 = LT<real>(transp13E6,_t13E9);
          if _t13EB then goto SAVE147C else goto JOIN13ED
        SAVE147C:  preds = [COND13F6]
          self.transp = _t1335;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13ED
        JOIN13ED:  preds = [*STABILIZE13F1,COND13F6]
          real transp13EF#2 = phi(transp13E6)
          bool _t13F7#1 = GT<real>(rayN130C,camFar12F5);
          if _t13F7 then goto SAVE13FC else goto JOIN13F9
        SAVE13FC:  preds = [COND13FF]
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          stabilize
          goto JOIN13F9
        JOIN13F9:  preds = [*STABILIZE13FA,COND13FF]
          real rayN1400#1 = λ(T0[],T1[])<(T0 + T1)> (rayN130C,rayStep12F3);
          self.rayN = rayN1400;
          self.transp = transp13EF;
          self.rgb = rgb13E7;
          active
        ASSIGN13D1:  preds = [COND13D6]
          string _t13D0#1 = "\n";
          Print<[tensor[3],string]>(x1333,_t13D0);
          string _t13D3#1 = "wait what\?\n";
          Print<[string]>(_t13D3);
          goto JOIN1363
        ASSIGN1327:  preds = [COND1328]
          bool _t1326#1 = NEQ<int>(vi1313,sv12EE);
          goto JOIN1322
    end update
    method stabilize
        ENTRY1446:  preds = []
          bool debug140A#1 = globals.debug10B4;
          int su1409#1 = globals.su10B5;
          int sv1408#1 = globals.sv10B6;
          real transp1412#4 = self.transp;
          tensor[3] rgb1413#3 = self.rgb;
          tensor[4] rgba1414#1 = self.rgba;
          int ui1416#1 = self.ui;
          int vi1417#1 = self.vi;
          real _t1422#4 = 0.1e1;
          real a1424#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1422,transp1412);
          real _t1426#1 = 0.e0;
          bool _t1428#1 = GT<real>(a1424,_t1426);
          if _t1428 then goto ASSIGN142C else goto JOIN142A
        ASSIGN142C:  preds = [COND143A]
          real _t142B#1 = TensorIndex<tensor[3],[0]>(rgb1413);
          real _t142D#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t142B,_t1422,transp1412);
          real _t142F#1 = TensorIndex<tensor[3],[1]>(rgb1413);
          real _t1431#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t142F,_t1422,transp1412);
          real _t1433#1 = TensorIndex<tensor[3],[2]>(rgb1413);
          real _t1435#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1433,_t1422,transp1412);
          tensor[4] rgba1437#1 = <tensor[4]>[_t142D,_t1431,_t1435,a1424];
          goto JOIN142A
        JOIN142A:  preds = [ASSIGN1439,COND143A]
          tensor[4] rgba1438#2 = phi(rgba1437,rgba1414)
          bool _t143B#1 = EQ<int>(ui1416,su1409);
          if _t143B then goto ASSIGN143F else goto JOIN143D
        ASSIGN143F:  preds = [COND1445]
          bool _t143E#1 = EQ<int>(vi1417,sv1408);
          if _t143E then goto COND1443 else goto JOIN1440
        COND1443:  preds = [COND1444]
          if debug140A then goto MASSIGN1442 else goto JOIN1441
        MASSIGN1442:  preds = [COND1443]
          Print<[real,tensor[4]]>(a1424,rgba1438);
          goto JOIN1441
        JOIN1441:  preds = [MASSIGN1442,COND1443]
          goto JOIN1440
        JOIN1440:  preds = [JOIN1441,COND1444]
          goto JOIN143D
        JOIN143D:  preds = [JOIN1440,COND1445]
          self.rgba = rgba1438;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1272:  preds = []
      int iresU1258#1 = globals.iresU10AB;
      int iresV1257#1 = globals.iresV10AC;
      int _t125B#2 = 0;
      int _t125D#2 = 1;
      int _t125F#1 = ISub(iresV1257,_t125D);
      int[] _t1261#1 = Range(_t125B,_t125F);
    FOREACH1264:  preds = [ASSIGN1262,NEXT1271]
      foreach (vi1263 in _t1261) on exit goto RETURN1273
      int _t1269#1 = ISub(iresU1258,_t125D);
      int[] _t126B#1 = Range(_t125B,_t1269);
    FOREACH126E:  preds = [ASSIGN144D,NEXT1270]
      foreach (ui126D in _t126B) on exit goto NEXT1271
      new raycast(ui126D,vi1263);
      goto FOREACH126E
    NEXT1271:  preds = [FOREACH126E]
      goto FOREACH1264
    RETURN1273:  preds = [FOREACH1264]
      return
#### end program ####
promote I1569 --> globals.I1A8A
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14DB (a) = <no-default>
  input 0b043B_intermedateGlobal14DC (b) = <no-default>
  input 0c043D_intermedateGlobal14DD (c) = <no-default>
  input isoval14DE (isoval) = <default>
  input thick14DF (thick) = <default>
  input camEye14E0 (camEye) = <default>
  input camAt14E1 (camAt) = <default>
  input camUp14E2 (camUp) = <default>
  input camFOV14E3 (camFOV) = <default>
  input iresU14E4 (iresU) = <default>
  input iresV14E5 (iresV) = <default>
  input camNear14E6 (camNear) = <default>
  input camFar14E7 (camFar) = <default>
  input refStep14E8 (refStep) = <default>
  input rayStep14E9 (rayStep) = <default>
  input lightVsp14EA (lightVsp) = <default>
  input phongKa14EB (phongKa) = <default>
  input phongKd14EC (phongKd) = <default>
  input debug14ED (debug) = <default>
  input su14EE (su) = <default>
  input sv14EF (sv) = <default>
  global real camDist14F0
  global tensor[3] camN14F1
  global tensor[3] camU14F2
  global tensor[3] camV14F3
  global real camVmax14F4
  global real camUmax14F5
  global tensor[3] light14F6
  global femData:Mesh _t14F7
  global femData:Space _tX14F8
  global femData:FemFunc c14F9
  global image(IMAGE1D<double[3]>) img14FA
  global kernel _tXX14FB
  global image(IMAGE1D<double[3]>) I1A8A
## functions
  function femData:MeshPos findPos16DA (femData:Mesh mesh16DB#31, tensor[3] pos16DC#6) {
    ENTRY16DD:  preds = []
      real _t16DE#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16E0#49 = <tensor[3]>[_t16DE,_t16DE,_t16DE];
      int newtonInt16E2#1 = 0;
      int[] yayCells16E4#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16DB,pos16DC);
    FOREACH16E7:  preds = [ASSIGN16E5,NEXT1802]
      foreach (cellItter16E6 in yayCells16E4) on exit goto ASSIGN1804
        tensor[3] xn1801#1 = phi(xn16E0,xn16EF)
      int _t16E8#1 = 2;
      int[] _t16EA#1 = Range(newtonInt16E2,_t16E8);
    FOREACH16ED:  preds = [ASSIGN16EB,NEXT1800]
      foreach (newtonItter16EC in _t16EA) on exit goto NEXT1802
        tensor[3] xn16EF#16 = phi(xn1801,xn16EE)
      int[4] femIndicies1700#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs1701#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies1700);
      tensor[4,3] dofs16FF#1 = femDofs1701;
      tensor[3,4] basisResult1702#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_1016F0#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,dofs16FF,basisResult1702,xn16E0);
      tensor[3,3,3] op1_e3_l_1216F1#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0);
      tensor[3,3,3] op1_e3_l_1316F2#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0,op1_e3_l_1216F1);
      tensor[4,3] dofs1703#1 = femDofs1701;
      tensor[3,4] basisResult1704#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1416F3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1703,basisResult1704,xn16E0);
      tensor[4,3] dofs1705#1 = femDofs1701;
      tensor[3,4] basisResult1706#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1516F4#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1705,basisResult1706,xn16E0);
      tensor[4,3] dofs1707#1 = femDofs1701;
      tensor[3,4] basisResult1708#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1616F5#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1707,basisResult1708,xn16E0);
      tensor[3,3] op1_e3_l_1716F6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616F5);
      tensor[3] op1_e3_l_1816F7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516F4,op1_e3_l_1716F6);
      real op1_e3_l_1916F8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416F3,op1_e3_l_1816F7);
      tensor[3,3] op1_e3_l_2016F9#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316F2);
      real op1_e3_l_2116FA#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916F8);
      tensor[4,3] dofs1709#1 = femDofs1701;
      tensor[4] basisResult170A#1 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_2216FB#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,dofs1709,basisResult170A,xn16EF);
      tensor[3,3] op1_e3_l_2316FC#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016F9,op1_e3_l_2116FA);
      tensor[3] op1_e3_l_2416FD#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_2216FB);
      tensor[3] op1_e3_l_2516FE#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_2416FD);
      tensor[3] xn16EE#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_2516FE);
      real _t1727#2 = 0.1e-7;
      real _t1729#1 = λ(T0[],T1[])<(T0 * T1)> (_t1727,_t1727);
      int[4] femIndicies173C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs173D#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies173C);
      tensor[4,3] dofs173B#1 = femDofs173D;
      tensor[3,4] basisResult173E#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_18172C#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,dofs173B,basisResult173E,xn16E0);
      tensor[3,3,3] op1_e3_l_20172D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_18172C);
      tensor[3,3,3] op1_e3_l_21172E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_18172C,op1_e3_l_20172D);
      tensor[4,3] dofs173F#1 = femDofs173D;
      tensor[3,4] basisResult1740#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_22172F#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs173F,basisResult1740,xn16E0);
      tensor[4,3] dofs1741#1 = femDofs173D;
      tensor[3,4] basisResult1742#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_231730#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1741,basisResult1742,xn16E0);
      tensor[4,3] dofs1743#1 = femDofs173D;
      tensor[3,4] basisResult1744#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_241731#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1743,basisResult1744,xn16E0);
      tensor[3,3] op1_e3_l_251732#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_241731);
      tensor[3] op1_e3_l_261733#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_231730,op1_e3_l_251732);
      real op1_e3_l_271734#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_22172F,op1_e3_l_261733);
      tensor[3,3] op1_e3_l_281735#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_21172E);
      real op1_e3_l_291736#1 = λ(T0[])<(2 * T0)> (op1_e3_l_271734);
      tensor[4,3] dofs1745#1 = femDofs173D;
      tensor[4] basisResult1746#1 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_301737#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter16E6,mesh16DB,xn16EF,dofs1745,basisResult1746,xn16EF);
      tensor[3,3] op1_e3_l_311738#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_281735,op1_e3_l_291736);
      tensor[3] op1_e3_l_321739#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_301737);
      tensor[3] op1_e3_l_48173A#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_311738,op1_e3_l_321739);
      real _t172B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_48173A,op1_e3_l_48173A);
      bool _t1763#1 = GTE<real>(_t1729,_t172B);
      if _t1763 then goto ASSIGN1767 else goto JOIN17FF
    ASSIGN1767:  preds = [COND1765]
      real _t1766#4 = 0.1e1;
      real _t1768#4 = 0.1e-4;
      real _t176A#1 = λ(T0[],T1[])<(T0 + T1)> (_t1766,_t1768);
      tensor[3] _t176C#1 = <tensor[3]>[_t1766,_t1766,_t1766];
      int[4] femIndicies1780#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs1781#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies1780);
      tensor[4,3] dofs177F#1 = femDofs1781;
      tensor[3,4] basisResult1782#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_11176F#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,dofs177F,basisResult1782,xn16E0);
      tensor[3,3,3] op1_e3_l_131770#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_11176F);
      tensor[3,3,3] op1_e3_l_141771#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_11176F,op1_e3_l_131770);
      tensor[4,3] dofs1783#1 = femDofs1781;
      tensor[3,4] basisResult1784#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_151772#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1783,basisResult1784,xn16E0);
      tensor[4,3] dofs1785#1 = femDofs1781;
      tensor[3,4] basisResult1786#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_161773#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1785,basisResult1786,xn16E0);
      tensor[4,3] dofs1787#1 = femDofs1781;
      tensor[3,4] basisResult1788#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_171774#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs1787,basisResult1788,xn16E0);
      tensor[3,3] op1_e3_l_181775#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_171774);
      tensor[3] op1_e3_l_191776#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_161773,op1_e3_l_181775);
      real op1_e3_l_201777#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_151772,op1_e3_l_191776);
      tensor[3,3] op1_e3_l_211778#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_141771);
      real op1_e3_l_221779#1 = λ(T0[])<(2 * T0)> (op1_e3_l_201777);
      tensor[4,3] dofs1789#1 = femDofs1781;
      tensor[4] basisResult178A#1 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_23177A#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,dofs1789,basisResult178A,xn16EF);
      tensor[3,3] op1_e3_l_24177B#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_211778,op1_e3_l_221779);
      tensor[3] op1_e3_l_25177C#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_23177A);
      tensor[3] op1_e3_l_26177D#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_24177B,op1_e3_l_25177C);
      tensor[3] op1_e3_l_27177E#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_26177D);
      real _t176E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t176C,op1_e3_l_27177E);
      bool _t17A8#1 = GT<real>(_t176A,_t176E);
      tensor[3] _t17AA#1 = <tensor[3]>[_t1768,_t1768,_t1768];
      int[4] femIndicies17BE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs17BF#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies17BE);
      tensor[4,3] dofs17BD#1 = femDofs17BF;
      tensor[3,4] basisResult17C0#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_1117AD#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,dofs17BD,basisResult17C0,xn16E0);
      tensor[3,3,3] op1_e3_l_1317AE#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1117AD);
      tensor[3,3,3] op1_e3_l_1417AF#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1117AD,op1_e3_l_1317AE);
      tensor[4,3] dofs17C1#1 = femDofs17BF;
      tensor[3,4] basisResult17C2#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1517B0#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs17C1,basisResult17C2,xn16E0);
      tensor[4,3] dofs17C3#1 = femDofs17BF;
      tensor[3,4] basisResult17C4#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1617B1#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs17C3,basisResult17C4,xn16E0);
      tensor[4,3] dofs17C5#1 = femDofs17BF;
      tensor[3,4] basisResult17C6#1 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3] probe_l_1717B2#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,dofs17C5,basisResult17C6,xn16E0);
      tensor[3,3] op1_e3_l_1817B3#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1717B2);
      tensor[3] op1_e3_l_1917B4#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1617B1,op1_e3_l_1817B3);
      real op1_e3_l_2017B5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1517B0,op1_e3_l_1917B4);
      tensor[3,3] op1_e3_l_2117B6#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1417AF);
      real op1_e3_l_2217B7#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2017B5);
      tensor[4,3] dofs17C7#1 = femDofs17BF;
      tensor[4] basisResult17C8#1 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_2317B8#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,dofs17C7,basisResult17C8,xn16EF);
      tensor[3,3] op1_e3_l_2417B9#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2117B6,op1_e3_l_2217B7);
      tensor[3] op1_e3_l_2517BA#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_2317B8);
      tensor[3] op1_e3_l_2617BB#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2417B9,op1_e3_l_2517BA);
      tensor[3] op1_e3_l_2717BC#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_2617BB);
      tensor[3] _t17AC#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17AA,op1_e3_l_2717BC);
      real _t17E6#1 = TensorIndex<tensor[3],[0]>(_t17AC);
      real _t17E8#3 = -0.e0;
      bool _t17EA#1 = GT<real>(_t17E6,_t17E8);
      real _t17EC#1 = TensorIndex<tensor[3],[1]>(_t17AC);
      bool _t17EE#1 = GT<real>(_t17EC,_t17E8);
      real _t17F0#1 = TensorIndex<tensor[3],[2]>(_t17AC);
      bool _t17F2#1 = GT<real>(_t17F0,_t17E8);
      bool _t17F4#1 = BAnd(_t17EE,_t17F2);
      bool _t17F6#1 = BAnd(_t17EA,_t17F4);
      bool _t17F8#1 = BAnd(_t17A8,_t17F6);
      if _t17F8 then goto ASSIGN17FC else goto JOIN17FE
    ASSIGN17FC:  preds = [COND17FA]
      femData:MeshPos _t17FB#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16DB,cellItter16E6,xn16EE,pos16DC);
      return _t17FB
      goto JOIN17FE
    JOIN17FE:  preds = [*RETURN(_t17FB)17FD,COND17FA]
      goto JOIN17FF
    JOIN17FF:  preds = [JOIN17FE,COND1765]
      goto FOREACH16ED
    NEXT1802:  preds = [FOREACH16ED]
      goto FOREACH16E7
    ASSIGN1804:  preds = [FOREACH16E7]
      string _t1803#1 = "Bad end 2";
      string _t1805#1 = "\n";
      Print<[string,string]>(_t1803,_t1805);
      femData:MeshPos _t1808#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16DB);
      return _t1808
}
## input initialization
  ENTRY14FC:  preds = []
    real isoval14FD#1 = 0.2e0;
    globals.isoval14DE = isoval14FD;
    real thick1500#1 = 0.7e-1;
    globals.thick14DF = thick1500;
    real _t1503#2 = 0.3e1;
    real _t1505#1 = -0.3e1;
    tensor[3] camEye1507#1 = <tensor[3]>[_t1503,_t1505,_t1503];
    globals.camEye14E0 = camEye1507;
    real _t150A#3 = 0.5e0;
    tensor[3] camAt150C#1 = <tensor[3]>[_t150A,_t150A,_t150A];
    globals.camAt14E1 = camAt150C;
    real _t150F#2 = 0.e0;
    real _t1511#2 = 0.1e1;
    tensor[3] camUp1513#2 = <tensor[3]>[_t150F,_t150F,_t1511];
    globals.camUp14E2 = camUp1513;
    real camFOV1516#1 = 0.137e2;
    globals.camFOV14E3 = camFOV1516;
    int iresU1519#2 = 500;
    globals.iresU14E4 = iresU1519;
    globals.iresV14E5 = iresU1519;
    real camNear151D#1 = -0.2e1;
    globals.camNear14E6 = camNear151D;
    real camFar1520#1 = 0.5e1;
    globals.camFar14E7 = camFar1520;
    globals.refStep14E8 = _t1511;
    real rayStep1524#1 = 0.1e-1;
    globals.rayStep14E9 = rayStep1524;
    globals.lightVsp14EA = camUp1513;
    real phongKa1528#1 = 0.1e0;
    globals.phongKa14EB = phongKa1528;
    real phongKd152B#1 = 0.9e0;
    globals.phongKd14EC = phongKd152B;
    bool debug152E#1 = false;
    globals.debug14ED = debug152E;
    int su1531#2 = 250;
    globals.su14EE = su1531;
    globals.sv14EF = su1531;
    return
## global-variable initialization
  ENTRY1536:  preds = []
    femData:Mesh a1537#3 = globals.a14DB;
    femData:Space 0b043B_intermedateGlobal1539#1 = globals.0b043B_intermedateGlobal14DC;
    femData:FemFunc 0c043D_intermedateGlobal153B#1 = globals.0c043D_intermedateGlobal14DD;
    real isoval153D#0 = globals.isoval14DE;
    tensor[3] camEye153F#6 = globals.camEye14E0;
    tensor[3] camAt1541#6 = globals.camAt14E1;
    tensor[3] camUp1543#2 = globals.camUp14E2;
    real camFOV1545#2 = globals.camFOV14E3;
    int iresU1547#1 = globals.iresU14E4;
    int iresV1549#1 = globals.iresV14E5;
    tensor[3] lightVsp154B#2 = globals.lightVsp14EA;
    int _t154D#1 = 0;
    int _t154F#1 = 1;
    int _t1551#1 = ExtractFemItem<int,NumCell(Mesh)>(a1537);
    int _t1553#1 = ISub(_t1551,_t154F);
    int[] _t1555#1 = Range(_t154D,_t1553);
    femData:MeshCell[] _t1557#1 = <femData:MeshCell[]>{};
  FOREACH155A:  preds = [ASSIGN1558,NEXT1560]
    foreach (_t1559 in _t1555) on exit goto ASSIGN1562
      femData:MeshCell[] _t155E#1 = phi(_t1557,_t155D)
    femData:MeshCell _t155B#1 = LoadFem<femData:MeshCell>(a1537,_t1559);
    femData:MeshCell[] _t155D#1 = Append<femData:MeshCell>(_t155E,_t155B);
    goto FOREACH155A
  ASSIGN1562:  preds = [FOREACH155A]
    femData:Space b1561#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1539,a1537);
    femData:FemFunc c1563#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal153B,b1561);
    femData:Space _t1565#2 = ExtractFem<femData:Space,femData:FemFunc>(c1563);
    femData:Mesh _t1567#1 = ExtractFem<femData:Mesh,femData:Space>(_t1565);
    image(IMAGE1D<double[3]>) I1569#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t156B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img156D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1569);
    tensor[3] op1_e3_l_21570#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_41571#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21570,op1_e3_l_21570);
    real camDist156F#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41571);
    globals.camDist14F0 = camDist156F;
    tensor[3] op1_e3_l_41577#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_61578#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41577,op1_e3_l_41577);
    real op1_e3_l_71579#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61578);
    real op1_e3_l_9157A#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71579);
    tensor[3] camN1576#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41577,op1_e3_l_9157A);
    globals.camN14F1 = camN1576;
    tensor[3] op1_e3_l_101582#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_121583#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101582,op1_e3_l_101582);
    real op1_e3_l_131584#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121583);
    tensor[3,3] op1_e3_l_151585#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1543);
    real op1_e3_l_161586#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131584);
    tensor[3] op1_e3_l_171587#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101582,op1_e3_l_151585);
    real op1_e3_l_341588#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171587,op1_e3_l_171587);
    real op1_e3_l_351589#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161586,op1_e3_l_161586,op1_e3_l_341588);
    real op1_e3_l_36158A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351589);
    tensor[3] op1_e3_l_37158B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161586,op1_e3_l_171587);
    real op1_e3_l_38158C#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_36158A);
    tensor[3] camU1581#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_37158B,op1_e3_l_38158C);
    globals.camU14F2 = camU1581;
    tensor[3] op1_e3_l_14159B#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_16159C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_14159B,op1_e3_l_14159B);
    real op1_e3_l_17159D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_16159C);
    tensor[3,3] op1_e3_l_23159E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1543);
    tensor[3] op1_e3_l_26159F#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_14159B,op1_e3_l_23159E);
    real op1_e3_l_2815A0#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_17159D);
    real op1_e3_l_3015A1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_26159F,op1_e3_l_26159F);
    real op1_e3_l_3115A2#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_2815A0,op1_e3_l_2815A0,op1_e3_l_3015A1);
    real op1_e3_l_3215A3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3115A2);
    tensor[3,3] op1_e3_l_4515A4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_14159B);
    tensor[3] op1_e3_l_4715A5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_26159F,op1_e3_l_4515A4);
    real op1_e3_l_4815A6#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_3215A3);
    tensor[3] op1_e3_l_5015A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2815A0,op1_e3_l_4715A5);
    tensor[3] camV159A#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_4815A6,op1_e3_l_2815A0,op1_e3_l_5015A7);
    globals.camV14F3 = camV159A;
    real _t15B7#2 = 0.314159265358979323846264338327950288e1;
    real _t15B9#2 = 0.36e3;
    real op1_e3_l_515BC#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1545,_t15B7);
    real op1_e3_l_615BD#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B9,op1_e3_l_515BC);
    tensor[3] op1_e3_l_715BE#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_915BF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_715BE,op1_e3_l_715BE);
    real op1_e3_l_1015C0#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_615BD);
    real op1_e3_l_1115C1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_915BF);
    real camVmax15BB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015C0,op1_e3_l_1115C1);
    globals.camVmax14F4 = camVmax15BB;
    real _t15CA#1 = IntToReal(iresU1547);
    real _t15CC#1 = IntToReal(iresV1549);
    real op1_e3_l_715CF#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1545,_t15B7);
    real op1_e3_l_815D0#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B9,op1_e3_l_715CF);
    tensor[3] op1_e3_l_915D1#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_1115D2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_915D1,op1_e3_l_915D1);
    real op1_e3_l_1215D3#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_815D0);
    real op1_e3_l_1315D4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1115D2);
    real op1_e3_l_1415D5#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15CA,op1_e3_l_1215D3,op1_e3_l_1315D4);
    real camUmax15CE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15CC,op1_e3_l_1415D5);
    globals.camUmax14F5 = camUmax15CE;
    tensor[3,3] _t15DF#1 = <tensor[3,3]>[camU1581,camV159A,camN1576];
    real op1_e3_l_315E2#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp154B);
    real op1_e3_l_415E3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315E2);
    real op1_e3_l_515E4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415E3);
    tensor[3] op1_e3_l_615E5#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15DF,lightVsp154B);
    tensor[3] light15E1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515E4,op1_e3_l_615E5);
    globals.light14F6 = light15E1;
    globals._t14F7 = _t1567;
    globals._tX14F8 = _t1565;
    globals.c14F9 = c1563;
    globals.img14FA = img156D;
    globals._tXX14FB = _t156B;
    globals.I1A8A = I1569;
    return
## strand
  strand raycast (int ui15F2#2, int vi15F3#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15FE:  preds = []
        int iresU15FF#1 = globals.iresU14E4;
        int iresV1601#1 = globals.iresV14E5;
        real camNear1603#1 = globals.camNear14E6;
        real camDist1605#1 = globals.camDist14F0;
        tensor[3] camN1607#1 = globals.camN14F1;
        tensor[3] camU1609#1 = globals.camU14F2;
        tensor[3] camV160B#1 = globals.camV14F3;
        real camVmax160D#6 = globals.camVmax14F4;
        real camUmax160F#4 = globals.camUmax14F5;
        real _t1611#8 = -0.5e0;
        real _t1613#2 = IntToReal(ui15F2);
        real _t1615#2 = IntToReal(iresU15FF);
        real _t1617#4 = 0.5e0;
        real op1_e3_l_6161A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1615,_t1617);
        real op1_e3_l_7161B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1613);
        real op1_e3_l_8161C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6161A);
        real op1_e3_l_9161D#2 = λ(T0[])<Neg(T0)> (camUmax160F);
        real op1_e3_l_10161E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7161B,op1_e3_l_8161C);
        real op1_e3_l_11161F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax160F,op1_e3_l_9161D);
        real op1_e3_l_131620#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10161E,op1_e3_l_11161F);
        real rayU1619#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9161D,op1_e3_l_131620);
        real _t1629#2 = IntToReal(vi15F3);
        real _t162B#2 = IntToReal(iresV1601);
        real op1_e3_l_6162E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t162B,_t1617);
        real op1_e3_l_7162F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1629);
        real op1_e3_l_81630#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6162E);
        real op1_e3_l_91631#1 = λ(T0[])<Neg(T0)> (camVmax160D);
        real op1_e3_l_101632#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_81630);
        real op1_e3_l_111633#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax160D,op1_e3_l_91631);
        real op1_e3_l_121634#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101632,op1_e3_l_111633);
        real rayV162D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_121634);
        real op1_e3_l_16163E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1615,_t1617);
        real op1_e3_l_17163F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1613);
        real op1_e3_l_181640#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_16163E);
        real op1_e3_l_191641#2 = λ(T0[])<Neg(T0)> (camUmax160F);
        real op1_e3_l_201642#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_17163F,op1_e3_l_181640);
        real op1_e3_l_211643#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax160F,op1_e3_l_191641);
        real op1_e3_l_231644#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_201642,op1_e3_l_211643);
        real op1_e3_l_241645#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_191641,op1_e3_l_231644);
        real op1_e3_l_251646#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1617,_t162B);
        real op1_e3_l_261647#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1629);
        real op1_e3_l_271648#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_251646);
        real op1_e3_l_281649#1 = λ(T0[])<Neg(T0)> (camVmax160D);
        real op1_e3_l_29164A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_261647,op1_e3_l_271648);
        real op1_e3_l_30164B#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax160D,op1_e3_l_281649);
        real op1_e3_l_31164C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_29164A,op1_e3_l_30164B);
        real op1_e3_l_32164D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_31164C);
        tensor[3] op1_e3_l_33164E#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1609,op1_e3_l_241645);
        tensor[3] op1_e3_l_34164F#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV160B,op1_e3_l_32164D);
        tensor[3] op1_e3_l_351650#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33164E,op1_e3_l_34164F);
        tensor[3] op1_e3_l_361651#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1605,op1_e3_l_351650);
        tensor[3] rayVec163D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1607,op1_e3_l_361651);
        real transp1667#1 = 0.1e1;
        real _t1669#8 = 0.e0;
        tensor[3] rgb166B#1 = <tensor[3]>[_t1669,_t1669,_t1669];
        tensor[4] rgba166D#1 = <tensor[4]>[_t1669,_t1669,_t1669,_t1669];
        self.rayU = rayU1619;
        self.rayV = rayV162D;
        self.rayN = camNear1603;
        self.rayVec = rayVec163D;
        self.transp = transp1667;
        self.rgb = rgb166B;
        self.rgba = rgba166D;
        self.gray = _t1669;
        self.ui = ui15F2;
        self.vi = vi15F3;
        return
    end state init
    method update
        ENTRY167A:  preds = []
          image(IMAGE1D<double[3]>) I1A8B#3 = globals.I1A8A;
          real isoval167B#2 = globals.isoval14DE;
          femData:Mesh _t167D#42 = globals._t14F7;
          femData:Space _t167F#20 = globals._tX14F8;
          femData:FemFunc c1681#20 = globals.c14F9;
          image(IMAGE1D<double[3]>) img1683#1 = globals.img14FA;
          kernel _t1685#1 = globals._tXX14FB;
          femData:Mesh a1687#1 = globals.a14DB;
          real thick1689#2 = globals.thick14DF;
          tensor[3] camEye168B#1 = globals.camEye14E0;
          real camNear168D#2 = globals.camNear14E6;
          real camFar168F#2 = globals.camFar14E7;
          real refStep1691#1 = globals.refStep14E8;
          real rayStep1693#2 = globals.rayStep14E9;
          real phongKa1695#1 = globals.phongKa14EB;
          real phongKd1697#1 = globals.phongKd14EC;
          bool debug1699#1 = globals.debug14ED;
          int su169B#1 = globals.su14EE;
          int sv169D#1 = globals.sv14EF;
          tensor[3] light169F#1 = globals.light14F6;
          real rayN16A1#4 = self.rayN;
          tensor[3] rayVec16A3#2 = self.rayVec;
          real transp16A5#10 = self.transp;
          tensor[3] rgb16A7#9 = self.rgb;
          int ui16A9#1 = self.ui;
          int vi16AB#1 = self.vi;
          if debug1699 then goto ASSIGN16AF else goto JOIN16B9
        ASSIGN16AF:  preds = [COND16AD]
          bool _t16AE#1 = NEQ<int>(ui16A9,su169B);
          if _t16AE then goto ASSIGN16B2 else goto ASSIGN1A32
        ASSIGN16B2:  preds = [COND16B0]
          bool _t16B1#1 = true;
          goto JOIN16B5
        JOIN16B5:  preds = [ASSIGN16B2,ASSIGN1A32]
          bool _t16B3#1 = phi(_t16B1,_t16B4)
          if _t16B3 then goto STABILIZE16B7 else goto JOIN16B8
        STABILIZE16B7:  preds = [COND16B6]
          stabilize
          goto JOIN16B8
        JOIN16B8:  preds = [*STABILIZE16B7,COND16B6]
          goto JOIN16B9
        JOIN16B9:  preds = [JOIN16B8,COND16AD]
          tensor[3] op1_e3_l_316BB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN16A1,rayVec16A3);
          tensor[3] x16BA#31 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye168B,op1_e3_l_316BB);
          real _t16BE#8 = 0.e0;
          real _t16C0#2 = TensorIndex<tensor[3],[0]>(x16BA);
          bool _t16C2#1 = LT<real>(_t16BE,_t16C0);
          if _t16C2 then goto ASSIGN16C6 else goto JOIN1A14
        ASSIGN16C6:  preds = [COND16C4]
          real _t16C5#13 = 0.1e1;
          bool _t16C7#1 = LT<real>(_t16C0,_t16C5);
          if _t16C7 then goto ASSIGN16CB else goto JOIN1A11
        ASSIGN16CB:  preds = [COND16C9]
          real _t16CA#2 = TensorIndex<tensor[3],[1]>(x16BA);
          bool _t16CC#1 = LT<real>(_t16BE,_t16CA);
          if _t16CC then goto ASSIGN16D0 else goto JOIN1A0E
        ASSIGN16D0:  preds = [COND16CE]
          bool _t16CF#1 = LT<real>(_t16CA,_t16C5);
          if _t16CF then goto ASSIGN16D3 else goto JOIN1A0B
        ASSIGN16D3:  preds = [COND16D1]
          real _t16D2#2 = TensorIndex<tensor[3],[2]>(x16BA);
          bool _t16D4#1 = LT<real>(_t16BE,_t16D2);
          if _t16D4 then goto ASSIGN16D8 else goto JOIN1A08
        ASSIGN16D8:  preds = [COND16D6]
          bool _t16D7#1 = LT<real>(_t16D2,_t16C5);
          if _t16D7 then goto ASSIGN180C else goto JOIN1A05
        ASSIGN180C:  preds = [COND16D9]
          femData:MeshPos p180B#1 = findPos16DA (a1687,x16BA);
          bool _t180D#1 = ExtractFemItem<bool,Valid(MeshPos)>(p180B);
          if _t180D then goto ASSIGN1811 else goto ASSIGN1A2D
        ASSIGN1811:  preds = [COND180F]
          real _t1810#2 = 0.13e1;
          femData:MeshPos callFindPos1832#2 = findPos16DA (_t167D,x16BA);
          int intPos1833#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1832);
          tensor[3] refPos1834#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1832);
          tensor[3] Inner1813#2 = x16BA;
          femData:MeshPos callFindPos1835#2 = findPos16DA (_t167D,Inner1813);
          int intPos1836#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1835);
          tensor[3] refPos1837#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1835);
          int[10] femIndicies1839#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos1836);
          tensor[10] femDofs183A#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1839);
          tensor[10] dofs1838#1 = femDofs183A;
          tensor[10] basisResult183B#1 = EvaluateBasis<BasisArray(10)>(refPos1837);
          real compositionl1814#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,Inner1813,dofs1838,basisResult183B,refPos1837);
          real op1_e3_l_231815#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval167B,compositionl1814);
          tensor[3] Inner1816#2 = x16BA;
          femData:MeshPos callFindPos183C#2 = findPos16DA (_t167D,Inner1816);
          int intPos183D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos183C);
          tensor[3] refPos183E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos183C);
          int[10] femIndicies1840#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos183D);
          tensor[10] femDofs1841#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1840);
          tensor[10] dofs183F#1 = femDofs1841;
          tensor[3,10] basisResult1842#1 = EvaluateBasis<BasisArray(3,10)>(refPos183E);
          tensor[3] compositionl1817#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner1816,dofs183F,basisResult1842,refPos183E);
          int[4] femIndicies1844#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos1833);
          tensor[4,3] femDofs1845#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies1844);
          tensor[4,3] dofs1843#1 = femDofs1845;
          tensor[3,4] basisResult1846#1 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3,3] probe_l_251818#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,dofs1843,basisResult1846,refPos1834);
          tensor[3,3,3] op1_e3_l_271819#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818);
          tensor[3,3,3] op1_e3_l_28181A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818,op1_e3_l_271819);
          tensor[4,3] dofs1847#1 = femDofs1845;
          tensor[3,4] basisResult1848#1 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3] probe_l_29181B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs1847,basisResult1848,refPos1834);
          tensor[4,3] dofs1849#1 = femDofs1845;
          tensor[3,4] basisResult184A#1 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3] probe_l_30181C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs1849,basisResult184A,refPos1834);
          tensor[4,3] dofs184B#1 = femDofs1845;
          tensor[3,4] basisResult184C#1 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3] probe_l_31181D#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs184B,basisResult184C,refPos1834);
          tensor[3,3] op1_e3_l_32181E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_31181D);
          tensor[3] op1_e3_l_33181F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_30181C,op1_e3_l_32181E);
          real op1_e3_l_341820#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_29181B,op1_e3_l_33181F);
          tensor[3,3] op1_e3_l_351821#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_28181A);
          real op1_e3_l_361822#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341820);
          tensor[3,3] op1_e3_l_371823#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351821,op1_e3_l_361822);
          tensor[3] op1_e3_l_381824#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1817,op1_e3_l_371823);
          tensor[3] Inner1825#2 = x16BA;
          femData:MeshPos callFindPos184D#2 = findPos16DA (_t167D,Inner1825);
          int intPos184E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos184D);
          tensor[3] refPos184F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos184D);
          int[10] femIndicies1851#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos184E);
          tensor[10] femDofs1852#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1851);
          tensor[10] dofs1850#1 = femDofs1852;
          tensor[3,10] basisResult1853#1 = EvaluateBasis<BasisArray(3,10)>(refPos184F);
          tensor[3] compositionl1826#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner1825,dofs1850,basisResult1853,refPos184F);
          tensor[3] op1_e3_l_531827#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1826,op1_e3_l_371823);
          tensor[3] op1_e3_l_541828#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381824);
          tensor[3] op1_e3_l_551829#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_531827);
          real op1_e3_l_56182A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541828,op1_e3_l_551829);
          real op1_e3_l_57182B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_56182A);
          real op1_e3_l_58182C#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231815);
          real op1_e3_l_59182D#1 = λ(T0[],T1[])<(T0 * T1)> (thick1689,op1_e3_l_57182B);
          real op1_e3_l_60182E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_58182C,op1_e3_l_59182D);
          real op1_e3_l_61182F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_60182E);
          real op1_e3_l_621830#1 = λ(T0[],T1[])<(T0 * T1)> (_t1810,op1_e3_l_61182F);
          real op1_e3_l_631831#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16BE,_t16C5,op1_e3_l_621830);
          real a1812#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_631831);
          bool _t1896#1 = GT<real>(a1812,_t16BE);
          if _t1896 then goto ASSIGN18DC else goto JOIN19FF
        ASSIGN18DC:  preds = [COND1898]
          femData:MeshPos callFindPos18BA#2 = findPos16DA (_t167D,x16BA);
          int intPos18BB#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18BA);
          tensor[3] refPos18BC#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18BA);
          tensor[3] Inner189A#2 = x16BA;
          femData:MeshPos callFindPos18BD#2 = findPos16DA (_t167D,Inner189A);
          int intPos18BE#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18BD);
          tensor[3] refPos18BF#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18BD);
          int[10] femIndicies18C1#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos18BE);
          tensor[10] femDofs18C2#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies18C1);
          tensor[10] dofs18C0#1 = femDofs18C2;
          tensor[10] basisResult18C3#1 = EvaluateBasis<BasisArray(10)>(refPos18BF);
          real compositionl189B#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,Inner189A,dofs18C0,basisResult18C3,refPos18BF);
          real op1_e3_l_24189C#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval167B,compositionl189B);
          tensor[3] Inner189D#2 = x16BA;
          femData:MeshPos callFindPos18C4#2 = findPos16DA (_t167D,Inner189D);
          int intPos18C5#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18C4);
          tensor[3] refPos18C6#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18C4);
          int[10] femIndicies18C8#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos18C5);
          tensor[10] femDofs18C9#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies18C8);
          tensor[10] dofs18C7#1 = femDofs18C9;
          tensor[3,10] basisResult18CA#1 = EvaluateBasis<BasisArray(3,10)>(refPos18C6);
          tensor[3] compositionl189E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner189D,dofs18C7,basisResult18CA,refPos18C6);
          int[4] femIndicies18CC#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos18BB);
          tensor[4,3] femDofs18CD#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies18CC);
          tensor[4,3] dofs18CB#1 = femDofs18CD;
          tensor[3,4] basisResult18CE#1 = EvaluateBasis<BasisArray(3,4)>(refPos18BC);
          tensor[3,3] probe_l_26189F#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,dofs18CB,basisResult18CE,refPos18BC);
          tensor[3,3,3] op1_e3_l_2818A0#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_26189F);
          tensor[3,3,3] op1_e3_l_2918A1#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_26189F,op1_e3_l_2818A0);
          tensor[4,3] dofs18CF#1 = femDofs18CD;
          tensor[3,4] basisResult18D0#1 = EvaluateBasis<BasisArray(3,4)>(refPos18BC);
          tensor[3] probe_l_3018A2#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs18CF,basisResult18D0,refPos18BC);
          tensor[4,3] dofs18D1#1 = femDofs18CD;
          tensor[3,4] basisResult18D2#1 = EvaluateBasis<BasisArray(3,4)>(refPos18BC);
          tensor[3] probe_l_3118A3#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs18D1,basisResult18D2,refPos18BC);
          tensor[4,3] dofs18D3#1 = femDofs18CD;
          tensor[3,4] basisResult18D4#1 = EvaluateBasis<BasisArray(3,4)>(refPos18BC);
          tensor[3] probe_l_3218A4#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs18D3,basisResult18D4,refPos18BC);
          tensor[3,3] op1_e3_l_3318A5#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_3218A4);
          tensor[3] op1_e3_l_3418A6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_3118A3,op1_e3_l_3318A5);
          real op1_e3_l_3518A7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_3018A2,op1_e3_l_3418A6);
          tensor[3,3] op1_e3_l_3618A8#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2918A1);
          real op1_e3_l_3718A9#1 = λ(T0[])<(2 * T0)> (op1_e3_l_3518A7);
          tensor[3,3] op1_e3_l_3818AA#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_3618A8,op1_e3_l_3718A9);
          tensor[3] op1_e3_l_3918AB#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl189E,op1_e3_l_3818AA);
          tensor[3] Inner18AC#2 = x16BA;
          femData:MeshPos callFindPos18D5#2 = findPos16DA (_t167D,Inner18AC);
          int intPos18D6#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18D5);
          tensor[3] refPos18D7#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18D5);
          int[10] femIndicies18D9#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos18D6);
          tensor[10] femDofs18DA#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies18D9);
          tensor[10] dofs18D8#1 = femDofs18DA;
          tensor[3,10] basisResult18DB#1 = EvaluateBasis<BasisArray(3,10)>(refPos18D7);
          tensor[3] compositionl18AD#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner18AC,dofs18D8,basisResult18DB,refPos18D7);
          tensor[3] op1_e3_l_5418AE#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl18AD,op1_e3_l_3818AA);
          tensor[3] op1_e3_l_5518AF#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3918AB);
          tensor[3] op1_e3_l_5618B0#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_5418AE);
          real op1_e3_l_5718B1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_5518AF,op1_e3_l_5618B0);
          real op1_e3_l_5818B2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_5718B1);
          real op1_e3_l_5918B3#1 = λ(T0[])<Abs(T0)> (op1_e3_l_24189C);
          real op1_e3_l_6018B4#1 = λ(T0[],T1[])<(T0 * T1)> (thick1689,op1_e3_l_5818B2);
          real op1_e3_l_6118B5#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_5918B3,op1_e3_l_6018B4);
          real op1_e3_l_6218B6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_6118B5);
          real op1_e3_l_6318B7#1 = λ(T0[],T1[])<(T0 * T1)> (_t1810,op1_e3_l_6218B6);
          real op1_e3_l_6418B8#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16C5,_t16BE,op1_e3_l_6318B7);
          real op1_e3_l_6518B9#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_6418B8);
          real _t1899#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_6518B9);
          real op1_e3_l_31920#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec16A3);
          real op1_e3_l_41921#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31920);
          real op1_e3_l_51922#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1693,op1_e3_l_41921);
          real _t191F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1691,op1_e3_l_51922);
          real _t1927#2 = MathFn<pow>(_t1899,_t191F);
          real _t1929#2 = 0.11e1;
          real _t192B#1 = 0.7e0;
          femData:MeshPos callFindPos194A#2 = findPos16DA (_t167D,x16BA);
          int intPos194B#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos194A);
          tensor[3] refPos194C#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos194A);
          tensor[3] Inner192E#2 = x16BA;
          femData:MeshPos callFindPos194D#2 = findPos16DA (_t167D,Inner192E);
          int intPos194E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos194D);
          tensor[3] refPos194F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos194D);
          int[10] femIndicies1951#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos194E);
          tensor[10] femDofs1952#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1951);
          tensor[10] dofs1950#1 = femDofs1952;
          tensor[3,10] basisResult1953#1 = EvaluateBasis<BasisArray(3,10)>(refPos194F);
          tensor[3] compositionl192F#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner192E,dofs1950,basisResult1953,refPos194F);
          int[4] femIndicies1955#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos194B);
          tensor[4,3] femDofs1956#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies1955);
          tensor[4,3] dofs1954#1 = femDofs1956;
          tensor[3,4] basisResult1957#1 = EvaluateBasis<BasisArray(3,4)>(refPos194C);
          tensor[3,3] probe_l_181930#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,dofs1954,basisResult1957,refPos194C);
          tensor[3,3,3] op1_e3_l_201931#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181930);
          tensor[3,3,3] op1_e3_l_211932#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181930,op1_e3_l_201931);
          tensor[4,3] dofs1958#1 = femDofs1956;
          tensor[3,4] basisResult1959#1 = EvaluateBasis<BasisArray(3,4)>(refPos194C);
          tensor[3] probe_l_221933#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs1958,basisResult1959,refPos194C);
          tensor[4,3] dofs195A#1 = femDofs1956;
          tensor[3,4] basisResult195B#1 = EvaluateBasis<BasisArray(3,4)>(refPos194C);
          tensor[3] probe_l_231934#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs195A,basisResult195B,refPos194C);
          tensor[4,3] dofs195C#1 = femDofs1956;
          tensor[3,4] basisResult195D#1 = EvaluateBasis<BasisArray(3,4)>(refPos194C);
          tensor[3] probe_l_241935#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,dofs195C,basisResult195D,refPos194C);
          tensor[3,3] op1_e3_l_251936#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_241935);
          tensor[3] op1_e3_l_261937#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_231934,op1_e3_l_251936);
          real op1_e3_l_271938#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_221933,op1_e3_l_261937);
          tensor[3,3] op1_e3_l_281939#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_211932);
          real op1_e3_l_29193A#1 = λ(T0[])<(2 * T0)> (op1_e3_l_271938);
          tensor[3,3] op1_e3_l_30193B#3 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_281939,op1_e3_l_29193A);
          tensor[3] op1_e3_l_31193C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl192F,op1_e3_l_30193B);
          tensor[3] Inner193D#2 = x16BA;
          femData:MeshPos callFindPos195E#2 = findPos16DA (_t167D,Inner193D);
          int intPos195F#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos195E);
          tensor[3] refPos1960#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos195E);
          int[10] femIndicies1962#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos195F);
          tensor[10] femDofs1963#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1962);
          tensor[10] dofs1961#1 = femDofs1963;
          tensor[3,10] basisResult1964#1 = EvaluateBasis<BasisArray(3,10)>(refPos1960);
          tensor[3] compositionl193E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner193D,dofs1961,basisResult1964,refPos1960);
          tensor[3] op1_e3_l_46193F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl193E,op1_e3_l_30193B);
          tensor[3] op1_e3_l_471940#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_31193C);
          tensor[3] op1_e3_l_481941#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_46193F);
          real op1_e3_l_491942#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_471940,op1_e3_l_481941);
          real op1_e3_l_501943#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_491942);
          tensor[3] Inner1944#2 = x16BA;
          femData:MeshPos callFindPos1965#2 = findPos16DA (_t167D,Inner1944);
          int intPos1966#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1965);
          tensor[3] refPos1967#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1965);
          int[10] femIndicies1969#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos1966);
          tensor[10] femDofs196A#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1969);
          tensor[10] dofs1968#1 = femDofs196A;
          tensor[3,10] basisResult196B#1 = EvaluateBasis<BasisArray(3,10)>(refPos1967);
          tensor[3] compositionl1945#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,Inner1944,dofs1968,basisResult196B,refPos1967);
          tensor[3] op1_e3_l_651946#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1945,op1_e3_l_30193B);
          tensor[3] op1_e3_l_661947#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_651946);
          real op1_e3_l_671948#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_501943);
          real op1_e3_l_681949#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light169F,op1_e3_l_661947);
          real _t192D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671948,op1_e3_l_681949);
          real shade19AB#1 = Max<real>(_t16BE,_t192D);
          femData:MeshPos callFindPos19B0#2 = findPos16DA (_t167D,x16BA);
          int intPos19B1#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos19B0);
          tensor[3] refPos19B2#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos19B0);
          tensor[3] Inner19AE#2 = x16BA;
          femData:MeshPos callFindPos19B3#2 = findPos16DA (_t167D,Inner19AE);
          int intPos19B4#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos19B3);
          tensor[3] refPos19B5#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos19B3);
          int[10] femIndicies19B7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos19B4);
          tensor[10] femDofs19B8#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies19B7);
          tensor[10] dofs19B6#1 = femDofs19B8;
          tensor[10] basisResult19B9#1 = EvaluateBasis<BasisArray(10)>(refPos19B5);
          real compositionl19AF#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,Inner19AE,dofs19B6,basisResult19B9,refPos19B5);
          real _t19AD#2 = λ(T0[])<T0> (compositionl19AF);
          real op1_e3_l_1519C8#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,rayN16A1);
          real op1_e3_l_1619C9#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,camFar168F);
          real op1_e3_l_1719CA#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C8,op1_e3_l_1619C9);
          real op1_e3_l_1819CB#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1929,_t192B);
          real op1_e3_l_1919CC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719CA,op1_e3_l_1819CB);
          real op1_e3_l_2019CD#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1697,shade19AB);
          real Mtransform19D3#2 = Transform<IMAGE1D<double[3]>>(I1A8B);
          real MxPos19D4#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19D3,_t19AD);
          real Ttranslate19D5#1 = Translate<IMAGE1D<double[3]>>(I1A8B);
          real imgPos19D6#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19D4,Ttranslate19D5);
          real nd19D7#2 = Floor<1>(imgPos19D6);
          real f19D8#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19D6,nd19D7);
          int n19D9#1 = RealToInt<1>(nd19D7);
          int lit19DA#1 = 0;
          int idx19DB#1 = IAdd(n19D9,lit19DA);
          tensor[3,2] ldvox19DC#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A8B,idx19DB);
          tensor[2] kernX_19DD#1 = BuildPos<1>(f19D8);
          tensor[2] kevalX_d0_19DE#1 = EvalKernel<2,tent,0>(kernX_19DD);
          tensor[3] probe_l_2119CE#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1683,_t1685,_t19AD,Mtransform19D3,ldvox19DC,kevalX_d0_19DE);
          real op1_e3_l_2219CF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,_t1927);
          real op1_e3_l_2319D0#1 = λ(T0[],T1[])<(T0 + T1)> (_t1929,op1_e3_l_1919CC);
          real op1_e3_l_2419D1#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1695,op1_e3_l_2019CD);
          tensor[3] op1_e3_l_2519D2#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp16A5,probe_l_2119CE,op1_e3_l_2219CF,op1_e3_l_2319D0,op1_e3_l_2419D1);
          tensor[3] rgb19C7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb16A7,op1_e3_l_2519D2);
          real op1_e3_l_419F8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,_t1927);
          real op1_e3_l_519F9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_419F8);
          real transp19F7#1 = λ(T0[],T1[])<(T0 * T1)> (transp16A5,op1_e3_l_519F9);
          goto JOIN19FF
        JOIN19FF:  preds = [ASSIGN19FC,COND1898]
          tensor[3] rgb19FD#1 = phi(rgb19C7,rgb16A7)
          real transp19FE#1 = phi(transp19F7,transp16A5)
          goto JOIN1A02
        JOIN1A02:  preds = [JOIN19FF,MASSIGN1A31]
          tensor[3] rgb1A00#1 = phi(rgb19FD,rgb16A7)
          real transp1A01#1 = phi(transp19FE,transp16A5)
          goto JOIN1A05
        JOIN1A05:  preds = [JOIN1A02,COND16D9]
          tensor[3] rgb1A03#1 = phi(rgb1A00,rgb16A7)
          real transp1A04#1 = phi(transp1A01,transp16A5)
          goto JOIN1A08
        JOIN1A08:  preds = [JOIN1A05,COND16D6]
          tensor[3] rgb1A06#1 = phi(rgb1A03,rgb16A7)
          real transp1A07#1 = phi(transp1A04,transp16A5)
          goto JOIN1A0B
        JOIN1A0B:  preds = [JOIN1A08,COND16D1]
          tensor[3] rgb1A09#1 = phi(rgb1A06,rgb16A7)
          real transp1A0A#1 = phi(transp1A07,transp16A5)
          goto JOIN1A0E
        JOIN1A0E:  preds = [JOIN1A0B,COND16CE]
          tensor[3] rgb1A0C#1 = phi(rgb1A09,rgb16A7)
          real transp1A0D#1 = phi(transp1A0A,transp16A5)
          goto JOIN1A11
        JOIN1A11:  preds = [JOIN1A0E,COND16C9]
          tensor[3] rgb1A0F#1 = phi(rgb1A0C,rgb16A7)
          real transp1A10#1 = phi(transp1A0D,transp16A5)
          goto JOIN1A14
        JOIN1A14:  preds = [JOIN1A11,COND16C4]
          tensor[3] rgb1A12#3 = phi(rgb1A0F,rgb16A7)
          real transp1A13#2 = phi(transp1A10,transp16A5)
          real _t1A15#1 = 0.1e-1;
          bool _t1A17#1 = LT<real>(transp1A13,_t1A15);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1E
        SAVE1A1A:  preds = [COND1A19]
          self.transp = _t16BE;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A1E
        JOIN1A1E:  preds = [*STABILIZE1A1C,COND1A19]
          real transp1A1D#2 = phi(transp1A13)
          bool _t1A1F#1 = GT<real>(rayN16A1,camFar168F);
          if _t1A1F then goto SAVE1A22 else goto JOIN1A25
        SAVE1A22:  preds = [COND1A21]
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A25
        JOIN1A25:  preds = [*STABILIZE1A24,COND1A21]
          real rayN1A26#1 = λ(T0[],T1[])<(T0 + T1)> (rayN16A1,rayStep1693);
          self.rayN = rayN1A26;
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          active
        ASSIGN1A2D:  preds = [COND180F]
          string _t1A2C#1 = "\n";
          Print<[tensor[3],string]>(x16BA,_t1A2C);
          string _t1A2F#1 = "wait what\?\n";
          Print<[string]>(_t1A2F);
          goto JOIN1A02
        ASSIGN1A32:  preds = [COND16B0]
          bool _t16B4#1 = NEQ<int>(vi16AB,sv169D);
          goto JOIN16B5
    end update
    method stabilize
        ENTRY1A33:  preds = []
          bool debug1A34#1 = globals.debug14ED;
          int su1A36#1 = globals.su14EE;
          int sv1A38#1 = globals.sv14EF;
          real transp1A3A#4 = self.transp;
          tensor[3] rgb1A3C#3 = self.rgb;
          tensor[4] rgba1A3E#1 = self.rgba;
          int ui1A40#1 = self.ui;
          int vi1A42#1 = self.vi;
          real _t1A44#4 = 0.1e1;
          real a1A46#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A48#1 = 0.e0;
          bool _t1A4A#1 = GT<real>(a1A46,_t1A48);
          if _t1A4A then goto ASSIGN1A4E else goto JOIN1A62
        ASSIGN1A4E:  preds = [COND1A4C]
          real _t1A4D#1 = TensorIndex<tensor[3],[0]>(rgb1A3C);
          real op1_e3_l_31A50#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A4F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4D,op1_e3_l_31A50);
          real _t1A53#1 = TensorIndex<tensor[3],[1]>(rgb1A3C);
          real op1_e3_l_31A56#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A55#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A53,op1_e3_l_31A56);
          real _t1A59#1 = TensorIndex<tensor[3],[2]>(rgb1A3C);
          real op1_e3_l_31A5C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A5B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A59,op1_e3_l_31A5C);
          tensor[4] rgba1A5F#1 = <tensor[4]>[_t1A4F,_t1A55,_t1A5B,a1A46];
          goto JOIN1A62
        JOIN1A62:  preds = [ASSIGN1A60,COND1A4C]
          tensor[4] rgba1A61#2 = phi(rgba1A5F,rgba1A3E)
          bool _t1A63#1 = EQ<int>(ui1A40,su1A36);
          if _t1A63 then goto ASSIGN1A67 else goto JOIN1A6D
        ASSIGN1A67:  preds = [COND1A65]
          bool _t1A66#1 = EQ<int>(vi1A42,sv1A38);
          if _t1A66 then goto COND1A69 else goto JOIN1A6C
        COND1A69:  preds = [COND1A68]
          if debug1A34 then goto MASSIGN1A6A else goto JOIN1A6B
        MASSIGN1A6A:  preds = [COND1A69]
          Print<[real,tensor[4]]>(a1A46,rgba1A61);
          goto JOIN1A6B
        JOIN1A6B:  preds = [MASSIGN1A6A,COND1A69]
          goto JOIN1A6C
        JOIN1A6C:  preds = [JOIN1A6B,COND1A68]
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A6C,COND1A65]
          self.rgba = rgba1A61;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A70:  preds = []
      int iresU1A71#1 = globals.iresU14E4;
      int iresV1A73#1 = globals.iresV14E5;
      int _t1A75#2 = 0;
      int _t1A77#2 = 1;
      int _t1A79#1 = ISub(iresV1A73,_t1A77);
      int[] _t1A7B#1 = Range(_t1A75,_t1A79);
    FOREACH1A7E:  preds = [ASSIGN1A7C,NEXT1A87]
      foreach (vi1A7D in _t1A7B) on exit goto RETURN1A88
      int _t1A7F#1 = ISub(iresU1A71,_t1A77);
      int[] _t1A81#1 = Range(_t1A75,_t1A7F);
    FOREACH1A84:  preds = [ASSIGN1A82,NEXT1A86]
      foreach (ui1A83 in _t1A81) on exit goto NEXT1A87
      new raycast(ui1A83,vi1A7D);
      goto FOREACH1A84
    NEXT1A87:  preds = [FOREACH1A84]
      goto FOREACH1A7E
    RETURN1A88:  preds = [FOREACH1A7E]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14DB (a) = <no-default>
  input 0b043B_intermedateGlobal14DC (b) = <no-default>
  input 0c043D_intermedateGlobal14DD (c) = <no-default>
  input isoval14DE (isoval) = <default>
  input thick14DF (thick) = <default>
  input camEye14E0 (camEye) = <default>
  input camAt14E1 (camAt) = <default>
  input camUp14E2 (camUp) = <default>
  input camFOV14E3 (camFOV) = <default>
  input iresU14E4 (iresU) = <default>
  input iresV14E5 (iresV) = <default>
  input camNear14E6 (camNear) = <default>
  input camFar14E7 (camFar) = <default>
  input refStep14E8 (refStep) = <default>
  input rayStep14E9 (rayStep) = <default>
  input lightVsp14EA (lightVsp) = <default>
  input phongKa14EB (phongKa) = <default>
  input phongKd14EC (phongKd) = <default>
  input debug14ED (debug) = <default>
  input su14EE (su) = <default>
  input sv14EF (sv) = <default>
  global real camDist14F0
  global tensor[3] camN14F1
  global tensor[3] camU14F2
  global tensor[3] camV14F3
  global real camVmax14F4
  global real camUmax14F5
  global tensor[3] light14F6
  global femData:Mesh _t14F7
  global femData:Space _tX14F8
  global femData:FemFunc c14F9
  global image(IMAGE1D<double[3]>) img14FA
  global kernel _tXX14FB
  global image(IMAGE1D<double[3]>) I1A8A
## functions
  function femData:MeshPos findPos16DA (femData:Mesh mesh16DB#11, tensor[3] pos16DC#4) {
    ENTRY16DD:  preds = []
      real _t16DE#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16E0#10 = <tensor[3]>[_t16DE,_t16DE,_t16DE];
      int newtonInt16E2#1 = 0;
      int[] yayCells16E4#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16DB,pos16DC);
    FOREACH16E7:  preds = [ASSIGN16E5,NEXT1802]
      foreach (cellItter16E6 in yayCells16E4) on exit goto ASSIGN1804
        tensor[3] xn1801#1 = phi(xn16E0,xn16EF)
      int _t16E8#1 = 2;
      int[] _t16EA#1 = Range(newtonInt16E2,_t16E8);
    FOREACH16ED:  preds = [ASSIGN16EB,NEXT1800]
      foreach (newtonItter16EC in _t16EA) on exit goto NEXT1802
        tensor[3] xn16EF#7 = phi(xn1801,xn16EE)
      int[4] femIndicies1700#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs1701#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies1700);
      tensor[3,4] basisResult1702#4 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_1016F0#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3,3] op1_e3_l_1216F1#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0);
      tensor[3,3,3] op1_e3_l_1316F2#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0,op1_e3_l_1216F1);
      tensor[3] probe_l_1416F3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1516F4#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1616F5#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3] op1_e3_l_1716F6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616F5);
      tensor[3] op1_e3_l_1816F7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516F4,op1_e3_l_1716F6);
      real op1_e3_l_1916F8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416F3,op1_e3_l_1816F7);
      tensor[3,3] op1_e3_l_2016F9#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316F2);
      real op1_e3_l_2116FA#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916F8);
      tensor[4] basisResult170A#2 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_2216FB#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,femDofs1701,basisResult170A,xn16EF);
      tensor[3,3] op1_e3_l_2316FC#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016F9,op1_e3_l_2116FA);
      tensor[3] op1_e3_l_2416FD#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_2216FB);
      tensor[3] op1_e3_l_2516FE#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_2416FD);
      tensor[3] xn16EE#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_2516FE);
      real _t1727#2 = 0.1e-7;
      real _t1729#1 = λ(T0[],T1[])<(T0 * T1)> (_t1727,_t1727);
      tensor[3] probe_l_301737#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter16E6,mesh16DB,xn16EF,femDofs1701,basisResult170A,xn16EF);
      tensor[3] op1_e3_l_321739#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_301737);
      tensor[3] op1_e3_l_48173A#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_321739);
      real _t172B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_48173A,op1_e3_l_48173A);
      bool _t1763#1 = GTE<real>(_t1729,_t172B);
      if _t1763 then goto ASSIGN1767 else goto JOIN17FF
    ASSIGN1767:  preds = [COND1765]
      real _t1766#4 = 0.1e1;
      real _t1768#4 = 0.1e-4;
      real _t176A#1 = λ(T0[],T1[])<(T0 + T1)> (_t1766,_t1768);
      tensor[3] _t176C#1 = <tensor[3]>[_t1766,_t1766,_t1766];
      real _t176E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t176C,xn16EE);
      bool _t17A8#1 = GT<real>(_t176A,_t176E);
      tensor[3] _t17AA#1 = <tensor[3]>[_t1768,_t1768,_t1768];
      tensor[3] _t17AC#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17AA,xn16EE);
      real _t17E6#1 = TensorIndex<tensor[3],[0]>(_t17AC);
      real _t17E8#3 = -0.e0;
      bool _t17EA#1 = GT<real>(_t17E6,_t17E8);
      real _t17EC#1 = TensorIndex<tensor[3],[1]>(_t17AC);
      bool _t17EE#1 = GT<real>(_t17EC,_t17E8);
      real _t17F0#1 = TensorIndex<tensor[3],[2]>(_t17AC);
      bool _t17F2#1 = GT<real>(_t17F0,_t17E8);
      bool _t17F4#1 = BAnd(_t17EE,_t17F2);
      bool _t17F6#1 = BAnd(_t17EA,_t17F4);
      bool _t17F8#1 = BAnd(_t17A8,_t17F6);
      if _t17F8 then goto ASSIGN17FC else goto JOIN17FE
    ASSIGN17FC:  preds = [COND17FA]
      femData:MeshPos _t17FB#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16DB,cellItter16E6,xn16EE,pos16DC);
      return _t17FB
      goto JOIN17FE
    JOIN17FE:  preds = [*RETURN(_t17FB)17FD,COND17FA]
      goto JOIN17FF
    JOIN17FF:  preds = [JOIN17FE,COND1765]
      goto FOREACH16ED
    NEXT1802:  preds = [FOREACH16ED]
      goto FOREACH16E7
    ASSIGN1804:  preds = [FOREACH16E7]
      string _t1803#1 = "Bad end 2";
      string _t1805#1 = "\n";
      Print<[string,string]>(_t1803,_t1805);
      femData:MeshPos _t1808#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16DB);
      return _t1808
}
## input initialization
  ENTRY14FC:  preds = []
    real isoval14FD#1 = 0.2e0;
    globals.isoval14DE = isoval14FD;
    real thick1500#1 = 0.7e-1;
    globals.thick14DF = thick1500;
    real _t1503#2 = 0.3e1;
    real _t1505#1 = -0.3e1;
    tensor[3] camEye1507#1 = <tensor[3]>[_t1503,_t1505,_t1503];
    globals.camEye14E0 = camEye1507;
    real _t150A#3 = 0.5e0;
    tensor[3] camAt150C#1 = <tensor[3]>[_t150A,_t150A,_t150A];
    globals.camAt14E1 = camAt150C;
    real _t150F#2 = 0.e0;
    real _t1511#2 = 0.1e1;
    tensor[3] camUp1513#2 = <tensor[3]>[_t150F,_t150F,_t1511];
    globals.camUp14E2 = camUp1513;
    real camFOV1516#1 = 0.137e2;
    globals.camFOV14E3 = camFOV1516;
    int iresU1519#2 = 500;
    globals.iresU14E4 = iresU1519;
    globals.iresV14E5 = iresU1519;
    real camNear151D#1 = -0.2e1;
    globals.camNear14E6 = camNear151D;
    real camFar1520#1 = 0.5e1;
    globals.camFar14E7 = camFar1520;
    globals.refStep14E8 = _t1511;
    real rayStep1524#1 = 0.1e-1;
    globals.rayStep14E9 = rayStep1524;
    globals.lightVsp14EA = camUp1513;
    real phongKa1528#1 = 0.1e0;
    globals.phongKa14EB = phongKa1528;
    real phongKd152B#1 = 0.9e0;
    globals.phongKd14EC = phongKd152B;
    bool debug152E#1 = false;
    globals.debug14ED = debug152E;
    int su1531#2 = 250;
    globals.su14EE = su1531;
    globals.sv14EF = su1531;
    return
## global-variable initialization
  ENTRY1536:  preds = []
    femData:Mesh a1537#3 = globals.a14DB;
    femData:Space 0b043B_intermedateGlobal1539#1 = globals.0b043B_intermedateGlobal14DC;
    femData:FemFunc 0c043D_intermedateGlobal153B#1 = globals.0c043D_intermedateGlobal14DD;
    real isoval153D#0 = globals.isoval14DE;
    tensor[3] camEye153F#1 = globals.camEye14E0;
    tensor[3] camAt1541#1 = globals.camAt14E1;
    tensor[3] camUp1543#1 = globals.camUp14E2;
    real camFOV1545#1 = globals.camFOV14E3;
    int iresU1547#1 = globals.iresU14E4;
    int iresV1549#1 = globals.iresV14E5;
    tensor[3] lightVsp154B#2 = globals.lightVsp14EA;
    int _t154D#1 = 0;
    int _t154F#1 = 1;
    int _t1551#1 = ExtractFemItem<int,NumCell(Mesh)>(a1537);
    int _t1553#1 = ISub(_t1551,_t154F);
    int[] _t1555#1 = Range(_t154D,_t1553);
    femData:MeshCell[] _t1557#1 = <femData:MeshCell[]>{};
  FOREACH155A:  preds = [ASSIGN1558,NEXT1560]
    foreach (_t1559 in _t1555) on exit goto ASSIGN1562
      femData:MeshCell[] _t155E#1 = phi(_t1557,_t155D)
    femData:MeshCell _t155B#1 = LoadFem<femData:MeshCell>(a1537,_t1559);
    femData:MeshCell[] _t155D#1 = Append<femData:MeshCell>(_t155E,_t155B);
    goto FOREACH155A
  ASSIGN1562:  preds = [FOREACH155A]
    femData:Space b1561#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1539,a1537);
    femData:FemFunc c1563#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal153B,b1561);
    femData:Space _t1565#2 = ExtractFem<femData:Space,femData:FemFunc>(c1563);
    femData:Mesh _t1567#1 = ExtractFem<femData:Mesh,femData:Space>(_t1565);
    image(IMAGE1D<double[3]>) I1569#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t156B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img156D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1569);
    tensor[3] op1_e3_l_21570#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_41571#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21570,op1_e3_l_21570);
    real camDist156F#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41571);
    globals.camDist14F0 = camDist156F;
    real op1_e3_l_9157A#6 = λ(T0[])<(1) / ( T0)> (camDist156F);
    tensor[3] camN1576#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21570,op1_e3_l_9157A);
    globals.camN14F1 = camN1576;
    tensor[3,3] op1_e3_l_151585#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1543);
    tensor[3] op1_e3_l_171587#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21570,op1_e3_l_151585);
    real op1_e3_l_341588#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171587,op1_e3_l_171587);
    real op1_e3_l_351589#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_9157A,op1_e3_l_9157A,op1_e3_l_341588);
    real op1_e3_l_36158A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351589);
    tensor[3] op1_e3_l_37158B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_171587);
    real op1_e3_l_38158C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_36158A);
    tensor[3] camU1581#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_37158B,op1_e3_l_38158C);
    globals.camU14F2 = camU1581;
    tensor[3,3] op1_e3_l_4515A4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21570);
    tensor[3] op1_e3_l_4715A5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171587,op1_e3_l_4515A4);
    tensor[3] op1_e3_l_5015A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_4715A5);
    tensor[3] camV159A#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38158C,op1_e3_l_9157A,op1_e3_l_5015A7);
    globals.camV14F3 = camV159A;
    real _t15B7#1 = 0.314159265358979323846264338327950288e1;
    real _t15B9#1 = 0.36e3;
    real op1_e3_l_515BC#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1545,_t15B7);
    real op1_e3_l_615BD#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B9,op1_e3_l_515BC);
    real op1_e3_l_1015C0#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615BD);
    real camVmax15BB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015C0,camDist156F);
    globals.camVmax14F4 = camVmax15BB;
    real _t15CA#1 = IntToReal(iresU1547);
    real _t15CC#1 = IntToReal(iresV1549);
    real op1_e3_l_1415D5#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15CA,op1_e3_l_1015C0,camDist156F);
    real camUmax15CE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15CC,op1_e3_l_1415D5);
    globals.camUmax14F5 = camUmax15CE;
    tensor[3,3] _t15DF#1 = <tensor[3,3]>[camU1581,camV159A,camN1576];
    real op1_e3_l_315E2#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp154B);
    real op1_e3_l_415E3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315E2);
    real op1_e3_l_515E4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415E3);
    tensor[3] op1_e3_l_615E5#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15DF,lightVsp154B);
    tensor[3] light15E1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515E4,op1_e3_l_615E5);
    globals.light14F6 = light15E1;
    globals._t14F7 = _t1567;
    globals._tX14F8 = _t1565;
    globals.c14F9 = c1563;
    globals.img14FA = img156D;
    globals._tXX14FB = _t156B;
    globals.I1A8A = I1569;
    return
## strand
  strand raycast (int ui15F2#2, int vi15F3#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15FE:  preds = []
        int iresU15FF#1 = globals.iresU14E4;
        int iresV1601#1 = globals.iresV14E5;
        real camNear1603#1 = globals.camNear14E6;
        real camDist1605#1 = globals.camDist14F0;
        tensor[3] camN1607#1 = globals.camN14F1;
        tensor[3] camU1609#1 = globals.camU14F2;
        tensor[3] camV160B#1 = globals.camV14F3;
        real camVmax160D#4 = globals.camVmax14F4;
        real camUmax160F#2 = globals.camUmax14F5;
        real _t1611#5 = -0.5e0;
        real _t1613#1 = IntToReal(ui15F2);
        real _t1615#1 = IntToReal(iresU15FF);
        real _t1617#3 = 0.5e0;
        real op1_e3_l_6161A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1615,_t1617);
        real op1_e3_l_7161B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1613);
        real op1_e3_l_8161C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6161A);
        real op1_e3_l_9161D#2 = λ(T0[])<Neg(T0)> (camUmax160F);
        real op1_e3_l_10161E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7161B,op1_e3_l_8161C);
        real op1_e3_l_11161F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax160F,op1_e3_l_9161D);
        real op1_e3_l_131620#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10161E,op1_e3_l_11161F);
        real rayU1619#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9161D,op1_e3_l_131620);
        real _t1629#1 = IntToReal(vi15F3);
        real _t162B#2 = IntToReal(iresV1601);
        real op1_e3_l_6162E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t162B,_t1617);
        real op1_e3_l_7162F#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1629);
        real op1_e3_l_81630#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6162E);
        real op1_e3_l_91631#1 = λ(T0[])<Neg(T0)> (camVmax160D);
        real op1_e3_l_101632#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_81630);
        real op1_e3_l_111633#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax160D,op1_e3_l_91631);
        real op1_e3_l_121634#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101632,op1_e3_l_111633);
        real rayV162D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_121634);
        real op1_e3_l_251646#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1617,_t162B);
        real op1_e3_l_271648#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_251646);
        real op1_e3_l_29164A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_271648);
        real op1_e3_l_31164C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_29164A,op1_e3_l_111633);
        real op1_e3_l_32164D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_31164C);
        tensor[3] op1_e3_l_33164E#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1609,rayU1619);
        tensor[3] op1_e3_l_34164F#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV160B,op1_e3_l_32164D);
        tensor[3] op1_e3_l_351650#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33164E,op1_e3_l_34164F);
        tensor[3] op1_e3_l_361651#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1605,op1_e3_l_351650);
        tensor[3] rayVec163D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1607,op1_e3_l_361651);
        real transp1667#1 = 0.1e1;
        real _t1669#8 = 0.e0;
        tensor[3] rgb166B#1 = <tensor[3]>[_t1669,_t1669,_t1669];
        tensor[4] rgba166D#1 = <tensor[4]>[_t1669,_t1669,_t1669,_t1669];
        self.rayU = rayU1619;
        self.rayV = rayV162D;
        self.rayN = camNear1603;
        self.rayVec = rayVec163D;
        self.transp = transp1667;
        self.rgb = rgb166B;
        self.rgba = rgba166D;
        self.gray = _t1669;
        self.ui = ui15F2;
        self.vi = vi15F3;
        return
    end state init
    method update
        ENTRY167A:  preds = []
          image(IMAGE1D<double[3]>) I1A8B#3 = globals.I1A8A;
          real isoval167B#1 = globals.isoval14DE;
          femData:Mesh _t167D#9 = globals._t14F7;
          femData:Space _t167F#3 = globals._tX14F8;
          femData:FemFunc c1681#3 = globals.c14F9;
          image(IMAGE1D<double[3]>) img1683#1 = globals.img14FA;
          kernel _t1685#1 = globals._tXX14FB;
          femData:Mesh a1687#1 = globals.a14DB;
          real thick1689#1 = globals.thick14DF;
          tensor[3] camEye168B#1 = globals.camEye14E0;
          real camNear168D#2 = globals.camNear14E6;
          real camFar168F#2 = globals.camFar14E7;
          real refStep1691#1 = globals.refStep14E8;
          real rayStep1693#2 = globals.rayStep14E9;
          real phongKa1695#1 = globals.phongKa14EB;
          real phongKd1697#1 = globals.phongKd14EC;
          bool debug1699#1 = globals.debug14ED;
          int su169B#1 = globals.su14EE;
          int sv169D#1 = globals.sv14EF;
          tensor[3] light169F#1 = globals.light14F6;
          real rayN16A1#4 = self.rayN;
          tensor[3] rayVec16A3#2 = self.rayVec;
          real transp16A5#10 = self.transp;
          tensor[3] rgb16A7#9 = self.rgb;
          int ui16A9#1 = self.ui;
          int vi16AB#1 = self.vi;
          if debug1699 then goto ASSIGN16AF else goto JOIN16B9
        ASSIGN16AF:  preds = [COND16AD]
          bool _t16AE#1 = NEQ<int>(ui16A9,su169B);
          if _t16AE then goto ASSIGN16B2 else goto ASSIGN1A32
        ASSIGN16B2:  preds = [COND16B0]
          bool _t16B1#1 = true;
          goto JOIN16B5
        JOIN16B5:  preds = [ASSIGN16B2,ASSIGN1A32]
          bool _t16B3#1 = phi(_t16B1,_t16B4)
          if _t16B3 then goto STABILIZE16B7 else goto JOIN16B8
        STABILIZE16B7:  preds = [COND16B6]
          stabilize
          goto JOIN16B8
        JOIN16B8:  preds = [*STABILIZE16B7,COND16B6]
          goto JOIN16B9
        JOIN16B9:  preds = [JOIN16B8,COND16AD]
          tensor[3] op1_e3_l_316BB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN16A1,rayVec16A3);
          tensor[3] x16BA#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye168B,op1_e3_l_316BB);
          real _t16BE#8 = 0.e0;
          real _t16C0#2 = TensorIndex<tensor[3],[0]>(x16BA);
          bool _t16C2#1 = LT<real>(_t16BE,_t16C0);
          if _t16C2 then goto ASSIGN16C6 else goto JOIN1A14
        ASSIGN16C6:  preds = [COND16C4]
          real _t16C5#11 = 0.1e1;
          bool _t16C7#1 = LT<real>(_t16C0,_t16C5);
          if _t16C7 then goto ASSIGN16CB else goto JOIN1A11
        ASSIGN16CB:  preds = [COND16C9]
          real _t16CA#2 = TensorIndex<tensor[3],[1]>(x16BA);
          bool _t16CC#1 = LT<real>(_t16BE,_t16CA);
          if _t16CC then goto ASSIGN16D0 else goto JOIN1A0E
        ASSIGN16D0:  preds = [COND16CE]
          bool _t16CF#1 = LT<real>(_t16CA,_t16C5);
          if _t16CF then goto ASSIGN16D3 else goto JOIN1A0B
        ASSIGN16D3:  preds = [COND16D1]
          real _t16D2#2 = TensorIndex<tensor[3],[2]>(x16BA);
          bool _t16D4#1 = LT<real>(_t16BE,_t16D2);
          if _t16D4 then goto ASSIGN16D8 else goto JOIN1A08
        ASSIGN16D8:  preds = [COND16D6]
          bool _t16D7#1 = LT<real>(_t16D2,_t16C5);
          if _t16D7 then goto ASSIGN180C else goto JOIN1A05
        ASSIGN180C:  preds = [COND16D9]
          femData:MeshPos p180B#1 = findPos16DA (a1687,x16BA);
          bool _t180D#1 = ExtractFemItem<bool,Valid(MeshPos)>(p180B);
          if _t180D then goto ASSIGN1811 else goto ASSIGN1A2D
        ASSIGN1811:  preds = [COND180F]
          real _t1810#1 = 0.13e1;
          femData:MeshPos callFindPos1832#2 = findPos16DA (_t167D,x16BA);
          int intPos1833#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1832);
          tensor[3] refPos1834#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1832);
          int[10] femIndicies1839#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos1833);
          tensor[10] femDofs183A#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1839);
          tensor[10] basisResult183B#1 = EvaluateBasis<BasisArray(10)>(refPos1834);
          real compositionl1814#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult183B,refPos1834);
          real op1_e3_l_231815#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval167B,compositionl1814);
          tensor[3,10] basisResult1842#1 = EvaluateBasis<BasisArray(3,10)>(refPos1834);
          tensor[3] compositionl1817#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult1842,refPos1834);
          int[4] femIndicies1844#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos1833);
          tensor[4,3] femDofs1845#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies1844);
          tensor[3,4] basisResult1846#4 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3,3] probe_l_251818#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3,3] op1_e3_l_271819#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818);
          tensor[3,3,3] op1_e3_l_28181A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818,op1_e3_l_271819);
          tensor[3] probe_l_29181B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_30181C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_31181D#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3] op1_e3_l_32181E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_31181D);
          tensor[3] op1_e3_l_33181F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_30181C,op1_e3_l_32181E);
          real op1_e3_l_341820#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_29181B,op1_e3_l_33181F);
          tensor[3,3] op1_e3_l_351821#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_28181A);
          real op1_e3_l_361822#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341820);
          tensor[3,3] op1_e3_l_371823#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351821,op1_e3_l_361822);
          tensor[3] op1_e3_l_381824#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1817,op1_e3_l_371823);
          tensor[3] op1_e3_l_541828#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381824);
          real op1_e3_l_56182A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541828,op1_e3_l_541828);
          real op1_e3_l_57182B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_56182A);
          real op1_e3_l_58182C#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231815);
          real op1_e3_l_59182D#1 = λ(T0[],T1[])<(T0 * T1)> (thick1689,op1_e3_l_57182B);
          real op1_e3_l_60182E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_58182C,op1_e3_l_59182D);
          real op1_e3_l_61182F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_60182E);
          real op1_e3_l_621830#2 = λ(T0[],T1[])<(T0 * T1)> (_t1810,op1_e3_l_61182F);
          real op1_e3_l_631831#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16BE,_t16C5,op1_e3_l_621830);
          real a1812#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_631831);
          bool _t1896#1 = GT<real>(a1812,_t16BE);
          if _t1896 then goto ASSIGN1AB2 else goto JOIN19FF
        ASSIGN1AB2:  preds = [COND1898]
          real op1_e3_l_6418B8#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16C5,_t16BE,op1_e3_l_621830);
          real op1_e3_l_6518B9#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_6418B8);
          real _t1899#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_6518B9);
          real op1_e3_l_31920#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec16A3);
          real op1_e3_l_41921#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31920);
          real op1_e3_l_51922#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1693,op1_e3_l_41921);
          real _t191F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1691,op1_e3_l_51922);
          real _t1927#1 = MathFn<pow>(_t1899,_t191F);
          real _t1929#2 = 0.11e1;
          real _t192B#1 = 0.7e0;
          real op1_e3_l_671948#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_57182B);
          real op1_e3_l_681949#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light169F,op1_e3_l_541828);
          real _t192D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671948,op1_e3_l_681949);
          real shade19AB#1 = Max<real>(_t16BE,_t192D);
          real _t19AD#2 = λ(T0[])<T0> (compositionl1814);
          real op1_e3_l_1519C8#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,rayN16A1);
          real op1_e3_l_1619C9#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,camFar168F);
          real op1_e3_l_1719CA#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C8,op1_e3_l_1619C9);
          real op1_e3_l_1819CB#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1929,_t192B);
          real op1_e3_l_1919CC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719CA,op1_e3_l_1819CB);
          real op1_e3_l_2019CD#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1697,shade19AB);
          real Mtransform19D3#2 = Transform<IMAGE1D<double[3]>>(I1A8B);
          real MxPos19D4#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19D3,_t19AD);
          real Ttranslate19D5#1 = Translate<IMAGE1D<double[3]>>(I1A8B);
          real imgPos19D6#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19D4,Ttranslate19D5);
          real nd19D7#2 = Floor<1>(imgPos19D6);
          real f19D8#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19D6,nd19D7);
          int n19D9#1 = RealToInt<1>(nd19D7);
          int lit19DA#1 = 0;
          int idx19DB#1 = IAdd(n19D9,lit19DA);
          tensor[3,2] ldvox19DC#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A8B,idx19DB);
          tensor[2] kernX_19DD#1 = BuildPos<1>(f19D8);
          tensor[2] kevalX_d0_19DE#1 = EvalKernel<2,tent,0>(kernX_19DD);
          tensor[3] probe_l_2119CE#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1683,_t1685,_t19AD,Mtransform19D3,ldvox19DC,kevalX_d0_19DE);
          real op1_e3_l_2219CF#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,_t1927);
          real op1_e3_l_2319D0#1 = λ(T0[],T1[])<(T0 + T1)> (_t1929,op1_e3_l_1919CC);
          real op1_e3_l_2419D1#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1695,op1_e3_l_2019CD);
          tensor[3] op1_e3_l_2519D2#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp16A5,probe_l_2119CE,op1_e3_l_2219CF,op1_e3_l_2319D0,op1_e3_l_2419D1);
          tensor[3] rgb19C7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb16A7,op1_e3_l_2519D2);
          real op1_e3_l_519F9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_2219CF);
          real transp19F7#1 = λ(T0[],T1[])<(T0 * T1)> (transp16A5,op1_e3_l_519F9);
          goto JOIN19FF
        JOIN19FF:  preds = [ASSIGN19FC,COND1898]
          tensor[3] rgb19FD#1 = phi(rgb19C7,rgb16A7)
          real transp19FE#1 = phi(transp19F7,transp16A5)
          goto JOIN1A02
        JOIN1A02:  preds = [JOIN19FF,MASSIGN1A31]
          tensor[3] rgb1A00#1 = phi(rgb19FD,rgb16A7)
          real transp1A01#1 = phi(transp19FE,transp16A5)
          goto JOIN1A05
        JOIN1A05:  preds = [JOIN1A02,COND16D9]
          tensor[3] rgb1A03#1 = phi(rgb1A00,rgb16A7)
          real transp1A04#1 = phi(transp1A01,transp16A5)
          goto JOIN1A08
        JOIN1A08:  preds = [JOIN1A05,COND16D6]
          tensor[3] rgb1A06#1 = phi(rgb1A03,rgb16A7)
          real transp1A07#1 = phi(transp1A04,transp16A5)
          goto JOIN1A0B
        JOIN1A0B:  preds = [JOIN1A08,COND16D1]
          tensor[3] rgb1A09#1 = phi(rgb1A06,rgb16A7)
          real transp1A0A#1 = phi(transp1A07,transp16A5)
          goto JOIN1A0E
        JOIN1A0E:  preds = [JOIN1A0B,COND16CE]
          tensor[3] rgb1A0C#1 = phi(rgb1A09,rgb16A7)
          real transp1A0D#1 = phi(transp1A0A,transp16A5)
          goto JOIN1A11
        JOIN1A11:  preds = [JOIN1A0E,COND16C9]
          tensor[3] rgb1A0F#1 = phi(rgb1A0C,rgb16A7)
          real transp1A10#1 = phi(transp1A0D,transp16A5)
          goto JOIN1A14
        JOIN1A14:  preds = [JOIN1A11,COND16C4]
          tensor[3] rgb1A12#3 = phi(rgb1A0F,rgb16A7)
          real transp1A13#2 = phi(transp1A10,transp16A5)
          real _t1A15#1 = 0.1e-1;
          bool _t1A17#1 = LT<real>(transp1A13,_t1A15);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1E
        SAVE1A1A:  preds = [COND1A19]
          self.transp = _t16BE;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A1E
        JOIN1A1E:  preds = [*STABILIZE1A1C,COND1A19]
          real transp1A1D#2 = phi(transp1A13)
          bool _t1A1F#1 = GT<real>(rayN16A1,camFar168F);
          if _t1A1F then goto SAVE1A22 else goto JOIN1A25
        SAVE1A22:  preds = [COND1A21]
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A25
        JOIN1A25:  preds = [*STABILIZE1A24,COND1A21]
          real rayN1A26#1 = λ(T0[],T1[])<(T0 + T1)> (rayN16A1,rayStep1693);
          self.rayN = rayN1A26;
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          active
        ASSIGN1A2D:  preds = [COND180F]
          string _t1A2C#1 = "\n";
          Print<[tensor[3],string]>(x16BA,_t1A2C);
          string _t1A2F#1 = "wait what\?\n";
          Print<[string]>(_t1A2F);
          goto JOIN1A02
        ASSIGN1A32:  preds = [COND16B0]
          bool _t16B4#1 = NEQ<int>(vi16AB,sv169D);
          goto JOIN16B5
    end update
    method stabilize
        ENTRY1A33:  preds = []
          bool debug1A34#1 = globals.debug14ED;
          int su1A36#1 = globals.su14EE;
          int sv1A38#1 = globals.sv14EF;
          real transp1A3A#1 = self.transp;
          tensor[3] rgb1A3C#3 = self.rgb;
          tensor[4] rgba1A3E#1 = self.rgba;
          int ui1A40#1 = self.ui;
          int vi1A42#1 = self.vi;
          real _t1A44#1 = 0.1e1;
          real a1A46#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A48#1 = 0.e0;
          bool _t1A4A#1 = GT<real>(a1A46,_t1A48);
          if _t1A4A then goto ASSIGN1A4E else goto JOIN1A62
        ASSIGN1A4E:  preds = [COND1A4C]
          real _t1A4D#1 = TensorIndex<tensor[3],[0]>(rgb1A3C);
          real _t1A4F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4D,a1A46);
          real _t1A53#1 = TensorIndex<tensor[3],[1]>(rgb1A3C);
          real _t1A55#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A53,a1A46);
          real _t1A59#1 = TensorIndex<tensor[3],[2]>(rgb1A3C);
          real _t1A5B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A59,a1A46);
          tensor[4] rgba1A5F#1 = <tensor[4]>[_t1A4F,_t1A55,_t1A5B,a1A46];
          goto JOIN1A62
        JOIN1A62:  preds = [ASSIGN1A60,COND1A4C]
          tensor[4] rgba1A61#2 = phi(rgba1A5F,rgba1A3E)
          bool _t1A63#1 = EQ<int>(ui1A40,su1A36);
          if _t1A63 then goto ASSIGN1A67 else goto JOIN1A6D
        ASSIGN1A67:  preds = [COND1A65]
          bool _t1A66#1 = EQ<int>(vi1A42,sv1A38);
          if _t1A66 then goto COND1A69 else goto JOIN1A6C
        COND1A69:  preds = [COND1A68]
          if debug1A34 then goto MASSIGN1A6A else goto JOIN1A6B
        MASSIGN1A6A:  preds = [COND1A69]
          Print<[real,tensor[4]]>(a1A46,rgba1A61);
          goto JOIN1A6B
        JOIN1A6B:  preds = [MASSIGN1A6A,COND1A69]
          goto JOIN1A6C
        JOIN1A6C:  preds = [JOIN1A6B,COND1A68]
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A6C,COND1A65]
          self.rgba = rgba1A61;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A70:  preds = []
      int iresU1A71#1 = globals.iresU14E4;
      int iresV1A73#1 = globals.iresV14E5;
      int _t1A75#2 = 0;
      int _t1A77#2 = 1;
      int _t1A79#1 = ISub(iresV1A73,_t1A77);
      int[] _t1A7B#1 = Range(_t1A75,_t1A79);
    FOREACH1A7E:  preds = [ASSIGN1A7C,NEXT1A87]
      foreach (vi1A7D in _t1A7B) on exit goto RETURN1A88
      int _t1A7F#1 = ISub(iresU1A71,_t1A77);
      int[] _t1A81#1 = Range(_t1A75,_t1A7F);
    FOREACH1A84:  preds = [ASSIGN1A82,NEXT1A86]
      foreach (ui1A83 in _t1A81) on exit goto NEXT1A87
      new raycast(ui1A83,vi1A7D);
      goto FOREACH1A84
    NEXT1A87:  preds = [FOREACH1A84]
      goto FOREACH1A7E
    RETURN1A88:  preds = [FOREACH1A7E]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14DB (a) = <no-default>
  input 0b043B_intermedateGlobal14DC (b) = <no-default>
  input 0c043D_intermedateGlobal14DD (c) = <no-default>
  input isoval14DE (isoval) = <default>
  input thick14DF (thick) = <default>
  input camEye14E0 (camEye) = <default>
  input camAt14E1 (camAt) = <default>
  input camUp14E2 (camUp) = <default>
  input camFOV14E3 (camFOV) = <default>
  input iresU14E4 (iresU) = <default>
  input iresV14E5 (iresV) = <default>
  input camNear14E6 (camNear) = <default>
  input camFar14E7 (camFar) = <default>
  input refStep14E8 (refStep) = <default>
  input rayStep14E9 (rayStep) = <default>
  input lightVsp14EA (lightVsp) = <default>
  input phongKa14EB (phongKa) = <default>
  input phongKd14EC (phongKd) = <default>
  input debug14ED (debug) = <default>
  input su14EE (su) = <default>
  input sv14EF (sv) = <default>
  global real camDist14F0
  global tensor[3] camN14F1
  global tensor[3] camU14F2
  global tensor[3] camV14F3
  global real camVmax14F4
  global real camUmax14F5
  global tensor[3] light14F6
  global femData:Mesh _t14F7
  global femData:Space _tX14F8
  global femData:FemFunc c14F9
  global image(IMAGE1D<double[3]>) img14FA
  global kernel _tXX14FB
  global image(IMAGE1D<double[3]>) I1A8A
## functions
  function femData:MeshPos findPos16DA (femData:Mesh mesh16DB#11, tensor[3] pos16DC#4) {
    ENTRY16DD:  preds = []
      real _t16DE#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16E0#10 = <tensor[3]>[_t16DE,_t16DE,_t16DE];
      int newtonInt16E2#1 = 0;
      int[] yayCells16E4#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16DB,pos16DC);
    FOREACH16E7:  preds = [ASSIGN16E5,NEXT1802]
      foreach (cellItter16E6 in yayCells16E4) on exit goto ASSIGN1804
        tensor[3] xn1801#1 = phi(xn16E0,xn16EF)
      int _t16E8#1 = 2;
      int[] _t16EA#1 = Range(newtonInt16E2,_t16E8);
    FOREACH16ED:  preds = [ASSIGN16EB,NEXT1800]
      foreach (newtonItter16EC in _t16EA) on exit goto NEXT1802
        tensor[3] xn16EF#7 = phi(xn1801,xn16EE)
      int[4] femIndicies1700#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs1701#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies1700);
      tensor[3,4] basisResult1702#4 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_1016F0#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3,3] op1_e3_l_1216F1#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0);
      tensor[3,3,3] op1_e3_l_1316F2#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0,op1_e3_l_1216F1);
      tensor[3] probe_l_1416F3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1516F4#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1616F5#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3] op1_e3_l_1716F6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616F5);
      tensor[3] op1_e3_l_1816F7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516F4,op1_e3_l_1716F6);
      real op1_e3_l_1916F8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416F3,op1_e3_l_1816F7);
      tensor[3,3] op1_e3_l_2016F9#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316F2);
      real op1_e3_l_2116FA#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916F8);
      tensor[4] basisResult170A#2 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_2216FB#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,femDofs1701,basisResult170A,xn16EF);
      tensor[3,3] op1_e3_l_2316FC#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016F9,op1_e3_l_2116FA);
      tensor[3] op1_e3_l_2416FD#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_2216FB);
      tensor[3] op1_e3_l_2516FE#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_2416FD);
      tensor[3] xn16EE#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_2516FE);
      real _t1727#2 = 0.1e-7;
      real _t1729#1 = λ(T0[],T1[])<(T0 * T1)> (_t1727,_t1727);
      tensor[3] probe_l_301737#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter16E6,mesh16DB,xn16EF,femDofs1701,basisResult170A,xn16EF);
      tensor[3] op1_e3_l_321739#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_301737);
      tensor[3] op1_e3_l_48173A#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_321739);
      real _t172B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_48173A,op1_e3_l_48173A);
      bool _t1763#1 = GTE<real>(_t1729,_t172B);
      if _t1763 then goto ASSIGN1767 else goto JOIN17FF
    ASSIGN1767:  preds = [COND1765]
      real _t1766#4 = 0.1e1;
      real _t1768#4 = 0.1e-4;
      real _t176A#1 = λ(T0[],T1[])<(T0 + T1)> (_t1766,_t1768);
      tensor[3] _t176C#1 = <tensor[3]>[_t1766,_t1766,_t1766];
      real _t176E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t176C,xn16EE);
      bool _t17A8#1 = GT<real>(_t176A,_t176E);
      tensor[3] _t17AA#1 = <tensor[3]>[_t1768,_t1768,_t1768];
      tensor[3] _t17AC#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17AA,xn16EE);
      real _t17E6#1 = TensorIndex<tensor[3],[0]>(_t17AC);
      real _t17E8#3 = -0.e0;
      bool _t17EA#1 = GT<real>(_t17E6,_t17E8);
      real _t17EC#1 = TensorIndex<tensor[3],[1]>(_t17AC);
      bool _t17EE#1 = GT<real>(_t17EC,_t17E8);
      real _t17F0#1 = TensorIndex<tensor[3],[2]>(_t17AC);
      bool _t17F2#1 = GT<real>(_t17F0,_t17E8);
      bool _t17F4#1 = BAnd(_t17EE,_t17F2);
      bool _t17F6#1 = BAnd(_t17EA,_t17F4);
      bool _t17F8#1 = BAnd(_t17A8,_t17F6);
      if _t17F8 then goto ASSIGN17FC else goto JOIN17FE
    ASSIGN17FC:  preds = [COND17FA]
      femData:MeshPos _t17FB#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16DB,cellItter16E6,xn16EE,pos16DC);
      return _t17FB
      goto JOIN17FE
    JOIN17FE:  preds = [*RETURN(_t17FB)17FD,COND17FA]
      goto JOIN17FF
    JOIN17FF:  preds = [JOIN17FE,COND1765]
      goto FOREACH16ED
    NEXT1802:  preds = [FOREACH16ED]
      goto FOREACH16E7
    ASSIGN1804:  preds = [FOREACH16E7]
      string _t1803#1 = "Bad end 2";
      string _t1805#1 = "\n";
      Print<[string,string]>(_t1803,_t1805);
      femData:MeshPos _t1808#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16DB);
      return _t1808
}
## input initialization
  ENTRY14FC:  preds = []
    real isoval14FD#1 = 0.2e0;
    globals.isoval14DE = isoval14FD;
    real thick1500#1 = 0.7e-1;
    globals.thick14DF = thick1500;
    real _t1503#2 = 0.3e1;
    real _t1505#1 = -0.3e1;
    tensor[3] camEye1507#1 = <tensor[3]>[_t1503,_t1505,_t1503];
    globals.camEye14E0 = camEye1507;
    real _t150A#3 = 0.5e0;
    tensor[3] camAt150C#1 = <tensor[3]>[_t150A,_t150A,_t150A];
    globals.camAt14E1 = camAt150C;
    real _t150F#2 = 0.e0;
    real _t1511#2 = 0.1e1;
    tensor[3] camUp1513#2 = <tensor[3]>[_t150F,_t150F,_t1511];
    globals.camUp14E2 = camUp1513;
    real camFOV1516#1 = 0.137e2;
    globals.camFOV14E3 = camFOV1516;
    int iresU1519#2 = 500;
    globals.iresU14E4 = iresU1519;
    globals.iresV14E5 = iresU1519;
    real camNear151D#1 = -0.2e1;
    globals.camNear14E6 = camNear151D;
    real camFar1520#1 = 0.5e1;
    globals.camFar14E7 = camFar1520;
    globals.refStep14E8 = _t1511;
    real rayStep1524#1 = 0.1e-1;
    globals.rayStep14E9 = rayStep1524;
    globals.lightVsp14EA = camUp1513;
    real phongKa1528#1 = 0.1e0;
    globals.phongKa14EB = phongKa1528;
    real phongKd152B#1 = 0.9e0;
    globals.phongKd14EC = phongKd152B;
    bool debug152E#1 = false;
    globals.debug14ED = debug152E;
    int su1531#2 = 250;
    globals.su14EE = su1531;
    globals.sv14EF = su1531;
    return
## global-variable initialization
  ENTRY1536:  preds = []
    femData:Mesh a1537#3 = globals.a14DB;
    femData:Space 0b043B_intermedateGlobal1539#1 = globals.0b043B_intermedateGlobal14DC;
    femData:FemFunc 0c043D_intermedateGlobal153B#1 = globals.0c043D_intermedateGlobal14DD;
    tensor[3] camEye153F#1 = globals.camEye14E0;
    tensor[3] camAt1541#1 = globals.camAt14E1;
    tensor[3] camUp1543#1 = globals.camUp14E2;
    real camFOV1545#1 = globals.camFOV14E3;
    int iresU1547#1 = globals.iresU14E4;
    int iresV1549#1 = globals.iresV14E5;
    tensor[3] lightVsp154B#2 = globals.lightVsp14EA;
    int _t154D#1 = 0;
    int _t154F#1 = 1;
    int _t1551#1 = ExtractFemItem<int,NumCell(Mesh)>(a1537);
    int _t1553#1 = ISub(_t1551,_t154F);
    int[] _t1555#1 = Range(_t154D,_t1553);
    femData:MeshCell[] _t1557#1 = <femData:MeshCell[]>{};
  FOREACH155A:  preds = [ASSIGN1558,NEXT1560]
    foreach (_t1559 in _t1555) on exit goto ASSIGN1562
      femData:MeshCell[] _t155E#1 = phi(_t1557,_t155D)
    femData:MeshCell _t155B#1 = LoadFem<femData:MeshCell>(a1537,_t1559);
    femData:MeshCell[] _t155D#1 = Append<femData:MeshCell>(_t155E,_t155B);
    goto FOREACH155A
  ASSIGN1562:  preds = [FOREACH155A]
    femData:Space b1561#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1539,a1537);
    femData:FemFunc c1563#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal153B,b1561);
    femData:Space _t1565#2 = ExtractFem<femData:Space,femData:FemFunc>(c1563);
    femData:Mesh _t1567#1 = ExtractFem<femData:Mesh,femData:Space>(_t1565);
    image(IMAGE1D<double[3]>) I1569#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t156B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img156D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1569);
    tensor[3] op1_e3_l_21570#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_41571#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21570,op1_e3_l_21570);
    real camDist156F#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41571);
    globals.camDist14F0 = camDist156F;
    real op1_e3_l_9157A#6 = λ(T0[])<(1) / ( T0)> (camDist156F);
    tensor[3] camN1576#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21570,op1_e3_l_9157A);
    globals.camN14F1 = camN1576;
    tensor[3,3] op1_e3_l_151585#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1543);
    tensor[3] op1_e3_l_171587#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21570,op1_e3_l_151585);
    real op1_e3_l_341588#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171587,op1_e3_l_171587);
    real op1_e3_l_351589#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_9157A,op1_e3_l_9157A,op1_e3_l_341588);
    real op1_e3_l_36158A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351589);
    tensor[3] op1_e3_l_37158B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_171587);
    real op1_e3_l_38158C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_36158A);
    tensor[3] camU1581#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_37158B,op1_e3_l_38158C);
    globals.camU14F2 = camU1581;
    tensor[3,3] op1_e3_l_4515A4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21570);
    tensor[3] op1_e3_l_4715A5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171587,op1_e3_l_4515A4);
    tensor[3] op1_e3_l_5015A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_4715A5);
    tensor[3] camV159A#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38158C,op1_e3_l_9157A,op1_e3_l_5015A7);
    globals.camV14F3 = camV159A;
    real _t15B7#1 = 0.314159265358979323846264338327950288e1;
    real _t15B9#1 = 0.36e3;
    real op1_e3_l_515BC#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1545,_t15B7);
    real op1_e3_l_615BD#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B9,op1_e3_l_515BC);
    real op1_e3_l_1015C0#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615BD);
    real camVmax15BB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015C0,camDist156F);
    globals.camVmax14F4 = camVmax15BB;
    real _t15CA#1 = IntToReal(iresU1547);
    real _t15CC#1 = IntToReal(iresV1549);
    real op1_e3_l_1415D5#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15CA,op1_e3_l_1015C0,camDist156F);
    real camUmax15CE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15CC,op1_e3_l_1415D5);
    globals.camUmax14F5 = camUmax15CE;
    tensor[3,3] _t15DF#1 = <tensor[3,3]>[camU1581,camV159A,camN1576];
    real op1_e3_l_315E2#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp154B);
    real op1_e3_l_415E3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315E2);
    real op1_e3_l_515E4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415E3);
    tensor[3] op1_e3_l_615E5#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15DF,lightVsp154B);
    tensor[3] light15E1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515E4,op1_e3_l_615E5);
    globals.light14F6 = light15E1;
    globals._t14F7 = _t1567;
    globals._tX14F8 = _t1565;
    globals.c14F9 = c1563;
    globals.img14FA = img156D;
    globals._tXX14FB = _t156B;
    globals.I1A8A = I1569;
    return
## strand
  strand raycast (int ui15F2#2, int vi15F3#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15FE:  preds = []
        int iresU15FF#1 = globals.iresU14E4;
        int iresV1601#1 = globals.iresV14E5;
        real camNear1603#1 = globals.camNear14E6;
        real camDist1605#1 = globals.camDist14F0;
        tensor[3] camN1607#1 = globals.camN14F1;
        tensor[3] camU1609#1 = globals.camU14F2;
        tensor[3] camV160B#1 = globals.camV14F3;
        real camVmax160D#4 = globals.camVmax14F4;
        real camUmax160F#2 = globals.camUmax14F5;
        real _t1611#5 = -0.5e0;
        real _t1613#1 = IntToReal(ui15F2);
        real _t1615#1 = IntToReal(iresU15FF);
        real _t1617#3 = 0.5e0;
        real op1_e3_l_6161A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1615,_t1617);
        real op1_e3_l_7161B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1613);
        real op1_e3_l_8161C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6161A);
        real op1_e3_l_9161D#2 = λ(T0[])<Neg(T0)> (camUmax160F);
        real op1_e3_l_10161E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7161B,op1_e3_l_8161C);
        real op1_e3_l_11161F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax160F,op1_e3_l_9161D);
        real op1_e3_l_131620#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10161E,op1_e3_l_11161F);
        real rayU1619#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9161D,op1_e3_l_131620);
        real _t1629#1 = IntToReal(vi15F3);
        real _t162B#2 = IntToReal(iresV1601);
        real op1_e3_l_6162E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t162B,_t1617);
        real op1_e3_l_7162F#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1629);
        real op1_e3_l_81630#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6162E);
        real op1_e3_l_91631#1 = λ(T0[])<Neg(T0)> (camVmax160D);
        real op1_e3_l_101632#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_81630);
        real op1_e3_l_111633#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax160D,op1_e3_l_91631);
        real op1_e3_l_121634#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101632,op1_e3_l_111633);
        real rayV162D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_121634);
        real op1_e3_l_251646#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1617,_t162B);
        real op1_e3_l_271648#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_251646);
        real op1_e3_l_29164A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_271648);
        real op1_e3_l_31164C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_29164A,op1_e3_l_111633);
        real op1_e3_l_32164D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_31164C);
        tensor[3] op1_e3_l_33164E#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1609,rayU1619);
        tensor[3] op1_e3_l_34164F#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV160B,op1_e3_l_32164D);
        tensor[3] op1_e3_l_351650#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33164E,op1_e3_l_34164F);
        tensor[3] op1_e3_l_361651#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1605,op1_e3_l_351650);
        tensor[3] rayVec163D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1607,op1_e3_l_361651);
        real transp1667#1 = 0.1e1;
        real _t1669#8 = 0.e0;
        tensor[3] rgb166B#1 = <tensor[3]>[_t1669,_t1669,_t1669];
        tensor[4] rgba166D#1 = <tensor[4]>[_t1669,_t1669,_t1669,_t1669];
        self.rayU = rayU1619;
        self.rayV = rayV162D;
        self.rayN = camNear1603;
        self.rayVec = rayVec163D;
        self.transp = transp1667;
        self.rgb = rgb166B;
        self.rgba = rgba166D;
        self.gray = _t1669;
        self.ui = ui15F2;
        self.vi = vi15F3;
        return
    end state init
    method update
        ENTRY167A:  preds = []
          image(IMAGE1D<double[3]>) I1A8B#3 = globals.I1A8A;
          real isoval167B#1 = globals.isoval14DE;
          femData:Mesh _t167D#9 = globals._t14F7;
          femData:Space _t167F#3 = globals._tX14F8;
          femData:FemFunc c1681#3 = globals.c14F9;
          image(IMAGE1D<double[3]>) img1683#1 = globals.img14FA;
          kernel _t1685#1 = globals._tXX14FB;
          femData:Mesh a1687#1 = globals.a14DB;
          real thick1689#1 = globals.thick14DF;
          tensor[3] camEye168B#1 = globals.camEye14E0;
          real camNear168D#2 = globals.camNear14E6;
          real camFar168F#2 = globals.camFar14E7;
          real refStep1691#1 = globals.refStep14E8;
          real rayStep1693#2 = globals.rayStep14E9;
          real phongKa1695#1 = globals.phongKa14EB;
          real phongKd1697#1 = globals.phongKd14EC;
          bool debug1699#1 = globals.debug14ED;
          int su169B#1 = globals.su14EE;
          int sv169D#1 = globals.sv14EF;
          tensor[3] light169F#1 = globals.light14F6;
          real rayN16A1#4 = self.rayN;
          tensor[3] rayVec16A3#2 = self.rayVec;
          real transp16A5#10 = self.transp;
          tensor[3] rgb16A7#9 = self.rgb;
          int ui16A9#1 = self.ui;
          int vi16AB#1 = self.vi;
          if debug1699 then goto ASSIGN16AF else goto JOIN16B9
        ASSIGN16AF:  preds = [COND16AD]
          bool _t16AE#1 = NEQ<int>(ui16A9,su169B);
          if _t16AE then goto ASSIGN16B2 else goto ASSIGN1A32
        ASSIGN16B2:  preds = [COND16B0]
          bool _t16B1#1 = true;
          goto JOIN16B5
        JOIN16B5:  preds = [ASSIGN16B2,ASSIGN1A32]
          bool _t16B3#1 = phi(_t16B1,_t16B4)
          if _t16B3 then goto STABILIZE16B7 else goto JOIN16B8
        STABILIZE16B7:  preds = [COND16B6]
          stabilize
          goto JOIN16B8
        JOIN16B8:  preds = [*STABILIZE16B7,COND16B6]
          goto JOIN16B9
        JOIN16B9:  preds = [JOIN16B8,COND16AD]
          tensor[3] op1_e3_l_316BB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN16A1,rayVec16A3);
          tensor[3] x16BA#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye168B,op1_e3_l_316BB);
          real _t16BE#8 = 0.e0;
          real _t16C0#2 = TensorIndex<tensor[3],[0]>(x16BA);
          bool _t16C2#1 = LT<real>(_t16BE,_t16C0);
          if _t16C2 then goto ASSIGN16C6 else goto JOIN1A14
        ASSIGN16C6:  preds = [COND16C4]
          real _t16C5#11 = 0.1e1;
          bool _t16C7#1 = LT<real>(_t16C0,_t16C5);
          if _t16C7 then goto ASSIGN16CB else goto JOIN1A11
        ASSIGN16CB:  preds = [COND16C9]
          real _t16CA#2 = TensorIndex<tensor[3],[1]>(x16BA);
          bool _t16CC#1 = LT<real>(_t16BE,_t16CA);
          if _t16CC then goto ASSIGN16D0 else goto JOIN1A0E
        ASSIGN16D0:  preds = [COND16CE]
          bool _t16CF#1 = LT<real>(_t16CA,_t16C5);
          if _t16CF then goto ASSIGN16D3 else goto JOIN1A0B
        ASSIGN16D3:  preds = [COND16D1]
          real _t16D2#2 = TensorIndex<tensor[3],[2]>(x16BA);
          bool _t16D4#1 = LT<real>(_t16BE,_t16D2);
          if _t16D4 then goto ASSIGN16D8 else goto JOIN1A08
        ASSIGN16D8:  preds = [COND16D6]
          bool _t16D7#1 = LT<real>(_t16D2,_t16C5);
          if _t16D7 then goto ASSIGN180C else goto JOIN1A05
        ASSIGN180C:  preds = [COND16D9]
          femData:MeshPos p180B#1 = findPos16DA (a1687,x16BA);
          bool _t180D#1 = ExtractFemItem<bool,Valid(MeshPos)>(p180B);
          if _t180D then goto ASSIGN1811 else goto ASSIGN1A2D
        ASSIGN1811:  preds = [COND180F]
          real _t1810#1 = 0.13e1;
          femData:MeshPos callFindPos1832#2 = findPos16DA (_t167D,x16BA);
          int intPos1833#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1832);
          tensor[3] refPos1834#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1832);
          int[10] femIndicies1839#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos1833);
          tensor[10] femDofs183A#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1839);
          tensor[10] basisResult183B#1 = EvaluateBasis<BasisArray(10)>(refPos1834);
          real compositionl1814#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult183B,refPos1834);
          real op1_e3_l_231815#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval167B,compositionl1814);
          tensor[3,10] basisResult1842#1 = EvaluateBasis<BasisArray(3,10)>(refPos1834);
          tensor[3] compositionl1817#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult1842,refPos1834);
          int[4] femIndicies1844#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos1833);
          tensor[4,3] femDofs1845#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies1844);
          tensor[3,4] basisResult1846#4 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3,3] probe_l_251818#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3,3] op1_e3_l_271819#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818);
          tensor[3,3,3] op1_e3_l_28181A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818,op1_e3_l_271819);
          tensor[3] probe_l_29181B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_30181C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_31181D#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3] op1_e3_l_32181E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_31181D);
          tensor[3] op1_e3_l_33181F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_30181C,op1_e3_l_32181E);
          real op1_e3_l_341820#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_29181B,op1_e3_l_33181F);
          tensor[3,3] op1_e3_l_351821#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_28181A);
          real op1_e3_l_361822#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341820);
          tensor[3,3] op1_e3_l_371823#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351821,op1_e3_l_361822);
          tensor[3] op1_e3_l_381824#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1817,op1_e3_l_371823);
          tensor[3] op1_e3_l_541828#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381824);
          real op1_e3_l_56182A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541828,op1_e3_l_541828);
          real op1_e3_l_57182B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_56182A);
          real op1_e3_l_58182C#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231815);
          real op1_e3_l_59182D#1 = λ(T0[],T1[])<(T0 * T1)> (thick1689,op1_e3_l_57182B);
          real op1_e3_l_60182E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_58182C,op1_e3_l_59182D);
          real op1_e3_l_61182F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_60182E);
          real op1_e3_l_621830#2 = λ(T0[],T1[])<(T0 * T1)> (_t1810,op1_e3_l_61182F);
          real op1_e3_l_631831#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16BE,_t16C5,op1_e3_l_621830);
          real a1812#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_631831);
          bool _t1896#1 = GT<real>(a1812,_t16BE);
          if _t1896 then goto ASSIGN1AB2 else goto JOIN19FF
        ASSIGN1AB2:  preds = [COND1898]
          real op1_e3_l_6418B8#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16C5,_t16BE,op1_e3_l_621830);
          real op1_e3_l_6518B9#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_6418B8);
          real _t1899#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_6518B9);
          real op1_e3_l_31920#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec16A3);
          real op1_e3_l_41921#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31920);
          real op1_e3_l_51922#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1693,op1_e3_l_41921);
          real _t191F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1691,op1_e3_l_51922);
          real _t1927#1 = MathFn<pow>(_t1899,_t191F);
          real _t1929#2 = 0.11e1;
          real _t192B#1 = 0.7e0;
          real op1_e3_l_671948#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_57182B);
          real op1_e3_l_681949#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light169F,op1_e3_l_541828);
          real _t192D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671948,op1_e3_l_681949);
          real shade19AB#1 = Max<real>(_t16BE,_t192D);
          real _t19AD#2 = λ(T0[])<T0> (compositionl1814);
          real op1_e3_l_1519C8#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,rayN16A1);
          real op1_e3_l_1619C9#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,camFar168F);
          real op1_e3_l_1719CA#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C8,op1_e3_l_1619C9);
          real op1_e3_l_1819CB#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1929,_t192B);
          real op1_e3_l_1919CC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719CA,op1_e3_l_1819CB);
          real op1_e3_l_2019CD#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1697,shade19AB);
          real Mtransform19D3#2 = Transform<IMAGE1D<double[3]>>(I1A8B);
          real MxPos19D4#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19D3,_t19AD);
          real Ttranslate19D5#1 = Translate<IMAGE1D<double[3]>>(I1A8B);
          real imgPos19D6#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19D4,Ttranslate19D5);
          real nd19D7#2 = Floor<1>(imgPos19D6);
          real f19D8#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19D6,nd19D7);
          int n19D9#1 = RealToInt<1>(nd19D7);
          int idx19DB#1 = n19D9;
          tensor[3,2] ldvox19DC#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A8B,idx19DB);
          tensor[2] kernX_19DD#1 = BuildPos<1>(f19D8);
          tensor[2] kevalX_d0_19DE#1 = EvalKernel<2,tent,0>(kernX_19DD);
          tensor[3] probe_l_2119CE#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1683,_t1685,_t19AD,Mtransform19D3,ldvox19DC,kevalX_d0_19DE);
          real op1_e3_l_2219CF#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,_t1927);
          real op1_e3_l_2319D0#1 = λ(T0[],T1[])<(T0 + T1)> (_t1929,op1_e3_l_1919CC);
          real op1_e3_l_2419D1#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1695,op1_e3_l_2019CD);
          tensor[3] op1_e3_l_2519D2#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp16A5,probe_l_2119CE,op1_e3_l_2219CF,op1_e3_l_2319D0,op1_e3_l_2419D1);
          tensor[3] rgb19C7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb16A7,op1_e3_l_2519D2);
          real op1_e3_l_519F9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_2219CF);
          real transp19F7#1 = λ(T0[],T1[])<(T0 * T1)> (transp16A5,op1_e3_l_519F9);
          goto JOIN19FF
        JOIN19FF:  preds = [ASSIGN19FC,COND1898]
          tensor[3] rgb19FD#1 = phi(rgb19C7,rgb16A7)
          real transp19FE#1 = phi(transp19F7,transp16A5)
          goto JOIN1A02
        JOIN1A02:  preds = [JOIN19FF,MASSIGN1A31]
          tensor[3] rgb1A00#1 = phi(rgb19FD,rgb16A7)
          real transp1A01#1 = phi(transp19FE,transp16A5)
          goto JOIN1A05
        JOIN1A05:  preds = [JOIN1A02,COND16D9]
          tensor[3] rgb1A03#1 = phi(rgb1A00,rgb16A7)
          real transp1A04#1 = phi(transp1A01,transp16A5)
          goto JOIN1A08
        JOIN1A08:  preds = [JOIN1A05,COND16D6]
          tensor[3] rgb1A06#1 = phi(rgb1A03,rgb16A7)
          real transp1A07#1 = phi(transp1A04,transp16A5)
          goto JOIN1A0B
        JOIN1A0B:  preds = [JOIN1A08,COND16D1]
          tensor[3] rgb1A09#1 = phi(rgb1A06,rgb16A7)
          real transp1A0A#1 = phi(transp1A07,transp16A5)
          goto JOIN1A0E
        JOIN1A0E:  preds = [JOIN1A0B,COND16CE]
          tensor[3] rgb1A0C#1 = phi(rgb1A09,rgb16A7)
          real transp1A0D#1 = phi(transp1A0A,transp16A5)
          goto JOIN1A11
        JOIN1A11:  preds = [JOIN1A0E,COND16C9]
          tensor[3] rgb1A0F#1 = phi(rgb1A0C,rgb16A7)
          real transp1A10#1 = phi(transp1A0D,transp16A5)
          goto JOIN1A14
        JOIN1A14:  preds = [JOIN1A11,COND16C4]
          tensor[3] rgb1A12#3 = phi(rgb1A0F,rgb16A7)
          real transp1A13#2 = phi(transp1A10,transp16A5)
          real _t1A15#1 = 0.1e-1;
          bool _t1A17#1 = LT<real>(transp1A13,_t1A15);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1E
        SAVE1A1A:  preds = [COND1A19]
          self.transp = _t16BE;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A1E
        JOIN1A1E:  preds = [*STABILIZE1A1C,COND1A19]
          real transp1A1D#2 = phi(transp1A13)
          bool _t1A1F#1 = GT<real>(rayN16A1,camFar168F);
          if _t1A1F then goto SAVE1A22 else goto JOIN1A25
        SAVE1A22:  preds = [COND1A21]
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A25
        JOIN1A25:  preds = [*STABILIZE1A24,COND1A21]
          real rayN1A26#1 = λ(T0[],T1[])<(T0 + T1)> (rayN16A1,rayStep1693);
          self.rayN = rayN1A26;
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          active
        ASSIGN1A2D:  preds = [COND180F]
          string _t1A2C#1 = "\n";
          Print<[tensor[3],string]>(x16BA,_t1A2C);
          string _t1A2F#1 = "wait what\?\n";
          Print<[string]>(_t1A2F);
          goto JOIN1A02
        ASSIGN1A32:  preds = [COND16B0]
          bool _t16B4#1 = NEQ<int>(vi16AB,sv169D);
          goto JOIN16B5
    end update
    method stabilize
        ENTRY1A33:  preds = []
          bool debug1A34#1 = globals.debug14ED;
          int su1A36#1 = globals.su14EE;
          int sv1A38#1 = globals.sv14EF;
          real transp1A3A#1 = self.transp;
          tensor[3] rgb1A3C#3 = self.rgb;
          tensor[4] rgba1A3E#1 = self.rgba;
          int ui1A40#1 = self.ui;
          int vi1A42#1 = self.vi;
          real _t1A44#1 = 0.1e1;
          real a1A46#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A48#1 = 0.e0;
          bool _t1A4A#1 = GT<real>(a1A46,_t1A48);
          if _t1A4A then goto ASSIGN1A4E else goto JOIN1A62
        ASSIGN1A4E:  preds = [COND1A4C]
          real _t1A4D#1 = TensorIndex<tensor[3],[0]>(rgb1A3C);
          real _t1A4F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4D,a1A46);
          real _t1A53#1 = TensorIndex<tensor[3],[1]>(rgb1A3C);
          real _t1A55#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A53,a1A46);
          real _t1A59#1 = TensorIndex<tensor[3],[2]>(rgb1A3C);
          real _t1A5B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A59,a1A46);
          tensor[4] rgba1A5F#1 = <tensor[4]>[_t1A4F,_t1A55,_t1A5B,a1A46];
          goto JOIN1A62
        JOIN1A62:  preds = [ASSIGN1A60,COND1A4C]
          tensor[4] rgba1A61#2 = phi(rgba1A5F,rgba1A3E)
          bool _t1A63#1 = EQ<int>(ui1A40,su1A36);
          if _t1A63 then goto ASSIGN1A67 else goto JOIN1A6D
        ASSIGN1A67:  preds = [COND1A65]
          bool _t1A66#1 = EQ<int>(vi1A42,sv1A38);
          if _t1A66 then goto COND1A69 else goto JOIN1A6C
        COND1A69:  preds = [COND1A68]
          if debug1A34 then goto MASSIGN1A6A else goto JOIN1A6B
        MASSIGN1A6A:  preds = [COND1A69]
          Print<[real,tensor[4]]>(a1A46,rgba1A61);
          goto JOIN1A6B
        JOIN1A6B:  preds = [MASSIGN1A6A,COND1A69]
          goto JOIN1A6C
        JOIN1A6C:  preds = [JOIN1A6B,COND1A68]
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A6C,COND1A65]
          self.rgba = rgba1A61;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A70:  preds = []
      int iresU1A71#1 = globals.iresU14E4;
      int iresV1A73#1 = globals.iresV14E5;
      int _t1A75#2 = 0;
      int _t1A77#2 = 1;
      int _t1A79#1 = ISub(iresV1A73,_t1A77);
      int[] _t1A7B#1 = Range(_t1A75,_t1A79);
    FOREACH1A7E:  preds = [ASSIGN1A7C,NEXT1A87]
      foreach (vi1A7D in _t1A7B) on exit goto RETURN1A88
      int _t1A7F#1 = ISub(iresU1A71,_t1A77);
      int[] _t1A81#1 = Range(_t1A75,_t1A7F);
    FOREACH1A84:  preds = [ASSIGN1A82,NEXT1A86]
      foreach (ui1A83 in _t1A81) on exit goto NEXT1A87
      new raycast(ui1A83,vi1A7D);
      goto FOREACH1A84
    NEXT1A87:  preds = [FOREACH1A84]
      goto FOREACH1A7E
    RETURN1A88:  preds = [FOREACH1A7E]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14DB (a) = <no-default>
  input 0b043B_intermedateGlobal14DC (b) = <no-default>
  input 0c043D_intermedateGlobal14DD (c) = <no-default>
  input isoval14DE (isoval) = <default>
  input thick14DF (thick) = <default>
  input camEye14E0 (camEye) = <default>
  input camAt14E1 (camAt) = <default>
  input camUp14E2 (camUp) = <default>
  input camFOV14E3 (camFOV) = <default>
  input iresU14E4 (iresU) = <default>
  input iresV14E5 (iresV) = <default>
  input camNear14E6 (camNear) = <default>
  input camFar14E7 (camFar) = <default>
  input refStep14E8 (refStep) = <default>
  input rayStep14E9 (rayStep) = <default>
  input lightVsp14EA (lightVsp) = <default>
  input phongKa14EB (phongKa) = <default>
  input phongKd14EC (phongKd) = <default>
  input debug14ED (debug) = <default>
  input su14EE (su) = <default>
  input sv14EF (sv) = <default>
  global real camDist14F0
  global tensor[3] camN14F1
  global tensor[3] camU14F2
  global tensor[3] camV14F3
  global real camVmax14F4
  global real camUmax14F5
  global tensor[3] light14F6
  global femData:Mesh _t14F7
  global femData:Space _tX14F8
  global femData:FemFunc c14F9
  global image(IMAGE1D<double[3]>) img14FA
  global kernel _tXX14FB
  global image(IMAGE1D<double[3]>) I1A8A
## functions
  function femData:MeshPos findPos16DA (femData:Mesh mesh16DB#11, tensor[3] pos16DC#4) {
    ENTRY16DD:  preds = []
      real _t16DE#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16E0#10 = <tensor[3]>[_t16DE,_t16DE,_t16DE];
      int newtonInt16E2#1 = 0;
      int[] yayCells16E4#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16DB,pos16DC);
    FOREACH16E7:  preds = [ASSIGN16E5,NEXT1802]
      foreach (cellItter16E6 in yayCells16E4) on exit goto ASSIGN1804
        tensor[3] xn1801#1 = phi(xn16E0,xn16EF)
      int _t16E8#1 = 2;
      int[] _t16EA#1 = Range(newtonInt16E2,_t16E8);
    FOREACH16ED:  preds = [ASSIGN16EB,NEXT1800]
      foreach (newtonItter16EC in _t16EA) on exit goto NEXT1802
        tensor[3] xn16EF#7 = phi(xn1801,xn16EE)
      int[4] femIndicies1700#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16DB,cellItter16E6);
      tensor[4,3] femDofs1701#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16DB,femIndicies1700);
      tensor[3,4] basisResult1702#4 = EvaluateBasis<BasisArray(3,4)>(xn16E0);
      tensor[3,3] probe_l_1016F0#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3,3] op1_e3_l_1216F1#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0);
      tensor[3,3,3] op1_e3_l_1316F2#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016F0,op1_e3_l_1216F1);
      tensor[3] probe_l_1416F3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1516F4#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3] probe_l_1616F5#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter16E6,mesh16DB,xn16E0,femDofs1701,basisResult1702,xn16E0);
      tensor[3,3] op1_e3_l_1716F6#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616F5);
      tensor[3] op1_e3_l_1816F7#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516F4,op1_e3_l_1716F6);
      real op1_e3_l_1916F8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416F3,op1_e3_l_1816F7);
      tensor[3,3] op1_e3_l_2016F9#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316F2);
      real op1_e3_l_2116FA#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916F8);
      tensor[4] basisResult170A#2 = EvaluateBasis<BasisArray(4)>(xn16EF);
      tensor[3] probe_l_2216FB#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16EF,cellItter16E6,mesh16DB,femDofs1701,basisResult170A,xn16EF);
      tensor[3,3] op1_e3_l_2316FC#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016F9,op1_e3_l_2116FA);
      tensor[3] op1_e3_l_2416FD#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_2216FB);
      tensor[3] op1_e3_l_2516FE#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_2416FD);
      tensor[3] xn16EE#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16EF,op1_e3_l_2516FE);
      real _t1727#2 = 0.1e-7;
      real _t1729#1 = λ(T0[],T1[])<(T0 * T1)> (_t1727,_t1727);
      tensor[3] probe_l_301737#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter16E6,mesh16DB,xn16EF,femDofs1701,basisResult170A,xn16EF);
      tensor[3] op1_e3_l_321739#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16DC,probe_l_301737);
      tensor[3] op1_e3_l_48173A#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316FC,op1_e3_l_321739);
      real _t172B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_48173A,op1_e3_l_48173A);
      bool _t1763#1 = GTE<real>(_t1729,_t172B);
      if _t1763 then goto ASSIGN1767 else goto JOIN17FF
    ASSIGN1767:  preds = [COND1765]
      real _t1766#4 = 0.1e1;
      real _t1768#4 = 0.1e-4;
      real _t176A#1 = λ(T0[],T1[])<(T0 + T1)> (_t1766,_t1768);
      tensor[3] _t176C#1 = <tensor[3]>[_t1766,_t1766,_t1766];
      real _t176E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t176C,xn16EE);
      bool _t17A8#1 = GT<real>(_t176A,_t176E);
      tensor[3] _t17AA#1 = <tensor[3]>[_t1768,_t1768,_t1768];
      tensor[3] _t17AC#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17AA,xn16EE);
      real _t17E6#1 = TensorIndex<tensor[3],[0]>(_t17AC);
      real _t17E8#3 = -0.e0;
      bool _t17EA#1 = GT<real>(_t17E6,_t17E8);
      real _t17EC#1 = TensorIndex<tensor[3],[1]>(_t17AC);
      bool _t17EE#1 = GT<real>(_t17EC,_t17E8);
      real _t17F0#1 = TensorIndex<tensor[3],[2]>(_t17AC);
      bool _t17F2#1 = GT<real>(_t17F0,_t17E8);
      bool _t17F4#1 = BAnd(_t17EE,_t17F2);
      bool _t17F6#1 = BAnd(_t17EA,_t17F4);
      bool _t17F8#1 = BAnd(_t17A8,_t17F6);
      if _t17F8 then goto ASSIGN17FC else goto JOIN17FE
    ASSIGN17FC:  preds = [COND17FA]
      femData:MeshPos _t17FB#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16DB,cellItter16E6,xn16EE,pos16DC);
      return _t17FB
      goto JOIN17FE
    JOIN17FE:  preds = [*RETURN(_t17FB)17FD,COND17FA]
      goto JOIN17FF
    JOIN17FF:  preds = [JOIN17FE,COND1765]
      goto FOREACH16ED
    NEXT1802:  preds = [FOREACH16ED]
      goto FOREACH16E7
    ASSIGN1804:  preds = [FOREACH16E7]
      string _t1803#1 = "Bad end 2";
      string _t1805#1 = "\n";
      Print<[string,string]>(_t1803,_t1805);
      femData:MeshPos _t1808#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16DB);
      return _t1808
}
## input initialization
  ENTRY14FC:  preds = []
    real isoval14FD#1 = 0.2e0;
    globals.isoval14DE = isoval14FD;
    real thick1500#1 = 0.7e-1;
    globals.thick14DF = thick1500;
    real _t1503#2 = 0.3e1;
    real _t1505#1 = -0.3e1;
    tensor[3] camEye1507#1 = <tensor[3]>[_t1503,_t1505,_t1503];
    globals.camEye14E0 = camEye1507;
    real _t150A#3 = 0.5e0;
    tensor[3] camAt150C#1 = <tensor[3]>[_t150A,_t150A,_t150A];
    globals.camAt14E1 = camAt150C;
    real _t150F#2 = 0.e0;
    real _t1511#2 = 0.1e1;
    tensor[3] camUp1513#2 = <tensor[3]>[_t150F,_t150F,_t1511];
    globals.camUp14E2 = camUp1513;
    real camFOV1516#1 = 0.137e2;
    globals.camFOV14E3 = camFOV1516;
    int iresU1519#2 = 500;
    globals.iresU14E4 = iresU1519;
    globals.iresV14E5 = iresU1519;
    real camNear151D#1 = -0.2e1;
    globals.camNear14E6 = camNear151D;
    real camFar1520#1 = 0.5e1;
    globals.camFar14E7 = camFar1520;
    globals.refStep14E8 = _t1511;
    real rayStep1524#1 = 0.1e-1;
    globals.rayStep14E9 = rayStep1524;
    globals.lightVsp14EA = camUp1513;
    real phongKa1528#1 = 0.1e0;
    globals.phongKa14EB = phongKa1528;
    real phongKd152B#1 = 0.9e0;
    globals.phongKd14EC = phongKd152B;
    bool debug152E#1 = false;
    globals.debug14ED = debug152E;
    int su1531#2 = 250;
    globals.su14EE = su1531;
    globals.sv14EF = su1531;
    return
## global-variable initialization
  ENTRY1536:  preds = []
    femData:Mesh a1537#3 = globals.a14DB;
    femData:Space 0b043B_intermedateGlobal1539#1 = globals.0b043B_intermedateGlobal14DC;
    femData:FemFunc 0c043D_intermedateGlobal153B#1 = globals.0c043D_intermedateGlobal14DD;
    tensor[3] camEye153F#1 = globals.camEye14E0;
    tensor[3] camAt1541#1 = globals.camAt14E1;
    tensor[3] camUp1543#1 = globals.camUp14E2;
    real camFOV1545#1 = globals.camFOV14E3;
    int iresU1547#1 = globals.iresU14E4;
    int iresV1549#1 = globals.iresV14E5;
    tensor[3] lightVsp154B#2 = globals.lightVsp14EA;
    int _t154D#1 = 0;
    int _t154F#1 = 1;
    int _t1551#1 = ExtractFemItem<int,NumCell(Mesh)>(a1537);
    int _t1553#1 = ISub(_t1551,_t154F);
    int[] _t1555#1 = Range(_t154D,_t1553);
    femData:MeshCell[] _t1557#1 = <femData:MeshCell[]>{};
  FOREACH155A:  preds = [ASSIGN1558,NEXT1560]
    foreach (_t1559 in _t1555) on exit goto ASSIGN1562
      femData:MeshCell[] _t155E#1 = phi(_t1557,_t155D)
    femData:MeshCell _t155B#1 = LoadFem<femData:MeshCell>(a1537,_t1559);
    femData:MeshCell[] _t155D#1 = Append<femData:MeshCell>(_t155E,_t155B);
    goto FOREACH155A
  ASSIGN1562:  preds = [FOREACH155A]
    femData:Space b1561#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1539,a1537);
    femData:FemFunc c1563#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal153B,b1561);
    femData:Space _t1565#2 = ExtractFem<femData:Space,femData:FemFunc>(c1563);
    femData:Mesh _t1567#1 = ExtractFem<femData:Mesh,femData:Space>(_t1565);
    image(IMAGE1D<double[3]>) I1569#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t156B#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img156D#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1569);
    tensor[3] op1_e3_l_21570#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1541,camEye153F);
    real op1_e3_l_41571#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21570,op1_e3_l_21570);
    real camDist156F#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41571);
    globals.camDist14F0 = camDist156F;
    real op1_e3_l_9157A#6 = λ(T0[])<(1) / ( T0)> (camDist156F);
    tensor[3] camN1576#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21570,op1_e3_l_9157A);
    globals.camN14F1 = camN1576;
    tensor[3,3] op1_e3_l_151585#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1543);
    tensor[3] op1_e3_l_171587#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21570,op1_e3_l_151585);
    real op1_e3_l_341588#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171587,op1_e3_l_171587);
    real op1_e3_l_351589#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_9157A,op1_e3_l_9157A,op1_e3_l_341588);
    real op1_e3_l_36158A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351589);
    tensor[3] op1_e3_l_37158B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_171587);
    real op1_e3_l_38158C#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_36158A);
    tensor[3] camU1581#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_37158B,op1_e3_l_38158C);
    globals.camU14F2 = camU1581;
    tensor[3,3] op1_e3_l_4515A4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21570);
    tensor[3] op1_e3_l_4715A5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171587,op1_e3_l_4515A4);
    tensor[3] op1_e3_l_5015A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_9157A,op1_e3_l_4715A5);
    tensor[3] camV159A#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38158C,op1_e3_l_9157A,op1_e3_l_5015A7);
    globals.camV14F3 = camV159A;
    real _t15B7#1 = 0.314159265358979323846264338327950288e1;
    real _t15B9#1 = 0.36e3;
    real op1_e3_l_515BC#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1545,_t15B7);
    real op1_e3_l_615BD#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B9,op1_e3_l_515BC);
    real op1_e3_l_1015C0#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615BD);
    real camVmax15BB#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015C0,camDist156F);
    globals.camVmax14F4 = camVmax15BB;
    real _t15CA#1 = IntToReal(iresU1547);
    real _t15CC#1 = IntToReal(iresV1549);
    real op1_e3_l_1415D5#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15CA,op1_e3_l_1015C0,camDist156F);
    real camUmax15CE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15CC,op1_e3_l_1415D5);
    globals.camUmax14F5 = camUmax15CE;
    tensor[3,3] _t15DF#1 = <tensor[3,3]>[camU1581,camV159A,camN1576];
    real op1_e3_l_315E2#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp154B);
    real op1_e3_l_415E3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315E2);
    real op1_e3_l_515E4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415E3);
    tensor[3] op1_e3_l_615E5#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15DF,lightVsp154B);
    tensor[3] light15E1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515E4,op1_e3_l_615E5);
    globals.light14F6 = light15E1;
    globals._t14F7 = _t1567;
    globals._tX14F8 = _t1565;
    globals.c14F9 = c1563;
    globals.img14FA = img156D;
    globals._tXX14FB = _t156B;
    globals.I1A8A = I1569;
    return
## strand
  strand raycast (int ui15F2#2, int vi15F3#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15FE:  preds = []
        int iresU15FF#1 = globals.iresU14E4;
        int iresV1601#1 = globals.iresV14E5;
        real camNear1603#1 = globals.camNear14E6;
        real camDist1605#1 = globals.camDist14F0;
        tensor[3] camN1607#1 = globals.camN14F1;
        tensor[3] camU1609#1 = globals.camU14F2;
        tensor[3] camV160B#1 = globals.camV14F3;
        real camVmax160D#4 = globals.camVmax14F4;
        real camUmax160F#2 = globals.camUmax14F5;
        real _t1611#5 = -0.5e0;
        real _t1613#1 = IntToReal(ui15F2);
        real _t1615#1 = IntToReal(iresU15FF);
        real _t1617#3 = 0.5e0;
        real op1_e3_l_6161A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1615,_t1617);
        real op1_e3_l_7161B#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1613);
        real op1_e3_l_8161C#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6161A);
        real op1_e3_l_9161D#2 = λ(T0[])<Neg(T0)> (camUmax160F);
        real op1_e3_l_10161E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7161B,op1_e3_l_8161C);
        real op1_e3_l_11161F#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax160F,op1_e3_l_9161D);
        real op1_e3_l_131620#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10161E,op1_e3_l_11161F);
        real rayU1619#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9161D,op1_e3_l_131620);
        real _t1629#1 = IntToReal(vi15F3);
        real _t162B#2 = IntToReal(iresV1601);
        real op1_e3_l_6162E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t162B,_t1617);
        real op1_e3_l_7162F#2 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,_t1629);
        real op1_e3_l_81630#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_6162E);
        real op1_e3_l_91631#1 = λ(T0[])<Neg(T0)> (camVmax160D);
        real op1_e3_l_101632#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_81630);
        real op1_e3_l_111633#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax160D,op1_e3_l_91631);
        real op1_e3_l_121634#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101632,op1_e3_l_111633);
        real rayV162D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_121634);
        real op1_e3_l_251646#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1617,_t162B);
        real op1_e3_l_271648#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1611,op1_e3_l_251646);
        real op1_e3_l_29164A#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7162F,op1_e3_l_271648);
        real op1_e3_l_31164C#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_29164A,op1_e3_l_111633);
        real op1_e3_l_32164D#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax160D,op1_e3_l_31164C);
        tensor[3] op1_e3_l_33164E#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1609,rayU1619);
        tensor[3] op1_e3_l_34164F#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV160B,op1_e3_l_32164D);
        tensor[3] op1_e3_l_351650#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33164E,op1_e3_l_34164F);
        tensor[3] op1_e3_l_361651#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1605,op1_e3_l_351650);
        tensor[3] rayVec163D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1607,op1_e3_l_361651);
        real transp1667#1 = 0.1e1;
        real _t1669#8 = 0.e0;
        tensor[3] rgb166B#1 = <tensor[3]>[_t1669,_t1669,_t1669];
        tensor[4] rgba166D#1 = <tensor[4]>[_t1669,_t1669,_t1669,_t1669];
        self.rayU = rayU1619;
        self.rayV = rayV162D;
        self.rayN = camNear1603;
        self.rayVec = rayVec163D;
        self.transp = transp1667;
        self.rgb = rgb166B;
        self.rgba = rgba166D;
        self.gray = _t1669;
        self.ui = ui15F2;
        self.vi = vi15F3;
        return
    end state init
    method update
        ENTRY167A:  preds = []
          image(IMAGE1D<double[3]>) I1A8B#5 = globals.I1A8A;
          real isoval167B#1 = globals.isoval14DE;
          femData:Mesh _t167D#9 = globals._t14F7;
          femData:Space _t167F#3 = globals._tX14F8;
          femData:FemFunc c1681#3 = globals.c14F9;
          image(IMAGE1D<double[3]>) img1683#1 = globals.img14FA;
          kernel _t1685#1 = globals._tXX14FB;
          femData:Mesh a1687#1 = globals.a14DB;
          real thick1689#1 = globals.thick14DF;
          tensor[3] camEye168B#1 = globals.camEye14E0;
          real camNear168D#2 = globals.camNear14E6;
          real camFar168F#2 = globals.camFar14E7;
          real refStep1691#1 = globals.refStep14E8;
          real rayStep1693#2 = globals.rayStep14E9;
          real phongKa1695#1 = globals.phongKa14EB;
          real phongKd1697#1 = globals.phongKd14EC;
          bool debug1699#1 = globals.debug14ED;
          int su169B#1 = globals.su14EE;
          int sv169D#1 = globals.sv14EF;
          tensor[3] light169F#1 = globals.light14F6;
          real rayN16A1#4 = self.rayN;
          tensor[3] rayVec16A3#2 = self.rayVec;
          real transp16A5#10 = self.transp;
          tensor[3] rgb16A7#9 = self.rgb;
          int ui16A9#1 = self.ui;
          int vi16AB#1 = self.vi;
          if debug1699 then goto ASSIGN16AF else goto JOIN16B9
        ASSIGN16AF:  preds = [COND16AD]
          bool _t16AE#1 = NEQ<int>(ui16A9,su169B);
          if _t16AE then goto ASSIGN16B2 else goto ASSIGN1A32
        ASSIGN16B2:  preds = [COND16B0]
          bool _t16B1#1 = true;
          goto JOIN16B5
        JOIN16B5:  preds = [ASSIGN16B2,ASSIGN1A32]
          bool _t16B3#1 = phi(_t16B1,_t16B4)
          if _t16B3 then goto STABILIZE16B7 else goto JOIN16B8
        STABILIZE16B7:  preds = [COND16B6]
          stabilize
          goto JOIN16B8
        JOIN16B8:  preds = [*STABILIZE16B7,COND16B6]
          goto JOIN16B9
        JOIN16B9:  preds = [JOIN16B8,COND16AD]
          tensor[3] op1_e3_l_316BB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN16A1,rayVec16A3);
          tensor[3] x16BA#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye168B,op1_e3_l_316BB);
          real _t16BE#8 = 0.e0;
          real _t16C0#2 = TensorIndex<tensor[3],[0]>(x16BA);
          bool _t16C2#1 = LT<real>(_t16BE,_t16C0);
          if _t16C2 then goto ASSIGN16C6 else goto JOIN1A14
        ASSIGN16C6:  preds = [COND16C4]
          real _t16C5#11 = 0.1e1;
          bool _t16C7#1 = LT<real>(_t16C0,_t16C5);
          if _t16C7 then goto ASSIGN16CB else goto JOIN1A11
        ASSIGN16CB:  preds = [COND16C9]
          real _t16CA#2 = TensorIndex<tensor[3],[1]>(x16BA);
          bool _t16CC#1 = LT<real>(_t16BE,_t16CA);
          if _t16CC then goto ASSIGN16D0 else goto JOIN1A0E
        ASSIGN16D0:  preds = [COND16CE]
          bool _t16CF#1 = LT<real>(_t16CA,_t16C5);
          if _t16CF then goto ASSIGN16D3 else goto JOIN1A0B
        ASSIGN16D3:  preds = [COND16D1]
          real _t16D2#2 = TensorIndex<tensor[3],[2]>(x16BA);
          bool _t16D4#1 = LT<real>(_t16BE,_t16D2);
          if _t16D4 then goto ASSIGN16D8 else goto JOIN1A08
        ASSIGN16D8:  preds = [COND16D6]
          bool _t16D7#1 = LT<real>(_t16D2,_t16C5);
          if _t16D7 then goto ASSIGN180C else goto JOIN1A05
        ASSIGN180C:  preds = [COND16D9]
          femData:MeshPos p180B#1 = findPos16DA (a1687,x16BA);
          bool _t180D#1 = ExtractFemItem<bool,Valid(MeshPos)>(p180B);
          if _t180D then goto ASSIGN1811 else goto ASSIGN1A2D
        ASSIGN1811:  preds = [COND180F]
          real _t1810#1 = 0.13e1;
          femData:MeshPos callFindPos1832#2 = findPos16DA (_t167D,x16BA);
          int intPos1833#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1832);
          tensor[3] refPos1834#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1832);
          int[10] femIndicies1839#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t167F,intPos1833);
          tensor[10] femDofs183A#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1681,femIndicies1839);
          tensor[10] basisResult183B#1 = EvaluateBasis<BasisArray(10)>(refPos1834);
          real compositionl1814#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult183B,refPos1834);
          real op1_e3_l_231815#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval167B,compositionl1814);
          tensor[3,10] basisResult1842#1 = EvaluateBasis<BasisArray(3,10)>(refPos1834);
          tensor[3] compositionl1817#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t167D,_t167F,c1681,x16BA,femDofs183A,basisResult1842,refPos1834);
          int[4] femIndicies1844#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t167D,intPos1833);
          tensor[4,3] femDofs1845#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t167D,femIndicies1844);
          tensor[3,4] basisResult1846#4 = EvaluateBasis<BasisArray(3,4)>(refPos1834);
          tensor[3,3] probe_l_251818#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3,3] op1_e3_l_271819#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818);
          tensor[3,3,3] op1_e3_l_28181A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251818,op1_e3_l_271819);
          tensor[3] probe_l_29181B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_30181C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3] probe_l_31181D#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t167D,x16BA,femDofs1845,basisResult1846,refPos1834);
          tensor[3,3] op1_e3_l_32181E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_31181D);
          tensor[3] op1_e3_l_33181F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_30181C,op1_e3_l_32181E);
          real op1_e3_l_341820#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_29181B,op1_e3_l_33181F);
          tensor[3,3] op1_e3_l_351821#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_28181A);
          real op1_e3_l_361822#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341820);
          tensor[3,3] op1_e3_l_371823#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351821,op1_e3_l_361822);
          tensor[3] op1_e3_l_381824#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1817,op1_e3_l_371823);
          tensor[3] op1_e3_l_541828#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381824);
          real op1_e3_l_56182A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541828,op1_e3_l_541828);
          real op1_e3_l_57182B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_56182A);
          real op1_e3_l_58182C#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231815);
          real op1_e3_l_59182D#1 = λ(T0[],T1[])<(T0 * T1)> (thick1689,op1_e3_l_57182B);
          real op1_e3_l_60182E#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_58182C,op1_e3_l_59182D);
          real op1_e3_l_61182F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_60182E);
          real op1_e3_l_621830#2 = λ(T0[],T1[])<(T0 * T1)> (_t1810,op1_e3_l_61182F);
          real op1_e3_l_631831#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16BE,_t16C5,op1_e3_l_621830);
          real a1812#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_631831);
          bool _t1896#1 = GT<real>(a1812,_t16BE);
          if _t1896 then goto ASSIGN1AB2 else goto JOIN19FF
        ASSIGN1AB2:  preds = [COND1898]
          real op1_e3_l_6418B8#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16C5,_t16BE,op1_e3_l_621830);
          real op1_e3_l_6518B9#1 = λ(T0[],T1[])<(T0 * T1)> (_t16C5,op1_e3_l_6418B8);
          real _t1899#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_6518B9);
          real op1_e3_l_31920#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec16A3);
          real op1_e3_l_41921#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31920);
          real op1_e3_l_51922#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1693,op1_e3_l_41921);
          real _t191F#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1691,op1_e3_l_51922);
          real _t1927#1 = MathFn<pow>(_t1899,_t191F);
          real _t1929#2 = 0.11e1;
          real _t192B#1 = 0.7e0;
          real op1_e3_l_671948#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_57182B);
          real op1_e3_l_681949#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light169F,op1_e3_l_541828);
          real _t192D#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671948,op1_e3_l_681949);
          real shade19AB#1 = Max<real>(_t16BE,_t192D);
          real _t19AD#2 = λ(T0[])<T0> (compositionl1814);
          real op1_e3_l_1519C8#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,rayN16A1);
          real op1_e3_l_1619C9#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear168D,camFar168F);
          real op1_e3_l_1719CA#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C8,op1_e3_l_1619C9);
          real op1_e3_l_1819CB#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1929,_t192B);
          real op1_e3_l_1919CC#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719CA,op1_e3_l_1819CB);
          real op1_e3_l_2019CD#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1697,shade19AB);
          real Mtransform19D3#2 = Transform<IMAGE1D<double[3]>>(I1A8B);
          real MxPos19D4#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19D3,_t19AD);
          real Ttranslate19D5#1 = Translate<IMAGE1D<double[3]>>(I1A8B);
          real imgPos19D6#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19D4,Ttranslate19D5);
          real nd19D7#2 = Floor<1>(imgPos19D6);
          real f19D8#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19D6,nd19D7);
          int n19D9#1 = RealToInt<1>(nd19D7);
          int idx19DB#3 = n19D9;
          bool isInside1ABD#1 = IndexInside<IMAGE1D<double[3]>,2>(idx19DB,I1A8B);
          if isInside1ABD then goto ASSIGN1ABE else goto ASSIGN1ABF
        ASSIGN1ABE:  preds = [COND1AC1]
          tensor[3,2] ldvox1ABB#1 = LoadVoxels<IMAGE1D<double[3]>,2>(I1A8B,idx19DB);
          goto JOIN1AC2
        JOIN1AC2:  preds = [ASSIGN1ABE,ASSIGN1ABF]
          tensor[3,2] ldvox19DC#1 = phi(ldvox1ABB,ldvox1ABC)
          tensor[2] kernX_19DD#1 = BuildPos<1>(f19D8);
          tensor[2] kevalX_d0_19DE#1 = EvalKernel<2,tent,0>(kernX_19DD);
          tensor[3] probe_l_2119CE#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1683,_t1685,_t19AD,Mtransform19D3,ldvox19DC,kevalX_d0_19DE);
          real op1_e3_l_2219CF#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,_t1927);
          real op1_e3_l_2319D0#1 = λ(T0[],T1[])<(T0 + T1)> (_t1929,op1_e3_l_1919CC);
          real op1_e3_l_2419D1#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1695,op1_e3_l_2019CD);
          tensor[3] op1_e3_l_2519D2#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp16A5,probe_l_2119CE,op1_e3_l_2219CF,op1_e3_l_2319D0,op1_e3_l_2419D1);
          tensor[3] rgb19C7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb16A7,op1_e3_l_2519D2);
          real op1_e3_l_519F9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16C5,op1_e3_l_2219CF);
          real transp19F7#1 = λ(T0[],T1[])<(T0 * T1)> (transp16A5,op1_e3_l_519F9);
          goto JOIN19FF
        JOIN19FF:  preds = [ASSIGN19FC,COND1898]
          tensor[3] rgb19FD#1 = phi(rgb19C7,rgb16A7)
          real transp19FE#1 = phi(transp19F7,transp16A5)
          goto JOIN1A02
        JOIN1A02:  preds = [JOIN19FF,MASSIGN1A31]
          tensor[3] rgb1A00#1 = phi(rgb19FD,rgb16A7)
          real transp1A01#1 = phi(transp19FE,transp16A5)
          goto JOIN1A05
        JOIN1A05:  preds = [JOIN1A02,COND16D9]
          tensor[3] rgb1A03#1 = phi(rgb1A00,rgb16A7)
          real transp1A04#1 = phi(transp1A01,transp16A5)
          goto JOIN1A08
        JOIN1A08:  preds = [JOIN1A05,COND16D6]
          tensor[3] rgb1A06#1 = phi(rgb1A03,rgb16A7)
          real transp1A07#1 = phi(transp1A04,transp16A5)
          goto JOIN1A0B
        JOIN1A0B:  preds = [JOIN1A08,COND16D1]
          tensor[3] rgb1A09#1 = phi(rgb1A06,rgb16A7)
          real transp1A0A#1 = phi(transp1A07,transp16A5)
          goto JOIN1A0E
        JOIN1A0E:  preds = [JOIN1A0B,COND16CE]
          tensor[3] rgb1A0C#1 = phi(rgb1A09,rgb16A7)
          real transp1A0D#1 = phi(transp1A0A,transp16A5)
          goto JOIN1A11
        JOIN1A11:  preds = [JOIN1A0E,COND16C9]
          tensor[3] rgb1A0F#1 = phi(rgb1A0C,rgb16A7)
          real transp1A10#1 = phi(transp1A0D,transp16A5)
          goto JOIN1A14
        JOIN1A14:  preds = [JOIN1A11,COND16C4]
          tensor[3] rgb1A12#3 = phi(rgb1A0F,rgb16A7)
          real transp1A13#2 = phi(transp1A10,transp16A5)
          real _t1A15#1 = 0.1e-1;
          bool _t1A17#1 = LT<real>(transp1A13,_t1A15);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1E
        SAVE1A1A:  preds = [COND1A19]
          self.transp = _t16BE;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A1E
        JOIN1A1E:  preds = [*STABILIZE1A1C,COND1A19]
          real transp1A1D#2 = phi(transp1A13)
          bool _t1A1F#1 = GT<real>(rayN16A1,camFar168F);
          if _t1A1F then goto SAVE1A22 else goto JOIN1A25
        SAVE1A22:  preds = [COND1A21]
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          stabilize
          goto JOIN1A25
        JOIN1A25:  preds = [*STABILIZE1A24,COND1A21]
          real rayN1A26#1 = λ(T0[],T1[])<(T0 + T1)> (rayN16A1,rayStep1693);
          self.rayN = rayN1A26;
          self.transp = transp1A1D;
          self.rgb = rgb1A12;
          active
        ASSIGN1ABF:  preds = [COND1AC1]
          tensor[3,2] ldvox1ABC#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A8B,idx19DB);
          goto JOIN1AC2
        ASSIGN1A2D:  preds = [COND180F]
          string _t1A2C#1 = "\n";
          Print<[tensor[3],string]>(x16BA,_t1A2C);
          string _t1A2F#1 = "wait what\?\n";
          Print<[string]>(_t1A2F);
          goto JOIN1A02
        ASSIGN1A32:  preds = [COND16B0]
          bool _t16B4#1 = NEQ<int>(vi16AB,sv169D);
          goto JOIN16B5
    end update
    method stabilize
        ENTRY1A33:  preds = []
          bool debug1A34#1 = globals.debug14ED;
          int su1A36#1 = globals.su14EE;
          int sv1A38#1 = globals.sv14EF;
          real transp1A3A#1 = self.transp;
          tensor[3] rgb1A3C#3 = self.rgb;
          tensor[4] rgba1A3E#1 = self.rgba;
          int ui1A40#1 = self.ui;
          int vi1A42#1 = self.vi;
          real _t1A44#1 = 0.1e1;
          real a1A46#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A44,transp1A3A);
          real _t1A48#1 = 0.e0;
          bool _t1A4A#1 = GT<real>(a1A46,_t1A48);
          if _t1A4A then goto ASSIGN1A4E else goto JOIN1A62
        ASSIGN1A4E:  preds = [COND1A4C]
          real _t1A4D#1 = TensorIndex<tensor[3],[0]>(rgb1A3C);
          real _t1A4F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4D,a1A46);
          real _t1A53#1 = TensorIndex<tensor[3],[1]>(rgb1A3C);
          real _t1A55#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A53,a1A46);
          real _t1A59#1 = TensorIndex<tensor[3],[2]>(rgb1A3C);
          real _t1A5B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A59,a1A46);
          tensor[4] rgba1A5F#1 = <tensor[4]>[_t1A4F,_t1A55,_t1A5B,a1A46];
          goto JOIN1A62
        JOIN1A62:  preds = [ASSIGN1A60,COND1A4C]
          tensor[4] rgba1A61#2 = phi(rgba1A5F,rgba1A3E)
          bool _t1A63#1 = EQ<int>(ui1A40,su1A36);
          if _t1A63 then goto ASSIGN1A67 else goto JOIN1A6D
        ASSIGN1A67:  preds = [COND1A65]
          bool _t1A66#1 = EQ<int>(vi1A42,sv1A38);
          if _t1A66 then goto COND1A69 else goto JOIN1A6C
        COND1A69:  preds = [COND1A68]
          if debug1A34 then goto MASSIGN1A6A else goto JOIN1A6B
        MASSIGN1A6A:  preds = [COND1A69]
          Print<[real,tensor[4]]>(a1A46,rgba1A61);
          goto JOIN1A6B
        JOIN1A6B:  preds = [MASSIGN1A6A,COND1A69]
          goto JOIN1A6C
        JOIN1A6C:  preds = [JOIN1A6B,COND1A68]
          goto JOIN1A6D
        JOIN1A6D:  preds = [JOIN1A6C,COND1A65]
          self.rgba = rgba1A61;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A70:  preds = []
      int iresU1A71#1 = globals.iresU14E4;
      int iresV1A73#1 = globals.iresV14E5;
      int _t1A75#2 = 0;
      int _t1A77#2 = 1;
      int _t1A79#1 = ISub(iresV1A73,_t1A77);
      int[] _t1A7B#1 = Range(_t1A75,_t1A79);
    FOREACH1A7E:  preds = [ASSIGN1A7C,NEXT1A87]
      foreach (vi1A7D in _t1A7B) on exit goto RETURN1A88
      int _t1A7F#1 = ISub(iresU1A71,_t1A77);
      int[] _t1A81#1 = Range(_t1A75,_t1A7F);
    FOREACH1A84:  preds = [ASSIGN1A82,NEXT1A86]
      foreach (ui1A83 in _t1A81) on exit goto NEXT1A87
      new raycast(ui1A83,vi1A7D);
      goto FOREACH1A84
    NEXT1A87:  preds = [FOREACH1A84]
      goto FOREACH1A7E
    RETURN1A88:  preds = [FOREACH1A7E]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AC3 (a) = <no-default>
  input 0b043B_intermedateGlobal1AC4 (b) = <no-default>
  input 0c043D_intermedateGlobal1AC5 (c) = <no-default>
  input isoval1AC6 (isoval) = <default>
  input thick1AC7 (thick) = <default>
  input camEye1AC8 (camEye) = <default>
  input camAt1AC9 (camAt) = <default>
  input camUp1ACA (camUp) = <default>
  input camFOV1ACB (camFOV) = <default>
  input iresU1ACC (iresU) = <default>
  input iresV1ACD (iresV) = <default>
  input camNear1ACE (camNear) = <default>
  input camFar1ACF (camFar) = <default>
  input refStep1AD0 (refStep) = <default>
  input rayStep1AD1 (rayStep) = <default>
  input lightVsp1AD2 (lightVsp) = <default>
  input phongKa1AD3 (phongKa) = <default>
  input phongKd1AD4 (phongKd) = <default>
  input debug1AD5 (debug) = <default>
  input su1AD6 (su) = <default>
  input sv1AD7 (sv) = <default>
  global real camDist1AD8
  global tensor[3] camN1AD9
  global tensor[3] camU1ADA
  global tensor[3] camV1ADB
  global real camVmax1ADC
  global real camUmax1ADD
  global tensor[3] light1ADE
  global femData:Mesh _t1ADF
  global femData:Space _tX1AE0
  global femData:FemFunc c1AE1
  global image(IMAGE1D<double[3]>) img1AE2
  global int _tXX1AE3
  global image(IMAGE1D<double[3]>) I1AE4
## functions
  function femData:MeshPos findPos1DA1 (femData:Mesh mesh1DA2#19, tensor[3] pos1DA3#4) {
    ENTRY1DA4:  preds = []
      real _t1DA5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1DA7#4 = <tensor[3]>[_t1DA5,_t1DA5,_t1DA5];
      int newtonInt1DA9#1 = 0;
      int[] yayCells1DAB#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1DA2,pos1DA3);
    FOREACH1DAE:  preds = [ASSIGN1DAC,NEXT24E3]
      foreach (cellItter1DAD in yayCells1DAB) on exit goto ASSIGN24E5
        tensor[3] xn24E2#1 = phi(xn1DA7,xn2383)
      int _t1DAF#1 = 2;
      int[] _t1DB1#1 = Range(newtonInt1DA9,_t1DAF);
    FOREACH1DB4:  preds = [ASSIGN1DB2,NEXT24E1]
      foreach (newtonItter1DB3 in _t1DB1) on exit goto NEXT24E3
        tensor[3] xn2383#5 = phi(xn24E2,xn2447)
      int ilit1DB6#1 = 4;
      int mulRes1DB7#4 = IMul(cellItter1DAD,ilit1DB6);
      int ilit1DB8#1 = 0;
      int addRes1DB9#1 = IAdd(mulRes1DB7,ilit1DB8);
      int idx1DBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DB9);
      int ilit1DBB#1 = 1;
      int addRes1DBC#1 = IAdd(mulRes1DB7,ilit1DBB);
      int idx1DBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBC);
      int ilit1DBE#1 = 2;
      int addRes1DBF#1 = IAdd(mulRes1DB7,ilit1DBE);
      int idx1DC0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBF);
      int ilit1DC1#1 = 3;
      int addRes1DC2#1 = IAdd(mulRes1DB7,ilit1DC1);
      int idx1DC3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DC2);
      int[4] seq1DC4#1 = <int[4]>{idx1DBA,idx1DBD,idx1DC0,idx1DC3};
      int[4] femIndicies1DB5#4 = seq1DC4;
      int ilit1DD6#5 = 0;
      int ilit1DD7#5 = 3;
      int idx1DD8#1 = Subscript<int>(femIndicies1DB5,ilit1DD6);
      int mulRes1DD9#3 = IMul(ilit1DD7,idx1DD8);
      int addRes1DDA#1 = IAdd(ilit1DD6,mulRes1DD9);
      int ilit1DDB#5 = 1;
      int addRes1DDC#1 = IAdd(ilit1DDB,mulRes1DD9);
      int ilit1DDD#5 = 2;
      int addRes1DDE#1 = IAdd(ilit1DDD,mulRes1DD9);
      real dof_load1DDF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDA);
      real dof_load1DE0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDC);
      real dof_load1DE1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDE);
      tensor[3] interCons1DE2#1 = <tensor[3]>[dof_load1DDF,dof_load1DE0,dof_load1DE1];
      int idx1DE3#1 = Subscript<int>(femIndicies1DB5,ilit1DDB);
      int mulRes1DE4#3 = IMul(ilit1DD7,idx1DE3);
      int addRes1DE5#1 = IAdd(ilit1DD6,mulRes1DE4);
      int addRes1DE6#1 = IAdd(ilit1DDB,mulRes1DE4);
      int addRes1DE7#1 = IAdd(ilit1DDD,mulRes1DE4);
      real dof_load1DE8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE5);
      real dof_load1DE9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE6);
      real dof_load1DEA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE7);
      tensor[3] interCons1DEB#1 = <tensor[3]>[dof_load1DE8,dof_load1DE9,dof_load1DEA];
      int idx1DEC#1 = Subscript<int>(femIndicies1DB5,ilit1DDD);
      int mulRes1DED#3 = IMul(ilit1DD7,idx1DEC);
      int addRes1DEE#1 = IAdd(ilit1DD6,mulRes1DED);
      int addRes1DEF#1 = IAdd(ilit1DDB,mulRes1DED);
      int addRes1DF0#1 = IAdd(ilit1DDD,mulRes1DED);
      real dof_load1DF1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEE);
      real dof_load1DF2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEF);
      real dof_load1DF3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF0);
      tensor[3] interCons1DF4#1 = <tensor[3]>[dof_load1DF1,dof_load1DF2,dof_load1DF3];
      int idx1DF5#1 = Subscript<int>(femIndicies1DB5,ilit1DD7);
      int mulRes1DF6#3 = IMul(ilit1DD7,idx1DF5);
      int addRes1DF7#1 = IAdd(ilit1DD6,mulRes1DF6);
      int addRes1DF8#1 = IAdd(ilit1DDB,mulRes1DF6);
      int addRes1DF9#1 = IAdd(ilit1DDD,mulRes1DF6);
      real dof_load1DFA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF7);
      real dof_load1DFB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF8);
      real dof_load1DFC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF9);
      tensor[3] interCons1DFD#1 = <tensor[3]>[dof_load1DFA,dof_load1DFB,dof_load1DFC];
      tensor[4,3] dofs1DFE#1 = <tensor[4,3]>[interCons1DE2,interCons1DEB,interCons1DF4,interCons1DFD];
      tensor[4,3] femDofs1DD5#72 = dofs1DFE;
      real varAcc1E2A#0 = VIndex<3,0>(xn1DA7);
      real varAcc1E2B#0 = VIndex<3,1>(xn1DA7);
      real varAcc1E2C#0 = VIndex<3,2>(xn1DA7);
      real coeff1E2D#1 = -0.1e1;
      real one1E2E#4 = 0.1e1;
      real prod1E2F#1 = RMul(one1E2E,one1E2E);
      real prod1E30#2 = RMul(one1E2E,prod1E2F);
      real basisEval1E31#3 = RMul(coeff1E2D,prod1E30);
      real basisEval1E32#3 = RMul(one1E2E,prod1E30);
      real basisEval1E33#6 = 0.e0;
      tensor[4] intermediateCons1E34#1 = <tensor[4]>[basisEval1E31,basisEval1E32,basisEval1E33,basisEval1E33];
      tensor[4] intermediateCons1E35#1 = <tensor[4]>[basisEval1E31,basisEval1E33,basisEval1E32,basisEval1E33];
      tensor[4] intermediateCons1E36#1 = <tensor[4]>[basisEval1E31,basisEval1E33,basisEval1E33,basisEval1E32];
      tensor[3,4] intermediateCons1E37#1 = <tensor[3,4]>[intermediateCons1E34,intermediateCons1E35,intermediateCons1E36];
      tensor[3,4] basisResult1E29#24 = intermediateCons1E37;
      real r1E48#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r1E49#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult1E29);
      real r1E4A#1 = RMul(r1E48,r1E49);
      real r1E4B#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r1E4C#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult1E29);
      real r1E4D#1 = RMul(r1E4B,r1E4C);
      real r1E4E#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r1E4F#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult1E29);
      real r1E50#1 = RMul(r1E4E,r1E4F);
      real r1E51#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r1E52#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult1E29);
      real r1E53#1 = RMul(r1E51,r1E52);
      real r1E54#1 = RAdd(r1E4A,r1E4D);
      real r1E55#1 = RAdd(r1E54,r1E50);
      real r1E56#1 = RAdd(r1E55,r1E53);
      real r1E57#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult1E29);
      real r1E58#1 = RMul(r1E48,r1E57);
      real r1E59#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult1E29);
      real r1E5A#1 = RMul(r1E4B,r1E59);
      real r1E5B#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult1E29);
      real r1E5C#1 = RMul(r1E4E,r1E5B);
      real r1E5D#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult1E29);
      real r1E5E#1 = RMul(r1E51,r1E5D);
      real r1E5F#1 = RAdd(r1E58,r1E5A);
      real r1E60#1 = RAdd(r1E5F,r1E5C);
      real r1E61#1 = RAdd(r1E60,r1E5E);
      real r1E62#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult1E29);
      real r1E63#1 = RMul(r1E48,r1E62);
      real r1E64#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult1E29);
      real r1E65#1 = RMul(r1E4B,r1E64);
      real r1E66#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult1E29);
      real r1E67#1 = RMul(r1E4E,r1E66);
      real r1E68#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult1E29);
      real r1E69#1 = RMul(r1E51,r1E68);
      real r1E6A#1 = RAdd(r1E63,r1E65);
      real r1E6B#1 = RAdd(r1E6A,r1E67);
      real r1E6C#1 = RAdd(r1E6B,r1E69);
      tensor[3] tensor1E6D#1 = <tensor[3]>[r1E56,r1E61,r1E6C];
      real r1E6E#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r1E6F#1 = RMul(r1E6E,r1E49);
      real r1E70#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r1E71#1 = RMul(r1E70,r1E4C);
      real r1E72#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r1E73#1 = RMul(r1E72,r1E4F);
      real r1E74#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r1E75#1 = RMul(r1E74,r1E52);
      real r1E76#1 = RAdd(r1E6F,r1E71);
      real r1E77#1 = RAdd(r1E76,r1E73);
      real r1E78#1 = RAdd(r1E77,r1E75);
      real r1E79#1 = RMul(r1E6E,r1E57);
      real r1E7A#1 = RMul(r1E70,r1E59);
      real r1E7B#1 = RMul(r1E72,r1E5B);
      real r1E7C#1 = RMul(r1E74,r1E5D);
      real r1E7D#1 = RAdd(r1E79,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#1 = RAdd(r1E7E,r1E7C);
      real r1E80#1 = RMul(r1E6E,r1E62);
      real r1E81#1 = RMul(r1E70,r1E64);
      real r1E82#1 = RMul(r1E72,r1E66);
      real r1E83#1 = RMul(r1E74,r1E68);
      real r1E84#1 = RAdd(r1E80,r1E81);
      real r1E85#1 = RAdd(r1E84,r1E82);
      real r1E86#1 = RAdd(r1E85,r1E83);
      tensor[3] tensor1E87#1 = <tensor[3]>[r1E78,r1E7F,r1E86];
      real r1E88#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r1E89#1 = RMul(r1E88,r1E49);
      real r1E8A#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r1E8B#1 = RMul(r1E8A,r1E4C);
      real r1E8C#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r1E8D#1 = RMul(r1E8C,r1E4F);
      real r1E8E#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r1E8F#1 = RMul(r1E8E,r1E52);
      real r1E90#1 = RAdd(r1E89,r1E8B);
      real r1E91#1 = RAdd(r1E90,r1E8D);
      real r1E92#1 = RAdd(r1E91,r1E8F);
      real r1E93#1 = RMul(r1E88,r1E57);
      real r1E94#1 = RMul(r1E8A,r1E59);
      real r1E95#1 = RMul(r1E8C,r1E5B);
      real r1E96#1 = RMul(r1E8E,r1E5D);
      real r1E97#1 = RAdd(r1E93,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#1 = RAdd(r1E98,r1E96);
      real r1E9A#1 = RMul(r1E88,r1E62);
      real r1E9B#1 = RMul(r1E8A,r1E64);
      real r1E9C#1 = RMul(r1E8C,r1E66);
      real r1E9D#1 = RMul(r1E8E,r1E68);
      real r1E9E#1 = RAdd(r1E9A,r1E9B);
      real r1E9F#1 = RAdd(r1E9E,r1E9C);
      real r1EA0#1 = RAdd(r1E9F,r1E9D);
      tensor[3] tensor1EA1#1 = <tensor[3]>[r1E92,r1E99,r1EA0];
      tensor[3,3] probe_l_101E47#18 = <tensor[3,3]>[tensor1E6D,tensor1E87,tensor1EA1];
      real realLit1EFF#9 = 0.e0;
      real r1F00#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_101E47);
      real r1F01#3 = RMul(realLit1EFF,r1F00);
      real r1F02#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_101E47);
      real r1F03#3 = RMul(realLit1EFF,r1F02);
      real r1F04#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_101E47);
      real r1F05#5 = RMul(realLit1EFF,r1F04);
      real r1F06#3 = RAdd(r1F01,r1F03);
      real r1F07#1 = RAdd(r1F06,r1F05);
      real r1F08#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_101E47);
      real r1F09#3 = RMul(realLit1EFF,r1F08);
      real r1F0A#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_101E47);
      real r1F0B#3 = RMul(realLit1EFF,r1F0A);
      real r1F0C#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_101E47);
      real r1F0D#5 = RMul(realLit1EFF,r1F0C);
      real r1F0E#3 = RAdd(r1F09,r1F0B);
      real r1F0F#1 = RAdd(r1F0E,r1F0D);
      real r1F10#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_101E47);
      real r1F11#3 = RMul(realLit1EFF,r1F10);
      real r1F12#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_101E47);
      real r1F13#3 = RMul(realLit1EFF,r1F12);
      real r1F14#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_101E47);
      real r1F15#5 = RMul(realLit1EFF,r1F14);
      real r1F16#3 = RAdd(r1F11,r1F13);
      real r1F17#1 = RAdd(r1F16,r1F15);
      tensor[3] tensor1F18#3 = <tensor[3]>[r1F07,r1F0F,r1F17];
      real realLit1F19#9 = -0.1e1;
      real r1F1A#1 = RMul(realLit1F19,r1F04);
      real r1F1B#1 = RAdd(r1F06,r1F1A);
      real r1F1C#1 = RMul(realLit1F19,r1F0C);
      real r1F1D#1 = RAdd(r1F0E,r1F1C);
      real r1F1E#1 = RMul(realLit1F19,r1F14);
      real r1F1F#1 = RAdd(r1F16,r1F1E);
      tensor[3] tensor1F20#1 = <tensor[3]>[r1F1B,r1F1D,r1F1F];
      real realLit1F21#9 = 0.1e1;
      real r1F22#1 = RMul(realLit1F21,r1F02);
      real r1F23#1 = RAdd(r1F01,r1F22);
      real r1F24#1 = RAdd(r1F23,r1F05);
      real r1F25#1 = RMul(realLit1F21,r1F0A);
      real r1F26#1 = RAdd(r1F09,r1F25);
      real r1F27#1 = RAdd(r1F26,r1F0D);
      real r1F28#1 = RMul(realLit1F21,r1F12);
      real r1F29#1 = RAdd(r1F11,r1F28);
      real r1F2A#1 = RAdd(r1F29,r1F15);
      tensor[3] tensor1F2B#1 = <tensor[3]>[r1F24,r1F27,r1F2A];
      tensor[3,3] tensor1F2C#1 = <tensor[3,3]>[tensor1F18,tensor1F20,tensor1F2B];
      real r1F2D#1 = RMul(realLit1F21,r1F04);
      real r1F2E#1 = RAdd(r1F06,r1F2D);
      real r1F2F#1 = RMul(realLit1F21,r1F0C);
      real r1F30#1 = RAdd(r1F0E,r1F2F);
      real r1F31#1 = RMul(realLit1F21,r1F14);
      real r1F32#1 = RAdd(r1F16,r1F31);
      tensor[3] tensor1F33#1 = <tensor[3]>[r1F2E,r1F30,r1F32];
      real r1F34#1 = RMul(realLit1F19,r1F00);
      real r1F35#1 = RAdd(r1F34,r1F03);
      real r1F36#1 = RAdd(r1F35,r1F05);
      real r1F37#1 = RMul(realLit1F19,r1F08);
      real r1F38#1 = RAdd(r1F37,r1F0B);
      real r1F39#1 = RAdd(r1F38,r1F0D);
      real r1F3A#1 = RMul(realLit1F19,r1F10);
      real r1F3B#1 = RAdd(r1F3A,r1F13);
      real r1F3C#1 = RAdd(r1F3B,r1F15);
      tensor[3] tensor1F3D#1 = <tensor[3]>[r1F36,r1F39,r1F3C];
      tensor[3,3] tensor1F3E#1 = <tensor[3,3]>[tensor1F33,tensor1F18,tensor1F3D];
      real r1F3F#1 = RMul(realLit1F19,r1F02);
      real r1F40#1 = RAdd(r1F01,r1F3F);
      real r1F41#1 = RAdd(r1F40,r1F05);
      real r1F42#1 = RMul(realLit1F19,r1F0A);
      real r1F43#1 = RAdd(r1F09,r1F42);
      real r1F44#1 = RAdd(r1F43,r1F0D);
      real r1F45#1 = RMul(realLit1F19,r1F12);
      real r1F46#1 = RAdd(r1F11,r1F45);
      real r1F47#1 = RAdd(r1F46,r1F15);
      tensor[3] tensor1F48#1 = <tensor[3]>[r1F41,r1F44,r1F47];
      real r1F49#1 = RMul(realLit1F21,r1F00);
      real r1F4A#1 = RAdd(r1F49,r1F03);
      real r1F4B#1 = RAdd(r1F4A,r1F05);
      real r1F4C#1 = RMul(realLit1F21,r1F08);
      real r1F4D#1 = RAdd(r1F4C,r1F0B);
      real r1F4E#1 = RAdd(r1F4D,r1F0D);
      real r1F4F#1 = RMul(realLit1F21,r1F10);
      real r1F50#1 = RAdd(r1F4F,r1F13);
      real r1F51#1 = RAdd(r1F50,r1F15);
      tensor[3] tensor1F52#1 = <tensor[3]>[r1F4B,r1F4E,r1F51];
      tensor[3,3] tensor1F53#1 = <tensor[3,3]>[tensor1F48,tensor1F52,tensor1F18];
      tensor[3,3,3] op1_e3_l_121EFE#27 = <tensor[3,3,3]>[tensor1F2C,tensor1F3E,tensor1F53];
      real r1FAC#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_101E47);
      real r1FAD#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_121EFE);
      real r1FAE#1 = RMul(r1FAC,r1FAD);
      real r1FAF#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_101E47);
      real r1FB0#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_121EFE);
      real r1FB1#1 = RMul(r1FAF,r1FB0);
      real r1FB2#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_101E47);
      real r1FB3#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_121EFE);
      real r1FB4#1 = RMul(r1FB2,r1FB3);
      real r1FB5#1 = RAdd(r1FAE,r1FB1);
      real r1FB6#1 = RAdd(r1FB5,r1FB4);
      real r1FB7#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_121EFE);
      real r1FB8#1 = RMul(r1FAC,r1FB7);
      real r1FB9#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_121EFE);
      real r1FBA#1 = RMul(r1FAF,r1FB9);
      real r1FBB#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_121EFE);
      real r1FBC#1 = RMul(r1FB2,r1FBB);
      real r1FBD#1 = RAdd(r1FB8,r1FBA);
      real r1FBE#1 = RAdd(r1FBD,r1FBC);
      real r1FBF#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_121EFE);
      real r1FC0#1 = RMul(r1FAC,r1FBF);
      real r1FC1#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_121EFE);
      real r1FC2#1 = RMul(r1FAF,r1FC1);
      real r1FC3#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_121EFE);
      real r1FC4#1 = RMul(r1FB2,r1FC3);
      real r1FC5#1 = RAdd(r1FC0,r1FC2);
      real r1FC6#1 = RAdd(r1FC5,r1FC4);
      tensor[3] tensor1FC7#1 = <tensor[3]>[r1FB6,r1FBE,r1FC6];
      real r1FC8#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_121EFE);
      real r1FC9#1 = RMul(r1FAC,r1FC8);
      real r1FCA#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_121EFE);
      real r1FCB#1 = RMul(r1FAF,r1FCA);
      real r1FCC#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_121EFE);
      real r1FCD#1 = RMul(r1FB2,r1FCC);
      real r1FCE#1 = RAdd(r1FC9,r1FCB);
      real r1FCF#1 = RAdd(r1FCE,r1FCD);
      real r1FD0#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_121EFE);
      real r1FD1#1 = RMul(r1FAC,r1FD0);
      real r1FD2#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_121EFE);
      real r1FD3#1 = RMul(r1FAF,r1FD2);
      real r1FD4#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_121EFE);
      real r1FD5#1 = RMul(r1FB2,r1FD4);
      real r1FD6#1 = RAdd(r1FD1,r1FD3);
      real r1FD7#1 = RAdd(r1FD6,r1FD5);
      real r1FD8#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_121EFE);
      real r1FD9#1 = RMul(r1FAC,r1FD8);
      real r1FDA#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_121EFE);
      real r1FDB#1 = RMul(r1FAF,r1FDA);
      real r1FDC#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_121EFE);
      real r1FDD#1 = RMul(r1FB2,r1FDC);
      real r1FDE#1 = RAdd(r1FD9,r1FDB);
      real r1FDF#1 = RAdd(r1FDE,r1FDD);
      tensor[3] tensor1FE0#1 = <tensor[3]>[r1FCF,r1FD7,r1FDF];
      real r1FE1#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_121EFE);
      real r1FE2#1 = RMul(r1FAC,r1FE1);
      real r1FE3#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_121EFE);
      real r1FE4#1 = RMul(r1FAF,r1FE3);
      real r1FE5#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_121EFE);
      real r1FE6#1 = RMul(r1FB2,r1FE5);
      real r1FE7#1 = RAdd(r1FE2,r1FE4);
      real r1FE8#1 = RAdd(r1FE7,r1FE6);
      real r1FE9#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_121EFE);
      real r1FEA#1 = RMul(r1FAC,r1FE9);
      real r1FEB#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_121EFE);
      real r1FEC#1 = RMul(r1FAF,r1FEB);
      real r1FED#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_121EFE);
      real r1FEE#1 = RMul(r1FB2,r1FED);
      real r1FEF#1 = RAdd(r1FEA,r1FEC);
      real r1FF0#1 = RAdd(r1FEF,r1FEE);
      real r1FF1#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_121EFE);
      real r1FF2#1 = RMul(r1FAC,r1FF1);
      real r1FF3#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_121EFE);
      real r1FF4#1 = RMul(r1FAF,r1FF3);
      real r1FF5#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_121EFE);
      real r1FF6#1 = RMul(r1FB2,r1FF5);
      real r1FF7#1 = RAdd(r1FF2,r1FF4);
      real r1FF8#1 = RAdd(r1FF7,r1FF6);
      tensor[3] tensor1FF9#1 = <tensor[3]>[r1FE8,r1FF0,r1FF8];
      tensor[3,3] tensor1FFA#1 = <tensor[3,3]>[tensor1FC7,tensor1FE0,tensor1FF9];
      real r1FFB#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_101E47);
      real r1FFC#1 = RMul(r1FFB,r1FAD);
      real r1FFD#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_101E47);
      real r1FFE#1 = RMul(r1FFD,r1FB0);
      real r1FFF#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_101E47);
      real r2000#1 = RMul(r1FFF,r1FB3);
      real r2001#1 = RAdd(r1FFC,r1FFE);
      real r2002#1 = RAdd(r2001,r2000);
      real r2003#1 = RMul(r1FFB,r1FB7);
      real r2004#1 = RMul(r1FFD,r1FB9);
      real r2005#1 = RMul(r1FFF,r1FBB);
      real r2006#1 = RAdd(r2003,r2004);
      real r2007#1 = RAdd(r2006,r2005);
      real r2008#1 = RMul(r1FFB,r1FBF);
      real r2009#1 = RMul(r1FFD,r1FC1);
      real r200A#1 = RMul(r1FFF,r1FC3);
      real r200B#1 = RAdd(r2008,r2009);
      real r200C#1 = RAdd(r200B,r200A);
      tensor[3] tensor200D#1 = <tensor[3]>[r2002,r2007,r200C];
      real r200E#1 = RMul(r1FFB,r1FC8);
      real r200F#1 = RMul(r1FFD,r1FCA);
      real r2010#1 = RMul(r1FFF,r1FCC);
      real r2011#1 = RAdd(r200E,r200F);
      real r2012#1 = RAdd(r2011,r2010);
      real r2013#1 = RMul(r1FFB,r1FD0);
      real r2014#1 = RMul(r1FFD,r1FD2);
      real r2015#1 = RMul(r1FFF,r1FD4);
      real r2016#1 = RAdd(r2013,r2014);
      real r2017#1 = RAdd(r2016,r2015);
      real r2018#1 = RMul(r1FFB,r1FD8);
      real r2019#1 = RMul(r1FFD,r1FDA);
      real r201A#1 = RMul(r1FFF,r1FDC);
      real r201B#1 = RAdd(r2018,r2019);
      real r201C#1 = RAdd(r201B,r201A);
      tensor[3] tensor201D#1 = <tensor[3]>[r2012,r2017,r201C];
      real r201E#1 = RMul(r1FFB,r1FE1);
      real r201F#1 = RMul(r1FFD,r1FE3);
      real r2020#1 = RMul(r1FFF,r1FE5);
      real r2021#1 = RAdd(r201E,r201F);
      real r2022#1 = RAdd(r2021,r2020);
      real r2023#1 = RMul(r1FFB,r1FE9);
      real r2024#1 = RMul(r1FFD,r1FEB);
      real r2025#1 = RMul(r1FFF,r1FED);
      real r2026#1 = RAdd(r2023,r2024);
      real r2027#1 = RAdd(r2026,r2025);
      real r2028#1 = RMul(r1FFB,r1FF1);
      real r2029#1 = RMul(r1FFD,r1FF3);
      real r202A#1 = RMul(r1FFF,r1FF5);
      real r202B#1 = RAdd(r2028,r2029);
      real r202C#1 = RAdd(r202B,r202A);
      tensor[3] tensor202D#1 = <tensor[3]>[r2022,r2027,r202C];
      tensor[3,3] tensor202E#1 = <tensor[3,3]>[tensor200D,tensor201D,tensor202D];
      real r202F#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_101E47);
      real r2030#1 = RMul(r202F,r1FAD);
      real r2031#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_101E47);
      real r2032#1 = RMul(r2031,r1FB0);
      real r2033#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_101E47);
      real r2034#1 = RMul(r2033,r1FB3);
      real r2035#1 = RAdd(r2030,r2032);
      real r2036#1 = RAdd(r2035,r2034);
      real r2037#1 = RMul(r202F,r1FB7);
      real r2038#1 = RMul(r2031,r1FB9);
      real r2039#1 = RMul(r2033,r1FBB);
      real r203A#1 = RAdd(r2037,r2038);
      real r203B#1 = RAdd(r203A,r2039);
      real r203C#1 = RMul(r202F,r1FBF);
      real r203D#1 = RMul(r2031,r1FC1);
      real r203E#1 = RMul(r2033,r1FC3);
      real r203F#1 = RAdd(r203C,r203D);
      real r2040#1 = RAdd(r203F,r203E);
      tensor[3] tensor2041#1 = <tensor[3]>[r2036,r203B,r2040];
      real r2042#1 = RMul(r202F,r1FC8);
      real r2043#1 = RMul(r2031,r1FCA);
      real r2044#1 = RMul(r2033,r1FCC);
      real r2045#1 = RAdd(r2042,r2043);
      real r2046#1 = RAdd(r2045,r2044);
      real r2047#1 = RMul(r202F,r1FD0);
      real r2048#1 = RMul(r2031,r1FD2);
      real r2049#1 = RMul(r2033,r1FD4);
      real r204A#1 = RAdd(r2047,r2048);
      real r204B#1 = RAdd(r204A,r2049);
      real r204C#1 = RMul(r202F,r1FD8);
      real r204D#1 = RMul(r2031,r1FDA);
      real r204E#1 = RMul(r2033,r1FDC);
      real r204F#1 = RAdd(r204C,r204D);
      real r2050#1 = RAdd(r204F,r204E);
      tensor[3] tensor2051#1 = <tensor[3]>[r2046,r204B,r2050];
      real r2052#1 = RMul(r202F,r1FE1);
      real r2053#1 = RMul(r2031,r1FE3);
      real r2054#1 = RMul(r2033,r1FE5);
      real r2055#1 = RAdd(r2052,r2053);
      real r2056#1 = RAdd(r2055,r2054);
      real r2057#1 = RMul(r202F,r1FE9);
      real r2058#1 = RMul(r2031,r1FEB);
      real r2059#1 = RMul(r2033,r1FED);
      real r205A#1 = RAdd(r2057,r2058);
      real r205B#1 = RAdd(r205A,r2059);
      real r205C#1 = RMul(r202F,r1FF1);
      real r205D#1 = RMul(r2031,r1FF3);
      real r205E#1 = RMul(r2033,r1FF5);
      real r205F#1 = RAdd(r205C,r205D);
      real r2060#1 = RAdd(r205F,r205E);
      tensor[3] tensor2061#1 = <tensor[3]>[r2056,r205B,r2060];
      tensor[3,3] tensor2062#1 = <tensor[3,3]>[tensor2041,tensor2051,tensor2061];
      tensor[3,3,3] op1_e3_l_131FAB#27 = <tensor[3,3,3]>[tensor1FFA,tensor202E,tensor2062];
      real r211D#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r211E#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult1E29);
      real r211F#1 = RMul(r211D,r211E);
      real r2120#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r2121#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult1E29);
      real r2122#1 = RMul(r2120,r2121);
      real r2123#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r2124#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult1E29);
      real r2125#1 = RMul(r2123,r2124);
      real r2126#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r2127#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult1E29);
      real r2128#1 = RMul(r2126,r2127);
      real r2129#1 = RAdd(r211F,r2122);
      real r212A#1 = RAdd(r2129,r2125);
      real r212B#1 = RAdd(r212A,r2128);
      real r212C#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r212D#1 = RMul(r212C,r211E);
      real r212E#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r212F#1 = RMul(r212E,r2121);
      real r2130#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r2131#1 = RMul(r2130,r2124);
      real r2132#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r2133#1 = RMul(r2132,r2127);
      real r2134#1 = RAdd(r212D,r212F);
      real r2135#1 = RAdd(r2134,r2131);
      real r2136#1 = RAdd(r2135,r2133);
      real r2137#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r2138#1 = RMul(r2137,r211E);
      real r2139#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r213A#1 = RMul(r2139,r2121);
      real r213B#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r213C#1 = RMul(r213B,r2124);
      real r213D#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r213E#1 = RMul(r213D,r2127);
      real r213F#1 = RAdd(r2138,r213A);
      real r2140#1 = RAdd(r213F,r213C);
      real r2141#1 = RAdd(r2140,r213E);
      tensor[3] probe_l_14211C#1 = <tensor[3]>[r212B,r2136,r2141];
      real r216A#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r216B#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult1E29);
      real r216C#1 = RMul(r216A,r216B);
      real r216D#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r216E#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult1E29);
      real r216F#1 = RMul(r216D,r216E);
      real r2170#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r2171#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult1E29);
      real r2172#1 = RMul(r2170,r2171);
      real r2173#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r2174#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult1E29);
      real r2175#1 = RMul(r2173,r2174);
      real r2176#1 = RAdd(r216C,r216F);
      real r2177#1 = RAdd(r2176,r2172);
      real r2178#1 = RAdd(r2177,r2175);
      real r2179#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r217A#1 = RMul(r2179,r216B);
      real r217B#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r217C#1 = RMul(r217B,r216E);
      real r217D#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r217E#1 = RMul(r217D,r2171);
      real r217F#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r2180#1 = RMul(r217F,r2174);
      real r2181#1 = RAdd(r217A,r217C);
      real r2182#1 = RAdd(r2181,r217E);
      real r2183#1 = RAdd(r2182,r2180);
      real r2184#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r2185#1 = RMul(r2184,r216B);
      real r2186#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r2187#1 = RMul(r2186,r216E);
      real r2188#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r2189#1 = RMul(r2188,r2171);
      real r218A#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r218B#1 = RMul(r218A,r2174);
      real r218C#1 = RAdd(r2185,r2187);
      real r218D#1 = RAdd(r218C,r2189);
      real r218E#1 = RAdd(r218D,r218B);
      tensor[3] probe_l_152169#3 = <tensor[3]>[r2178,r2183,r218E];
      real r21B7#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r21B8#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult1E29);
      real r21B9#1 = RMul(r21B7,r21B8);
      real r21BA#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r21BB#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult1E29);
      real r21BC#1 = RMul(r21BA,r21BB);
      real r21BD#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r21BE#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult1E29);
      real r21BF#1 = RMul(r21BD,r21BE);
      real r21C0#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r21C1#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult1E29);
      real r21C2#1 = RMul(r21C0,r21C1);
      real r21C3#1 = RAdd(r21B9,r21BC);
      real r21C4#1 = RAdd(r21C3,r21BF);
      real r21C5#1 = RAdd(r21C4,r21C2);
      real r21C6#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r21C7#1 = RMul(r21C6,r21B8);
      real r21C8#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r21C9#1 = RMul(r21C8,r21BB);
      real r21CA#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r21CB#1 = RMul(r21CA,r21BE);
      real r21CC#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r21CD#1 = RMul(r21CC,r21C1);
      real r21CE#1 = RAdd(r21C7,r21C9);
      real r21CF#1 = RAdd(r21CE,r21CB);
      real r21D0#1 = RAdd(r21CF,r21CD);
      real r21D1#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r21D2#1 = RMul(r21D1,r21B8);
      real r21D3#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r21D4#1 = RMul(r21D3,r21BB);
      real r21D5#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r21D6#1 = RMul(r21D5,r21BE);
      real r21D7#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r21D8#1 = RMul(r21D7,r21C1);
      real r21D9#1 = RAdd(r21D2,r21D4);
      real r21DA#1 = RAdd(r21D9,r21D6);
      real r21DB#1 = RAdd(r21DA,r21D8);
      tensor[3] probe_l_1621B6#3 = <tensor[3]>[r21C5,r21D0,r21DB];
      real realLit2204#3 = 0.e0;
      real r2205#3 = TensorIndex<tensor[3],[0]>(probe_l_1621B6);
      real r2206#3 = RMul(realLit2204,r2205);
      real r2207#3 = TensorIndex<tensor[3],[1]>(probe_l_1621B6);
      real r2208#3 = RMul(realLit2204,r2207);
      real r2209#3 = TensorIndex<tensor[3],[2]>(probe_l_1621B6);
      real r220A#5 = RMul(realLit2204,r2209);
      real r220B#3 = RAdd(r2206,r2208);
      real r220C#3 = RAdd(r220B,r220A);
      real realLit220D#3 = 0.1e1;
      real r220E#1 = RMul(realLit220D,r2209);
      real r220F#1 = RAdd(r220B,r220E);
      real realLit2210#3 = -0.1e1;
      real r2211#1 = RMul(realLit2210,r2207);
      real r2212#1 = RAdd(r2206,r2211);
      real r2213#1 = RAdd(r2212,r220A);
      tensor[3] tensor2214#1 = <tensor[3]>[r220C,r220F,r2213];
      real r2215#1 = RMul(realLit2210,r2209);
      real r2216#1 = RAdd(r220B,r2215);
      real r2217#1 = RMul(realLit220D,r2205);
      real r2218#1 = RAdd(r2217,r2208);
      real r2219#1 = RAdd(r2218,r220A);
      tensor[3] tensor221A#1 = <tensor[3]>[r2216,r220C,r2219];
      real r221B#1 = RMul(realLit220D,r2207);
      real r221C#1 = RAdd(r2206,r221B);
      real r221D#1 = RAdd(r221C,r220A);
      real r221E#1 = RMul(realLit2210,r2205);
      real r221F#1 = RAdd(r221E,r2208);
      real r2220#1 = RAdd(r221F,r220A);
      tensor[3] tensor2221#1 = <tensor[3]>[r221D,r2220,r220C];
      tensor[3,3] op1_e3_l_172203#3 = <tensor[3,3]>[tensor2214,tensor221A,tensor2221];
      tensor[3] projParam2243#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_172203);
      real vdot2244#1 = VDot<3>(probe_l_152169,projParam2243);
      tensor[3] projParam2245#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_172203);
      real vdot2246#1 = VDot<3>(probe_l_152169,projParam2245);
      tensor[3] projParam2247#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_172203);
      real vdot2248#1 = VDot<3>(probe_l_152169,projParam2247);
      tensor[3] op1_e3_l_182242#1 = <tensor[3]>[vdot2244,vdot2246,vdot2248];
      real op1_e3_l_192251#1 = VDot<3>(probe_l_14211C,op1_e3_l_182242);
      real realLit2255#27 = 0.e0;
      real r2256#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_131FAB);
      real r2257#2 = RMul(realLit2255,r2256);
      real r2258#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_131FAB);
      real r2259#1 = RMul(realLit2255,r2258);
      real r225A#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_131FAB);
      real r225B#2 = RMul(realLit2255,r225A);
      real r225C#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_131FAB);
      real r225D#2 = RMul(realLit2255,r225C);
      real r225E#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_131FAB);
      real r225F#3 = RMul(realLit2255,r225E);
      real realLit2260#9 = 0.1e1;
      real r2261#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_131FAB);
      real r2262#1 = RMul(realLit2260,r2261);
      real r2263#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_131FAB);
      real r2264#2 = RMul(realLit2255,r2263);
      real realLit2265#9 = -0.1e1;
      real r2266#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_131FAB);
      real r2267#1 = RMul(realLit2265,r2266);
      real r2268#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_131FAB);
      real r2269#3 = RMul(realLit2255,r2268);
      real r226A#2 = RAdd(r2257,r2259);
      real r226B#1 = RAdd(r226A,r225B);
      real r226C#1 = RAdd(r226B,r225D);
      real r226D#1 = RAdd(r226C,r225F);
      real r226E#1 = RAdd(r226D,r2262);
      real r226F#1 = RAdd(r226E,r2264);
      real r2270#1 = RAdd(r226F,r2267);
      real r2271#1 = RAdd(r2270,r2269);
      real r2272#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_131FAB);
      real r2273#2 = RMul(realLit2255,r2272);
      real r2274#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_131FAB);
      real r2275#1 = RMul(realLit2255,r2274);
      real r2276#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_131FAB);
      real r2277#2 = RMul(realLit2255,r2276);
      real r2278#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_131FAB);
      real r2279#2 = RMul(realLit2255,r2278);
      real r227A#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_131FAB);
      real r227B#3 = RMul(realLit2255,r227A);
      real r227C#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_131FAB);
      real r227D#1 = RMul(realLit2260,r227C);
      real r227E#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_131FAB);
      real r227F#2 = RMul(realLit2255,r227E);
      real r2280#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_131FAB);
      real r2281#1 = RMul(realLit2265,r2280);
      real r2282#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_131FAB);
      real r2283#3 = RMul(realLit2255,r2282);
      real r2284#2 = RAdd(r2273,r2275);
      real r2285#1 = RAdd(r2284,r2277);
      real r2286#1 = RAdd(r2285,r2279);
      real r2287#1 = RAdd(r2286,r227B);
      real r2288#1 = RAdd(r2287,r227D);
      real r2289#1 = RAdd(r2288,r227F);
      real r228A#1 = RAdd(r2289,r2281);
      real r228B#1 = RAdd(r228A,r2283);
      real r228C#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_131FAB);
      real r228D#2 = RMul(realLit2255,r228C);
      real r228E#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_131FAB);
      real r228F#1 = RMul(realLit2255,r228E);
      real r2290#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_131FAB);
      real r2291#2 = RMul(realLit2255,r2290);
      real r2292#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_131FAB);
      real r2293#2 = RMul(realLit2255,r2292);
      real r2294#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_131FAB);
      real r2295#3 = RMul(realLit2255,r2294);
      real r2296#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_131FAB);
      real r2297#1 = RMul(realLit2260,r2296);
      real r2298#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_131FAB);
      real r2299#2 = RMul(realLit2255,r2298);
      real r229A#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_131FAB);
      real r229B#1 = RMul(realLit2265,r229A);
      real r229C#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_131FAB);
      real r229D#3 = RMul(realLit2255,r229C);
      real r229E#2 = RAdd(r228D,r228F);
      real r229F#1 = RAdd(r229E,r2291);
      real r22A0#1 = RAdd(r229F,r2293);
      real r22A1#1 = RAdd(r22A0,r2295);
      real r22A2#1 = RAdd(r22A1,r2297);
      real r22A3#1 = RAdd(r22A2,r2299);
      real r22A4#1 = RAdd(r22A3,r229B);
      real r22A5#1 = RAdd(r22A4,r229D);
      tensor[3] tensor22A6#1 = <tensor[3]>[r2271,r228B,r22A5];
      real r22A7#1 = RMul(realLit2265,r225A);
      real r22A8#2 = RMul(realLit2255,r2261);
      real r22A9#1 = RMul(realLit2260,r2263);
      real r22AA#2 = RMul(realLit2255,r2266);
      real r22AB#1 = RAdd(r226A,r22A7);
      real r22AC#1 = RAdd(r22AB,r225D);
      real r22AD#1 = RAdd(r22AC,r225F);
      real r22AE#1 = RAdd(r22AD,r22A8);
      real r22AF#1 = RAdd(r22AE,r22A9);
      real r22B0#1 = RAdd(r22AF,r22AA);
      real r22B1#1 = RAdd(r22B0,r2269);
      real r22B2#1 = RMul(realLit2265,r2276);
      real r22B3#2 = RMul(realLit2255,r227C);
      real r22B4#1 = RMul(realLit2260,r227E);
      real r22B5#2 = RMul(realLit2255,r2280);
      real r22B6#1 = RAdd(r2284,r22B2);
      real r22B7#1 = RAdd(r22B6,r2279);
      real r22B8#1 = RAdd(r22B7,r227B);
      real r22B9#1 = RAdd(r22B8,r22B3);
      real r22BA#1 = RAdd(r22B9,r22B4);
      real r22BB#1 = RAdd(r22BA,r22B5);
      real r22BC#1 = RAdd(r22BB,r2283);
      real r22BD#1 = RMul(realLit2265,r2290);
      real r22BE#2 = RMul(realLit2255,r2296);
      real r22BF#1 = RMul(realLit2260,r2298);
      real r22C0#2 = RMul(realLit2255,r229A);
      real r22C1#1 = RAdd(r229E,r22BD);
      real r22C2#1 = RAdd(r22C1,r2293);
      real r22C3#1 = RAdd(r22C2,r2295);
      real r22C4#1 = RAdd(r22C3,r22BE);
      real r22C5#1 = RAdd(r22C4,r22BF);
      real r22C6#1 = RAdd(r22C5,r22C0);
      real r22C7#1 = RAdd(r22C6,r229D);
      tensor[3] tensor22C8#1 = <tensor[3]>[r22B1,r22BC,r22C7];
      real r22C9#1 = RMul(realLit2260,r2258);
      real r22CA#1 = RMul(realLit2265,r225C);
      real r22CB#1 = RAdd(r2257,r22C9);
      real r22CC#1 = RAdd(r22CB,r225B);
      real r22CD#1 = RAdd(r22CC,r22CA);
      real r22CE#1 = RAdd(r22CD,r225F);
      real r22CF#1 = RAdd(r22CE,r22A8);
      real r22D0#1 = RAdd(r22CF,r2264);
      real r22D1#1 = RAdd(r22D0,r22AA);
      real r22D2#1 = RAdd(r22D1,r2269);
      real r22D3#1 = RMul(realLit2260,r2274);
      real r22D4#1 = RMul(realLit2265,r2278);
      real r22D5#1 = RAdd(r2273,r22D3);
      real r22D6#1 = RAdd(r22D5,r2277);
      real r22D7#1 = RAdd(r22D6,r22D4);
      real r22D8#1 = RAdd(r22D7,r227B);
      real r22D9#1 = RAdd(r22D8,r22B3);
      real r22DA#1 = RAdd(r22D9,r227F);
      real r22DB#1 = RAdd(r22DA,r22B5);
      real r22DC#1 = RAdd(r22DB,r2283);
      real r22DD#1 = RMul(realLit2260,r228E);
      real r22DE#1 = RMul(realLit2265,r2292);
      real r22DF#1 = RAdd(r228D,r22DD);
      real r22E0#1 = RAdd(r22DF,r2291);
      real r22E1#1 = RAdd(r22E0,r22DE);
      real r22E2#1 = RAdd(r22E1,r2295);
      real r22E3#1 = RAdd(r22E2,r22BE);
      real r22E4#1 = RAdd(r22E3,r2299);
      real r22E5#1 = RAdd(r22E4,r22C0);
      real r22E6#1 = RAdd(r22E5,r229D);
      tensor[3] tensor22E7#1 = <tensor[3]>[r22D2,r22DC,r22E6];
      tensor[3,3] op1_e3_l_202254#9 = <tensor[3,3]>[tensor22A6,tensor22C8,tensor22E7];
      real realLit237E#1 = 0.2e1;
      real op1_e3_l_21237D#9 = RMul(realLit237E,op1_e3_l_192251);
      real varAcc2384#1 = VIndex<3,0>(xn2383);
      real varAcc2385#1 = VIndex<3,1>(xn2383);
      real varAcc2386#1 = VIndex<3,2>(xn2383);
      real coeff2387#3 = -0.1e1;
      real iden2388#1 = varAcc2384;
      real one2389#11 = 0.1e1;
      real prod238A#2 = RMul(one2389,one2389);
      real prod238B#2 = RMul(iden2388,prod238A);
      real iden238C#1 = varAcc2385;
      real prod238D#1 = RMul(iden238C,one2389);
      real prod238E#2 = RMul(one2389,prod238D);
      real iden238F#1 = varAcc2386;
      real prod2390#1 = RMul(one2389,iden238F);
      real prod2391#2 = RMul(one2389,prod2390);
      real prod2392#1 = RMul(one2389,prod238A);
      real mult2393#1 = RMul(one2389,prod2392);
      real mult2394#1 = RMul(coeff2387,prod2391);
      real mult2395#1 = RMul(coeff2387,prod238E);
      real mult2396#1 = RMul(coeff2387,prod238B);
      real sum2397#1 = RAdd(mult2395,mult2396);
      real sum2398#1 = RAdd(mult2394,sum2397);
      real sum2399#1 = RAdd(mult2393,sum2398);
      real intermediate239A#1 = sum2399;
      real basisEval239B#1 = RMul(one2389,prod238B);
      real basisEval239C#1 = RMul(one2389,prod238E);
      real basisEval239D#1 = RMul(one2389,prod2391);
      tensor[4] intermediateCons239E#1 = <tensor[4]>[intermediate239A,basisEval239B,basisEval239C,basisEval239D];
      tensor[4] basisResult2382#8 = intermediateCons239E;
      real r23BC#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r23BD#3 = TensorIndex<tensor[4],[0]>(basisResult2382);
      real r23BE#1 = RMul(r23BC,r23BD);
      real r23BF#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r23C0#3 = TensorIndex<tensor[4],[1]>(basisResult2382);
      real r23C1#1 = RMul(r23BF,r23C0);
      real r23C2#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r23C3#3 = TensorIndex<tensor[4],[2]>(basisResult2382);
      real r23C4#1 = RMul(r23C2,r23C3);
      real r23C5#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r23C6#3 = TensorIndex<tensor[4],[3]>(basisResult2382);
      real r23C7#1 = RMul(r23C5,r23C6);
      real r23C8#1 = RAdd(r23BE,r23C1);
      real r23C9#1 = RAdd(r23C8,r23C4);
      real r23CA#1 = RAdd(r23C9,r23C7);
      real r23CB#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r23CC#1 = RMul(r23CB,r23BD);
      real r23CD#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r23CE#1 = RMul(r23CD,r23C0);
      real r23CF#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r23D0#1 = RMul(r23CF,r23C3);
      real r23D1#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r23D2#1 = RMul(r23D1,r23C6);
      real r23D3#1 = RAdd(r23CC,r23CE);
      real r23D4#1 = RAdd(r23D3,r23D0);
      real r23D5#1 = RAdd(r23D4,r23D2);
      real r23D6#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r23D7#1 = RMul(r23D6,r23BD);
      real r23D8#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r23D9#1 = RMul(r23D8,r23C0);
      real r23DA#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r23DB#1 = RMul(r23DA,r23C3);
      real r23DC#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r23DD#1 = RMul(r23DC,r23C6);
      real r23DE#1 = RAdd(r23D7,r23D9);
      real r23DF#1 = RAdd(r23DE,r23DB);
      real r23E0#1 = RAdd(r23DF,r23DD);
      tensor[3] probe_l_2223BB#1 = <tensor[3]>[r23CA,r23D5,r23E0];
      real r2409#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_202254);
      real r240A#1 = RDiv(r2409,op1_e3_l_21237D);
      real r240B#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_202254);
      real r240C#1 = RDiv(r240B,op1_e3_l_21237D);
      real r240D#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_202254);
      real r240E#1 = RDiv(r240D,op1_e3_l_21237D);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2410#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_202254);
      real r2411#1 = RDiv(r2410,op1_e3_l_21237D);
      real r2412#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_202254);
      real r2413#1 = RDiv(r2412,op1_e3_l_21237D);
      real r2414#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_202254);
      real r2415#1 = RDiv(r2414,op1_e3_l_21237D);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      real r2417#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_202254);
      real r2418#1 = RDiv(r2417,op1_e3_l_21237D);
      real r2419#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_202254);
      real r241A#1 = RDiv(r2419,op1_e3_l_21237D);
      real r241B#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_202254);
      real r241C#1 = RDiv(r241B,op1_e3_l_21237D);
      tensor[3] tensor241D#1 = <tensor[3]>[r2418,r241A,r241C];
      tensor[3,3] op1_e3_l_232408#6 = <tensor[3,3]>[tensor240F,tensor2416,tensor241D];
      tensor[3] op1_e3_l_242435#3 = VSub<3>(probe_l_2223BB,pos1DA3);
      tensor[3] projParam2439#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232408);
      real vdot243A#1 = VDot<3>(projParam2439,op1_e3_l_242435);
      tensor[3] projParam243B#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232408);
      real vdot243C#1 = VDot<3>(projParam243B,op1_e3_l_242435);
      tensor[3] projParam243D#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232408);
      real vdot243E#1 = VDot<3>(projParam243D,op1_e3_l_242435);
      tensor[3] op1_e3_l_252438#1 = <tensor[3]>[vdot243A,vdot243C,vdot243E];
      tensor[3] xn2447#4 = VSub<3>(xn2383,op1_e3_l_252438);
      real _t244A#2 = 0.1e-7;
      real _t244C#1 = RMul(_t244A,_t244A);
      real r2450#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DD5);
      real r2451#3 = TensorIndex<tensor[4],[0]>(basisResult2382);
      real r2452#1 = RMul(r2450,r2451);
      real r2453#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DD5);
      real r2454#3 = TensorIndex<tensor[4],[1]>(basisResult2382);
      real r2455#1 = RMul(r2453,r2454);
      real r2456#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DD5);
      real r2457#3 = TensorIndex<tensor[4],[2]>(basisResult2382);
      real r2458#1 = RMul(r2456,r2457);
      real r2459#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DD5);
      real r245A#3 = TensorIndex<tensor[4],[3]>(basisResult2382);
      real r245B#1 = RMul(r2459,r245A);
      real r245C#1 = RAdd(r2452,r2455);
      real r245D#1 = RAdd(r245C,r2458);
      real r245E#1 = RAdd(r245D,r245B);
      real r245F#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DD5);
      real r2460#1 = RMul(r245F,r2451);
      real r2461#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DD5);
      real r2462#1 = RMul(r2461,r2454);
      real r2463#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DD5);
      real r2464#1 = RMul(r2463,r2457);
      real r2465#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DD5);
      real r2466#1 = RMul(r2465,r245A);
      real r2467#1 = RAdd(r2460,r2462);
      real r2468#1 = RAdd(r2467,r2464);
      real r2469#1 = RAdd(r2468,r2466);
      real r246A#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DD5);
      real r246B#1 = RMul(r246A,r2451);
      real r246C#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DD5);
      real r246D#1 = RMul(r246C,r2454);
      real r246E#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DD5);
      real r246F#1 = RMul(r246E,r2457);
      real r2470#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DD5);
      real r2471#1 = RMul(r2470,r245A);
      real r2472#1 = RAdd(r246B,r246D);
      real r2473#1 = RAdd(r2472,r246F);
      real r2474#1 = RAdd(r2473,r2471);
      tensor[3] probe_l_30244F#1 = <tensor[3]>[r245E,r2469,r2474];
      tensor[3] op1_e3_l_32249C#3 = VSub<3>(probe_l_30244F,pos1DA3);
      tensor[3] projParam24A0#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232408);
      real vdot24A1#1 = VDot<3>(projParam24A0,op1_e3_l_32249C);
      tensor[3] projParam24A2#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232408);
      real vdot24A3#1 = VDot<3>(projParam24A2,op1_e3_l_32249C);
      tensor[3] projParam24A4#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232408);
      real vdot24A5#1 = VDot<3>(projParam24A4,op1_e3_l_32249C);
      tensor[3] op1_e3_l_48249F#2 = <tensor[3]>[vdot24A1,vdot24A3,vdot24A5];
      real _t24AE#1 = VDot<3>(op1_e3_l_48249F,op1_e3_l_48249F);
      bool _t24B1#1 = GTE<real>(_t244C,_t24AE);
      if _t24B1 then goto ASSIGN24B5 else goto JOIN24E0
    ASSIGN24B5:  preds = [COND24B3]
      real _t24B4#4 = 0.1e1;
      real _t24B6#4 = 0.1e-4;
      real _t24B8#1 = RAdd(_t24B4,_t24B6);
      tensor[3] _t24BB#1 = <tensor[3]>[_t24B4,_t24B4,_t24B4];
      real _t24BD#1 = VDot<3>(_t24BB,xn2447);
      bool _t24C0#1 = GT<real>(_t24B8,_t24BD);
      tensor[3] _t24C2#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24C4#3 = VAdd<3>(_t24C2,xn2447);
      real _t24C7#1 = VIndex<3,0>(_t24C4);
      real _t24C9#3 = -0.e0;
      bool _t24CB#1 = GT<real>(_t24C7,_t24C9);
      real _t24CD#1 = VIndex<3,1>(_t24C4);
      bool _t24CF#1 = GT<real>(_t24CD,_t24C9);
      real _t24D1#1 = VIndex<3,2>(_t24C4);
      bool _t24D3#1 = GT<real>(_t24D1,_t24C9);
      bool _t24D5#1 = BAnd(_t24CF,_t24D3);
      bool _t24D7#1 = BAnd(_t24CB,_t24D5);
      bool _t24D9#1 = BAnd(_t24C0,_t24D7);
      if _t24D9 then goto ASSIGN24DD else goto JOIN24DF
    ASSIGN24DD:  preds = [COND24DB]
      femData:MeshPos _t24DC#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1DA2,cellItter1DAD,xn2447,pos1DA3);
      return _t24DC
      goto JOIN24DF
    JOIN24DF:  preds = [*RETURN(_t24DC)24DE,COND24DB]
      goto JOIN24E0
    JOIN24E0:  preds = [JOIN24DF,COND24B3]
      goto FOREACH1DB4
    NEXT24E3:  preds = [FOREACH1DB4]
      goto FOREACH1DAE
    ASSIGN24E5:  preds = [FOREACH1DAE]
      string _t24E4#1 = "Bad end 2";
      string _t24E6#1 = "\n";
      Print<[string,string]>(_t24E4,_t24E6);
      femData:MeshPos _t24E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1DA2);
      return _t24E9
}
## input initialization
  ENTRY1AE5:  preds = []
    real isoval1AE6#1 = 0.2e0;
    globals.isoval1AC6 = isoval1AE6;
    real thick1AE9#1 = 0.7e-1;
    globals.thick1AC7 = thick1AE9;
    real _t1AEC#2 = 0.3e1;
    real _t1AEE#1 = -0.3e1;
    tensor[3] camEye1AF0#1 = <tensor[3]>[_t1AEC,_t1AEE,_t1AEC];
    globals.camEye1AC8 = camEye1AF0;
    real _t1AF3#3 = 0.5e0;
    tensor[3] camAt1AF5#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1AF3];
    globals.camAt1AC9 = camAt1AF5;
    real _t1AF8#2 = 0.e0;
    real _t1AFA#2 = 0.1e1;
    tensor[3] camUp1AFC#2 = <tensor[3]>[_t1AF8,_t1AF8,_t1AFA];
    globals.camUp1ACA = camUp1AFC;
    real camFOV1AFF#1 = 0.137e2;
    globals.camFOV1ACB = camFOV1AFF;
    int iresU1B02#2 = 500;
    globals.iresU1ACC = iresU1B02;
    globals.iresV1ACD = iresU1B02;
    real camNear1B06#1 = -0.2e1;
    globals.camNear1ACE = camNear1B06;
    real camFar1B09#1 = 0.5e1;
    globals.camFar1ACF = camFar1B09;
    globals.refStep1AD0 = _t1AFA;
    real rayStep1B0D#1 = 0.1e-1;
    globals.rayStep1AD1 = rayStep1B0D;
    globals.lightVsp1AD2 = camUp1AFC;
    real phongKa1B11#1 = 0.1e0;
    globals.phongKa1AD3 = phongKa1B11;
    real phongKd1B14#1 = 0.9e0;
    globals.phongKd1AD4 = phongKd1B14;
    bool debug1B17#1 = false;
    globals.debug1AD5 = debug1B17;
    int su1B1A#2 = 250;
    globals.su1AD6 = su1B1A;
    globals.sv1AD7 = su1B1A;
    return
## global-variable initialization
  ENTRY1B1F:  preds = []
    femData:Mesh a1B20#3 = globals.a1AC3;
    femData:Space 0b043B_intermedateGlobal1B22#1 = globals.0b043B_intermedateGlobal1AC4;
    femData:FemFunc 0c043D_intermedateGlobal1B24#1 = globals.0c043D_intermedateGlobal1AC5;
    tensor[3] camEye1B26#1 = globals.camEye1AC8;
    tensor[3] camAt1B28#1 = globals.camAt1AC9;
    tensor[3] camUp1B2A#3 = globals.camUp1ACA;
    real camFOV1B2C#1 = globals.camFOV1ACB;
    int iresU1B2E#1 = globals.iresU1ACC;
    int iresV1B30#1 = globals.iresV1ACD;
    tensor[3] lightVsp1B32#5 = globals.lightVsp1AD2;
    int _t1B34#1 = 0;
    int _t1B36#1 = 1;
    int _t1B38#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B20);
    int _t1B3A#1 = ISub(_t1B38,_t1B36);
    int[] _t1B3C#1 = Range(_t1B34,_t1B3A);
    femData:MeshCell[] _t1B3E#1 = <femData:MeshCell[]>{};
  FOREACH1B41:  preds = [ASSIGN1B3F,NEXT1B47]
    foreach (_t1B40 in _t1B3C) on exit goto ASSIGN1B49
      femData:MeshCell[] _t1B45#1 = phi(_t1B3E,_t1B44)
    femData:MeshCell _t1B42#1 = LoadFem<femData:MeshCell>(a1B20,_t1B40);
    femData:MeshCell[] _t1B44#1 = Append<femData:MeshCell>(_t1B45,_t1B42);
    goto FOREACH1B41
  ASSIGN1B49:  preds = [FOREACH1B41]
    femData:Space b1B48#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1B22,a1B20);
    femData:FemFunc c1B4A#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1B24,b1B48);
    femData:Space _t1B4C#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B4A);
    femData:Mesh _t1B4E#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B4C);
    image(IMAGE1D<double[3]>) I1B50#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    int _t1B52#1 = 0;
    image(IMAGE1D<double[3]>) img1B54#1 = I1B50;
    tensor[3] op1_e3_l_21B56#9 = VSub<3>(camAt1B28,camEye1B26);
    real op1_e3_l_41B59#1 = VDot<3>(op1_e3_l_21B56,op1_e3_l_21B56);
    real camDist1B5C#4 = Sqrt(op1_e3_l_41B59);
    globals.camDist1AD8 = camDist1B5C;
    real realLit1B61#1 = 0.1e1;
    real op1_e3_l_91B60#6 = RDiv(realLit1B61,camDist1B5C);
    tensor[3] camN1B65#2 = VScale<3>(op1_e3_l_91B60,op1_e3_l_21B56);
    globals.camN1AD9 = camN1B65;
    real realLit1B6A#3 = 0.e0;
    real r1B6B#3 = TensorIndex<tensor[3],[0]>(camUp1B2A);
    real r1B6C#3 = RMul(realLit1B6A,r1B6B);
    real r1B6D#3 = TensorIndex<tensor[3],[1]>(camUp1B2A);
    real r1B6E#3 = RMul(realLit1B6A,r1B6D);
    real r1B6F#3 = TensorIndex<tensor[3],[2]>(camUp1B2A);
    real r1B70#5 = RMul(realLit1B6A,r1B6F);
    real r1B71#3 = RAdd(r1B6C,r1B6E);
    real r1B72#3 = RAdd(r1B71,r1B70);
    real realLit1B73#3 = 0.1e1;
    real r1B74#1 = RMul(realLit1B73,r1B6F);
    real r1B75#1 = RAdd(r1B71,r1B74);
    real realLit1B76#3 = -0.1e1;
    real r1B77#1 = RMul(realLit1B76,r1B6D);
    real r1B78#1 = RAdd(r1B6C,r1B77);
    real r1B79#1 = RAdd(r1B78,r1B70);
    tensor[3] tensor1B7A#1 = <tensor[3]>[r1B72,r1B75,r1B79];
    real r1B7B#1 = RMul(realLit1B76,r1B6F);
    real r1B7C#1 = RAdd(r1B71,r1B7B);
    real r1B7D#1 = RMul(realLit1B73,r1B6B);
    real r1B7E#1 = RAdd(r1B7D,r1B6E);
    real r1B7F#1 = RAdd(r1B7E,r1B70);
    tensor[3] tensor1B80#1 = <tensor[3]>[r1B7C,r1B72,r1B7F];
    real r1B81#1 = RMul(realLit1B73,r1B6D);
    real r1B82#1 = RAdd(r1B6C,r1B81);
    real r1B83#1 = RAdd(r1B82,r1B70);
    real r1B84#1 = RMul(realLit1B76,r1B6B);
    real r1B85#1 = RAdd(r1B84,r1B6E);
    real r1B86#1 = RAdd(r1B85,r1B70);
    tensor[3] tensor1B87#1 = <tensor[3]>[r1B83,r1B86,r1B72];
    tensor[3,3] op1_e3_l_151B69#3 = <tensor[3,3]>[tensor1B7A,tensor1B80,tensor1B87];
    tensor[3] projParam1BA9#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_151B69);
    real vdot1BAA#1 = VDot<3>(op1_e3_l_21B56,projParam1BA9);
    tensor[3] projParam1BAB#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_151B69);
    real vdot1BAC#1 = VDot<3>(op1_e3_l_21B56,projParam1BAB);
    tensor[3] projParam1BAD#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_151B69);
    real vdot1BAE#1 = VDot<3>(op1_e3_l_21B56,projParam1BAD);
    tensor[3] op1_e3_l_171BA8#6 = <tensor[3]>[vdot1BAA,vdot1BAC,vdot1BAE];
    real op1_e3_l_341BB7#1 = VDot<3>(op1_e3_l_171BA8,op1_e3_l_171BA8);
    real r1BBB#1 = RMul(op1_e3_l_91B60,op1_e3_l_91B60);
    real op1_e3_l_351BBA#1 = RMul(r1BBB,op1_e3_l_341BB7);
    real op1_e3_l_361BBF#1 = Sqrt(op1_e3_l_351BBA);
    tensor[3] op1_e3_l_371BC2#1 = VScale<3>(op1_e3_l_91B60,op1_e3_l_171BA8);
    real realLit1BC6#1 = 0.1e1;
    real op1_e3_l_381BC5#2 = RDiv(realLit1BC6,op1_e3_l_361BBF);
    tensor[3] camU1BCA#2 = VScale<3>(op1_e3_l_381BC5,op1_e3_l_371BC2);
    globals.camU1ADA = camU1BCA;
    real realLit1BCF#3 = 0.e0;
    real r1BD0#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B56);
    real r1BD1#3 = RMul(realLit1BCF,r1BD0);
    real r1BD2#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B56);
    real r1BD3#3 = RMul(realLit1BCF,r1BD2);
    real r1BD4#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B56);
    real r1BD5#5 = RMul(realLit1BCF,r1BD4);
    real r1BD6#3 = RAdd(r1BD1,r1BD3);
    real r1BD7#3 = RAdd(r1BD6,r1BD5);
    real realLit1BD8#3 = 0.1e1;
    real r1BD9#1 = RMul(realLit1BD8,r1BD4);
    real r1BDA#1 = RAdd(r1BD6,r1BD9);
    real realLit1BDB#3 = -0.1e1;
    real r1BDC#1 = RMul(realLit1BDB,r1BD2);
    real r1BDD#1 = RAdd(r1BD1,r1BDC);
    real r1BDE#1 = RAdd(r1BDD,r1BD5);
    tensor[3] tensor1BDF#1 = <tensor[3]>[r1BD7,r1BDA,r1BDE];
    real r1BE0#1 = RMul(realLit1BDB,r1BD4);
    real r1BE1#1 = RAdd(r1BD6,r1BE0);
    real r1BE2#1 = RMul(realLit1BD8,r1BD0);
    real r1BE3#1 = RAdd(r1BE2,r1BD3);
    real r1BE4#1 = RAdd(r1BE3,r1BD5);
    tensor[3] tensor1BE5#1 = <tensor[3]>[r1BE1,r1BD7,r1BE4];
    real r1BE6#1 = RMul(realLit1BD8,r1BD2);
    real r1BE7#1 = RAdd(r1BD1,r1BE6);
    real r1BE8#1 = RAdd(r1BE7,r1BD5);
    real r1BE9#1 = RMul(realLit1BDB,r1BD0);
    real r1BEA#1 = RAdd(r1BE9,r1BD3);
    real r1BEB#1 = RAdd(r1BEA,r1BD5);
    tensor[3] tensor1BEC#1 = <tensor[3]>[r1BE8,r1BEB,r1BD7];
    tensor[3,3] op1_e3_l_451BCE#3 = <tensor[3,3]>[tensor1BDF,tensor1BE5,tensor1BEC];
    tensor[3] projParam1C0E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_451BCE);
    real vdot1C0F#1 = VDot<3>(op1_e3_l_171BA8,projParam1C0E);
    tensor[3] projParam1C10#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_451BCE);
    real vdot1C11#1 = VDot<3>(op1_e3_l_171BA8,projParam1C10);
    tensor[3] projParam1C12#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_451BCE);
    real vdot1C13#1 = VDot<3>(op1_e3_l_171BA8,projParam1C12);
    tensor[3] op1_e3_l_471C0D#1 = <tensor[3]>[vdot1C0F,vdot1C11,vdot1C13];
    tensor[3] op1_e3_l_501C1C#3 = VScale<3>(op1_e3_l_91B60,op1_e3_l_471C0D);
    real r1C20#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C1C);
    real r1C21#3 = RMul(op1_e3_l_381BC5,op1_e3_l_91B60);
    real r1C22#1 = RMul(r1C21,r1C20);
    real r1C23#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C1C);
    real r1C24#1 = RMul(r1C21,r1C23);
    real r1C25#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C1C);
    real r1C26#1 = RMul(r1C21,r1C25);
    tensor[3] camV1C1F#2 = <tensor[3]>[r1C22,r1C24,r1C26];
    globals.camV1ADB = camV1C1F;
    real _t1C31#1 = 0.314159265358979323846264338327950288e1;
    real _t1C33#1 = 0.36e3;
    real op1_e3_l_51C35#1 = RMul(camFOV1B2C,_t1C31);
    real op1_e3_l_61C38#1 = RDiv(op1_e3_l_51C35,_t1C33);
    real op1_e3_l_101C3B#2 = Tan(op1_e3_l_61C38);
    real camVmax1C3E#1 = RMul(op1_e3_l_101C3B,camDist1B5C);
    globals.camVmax1ADC = camVmax1C3E;
    real _t1C42#1 = IntToReal(iresU1B2E);
    real _t1C44#1 = IntToReal(iresV1B30);
    real r1C47#1 = RMul(_t1C42,op1_e3_l_101C3B);
    real op1_e3_l_141C46#1 = RMul(r1C47,camDist1B5C);
    real camUmax1C4B#1 = RDiv(op1_e3_l_141C46,_t1C44);
    globals.camUmax1ADD = camUmax1C4B;
    tensor[3,3] _t1C4F#9 = <tensor[3,3]>[camU1BCA,camV1C1F,camN1B65];
    real op1_e3_l_31C51#1 = VDot<3>(lightVsp1B32,lightVsp1B32);
    real op1_e3_l_41C54#1 = Sqrt(op1_e3_l_31C51);
    real realLit1C58#1 = 0.1e1;
    real op1_e3_l_51C57#1 = RDiv(realLit1C58,op1_e3_l_41C54);
    real r1C5D#1 = TensorIndex<tensor[3,3],[0,0]>(_t1C4F);
    real r1C5E#3 = TensorIndex<tensor[3],[0]>(lightVsp1B32);
    real r1C5F#1 = RMul(r1C5D,r1C5E);
    real r1C60#1 = TensorIndex<tensor[3,3],[1,0]>(_t1C4F);
    real r1C61#3 = TensorIndex<tensor[3],[1]>(lightVsp1B32);
    real r1C62#1 = RMul(r1C60,r1C61);
    real r1C63#1 = TensorIndex<tensor[3,3],[2,0]>(_t1C4F);
    real r1C64#3 = TensorIndex<tensor[3],[2]>(lightVsp1B32);
    real r1C65#1 = RMul(r1C63,r1C64);
    real r1C66#1 = RAdd(r1C5F,r1C62);
    real r1C67#1 = RAdd(r1C66,r1C65);
    real r1C68#1 = TensorIndex<tensor[3,3],[0,1]>(_t1C4F);
    real r1C69#1 = RMul(r1C68,r1C5E);
    real r1C6A#1 = TensorIndex<tensor[3,3],[1,1]>(_t1C4F);
    real r1C6B#1 = RMul(r1C6A,r1C61);
    real r1C6C#1 = TensorIndex<tensor[3,3],[2,1]>(_t1C4F);
    real r1C6D#1 = RMul(r1C6C,r1C64);
    real r1C6E#1 = RAdd(r1C69,r1C6B);
    real r1C6F#1 = RAdd(r1C6E,r1C6D);
    real r1C70#1 = TensorIndex<tensor[3,3],[0,2]>(_t1C4F);
    real r1C71#1 = RMul(r1C70,r1C5E);
    real r1C72#1 = TensorIndex<tensor[3,3],[1,2]>(_t1C4F);
    real r1C73#1 = RMul(r1C72,r1C61);
    real r1C74#1 = TensorIndex<tensor[3,3],[2,2]>(_t1C4F);
    real r1C75#1 = RMul(r1C74,r1C64);
    real r1C76#1 = RAdd(r1C71,r1C73);
    real r1C77#1 = RAdd(r1C76,r1C75);
    tensor[3] op1_e3_l_61C5C#1 = <tensor[3]>[r1C67,r1C6F,r1C77];
    tensor[3] light1C95#1 = VScale<3>(op1_e3_l_51C57,op1_e3_l_61C5C);
    globals.light1ADE = light1C95;
    globals._t1ADF = _t1B4E;
    globals._tX1AE0 = _t1B4C;
    globals.c1AE1 = c1B4A;
    globals.img1AE2 = img1B54;
    globals._tXX1AE3 = _t1B52;
    globals.I1AE4 = I1B50;
    return
## strand
  strand raycast (int ui1CA0#2, int vi1CA1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1CAC:  preds = []
        int iresU1CAD#1 = globals.iresU1ACC;
        int iresV1CAF#1 = globals.iresV1ACD;
        real camNear1CB1#1 = globals.camNear1ACE;
        real camDist1CB3#1 = globals.camDist1AD8;
        tensor[3] camN1CB5#1 = globals.camN1AD9;
        tensor[3] camU1CB7#1 = globals.camU1ADA;
        tensor[3] camV1CB9#1 = globals.camV1ADB;
        real camVmax1CBB#4 = globals.camVmax1ADC;
        real camUmax1CBD#2 = globals.camUmax1ADD;
        real _t1CBF#5 = -0.5e0;
        real _t1CC1#1 = IntToReal(ui1CA0);
        real _t1CC3#1 = IntToReal(iresU1CAD);
        real _t1CC5#3 = 0.5e0;
        real op1_e3_l_61CC7#1 = RSub(_t1CC3,_t1CC5);
        real op1_e3_l_71CCA#1 = RSub(_t1CC1,_t1CBF);
        real op1_e3_l_81CCD#1 = RSub(op1_e3_l_61CC7,_t1CBF);
        real op1_e3_l_91CD0#2 = RNeg(camUmax1CBD);
        real op1_e3_l_101CD3#1 = RDiv(op1_e3_l_71CCA,op1_e3_l_81CCD);
        real op1_e3_l_111CD6#1 = RSub(camUmax1CBD,op1_e3_l_91CD0);
        real op1_e3_l_131CD9#1 = RMul(op1_e3_l_101CD3,op1_e3_l_111CD6);
        real rayU1CDC#2 = RAdd(op1_e3_l_91CD0,op1_e3_l_131CD9);
        real _t1CDF#1 = IntToReal(vi1CA1);
        real _t1CE1#2 = IntToReal(iresV1CAF);
        real op1_e3_l_61CE3#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_71CE6#2 = RSub(_t1CDF,_t1CBF);
        real op1_e3_l_81CE9#1 = RSub(op1_e3_l_61CE3,_t1CBF);
        real op1_e3_l_91CEC#1 = RNeg(camVmax1CBB);
        real op1_e3_l_101CEF#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_81CE9);
        real op1_e3_l_111CF2#2 = RSub(op1_e3_l_91CEC,camVmax1CBB);
        real op1_e3_l_121CF5#1 = RMul(op1_e3_l_101CEF,op1_e3_l_111CF2);
        real rayV1CF8#1 = RAdd(camVmax1CBB,op1_e3_l_121CF5);
        real op1_e3_l_251CFB#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_271CFE#1 = RSub(op1_e3_l_251CFB,_t1CBF);
        real op1_e3_l_291D01#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_271CFE);
        real op1_e3_l_311D04#1 = RMul(op1_e3_l_291D01,op1_e3_l_111CF2);
        real op1_e3_l_321D07#1 = RAdd(camVmax1CBB,op1_e3_l_311D04);
        tensor[3] op1_e3_l_331D0A#1 = VScale<3>(rayU1CDC,camU1CB7);
        tensor[3] op1_e3_l_341D0D#1 = VScale<3>(op1_e3_l_321D07,camV1CB9);
        tensor[3] op1_e3_l_351D10#3 = VAdd<3>(op1_e3_l_331D0A,op1_e3_l_341D0D);
        real realLit1D14#1 = 0.1e1;
        real r1D15#3 = RDiv(realLit1D14,camDist1CB3);
        real r1D16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D10);
        real r1D17#1 = RMul(r1D15,r1D16);
        real r1D18#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D10);
        real r1D19#1 = RMul(r1D15,r1D18);
        real r1D1A#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D10);
        real r1D1B#1 = RMul(r1D15,r1D1A);
        tensor[3] op1_e3_l_361D13#1 = <tensor[3]>[r1D17,r1D19,r1D1B];
        tensor[3] rayVec1D26#1 = VAdd<3>(camN1CB5,op1_e3_l_361D13);
        real transp1D29#1 = 0.1e1;
        real _t1D2B#8 = 0.e0;
        tensor[3] rgb1D2D#1 = <tensor[3]>[_t1D2B,_t1D2B,_t1D2B];
        tensor[4] rgba1D2F#1 = <tensor[4]>[_t1D2B,_t1D2B,_t1D2B,_t1D2B];
        self.rayU = rayU1CDC;
        self.rayV = rayV1CF8;
        self.rayN = camNear1CB1;
        self.rayVec = rayVec1D26;
        self.transp = transp1D29;
        self.rgb = rgb1D2D;
        self.rgba = rgba1D2F;
        self.gray = _t1D2B;
        self.ui = ui1CA0;
        self.vi = vi1CA1;
        return
    end state init
    method update
        ENTRY1D3C:  preds = []
          image(IMAGE1D<double[3]>) I1D3D#17 = globals.I1AE4;
          real isoval1D3F#1 = globals.isoval1AC6;
          femData:Mesh _t1D41#17 = globals._t1ADF;
          femData:Space _t1D43#10 = globals._tX1AE0;
          femData:FemFunc c1D45#10 = globals.c1AE1;
          image(IMAGE1D<double[3]>) img1D47#0 = globals.img1AE2;
          int _t1D49#0 = globals._tXX1AE3;
          femData:Mesh a1D4B#1 = globals.a1AC3;
          real thick1D4D#1 = globals.thick1AC7;
          tensor[3] camEye1D4F#1 = globals.camEye1AC8;
          real camNear1D51#2 = globals.camNear1ACE;
          real camFar1D53#2 = globals.camFar1ACF;
          real refStep1D55#1 = globals.refStep1AD0;
          real rayStep1D57#2 = globals.rayStep1AD1;
          real phongKa1D59#1 = globals.phongKa1AD3;
          real phongKd1D5B#1 = globals.phongKd1AD4;
          bool debug1D5D#1 = globals.debug1AD5;
          int su1D5F#1 = globals.su1AD6;
          int sv1D61#1 = globals.sv1AD7;
          tensor[3] light1D63#1 = globals.light1ADE;
          real rayN1D65#4 = self.rayN;
          tensor[3] rayVec1D67#3 = self.rayVec;
          real transp1D69#10 = self.transp;
          tensor[3] rgb1D6B#9 = self.rgb;
          int ui1D6D#1 = self.ui;
          int vi1D6F#1 = self.vi;
          if debug1D5D then goto ASSIGN1D73 else goto JOIN1D7D
        ASSIGN1D73:  preds = [COND1D71]
          bool _t1D72#1 = NEQ<int>(ui1D6D,su1D5F);
          if _t1D72 then goto ASSIGN1D76 else goto ASSIGN2E4F
        ASSIGN1D76:  preds = [COND1D74]
          bool _t1D75#1 = true;
          goto JOIN1D79
        JOIN1D79:  preds = [ASSIGN1D76,ASSIGN2E4F]
          bool _t1D77#1 = phi(_t1D75,_t1D78)
          if _t1D77 then goto STABILIZE1D7B else goto JOIN1D7C
        STABILIZE1D7B:  preds = [COND1D7A]
          stabilize
          goto JOIN1D7C
        JOIN1D7C:  preds = [*STABILIZE1D7B,COND1D7A]
          goto JOIN1D7D
        JOIN1D7D:  preds = [JOIN1D7C,COND1D71]
          tensor[3] op1_e3_l_31D7E#1 = VScale<3>(rayN1D65,rayVec1D67);
          tensor[3] x1D81#6 = VAdd<3>(camEye1D4F,op1_e3_l_31D7E);
          real _t1D84#8 = 0.e0;
          real _t1D86#2 = VIndex<3,0>(x1D81);
          bool _t1D88#1 = LT<real>(_t1D84,_t1D86);
          if _t1D88 then goto ASSIGN1D8C else goto JOIN2DFF
        ASSIGN1D8C:  preds = [COND1D8A]
          real _t1D8B#11 = 0.1e1;
          bool _t1D8D#1 = LT<real>(_t1D86,_t1D8B);
          if _t1D8D then goto ASSIGN1D91 else goto JOIN2DFC
        ASSIGN1D91:  preds = [COND1D8F]
          real _t1D90#2 = VIndex<3,1>(x1D81);
          bool _t1D92#1 = LT<real>(_t1D84,_t1D90);
          if _t1D92 then goto ASSIGN1D96 else goto JOIN2DF9
        ASSIGN1D96:  preds = [COND1D94]
          bool _t1D95#1 = LT<real>(_t1D90,_t1D8B);
          if _t1D95 then goto ASSIGN1D99 else goto JOIN2DF6
        ASSIGN1D99:  preds = [COND1D97]
          real _t1D98#2 = VIndex<3,2>(x1D81);
          bool _t1D9A#1 = LT<real>(_t1D84,_t1D98);
          if _t1D9A then goto ASSIGN1D9E else goto JOIN2DF3
        ASSIGN1D9E:  preds = [COND1D9C]
          bool _t1D9D#1 = LT<real>(_t1D98,_t1D8B);
          if _t1D9D then goto ASSIGN24EC else goto JOIN2DF0
        ASSIGN24EC:  preds = [COND1D9F]
          femData:MeshPos p1DA0#1 = findPos1DA1 (a1D4B,x1D81);
          bool _t24ED#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1DA0);
          if _t24ED then goto ASSIGN24F1 else goto ASSIGN2E4A
        ASSIGN24F1:  preds = [COND24EF]
          real _t24F0#1 = 0.13e1;
          femData:MeshPos callFindPos24F2#2 = findPos1DA1 (_t1D41,x1D81);
          int intPos24F4#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F2);
          tensor[3] refPos24F6#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F2);
          int ilit24F9#1 = 10;
          int mulRes24FA#10 = IMul(intPos24F4,ilit24F9);
          int ilit24FB#1 = 0;
          int addRes24FC#1 = IAdd(mulRes24FA,ilit24FB);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FC);
          int ilit24FE#1 = 1;
          int addRes24FF#1 = IAdd(mulRes24FA,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FF);
          int ilit2501#1 = 2;
          int addRes2502#1 = IAdd(mulRes24FA,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2502);
          int ilit2504#1 = 3;
          int addRes2505#1 = IAdd(mulRes24FA,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2505);
          int ilit2507#1 = 4;
          int addRes2508#1 = IAdd(mulRes24FA,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2508);
          int ilit250A#1 = 5;
          int addRes250B#1 = IAdd(mulRes24FA,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250B);
          int ilit250D#1 = 6;
          int addRes250E#1 = IAdd(mulRes24FA,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250E);
          int ilit2510#1 = 7;
          int addRes2511#1 = IAdd(mulRes24FA,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2511);
          int ilit2513#1 = 8;
          int addRes2514#1 = IAdd(mulRes24FA,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2514);
          int ilit2516#1 = 9;
          int addRes2517#1 = IAdd(mulRes24FA,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2517);
          int[10] seq2519#1 = <int[10]>{idx24FD,idx2500,idx2503,idx2506,idx2509,idx250C,idx250F,idx2512,idx2515,idx2518};
          int[10] femIndicies24F8#10 = seq2519;
          int ilit253D#11 = 1;
          int ilit253E#1 = 0;
          int idx253F#1 = Subscript<int>(femIndicies24F8,ilit253E);
          int mulRes2540#1 = IMul(ilit253D,idx253F);
          int idx2541#1 = Subscript<int>(femIndicies24F8,ilit253D);
          int mulRes2542#1 = IMul(ilit253D,idx2541);
          int ilit2543#1 = 2;
          int idx2544#1 = Subscript<int>(femIndicies24F8,ilit2543);
          int mulRes2545#1 = IMul(ilit253D,idx2544);
          int ilit2546#1 = 3;
          int idx2547#1 = Subscript<int>(femIndicies24F8,ilit2546);
          int mulRes2548#1 = IMul(ilit253D,idx2547);
          int ilit2549#1 = 4;
          int idx254A#1 = Subscript<int>(femIndicies24F8,ilit2549);
          int mulRes254B#1 = IMul(ilit253D,idx254A);
          int ilit254C#1 = 5;
          int idx254D#1 = Subscript<int>(femIndicies24F8,ilit254C);
          int mulRes254E#1 = IMul(ilit253D,idx254D);
          int ilit254F#1 = 6;
          int idx2550#1 = Subscript<int>(femIndicies24F8,ilit254F);
          int mulRes2551#1 = IMul(ilit253D,idx2550);
          int ilit2552#1 = 7;
          int idx2553#1 = Subscript<int>(femIndicies24F8,ilit2552);
          int mulRes2554#1 = IMul(ilit253D,idx2553);
          int ilit2555#1 = 8;
          int idx2556#1 = Subscript<int>(femIndicies24F8,ilit2555);
          int mulRes2557#1 = IMul(ilit253D,idx2556);
          int ilit2558#1 = 9;
          int idx2559#1 = Subscript<int>(femIndicies24F8,ilit2558);
          int mulRes255A#1 = IMul(ilit253D,idx2559);
          real dof255B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2540);
          real dof255C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2542);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2545);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2548);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254B);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254E);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2551);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2554);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2557);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes255A);
          tensor[10] dofs2565#1 = <tensor[10]>[dof255B,dof255C,dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564];
          tensor[10] femDofs253C#4 = dofs2565;
          real varAcc2591#2 = VIndex<3,0>(refPos24F6);
          real varAcc2592#2 = VIndex<3,1>(refPos24F6);
          real varAcc2593#2 = VIndex<3,2>(refPos24F6);
          real coeff2594#3 = 0.2e1;
          real iden2595#4 = varAcc2591;
          real prod22596#1 = RMul(iden2595,varAcc2591);
          real one2597#13 = 0.1e1;
          real prod2598#3 = RMul(one2597,one2597);
          real prod2599#2 = RMul(prod22596,prod2598);
          real coeff259A#6 = 0.4e1;
          real iden259B#3 = varAcc2592;
          real prod259C#2 = RMul(iden259B,one2597);
          real prod259D#2 = RMul(iden2595,prod259C);
          real iden259E#3 = varAcc2593;
          real prod259F#2 = RMul(one2597,iden259E);
          real prod25A0#2 = RMul(iden2595,prod259F);
          real coeff25A1#3 = -0.3e1;
          real prod25A2#3 = RMul(iden2595,prod2598);
          real prod225A3#1 = RMul(iden259B,varAcc2592);
          real prod25A4#1 = RMul(prod225A3,one2597);
          real prod25A5#2 = RMul(one2597,prod25A4);
          real prod25A6#1 = RMul(iden259B,iden259E);
          real prod25A7#2 = RMul(one2597,prod25A6);
          real prod25A8#3 = RMul(one2597,prod259C);
          real prod225A9#1 = RMul(iden259E,varAcc2593);
          real prod25AA#1 = RMul(one2597,prod225A9);
          real prod25AB#2 = RMul(one2597,prod25AA);
          real prod25AC#3 = RMul(one2597,prod259F);
          real prod25AD#1 = RMul(one2597,prod2598);
          real mult25AE#1 = RMul(one2597,prod25AD);
          real mult25AF#1 = RMul(coeff25A1,prod25AC);
          real mult25B0#2 = RMul(coeff2594,prod25AB);
          real mult25B1#1 = RMul(coeff25A1,prod25A8);
          real mult25B2#2 = RMul(coeff259A,prod25A7);
          real mult25B3#2 = RMul(coeff2594,prod25A5);
          real mult25B4#1 = RMul(coeff25A1,prod25A2);
          real mult25B5#2 = RMul(coeff259A,prod25A0);
          real mult25B6#2 = RMul(coeff259A,prod259D);
          real mult25B7#2 = RMul(coeff2594,prod2599);
          real sum25B8#1 = RAdd(mult25B6,mult25B7);
          real sum25B9#1 = RAdd(mult25B5,sum25B8);
          real sum25BA#1 = RAdd(mult25B4,sum25B9);
          real sum25BB#1 = RAdd(mult25B3,sum25BA);
          real sum25BC#1 = RAdd(mult25B2,sum25BB);
          real sum25BD#1 = RAdd(mult25B1,sum25BC);
          real sum25BE#1 = RAdd(mult25B0,sum25BD);
          real sum25BF#1 = RAdd(mult25AF,sum25BE);
          real sum25C0#1 = RAdd(mult25AE,sum25BF);
          real intermediate25C1#1 = sum25C0;
          real coeff25C2#3 = -0.1e1;
          real mult25C3#1 = RMul(coeff25C2,prod25A2);
          real sum25C4#1 = RAdd(mult25C3,mult25B7);
          real intermediate25C5#1 = sum25C4;
          real mult25C6#1 = RMul(coeff25C2,prod25A8);
          real sum25C7#1 = RAdd(mult25C6,mult25B3);
          real intermediate25C8#1 = sum25C7;
          real mult25C9#1 = RMul(coeff25C2,prod25AC);
          real sum25CA#1 = RAdd(mult25C9,mult25B0);
          real intermediate25CB#1 = sum25CA;
          real coeff25CC#6 = -0.4e1;
          real mult25CD#1 = RMul(coeff259A,prod25AC);
          real mult25CE#1 = RMul(coeff25CC,prod25AB);
          real mult25CF#2 = RMul(coeff25CC,prod25A7);
          real mult25D0#2 = RMul(coeff25CC,prod25A0);
          real sum25D1#1 = RAdd(mult25CF,mult25D0);
          real sum25D2#1 = RAdd(mult25CE,sum25D1);
          real sum25D3#1 = RAdd(mult25CD,sum25D2);
          real intermediate25D4#1 = sum25D3;
          real mult25D5#1 = RMul(coeff259A,prod25A8);
          real mult25D6#1 = RMul(coeff25CC,prod25A5);
          real mult25D7#2 = RMul(coeff25CC,prod259D);
          real sum25D8#1 = RAdd(mult25D6,mult25D7);
          real sum25D9#1 = RAdd(mult25CF,sum25D8);
          real sum25DA#1 = RAdd(mult25D5,sum25D9);
          real intermediate25DB#1 = sum25DA;
          real mult25DC#1 = RMul(coeff259A,prod25A2);
          real mult25DD#1 = RMul(coeff25CC,prod2599);
          real sum25DE#1 = RAdd(mult25D7,mult25DD);
          real sum25DF#1 = RAdd(mult25D0,sum25DE);
          real sum25E0#1 = RAdd(mult25DC,sum25DF);
          real intermediate25E1#1 = sum25E0;
          tensor[10] intermediateCons25E2#1 = <tensor[10]>[intermediate25C1,intermediate25C5,intermediate25C8,intermediate25CB,mult25B2,mult25B5,mult25B6,intermediate25D4,intermediate25DB,intermediate25E1];
          tensor[10] basisResult2590#1 = intermediateCons25E2;
          real compositionl2636#2 = VDot<10>(femDofs253C,basisResult2590);
          real op1_e3_l_232639#1 = RSub(compositionl2636,isoval1D3F);
          real varAcc263D#1 = VIndex<3,0>(refPos24F6);
          real varAcc263E#1 = VIndex<3,1>(refPos24F6);
          real varAcc263F#1 = VIndex<3,2>(refPos24F6);
          real coeff2640#4 = 0.4e1;
          real iden2641#1 = varAcc263D;
          real one2642#7 = 0.1e1;
          real prod2643#2 = RMul(one2642,one2642);
          real prod2644#3 = RMul(iden2641,prod2643);
          real iden2645#1 = varAcc263E;
          real prod2646#1 = RMul(iden2645,one2642);
          real prod2647#3 = RMul(one2642,prod2646);
          real iden2648#1 = varAcc263F;
          real prod2649#1 = RMul(one2642,iden2648);
          real prod264A#3 = RMul(one2642,prod2649);
          real coeff264B#1 = -0.3e1;
          real prod264C#3 = RMul(one2642,prod2643);
          real mult264D#1 = RMul(coeff264B,prod264C);
          real mult264E#4 = RMul(coeff2640,prod264A);
          real mult264F#4 = RMul(coeff2640,prod2647);
          real mult2650#4 = RMul(coeff2640,prod2644);
          real sum2651#1 = RAdd(mult264F,mult2650);
          real sum2652#1 = RAdd(mult264E,sum2651);
          real sum2653#3 = RAdd(mult264D,sum2652);
          real intermediate2654#1 = sum2653;
          real coeff2655#1 = -0.1e1;
          real mult2656#3 = RMul(coeff2655,prod264C);
          real sum2657#1 = RAdd(mult2656,mult2650);
          real intermediate2658#1 = sum2657;
          real basisEval2659#9 = 0.e0;
          real coeff265A#3 = -0.4e1;
          real basisEval265B#4 = RMul(coeff265A,prod264A);
          real basisEval265C#4 = RMul(coeff265A,prod2647);
          real coeff265D#3 = -0.8e1;
          real mult265E#3 = RMul(coeff2640,prod264C);
          real mult265F#1 = RMul(coeff265D,prod2644);
          real sum2660#1 = RAdd(basisEval265C,mult265F);
          real sum2661#1 = RAdd(basisEval265B,sum2660);
          real sum2662#1 = RAdd(mult265E,sum2661);
          real intermediate2663#1 = sum2662;
          real intermediate2664#1 = sum2653;
          real sum2665#1 = RAdd(mult2656,mult264F);
          real intermediate2666#1 = sum2665;
          real mult2667#1 = RMul(coeff265D,prod2647);
          real mult2668#4 = RMul(coeff265A,prod2644);
          real sum2669#1 = RAdd(mult2667,mult2668);
          real sum266A#1 = RAdd(basisEval265B,sum2669);
          real sum266B#1 = RAdd(mult265E,sum266A);
          real intermediate266C#1 = sum266B;
          real intermediate266D#1 = sum2653;
          real sum266E#1 = RAdd(mult2656,mult264E);
          real intermediate266F#1 = sum266E;
          real mult2670#1 = RMul(coeff265D,prod264A);
          real sum2671#1 = RAdd(basisEval265C,mult2668);
          real sum2672#1 = RAdd(mult2670,sum2671);
          real sum2673#1 = RAdd(mult265E,sum2672);
          real intermediate2674#1 = sum2673;
          tensor[10] intermediateCons2675#1 = <tensor[10]>[intermediate2654,intermediate2658,basisEval2659,basisEval2659,basisEval2659,mult264E,mult264F,basisEval265B,basisEval265C,intermediate2663];
          tensor[10] intermediateCons2676#1 = <tensor[10]>[intermediate2664,basisEval2659,intermediate2666,basisEval2659,mult264E,basisEval2659,mult2650,basisEval265B,intermediate266C,mult2668];
          tensor[10] intermediateCons2677#1 = <tensor[10]>[intermediate266D,basisEval2659,basisEval2659,intermediate266F,mult264F,mult2650,basisEval2659,intermediate2674,basisEval265C,mult2668];
          tensor[3,10] intermediateCons2678#1 = <tensor[3,10]>[intermediateCons2675,intermediateCons2676,intermediateCons2677];
          tensor[3,10] basisResult263C#3 = intermediateCons2678;
          tensor[10] projParam26B7#1 = ProjectLast<tensor[3,10],[0]>(basisResult263C);
          real vdot26B8#1 = VDot<10>(femDofs253C,projParam26B7);
          tensor[10] projParam26B9#1 = ProjectLast<tensor[3,10],[1]>(basisResult263C);
          real vdot26BA#1 = VDot<10>(femDofs253C,projParam26B9);
          tensor[10] projParam26BB#1 = ProjectLast<tensor[3,10],[2]>(basisResult263C);
          real vdot26BC#1 = VDot<10>(femDofs253C,projParam26BB);
          tensor[3] compositionl26B6#3 = <tensor[3]>[vdot26B8,vdot26BA,vdot26BC];
          int ilit26C6#1 = 4;
          int mulRes26C7#4 = IMul(intPos24F4,ilit26C6);
          int ilit26C8#1 = 0;
          int addRes26C9#1 = IAdd(mulRes26C7,ilit26C8);
          int idx26CA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26C9);
          int ilit26CB#1 = 1;
          int addRes26CC#1 = IAdd(mulRes26C7,ilit26CB);
          int idx26CD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CC);
          int ilit26CE#1 = 2;
          int addRes26CF#1 = IAdd(mulRes26C7,ilit26CE);
          int idx26D0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CF);
          int ilit26D1#1 = 3;
          int addRes26D2#1 = IAdd(mulRes26C7,ilit26D1);
          int idx26D3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26D2);
          int[4] seq26D4#1 = <int[4]>{idx26CA,idx26CD,idx26D0,idx26D3};
          int[4] femIndicies26C5#4 = seq26D4;
          int ilit26E6#5 = 0;
          int ilit26E7#5 = 3;
          int idx26E8#1 = Subscript<int>(femIndicies26C5,ilit26E6);
          int mulRes26E9#3 = IMul(ilit26E7,idx26E8);
          int addRes26EA#1 = IAdd(ilit26E6,mulRes26E9);
          int ilit26EB#5 = 1;
          int addRes26EC#1 = IAdd(ilit26EB,mulRes26E9);
          int ilit26ED#5 = 2;
          int addRes26EE#1 = IAdd(ilit26ED,mulRes26E9);
          real dof_load26EF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EA);
          real dof_load26F0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EC);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EE);
          tensor[3] interCons26F2#1 = <tensor[3]>[dof_load26EF,dof_load26F0,dof_load26F1];
          int idx26F3#1 = Subscript<int>(femIndicies26C5,ilit26EB);
          int mulRes26F4#3 = IMul(ilit26E7,idx26F3);
          int addRes26F5#1 = IAdd(ilit26E6,mulRes26F4);
          int addRes26F6#1 = IAdd(ilit26EB,mulRes26F4);
          int addRes26F7#1 = IAdd(ilit26ED,mulRes26F4);
          real dof_load26F8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F5);
          real dof_load26F9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F6);
          real dof_load26FA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F7);
          tensor[3] interCons26FB#1 = <tensor[3]>[dof_load26F8,dof_load26F9,dof_load26FA];
          int idx26FC#1 = Subscript<int>(femIndicies26C5,ilit26ED);
          int mulRes26FD#3 = IMul(ilit26E7,idx26FC);
          int addRes26FE#1 = IAdd(ilit26E6,mulRes26FD);
          int addRes26FF#1 = IAdd(ilit26EB,mulRes26FD);
          int addRes2700#1 = IAdd(ilit26ED,mulRes26FD);
          real dof_load2701#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FE);
          real dof_load2702#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FF);
          real dof_load2703#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2700);
          tensor[3] interCons2704#1 = <tensor[3]>[dof_load2701,dof_load2702,dof_load2703];
          int idx2705#1 = Subscript<int>(femIndicies26C5,ilit26E7);
          int mulRes2706#3 = IMul(ilit26E7,idx2705);
          int addRes2707#1 = IAdd(ilit26E6,mulRes2706);
          int addRes2708#1 = IAdd(ilit26EB,mulRes2706);
          int addRes2709#1 = IAdd(ilit26ED,mulRes2706);
          real dof_load270A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2707);
          real dof_load270B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2708);
          real dof_load270C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2709);
          tensor[3] interCons270D#1 = <tensor[3]>[dof_load270A,dof_load270B,dof_load270C];
          tensor[4,3] dofs270E#1 = <tensor[4,3]>[interCons26F2,interCons26FB,interCons2704,interCons270D];
          tensor[4,3] femDofs26E5#48 = dofs270E;
          real varAcc273A#0 = VIndex<3,0>(refPos24F6);
          real varAcc273B#0 = VIndex<3,1>(refPos24F6);
          real varAcc273C#0 = VIndex<3,2>(refPos24F6);
          real coeff273D#1 = -0.1e1;
          real one273E#4 = 0.1e1;
          real prod273F#1 = RMul(one273E,one273E);
          real prod2740#2 = RMul(one273E,prod273F);
          real basisEval2741#3 = RMul(coeff273D,prod2740);
          real basisEval2742#3 = RMul(one273E,prod2740);
          real basisEval2743#6 = 0.e0;
          tensor[4] intermediateCons2744#1 = <tensor[4]>[basisEval2741,basisEval2742,basisEval2743,basisEval2743];
          tensor[4] intermediateCons2745#1 = <tensor[4]>[basisEval2741,basisEval2743,basisEval2742,basisEval2743];
          tensor[4] intermediateCons2746#1 = <tensor[4]>[basisEval2741,basisEval2743,basisEval2743,basisEval2742];
          tensor[3,4] intermediateCons2747#1 = <tensor[3,4]>[intermediateCons2744,intermediateCons2745,intermediateCons2746];
          tensor[3,4] basisResult2739#24 = intermediateCons2747;
          real r2758#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E5);
          real r2759#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult2739);
          real r275A#1 = RMul(r2758,r2759);
          real r275B#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E5);
          real r275C#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult2739);
          real r275D#1 = RMul(r275B,r275C);
          real r275E#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E5);
          real r275F#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult2739);
          real r2760#1 = RMul(r275E,r275F);
          real r2761#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E5);
          real r2762#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult2739);
          real r2763#1 = RMul(r2761,r2762);
          real r2764#1 = RAdd(r275A,r275D);
          real r2765#1 = RAdd(r2764,r2760);
          real r2766#1 = RAdd(r2765,r2763);
          real r2767#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult2739);
          real r2768#1 = RMul(r2758,r2767);
          real r2769#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult2739);
          real r276A#1 = RMul(r275B,r2769);
          real r276B#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult2739);
          real r276C#1 = RMul(r275E,r276B);
          real r276D#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult2739);
          real r276E#1 = RMul(r2761,r276D);
          real r276F#1 = RAdd(r2768,r276A);
          real r2770#1 = RAdd(r276F,r276C);
          real r2771#1 = RAdd(r2770,r276E);
          real r2772#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult2739);
          real r2773#1 = RMul(r2758,r2772);
          real r2774#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult2739);
          real r2775#1 = RMul(r275B,r2774);
          real r2776#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult2739);
          real r2777#1 = RMul(r275E,r2776);
          real r2778#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult2739);
          real r2779#1 = RMul(r2761,r2778);
          real r277A#1 = RAdd(r2773,r2775);
          real r277B#1 = RAdd(r277A,r2777);
          real r277C#1 = RAdd(r277B,r2779);
          tensor[3] tensor277D#1 = <tensor[3]>[r2766,r2771,r277C];
          real r277E#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E5);
          real r277F#1 = RMul(r277E,r2759);
          real r2780#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E5);
          real r2781#1 = RMul(r2780,r275C);
          real r2782#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E5);
          real r2783#1 = RMul(r2782,r275F);
          real r2784#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E5);
          real r2785#1 = RMul(r2784,r2762);
          real r2786#1 = RAdd(r277F,r2781);
          real r2787#1 = RAdd(r2786,r2783);
          real r2788#1 = RAdd(r2787,r2785);
          real r2789#1 = RMul(r277E,r2767);
          real r278A#1 = RMul(r2780,r2769);
          real r278B#1 = RMul(r2782,r276B);
          real r278C#1 = RMul(r2784,r276D);
          real r278D#1 = RAdd(r2789,r278A);
          real r278E#1 = RAdd(r278D,r278B);
          real r278F#1 = RAdd(r278E,r278C);
          real r2790#1 = RMul(r277E,r2772);
          real r2791#1 = RMul(r2780,r2774);
          real r2792#1 = RMul(r2782,r2776);
          real r2793#1 = RMul(r2784,r2778);
          real r2794#1 = RAdd(r2790,r2791);
          real r2795#1 = RAdd(r2794,r2792);
          real r2796#1 = RAdd(r2795,r2793);
          tensor[3] tensor2797#1 = <tensor[3]>[r2788,r278F,r2796];
          real r2798#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E5);
          real r2799#1 = RMul(r2798,r2759);
          real r279A#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E5);
          real r279B#1 = RMul(r279A,r275C);
          real r279C#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E5);
          real r279D#1 = RMul(r279C,r275F);
          real r279E#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E5);
          real r279F#1 = RMul(r279E,r2762);
          real r27A0#1 = RAdd(r2799,r279B);
          real r27A1#1 = RAdd(r27A0,r279D);
          real r27A2#1 = RAdd(r27A1,r279F);
          real r27A3#1 = RMul(r2798,r2767);
          real r27A4#1 = RMul(r279A,r2769);
          real r27A5#1 = RMul(r279C,r276B);
          real r27A6#1 = RMul(r279E,r276D);
          real r27A7#1 = RAdd(r27A3,r27A4);
          real r27A8#1 = RAdd(r27A7,r27A5);
          real r27A9#1 = RAdd(r27A8,r27A6);
          real r27AA#1 = RMul(r2798,r2772);
          real r27AB#1 = RMul(r279A,r2774);
          real r27AC#1 = RMul(r279C,r2776);
          real r27AD#1 = RMul(r279E,r2778);
          real r27AE#1 = RAdd(r27AA,r27AB);
          real r27AF#1 = RAdd(r27AE,r27AC);
          real r27B0#1 = RAdd(r27AF,r27AD);
          tensor[3] tensor27B1#1 = <tensor[3]>[r27A2,r27A9,r27B0];
          tensor[3,3] probe_l_252757#18 = <tensor[3,3]>[tensor277D,tensor2797,tensor27B1];
          real realLit280F#9 = 0.e0;
          real r2810#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_252757);
          real r2811#3 = RMul(realLit280F,r2810);
          real r2812#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_252757);
          real r2813#3 = RMul(realLit280F,r2812);
          real r2814#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_252757);
          real r2815#5 = RMul(realLit280F,r2814);
          real r2816#3 = RAdd(r2811,r2813);
          real r2817#1 = RAdd(r2816,r2815);
          real r2818#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_252757);
          real r2819#3 = RMul(realLit280F,r2818);
          real r281A#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_252757);
          real r281B#3 = RMul(realLit280F,r281A);
          real r281C#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_252757);
          real r281D#5 = RMul(realLit280F,r281C);
          real r281E#3 = RAdd(r2819,r281B);
          real r281F#1 = RAdd(r281E,r281D);
          real r2820#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_252757);
          real r2821#3 = RMul(realLit280F,r2820);
          real r2822#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_252757);
          real r2823#3 = RMul(realLit280F,r2822);
          real r2824#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_252757);
          real r2825#5 = RMul(realLit280F,r2824);
          real r2826#3 = RAdd(r2821,r2823);
          real r2827#1 = RAdd(r2826,r2825);
          tensor[3] tensor2828#3 = <tensor[3]>[r2817,r281F,r2827];
          real realLit2829#9 = -0.1e1;
          real r282A#1 = RMul(realLit2829,r2814);
          real r282B#1 = RAdd(r2816,r282A);
          real r282C#1 = RMul(realLit2829,r281C);
          real r282D#1 = RAdd(r281E,r282C);
          real r282E#1 = RMul(realLit2829,r2824);
          real r282F#1 = RAdd(r2826,r282E);
          tensor[3] tensor2830#1 = <tensor[3]>[r282B,r282D,r282F];
          real realLit2831#9 = 0.1e1;
          real r2832#1 = RMul(realLit2831,r2812);
          real r2833#1 = RAdd(r2811,r2832);
          real r2834#1 = RAdd(r2833,r2815);
          real r2835#1 = RMul(realLit2831,r281A);
          real r2836#1 = RAdd(r2819,r2835);
          real r2837#1 = RAdd(r2836,r281D);
          real r2838#1 = RMul(realLit2831,r2822);
          real r2839#1 = RAdd(r2821,r2838);
          real r283A#1 = RAdd(r2839,r2825);
          tensor[3] tensor283B#1 = <tensor[3]>[r2834,r2837,r283A];
          tensor[3,3] tensor283C#1 = <tensor[3,3]>[tensor2828,tensor2830,tensor283B];
          real r283D#1 = RMul(realLit2831,r2814);
          real r283E#1 = RAdd(r2816,r283D);
          real r283F#1 = RMul(realLit2831,r281C);
          real r2840#1 = RAdd(r281E,r283F);
          real r2841#1 = RMul(realLit2831,r2824);
          real r2842#1 = RAdd(r2826,r2841);
          tensor[3] tensor2843#1 = <tensor[3]>[r283E,r2840,r2842];
          real r2844#1 = RMul(realLit2829,r2810);
          real r2845#1 = RAdd(r2844,r2813);
          real r2846#1 = RAdd(r2845,r2815);
          real r2847#1 = RMul(realLit2829,r2818);
          real r2848#1 = RAdd(r2847,r281B);
          real r2849#1 = RAdd(r2848,r281D);
          real r284A#1 = RMul(realLit2829,r2820);
          real r284B#1 = RAdd(r284A,r2823);
          real r284C#1 = RAdd(r284B,r2825);
          tensor[3] tensor284D#1 = <tensor[3]>[r2846,r2849,r284C];
          tensor[3,3] tensor284E#1 = <tensor[3,3]>[tensor2843,tensor2828,tensor284D];
          real r284F#1 = RMul(realLit2829,r2812);
          real r2850#1 = RAdd(r2811,r284F);
          real r2851#1 = RAdd(r2850,r2815);
          real r2852#1 = RMul(realLit2829,r281A);
          real r2853#1 = RAdd(r2819,r2852);
          real r2854#1 = RAdd(r2853,r281D);
          real r2855#1 = RMul(realLit2829,r2822);
          real r2856#1 = RAdd(r2821,r2855);
          real r2857#1 = RAdd(r2856,r2825);
          tensor[3] tensor2858#1 = <tensor[3]>[r2851,r2854,r2857];
          real r2859#1 = RMul(realLit2831,r2810);
          real r285A#1 = RAdd(r2859,r2813);
          real r285B#1 = RAdd(r285A,r2815);
          real r285C#1 = RMul(realLit2831,r2818);
          real r285D#1 = RAdd(r285C,r281B);
          real r285E#1 = RAdd(r285D,r281D);
          real r285F#1 = RMul(realLit2831,r2820);
          real r2860#1 = RAdd(r285F,r2823);
          real r2861#1 = RAdd(r2860,r2825);
          tensor[3] tensor2862#1 = <tensor[3]>[r285B,r285E,r2861];
          tensor[3,3] tensor2863#1 = <tensor[3,3]>[tensor2858,tensor2862,tensor2828];
          tensor[3,3,3] op1_e3_l_27280E#27 = <tensor[3,3,3]>[tensor283C,tensor284E,tensor2863];
          real r28BC#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_252757);
          real r28BD#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_27280E);
          real r28BE#1 = RMul(r28BC,r28BD);
          real r28BF#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_252757);
          real r28C0#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_27280E);
          real r28C1#1 = RMul(r28BF,r28C0);
          real r28C2#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_252757);
          real r28C3#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_27280E);
          real r28C4#1 = RMul(r28C2,r28C3);
          real r28C5#1 = RAdd(r28BE,r28C1);
          real r28C6#1 = RAdd(r28C5,r28C4);
          real r28C7#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_27280E);
          real r28C8#1 = RMul(r28BC,r28C7);
          real r28C9#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_27280E);
          real r28CA#1 = RMul(r28BF,r28C9);
          real r28CB#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_27280E);
          real r28CC#1 = RMul(r28C2,r28CB);
          real r28CD#1 = RAdd(r28C8,r28CA);
          real r28CE#1 = RAdd(r28CD,r28CC);
          real r28CF#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_27280E);
          real r28D0#1 = RMul(r28BC,r28CF);
          real r28D1#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_27280E);
          real r28D2#1 = RMul(r28BF,r28D1);
          real r28D3#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_27280E);
          real r28D4#1 = RMul(r28C2,r28D3);
          real r28D5#1 = RAdd(r28D0,r28D2);
          real r28D6#1 = RAdd(r28D5,r28D4);
          tensor[3] tensor28D7#1 = <tensor[3]>[r28C6,r28CE,r28D6];
          real r28D8#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_27280E);
          real r28D9#1 = RMul(r28BC,r28D8);
          real r28DA#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_27280E);
          real r28DB#1 = RMul(r28BF,r28DA);
          real r28DC#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_27280E);
          real r28DD#1 = RMul(r28C2,r28DC);
          real r28DE#1 = RAdd(r28D9,r28DB);
          real r28DF#1 = RAdd(r28DE,r28DD);
          real r28E0#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_27280E);
          real r28E1#1 = RMul(r28BC,r28E0);
          real r28E2#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_27280E);
          real r28E3#1 = RMul(r28BF,r28E2);
          real r28E4#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_27280E);
          real r28E5#1 = RMul(r28C2,r28E4);
          real r28E6#1 = RAdd(r28E1,r28E3);
          real r28E7#1 = RAdd(r28E6,r28E5);
          real r28E8#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_27280E);
          real r28E9#1 = RMul(r28BC,r28E8);
          real r28EA#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_27280E);
          real r28EB#1 = RMul(r28BF,r28EA);
          real r28EC#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_27280E);
          real r28ED#1 = RMul(r28C2,r28EC);
          real r28EE#1 = RAdd(r28E9,r28EB);
          real r28EF#1 = RAdd(r28EE,r28ED);
          tensor[3] tensor28F0#1 = <tensor[3]>[r28DF,r28E7,r28EF];
          real r28F1#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_27280E);
          real r28F2#1 = RMul(r28BC,r28F1);
          real r28F3#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_27280E);
          real r28F4#1 = RMul(r28BF,r28F3);
          real r28F5#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_27280E);
          real r28F6#1 = RMul(r28C2,r28F5);
          real r28F7#1 = RAdd(r28F2,r28F4);
          real r28F8#1 = RAdd(r28F7,r28F6);
          real r28F9#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_27280E);
          real r28FA#1 = RMul(r28BC,r28F9);
          real r28FB#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_27280E);
          real r28FC#1 = RMul(r28BF,r28FB);
          real r28FD#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_27280E);
          real r28FE#1 = RMul(r28C2,r28FD);
          real r28FF#1 = RAdd(r28FA,r28FC);
          real r2900#1 = RAdd(r28FF,r28FE);
          real r2901#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_27280E);
          real r2902#1 = RMul(r28BC,r2901);
          real r2903#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_27280E);
          real r2904#1 = RMul(r28BF,r2903);
          real r2905#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_27280E);
          real r2906#1 = RMul(r28C2,r2905);
          real r2907#1 = RAdd(r2902,r2904);
          real r2908#1 = RAdd(r2907,r2906);
          tensor[3] tensor2909#1 = <tensor[3]>[r28F8,r2900,r2908];
          tensor[3,3] tensor290A#1 = <tensor[3,3]>[tensor28D7,tensor28F0,tensor2909];
          real r290B#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_252757);
          real r290C#1 = RMul(r290B,r28BD);
          real r290D#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_252757);
          real r290E#1 = RMul(r290D,r28C0);
          real r290F#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_252757);
          real r2910#1 = RMul(r290F,r28C3);
          real r2911#1 = RAdd(r290C,r290E);
          real r2912#1 = RAdd(r2911,r2910);
          real r2913#1 = RMul(r290B,r28C7);
          real r2914#1 = RMul(r290D,r28C9);
          real r2915#1 = RMul(r290F,r28CB);
          real r2916#1 = RAdd(r2913,r2914);
          real r2917#1 = RAdd(r2916,r2915);
          real r2918#1 = RMul(r290B,r28CF);
          real r2919#1 = RMul(r290D,r28D1);
          real r291A#1 = RMul(r290F,r28D3);
          real r291B#1 = RAdd(r2918,r2919);
          real r291C#1 = RAdd(r291B,r291A);
          tensor[3] tensor291D#1 = <tensor[3]>[r2912,r2917,r291C];
          real r291E#1 = RMul(r290B,r28D8);
          real r291F#1 = RMul(r290D,r28DA);
          real r2920#1 = RMul(r290F,r28DC);
          real r2921#1 = RAdd(r291E,r291F);
          real r2922#1 = RAdd(r2921,r2920);
          real r2923#1 = RMul(r290B,r28E0);
          real r2924#1 = RMul(r290D,r28E2);
          real r2925#1 = RMul(r290F,r28E4);
          real r2926#1 = RAdd(r2923,r2924);
          real r2927#1 = RAdd(r2926,r2925);
          real r2928#1 = RMul(r290B,r28E8);
          real r2929#1 = RMul(r290D,r28EA);
          real r292A#1 = RMul(r290F,r28EC);
          real r292B#1 = RAdd(r2928,r2929);
          real r292C#1 = RAdd(r292B,r292A);
          tensor[3] tensor292D#1 = <tensor[3]>[r2922,r2927,r292C];
          real r292E#1 = RMul(r290B,r28F1);
          real r292F#1 = RMul(r290D,r28F3);
          real r2930#1 = RMul(r290F,r28F5);
          real r2931#1 = RAdd(r292E,r292F);
          real r2932#1 = RAdd(r2931,r2930);
          real r2933#1 = RMul(r290B,r28F9);
          real r2934#1 = RMul(r290D,r28FB);
          real r2935#1 = RMul(r290F,r28FD);
          real r2936#1 = RAdd(r2933,r2934);
          real r2937#1 = RAdd(r2936,r2935);
          real r2938#1 = RMul(r290B,r2901);
          real r2939#1 = RMul(r290D,r2903);
          real r293A#1 = RMul(r290F,r2905);
          real r293B#1 = RAdd(r2938,r2939);
          real r293C#1 = RAdd(r293B,r293A);
          tensor[3] tensor293D#1 = <tensor[3]>[r2932,r2937,r293C];
          tensor[3,3] tensor293E#1 = <tensor[3,3]>[tensor291D,tensor292D,tensor293D];
          real r293F#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_252757);
          real r2940#1 = RMul(r293F,r28BD);
          real r2941#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_252757);
          real r2942#1 = RMul(r2941,r28C0);
          real r2943#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_252757);
          real r2944#1 = RMul(r2943,r28C3);
          real r2945#1 = RAdd(r2940,r2942);
          real r2946#1 = RAdd(r2945,r2944);
          real r2947#1 = RMul(r293F,r28C7);
          real r2948#1 = RMul(r2941,r28C9);
          real r2949#1 = RMul(r2943,r28CB);
          real r294A#1 = RAdd(r2947,r2948);
          real r294B#1 = RAdd(r294A,r2949);
          real r294C#1 = RMul(r293F,r28CF);
          real r294D#1 = RMul(r2941,r28D1);
          real r294E#1 = RMul(r2943,r28D3);
          real r294F#1 = RAdd(r294C,r294D);
          real r2950#1 = RAdd(r294F,r294E);
          tensor[3] tensor2951#1 = <tensor[3]>[r2946,r294B,r2950];
          real r2952#1 = RMul(r293F,r28D8);
          real r2953#1 = RMul(r2941,r28DA);
          real r2954#1 = RMul(r2943,r28DC);
          real r2955#1 = RAdd(r2952,r2953);
          real r2956#1 = RAdd(r2955,r2954);
          real r2957#1 = RMul(r293F,r28E0);
          real r2958#1 = RMul(r2941,r28E2);
          real r2959#1 = RMul(r2943,r28E4);
          real r295A#1 = RAdd(r2957,r2958);
          real r295B#1 = RAdd(r295A,r2959);
          real r295C#1 = RMul(r293F,r28E8);
          real r295D#1 = RMul(r2941,r28EA);
          real r295E#1 = RMul(r2943,r28EC);
          real r295F#1 = RAdd(r295C,r295D);
          real r2960#1 = RAdd(r295F,r295E);
          tensor[3] tensor2961#1 = <tensor[3]>[r2956,r295B,r2960];
          real r2962#1 = RMul(r293F,r28F1);
          real r2963#1 = RMul(r2941,r28F3);
          real r2964#1 = RMul(r2943,r28F5);
          real r2965#1 = RAdd(r2962,r2963);
          real r2966#1 = RAdd(r2965,r2964);
          real r2967#1 = RMul(r293F,r28F9);
          real r2968#1 = RMul(r2941,r28FB);
          real r2969#1 = RMul(r2943,r28FD);
          real r296A#1 = RAdd(r2967,r2968);
          real r296B#1 = RAdd(r296A,r2969);
          real r296C#1 = RMul(r293F,r2901);
          real r296D#1 = RMul(r2941,r2903);
          real r296E#1 = RMul(r2943,r2905);
          real r296F#1 = RAdd(r296C,r296D);
          real r2970#1 = RAdd(r296F,r296E);
          tensor[3] tensor2971#1 = <tensor[3]>[r2966,r296B,r2970];
          tensor[3,3] tensor2972#1 = <tensor[3,3]>[tensor2951,tensor2961,tensor2971];
          tensor[3,3,3] op1_e3_l_2828BB#27 = <tensor[3,3,3]>[tensor290A,tensor293E,tensor2972];
          real r2A2D#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E5);
          real r2A2E#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult2739);
          real r2A2F#1 = RMul(r2A2D,r2A2E);
          real r2A30#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E5);
          real r2A31#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult2739);
          real r2A32#1 = RMul(r2A30,r2A31);
          real r2A33#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E5);
          real r2A34#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult2739);
          real r2A35#1 = RMul(r2A33,r2A34);
          real r2A36#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E5);
          real r2A37#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult2739);
          real r2A38#1 = RMul(r2A36,r2A37);
          real r2A39#1 = RAdd(r2A2F,r2A32);
          real r2A3A#1 = RAdd(r2A39,r2A35);
          real r2A3B#1 = RAdd(r2A3A,r2A38);
          real r2A3C#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E5);
          real r2A3D#1 = RMul(r2A3C,r2A2E);
          real r2A3E#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E5);
          real r2A3F#1 = RMul(r2A3E,r2A31);
          real r2A40#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E5);
          real r2A41#1 = RMul(r2A40,r2A34);
          real r2A42#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E5);
          real r2A43#1 = RMul(r2A42,r2A37);
          real r2A44#1 = RAdd(r2A3D,r2A3F);
          real r2A45#1 = RAdd(r2A44,r2A41);
          real r2A46#1 = RAdd(r2A45,r2A43);
          real r2A47#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E5);
          real r2A48#1 = RMul(r2A47,r2A2E);
          real r2A49#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E5);
          real r2A4A#1 = RMul(r2A49,r2A31);
          real r2A4B#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E5);
          real r2A4C#1 = RMul(r2A4B,r2A34);
          real r2A4D#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E5);
          real r2A4E#1 = RMul(r2A4D,r2A37);
          real r2A4F#1 = RAdd(r2A48,r2A4A);
          real r2A50#1 = RAdd(r2A4F,r2A4C);
          real r2A51#1 = RAdd(r2A50,r2A4E);
          tensor[3] probe_l_292A2C#1 = <tensor[3]>[r2A3B,r2A46,r2A51];
          real r2A7A#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E5);
          real r2A7B#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult2739);
          real r2A7C#1 = RMul(r2A7A,r2A7B);
          real r2A7D#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E5);
          real r2A7E#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult2739);
          real r2A7F#1 = RMul(r2A7D,r2A7E);
          real r2A80#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E5);
          real r2A81#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult2739);
          real r2A82#1 = RMul(r2A80,r2A81);
          real r2A83#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E5);
          real r2A84#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult2739);
          real r2A85#1 = RMul(r2A83,r2A84);
          real r2A86#1 = RAdd(r2A7C,r2A7F);
          real r2A87#1 = RAdd(r2A86,r2A82);
          real r2A88#1 = RAdd(r2A87,r2A85);
          real r2A89#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E5);
          real r2A8A#1 = RMul(r2A89,r2A7B);
          real r2A8B#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E5);
          real r2A8C#1 = RMul(r2A8B,r2A7E);
          real r2A8D#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E5);
          real r2A8E#1 = RMul(r2A8D,r2A81);
          real r2A8F#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E5);
          real r2A90#1 = RMul(r2A8F,r2A84);
          real r2A91#1 = RAdd(r2A8A,r2A8C);
          real r2A92#1 = RAdd(r2A91,r2A8E);
          real r2A93#1 = RAdd(r2A92,r2A90);
          real r2A94#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E5);
          real r2A95#1 = RMul(r2A94,r2A7B);
          real r2A96#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E5);
          real r2A97#1 = RMul(r2A96,r2A7E);
          real r2A98#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E5);
          real r2A99#1 = RMul(r2A98,r2A81);
          real r2A9A#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E5);
          real r2A9B#1 = RMul(r2A9A,r2A84);
          real r2A9C#1 = RAdd(r2A95,r2A97);
          real r2A9D#1 = RAdd(r2A9C,r2A99);
          real r2A9E#1 = RAdd(r2A9D,r2A9B);
          tensor[3] probe_l_302A79#3 = <tensor[3]>[r2A88,r2A93,r2A9E];
          real r2AC7#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E5);
          real r2AC8#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult2739);
          real r2AC9#1 = RMul(r2AC7,r2AC8);
          real r2ACA#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E5);
          real r2ACB#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult2739);
          real r2ACC#1 = RMul(r2ACA,r2ACB);
          real r2ACD#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E5);
          real r2ACE#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult2739);
          real r2ACF#1 = RMul(r2ACD,r2ACE);
          real r2AD0#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E5);
          real r2AD1#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult2739);
          real r2AD2#1 = RMul(r2AD0,r2AD1);
          real r2AD3#1 = RAdd(r2AC9,r2ACC);
          real r2AD4#1 = RAdd(r2AD3,r2ACF);
          real r2AD5#1 = RAdd(r2AD4,r2AD2);
          real r2AD6#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E5);
          real r2AD7#1 = RMul(r2AD6,r2AC8);
          real r2AD8#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E5);
          real r2AD9#1 = RMul(r2AD8,r2ACB);
          real r2ADA#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E5);
          real r2ADB#1 = RMul(r2ADA,r2ACE);
          real r2ADC#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E5);
          real r2ADD#1 = RMul(r2ADC,r2AD1);
          real r2ADE#1 = RAdd(r2AD7,r2AD9);
          real r2ADF#1 = RAdd(r2ADE,r2ADB);
          real r2AE0#1 = RAdd(r2ADF,r2ADD);
          real r2AE1#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E5);
          real r2AE2#1 = RMul(r2AE1,r2AC8);
          real r2AE3#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E5);
          real r2AE4#1 = RMul(r2AE3,r2ACB);
          real r2AE5#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E5);
          real r2AE6#1 = RMul(r2AE5,r2ACE);
          real r2AE7#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E5);
          real r2AE8#1 = RMul(r2AE7,r2AD1);
          real r2AE9#1 = RAdd(r2AE2,r2AE4);
          real r2AEA#1 = RAdd(r2AE9,r2AE6);
          real r2AEB#1 = RAdd(r2AEA,r2AE8);
          tensor[3] probe_l_312AC6#3 = <tensor[3]>[r2AD5,r2AE0,r2AEB];
          real realLit2B14#3 = 0.e0;
          real r2B15#3 = TensorIndex<tensor[3],[0]>(probe_l_312AC6);
          real r2B16#3 = RMul(realLit2B14,r2B15);
          real r2B17#3 = TensorIndex<tensor[3],[1]>(probe_l_312AC6);
          real r2B18#3 = RMul(realLit2B14,r2B17);
          real r2B19#3 = TensorIndex<tensor[3],[2]>(probe_l_312AC6);
          real r2B1A#5 = RMul(realLit2B14,r2B19);
          real r2B1B#3 = RAdd(r2B16,r2B18);
          real r2B1C#3 = RAdd(r2B1B,r2B1A);
          real realLit2B1D#3 = 0.1e1;
          real r2B1E#1 = RMul(realLit2B1D,r2B19);
          real r2B1F#1 = RAdd(r2B1B,r2B1E);
          real realLit2B20#3 = -0.1e1;
          real r2B21#1 = RMul(realLit2B20,r2B17);
          real r2B22#1 = RAdd(r2B16,r2B21);
          real r2B23#1 = RAdd(r2B22,r2B1A);
          tensor[3] tensor2B24#1 = <tensor[3]>[r2B1C,r2B1F,r2B23];
          real r2B25#1 = RMul(realLit2B20,r2B19);
          real r2B26#1 = RAdd(r2B1B,r2B25);
          real r2B27#1 = RMul(realLit2B1D,r2B15);
          real r2B28#1 = RAdd(r2B27,r2B18);
          real r2B29#1 = RAdd(r2B28,r2B1A);
          tensor[3] tensor2B2A#1 = <tensor[3]>[r2B26,r2B1C,r2B29];
          real r2B2B#1 = RMul(realLit2B1D,r2B17);
          real r2B2C#1 = RAdd(r2B16,r2B2B);
          real r2B2D#1 = RAdd(r2B2C,r2B1A);
          real r2B2E#1 = RMul(realLit2B20,r2B15);
          real r2B2F#1 = RAdd(r2B2E,r2B18);
          real r2B30#1 = RAdd(r2B2F,r2B1A);
          tensor[3] tensor2B31#1 = <tensor[3]>[r2B2D,r2B30,r2B1C];
          tensor[3,3] op1_e3_l_322B13#3 = <tensor[3,3]>[tensor2B24,tensor2B2A,tensor2B31];
          tensor[3] projParam2B53#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_322B13);
          real vdot2B54#1 = VDot<3>(probe_l_302A79,projParam2B53);
          tensor[3] projParam2B55#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_322B13);
          real vdot2B56#1 = VDot<3>(probe_l_302A79,projParam2B55);
          tensor[3] projParam2B57#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_322B13);
          real vdot2B58#1 = VDot<3>(probe_l_302A79,projParam2B57);
          tensor[3] op1_e3_l_332B52#1 = <tensor[3]>[vdot2B54,vdot2B56,vdot2B58];
          real op1_e3_l_342B61#1 = VDot<3>(probe_l_292A2C,op1_e3_l_332B52);
          real realLit2B65#27 = 0.e0;
          real r2B66#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_2828BB);
          real r2B67#2 = RMul(realLit2B65,r2B66);
          real r2B68#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_2828BB);
          real r2B69#1 = RMul(realLit2B65,r2B68);
          real r2B6A#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_2828BB);
          real r2B6B#2 = RMul(realLit2B65,r2B6A);
          real r2B6C#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_2828BB);
          real r2B6D#2 = RMul(realLit2B65,r2B6C);
          real r2B6E#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_2828BB);
          real r2B6F#3 = RMul(realLit2B65,r2B6E);
          real realLit2B70#9 = 0.1e1;
          real r2B71#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_2828BB);
          real r2B72#1 = RMul(realLit2B70,r2B71);
          real r2B73#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_2828BB);
          real r2B74#2 = RMul(realLit2B65,r2B73);
          real realLit2B75#9 = -0.1e1;
          real r2B76#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_2828BB);
          real r2B77#1 = RMul(realLit2B75,r2B76);
          real r2B78#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_2828BB);
          real r2B79#3 = RMul(realLit2B65,r2B78);
          real r2B7A#2 = RAdd(r2B67,r2B69);
          real r2B7B#1 = RAdd(r2B7A,r2B6B);
          real r2B7C#1 = RAdd(r2B7B,r2B6D);
          real r2B7D#1 = RAdd(r2B7C,r2B6F);
          real r2B7E#1 = RAdd(r2B7D,r2B72);
          real r2B7F#1 = RAdd(r2B7E,r2B74);
          real r2B80#1 = RAdd(r2B7F,r2B77);
          real r2B81#1 = RAdd(r2B80,r2B79);
          real r2B82#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_2828BB);
          real r2B83#2 = RMul(realLit2B65,r2B82);
          real r2B84#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_2828BB);
          real r2B85#1 = RMul(realLit2B65,r2B84);
          real r2B86#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_2828BB);
          real r2B87#2 = RMul(realLit2B65,r2B86);
          real r2B88#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_2828BB);
          real r2B89#2 = RMul(realLit2B65,r2B88);
          real r2B8A#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_2828BB);
          real r2B8B#3 = RMul(realLit2B65,r2B8A);
          real r2B8C#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_2828BB);
          real r2B8D#1 = RMul(realLit2B70,r2B8C);
          real r2B8E#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_2828BB);
          real r2B8F#2 = RMul(realLit2B65,r2B8E);
          real r2B90#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_2828BB);
          real r2B91#1 = RMul(realLit2B75,r2B90);
          real r2B92#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_2828BB);
          real r2B93#3 = RMul(realLit2B65,r2B92);
          real r2B94#2 = RAdd(r2B83,r2B85);
          real r2B95#1 = RAdd(r2B94,r2B87);
          real r2B96#1 = RAdd(r2B95,r2B89);
          real r2B97#1 = RAdd(r2B96,r2B8B);
          real r2B98#1 = RAdd(r2B97,r2B8D);
          real r2B99#1 = RAdd(r2B98,r2B8F);
          real r2B9A#1 = RAdd(r2B99,r2B91);
          real r2B9B#1 = RAdd(r2B9A,r2B93);
          real r2B9C#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_2828BB);
          real r2B9D#2 = RMul(realLit2B65,r2B9C);
          real r2B9E#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_2828BB);
          real r2B9F#1 = RMul(realLit2B65,r2B9E);
          real r2BA0#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_2828BB);
          real r2BA1#2 = RMul(realLit2B65,r2BA0);
          real r2BA2#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_2828BB);
          real r2BA3#2 = RMul(realLit2B65,r2BA2);
          real r2BA4#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_2828BB);
          real r2BA5#3 = RMul(realLit2B65,r2BA4);
          real r2BA6#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_2828BB);
          real r2BA7#1 = RMul(realLit2B70,r2BA6);
          real r2BA8#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_2828BB);
          real r2BA9#2 = RMul(realLit2B65,r2BA8);
          real r2BAA#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_2828BB);
          real r2BAB#1 = RMul(realLit2B75,r2BAA);
          real r2BAC#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_2828BB);
          real r2BAD#3 = RMul(realLit2B65,r2BAC);
          real r2BAE#2 = RAdd(r2B9D,r2B9F);
          real r2BAF#1 = RAdd(r2BAE,r2BA1);
          real r2BB0#1 = RAdd(r2BAF,r2BA3);
          real r2BB1#1 = RAdd(r2BB0,r2BA5);
          real r2BB2#1 = RAdd(r2BB1,r2BA7);
          real r2BB3#1 = RAdd(r2BB2,r2BA9);
          real r2BB4#1 = RAdd(r2BB3,r2BAB);
          real r2BB5#1 = RAdd(r2BB4,r2BAD);
          tensor[3] tensor2BB6#1 = <tensor[3]>[r2B81,r2B9B,r2BB5];
          real r2BB7#1 = RMul(realLit2B75,r2B6A);
          real r2BB8#2 = RMul(realLit2B65,r2B71);
          real r2BB9#1 = RMul(realLit2B70,r2B73);
          real r2BBA#2 = RMul(realLit2B65,r2B76);
          real r2BBB#1 = RAdd(r2B7A,r2BB7);
          real r2BBC#1 = RAdd(r2BBB,r2B6D);
          real r2BBD#1 = RAdd(r2BBC,r2B6F);
          real r2BBE#1 = RAdd(r2BBD,r2BB8);
          real r2BBF#1 = RAdd(r2BBE,r2BB9);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2B79);
          real r2BC2#1 = RMul(realLit2B75,r2B86);
          real r2BC3#2 = RMul(realLit2B65,r2B8C);
          real r2BC4#1 = RMul(realLit2B70,r2B8E);
          real r2BC5#2 = RMul(realLit2B65,r2B90);
          real r2BC6#1 = RAdd(r2B94,r2BC2);
          real r2BC7#1 = RAdd(r2BC6,r2B89);
          real r2BC8#1 = RAdd(r2BC7,r2B8B);
          real r2BC9#1 = RAdd(r2BC8,r2BC3);
          real r2BCA#1 = RAdd(r2BC9,r2BC4);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2B93);
          real r2BCD#1 = RMul(realLit2B75,r2BA0);
          real r2BCE#2 = RMul(realLit2B65,r2BA6);
          real r2BCF#1 = RMul(realLit2B70,r2BA8);
          real r2BD0#2 = RMul(realLit2B65,r2BAA);
          real r2BD1#1 = RAdd(r2BAE,r2BCD);
          real r2BD2#1 = RAdd(r2BD1,r2BA3);
          real r2BD3#1 = RAdd(r2BD2,r2BA5);
          real r2BD4#1 = RAdd(r2BD3,r2BCE);
          real r2BD5#1 = RAdd(r2BD4,r2BCF);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BAD);
          tensor[3] tensor2BD8#1 = <tensor[3]>[r2BC1,r2BCC,r2BD7];
          real r2BD9#1 = RMul(realLit2B70,r2B68);
          real r2BDA#1 = RMul(realLit2B75,r2B6C);
          real r2BDB#1 = RAdd(r2B67,r2BD9);
          real r2BDC#1 = RAdd(r2BDB,r2B6B);
          real r2BDD#1 = RAdd(r2BDC,r2BDA);
          real r2BDE#1 = RAdd(r2BDD,r2B6F);
          real r2BDF#1 = RAdd(r2BDE,r2BB8);
          real r2BE0#1 = RAdd(r2BDF,r2B74);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B79);
          real r2BE3#1 = RMul(realLit2B70,r2B84);
          real r2BE4#1 = RMul(realLit2B75,r2B88);
          real r2BE5#1 = RAdd(r2B83,r2BE3);
          real r2BE6#1 = RAdd(r2BE5,r2B87);
          real r2BE7#1 = RAdd(r2BE6,r2BE4);
          real r2BE8#1 = RAdd(r2BE7,r2B8B);
          real r2BE9#1 = RAdd(r2BE8,r2BC3);
          real r2BEA#1 = RAdd(r2BE9,r2B8F);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B93);
          real r2BED#1 = RMul(realLit2B70,r2B9E);
          real r2BEE#1 = RMul(realLit2B75,r2BA2);
          real r2BEF#1 = RAdd(r2B9D,r2BED);
          real r2BF0#1 = RAdd(r2BEF,r2BA1);
          real r2BF1#1 = RAdd(r2BF0,r2BEE);
          real r2BF2#1 = RAdd(r2BF1,r2BA5);
          real r2BF3#1 = RAdd(r2BF2,r2BCE);
          real r2BF4#1 = RAdd(r2BF3,r2BA9);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAD);
          tensor[3] tensor2BF7#1 = <tensor[3]>[r2BE2,r2BEC,r2BF6];
          tensor[3,3] op1_e3_l_352B64#9 = <tensor[3,3]>[tensor2BB6,tensor2BD8,tensor2BF7];
          real realLit2C8E#1 = 0.2e1;
          real op1_e3_l_362C8D#9 = RMul(realLit2C8E,op1_e3_l_342B61);
          real r2C93#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_352B64);
          real r2C94#1 = RDiv(r2C93,op1_e3_l_362C8D);
          real r2C95#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_352B64);
          real r2C96#1 = RDiv(r2C95,op1_e3_l_362C8D);
          real r2C97#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_352B64);
          real r2C98#1 = RDiv(r2C97,op1_e3_l_362C8D);
          tensor[3] tensor2C99#1 = <tensor[3]>[r2C94,r2C96,r2C98];
          real r2C9A#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_352B64);
          real r2C9B#1 = RDiv(r2C9A,op1_e3_l_362C8D);
          real r2C9C#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_352B64);
          real r2C9D#1 = RDiv(r2C9C,op1_e3_l_362C8D);
          real r2C9E#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_352B64);
          real r2C9F#1 = RDiv(r2C9E,op1_e3_l_362C8D);
          tensor[3] tensor2CA0#1 = <tensor[3]>[r2C9B,r2C9D,r2C9F];
          real r2CA1#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_352B64);
          real r2CA2#1 = RDiv(r2CA1,op1_e3_l_362C8D);
          real r2CA3#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_352B64);
          real r2CA4#1 = RDiv(r2CA3,op1_e3_l_362C8D);
          real r2CA5#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_352B64);
          real r2CA6#1 = RDiv(r2CA5,op1_e3_l_362C8D);
          tensor[3] tensor2CA7#1 = <tensor[3]>[r2CA2,r2CA4,r2CA6];
          tensor[3,3] op1_e3_l_372C92#9 = <tensor[3,3]>[tensor2C99,tensor2CA0,tensor2CA7];
          real r2CC0#3 = TensorIndex<tensor[3],[0]>(compositionl26B6);
          real r2CC1#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_372C92);
          real r2CC2#1 = RMul(r2CC0,r2CC1);
          real r2CC3#3 = TensorIndex<tensor[3],[1]>(compositionl26B6);
          real r2CC4#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_372C92);
          real r2CC5#1 = RMul(r2CC3,r2CC4);
          real r2CC6#3 = TensorIndex<tensor[3],[2]>(compositionl26B6);
          real r2CC7#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_372C92);
          real r2CC8#1 = RMul(r2CC6,r2CC7);
          real r2CC9#1 = RAdd(r2CC2,r2CC5);
          real r2CCA#1 = RAdd(r2CC9,r2CC8);
          real r2CCB#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_372C92);
          real r2CCC#1 = RMul(r2CC0,r2CCB);
          real r2CCD#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_372C92);
          real r2CCE#1 = RMul(r2CC3,r2CCD);
          real r2CCF#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_372C92);
          real r2CD0#1 = RMul(r2CC6,r2CCF);
          real r2CD1#1 = RAdd(r2CCC,r2CCE);
          real r2CD2#1 = RAdd(r2CD1,r2CD0);
          real r2CD3#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_372C92);
          real r2CD4#1 = RMul(r2CC0,r2CD3);
          real r2CD5#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_372C92);
          real r2CD6#1 = RMul(r2CC3,r2CD5);
          real r2CD7#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_372C92);
          real r2CD8#1 = RMul(r2CC6,r2CD7);
          real r2CD9#1 = RAdd(r2CD4,r2CD6);
          real r2CDA#1 = RAdd(r2CD9,r2CD8);
          tensor[3] op1_e3_l_382CBF#1 = <tensor[3]>[r2CCA,r2CD2,r2CDA];
          tensor[3] op1_e3_l_542CF8#3 = VNeg<3>(op1_e3_l_382CBF);
          real op1_e3_l_562CFB#1 = VDot<3>(op1_e3_l_542CF8,op1_e3_l_542CF8);
          real op1_e3_l_572CFE#2 = Sqrt(op1_e3_l_562CFB);
          real op1_e3_l_582D01#1 = Abs<real>(op1_e3_l_232639);
          real op1_e3_l_592D04#1 = RMul(thick1D4D,op1_e3_l_572CFE);
          real op1_e3_l_602D07#1 = RDiv(op1_e3_l_582D01,op1_e3_l_592D04);
          real op1_e3_l_612D0A#1 = RSub(_t1D8B,op1_e3_l_602D07);
          real op1_e3_l_622D0D#2 = RMul(_t24F0,op1_e3_l_612D0A);
          real op1_e3_l_632D10#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real a2D13#1 = RMul(_t1D8B,op1_e3_l_632D10);
          bool _t2D16#1 = GT<real>(a2D13,_t1D84);
          if _t2D16 then goto ASSIGN2D1B else goto JOIN2DEA
        ASSIGN2D1B:  preds = [COND2D18]
          real op1_e3_l_642D19#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real op1_e3_l_652D1C#1 = RMul(_t1D8B,op1_e3_l_642D19);
          real _t2D1F#1 = RSub(_t1D8B,op1_e3_l_652D1C);
          real op1_e3_l_32D22#1 = VDot<3>(rayVec1D67,rayVec1D67);
          real op1_e3_l_42D25#1 = Sqrt(op1_e3_l_32D22);
          real op1_e3_l_52D28#1 = RMul(rayStep1D57,op1_e3_l_42D25);
          real _t2D2B#1 = RDiv(op1_e3_l_52D28,refStep1D55);
          real _t2D2E#1 = MathFn<pow>(_t2D1F,_t2D2B);
          real _t2D30#2 = 0.11e1;
          real _t2D32#1 = 0.7e0;
          real realLit2D35#1 = 0.1e1;
          real op1_e3_l_672D34#1 = RDiv(realLit2D35,op1_e3_l_572CFE);
          real op1_e3_l_682D39#1 = VDot<3>(op1_e3_l_542CF8,light1D63);
          real _t2D3C#1 = RMul(op1_e3_l_672D34,op1_e3_l_682D39);
          real shade2D3F#1 = Max<real>(_t1D84,_t2D3C);
          real _t2D41#1 = compositionl2636;
          real op1_e3_l_152D43#1 = RSub(rayN1D65,camNear1D51);
          real op1_e3_l_162D46#1 = RSub(camFar1D53,camNear1D51);
          real op1_e3_l_172D49#1 = RDiv(op1_e3_l_152D43,op1_e3_l_162D46);
          real op1_e3_l_182D4C#1 = RSub(_t2D32,_t2D30);
          real op1_e3_l_192D4F#1 = RMul(op1_e3_l_172D49,op1_e3_l_182D4C);
          real op1_e3_l_202D52#1 = RMul(phongKd1D5B,shade2D3F);
          real Mtransform2D55#1 = Transform<IMAGE1D<double[3]>>(I1D3D);
          real MxPos2D57#1 = RMul(Mtransform2D55,_t2D41);
          real Ttranslate2D5A#1 = Translate<IMAGE1D<double[3]>>(I1D3D);
          real imgPos2D5C#2 = RAdd(MxPos2D57,Ttranslate2D5A);
          real nd2D5F#2 = Floor<1>(imgPos2D5C);
          real f2D61#2 = RSub(imgPos2D5C,nd2D5F);
          int n2D64#1 = RealToInt<1>(nd2D5F);
          int idx2D66#5 = n2D64;
          bool isInside2D68#1 = IndexInside<IMAGE1D<double[3]>,2>(idx2D66,I1D3D);
          if isInside2D68 then goto ASSIGN2D82 else goto ASSIGN2E30
        ASSIGN2D82:  preds = [COND2D6A]
          int ilit2D6C#1 = 0;
          int addRes2D6D#1 = IAdd(idx2D66,ilit2D6C);
          int stride2D6E#2 = 3;
          int offp2D6F#3 = IMul(stride2D6E,addRes2D6D);
          real v0_2D70#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D6F);
          int ilit2D71#3 = 1;
          int addRes2D72#1 = IAdd(idx2D66,ilit2D71);
          int offp2D73#3 = IMul(stride2D6E,addRes2D72);
          real v1_2D74#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D73);
          tensor[2] v_2D75#1 = <tensor[2]>[v0_2D70,v1_2D74];
          int offp2D76#1 = IAdd(offp2D6F,ilit2D71);
          real v0_2D77#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D76);
          int offp2D78#1 = IAdd(offp2D73,ilit2D71);
          real v1_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D78);
          tensor[2] v_2D7A#1 = <tensor[2]>[v0_2D77,v1_2D79];
          int offset2D7B#2 = 2;
          int offp2D7C#1 = IAdd(offp2D6F,offset2D7B);
          real v0_2D7D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7C);
          int offp2D7E#1 = IAdd(offp2D73,offset2D7B);
          real v1_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7E);
          tensor[2] v_2D80#1 = <tensor[2]>[v0_2D7D,v1_2D7F];
          tensor[3,2] voxels2D81#1 = <tensor[3,2]>[v_2D75,v_2D7A,v_2D80];
          tensor[3,2] ldvox2D6B#1 = voxels2D81;
          goto JOIN2D9B
        JOIN2D9B:  preds = [ASSIGN2D98,ASSIGN2E48]
          tensor[3,2] ldvox2D99#3 = phi(ldvox2D6B,ldvox2D9A)
          real rlit2D9D#1 = 0.1e1;
          real idx2D9E#1 = RSub(f2D61,rlit2D9D);
          tensor[2] kernX_2D9C#1 = <tensor[2]>[f2D61,idx2D9E];
          real _f2DA7#1 = 0.1e1;
          real _f2DA8#1 = 0.1e1;
          tensor[2] a02DA3#1 = <tensor[2]>[_f2DA7,_f2DA8];
          real _f2DA5#1 = -0.1e1;
          real _f2DA6#1 = 0.1e1;
          tensor[2] a12DA4#1 = <tensor[2]>[_f2DA5,_f2DA6];
          tensor[2] prod12DA9#1 = VMul<2>(kernX_2D9C,a12DA4);
          tensor[2] kevalX_d0_2DA2#3 = VAdd<2>(a02DA3,prod12DA9);
          tensor[2] projIx2DB3#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D99);
          real vdot2DB4#1 = VDot<2>(projIx2DB3,kevalX_d0_2DA2);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D99);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA2);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D99);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA2);
          tensor[3] probe_l_212DB2#3 = <tensor[3]>[vdot2DB4,vdot2DB6,vdot2DB8];
          real op1_e3_l_222DC1#2 = RSub(_t1D8B,_t2D2E);
          real op1_e3_l_232DC4#1 = RAdd(_t2D30,op1_e3_l_192D4F);
          real op1_e3_l_242DC7#1 = RAdd(phongKa1D59,op1_e3_l_202D52);
          real r2DCB#1 = TensorIndex<tensor[3],[0]>(probe_l_212DB2);
          real r2DCC#1 = RMul(transp1D69,op1_e3_l_222DC1);
          real r2DCD#1 = RMul(r2DCC,op1_e3_l_232DC4);
          real r2DCE#3 = RMul(r2DCD,op1_e3_l_242DC7);
          real r2DCF#1 = RMul(r2DCE,r2DCB);
          real r2DD0#1 = TensorIndex<tensor[3],[1]>(probe_l_212DB2);
          real r2DD1#1 = RMul(r2DCE,r2DD0);
          real r2DD2#1 = TensorIndex<tensor[3],[2]>(probe_l_212DB2);
          real r2DD3#1 = RMul(r2DCE,r2DD2);
          tensor[3] op1_e3_l_252DCA#1 = <tensor[3]>[r2DCF,r2DD1,r2DD3];
          tensor[3] rgb2DDF#1 = VAdd<3>(rgb1D6B,op1_e3_l_252DCA);
          real op1_e3_l_52DE2#1 = RSub(_t1D8B,op1_e3_l_222DC1);
          real transp2DE5#1 = RMul(transp1D69,op1_e3_l_52DE2);
          goto JOIN2DEA
        JOIN2DEA:  preds = [ASSIGN2DE7,COND2D18]
          tensor[3] rgb2DE8#1 = phi(rgb2DDF,rgb1D6B)
          real transp2DE9#1 = phi(transp2DE5,transp1D69)
          goto JOIN2DED
        JOIN2DED:  preds = [JOIN2DEA,MASSIGN2E4E]
          tensor[3] rgb2DEB#1 = phi(rgb2DE8,rgb1D6B)
          real transp2DEC#1 = phi(transp2DE9,transp1D69)
          goto JOIN2DF0
        JOIN2DF0:  preds = [JOIN2DED,COND1D9F]
          tensor[3] rgb2DEE#1 = phi(rgb2DEB,rgb1D6B)
          real transp2DEF#1 = phi(transp2DEC,transp1D69)
          goto JOIN2DF3
        JOIN2DF3:  preds = [JOIN2DF0,COND1D9C]
          tensor[3] rgb2DF1#1 = phi(rgb2DEE,rgb1D6B)
          real transp2DF2#1 = phi(transp2DEF,transp1D69)
          goto JOIN2DF6
        JOIN2DF6:  preds = [JOIN2DF3,COND1D97]
          tensor[3] rgb2DF4#1 = phi(rgb2DF1,rgb1D6B)
          real transp2DF5#1 = phi(transp2DF2,transp1D69)
          goto JOIN2DF9
        JOIN2DF9:  preds = [JOIN2DF6,COND1D94]
          tensor[3] rgb2DF7#1 = phi(rgb2DF4,rgb1D6B)
          real transp2DF8#1 = phi(transp2DF5,transp1D69)
          goto JOIN2DFC
        JOIN2DFC:  preds = [JOIN2DF9,COND1D8F]
          tensor[3] rgb2DFA#1 = phi(rgb2DF7,rgb1D6B)
          real transp2DFB#1 = phi(transp2DF8,transp1D69)
          goto JOIN2DFF
        JOIN2DFF:  preds = [JOIN2DFC,COND1D8A]
          tensor[3] rgb2DFD#3 = phi(rgb2DFA,rgb1D6B)
          real transp2DFE#2 = phi(transp2DFB,transp1D69)
          real _t2E00#1 = 0.1e-1;
          bool _t2E02#1 = LT<real>(transp2DFE,_t2E00);
          if _t2E02 then goto SAVE2E05 else goto JOIN2E09
        SAVE2E05:  preds = [COND2E04]
          self.transp = _t1D84;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E09
        JOIN2E09:  preds = [*STABILIZE2E07,COND2E04]
          real transp2E08#2 = phi(transp2DFE)
          bool _t2E0A#1 = GT<real>(rayN1D65,camFar1D53);
          if _t2E0A then goto SAVE2E0D else goto JOIN2E10
        SAVE2E0D:  preds = [COND2E0C]
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E10
        JOIN2E10:  preds = [*STABILIZE2E0F,COND2E0C]
          real rayN2E11#1 = RAdd(rayN1D65,rayStep1D57);
          self.rayN = rayN2E11;
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          active
        ASSIGN2E30:  preds = [COND2D6A]
          int ilit2E18#1 = 0;
          int addRes2E19#1 = IAdd(idx2D66,ilit2E18);
          int ix2E1A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E19);
          int stride2E1B#2 = 3;
          int offp2E1C#3 = IMul(stride2E1B,ix2E1A);
          real v0_2E1D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E1C);
          int ilit2E1E#3 = 1;
          int addRes2E1F#1 = IAdd(idx2D66,ilit2E1E);
          int ix2E20#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E1F);
          int offp2E21#3 = IMul(stride2E1B,ix2E20);
          real v1_2E22#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E21);
          tensor[2] v_2E23#1 = <tensor[2]>[v0_2E1D,v1_2E22];
          int offp2E24#1 = IAdd(offp2E1C,ilit2E1E);
          real v0_2E25#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E24);
          int offp2E26#1 = IAdd(offp2E21,ilit2E1E);
          real v1_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E26);
          tensor[2] v_2E28#1 = <tensor[2]>[v0_2E25,v1_2E27];
          int offset2E29#2 = 2;
          int offp2E2A#1 = IAdd(offp2E1C,offset2E29);
          real v0_2E2B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2A);
          int offp2E2C#1 = IAdd(offp2E21,offset2E29);
          real v1_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2C);
          tensor[2] v_2E2E#1 = <tensor[2]>[v0_2E2B,v1_2E2D];
          tensor[3,2] voxels2E2F#1 = <tensor[3,2]>[v_2E23,v_2E28,v_2E2E];
          tensor[3,2] ldvox2D9A#1 = voxels2E2F;
          goto JOIN2D9B
        ASSIGN2E4A:  preds = [COND24EF]
          string _t2E49#1 = "\n";
          Print<[tensor[3],string]>(x1D81,_t2E49);
          string _t2E4C#1 = "wait what\?\n";
          Print<[string]>(_t2E4C);
          goto JOIN2DED
        ASSIGN2E4F:  preds = [COND1D74]
          bool _t1D78#1 = NEQ<int>(vi1D6F,sv1D61);
          goto JOIN1D79
    end update
    method stabilize
        ENTRY2E50:  preds = []
          bool debug2E51#1 = globals.debug1AD5;
          int su2E53#1 = globals.su1AD6;
          int sv2E55#1 = globals.sv1AD7;
          real transp2E57#1 = self.transp;
          tensor[3] rgb2E59#3 = self.rgb;
          tensor[4] rgba2E5B#1 = self.rgba;
          int ui2E5D#1 = self.ui;
          int vi2E5F#1 = self.vi;
          real _t2E61#1 = 0.1e1;
          real a2E63#6 = RSub(_t2E61,transp2E57);
          real _t2E66#1 = 0.e0;
          bool _t2E68#1 = GT<real>(a2E63,_t2E66);
          if _t2E68 then goto ASSIGN2E6C else goto JOIN2E7D
        ASSIGN2E6C:  preds = [COND2E6A]
          real _t2E6B#1 = VIndex<3,0>(rgb2E59);
          real _t2E6D#1 = RDiv(_t2E6B,a2E63);
          real _t2E70#1 = VIndex<3,1>(rgb2E59);
          real _t2E72#1 = RDiv(_t2E70,a2E63);
          real _t2E75#1 = VIndex<3,2>(rgb2E59);
          real _t2E77#1 = RDiv(_t2E75,a2E63);
          tensor[4] rgba2E7A#1 = <tensor[4]>[_t2E6D,_t2E72,_t2E77,a2E63];
          goto JOIN2E7D
        JOIN2E7D:  preds = [ASSIGN2E7B,COND2E6A]
          tensor[4] rgba2E7C#2 = phi(rgba2E7A,rgba2E5B)
          bool _t2E7E#1 = EQ<int>(ui2E5D,su2E53);
          if _t2E7E then goto ASSIGN2E82 else goto JOIN2E88
        ASSIGN2E82:  preds = [COND2E80]
          bool _t2E81#1 = EQ<int>(vi2E5F,sv2E55);
          if _t2E81 then goto COND2E84 else goto JOIN2E87
        COND2E84:  preds = [COND2E83]
          if debug2E51 then goto MASSIGN2E85 else goto JOIN2E86
        MASSIGN2E85:  preds = [COND2E84]
          Print<[real,tensor[4]]>(a2E63,rgba2E7C);
          goto JOIN2E86
        JOIN2E86:  preds = [MASSIGN2E85,COND2E84]
          goto JOIN2E87
        JOIN2E87:  preds = [JOIN2E86,COND2E83]
          goto JOIN2E88
        JOIN2E88:  preds = [JOIN2E87,COND2E80]
          self.rgba = rgba2E7C;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E8B:  preds = []
      int iresU2E8C#1 = globals.iresU1ACC;
      int iresV2E8E#1 = globals.iresV1ACD;
      int _t2E90#2 = 0;
      int _t2E92#2 = 1;
      int _t2E94#1 = ISub(iresV2E8E,_t2E92);
      int[] _t2E96#1 = Range(_t2E90,_t2E94);
    FOREACH2E99:  preds = [ASSIGN2E97,NEXT2EA2]
      foreach (vi2E98 in _t2E96) on exit goto RETURN2EA3
      int _t2E9A#1 = ISub(iresU2E8C,_t2E92);
      int[] _t2E9C#1 = Range(_t2E90,_t2E9A);
    FOREACH2E9F:  preds = [ASSIGN2E9D,NEXT2EA1]
      foreach (ui2E9E in _t2E9C) on exit goto NEXT2EA2
      new raycast(ui2E9E,vi2E98);
      goto FOREACH2E9F
    NEXT2EA2:  preds = [FOREACH2E9F]
      goto FOREACH2E99
    RETURN2EA3:  preds = [FOREACH2E99]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AC3 (a) = <no-default>
  input 0b043B_intermedateGlobal1AC4 (b) = <no-default>
  input 0c043D_intermedateGlobal1AC5 (c) = <no-default>
  input isoval1AC6 (isoval) = <default>
  input thick1AC7 (thick) = <default>
  input camEye1AC8 (camEye) = <default>
  input camAt1AC9 (camAt) = <default>
  input camUp1ACA (camUp) = <default>
  input camFOV1ACB (camFOV) = <default>
  input iresU1ACC (iresU) = <default>
  input iresV1ACD (iresV) = <default>
  input camNear1ACE (camNear) = <default>
  input camFar1ACF (camFar) = <default>
  input refStep1AD0 (refStep) = <default>
  input rayStep1AD1 (rayStep) = <default>
  input lightVsp1AD2 (lightVsp) = <default>
  input phongKa1AD3 (phongKa) = <default>
  input phongKd1AD4 (phongKd) = <default>
  input debug1AD5 (debug) = <default>
  input su1AD6 (su) = <default>
  input sv1AD7 (sv) = <default>
  global real camDist1AD8
  global tensor[3] camN1AD9
  global tensor[3] camU1ADA
  global tensor[3] camV1ADB
  global real camVmax1ADC
  global real camUmax1ADD
  global tensor[3] light1ADE
  global femData:Mesh _t1ADF
  global femData:Space _tX1AE0
  global femData:FemFunc c1AE1
  global image(IMAGE1D<double[3]>) I1AE4
## functions
  function femData:MeshPos findPos1DA1 (femData:Mesh mesh1DA2#19, tensor[3] pos1DA3#4) {
    ENTRY1DA4:  preds = []
      real _t1DA5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1DA7#1 = <tensor[3]>[_t1DA5,_t1DA5,_t1DA5];
      int newtonInt1DA9#1 = 0;
      int[] yayCells1DAB#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1DA2,pos1DA3);
    FOREACH1DAE:  preds = [ASSIGN1DAC,NEXT24E3]
      foreach (cellItter1DAD in yayCells1DAB) on exit goto ASSIGN24E5
        tensor[3] xn24E2#1 = phi(xn1DA7,xn2383)
      int _t1DAF#1 = 2;
      int[] _t1DB1#1 = Range(newtonInt1DA9,_t1DAF);
    FOREACH1DB4:  preds = [ASSIGN1DB2,NEXT24E1]
      foreach (newtonItter1DB3 in _t1DB1) on exit goto NEXT24E3
        tensor[3] xn2383#5 = phi(xn24E2,xn2447)
      int ilit1DB6#1 = 4;
      int mulRes1DB7#4 = IMul(cellItter1DAD,ilit1DB6);
      int addRes1DB9#1 = mulRes1DB7;
      int idx1DBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DB9);
      int ilit1DBB#1 = 1;
      int addRes1DBC#1 = IAdd(mulRes1DB7,ilit1DBB);
      int idx1DBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBC);
      int ilit1DBE#1 = 2;
      int addRes1DBF#1 = IAdd(mulRes1DB7,ilit1DBE);
      int idx1DC0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBF);
      int ilit1DC1#1 = 3;
      int addRes1DC2#1 = IAdd(mulRes1DB7,ilit1DC1);
      int idx1DC3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DC2);
      int ilit1DD7#4 = 3;
      int idx1DD8#1 = idx1DBA;
      int mulRes1DD9#3 = IMul(ilit1DD7,idx1DD8);
      int addRes1DDA#1 = mulRes1DD9;
      int ilit1DDB#4 = 1;
      int addRes1DDC#1 = IAdd(ilit1DDB,mulRes1DD9);
      int ilit1DDD#4 = 2;
      int addRes1DDE#1 = IAdd(ilit1DDD,mulRes1DD9);
      real dof_load1DDF#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDA);
      real dof_load1DE0#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDC);
      real dof_load1DE1#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDE);
      int idx1DE3#1 = idx1DBD;
      int mulRes1DE4#3 = IMul(ilit1DD7,idx1DE3);
      int addRes1DE5#1 = mulRes1DE4;
      int addRes1DE6#1 = IAdd(ilit1DDB,mulRes1DE4);
      int addRes1DE7#1 = IAdd(ilit1DDD,mulRes1DE4);
      real dof_load1DE8#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE5);
      real dof_load1DE9#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE6);
      real dof_load1DEA#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE7);
      int idx1DEC#1 = idx1DC0;
      int mulRes1DED#3 = IMul(ilit1DD7,idx1DEC);
      int addRes1DEE#1 = mulRes1DED;
      int addRes1DEF#1 = IAdd(ilit1DDB,mulRes1DED);
      int addRes1DF0#1 = IAdd(ilit1DDD,mulRes1DED);
      real dof_load1DF1#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEE);
      real dof_load1DF2#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEF);
      real dof_load1DF3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF0);
      int idx1DF5#1 = idx1DC3;
      int mulRes1DF6#3 = IMul(ilit1DD7,idx1DF5);
      int addRes1DF7#1 = mulRes1DF6;
      int addRes1DF8#1 = IAdd(ilit1DDB,mulRes1DF6);
      int addRes1DF9#1 = IAdd(ilit1DDD,mulRes1DF6);
      real dof_load1DFA#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF7);
      real dof_load1DFB#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF8);
      real dof_load1DFC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF9);
      real coeff1E2D#1 = -0.1e1;
      real one1E2E#4 = 0.1e1;
      real prod1E2F#1 = RMul(one1E2E,one1E2E);
      real prod1E30#2 = RMul(one1E2E,prod1E2F);
      real basisEval1E31#6 = RMul(coeff1E2D,prod1E30);
      real basisEval1E32#6 = RMul(one1E2E,prod1E30);
      real basisEval1E33#12 = 0.e0;
      real r1E48#3 = dof_load1DDF;
      real r1E49#3 = basisEval1E31;
      real r1E4A#1 = RMul(r1E48,r1E49);
      real r1E4B#3 = dof_load1DE8;
      real r1E4C#3 = basisEval1E32;
      real r1E4D#1 = RMul(r1E4B,r1E4C);
      real r1E4E#3 = dof_load1DF1;
      real r1E4F#3 = basisEval1E33;
      real r1E50#1 = RMul(r1E4E,r1E4F);
      real r1E51#3 = dof_load1DFA;
      real r1E52#3 = basisEval1E33;
      real r1E53#1 = RMul(r1E51,r1E52);
      real r1E54#1 = RAdd(r1E4A,r1E4D);
      real r1E55#1 = RAdd(r1E54,r1E50);
      real r1E56#2 = RAdd(r1E55,r1E53);
      real r1E57#3 = basisEval1E31;
      real r1E58#1 = RMul(r1E48,r1E57);
      real r1E59#3 = basisEval1E33;
      real r1E5A#1 = RMul(r1E4B,r1E59);
      real r1E5B#3 = basisEval1E32;
      real r1E5C#1 = RMul(r1E4E,r1E5B);
      real r1E5D#3 = basisEval1E33;
      real r1E5E#1 = RMul(r1E51,r1E5D);
      real r1E5F#1 = RAdd(r1E58,r1E5A);
      real r1E60#1 = RAdd(r1E5F,r1E5C);
      real r1E61#2 = RAdd(r1E60,r1E5E);
      real r1E62#3 = basisEval1E31;
      real r1E63#1 = RMul(r1E48,r1E62);
      real r1E64#3 = basisEval1E33;
      real r1E65#1 = RMul(r1E4B,r1E64);
      real r1E66#3 = basisEval1E33;
      real r1E67#1 = RMul(r1E4E,r1E66);
      real r1E68#3 = basisEval1E32;
      real r1E69#1 = RMul(r1E51,r1E68);
      real r1E6A#1 = RAdd(r1E63,r1E65);
      real r1E6B#1 = RAdd(r1E6A,r1E67);
      real r1E6C#2 = RAdd(r1E6B,r1E69);
      real r1E6E#3 = dof_load1DE0;
      real r1E6F#1 = RMul(r1E6E,r1E49);
      real r1E70#3 = dof_load1DE9;
      real r1E71#1 = RMul(r1E70,r1E4C);
      real r1E72#3 = dof_load1DF2;
      real r1E73#1 = RMul(r1E72,r1E4F);
      real r1E74#3 = dof_load1DFB;
      real r1E75#1 = RMul(r1E74,r1E52);
      real r1E76#1 = RAdd(r1E6F,r1E71);
      real r1E77#1 = RAdd(r1E76,r1E73);
      real r1E78#2 = RAdd(r1E77,r1E75);
      real r1E79#1 = RMul(r1E6E,r1E57);
      real r1E7A#1 = RMul(r1E70,r1E59);
      real r1E7B#1 = RMul(r1E72,r1E5B);
      real r1E7C#1 = RMul(r1E74,r1E5D);
      real r1E7D#1 = RAdd(r1E79,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#2 = RAdd(r1E7E,r1E7C);
      real r1E80#1 = RMul(r1E6E,r1E62);
      real r1E81#1 = RMul(r1E70,r1E64);
      real r1E82#1 = RMul(r1E72,r1E66);
      real r1E83#1 = RMul(r1E74,r1E68);
      real r1E84#1 = RAdd(r1E80,r1E81);
      real r1E85#1 = RAdd(r1E84,r1E82);
      real r1E86#2 = RAdd(r1E85,r1E83);
      real r1E88#3 = dof_load1DE1;
      real r1E89#1 = RMul(r1E88,r1E49);
      real r1E8A#3 = dof_load1DEA;
      real r1E8B#1 = RMul(r1E8A,r1E4C);
      real r1E8C#3 = dof_load1DF3;
      real r1E8D#1 = RMul(r1E8C,r1E4F);
      real r1E8E#3 = dof_load1DFC;
      real r1E8F#1 = RMul(r1E8E,r1E52);
      real r1E90#1 = RAdd(r1E89,r1E8B);
      real r1E91#1 = RAdd(r1E90,r1E8D);
      real r1E92#2 = RAdd(r1E91,r1E8F);
      real r1E93#1 = RMul(r1E88,r1E57);
      real r1E94#1 = RMul(r1E8A,r1E59);
      real r1E95#1 = RMul(r1E8C,r1E5B);
      real r1E96#1 = RMul(r1E8E,r1E5D);
      real r1E97#1 = RAdd(r1E93,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#2 = RAdd(r1E98,r1E96);
      real r1E9A#1 = RMul(r1E88,r1E62);
      real r1E9B#1 = RMul(r1E8A,r1E64);
      real r1E9C#1 = RMul(r1E8C,r1E66);
      real r1E9D#1 = RMul(r1E8E,r1E68);
      real r1E9E#1 = RAdd(r1E9A,r1E9B);
      real r1E9F#1 = RAdd(r1E9E,r1E9C);
      real r1EA0#2 = RAdd(r1E9F,r1E9D);
      real realLit1EFF#9 = 0.e0;
      real r1F00#3 = r1E56;
      real r1F01#3 = RMul(realLit1EFF,r1F00);
      real r1F02#3 = r1E78;
      real r1F03#3 = RMul(realLit1EFF,r1F02);
      real r1F04#3 = r1E92;
      real r1F05#5 = RMul(realLit1EFF,r1F04);
      real r1F06#3 = RAdd(r1F01,r1F03);
      real r1F07#3 = RAdd(r1F06,r1F05);
      real r1F08#3 = r1E61;
      real r1F09#3 = RMul(realLit1EFF,r1F08);
      real r1F0A#3 = r1E7F;
      real r1F0B#3 = RMul(realLit1EFF,r1F0A);
      real r1F0C#3 = r1E99;
      real r1F0D#5 = RMul(realLit1EFF,r1F0C);
      real r1F0E#3 = RAdd(r1F09,r1F0B);
      real r1F0F#3 = RAdd(r1F0E,r1F0D);
      real r1F10#3 = r1E6C;
      real r1F11#3 = RMul(realLit1EFF,r1F10);
      real r1F12#3 = r1E86;
      real r1F13#3 = RMul(realLit1EFF,r1F12);
      real r1F14#3 = r1EA0;
      real r1F15#5 = RMul(realLit1EFF,r1F14);
      real r1F16#3 = RAdd(r1F11,r1F13);
      real r1F17#3 = RAdd(r1F16,r1F15);
      real realLit1F19#9 = -0.1e1;
      real r1F1A#1 = RMul(realLit1F19,r1F04);
      real r1F1B#1 = RAdd(r1F06,r1F1A);
      real r1F1C#1 = RMul(realLit1F19,r1F0C);
      real r1F1D#1 = RAdd(r1F0E,r1F1C);
      real r1F1E#1 = RMul(realLit1F19,r1F14);
      real r1F1F#1 = RAdd(r1F16,r1F1E);
      real realLit1F21#9 = 0.1e1;
      real r1F22#1 = RMul(realLit1F21,r1F02);
      real r1F23#1 = RAdd(r1F01,r1F22);
      real r1F24#1 = RAdd(r1F23,r1F05);
      real r1F25#1 = RMul(realLit1F21,r1F0A);
      real r1F26#1 = RAdd(r1F09,r1F25);
      real r1F27#1 = RAdd(r1F26,r1F0D);
      real r1F28#1 = RMul(realLit1F21,r1F12);
      real r1F29#1 = RAdd(r1F11,r1F28);
      real r1F2A#1 = RAdd(r1F29,r1F15);
      real r1F2D#1 = RMul(realLit1F21,r1F04);
      real r1F2E#1 = RAdd(r1F06,r1F2D);
      real r1F2F#1 = RMul(realLit1F21,r1F0C);
      real r1F30#1 = RAdd(r1F0E,r1F2F);
      real r1F31#1 = RMul(realLit1F21,r1F14);
      real r1F32#1 = RAdd(r1F16,r1F31);
      real r1F34#1 = RMul(realLit1F19,r1F00);
      real r1F35#1 = RAdd(r1F34,r1F03);
      real r1F36#1 = RAdd(r1F35,r1F05);
      real r1F37#1 = RMul(realLit1F19,r1F08);
      real r1F38#1 = RAdd(r1F37,r1F0B);
      real r1F39#1 = RAdd(r1F38,r1F0D);
      real r1F3A#1 = RMul(realLit1F19,r1F10);
      real r1F3B#1 = RAdd(r1F3A,r1F13);
      real r1F3C#1 = RAdd(r1F3B,r1F15);
      real r1F3F#1 = RMul(realLit1F19,r1F02);
      real r1F40#1 = RAdd(r1F01,r1F3F);
      real r1F41#1 = RAdd(r1F40,r1F05);
      real r1F42#1 = RMul(realLit1F19,r1F0A);
      real r1F43#1 = RAdd(r1F09,r1F42);
      real r1F44#1 = RAdd(r1F43,r1F0D);
      real r1F45#1 = RMul(realLit1F19,r1F12);
      real r1F46#1 = RAdd(r1F11,r1F45);
      real r1F47#1 = RAdd(r1F46,r1F15);
      real r1F49#1 = RMul(realLit1F21,r1F00);
      real r1F4A#1 = RAdd(r1F49,r1F03);
      real r1F4B#1 = RAdd(r1F4A,r1F05);
      real r1F4C#1 = RMul(realLit1F21,r1F08);
      real r1F4D#1 = RAdd(r1F4C,r1F0B);
      real r1F4E#1 = RAdd(r1F4D,r1F0D);
      real r1F4F#1 = RMul(realLit1F21,r1F10);
      real r1F50#1 = RAdd(r1F4F,r1F13);
      real r1F51#1 = RAdd(r1F50,r1F15);
      real r1FAC#9 = r1E56;
      real r1FAD#3 = r1F07;
      real r1FAE#1 = RMul(r1FAC,r1FAD);
      real r1FAF#9 = r1E78;
      real r1FB0#3 = r1F2E;
      real r1FB1#1 = RMul(r1FAF,r1FB0);
      real r1FB2#9 = r1E92;
      real r1FB3#3 = r1F41;
      real r1FB4#1 = RMul(r1FB2,r1FB3);
      real r1FB5#1 = RAdd(r1FAE,r1FB1);
      real r1FB6#1 = RAdd(r1FB5,r1FB4);
      real r1FB7#3 = r1F0F;
      real r1FB8#1 = RMul(r1FAC,r1FB7);
      real r1FB9#3 = r1F30;
      real r1FBA#1 = RMul(r1FAF,r1FB9);
      real r1FBB#3 = r1F44;
      real r1FBC#1 = RMul(r1FB2,r1FBB);
      real r1FBD#1 = RAdd(r1FB8,r1FBA);
      real r1FBE#1 = RAdd(r1FBD,r1FBC);
      real r1FBF#3 = r1F17;
      real r1FC0#1 = RMul(r1FAC,r1FBF);
      real r1FC1#3 = r1F32;
      real r1FC2#1 = RMul(r1FAF,r1FC1);
      real r1FC3#3 = r1F47;
      real r1FC4#1 = RMul(r1FB2,r1FC3);
      real r1FC5#1 = RAdd(r1FC0,r1FC2);
      real r1FC6#1 = RAdd(r1FC5,r1FC4);
      real r1FC8#3 = r1F1B;
      real r1FC9#1 = RMul(r1FAC,r1FC8);
      real r1FCA#3 = r1F07;
      real r1FCB#1 = RMul(r1FAF,r1FCA);
      real r1FCC#3 = r1F4B;
      real r1FCD#1 = RMul(r1FB2,r1FCC);
      real r1FCE#1 = RAdd(r1FC9,r1FCB);
      real r1FCF#1 = RAdd(r1FCE,r1FCD);
      real r1FD0#3 = r1F1D;
      real r1FD1#1 = RMul(r1FAC,r1FD0);
      real r1FD2#3 = r1F0F;
      real r1FD3#1 = RMul(r1FAF,r1FD2);
      real r1FD4#3 = r1F4E;
      real r1FD5#1 = RMul(r1FB2,r1FD4);
      real r1FD6#1 = RAdd(r1FD1,r1FD3);
      real r1FD7#1 = RAdd(r1FD6,r1FD5);
      real r1FD8#3 = r1F1F;
      real r1FD9#1 = RMul(r1FAC,r1FD8);
      real r1FDA#3 = r1F17;
      real r1FDB#1 = RMul(r1FAF,r1FDA);
      real r1FDC#3 = r1F51;
      real r1FDD#1 = RMul(r1FB2,r1FDC);
      real r1FDE#1 = RAdd(r1FD9,r1FDB);
      real r1FDF#1 = RAdd(r1FDE,r1FDD);
      real r1FE1#3 = r1F24;
      real r1FE2#1 = RMul(r1FAC,r1FE1);
      real r1FE3#3 = r1F36;
      real r1FE4#1 = RMul(r1FAF,r1FE3);
      real r1FE5#3 = r1F07;
      real r1FE6#1 = RMul(r1FB2,r1FE5);
      real r1FE7#1 = RAdd(r1FE2,r1FE4);
      real r1FE8#1 = RAdd(r1FE7,r1FE6);
      real r1FE9#3 = r1F27;
      real r1FEA#1 = RMul(r1FAC,r1FE9);
      real r1FEB#3 = r1F39;
      real r1FEC#1 = RMul(r1FAF,r1FEB);
      real r1FED#3 = r1F0F;
      real r1FEE#1 = RMul(r1FB2,r1FED);
      real r1FEF#1 = RAdd(r1FEA,r1FEC);
      real r1FF0#1 = RAdd(r1FEF,r1FEE);
      real r1FF1#3 = r1F2A;
      real r1FF2#1 = RMul(r1FAC,r1FF1);
      real r1FF3#3 = r1F3C;
      real r1FF4#1 = RMul(r1FAF,r1FF3);
      real r1FF5#3 = r1F17;
      real r1FF6#1 = RMul(r1FB2,r1FF5);
      real r1FF7#1 = RAdd(r1FF2,r1FF4);
      real r1FF8#1 = RAdd(r1FF7,r1FF6);
      real r1FFB#9 = r1E61;
      real r1FFC#1 = RMul(r1FFB,r1FAD);
      real r1FFD#9 = r1E7F;
      real r1FFE#1 = RMul(r1FFD,r1FB0);
      real r1FFF#9 = r1E99;
      real r2000#1 = RMul(r1FFF,r1FB3);
      real r2001#1 = RAdd(r1FFC,r1FFE);
      real r2002#1 = RAdd(r2001,r2000);
      real r2003#1 = RMul(r1FFB,r1FB7);
      real r2004#1 = RMul(r1FFD,r1FB9);
      real r2005#1 = RMul(r1FFF,r1FBB);
      real r2006#1 = RAdd(r2003,r2004);
      real r2007#1 = RAdd(r2006,r2005);
      real r2008#1 = RMul(r1FFB,r1FBF);
      real r2009#1 = RMul(r1FFD,r1FC1);
      real r200A#1 = RMul(r1FFF,r1FC3);
      real r200B#1 = RAdd(r2008,r2009);
      real r200C#1 = RAdd(r200B,r200A);
      real r200E#1 = RMul(r1FFB,r1FC8);
      real r200F#1 = RMul(r1FFD,r1FCA);
      real r2010#1 = RMul(r1FFF,r1FCC);
      real r2011#1 = RAdd(r200E,r200F);
      real r2012#1 = RAdd(r2011,r2010);
      real r2013#1 = RMul(r1FFB,r1FD0);
      real r2014#1 = RMul(r1FFD,r1FD2);
      real r2015#1 = RMul(r1FFF,r1FD4);
      real r2016#1 = RAdd(r2013,r2014);
      real r2017#1 = RAdd(r2016,r2015);
      real r2018#1 = RMul(r1FFB,r1FD8);
      real r2019#1 = RMul(r1FFD,r1FDA);
      real r201A#1 = RMul(r1FFF,r1FDC);
      real r201B#1 = RAdd(r2018,r2019);
      real r201C#1 = RAdd(r201B,r201A);
      real r201E#1 = RMul(r1FFB,r1FE1);
      real r201F#1 = RMul(r1FFD,r1FE3);
      real r2020#1 = RMul(r1FFF,r1FE5);
      real r2021#1 = RAdd(r201E,r201F);
      real r2022#1 = RAdd(r2021,r2020);
      real r2023#1 = RMul(r1FFB,r1FE9);
      real r2024#1 = RMul(r1FFD,r1FEB);
      real r2025#1 = RMul(r1FFF,r1FED);
      real r2026#1 = RAdd(r2023,r2024);
      real r2027#1 = RAdd(r2026,r2025);
      real r2028#1 = RMul(r1FFB,r1FF1);
      real r2029#1 = RMul(r1FFD,r1FF3);
      real r202A#1 = RMul(r1FFF,r1FF5);
      real r202B#1 = RAdd(r2028,r2029);
      real r202C#1 = RAdd(r202B,r202A);
      real r202F#9 = r1E6C;
      real r2030#1 = RMul(r202F,r1FAD);
      real r2031#9 = r1E86;
      real r2032#1 = RMul(r2031,r1FB0);
      real r2033#9 = r1EA0;
      real r2034#1 = RMul(r2033,r1FB3);
      real r2035#1 = RAdd(r2030,r2032);
      real r2036#1 = RAdd(r2035,r2034);
      real r2037#1 = RMul(r202F,r1FB7);
      real r2038#1 = RMul(r2031,r1FB9);
      real r2039#1 = RMul(r2033,r1FBB);
      real r203A#1 = RAdd(r2037,r2038);
      real r203B#1 = RAdd(r203A,r2039);
      real r203C#1 = RMul(r202F,r1FBF);
      real r203D#1 = RMul(r2031,r1FC1);
      real r203E#1 = RMul(r2033,r1FC3);
      real r203F#1 = RAdd(r203C,r203D);
      real r2040#1 = RAdd(r203F,r203E);
      real r2042#1 = RMul(r202F,r1FC8);
      real r2043#1 = RMul(r2031,r1FCA);
      real r2044#1 = RMul(r2033,r1FCC);
      real r2045#1 = RAdd(r2042,r2043);
      real r2046#1 = RAdd(r2045,r2044);
      real r2047#1 = RMul(r202F,r1FD0);
      real r2048#1 = RMul(r2031,r1FD2);
      real r2049#1 = RMul(r2033,r1FD4);
      real r204A#1 = RAdd(r2047,r2048);
      real r204B#1 = RAdd(r204A,r2049);
      real r204C#1 = RMul(r202F,r1FD8);
      real r204D#1 = RMul(r2031,r1FDA);
      real r204E#1 = RMul(r2033,r1FDC);
      real r204F#1 = RAdd(r204C,r204D);
      real r2050#1 = RAdd(r204F,r204E);
      real r2052#1 = RMul(r202F,r1FE1);
      real r2053#1 = RMul(r2031,r1FE3);
      real r2054#1 = RMul(r2033,r1FE5);
      real r2055#1 = RAdd(r2052,r2053);
      real r2056#1 = RAdd(r2055,r2054);
      real r2057#1 = RMul(r202F,r1FE9);
      real r2058#1 = RMul(r2031,r1FEB);
      real r2059#1 = RMul(r2033,r1FED);
      real r205A#1 = RAdd(r2057,r2058);
      real r205B#1 = RAdd(r205A,r2059);
      real r205C#1 = RMul(r202F,r1FF1);
      real r205D#1 = RMul(r2031,r1FF3);
      real r205E#1 = RMul(r2033,r1FF5);
      real r205F#1 = RAdd(r205C,r205D);
      real r2060#1 = RAdd(r205F,r205E);
      real r211D#1 = dof_load1DDF;
      real r211E#3 = basisEval1E31;
      real r211F#1 = RMul(r211D,r211E);
      real r2120#1 = dof_load1DE8;
      real r2121#3 = basisEval1E32;
      real r2122#1 = RMul(r2120,r2121);
      real r2123#1 = dof_load1DF1;
      real r2124#3 = basisEval1E33;
      real r2125#1 = RMul(r2123,r2124);
      real r2126#1 = dof_load1DFA;
      real r2127#3 = basisEval1E33;
      real r2128#1 = RMul(r2126,r2127);
      real r2129#1 = RAdd(r211F,r2122);
      real r212A#1 = RAdd(r2129,r2125);
      real r212B#1 = RAdd(r212A,r2128);
      real r212C#1 = dof_load1DE0;
      real r212D#1 = RMul(r212C,r211E);
      real r212E#1 = dof_load1DE9;
      real r212F#1 = RMul(r212E,r2121);
      real r2130#1 = dof_load1DF2;
      real r2131#1 = RMul(r2130,r2124);
      real r2132#1 = dof_load1DFB;
      real r2133#1 = RMul(r2132,r2127);
      real r2134#1 = RAdd(r212D,r212F);
      real r2135#1 = RAdd(r2134,r2131);
      real r2136#1 = RAdd(r2135,r2133);
      real r2137#1 = dof_load1DE1;
      real r2138#1 = RMul(r2137,r211E);
      real r2139#1 = dof_load1DEA;
      real r213A#1 = RMul(r2139,r2121);
      real r213B#1 = dof_load1DF3;
      real r213C#1 = RMul(r213B,r2124);
      real r213D#1 = dof_load1DFC;
      real r213E#1 = RMul(r213D,r2127);
      real r213F#1 = RAdd(r2138,r213A);
      real r2140#1 = RAdd(r213F,r213C);
      real r2141#1 = RAdd(r2140,r213E);
      tensor[3] probe_l_14211C#1 = <tensor[3]>[r212B,r2136,r2141];
      real r216A#1 = dof_load1DDF;
      real r216B#3 = basisEval1E31;
      real r216C#1 = RMul(r216A,r216B);
      real r216D#1 = dof_load1DE8;
      real r216E#3 = basisEval1E33;
      real r216F#1 = RMul(r216D,r216E);
      real r2170#1 = dof_load1DF1;
      real r2171#3 = basisEval1E32;
      real r2172#1 = RMul(r2170,r2171);
      real r2173#1 = dof_load1DFA;
      real r2174#3 = basisEval1E33;
      real r2175#1 = RMul(r2173,r2174);
      real r2176#1 = RAdd(r216C,r216F);
      real r2177#1 = RAdd(r2176,r2172);
      real r2178#1 = RAdd(r2177,r2175);
      real r2179#1 = dof_load1DE0;
      real r217A#1 = RMul(r2179,r216B);
      real r217B#1 = dof_load1DE9;
      real r217C#1 = RMul(r217B,r216E);
      real r217D#1 = dof_load1DF2;
      real r217E#1 = RMul(r217D,r2171);
      real r217F#1 = dof_load1DFB;
      real r2180#1 = RMul(r217F,r2174);
      real r2181#1 = RAdd(r217A,r217C);
      real r2182#1 = RAdd(r2181,r217E);
      real r2183#1 = RAdd(r2182,r2180);
      real r2184#1 = dof_load1DE1;
      real r2185#1 = RMul(r2184,r216B);
      real r2186#1 = dof_load1DEA;
      real r2187#1 = RMul(r2186,r216E);
      real r2188#1 = dof_load1DF3;
      real r2189#1 = RMul(r2188,r2171);
      real r218A#1 = dof_load1DFC;
      real r218B#1 = RMul(r218A,r2174);
      real r218C#1 = RAdd(r2185,r2187);
      real r218D#1 = RAdd(r218C,r2189);
      real r218E#1 = RAdd(r218D,r218B);
      tensor[3] probe_l_152169#3 = <tensor[3]>[r2178,r2183,r218E];
      real r21B7#1 = dof_load1DDF;
      real r21B8#3 = basisEval1E31;
      real r21B9#1 = RMul(r21B7,r21B8);
      real r21BA#1 = dof_load1DE8;
      real r21BB#3 = basisEval1E33;
      real r21BC#1 = RMul(r21BA,r21BB);
      real r21BD#1 = dof_load1DF1;
      real r21BE#3 = basisEval1E33;
      real r21BF#1 = RMul(r21BD,r21BE);
      real r21C0#1 = dof_load1DFA;
      real r21C1#3 = basisEval1E32;
      real r21C2#1 = RMul(r21C0,r21C1);
      real r21C3#1 = RAdd(r21B9,r21BC);
      real r21C4#1 = RAdd(r21C3,r21BF);
      real r21C5#1 = RAdd(r21C4,r21C2);
      real r21C6#1 = dof_load1DE0;
      real r21C7#1 = RMul(r21C6,r21B8);
      real r21C8#1 = dof_load1DE9;
      real r21C9#1 = RMul(r21C8,r21BB);
      real r21CA#1 = dof_load1DF2;
      real r21CB#1 = RMul(r21CA,r21BE);
      real r21CC#1 = dof_load1DFB;
      real r21CD#1 = RMul(r21CC,r21C1);
      real r21CE#1 = RAdd(r21C7,r21C9);
      real r21CF#1 = RAdd(r21CE,r21CB);
      real r21D0#1 = RAdd(r21CF,r21CD);
      real r21D1#1 = dof_load1DE1;
      real r21D2#1 = RMul(r21D1,r21B8);
      real r21D3#1 = dof_load1DEA;
      real r21D4#1 = RMul(r21D3,r21BB);
      real r21D5#1 = dof_load1DF3;
      real r21D6#1 = RMul(r21D5,r21BE);
      real r21D7#1 = dof_load1DFC;
      real r21D8#1 = RMul(r21D7,r21C1);
      real r21D9#1 = RAdd(r21D2,r21D4);
      real r21DA#1 = RAdd(r21D9,r21D6);
      real r21DB#1 = RAdd(r21DA,r21D8);
      real realLit2204#3 = 0.e0;
      real r2205#3 = r21C5;
      real r2206#3 = RMul(realLit2204,r2205);
      real r2207#3 = r21D0;
      real r2208#3 = RMul(realLit2204,r2207);
      real r2209#3 = r21DB;
      real r220A#5 = RMul(realLit2204,r2209);
      real r220B#3 = RAdd(r2206,r2208);
      real r220C#3 = RAdd(r220B,r220A);
      real realLit220D#3 = 0.1e1;
      real r220E#1 = RMul(realLit220D,r2209);
      real r220F#1 = RAdd(r220B,r220E);
      real realLit2210#3 = -0.1e1;
      real r2211#1 = RMul(realLit2210,r2207);
      real r2212#1 = RAdd(r2206,r2211);
      real r2213#1 = RAdd(r2212,r220A);
      tensor[3] tensor2214#1 = <tensor[3]>[r220C,r220F,r2213];
      real r2215#1 = RMul(realLit2210,r2209);
      real r2216#1 = RAdd(r220B,r2215);
      real r2217#1 = RMul(realLit220D,r2205);
      real r2218#1 = RAdd(r2217,r2208);
      real r2219#1 = RAdd(r2218,r220A);
      tensor[3] tensor221A#1 = <tensor[3]>[r2216,r220C,r2219];
      real r221B#1 = RMul(realLit220D,r2207);
      real r221C#1 = RAdd(r2206,r221B);
      real r221D#1 = RAdd(r221C,r220A);
      real r221E#1 = RMul(realLit2210,r2205);
      real r221F#1 = RAdd(r221E,r2208);
      real r2220#1 = RAdd(r221F,r220A);
      tensor[3] tensor2221#1 = <tensor[3]>[r221D,r2220,r220C];
      tensor[3] projParam2243#1 = tensor2214;
      real vdot2244#1 = VDot<3>(probe_l_152169,projParam2243);
      tensor[3] projParam2245#1 = tensor221A;
      real vdot2246#1 = VDot<3>(probe_l_152169,projParam2245);
      tensor[3] projParam2247#1 = tensor2221;
      real vdot2248#1 = VDot<3>(probe_l_152169,projParam2247);
      tensor[3] op1_e3_l_182242#1 = <tensor[3]>[vdot2244,vdot2246,vdot2248];
      real op1_e3_l_192251#1 = VDot<3>(probe_l_14211C,op1_e3_l_182242);
      real realLit2255#27 = 0.e0;
      real r2256#1 = r1FB6;
      real r2257#2 = RMul(realLit2255,r2256);
      real r2258#2 = r1FBE;
      real r2259#1 = RMul(realLit2255,r2258);
      real r225A#2 = r1FC6;
      real r225B#2 = RMul(realLit2255,r225A);
      real r225C#2 = r2002;
      real r225D#2 = RMul(realLit2255,r225C);
      real r225E#1 = r2007;
      real r225F#3 = RMul(realLit2255,r225E);
      real realLit2260#9 = 0.1e1;
      real r2261#2 = r200C;
      real r2262#1 = RMul(realLit2260,r2261);
      real r2263#2 = r2036;
      real r2264#2 = RMul(realLit2255,r2263);
      real realLit2265#9 = -0.1e1;
      real r2266#2 = r203B;
      real r2267#1 = RMul(realLit2265,r2266);
      real r2268#1 = r2040;
      real r2269#3 = RMul(realLit2255,r2268);
      real r226A#2 = RAdd(r2257,r2259);
      real r226B#1 = RAdd(r226A,r225B);
      real r226C#1 = RAdd(r226B,r225D);
      real r226D#1 = RAdd(r226C,r225F);
      real r226E#1 = RAdd(r226D,r2262);
      real r226F#1 = RAdd(r226E,r2264);
      real r2270#1 = RAdd(r226F,r2267);
      real r2271#1 = RAdd(r2270,r2269);
      real r2272#1 = r1FCF;
      real r2273#2 = RMul(realLit2255,r2272);
      real r2274#2 = r1FD7;
      real r2275#1 = RMul(realLit2255,r2274);
      real r2276#2 = r1FDF;
      real r2277#2 = RMul(realLit2255,r2276);
      real r2278#2 = r2012;
      real r2279#2 = RMul(realLit2255,r2278);
      real r227A#1 = r2017;
      real r227B#3 = RMul(realLit2255,r227A);
      real r227C#2 = r201C;
      real r227D#1 = RMul(realLit2260,r227C);
      real r227E#2 = r2046;
      real r227F#2 = RMul(realLit2255,r227E);
      real r2280#2 = r204B;
      real r2281#1 = RMul(realLit2265,r2280);
      real r2282#1 = r2050;
      real r2283#3 = RMul(realLit2255,r2282);
      real r2284#2 = RAdd(r2273,r2275);
      real r2285#1 = RAdd(r2284,r2277);
      real r2286#1 = RAdd(r2285,r2279);
      real r2287#1 = RAdd(r2286,r227B);
      real r2288#1 = RAdd(r2287,r227D);
      real r2289#1 = RAdd(r2288,r227F);
      real r228A#1 = RAdd(r2289,r2281);
      real r228B#1 = RAdd(r228A,r2283);
      real r228C#1 = r1FE8;
      real r228D#2 = RMul(realLit2255,r228C);
      real r228E#2 = r1FF0;
      real r228F#1 = RMul(realLit2255,r228E);
      real r2290#2 = r1FF8;
      real r2291#2 = RMul(realLit2255,r2290);
      real r2292#2 = r2022;
      real r2293#2 = RMul(realLit2255,r2292);
      real r2294#1 = r2027;
      real r2295#3 = RMul(realLit2255,r2294);
      real r2296#2 = r202C;
      real r2297#1 = RMul(realLit2260,r2296);
      real r2298#2 = r2056;
      real r2299#2 = RMul(realLit2255,r2298);
      real r229A#2 = r205B;
      real r229B#1 = RMul(realLit2265,r229A);
      real r229C#1 = r2060;
      real r229D#3 = RMul(realLit2255,r229C);
      real r229E#2 = RAdd(r228D,r228F);
      real r229F#1 = RAdd(r229E,r2291);
      real r22A0#1 = RAdd(r229F,r2293);
      real r22A1#1 = RAdd(r22A0,r2295);
      real r22A2#1 = RAdd(r22A1,r2297);
      real r22A3#1 = RAdd(r22A2,r2299);
      real r22A4#1 = RAdd(r22A3,r229B);
      real r22A5#1 = RAdd(r22A4,r229D);
      real r22A7#1 = RMul(realLit2265,r225A);
      real r22A8#2 = RMul(realLit2255,r2261);
      real r22A9#1 = RMul(realLit2260,r2263);
      real r22AA#2 = RMul(realLit2255,r2266);
      real r22AB#1 = RAdd(r226A,r22A7);
      real r22AC#1 = RAdd(r22AB,r225D);
      real r22AD#1 = RAdd(r22AC,r225F);
      real r22AE#1 = RAdd(r22AD,r22A8);
      real r22AF#1 = RAdd(r22AE,r22A9);
      real r22B0#1 = RAdd(r22AF,r22AA);
      real r22B1#1 = RAdd(r22B0,r2269);
      real r22B2#1 = RMul(realLit2265,r2276);
      real r22B3#2 = RMul(realLit2255,r227C);
      real r22B4#1 = RMul(realLit2260,r227E);
      real r22B5#2 = RMul(realLit2255,r2280);
      real r22B6#1 = RAdd(r2284,r22B2);
      real r22B7#1 = RAdd(r22B6,r2279);
      real r22B8#1 = RAdd(r22B7,r227B);
      real r22B9#1 = RAdd(r22B8,r22B3);
      real r22BA#1 = RAdd(r22B9,r22B4);
      real r22BB#1 = RAdd(r22BA,r22B5);
      real r22BC#1 = RAdd(r22BB,r2283);
      real r22BD#1 = RMul(realLit2265,r2290);
      real r22BE#2 = RMul(realLit2255,r2296);
      real r22BF#1 = RMul(realLit2260,r2298);
      real r22C0#2 = RMul(realLit2255,r229A);
      real r22C1#1 = RAdd(r229E,r22BD);
      real r22C2#1 = RAdd(r22C1,r2293);
      real r22C3#1 = RAdd(r22C2,r2295);
      real r22C4#1 = RAdd(r22C3,r22BE);
      real r22C5#1 = RAdd(r22C4,r22BF);
      real r22C6#1 = RAdd(r22C5,r22C0);
      real r22C7#1 = RAdd(r22C6,r229D);
      real r22C9#1 = RMul(realLit2260,r2258);
      real r22CA#1 = RMul(realLit2265,r225C);
      real r22CB#1 = RAdd(r2257,r22C9);
      real r22CC#1 = RAdd(r22CB,r225B);
      real r22CD#1 = RAdd(r22CC,r22CA);
      real r22CE#1 = RAdd(r22CD,r225F);
      real r22CF#1 = RAdd(r22CE,r22A8);
      real r22D0#1 = RAdd(r22CF,r2264);
      real r22D1#1 = RAdd(r22D0,r22AA);
      real r22D2#1 = RAdd(r22D1,r2269);
      real r22D3#1 = RMul(realLit2260,r2274);
      real r22D4#1 = RMul(realLit2265,r2278);
      real r22D5#1 = RAdd(r2273,r22D3);
      real r22D6#1 = RAdd(r22D5,r2277);
      real r22D7#1 = RAdd(r22D6,r22D4);
      real r22D8#1 = RAdd(r22D7,r227B);
      real r22D9#1 = RAdd(r22D8,r22B3);
      real r22DA#1 = RAdd(r22D9,r227F);
      real r22DB#1 = RAdd(r22DA,r22B5);
      real r22DC#1 = RAdd(r22DB,r2283);
      real r22DD#1 = RMul(realLit2260,r228E);
      real r22DE#1 = RMul(realLit2265,r2292);
      real r22DF#1 = RAdd(r228D,r22DD);
      real r22E0#1 = RAdd(r22DF,r2291);
      real r22E1#1 = RAdd(r22E0,r22DE);
      real r22E2#1 = RAdd(r22E1,r2295);
      real r22E3#1 = RAdd(r22E2,r22BE);
      real r22E4#1 = RAdd(r22E3,r2299);
      real r22E5#1 = RAdd(r22E4,r22C0);
      real r22E6#1 = RAdd(r22E5,r229D);
      real realLit237E#1 = 0.2e1;
      real op1_e3_l_21237D#9 = RMul(realLit237E,op1_e3_l_192251);
      real varAcc2384#1 = VIndex<3,0>(xn2383);
      real varAcc2385#1 = VIndex<3,1>(xn2383);
      real varAcc2386#1 = VIndex<3,2>(xn2383);
      real coeff2387#3 = -0.1e1;
      real iden2388#1 = varAcc2384;
      real one2389#11 = 0.1e1;
      real prod238A#2 = RMul(one2389,one2389);
      real prod238B#2 = RMul(iden2388,prod238A);
      real iden238C#1 = varAcc2385;
      real prod238D#1 = RMul(iden238C,one2389);
      real prod238E#2 = RMul(one2389,prod238D);
      real iden238F#1 = varAcc2386;
      real prod2390#1 = RMul(one2389,iden238F);
      real prod2391#2 = RMul(one2389,prod2390);
      real prod2392#1 = RMul(one2389,prod238A);
      real mult2393#1 = RMul(one2389,prod2392);
      real mult2394#1 = RMul(coeff2387,prod2391);
      real mult2395#1 = RMul(coeff2387,prod238E);
      real mult2396#1 = RMul(coeff2387,prod238B);
      real sum2397#1 = RAdd(mult2395,mult2396);
      real sum2398#1 = RAdd(mult2394,sum2397);
      real sum2399#1 = RAdd(mult2393,sum2398);
      real intermediate239A#2 = sum2399;
      real basisEval239B#2 = RMul(one2389,prod238B);
      real basisEval239C#2 = RMul(one2389,prod238E);
      real basisEval239D#2 = RMul(one2389,prod2391);
      real r23BC#1 = dof_load1DDF;
      real r23BD#3 = intermediate239A;
      real r23BE#1 = RMul(r23BC,r23BD);
      real r23BF#1 = dof_load1DE8;
      real r23C0#3 = basisEval239B;
      real r23C1#1 = RMul(r23BF,r23C0);
      real r23C2#1 = dof_load1DF1;
      real r23C3#3 = basisEval239C;
      real r23C4#1 = RMul(r23C2,r23C3);
      real r23C5#1 = dof_load1DFA;
      real r23C6#3 = basisEval239D;
      real r23C7#1 = RMul(r23C5,r23C6);
      real r23C8#1 = RAdd(r23BE,r23C1);
      real r23C9#1 = RAdd(r23C8,r23C4);
      real r23CA#1 = RAdd(r23C9,r23C7);
      real r23CB#1 = dof_load1DE0;
      real r23CC#1 = RMul(r23CB,r23BD);
      real r23CD#1 = dof_load1DE9;
      real r23CE#1 = RMul(r23CD,r23C0);
      real r23CF#1 = dof_load1DF2;
      real r23D0#1 = RMul(r23CF,r23C3);
      real r23D1#1 = dof_load1DFB;
      real r23D2#1 = RMul(r23D1,r23C6);
      real r23D3#1 = RAdd(r23CC,r23CE);
      real r23D4#1 = RAdd(r23D3,r23D0);
      real r23D5#1 = RAdd(r23D4,r23D2);
      real r23D6#1 = dof_load1DE1;
      real r23D7#1 = RMul(r23D6,r23BD);
      real r23D8#1 = dof_load1DEA;
      real r23D9#1 = RMul(r23D8,r23C0);
      real r23DA#1 = dof_load1DF3;
      real r23DB#1 = RMul(r23DA,r23C3);
      real r23DC#1 = dof_load1DFC;
      real r23DD#1 = RMul(r23DC,r23C6);
      real r23DE#1 = RAdd(r23D7,r23D9);
      real r23DF#1 = RAdd(r23DE,r23DB);
      real r23E0#1 = RAdd(r23DF,r23DD);
      tensor[3] probe_l_2223BB#1 = <tensor[3]>[r23CA,r23D5,r23E0];
      real r2409#1 = r2271;
      real r240A#1 = RDiv(r2409,op1_e3_l_21237D);
      real r240B#1 = r228B;
      real r240C#1 = RDiv(r240B,op1_e3_l_21237D);
      real r240D#1 = r22A5;
      real r240E#1 = RDiv(r240D,op1_e3_l_21237D);
      tensor[3] tensor240F#2 = <tensor[3]>[r240A,r240C,r240E];
      real r2410#1 = r22B1;
      real r2411#1 = RDiv(r2410,op1_e3_l_21237D);
      real r2412#1 = r22BC;
      real r2413#1 = RDiv(r2412,op1_e3_l_21237D);
      real r2414#1 = r22C7;
      real r2415#1 = RDiv(r2414,op1_e3_l_21237D);
      tensor[3] tensor2416#2 = <tensor[3]>[r2411,r2413,r2415];
      real r2417#1 = r22D2;
      real r2418#1 = RDiv(r2417,op1_e3_l_21237D);
      real r2419#1 = r22DC;
      real r241A#1 = RDiv(r2419,op1_e3_l_21237D);
      real r241B#1 = r22E6;
      real r241C#1 = RDiv(r241B,op1_e3_l_21237D);
      tensor[3] tensor241D#2 = <tensor[3]>[r2418,r241A,r241C];
      tensor[3] op1_e3_l_242435#3 = VSub<3>(probe_l_2223BB,pos1DA3);
      tensor[3] projParam2439#1 = tensor240F;
      real vdot243A#1 = VDot<3>(projParam2439,op1_e3_l_242435);
      tensor[3] projParam243B#1 = tensor2416;
      real vdot243C#1 = VDot<3>(projParam243B,op1_e3_l_242435);
      tensor[3] projParam243D#1 = tensor241D;
      real vdot243E#1 = VDot<3>(projParam243D,op1_e3_l_242435);
      tensor[3] op1_e3_l_252438#1 = <tensor[3]>[vdot243A,vdot243C,vdot243E];
      tensor[3] xn2447#4 = VSub<3>(xn2383,op1_e3_l_252438);
      real _t244A#2 = 0.1e-7;
      real _t244C#1 = RMul(_t244A,_t244A);
      real r2450#1 = dof_load1DDF;
      real r2451#3 = intermediate239A;
      real r2452#1 = RMul(r2450,r2451);
      real r2453#1 = dof_load1DE8;
      real r2454#3 = basisEval239B;
      real r2455#1 = RMul(r2453,r2454);
      real r2456#1 = dof_load1DF1;
      real r2457#3 = basisEval239C;
      real r2458#1 = RMul(r2456,r2457);
      real r2459#1 = dof_load1DFA;
      real r245A#3 = basisEval239D;
      real r245B#1 = RMul(r2459,r245A);
      real r245C#1 = RAdd(r2452,r2455);
      real r245D#1 = RAdd(r245C,r2458);
      real r245E#1 = RAdd(r245D,r245B);
      real r245F#1 = dof_load1DE0;
      real r2460#1 = RMul(r245F,r2451);
      real r2461#1 = dof_load1DE9;
      real r2462#1 = RMul(r2461,r2454);
      real r2463#1 = dof_load1DF2;
      real r2464#1 = RMul(r2463,r2457);
      real r2465#1 = dof_load1DFB;
      real r2466#1 = RMul(r2465,r245A);
      real r2467#1 = RAdd(r2460,r2462);
      real r2468#1 = RAdd(r2467,r2464);
      real r2469#1 = RAdd(r2468,r2466);
      real r246A#1 = dof_load1DE1;
      real r246B#1 = RMul(r246A,r2451);
      real r246C#1 = dof_load1DEA;
      real r246D#1 = RMul(r246C,r2454);
      real r246E#1 = dof_load1DF3;
      real r246F#1 = RMul(r246E,r2457);
      real r2470#1 = dof_load1DFC;
      real r2471#1 = RMul(r2470,r245A);
      real r2472#1 = RAdd(r246B,r246D);
      real r2473#1 = RAdd(r2472,r246F);
      real r2474#1 = RAdd(r2473,r2471);
      tensor[3] probe_l_30244F#1 = <tensor[3]>[r245E,r2469,r2474];
      tensor[3] op1_e3_l_32249C#3 = VSub<3>(probe_l_30244F,pos1DA3);
      tensor[3] projParam24A0#1 = tensor240F;
      real vdot24A1#1 = VDot<3>(projParam24A0,op1_e3_l_32249C);
      tensor[3] projParam24A2#1 = tensor2416;
      real vdot24A3#1 = VDot<3>(projParam24A2,op1_e3_l_32249C);
      tensor[3] projParam24A4#1 = tensor241D;
      real vdot24A5#1 = VDot<3>(projParam24A4,op1_e3_l_32249C);
      tensor[3] op1_e3_l_48249F#2 = <tensor[3]>[vdot24A1,vdot24A3,vdot24A5];
      real _t24AE#1 = VDot<3>(op1_e3_l_48249F,op1_e3_l_48249F);
      bool _t24B1#1 = GTE<real>(_t244C,_t24AE);
      if _t24B1 then goto ASSIGN24B5 else goto JOIN24E0
    ASSIGN24B5:  preds = [COND24B3]
      real _t24B4#4 = 0.1e1;
      real _t24B6#4 = 0.1e-4;
      real _t24B8#1 = RAdd(_t24B4,_t24B6);
      tensor[3] _t24BB#1 = <tensor[3]>[_t24B4,_t24B4,_t24B4];
      real _t24BD#1 = VDot<3>(_t24BB,xn2447);
      bool _t24C0#1 = GT<real>(_t24B8,_t24BD);
      tensor[3] _t24C2#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24C4#3 = VAdd<3>(_t24C2,xn2447);
      real _t24C7#1 = VIndex<3,0>(_t24C4);
      real _t24C9#3 = -0.e0;
      bool _t24CB#1 = GT<real>(_t24C7,_t24C9);
      real _t24CD#1 = VIndex<3,1>(_t24C4);
      bool _t24CF#1 = GT<real>(_t24CD,_t24C9);
      real _t24D1#1 = VIndex<3,2>(_t24C4);
      bool _t24D3#1 = GT<real>(_t24D1,_t24C9);
      bool _t24D5#1 = BAnd(_t24CF,_t24D3);
      bool _t24D7#1 = BAnd(_t24CB,_t24D5);
      bool _t24D9#1 = BAnd(_t24C0,_t24D7);
      if _t24D9 then goto ASSIGN24DD else goto JOIN24DF
    ASSIGN24DD:  preds = [COND24DB]
      femData:MeshPos _t24DC#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1DA2,cellItter1DAD,xn2447,pos1DA3);
      return _t24DC
      goto JOIN24DF
    JOIN24DF:  preds = [*RETURN(_t24DC)24DE,COND24DB]
      goto JOIN24E0
    JOIN24E0:  preds = [JOIN24DF,COND24B3]
      goto FOREACH1DB4
    NEXT24E3:  preds = [FOREACH1DB4]
      goto FOREACH1DAE
    ASSIGN24E5:  preds = [FOREACH1DAE]
      string _t24E4#1 = "Bad end 2";
      string _t24E6#1 = "\n";
      Print<[string,string]>(_t24E4,_t24E6);
      femData:MeshPos _t24E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1DA2);
      return _t24E9
}
## input initialization
  ENTRY1AE5:  preds = []
    real isoval1AE6#1 = 0.2e0;
    globals.isoval1AC6 = isoval1AE6;
    real thick1AE9#1 = 0.7e-1;
    globals.thick1AC7 = thick1AE9;
    real _t1AEC#2 = 0.3e1;
    real _t1AEE#1 = -0.3e1;
    tensor[3] camEye1AF0#1 = <tensor[3]>[_t1AEC,_t1AEE,_t1AEC];
    globals.camEye1AC8 = camEye1AF0;
    real _t1AF3#3 = 0.5e0;
    tensor[3] camAt1AF5#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1AF3];
    globals.camAt1AC9 = camAt1AF5;
    real _t1AF8#2 = 0.e0;
    real _t1AFA#2 = 0.1e1;
    tensor[3] camUp1AFC#2 = <tensor[3]>[_t1AF8,_t1AF8,_t1AFA];
    globals.camUp1ACA = camUp1AFC;
    real camFOV1AFF#1 = 0.137e2;
    globals.camFOV1ACB = camFOV1AFF;
    int iresU1B02#2 = 500;
    globals.iresU1ACC = iresU1B02;
    globals.iresV1ACD = iresU1B02;
    real camNear1B06#1 = -0.2e1;
    globals.camNear1ACE = camNear1B06;
    real camFar1B09#1 = 0.5e1;
    globals.camFar1ACF = camFar1B09;
    globals.refStep1AD0 = _t1AFA;
    real rayStep1B0D#1 = 0.1e-1;
    globals.rayStep1AD1 = rayStep1B0D;
    globals.lightVsp1AD2 = camUp1AFC;
    real phongKa1B11#1 = 0.1e0;
    globals.phongKa1AD3 = phongKa1B11;
    real phongKd1B14#1 = 0.9e0;
    globals.phongKd1AD4 = phongKd1B14;
    bool debug1B17#1 = false;
    globals.debug1AD5 = debug1B17;
    int su1B1A#2 = 250;
    globals.su1AD6 = su1B1A;
    globals.sv1AD7 = su1B1A;
    return
## global-variable initialization
  ENTRY1B1F:  preds = []
    femData:Mesh a1B20#3 = globals.a1AC3;
    femData:Space 0b043B_intermedateGlobal1B22#1 = globals.0b043B_intermedateGlobal1AC4;
    femData:FemFunc 0c043D_intermedateGlobal1B24#1 = globals.0c043D_intermedateGlobal1AC5;
    tensor[3] camEye1B26#1 = globals.camEye1AC8;
    tensor[3] camAt1B28#1 = globals.camAt1AC9;
    tensor[3] camUp1B2A#3 = globals.camUp1ACA;
    real camFOV1B2C#1 = globals.camFOV1ACB;
    int iresU1B2E#1 = globals.iresU1ACC;
    int iresV1B30#1 = globals.iresV1ACD;
    tensor[3] lightVsp1B32#5 = globals.lightVsp1AD2;
    int _t1B34#1 = 0;
    int _t1B36#1 = 1;
    int _t1B38#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B20);
    int _t1B3A#1 = ISub(_t1B38,_t1B36);
    int[] _t1B3C#1 = Range(_t1B34,_t1B3A);
    femData:MeshCell[] _t1B3E#1 = <femData:MeshCell[]>{};
  FOREACH1B41:  preds = [ASSIGN1B3F,NEXT1B47]
    foreach (_t1B40 in _t1B3C) on exit goto ASSIGN1B49
      femData:MeshCell[] _t1B45#1 = phi(_t1B3E,_t1B44)
    femData:MeshCell _t1B42#1 = LoadFem<femData:MeshCell>(a1B20,_t1B40);
    femData:MeshCell[] _t1B44#1 = Append<femData:MeshCell>(_t1B45,_t1B42);
    goto FOREACH1B41
  ASSIGN1B49:  preds = [FOREACH1B41]
    femData:Space b1B48#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1B22,a1B20);
    femData:FemFunc c1B4A#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1B24,b1B48);
    femData:Space _t1B4C#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B4A);
    femData:Mesh _t1B4E#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B4C);
    image(IMAGE1D<double[3]>) I1B50#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B56#9 = VSub<3>(camAt1B28,camEye1B26);
    real op1_e3_l_41B59#1 = VDot<3>(op1_e3_l_21B56,op1_e3_l_21B56);
    real camDist1B5C#4 = Sqrt(op1_e3_l_41B59);
    globals.camDist1AD8 = camDist1B5C;
    real realLit1B61#1 = 0.1e1;
    real op1_e3_l_91B60#6 = RDiv(realLit1B61,camDist1B5C);
    tensor[3] camN1B65#4 = VScale<3>(op1_e3_l_91B60,op1_e3_l_21B56);
    globals.camN1AD9 = camN1B65;
    real realLit1B6A#3 = 0.e0;
    real r1B6B#3 = TensorIndex<tensor[3],[0]>(camUp1B2A);
    real r1B6C#3 = RMul(realLit1B6A,r1B6B);
    real r1B6D#3 = TensorIndex<tensor[3],[1]>(camUp1B2A);
    real r1B6E#3 = RMul(realLit1B6A,r1B6D);
    real r1B6F#3 = TensorIndex<tensor[3],[2]>(camUp1B2A);
    real r1B70#5 = RMul(realLit1B6A,r1B6F);
    real r1B71#3 = RAdd(r1B6C,r1B6E);
    real r1B72#3 = RAdd(r1B71,r1B70);
    real realLit1B73#3 = 0.1e1;
    real r1B74#1 = RMul(realLit1B73,r1B6F);
    real r1B75#1 = RAdd(r1B71,r1B74);
    real realLit1B76#3 = -0.1e1;
    real r1B77#1 = RMul(realLit1B76,r1B6D);
    real r1B78#1 = RAdd(r1B6C,r1B77);
    real r1B79#1 = RAdd(r1B78,r1B70);
    tensor[3] tensor1B7A#1 = <tensor[3]>[r1B72,r1B75,r1B79];
    real r1B7B#1 = RMul(realLit1B76,r1B6F);
    real r1B7C#1 = RAdd(r1B71,r1B7B);
    real r1B7D#1 = RMul(realLit1B73,r1B6B);
    real r1B7E#1 = RAdd(r1B7D,r1B6E);
    real r1B7F#1 = RAdd(r1B7E,r1B70);
    tensor[3] tensor1B80#1 = <tensor[3]>[r1B7C,r1B72,r1B7F];
    real r1B81#1 = RMul(realLit1B73,r1B6D);
    real r1B82#1 = RAdd(r1B6C,r1B81);
    real r1B83#1 = RAdd(r1B82,r1B70);
    real r1B84#1 = RMul(realLit1B76,r1B6B);
    real r1B85#1 = RAdd(r1B84,r1B6E);
    real r1B86#1 = RAdd(r1B85,r1B70);
    tensor[3] tensor1B87#1 = <tensor[3]>[r1B83,r1B86,r1B72];
    tensor[3] projParam1BA9#1 = tensor1B7A;
    real vdot1BAA#1 = VDot<3>(op1_e3_l_21B56,projParam1BA9);
    tensor[3] projParam1BAB#1 = tensor1B80;
    real vdot1BAC#1 = VDot<3>(op1_e3_l_21B56,projParam1BAB);
    tensor[3] projParam1BAD#1 = tensor1B87;
    real vdot1BAE#1 = VDot<3>(op1_e3_l_21B56,projParam1BAD);
    tensor[3] op1_e3_l_171BA8#6 = <tensor[3]>[vdot1BAA,vdot1BAC,vdot1BAE];
    real op1_e3_l_341BB7#1 = VDot<3>(op1_e3_l_171BA8,op1_e3_l_171BA8);
    real r1BBB#1 = RMul(op1_e3_l_91B60,op1_e3_l_91B60);
    real op1_e3_l_351BBA#1 = RMul(r1BBB,op1_e3_l_341BB7);
    real op1_e3_l_361BBF#1 = Sqrt(op1_e3_l_351BBA);
    tensor[3] op1_e3_l_371BC2#1 = VScale<3>(op1_e3_l_91B60,op1_e3_l_171BA8);
    real realLit1BC6#1 = 0.1e1;
    real op1_e3_l_381BC5#2 = RDiv(realLit1BC6,op1_e3_l_361BBF);
    tensor[3] camU1BCA#4 = VScale<3>(op1_e3_l_381BC5,op1_e3_l_371BC2);
    globals.camU1ADA = camU1BCA;
    real realLit1BCF#3 = 0.e0;
    real r1BD0#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B56);
    real r1BD1#3 = RMul(realLit1BCF,r1BD0);
    real r1BD2#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B56);
    real r1BD3#3 = RMul(realLit1BCF,r1BD2);
    real r1BD4#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B56);
    real r1BD5#5 = RMul(realLit1BCF,r1BD4);
    real r1BD6#3 = RAdd(r1BD1,r1BD3);
    real r1BD7#3 = RAdd(r1BD6,r1BD5);
    real realLit1BD8#3 = 0.1e1;
    real r1BD9#1 = RMul(realLit1BD8,r1BD4);
    real r1BDA#1 = RAdd(r1BD6,r1BD9);
    real realLit1BDB#3 = -0.1e1;
    real r1BDC#1 = RMul(realLit1BDB,r1BD2);
    real r1BDD#1 = RAdd(r1BD1,r1BDC);
    real r1BDE#1 = RAdd(r1BDD,r1BD5);
    tensor[3] tensor1BDF#1 = <tensor[3]>[r1BD7,r1BDA,r1BDE];
    real r1BE0#1 = RMul(realLit1BDB,r1BD4);
    real r1BE1#1 = RAdd(r1BD6,r1BE0);
    real r1BE2#1 = RMul(realLit1BD8,r1BD0);
    real r1BE3#1 = RAdd(r1BE2,r1BD3);
    real r1BE4#1 = RAdd(r1BE3,r1BD5);
    tensor[3] tensor1BE5#1 = <tensor[3]>[r1BE1,r1BD7,r1BE4];
    real r1BE6#1 = RMul(realLit1BD8,r1BD2);
    real r1BE7#1 = RAdd(r1BD1,r1BE6);
    real r1BE8#1 = RAdd(r1BE7,r1BD5);
    real r1BE9#1 = RMul(realLit1BDB,r1BD0);
    real r1BEA#1 = RAdd(r1BE9,r1BD3);
    real r1BEB#1 = RAdd(r1BEA,r1BD5);
    tensor[3] tensor1BEC#1 = <tensor[3]>[r1BE8,r1BEB,r1BD7];
    tensor[3] projParam1C0E#1 = tensor1BDF;
    real vdot1C0F#1 = VDot<3>(op1_e3_l_171BA8,projParam1C0E);
    tensor[3] projParam1C10#1 = tensor1BE5;
    real vdot1C11#1 = VDot<3>(op1_e3_l_171BA8,projParam1C10);
    tensor[3] projParam1C12#1 = tensor1BEC;
    real vdot1C13#1 = VDot<3>(op1_e3_l_171BA8,projParam1C12);
    tensor[3] op1_e3_l_471C0D#1 = <tensor[3]>[vdot1C0F,vdot1C11,vdot1C13];
    tensor[3] op1_e3_l_501C1C#3 = VScale<3>(op1_e3_l_91B60,op1_e3_l_471C0D);
    real r1C20#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C1C);
    real r1C21#3 = RMul(op1_e3_l_381BC5,op1_e3_l_91B60);
    real r1C22#2 = RMul(r1C21,r1C20);
    real r1C23#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C1C);
    real r1C24#2 = RMul(r1C21,r1C23);
    real r1C25#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C1C);
    real r1C26#2 = RMul(r1C21,r1C25);
    tensor[3] camV1C1F#1 = <tensor[3]>[r1C22,r1C24,r1C26];
    globals.camV1ADB = camV1C1F;
    real _t1C31#1 = 0.314159265358979323846264338327950288e1;
    real _t1C33#1 = 0.36e3;
    real op1_e3_l_51C35#1 = RMul(camFOV1B2C,_t1C31);
    real op1_e3_l_61C38#1 = RDiv(op1_e3_l_51C35,_t1C33);
    real op1_e3_l_101C3B#2 = Tan(op1_e3_l_61C38);
    real camVmax1C3E#1 = RMul(op1_e3_l_101C3B,camDist1B5C);
    globals.camVmax1ADC = camVmax1C3E;
    real _t1C42#1 = IntToReal(iresU1B2E);
    real _t1C44#1 = IntToReal(iresV1B30);
    real r1C47#1 = RMul(_t1C42,op1_e3_l_101C3B);
    real op1_e3_l_141C46#1 = RMul(r1C47,camDist1B5C);
    real camUmax1C4B#1 = RDiv(op1_e3_l_141C46,_t1C44);
    globals.camUmax1ADD = camUmax1C4B;
    real op1_e3_l_31C51#1 = VDot<3>(lightVsp1B32,lightVsp1B32);
    real op1_e3_l_41C54#1 = Sqrt(op1_e3_l_31C51);
    real realLit1C58#1 = 0.1e1;
    real op1_e3_l_51C57#1 = RDiv(realLit1C58,op1_e3_l_41C54);
    real r1C5D#1 = VIndex<3,0>(camU1BCA);
    real r1C5E#3 = TensorIndex<tensor[3],[0]>(lightVsp1B32);
    real r1C5F#1 = RMul(r1C5D,r1C5E);
    real r1C60#1 = r1C22;
    real r1C61#3 = TensorIndex<tensor[3],[1]>(lightVsp1B32);
    real r1C62#1 = RMul(r1C60,r1C61);
    real r1C63#1 = VIndex<3,0>(camN1B65);
    real r1C64#3 = TensorIndex<tensor[3],[2]>(lightVsp1B32);
    real r1C65#1 = RMul(r1C63,r1C64);
    real r1C66#1 = RAdd(r1C5F,r1C62);
    real r1C67#1 = RAdd(r1C66,r1C65);
    real r1C68#1 = VIndex<3,1>(camU1BCA);
    real r1C69#1 = RMul(r1C68,r1C5E);
    real r1C6A#1 = r1C24;
    real r1C6B#1 = RMul(r1C6A,r1C61);
    real r1C6C#1 = VIndex<3,1>(camN1B65);
    real r1C6D#1 = RMul(r1C6C,r1C64);
    real r1C6E#1 = RAdd(r1C69,r1C6B);
    real r1C6F#1 = RAdd(r1C6E,r1C6D);
    real r1C70#1 = VIndex<3,2>(camU1BCA);
    real r1C71#1 = RMul(r1C70,r1C5E);
    real r1C72#1 = r1C26;
    real r1C73#1 = RMul(r1C72,r1C61);
    real r1C74#1 = VIndex<3,2>(camN1B65);
    real r1C75#1 = RMul(r1C74,r1C64);
    real r1C76#1 = RAdd(r1C71,r1C73);
    real r1C77#1 = RAdd(r1C76,r1C75);
    tensor[3] op1_e3_l_61C5C#1 = <tensor[3]>[r1C67,r1C6F,r1C77];
    tensor[3] light1C95#1 = VScale<3>(op1_e3_l_51C57,op1_e3_l_61C5C);
    globals.light1ADE = light1C95;
    globals._t1ADF = _t1B4E;
    globals._tX1AE0 = _t1B4C;
    globals.c1AE1 = c1B4A;
    globals.I1AE4 = I1B50;
    return
## strand
  strand raycast (int ui1CA0#2, int vi1CA1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1CAC:  preds = []
        int iresU1CAD#1 = globals.iresU1ACC;
        int iresV1CAF#1 = globals.iresV1ACD;
        real camNear1CB1#1 = globals.camNear1ACE;
        real camDist1CB3#1 = globals.camDist1AD8;
        tensor[3] camN1CB5#1 = globals.camN1AD9;
        tensor[3] camU1CB7#1 = globals.camU1ADA;
        tensor[3] camV1CB9#1 = globals.camV1ADB;
        real camVmax1CBB#4 = globals.camVmax1ADC;
        real camUmax1CBD#2 = globals.camUmax1ADD;
        real _t1CBF#5 = -0.5e0;
        real _t1CC1#1 = IntToReal(ui1CA0);
        real _t1CC3#1 = IntToReal(iresU1CAD);
        real _t1CC5#3 = 0.5e0;
        real op1_e3_l_61CC7#1 = RSub(_t1CC3,_t1CC5);
        real op1_e3_l_71CCA#1 = RSub(_t1CC1,_t1CBF);
        real op1_e3_l_81CCD#1 = RSub(op1_e3_l_61CC7,_t1CBF);
        real op1_e3_l_91CD0#2 = RNeg(camUmax1CBD);
        real op1_e3_l_101CD3#1 = RDiv(op1_e3_l_71CCA,op1_e3_l_81CCD);
        real op1_e3_l_111CD6#1 = RSub(camUmax1CBD,op1_e3_l_91CD0);
        real op1_e3_l_131CD9#1 = RMul(op1_e3_l_101CD3,op1_e3_l_111CD6);
        real rayU1CDC#2 = RAdd(op1_e3_l_91CD0,op1_e3_l_131CD9);
        real _t1CDF#1 = IntToReal(vi1CA1);
        real _t1CE1#2 = IntToReal(iresV1CAF);
        real op1_e3_l_61CE3#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_71CE6#2 = RSub(_t1CDF,_t1CBF);
        real op1_e3_l_81CE9#1 = RSub(op1_e3_l_61CE3,_t1CBF);
        real op1_e3_l_91CEC#1 = RNeg(camVmax1CBB);
        real op1_e3_l_101CEF#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_81CE9);
        real op1_e3_l_111CF2#2 = RSub(op1_e3_l_91CEC,camVmax1CBB);
        real op1_e3_l_121CF5#1 = RMul(op1_e3_l_101CEF,op1_e3_l_111CF2);
        real rayV1CF8#1 = RAdd(camVmax1CBB,op1_e3_l_121CF5);
        real op1_e3_l_251CFB#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_271CFE#1 = RSub(op1_e3_l_251CFB,_t1CBF);
        real op1_e3_l_291D01#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_271CFE);
        real op1_e3_l_311D04#1 = RMul(op1_e3_l_291D01,op1_e3_l_111CF2);
        real op1_e3_l_321D07#1 = RAdd(camVmax1CBB,op1_e3_l_311D04);
        tensor[3] op1_e3_l_331D0A#1 = VScale<3>(rayU1CDC,camU1CB7);
        tensor[3] op1_e3_l_341D0D#1 = VScale<3>(op1_e3_l_321D07,camV1CB9);
        tensor[3] op1_e3_l_351D10#3 = VAdd<3>(op1_e3_l_331D0A,op1_e3_l_341D0D);
        real realLit1D14#1 = 0.1e1;
        real r1D15#3 = RDiv(realLit1D14,camDist1CB3);
        real r1D16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D10);
        real r1D17#1 = RMul(r1D15,r1D16);
        real r1D18#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D10);
        real r1D19#1 = RMul(r1D15,r1D18);
        real r1D1A#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D10);
        real r1D1B#1 = RMul(r1D15,r1D1A);
        tensor[3] op1_e3_l_361D13#1 = <tensor[3]>[r1D17,r1D19,r1D1B];
        tensor[3] rayVec1D26#1 = VAdd<3>(camN1CB5,op1_e3_l_361D13);
        real transp1D29#1 = 0.1e1;
        real _t1D2B#8 = 0.e0;
        tensor[3] rgb1D2D#1 = <tensor[3]>[_t1D2B,_t1D2B,_t1D2B];
        tensor[4] rgba1D2F#1 = <tensor[4]>[_t1D2B,_t1D2B,_t1D2B,_t1D2B];
        self.rayU = rayU1CDC;
        self.rayV = rayV1CF8;
        self.rayN = camNear1CB1;
        self.rayVec = rayVec1D26;
        self.transp = transp1D29;
        self.rgb = rgb1D2D;
        self.rgba = rgba1D2F;
        self.gray = _t1D2B;
        self.ui = ui1CA0;
        self.vi = vi1CA1;
        return
    end state init
    method update
        ENTRY1D3C:  preds = []
          image(IMAGE1D<double[3]>) I1D3D#17 = globals.I1AE4;
          real isoval1D3F#1 = globals.isoval1AC6;
          femData:Mesh _t1D41#17 = globals._t1ADF;
          femData:Space _t1D43#10 = globals._tX1AE0;
          femData:FemFunc c1D45#10 = globals.c1AE1;
          femData:Mesh a1D4B#1 = globals.a1AC3;
          real thick1D4D#1 = globals.thick1AC7;
          tensor[3] camEye1D4F#1 = globals.camEye1AC8;
          real camNear1D51#2 = globals.camNear1ACE;
          real camFar1D53#2 = globals.camFar1ACF;
          real refStep1D55#1 = globals.refStep1AD0;
          real rayStep1D57#2 = globals.rayStep1AD1;
          real phongKa1D59#1 = globals.phongKa1AD3;
          real phongKd1D5B#1 = globals.phongKd1AD4;
          bool debug1D5D#1 = globals.debug1AD5;
          int su1D5F#1 = globals.su1AD6;
          int sv1D61#1 = globals.sv1AD7;
          tensor[3] light1D63#1 = globals.light1ADE;
          real rayN1D65#4 = self.rayN;
          tensor[3] rayVec1D67#3 = self.rayVec;
          real transp1D69#10 = self.transp;
          tensor[3] rgb1D6B#9 = self.rgb;
          int ui1D6D#1 = self.ui;
          int vi1D6F#1 = self.vi;
          if debug1D5D then goto ASSIGN1D73 else goto JOIN1D7D
        ASSIGN1D73:  preds = [COND1D71]
          bool _t1D72#1 = NEQ<int>(ui1D6D,su1D5F);
          if _t1D72 then goto ASSIGN1D76 else goto ASSIGN2E4F
        ASSIGN1D76:  preds = [COND1D74]
          bool _t1D75#1 = true;
          goto JOIN1D79
        JOIN1D79:  preds = [ASSIGN1D76,ASSIGN2E4F]
          bool _t1D77#1 = phi(_t1D75,_t1D78)
          if _t1D77 then goto STABILIZE1D7B else goto JOIN1D7C
        STABILIZE1D7B:  preds = [COND1D7A]
          stabilize
          goto JOIN1D7C
        JOIN1D7C:  preds = [*STABILIZE1D7B,COND1D7A]
          goto JOIN1D7D
        JOIN1D7D:  preds = [JOIN1D7C,COND1D71]
          tensor[3] op1_e3_l_31D7E#1 = VScale<3>(rayN1D65,rayVec1D67);
          tensor[3] x1D81#6 = VAdd<3>(camEye1D4F,op1_e3_l_31D7E);
          real _t1D84#8 = 0.e0;
          real _t1D86#2 = VIndex<3,0>(x1D81);
          bool _t1D88#1 = LT<real>(_t1D84,_t1D86);
          if _t1D88 then goto ASSIGN1D8C else goto JOIN2DFF
        ASSIGN1D8C:  preds = [COND1D8A]
          real _t1D8B#11 = 0.1e1;
          bool _t1D8D#1 = LT<real>(_t1D86,_t1D8B);
          if _t1D8D then goto ASSIGN1D91 else goto JOIN2DFC
        ASSIGN1D91:  preds = [COND1D8F]
          real _t1D90#2 = VIndex<3,1>(x1D81);
          bool _t1D92#1 = LT<real>(_t1D84,_t1D90);
          if _t1D92 then goto ASSIGN1D96 else goto JOIN2DF9
        ASSIGN1D96:  preds = [COND1D94]
          bool _t1D95#1 = LT<real>(_t1D90,_t1D8B);
          if _t1D95 then goto ASSIGN1D99 else goto JOIN2DF6
        ASSIGN1D99:  preds = [COND1D97]
          real _t1D98#2 = VIndex<3,2>(x1D81);
          bool _t1D9A#1 = LT<real>(_t1D84,_t1D98);
          if _t1D9A then goto ASSIGN1D9E else goto JOIN2DF3
        ASSIGN1D9E:  preds = [COND1D9C]
          bool _t1D9D#1 = LT<real>(_t1D98,_t1D8B);
          if _t1D9D then goto ASSIGN24EC else goto JOIN2DF0
        ASSIGN24EC:  preds = [COND1D9F]
          femData:MeshPos p1DA0#1 = findPos1DA1 (a1D4B,x1D81);
          bool _t24ED#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1DA0);
          if _t24ED then goto ASSIGN24F1 else goto ASSIGN2E4A
        ASSIGN24F1:  preds = [COND24EF]
          real _t24F0#1 = 0.13e1;
          femData:MeshPos callFindPos24F2#2 = findPos1DA1 (_t1D41,x1D81);
          int intPos24F4#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F2);
          tensor[3] refPos24F6#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F2);
          int ilit24F9#1 = 10;
          int mulRes24FA#10 = IMul(intPos24F4,ilit24F9);
          int addRes24FC#1 = mulRes24FA;
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FC);
          int ilit24FE#1 = 1;
          int addRes24FF#1 = IAdd(mulRes24FA,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FF);
          int ilit2501#1 = 2;
          int addRes2502#1 = IAdd(mulRes24FA,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2502);
          int ilit2504#1 = 3;
          int addRes2505#1 = IAdd(mulRes24FA,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2505);
          int ilit2507#1 = 4;
          int addRes2508#1 = IAdd(mulRes24FA,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2508);
          int ilit250A#1 = 5;
          int addRes250B#1 = IAdd(mulRes24FA,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250B);
          int ilit250D#1 = 6;
          int addRes250E#1 = IAdd(mulRes24FA,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250E);
          int ilit2510#1 = 7;
          int addRes2511#1 = IAdd(mulRes24FA,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2511);
          int ilit2513#1 = 8;
          int addRes2514#1 = IAdd(mulRes24FA,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2514);
          int ilit2516#1 = 9;
          int addRes2517#1 = IAdd(mulRes24FA,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2517);
          int ilit253D#10 = 1;
          int idx253F#1 = idx24FD;
          int mulRes2540#1 = IMul(ilit253D,idx253F);
          int idx2541#1 = idx2500;
          int mulRes2542#1 = IMul(ilit253D,idx2541);
          int idx2544#1 = idx2503;
          int mulRes2545#1 = IMul(ilit253D,idx2544);
          int idx2547#1 = idx2506;
          int mulRes2548#1 = IMul(ilit253D,idx2547);
          int idx254A#1 = idx2509;
          int mulRes254B#1 = IMul(ilit253D,idx254A);
          int idx254D#1 = idx250C;
          int mulRes254E#1 = IMul(ilit253D,idx254D);
          int idx2550#1 = idx250F;
          int mulRes2551#1 = IMul(ilit253D,idx2550);
          int idx2553#1 = idx2512;
          int mulRes2554#1 = IMul(ilit253D,idx2553);
          int idx2556#1 = idx2515;
          int mulRes2557#1 = IMul(ilit253D,idx2556);
          int idx2559#1 = idx2518;
          int mulRes255A#1 = IMul(ilit253D,idx2559);
          real dof255B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2540);
          real dof255C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2542);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2545);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2548);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254B);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254E);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2551);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2554);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2557);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes255A);
          tensor[10] dofs2565#1 = <tensor[10]>[dof255B,dof255C,dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564];
          tensor[10] femDofs253C#4 = dofs2565;
          real varAcc2591#2 = VIndex<3,0>(refPos24F6);
          real varAcc2592#2 = VIndex<3,1>(refPos24F6);
          real varAcc2593#2 = VIndex<3,2>(refPos24F6);
          real coeff2594#3 = 0.2e1;
          real iden2595#4 = varAcc2591;
          real prod22596#1 = RMul(iden2595,varAcc2591);
          real one2597#13 = 0.1e1;
          real prod2598#3 = RMul(one2597,one2597);
          real prod2599#2 = RMul(prod22596,prod2598);
          real coeff259A#6 = 0.4e1;
          real iden259B#3 = varAcc2592;
          real prod259C#2 = RMul(iden259B,one2597);
          real prod259D#2 = RMul(iden2595,prod259C);
          real iden259E#3 = varAcc2593;
          real prod259F#2 = RMul(one2597,iden259E);
          real prod25A0#2 = RMul(iden2595,prod259F);
          real coeff25A1#3 = -0.3e1;
          real prod25A2#3 = RMul(iden2595,prod2598);
          real prod225A3#1 = RMul(iden259B,varAcc2592);
          real prod25A4#1 = RMul(prod225A3,one2597);
          real prod25A5#2 = RMul(one2597,prod25A4);
          real prod25A6#1 = RMul(iden259B,iden259E);
          real prod25A7#2 = RMul(one2597,prod25A6);
          real prod25A8#3 = RMul(one2597,prod259C);
          real prod225A9#1 = RMul(iden259E,varAcc2593);
          real prod25AA#1 = RMul(one2597,prod225A9);
          real prod25AB#2 = RMul(one2597,prod25AA);
          real prod25AC#3 = RMul(one2597,prod259F);
          real prod25AD#1 = RMul(one2597,prod2598);
          real mult25AE#1 = RMul(one2597,prod25AD);
          real mult25AF#1 = RMul(coeff25A1,prod25AC);
          real mult25B0#2 = RMul(coeff2594,prod25AB);
          real mult25B1#1 = RMul(coeff25A1,prod25A8);
          real mult25B2#2 = RMul(coeff259A,prod25A7);
          real mult25B3#2 = RMul(coeff2594,prod25A5);
          real mult25B4#1 = RMul(coeff25A1,prod25A2);
          real mult25B5#2 = RMul(coeff259A,prod25A0);
          real mult25B6#2 = RMul(coeff259A,prod259D);
          real mult25B7#2 = RMul(coeff2594,prod2599);
          real sum25B8#1 = RAdd(mult25B6,mult25B7);
          real sum25B9#1 = RAdd(mult25B5,sum25B8);
          real sum25BA#1 = RAdd(mult25B4,sum25B9);
          real sum25BB#1 = RAdd(mult25B3,sum25BA);
          real sum25BC#1 = RAdd(mult25B2,sum25BB);
          real sum25BD#1 = RAdd(mult25B1,sum25BC);
          real sum25BE#1 = RAdd(mult25B0,sum25BD);
          real sum25BF#1 = RAdd(mult25AF,sum25BE);
          real sum25C0#1 = RAdd(mult25AE,sum25BF);
          real intermediate25C1#1 = sum25C0;
          real coeff25C2#3 = -0.1e1;
          real mult25C3#1 = RMul(coeff25C2,prod25A2);
          real sum25C4#1 = RAdd(mult25C3,mult25B7);
          real intermediate25C5#1 = sum25C4;
          real mult25C6#1 = RMul(coeff25C2,prod25A8);
          real sum25C7#1 = RAdd(mult25C6,mult25B3);
          real intermediate25C8#1 = sum25C7;
          real mult25C9#1 = RMul(coeff25C2,prod25AC);
          real sum25CA#1 = RAdd(mult25C9,mult25B0);
          real intermediate25CB#1 = sum25CA;
          real coeff25CC#6 = -0.4e1;
          real mult25CD#1 = RMul(coeff259A,prod25AC);
          real mult25CE#1 = RMul(coeff25CC,prod25AB);
          real mult25CF#2 = RMul(coeff25CC,prod25A7);
          real mult25D0#2 = RMul(coeff25CC,prod25A0);
          real sum25D1#1 = RAdd(mult25CF,mult25D0);
          real sum25D2#1 = RAdd(mult25CE,sum25D1);
          real sum25D3#1 = RAdd(mult25CD,sum25D2);
          real intermediate25D4#1 = sum25D3;
          real mult25D5#1 = RMul(coeff259A,prod25A8);
          real mult25D6#1 = RMul(coeff25CC,prod25A5);
          real mult25D7#2 = RMul(coeff25CC,prod259D);
          real sum25D8#1 = RAdd(mult25D6,mult25D7);
          real sum25D9#1 = RAdd(mult25CF,sum25D8);
          real sum25DA#1 = RAdd(mult25D5,sum25D9);
          real intermediate25DB#1 = sum25DA;
          real mult25DC#1 = RMul(coeff259A,prod25A2);
          real mult25DD#1 = RMul(coeff25CC,prod2599);
          real sum25DE#1 = RAdd(mult25D7,mult25DD);
          real sum25DF#1 = RAdd(mult25D0,sum25DE);
          real sum25E0#1 = RAdd(mult25DC,sum25DF);
          real intermediate25E1#1 = sum25E0;
          tensor[10] intermediateCons25E2#1 = <tensor[10]>[intermediate25C1,intermediate25C5,intermediate25C8,intermediate25CB,mult25B2,mult25B5,mult25B6,intermediate25D4,intermediate25DB,intermediate25E1];
          tensor[10] basisResult2590#1 = intermediateCons25E2;
          real compositionl2636#2 = VDot<10>(femDofs253C,basisResult2590);
          real op1_e3_l_232639#1 = RSub(compositionl2636,isoval1D3F);
          real varAcc263D#1 = VIndex<3,0>(refPos24F6);
          real varAcc263E#1 = VIndex<3,1>(refPos24F6);
          real varAcc263F#1 = VIndex<3,2>(refPos24F6);
          real coeff2640#4 = 0.4e1;
          real iden2641#1 = varAcc263D;
          real one2642#7 = 0.1e1;
          real prod2643#2 = RMul(one2642,one2642);
          real prod2644#3 = RMul(iden2641,prod2643);
          real iden2645#1 = varAcc263E;
          real prod2646#1 = RMul(iden2645,one2642);
          real prod2647#3 = RMul(one2642,prod2646);
          real iden2648#1 = varAcc263F;
          real prod2649#1 = RMul(one2642,iden2648);
          real prod264A#3 = RMul(one2642,prod2649);
          real coeff264B#1 = -0.3e1;
          real prod264C#3 = RMul(one2642,prod2643);
          real mult264D#1 = RMul(coeff264B,prod264C);
          real mult264E#4 = RMul(coeff2640,prod264A);
          real mult264F#4 = RMul(coeff2640,prod2647);
          real mult2650#4 = RMul(coeff2640,prod2644);
          real sum2651#1 = RAdd(mult264F,mult2650);
          real sum2652#1 = RAdd(mult264E,sum2651);
          real sum2653#3 = RAdd(mult264D,sum2652);
          real intermediate2654#1 = sum2653;
          real coeff2655#1 = -0.1e1;
          real mult2656#3 = RMul(coeff2655,prod264C);
          real sum2657#1 = RAdd(mult2656,mult2650);
          real intermediate2658#1 = sum2657;
          real basisEval2659#9 = 0.e0;
          real coeff265A#3 = -0.4e1;
          real basisEval265B#4 = RMul(coeff265A,prod264A);
          real basisEval265C#4 = RMul(coeff265A,prod2647);
          real coeff265D#3 = -0.8e1;
          real mult265E#3 = RMul(coeff2640,prod264C);
          real mult265F#1 = RMul(coeff265D,prod2644);
          real sum2660#1 = RAdd(basisEval265C,mult265F);
          real sum2661#1 = RAdd(basisEval265B,sum2660);
          real sum2662#1 = RAdd(mult265E,sum2661);
          real intermediate2663#1 = sum2662;
          real intermediate2664#1 = sum2653;
          real sum2665#1 = RAdd(mult2656,mult264F);
          real intermediate2666#1 = sum2665;
          real mult2667#1 = RMul(coeff265D,prod2647);
          real mult2668#4 = RMul(coeff265A,prod2644);
          real sum2669#1 = RAdd(mult2667,mult2668);
          real sum266A#1 = RAdd(basisEval265B,sum2669);
          real sum266B#1 = RAdd(mult265E,sum266A);
          real intermediate266C#1 = sum266B;
          real intermediate266D#1 = sum2653;
          real sum266E#1 = RAdd(mult2656,mult264E);
          real intermediate266F#1 = sum266E;
          real mult2670#1 = RMul(coeff265D,prod264A);
          real sum2671#1 = RAdd(basisEval265C,mult2668);
          real sum2672#1 = RAdd(mult2670,sum2671);
          real sum2673#1 = RAdd(mult265E,sum2672);
          real intermediate2674#1 = sum2673;
          tensor[10] intermediateCons2675#1 = <tensor[10]>[intermediate2654,intermediate2658,basisEval2659,basisEval2659,basisEval2659,mult264E,mult264F,basisEval265B,basisEval265C,intermediate2663];
          tensor[10] intermediateCons2676#1 = <tensor[10]>[intermediate2664,basisEval2659,intermediate2666,basisEval2659,mult264E,basisEval2659,mult2650,basisEval265B,intermediate266C,mult2668];
          tensor[10] intermediateCons2677#1 = <tensor[10]>[intermediate266D,basisEval2659,basisEval2659,intermediate266F,mult264F,mult2650,basisEval2659,intermediate2674,basisEval265C,mult2668];
          tensor[10] projParam26B7#1 = intermediateCons2675;
          real vdot26B8#1 = VDot<10>(femDofs253C,projParam26B7);
          tensor[10] projParam26B9#1 = intermediateCons2676;
          real vdot26BA#1 = VDot<10>(femDofs253C,projParam26B9);
          tensor[10] projParam26BB#1 = intermediateCons2677;
          real vdot26BC#1 = VDot<10>(femDofs253C,projParam26BB);
          int ilit26C6#1 = 4;
          int mulRes26C7#4 = IMul(intPos24F4,ilit26C6);
          int addRes26C9#1 = mulRes26C7;
          int idx26CA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26C9);
          int ilit26CB#1 = 1;
          int addRes26CC#1 = IAdd(mulRes26C7,ilit26CB);
          int idx26CD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CC);
          int ilit26CE#1 = 2;
          int addRes26CF#1 = IAdd(mulRes26C7,ilit26CE);
          int idx26D0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CF);
          int ilit26D1#1 = 3;
          int addRes26D2#1 = IAdd(mulRes26C7,ilit26D1);
          int idx26D3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26D2);
          int ilit26E7#4 = 3;
          int idx26E8#1 = idx26CA;
          int mulRes26E9#3 = IMul(ilit26E7,idx26E8);
          int addRes26EA#1 = mulRes26E9;
          int ilit26EB#4 = 1;
          int addRes26EC#1 = IAdd(ilit26EB,mulRes26E9);
          int ilit26ED#4 = 2;
          int addRes26EE#1 = IAdd(ilit26ED,mulRes26E9);
          real dof_load26EF#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EA);
          real dof_load26F0#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EC);
          real dof_load26F1#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EE);
          int idx26F3#1 = idx26CD;
          int mulRes26F4#3 = IMul(ilit26E7,idx26F3);
          int addRes26F5#1 = mulRes26F4;
          int addRes26F6#1 = IAdd(ilit26EB,mulRes26F4);
          int addRes26F7#1 = IAdd(ilit26ED,mulRes26F4);
          real dof_load26F8#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F5);
          real dof_load26F9#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F6);
          real dof_load26FA#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F7);
          int idx26FC#1 = idx26D0;
          int mulRes26FD#3 = IMul(ilit26E7,idx26FC);
          int addRes26FE#1 = mulRes26FD;
          int addRes26FF#1 = IAdd(ilit26EB,mulRes26FD);
          int addRes2700#1 = IAdd(ilit26ED,mulRes26FD);
          real dof_load2701#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FE);
          real dof_load2702#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FF);
          real dof_load2703#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2700);
          int idx2705#1 = idx26D3;
          int mulRes2706#3 = IMul(ilit26E7,idx2705);
          int addRes2707#1 = mulRes2706;
          int addRes2708#1 = IAdd(ilit26EB,mulRes2706);
          int addRes2709#1 = IAdd(ilit26ED,mulRes2706);
          real dof_load270A#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2707);
          real dof_load270B#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2708);
          real dof_load270C#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2709);
          real coeff273D#1 = -0.1e1;
          real one273E#4 = 0.1e1;
          real prod273F#1 = RMul(one273E,one273E);
          real prod2740#2 = RMul(one273E,prod273F);
          real basisEval2741#6 = RMul(coeff273D,prod2740);
          real basisEval2742#6 = RMul(one273E,prod2740);
          real basisEval2743#12 = 0.e0;
          real r2758#3 = dof_load26EF;
          real r2759#3 = basisEval2741;
          real r275A#1 = RMul(r2758,r2759);
          real r275B#3 = dof_load26F8;
          real r275C#3 = basisEval2742;
          real r275D#1 = RMul(r275B,r275C);
          real r275E#3 = dof_load2701;
          real r275F#3 = basisEval2743;
          real r2760#1 = RMul(r275E,r275F);
          real r2761#3 = dof_load270A;
          real r2762#3 = basisEval2743;
          real r2763#1 = RMul(r2761,r2762);
          real r2764#1 = RAdd(r275A,r275D);
          real r2765#1 = RAdd(r2764,r2760);
          real r2766#2 = RAdd(r2765,r2763);
          real r2767#3 = basisEval2741;
          real r2768#1 = RMul(r2758,r2767);
          real r2769#3 = basisEval2743;
          real r276A#1 = RMul(r275B,r2769);
          real r276B#3 = basisEval2742;
          real r276C#1 = RMul(r275E,r276B);
          real r276D#3 = basisEval2743;
          real r276E#1 = RMul(r2761,r276D);
          real r276F#1 = RAdd(r2768,r276A);
          real r2770#1 = RAdd(r276F,r276C);
          real r2771#2 = RAdd(r2770,r276E);
          real r2772#3 = basisEval2741;
          real r2773#1 = RMul(r2758,r2772);
          real r2774#3 = basisEval2743;
          real r2775#1 = RMul(r275B,r2774);
          real r2776#3 = basisEval2743;
          real r2777#1 = RMul(r275E,r2776);
          real r2778#3 = basisEval2742;
          real r2779#1 = RMul(r2761,r2778);
          real r277A#1 = RAdd(r2773,r2775);
          real r277B#1 = RAdd(r277A,r2777);
          real r277C#2 = RAdd(r277B,r2779);
          real r277E#3 = dof_load26F0;
          real r277F#1 = RMul(r277E,r2759);
          real r2780#3 = dof_load26F9;
          real r2781#1 = RMul(r2780,r275C);
          real r2782#3 = dof_load2702;
          real r2783#1 = RMul(r2782,r275F);
          real r2784#3 = dof_load270B;
          real r2785#1 = RMul(r2784,r2762);
          real r2786#1 = RAdd(r277F,r2781);
          real r2787#1 = RAdd(r2786,r2783);
          real r2788#2 = RAdd(r2787,r2785);
          real r2789#1 = RMul(r277E,r2767);
          real r278A#1 = RMul(r2780,r2769);
          real r278B#1 = RMul(r2782,r276B);
          real r278C#1 = RMul(r2784,r276D);
          real r278D#1 = RAdd(r2789,r278A);
          real r278E#1 = RAdd(r278D,r278B);
          real r278F#2 = RAdd(r278E,r278C);
          real r2790#1 = RMul(r277E,r2772);
          real r2791#1 = RMul(r2780,r2774);
          real r2792#1 = RMul(r2782,r2776);
          real r2793#1 = RMul(r2784,r2778);
          real r2794#1 = RAdd(r2790,r2791);
          real r2795#1 = RAdd(r2794,r2792);
          real r2796#2 = RAdd(r2795,r2793);
          real r2798#3 = dof_load26F1;
          real r2799#1 = RMul(r2798,r2759);
          real r279A#3 = dof_load26FA;
          real r279B#1 = RMul(r279A,r275C);
          real r279C#3 = dof_load2703;
          real r279D#1 = RMul(r279C,r275F);
          real r279E#3 = dof_load270C;
          real r279F#1 = RMul(r279E,r2762);
          real r27A0#1 = RAdd(r2799,r279B);
          real r27A1#1 = RAdd(r27A0,r279D);
          real r27A2#2 = RAdd(r27A1,r279F);
          real r27A3#1 = RMul(r2798,r2767);
          real r27A4#1 = RMul(r279A,r2769);
          real r27A5#1 = RMul(r279C,r276B);
          real r27A6#1 = RMul(r279E,r276D);
          real r27A7#1 = RAdd(r27A3,r27A4);
          real r27A8#1 = RAdd(r27A7,r27A5);
          real r27A9#2 = RAdd(r27A8,r27A6);
          real r27AA#1 = RMul(r2798,r2772);
          real r27AB#1 = RMul(r279A,r2774);
          real r27AC#1 = RMul(r279C,r2776);
          real r27AD#1 = RMul(r279E,r2778);
          real r27AE#1 = RAdd(r27AA,r27AB);
          real r27AF#1 = RAdd(r27AE,r27AC);
          real r27B0#2 = RAdd(r27AF,r27AD);
          real realLit280F#9 = 0.e0;
          real r2810#3 = r2766;
          real r2811#3 = RMul(realLit280F,r2810);
          real r2812#3 = r2788;
          real r2813#3 = RMul(realLit280F,r2812);
          real r2814#3 = r27A2;
          real r2815#5 = RMul(realLit280F,r2814);
          real r2816#3 = RAdd(r2811,r2813);
          real r2817#3 = RAdd(r2816,r2815);
          real r2818#3 = r2771;
          real r2819#3 = RMul(realLit280F,r2818);
          real r281A#3 = r278F;
          real r281B#3 = RMul(realLit280F,r281A);
          real r281C#3 = r27A9;
          real r281D#5 = RMul(realLit280F,r281C);
          real r281E#3 = RAdd(r2819,r281B);
          real r281F#3 = RAdd(r281E,r281D);
          real r2820#3 = r277C;
          real r2821#3 = RMul(realLit280F,r2820);
          real r2822#3 = r2796;
          real r2823#3 = RMul(realLit280F,r2822);
          real r2824#3 = r27B0;
          real r2825#5 = RMul(realLit280F,r2824);
          real r2826#3 = RAdd(r2821,r2823);
          real r2827#3 = RAdd(r2826,r2825);
          real realLit2829#9 = -0.1e1;
          real r282A#1 = RMul(realLit2829,r2814);
          real r282B#1 = RAdd(r2816,r282A);
          real r282C#1 = RMul(realLit2829,r281C);
          real r282D#1 = RAdd(r281E,r282C);
          real r282E#1 = RMul(realLit2829,r2824);
          real r282F#1 = RAdd(r2826,r282E);
          real realLit2831#9 = 0.1e1;
          real r2832#1 = RMul(realLit2831,r2812);
          real r2833#1 = RAdd(r2811,r2832);
          real r2834#1 = RAdd(r2833,r2815);
          real r2835#1 = RMul(realLit2831,r281A);
          real r2836#1 = RAdd(r2819,r2835);
          real r2837#1 = RAdd(r2836,r281D);
          real r2838#1 = RMul(realLit2831,r2822);
          real r2839#1 = RAdd(r2821,r2838);
          real r283A#1 = RAdd(r2839,r2825);
          real r283D#1 = RMul(realLit2831,r2814);
          real r283E#1 = RAdd(r2816,r283D);
          real r283F#1 = RMul(realLit2831,r281C);
          real r2840#1 = RAdd(r281E,r283F);
          real r2841#1 = RMul(realLit2831,r2824);
          real r2842#1 = RAdd(r2826,r2841);
          real r2844#1 = RMul(realLit2829,r2810);
          real r2845#1 = RAdd(r2844,r2813);
          real r2846#1 = RAdd(r2845,r2815);
          real r2847#1 = RMul(realLit2829,r2818);
          real r2848#1 = RAdd(r2847,r281B);
          real r2849#1 = RAdd(r2848,r281D);
          real r284A#1 = RMul(realLit2829,r2820);
          real r284B#1 = RAdd(r284A,r2823);
          real r284C#1 = RAdd(r284B,r2825);
          real r284F#1 = RMul(realLit2829,r2812);
          real r2850#1 = RAdd(r2811,r284F);
          real r2851#1 = RAdd(r2850,r2815);
          real r2852#1 = RMul(realLit2829,r281A);
          real r2853#1 = RAdd(r2819,r2852);
          real r2854#1 = RAdd(r2853,r281D);
          real r2855#1 = RMul(realLit2829,r2822);
          real r2856#1 = RAdd(r2821,r2855);
          real r2857#1 = RAdd(r2856,r2825);
          real r2859#1 = RMul(realLit2831,r2810);
          real r285A#1 = RAdd(r2859,r2813);
          real r285B#1 = RAdd(r285A,r2815);
          real r285C#1 = RMul(realLit2831,r2818);
          real r285D#1 = RAdd(r285C,r281B);
          real r285E#1 = RAdd(r285D,r281D);
          real r285F#1 = RMul(realLit2831,r2820);
          real r2860#1 = RAdd(r285F,r2823);
          real r2861#1 = RAdd(r2860,r2825);
          real r28BC#9 = r2766;
          real r28BD#3 = r2817;
          real r28BE#1 = RMul(r28BC,r28BD);
          real r28BF#9 = r2788;
          real r28C0#3 = r283E;
          real r28C1#1 = RMul(r28BF,r28C0);
          real r28C2#9 = r27A2;
          real r28C3#3 = r2851;
          real r28C4#1 = RMul(r28C2,r28C3);
          real r28C5#1 = RAdd(r28BE,r28C1);
          real r28C6#1 = RAdd(r28C5,r28C4);
          real r28C7#3 = r281F;
          real r28C8#1 = RMul(r28BC,r28C7);
          real r28C9#3 = r2840;
          real r28CA#1 = RMul(r28BF,r28C9);
          real r28CB#3 = r2854;
          real r28CC#1 = RMul(r28C2,r28CB);
          real r28CD#1 = RAdd(r28C8,r28CA);
          real r28CE#1 = RAdd(r28CD,r28CC);
          real r28CF#3 = r2827;
          real r28D0#1 = RMul(r28BC,r28CF);
          real r28D1#3 = r2842;
          real r28D2#1 = RMul(r28BF,r28D1);
          real r28D3#3 = r2857;
          real r28D4#1 = RMul(r28C2,r28D3);
          real r28D5#1 = RAdd(r28D0,r28D2);
          real r28D6#1 = RAdd(r28D5,r28D4);
          real r28D8#3 = r282B;
          real r28D9#1 = RMul(r28BC,r28D8);
          real r28DA#3 = r2817;
          real r28DB#1 = RMul(r28BF,r28DA);
          real r28DC#3 = r285B;
          real r28DD#1 = RMul(r28C2,r28DC);
          real r28DE#1 = RAdd(r28D9,r28DB);
          real r28DF#1 = RAdd(r28DE,r28DD);
          real r28E0#3 = r282D;
          real r28E1#1 = RMul(r28BC,r28E0);
          real r28E2#3 = r281F;
          real r28E3#1 = RMul(r28BF,r28E2);
          real r28E4#3 = r285E;
          real r28E5#1 = RMul(r28C2,r28E4);
          real r28E6#1 = RAdd(r28E1,r28E3);
          real r28E7#1 = RAdd(r28E6,r28E5);
          real r28E8#3 = r282F;
          real r28E9#1 = RMul(r28BC,r28E8);
          real r28EA#3 = r2827;
          real r28EB#1 = RMul(r28BF,r28EA);
          real r28EC#3 = r2861;
          real r28ED#1 = RMul(r28C2,r28EC);
          real r28EE#1 = RAdd(r28E9,r28EB);
          real r28EF#1 = RAdd(r28EE,r28ED);
          real r28F1#3 = r2834;
          real r28F2#1 = RMul(r28BC,r28F1);
          real r28F3#3 = r2846;
          real r28F4#1 = RMul(r28BF,r28F3);
          real r28F5#3 = r2817;
          real r28F6#1 = RMul(r28C2,r28F5);
          real r28F7#1 = RAdd(r28F2,r28F4);
          real r28F8#1 = RAdd(r28F7,r28F6);
          real r28F9#3 = r2837;
          real r28FA#1 = RMul(r28BC,r28F9);
          real r28FB#3 = r2849;
          real r28FC#1 = RMul(r28BF,r28FB);
          real r28FD#3 = r281F;
          real r28FE#1 = RMul(r28C2,r28FD);
          real r28FF#1 = RAdd(r28FA,r28FC);
          real r2900#1 = RAdd(r28FF,r28FE);
          real r2901#3 = r283A;
          real r2902#1 = RMul(r28BC,r2901);
          real r2903#3 = r284C;
          real r2904#1 = RMul(r28BF,r2903);
          real r2905#3 = r2827;
          real r2906#1 = RMul(r28C2,r2905);
          real r2907#1 = RAdd(r2902,r2904);
          real r2908#1 = RAdd(r2907,r2906);
          real r290B#9 = r2771;
          real r290C#1 = RMul(r290B,r28BD);
          real r290D#9 = r278F;
          real r290E#1 = RMul(r290D,r28C0);
          real r290F#9 = r27A9;
          real r2910#1 = RMul(r290F,r28C3);
          real r2911#1 = RAdd(r290C,r290E);
          real r2912#1 = RAdd(r2911,r2910);
          real r2913#1 = RMul(r290B,r28C7);
          real r2914#1 = RMul(r290D,r28C9);
          real r2915#1 = RMul(r290F,r28CB);
          real r2916#1 = RAdd(r2913,r2914);
          real r2917#1 = RAdd(r2916,r2915);
          real r2918#1 = RMul(r290B,r28CF);
          real r2919#1 = RMul(r290D,r28D1);
          real r291A#1 = RMul(r290F,r28D3);
          real r291B#1 = RAdd(r2918,r2919);
          real r291C#1 = RAdd(r291B,r291A);
          real r291E#1 = RMul(r290B,r28D8);
          real r291F#1 = RMul(r290D,r28DA);
          real r2920#1 = RMul(r290F,r28DC);
          real r2921#1 = RAdd(r291E,r291F);
          real r2922#1 = RAdd(r2921,r2920);
          real r2923#1 = RMul(r290B,r28E0);
          real r2924#1 = RMul(r290D,r28E2);
          real r2925#1 = RMul(r290F,r28E4);
          real r2926#1 = RAdd(r2923,r2924);
          real r2927#1 = RAdd(r2926,r2925);
          real r2928#1 = RMul(r290B,r28E8);
          real r2929#1 = RMul(r290D,r28EA);
          real r292A#1 = RMul(r290F,r28EC);
          real r292B#1 = RAdd(r2928,r2929);
          real r292C#1 = RAdd(r292B,r292A);
          real r292E#1 = RMul(r290B,r28F1);
          real r292F#1 = RMul(r290D,r28F3);
          real r2930#1 = RMul(r290F,r28F5);
          real r2931#1 = RAdd(r292E,r292F);
          real r2932#1 = RAdd(r2931,r2930);
          real r2933#1 = RMul(r290B,r28F9);
          real r2934#1 = RMul(r290D,r28FB);
          real r2935#1 = RMul(r290F,r28FD);
          real r2936#1 = RAdd(r2933,r2934);
          real r2937#1 = RAdd(r2936,r2935);
          real r2938#1 = RMul(r290B,r2901);
          real r2939#1 = RMul(r290D,r2903);
          real r293A#1 = RMul(r290F,r2905);
          real r293B#1 = RAdd(r2938,r2939);
          real r293C#1 = RAdd(r293B,r293A);
          real r293F#9 = r277C;
          real r2940#1 = RMul(r293F,r28BD);
          real r2941#9 = r2796;
          real r2942#1 = RMul(r2941,r28C0);
          real r2943#9 = r27B0;
          real r2944#1 = RMul(r2943,r28C3);
          real r2945#1 = RAdd(r2940,r2942);
          real r2946#1 = RAdd(r2945,r2944);
          real r2947#1 = RMul(r293F,r28C7);
          real r2948#1 = RMul(r2941,r28C9);
          real r2949#1 = RMul(r2943,r28CB);
          real r294A#1 = RAdd(r2947,r2948);
          real r294B#1 = RAdd(r294A,r2949);
          real r294C#1 = RMul(r293F,r28CF);
          real r294D#1 = RMul(r2941,r28D1);
          real r294E#1 = RMul(r2943,r28D3);
          real r294F#1 = RAdd(r294C,r294D);
          real r2950#1 = RAdd(r294F,r294E);
          real r2952#1 = RMul(r293F,r28D8);
          real r2953#1 = RMul(r2941,r28DA);
          real r2954#1 = RMul(r2943,r28DC);
          real r2955#1 = RAdd(r2952,r2953);
          real r2956#1 = RAdd(r2955,r2954);
          real r2957#1 = RMul(r293F,r28E0);
          real r2958#1 = RMul(r2941,r28E2);
          real r2959#1 = RMul(r2943,r28E4);
          real r295A#1 = RAdd(r2957,r2958);
          real r295B#1 = RAdd(r295A,r2959);
          real r295C#1 = RMul(r293F,r28E8);
          real r295D#1 = RMul(r2941,r28EA);
          real r295E#1 = RMul(r2943,r28EC);
          real r295F#1 = RAdd(r295C,r295D);
          real r2960#1 = RAdd(r295F,r295E);
          real r2962#1 = RMul(r293F,r28F1);
          real r2963#1 = RMul(r2941,r28F3);
          real r2964#1 = RMul(r2943,r28F5);
          real r2965#1 = RAdd(r2962,r2963);
          real r2966#1 = RAdd(r2965,r2964);
          real r2967#1 = RMul(r293F,r28F9);
          real r2968#1 = RMul(r2941,r28FB);
          real r2969#1 = RMul(r2943,r28FD);
          real r296A#1 = RAdd(r2967,r2968);
          real r296B#1 = RAdd(r296A,r2969);
          real r296C#1 = RMul(r293F,r2901);
          real r296D#1 = RMul(r2941,r2903);
          real r296E#1 = RMul(r2943,r2905);
          real r296F#1 = RAdd(r296C,r296D);
          real r2970#1 = RAdd(r296F,r296E);
          real r2A2D#1 = dof_load26EF;
          real r2A2E#3 = basisEval2741;
          real r2A2F#1 = RMul(r2A2D,r2A2E);
          real r2A30#1 = dof_load26F8;
          real r2A31#3 = basisEval2742;
          real r2A32#1 = RMul(r2A30,r2A31);
          real r2A33#1 = dof_load2701;
          real r2A34#3 = basisEval2743;
          real r2A35#1 = RMul(r2A33,r2A34);
          real r2A36#1 = dof_load270A;
          real r2A37#3 = basisEval2743;
          real r2A38#1 = RMul(r2A36,r2A37);
          real r2A39#1 = RAdd(r2A2F,r2A32);
          real r2A3A#1 = RAdd(r2A39,r2A35);
          real r2A3B#1 = RAdd(r2A3A,r2A38);
          real r2A3C#1 = dof_load26F0;
          real r2A3D#1 = RMul(r2A3C,r2A2E);
          real r2A3E#1 = dof_load26F9;
          real r2A3F#1 = RMul(r2A3E,r2A31);
          real r2A40#1 = dof_load2702;
          real r2A41#1 = RMul(r2A40,r2A34);
          real r2A42#1 = dof_load270B;
          real r2A43#1 = RMul(r2A42,r2A37);
          real r2A44#1 = RAdd(r2A3D,r2A3F);
          real r2A45#1 = RAdd(r2A44,r2A41);
          real r2A46#1 = RAdd(r2A45,r2A43);
          real r2A47#1 = dof_load26F1;
          real r2A48#1 = RMul(r2A47,r2A2E);
          real r2A49#1 = dof_load26FA;
          real r2A4A#1 = RMul(r2A49,r2A31);
          real r2A4B#1 = dof_load2703;
          real r2A4C#1 = RMul(r2A4B,r2A34);
          real r2A4D#1 = dof_load270C;
          real r2A4E#1 = RMul(r2A4D,r2A37);
          real r2A4F#1 = RAdd(r2A48,r2A4A);
          real r2A50#1 = RAdd(r2A4F,r2A4C);
          real r2A51#1 = RAdd(r2A50,r2A4E);
          tensor[3] probe_l_292A2C#1 = <tensor[3]>[r2A3B,r2A46,r2A51];
          real r2A7A#1 = dof_load26EF;
          real r2A7B#3 = basisEval2741;
          real r2A7C#1 = RMul(r2A7A,r2A7B);
          real r2A7D#1 = dof_load26F8;
          real r2A7E#3 = basisEval2743;
          real r2A7F#1 = RMul(r2A7D,r2A7E);
          real r2A80#1 = dof_load2701;
          real r2A81#3 = basisEval2742;
          real r2A82#1 = RMul(r2A80,r2A81);
          real r2A83#1 = dof_load270A;
          real r2A84#3 = basisEval2743;
          real r2A85#1 = RMul(r2A83,r2A84);
          real r2A86#1 = RAdd(r2A7C,r2A7F);
          real r2A87#1 = RAdd(r2A86,r2A82);
          real r2A88#1 = RAdd(r2A87,r2A85);
          real r2A89#1 = dof_load26F0;
          real r2A8A#1 = RMul(r2A89,r2A7B);
          real r2A8B#1 = dof_load26F9;
          real r2A8C#1 = RMul(r2A8B,r2A7E);
          real r2A8D#1 = dof_load2702;
          real r2A8E#1 = RMul(r2A8D,r2A81);
          real r2A8F#1 = dof_load270B;
          real r2A90#1 = RMul(r2A8F,r2A84);
          real r2A91#1 = RAdd(r2A8A,r2A8C);
          real r2A92#1 = RAdd(r2A91,r2A8E);
          real r2A93#1 = RAdd(r2A92,r2A90);
          real r2A94#1 = dof_load26F1;
          real r2A95#1 = RMul(r2A94,r2A7B);
          real r2A96#1 = dof_load26FA;
          real r2A97#1 = RMul(r2A96,r2A7E);
          real r2A98#1 = dof_load2703;
          real r2A99#1 = RMul(r2A98,r2A81);
          real r2A9A#1 = dof_load270C;
          real r2A9B#1 = RMul(r2A9A,r2A84);
          real r2A9C#1 = RAdd(r2A95,r2A97);
          real r2A9D#1 = RAdd(r2A9C,r2A99);
          real r2A9E#1 = RAdd(r2A9D,r2A9B);
          tensor[3] probe_l_302A79#3 = <tensor[3]>[r2A88,r2A93,r2A9E];
          real r2AC7#1 = dof_load26EF;
          real r2AC8#3 = basisEval2741;
          real r2AC9#1 = RMul(r2AC7,r2AC8);
          real r2ACA#1 = dof_load26F8;
          real r2ACB#3 = basisEval2743;
          real r2ACC#1 = RMul(r2ACA,r2ACB);
          real r2ACD#1 = dof_load2701;
          real r2ACE#3 = basisEval2743;
          real r2ACF#1 = RMul(r2ACD,r2ACE);
          real r2AD0#1 = dof_load270A;
          real r2AD1#3 = basisEval2742;
          real r2AD2#1 = RMul(r2AD0,r2AD1);
          real r2AD3#1 = RAdd(r2AC9,r2ACC);
          real r2AD4#1 = RAdd(r2AD3,r2ACF);
          real r2AD5#1 = RAdd(r2AD4,r2AD2);
          real r2AD6#1 = dof_load26F0;
          real r2AD7#1 = RMul(r2AD6,r2AC8);
          real r2AD8#1 = dof_load26F9;
          real r2AD9#1 = RMul(r2AD8,r2ACB);
          real r2ADA#1 = dof_load2702;
          real r2ADB#1 = RMul(r2ADA,r2ACE);
          real r2ADC#1 = dof_load270B;
          real r2ADD#1 = RMul(r2ADC,r2AD1);
          real r2ADE#1 = RAdd(r2AD7,r2AD9);
          real r2ADF#1 = RAdd(r2ADE,r2ADB);
          real r2AE0#1 = RAdd(r2ADF,r2ADD);
          real r2AE1#1 = dof_load26F1;
          real r2AE2#1 = RMul(r2AE1,r2AC8);
          real r2AE3#1 = dof_load26FA;
          real r2AE4#1 = RMul(r2AE3,r2ACB);
          real r2AE5#1 = dof_load2703;
          real r2AE6#1 = RMul(r2AE5,r2ACE);
          real r2AE7#1 = dof_load270C;
          real r2AE8#1 = RMul(r2AE7,r2AD1);
          real r2AE9#1 = RAdd(r2AE2,r2AE4);
          real r2AEA#1 = RAdd(r2AE9,r2AE6);
          real r2AEB#1 = RAdd(r2AEA,r2AE8);
          real realLit2B14#3 = 0.e0;
          real r2B15#3 = r2AD5;
          real r2B16#3 = RMul(realLit2B14,r2B15);
          real r2B17#3 = r2AE0;
          real r2B18#3 = RMul(realLit2B14,r2B17);
          real r2B19#3 = r2AEB;
          real r2B1A#5 = RMul(realLit2B14,r2B19);
          real r2B1B#3 = RAdd(r2B16,r2B18);
          real r2B1C#3 = RAdd(r2B1B,r2B1A);
          real realLit2B1D#3 = 0.1e1;
          real r2B1E#1 = RMul(realLit2B1D,r2B19);
          real r2B1F#1 = RAdd(r2B1B,r2B1E);
          real realLit2B20#3 = -0.1e1;
          real r2B21#1 = RMul(realLit2B20,r2B17);
          real r2B22#1 = RAdd(r2B16,r2B21);
          real r2B23#1 = RAdd(r2B22,r2B1A);
          tensor[3] tensor2B24#1 = <tensor[3]>[r2B1C,r2B1F,r2B23];
          real r2B25#1 = RMul(realLit2B20,r2B19);
          real r2B26#1 = RAdd(r2B1B,r2B25);
          real r2B27#1 = RMul(realLit2B1D,r2B15);
          real r2B28#1 = RAdd(r2B27,r2B18);
          real r2B29#1 = RAdd(r2B28,r2B1A);
          tensor[3] tensor2B2A#1 = <tensor[3]>[r2B26,r2B1C,r2B29];
          real r2B2B#1 = RMul(realLit2B1D,r2B17);
          real r2B2C#1 = RAdd(r2B16,r2B2B);
          real r2B2D#1 = RAdd(r2B2C,r2B1A);
          real r2B2E#1 = RMul(realLit2B20,r2B15);
          real r2B2F#1 = RAdd(r2B2E,r2B18);
          real r2B30#1 = RAdd(r2B2F,r2B1A);
          tensor[3] tensor2B31#1 = <tensor[3]>[r2B2D,r2B30,r2B1C];
          tensor[3] projParam2B53#1 = tensor2B24;
          real vdot2B54#1 = VDot<3>(probe_l_302A79,projParam2B53);
          tensor[3] projParam2B55#1 = tensor2B2A;
          real vdot2B56#1 = VDot<3>(probe_l_302A79,projParam2B55);
          tensor[3] projParam2B57#1 = tensor2B31;
          real vdot2B58#1 = VDot<3>(probe_l_302A79,projParam2B57);
          tensor[3] op1_e3_l_332B52#1 = <tensor[3]>[vdot2B54,vdot2B56,vdot2B58];
          real op1_e3_l_342B61#1 = VDot<3>(probe_l_292A2C,op1_e3_l_332B52);
          real realLit2B65#27 = 0.e0;
          real r2B66#1 = r28C6;
          real r2B67#2 = RMul(realLit2B65,r2B66);
          real r2B68#2 = r28CE;
          real r2B69#1 = RMul(realLit2B65,r2B68);
          real r2B6A#2 = r28D6;
          real r2B6B#2 = RMul(realLit2B65,r2B6A);
          real r2B6C#2 = r2912;
          real r2B6D#2 = RMul(realLit2B65,r2B6C);
          real r2B6E#1 = r2917;
          real r2B6F#3 = RMul(realLit2B65,r2B6E);
          real realLit2B70#9 = 0.1e1;
          real r2B71#2 = r291C;
          real r2B72#1 = RMul(realLit2B70,r2B71);
          real r2B73#2 = r2946;
          real r2B74#2 = RMul(realLit2B65,r2B73);
          real realLit2B75#9 = -0.1e1;
          real r2B76#2 = r294B;
          real r2B77#1 = RMul(realLit2B75,r2B76);
          real r2B78#1 = r2950;
          real r2B79#3 = RMul(realLit2B65,r2B78);
          real r2B7A#2 = RAdd(r2B67,r2B69);
          real r2B7B#1 = RAdd(r2B7A,r2B6B);
          real r2B7C#1 = RAdd(r2B7B,r2B6D);
          real r2B7D#1 = RAdd(r2B7C,r2B6F);
          real r2B7E#1 = RAdd(r2B7D,r2B72);
          real r2B7F#1 = RAdd(r2B7E,r2B74);
          real r2B80#1 = RAdd(r2B7F,r2B77);
          real r2B81#1 = RAdd(r2B80,r2B79);
          real r2B82#1 = r28DF;
          real r2B83#2 = RMul(realLit2B65,r2B82);
          real r2B84#2 = r28E7;
          real r2B85#1 = RMul(realLit2B65,r2B84);
          real r2B86#2 = r28EF;
          real r2B87#2 = RMul(realLit2B65,r2B86);
          real r2B88#2 = r2922;
          real r2B89#2 = RMul(realLit2B65,r2B88);
          real r2B8A#1 = r2927;
          real r2B8B#3 = RMul(realLit2B65,r2B8A);
          real r2B8C#2 = r292C;
          real r2B8D#1 = RMul(realLit2B70,r2B8C);
          real r2B8E#2 = r2956;
          real r2B8F#2 = RMul(realLit2B65,r2B8E);
          real r2B90#2 = r295B;
          real r2B91#1 = RMul(realLit2B75,r2B90);
          real r2B92#1 = r2960;
          real r2B93#3 = RMul(realLit2B65,r2B92);
          real r2B94#2 = RAdd(r2B83,r2B85);
          real r2B95#1 = RAdd(r2B94,r2B87);
          real r2B96#1 = RAdd(r2B95,r2B89);
          real r2B97#1 = RAdd(r2B96,r2B8B);
          real r2B98#1 = RAdd(r2B97,r2B8D);
          real r2B99#1 = RAdd(r2B98,r2B8F);
          real r2B9A#1 = RAdd(r2B99,r2B91);
          real r2B9B#1 = RAdd(r2B9A,r2B93);
          real r2B9C#1 = r28F8;
          real r2B9D#2 = RMul(realLit2B65,r2B9C);
          real r2B9E#2 = r2900;
          real r2B9F#1 = RMul(realLit2B65,r2B9E);
          real r2BA0#2 = r2908;
          real r2BA1#2 = RMul(realLit2B65,r2BA0);
          real r2BA2#2 = r2932;
          real r2BA3#2 = RMul(realLit2B65,r2BA2);
          real r2BA4#1 = r2937;
          real r2BA5#3 = RMul(realLit2B65,r2BA4);
          real r2BA6#2 = r293C;
          real r2BA7#1 = RMul(realLit2B70,r2BA6);
          real r2BA8#2 = r2966;
          real r2BA9#2 = RMul(realLit2B65,r2BA8);
          real r2BAA#2 = r296B;
          real r2BAB#1 = RMul(realLit2B75,r2BAA);
          real r2BAC#1 = r2970;
          real r2BAD#3 = RMul(realLit2B65,r2BAC);
          real r2BAE#2 = RAdd(r2B9D,r2B9F);
          real r2BAF#1 = RAdd(r2BAE,r2BA1);
          real r2BB0#1 = RAdd(r2BAF,r2BA3);
          real r2BB1#1 = RAdd(r2BB0,r2BA5);
          real r2BB2#1 = RAdd(r2BB1,r2BA7);
          real r2BB3#1 = RAdd(r2BB2,r2BA9);
          real r2BB4#1 = RAdd(r2BB3,r2BAB);
          real r2BB5#1 = RAdd(r2BB4,r2BAD);
          real r2BB7#1 = RMul(realLit2B75,r2B6A);
          real r2BB8#2 = RMul(realLit2B65,r2B71);
          real r2BB9#1 = RMul(realLit2B70,r2B73);
          real r2BBA#2 = RMul(realLit2B65,r2B76);
          real r2BBB#1 = RAdd(r2B7A,r2BB7);
          real r2BBC#1 = RAdd(r2BBB,r2B6D);
          real r2BBD#1 = RAdd(r2BBC,r2B6F);
          real r2BBE#1 = RAdd(r2BBD,r2BB8);
          real r2BBF#1 = RAdd(r2BBE,r2BB9);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2B79);
          real r2BC2#1 = RMul(realLit2B75,r2B86);
          real r2BC3#2 = RMul(realLit2B65,r2B8C);
          real r2BC4#1 = RMul(realLit2B70,r2B8E);
          real r2BC5#2 = RMul(realLit2B65,r2B90);
          real r2BC6#1 = RAdd(r2B94,r2BC2);
          real r2BC7#1 = RAdd(r2BC6,r2B89);
          real r2BC8#1 = RAdd(r2BC7,r2B8B);
          real r2BC9#1 = RAdd(r2BC8,r2BC3);
          real r2BCA#1 = RAdd(r2BC9,r2BC4);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2B93);
          real r2BCD#1 = RMul(realLit2B75,r2BA0);
          real r2BCE#2 = RMul(realLit2B65,r2BA6);
          real r2BCF#1 = RMul(realLit2B70,r2BA8);
          real r2BD0#2 = RMul(realLit2B65,r2BAA);
          real r2BD1#1 = RAdd(r2BAE,r2BCD);
          real r2BD2#1 = RAdd(r2BD1,r2BA3);
          real r2BD3#1 = RAdd(r2BD2,r2BA5);
          real r2BD4#1 = RAdd(r2BD3,r2BCE);
          real r2BD5#1 = RAdd(r2BD4,r2BCF);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BAD);
          real r2BD9#1 = RMul(realLit2B70,r2B68);
          real r2BDA#1 = RMul(realLit2B75,r2B6C);
          real r2BDB#1 = RAdd(r2B67,r2BD9);
          real r2BDC#1 = RAdd(r2BDB,r2B6B);
          real r2BDD#1 = RAdd(r2BDC,r2BDA);
          real r2BDE#1 = RAdd(r2BDD,r2B6F);
          real r2BDF#1 = RAdd(r2BDE,r2BB8);
          real r2BE0#1 = RAdd(r2BDF,r2B74);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B79);
          real r2BE3#1 = RMul(realLit2B70,r2B84);
          real r2BE4#1 = RMul(realLit2B75,r2B88);
          real r2BE5#1 = RAdd(r2B83,r2BE3);
          real r2BE6#1 = RAdd(r2BE5,r2B87);
          real r2BE7#1 = RAdd(r2BE6,r2BE4);
          real r2BE8#1 = RAdd(r2BE7,r2B8B);
          real r2BE9#1 = RAdd(r2BE8,r2BC3);
          real r2BEA#1 = RAdd(r2BE9,r2B8F);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B93);
          real r2BED#1 = RMul(realLit2B70,r2B9E);
          real r2BEE#1 = RMul(realLit2B75,r2BA2);
          real r2BEF#1 = RAdd(r2B9D,r2BED);
          real r2BF0#1 = RAdd(r2BEF,r2BA1);
          real r2BF1#1 = RAdd(r2BF0,r2BEE);
          real r2BF2#1 = RAdd(r2BF1,r2BA5);
          real r2BF3#1 = RAdd(r2BF2,r2BCE);
          real r2BF4#1 = RAdd(r2BF3,r2BA9);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAD);
          real realLit2C8E#1 = 0.2e1;
          real op1_e3_l_362C8D#9 = RMul(realLit2C8E,op1_e3_l_342B61);
          real r2C93#1 = r2B81;
          real r2C94#1 = RDiv(r2C93,op1_e3_l_362C8D);
          real r2C95#1 = r2B9B;
          real r2C96#1 = RDiv(r2C95,op1_e3_l_362C8D);
          real r2C97#1 = r2BB5;
          real r2C98#1 = RDiv(r2C97,op1_e3_l_362C8D);
          real r2C9A#1 = r2BC1;
          real r2C9B#1 = RDiv(r2C9A,op1_e3_l_362C8D);
          real r2C9C#1 = r2BCC;
          real r2C9D#1 = RDiv(r2C9C,op1_e3_l_362C8D);
          real r2C9E#1 = r2BD7;
          real r2C9F#1 = RDiv(r2C9E,op1_e3_l_362C8D);
          real r2CA1#1 = r2BE2;
          real r2CA2#1 = RDiv(r2CA1,op1_e3_l_362C8D);
          real r2CA3#1 = r2BEC;
          real r2CA4#1 = RDiv(r2CA3,op1_e3_l_362C8D);
          real r2CA5#1 = r2BF6;
          real r2CA6#1 = RDiv(r2CA5,op1_e3_l_362C8D);
          real r2CC0#3 = vdot26B8;
          real r2CC1#1 = r2C94;
          real r2CC2#1 = RMul(r2CC0,r2CC1);
          real r2CC3#3 = vdot26BA;
          real r2CC4#1 = r2C9B;
          real r2CC5#1 = RMul(r2CC3,r2CC4);
          real r2CC6#3 = vdot26BC;
          real r2CC7#1 = r2CA2;
          real r2CC8#1 = RMul(r2CC6,r2CC7);
          real r2CC9#1 = RAdd(r2CC2,r2CC5);
          real r2CCA#1 = RAdd(r2CC9,r2CC8);
          real r2CCB#1 = r2C96;
          real r2CCC#1 = RMul(r2CC0,r2CCB);
          real r2CCD#1 = r2C9D;
          real r2CCE#1 = RMul(r2CC3,r2CCD);
          real r2CCF#1 = r2CA4;
          real r2CD0#1 = RMul(r2CC6,r2CCF);
          real r2CD1#1 = RAdd(r2CCC,r2CCE);
          real r2CD2#1 = RAdd(r2CD1,r2CD0);
          real r2CD3#1 = r2C98;
          real r2CD4#1 = RMul(r2CC0,r2CD3);
          real r2CD5#1 = r2C9F;
          real r2CD6#1 = RMul(r2CC3,r2CD5);
          real r2CD7#1 = r2CA6;
          real r2CD8#1 = RMul(r2CC6,r2CD7);
          real r2CD9#1 = RAdd(r2CD4,r2CD6);
          real r2CDA#1 = RAdd(r2CD9,r2CD8);
          tensor[3] op1_e3_l_382CBF#1 = <tensor[3]>[r2CCA,r2CD2,r2CDA];
          tensor[3] op1_e3_l_542CF8#3 = VNeg<3>(op1_e3_l_382CBF);
          real op1_e3_l_562CFB#1 = VDot<3>(op1_e3_l_542CF8,op1_e3_l_542CF8);
          real op1_e3_l_572CFE#2 = Sqrt(op1_e3_l_562CFB);
          real op1_e3_l_582D01#1 = Abs<real>(op1_e3_l_232639);
          real op1_e3_l_592D04#1 = RMul(thick1D4D,op1_e3_l_572CFE);
          real op1_e3_l_602D07#1 = RDiv(op1_e3_l_582D01,op1_e3_l_592D04);
          real op1_e3_l_612D0A#1 = RSub(_t1D8B,op1_e3_l_602D07);
          real op1_e3_l_622D0D#2 = RMul(_t24F0,op1_e3_l_612D0A);
          real op1_e3_l_632D10#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real a2D13#1 = RMul(_t1D8B,op1_e3_l_632D10);
          bool _t2D16#1 = GT<real>(a2D13,_t1D84);
          if _t2D16 then goto ASSIGN2D1B else goto JOIN2DEA
        ASSIGN2D1B:  preds = [COND2D18]
          real op1_e3_l_642D19#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real op1_e3_l_652D1C#1 = RMul(_t1D8B,op1_e3_l_642D19);
          real _t2D1F#1 = RSub(_t1D8B,op1_e3_l_652D1C);
          real op1_e3_l_32D22#1 = VDot<3>(rayVec1D67,rayVec1D67);
          real op1_e3_l_42D25#1 = Sqrt(op1_e3_l_32D22);
          real op1_e3_l_52D28#1 = RMul(rayStep1D57,op1_e3_l_42D25);
          real _t2D2B#1 = RDiv(op1_e3_l_52D28,refStep1D55);
          real _t2D2E#1 = MathFn<pow>(_t2D1F,_t2D2B);
          real _t2D30#2 = 0.11e1;
          real _t2D32#1 = 0.7e0;
          real realLit2D35#1 = 0.1e1;
          real op1_e3_l_672D34#1 = RDiv(realLit2D35,op1_e3_l_572CFE);
          real op1_e3_l_682D39#1 = VDot<3>(op1_e3_l_542CF8,light1D63);
          real _t2D3C#1 = RMul(op1_e3_l_672D34,op1_e3_l_682D39);
          real shade2D3F#1 = Max<real>(_t1D84,_t2D3C);
          real _t2D41#1 = compositionl2636;
          real op1_e3_l_152D43#1 = RSub(rayN1D65,camNear1D51);
          real op1_e3_l_162D46#1 = RSub(camFar1D53,camNear1D51);
          real op1_e3_l_172D49#1 = RDiv(op1_e3_l_152D43,op1_e3_l_162D46);
          real op1_e3_l_182D4C#1 = RSub(_t2D32,_t2D30);
          real op1_e3_l_192D4F#1 = RMul(op1_e3_l_172D49,op1_e3_l_182D4C);
          real op1_e3_l_202D52#1 = RMul(phongKd1D5B,shade2D3F);
          real Mtransform2D55#1 = Transform<IMAGE1D<double[3]>>(I1D3D);
          real MxPos2D57#1 = RMul(Mtransform2D55,_t2D41);
          real Ttranslate2D5A#1 = Translate<IMAGE1D<double[3]>>(I1D3D);
          real imgPos2D5C#2 = RAdd(MxPos2D57,Ttranslate2D5A);
          real nd2D5F#2 = Floor<1>(imgPos2D5C);
          real f2D61#2 = RSub(imgPos2D5C,nd2D5F);
          int n2D64#1 = RealToInt<1>(nd2D5F);
          int idx2D66#5 = n2D64;
          bool isInside2D68#1 = IndexInside<IMAGE1D<double[3]>,2>(idx2D66,I1D3D);
          if isInside2D68 then goto ASSIGN3043 else goto ASSIGN3047
        ASSIGN3043:  preds = [COND2D6A]
          int addRes2D6D#1 = idx2D66;
          int stride2D6E#2 = 3;
          int offp2D6F#3 = IMul(stride2D6E,addRes2D6D);
          real v0_2D70#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D6F);
          int ilit2D71#3 = 1;
          int addRes2D72#1 = IAdd(idx2D66,ilit2D71);
          int offp2D73#3 = IMul(stride2D6E,addRes2D72);
          real v1_2D74#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D73);
          tensor[2] v_2D75#1 = <tensor[2]>[v0_2D70,v1_2D74];
          int offp2D76#1 = IAdd(offp2D6F,ilit2D71);
          real v0_2D77#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D76);
          int offp2D78#1 = IAdd(offp2D73,ilit2D71);
          real v1_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D78);
          tensor[2] v_2D7A#1 = <tensor[2]>[v0_2D77,v1_2D79];
          int offset2D7B#2 = 2;
          int offp2D7C#1 = IAdd(offp2D6F,offset2D7B);
          real v0_2D7D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7C);
          int offp2D7E#1 = IAdd(offp2D73,offset2D7B);
          real v1_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7E);
          tensor[2] v_2D80#1 = <tensor[2]>[v0_2D7D,v1_2D7F];
          tensor[3,2] voxels2D81#1 = <tensor[3,2]>[v_2D75,v_2D7A,v_2D80];
          tensor[3,2] ldvox2D6B#1 = voxels2D81;
          goto JOIN2D9B
        JOIN2D9B:  preds = [ASSIGN2D98,ASSIGN2E48]
          tensor[3,2] ldvox2D99#3 = phi(ldvox2D6B,ldvox2D9A)
          real rlit2D9D#1 = 0.1e1;
          real idx2D9E#1 = RSub(f2D61,rlit2D9D);
          tensor[2] kernX_2D9C#1 = <tensor[2]>[f2D61,idx2D9E];
          real _f2DA7#1 = 0.1e1;
          real _f2DA8#1 = 0.1e1;
          tensor[2] a02DA3#1 = <tensor[2]>[_f2DA7,_f2DA8];
          real _f2DA5#1 = -0.1e1;
          real _f2DA6#1 = 0.1e1;
          tensor[2] a12DA4#1 = <tensor[2]>[_f2DA5,_f2DA6];
          tensor[2] prod12DA9#1 = VMul<2>(kernX_2D9C,a12DA4);
          tensor[2] kevalX_d0_2DA2#3 = VAdd<2>(a02DA3,prod12DA9);
          tensor[2] projIx2DB3#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D99);
          real vdot2DB4#1 = VDot<2>(projIx2DB3,kevalX_d0_2DA2);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D99);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA2);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D99);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA2);
          real op1_e3_l_222DC1#2 = RSub(_t1D8B,_t2D2E);
          real op1_e3_l_232DC4#1 = RAdd(_t2D30,op1_e3_l_192D4F);
          real op1_e3_l_242DC7#1 = RAdd(phongKa1D59,op1_e3_l_202D52);
          real r2DCB#1 = vdot2DB4;
          real r2DCC#1 = RMul(transp1D69,op1_e3_l_222DC1);
          real r2DCD#1 = RMul(r2DCC,op1_e3_l_232DC4);
          real r2DCE#3 = RMul(r2DCD,op1_e3_l_242DC7);
          real r2DCF#1 = RMul(r2DCE,r2DCB);
          real r2DD0#1 = vdot2DB6;
          real r2DD1#1 = RMul(r2DCE,r2DD0);
          real r2DD2#1 = vdot2DB8;
          real r2DD3#1 = RMul(r2DCE,r2DD2);
          tensor[3] op1_e3_l_252DCA#1 = <tensor[3]>[r2DCF,r2DD1,r2DD3];
          tensor[3] rgb2DDF#1 = VAdd<3>(rgb1D6B,op1_e3_l_252DCA);
          real op1_e3_l_52DE2#1 = RSub(_t1D8B,op1_e3_l_222DC1);
          real transp2DE5#1 = RMul(transp1D69,op1_e3_l_52DE2);
          goto JOIN2DEA
        JOIN2DEA:  preds = [ASSIGN2DE7,COND2D18]
          tensor[3] rgb2DE8#1 = phi(rgb2DDF,rgb1D6B)
          real transp2DE9#1 = phi(transp2DE5,transp1D69)
          goto JOIN2DED
        JOIN2DED:  preds = [JOIN2DEA,MASSIGN2E4E]
          tensor[3] rgb2DEB#1 = phi(rgb2DE8,rgb1D6B)
          real transp2DEC#1 = phi(transp2DE9,transp1D69)
          goto JOIN2DF0
        JOIN2DF0:  preds = [JOIN2DED,COND1D9F]
          tensor[3] rgb2DEE#1 = phi(rgb2DEB,rgb1D6B)
          real transp2DEF#1 = phi(transp2DEC,transp1D69)
          goto JOIN2DF3
        JOIN2DF3:  preds = [JOIN2DF0,COND1D9C]
          tensor[3] rgb2DF1#1 = phi(rgb2DEE,rgb1D6B)
          real transp2DF2#1 = phi(transp2DEF,transp1D69)
          goto JOIN2DF6
        JOIN2DF6:  preds = [JOIN2DF3,COND1D97]
          tensor[3] rgb2DF4#1 = phi(rgb2DF1,rgb1D6B)
          real transp2DF5#1 = phi(transp2DF2,transp1D69)
          goto JOIN2DF9
        JOIN2DF9:  preds = [JOIN2DF6,COND1D94]
          tensor[3] rgb2DF7#1 = phi(rgb2DF4,rgb1D6B)
          real transp2DF8#1 = phi(transp2DF5,transp1D69)
          goto JOIN2DFC
        JOIN2DFC:  preds = [JOIN2DF9,COND1D8F]
          tensor[3] rgb2DFA#1 = phi(rgb2DF7,rgb1D6B)
          real transp2DFB#1 = phi(transp2DF8,transp1D69)
          goto JOIN2DFF
        JOIN2DFF:  preds = [JOIN2DFC,COND1D8A]
          tensor[3] rgb2DFD#3 = phi(rgb2DFA,rgb1D6B)
          real transp2DFE#2 = phi(transp2DFB,transp1D69)
          real _t2E00#1 = 0.1e-1;
          bool _t2E02#1 = LT<real>(transp2DFE,_t2E00);
          if _t2E02 then goto SAVE2E05 else goto JOIN2E09
        SAVE2E05:  preds = [COND2E04]
          self.transp = _t1D84;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E09
        JOIN2E09:  preds = [*STABILIZE2E07,COND2E04]
          real transp2E08#2 = phi(transp2DFE)
          bool _t2E0A#1 = GT<real>(rayN1D65,camFar1D53);
          if _t2E0A then goto SAVE2E0D else goto JOIN2E10
        SAVE2E0D:  preds = [COND2E0C]
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E10
        JOIN2E10:  preds = [*STABILIZE2E0F,COND2E0C]
          real rayN2E11#1 = RAdd(rayN1D65,rayStep1D57);
          self.rayN = rayN2E11;
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          active
        ASSIGN3047:  preds = [COND2D6A]
          int addRes2E19#1 = idx2D66;
          int ix2E1A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E19);
          int stride2E1B#2 = 3;
          int offp2E1C#3 = IMul(stride2E1B,ix2E1A);
          real v0_2E1D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E1C);
          int ilit2E1E#3 = 1;
          int addRes2E1F#1 = IAdd(idx2D66,ilit2E1E);
          int ix2E20#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E1F);
          int offp2E21#3 = IMul(stride2E1B,ix2E20);
          real v1_2E22#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E21);
          tensor[2] v_2E23#1 = <tensor[2]>[v0_2E1D,v1_2E22];
          int offp2E24#1 = IAdd(offp2E1C,ilit2E1E);
          real v0_2E25#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E24);
          int offp2E26#1 = IAdd(offp2E21,ilit2E1E);
          real v1_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E26);
          tensor[2] v_2E28#1 = <tensor[2]>[v0_2E25,v1_2E27];
          int offset2E29#2 = 2;
          int offp2E2A#1 = IAdd(offp2E1C,offset2E29);
          real v0_2E2B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2A);
          int offp2E2C#1 = IAdd(offp2E21,offset2E29);
          real v1_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2C);
          tensor[2] v_2E2E#1 = <tensor[2]>[v0_2E2B,v1_2E2D];
          tensor[3,2] voxels2E2F#1 = <tensor[3,2]>[v_2E23,v_2E28,v_2E2E];
          tensor[3,2] ldvox2D9A#1 = voxels2E2F;
          goto JOIN2D9B
        ASSIGN2E4A:  preds = [COND24EF]
          string _t2E49#1 = "\n";
          Print<[tensor[3],string]>(x1D81,_t2E49);
          string _t2E4C#1 = "wait what\?\n";
          Print<[string]>(_t2E4C);
          goto JOIN2DED
        ASSIGN2E4F:  preds = [COND1D74]
          bool _t1D78#1 = NEQ<int>(vi1D6F,sv1D61);
          goto JOIN1D79
    end update
    method stabilize
        ENTRY2E50:  preds = []
          bool debug2E51#1 = globals.debug1AD5;
          int su2E53#1 = globals.su1AD6;
          int sv2E55#1 = globals.sv1AD7;
          real transp2E57#1 = self.transp;
          tensor[3] rgb2E59#3 = self.rgb;
          tensor[4] rgba2E5B#1 = self.rgba;
          int ui2E5D#1 = self.ui;
          int vi2E5F#1 = self.vi;
          real _t2E61#1 = 0.1e1;
          real a2E63#6 = RSub(_t2E61,transp2E57);
          real _t2E66#1 = 0.e0;
          bool _t2E68#1 = GT<real>(a2E63,_t2E66);
          if _t2E68 then goto ASSIGN2E6C else goto JOIN2E7D
        ASSIGN2E6C:  preds = [COND2E6A]
          real _t2E6B#1 = VIndex<3,0>(rgb2E59);
          real _t2E6D#1 = RDiv(_t2E6B,a2E63);
          real _t2E70#1 = VIndex<3,1>(rgb2E59);
          real _t2E72#1 = RDiv(_t2E70,a2E63);
          real _t2E75#1 = VIndex<3,2>(rgb2E59);
          real _t2E77#1 = RDiv(_t2E75,a2E63);
          tensor[4] rgba2E7A#1 = <tensor[4]>[_t2E6D,_t2E72,_t2E77,a2E63];
          goto JOIN2E7D
        JOIN2E7D:  preds = [ASSIGN2E7B,COND2E6A]
          tensor[4] rgba2E7C#2 = phi(rgba2E7A,rgba2E5B)
          bool _t2E7E#1 = EQ<int>(ui2E5D,su2E53);
          if _t2E7E then goto ASSIGN2E82 else goto JOIN2E88
        ASSIGN2E82:  preds = [COND2E80]
          bool _t2E81#1 = EQ<int>(vi2E5F,sv2E55);
          if _t2E81 then goto COND2E84 else goto JOIN2E87
        COND2E84:  preds = [COND2E83]
          if debug2E51 then goto MASSIGN2E85 else goto JOIN2E86
        MASSIGN2E85:  preds = [COND2E84]
          Print<[real,tensor[4]]>(a2E63,rgba2E7C);
          goto JOIN2E86
        JOIN2E86:  preds = [MASSIGN2E85,COND2E84]
          goto JOIN2E87
        JOIN2E87:  preds = [JOIN2E86,COND2E83]
          goto JOIN2E88
        JOIN2E88:  preds = [JOIN2E87,COND2E80]
          self.rgba = rgba2E7C;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E8B:  preds = []
      int iresU2E8C#1 = globals.iresU1ACC;
      int iresV2E8E#1 = globals.iresV1ACD;
      int _t2E90#2 = 0;
      int _t2E92#2 = 1;
      int _t2E94#1 = ISub(iresV2E8E,_t2E92);
      int[] _t2E96#1 = Range(_t2E90,_t2E94);
    FOREACH2E99:  preds = [ASSIGN2E97,NEXT2EA2]
      foreach (vi2E98 in _t2E96) on exit goto RETURN2EA3
      int _t2E9A#1 = ISub(iresU2E8C,_t2E92);
      int[] _t2E9C#1 = Range(_t2E90,_t2E9A);
    FOREACH2E9F:  preds = [ASSIGN2E9D,NEXT2EA1]
      foreach (ui2E9E in _t2E9C) on exit goto NEXT2EA2
      new raycast(ui2E9E,vi2E98);
      goto FOREACH2E9F
    NEXT2EA2:  preds = [FOREACH2E9F]
      goto FOREACH2E99
    RETURN2EA3:  preds = [FOREACH2E99]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AC3 (a) = <no-default>
  input 0b043B_intermedateGlobal1AC4 (b) = <no-default>
  input 0c043D_intermedateGlobal1AC5 (c) = <no-default>
  input isoval1AC6 (isoval) = <default>
  input thick1AC7 (thick) = <default>
  input camEye1AC8 (camEye) = <default>
  input camAt1AC9 (camAt) = <default>
  input camUp1ACA (camUp) = <default>
  input camFOV1ACB (camFOV) = <default>
  input iresU1ACC (iresU) = <default>
  input iresV1ACD (iresV) = <default>
  input camNear1ACE (camNear) = <default>
  input camFar1ACF (camFar) = <default>
  input refStep1AD0 (refStep) = <default>
  input rayStep1AD1 (rayStep) = <default>
  input lightVsp1AD2 (lightVsp) = <default>
  input phongKa1AD3 (phongKa) = <default>
  input phongKd1AD4 (phongKd) = <default>
  input debug1AD5 (debug) = <default>
  input su1AD6 (su) = <default>
  input sv1AD7 (sv) = <default>
  global real camDist1AD8
  global tensor[3] camN1AD9
  global tensor[3] camU1ADA
  global tensor[3] camV1ADB
  global real camVmax1ADC
  global real camUmax1ADD
  global tensor[3] light1ADE
  global femData:Mesh _t1ADF
  global femData:Space _tX1AE0
  global femData:FemFunc c1AE1
  global image(IMAGE1D<double[3]>) I1AE4
## functions
  function femData:MeshPos findPos1DA1 (femData:Mesh mesh1DA2#19, tensor[3] pos1DA3#3) {
    ENTRY1DA4:  preds = []
      real _t1DA5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1DA7#1 = <tensor[3]>[_t1DA5,_t1DA5,_t1DA5];
      int newtonInt1DA9#1 = 0;
      int[] yayCells1DAB#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1DA2,pos1DA3);
    FOREACH1DAE:  preds = [ASSIGN1DAC,NEXT24E3]
      foreach (cellItter1DAD in yayCells1DAB) on exit goto ASSIGN24E5
        tensor[3] xn24E2#1 = phi(xn1DA7,xn2383)
      int _t1DAF#6 = 2;
      int[] _t1DB1#1 = Range(newtonInt1DA9,_t1DAF);
    FOREACH1DB4:  preds = [ASSIGN1DB2,NEXT24E1]
      foreach (newtonItter1DB3 in _t1DB1) on exit goto NEXT24E3
        tensor[3] xn2383#5 = phi(xn24E2,xn2447)
      int ilit1DB6#1 = 4;
      int mulRes1DB7#4 = IMul(cellItter1DAD,ilit1DB6);
      int idx1DBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,mulRes1DB7);
      int ilit1DBB#5 = 1;
      int addRes1DBC#1 = IAdd(mulRes1DB7,ilit1DBB);
      int idx1DBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBC);
      int addRes1DBF#1 = IAdd(mulRes1DB7,_t1DAF);
      int idx1DC0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBF);
      int ilit1DC1#5 = 3;
      int addRes1DC2#1 = IAdd(mulRes1DB7,ilit1DC1);
      int idx1DC3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DC2);
      int mulRes1DD9#3 = IMul(ilit1DC1,idx1DBA);
      int addRes1DDC#1 = IAdd(ilit1DBB,mulRes1DD9);
      int addRes1DDE#1 = IAdd(_t1DAF,mulRes1DD9);
      real dof_load1DDF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DD9);
      real dof_load1DE0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDC);
      real dof_load1DE1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDE);
      int mulRes1DE4#3 = IMul(ilit1DC1,idx1DBD);
      int addRes1DE6#1 = IAdd(ilit1DBB,mulRes1DE4);
      int addRes1DE7#1 = IAdd(_t1DAF,mulRes1DE4);
      real dof_load1DE8#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DE4);
      real dof_load1DE9#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE7);
      int mulRes1DED#3 = IMul(ilit1DC1,idx1DC0);
      int addRes1DEF#1 = IAdd(ilit1DBB,mulRes1DED);
      int addRes1DF0#1 = IAdd(_t1DAF,mulRes1DED);
      real dof_load1DF1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DED);
      real dof_load1DF2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF0);
      int mulRes1DF6#3 = IMul(ilit1DC1,idx1DC3);
      int addRes1DF8#1 = IAdd(ilit1DBB,mulRes1DF6);
      int addRes1DF9#1 = IAdd(_t1DAF,mulRes1DF6);
      real dof_load1DFA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DF6);
      real dof_load1DFB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF8);
      real dof_load1DFC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF9);
      real coeff1E2D#22 = -0.1e1;
      real one1E2E#33 = 0.1e1;
      real prod1E2F#2 = RMul(one1E2E,one1E2E);
      real prod1E30#2 = RMul(one1E2E,prod1E2F);
      real basisEval1E31#3 = RMul(coeff1E2D,prod1E30);
      real basisEval1E32#10 = RMul(one1E2E,prod1E30);
      real basisEval1E33#45 = 0.e0;
      real r1E4A#2 = RMul(dof_load1DDF,basisEval1E31);
      real r1E4D#1 = RMul(dof_load1DE8,basisEval1E32);
      real r1E50#2 = RMul(dof_load1DF1,basisEval1E33);
      real r1E53#2 = RMul(dof_load1DFA,basisEval1E33);
      real r1E54#1 = RAdd(r1E4A,r1E4D);
      real r1E55#1 = RAdd(r1E54,r1E50);
      real r1E56#13 = RAdd(r1E55,r1E53);
      real r1E5A#1 = RMul(dof_load1DE8,basisEval1E33);
      real r1E5C#1 = RMul(dof_load1DF1,basisEval1E32);
      real r1E5F#2 = RAdd(r1E4A,r1E5A);
      real r1E60#1 = RAdd(r1E5F,r1E5C);
      real r1E61#13 = RAdd(r1E60,r1E53);
      real r1E69#1 = RMul(dof_load1DFA,basisEval1E32);
      real r1E6B#1 = RAdd(r1E5F,r1E50);
      real r1E6C#12 = RAdd(r1E6B,r1E69);
      real r1E6F#2 = RMul(dof_load1DE0,basisEval1E31);
      real r1E71#1 = RMul(dof_load1DE9,basisEval1E32);
      real r1E73#2 = RMul(dof_load1DF2,basisEval1E33);
      real r1E75#2 = RMul(dof_load1DFB,basisEval1E33);
      real r1E76#1 = RAdd(r1E6F,r1E71);
      real r1E77#1 = RAdd(r1E76,r1E73);
      real r1E78#13 = RAdd(r1E77,r1E75);
      real r1E7A#1 = RMul(dof_load1DE9,basisEval1E33);
      real r1E7B#1 = RMul(dof_load1DF2,basisEval1E32);
      real r1E7D#2 = RAdd(r1E6F,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#13 = RAdd(r1E7E,r1E75);
      real r1E83#1 = RMul(dof_load1DFB,basisEval1E32);
      real r1E85#1 = RAdd(r1E7D,r1E73);
      real r1E86#12 = RAdd(r1E85,r1E83);
      real r1E89#2 = RMul(dof_load1DE1,basisEval1E31);
      real r1E8B#1 = RMul(dof_load1DEA,basisEval1E32);
      real r1E8D#2 = RMul(dof_load1DF3,basisEval1E33);
      real r1E8F#2 = RMul(dof_load1DFC,basisEval1E33);
      real r1E90#1 = RAdd(r1E89,r1E8B);
      real r1E91#1 = RAdd(r1E90,r1E8D);
      real r1E92#13 = RAdd(r1E91,r1E8F);
      real r1E94#1 = RMul(dof_load1DEA,basisEval1E33);
      real r1E95#1 = RMul(dof_load1DF3,basisEval1E32);
      real r1E97#2 = RAdd(r1E89,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#13 = RAdd(r1E98,r1E8F);
      real r1E9D#1 = RMul(dof_load1DFC,basisEval1E32);
      real r1E9F#1 = RAdd(r1E97,r1E8D);
      real r1EA0#12 = RAdd(r1E9F,r1E9D);
      real r1F01#3 = RMul(basisEval1E33,r1E56);
      real r1F03#3 = RMul(basisEval1E33,r1E78);
      real r1F05#5 = RMul(basisEval1E33,r1E92);
      real r1F06#3 = RAdd(r1F01,r1F03);
      real r1F07#9 = RAdd(r1F06,r1F05);
      real r1F09#3 = RMul(basisEval1E33,r1E61);
      real r1F0B#3 = RMul(basisEval1E33,r1E7F);
      real r1F0D#5 = RMul(basisEval1E33,r1E99);
      real r1F0E#3 = RAdd(r1F09,r1F0B);
      real r1F0F#9 = RAdd(r1F0E,r1F0D);
      real r1F11#3 = RMul(basisEval1E33,r1E6C);
      real r1F13#3 = RMul(basisEval1E33,r1E86);
      real r1F15#5 = RMul(basisEval1E33,r1EA0);
      real r1F16#3 = RAdd(r1F11,r1F13);
      real r1F17#12 = RAdd(r1F16,r1F15);
      real r1F1A#1 = RMul(coeff1E2D,r1E92);
      real r1F1B#3 = RAdd(r1F06,r1F1A);
      real r1F1C#1 = RMul(coeff1E2D,r1E99);
      real r1F1D#3 = RAdd(r1F0E,r1F1C);
      real r1F1E#1 = RMul(coeff1E2D,r1EA0);
      real r1F1F#4 = RAdd(r1F16,r1F1E);
      real r1F22#1 = RMul(one1E2E,r1E78);
      real r1F23#1 = RAdd(r1F01,r1F22);
      real r1F24#3 = RAdd(r1F23,r1F05);
      real r1F25#1 = RMul(one1E2E,r1E7F);
      real r1F26#1 = RAdd(r1F09,r1F25);
      real r1F27#3 = RAdd(r1F26,r1F0D);
      real r1F28#1 = RMul(one1E2E,r1E86);
      real r1F29#1 = RAdd(r1F11,r1F28);
      real r1F2A#4 = RAdd(r1F29,r1F15);
      real r1F2D#1 = RMul(one1E2E,r1E92);
      real r1F2E#3 = RAdd(r1F06,r1F2D);
      real r1F2F#1 = RMul(one1E2E,r1E99);
      real r1F30#3 = RAdd(r1F0E,r1F2F);
      real r1F31#1 = RMul(one1E2E,r1EA0);
      real r1F32#4 = RAdd(r1F16,r1F31);
      real r1F34#1 = RMul(coeff1E2D,r1E56);
      real r1F35#1 = RAdd(r1F34,r1F03);
      real r1F36#3 = RAdd(r1F35,r1F05);
      real r1F37#1 = RMul(coeff1E2D,r1E61);
      real r1F38#1 = RAdd(r1F37,r1F0B);
      real r1F39#3 = RAdd(r1F38,r1F0D);
      real r1F3A#1 = RMul(coeff1E2D,r1E6C);
      real r1F3B#1 = RAdd(r1F3A,r1F13);
      real r1F3C#4 = RAdd(r1F3B,r1F15);
      real r1F3F#1 = RMul(coeff1E2D,r1E78);
      real r1F40#1 = RAdd(r1F01,r1F3F);
      real r1F41#3 = RAdd(r1F40,r1F05);
      real r1F42#1 = RMul(coeff1E2D,r1E7F);
      real r1F43#1 = RAdd(r1F09,r1F42);
      real r1F44#3 = RAdd(r1F43,r1F0D);
      real r1F45#1 = RMul(coeff1E2D,r1E86);
      real r1F46#1 = RAdd(r1F11,r1F45);
      real r1F47#4 = RAdd(r1F46,r1F15);
      real r1F49#1 = RMul(one1E2E,r1E56);
      real r1F4A#1 = RAdd(r1F49,r1F03);
      real r1F4B#3 = RAdd(r1F4A,r1F05);
      real r1F4C#1 = RMul(one1E2E,r1E61);
      real r1F4D#1 = RAdd(r1F4C,r1F0B);
      real r1F4E#3 = RAdd(r1F4D,r1F0D);
      real r1F4F#1 = RMul(one1E2E,r1E6C);
      real r1F50#1 = RAdd(r1F4F,r1F13);
      real r1F51#4 = RAdd(r1F50,r1F15);
      real r1FAE#1 = RMul(r1E56,r1F07);
      real r1FB1#1 = RMul(r1E78,r1F2E);
      real r1FB4#1 = RMul(r1E92,r1F41);
      real r1FB5#1 = RAdd(r1FAE,r1FB1);
      real r1FB6#1 = RAdd(r1FB5,r1FB4);
      real r1FB8#1 = RMul(r1E56,r1F0F);
      real r1FBA#1 = RMul(r1E78,r1F30);
      real r1FBC#1 = RMul(r1E92,r1F44);
      real r1FBD#1 = RAdd(r1FB8,r1FBA);
      real r1FBE#2 = RAdd(r1FBD,r1FBC);
      real r1FC0#1 = RMul(r1E56,r1F17);
      real r1FC2#1 = RMul(r1E78,r1F32);
      real r1FC4#1 = RMul(r1E92,r1F47);
      real r1FC5#1 = RAdd(r1FC0,r1FC2);
      real r1FC6#2 = RAdd(r1FC5,r1FC4);
      real r1FC9#1 = RMul(r1E56,r1F1B);
      real r1FCB#1 = RMul(r1E78,r1F07);
      real r1FCD#1 = RMul(r1E92,r1F4B);
      real r1FCE#1 = RAdd(r1FC9,r1FCB);
      real r1FCF#1 = RAdd(r1FCE,r1FCD);
      real r1FD1#1 = RMul(r1E56,r1F1D);
      real r1FD3#1 = RMul(r1E78,r1F0F);
      real r1FD5#1 = RMul(r1E92,r1F4E);
      real r1FD6#1 = RAdd(r1FD1,r1FD3);
      real r1FD7#2 = RAdd(r1FD6,r1FD5);
      real r1FD9#1 = RMul(r1E56,r1F1F);
      real r1FDB#1 = RMul(r1E78,r1F17);
      real r1FDD#1 = RMul(r1E92,r1F51);
      real r1FDE#1 = RAdd(r1FD9,r1FDB);
      real r1FDF#2 = RAdd(r1FDE,r1FDD);
      real r1FE2#1 = RMul(r1E56,r1F24);
      real r1FE4#1 = RMul(r1E78,r1F36);
      real r1FE6#1 = RMul(r1E92,r1F07);
      real r1FE7#1 = RAdd(r1FE2,r1FE4);
      real r1FE8#1 = RAdd(r1FE7,r1FE6);
      real r1FEA#1 = RMul(r1E56,r1F27);
      real r1FEC#1 = RMul(r1E78,r1F39);
      real r1FEE#1 = RMul(r1E92,r1F0F);
      real r1FEF#1 = RAdd(r1FEA,r1FEC);
      real r1FF0#2 = RAdd(r1FEF,r1FEE);
      real r1FF2#1 = RMul(r1E56,r1F2A);
      real r1FF4#1 = RMul(r1E78,r1F3C);
      real r1FF6#1 = RMul(r1E92,r1F17);
      real r1FF7#1 = RAdd(r1FF2,r1FF4);
      real r1FF8#2 = RAdd(r1FF7,r1FF6);
      real r1FFC#1 = RMul(r1E61,r1F07);
      real r1FFE#1 = RMul(r1E7F,r1F2E);
      real r2000#1 = RMul(r1E99,r1F41);
      real r2001#1 = RAdd(r1FFC,r1FFE);
      real r2002#2 = RAdd(r2001,r2000);
      real r2003#1 = RMul(r1E61,r1F0F);
      real r2004#1 = RMul(r1E7F,r1F30);
      real r2005#1 = RMul(r1E99,r1F44);
      real r2006#1 = RAdd(r2003,r2004);
      real r2007#1 = RAdd(r2006,r2005);
      real r2008#1 = RMul(r1E61,r1F17);
      real r2009#1 = RMul(r1E7F,r1F32);
      real r200A#1 = RMul(r1E99,r1F47);
      real r200B#1 = RAdd(r2008,r2009);
      real r200C#2 = RAdd(r200B,r200A);
      real r200E#1 = RMul(r1E61,r1F1B);
      real r200F#1 = RMul(r1E7F,r1F07);
      real r2010#1 = RMul(r1E99,r1F4B);
      real r2011#1 = RAdd(r200E,r200F);
      real r2012#2 = RAdd(r2011,r2010);
      real r2013#1 = RMul(r1E61,r1F1D);
      real r2014#1 = RMul(r1E7F,r1F0F);
      real r2015#1 = RMul(r1E99,r1F4E);
      real r2016#1 = RAdd(r2013,r2014);
      real r2017#1 = RAdd(r2016,r2015);
      real r2018#1 = RMul(r1E61,r1F1F);
      real r2019#1 = RMul(r1E7F,r1F17);
      real r201A#1 = RMul(r1E99,r1F51);
      real r201B#1 = RAdd(r2018,r2019);
      real r201C#2 = RAdd(r201B,r201A);
      real r201E#1 = RMul(r1E61,r1F24);
      real r201F#1 = RMul(r1E7F,r1F36);
      real r2020#1 = RMul(r1E99,r1F07);
      real r2021#1 = RAdd(r201E,r201F);
      real r2022#2 = RAdd(r2021,r2020);
      real r2023#1 = RMul(r1E61,r1F27);
      real r2024#1 = RMul(r1E7F,r1F39);
      real r2025#1 = RMul(r1E99,r1F0F);
      real r2026#1 = RAdd(r2023,r2024);
      real r2027#1 = RAdd(r2026,r2025);
      real r2028#1 = RMul(r1E61,r1F2A);
      real r2029#1 = RMul(r1E7F,r1F3C);
      real r202A#1 = RMul(r1E99,r1F17);
      real r202B#1 = RAdd(r2028,r2029);
      real r202C#2 = RAdd(r202B,r202A);
      real r2030#1 = RMul(r1E6C,r1F07);
      real r2032#1 = RMul(r1E86,r1F2E);
      real r2034#1 = RMul(r1EA0,r1F41);
      real r2035#1 = RAdd(r2030,r2032);
      real r2036#2 = RAdd(r2035,r2034);
      real r2037#1 = RMul(r1E6C,r1F0F);
      real r2038#1 = RMul(r1E86,r1F30);
      real r2039#1 = RMul(r1EA0,r1F44);
      real r203A#1 = RAdd(r2037,r2038);
      real r203B#2 = RAdd(r203A,r2039);
      real r203C#1 = RMul(r1E6C,r1F17);
      real r203D#1 = RMul(r1E86,r1F32);
      real r203E#1 = RMul(r1EA0,r1F47);
      real r203F#1 = RAdd(r203C,r203D);
      real r2040#1 = RAdd(r203F,r203E);
      real r2042#1 = RMul(r1E6C,r1F1B);
      real r2043#1 = RMul(r1E86,r1F07);
      real r2044#1 = RMul(r1EA0,r1F4B);
      real r2045#1 = RAdd(r2042,r2043);
      real r2046#2 = RAdd(r2045,r2044);
      real r2047#1 = RMul(r1E6C,r1F1D);
      real r2048#1 = RMul(r1E86,r1F0F);
      real r2049#1 = RMul(r1EA0,r1F4E);
      real r204A#1 = RAdd(r2047,r2048);
      real r204B#2 = RAdd(r204A,r2049);
      real r204C#1 = RMul(r1E6C,r1F1F);
      real r204D#1 = RMul(r1E86,r1F17);
      real r204E#1 = RMul(r1EA0,r1F51);
      real r204F#1 = RAdd(r204C,r204D);
      real r2050#1 = RAdd(r204F,r204E);
      real r2052#1 = RMul(r1E6C,r1F24);
      real r2053#1 = RMul(r1E86,r1F36);
      real r2054#1 = RMul(r1EA0,r1F07);
      real r2055#1 = RAdd(r2052,r2053);
      real r2056#2 = RAdd(r2055,r2054);
      real r2057#1 = RMul(r1E6C,r1F27);
      real r2058#1 = RMul(r1E86,r1F39);
      real r2059#1 = RMul(r1EA0,r1F0F);
      real r205A#1 = RAdd(r2057,r2058);
      real r205B#2 = RAdd(r205A,r2059);
      real r205C#1 = RMul(r1E6C,r1F2A);
      real r205D#1 = RMul(r1E86,r1F3C);
      real r205E#1 = RMul(r1EA0,r1F17);
      real r205F#1 = RAdd(r205C,r205D);
      real r2060#1 = RAdd(r205F,r205E);
      tensor[3] probe_l_14211C#1 = <tensor[3]>[r1E56,r1E78,r1E92];
      tensor[3] probe_l_152169#3 = <tensor[3]>[r1E61,r1E7F,r1E99];
      tensor[3] tensor2214#1 = <tensor[3]>[r1F17,r1F32,r1F47];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F1F,r1F17,r1F51];
      tensor[3] tensor2221#1 = <tensor[3]>[r1F2A,r1F3C,r1F17];
      real vdot2244#1 = VDot<3>(probe_l_152169,tensor2214);
      real vdot2246#1 = VDot<3>(probe_l_152169,tensor221A);
      real vdot2248#1 = VDot<3>(probe_l_152169,tensor2221);
      tensor[3] op1_e3_l_182242#1 = <tensor[3]>[vdot2244,vdot2246,vdot2248];
      real op1_e3_l_192251#1 = VDot<3>(probe_l_14211C,op1_e3_l_182242);
      real r2257#2 = RMul(basisEval1E33,r1FB6);
      real r2259#1 = RMul(basisEval1E33,r1FBE);
      real r225B#2 = RMul(basisEval1E33,r1FC6);
      real r225D#2 = RMul(basisEval1E33,r2002);
      real r225F#3 = RMul(basisEval1E33,r2007);
      real r2262#1 = RMul(one1E2E,r200C);
      real r2264#2 = RMul(basisEval1E33,r2036);
      real r2267#1 = RMul(coeff1E2D,r203B);
      real r2269#3 = RMul(basisEval1E33,r2040);
      real r226A#2 = RAdd(r2257,r2259);
      real r226B#1 = RAdd(r226A,r225B);
      real r226C#1 = RAdd(r226B,r225D);
      real r226D#1 = RAdd(r226C,r225F);
      real r226E#1 = RAdd(r226D,r2262);
      real r226F#1 = RAdd(r226E,r2264);
      real r2270#1 = RAdd(r226F,r2267);
      real r2271#1 = RAdd(r2270,r2269);
      real r2273#2 = RMul(basisEval1E33,r1FCF);
      real r2275#1 = RMul(basisEval1E33,r1FD7);
      real r2277#2 = RMul(basisEval1E33,r1FDF);
      real r2279#2 = RMul(basisEval1E33,r2012);
      real r227B#3 = RMul(basisEval1E33,r2017);
      real r227D#1 = RMul(one1E2E,r201C);
      real r227F#2 = RMul(basisEval1E33,r2046);
      real r2281#1 = RMul(coeff1E2D,r204B);
      real r2283#3 = RMul(basisEval1E33,r2050);
      real r2284#2 = RAdd(r2273,r2275);
      real r2285#1 = RAdd(r2284,r2277);
      real r2286#1 = RAdd(r2285,r2279);
      real r2287#1 = RAdd(r2286,r227B);
      real r2288#1 = RAdd(r2287,r227D);
      real r2289#1 = RAdd(r2288,r227F);
      real r228A#1 = RAdd(r2289,r2281);
      real r228B#1 = RAdd(r228A,r2283);
      real r228D#2 = RMul(basisEval1E33,r1FE8);
      real r228F#1 = RMul(basisEval1E33,r1FF0);
      real r2291#2 = RMul(basisEval1E33,r1FF8);
      real r2293#2 = RMul(basisEval1E33,r2022);
      real r2295#3 = RMul(basisEval1E33,r2027);
      real r2297#1 = RMul(one1E2E,r202C);
      real r2299#2 = RMul(basisEval1E33,r2056);
      real r229B#1 = RMul(coeff1E2D,r205B);
      real r229D#3 = RMul(basisEval1E33,r2060);
      real r229E#2 = RAdd(r228D,r228F);
      real r229F#1 = RAdd(r229E,r2291);
      real r22A0#1 = RAdd(r229F,r2293);
      real r22A1#1 = RAdd(r22A0,r2295);
      real r22A2#1 = RAdd(r22A1,r2297);
      real r22A3#1 = RAdd(r22A2,r2299);
      real r22A4#1 = RAdd(r22A3,r229B);
      real r22A5#1 = RAdd(r22A4,r229D);
      real r22A7#1 = RMul(coeff1E2D,r1FC6);
      real r22A8#2 = RMul(basisEval1E33,r200C);
      real r22A9#1 = RMul(one1E2E,r2036);
      real r22AA#2 = RMul(basisEval1E33,r203B);
      real r22AB#1 = RAdd(r226A,r22A7);
      real r22AC#1 = RAdd(r22AB,r225D);
      real r22AD#1 = RAdd(r22AC,r225F);
      real r22AE#1 = RAdd(r22AD,r22A8);
      real r22AF#1 = RAdd(r22AE,r22A9);
      real r22B0#1 = RAdd(r22AF,r22AA);
      real r22B1#1 = RAdd(r22B0,r2269);
      real r22B2#1 = RMul(coeff1E2D,r1FDF);
      real r22B3#2 = RMul(basisEval1E33,r201C);
      real r22B4#1 = RMul(one1E2E,r2046);
      real r22B5#2 = RMul(basisEval1E33,r204B);
      real r22B6#1 = RAdd(r2284,r22B2);
      real r22B7#1 = RAdd(r22B6,r2279);
      real r22B8#1 = RAdd(r22B7,r227B);
      real r22B9#1 = RAdd(r22B8,r22B3);
      real r22BA#1 = RAdd(r22B9,r22B4);
      real r22BB#1 = RAdd(r22BA,r22B5);
      real r22BC#1 = RAdd(r22BB,r2283);
      real r22BD#1 = RMul(coeff1E2D,r1FF8);
      real r22BE#2 = RMul(basisEval1E33,r202C);
      real r22BF#1 = RMul(one1E2E,r2056);
      real r22C0#2 = RMul(basisEval1E33,r205B);
      real r22C1#1 = RAdd(r229E,r22BD);
      real r22C2#1 = RAdd(r22C1,r2293);
      real r22C3#1 = RAdd(r22C2,r2295);
      real r22C4#1 = RAdd(r22C3,r22BE);
      real r22C5#1 = RAdd(r22C4,r22BF);
      real r22C6#1 = RAdd(r22C5,r22C0);
      real r22C7#1 = RAdd(r22C6,r229D);
      real r22C9#1 = RMul(one1E2E,r1FBE);
      real r22CA#1 = RMul(coeff1E2D,r2002);
      real r22CB#1 = RAdd(r2257,r22C9);
      real r22CC#1 = RAdd(r22CB,r225B);
      real r22CD#1 = RAdd(r22CC,r22CA);
      real r22CE#1 = RAdd(r22CD,r225F);
      real r22CF#1 = RAdd(r22CE,r22A8);
      real r22D0#1 = RAdd(r22CF,r2264);
      real r22D1#1 = RAdd(r22D0,r22AA);
      real r22D2#1 = RAdd(r22D1,r2269);
      real r22D3#1 = RMul(one1E2E,r1FD7);
      real r22D4#1 = RMul(coeff1E2D,r2012);
      real r22D5#1 = RAdd(r2273,r22D3);
      real r22D6#1 = RAdd(r22D5,r2277);
      real r22D7#1 = RAdd(r22D6,r22D4);
      real r22D8#1 = RAdd(r22D7,r227B);
      real r22D9#1 = RAdd(r22D8,r22B3);
      real r22DA#1 = RAdd(r22D9,r227F);
      real r22DB#1 = RAdd(r22DA,r22B5);
      real r22DC#1 = RAdd(r22DB,r2283);
      real r22DD#1 = RMul(one1E2E,r1FF0);
      real r22DE#1 = RMul(coeff1E2D,r2022);
      real r22DF#1 = RAdd(r228D,r22DD);
      real r22E0#1 = RAdd(r22DF,r2291);
      real r22E1#1 = RAdd(r22E0,r22DE);
      real r22E2#1 = RAdd(r22E1,r2295);
      real r22E3#1 = RAdd(r22E2,r22BE);
      real r22E4#1 = RAdd(r22E3,r2299);
      real r22E5#1 = RAdd(r22E4,r22C0);
      real r22E6#1 = RAdd(r22E5,r229D);
      real realLit237E#1 = 0.2e1;
      real op1_e3_l_21237D#9 = RMul(realLit237E,op1_e3_l_192251);
      real varAcc2384#1 = VIndex<3,0>(xn2383);
      real varAcc2385#1 = VIndex<3,1>(xn2383);
      real varAcc2386#1 = VIndex<3,2>(xn2383);
      real prod238B#2 = RMul(varAcc2384,prod1E2F);
      real prod238D#1 = RMul(varAcc2385,one1E2E);
      real prod238E#2 = RMul(one1E2E,prod238D);
      real prod2390#1 = RMul(one1E2E,varAcc2386);
      real prod2391#2 = RMul(one1E2E,prod2390);
      real mult2394#1 = RMul(coeff1E2D,prod2391);
      real mult2395#1 = RMul(coeff1E2D,prod238E);
      real mult2396#1 = RMul(coeff1E2D,prod238B);
      real sum2397#1 = RAdd(mult2395,mult2396);
      real sum2398#1 = RAdd(mult2394,sum2397);
      real sum2399#3 = RAdd(basisEval1E32,sum2398);
      real basisEval239B#3 = RMul(one1E2E,prod238B);
      real basisEval239C#3 = RMul(one1E2E,prod238E);
      real basisEval239D#3 = RMul(one1E2E,prod2391);
      real r23BE#1 = RMul(dof_load1DDF,sum2399);
      real r23C1#1 = RMul(dof_load1DE8,basisEval239B);
      real r23C4#1 = RMul(dof_load1DF1,basisEval239C);
      real r23C7#1 = RMul(dof_load1DFA,basisEval239D);
      real r23C8#1 = RAdd(r23BE,r23C1);
      real r23C9#1 = RAdd(r23C8,r23C4);
      real r23CA#1 = RAdd(r23C9,r23C7);
      real r23CC#1 = RMul(dof_load1DE0,sum2399);
      real r23CE#1 = RMul(dof_load1DE9,basisEval239B);
      real r23D0#1 = RMul(dof_load1DF2,basisEval239C);
      real r23D2#1 = RMul(dof_load1DFB,basisEval239D);
      real r23D3#1 = RAdd(r23CC,r23CE);
      real r23D4#1 = RAdd(r23D3,r23D0);
      real r23D5#1 = RAdd(r23D4,r23D2);
      real r23D7#1 = RMul(dof_load1DE1,sum2399);
      real r23D9#1 = RMul(dof_load1DEA,basisEval239B);
      real r23DB#1 = RMul(dof_load1DF3,basisEval239C);
      real r23DD#1 = RMul(dof_load1DFC,basisEval239D);
      real r23DE#1 = RAdd(r23D7,r23D9);
      real r23DF#1 = RAdd(r23DE,r23DB);
      real r23E0#1 = RAdd(r23DF,r23DD);
      tensor[3] probe_l_2223BB#1 = <tensor[3]>[r23CA,r23D5,r23E0];
      real r240A#1 = RDiv(r2271,op1_e3_l_21237D);
      real r240C#1 = RDiv(r228B,op1_e3_l_21237D);
      real r240E#1 = RDiv(r22A5,op1_e3_l_21237D);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22B1,op1_e3_l_21237D);
      real r2413#1 = RDiv(r22BC,op1_e3_l_21237D);
      real r2415#1 = RDiv(r22C7,op1_e3_l_21237D);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      real r2418#1 = RDiv(r22D2,op1_e3_l_21237D);
      real r241A#1 = RDiv(r22DC,op1_e3_l_21237D);
      real r241C#1 = RDiv(r22E6,op1_e3_l_21237D);
      tensor[3] tensor241D#1 = <tensor[3]>[r2418,r241A,r241C];
      tensor[3] op1_e3_l_242435#3 = VSub<3>(probe_l_2223BB,pos1DA3);
      real vdot243A#1 = VDot<3>(tensor240F,op1_e3_l_242435);
      real vdot243C#1 = VDot<3>(tensor2416,op1_e3_l_242435);
      real vdot243E#1 = VDot<3>(tensor241D,op1_e3_l_242435);
      tensor[3] op1_e3_l_252438#3 = <tensor[3]>[vdot243A,vdot243C,vdot243E];
      tensor[3] xn2447#4 = VSub<3>(xn2383,op1_e3_l_252438);
      real _t244A#2 = 0.1e-7;
      real _t244C#1 = RMul(_t244A,_t244A);
      real _t24AE#1 = VDot<3>(op1_e3_l_252438,op1_e3_l_252438);
      bool _t24B1#1 = GTE<real>(_t244C,_t24AE);
      if _t24B1 then goto ASSIGN24B7 else goto JOIN24E0
    ASSIGN24B7:  preds = [COND24B3]
      real _t24B6#4 = 0.1e-4;
      real _t24B8#1 = RAdd(one1E2E,_t24B6);
      tensor[3] _t24BB#1 = <tensor[3]>[one1E2E,one1E2E,one1E2E];
      real _t24BD#1 = VDot<3>(_t24BB,xn2447);
      bool _t24C0#1 = GT<real>(_t24B8,_t24BD);
      tensor[3] _t24C2#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24C4#3 = VAdd<3>(_t24C2,xn2447);
      real _t24C7#1 = VIndex<3,0>(_t24C4);
      real _t24C9#3 = -0.e0;
      bool _t24CB#1 = GT<real>(_t24C7,_t24C9);
      real _t24CD#1 = VIndex<3,1>(_t24C4);
      bool _t24CF#1 = GT<real>(_t24CD,_t24C9);
      real _t24D1#1 = VIndex<3,2>(_t24C4);
      bool _t24D3#1 = GT<real>(_t24D1,_t24C9);
      bool _t24D5#1 = BAnd(_t24CF,_t24D3);
      bool _t24D7#1 = BAnd(_t24CB,_t24D5);
      bool _t24D9#1 = BAnd(_t24C0,_t24D7);
      if _t24D9 then goto ASSIGN24DD else goto JOIN24DF
    ASSIGN24DD:  preds = [COND24DB]
      femData:MeshPos _t24DC#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1DA2,cellItter1DAD,xn2447,pos1DA3);
      return _t24DC
      goto JOIN24DF
    JOIN24DF:  preds = [*RETURN(_t24DC)24DE,COND24DB]
      goto JOIN24E0
    JOIN24E0:  preds = [JOIN24DF,COND24B3]
      goto FOREACH1DB4
    NEXT24E3:  preds = [FOREACH1DB4]
      goto FOREACH1DAE
    ASSIGN24E5:  preds = [FOREACH1DAE]
      string _t24E4#1 = "Bad end 2";
      string _t24E6#1 = "\n";
      Print<[string,string]>(_t24E4,_t24E6);
      femData:MeshPos _t24E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1DA2);
      return _t24E9
}
## input initialization
  ENTRY1AE5:  preds = []
    real isoval1AE6#1 = 0.2e0;
    globals.isoval1AC6 = isoval1AE6;
    real thick1AE9#1 = 0.7e-1;
    globals.thick1AC7 = thick1AE9;
    real _t1AEC#2 = 0.3e1;
    real _t1AEE#1 = -0.3e1;
    tensor[3] camEye1AF0#1 = <tensor[3]>[_t1AEC,_t1AEE,_t1AEC];
    globals.camEye1AC8 = camEye1AF0;
    real _t1AF3#3 = 0.5e0;
    tensor[3] camAt1AF5#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1AF3];
    globals.camAt1AC9 = camAt1AF5;
    real _t1AF8#2 = 0.e0;
    real _t1AFA#2 = 0.1e1;
    tensor[3] camUp1AFC#2 = <tensor[3]>[_t1AF8,_t1AF8,_t1AFA];
    globals.camUp1ACA = camUp1AFC;
    real camFOV1AFF#1 = 0.137e2;
    globals.camFOV1ACB = camFOV1AFF;
    int iresU1B02#2 = 500;
    globals.iresU1ACC = iresU1B02;
    globals.iresV1ACD = iresU1B02;
    real camNear1B06#1 = -0.2e1;
    globals.camNear1ACE = camNear1B06;
    real camFar1B09#1 = 0.5e1;
    globals.camFar1ACF = camFar1B09;
    globals.refStep1AD0 = _t1AFA;
    real rayStep1B0D#1 = 0.1e-1;
    globals.rayStep1AD1 = rayStep1B0D;
    globals.lightVsp1AD2 = camUp1AFC;
    real phongKa1B11#1 = 0.1e0;
    globals.phongKa1AD3 = phongKa1B11;
    real phongKd1B14#1 = 0.9e0;
    globals.phongKd1AD4 = phongKd1B14;
    bool debug1B17#1 = false;
    globals.debug1AD5 = debug1B17;
    int su1B1A#2 = 250;
    globals.su1AD6 = su1B1A;
    globals.sv1AD7 = su1B1A;
    return
## global-variable initialization
  ENTRY1B1F:  preds = []
    femData:Mesh a1B20#3 = globals.a1AC3;
    femData:Space 0b043B_intermedateGlobal1B22#1 = globals.0b043B_intermedateGlobal1AC4;
    femData:FemFunc 0c043D_intermedateGlobal1B24#1 = globals.0c043D_intermedateGlobal1AC5;
    tensor[3] camEye1B26#1 = globals.camEye1AC8;
    tensor[3] camAt1B28#1 = globals.camAt1AC9;
    tensor[3] camUp1B2A#3 = globals.camUp1ACA;
    real camFOV1B2C#1 = globals.camFOV1ACB;
    int iresU1B2E#1 = globals.iresU1ACC;
    int iresV1B30#1 = globals.iresV1ACD;
    tensor[3] lightVsp1B32#5 = globals.lightVsp1AD2;
    int _t1B34#1 = 0;
    int _t1B36#1 = 1;
    int _t1B38#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B20);
    int _t1B3A#1 = ISub(_t1B38,_t1B36);
    int[] _t1B3C#1 = Range(_t1B34,_t1B3A);
    femData:MeshCell[] _t1B3E#1 = <femData:MeshCell[]>{};
  FOREACH1B41:  preds = [ASSIGN1B3F,NEXT1B47]
    foreach (_t1B40 in _t1B3C) on exit goto ASSIGN1B49
      femData:MeshCell[] _t1B45#1 = phi(_t1B3E,_t1B44)
    femData:MeshCell _t1B42#1 = LoadFem<femData:MeshCell>(a1B20,_t1B40);
    femData:MeshCell[] _t1B44#1 = Append<femData:MeshCell>(_t1B45,_t1B42);
    goto FOREACH1B41
  ASSIGN1B49:  preds = [FOREACH1B41]
    femData:Space b1B48#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1B22,a1B20);
    femData:FemFunc c1B4A#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1B24,b1B48);
    femData:Space _t1B4C#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B4A);
    femData:Mesh _t1B4E#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B4C);
    image(IMAGE1D<double[3]>) I1B50#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B56#9 = VSub<3>(camAt1B28,camEye1B26);
    real op1_e3_l_41B59#1 = VDot<3>(op1_e3_l_21B56,op1_e3_l_21B56);
    real camDist1B5C#4 = Sqrt(op1_e3_l_41B59);
    globals.camDist1AD8 = camDist1B5C;
    real realLit1B61#9 = 0.1e1;
    real op1_e3_l_91B60#6 = RDiv(realLit1B61,camDist1B5C);
    tensor[3] camN1B65#4 = VScale<3>(op1_e3_l_91B60,op1_e3_l_21B56);
    globals.camN1AD9 = camN1B65;
    real realLit1B6A#6 = 0.e0;
    real r1B6B#3 = TensorIndex<tensor[3],[0]>(camUp1B2A);
    real r1B6C#3 = RMul(realLit1B6A,r1B6B);
    real r1B6D#3 = TensorIndex<tensor[3],[1]>(camUp1B2A);
    real r1B6E#3 = RMul(realLit1B6A,r1B6D);
    real r1B6F#3 = TensorIndex<tensor[3],[2]>(camUp1B2A);
    real r1B70#5 = RMul(realLit1B6A,r1B6F);
    real r1B71#3 = RAdd(r1B6C,r1B6E);
    real r1B72#3 = RAdd(r1B71,r1B70);
    real r1B74#1 = RMul(realLit1B61,r1B6F);
    real r1B75#1 = RAdd(r1B71,r1B74);
    real realLit1B76#6 = -0.1e1;
    real r1B77#1 = RMul(realLit1B76,r1B6D);
    real r1B78#1 = RAdd(r1B6C,r1B77);
    real r1B79#1 = RAdd(r1B78,r1B70);
    tensor[3] tensor1B7A#1 = <tensor[3]>[r1B72,r1B75,r1B79];
    real r1B7B#1 = RMul(realLit1B76,r1B6F);
    real r1B7C#1 = RAdd(r1B71,r1B7B);
    real r1B7D#1 = RMul(realLit1B61,r1B6B);
    real r1B7E#1 = RAdd(r1B7D,r1B6E);
    real r1B7F#1 = RAdd(r1B7E,r1B70);
    tensor[3] tensor1B80#1 = <tensor[3]>[r1B7C,r1B72,r1B7F];
    real r1B81#1 = RMul(realLit1B61,r1B6D);
    real r1B82#1 = RAdd(r1B6C,r1B81);
    real r1B83#1 = RAdd(r1B82,r1B70);
    real r1B84#1 = RMul(realLit1B76,r1B6B);
    real r1B85#1 = RAdd(r1B84,r1B6E);
    real r1B86#1 = RAdd(r1B85,r1B70);
    tensor[3] tensor1B87#1 = <tensor[3]>[r1B83,r1B86,r1B72];
    real vdot1BAA#1 = VDot<3>(op1_e3_l_21B56,tensor1B7A);
    real vdot1BAC#1 = VDot<3>(op1_e3_l_21B56,tensor1B80);
    real vdot1BAE#1 = VDot<3>(op1_e3_l_21B56,tensor1B87);
    tensor[3] op1_e3_l_171BA8#6 = <tensor[3]>[vdot1BAA,vdot1BAC,vdot1BAE];
    real op1_e3_l_341BB7#1 = VDot<3>(op1_e3_l_171BA8,op1_e3_l_171BA8);
    real r1BBB#1 = RMul(op1_e3_l_91B60,op1_e3_l_91B60);
    real op1_e3_l_351BBA#1 = RMul(r1BBB,op1_e3_l_341BB7);
    real op1_e3_l_361BBF#1 = Sqrt(op1_e3_l_351BBA);
    tensor[3] op1_e3_l_371BC2#1 = VScale<3>(op1_e3_l_91B60,op1_e3_l_171BA8);
    real op1_e3_l_381BC5#2 = RDiv(realLit1B61,op1_e3_l_361BBF);
    tensor[3] camU1BCA#4 = VScale<3>(op1_e3_l_381BC5,op1_e3_l_371BC2);
    globals.camU1ADA = camU1BCA;
    real r1BD0#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B56);
    real r1BD1#3 = RMul(realLit1B6A,r1BD0);
    real r1BD2#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B56);
    real r1BD3#3 = RMul(realLit1B6A,r1BD2);
    real r1BD4#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B56);
    real r1BD5#5 = RMul(realLit1B6A,r1BD4);
    real r1BD6#3 = RAdd(r1BD1,r1BD3);
    real r1BD7#3 = RAdd(r1BD6,r1BD5);
    real r1BD9#1 = RMul(realLit1B61,r1BD4);
    real r1BDA#1 = RAdd(r1BD6,r1BD9);
    real r1BDC#1 = RMul(realLit1B76,r1BD2);
    real r1BDD#1 = RAdd(r1BD1,r1BDC);
    real r1BDE#1 = RAdd(r1BDD,r1BD5);
    tensor[3] tensor1BDF#1 = <tensor[3]>[r1BD7,r1BDA,r1BDE];
    real r1BE0#1 = RMul(realLit1B76,r1BD4);
    real r1BE1#1 = RAdd(r1BD6,r1BE0);
    real r1BE2#1 = RMul(realLit1B61,r1BD0);
    real r1BE3#1 = RAdd(r1BE2,r1BD3);
    real r1BE4#1 = RAdd(r1BE3,r1BD5);
    tensor[3] tensor1BE5#1 = <tensor[3]>[r1BE1,r1BD7,r1BE4];
    real r1BE6#1 = RMul(realLit1B61,r1BD2);
    real r1BE7#1 = RAdd(r1BD1,r1BE6);
    real r1BE8#1 = RAdd(r1BE7,r1BD5);
    real r1BE9#1 = RMul(realLit1B76,r1BD0);
    real r1BEA#1 = RAdd(r1BE9,r1BD3);
    real r1BEB#1 = RAdd(r1BEA,r1BD5);
    tensor[3] tensor1BEC#1 = <tensor[3]>[r1BE8,r1BEB,r1BD7];
    real vdot1C0F#1 = VDot<3>(op1_e3_l_171BA8,tensor1BDF);
    real vdot1C11#1 = VDot<3>(op1_e3_l_171BA8,tensor1BE5);
    real vdot1C13#1 = VDot<3>(op1_e3_l_171BA8,tensor1BEC);
    tensor[3] op1_e3_l_471C0D#1 = <tensor[3]>[vdot1C0F,vdot1C11,vdot1C13];
    tensor[3] op1_e3_l_501C1C#3 = VScale<3>(op1_e3_l_91B60,op1_e3_l_471C0D);
    real r1C20#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C1C);
    real r1C21#3 = RMul(op1_e3_l_381BC5,op1_e3_l_91B60);
    real r1C22#2 = RMul(r1C21,r1C20);
    real r1C23#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C1C);
    real r1C24#2 = RMul(r1C21,r1C23);
    real r1C25#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C1C);
    real r1C26#2 = RMul(r1C21,r1C25);
    tensor[3] camV1C1F#1 = <tensor[3]>[r1C22,r1C24,r1C26];
    globals.camV1ADB = camV1C1F;
    real _t1C31#1 = 0.314159265358979323846264338327950288e1;
    real _t1C33#1 = 0.36e3;
    real op1_e3_l_51C35#1 = RMul(camFOV1B2C,_t1C31);
    real op1_e3_l_61C38#1 = RDiv(op1_e3_l_51C35,_t1C33);
    real op1_e3_l_101C3B#2 = Tan(op1_e3_l_61C38);
    real camVmax1C3E#1 = RMul(op1_e3_l_101C3B,camDist1B5C);
    globals.camVmax1ADC = camVmax1C3E;
    real _t1C42#1 = IntToReal(iresU1B2E);
    real _t1C44#1 = IntToReal(iresV1B30);
    real r1C47#1 = RMul(_t1C42,op1_e3_l_101C3B);
    real op1_e3_l_141C46#1 = RMul(r1C47,camDist1B5C);
    real camUmax1C4B#1 = RDiv(op1_e3_l_141C46,_t1C44);
    globals.camUmax1ADD = camUmax1C4B;
    real op1_e3_l_31C51#1 = VDot<3>(lightVsp1B32,lightVsp1B32);
    real op1_e3_l_41C54#1 = Sqrt(op1_e3_l_31C51);
    real op1_e3_l_51C57#1 = RDiv(realLit1B61,op1_e3_l_41C54);
    real r1C5D#1 = VIndex<3,0>(camU1BCA);
    real r1C5E#3 = TensorIndex<tensor[3],[0]>(lightVsp1B32);
    real r1C5F#1 = RMul(r1C5D,r1C5E);
    real r1C61#3 = TensorIndex<tensor[3],[1]>(lightVsp1B32);
    real r1C62#1 = RMul(r1C22,r1C61);
    real r1C63#1 = VIndex<3,0>(camN1B65);
    real r1C64#3 = TensorIndex<tensor[3],[2]>(lightVsp1B32);
    real r1C65#1 = RMul(r1C63,r1C64);
    real r1C66#1 = RAdd(r1C5F,r1C62);
    real r1C67#1 = RAdd(r1C66,r1C65);
    real r1C68#1 = VIndex<3,1>(camU1BCA);
    real r1C69#1 = RMul(r1C68,r1C5E);
    real r1C6B#1 = RMul(r1C24,r1C61);
    real r1C6C#1 = VIndex<3,1>(camN1B65);
    real r1C6D#1 = RMul(r1C6C,r1C64);
    real r1C6E#1 = RAdd(r1C69,r1C6B);
    real r1C6F#1 = RAdd(r1C6E,r1C6D);
    real r1C70#1 = VIndex<3,2>(camU1BCA);
    real r1C71#1 = RMul(r1C70,r1C5E);
    real r1C73#1 = RMul(r1C26,r1C61);
    real r1C74#1 = VIndex<3,2>(camN1B65);
    real r1C75#1 = RMul(r1C74,r1C64);
    real r1C76#1 = RAdd(r1C71,r1C73);
    real r1C77#1 = RAdd(r1C76,r1C75);
    tensor[3] op1_e3_l_61C5C#1 = <tensor[3]>[r1C67,r1C6F,r1C77];
    tensor[3] light1C95#1 = VScale<3>(op1_e3_l_51C57,op1_e3_l_61C5C);
    globals.light1ADE = light1C95;
    globals._t1ADF = _t1B4E;
    globals._tX1AE0 = _t1B4C;
    globals.c1AE1 = c1B4A;
    globals.I1AE4 = I1B50;
    return
## strand
  strand raycast (int ui1CA0#2, int vi1CA1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1CAC:  preds = []
        int iresU1CAD#1 = globals.iresU1ACC;
        int iresV1CAF#1 = globals.iresV1ACD;
        real camNear1CB1#1 = globals.camNear1ACE;
        real camDist1CB3#1 = globals.camDist1AD8;
        tensor[3] camN1CB5#1 = globals.camN1AD9;
        tensor[3] camU1CB7#1 = globals.camU1ADA;
        tensor[3] camV1CB9#1 = globals.camV1ADB;
        real camVmax1CBB#3 = globals.camVmax1ADC;
        real camUmax1CBD#2 = globals.camUmax1ADD;
        real _t1CBF#4 = -0.5e0;
        real _t1CC1#1 = IntToReal(ui1CA0);
        real _t1CC3#1 = IntToReal(iresU1CAD);
        real _t1CC5#2 = 0.5e0;
        real op1_e3_l_61CC7#1 = RSub(_t1CC3,_t1CC5);
        real op1_e3_l_71CCA#1 = RSub(_t1CC1,_t1CBF);
        real op1_e3_l_81CCD#1 = RSub(op1_e3_l_61CC7,_t1CBF);
        real op1_e3_l_91CD0#2 = RNeg(camUmax1CBD);
        real op1_e3_l_101CD3#1 = RDiv(op1_e3_l_71CCA,op1_e3_l_81CCD);
        real op1_e3_l_111CD6#1 = RSub(camUmax1CBD,op1_e3_l_91CD0);
        real op1_e3_l_131CD9#1 = RMul(op1_e3_l_101CD3,op1_e3_l_111CD6);
        real rayU1CDC#2 = RAdd(op1_e3_l_91CD0,op1_e3_l_131CD9);
        real _t1CDF#1 = IntToReal(vi1CA1);
        real _t1CE1#1 = IntToReal(iresV1CAF);
        real op1_e3_l_61CE3#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_71CE6#1 = RSub(_t1CDF,_t1CBF);
        real op1_e3_l_81CE9#1 = RSub(op1_e3_l_61CE3,_t1CBF);
        real op1_e3_l_91CEC#1 = RNeg(camVmax1CBB);
        real op1_e3_l_101CEF#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_81CE9);
        real op1_e3_l_111CF2#1 = RSub(op1_e3_l_91CEC,camVmax1CBB);
        real op1_e3_l_121CF5#1 = RMul(op1_e3_l_101CEF,op1_e3_l_111CF2);
        real rayV1CF8#2 = RAdd(camVmax1CBB,op1_e3_l_121CF5);
        tensor[3] op1_e3_l_331D0A#1 = VScale<3>(rayU1CDC,camU1CB7);
        tensor[3] op1_e3_l_341D0D#1 = VScale<3>(rayV1CF8,camV1CB9);
        tensor[3] op1_e3_l_351D10#3 = VAdd<3>(op1_e3_l_331D0A,op1_e3_l_341D0D);
        real realLit1D14#2 = 0.1e1;
        real r1D15#3 = RDiv(realLit1D14,camDist1CB3);
        real r1D16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D10);
        real r1D17#1 = RMul(r1D15,r1D16);
        real r1D18#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D10);
        real r1D19#1 = RMul(r1D15,r1D18);
        real r1D1A#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D10);
        real r1D1B#1 = RMul(r1D15,r1D1A);
        tensor[3] op1_e3_l_361D13#1 = <tensor[3]>[r1D17,r1D19,r1D1B];
        tensor[3] rayVec1D26#1 = VAdd<3>(camN1CB5,op1_e3_l_361D13);
        real _t1D2B#8 = 0.e0;
        tensor[3] rgb1D2D#1 = <tensor[3]>[_t1D2B,_t1D2B,_t1D2B];
        tensor[4] rgba1D2F#1 = <tensor[4]>[_t1D2B,_t1D2B,_t1D2B,_t1D2B];
        self.rayU = rayU1CDC;
        self.rayV = rayV1CF8;
        self.rayN = camNear1CB1;
        self.rayVec = rayVec1D26;
        self.transp = realLit1D14;
        self.rgb = rgb1D2D;
        self.rgba = rgba1D2F;
        self.gray = _t1D2B;
        self.ui = ui1CA0;
        self.vi = vi1CA1;
        return
    end state init
    method update
        ENTRY1D3C:  preds = []
          image(IMAGE1D<double[3]>) I1D3D#17 = globals.I1AE4;
          real isoval1D3F#1 = globals.isoval1AC6;
          femData:Mesh _t1D41#17 = globals._t1ADF;
          femData:Space _t1D43#10 = globals._tX1AE0;
          femData:FemFunc c1D45#10 = globals.c1AE1;
          femData:Mesh a1D4B#1 = globals.a1AC3;
          real thick1D4D#1 = globals.thick1AC7;
          tensor[3] camEye1D4F#1 = globals.camEye1AC8;
          real camNear1D51#2 = globals.camNear1ACE;
          real camFar1D53#2 = globals.camFar1ACF;
          real refStep1D55#1 = globals.refStep1AD0;
          real rayStep1D57#2 = globals.rayStep1AD1;
          real phongKa1D59#1 = globals.phongKa1AD3;
          real phongKd1D5B#1 = globals.phongKd1AD4;
          bool debug1D5D#1 = globals.debug1AD5;
          int su1D5F#1 = globals.su1AD6;
          int sv1D61#1 = globals.sv1AD7;
          tensor[3] light1D63#1 = globals.light1ADE;
          real rayN1D65#4 = self.rayN;
          tensor[3] rayVec1D67#3 = self.rayVec;
          real transp1D69#10 = self.transp;
          tensor[3] rgb1D6B#9 = self.rgb;
          int ui1D6D#1 = self.ui;
          int vi1D6F#1 = self.vi;
          if debug1D5D then goto ASSIGN1D73 else goto JOIN1D7D
        ASSIGN1D73:  preds = [COND1D71]
          bool _t1D72#1 = NEQ<int>(ui1D6D,su1D5F);
          if _t1D72 then goto ASSIGN1D76 else goto ASSIGN2E4F
        ASSIGN1D76:  preds = [COND1D74]
          bool _t1D75#1 = true;
          goto JOIN1D79
        JOIN1D79:  preds = [ASSIGN1D76,ASSIGN2E4F]
          bool _t1D77#1 = phi(_t1D75,_t1D78)
          if _t1D77 then goto STABILIZE1D7B else goto JOIN1D7C
        STABILIZE1D7B:  preds = [COND1D7A]
          stabilize
          goto JOIN1D7C
        JOIN1D7C:  preds = [*STABILIZE1D7B,COND1D7A]
          goto JOIN1D7D
        JOIN1D7D:  preds = [JOIN1D7C,COND1D71]
          tensor[3] op1_e3_l_31D7E#1 = VScale<3>(rayN1D65,rayVec1D67);
          tensor[3] x1D81#6 = VAdd<3>(camEye1D4F,op1_e3_l_31D7E);
          real _t1D84#61 = 0.e0;
          real _t1D86#2 = VIndex<3,0>(x1D81);
          bool _t1D88#1 = LT<real>(_t1D84,_t1D86);
          if _t1D88 then goto ASSIGN1D8C else goto JOIN2DFF
        ASSIGN1D8C:  preds = [COND1D8A]
          real _t1D8B#45 = 0.1e1;
          bool _t1D8D#1 = LT<real>(_t1D86,_t1D8B);
          if _t1D8D then goto ASSIGN1D91 else goto JOIN2DFC
        ASSIGN1D91:  preds = [COND1D8F]
          real _t1D90#2 = VIndex<3,1>(x1D81);
          bool _t1D92#1 = LT<real>(_t1D84,_t1D90);
          if _t1D92 then goto ASSIGN1D96 else goto JOIN2DF9
        ASSIGN1D96:  preds = [COND1D94]
          bool _t1D95#1 = LT<real>(_t1D90,_t1D8B);
          if _t1D95 then goto ASSIGN1D99 else goto JOIN2DF6
        ASSIGN1D99:  preds = [COND1D97]
          real _t1D98#2 = VIndex<3,2>(x1D81);
          bool _t1D9A#1 = LT<real>(_t1D84,_t1D98);
          if _t1D9A then goto ASSIGN1D9E else goto JOIN2DF3
        ASSIGN1D9E:  preds = [COND1D9C]
          bool _t1D9D#1 = LT<real>(_t1D98,_t1D8B);
          if _t1D9D then goto ASSIGN24EC else goto JOIN2DF0
        ASSIGN24EC:  preds = [COND1D9F]
          femData:MeshPos p1DA0#1 = findPos1DA1 (a1D4B,x1D81);
          bool _t24ED#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1DA0);
          if _t24ED then goto ASSIGN24F1 else goto ASSIGN2E4A
        ASSIGN24F1:  preds = [COND24EF]
          real _t24F0#1 = 0.13e1;
          femData:MeshPos callFindPos24F2#2 = findPos1DA1 (_t1D41,x1D81);
          int intPos24F4#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F2);
          tensor[3] refPos24F6#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F2);
          int ilit24F9#1 = 10;
          int mulRes24FA#10 = IMul(intPos24F4,ilit24F9);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,mulRes24FA);
          int ilit24FE#22 = 1;
          int addRes24FF#1 = IAdd(mulRes24FA,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FF);
          int ilit2501#10 = 2;
          int addRes2502#1 = IAdd(mulRes24FA,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2502);
          int ilit2504#10 = 3;
          int addRes2505#1 = IAdd(mulRes24FA,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2505);
          int ilit2507#2 = 4;
          int addRes2508#1 = IAdd(mulRes24FA,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2508);
          int ilit250A#1 = 5;
          int addRes250B#1 = IAdd(mulRes24FA,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250B);
          int ilit250D#1 = 6;
          int addRes250E#1 = IAdd(mulRes24FA,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250E);
          int ilit2510#1 = 7;
          int addRes2511#1 = IAdd(mulRes24FA,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2511);
          int ilit2513#1 = 8;
          int addRes2514#1 = IAdd(mulRes24FA,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2514);
          int ilit2516#1 = 9;
          int addRes2517#1 = IAdd(mulRes24FA,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2517);
          int mulRes2540#1 = IMul(ilit24FE,idx24FD);
          int mulRes2542#1 = IMul(ilit24FE,idx2500);
          int mulRes2545#1 = IMul(ilit24FE,idx2503);
          int mulRes2548#1 = IMul(ilit24FE,idx2506);
          int mulRes254B#1 = IMul(ilit24FE,idx2509);
          int mulRes254E#1 = IMul(ilit24FE,idx250C);
          int mulRes2551#1 = IMul(ilit24FE,idx250F);
          int mulRes2554#1 = IMul(ilit24FE,idx2512);
          int mulRes2557#1 = IMul(ilit24FE,idx2515);
          int mulRes255A#1 = IMul(ilit24FE,idx2518);
          real dof255B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2540);
          real dof255C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2542);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2545);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2548);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254B);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254E);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2551);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2554);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2557);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes255A);
          tensor[10] dofs2565#4 = <tensor[10]>[dof255B,dof255C,dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564];
          real varAcc2591#5 = VIndex<3,0>(refPos24F6);
          real varAcc2592#4 = VIndex<3,1>(refPos24F6);
          real varAcc2593#4 = VIndex<3,2>(refPos24F6);
          real coeff2594#4 = 0.2e1;
          real prod22596#1 = RMul(varAcc2591,varAcc2591);
          real prod2598#3 = RMul(_t1D8B,_t1D8B);
          real prod2599#2 = RMul(prod22596,prod2598);
          real coeff259A#7 = 0.4e1;
          real prod259C#2 = RMul(varAcc2592,_t1D8B);
          real prod259D#2 = RMul(varAcc2591,prod259C);
          real prod259F#2 = RMul(_t1D8B,varAcc2593);
          real prod25A0#2 = RMul(varAcc2591,prod259F);
          real coeff25A1#4 = -0.3e1;
          real prod25A2#5 = RMul(varAcc2591,prod2598);
          real prod225A3#1 = RMul(varAcc2592,varAcc2592);
          real prod25A4#1 = RMul(prod225A3,_t1D8B);
          real prod25A5#2 = RMul(_t1D8B,prod25A4);
          real prod25A6#1 = RMul(varAcc2592,varAcc2593);
          real prod25A7#2 = RMul(_t1D8B,prod25A6);
          real prod25A8#5 = RMul(_t1D8B,prod259C);
          real prod225A9#1 = RMul(varAcc2593,varAcc2593);
          real prod25AA#1 = RMul(_t1D8B,prod225A9);
          real prod25AB#2 = RMul(_t1D8B,prod25AA);
          real prod25AC#5 = RMul(_t1D8B,prod259F);
          real prod25AD#4 = RMul(_t1D8B,prod2598);
          real mult25AE#10 = RMul(_t1D8B,prod25AD);
          real mult25AF#1 = RMul(coeff25A1,prod25AC);
          real mult25B0#2 = RMul(coeff2594,prod25AB);
          real mult25B1#1 = RMul(coeff25A1,prod25A8);
          real mult25B2#2 = RMul(coeff259A,prod25A7);
          real mult25B3#2 = RMul(coeff2594,prod25A5);
          real mult25B4#1 = RMul(coeff25A1,prod25A2);
          real mult25B5#2 = RMul(coeff259A,prod25A0);
          real mult25B6#2 = RMul(coeff259A,prod259D);
          real mult25B7#2 = RMul(coeff2594,prod2599);
          real sum25B8#1 = RAdd(mult25B6,mult25B7);
          real sum25B9#1 = RAdd(mult25B5,sum25B8);
          real sum25BA#1 = RAdd(mult25B4,sum25B9);
          real sum25BB#1 = RAdd(mult25B3,sum25BA);
          real sum25BC#1 = RAdd(mult25B2,sum25BB);
          real sum25BD#1 = RAdd(mult25B1,sum25BC);
          real sum25BE#1 = RAdd(mult25B0,sum25BD);
          real sum25BF#1 = RAdd(mult25AF,sum25BE);
          real sum25C0#1 = RAdd(mult25AE,sum25BF);
          real coeff25C2#23 = -0.1e1;
          real mult25C3#1 = RMul(coeff25C2,prod25A2);
          real sum25C4#1 = RAdd(mult25C3,mult25B7);
          real mult25C6#1 = RMul(coeff25C2,prod25A8);
          real sum25C7#1 = RAdd(mult25C6,mult25B3);
          real mult25C9#1 = RMul(coeff25C2,prod25AC);
          real sum25CA#1 = RAdd(mult25C9,mult25B0);
          real coeff25CC#9 = -0.4e1;
          real mult25CD#5 = RMul(coeff259A,prod25AC);
          real mult25CE#1 = RMul(coeff25CC,prod25AB);
          real mult25CF#2 = RMul(coeff25CC,prod25A7);
          real mult25D0#2 = RMul(coeff25CC,prod25A0);
          real sum25D1#1 = RAdd(mult25CF,mult25D0);
          real sum25D2#1 = RAdd(mult25CE,sum25D1);
          real sum25D3#1 = RAdd(mult25CD,sum25D2);
          real mult25D5#5 = RMul(coeff259A,prod25A8);
          real mult25D6#1 = RMul(coeff25CC,prod25A5);
          real mult25D7#2 = RMul(coeff25CC,prod259D);
          real sum25D8#1 = RAdd(mult25D6,mult25D7);
          real sum25D9#1 = RAdd(mult25CF,sum25D8);
          real sum25DA#1 = RAdd(mult25D5,sum25D9);
          real mult25DC#5 = RMul(coeff259A,prod25A2);
          real mult25DD#1 = RMul(coeff25CC,prod2599);
          real sum25DE#1 = RAdd(mult25D7,mult25DD);
          real sum25DF#1 = RAdd(mult25D0,sum25DE);
          real sum25E0#1 = RAdd(mult25DC,sum25DF);
          tensor[10] intermediateCons25E2#1 = <tensor[10]>[sum25C0,sum25C4,sum25C7,sum25CA,mult25B2,mult25B5,mult25B6,sum25D3,sum25DA,sum25E0];
          real compositionl2636#2 = VDot<10>(dofs2565,intermediateCons25E2);
          real op1_e3_l_232639#1 = RSub(compositionl2636,isoval1D3F);
          real mult264D#1 = RMul(coeff25A1,prod25AD);
          real sum2651#1 = RAdd(mult25D5,mult25DC);
          real sum2652#1 = RAdd(mult25CD,sum2651);
          real sum2653#3 = RAdd(mult264D,sum2652);
          real mult2656#6 = RMul(coeff25C2,prod25AD);
          real sum2657#1 = RAdd(mult2656,mult25DC);
          real basisEval265B#4 = RMul(coeff25CC,prod25AC);
          real basisEval265C#4 = RMul(coeff25CC,prod25A8);
          real coeff265D#3 = -0.8e1;
          real mult265E#3 = RMul(coeff259A,prod25AD);
          real mult265F#1 = RMul(coeff265D,prod25A2);
          real sum2660#1 = RAdd(basisEval265C,mult265F);
          real sum2661#1 = RAdd(basisEval265B,sum2660);
          real sum2662#1 = RAdd(mult265E,sum2661);
          real sum2665#1 = RAdd(mult2656,mult25D5);
          real mult2667#1 = RMul(coeff265D,prod25A8);
          real mult2668#4 = RMul(coeff25CC,prod25A2);
          real sum2669#1 = RAdd(mult2667,mult2668);
          real sum266A#1 = RAdd(basisEval265B,sum2669);
          real sum266B#1 = RAdd(mult265E,sum266A);
          real sum266E#1 = RAdd(mult2656,mult25CD);
          real mult2670#1 = RMul(coeff265D,prod25AC);
          real sum2671#1 = RAdd(basisEval265C,mult2668);
          real sum2672#1 = RAdd(mult2670,sum2671);
          real sum2673#1 = RAdd(mult265E,sum2672);
          tensor[10] intermediateCons2675#1 = <tensor[10]>[sum2653,sum2657,_t1D84,_t1D84,_t1D84,mult25CD,mult25D5,basisEval265B,basisEval265C,sum2662];
          tensor[10] intermediateCons2676#1 = <tensor[10]>[sum2653,_t1D84,sum2665,_t1D84,mult25CD,_t1D84,mult25DC,basisEval265B,sum266B,mult2668];
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2653,_t1D84,_t1D84,sum266E,mult25D5,mult25DC,_t1D84,sum2673,basisEval265C,mult2668];
          real vdot26B8#3 = VDot<10>(dofs2565,intermediateCons2675);
          real vdot26BA#3 = VDot<10>(dofs2565,intermediateCons2676);
          real vdot26BC#3 = VDot<10>(dofs2565,intermediateCons2677);
          int mulRes26C7#4 = IMul(intPos24F4,ilit2507);
          int idx26CA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,mulRes26C7);
          int addRes26CC#1 = IAdd(mulRes26C7,ilit24FE);
          int idx26CD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CC);
          int addRes26CF#1 = IAdd(mulRes26C7,ilit2501);
          int idx26D0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CF);
          int addRes26D2#1 = IAdd(mulRes26C7,ilit2504);
          int idx26D3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26D2);
          int mulRes26E9#3 = IMul(ilit2504,idx26CA);
          int addRes26EC#1 = IAdd(ilit24FE,mulRes26E9);
          int addRes26EE#1 = IAdd(ilit2501,mulRes26E9);
          real dof_load26EF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26E9);
          real dof_load26F0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EC);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EE);
          int mulRes26F4#3 = IMul(ilit2504,idx26CD);
          int addRes26F6#1 = IAdd(ilit24FE,mulRes26F4);
          int addRes26F7#1 = IAdd(ilit2501,mulRes26F4);
          real dof_load26F8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26F4);
          real dof_load26F9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F7);
          int mulRes26FD#3 = IMul(ilit2504,idx26D0);
          int addRes26FF#1 = IAdd(ilit24FE,mulRes26FD);
          int addRes2700#1 = IAdd(ilit2501,mulRes26FD);
          real dof_load2701#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26FD);
          real dof_load2702#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2700);
          int mulRes2706#3 = IMul(ilit2504,idx26D3);
          int addRes2708#1 = IAdd(ilit24FE,mulRes2706);
          int addRes2709#1 = IAdd(ilit2501,mulRes2706);
          real dof_load270A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes2706);
          real dof_load270B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2709);
          real r275A#2 = RMul(dof_load26EF,mult2656);
          real r275D#1 = RMul(dof_load26F8,mult25AE);
          real r2760#2 = RMul(dof_load2701,_t1D84);
          real r2763#2 = RMul(dof_load270A,_t1D84);
          real r2764#1 = RAdd(r275A,r275D);
          real r2765#1 = RAdd(r2764,r2760);
          real r2766#13 = RAdd(r2765,r2763);
          real r276A#1 = RMul(dof_load26F8,_t1D84);
          real r276C#1 = RMul(dof_load2701,mult25AE);
          real r276F#2 = RAdd(r275A,r276A);
          real r2770#1 = RAdd(r276F,r276C);
          real r2771#13 = RAdd(r2770,r2763);
          real r2779#1 = RMul(dof_load270A,mult25AE);
          real r277B#1 = RAdd(r276F,r2760);
          real r277C#12 = RAdd(r277B,r2779);
          real r277F#2 = RMul(dof_load26F0,mult2656);
          real r2781#1 = RMul(dof_load26F9,mult25AE);
          real r2783#2 = RMul(dof_load2702,_t1D84);
          real r2785#2 = RMul(dof_load270B,_t1D84);
          real r2786#1 = RAdd(r277F,r2781);
          real r2787#1 = RAdd(r2786,r2783);
          real r2788#13 = RAdd(r2787,r2785);
          real r278A#1 = RMul(dof_load26F9,_t1D84);
          real r278B#1 = RMul(dof_load2702,mult25AE);
          real r278D#2 = RAdd(r277F,r278A);
          real r278E#1 = RAdd(r278D,r278B);
          real r278F#13 = RAdd(r278E,r2785);
          real r2793#1 = RMul(dof_load270B,mult25AE);
          real r2795#1 = RAdd(r278D,r2783);
          real r2796#12 = RAdd(r2795,r2793);
          real r2799#2 = RMul(dof_load26F1,mult2656);
          real r279B#1 = RMul(dof_load26FA,mult25AE);
          real r279D#2 = RMul(dof_load2703,_t1D84);
          real r279F#2 = RMul(dof_load270C,_t1D84);
          real r27A0#1 = RAdd(r2799,r279B);
          real r27A1#1 = RAdd(r27A0,r279D);
          real r27A2#13 = RAdd(r27A1,r279F);
          real r27A4#1 = RMul(dof_load26FA,_t1D84);
          real r27A5#1 = RMul(dof_load2703,mult25AE);
          real r27A7#2 = RAdd(r2799,r27A4);
          real r27A8#1 = RAdd(r27A7,r27A5);
          real r27A9#13 = RAdd(r27A8,r279F);
          real r27AD#1 = RMul(dof_load270C,mult25AE);
          real r27AF#1 = RAdd(r27A7,r279D);
          real r27B0#12 = RAdd(r27AF,r27AD);
          real r2811#3 = RMul(_t1D84,r2766);
          real r2813#3 = RMul(_t1D84,r2788);
          real r2815#5 = RMul(_t1D84,r27A2);
          real r2816#3 = RAdd(r2811,r2813);
          real r2817#9 = RAdd(r2816,r2815);
          real r2819#3 = RMul(_t1D84,r2771);
          real r281B#3 = RMul(_t1D84,r278F);
          real r281D#5 = RMul(_t1D84,r27A9);
          real r281E#3 = RAdd(r2819,r281B);
          real r281F#9 = RAdd(r281E,r281D);
          real r2821#3 = RMul(_t1D84,r277C);
          real r2823#3 = RMul(_t1D84,r2796);
          real r2825#5 = RMul(_t1D84,r27B0);
          real r2826#3 = RAdd(r2821,r2823);
          real r2827#12 = RAdd(r2826,r2825);
          real r282A#1 = RMul(coeff25C2,r27A2);
          real r282B#3 = RAdd(r2816,r282A);
          real r282C#1 = RMul(coeff25C2,r27A9);
          real r282D#3 = RAdd(r281E,r282C);
          real r282E#1 = RMul(coeff25C2,r27B0);
          real r282F#4 = RAdd(r2826,r282E);
          real r2832#1 = RMul(_t1D8B,r2788);
          real r2833#1 = RAdd(r2811,r2832);
          real r2834#3 = RAdd(r2833,r2815);
          real r2835#1 = RMul(_t1D8B,r278F);
          real r2836#1 = RAdd(r2819,r2835);
          real r2837#3 = RAdd(r2836,r281D);
          real r2838#1 = RMul(_t1D8B,r2796);
          real r2839#1 = RAdd(r2821,r2838);
          real r283A#4 = RAdd(r2839,r2825);
          real r283D#1 = RMul(_t1D8B,r27A2);
          real r283E#3 = RAdd(r2816,r283D);
          real r283F#1 = RMul(_t1D8B,r27A9);
          real r2840#3 = RAdd(r281E,r283F);
          real r2841#1 = RMul(_t1D8B,r27B0);
          real r2842#4 = RAdd(r2826,r2841);
          real r2844#1 = RMul(coeff25C2,r2766);
          real r2845#1 = RAdd(r2844,r2813);
          real r2846#3 = RAdd(r2845,r2815);
          real r2847#1 = RMul(coeff25C2,r2771);
          real r2848#1 = RAdd(r2847,r281B);
          real r2849#3 = RAdd(r2848,r281D);
          real r284A#1 = RMul(coeff25C2,r277C);
          real r284B#1 = RAdd(r284A,r2823);
          real r284C#4 = RAdd(r284B,r2825);
          real r284F#1 = RMul(coeff25C2,r2788);
          real r2850#1 = RAdd(r2811,r284F);
          real r2851#3 = RAdd(r2850,r2815);
          real r2852#1 = RMul(coeff25C2,r278F);
          real r2853#1 = RAdd(r2819,r2852);
          real r2854#3 = RAdd(r2853,r281D);
          real r2855#1 = RMul(coeff25C2,r2796);
          real r2856#1 = RAdd(r2821,r2855);
          real r2857#4 = RAdd(r2856,r2825);
          real r2859#1 = RMul(_t1D8B,r2766);
          real r285A#1 = RAdd(r2859,r2813);
          real r285B#3 = RAdd(r285A,r2815);
          real r285C#1 = RMul(_t1D8B,r2771);
          real r285D#1 = RAdd(r285C,r281B);
          real r285E#3 = RAdd(r285D,r281D);
          real r285F#1 = RMul(_t1D8B,r277C);
          real r2860#1 = RAdd(r285F,r2823);
          real r2861#4 = RAdd(r2860,r2825);
          real r28BE#1 = RMul(r2766,r2817);
          real r28C1#1 = RMul(r2788,r283E);
          real r28C4#1 = RMul(r27A2,r2851);
          real r28C5#1 = RAdd(r28BE,r28C1);
          real r28C6#1 = RAdd(r28C5,r28C4);
          real r28C8#1 = RMul(r2766,r281F);
          real r28CA#1 = RMul(r2788,r2840);
          real r28CC#1 = RMul(r27A2,r2854);
          real r28CD#1 = RAdd(r28C8,r28CA);
          real r28CE#2 = RAdd(r28CD,r28CC);
          real r28D0#1 = RMul(r2766,r2827);
          real r28D2#1 = RMul(r2788,r2842);
          real r28D4#1 = RMul(r27A2,r2857);
          real r28D5#1 = RAdd(r28D0,r28D2);
          real r28D6#2 = RAdd(r28D5,r28D4);
          real r28D9#1 = RMul(r2766,r282B);
          real r28DB#1 = RMul(r2788,r2817);
          real r28DD#1 = RMul(r27A2,r285B);
          real r28DE#1 = RAdd(r28D9,r28DB);
          real r28DF#1 = RAdd(r28DE,r28DD);
          real r28E1#1 = RMul(r2766,r282D);
          real r28E3#1 = RMul(r2788,r281F);
          real r28E5#1 = RMul(r27A2,r285E);
          real r28E6#1 = RAdd(r28E1,r28E3);
          real r28E7#2 = RAdd(r28E6,r28E5);
          real r28E9#1 = RMul(r2766,r282F);
          real r28EB#1 = RMul(r2788,r2827);
          real r28ED#1 = RMul(r27A2,r2861);
          real r28EE#1 = RAdd(r28E9,r28EB);
          real r28EF#2 = RAdd(r28EE,r28ED);
          real r28F2#1 = RMul(r2766,r2834);
          real r28F4#1 = RMul(r2788,r2846);
          real r28F6#1 = RMul(r27A2,r2817);
          real r28F7#1 = RAdd(r28F2,r28F4);
          real r28F8#1 = RAdd(r28F7,r28F6);
          real r28FA#1 = RMul(r2766,r2837);
          real r28FC#1 = RMul(r2788,r2849);
          real r28FE#1 = RMul(r27A2,r281F);
          real r28FF#1 = RAdd(r28FA,r28FC);
          real r2900#2 = RAdd(r28FF,r28FE);
          real r2902#1 = RMul(r2766,r283A);
          real r2904#1 = RMul(r2788,r284C);
          real r2906#1 = RMul(r27A2,r2827);
          real r2907#1 = RAdd(r2902,r2904);
          real r2908#2 = RAdd(r2907,r2906);
          real r290C#1 = RMul(r2771,r2817);
          real r290E#1 = RMul(r278F,r283E);
          real r2910#1 = RMul(r27A9,r2851);
          real r2911#1 = RAdd(r290C,r290E);
          real r2912#2 = RAdd(r2911,r2910);
          real r2913#1 = RMul(r2771,r281F);
          real r2914#1 = RMul(r278F,r2840);
          real r2915#1 = RMul(r27A9,r2854);
          real r2916#1 = RAdd(r2913,r2914);
          real r2917#1 = RAdd(r2916,r2915);
          real r2918#1 = RMul(r2771,r2827);
          real r2919#1 = RMul(r278F,r2842);
          real r291A#1 = RMul(r27A9,r2857);
          real r291B#1 = RAdd(r2918,r2919);
          real r291C#2 = RAdd(r291B,r291A);
          real r291E#1 = RMul(r2771,r282B);
          real r291F#1 = RMul(r278F,r2817);
          real r2920#1 = RMul(r27A9,r285B);
          real r2921#1 = RAdd(r291E,r291F);
          real r2922#2 = RAdd(r2921,r2920);
          real r2923#1 = RMul(r2771,r282D);
          real r2924#1 = RMul(r278F,r281F);
          real r2925#1 = RMul(r27A9,r285E);
          real r2926#1 = RAdd(r2923,r2924);
          real r2927#1 = RAdd(r2926,r2925);
          real r2928#1 = RMul(r2771,r282F);
          real r2929#1 = RMul(r278F,r2827);
          real r292A#1 = RMul(r27A9,r2861);
          real r292B#1 = RAdd(r2928,r2929);
          real r292C#2 = RAdd(r292B,r292A);
          real r292E#1 = RMul(r2771,r2834);
          real r292F#1 = RMul(r278F,r2846);
          real r2930#1 = RMul(r27A9,r2817);
          real r2931#1 = RAdd(r292E,r292F);
          real r2932#2 = RAdd(r2931,r2930);
          real r2933#1 = RMul(r2771,r2837);
          real r2934#1 = RMul(r278F,r2849);
          real r2935#1 = RMul(r27A9,r281F);
          real r2936#1 = RAdd(r2933,r2934);
          real r2937#1 = RAdd(r2936,r2935);
          real r2938#1 = RMul(r2771,r283A);
          real r2939#1 = RMul(r278F,r284C);
          real r293A#1 = RMul(r27A9,r2827);
          real r293B#1 = RAdd(r2938,r2939);
          real r293C#2 = RAdd(r293B,r293A);
          real r2940#1 = RMul(r277C,r2817);
          real r2942#1 = RMul(r2796,r283E);
          real r2944#1 = RMul(r27B0,r2851);
          real r2945#1 = RAdd(r2940,r2942);
          real r2946#2 = RAdd(r2945,r2944);
          real r2947#1 = RMul(r277C,r281F);
          real r2948#1 = RMul(r2796,r2840);
          real r2949#1 = RMul(r27B0,r2854);
          real r294A#1 = RAdd(r2947,r2948);
          real r294B#2 = RAdd(r294A,r2949);
          real r294C#1 = RMul(r277C,r2827);
          real r294D#1 = RMul(r2796,r2842);
          real r294E#1 = RMul(r27B0,r2857);
          real r294F#1 = RAdd(r294C,r294D);
          real r2950#1 = RAdd(r294F,r294E);
          real r2952#1 = RMul(r277C,r282B);
          real r2953#1 = RMul(r2796,r2817);
          real r2954#1 = RMul(r27B0,r285B);
          real r2955#1 = RAdd(r2952,r2953);
          real r2956#2 = RAdd(r2955,r2954);
          real r2957#1 = RMul(r277C,r282D);
          real r2958#1 = RMul(r2796,r281F);
          real r2959#1 = RMul(r27B0,r285E);
          real r295A#1 = RAdd(r2957,r2958);
          real r295B#2 = RAdd(r295A,r2959);
          real r295C#1 = RMul(r277C,r282F);
          real r295D#1 = RMul(r2796,r2827);
          real r295E#1 = RMul(r27B0,r2861);
          real r295F#1 = RAdd(r295C,r295D);
          real r2960#1 = RAdd(r295F,r295E);
          real r2962#1 = RMul(r277C,r2834);
          real r2963#1 = RMul(r2796,r2846);
          real r2964#1 = RMul(r27B0,r2817);
          real r2965#1 = RAdd(r2962,r2963);
          real r2966#2 = RAdd(r2965,r2964);
          real r2967#1 = RMul(r277C,r2837);
          real r2968#1 = RMul(r2796,r2849);
          real r2969#1 = RMul(r27B0,r281F);
          real r296A#1 = RAdd(r2967,r2968);
          real r296B#2 = RAdd(r296A,r2969);
          real r296C#1 = RMul(r277C,r283A);
          real r296D#1 = RMul(r2796,r284C);
          real r296E#1 = RMul(r27B0,r2827);
          real r296F#1 = RAdd(r296C,r296D);
          real r2970#1 = RAdd(r296F,r296E);
          tensor[3] probe_l_292A2C#1 = <tensor[3]>[r2766,r2788,r27A2];
          tensor[3] probe_l_302A79#3 = <tensor[3]>[r2771,r278F,r27A9];
          tensor[3] tensor2B24#1 = <tensor[3]>[r2827,r2842,r2857];
          tensor[3] tensor2B2A#1 = <tensor[3]>[r282F,r2827,r2861];
          tensor[3] tensor2B31#1 = <tensor[3]>[r283A,r284C,r2827];
          real vdot2B54#1 = VDot<3>(probe_l_302A79,tensor2B24);
          real vdot2B56#1 = VDot<3>(probe_l_302A79,tensor2B2A);
          real vdot2B58#1 = VDot<3>(probe_l_302A79,tensor2B31);
          tensor[3] op1_e3_l_332B52#1 = <tensor[3]>[vdot2B54,vdot2B56,vdot2B58];
          real op1_e3_l_342B61#1 = VDot<3>(probe_l_292A2C,op1_e3_l_332B52);
          real r2B67#2 = RMul(_t1D84,r28C6);
          real r2B69#1 = RMul(_t1D84,r28CE);
          real r2B6B#2 = RMul(_t1D84,r28D6);
          real r2B6D#2 = RMul(_t1D84,r2912);
          real r2B6F#3 = RMul(_t1D84,r2917);
          real r2B72#1 = RMul(_t1D8B,r291C);
          real r2B74#2 = RMul(_t1D84,r2946);
          real r2B77#1 = RMul(coeff25C2,r294B);
          real r2B79#3 = RMul(_t1D84,r2950);
          real r2B7A#2 = RAdd(r2B67,r2B69);
          real r2B7B#1 = RAdd(r2B7A,r2B6B);
          real r2B7C#1 = RAdd(r2B7B,r2B6D);
          real r2B7D#1 = RAdd(r2B7C,r2B6F);
          real r2B7E#1 = RAdd(r2B7D,r2B72);
          real r2B7F#1 = RAdd(r2B7E,r2B74);
          real r2B80#1 = RAdd(r2B7F,r2B77);
          real r2B81#1 = RAdd(r2B80,r2B79);
          real r2B83#2 = RMul(_t1D84,r28DF);
          real r2B85#1 = RMul(_t1D84,r28E7);
          real r2B87#2 = RMul(_t1D84,r28EF);
          real r2B89#2 = RMul(_t1D84,r2922);
          real r2B8B#3 = RMul(_t1D84,r2927);
          real r2B8D#1 = RMul(_t1D8B,r292C);
          real r2B8F#2 = RMul(_t1D84,r2956);
          real r2B91#1 = RMul(coeff25C2,r295B);
          real r2B93#3 = RMul(_t1D84,r2960);
          real r2B94#2 = RAdd(r2B83,r2B85);
          real r2B95#1 = RAdd(r2B94,r2B87);
          real r2B96#1 = RAdd(r2B95,r2B89);
          real r2B97#1 = RAdd(r2B96,r2B8B);
          real r2B98#1 = RAdd(r2B97,r2B8D);
          real r2B99#1 = RAdd(r2B98,r2B8F);
          real r2B9A#1 = RAdd(r2B99,r2B91);
          real r2B9B#1 = RAdd(r2B9A,r2B93);
          real r2B9D#2 = RMul(_t1D84,r28F8);
          real r2B9F#1 = RMul(_t1D84,r2900);
          real r2BA1#2 = RMul(_t1D84,r2908);
          real r2BA3#2 = RMul(_t1D84,r2932);
          real r2BA5#3 = RMul(_t1D84,r2937);
          real r2BA7#1 = RMul(_t1D8B,r293C);
          real r2BA9#2 = RMul(_t1D84,r2966);
          real r2BAB#1 = RMul(coeff25C2,r296B);
          real r2BAD#3 = RMul(_t1D84,r2970);
          real r2BAE#2 = RAdd(r2B9D,r2B9F);
          real r2BAF#1 = RAdd(r2BAE,r2BA1);
          real r2BB0#1 = RAdd(r2BAF,r2BA3);
          real r2BB1#1 = RAdd(r2BB0,r2BA5);
          real r2BB2#1 = RAdd(r2BB1,r2BA7);
          real r2BB3#1 = RAdd(r2BB2,r2BA9);
          real r2BB4#1 = RAdd(r2BB3,r2BAB);
          real r2BB5#1 = RAdd(r2BB4,r2BAD);
          real r2BB7#1 = RMul(coeff25C2,r28D6);
          real r2BB8#2 = RMul(_t1D84,r291C);
          real r2BB9#1 = RMul(_t1D8B,r2946);
          real r2BBA#2 = RMul(_t1D84,r294B);
          real r2BBB#1 = RAdd(r2B7A,r2BB7);
          real r2BBC#1 = RAdd(r2BBB,r2B6D);
          real r2BBD#1 = RAdd(r2BBC,r2B6F);
          real r2BBE#1 = RAdd(r2BBD,r2BB8);
          real r2BBF#1 = RAdd(r2BBE,r2BB9);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2B79);
          real r2BC2#1 = RMul(coeff25C2,r28EF);
          real r2BC3#2 = RMul(_t1D84,r292C);
          real r2BC4#1 = RMul(_t1D8B,r2956);
          real r2BC5#2 = RMul(_t1D84,r295B);
          real r2BC6#1 = RAdd(r2B94,r2BC2);
          real r2BC7#1 = RAdd(r2BC6,r2B89);
          real r2BC8#1 = RAdd(r2BC7,r2B8B);
          real r2BC9#1 = RAdd(r2BC8,r2BC3);
          real r2BCA#1 = RAdd(r2BC9,r2BC4);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2B93);
          real r2BCD#1 = RMul(coeff25C2,r2908);
          real r2BCE#2 = RMul(_t1D84,r293C);
          real r2BCF#1 = RMul(_t1D8B,r2966);
          real r2BD0#2 = RMul(_t1D84,r296B);
          real r2BD1#1 = RAdd(r2BAE,r2BCD);
          real r2BD2#1 = RAdd(r2BD1,r2BA3);
          real r2BD3#1 = RAdd(r2BD2,r2BA5);
          real r2BD4#1 = RAdd(r2BD3,r2BCE);
          real r2BD5#1 = RAdd(r2BD4,r2BCF);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BAD);
          real r2BD9#1 = RMul(_t1D8B,r28CE);
          real r2BDA#1 = RMul(coeff25C2,r2912);
          real r2BDB#1 = RAdd(r2B67,r2BD9);
          real r2BDC#1 = RAdd(r2BDB,r2B6B);
          real r2BDD#1 = RAdd(r2BDC,r2BDA);
          real r2BDE#1 = RAdd(r2BDD,r2B6F);
          real r2BDF#1 = RAdd(r2BDE,r2BB8);
          real r2BE0#1 = RAdd(r2BDF,r2B74);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B79);
          real r2BE3#1 = RMul(_t1D8B,r28E7);
          real r2BE4#1 = RMul(coeff25C2,r2922);
          real r2BE5#1 = RAdd(r2B83,r2BE3);
          real r2BE6#1 = RAdd(r2BE5,r2B87);
          real r2BE7#1 = RAdd(r2BE6,r2BE4);
          real r2BE8#1 = RAdd(r2BE7,r2B8B);
          real r2BE9#1 = RAdd(r2BE8,r2BC3);
          real r2BEA#1 = RAdd(r2BE9,r2B8F);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B93);
          real r2BED#1 = RMul(_t1D8B,r2900);
          real r2BEE#1 = RMul(coeff25C2,r2932);
          real r2BEF#1 = RAdd(r2B9D,r2BED);
          real r2BF0#1 = RAdd(r2BEF,r2BA1);
          real r2BF1#1 = RAdd(r2BF0,r2BEE);
          real r2BF2#1 = RAdd(r2BF1,r2BA5);
          real r2BF3#1 = RAdd(r2BF2,r2BCE);
          real r2BF4#1 = RAdd(r2BF3,r2BA9);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAD);
          real op1_e3_l_362C8D#9 = RMul(coeff2594,op1_e3_l_342B61);
          real r2C94#1 = RDiv(r2B81,op1_e3_l_362C8D);
          real r2C96#1 = RDiv(r2B9B,op1_e3_l_362C8D);
          real r2C98#1 = RDiv(r2BB5,op1_e3_l_362C8D);
          real r2C9B#1 = RDiv(r2BC1,op1_e3_l_362C8D);
          real r2C9D#1 = RDiv(r2BCC,op1_e3_l_362C8D);
          real r2C9F#1 = RDiv(r2BD7,op1_e3_l_362C8D);
          real r2CA2#1 = RDiv(r2BE2,op1_e3_l_362C8D);
          real r2CA4#1 = RDiv(r2BEC,op1_e3_l_362C8D);
          real r2CA6#1 = RDiv(r2BF6,op1_e3_l_362C8D);
          real r2CC2#1 = RMul(vdot26B8,r2C94);
          real r2CC5#1 = RMul(vdot26BA,r2C9B);
          real r2CC8#1 = RMul(vdot26BC,r2CA2);
          real r2CC9#1 = RAdd(r2CC2,r2CC5);
          real r2CCA#1 = RAdd(r2CC9,r2CC8);
          real r2CCC#1 = RMul(vdot26B8,r2C96);
          real r2CCE#1 = RMul(vdot26BA,r2C9D);
          real r2CD0#1 = RMul(vdot26BC,r2CA4);
          real r2CD1#1 = RAdd(r2CCC,r2CCE);
          real r2CD2#1 = RAdd(r2CD1,r2CD0);
          real r2CD4#1 = RMul(vdot26B8,r2C98);
          real r2CD6#1 = RMul(vdot26BA,r2C9F);
          real r2CD8#1 = RMul(vdot26BC,r2CA6);
          real r2CD9#1 = RAdd(r2CD4,r2CD6);
          real r2CDA#1 = RAdd(r2CD9,r2CD8);
          tensor[3] op1_e3_l_382CBF#1 = <tensor[3]>[r2CCA,r2CD2,r2CDA];
          tensor[3] op1_e3_l_542CF8#3 = VNeg<3>(op1_e3_l_382CBF);
          real op1_e3_l_562CFB#1 = VDot<3>(op1_e3_l_542CF8,op1_e3_l_542CF8);
          real op1_e3_l_572CFE#2 = Sqrt(op1_e3_l_562CFB);
          real op1_e3_l_582D01#1 = Abs<real>(op1_e3_l_232639);
          real op1_e3_l_592D04#1 = RMul(thick1D4D,op1_e3_l_572CFE);
          real op1_e3_l_602D07#1 = RDiv(op1_e3_l_582D01,op1_e3_l_592D04);
          real op1_e3_l_612D0A#1 = RSub(_t1D8B,op1_e3_l_602D07);
          real op1_e3_l_622D0D#1 = RMul(_t24F0,op1_e3_l_612D0A);
          real op1_e3_l_632D10#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real a2D13#2 = RMul(_t1D8B,op1_e3_l_632D10);
          bool _t2D16#1 = GT<real>(a2D13,_t1D84);
          if _t2D16 then goto ASSIGN3274 else goto JOIN2DEA
        ASSIGN3274:  preds = [COND2D18]
          real _t2D1F#1 = RSub(_t1D8B,a2D13);
          real op1_e3_l_32D22#1 = VDot<3>(rayVec1D67,rayVec1D67);
          real op1_e3_l_42D25#1 = Sqrt(op1_e3_l_32D22);
          real op1_e3_l_52D28#1 = RMul(rayStep1D57,op1_e3_l_42D25);
          real _t2D2B#1 = RDiv(op1_e3_l_52D28,refStep1D55);
          real _t2D2E#1 = MathFn<pow>(_t2D1F,_t2D2B);
          real _t2D30#2 = 0.11e1;
          real _t2D32#1 = 0.7e0;
          real op1_e3_l_672D34#1 = RDiv(_t1D8B,op1_e3_l_572CFE);
          real op1_e3_l_682D39#1 = VDot<3>(op1_e3_l_542CF8,light1D63);
          real _t2D3C#1 = RMul(op1_e3_l_672D34,op1_e3_l_682D39);
          real shade2D3F#1 = Max<real>(_t1D84,_t2D3C);
          real op1_e3_l_152D43#1 = RSub(rayN1D65,camNear1D51);
          real op1_e3_l_162D46#1 = RSub(camFar1D53,camNear1D51);
          real op1_e3_l_172D49#1 = RDiv(op1_e3_l_152D43,op1_e3_l_162D46);
          real op1_e3_l_182D4C#1 = RSub(_t2D32,_t2D30);
          real op1_e3_l_192D4F#1 = RMul(op1_e3_l_172D49,op1_e3_l_182D4C);
          real op1_e3_l_202D52#1 = RMul(phongKd1D5B,shade2D3F);
          real Mtransform2D55#1 = Transform<IMAGE1D<double[3]>>(I1D3D);
          real MxPos2D57#1 = RMul(Mtransform2D55,compositionl2636);
          real Ttranslate2D5A#1 = Translate<IMAGE1D<double[3]>>(I1D3D);
          real imgPos2D5C#2 = RAdd(MxPos2D57,Ttranslate2D5A);
          real nd2D5F#2 = Floor<1>(imgPos2D5C);
          real f2D61#2 = RSub(imgPos2D5C,nd2D5F);
          int n2D64#5 = RealToInt<1>(nd2D5F);
          bool isInside2D68#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D64,I1D3D);
          if isInside2D68 then goto ASSIGN3280 else goto ASSIGN3278
        ASSIGN3280:  preds = [COND2D6A]
          int offp2D6F#3 = IMul(ilit2504,n2D64);
          real v0_2D70#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D6F);
          int addRes2D72#1 = IAdd(n2D64,ilit24FE);
          int offp2D73#3 = IMul(ilit2504,addRes2D72);
          real v1_2D74#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D73);
          tensor[2] v_2D75#1 = <tensor[2]>[v0_2D70,v1_2D74];
          int offp2D76#1 = IAdd(offp2D6F,ilit24FE);
          real v0_2D77#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D76);
          int offp2D78#1 = IAdd(offp2D73,ilit24FE);
          real v1_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D78);
          tensor[2] v_2D7A#1 = <tensor[2]>[v0_2D77,v1_2D79];
          int offp2D7C#1 = IAdd(offp2D6F,ilit2501);
          real v0_2D7D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7C);
          int offp2D7E#1 = IAdd(offp2D73,ilit2501);
          real v1_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7E);
          tensor[2] v_2D80#1 = <tensor[2]>[v0_2D7D,v1_2D7F];
          tensor[3,2] voxels2D81#1 = <tensor[3,2]>[v_2D75,v_2D7A,v_2D80];
          goto JOIN2D9B
        JOIN2D9B:  preds = [ASSIGN2D97,ASSIGN2E47]
          tensor[3,2] ldvox2D99#3 = phi(voxels2D81,voxels2E2F)
          real idx2D9E#1 = RSub(f2D61,_t1D8B);
          tensor[2] kernX_2D9C#1 = <tensor[2]>[f2D61,idx2D9E];
          tensor[2] a02DA3#1 = <tensor[2]>[_t1D8B,_t1D8B];
          tensor[2] a12DA4#1 = <tensor[2]>[coeff25C2,_t1D8B];
          tensor[2] prod12DA9#1 = VMul<2>(kernX_2D9C,a12DA4);
          tensor[2] kevalX_d0_2DA2#3 = VAdd<2>(a02DA3,prod12DA9);
          tensor[2] projIx2DB3#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D99);
          real vdot2DB4#1 = VDot<2>(projIx2DB3,kevalX_d0_2DA2);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D99);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA2);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D99);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA2);
          real op1_e3_l_222DC1#2 = RSub(_t1D8B,_t2D2E);
          real op1_e3_l_232DC4#1 = RAdd(_t2D30,op1_e3_l_192D4F);
          real op1_e3_l_242DC7#1 = RAdd(phongKa1D59,op1_e3_l_202D52);
          real r2DCC#1 = RMul(transp1D69,op1_e3_l_222DC1);
          real r2DCD#1 = RMul(r2DCC,op1_e3_l_232DC4);
          real r2DCE#3 = RMul(r2DCD,op1_e3_l_242DC7);
          real r2DCF#1 = RMul(r2DCE,vdot2DB4);
          real r2DD1#1 = RMul(r2DCE,vdot2DB6);
          real r2DD3#1 = RMul(r2DCE,vdot2DB8);
          tensor[3] op1_e3_l_252DCA#1 = <tensor[3]>[r2DCF,r2DD1,r2DD3];
          tensor[3] rgb2DDF#1 = VAdd<3>(rgb1D6B,op1_e3_l_252DCA);
          real op1_e3_l_52DE2#1 = RSub(_t1D8B,op1_e3_l_222DC1);
          real transp2DE5#1 = RMul(transp1D69,op1_e3_l_52DE2);
          goto JOIN2DEA
        JOIN2DEA:  preds = [ASSIGN2DE7,COND2D18]
          tensor[3] rgb2DE8#1 = phi(rgb2DDF,rgb1D6B)
          real transp2DE9#1 = phi(transp2DE5,transp1D69)
          goto JOIN2DED
        JOIN2DED:  preds = [JOIN2DEA,MASSIGN2E4E]
          tensor[3] rgb2DEB#1 = phi(rgb2DE8,rgb1D6B)
          real transp2DEC#1 = phi(transp2DE9,transp1D69)
          goto JOIN2DF0
        JOIN2DF0:  preds = [JOIN2DED,COND1D9F]
          tensor[3] rgb2DEE#1 = phi(rgb2DEB,rgb1D6B)
          real transp2DEF#1 = phi(transp2DEC,transp1D69)
          goto JOIN2DF3
        JOIN2DF3:  preds = [JOIN2DF0,COND1D9C]
          tensor[3] rgb2DF1#1 = phi(rgb2DEE,rgb1D6B)
          real transp2DF2#1 = phi(transp2DEF,transp1D69)
          goto JOIN2DF6
        JOIN2DF6:  preds = [JOIN2DF3,COND1D97]
          tensor[3] rgb2DF4#1 = phi(rgb2DF1,rgb1D6B)
          real transp2DF5#1 = phi(transp2DF2,transp1D69)
          goto JOIN2DF9
        JOIN2DF9:  preds = [JOIN2DF6,COND1D94]
          tensor[3] rgb2DF7#1 = phi(rgb2DF4,rgb1D6B)
          real transp2DF8#1 = phi(transp2DF5,transp1D69)
          goto JOIN2DFC
        JOIN2DFC:  preds = [JOIN2DF9,COND1D8F]
          tensor[3] rgb2DFA#1 = phi(rgb2DF7,rgb1D6B)
          real transp2DFB#1 = phi(transp2DF8,transp1D69)
          goto JOIN2DFF
        JOIN2DFF:  preds = [JOIN2DFC,COND1D8A]
          tensor[3] rgb2DFD#3 = phi(rgb2DFA,rgb1D6B)
          real transp2DFE#2 = phi(transp2DFB,transp1D69)
          real _t2E00#1 = 0.1e-1;
          bool _t2E02#1 = LT<real>(transp2DFE,_t2E00);
          if _t2E02 then goto SAVE2E05 else goto JOIN2E09
        SAVE2E05:  preds = [COND2E04]
          self.transp = _t1D84;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E09
        JOIN2E09:  preds = [*STABILIZE2E07,COND2E04]
          real transp2E08#2 = phi(transp2DFE)
          bool _t2E0A#1 = GT<real>(rayN1D65,camFar1D53);
          if _t2E0A then goto SAVE2E0D else goto JOIN2E10
        SAVE2E0D:  preds = [COND2E0C]
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E10
        JOIN2E10:  preds = [*STABILIZE2E0F,COND2E0C]
          real rayN2E11#1 = RAdd(rayN1D65,rayStep1D57);
          self.rayN = rayN2E11;
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          active
        ASSIGN3278:  preds = [COND2D6A]
          int ix2E1A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,n2D64);
          int offp2E1C#3 = IMul(ilit2504,ix2E1A);
          real v0_2E1D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E1C);
          int addRes2E1F#1 = IAdd(n2D64,ilit24FE);
          int ix2E20#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E1F);
          int offp2E21#3 = IMul(ilit2504,ix2E20);
          real v1_2E22#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E21);
          tensor[2] v_2E23#1 = <tensor[2]>[v0_2E1D,v1_2E22];
          int offp2E24#1 = IAdd(offp2E1C,ilit24FE);
          real v0_2E25#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E24);
          int offp2E26#1 = IAdd(offp2E21,ilit24FE);
          real v1_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E26);
          tensor[2] v_2E28#1 = <tensor[2]>[v0_2E25,v1_2E27];
          int offp2E2A#1 = IAdd(offp2E1C,ilit2501);
          real v0_2E2B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2A);
          int offp2E2C#1 = IAdd(offp2E21,ilit2501);
          real v1_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2C);
          tensor[2] v_2E2E#1 = <tensor[2]>[v0_2E2B,v1_2E2D];
          tensor[3,2] voxels2E2F#1 = <tensor[3,2]>[v_2E23,v_2E28,v_2E2E];
          goto JOIN2D9B
        ASSIGN2E4A:  preds = [COND24EF]
          string _t2E49#1 = "\n";
          Print<[tensor[3],string]>(x1D81,_t2E49);
          string _t2E4C#1 = "wait what\?\n";
          Print<[string]>(_t2E4C);
          goto JOIN2DED
        ASSIGN2E4F:  preds = [COND1D74]
          bool _t1D78#1 = NEQ<int>(vi1D6F,sv1D61);
          goto JOIN1D79
    end update
    method stabilize
        ENTRY2E50:  preds = []
          bool debug2E51#1 = globals.debug1AD5;
          int su2E53#1 = globals.su1AD6;
          int sv2E55#1 = globals.sv1AD7;
          real transp2E57#1 = self.transp;
          tensor[3] rgb2E59#3 = self.rgb;
          tensor[4] rgba2E5B#1 = self.rgba;
          int ui2E5D#1 = self.ui;
          int vi2E5F#1 = self.vi;
          real _t2E61#1 = 0.1e1;
          real a2E63#6 = RSub(_t2E61,transp2E57);
          real _t2E66#1 = 0.e0;
          bool _t2E68#1 = GT<real>(a2E63,_t2E66);
          if _t2E68 then goto ASSIGN2E6C else goto JOIN2E7D
        ASSIGN2E6C:  preds = [COND2E6A]
          real _t2E6B#1 = VIndex<3,0>(rgb2E59);
          real _t2E6D#1 = RDiv(_t2E6B,a2E63);
          real _t2E70#1 = VIndex<3,1>(rgb2E59);
          real _t2E72#1 = RDiv(_t2E70,a2E63);
          real _t2E75#1 = VIndex<3,2>(rgb2E59);
          real _t2E77#1 = RDiv(_t2E75,a2E63);
          tensor[4] rgba2E7A#1 = <tensor[4]>[_t2E6D,_t2E72,_t2E77,a2E63];
          goto JOIN2E7D
        JOIN2E7D:  preds = [ASSIGN2E7B,COND2E6A]
          tensor[4] rgba2E7C#2 = phi(rgba2E7A,rgba2E5B)
          bool _t2E7E#1 = EQ<int>(ui2E5D,su2E53);
          if _t2E7E then goto ASSIGN2E82 else goto JOIN2E88
        ASSIGN2E82:  preds = [COND2E80]
          bool _t2E81#1 = EQ<int>(vi2E5F,sv2E55);
          if _t2E81 then goto COND2E84 else goto JOIN2E87
        COND2E84:  preds = [COND2E83]
          if debug2E51 then goto MASSIGN2E85 else goto JOIN2E86
        MASSIGN2E85:  preds = [COND2E84]
          Print<[real,tensor[4]]>(a2E63,rgba2E7C);
          goto JOIN2E86
        JOIN2E86:  preds = [MASSIGN2E85,COND2E84]
          goto JOIN2E87
        JOIN2E87:  preds = [JOIN2E86,COND2E83]
          goto JOIN2E88
        JOIN2E88:  preds = [JOIN2E87,COND2E80]
          self.rgba = rgba2E7C;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E8B:  preds = []
      int iresU2E8C#1 = globals.iresU1ACC;
      int iresV2E8E#1 = globals.iresV1ACD;
      int _t2E90#2 = 0;
      int _t2E92#2 = 1;
      int _t2E94#1 = ISub(iresV2E8E,_t2E92);
      int[] _t2E96#1 = Range(_t2E90,_t2E94);
    FOREACH2E99:  preds = [ASSIGN2E97,NEXT2EA2]
      foreach (vi2E98 in _t2E96) on exit goto RETURN2EA3
      int _t2E9A#1 = ISub(iresU2E8C,_t2E92);
      int[] _t2E9C#1 = Range(_t2E90,_t2E9A);
    FOREACH2E9F:  preds = [ASSIGN2E9D,NEXT2EA1]
      foreach (ui2E9E in _t2E9C) on exit goto NEXT2EA2
      new raycast(ui2E9E,vi2E98);
      goto FOREACH2E9F
    NEXT2EA2:  preds = [FOREACH2E9F]
      goto FOREACH2E99
    RETURN2EA3:  preds = [FOREACH2E99]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AC3 (a) = <no-default>
  input 0b043B_intermedateGlobal1AC4 (b) = <no-default>
  input 0c043D_intermedateGlobal1AC5 (c) = <no-default>
  input isoval1AC6 (isoval) = <default>
  input thick1AC7 (thick) = <default>
  input camEye1AC8 (camEye) = <default>
  input camAt1AC9 (camAt) = <default>
  input camUp1ACA (camUp) = <default>
  input camFOV1ACB (camFOV) = <default>
  input iresU1ACC (iresU) = <default>
  input iresV1ACD (iresV) = <default>
  input camNear1ACE (camNear) = <default>
  input camFar1ACF (camFar) = <default>
  input refStep1AD0 (refStep) = <default>
  input rayStep1AD1 (rayStep) = <default>
  input lightVsp1AD2 (lightVsp) = <default>
  input phongKa1AD3 (phongKa) = <default>
  input phongKd1AD4 (phongKd) = <default>
  input debug1AD5 (debug) = <default>
  input su1AD6 (su) = <default>
  input sv1AD7 (sv) = <default>
  global real camDist1AD8
  global tensor[3] camN1AD9
  global tensor[3] camU1ADA
  global tensor[3] camV1ADB
  global real camVmax1ADC
  global real camUmax1ADD
  global tensor[3] light1ADE
  global femData:Mesh _t1ADF
  global femData:Space _tX1AE0
  global femData:FemFunc c1AE1
  global image(IMAGE1D<double[3]>) I1AE4
## functions
  function femData:MeshPos findPos1DA1 (femData:Mesh mesh1DA2#19, tensor[3] pos1DA3#3) {
    ENTRY1DA4:  preds = []
      real _t1DA5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1DA7#1 = <tensor[3]>[_t1DA5,_t1DA5,_t1DA5];
      int newtonInt1DA9#1 = 0;
      int[] yayCells1DAB#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1DA2,pos1DA3);
    FOREACH1DAE:  preds = [ASSIGN1DAC,NEXT24E3]
      foreach (cellItter1DAD in yayCells1DAB) on exit goto ASSIGN24E5
        tensor[3] xn24E2#1 = phi(xn1DA7,xn2383)
      int _t1DAF#6 = 2;
      int[] _t1DB1#1 = Range(newtonInt1DA9,_t1DAF);
    FOREACH1DB4:  preds = [ASSIGN1DB2,NEXT24E1]
      foreach (newtonItter1DB3 in _t1DB1) on exit goto NEXT24E3
        tensor[3] xn2383#5 = phi(xn24E2,xn2447)
      int ilit1DB6#1 = 4;
      int mulRes1DB7#4 = IMul(cellItter1DAD,ilit1DB6);
      int idx1DBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,mulRes1DB7);
      int ilit1DBB#5 = 1;
      int addRes1DBC#1 = IAdd(mulRes1DB7,ilit1DBB);
      int idx1DBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBC);
      int addRes1DBF#1 = IAdd(mulRes1DB7,_t1DAF);
      int idx1DC0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBF);
      int ilit1DC1#5 = 3;
      int addRes1DC2#1 = IAdd(mulRes1DB7,ilit1DC1);
      int idx1DC3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DC2);
      int mulRes1DD9#3 = IMul(ilit1DC1,idx1DBA);
      int addRes1DDC#1 = IAdd(ilit1DBB,mulRes1DD9);
      int addRes1DDE#1 = IAdd(_t1DAF,mulRes1DD9);
      real dof_load1DDF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DD9);
      real dof_load1DE0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDC);
      real dof_load1DE1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDE);
      int mulRes1DE4#3 = IMul(ilit1DC1,idx1DBD);
      int addRes1DE6#1 = IAdd(ilit1DBB,mulRes1DE4);
      int addRes1DE7#1 = IAdd(_t1DAF,mulRes1DE4);
      real dof_load1DE8#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DE4);
      real dof_load1DE9#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE7);
      int mulRes1DED#3 = IMul(ilit1DC1,idx1DC0);
      int addRes1DEF#1 = IAdd(ilit1DBB,mulRes1DED);
      int addRes1DF0#1 = IAdd(_t1DAF,mulRes1DED);
      real dof_load1DF1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DED);
      real dof_load1DF2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF0);
      int mulRes1DF6#3 = IMul(ilit1DC1,idx1DC3);
      int addRes1DF8#1 = IAdd(ilit1DBB,mulRes1DF6);
      int addRes1DF9#1 = IAdd(_t1DAF,mulRes1DF6);
      real dof_load1DFA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DF6);
      real dof_load1DFB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF8);
      real dof_load1DFC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF9);
      real coeff1E2D#22 = -0.1e1;
      real one1E2E#33 = 0.1e1;
      real prod1E2F#2 = RMul(one1E2E,one1E2E);
      real prod1E30#2 = RMul(one1E2E,prod1E2F);
      real basisEval1E31#3 = RMul(coeff1E2D,prod1E30);
      real basisEval1E32#10 = RMul(one1E2E,prod1E30);
      real basisEval1E33#45 = 0.e0;
      real r1E4A#2 = RMul(dof_load1DDF,basisEval1E31);
      real r1E4D#1 = RMul(dof_load1DE8,basisEval1E32);
      real r1E50#2 = RMul(dof_load1DF1,basisEval1E33);
      real r1E53#2 = RMul(dof_load1DFA,basisEval1E33);
      real r1E54#1 = RAdd(r1E4A,r1E4D);
      real r1E55#1 = RAdd(r1E54,r1E50);
      real r1E56#13 = RAdd(r1E55,r1E53);
      real r1E5A#1 = RMul(dof_load1DE8,basisEval1E33);
      real r1E5C#1 = RMul(dof_load1DF1,basisEval1E32);
      real r1E5F#2 = RAdd(r1E4A,r1E5A);
      real r1E60#1 = RAdd(r1E5F,r1E5C);
      real r1E61#13 = RAdd(r1E60,r1E53);
      real r1E69#1 = RMul(dof_load1DFA,basisEval1E32);
      real r1E6B#1 = RAdd(r1E5F,r1E50);
      real r1E6C#12 = RAdd(r1E6B,r1E69);
      real r1E6F#2 = RMul(dof_load1DE0,basisEval1E31);
      real r1E71#1 = RMul(dof_load1DE9,basisEval1E32);
      real r1E73#2 = RMul(dof_load1DF2,basisEval1E33);
      real r1E75#2 = RMul(dof_load1DFB,basisEval1E33);
      real r1E76#1 = RAdd(r1E6F,r1E71);
      real r1E77#1 = RAdd(r1E76,r1E73);
      real r1E78#13 = RAdd(r1E77,r1E75);
      real r1E7A#1 = RMul(dof_load1DE9,basisEval1E33);
      real r1E7B#1 = RMul(dof_load1DF2,basisEval1E32);
      real r1E7D#2 = RAdd(r1E6F,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#13 = RAdd(r1E7E,r1E75);
      real r1E83#1 = RMul(dof_load1DFB,basisEval1E32);
      real r1E85#1 = RAdd(r1E7D,r1E73);
      real r1E86#12 = RAdd(r1E85,r1E83);
      real r1E89#2 = RMul(dof_load1DE1,basisEval1E31);
      real r1E8B#1 = RMul(dof_load1DEA,basisEval1E32);
      real r1E8D#2 = RMul(dof_load1DF3,basisEval1E33);
      real r1E8F#2 = RMul(dof_load1DFC,basisEval1E33);
      real r1E90#1 = RAdd(r1E89,r1E8B);
      real r1E91#1 = RAdd(r1E90,r1E8D);
      real r1E92#13 = RAdd(r1E91,r1E8F);
      real r1E94#1 = RMul(dof_load1DEA,basisEval1E33);
      real r1E95#1 = RMul(dof_load1DF3,basisEval1E32);
      real r1E97#2 = RAdd(r1E89,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#13 = RAdd(r1E98,r1E8F);
      real r1E9D#1 = RMul(dof_load1DFC,basisEval1E32);
      real r1E9F#1 = RAdd(r1E97,r1E8D);
      real r1EA0#12 = RAdd(r1E9F,r1E9D);
      real r1F01#3 = RMul(basisEval1E33,r1E56);
      real r1F03#3 = RMul(basisEval1E33,r1E78);
      real r1F05#5 = RMul(basisEval1E33,r1E92);
      real r1F06#3 = RAdd(r1F01,r1F03);
      real r1F07#9 = RAdd(r1F06,r1F05);
      real r1F09#3 = RMul(basisEval1E33,r1E61);
      real r1F0B#3 = RMul(basisEval1E33,r1E7F);
      real r1F0D#5 = RMul(basisEval1E33,r1E99);
      real r1F0E#3 = RAdd(r1F09,r1F0B);
      real r1F0F#9 = RAdd(r1F0E,r1F0D);
      real r1F11#3 = RMul(basisEval1E33,r1E6C);
      real r1F13#3 = RMul(basisEval1E33,r1E86);
      real r1F15#5 = RMul(basisEval1E33,r1EA0);
      real r1F16#3 = RAdd(r1F11,r1F13);
      real r1F17#12 = RAdd(r1F16,r1F15);
      real r1F1A#1 = RMul(coeff1E2D,r1E92);
      real r1F1B#3 = RAdd(r1F06,r1F1A);
      real r1F1C#1 = RMul(coeff1E2D,r1E99);
      real r1F1D#3 = RAdd(r1F0E,r1F1C);
      real r1F1E#1 = RMul(coeff1E2D,r1EA0);
      real r1F1F#4 = RAdd(r1F16,r1F1E);
      real r1F22#1 = RMul(one1E2E,r1E78);
      real r1F23#1 = RAdd(r1F01,r1F22);
      real r1F24#3 = RAdd(r1F23,r1F05);
      real r1F25#1 = RMul(one1E2E,r1E7F);
      real r1F26#1 = RAdd(r1F09,r1F25);
      real r1F27#3 = RAdd(r1F26,r1F0D);
      real r1F28#1 = RMul(one1E2E,r1E86);
      real r1F29#1 = RAdd(r1F11,r1F28);
      real r1F2A#4 = RAdd(r1F29,r1F15);
      real r1F2D#1 = RMul(one1E2E,r1E92);
      real r1F2E#3 = RAdd(r1F06,r1F2D);
      real r1F2F#1 = RMul(one1E2E,r1E99);
      real r1F30#3 = RAdd(r1F0E,r1F2F);
      real r1F31#1 = RMul(one1E2E,r1EA0);
      real r1F32#4 = RAdd(r1F16,r1F31);
      real r1F34#1 = RMul(coeff1E2D,r1E56);
      real r1F35#1 = RAdd(r1F34,r1F03);
      real r1F36#3 = RAdd(r1F35,r1F05);
      real r1F37#1 = RMul(coeff1E2D,r1E61);
      real r1F38#1 = RAdd(r1F37,r1F0B);
      real r1F39#3 = RAdd(r1F38,r1F0D);
      real r1F3A#1 = RMul(coeff1E2D,r1E6C);
      real r1F3B#1 = RAdd(r1F3A,r1F13);
      real r1F3C#4 = RAdd(r1F3B,r1F15);
      real r1F3F#1 = RMul(coeff1E2D,r1E78);
      real r1F40#1 = RAdd(r1F01,r1F3F);
      real r1F41#3 = RAdd(r1F40,r1F05);
      real r1F42#1 = RMul(coeff1E2D,r1E7F);
      real r1F43#1 = RAdd(r1F09,r1F42);
      real r1F44#3 = RAdd(r1F43,r1F0D);
      real r1F45#1 = RMul(coeff1E2D,r1E86);
      real r1F46#1 = RAdd(r1F11,r1F45);
      real r1F47#4 = RAdd(r1F46,r1F15);
      real r1F49#1 = RMul(one1E2E,r1E56);
      real r1F4A#1 = RAdd(r1F49,r1F03);
      real r1F4B#3 = RAdd(r1F4A,r1F05);
      real r1F4C#1 = RMul(one1E2E,r1E61);
      real r1F4D#1 = RAdd(r1F4C,r1F0B);
      real r1F4E#3 = RAdd(r1F4D,r1F0D);
      real r1F4F#1 = RMul(one1E2E,r1E6C);
      real r1F50#1 = RAdd(r1F4F,r1F13);
      real r1F51#4 = RAdd(r1F50,r1F15);
      real r1FAE#1 = RMul(r1E56,r1F07);
      real r1FB1#1 = RMul(r1E78,r1F2E);
      real r1FB4#1 = RMul(r1E92,r1F41);
      real r1FB5#1 = RAdd(r1FAE,r1FB1);
      real r1FB6#1 = RAdd(r1FB5,r1FB4);
      real r1FB8#1 = RMul(r1E56,r1F0F);
      real r1FBA#1 = RMul(r1E78,r1F30);
      real r1FBC#1 = RMul(r1E92,r1F44);
      real r1FBD#1 = RAdd(r1FB8,r1FBA);
      real r1FBE#2 = RAdd(r1FBD,r1FBC);
      real r1FC0#1 = RMul(r1E56,r1F17);
      real r1FC2#1 = RMul(r1E78,r1F32);
      real r1FC4#1 = RMul(r1E92,r1F47);
      real r1FC5#1 = RAdd(r1FC0,r1FC2);
      real r1FC6#2 = RAdd(r1FC5,r1FC4);
      real r1FC9#1 = RMul(r1E56,r1F1B);
      real r1FCB#1 = RMul(r1E78,r1F07);
      real r1FCD#1 = RMul(r1E92,r1F4B);
      real r1FCE#1 = RAdd(r1FC9,r1FCB);
      real r1FCF#1 = RAdd(r1FCE,r1FCD);
      real r1FD1#1 = RMul(r1E56,r1F1D);
      real r1FD3#1 = RMul(r1E78,r1F0F);
      real r1FD5#1 = RMul(r1E92,r1F4E);
      real r1FD6#1 = RAdd(r1FD1,r1FD3);
      real r1FD7#2 = RAdd(r1FD6,r1FD5);
      real r1FD9#1 = RMul(r1E56,r1F1F);
      real r1FDB#1 = RMul(r1E78,r1F17);
      real r1FDD#1 = RMul(r1E92,r1F51);
      real r1FDE#1 = RAdd(r1FD9,r1FDB);
      real r1FDF#2 = RAdd(r1FDE,r1FDD);
      real r1FE2#1 = RMul(r1E56,r1F24);
      real r1FE4#1 = RMul(r1E78,r1F36);
      real r1FE6#1 = RMul(r1E92,r1F07);
      real r1FE7#1 = RAdd(r1FE2,r1FE4);
      real r1FE8#1 = RAdd(r1FE7,r1FE6);
      real r1FEA#1 = RMul(r1E56,r1F27);
      real r1FEC#1 = RMul(r1E78,r1F39);
      real r1FEE#1 = RMul(r1E92,r1F0F);
      real r1FEF#1 = RAdd(r1FEA,r1FEC);
      real r1FF0#2 = RAdd(r1FEF,r1FEE);
      real r1FF2#1 = RMul(r1E56,r1F2A);
      real r1FF4#1 = RMul(r1E78,r1F3C);
      real r1FF6#1 = RMul(r1E92,r1F17);
      real r1FF7#1 = RAdd(r1FF2,r1FF4);
      real r1FF8#2 = RAdd(r1FF7,r1FF6);
      real r1FFC#1 = RMul(r1E61,r1F07);
      real r1FFE#1 = RMul(r1E7F,r1F2E);
      real r2000#1 = RMul(r1E99,r1F41);
      real r2001#1 = RAdd(r1FFC,r1FFE);
      real r2002#2 = RAdd(r2001,r2000);
      real r2003#1 = RMul(r1E61,r1F0F);
      real r2004#1 = RMul(r1E7F,r1F30);
      real r2005#1 = RMul(r1E99,r1F44);
      real r2006#1 = RAdd(r2003,r2004);
      real r2007#1 = RAdd(r2006,r2005);
      real r2008#1 = RMul(r1E61,r1F17);
      real r2009#1 = RMul(r1E7F,r1F32);
      real r200A#1 = RMul(r1E99,r1F47);
      real r200B#1 = RAdd(r2008,r2009);
      real r200C#2 = RAdd(r200B,r200A);
      real r200E#1 = RMul(r1E61,r1F1B);
      real r200F#1 = RMul(r1E7F,r1F07);
      real r2010#1 = RMul(r1E99,r1F4B);
      real r2011#1 = RAdd(r200E,r200F);
      real r2012#2 = RAdd(r2011,r2010);
      real r2013#1 = RMul(r1E61,r1F1D);
      real r2014#1 = RMul(r1E7F,r1F0F);
      real r2015#1 = RMul(r1E99,r1F4E);
      real r2016#1 = RAdd(r2013,r2014);
      real r2017#1 = RAdd(r2016,r2015);
      real r2018#1 = RMul(r1E61,r1F1F);
      real r2019#1 = RMul(r1E7F,r1F17);
      real r201A#1 = RMul(r1E99,r1F51);
      real r201B#1 = RAdd(r2018,r2019);
      real r201C#2 = RAdd(r201B,r201A);
      real r201E#1 = RMul(r1E61,r1F24);
      real r201F#1 = RMul(r1E7F,r1F36);
      real r2020#1 = RMul(r1E99,r1F07);
      real r2021#1 = RAdd(r201E,r201F);
      real r2022#2 = RAdd(r2021,r2020);
      real r2023#1 = RMul(r1E61,r1F27);
      real r2024#1 = RMul(r1E7F,r1F39);
      real r2025#1 = RMul(r1E99,r1F0F);
      real r2026#1 = RAdd(r2023,r2024);
      real r2027#1 = RAdd(r2026,r2025);
      real r2028#1 = RMul(r1E61,r1F2A);
      real r2029#1 = RMul(r1E7F,r1F3C);
      real r202A#1 = RMul(r1E99,r1F17);
      real r202B#1 = RAdd(r2028,r2029);
      real r202C#2 = RAdd(r202B,r202A);
      real r2030#1 = RMul(r1E6C,r1F07);
      real r2032#1 = RMul(r1E86,r1F2E);
      real r2034#1 = RMul(r1EA0,r1F41);
      real r2035#1 = RAdd(r2030,r2032);
      real r2036#2 = RAdd(r2035,r2034);
      real r2037#1 = RMul(r1E6C,r1F0F);
      real r2038#1 = RMul(r1E86,r1F30);
      real r2039#1 = RMul(r1EA0,r1F44);
      real r203A#1 = RAdd(r2037,r2038);
      real r203B#2 = RAdd(r203A,r2039);
      real r203C#1 = RMul(r1E6C,r1F17);
      real r203D#1 = RMul(r1E86,r1F32);
      real r203E#1 = RMul(r1EA0,r1F47);
      real r203F#1 = RAdd(r203C,r203D);
      real r2040#1 = RAdd(r203F,r203E);
      real r2042#1 = RMul(r1E6C,r1F1B);
      real r2043#1 = RMul(r1E86,r1F07);
      real r2044#1 = RMul(r1EA0,r1F4B);
      real r2045#1 = RAdd(r2042,r2043);
      real r2046#2 = RAdd(r2045,r2044);
      real r2047#1 = RMul(r1E6C,r1F1D);
      real r2048#1 = RMul(r1E86,r1F0F);
      real r2049#1 = RMul(r1EA0,r1F4E);
      real r204A#1 = RAdd(r2047,r2048);
      real r204B#2 = RAdd(r204A,r2049);
      real r204C#1 = RMul(r1E6C,r1F1F);
      real r204D#1 = RMul(r1E86,r1F17);
      real r204E#1 = RMul(r1EA0,r1F51);
      real r204F#1 = RAdd(r204C,r204D);
      real r2050#1 = RAdd(r204F,r204E);
      real r2052#1 = RMul(r1E6C,r1F24);
      real r2053#1 = RMul(r1E86,r1F36);
      real r2054#1 = RMul(r1EA0,r1F07);
      real r2055#1 = RAdd(r2052,r2053);
      real r2056#2 = RAdd(r2055,r2054);
      real r2057#1 = RMul(r1E6C,r1F27);
      real r2058#1 = RMul(r1E86,r1F39);
      real r2059#1 = RMul(r1EA0,r1F0F);
      real r205A#1 = RAdd(r2057,r2058);
      real r205B#2 = RAdd(r205A,r2059);
      real r205C#1 = RMul(r1E6C,r1F2A);
      real r205D#1 = RMul(r1E86,r1F3C);
      real r205E#1 = RMul(r1EA0,r1F17);
      real r205F#1 = RAdd(r205C,r205D);
      real r2060#1 = RAdd(r205F,r205E);
      tensor[3] probe_l_14211C#1 = <tensor[3]>[r1E56,r1E78,r1E92];
      tensor[3] probe_l_152169#3 = <tensor[3]>[r1E61,r1E7F,r1E99];
      tensor[3] tensor2214#1 = <tensor[3]>[r1F17,r1F32,r1F47];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F1F,r1F17,r1F51];
      tensor[3] tensor2221#1 = <tensor[3]>[r1F2A,r1F3C,r1F17];
      real vdot2244#1 = VDot<3>(probe_l_152169,tensor2214);
      real vdot2246#1 = VDot<3>(probe_l_152169,tensor221A);
      real vdot2248#1 = VDot<3>(probe_l_152169,tensor2221);
      tensor[3] op1_e3_l_182242#1 = <tensor[3]>[vdot2244,vdot2246,vdot2248];
      real op1_e3_l_192251#1 = VDot<3>(probe_l_14211C,op1_e3_l_182242);
      real r2257#2 = RMul(basisEval1E33,r1FB6);
      real r2259#1 = RMul(basisEval1E33,r1FBE);
      real r225B#2 = RMul(basisEval1E33,r1FC6);
      real r225D#2 = RMul(basisEval1E33,r2002);
      real r225F#3 = RMul(basisEval1E33,r2007);
      real r2262#1 = RMul(one1E2E,r200C);
      real r2264#2 = RMul(basisEval1E33,r2036);
      real r2267#1 = RMul(coeff1E2D,r203B);
      real r2269#3 = RMul(basisEval1E33,r2040);
      real r226A#2 = RAdd(r2257,r2259);
      real r226B#1 = RAdd(r226A,r225B);
      real r226C#1 = RAdd(r226B,r225D);
      real r226D#1 = RAdd(r226C,r225F);
      real r226E#1 = RAdd(r226D,r2262);
      real r226F#1 = RAdd(r226E,r2264);
      real r2270#1 = RAdd(r226F,r2267);
      real r2271#1 = RAdd(r2270,r2269);
      real r2273#2 = RMul(basisEval1E33,r1FCF);
      real r2275#1 = RMul(basisEval1E33,r1FD7);
      real r2277#2 = RMul(basisEval1E33,r1FDF);
      real r2279#2 = RMul(basisEval1E33,r2012);
      real r227B#3 = RMul(basisEval1E33,r2017);
      real r227D#1 = RMul(one1E2E,r201C);
      real r227F#2 = RMul(basisEval1E33,r2046);
      real r2281#1 = RMul(coeff1E2D,r204B);
      real r2283#3 = RMul(basisEval1E33,r2050);
      real r2284#2 = RAdd(r2273,r2275);
      real r2285#1 = RAdd(r2284,r2277);
      real r2286#1 = RAdd(r2285,r2279);
      real r2287#1 = RAdd(r2286,r227B);
      real r2288#1 = RAdd(r2287,r227D);
      real r2289#1 = RAdd(r2288,r227F);
      real r228A#1 = RAdd(r2289,r2281);
      real r228B#1 = RAdd(r228A,r2283);
      real r228D#2 = RMul(basisEval1E33,r1FE8);
      real r228F#1 = RMul(basisEval1E33,r1FF0);
      real r2291#2 = RMul(basisEval1E33,r1FF8);
      real r2293#2 = RMul(basisEval1E33,r2022);
      real r2295#3 = RMul(basisEval1E33,r2027);
      real r2297#1 = RMul(one1E2E,r202C);
      real r2299#2 = RMul(basisEval1E33,r2056);
      real r229B#1 = RMul(coeff1E2D,r205B);
      real r229D#3 = RMul(basisEval1E33,r2060);
      real r229E#2 = RAdd(r228D,r228F);
      real r229F#1 = RAdd(r229E,r2291);
      real r22A0#1 = RAdd(r229F,r2293);
      real r22A1#1 = RAdd(r22A0,r2295);
      real r22A2#1 = RAdd(r22A1,r2297);
      real r22A3#1 = RAdd(r22A2,r2299);
      real r22A4#1 = RAdd(r22A3,r229B);
      real r22A5#1 = RAdd(r22A4,r229D);
      real r22A7#1 = RMul(coeff1E2D,r1FC6);
      real r22A8#2 = RMul(basisEval1E33,r200C);
      real r22A9#1 = RMul(one1E2E,r2036);
      real r22AA#2 = RMul(basisEval1E33,r203B);
      real r22AB#1 = RAdd(r226A,r22A7);
      real r22AC#1 = RAdd(r22AB,r225D);
      real r22AD#1 = RAdd(r22AC,r225F);
      real r22AE#1 = RAdd(r22AD,r22A8);
      real r22AF#1 = RAdd(r22AE,r22A9);
      real r22B0#1 = RAdd(r22AF,r22AA);
      real r22B1#1 = RAdd(r22B0,r2269);
      real r22B2#1 = RMul(coeff1E2D,r1FDF);
      real r22B3#2 = RMul(basisEval1E33,r201C);
      real r22B4#1 = RMul(one1E2E,r2046);
      real r22B5#2 = RMul(basisEval1E33,r204B);
      real r22B6#1 = RAdd(r2284,r22B2);
      real r22B7#1 = RAdd(r22B6,r2279);
      real r22B8#1 = RAdd(r22B7,r227B);
      real r22B9#1 = RAdd(r22B8,r22B3);
      real r22BA#1 = RAdd(r22B9,r22B4);
      real r22BB#1 = RAdd(r22BA,r22B5);
      real r22BC#1 = RAdd(r22BB,r2283);
      real r22BD#1 = RMul(coeff1E2D,r1FF8);
      real r22BE#2 = RMul(basisEval1E33,r202C);
      real r22BF#1 = RMul(one1E2E,r2056);
      real r22C0#2 = RMul(basisEval1E33,r205B);
      real r22C1#1 = RAdd(r229E,r22BD);
      real r22C2#1 = RAdd(r22C1,r2293);
      real r22C3#1 = RAdd(r22C2,r2295);
      real r22C4#1 = RAdd(r22C3,r22BE);
      real r22C5#1 = RAdd(r22C4,r22BF);
      real r22C6#1 = RAdd(r22C5,r22C0);
      real r22C7#1 = RAdd(r22C6,r229D);
      real r22C9#1 = RMul(one1E2E,r1FBE);
      real r22CA#1 = RMul(coeff1E2D,r2002);
      real r22CB#1 = RAdd(r2257,r22C9);
      real r22CC#1 = RAdd(r22CB,r225B);
      real r22CD#1 = RAdd(r22CC,r22CA);
      real r22CE#1 = RAdd(r22CD,r225F);
      real r22CF#1 = RAdd(r22CE,r22A8);
      real r22D0#1 = RAdd(r22CF,r2264);
      real r22D1#1 = RAdd(r22D0,r22AA);
      real r22D2#1 = RAdd(r22D1,r2269);
      real r22D3#1 = RMul(one1E2E,r1FD7);
      real r22D4#1 = RMul(coeff1E2D,r2012);
      real r22D5#1 = RAdd(r2273,r22D3);
      real r22D6#1 = RAdd(r22D5,r2277);
      real r22D7#1 = RAdd(r22D6,r22D4);
      real r22D8#1 = RAdd(r22D7,r227B);
      real r22D9#1 = RAdd(r22D8,r22B3);
      real r22DA#1 = RAdd(r22D9,r227F);
      real r22DB#1 = RAdd(r22DA,r22B5);
      real r22DC#1 = RAdd(r22DB,r2283);
      real r22DD#1 = RMul(one1E2E,r1FF0);
      real r22DE#1 = RMul(coeff1E2D,r2022);
      real r22DF#1 = RAdd(r228D,r22DD);
      real r22E0#1 = RAdd(r22DF,r2291);
      real r22E1#1 = RAdd(r22E0,r22DE);
      real r22E2#1 = RAdd(r22E1,r2295);
      real r22E3#1 = RAdd(r22E2,r22BE);
      real r22E4#1 = RAdd(r22E3,r2299);
      real r22E5#1 = RAdd(r22E4,r22C0);
      real r22E6#1 = RAdd(r22E5,r229D);
      real realLit237E#1 = 0.2e1;
      real op1_e3_l_21237D#9 = RMul(realLit237E,op1_e3_l_192251);
      real varAcc2384#1 = VIndex<3,0>(xn2383);
      real varAcc2385#1 = VIndex<3,1>(xn2383);
      real varAcc2386#1 = VIndex<3,2>(xn2383);
      real prod238B#2 = RMul(varAcc2384,prod1E2F);
      real prod238D#1 = RMul(varAcc2385,one1E2E);
      real prod238E#2 = RMul(one1E2E,prod238D);
      real prod2390#1 = RMul(one1E2E,varAcc2386);
      real prod2391#2 = RMul(one1E2E,prod2390);
      real mult2394#1 = RMul(coeff1E2D,prod2391);
      real mult2395#1 = RMul(coeff1E2D,prod238E);
      real mult2396#1 = RMul(coeff1E2D,prod238B);
      real sum2397#1 = RAdd(mult2395,mult2396);
      real sum2398#1 = RAdd(mult2394,sum2397);
      real sum2399#3 = RAdd(basisEval1E32,sum2398);
      real basisEval239B#3 = RMul(one1E2E,prod238B);
      real basisEval239C#3 = RMul(one1E2E,prod238E);
      real basisEval239D#3 = RMul(one1E2E,prod2391);
      real r23BE#1 = RMul(dof_load1DDF,sum2399);
      real r23C1#1 = RMul(dof_load1DE8,basisEval239B);
      real r23C4#1 = RMul(dof_load1DF1,basisEval239C);
      real r23C7#1 = RMul(dof_load1DFA,basisEval239D);
      real r23C8#1 = RAdd(r23BE,r23C1);
      real r23C9#1 = RAdd(r23C8,r23C4);
      real r23CA#1 = RAdd(r23C9,r23C7);
      real r23CC#1 = RMul(dof_load1DE0,sum2399);
      real r23CE#1 = RMul(dof_load1DE9,basisEval239B);
      real r23D0#1 = RMul(dof_load1DF2,basisEval239C);
      real r23D2#1 = RMul(dof_load1DFB,basisEval239D);
      real r23D3#1 = RAdd(r23CC,r23CE);
      real r23D4#1 = RAdd(r23D3,r23D0);
      real r23D5#1 = RAdd(r23D4,r23D2);
      real r23D7#1 = RMul(dof_load1DE1,sum2399);
      real r23D9#1 = RMul(dof_load1DEA,basisEval239B);
      real r23DB#1 = RMul(dof_load1DF3,basisEval239C);
      real r23DD#1 = RMul(dof_load1DFC,basisEval239D);
      real r23DE#1 = RAdd(r23D7,r23D9);
      real r23DF#1 = RAdd(r23DE,r23DB);
      real r23E0#1 = RAdd(r23DF,r23DD);
      tensor[3] probe_l_2223BB#1 = <tensor[3]>[r23CA,r23D5,r23E0];
      real r240A#1 = RDiv(r2271,op1_e3_l_21237D);
      real r240C#1 = RDiv(r228B,op1_e3_l_21237D);
      real r240E#1 = RDiv(r22A5,op1_e3_l_21237D);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22B1,op1_e3_l_21237D);
      real r2413#1 = RDiv(r22BC,op1_e3_l_21237D);
      real r2415#1 = RDiv(r22C7,op1_e3_l_21237D);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      real r2418#1 = RDiv(r22D2,op1_e3_l_21237D);
      real r241A#1 = RDiv(r22DC,op1_e3_l_21237D);
      real r241C#1 = RDiv(r22E6,op1_e3_l_21237D);
      tensor[3] tensor241D#1 = <tensor[3]>[r2418,r241A,r241C];
      tensor[3] op1_e3_l_242435#3 = VSub<3>(probe_l_2223BB,pos1DA3);
      real vdot243A#1 = VDot<3>(tensor240F,op1_e3_l_242435);
      real vdot243C#1 = VDot<3>(tensor2416,op1_e3_l_242435);
      real vdot243E#1 = VDot<3>(tensor241D,op1_e3_l_242435);
      tensor[3] op1_e3_l_252438#3 = <tensor[3]>[vdot243A,vdot243C,vdot243E];
      tensor[3] xn2447#4 = VSub<3>(xn2383,op1_e3_l_252438);
      real _t244A#2 = 0.1e-7;
      real _t244C#1 = RMul(_t244A,_t244A);
      real _t24AE#1 = VDot<3>(op1_e3_l_252438,op1_e3_l_252438);
      bool _t24B1#1 = GTE<real>(_t244C,_t24AE);
      if _t24B1 then goto ASSIGN24B7 else goto JOIN24E0
    ASSIGN24B7:  preds = [COND24B3]
      real _t24B6#4 = 0.1e-4;
      real _t24B8#1 = RAdd(one1E2E,_t24B6);
      tensor[3] _t24BB#1 = <tensor[3]>[one1E2E,one1E2E,one1E2E];
      real _t24BD#1 = VDot<3>(_t24BB,xn2447);
      bool _t24C0#1 = GT<real>(_t24B8,_t24BD);
      tensor[3] _t24C2#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24C4#3 = VAdd<3>(_t24C2,xn2447);
      real _t24C7#1 = VIndex<3,0>(_t24C4);
      real _t24C9#3 = -0.e0;
      bool _t24CB#1 = GT<real>(_t24C7,_t24C9);
      real _t24CD#1 = VIndex<3,1>(_t24C4);
      bool _t24CF#1 = GT<real>(_t24CD,_t24C9);
      real _t24D1#1 = VIndex<3,2>(_t24C4);
      bool _t24D3#1 = GT<real>(_t24D1,_t24C9);
      bool _t24D5#1 = BAnd(_t24CF,_t24D3);
      bool _t24D7#1 = BAnd(_t24CB,_t24D5);
      bool _t24D9#1 = BAnd(_t24C0,_t24D7);
      if _t24D9 then goto ASSIGN24DD else goto JOIN24DF
    ASSIGN24DD:  preds = [COND24DB]
      femData:MeshPos _t24DC#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1DA2,cellItter1DAD,xn2447,pos1DA3);
      return _t24DC
      goto JOIN24DF
    JOIN24DF:  preds = [*RETURN(_t24DC)24DE,COND24DB]
      goto JOIN24E0
    JOIN24E0:  preds = [JOIN24DF,COND24B3]
      goto FOREACH1DB4
    NEXT24E3:  preds = [FOREACH1DB4]
      goto FOREACH1DAE
    ASSIGN24E5:  preds = [FOREACH1DAE]
      string _t24E4#1 = "Bad end 2";
      string _t24E6#1 = "\n";
      Print<[string,string]>(_t24E4,_t24E6);
      femData:MeshPos _t24E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1DA2);
      return _t24E9
}
## input initialization
  ENTRY1AE5:  preds = []
    real isoval1AE6#1 = 0.2e0;
    globals.isoval1AC6 = isoval1AE6;
    real thick1AE9#1 = 0.7e-1;
    globals.thick1AC7 = thick1AE9;
    real _t1AEC#2 = 0.3e1;
    real _t1AEE#1 = -0.3e1;
    tensor[3] camEye1AF0#1 = <tensor[3]>[_t1AEC,_t1AEE,_t1AEC];
    globals.camEye1AC8 = camEye1AF0;
    real _t1AF3#3 = 0.5e0;
    tensor[3] camAt1AF5#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1AF3];
    globals.camAt1AC9 = camAt1AF5;
    real _t1AF8#2 = 0.e0;
    real _t1AFA#2 = 0.1e1;
    tensor[3] camUp1AFC#2 = <tensor[3]>[_t1AF8,_t1AF8,_t1AFA];
    globals.camUp1ACA = camUp1AFC;
    real camFOV1AFF#1 = 0.137e2;
    globals.camFOV1ACB = camFOV1AFF;
    int iresU1B02#2 = 500;
    globals.iresU1ACC = iresU1B02;
    globals.iresV1ACD = iresU1B02;
    real camNear1B06#1 = -0.2e1;
    globals.camNear1ACE = camNear1B06;
    real camFar1B09#1 = 0.5e1;
    globals.camFar1ACF = camFar1B09;
    globals.refStep1AD0 = _t1AFA;
    real rayStep1B0D#1 = 0.1e-1;
    globals.rayStep1AD1 = rayStep1B0D;
    globals.lightVsp1AD2 = camUp1AFC;
    real phongKa1B11#1 = 0.1e0;
    globals.phongKa1AD3 = phongKa1B11;
    real phongKd1B14#1 = 0.9e0;
    globals.phongKd1AD4 = phongKd1B14;
    bool debug1B17#1 = false;
    globals.debug1AD5 = debug1B17;
    int su1B1A#2 = 250;
    globals.su1AD6 = su1B1A;
    globals.sv1AD7 = su1B1A;
    return
## global-variable initialization
  ENTRY1B1F:  preds = []
    femData:Mesh a1B20#3 = globals.a1AC3;
    femData:Space 0b043B_intermedateGlobal1B22#1 = globals.0b043B_intermedateGlobal1AC4;
    femData:FemFunc 0c043D_intermedateGlobal1B24#1 = globals.0c043D_intermedateGlobal1AC5;
    tensor[3] camEye1B26#1 = globals.camEye1AC8;
    tensor[3] camAt1B28#1 = globals.camAt1AC9;
    tensor[3] camUp1B2A#3 = globals.camUp1ACA;
    real camFOV1B2C#1 = globals.camFOV1ACB;
    int iresU1B2E#1 = globals.iresU1ACC;
    int iresV1B30#1 = globals.iresV1ACD;
    tensor[3] lightVsp1B32#5 = globals.lightVsp1AD2;
    int _t1B34#1 = 0;
    int _t1B36#1 = 1;
    int _t1B38#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B20);
    int _t1B3A#1 = ISub(_t1B38,_t1B36);
    int[] _t1B3C#1 = Range(_t1B34,_t1B3A);
    femData:MeshCell[] _t1B3E#1 = <femData:MeshCell[]>{};
  FOREACH1B41:  preds = [ASSIGN1B3F,NEXT1B47]
    foreach (_t1B40 in _t1B3C) on exit goto ASSIGN1B49
      femData:MeshCell[] _t1B45#1 = phi(_t1B3E,_t1B44)
    femData:MeshCell _t1B42#1 = LoadFem<femData:MeshCell>(a1B20,_t1B40);
    femData:MeshCell[] _t1B44#1 = Append<femData:MeshCell>(_t1B45,_t1B42);
    goto FOREACH1B41
  ASSIGN1B49:  preds = [FOREACH1B41]
    femData:Space b1B48#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1B22,a1B20);
    femData:FemFunc c1B4A#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1B24,b1B48);
    femData:Space _t1B4C#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B4A);
    femData:Mesh _t1B4E#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B4C);
    image(IMAGE1D<double[3]>) I1B50#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B56#9 = VSub<3>(camAt1B28,camEye1B26);
    real op1_e3_l_41B59#1 = VDot<3>(op1_e3_l_21B56,op1_e3_l_21B56);
    real camDist1B5C#4 = Sqrt(op1_e3_l_41B59);
    globals.camDist1AD8 = camDist1B5C;
    real realLit1B61#9 = 0.1e1;
    real op1_e3_l_91B60#6 = RDiv(realLit1B61,camDist1B5C);
    tensor[3] camN1B65#4 = VScale<3>(op1_e3_l_91B60,op1_e3_l_21B56);
    globals.camN1AD9 = camN1B65;
    real realLit1B6A#6 = 0.e0;
    real r1B6B#3 = TensorIndex<tensor[3],[0]>(camUp1B2A);
    real r1B6C#3 = RMul(realLit1B6A,r1B6B);
    real r1B6D#3 = TensorIndex<tensor[3],[1]>(camUp1B2A);
    real r1B6E#3 = RMul(realLit1B6A,r1B6D);
    real r1B6F#3 = TensorIndex<tensor[3],[2]>(camUp1B2A);
    real r1B70#5 = RMul(realLit1B6A,r1B6F);
    real r1B71#3 = RAdd(r1B6C,r1B6E);
    real r1B72#3 = RAdd(r1B71,r1B70);
    real r1B74#1 = RMul(realLit1B61,r1B6F);
    real r1B75#1 = RAdd(r1B71,r1B74);
    real realLit1B76#6 = -0.1e1;
    real r1B77#1 = RMul(realLit1B76,r1B6D);
    real r1B78#1 = RAdd(r1B6C,r1B77);
    real r1B79#1 = RAdd(r1B78,r1B70);
    tensor[3] tensor1B7A#1 = <tensor[3]>[r1B72,r1B75,r1B79];
    real r1B7B#1 = RMul(realLit1B76,r1B6F);
    real r1B7C#1 = RAdd(r1B71,r1B7B);
    real r1B7D#1 = RMul(realLit1B61,r1B6B);
    real r1B7E#1 = RAdd(r1B7D,r1B6E);
    real r1B7F#1 = RAdd(r1B7E,r1B70);
    tensor[3] tensor1B80#1 = <tensor[3]>[r1B7C,r1B72,r1B7F];
    real r1B81#1 = RMul(realLit1B61,r1B6D);
    real r1B82#1 = RAdd(r1B6C,r1B81);
    real r1B83#1 = RAdd(r1B82,r1B70);
    real r1B84#1 = RMul(realLit1B76,r1B6B);
    real r1B85#1 = RAdd(r1B84,r1B6E);
    real r1B86#1 = RAdd(r1B85,r1B70);
    tensor[3] tensor1B87#1 = <tensor[3]>[r1B83,r1B86,r1B72];
    real vdot1BAA#1 = VDot<3>(op1_e3_l_21B56,tensor1B7A);
    real vdot1BAC#1 = VDot<3>(op1_e3_l_21B56,tensor1B80);
    real vdot1BAE#1 = VDot<3>(op1_e3_l_21B56,tensor1B87);
    tensor[3] op1_e3_l_171BA8#6 = <tensor[3]>[vdot1BAA,vdot1BAC,vdot1BAE];
    real op1_e3_l_341BB7#1 = VDot<3>(op1_e3_l_171BA8,op1_e3_l_171BA8);
    real r1BBB#1 = RMul(op1_e3_l_91B60,op1_e3_l_91B60);
    real op1_e3_l_351BBA#1 = RMul(r1BBB,op1_e3_l_341BB7);
    real op1_e3_l_361BBF#1 = Sqrt(op1_e3_l_351BBA);
    tensor[3] op1_e3_l_371BC2#1 = VScale<3>(op1_e3_l_91B60,op1_e3_l_171BA8);
    real op1_e3_l_381BC5#2 = RDiv(realLit1B61,op1_e3_l_361BBF);
    tensor[3] camU1BCA#4 = VScale<3>(op1_e3_l_381BC5,op1_e3_l_371BC2);
    globals.camU1ADA = camU1BCA;
    real r1BD0#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B56);
    real r1BD1#3 = RMul(realLit1B6A,r1BD0);
    real r1BD2#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B56);
    real r1BD3#3 = RMul(realLit1B6A,r1BD2);
    real r1BD4#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B56);
    real r1BD5#5 = RMul(realLit1B6A,r1BD4);
    real r1BD6#3 = RAdd(r1BD1,r1BD3);
    real r1BD7#3 = RAdd(r1BD6,r1BD5);
    real r1BD9#1 = RMul(realLit1B61,r1BD4);
    real r1BDA#1 = RAdd(r1BD6,r1BD9);
    real r1BDC#1 = RMul(realLit1B76,r1BD2);
    real r1BDD#1 = RAdd(r1BD1,r1BDC);
    real r1BDE#1 = RAdd(r1BDD,r1BD5);
    tensor[3] tensor1BDF#1 = <tensor[3]>[r1BD7,r1BDA,r1BDE];
    real r1BE0#1 = RMul(realLit1B76,r1BD4);
    real r1BE1#1 = RAdd(r1BD6,r1BE0);
    real r1BE2#1 = RMul(realLit1B61,r1BD0);
    real r1BE3#1 = RAdd(r1BE2,r1BD3);
    real r1BE4#1 = RAdd(r1BE3,r1BD5);
    tensor[3] tensor1BE5#1 = <tensor[3]>[r1BE1,r1BD7,r1BE4];
    real r1BE6#1 = RMul(realLit1B61,r1BD2);
    real r1BE7#1 = RAdd(r1BD1,r1BE6);
    real r1BE8#1 = RAdd(r1BE7,r1BD5);
    real r1BE9#1 = RMul(realLit1B76,r1BD0);
    real r1BEA#1 = RAdd(r1BE9,r1BD3);
    real r1BEB#1 = RAdd(r1BEA,r1BD5);
    tensor[3] tensor1BEC#1 = <tensor[3]>[r1BE8,r1BEB,r1BD7];
    real vdot1C0F#1 = VDot<3>(op1_e3_l_171BA8,tensor1BDF);
    real vdot1C11#1 = VDot<3>(op1_e3_l_171BA8,tensor1BE5);
    real vdot1C13#1 = VDot<3>(op1_e3_l_171BA8,tensor1BEC);
    tensor[3] op1_e3_l_471C0D#1 = <tensor[3]>[vdot1C0F,vdot1C11,vdot1C13];
    tensor[3] op1_e3_l_501C1C#3 = VScale<3>(op1_e3_l_91B60,op1_e3_l_471C0D);
    real r1C20#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C1C);
    real r1C21#3 = RMul(op1_e3_l_381BC5,op1_e3_l_91B60);
    real r1C22#2 = RMul(r1C21,r1C20);
    real r1C23#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C1C);
    real r1C24#2 = RMul(r1C21,r1C23);
    real r1C25#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C1C);
    real r1C26#2 = RMul(r1C21,r1C25);
    tensor[3] camV1C1F#1 = <tensor[3]>[r1C22,r1C24,r1C26];
    globals.camV1ADB = camV1C1F;
    real _t1C31#1 = 0.314159265358979323846264338327950288e1;
    real _t1C33#1 = 0.36e3;
    real op1_e3_l_51C35#1 = RMul(camFOV1B2C,_t1C31);
    real op1_e3_l_61C38#1 = RDiv(op1_e3_l_51C35,_t1C33);
    real op1_e3_l_101C3B#2 = Tan(op1_e3_l_61C38);
    real camVmax1C3E#1 = RMul(op1_e3_l_101C3B,camDist1B5C);
    globals.camVmax1ADC = camVmax1C3E;
    real _t1C42#1 = IntToReal(iresU1B2E);
    real _t1C44#1 = IntToReal(iresV1B30);
    real r1C47#1 = RMul(_t1C42,op1_e3_l_101C3B);
    real op1_e3_l_141C46#1 = RMul(r1C47,camDist1B5C);
    real camUmax1C4B#1 = RDiv(op1_e3_l_141C46,_t1C44);
    globals.camUmax1ADD = camUmax1C4B;
    real op1_e3_l_31C51#1 = VDot<3>(lightVsp1B32,lightVsp1B32);
    real op1_e3_l_41C54#1 = Sqrt(op1_e3_l_31C51);
    real op1_e3_l_51C57#1 = RDiv(realLit1B61,op1_e3_l_41C54);
    real r1C5D#1 = VIndex<3,0>(camU1BCA);
    real r1C5E#3 = TensorIndex<tensor[3],[0]>(lightVsp1B32);
    real r1C5F#1 = RMul(r1C5D,r1C5E);
    real r1C61#3 = TensorIndex<tensor[3],[1]>(lightVsp1B32);
    real r1C62#1 = RMul(r1C22,r1C61);
    real r1C63#1 = VIndex<3,0>(camN1B65);
    real r1C64#3 = TensorIndex<tensor[3],[2]>(lightVsp1B32);
    real r1C65#1 = RMul(r1C63,r1C64);
    real r1C66#1 = RAdd(r1C5F,r1C62);
    real r1C67#1 = RAdd(r1C66,r1C65);
    real r1C68#1 = VIndex<3,1>(camU1BCA);
    real r1C69#1 = RMul(r1C68,r1C5E);
    real r1C6B#1 = RMul(r1C24,r1C61);
    real r1C6C#1 = VIndex<3,1>(camN1B65);
    real r1C6D#1 = RMul(r1C6C,r1C64);
    real r1C6E#1 = RAdd(r1C69,r1C6B);
    real r1C6F#1 = RAdd(r1C6E,r1C6D);
    real r1C70#1 = VIndex<3,2>(camU1BCA);
    real r1C71#1 = RMul(r1C70,r1C5E);
    real r1C73#1 = RMul(r1C26,r1C61);
    real r1C74#1 = VIndex<3,2>(camN1B65);
    real r1C75#1 = RMul(r1C74,r1C64);
    real r1C76#1 = RAdd(r1C71,r1C73);
    real r1C77#1 = RAdd(r1C76,r1C75);
    tensor[3] op1_e3_l_61C5C#1 = <tensor[3]>[r1C67,r1C6F,r1C77];
    tensor[3] light1C95#1 = VScale<3>(op1_e3_l_51C57,op1_e3_l_61C5C);
    globals.light1ADE = light1C95;
    globals._t1ADF = _t1B4E;
    globals._tX1AE0 = _t1B4C;
    globals.c1AE1 = c1B4A;
    globals.I1AE4 = I1B50;
    return
## strand
  strand raycast (int ui1CA0#2, int vi1CA1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1CAC:  preds = []
        int iresU1CAD#1 = globals.iresU1ACC;
        int iresV1CAF#1 = globals.iresV1ACD;
        real camNear1CB1#1 = globals.camNear1ACE;
        real camDist1CB3#1 = globals.camDist1AD8;
        tensor[3] camN1CB5#1 = globals.camN1AD9;
        tensor[3] camU1CB7#1 = globals.camU1ADA;
        tensor[3] camV1CB9#1 = globals.camV1ADB;
        real camVmax1CBB#3 = globals.camVmax1ADC;
        real camUmax1CBD#2 = globals.camUmax1ADD;
        real _t1CBF#4 = -0.5e0;
        real _t1CC1#1 = IntToReal(ui1CA0);
        real _t1CC3#1 = IntToReal(iresU1CAD);
        real _t1CC5#2 = 0.5e0;
        real op1_e3_l_61CC7#1 = RSub(_t1CC3,_t1CC5);
        real op1_e3_l_71CCA#1 = RSub(_t1CC1,_t1CBF);
        real op1_e3_l_81CCD#1 = RSub(op1_e3_l_61CC7,_t1CBF);
        real op1_e3_l_91CD0#2 = RNeg(camUmax1CBD);
        real op1_e3_l_101CD3#1 = RDiv(op1_e3_l_71CCA,op1_e3_l_81CCD);
        real op1_e3_l_111CD6#1 = RSub(camUmax1CBD,op1_e3_l_91CD0);
        real op1_e3_l_131CD9#1 = RMul(op1_e3_l_101CD3,op1_e3_l_111CD6);
        real rayU1CDC#2 = RAdd(op1_e3_l_91CD0,op1_e3_l_131CD9);
        real _t1CDF#1 = IntToReal(vi1CA1);
        real _t1CE1#1 = IntToReal(iresV1CAF);
        real op1_e3_l_61CE3#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_71CE6#1 = RSub(_t1CDF,_t1CBF);
        real op1_e3_l_81CE9#1 = RSub(op1_e3_l_61CE3,_t1CBF);
        real op1_e3_l_91CEC#1 = RNeg(camVmax1CBB);
        real op1_e3_l_101CEF#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_81CE9);
        real op1_e3_l_111CF2#1 = RSub(op1_e3_l_91CEC,camVmax1CBB);
        real op1_e3_l_121CF5#1 = RMul(op1_e3_l_101CEF,op1_e3_l_111CF2);
        real rayV1CF8#2 = RAdd(camVmax1CBB,op1_e3_l_121CF5);
        tensor[3] op1_e3_l_331D0A#1 = VScale<3>(rayU1CDC,camU1CB7);
        tensor[3] op1_e3_l_341D0D#1 = VScale<3>(rayV1CF8,camV1CB9);
        tensor[3] op1_e3_l_351D10#3 = VAdd<3>(op1_e3_l_331D0A,op1_e3_l_341D0D);
        real realLit1D14#2 = 0.1e1;
        real r1D15#3 = RDiv(realLit1D14,camDist1CB3);
        real r1D16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D10);
        real r1D17#1 = RMul(r1D15,r1D16);
        real r1D18#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D10);
        real r1D19#1 = RMul(r1D15,r1D18);
        real r1D1A#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D10);
        real r1D1B#1 = RMul(r1D15,r1D1A);
        tensor[3] op1_e3_l_361D13#1 = <tensor[3]>[r1D17,r1D19,r1D1B];
        tensor[3] rayVec1D26#1 = VAdd<3>(camN1CB5,op1_e3_l_361D13);
        real _t1D2B#8 = 0.e0;
        tensor[3] rgb1D2D#1 = <tensor[3]>[_t1D2B,_t1D2B,_t1D2B];
        tensor[4] rgba1D2F#1 = <tensor[4]>[_t1D2B,_t1D2B,_t1D2B,_t1D2B];
        self.rayU = rayU1CDC;
        self.rayV = rayV1CF8;
        self.rayN = camNear1CB1;
        self.rayVec = rayVec1D26;
        self.transp = realLit1D14;
        self.rgb = rgb1D2D;
        self.rgba = rgba1D2F;
        self.gray = _t1D2B;
        self.ui = ui1CA0;
        self.vi = vi1CA1;
        return
    end state init
    method update
        ENTRY1D3C:  preds = []
          image(IMAGE1D<double[3]>) I1D3D#17 = globals.I1AE4;
          real isoval1D3F#1 = globals.isoval1AC6;
          femData:Mesh _t1D41#17 = globals._t1ADF;
          femData:Space _t1D43#10 = globals._tX1AE0;
          femData:FemFunc c1D45#10 = globals.c1AE1;
          femData:Mesh a1D4B#1 = globals.a1AC3;
          real thick1D4D#1 = globals.thick1AC7;
          tensor[3] camEye1D4F#1 = globals.camEye1AC8;
          real camNear1D51#2 = globals.camNear1ACE;
          real camFar1D53#2 = globals.camFar1ACF;
          real refStep1D55#1 = globals.refStep1AD0;
          real rayStep1D57#2 = globals.rayStep1AD1;
          real phongKa1D59#1 = globals.phongKa1AD3;
          real phongKd1D5B#1 = globals.phongKd1AD4;
          bool debug1D5D#1 = globals.debug1AD5;
          int su1D5F#1 = globals.su1AD6;
          int sv1D61#1 = globals.sv1AD7;
          tensor[3] light1D63#1 = globals.light1ADE;
          real rayN1D65#4 = self.rayN;
          tensor[3] rayVec1D67#3 = self.rayVec;
          real transp1D69#10 = self.transp;
          tensor[3] rgb1D6B#9 = self.rgb;
          int ui1D6D#1 = self.ui;
          int vi1D6F#1 = self.vi;
          if debug1D5D then goto ASSIGN1D73 else goto JOIN1D7D
        ASSIGN1D73:  preds = [COND1D71]
          bool _t1D72#1 = NEQ<int>(ui1D6D,su1D5F);
          if _t1D72 then goto ASSIGN1D76 else goto ASSIGN2E4F
        ASSIGN1D76:  preds = [COND1D74]
          bool _t1D75#1 = true;
          goto JOIN1D79
        JOIN1D79:  preds = [ASSIGN1D76,ASSIGN2E4F]
          bool _t1D77#1 = phi(_t1D75,_t1D78)
          if _t1D77 then goto STABILIZE1D7B else goto JOIN1D7C
        STABILIZE1D7B:  preds = [COND1D7A]
          stabilize
          goto JOIN1D7C
        JOIN1D7C:  preds = [*STABILIZE1D7B,COND1D7A]
          goto JOIN1D7D
        JOIN1D7D:  preds = [JOIN1D7C,COND1D71]
          tensor[3] op1_e3_l_31D7E#1 = VScale<3>(rayN1D65,rayVec1D67);
          tensor[3] x1D81#6 = VAdd<3>(camEye1D4F,op1_e3_l_31D7E);
          real _t1D84#61 = 0.e0;
          real _t1D86#2 = VIndex<3,0>(x1D81);
          bool _t1D88#1 = LT<real>(_t1D84,_t1D86);
          if _t1D88 then goto ASSIGN1D8C else goto JOIN2DFF
        ASSIGN1D8C:  preds = [COND1D8A]
          real _t1D8B#45 = 0.1e1;
          bool _t1D8D#1 = LT<real>(_t1D86,_t1D8B);
          if _t1D8D then goto ASSIGN1D91 else goto JOIN2DFC
        ASSIGN1D91:  preds = [COND1D8F]
          real _t1D90#2 = VIndex<3,1>(x1D81);
          bool _t1D92#1 = LT<real>(_t1D84,_t1D90);
          if _t1D92 then goto ASSIGN1D96 else goto JOIN2DF9
        ASSIGN1D96:  preds = [COND1D94]
          bool _t1D95#1 = LT<real>(_t1D90,_t1D8B);
          if _t1D95 then goto ASSIGN1D99 else goto JOIN2DF6
        ASSIGN1D99:  preds = [COND1D97]
          real _t1D98#2 = VIndex<3,2>(x1D81);
          bool _t1D9A#1 = LT<real>(_t1D84,_t1D98);
          if _t1D9A then goto ASSIGN1D9E else goto JOIN2DF3
        ASSIGN1D9E:  preds = [COND1D9C]
          bool _t1D9D#1 = LT<real>(_t1D98,_t1D8B);
          if _t1D9D then goto ASSIGN24EC else goto JOIN2DF0
        ASSIGN24EC:  preds = [COND1D9F]
          femData:MeshPos p1DA0#1 = findPos1DA1 (a1D4B,x1D81);
          bool _t24ED#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1DA0);
          if _t24ED then goto ASSIGN24F1 else goto ASSIGN2E4A
        ASSIGN24F1:  preds = [COND24EF]
          real _t24F0#1 = 0.13e1;
          femData:MeshPos callFindPos24F2#2 = findPos1DA1 (_t1D41,x1D81);
          int intPos24F4#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F2);
          tensor[3] refPos24F6#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F2);
          int ilit24F9#1 = 10;
          int mulRes24FA#10 = IMul(intPos24F4,ilit24F9);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,mulRes24FA);
          int ilit24FE#22 = 1;
          int addRes24FF#1 = IAdd(mulRes24FA,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FF);
          int ilit2501#10 = 2;
          int addRes2502#1 = IAdd(mulRes24FA,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2502);
          int ilit2504#10 = 3;
          int addRes2505#1 = IAdd(mulRes24FA,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2505);
          int ilit2507#2 = 4;
          int addRes2508#1 = IAdd(mulRes24FA,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2508);
          int ilit250A#1 = 5;
          int addRes250B#1 = IAdd(mulRes24FA,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250B);
          int ilit250D#1 = 6;
          int addRes250E#1 = IAdd(mulRes24FA,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250E);
          int ilit2510#1 = 7;
          int addRes2511#1 = IAdd(mulRes24FA,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2511);
          int ilit2513#1 = 8;
          int addRes2514#1 = IAdd(mulRes24FA,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2514);
          int ilit2516#1 = 9;
          int addRes2517#1 = IAdd(mulRes24FA,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2517);
          int mulRes2540#1 = IMul(ilit24FE,idx24FD);
          int mulRes2542#1 = IMul(ilit24FE,idx2500);
          int mulRes2545#1 = IMul(ilit24FE,idx2503);
          int mulRes2548#1 = IMul(ilit24FE,idx2506);
          int mulRes254B#1 = IMul(ilit24FE,idx2509);
          int mulRes254E#1 = IMul(ilit24FE,idx250C);
          int mulRes2551#1 = IMul(ilit24FE,idx250F);
          int mulRes2554#1 = IMul(ilit24FE,idx2512);
          int mulRes2557#1 = IMul(ilit24FE,idx2515);
          int mulRes255A#1 = IMul(ilit24FE,idx2518);
          real dof255B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2540);
          real dof255C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2542);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2545);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2548);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254B);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254E);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2551);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2554);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2557);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes255A);
          tensor[10] dofs2565#4 = <tensor[10]>[dof255B,dof255C,dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564];
          real varAcc2591#5 = VIndex<3,0>(refPos24F6);
          real varAcc2592#4 = VIndex<3,1>(refPos24F6);
          real varAcc2593#4 = VIndex<3,2>(refPos24F6);
          real coeff2594#4 = 0.2e1;
          real prod22596#1 = RMul(varAcc2591,varAcc2591);
          real prod2598#3 = RMul(_t1D8B,_t1D8B);
          real prod2599#2 = RMul(prod22596,prod2598);
          real coeff259A#7 = 0.4e1;
          real prod259C#2 = RMul(varAcc2592,_t1D8B);
          real prod259D#2 = RMul(varAcc2591,prod259C);
          real prod259F#2 = RMul(_t1D8B,varAcc2593);
          real prod25A0#2 = RMul(varAcc2591,prod259F);
          real coeff25A1#4 = -0.3e1;
          real prod25A2#5 = RMul(varAcc2591,prod2598);
          real prod225A3#1 = RMul(varAcc2592,varAcc2592);
          real prod25A4#1 = RMul(prod225A3,_t1D8B);
          real prod25A5#2 = RMul(_t1D8B,prod25A4);
          real prod25A6#1 = RMul(varAcc2592,varAcc2593);
          real prod25A7#2 = RMul(_t1D8B,prod25A6);
          real prod25A8#5 = RMul(_t1D8B,prod259C);
          real prod225A9#1 = RMul(varAcc2593,varAcc2593);
          real prod25AA#1 = RMul(_t1D8B,prod225A9);
          real prod25AB#2 = RMul(_t1D8B,prod25AA);
          real prod25AC#5 = RMul(_t1D8B,prod259F);
          real prod25AD#4 = RMul(_t1D8B,prod2598);
          real mult25AE#10 = RMul(_t1D8B,prod25AD);
          real mult25AF#1 = RMul(coeff25A1,prod25AC);
          real mult25B0#2 = RMul(coeff2594,prod25AB);
          real mult25B1#1 = RMul(coeff25A1,prod25A8);
          real mult25B2#2 = RMul(coeff259A,prod25A7);
          real mult25B3#2 = RMul(coeff2594,prod25A5);
          real mult25B4#1 = RMul(coeff25A1,prod25A2);
          real mult25B5#2 = RMul(coeff259A,prod25A0);
          real mult25B6#2 = RMul(coeff259A,prod259D);
          real mult25B7#2 = RMul(coeff2594,prod2599);
          real sum25B8#1 = RAdd(mult25B6,mult25B7);
          real sum25B9#1 = RAdd(mult25B5,sum25B8);
          real sum25BA#1 = RAdd(mult25B4,sum25B9);
          real sum25BB#1 = RAdd(mult25B3,sum25BA);
          real sum25BC#1 = RAdd(mult25B2,sum25BB);
          real sum25BD#1 = RAdd(mult25B1,sum25BC);
          real sum25BE#1 = RAdd(mult25B0,sum25BD);
          real sum25BF#1 = RAdd(mult25AF,sum25BE);
          real sum25C0#1 = RAdd(mult25AE,sum25BF);
          real coeff25C2#23 = -0.1e1;
          real mult25C3#1 = RMul(coeff25C2,prod25A2);
          real sum25C4#1 = RAdd(mult25C3,mult25B7);
          real mult25C6#1 = RMul(coeff25C2,prod25A8);
          real sum25C7#1 = RAdd(mult25C6,mult25B3);
          real mult25C9#1 = RMul(coeff25C2,prod25AC);
          real sum25CA#1 = RAdd(mult25C9,mult25B0);
          real coeff25CC#9 = -0.4e1;
          real mult25CD#5 = RMul(coeff259A,prod25AC);
          real mult25CE#1 = RMul(coeff25CC,prod25AB);
          real mult25CF#2 = RMul(coeff25CC,prod25A7);
          real mult25D0#2 = RMul(coeff25CC,prod25A0);
          real sum25D1#1 = RAdd(mult25CF,mult25D0);
          real sum25D2#1 = RAdd(mult25CE,sum25D1);
          real sum25D3#1 = RAdd(mult25CD,sum25D2);
          real mult25D5#5 = RMul(coeff259A,prod25A8);
          real mult25D6#1 = RMul(coeff25CC,prod25A5);
          real mult25D7#2 = RMul(coeff25CC,prod259D);
          real sum25D8#1 = RAdd(mult25D6,mult25D7);
          real sum25D9#1 = RAdd(mult25CF,sum25D8);
          real sum25DA#1 = RAdd(mult25D5,sum25D9);
          real mult25DC#5 = RMul(coeff259A,prod25A2);
          real mult25DD#1 = RMul(coeff25CC,prod2599);
          real sum25DE#1 = RAdd(mult25D7,mult25DD);
          real sum25DF#1 = RAdd(mult25D0,sum25DE);
          real sum25E0#1 = RAdd(mult25DC,sum25DF);
          tensor[10] intermediateCons25E2#1 = <tensor[10]>[sum25C0,sum25C4,sum25C7,sum25CA,mult25B2,mult25B5,mult25B6,sum25D3,sum25DA,sum25E0];
          real compositionl2636#2 = VDot<10>(dofs2565,intermediateCons25E2);
          real op1_e3_l_232639#1 = RSub(compositionl2636,isoval1D3F);
          real mult264D#1 = RMul(coeff25A1,prod25AD);
          real sum2651#1 = RAdd(mult25D5,mult25DC);
          real sum2652#1 = RAdd(mult25CD,sum2651);
          real sum2653#3 = RAdd(mult264D,sum2652);
          real mult2656#6 = RMul(coeff25C2,prod25AD);
          real sum2657#1 = RAdd(mult2656,mult25DC);
          real basisEval265B#4 = RMul(coeff25CC,prod25AC);
          real basisEval265C#4 = RMul(coeff25CC,prod25A8);
          real coeff265D#3 = -0.8e1;
          real mult265E#3 = RMul(coeff259A,prod25AD);
          real mult265F#1 = RMul(coeff265D,prod25A2);
          real sum2660#1 = RAdd(basisEval265C,mult265F);
          real sum2661#1 = RAdd(basisEval265B,sum2660);
          real sum2662#1 = RAdd(mult265E,sum2661);
          real sum2665#1 = RAdd(mult2656,mult25D5);
          real mult2667#1 = RMul(coeff265D,prod25A8);
          real mult2668#4 = RMul(coeff25CC,prod25A2);
          real sum2669#1 = RAdd(mult2667,mult2668);
          real sum266A#1 = RAdd(basisEval265B,sum2669);
          real sum266B#1 = RAdd(mult265E,sum266A);
          real sum266E#1 = RAdd(mult2656,mult25CD);
          real mult2670#1 = RMul(coeff265D,prod25AC);
          real sum2671#1 = RAdd(basisEval265C,mult2668);
          real sum2672#1 = RAdd(mult2670,sum2671);
          real sum2673#1 = RAdd(mult265E,sum2672);
          tensor[10] intermediateCons2675#1 = <tensor[10]>[sum2653,sum2657,_t1D84,_t1D84,_t1D84,mult25CD,mult25D5,basisEval265B,basisEval265C,sum2662];
          tensor[10] intermediateCons2676#1 = <tensor[10]>[sum2653,_t1D84,sum2665,_t1D84,mult25CD,_t1D84,mult25DC,basisEval265B,sum266B,mult2668];
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2653,_t1D84,_t1D84,sum266E,mult25D5,mult25DC,_t1D84,sum2673,basisEval265C,mult2668];
          real vdot26B8#3 = VDot<10>(dofs2565,intermediateCons2675);
          real vdot26BA#3 = VDot<10>(dofs2565,intermediateCons2676);
          real vdot26BC#3 = VDot<10>(dofs2565,intermediateCons2677);
          int mulRes26C7#4 = IMul(intPos24F4,ilit2507);
          int idx26CA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,mulRes26C7);
          int addRes26CC#1 = IAdd(mulRes26C7,ilit24FE);
          int idx26CD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CC);
          int addRes26CF#1 = IAdd(mulRes26C7,ilit2501);
          int idx26D0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CF);
          int addRes26D2#1 = IAdd(mulRes26C7,ilit2504);
          int idx26D3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26D2);
          int mulRes26E9#3 = IMul(ilit2504,idx26CA);
          int addRes26EC#1 = IAdd(ilit24FE,mulRes26E9);
          int addRes26EE#1 = IAdd(ilit2501,mulRes26E9);
          real dof_load26EF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26E9);
          real dof_load26F0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EC);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EE);
          int mulRes26F4#3 = IMul(ilit2504,idx26CD);
          int addRes26F6#1 = IAdd(ilit24FE,mulRes26F4);
          int addRes26F7#1 = IAdd(ilit2501,mulRes26F4);
          real dof_load26F8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26F4);
          real dof_load26F9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F7);
          int mulRes26FD#3 = IMul(ilit2504,idx26D0);
          int addRes26FF#1 = IAdd(ilit24FE,mulRes26FD);
          int addRes2700#1 = IAdd(ilit2501,mulRes26FD);
          real dof_load2701#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26FD);
          real dof_load2702#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2700);
          int mulRes2706#3 = IMul(ilit2504,idx26D3);
          int addRes2708#1 = IAdd(ilit24FE,mulRes2706);
          int addRes2709#1 = IAdd(ilit2501,mulRes2706);
          real dof_load270A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes2706);
          real dof_load270B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2709);
          real r275A#2 = RMul(dof_load26EF,mult2656);
          real r275D#1 = RMul(dof_load26F8,mult25AE);
          real r2760#2 = RMul(dof_load2701,_t1D84);
          real r2763#2 = RMul(dof_load270A,_t1D84);
          real r2764#1 = RAdd(r275A,r275D);
          real r2765#1 = RAdd(r2764,r2760);
          real r2766#13 = RAdd(r2765,r2763);
          real r276A#1 = RMul(dof_load26F8,_t1D84);
          real r276C#1 = RMul(dof_load2701,mult25AE);
          real r276F#2 = RAdd(r275A,r276A);
          real r2770#1 = RAdd(r276F,r276C);
          real r2771#13 = RAdd(r2770,r2763);
          real r2779#1 = RMul(dof_load270A,mult25AE);
          real r277B#1 = RAdd(r276F,r2760);
          real r277C#12 = RAdd(r277B,r2779);
          real r277F#2 = RMul(dof_load26F0,mult2656);
          real r2781#1 = RMul(dof_load26F9,mult25AE);
          real r2783#2 = RMul(dof_load2702,_t1D84);
          real r2785#2 = RMul(dof_load270B,_t1D84);
          real r2786#1 = RAdd(r277F,r2781);
          real r2787#1 = RAdd(r2786,r2783);
          real r2788#13 = RAdd(r2787,r2785);
          real r278A#1 = RMul(dof_load26F9,_t1D84);
          real r278B#1 = RMul(dof_load2702,mult25AE);
          real r278D#2 = RAdd(r277F,r278A);
          real r278E#1 = RAdd(r278D,r278B);
          real r278F#13 = RAdd(r278E,r2785);
          real r2793#1 = RMul(dof_load270B,mult25AE);
          real r2795#1 = RAdd(r278D,r2783);
          real r2796#12 = RAdd(r2795,r2793);
          real r2799#2 = RMul(dof_load26F1,mult2656);
          real r279B#1 = RMul(dof_load26FA,mult25AE);
          real r279D#2 = RMul(dof_load2703,_t1D84);
          real r279F#2 = RMul(dof_load270C,_t1D84);
          real r27A0#1 = RAdd(r2799,r279B);
          real r27A1#1 = RAdd(r27A0,r279D);
          real r27A2#13 = RAdd(r27A1,r279F);
          real r27A4#1 = RMul(dof_load26FA,_t1D84);
          real r27A5#1 = RMul(dof_load2703,mult25AE);
          real r27A7#2 = RAdd(r2799,r27A4);
          real r27A8#1 = RAdd(r27A7,r27A5);
          real r27A9#13 = RAdd(r27A8,r279F);
          real r27AD#1 = RMul(dof_load270C,mult25AE);
          real r27AF#1 = RAdd(r27A7,r279D);
          real r27B0#12 = RAdd(r27AF,r27AD);
          real r2811#3 = RMul(_t1D84,r2766);
          real r2813#3 = RMul(_t1D84,r2788);
          real r2815#5 = RMul(_t1D84,r27A2);
          real r2816#3 = RAdd(r2811,r2813);
          real r2817#9 = RAdd(r2816,r2815);
          real r2819#3 = RMul(_t1D84,r2771);
          real r281B#3 = RMul(_t1D84,r278F);
          real r281D#5 = RMul(_t1D84,r27A9);
          real r281E#3 = RAdd(r2819,r281B);
          real r281F#9 = RAdd(r281E,r281D);
          real r2821#3 = RMul(_t1D84,r277C);
          real r2823#3 = RMul(_t1D84,r2796);
          real r2825#5 = RMul(_t1D84,r27B0);
          real r2826#3 = RAdd(r2821,r2823);
          real r2827#12 = RAdd(r2826,r2825);
          real r282A#1 = RMul(coeff25C2,r27A2);
          real r282B#3 = RAdd(r2816,r282A);
          real r282C#1 = RMul(coeff25C2,r27A9);
          real r282D#3 = RAdd(r281E,r282C);
          real r282E#1 = RMul(coeff25C2,r27B0);
          real r282F#4 = RAdd(r2826,r282E);
          real r2832#1 = RMul(_t1D8B,r2788);
          real r2833#1 = RAdd(r2811,r2832);
          real r2834#3 = RAdd(r2833,r2815);
          real r2835#1 = RMul(_t1D8B,r278F);
          real r2836#1 = RAdd(r2819,r2835);
          real r2837#3 = RAdd(r2836,r281D);
          real r2838#1 = RMul(_t1D8B,r2796);
          real r2839#1 = RAdd(r2821,r2838);
          real r283A#4 = RAdd(r2839,r2825);
          real r283D#1 = RMul(_t1D8B,r27A2);
          real r283E#3 = RAdd(r2816,r283D);
          real r283F#1 = RMul(_t1D8B,r27A9);
          real r2840#3 = RAdd(r281E,r283F);
          real r2841#1 = RMul(_t1D8B,r27B0);
          real r2842#4 = RAdd(r2826,r2841);
          real r2844#1 = RMul(coeff25C2,r2766);
          real r2845#1 = RAdd(r2844,r2813);
          real r2846#3 = RAdd(r2845,r2815);
          real r2847#1 = RMul(coeff25C2,r2771);
          real r2848#1 = RAdd(r2847,r281B);
          real r2849#3 = RAdd(r2848,r281D);
          real r284A#1 = RMul(coeff25C2,r277C);
          real r284B#1 = RAdd(r284A,r2823);
          real r284C#4 = RAdd(r284B,r2825);
          real r284F#1 = RMul(coeff25C2,r2788);
          real r2850#1 = RAdd(r2811,r284F);
          real r2851#3 = RAdd(r2850,r2815);
          real r2852#1 = RMul(coeff25C2,r278F);
          real r2853#1 = RAdd(r2819,r2852);
          real r2854#3 = RAdd(r2853,r281D);
          real r2855#1 = RMul(coeff25C2,r2796);
          real r2856#1 = RAdd(r2821,r2855);
          real r2857#4 = RAdd(r2856,r2825);
          real r2859#1 = RMul(_t1D8B,r2766);
          real r285A#1 = RAdd(r2859,r2813);
          real r285B#3 = RAdd(r285A,r2815);
          real r285C#1 = RMul(_t1D8B,r2771);
          real r285D#1 = RAdd(r285C,r281B);
          real r285E#3 = RAdd(r285D,r281D);
          real r285F#1 = RMul(_t1D8B,r277C);
          real r2860#1 = RAdd(r285F,r2823);
          real r2861#4 = RAdd(r2860,r2825);
          real r28BE#1 = RMul(r2766,r2817);
          real r28C1#1 = RMul(r2788,r283E);
          real r28C4#1 = RMul(r27A2,r2851);
          real r28C5#1 = RAdd(r28BE,r28C1);
          real r28C6#1 = RAdd(r28C5,r28C4);
          real r28C8#1 = RMul(r2766,r281F);
          real r28CA#1 = RMul(r2788,r2840);
          real r28CC#1 = RMul(r27A2,r2854);
          real r28CD#1 = RAdd(r28C8,r28CA);
          real r28CE#2 = RAdd(r28CD,r28CC);
          real r28D0#1 = RMul(r2766,r2827);
          real r28D2#1 = RMul(r2788,r2842);
          real r28D4#1 = RMul(r27A2,r2857);
          real r28D5#1 = RAdd(r28D0,r28D2);
          real r28D6#2 = RAdd(r28D5,r28D4);
          real r28D9#1 = RMul(r2766,r282B);
          real r28DB#1 = RMul(r2788,r2817);
          real r28DD#1 = RMul(r27A2,r285B);
          real r28DE#1 = RAdd(r28D9,r28DB);
          real r28DF#1 = RAdd(r28DE,r28DD);
          real r28E1#1 = RMul(r2766,r282D);
          real r28E3#1 = RMul(r2788,r281F);
          real r28E5#1 = RMul(r27A2,r285E);
          real r28E6#1 = RAdd(r28E1,r28E3);
          real r28E7#2 = RAdd(r28E6,r28E5);
          real r28E9#1 = RMul(r2766,r282F);
          real r28EB#1 = RMul(r2788,r2827);
          real r28ED#1 = RMul(r27A2,r2861);
          real r28EE#1 = RAdd(r28E9,r28EB);
          real r28EF#2 = RAdd(r28EE,r28ED);
          real r28F2#1 = RMul(r2766,r2834);
          real r28F4#1 = RMul(r2788,r2846);
          real r28F6#1 = RMul(r27A2,r2817);
          real r28F7#1 = RAdd(r28F2,r28F4);
          real r28F8#1 = RAdd(r28F7,r28F6);
          real r28FA#1 = RMul(r2766,r2837);
          real r28FC#1 = RMul(r2788,r2849);
          real r28FE#1 = RMul(r27A2,r281F);
          real r28FF#1 = RAdd(r28FA,r28FC);
          real r2900#2 = RAdd(r28FF,r28FE);
          real r2902#1 = RMul(r2766,r283A);
          real r2904#1 = RMul(r2788,r284C);
          real r2906#1 = RMul(r27A2,r2827);
          real r2907#1 = RAdd(r2902,r2904);
          real r2908#2 = RAdd(r2907,r2906);
          real r290C#1 = RMul(r2771,r2817);
          real r290E#1 = RMul(r278F,r283E);
          real r2910#1 = RMul(r27A9,r2851);
          real r2911#1 = RAdd(r290C,r290E);
          real r2912#2 = RAdd(r2911,r2910);
          real r2913#1 = RMul(r2771,r281F);
          real r2914#1 = RMul(r278F,r2840);
          real r2915#1 = RMul(r27A9,r2854);
          real r2916#1 = RAdd(r2913,r2914);
          real r2917#1 = RAdd(r2916,r2915);
          real r2918#1 = RMul(r2771,r2827);
          real r2919#1 = RMul(r278F,r2842);
          real r291A#1 = RMul(r27A9,r2857);
          real r291B#1 = RAdd(r2918,r2919);
          real r291C#2 = RAdd(r291B,r291A);
          real r291E#1 = RMul(r2771,r282B);
          real r291F#1 = RMul(r278F,r2817);
          real r2920#1 = RMul(r27A9,r285B);
          real r2921#1 = RAdd(r291E,r291F);
          real r2922#2 = RAdd(r2921,r2920);
          real r2923#1 = RMul(r2771,r282D);
          real r2924#1 = RMul(r278F,r281F);
          real r2925#1 = RMul(r27A9,r285E);
          real r2926#1 = RAdd(r2923,r2924);
          real r2927#1 = RAdd(r2926,r2925);
          real r2928#1 = RMul(r2771,r282F);
          real r2929#1 = RMul(r278F,r2827);
          real r292A#1 = RMul(r27A9,r2861);
          real r292B#1 = RAdd(r2928,r2929);
          real r292C#2 = RAdd(r292B,r292A);
          real r292E#1 = RMul(r2771,r2834);
          real r292F#1 = RMul(r278F,r2846);
          real r2930#1 = RMul(r27A9,r2817);
          real r2931#1 = RAdd(r292E,r292F);
          real r2932#2 = RAdd(r2931,r2930);
          real r2933#1 = RMul(r2771,r2837);
          real r2934#1 = RMul(r278F,r2849);
          real r2935#1 = RMul(r27A9,r281F);
          real r2936#1 = RAdd(r2933,r2934);
          real r2937#1 = RAdd(r2936,r2935);
          real r2938#1 = RMul(r2771,r283A);
          real r2939#1 = RMul(r278F,r284C);
          real r293A#1 = RMul(r27A9,r2827);
          real r293B#1 = RAdd(r2938,r2939);
          real r293C#2 = RAdd(r293B,r293A);
          real r2940#1 = RMul(r277C,r2817);
          real r2942#1 = RMul(r2796,r283E);
          real r2944#1 = RMul(r27B0,r2851);
          real r2945#1 = RAdd(r2940,r2942);
          real r2946#2 = RAdd(r2945,r2944);
          real r2947#1 = RMul(r277C,r281F);
          real r2948#1 = RMul(r2796,r2840);
          real r2949#1 = RMul(r27B0,r2854);
          real r294A#1 = RAdd(r2947,r2948);
          real r294B#2 = RAdd(r294A,r2949);
          real r294C#1 = RMul(r277C,r2827);
          real r294D#1 = RMul(r2796,r2842);
          real r294E#1 = RMul(r27B0,r2857);
          real r294F#1 = RAdd(r294C,r294D);
          real r2950#1 = RAdd(r294F,r294E);
          real r2952#1 = RMul(r277C,r282B);
          real r2953#1 = RMul(r2796,r2817);
          real r2954#1 = RMul(r27B0,r285B);
          real r2955#1 = RAdd(r2952,r2953);
          real r2956#2 = RAdd(r2955,r2954);
          real r2957#1 = RMul(r277C,r282D);
          real r2958#1 = RMul(r2796,r281F);
          real r2959#1 = RMul(r27B0,r285E);
          real r295A#1 = RAdd(r2957,r2958);
          real r295B#2 = RAdd(r295A,r2959);
          real r295C#1 = RMul(r277C,r282F);
          real r295D#1 = RMul(r2796,r2827);
          real r295E#1 = RMul(r27B0,r2861);
          real r295F#1 = RAdd(r295C,r295D);
          real r2960#1 = RAdd(r295F,r295E);
          real r2962#1 = RMul(r277C,r2834);
          real r2963#1 = RMul(r2796,r2846);
          real r2964#1 = RMul(r27B0,r2817);
          real r2965#1 = RAdd(r2962,r2963);
          real r2966#2 = RAdd(r2965,r2964);
          real r2967#1 = RMul(r277C,r2837);
          real r2968#1 = RMul(r2796,r2849);
          real r2969#1 = RMul(r27B0,r281F);
          real r296A#1 = RAdd(r2967,r2968);
          real r296B#2 = RAdd(r296A,r2969);
          real r296C#1 = RMul(r277C,r283A);
          real r296D#1 = RMul(r2796,r284C);
          real r296E#1 = RMul(r27B0,r2827);
          real r296F#1 = RAdd(r296C,r296D);
          real r2970#1 = RAdd(r296F,r296E);
          tensor[3] probe_l_292A2C#1 = <tensor[3]>[r2766,r2788,r27A2];
          tensor[3] probe_l_302A79#3 = <tensor[3]>[r2771,r278F,r27A9];
          tensor[3] tensor2B24#1 = <tensor[3]>[r2827,r2842,r2857];
          tensor[3] tensor2B2A#1 = <tensor[3]>[r282F,r2827,r2861];
          tensor[3] tensor2B31#1 = <tensor[3]>[r283A,r284C,r2827];
          real vdot2B54#1 = VDot<3>(probe_l_302A79,tensor2B24);
          real vdot2B56#1 = VDot<3>(probe_l_302A79,tensor2B2A);
          real vdot2B58#1 = VDot<3>(probe_l_302A79,tensor2B31);
          tensor[3] op1_e3_l_332B52#1 = <tensor[3]>[vdot2B54,vdot2B56,vdot2B58];
          real op1_e3_l_342B61#1 = VDot<3>(probe_l_292A2C,op1_e3_l_332B52);
          real r2B67#2 = RMul(_t1D84,r28C6);
          real r2B69#1 = RMul(_t1D84,r28CE);
          real r2B6B#2 = RMul(_t1D84,r28D6);
          real r2B6D#2 = RMul(_t1D84,r2912);
          real r2B6F#3 = RMul(_t1D84,r2917);
          real r2B72#1 = RMul(_t1D8B,r291C);
          real r2B74#2 = RMul(_t1D84,r2946);
          real r2B77#1 = RMul(coeff25C2,r294B);
          real r2B79#3 = RMul(_t1D84,r2950);
          real r2B7A#2 = RAdd(r2B67,r2B69);
          real r2B7B#1 = RAdd(r2B7A,r2B6B);
          real r2B7C#1 = RAdd(r2B7B,r2B6D);
          real r2B7D#1 = RAdd(r2B7C,r2B6F);
          real r2B7E#1 = RAdd(r2B7D,r2B72);
          real r2B7F#1 = RAdd(r2B7E,r2B74);
          real r2B80#1 = RAdd(r2B7F,r2B77);
          real r2B81#1 = RAdd(r2B80,r2B79);
          real r2B83#2 = RMul(_t1D84,r28DF);
          real r2B85#1 = RMul(_t1D84,r28E7);
          real r2B87#2 = RMul(_t1D84,r28EF);
          real r2B89#2 = RMul(_t1D84,r2922);
          real r2B8B#3 = RMul(_t1D84,r2927);
          real r2B8D#1 = RMul(_t1D8B,r292C);
          real r2B8F#2 = RMul(_t1D84,r2956);
          real r2B91#1 = RMul(coeff25C2,r295B);
          real r2B93#3 = RMul(_t1D84,r2960);
          real r2B94#2 = RAdd(r2B83,r2B85);
          real r2B95#1 = RAdd(r2B94,r2B87);
          real r2B96#1 = RAdd(r2B95,r2B89);
          real r2B97#1 = RAdd(r2B96,r2B8B);
          real r2B98#1 = RAdd(r2B97,r2B8D);
          real r2B99#1 = RAdd(r2B98,r2B8F);
          real r2B9A#1 = RAdd(r2B99,r2B91);
          real r2B9B#1 = RAdd(r2B9A,r2B93);
          real r2B9D#2 = RMul(_t1D84,r28F8);
          real r2B9F#1 = RMul(_t1D84,r2900);
          real r2BA1#2 = RMul(_t1D84,r2908);
          real r2BA3#2 = RMul(_t1D84,r2932);
          real r2BA5#3 = RMul(_t1D84,r2937);
          real r2BA7#1 = RMul(_t1D8B,r293C);
          real r2BA9#2 = RMul(_t1D84,r2966);
          real r2BAB#1 = RMul(coeff25C2,r296B);
          real r2BAD#3 = RMul(_t1D84,r2970);
          real r2BAE#2 = RAdd(r2B9D,r2B9F);
          real r2BAF#1 = RAdd(r2BAE,r2BA1);
          real r2BB0#1 = RAdd(r2BAF,r2BA3);
          real r2BB1#1 = RAdd(r2BB0,r2BA5);
          real r2BB2#1 = RAdd(r2BB1,r2BA7);
          real r2BB3#1 = RAdd(r2BB2,r2BA9);
          real r2BB4#1 = RAdd(r2BB3,r2BAB);
          real r2BB5#1 = RAdd(r2BB4,r2BAD);
          real r2BB7#1 = RMul(coeff25C2,r28D6);
          real r2BB8#2 = RMul(_t1D84,r291C);
          real r2BB9#1 = RMul(_t1D8B,r2946);
          real r2BBA#2 = RMul(_t1D84,r294B);
          real r2BBB#1 = RAdd(r2B7A,r2BB7);
          real r2BBC#1 = RAdd(r2BBB,r2B6D);
          real r2BBD#1 = RAdd(r2BBC,r2B6F);
          real r2BBE#1 = RAdd(r2BBD,r2BB8);
          real r2BBF#1 = RAdd(r2BBE,r2BB9);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2B79);
          real r2BC2#1 = RMul(coeff25C2,r28EF);
          real r2BC3#2 = RMul(_t1D84,r292C);
          real r2BC4#1 = RMul(_t1D8B,r2956);
          real r2BC5#2 = RMul(_t1D84,r295B);
          real r2BC6#1 = RAdd(r2B94,r2BC2);
          real r2BC7#1 = RAdd(r2BC6,r2B89);
          real r2BC8#1 = RAdd(r2BC7,r2B8B);
          real r2BC9#1 = RAdd(r2BC8,r2BC3);
          real r2BCA#1 = RAdd(r2BC9,r2BC4);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2B93);
          real r2BCD#1 = RMul(coeff25C2,r2908);
          real r2BCE#2 = RMul(_t1D84,r293C);
          real r2BCF#1 = RMul(_t1D8B,r2966);
          real r2BD0#2 = RMul(_t1D84,r296B);
          real r2BD1#1 = RAdd(r2BAE,r2BCD);
          real r2BD2#1 = RAdd(r2BD1,r2BA3);
          real r2BD3#1 = RAdd(r2BD2,r2BA5);
          real r2BD4#1 = RAdd(r2BD3,r2BCE);
          real r2BD5#1 = RAdd(r2BD4,r2BCF);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BAD);
          real r2BD9#1 = RMul(_t1D8B,r28CE);
          real r2BDA#1 = RMul(coeff25C2,r2912);
          real r2BDB#1 = RAdd(r2B67,r2BD9);
          real r2BDC#1 = RAdd(r2BDB,r2B6B);
          real r2BDD#1 = RAdd(r2BDC,r2BDA);
          real r2BDE#1 = RAdd(r2BDD,r2B6F);
          real r2BDF#1 = RAdd(r2BDE,r2BB8);
          real r2BE0#1 = RAdd(r2BDF,r2B74);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B79);
          real r2BE3#1 = RMul(_t1D8B,r28E7);
          real r2BE4#1 = RMul(coeff25C2,r2922);
          real r2BE5#1 = RAdd(r2B83,r2BE3);
          real r2BE6#1 = RAdd(r2BE5,r2B87);
          real r2BE7#1 = RAdd(r2BE6,r2BE4);
          real r2BE8#1 = RAdd(r2BE7,r2B8B);
          real r2BE9#1 = RAdd(r2BE8,r2BC3);
          real r2BEA#1 = RAdd(r2BE9,r2B8F);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B93);
          real r2BED#1 = RMul(_t1D8B,r2900);
          real r2BEE#1 = RMul(coeff25C2,r2932);
          real r2BEF#1 = RAdd(r2B9D,r2BED);
          real r2BF0#1 = RAdd(r2BEF,r2BA1);
          real r2BF1#1 = RAdd(r2BF0,r2BEE);
          real r2BF2#1 = RAdd(r2BF1,r2BA5);
          real r2BF3#1 = RAdd(r2BF2,r2BCE);
          real r2BF4#1 = RAdd(r2BF3,r2BA9);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAD);
          real op1_e3_l_362C8D#9 = RMul(coeff2594,op1_e3_l_342B61);
          real r2C94#1 = RDiv(r2B81,op1_e3_l_362C8D);
          real r2C96#1 = RDiv(r2B9B,op1_e3_l_362C8D);
          real r2C98#1 = RDiv(r2BB5,op1_e3_l_362C8D);
          real r2C9B#1 = RDiv(r2BC1,op1_e3_l_362C8D);
          real r2C9D#1 = RDiv(r2BCC,op1_e3_l_362C8D);
          real r2C9F#1 = RDiv(r2BD7,op1_e3_l_362C8D);
          real r2CA2#1 = RDiv(r2BE2,op1_e3_l_362C8D);
          real r2CA4#1 = RDiv(r2BEC,op1_e3_l_362C8D);
          real r2CA6#1 = RDiv(r2BF6,op1_e3_l_362C8D);
          real r2CC2#1 = RMul(vdot26B8,r2C94);
          real r2CC5#1 = RMul(vdot26BA,r2C9B);
          real r2CC8#1 = RMul(vdot26BC,r2CA2);
          real r2CC9#1 = RAdd(r2CC2,r2CC5);
          real r2CCA#1 = RAdd(r2CC9,r2CC8);
          real r2CCC#1 = RMul(vdot26B8,r2C96);
          real r2CCE#1 = RMul(vdot26BA,r2C9D);
          real r2CD0#1 = RMul(vdot26BC,r2CA4);
          real r2CD1#1 = RAdd(r2CCC,r2CCE);
          real r2CD2#1 = RAdd(r2CD1,r2CD0);
          real r2CD4#1 = RMul(vdot26B8,r2C98);
          real r2CD6#1 = RMul(vdot26BA,r2C9F);
          real r2CD8#1 = RMul(vdot26BC,r2CA6);
          real r2CD9#1 = RAdd(r2CD4,r2CD6);
          real r2CDA#1 = RAdd(r2CD9,r2CD8);
          tensor[3] op1_e3_l_382CBF#1 = <tensor[3]>[r2CCA,r2CD2,r2CDA];
          tensor[3] op1_e3_l_542CF8#3 = VNeg<3>(op1_e3_l_382CBF);
          real op1_e3_l_562CFB#1 = VDot<3>(op1_e3_l_542CF8,op1_e3_l_542CF8);
          real op1_e3_l_572CFE#2 = Sqrt(op1_e3_l_562CFB);
          real op1_e3_l_582D01#1 = Abs<real>(op1_e3_l_232639);
          real op1_e3_l_592D04#1 = RMul(thick1D4D,op1_e3_l_572CFE);
          real op1_e3_l_602D07#1 = RDiv(op1_e3_l_582D01,op1_e3_l_592D04);
          real op1_e3_l_612D0A#1 = RSub(_t1D8B,op1_e3_l_602D07);
          real op1_e3_l_622D0D#1 = RMul(_t24F0,op1_e3_l_612D0A);
          real op1_e3_l_632D10#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real a2D13#2 = RMul(_t1D8B,op1_e3_l_632D10);
          bool _t2D16#1 = GT<real>(a2D13,_t1D84);
          if _t2D16 then goto ASSIGN3274 else goto JOIN2DEA
        ASSIGN3274:  preds = [COND2D18]
          real _t2D1F#1 = RSub(_t1D8B,a2D13);
          real op1_e3_l_32D22#1 = VDot<3>(rayVec1D67,rayVec1D67);
          real op1_e3_l_42D25#1 = Sqrt(op1_e3_l_32D22);
          real op1_e3_l_52D28#1 = RMul(rayStep1D57,op1_e3_l_42D25);
          real _t2D2B#1 = RDiv(op1_e3_l_52D28,refStep1D55);
          real _t2D2E#1 = MathFn<pow>(_t2D1F,_t2D2B);
          real _t2D30#2 = 0.11e1;
          real _t2D32#1 = 0.7e0;
          real op1_e3_l_672D34#1 = RDiv(_t1D8B,op1_e3_l_572CFE);
          real op1_e3_l_682D39#1 = VDot<3>(op1_e3_l_542CF8,light1D63);
          real _t2D3C#1 = RMul(op1_e3_l_672D34,op1_e3_l_682D39);
          real shade2D3F#1 = Max<real>(_t1D84,_t2D3C);
          real op1_e3_l_152D43#1 = RSub(rayN1D65,camNear1D51);
          real op1_e3_l_162D46#1 = RSub(camFar1D53,camNear1D51);
          real op1_e3_l_172D49#1 = RDiv(op1_e3_l_152D43,op1_e3_l_162D46);
          real op1_e3_l_182D4C#1 = RSub(_t2D32,_t2D30);
          real op1_e3_l_192D4F#1 = RMul(op1_e3_l_172D49,op1_e3_l_182D4C);
          real op1_e3_l_202D52#1 = RMul(phongKd1D5B,shade2D3F);
          real Mtransform2D55#1 = Transform<IMAGE1D<double[3]>>(I1D3D);
          real MxPos2D57#1 = RMul(Mtransform2D55,compositionl2636);
          real Ttranslate2D5A#1 = Translate<IMAGE1D<double[3]>>(I1D3D);
          real imgPos2D5C#2 = RAdd(MxPos2D57,Ttranslate2D5A);
          real nd2D5F#2 = Floor<1>(imgPos2D5C);
          real f2D61#2 = RSub(imgPos2D5C,nd2D5F);
          int n2D64#5 = RealToInt<1>(nd2D5F);
          bool isInside2D68#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D64,I1D3D);
          if isInside2D68 then goto ASSIGN3280 else goto ASSIGN3278
        ASSIGN3280:  preds = [COND2D6A]
          int offp2D6F#3 = IMul(ilit2504,n2D64);
          real v0_2D70#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D6F);
          int addRes2D72#1 = IAdd(n2D64,ilit24FE);
          int offp2D73#3 = IMul(ilit2504,addRes2D72);
          real v1_2D74#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D73);
          tensor[2] v_2D75#1 = <tensor[2]>[v0_2D70,v1_2D74];
          int offp2D76#1 = IAdd(offp2D6F,ilit24FE);
          real v0_2D77#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D76);
          int offp2D78#1 = IAdd(offp2D73,ilit24FE);
          real v1_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D78);
          tensor[2] v_2D7A#1 = <tensor[2]>[v0_2D77,v1_2D79];
          int offp2D7C#1 = IAdd(offp2D6F,ilit2501);
          real v0_2D7D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7C);
          int offp2D7E#1 = IAdd(offp2D73,ilit2501);
          real v1_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7E);
          tensor[2] v_2D80#1 = <tensor[2]>[v0_2D7D,v1_2D7F];
          tensor[3,2] voxels2D81#1 = <tensor[3,2]>[v_2D75,v_2D7A,v_2D80];
          goto JOIN2D9B
        JOIN2D9B:  preds = [ASSIGN2D97,ASSIGN2E47]
          tensor[3,2] ldvox2D99#3 = phi(voxels2D81,voxels2E2F)
          real idx2D9E#1 = RSub(f2D61,_t1D8B);
          tensor[2] kernX_2D9C#1 = <tensor[2]>[f2D61,idx2D9E];
          tensor[2] a02DA3#1 = <tensor[2]>[_t1D8B,_t1D8B];
          tensor[2] a12DA4#1 = <tensor[2]>[coeff25C2,_t1D8B];
          tensor[2] prod12DA9#1 = VMul<2>(kernX_2D9C,a12DA4);
          tensor[2] kevalX_d0_2DA2#3 = VAdd<2>(a02DA3,prod12DA9);
          tensor[2] projIx2DB3#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D99);
          real vdot2DB4#1 = VDot<2>(projIx2DB3,kevalX_d0_2DA2);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D99);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA2);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D99);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA2);
          real op1_e3_l_222DC1#2 = RSub(_t1D8B,_t2D2E);
          real op1_e3_l_232DC4#1 = RAdd(_t2D30,op1_e3_l_192D4F);
          real op1_e3_l_242DC7#1 = RAdd(phongKa1D59,op1_e3_l_202D52);
          real r2DCC#1 = RMul(transp1D69,op1_e3_l_222DC1);
          real r2DCD#1 = RMul(r2DCC,op1_e3_l_232DC4);
          real r2DCE#3 = RMul(r2DCD,op1_e3_l_242DC7);
          real r2DCF#1 = RMul(r2DCE,vdot2DB4);
          real r2DD1#1 = RMul(r2DCE,vdot2DB6);
          real r2DD3#1 = RMul(r2DCE,vdot2DB8);
          tensor[3] op1_e3_l_252DCA#1 = <tensor[3]>[r2DCF,r2DD1,r2DD3];
          tensor[3] rgb2DDF#1 = VAdd<3>(rgb1D6B,op1_e3_l_252DCA);
          real op1_e3_l_52DE2#1 = RSub(_t1D8B,op1_e3_l_222DC1);
          real transp2DE5#1 = RMul(transp1D69,op1_e3_l_52DE2);
          goto JOIN2DEA
        JOIN2DEA:  preds = [ASSIGN2DE7,COND2D18]
          tensor[3] rgb2DE8#1 = phi(rgb2DDF,rgb1D6B)
          real transp2DE9#1 = phi(transp2DE5,transp1D69)
          goto JOIN2DED
        JOIN2DED:  preds = [JOIN2DEA,MASSIGN2E4E]
          tensor[3] rgb2DEB#1 = phi(rgb2DE8,rgb1D6B)
          real transp2DEC#1 = phi(transp2DE9,transp1D69)
          goto JOIN2DF0
        JOIN2DF0:  preds = [JOIN2DED,COND1D9F]
          tensor[3] rgb2DEE#1 = phi(rgb2DEB,rgb1D6B)
          real transp2DEF#1 = phi(transp2DEC,transp1D69)
          goto JOIN2DF3
        JOIN2DF3:  preds = [JOIN2DF0,COND1D9C]
          tensor[3] rgb2DF1#1 = phi(rgb2DEE,rgb1D6B)
          real transp2DF2#1 = phi(transp2DEF,transp1D69)
          goto JOIN2DF6
        JOIN2DF6:  preds = [JOIN2DF3,COND1D97]
          tensor[3] rgb2DF4#1 = phi(rgb2DF1,rgb1D6B)
          real transp2DF5#1 = phi(transp2DF2,transp1D69)
          goto JOIN2DF9
        JOIN2DF9:  preds = [JOIN2DF6,COND1D94]
          tensor[3] rgb2DF7#1 = phi(rgb2DF4,rgb1D6B)
          real transp2DF8#1 = phi(transp2DF5,transp1D69)
          goto JOIN2DFC
        JOIN2DFC:  preds = [JOIN2DF9,COND1D8F]
          tensor[3] rgb2DFA#1 = phi(rgb2DF7,rgb1D6B)
          real transp2DFB#1 = phi(transp2DF8,transp1D69)
          goto JOIN2DFF
        JOIN2DFF:  preds = [JOIN2DFC,COND1D8A]
          tensor[3] rgb2DFD#3 = phi(rgb2DFA,rgb1D6B)
          real transp2DFE#2 = phi(transp2DFB,transp1D69)
          real _t2E00#1 = 0.1e-1;
          bool _t2E02#1 = LT<real>(transp2DFE,_t2E00);
          if _t2E02 then goto SAVE2E05 else goto JOIN2E09
        SAVE2E05:  preds = [COND2E04]
          self.transp = _t1D84;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E09
        JOIN2E09:  preds = [*STABILIZE2E07,COND2E04]
          real transp2E08#2 = phi(transp2DFE)
          bool _t2E0A#1 = GT<real>(rayN1D65,camFar1D53);
          if _t2E0A then goto SAVE2E0D else goto JOIN2E10
        SAVE2E0D:  preds = [COND2E0C]
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E10
        JOIN2E10:  preds = [*STABILIZE2E0F,COND2E0C]
          real rayN2E11#1 = RAdd(rayN1D65,rayStep1D57);
          self.rayN = rayN2E11;
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          active
        ASSIGN3278:  preds = [COND2D6A]
          int ix2E1A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,n2D64);
          int offp2E1C#3 = IMul(ilit2504,ix2E1A);
          real v0_2E1D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E1C);
          int addRes2E1F#1 = IAdd(n2D64,ilit24FE);
          int ix2E20#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E1F);
          int offp2E21#3 = IMul(ilit2504,ix2E20);
          real v1_2E22#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E21);
          tensor[2] v_2E23#1 = <tensor[2]>[v0_2E1D,v1_2E22];
          int offp2E24#1 = IAdd(offp2E1C,ilit24FE);
          real v0_2E25#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E24);
          int offp2E26#1 = IAdd(offp2E21,ilit24FE);
          real v1_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E26);
          tensor[2] v_2E28#1 = <tensor[2]>[v0_2E25,v1_2E27];
          int offp2E2A#1 = IAdd(offp2E1C,ilit2501);
          real v0_2E2B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2A);
          int offp2E2C#1 = IAdd(offp2E21,ilit2501);
          real v1_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2C);
          tensor[2] v_2E2E#1 = <tensor[2]>[v0_2E2B,v1_2E2D];
          tensor[3,2] voxels2E2F#1 = <tensor[3,2]>[v_2E23,v_2E28,v_2E2E];
          goto JOIN2D9B
        ASSIGN2E4A:  preds = [COND24EF]
          string _t2E49#1 = "\n";
          Print<[tensor[3],string]>(x1D81,_t2E49);
          string _t2E4C#1 = "wait what\?\n";
          Print<[string]>(_t2E4C);
          goto JOIN2DED
        ASSIGN2E4F:  preds = [COND1D74]
          bool _t1D78#1 = NEQ<int>(vi1D6F,sv1D61);
          goto JOIN1D79
    end update
    method stabilize
        ENTRY2E50:  preds = []
          bool debug2E51#1 = globals.debug1AD5;
          int su2E53#1 = globals.su1AD6;
          int sv2E55#1 = globals.sv1AD7;
          real transp2E57#1 = self.transp;
          tensor[3] rgb2E59#3 = self.rgb;
          tensor[4] rgba2E5B#1 = self.rgba;
          int ui2E5D#1 = self.ui;
          int vi2E5F#1 = self.vi;
          real _t2E61#1 = 0.1e1;
          real a2E63#6 = RSub(_t2E61,transp2E57);
          real _t2E66#1 = 0.e0;
          bool _t2E68#1 = GT<real>(a2E63,_t2E66);
          if _t2E68 then goto ASSIGN2E6C else goto JOIN2E7D
        ASSIGN2E6C:  preds = [COND2E6A]
          real _t2E6B#1 = VIndex<3,0>(rgb2E59);
          real _t2E6D#1 = RDiv(_t2E6B,a2E63);
          real _t2E70#1 = VIndex<3,1>(rgb2E59);
          real _t2E72#1 = RDiv(_t2E70,a2E63);
          real _t2E75#1 = VIndex<3,2>(rgb2E59);
          real _t2E77#1 = RDiv(_t2E75,a2E63);
          tensor[4] rgba2E7A#1 = <tensor[4]>[_t2E6D,_t2E72,_t2E77,a2E63];
          goto JOIN2E7D
        JOIN2E7D:  preds = [ASSIGN2E7B,COND2E6A]
          tensor[4] rgba2E7C#2 = phi(rgba2E7A,rgba2E5B)
          bool _t2E7E#1 = EQ<int>(ui2E5D,su2E53);
          if _t2E7E then goto ASSIGN2E82 else goto JOIN2E88
        ASSIGN2E82:  preds = [COND2E80]
          bool _t2E81#1 = EQ<int>(vi2E5F,sv2E55);
          if _t2E81 then goto COND2E84 else goto JOIN2E87
        COND2E84:  preds = [COND2E83]
          if debug2E51 then goto MASSIGN2E85 else goto JOIN2E86
        MASSIGN2E85:  preds = [COND2E84]
          Print<[real,tensor[4]]>(a2E63,rgba2E7C);
          goto JOIN2E86
        JOIN2E86:  preds = [MASSIGN2E85,COND2E84]
          goto JOIN2E87
        JOIN2E87:  preds = [JOIN2E86,COND2E83]
          goto JOIN2E88
        JOIN2E88:  preds = [JOIN2E87,COND2E80]
          self.rgba = rgba2E7C;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E8B:  preds = []
      int iresU2E8C#1 = globals.iresU1ACC;
      int iresV2E8E#1 = globals.iresV1ACD;
      int _t2E90#2 = 0;
      int _t2E92#2 = 1;
      int _t2E94#1 = ISub(iresV2E8E,_t2E92);
      int[] _t2E96#1 = Range(_t2E90,_t2E94);
    FOREACH2E99:  preds = [ASSIGN2E97,NEXT2EA2]
      foreach (vi2E98 in _t2E96) on exit goto RETURN2EA3
      int _t2E9A#1 = ISub(iresU2E8C,_t2E92);
      int[] _t2E9C#1 = Range(_t2E90,_t2E9A);
    FOREACH2E9F:  preds = [ASSIGN2E9D,NEXT2EA1]
      foreach (ui2E9E in _t2E9C) on exit goto NEXT2EA2
      new raycast(ui2E9E,vi2E98);
      goto FOREACH2E9F
    NEXT2EA2:  preds = [FOREACH2E9F]
      goto FOREACH2E99
    RETURN2EA3:  preds = [FOREACH2E99]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AC3 (a) = <no-default>
  input 0b043B_intermedateGlobal1AC4 (b) = <no-default>
  input 0c043D_intermedateGlobal1AC5 (c) = <no-default>
  input isoval1AC6 (isoval) = <default>
  input thick1AC7 (thick) = <default>
  input camEye1AC8 (camEye) = <default>
  input camAt1AC9 (camAt) = <default>
  input camUp1ACA (camUp) = <default>
  input camFOV1ACB (camFOV) = <default>
  input iresU1ACC (iresU) = <default>
  input iresV1ACD (iresV) = <default>
  input camNear1ACE (camNear) = <default>
  input camFar1ACF (camFar) = <default>
  input refStep1AD0 (refStep) = <default>
  input rayStep1AD1 (rayStep) = <default>
  input lightVsp1AD2 (lightVsp) = <default>
  input phongKa1AD3 (phongKa) = <default>
  input phongKd1AD4 (phongKd) = <default>
  input debug1AD5 (debug) = <default>
  input su1AD6 (su) = <default>
  input sv1AD7 (sv) = <default>
  global real camDist1AD8
  global tensor[3] camN1AD9
  global tensor[3] camU1ADA
  global tensor[3] camV1ADB
  global real camVmax1ADC
  global real camUmax1ADD
  global tensor[3] light1ADE
  global femData:Mesh _t1ADF
  global femData:Space _tX1AE0
  global femData:FemFunc c1AE1
  global image(IMAGE1D<double[3]>) I1AE4
## functions
  function femData:MeshPos findPos1DA1 (femData:Mesh mesh1DA2#19, tensor[3] pos1DA3#3) {
    ENTRY1DA4:  preds = []
      real _t1DA5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1DA7#1 = <tensor[3]>[_t1DA5,_t1DA5,_t1DA5];
      int newtonInt1DA9#1 = 0;
      int[] yayCells1DAB#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1DA2,pos1DA3);
    FOREACH1DAE:  preds = [ASSIGN1DAC,NEXT24E3]
      foreach (cellItter1DAD in yayCells1DAB) on exit goto ASSIGN24E5
        tensor[3] xn24E2#1 = phi(xn1DA7,xn2383)
      int _t1DAF#6 = 2;
      int[] _t1DB1#1 = Range(newtonInt1DA9,_t1DAF);
    FOREACH1DB4:  preds = [ASSIGN1DB2,NEXT24E1]
      foreach (newtonItter1DB3 in _t1DB1) on exit goto NEXT24E3
        tensor[3] xn2383#5 = phi(xn24E2,xn2447)
      int ilit1DB6#1 = 4;
      int mulRes1DB7#4 = IMul(cellItter1DAD,ilit1DB6);
      int idx1DBA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,mulRes1DB7);
      int ilit1DBB#5 = 1;
      int addRes1DBC#1 = IAdd(mulRes1DB7,ilit1DBB);
      int idx1DBD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBC);
      int addRes1DBF#1 = IAdd(mulRes1DB7,_t1DAF);
      int idx1DC0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DBF);
      int ilit1DC1#5 = 3;
      int addRes1DC2#1 = IAdd(mulRes1DB7,ilit1DC1);
      int idx1DC3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1DA2,addRes1DC2);
      int mulRes1DD9#3 = IMul(ilit1DC1,idx1DBA);
      int addRes1DDC#1 = IAdd(ilit1DBB,mulRes1DD9);
      int addRes1DDE#1 = IAdd(_t1DAF,mulRes1DD9);
      real dof_load1DDF#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DD9);
      real dof_load1DE0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDC);
      real dof_load1DE1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DDE);
      int mulRes1DE4#3 = IMul(ilit1DC1,idx1DBD);
      int addRes1DE6#1 = IAdd(ilit1DBB,mulRes1DE4);
      int addRes1DE7#1 = IAdd(_t1DAF,mulRes1DE4);
      real dof_load1DE8#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DE4);
      real dof_load1DE9#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DE7);
      int mulRes1DED#3 = IMul(ilit1DC1,idx1DC0);
      int addRes1DEF#1 = IAdd(ilit1DBB,mulRes1DED);
      int addRes1DF0#1 = IAdd(_t1DAF,mulRes1DED);
      real dof_load1DF1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DED);
      real dof_load1DF2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF0);
      int mulRes1DF6#3 = IMul(ilit1DC1,idx1DC3);
      int addRes1DF8#1 = IAdd(ilit1DBB,mulRes1DF6);
      int addRes1DF9#1 = IAdd(_t1DAF,mulRes1DF6);
      real dof_load1DFA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,mulRes1DF6);
      real dof_load1DFB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF8);
      real dof_load1DFC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1DA2,addRes1DF9);
      real coeff1E2D#22 = -0.1e1;
      real one1E2E#33 = 0.1e1;
      real prod1E2F#2 = RMul(one1E2E,one1E2E);
      real prod1E30#2 = RMul(one1E2E,prod1E2F);
      real basisEval1E31#3 = RMul(coeff1E2D,prod1E30);
      real basisEval1E32#10 = RMul(one1E2E,prod1E30);
      real basisEval1E33#45 = 0.e0;
      real r1E4A#2 = RMul(dof_load1DDF,basisEval1E31);
      real r1E4D#1 = RMul(dof_load1DE8,basisEval1E32);
      real r1E50#2 = RMul(dof_load1DF1,basisEval1E33);
      real r1E53#2 = RMul(dof_load1DFA,basisEval1E33);
      real r1E54#1 = RAdd(r1E4A,r1E4D);
      real r1E55#1 = RAdd(r1E54,r1E50);
      real r1E56#13 = RAdd(r1E55,r1E53);
      real r1E5A#1 = RMul(dof_load1DE8,basisEval1E33);
      real r1E5C#1 = RMul(dof_load1DF1,basisEval1E32);
      real r1E5F#2 = RAdd(r1E4A,r1E5A);
      real r1E60#1 = RAdd(r1E5F,r1E5C);
      real r1E61#13 = RAdd(r1E60,r1E53);
      real r1E69#1 = RMul(dof_load1DFA,basisEval1E32);
      real r1E6B#1 = RAdd(r1E5F,r1E50);
      real r1E6C#12 = RAdd(r1E6B,r1E69);
      real r1E6F#2 = RMul(dof_load1DE0,basisEval1E31);
      real r1E71#1 = RMul(dof_load1DE9,basisEval1E32);
      real r1E73#2 = RMul(dof_load1DF2,basisEval1E33);
      real r1E75#2 = RMul(dof_load1DFB,basisEval1E33);
      real r1E76#1 = RAdd(r1E6F,r1E71);
      real r1E77#1 = RAdd(r1E76,r1E73);
      real r1E78#13 = RAdd(r1E77,r1E75);
      real r1E7A#1 = RMul(dof_load1DE9,basisEval1E33);
      real r1E7B#1 = RMul(dof_load1DF2,basisEval1E32);
      real r1E7D#2 = RAdd(r1E6F,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#13 = RAdd(r1E7E,r1E75);
      real r1E83#1 = RMul(dof_load1DFB,basisEval1E32);
      real r1E85#1 = RAdd(r1E7D,r1E73);
      real r1E86#12 = RAdd(r1E85,r1E83);
      real r1E89#2 = RMul(dof_load1DE1,basisEval1E31);
      real r1E8B#1 = RMul(dof_load1DEA,basisEval1E32);
      real r1E8D#2 = RMul(dof_load1DF3,basisEval1E33);
      real r1E8F#2 = RMul(dof_load1DFC,basisEval1E33);
      real r1E90#1 = RAdd(r1E89,r1E8B);
      real r1E91#1 = RAdd(r1E90,r1E8D);
      real r1E92#13 = RAdd(r1E91,r1E8F);
      real r1E94#1 = RMul(dof_load1DEA,basisEval1E33);
      real r1E95#1 = RMul(dof_load1DF3,basisEval1E32);
      real r1E97#2 = RAdd(r1E89,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#13 = RAdd(r1E98,r1E8F);
      real r1E9D#1 = RMul(dof_load1DFC,basisEval1E32);
      real r1E9F#1 = RAdd(r1E97,r1E8D);
      real r1EA0#12 = RAdd(r1E9F,r1E9D);
      real r1F01#3 = RMul(basisEval1E33,r1E56);
      real r1F03#3 = RMul(basisEval1E33,r1E78);
      real r1F05#5 = RMul(basisEval1E33,r1E92);
      real r1F06#3 = RAdd(r1F01,r1F03);
      real r1F07#9 = RAdd(r1F06,r1F05);
      real r1F09#3 = RMul(basisEval1E33,r1E61);
      real r1F0B#3 = RMul(basisEval1E33,r1E7F);
      real r1F0D#5 = RMul(basisEval1E33,r1E99);
      real r1F0E#3 = RAdd(r1F09,r1F0B);
      real r1F0F#9 = RAdd(r1F0E,r1F0D);
      real r1F11#3 = RMul(basisEval1E33,r1E6C);
      real r1F13#3 = RMul(basisEval1E33,r1E86);
      real r1F15#5 = RMul(basisEval1E33,r1EA0);
      real r1F16#3 = RAdd(r1F11,r1F13);
      real r1F17#12 = RAdd(r1F16,r1F15);
      real r1F1A#1 = RMul(coeff1E2D,r1E92);
      real r1F1B#3 = RAdd(r1F06,r1F1A);
      real r1F1C#1 = RMul(coeff1E2D,r1E99);
      real r1F1D#3 = RAdd(r1F0E,r1F1C);
      real r1F1E#1 = RMul(coeff1E2D,r1EA0);
      real r1F1F#4 = RAdd(r1F16,r1F1E);
      real r1F22#1 = RMul(one1E2E,r1E78);
      real r1F23#1 = RAdd(r1F01,r1F22);
      real r1F24#3 = RAdd(r1F23,r1F05);
      real r1F25#1 = RMul(one1E2E,r1E7F);
      real r1F26#1 = RAdd(r1F09,r1F25);
      real r1F27#3 = RAdd(r1F26,r1F0D);
      real r1F28#1 = RMul(one1E2E,r1E86);
      real r1F29#1 = RAdd(r1F11,r1F28);
      real r1F2A#4 = RAdd(r1F29,r1F15);
      real r1F2D#1 = RMul(one1E2E,r1E92);
      real r1F2E#3 = RAdd(r1F06,r1F2D);
      real r1F2F#1 = RMul(one1E2E,r1E99);
      real r1F30#3 = RAdd(r1F0E,r1F2F);
      real r1F31#1 = RMul(one1E2E,r1EA0);
      real r1F32#4 = RAdd(r1F16,r1F31);
      real r1F34#1 = RMul(coeff1E2D,r1E56);
      real r1F35#1 = RAdd(r1F34,r1F03);
      real r1F36#3 = RAdd(r1F35,r1F05);
      real r1F37#1 = RMul(coeff1E2D,r1E61);
      real r1F38#1 = RAdd(r1F37,r1F0B);
      real r1F39#3 = RAdd(r1F38,r1F0D);
      real r1F3A#1 = RMul(coeff1E2D,r1E6C);
      real r1F3B#1 = RAdd(r1F3A,r1F13);
      real r1F3C#4 = RAdd(r1F3B,r1F15);
      real r1F3F#1 = RMul(coeff1E2D,r1E78);
      real r1F40#1 = RAdd(r1F01,r1F3F);
      real r1F41#3 = RAdd(r1F40,r1F05);
      real r1F42#1 = RMul(coeff1E2D,r1E7F);
      real r1F43#1 = RAdd(r1F09,r1F42);
      real r1F44#3 = RAdd(r1F43,r1F0D);
      real r1F45#1 = RMul(coeff1E2D,r1E86);
      real r1F46#1 = RAdd(r1F11,r1F45);
      real r1F47#4 = RAdd(r1F46,r1F15);
      real r1F49#1 = RMul(one1E2E,r1E56);
      real r1F4A#1 = RAdd(r1F49,r1F03);
      real r1F4B#3 = RAdd(r1F4A,r1F05);
      real r1F4C#1 = RMul(one1E2E,r1E61);
      real r1F4D#1 = RAdd(r1F4C,r1F0B);
      real r1F4E#3 = RAdd(r1F4D,r1F0D);
      real r1F4F#1 = RMul(one1E2E,r1E6C);
      real r1F50#1 = RAdd(r1F4F,r1F13);
      real r1F51#4 = RAdd(r1F50,r1F15);
      real r1FAE#1 = RMul(r1E56,r1F07);
      real r1FB1#1 = RMul(r1E78,r1F2E);
      real r1FB4#1 = RMul(r1E92,r1F41);
      real r1FB5#1 = RAdd(r1FAE,r1FB1);
      real r1FB6#1 = RAdd(r1FB5,r1FB4);
      real r1FB8#1 = RMul(r1E56,r1F0F);
      real r1FBA#1 = RMul(r1E78,r1F30);
      real r1FBC#1 = RMul(r1E92,r1F44);
      real r1FBD#1 = RAdd(r1FB8,r1FBA);
      real r1FBE#2 = RAdd(r1FBD,r1FBC);
      real r1FC0#1 = RMul(r1E56,r1F17);
      real r1FC2#1 = RMul(r1E78,r1F32);
      real r1FC4#1 = RMul(r1E92,r1F47);
      real r1FC5#1 = RAdd(r1FC0,r1FC2);
      real r1FC6#2 = RAdd(r1FC5,r1FC4);
      real r1FC9#1 = RMul(r1E56,r1F1B);
      real r1FCB#1 = RMul(r1E78,r1F07);
      real r1FCD#1 = RMul(r1E92,r1F4B);
      real r1FCE#1 = RAdd(r1FC9,r1FCB);
      real r1FCF#1 = RAdd(r1FCE,r1FCD);
      real r1FD1#1 = RMul(r1E56,r1F1D);
      real r1FD3#1 = RMul(r1E78,r1F0F);
      real r1FD5#1 = RMul(r1E92,r1F4E);
      real r1FD6#1 = RAdd(r1FD1,r1FD3);
      real r1FD7#2 = RAdd(r1FD6,r1FD5);
      real r1FD9#1 = RMul(r1E56,r1F1F);
      real r1FDB#1 = RMul(r1E78,r1F17);
      real r1FDD#1 = RMul(r1E92,r1F51);
      real r1FDE#1 = RAdd(r1FD9,r1FDB);
      real r1FDF#2 = RAdd(r1FDE,r1FDD);
      real r1FE2#1 = RMul(r1E56,r1F24);
      real r1FE4#1 = RMul(r1E78,r1F36);
      real r1FE6#1 = RMul(r1E92,r1F07);
      real r1FE7#1 = RAdd(r1FE2,r1FE4);
      real r1FE8#1 = RAdd(r1FE7,r1FE6);
      real r1FEA#1 = RMul(r1E56,r1F27);
      real r1FEC#1 = RMul(r1E78,r1F39);
      real r1FEE#1 = RMul(r1E92,r1F0F);
      real r1FEF#1 = RAdd(r1FEA,r1FEC);
      real r1FF0#2 = RAdd(r1FEF,r1FEE);
      real r1FF2#1 = RMul(r1E56,r1F2A);
      real r1FF4#1 = RMul(r1E78,r1F3C);
      real r1FF6#1 = RMul(r1E92,r1F17);
      real r1FF7#1 = RAdd(r1FF2,r1FF4);
      real r1FF8#2 = RAdd(r1FF7,r1FF6);
      real r1FFC#1 = RMul(r1E61,r1F07);
      real r1FFE#1 = RMul(r1E7F,r1F2E);
      real r2000#1 = RMul(r1E99,r1F41);
      real r2001#1 = RAdd(r1FFC,r1FFE);
      real r2002#2 = RAdd(r2001,r2000);
      real r2003#1 = RMul(r1E61,r1F0F);
      real r2004#1 = RMul(r1E7F,r1F30);
      real r2005#1 = RMul(r1E99,r1F44);
      real r2006#1 = RAdd(r2003,r2004);
      real r2007#1 = RAdd(r2006,r2005);
      real r2008#1 = RMul(r1E61,r1F17);
      real r2009#1 = RMul(r1E7F,r1F32);
      real r200A#1 = RMul(r1E99,r1F47);
      real r200B#1 = RAdd(r2008,r2009);
      real r200C#2 = RAdd(r200B,r200A);
      real r200E#1 = RMul(r1E61,r1F1B);
      real r200F#1 = RMul(r1E7F,r1F07);
      real r2010#1 = RMul(r1E99,r1F4B);
      real r2011#1 = RAdd(r200E,r200F);
      real r2012#2 = RAdd(r2011,r2010);
      real r2013#1 = RMul(r1E61,r1F1D);
      real r2014#1 = RMul(r1E7F,r1F0F);
      real r2015#1 = RMul(r1E99,r1F4E);
      real r2016#1 = RAdd(r2013,r2014);
      real r2017#1 = RAdd(r2016,r2015);
      real r2018#1 = RMul(r1E61,r1F1F);
      real r2019#1 = RMul(r1E7F,r1F17);
      real r201A#1 = RMul(r1E99,r1F51);
      real r201B#1 = RAdd(r2018,r2019);
      real r201C#2 = RAdd(r201B,r201A);
      real r201E#1 = RMul(r1E61,r1F24);
      real r201F#1 = RMul(r1E7F,r1F36);
      real r2020#1 = RMul(r1E99,r1F07);
      real r2021#1 = RAdd(r201E,r201F);
      real r2022#2 = RAdd(r2021,r2020);
      real r2023#1 = RMul(r1E61,r1F27);
      real r2024#1 = RMul(r1E7F,r1F39);
      real r2025#1 = RMul(r1E99,r1F0F);
      real r2026#1 = RAdd(r2023,r2024);
      real r2027#1 = RAdd(r2026,r2025);
      real r2028#1 = RMul(r1E61,r1F2A);
      real r2029#1 = RMul(r1E7F,r1F3C);
      real r202A#1 = RMul(r1E99,r1F17);
      real r202B#1 = RAdd(r2028,r2029);
      real r202C#2 = RAdd(r202B,r202A);
      real r2030#1 = RMul(r1E6C,r1F07);
      real r2032#1 = RMul(r1E86,r1F2E);
      real r2034#1 = RMul(r1EA0,r1F41);
      real r2035#1 = RAdd(r2030,r2032);
      real r2036#2 = RAdd(r2035,r2034);
      real r2037#1 = RMul(r1E6C,r1F0F);
      real r2038#1 = RMul(r1E86,r1F30);
      real r2039#1 = RMul(r1EA0,r1F44);
      real r203A#1 = RAdd(r2037,r2038);
      real r203B#2 = RAdd(r203A,r2039);
      real r203C#1 = RMul(r1E6C,r1F17);
      real r203D#1 = RMul(r1E86,r1F32);
      real r203E#1 = RMul(r1EA0,r1F47);
      real r203F#1 = RAdd(r203C,r203D);
      real r2040#1 = RAdd(r203F,r203E);
      real r2042#1 = RMul(r1E6C,r1F1B);
      real r2043#1 = RMul(r1E86,r1F07);
      real r2044#1 = RMul(r1EA0,r1F4B);
      real r2045#1 = RAdd(r2042,r2043);
      real r2046#2 = RAdd(r2045,r2044);
      real r2047#1 = RMul(r1E6C,r1F1D);
      real r2048#1 = RMul(r1E86,r1F0F);
      real r2049#1 = RMul(r1EA0,r1F4E);
      real r204A#1 = RAdd(r2047,r2048);
      real r204B#2 = RAdd(r204A,r2049);
      real r204C#1 = RMul(r1E6C,r1F1F);
      real r204D#1 = RMul(r1E86,r1F17);
      real r204E#1 = RMul(r1EA0,r1F51);
      real r204F#1 = RAdd(r204C,r204D);
      real r2050#1 = RAdd(r204F,r204E);
      real r2052#1 = RMul(r1E6C,r1F24);
      real r2053#1 = RMul(r1E86,r1F36);
      real r2054#1 = RMul(r1EA0,r1F07);
      real r2055#1 = RAdd(r2052,r2053);
      real r2056#2 = RAdd(r2055,r2054);
      real r2057#1 = RMul(r1E6C,r1F27);
      real r2058#1 = RMul(r1E86,r1F39);
      real r2059#1 = RMul(r1EA0,r1F0F);
      real r205A#1 = RAdd(r2057,r2058);
      real r205B#2 = RAdd(r205A,r2059);
      real r205C#1 = RMul(r1E6C,r1F2A);
      real r205D#1 = RMul(r1E86,r1F3C);
      real r205E#1 = RMul(r1EA0,r1F17);
      real r205F#1 = RAdd(r205C,r205D);
      real r2060#1 = RAdd(r205F,r205E);
      tensor[3] probe_l_14211C#1 = <tensor[3]>[r1E56,r1E78,r1E92];
      tensor[3] probe_l_152169#3 = <tensor[3]>[r1E61,r1E7F,r1E99];
      tensor[3] tensor2214#1 = <tensor[3]>[r1F17,r1F32,r1F47];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F1F,r1F17,r1F51];
      tensor[3] tensor2221#1 = <tensor[3]>[r1F2A,r1F3C,r1F17];
      real vdot2244#1 = VDot<3>(probe_l_152169,tensor2214);
      real vdot2246#1 = VDot<3>(probe_l_152169,tensor221A);
      real vdot2248#1 = VDot<3>(probe_l_152169,tensor2221);
      tensor[3] op1_e3_l_182242#1 = <tensor[3]>[vdot2244,vdot2246,vdot2248];
      real op1_e3_l_192251#1 = VDot<3>(probe_l_14211C,op1_e3_l_182242);
      real r2257#2 = RMul(basisEval1E33,r1FB6);
      real r2259#1 = RMul(basisEval1E33,r1FBE);
      real r225B#2 = RMul(basisEval1E33,r1FC6);
      real r225D#2 = RMul(basisEval1E33,r2002);
      real r225F#3 = RMul(basisEval1E33,r2007);
      real r2262#1 = RMul(one1E2E,r200C);
      real r2264#2 = RMul(basisEval1E33,r2036);
      real r2267#1 = RMul(coeff1E2D,r203B);
      real r2269#3 = RMul(basisEval1E33,r2040);
      real r226A#2 = RAdd(r2257,r2259);
      real r226B#1 = RAdd(r226A,r225B);
      real r226C#1 = RAdd(r226B,r225D);
      real r226D#1 = RAdd(r226C,r225F);
      real r226E#1 = RAdd(r226D,r2262);
      real r226F#1 = RAdd(r226E,r2264);
      real r2270#1 = RAdd(r226F,r2267);
      real r2271#1 = RAdd(r2270,r2269);
      real r2273#2 = RMul(basisEval1E33,r1FCF);
      real r2275#1 = RMul(basisEval1E33,r1FD7);
      real r2277#2 = RMul(basisEval1E33,r1FDF);
      real r2279#2 = RMul(basisEval1E33,r2012);
      real r227B#3 = RMul(basisEval1E33,r2017);
      real r227D#1 = RMul(one1E2E,r201C);
      real r227F#2 = RMul(basisEval1E33,r2046);
      real r2281#1 = RMul(coeff1E2D,r204B);
      real r2283#3 = RMul(basisEval1E33,r2050);
      real r2284#2 = RAdd(r2273,r2275);
      real r2285#1 = RAdd(r2284,r2277);
      real r2286#1 = RAdd(r2285,r2279);
      real r2287#1 = RAdd(r2286,r227B);
      real r2288#1 = RAdd(r2287,r227D);
      real r2289#1 = RAdd(r2288,r227F);
      real r228A#1 = RAdd(r2289,r2281);
      real r228B#1 = RAdd(r228A,r2283);
      real r228D#2 = RMul(basisEval1E33,r1FE8);
      real r228F#1 = RMul(basisEval1E33,r1FF0);
      real r2291#2 = RMul(basisEval1E33,r1FF8);
      real r2293#2 = RMul(basisEval1E33,r2022);
      real r2295#3 = RMul(basisEval1E33,r2027);
      real r2297#1 = RMul(one1E2E,r202C);
      real r2299#2 = RMul(basisEval1E33,r2056);
      real r229B#1 = RMul(coeff1E2D,r205B);
      real r229D#3 = RMul(basisEval1E33,r2060);
      real r229E#2 = RAdd(r228D,r228F);
      real r229F#1 = RAdd(r229E,r2291);
      real r22A0#1 = RAdd(r229F,r2293);
      real r22A1#1 = RAdd(r22A0,r2295);
      real r22A2#1 = RAdd(r22A1,r2297);
      real r22A3#1 = RAdd(r22A2,r2299);
      real r22A4#1 = RAdd(r22A3,r229B);
      real r22A5#1 = RAdd(r22A4,r229D);
      real r22A7#1 = RMul(coeff1E2D,r1FC6);
      real r22A8#2 = RMul(basisEval1E33,r200C);
      real r22A9#1 = RMul(one1E2E,r2036);
      real r22AA#2 = RMul(basisEval1E33,r203B);
      real r22AB#1 = RAdd(r226A,r22A7);
      real r22AC#1 = RAdd(r22AB,r225D);
      real r22AD#1 = RAdd(r22AC,r225F);
      real r22AE#1 = RAdd(r22AD,r22A8);
      real r22AF#1 = RAdd(r22AE,r22A9);
      real r22B0#1 = RAdd(r22AF,r22AA);
      real r22B1#1 = RAdd(r22B0,r2269);
      real r22B2#1 = RMul(coeff1E2D,r1FDF);
      real r22B3#2 = RMul(basisEval1E33,r201C);
      real r22B4#1 = RMul(one1E2E,r2046);
      real r22B5#2 = RMul(basisEval1E33,r204B);
      real r22B6#1 = RAdd(r2284,r22B2);
      real r22B7#1 = RAdd(r22B6,r2279);
      real r22B8#1 = RAdd(r22B7,r227B);
      real r22B9#1 = RAdd(r22B8,r22B3);
      real r22BA#1 = RAdd(r22B9,r22B4);
      real r22BB#1 = RAdd(r22BA,r22B5);
      real r22BC#1 = RAdd(r22BB,r2283);
      real r22BD#1 = RMul(coeff1E2D,r1FF8);
      real r22BE#2 = RMul(basisEval1E33,r202C);
      real r22BF#1 = RMul(one1E2E,r2056);
      real r22C0#2 = RMul(basisEval1E33,r205B);
      real r22C1#1 = RAdd(r229E,r22BD);
      real r22C2#1 = RAdd(r22C1,r2293);
      real r22C3#1 = RAdd(r22C2,r2295);
      real r22C4#1 = RAdd(r22C3,r22BE);
      real r22C5#1 = RAdd(r22C4,r22BF);
      real r22C6#1 = RAdd(r22C5,r22C0);
      real r22C7#1 = RAdd(r22C6,r229D);
      real r22C9#1 = RMul(one1E2E,r1FBE);
      real r22CA#1 = RMul(coeff1E2D,r2002);
      real r22CB#1 = RAdd(r2257,r22C9);
      real r22CC#1 = RAdd(r22CB,r225B);
      real r22CD#1 = RAdd(r22CC,r22CA);
      real r22CE#1 = RAdd(r22CD,r225F);
      real r22CF#1 = RAdd(r22CE,r22A8);
      real r22D0#1 = RAdd(r22CF,r2264);
      real r22D1#1 = RAdd(r22D0,r22AA);
      real r22D2#1 = RAdd(r22D1,r2269);
      real r22D3#1 = RMul(one1E2E,r1FD7);
      real r22D4#1 = RMul(coeff1E2D,r2012);
      real r22D5#1 = RAdd(r2273,r22D3);
      real r22D6#1 = RAdd(r22D5,r2277);
      real r22D7#1 = RAdd(r22D6,r22D4);
      real r22D8#1 = RAdd(r22D7,r227B);
      real r22D9#1 = RAdd(r22D8,r22B3);
      real r22DA#1 = RAdd(r22D9,r227F);
      real r22DB#1 = RAdd(r22DA,r22B5);
      real r22DC#1 = RAdd(r22DB,r2283);
      real r22DD#1 = RMul(one1E2E,r1FF0);
      real r22DE#1 = RMul(coeff1E2D,r2022);
      real r22DF#1 = RAdd(r228D,r22DD);
      real r22E0#1 = RAdd(r22DF,r2291);
      real r22E1#1 = RAdd(r22E0,r22DE);
      real r22E2#1 = RAdd(r22E1,r2295);
      real r22E3#1 = RAdd(r22E2,r22BE);
      real r22E4#1 = RAdd(r22E3,r2299);
      real r22E5#1 = RAdd(r22E4,r22C0);
      real r22E6#1 = RAdd(r22E5,r229D);
      real realLit237E#1 = 0.2e1;
      real op1_e3_l_21237D#9 = RMul(realLit237E,op1_e3_l_192251);
      real varAcc2384#1 = VIndex<3,0>(xn2383);
      real varAcc2385#1 = VIndex<3,1>(xn2383);
      real varAcc2386#1 = VIndex<3,2>(xn2383);
      real prod238B#2 = RMul(varAcc2384,prod1E2F);
      real prod238D#1 = RMul(varAcc2385,one1E2E);
      real prod238E#2 = RMul(one1E2E,prod238D);
      real prod2390#1 = RMul(one1E2E,varAcc2386);
      real prod2391#2 = RMul(one1E2E,prod2390);
      real mult2394#1 = RMul(coeff1E2D,prod2391);
      real mult2395#1 = RMul(coeff1E2D,prod238E);
      real mult2396#1 = RMul(coeff1E2D,prod238B);
      real sum2397#1 = RAdd(mult2395,mult2396);
      real sum2398#1 = RAdd(mult2394,sum2397);
      real sum2399#3 = RAdd(basisEval1E32,sum2398);
      real basisEval239B#3 = RMul(one1E2E,prod238B);
      real basisEval239C#3 = RMul(one1E2E,prod238E);
      real basisEval239D#3 = RMul(one1E2E,prod2391);
      real r23BE#1 = RMul(dof_load1DDF,sum2399);
      real r23C1#1 = RMul(dof_load1DE8,basisEval239B);
      real r23C4#1 = RMul(dof_load1DF1,basisEval239C);
      real r23C7#1 = RMul(dof_load1DFA,basisEval239D);
      real r23C8#1 = RAdd(r23BE,r23C1);
      real r23C9#1 = RAdd(r23C8,r23C4);
      real r23CA#1 = RAdd(r23C9,r23C7);
      real r23CC#1 = RMul(dof_load1DE0,sum2399);
      real r23CE#1 = RMul(dof_load1DE9,basisEval239B);
      real r23D0#1 = RMul(dof_load1DF2,basisEval239C);
      real r23D2#1 = RMul(dof_load1DFB,basisEval239D);
      real r23D3#1 = RAdd(r23CC,r23CE);
      real r23D4#1 = RAdd(r23D3,r23D0);
      real r23D5#1 = RAdd(r23D4,r23D2);
      real r23D7#1 = RMul(dof_load1DE1,sum2399);
      real r23D9#1 = RMul(dof_load1DEA,basisEval239B);
      real r23DB#1 = RMul(dof_load1DF3,basisEval239C);
      real r23DD#1 = RMul(dof_load1DFC,basisEval239D);
      real r23DE#1 = RAdd(r23D7,r23D9);
      real r23DF#1 = RAdd(r23DE,r23DB);
      real r23E0#1 = RAdd(r23DF,r23DD);
      tensor[3] probe_l_2223BB#1 = <tensor[3]>[r23CA,r23D5,r23E0];
      real r240A#1 = RDiv(r2271,op1_e3_l_21237D);
      real r240C#1 = RDiv(r228B,op1_e3_l_21237D);
      real r240E#1 = RDiv(r22A5,op1_e3_l_21237D);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22B1,op1_e3_l_21237D);
      real r2413#1 = RDiv(r22BC,op1_e3_l_21237D);
      real r2415#1 = RDiv(r22C7,op1_e3_l_21237D);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      real r2418#1 = RDiv(r22D2,op1_e3_l_21237D);
      real r241A#1 = RDiv(r22DC,op1_e3_l_21237D);
      real r241C#1 = RDiv(r22E6,op1_e3_l_21237D);
      tensor[3] tensor241D#1 = <tensor[3]>[r2418,r241A,r241C];
      tensor[3] op1_e3_l_242435#3 = VSub<3>(probe_l_2223BB,pos1DA3);
      real vdot243A#1 = VDot<3>(tensor240F,op1_e3_l_242435);
      real vdot243C#1 = VDot<3>(tensor2416,op1_e3_l_242435);
      real vdot243E#1 = VDot<3>(tensor241D,op1_e3_l_242435);
      tensor[3] op1_e3_l_252438#3 = <tensor[3]>[vdot243A,vdot243C,vdot243E];
      tensor[3] xn2447#4 = VSub<3>(xn2383,op1_e3_l_252438);
      real _t244A#2 = 0.1e-7;
      real _t244C#1 = RMul(_t244A,_t244A);
      real _t24AE#1 = VDot<3>(op1_e3_l_252438,op1_e3_l_252438);
      bool _t24B1#1 = GTE<real>(_t244C,_t24AE);
      if _t24B1 then goto ASSIGN24B7 else goto JOIN24E0
    ASSIGN24B7:  preds = [COND24B3]
      real _t24B6#4 = 0.1e-4;
      real _t24B8#1 = RAdd(one1E2E,_t24B6);
      tensor[3] _t24BB#1 = <tensor[3]>[one1E2E,one1E2E,one1E2E];
      real _t24BD#1 = VDot<3>(_t24BB,xn2447);
      bool _t24C0#1 = GT<real>(_t24B8,_t24BD);
      tensor[3] _t24C2#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24C4#3 = VAdd<3>(_t24C2,xn2447);
      real _t24C7#1 = VIndex<3,0>(_t24C4);
      real _t24C9#3 = -0.e0;
      bool _t24CB#1 = GT<real>(_t24C7,_t24C9);
      real _t24CD#1 = VIndex<3,1>(_t24C4);
      bool _t24CF#1 = GT<real>(_t24CD,_t24C9);
      real _t24D1#1 = VIndex<3,2>(_t24C4);
      bool _t24D3#1 = GT<real>(_t24D1,_t24C9);
      bool _t24D5#1 = BAnd(_t24CF,_t24D3);
      bool _t24D7#1 = BAnd(_t24CB,_t24D5);
      bool _t24D9#1 = BAnd(_t24C0,_t24D7);
      if _t24D9 then goto ASSIGN24DD else goto JOIN24DF
    ASSIGN24DD:  preds = [COND24DB]
      femData:MeshPos _t24DC#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1DA2,cellItter1DAD,xn2447,pos1DA3);
      return _t24DC
      goto JOIN24DF
    JOIN24DF:  preds = [*RETURN(_t24DC)24DE,COND24DB]
      goto JOIN24E0
    JOIN24E0:  preds = [JOIN24DF,COND24B3]
      goto FOREACH1DB4
    NEXT24E3:  preds = [FOREACH1DB4]
      goto FOREACH1DAE
    ASSIGN24E5:  preds = [FOREACH1DAE]
      string _t24E4#1 = "Bad end 2";
      string _t24E6#1 = "\n";
      Print<[string,string]>(_t24E4,_t24E6);
      femData:MeshPos _t24E9#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1DA2);
      return _t24E9
}
## input initialization
  ENTRY1AE5:  preds = []
    real isoval1AE6#1 = 0.2e0;
    globals.isoval1AC6 = isoval1AE6;
    real thick1AE9#1 = 0.7e-1;
    globals.thick1AC7 = thick1AE9;
    real _t1AEC#2 = 0.3e1;
    real _t1AEE#1 = -0.3e1;
    tensor[3] camEye1AF0#1 = <tensor[3]>[_t1AEC,_t1AEE,_t1AEC];
    globals.camEye1AC8 = camEye1AF0;
    real _t1AF3#3 = 0.5e0;
    tensor[3] camAt1AF5#1 = <tensor[3]>[_t1AF3,_t1AF3,_t1AF3];
    globals.camAt1AC9 = camAt1AF5;
    real _t1AF8#2 = 0.e0;
    real _t1AFA#2 = 0.1e1;
    tensor[3] camUp1AFC#2 = <tensor[3]>[_t1AF8,_t1AF8,_t1AFA];
    globals.camUp1ACA = camUp1AFC;
    real camFOV1AFF#1 = 0.137e2;
    globals.camFOV1ACB = camFOV1AFF;
    int iresU1B02#2 = 500;
    globals.iresU1ACC = iresU1B02;
    globals.iresV1ACD = iresU1B02;
    real camNear1B06#1 = -0.2e1;
    globals.camNear1ACE = camNear1B06;
    real camFar1B09#1 = 0.5e1;
    globals.camFar1ACF = camFar1B09;
    globals.refStep1AD0 = _t1AFA;
    real rayStep1B0D#1 = 0.1e-1;
    globals.rayStep1AD1 = rayStep1B0D;
    globals.lightVsp1AD2 = camUp1AFC;
    real phongKa1B11#1 = 0.1e0;
    globals.phongKa1AD3 = phongKa1B11;
    real phongKd1B14#1 = 0.9e0;
    globals.phongKd1AD4 = phongKd1B14;
    bool debug1B17#1 = false;
    globals.debug1AD5 = debug1B17;
    int su1B1A#2 = 250;
    globals.su1AD6 = su1B1A;
    globals.sv1AD7 = su1B1A;
    return
## global-variable initialization
  ENTRY1B1F:  preds = []
    femData:Mesh a1B20#3 = globals.a1AC3;
    femData:Space 0b043B_intermedateGlobal1B22#1 = globals.0b043B_intermedateGlobal1AC4;
    femData:FemFunc 0c043D_intermedateGlobal1B24#1 = globals.0c043D_intermedateGlobal1AC5;
    tensor[3] camEye1B26#1 = globals.camEye1AC8;
    tensor[3] camAt1B28#1 = globals.camAt1AC9;
    tensor[3] camUp1B2A#3 = globals.camUp1ACA;
    real camFOV1B2C#1 = globals.camFOV1ACB;
    int iresU1B2E#1 = globals.iresU1ACC;
    int iresV1B30#1 = globals.iresV1ACD;
    tensor[3] lightVsp1B32#5 = globals.lightVsp1AD2;
    int _t1B34#1 = 0;
    int _t1B36#1 = 1;
    int _t1B38#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B20);
    int _t1B3A#1 = ISub(_t1B38,_t1B36);
    int[] _t1B3C#1 = Range(_t1B34,_t1B3A);
    femData:MeshCell[] _t1B3E#1 = <femData:MeshCell[]>{};
  FOREACH1B41:  preds = [ASSIGN1B3F,NEXT1B47]
    foreach (_t1B40 in _t1B3C) on exit goto ASSIGN1B49
      femData:MeshCell[] _t1B45#1 = phi(_t1B3E,_t1B44)
    femData:MeshCell _t1B42#1 = LoadFem<femData:MeshCell>(a1B20,_t1B40);
    femData:MeshCell[] _t1B44#1 = Append<femData:MeshCell>(_t1B45,_t1B42);
    goto FOREACH1B41
  ASSIGN1B49:  preds = [FOREACH1B41]
    femData:Space b1B48#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1B22,a1B20);
    femData:FemFunc c1B4A#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1B24,b1B48);
    femData:Space _t1B4C#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B4A);
    femData:Mesh _t1B4E#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B4C);
    image(IMAGE1D<double[3]>) I1B50#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B56#9 = VSub<3>(camAt1B28,camEye1B26);
    real op1_e3_l_41B59#1 = VDot<3>(op1_e3_l_21B56,op1_e3_l_21B56);
    real camDist1B5C#4 = Sqrt(op1_e3_l_41B59);
    globals.camDist1AD8 = camDist1B5C;
    real realLit1B61#9 = 0.1e1;
    real op1_e3_l_91B60#6 = RDiv(realLit1B61,camDist1B5C);
    tensor[3] camN1B65#4 = VScale<3>(op1_e3_l_91B60,op1_e3_l_21B56);
    globals.camN1AD9 = camN1B65;
    real realLit1B6A#6 = 0.e0;
    real r1B6B#3 = TensorIndex<tensor[3],[0]>(camUp1B2A);
    real r1B6C#3 = RMul(realLit1B6A,r1B6B);
    real r1B6D#3 = TensorIndex<tensor[3],[1]>(camUp1B2A);
    real r1B6E#3 = RMul(realLit1B6A,r1B6D);
    real r1B6F#3 = TensorIndex<tensor[3],[2]>(camUp1B2A);
    real r1B70#5 = RMul(realLit1B6A,r1B6F);
    real r1B71#3 = RAdd(r1B6C,r1B6E);
    real r1B72#3 = RAdd(r1B71,r1B70);
    real r1B74#1 = RMul(realLit1B61,r1B6F);
    real r1B75#1 = RAdd(r1B71,r1B74);
    real realLit1B76#6 = -0.1e1;
    real r1B77#1 = RMul(realLit1B76,r1B6D);
    real r1B78#1 = RAdd(r1B6C,r1B77);
    real r1B79#1 = RAdd(r1B78,r1B70);
    tensor[3] tensor1B7A#1 = <tensor[3]>[r1B72,r1B75,r1B79];
    real r1B7B#1 = RMul(realLit1B76,r1B6F);
    real r1B7C#1 = RAdd(r1B71,r1B7B);
    real r1B7D#1 = RMul(realLit1B61,r1B6B);
    real r1B7E#1 = RAdd(r1B7D,r1B6E);
    real r1B7F#1 = RAdd(r1B7E,r1B70);
    tensor[3] tensor1B80#1 = <tensor[3]>[r1B7C,r1B72,r1B7F];
    real r1B81#1 = RMul(realLit1B61,r1B6D);
    real r1B82#1 = RAdd(r1B6C,r1B81);
    real r1B83#1 = RAdd(r1B82,r1B70);
    real r1B84#1 = RMul(realLit1B76,r1B6B);
    real r1B85#1 = RAdd(r1B84,r1B6E);
    real r1B86#1 = RAdd(r1B85,r1B70);
    tensor[3] tensor1B87#1 = <tensor[3]>[r1B83,r1B86,r1B72];
    real vdot1BAA#1 = VDot<3>(op1_e3_l_21B56,tensor1B7A);
    real vdot1BAC#1 = VDot<3>(op1_e3_l_21B56,tensor1B80);
    real vdot1BAE#1 = VDot<3>(op1_e3_l_21B56,tensor1B87);
    tensor[3] op1_e3_l_171BA8#6 = <tensor[3]>[vdot1BAA,vdot1BAC,vdot1BAE];
    real op1_e3_l_341BB7#1 = VDot<3>(op1_e3_l_171BA8,op1_e3_l_171BA8);
    real r1BBB#1 = RMul(op1_e3_l_91B60,op1_e3_l_91B60);
    real op1_e3_l_351BBA#1 = RMul(r1BBB,op1_e3_l_341BB7);
    real op1_e3_l_361BBF#1 = Sqrt(op1_e3_l_351BBA);
    tensor[3] op1_e3_l_371BC2#1 = VScale<3>(op1_e3_l_91B60,op1_e3_l_171BA8);
    real op1_e3_l_381BC5#2 = RDiv(realLit1B61,op1_e3_l_361BBF);
    tensor[3] camU1BCA#4 = VScale<3>(op1_e3_l_381BC5,op1_e3_l_371BC2);
    globals.camU1ADA = camU1BCA;
    real r1BD0#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B56);
    real r1BD1#3 = RMul(realLit1B6A,r1BD0);
    real r1BD2#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B56);
    real r1BD3#3 = RMul(realLit1B6A,r1BD2);
    real r1BD4#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B56);
    real r1BD5#5 = RMul(realLit1B6A,r1BD4);
    real r1BD6#3 = RAdd(r1BD1,r1BD3);
    real r1BD7#3 = RAdd(r1BD6,r1BD5);
    real r1BD9#1 = RMul(realLit1B61,r1BD4);
    real r1BDA#1 = RAdd(r1BD6,r1BD9);
    real r1BDC#1 = RMul(realLit1B76,r1BD2);
    real r1BDD#1 = RAdd(r1BD1,r1BDC);
    real r1BDE#1 = RAdd(r1BDD,r1BD5);
    tensor[3] tensor1BDF#1 = <tensor[3]>[r1BD7,r1BDA,r1BDE];
    real r1BE0#1 = RMul(realLit1B76,r1BD4);
    real r1BE1#1 = RAdd(r1BD6,r1BE0);
    real r1BE2#1 = RMul(realLit1B61,r1BD0);
    real r1BE3#1 = RAdd(r1BE2,r1BD3);
    real r1BE4#1 = RAdd(r1BE3,r1BD5);
    tensor[3] tensor1BE5#1 = <tensor[3]>[r1BE1,r1BD7,r1BE4];
    real r1BE6#1 = RMul(realLit1B61,r1BD2);
    real r1BE7#1 = RAdd(r1BD1,r1BE6);
    real r1BE8#1 = RAdd(r1BE7,r1BD5);
    real r1BE9#1 = RMul(realLit1B76,r1BD0);
    real r1BEA#1 = RAdd(r1BE9,r1BD3);
    real r1BEB#1 = RAdd(r1BEA,r1BD5);
    tensor[3] tensor1BEC#1 = <tensor[3]>[r1BE8,r1BEB,r1BD7];
    real vdot1C0F#1 = VDot<3>(op1_e3_l_171BA8,tensor1BDF);
    real vdot1C11#1 = VDot<3>(op1_e3_l_171BA8,tensor1BE5);
    real vdot1C13#1 = VDot<3>(op1_e3_l_171BA8,tensor1BEC);
    tensor[3] op1_e3_l_471C0D#1 = <tensor[3]>[vdot1C0F,vdot1C11,vdot1C13];
    tensor[3] op1_e3_l_501C1C#3 = VScale<3>(op1_e3_l_91B60,op1_e3_l_471C0D);
    real r1C20#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C1C);
    real r1C21#3 = RMul(op1_e3_l_381BC5,op1_e3_l_91B60);
    real r1C22#2 = RMul(r1C21,r1C20);
    real r1C23#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C1C);
    real r1C24#2 = RMul(r1C21,r1C23);
    real r1C25#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C1C);
    real r1C26#2 = RMul(r1C21,r1C25);
    tensor[3] camV1C1F#1 = <tensor[3]>[r1C22,r1C24,r1C26];
    globals.camV1ADB = camV1C1F;
    real _t1C31#1 = 0.314159265358979323846264338327950288e1;
    real _t1C33#1 = 0.36e3;
    real op1_e3_l_51C35#1 = RMul(camFOV1B2C,_t1C31);
    real op1_e3_l_61C38#1 = RDiv(op1_e3_l_51C35,_t1C33);
    real op1_e3_l_101C3B#2 = Tan(op1_e3_l_61C38);
    real camVmax1C3E#1 = RMul(op1_e3_l_101C3B,camDist1B5C);
    globals.camVmax1ADC = camVmax1C3E;
    real _t1C42#1 = IntToReal(iresU1B2E);
    real _t1C44#1 = IntToReal(iresV1B30);
    real r1C47#1 = RMul(_t1C42,op1_e3_l_101C3B);
    real op1_e3_l_141C46#1 = RMul(r1C47,camDist1B5C);
    real camUmax1C4B#1 = RDiv(op1_e3_l_141C46,_t1C44);
    globals.camUmax1ADD = camUmax1C4B;
    real op1_e3_l_31C51#1 = VDot<3>(lightVsp1B32,lightVsp1B32);
    real op1_e3_l_41C54#1 = Sqrt(op1_e3_l_31C51);
    real op1_e3_l_51C57#1 = RDiv(realLit1B61,op1_e3_l_41C54);
    real r1C5D#1 = VIndex<3,0>(camU1BCA);
    real r1C5E#3 = TensorIndex<tensor[3],[0]>(lightVsp1B32);
    real r1C5F#1 = RMul(r1C5D,r1C5E);
    real r1C61#3 = TensorIndex<tensor[3],[1]>(lightVsp1B32);
    real r1C62#1 = RMul(r1C22,r1C61);
    real r1C63#1 = VIndex<3,0>(camN1B65);
    real r1C64#3 = TensorIndex<tensor[3],[2]>(lightVsp1B32);
    real r1C65#1 = RMul(r1C63,r1C64);
    real r1C66#1 = RAdd(r1C5F,r1C62);
    real r1C67#1 = RAdd(r1C66,r1C65);
    real r1C68#1 = VIndex<3,1>(camU1BCA);
    real r1C69#1 = RMul(r1C68,r1C5E);
    real r1C6B#1 = RMul(r1C24,r1C61);
    real r1C6C#1 = VIndex<3,1>(camN1B65);
    real r1C6D#1 = RMul(r1C6C,r1C64);
    real r1C6E#1 = RAdd(r1C69,r1C6B);
    real r1C6F#1 = RAdd(r1C6E,r1C6D);
    real r1C70#1 = VIndex<3,2>(camU1BCA);
    real r1C71#1 = RMul(r1C70,r1C5E);
    real r1C73#1 = RMul(r1C26,r1C61);
    real r1C74#1 = VIndex<3,2>(camN1B65);
    real r1C75#1 = RMul(r1C74,r1C64);
    real r1C76#1 = RAdd(r1C71,r1C73);
    real r1C77#1 = RAdd(r1C76,r1C75);
    tensor[3] op1_e3_l_61C5C#1 = <tensor[3]>[r1C67,r1C6F,r1C77];
    tensor[3] light1C95#1 = VScale<3>(op1_e3_l_51C57,op1_e3_l_61C5C);
    globals.light1ADE = light1C95;
    globals._t1ADF = _t1B4E;
    globals._tX1AE0 = _t1B4C;
    globals.c1AE1 = c1B4A;
    globals.I1AE4 = I1B50;
    return
## strand
  strand raycast (int ui1CA0#2, int vi1CA1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1CAC:  preds = []
        int iresU1CAD#1 = globals.iresU1ACC;
        int iresV1CAF#1 = globals.iresV1ACD;
        real camNear1CB1#1 = globals.camNear1ACE;
        real camDist1CB3#1 = globals.camDist1AD8;
        tensor[3] camN1CB5#1 = globals.camN1AD9;
        tensor[3] camU1CB7#1 = globals.camU1ADA;
        tensor[3] camV1CB9#1 = globals.camV1ADB;
        real camVmax1CBB#3 = globals.camVmax1ADC;
        real camUmax1CBD#2 = globals.camUmax1ADD;
        real _t1CBF#4 = -0.5e0;
        real _t1CC1#1 = IntToReal(ui1CA0);
        real _t1CC3#1 = IntToReal(iresU1CAD);
        real _t1CC5#2 = 0.5e0;
        real op1_e3_l_61CC7#1 = RSub(_t1CC3,_t1CC5);
        real op1_e3_l_71CCA#1 = RSub(_t1CC1,_t1CBF);
        real op1_e3_l_81CCD#1 = RSub(op1_e3_l_61CC7,_t1CBF);
        real op1_e3_l_91CD0#2 = RNeg(camUmax1CBD);
        real op1_e3_l_101CD3#1 = RDiv(op1_e3_l_71CCA,op1_e3_l_81CCD);
        real op1_e3_l_111CD6#1 = RSub(camUmax1CBD,op1_e3_l_91CD0);
        real op1_e3_l_131CD9#1 = RMul(op1_e3_l_101CD3,op1_e3_l_111CD6);
        real rayU1CDC#2 = RAdd(op1_e3_l_91CD0,op1_e3_l_131CD9);
        real _t1CDF#1 = IntToReal(vi1CA1);
        real _t1CE1#1 = IntToReal(iresV1CAF);
        real op1_e3_l_61CE3#1 = RSub(_t1CE1,_t1CC5);
        real op1_e3_l_71CE6#1 = RSub(_t1CDF,_t1CBF);
        real op1_e3_l_81CE9#1 = RSub(op1_e3_l_61CE3,_t1CBF);
        real op1_e3_l_91CEC#1 = RNeg(camVmax1CBB);
        real op1_e3_l_101CEF#1 = RDiv(op1_e3_l_71CE6,op1_e3_l_81CE9);
        real op1_e3_l_111CF2#1 = RSub(op1_e3_l_91CEC,camVmax1CBB);
        real op1_e3_l_121CF5#1 = RMul(op1_e3_l_101CEF,op1_e3_l_111CF2);
        real rayV1CF8#2 = RAdd(camVmax1CBB,op1_e3_l_121CF5);
        tensor[3] op1_e3_l_331D0A#1 = VScale<3>(rayU1CDC,camU1CB7);
        tensor[3] op1_e3_l_341D0D#1 = VScale<3>(rayV1CF8,camV1CB9);
        tensor[3] op1_e3_l_351D10#3 = VAdd<3>(op1_e3_l_331D0A,op1_e3_l_341D0D);
        real realLit1D14#2 = 0.1e1;
        real r1D15#3 = RDiv(realLit1D14,camDist1CB3);
        real r1D16#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D10);
        real r1D17#1 = RMul(r1D15,r1D16);
        real r1D18#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D10);
        real r1D19#1 = RMul(r1D15,r1D18);
        real r1D1A#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D10);
        real r1D1B#1 = RMul(r1D15,r1D1A);
        tensor[3] op1_e3_l_361D13#1 = <tensor[3]>[r1D17,r1D19,r1D1B];
        tensor[3] rayVec1D26#1 = VAdd<3>(camN1CB5,op1_e3_l_361D13);
        real _t1D2B#8 = 0.e0;
        tensor[3] rgb1D2D#1 = <tensor[3]>[_t1D2B,_t1D2B,_t1D2B];
        tensor[4] rgba1D2F#1 = <tensor[4]>[_t1D2B,_t1D2B,_t1D2B,_t1D2B];
        self.rayU = rayU1CDC;
        self.rayV = rayV1CF8;
        self.rayN = camNear1CB1;
        self.rayVec = rayVec1D26;
        self.transp = realLit1D14;
        self.rgb = rgb1D2D;
        self.rgba = rgba1D2F;
        self.gray = _t1D2B;
        self.ui = ui1CA0;
        self.vi = vi1CA1;
        return
    end state init
    method update
        ENTRY1D3C:  preds = []
          image(IMAGE1D<double[3]>) I1D3D#17 = globals.I1AE4;
          real isoval1D3F#1 = globals.isoval1AC6;
          femData:Mesh _t1D41#17 = globals._t1ADF;
          femData:Space _t1D43#10 = globals._tX1AE0;
          femData:FemFunc c1D45#10 = globals.c1AE1;
          femData:Mesh a1D4B#1 = globals.a1AC3;
          real thick1D4D#1 = globals.thick1AC7;
          tensor[3] camEye1D4F#1 = globals.camEye1AC8;
          real camNear1D51#2 = globals.camNear1ACE;
          real camFar1D53#2 = globals.camFar1ACF;
          real refStep1D55#1 = globals.refStep1AD0;
          real rayStep1D57#2 = globals.rayStep1AD1;
          real phongKa1D59#1 = globals.phongKa1AD3;
          real phongKd1D5B#1 = globals.phongKd1AD4;
          bool debug1D5D#1 = globals.debug1AD5;
          int su1D5F#1 = globals.su1AD6;
          int sv1D61#1 = globals.sv1AD7;
          tensor[3] light1D63#1 = globals.light1ADE;
          real rayN1D65#4 = self.rayN;
          tensor[3] rayVec1D67#3 = self.rayVec;
          real transp1D69#10 = self.transp;
          tensor[3] rgb1D6B#9 = self.rgb;
          int ui1D6D#1 = self.ui;
          int vi1D6F#1 = self.vi;
          if debug1D5D then goto ASSIGN1D73 else goto JOIN1D7D
        ASSIGN1D73:  preds = [COND1D71]
          bool _t1D72#1 = NEQ<int>(ui1D6D,su1D5F);
          if _t1D72 then goto ASSIGN1D76 else goto ASSIGN2E4F
        ASSIGN1D76:  preds = [COND1D74]
          bool _t1D75#1 = true;
          goto JOIN1D79
        JOIN1D79:  preds = [ASSIGN1D76,ASSIGN2E4F]
          bool _t1D77#1 = phi(_t1D75,_t1D78)
          if _t1D77 then goto STABILIZE1D7B else goto JOIN1D7C
        STABILIZE1D7B:  preds = [COND1D7A]
          stabilize
          goto JOIN1D7C
        JOIN1D7C:  preds = [*STABILIZE1D7B,COND1D7A]
          goto JOIN1D7D
        JOIN1D7D:  preds = [JOIN1D7C,COND1D71]
          tensor[3] op1_e3_l_31D7E#1 = VScale<3>(rayN1D65,rayVec1D67);
          tensor[3] x1D81#6 = VAdd<3>(camEye1D4F,op1_e3_l_31D7E);
          real _t1D84#61 = 0.e0;
          real _t1D86#2 = VIndex<3,0>(x1D81);
          bool _t1D88#1 = LT<real>(_t1D84,_t1D86);
          if _t1D88 then goto ASSIGN1D8C else goto JOIN2DFF
        ASSIGN1D8C:  preds = [COND1D8A]
          real _t1D8B#45 = 0.1e1;
          bool _t1D8D#1 = LT<real>(_t1D86,_t1D8B);
          if _t1D8D then goto ASSIGN1D91 else goto JOIN2DFC
        ASSIGN1D91:  preds = [COND1D8F]
          real _t1D90#2 = VIndex<3,1>(x1D81);
          bool _t1D92#1 = LT<real>(_t1D84,_t1D90);
          if _t1D92 then goto ASSIGN1D96 else goto JOIN2DF9
        ASSIGN1D96:  preds = [COND1D94]
          bool _t1D95#1 = LT<real>(_t1D90,_t1D8B);
          if _t1D95 then goto ASSIGN1D99 else goto JOIN2DF6
        ASSIGN1D99:  preds = [COND1D97]
          real _t1D98#2 = VIndex<3,2>(x1D81);
          bool _t1D9A#1 = LT<real>(_t1D84,_t1D98);
          if _t1D9A then goto ASSIGN1D9E else goto JOIN2DF3
        ASSIGN1D9E:  preds = [COND1D9C]
          bool _t1D9D#1 = LT<real>(_t1D98,_t1D8B);
          if _t1D9D then goto ASSIGN24EC else goto JOIN2DF0
        ASSIGN24EC:  preds = [COND1D9F]
          femData:MeshPos p1DA0#1 = findPos1DA1 (a1D4B,x1D81);
          bool _t24ED#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1DA0);
          if _t24ED then goto ASSIGN24F1 else goto ASSIGN2E4A
        ASSIGN24F1:  preds = [COND24EF]
          real _t24F0#1 = 0.13e1;
          femData:MeshPos callFindPos24F2#2 = findPos1DA1 (_t1D41,x1D81);
          int intPos24F4#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F2);
          tensor[3] refPos24F6#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F2);
          int ilit24F9#1 = 10;
          int mulRes24FA#10 = IMul(intPos24F4,ilit24F9);
          int idx24FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,mulRes24FA);
          int ilit24FE#22 = 1;
          int addRes24FF#1 = IAdd(mulRes24FA,ilit24FE);
          int idx2500#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes24FF);
          int ilit2501#10 = 2;
          int addRes2502#1 = IAdd(mulRes24FA,ilit2501);
          int idx2503#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2502);
          int ilit2504#10 = 3;
          int addRes2505#1 = IAdd(mulRes24FA,ilit2504);
          int idx2506#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2505);
          int ilit2507#2 = 4;
          int addRes2508#1 = IAdd(mulRes24FA,ilit2507);
          int idx2509#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2508);
          int ilit250A#1 = 5;
          int addRes250B#1 = IAdd(mulRes24FA,ilit250A);
          int idx250C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250B);
          int ilit250D#1 = 6;
          int addRes250E#1 = IAdd(mulRes24FA,ilit250D);
          int idx250F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes250E);
          int ilit2510#1 = 7;
          int addRes2511#1 = IAdd(mulRes24FA,ilit2510);
          int idx2512#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2511);
          int ilit2513#1 = 8;
          int addRes2514#1 = IAdd(mulRes24FA,ilit2513);
          int idx2515#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2514);
          int ilit2516#1 = 9;
          int addRes2517#1 = IAdd(mulRes24FA,ilit2516);
          int idx2518#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D43,addRes2517);
          int mulRes2540#1 = IMul(ilit24FE,idx24FD);
          int mulRes2542#1 = IMul(ilit24FE,idx2500);
          int mulRes2545#1 = IMul(ilit24FE,idx2503);
          int mulRes2548#1 = IMul(ilit24FE,idx2506);
          int mulRes254B#1 = IMul(ilit24FE,idx2509);
          int mulRes254E#1 = IMul(ilit24FE,idx250C);
          int mulRes2551#1 = IMul(ilit24FE,idx250F);
          int mulRes2554#1 = IMul(ilit24FE,idx2512);
          int mulRes2557#1 = IMul(ilit24FE,idx2515);
          int mulRes255A#1 = IMul(ilit24FE,idx2518);
          real dof255B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2540);
          real dof255C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2542);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2545);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2548);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254B);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes254E);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2551);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2554);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes2557);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D45,mulRes255A);
          tensor[10] dofs2565#4 = <tensor[10]>[dof255B,dof255C,dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564];
          real varAcc2591#5 = VIndex<3,0>(refPos24F6);
          real varAcc2592#4 = VIndex<3,1>(refPos24F6);
          real varAcc2593#4 = VIndex<3,2>(refPos24F6);
          real coeff2594#4 = 0.2e1;
          real prod22596#1 = RMul(varAcc2591,varAcc2591);
          real prod2598#3 = RMul(_t1D8B,_t1D8B);
          real prod2599#2 = RMul(prod22596,prod2598);
          real coeff259A#7 = 0.4e1;
          real prod259C#2 = RMul(varAcc2592,_t1D8B);
          real prod259D#2 = RMul(varAcc2591,prod259C);
          real prod259F#2 = RMul(_t1D8B,varAcc2593);
          real prod25A0#2 = RMul(varAcc2591,prod259F);
          real coeff25A1#4 = -0.3e1;
          real prod25A2#5 = RMul(varAcc2591,prod2598);
          real prod225A3#1 = RMul(varAcc2592,varAcc2592);
          real prod25A4#1 = RMul(prod225A3,_t1D8B);
          real prod25A5#2 = RMul(_t1D8B,prod25A4);
          real prod25A6#1 = RMul(varAcc2592,varAcc2593);
          real prod25A7#2 = RMul(_t1D8B,prod25A6);
          real prod25A8#5 = RMul(_t1D8B,prod259C);
          real prod225A9#1 = RMul(varAcc2593,varAcc2593);
          real prod25AA#1 = RMul(_t1D8B,prod225A9);
          real prod25AB#2 = RMul(_t1D8B,prod25AA);
          real prod25AC#5 = RMul(_t1D8B,prod259F);
          real prod25AD#4 = RMul(_t1D8B,prod2598);
          real mult25AE#10 = RMul(_t1D8B,prod25AD);
          real mult25AF#1 = RMul(coeff25A1,prod25AC);
          real mult25B0#2 = RMul(coeff2594,prod25AB);
          real mult25B1#1 = RMul(coeff25A1,prod25A8);
          real mult25B2#2 = RMul(coeff259A,prod25A7);
          real mult25B3#2 = RMul(coeff2594,prod25A5);
          real mult25B4#1 = RMul(coeff25A1,prod25A2);
          real mult25B5#2 = RMul(coeff259A,prod25A0);
          real mult25B6#2 = RMul(coeff259A,prod259D);
          real mult25B7#2 = RMul(coeff2594,prod2599);
          real sum25B8#1 = RAdd(mult25B6,mult25B7);
          real sum25B9#1 = RAdd(mult25B5,sum25B8);
          real sum25BA#1 = RAdd(mult25B4,sum25B9);
          real sum25BB#1 = RAdd(mult25B3,sum25BA);
          real sum25BC#1 = RAdd(mult25B2,sum25BB);
          real sum25BD#1 = RAdd(mult25B1,sum25BC);
          real sum25BE#1 = RAdd(mult25B0,sum25BD);
          real sum25BF#1 = RAdd(mult25AF,sum25BE);
          real sum25C0#1 = RAdd(mult25AE,sum25BF);
          real coeff25C2#23 = -0.1e1;
          real mult25C3#1 = RMul(coeff25C2,prod25A2);
          real sum25C4#1 = RAdd(mult25C3,mult25B7);
          real mult25C6#1 = RMul(coeff25C2,prod25A8);
          real sum25C7#1 = RAdd(mult25C6,mult25B3);
          real mult25C9#1 = RMul(coeff25C2,prod25AC);
          real sum25CA#1 = RAdd(mult25C9,mult25B0);
          real coeff25CC#9 = -0.4e1;
          real mult25CD#5 = RMul(coeff259A,prod25AC);
          real mult25CE#1 = RMul(coeff25CC,prod25AB);
          real mult25CF#2 = RMul(coeff25CC,prod25A7);
          real mult25D0#2 = RMul(coeff25CC,prod25A0);
          real sum25D1#1 = RAdd(mult25CF,mult25D0);
          real sum25D2#1 = RAdd(mult25CE,sum25D1);
          real sum25D3#1 = RAdd(mult25CD,sum25D2);
          real mult25D5#5 = RMul(coeff259A,prod25A8);
          real mult25D6#1 = RMul(coeff25CC,prod25A5);
          real mult25D7#2 = RMul(coeff25CC,prod259D);
          real sum25D8#1 = RAdd(mult25D6,mult25D7);
          real sum25D9#1 = RAdd(mult25CF,sum25D8);
          real sum25DA#1 = RAdd(mult25D5,sum25D9);
          real mult25DC#5 = RMul(coeff259A,prod25A2);
          real mult25DD#1 = RMul(coeff25CC,prod2599);
          real sum25DE#1 = RAdd(mult25D7,mult25DD);
          real sum25DF#1 = RAdd(mult25D0,sum25DE);
          real sum25E0#1 = RAdd(mult25DC,sum25DF);
          tensor[10] intermediateCons25E2#1 = <tensor[10]>[sum25C0,sum25C4,sum25C7,sum25CA,mult25B2,mult25B5,mult25B6,sum25D3,sum25DA,sum25E0];
          real compositionl2636#2 = VDot<10>(dofs2565,intermediateCons25E2);
          real op1_e3_l_232639#1 = RSub(compositionl2636,isoval1D3F);
          real mult264D#1 = RMul(coeff25A1,prod25AD);
          real sum2651#1 = RAdd(mult25D5,mult25DC);
          real sum2652#1 = RAdd(mult25CD,sum2651);
          real sum2653#3 = RAdd(mult264D,sum2652);
          real mult2656#6 = RMul(coeff25C2,prod25AD);
          real sum2657#1 = RAdd(mult2656,mult25DC);
          real basisEval265B#4 = RMul(coeff25CC,prod25AC);
          real basisEval265C#4 = RMul(coeff25CC,prod25A8);
          real coeff265D#3 = -0.8e1;
          real mult265E#3 = RMul(coeff259A,prod25AD);
          real mult265F#1 = RMul(coeff265D,prod25A2);
          real sum2660#1 = RAdd(basisEval265C,mult265F);
          real sum2661#1 = RAdd(basisEval265B,sum2660);
          real sum2662#1 = RAdd(mult265E,sum2661);
          real sum2665#1 = RAdd(mult2656,mult25D5);
          real mult2667#1 = RMul(coeff265D,prod25A8);
          real mult2668#4 = RMul(coeff25CC,prod25A2);
          real sum2669#1 = RAdd(mult2667,mult2668);
          real sum266A#1 = RAdd(basisEval265B,sum2669);
          real sum266B#1 = RAdd(mult265E,sum266A);
          real sum266E#1 = RAdd(mult2656,mult25CD);
          real mult2670#1 = RMul(coeff265D,prod25AC);
          real sum2671#1 = RAdd(basisEval265C,mult2668);
          real sum2672#1 = RAdd(mult2670,sum2671);
          real sum2673#1 = RAdd(mult265E,sum2672);
          tensor[10] intermediateCons2675#1 = <tensor[10]>[sum2653,sum2657,_t1D84,_t1D84,_t1D84,mult25CD,mult25D5,basisEval265B,basisEval265C,sum2662];
          tensor[10] intermediateCons2676#1 = <tensor[10]>[sum2653,_t1D84,sum2665,_t1D84,mult25CD,_t1D84,mult25DC,basisEval265B,sum266B,mult2668];
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2653,_t1D84,_t1D84,sum266E,mult25D5,mult25DC,_t1D84,sum2673,basisEval265C,mult2668];
          real vdot26B8#3 = VDot<10>(dofs2565,intermediateCons2675);
          real vdot26BA#3 = VDot<10>(dofs2565,intermediateCons2676);
          real vdot26BC#3 = VDot<10>(dofs2565,intermediateCons2677);
          int mulRes26C7#4 = IMul(intPos24F4,ilit2507);
          int idx26CA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,mulRes26C7);
          int addRes26CC#1 = IAdd(mulRes26C7,ilit24FE);
          int idx26CD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CC);
          int addRes26CF#1 = IAdd(mulRes26C7,ilit2501);
          int idx26D0#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26CF);
          int addRes26D2#1 = IAdd(mulRes26C7,ilit2504);
          int idx26D3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D41,addRes26D2);
          int mulRes26E9#3 = IMul(ilit2504,idx26CA);
          int addRes26EC#1 = IAdd(ilit24FE,mulRes26E9);
          int addRes26EE#1 = IAdd(ilit2501,mulRes26E9);
          real dof_load26EF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26E9);
          real dof_load26F0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EC);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26EE);
          int mulRes26F4#3 = IMul(ilit2504,idx26CD);
          int addRes26F6#1 = IAdd(ilit24FE,mulRes26F4);
          int addRes26F7#1 = IAdd(ilit2501,mulRes26F4);
          real dof_load26F8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26F4);
          real dof_load26F9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26F7);
          int mulRes26FD#3 = IMul(ilit2504,idx26D0);
          int addRes26FF#1 = IAdd(ilit24FE,mulRes26FD);
          int addRes2700#1 = IAdd(ilit2501,mulRes26FD);
          real dof_load2701#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes26FD);
          real dof_load2702#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2700);
          int mulRes2706#3 = IMul(ilit2504,idx26D3);
          int addRes2708#1 = IAdd(ilit24FE,mulRes2706);
          int addRes2709#1 = IAdd(ilit2501,mulRes2706);
          real dof_load270A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,mulRes2706);
          real dof_load270B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D41,addRes2709);
          real r275A#2 = RMul(dof_load26EF,mult2656);
          real r275D#1 = RMul(dof_load26F8,mult25AE);
          real r2760#2 = RMul(dof_load2701,_t1D84);
          real r2763#2 = RMul(dof_load270A,_t1D84);
          real r2764#1 = RAdd(r275A,r275D);
          real r2765#1 = RAdd(r2764,r2760);
          real r2766#13 = RAdd(r2765,r2763);
          real r276A#1 = RMul(dof_load26F8,_t1D84);
          real r276C#1 = RMul(dof_load2701,mult25AE);
          real r276F#2 = RAdd(r275A,r276A);
          real r2770#1 = RAdd(r276F,r276C);
          real r2771#13 = RAdd(r2770,r2763);
          real r2779#1 = RMul(dof_load270A,mult25AE);
          real r277B#1 = RAdd(r276F,r2760);
          real r277C#12 = RAdd(r277B,r2779);
          real r277F#2 = RMul(dof_load26F0,mult2656);
          real r2781#1 = RMul(dof_load26F9,mult25AE);
          real r2783#2 = RMul(dof_load2702,_t1D84);
          real r2785#2 = RMul(dof_load270B,_t1D84);
          real r2786#1 = RAdd(r277F,r2781);
          real r2787#1 = RAdd(r2786,r2783);
          real r2788#13 = RAdd(r2787,r2785);
          real r278A#1 = RMul(dof_load26F9,_t1D84);
          real r278B#1 = RMul(dof_load2702,mult25AE);
          real r278D#2 = RAdd(r277F,r278A);
          real r278E#1 = RAdd(r278D,r278B);
          real r278F#13 = RAdd(r278E,r2785);
          real r2793#1 = RMul(dof_load270B,mult25AE);
          real r2795#1 = RAdd(r278D,r2783);
          real r2796#12 = RAdd(r2795,r2793);
          real r2799#2 = RMul(dof_load26F1,mult2656);
          real r279B#1 = RMul(dof_load26FA,mult25AE);
          real r279D#2 = RMul(dof_load2703,_t1D84);
          real r279F#2 = RMul(dof_load270C,_t1D84);
          real r27A0#1 = RAdd(r2799,r279B);
          real r27A1#1 = RAdd(r27A0,r279D);
          real r27A2#13 = RAdd(r27A1,r279F);
          real r27A4#1 = RMul(dof_load26FA,_t1D84);
          real r27A5#1 = RMul(dof_load2703,mult25AE);
          real r27A7#2 = RAdd(r2799,r27A4);
          real r27A8#1 = RAdd(r27A7,r27A5);
          real r27A9#13 = RAdd(r27A8,r279F);
          real r27AD#1 = RMul(dof_load270C,mult25AE);
          real r27AF#1 = RAdd(r27A7,r279D);
          real r27B0#12 = RAdd(r27AF,r27AD);
          real r2811#3 = RMul(_t1D84,r2766);
          real r2813#3 = RMul(_t1D84,r2788);
          real r2815#5 = RMul(_t1D84,r27A2);
          real r2816#3 = RAdd(r2811,r2813);
          real r2817#9 = RAdd(r2816,r2815);
          real r2819#3 = RMul(_t1D84,r2771);
          real r281B#3 = RMul(_t1D84,r278F);
          real r281D#5 = RMul(_t1D84,r27A9);
          real r281E#3 = RAdd(r2819,r281B);
          real r281F#9 = RAdd(r281E,r281D);
          real r2821#3 = RMul(_t1D84,r277C);
          real r2823#3 = RMul(_t1D84,r2796);
          real r2825#5 = RMul(_t1D84,r27B0);
          real r2826#3 = RAdd(r2821,r2823);
          real r2827#12 = RAdd(r2826,r2825);
          real r282A#1 = RMul(coeff25C2,r27A2);
          real r282B#3 = RAdd(r2816,r282A);
          real r282C#1 = RMul(coeff25C2,r27A9);
          real r282D#3 = RAdd(r281E,r282C);
          real r282E#1 = RMul(coeff25C2,r27B0);
          real r282F#4 = RAdd(r2826,r282E);
          real r2832#1 = RMul(_t1D8B,r2788);
          real r2833#1 = RAdd(r2811,r2832);
          real r2834#3 = RAdd(r2833,r2815);
          real r2835#1 = RMul(_t1D8B,r278F);
          real r2836#1 = RAdd(r2819,r2835);
          real r2837#3 = RAdd(r2836,r281D);
          real r2838#1 = RMul(_t1D8B,r2796);
          real r2839#1 = RAdd(r2821,r2838);
          real r283A#4 = RAdd(r2839,r2825);
          real r283D#1 = RMul(_t1D8B,r27A2);
          real r283E#3 = RAdd(r2816,r283D);
          real r283F#1 = RMul(_t1D8B,r27A9);
          real r2840#3 = RAdd(r281E,r283F);
          real r2841#1 = RMul(_t1D8B,r27B0);
          real r2842#4 = RAdd(r2826,r2841);
          real r2844#1 = RMul(coeff25C2,r2766);
          real r2845#1 = RAdd(r2844,r2813);
          real r2846#3 = RAdd(r2845,r2815);
          real r2847#1 = RMul(coeff25C2,r2771);
          real r2848#1 = RAdd(r2847,r281B);
          real r2849#3 = RAdd(r2848,r281D);
          real r284A#1 = RMul(coeff25C2,r277C);
          real r284B#1 = RAdd(r284A,r2823);
          real r284C#4 = RAdd(r284B,r2825);
          real r284F#1 = RMul(coeff25C2,r2788);
          real r2850#1 = RAdd(r2811,r284F);
          real r2851#3 = RAdd(r2850,r2815);
          real r2852#1 = RMul(coeff25C2,r278F);
          real r2853#1 = RAdd(r2819,r2852);
          real r2854#3 = RAdd(r2853,r281D);
          real r2855#1 = RMul(coeff25C2,r2796);
          real r2856#1 = RAdd(r2821,r2855);
          real r2857#4 = RAdd(r2856,r2825);
          real r2859#1 = RMul(_t1D8B,r2766);
          real r285A#1 = RAdd(r2859,r2813);
          real r285B#3 = RAdd(r285A,r2815);
          real r285C#1 = RMul(_t1D8B,r2771);
          real r285D#1 = RAdd(r285C,r281B);
          real r285E#3 = RAdd(r285D,r281D);
          real r285F#1 = RMul(_t1D8B,r277C);
          real r2860#1 = RAdd(r285F,r2823);
          real r2861#4 = RAdd(r2860,r2825);
          real r28BE#1 = RMul(r2766,r2817);
          real r28C1#1 = RMul(r2788,r283E);
          real r28C4#1 = RMul(r27A2,r2851);
          real r28C5#1 = RAdd(r28BE,r28C1);
          real r28C6#1 = RAdd(r28C5,r28C4);
          real r28C8#1 = RMul(r2766,r281F);
          real r28CA#1 = RMul(r2788,r2840);
          real r28CC#1 = RMul(r27A2,r2854);
          real r28CD#1 = RAdd(r28C8,r28CA);
          real r28CE#2 = RAdd(r28CD,r28CC);
          real r28D0#1 = RMul(r2766,r2827);
          real r28D2#1 = RMul(r2788,r2842);
          real r28D4#1 = RMul(r27A2,r2857);
          real r28D5#1 = RAdd(r28D0,r28D2);
          real r28D6#2 = RAdd(r28D5,r28D4);
          real r28D9#1 = RMul(r2766,r282B);
          real r28DB#1 = RMul(r2788,r2817);
          real r28DD#1 = RMul(r27A2,r285B);
          real r28DE#1 = RAdd(r28D9,r28DB);
          real r28DF#1 = RAdd(r28DE,r28DD);
          real r28E1#1 = RMul(r2766,r282D);
          real r28E3#1 = RMul(r2788,r281F);
          real r28E5#1 = RMul(r27A2,r285E);
          real r28E6#1 = RAdd(r28E1,r28E3);
          real r28E7#2 = RAdd(r28E6,r28E5);
          real r28E9#1 = RMul(r2766,r282F);
          real r28EB#1 = RMul(r2788,r2827);
          real r28ED#1 = RMul(r27A2,r2861);
          real r28EE#1 = RAdd(r28E9,r28EB);
          real r28EF#2 = RAdd(r28EE,r28ED);
          real r28F2#1 = RMul(r2766,r2834);
          real r28F4#1 = RMul(r2788,r2846);
          real r28F6#1 = RMul(r27A2,r2817);
          real r28F7#1 = RAdd(r28F2,r28F4);
          real r28F8#1 = RAdd(r28F7,r28F6);
          real r28FA#1 = RMul(r2766,r2837);
          real r28FC#1 = RMul(r2788,r2849);
          real r28FE#1 = RMul(r27A2,r281F);
          real r28FF#1 = RAdd(r28FA,r28FC);
          real r2900#2 = RAdd(r28FF,r28FE);
          real r2902#1 = RMul(r2766,r283A);
          real r2904#1 = RMul(r2788,r284C);
          real r2906#1 = RMul(r27A2,r2827);
          real r2907#1 = RAdd(r2902,r2904);
          real r2908#2 = RAdd(r2907,r2906);
          real r290C#1 = RMul(r2771,r2817);
          real r290E#1 = RMul(r278F,r283E);
          real r2910#1 = RMul(r27A9,r2851);
          real r2911#1 = RAdd(r290C,r290E);
          real r2912#2 = RAdd(r2911,r2910);
          real r2913#1 = RMul(r2771,r281F);
          real r2914#1 = RMul(r278F,r2840);
          real r2915#1 = RMul(r27A9,r2854);
          real r2916#1 = RAdd(r2913,r2914);
          real r2917#1 = RAdd(r2916,r2915);
          real r2918#1 = RMul(r2771,r2827);
          real r2919#1 = RMul(r278F,r2842);
          real r291A#1 = RMul(r27A9,r2857);
          real r291B#1 = RAdd(r2918,r2919);
          real r291C#2 = RAdd(r291B,r291A);
          real r291E#1 = RMul(r2771,r282B);
          real r291F#1 = RMul(r278F,r2817);
          real r2920#1 = RMul(r27A9,r285B);
          real r2921#1 = RAdd(r291E,r291F);
          real r2922#2 = RAdd(r2921,r2920);
          real r2923#1 = RMul(r2771,r282D);
          real r2924#1 = RMul(r278F,r281F);
          real r2925#1 = RMul(r27A9,r285E);
          real r2926#1 = RAdd(r2923,r2924);
          real r2927#1 = RAdd(r2926,r2925);
          real r2928#1 = RMul(r2771,r282F);
          real r2929#1 = RMul(r278F,r2827);
          real r292A#1 = RMul(r27A9,r2861);
          real r292B#1 = RAdd(r2928,r2929);
          real r292C#2 = RAdd(r292B,r292A);
          real r292E#1 = RMul(r2771,r2834);
          real r292F#1 = RMul(r278F,r2846);
          real r2930#1 = RMul(r27A9,r2817);
          real r2931#1 = RAdd(r292E,r292F);
          real r2932#2 = RAdd(r2931,r2930);
          real r2933#1 = RMul(r2771,r2837);
          real r2934#1 = RMul(r278F,r2849);
          real r2935#1 = RMul(r27A9,r281F);
          real r2936#1 = RAdd(r2933,r2934);
          real r2937#1 = RAdd(r2936,r2935);
          real r2938#1 = RMul(r2771,r283A);
          real r2939#1 = RMul(r278F,r284C);
          real r293A#1 = RMul(r27A9,r2827);
          real r293B#1 = RAdd(r2938,r2939);
          real r293C#2 = RAdd(r293B,r293A);
          real r2940#1 = RMul(r277C,r2817);
          real r2942#1 = RMul(r2796,r283E);
          real r2944#1 = RMul(r27B0,r2851);
          real r2945#1 = RAdd(r2940,r2942);
          real r2946#2 = RAdd(r2945,r2944);
          real r2947#1 = RMul(r277C,r281F);
          real r2948#1 = RMul(r2796,r2840);
          real r2949#1 = RMul(r27B0,r2854);
          real r294A#1 = RAdd(r2947,r2948);
          real r294B#2 = RAdd(r294A,r2949);
          real r294C#1 = RMul(r277C,r2827);
          real r294D#1 = RMul(r2796,r2842);
          real r294E#1 = RMul(r27B0,r2857);
          real r294F#1 = RAdd(r294C,r294D);
          real r2950#1 = RAdd(r294F,r294E);
          real r2952#1 = RMul(r277C,r282B);
          real r2953#1 = RMul(r2796,r2817);
          real r2954#1 = RMul(r27B0,r285B);
          real r2955#1 = RAdd(r2952,r2953);
          real r2956#2 = RAdd(r2955,r2954);
          real r2957#1 = RMul(r277C,r282D);
          real r2958#1 = RMul(r2796,r281F);
          real r2959#1 = RMul(r27B0,r285E);
          real r295A#1 = RAdd(r2957,r2958);
          real r295B#2 = RAdd(r295A,r2959);
          real r295C#1 = RMul(r277C,r282F);
          real r295D#1 = RMul(r2796,r2827);
          real r295E#1 = RMul(r27B0,r2861);
          real r295F#1 = RAdd(r295C,r295D);
          real r2960#1 = RAdd(r295F,r295E);
          real r2962#1 = RMul(r277C,r2834);
          real r2963#1 = RMul(r2796,r2846);
          real r2964#1 = RMul(r27B0,r2817);
          real r2965#1 = RAdd(r2962,r2963);
          real r2966#2 = RAdd(r2965,r2964);
          real r2967#1 = RMul(r277C,r2837);
          real r2968#1 = RMul(r2796,r2849);
          real r2969#1 = RMul(r27B0,r281F);
          real r296A#1 = RAdd(r2967,r2968);
          real r296B#2 = RAdd(r296A,r2969);
          real r296C#1 = RMul(r277C,r283A);
          real r296D#1 = RMul(r2796,r284C);
          real r296E#1 = RMul(r27B0,r2827);
          real r296F#1 = RAdd(r296C,r296D);
          real r2970#1 = RAdd(r296F,r296E);
          tensor[3] probe_l_292A2C#1 = <tensor[3]>[r2766,r2788,r27A2];
          tensor[3] probe_l_302A79#3 = <tensor[3]>[r2771,r278F,r27A9];
          tensor[3] tensor2B24#1 = <tensor[3]>[r2827,r2842,r2857];
          tensor[3] tensor2B2A#1 = <tensor[3]>[r282F,r2827,r2861];
          tensor[3] tensor2B31#1 = <tensor[3]>[r283A,r284C,r2827];
          real vdot2B54#1 = VDot<3>(probe_l_302A79,tensor2B24);
          real vdot2B56#1 = VDot<3>(probe_l_302A79,tensor2B2A);
          real vdot2B58#1 = VDot<3>(probe_l_302A79,tensor2B31);
          tensor[3] op1_e3_l_332B52#1 = <tensor[3]>[vdot2B54,vdot2B56,vdot2B58];
          real op1_e3_l_342B61#1 = VDot<3>(probe_l_292A2C,op1_e3_l_332B52);
          real r2B67#2 = RMul(_t1D84,r28C6);
          real r2B69#1 = RMul(_t1D84,r28CE);
          real r2B6B#2 = RMul(_t1D84,r28D6);
          real r2B6D#2 = RMul(_t1D84,r2912);
          real r2B6F#3 = RMul(_t1D84,r2917);
          real r2B72#1 = RMul(_t1D8B,r291C);
          real r2B74#2 = RMul(_t1D84,r2946);
          real r2B77#1 = RMul(coeff25C2,r294B);
          real r2B79#3 = RMul(_t1D84,r2950);
          real r2B7A#2 = RAdd(r2B67,r2B69);
          real r2B7B#1 = RAdd(r2B7A,r2B6B);
          real r2B7C#1 = RAdd(r2B7B,r2B6D);
          real r2B7D#1 = RAdd(r2B7C,r2B6F);
          real r2B7E#1 = RAdd(r2B7D,r2B72);
          real r2B7F#1 = RAdd(r2B7E,r2B74);
          real r2B80#1 = RAdd(r2B7F,r2B77);
          real r2B81#1 = RAdd(r2B80,r2B79);
          real r2B83#2 = RMul(_t1D84,r28DF);
          real r2B85#1 = RMul(_t1D84,r28E7);
          real r2B87#2 = RMul(_t1D84,r28EF);
          real r2B89#2 = RMul(_t1D84,r2922);
          real r2B8B#3 = RMul(_t1D84,r2927);
          real r2B8D#1 = RMul(_t1D8B,r292C);
          real r2B8F#2 = RMul(_t1D84,r2956);
          real r2B91#1 = RMul(coeff25C2,r295B);
          real r2B93#3 = RMul(_t1D84,r2960);
          real r2B94#2 = RAdd(r2B83,r2B85);
          real r2B95#1 = RAdd(r2B94,r2B87);
          real r2B96#1 = RAdd(r2B95,r2B89);
          real r2B97#1 = RAdd(r2B96,r2B8B);
          real r2B98#1 = RAdd(r2B97,r2B8D);
          real r2B99#1 = RAdd(r2B98,r2B8F);
          real r2B9A#1 = RAdd(r2B99,r2B91);
          real r2B9B#1 = RAdd(r2B9A,r2B93);
          real r2B9D#2 = RMul(_t1D84,r28F8);
          real r2B9F#1 = RMul(_t1D84,r2900);
          real r2BA1#2 = RMul(_t1D84,r2908);
          real r2BA3#2 = RMul(_t1D84,r2932);
          real r2BA5#3 = RMul(_t1D84,r2937);
          real r2BA7#1 = RMul(_t1D8B,r293C);
          real r2BA9#2 = RMul(_t1D84,r2966);
          real r2BAB#1 = RMul(coeff25C2,r296B);
          real r2BAD#3 = RMul(_t1D84,r2970);
          real r2BAE#2 = RAdd(r2B9D,r2B9F);
          real r2BAF#1 = RAdd(r2BAE,r2BA1);
          real r2BB0#1 = RAdd(r2BAF,r2BA3);
          real r2BB1#1 = RAdd(r2BB0,r2BA5);
          real r2BB2#1 = RAdd(r2BB1,r2BA7);
          real r2BB3#1 = RAdd(r2BB2,r2BA9);
          real r2BB4#1 = RAdd(r2BB3,r2BAB);
          real r2BB5#1 = RAdd(r2BB4,r2BAD);
          real r2BB7#1 = RMul(coeff25C2,r28D6);
          real r2BB8#2 = RMul(_t1D84,r291C);
          real r2BB9#1 = RMul(_t1D8B,r2946);
          real r2BBA#2 = RMul(_t1D84,r294B);
          real r2BBB#1 = RAdd(r2B7A,r2BB7);
          real r2BBC#1 = RAdd(r2BBB,r2B6D);
          real r2BBD#1 = RAdd(r2BBC,r2B6F);
          real r2BBE#1 = RAdd(r2BBD,r2BB8);
          real r2BBF#1 = RAdd(r2BBE,r2BB9);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2B79);
          real r2BC2#1 = RMul(coeff25C2,r28EF);
          real r2BC3#2 = RMul(_t1D84,r292C);
          real r2BC4#1 = RMul(_t1D8B,r2956);
          real r2BC5#2 = RMul(_t1D84,r295B);
          real r2BC6#1 = RAdd(r2B94,r2BC2);
          real r2BC7#1 = RAdd(r2BC6,r2B89);
          real r2BC8#1 = RAdd(r2BC7,r2B8B);
          real r2BC9#1 = RAdd(r2BC8,r2BC3);
          real r2BCA#1 = RAdd(r2BC9,r2BC4);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2B93);
          real r2BCD#1 = RMul(coeff25C2,r2908);
          real r2BCE#2 = RMul(_t1D84,r293C);
          real r2BCF#1 = RMul(_t1D8B,r2966);
          real r2BD0#2 = RMul(_t1D84,r296B);
          real r2BD1#1 = RAdd(r2BAE,r2BCD);
          real r2BD2#1 = RAdd(r2BD1,r2BA3);
          real r2BD3#1 = RAdd(r2BD2,r2BA5);
          real r2BD4#1 = RAdd(r2BD3,r2BCE);
          real r2BD5#1 = RAdd(r2BD4,r2BCF);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BAD);
          real r2BD9#1 = RMul(_t1D8B,r28CE);
          real r2BDA#1 = RMul(coeff25C2,r2912);
          real r2BDB#1 = RAdd(r2B67,r2BD9);
          real r2BDC#1 = RAdd(r2BDB,r2B6B);
          real r2BDD#1 = RAdd(r2BDC,r2BDA);
          real r2BDE#1 = RAdd(r2BDD,r2B6F);
          real r2BDF#1 = RAdd(r2BDE,r2BB8);
          real r2BE0#1 = RAdd(r2BDF,r2B74);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B79);
          real r2BE3#1 = RMul(_t1D8B,r28E7);
          real r2BE4#1 = RMul(coeff25C2,r2922);
          real r2BE5#1 = RAdd(r2B83,r2BE3);
          real r2BE6#1 = RAdd(r2BE5,r2B87);
          real r2BE7#1 = RAdd(r2BE6,r2BE4);
          real r2BE8#1 = RAdd(r2BE7,r2B8B);
          real r2BE9#1 = RAdd(r2BE8,r2BC3);
          real r2BEA#1 = RAdd(r2BE9,r2B8F);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B93);
          real r2BED#1 = RMul(_t1D8B,r2900);
          real r2BEE#1 = RMul(coeff25C2,r2932);
          real r2BEF#1 = RAdd(r2B9D,r2BED);
          real r2BF0#1 = RAdd(r2BEF,r2BA1);
          real r2BF1#1 = RAdd(r2BF0,r2BEE);
          real r2BF2#1 = RAdd(r2BF1,r2BA5);
          real r2BF3#1 = RAdd(r2BF2,r2BCE);
          real r2BF4#1 = RAdd(r2BF3,r2BA9);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAD);
          real op1_e3_l_362C8D#9 = RMul(coeff2594,op1_e3_l_342B61);
          real r2C94#1 = RDiv(r2B81,op1_e3_l_362C8D);
          real r2C96#1 = RDiv(r2B9B,op1_e3_l_362C8D);
          real r2C98#1 = RDiv(r2BB5,op1_e3_l_362C8D);
          real r2C9B#1 = RDiv(r2BC1,op1_e3_l_362C8D);
          real r2C9D#1 = RDiv(r2BCC,op1_e3_l_362C8D);
          real r2C9F#1 = RDiv(r2BD7,op1_e3_l_362C8D);
          real r2CA2#1 = RDiv(r2BE2,op1_e3_l_362C8D);
          real r2CA4#1 = RDiv(r2BEC,op1_e3_l_362C8D);
          real r2CA6#1 = RDiv(r2BF6,op1_e3_l_362C8D);
          real r2CC2#1 = RMul(vdot26B8,r2C94);
          real r2CC5#1 = RMul(vdot26BA,r2C9B);
          real r2CC8#1 = RMul(vdot26BC,r2CA2);
          real r2CC9#1 = RAdd(r2CC2,r2CC5);
          real r2CCA#1 = RAdd(r2CC9,r2CC8);
          real r2CCC#1 = RMul(vdot26B8,r2C96);
          real r2CCE#1 = RMul(vdot26BA,r2C9D);
          real r2CD0#1 = RMul(vdot26BC,r2CA4);
          real r2CD1#1 = RAdd(r2CCC,r2CCE);
          real r2CD2#1 = RAdd(r2CD1,r2CD0);
          real r2CD4#1 = RMul(vdot26B8,r2C98);
          real r2CD6#1 = RMul(vdot26BA,r2C9F);
          real r2CD8#1 = RMul(vdot26BC,r2CA6);
          real r2CD9#1 = RAdd(r2CD4,r2CD6);
          real r2CDA#1 = RAdd(r2CD9,r2CD8);
          tensor[3] op1_e3_l_382CBF#1 = <tensor[3]>[r2CCA,r2CD2,r2CDA];
          tensor[3] op1_e3_l_542CF8#3 = VNeg<3>(op1_e3_l_382CBF);
          real op1_e3_l_562CFB#1 = VDot<3>(op1_e3_l_542CF8,op1_e3_l_542CF8);
          real op1_e3_l_572CFE#2 = Sqrt(op1_e3_l_562CFB);
          real op1_e3_l_582D01#1 = Abs<real>(op1_e3_l_232639);
          real op1_e3_l_592D04#1 = RMul(thick1D4D,op1_e3_l_572CFE);
          real op1_e3_l_602D07#1 = RDiv(op1_e3_l_582D01,op1_e3_l_592D04);
          real op1_e3_l_612D0A#1 = RSub(_t1D8B,op1_e3_l_602D07);
          real op1_e3_l_622D0D#1 = RMul(_t24F0,op1_e3_l_612D0A);
          real op1_e3_l_632D10#1 = RClamp(_t1D84,_t1D8B,op1_e3_l_622D0D);
          real a2D13#2 = RMul(_t1D8B,op1_e3_l_632D10);
          bool _t2D16#1 = GT<real>(a2D13,_t1D84);
          if _t2D16 then goto ASSIGN3274 else goto JOIN2DEA
        ASSIGN3274:  preds = [COND2D18]
          real _t2D1F#1 = RSub(_t1D8B,a2D13);
          real op1_e3_l_32D22#1 = VDot<3>(rayVec1D67,rayVec1D67);
          real op1_e3_l_42D25#1 = Sqrt(op1_e3_l_32D22);
          real op1_e3_l_52D28#1 = RMul(rayStep1D57,op1_e3_l_42D25);
          real _t2D2B#1 = RDiv(op1_e3_l_52D28,refStep1D55);
          real _t2D2E#1 = MathFn<pow>(_t2D1F,_t2D2B);
          real _t2D30#2 = 0.11e1;
          real _t2D32#1 = 0.7e0;
          real op1_e3_l_672D34#1 = RDiv(_t1D8B,op1_e3_l_572CFE);
          real op1_e3_l_682D39#1 = VDot<3>(op1_e3_l_542CF8,light1D63);
          real _t2D3C#1 = RMul(op1_e3_l_672D34,op1_e3_l_682D39);
          real shade2D3F#1 = Max<real>(_t1D84,_t2D3C);
          real op1_e3_l_152D43#1 = RSub(rayN1D65,camNear1D51);
          real op1_e3_l_162D46#1 = RSub(camFar1D53,camNear1D51);
          real op1_e3_l_172D49#1 = RDiv(op1_e3_l_152D43,op1_e3_l_162D46);
          real op1_e3_l_182D4C#1 = RSub(_t2D32,_t2D30);
          real op1_e3_l_192D4F#1 = RMul(op1_e3_l_172D49,op1_e3_l_182D4C);
          real op1_e3_l_202D52#1 = RMul(phongKd1D5B,shade2D3F);
          real Mtransform2D55#1 = Transform<IMAGE1D<double[3]>>(I1D3D);
          real MxPos2D57#1 = RMul(Mtransform2D55,compositionl2636);
          real Ttranslate2D5A#1 = Translate<IMAGE1D<double[3]>>(I1D3D);
          real imgPos2D5C#2 = RAdd(MxPos2D57,Ttranslate2D5A);
          real nd2D5F#2 = Floor<1>(imgPos2D5C);
          real f2D61#2 = RSub(imgPos2D5C,nd2D5F);
          int n2D64#5 = RealToInt<1>(nd2D5F);
          bool isInside2D68#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D64,I1D3D);
          if isInside2D68 then goto ASSIGN3280 else goto ASSIGN3278
        ASSIGN3280:  preds = [COND2D6A]
          int offp2D6F#3 = IMul(ilit2504,n2D64);
          real v0_2D70#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D6F);
          int addRes2D72#1 = IAdd(n2D64,ilit24FE);
          int offp2D73#3 = IMul(ilit2504,addRes2D72);
          real v1_2D74#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D73);
          int offp2D76#1 = IAdd(offp2D6F,ilit24FE);
          real v0_2D77#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D76);
          int offp2D78#1 = IAdd(offp2D73,ilit24FE);
          real v1_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D78);
          int offp2D7C#1 = IAdd(offp2D6F,ilit2501);
          real v0_2D7D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7C);
          int offp2D7E#1 = IAdd(offp2D73,ilit2501);
          real v1_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2D7E);
          tensor[3,2] voxels2D81#1 = <tensor[3,2]>[v0_2D70,v1_2D74,v0_2D77,v1_2D79,v0_2D7D,v1_2D7F];
          goto JOIN2D9B
        JOIN2D9B:  preds = [ASSIGN328D,ASSIGN328E]
          tensor[3,2] ldvox2D99#3 = phi(voxels2D81,voxels2E2F)
          real idx2D9E#1 = RSub(f2D61,_t1D8B);
          tensor[2] kernX_2D9C#1 = <tensor[2]>[f2D61,idx2D9E];
          tensor[2] a02DA3#1 = <tensor[2]>[_t1D8B,_t1D8B];
          tensor[2] a12DA4#1 = <tensor[2]>[coeff25C2,_t1D8B];
          tensor[2] prod12DA9#1 = VMul<2>(kernX_2D9C,a12DA4);
          tensor[2] kevalX_d0_2DA2#3 = VAdd<2>(a02DA3,prod12DA9);
          tensor[2] projIx2DB3#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D99);
          real vdot2DB4#1 = VDot<2>(projIx2DB3,kevalX_d0_2DA2);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D99);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA2);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D99);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA2);
          real op1_e3_l_222DC1#2 = RSub(_t1D8B,_t2D2E);
          real op1_e3_l_232DC4#1 = RAdd(_t2D30,op1_e3_l_192D4F);
          real op1_e3_l_242DC7#1 = RAdd(phongKa1D59,op1_e3_l_202D52);
          real r2DCC#1 = RMul(transp1D69,op1_e3_l_222DC1);
          real r2DCD#1 = RMul(r2DCC,op1_e3_l_232DC4);
          real r2DCE#3 = RMul(r2DCD,op1_e3_l_242DC7);
          real r2DCF#1 = RMul(r2DCE,vdot2DB4);
          real r2DD1#1 = RMul(r2DCE,vdot2DB6);
          real r2DD3#1 = RMul(r2DCE,vdot2DB8);
          tensor[3] op1_e3_l_252DCA#1 = <tensor[3]>[r2DCF,r2DD1,r2DD3];
          tensor[3] rgb2DDF#1 = VAdd<3>(rgb1D6B,op1_e3_l_252DCA);
          real op1_e3_l_52DE2#1 = RSub(_t1D8B,op1_e3_l_222DC1);
          real transp2DE5#1 = RMul(transp1D69,op1_e3_l_52DE2);
          goto JOIN2DEA
        JOIN2DEA:  preds = [ASSIGN2DE7,COND2D18]
          tensor[3] rgb2DE8#1 = phi(rgb2DDF,rgb1D6B)
          real transp2DE9#1 = phi(transp2DE5,transp1D69)
          goto JOIN2DED
        JOIN2DED:  preds = [JOIN2DEA,MASSIGN2E4E]
          tensor[3] rgb2DEB#1 = phi(rgb2DE8,rgb1D6B)
          real transp2DEC#1 = phi(transp2DE9,transp1D69)
          goto JOIN2DF0
        JOIN2DF0:  preds = [JOIN2DED,COND1D9F]
          tensor[3] rgb2DEE#1 = phi(rgb2DEB,rgb1D6B)
          real transp2DEF#1 = phi(transp2DEC,transp1D69)
          goto JOIN2DF3
        JOIN2DF3:  preds = [JOIN2DF0,COND1D9C]
          tensor[3] rgb2DF1#1 = phi(rgb2DEE,rgb1D6B)
          real transp2DF2#1 = phi(transp2DEF,transp1D69)
          goto JOIN2DF6
        JOIN2DF6:  preds = [JOIN2DF3,COND1D97]
          tensor[3] rgb2DF4#1 = phi(rgb2DF1,rgb1D6B)
          real transp2DF5#1 = phi(transp2DF2,transp1D69)
          goto JOIN2DF9
        JOIN2DF9:  preds = [JOIN2DF6,COND1D94]
          tensor[3] rgb2DF7#1 = phi(rgb2DF4,rgb1D6B)
          real transp2DF8#1 = phi(transp2DF5,transp1D69)
          goto JOIN2DFC
        JOIN2DFC:  preds = [JOIN2DF9,COND1D8F]
          tensor[3] rgb2DFA#1 = phi(rgb2DF7,rgb1D6B)
          real transp2DFB#1 = phi(transp2DF8,transp1D69)
          goto JOIN2DFF
        JOIN2DFF:  preds = [JOIN2DFC,COND1D8A]
          tensor[3] rgb2DFD#3 = phi(rgb2DFA,rgb1D6B)
          real transp2DFE#2 = phi(transp2DFB,transp1D69)
          real _t2E00#1 = 0.1e-1;
          bool _t2E02#1 = LT<real>(transp2DFE,_t2E00);
          if _t2E02 then goto SAVE2E05 else goto JOIN2E09
        SAVE2E05:  preds = [COND2E04]
          self.transp = _t1D84;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E09
        JOIN2E09:  preds = [*STABILIZE2E07,COND2E04]
          real transp2E08#2 = phi(transp2DFE)
          bool _t2E0A#1 = GT<real>(rayN1D65,camFar1D53);
          if _t2E0A then goto SAVE2E0D else goto JOIN2E10
        SAVE2E0D:  preds = [COND2E0C]
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          stabilize
          goto JOIN2E10
        JOIN2E10:  preds = [*STABILIZE2E0F,COND2E0C]
          real rayN2E11#1 = RAdd(rayN1D65,rayStep1D57);
          self.rayN = rayN2E11;
          self.transp = transp2E08;
          self.rgb = rgb2DFD;
          active
        ASSIGN3278:  preds = [COND2D6A]
          int ix2E1A#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,n2D64);
          int offp2E1C#3 = IMul(ilit2504,ix2E1A);
          real v0_2E1D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E1C);
          int addRes2E1F#1 = IAdd(n2D64,ilit24FE);
          int ix2E20#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D3D,addRes2E1F);
          int offp2E21#3 = IMul(ilit2504,ix2E20);
          real v1_2E22#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E21);
          int offp2E24#1 = IAdd(offp2E1C,ilit24FE);
          real v0_2E25#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E24);
          int offp2E26#1 = IAdd(offp2E21,ilit24FE);
          real v1_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E26);
          int offp2E2A#1 = IAdd(offp2E1C,ilit2501);
          real v0_2E2B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2A);
          int offp2E2C#1 = IAdd(offp2E21,ilit2501);
          real v1_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D3D,offp2E2C);
          tensor[3,2] voxels2E2F#1 = <tensor[3,2]>[v0_2E1D,v1_2E22,v0_2E25,v1_2E27,v0_2E2B,v1_2E2D];
          goto JOIN2D9B
        ASSIGN2E4A:  preds = [COND24EF]
          string _t2E49#1 = "\n";
          Print<[tensor[3],string]>(x1D81,_t2E49);
          string _t2E4C#1 = "wait what\?\n";
          Print<[string]>(_t2E4C);
          goto JOIN2DED
        ASSIGN2E4F:  preds = [COND1D74]
          bool _t1D78#1 = NEQ<int>(vi1D6F,sv1D61);
          goto JOIN1D79
    end update
    method stabilize
        ENTRY2E50:  preds = []
          bool debug2E51#1 = globals.debug1AD5;
          int su2E53#1 = globals.su1AD6;
          int sv2E55#1 = globals.sv1AD7;
          real transp2E57#1 = self.transp;
          tensor[3] rgb2E59#3 = self.rgb;
          tensor[4] rgba2E5B#1 = self.rgba;
          int ui2E5D#1 = self.ui;
          int vi2E5F#1 = self.vi;
          real _t2E61#1 = 0.1e1;
          real a2E63#6 = RSub(_t2E61,transp2E57);
          real _t2E66#1 = 0.e0;
          bool _t2E68#1 = GT<real>(a2E63,_t2E66);
          if _t2E68 then goto ASSIGN2E6C else goto JOIN2E7D
        ASSIGN2E6C:  preds = [COND2E6A]
          real _t2E6B#1 = VIndex<3,0>(rgb2E59);
          real _t2E6D#1 = RDiv(_t2E6B,a2E63);
          real _t2E70#1 = VIndex<3,1>(rgb2E59);
          real _t2E72#1 = RDiv(_t2E70,a2E63);
          real _t2E75#1 = VIndex<3,2>(rgb2E59);
          real _t2E77#1 = RDiv(_t2E75,a2E63);
          tensor[4] rgba2E7A#1 = <tensor[4]>[_t2E6D,_t2E72,_t2E77,a2E63];
          goto JOIN2E7D
        JOIN2E7D:  preds = [ASSIGN2E7B,COND2E6A]
          tensor[4] rgba2E7C#2 = phi(rgba2E7A,rgba2E5B)
          bool _t2E7E#1 = EQ<int>(ui2E5D,su2E53);
          if _t2E7E then goto ASSIGN2E82 else goto JOIN2E88
        ASSIGN2E82:  preds = [COND2E80]
          bool _t2E81#1 = EQ<int>(vi2E5F,sv2E55);
          if _t2E81 then goto COND2E84 else goto JOIN2E87
        COND2E84:  preds = [COND2E83]
          if debug2E51 then goto MASSIGN2E85 else goto JOIN2E86
        MASSIGN2E85:  preds = [COND2E84]
          Print<[real,tensor[4]]>(a2E63,rgba2E7C);
          goto JOIN2E86
        JOIN2E86:  preds = [MASSIGN2E85,COND2E84]
          goto JOIN2E87
        JOIN2E87:  preds = [JOIN2E86,COND2E83]
          goto JOIN2E88
        JOIN2E88:  preds = [JOIN2E87,COND2E80]
          self.rgba = rgba2E7C;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E8B:  preds = []
      int iresU2E8C#1 = globals.iresU1ACC;
      int iresV2E8E#1 = globals.iresV1ACD;
      int _t2E90#2 = 0;
      int _t2E92#2 = 1;
      int _t2E94#1 = ISub(iresV2E8E,_t2E92);
      int[] _t2E96#1 = Range(_t2E90,_t2E94);
    FOREACH2E99:  preds = [ASSIGN2E97,NEXT2EA2]
      foreach (vi2E98 in _t2E96) on exit goto RETURN2EA3
      int _t2E9A#1 = ISub(iresU2E8C,_t2E92);
      int[] _t2E9C#1 = Range(_t2E90,_t2E9A);
    FOREACH2E9F:  preds = [ASSIGN2E9D,NEXT2EA1]
      foreach (ui2E9E in _t2E9C) on exit goto NEXT2EA2
      new raycast(ui2E9E,vi2E98);
      goto FOREACH2E9F
    NEXT2EA2:  preds = [FOREACH2E9F]
      goto FOREACH2E99
    RETURN2EA3:  preds = [FOREACH2E99]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b043B_intermedateGlobal;
input femData(FemFunc) 0c043D_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(0.3e1,-0.3e1,0.3e1));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_7;
    v_7 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    int[] t_9 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_5,p_pos_6);
    foreach int i_cellItter_8 in t_9 {
      vec3{4} v_10;
      v_10 = v_7;
      for i_newtonItter_11 = 0 to 2 {
        int l_mulRes_12 = IMul(i_cellItter_8,4);
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_12);
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,1));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,2));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_24));
        int t_28 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,3));
        int l_mulRes_29 = IMul(3,t_28);
        real l_dof_load_30 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_29);
        real l_dof_load_31 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_29));
        real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_29));
        real l_prod_33 = RMul(0.1e1,0.1e1);
        real l_prod_34 = RMul(0.1e1,l_prod_33);
        real l_basisEval_35 = RMul(-0.1e1,l_prod_34);
        real l_basisEval_36 = RMul(0.1e1,l_prod_34);
        real l_r_37 = RMul(l_dof_load_15,l_basisEval_35);
        real l_r_38 = RMul(l_dof_load_25,0.e0);
        real l_r_39 = RMul(l_dof_load_30,0.e0);
        real l_r_40 = RAdd(RAdd(RAdd(l_r_37,RMul(l_dof_load_20,l_basisEval_36)),l_r_38),l_r_39);
        real l_r_41 = RAdd(l_r_37,RMul(l_dof_load_20,0.e0));
        real l_r_42 = RAdd(RAdd(l_r_41,RMul(l_dof_load_25,l_basisEval_36)),l_r_39);
        real l_r_43 = RAdd(RAdd(l_r_41,l_r_38),RMul(l_dof_load_30,l_basisEval_36));
        real l_r_44 = RMul(l_dof_load_16,l_basisEval_35);
        real l_r_45 = RMul(l_dof_load_26,0.e0);
        real l_r_46 = RMul(l_dof_load_31,0.e0);
        real l_r_47 = RAdd(RAdd(RAdd(l_r_44,RMul(l_dof_load_21,l_basisEval_36)),l_r_45),l_r_46);
        real l_r_48 = RAdd(l_r_44,RMul(l_dof_load_21,0.e0));
        real l_r_49 = RAdd(RAdd(l_r_48,RMul(l_dof_load_26,l_basisEval_36)),l_r_46);
        real l_r_50 = RAdd(RAdd(l_r_48,l_r_45),RMul(l_dof_load_31,l_basisEval_36));
        real l_r_51 = RMul(l_dof_load_17,l_basisEval_35);
        real l_r_52 = RMul(l_dof_load_27,0.e0);
        real l_r_53 = RMul(l_dof_load_32,0.e0);
        real l_r_54 = RAdd(RAdd(RAdd(l_r_51,RMul(l_dof_load_22,l_basisEval_36)),l_r_52),l_r_53);
        real l_r_55 = RAdd(l_r_51,RMul(l_dof_load_22,0.e0));
        real l_r_56 = RAdd(RAdd(l_r_55,RMul(l_dof_load_27,l_basisEval_36)),l_r_53);
        real l_r_57 = RAdd(RAdd(l_r_55,l_r_52),RMul(l_dof_load_32,l_basisEval_36));
        real l_r_58 = RMul(0.e0,l_r_40);
        real l_r_59 = RMul(0.e0,l_r_47);
        real l_r_60 = RMul(0.e0,l_r_54);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_42);
        real l_r_64 = RMul(0.e0,l_r_49);
        real l_r_65 = RMul(0.e0,l_r_56);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RMul(0.e0,l_r_43);
        real l_r_69 = RMul(0.e0,l_r_50);
        real l_r_70 = RMul(0.e0,l_r_57);
        real l_r_71 = RAdd(l_r_68,l_r_69);
        real l_r_72 = RAdd(l_r_71,l_r_70);
        real l_r_73 = RAdd(l_r_61,RMul(-0.1e1,l_r_54));
        real l_r_74 = RAdd(l_r_66,RMul(-0.1e1,l_r_56));
        real l_r_75 = RAdd(l_r_71,RMul(-0.1e1,l_r_57));
        real l_r_76 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_47)),l_r_60);
        real l_r_77 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_49)),l_r_65);
        real l_r_78 = RAdd(RAdd(l_r_68,RMul(0.1e1,l_r_50)),l_r_70);
        real l_r_79 = RAdd(l_r_61,RMul(0.1e1,l_r_54));
        real l_r_80 = RAdd(l_r_66,RMul(0.1e1,l_r_56));
        real l_r_81 = RAdd(l_r_71,RMul(0.1e1,l_r_57));
        real l_r_82 = RAdd(RAdd(RMul(-0.1e1,l_r_40),l_r_59),l_r_60);
        real l_r_83 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_64),l_r_65);
        real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_43),l_r_69),l_r_70);
        real l_r_85 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_47)),l_r_60);
        real l_r_86 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_49)),l_r_65);
        real l_r_87 = RAdd(RAdd(l_r_68,RMul(-0.1e1,l_r_50)),l_r_70);
        real l_r_88 = RAdd(RAdd(RMul(0.1e1,l_r_40),l_r_59),l_r_60);
        real l_r_89 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_64),l_r_65);
        real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_43),l_r_69),l_r_70);
        real l_r_91 = RAdd(RAdd(RMul(l_r_40,l_r_67),RMul(l_r_47,l_r_80)),RMul(l_r_54,l_r_86));
        real l_r_92 = RAdd(RAdd(RMul(l_r_40,l_r_72),RMul(l_r_47,l_r_81)),RMul(l_r_54,l_r_87));
        real l_r_93 = RAdd(RAdd(RMul(l_r_40,l_r_74),RMul(l_r_47,l_r_67)),RMul(l_r_54,l_r_89));
        real l_r_94 = RAdd(RAdd(RMul(l_r_40,l_r_75),RMul(l_r_47,l_r_72)),RMul(l_r_54,l_r_90));
        real l_r_95 = RAdd(RAdd(RMul(l_r_40,l_r_77),RMul(l_r_47,l_r_83)),RMul(l_r_54,l_r_67));
        real l_r_96 = RAdd(RAdd(RMul(l_r_40,l_r_78),RMul(l_r_47,l_r_84)),RMul(l_r_54,l_r_72));
        real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_62),RMul(l_r_49,l_r_79)),RMul(l_r_56,l_r_85));
        real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_72),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87));
        real l_r_99 = RAdd(RAdd(RMul(l_r_42,l_r_73),RMul(l_r_49,l_r_62)),RMul(l_r_56,l_r_88));
        real l_r_100 = RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_72)),RMul(l_r_56,l_r_90));
        real l_r_101 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_62));
        real l_r_102 = RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_72));
        real l_r_103 = RAdd(RAdd(RMul(l_r_43,l_r_62),RMul(l_r_50,l_r_79)),RMul(l_r_57,l_r_85));
        real l_r_104 = RAdd(RAdd(RMul(l_r_43,l_r_67),RMul(l_r_50,l_r_80)),RMul(l_r_57,l_r_86));
        real l_r_105 = RAdd(RAdd(RMul(l_r_43,l_r_73),RMul(l_r_50,l_r_62)),RMul(l_r_57,l_r_88));
        real l_r_106 = RAdd(RAdd(RMul(l_r_43,l_r_74),RMul(l_r_50,l_r_67)),RMul(l_r_57,l_r_89));
        real l_r_107 = RAdd(RAdd(RMul(l_r_43,l_r_76),RMul(l_r_50,l_r_82)),RMul(l_r_57,l_r_62));
        real l_r_108 = RAdd(RAdd(RMul(l_r_43,l_r_77),RMul(l_r_50,l_r_83)),RMul(l_r_57,l_r_67));
        vec3{4} v_109 = VEC3{4}(l_r_42,l_r_49,l_r_56);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_62),RMul(l_r_47,l_r_79)),RMul(l_r_54,l_r_85)));
        real l_r_111 = RMul(0.e0,l_r_92);
        real l_r_112 = RMul(0.e0,l_r_97);
        real l_r_113 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_67),RMul(l_r_49,l_r_80)),RMul(l_r_56,l_r_86)));
        real l_r_114 = RMul(0.e0,l_r_103);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_72),RMul(l_r_50,l_r_81)),RMul(l_r_57,l_r_87)));
        real l_r_116 = RAdd(l_r_110,RMul(0.e0,l_r_91));
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_73),RMul(l_r_47,l_r_62)),RMul(l_r_54,l_r_88)));
        real l_r_118 = RMul(0.e0,l_r_94);
        real l_r_119 = RMul(0.e0,l_r_99);
        real l_r_120 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_67)),RMul(l_r_56,l_r_89)));
        real l_r_121 = RMul(0.e0,l_r_105);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_75),RMul(l_r_50,l_r_72)),RMul(l_r_57,l_r_90)));
        real l_r_123 = RAdd(l_r_117,RMul(0.e0,l_r_93));
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_76),RMul(l_r_47,l_r_82)),RMul(l_r_54,l_r_62)));
        real l_r_125 = RMul(0.e0,l_r_96);
        real l_r_126 = RMul(0.e0,l_r_101);
        real l_r_127 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_67)));
        real l_r_128 = RMul(0.e0,l_r_107);
        real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_78),RMul(l_r_50,l_r_84)),RMul(l_r_57,l_r_72)));
        real l_r_130 = RAdd(l_r_124,RMul(0.e0,l_r_95));
        real l_r_131 = RMul(0.e0,l_r_98);
        real l_r_132 = RMul(0.e0,l_r_104);
        real l_r_133 = RMul(0.e0,l_r_100);
        real l_r_134 = RMul(0.e0,l_r_106);
        real l_r_135 = RMul(0.e0,l_r_102);
        real l_r_136 = RMul(0.e0,l_r_108);
        real l_op1_e3_l_21_137 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_40,l_r_47,l_r_54),VEC3{4}(VDot<3,4>(v_109,VEC3{4}(l_r_72,l_r_81,l_r_87)),VDot<3,4>(v_109,VEC3{4}(l_r_75,l_r_72,l_r_90)),VDot<3,4>(v_109,VEC3{4}(l_r_78,l_r_84,l_r_72)))));
        real l_prod_138 = RMul(VIndex<3,4,0>(v_10),l_prod_33);
        real l_prod_139 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_10),0.1e1));
        real l_prod_140 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_10)));
        real l_sum_141 = RAdd(l_basisEval_36,RAdd(RMul(-0.1e1,l_prod_140),RAdd(RMul(-0.1e1,l_prod_139),RMul(-0.1e1,l_prod_138))));
        real l_basisEval_142 = RMul(0.1e1,l_prod_138);
        real l_basisEval_143 = RMul(0.1e1,l_prod_139);
        real l_basisEval_144 = RMul(0.1e1,l_prod_140);
        vec3{4} v_145 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_15,l_sum_141),RMul(l_dof_load_20,l_basisEval_142)),RMul(l_dof_load_25,l_basisEval_143)),RMul(l_dof_load_30,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_16,l_sum_141),RMul(l_dof_load_21,l_basisEval_142)),RMul(l_dof_load_26,l_basisEval_143)),RMul(l_dof_load_31,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_141),RMul(l_dof_load_22,l_basisEval_142)),RMul(l_dof_load_27,l_basisEval_143)),RMul(l_dof_load_32,l_basisEval_144))),LOAD_0(p_pos_6));
        vec3{4} v_146 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,l_r_111),l_r_112),l_r_113),RMul(0.1e1,l_r_98)),l_r_114),RMul(-0.1e1,l_r_104)),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,l_r_118),l_r_119),l_r_120),RMul(0.1e1,l_r_100)),l_r_121),RMul(-0.1e1,l_r_106)),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,l_r_125),l_r_126),l_r_127),RMul(0.1e1,l_r_102)),l_r_128),RMul(-0.1e1,l_r_108)),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,RMul(-0.1e1,l_r_92)),l_r_112),l_r_113),l_r_131),RMul(0.1e1,l_r_103)),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,RMul(-0.1e1,l_r_94)),l_r_119),l_r_120),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,RMul(-0.1e1,l_r_96)),l_r_126),l_r_127),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_110,RMul(0.1e1,l_r_91)),l_r_111),RMul(-0.1e1,l_r_97)),l_r_113),l_r_131),l_r_114),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_117,RMul(0.1e1,l_r_93)),l_r_118),RMul(-0.1e1,l_r_99)),l_r_120),l_r_133),l_r_121),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_124,RMul(0.1e1,l_r_95)),l_r_125),RMul(-0.1e1,l_r_101)),l_r_127),l_r_135),l_r_128),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145));
        vec3{4} v_147 = VSub<3,4>(v_10,v_146);
        vec3{4} v_148 = v_147;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_146,v_146))) {
          vec3{4} v_149 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_148);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_148)),BAnd(GT<real>(VIndex<3,4,0>(v_149),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_149),-0.e0),GT<real>(VIndex<3,4,2>(v_149),-0.e0))))) {
            tensor[3] _arg_150 = PACK(v_148);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,i_cellItter_8,_arg_150,p_pos_6)
          }
        }
        v_10 = v_148;
      }
      v_7 = v_10;
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_155;
    femData(MeshCell)[] l__t_151;
    l__t_151 = <femData(MeshCell)[]>{};
    for i__t_152 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_151 = Append<femData(MeshCell),femData(MeshCell)>(l__t_151,LoadFem<femData(MeshCell)>(globals.a,i__t_152));
    }
    femData(FemFunc) l_c_153 = LoadFem<femData(FemFunc)>(globals.0c043D_intermedateGlobal,LoadFem<femData(Space)>(globals.0b043B_intermedateGlobal,globals.a));
    femData(Space) l__t_154 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_153);
    l_I_155 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_156 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_157 = Sqrt(VDot<3,4>(v_156,v_156));
    globals.camDist = l_camDist_157;
    real l_op1_e3_l_9_158 = RDiv(0.1e1,l_camDist_157);
    vec3{4} v_159 = VScale<3,4>(l_op1_e3_l_9_158,v_156);
    globals.camN = PACK(v_159);
    real l_r_161 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_162 = RMul(0.e0,l_r_161);
    real l_r_163 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_164 = RMul(0.e0,l_r_163);
    real l_r_165 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_166 = RMul(0.e0,l_r_165);
    real l_r_167 = RAdd(l_r_162,l_r_164);
    real l_r_168 = RAdd(l_r_167,l_r_166);
    vec3{4} v_169 = VEC3{4}(VDot<3,4>(v_156,VEC3{4}(l_r_168,RAdd(l_r_167,RMul(0.1e1,l_r_165)),RAdd(RAdd(l_r_162,RMul(-0.1e1,l_r_163)),l_r_166))),VDot<3,4>(v_156,VEC3{4}(RAdd(l_r_167,RMul(-0.1e1,l_r_165)),l_r_168,RAdd(RAdd(RMul(0.1e1,l_r_161),l_r_164),l_r_166))),VDot<3,4>(v_156,VEC3{4}(RAdd(RAdd(l_r_162,RMul(0.1e1,l_r_163)),l_r_166),RAdd(RAdd(RMul(-0.1e1,l_r_161),l_r_164),l_r_166),l_r_168)));
    real l_op1_e3_l_38_170 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_158,l_op1_e3_l_9_158),VDot<3,4>(v_169,v_169))));
    vec3{4} v_171 = VScale<3,4>(l_op1_e3_l_38_170,VScale<3,4>(l_op1_e3_l_9_158,v_169));
    globals.camU = PACK(v_171);
    real l_r_173 = VIndex<3,4,0>(v_156);
    real l_r_174 = RMul(0.e0,l_r_173);
    real l_r_175 = VIndex<3,4,1>(v_156);
    real l_r_176 = RMul(0.e0,l_r_175);
    real l_r_177 = VIndex<3,4,2>(v_156);
    real l_r_178 = RMul(0.e0,l_r_177);
    real l_r_179 = RAdd(l_r_174,l_r_176);
    real l_r_180 = RAdd(l_r_179,l_r_178);
    vec3{4} v_181 = VScale<3,4>(l_op1_e3_l_9_158,VEC3{4}(VDot<3,4>(v_169,VEC3{4}(l_r_180,RAdd(l_r_179,RMul(0.1e1,l_r_177)),RAdd(RAdd(l_r_174,RMul(-0.1e1,l_r_175)),l_r_178))),VDot<3,4>(v_169,VEC3{4}(RAdd(l_r_179,RMul(-0.1e1,l_r_177)),l_r_180,RAdd(RAdd(RMul(0.1e1,l_r_173),l_r_176),l_r_178))),VDot<3,4>(v_169,VEC3{4}(RAdd(RAdd(l_r_174,RMul(0.1e1,l_r_175)),l_r_178),RAdd(RAdd(RMul(-0.1e1,l_r_173),l_r_176),l_r_178),l_r_180))));
    real l_r_182 = RMul(l_op1_e3_l_38_170,l_op1_e3_l_9_158);
    real l_r_183 = RMul(l_r_182,VIndex<3,4,0>(v_181));
    real l_r_184 = RMul(l_r_182,VIndex<3,4,1>(v_181));
    real l_r_185 = RMul(l_r_182,VIndex<3,4,2>(v_181));
    globals.camV = PACK(VEC3{4}(l_r_183,l_r_184,l_r_185));
    real l_op1_e3_l_10_187 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_187,l_camDist_157);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_187),l_camDist_157),IntToReal(globals.iresV));
    real l_r_188 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_189 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_190 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_171),l_r_188),RMul(l_r_183,l_r_189)),RMul(VIndex<3,4,0>(v_159),l_r_190)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_171),l_r_188),RMul(l_r_184,l_r_189)),RMul(VIndex<3,4,1>(v_159),l_r_190)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_171),l_r_188),RMul(l_r_185,l_r_189)),RMul(VIndex<3,4,2>(v_159),l_r_190)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_154);
    globals._tX = l__t_154;
    globals.c = l_c_153;
    globals.I = l_I_155;
  }
//***** STRAND *****
strand raycast (int p_ui_192,int p_vi_193) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_194 = RNeg(globals.camUmax);
    real l_rayU_195 = RAdd(l_op1_e3_l_9_194,RMul(RDiv(RSub(IntToReal(p_ui_192),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_194)));
    real l_rayV_196 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_193),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_197 = VAdd<3,4>(VScale<3,4>(l_rayU_195,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_196,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_198 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_195;
    self.rayV = l_rayV_196;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_198,VIndex<3,4,0>(v_197)),RMul(l_r_198,VIndex<3,4,1>(v_197)),RMul(l_r_198,VIndex<3,4,2>(v_197)))));
    self.transp = 0.1e1;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.gray = 0.e0;
    self.ui = p_ui_192;
    self.vi = p_vi_193;
  }
  update (world, globals) {
    real l_transp_436;
    real l_transp_434;
    vec3{4} v_433;
    if (globals.debug) {
      bool l__t_202;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_202 = true;
      } else {
        l__t_202 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_202) {
        stabilize;
      }
    }
    vec3{4} v_203 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_204 = VIndex<3,4,0>(v_203);
    vec3{4} v_205 = v_203;
    if (LT<real>(0.e0,l__t_204)) {
      real l_transp_432;
      vec3{4} v_431;
      if (LT<real>(l__t_204,0.1e1)) {
        real l_transp_430;
        vec3{4} v_429;
        real l__t_206 = VIndex<3,4,1>(v_205);
        if (LT<real>(0.e0,l__t_206)) {
          real l_transp_428;
          vec3{4} v_427;
          if (LT<real>(l__t_206,0.1e1)) {
            real l_transp_426;
            vec3{4} v_425;
            real l__t_207 = VIndex<3,4,2>(v_205);
            if (LT<real>(0.e0,l__t_207)) {
              real l_transp_424;
              vec3{4} v_423;
              if (LT<real>(l__t_207,0.1e1)) {
                real l_transp_421;
                vec3{4} v_420;
                tensor[3] _arg_208 = PACK(v_205);
                femData(MeshPos) l_p_209 = findPos$332E(globals.a,_arg_208);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_209)) {
                  real l_transp_419;
                  vec3{4} v_418;
                  tensor[3] _arg_210 = PACK(v_205);
                  femData(MeshPos) l_callFindPos_211 = findPos$332E(globals._t,_arg_210);
                  int l_intPos_212 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_211);
                  &tensor[3] l_refPos_213 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_211);
                  int l_mulRes_214 = IMul(l_intPos_212,10);
                  int t_215 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_214);
                  int t_216 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,1));
                  int t_217 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,2));
                  int t_218 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,3));
                  int t_219 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,4));
                  int t_220 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,5));
                  int t_221 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,6));
                  int t_222 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,7));
                  int t_223 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,8));
                  int t_224 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,9));
                  real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_224));
                  real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_223));
                  real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_222));
                  real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_221));
                  real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_220));
                  real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_219));
                  real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_218));
                  real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_217));
                  real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_216));
                  real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_215));
                  vec4 v_235 = VEC4(t_234,t_233,t_232,t_231);
                  vec4 v_236 = VEC4(t_230,t_229,t_228,t_227);
                  vec2 v_237 = VEC2(t_226,t_225);
                  real l_varAcc_238 = VIndex<3,4,0>(LOAD_0(l_refPos_213));
                  real l_varAcc_239 = VIndex<3,4,1>(LOAD_0(l_refPos_213));
                  real l_varAcc_240 = VIndex<3,4,2>(LOAD_0(l_refPos_213));
                  real l_prod_241 = RMul(0.1e1,0.1e1);
                  real l_prod_242 = RMul(RMul(l_varAcc_238,l_varAcc_238),l_prod_241);
                  real l_prod_243 = RMul(l_varAcc_239,0.1e1);
                  real l_prod_244 = RMul(l_varAcc_238,l_prod_243);
                  real l_prod_245 = RMul(0.1e1,l_varAcc_240);
                  real l_prod_246 = RMul(l_varAcc_238,l_prod_245);
                  real l_prod_247 = RMul(l_varAcc_238,l_prod_241);
                  real l_prod_248 = RMul(0.1e1,RMul(RMul(l_varAcc_239,l_varAcc_239),0.1e1));
                  real l_prod_249 = RMul(0.1e1,RMul(l_varAcc_239,l_varAcc_240));
                  real l_prod_250 = RMul(0.1e1,l_prod_243);
                  real l_prod_251 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_240,l_varAcc_240)));
                  real l_prod_252 = RMul(0.1e1,l_prod_245);
                  real l_prod_253 = RMul(0.1e1,l_prod_241);
                  real l_mult_254 = RMul(0.1e1,l_prod_253);
                  real l_mult_255 = RMul(0.2e1,l_prod_251);
                  real l_mult_256 = RMul(0.4e1,l_prod_249);
                  real l_mult_257 = RMul(0.2e1,l_prod_248);
                  real l_mult_258 = RMul(0.4e1,l_prod_246);
                  real l_mult_259 = RMul(0.4e1,l_prod_244);
                  real l_mult_260 = RMul(0.2e1,l_prod_242);
                  real l_mult_261 = RMul(0.4e1,l_prod_252);
                  real l_mult_262 = RMul(-0.4e1,l_prod_249);
                  real l_mult_263 = RMul(-0.4e1,l_prod_246);
                  real l_mult_264 = RMul(0.4e1,l_prod_250);
                  real l_mult_265 = RMul(-0.4e1,l_prod_244);
                  real l_mult_266 = RMul(0.4e1,l_prod_247);
                  real l_compositionl_267 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_256,l_mult_258,l_mult_259,RAdd(l_mult_261,RAdd(RMul(-0.4e1,l_prod_251),RAdd(l_mult_262,l_mult_263))))),RAdd(VDot<2,2>(v_237,VEC2(RAdd(l_mult_264,RAdd(l_mult_262,RAdd(RMul(-0.4e1,l_prod_248),l_mult_265))),RAdd(l_mult_266,RAdd(l_mult_263,RAdd(l_mult_265,RMul(-0.4e1,l_prod_242)))))),VDot<4,4>(v_235,VEC4(RAdd(l_mult_254,RAdd(RMul(-0.3e1,l_prod_252),RAdd(l_mult_255,RAdd(RMul(-0.3e1,l_prod_250),RAdd(l_mult_256,RAdd(l_mult_257,RAdd(RMul(-0.3e1,l_prod_247),RAdd(l_mult_258,RAdd(l_mult_259,l_mult_260))))))))),RAdd(RMul(-0.1e1,l_prod_247),l_mult_260),RAdd(RMul(-0.1e1,l_prod_250),l_mult_257),RAdd(RMul(-0.1e1,l_prod_252),l_mult_255)))));
                  real l_sum_268 = RAdd(RMul(-0.3e1,l_prod_253),RAdd(l_mult_261,RAdd(l_mult_264,l_mult_266)));
                  real l_mult_269 = RMul(-0.1e1,l_prod_253);
                  real l_basisEval_270 = RMul(-0.4e1,l_prod_252);
                  real l_basisEval_271 = RMul(-0.4e1,l_prod_250);
                  real l_mult_272 = RMul(0.4e1,l_prod_253);
                  real l_mult_273 = RMul(-0.4e1,l_prod_247);
                  real l_vdot_274 = RAdd(VDot<4,4>(v_236,VEC4(0.e0,l_mult_261,l_mult_264,l_basisEval_270)),RAdd(VDot<2,2>(v_237,VEC2(l_basisEval_271,RAdd(l_mult_272,RAdd(l_basisEval_270,RAdd(l_basisEval_271,RMul(-0.8e1,l_prod_247)))))),VDot<4,4>(v_235,VEC4(l_sum_268,RAdd(l_mult_269,l_mult_266),0.e0,0.e0))));
                  real l_vdot_275 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_261,0.e0,l_mult_266,l_basisEval_270)),RAdd(VDot<2,2>(v_237,VEC2(RAdd(l_mult_272,RAdd(l_basisEval_270,RAdd(RMul(-0.8e1,l_prod_250),l_mult_273))),l_mult_273)),VDot<4,4>(v_235,VEC4(l_sum_268,0.e0,RAdd(l_mult_269,l_mult_264),0.e0))));
                  real l_vdot_276 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_264,l_mult_266,0.e0,RAdd(l_mult_272,RAdd(RMul(-0.8e1,l_prod_252),RAdd(l_basisEval_271,l_mult_273))))),RAdd(VDot<2,2>(v_237,VEC2(l_basisEval_271,l_mult_273)),VDot<4,4>(v_235,VEC4(l_sum_268,0.e0,0.e0,RAdd(l_mult_269,l_mult_261)))));
                  int l_mulRes_277 = IMul(l_intPos_212,4);
                  int t_278 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_277);
                  int l_mulRes_279 = IMul(3,t_278);
                  int t_280 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,1));
                  int l_mulRes_281 = IMul(3,t_280);
                  real l_dof_load_282 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_281);
                  real l_dof_load_283 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_281));
                  real l_dof_load_284 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_281));
                  int t_285 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,2));
                  int l_mulRes_286 = IMul(3,t_285);
                  real l_dof_load_287 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_286);
                  real l_dof_load_288 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_286));
                  real l_dof_load_289 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_286));
                  int t_290 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,3));
                  int l_mulRes_291 = IMul(3,t_290);
                  real l_dof_load_292 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_291);
                  real l_dof_load_293 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_291));
                  real l_dof_load_294 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_291));
                  real t_295 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_279);
                  real l_r_296 = RMul(t_295,l_mult_269);
                  real l_r_297 = RMul(l_dof_load_287,0.e0);
                  real l_r_298 = RMul(l_dof_load_292,0.e0);
                  real l_r_299 = RAdd(RAdd(RAdd(l_r_296,RMul(l_dof_load_282,l_mult_254)),l_r_297),l_r_298);
                  real l_r_300 = RAdd(l_r_296,RMul(l_dof_load_282,0.e0));
                  real l_r_301 = RAdd(RAdd(l_r_300,RMul(l_dof_load_287,l_mult_254)),l_r_298);
                  real l_r_302 = RAdd(RAdd(l_r_300,l_r_297),RMul(l_dof_load_292,l_mult_254));
                  real t_303 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_279));
                  real l_r_304 = RMul(t_303,l_mult_269);
                  real l_r_305 = RMul(l_dof_load_288,0.e0);
                  real l_r_306 = RMul(l_dof_load_293,0.e0);
                  real l_r_307 = RAdd(RAdd(RAdd(l_r_304,RMul(l_dof_load_283,l_mult_254)),l_r_305),l_r_306);
                  real l_r_308 = RAdd(l_r_304,RMul(l_dof_load_283,0.e0));
                  real l_r_309 = RAdd(RAdd(l_r_308,RMul(l_dof_load_288,l_mult_254)),l_r_306);
                  real l_r_310 = RAdd(RAdd(l_r_308,l_r_305),RMul(l_dof_load_293,l_mult_254));
                  real t_311 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_279));
                  real l_r_312 = RMul(t_311,l_mult_269);
                  real l_r_313 = RMul(l_dof_load_289,0.e0);
                  real l_r_314 = RMul(l_dof_load_294,0.e0);
                  real l_r_315 = RAdd(RAdd(RAdd(l_r_312,RMul(l_dof_load_284,l_mult_254)),l_r_313),l_r_314);
                  real l_r_316 = RAdd(l_r_312,RMul(l_dof_load_284,0.e0));
                  real l_r_317 = RAdd(RAdd(l_r_316,RMul(l_dof_load_289,l_mult_254)),l_r_314);
                  real l_r_318 = RAdd(RAdd(l_r_316,l_r_313),RMul(l_dof_load_294,l_mult_254));
                  real l_r_319 = RMul(0.e0,l_r_299);
                  real l_r_320 = RMul(0.e0,l_r_307);
                  real l_r_321 = RMul(0.e0,l_r_315);
                  real l_r_322 = RAdd(l_r_319,l_r_320);
                  real l_r_323 = RAdd(l_r_322,l_r_321);
                  real l_r_324 = RMul(0.e0,l_r_301);
                  real l_r_325 = RMul(0.e0,l_r_309);
                  real l_r_326 = RMul(0.e0,l_r_317);
                  real l_r_327 = RAdd(l_r_324,l_r_325);
                  real l_r_328 = RAdd(l_r_327,l_r_326);
                  real l_r_329 = RMul(0.e0,l_r_302);
                  real l_r_330 = RMul(0.e0,l_r_310);
                  real l_r_331 = RMul(0.e0,l_r_318);
                  real l_r_332 = RAdd(l_r_329,l_r_330);
                  real l_r_333 = RAdd(l_r_332,l_r_331);
                  real l_r_334 = RAdd(l_r_322,RMul(-0.1e1,l_r_315));
                  real l_r_335 = RAdd(l_r_327,RMul(-0.1e1,l_r_317));
                  real l_r_336 = RAdd(l_r_332,RMul(-0.1e1,l_r_318));
                  real l_r_337 = RAdd(RAdd(l_r_319,RMul(0.1e1,l_r_307)),l_r_321);
                  real l_r_338 = RAdd(RAdd(l_r_324,RMul(0.1e1,l_r_309)),l_r_326);
                  real l_r_339 = RAdd(RAdd(l_r_329,RMul(0.1e1,l_r_310)),l_r_331);
                  real l_r_340 = RAdd(l_r_322,RMul(0.1e1,l_r_315));
                  real l_r_341 = RAdd(l_r_327,RMul(0.1e1,l_r_317));
                  real l_r_342 = RAdd(l_r_332,RMul(0.1e1,l_r_318));
                  real l_r_343 = RAdd(RAdd(RMul(-0.1e1,l_r_299),l_r_320),l_r_321);
                  real l_r_344 = RAdd(RAdd(RMul(-0.1e1,l_r_301),l_r_325),l_r_326);
                  real l_r_345 = RAdd(RAdd(RMul(-0.1e1,l_r_302),l_r_330),l_r_331);
                  real l_r_346 = RAdd(RAdd(l_r_319,RMul(-0.1e1,l_r_307)),l_r_321);
                  real l_r_347 = RAdd(RAdd(l_r_324,RMul(-0.1e1,l_r_309)),l_r_326);
                  real l_r_348 = RAdd(RAdd(l_r_329,RMul(-0.1e1,l_r_310)),l_r_331);
                  real l_r_349 = RAdd(RAdd(RMul(0.1e1,l_r_299),l_r_320),l_r_321);
                  real l_r_350 = RAdd(RAdd(RMul(0.1e1,l_r_301),l_r_325),l_r_326);
                  real l_r_351 = RAdd(RAdd(RMul(0.1e1,l_r_302),l_r_330),l_r_331);
                  real l_r_352 = RAdd(RAdd(RMul(l_r_299,l_r_328),RMul(l_r_307,l_r_341)),RMul(l_r_315,l_r_347));
                  real l_r_353 = RAdd(RAdd(RMul(l_r_299,l_r_333),RMul(l_r_307,l_r_342)),RMul(l_r_315,l_r_348));
                  real l_r_354 = RAdd(RAdd(RMul(l_r_299,l_r_335),RMul(l_r_307,l_r_328)),RMul(l_r_315,l_r_350));
                  real l_r_355 = RAdd(RAdd(RMul(l_r_299,l_r_336),RMul(l_r_307,l_r_333)),RMul(l_r_315,l_r_351));
                  real l_r_356 = RAdd(RAdd(RMul(l_r_299,l_r_338),RMul(l_r_307,l_r_344)),RMul(l_r_315,l_r_328));
                  real l_r_357 = RAdd(RAdd(RMul(l_r_299,l_r_339),RMul(l_r_307,l_r_345)),RMul(l_r_315,l_r_333));
                  real l_r_358 = RAdd(RAdd(RMul(l_r_301,l_r_323),RMul(l_r_309,l_r_340)),RMul(l_r_317,l_r_346));
                  real l_r_359 = RAdd(RAdd(RMul(l_r_301,l_r_333),RMul(l_r_309,l_r_342)),RMul(l_r_317,l_r_348));
                  real l_r_360 = RAdd(RAdd(RMul(l_r_301,l_r_334),RMul(l_r_309,l_r_323)),RMul(l_r_317,l_r_349));
                  real l_r_361 = RAdd(RAdd(RMul(l_r_301,l_r_336),RMul(l_r_309,l_r_333)),RMul(l_r_317,l_r_351));
                  real l_r_362 = RAdd(RAdd(RMul(l_r_301,l_r_337),RMul(l_r_309,l_r_343)),RMul(l_r_317,l_r_323));
                  real l_r_363 = RAdd(RAdd(RMul(l_r_301,l_r_339),RMul(l_r_309,l_r_345)),RMul(l_r_317,l_r_333));
                  real l_r_364 = RAdd(RAdd(RMul(l_r_302,l_r_323),RMul(l_r_310,l_r_340)),RMul(l_r_318,l_r_346));
                  real l_r_365 = RAdd(RAdd(RMul(l_r_302,l_r_328),RMul(l_r_310,l_r_341)),RMul(l_r_318,l_r_347));
                  real l_r_366 = RAdd(RAdd(RMul(l_r_302,l_r_334),RMul(l_r_310,l_r_323)),RMul(l_r_318,l_r_349));
                  real l_r_367 = RAdd(RAdd(RMul(l_r_302,l_r_335),RMul(l_r_310,l_r_328)),RMul(l_r_318,l_r_350));
                  real l_r_368 = RAdd(RAdd(RMul(l_r_302,l_r_337),RMul(l_r_310,l_r_343)),RMul(l_r_318,l_r_323));
                  real l_r_369 = RAdd(RAdd(RMul(l_r_302,l_r_338),RMul(l_r_310,l_r_344)),RMul(l_r_318,l_r_328));
                  vec3{4} v_370 = VEC3{4}(l_r_301,l_r_309,l_r_317);
                  real l_r_371 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_323),RMul(l_r_307,l_r_340)),RMul(l_r_315,l_r_346)));
                  real l_r_372 = RMul(0.e0,l_r_353);
                  real l_r_373 = RMul(0.e0,l_r_358);
                  real l_r_374 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_328),RMul(l_r_309,l_r_341)),RMul(l_r_317,l_r_347)));
                  real l_r_375 = RMul(0.e0,l_r_364);
                  real l_r_376 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_333),RMul(l_r_310,l_r_342)),RMul(l_r_318,l_r_348)));
                  real l_r_377 = RAdd(l_r_371,RMul(0.e0,l_r_352));
                  real l_r_378 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_334),RMul(l_r_307,l_r_323)),RMul(l_r_315,l_r_349)));
                  real l_r_379 = RMul(0.e0,l_r_355);
                  real l_r_380 = RMul(0.e0,l_r_360);
                  real l_r_381 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_335),RMul(l_r_309,l_r_328)),RMul(l_r_317,l_r_350)));
                  real l_r_382 = RMul(0.e0,l_r_366);
                  real l_r_383 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_336),RMul(l_r_310,l_r_333)),RMul(l_r_318,l_r_351)));
                  real l_r_384 = RAdd(l_r_378,RMul(0.e0,l_r_354));
                  real l_r_385 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_337),RMul(l_r_307,l_r_343)),RMul(l_r_315,l_r_323)));
                  real l_r_386 = RMul(0.e0,l_r_357);
                  real l_r_387 = RMul(0.e0,l_r_362);
                  real l_r_388 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_338),RMul(l_r_309,l_r_344)),RMul(l_r_317,l_r_328)));
                  real l_r_389 = RMul(0.e0,l_r_368);
                  real l_r_390 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_339),RMul(l_r_310,l_r_345)),RMul(l_r_318,l_r_333)));
                  real l_r_391 = RAdd(l_r_385,RMul(0.e0,l_r_356));
                  real l_r_392 = RMul(0.e0,l_r_359);
                  real l_r_393 = RMul(0.e0,l_r_365);
                  real l_r_394 = RMul(0.e0,l_r_361);
                  real l_r_395 = RMul(0.e0,l_r_367);
                  real l_r_396 = RMul(0.e0,l_r_363);
                  real l_r_397 = RMul(0.e0,l_r_369);
                  real l_op1_e3_l_36_398 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_299,l_r_307,l_r_315),VEC3{4}(VDot<3,4>(v_370,VEC3{4}(l_r_333,l_r_342,l_r_348)),VDot<3,4>(v_370,VEC3{4}(l_r_336,l_r_333,l_r_351)),VDot<3,4>(v_370,VEC3{4}(l_r_339,l_r_345,l_r_333)))));
                  vec3{4} v_399 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_377,l_r_372),l_r_373),l_r_374),RMul(0.1e1,l_r_359)),l_r_375),RMul(-0.1e1,l_r_365)),l_r_376),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_377,RMul(-0.1e1,l_r_353)),l_r_373),l_r_374),l_r_392),RMul(0.1e1,l_r_364)),l_r_393),l_r_376),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_371,RMul(0.1e1,l_r_352)),l_r_372),RMul(-0.1e1,l_r_358)),l_r_374),l_r_392),l_r_375),l_r_393),l_r_376),l_op1_e3_l_36_398))),RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_384,l_r_379),l_r_380),l_r_381),RMul(0.1e1,l_r_361)),l_r_382),RMul(-0.1e1,l_r_367)),l_r_383),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_384,RMul(-0.1e1,l_r_355)),l_r_380),l_r_381),l_r_394),RMul(0.1e1,l_r_366)),l_r_395),l_r_383),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_378,RMul(0.1e1,l_r_354)),l_r_379),RMul(-0.1e1,l_r_360)),l_r_381),l_r_394),l_r_382),l_r_395),l_r_383),l_op1_e3_l_36_398))),RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_391,l_r_386),l_r_387),l_r_388),RMul(0.1e1,l_r_363)),l_r_389),RMul(-0.1e1,l_r_369)),l_r_390),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_391,RMul(-0.1e1,l_r_357)),l_r_387),l_r_388),l_r_396),RMul(0.1e1,l_r_368)),l_r_397),l_r_390),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_385,RMul(0.1e1,l_r_356)),l_r_386),RMul(-0.1e1,l_r_362)),l_r_388),l_r_396),l_r_389),l_r_397),l_r_390),l_op1_e3_l_36_398)))));
                  real l_op1_e3_l_57_400 = Sqrt(VDot<3,4>(v_399,v_399));
                  real l_a_401 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_267,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_400))))));
                  vec3{4} v_402 = v_399;
                  if (GT<real>(l_a_401,0.e0)) {
                    tensor[3,2] l_voxels_412;
                    real l_imgPos_403 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_267),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_404 = RFloor(l_imgPos_403);
                    real l_f_405 = RSub(l_imgPos_403,l_nd_404);
                    int l_n_406 = RealToInt(l_nd_404);
                    real l__t_407 = MathFn<pow>(RSub(0.1e1,l_a_401),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_408 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_409 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_400),VDot<3,4>(v_402,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_406,globals.I)) {
                      int l_offp_410 = IMul(3,l_n_406);
                      int l_offp_411 = IMul(3,IAdd(l_n_406,1));
                      l_voxels_412 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_410),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_411),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_410,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_411,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_410,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_411,2))];
                    } else {
                      int l_offp_413 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_406));
                      int l_offp_414 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_406,1)));
                      l_voxels_412 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_413),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_414),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_413,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_413,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,2))];
                    }
                    vec2 v_415 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_405,RSub(l_f_405,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_416 = RSub(0.1e1,l__t_407);
                    real l_r_417 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_416),RAdd(0.11e1,l_op1_e3_l_19_408)),RAdd(globals.phongKa,l_op1_e3_l_20_409));
                    v_418 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_412)),v_415)),RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_412)),v_415)),RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_412)),v_415))));
                    l_transp_419 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_416));
                  } else {
                    v_418 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_419 = self.transp;
                  }
                  v_420 = v_418;
                  l_transp_421 = l_transp_419;
                } else {
                  tensor[3] _arg_422 = PACK(v_205);
                  print(TensorRef<[3]>(_arg_422),"\n");
                  print("wait what\?\n");
                  v_420 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_421 = self.transp;
                }
                v_423 = v_420;
                l_transp_424 = l_transp_421;
              } else {
                v_423 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_424 = self.transp;
              }
              v_425 = v_423;
              l_transp_426 = l_transp_424;
            } else {
              v_425 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_426 = self.transp;
            }
            v_427 = v_425;
            l_transp_428 = l_transp_426;
          } else {
            v_427 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_428 = self.transp;
          }
          v_429 = v_427;
          l_transp_430 = l_transp_428;
        } else {
          v_429 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_430 = self.transp;
        }
        v_431 = v_429;
        l_transp_432 = l_transp_430;
      } else {
        v_431 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_432 = self.transp;
      }
      v_433 = v_431;
      l_transp_434 = l_transp_432;
    } else {
      v_433 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_434 = self.transp;
    }
    if (LT<real>(l_transp_434,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_433);
      stabilize;
    } else {
      l_transp_436 = l_transp_434;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_436;
      self.rgb = PACK(v_433);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_436;
    self.rgb = PACK(v_433);
    active;
  }
  stabilize (world, globals) {
    vec4 v_440;
    real l_a_439 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_439,0.e0)) {
      v_440 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_439),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_439),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_439),l_a_439);
    } else {
      v_440 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_441 = PACK(v_440);
          print(l_a_439,TensorRef<[4]>(_arg_441));
        }
      }
    }
    self.rgba = PACK(v_440);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_443 = 0 to ISub(globals.iresV,1) {
      for i_ui_444 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_444,i_vi_443);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b043B_intermedateGlobal;
input femData(FemFunc) 0c043D_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[0.3e1,-0.3e1,0.3e1];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_7;
    v_7 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    int[] t_9 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_5,p_pos_6);
    foreach int i_cellItter_8 in t_9 {
      vec3{4} v_10;
      v_10 = v_7;
      for i_newtonItter_11 = 0 to 2 {
        int l_mulRes_12 = IMul(i_cellItter_8,4);
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_12);
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,1));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,2));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_24));
        int t_28 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,3));
        int l_mulRes_29 = IMul(3,t_28);
        real l_dof_load_30 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_29);
        real l_dof_load_31 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_29));
        real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_29));
        real l_prod_33 = RMul(0.1e1,0.1e1);
        real l_prod_34 = RMul(0.1e1,l_prod_33);
        real l_basisEval_35 = RMul(-0.1e1,l_prod_34);
        real l_basisEval_36 = RMul(0.1e1,l_prod_34);
        real l_r_37 = RMul(l_dof_load_15,l_basisEval_35);
        real l_r_38 = RMul(l_dof_load_25,0.e0);
        real l_r_39 = RMul(l_dof_load_30,0.e0);
        real l_r_40 = RAdd(RAdd(RAdd(l_r_37,RMul(l_dof_load_20,l_basisEval_36)),l_r_38),l_r_39);
        real l_r_41 = RAdd(l_r_37,RMul(l_dof_load_20,0.e0));
        real l_r_42 = RAdd(RAdd(l_r_41,RMul(l_dof_load_25,l_basisEval_36)),l_r_39);
        real l_r_43 = RAdd(RAdd(l_r_41,l_r_38),RMul(l_dof_load_30,l_basisEval_36));
        real l_r_44 = RMul(l_dof_load_16,l_basisEval_35);
        real l_r_45 = RMul(l_dof_load_26,0.e0);
        real l_r_46 = RMul(l_dof_load_31,0.e0);
        real l_r_47 = RAdd(RAdd(RAdd(l_r_44,RMul(l_dof_load_21,l_basisEval_36)),l_r_45),l_r_46);
        real l_r_48 = RAdd(l_r_44,RMul(l_dof_load_21,0.e0));
        real l_r_49 = RAdd(RAdd(l_r_48,RMul(l_dof_load_26,l_basisEval_36)),l_r_46);
        real l_r_50 = RAdd(RAdd(l_r_48,l_r_45),RMul(l_dof_load_31,l_basisEval_36));
        real l_r_51 = RMul(l_dof_load_17,l_basisEval_35);
        real l_r_52 = RMul(l_dof_load_27,0.e0);
        real l_r_53 = RMul(l_dof_load_32,0.e0);
        real l_r_54 = RAdd(RAdd(RAdd(l_r_51,RMul(l_dof_load_22,l_basisEval_36)),l_r_52),l_r_53);
        real l_r_55 = RAdd(l_r_51,RMul(l_dof_load_22,0.e0));
        real l_r_56 = RAdd(RAdd(l_r_55,RMul(l_dof_load_27,l_basisEval_36)),l_r_53);
        real l_r_57 = RAdd(RAdd(l_r_55,l_r_52),RMul(l_dof_load_32,l_basisEval_36));
        real l_r_58 = RMul(0.e0,l_r_40);
        real l_r_59 = RMul(0.e0,l_r_47);
        real l_r_60 = RMul(0.e0,l_r_54);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_42);
        real l_r_64 = RMul(0.e0,l_r_49);
        real l_r_65 = RMul(0.e0,l_r_56);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RMul(0.e0,l_r_43);
        real l_r_69 = RMul(0.e0,l_r_50);
        real l_r_70 = RMul(0.e0,l_r_57);
        real l_r_71 = RAdd(l_r_68,l_r_69);
        real l_r_72 = RAdd(l_r_71,l_r_70);
        real l_r_73 = RAdd(l_r_61,RMul(-0.1e1,l_r_54));
        real l_r_74 = RAdd(l_r_66,RMul(-0.1e1,l_r_56));
        real l_r_75 = RAdd(l_r_71,RMul(-0.1e1,l_r_57));
        real l_r_76 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_47)),l_r_60);
        real l_r_77 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_49)),l_r_65);
        real l_r_78 = RAdd(RAdd(l_r_68,RMul(0.1e1,l_r_50)),l_r_70);
        real l_r_79 = RAdd(l_r_61,RMul(0.1e1,l_r_54));
        real l_r_80 = RAdd(l_r_66,RMul(0.1e1,l_r_56));
        real l_r_81 = RAdd(l_r_71,RMul(0.1e1,l_r_57));
        real l_r_82 = RAdd(RAdd(RMul(-0.1e1,l_r_40),l_r_59),l_r_60);
        real l_r_83 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_64),l_r_65);
        real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_43),l_r_69),l_r_70);
        real l_r_85 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_47)),l_r_60);
        real l_r_86 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_49)),l_r_65);
        real l_r_87 = RAdd(RAdd(l_r_68,RMul(-0.1e1,l_r_50)),l_r_70);
        real l_r_88 = RAdd(RAdd(RMul(0.1e1,l_r_40),l_r_59),l_r_60);
        real l_r_89 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_64),l_r_65);
        real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_43),l_r_69),l_r_70);
        real l_r_91 = RAdd(RAdd(RMul(l_r_40,l_r_67),RMul(l_r_47,l_r_80)),RMul(l_r_54,l_r_86));
        real l_r_92 = RAdd(RAdd(RMul(l_r_40,l_r_72),RMul(l_r_47,l_r_81)),RMul(l_r_54,l_r_87));
        real l_r_93 = RAdd(RAdd(RMul(l_r_40,l_r_74),RMul(l_r_47,l_r_67)),RMul(l_r_54,l_r_89));
        real l_r_94 = RAdd(RAdd(RMul(l_r_40,l_r_75),RMul(l_r_47,l_r_72)),RMul(l_r_54,l_r_90));
        real l_r_95 = RAdd(RAdd(RMul(l_r_40,l_r_77),RMul(l_r_47,l_r_83)),RMul(l_r_54,l_r_67));
        real l_r_96 = RAdd(RAdd(RMul(l_r_40,l_r_78),RMul(l_r_47,l_r_84)),RMul(l_r_54,l_r_72));
        real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_62),RMul(l_r_49,l_r_79)),RMul(l_r_56,l_r_85));
        real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_72),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87));
        real l_r_99 = RAdd(RAdd(RMul(l_r_42,l_r_73),RMul(l_r_49,l_r_62)),RMul(l_r_56,l_r_88));
        real l_r_100 = RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_72)),RMul(l_r_56,l_r_90));
        real l_r_101 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_62));
        real l_r_102 = RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_72));
        real l_r_103 = RAdd(RAdd(RMul(l_r_43,l_r_62),RMul(l_r_50,l_r_79)),RMul(l_r_57,l_r_85));
        real l_r_104 = RAdd(RAdd(RMul(l_r_43,l_r_67),RMul(l_r_50,l_r_80)),RMul(l_r_57,l_r_86));
        real l_r_105 = RAdd(RAdd(RMul(l_r_43,l_r_73),RMul(l_r_50,l_r_62)),RMul(l_r_57,l_r_88));
        real l_r_106 = RAdd(RAdd(RMul(l_r_43,l_r_74),RMul(l_r_50,l_r_67)),RMul(l_r_57,l_r_89));
        real l_r_107 = RAdd(RAdd(RMul(l_r_43,l_r_76),RMul(l_r_50,l_r_82)),RMul(l_r_57,l_r_62));
        real l_r_108 = RAdd(RAdd(RMul(l_r_43,l_r_77),RMul(l_r_50,l_r_83)),RMul(l_r_57,l_r_67));
        vec3{4} v_109 = VEC3{4}(l_r_42,l_r_49,l_r_56);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_62),RMul(l_r_47,l_r_79)),RMul(l_r_54,l_r_85)));
        real l_r_111 = RMul(0.e0,l_r_92);
        real l_r_112 = RMul(0.e0,l_r_97);
        real l_r_113 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_67),RMul(l_r_49,l_r_80)),RMul(l_r_56,l_r_86)));
        real l_r_114 = RMul(0.e0,l_r_103);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_72),RMul(l_r_50,l_r_81)),RMul(l_r_57,l_r_87)));
        real l_r_116 = RAdd(l_r_110,RMul(0.e0,l_r_91));
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_73),RMul(l_r_47,l_r_62)),RMul(l_r_54,l_r_88)));
        real l_r_118 = RMul(0.e0,l_r_94);
        real l_r_119 = RMul(0.e0,l_r_99);
        real l_r_120 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_67)),RMul(l_r_56,l_r_89)));
        real l_r_121 = RMul(0.e0,l_r_105);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_75),RMul(l_r_50,l_r_72)),RMul(l_r_57,l_r_90)));
        real l_r_123 = RAdd(l_r_117,RMul(0.e0,l_r_93));
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_76),RMul(l_r_47,l_r_82)),RMul(l_r_54,l_r_62)));
        real l_r_125 = RMul(0.e0,l_r_96);
        real l_r_126 = RMul(0.e0,l_r_101);
        real l_r_127 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_67)));
        real l_r_128 = RMul(0.e0,l_r_107);
        real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_78),RMul(l_r_50,l_r_84)),RMul(l_r_57,l_r_72)));
        real l_r_130 = RAdd(l_r_124,RMul(0.e0,l_r_95));
        real l_r_131 = RMul(0.e0,l_r_98);
        real l_r_132 = RMul(0.e0,l_r_104);
        real l_r_133 = RMul(0.e0,l_r_100);
        real l_r_134 = RMul(0.e0,l_r_106);
        real l_r_135 = RMul(0.e0,l_r_102);
        real l_r_136 = RMul(0.e0,l_r_108);
        real l_op1_e3_l_21_137 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_40,l_r_47,l_r_54),VEC3{4}(VDot<3,4>(v_109,VEC3{4}(l_r_72,l_r_81,l_r_87)),VDot<3,4>(v_109,VEC3{4}(l_r_75,l_r_72,l_r_90)),VDot<3,4>(v_109,VEC3{4}(l_r_78,l_r_84,l_r_72)))));
        real l_prod_138 = RMul(VIndex<3,4,0>(v_10),l_prod_33);
        real l_prod_139 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_10),0.1e1));
        real l_prod_140 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_10)));
        real l_sum_141 = RAdd(l_basisEval_36,RAdd(RMul(-0.1e1,l_prod_140),RAdd(RMul(-0.1e1,l_prod_139),RMul(-0.1e1,l_prod_138))));
        real l_basisEval_142 = RMul(0.1e1,l_prod_138);
        real l_basisEval_143 = RMul(0.1e1,l_prod_139);
        real l_basisEval_144 = RMul(0.1e1,l_prod_140);
        vec3{4} v_145 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_15,l_sum_141),RMul(l_dof_load_20,l_basisEval_142)),RMul(l_dof_load_25,l_basisEval_143)),RMul(l_dof_load_30,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_16,l_sum_141),RMul(l_dof_load_21,l_basisEval_142)),RMul(l_dof_load_26,l_basisEval_143)),RMul(l_dof_load_31,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_141),RMul(l_dof_load_22,l_basisEval_142)),RMul(l_dof_load_27,l_basisEval_143)),RMul(l_dof_load_32,l_basisEval_144))),LOAD_0(p_pos_6));
        vec3{4} v_146 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,l_r_111),l_r_112),l_r_113),RMul(0.1e1,l_r_98)),l_r_114),RMul(-0.1e1,l_r_104)),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,l_r_118),l_r_119),l_r_120),RMul(0.1e1,l_r_100)),l_r_121),RMul(-0.1e1,l_r_106)),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,l_r_125),l_r_126),l_r_127),RMul(0.1e1,l_r_102)),l_r_128),RMul(-0.1e1,l_r_108)),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,RMul(-0.1e1,l_r_92)),l_r_112),l_r_113),l_r_131),RMul(0.1e1,l_r_103)),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,RMul(-0.1e1,l_r_94)),l_r_119),l_r_120),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,RMul(-0.1e1,l_r_96)),l_r_126),l_r_127),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_110,RMul(0.1e1,l_r_91)),l_r_111),RMul(-0.1e1,l_r_97)),l_r_113),l_r_131),l_r_114),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_117,RMul(0.1e1,l_r_93)),l_r_118),RMul(-0.1e1,l_r_99)),l_r_120),l_r_133),l_r_121),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_124,RMul(0.1e1,l_r_95)),l_r_125),RMul(-0.1e1,l_r_101)),l_r_127),l_r_135),l_r_128),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145));
        vec3{4} v_147 = VSub<3,4>(v_10,v_146);
        vec3{4} v_148 = v_147;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_146,v_146))) {
          vec3{4} v_149 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_148);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_148)),BAnd(GT<real>(VIndex<3,4,0>(v_149),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_149),-0.e0),GT<real>(VIndex<3,4,2>(v_149),-0.e0))))) {
            tensor[3] _arg_150 = PACK(v_148);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,i_cellItter_8,_arg_150,p_pos_6)
          }
        }
        v_10 = v_148;
      }
      v_7 = v_10;
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_155;
    femData(MeshCell)[] l__t_151;
    l__t_151 = <femData(MeshCell)[]>{};
    for i__t_152 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_151 = Append<femData(MeshCell),femData(MeshCell)>(l__t_151,LoadFem<femData(MeshCell)>(globals.a,i__t_152));
    }
    femData(FemFunc) l_c_153 = LoadFem<femData(FemFunc)>(globals.0c043D_intermedateGlobal,LoadFem<femData(Space)>(globals.0b043B_intermedateGlobal,globals.a));
    femData(Space) l__t_154 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_153);
    l_I_155 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_156 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_157 = Sqrt(VDot<3,4>(v_156,v_156));
    globals.camDist = l_camDist_157;
    real l_op1_e3_l_9_158 = RDiv(0.1e1,l_camDist_157);
    vec3{4} v_159 = VScale<3,4>(l_op1_e3_l_9_158,v_156);
    globals.camN = PACK(v_159);
    real l_r_161 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_162 = RMul(0.e0,l_r_161);
    real l_r_163 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_164 = RMul(0.e0,l_r_163);
    real l_r_165 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_166 = RMul(0.e0,l_r_165);
    real l_r_167 = RAdd(l_r_162,l_r_164);
    real l_r_168 = RAdd(l_r_167,l_r_166);
    vec3{4} v_169 = VEC3{4}(VDot<3,4>(v_156,VEC3{4}(l_r_168,RAdd(l_r_167,RMul(0.1e1,l_r_165)),RAdd(RAdd(l_r_162,RMul(-0.1e1,l_r_163)),l_r_166))),VDot<3,4>(v_156,VEC3{4}(RAdd(l_r_167,RMul(-0.1e1,l_r_165)),l_r_168,RAdd(RAdd(RMul(0.1e1,l_r_161),l_r_164),l_r_166))),VDot<3,4>(v_156,VEC3{4}(RAdd(RAdd(l_r_162,RMul(0.1e1,l_r_163)),l_r_166),RAdd(RAdd(RMul(-0.1e1,l_r_161),l_r_164),l_r_166),l_r_168)));
    real l_op1_e3_l_38_170 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_158,l_op1_e3_l_9_158),VDot<3,4>(v_169,v_169))));
    vec3{4} v_171 = VScale<3,4>(l_op1_e3_l_38_170,VScale<3,4>(l_op1_e3_l_9_158,v_169));
    globals.camU = PACK(v_171);
    real l_r_173 = VIndex<3,4,0>(v_156);
    real l_r_174 = RMul(0.e0,l_r_173);
    real l_r_175 = VIndex<3,4,1>(v_156);
    real l_r_176 = RMul(0.e0,l_r_175);
    real l_r_177 = VIndex<3,4,2>(v_156);
    real l_r_178 = RMul(0.e0,l_r_177);
    real l_r_179 = RAdd(l_r_174,l_r_176);
    real l_r_180 = RAdd(l_r_179,l_r_178);
    vec3{4} v_181 = VScale<3,4>(l_op1_e3_l_9_158,VEC3{4}(VDot<3,4>(v_169,VEC3{4}(l_r_180,RAdd(l_r_179,RMul(0.1e1,l_r_177)),RAdd(RAdd(l_r_174,RMul(-0.1e1,l_r_175)),l_r_178))),VDot<3,4>(v_169,VEC3{4}(RAdd(l_r_179,RMul(-0.1e1,l_r_177)),l_r_180,RAdd(RAdd(RMul(0.1e1,l_r_173),l_r_176),l_r_178))),VDot<3,4>(v_169,VEC3{4}(RAdd(RAdd(l_r_174,RMul(0.1e1,l_r_175)),l_r_178),RAdd(RAdd(RMul(-0.1e1,l_r_173),l_r_176),l_r_178),l_r_180))));
    real l_r_182 = RMul(l_op1_e3_l_38_170,l_op1_e3_l_9_158);
    real l_r_183 = RMul(l_r_182,VIndex<3,4,0>(v_181));
    real l_r_184 = RMul(l_r_182,VIndex<3,4,1>(v_181));
    real l_r_185 = RMul(l_r_182,VIndex<3,4,2>(v_181));
    globals.camV = <tensor[3]>[l_r_183,l_r_184,l_r_185];
    real l_op1_e3_l_10_187 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_187,l_camDist_157);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_187),l_camDist_157),IntToReal(globals.iresV));
    real l_r_188 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_189 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_190 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_171),l_r_188),RMul(l_r_183,l_r_189)),RMul(VIndex<3,4,0>(v_159),l_r_190)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_171),l_r_188),RMul(l_r_184,l_r_189)),RMul(VIndex<3,4,1>(v_159),l_r_190)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_171),l_r_188),RMul(l_r_185,l_r_189)),RMul(VIndex<3,4,2>(v_159),l_r_190)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_154);
    globals._tX = l__t_154;
    globals.c = l_c_153;
    globals.I = l_I_155;
  }
//***** STRAND *****
strand raycast (int p_ui_192,int p_vi_193) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_194 = RNeg(globals.camUmax);
    real l_rayU_195 = RAdd(l_op1_e3_l_9_194,RMul(RDiv(RSub(IntToReal(p_ui_192),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_194)));
    real l_rayV_196 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_193),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_197 = VAdd<3,4>(VScale<3,4>(l_rayU_195,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_196,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_198 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_195;
    self.rayV = l_rayV_196;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_198,VIndex<3,4,0>(v_197)),RMul(l_r_198,VIndex<3,4,1>(v_197)),RMul(l_r_198,VIndex<3,4,2>(v_197)))));
    self.transp = 0.1e1;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.gray = 0.e0;
    self.ui = p_ui_192;
    self.vi = p_vi_193;
  }
  update (world, globals) {
    real l_transp_436;
    real l_transp_434;
    vec3{4} v_433;
    if (globals.debug) {
      bool l__t_202;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_202 = true;
      } else {
        l__t_202 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_202) {
        stabilize;
      }
    }
    vec3{4} v_203 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_204 = VIndex<3,4,0>(v_203);
    vec3{4} v_205 = v_203;
    if (LT<real>(0.e0,l__t_204)) {
      real l_transp_432;
      vec3{4} v_431;
      if (LT<real>(l__t_204,0.1e1)) {
        real l_transp_430;
        vec3{4} v_429;
        real l__t_206 = VIndex<3,4,1>(v_205);
        if (LT<real>(0.e0,l__t_206)) {
          real l_transp_428;
          vec3{4} v_427;
          if (LT<real>(l__t_206,0.1e1)) {
            real l_transp_426;
            vec3{4} v_425;
            real l__t_207 = VIndex<3,4,2>(v_205);
            if (LT<real>(0.e0,l__t_207)) {
              real l_transp_424;
              vec3{4} v_423;
              if (LT<real>(l__t_207,0.1e1)) {
                real l_transp_421;
                vec3{4} v_420;
                tensor[3] _arg_208 = PACK(v_205);
                femData(MeshPos) l_p_209 = findPos$332E(globals.a,_arg_208);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_209)) {
                  real l_transp_419;
                  vec3{4} v_418;
                  tensor[3] _arg_210 = PACK(v_205);
                  femData(MeshPos) l_callFindPos_211 = findPos$332E(globals._t,_arg_210);
                  int l_intPos_212 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_211);
                  &tensor[3] l_refPos_213 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_211);
                  int l_mulRes_214 = IMul(l_intPos_212,10);
                  int t_215 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_214);
                  int t_216 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,1));
                  int t_217 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,2));
                  int t_218 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,3));
                  int t_219 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,4));
                  int t_220 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,5));
                  int t_221 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,6));
                  int t_222 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,7));
                  int t_223 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,8));
                  int t_224 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_214,9));
                  real t_225 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_224));
                  real t_226 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_223));
                  real t_227 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_222));
                  real t_228 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_221));
                  real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_220));
                  real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_219));
                  real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_218));
                  real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_217));
                  real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_216));
                  real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_215));
                  vec4 v_235 = VEC4(t_234,t_233,t_232,t_231);
                  vec4 v_236 = VEC4(t_230,t_229,t_228,t_227);
                  vec2 v_237 = VEC2(t_226,t_225);
                  real l_varAcc_238 = TensorIndex<&tensor[3],[0]>(l_refPos_213);
                  real l_varAcc_239 = TensorIndex<&tensor[3],[1]>(l_refPos_213);
                  real l_varAcc_240 = TensorIndex<&tensor[3],[2]>(l_refPos_213);
                  real l_prod_241 = RMul(0.1e1,0.1e1);
                  real l_prod_242 = RMul(RMul(l_varAcc_238,l_varAcc_238),l_prod_241);
                  real l_prod_243 = RMul(l_varAcc_239,0.1e1);
                  real l_prod_244 = RMul(l_varAcc_238,l_prod_243);
                  real l_prod_245 = RMul(0.1e1,l_varAcc_240);
                  real l_prod_246 = RMul(l_varAcc_238,l_prod_245);
                  real l_prod_247 = RMul(l_varAcc_238,l_prod_241);
                  real l_prod_248 = RMul(0.1e1,RMul(RMul(l_varAcc_239,l_varAcc_239),0.1e1));
                  real l_prod_249 = RMul(0.1e1,RMul(l_varAcc_239,l_varAcc_240));
                  real l_prod_250 = RMul(0.1e1,l_prod_243);
                  real l_prod_251 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_240,l_varAcc_240)));
                  real l_prod_252 = RMul(0.1e1,l_prod_245);
                  real l_prod_253 = RMul(0.1e1,l_prod_241);
                  real l_mult_254 = RMul(0.1e1,l_prod_253);
                  real l_mult_255 = RMul(0.2e1,l_prod_251);
                  real l_mult_256 = RMul(0.4e1,l_prod_249);
                  real l_mult_257 = RMul(0.2e1,l_prod_248);
                  real l_mult_258 = RMul(0.4e1,l_prod_246);
                  real l_mult_259 = RMul(0.4e1,l_prod_244);
                  real l_mult_260 = RMul(0.2e1,l_prod_242);
                  real l_mult_261 = RMul(0.4e1,l_prod_252);
                  real l_mult_262 = RMul(-0.4e1,l_prod_249);
                  real l_mult_263 = RMul(-0.4e1,l_prod_246);
                  real l_mult_264 = RMul(0.4e1,l_prod_250);
                  real l_mult_265 = RMul(-0.4e1,l_prod_244);
                  real l_mult_266 = RMul(0.4e1,l_prod_247);
                  real l_compositionl_267 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_256,l_mult_258,l_mult_259,RAdd(l_mult_261,RAdd(RMul(-0.4e1,l_prod_251),RAdd(l_mult_262,l_mult_263))))),RAdd(VDot<2,2>(v_237,VEC2(RAdd(l_mult_264,RAdd(l_mult_262,RAdd(RMul(-0.4e1,l_prod_248),l_mult_265))),RAdd(l_mult_266,RAdd(l_mult_263,RAdd(l_mult_265,RMul(-0.4e1,l_prod_242)))))),VDot<4,4>(v_235,VEC4(RAdd(l_mult_254,RAdd(RMul(-0.3e1,l_prod_252),RAdd(l_mult_255,RAdd(RMul(-0.3e1,l_prod_250),RAdd(l_mult_256,RAdd(l_mult_257,RAdd(RMul(-0.3e1,l_prod_247),RAdd(l_mult_258,RAdd(l_mult_259,l_mult_260))))))))),RAdd(RMul(-0.1e1,l_prod_247),l_mult_260),RAdd(RMul(-0.1e1,l_prod_250),l_mult_257),RAdd(RMul(-0.1e1,l_prod_252),l_mult_255)))));
                  real l_sum_268 = RAdd(RMul(-0.3e1,l_prod_253),RAdd(l_mult_261,RAdd(l_mult_264,l_mult_266)));
                  real l_mult_269 = RMul(-0.1e1,l_prod_253);
                  real l_basisEval_270 = RMul(-0.4e1,l_prod_252);
                  real l_basisEval_271 = RMul(-0.4e1,l_prod_250);
                  real l_mult_272 = RMul(0.4e1,l_prod_253);
                  real l_mult_273 = RMul(-0.4e1,l_prod_247);
                  real l_vdot_274 = RAdd(VDot<4,4>(v_236,VEC4(0.e0,l_mult_261,l_mult_264,l_basisEval_270)),RAdd(VDot<2,2>(v_237,VEC2(l_basisEval_271,RAdd(l_mult_272,RAdd(l_basisEval_270,RAdd(l_basisEval_271,RMul(-0.8e1,l_prod_247)))))),VDot<4,4>(v_235,VEC4(l_sum_268,RAdd(l_mult_269,l_mult_266),0.e0,0.e0))));
                  real l_vdot_275 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_261,0.e0,l_mult_266,l_basisEval_270)),RAdd(VDot<2,2>(v_237,VEC2(RAdd(l_mult_272,RAdd(l_basisEval_270,RAdd(RMul(-0.8e1,l_prod_250),l_mult_273))),l_mult_273)),VDot<4,4>(v_235,VEC4(l_sum_268,0.e0,RAdd(l_mult_269,l_mult_264),0.e0))));
                  real l_vdot_276 = RAdd(VDot<4,4>(v_236,VEC4(l_mult_264,l_mult_266,0.e0,RAdd(l_mult_272,RAdd(RMul(-0.8e1,l_prod_252),RAdd(l_basisEval_271,l_mult_273))))),RAdd(VDot<2,2>(v_237,VEC2(l_basisEval_271,l_mult_273)),VDot<4,4>(v_235,VEC4(l_sum_268,0.e0,0.e0,RAdd(l_mult_269,l_mult_261)))));
                  int l_mulRes_277 = IMul(l_intPos_212,4);
                  int t_278 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_277);
                  int l_mulRes_279 = IMul(3,t_278);
                  int t_280 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,1));
                  int l_mulRes_281 = IMul(3,t_280);
                  real l_dof_load_282 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_281);
                  real l_dof_load_283 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_281));
                  real l_dof_load_284 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_281));
                  int t_285 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,2));
                  int l_mulRes_286 = IMul(3,t_285);
                  real l_dof_load_287 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_286);
                  real l_dof_load_288 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_286));
                  real l_dof_load_289 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_286));
                  int t_290 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_277,3));
                  int l_mulRes_291 = IMul(3,t_290);
                  real l_dof_load_292 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_291);
                  real l_dof_load_293 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_291));
                  real l_dof_load_294 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_291));
                  real t_295 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_279);
                  real l_r_296 = RMul(t_295,l_mult_269);
                  real l_r_297 = RMul(l_dof_load_287,0.e0);
                  real l_r_298 = RMul(l_dof_load_292,0.e0);
                  real l_r_299 = RAdd(RAdd(RAdd(l_r_296,RMul(l_dof_load_282,l_mult_254)),l_r_297),l_r_298);
                  real l_r_300 = RAdd(l_r_296,RMul(l_dof_load_282,0.e0));
                  real l_r_301 = RAdd(RAdd(l_r_300,RMul(l_dof_load_287,l_mult_254)),l_r_298);
                  real l_r_302 = RAdd(RAdd(l_r_300,l_r_297),RMul(l_dof_load_292,l_mult_254));
                  real t_303 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_279));
                  real l_r_304 = RMul(t_303,l_mult_269);
                  real l_r_305 = RMul(l_dof_load_288,0.e0);
                  real l_r_306 = RMul(l_dof_load_293,0.e0);
                  real l_r_307 = RAdd(RAdd(RAdd(l_r_304,RMul(l_dof_load_283,l_mult_254)),l_r_305),l_r_306);
                  real l_r_308 = RAdd(l_r_304,RMul(l_dof_load_283,0.e0));
                  real l_r_309 = RAdd(RAdd(l_r_308,RMul(l_dof_load_288,l_mult_254)),l_r_306);
                  real l_r_310 = RAdd(RAdd(l_r_308,l_r_305),RMul(l_dof_load_293,l_mult_254));
                  real t_311 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_279));
                  real l_r_312 = RMul(t_311,l_mult_269);
                  real l_r_313 = RMul(l_dof_load_289,0.e0);
                  real l_r_314 = RMul(l_dof_load_294,0.e0);
                  real l_r_315 = RAdd(RAdd(RAdd(l_r_312,RMul(l_dof_load_284,l_mult_254)),l_r_313),l_r_314);
                  real l_r_316 = RAdd(l_r_312,RMul(l_dof_load_284,0.e0));
                  real l_r_317 = RAdd(RAdd(l_r_316,RMul(l_dof_load_289,l_mult_254)),l_r_314);
                  real l_r_318 = RAdd(RAdd(l_r_316,l_r_313),RMul(l_dof_load_294,l_mult_254));
                  real l_r_319 = RMul(0.e0,l_r_299);
                  real l_r_320 = RMul(0.e0,l_r_307);
                  real l_r_321 = RMul(0.e0,l_r_315);
                  real l_r_322 = RAdd(l_r_319,l_r_320);
                  real l_r_323 = RAdd(l_r_322,l_r_321);
                  real l_r_324 = RMul(0.e0,l_r_301);
                  real l_r_325 = RMul(0.e0,l_r_309);
                  real l_r_326 = RMul(0.e0,l_r_317);
                  real l_r_327 = RAdd(l_r_324,l_r_325);
                  real l_r_328 = RAdd(l_r_327,l_r_326);
                  real l_r_329 = RMul(0.e0,l_r_302);
                  real l_r_330 = RMul(0.e0,l_r_310);
                  real l_r_331 = RMul(0.e0,l_r_318);
                  real l_r_332 = RAdd(l_r_329,l_r_330);
                  real l_r_333 = RAdd(l_r_332,l_r_331);
                  real l_r_334 = RAdd(l_r_322,RMul(-0.1e1,l_r_315));
                  real l_r_335 = RAdd(l_r_327,RMul(-0.1e1,l_r_317));
                  real l_r_336 = RAdd(l_r_332,RMul(-0.1e1,l_r_318));
                  real l_r_337 = RAdd(RAdd(l_r_319,RMul(0.1e1,l_r_307)),l_r_321);
                  real l_r_338 = RAdd(RAdd(l_r_324,RMul(0.1e1,l_r_309)),l_r_326);
                  real l_r_339 = RAdd(RAdd(l_r_329,RMul(0.1e1,l_r_310)),l_r_331);
                  real l_r_340 = RAdd(l_r_322,RMul(0.1e1,l_r_315));
                  real l_r_341 = RAdd(l_r_327,RMul(0.1e1,l_r_317));
                  real l_r_342 = RAdd(l_r_332,RMul(0.1e1,l_r_318));
                  real l_r_343 = RAdd(RAdd(RMul(-0.1e1,l_r_299),l_r_320),l_r_321);
                  real l_r_344 = RAdd(RAdd(RMul(-0.1e1,l_r_301),l_r_325),l_r_326);
                  real l_r_345 = RAdd(RAdd(RMul(-0.1e1,l_r_302),l_r_330),l_r_331);
                  real l_r_346 = RAdd(RAdd(l_r_319,RMul(-0.1e1,l_r_307)),l_r_321);
                  real l_r_347 = RAdd(RAdd(l_r_324,RMul(-0.1e1,l_r_309)),l_r_326);
                  real l_r_348 = RAdd(RAdd(l_r_329,RMul(-0.1e1,l_r_310)),l_r_331);
                  real l_r_349 = RAdd(RAdd(RMul(0.1e1,l_r_299),l_r_320),l_r_321);
                  real l_r_350 = RAdd(RAdd(RMul(0.1e1,l_r_301),l_r_325),l_r_326);
                  real l_r_351 = RAdd(RAdd(RMul(0.1e1,l_r_302),l_r_330),l_r_331);
                  real l_r_352 = RAdd(RAdd(RMul(l_r_299,l_r_328),RMul(l_r_307,l_r_341)),RMul(l_r_315,l_r_347));
                  real l_r_353 = RAdd(RAdd(RMul(l_r_299,l_r_333),RMul(l_r_307,l_r_342)),RMul(l_r_315,l_r_348));
                  real l_r_354 = RAdd(RAdd(RMul(l_r_299,l_r_335),RMul(l_r_307,l_r_328)),RMul(l_r_315,l_r_350));
                  real l_r_355 = RAdd(RAdd(RMul(l_r_299,l_r_336),RMul(l_r_307,l_r_333)),RMul(l_r_315,l_r_351));
                  real l_r_356 = RAdd(RAdd(RMul(l_r_299,l_r_338),RMul(l_r_307,l_r_344)),RMul(l_r_315,l_r_328));
                  real l_r_357 = RAdd(RAdd(RMul(l_r_299,l_r_339),RMul(l_r_307,l_r_345)),RMul(l_r_315,l_r_333));
                  real l_r_358 = RAdd(RAdd(RMul(l_r_301,l_r_323),RMul(l_r_309,l_r_340)),RMul(l_r_317,l_r_346));
                  real l_r_359 = RAdd(RAdd(RMul(l_r_301,l_r_333),RMul(l_r_309,l_r_342)),RMul(l_r_317,l_r_348));
                  real l_r_360 = RAdd(RAdd(RMul(l_r_301,l_r_334),RMul(l_r_309,l_r_323)),RMul(l_r_317,l_r_349));
                  real l_r_361 = RAdd(RAdd(RMul(l_r_301,l_r_336),RMul(l_r_309,l_r_333)),RMul(l_r_317,l_r_351));
                  real l_r_362 = RAdd(RAdd(RMul(l_r_301,l_r_337),RMul(l_r_309,l_r_343)),RMul(l_r_317,l_r_323));
                  real l_r_363 = RAdd(RAdd(RMul(l_r_301,l_r_339),RMul(l_r_309,l_r_345)),RMul(l_r_317,l_r_333));
                  real l_r_364 = RAdd(RAdd(RMul(l_r_302,l_r_323),RMul(l_r_310,l_r_340)),RMul(l_r_318,l_r_346));
                  real l_r_365 = RAdd(RAdd(RMul(l_r_302,l_r_328),RMul(l_r_310,l_r_341)),RMul(l_r_318,l_r_347));
                  real l_r_366 = RAdd(RAdd(RMul(l_r_302,l_r_334),RMul(l_r_310,l_r_323)),RMul(l_r_318,l_r_349));
                  real l_r_367 = RAdd(RAdd(RMul(l_r_302,l_r_335),RMul(l_r_310,l_r_328)),RMul(l_r_318,l_r_350));
                  real l_r_368 = RAdd(RAdd(RMul(l_r_302,l_r_337),RMul(l_r_310,l_r_343)),RMul(l_r_318,l_r_323));
                  real l_r_369 = RAdd(RAdd(RMul(l_r_302,l_r_338),RMul(l_r_310,l_r_344)),RMul(l_r_318,l_r_328));
                  vec3{4} v_370 = VEC3{4}(l_r_301,l_r_309,l_r_317);
                  real l_r_371 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_323),RMul(l_r_307,l_r_340)),RMul(l_r_315,l_r_346)));
                  real l_r_372 = RMul(0.e0,l_r_353);
                  real l_r_373 = RMul(0.e0,l_r_358);
                  real l_r_374 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_328),RMul(l_r_309,l_r_341)),RMul(l_r_317,l_r_347)));
                  real l_r_375 = RMul(0.e0,l_r_364);
                  real l_r_376 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_333),RMul(l_r_310,l_r_342)),RMul(l_r_318,l_r_348)));
                  real l_r_377 = RAdd(l_r_371,RMul(0.e0,l_r_352));
                  real l_r_378 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_334),RMul(l_r_307,l_r_323)),RMul(l_r_315,l_r_349)));
                  real l_r_379 = RMul(0.e0,l_r_355);
                  real l_r_380 = RMul(0.e0,l_r_360);
                  real l_r_381 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_335),RMul(l_r_309,l_r_328)),RMul(l_r_317,l_r_350)));
                  real l_r_382 = RMul(0.e0,l_r_366);
                  real l_r_383 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_336),RMul(l_r_310,l_r_333)),RMul(l_r_318,l_r_351)));
                  real l_r_384 = RAdd(l_r_378,RMul(0.e0,l_r_354));
                  real l_r_385 = RMul(0.e0,RAdd(RAdd(RMul(l_r_299,l_r_337),RMul(l_r_307,l_r_343)),RMul(l_r_315,l_r_323)));
                  real l_r_386 = RMul(0.e0,l_r_357);
                  real l_r_387 = RMul(0.e0,l_r_362);
                  real l_r_388 = RMul(0.e0,RAdd(RAdd(RMul(l_r_301,l_r_338),RMul(l_r_309,l_r_344)),RMul(l_r_317,l_r_328)));
                  real l_r_389 = RMul(0.e0,l_r_368);
                  real l_r_390 = RMul(0.e0,RAdd(RAdd(RMul(l_r_302,l_r_339),RMul(l_r_310,l_r_345)),RMul(l_r_318,l_r_333)));
                  real l_r_391 = RAdd(l_r_385,RMul(0.e0,l_r_356));
                  real l_r_392 = RMul(0.e0,l_r_359);
                  real l_r_393 = RMul(0.e0,l_r_365);
                  real l_r_394 = RMul(0.e0,l_r_361);
                  real l_r_395 = RMul(0.e0,l_r_367);
                  real l_r_396 = RMul(0.e0,l_r_363);
                  real l_r_397 = RMul(0.e0,l_r_369);
                  real l_op1_e3_l_36_398 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_299,l_r_307,l_r_315),VEC3{4}(VDot<3,4>(v_370,VEC3{4}(l_r_333,l_r_342,l_r_348)),VDot<3,4>(v_370,VEC3{4}(l_r_336,l_r_333,l_r_351)),VDot<3,4>(v_370,VEC3{4}(l_r_339,l_r_345,l_r_333)))));
                  vec3{4} v_399 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_377,l_r_372),l_r_373),l_r_374),RMul(0.1e1,l_r_359)),l_r_375),RMul(-0.1e1,l_r_365)),l_r_376),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_377,RMul(-0.1e1,l_r_353)),l_r_373),l_r_374),l_r_392),RMul(0.1e1,l_r_364)),l_r_393),l_r_376),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_371,RMul(0.1e1,l_r_352)),l_r_372),RMul(-0.1e1,l_r_358)),l_r_374),l_r_392),l_r_375),l_r_393),l_r_376),l_op1_e3_l_36_398))),RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_384,l_r_379),l_r_380),l_r_381),RMul(0.1e1,l_r_361)),l_r_382),RMul(-0.1e1,l_r_367)),l_r_383),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_384,RMul(-0.1e1,l_r_355)),l_r_380),l_r_381),l_r_394),RMul(0.1e1,l_r_366)),l_r_395),l_r_383),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_378,RMul(0.1e1,l_r_354)),l_r_379),RMul(-0.1e1,l_r_360)),l_r_381),l_r_394),l_r_382),l_r_395),l_r_383),l_op1_e3_l_36_398))),RAdd(RAdd(RMul(l_vdot_274,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_391,l_r_386),l_r_387),l_r_388),RMul(0.1e1,l_r_363)),l_r_389),RMul(-0.1e1,l_r_369)),l_r_390),l_op1_e3_l_36_398)),RMul(l_vdot_275,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_391,RMul(-0.1e1,l_r_357)),l_r_387),l_r_388),l_r_396),RMul(0.1e1,l_r_368)),l_r_397),l_r_390),l_op1_e3_l_36_398))),RMul(l_vdot_276,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_385,RMul(0.1e1,l_r_356)),l_r_386),RMul(-0.1e1,l_r_362)),l_r_388),l_r_396),l_r_389),l_r_397),l_r_390),l_op1_e3_l_36_398)))));
                  real l_op1_e3_l_57_400 = Sqrt(VDot<3,4>(v_399,v_399));
                  real l_a_401 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_267,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_400))))));
                  vec3{4} v_402 = v_399;
                  if (GT<real>(l_a_401,0.e0)) {
                    tensor[3,2] l_voxels_412;
                    real l_imgPos_403 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_267),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_404 = RFloor(l_imgPos_403);
                    real l_f_405 = RSub(l_imgPos_403,l_nd_404);
                    int l_n_406 = RealToInt(l_nd_404);
                    real l__t_407 = MathFn<pow>(RSub(0.1e1,l_a_401),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_408 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_409 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_400),VDot<3,4>(v_402,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_406,globals.I)) {
                      int l_offp_410 = IMul(3,l_n_406);
                      int l_offp_411 = IMul(3,IAdd(l_n_406,1));
                      l_voxels_412 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_410),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_411),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_410,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_411,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_410,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_411,2))];
                    } else {
                      int l_offp_413 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_406));
                      int l_offp_414 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_406,1)));
                      l_voxels_412 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_413),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_414),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_413,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_413,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,2))];
                    }
                    vec2 v_415 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_405,RSub(l_f_405,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_416 = RSub(0.1e1,l__t_407);
                    real l_r_417 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_416),RAdd(0.11e1,l_op1_e3_l_19_408)),RAdd(globals.phongKa,l_op1_e3_l_20_409));
                    v_418 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_412)),v_415)),RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_412)),v_415)),RMul(l_r_417,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_412)),v_415))));
                    l_transp_419 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_416));
                  } else {
                    v_418 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_419 = self.transp;
                  }
                  v_420 = v_418;
                  l_transp_421 = l_transp_419;
                } else {
                  tensor[3] _arg_422 = PACK(v_205);
                  print(TensorRef<[3]>(_arg_422),"\n");
                  print("wait what\?\n");
                  v_420 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_421 = self.transp;
                }
                v_423 = v_420;
                l_transp_424 = l_transp_421;
              } else {
                v_423 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_424 = self.transp;
              }
              v_425 = v_423;
              l_transp_426 = l_transp_424;
            } else {
              v_425 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_426 = self.transp;
            }
            v_427 = v_425;
            l_transp_428 = l_transp_426;
          } else {
            v_427 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_428 = self.transp;
          }
          v_429 = v_427;
          l_transp_430 = l_transp_428;
        } else {
          v_429 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_430 = self.transp;
        }
        v_431 = v_429;
        l_transp_432 = l_transp_430;
      } else {
        v_431 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_432 = self.transp;
      }
      v_433 = v_431;
      l_transp_434 = l_transp_432;
    } else {
      v_433 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_434 = self.transp;
    }
    if (LT<real>(l_transp_434,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_433);
      stabilize;
    } else {
      l_transp_436 = l_transp_434;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_436;
      self.rgb = PACK(v_433);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_436;
    self.rgb = PACK(v_433);
    active;
  }
  stabilize (world, globals) {
    vec4 v_440;
    real l_a_439 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_439,0.e0)) {
      v_440 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_a_439),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_a_439),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_a_439),l_a_439);
    } else {
      v_440 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_441 = PACK(v_440);
          print(l_a_439,TensorRef<[4]>(_arg_441));
        }
      }
    }
    self.rgba = PACK(v_440);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_443 = 0 to ISub(globals.iresV,1) {
      for i_ui_444 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_444,i_vi_443);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include justTypes.cxx
/usr/bin/clang++ -shared -o justTypes.so justTypes.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.095     3.034
    front end .......................................................................   0.641     0.703
      parser ........................................................................   0.029     0.029
      typechecker ...................................................................   0.032     0.032
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.008     0.008
    High IR optimization ............................................................   0.035     0.083
      High IR value numbering .......................................................   0.010     0.010
      High IR normalization .........................................................   0.038     0.038
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.057     0.057
    Mid IR optimization .............................................................   0.029     0.056
      Mid IR contraction ............................................................   0.006     0.006
      Mid IR value numbering ........................................................   0.020     0.020
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.065     0.065
    Low IR optimization .............................................................   0.092     0.217
      Low IR contraction ............................................................   0.061     0.061
      Low IR value numbering ........................................................   0.064     0.064
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.061     0.061
    Tree IR optimization ............................................................   0.009     0.010
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.042     1.678
      C compiler ....................................................................   1.635     1.635
