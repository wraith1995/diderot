/* ParseTree: After parsing */
  Program @ [justTypes.diderot:2.1-90.0] 
    [
      Type: msh= @ [justTypes.diderot:2.1-3.0] 
        Mesh @ [justTypes.diderot:2.6-10] 
        From File : test1.json @ [justTypes.diderot:2.1-3.0] 
      Type: fns= @ [justTypes.diderot:3.1-4.0] 
        FunctionSpace(msh) @ [justTypes.diderot:3.6-26] 
          [ ]
        From File : test1.json @ [justTypes.diderot:3.1-4.0] 
      Type: FUNC= @ [justTypes.diderot:4.1-5.0] 
        FemFunction(fns) @ [justTypes.diderot:4.6-22] 
        From File : test1.json @ [justTypes.diderot:4.1-5.0] 
      Input: a @ [justTypes.diderot:6.1-7.0] 
      Input: b= @ [justTypes.diderot:7.1-22] 
        Apply @ [justTypes.diderot:7.15-21] 
          Var: fns @ [justTypes.diderot:7.15-18] 
          [
            Var: a @ [justTypes.diderot:7.19-20] 
          ]
      Input: c= @ [justTypes.diderot:8.1-9.0] 
        Apply @ [justTypes.diderot:8.16-23] 
          Var: FUNC @ [justTypes.diderot:8.16-20] 
          [
            Var: b @ [justTypes.diderot:8.21-22] 
          ]
      Var @ [justTypes.diderot:9.1-10.0] 
        Decl: V= @ [justTypes.diderot:9.1-10.0] 
          Select @ [justTypes.diderot:9.16-19] 
            Var: c @ [justTypes.diderot:9.16-17] 
            F
      Input: isoval= @ [justTypes.diderot:10.1-25] 
        Lit: 0.2e0 @ [justTypes.diderot:10.21-24] 
      Input: thick= @ [justTypes.diderot:10.27-11.0] 
        Lit: 0.7e-1 @ [justTypes.diderot:10.46-50] 
      Input: camEye= @ [justTypes.diderot:11.1-37] 
        Cons @ [justTypes.diderot:11.21-36] 
          [
            UnaryOp: unary - @ [justTypes.diderot:11.22-26] 
              Lit: 0.3e1 @ [justTypes.diderot:11.23-26] 
            UnaryOp: unary - @ [justTypes.diderot:11.27-31] 
              Lit: 0.3e1 @ [justTypes.diderot:11.28-31] 
            Lit: 0.3e1 @ [justTypes.diderot:11.32-35] 
          ]
      Input: camAt= @ [justTypes.diderot:11.39-72] 
        Cons @ [justTypes.diderot:11.58-71] 
          [
            Lit: 0.5e0 @ [justTypes.diderot:11.59-62] 
            Lit: 0.5e0 @ [justTypes.diderot:11.63-66] 
            Lit: 0.5e0 @ [justTypes.diderot:11.67-70] 
          ]
      Input: camUp= @ [justTypes.diderot:11.75-12.0] 
        Cons @ [justTypes.diderot:11.94-101] 
          [
            Lit: 0 @ [justTypes.diderot:11.95-96] 
            Lit: 0 @ [justTypes.diderot:11.97-98] 
            Lit: 1 @ [justTypes.diderot:11.99-100] 
          ]
      Input: camFOV= @ [justTypes.diderot:12.1-26] 
        Lit: 0.137e2 @ [justTypes.diderot:12.21-25] 
      Input: iresU= @ [justTypes.diderot:12.28-50] 
        Lit: 500 @ [justTypes.diderot:12.46-49] 
      Input: iresV= @ [justTypes.diderot:12.54-13.0] 
        Lit: 500 @ [justTypes.diderot:12.72-75] 
      Input: camNear= @ [justTypes.diderot:13.1-25] 
        UnaryOp: unary - @ [justTypes.diderot:13.22-24] 
          Lit: 2 @ [justTypes.diderot:13.23-24] 
      Input: camFar= @ [justTypes.diderot:13.26-48] 
        Lit: 5 @ [justTypes.diderot:13.46-47] 
      Input: refStep= @ [justTypes.diderot:14.1-26] 
        Lit: 0.1e1 @ [justTypes.diderot:14.22-25] 
      Input: rayStep= @ [justTypes.diderot:14.27-15.0] 
        Lit: 0.1e-1 @ [justTypes.diderot:14.47-51] 
      Input: lightVsp= @ [justTypes.diderot:15.1-39] 
        Cons @ [justTypes.diderot:15.23-38] 
          [
            Lit: 0.e0 @ [justTypes.diderot:15.24-27] 
            Lit: 0.e0 @ [justTypes.diderot:15.29-32] 
            Lit: 0.1e1 @ [justTypes.diderot:15.34-37] 
          ]
      Input: phongKa= @ [justTypes.diderot:16.1-26] 
        Lit: 0.1e0 @ [justTypes.diderot:16.22-25] 
      Input: phongKd= @ [justTypes.diderot:16.27-17.0] 
        Lit: 0.9e0 @ [justTypes.diderot:16.48-51] 
      Input: debug= @ [justTypes.diderot:18.1-19.0] 
        Lit: false @ [justTypes.diderot:18.20-25] 
      Input: su= @ [justTypes.diderot:19.1-20.0] 
        Lit: 250 @ [justTypes.diderot:19.16-19] 
      Input: sv= @ [justTypes.diderot:20.1-21.0] 
        Lit: 250 @ [justTypes.diderot:20.16-19] 
      Var @ [justTypes.diderot:23.1-29] 
        Decl: F= @ [justTypes.diderot:23.1-29] 
          BinOp: - @ [justTypes.diderot:23.18-28] 
            Var: V @ [justTypes.diderot:23.18-19] 
            Var: isoval @ [justTypes.diderot:23.22-28] 
      Func: mask @ [justTypes.diderot:24.1-25.0] 
        Tensor @ [justTypes.diderot:24.10-15] 
          [ ]
        [
          Param: x @ [justTypes.diderot:24.20-26] 
            Tensor @ [justTypes.diderot:24.20-25] 
              [
                Lit: 3 @ [justTypes.diderot:24.20-25] 
              ]
        ]
        Expr @ [justTypes.diderot:24.1-25.0] 
          Lit: 0.1e1 @ [justTypes.diderot:24.30-33] 
      Var @ [justTypes.diderot:25.1-26.0] 
        Decl: I= @ [justTypes.diderot:25.1-26.0] 
          Image @ [justTypes.diderot:25.17-40] 
            Lit: "cmap.nrrd" @ [justTypes.diderot:25.28-39] 
      Var @ [justTypes.diderot:26.1-40] 
        Decl: cmap= @ [justTypes.diderot:26.1-40] 
          BinOp: ⊛ @ [justTypes.diderot:26.22-39] 
            Var: tent @ [justTypes.diderot:26.22-26] 
            Apply @ [justTypes.diderot:26.31-39] 
              Var: clamp @ [justTypes.diderot:26.31-36] 
              [
                Var: I @ [justTypes.diderot:26.37-38] 
              ]
      Func: color @ [justTypes.diderot:27.1-28.0] 
        Tensor @ [justTypes.diderot:27.10-15] 
          [
            Lit: 3 @ [justTypes.diderot:27.10-15] 
          ]
        [
          Param: x @ [justTypes.diderot:27.21-27] 
            Tensor @ [justTypes.diderot:27.21-26] 
              [
                Lit: 3 @ [justTypes.diderot:27.21-26] 
              ]
        ]
        Expr @ [justTypes.diderot:27.1-28.0] 
          Apply @ [justTypes.diderot:27.31-41] 
            Var: cmap @ [justTypes.diderot:27.31-35] 
            [
              Apply @ [justTypes.diderot:27.36-40] 
                Var: V @ [justTypes.diderot:27.36-37] 
                [
                  Var: x @ [justTypes.diderot:27.38-39] 
                ]
            ]
      Func: alpha @ [justTypes.diderot:28.1-30.0] 
        Tensor @ [justTypes.diderot:28.10-15] 
          [ ]
        [
          Param: v @ [justTypes.diderot:28.21-27] 
            Tensor @ [justTypes.diderot:28.21-26] 
              [ ]
          Param: g @ [justTypes.diderot:28.29-35] 
            Tensor @ [justTypes.diderot:28.29-34] 
              [ ]
        ]
        Expr @ [justTypes.diderot:28.1-30.0] 
          Apply @ [justTypes.diderot:29.5-41] 
            Var: clamp @ [justTypes.diderot:29.5-10] 
            [
              Lit: 0 @ [justTypes.diderot:29.11-12] 
              Lit: 1 @ [justTypes.diderot:29.14-15] 
              BinOp: * @ [justTypes.diderot:29.17-40] 
                Lit: 0.13e1 @ [justTypes.diderot:29.17-20] 
                BinOp: - @ [justTypes.diderot:29.22-39] 
                  Lit: 1 @ [justTypes.diderot:29.22-23] 
                  BinOp: / @ [justTypes.diderot:29.26-39] 
                    UnaryOp: |()| @ [justTypes.diderot:29.26-29] 
                      Var: v @ [justTypes.diderot:29.27-28] 
                    BinOp: * @ [justTypes.diderot:29.31-38] 
                      Var: g @ [justTypes.diderot:29.31-32] 
                      Var: thick @ [justTypes.diderot:29.33-38] 
            ]
      Var @ [justTypes.diderot:31.1-32.0] 
        Decl: camDist= @ [justTypes.diderot:31.1-32.0] 
          UnaryOp: |()| @ [justTypes.diderot:31.16-32] 
            BinOp: - @ [justTypes.diderot:31.17-31] 
              Var: camAt @ [justTypes.diderot:31.17-22] 
              Var: camEye @ [justTypes.diderot:31.25-31] 
      Var @ [justTypes.diderot:32.1-39] 
        Decl: camN= @ [justTypes.diderot:32.1-39] 
          Apply @ [justTypes.diderot:32.13-38] 
            Var: normalize @ [justTypes.diderot:32.13-22] 
            [
              BinOp: - @ [justTypes.diderot:32.23-37] 
                Var: camAt @ [justTypes.diderot:32.23-28] 
                Var: camEye @ [justTypes.diderot:32.31-37] 
            ]
      Var @ [justTypes.diderot:33.1-38] 
        Decl: camU= @ [justTypes.diderot:33.1-38] 
          Apply @ [justTypes.diderot:33.13-37] 
            Var: normalize @ [justTypes.diderot:33.13-22] 
            [
              BinOp: × @ [justTypes.diderot:33.23-36] 
                Var: camN @ [justTypes.diderot:33.23-27] 
                Var: camUp @ [justTypes.diderot:33.31-36] 
            ]
      Var @ [justTypes.diderot:34.1-26] 
        Decl: camV= @ [justTypes.diderot:34.1-26] 
          BinOp: × @ [justTypes.diderot:34.13-25] 
            Var: camU @ [justTypes.diderot:34.13-17] 
            Var: camN @ [justTypes.diderot:34.21-25] 
      Var @ [justTypes.diderot:35.1-36.0] 
        Decl: camVmax= @ [justTypes.diderot:35.1-36.0] 
          BinOp: * @ [justTypes.diderot:35.16-42] 
            Apply @ [justTypes.diderot:35.16-34] 
              Var: tan @ [justTypes.diderot:35.16-19] 
              [
                BinOp: / @ [justTypes.diderot:35.20-33] 
                  BinOp: * @ [justTypes.diderot:35.20-29] 
                    Var: camFOV @ [justTypes.diderot:35.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [justTypes.diderot:35.27-29] 
                  Lit: 360 @ [justTypes.diderot:35.30-33] 
              ]
            Var: camDist @ [justTypes.diderot:35.35-42] 
      Var @ [justTypes.diderot:36.1-37.0] 
        Decl: camUmax= @ [justTypes.diderot:36.1-37.0] 
          BinOp: / @ [justTypes.diderot:36.16-35] 
            BinOp: * @ [justTypes.diderot:36.16-29] 
              Var: camVmax @ [justTypes.diderot:36.16-23] 
              Var: iresU @ [justTypes.diderot:36.24-29] 
            Var: iresV @ [justTypes.diderot:36.30-35] 
      Var @ [justTypes.diderot:37.1-38.0] 
        Decl: light= @ [justTypes.diderot:37.1-38.0] 
          BinOp: • @ [justTypes.diderot:37.14-63] 
            Apply @ [justTypes.diderot:37.14-41] 
              Var: transpose @ [justTypes.diderot:37.14-23] 
              [
                Cons @ [justTypes.diderot:37.24-40] 
                  [
                    Var: camU @ [justTypes.diderot:37.25-29] 
                    Var: camV @ [justTypes.diderot:37.30-34] 
                    Var: camN @ [justTypes.diderot:37.35-39] 
                  ]
              ]
            Apply @ [justTypes.diderot:37.44-63] 
              Var: normalize @ [justTypes.diderot:37.44-53] 
              [
                Var: lightVsp @ [justTypes.diderot:37.54-62] 
              ]
    ]
    Strand: raycast @ [justTypes.diderot:39.1-89.1] 
      [
        Param: ui @ [justTypes.diderot:39.17-23] 
          Int @ [justTypes.diderot:39.17-21] 
        Param: vi @ [justTypes.diderot:39.25-31] 
          Int @ [justTypes.diderot:39.25-29] 
      ]
      [
        VarDcl @ [justTypes.diderot:40.3-41.0] 
        VarDcl @ [justTypes.diderot:41.3-42.0] 
        VarDcl @ [justTypes.diderot:42.3-43.0] 
        VarDcl @ [justTypes.diderot:43.3-44.0] 
        VarDcl @ [justTypes.diderot:44.3-45.0] 
        VarDcl @ [justTypes.diderot:45.3-46.0] 
        VarDcl: output @ [justTypes.diderot:46.3-47.0] 
        VarDcl: output @ [justTypes.diderot:47.3-48.0] 
      ]
      [
        Method: Update @ [justTypes.diderot:49.3-81.3] 
          Block @ [justTypes.diderot:49.10-81.0] 
            [
              IfThen @ [justTypes.diderot:50.8-55.8] 
                Var: debug @ [justTypes.diderot:50.12-17] 
                IfThen @ [justTypes.diderot:51.2-54.8] 
                  OrElse @ [justTypes.diderot:51.6-26] 
                    BinOp: != @ [justTypes.diderot:51.6-15] 
                      Var: ui @ [justTypes.diderot:51.6-8] 
                      Var: su @ [justTypes.diderot:51.12-14] 
                    BinOp: != @ [justTypes.diderot:51.18-26] 
                      Var: vi @ [justTypes.diderot:51.18-20] 
                      Var: sv @ [justTypes.diderot:51.24-26] 
                  Stabilize @ [justTypes.diderot:52.4-53.0] 
              Decl @ [justTypes.diderot:49.10-81.0] 
                Decl: x= @ [justTypes.diderot:55.8-56.0] 
                  BinOp: + @ [justTypes.diderot:55.17-37] 
                    Var: camEye @ [justTypes.diderot:55.17-23] 
                    BinOp: * @ [justTypes.diderot:55.26-37] 
                      Var: rayN @ [justTypes.diderot:55.26-30] 
                      Var: rayVec @ [justTypes.diderot:55.31-37] 
              IfThen @ [justTypes.diderot:57.8-74.5] 
                AndAlso @ [justTypes.diderot:57.12-98] 
                  BinOp: <= @ [justTypes.diderot:57.12-24] 
                    Lit: 0.e0 @ [justTypes.diderot:57.12-15] 
                    Subscript @ [justTypes.diderot:57.19-23] 
                      Var: x @ [justTypes.diderot:57.19-20] 
                      [
                        Lit: 0 @ [justTypes.diderot:57.21-22] 
                      ]
                  AndAlso @ [justTypes.diderot:57.24-98] 
                    BinOp: <= @ [justTypes.diderot:57.27-39] 
                      Subscript @ [justTypes.diderot:57.27-31] 
                        Var: x @ [justTypes.diderot:57.27-28] 
                        [
                          Lit: 0 @ [justTypes.diderot:57.29-30] 
                        ]
                      Lit: 0.1e1 @ [justTypes.diderot:57.35-38] 
                    AndAlso @ [justTypes.diderot:57.39-98] 
                      BinOp: <= @ [justTypes.diderot:57.42-54] 
                        Lit: 0.e0 @ [justTypes.diderot:57.42-45] 
                        Subscript @ [justTypes.diderot:57.49-53] 
                          Var: x @ [justTypes.diderot:57.49-50] 
                          [
                            Lit: 1 @ [justTypes.diderot:57.51-52] 
                          ]
                      AndAlso @ [justTypes.diderot:57.54-98] 
                        BinOp: <= @ [justTypes.diderot:57.57-69] 
                          Subscript @ [justTypes.diderot:57.57-61] 
                            Var: x @ [justTypes.diderot:57.57-58] 
                            [
                              Lit: 1 @ [justTypes.diderot:57.59-60] 
                            ]
                          Lit: 0.1e1 @ [justTypes.diderot:57.65-68] 
                        AndAlso @ [justTypes.diderot:57.69-98] 
                          BinOp: <= @ [justTypes.diderot:57.72-84] 
                            Lit: 0.e0 @ [justTypes.diderot:57.72-75] 
                            Subscript @ [justTypes.diderot:57.79-83] 
                              Var: x @ [justTypes.diderot:57.79-80] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.81-82] 
                              ]
                          BinOp: <= @ [justTypes.diderot:57.87-98] 
                            Subscript @ [justTypes.diderot:57.87-91] 
                              Var: x @ [justTypes.diderot:57.87-88] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.89-90] 
                              ]
                            Lit: 0.1e1 @ [justTypes.diderot:57.95-98] 
                Block @ [justTypes.diderot:58.3-73.0] 
                  [
                    Decl @ [justTypes.diderot:58.3-73.0] 
                      Decl: p= @ [justTypes.diderot:59.5-60.0] 
                        Apply @ [justTypes.diderot:59.23-35] 
                          Select @ [justTypes.diderot:59.23-35] 
                            Var: a @ [justTypes.diderot:59.23-24] 
                            findPos
                          [
                            Var: x @ [justTypes.diderot:59.33-34] 
                          ]
                    IfThen @ [justTypes.diderot:60.5-72.3] 
                      Apply @ [justTypes.diderot:60.9-20] 
                        Select @ [justTypes.diderot:60.9-20] 
                          Var: p @ [justTypes.diderot:60.9-10] 
                          isValid
                        [ ]
                      Block @ [justTypes.diderot:60.22-72.0] 
                        [
                          Decl @ [justTypes.diderot:60.22-72.0] 
                            Decl: val= @ [justTypes.diderot:61.7-62.0] 
                              Apply @ [justTypes.diderot:61.18-22] 
                                Var: F @ [justTypes.diderot:61.18-19] 
                                [
                                  Var: x @ [justTypes.diderot:61.20-21] 
                                ]
                          Decl @ [justTypes.diderot:60.22-72.0] 
                            Decl: grad= @ [justTypes.diderot:62.7-63.0] 
                              UnaryOp: unary - @ [justTypes.diderot:62.19-27] 
                                Apply @ [justTypes.diderot:62.20-27] 
                                  UnaryOp: ∇ @ [justTypes.diderot:62.20-24] 
                                    Var: F @ [justTypes.diderot:62.23-24] 
                                  [
                                    Var: x @ [justTypes.diderot:62.25-26] 
                                  ]
                          Decl @ [justTypes.diderot:60.22-72.0] 
                            Decl: a= @ [justTypes.diderot:63.7-64.0] 
                              BinOp: * @ [justTypes.diderot:63.16-42] 
                                Apply @ [justTypes.diderot:63.16-34] 
                                  Var: alpha @ [justTypes.diderot:63.16-21] 
                                  [
                                    Var: val @ [justTypes.diderot:63.22-25] 
                                    UnaryOp: |()| @ [justTypes.diderot:63.27-33] 
                                      Var: grad @ [justTypes.diderot:63.28-32] 
                                  ]
                                Apply @ [justTypes.diderot:63.35-42] 
                                  Var: mask @ [justTypes.diderot:63.35-39] 
                                  [
                                    Var: x @ [justTypes.diderot:63.40-41] 
                                  ]
                          IfThen @ [justTypes.diderot:64.7-71.5] 
                            BinOp: > @ [justTypes.diderot:64.11-16] 
                              Var: a @ [justTypes.diderot:64.11-12] 
                              Lit: 0 @ [justTypes.diderot:64.15-16] 
                            Block @ [justTypes.diderot:64.18-71.0] 
                              [
                                Assign: a= @ [justTypes.diderot:65.9-66.0] 
                                  BinOp: - @ [justTypes.diderot:65.13-51] 
                                    Lit: 1 @ [justTypes.diderot:65.13-14] 
                                    Apply @ [justTypes.diderot:65.17-51] 
                                      Var: pow @ [justTypes.diderot:65.17-20] 
                                      [
                                        BinOp: - @ [justTypes.diderot:65.21-24] 
                                          Lit: 1 @ [justTypes.diderot:65.21-22] 
                                          Var: a @ [justTypes.diderot:65.23-24] 
                                        BinOp: / @ [justTypes.diderot:65.26-50] 
                                          BinOp: * @ [justTypes.diderot:65.26-42] 
                                            Var: rayStep @ [justTypes.diderot:65.26-33] 
                                            UnaryOp: |()| @ [justTypes.diderot:65.34-42] 
                                              Var: rayVec @ [justTypes.diderot:65.35-41] 
                                          Var: refStep @ [justTypes.diderot:65.43-50] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: depth= @ [justTypes.diderot:66.9-67.0] 
                                    Apply @ [justTypes.diderot:66.22-59] 
                                      Var: lerp @ [justTypes.diderot:66.22-26] 
                                      [
                                        Lit: 0.11e1 @ [justTypes.diderot:66.27-30] 
                                        Lit: 0.7e0 @ [justTypes.diderot:66.32-35] 
                                        Var: camNear @ [justTypes.diderot:66.37-44] 
                                        Var: rayN @ [justTypes.diderot:66.46-50] 
                                        Var: camFar @ [justTypes.diderot:66.52-58] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: shade= @ [justTypes.diderot:67.9-68.0] 
                                    Apply @ [justTypes.diderot:67.22-53] 
                                      Var: max @ [justTypes.diderot:67.22-25] 
                                      [
                                        Lit: 0 @ [justTypes.diderot:67.26-27] 
                                        BinOp: • @ [justTypes.diderot:67.29-52] 
                                          Apply @ [justTypes.diderot:67.29-44] 
                                            Var: normalize @ [justTypes.diderot:67.29-38] 
                                            [
                                              Var: grad @ [justTypes.diderot:67.39-43] 
                                            ]
                                          Var: light @ [justTypes.diderot:67.47-52] 
                                      ]
                                Assign: rgb+= @ [justTypes.diderot:68.9-69.0] 
                                  BinOp: * @ [justTypes.diderot:68.16-65] 
                                    BinOp: * @ [justTypes.diderot:68.16-56] 
                                      BinOp: * @ [justTypes.diderot:68.16-30] 
                                        BinOp: * @ [justTypes.diderot:68.16-24] 
                                          Var: transp @ [justTypes.diderot:68.16-22] 
                                          Var: a @ [justTypes.diderot:68.23-24] 
                                        Var: depth @ [justTypes.diderot:68.25-30] 
                                      BinOp: + @ [justTypes.diderot:68.32-55] 
                                        Var: phongKa @ [justTypes.diderot:68.32-39] 
                                        BinOp: * @ [justTypes.diderot:68.42-55] 
                                          Var: phongKd @ [justTypes.diderot:68.42-49] 
                                          Var: shade @ [justTypes.diderot:68.50-55] 
                                    Apply @ [justTypes.diderot:68.57-65] 
                                      Var: color @ [justTypes.diderot:68.57-62] 
                                      [
                                        Var: x @ [justTypes.diderot:68.63-64] 
                                      ]
                                Assign: transp*= @ [justTypes.diderot:69.9-70.0] 
                                  BinOp: - @ [justTypes.diderot:69.19-24] 
                                    Lit: 1 @ [justTypes.diderot:69.19-20] 
                                    Var: a @ [justTypes.diderot:69.23-24] 
                              ]
                        ]
                  ]
              IfThen @ [justTypes.diderot:74.5-78.5] 
                BinOp: < @ [justTypes.diderot:74.9-22] 
                  Var: transp @ [justTypes.diderot:74.9-15] 
                  Lit: 0.1e-1 @ [justTypes.diderot:74.18-22] 
                Block @ [justTypes.diderot:74.24-78.0] 
                  [
                    Assign: transp= @ [justTypes.diderot:75.7-76.0] 
                      Lit: 0 @ [justTypes.diderot:75.16-17] 
                    Stabilize @ [justTypes.diderot:76.7-77.0] 
                  ]
              IfThen @ [justTypes.diderot:78.5-79.5] 
                BinOp: > @ [justTypes.diderot:78.9-22] 
                  Var: rayN @ [justTypes.diderot:78.9-13] 
                  Var: camFar @ [justTypes.diderot:78.16-22] 
                Stabilize @ [justTypes.diderot:78.24-79.0] 
              Assign: rayN= @ [justTypes.diderot:79.5-80.0] 
                BinOp: + @ [justTypes.diderot:79.12-26] 
                  Var: rayN @ [justTypes.diderot:79.12-16] 
                  Var: rayStep @ [justTypes.diderot:79.19-26] 
            ]
        Method: Stabilize @ [justTypes.diderot:81.3-88.1] 
          Block @ [justTypes.diderot:81.13-88.0] 
            [
              Decl @ [justTypes.diderot:81.13-88.0] 
                Decl: a= @ [justTypes.diderot:82.5-25] 
                  BinOp: - @ [justTypes.diderot:82.14-24] 
                    Lit: 1 @ [justTypes.diderot:82.14-15] 
                    Var: transp @ [justTypes.diderot:82.18-24] 
              IfThen @ [justTypes.diderot:83.5-84.5] 
                BinOp: > @ [justTypes.diderot:83.9-14] 
                  Var: a @ [justTypes.diderot:83.9-10] 
                  Lit: 0 @ [justTypes.diderot:83.13-14] 
                Assign: rgba= @ [justTypes.diderot:83.16-84.0] 
                  Cons @ [justTypes.diderot:83.23-56] 
                    [
                      BinOp: / @ [justTypes.diderot:83.24-32] 
                        Subscript @ [justTypes.diderot:83.24-30] 
                          Var: rgb @ [justTypes.diderot:83.24-27] 
                          [
                            Lit: 0 @ [justTypes.diderot:83.28-29] 
                          ]
                        Var: a @ [justTypes.diderot:83.31-32] 
                      BinOp: / @ [justTypes.diderot:83.34-42] 
                        Subscript @ [justTypes.diderot:83.34-40] 
                          Var: rgb @ [justTypes.diderot:83.34-37] 
                          [
                            Lit: 1 @ [justTypes.diderot:83.38-39] 
                          ]
                        Var: a @ [justTypes.diderot:83.41-42] 
                      BinOp: / @ [justTypes.diderot:83.44-52] 
                        Subscript @ [justTypes.diderot:83.44-50] 
                          Var: rgb @ [justTypes.diderot:83.44-47] 
                          [
                            Lit: 2 @ [justTypes.diderot:83.48-49] 
                          ]
                        Var: a @ [justTypes.diderot:83.51-52] 
                      Var: a @ [justTypes.diderot:83.54-55] 
                    ]
              IfThen @ [justTypes.diderot:84.5-87.3] 
                AndAlso @ [justTypes.diderot:84.9-38] 
                  BinOp: == @ [justTypes.diderot:84.9-18] 
                    Var: ui @ [justTypes.diderot:84.9-11] 
                    Var: su @ [justTypes.diderot:84.15-17] 
                  AndAlso @ [justTypes.diderot:84.18-38] 
                    BinOp: == @ [justTypes.diderot:84.21-30] 
                      Var: vi @ [justTypes.diderot:84.21-23] 
                      Var: sv @ [justTypes.diderot:84.27-29] 
                    Var: debug @ [justTypes.diderot:84.33-38] 
                Print @ [justTypes.diderot:85.7-86.0] 
                  [
                    Var: a @ [justTypes.diderot:85.13-14] 
                    Var: rgba @ [justTypes.diderot:85.16-20] 
                  ]
            ]
      ]
    Grid @ [justTypes.diderot:89.1-90.0] 
      Comprehension @ [justTypes.diderot:89.14-68] 
        Apply @ [justTypes.diderot:89.15-30] 
          Var: raycast @ [justTypes.diderot:89.15-22] 
          [
            Var: ui @ [justTypes.diderot:89.23-25] 
            Var: vi @ [justTypes.diderot:89.27-29] 
          ]
        [
          Iterator: vi @ [justTypes.diderot:89.33-49] 
            Range @ [justTypes.diderot:89.39-49] 
              Lit: 0 @ [justTypes.diderot:89.39-40] 
              BinOp: - @ [justTypes.diderot:89.42-49] 
                Var: iresV @ [justTypes.diderot:89.42-47] 
                Lit: 1 @ [justTypes.diderot:89.48-49] 
          Iterator: ui @ [justTypes.diderot:89.51-67] 
            Range @ [justTypes.diderot:89.57-67] 
              Lit: 0 @ [justTypes.diderot:89.57-58] 
              BinOp: - @ [justTypes.diderot:89.60-67] 
                Var: iresU @ [justTypes.diderot:89.60-65] 
                Lit: 1 @ [justTypes.diderot:89.66-67] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input FemType: Space with type var:msh b = loadFem(Space);
input FemType: FemFunc with type var:fns c = loadFem(FemFunc);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [-0.3e1, -0.3e1, 0.3e1];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 500;
input int iresV = 500;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int su = 250;
input int sv = 250;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  foreach (int itter in $range (0, * (16, numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (0.1e-7, |()|<$[3]> (delta)) {
      if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 16) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] msh_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] msh_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 msh_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 msh_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (0.1e-7, |()|<$[3]> (delta)) {
      if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec3 (pos, msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3 (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]])):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
    }
  }
function int[2] $nextCell2 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  nearbyCells = extractFemItem(mesh, cell : int, int[], CellConnectivity(Mesh));
  numFacetNodes = length<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))});
  if == (3, numFacetNodes)
    foreach (int cellInt in nearbyCells) {
      if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 0};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 1};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 2};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 3};
        }
    return {-1, -1};
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))))
    if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
      face = 0;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))))
    if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      face = 1;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))))
    if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))))
    if $and (> (0.1e1, •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 3;
      }
    if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)))) {
    time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
    face = 0;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
    face = 1;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
    face = 2;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
    face = 3;
    }
  if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function FemType: Mesh with type var:msh domain (FemType: Space with type var:msh arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:msh space (FemType: FemFunc with type var:fns arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:FUNC funcCell (FemType: FemFunc with type var:fns arg0, FemType: MeshCell with type var:msh arg1)
{
  return loadFem(FuncCell);
  }
field(3)[] V = ∘<#; %3; $[]; %3; $[3]> (femField(c,extractFem(Mesh,extractFem(Space,c ) ),field(3)[], refField, findPos), femField(extractFem(Mesh,extractFem(Space,c ) ),extractFem(Mesh,extractFem(Space,c ) ),field(3)[3], InvTransform, findPos));
field#4(3)[] F = (field#4(3)[])(-<#; %3; $[]> (V, isoval));
function real mask (vec3 x)
{
  return 0.1e1;
  }
image(1)[3] I = loadImage<%1; $[3]> ("cmap.nrrd");
field#0(1)[3] cmap = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (I));
function vec3 color (vec3 x)
{
  return @<#0; %1; $[3]> (cmap, @<#; %3; $[]> (V, x));
  }
function real alpha (real v, real g)
{
  return clamp<$[]> ((real)0, (real)1, * (0.13e1, -<$[]> ((real)1, / (|()|<$[]> (v), * (g, thick)))));
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
strand raycast (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (camVmax, unary -<$[]> (camVmax), unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNear;
  vec3 rayVec = +<$[3]> (camN, /<$[3]> (+<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV)), camDist));
  real transp = 0.1e1;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real gray = 0.e0;
  update {
    if debug
      if (!= (ui, su) || != (vi, sv))
        stabilize;
        vec3 x = +<$[3]> (camEye, *<$[3]> (rayN, rayVec));
    if (<= (0.e0, x[0]) && (<= (x[0], 0.1e1) && (<= (0.e0, x[1]) && (<= (x[1], 0.1e1) && (<= (0.e0, x[2]) && <= (x[2], 0.1e1)))))) {
      FemType: MeshPos with type var:msh p = findPos (a, x);
      if extractFemItem(p, bool, Valid(MeshPos)) {
        real val = @<#4; %3; $[]> (F, x);
        vec3 grad = unary -<$[3]> (@<#3; %3; $[3]> (∇<#4; %3> (F), x));
        real a = * (alpha (val, |()|<$[3]> (grad)), mask (x));
        if > (a, (real)0) {
          a = -<$[]> ((real)1, pow (-<$[]> ((real)1, a), / (* (rayStep, |()|<$[3]> (rayVec)), refStep)));
          real depth = lerp<$[]> (0.11e1, 0.7e0, camNear, rayN, camFar);
          real shade = max ((real)0, •<$[3]; $[3]; $[]> (normalize<$[3]> (grad), light));
          rgb = +<$[3]> (rgb, *<$[3]> (* (* (* (transp, a), depth), +<$[]> (phongKa, * (phongKd, shade))), color (x)));
          transp = * (transp, -<$[]> ((real)1, a));
          }
        }
      }
    if < (transp, 0.1e-1) {
      transp = 0.e0;
      stabilize;
      }
    if > (rayN, camFar)
      stabilize;
      rayN = +<$[]> (rayN, rayStep);
    }
  stabilize {
    real a = -<$[]> ((real)1, transp);
    if > (a, (real)0)
      rgba = [/ (rgb[0], a), / (rgb[1], a), / (rgb[2], a), a];
      if (== (ui, su) && (== (vi, sv) && debug))
      print (a, rgba);
      }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new raycast (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: MeshCell[] 0cell_a0424;
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function bool#0 !=0451 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0454 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0455 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t0456 = prim !=0086 (_t0454, _t0455);
  return _t0456;
}
function bool#0 ==0457 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0458 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0459 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t045A = prim ==0082 (_t0458, _t0459);
  return _t045A;
}
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function Femdata: RefCell#0 refcell04A5 (Femdata: Mesh arg004A6)
{
  Femdata: RefCell _t04A7 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004A6);
  return _t04A7;
}
function Femdata: MeshCell[]#0 cells04A8 (Femdata: Mesh arg004A9)
{
  Femdata: MeshCell[] _t04AA = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004A9);
  return _t04AA;
}
function Femdata: MeshCell[]#0 cells04AB (Femdata: Mesh arg004A9)
{
  int _t04AC = 0;
  int _t04AD = extractFemItem(NumCell(Mesh), int, arg004A9);
  int[] _t04AE = prim $range01C3 (_t04AC, _t04AD);
  Femdata: MeshCell[] accum04B1 = {};
  foreach i04AF in _t04AE {
    Femdata: MeshCell _t04B0 = loadFem(MeshCell, arg004A9, i04AF);
    accum04B1 = prim @0010<Femdata: MeshCell> (accum04B1, _t04B0);
  }
  return accum04B1;
}
function int#0 numCell04B2 (Femdata: Mesh arg004A6)
{
  int _t04B3 = extractFemItem(NumCell(Mesh), int, arg004A6);
  return _t04B3;
}
function tensor[3,3,3,3]#0 msh_transform_304B4 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04B8 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04B9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B8);
  field(3)[3,3,3] _t04BA = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04B9);
  field(3)[3,3,3,3] _t04BB = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04BA);
  tensor[3,3,3,3] _t04BC = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04BB, pos04B5);
  return _t04BC;
}
function tensor[3,3,3]#0 msh_transform_204BD (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04BE = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04BF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04BE);
  field(3)[3,3,3] _t04C0 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04BF);
  tensor[3,3,3] _t04C1 = prim @00A5<#∞; %3; $[3,3,3]> (_t04C0, pos04B5);
  return _t04C1;
}
function tensor[3,3]#0 msh_transform_104C2 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C3 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04C4 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C3);
  tensor[3,3] _t04C5 = prim @00A5<#∞; %3; $[3,3]> (_t04C4, pos04B5);
  return _t04C5;
}
function vec3#2 msh_transform_004C6 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C7 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  vec3 _t04C8 = prim @00A5<#∞; %3; $[3]> (_t04C7, pos04B5);
  return _t04C8;
}
function Femdata: MeshPos#0 _msh_newtonInverse04C9 (vec3 pos04CA, int cellInt04CB, Femdata: Mesh mesh04CC)
{
  real _t04CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04D0 = [_t04CD, _t04CE, _t04CF];
  field(3)[3] _t04D1 = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
  field(3)[3,3] _t04D2 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D1);
  field(3)[3,3] _t04D3 = prim inv015E<#∞; %3> (_t04D2);
  real _t04D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04D7 = [_t04D4, _t04D5, _t04D6];
  A04D8 = prim @00A5<#∞; %3; $[3,3]> (_t04D3, _t04D7);
  int _t04D9 = 0;
  int _t04DA = 16;
  int[] _t04DB = prim $range01C3 (_t04D9, _t04DA);
  foreach itter0507 in _t04DB {
    field(3)[3] _t04DC = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
    field(3)[3] _t04DD = prim -002E<#∞; %3; $[3]> (_t04DC, pos04CA);
    field(3)[3] _t04DE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04D8, _t04DD);
    delta04DF = prim @00A5<#∞; %3; $[3]> (_t04DE, xn04D0);
    xn04D0 = prim -0026<$[3]> (xn04D0, delta04DF);
    real _t04E0 = 0.1e-7;
    real _t04E1 = prim |()|00B5<$[3]> (delta04DF);
    bool _t04E2 = prim >=007E (_t04E0, _t04E1);
    if _t04E2 {
      real _t04E3 = 0.1e1;
      real _t04E4 = 0.1e1;
      real _t04E5 = 0.1e1;
      real _t04E6 = 0.1e1;
      vec3 _t04E7 = [_t04E4, _t04E5, _t04E6];
      real _t04E8 = prim •00CE<$[3]; $[3]; $[]> (_t04E7, xn04D0);
      bool _t04E9 = prim >0080 (_t04E3, _t04E8);
      real _t04EA = 0.1e-8;
      real _t04EB = 0.1e-8;
      real _t04EC = 0.1e-8;
      vec3 _t04ED = [_t04EA, _t04EB, _t04EC];
      vec3 _t04EE = prim +0017<$[3]> (_t04ED, xn04D0);
      real _t04EF = _t04EE[0];
      real _t04F0 = -0.e0;
      bool _t04F1 = prim >0080 (_t04EF, _t04F0);
      real _t04F2 = 0.1e-8;
      real _t04F3 = 0.1e-8;
      real _t04F4 = 0.1e-8;
      vec3 _t04F5 = [_t04F2, _t04F3, _t04F4];
      vec3 _t04F6 = prim +0017<$[3]> (_t04F5, xn04D0);
      real _t04F7 = _t04F6[1];
      real _t04F8 = -0.e0;
      bool _t04F9 = prim >0080 (_t04F7, _t04F8);
      real _t04FA = 0.1e-8;
      real _t04FB = 0.1e-8;
      real _t04FC = 0.1e-8;
      vec3 _t04FD = [_t04FA, _t04FB, _t04FC];
      vec3 _t04FE = prim +0017<$[3]> (_t04FD, xn04D0);
      real _t04FF = _t04FE[2];
      real _t0500 = -0.e0;
      bool _t0501 = prim >0080 (_t04FF, _t0500);
      bool _t0502 = prim $and01C4 (_t04F9, _t0501);
      bool _t0503 = prim $and01C4 (_t04F1, _t0502);
      bool _t0504 = prim $and01C4 (_t04E9, _t0503);
      if _t0504 {
        Femdata: MeshPos _t0505 = extractFemItemN((mesh04CC, cellInt04CB, xn04D0, pos04CA),AllBuild(MeshPos),);
        return _t0505;
      } else {
        Femdata: MeshPos _t0506 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
        return _t0506;
      }
    }
  }
  Femdata: MeshPos _t0508 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
  return _t0508;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0509 (Femdata: MeshPos pos050A)
{
  bool _t050B = extractFemItem(WorldTest(MeshPos), bool, pos050A);
  if _t050B {
    vec3 _t050C = extractFemItem(RefPos(MeshPos), vec3, pos050A);
    int _t050D = extractFemItem(CellIndex(MeshPos), int, pos050A);
    Femdata: Mesh _t050E = extractFem(pos050A, Mesh);
    vec3 _t050F = func msh_transform_004C6 (_t050C, _t050D, _t050E);
    Femdata: MeshPos _t0510 = extractFemItemN((pos050A, _t050F),NewWorld(MeshPos),);
    return _t0510;
  } else {
    return pos050A;
  }
}
function vec3#0 worldPos0511 (Femdata: MeshPos pos050A)
{
  vec3 _t0512 = extractFemItem(RefPos(MeshPos), vec3, pos050A);
  int _t0513 = extractFemItem(CellIndex(MeshPos), int, pos050A);
  Femdata: Mesh _t0514 = extractFem(pos050A, Mesh);
  vec3 _t0515 = func msh_transform_004C6 (_t0512, _t0513, _t0514);
  return _t0515;
}
function Femdata: MeshPos#0 $exitPos0516 (Femdata: Mesh mesh0517, int cellId0518, vec3 refPos0519, vec3 dPos051A, real[2] time051B)
{
  int _t051C = -1;
  real _t051D = time051B[1];
  int _t051E = prim $r2i01B7 (_t051D);
  int[2] _t0520 = func nextCell4051F (_t051E, cellId0518, mesh0517);
  int _t0521 = 0;
  int _t0522 = prim $sub01C0<int; %2> (_t0520, _t0521);
  bool _t0523 = prim !=0086 (_t051C, _t0522);
  if _t0523 {
    real _t0524 = time051B[1];
    int _t0525 = prim $r2i01B7 (_t0524);
    int[2] _t0526 = func nextCell4051F (_t0525, cellId0518, mesh0517);
    int _t0527 = 0;
    int _t0528 = prim $sub01C0<int; %2> (_t0526, _t0527);
    real _t0529 = 0.1e1;
    real _t052A = 0.e0;
    real _t052B = 0.e0;
    real _t052C = 0.e0;
    vec4 _t052D = [_t0529, _t052A, _t052B, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.222044604925e-15;
    real _t0539 = 0.e0;
    real _t053A = 0.44408920985e-15;
    real _t053B = 0.1e1;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    tensor[4,4] _t053D = [_t052D, _t0532, _t0537, _t053C];
    real _t053E = 0.173205080757e1;
    real _t053F = 0.173205080757e1;
    real _t0540 = 0.173205080757e1;
    real _t0541 = -0.173205080757e1;
    vec4 _t0542 = [_t053E, _t053F, _t0540, _t0541];
    real _t0543 = 0.1e1;
    real _t0544 = 0.2e1;
    real _t0545 = 0.1e1;
    real _t0546 = -0.1e1;
    vec4 _t0547 = [_t0543, _t0544, _t0545, _t0546];
    real _t0548 = -0.1e1;
    real _t0549 = -0.1e1;
    real _t054A = -0.192296268638e-15;
    real _t054B = 0.1e1;
    vec4 _t054C = [_t0548, _t0549, _t054A, _t054B];
    real _t054D = 0.222044604925e-15;
    real _t054E = 0.e0;
    real _t054F = 0.44408920985e-15;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    tensor[4,4] _t0552 = [_t0542, _t0547, _t054C, _t0551];
    real _t0553 = 0.1e1;
    real _t0554 = 0.2e1;
    real _t0555 = 0.1e1;
    real _t0556 = -0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    real _t0558 = 0.173205080757e1;
    real _t0559 = 0.173205080757e1;
    real _t055A = 0.173205080757e1;
    real _t055B = -0.173205080757e1;
    vec4 _t055C = [_t0558, _t0559, _t055A, _t055B];
    real _t055D = -0.1e1;
    real _t055E = -0.1e1;
    real _t055F = -0.192296268638e-15;
    real _t0560 = 0.1e1;
    vec4 _t0561 = [_t055D, _t055E, _t055F, _t0560];
    real _t0562 = 0.222044604925e-15;
    real _t0563 = 0.e0;
    real _t0564 = 0.44408920985e-15;
    real _t0565 = 0.1e1;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    tensor[4,4] _t0567 = [_t0557, _t055C, _t0561, _t0566];
    real _t0568 = 0.1e1;
    real _t0569 = 0.2e1;
    real _t056A = 0.1e1;
    real _t056B = -0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    real _t056D = -0.1e1;
    real _t056E = -0.1e1;
    real _t056F = -0.192296268638e-15;
    real _t0570 = 0.1e1;
    vec4 _t0571 = [_t056D, _t056E, _t056F, _t0570];
    real _t0572 = 0.173205080757e1;
    real _t0573 = 0.173205080757e1;
    real _t0574 = 0.173205080757e1;
    real _t0575 = -0.173205080757e1;
    vec4 _t0576 = [_t0572, _t0573, _t0574, _t0575];
    real _t0577 = 0.222044604925e-15;
    real _t0578 = 0.e0;
    real _t0579 = 0.44408920985e-15;
    real _t057A = 0.1e1;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    tensor[4,4] _t057C = [_t056C, _t0571, _t0576, _t057B];
    tensor[4,4][4] _t057D = {_t053D, _t0552, _t0567, _t057C};
    real _t057E = 0.57735026919e0;
    real _t057F = -0.1e1;
    real _t0580 = -0.1e1;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = -0.57735026919e0;
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.57735026919e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    real _t0590 = 0.1e1;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    tensor[4,4] _t0592 = [_t0582, _t0587, _t058C, _t0591];
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    real _t0595 = 0.e0;
    real _t0596 = 0.e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.e0;
    real _t0599 = 0.1e1;
    real _t059A = 0.e0;
    real _t059B = 0.e0;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    real _t059D = 0.e0;
    real _t059E = 0.e0;
    real _t059F = 0.1e1;
    real _t05A0 = 0.e0;
    vec4 _t05A1 = [_t059D, _t059E, _t059F, _t05A0];
    real _t05A2 = 0.e0;
    real _t05A3 = 0.e0;
    real _t05A4 = 0.e0;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    tensor[4,4] _t05A7 = [_t0597, _t059C, _t05A1, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.1e1;
    real _t05AA = 0.e0;
    real _t05AB = 0.e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.1e1;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.e0;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    real _t05B5 = 0.e0;
    vec4 _t05B6 = [_t05B2, _t05B3, _t05B4, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = 0.e0;
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    tensor[4,4] _t05BC = [_t05AC, _t05B1, _t05B6, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.1e1;
    real _t05C5 = 0.e0;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    vec4 _t05CB = [_t05C7, _t05C8, _t05C9, _t05CA];
    real _t05CC = 0.e0;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    tensor[4,4] _t05D1 = [_t05C1, _t05C6, _t05CB, _t05D0];
    tensor[4,4][4] _t05D2 = {_t0592, _t05A7, _t05BC, _t05D1};
    real _t05D3 = -0.1e1;
    real _t05D4 = 0.57735026919e0;
    real _t05D5 = -0.1e1;
    real _t05D6 = 0.1e1;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = -0.57735026919e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.57735026919e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.1e1;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    tensor[4,4] _t05E7 = [_t05D7, _t05DC, _t05E1, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.1e1;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.1e1;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.1e1;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    tensor[4,4][4] _t0627 = {_t05E7, _t05FC, _t0611, _t0626};
    real _t0628 = -0.1e1;
    real _t0629 = -0.1e1;
    real _t062A = 0.57735026919e0;
    real _t062B = 0.1e1;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    real _t0634 = 0.57735026919e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    real _t0652 = 0.1e1;
    real _t0653 = 0.e0;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    tensor[4,4] _t0666 = [_t0656, _t065B, _t0660, _t0665];
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = 0.e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    tensor[4,4][4] _t067C = {_t063C, _t0651, _t0666, _t067B};
    tensor[4,4][4][4] _t067D = {_t057D, _t05D2, _t0627, _t067C};
    real _t067E = time051B[1];
    int _t067F = prim $r2i01B7 (_t067E);
    tensor[4,4][4] _t0680 = prim $sub01C0<tensor[4,4][4]; %4> (_t067D, _t067F);
    real _t0681 = time051B[1];
    int _t0682 = prim $r2i01B7 (_t0681);
    int[2] _t0683 = func nextCell4051F (_t0682, cellId0518, mesh0517);
    int _t0684 = 1;
    int _t0685 = prim $sub01C0<int; %2> (_t0683, _t0684);
    tensor[4,4] _t0686 = prim $sub01C0<tensor[4,4]; %4> (_t0680, _t0685);
    real _t0687 = time051B[0];
    vec3 _t0688 = prim *0036<$[3]> (_t0687, dPos051A);
    vec3 _t0689 = prim +0017<$[3]> (_t0688, refPos0519);
    real _t068A = _t0689[0];
    real _t068B = time051B[0];
    vec3 _t068C = prim *0036<$[3]> (_t068B, dPos051A);
    vec3 _t068D = prim +0017<$[3]> (_t068C, refPos0519);
    real _t068E = _t068D[1];
    real _t068F = time051B[0];
    vec3 _t0690 = prim *0036<$[3]> (_t068F, dPos051A);
    vec3 _t0691 = prim +0017<$[3]> (_t0690, refPos0519);
    real _t0692 = _t0691[2];
    real _t0693 = 0.1e1;
    vec4 _t0694 = [_t068A, _t068E, _t0692, _t0693];
    vec4 _t0695 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0686, _t0694);
    real _t0696 = _t0695[0];
    real _t0697 = 0.1e1;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    real _t06A6 = 0.222044604925e-15;
    real _t06A7 = 0.e0;
    real _t06A8 = 0.44408920985e-15;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    tensor[4,4] _t06AB = [_t069B, _t06A0, _t06A5, _t06AA];
    real _t06AC = 0.173205080757e1;
    real _t06AD = 0.173205080757e1;
    real _t06AE = 0.173205080757e1;
    real _t06AF = -0.173205080757e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.2e1;
    real _t06B3 = 0.1e1;
    real _t06B4 = -0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = -0.1e1;
    real _t06B7 = -0.1e1;
    real _t06B8 = -0.192296268638e-15;
    real _t06B9 = 0.1e1;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.222044604925e-15;
    real _t06BC = 0.e0;
    real _t06BD = 0.44408920985e-15;
    real _t06BE = 0.1e1;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    tensor[4,4] _t06C0 = [_t06B0, _t06B5, _t06BA, _t06BF];
    real _t06C1 = 0.1e1;
    real _t06C2 = 0.2e1;
    real _t06C3 = 0.1e1;
    real _t06C4 = -0.1e1;
    vec4 _t06C5 = [_t06C1, _t06C2, _t06C3, _t06C4];
    real _t06C6 = 0.173205080757e1;
    real _t06C7 = 0.173205080757e1;
    real _t06C8 = 0.173205080757e1;
    real _t06C9 = -0.173205080757e1;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = -0.1e1;
    real _t06CC = -0.1e1;
    real _t06CD = -0.192296268638e-15;
    real _t06CE = 0.1e1;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.222044604925e-15;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.44408920985e-15;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    tensor[4,4] _t06D5 = [_t06C5, _t06CA, _t06CF, _t06D4];
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.2e1;
    real _t06D8 = 0.1e1;
    real _t06D9 = -0.1e1;
    vec4 _t06DA = [_t06D6, _t06D7, _t06D8, _t06D9];
    real _t06DB = -0.1e1;
    real _t06DC = -0.1e1;
    real _t06DD = -0.192296268638e-15;
    real _t06DE = 0.1e1;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.173205080757e1;
    real _t06E1 = 0.173205080757e1;
    real _t06E2 = 0.173205080757e1;
    real _t06E3 = -0.173205080757e1;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.222044604925e-15;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.44408920985e-15;
    real _t06E8 = 0.1e1;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    tensor[4,4] _t06EA = [_t06DA, _t06DF, _t06E4, _t06E9];
    tensor[4,4][4] _t06EB = {_t06AB, _t06C0, _t06D5, _t06EA};
    real _t06EC = 0.57735026919e0;
    real _t06ED = -0.1e1;
    real _t06EE = -0.1e1;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = -0.57735026919e0;
    real _t06F2 = 0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.57735026919e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    tensor[4,4] _t0700 = [_t06F0, _t06F5, _t06FA, _t06FF];
    real _t0701 = 0.1e1;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    vec4 _t0705 = [_t0701, _t0702, _t0703, _t0704];
    real _t0706 = 0.e0;
    real _t0707 = 0.1e1;
    real _t0708 = 0.e0;
    real _t0709 = 0.e0;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    tensor[4,4] _t0715 = [_t0705, _t070A, _t070F, _t0714];
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    vec4 _t071A = [_t0716, _t0717, _t0718, _t0719];
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    tensor[4,4] _t072A = [_t071A, _t071F, _t0724, _t0729];
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    vec4 _t072F = [_t072B, _t072C, _t072D, _t072E];
    real _t0730 = 0.e0;
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.1e1;
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    tensor[4,4] _t073F = [_t072F, _t0734, _t0739, _t073E];
    tensor[4,4][4] _t0740 = {_t0700, _t0715, _t072A, _t073F};
    real _t0741 = -0.1e1;
    real _t0742 = 0.57735026919e0;
    real _t0743 = -0.1e1;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = -0.57735026919e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.57735026919e0;
    real _t074D = 0.1e1;
    real _t074E = 0.e0;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    vec4 _t0754 = [_t0750, _t0751, _t0752, _t0753];
    tensor[4,4] _t0755 = [_t0745, _t074A, _t074F, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.1e1;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    tensor[4,4] _t076A = [_t075A, _t075F, _t0764, _t0769];
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.1e1;
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.e0;
    real _t077C = 0.e0;
    real _t077D = 0.1e1;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    tensor[4,4] _t077F = [_t076F, _t0774, _t0779, _t077E];
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    vec4 _t0784 = [_t0780, _t0781, _t0782, _t0783];
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.1e1;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.e0;
    real _t0791 = 0.e0;
    real _t0792 = 0.1e1;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    tensor[4,4] _t0794 = [_t0784, _t0789, _t078E, _t0793];
    tensor[4,4][4] _t0795 = {_t0755, _t076A, _t077F, _t0794};
    real _t0796 = -0.1e1;
    real _t0797 = -0.1e1;
    real _t0798 = 0.57735026919e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    real _t07A2 = 0.57735026919e0;
    real _t07A3 = 0.e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.e0;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    real _t07C0 = 0.1e1;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    real _t07C5 = 0.e0;
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    vec4 _t07C9 = [_t07C5, _t07C6, _t07C7, _t07C8];
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    tensor[4,4] _t07D4 = [_t07C4, _t07C9, _t07CE, _t07D3];
    real _t07D5 = 0.1e1;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    real _t07DA = 0.e0;
    real _t07DB = 0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    vec4 _t07DE = [_t07DA, _t07DB, _t07DC, _t07DD];
    real _t07DF = 0.e0;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.1e1;
    real _t07E2 = 0.e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = 0.e0;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    tensor[4,4] _t07E9 = [_t07D9, _t07DE, _t07E3, _t07E8];
    tensor[4,4][4] _t07EA = {_t07AA, _t07BF, _t07D4, _t07E9};
    tensor[4,4][4][4] _t07EB = {_t06EB, _t0740, _t0795, _t07EA};
    real _t07EC = time051B[1];
    int _t07ED = prim $r2i01B7 (_t07EC);
    tensor[4,4][4] _t07EE = prim $sub01C0<tensor[4,4][4]; %4> (_t07EB, _t07ED);
    real _t07EF = time051B[1];
    int _t07F0 = prim $r2i01B7 (_t07EF);
    int[2] _t07F1 = func nextCell4051F (_t07F0, cellId0518, mesh0517);
    int _t07F2 = 1;
    int _t07F3 = prim $sub01C0<int; %2> (_t07F1, _t07F2);
    tensor[4,4] _t07F4 = prim $sub01C0<tensor[4,4]; %4> (_t07EE, _t07F3);
    real _t07F5 = time051B[0];
    vec3 _t07F6 = prim *0036<$[3]> (_t07F5, dPos051A);
    vec3 _t07F7 = prim +0017<$[3]> (_t07F6, refPos0519);
    real _t07F8 = _t07F7[0];
    real _t07F9 = time051B[0];
    vec3 _t07FA = prim *0036<$[3]> (_t07F9, dPos051A);
    vec3 _t07FB = prim +0017<$[3]> (_t07FA, refPos0519);
    real _t07FC = _t07FB[1];
    real _t07FD = time051B[0];
    vec3 _t07FE = prim *0036<$[3]> (_t07FD, dPos051A);
    vec3 _t07FF = prim +0017<$[3]> (_t07FE, refPos0519);
    real _t0800 = _t07FF[2];
    real _t0801 = 0.1e1;
    vec4 _t0802 = [_t07F8, _t07FC, _t0800, _t0801];
    vec4 _t0803 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07F4, _t0802);
    real _t0804 = _t0803[1];
    real _t0805 = 0.1e1;
    real _t0806 = 0.e0;
    real _t0807 = 0.e0;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.1e1;
    real _t0812 = 0.e0;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    real _t0814 = 0.222044604925e-15;
    real _t0815 = 0.e0;
    real _t0816 = 0.44408920985e-15;
    real _t0817 = 0.1e1;
    vec4 _t0818 = [_t0814, _t0815, _t0816, _t0817];
    tensor[4,4] _t0819 = [_t0809, _t080E, _t0813, _t0818];
    real _t081A = 0.173205080757e1;
    real _t081B = 0.173205080757e1;
    real _t081C = 0.173205080757e1;
    real _t081D = -0.173205080757e1;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.1e1;
    real _t0820 = 0.2e1;
    real _t0821 = 0.1e1;
    real _t0822 = -0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = -0.1e1;
    real _t0825 = -0.1e1;
    real _t0826 = -0.192296268638e-15;
    real _t0827 = 0.1e1;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.222044604925e-15;
    real _t082A = 0.e0;
    real _t082B = 0.44408920985e-15;
    real _t082C = 0.1e1;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    tensor[4,4] _t082E = [_t081E, _t0823, _t0828, _t082D];
    real _t082F = 0.1e1;
    real _t0830 = 0.2e1;
    real _t0831 = 0.1e1;
    real _t0832 = -0.1e1;
    vec4 _t0833 = [_t082F, _t0830, _t0831, _t0832];
    real _t0834 = 0.173205080757e1;
    real _t0835 = 0.173205080757e1;
    real _t0836 = 0.173205080757e1;
    real _t0837 = -0.173205080757e1;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = -0.1e1;
    real _t083A = -0.1e1;
    real _t083B = -0.192296268638e-15;
    real _t083C = 0.1e1;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.222044604925e-15;
    real _t083F = 0.e0;
    real _t0840 = 0.44408920985e-15;
    real _t0841 = 0.1e1;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    tensor[4,4] _t0843 = [_t0833, _t0838, _t083D, _t0842];
    real _t0844 = 0.1e1;
    real _t0845 = 0.2e1;
    real _t0846 = 0.1e1;
    real _t0847 = -0.1e1;
    vec4 _t0848 = [_t0844, _t0845, _t0846, _t0847];
    real _t0849 = -0.1e1;
    real _t084A = -0.1e1;
    real _t084B = -0.192296268638e-15;
    real _t084C = 0.1e1;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = 0.173205080757e1;
    real _t084F = 0.173205080757e1;
    real _t0850 = 0.173205080757e1;
    real _t0851 = -0.173205080757e1;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.222044604925e-15;
    real _t0854 = 0.e0;
    real _t0855 = 0.44408920985e-15;
    real _t0856 = 0.1e1;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    tensor[4,4] _t0858 = [_t0848, _t084D, _t0852, _t0857];
    tensor[4,4][4] _t0859 = {_t0819, _t082E, _t0843, _t0858};
    real _t085A = 0.57735026919e0;
    real _t085B = -0.1e1;
    real _t085C = -0.1e1;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = -0.57735026919e0;
    real _t0860 = 0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.57735026919e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    real _t086F = 0.1e1;
    real _t0870 = 0.e0;
    real _t0871 = 0.e0;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    real _t0876 = 0.e0;
    real _t0877 = 0.e0;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.e0;
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.1e1;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    tensor[4,4] _t0883 = [_t0873, _t0878, _t087D, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.1e1;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.e0;
    real _t088F = 0.e0;
    real _t0890 = 0.1e1;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    tensor[4,4] _t0898 = [_t0888, _t088D, _t0892, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    tensor[4,4] _t08AD = [_t089D, _t08A2, _t08A7, _t08AC];
    tensor[4,4][4] _t08AE = {_t086E, _t0883, _t0898, _t08AD};
    real _t08AF = -0.1e1;
    real _t08B0 = 0.57735026919e0;
    real _t08B1 = -0.1e1;
    real _t08B2 = 0.1e1;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = -0.57735026919e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.57735026919e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.e0;
    real _t08FF = 0.e0;
    real _t0900 = 0.1e1;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    tensor[4,4] _t0902 = [_t08F2, _t08F7, _t08FC, _t0901];
    tensor[4,4][4] _t0903 = {_t08C3, _t08D8, _t08ED, _t0902};
    real _t0904 = -0.1e1;
    real _t0905 = -0.1e1;
    real _t0906 = 0.57735026919e0;
    real _t0907 = 0.1e1;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.1e1;
    real _t090A = 0.e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.1e1;
    real _t0910 = 0.57735026919e0;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.1e1;
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.e0;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    real _t092E = 0.1e1;
    real _t092F = 0.e0;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.e0;
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.1e1;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    tensor[4,4] _t0942 = [_t0932, _t0937, _t093C, _t0941];
    real _t0943 = 0.1e1;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.e0;
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    tensor[4,4] _t0957 = [_t0947, _t094C, _t0951, _t0956];
    tensor[4,4][4] _t0958 = {_t0918, _t092D, _t0942, _t0957};
    tensor[4,4][4][4] _t0959 = {_t0859, _t08AE, _t0903, _t0958};
    real _t095A = time051B[1];
    int _t095B = prim $r2i01B7 (_t095A);
    tensor[4,4][4] _t095C = prim $sub01C0<tensor[4,4][4]; %4> (_t0959, _t095B);
    real _t095D = time051B[1];
    int _t095E = prim $r2i01B7 (_t095D);
    int[2] _t095F = func nextCell4051F (_t095E, cellId0518, mesh0517);
    int _t0960 = 1;
    int _t0961 = prim $sub01C0<int; %2> (_t095F, _t0960);
    tensor[4,4] _t0962 = prim $sub01C0<tensor[4,4]; %4> (_t095C, _t0961);
    real _t0963 = time051B[0];
    vec3 _t0964 = prim *0036<$[3]> (_t0963, dPos051A);
    vec3 _t0965 = prim +0017<$[3]> (_t0964, refPos0519);
    real _t0966 = _t0965[0];
    real _t0967 = time051B[0];
    vec3 _t0968 = prim *0036<$[3]> (_t0967, dPos051A);
    vec3 _t0969 = prim +0017<$[3]> (_t0968, refPos0519);
    real _t096A = _t0969[1];
    real _t096B = time051B[0];
    vec3 _t096C = prim *0036<$[3]> (_t096B, dPos051A);
    vec3 _t096D = prim +0017<$[3]> (_t096C, refPos0519);
    real _t096E = _t096D[2];
    real _t096F = 0.1e1;
    vec4 _t0970 = [_t0966, _t096A, _t096E, _t096F];
    vec4 _t0971 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0962, _t0970);
    real _t0972 = _t0971[2];
    vec3 _t0973 = [_t0696, _t0804, _t0972];
    Femdata: MeshPos _t0974 = extractFemItemN((mesh0517, _t0528, _t0973),RefBuild(Mesh),);
    return _t0974;
  } else {
    real _t0975 = time051B[0];
    vec3 _t0976 = prim *0036<$[3]> (_t0975, dPos051A);
    vec3 _t0977 = prim +0017<$[3]> (_t0976, refPos0519);
    Femdata: MeshPos _t0978 = extractFemItemN((mesh0517, _t0977),InvalidBuildBoundary(MeshPos),);
    return _t0978;
  }
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
function int[2]#0 $nextCell20982 (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  nearbyCells0983 = extractFemItem2(CellConnectivity(Mesh), int, mesh097B, cell097A : int);
  int _t0984 = 0;
  int _t0985 = 1;
  int _t0986 = 3;
  int[2] _t0987 = {_t0985, _t0986};
  int _t0988 = 3;
  int _t0989 = 3;
  int[2] _t098A = {_t0988, _t0989};
  int _t098B = 9;
  int _t098C = 3;
  int[2] _t098D = {_t098B, _t098C};
  int _t098E = 27;
  int _t098F = 3;
  int[2] _t0990 = {_t098E, _t098F};
  int[2][4] _t0991 = {_t0987, _t098A, _t098D, _t0990};
  int[2] _t0992 = prim $sub01C0<int[2]; %4> (_t0991, faceIdx0979);
  int _t0993 = 1;
  int _t0994 = prim $sub01C0<int; %2> (_t0992, _t0993);
  int[] _t0995 = prim $range01C3 (_t0984, _t0994);
  int[] accum09B6 = {};
  foreach i09B3 in _t0995 {
    int _t0996 = 1;
    int _t0997 = 2;
    int _t0998 = 3;
    int _t0999 = 0;
    int _t099A = 2;
    int _t099B = 3;
    int _t099C = 0;
    int _t099D = 1;
    int _t099E = 3;
    int _t099F = 0;
    int _t09A0 = 1;
    int _t09A1 = 2;
    int[12] _t09A2 = {_t0996, _t0997, _t0998, _t0999, _t099A, _t099B, _t099C, _t099D, _t099E, _t099F, _t09A0, _t09A1};
    int _t09A3 = 1;
    int _t09A4 = 3;
    int[2] _t09A5 = {_t09A3, _t09A4};
    int _t09A6 = 3;
    int _t09A7 = 3;
    int[2] _t09A8 = {_t09A6, _t09A7};
    int _t09A9 = 9;
    int _t09AA = 3;
    int[2] _t09AB = {_t09A9, _t09AA};
    int _t09AC = 27;
    int _t09AD = 3;
    int[2] _t09AE = {_t09AC, _t09AD};
    int[2][4] _t09AF = {_t09A5, _t09A8, _t09AB, _t09AE};
    int[2] _t09B0 = prim $sub01C0<int[2]; %4> (_t09AF, faceIdx0979);
    int _t09B1 = 0;
    int _t09B2 = prim $sub01C0<int; %2> (_t09B0, _t09B1);
    int _t09B4 = prim +0015 (_t09B2, i09B3);
    int _t09B5 = prim $sub01C0<int; %12> (_t09A2, _t09B4);
    accum09B6 = prim @0010<int> (accum09B6, _t09B5);
  }
  numFacetNodes09B7 = prim length0123<int> (accum09B6);
  int _t09B8 = 3;
  bool _t09B9 = prim ==0082 (_t09B8, numFacetNodes09B7);
  if _t09B9 {
    foreach cellInt09BA in nearbyCells0983 {
      int[4] _t09BB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BC = 1;
      int _t09BD = prim $sub01C0<int; %4> (_t09BB, _t09BC);
      int[4] _t09BE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BF = 2;
      int _t09C0 = prim $sub01C0<int; %4> (_t09BE, _t09BF);
      int[4] _t09C1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09C2 = 3;
      int _t09C3 = prim $sub01C0<int; %4> (_t09C1, _t09C2);
      int[3] _t09C4 = {_t09BD, _t09C0, _t09C3};
      int _t09C5 = 0;
      int _t09C6 = prim $sub01C0<int; %3> (_t09C4, _t09C5);
      int _t09C7 = 0;
      int _t09C8 = 1;
      int _t09C9 = 3;
      int[2] _t09CA = {_t09C8, _t09C9};
      int _t09CB = 3;
      int _t09CC = 3;
      int[2] _t09CD = {_t09CB, _t09CC};
      int _t09CE = 9;
      int _t09CF = 3;
      int[2] _t09D0 = {_t09CE, _t09CF};
      int _t09D1 = 27;
      int _t09D2 = 3;
      int[2] _t09D3 = {_t09D1, _t09D2};
      int[2][4] _t09D4 = {_t09CA, _t09CD, _t09D0, _t09D3};
      int[2] _t09D5 = prim $sub01C0<int[2]; %4> (_t09D4, faceIdx0979);
      int _t09D6 = 1;
      int _t09D7 = prim $sub01C0<int; %2> (_t09D5, _t09D6);
      int[] _t09D8 = prim $range01C3 (_t09C7, _t09D7);
      int[] accum09F8 = {};
      foreach i09B3 in _t09D8 {
        int _t09D9 = 1;
        int _t09DA = 2;
        int _t09DB = 3;
        int _t09DC = 0;
        int _t09DD = 2;
        int _t09DE = 3;
        int _t09DF = 0;
        int _t09E0 = 1;
        int _t09E1 = 3;
        int _t09E2 = 0;
        int _t09E3 = 1;
        int _t09E4 = 2;
        int[12] _t09E5 = {_t09D9, _t09DA, _t09DB, _t09DC, _t09DD, _t09DE, _t09DF, _t09E0, _t09E1, _t09E2, _t09E3, _t09E4};
        int _t09E6 = 1;
        int _t09E7 = 3;
        int[2] _t09E8 = {_t09E6, _t09E7};
        int _t09E9 = 3;
        int _t09EA = 3;
        int[2] _t09EB = {_t09E9, _t09EA};
        int _t09EC = 9;
        int _t09ED = 3;
        int[2] _t09EE = {_t09EC, _t09ED};
        int _t09EF = 27;
        int _t09F0 = 3;
        int[2] _t09F1 = {_t09EF, _t09F0};
        int[2][4] _t09F2 = {_t09E8, _t09EB, _t09EE, _t09F1};
        int[2] _t09F3 = prim $sub01C0<int[2]; %4> (_t09F2, faceIdx0979);
        int _t09F4 = 0;
        int _t09F5 = prim $sub01C0<int; %2> (_t09F3, _t09F4);
        int _t09F6 = prim +0015 (_t09F5, i09B3);
        int _t09F7 = prim $sub01C0<int; %12> (_t09E5, _t09F6);
        accum09F8 = prim @0010<int> (accum09F8, _t09F7);
      }
      int _t09F9 = 0;
      int _t09FA = prim $dynsub01C2<int> (accum09F8, _t09F9);
      bool _t09FB = prim ==0082 (_t09C6, _t09FA);
      int[4] _t09FC = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09FD = 1;
      int _t09FE = prim $sub01C0<int; %4> (_t09FC, _t09FD);
      int[4] _t09FF = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A00 = 2;
      int _t0A01 = prim $sub01C0<int; %4> (_t09FF, _t0A00);
      int[4] _t0A02 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A03 = 3;
      int _t0A04 = prim $sub01C0<int; %4> (_t0A02, _t0A03);
      int[3] _t0A05 = {_t09FE, _t0A01, _t0A04};
      int _t0A06 = 1;
      int _t0A07 = prim $sub01C0<int; %3> (_t0A05, _t0A06);
      int _t0A08 = 0;
      int _t0A09 = 1;
      int _t0A0A = 3;
      int[2] _t0A0B = {_t0A09, _t0A0A};
      int _t0A0C = 3;
      int _t0A0D = 3;
      int[2] _t0A0E = {_t0A0C, _t0A0D};
      int _t0A0F = 9;
      int _t0A10 = 3;
      int[2] _t0A11 = {_t0A0F, _t0A10};
      int _t0A12 = 27;
      int _t0A13 = 3;
      int[2] _t0A14 = {_t0A12, _t0A13};
      int[2][4] _t0A15 = {_t0A0B, _t0A0E, _t0A11, _t0A14};
      int[2] _t0A16 = prim $sub01C0<int[2]; %4> (_t0A15, faceIdx0979);
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %2> (_t0A16, _t0A17);
      int[] _t0A19 = prim $range01C3 (_t0A08, _t0A18);
      int[] accum0A39 = {};
      foreach i09B3 in _t0A19 {
        int _t0A1A = 1;
        int _t0A1B = 2;
        int _t0A1C = 3;
        int _t0A1D = 0;
        int _t0A1E = 2;
        int _t0A1F = 3;
        int _t0A20 = 0;
        int _t0A21 = 1;
        int _t0A22 = 3;
        int _t0A23 = 0;
        int _t0A24 = 1;
        int _t0A25 = 2;
        int[12] _t0A26 = {_t0A1A, _t0A1B, _t0A1C, _t0A1D, _t0A1E, _t0A1F, _t0A20, _t0A21, _t0A22, _t0A23, _t0A24, _t0A25};
        int _t0A27 = 1;
        int _t0A28 = 3;
        int[2] _t0A29 = {_t0A27, _t0A28};
        int _t0A2A = 3;
        int _t0A2B = 3;
        int[2] _t0A2C = {_t0A2A, _t0A2B};
        int _t0A2D = 9;
        int _t0A2E = 3;
        int[2] _t0A2F = {_t0A2D, _t0A2E};
        int _t0A30 = 27;
        int _t0A31 = 3;
        int[2] _t0A32 = {_t0A30, _t0A31};
        int[2][4] _t0A33 = {_t0A29, _t0A2C, _t0A2F, _t0A32};
        int[2] _t0A34 = prim $sub01C0<int[2]; %4> (_t0A33, faceIdx0979);
        int _t0A35 = 0;
        int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
        int _t0A37 = prim +0015 (_t0A36, i09B3);
        int _t0A38 = prim $sub01C0<int; %12> (_t0A26, _t0A37);
        accum0A39 = prim @0010<int> (accum0A39, _t0A38);
      }
      int _t0A3A = 1;
      int _t0A3B = prim $dynsub01C2<int> (accum0A39, _t0A3A);
      bool _t0A3C = prim ==0082 (_t0A07, _t0A3B);
      int[4] _t0A3D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A3E = 1;
      int _t0A3F = prim $sub01C0<int; %4> (_t0A3D, _t0A3E);
      int[4] _t0A40 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A41 = 2;
      int _t0A42 = prim $sub01C0<int; %4> (_t0A40, _t0A41);
      int[4] _t0A43 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A44 = 3;
      int _t0A45 = prim $sub01C0<int; %4> (_t0A43, _t0A44);
      int[3] _t0A46 = {_t0A3F, _t0A42, _t0A45};
      int _t0A47 = 2;
      int _t0A48 = prim $sub01C0<int; %3> (_t0A46, _t0A47);
      int _t0A49 = 0;
      int _t0A4A = 1;
      int _t0A4B = 3;
      int[2] _t0A4C = {_t0A4A, _t0A4B};
      int _t0A4D = 3;
      int _t0A4E = 3;
      int[2] _t0A4F = {_t0A4D, _t0A4E};
      int _t0A50 = 9;
      int _t0A51 = 3;
      int[2] _t0A52 = {_t0A50, _t0A51};
      int _t0A53 = 27;
      int _t0A54 = 3;
      int[2] _t0A55 = {_t0A53, _t0A54};
      int[2][4] _t0A56 = {_t0A4C, _t0A4F, _t0A52, _t0A55};
      int[2] _t0A57 = prim $sub01C0<int[2]; %4> (_t0A56, faceIdx0979);
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %2> (_t0A57, _t0A58);
      int[] _t0A5A = prim $range01C3 (_t0A49, _t0A59);
      int[] accum0A7A = {};
      foreach i09B3 in _t0A5A {
        int _t0A5B = 1;
        int _t0A5C = 2;
        int _t0A5D = 3;
        int _t0A5E = 0;
        int _t0A5F = 2;
        int _t0A60 = 3;
        int _t0A61 = 0;
        int _t0A62 = 1;
        int _t0A63 = 3;
        int _t0A64 = 0;
        int _t0A65 = 1;
        int _t0A66 = 2;
        int[12] _t0A67 = {_t0A5B, _t0A5C, _t0A5D, _t0A5E, _t0A5F, _t0A60, _t0A61, _t0A62, _t0A63, _t0A64, _t0A65, _t0A66};
        int _t0A68 = 1;
        int _t0A69 = 3;
        int[2] _t0A6A = {_t0A68, _t0A69};
        int _t0A6B = 3;
        int _t0A6C = 3;
        int[2] _t0A6D = {_t0A6B, _t0A6C};
        int _t0A6E = 9;
        int _t0A6F = 3;
        int[2] _t0A70 = {_t0A6E, _t0A6F};
        int _t0A71 = 27;
        int _t0A72 = 3;
        int[2] _t0A73 = {_t0A71, _t0A72};
        int[2][4] _t0A74 = {_t0A6A, _t0A6D, _t0A70, _t0A73};
        int[2] _t0A75 = prim $sub01C0<int[2]; %4> (_t0A74, faceIdx0979);
        int _t0A76 = 0;
        int _t0A77 = prim $sub01C0<int; %2> (_t0A75, _t0A76);
        int _t0A78 = prim +0015 (_t0A77, i09B3);
        int _t0A79 = prim $sub01C0<int; %12> (_t0A67, _t0A78);
        accum0A7A = prim @0010<int> (accum0A7A, _t0A79);
      }
      int _t0A7B = 2;
      int _t0A7C = prim $dynsub01C2<int> (accum0A7A, _t0A7B);
      bool _t0A7D = prim ==0082 (_t0A48, _t0A7C);
      bool _t0A7E = prim $and01C4 (_t0A3C, _t0A7D);
      bool _t0A7F = prim $and01C4 (_t09FB, _t0A7E);
      if _t0A7F {
        int _t0A80 = 0;
        int[2] _t0A81 = {cellInt09BA, _t0A80};
        return _t0A81;
      }
      int[4] _t0A82 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A83 = 0;
      int _t0A84 = prim $sub01C0<int; %4> (_t0A82, _t0A83);
      int[4] _t0A85 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A86 = 2;
      int _t0A87 = prim $sub01C0<int; %4> (_t0A85, _t0A86);
      int[4] _t0A88 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A89 = 3;
      int _t0A8A = prim $sub01C0<int; %4> (_t0A88, _t0A89);
      int[3] _t0A8B = {_t0A84, _t0A87, _t0A8A};
      int _t0A8C = 0;
      int _t0A8D = prim $sub01C0<int; %3> (_t0A8B, _t0A8C);
      int _t0A8E = 0;
      int _t0A8F = 1;
      int _t0A90 = 3;
      int[2] _t0A91 = {_t0A8F, _t0A90};
      int _t0A92 = 3;
      int _t0A93 = 3;
      int[2] _t0A94 = {_t0A92, _t0A93};
      int _t0A95 = 9;
      int _t0A96 = 3;
      int[2] _t0A97 = {_t0A95, _t0A96};
      int _t0A98 = 27;
      int _t0A99 = 3;
      int[2] _t0A9A = {_t0A98, _t0A99};
      int[2][4] _t0A9B = {_t0A91, _t0A94, _t0A97, _t0A9A};
      int[2] _t0A9C = prim $sub01C0<int[2]; %4> (_t0A9B, faceIdx0979);
      int _t0A9D = 1;
      int _t0A9E = prim $sub01C0<int; %2> (_t0A9C, _t0A9D);
      int[] _t0A9F = prim $range01C3 (_t0A8E, _t0A9E);
      int[] accum0ABF = {};
      foreach i09B3 in _t0A9F {
        int _t0AA0 = 1;
        int _t0AA1 = 2;
        int _t0AA2 = 3;
        int _t0AA3 = 0;
        int _t0AA4 = 2;
        int _t0AA5 = 3;
        int _t0AA6 = 0;
        int _t0AA7 = 1;
        int _t0AA8 = 3;
        int _t0AA9 = 0;
        int _t0AAA = 1;
        int _t0AAB = 2;
        int[12] _t0AAC = {_t0AA0, _t0AA1, _t0AA2, _t0AA3, _t0AA4, _t0AA5, _t0AA6, _t0AA7, _t0AA8, _t0AA9, _t0AAA, _t0AAB};
        int _t0AAD = 1;
        int _t0AAE = 3;
        int[2] _t0AAF = {_t0AAD, _t0AAE};
        int _t0AB0 = 3;
        int _t0AB1 = 3;
        int[2] _t0AB2 = {_t0AB0, _t0AB1};
        int _t0AB3 = 9;
        int _t0AB4 = 3;
        int[2] _t0AB5 = {_t0AB3, _t0AB4};
        int _t0AB6 = 27;
        int _t0AB7 = 3;
        int[2] _t0AB8 = {_t0AB6, _t0AB7};
        int[2][4] _t0AB9 = {_t0AAF, _t0AB2, _t0AB5, _t0AB8};
        int[2] _t0ABA = prim $sub01C0<int[2]; %4> (_t0AB9, faceIdx0979);
        int _t0ABB = 0;
        int _t0ABC = prim $sub01C0<int; %2> (_t0ABA, _t0ABB);
        int _t0ABD = prim +0015 (_t0ABC, i09B3);
        int _t0ABE = prim $sub01C0<int; %12> (_t0AAC, _t0ABD);
        accum0ABF = prim @0010<int> (accum0ABF, _t0ABE);
      }
      int _t0AC0 = 0;
      int _t0AC1 = prim $dynsub01C2<int> (accum0ABF, _t0AC0);
      bool _t0AC2 = prim ==0082 (_t0A8D, _t0AC1);
      int[4] _t0AC3 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC4 = 0;
      int _t0AC5 = prim $sub01C0<int; %4> (_t0AC3, _t0AC4);
      int[4] _t0AC6 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC7 = 2;
      int _t0AC8 = prim $sub01C0<int; %4> (_t0AC6, _t0AC7);
      int[4] _t0AC9 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0ACA = 3;
      int _t0ACB = prim $sub01C0<int; %4> (_t0AC9, _t0ACA);
      int[3] _t0ACC = {_t0AC5, _t0AC8, _t0ACB};
      int _t0ACD = 1;
      int _t0ACE = prim $sub01C0<int; %3> (_t0ACC, _t0ACD);
      int _t0ACF = 0;
      int _t0AD0 = 1;
      int _t0AD1 = 3;
      int[2] _t0AD2 = {_t0AD0, _t0AD1};
      int _t0AD3 = 3;
      int _t0AD4 = 3;
      int[2] _t0AD5 = {_t0AD3, _t0AD4};
      int _t0AD6 = 9;
      int _t0AD7 = 3;
      int[2] _t0AD8 = {_t0AD6, _t0AD7};
      int _t0AD9 = 27;
      int _t0ADA = 3;
      int[2] _t0ADB = {_t0AD9, _t0ADA};
      int[2][4] _t0ADC = {_t0AD2, _t0AD5, _t0AD8, _t0ADB};
      int[2] _t0ADD = prim $sub01C0<int[2]; %4> (_t0ADC, faceIdx0979);
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %2> (_t0ADD, _t0ADE);
      int[] _t0AE0 = prim $range01C3 (_t0ACF, _t0ADF);
      int[] accum0B00 = {};
      foreach i09B3 in _t0AE0 {
        int _t0AE1 = 1;
        int _t0AE2 = 2;
        int _t0AE3 = 3;
        int _t0AE4 = 0;
        int _t0AE5 = 2;
        int _t0AE6 = 3;
        int _t0AE7 = 0;
        int _t0AE8 = 1;
        int _t0AE9 = 3;
        int _t0AEA = 0;
        int _t0AEB = 1;
        int _t0AEC = 2;
        int[12] _t0AED = {_t0AE1, _t0AE2, _t0AE3, _t0AE4, _t0AE5, _t0AE6, _t0AE7, _t0AE8, _t0AE9, _t0AEA, _t0AEB, _t0AEC};
        int _t0AEE = 1;
        int _t0AEF = 3;
        int[2] _t0AF0 = {_t0AEE, _t0AEF};
        int _t0AF1 = 3;
        int _t0AF2 = 3;
        int[2] _t0AF3 = {_t0AF1, _t0AF2};
        int _t0AF4 = 9;
        int _t0AF5 = 3;
        int[2] _t0AF6 = {_t0AF4, _t0AF5};
        int _t0AF7 = 27;
        int _t0AF8 = 3;
        int[2] _t0AF9 = {_t0AF7, _t0AF8};
        int[2][4] _t0AFA = {_t0AF0, _t0AF3, _t0AF6, _t0AF9};
        int[2] _t0AFB = prim $sub01C0<int[2]; %4> (_t0AFA, faceIdx0979);
        int _t0AFC = 0;
        int _t0AFD = prim $sub01C0<int; %2> (_t0AFB, _t0AFC);
        int _t0AFE = prim +0015 (_t0AFD, i09B3);
        int _t0AFF = prim $sub01C0<int; %12> (_t0AED, _t0AFE);
        accum0B00 = prim @0010<int> (accum0B00, _t0AFF);
      }
      int _t0B01 = 1;
      int _t0B02 = prim $dynsub01C2<int> (accum0B00, _t0B01);
      bool _t0B03 = prim ==0082 (_t0ACE, _t0B02);
      int[4] _t0B04 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B05 = 0;
      int _t0B06 = prim $sub01C0<int; %4> (_t0B04, _t0B05);
      int[4] _t0B07 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B08 = 2;
      int _t0B09 = prim $sub01C0<int; %4> (_t0B07, _t0B08);
      int[4] _t0B0A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B0B = 3;
      int _t0B0C = prim $sub01C0<int; %4> (_t0B0A, _t0B0B);
      int[3] _t0B0D = {_t0B06, _t0B09, _t0B0C};
      int _t0B0E = 2;
      int _t0B0F = prim $sub01C0<int; %3> (_t0B0D, _t0B0E);
      int _t0B10 = 0;
      int _t0B11 = 1;
      int _t0B12 = 3;
      int[2] _t0B13 = {_t0B11, _t0B12};
      int _t0B14 = 3;
      int _t0B15 = 3;
      int[2] _t0B16 = {_t0B14, _t0B15};
      int _t0B17 = 9;
      int _t0B18 = 3;
      int[2] _t0B19 = {_t0B17, _t0B18};
      int _t0B1A = 27;
      int _t0B1B = 3;
      int[2] _t0B1C = {_t0B1A, _t0B1B};
      int[2][4] _t0B1D = {_t0B13, _t0B16, _t0B19, _t0B1C};
      int[2] _t0B1E = prim $sub01C0<int[2]; %4> (_t0B1D, faceIdx0979);
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %2> (_t0B1E, _t0B1F);
      int[] _t0B21 = prim $range01C3 (_t0B10, _t0B20);
      int[] accum0B41 = {};
      foreach i09B3 in _t0B21 {
        int _t0B22 = 1;
        int _t0B23 = 2;
        int _t0B24 = 3;
        int _t0B25 = 0;
        int _t0B26 = 2;
        int _t0B27 = 3;
        int _t0B28 = 0;
        int _t0B29 = 1;
        int _t0B2A = 3;
        int _t0B2B = 0;
        int _t0B2C = 1;
        int _t0B2D = 2;
        int[12] _t0B2E = {_t0B22, _t0B23, _t0B24, _t0B25, _t0B26, _t0B27, _t0B28, _t0B29, _t0B2A, _t0B2B, _t0B2C, _t0B2D};
        int _t0B2F = 1;
        int _t0B30 = 3;
        int[2] _t0B31 = {_t0B2F, _t0B30};
        int _t0B32 = 3;
        int _t0B33 = 3;
        int[2] _t0B34 = {_t0B32, _t0B33};
        int _t0B35 = 9;
        int _t0B36 = 3;
        int[2] _t0B37 = {_t0B35, _t0B36};
        int _t0B38 = 27;
        int _t0B39 = 3;
        int[2] _t0B3A = {_t0B38, _t0B39};
        int[2][4] _t0B3B = {_t0B31, _t0B34, _t0B37, _t0B3A};
        int[2] _t0B3C = prim $sub01C0<int[2]; %4> (_t0B3B, faceIdx0979);
        int _t0B3D = 0;
        int _t0B3E = prim $sub01C0<int; %2> (_t0B3C, _t0B3D);
        int _t0B3F = prim +0015 (_t0B3E, i09B3);
        int _t0B40 = prim $sub01C0<int; %12> (_t0B2E, _t0B3F);
        accum0B41 = prim @0010<int> (accum0B41, _t0B40);
      }
      int _t0B42 = 2;
      int _t0B43 = prim $dynsub01C2<int> (accum0B41, _t0B42);
      bool _t0B44 = prim ==0082 (_t0B0F, _t0B43);
      bool _t0B45 = prim $and01C4 (_t0B03, _t0B44);
      bool _t0B46 = prim $and01C4 (_t0AC2, _t0B45);
      if _t0B46 {
        int _t0B47 = 1;
        int[2] _t0B48 = {cellInt09BA, _t0B47};
        return _t0B48;
      }
      int[4] _t0B49 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4A = 0;
      int _t0B4B = prim $sub01C0<int; %4> (_t0B49, _t0B4A);
      int[4] _t0B4C = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4D = 1;
      int _t0B4E = prim $sub01C0<int; %4> (_t0B4C, _t0B4D);
      int[4] _t0B4F = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B50 = 3;
      int _t0B51 = prim $sub01C0<int; %4> (_t0B4F, _t0B50);
      int[3] _t0B52 = {_t0B4B, _t0B4E, _t0B51};
      int _t0B53 = 0;
      int _t0B54 = prim $sub01C0<int; %3> (_t0B52, _t0B53);
      int _t0B55 = 0;
      int _t0B56 = 1;
      int _t0B57 = 3;
      int[2] _t0B58 = {_t0B56, _t0B57};
      int _t0B59 = 3;
      int _t0B5A = 3;
      int[2] _t0B5B = {_t0B59, _t0B5A};
      int _t0B5C = 9;
      int _t0B5D = 3;
      int[2] _t0B5E = {_t0B5C, _t0B5D};
      int _t0B5F = 27;
      int _t0B60 = 3;
      int[2] _t0B61 = {_t0B5F, _t0B60};
      int[2][4] _t0B62 = {_t0B58, _t0B5B, _t0B5E, _t0B61};
      int[2] _t0B63 = prim $sub01C0<int[2]; %4> (_t0B62, faceIdx0979);
      int _t0B64 = 1;
      int _t0B65 = prim $sub01C0<int; %2> (_t0B63, _t0B64);
      int[] _t0B66 = prim $range01C3 (_t0B55, _t0B65);
      int[] accum0B86 = {};
      foreach i09B3 in _t0B66 {
        int _t0B67 = 1;
        int _t0B68 = 2;
        int _t0B69 = 3;
        int _t0B6A = 0;
        int _t0B6B = 2;
        int _t0B6C = 3;
        int _t0B6D = 0;
        int _t0B6E = 1;
        int _t0B6F = 3;
        int _t0B70 = 0;
        int _t0B71 = 1;
        int _t0B72 = 2;
        int[12] _t0B73 = {_t0B67, _t0B68, _t0B69, _t0B6A, _t0B6B, _t0B6C, _t0B6D, _t0B6E, _t0B6F, _t0B70, _t0B71, _t0B72};
        int _t0B74 = 1;
        int _t0B75 = 3;
        int[2] _t0B76 = {_t0B74, _t0B75};
        int _t0B77 = 3;
        int _t0B78 = 3;
        int[2] _t0B79 = {_t0B77, _t0B78};
        int _t0B7A = 9;
        int _t0B7B = 3;
        int[2] _t0B7C = {_t0B7A, _t0B7B};
        int _t0B7D = 27;
        int _t0B7E = 3;
        int[2] _t0B7F = {_t0B7D, _t0B7E};
        int[2][4] _t0B80 = {_t0B76, _t0B79, _t0B7C, _t0B7F};
        int[2] _t0B81 = prim $sub01C0<int[2]; %4> (_t0B80, faceIdx0979);
        int _t0B82 = 0;
        int _t0B83 = prim $sub01C0<int; %2> (_t0B81, _t0B82);
        int _t0B84 = prim +0015 (_t0B83, i09B3);
        int _t0B85 = prim $sub01C0<int; %12> (_t0B73, _t0B84);
        accum0B86 = prim @0010<int> (accum0B86, _t0B85);
      }
      int _t0B87 = 0;
      int _t0B88 = prim $dynsub01C2<int> (accum0B86, _t0B87);
      bool _t0B89 = prim ==0082 (_t0B54, _t0B88);
      int[4] _t0B8A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8B = 0;
      int _t0B8C = prim $sub01C0<int; %4> (_t0B8A, _t0B8B);
      int[4] _t0B8D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8E = 1;
      int _t0B8F = prim $sub01C0<int; %4> (_t0B8D, _t0B8E);
      int[4] _t0B90 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B91 = 3;
      int _t0B92 = prim $sub01C0<int; %4> (_t0B90, _t0B91);
      int[3] _t0B93 = {_t0B8C, _t0B8F, _t0B92};
      int _t0B94 = 1;
      int _t0B95 = prim $sub01C0<int; %3> (_t0B93, _t0B94);
      int _t0B96 = 0;
      int _t0B97 = 1;
      int _t0B98 = 3;
      int[2] _t0B99 = {_t0B97, _t0B98};
      int _t0B9A = 3;
      int _t0B9B = 3;
      int[2] _t0B9C = {_t0B9A, _t0B9B};
      int _t0B9D = 9;
      int _t0B9E = 3;
      int[2] _t0B9F = {_t0B9D, _t0B9E};
      int _t0BA0 = 27;
      int _t0BA1 = 3;
      int[2] _t0BA2 = {_t0BA0, _t0BA1};
      int[2][4] _t0BA3 = {_t0B99, _t0B9C, _t0B9F, _t0BA2};
      int[2] _t0BA4 = prim $sub01C0<int[2]; %4> (_t0BA3, faceIdx0979);
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %2> (_t0BA4, _t0BA5);
      int[] _t0BA7 = prim $range01C3 (_t0B96, _t0BA6);
      int[] accum0BC7 = {};
      foreach i09B3 in _t0BA7 {
        int _t0BA8 = 1;
        int _t0BA9 = 2;
        int _t0BAA = 3;
        int _t0BAB = 0;
        int _t0BAC = 2;
        int _t0BAD = 3;
        int _t0BAE = 0;
        int _t0BAF = 1;
        int _t0BB0 = 3;
        int _t0BB1 = 0;
        int _t0BB2 = 1;
        int _t0BB3 = 2;
        int[12] _t0BB4 = {_t0BA8, _t0BA9, _t0BAA, _t0BAB, _t0BAC, _t0BAD, _t0BAE, _t0BAF, _t0BB0, _t0BB1, _t0BB2, _t0BB3};
        int _t0BB5 = 1;
        int _t0BB6 = 3;
        int[2] _t0BB7 = {_t0BB5, _t0BB6};
        int _t0BB8 = 3;
        int _t0BB9 = 3;
        int[2] _t0BBA = {_t0BB8, _t0BB9};
        int _t0BBB = 9;
        int _t0BBC = 3;
        int[2] _t0BBD = {_t0BBB, _t0BBC};
        int _t0BBE = 27;
        int _t0BBF = 3;
        int[2] _t0BC0 = {_t0BBE, _t0BBF};
        int[2][4] _t0BC1 = {_t0BB7, _t0BBA, _t0BBD, _t0BC0};
        int[2] _t0BC2 = prim $sub01C0<int[2]; %4> (_t0BC1, faceIdx0979);
        int _t0BC3 = 0;
        int _t0BC4 = prim $sub01C0<int; %2> (_t0BC2, _t0BC3);
        int _t0BC5 = prim +0015 (_t0BC4, i09B3);
        int _t0BC6 = prim $sub01C0<int; %12> (_t0BB4, _t0BC5);
        accum0BC7 = prim @0010<int> (accum0BC7, _t0BC6);
      }
      int _t0BC8 = 1;
      int _t0BC9 = prim $dynsub01C2<int> (accum0BC7, _t0BC8);
      bool _t0BCA = prim ==0082 (_t0B95, _t0BC9);
      int[4] _t0BCB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCC = 0;
      int _t0BCD = prim $sub01C0<int; %4> (_t0BCB, _t0BCC);
      int[4] _t0BCE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCF = 1;
      int _t0BD0 = prim $sub01C0<int; %4> (_t0BCE, _t0BCF);
      int[4] _t0BD1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BD2 = 3;
      int _t0BD3 = prim $sub01C0<int; %4> (_t0BD1, _t0BD2);
      int[3] _t0BD4 = {_t0BCD, _t0BD0, _t0BD3};
      int _t0BD5 = 2;
      int _t0BD6 = prim $sub01C0<int; %3> (_t0BD4, _t0BD5);
      int _t0BD7 = 0;
      int _t0BD8 = 1;
      int _t0BD9 = 3;
      int[2] _t0BDA = {_t0BD8, _t0BD9};
      int _t0BDB = 3;
      int _t0BDC = 3;
      int[2] _t0BDD = {_t0BDB, _t0BDC};
      int _t0BDE = 9;
      int _t0BDF = 3;
      int[2] _t0BE0 = {_t0BDE, _t0BDF};
      int _t0BE1 = 27;
      int _t0BE2 = 3;
      int[2] _t0BE3 = {_t0BE1, _t0BE2};
      int[2][4] _t0BE4 = {_t0BDA, _t0BDD, _t0BE0, _t0BE3};
      int[2] _t0BE5 = prim $sub01C0<int[2]; %4> (_t0BE4, faceIdx0979);
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %2> (_t0BE5, _t0BE6);
      int[] _t0BE8 = prim $range01C3 (_t0BD7, _t0BE7);
      int[] accum0C08 = {};
      foreach i09B3 in _t0BE8 {
        int _t0BE9 = 1;
        int _t0BEA = 2;
        int _t0BEB = 3;
        int _t0BEC = 0;
        int _t0BED = 2;
        int _t0BEE = 3;
        int _t0BEF = 0;
        int _t0BF0 = 1;
        int _t0BF1 = 3;
        int _t0BF2 = 0;
        int _t0BF3 = 1;
        int _t0BF4 = 2;
        int[12] _t0BF5 = {_t0BE9, _t0BEA, _t0BEB, _t0BEC, _t0BED, _t0BEE, _t0BEF, _t0BF0, _t0BF1, _t0BF2, _t0BF3, _t0BF4};
        int _t0BF6 = 1;
        int _t0BF7 = 3;
        int[2] _t0BF8 = {_t0BF6, _t0BF7};
        int _t0BF9 = 3;
        int _t0BFA = 3;
        int[2] _t0BFB = {_t0BF9, _t0BFA};
        int _t0BFC = 9;
        int _t0BFD = 3;
        int[2] _t0BFE = {_t0BFC, _t0BFD};
        int _t0BFF = 27;
        int _t0C00 = 3;
        int[2] _t0C01 = {_t0BFF, _t0C00};
        int[2][4] _t0C02 = {_t0BF8, _t0BFB, _t0BFE, _t0C01};
        int[2] _t0C03 = prim $sub01C0<int[2]; %4> (_t0C02, faceIdx0979);
        int _t0C04 = 0;
        int _t0C05 = prim $sub01C0<int; %2> (_t0C03, _t0C04);
        int _t0C06 = prim +0015 (_t0C05, i09B3);
        int _t0C07 = prim $sub01C0<int; %12> (_t0BF5, _t0C06);
        accum0C08 = prim @0010<int> (accum0C08, _t0C07);
      }
      int _t0C09 = 2;
      int _t0C0A = prim $dynsub01C2<int> (accum0C08, _t0C09);
      bool _t0C0B = prim ==0082 (_t0BD6, _t0C0A);
      bool _t0C0C = prim $and01C4 (_t0BCA, _t0C0B);
      bool _t0C0D = prim $and01C4 (_t0B89, _t0C0C);
      if _t0C0D {
        int _t0C0E = 2;
        int[2] _t0C0F = {cellInt09BA, _t0C0E};
        return _t0C0F;
      }
      int[4] _t0C10 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C11 = 0;
      int _t0C12 = prim $sub01C0<int; %4> (_t0C10, _t0C11);
      int[4] _t0C13 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C14 = 1;
      int _t0C15 = prim $sub01C0<int; %4> (_t0C13, _t0C14);
      int[4] _t0C16 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C17 = 2;
      int _t0C18 = prim $sub01C0<int; %4> (_t0C16, _t0C17);
      int[3] _t0C19 = {_t0C12, _t0C15, _t0C18};
      int _t0C1A = 0;
      int _t0C1B = prim $sub01C0<int; %3> (_t0C19, _t0C1A);
      int _t0C1C = 0;
      int _t0C1D = 1;
      int _t0C1E = 3;
      int[2] _t0C1F = {_t0C1D, _t0C1E};
      int _t0C20 = 3;
      int _t0C21 = 3;
      int[2] _t0C22 = {_t0C20, _t0C21};
      int _t0C23 = 9;
      int _t0C24 = 3;
      int[2] _t0C25 = {_t0C23, _t0C24};
      int _t0C26 = 27;
      int _t0C27 = 3;
      int[2] _t0C28 = {_t0C26, _t0C27};
      int[2][4] _t0C29 = {_t0C1F, _t0C22, _t0C25, _t0C28};
      int[2] _t0C2A = prim $sub01C0<int[2]; %4> (_t0C29, faceIdx0979);
      int _t0C2B = 1;
      int _t0C2C = prim $sub01C0<int; %2> (_t0C2A, _t0C2B);
      int[] _t0C2D = prim $range01C3 (_t0C1C, _t0C2C);
      int[] accum0C4D = {};
      foreach i09B3 in _t0C2D {
        int _t0C2E = 1;
        int _t0C2F = 2;
        int _t0C30 = 3;
        int _t0C31 = 0;
        int _t0C32 = 2;
        int _t0C33 = 3;
        int _t0C34 = 0;
        int _t0C35 = 1;
        int _t0C36 = 3;
        int _t0C37 = 0;
        int _t0C38 = 1;
        int _t0C39 = 2;
        int[12] _t0C3A = {_t0C2E, _t0C2F, _t0C30, _t0C31, _t0C32, _t0C33, _t0C34, _t0C35, _t0C36, _t0C37, _t0C38, _t0C39};
        int _t0C3B = 1;
        int _t0C3C = 3;
        int[2] _t0C3D = {_t0C3B, _t0C3C};
        int _t0C3E = 3;
        int _t0C3F = 3;
        int[2] _t0C40 = {_t0C3E, _t0C3F};
        int _t0C41 = 9;
        int _t0C42 = 3;
        int[2] _t0C43 = {_t0C41, _t0C42};
        int _t0C44 = 27;
        int _t0C45 = 3;
        int[2] _t0C46 = {_t0C44, _t0C45};
        int[2][4] _t0C47 = {_t0C3D, _t0C40, _t0C43, _t0C46};
        int[2] _t0C48 = prim $sub01C0<int[2]; %4> (_t0C47, faceIdx0979);
        int _t0C49 = 0;
        int _t0C4A = prim $sub01C0<int; %2> (_t0C48, _t0C49);
        int _t0C4B = prim +0015 (_t0C4A, i09B3);
        int _t0C4C = prim $sub01C0<int; %12> (_t0C3A, _t0C4B);
        accum0C4D = prim @0010<int> (accum0C4D, _t0C4C);
      }
      int _t0C4E = 0;
      int _t0C4F = prim $dynsub01C2<int> (accum0C4D, _t0C4E);
      bool _t0C50 = prim ==0082 (_t0C1B, _t0C4F);
      int[4] _t0C51 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C52 = 0;
      int _t0C53 = prim $sub01C0<int; %4> (_t0C51, _t0C52);
      int[4] _t0C54 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C55 = 1;
      int _t0C56 = prim $sub01C0<int; %4> (_t0C54, _t0C55);
      int[4] _t0C57 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C58 = 2;
      int _t0C59 = prim $sub01C0<int; %4> (_t0C57, _t0C58);
      int[3] _t0C5A = {_t0C53, _t0C56, _t0C59};
      int _t0C5B = 1;
      int _t0C5C = prim $sub01C0<int; %3> (_t0C5A, _t0C5B);
      int _t0C5D = 0;
      int _t0C5E = 1;
      int _t0C5F = 3;
      int[2] _t0C60 = {_t0C5E, _t0C5F};
      int _t0C61 = 3;
      int _t0C62 = 3;
      int[2] _t0C63 = {_t0C61, _t0C62};
      int _t0C64 = 9;
      int _t0C65 = 3;
      int[2] _t0C66 = {_t0C64, _t0C65};
      int _t0C67 = 27;
      int _t0C68 = 3;
      int[2] _t0C69 = {_t0C67, _t0C68};
      int[2][4] _t0C6A = {_t0C60, _t0C63, _t0C66, _t0C69};
      int[2] _t0C6B = prim $sub01C0<int[2]; %4> (_t0C6A, faceIdx0979);
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %2> (_t0C6B, _t0C6C);
      int[] _t0C6E = prim $range01C3 (_t0C5D, _t0C6D);
      int[] accum0C8E = {};
      foreach i09B3 in _t0C6E {
        int _t0C6F = 1;
        int _t0C70 = 2;
        int _t0C71 = 3;
        int _t0C72 = 0;
        int _t0C73 = 2;
        int _t0C74 = 3;
        int _t0C75 = 0;
        int _t0C76 = 1;
        int _t0C77 = 3;
        int _t0C78 = 0;
        int _t0C79 = 1;
        int _t0C7A = 2;
        int[12] _t0C7B = {_t0C6F, _t0C70, _t0C71, _t0C72, _t0C73, _t0C74, _t0C75, _t0C76, _t0C77, _t0C78, _t0C79, _t0C7A};
        int _t0C7C = 1;
        int _t0C7D = 3;
        int[2] _t0C7E = {_t0C7C, _t0C7D};
        int _t0C7F = 3;
        int _t0C80 = 3;
        int[2] _t0C81 = {_t0C7F, _t0C80};
        int _t0C82 = 9;
        int _t0C83 = 3;
        int[2] _t0C84 = {_t0C82, _t0C83};
        int _t0C85 = 27;
        int _t0C86 = 3;
        int[2] _t0C87 = {_t0C85, _t0C86};
        int[2][4] _t0C88 = {_t0C7E, _t0C81, _t0C84, _t0C87};
        int[2] _t0C89 = prim $sub01C0<int[2]; %4> (_t0C88, faceIdx0979);
        int _t0C8A = 0;
        int _t0C8B = prim $sub01C0<int; %2> (_t0C89, _t0C8A);
        int _t0C8C = prim +0015 (_t0C8B, i09B3);
        int _t0C8D = prim $sub01C0<int; %12> (_t0C7B, _t0C8C);
        accum0C8E = prim @0010<int> (accum0C8E, _t0C8D);
      }
      int _t0C8F = 1;
      int _t0C90 = prim $dynsub01C2<int> (accum0C8E, _t0C8F);
      bool _t0C91 = prim ==0082 (_t0C5C, _t0C90);
      int[4] _t0C92 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C93 = 0;
      int _t0C94 = prim $sub01C0<int; %4> (_t0C92, _t0C93);
      int[4] _t0C95 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C96 = 1;
      int _t0C97 = prim $sub01C0<int; %4> (_t0C95, _t0C96);
      int[4] _t0C98 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C99 = 2;
      int _t0C9A = prim $sub01C0<int; %4> (_t0C98, _t0C99);
      int[3] _t0C9B = {_t0C94, _t0C97, _t0C9A};
      int _t0C9C = 2;
      int _t0C9D = prim $sub01C0<int; %3> (_t0C9B, _t0C9C);
      int _t0C9E = 0;
      int _t0C9F = 1;
      int _t0CA0 = 3;
      int[2] _t0CA1 = {_t0C9F, _t0CA0};
      int _t0CA2 = 3;
      int _t0CA3 = 3;
      int[2] _t0CA4 = {_t0CA2, _t0CA3};
      int _t0CA5 = 9;
      int _t0CA6 = 3;
      int[2] _t0CA7 = {_t0CA5, _t0CA6};
      int _t0CA8 = 27;
      int _t0CA9 = 3;
      int[2] _t0CAA = {_t0CA8, _t0CA9};
      int[2][4] _t0CAB = {_t0CA1, _t0CA4, _t0CA7, _t0CAA};
      int[2] _t0CAC = prim $sub01C0<int[2]; %4> (_t0CAB, faceIdx0979);
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %2> (_t0CAC, _t0CAD);
      int[] _t0CAF = prim $range01C3 (_t0C9E, _t0CAE);
      int[] accum0CCF = {};
      foreach i09B3 in _t0CAF {
        int _t0CB0 = 1;
        int _t0CB1 = 2;
        int _t0CB2 = 3;
        int _t0CB3 = 0;
        int _t0CB4 = 2;
        int _t0CB5 = 3;
        int _t0CB6 = 0;
        int _t0CB7 = 1;
        int _t0CB8 = 3;
        int _t0CB9 = 0;
        int _t0CBA = 1;
        int _t0CBB = 2;
        int[12] _t0CBC = {_t0CB0, _t0CB1, _t0CB2, _t0CB3, _t0CB4, _t0CB5, _t0CB6, _t0CB7, _t0CB8, _t0CB9, _t0CBA, _t0CBB};
        int _t0CBD = 1;
        int _t0CBE = 3;
        int[2] _t0CBF = {_t0CBD, _t0CBE};
        int _t0CC0 = 3;
        int _t0CC1 = 3;
        int[2] _t0CC2 = {_t0CC0, _t0CC1};
        int _t0CC3 = 9;
        int _t0CC4 = 3;
        int[2] _t0CC5 = {_t0CC3, _t0CC4};
        int _t0CC6 = 27;
        int _t0CC7 = 3;
        int[2] _t0CC8 = {_t0CC6, _t0CC7};
        int[2][4] _t0CC9 = {_t0CBF, _t0CC2, _t0CC5, _t0CC8};
        int[2] _t0CCA = prim $sub01C0<int[2]; %4> (_t0CC9, faceIdx0979);
        int _t0CCB = 0;
        int _t0CCC = prim $sub01C0<int; %2> (_t0CCA, _t0CCB);
        int _t0CCD = prim +0015 (_t0CCC, i09B3);
        int _t0CCE = prim $sub01C0<int; %12> (_t0CBC, _t0CCD);
        accum0CCF = prim @0010<int> (accum0CCF, _t0CCE);
      }
      int _t0CD0 = 2;
      int _t0CD1 = prim $dynsub01C2<int> (accum0CCF, _t0CD0);
      bool _t0CD2 = prim ==0082 (_t0C9D, _t0CD1);
      bool _t0CD3 = prim $and01C4 (_t0C91, _t0CD2);
      bool _t0CD4 = prim $and01C4 (_t0C50, _t0CD3);
      if _t0CD4 {
        int _t0CD5 = 3;
        int[2] _t0CD6 = {cellInt09BA, _t0CD5};
        return _t0CD6;
      }
    }
  }
  int _t0CD7 = -1;
  int _t0CD8 = -1;
  int[2] _t0CD9 = {_t0CD7, _t0CD8};
  return _t0CD9;
}
function vec2#0 _enter0CDA (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0CDD = +inf;
  int face0CDE = -1;
  real _t0CDF = 0.57735026919e0;
  real _t0CE0 = 0.57735026919e0;
  real _t0CE1 = -0.57735026919e0;
  real _t0CE2 = 0.57735026919e0;
  vec3 _t0CE3 = [_t0CE0, _t0CE1, _t0CE2];
  real _t0CE4 = prim •00CE<$[3]; $[3]; $[]> (_t0CE3, refPos0CDB);
  real _t0CE5 = prim -0026<$[]> (_t0CDF, _t0CE4);
  real _t0CE6 = 0.57735026919e0;
  real _t0CE7 = -0.57735026919e0;
  real _t0CE8 = 0.57735026919e0;
  vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
  real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, dPos0CDC);
  real _t0CEB = prim /0055 (_t0CE5, _t0CEA);
  real _t0CEC = -0.e0;
  bool _t0CED = prim >0080 (_t0CEB, _t0CEC);
  real _t0CEE = 0.57735026919e0;
  real _t0CEF = 0.57735026919e0;
  real _t0CF0 = -0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  vec3 _t0CF2 = [_t0CEF, _t0CF0, _t0CF1];
  real _t0CF3 = prim •00CE<$[3]; $[3]; $[]> (_t0CF2, refPos0CDB);
  real _t0CF4 = prim -0026<$[]> (_t0CEE, _t0CF3);
  real _t0CF5 = 0.57735026919e0;
  real _t0CF6 = -0.57735026919e0;
  real _t0CF7 = 0.57735026919e0;
  vec3 _t0CF8 = [_t0CF5, _t0CF6, _t0CF7];
  real _t0CF9 = prim •00CE<$[3]; $[3]; $[]> (_t0CF8, dPos0CDC);
  real _t0CFA = prim /0055 (_t0CF4, _t0CF9);
  bool _t0CFB = prim >0080 (time0CDD, _t0CFA);
  bool _t0CFC = prim $and01C4 (_t0CED, _t0CFB);
  if _t0CFC {
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.1e1;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.1e1;
    vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
    real _t0D02 = 0.57735026919e0;
    real _t0D03 = 0.57735026919e0;
    real _t0D04 = -0.57735026919e0;
    real _t0D05 = 0.57735026919e0;
    vec3 _t0D06 = [_t0D03, _t0D04, _t0D05];
    real _t0D07 = prim •00CE<$[3]; $[3]; $[]> (_t0D06, refPos0CDB);
    real _t0D08 = prim -0026<$[]> (_t0D02, _t0D07);
    real _t0D09 = 0.57735026919e0;
    real _t0D0A = -0.57735026919e0;
    real _t0D0B = 0.57735026919e0;
    vec3 _t0D0C = [_t0D09, _t0D0A, _t0D0B];
    real _t0D0D = prim •00CE<$[3]; $[3]; $[]> (_t0D0C, dPos0CDC);
    real _t0D0E = prim /0055 (_t0D08, _t0D0D);
    vec3 _t0D0F = prim *0038<$[3]> (dPos0CDC, _t0D0E);
    vec3 _t0D10 = prim +0017<$[3]> (_t0D0F, refPos0CDB);
    real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, _t0D10);
    bool _t0D12 = prim >0080 (_t0CFD, _t0D11);
    real _t0D13 = 0.1e-8;
    real _t0D14 = 0.1e-8;
    real _t0D15 = 0.1e-8;
    vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
    real _t0D17 = 0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    real _t0D19 = -0.57735026919e0;
    real _t0D1A = 0.57735026919e0;
    vec3 _t0D1B = [_t0D18, _t0D19, _t0D1A];
    real _t0D1C = prim •00CE<$[3]; $[3]; $[]> (_t0D1B, refPos0CDB);
    real _t0D1D = prim -0026<$[]> (_t0D17, _t0D1C);
    real _t0D1E = 0.57735026919e0;
    real _t0D1F = -0.57735026919e0;
    real _t0D20 = 0.57735026919e0;
    vec3 _t0D21 = [_t0D1E, _t0D1F, _t0D20];
    real _t0D22 = prim •00CE<$[3]; $[3]; $[]> (_t0D21, dPos0CDC);
    real _t0D23 = prim /0055 (_t0D1D, _t0D22);
    vec3 _t0D24 = prim *0038<$[3]> (dPos0CDC, _t0D23);
    vec3 _t0D25 = prim +0017<$[3]> (_t0D24, refPos0CDB);
    vec3 _t0D26 = prim +0017<$[3]> (_t0D16, _t0D25);
    real _t0D27 = _t0D26[0];
    real _t0D28 = -0.e0;
    bool _t0D29 = prim >0080 (_t0D27, _t0D28);
    real _t0D2A = 0.1e-8;
    real _t0D2B = 0.1e-8;
    real _t0D2C = 0.1e-8;
    vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
    real _t0D2E = 0.57735026919e0;
    real _t0D2F = 0.57735026919e0;
    real _t0D30 = -0.57735026919e0;
    real _t0D31 = 0.57735026919e0;
    vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
    real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0CDB);
    real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
    real _t0D35 = 0.57735026919e0;
    real _t0D36 = -0.57735026919e0;
    real _t0D37 = 0.57735026919e0;
    vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
    real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0CDC);
    real _t0D3A = prim /0055 (_t0D34, _t0D39);
    vec3 _t0D3B = prim *0038<$[3]> (dPos0CDC, _t0D3A);
    vec3 _t0D3C = prim +0017<$[3]> (_t0D3B, refPos0CDB);
    vec3 _t0D3D = prim +0017<$[3]> (_t0D2D, _t0D3C);
    real _t0D3E = _t0D3D[1];
    real _t0D3F = -0.e0;
    bool _t0D40 = prim >0080 (_t0D3E, _t0D3F);
    real _t0D41 = 0.1e-8;
    real _t0D42 = 0.1e-8;
    real _t0D43 = 0.1e-8;
    vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.57735026919e0;
    real _t0D46 = 0.57735026919e0;
    real _t0D47 = -0.57735026919e0;
    real _t0D48 = 0.57735026919e0;
    vec3 _t0D49 = [_t0D46, _t0D47, _t0D48];
    real _t0D4A = prim •00CE<$[3]; $[3]; $[]> (_t0D49, refPos0CDB);
    real _t0D4B = prim -0026<$[]> (_t0D45, _t0D4A);
    real _t0D4C = 0.57735026919e0;
    real _t0D4D = -0.57735026919e0;
    real _t0D4E = 0.57735026919e0;
    vec3 _t0D4F = [_t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = prim •00CE<$[3]; $[3]; $[]> (_t0D4F, dPos0CDC);
    real _t0D51 = prim /0055 (_t0D4B, _t0D50);
    vec3 _t0D52 = prim *0038<$[3]> (dPos0CDC, _t0D51);
    vec3 _t0D53 = prim +0017<$[3]> (_t0D52, refPos0CDB);
    vec3 _t0D54 = prim +0017<$[3]> (_t0D44, _t0D53);
    real _t0D55 = _t0D54[2];
    real _t0D56 = -0.e0;
    bool _t0D57 = prim >0080 (_t0D55, _t0D56);
    bool _t0D58 = prim $and01C4 (_t0D40, _t0D57);
    bool _t0D59 = prim $and01C4 (_t0D29, _t0D58);
    bool _t0D5A = prim $and01C4 (_t0D12, _t0D59);
    if _t0D5A {
      real _t0D5B = 0.57735026919e0;
      real _t0D5C = 0.57735026919e0;
      real _t0D5D = -0.57735026919e0;
      real _t0D5E = 0.57735026919e0;
      vec3 _t0D5F = [_t0D5C, _t0D5D, _t0D5E];
      real _t0D60 = prim •00CE<$[3]; $[3]; $[]> (_t0D5F, refPos0CDB);
      real _t0D61 = prim -0026<$[]> (_t0D5B, _t0D60);
      real _t0D62 = 0.57735026919e0;
      real _t0D63 = -0.57735026919e0;
      real _t0D64 = 0.57735026919e0;
      vec3 _t0D65 = [_t0D62, _t0D63, _t0D64];
      real _t0D66 = prim •00CE<$[3]; $[3]; $[]> (_t0D65, dPos0CDC);
      time0CDD = prim /0055 (_t0D61, _t0D66);
      face0CDE = 0;
    }
  }
  real _t0D67 = 0.e0;
  real _t0D68 = 0.1e1;
  real _t0D69 = 0.e0;
  real _t0D6A = 0.e0;
  vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
  real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0CDB);
  real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
  real _t0D6E = 0.1e1;
  real _t0D6F = 0.e0;
  real _t0D70 = 0.e0;
  vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
  real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0CDC);
  real _t0D73 = prim /0055 (_t0D6D, _t0D72);
  real _t0D74 = -0.e0;
  bool _t0D75 = prim >0080 (_t0D73, _t0D74);
  real _t0D76 = 0.e0;
  real _t0D77 = 0.1e1;
  real _t0D78 = 0.e0;
  real _t0D79 = 0.e0;
  vec3 _t0D7A = [_t0D77, _t0D78, _t0D79];
  real _t0D7B = prim •00CE<$[3]; $[3]; $[]> (_t0D7A, refPos0CDB);
  real _t0D7C = prim -0026<$[]> (_t0D76, _t0D7B);
  real _t0D7D = 0.1e1;
  real _t0D7E = 0.e0;
  real _t0D7F = 0.e0;
  vec3 _t0D80 = [_t0D7D, _t0D7E, _t0D7F];
  real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D80, dPos0CDC);
  real _t0D82 = prim /0055 (_t0D7C, _t0D81);
  bool _t0D83 = prim >0080 (time0CDD, _t0D82);
  bool _t0D84 = prim $and01C4 (_t0D75, _t0D83);
  if _t0D84 {
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.1e1;
    real _t0D88 = 0.1e1;
    vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec3 _t0D8E = [_t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = prim •00CE<$[3]; $[3]; $[]> (_t0D8E, refPos0CDB);
    real _t0D90 = prim -0026<$[]> (_t0D8A, _t0D8F);
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    vec3 _t0D94 = [_t0D91, _t0D92, _t0D93];
    real _t0D95 = prim •00CE<$[3]; $[3]; $[]> (_t0D94, dPos0CDC);
    real _t0D96 = prim /0055 (_t0D90, _t0D95);
    vec3 _t0D97 = prim *0038<$[3]> (dPos0CDC, _t0D96);
    vec3 _t0D98 = prim +0017<$[3]> (_t0D97, refPos0CDB);
    real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D89, _t0D98);
    bool _t0D9A = prim >0080 (_t0D85, _t0D99);
    real _t0D9B = 0.1e-8;
    real _t0D9C = 0.1e-8;
    real _t0D9D = 0.1e-8;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CDB);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CDC);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CDC, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CDB);
    vec3 _t0DAE = prim +0017<$[3]> (_t0D9E, _t0DAD);
    real _t0DAF = _t0DAE[0];
    real _t0DB0 = -0.e0;
    bool _t0DB1 = prim >0080 (_t0DAF, _t0DB0);
    real _t0DB2 = 0.1e-8;
    real _t0DB3 = 0.1e-8;
    real _t0DB4 = 0.1e-8;
    vec3 _t0DB5 = [_t0DB2, _t0DB3, _t0DB4];
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    vec3 _t0DBA = [_t0DB7, _t0DB8, _t0DB9];
    real _t0DBB = prim •00CE<$[3]; $[3]; $[]> (_t0DBA, refPos0CDB);
    real _t0DBC = prim -0026<$[]> (_t0DB6, _t0DBB);
    real _t0DBD = 0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec3 _t0DC0 = [_t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = prim •00CE<$[3]; $[3]; $[]> (_t0DC0, dPos0CDC);
    real _t0DC2 = prim /0055 (_t0DBC, _t0DC1);
    vec3 _t0DC3 = prim *0038<$[3]> (dPos0CDC, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DC3, refPos0CDB);
    vec3 _t0DC5 = prim +0017<$[3]> (_t0DB5, _t0DC4);
    real _t0DC6 = _t0DC5[1];
    real _t0DC7 = -0.e0;
    bool _t0DC8 = prim >0080 (_t0DC6, _t0DC7);
    real _t0DC9 = 0.1e-8;
    real _t0DCA = 0.1e-8;
    real _t0DCB = 0.1e-8;
    vec3 _t0DCC = [_t0DC9, _t0DCA, _t0DCB];
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    real _t0DD0 = 0.e0;
    vec3 _t0DD1 = [_t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = prim •00CE<$[3]; $[3]; $[]> (_t0DD1, refPos0CDB);
    real _t0DD3 = prim -0026<$[]> (_t0DCD, _t0DD2);
    real _t0DD4 = 0.1e1;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    vec3 _t0DD7 = [_t0DD4, _t0DD5, _t0DD6];
    real _t0DD8 = prim •00CE<$[3]; $[3]; $[]> (_t0DD7, dPos0CDC);
    real _t0DD9 = prim /0055 (_t0DD3, _t0DD8);
    vec3 _t0DDA = prim *0038<$[3]> (dPos0CDC, _t0DD9);
    vec3 _t0DDB = prim +0017<$[3]> (_t0DDA, refPos0CDB);
    vec3 _t0DDC = prim +0017<$[3]> (_t0DCC, _t0DDB);
    real _t0DDD = _t0DDC[2];
    real _t0DDE = -0.e0;
    bool _t0DDF = prim >0080 (_t0DDD, _t0DDE);
    bool _t0DE0 = prim $and01C4 (_t0DC8, _t0DDF);
    bool _t0DE1 = prim $and01C4 (_t0DB1, _t0DE0);
    bool _t0DE2 = prim $and01C4 (_t0D9A, _t0DE1);
    if _t0DE2 {
      real _t0DE3 = 0.e0;
      real _t0DE4 = 0.1e1;
      real _t0DE5 = 0.e0;
      real _t0DE6 = 0.e0;
      vec3 _t0DE7 = [_t0DE4, _t0DE5, _t0DE6];
      real _t0DE8 = prim •00CE<$[3]; $[3]; $[]> (_t0DE7, refPos0CDB);
      real _t0DE9 = prim -0026<$[]> (_t0DE3, _t0DE8);
      real _t0DEA = 0.1e1;
      real _t0DEB = 0.e0;
      real _t0DEC = 0.e0;
      vec3 _t0DED = [_t0DEA, _t0DEB, _t0DEC];
      real _t0DEE = prim •00CE<$[3]; $[3]; $[]> (_t0DED, dPos0CDC);
      time0CDD = prim /0055 (_t0DE9, _t0DEE);
      face0CDE = 1;
    }
  }
  real _t0DEF = 0.e0;
  real _t0DF0 = 0.e0;
  real _t0DF1 = 0.1e1;
  real _t0DF2 = 0.e0;
  vec3 _t0DF3 = [_t0DF0, _t0DF1, _t0DF2];
  real _t0DF4 = prim •00CE<$[3]; $[3]; $[]> (_t0DF3, refPos0CDB);
  real _t0DF5 = prim -0026<$[]> (_t0DEF, _t0DF4);
  real _t0DF6 = 0.e0;
  real _t0DF7 = 0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, dPos0CDC);
  real _t0DFB = prim /0055 (_t0DF5, _t0DFA);
  real _t0DFC = -0.e0;
  bool _t0DFD = prim >0080 (_t0DFB, _t0DFC);
  real _t0DFE = 0.e0;
  real _t0DFF = 0.e0;
  real _t0E00 = 0.1e1;
  real _t0E01 = 0.e0;
  vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
  real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, refPos0CDB);
  real _t0E04 = prim -0026<$[]> (_t0DFE, _t0E03);
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, dPos0CDC);
  real _t0E0A = prim /0055 (_t0E04, _t0E09);
  bool _t0E0B = prim >0080 (time0CDD, _t0E0A);
  bool _t0E0C = prim $and01C4 (_t0DFD, _t0E0B);
  if _t0E0C {
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.1e1;
    real _t0E0F = 0.1e1;
    real _t0E10 = 0.1e1;
    vec3 _t0E11 = [_t0E0E, _t0E0F, _t0E10];
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, refPos0CDB);
    real _t0E18 = prim -0026<$[]> (_t0E12, _t0E17);
    real _t0E19 = 0.e0;
    real _t0E1A = 0.1e1;
    real _t0E1B = 0.e0;
    vec3 _t0E1C = [_t0E19, _t0E1A, _t0E1B];
    real _t0E1D = prim •00CE<$[3]; $[3]; $[]> (_t0E1C, dPos0CDC);
    real _t0E1E = prim /0055 (_t0E18, _t0E1D);
    vec3 _t0E1F = prim *0038<$[3]> (dPos0CDC, _t0E1E);
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, refPos0CDB);
    real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E11, _t0E20);
    bool _t0E22 = prim >0080 (_t0E0D, _t0E21);
    real _t0E23 = 0.1e-8;
    real _t0E24 = 0.1e-8;
    real _t0E25 = 0.1e-8;
    vec3 _t0E26 = [_t0E23, _t0E24, _t0E25];
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    real _t0E2A = 0.e0;
    vec3 _t0E2B = [_t0E28, _t0E29, _t0E2A];
    real _t0E2C = prim •00CE<$[3]; $[3]; $[]> (_t0E2B, refPos0CDB);
    real _t0E2D = prim -0026<$[]> (_t0E27, _t0E2C);
    real _t0E2E = 0.e0;
    real _t0E2F = 0.1e1;
    real _t0E30 = 0.e0;
    vec3 _t0E31 = [_t0E2E, _t0E2F, _t0E30];
    real _t0E32 = prim •00CE<$[3]; $[3]; $[]> (_t0E31, dPos0CDC);
    real _t0E33 = prim /0055 (_t0E2D, _t0E32);
    vec3 _t0E34 = prim *0038<$[3]> (dPos0CDC, _t0E33);
    vec3 _t0E35 = prim +0017<$[3]> (_t0E34, refPos0CDB);
    vec3 _t0E36 = prim +0017<$[3]> (_t0E26, _t0E35);
    real _t0E37 = _t0E36[0];
    real _t0E38 = -0.e0;
    bool _t0E39 = prim >0080 (_t0E37, _t0E38);
    real _t0E3A = 0.1e-8;
    real _t0E3B = 0.1e-8;
    real _t0E3C = 0.1e-8;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CDB);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CDC);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CDC, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CDB);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[1];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-8;
    real _t0E52 = 0.1e-8;
    real _t0E53 = 0.1e-8;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CDB);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CDC);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CDC, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CDB);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[2];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    bool _t0E68 = prim $and01C4 (_t0E50, _t0E67);
    bool _t0E69 = prim $and01C4 (_t0E39, _t0E68);
    bool _t0E6A = prim $and01C4 (_t0E22, _t0E69);
    if _t0E6A {
      real _t0E6B = 0.e0;
      real _t0E6C = 0.e0;
      real _t0E6D = 0.1e1;
      real _t0E6E = 0.e0;
      vec3 _t0E6F = [_t0E6C, _t0E6D, _t0E6E];
      real _t0E70 = prim •00CE<$[3]; $[3]; $[]> (_t0E6F, refPos0CDB);
      real _t0E71 = prim -0026<$[]> (_t0E6B, _t0E70);
      real _t0E72 = 0.e0;
      real _t0E73 = 0.1e1;
      real _t0E74 = 0.e0;
      vec3 _t0E75 = [_t0E72, _t0E73, _t0E74];
      real _t0E76 = prim •00CE<$[3]; $[3]; $[]> (_t0E75, dPos0CDC);
      time0CDD = prim /0055 (_t0E71, _t0E76);
      face0CDE = 2;
    }
  }
  real _t0E77 = 0.e0;
  real _t0E78 = 0.e0;
  real _t0E79 = 0.e0;
  real _t0E7A = 0.1e1;
  vec3 _t0E7B = [_t0E78, _t0E79, _t0E7A];
  real _t0E7C = prim •00CE<$[3]; $[3]; $[]> (_t0E7B, refPos0CDB);
  real _t0E7D = prim -0026<$[]> (_t0E77, _t0E7C);
  real _t0E7E = 0.e0;
  real _t0E7F = 0.e0;
  real _t0E80 = 0.1e1;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, dPos0CDC);
  real _t0E83 = prim /0055 (_t0E7D, _t0E82);
  real _t0E84 = -0.e0;
  bool _t0E85 = prim >0080 (_t0E83, _t0E84);
  real _t0E86 = 0.e0;
  real _t0E87 = 0.e0;
  real _t0E88 = 0.e0;
  real _t0E89 = 0.1e1;
  vec3 _t0E8A = [_t0E87, _t0E88, _t0E89];
  real _t0E8B = prim •00CE<$[3]; $[3]; $[]> (_t0E8A, refPos0CDB);
  real _t0E8C = prim -0026<$[]> (_t0E86, _t0E8B);
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = 0.1e1;
  vec3 _t0E90 = [_t0E8D, _t0E8E, _t0E8F];
  real _t0E91 = prim •00CE<$[3]; $[3]; $[]> (_t0E90, dPos0CDC);
  real _t0E92 = prim /0055 (_t0E8C, _t0E91);
  bool _t0E93 = prim >0080 (time0CDD, _t0E92);
  bool _t0E94 = prim $and01C4 (_t0E85, _t0E93);
  if _t0E94 {
    real _t0E95 = 0.1e1;
    real _t0E96 = 0.1e1;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.1e1;
    vec3 _t0E99 = [_t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec3 _t0E9E = [_t0E9B, _t0E9C, _t0E9D];
    real _t0E9F = prim •00CE<$[3]; $[3]; $[]> (_t0E9E, refPos0CDB);
    real _t0EA0 = prim -0026<$[]> (_t0E9A, _t0E9F);
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec3 _t0EA4 = [_t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = prim •00CE<$[3]; $[3]; $[]> (_t0EA4, dPos0CDC);
    real _t0EA6 = prim /0055 (_t0EA0, _t0EA5);
    vec3 _t0EA7 = prim *0038<$[3]> (dPos0CDC, _t0EA6);
    vec3 _t0EA8 = prim +0017<$[3]> (_t0EA7, refPos0CDB);
    real _t0EA9 = prim •00CE<$[3]; $[3]; $[]> (_t0E99, _t0EA8);
    bool _t0EAA = prim >0080 (_t0E95, _t0EA9);
    real _t0EAB = 0.1e-8;
    real _t0EAC = 0.1e-8;
    real _t0EAD = 0.1e-8;
    vec3 _t0EAE = [_t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec3 _t0EB3 = [_t0EB0, _t0EB1, _t0EB2];
    real _t0EB4 = prim •00CE<$[3]; $[3]; $[]> (_t0EB3, refPos0CDB);
    real _t0EB5 = prim -0026<$[]> (_t0EAF, _t0EB4);
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.1e1;
    vec3 _t0EB9 = [_t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = prim •00CE<$[3]; $[3]; $[]> (_t0EB9, dPos0CDC);
    real _t0EBB = prim /0055 (_t0EB5, _t0EBA);
    vec3 _t0EBC = prim *0038<$[3]> (dPos0CDC, _t0EBB);
    vec3 _t0EBD = prim +0017<$[3]> (_t0EBC, refPos0CDB);
    vec3 _t0EBE = prim +0017<$[3]> (_t0EAE, _t0EBD);
    real _t0EBF = _t0EBE[0];
    real _t0EC0 = -0.e0;
    bool _t0EC1 = prim >0080 (_t0EBF, _t0EC0);
    real _t0EC2 = 0.1e-8;
    real _t0EC3 = 0.1e-8;
    real _t0EC4 = 0.1e-8;
    vec3 _t0EC5 = [_t0EC2, _t0EC3, _t0EC4];
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.1e1;
    vec3 _t0ECA = [_t0EC7, _t0EC8, _t0EC9];
    real _t0ECB = prim •00CE<$[3]; $[3]; $[]> (_t0ECA, refPos0CDB);
    real _t0ECC = prim -0026<$[]> (_t0EC6, _t0ECB);
    real _t0ECD = 0.e0;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.1e1;
    vec3 _t0ED0 = [_t0ECD, _t0ECE, _t0ECF];
    real _t0ED1 = prim •00CE<$[3]; $[3]; $[]> (_t0ED0, dPos0CDC);
    real _t0ED2 = prim /0055 (_t0ECC, _t0ED1);
    vec3 _t0ED3 = prim *0038<$[3]> (dPos0CDC, _t0ED2);
    vec3 _t0ED4 = prim +0017<$[3]> (_t0ED3, refPos0CDB);
    vec3 _t0ED5 = prim +0017<$[3]> (_t0EC5, _t0ED4);
    real _t0ED6 = _t0ED5[1];
    real _t0ED7 = -0.e0;
    bool _t0ED8 = prim >0080 (_t0ED6, _t0ED7);
    real _t0ED9 = 0.1e-8;
    real _t0EDA = 0.1e-8;
    real _t0EDB = 0.1e-8;
    vec3 _t0EDC = [_t0ED9, _t0EDA, _t0EDB];
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.1e1;
    vec3 _t0EE1 = [_t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = prim •00CE<$[3]; $[3]; $[]> (_t0EE1, refPos0CDB);
    real _t0EE3 = prim -0026<$[]> (_t0EDD, _t0EE2);
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.1e1;
    vec3 _t0EE7 = [_t0EE4, _t0EE5, _t0EE6];
    real _t0EE8 = prim •00CE<$[3]; $[3]; $[]> (_t0EE7, dPos0CDC);
    real _t0EE9 = prim /0055 (_t0EE3, _t0EE8);
    vec3 _t0EEA = prim *0038<$[3]> (dPos0CDC, _t0EE9);
    vec3 _t0EEB = prim +0017<$[3]> (_t0EEA, refPos0CDB);
    vec3 _t0EEC = prim +0017<$[3]> (_t0EDC, _t0EEB);
    real _t0EED = _t0EEC[2];
    real _t0EEE = -0.e0;
    bool _t0EEF = prim >0080 (_t0EED, _t0EEE);
    bool _t0EF0 = prim $and01C4 (_t0ED8, _t0EEF);
    bool _t0EF1 = prim $and01C4 (_t0EC1, _t0EF0);
    bool _t0EF2 = prim $and01C4 (_t0EAA, _t0EF1);
    if _t0EF2 {
      real _t0EF3 = 0.e0;
      real _t0EF4 = 0.e0;
      real _t0EF5 = 0.e0;
      real _t0EF6 = 0.1e1;
      vec3 _t0EF7 = [_t0EF4, _t0EF5, _t0EF6];
      real _t0EF8 = prim •00CE<$[3]; $[3]; $[]> (_t0EF7, refPos0CDB);
      real _t0EF9 = prim -0026<$[]> (_t0EF3, _t0EF8);
      real _t0EFA = 0.e0;
      real _t0EFB = 0.e0;
      real _t0EFC = 0.1e1;
      vec3 _t0EFD = [_t0EFA, _t0EFB, _t0EFC];
      real _t0EFE = prim •00CE<$[3]; $[3]; $[]> (_t0EFD, dPos0CDC);
      time0CDD = prim /0055 (_t0EF9, _t0EFE);
      face0CDE = 3;
    }
  }
  int _t0EFF = -1;
  bool _t0F00 = prim !=0086 (face0CDE, _t0EFF);
  if _t0F00 {
    real _t0F01 = (real)face0CDE;
    vec2 _t0F02 = [time0CDD, _t0F01];
    return _t0F02;
  } else {
    real _t0F03 = -0.1e1;
    real _t0F04 = -0.1e1;
    vec2 _t0F05 = [_t0F03, _t0F04];
    return _t0F05;
  }
}
function vec2#0 _exit0F06 (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0F07 = +inf;
  int face0F08 = -1;
  real _t0F09 = 0.57735026919e0;
  real _t0F0A = 0.57735026919e0;
  real _t0F0B = -0.57735026919e0;
  real _t0F0C = 0.57735026919e0;
  vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
  real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0CDB);
  real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
  real _t0F10 = 0.57735026919e0;
  real _t0F11 = -0.57735026919e0;
  real _t0F12 = 0.57735026919e0;
  vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
  real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0CDC);
  real _t0F15 = prim /0055 (_t0F0F, _t0F14);
  real _t0F16 = -0.e0;
  bool _t0F17 = prim >0080 (_t0F15, _t0F16);
  real _t0F18 = 0.57735026919e0;
  real _t0F19 = 0.57735026919e0;
  real _t0F1A = -0.57735026919e0;
  real _t0F1B = 0.57735026919e0;
  vec3 _t0F1C = [_t0F19, _t0F1A, _t0F1B];
  real _t0F1D = prim •00CE<$[3]; $[3]; $[]> (_t0F1C, refPos0CDB);
  real _t0F1E = prim -0026<$[]> (_t0F18, _t0F1D);
  real _t0F1F = 0.57735026919e0;
  real _t0F20 = -0.57735026919e0;
  real _t0F21 = 0.57735026919e0;
  vec3 _t0F22 = [_t0F1F, _t0F20, _t0F21];
  real _t0F23 = prim •00CE<$[3]; $[3]; $[]> (_t0F22, dPos0CDC);
  real _t0F24 = prim /0055 (_t0F1E, _t0F23);
  bool _t0F25 = prim >0080 (time0F07, _t0F24);
  bool _t0F26 = prim $and01C4 (_t0F17, _t0F25);
  if _t0F26 {
    real _t0F27 = 0.57735026919e0;
    real _t0F28 = 0.57735026919e0;
    real _t0F29 = -0.57735026919e0;
    real _t0F2A = 0.57735026919e0;
    vec3 _t0F2B = [_t0F28, _t0F29, _t0F2A];
    real _t0F2C = prim •00CE<$[3]; $[3]; $[]> (_t0F2B, refPos0CDB);
    real _t0F2D = prim -0026<$[]> (_t0F27, _t0F2C);
    real _t0F2E = 0.57735026919e0;
    real _t0F2F = -0.57735026919e0;
    real _t0F30 = 0.57735026919e0;
    vec3 _t0F31 = [_t0F2E, _t0F2F, _t0F30];
    real _t0F32 = prim •00CE<$[3]; $[3]; $[]> (_t0F31, dPos0CDC);
    time0F07 = prim /0055 (_t0F2D, _t0F32);
    face0F08 = 0;
  }
  real _t0F33 = 0.e0;
  real _t0F34 = 0.1e1;
  real _t0F35 = 0.e0;
  real _t0F36 = 0.e0;
  vec3 _t0F37 = [_t0F34, _t0F35, _t0F36];
  real _t0F38 = prim •00CE<$[3]; $[3]; $[]> (_t0F37, refPos0CDB);
  real _t0F39 = prim -0026<$[]> (_t0F33, _t0F38);
  real _t0F3A = 0.1e1;
  real _t0F3B = 0.e0;
  real _t0F3C = 0.e0;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, dPos0CDC);
  real _t0F3F = prim /0055 (_t0F39, _t0F3E);
  real _t0F40 = -0.e0;
  bool _t0F41 = prim >0080 (_t0F3F, _t0F40);
  real _t0F42 = 0.e0;
  real _t0F43 = 0.1e1;
  real _t0F44 = 0.e0;
  real _t0F45 = 0.e0;
  vec3 _t0F46 = [_t0F43, _t0F44, _t0F45];
  real _t0F47 = prim •00CE<$[3]; $[3]; $[]> (_t0F46, refPos0CDB);
  real _t0F48 = prim -0026<$[]> (_t0F42, _t0F47);
  real _t0F49 = 0.1e1;
  real _t0F4A = 0.e0;
  real _t0F4B = 0.e0;
  vec3 _t0F4C = [_t0F49, _t0F4A, _t0F4B];
  real _t0F4D = prim •00CE<$[3]; $[3]; $[]> (_t0F4C, dPos0CDC);
  real _t0F4E = prim /0055 (_t0F48, _t0F4D);
  bool _t0F4F = prim >0080 (time0F07, _t0F4E);
  bool _t0F50 = prim $and01C4 (_t0F41, _t0F4F);
  if _t0F50 {
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec3 _t0F55 = [_t0F52, _t0F53, _t0F54];
    real _t0F56 = prim •00CE<$[3]; $[3]; $[]> (_t0F55, refPos0CDB);
    real _t0F57 = prim -0026<$[]> (_t0F51, _t0F56);
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    vec3 _t0F5B = [_t0F58, _t0F59, _t0F5A];
    real _t0F5C = prim •00CE<$[3]; $[3]; $[]> (_t0F5B, dPos0CDC);
    time0F07 = prim /0055 (_t0F57, _t0F5C);
    face0F08 = 1;
  }
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  real _t0F5F = 0.1e1;
  real _t0F60 = 0.e0;
  vec3 _t0F61 = [_t0F5E, _t0F5F, _t0F60];
  real _t0F62 = prim •00CE<$[3]; $[3]; $[]> (_t0F61, refPos0CDB);
  real _t0F63 = prim -0026<$[]> (_t0F5D, _t0F62);
  real _t0F64 = 0.e0;
  real _t0F65 = 0.1e1;
  real _t0F66 = 0.e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, dPos0CDC);
  real _t0F69 = prim /0055 (_t0F63, _t0F68);
  real _t0F6A = -0.e0;
  bool _t0F6B = prim >0080 (_t0F69, _t0F6A);
  real _t0F6C = 0.e0;
  real _t0F6D = 0.e0;
  real _t0F6E = 0.1e1;
  real _t0F6F = 0.e0;
  vec3 _t0F70 = [_t0F6D, _t0F6E, _t0F6F];
  real _t0F71 = prim •00CE<$[3]; $[3]; $[]> (_t0F70, refPos0CDB);
  real _t0F72 = prim -0026<$[]> (_t0F6C, _t0F71);
  real _t0F73 = 0.e0;
  real _t0F74 = 0.1e1;
  real _t0F75 = 0.e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, dPos0CDC);
  real _t0F78 = prim /0055 (_t0F72, _t0F77);
  bool _t0F79 = prim >0080 (time0F07, _t0F78);
  bool _t0F7A = prim $and01C4 (_t0F6B, _t0F79);
  if _t0F7A {
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec3 _t0F7F = [_t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = prim •00CE<$[3]; $[3]; $[]> (_t0F7F, refPos0CDB);
    real _t0F81 = prim -0026<$[]> (_t0F7B, _t0F80);
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    real _t0F84 = 0.e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, dPos0CDC);
    time0F07 = prim /0055 (_t0F81, _t0F86);
    face0F08 = 2;
  }
  real _t0F87 = 0.e0;
  real _t0F88 = 0.e0;
  real _t0F89 = 0.e0;
  real _t0F8A = 0.1e1;
  vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
  real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, refPos0CDB);
  real _t0F8D = prim -0026<$[]> (_t0F87, _t0F8C);
  real _t0F8E = 0.e0;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.1e1;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, dPos0CDC);
  real _t0F93 = prim /0055 (_t0F8D, _t0F92);
  real _t0F94 = -0.e0;
  bool _t0F95 = prim >0080 (_t0F93, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = 0.e0;
  real _t0F99 = 0.1e1;
  vec3 _t0F9A = [_t0F97, _t0F98, _t0F99];
  real _t0F9B = prim •00CE<$[3]; $[3]; $[]> (_t0F9A, refPos0CDB);
  real _t0F9C = prim -0026<$[]> (_t0F96, _t0F9B);
  real _t0F9D = 0.e0;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.1e1;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, dPos0CDC);
  real _t0FA2 = prim /0055 (_t0F9C, _t0FA1);
  bool _t0FA3 = prim >0080 (time0F07, _t0FA2);
  bool _t0FA4 = prim $and01C4 (_t0F95, _t0FA3);
  if _t0FA4 {
    real _t0FA5 = 0.e0;
    real _t0FA6 = 0.e0;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.1e1;
    vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0CDB);
    real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
    real _t0FAC = 0.e0;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.1e1;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0CDC);
    time0F07 = prim /0055 (_t0FAB, _t0FB0);
    face0F08 = 3;
  }
  int _t0FB1 = -1;
  bool _t0FB2 = prim !=0086 (face0F08, _t0FB1);
  if _t0FB2 {
    real _t0FB3 = (real)face0F08;
    vec2 _t0FB4 = [time0F07, _t0FB3];
    return _t0FB4;
  } else {
    real _t0FB5 = -0.1e1;
    real _t0FB6 = -0.1e1;
    vec2 _t0FB7 = [_t0FB5, _t0FB6];
    return _t0FB7;
  }
}
function Femdata: Mesh#0 domain0FB8 (Femdata: Space arg00FB9)
{
  Femdata: Mesh _t0FBA = extractFem(arg00FB9, Mesh);
  return _t0FBA;
}
function Femdata: Space#0 space0FBB (Femdata: FemFunc arg00FBC)
{
  Femdata: Space _t0FBD = extractFem(arg00FBC, Space);
  return _t0FBD;
}
function Femdata: FuncCell#0 funcCell0FBE (Femdata: FemFunc arg00FBF, Femdata: MeshCell arg10FC0)
{
  int _t0FC1 = extractFemItem(CellIndex(MeshCell), int, arg10FC0);
  Femdata: FuncCell _t0FC2 = loadFem(FuncCell, arg00FBF, _t0FC1);
  return _t0FC2;
}
function real#1 mask0FD2 (vec3 x0FD3)
{
  real _t0FD4 = 0.1e1;
  return _t0FD4;
}
function vec3#1 color0FDB (vec3 x0FDC)
{
  real _t0FDD = prim @00A5<#∞; %3; $[]> (V0FCE, x0FDC);
  vec3 _t0FDE = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t0FDD);
  return _t0FDE;
}
function real#1 alpha0FDF (real v0FE0, real g0FE1)
{
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.1e1;
  real _t0FE4 = 0.13e1;
  real _t0FE5 = 0.1e1;
  real _t0FE6 = prim |()|00B5<$[]> (v0FE0);
  real _t0FE7 = prim *0034 (g0FE1, thick0434);
  real _t0FE8 = prim /0055 (_t0FE6, _t0FE7);
  real _t0FE9 = prim -0026<$[]> (_t0FE5, _t0FE8);
  real _t0FEA = prim *0034 (_t0FE4, _t0FE9);
  real _t0FEB = prim clamp0094<$[]> (_t0FE2, _t0FE3, _t0FEA);
  return _t0FEB;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  0cell_a0424 = _t042D;
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F = func alpha0FDF (val103A, _t103E);
                  real _t1040 = func mask0FD2 (x1025);
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057 = func color0FDB (x1025);
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function bool#0 !=0451 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0454 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0455 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t0456 = prim !=0086 (_t0454, _t0455);
  return _t0456;
}
function bool#0 ==0457 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0458 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0459 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t045A = prim ==0082 (_t0458, _t0459);
  return _t045A;
}
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function Femdata: RefCell#0 refcell04A5 (Femdata: Mesh arg004A6)
{
  Femdata: RefCell _t04A7 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004A6);
  return _t04A7;
}
function Femdata: MeshCell[]#0 cells04A8 (Femdata: Mesh arg004A9)
{
  Femdata: MeshCell[] _t04AA = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004A9);
  return _t04AA;
}
function Femdata: MeshCell[]#0 cells04AB (Femdata: Mesh arg004A9)
{
  int _t04AC = 0;
  int _t04AD = extractFemItem(NumCell(Mesh), int, arg004A9);
  int[] _t04AE = prim $range01C3 (_t04AC, _t04AD);
  Femdata: MeshCell[] accum04B1 = {};
  foreach i04AF in _t04AE {
    Femdata: MeshCell _t04B0 = loadFem(MeshCell, arg004A9, i04AF);
    accum04B1 = prim @0010<Femdata: MeshCell> (accum04B1, _t04B0);
  }
  return accum04B1;
}
function int#0 numCell04B2 (Femdata: Mesh arg004A6)
{
  int _t04B3 = extractFemItem(NumCell(Mesh), int, arg004A6);
  return _t04B3;
}
function tensor[3,3,3,3]#0 msh_transform_304B4 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04B8 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04B9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B8);
  field(3)[3,3,3] _t04BA = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04B9);
  field(3)[3,3,3,3] _t04BB = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04BA);
  tensor[3,3,3,3] _t04BC = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04BB, pos04B5);
  return _t04BC;
}
function tensor[3,3,3]#0 msh_transform_204BD (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04BE = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04BF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04BE);
  field(3)[3,3,3] _t04C0 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04BF);
  tensor[3,3,3] _t04C1 = prim @00A5<#∞; %3; $[3,3,3]> (_t04C0, pos04B5);
  return _t04C1;
}
function tensor[3,3]#0 msh_transform_104C2 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C3 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04C4 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C3);
  tensor[3,3] _t04C5 = prim @00A5<#∞; %3; $[3,3]> (_t04C4, pos04B5);
  return _t04C5;
}
function vec3#2 msh_transform_004C6 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C7 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  vec3 _t04C8 = prim @00A5<#∞; %3; $[3]> (_t04C7, pos04B5);
  return _t04C8;
}
function Femdata: MeshPos#0 _msh_newtonInverse04C9 (vec3 pos04CA, int cellInt04CB, Femdata: Mesh mesh04CC)
{
  real _t04CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04D0 = [_t04CD, _t04CE, _t04CF];
  field(3)[3] _t04D1 = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
  field(3)[3,3] _t04D2 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D1);
  field(3)[3,3] _t04D3 = prim inv015E<#∞; %3> (_t04D2);
  real _t04D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04D7 = [_t04D4, _t04D5, _t04D6];
  A04D8 = prim @00A5<#∞; %3; $[3,3]> (_t04D3, _t04D7);
  int _t04D9 = 0;
  int _t04DA = 16;
  int[] _t04DB = prim $range01C3 (_t04D9, _t04DA);
  foreach itter0507 in _t04DB {
    field(3)[3] _t04DC = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
    field(3)[3] _t04DD = prim -002E<#∞; %3; $[3]> (_t04DC, pos04CA);
    field(3)[3] _t04DE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04D8, _t04DD);
    delta04DF = prim @00A5<#∞; %3; $[3]> (_t04DE, xn04D0);
    xn04D0 = prim -0026<$[3]> (xn04D0, delta04DF);
    real _t04E0 = 0.1e-7;
    real _t04E1 = prim |()|00B5<$[3]> (delta04DF);
    bool _t04E2 = prim >=007E (_t04E0, _t04E1);
    if _t04E2 {
      real _t04E3 = 0.1e1;
      real _t04E4 = 0.1e1;
      real _t04E5 = 0.1e1;
      real _t04E6 = 0.1e1;
      vec3 _t04E7 = [_t04E4, _t04E5, _t04E6];
      real _t04E8 = prim •00CE<$[3]; $[3]; $[]> (_t04E7, xn04D0);
      bool _t04E9 = prim >0080 (_t04E3, _t04E8);
      real _t04EA = 0.1e-8;
      real _t04EB = 0.1e-8;
      real _t04EC = 0.1e-8;
      vec3 _t04ED = [_t04EA, _t04EB, _t04EC];
      vec3 _t04EE = prim +0017<$[3]> (_t04ED, xn04D0);
      real _t04EF = _t04EE[0];
      real _t04F0 = -0.e0;
      bool _t04F1 = prim >0080 (_t04EF, _t04F0);
      real _t04F2 = 0.1e-8;
      real _t04F3 = 0.1e-8;
      real _t04F4 = 0.1e-8;
      vec3 _t04F5 = [_t04F2, _t04F3, _t04F4];
      vec3 _t04F6 = prim +0017<$[3]> (_t04F5, xn04D0);
      real _t04F7 = _t04F6[1];
      real _t04F8 = -0.e0;
      bool _t04F9 = prim >0080 (_t04F7, _t04F8);
      real _t04FA = 0.1e-8;
      real _t04FB = 0.1e-8;
      real _t04FC = 0.1e-8;
      vec3 _t04FD = [_t04FA, _t04FB, _t04FC];
      vec3 _t04FE = prim +0017<$[3]> (_t04FD, xn04D0);
      real _t04FF = _t04FE[2];
      real _t0500 = -0.e0;
      bool _t0501 = prim >0080 (_t04FF, _t0500);
      bool _t0502 = prim $and01C4 (_t04F9, _t0501);
      bool _t0503 = prim $and01C4 (_t04F1, _t0502);
      bool _t0504 = prim $and01C4 (_t04E9, _t0503);
      if _t0504 {
        Femdata: MeshPos _t0505 = extractFemItemN((mesh04CC, cellInt04CB, xn04D0, pos04CA),AllBuild(MeshPos),);
        return _t0505;
      } else {
        Femdata: MeshPos _t0506 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
        return _t0506;
      }
    }
  }
  Femdata: MeshPos _t0508 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
  return _t0508;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0509 (Femdata: MeshPos pos050A)
{
  bool _t050B = extractFemItem(WorldTest(MeshPos), bool, pos050A);
  if _t050B {
    vec3 _t050C = extractFemItem(RefPos(MeshPos), vec3, pos050A);
    int _t050D = extractFemItem(CellIndex(MeshPos), int, pos050A);
    Femdata: Mesh _t050E = extractFem(pos050A, Mesh);
    vec3 _t050F = func msh_transform_004C6 (_t050C, _t050D, _t050E);
    Femdata: MeshPos _t0510 = extractFemItemN((pos050A, _t050F),NewWorld(MeshPos),);
    return _t0510;
  } else {
    return pos050A;
  }
}
function vec3#0 worldPos0511 (Femdata: MeshPos pos050A)
{
  vec3 _t0512 = extractFemItem(RefPos(MeshPos), vec3, pos050A);
  int _t0513 = extractFemItem(CellIndex(MeshPos), int, pos050A);
  Femdata: Mesh _t0514 = extractFem(pos050A, Mesh);
  vec3 _t0515 = func msh_transform_004C6 (_t0512, _t0513, _t0514);
  return _t0515;
}
function Femdata: MeshPos#0 $exitPos0516 (Femdata: Mesh mesh0517, int cellId0518, vec3 refPos0519, vec3 dPos051A, real[2] time051B)
{
  int _t051C = -1;
  real _t051D = time051B[1];
  int _t051E = prim $r2i01B7 (_t051D);
  int[2] _t0520 = func nextCell4051F (_t051E, cellId0518, mesh0517);
  int _t0521 = 0;
  int _t0522 = prim $sub01C0<int; %2> (_t0520, _t0521);
  bool _t0523 = prim !=0086 (_t051C, _t0522);
  if _t0523 {
    real _t0524 = time051B[1];
    int _t0525 = prim $r2i01B7 (_t0524);
    int[2] _t0526 = func nextCell4051F (_t0525, cellId0518, mesh0517);
    int _t0527 = 0;
    int _t0528 = prim $sub01C0<int; %2> (_t0526, _t0527);
    real _t0529 = 0.1e1;
    real _t052A = 0.e0;
    real _t052B = 0.e0;
    real _t052C = 0.e0;
    vec4 _t052D = [_t0529, _t052A, _t052B, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.222044604925e-15;
    real _t0539 = 0.e0;
    real _t053A = 0.44408920985e-15;
    real _t053B = 0.1e1;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    tensor[4,4] _t053D = [_t052D, _t0532, _t0537, _t053C];
    real _t053E = 0.173205080757e1;
    real _t053F = 0.173205080757e1;
    real _t0540 = 0.173205080757e1;
    real _t0541 = -0.173205080757e1;
    vec4 _t0542 = [_t053E, _t053F, _t0540, _t0541];
    real _t0543 = 0.1e1;
    real _t0544 = 0.2e1;
    real _t0545 = 0.1e1;
    real _t0546 = -0.1e1;
    vec4 _t0547 = [_t0543, _t0544, _t0545, _t0546];
    real _t0548 = -0.1e1;
    real _t0549 = -0.1e1;
    real _t054A = -0.192296268638e-15;
    real _t054B = 0.1e1;
    vec4 _t054C = [_t0548, _t0549, _t054A, _t054B];
    real _t054D = 0.222044604925e-15;
    real _t054E = 0.e0;
    real _t054F = 0.44408920985e-15;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    tensor[4,4] _t0552 = [_t0542, _t0547, _t054C, _t0551];
    real _t0553 = 0.1e1;
    real _t0554 = 0.2e1;
    real _t0555 = 0.1e1;
    real _t0556 = -0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    real _t0558 = 0.173205080757e1;
    real _t0559 = 0.173205080757e1;
    real _t055A = 0.173205080757e1;
    real _t055B = -0.173205080757e1;
    vec4 _t055C = [_t0558, _t0559, _t055A, _t055B];
    real _t055D = -0.1e1;
    real _t055E = -0.1e1;
    real _t055F = -0.192296268638e-15;
    real _t0560 = 0.1e1;
    vec4 _t0561 = [_t055D, _t055E, _t055F, _t0560];
    real _t0562 = 0.222044604925e-15;
    real _t0563 = 0.e0;
    real _t0564 = 0.44408920985e-15;
    real _t0565 = 0.1e1;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    tensor[4,4] _t0567 = [_t0557, _t055C, _t0561, _t0566];
    real _t0568 = 0.1e1;
    real _t0569 = 0.2e1;
    real _t056A = 0.1e1;
    real _t056B = -0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    real _t056D = -0.1e1;
    real _t056E = -0.1e1;
    real _t056F = -0.192296268638e-15;
    real _t0570 = 0.1e1;
    vec4 _t0571 = [_t056D, _t056E, _t056F, _t0570];
    real _t0572 = 0.173205080757e1;
    real _t0573 = 0.173205080757e1;
    real _t0574 = 0.173205080757e1;
    real _t0575 = -0.173205080757e1;
    vec4 _t0576 = [_t0572, _t0573, _t0574, _t0575];
    real _t0577 = 0.222044604925e-15;
    real _t0578 = 0.e0;
    real _t0579 = 0.44408920985e-15;
    real _t057A = 0.1e1;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    tensor[4,4] _t057C = [_t056C, _t0571, _t0576, _t057B];
    tensor[4,4][4] _t057D = {_t053D, _t0552, _t0567, _t057C};
    real _t057E = 0.57735026919e0;
    real _t057F = -0.1e1;
    real _t0580 = -0.1e1;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = -0.57735026919e0;
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.57735026919e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    real _t0590 = 0.1e1;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    tensor[4,4] _t0592 = [_t0582, _t0587, _t058C, _t0591];
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    real _t0595 = 0.e0;
    real _t0596 = 0.e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.e0;
    real _t0599 = 0.1e1;
    real _t059A = 0.e0;
    real _t059B = 0.e0;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    real _t059D = 0.e0;
    real _t059E = 0.e0;
    real _t059F = 0.1e1;
    real _t05A0 = 0.e0;
    vec4 _t05A1 = [_t059D, _t059E, _t059F, _t05A0];
    real _t05A2 = 0.e0;
    real _t05A3 = 0.e0;
    real _t05A4 = 0.e0;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    tensor[4,4] _t05A7 = [_t0597, _t059C, _t05A1, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.1e1;
    real _t05AA = 0.e0;
    real _t05AB = 0.e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.1e1;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.e0;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    real _t05B5 = 0.e0;
    vec4 _t05B6 = [_t05B2, _t05B3, _t05B4, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = 0.e0;
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    tensor[4,4] _t05BC = [_t05AC, _t05B1, _t05B6, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.1e1;
    real _t05C5 = 0.e0;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    vec4 _t05CB = [_t05C7, _t05C8, _t05C9, _t05CA];
    real _t05CC = 0.e0;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    tensor[4,4] _t05D1 = [_t05C1, _t05C6, _t05CB, _t05D0];
    tensor[4,4][4] _t05D2 = {_t0592, _t05A7, _t05BC, _t05D1};
    real _t05D3 = -0.1e1;
    real _t05D4 = 0.57735026919e0;
    real _t05D5 = -0.1e1;
    real _t05D6 = 0.1e1;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = -0.57735026919e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.57735026919e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.1e1;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    tensor[4,4] _t05E7 = [_t05D7, _t05DC, _t05E1, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.1e1;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.1e1;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.1e1;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    tensor[4,4][4] _t0627 = {_t05E7, _t05FC, _t0611, _t0626};
    real _t0628 = -0.1e1;
    real _t0629 = -0.1e1;
    real _t062A = 0.57735026919e0;
    real _t062B = 0.1e1;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    real _t0634 = 0.57735026919e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    real _t0652 = 0.1e1;
    real _t0653 = 0.e0;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    tensor[4,4] _t0666 = [_t0656, _t065B, _t0660, _t0665];
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = 0.e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    tensor[4,4][4] _t067C = {_t063C, _t0651, _t0666, _t067B};
    tensor[4,4][4][4] _t067D = {_t057D, _t05D2, _t0627, _t067C};
    real _t067E = time051B[1];
    int _t067F = prim $r2i01B7 (_t067E);
    tensor[4,4][4] _t0680 = prim $sub01C0<tensor[4,4][4]; %4> (_t067D, _t067F);
    real _t0681 = time051B[1];
    int _t0682 = prim $r2i01B7 (_t0681);
    int[2] _t0683 = func nextCell4051F (_t0682, cellId0518, mesh0517);
    int _t0684 = 1;
    int _t0685 = prim $sub01C0<int; %2> (_t0683, _t0684);
    tensor[4,4] _t0686 = prim $sub01C0<tensor[4,4]; %4> (_t0680, _t0685);
    real _t0687 = time051B[0];
    vec3 _t0688 = prim *0036<$[3]> (_t0687, dPos051A);
    vec3 _t0689 = prim +0017<$[3]> (_t0688, refPos0519);
    real _t068A = _t0689[0];
    real _t068B = time051B[0];
    vec3 _t068C = prim *0036<$[3]> (_t068B, dPos051A);
    vec3 _t068D = prim +0017<$[3]> (_t068C, refPos0519);
    real _t068E = _t068D[1];
    real _t068F = time051B[0];
    vec3 _t0690 = prim *0036<$[3]> (_t068F, dPos051A);
    vec3 _t0691 = prim +0017<$[3]> (_t0690, refPos0519);
    real _t0692 = _t0691[2];
    real _t0693 = 0.1e1;
    vec4 _t0694 = [_t068A, _t068E, _t0692, _t0693];
    vec4 _t0695 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0686, _t0694);
    real _t0696 = _t0695[0];
    real _t0697 = 0.1e1;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    real _t06A6 = 0.222044604925e-15;
    real _t06A7 = 0.e0;
    real _t06A8 = 0.44408920985e-15;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    tensor[4,4] _t06AB = [_t069B, _t06A0, _t06A5, _t06AA];
    real _t06AC = 0.173205080757e1;
    real _t06AD = 0.173205080757e1;
    real _t06AE = 0.173205080757e1;
    real _t06AF = -0.173205080757e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.2e1;
    real _t06B3 = 0.1e1;
    real _t06B4 = -0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = -0.1e1;
    real _t06B7 = -0.1e1;
    real _t06B8 = -0.192296268638e-15;
    real _t06B9 = 0.1e1;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.222044604925e-15;
    real _t06BC = 0.e0;
    real _t06BD = 0.44408920985e-15;
    real _t06BE = 0.1e1;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    tensor[4,4] _t06C0 = [_t06B0, _t06B5, _t06BA, _t06BF];
    real _t06C1 = 0.1e1;
    real _t06C2 = 0.2e1;
    real _t06C3 = 0.1e1;
    real _t06C4 = -0.1e1;
    vec4 _t06C5 = [_t06C1, _t06C2, _t06C3, _t06C4];
    real _t06C6 = 0.173205080757e1;
    real _t06C7 = 0.173205080757e1;
    real _t06C8 = 0.173205080757e1;
    real _t06C9 = -0.173205080757e1;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = -0.1e1;
    real _t06CC = -0.1e1;
    real _t06CD = -0.192296268638e-15;
    real _t06CE = 0.1e1;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.222044604925e-15;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.44408920985e-15;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    tensor[4,4] _t06D5 = [_t06C5, _t06CA, _t06CF, _t06D4];
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.2e1;
    real _t06D8 = 0.1e1;
    real _t06D9 = -0.1e1;
    vec4 _t06DA = [_t06D6, _t06D7, _t06D8, _t06D9];
    real _t06DB = -0.1e1;
    real _t06DC = -0.1e1;
    real _t06DD = -0.192296268638e-15;
    real _t06DE = 0.1e1;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.173205080757e1;
    real _t06E1 = 0.173205080757e1;
    real _t06E2 = 0.173205080757e1;
    real _t06E3 = -0.173205080757e1;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.222044604925e-15;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.44408920985e-15;
    real _t06E8 = 0.1e1;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    tensor[4,4] _t06EA = [_t06DA, _t06DF, _t06E4, _t06E9];
    tensor[4,4][4] _t06EB = {_t06AB, _t06C0, _t06D5, _t06EA};
    real _t06EC = 0.57735026919e0;
    real _t06ED = -0.1e1;
    real _t06EE = -0.1e1;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = -0.57735026919e0;
    real _t06F2 = 0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.57735026919e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    tensor[4,4] _t0700 = [_t06F0, _t06F5, _t06FA, _t06FF];
    real _t0701 = 0.1e1;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    vec4 _t0705 = [_t0701, _t0702, _t0703, _t0704];
    real _t0706 = 0.e0;
    real _t0707 = 0.1e1;
    real _t0708 = 0.e0;
    real _t0709 = 0.e0;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    tensor[4,4] _t0715 = [_t0705, _t070A, _t070F, _t0714];
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    vec4 _t071A = [_t0716, _t0717, _t0718, _t0719];
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    tensor[4,4] _t072A = [_t071A, _t071F, _t0724, _t0729];
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    vec4 _t072F = [_t072B, _t072C, _t072D, _t072E];
    real _t0730 = 0.e0;
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.1e1;
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    tensor[4,4] _t073F = [_t072F, _t0734, _t0739, _t073E];
    tensor[4,4][4] _t0740 = {_t0700, _t0715, _t072A, _t073F};
    real _t0741 = -0.1e1;
    real _t0742 = 0.57735026919e0;
    real _t0743 = -0.1e1;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = -0.57735026919e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.57735026919e0;
    real _t074D = 0.1e1;
    real _t074E = 0.e0;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    vec4 _t0754 = [_t0750, _t0751, _t0752, _t0753];
    tensor[4,4] _t0755 = [_t0745, _t074A, _t074F, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.1e1;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    tensor[4,4] _t076A = [_t075A, _t075F, _t0764, _t0769];
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.1e1;
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.e0;
    real _t077C = 0.e0;
    real _t077D = 0.1e1;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    tensor[4,4] _t077F = [_t076F, _t0774, _t0779, _t077E];
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    vec4 _t0784 = [_t0780, _t0781, _t0782, _t0783];
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.1e1;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.e0;
    real _t0791 = 0.e0;
    real _t0792 = 0.1e1;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    tensor[4,4] _t0794 = [_t0784, _t0789, _t078E, _t0793];
    tensor[4,4][4] _t0795 = {_t0755, _t076A, _t077F, _t0794};
    real _t0796 = -0.1e1;
    real _t0797 = -0.1e1;
    real _t0798 = 0.57735026919e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    real _t07A2 = 0.57735026919e0;
    real _t07A3 = 0.e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.e0;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    real _t07C0 = 0.1e1;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    real _t07C5 = 0.e0;
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    vec4 _t07C9 = [_t07C5, _t07C6, _t07C7, _t07C8];
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    tensor[4,4] _t07D4 = [_t07C4, _t07C9, _t07CE, _t07D3];
    real _t07D5 = 0.1e1;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    real _t07DA = 0.e0;
    real _t07DB = 0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    vec4 _t07DE = [_t07DA, _t07DB, _t07DC, _t07DD];
    real _t07DF = 0.e0;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.1e1;
    real _t07E2 = 0.e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = 0.e0;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    tensor[4,4] _t07E9 = [_t07D9, _t07DE, _t07E3, _t07E8];
    tensor[4,4][4] _t07EA = {_t07AA, _t07BF, _t07D4, _t07E9};
    tensor[4,4][4][4] _t07EB = {_t06EB, _t0740, _t0795, _t07EA};
    real _t07EC = time051B[1];
    int _t07ED = prim $r2i01B7 (_t07EC);
    tensor[4,4][4] _t07EE = prim $sub01C0<tensor[4,4][4]; %4> (_t07EB, _t07ED);
    real _t07EF = time051B[1];
    int _t07F0 = prim $r2i01B7 (_t07EF);
    int[2] _t07F1 = func nextCell4051F (_t07F0, cellId0518, mesh0517);
    int _t07F2 = 1;
    int _t07F3 = prim $sub01C0<int; %2> (_t07F1, _t07F2);
    tensor[4,4] _t07F4 = prim $sub01C0<tensor[4,4]; %4> (_t07EE, _t07F3);
    real _t07F5 = time051B[0];
    vec3 _t07F6 = prim *0036<$[3]> (_t07F5, dPos051A);
    vec3 _t07F7 = prim +0017<$[3]> (_t07F6, refPos0519);
    real _t07F8 = _t07F7[0];
    real _t07F9 = time051B[0];
    vec3 _t07FA = prim *0036<$[3]> (_t07F9, dPos051A);
    vec3 _t07FB = prim +0017<$[3]> (_t07FA, refPos0519);
    real _t07FC = _t07FB[1];
    real _t07FD = time051B[0];
    vec3 _t07FE = prim *0036<$[3]> (_t07FD, dPos051A);
    vec3 _t07FF = prim +0017<$[3]> (_t07FE, refPos0519);
    real _t0800 = _t07FF[2];
    real _t0801 = 0.1e1;
    vec4 _t0802 = [_t07F8, _t07FC, _t0800, _t0801];
    vec4 _t0803 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07F4, _t0802);
    real _t0804 = _t0803[1];
    real _t0805 = 0.1e1;
    real _t0806 = 0.e0;
    real _t0807 = 0.e0;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.1e1;
    real _t0812 = 0.e0;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    real _t0814 = 0.222044604925e-15;
    real _t0815 = 0.e0;
    real _t0816 = 0.44408920985e-15;
    real _t0817 = 0.1e1;
    vec4 _t0818 = [_t0814, _t0815, _t0816, _t0817];
    tensor[4,4] _t0819 = [_t0809, _t080E, _t0813, _t0818];
    real _t081A = 0.173205080757e1;
    real _t081B = 0.173205080757e1;
    real _t081C = 0.173205080757e1;
    real _t081D = -0.173205080757e1;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.1e1;
    real _t0820 = 0.2e1;
    real _t0821 = 0.1e1;
    real _t0822 = -0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = -0.1e1;
    real _t0825 = -0.1e1;
    real _t0826 = -0.192296268638e-15;
    real _t0827 = 0.1e1;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.222044604925e-15;
    real _t082A = 0.e0;
    real _t082B = 0.44408920985e-15;
    real _t082C = 0.1e1;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    tensor[4,4] _t082E = [_t081E, _t0823, _t0828, _t082D];
    real _t082F = 0.1e1;
    real _t0830 = 0.2e1;
    real _t0831 = 0.1e1;
    real _t0832 = -0.1e1;
    vec4 _t0833 = [_t082F, _t0830, _t0831, _t0832];
    real _t0834 = 0.173205080757e1;
    real _t0835 = 0.173205080757e1;
    real _t0836 = 0.173205080757e1;
    real _t0837 = -0.173205080757e1;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = -0.1e1;
    real _t083A = -0.1e1;
    real _t083B = -0.192296268638e-15;
    real _t083C = 0.1e1;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.222044604925e-15;
    real _t083F = 0.e0;
    real _t0840 = 0.44408920985e-15;
    real _t0841 = 0.1e1;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    tensor[4,4] _t0843 = [_t0833, _t0838, _t083D, _t0842];
    real _t0844 = 0.1e1;
    real _t0845 = 0.2e1;
    real _t0846 = 0.1e1;
    real _t0847 = -0.1e1;
    vec4 _t0848 = [_t0844, _t0845, _t0846, _t0847];
    real _t0849 = -0.1e1;
    real _t084A = -0.1e1;
    real _t084B = -0.192296268638e-15;
    real _t084C = 0.1e1;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = 0.173205080757e1;
    real _t084F = 0.173205080757e1;
    real _t0850 = 0.173205080757e1;
    real _t0851 = -0.173205080757e1;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.222044604925e-15;
    real _t0854 = 0.e0;
    real _t0855 = 0.44408920985e-15;
    real _t0856 = 0.1e1;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    tensor[4,4] _t0858 = [_t0848, _t084D, _t0852, _t0857];
    tensor[4,4][4] _t0859 = {_t0819, _t082E, _t0843, _t0858};
    real _t085A = 0.57735026919e0;
    real _t085B = -0.1e1;
    real _t085C = -0.1e1;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = -0.57735026919e0;
    real _t0860 = 0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.57735026919e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    real _t086F = 0.1e1;
    real _t0870 = 0.e0;
    real _t0871 = 0.e0;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    real _t0876 = 0.e0;
    real _t0877 = 0.e0;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.e0;
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.1e1;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    tensor[4,4] _t0883 = [_t0873, _t0878, _t087D, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.1e1;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.e0;
    real _t088F = 0.e0;
    real _t0890 = 0.1e1;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    tensor[4,4] _t0898 = [_t0888, _t088D, _t0892, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    tensor[4,4] _t08AD = [_t089D, _t08A2, _t08A7, _t08AC];
    tensor[4,4][4] _t08AE = {_t086E, _t0883, _t0898, _t08AD};
    real _t08AF = -0.1e1;
    real _t08B0 = 0.57735026919e0;
    real _t08B1 = -0.1e1;
    real _t08B2 = 0.1e1;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = -0.57735026919e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.57735026919e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.e0;
    real _t08FF = 0.e0;
    real _t0900 = 0.1e1;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    tensor[4,4] _t0902 = [_t08F2, _t08F7, _t08FC, _t0901];
    tensor[4,4][4] _t0903 = {_t08C3, _t08D8, _t08ED, _t0902};
    real _t0904 = -0.1e1;
    real _t0905 = -0.1e1;
    real _t0906 = 0.57735026919e0;
    real _t0907 = 0.1e1;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.1e1;
    real _t090A = 0.e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.1e1;
    real _t0910 = 0.57735026919e0;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.1e1;
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.e0;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    real _t092E = 0.1e1;
    real _t092F = 0.e0;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.e0;
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.1e1;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    tensor[4,4] _t0942 = [_t0932, _t0937, _t093C, _t0941];
    real _t0943 = 0.1e1;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.e0;
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    tensor[4,4] _t0957 = [_t0947, _t094C, _t0951, _t0956];
    tensor[4,4][4] _t0958 = {_t0918, _t092D, _t0942, _t0957};
    tensor[4,4][4][4] _t0959 = {_t0859, _t08AE, _t0903, _t0958};
    real _t095A = time051B[1];
    int _t095B = prim $r2i01B7 (_t095A);
    tensor[4,4][4] _t095C = prim $sub01C0<tensor[4,4][4]; %4> (_t0959, _t095B);
    real _t095D = time051B[1];
    int _t095E = prim $r2i01B7 (_t095D);
    int[2] _t095F = func nextCell4051F (_t095E, cellId0518, mesh0517);
    int _t0960 = 1;
    int _t0961 = prim $sub01C0<int; %2> (_t095F, _t0960);
    tensor[4,4] _t0962 = prim $sub01C0<tensor[4,4]; %4> (_t095C, _t0961);
    real _t0963 = time051B[0];
    vec3 _t0964 = prim *0036<$[3]> (_t0963, dPos051A);
    vec3 _t0965 = prim +0017<$[3]> (_t0964, refPos0519);
    real _t0966 = _t0965[0];
    real _t0967 = time051B[0];
    vec3 _t0968 = prim *0036<$[3]> (_t0967, dPos051A);
    vec3 _t0969 = prim +0017<$[3]> (_t0968, refPos0519);
    real _t096A = _t0969[1];
    real _t096B = time051B[0];
    vec3 _t096C = prim *0036<$[3]> (_t096B, dPos051A);
    vec3 _t096D = prim +0017<$[3]> (_t096C, refPos0519);
    real _t096E = _t096D[2];
    real _t096F = 0.1e1;
    vec4 _t0970 = [_t0966, _t096A, _t096E, _t096F];
    vec4 _t0971 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0962, _t0970);
    real _t0972 = _t0971[2];
    vec3 _t0973 = [_t0696, _t0804, _t0972];
    Femdata: MeshPos _t0974 = extractFemItemN((mesh0517, _t0528, _t0973),RefBuild(Mesh),);
    return _t0974;
  } else {
    real _t0975 = time051B[0];
    vec3 _t0976 = prim *0036<$[3]> (_t0975, dPos051A);
    vec3 _t0977 = prim +0017<$[3]> (_t0976, refPos0519);
    Femdata: MeshPos _t0978 = extractFemItemN((mesh0517, _t0977),InvalidBuildBoundary(MeshPos),);
    return _t0978;
  }
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
function int[2]#0 $nextCell20982 (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  nearbyCells0983 = extractFemItem2(CellConnectivity(Mesh), int, mesh097B, cell097A : int);
  int _t0984 = 0;
  int _t0985 = 1;
  int _t0986 = 3;
  int[2] _t0987 = {_t0985, _t0986};
  int _t0988 = 3;
  int _t0989 = 3;
  int[2] _t098A = {_t0988, _t0989};
  int _t098B = 9;
  int _t098C = 3;
  int[2] _t098D = {_t098B, _t098C};
  int _t098E = 27;
  int _t098F = 3;
  int[2] _t0990 = {_t098E, _t098F};
  int[2][4] _t0991 = {_t0987, _t098A, _t098D, _t0990};
  int[2] _t0992 = prim $sub01C0<int[2]; %4> (_t0991, faceIdx0979);
  int _t0993 = 1;
  int _t0994 = prim $sub01C0<int; %2> (_t0992, _t0993);
  int[] _t0995 = prim $range01C3 (_t0984, _t0994);
  int[] accum09B6 = {};
  foreach i09B3 in _t0995 {
    int _t0996 = 1;
    int _t0997 = 2;
    int _t0998 = 3;
    int _t0999 = 0;
    int _t099A = 2;
    int _t099B = 3;
    int _t099C = 0;
    int _t099D = 1;
    int _t099E = 3;
    int _t099F = 0;
    int _t09A0 = 1;
    int _t09A1 = 2;
    int[12] _t09A2 = {_t0996, _t0997, _t0998, _t0999, _t099A, _t099B, _t099C, _t099D, _t099E, _t099F, _t09A0, _t09A1};
    int _t09A3 = 1;
    int _t09A4 = 3;
    int[2] _t09A5 = {_t09A3, _t09A4};
    int _t09A6 = 3;
    int _t09A7 = 3;
    int[2] _t09A8 = {_t09A6, _t09A7};
    int _t09A9 = 9;
    int _t09AA = 3;
    int[2] _t09AB = {_t09A9, _t09AA};
    int _t09AC = 27;
    int _t09AD = 3;
    int[2] _t09AE = {_t09AC, _t09AD};
    int[2][4] _t09AF = {_t09A5, _t09A8, _t09AB, _t09AE};
    int[2] _t09B0 = prim $sub01C0<int[2]; %4> (_t09AF, faceIdx0979);
    int _t09B1 = 0;
    int _t09B2 = prim $sub01C0<int; %2> (_t09B0, _t09B1);
    int _t09B4 = prim +0015 (_t09B2, i09B3);
    int _t09B5 = prim $sub01C0<int; %12> (_t09A2, _t09B4);
    accum09B6 = prim @0010<int> (accum09B6, _t09B5);
  }
  numFacetNodes09B7 = prim length0123<int> (accum09B6);
  int _t09B8 = 3;
  bool _t09B9 = prim ==0082 (_t09B8, numFacetNodes09B7);
  if _t09B9 {
    foreach cellInt09BA in nearbyCells0983 {
      int[4] _t09BB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BC = 1;
      int _t09BD = prim $sub01C0<int; %4> (_t09BB, _t09BC);
      int[4] _t09BE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BF = 2;
      int _t09C0 = prim $sub01C0<int; %4> (_t09BE, _t09BF);
      int[4] _t09C1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09C2 = 3;
      int _t09C3 = prim $sub01C0<int; %4> (_t09C1, _t09C2);
      int[3] _t09C4 = {_t09BD, _t09C0, _t09C3};
      int _t09C5 = 0;
      int _t09C6 = prim $sub01C0<int; %3> (_t09C4, _t09C5);
      int _t09C7 = 0;
      int _t09C8 = 1;
      int _t09C9 = 3;
      int[2] _t09CA = {_t09C8, _t09C9};
      int _t09CB = 3;
      int _t09CC = 3;
      int[2] _t09CD = {_t09CB, _t09CC};
      int _t09CE = 9;
      int _t09CF = 3;
      int[2] _t09D0 = {_t09CE, _t09CF};
      int _t09D1 = 27;
      int _t09D2 = 3;
      int[2] _t09D3 = {_t09D1, _t09D2};
      int[2][4] _t09D4 = {_t09CA, _t09CD, _t09D0, _t09D3};
      int[2] _t09D5 = prim $sub01C0<int[2]; %4> (_t09D4, faceIdx0979);
      int _t09D6 = 1;
      int _t09D7 = prim $sub01C0<int; %2> (_t09D5, _t09D6);
      int[] _t09D8 = prim $range01C3 (_t09C7, _t09D7);
      int[] accum09F8 = {};
      foreach i09B3 in _t09D8 {
        int _t09D9 = 1;
        int _t09DA = 2;
        int _t09DB = 3;
        int _t09DC = 0;
        int _t09DD = 2;
        int _t09DE = 3;
        int _t09DF = 0;
        int _t09E0 = 1;
        int _t09E1 = 3;
        int _t09E2 = 0;
        int _t09E3 = 1;
        int _t09E4 = 2;
        int[12] _t09E5 = {_t09D9, _t09DA, _t09DB, _t09DC, _t09DD, _t09DE, _t09DF, _t09E0, _t09E1, _t09E2, _t09E3, _t09E4};
        int _t09E6 = 1;
        int _t09E7 = 3;
        int[2] _t09E8 = {_t09E6, _t09E7};
        int _t09E9 = 3;
        int _t09EA = 3;
        int[2] _t09EB = {_t09E9, _t09EA};
        int _t09EC = 9;
        int _t09ED = 3;
        int[2] _t09EE = {_t09EC, _t09ED};
        int _t09EF = 27;
        int _t09F0 = 3;
        int[2] _t09F1 = {_t09EF, _t09F0};
        int[2][4] _t09F2 = {_t09E8, _t09EB, _t09EE, _t09F1};
        int[2] _t09F3 = prim $sub01C0<int[2]; %4> (_t09F2, faceIdx0979);
        int _t09F4 = 0;
        int _t09F5 = prim $sub01C0<int; %2> (_t09F3, _t09F4);
        int _t09F6 = prim +0015 (_t09F5, i09B3);
        int _t09F7 = prim $sub01C0<int; %12> (_t09E5, _t09F6);
        accum09F8 = prim @0010<int> (accum09F8, _t09F7);
      }
      int _t09F9 = 0;
      int _t09FA = prim $dynsub01C2<int> (accum09F8, _t09F9);
      bool _t09FB = prim ==0082 (_t09C6, _t09FA);
      int[4] _t09FC = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09FD = 1;
      int _t09FE = prim $sub01C0<int; %4> (_t09FC, _t09FD);
      int[4] _t09FF = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A00 = 2;
      int _t0A01 = prim $sub01C0<int; %4> (_t09FF, _t0A00);
      int[4] _t0A02 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A03 = 3;
      int _t0A04 = prim $sub01C0<int; %4> (_t0A02, _t0A03);
      int[3] _t0A05 = {_t09FE, _t0A01, _t0A04};
      int _t0A06 = 1;
      int _t0A07 = prim $sub01C0<int; %3> (_t0A05, _t0A06);
      int _t0A08 = 0;
      int _t0A09 = 1;
      int _t0A0A = 3;
      int[2] _t0A0B = {_t0A09, _t0A0A};
      int _t0A0C = 3;
      int _t0A0D = 3;
      int[2] _t0A0E = {_t0A0C, _t0A0D};
      int _t0A0F = 9;
      int _t0A10 = 3;
      int[2] _t0A11 = {_t0A0F, _t0A10};
      int _t0A12 = 27;
      int _t0A13 = 3;
      int[2] _t0A14 = {_t0A12, _t0A13};
      int[2][4] _t0A15 = {_t0A0B, _t0A0E, _t0A11, _t0A14};
      int[2] _t0A16 = prim $sub01C0<int[2]; %4> (_t0A15, faceIdx0979);
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %2> (_t0A16, _t0A17);
      int[] _t0A19 = prim $range01C3 (_t0A08, _t0A18);
      int[] accum0A39 = {};
      foreach i09B3 in _t0A19 {
        int _t0A1A = 1;
        int _t0A1B = 2;
        int _t0A1C = 3;
        int _t0A1D = 0;
        int _t0A1E = 2;
        int _t0A1F = 3;
        int _t0A20 = 0;
        int _t0A21 = 1;
        int _t0A22 = 3;
        int _t0A23 = 0;
        int _t0A24 = 1;
        int _t0A25 = 2;
        int[12] _t0A26 = {_t0A1A, _t0A1B, _t0A1C, _t0A1D, _t0A1E, _t0A1F, _t0A20, _t0A21, _t0A22, _t0A23, _t0A24, _t0A25};
        int _t0A27 = 1;
        int _t0A28 = 3;
        int[2] _t0A29 = {_t0A27, _t0A28};
        int _t0A2A = 3;
        int _t0A2B = 3;
        int[2] _t0A2C = {_t0A2A, _t0A2B};
        int _t0A2D = 9;
        int _t0A2E = 3;
        int[2] _t0A2F = {_t0A2D, _t0A2E};
        int _t0A30 = 27;
        int _t0A31 = 3;
        int[2] _t0A32 = {_t0A30, _t0A31};
        int[2][4] _t0A33 = {_t0A29, _t0A2C, _t0A2F, _t0A32};
        int[2] _t0A34 = prim $sub01C0<int[2]; %4> (_t0A33, faceIdx0979);
        int _t0A35 = 0;
        int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
        int _t0A37 = prim +0015 (_t0A36, i09B3);
        int _t0A38 = prim $sub01C0<int; %12> (_t0A26, _t0A37);
        accum0A39 = prim @0010<int> (accum0A39, _t0A38);
      }
      int _t0A3A = 1;
      int _t0A3B = prim $dynsub01C2<int> (accum0A39, _t0A3A);
      bool _t0A3C = prim ==0082 (_t0A07, _t0A3B);
      int[4] _t0A3D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A3E = 1;
      int _t0A3F = prim $sub01C0<int; %4> (_t0A3D, _t0A3E);
      int[4] _t0A40 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A41 = 2;
      int _t0A42 = prim $sub01C0<int; %4> (_t0A40, _t0A41);
      int[4] _t0A43 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A44 = 3;
      int _t0A45 = prim $sub01C0<int; %4> (_t0A43, _t0A44);
      int[3] _t0A46 = {_t0A3F, _t0A42, _t0A45};
      int _t0A47 = 2;
      int _t0A48 = prim $sub01C0<int; %3> (_t0A46, _t0A47);
      int _t0A49 = 0;
      int _t0A4A = 1;
      int _t0A4B = 3;
      int[2] _t0A4C = {_t0A4A, _t0A4B};
      int _t0A4D = 3;
      int _t0A4E = 3;
      int[2] _t0A4F = {_t0A4D, _t0A4E};
      int _t0A50 = 9;
      int _t0A51 = 3;
      int[2] _t0A52 = {_t0A50, _t0A51};
      int _t0A53 = 27;
      int _t0A54 = 3;
      int[2] _t0A55 = {_t0A53, _t0A54};
      int[2][4] _t0A56 = {_t0A4C, _t0A4F, _t0A52, _t0A55};
      int[2] _t0A57 = prim $sub01C0<int[2]; %4> (_t0A56, faceIdx0979);
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %2> (_t0A57, _t0A58);
      int[] _t0A5A = prim $range01C3 (_t0A49, _t0A59);
      int[] accum0A7A = {};
      foreach i09B3 in _t0A5A {
        int _t0A5B = 1;
        int _t0A5C = 2;
        int _t0A5D = 3;
        int _t0A5E = 0;
        int _t0A5F = 2;
        int _t0A60 = 3;
        int _t0A61 = 0;
        int _t0A62 = 1;
        int _t0A63 = 3;
        int _t0A64 = 0;
        int _t0A65 = 1;
        int _t0A66 = 2;
        int[12] _t0A67 = {_t0A5B, _t0A5C, _t0A5D, _t0A5E, _t0A5F, _t0A60, _t0A61, _t0A62, _t0A63, _t0A64, _t0A65, _t0A66};
        int _t0A68 = 1;
        int _t0A69 = 3;
        int[2] _t0A6A = {_t0A68, _t0A69};
        int _t0A6B = 3;
        int _t0A6C = 3;
        int[2] _t0A6D = {_t0A6B, _t0A6C};
        int _t0A6E = 9;
        int _t0A6F = 3;
        int[2] _t0A70 = {_t0A6E, _t0A6F};
        int _t0A71 = 27;
        int _t0A72 = 3;
        int[2] _t0A73 = {_t0A71, _t0A72};
        int[2][4] _t0A74 = {_t0A6A, _t0A6D, _t0A70, _t0A73};
        int[2] _t0A75 = prim $sub01C0<int[2]; %4> (_t0A74, faceIdx0979);
        int _t0A76 = 0;
        int _t0A77 = prim $sub01C0<int; %2> (_t0A75, _t0A76);
        int _t0A78 = prim +0015 (_t0A77, i09B3);
        int _t0A79 = prim $sub01C0<int; %12> (_t0A67, _t0A78);
        accum0A7A = prim @0010<int> (accum0A7A, _t0A79);
      }
      int _t0A7B = 2;
      int _t0A7C = prim $dynsub01C2<int> (accum0A7A, _t0A7B);
      bool _t0A7D = prim ==0082 (_t0A48, _t0A7C);
      bool _t0A7E = prim $and01C4 (_t0A3C, _t0A7D);
      bool _t0A7F = prim $and01C4 (_t09FB, _t0A7E);
      if _t0A7F {
        int _t0A80 = 0;
        int[2] _t0A81 = {cellInt09BA, _t0A80};
        return _t0A81;
      }
      int[4] _t0A82 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A83 = 0;
      int _t0A84 = prim $sub01C0<int; %4> (_t0A82, _t0A83);
      int[4] _t0A85 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A86 = 2;
      int _t0A87 = prim $sub01C0<int; %4> (_t0A85, _t0A86);
      int[4] _t0A88 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A89 = 3;
      int _t0A8A = prim $sub01C0<int; %4> (_t0A88, _t0A89);
      int[3] _t0A8B = {_t0A84, _t0A87, _t0A8A};
      int _t0A8C = 0;
      int _t0A8D = prim $sub01C0<int; %3> (_t0A8B, _t0A8C);
      int _t0A8E = 0;
      int _t0A8F = 1;
      int _t0A90 = 3;
      int[2] _t0A91 = {_t0A8F, _t0A90};
      int _t0A92 = 3;
      int _t0A93 = 3;
      int[2] _t0A94 = {_t0A92, _t0A93};
      int _t0A95 = 9;
      int _t0A96 = 3;
      int[2] _t0A97 = {_t0A95, _t0A96};
      int _t0A98 = 27;
      int _t0A99 = 3;
      int[2] _t0A9A = {_t0A98, _t0A99};
      int[2][4] _t0A9B = {_t0A91, _t0A94, _t0A97, _t0A9A};
      int[2] _t0A9C = prim $sub01C0<int[2]; %4> (_t0A9B, faceIdx0979);
      int _t0A9D = 1;
      int _t0A9E = prim $sub01C0<int; %2> (_t0A9C, _t0A9D);
      int[] _t0A9F = prim $range01C3 (_t0A8E, _t0A9E);
      int[] accum0ABF = {};
      foreach i09B3 in _t0A9F {
        int _t0AA0 = 1;
        int _t0AA1 = 2;
        int _t0AA2 = 3;
        int _t0AA3 = 0;
        int _t0AA4 = 2;
        int _t0AA5 = 3;
        int _t0AA6 = 0;
        int _t0AA7 = 1;
        int _t0AA8 = 3;
        int _t0AA9 = 0;
        int _t0AAA = 1;
        int _t0AAB = 2;
        int[12] _t0AAC = {_t0AA0, _t0AA1, _t0AA2, _t0AA3, _t0AA4, _t0AA5, _t0AA6, _t0AA7, _t0AA8, _t0AA9, _t0AAA, _t0AAB};
        int _t0AAD = 1;
        int _t0AAE = 3;
        int[2] _t0AAF = {_t0AAD, _t0AAE};
        int _t0AB0 = 3;
        int _t0AB1 = 3;
        int[2] _t0AB2 = {_t0AB0, _t0AB1};
        int _t0AB3 = 9;
        int _t0AB4 = 3;
        int[2] _t0AB5 = {_t0AB3, _t0AB4};
        int _t0AB6 = 27;
        int _t0AB7 = 3;
        int[2] _t0AB8 = {_t0AB6, _t0AB7};
        int[2][4] _t0AB9 = {_t0AAF, _t0AB2, _t0AB5, _t0AB8};
        int[2] _t0ABA = prim $sub01C0<int[2]; %4> (_t0AB9, faceIdx0979);
        int _t0ABB = 0;
        int _t0ABC = prim $sub01C0<int; %2> (_t0ABA, _t0ABB);
        int _t0ABD = prim +0015 (_t0ABC, i09B3);
        int _t0ABE = prim $sub01C0<int; %12> (_t0AAC, _t0ABD);
        accum0ABF = prim @0010<int> (accum0ABF, _t0ABE);
      }
      int _t0AC0 = 0;
      int _t0AC1 = prim $dynsub01C2<int> (accum0ABF, _t0AC0);
      bool _t0AC2 = prim ==0082 (_t0A8D, _t0AC1);
      int[4] _t0AC3 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC4 = 0;
      int _t0AC5 = prim $sub01C0<int; %4> (_t0AC3, _t0AC4);
      int[4] _t0AC6 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC7 = 2;
      int _t0AC8 = prim $sub01C0<int; %4> (_t0AC6, _t0AC7);
      int[4] _t0AC9 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0ACA = 3;
      int _t0ACB = prim $sub01C0<int; %4> (_t0AC9, _t0ACA);
      int[3] _t0ACC = {_t0AC5, _t0AC8, _t0ACB};
      int _t0ACD = 1;
      int _t0ACE = prim $sub01C0<int; %3> (_t0ACC, _t0ACD);
      int _t0ACF = 0;
      int _t0AD0 = 1;
      int _t0AD1 = 3;
      int[2] _t0AD2 = {_t0AD0, _t0AD1};
      int _t0AD3 = 3;
      int _t0AD4 = 3;
      int[2] _t0AD5 = {_t0AD3, _t0AD4};
      int _t0AD6 = 9;
      int _t0AD7 = 3;
      int[2] _t0AD8 = {_t0AD6, _t0AD7};
      int _t0AD9 = 27;
      int _t0ADA = 3;
      int[2] _t0ADB = {_t0AD9, _t0ADA};
      int[2][4] _t0ADC = {_t0AD2, _t0AD5, _t0AD8, _t0ADB};
      int[2] _t0ADD = prim $sub01C0<int[2]; %4> (_t0ADC, faceIdx0979);
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %2> (_t0ADD, _t0ADE);
      int[] _t0AE0 = prim $range01C3 (_t0ACF, _t0ADF);
      int[] accum0B00 = {};
      foreach i09B3 in _t0AE0 {
        int _t0AE1 = 1;
        int _t0AE2 = 2;
        int _t0AE3 = 3;
        int _t0AE4 = 0;
        int _t0AE5 = 2;
        int _t0AE6 = 3;
        int _t0AE7 = 0;
        int _t0AE8 = 1;
        int _t0AE9 = 3;
        int _t0AEA = 0;
        int _t0AEB = 1;
        int _t0AEC = 2;
        int[12] _t0AED = {_t0AE1, _t0AE2, _t0AE3, _t0AE4, _t0AE5, _t0AE6, _t0AE7, _t0AE8, _t0AE9, _t0AEA, _t0AEB, _t0AEC};
        int _t0AEE = 1;
        int _t0AEF = 3;
        int[2] _t0AF0 = {_t0AEE, _t0AEF};
        int _t0AF1 = 3;
        int _t0AF2 = 3;
        int[2] _t0AF3 = {_t0AF1, _t0AF2};
        int _t0AF4 = 9;
        int _t0AF5 = 3;
        int[2] _t0AF6 = {_t0AF4, _t0AF5};
        int _t0AF7 = 27;
        int _t0AF8 = 3;
        int[2] _t0AF9 = {_t0AF7, _t0AF8};
        int[2][4] _t0AFA = {_t0AF0, _t0AF3, _t0AF6, _t0AF9};
        int[2] _t0AFB = prim $sub01C0<int[2]; %4> (_t0AFA, faceIdx0979);
        int _t0AFC = 0;
        int _t0AFD = prim $sub01C0<int; %2> (_t0AFB, _t0AFC);
        int _t0AFE = prim +0015 (_t0AFD, i09B3);
        int _t0AFF = prim $sub01C0<int; %12> (_t0AED, _t0AFE);
        accum0B00 = prim @0010<int> (accum0B00, _t0AFF);
      }
      int _t0B01 = 1;
      int _t0B02 = prim $dynsub01C2<int> (accum0B00, _t0B01);
      bool _t0B03 = prim ==0082 (_t0ACE, _t0B02);
      int[4] _t0B04 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B05 = 0;
      int _t0B06 = prim $sub01C0<int; %4> (_t0B04, _t0B05);
      int[4] _t0B07 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B08 = 2;
      int _t0B09 = prim $sub01C0<int; %4> (_t0B07, _t0B08);
      int[4] _t0B0A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B0B = 3;
      int _t0B0C = prim $sub01C0<int; %4> (_t0B0A, _t0B0B);
      int[3] _t0B0D = {_t0B06, _t0B09, _t0B0C};
      int _t0B0E = 2;
      int _t0B0F = prim $sub01C0<int; %3> (_t0B0D, _t0B0E);
      int _t0B10 = 0;
      int _t0B11 = 1;
      int _t0B12 = 3;
      int[2] _t0B13 = {_t0B11, _t0B12};
      int _t0B14 = 3;
      int _t0B15 = 3;
      int[2] _t0B16 = {_t0B14, _t0B15};
      int _t0B17 = 9;
      int _t0B18 = 3;
      int[2] _t0B19 = {_t0B17, _t0B18};
      int _t0B1A = 27;
      int _t0B1B = 3;
      int[2] _t0B1C = {_t0B1A, _t0B1B};
      int[2][4] _t0B1D = {_t0B13, _t0B16, _t0B19, _t0B1C};
      int[2] _t0B1E = prim $sub01C0<int[2]; %4> (_t0B1D, faceIdx0979);
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %2> (_t0B1E, _t0B1F);
      int[] _t0B21 = prim $range01C3 (_t0B10, _t0B20);
      int[] accum0B41 = {};
      foreach i09B3 in _t0B21 {
        int _t0B22 = 1;
        int _t0B23 = 2;
        int _t0B24 = 3;
        int _t0B25 = 0;
        int _t0B26 = 2;
        int _t0B27 = 3;
        int _t0B28 = 0;
        int _t0B29 = 1;
        int _t0B2A = 3;
        int _t0B2B = 0;
        int _t0B2C = 1;
        int _t0B2D = 2;
        int[12] _t0B2E = {_t0B22, _t0B23, _t0B24, _t0B25, _t0B26, _t0B27, _t0B28, _t0B29, _t0B2A, _t0B2B, _t0B2C, _t0B2D};
        int _t0B2F = 1;
        int _t0B30 = 3;
        int[2] _t0B31 = {_t0B2F, _t0B30};
        int _t0B32 = 3;
        int _t0B33 = 3;
        int[2] _t0B34 = {_t0B32, _t0B33};
        int _t0B35 = 9;
        int _t0B36 = 3;
        int[2] _t0B37 = {_t0B35, _t0B36};
        int _t0B38 = 27;
        int _t0B39 = 3;
        int[2] _t0B3A = {_t0B38, _t0B39};
        int[2][4] _t0B3B = {_t0B31, _t0B34, _t0B37, _t0B3A};
        int[2] _t0B3C = prim $sub01C0<int[2]; %4> (_t0B3B, faceIdx0979);
        int _t0B3D = 0;
        int _t0B3E = prim $sub01C0<int; %2> (_t0B3C, _t0B3D);
        int _t0B3F = prim +0015 (_t0B3E, i09B3);
        int _t0B40 = prim $sub01C0<int; %12> (_t0B2E, _t0B3F);
        accum0B41 = prim @0010<int> (accum0B41, _t0B40);
      }
      int _t0B42 = 2;
      int _t0B43 = prim $dynsub01C2<int> (accum0B41, _t0B42);
      bool _t0B44 = prim ==0082 (_t0B0F, _t0B43);
      bool _t0B45 = prim $and01C4 (_t0B03, _t0B44);
      bool _t0B46 = prim $and01C4 (_t0AC2, _t0B45);
      if _t0B46 {
        int _t0B47 = 1;
        int[2] _t0B48 = {cellInt09BA, _t0B47};
        return _t0B48;
      }
      int[4] _t0B49 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4A = 0;
      int _t0B4B = prim $sub01C0<int; %4> (_t0B49, _t0B4A);
      int[4] _t0B4C = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4D = 1;
      int _t0B4E = prim $sub01C0<int; %4> (_t0B4C, _t0B4D);
      int[4] _t0B4F = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B50 = 3;
      int _t0B51 = prim $sub01C0<int; %4> (_t0B4F, _t0B50);
      int[3] _t0B52 = {_t0B4B, _t0B4E, _t0B51};
      int _t0B53 = 0;
      int _t0B54 = prim $sub01C0<int; %3> (_t0B52, _t0B53);
      int _t0B55 = 0;
      int _t0B56 = 1;
      int _t0B57 = 3;
      int[2] _t0B58 = {_t0B56, _t0B57};
      int _t0B59 = 3;
      int _t0B5A = 3;
      int[2] _t0B5B = {_t0B59, _t0B5A};
      int _t0B5C = 9;
      int _t0B5D = 3;
      int[2] _t0B5E = {_t0B5C, _t0B5D};
      int _t0B5F = 27;
      int _t0B60 = 3;
      int[2] _t0B61 = {_t0B5F, _t0B60};
      int[2][4] _t0B62 = {_t0B58, _t0B5B, _t0B5E, _t0B61};
      int[2] _t0B63 = prim $sub01C0<int[2]; %4> (_t0B62, faceIdx0979);
      int _t0B64 = 1;
      int _t0B65 = prim $sub01C0<int; %2> (_t0B63, _t0B64);
      int[] _t0B66 = prim $range01C3 (_t0B55, _t0B65);
      int[] accum0B86 = {};
      foreach i09B3 in _t0B66 {
        int _t0B67 = 1;
        int _t0B68 = 2;
        int _t0B69 = 3;
        int _t0B6A = 0;
        int _t0B6B = 2;
        int _t0B6C = 3;
        int _t0B6D = 0;
        int _t0B6E = 1;
        int _t0B6F = 3;
        int _t0B70 = 0;
        int _t0B71 = 1;
        int _t0B72 = 2;
        int[12] _t0B73 = {_t0B67, _t0B68, _t0B69, _t0B6A, _t0B6B, _t0B6C, _t0B6D, _t0B6E, _t0B6F, _t0B70, _t0B71, _t0B72};
        int _t0B74 = 1;
        int _t0B75 = 3;
        int[2] _t0B76 = {_t0B74, _t0B75};
        int _t0B77 = 3;
        int _t0B78 = 3;
        int[2] _t0B79 = {_t0B77, _t0B78};
        int _t0B7A = 9;
        int _t0B7B = 3;
        int[2] _t0B7C = {_t0B7A, _t0B7B};
        int _t0B7D = 27;
        int _t0B7E = 3;
        int[2] _t0B7F = {_t0B7D, _t0B7E};
        int[2][4] _t0B80 = {_t0B76, _t0B79, _t0B7C, _t0B7F};
        int[2] _t0B81 = prim $sub01C0<int[2]; %4> (_t0B80, faceIdx0979);
        int _t0B82 = 0;
        int _t0B83 = prim $sub01C0<int; %2> (_t0B81, _t0B82);
        int _t0B84 = prim +0015 (_t0B83, i09B3);
        int _t0B85 = prim $sub01C0<int; %12> (_t0B73, _t0B84);
        accum0B86 = prim @0010<int> (accum0B86, _t0B85);
      }
      int _t0B87 = 0;
      int _t0B88 = prim $dynsub01C2<int> (accum0B86, _t0B87);
      bool _t0B89 = prim ==0082 (_t0B54, _t0B88);
      int[4] _t0B8A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8B = 0;
      int _t0B8C = prim $sub01C0<int; %4> (_t0B8A, _t0B8B);
      int[4] _t0B8D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8E = 1;
      int _t0B8F = prim $sub01C0<int; %4> (_t0B8D, _t0B8E);
      int[4] _t0B90 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B91 = 3;
      int _t0B92 = prim $sub01C0<int; %4> (_t0B90, _t0B91);
      int[3] _t0B93 = {_t0B8C, _t0B8F, _t0B92};
      int _t0B94 = 1;
      int _t0B95 = prim $sub01C0<int; %3> (_t0B93, _t0B94);
      int _t0B96 = 0;
      int _t0B97 = 1;
      int _t0B98 = 3;
      int[2] _t0B99 = {_t0B97, _t0B98};
      int _t0B9A = 3;
      int _t0B9B = 3;
      int[2] _t0B9C = {_t0B9A, _t0B9B};
      int _t0B9D = 9;
      int _t0B9E = 3;
      int[2] _t0B9F = {_t0B9D, _t0B9E};
      int _t0BA0 = 27;
      int _t0BA1 = 3;
      int[2] _t0BA2 = {_t0BA0, _t0BA1};
      int[2][4] _t0BA3 = {_t0B99, _t0B9C, _t0B9F, _t0BA2};
      int[2] _t0BA4 = prim $sub01C0<int[2]; %4> (_t0BA3, faceIdx0979);
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %2> (_t0BA4, _t0BA5);
      int[] _t0BA7 = prim $range01C3 (_t0B96, _t0BA6);
      int[] accum0BC7 = {};
      foreach i09B3 in _t0BA7 {
        int _t0BA8 = 1;
        int _t0BA9 = 2;
        int _t0BAA = 3;
        int _t0BAB = 0;
        int _t0BAC = 2;
        int _t0BAD = 3;
        int _t0BAE = 0;
        int _t0BAF = 1;
        int _t0BB0 = 3;
        int _t0BB1 = 0;
        int _t0BB2 = 1;
        int _t0BB3 = 2;
        int[12] _t0BB4 = {_t0BA8, _t0BA9, _t0BAA, _t0BAB, _t0BAC, _t0BAD, _t0BAE, _t0BAF, _t0BB0, _t0BB1, _t0BB2, _t0BB3};
        int _t0BB5 = 1;
        int _t0BB6 = 3;
        int[2] _t0BB7 = {_t0BB5, _t0BB6};
        int _t0BB8 = 3;
        int _t0BB9 = 3;
        int[2] _t0BBA = {_t0BB8, _t0BB9};
        int _t0BBB = 9;
        int _t0BBC = 3;
        int[2] _t0BBD = {_t0BBB, _t0BBC};
        int _t0BBE = 27;
        int _t0BBF = 3;
        int[2] _t0BC0 = {_t0BBE, _t0BBF};
        int[2][4] _t0BC1 = {_t0BB7, _t0BBA, _t0BBD, _t0BC0};
        int[2] _t0BC2 = prim $sub01C0<int[2]; %4> (_t0BC1, faceIdx0979);
        int _t0BC3 = 0;
        int _t0BC4 = prim $sub01C0<int; %2> (_t0BC2, _t0BC3);
        int _t0BC5 = prim +0015 (_t0BC4, i09B3);
        int _t0BC6 = prim $sub01C0<int; %12> (_t0BB4, _t0BC5);
        accum0BC7 = prim @0010<int> (accum0BC7, _t0BC6);
      }
      int _t0BC8 = 1;
      int _t0BC9 = prim $dynsub01C2<int> (accum0BC7, _t0BC8);
      bool _t0BCA = prim ==0082 (_t0B95, _t0BC9);
      int[4] _t0BCB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCC = 0;
      int _t0BCD = prim $sub01C0<int; %4> (_t0BCB, _t0BCC);
      int[4] _t0BCE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCF = 1;
      int _t0BD0 = prim $sub01C0<int; %4> (_t0BCE, _t0BCF);
      int[4] _t0BD1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BD2 = 3;
      int _t0BD3 = prim $sub01C0<int; %4> (_t0BD1, _t0BD2);
      int[3] _t0BD4 = {_t0BCD, _t0BD0, _t0BD3};
      int _t0BD5 = 2;
      int _t0BD6 = prim $sub01C0<int; %3> (_t0BD4, _t0BD5);
      int _t0BD7 = 0;
      int _t0BD8 = 1;
      int _t0BD9 = 3;
      int[2] _t0BDA = {_t0BD8, _t0BD9};
      int _t0BDB = 3;
      int _t0BDC = 3;
      int[2] _t0BDD = {_t0BDB, _t0BDC};
      int _t0BDE = 9;
      int _t0BDF = 3;
      int[2] _t0BE0 = {_t0BDE, _t0BDF};
      int _t0BE1 = 27;
      int _t0BE2 = 3;
      int[2] _t0BE3 = {_t0BE1, _t0BE2};
      int[2][4] _t0BE4 = {_t0BDA, _t0BDD, _t0BE0, _t0BE3};
      int[2] _t0BE5 = prim $sub01C0<int[2]; %4> (_t0BE4, faceIdx0979);
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %2> (_t0BE5, _t0BE6);
      int[] _t0BE8 = prim $range01C3 (_t0BD7, _t0BE7);
      int[] accum0C08 = {};
      foreach i09B3 in _t0BE8 {
        int _t0BE9 = 1;
        int _t0BEA = 2;
        int _t0BEB = 3;
        int _t0BEC = 0;
        int _t0BED = 2;
        int _t0BEE = 3;
        int _t0BEF = 0;
        int _t0BF0 = 1;
        int _t0BF1 = 3;
        int _t0BF2 = 0;
        int _t0BF3 = 1;
        int _t0BF4 = 2;
        int[12] _t0BF5 = {_t0BE9, _t0BEA, _t0BEB, _t0BEC, _t0BED, _t0BEE, _t0BEF, _t0BF0, _t0BF1, _t0BF2, _t0BF3, _t0BF4};
        int _t0BF6 = 1;
        int _t0BF7 = 3;
        int[2] _t0BF8 = {_t0BF6, _t0BF7};
        int _t0BF9 = 3;
        int _t0BFA = 3;
        int[2] _t0BFB = {_t0BF9, _t0BFA};
        int _t0BFC = 9;
        int _t0BFD = 3;
        int[2] _t0BFE = {_t0BFC, _t0BFD};
        int _t0BFF = 27;
        int _t0C00 = 3;
        int[2] _t0C01 = {_t0BFF, _t0C00};
        int[2][4] _t0C02 = {_t0BF8, _t0BFB, _t0BFE, _t0C01};
        int[2] _t0C03 = prim $sub01C0<int[2]; %4> (_t0C02, faceIdx0979);
        int _t0C04 = 0;
        int _t0C05 = prim $sub01C0<int; %2> (_t0C03, _t0C04);
        int _t0C06 = prim +0015 (_t0C05, i09B3);
        int _t0C07 = prim $sub01C0<int; %12> (_t0BF5, _t0C06);
        accum0C08 = prim @0010<int> (accum0C08, _t0C07);
      }
      int _t0C09 = 2;
      int _t0C0A = prim $dynsub01C2<int> (accum0C08, _t0C09);
      bool _t0C0B = prim ==0082 (_t0BD6, _t0C0A);
      bool _t0C0C = prim $and01C4 (_t0BCA, _t0C0B);
      bool _t0C0D = prim $and01C4 (_t0B89, _t0C0C);
      if _t0C0D {
        int _t0C0E = 2;
        int[2] _t0C0F = {cellInt09BA, _t0C0E};
        return _t0C0F;
      }
      int[4] _t0C10 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C11 = 0;
      int _t0C12 = prim $sub01C0<int; %4> (_t0C10, _t0C11);
      int[4] _t0C13 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C14 = 1;
      int _t0C15 = prim $sub01C0<int; %4> (_t0C13, _t0C14);
      int[4] _t0C16 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C17 = 2;
      int _t0C18 = prim $sub01C0<int; %4> (_t0C16, _t0C17);
      int[3] _t0C19 = {_t0C12, _t0C15, _t0C18};
      int _t0C1A = 0;
      int _t0C1B = prim $sub01C0<int; %3> (_t0C19, _t0C1A);
      int _t0C1C = 0;
      int _t0C1D = 1;
      int _t0C1E = 3;
      int[2] _t0C1F = {_t0C1D, _t0C1E};
      int _t0C20 = 3;
      int _t0C21 = 3;
      int[2] _t0C22 = {_t0C20, _t0C21};
      int _t0C23 = 9;
      int _t0C24 = 3;
      int[2] _t0C25 = {_t0C23, _t0C24};
      int _t0C26 = 27;
      int _t0C27 = 3;
      int[2] _t0C28 = {_t0C26, _t0C27};
      int[2][4] _t0C29 = {_t0C1F, _t0C22, _t0C25, _t0C28};
      int[2] _t0C2A = prim $sub01C0<int[2]; %4> (_t0C29, faceIdx0979);
      int _t0C2B = 1;
      int _t0C2C = prim $sub01C0<int; %2> (_t0C2A, _t0C2B);
      int[] _t0C2D = prim $range01C3 (_t0C1C, _t0C2C);
      int[] accum0C4D = {};
      foreach i09B3 in _t0C2D {
        int _t0C2E = 1;
        int _t0C2F = 2;
        int _t0C30 = 3;
        int _t0C31 = 0;
        int _t0C32 = 2;
        int _t0C33 = 3;
        int _t0C34 = 0;
        int _t0C35 = 1;
        int _t0C36 = 3;
        int _t0C37 = 0;
        int _t0C38 = 1;
        int _t0C39 = 2;
        int[12] _t0C3A = {_t0C2E, _t0C2F, _t0C30, _t0C31, _t0C32, _t0C33, _t0C34, _t0C35, _t0C36, _t0C37, _t0C38, _t0C39};
        int _t0C3B = 1;
        int _t0C3C = 3;
        int[2] _t0C3D = {_t0C3B, _t0C3C};
        int _t0C3E = 3;
        int _t0C3F = 3;
        int[2] _t0C40 = {_t0C3E, _t0C3F};
        int _t0C41 = 9;
        int _t0C42 = 3;
        int[2] _t0C43 = {_t0C41, _t0C42};
        int _t0C44 = 27;
        int _t0C45 = 3;
        int[2] _t0C46 = {_t0C44, _t0C45};
        int[2][4] _t0C47 = {_t0C3D, _t0C40, _t0C43, _t0C46};
        int[2] _t0C48 = prim $sub01C0<int[2]; %4> (_t0C47, faceIdx0979);
        int _t0C49 = 0;
        int _t0C4A = prim $sub01C0<int; %2> (_t0C48, _t0C49);
        int _t0C4B = prim +0015 (_t0C4A, i09B3);
        int _t0C4C = prim $sub01C0<int; %12> (_t0C3A, _t0C4B);
        accum0C4D = prim @0010<int> (accum0C4D, _t0C4C);
      }
      int _t0C4E = 0;
      int _t0C4F = prim $dynsub01C2<int> (accum0C4D, _t0C4E);
      bool _t0C50 = prim ==0082 (_t0C1B, _t0C4F);
      int[4] _t0C51 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C52 = 0;
      int _t0C53 = prim $sub01C0<int; %4> (_t0C51, _t0C52);
      int[4] _t0C54 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C55 = 1;
      int _t0C56 = prim $sub01C0<int; %4> (_t0C54, _t0C55);
      int[4] _t0C57 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C58 = 2;
      int _t0C59 = prim $sub01C0<int; %4> (_t0C57, _t0C58);
      int[3] _t0C5A = {_t0C53, _t0C56, _t0C59};
      int _t0C5B = 1;
      int _t0C5C = prim $sub01C0<int; %3> (_t0C5A, _t0C5B);
      int _t0C5D = 0;
      int _t0C5E = 1;
      int _t0C5F = 3;
      int[2] _t0C60 = {_t0C5E, _t0C5F};
      int _t0C61 = 3;
      int _t0C62 = 3;
      int[2] _t0C63 = {_t0C61, _t0C62};
      int _t0C64 = 9;
      int _t0C65 = 3;
      int[2] _t0C66 = {_t0C64, _t0C65};
      int _t0C67 = 27;
      int _t0C68 = 3;
      int[2] _t0C69 = {_t0C67, _t0C68};
      int[2][4] _t0C6A = {_t0C60, _t0C63, _t0C66, _t0C69};
      int[2] _t0C6B = prim $sub01C0<int[2]; %4> (_t0C6A, faceIdx0979);
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %2> (_t0C6B, _t0C6C);
      int[] _t0C6E = prim $range01C3 (_t0C5D, _t0C6D);
      int[] accum0C8E = {};
      foreach i09B3 in _t0C6E {
        int _t0C6F = 1;
        int _t0C70 = 2;
        int _t0C71 = 3;
        int _t0C72 = 0;
        int _t0C73 = 2;
        int _t0C74 = 3;
        int _t0C75 = 0;
        int _t0C76 = 1;
        int _t0C77 = 3;
        int _t0C78 = 0;
        int _t0C79 = 1;
        int _t0C7A = 2;
        int[12] _t0C7B = {_t0C6F, _t0C70, _t0C71, _t0C72, _t0C73, _t0C74, _t0C75, _t0C76, _t0C77, _t0C78, _t0C79, _t0C7A};
        int _t0C7C = 1;
        int _t0C7D = 3;
        int[2] _t0C7E = {_t0C7C, _t0C7D};
        int _t0C7F = 3;
        int _t0C80 = 3;
        int[2] _t0C81 = {_t0C7F, _t0C80};
        int _t0C82 = 9;
        int _t0C83 = 3;
        int[2] _t0C84 = {_t0C82, _t0C83};
        int _t0C85 = 27;
        int _t0C86 = 3;
        int[2] _t0C87 = {_t0C85, _t0C86};
        int[2][4] _t0C88 = {_t0C7E, _t0C81, _t0C84, _t0C87};
        int[2] _t0C89 = prim $sub01C0<int[2]; %4> (_t0C88, faceIdx0979);
        int _t0C8A = 0;
        int _t0C8B = prim $sub01C0<int; %2> (_t0C89, _t0C8A);
        int _t0C8C = prim +0015 (_t0C8B, i09B3);
        int _t0C8D = prim $sub01C0<int; %12> (_t0C7B, _t0C8C);
        accum0C8E = prim @0010<int> (accum0C8E, _t0C8D);
      }
      int _t0C8F = 1;
      int _t0C90 = prim $dynsub01C2<int> (accum0C8E, _t0C8F);
      bool _t0C91 = prim ==0082 (_t0C5C, _t0C90);
      int[4] _t0C92 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C93 = 0;
      int _t0C94 = prim $sub01C0<int; %4> (_t0C92, _t0C93);
      int[4] _t0C95 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C96 = 1;
      int _t0C97 = prim $sub01C0<int; %4> (_t0C95, _t0C96);
      int[4] _t0C98 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C99 = 2;
      int _t0C9A = prim $sub01C0<int; %4> (_t0C98, _t0C99);
      int[3] _t0C9B = {_t0C94, _t0C97, _t0C9A};
      int _t0C9C = 2;
      int _t0C9D = prim $sub01C0<int; %3> (_t0C9B, _t0C9C);
      int _t0C9E = 0;
      int _t0C9F = 1;
      int _t0CA0 = 3;
      int[2] _t0CA1 = {_t0C9F, _t0CA0};
      int _t0CA2 = 3;
      int _t0CA3 = 3;
      int[2] _t0CA4 = {_t0CA2, _t0CA3};
      int _t0CA5 = 9;
      int _t0CA6 = 3;
      int[2] _t0CA7 = {_t0CA5, _t0CA6};
      int _t0CA8 = 27;
      int _t0CA9 = 3;
      int[2] _t0CAA = {_t0CA8, _t0CA9};
      int[2][4] _t0CAB = {_t0CA1, _t0CA4, _t0CA7, _t0CAA};
      int[2] _t0CAC = prim $sub01C0<int[2]; %4> (_t0CAB, faceIdx0979);
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %2> (_t0CAC, _t0CAD);
      int[] _t0CAF = prim $range01C3 (_t0C9E, _t0CAE);
      int[] accum0CCF = {};
      foreach i09B3 in _t0CAF {
        int _t0CB0 = 1;
        int _t0CB1 = 2;
        int _t0CB2 = 3;
        int _t0CB3 = 0;
        int _t0CB4 = 2;
        int _t0CB5 = 3;
        int _t0CB6 = 0;
        int _t0CB7 = 1;
        int _t0CB8 = 3;
        int _t0CB9 = 0;
        int _t0CBA = 1;
        int _t0CBB = 2;
        int[12] _t0CBC = {_t0CB0, _t0CB1, _t0CB2, _t0CB3, _t0CB4, _t0CB5, _t0CB6, _t0CB7, _t0CB8, _t0CB9, _t0CBA, _t0CBB};
        int _t0CBD = 1;
        int _t0CBE = 3;
        int[2] _t0CBF = {_t0CBD, _t0CBE};
        int _t0CC0 = 3;
        int _t0CC1 = 3;
        int[2] _t0CC2 = {_t0CC0, _t0CC1};
        int _t0CC3 = 9;
        int _t0CC4 = 3;
        int[2] _t0CC5 = {_t0CC3, _t0CC4};
        int _t0CC6 = 27;
        int _t0CC7 = 3;
        int[2] _t0CC8 = {_t0CC6, _t0CC7};
        int[2][4] _t0CC9 = {_t0CBF, _t0CC2, _t0CC5, _t0CC8};
        int[2] _t0CCA = prim $sub01C0<int[2]; %4> (_t0CC9, faceIdx0979);
        int _t0CCB = 0;
        int _t0CCC = prim $sub01C0<int; %2> (_t0CCA, _t0CCB);
        int _t0CCD = prim +0015 (_t0CCC, i09B3);
        int _t0CCE = prim $sub01C0<int; %12> (_t0CBC, _t0CCD);
        accum0CCF = prim @0010<int> (accum0CCF, _t0CCE);
      }
      int _t0CD0 = 2;
      int _t0CD1 = prim $dynsub01C2<int> (accum0CCF, _t0CD0);
      bool _t0CD2 = prim ==0082 (_t0C9D, _t0CD1);
      bool _t0CD3 = prim $and01C4 (_t0C91, _t0CD2);
      bool _t0CD4 = prim $and01C4 (_t0C50, _t0CD3);
      if _t0CD4 {
        int _t0CD5 = 3;
        int[2] _t0CD6 = {cellInt09BA, _t0CD5};
        return _t0CD6;
      }
    }
  }
  int _t0CD7 = -1;
  int _t0CD8 = -1;
  int[2] _t0CD9 = {_t0CD7, _t0CD8};
  return _t0CD9;
}
function vec2#0 _enter0CDA (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0CDD = +inf;
  int face0CDE = -1;
  real _t0CDF = 0.57735026919e0;
  real _t0CE0 = 0.57735026919e0;
  real _t0CE1 = -0.57735026919e0;
  real _t0CE2 = 0.57735026919e0;
  vec3 _t0CE3 = [_t0CE0, _t0CE1, _t0CE2];
  real _t0CE4 = prim •00CE<$[3]; $[3]; $[]> (_t0CE3, refPos0CDB);
  real _t0CE5 = prim -0026<$[]> (_t0CDF, _t0CE4);
  real _t0CE6 = 0.57735026919e0;
  real _t0CE7 = -0.57735026919e0;
  real _t0CE8 = 0.57735026919e0;
  vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
  real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, dPos0CDC);
  real _t0CEB = prim /0055 (_t0CE5, _t0CEA);
  real _t0CEC = -0.e0;
  bool _t0CED = prim >0080 (_t0CEB, _t0CEC);
  real _t0CEE = 0.57735026919e0;
  real _t0CEF = 0.57735026919e0;
  real _t0CF0 = -0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  vec3 _t0CF2 = [_t0CEF, _t0CF0, _t0CF1];
  real _t0CF3 = prim •00CE<$[3]; $[3]; $[]> (_t0CF2, refPos0CDB);
  real _t0CF4 = prim -0026<$[]> (_t0CEE, _t0CF3);
  real _t0CF5 = 0.57735026919e0;
  real _t0CF6 = -0.57735026919e0;
  real _t0CF7 = 0.57735026919e0;
  vec3 _t0CF8 = [_t0CF5, _t0CF6, _t0CF7];
  real _t0CF9 = prim •00CE<$[3]; $[3]; $[]> (_t0CF8, dPos0CDC);
  real _t0CFA = prim /0055 (_t0CF4, _t0CF9);
  bool _t0CFB = prim >0080 (time0CDD, _t0CFA);
  bool _t0CFC = prim $and01C4 (_t0CED, _t0CFB);
  if _t0CFC {
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.1e1;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.1e1;
    vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
    real _t0D02 = 0.57735026919e0;
    real _t0D03 = 0.57735026919e0;
    real _t0D04 = -0.57735026919e0;
    real _t0D05 = 0.57735026919e0;
    vec3 _t0D06 = [_t0D03, _t0D04, _t0D05];
    real _t0D07 = prim •00CE<$[3]; $[3]; $[]> (_t0D06, refPos0CDB);
    real _t0D08 = prim -0026<$[]> (_t0D02, _t0D07);
    real _t0D09 = 0.57735026919e0;
    real _t0D0A = -0.57735026919e0;
    real _t0D0B = 0.57735026919e0;
    vec3 _t0D0C = [_t0D09, _t0D0A, _t0D0B];
    real _t0D0D = prim •00CE<$[3]; $[3]; $[]> (_t0D0C, dPos0CDC);
    real _t0D0E = prim /0055 (_t0D08, _t0D0D);
    vec3 _t0D0F = prim *0038<$[3]> (dPos0CDC, _t0D0E);
    vec3 _t0D10 = prim +0017<$[3]> (_t0D0F, refPos0CDB);
    real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, _t0D10);
    bool _t0D12 = prim >0080 (_t0CFD, _t0D11);
    real _t0D13 = 0.1e-8;
    real _t0D14 = 0.1e-8;
    real _t0D15 = 0.1e-8;
    vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
    real _t0D17 = 0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    real _t0D19 = -0.57735026919e0;
    real _t0D1A = 0.57735026919e0;
    vec3 _t0D1B = [_t0D18, _t0D19, _t0D1A];
    real _t0D1C = prim •00CE<$[3]; $[3]; $[]> (_t0D1B, refPos0CDB);
    real _t0D1D = prim -0026<$[]> (_t0D17, _t0D1C);
    real _t0D1E = 0.57735026919e0;
    real _t0D1F = -0.57735026919e0;
    real _t0D20 = 0.57735026919e0;
    vec3 _t0D21 = [_t0D1E, _t0D1F, _t0D20];
    real _t0D22 = prim •00CE<$[3]; $[3]; $[]> (_t0D21, dPos0CDC);
    real _t0D23 = prim /0055 (_t0D1D, _t0D22);
    vec3 _t0D24 = prim *0038<$[3]> (dPos0CDC, _t0D23);
    vec3 _t0D25 = prim +0017<$[3]> (_t0D24, refPos0CDB);
    vec3 _t0D26 = prim +0017<$[3]> (_t0D16, _t0D25);
    real _t0D27 = _t0D26[0];
    real _t0D28 = -0.e0;
    bool _t0D29 = prim >0080 (_t0D27, _t0D28);
    real _t0D2A = 0.1e-8;
    real _t0D2B = 0.1e-8;
    real _t0D2C = 0.1e-8;
    vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
    real _t0D2E = 0.57735026919e0;
    real _t0D2F = 0.57735026919e0;
    real _t0D30 = -0.57735026919e0;
    real _t0D31 = 0.57735026919e0;
    vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
    real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0CDB);
    real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
    real _t0D35 = 0.57735026919e0;
    real _t0D36 = -0.57735026919e0;
    real _t0D37 = 0.57735026919e0;
    vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
    real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0CDC);
    real _t0D3A = prim /0055 (_t0D34, _t0D39);
    vec3 _t0D3B = prim *0038<$[3]> (dPos0CDC, _t0D3A);
    vec3 _t0D3C = prim +0017<$[3]> (_t0D3B, refPos0CDB);
    vec3 _t0D3D = prim +0017<$[3]> (_t0D2D, _t0D3C);
    real _t0D3E = _t0D3D[1];
    real _t0D3F = -0.e0;
    bool _t0D40 = prim >0080 (_t0D3E, _t0D3F);
    real _t0D41 = 0.1e-8;
    real _t0D42 = 0.1e-8;
    real _t0D43 = 0.1e-8;
    vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.57735026919e0;
    real _t0D46 = 0.57735026919e0;
    real _t0D47 = -0.57735026919e0;
    real _t0D48 = 0.57735026919e0;
    vec3 _t0D49 = [_t0D46, _t0D47, _t0D48];
    real _t0D4A = prim •00CE<$[3]; $[3]; $[]> (_t0D49, refPos0CDB);
    real _t0D4B = prim -0026<$[]> (_t0D45, _t0D4A);
    real _t0D4C = 0.57735026919e0;
    real _t0D4D = -0.57735026919e0;
    real _t0D4E = 0.57735026919e0;
    vec3 _t0D4F = [_t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = prim •00CE<$[3]; $[3]; $[]> (_t0D4F, dPos0CDC);
    real _t0D51 = prim /0055 (_t0D4B, _t0D50);
    vec3 _t0D52 = prim *0038<$[3]> (dPos0CDC, _t0D51);
    vec3 _t0D53 = prim +0017<$[3]> (_t0D52, refPos0CDB);
    vec3 _t0D54 = prim +0017<$[3]> (_t0D44, _t0D53);
    real _t0D55 = _t0D54[2];
    real _t0D56 = -0.e0;
    bool _t0D57 = prim >0080 (_t0D55, _t0D56);
    bool _t0D58 = prim $and01C4 (_t0D40, _t0D57);
    bool _t0D59 = prim $and01C4 (_t0D29, _t0D58);
    bool _t0D5A = prim $and01C4 (_t0D12, _t0D59);
    if _t0D5A {
      real _t0D5B = 0.57735026919e0;
      real _t0D5C = 0.57735026919e0;
      real _t0D5D = -0.57735026919e0;
      real _t0D5E = 0.57735026919e0;
      vec3 _t0D5F = [_t0D5C, _t0D5D, _t0D5E];
      real _t0D60 = prim •00CE<$[3]; $[3]; $[]> (_t0D5F, refPos0CDB);
      real _t0D61 = prim -0026<$[]> (_t0D5B, _t0D60);
      real _t0D62 = 0.57735026919e0;
      real _t0D63 = -0.57735026919e0;
      real _t0D64 = 0.57735026919e0;
      vec3 _t0D65 = [_t0D62, _t0D63, _t0D64];
      real _t0D66 = prim •00CE<$[3]; $[3]; $[]> (_t0D65, dPos0CDC);
      time0CDD = prim /0055 (_t0D61, _t0D66);
      face0CDE = 0;
    }
  }
  real _t0D67 = 0.e0;
  real _t0D68 = 0.1e1;
  real _t0D69 = 0.e0;
  real _t0D6A = 0.e0;
  vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
  real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0CDB);
  real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
  real _t0D6E = 0.1e1;
  real _t0D6F = 0.e0;
  real _t0D70 = 0.e0;
  vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
  real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0CDC);
  real _t0D73 = prim /0055 (_t0D6D, _t0D72);
  real _t0D74 = -0.e0;
  bool _t0D75 = prim >0080 (_t0D73, _t0D74);
  real _t0D76 = 0.e0;
  real _t0D77 = 0.1e1;
  real _t0D78 = 0.e0;
  real _t0D79 = 0.e0;
  vec3 _t0D7A = [_t0D77, _t0D78, _t0D79];
  real _t0D7B = prim •00CE<$[3]; $[3]; $[]> (_t0D7A, refPos0CDB);
  real _t0D7C = prim -0026<$[]> (_t0D76, _t0D7B);
  real _t0D7D = 0.1e1;
  real _t0D7E = 0.e0;
  real _t0D7F = 0.e0;
  vec3 _t0D80 = [_t0D7D, _t0D7E, _t0D7F];
  real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D80, dPos0CDC);
  real _t0D82 = prim /0055 (_t0D7C, _t0D81);
  bool _t0D83 = prim >0080 (time0CDD, _t0D82);
  bool _t0D84 = prim $and01C4 (_t0D75, _t0D83);
  if _t0D84 {
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.1e1;
    real _t0D88 = 0.1e1;
    vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec3 _t0D8E = [_t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = prim •00CE<$[3]; $[3]; $[]> (_t0D8E, refPos0CDB);
    real _t0D90 = prim -0026<$[]> (_t0D8A, _t0D8F);
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    vec3 _t0D94 = [_t0D91, _t0D92, _t0D93];
    real _t0D95 = prim •00CE<$[3]; $[3]; $[]> (_t0D94, dPos0CDC);
    real _t0D96 = prim /0055 (_t0D90, _t0D95);
    vec3 _t0D97 = prim *0038<$[3]> (dPos0CDC, _t0D96);
    vec3 _t0D98 = prim +0017<$[3]> (_t0D97, refPos0CDB);
    real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D89, _t0D98);
    bool _t0D9A = prim >0080 (_t0D85, _t0D99);
    real _t0D9B = 0.1e-8;
    real _t0D9C = 0.1e-8;
    real _t0D9D = 0.1e-8;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CDB);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CDC);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CDC, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CDB);
    vec3 _t0DAE = prim +0017<$[3]> (_t0D9E, _t0DAD);
    real _t0DAF = _t0DAE[0];
    real _t0DB0 = -0.e0;
    bool _t0DB1 = prim >0080 (_t0DAF, _t0DB0);
    real _t0DB2 = 0.1e-8;
    real _t0DB3 = 0.1e-8;
    real _t0DB4 = 0.1e-8;
    vec3 _t0DB5 = [_t0DB2, _t0DB3, _t0DB4];
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    vec3 _t0DBA = [_t0DB7, _t0DB8, _t0DB9];
    real _t0DBB = prim •00CE<$[3]; $[3]; $[]> (_t0DBA, refPos0CDB);
    real _t0DBC = prim -0026<$[]> (_t0DB6, _t0DBB);
    real _t0DBD = 0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec3 _t0DC0 = [_t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = prim •00CE<$[3]; $[3]; $[]> (_t0DC0, dPos0CDC);
    real _t0DC2 = prim /0055 (_t0DBC, _t0DC1);
    vec3 _t0DC3 = prim *0038<$[3]> (dPos0CDC, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DC3, refPos0CDB);
    vec3 _t0DC5 = prim +0017<$[3]> (_t0DB5, _t0DC4);
    real _t0DC6 = _t0DC5[1];
    real _t0DC7 = -0.e0;
    bool _t0DC8 = prim >0080 (_t0DC6, _t0DC7);
    real _t0DC9 = 0.1e-8;
    real _t0DCA = 0.1e-8;
    real _t0DCB = 0.1e-8;
    vec3 _t0DCC = [_t0DC9, _t0DCA, _t0DCB];
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    real _t0DD0 = 0.e0;
    vec3 _t0DD1 = [_t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = prim •00CE<$[3]; $[3]; $[]> (_t0DD1, refPos0CDB);
    real _t0DD3 = prim -0026<$[]> (_t0DCD, _t0DD2);
    real _t0DD4 = 0.1e1;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    vec3 _t0DD7 = [_t0DD4, _t0DD5, _t0DD6];
    real _t0DD8 = prim •00CE<$[3]; $[3]; $[]> (_t0DD7, dPos0CDC);
    real _t0DD9 = prim /0055 (_t0DD3, _t0DD8);
    vec3 _t0DDA = prim *0038<$[3]> (dPos0CDC, _t0DD9);
    vec3 _t0DDB = prim +0017<$[3]> (_t0DDA, refPos0CDB);
    vec3 _t0DDC = prim +0017<$[3]> (_t0DCC, _t0DDB);
    real _t0DDD = _t0DDC[2];
    real _t0DDE = -0.e0;
    bool _t0DDF = prim >0080 (_t0DDD, _t0DDE);
    bool _t0DE0 = prim $and01C4 (_t0DC8, _t0DDF);
    bool _t0DE1 = prim $and01C4 (_t0DB1, _t0DE0);
    bool _t0DE2 = prim $and01C4 (_t0D9A, _t0DE1);
    if _t0DE2 {
      real _t0DE3 = 0.e0;
      real _t0DE4 = 0.1e1;
      real _t0DE5 = 0.e0;
      real _t0DE6 = 0.e0;
      vec3 _t0DE7 = [_t0DE4, _t0DE5, _t0DE6];
      real _t0DE8 = prim •00CE<$[3]; $[3]; $[]> (_t0DE7, refPos0CDB);
      real _t0DE9 = prim -0026<$[]> (_t0DE3, _t0DE8);
      real _t0DEA = 0.1e1;
      real _t0DEB = 0.e0;
      real _t0DEC = 0.e0;
      vec3 _t0DED = [_t0DEA, _t0DEB, _t0DEC];
      real _t0DEE = prim •00CE<$[3]; $[3]; $[]> (_t0DED, dPos0CDC);
      time0CDD = prim /0055 (_t0DE9, _t0DEE);
      face0CDE = 1;
    }
  }
  real _t0DEF = 0.e0;
  real _t0DF0 = 0.e0;
  real _t0DF1 = 0.1e1;
  real _t0DF2 = 0.e0;
  vec3 _t0DF3 = [_t0DF0, _t0DF1, _t0DF2];
  real _t0DF4 = prim •00CE<$[3]; $[3]; $[]> (_t0DF3, refPos0CDB);
  real _t0DF5 = prim -0026<$[]> (_t0DEF, _t0DF4);
  real _t0DF6 = 0.e0;
  real _t0DF7 = 0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, dPos0CDC);
  real _t0DFB = prim /0055 (_t0DF5, _t0DFA);
  real _t0DFC = -0.e0;
  bool _t0DFD = prim >0080 (_t0DFB, _t0DFC);
  real _t0DFE = 0.e0;
  real _t0DFF = 0.e0;
  real _t0E00 = 0.1e1;
  real _t0E01 = 0.e0;
  vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
  real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, refPos0CDB);
  real _t0E04 = prim -0026<$[]> (_t0DFE, _t0E03);
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, dPos0CDC);
  real _t0E0A = prim /0055 (_t0E04, _t0E09);
  bool _t0E0B = prim >0080 (time0CDD, _t0E0A);
  bool _t0E0C = prim $and01C4 (_t0DFD, _t0E0B);
  if _t0E0C {
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.1e1;
    real _t0E0F = 0.1e1;
    real _t0E10 = 0.1e1;
    vec3 _t0E11 = [_t0E0E, _t0E0F, _t0E10];
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, refPos0CDB);
    real _t0E18 = prim -0026<$[]> (_t0E12, _t0E17);
    real _t0E19 = 0.e0;
    real _t0E1A = 0.1e1;
    real _t0E1B = 0.e0;
    vec3 _t0E1C = [_t0E19, _t0E1A, _t0E1B];
    real _t0E1D = prim •00CE<$[3]; $[3]; $[]> (_t0E1C, dPos0CDC);
    real _t0E1E = prim /0055 (_t0E18, _t0E1D);
    vec3 _t0E1F = prim *0038<$[3]> (dPos0CDC, _t0E1E);
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, refPos0CDB);
    real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E11, _t0E20);
    bool _t0E22 = prim >0080 (_t0E0D, _t0E21);
    real _t0E23 = 0.1e-8;
    real _t0E24 = 0.1e-8;
    real _t0E25 = 0.1e-8;
    vec3 _t0E26 = [_t0E23, _t0E24, _t0E25];
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    real _t0E2A = 0.e0;
    vec3 _t0E2B = [_t0E28, _t0E29, _t0E2A];
    real _t0E2C = prim •00CE<$[3]; $[3]; $[]> (_t0E2B, refPos0CDB);
    real _t0E2D = prim -0026<$[]> (_t0E27, _t0E2C);
    real _t0E2E = 0.e0;
    real _t0E2F = 0.1e1;
    real _t0E30 = 0.e0;
    vec3 _t0E31 = [_t0E2E, _t0E2F, _t0E30];
    real _t0E32 = prim •00CE<$[3]; $[3]; $[]> (_t0E31, dPos0CDC);
    real _t0E33 = prim /0055 (_t0E2D, _t0E32);
    vec3 _t0E34 = prim *0038<$[3]> (dPos0CDC, _t0E33);
    vec3 _t0E35 = prim +0017<$[3]> (_t0E34, refPos0CDB);
    vec3 _t0E36 = prim +0017<$[3]> (_t0E26, _t0E35);
    real _t0E37 = _t0E36[0];
    real _t0E38 = -0.e0;
    bool _t0E39 = prim >0080 (_t0E37, _t0E38);
    real _t0E3A = 0.1e-8;
    real _t0E3B = 0.1e-8;
    real _t0E3C = 0.1e-8;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CDB);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CDC);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CDC, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CDB);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[1];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-8;
    real _t0E52 = 0.1e-8;
    real _t0E53 = 0.1e-8;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CDB);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CDC);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CDC, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CDB);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[2];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    bool _t0E68 = prim $and01C4 (_t0E50, _t0E67);
    bool _t0E69 = prim $and01C4 (_t0E39, _t0E68);
    bool _t0E6A = prim $and01C4 (_t0E22, _t0E69);
    if _t0E6A {
      real _t0E6B = 0.e0;
      real _t0E6C = 0.e0;
      real _t0E6D = 0.1e1;
      real _t0E6E = 0.e0;
      vec3 _t0E6F = [_t0E6C, _t0E6D, _t0E6E];
      real _t0E70 = prim •00CE<$[3]; $[3]; $[]> (_t0E6F, refPos0CDB);
      real _t0E71 = prim -0026<$[]> (_t0E6B, _t0E70);
      real _t0E72 = 0.e0;
      real _t0E73 = 0.1e1;
      real _t0E74 = 0.e0;
      vec3 _t0E75 = [_t0E72, _t0E73, _t0E74];
      real _t0E76 = prim •00CE<$[3]; $[3]; $[]> (_t0E75, dPos0CDC);
      time0CDD = prim /0055 (_t0E71, _t0E76);
      face0CDE = 2;
    }
  }
  real _t0E77 = 0.e0;
  real _t0E78 = 0.e0;
  real _t0E79 = 0.e0;
  real _t0E7A = 0.1e1;
  vec3 _t0E7B = [_t0E78, _t0E79, _t0E7A];
  real _t0E7C = prim •00CE<$[3]; $[3]; $[]> (_t0E7B, refPos0CDB);
  real _t0E7D = prim -0026<$[]> (_t0E77, _t0E7C);
  real _t0E7E = 0.e0;
  real _t0E7F = 0.e0;
  real _t0E80 = 0.1e1;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, dPos0CDC);
  real _t0E83 = prim /0055 (_t0E7D, _t0E82);
  real _t0E84 = -0.e0;
  bool _t0E85 = prim >0080 (_t0E83, _t0E84);
  real _t0E86 = 0.e0;
  real _t0E87 = 0.e0;
  real _t0E88 = 0.e0;
  real _t0E89 = 0.1e1;
  vec3 _t0E8A = [_t0E87, _t0E88, _t0E89];
  real _t0E8B = prim •00CE<$[3]; $[3]; $[]> (_t0E8A, refPos0CDB);
  real _t0E8C = prim -0026<$[]> (_t0E86, _t0E8B);
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = 0.1e1;
  vec3 _t0E90 = [_t0E8D, _t0E8E, _t0E8F];
  real _t0E91 = prim •00CE<$[3]; $[3]; $[]> (_t0E90, dPos0CDC);
  real _t0E92 = prim /0055 (_t0E8C, _t0E91);
  bool _t0E93 = prim >0080 (time0CDD, _t0E92);
  bool _t0E94 = prim $and01C4 (_t0E85, _t0E93);
  if _t0E94 {
    real _t0E95 = 0.1e1;
    real _t0E96 = 0.1e1;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.1e1;
    vec3 _t0E99 = [_t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec3 _t0E9E = [_t0E9B, _t0E9C, _t0E9D];
    real _t0E9F = prim •00CE<$[3]; $[3]; $[]> (_t0E9E, refPos0CDB);
    real _t0EA0 = prim -0026<$[]> (_t0E9A, _t0E9F);
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec3 _t0EA4 = [_t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = prim •00CE<$[3]; $[3]; $[]> (_t0EA4, dPos0CDC);
    real _t0EA6 = prim /0055 (_t0EA0, _t0EA5);
    vec3 _t0EA7 = prim *0038<$[3]> (dPos0CDC, _t0EA6);
    vec3 _t0EA8 = prim +0017<$[3]> (_t0EA7, refPos0CDB);
    real _t0EA9 = prim •00CE<$[3]; $[3]; $[]> (_t0E99, _t0EA8);
    bool _t0EAA = prim >0080 (_t0E95, _t0EA9);
    real _t0EAB = 0.1e-8;
    real _t0EAC = 0.1e-8;
    real _t0EAD = 0.1e-8;
    vec3 _t0EAE = [_t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec3 _t0EB3 = [_t0EB0, _t0EB1, _t0EB2];
    real _t0EB4 = prim •00CE<$[3]; $[3]; $[]> (_t0EB3, refPos0CDB);
    real _t0EB5 = prim -0026<$[]> (_t0EAF, _t0EB4);
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.1e1;
    vec3 _t0EB9 = [_t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = prim •00CE<$[3]; $[3]; $[]> (_t0EB9, dPos0CDC);
    real _t0EBB = prim /0055 (_t0EB5, _t0EBA);
    vec3 _t0EBC = prim *0038<$[3]> (dPos0CDC, _t0EBB);
    vec3 _t0EBD = prim +0017<$[3]> (_t0EBC, refPos0CDB);
    vec3 _t0EBE = prim +0017<$[3]> (_t0EAE, _t0EBD);
    real _t0EBF = _t0EBE[0];
    real _t0EC0 = -0.e0;
    bool _t0EC1 = prim >0080 (_t0EBF, _t0EC0);
    real _t0EC2 = 0.1e-8;
    real _t0EC3 = 0.1e-8;
    real _t0EC4 = 0.1e-8;
    vec3 _t0EC5 = [_t0EC2, _t0EC3, _t0EC4];
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.1e1;
    vec3 _t0ECA = [_t0EC7, _t0EC8, _t0EC9];
    real _t0ECB = prim •00CE<$[3]; $[3]; $[]> (_t0ECA, refPos0CDB);
    real _t0ECC = prim -0026<$[]> (_t0EC6, _t0ECB);
    real _t0ECD = 0.e0;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.1e1;
    vec3 _t0ED0 = [_t0ECD, _t0ECE, _t0ECF];
    real _t0ED1 = prim •00CE<$[3]; $[3]; $[]> (_t0ED0, dPos0CDC);
    real _t0ED2 = prim /0055 (_t0ECC, _t0ED1);
    vec3 _t0ED3 = prim *0038<$[3]> (dPos0CDC, _t0ED2);
    vec3 _t0ED4 = prim +0017<$[3]> (_t0ED3, refPos0CDB);
    vec3 _t0ED5 = prim +0017<$[3]> (_t0EC5, _t0ED4);
    real _t0ED6 = _t0ED5[1];
    real _t0ED7 = -0.e0;
    bool _t0ED8 = prim >0080 (_t0ED6, _t0ED7);
    real _t0ED9 = 0.1e-8;
    real _t0EDA = 0.1e-8;
    real _t0EDB = 0.1e-8;
    vec3 _t0EDC = [_t0ED9, _t0EDA, _t0EDB];
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.1e1;
    vec3 _t0EE1 = [_t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = prim •00CE<$[3]; $[3]; $[]> (_t0EE1, refPos0CDB);
    real _t0EE3 = prim -0026<$[]> (_t0EDD, _t0EE2);
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.1e1;
    vec3 _t0EE7 = [_t0EE4, _t0EE5, _t0EE6];
    real _t0EE8 = prim •00CE<$[3]; $[3]; $[]> (_t0EE7, dPos0CDC);
    real _t0EE9 = prim /0055 (_t0EE3, _t0EE8);
    vec3 _t0EEA = prim *0038<$[3]> (dPos0CDC, _t0EE9);
    vec3 _t0EEB = prim +0017<$[3]> (_t0EEA, refPos0CDB);
    vec3 _t0EEC = prim +0017<$[3]> (_t0EDC, _t0EEB);
    real _t0EED = _t0EEC[2];
    real _t0EEE = -0.e0;
    bool _t0EEF = prim >0080 (_t0EED, _t0EEE);
    bool _t0EF0 = prim $and01C4 (_t0ED8, _t0EEF);
    bool _t0EF1 = prim $and01C4 (_t0EC1, _t0EF0);
    bool _t0EF2 = prim $and01C4 (_t0EAA, _t0EF1);
    if _t0EF2 {
      real _t0EF3 = 0.e0;
      real _t0EF4 = 0.e0;
      real _t0EF5 = 0.e0;
      real _t0EF6 = 0.1e1;
      vec3 _t0EF7 = [_t0EF4, _t0EF5, _t0EF6];
      real _t0EF8 = prim •00CE<$[3]; $[3]; $[]> (_t0EF7, refPos0CDB);
      real _t0EF9 = prim -0026<$[]> (_t0EF3, _t0EF8);
      real _t0EFA = 0.e0;
      real _t0EFB = 0.e0;
      real _t0EFC = 0.1e1;
      vec3 _t0EFD = [_t0EFA, _t0EFB, _t0EFC];
      real _t0EFE = prim •00CE<$[3]; $[3]; $[]> (_t0EFD, dPos0CDC);
      time0CDD = prim /0055 (_t0EF9, _t0EFE);
      face0CDE = 3;
    }
  }
  int _t0EFF = -1;
  bool _t0F00 = prim !=0086 (face0CDE, _t0EFF);
  if _t0F00 {
    real _t0F01 = (real)face0CDE;
    vec2 _t0F02 = [time0CDD, _t0F01];
    return _t0F02;
  } else {
    real _t0F03 = -0.1e1;
    real _t0F04 = -0.1e1;
    vec2 _t0F05 = [_t0F03, _t0F04];
    return _t0F05;
  }
}
function vec2#0 _exit0F06 (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0F07 = +inf;
  int face0F08 = -1;
  real _t0F09 = 0.57735026919e0;
  real _t0F0A = 0.57735026919e0;
  real _t0F0B = -0.57735026919e0;
  real _t0F0C = 0.57735026919e0;
  vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
  real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0CDB);
  real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
  real _t0F10 = 0.57735026919e0;
  real _t0F11 = -0.57735026919e0;
  real _t0F12 = 0.57735026919e0;
  vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
  real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0CDC);
  real _t0F15 = prim /0055 (_t0F0F, _t0F14);
  real _t0F16 = -0.e0;
  bool _t0F17 = prim >0080 (_t0F15, _t0F16);
  real _t0F18 = 0.57735026919e0;
  real _t0F19 = 0.57735026919e0;
  real _t0F1A = -0.57735026919e0;
  real _t0F1B = 0.57735026919e0;
  vec3 _t0F1C = [_t0F19, _t0F1A, _t0F1B];
  real _t0F1D = prim •00CE<$[3]; $[3]; $[]> (_t0F1C, refPos0CDB);
  real _t0F1E = prim -0026<$[]> (_t0F18, _t0F1D);
  real _t0F1F = 0.57735026919e0;
  real _t0F20 = -0.57735026919e0;
  real _t0F21 = 0.57735026919e0;
  vec3 _t0F22 = [_t0F1F, _t0F20, _t0F21];
  real _t0F23 = prim •00CE<$[3]; $[3]; $[]> (_t0F22, dPos0CDC);
  real _t0F24 = prim /0055 (_t0F1E, _t0F23);
  bool _t0F25 = prim >0080 (time0F07, _t0F24);
  bool _t0F26 = prim $and01C4 (_t0F17, _t0F25);
  if _t0F26 {
    real _t0F27 = 0.57735026919e0;
    real _t0F28 = 0.57735026919e0;
    real _t0F29 = -0.57735026919e0;
    real _t0F2A = 0.57735026919e0;
    vec3 _t0F2B = [_t0F28, _t0F29, _t0F2A];
    real _t0F2C = prim •00CE<$[3]; $[3]; $[]> (_t0F2B, refPos0CDB);
    real _t0F2D = prim -0026<$[]> (_t0F27, _t0F2C);
    real _t0F2E = 0.57735026919e0;
    real _t0F2F = -0.57735026919e0;
    real _t0F30 = 0.57735026919e0;
    vec3 _t0F31 = [_t0F2E, _t0F2F, _t0F30];
    real _t0F32 = prim •00CE<$[3]; $[3]; $[]> (_t0F31, dPos0CDC);
    time0F07 = prim /0055 (_t0F2D, _t0F32);
    face0F08 = 0;
  }
  real _t0F33 = 0.e0;
  real _t0F34 = 0.1e1;
  real _t0F35 = 0.e0;
  real _t0F36 = 0.e0;
  vec3 _t0F37 = [_t0F34, _t0F35, _t0F36];
  real _t0F38 = prim •00CE<$[3]; $[3]; $[]> (_t0F37, refPos0CDB);
  real _t0F39 = prim -0026<$[]> (_t0F33, _t0F38);
  real _t0F3A = 0.1e1;
  real _t0F3B = 0.e0;
  real _t0F3C = 0.e0;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, dPos0CDC);
  real _t0F3F = prim /0055 (_t0F39, _t0F3E);
  real _t0F40 = -0.e0;
  bool _t0F41 = prim >0080 (_t0F3F, _t0F40);
  real _t0F42 = 0.e0;
  real _t0F43 = 0.1e1;
  real _t0F44 = 0.e0;
  real _t0F45 = 0.e0;
  vec3 _t0F46 = [_t0F43, _t0F44, _t0F45];
  real _t0F47 = prim •00CE<$[3]; $[3]; $[]> (_t0F46, refPos0CDB);
  real _t0F48 = prim -0026<$[]> (_t0F42, _t0F47);
  real _t0F49 = 0.1e1;
  real _t0F4A = 0.e0;
  real _t0F4B = 0.e0;
  vec3 _t0F4C = [_t0F49, _t0F4A, _t0F4B];
  real _t0F4D = prim •00CE<$[3]; $[3]; $[]> (_t0F4C, dPos0CDC);
  real _t0F4E = prim /0055 (_t0F48, _t0F4D);
  bool _t0F4F = prim >0080 (time0F07, _t0F4E);
  bool _t0F50 = prim $and01C4 (_t0F41, _t0F4F);
  if _t0F50 {
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec3 _t0F55 = [_t0F52, _t0F53, _t0F54];
    real _t0F56 = prim •00CE<$[3]; $[3]; $[]> (_t0F55, refPos0CDB);
    real _t0F57 = prim -0026<$[]> (_t0F51, _t0F56);
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    vec3 _t0F5B = [_t0F58, _t0F59, _t0F5A];
    real _t0F5C = prim •00CE<$[3]; $[3]; $[]> (_t0F5B, dPos0CDC);
    time0F07 = prim /0055 (_t0F57, _t0F5C);
    face0F08 = 1;
  }
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  real _t0F5F = 0.1e1;
  real _t0F60 = 0.e0;
  vec3 _t0F61 = [_t0F5E, _t0F5F, _t0F60];
  real _t0F62 = prim •00CE<$[3]; $[3]; $[]> (_t0F61, refPos0CDB);
  real _t0F63 = prim -0026<$[]> (_t0F5D, _t0F62);
  real _t0F64 = 0.e0;
  real _t0F65 = 0.1e1;
  real _t0F66 = 0.e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, dPos0CDC);
  real _t0F69 = prim /0055 (_t0F63, _t0F68);
  real _t0F6A = -0.e0;
  bool _t0F6B = prim >0080 (_t0F69, _t0F6A);
  real _t0F6C = 0.e0;
  real _t0F6D = 0.e0;
  real _t0F6E = 0.1e1;
  real _t0F6F = 0.e0;
  vec3 _t0F70 = [_t0F6D, _t0F6E, _t0F6F];
  real _t0F71 = prim •00CE<$[3]; $[3]; $[]> (_t0F70, refPos0CDB);
  real _t0F72 = prim -0026<$[]> (_t0F6C, _t0F71);
  real _t0F73 = 0.e0;
  real _t0F74 = 0.1e1;
  real _t0F75 = 0.e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, dPos0CDC);
  real _t0F78 = prim /0055 (_t0F72, _t0F77);
  bool _t0F79 = prim >0080 (time0F07, _t0F78);
  bool _t0F7A = prim $and01C4 (_t0F6B, _t0F79);
  if _t0F7A {
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec3 _t0F7F = [_t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = prim •00CE<$[3]; $[3]; $[]> (_t0F7F, refPos0CDB);
    real _t0F81 = prim -0026<$[]> (_t0F7B, _t0F80);
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    real _t0F84 = 0.e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, dPos0CDC);
    time0F07 = prim /0055 (_t0F81, _t0F86);
    face0F08 = 2;
  }
  real _t0F87 = 0.e0;
  real _t0F88 = 0.e0;
  real _t0F89 = 0.e0;
  real _t0F8A = 0.1e1;
  vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
  real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, refPos0CDB);
  real _t0F8D = prim -0026<$[]> (_t0F87, _t0F8C);
  real _t0F8E = 0.e0;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.1e1;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, dPos0CDC);
  real _t0F93 = prim /0055 (_t0F8D, _t0F92);
  real _t0F94 = -0.e0;
  bool _t0F95 = prim >0080 (_t0F93, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = 0.e0;
  real _t0F99 = 0.1e1;
  vec3 _t0F9A = [_t0F97, _t0F98, _t0F99];
  real _t0F9B = prim •00CE<$[3]; $[3]; $[]> (_t0F9A, refPos0CDB);
  real _t0F9C = prim -0026<$[]> (_t0F96, _t0F9B);
  real _t0F9D = 0.e0;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.1e1;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, dPos0CDC);
  real _t0FA2 = prim /0055 (_t0F9C, _t0FA1);
  bool _t0FA3 = prim >0080 (time0F07, _t0FA2);
  bool _t0FA4 = prim $and01C4 (_t0F95, _t0FA3);
  if _t0FA4 {
    real _t0FA5 = 0.e0;
    real _t0FA6 = 0.e0;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.1e1;
    vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0CDB);
    real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
    real _t0FAC = 0.e0;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.1e1;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0CDC);
    time0F07 = prim /0055 (_t0FAB, _t0FB0);
    face0F08 = 3;
  }
  int _t0FB1 = -1;
  bool _t0FB2 = prim !=0086 (face0F08, _t0FB1);
  if _t0FB2 {
    real _t0FB3 = (real)face0F08;
    vec2 _t0FB4 = [time0F07, _t0FB3];
    return _t0FB4;
  } else {
    real _t0FB5 = -0.1e1;
    real _t0FB6 = -0.1e1;
    vec2 _t0FB7 = [_t0FB5, _t0FB6];
    return _t0FB7;
  }
}
function Femdata: Mesh#0 domain0FB8 (Femdata: Space arg00FB9)
{
  Femdata: Mesh _t0FBA = extractFem(arg00FB9, Mesh);
  return _t0FBA;
}
function Femdata: Space#0 space0FBB (Femdata: FemFunc arg00FBC)
{
  Femdata: Space _t0FBD = extractFem(arg00FBC, Space);
  return _t0FBD;
}
function Femdata: FuncCell#0 funcCell0FBE (Femdata: FemFunc arg00FBF, Femdata: MeshCell arg10FC0)
{
  int _t0FC1 = extractFemItem(CellIndex(MeshCell), int, arg10FC0);
  Femdata: FuncCell _t0FC2 = loadFem(FuncCell, arg00FBF, _t0FC1);
  return _t0FC2;
}
function real#1 mask0FD2 (vec3 x0FD3)
{
  real _t0FD4 = 0.1e1;
  return _t0FD4;
}
function vec3#1 color0FDB (vec3 x0FDC)
{
  real _t0FDD = prim @00A5<#∞; %3; $[]> (V0FCE, x0FDC);
  vec3 _t0FDE = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t0FDD);
  return _t0FDE;
}
function real#1 alpha0FDF (real v0FE0, real g0FE1)
{
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.1e1;
  real _t0FE4 = 0.13e1;
  real _t0FE5 = 0.1e1;
  real _t0FE6 = prim |()|00B5<$[]> (v0FE0);
  real _t0FE7 = prim *0034 (g0FE1, thick0434);
  real _t0FE8 = prim /0055 (_t0FE6, _t0FE7);
  real _t0FE9 = prim -0026<$[]> (_t0FE5, _t0FE8);
  real _t0FEA = prim *0034 (_t0FE4, _t0FE9);
  real _t0FEB = prim clamp0094<$[]> (_t0FE2, _t0FE3, _t0FEA);
  return _t0FEB;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F = func alpha0FDF (val103A, _t103E);
                  real _t1040 = func mask0FD2 (x1025);
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057 = func color0FDB (x1025);
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function bool#0 !=0451 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0454 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0455 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t0456 = prim !=0086 (_t0454, _t0455);
  return _t0456;
}
function bool#0 ==0457 (Femdata: MeshCell cell10452, Femdata: MeshCell cell10453)
{
  int _t0458 = extractFemItem(CellIndex(Mesh), int, cell10452);
  int _t0459 = extractFemItem(CellIndex(Mesh), int, cell10453);
  bool _t045A = prim ==0082 (_t0458, _t0459);
  return _t045A;
}
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function Femdata: RefCell#0 refcell04A5 (Femdata: Mesh arg004A6)
{
  Femdata: RefCell _t04A7 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004A6);
  return _t04A7;
}
function Femdata: MeshCell[]#0 cells04A8 (Femdata: Mesh arg004A9)
{
  Femdata: MeshCell[] _t04AA = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004A9);
  return _t04AA;
}
function Femdata: MeshCell[]#0 cells04AB (Femdata: Mesh arg004A9)
{
  int _t04AC = 0;
  int _t04AD = extractFemItem(NumCell(Mesh), int, arg004A9);
  int[] _t04AE = prim $range01C3 (_t04AC, _t04AD);
  Femdata: MeshCell[] accum04B1 = {};
  foreach i04AF in _t04AE {
    Femdata: MeshCell _t04B0 = loadFem(MeshCell, arg004A9, i04AF);
    accum04B1 = prim @0010<Femdata: MeshCell> (accum04B1, _t04B0);
  }
  return accum04B1;
}
function int#0 numCell04B2 (Femdata: Mesh arg004A6)
{
  int _t04B3 = extractFemItem(NumCell(Mesh), int, arg004A6);
  return _t04B3;
}
function tensor[3,3,3,3]#0 msh_transform_304B4 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04B8 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04B9 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B8);
  field(3)[3,3,3] _t04BA = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04B9);
  field(3)[3,3,3,3] _t04BB = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04BA);
  tensor[3,3,3,3] _t04BC = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04BB, pos04B5);
  return _t04BC;
}
function tensor[3,3,3]#0 msh_transform_204BD (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04BE = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04BF = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04BE);
  field(3)[3,3,3] _t04C0 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04BF);
  tensor[3,3,3] _t04C1 = prim @00A5<#∞; %3; $[3,3,3]> (_t04C0, pos04B5);
  return _t04C1;
}
function tensor[3,3]#0 msh_transform_104C2 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C3 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  field(3)[3,3] _t04C4 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04C3);
  tensor[3,3] _t04C5 = prim @00A5<#∞; %3; $[3,3]> (_t04C4, pos04B5);
  return _t04C5;
}
function vec3#2 msh_transform_004C6 (vec3 pos04B5, int cell04B6, Femdata: Mesh mesh04B7)
{
  field(3)[3] _t04C7 = femField(mesh04B7,cell04B6,field(3)[3],Transform,);
  vec3 _t04C8 = prim @00A5<#∞; %3; $[3]> (_t04C7, pos04B5);
  return _t04C8;
}
function Femdata: MeshPos#0 _msh_newtonInverse04C9 (vec3 pos04CA, int cellInt04CB, Femdata: Mesh mesh04CC)
{
  real _t04CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CE = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04CF = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04D0 = [_t04CD, _t04CE, _t04CF];
  field(3)[3] _t04D1 = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
  field(3)[3,3] _t04D2 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04D1);
  field(3)[3,3] _t04D3 = prim inv015E<#∞; %3> (_t04D2);
  real _t04D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D5 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04D6 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t04D7 = [_t04D4, _t04D5, _t04D6];
  A04D8 = prim @00A5<#∞; %3; $[3,3]> (_t04D3, _t04D7);
  int _t04D9 = 0;
  int _t04DA = 16;
  int[] _t04DB = prim $range01C3 (_t04D9, _t04DA);
  foreach itter0507 in _t04DB {
    field(3)[3] _t04DC = femField(mesh04CC,cellInt04CB,field(3)[3],Transform,);
    field(3)[3] _t04DD = prim -002E<#∞; %3; $[3]> (_t04DC, pos04CA);
    field(3)[3] _t04DE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A04D8, _t04DD);
    delta04DF = prim @00A5<#∞; %3; $[3]> (_t04DE, xn04D0);
    xn04D0 = prim -0026<$[3]> (xn04D0, delta04DF);
    real _t04E0 = 0.1e-7;
    real _t04E1 = prim |()|00B5<$[3]> (delta04DF);
    bool _t04E2 = prim >=007E (_t04E0, _t04E1);
    if _t04E2 {
      real _t04E3 = 0.1e1;
      real _t04E4 = 0.1e1;
      real _t04E5 = 0.1e1;
      real _t04E6 = 0.1e1;
      vec3 _t04E7 = [_t04E4, _t04E5, _t04E6];
      real _t04E8 = prim •00CE<$[3]; $[3]; $[]> (_t04E7, xn04D0);
      bool _t04E9 = prim >0080 (_t04E3, _t04E8);
      real _t04EA = 0.1e-8;
      real _t04EB = 0.1e-8;
      real _t04EC = 0.1e-8;
      vec3 _t04ED = [_t04EA, _t04EB, _t04EC];
      vec3 _t04EE = prim +0017<$[3]> (_t04ED, xn04D0);
      real _t04EF = _t04EE[0];
      real _t04F0 = -0.e0;
      bool _t04F1 = prim >0080 (_t04EF, _t04F0);
      real _t04F2 = 0.1e-8;
      real _t04F3 = 0.1e-8;
      real _t04F4 = 0.1e-8;
      vec3 _t04F5 = [_t04F2, _t04F3, _t04F4];
      vec3 _t04F6 = prim +0017<$[3]> (_t04F5, xn04D0);
      real _t04F7 = _t04F6[1];
      real _t04F8 = -0.e0;
      bool _t04F9 = prim >0080 (_t04F7, _t04F8);
      real _t04FA = 0.1e-8;
      real _t04FB = 0.1e-8;
      real _t04FC = 0.1e-8;
      vec3 _t04FD = [_t04FA, _t04FB, _t04FC];
      vec3 _t04FE = prim +0017<$[3]> (_t04FD, xn04D0);
      real _t04FF = _t04FE[2];
      real _t0500 = -0.e0;
      bool _t0501 = prim >0080 (_t04FF, _t0500);
      bool _t0502 = prim $and01C4 (_t04F9, _t0501);
      bool _t0503 = prim $and01C4 (_t04F1, _t0502);
      bool _t0504 = prim $and01C4 (_t04E9, _t0503);
      if _t0504 {
        Femdata: MeshPos _t0505 = extractFemItemN((mesh04CC, cellInt04CB, xn04D0, pos04CA),AllBuild(MeshPos),);
        return _t0505;
      } else {
        Femdata: MeshPos _t0506 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
        return _t0506;
      }
    }
  }
  Femdata: MeshPos _t0508 = extractFemItemN((mesh04CC),InvalidBuild(MeshPos),);
  return _t0508;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos0509 (Femdata: MeshPos pos050A)
{
  bool _t050B = extractFemItem(WorldTest(MeshPos), bool, pos050A);
  if _t050B {
    vec3 _t050C = extractFemItem(RefPos(MeshPos), vec3, pos050A);
    int _t050D = extractFemItem(CellIndex(MeshPos), int, pos050A);
    Femdata: Mesh _t050E = extractFem(pos050A, Mesh);
    vec3 _t050F = func msh_transform_004C6 (_t050C, _t050D, _t050E);
    Femdata: MeshPos _t0510 = extractFemItemN((pos050A, _t050F),NewWorld(MeshPos),);
    return _t0510;
  } else {
    return pos050A;
  }
}
function vec3#0 worldPos0511 (Femdata: MeshPos pos050A)
{
  vec3 _t0512 = extractFemItem(RefPos(MeshPos), vec3, pos050A);
  int _t0513 = extractFemItem(CellIndex(MeshPos), int, pos050A);
  Femdata: Mesh _t0514 = extractFem(pos050A, Mesh);
  vec3 _t0515 = func msh_transform_004C6 (_t0512, _t0513, _t0514);
  return _t0515;
}
function Femdata: MeshPos#0 $exitPos0516 (Femdata: Mesh mesh0517, int cellId0518, vec3 refPos0519, vec3 dPos051A, real[2] time051B)
{
  int _t051C = -1;
  real _t051D = time051B[1];
  int _t051E = prim $r2i01B7 (_t051D);
  int[2] _t0520 = func nextCell4051F (_t051E, cellId0518, mesh0517);
  int _t0521 = 0;
  int _t0522 = prim $sub01C0<int; %2> (_t0520, _t0521);
  bool _t0523 = prim !=0086 (_t051C, _t0522);
  if _t0523 {
    real _t0524 = time051B[1];
    int _t0525 = prim $r2i01B7 (_t0524);
    int[2] _t0526 = func nextCell4051F (_t0525, cellId0518, mesh0517);
    int _t0527 = 0;
    int _t0528 = prim $sub01C0<int; %2> (_t0526, _t0527);
    real _t0529 = 0.1e1;
    real _t052A = 0.e0;
    real _t052B = 0.e0;
    real _t052C = 0.e0;
    vec4 _t052D = [_t0529, _t052A, _t052B, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.222044604925e-15;
    real _t0539 = 0.e0;
    real _t053A = 0.44408920985e-15;
    real _t053B = 0.1e1;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    tensor[4,4] _t053D = [_t052D, _t0532, _t0537, _t053C];
    real _t053E = 0.173205080757e1;
    real _t053F = 0.173205080757e1;
    real _t0540 = 0.173205080757e1;
    real _t0541 = -0.173205080757e1;
    vec4 _t0542 = [_t053E, _t053F, _t0540, _t0541];
    real _t0543 = 0.1e1;
    real _t0544 = 0.2e1;
    real _t0545 = 0.1e1;
    real _t0546 = -0.1e1;
    vec4 _t0547 = [_t0543, _t0544, _t0545, _t0546];
    real _t0548 = -0.1e1;
    real _t0549 = -0.1e1;
    real _t054A = -0.192296268638e-15;
    real _t054B = 0.1e1;
    vec4 _t054C = [_t0548, _t0549, _t054A, _t054B];
    real _t054D = 0.222044604925e-15;
    real _t054E = 0.e0;
    real _t054F = 0.44408920985e-15;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    tensor[4,4] _t0552 = [_t0542, _t0547, _t054C, _t0551];
    real _t0553 = 0.1e1;
    real _t0554 = 0.2e1;
    real _t0555 = 0.1e1;
    real _t0556 = -0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    real _t0558 = 0.173205080757e1;
    real _t0559 = 0.173205080757e1;
    real _t055A = 0.173205080757e1;
    real _t055B = -0.173205080757e1;
    vec4 _t055C = [_t0558, _t0559, _t055A, _t055B];
    real _t055D = -0.1e1;
    real _t055E = -0.1e1;
    real _t055F = -0.192296268638e-15;
    real _t0560 = 0.1e1;
    vec4 _t0561 = [_t055D, _t055E, _t055F, _t0560];
    real _t0562 = 0.222044604925e-15;
    real _t0563 = 0.e0;
    real _t0564 = 0.44408920985e-15;
    real _t0565 = 0.1e1;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    tensor[4,4] _t0567 = [_t0557, _t055C, _t0561, _t0566];
    real _t0568 = 0.1e1;
    real _t0569 = 0.2e1;
    real _t056A = 0.1e1;
    real _t056B = -0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    real _t056D = -0.1e1;
    real _t056E = -0.1e1;
    real _t056F = -0.192296268638e-15;
    real _t0570 = 0.1e1;
    vec4 _t0571 = [_t056D, _t056E, _t056F, _t0570];
    real _t0572 = 0.173205080757e1;
    real _t0573 = 0.173205080757e1;
    real _t0574 = 0.173205080757e1;
    real _t0575 = -0.173205080757e1;
    vec4 _t0576 = [_t0572, _t0573, _t0574, _t0575];
    real _t0577 = 0.222044604925e-15;
    real _t0578 = 0.e0;
    real _t0579 = 0.44408920985e-15;
    real _t057A = 0.1e1;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    tensor[4,4] _t057C = [_t056C, _t0571, _t0576, _t057B];
    tensor[4,4][4] _t057D = {_t053D, _t0552, _t0567, _t057C};
    real _t057E = 0.57735026919e0;
    real _t057F = -0.1e1;
    real _t0580 = -0.1e1;
    real _t0581 = 0.1e1;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = -0.57735026919e0;
    real _t0584 = 0.1e1;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.57735026919e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    real _t0590 = 0.1e1;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    tensor[4,4] _t0592 = [_t0582, _t0587, _t058C, _t0591];
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    real _t0595 = 0.e0;
    real _t0596 = 0.e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.e0;
    real _t0599 = 0.1e1;
    real _t059A = 0.e0;
    real _t059B = 0.e0;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    real _t059D = 0.e0;
    real _t059E = 0.e0;
    real _t059F = 0.1e1;
    real _t05A0 = 0.e0;
    vec4 _t05A1 = [_t059D, _t059E, _t059F, _t05A0];
    real _t05A2 = 0.e0;
    real _t05A3 = 0.e0;
    real _t05A4 = 0.e0;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    tensor[4,4] _t05A7 = [_t0597, _t059C, _t05A1, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.1e1;
    real _t05AA = 0.e0;
    real _t05AB = 0.e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.1e1;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.e0;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    real _t05B5 = 0.e0;
    vec4 _t05B6 = [_t05B2, _t05B3, _t05B4, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = 0.e0;
    real _t05B9 = 0.e0;
    real _t05BA = 0.1e1;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    tensor[4,4] _t05BC = [_t05AC, _t05B1, _t05B6, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.1e1;
    real _t05BF = 0.e0;
    real _t05C0 = 0.e0;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    real _t05C2 = 0.e0;
    real _t05C3 = 0.e0;
    real _t05C4 = 0.1e1;
    real _t05C5 = 0.e0;
    vec4 _t05C6 = [_t05C2, _t05C3, _t05C4, _t05C5];
    real _t05C7 = 0.1e1;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = 0.e0;
    vec4 _t05CB = [_t05C7, _t05C8, _t05C9, _t05CA];
    real _t05CC = 0.e0;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    tensor[4,4] _t05D1 = [_t05C1, _t05C6, _t05CB, _t05D0];
    tensor[4,4][4] _t05D2 = {_t0592, _t05A7, _t05BC, _t05D1};
    real _t05D3 = -0.1e1;
    real _t05D4 = 0.57735026919e0;
    real _t05D5 = -0.1e1;
    real _t05D6 = 0.1e1;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = -0.57735026919e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.57735026919e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.1e1;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    tensor[4,4] _t05E7 = [_t05D7, _t05DC, _t05E1, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.1e1;
    real _t05EA = 0.e0;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.1e1;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    real _t05F2 = 0.e0;
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    vec4 _t05F6 = [_t05F2, _t05F3, _t05F4, _t05F5];
    real _t05F7 = 0.e0;
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    tensor[4,4] _t05FC = [_t05EC, _t05F1, _t05F6, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.1e1;
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    real _t060A = 0.e0;
    vec4 _t060B = [_t0607, _t0608, _t0609, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.e0;
    real _t060F = 0.1e1;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    tensor[4,4] _t0611 = [_t0601, _t0606, _t060B, _t0610];
    real _t0612 = 0.1e1;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    vec4 _t0616 = [_t0612, _t0613, _t0614, _t0615];
    real _t0617 = 0.e0;
    real _t0618 = 0.e0;
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    vec4 _t061B = [_t0617, _t0618, _t0619, _t061A];
    real _t061C = 0.e0;
    real _t061D = 0.1e1;
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    vec4 _t0620 = [_t061C, _t061D, _t061E, _t061F];
    real _t0621 = 0.e0;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.1e1;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    tensor[4,4] _t0626 = [_t0616, _t061B, _t0620, _t0625];
    tensor[4,4][4] _t0627 = {_t05E7, _t05FC, _t0611, _t0626};
    real _t0628 = -0.1e1;
    real _t0629 = -0.1e1;
    real _t062A = 0.57735026919e0;
    real _t062B = 0.1e1;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.1e1;
    real _t062E = 0.e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    real _t0634 = 0.57735026919e0;
    real _t0635 = 0.e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.e0;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    real _t0652 = 0.1e1;
    real _t0653 = 0.e0;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    real _t065C = 0.e0;
    real _t065D = 0.1e1;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.1e1;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    tensor[4,4] _t0666 = [_t0656, _t065B, _t0660, _t0665];
    real _t0667 = 0.1e1;
    real _t0668 = 0.e0;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    vec4 _t066B = [_t0667, _t0668, _t0669, _t066A];
    real _t066C = 0.e0;
    real _t066D = 0.1e1;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    vec4 _t0670 = [_t066C, _t066D, _t066E, _t066F];
    real _t0671 = 0.e0;
    real _t0672 = 0.e0;
    real _t0673 = 0.1e1;
    real _t0674 = 0.e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = 0.e0;
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.1e1;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    tensor[4,4] _t067B = [_t066B, _t0670, _t0675, _t067A];
    tensor[4,4][4] _t067C = {_t063C, _t0651, _t0666, _t067B};
    tensor[4,4][4][4] _t067D = {_t057D, _t05D2, _t0627, _t067C};
    real _t067E = time051B[1];
    int _t067F = prim $r2i01B7 (_t067E);
    tensor[4,4][4] _t0680 = prim $sub01C0<tensor[4,4][4]; %4> (_t067D, _t067F);
    real _t0681 = time051B[1];
    int _t0682 = prim $r2i01B7 (_t0681);
    int[2] _t0683 = func nextCell4051F (_t0682, cellId0518, mesh0517);
    int _t0684 = 1;
    int _t0685 = prim $sub01C0<int; %2> (_t0683, _t0684);
    tensor[4,4] _t0686 = prim $sub01C0<tensor[4,4]; %4> (_t0680, _t0685);
    real _t0687 = time051B[0];
    vec3 _t0688 = prim *0036<$[3]> (_t0687, dPos051A);
    vec3 _t0689 = prim +0017<$[3]> (_t0688, refPos0519);
    real _t068A = _t0689[0];
    real _t068B = time051B[0];
    vec3 _t068C = prim *0036<$[3]> (_t068B, dPos051A);
    vec3 _t068D = prim +0017<$[3]> (_t068C, refPos0519);
    real _t068E = _t068D[1];
    real _t068F = time051B[0];
    vec3 _t0690 = prim *0036<$[3]> (_t068F, dPos051A);
    vec3 _t0691 = prim +0017<$[3]> (_t0690, refPos0519);
    real _t0692 = _t0691[2];
    real _t0693 = 0.1e1;
    vec4 _t0694 = [_t068A, _t068E, _t0692, _t0693];
    vec4 _t0695 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0686, _t0694);
    real _t0696 = _t0695[0];
    real _t0697 = 0.1e1;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.e0;
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    real _t06A6 = 0.222044604925e-15;
    real _t06A7 = 0.e0;
    real _t06A8 = 0.44408920985e-15;
    real _t06A9 = 0.1e1;
    vec4 _t06AA = [_t06A6, _t06A7, _t06A8, _t06A9];
    tensor[4,4] _t06AB = [_t069B, _t06A0, _t06A5, _t06AA];
    real _t06AC = 0.173205080757e1;
    real _t06AD = 0.173205080757e1;
    real _t06AE = 0.173205080757e1;
    real _t06AF = -0.173205080757e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    real _t06B1 = 0.1e1;
    real _t06B2 = 0.2e1;
    real _t06B3 = 0.1e1;
    real _t06B4 = -0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = -0.1e1;
    real _t06B7 = -0.1e1;
    real _t06B8 = -0.192296268638e-15;
    real _t06B9 = 0.1e1;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.222044604925e-15;
    real _t06BC = 0.e0;
    real _t06BD = 0.44408920985e-15;
    real _t06BE = 0.1e1;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    tensor[4,4] _t06C0 = [_t06B0, _t06B5, _t06BA, _t06BF];
    real _t06C1 = 0.1e1;
    real _t06C2 = 0.2e1;
    real _t06C3 = 0.1e1;
    real _t06C4 = -0.1e1;
    vec4 _t06C5 = [_t06C1, _t06C2, _t06C3, _t06C4];
    real _t06C6 = 0.173205080757e1;
    real _t06C7 = 0.173205080757e1;
    real _t06C8 = 0.173205080757e1;
    real _t06C9 = -0.173205080757e1;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = -0.1e1;
    real _t06CC = -0.1e1;
    real _t06CD = -0.192296268638e-15;
    real _t06CE = 0.1e1;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.222044604925e-15;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.44408920985e-15;
    real _t06D3 = 0.1e1;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    tensor[4,4] _t06D5 = [_t06C5, _t06CA, _t06CF, _t06D4];
    real _t06D6 = 0.1e1;
    real _t06D7 = 0.2e1;
    real _t06D8 = 0.1e1;
    real _t06D9 = -0.1e1;
    vec4 _t06DA = [_t06D6, _t06D7, _t06D8, _t06D9];
    real _t06DB = -0.1e1;
    real _t06DC = -0.1e1;
    real _t06DD = -0.192296268638e-15;
    real _t06DE = 0.1e1;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = 0.173205080757e1;
    real _t06E1 = 0.173205080757e1;
    real _t06E2 = 0.173205080757e1;
    real _t06E3 = -0.173205080757e1;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.222044604925e-15;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.44408920985e-15;
    real _t06E8 = 0.1e1;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    tensor[4,4] _t06EA = [_t06DA, _t06DF, _t06E4, _t06E9];
    tensor[4,4][4] _t06EB = {_t06AB, _t06C0, _t06D5, _t06EA};
    real _t06EC = 0.57735026919e0;
    real _t06ED = -0.1e1;
    real _t06EE = -0.1e1;
    real _t06EF = 0.1e1;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = -0.57735026919e0;
    real _t06F2 = 0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.57735026919e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.1e1;
    real _t06F9 = 0.e0;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    real _t06FE = 0.1e1;
    vec4 _t06FF = [_t06FB, _t06FC, _t06FD, _t06FE];
    tensor[4,4] _t0700 = [_t06F0, _t06F5, _t06FA, _t06FF];
    real _t0701 = 0.1e1;
    real _t0702 = 0.e0;
    real _t0703 = 0.e0;
    real _t0704 = 0.e0;
    vec4 _t0705 = [_t0701, _t0702, _t0703, _t0704];
    real _t0706 = 0.e0;
    real _t0707 = 0.1e1;
    real _t0708 = 0.e0;
    real _t0709 = 0.e0;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.e0;
    real _t070C = 0.e0;
    real _t070D = 0.1e1;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = 0.e0;
    real _t0712 = 0.e0;
    real _t0713 = 0.1e1;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    tensor[4,4] _t0715 = [_t0705, _t070A, _t070F, _t0714];
    real _t0716 = 0.e0;
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    vec4 _t071A = [_t0716, _t0717, _t0718, _t0719];
    real _t071B = 0.1e1;
    real _t071C = 0.e0;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.e0;
    real _t0721 = 0.e0;
    real _t0722 = 0.1e1;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.e0;
    real _t0728 = 0.1e1;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    tensor[4,4] _t072A = [_t071A, _t071F, _t0724, _t0729];
    real _t072B = 0.e0;
    real _t072C = 0.1e1;
    real _t072D = 0.e0;
    real _t072E = 0.e0;
    vec4 _t072F = [_t072B, _t072C, _t072D, _t072E];
    real _t0730 = 0.e0;
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.1e1;
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.e0;
    real _t073D = 0.1e1;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    tensor[4,4] _t073F = [_t072F, _t0734, _t0739, _t073E];
    tensor[4,4][4] _t0740 = {_t0700, _t0715, _t072A, _t073F};
    real _t0741 = -0.1e1;
    real _t0742 = 0.57735026919e0;
    real _t0743 = -0.1e1;
    real _t0744 = 0.1e1;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.1e1;
    real _t0747 = -0.57735026919e0;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.57735026919e0;
    real _t074D = 0.1e1;
    real _t074E = 0.e0;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    real _t0750 = 0.e0;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.1e1;
    vec4 _t0754 = [_t0750, _t0751, _t0752, _t0753];
    tensor[4,4] _t0755 = [_t0745, _t074A, _t074F, _t0754];
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    real _t0758 = 0.e0;
    real _t0759 = 0.e0;
    vec4 _t075A = [_t0756, _t0757, _t0758, _t0759];
    real _t075B = 0.1e1;
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.e0;
    real _t0761 = 0.e0;
    real _t0762 = 0.1e1;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    tensor[4,4] _t076A = [_t075A, _t075F, _t0764, _t0769];
    real _t076B = 0.1e1;
    real _t076C = 0.e0;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    vec4 _t076F = [_t076B, _t076C, _t076D, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.1e1;
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.e0;
    real _t0776 = 0.e0;
    real _t0777 = 0.1e1;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.e0;
    real _t077C = 0.e0;
    real _t077D = 0.1e1;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    tensor[4,4] _t077F = [_t076F, _t0774, _t0779, _t077E];
    real _t0780 = 0.1e1;
    real _t0781 = 0.e0;
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    vec4 _t0784 = [_t0780, _t0781, _t0782, _t0783];
    real _t0785 = 0.e0;
    real _t0786 = 0.e0;
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.1e1;
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.e0;
    real _t0791 = 0.e0;
    real _t0792 = 0.1e1;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    tensor[4,4] _t0794 = [_t0784, _t0789, _t078E, _t0793];
    tensor[4,4][4] _t0795 = {_t0755, _t076A, _t077F, _t0794};
    real _t0796 = -0.1e1;
    real _t0797 = -0.1e1;
    real _t0798 = 0.57735026919e0;
    real _t0799 = 0.1e1;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = 0.1e1;
    real _t079C = 0.e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = 0.e0;
    real _t07A1 = 0.1e1;
    real _t07A2 = 0.57735026919e0;
    real _t07A3 = 0.e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.e0;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = 0.e0;
    real _t07AC = 0.e0;
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = 0.1e1;
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.e0;
    real _t07B6 = 0.1e1;
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.e0;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    real _t07C0 = 0.1e1;
    real _t07C1 = 0.e0;
    real _t07C2 = 0.e0;
    real _t07C3 = 0.e0;
    vec4 _t07C4 = [_t07C0, _t07C1, _t07C2, _t07C3];
    real _t07C5 = 0.e0;
    real _t07C6 = 0.e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    vec4 _t07C9 = [_t07C5, _t07C6, _t07C7, _t07C8];
    real _t07CA = 0.e0;
    real _t07CB = 0.1e1;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.1e1;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    tensor[4,4] _t07D4 = [_t07C4, _t07C9, _t07CE, _t07D3];
    real _t07D5 = 0.1e1;
    real _t07D6 = 0.e0;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    vec4 _t07D9 = [_t07D5, _t07D6, _t07D7, _t07D8];
    real _t07DA = 0.e0;
    real _t07DB = 0.1e1;
    real _t07DC = 0.e0;
    real _t07DD = 0.e0;
    vec4 _t07DE = [_t07DA, _t07DB, _t07DC, _t07DD];
    real _t07DF = 0.e0;
    real _t07E0 = 0.e0;
    real _t07E1 = 0.1e1;
    real _t07E2 = 0.e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = 0.e0;
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.1e1;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    tensor[4,4] _t07E9 = [_t07D9, _t07DE, _t07E3, _t07E8];
    tensor[4,4][4] _t07EA = {_t07AA, _t07BF, _t07D4, _t07E9};
    tensor[4,4][4][4] _t07EB = {_t06EB, _t0740, _t0795, _t07EA};
    real _t07EC = time051B[1];
    int _t07ED = prim $r2i01B7 (_t07EC);
    tensor[4,4][4] _t07EE = prim $sub01C0<tensor[4,4][4]; %4> (_t07EB, _t07ED);
    real _t07EF = time051B[1];
    int _t07F0 = prim $r2i01B7 (_t07EF);
    int[2] _t07F1 = func nextCell4051F (_t07F0, cellId0518, mesh0517);
    int _t07F2 = 1;
    int _t07F3 = prim $sub01C0<int; %2> (_t07F1, _t07F2);
    tensor[4,4] _t07F4 = prim $sub01C0<tensor[4,4]; %4> (_t07EE, _t07F3);
    real _t07F5 = time051B[0];
    vec3 _t07F6 = prim *0036<$[3]> (_t07F5, dPos051A);
    vec3 _t07F7 = prim +0017<$[3]> (_t07F6, refPos0519);
    real _t07F8 = _t07F7[0];
    real _t07F9 = time051B[0];
    vec3 _t07FA = prim *0036<$[3]> (_t07F9, dPos051A);
    vec3 _t07FB = prim +0017<$[3]> (_t07FA, refPos0519);
    real _t07FC = _t07FB[1];
    real _t07FD = time051B[0];
    vec3 _t07FE = prim *0036<$[3]> (_t07FD, dPos051A);
    vec3 _t07FF = prim +0017<$[3]> (_t07FE, refPos0519);
    real _t0800 = _t07FF[2];
    real _t0801 = 0.1e1;
    vec4 _t0802 = [_t07F8, _t07FC, _t0800, _t0801];
    vec4 _t0803 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07F4, _t0802);
    real _t0804 = _t0803[1];
    real _t0805 = 0.1e1;
    real _t0806 = 0.e0;
    real _t0807 = 0.e0;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.e0;
    real _t080B = 0.1e1;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.1e1;
    real _t0812 = 0.e0;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    real _t0814 = 0.222044604925e-15;
    real _t0815 = 0.e0;
    real _t0816 = 0.44408920985e-15;
    real _t0817 = 0.1e1;
    vec4 _t0818 = [_t0814, _t0815, _t0816, _t0817];
    tensor[4,4] _t0819 = [_t0809, _t080E, _t0813, _t0818];
    real _t081A = 0.173205080757e1;
    real _t081B = 0.173205080757e1;
    real _t081C = 0.173205080757e1;
    real _t081D = -0.173205080757e1;
    vec4 _t081E = [_t081A, _t081B, _t081C, _t081D];
    real _t081F = 0.1e1;
    real _t0820 = 0.2e1;
    real _t0821 = 0.1e1;
    real _t0822 = -0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = -0.1e1;
    real _t0825 = -0.1e1;
    real _t0826 = -0.192296268638e-15;
    real _t0827 = 0.1e1;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.222044604925e-15;
    real _t082A = 0.e0;
    real _t082B = 0.44408920985e-15;
    real _t082C = 0.1e1;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    tensor[4,4] _t082E = [_t081E, _t0823, _t0828, _t082D];
    real _t082F = 0.1e1;
    real _t0830 = 0.2e1;
    real _t0831 = 0.1e1;
    real _t0832 = -0.1e1;
    vec4 _t0833 = [_t082F, _t0830, _t0831, _t0832];
    real _t0834 = 0.173205080757e1;
    real _t0835 = 0.173205080757e1;
    real _t0836 = 0.173205080757e1;
    real _t0837 = -0.173205080757e1;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = -0.1e1;
    real _t083A = -0.1e1;
    real _t083B = -0.192296268638e-15;
    real _t083C = 0.1e1;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.222044604925e-15;
    real _t083F = 0.e0;
    real _t0840 = 0.44408920985e-15;
    real _t0841 = 0.1e1;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    tensor[4,4] _t0843 = [_t0833, _t0838, _t083D, _t0842];
    real _t0844 = 0.1e1;
    real _t0845 = 0.2e1;
    real _t0846 = 0.1e1;
    real _t0847 = -0.1e1;
    vec4 _t0848 = [_t0844, _t0845, _t0846, _t0847];
    real _t0849 = -0.1e1;
    real _t084A = -0.1e1;
    real _t084B = -0.192296268638e-15;
    real _t084C = 0.1e1;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = 0.173205080757e1;
    real _t084F = 0.173205080757e1;
    real _t0850 = 0.173205080757e1;
    real _t0851 = -0.173205080757e1;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.222044604925e-15;
    real _t0854 = 0.e0;
    real _t0855 = 0.44408920985e-15;
    real _t0856 = 0.1e1;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    tensor[4,4] _t0858 = [_t0848, _t084D, _t0852, _t0857];
    tensor[4,4][4] _t0859 = {_t0819, _t082E, _t0843, _t0858};
    real _t085A = 0.57735026919e0;
    real _t085B = -0.1e1;
    real _t085C = -0.1e1;
    real _t085D = 0.1e1;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = -0.57735026919e0;
    real _t0860 = 0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.57735026919e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.1e1;
    real _t0867 = 0.e0;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    real _t086C = 0.1e1;
    vec4 _t086D = [_t0869, _t086A, _t086B, _t086C];
    tensor[4,4] _t086E = [_t085E, _t0863, _t0868, _t086D];
    real _t086F = 0.1e1;
    real _t0870 = 0.e0;
    real _t0871 = 0.e0;
    real _t0872 = 0.e0;
    vec4 _t0873 = [_t086F, _t0870, _t0871, _t0872];
    real _t0874 = 0.e0;
    real _t0875 = 0.1e1;
    real _t0876 = 0.e0;
    real _t0877 = 0.e0;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.e0;
    real _t087A = 0.e0;
    real _t087B = 0.1e1;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = 0.e0;
    real _t0880 = 0.e0;
    real _t0881 = 0.1e1;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    tensor[4,4] _t0883 = [_t0873, _t0878, _t087D, _t0882];
    real _t0884 = 0.e0;
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    vec4 _t0888 = [_t0884, _t0885, _t0886, _t0887];
    real _t0889 = 0.1e1;
    real _t088A = 0.e0;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.e0;
    real _t088F = 0.e0;
    real _t0890 = 0.1e1;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.e0;
    real _t0896 = 0.1e1;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    tensor[4,4] _t0898 = [_t0888, _t088D, _t0892, _t0897];
    real _t0899 = 0.e0;
    real _t089A = 0.1e1;
    real _t089B = 0.e0;
    real _t089C = 0.e0;
    vec4 _t089D = [_t0899, _t089A, _t089B, _t089C];
    real _t089E = 0.e0;
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.1e1;
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.e0;
    real _t08AB = 0.1e1;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    tensor[4,4] _t08AD = [_t089D, _t08A2, _t08A7, _t08AC];
    tensor[4,4][4] _t08AE = {_t086E, _t0883, _t0898, _t08AD};
    real _t08AF = -0.1e1;
    real _t08B0 = 0.57735026919e0;
    real _t08B1 = -0.1e1;
    real _t08B2 = 0.1e1;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.1e1;
    real _t08B5 = -0.57735026919e0;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.57735026919e0;
    real _t08BB = 0.1e1;
    real _t08BC = 0.e0;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    real _t08BE = 0.e0;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.1e1;
    vec4 _t08C2 = [_t08BE, _t08BF, _t08C0, _t08C1];
    tensor[4,4] _t08C3 = [_t08B3, _t08B8, _t08BD, _t08C2];
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    real _t08C6 = 0.e0;
    real _t08C7 = 0.e0;
    vec4 _t08C8 = [_t08C4, _t08C5, _t08C6, _t08C7];
    real _t08C9 = 0.1e1;
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.e0;
    real _t08CF = 0.e0;
    real _t08D0 = 0.1e1;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    tensor[4,4] _t08D8 = [_t08C8, _t08CD, _t08D2, _t08D7];
    real _t08D9 = 0.1e1;
    real _t08DA = 0.e0;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    vec4 _t08DD = [_t08D9, _t08DA, _t08DB, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.1e1;
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.e0;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.1e1;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.e0;
    real _t08EA = 0.e0;
    real _t08EB = 0.1e1;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    tensor[4,4] _t08ED = [_t08DD, _t08E2, _t08E7, _t08EC];
    real _t08EE = 0.1e1;
    real _t08EF = 0.e0;
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    vec4 _t08F2 = [_t08EE, _t08EF, _t08F0, _t08F1];
    real _t08F3 = 0.e0;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.1e1;
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.e0;
    real _t08FF = 0.e0;
    real _t0900 = 0.1e1;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    tensor[4,4] _t0902 = [_t08F2, _t08F7, _t08FC, _t0901];
    tensor[4,4][4] _t0903 = {_t08C3, _t08D8, _t08ED, _t0902};
    real _t0904 = -0.1e1;
    real _t0905 = -0.1e1;
    real _t0906 = 0.57735026919e0;
    real _t0907 = 0.1e1;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = 0.1e1;
    real _t090A = 0.e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = 0.e0;
    real _t090F = 0.1e1;
    real _t0910 = 0.57735026919e0;
    real _t0911 = 0.e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.e0;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = 0.e0;
    real _t091A = 0.e0;
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = 0.1e1;
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.e0;
    real _t0924 = 0.1e1;
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.e0;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    real _t092E = 0.1e1;
    real _t092F = 0.e0;
    real _t0930 = 0.e0;
    real _t0931 = 0.e0;
    vec4 _t0932 = [_t092E, _t092F, _t0930, _t0931];
    real _t0933 = 0.e0;
    real _t0934 = 0.e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    vec4 _t0937 = [_t0933, _t0934, _t0935, _t0936];
    real _t0938 = 0.e0;
    real _t0939 = 0.1e1;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.1e1;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    tensor[4,4] _t0942 = [_t0932, _t0937, _t093C, _t0941];
    real _t0943 = 0.1e1;
    real _t0944 = 0.e0;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    vec4 _t0947 = [_t0943, _t0944, _t0945, _t0946];
    real _t0948 = 0.e0;
    real _t0949 = 0.1e1;
    real _t094A = 0.e0;
    real _t094B = 0.e0;
    vec4 _t094C = [_t0948, _t0949, _t094A, _t094B];
    real _t094D = 0.e0;
    real _t094E = 0.e0;
    real _t094F = 0.1e1;
    real _t0950 = 0.e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = 0.e0;
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.1e1;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    tensor[4,4] _t0957 = [_t0947, _t094C, _t0951, _t0956];
    tensor[4,4][4] _t0958 = {_t0918, _t092D, _t0942, _t0957};
    tensor[4,4][4][4] _t0959 = {_t0859, _t08AE, _t0903, _t0958};
    real _t095A = time051B[1];
    int _t095B = prim $r2i01B7 (_t095A);
    tensor[4,4][4] _t095C = prim $sub01C0<tensor[4,4][4]; %4> (_t0959, _t095B);
    real _t095D = time051B[1];
    int _t095E = prim $r2i01B7 (_t095D);
    int[2] _t095F = func nextCell4051F (_t095E, cellId0518, mesh0517);
    int _t0960 = 1;
    int _t0961 = prim $sub01C0<int; %2> (_t095F, _t0960);
    tensor[4,4] _t0962 = prim $sub01C0<tensor[4,4]; %4> (_t095C, _t0961);
    real _t0963 = time051B[0];
    vec3 _t0964 = prim *0036<$[3]> (_t0963, dPos051A);
    vec3 _t0965 = prim +0017<$[3]> (_t0964, refPos0519);
    real _t0966 = _t0965[0];
    real _t0967 = time051B[0];
    vec3 _t0968 = prim *0036<$[3]> (_t0967, dPos051A);
    vec3 _t0969 = prim +0017<$[3]> (_t0968, refPos0519);
    real _t096A = _t0969[1];
    real _t096B = time051B[0];
    vec3 _t096C = prim *0036<$[3]> (_t096B, dPos051A);
    vec3 _t096D = prim +0017<$[3]> (_t096C, refPos0519);
    real _t096E = _t096D[2];
    real _t096F = 0.1e1;
    vec4 _t0970 = [_t0966, _t096A, _t096E, _t096F];
    vec4 _t0971 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0962, _t0970);
    real _t0972 = _t0971[2];
    vec3 _t0973 = [_t0696, _t0804, _t0972];
    Femdata: MeshPos _t0974 = extractFemItemN((mesh0517, _t0528, _t0973),RefBuild(Mesh),);
    return _t0974;
  } else {
    real _t0975 = time051B[0];
    vec3 _t0976 = prim *0036<$[3]> (_t0975, dPos051A);
    vec3 _t0977 = prim +0017<$[3]> (_t0976, refPos0519);
    Femdata: MeshPos _t0978 = extractFemItemN((mesh0517, _t0977),InvalidBuildBoundary(MeshPos),);
    return _t0978;
  }
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
function int[2]#0 $nextCell20982 (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  nearbyCells0983 = extractFemItem2(CellConnectivity(Mesh), int, mesh097B, cell097A : int);
  int _t0984 = 0;
  int _t0985 = 1;
  int _t0986 = 3;
  int[2] _t0987 = {_t0985, _t0986};
  int _t0988 = 3;
  int _t0989 = 3;
  int[2] _t098A = {_t0988, _t0989};
  int _t098B = 9;
  int _t098C = 3;
  int[2] _t098D = {_t098B, _t098C};
  int _t098E = 27;
  int _t098F = 3;
  int[2] _t0990 = {_t098E, _t098F};
  int[2][4] _t0991 = {_t0987, _t098A, _t098D, _t0990};
  int[2] _t0992 = prim $sub01C0<int[2]; %4> (_t0991, faceIdx0979);
  int _t0993 = 1;
  int _t0994 = prim $sub01C0<int; %2> (_t0992, _t0993);
  int[] _t0995 = prim $range01C3 (_t0984, _t0994);
  int[] accum09B6 = {};
  foreach i09B3 in _t0995 {
    int _t0996 = 1;
    int _t0997 = 2;
    int _t0998 = 3;
    int _t0999 = 0;
    int _t099A = 2;
    int _t099B = 3;
    int _t099C = 0;
    int _t099D = 1;
    int _t099E = 3;
    int _t099F = 0;
    int _t09A0 = 1;
    int _t09A1 = 2;
    int[12] _t09A2 = {_t0996, _t0997, _t0998, _t0999, _t099A, _t099B, _t099C, _t099D, _t099E, _t099F, _t09A0, _t09A1};
    int _t09A3 = 1;
    int _t09A4 = 3;
    int[2] _t09A5 = {_t09A3, _t09A4};
    int _t09A6 = 3;
    int _t09A7 = 3;
    int[2] _t09A8 = {_t09A6, _t09A7};
    int _t09A9 = 9;
    int _t09AA = 3;
    int[2] _t09AB = {_t09A9, _t09AA};
    int _t09AC = 27;
    int _t09AD = 3;
    int[2] _t09AE = {_t09AC, _t09AD};
    int[2][4] _t09AF = {_t09A5, _t09A8, _t09AB, _t09AE};
    int[2] _t09B0 = prim $sub01C0<int[2]; %4> (_t09AF, faceIdx0979);
    int _t09B1 = 0;
    int _t09B2 = prim $sub01C0<int; %2> (_t09B0, _t09B1);
    int _t09B4 = prim +0015 (_t09B2, i09B3);
    int _t09B5 = prim $sub01C0<int; %12> (_t09A2, _t09B4);
    accum09B6 = prim @0010<int> (accum09B6, _t09B5);
  }
  numFacetNodes09B7 = prim length0123<int> (accum09B6);
  int _t09B8 = 3;
  bool _t09B9 = prim ==0082 (_t09B8, numFacetNodes09B7);
  if _t09B9 {
    foreach cellInt09BA in nearbyCells0983 {
      int[4] _t09BB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BC = 1;
      int _t09BD = prim $sub01C0<int; %4> (_t09BB, _t09BC);
      int[4] _t09BE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09BF = 2;
      int _t09C0 = prim $sub01C0<int; %4> (_t09BE, _t09BF);
      int[4] _t09C1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09C2 = 3;
      int _t09C3 = prim $sub01C0<int; %4> (_t09C1, _t09C2);
      int[3] _t09C4 = {_t09BD, _t09C0, _t09C3};
      int _t09C5 = 0;
      int _t09C6 = prim $sub01C0<int; %3> (_t09C4, _t09C5);
      int _t09C7 = 0;
      int _t09C8 = 1;
      int _t09C9 = 3;
      int[2] _t09CA = {_t09C8, _t09C9};
      int _t09CB = 3;
      int _t09CC = 3;
      int[2] _t09CD = {_t09CB, _t09CC};
      int _t09CE = 9;
      int _t09CF = 3;
      int[2] _t09D0 = {_t09CE, _t09CF};
      int _t09D1 = 27;
      int _t09D2 = 3;
      int[2] _t09D3 = {_t09D1, _t09D2};
      int[2][4] _t09D4 = {_t09CA, _t09CD, _t09D0, _t09D3};
      int[2] _t09D5 = prim $sub01C0<int[2]; %4> (_t09D4, faceIdx0979);
      int _t09D6 = 1;
      int _t09D7 = prim $sub01C0<int; %2> (_t09D5, _t09D6);
      int[] _t09D8 = prim $range01C3 (_t09C7, _t09D7);
      int[] accum09F8 = {};
      foreach i09B3 in _t09D8 {
        int _t09D9 = 1;
        int _t09DA = 2;
        int _t09DB = 3;
        int _t09DC = 0;
        int _t09DD = 2;
        int _t09DE = 3;
        int _t09DF = 0;
        int _t09E0 = 1;
        int _t09E1 = 3;
        int _t09E2 = 0;
        int _t09E3 = 1;
        int _t09E4 = 2;
        int[12] _t09E5 = {_t09D9, _t09DA, _t09DB, _t09DC, _t09DD, _t09DE, _t09DF, _t09E0, _t09E1, _t09E2, _t09E3, _t09E4};
        int _t09E6 = 1;
        int _t09E7 = 3;
        int[2] _t09E8 = {_t09E6, _t09E7};
        int _t09E9 = 3;
        int _t09EA = 3;
        int[2] _t09EB = {_t09E9, _t09EA};
        int _t09EC = 9;
        int _t09ED = 3;
        int[2] _t09EE = {_t09EC, _t09ED};
        int _t09EF = 27;
        int _t09F0 = 3;
        int[2] _t09F1 = {_t09EF, _t09F0};
        int[2][4] _t09F2 = {_t09E8, _t09EB, _t09EE, _t09F1};
        int[2] _t09F3 = prim $sub01C0<int[2]; %4> (_t09F2, faceIdx0979);
        int _t09F4 = 0;
        int _t09F5 = prim $sub01C0<int; %2> (_t09F3, _t09F4);
        int _t09F6 = prim +0015 (_t09F5, i09B3);
        int _t09F7 = prim $sub01C0<int; %12> (_t09E5, _t09F6);
        accum09F8 = prim @0010<int> (accum09F8, _t09F7);
      }
      int _t09F9 = 0;
      int _t09FA = prim $dynsub01C2<int> (accum09F8, _t09F9);
      bool _t09FB = prim ==0082 (_t09C6, _t09FA);
      int[4] _t09FC = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t09FD = 1;
      int _t09FE = prim $sub01C0<int; %4> (_t09FC, _t09FD);
      int[4] _t09FF = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A00 = 2;
      int _t0A01 = prim $sub01C0<int; %4> (_t09FF, _t0A00);
      int[4] _t0A02 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A03 = 3;
      int _t0A04 = prim $sub01C0<int; %4> (_t0A02, _t0A03);
      int[3] _t0A05 = {_t09FE, _t0A01, _t0A04};
      int _t0A06 = 1;
      int _t0A07 = prim $sub01C0<int; %3> (_t0A05, _t0A06);
      int _t0A08 = 0;
      int _t0A09 = 1;
      int _t0A0A = 3;
      int[2] _t0A0B = {_t0A09, _t0A0A};
      int _t0A0C = 3;
      int _t0A0D = 3;
      int[2] _t0A0E = {_t0A0C, _t0A0D};
      int _t0A0F = 9;
      int _t0A10 = 3;
      int[2] _t0A11 = {_t0A0F, _t0A10};
      int _t0A12 = 27;
      int _t0A13 = 3;
      int[2] _t0A14 = {_t0A12, _t0A13};
      int[2][4] _t0A15 = {_t0A0B, _t0A0E, _t0A11, _t0A14};
      int[2] _t0A16 = prim $sub01C0<int[2]; %4> (_t0A15, faceIdx0979);
      int _t0A17 = 1;
      int _t0A18 = prim $sub01C0<int; %2> (_t0A16, _t0A17);
      int[] _t0A19 = prim $range01C3 (_t0A08, _t0A18);
      int[] accum0A39 = {};
      foreach i09B3 in _t0A19 {
        int _t0A1A = 1;
        int _t0A1B = 2;
        int _t0A1C = 3;
        int _t0A1D = 0;
        int _t0A1E = 2;
        int _t0A1F = 3;
        int _t0A20 = 0;
        int _t0A21 = 1;
        int _t0A22 = 3;
        int _t0A23 = 0;
        int _t0A24 = 1;
        int _t0A25 = 2;
        int[12] _t0A26 = {_t0A1A, _t0A1B, _t0A1C, _t0A1D, _t0A1E, _t0A1F, _t0A20, _t0A21, _t0A22, _t0A23, _t0A24, _t0A25};
        int _t0A27 = 1;
        int _t0A28 = 3;
        int[2] _t0A29 = {_t0A27, _t0A28};
        int _t0A2A = 3;
        int _t0A2B = 3;
        int[2] _t0A2C = {_t0A2A, _t0A2B};
        int _t0A2D = 9;
        int _t0A2E = 3;
        int[2] _t0A2F = {_t0A2D, _t0A2E};
        int _t0A30 = 27;
        int _t0A31 = 3;
        int[2] _t0A32 = {_t0A30, _t0A31};
        int[2][4] _t0A33 = {_t0A29, _t0A2C, _t0A2F, _t0A32};
        int[2] _t0A34 = prim $sub01C0<int[2]; %4> (_t0A33, faceIdx0979);
        int _t0A35 = 0;
        int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
        int _t0A37 = prim +0015 (_t0A36, i09B3);
        int _t0A38 = prim $sub01C0<int; %12> (_t0A26, _t0A37);
        accum0A39 = prim @0010<int> (accum0A39, _t0A38);
      }
      int _t0A3A = 1;
      int _t0A3B = prim $dynsub01C2<int> (accum0A39, _t0A3A);
      bool _t0A3C = prim ==0082 (_t0A07, _t0A3B);
      int[4] _t0A3D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A3E = 1;
      int _t0A3F = prim $sub01C0<int; %4> (_t0A3D, _t0A3E);
      int[4] _t0A40 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A41 = 2;
      int _t0A42 = prim $sub01C0<int; %4> (_t0A40, _t0A41);
      int[4] _t0A43 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A44 = 3;
      int _t0A45 = prim $sub01C0<int; %4> (_t0A43, _t0A44);
      int[3] _t0A46 = {_t0A3F, _t0A42, _t0A45};
      int _t0A47 = 2;
      int _t0A48 = prim $sub01C0<int; %3> (_t0A46, _t0A47);
      int _t0A49 = 0;
      int _t0A4A = 1;
      int _t0A4B = 3;
      int[2] _t0A4C = {_t0A4A, _t0A4B};
      int _t0A4D = 3;
      int _t0A4E = 3;
      int[2] _t0A4F = {_t0A4D, _t0A4E};
      int _t0A50 = 9;
      int _t0A51 = 3;
      int[2] _t0A52 = {_t0A50, _t0A51};
      int _t0A53 = 27;
      int _t0A54 = 3;
      int[2] _t0A55 = {_t0A53, _t0A54};
      int[2][4] _t0A56 = {_t0A4C, _t0A4F, _t0A52, _t0A55};
      int[2] _t0A57 = prim $sub01C0<int[2]; %4> (_t0A56, faceIdx0979);
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %2> (_t0A57, _t0A58);
      int[] _t0A5A = prim $range01C3 (_t0A49, _t0A59);
      int[] accum0A7A = {};
      foreach i09B3 in _t0A5A {
        int _t0A5B = 1;
        int _t0A5C = 2;
        int _t0A5D = 3;
        int _t0A5E = 0;
        int _t0A5F = 2;
        int _t0A60 = 3;
        int _t0A61 = 0;
        int _t0A62 = 1;
        int _t0A63 = 3;
        int _t0A64 = 0;
        int _t0A65 = 1;
        int _t0A66 = 2;
        int[12] _t0A67 = {_t0A5B, _t0A5C, _t0A5D, _t0A5E, _t0A5F, _t0A60, _t0A61, _t0A62, _t0A63, _t0A64, _t0A65, _t0A66};
        int _t0A68 = 1;
        int _t0A69 = 3;
        int[2] _t0A6A = {_t0A68, _t0A69};
        int _t0A6B = 3;
        int _t0A6C = 3;
        int[2] _t0A6D = {_t0A6B, _t0A6C};
        int _t0A6E = 9;
        int _t0A6F = 3;
        int[2] _t0A70 = {_t0A6E, _t0A6F};
        int _t0A71 = 27;
        int _t0A72 = 3;
        int[2] _t0A73 = {_t0A71, _t0A72};
        int[2][4] _t0A74 = {_t0A6A, _t0A6D, _t0A70, _t0A73};
        int[2] _t0A75 = prim $sub01C0<int[2]; %4> (_t0A74, faceIdx0979);
        int _t0A76 = 0;
        int _t0A77 = prim $sub01C0<int; %2> (_t0A75, _t0A76);
        int _t0A78 = prim +0015 (_t0A77, i09B3);
        int _t0A79 = prim $sub01C0<int; %12> (_t0A67, _t0A78);
        accum0A7A = prim @0010<int> (accum0A7A, _t0A79);
      }
      int _t0A7B = 2;
      int _t0A7C = prim $dynsub01C2<int> (accum0A7A, _t0A7B);
      bool _t0A7D = prim ==0082 (_t0A48, _t0A7C);
      bool _t0A7E = prim $and01C4 (_t0A3C, _t0A7D);
      bool _t0A7F = prim $and01C4 (_t09FB, _t0A7E);
      if _t0A7F {
        int _t0A80 = 0;
        int[2] _t0A81 = {cellInt09BA, _t0A80};
        return _t0A81;
      }
      int[4] _t0A82 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A83 = 0;
      int _t0A84 = prim $sub01C0<int; %4> (_t0A82, _t0A83);
      int[4] _t0A85 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A86 = 2;
      int _t0A87 = prim $sub01C0<int; %4> (_t0A85, _t0A86);
      int[4] _t0A88 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0A89 = 3;
      int _t0A8A = prim $sub01C0<int; %4> (_t0A88, _t0A89);
      int[3] _t0A8B = {_t0A84, _t0A87, _t0A8A};
      int _t0A8C = 0;
      int _t0A8D = prim $sub01C0<int; %3> (_t0A8B, _t0A8C);
      int _t0A8E = 0;
      int _t0A8F = 1;
      int _t0A90 = 3;
      int[2] _t0A91 = {_t0A8F, _t0A90};
      int _t0A92 = 3;
      int _t0A93 = 3;
      int[2] _t0A94 = {_t0A92, _t0A93};
      int _t0A95 = 9;
      int _t0A96 = 3;
      int[2] _t0A97 = {_t0A95, _t0A96};
      int _t0A98 = 27;
      int _t0A99 = 3;
      int[2] _t0A9A = {_t0A98, _t0A99};
      int[2][4] _t0A9B = {_t0A91, _t0A94, _t0A97, _t0A9A};
      int[2] _t0A9C = prim $sub01C0<int[2]; %4> (_t0A9B, faceIdx0979);
      int _t0A9D = 1;
      int _t0A9E = prim $sub01C0<int; %2> (_t0A9C, _t0A9D);
      int[] _t0A9F = prim $range01C3 (_t0A8E, _t0A9E);
      int[] accum0ABF = {};
      foreach i09B3 in _t0A9F {
        int _t0AA0 = 1;
        int _t0AA1 = 2;
        int _t0AA2 = 3;
        int _t0AA3 = 0;
        int _t0AA4 = 2;
        int _t0AA5 = 3;
        int _t0AA6 = 0;
        int _t0AA7 = 1;
        int _t0AA8 = 3;
        int _t0AA9 = 0;
        int _t0AAA = 1;
        int _t0AAB = 2;
        int[12] _t0AAC = {_t0AA0, _t0AA1, _t0AA2, _t0AA3, _t0AA4, _t0AA5, _t0AA6, _t0AA7, _t0AA8, _t0AA9, _t0AAA, _t0AAB};
        int _t0AAD = 1;
        int _t0AAE = 3;
        int[2] _t0AAF = {_t0AAD, _t0AAE};
        int _t0AB0 = 3;
        int _t0AB1 = 3;
        int[2] _t0AB2 = {_t0AB0, _t0AB1};
        int _t0AB3 = 9;
        int _t0AB4 = 3;
        int[2] _t0AB5 = {_t0AB3, _t0AB4};
        int _t0AB6 = 27;
        int _t0AB7 = 3;
        int[2] _t0AB8 = {_t0AB6, _t0AB7};
        int[2][4] _t0AB9 = {_t0AAF, _t0AB2, _t0AB5, _t0AB8};
        int[2] _t0ABA = prim $sub01C0<int[2]; %4> (_t0AB9, faceIdx0979);
        int _t0ABB = 0;
        int _t0ABC = prim $sub01C0<int; %2> (_t0ABA, _t0ABB);
        int _t0ABD = prim +0015 (_t0ABC, i09B3);
        int _t0ABE = prim $sub01C0<int; %12> (_t0AAC, _t0ABD);
        accum0ABF = prim @0010<int> (accum0ABF, _t0ABE);
      }
      int _t0AC0 = 0;
      int _t0AC1 = prim $dynsub01C2<int> (accum0ABF, _t0AC0);
      bool _t0AC2 = prim ==0082 (_t0A8D, _t0AC1);
      int[4] _t0AC3 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC4 = 0;
      int _t0AC5 = prim $sub01C0<int; %4> (_t0AC3, _t0AC4);
      int[4] _t0AC6 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0AC7 = 2;
      int _t0AC8 = prim $sub01C0<int; %4> (_t0AC6, _t0AC7);
      int[4] _t0AC9 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0ACA = 3;
      int _t0ACB = prim $sub01C0<int; %4> (_t0AC9, _t0ACA);
      int[3] _t0ACC = {_t0AC5, _t0AC8, _t0ACB};
      int _t0ACD = 1;
      int _t0ACE = prim $sub01C0<int; %3> (_t0ACC, _t0ACD);
      int _t0ACF = 0;
      int _t0AD0 = 1;
      int _t0AD1 = 3;
      int[2] _t0AD2 = {_t0AD0, _t0AD1};
      int _t0AD3 = 3;
      int _t0AD4 = 3;
      int[2] _t0AD5 = {_t0AD3, _t0AD4};
      int _t0AD6 = 9;
      int _t0AD7 = 3;
      int[2] _t0AD8 = {_t0AD6, _t0AD7};
      int _t0AD9 = 27;
      int _t0ADA = 3;
      int[2] _t0ADB = {_t0AD9, _t0ADA};
      int[2][4] _t0ADC = {_t0AD2, _t0AD5, _t0AD8, _t0ADB};
      int[2] _t0ADD = prim $sub01C0<int[2]; %4> (_t0ADC, faceIdx0979);
      int _t0ADE = 1;
      int _t0ADF = prim $sub01C0<int; %2> (_t0ADD, _t0ADE);
      int[] _t0AE0 = prim $range01C3 (_t0ACF, _t0ADF);
      int[] accum0B00 = {};
      foreach i09B3 in _t0AE0 {
        int _t0AE1 = 1;
        int _t0AE2 = 2;
        int _t0AE3 = 3;
        int _t0AE4 = 0;
        int _t0AE5 = 2;
        int _t0AE6 = 3;
        int _t0AE7 = 0;
        int _t0AE8 = 1;
        int _t0AE9 = 3;
        int _t0AEA = 0;
        int _t0AEB = 1;
        int _t0AEC = 2;
        int[12] _t0AED = {_t0AE1, _t0AE2, _t0AE3, _t0AE4, _t0AE5, _t0AE6, _t0AE7, _t0AE8, _t0AE9, _t0AEA, _t0AEB, _t0AEC};
        int _t0AEE = 1;
        int _t0AEF = 3;
        int[2] _t0AF0 = {_t0AEE, _t0AEF};
        int _t0AF1 = 3;
        int _t0AF2 = 3;
        int[2] _t0AF3 = {_t0AF1, _t0AF2};
        int _t0AF4 = 9;
        int _t0AF5 = 3;
        int[2] _t0AF6 = {_t0AF4, _t0AF5};
        int _t0AF7 = 27;
        int _t0AF8 = 3;
        int[2] _t0AF9 = {_t0AF7, _t0AF8};
        int[2][4] _t0AFA = {_t0AF0, _t0AF3, _t0AF6, _t0AF9};
        int[2] _t0AFB = prim $sub01C0<int[2]; %4> (_t0AFA, faceIdx0979);
        int _t0AFC = 0;
        int _t0AFD = prim $sub01C0<int; %2> (_t0AFB, _t0AFC);
        int _t0AFE = prim +0015 (_t0AFD, i09B3);
        int _t0AFF = prim $sub01C0<int; %12> (_t0AED, _t0AFE);
        accum0B00 = prim @0010<int> (accum0B00, _t0AFF);
      }
      int _t0B01 = 1;
      int _t0B02 = prim $dynsub01C2<int> (accum0B00, _t0B01);
      bool _t0B03 = prim ==0082 (_t0ACE, _t0B02);
      int[4] _t0B04 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B05 = 0;
      int _t0B06 = prim $sub01C0<int; %4> (_t0B04, _t0B05);
      int[4] _t0B07 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B08 = 2;
      int _t0B09 = prim $sub01C0<int; %4> (_t0B07, _t0B08);
      int[4] _t0B0A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B0B = 3;
      int _t0B0C = prim $sub01C0<int; %4> (_t0B0A, _t0B0B);
      int[3] _t0B0D = {_t0B06, _t0B09, _t0B0C};
      int _t0B0E = 2;
      int _t0B0F = prim $sub01C0<int; %3> (_t0B0D, _t0B0E);
      int _t0B10 = 0;
      int _t0B11 = 1;
      int _t0B12 = 3;
      int[2] _t0B13 = {_t0B11, _t0B12};
      int _t0B14 = 3;
      int _t0B15 = 3;
      int[2] _t0B16 = {_t0B14, _t0B15};
      int _t0B17 = 9;
      int _t0B18 = 3;
      int[2] _t0B19 = {_t0B17, _t0B18};
      int _t0B1A = 27;
      int _t0B1B = 3;
      int[2] _t0B1C = {_t0B1A, _t0B1B};
      int[2][4] _t0B1D = {_t0B13, _t0B16, _t0B19, _t0B1C};
      int[2] _t0B1E = prim $sub01C0<int[2]; %4> (_t0B1D, faceIdx0979);
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %2> (_t0B1E, _t0B1F);
      int[] _t0B21 = prim $range01C3 (_t0B10, _t0B20);
      int[] accum0B41 = {};
      foreach i09B3 in _t0B21 {
        int _t0B22 = 1;
        int _t0B23 = 2;
        int _t0B24 = 3;
        int _t0B25 = 0;
        int _t0B26 = 2;
        int _t0B27 = 3;
        int _t0B28 = 0;
        int _t0B29 = 1;
        int _t0B2A = 3;
        int _t0B2B = 0;
        int _t0B2C = 1;
        int _t0B2D = 2;
        int[12] _t0B2E = {_t0B22, _t0B23, _t0B24, _t0B25, _t0B26, _t0B27, _t0B28, _t0B29, _t0B2A, _t0B2B, _t0B2C, _t0B2D};
        int _t0B2F = 1;
        int _t0B30 = 3;
        int[2] _t0B31 = {_t0B2F, _t0B30};
        int _t0B32 = 3;
        int _t0B33 = 3;
        int[2] _t0B34 = {_t0B32, _t0B33};
        int _t0B35 = 9;
        int _t0B36 = 3;
        int[2] _t0B37 = {_t0B35, _t0B36};
        int _t0B38 = 27;
        int _t0B39 = 3;
        int[2] _t0B3A = {_t0B38, _t0B39};
        int[2][4] _t0B3B = {_t0B31, _t0B34, _t0B37, _t0B3A};
        int[2] _t0B3C = prim $sub01C0<int[2]; %4> (_t0B3B, faceIdx0979);
        int _t0B3D = 0;
        int _t0B3E = prim $sub01C0<int; %2> (_t0B3C, _t0B3D);
        int _t0B3F = prim +0015 (_t0B3E, i09B3);
        int _t0B40 = prim $sub01C0<int; %12> (_t0B2E, _t0B3F);
        accum0B41 = prim @0010<int> (accum0B41, _t0B40);
      }
      int _t0B42 = 2;
      int _t0B43 = prim $dynsub01C2<int> (accum0B41, _t0B42);
      bool _t0B44 = prim ==0082 (_t0B0F, _t0B43);
      bool _t0B45 = prim $and01C4 (_t0B03, _t0B44);
      bool _t0B46 = prim $and01C4 (_t0AC2, _t0B45);
      if _t0B46 {
        int _t0B47 = 1;
        int[2] _t0B48 = {cellInt09BA, _t0B47};
        return _t0B48;
      }
      int[4] _t0B49 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4A = 0;
      int _t0B4B = prim $sub01C0<int; %4> (_t0B49, _t0B4A);
      int[4] _t0B4C = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B4D = 1;
      int _t0B4E = prim $sub01C0<int; %4> (_t0B4C, _t0B4D);
      int[4] _t0B4F = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B50 = 3;
      int _t0B51 = prim $sub01C0<int; %4> (_t0B4F, _t0B50);
      int[3] _t0B52 = {_t0B4B, _t0B4E, _t0B51};
      int _t0B53 = 0;
      int _t0B54 = prim $sub01C0<int; %3> (_t0B52, _t0B53);
      int _t0B55 = 0;
      int _t0B56 = 1;
      int _t0B57 = 3;
      int[2] _t0B58 = {_t0B56, _t0B57};
      int _t0B59 = 3;
      int _t0B5A = 3;
      int[2] _t0B5B = {_t0B59, _t0B5A};
      int _t0B5C = 9;
      int _t0B5D = 3;
      int[2] _t0B5E = {_t0B5C, _t0B5D};
      int _t0B5F = 27;
      int _t0B60 = 3;
      int[2] _t0B61 = {_t0B5F, _t0B60};
      int[2][4] _t0B62 = {_t0B58, _t0B5B, _t0B5E, _t0B61};
      int[2] _t0B63 = prim $sub01C0<int[2]; %4> (_t0B62, faceIdx0979);
      int _t0B64 = 1;
      int _t0B65 = prim $sub01C0<int; %2> (_t0B63, _t0B64);
      int[] _t0B66 = prim $range01C3 (_t0B55, _t0B65);
      int[] accum0B86 = {};
      foreach i09B3 in _t0B66 {
        int _t0B67 = 1;
        int _t0B68 = 2;
        int _t0B69 = 3;
        int _t0B6A = 0;
        int _t0B6B = 2;
        int _t0B6C = 3;
        int _t0B6D = 0;
        int _t0B6E = 1;
        int _t0B6F = 3;
        int _t0B70 = 0;
        int _t0B71 = 1;
        int _t0B72 = 2;
        int[12] _t0B73 = {_t0B67, _t0B68, _t0B69, _t0B6A, _t0B6B, _t0B6C, _t0B6D, _t0B6E, _t0B6F, _t0B70, _t0B71, _t0B72};
        int _t0B74 = 1;
        int _t0B75 = 3;
        int[2] _t0B76 = {_t0B74, _t0B75};
        int _t0B77 = 3;
        int _t0B78 = 3;
        int[2] _t0B79 = {_t0B77, _t0B78};
        int _t0B7A = 9;
        int _t0B7B = 3;
        int[2] _t0B7C = {_t0B7A, _t0B7B};
        int _t0B7D = 27;
        int _t0B7E = 3;
        int[2] _t0B7F = {_t0B7D, _t0B7E};
        int[2][4] _t0B80 = {_t0B76, _t0B79, _t0B7C, _t0B7F};
        int[2] _t0B81 = prim $sub01C0<int[2]; %4> (_t0B80, faceIdx0979);
        int _t0B82 = 0;
        int _t0B83 = prim $sub01C0<int; %2> (_t0B81, _t0B82);
        int _t0B84 = prim +0015 (_t0B83, i09B3);
        int _t0B85 = prim $sub01C0<int; %12> (_t0B73, _t0B84);
        accum0B86 = prim @0010<int> (accum0B86, _t0B85);
      }
      int _t0B87 = 0;
      int _t0B88 = prim $dynsub01C2<int> (accum0B86, _t0B87);
      bool _t0B89 = prim ==0082 (_t0B54, _t0B88);
      int[4] _t0B8A = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8B = 0;
      int _t0B8C = prim $sub01C0<int; %4> (_t0B8A, _t0B8B);
      int[4] _t0B8D = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B8E = 1;
      int _t0B8F = prim $sub01C0<int; %4> (_t0B8D, _t0B8E);
      int[4] _t0B90 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0B91 = 3;
      int _t0B92 = prim $sub01C0<int; %4> (_t0B90, _t0B91);
      int[3] _t0B93 = {_t0B8C, _t0B8F, _t0B92};
      int _t0B94 = 1;
      int _t0B95 = prim $sub01C0<int; %3> (_t0B93, _t0B94);
      int _t0B96 = 0;
      int _t0B97 = 1;
      int _t0B98 = 3;
      int[2] _t0B99 = {_t0B97, _t0B98};
      int _t0B9A = 3;
      int _t0B9B = 3;
      int[2] _t0B9C = {_t0B9A, _t0B9B};
      int _t0B9D = 9;
      int _t0B9E = 3;
      int[2] _t0B9F = {_t0B9D, _t0B9E};
      int _t0BA0 = 27;
      int _t0BA1 = 3;
      int[2] _t0BA2 = {_t0BA0, _t0BA1};
      int[2][4] _t0BA3 = {_t0B99, _t0B9C, _t0B9F, _t0BA2};
      int[2] _t0BA4 = prim $sub01C0<int[2]; %4> (_t0BA3, faceIdx0979);
      int _t0BA5 = 1;
      int _t0BA6 = prim $sub01C0<int; %2> (_t0BA4, _t0BA5);
      int[] _t0BA7 = prim $range01C3 (_t0B96, _t0BA6);
      int[] accum0BC7 = {};
      foreach i09B3 in _t0BA7 {
        int _t0BA8 = 1;
        int _t0BA9 = 2;
        int _t0BAA = 3;
        int _t0BAB = 0;
        int _t0BAC = 2;
        int _t0BAD = 3;
        int _t0BAE = 0;
        int _t0BAF = 1;
        int _t0BB0 = 3;
        int _t0BB1 = 0;
        int _t0BB2 = 1;
        int _t0BB3 = 2;
        int[12] _t0BB4 = {_t0BA8, _t0BA9, _t0BAA, _t0BAB, _t0BAC, _t0BAD, _t0BAE, _t0BAF, _t0BB0, _t0BB1, _t0BB2, _t0BB3};
        int _t0BB5 = 1;
        int _t0BB6 = 3;
        int[2] _t0BB7 = {_t0BB5, _t0BB6};
        int _t0BB8 = 3;
        int _t0BB9 = 3;
        int[2] _t0BBA = {_t0BB8, _t0BB9};
        int _t0BBB = 9;
        int _t0BBC = 3;
        int[2] _t0BBD = {_t0BBB, _t0BBC};
        int _t0BBE = 27;
        int _t0BBF = 3;
        int[2] _t0BC0 = {_t0BBE, _t0BBF};
        int[2][4] _t0BC1 = {_t0BB7, _t0BBA, _t0BBD, _t0BC0};
        int[2] _t0BC2 = prim $sub01C0<int[2]; %4> (_t0BC1, faceIdx0979);
        int _t0BC3 = 0;
        int _t0BC4 = prim $sub01C0<int; %2> (_t0BC2, _t0BC3);
        int _t0BC5 = prim +0015 (_t0BC4, i09B3);
        int _t0BC6 = prim $sub01C0<int; %12> (_t0BB4, _t0BC5);
        accum0BC7 = prim @0010<int> (accum0BC7, _t0BC6);
      }
      int _t0BC8 = 1;
      int _t0BC9 = prim $dynsub01C2<int> (accum0BC7, _t0BC8);
      bool _t0BCA = prim ==0082 (_t0B95, _t0BC9);
      int[4] _t0BCB = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCC = 0;
      int _t0BCD = prim $sub01C0<int; %4> (_t0BCB, _t0BCC);
      int[4] _t0BCE = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BCF = 1;
      int _t0BD0 = prim $sub01C0<int; %4> (_t0BCE, _t0BCF);
      int[4] _t0BD1 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0BD2 = 3;
      int _t0BD3 = prim $sub01C0<int; %4> (_t0BD1, _t0BD2);
      int[3] _t0BD4 = {_t0BCD, _t0BD0, _t0BD3};
      int _t0BD5 = 2;
      int _t0BD6 = prim $sub01C0<int; %3> (_t0BD4, _t0BD5);
      int _t0BD7 = 0;
      int _t0BD8 = 1;
      int _t0BD9 = 3;
      int[2] _t0BDA = {_t0BD8, _t0BD9};
      int _t0BDB = 3;
      int _t0BDC = 3;
      int[2] _t0BDD = {_t0BDB, _t0BDC};
      int _t0BDE = 9;
      int _t0BDF = 3;
      int[2] _t0BE0 = {_t0BDE, _t0BDF};
      int _t0BE1 = 27;
      int _t0BE2 = 3;
      int[2] _t0BE3 = {_t0BE1, _t0BE2};
      int[2][4] _t0BE4 = {_t0BDA, _t0BDD, _t0BE0, _t0BE3};
      int[2] _t0BE5 = prim $sub01C0<int[2]; %4> (_t0BE4, faceIdx0979);
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %2> (_t0BE5, _t0BE6);
      int[] _t0BE8 = prim $range01C3 (_t0BD7, _t0BE7);
      int[] accum0C08 = {};
      foreach i09B3 in _t0BE8 {
        int _t0BE9 = 1;
        int _t0BEA = 2;
        int _t0BEB = 3;
        int _t0BEC = 0;
        int _t0BED = 2;
        int _t0BEE = 3;
        int _t0BEF = 0;
        int _t0BF0 = 1;
        int _t0BF1 = 3;
        int _t0BF2 = 0;
        int _t0BF3 = 1;
        int _t0BF4 = 2;
        int[12] _t0BF5 = {_t0BE9, _t0BEA, _t0BEB, _t0BEC, _t0BED, _t0BEE, _t0BEF, _t0BF0, _t0BF1, _t0BF2, _t0BF3, _t0BF4};
        int _t0BF6 = 1;
        int _t0BF7 = 3;
        int[2] _t0BF8 = {_t0BF6, _t0BF7};
        int _t0BF9 = 3;
        int _t0BFA = 3;
        int[2] _t0BFB = {_t0BF9, _t0BFA};
        int _t0BFC = 9;
        int _t0BFD = 3;
        int[2] _t0BFE = {_t0BFC, _t0BFD};
        int _t0BFF = 27;
        int _t0C00 = 3;
        int[2] _t0C01 = {_t0BFF, _t0C00};
        int[2][4] _t0C02 = {_t0BF8, _t0BFB, _t0BFE, _t0C01};
        int[2] _t0C03 = prim $sub01C0<int[2]; %4> (_t0C02, faceIdx0979);
        int _t0C04 = 0;
        int _t0C05 = prim $sub01C0<int; %2> (_t0C03, _t0C04);
        int _t0C06 = prim +0015 (_t0C05, i09B3);
        int _t0C07 = prim $sub01C0<int; %12> (_t0BF5, _t0C06);
        accum0C08 = prim @0010<int> (accum0C08, _t0C07);
      }
      int _t0C09 = 2;
      int _t0C0A = prim $dynsub01C2<int> (accum0C08, _t0C09);
      bool _t0C0B = prim ==0082 (_t0BD6, _t0C0A);
      bool _t0C0C = prim $and01C4 (_t0BCA, _t0C0B);
      bool _t0C0D = prim $and01C4 (_t0B89, _t0C0C);
      if _t0C0D {
        int _t0C0E = 2;
        int[2] _t0C0F = {cellInt09BA, _t0C0E};
        return _t0C0F;
      }
      int[4] _t0C10 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C11 = 0;
      int _t0C12 = prim $sub01C0<int; %4> (_t0C10, _t0C11);
      int[4] _t0C13 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C14 = 1;
      int _t0C15 = prim $sub01C0<int; %4> (_t0C13, _t0C14);
      int[4] _t0C16 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C17 = 2;
      int _t0C18 = prim $sub01C0<int; %4> (_t0C16, _t0C17);
      int[3] _t0C19 = {_t0C12, _t0C15, _t0C18};
      int _t0C1A = 0;
      int _t0C1B = prim $sub01C0<int; %3> (_t0C19, _t0C1A);
      int _t0C1C = 0;
      int _t0C1D = 1;
      int _t0C1E = 3;
      int[2] _t0C1F = {_t0C1D, _t0C1E};
      int _t0C20 = 3;
      int _t0C21 = 3;
      int[2] _t0C22 = {_t0C20, _t0C21};
      int _t0C23 = 9;
      int _t0C24 = 3;
      int[2] _t0C25 = {_t0C23, _t0C24};
      int _t0C26 = 27;
      int _t0C27 = 3;
      int[2] _t0C28 = {_t0C26, _t0C27};
      int[2][4] _t0C29 = {_t0C1F, _t0C22, _t0C25, _t0C28};
      int[2] _t0C2A = prim $sub01C0<int[2]; %4> (_t0C29, faceIdx0979);
      int _t0C2B = 1;
      int _t0C2C = prim $sub01C0<int; %2> (_t0C2A, _t0C2B);
      int[] _t0C2D = prim $range01C3 (_t0C1C, _t0C2C);
      int[] accum0C4D = {};
      foreach i09B3 in _t0C2D {
        int _t0C2E = 1;
        int _t0C2F = 2;
        int _t0C30 = 3;
        int _t0C31 = 0;
        int _t0C32 = 2;
        int _t0C33 = 3;
        int _t0C34 = 0;
        int _t0C35 = 1;
        int _t0C36 = 3;
        int _t0C37 = 0;
        int _t0C38 = 1;
        int _t0C39 = 2;
        int[12] _t0C3A = {_t0C2E, _t0C2F, _t0C30, _t0C31, _t0C32, _t0C33, _t0C34, _t0C35, _t0C36, _t0C37, _t0C38, _t0C39};
        int _t0C3B = 1;
        int _t0C3C = 3;
        int[2] _t0C3D = {_t0C3B, _t0C3C};
        int _t0C3E = 3;
        int _t0C3F = 3;
        int[2] _t0C40 = {_t0C3E, _t0C3F};
        int _t0C41 = 9;
        int _t0C42 = 3;
        int[2] _t0C43 = {_t0C41, _t0C42};
        int _t0C44 = 27;
        int _t0C45 = 3;
        int[2] _t0C46 = {_t0C44, _t0C45};
        int[2][4] _t0C47 = {_t0C3D, _t0C40, _t0C43, _t0C46};
        int[2] _t0C48 = prim $sub01C0<int[2]; %4> (_t0C47, faceIdx0979);
        int _t0C49 = 0;
        int _t0C4A = prim $sub01C0<int; %2> (_t0C48, _t0C49);
        int _t0C4B = prim +0015 (_t0C4A, i09B3);
        int _t0C4C = prim $sub01C0<int; %12> (_t0C3A, _t0C4B);
        accum0C4D = prim @0010<int> (accum0C4D, _t0C4C);
      }
      int _t0C4E = 0;
      int _t0C4F = prim $dynsub01C2<int> (accum0C4D, _t0C4E);
      bool _t0C50 = prim ==0082 (_t0C1B, _t0C4F);
      int[4] _t0C51 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C52 = 0;
      int _t0C53 = prim $sub01C0<int; %4> (_t0C51, _t0C52);
      int[4] _t0C54 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C55 = 1;
      int _t0C56 = prim $sub01C0<int; %4> (_t0C54, _t0C55);
      int[4] _t0C57 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C58 = 2;
      int _t0C59 = prim $sub01C0<int; %4> (_t0C57, _t0C58);
      int[3] _t0C5A = {_t0C53, _t0C56, _t0C59};
      int _t0C5B = 1;
      int _t0C5C = prim $sub01C0<int; %3> (_t0C5A, _t0C5B);
      int _t0C5D = 0;
      int _t0C5E = 1;
      int _t0C5F = 3;
      int[2] _t0C60 = {_t0C5E, _t0C5F};
      int _t0C61 = 3;
      int _t0C62 = 3;
      int[2] _t0C63 = {_t0C61, _t0C62};
      int _t0C64 = 9;
      int _t0C65 = 3;
      int[2] _t0C66 = {_t0C64, _t0C65};
      int _t0C67 = 27;
      int _t0C68 = 3;
      int[2] _t0C69 = {_t0C67, _t0C68};
      int[2][4] _t0C6A = {_t0C60, _t0C63, _t0C66, _t0C69};
      int[2] _t0C6B = prim $sub01C0<int[2]; %4> (_t0C6A, faceIdx0979);
      int _t0C6C = 1;
      int _t0C6D = prim $sub01C0<int; %2> (_t0C6B, _t0C6C);
      int[] _t0C6E = prim $range01C3 (_t0C5D, _t0C6D);
      int[] accum0C8E = {};
      foreach i09B3 in _t0C6E {
        int _t0C6F = 1;
        int _t0C70 = 2;
        int _t0C71 = 3;
        int _t0C72 = 0;
        int _t0C73 = 2;
        int _t0C74 = 3;
        int _t0C75 = 0;
        int _t0C76 = 1;
        int _t0C77 = 3;
        int _t0C78 = 0;
        int _t0C79 = 1;
        int _t0C7A = 2;
        int[12] _t0C7B = {_t0C6F, _t0C70, _t0C71, _t0C72, _t0C73, _t0C74, _t0C75, _t0C76, _t0C77, _t0C78, _t0C79, _t0C7A};
        int _t0C7C = 1;
        int _t0C7D = 3;
        int[2] _t0C7E = {_t0C7C, _t0C7D};
        int _t0C7F = 3;
        int _t0C80 = 3;
        int[2] _t0C81 = {_t0C7F, _t0C80};
        int _t0C82 = 9;
        int _t0C83 = 3;
        int[2] _t0C84 = {_t0C82, _t0C83};
        int _t0C85 = 27;
        int _t0C86 = 3;
        int[2] _t0C87 = {_t0C85, _t0C86};
        int[2][4] _t0C88 = {_t0C7E, _t0C81, _t0C84, _t0C87};
        int[2] _t0C89 = prim $sub01C0<int[2]; %4> (_t0C88, faceIdx0979);
        int _t0C8A = 0;
        int _t0C8B = prim $sub01C0<int; %2> (_t0C89, _t0C8A);
        int _t0C8C = prim +0015 (_t0C8B, i09B3);
        int _t0C8D = prim $sub01C0<int; %12> (_t0C7B, _t0C8C);
        accum0C8E = prim @0010<int> (accum0C8E, _t0C8D);
      }
      int _t0C8F = 1;
      int _t0C90 = prim $dynsub01C2<int> (accum0C8E, _t0C8F);
      bool _t0C91 = prim ==0082 (_t0C5C, _t0C90);
      int[4] _t0C92 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C93 = 0;
      int _t0C94 = prim $sub01C0<int; %4> (_t0C92, _t0C93);
      int[4] _t0C95 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C96 = 1;
      int _t0C97 = prim $sub01C0<int; %4> (_t0C95, _t0C96);
      int[4] _t0C98 = extractFemItem2(ExtractIndices(Mesh), int, mesh097B, cellInt09BA : int);
      int _t0C99 = 2;
      int _t0C9A = prim $sub01C0<int; %4> (_t0C98, _t0C99);
      int[3] _t0C9B = {_t0C94, _t0C97, _t0C9A};
      int _t0C9C = 2;
      int _t0C9D = prim $sub01C0<int; %3> (_t0C9B, _t0C9C);
      int _t0C9E = 0;
      int _t0C9F = 1;
      int _t0CA0 = 3;
      int[2] _t0CA1 = {_t0C9F, _t0CA0};
      int _t0CA2 = 3;
      int _t0CA3 = 3;
      int[2] _t0CA4 = {_t0CA2, _t0CA3};
      int _t0CA5 = 9;
      int _t0CA6 = 3;
      int[2] _t0CA7 = {_t0CA5, _t0CA6};
      int _t0CA8 = 27;
      int _t0CA9 = 3;
      int[2] _t0CAA = {_t0CA8, _t0CA9};
      int[2][4] _t0CAB = {_t0CA1, _t0CA4, _t0CA7, _t0CAA};
      int[2] _t0CAC = prim $sub01C0<int[2]; %4> (_t0CAB, faceIdx0979);
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %2> (_t0CAC, _t0CAD);
      int[] _t0CAF = prim $range01C3 (_t0C9E, _t0CAE);
      int[] accum0CCF = {};
      foreach i09B3 in _t0CAF {
        int _t0CB0 = 1;
        int _t0CB1 = 2;
        int _t0CB2 = 3;
        int _t0CB3 = 0;
        int _t0CB4 = 2;
        int _t0CB5 = 3;
        int _t0CB6 = 0;
        int _t0CB7 = 1;
        int _t0CB8 = 3;
        int _t0CB9 = 0;
        int _t0CBA = 1;
        int _t0CBB = 2;
        int[12] _t0CBC = {_t0CB0, _t0CB1, _t0CB2, _t0CB3, _t0CB4, _t0CB5, _t0CB6, _t0CB7, _t0CB8, _t0CB9, _t0CBA, _t0CBB};
        int _t0CBD = 1;
        int _t0CBE = 3;
        int[2] _t0CBF = {_t0CBD, _t0CBE};
        int _t0CC0 = 3;
        int _t0CC1 = 3;
        int[2] _t0CC2 = {_t0CC0, _t0CC1};
        int _t0CC3 = 9;
        int _t0CC4 = 3;
        int[2] _t0CC5 = {_t0CC3, _t0CC4};
        int _t0CC6 = 27;
        int _t0CC7 = 3;
        int[2] _t0CC8 = {_t0CC6, _t0CC7};
        int[2][4] _t0CC9 = {_t0CBF, _t0CC2, _t0CC5, _t0CC8};
        int[2] _t0CCA = prim $sub01C0<int[2]; %4> (_t0CC9, faceIdx0979);
        int _t0CCB = 0;
        int _t0CCC = prim $sub01C0<int; %2> (_t0CCA, _t0CCB);
        int _t0CCD = prim +0015 (_t0CCC, i09B3);
        int _t0CCE = prim $sub01C0<int; %12> (_t0CBC, _t0CCD);
        accum0CCF = prim @0010<int> (accum0CCF, _t0CCE);
      }
      int _t0CD0 = 2;
      int _t0CD1 = prim $dynsub01C2<int> (accum0CCF, _t0CD0);
      bool _t0CD2 = prim ==0082 (_t0C9D, _t0CD1);
      bool _t0CD3 = prim $and01C4 (_t0C91, _t0CD2);
      bool _t0CD4 = prim $and01C4 (_t0C50, _t0CD3);
      if _t0CD4 {
        int _t0CD5 = 3;
        int[2] _t0CD6 = {cellInt09BA, _t0CD5};
        return _t0CD6;
      }
    }
  }
  int _t0CD7 = -1;
  int _t0CD8 = -1;
  int[2] _t0CD9 = {_t0CD7, _t0CD8};
  return _t0CD9;
}
function vec2#0 _enter0CDA (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0CDD = +inf;
  int face0CDE = -1;
  real _t0CDF = 0.57735026919e0;
  real _t0CE0 = 0.57735026919e0;
  real _t0CE1 = -0.57735026919e0;
  real _t0CE2 = 0.57735026919e0;
  vec3 _t0CE3 = [_t0CE0, _t0CE1, _t0CE2];
  real _t0CE4 = prim •00CE<$[3]; $[3]; $[]> (_t0CE3, refPos0CDB);
  real _t0CE5 = prim -0026<$[]> (_t0CDF, _t0CE4);
  real _t0CE6 = 0.57735026919e0;
  real _t0CE7 = -0.57735026919e0;
  real _t0CE8 = 0.57735026919e0;
  vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
  real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, dPos0CDC);
  real _t0CEB = prim /0055 (_t0CE5, _t0CEA);
  real _t0CEC = -0.e0;
  bool _t0CED = prim >0080 (_t0CEB, _t0CEC);
  real _t0CEE = 0.57735026919e0;
  real _t0CEF = 0.57735026919e0;
  real _t0CF0 = -0.57735026919e0;
  real _t0CF1 = 0.57735026919e0;
  vec3 _t0CF2 = [_t0CEF, _t0CF0, _t0CF1];
  real _t0CF3 = prim •00CE<$[3]; $[3]; $[]> (_t0CF2, refPos0CDB);
  real _t0CF4 = prim -0026<$[]> (_t0CEE, _t0CF3);
  real _t0CF5 = 0.57735026919e0;
  real _t0CF6 = -0.57735026919e0;
  real _t0CF7 = 0.57735026919e0;
  vec3 _t0CF8 = [_t0CF5, _t0CF6, _t0CF7];
  real _t0CF9 = prim •00CE<$[3]; $[3]; $[]> (_t0CF8, dPos0CDC);
  real _t0CFA = prim /0055 (_t0CF4, _t0CF9);
  bool _t0CFB = prim >0080 (time0CDD, _t0CFA);
  bool _t0CFC = prim $and01C4 (_t0CED, _t0CFB);
  if _t0CFC {
    real _t0CFD = 0.1e1;
    real _t0CFE = 0.1e1;
    real _t0CFF = 0.1e1;
    real _t0D00 = 0.1e1;
    vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
    real _t0D02 = 0.57735026919e0;
    real _t0D03 = 0.57735026919e0;
    real _t0D04 = -0.57735026919e0;
    real _t0D05 = 0.57735026919e0;
    vec3 _t0D06 = [_t0D03, _t0D04, _t0D05];
    real _t0D07 = prim •00CE<$[3]; $[3]; $[]> (_t0D06, refPos0CDB);
    real _t0D08 = prim -0026<$[]> (_t0D02, _t0D07);
    real _t0D09 = 0.57735026919e0;
    real _t0D0A = -0.57735026919e0;
    real _t0D0B = 0.57735026919e0;
    vec3 _t0D0C = [_t0D09, _t0D0A, _t0D0B];
    real _t0D0D = prim •00CE<$[3]; $[3]; $[]> (_t0D0C, dPos0CDC);
    real _t0D0E = prim /0055 (_t0D08, _t0D0D);
    vec3 _t0D0F = prim *0038<$[3]> (dPos0CDC, _t0D0E);
    vec3 _t0D10 = prim +0017<$[3]> (_t0D0F, refPos0CDB);
    real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, _t0D10);
    bool _t0D12 = prim >0080 (_t0CFD, _t0D11);
    real _t0D13 = 0.1e-8;
    real _t0D14 = 0.1e-8;
    real _t0D15 = 0.1e-8;
    vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
    real _t0D17 = 0.57735026919e0;
    real _t0D18 = 0.57735026919e0;
    real _t0D19 = -0.57735026919e0;
    real _t0D1A = 0.57735026919e0;
    vec3 _t0D1B = [_t0D18, _t0D19, _t0D1A];
    real _t0D1C = prim •00CE<$[3]; $[3]; $[]> (_t0D1B, refPos0CDB);
    real _t0D1D = prim -0026<$[]> (_t0D17, _t0D1C);
    real _t0D1E = 0.57735026919e0;
    real _t0D1F = -0.57735026919e0;
    real _t0D20 = 0.57735026919e0;
    vec3 _t0D21 = [_t0D1E, _t0D1F, _t0D20];
    real _t0D22 = prim •00CE<$[3]; $[3]; $[]> (_t0D21, dPos0CDC);
    real _t0D23 = prim /0055 (_t0D1D, _t0D22);
    vec3 _t0D24 = prim *0038<$[3]> (dPos0CDC, _t0D23);
    vec3 _t0D25 = prim +0017<$[3]> (_t0D24, refPos0CDB);
    vec3 _t0D26 = prim +0017<$[3]> (_t0D16, _t0D25);
    real _t0D27 = _t0D26[0];
    real _t0D28 = -0.e0;
    bool _t0D29 = prim >0080 (_t0D27, _t0D28);
    real _t0D2A = 0.1e-8;
    real _t0D2B = 0.1e-8;
    real _t0D2C = 0.1e-8;
    vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
    real _t0D2E = 0.57735026919e0;
    real _t0D2F = 0.57735026919e0;
    real _t0D30 = -0.57735026919e0;
    real _t0D31 = 0.57735026919e0;
    vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
    real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0CDB);
    real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
    real _t0D35 = 0.57735026919e0;
    real _t0D36 = -0.57735026919e0;
    real _t0D37 = 0.57735026919e0;
    vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
    real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0CDC);
    real _t0D3A = prim /0055 (_t0D34, _t0D39);
    vec3 _t0D3B = prim *0038<$[3]> (dPos0CDC, _t0D3A);
    vec3 _t0D3C = prim +0017<$[3]> (_t0D3B, refPos0CDB);
    vec3 _t0D3D = prim +0017<$[3]> (_t0D2D, _t0D3C);
    real _t0D3E = _t0D3D[1];
    real _t0D3F = -0.e0;
    bool _t0D40 = prim >0080 (_t0D3E, _t0D3F);
    real _t0D41 = 0.1e-8;
    real _t0D42 = 0.1e-8;
    real _t0D43 = 0.1e-8;
    vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
    real _t0D45 = 0.57735026919e0;
    real _t0D46 = 0.57735026919e0;
    real _t0D47 = -0.57735026919e0;
    real _t0D48 = 0.57735026919e0;
    vec3 _t0D49 = [_t0D46, _t0D47, _t0D48];
    real _t0D4A = prim •00CE<$[3]; $[3]; $[]> (_t0D49, refPos0CDB);
    real _t0D4B = prim -0026<$[]> (_t0D45, _t0D4A);
    real _t0D4C = 0.57735026919e0;
    real _t0D4D = -0.57735026919e0;
    real _t0D4E = 0.57735026919e0;
    vec3 _t0D4F = [_t0D4C, _t0D4D, _t0D4E];
    real _t0D50 = prim •00CE<$[3]; $[3]; $[]> (_t0D4F, dPos0CDC);
    real _t0D51 = prim /0055 (_t0D4B, _t0D50);
    vec3 _t0D52 = prim *0038<$[3]> (dPos0CDC, _t0D51);
    vec3 _t0D53 = prim +0017<$[3]> (_t0D52, refPos0CDB);
    vec3 _t0D54 = prim +0017<$[3]> (_t0D44, _t0D53);
    real _t0D55 = _t0D54[2];
    real _t0D56 = -0.e0;
    bool _t0D57 = prim >0080 (_t0D55, _t0D56);
    bool _t0D58 = prim $and01C4 (_t0D40, _t0D57);
    bool _t0D59 = prim $and01C4 (_t0D29, _t0D58);
    bool _t0D5A = prim $and01C4 (_t0D12, _t0D59);
    if _t0D5A {
      real _t0D5B = 0.57735026919e0;
      real _t0D5C = 0.57735026919e0;
      real _t0D5D = -0.57735026919e0;
      real _t0D5E = 0.57735026919e0;
      vec3 _t0D5F = [_t0D5C, _t0D5D, _t0D5E];
      real _t0D60 = prim •00CE<$[3]; $[3]; $[]> (_t0D5F, refPos0CDB);
      real _t0D61 = prim -0026<$[]> (_t0D5B, _t0D60);
      real _t0D62 = 0.57735026919e0;
      real _t0D63 = -0.57735026919e0;
      real _t0D64 = 0.57735026919e0;
      vec3 _t0D65 = [_t0D62, _t0D63, _t0D64];
      real _t0D66 = prim •00CE<$[3]; $[3]; $[]> (_t0D65, dPos0CDC);
      time0CDD = prim /0055 (_t0D61, _t0D66);
      face0CDE = 0;
    }
  }
  real _t0D67 = 0.e0;
  real _t0D68 = 0.1e1;
  real _t0D69 = 0.e0;
  real _t0D6A = 0.e0;
  vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
  real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0CDB);
  real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
  real _t0D6E = 0.1e1;
  real _t0D6F = 0.e0;
  real _t0D70 = 0.e0;
  vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
  real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0CDC);
  real _t0D73 = prim /0055 (_t0D6D, _t0D72);
  real _t0D74 = -0.e0;
  bool _t0D75 = prim >0080 (_t0D73, _t0D74);
  real _t0D76 = 0.e0;
  real _t0D77 = 0.1e1;
  real _t0D78 = 0.e0;
  real _t0D79 = 0.e0;
  vec3 _t0D7A = [_t0D77, _t0D78, _t0D79];
  real _t0D7B = prim •00CE<$[3]; $[3]; $[]> (_t0D7A, refPos0CDB);
  real _t0D7C = prim -0026<$[]> (_t0D76, _t0D7B);
  real _t0D7D = 0.1e1;
  real _t0D7E = 0.e0;
  real _t0D7F = 0.e0;
  vec3 _t0D80 = [_t0D7D, _t0D7E, _t0D7F];
  real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D80, dPos0CDC);
  real _t0D82 = prim /0055 (_t0D7C, _t0D81);
  bool _t0D83 = prim >0080 (time0CDD, _t0D82);
  bool _t0D84 = prim $and01C4 (_t0D75, _t0D83);
  if _t0D84 {
    real _t0D85 = 0.1e1;
    real _t0D86 = 0.1e1;
    real _t0D87 = 0.1e1;
    real _t0D88 = 0.1e1;
    vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
    real _t0D8A = 0.e0;
    real _t0D8B = 0.1e1;
    real _t0D8C = 0.e0;
    real _t0D8D = 0.e0;
    vec3 _t0D8E = [_t0D8B, _t0D8C, _t0D8D];
    real _t0D8F = prim •00CE<$[3]; $[3]; $[]> (_t0D8E, refPos0CDB);
    real _t0D90 = prim -0026<$[]> (_t0D8A, _t0D8F);
    real _t0D91 = 0.1e1;
    real _t0D92 = 0.e0;
    real _t0D93 = 0.e0;
    vec3 _t0D94 = [_t0D91, _t0D92, _t0D93];
    real _t0D95 = prim •00CE<$[3]; $[3]; $[]> (_t0D94, dPos0CDC);
    real _t0D96 = prim /0055 (_t0D90, _t0D95);
    vec3 _t0D97 = prim *0038<$[3]> (dPos0CDC, _t0D96);
    vec3 _t0D98 = prim +0017<$[3]> (_t0D97, refPos0CDB);
    real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D89, _t0D98);
    bool _t0D9A = prim >0080 (_t0D85, _t0D99);
    real _t0D9B = 0.1e-8;
    real _t0D9C = 0.1e-8;
    real _t0D9D = 0.1e-8;
    vec3 _t0D9E = [_t0D9B, _t0D9C, _t0D9D];
    real _t0D9F = 0.e0;
    real _t0DA0 = 0.1e1;
    real _t0DA1 = 0.e0;
    real _t0DA2 = 0.e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, refPos0CDB);
    real _t0DA5 = prim -0026<$[]> (_t0D9F, _t0DA4);
    real _t0DA6 = 0.1e1;
    real _t0DA7 = 0.e0;
    real _t0DA8 = 0.e0;
    vec3 _t0DA9 = [_t0DA6, _t0DA7, _t0DA8];
    real _t0DAA = prim •00CE<$[3]; $[3]; $[]> (_t0DA9, dPos0CDC);
    real _t0DAB = prim /0055 (_t0DA5, _t0DAA);
    vec3 _t0DAC = prim *0038<$[3]> (dPos0CDC, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0DAC, refPos0CDB);
    vec3 _t0DAE = prim +0017<$[3]> (_t0D9E, _t0DAD);
    real _t0DAF = _t0DAE[0];
    real _t0DB0 = -0.e0;
    bool _t0DB1 = prim >0080 (_t0DAF, _t0DB0);
    real _t0DB2 = 0.1e-8;
    real _t0DB3 = 0.1e-8;
    real _t0DB4 = 0.1e-8;
    vec3 _t0DB5 = [_t0DB2, _t0DB3, _t0DB4];
    real _t0DB6 = 0.e0;
    real _t0DB7 = 0.1e1;
    real _t0DB8 = 0.e0;
    real _t0DB9 = 0.e0;
    vec3 _t0DBA = [_t0DB7, _t0DB8, _t0DB9];
    real _t0DBB = prim •00CE<$[3]; $[3]; $[]> (_t0DBA, refPos0CDB);
    real _t0DBC = prim -0026<$[]> (_t0DB6, _t0DBB);
    real _t0DBD = 0.1e1;
    real _t0DBE = 0.e0;
    real _t0DBF = 0.e0;
    vec3 _t0DC0 = [_t0DBD, _t0DBE, _t0DBF];
    real _t0DC1 = prim •00CE<$[3]; $[3]; $[]> (_t0DC0, dPos0CDC);
    real _t0DC2 = prim /0055 (_t0DBC, _t0DC1);
    vec3 _t0DC3 = prim *0038<$[3]> (dPos0CDC, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DC3, refPos0CDB);
    vec3 _t0DC5 = prim +0017<$[3]> (_t0DB5, _t0DC4);
    real _t0DC6 = _t0DC5[1];
    real _t0DC7 = -0.e0;
    bool _t0DC8 = prim >0080 (_t0DC6, _t0DC7);
    real _t0DC9 = 0.1e-8;
    real _t0DCA = 0.1e-8;
    real _t0DCB = 0.1e-8;
    vec3 _t0DCC = [_t0DC9, _t0DCA, _t0DCB];
    real _t0DCD = 0.e0;
    real _t0DCE = 0.1e1;
    real _t0DCF = 0.e0;
    real _t0DD0 = 0.e0;
    vec3 _t0DD1 = [_t0DCE, _t0DCF, _t0DD0];
    real _t0DD2 = prim •00CE<$[3]; $[3]; $[]> (_t0DD1, refPos0CDB);
    real _t0DD3 = prim -0026<$[]> (_t0DCD, _t0DD2);
    real _t0DD4 = 0.1e1;
    real _t0DD5 = 0.e0;
    real _t0DD6 = 0.e0;
    vec3 _t0DD7 = [_t0DD4, _t0DD5, _t0DD6];
    real _t0DD8 = prim •00CE<$[3]; $[3]; $[]> (_t0DD7, dPos0CDC);
    real _t0DD9 = prim /0055 (_t0DD3, _t0DD8);
    vec3 _t0DDA = prim *0038<$[3]> (dPos0CDC, _t0DD9);
    vec3 _t0DDB = prim +0017<$[3]> (_t0DDA, refPos0CDB);
    vec3 _t0DDC = prim +0017<$[3]> (_t0DCC, _t0DDB);
    real _t0DDD = _t0DDC[2];
    real _t0DDE = -0.e0;
    bool _t0DDF = prim >0080 (_t0DDD, _t0DDE);
    bool _t0DE0 = prim $and01C4 (_t0DC8, _t0DDF);
    bool _t0DE1 = prim $and01C4 (_t0DB1, _t0DE0);
    bool _t0DE2 = prim $and01C4 (_t0D9A, _t0DE1);
    if _t0DE2 {
      real _t0DE3 = 0.e0;
      real _t0DE4 = 0.1e1;
      real _t0DE5 = 0.e0;
      real _t0DE6 = 0.e0;
      vec3 _t0DE7 = [_t0DE4, _t0DE5, _t0DE6];
      real _t0DE8 = prim •00CE<$[3]; $[3]; $[]> (_t0DE7, refPos0CDB);
      real _t0DE9 = prim -0026<$[]> (_t0DE3, _t0DE8);
      real _t0DEA = 0.1e1;
      real _t0DEB = 0.e0;
      real _t0DEC = 0.e0;
      vec3 _t0DED = [_t0DEA, _t0DEB, _t0DEC];
      real _t0DEE = prim •00CE<$[3]; $[3]; $[]> (_t0DED, dPos0CDC);
      time0CDD = prim /0055 (_t0DE9, _t0DEE);
      face0CDE = 1;
    }
  }
  real _t0DEF = 0.e0;
  real _t0DF0 = 0.e0;
  real _t0DF1 = 0.1e1;
  real _t0DF2 = 0.e0;
  vec3 _t0DF3 = [_t0DF0, _t0DF1, _t0DF2];
  real _t0DF4 = prim •00CE<$[3]; $[3]; $[]> (_t0DF3, refPos0CDB);
  real _t0DF5 = prim -0026<$[]> (_t0DEF, _t0DF4);
  real _t0DF6 = 0.e0;
  real _t0DF7 = 0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, dPos0CDC);
  real _t0DFB = prim /0055 (_t0DF5, _t0DFA);
  real _t0DFC = -0.e0;
  bool _t0DFD = prim >0080 (_t0DFB, _t0DFC);
  real _t0DFE = 0.e0;
  real _t0DFF = 0.e0;
  real _t0E00 = 0.1e1;
  real _t0E01 = 0.e0;
  vec3 _t0E02 = [_t0DFF, _t0E00, _t0E01];
  real _t0E03 = prim •00CE<$[3]; $[3]; $[]> (_t0E02, refPos0CDB);
  real _t0E04 = prim -0026<$[]> (_t0DFE, _t0E03);
  real _t0E05 = 0.e0;
  real _t0E06 = 0.1e1;
  real _t0E07 = 0.e0;
  vec3 _t0E08 = [_t0E05, _t0E06, _t0E07];
  real _t0E09 = prim •00CE<$[3]; $[3]; $[]> (_t0E08, dPos0CDC);
  real _t0E0A = prim /0055 (_t0E04, _t0E09);
  bool _t0E0B = prim >0080 (time0CDD, _t0E0A);
  bool _t0E0C = prim $and01C4 (_t0DFD, _t0E0B);
  if _t0E0C {
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.1e1;
    real _t0E0F = 0.1e1;
    real _t0E10 = 0.1e1;
    vec3 _t0E11 = [_t0E0E, _t0E0F, _t0E10];
    real _t0E12 = 0.e0;
    real _t0E13 = 0.e0;
    real _t0E14 = 0.1e1;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, refPos0CDB);
    real _t0E18 = prim -0026<$[]> (_t0E12, _t0E17);
    real _t0E19 = 0.e0;
    real _t0E1A = 0.1e1;
    real _t0E1B = 0.e0;
    vec3 _t0E1C = [_t0E19, _t0E1A, _t0E1B];
    real _t0E1D = prim •00CE<$[3]; $[3]; $[]> (_t0E1C, dPos0CDC);
    real _t0E1E = prim /0055 (_t0E18, _t0E1D);
    vec3 _t0E1F = prim *0038<$[3]> (dPos0CDC, _t0E1E);
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, refPos0CDB);
    real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E11, _t0E20);
    bool _t0E22 = prim >0080 (_t0E0D, _t0E21);
    real _t0E23 = 0.1e-8;
    real _t0E24 = 0.1e-8;
    real _t0E25 = 0.1e-8;
    vec3 _t0E26 = [_t0E23, _t0E24, _t0E25];
    real _t0E27 = 0.e0;
    real _t0E28 = 0.e0;
    real _t0E29 = 0.1e1;
    real _t0E2A = 0.e0;
    vec3 _t0E2B = [_t0E28, _t0E29, _t0E2A];
    real _t0E2C = prim •00CE<$[3]; $[3]; $[]> (_t0E2B, refPos0CDB);
    real _t0E2D = prim -0026<$[]> (_t0E27, _t0E2C);
    real _t0E2E = 0.e0;
    real _t0E2F = 0.1e1;
    real _t0E30 = 0.e0;
    vec3 _t0E31 = [_t0E2E, _t0E2F, _t0E30];
    real _t0E32 = prim •00CE<$[3]; $[3]; $[]> (_t0E31, dPos0CDC);
    real _t0E33 = prim /0055 (_t0E2D, _t0E32);
    vec3 _t0E34 = prim *0038<$[3]> (dPos0CDC, _t0E33);
    vec3 _t0E35 = prim +0017<$[3]> (_t0E34, refPos0CDB);
    vec3 _t0E36 = prim +0017<$[3]> (_t0E26, _t0E35);
    real _t0E37 = _t0E36[0];
    real _t0E38 = -0.e0;
    bool _t0E39 = prim >0080 (_t0E37, _t0E38);
    real _t0E3A = 0.1e-8;
    real _t0E3B = 0.1e-8;
    real _t0E3C = 0.1e-8;
    vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
    real _t0E3E = 0.e0;
    real _t0E3F = 0.e0;
    real _t0E40 = 0.1e1;
    real _t0E41 = 0.e0;
    vec3 _t0E42 = [_t0E3F, _t0E40, _t0E41];
    real _t0E43 = prim •00CE<$[3]; $[3]; $[]> (_t0E42, refPos0CDB);
    real _t0E44 = prim -0026<$[]> (_t0E3E, _t0E43);
    real _t0E45 = 0.e0;
    real _t0E46 = 0.1e1;
    real _t0E47 = 0.e0;
    vec3 _t0E48 = [_t0E45, _t0E46, _t0E47];
    real _t0E49 = prim •00CE<$[3]; $[3]; $[]> (_t0E48, dPos0CDC);
    real _t0E4A = prim /0055 (_t0E44, _t0E49);
    vec3 _t0E4B = prim *0038<$[3]> (dPos0CDC, _t0E4A);
    vec3 _t0E4C = prim +0017<$[3]> (_t0E4B, refPos0CDB);
    vec3 _t0E4D = prim +0017<$[3]> (_t0E3D, _t0E4C);
    real _t0E4E = _t0E4D[1];
    real _t0E4F = -0.e0;
    bool _t0E50 = prim >0080 (_t0E4E, _t0E4F);
    real _t0E51 = 0.1e-8;
    real _t0E52 = 0.1e-8;
    real _t0E53 = 0.1e-8;
    vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
    real _t0E55 = 0.e0;
    real _t0E56 = 0.e0;
    real _t0E57 = 0.1e1;
    real _t0E58 = 0.e0;
    vec3 _t0E59 = [_t0E56, _t0E57, _t0E58];
    real _t0E5A = prim •00CE<$[3]; $[3]; $[]> (_t0E59, refPos0CDB);
    real _t0E5B = prim -0026<$[]> (_t0E55, _t0E5A);
    real _t0E5C = 0.e0;
    real _t0E5D = 0.1e1;
    real _t0E5E = 0.e0;
    vec3 _t0E5F = [_t0E5C, _t0E5D, _t0E5E];
    real _t0E60 = prim •00CE<$[3]; $[3]; $[]> (_t0E5F, dPos0CDC);
    real _t0E61 = prim /0055 (_t0E5B, _t0E60);
    vec3 _t0E62 = prim *0038<$[3]> (dPos0CDC, _t0E61);
    vec3 _t0E63 = prim +0017<$[3]> (_t0E62, refPos0CDB);
    vec3 _t0E64 = prim +0017<$[3]> (_t0E54, _t0E63);
    real _t0E65 = _t0E64[2];
    real _t0E66 = -0.e0;
    bool _t0E67 = prim >0080 (_t0E65, _t0E66);
    bool _t0E68 = prim $and01C4 (_t0E50, _t0E67);
    bool _t0E69 = prim $and01C4 (_t0E39, _t0E68);
    bool _t0E6A = prim $and01C4 (_t0E22, _t0E69);
    if _t0E6A {
      real _t0E6B = 0.e0;
      real _t0E6C = 0.e0;
      real _t0E6D = 0.1e1;
      real _t0E6E = 0.e0;
      vec3 _t0E6F = [_t0E6C, _t0E6D, _t0E6E];
      real _t0E70 = prim •00CE<$[3]; $[3]; $[]> (_t0E6F, refPos0CDB);
      real _t0E71 = prim -0026<$[]> (_t0E6B, _t0E70);
      real _t0E72 = 0.e0;
      real _t0E73 = 0.1e1;
      real _t0E74 = 0.e0;
      vec3 _t0E75 = [_t0E72, _t0E73, _t0E74];
      real _t0E76 = prim •00CE<$[3]; $[3]; $[]> (_t0E75, dPos0CDC);
      time0CDD = prim /0055 (_t0E71, _t0E76);
      face0CDE = 2;
    }
  }
  real _t0E77 = 0.e0;
  real _t0E78 = 0.e0;
  real _t0E79 = 0.e0;
  real _t0E7A = 0.1e1;
  vec3 _t0E7B = [_t0E78, _t0E79, _t0E7A];
  real _t0E7C = prim •00CE<$[3]; $[3]; $[]> (_t0E7B, refPos0CDB);
  real _t0E7D = prim -0026<$[]> (_t0E77, _t0E7C);
  real _t0E7E = 0.e0;
  real _t0E7F = 0.e0;
  real _t0E80 = 0.1e1;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, dPos0CDC);
  real _t0E83 = prim /0055 (_t0E7D, _t0E82);
  real _t0E84 = -0.e0;
  bool _t0E85 = prim >0080 (_t0E83, _t0E84);
  real _t0E86 = 0.e0;
  real _t0E87 = 0.e0;
  real _t0E88 = 0.e0;
  real _t0E89 = 0.1e1;
  vec3 _t0E8A = [_t0E87, _t0E88, _t0E89];
  real _t0E8B = prim •00CE<$[3]; $[3]; $[]> (_t0E8A, refPos0CDB);
  real _t0E8C = prim -0026<$[]> (_t0E86, _t0E8B);
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = 0.1e1;
  vec3 _t0E90 = [_t0E8D, _t0E8E, _t0E8F];
  real _t0E91 = prim •00CE<$[3]; $[3]; $[]> (_t0E90, dPos0CDC);
  real _t0E92 = prim /0055 (_t0E8C, _t0E91);
  bool _t0E93 = prim >0080 (time0CDD, _t0E92);
  bool _t0E94 = prim $and01C4 (_t0E85, _t0E93);
  if _t0E94 {
    real _t0E95 = 0.1e1;
    real _t0E96 = 0.1e1;
    real _t0E97 = 0.1e1;
    real _t0E98 = 0.1e1;
    vec3 _t0E99 = [_t0E96, _t0E97, _t0E98];
    real _t0E9A = 0.e0;
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = 0.1e1;
    vec3 _t0E9E = [_t0E9B, _t0E9C, _t0E9D];
    real _t0E9F = prim •00CE<$[3]; $[3]; $[]> (_t0E9E, refPos0CDB);
    real _t0EA0 = prim -0026<$[]> (_t0E9A, _t0E9F);
    real _t0EA1 = 0.e0;
    real _t0EA2 = 0.e0;
    real _t0EA3 = 0.1e1;
    vec3 _t0EA4 = [_t0EA1, _t0EA2, _t0EA3];
    real _t0EA5 = prim •00CE<$[3]; $[3]; $[]> (_t0EA4, dPos0CDC);
    real _t0EA6 = prim /0055 (_t0EA0, _t0EA5);
    vec3 _t0EA7 = prim *0038<$[3]> (dPos0CDC, _t0EA6);
    vec3 _t0EA8 = prim +0017<$[3]> (_t0EA7, refPos0CDB);
    real _t0EA9 = prim •00CE<$[3]; $[3]; $[]> (_t0E99, _t0EA8);
    bool _t0EAA = prim >0080 (_t0E95, _t0EA9);
    real _t0EAB = 0.1e-8;
    real _t0EAC = 0.1e-8;
    real _t0EAD = 0.1e-8;
    vec3 _t0EAE = [_t0EAB, _t0EAC, _t0EAD];
    real _t0EAF = 0.e0;
    real _t0EB0 = 0.e0;
    real _t0EB1 = 0.e0;
    real _t0EB2 = 0.1e1;
    vec3 _t0EB3 = [_t0EB0, _t0EB1, _t0EB2];
    real _t0EB4 = prim •00CE<$[3]; $[3]; $[]> (_t0EB3, refPos0CDB);
    real _t0EB5 = prim -0026<$[]> (_t0EAF, _t0EB4);
    real _t0EB6 = 0.e0;
    real _t0EB7 = 0.e0;
    real _t0EB8 = 0.1e1;
    vec3 _t0EB9 = [_t0EB6, _t0EB7, _t0EB8];
    real _t0EBA = prim •00CE<$[3]; $[3]; $[]> (_t0EB9, dPos0CDC);
    real _t0EBB = prim /0055 (_t0EB5, _t0EBA);
    vec3 _t0EBC = prim *0038<$[3]> (dPos0CDC, _t0EBB);
    vec3 _t0EBD = prim +0017<$[3]> (_t0EBC, refPos0CDB);
    vec3 _t0EBE = prim +0017<$[3]> (_t0EAE, _t0EBD);
    real _t0EBF = _t0EBE[0];
    real _t0EC0 = -0.e0;
    bool _t0EC1 = prim >0080 (_t0EBF, _t0EC0);
    real _t0EC2 = 0.1e-8;
    real _t0EC3 = 0.1e-8;
    real _t0EC4 = 0.1e-8;
    vec3 _t0EC5 = [_t0EC2, _t0EC3, _t0EC4];
    real _t0EC6 = 0.e0;
    real _t0EC7 = 0.e0;
    real _t0EC8 = 0.e0;
    real _t0EC9 = 0.1e1;
    vec3 _t0ECA = [_t0EC7, _t0EC8, _t0EC9];
    real _t0ECB = prim •00CE<$[3]; $[3]; $[]> (_t0ECA, refPos0CDB);
    real _t0ECC = prim -0026<$[]> (_t0EC6, _t0ECB);
    real _t0ECD = 0.e0;
    real _t0ECE = 0.e0;
    real _t0ECF = 0.1e1;
    vec3 _t0ED0 = [_t0ECD, _t0ECE, _t0ECF];
    real _t0ED1 = prim •00CE<$[3]; $[3]; $[]> (_t0ED0, dPos0CDC);
    real _t0ED2 = prim /0055 (_t0ECC, _t0ED1);
    vec3 _t0ED3 = prim *0038<$[3]> (dPos0CDC, _t0ED2);
    vec3 _t0ED4 = prim +0017<$[3]> (_t0ED3, refPos0CDB);
    vec3 _t0ED5 = prim +0017<$[3]> (_t0EC5, _t0ED4);
    real _t0ED6 = _t0ED5[1];
    real _t0ED7 = -0.e0;
    bool _t0ED8 = prim >0080 (_t0ED6, _t0ED7);
    real _t0ED9 = 0.1e-8;
    real _t0EDA = 0.1e-8;
    real _t0EDB = 0.1e-8;
    vec3 _t0EDC = [_t0ED9, _t0EDA, _t0EDB];
    real _t0EDD = 0.e0;
    real _t0EDE = 0.e0;
    real _t0EDF = 0.e0;
    real _t0EE0 = 0.1e1;
    vec3 _t0EE1 = [_t0EDE, _t0EDF, _t0EE0];
    real _t0EE2 = prim •00CE<$[3]; $[3]; $[]> (_t0EE1, refPos0CDB);
    real _t0EE3 = prim -0026<$[]> (_t0EDD, _t0EE2);
    real _t0EE4 = 0.e0;
    real _t0EE5 = 0.e0;
    real _t0EE6 = 0.1e1;
    vec3 _t0EE7 = [_t0EE4, _t0EE5, _t0EE6];
    real _t0EE8 = prim •00CE<$[3]; $[3]; $[]> (_t0EE7, dPos0CDC);
    real _t0EE9 = prim /0055 (_t0EE3, _t0EE8);
    vec3 _t0EEA = prim *0038<$[3]> (dPos0CDC, _t0EE9);
    vec3 _t0EEB = prim +0017<$[3]> (_t0EEA, refPos0CDB);
    vec3 _t0EEC = prim +0017<$[3]> (_t0EDC, _t0EEB);
    real _t0EED = _t0EEC[2];
    real _t0EEE = -0.e0;
    bool _t0EEF = prim >0080 (_t0EED, _t0EEE);
    bool _t0EF0 = prim $and01C4 (_t0ED8, _t0EEF);
    bool _t0EF1 = prim $and01C4 (_t0EC1, _t0EF0);
    bool _t0EF2 = prim $and01C4 (_t0EAA, _t0EF1);
    if _t0EF2 {
      real _t0EF3 = 0.e0;
      real _t0EF4 = 0.e0;
      real _t0EF5 = 0.e0;
      real _t0EF6 = 0.1e1;
      vec3 _t0EF7 = [_t0EF4, _t0EF5, _t0EF6];
      real _t0EF8 = prim •00CE<$[3]; $[3]; $[]> (_t0EF7, refPos0CDB);
      real _t0EF9 = prim -0026<$[]> (_t0EF3, _t0EF8);
      real _t0EFA = 0.e0;
      real _t0EFB = 0.e0;
      real _t0EFC = 0.1e1;
      vec3 _t0EFD = [_t0EFA, _t0EFB, _t0EFC];
      real _t0EFE = prim •00CE<$[3]; $[3]; $[]> (_t0EFD, dPos0CDC);
      time0CDD = prim /0055 (_t0EF9, _t0EFE);
      face0CDE = 3;
    }
  }
  int _t0EFF = -1;
  bool _t0F00 = prim !=0086 (face0CDE, _t0EFF);
  if _t0F00 {
    real _t0F01 = (real)face0CDE;
    vec2 _t0F02 = [time0CDD, _t0F01];
    return _t0F02;
  } else {
    real _t0F03 = -0.1e1;
    real _t0F04 = -0.1e1;
    vec2 _t0F05 = [_t0F03, _t0F04];
    return _t0F05;
  }
}
function vec2#0 _exit0F06 (vec3 refPos0CDB, vec3 dPos0CDC)
{
  real time0F07 = +inf;
  int face0F08 = -1;
  real _t0F09 = 0.57735026919e0;
  real _t0F0A = 0.57735026919e0;
  real _t0F0B = -0.57735026919e0;
  real _t0F0C = 0.57735026919e0;
  vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
  real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0CDB);
  real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
  real _t0F10 = 0.57735026919e0;
  real _t0F11 = -0.57735026919e0;
  real _t0F12 = 0.57735026919e0;
  vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
  real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0CDC);
  real _t0F15 = prim /0055 (_t0F0F, _t0F14);
  real _t0F16 = -0.e0;
  bool _t0F17 = prim >0080 (_t0F15, _t0F16);
  real _t0F18 = 0.57735026919e0;
  real _t0F19 = 0.57735026919e0;
  real _t0F1A = -0.57735026919e0;
  real _t0F1B = 0.57735026919e0;
  vec3 _t0F1C = [_t0F19, _t0F1A, _t0F1B];
  real _t0F1D = prim •00CE<$[3]; $[3]; $[]> (_t0F1C, refPos0CDB);
  real _t0F1E = prim -0026<$[]> (_t0F18, _t0F1D);
  real _t0F1F = 0.57735026919e0;
  real _t0F20 = -0.57735026919e0;
  real _t0F21 = 0.57735026919e0;
  vec3 _t0F22 = [_t0F1F, _t0F20, _t0F21];
  real _t0F23 = prim •00CE<$[3]; $[3]; $[]> (_t0F22, dPos0CDC);
  real _t0F24 = prim /0055 (_t0F1E, _t0F23);
  bool _t0F25 = prim >0080 (time0F07, _t0F24);
  bool _t0F26 = prim $and01C4 (_t0F17, _t0F25);
  if _t0F26 {
    real _t0F27 = 0.57735026919e0;
    real _t0F28 = 0.57735026919e0;
    real _t0F29 = -0.57735026919e0;
    real _t0F2A = 0.57735026919e0;
    vec3 _t0F2B = [_t0F28, _t0F29, _t0F2A];
    real _t0F2C = prim •00CE<$[3]; $[3]; $[]> (_t0F2B, refPos0CDB);
    real _t0F2D = prim -0026<$[]> (_t0F27, _t0F2C);
    real _t0F2E = 0.57735026919e0;
    real _t0F2F = -0.57735026919e0;
    real _t0F30 = 0.57735026919e0;
    vec3 _t0F31 = [_t0F2E, _t0F2F, _t0F30];
    real _t0F32 = prim •00CE<$[3]; $[3]; $[]> (_t0F31, dPos0CDC);
    time0F07 = prim /0055 (_t0F2D, _t0F32);
    face0F08 = 0;
  }
  real _t0F33 = 0.e0;
  real _t0F34 = 0.1e1;
  real _t0F35 = 0.e0;
  real _t0F36 = 0.e0;
  vec3 _t0F37 = [_t0F34, _t0F35, _t0F36];
  real _t0F38 = prim •00CE<$[3]; $[3]; $[]> (_t0F37, refPos0CDB);
  real _t0F39 = prim -0026<$[]> (_t0F33, _t0F38);
  real _t0F3A = 0.1e1;
  real _t0F3B = 0.e0;
  real _t0F3C = 0.e0;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, dPos0CDC);
  real _t0F3F = prim /0055 (_t0F39, _t0F3E);
  real _t0F40 = -0.e0;
  bool _t0F41 = prim >0080 (_t0F3F, _t0F40);
  real _t0F42 = 0.e0;
  real _t0F43 = 0.1e1;
  real _t0F44 = 0.e0;
  real _t0F45 = 0.e0;
  vec3 _t0F46 = [_t0F43, _t0F44, _t0F45];
  real _t0F47 = prim •00CE<$[3]; $[3]; $[]> (_t0F46, refPos0CDB);
  real _t0F48 = prim -0026<$[]> (_t0F42, _t0F47);
  real _t0F49 = 0.1e1;
  real _t0F4A = 0.e0;
  real _t0F4B = 0.e0;
  vec3 _t0F4C = [_t0F49, _t0F4A, _t0F4B];
  real _t0F4D = prim •00CE<$[3]; $[3]; $[]> (_t0F4C, dPos0CDC);
  real _t0F4E = prim /0055 (_t0F48, _t0F4D);
  bool _t0F4F = prim >0080 (time0F07, _t0F4E);
  bool _t0F50 = prim $and01C4 (_t0F41, _t0F4F);
  if _t0F50 {
    real _t0F51 = 0.e0;
    real _t0F52 = 0.1e1;
    real _t0F53 = 0.e0;
    real _t0F54 = 0.e0;
    vec3 _t0F55 = [_t0F52, _t0F53, _t0F54];
    real _t0F56 = prim •00CE<$[3]; $[3]; $[]> (_t0F55, refPos0CDB);
    real _t0F57 = prim -0026<$[]> (_t0F51, _t0F56);
    real _t0F58 = 0.1e1;
    real _t0F59 = 0.e0;
    real _t0F5A = 0.e0;
    vec3 _t0F5B = [_t0F58, _t0F59, _t0F5A];
    real _t0F5C = prim •00CE<$[3]; $[3]; $[]> (_t0F5B, dPos0CDC);
    time0F07 = prim /0055 (_t0F57, _t0F5C);
    face0F08 = 1;
  }
  real _t0F5D = 0.e0;
  real _t0F5E = 0.e0;
  real _t0F5F = 0.1e1;
  real _t0F60 = 0.e0;
  vec3 _t0F61 = [_t0F5E, _t0F5F, _t0F60];
  real _t0F62 = prim •00CE<$[3]; $[3]; $[]> (_t0F61, refPos0CDB);
  real _t0F63 = prim -0026<$[]> (_t0F5D, _t0F62);
  real _t0F64 = 0.e0;
  real _t0F65 = 0.1e1;
  real _t0F66 = 0.e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, dPos0CDC);
  real _t0F69 = prim /0055 (_t0F63, _t0F68);
  real _t0F6A = -0.e0;
  bool _t0F6B = prim >0080 (_t0F69, _t0F6A);
  real _t0F6C = 0.e0;
  real _t0F6D = 0.e0;
  real _t0F6E = 0.1e1;
  real _t0F6F = 0.e0;
  vec3 _t0F70 = [_t0F6D, _t0F6E, _t0F6F];
  real _t0F71 = prim •00CE<$[3]; $[3]; $[]> (_t0F70, refPos0CDB);
  real _t0F72 = prim -0026<$[]> (_t0F6C, _t0F71);
  real _t0F73 = 0.e0;
  real _t0F74 = 0.1e1;
  real _t0F75 = 0.e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, dPos0CDC);
  real _t0F78 = prim /0055 (_t0F72, _t0F77);
  bool _t0F79 = prim >0080 (time0F07, _t0F78);
  bool _t0F7A = prim $and01C4 (_t0F6B, _t0F79);
  if _t0F7A {
    real _t0F7B = 0.e0;
    real _t0F7C = 0.e0;
    real _t0F7D = 0.1e1;
    real _t0F7E = 0.e0;
    vec3 _t0F7F = [_t0F7C, _t0F7D, _t0F7E];
    real _t0F80 = prim •00CE<$[3]; $[3]; $[]> (_t0F7F, refPos0CDB);
    real _t0F81 = prim -0026<$[]> (_t0F7B, _t0F80);
    real _t0F82 = 0.e0;
    real _t0F83 = 0.1e1;
    real _t0F84 = 0.e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, dPos0CDC);
    time0F07 = prim /0055 (_t0F81, _t0F86);
    face0F08 = 2;
  }
  real _t0F87 = 0.e0;
  real _t0F88 = 0.e0;
  real _t0F89 = 0.e0;
  real _t0F8A = 0.1e1;
  vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
  real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, refPos0CDB);
  real _t0F8D = prim -0026<$[]> (_t0F87, _t0F8C);
  real _t0F8E = 0.e0;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.1e1;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, dPos0CDC);
  real _t0F93 = prim /0055 (_t0F8D, _t0F92);
  real _t0F94 = -0.e0;
  bool _t0F95 = prim >0080 (_t0F93, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = 0.e0;
  real _t0F99 = 0.1e1;
  vec3 _t0F9A = [_t0F97, _t0F98, _t0F99];
  real _t0F9B = prim •00CE<$[3]; $[3]; $[]> (_t0F9A, refPos0CDB);
  real _t0F9C = prim -0026<$[]> (_t0F96, _t0F9B);
  real _t0F9D = 0.e0;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.1e1;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, dPos0CDC);
  real _t0FA2 = prim /0055 (_t0F9C, _t0FA1);
  bool _t0FA3 = prim >0080 (time0F07, _t0FA2);
  bool _t0FA4 = prim $and01C4 (_t0F95, _t0FA3);
  if _t0FA4 {
    real _t0FA5 = 0.e0;
    real _t0FA6 = 0.e0;
    real _t0FA7 = 0.e0;
    real _t0FA8 = 0.1e1;
    vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
    real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0CDB);
    real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
    real _t0FAC = 0.e0;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.1e1;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0CDC);
    time0F07 = prim /0055 (_t0FAB, _t0FB0);
    face0F08 = 3;
  }
  int _t0FB1 = -1;
  bool _t0FB2 = prim !=0086 (face0F08, _t0FB1);
  if _t0FB2 {
    real _t0FB3 = (real)face0F08;
    vec2 _t0FB4 = [time0F07, _t0FB3];
    return _t0FB4;
  } else {
    real _t0FB5 = -0.1e1;
    real _t0FB6 = -0.1e1;
    vec2 _t0FB7 = [_t0FB5, _t0FB6];
    return _t0FB7;
  }
}
function Femdata: Mesh#0 domain0FB8 (Femdata: Space arg00FB9)
{
  Femdata: Mesh _t0FBA = extractFem(arg00FB9, Mesh);
  return _t0FBA;
}
function Femdata: Space#0 space0FBB (Femdata: FemFunc arg00FBC)
{
  Femdata: Space _t0FBD = extractFem(arg00FBC, Space);
  return _t0FBD;
}
function Femdata: FuncCell#0 funcCell0FBE (Femdata: FemFunc arg00FBF, Femdata: MeshCell arg10FC0)
{
  int _t0FC1 = extractFemItem(CellIndex(MeshCell), int, arg10FC0);
  Femdata: FuncCell _t0FC2 = loadFem(FuncCell, arg00FBF, _t0FC1);
  return _t0FC2;
}
function real#1 mask0FD2 (vec3 x0FD3)
{
  real _t0FD4 = 0.1e1;
  return _t0FD4;
}
function vec3#1 color0FDB (vec3 x0FDC)
{
  real _t0FDD = prim @00A5<#∞; %3; $[]> (V0FCE, x0FDC);
  vec3 _t0FDE = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t0FDD);
  return _t0FDE;
}
function real#1 alpha0FDF (real v0FE0, real g0FE1)
{
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.1e1;
  real _t0FE4 = 0.13e1;
  real _t0FE5 = 0.1e1;
  real _t0FE6 = prim |()|00B5<$[]> (v0FE0);
  real _t0FE7 = prim *0034 (g0FE1, thick0434);
  real _t0FE8 = prim /0055 (_t0FE6, _t0FE7);
  real _t0FE9 = prim -0026<$[]> (_t0FE5, _t0FE8);
  real _t0FEA = prim *0034 (_t0FE4, _t0FE9);
  real _t0FEB = prim clamp0094<$[]> (_t0FE2, _t0FE3, _t0FEA);
  return _t0FEB;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F = func alpha0FDF (val103A, _t103E);
                  real _t1040 = func mask0FD2 (x1025);
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057 = func color0FDB (x1025);
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F;
                  real _t107B = 0.e0;
                  real _t107C = 0.1e1;
                  real _t107D = 0.13e1;
                  real _t107E = 0.1e1;
                  real _t107F = prim |()|00B5<$[]> (val103A);
                  real _t1080 = prim *0034 (_t103E, thick0434);
                  real _t1081 = prim /0055 (_t107F, _t1080);
                  real _t1082 = prim -0026<$[]> (_t107E, _t1081);
                  real _t1083 = prim *0034 (_t107D, _t1082);
                  real _t1084 = prim clamp0094<$[]> (_t107B, _t107C, _t1083);
                  _t103F = _t1084;
                  real _t1040;
                  real _t107A = 0.1e1;
                  _t1040 = _t107A;
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057;
                    real _t1078 = prim @00A5<#∞; %3; $[]> (V0FCE, x1025);
                    vec3 _t1079 = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t1078);
                    _t1057 = _t1079;
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F;
                  real _t107B = 0.e0;
                  real _t107C = 0.1e1;
                  real _t107D = 0.13e1;
                  real _t107E = 0.1e1;
                  real _t107F = prim |()|00B5<$[]> (val103A);
                  real _t1080 = prim *0034 (_t103E, thick0434);
                  real _t1081 = prim /0055 (_t107F, _t1080);
                  real _t1082 = prim -0026<$[]> (_t107E, _t1081);
                  real _t1083 = prim *0034 (_t107D, _t1082);
                  real _t1084 = prim clamp0094<$[]> (_t107B, _t107C, _t1083);
                  _t103F = _t1084;
                  real _t1040;
                  real _t107A = 0.1e1;
                  _t1040 = _t107A;
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057;
                    real _t1078 = prim @00A5<#∞; %3; $[]> (V0FCE, x1025);
                    vec3 _t1079 = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t1078);
                    _t1057 = _t1079;
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1001, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1002, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F;
                  real _t107B = 0.e0;
                  real _t107C = 0.1e1;
                  real _t107D = 0.13e1;
                  real _t107E = 0.1e1;
                  real _t107F = prim |()|00B5<$[]> (val103A);
                  real _t1080 = prim *0034 (_t103E, thick0434);
                  real _t1081 = prim /0055 (_t107F, _t1080);
                  real _t1082 = prim -0026<$[]> (_t107E, _t1081);
                  real _t1083 = prim *0034 (_t107D, _t1082);
                  real _t1084 = prim clamp0094<$[]> (_t107B, _t107C, _t1083);
                  _t103F = _t1084;
                  real _t1040;
                  real _t107A = 0.1e1;
                  _t1040 = _t107A;
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057;
                    real _t1078 = prim @00A5<#∞; %3; $[]> (V0FCE, x1025);
                    vec3 _t1079 = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t1078);
                    _t1057 = _t1079;
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1001, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1002, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  int ui1086;
  int vi1085;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
    ui1086 = ui1001;
    vi1085 = vi1002;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1086, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1085, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F;
                  real _t107B = 0.e0;
                  real _t107C = 0.1e1;
                  real _t107D = 0.13e1;
                  real _t107E = 0.1e1;
                  real _t107F = prim |()|00B5<$[]> (val103A);
                  real _t1080 = prim *0034 (_t103E, thick0434);
                  real _t1081 = prim /0055 (_t107F, _t1080);
                  real _t1082 = prim -0026<$[]> (_t107E, _t1081);
                  real _t1083 = prim *0034 (_t107D, _t1082);
                  real _t1084 = prim clamp0094<$[]> (_t107B, _t107C, _t1083);
                  _t103F = _t1084;
                  real _t1040;
                  real _t107A = 0.1e1;
                  _t1040 = _t107A;
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057;
                    real _t1078 = prim @00A5<#∞; %3; $[]> (V0FCE, x1025);
                    vec3 _t1079 = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t1078);
                    _t1057 = _t1079;
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1086, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1085, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a0423;
input FemData:Space 0b042F_intermedateGlobal0430;
input FemData:FemFunc 0c0431_intermedateGlobal0432;
input real isoval0433 = <default>;
input real thick0434 = <default>;
input vec3 camEye0435 = <default>;
input vec3 camAt0439 = <default>;
input vec3 camUp043D = <default>;
input real camFOV0441 = <default>;
input int iresU0442 = <default>;
input int iresV0443 = <default>;
input real camNear0444 = <default>;
input real camFar0445 = <default>;
input real refStep0446 = <default>;
input real rayStep0447 = <default>;
input vec3 lightVsp0448 = <default>;
input real phongKa044C = <default>;
input real phongKd044D = <default>;
input bool debug044E = <default>;
input int su044F = <default>;
input int sv0450 = <default>;
constants {
  isoval0433 = 0.2e0;
  thick0434 = 0.7e-1;
  real _t0436 = -0.3e1;
  real _t0437 = -0.3e1;
  real _t0438 = 0.3e1;
  camEye0435 = [_t0436, _t0437, _t0438];
  real _t043A = 0.5e0;
  real _t043B = 0.5e0;
  real _t043C = 0.5e0;
  camAt0439 = [_t043A, _t043B, _t043C];
  real _t043E = 0.e0;
  real _t043F = 0.e0;
  real _t0440 = 0.1e1;
  camUp043D = [_t043E, _t043F, _t0440];
  camFOV0441 = 0.137e2;
  iresU0442 = 500;
  iresV0443 = 500;
  camNear0444 = -0.2e1;
  camFar0445 = 0.5e1;
  refStep0446 = 0.1e1;
  rayStep0447 = 0.1e-1;
  real _t0449 = 0.e0;
  real _t044A = 0.e0;
  real _t044B = 0.1e1;
  lightVsp0448 = [_t0449, _t044A, _t044B];
  phongKa044C = 0.1e0;
  phongKd044D = 0.9e0;
  debug044E = false;
  su044F = 250;
  sv0450 = 250;
}
global Femdata: Space b042F;
global Femdata: FemFunc c0431;
global field(3)[] V0FCE;
global field#4(3)[] F0FD1;
global IMAGE1D<double[3]> I0FD7;
global field#0(1)[3] cmap0FDA;
global real camDist0FED;
global vec3 camN0FEF;
global vec3 camU0FF1;
global vec3 camV0FF2;
global real camVmax0FF8;
global real camUmax0FFC;
global vec3 light1000;
function Femdata: MeshPos#3 findPos045B (Femdata: Mesh mesh045C, vec3 pos045D)
{
  real _t045E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t045F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0460 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0461 = [_t045E, _t045F, _t0460];
  newtonInt0462 = 0;
  cellInt0463 = extractFemItem(StartCell(Mesh), int, mesh045C);
  int _t0464 = extractFemItem(NumCell(Mesh), int, mesh045C);
  int _t0465 = 1;
  numCell0466 = prim -0024 (_t0464, _t0465);
  int _t0467 = 0;
  int _t0468 = 16;
  int _t0469 = prim *0033 (_t0468, numCell0466);
  int[] _t046A = prim $range01C3 (_t0467, _t0469);
  foreach itter04A3 in _t046A {
    field(3)[3] _t046B = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3,3] _t046C = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t046B);
    field(3)[3,3] _t046D = prim inv015E<#∞; %3> (_t046C);
    real _t046E = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t046F = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0470 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0471 = [_t046E, _t046F, _t0470];
    A0472 = prim @00A5<#∞; %3; $[3,3]> (_t046D, _t0471);
    field(3)[3] _t0473 = femField(mesh045C,cellInt0463,field(3)[3],Transform,);
    field(3)[3] _t0474 = prim -002E<#∞; %3; $[3]> (_t0473, pos045D);
    field(3)[3] _t0475 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0472, _t0474);
    delta0476 = prim @00A5<#∞; %3; $[3]> (_t0475, xn0461);
    xn0461 = prim -0026<$[3]> (xn0461, delta0476);
    real _t0477 = 0.1e-7;
    real _t0478 = prim |()|00B5<$[3]> (delta0476);
    bool _t0479 = prim >=007E (_t0477, _t0478);
    if _t0479 {
      real _t047A = 0.1e1;
      real _t047B = 0.1e1;
      real _t047C = 0.1e1;
      real _t047D = 0.1e1;
      vec3 _t047E = [_t047B, _t047C, _t047D];
      real _t047F = prim •00CE<$[3]; $[3]; $[]> (_t047E, xn0461);
      bool _t0480 = prim >0080 (_t047A, _t047F);
      real _t0481 = 0.1e-8;
      real _t0482 = 0.1e-8;
      real _t0483 = 0.1e-8;
      vec3 _t0484 = [_t0481, _t0482, _t0483];
      vec3 _t0485 = prim +0017<$[3]> (_t0484, xn0461);
      real _t0486 = _t0485[0];
      real _t0487 = -0.e0;
      bool _t0488 = prim >0080 (_t0486, _t0487);
      real _t0489 = 0.1e-8;
      real _t048A = 0.1e-8;
      real _t048B = 0.1e-8;
      vec3 _t048C = [_t0489, _t048A, _t048B];
      vec3 _t048D = prim +0017<$[3]> (_t048C, xn0461);
      real _t048E = _t048D[1];
      real _t048F = -0.e0;
      bool _t0490 = prim >0080 (_t048E, _t048F);
      real _t0491 = 0.1e-8;
      real _t0492 = 0.1e-8;
      real _t0493 = 0.1e-8;
      vec3 _t0494 = [_t0491, _t0492, _t0493];
      vec3 _t0495 = prim +0017<$[3]> (_t0494, xn0461);
      real _t0496 = _t0495[2];
      real _t0497 = -0.e0;
      bool _t0498 = prim >0080 (_t0496, _t0497);
      bool _t0499 = prim $and01C4 (_t0490, _t0498);
      bool _t049A = prim $and01C4 (_t0488, _t0499);
      bool _t049B = prim $and01C4 (_t0480, _t049A);
      if _t049B {
        Femdata: MeshPos _t049C = extractFemItemN((mesh045C, cellInt0463, xn0461, pos045D),AllBuild(MeshPos),);
        return _t049C;
      }
    }
    int _t049D = 1;
    newtonInt0462 = prim +0015 (newtonInt0462, _t049D);
    int _t049E = 16;
    bool _t049F = prim >=007D (newtonInt0462, _t049E);
    if _t049F {
      newtonInt0462 = 0;
      bool _t04A0 = prim >=007D (cellInt0463, numCell0466);
      if _t04A0 {
        Femdata: MeshPos _t04A1 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
        return _t04A1;
      } else {
        int _t04A2 = 1;
        cellInt0463 = prim +0015 (cellInt0463, _t04A2);
      }
    }
  }
  Femdata: MeshPos _t04A4 = extractFemItemN((mesh045C),InvalidBuild(MeshPos),);
  return _t04A4;
}
function int[2]#5 nextCell4051F (int faceIdx0979, int cell097A, Femdata: Mesh mesh097B)
{
  int _t097C = 8;
  int _t097D = prim *0033 (cell097A, _t097C);
  int _t097E = 2;
  int _t097F = prim *0033 (faceIdx0979, _t097E);
  int _t0980 = prim +0015 (_t097D, _t097F);
  int[2] _t0981 = extractFemItemN((mesh097B, _t0980),CellFaceCell(Mesh),);
  return _t0981;
}
globalInit {
  int _t0427 = 0;
  int _t0425 = 1;
  int _t0429 = extractFemItem(NumCell(Mesh), int, a0423);
  int _t0428 = prim -0024 (_t0429, _t0425);
  int[] _t042C = prim $range01C3 (_t0427, _t0428);
  Femdata: MeshCell[] _t042D = {};
  foreach _t042B in _t042C {
    Femdata: MeshCell _t042E = loadFem(MeshCell, a0423, _t042B);
    _t042D = prim @0010<Femdata: MeshCell> (_t042D, _t042E);
  }
  b042F = loadFem(Space, 0b042F_intermedateGlobal0430, a0423);
  c0431 = loadFem(FemFunc, 0c0431_intermedateGlobal0432, b042F);
  Femdata: Space _t0FC3 = extractFem(c0431, Space);
  Femdata: Space _t0FC4 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC5 = extractFem(_t0FC4, Mesh);
  field(3)[] _t0FC6 = femField(c0431,_t0FC5,field(3)[],refField,findPos045B );
  Femdata: Space _t0FC7 = extractFem(c0431, Space);
  Femdata: Mesh _t0FC8 = extractFem(_t0FC7, Mesh);
  Femdata: Space _t0FC9 = extractFem(c0431, Space);
  Femdata: Mesh _t0FCA = extractFem(_t0FC9, Mesh);
  Femdata: Space _t0FCB = extractFem(c0431, Space);
  Femdata: Mesh _t0FCC = extractFem(_t0FCB, Mesh);
  field(3)[3] _t0FCD = femField(_t0FC8,_t0FCC,field(3)[3],InvTransform,findPos045B );
  V0FCE = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t0FC6, _t0FCD);
  field(3)[] _t0FCF = prim -002E<#∞; %3; $[]> (V0FCE, isoval0433);
  field#4(3)[] _t0FD0 = (field#4(3)[])_t0FCF;
  F0FD1 = _t0FD0;
  I0FD7 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t0FD8 = tent;
  IMAGE1D<double[3]> img0FD9 = clamp(I0FD7);
  cmap0FDA = prim ⊛0074<#0; %1; $[3]> (_t0FD8, img0FD9);
  vec3 _t0FEC = prim -0026<$[3]> (camAt0439, camEye0435);
  camDist0FED = prim |()|00B5<$[3]> (_t0FEC);
  vec3 _t0FEE = prim -0026<$[3]> (camAt0439, camEye0435);
  camN0FEF = prim normalize0137<$[3]> (_t0FEE);
  vec3 _t0FF0 = prim ×00BE (camN0FEF, camUp043D);
  camU0FF1 = prim normalize0137<$[3]> (_t0FF0);
  camV0FF2 = prim ×00BE (camU0FF1, camN0FEF);
  real _t0FF3 = 0.314159265358979323846264338327950288e1;
  real _t0FF4 = prim *0034 (camFOV0441, _t0FF3);
  real _t0FF5 = 0.36e3;
  real _t0FF6 = prim /0055 (_t0FF4, _t0FF5);
  real _t0FF7 = prim tan0179 (_t0FF6);
  camVmax0FF8 = prim *0034 (_t0FF7, camDist0FED);
  real _t0FF9 = (real)iresU0442;
  real _t0FFA = prim *0034 (camVmax0FF8, _t0FF9);
  real _t0FFB = (real)iresV0443;
  camUmax0FFC = prim /0055 (_t0FFA, _t0FFB);
  tensor[3,3] _t0FFD = [camU0FF1, camV0FF2, camN0FEF];
  tensor[3,3] _t0FFE = prim transpose0145<%3; %3> (_t0FFD);
  vec3 _t0FFF = prim normalize0137<$[3]> (lightVsp0448);
  light1000 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0FFE, _t0FFF);
}
strand raycast (int ui1001, int vi1002) {
  real rayU1003;
  real rayV100A;
  real rayN1011;
  vec3 rayVec1012;
  real transp1017;
  vec3 rgb1018;
  output vec4 rgba101C;
  output real gray1021;
  int ui1086;
  int vi1085;
  {
    real _t1004 = prim unary -008B<$[]> (camUmax0FFC);
    real _t1005 = -0.5e0;
    real _t1006 = (real)ui1001;
    real _t1007 = (real)iresU0442;
    real _t1008 = 0.5e0;
    real _t1009 = prim -0026<$[]> (_t1007, _t1008);
    rayU1003 = prim lerp0098<$[]> (_t1004, camUmax0FFC, _t1005, _t1006, _t1009);
    real _t100B = prim unary -008B<$[]> (camVmax0FF8);
    real _t100C = -0.5e0;
    real _t100D = (real)vi1002;
    real _t100E = (real)iresV0443;
    real _t100F = 0.5e0;
    real _t1010 = prim -0026<$[]> (_t100E, _t100F);
    rayV100A = prim lerp0098<$[]> (camVmax0FF8, _t100B, _t100C, _t100D, _t1010);
    rayN1011 = camNear0444;
    vec3 _t1013 = prim *0036<$[3]> (rayU1003, camU0FF1);
    vec3 _t1014 = prim *0036<$[3]> (rayV100A, camV0FF2);
    vec3 _t1015 = prim +0017<$[3]> (_t1013, _t1014);
    vec3 _t1016 = prim /0057<$[3]> (_t1015, camDist0FED);
    rayVec1012 = prim +0017<$[3]> (camN0FEF, _t1016);
    transp1017 = 0.1e1;
    real _t1019 = 0.e0;
    real _t101A = 0.e0;
    real _t101B = 0.e0;
    rgb1018 = [_t1019, _t101A, _t101B];
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = 0.e0;
    real _t1020 = 0.e0;
    rgba101C = [_t101D, _t101E, _t101F, _t1020];
    gray1021 = 0.e0;
    ui1086 = ui1001;
    vi1085 = vi1002;
  }
  update
  {
    if debug044E {
      bool _t1022;
      bool _t1023 = prim !=0086 (ui1086, su044F);
      if _t1023 {
        _t1022 = true;
      } else {
        _t1022 = prim !=0086 (vi1085, sv0450);
      }
      if _t1022 {
        stabilize;
      }
    }
    vec3 _t1024 = prim *0036<$[3]> (rayN1011, rayVec1012);
    vec3 x1025 = prim +0017<$[3]> (camEye0435, _t1024);
    real _t1026 = 0.e0;
    real _t1027 = x1025[0];
    bool _t1028 = prim <=007C (_t1026, _t1027);
    if _t1028 {
      real _t1029 = x1025[0];
      real _t102A = 0.1e1;
      bool _t102B = prim <=007C (_t1029, _t102A);
      if _t102B {
        real _t102C = 0.e0;
        real _t102D = x1025[1];
        bool _t102E = prim <=007C (_t102C, _t102D);
        if _t102E {
          real _t102F = x1025[1];
          real _t1030 = 0.1e1;
          bool _t1031 = prim <=007C (_t102F, _t1030);
          if _t1031 {
            real _t1032 = 0.e0;
            real _t1033 = x1025[2];
            bool _t1034 = prim <=007C (_t1032, _t1033);
            if _t1034 {
              real _t1035 = x1025[2];
              real _t1036 = 0.1e1;
              bool _t1037 = prim <=007C (_t1035, _t1036);
              if _t1037 {
                Femdata: MeshPos p1038 = func findPos045B (a0423, x1025);
                bool _t1039 = extractFemItem(Valid(MeshPos), bool, p1038);
                if _t1039 {
                  real val103A = prim @00A5<#4; %3; $[]> (F0FD1, x1025);
                  field#3(3)[3] _t103B = prim ∇00A8<#4; %3> (F0FD1);
                  vec3 _t103C = prim @00A5<#3; %3; $[3]> (_t103B, x1025);
                  vec3 grad103D = prim unary -008B<$[3]> (_t103C);
                  real _t103E = prim |()|00B5<$[3]> (grad103D);
                  real _t103F;
                  real _t107B = 0.e0;
                  real _t107C = 0.1e1;
                  real _t107D = 0.13e1;
                  real _t107E = 0.1e1;
                  real _t107F = prim |()|00B5<$[]> (val103A);
                  real _t1080 = prim *0034 (_t103E, thick0434);
                  real _t1081 = prim /0055 (_t107F, _t1080);
                  real _t1082 = prim -0026<$[]> (_t107E, _t1081);
                  real _t1083 = prim *0034 (_t107D, _t1082);
                  real _t1084 = prim clamp0094<$[]> (_t107B, _t107C, _t1083);
                  _t103F = _t1084;
                  real _t1040;
                  real _t107A = 0.1e1;
                  _t1040 = _t107A;
                  real a1041 = prim *0034 (_t103F, _t1040);
                  real _t1042 = 0.e0;
                  bool _t1043 = prim >0080 (a1041, _t1042);
                  if _t1043 {
                    real _t1044 = 0.1e1;
                    real _t1045 = 0.1e1;
                    real _t1046 = prim -0026<$[]> (_t1045, a1041);
                    real _t1047 = prim |()|00B5<$[3]> (rayVec1012);
                    real _t1048 = prim *0034 (rayStep0447, _t1047);
                    real _t1049 = prim /0055 (_t1048, refStep0446);
                    real _t104A = prim pow018E (_t1046, _t1049);
                    a1041 = prim -0026<$[]> (_t1044, _t104A);
                    real _t104B = 0.11e1;
                    real _t104C = 0.7e0;
                    real depth104D = prim lerp0098<$[]> (_t104B, _t104C, camNear0444, rayN1011, camFar0445);
                    real _t104E = 0.e0;
                    vec3 _t104F = prim normalize0137<$[3]> (grad103D);
                    real _t1050 = prim •00CE<$[3]; $[3]; $[]> (_t104F, light1000);
                    real shade1051 = prim max0125 (_t104E, _t1050);
                    real _t1052 = prim *0034 (transp1017, a1041);
                    real _t1053 = prim *0034 (_t1052, depth104D);
                    real _t1054 = prim *0034 (phongKd044D, shade1051);
                    real _t1055 = prim +0017<$[]> (phongKa044C, _t1054);
                    real _t1056 = prim *0034 (_t1053, _t1055);
                    vec3 _t1057;
                    real _t1078 = prim @00A5<#∞; %3; $[]> (V0FCE, x1025);
                    vec3 _t1079 = prim @00A5<#0; %1; $[3]> (cmap0FDA, _t1078);
                    _t1057 = _t1079;
                    vec3 _t1058 = prim *0036<$[3]> (_t1056, _t1057);
                    rgb1018 = prim +0017<$[3]> (rgb1018, _t1058);
                    real _t1059 = 0.1e1;
                    real _t105A = prim -0026<$[]> (_t1059, a1041);
                    transp1017 = prim *0034 (transp1017, _t105A);
                  }
                }
              }
            }
          }
        }
      }
    }
    real _t105B = 0.1e-1;
    bool _t105C = prim <007A (transp1017, _t105B);
    if _t105C {
      transp1017 = 0.e0;
      stabilize;
    }
    bool _t105D = prim >0080 (rayN1011, camFar0445);
    if _t105D {
      stabilize;
    }
    rayN1011 = prim +0017<$[]> (rayN1011, rayStep0447);
  }
  stabilize
  {
    real _t105E = 0.1e1;
    real a105F = prim -0026<$[]> (_t105E, transp1017);
    real _t1060 = 0.e0;
    bool _t1061 = prim >0080 (a105F, _t1060);
    if _t1061 {
      real _t1062 = rgb1018[0];
      real _t1063 = prim /0055 (_t1062, a105F);
      real _t1064 = rgb1018[1];
      real _t1065 = prim /0055 (_t1064, a105F);
      real _t1066 = rgb1018[2];
      real _t1067 = prim /0055 (_t1066, a105F);
      rgba101C = [_t1063, _t1065, _t1067, a105F];
    }
    bool _t1068 = prim ==0082 (ui1086, su044F);
    if _t1068 {
      bool _t1069 = prim ==0082 (vi1085, sv0450);
      if _t1069 {
        if debug044E {
          print (a105F, rgba101C);
        }
      }
    }
  }
}
grid(2) {
  int _t106A = 0;
  int _t106B = 1;
  int _t106C = prim -0024 (iresV0443, _t106B);
  int[] _t106D = prim $range01C3 (_t106A, _t106C);
  foreach vi1073 in _t106D {
    int _t106E = 0;
    int _t106F = 1;
    int _t1070 = prim -0024 (iresU0442, _t106F);
    int[] _t1071 = prim $range01C3 (_t106E, _t1070);
    foreach ui1072 in _t1071 {
      new raycast (ui1072, vi1073);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1087 (a) = <no-default>
  input 0b042F_intermedateGlobal1088 (b) = <no-default>
  input 0c0431_intermedateGlobal1089 (c) = <no-default>
  input isoval108A (isoval) = <default>
  input thick108B (thick) = <default>
  input camEye108C (camEye) = <default>
  input camAt108D (camAt) = <default>
  input camUp108E (camUp) = <default>
  input camFOV108F (camFOV) = <default>
  input iresU1090 (iresU) = <default>
  input iresV1091 (iresV) = <default>
  input camNear1092 (camNear) = <default>
  input camFar1093 (camFar) = <default>
  input refStep1094 (refStep) = <default>
  input rayStep1095 (rayStep) = <default>
  input lightVsp1096 (lightVsp) = <default>
  input phongKa1097 (phongKa) = <default>
  input phongKd1098 (phongKd) = <default>
  input debug1099 (debug) = <default>
  input su109A (su) = <default>
  input sv109B (sv) = <default>
  global femData:Space b10EC
  global femData:FemFunc c10ED
  global field V10EE
  global field F10EF
  global image(IMAGE1D<double[3]>) I10F0
  global field cmap10F1
  global real camDist10F2
  global tensor[3] camN10F3
  global tensor[3] camU10F4
  global tensor[3] camV10F5
  global real camVmax10F6
  global real camUmax10F7
  global tensor[3] light10F8
## functions
  function femData:MeshPos findPos11A4 (femData:Mesh mesh10F9#9, tensor[3] pos10FA#2) {
    ENTRY11A3:  preds = []
      real _t10FB#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t10FD#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t10FF#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1101#1 = <tensor[3]>[_t10FB,_t10FD,_t10FF];
      int newtonInt1103#1 = 0;
      int cellInt1105#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh10F9);
      int _t1107#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh10F9);
      int _t1109#1 = 1;
      int numCell110B#2 = ISub(_t1107,_t1109);
      int _t110D#1 = 0;
      int _t110F#1 = 16;
      int _t1111#1 = IMul(_t110F,numCell110B);
      int[] _t1113#1 = Range(_t110D,_t1111);
    FOREACH1119:  preds = [ASSIGN1114,NEXT119F]
      foreach (itter1115 in _t1113) on exit goto ASSIGN11A1
        int cellInt1118#6 = phi(cellInt1105,cellInt119D)
        int newtonInt1117#1 = phi(newtonInt1103,newtonInt118F)
        tensor[3] xn1116#2 = phi(xn1101,xn1132)
      field _t111A#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1118,mesh10F9,mesh10F9);
      field _t111C#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t111A);
      field _t111E#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t111C);
      real _t1120#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1122#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1124#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t1126#1 = <tensor[3]>[_t1120,_t1122,_t1124];
      tensor[3,3] A1128#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t111E,_t1126);
      field _t112A#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1118,mesh10F9,mesh10F9);
      field _t112C#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos10FA,_t112A);
      field _t112E#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1128,_t112C);
      tensor[3] delta1130#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t112E,xn1116);
      tensor[3] xn1132#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1116,delta1130);
      real _t1134#1 = 0.1e-7;
      real _t1136#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (delta1130);
      bool _t1138#1 = GTE<real>(_t1134,_t1136);
      if _t1138 then goto ASSIGN113C else goto JOIN113A
    ASSIGN113C:  preds = [COND1184]
      real _t113B#1 = 0.1e1;
      real _t113D#1 = 0.1e1;
      real _t113F#1 = 0.1e1;
      real _t1141#1 = 0.1e1;
      tensor[3] _t1143#1 = <tensor[3]>[_t113D,_t113F,_t1141];
      real _t1145#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1143,xn1132);
      bool _t1147#1 = GT<real>(_t113B,_t1145);
      real _t1149#1 = 0.1e-8;
      real _t114B#1 = 0.1e-8;
      real _t114D#1 = 0.1e-8;
      tensor[3] _t114F#1 = <tensor[3]>[_t1149,_t114B,_t114D];
      tensor[3] _t1151#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t114F,xn1132);
      real _t1153#1 = TensorIndex<tensor[3],[0]>(_t1151);
      real _t1155#1 = -0.e0;
      bool _t1157#1 = GT<real>(_t1153,_t1155);
      real _t1159#1 = 0.1e-8;
      real _t115B#1 = 0.1e-8;
      real _t115D#1 = 0.1e-8;
      tensor[3] _t115F#1 = <tensor[3]>[_t1159,_t115B,_t115D];
      tensor[3] _t1161#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t115F,xn1132);
      real _t1163#1 = TensorIndex<tensor[3],[1]>(_t1161);
      real _t1165#1 = -0.e0;
      bool _t1167#1 = GT<real>(_t1163,_t1165);
      real _t1169#1 = 0.1e-8;
      real _t116B#1 = 0.1e-8;
      real _t116D#1 = 0.1e-8;
      tensor[3] _t116F#1 = <tensor[3]>[_t1169,_t116B,_t116D];
      tensor[3] _t1171#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t116F,xn1132);
      real _t1173#1 = TensorIndex<tensor[3],[2]>(_t1171);
      real _t1175#1 = -0.e0;
      bool _t1177#1 = GT<real>(_t1173,_t1175);
      bool _t1179#1 = BAnd(_t1167,_t1177);
      bool _t117B#1 = BAnd(_t1157,_t1179);
      bool _t117D#1 = BAnd(_t1147,_t117B);
      if _t117D then goto ASSIGN1181 else goto JOIN117F
    ASSIGN1181:  preds = [COND1183]
      femData:MeshPos _t1180#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh10F9,cellInt1118,xn1132,pos10FA);
      return _t1180
      goto JOIN117F
    JOIN117F:  preds = [*RETURN(_t1180)1182,COND1183]
      goto JOIN113A
    JOIN113A:  preds = [JOIN117F,COND1184]
      int _t1185#1 = 1;
      int newtonInt1187#2 = IAdd(newtonInt1117,_t1185);
      int _t1189#1 = 16;
      bool _t118B#1 = GTE<int>(newtonInt1187,_t1189);
      if _t118B then goto ASSIGN1190 else goto JOIN118D
    ASSIGN1190:  preds = [COND119E]
      int newtonInt118E#1 = 0;
      bool _t1191#1 = GTE<int>(cellInt1118,numCell110B);
      if _t1191 then goto ASSIGN1195 else goto ASSIGN1198
    ASSIGN1195:  preds = [COND119C]
      femData:MeshPos _t1194#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t1194
      goto JOIN1193
    JOIN1193:  preds = [*RETURN(_t1194)1196,ASSIGN119B]
      int cellInt119A#1 = phi(cellInt1199)
      goto JOIN118D
    JOIN118D:  preds = [JOIN1193,COND119E]
      int cellInt119D#1 = phi(cellInt119A,cellInt1118)
      int newtonInt118F#1 = phi(newtonInt118E,newtonInt1187)
      goto FOREACH1119
    ASSIGN1198:  preds = [COND119C]
      int _t1197#1 = 1;
      int cellInt1199#1 = IAdd(cellInt1118,_t1197);
      goto JOIN1193
    ASSIGN11A1:  preds = [FOREACH1119]
      femData:MeshPos _t11A0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t11A0
}
  function int[2] nextCell411B6 (int faceIdx11A5#1, int cell11A6#1, femData:Mesh mesh11A7#1) {
    ENTRY11B5:  preds = []
      int _t11A8#1 = 8;
      int _t11AA#1 = IMul(cell11A6,_t11A8);
      int _t11AC#1 = 2;
      int _t11AE#1 = IMul(faceIdx11A5,_t11AC);
      int _t11B0#1 = IAdd(_t11AA,_t11AE);
      int[2] _t11B2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11A7,_t11B0);
      return _t11B2
}
## input initialization
  ENTRY10EA:  preds = []
    real isoval109C#1 = 0.2e0;
    globals.isoval108A = isoval109C;
    real thick109F#1 = 0.7e-1;
    globals.thick108B = thick109F;
    real _t10A2#1 = -0.3e1;
    real _t10A4#1 = -0.3e1;
    real _t10A6#1 = 0.3e1;
    tensor[3] camEye10A8#1 = <tensor[3]>[_t10A2,_t10A4,_t10A6];
    globals.camEye108C = camEye10A8;
    real _t10AB#1 = 0.5e0;
    real _t10AD#1 = 0.5e0;
    real _t10AF#1 = 0.5e0;
    tensor[3] camAt10B1#1 = <tensor[3]>[_t10AB,_t10AD,_t10AF];
    globals.camAt108D = camAt10B1;
    real _t10B4#1 = 0.e0;
    real _t10B6#1 = 0.e0;
    real _t10B8#1 = 0.1e1;
    tensor[3] camUp10BA#1 = <tensor[3]>[_t10B4,_t10B6,_t10B8];
    globals.camUp108E = camUp10BA;
    real camFOV10BD#1 = 0.137e2;
    globals.camFOV108F = camFOV10BD;
    int iresU10C0#1 = 500;
    globals.iresU1090 = iresU10C0;
    int iresV10C3#1 = 500;
    globals.iresV1091 = iresV10C3;
    real camNear10C6#1 = -0.2e1;
    globals.camNear1092 = camNear10C6;
    real camFar10C9#1 = 0.5e1;
    globals.camFar1093 = camFar10C9;
    real refStep10CC#1 = 0.1e1;
    globals.refStep1094 = refStep10CC;
    real rayStep10CF#1 = 0.1e-1;
    globals.rayStep1095 = rayStep10CF;
    real _t10D2#1 = 0.e0;
    real _t10D4#1 = 0.e0;
    real _t10D6#1 = 0.1e1;
    tensor[3] lightVsp10D8#1 = <tensor[3]>[_t10D2,_t10D4,_t10D6];
    globals.lightVsp1096 = lightVsp10D8;
    real phongKa10DB#1 = 0.1e0;
    globals.phongKa1097 = phongKa10DB;
    real phongKd10DE#1 = 0.9e0;
    globals.phongKd1098 = phongKd10DE;
    bool debug10E1#1 = false;
    globals.debug1099 = debug10E1;
    int su10E4#1 = 250;
    globals.su109A = su10E4;
    int sv10E7#1 = 250;
    globals.sv109B = sv10E7;
    return
## global-variable initialization
  ENTRY1242:  preds = []
    femData:Mesh a11C1#3 = globals.a1087;
    femData:Space 0b042F_intermedateGlobal11C0#1 = globals.0b042F_intermedateGlobal1088;
    femData:FemFunc 0c0431_intermedateGlobal11BF#1 = globals.0c0431_intermedateGlobal1089;
    real isoval11BE#1 = globals.isoval108A;
    tensor[3] camEye11BD#2 = globals.camEye108C;
    tensor[3] camAt11BC#2 = globals.camAt108D;
    tensor[3] camUp11BB#1 = globals.camUp108E;
    real camFOV11BA#1 = globals.camFOV108F;
    int iresU11B9#1 = globals.iresU1090;
    int iresV11B8#1 = globals.iresV1091;
    tensor[3] lightVsp11B7#2 = globals.lightVsp1096;
    int _t11CD#1 = 0;
    int _t11CF#1 = 1;
    int _t11D1#1 = ExtractFemItem<int,NumCell(Mesh)>(a11C1);
    int _t11D3#1 = ISub(_t11D1,_t11CF);
    int[] _t11D5#1 = Range(_t11CD,_t11D3);
    femData:MeshCell[] _t11D7#1 = <femData:MeshCell[]>{};
  FOREACH11DB:  preds = [ASSIGN11D8,NEXT11E0]
    foreach (_t11D9 in _t11D5) on exit goto ASSIGN11E2
      femData:MeshCell[] _t11DA#1 = phi(_t11D7,_t11DE)
    femData:MeshCell _t11DC#1 = LoadFem<femData:MeshCell>(a11C1,_t11D9);
    femData:MeshCell[] _t11DE#1 = Append<femData:MeshCell>(_t11DA,_t11DC);
    goto FOREACH11DB
  ASSIGN11E2:  preds = [FOREACH11DB]
    femData:Space b11E1#2 = LoadFem<femData:Space>(0b042F_intermedateGlobal11C0,a11C1);
    globals.b10EC = b11E1;
    femData:FemFunc c11E4#7 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal11BF,b11E1);
    globals.c10ED = c11E4;
    femData:Space _t11E7#1 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Space _t11E9#1 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11EB#1 = ExtractFem<femData:Mesh,femData:Space>(_t11E9);
    field _t11ED#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(11A4, 0, 1, 2)⊛Basis()> (_t11EB,_t11E7,c11E4);
    femData:Space _t11EF#1 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11F1#2 = ExtractFem<femData:Mesh,femData:Space>(_t11EF);
    femData:Space _t11F3#1 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11F5#0 = ExtractFem<femData:Mesh,femData:Space>(_t11F3);
    femData:Space _t11F7#1 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11F9#1 = ExtractFem<femData:Mesh,femData:Space>(_t11F7);
    field _t11FB#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(11A4, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t11F9,_t11F1,_t11F1);
    field V11FD#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t11ED,_t11FB);
    globals.V10EE = V11FD;
    field _t1200#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval11BE,V11FD);
    field _t1202#1 = _t1200;
    field F1204#1 = _t1202;
    globals.F10EF = F1204;
    image(IMAGE1D<double[3]>) I1207#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I10F0 = I1207;
    kernel _t120A#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img120C#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1207);
    field cmap120E#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img120C,_t120A);
    globals.cmap10F1 = cmap120E;
    tensor[3] _t1211#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11BC,camEye11BD);
    real camDist1213#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1211);
    globals.camDist10F2 = camDist1213;
    tensor[3] _t1216#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11BC,camEye11BD);
    tensor[3] camN1218#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1216,_t1216);
    globals.camN10F3 = camN1218;
    tensor[3] _t121B#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN1218,camUp11BB);
    tensor[3] camU121D#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t121B,_t121B);
    globals.camU10F4 = camU121D;
    tensor[3] camV1220#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU121D,camN1218);
    globals.camV10F5 = camV1220;
    real _t1223#1 = 0.314159265358979323846264338327950288e1;
    real _t1225#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV11BA,_t1223);
    real _t1227#1 = 0.36e3;
    real _t1229#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1225,_t1227);
    real _t122B#1 = λ(T0[])<Tangent(T0)> (_t1229);
    real camVmax122D#2 = λ(T0[],T1[])<(T0 * T1)> (_t122B,camDist1213);
    globals.camVmax10F6 = camVmax122D;
    real _t1230#1 = IntToReal(iresU11B9);
    real _t1232#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax122D,_t1230);
    real _t1234#1 = IntToReal(iresV11B8);
    real camUmax1236#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1232,_t1234);
    globals.camUmax10F7 = camUmax1236;
    tensor[3,3] _t1239#1 = <tensor[3,3]>[camU121D,camV1220,camN1218];
    tensor[3,3] _t123B#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1239);
    tensor[3] _t123D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp11B7,lightVsp11B7);
    tensor[3] light123F#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t123B,_t123D);
    globals.light10F8 = light123F;
    return
## strand
  strand raycast (int ui1261#2, int vi1262#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12CB:  preds = []
        int iresU1275#1 = globals.iresU1090;
        int iresV1274#1 = globals.iresV1091;
        real camNear1273#1 = globals.camNear1092;
        real camDist1272#1 = globals.camDist10F2;
        tensor[3] camN1271#1 = globals.camN10F3;
        tensor[3] camU1270#1 = globals.camU10F4;
        tensor[3] camV126F#1 = globals.camV10F5;
        real camVmax126E#2 = globals.camVmax10F6;
        real camUmax126D#2 = globals.camUmax10F7;
        real _t1289#1 = λ(T0[])<Neg(T0)> (camUmax126D);
        real _t128B#1 = -0.5e0;
        real _t128D#1 = IntToReal(ui1261);
        real _t128F#1 = IntToReal(iresU1275);
        real _t1291#1 = 0.5e0;
        real _t1293#1 = λ(T0[],T1[])<(T0) - (T1)> (_t128F,_t1291);
        real rayU1295#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1289,camUmax126D,_t128B,_t128D,_t1293);
        real _t1297#1 = λ(T0[])<Neg(T0)> (camVmax126E);
        real _t1299#1 = -0.5e0;
        real _t129B#1 = IntToReal(vi1262);
        real _t129D#1 = IntToReal(iresV1274);
        real _t129F#1 = 0.5e0;
        real _t12A1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t129D,_t129F);
        real rayV12A3#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax126E,_t1297,_t1299,_t129B,_t12A1);
        real rayN12A5#1 = camNear1273;
        tensor[3] _t12A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU1295,camU1270);
        tensor[3] _t12A9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV12A3,camV126F);
        tensor[3] _t12AB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t12A7,_t12A9);
        tensor[3] _t12AD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t12AB,camDist1272);
        tensor[3] rayVec12AF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1271,_t12AD);
        real transp12B1#1 = 0.1e1;
        real _t12B3#1 = 0.e0;
        real _t12B5#1 = 0.e0;
        real _t12B7#1 = 0.e0;
        tensor[3] rgb12B9#1 = <tensor[3]>[_t12B3,_t12B5,_t12B7];
        real _t12BB#1 = 0.e0;
        real _t12BD#1 = 0.e0;
        real _t12BF#1 = 0.e0;
        real _t12C1#1 = 0.e0;
        tensor[4] rgba12C3#1 = <tensor[4]>[_t12BB,_t12BD,_t12BF,_t12C1];
        real gray12C5#1 = 0.e0;
        int ui12C7#1 = ui1261;
        int vi12C9#1 = vi1262;
        self.rayU = rayU1295;
        self.rayV = rayV12A3;
        self.rayN = rayN12A5;
        self.rayVec = rayVec12AF;
        self.transp = transp12B1;
        self.rgb = rgb12B9;
        self.rgba = rgba12C3;
        self.gray = gray12C5;
        self.ui = ui12C7;
        self.vi = vi12C9;
        return
    end state init
    method update
        ENTRY13E9:  preds = []
          femData:Mesh a12E6#1 = globals.a1087;
          real thick12E5#1 = globals.thick108B;
          tensor[3] camEye12E4#1 = globals.camEye108C;
          real camNear12E3#1 = globals.camNear1092;
          real camFar12E2#2 = globals.camFar1093;
          real refStep12E1#1 = globals.refStep1094;
          real rayStep12E0#2 = globals.rayStep1095;
          real phongKa12DF#1 = globals.phongKa1097;
          real phongKd12DE#1 = globals.phongKd1098;
          bool debug12DD#1 = globals.debug1099;
          int su12DC#1 = globals.su109A;
          int sv12DB#1 = globals.sv109B;
          field V12DA#1 = globals.V10EE;
          field F12D9#2 = globals.F10EF;
          field cmap12D8#1 = globals.cmap10F1;
          tensor[3] light12D7#1 = globals.light10F8;
          real rayU12F7#0 = self.rayU;
          real rayV12F8#0 = self.rayV;
          real rayN12F9#7 = self.rayN;
          tensor[3] rayVec12FA#2 = self.rayVec;
          real transp12FB#11 = self.transp;
          tensor[3] rgb12FC#10 = self.rgb;
          tensor[4] rgba12FD#4 = self.rgba;
          real gray12FE#0 = self.gray;
          int ui12FF#1 = self.ui;
          int vi1300#1 = self.vi;
          if debug12DD then goto ASSIGN130E else goto JOIN130B
        ASSIGN130E:  preds = [COND131D]
          bool _t130D#1 = NEQ<int>(ui12FF,su12DC);
          if _t130D then goto ASSIGN1312 else goto ASSIGN1314
        ASSIGN1312:  preds = [COND1315]
          bool _t1310#1 = true;
          goto JOIN130F
        JOIN130F:  preds = [ASSIGN1312,ASSIGN1314]
          bool _t1311#1 = phi(_t1310,_t1313)
          if _t1311 then goto SAVE1318 else goto JOIN1316
        SAVE1318:  preds = [COND131C]
          self.rayN = rayN12F9;
          self.transp = transp12FB;
          self.rgb = rgb12FC;
          self.rgba = rgba12FD;
          stabilize
          goto JOIN1316
        JOIN1316:  preds = [*STABILIZE1317,COND131C]
          goto JOIN130B
        JOIN130B:  preds = [JOIN1316,COND131D]
          tensor[3] _t131E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN12F9,rayVec12FA);
          tensor[3] x1320#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye12E4,_t131E);
          real _t1322#1 = 0.e0;
          real _t1324#1 = TensorIndex<tensor[3],[0]>(x1320);
          bool _t1326#1 = LTE<real>(_t1322,_t1324);
          if _t1326 then goto ASSIGN132A else goto JOIN1328
        ASSIGN132A:  preds = [COND13CF]
          real _t1329#1 = TensorIndex<tensor[3],[0]>(x1320);
          real _t132B#1 = 0.1e1;
          bool _t132D#1 = LTE<real>(_t1329,_t132B);
          if _t132D then goto ASSIGN1331 else goto JOIN132F
        ASSIGN1331:  preds = [COND13CC]
          real _t1330#1 = 0.e0;
          real _t1332#1 = TensorIndex<tensor[3],[1]>(x1320);
          bool _t1334#1 = LTE<real>(_t1330,_t1332);
          if _t1334 then goto ASSIGN1338 else goto JOIN1336
        ASSIGN1338:  preds = [COND13C9]
          real _t1337#1 = TensorIndex<tensor[3],[1]>(x1320);
          real _t1339#1 = 0.1e1;
          bool _t133B#1 = LTE<real>(_t1337,_t1339);
          if _t133B then goto ASSIGN133F else goto JOIN133D
        ASSIGN133F:  preds = [COND13C6]
          real _t133E#1 = 0.e0;
          real _t1340#1 = TensorIndex<tensor[3],[2]>(x1320);
          bool _t1342#1 = LTE<real>(_t133E,_t1340);
          if _t1342 then goto ASSIGN1346 else goto JOIN1344
        ASSIGN1346:  preds = [COND13C3]
          real _t1345#1 = TensorIndex<tensor[3],[2]>(x1320);
          real _t1347#1 = 0.1e1;
          bool _t1349#1 = LTE<real>(_t1345,_t1347);
          if _t1349 then goto ASSIGN134D else goto JOIN134B
        ASSIGN134D:  preds = [COND13C0]
          femData:MeshPos p134C#1 = findPos11A4 (a12E6,x1320);
          bool _t134E#1 = ExtractFemItem<bool,Valid(MeshPos)>(p134C);
          if _t134E then goto ASSIGN1352 else goto JOIN1350
        ASSIGN1352:  preds = [COND13BD]
          real val1351#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F12D9,x1320);
          field _t1353#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F12D9);
          tensor[3] _t1355#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1353,x1320);
          tensor[3] grad1357#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1355);
          real _t1359#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad1357);
          real _t135C#1 = 0.e0;
          real _t135E#1 = 0.1e1;
          real _t1360#1 = 0.13e1;
          real _t1362#1 = 0.1e1;
          real _t1364#1 = λ(T0[])<Abs(T0)> (val1351);
          real _t1366#1 = λ(T0[],T1[])<(T0 * T1)> (_t1359,thick12E5);
          real _t1368#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1364,_t1366);
          real _t136A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1362,_t1368);
          real _t136C#1 = λ(T0[],T1[])<(T0 * T1)> (_t1360,_t136A);
          real _t136E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t135C,_t135E,_t136C);
          real _t1370#1 = _t136E;
          real _t1373#1 = 0.1e1;
          real _t1375#1 = _t1373;
          real a1377#3 = λ(T0[],T1[])<(T0 * T1)> (_t1370,_t1375);
          real _t1379#1 = 0.e0;
          bool _t137B#1 = GT<real>(a1377,_t1379);
          if _t137B then goto ASSIGN137F else goto JOIN137D
        ASSIGN137F:  preds = [COND13BA]
          real _t137E#1 = 0.1e1;
          real _t1380#1 = 0.1e1;
          real _t1382#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1380,a1377);
          real _t1384#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec12FA);
          real _t1386#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep12E0,_t1384);
          real _t1388#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1386,refStep12E1);
          real _t138A#1 = MathFn<pow>(_t1382,_t1388);
          real a138C#3 = λ(T0[],T1[])<(T0) - (T1)> (_t137E,_t138A);
          real _t138F#1 = 0.11e1;
          real _t1391#1 = 0.7e0;
          real depth1393#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t138F,_t1391,camNear12E3,rayN12F9,camFar12E2);
          real _t1395#1 = 0.e0;
          tensor[3] _t1397#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad1357,grad1357);
          real _t1399#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1397,light12D7);
          real shade139B#1 = Max<real>(_t1395,_t1399);
          real _t139D#1 = λ(T0[],T1[])<(T0 * T1)> (transp12FB,a138C);
          real _t139F#1 = λ(T0[],T1[])<(T0 * T1)> (_t139D,depth1393);
          real _t13A1#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd12DE,shade139B);
          real _t13A3#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa12DF,_t13A1);
          real _t13A5#1 = λ(T0[],T1[])<(T0 * T1)> (_t139F,_t13A3);
          real _t13A8#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V12DA,x1320);
          tensor[3] _t13AA#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap12D8,_t13A8);
          tensor[3] _t13AC#1 = _t13AA;
          tensor[3] _t13AE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t13A5,_t13AC);
          tensor[3] rgb13B0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb12FC,_t13AE);
          real _t13B3#1 = 0.1e1;
          real _t13B5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t13B3,a138C);
          real transp13B7#1 = λ(T0[],T1[])<(T0 * T1)> (transp12FB,_t13B5);
          goto JOIN137D
        JOIN137D:  preds = [ASSIGN13B9,COND13BA]
          real a138D#0 = phi(a138C,a1377)
          tensor[3] rgb13B1#1 = phi(rgb13B0,rgb12FC)
          real transp13B8#1 = phi(transp13B7,transp12FB)
          goto JOIN1350
        JOIN1350:  preds = [JOIN137D,COND13BD]
          tensor[3] rgb13BC#1 = phi(rgb13B1,rgb12FC)
          real transp13BB#1 = phi(transp13B8,transp12FB)
          goto JOIN134B
        JOIN134B:  preds = [JOIN1350,COND13C0]
          tensor[3] rgb13BF#1 = phi(rgb13BC,rgb12FC)
          real transp13BE#1 = phi(transp13BB,transp12FB)
          goto JOIN1344
        JOIN1344:  preds = [JOIN134B,COND13C3]
          tensor[3] rgb13C2#1 = phi(rgb13BF,rgb12FC)
          real transp13C1#1 = phi(transp13BE,transp12FB)
          goto JOIN133D
        JOIN133D:  preds = [JOIN1344,COND13C6]
          tensor[3] rgb13C5#1 = phi(rgb13C2,rgb12FC)
          real transp13C4#1 = phi(transp13C1,transp12FB)
          goto JOIN1336
        JOIN1336:  preds = [JOIN133D,COND13C9]
          tensor[3] rgb13C8#1 = phi(rgb13C5,rgb12FC)
          real transp13C7#1 = phi(transp13C4,transp12FB)
          goto JOIN132F
        JOIN132F:  preds = [JOIN1336,COND13CC]
          tensor[3] rgb13CB#1 = phi(rgb13C8,rgb12FC)
          real transp13CA#1 = phi(transp13C7,transp12FB)
          goto JOIN1328
        JOIN1328:  preds = [JOIN132F,COND13CF]
          tensor[3] rgb13CE#3 = phi(rgb13CB,rgb12FC)
          real transp13CD#2 = phi(transp13CA,transp12FB)
          real _t13D0#1 = 0.1e-1;
          bool _t13D2#1 = LT<real>(transp13CD,_t13D0);
          if _t13D2 then goto ASSIGN13D7 else goto JOIN13D4
        ASSIGN13D7:  preds = [COND13DD]
          real transp13D5#1 = 0.e0;
          self.rayN = rayN12F9;
          self.transp = transp13D5;
          self.rgb = rgb13CE;
          self.rgba = rgba12FD;
          stabilize
          goto JOIN13D4
        JOIN13D4:  preds = [*STABILIZE13D8,COND13DD]
          real transp13D6#2 = phi(transp13CD)
          bool _t13DE#1 = GT<real>(rayN12F9,camFar12E2);
          if _t13DE then goto SAVE13E2 else goto JOIN13E0
        SAVE13E2:  preds = [COND13E6]
          self.rayN = rayN12F9;
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          self.rgba = rgba12FD;
          stabilize
          goto JOIN13E0
        JOIN13E0:  preds = [*STABILIZE13E1,COND13E6]
          real rayN13E7#1 = λ(T0[],T1[])<(T0 + T1)> (rayN12F9,rayStep12E0);
          self.rayN = rayN13E7;
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          self.rgba = rgba12FD;
          active
        ASSIGN1314:  preds = [COND1315]
          bool _t1313#1 = NEQ<int>(vi1300,sv12DB);
          goto JOIN130F
    end update
    method stabilize
        ENTRY142D:  preds = []
          bool debug13F1#1 = globals.debug1099;
          int su13F0#1 = globals.su109A;
          int sv13EF#1 = globals.sv109B;
          real rayU13F5#0 = self.rayU;
          real rayV13F6#0 = self.rayV;
          real rayN13F7#1 = self.rayN;
          tensor[3] rayVec13F8#0 = self.rayVec;
          real transp13F9#2 = self.transp;
          tensor[3] rgb13FA#4 = self.rgb;
          tensor[4] rgba13FB#1 = self.rgba;
          real gray13FC#0 = self.gray;
          int ui13FD#1 = self.ui;
          int vi13FE#1 = self.vi;
          real _t1409#1 = 0.1e1;
          real a140B#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1409,transp13F9);
          real _t140D#1 = 0.e0;
          bool _t140F#1 = GT<real>(a140B,_t140D);
          if _t140F then goto ASSIGN1413 else goto JOIN1411
        ASSIGN1413:  preds = [COND1421]
          real _t1412#1 = TensorIndex<tensor[3],[0]>(rgb13FA);
          real _t1414#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1412,a140B);
          real _t1416#1 = TensorIndex<tensor[3],[1]>(rgb13FA);
          real _t1418#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1416,a140B);
          real _t141A#1 = TensorIndex<tensor[3],[2]>(rgb13FA);
          real _t141C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t141A,a140B);
          tensor[4] rgba141E#1 = <tensor[4]>[_t1414,_t1418,_t141C,a140B];
          goto JOIN1411
        JOIN1411:  preds = [ASSIGN1420,COND1421]
          tensor[4] rgba141F#2 = phi(rgba141E,rgba13FB)
          bool _t1422#1 = EQ<int>(ui13FD,su13F0);
          if _t1422 then goto ASSIGN1426 else goto JOIN1424
        ASSIGN1426:  preds = [COND142C]
          bool _t1425#1 = EQ<int>(vi13FE,sv13EF);
          if _t1425 then goto COND142A else goto JOIN1427
        COND142A:  preds = [COND142B]
          if debug13F1 then goto MASSIGN1429 else goto JOIN1428
        MASSIGN1429:  preds = [COND142A]
          Print<[real,tensor[4]]>(a140B,rgba141F);
          goto JOIN1428
        JOIN1428:  preds = [MASSIGN1429,COND142A]
          goto JOIN1427
        JOIN1427:  preds = [JOIN1428,COND142B]
          goto JOIN1424
        JOIN1424:  preds = [JOIN1427,COND142C]
          self.rayN = rayN13F7;
          self.transp = transp13F9;
          self.rgb = rgb13FA;
          self.rgba = rgba141F;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY125F:  preds = []
      int iresU1245#1 = globals.iresU1090;
      int iresV1244#1 = globals.iresV1091;
      int _t1248#1 = 0;
      int _t124A#1 = 1;
      int _t124C#1 = ISub(iresV1244,_t124A);
      int[] _t124E#1 = Range(_t1248,_t124C);
    FOREACH1251:  preds = [ASSIGN124F,NEXT125E]
      foreach (vi1250 in _t124E) on exit goto RETURN1260
      int _t1252#1 = 0;
      int _t1254#1 = 1;
      int _t1256#1 = ISub(iresU1245,_t1254);
      int[] _t1258#1 = Range(_t1252,_t1256);
    FOREACH125B:  preds = [ASSIGN1259,NEXT125D]
      foreach (ui125A in _t1258) on exit goto NEXT125E
      new raycast(ui125A,vi1250);
      goto FOREACH125B
    NEXT125E:  preds = [FOREACH125B]
      goto FOREACH1251
    RETURN1260:  preds = [FOREACH1251]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1087 (a) = <no-default>
  input 0b042F_intermedateGlobal1088 (b) = <no-default>
  input 0c0431_intermedateGlobal1089 (c) = <no-default>
  input isoval108A (isoval) = <default>
  input thick108B (thick) = <default>
  input camEye108C (camEye) = <default>
  input camAt108D (camAt) = <default>
  input camUp108E (camUp) = <default>
  input camFOV108F (camFOV) = <default>
  input iresU1090 (iresU) = <default>
  input iresV1091 (iresV) = <default>
  input camNear1092 (camNear) = <default>
  input camFar1093 (camFar) = <default>
  input refStep1094 (refStep) = <default>
  input rayStep1095 (rayStep) = <default>
  input lightVsp1096 (lightVsp) = <default>
  input phongKa1097 (phongKa) = <default>
  input phongKd1098 (phongKd) = <default>
  input debug1099 (debug) = <default>
  input su109A (su) = <default>
  input sv109B (sv) = <default>
  global femData:Space b10EC
  global femData:FemFunc c10ED
  global field V10EE
  global field F10EF
  global image(IMAGE1D<double[3]>) I10F0
  global field cmap10F1
  global real camDist10F2
  global tensor[3] camN10F3
  global tensor[3] camU10F4
  global tensor[3] camV10F5
  global real camVmax10F6
  global real camUmax10F7
  global tensor[3] light10F8
## functions
  function femData:MeshPos findPos11A4 (femData:Mesh mesh10F9#7, tensor[3] pos10FA#2) {
    ENTRY11A3:  preds = []
      real _t10FB#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1101#2 = <tensor[3]>[_t10FB,_t10FB,_t10FB];
      int newtonInt1103#3 = 0;
      int cellInt1105#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh10F9);
      int _t1107#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh10F9);
      int _t1109#3 = 1;
      int numCell110B#2 = ISub(_t1107,_t1109);
      int _t110F#2 = 16;
      int _t1111#1 = IMul(_t110F,numCell110B);
      int[] _t1113#1 = Range(newtonInt1103,_t1111);
    FOREACH1119:  preds = [ASSIGN143D,NEXT119F]
      foreach (itter1115 in _t1113) on exit goto ASSIGN11A1
        int cellInt1118#5 = phi(cellInt1105,cellInt119D)
        int newtonInt1117#1 = phi(newtonInt1103,newtonInt118F)
        tensor[3] xn1116#2 = phi(xn1101,xn1132)
      field _t111A#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1118,mesh10F9,mesh10F9);
      field _t111C#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t111A);
      field _t111E#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t111C);
      tensor[3,3] A1128#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t111E,xn1101);
      field _t112C#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos10FA,_t111A);
      field _t112E#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1128,_t112C);
      tensor[3] delta1130#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t112E,xn1116);
      tensor[3] xn1132#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1116,delta1130);
      real _t1134#1 = 0.1e-7;
      real _t1136#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (delta1130);
      bool _t1138#1 = GTE<real>(_t1134,_t1136);
      if _t1138 then goto ASSIGN113C else goto JOIN113A
    ASSIGN113C:  preds = [COND1184]
      real _t113B#4 = 0.1e1;
      tensor[3] _t1143#1 = <tensor[3]>[_t113B,_t113B,_t113B];
      real _t1145#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1143,xn1132);
      bool _t1147#1 = GT<real>(_t113B,_t1145);
      real _t1149#3 = 0.1e-8;
      tensor[3] _t114F#1 = <tensor[3]>[_t1149,_t1149,_t1149];
      tensor[3] _t1151#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t114F,xn1132);
      real _t1153#1 = TensorIndex<tensor[3],[0]>(_t1151);
      real _t1155#3 = -0.e0;
      bool _t1157#1 = GT<real>(_t1153,_t1155);
      real _t1163#1 = TensorIndex<tensor[3],[1]>(_t1151);
      bool _t1167#1 = GT<real>(_t1163,_t1155);
      real _t1173#1 = TensorIndex<tensor[3],[2]>(_t1151);
      bool _t1177#1 = GT<real>(_t1173,_t1155);
      bool _t1179#1 = BAnd(_t1167,_t1177);
      bool _t117B#1 = BAnd(_t1157,_t1179);
      bool _t117D#1 = BAnd(_t1147,_t117B);
      if _t117D then goto ASSIGN1181 else goto JOIN117F
    ASSIGN1181:  preds = [COND1183]
      femData:MeshPos _t1180#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh10F9,cellInt1118,xn1132,pos10FA);
      return _t1180
      goto JOIN117F
    JOIN117F:  preds = [*RETURN(_t1180)1182,COND1183]
      goto JOIN113A
    JOIN113A:  preds = [JOIN117F,COND1184]
      int newtonInt1187#2 = IAdd(newtonInt1117,_t1109);
      bool _t118B#1 = GTE<int>(newtonInt1187,_t110F);
      if _t118B then goto ASSIGN1192 else goto JOIN118D
    ASSIGN1192:  preds = [COND119E]
      bool _t1191#1 = GTE<int>(cellInt1118,numCell110B);
      if _t1191 then goto ASSIGN1195 else goto ASSIGN1448
    ASSIGN1195:  preds = [COND119C]
      femData:MeshPos _t1194#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t1194
      goto JOIN1193
    JOIN1193:  preds = [*RETURN(_t1194)1196,ASSIGN1448]
      int cellInt119A#1 = phi(cellInt1199)
      goto JOIN118D
    JOIN118D:  preds = [JOIN1193,COND119E]
      int cellInt119D#1 = phi(cellInt119A,cellInt1118)
      int newtonInt118F#1 = phi(newtonInt1103,newtonInt1187)
      goto FOREACH1119
    ASSIGN1448:  preds = [COND119C]
      int cellInt1199#1 = IAdd(cellInt1118,_t1109);
      goto JOIN1193
    ASSIGN11A1:  preds = [FOREACH1119]
      femData:MeshPos _t11A0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t11A0
}
  function int[2] nextCell411B6 (int faceIdx11A5#1, int cell11A6#1, femData:Mesh mesh11A7#1) {
    ENTRY11B5:  preds = []
      int _t11A8#1 = 8;
      int _t11AA#1 = IMul(cell11A6,_t11A8);
      int _t11AC#1 = 2;
      int _t11AE#1 = IMul(faceIdx11A5,_t11AC);
      int _t11B0#1 = IAdd(_t11AA,_t11AE);
      int[2] _t11B2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11A7,_t11B0);
      return _t11B2
}
## input initialization
  ENTRY10EA:  preds = []
    real isoval109C#1 = 0.2e0;
    globals.isoval108A = isoval109C;
    real thick109F#1 = 0.7e-1;
    globals.thick108B = thick109F;
    real _t10A2#2 = -0.3e1;
    real _t10A6#1 = 0.3e1;
    tensor[3] camEye10A8#1 = <tensor[3]>[_t10A2,_t10A2,_t10A6];
    globals.camEye108C = camEye10A8;
    real _t10AB#3 = 0.5e0;
    tensor[3] camAt10B1#1 = <tensor[3]>[_t10AB,_t10AB,_t10AB];
    globals.camAt108D = camAt10B1;
    real _t10B4#2 = 0.e0;
    real _t10B8#2 = 0.1e1;
    tensor[3] camUp10BA#2 = <tensor[3]>[_t10B4,_t10B4,_t10B8];
    globals.camUp108E = camUp10BA;
    real camFOV10BD#1 = 0.137e2;
    globals.camFOV108F = camFOV10BD;
    int iresU10C0#2 = 500;
    globals.iresU1090 = iresU10C0;
    globals.iresV1091 = iresU10C0;
    real camNear10C6#1 = -0.2e1;
    globals.camNear1092 = camNear10C6;
    real camFar10C9#1 = 0.5e1;
    globals.camFar1093 = camFar10C9;
    globals.refStep1094 = _t10B8;
    real rayStep10CF#1 = 0.1e-1;
    globals.rayStep1095 = rayStep10CF;
    globals.lightVsp1096 = camUp10BA;
    real phongKa10DB#1 = 0.1e0;
    globals.phongKa1097 = phongKa10DB;
    real phongKd10DE#1 = 0.9e0;
    globals.phongKd1098 = phongKd10DE;
    bool debug10E1#1 = false;
    globals.debug1099 = debug10E1;
    int su10E4#2 = 250;
    globals.su109A = su10E4;
    globals.sv109B = su10E4;
    return
## global-variable initialization
  ENTRY1242:  preds = []
    femData:Mesh a11C1#3 = globals.a1087;
    femData:Space 0b042F_intermedateGlobal11C0#1 = globals.0b042F_intermedateGlobal1088;
    femData:FemFunc 0c0431_intermedateGlobal11BF#1 = globals.0c0431_intermedateGlobal1089;
    real isoval11BE#1 = globals.isoval108A;
    tensor[3] camEye11BD#1 = globals.camEye108C;
    tensor[3] camAt11BC#1 = globals.camAt108D;
    tensor[3] camUp11BB#1 = globals.camUp108E;
    real camFOV11BA#1 = globals.camFOV108F;
    int iresU11B9#1 = globals.iresU1090;
    int iresV11B8#1 = globals.iresV1091;
    tensor[3] lightVsp11B7#2 = globals.lightVsp1096;
    int _t11CD#1 = 0;
    int _t11CF#1 = 1;
    int _t11D1#1 = ExtractFemItem<int,NumCell(Mesh)>(a11C1);
    int _t11D3#1 = ISub(_t11D1,_t11CF);
    int[] _t11D5#1 = Range(_t11CD,_t11D3);
    femData:MeshCell[] _t11D7#1 = <femData:MeshCell[]>{};
  FOREACH11DB:  preds = [ASSIGN11D8,NEXT11E0]
    foreach (_t11D9 in _t11D5) on exit goto ASSIGN11E2
      femData:MeshCell[] _t11DA#1 = phi(_t11D7,_t11DE)
    femData:MeshCell _t11DC#1 = LoadFem<femData:MeshCell>(a11C1,_t11D9);
    femData:MeshCell[] _t11DE#1 = Append<femData:MeshCell>(_t11DA,_t11DC);
    goto FOREACH11DB
  ASSIGN11E2:  preds = [FOREACH11DB]
    femData:Space b11E1#2 = LoadFem<femData:Space>(0b042F_intermedateGlobal11C0,a11C1);
    globals.b10EC = b11E1;
    femData:FemFunc c11E4#3 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal11BF,b11E1);
    globals.c10ED = c11E4;
    femData:Space _t11E7#2 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11EB#4 = ExtractFem<femData:Mesh,femData:Space>(_t11E7);
    field _t11ED#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(11A4, 0, 1, 2)⊛Basis()> (_t11EB,_t11E7,c11E4);
    field _t11FB#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(11A4, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t11EB,_t11EB,_t11EB);
    field V11FD#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t11ED,_t11FB);
    globals.V10EE = V11FD;
    field _t1200#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval11BE,V11FD);
    globals.F10EF = _t1200;
    image(IMAGE1D<double[3]>) I1207#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I10F0 = I1207;
    kernel _t120A#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img120C#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1207);
    field cmap120E#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img120C,_t120A);
    globals.cmap10F1 = cmap120E;
    tensor[3] _t1211#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt11BC,camEye11BD);
    real camDist1213#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1211);
    globals.camDist10F2 = camDist1213;
    tensor[3] camN1218#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1211,_t1211);
    globals.camN10F3 = camN1218;
    tensor[3] _t121B#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN1218,camUp11BB);
    tensor[3] camU121D#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t121B,_t121B);
    globals.camU10F4 = camU121D;
    tensor[3] camV1220#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU121D,camN1218);
    globals.camV10F5 = camV1220;
    real _t1223#1 = 0.314159265358979323846264338327950288e1;
    real _t1225#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV11BA,_t1223);
    real _t1227#1 = 0.36e3;
    real _t1229#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1225,_t1227);
    real _t122B#1 = λ(T0[])<Tangent(T0)> (_t1229);
    real camVmax122D#2 = λ(T0[],T1[])<(T0 * T1)> (_t122B,camDist1213);
    globals.camVmax10F6 = camVmax122D;
    real _t1230#1 = IntToReal(iresU11B9);
    real _t1232#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax122D,_t1230);
    real _t1234#1 = IntToReal(iresV11B8);
    real camUmax1236#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1232,_t1234);
    globals.camUmax10F7 = camUmax1236;
    tensor[3,3] _t1239#1 = <tensor[3,3]>[camU121D,camV1220,camN1218];
    tensor[3,3] _t123B#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t1239);
    tensor[3] _t123D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp11B7,lightVsp11B7);
    tensor[3] light123F#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t123B,_t123D);
    globals.light10F8 = light123F;
    return
## strand
  strand raycast (int ui1261#2, int vi1262#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12CB:  preds = []
        int iresU1275#1 = globals.iresU1090;
        int iresV1274#1 = globals.iresV1091;
        real camNear1273#1 = globals.camNear1092;
        real camDist1272#1 = globals.camDist10F2;
        tensor[3] camN1271#1 = globals.camN10F3;
        tensor[3] camU1270#1 = globals.camU10F4;
        tensor[3] camV126F#1 = globals.camV10F5;
        real camVmax126E#2 = globals.camVmax10F6;
        real camUmax126D#2 = globals.camUmax10F7;
        real _t1289#1 = λ(T0[])<Neg(T0)> (camUmax126D);
        real _t128B#2 = -0.5e0;
        real _t128D#1 = IntToReal(ui1261);
        real _t128F#1 = IntToReal(iresU1275);
        real _t1291#2 = 0.5e0;
        real _t1293#1 = λ(T0[],T1[])<(T0) - (T1)> (_t128F,_t1291);
        real rayU1295#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1289,camUmax126D,_t128B,_t128D,_t1293);
        real _t1297#1 = λ(T0[])<Neg(T0)> (camVmax126E);
        real _t129B#1 = IntToReal(vi1262);
        real _t129D#1 = IntToReal(iresV1274);
        real _t12A1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t129D,_t1291);
        real rayV12A3#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax126E,_t1297,_t128B,_t129B,_t12A1);
        tensor[3] _t12A7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU1295,camU1270);
        tensor[3] _t12A9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV12A3,camV126F);
        tensor[3] _t12AB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t12A7,_t12A9);
        tensor[3] _t12AD#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t12AB,camDist1272);
        tensor[3] rayVec12AF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1271,_t12AD);
        real transp12B1#1 = 0.1e1;
        real _t12B3#8 = 0.e0;
        tensor[3] rgb12B9#1 = <tensor[3]>[_t12B3,_t12B3,_t12B3];
        tensor[4] rgba12C3#1 = <tensor[4]>[_t12B3,_t12B3,_t12B3,_t12B3];
        self.rayU = rayU1295;
        self.rayV = rayV12A3;
        self.rayN = camNear1273;
        self.rayVec = rayVec12AF;
        self.transp = transp12B1;
        self.rgb = rgb12B9;
        self.rgba = rgba12C3;
        self.gray = _t12B3;
        self.ui = ui1261;
        self.vi = vi1262;
        return
    end state init
    method update
        ENTRY13E9:  preds = []
          femData:Mesh a12E6#1 = globals.a1087;
          real thick12E5#1 = globals.thick108B;
          tensor[3] camEye12E4#1 = globals.camEye108C;
          real camNear12E3#1 = globals.camNear1092;
          real camFar12E2#2 = globals.camFar1093;
          real refStep12E1#1 = globals.refStep1094;
          real rayStep12E0#2 = globals.rayStep1095;
          real phongKa12DF#1 = globals.phongKa1097;
          real phongKd12DE#1 = globals.phongKd1098;
          bool debug12DD#1 = globals.debug1099;
          int su12DC#1 = globals.su109A;
          int sv12DB#1 = globals.sv109B;
          field V12DA#1 = globals.V10EE;
          field F12D9#2 = globals.F10EF;
          field cmap12D8#1 = globals.cmap10F1;
          tensor[3] light12D7#1 = globals.light10F8;
          real rayU12F7#0 = self.rayU;
          real rayV12F8#0 = self.rayV;
          real rayN12F9#4 = self.rayN;
          tensor[3] rayVec12FA#2 = self.rayVec;
          real transp12FB#10 = self.transp;
          tensor[3] rgb12FC#9 = self.rgb;
          tensor[4] rgba12FD#0 = self.rgba;
          real gray12FE#0 = self.gray;
          int ui12FF#1 = self.ui;
          int vi1300#1 = self.vi;
          if debug12DD then goto ASSIGN130E else goto JOIN130B
        ASSIGN130E:  preds = [COND131D]
          bool _t130D#1 = NEQ<int>(ui12FF,su12DC);
          if _t130D then goto ASSIGN1312 else goto ASSIGN1314
        ASSIGN1312:  preds = [COND1315]
          bool _t1310#1 = true;
          goto JOIN130F
        JOIN130F:  preds = [ASSIGN1312,ASSIGN1314]
          bool _t1311#1 = phi(_t1310,_t1313)
          if _t1311 then goto STABILIZE1317 else goto JOIN1316
        STABILIZE1317:  preds = [COND131C]
          stabilize
          goto JOIN1316
        JOIN1316:  preds = [*STABILIZE1317,COND131C]
          goto JOIN130B
        JOIN130B:  preds = [JOIN1316,COND131D]
          tensor[3] _t131E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN12F9,rayVec12FA);
          tensor[3] x1320#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye12E4,_t131E);
          real _t1322#7 = 0.e0;
          real _t1324#2 = TensorIndex<tensor[3],[0]>(x1320);
          bool _t1326#1 = LTE<real>(_t1322,_t1324);
          if _t1326 then goto ASSIGN132C else goto JOIN1328
        ASSIGN132C:  preds = [COND13CF]
          real _t132B#9 = 0.1e1;
          bool _t132D#1 = LTE<real>(_t1324,_t132B);
          if _t132D then goto ASSIGN1333 else goto JOIN132F
        ASSIGN1333:  preds = [COND13CC]
          real _t1332#2 = TensorIndex<tensor[3],[1]>(x1320);
          bool _t1334#1 = LTE<real>(_t1322,_t1332);
          if _t1334 then goto ASSIGN1457 else goto JOIN1336
        ASSIGN1457:  preds = [COND13C9]
          bool _t133B#1 = LTE<real>(_t1332,_t132B);
          if _t133B then goto ASSIGN1341 else goto JOIN133D
        ASSIGN1341:  preds = [COND13C6]
          real _t1340#2 = TensorIndex<tensor[3],[2]>(x1320);
          bool _t1342#1 = LTE<real>(_t1322,_t1340);
          if _t1342 then goto ASSIGN1459 else goto JOIN1344
        ASSIGN1459:  preds = [COND13C3]
          bool _t1349#1 = LTE<real>(_t1340,_t132B);
          if _t1349 then goto ASSIGN134D else goto JOIN134B
        ASSIGN134D:  preds = [COND13C0]
          femData:MeshPos p134C#1 = findPos11A4 (a12E6,x1320);
          bool _t134E#1 = ExtractFemItem<bool,Valid(MeshPos)>(p134C);
          if _t134E then goto ASSIGN1352 else goto JOIN1350
        ASSIGN1352:  preds = [COND13BD]
          real val1351#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F12D9,x1320);
          field _t1353#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F12D9);
          tensor[3] _t1355#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1353,x1320);
          tensor[3] grad1357#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t1355);
          real _t1359#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad1357);
          real _t1360#1 = 0.13e1;
          real _t1364#1 = λ(T0[])<Abs(T0)> (val1351);
          real _t1366#1 = λ(T0[],T1[])<(T0 * T1)> (_t1359,thick12E5);
          real _t1368#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1364,_t1366);
          real _t136A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t132B,_t1368);
          real _t136C#1 = λ(T0[],T1[])<(T0 * T1)> (_t1360,_t136A);
          real _t136E#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1322,_t132B,_t136C);
          real a1377#3 = λ(T0[],T1[])<(T0 * T1)> (_t136E,_t132B);
          bool _t137B#1 = GT<real>(a1377,_t1322);
          if _t137B then goto ASSIGN145E else goto JOIN137D
        ASSIGN145E:  preds = [COND13BA]
          real _t1382#1 = λ(T0[],T1[])<(T0) - (T1)> (_t132B,a1377);
          real _t1384#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec12FA);
          real _t1386#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep12E0,_t1384);
          real _t1388#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1386,refStep12E1);
          real _t138A#1 = MathFn<pow>(_t1382,_t1388);
          real a138C#3 = λ(T0[],T1[])<(T0) - (T1)> (_t132B,_t138A);
          real _t138F#1 = 0.11e1;
          real _t1391#1 = 0.7e0;
          real depth1393#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t138F,_t1391,camNear12E3,rayN12F9,camFar12E2);
          tensor[3] _t1397#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad1357,grad1357);
          real _t1399#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1397,light12D7);
          real shade139B#1 = Max<real>(_t1322,_t1399);
          real _t139D#1 = λ(T0[],T1[])<(T0 * T1)> (transp12FB,a138C);
          real _t139F#1 = λ(T0[],T1[])<(T0 * T1)> (_t139D,depth1393);
          real _t13A1#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd12DE,shade139B);
          real _t13A3#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa12DF,_t13A1);
          real _t13A5#1 = λ(T0[],T1[])<(T0 * T1)> (_t139F,_t13A3);
          real _t13A8#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V12DA,x1320);
          tensor[3] _t13AA#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap12D8,_t13A8);
          tensor[3] _t13AE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t13A5,_t13AA);
          tensor[3] rgb13B0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb12FC,_t13AE);
          real _t13B5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t132B,a138C);
          real transp13B7#1 = λ(T0[],T1[])<(T0 * T1)> (transp12FB,_t13B5);
          goto JOIN137D
        JOIN137D:  preds = [ASSIGN13B9,COND13BA]
          real a138D#0 = phi(a138C,a1377)
          tensor[3] rgb13B1#1 = phi(rgb13B0,rgb12FC)
          real transp13B8#1 = phi(transp13B7,transp12FB)
          goto JOIN1350
        JOIN1350:  preds = [JOIN137D,COND13BD]
          tensor[3] rgb13BC#1 = phi(rgb13B1,rgb12FC)
          real transp13BB#1 = phi(transp13B8,transp12FB)
          goto JOIN134B
        JOIN134B:  preds = [JOIN1350,COND13C0]
          tensor[3] rgb13BF#1 = phi(rgb13BC,rgb12FC)
          real transp13BE#1 = phi(transp13BB,transp12FB)
          goto JOIN1344
        JOIN1344:  preds = [JOIN134B,COND13C3]
          tensor[3] rgb13C2#1 = phi(rgb13BF,rgb12FC)
          real transp13C1#1 = phi(transp13BE,transp12FB)
          goto JOIN133D
        JOIN133D:  preds = [JOIN1344,COND13C6]
          tensor[3] rgb13C5#1 = phi(rgb13C2,rgb12FC)
          real transp13C4#1 = phi(transp13C1,transp12FB)
          goto JOIN1336
        JOIN1336:  preds = [JOIN133D,COND13C9]
          tensor[3] rgb13C8#1 = phi(rgb13C5,rgb12FC)
          real transp13C7#1 = phi(transp13C4,transp12FB)
          goto JOIN132F
        JOIN132F:  preds = [JOIN1336,COND13CC]
          tensor[3] rgb13CB#1 = phi(rgb13C8,rgb12FC)
          real transp13CA#1 = phi(transp13C7,transp12FB)
          goto JOIN1328
        JOIN1328:  preds = [JOIN132F,COND13CF]
          tensor[3] rgb13CE#3 = phi(rgb13CB,rgb12FC)
          real transp13CD#2 = phi(transp13CA,transp12FB)
          real _t13D0#1 = 0.1e-1;
          bool _t13D2#1 = LT<real>(transp13CD,_t13D0);
          if _t13D2 then goto SAVE1463 else goto JOIN13D4
        SAVE1463:  preds = [COND13DD]
          self.transp = _t1322;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13D4
        JOIN13D4:  preds = [*STABILIZE13D8,COND13DD]
          real transp13D6#2 = phi(transp13CD)
          bool _t13DE#1 = GT<real>(rayN12F9,camFar12E2);
          if _t13DE then goto SAVE13E3 else goto JOIN13E0
        SAVE13E3:  preds = [COND13E6]
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13E0
        JOIN13E0:  preds = [*STABILIZE13E1,COND13E6]
          real rayN13E7#1 = λ(T0[],T1[])<(T0 + T1)> (rayN12F9,rayStep12E0);
          self.rayN = rayN13E7;
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          active
        ASSIGN1314:  preds = [COND1315]
          bool _t1313#1 = NEQ<int>(vi1300,sv12DB);
          goto JOIN130F
    end update
    method stabilize
        ENTRY142D:  preds = []
          bool debug13F1#1 = globals.debug1099;
          int su13F0#1 = globals.su109A;
          int sv13EF#1 = globals.sv109B;
          real rayU13F5#0 = self.rayU;
          real rayV13F6#0 = self.rayV;
          real rayN13F7#0 = self.rayN;
          tensor[3] rayVec13F8#0 = self.rayVec;
          real transp13F9#1 = self.transp;
          tensor[3] rgb13FA#3 = self.rgb;
          tensor[4] rgba13FB#1 = self.rgba;
          real gray13FC#0 = self.gray;
          int ui13FD#1 = self.ui;
          int vi13FE#1 = self.vi;
          real _t1409#1 = 0.1e1;
          real a140B#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1409,transp13F9);
          real _t140D#1 = 0.e0;
          bool _t140F#1 = GT<real>(a140B,_t140D);
          if _t140F then goto ASSIGN1413 else goto JOIN1411
        ASSIGN1413:  preds = [COND1421]
          real _t1412#1 = TensorIndex<tensor[3],[0]>(rgb13FA);
          real _t1414#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1412,a140B);
          real _t1416#1 = TensorIndex<tensor[3],[1]>(rgb13FA);
          real _t1418#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1416,a140B);
          real _t141A#1 = TensorIndex<tensor[3],[2]>(rgb13FA);
          real _t141C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t141A,a140B);
          tensor[4] rgba141E#1 = <tensor[4]>[_t1414,_t1418,_t141C,a140B];
          goto JOIN1411
        JOIN1411:  preds = [ASSIGN1420,COND1421]
          tensor[4] rgba141F#2 = phi(rgba141E,rgba13FB)
          bool _t1422#1 = EQ<int>(ui13FD,su13F0);
          if _t1422 then goto ASSIGN1426 else goto JOIN1424
        ASSIGN1426:  preds = [COND142C]
          bool _t1425#1 = EQ<int>(vi13FE,sv13EF);
          if _t1425 then goto COND142A else goto JOIN1427
        COND142A:  preds = [COND142B]
          if debug13F1 then goto MASSIGN1429 else goto JOIN1428
        MASSIGN1429:  preds = [COND142A]
          Print<[real,tensor[4]]>(a140B,rgba141F);
          goto JOIN1428
        JOIN1428:  preds = [MASSIGN1429,COND142A]
          goto JOIN1427
        JOIN1427:  preds = [JOIN1428,COND142B]
          goto JOIN1424
        JOIN1424:  preds = [JOIN1427,COND142C]
          self.rgba = rgba141F;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY125F:  preds = []
      int iresU1245#1 = globals.iresU1090;
      int iresV1244#1 = globals.iresV1091;
      int _t1248#2 = 0;
      int _t124A#2 = 1;
      int _t124C#1 = ISub(iresV1244,_t124A);
      int[] _t124E#1 = Range(_t1248,_t124C);
    FOREACH1251:  preds = [ASSIGN124F,NEXT125E]
      foreach (vi1250 in _t124E) on exit goto RETURN1260
      int _t1256#1 = ISub(iresU1245,_t124A);
      int[] _t1258#1 = Range(_t1248,_t1256);
    FOREACH125B:  preds = [ASSIGN1434,NEXT125D]
      foreach (ui125A in _t1258) on exit goto NEXT125E
      new raycast(ui125A,vi1250);
      goto FOREACH125B
    NEXT125E:  preds = [FOREACH125B]
      goto FOREACH1251
    RETURN1260:  preds = [FOREACH1251]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1087 (a) = <no-default>
  input 0b042F_intermedateGlobal1088 (b) = <no-default>
  input 0c0431_intermedateGlobal1089 (c) = <no-default>
  input isoval108A (isoval) = <default>
  input thick108B (thick) = <default>
  input camEye108C (camEye) = <default>
  input camAt108D (camAt) = <default>
  input camUp108E (camUp) = <default>
  input camFOV108F (camFOV) = <default>
  input iresU1090 (iresU) = <default>
  input iresV1091 (iresV) = <default>
  input camNear1092 (camNear) = <default>
  input camFar1093 (camFar) = <default>
  input refStep1094 (refStep) = <default>
  input rayStep1095 (rayStep) = <default>
  input lightVsp1096 (lightVsp) = <default>
  input phongKa1097 (phongKa) = <default>
  input phongKd1098 (phongKd) = <default>
  input debug1099 (debug) = <default>
  input su109A (su) = <default>
  input sv109B (sv) = <default>
  global real camDist10F2
  global tensor[3] camN10F3
  global tensor[3] camU10F4
  global tensor[3] camV10F5
  global real camVmax10F6
  global real camUmax10F7
  global tensor[3] light10F8
## functions
  function femData:MeshPos findPos11A4 (femData:Mesh mesh10F9#21, tensor[3] pos10FA#5) {
    ENTRY11A3:  preds = []
      real _t10FB#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1101#5 = <tensor[3]>[_t10FB,_t10FB,_t10FB];
      int newtonInt1103#3 = 0;
      int cellInt1105#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh10F9);
      int _t1107#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh10F9);
      int _t1109#3 = 1;
      int numCell110B#2 = ISub(_t1107,_t1109);
      int _t110F#2 = 16;
      int _t1111#1 = IMul(_t110F,numCell110B);
      int[] _t1113#1 = Range(newtonInt1103,_t1111);
    FOREACH1119:  preds = [ASSIGN143D,NEXT119F]
      foreach (itter1115 in _t1113) on exit goto ASSIGN11A1
        int cellInt1118#12 = phi(cellInt1105,cellInt119D)
        int newtonInt1117#1 = phi(newtonInt1103,newtonInt118F)
        tensor[3] xn1116#7 = phi(xn1101,xn1132)
      tensor[3] xn1132#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      real _t1134#1 = 0.1e-7;
      real _t1136#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3])<Sqrt(Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2)))>(i0=0..2))> (cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      bool _t1138#1 = GTE<real>(_t1134,_t1136);
      if _t1138 then goto ASSIGN113C else goto JOIN113A
    ASSIGN113C:  preds = [COND1184]
      real _t113B#4 = 0.1e1;
      tensor[3] _t1143#1 = <tensor[3]>[_t113B,_t113B,_t113B];
      real _t1145#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1143,xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      bool _t1147#1 = GT<real>(_t113B,_t1145);
      real _t1149#3 = 0.1e-8;
      tensor[3] _t114F#1 = <tensor[3]>[_t1149,_t1149,_t1149];
      tensor[3] _t1151#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t114F,xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      real _t1153#1 = TensorIndex<tensor[3],[0]>(_t1151);
      real _t1155#3 = -0.e0;
      bool _t1157#1 = GT<real>(_t1153,_t1155);
      real _t1163#1 = TensorIndex<tensor[3],[1]>(_t1151);
      bool _t1167#1 = GT<real>(_t1163,_t1155);
      real _t1173#1 = TensorIndex<tensor[3],[2]>(_t1151);
      bool _t1177#1 = GT<real>(_t1173,_t1155);
      bool _t1179#1 = BAnd(_t1167,_t1177);
      bool _t117B#1 = BAnd(_t1157,_t1179);
      bool _t117D#1 = BAnd(_t1147,_t117B);
      if _t117D then goto ASSIGN1181 else goto JOIN117F
    ASSIGN1181:  preds = [COND1183]
      femData:MeshPos _t1180#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh10F9,cellInt1118,xn1132,pos10FA);
      return _t1180
      goto JOIN117F
    JOIN117F:  preds = [*RETURN(_t1180)1182,COND1183]
      goto JOIN113A
    JOIN113A:  preds = [JOIN117F,COND1184]
      int newtonInt1187#2 = IAdd(newtonInt1117,_t1109);
      bool _t118B#1 = GTE<int>(newtonInt1187,_t110F);
      if _t118B then goto ASSIGN1192 else goto JOIN118D
    ASSIGN1192:  preds = [COND119E]
      bool _t1191#1 = GTE<int>(cellInt1118,numCell110B);
      if _t1191 then goto ASSIGN1195 else goto ASSIGN1448
    ASSIGN1195:  preds = [COND119C]
      femData:MeshPos _t1194#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t1194
      goto JOIN1193
    JOIN1193:  preds = [*RETURN(_t1194)1196,ASSIGN1448]
      int cellInt119A#1 = phi(cellInt1199)
      goto JOIN118D
    JOIN118D:  preds = [JOIN1193,COND119E]
      int cellInt119D#1 = phi(cellInt119A,cellInt1118)
      int newtonInt118F#1 = phi(newtonInt1103,newtonInt1187)
      goto FOREACH1119
    ASSIGN1448:  preds = [COND119C]
      int cellInt1199#1 = IAdd(cellInt1118,_t1109);
      goto JOIN1193
    ASSIGN11A1:  preds = [FOREACH1119]
      femData:MeshPos _t11A0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t11A0
}
  function int[2] nextCell411B6 (int faceIdx11A5#1, int cell11A6#1, femData:Mesh mesh11A7#1) {
    ENTRY11B5:  preds = []
      int _t11A8#1 = 8;
      int _t11AA#1 = IMul(cell11A6,_t11A8);
      int _t11AC#1 = 2;
      int _t11AE#1 = IMul(faceIdx11A5,_t11AC);
      int _t11B0#1 = IAdd(_t11AA,_t11AE);
      int[2] _t11B2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11A7,_t11B0);
      return _t11B2
}
## input initialization
  ENTRY10EA:  preds = []
    real isoval109C#1 = 0.2e0;
    globals.isoval108A = isoval109C;
    real thick109F#1 = 0.7e-1;
    globals.thick108B = thick109F;
    real _t10A2#2 = -0.3e1;
    real _t10A6#1 = 0.3e1;
    tensor[3] camEye10A8#1 = <tensor[3]>[_t10A2,_t10A2,_t10A6];
    globals.camEye108C = camEye10A8;
    real _t10AB#3 = 0.5e0;
    tensor[3] camAt10B1#1 = <tensor[3]>[_t10AB,_t10AB,_t10AB];
    globals.camAt108D = camAt10B1;
    real _t10B4#2 = 0.e0;
    real _t10B8#2 = 0.1e1;
    tensor[3] camUp10BA#2 = <tensor[3]>[_t10B4,_t10B4,_t10B8];
    globals.camUp108E = camUp10BA;
    real camFOV10BD#1 = 0.137e2;
    globals.camFOV108F = camFOV10BD;
    int iresU10C0#2 = 500;
    globals.iresU1090 = iresU10C0;
    globals.iresV1091 = iresU10C0;
    real camNear10C6#1 = -0.2e1;
    globals.camNear1092 = camNear10C6;
    real camFar10C9#1 = 0.5e1;
    globals.camFar1093 = camFar10C9;
    globals.refStep1094 = _t10B8;
    real rayStep10CF#1 = 0.1e-1;
    globals.rayStep1095 = rayStep10CF;
    globals.lightVsp1096 = camUp10BA;
    real phongKa10DB#1 = 0.1e0;
    globals.phongKa1097 = phongKa10DB;
    real phongKd10DE#1 = 0.9e0;
    globals.phongKd1098 = phongKd10DE;
    bool debug10E1#1 = false;
    globals.debug1099 = debug10E1;
    int su10E4#2 = 250;
    globals.su109A = su10E4;
    globals.sv109B = su10E4;
    return
## global-variable initialization
  ENTRY1242:  preds = []
    femData:Mesh a11C1#3 = globals.a1087;
    femData:Space 0b042F_intermedateGlobal11C0#1 = globals.0b042F_intermedateGlobal1088;
    femData:FemFunc 0c0431_intermedateGlobal11BF#1 = globals.0c0431_intermedateGlobal1089;
    real isoval11BE#6 = globals.isoval108A;
    tensor[3] camEye11BD#15 = globals.camEye108C;
    tensor[3] camAt11BC#15 = globals.camAt108D;
    tensor[3] camUp11BB#4 = globals.camUp108E;
    real camFOV11BA#2 = globals.camFOV108F;
    int iresU11B9#1 = globals.iresU1090;
    int iresV11B8#1 = globals.iresV1091;
    tensor[3] lightVsp11B7#2 = globals.lightVsp1096;
    int _t11CD#1 = 0;
    int _t11CF#1 = 1;
    int _t11D1#1 = ExtractFemItem<int,NumCell(Mesh)>(a11C1);
    int _t11D3#1 = ISub(_t11D1,_t11CF);
    int[] _t11D5#1 = Range(_t11CD,_t11D3);
    femData:MeshCell[] _t11D7#1 = <femData:MeshCell[]>{};
  FOREACH11DB:  preds = [ASSIGN11D8,NEXT11E0]
    foreach (_t11D9 in _t11D5) on exit goto ASSIGN11E2
      femData:MeshCell[] _t11DA#1 = phi(_t11D7,_t11DE)
    femData:MeshCell _t11DC#1 = LoadFem<femData:MeshCell>(a11C1,_t11D9);
    femData:MeshCell[] _t11DE#1 = Append<femData:MeshCell>(_t11DA,_t11DC);
    goto FOREACH11DB
  ASSIGN11E2:  preds = [FOREACH11DB]
    femData:Space b11E1#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal11C0,a11C1);
    femData:FemFunc c11E4#8 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal11BF,b11E1);
    femData:Space _t11E7#8 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11EB#28 = ExtractFem<femData:Mesh,femData:Space>(_t11E7);
    image(IMAGE1D<double[3]>) I1207#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t120A#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img120C#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1207);
    real camDist1213#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt11BC,camEye11BD);
    globals.camDist10F2 = camDist1213;
    tensor[3] camN1218#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD);
    globals.camN10F3 = camN1218;
    tensor[3] camU121D#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB);
    globals.camU10F4 = camU121D;
    tensor[3] camV1220#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD);
    globals.camV10F5 = camV1220;
    real _t1223#2 = 0.314159265358979323846264338327950288e1;
    real _t1227#2 = 0.36e3;
    real camVmax122D#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV11BA,_t1223,_t1227,camAt11BC,camEye11BD);
    globals.camVmax10F6 = camVmax122D;
    real _t1230#1 = IntToReal(iresU11B9);
    real _t1234#1 = IntToReal(iresV11B8);
    real camUmax1236#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV11BA,_t1223,_t1227,camAt11BC,camEye11BD,_t1230,_t1234);
    globals.camUmax10F7 = camUmax1236;
    tensor[3,3] _t1239#1 = <tensor[3,3]>[camU121D,camV1220,camN1218];
    tensor[3] light123F#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1239,lightVsp11B7,lightVsp11B7);
    globals.light10F8 = light123F;
    return
## strand
  strand raycast (int ui1261#2, int vi1262#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12CB:  preds = []
        int iresU1275#1 = globals.iresU1090;
        int iresV1274#1 = globals.iresV1091;
        real camNear1273#1 = globals.camNear1092;
        real camDist1272#1 = globals.camDist10F2;
        tensor[3] camN1271#1 = globals.camN10F3;
        tensor[3] camU1270#1 = globals.camU10F4;
        tensor[3] camV126F#1 = globals.camV10F5;
        real camVmax126E#4 = globals.camVmax10F6;
        real camUmax126D#4 = globals.camUmax10F7;
        real _t128B#4 = -0.5e0;
        real _t128D#2 = IntToReal(ui1261);
        real _t128F#2 = IntToReal(iresU1275);
        real _t1291#4 = 0.5e0;
        real rayU1295#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax126D,camUmax126D,_t128B,_t128D,_t128F,_t1291);
        real _t129B#2 = IntToReal(vi1262);
        real _t129D#2 = IntToReal(iresV1274);
        real rayV12A3#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax126E,camVmax126E,_t128B,_t129B,_t129D,_t1291);
        tensor[3] rayVec12AF#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1271,camUmax126D,camUmax126D,_t128B,_t128D,_t128F,_t1291,camU1270,camVmax126E,camVmax126E,_t128B,_t129B,_t129D,_t1291,camV126F,camDist1272);
        real transp12B1#1 = 0.1e1;
        real _t12B3#8 = 0.e0;
        tensor[3] rgb12B9#1 = <tensor[3]>[_t12B3,_t12B3,_t12B3];
        tensor[4] rgba12C3#1 = <tensor[4]>[_t12B3,_t12B3,_t12B3,_t12B3];
        self.rayU = rayU1295;
        self.rayV = rayV12A3;
        self.rayN = camNear1273;
        self.rayVec = rayVec12AF;
        self.transp = transp12B1;
        self.rgb = rgb12B9;
        self.rgba = rgba12C3;
        self.gray = _t12B3;
        self.ui = ui1261;
        self.vi = vi1262;
        return
    end state init
    method update
        ENTRY13E9:  preds = []
          femData:Mesh a12E6#1 = globals.a1087;
          real thick12E5#2 = globals.thick108B;
          tensor[3] camEye12E4#1 = globals.camEye108C;
          real camNear12E3#1 = globals.camNear1092;
          real camFar12E2#2 = globals.camFar1093;
          real refStep12E1#1 = globals.refStep1094;
          real rayStep12E0#2 = globals.rayStep1095;
          real phongKa12DF#1 = globals.phongKa1097;
          real phongKd12DE#1 = globals.phongKd1098;
          bool debug12DD#1 = globals.debug1099;
          int su12DC#1 = globals.su109A;
          int sv12DB#1 = globals.sv109B;
          tensor[3] light12D7#1 = globals.light10F8;
          real rayN12F9#4 = self.rayN;
          tensor[3] rayVec12FA#2 = self.rayVec;
          real transp12FB#10 = self.transp;
          tensor[3] rgb12FC#9 = self.rgb;
          int ui12FF#1 = self.ui;
          int vi1300#1 = self.vi;
          if debug12DD then goto ASSIGN130E else goto JOIN130B
        ASSIGN130E:  preds = [COND131D]
          bool _t130D#1 = NEQ<int>(ui12FF,su12DC);
          if _t130D then goto ASSIGN1312 else goto ASSIGN1314
        ASSIGN1312:  preds = [COND1315]
          bool _t1310#1 = true;
          goto JOIN130F
        JOIN130F:  preds = [ASSIGN1312,ASSIGN1314]
          bool _t1311#1 = phi(_t1310,_t1313)
          if _t1311 then goto STABILIZE1317 else goto JOIN1316
        STABILIZE1317:  preds = [COND131C]
          stabilize
          goto JOIN1316
        JOIN1316:  preds = [*STABILIZE1317,COND131C]
          goto JOIN130B
        JOIN130B:  preds = [JOIN1316,COND131D]
          tensor[3] x1320#11 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye12E4,rayN12F9,rayVec12FA);
          real _t1322#8 = 0.e0;
          real _t1324#2 = TensorIndex<tensor[3],[0]>(x1320);
          bool _t1326#1 = LTE<real>(_t1322,_t1324);
          if _t1326 then goto ASSIGN132C else goto JOIN1328
        ASSIGN132C:  preds = [COND13CF]
          real _t132B#13 = 0.1e1;
          bool _t132D#1 = LTE<real>(_t1324,_t132B);
          if _t132D then goto ASSIGN1333 else goto JOIN132F
        ASSIGN1333:  preds = [COND13CC]
          real _t1332#2 = TensorIndex<tensor[3],[1]>(x1320);
          bool _t1334#1 = LTE<real>(_t1322,_t1332);
          if _t1334 then goto ASSIGN1457 else goto JOIN1336
        ASSIGN1457:  preds = [COND13C9]
          bool _t133B#1 = LTE<real>(_t1332,_t132B);
          if _t133B then goto ASSIGN1341 else goto JOIN133D
        ASSIGN1341:  preds = [COND13C6]
          real _t1340#2 = TensorIndex<tensor[3],[2]>(x1320);
          bool _t1342#1 = LTE<real>(_t1322,_t1340);
          if _t1342 then goto ASSIGN1459 else goto JOIN1344
        ASSIGN1459:  preds = [COND13C3]
          bool _t1349#1 = LTE<real>(_t1340,_t132B);
          if _t1349 then goto ASSIGN134D else goto JOIN134B
        ASSIGN134D:  preds = [COND13C0]
          femData:MeshPos p134C#1 = findPos11A4 (a12E6,x1320);
          bool _t134E#1 = ExtractFemItem<bool,Valid(MeshPos)>(p134C);
          if _t134E then goto ASSIGN1361 else goto JOIN1350
        ASSIGN1361:  preds = [COND13BD]
          real _t1360#2 = 0.13e1;
          real a1377#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis())[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1322,_t132B,_t1360,_t132B,isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,thick12E5,_t132B);
          bool _t137B#1 = GT<real>(a1377,_t1322);
          if _t137B then goto ASSIGN148F else goto JOIN137D
        ASSIGN148F:  preds = [COND13BA]
          real _t1382#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis())[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t132B,_t1322,_t132B,_t1360,_t132B,isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,thick12E5,_t132B);
          real _t1388#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep12E0,rayVec12FA,refStep12E1);
          real _t138A#2 = MathFn<pow>(_t1382,_t1388);
          real _t138F#1 = 0.11e1;
          real _t1391#1 = 0.7e0;
          real _t1399#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,isoval11BE,_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320,light12D7);
          real shade139B#1 = Max<real>(_t1322,_t1399);
          real _t13A8#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(11A4, 0, 1, 2)⊛Basis())[femInvV(11A4, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t11EB,_t11E7,c11E4,_t11EB,_t11EB,_t11EB,x1320);
          tensor[3] rgb13B0#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb12FC,transp12FB,_t132B,_t138A,_t138F,_t1391,camNear12E3,rayN12F9,camFar12E2,phongKa12DF,phongKd12DE,shade139B,img120C,_t120A,_t13A8);
          real transp13B7#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp12FB,_t132B,_t132B,_t138A);
          goto JOIN137D
        JOIN137D:  preds = [ASSIGN149D,COND13BA]
          tensor[3] rgb13B1#1 = phi(rgb13B0,rgb12FC)
          real transp13B8#1 = phi(transp13B7,transp12FB)
          goto JOIN1350
        JOIN1350:  preds = [JOIN137D,COND13BD]
          tensor[3] rgb13BC#1 = phi(rgb13B1,rgb12FC)
          real transp13BB#1 = phi(transp13B8,transp12FB)
          goto JOIN134B
        JOIN134B:  preds = [JOIN1350,COND13C0]
          tensor[3] rgb13BF#1 = phi(rgb13BC,rgb12FC)
          real transp13BE#1 = phi(transp13BB,transp12FB)
          goto JOIN1344
        JOIN1344:  preds = [JOIN134B,COND13C3]
          tensor[3] rgb13C2#1 = phi(rgb13BF,rgb12FC)
          real transp13C1#1 = phi(transp13BE,transp12FB)
          goto JOIN133D
        JOIN133D:  preds = [JOIN1344,COND13C6]
          tensor[3] rgb13C5#1 = phi(rgb13C2,rgb12FC)
          real transp13C4#1 = phi(transp13C1,transp12FB)
          goto JOIN1336
        JOIN1336:  preds = [JOIN133D,COND13C9]
          tensor[3] rgb13C8#1 = phi(rgb13C5,rgb12FC)
          real transp13C7#1 = phi(transp13C4,transp12FB)
          goto JOIN132F
        JOIN132F:  preds = [JOIN1336,COND13CC]
          tensor[3] rgb13CB#1 = phi(rgb13C8,rgb12FC)
          real transp13CA#1 = phi(transp13C7,transp12FB)
          goto JOIN1328
        JOIN1328:  preds = [JOIN132F,COND13CF]
          tensor[3] rgb13CE#3 = phi(rgb13CB,rgb12FC)
          real transp13CD#2 = phi(transp13CA,transp12FB)
          real _t13D0#1 = 0.1e-1;
          bool _t13D2#1 = LT<real>(transp13CD,_t13D0);
          if _t13D2 then goto SAVE1463 else goto JOIN13D4
        SAVE1463:  preds = [COND13DD]
          self.transp = _t1322;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13D4
        JOIN13D4:  preds = [*STABILIZE13D8,COND13DD]
          real transp13D6#2 = phi(transp13CD)
          bool _t13DE#1 = GT<real>(rayN12F9,camFar12E2);
          if _t13DE then goto SAVE13E3 else goto JOIN13E0
        SAVE13E3:  preds = [COND13E6]
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13E0
        JOIN13E0:  preds = [*STABILIZE13E1,COND13E6]
          real rayN13E7#1 = λ(T0[],T1[])<(T0 + T1)> (rayN12F9,rayStep12E0);
          self.rayN = rayN13E7;
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          active
        ASSIGN1314:  preds = [COND1315]
          bool _t1313#1 = NEQ<int>(vi1300,sv12DB);
          goto JOIN130F
    end update
    method stabilize
        ENTRY142D:  preds = []
          bool debug13F1#1 = globals.debug1099;
          int su13F0#1 = globals.su109A;
          int sv13EF#1 = globals.sv109B;
          real transp13F9#4 = self.transp;
          tensor[3] rgb13FA#3 = self.rgb;
          tensor[4] rgba13FB#1 = self.rgba;
          int ui13FD#1 = self.ui;
          int vi13FE#1 = self.vi;
          real _t1409#4 = 0.1e1;
          real a140B#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1409,transp13F9);
          real _t140D#1 = 0.e0;
          bool _t140F#1 = GT<real>(a140B,_t140D);
          if _t140F then goto ASSIGN1413 else goto JOIN1411
        ASSIGN1413:  preds = [COND1421]
          real _t1412#1 = TensorIndex<tensor[3],[0]>(rgb13FA);
          real _t1414#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1412,_t1409,transp13F9);
          real _t1416#1 = TensorIndex<tensor[3],[1]>(rgb13FA);
          real _t1418#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1416,_t1409,transp13F9);
          real _t141A#1 = TensorIndex<tensor[3],[2]>(rgb13FA);
          real _t141C#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t141A,_t1409,transp13F9);
          tensor[4] rgba141E#1 = <tensor[4]>[_t1414,_t1418,_t141C,a140B];
          goto JOIN1411
        JOIN1411:  preds = [ASSIGN1420,COND1421]
          tensor[4] rgba141F#2 = phi(rgba141E,rgba13FB)
          bool _t1422#1 = EQ<int>(ui13FD,su13F0);
          if _t1422 then goto ASSIGN1426 else goto JOIN1424
        ASSIGN1426:  preds = [COND142C]
          bool _t1425#1 = EQ<int>(vi13FE,sv13EF);
          if _t1425 then goto COND142A else goto JOIN1427
        COND142A:  preds = [COND142B]
          if debug13F1 then goto MASSIGN1429 else goto JOIN1428
        MASSIGN1429:  preds = [COND142A]
          Print<[real,tensor[4]]>(a140B,rgba141F);
          goto JOIN1428
        JOIN1428:  preds = [MASSIGN1429,COND142A]
          goto JOIN1427
        JOIN1427:  preds = [JOIN1428,COND142B]
          goto JOIN1424
        JOIN1424:  preds = [JOIN1427,COND142C]
          self.rgba = rgba141F;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY125F:  preds = []
      int iresU1245#1 = globals.iresU1090;
      int iresV1244#1 = globals.iresV1091;
      int _t1248#2 = 0;
      int _t124A#2 = 1;
      int _t124C#1 = ISub(iresV1244,_t124A);
      int[] _t124E#1 = Range(_t1248,_t124C);
    FOREACH1251:  preds = [ASSIGN124F,NEXT125E]
      foreach (vi1250 in _t124E) on exit goto RETURN1260
      int _t1256#1 = ISub(iresU1245,_t124A);
      int[] _t1258#1 = Range(_t1248,_t1256);
    FOREACH125B:  preds = [ASSIGN1434,NEXT125D]
      foreach (ui125A in _t1258) on exit goto NEXT125E
      new raycast(ui125A,vi1250);
      goto FOREACH125B
    NEXT125E:  preds = [FOREACH125B]
      goto FOREACH1251
    RETURN1260:  preds = [FOREACH1251]
      return
#### end program ####
promote _t11EB --> globals._t14A4
promote _t11E7 --> globals._tX14A7
promote c11E4 --> globals.c14AA
promote img120C --> globals.img14B1
promote _t120A --> globals._tXX14B4
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1087 (a) = <no-default>
  input 0b042F_intermedateGlobal1088 (b) = <no-default>
  input 0c0431_intermedateGlobal1089 (c) = <no-default>
  input isoval108A (isoval) = <default>
  input thick108B (thick) = <default>
  input camEye108C (camEye) = <default>
  input camAt108D (camAt) = <default>
  input camUp108E (camUp) = <default>
  input camFOV108F (camFOV) = <default>
  input iresU1090 (iresU) = <default>
  input iresV1091 (iresV) = <default>
  input camNear1092 (camNear) = <default>
  input camFar1093 (camFar) = <default>
  input refStep1094 (refStep) = <default>
  input rayStep1095 (rayStep) = <default>
  input lightVsp1096 (lightVsp) = <default>
  input phongKa1097 (phongKa) = <default>
  input phongKd1098 (phongKd) = <default>
  input debug1099 (debug) = <default>
  input su109A (su) = <default>
  input sv109B (sv) = <default>
  global real camDist10F2
  global tensor[3] camN10F3
  global tensor[3] camU10F4
  global tensor[3] camV10F5
  global real camVmax10F6
  global real camUmax10F7
  global tensor[3] light10F8
  global femData:Mesh _t14A4
  global femData:Space _tX14A7
  global femData:FemFunc c14AA
  global image(IMAGE1D<double[3]>) img14B1
  global kernel _tXX14B4
## functions
  function femData:MeshPos findPos11A4 (femData:Mesh mesh10F9#21, tensor[3] pos10FA#5) {
    ENTRY11A3:  preds = []
      real _t10FB#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1101#5 = <tensor[3]>[_t10FB,_t10FB,_t10FB];
      int newtonInt1103#3 = 0;
      int cellInt1105#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh10F9);
      int _t1107#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh10F9);
      int _t1109#3 = 1;
      int numCell110B#2 = ISub(_t1107,_t1109);
      int _t110F#2 = 16;
      int _t1111#1 = IMul(_t110F,numCell110B);
      int[] _t1113#1 = Range(newtonInt1103,_t1111);
    FOREACH1119:  preds = [ASSIGN143D,NEXT119F]
      foreach (itter1115 in _t1113) on exit goto ASSIGN11A1
        int cellInt1118#12 = phi(cellInt1105,cellInt119D)
        int newtonInt1117#1 = phi(newtonInt1103,newtonInt118F)
        tensor[3] xn1116#7 = phi(xn1101,xn1132)
      tensor[3] xn1132#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      real _t1134#1 = 0.1e-7;
      real _t1136#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3])<Sqrt(Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2)))>(i0=0..2))> (cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      bool _t1138#1 = GTE<real>(_t1134,_t1136);
      if _t1138 then goto ASSIGN113C else goto JOIN113A
    ASSIGN113C:  preds = [COND1184]
      real _t113B#4 = 0.1e1;
      tensor[3] _t1143#1 = <tensor[3]>[_t113B,_t113B,_t113B];
      real _t1145#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1143,xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      bool _t1147#1 = GT<real>(_t113B,_t1145);
      real _t1149#3 = 0.1e-8;
      tensor[3] _t114F#1 = <tensor[3]>[_t1149,_t1149,_t1149];
      tensor[3] _t1151#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t114F,xn1116,cellInt1118,mesh10F9,mesh10F9,xn1101,pos10FA,cellInt1118,mesh10F9,mesh10F9,xn1116);
      real _t1153#1 = TensorIndex<tensor[3],[0]>(_t1151);
      real _t1155#3 = -0.e0;
      bool _t1157#1 = GT<real>(_t1153,_t1155);
      real _t1163#1 = TensorIndex<tensor[3],[1]>(_t1151);
      bool _t1167#1 = GT<real>(_t1163,_t1155);
      real _t1173#1 = TensorIndex<tensor[3],[2]>(_t1151);
      bool _t1177#1 = GT<real>(_t1173,_t1155);
      bool _t1179#1 = BAnd(_t1167,_t1177);
      bool _t117B#1 = BAnd(_t1157,_t1179);
      bool _t117D#1 = BAnd(_t1147,_t117B);
      if _t117D then goto ASSIGN1181 else goto JOIN117F
    ASSIGN1181:  preds = [COND1183]
      femData:MeshPos _t1180#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh10F9,cellInt1118,xn1132,pos10FA);
      return _t1180
      goto JOIN117F
    JOIN117F:  preds = [*RETURN(_t1180)1182,COND1183]
      goto JOIN113A
    JOIN113A:  preds = [JOIN117F,COND1184]
      int newtonInt1187#2 = IAdd(newtonInt1117,_t1109);
      bool _t118B#1 = GTE<int>(newtonInt1187,_t110F);
      if _t118B then goto ASSIGN1192 else goto JOIN118D
    ASSIGN1192:  preds = [COND119E]
      bool _t1191#1 = GTE<int>(cellInt1118,numCell110B);
      if _t1191 then goto ASSIGN1195 else goto ASSIGN1448
    ASSIGN1195:  preds = [COND119C]
      femData:MeshPos _t1194#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t1194
      goto JOIN1193
    JOIN1193:  preds = [*RETURN(_t1194)1196,ASSIGN1448]
      int cellInt119A#1 = phi(cellInt1199)
      goto JOIN118D
    JOIN118D:  preds = [JOIN1193,COND119E]
      int cellInt119D#1 = phi(cellInt119A,cellInt1118)
      int newtonInt118F#1 = phi(newtonInt1103,newtonInt1187)
      goto FOREACH1119
    ASSIGN1448:  preds = [COND119C]
      int cellInt1199#1 = IAdd(cellInt1118,_t1109);
      goto JOIN1193
    ASSIGN11A1:  preds = [FOREACH1119]
      femData:MeshPos _t11A0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh10F9);
      return _t11A0
}
  function int[2] nextCell411B6 (int faceIdx11A5#1, int cell11A6#1, femData:Mesh mesh11A7#1) {
    ENTRY11B5:  preds = []
      int _t11A8#1 = 8;
      int _t11AA#1 = IMul(cell11A6,_t11A8);
      int _t11AC#1 = 2;
      int _t11AE#1 = IMul(faceIdx11A5,_t11AC);
      int _t11B0#1 = IAdd(_t11AA,_t11AE);
      int[2] _t11B2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh11A7,_t11B0);
      return _t11B2
}
## input initialization
  ENTRY10EA:  preds = []
    real isoval109C#1 = 0.2e0;
    globals.isoval108A = isoval109C;
    real thick109F#1 = 0.7e-1;
    globals.thick108B = thick109F;
    real _t10A2#2 = -0.3e1;
    real _t10A6#1 = 0.3e1;
    tensor[3] camEye10A8#1 = <tensor[3]>[_t10A2,_t10A2,_t10A6];
    globals.camEye108C = camEye10A8;
    real _t10AB#3 = 0.5e0;
    tensor[3] camAt10B1#1 = <tensor[3]>[_t10AB,_t10AB,_t10AB];
    globals.camAt108D = camAt10B1;
    real _t10B4#2 = 0.e0;
    real _t10B8#2 = 0.1e1;
    tensor[3] camUp10BA#2 = <tensor[3]>[_t10B4,_t10B4,_t10B8];
    globals.camUp108E = camUp10BA;
    real camFOV10BD#1 = 0.137e2;
    globals.camFOV108F = camFOV10BD;
    int iresU10C0#2 = 500;
    globals.iresU1090 = iresU10C0;
    globals.iresV1091 = iresU10C0;
    real camNear10C6#1 = -0.2e1;
    globals.camNear1092 = camNear10C6;
    real camFar10C9#1 = 0.5e1;
    globals.camFar1093 = camFar10C9;
    globals.refStep1094 = _t10B8;
    real rayStep10CF#1 = 0.1e-1;
    globals.rayStep1095 = rayStep10CF;
    globals.lightVsp1096 = camUp10BA;
    real phongKa10DB#1 = 0.1e0;
    globals.phongKa1097 = phongKa10DB;
    real phongKd10DE#1 = 0.9e0;
    globals.phongKd1098 = phongKd10DE;
    bool debug10E1#1 = false;
    globals.debug1099 = debug10E1;
    int su10E4#2 = 250;
    globals.su109A = su10E4;
    globals.sv109B = su10E4;
    return
## global-variable initialization
  ENTRY1242:  preds = []
    femData:Mesh a11C1#3 = globals.a1087;
    femData:Space 0b042F_intermedateGlobal11C0#1 = globals.0b042F_intermedateGlobal1088;
    femData:FemFunc 0c0431_intermedateGlobal11BF#1 = globals.0c0431_intermedateGlobal1089;
    real isoval11BE#0 = globals.isoval108A;
    tensor[3] camEye11BD#15 = globals.camEye108C;
    tensor[3] camAt11BC#15 = globals.camAt108D;
    tensor[3] camUp11BB#4 = globals.camUp108E;
    real camFOV11BA#2 = globals.camFOV108F;
    int iresU11B9#1 = globals.iresU1090;
    int iresV11B8#1 = globals.iresV1091;
    tensor[3] lightVsp11B7#2 = globals.lightVsp1096;
    int _t11CD#1 = 0;
    int _t11CF#1 = 1;
    int _t11D1#1 = ExtractFemItem<int,NumCell(Mesh)>(a11C1);
    int _t11D3#1 = ISub(_t11D1,_t11CF);
    int[] _t11D5#1 = Range(_t11CD,_t11D3);
    femData:MeshCell[] _t11D7#1 = <femData:MeshCell[]>{};
  FOREACH11DB:  preds = [ASSIGN11D8,NEXT11E0]
    foreach (_t11D9 in _t11D5) on exit goto ASSIGN11E2
      femData:MeshCell[] _t11DA#1 = phi(_t11D7,_t11DE)
    femData:MeshCell _t11DC#1 = LoadFem<femData:MeshCell>(a11C1,_t11D9);
    femData:MeshCell[] _t11DE#1 = Append<femData:MeshCell>(_t11DA,_t11DC);
    goto FOREACH11DB
  ASSIGN11E2:  preds = [FOREACH11DB]
    femData:Space b11E1#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal11C0,a11C1);
    femData:FemFunc c11E4#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal11BF,b11E1);
    femData:Space _t11E7#2 = ExtractFem<femData:Space,femData:FemFunc>(c11E4);
    femData:Mesh _t11EB#1 = ExtractFem<femData:Mesh,femData:Space>(_t11E7);
    image(IMAGE1D<double[3]>) I1207#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t120A#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img120C#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1207);
    real camDist1213#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt11BC,camEye11BD);
    globals.camDist10F2 = camDist1213;
    tensor[3] camN1218#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD);
    globals.camN10F3 = camN1218;
    tensor[3] camU121D#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB);
    globals.camU10F4 = camU121D;
    tensor[3] camV1220#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD,camUp11BB,camAt11BC,camEye11BD,camAt11BC,camEye11BD);
    globals.camV10F5 = camV1220;
    real _t1223#2 = 0.314159265358979323846264338327950288e1;
    real _t1227#2 = 0.36e3;
    real camVmax122D#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV11BA,_t1223,_t1227,camAt11BC,camEye11BD);
    globals.camVmax10F6 = camVmax122D;
    real _t1230#1 = IntToReal(iresU11B9);
    real _t1234#1 = IntToReal(iresV11B8);
    real camUmax1236#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV11BA,_t1223,_t1227,camAt11BC,camEye11BD,_t1230,_t1234);
    globals.camUmax10F7 = camUmax1236;
    tensor[3,3] _t1239#1 = <tensor[3,3]>[camU121D,camV1220,camN1218];
    tensor[3] light123F#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t1239,lightVsp11B7,lightVsp11B7);
    globals.light10F8 = light123F;
    globals._t14A4 = _t11EB;
    globals._tX14A7 = _t11E7;
    globals.c14AA = c11E4;
    globals.img14B1 = img120C;
    globals._tXX14B4 = _t120A;
    return
## strand
  strand raycast (int ui1261#2, int vi1262#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY12CB:  preds = []
        int iresU1275#1 = globals.iresU1090;
        int iresV1274#1 = globals.iresV1091;
        real camNear1273#1 = globals.camNear1092;
        real camDist1272#1 = globals.camDist10F2;
        tensor[3] camN1271#1 = globals.camN10F3;
        tensor[3] camU1270#1 = globals.camU10F4;
        tensor[3] camV126F#1 = globals.camV10F5;
        real camVmax126E#4 = globals.camVmax10F6;
        real camUmax126D#4 = globals.camUmax10F7;
        real _t128B#4 = -0.5e0;
        real _t128D#2 = IntToReal(ui1261);
        real _t128F#2 = IntToReal(iresU1275);
        real _t1291#4 = 0.5e0;
        real rayU1295#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax126D,camUmax126D,_t128B,_t128D,_t128F,_t1291);
        real _t129B#2 = IntToReal(vi1262);
        real _t129D#2 = IntToReal(iresV1274);
        real rayV12A3#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax126E,camVmax126E,_t128B,_t129B,_t129D,_t1291);
        tensor[3] rayVec12AF#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1271,camUmax126D,camUmax126D,_t128B,_t128D,_t128F,_t1291,camU1270,camVmax126E,camVmax126E,_t128B,_t129B,_t129D,_t1291,camV126F,camDist1272);
        real transp12B1#1 = 0.1e1;
        real _t12B3#8 = 0.e0;
        tensor[3] rgb12B9#1 = <tensor[3]>[_t12B3,_t12B3,_t12B3];
        tensor[4] rgba12C3#1 = <tensor[4]>[_t12B3,_t12B3,_t12B3,_t12B3];
        self.rayU = rayU1295;
        self.rayV = rayV12A3;
        self.rayN = camNear1273;
        self.rayVec = rayVec12AF;
        self.transp = transp12B1;
        self.rgb = rgb12B9;
        self.rgba = rgba12C3;
        self.gray = _t12B3;
        self.ui = ui1261;
        self.vi = vi1262;
        return
    end state init
    method update
        ENTRY13E9:  preds = []
          real isoval14A2#6 = globals.isoval108A;
          femData:Mesh _t14A5#28 = globals._t14A4;
          femData:Space _t14A8#7 = globals._tX14A7;
          femData:FemFunc c14AB#7 = globals.c14AA;
          image(IMAGE1D<double[3]>) img14B2#1 = globals.img14B1;
          kernel _t14B5#1 = globals._tXX14B4;
          femData:Mesh a12E6#1 = globals.a1087;
          real thick12E5#2 = globals.thick108B;
          tensor[3] camEye12E4#1 = globals.camEye108C;
          real camNear12E3#1 = globals.camNear1092;
          real camFar12E2#2 = globals.camFar1093;
          real refStep12E1#1 = globals.refStep1094;
          real rayStep12E0#2 = globals.rayStep1095;
          real phongKa12DF#1 = globals.phongKa1097;
          real phongKd12DE#1 = globals.phongKd1098;
          bool debug12DD#1 = globals.debug1099;
          int su12DC#1 = globals.su109A;
          int sv12DB#1 = globals.sv109B;
          tensor[3] light12D7#1 = globals.light10F8;
          real rayN12F9#4 = self.rayN;
          tensor[3] rayVec12FA#2 = self.rayVec;
          real transp12FB#10 = self.transp;
          tensor[3] rgb12FC#9 = self.rgb;
          int ui12FF#1 = self.ui;
          int vi1300#1 = self.vi;
          if debug12DD then goto ASSIGN130E else goto JOIN130B
        ASSIGN130E:  preds = [COND131D]
          bool _t130D#1 = NEQ<int>(ui12FF,su12DC);
          if _t130D then goto ASSIGN1312 else goto ASSIGN1314
        ASSIGN1312:  preds = [COND1315]
          bool _t1310#1 = true;
          goto JOIN130F
        JOIN130F:  preds = [ASSIGN1312,ASSIGN1314]
          bool _t1311#1 = phi(_t1310,_t1313)
          if _t1311 then goto STABILIZE1317 else goto JOIN1316
        STABILIZE1317:  preds = [COND131C]
          stabilize
          goto JOIN1316
        JOIN1316:  preds = [*STABILIZE1317,COND131C]
          goto JOIN130B
        JOIN130B:  preds = [JOIN1316,COND131D]
          tensor[3] x1320#11 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye12E4,rayN12F9,rayVec12FA);
          real _t1322#8 = 0.e0;
          real _t1324#2 = TensorIndex<tensor[3],[0]>(x1320);
          bool _t1326#1 = LTE<real>(_t1322,_t1324);
          if _t1326 then goto ASSIGN132C else goto JOIN1328
        ASSIGN132C:  preds = [COND13CF]
          real _t132B#13 = 0.1e1;
          bool _t132D#1 = LTE<real>(_t1324,_t132B);
          if _t132D then goto ASSIGN1333 else goto JOIN132F
        ASSIGN1333:  preds = [COND13CC]
          real _t1332#2 = TensorIndex<tensor[3],[1]>(x1320);
          bool _t1334#1 = LTE<real>(_t1322,_t1332);
          if _t1334 then goto ASSIGN1457 else goto JOIN1336
        ASSIGN1457:  preds = [COND13C9]
          bool _t133B#1 = LTE<real>(_t1332,_t132B);
          if _t133B then goto ASSIGN1341 else goto JOIN133D
        ASSIGN1341:  preds = [COND13C6]
          real _t1340#2 = TensorIndex<tensor[3],[2]>(x1320);
          bool _t1342#1 = LTE<real>(_t1322,_t1340);
          if _t1342 then goto ASSIGN1459 else goto JOIN1344
        ASSIGN1459:  preds = [COND13C3]
          bool _t1349#1 = LTE<real>(_t1340,_t132B);
          if _t1349 then goto ASSIGN134D else goto JOIN134B
        ASSIGN134D:  preds = [COND13C0]
          femData:MeshPos p134C#1 = findPos11A4 (a12E6,x1320);
          bool _t134E#1 = ExtractFemItem<bool,Valid(MeshPos)>(p134C);
          if _t134E then goto ASSIGN1361 else goto JOIN1350
        ASSIGN1361:  preds = [COND13BD]
          real _t1360#2 = 0.13e1;
          real a1377#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis())[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(11A4, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(11A4, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1322,_t132B,_t1360,_t132B,isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,thick12E5,_t132B);
          bool _t137B#1 = GT<real>(a1377,_t1322);
          if _t137B then goto ASSIGN14AD else goto JOIN137D
        ASSIGN14AD:  preds = [COND13BA]
          real _t1382#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis())[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(11A4, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(11A4, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(11A4, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(11A4, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(11A4, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t132B,_t1322,_t132B,_t1360,_t132B,isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,thick12E5,_t132B);
          real _t1388#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep12E0,rayVec12FA,refStep12E1);
          real _t138A#2 = MathFn<pow>(_t1382,_t1388);
          real _t138F#1 = 0.11e1;
          real _t1391#1 = 0.7e0;
          real _t1399#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(11A4, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(11A4, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(11A4, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(11A4, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(11A4, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,isoval14A2,_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320,light12D7);
          real shade139B#1 = Max<real>(_t1322,_t1399);
          real _t13A8#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(11A4, 0, 1, 2)⊛Basis())[femInvV(11A4, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t14A5,_t14A8,c14AB,_t14A5,_t14A5,_t14A5,x1320);
          tensor[3] rgb13B0#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb12FC,transp12FB,_t132B,_t138A,_t138F,_t1391,camNear12E3,rayN12F9,camFar12E2,phongKa12DF,phongKd12DE,shade139B,img14B2,_t14B5,_t13A8);
          real transp13B7#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp12FB,_t132B,_t132B,_t138A);
          goto JOIN137D
        JOIN137D:  preds = [ASSIGN149D,COND13BA]
          tensor[3] rgb13B1#1 = phi(rgb13B0,rgb12FC)
          real transp13B8#1 = phi(transp13B7,transp12FB)
          goto JOIN1350
        JOIN1350:  preds = [JOIN137D,COND13BD]
          tensor[3] rgb13BC#1 = phi(rgb13B1,rgb12FC)
          real transp13BB#1 = phi(transp13B8,transp12FB)
          goto JOIN134B
        JOIN134B:  preds = [JOIN1350,COND13C0]
          tensor[3] rgb13BF#1 = phi(rgb13BC,rgb12FC)
          real transp13BE#1 = phi(transp13BB,transp12FB)
          goto JOIN1344
        JOIN1344:  preds = [JOIN134B,COND13C3]
          tensor[3] rgb13C2#1 = phi(rgb13BF,rgb12FC)
          real transp13C1#1 = phi(transp13BE,transp12FB)
          goto JOIN133D
        JOIN133D:  preds = [JOIN1344,COND13C6]
          tensor[3] rgb13C5#1 = phi(rgb13C2,rgb12FC)
          real transp13C4#1 = phi(transp13C1,transp12FB)
          goto JOIN1336
        JOIN1336:  preds = [JOIN133D,COND13C9]
          tensor[3] rgb13C8#1 = phi(rgb13C5,rgb12FC)
          real transp13C7#1 = phi(transp13C4,transp12FB)
          goto JOIN132F
        JOIN132F:  preds = [JOIN1336,COND13CC]
          tensor[3] rgb13CB#1 = phi(rgb13C8,rgb12FC)
          real transp13CA#1 = phi(transp13C7,transp12FB)
          goto JOIN1328
        JOIN1328:  preds = [JOIN132F,COND13CF]
          tensor[3] rgb13CE#3 = phi(rgb13CB,rgb12FC)
          real transp13CD#2 = phi(transp13CA,transp12FB)
          real _t13D0#1 = 0.1e-1;
          bool _t13D2#1 = LT<real>(transp13CD,_t13D0);
          if _t13D2 then goto SAVE1463 else goto JOIN13D4
        SAVE1463:  preds = [COND13DD]
          self.transp = _t1322;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13D4
        JOIN13D4:  preds = [*STABILIZE13D8,COND13DD]
          real transp13D6#2 = phi(transp13CD)
          bool _t13DE#1 = GT<real>(rayN12F9,camFar12E2);
          if _t13DE then goto SAVE13E3 else goto JOIN13E0
        SAVE13E3:  preds = [COND13E6]
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          stabilize
          goto JOIN13E0
        JOIN13E0:  preds = [*STABILIZE13E1,COND13E6]
          real rayN13E7#1 = λ(T0[],T1[])<(T0 + T1)> (rayN12F9,rayStep12E0);
          self.rayN = rayN13E7;
          self.transp = transp13D6;
          self.rgb = rgb13CE;
          active
        ASSIGN1314:  preds = [COND1315]
          bool _t1313#1 = NEQ<int>(vi1300,sv12DB);
          goto JOIN130F
    end update
    method stabilize
        ENTRY142D:  preds = []
          bool debug13F1#1 = globals.debug1099;
          int su13F0#1 = globals.su109A;
          int sv13EF#1 = globals.sv109B;
          real transp13F9#4 = self.transp;
          tensor[3] rgb13FA#3 = self.rgb;
          tensor[4] rgba13FB#1 = self.rgba;
          int ui13FD#1 = self.ui;
          int vi13FE#1 = self.vi;
          real _t1409#4 = 0.1e1;
          real a140B#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1409,transp13F9);
          real _t140D#1 = 0.e0;
          bool _t140F#1 = GT<real>(a140B,_t140D);
          if _t140F then goto ASSIGN1413 else goto JOIN1411
        ASSIGN1413:  preds = [COND1421]
          real _t1412#1 = TensorIndex<tensor[3],[0]>(rgb13FA);
          real _t1414#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1412,_t1409,transp13F9);
          real _t1416#1 = TensorIndex<tensor[3],[1]>(rgb13FA);
          real _t1418#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1416,_t1409,transp13F9);
          real _t141A#1 = TensorIndex<tensor[3],[2]>(rgb13FA);
          real _t141C#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t141A,_t1409,transp13F9);
          tensor[4] rgba141E#1 = <tensor[4]>[_t1414,_t1418,_t141C,a140B];
          goto JOIN1411
        JOIN1411:  preds = [ASSIGN1420,COND1421]
          tensor[4] rgba141F#2 = phi(rgba141E,rgba13FB)
          bool _t1422#1 = EQ<int>(ui13FD,su13F0);
          if _t1422 then goto ASSIGN1426 else goto JOIN1424
        ASSIGN1426:  preds = [COND142C]
          bool _t1425#1 = EQ<int>(vi13FE,sv13EF);
          if _t1425 then goto COND142A else goto JOIN1427
        COND142A:  preds = [COND142B]
          if debug13F1 then goto MASSIGN1429 else goto JOIN1428
        MASSIGN1429:  preds = [COND142A]
          Print<[real,tensor[4]]>(a140B,rgba141F);
          goto JOIN1428
        JOIN1428:  preds = [MASSIGN1429,COND142A]
          goto JOIN1427
        JOIN1427:  preds = [JOIN1428,COND142B]
          goto JOIN1424
        JOIN1424:  preds = [JOIN1427,COND142C]
          self.rgba = rgba141F;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY125F:  preds = []
      int iresU1245#1 = globals.iresU1090;
      int iresV1244#1 = globals.iresV1091;
      int _t1248#2 = 0;
      int _t124A#2 = 1;
      int _t124C#1 = ISub(iresV1244,_t124A);
      int[] _t124E#1 = Range(_t1248,_t124C);
    FOREACH1251:  preds = [ASSIGN124F,NEXT125E]
      foreach (vi1250 in _t124E) on exit goto RETURN1260
      int _t1256#1 = ISub(iresU1245,_t124A);
      int[] _t1258#1 = Range(_t1248,_t1256);
    FOREACH125B:  preds = [ASSIGN1434,NEXT125D]
      foreach (ui125A in _t1258) on exit goto NEXT125E
      new raycast(ui125A,vi1250);
      goto FOREACH125B
    NEXT125E:  preds = [FOREACH125B]
      goto FOREACH1251
    RETURN1260:  preds = [FOREACH1251]
      return
#### end program ####
promote I1550 --> globals.I1A7C
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14C2 (a) = <no-default>
  input 0b042F_intermedateGlobal14C3 (b) = <no-default>
  input 0c0431_intermedateGlobal14C4 (c) = <no-default>
  input isoval14C5 (isoval) = <default>
  input thick14C6 (thick) = <default>
  input camEye14C7 (camEye) = <default>
  input camAt14C8 (camAt) = <default>
  input camUp14C9 (camUp) = <default>
  input camFOV14CA (camFOV) = <default>
  input iresU14CB (iresU) = <default>
  input iresV14CC (iresV) = <default>
  input camNear14CD (camNear) = <default>
  input camFar14CE (camFar) = <default>
  input refStep14CF (refStep) = <default>
  input rayStep14D0 (rayStep) = <default>
  input lightVsp14D1 (lightVsp) = <default>
  input phongKa14D2 (phongKa) = <default>
  input phongKd14D3 (phongKd) = <default>
  input debug14D4 (debug) = <default>
  input su14D5 (su) = <default>
  input sv14D6 (sv) = <default>
  global real camDist14D7
  global tensor[3] camN14D8
  global tensor[3] camU14D9
  global tensor[3] camV14DA
  global real camVmax14DB
  global real camUmax14DC
  global tensor[3] light14DD
  global femData:Mesh _t14DE
  global femData:Space _tX14DF
  global femData:FemFunc c14E0
  global image(IMAGE1D<double[3]>) img14E1
  global kernel _tXX14E2
  global image(IMAGE1D<double[3]>) I1A7C
## functions
  function femData:MeshPos findPos16C1 (femData:Mesh mesh16C2#33, tensor[3] pos16C3#5) {
    ENTRY16C4:  preds = []
      real _t16C5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16C7#49 = <tensor[3]>[_t16C5,_t16C5,_t16C5];
      int newtonInt16C9#3 = 0;
      int cellInt16CB#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16C2);
      int _t16CD#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16C2);
      int _t16CF#3 = 1;
      int numCell16D1#2 = ISub(_t16CD,_t16CF);
      int _t16D3#2 = 16;
      int _t16D5#1 = IMul(_t16D3,numCell16D1);
      int[] _t16D7#1 = Range(newtonInt16C9,_t16D5);
    FOREACH16DA:  preds = [ASSIGN16D8,NEXT17FE]
      foreach (itter16D9 in _t16D7) on exit goto ASSIGN1801
        int cellInt16DD#28 = phi(cellInt16CB,cellInt17FB)
        int newtonInt17ED#1 = phi(newtonInt16C9,newtonInt17FC)
        tensor[3] xn16DC#15 = phi(xn16C7,xn16DB)
      int[4] femIndicies16EE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs16EF#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies16EE);
      tensor[4,3] dofs16ED#1 = femDofs16EF;
      tensor[3,4] basisResult16F0#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_1016DE#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,dofs16ED,basisResult16F0,xn16C7);
      tensor[3,3,3] op1_e3_l_1216DF#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE);
      tensor[3,3,3] op1_e3_l_1316E0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE,op1_e3_l_1216DF);
      tensor[4,3] dofs16F1#1 = femDofs16EF;
      tensor[3,4] basisResult16F2#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_1416E1#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs16F1,basisResult16F2,xn16C7);
      tensor[4,3] dofs16F3#1 = femDofs16EF;
      tensor[3,4] basisResult16F4#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_1516E2#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs16F3,basisResult16F4,xn16C7);
      tensor[4,3] dofs16F5#1 = femDofs16EF;
      tensor[3,4] basisResult16F6#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_1616E3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs16F5,basisResult16F6,xn16C7);
      tensor[3,3] op1_e3_l_1716E4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616E3);
      tensor[3] op1_e3_l_1816E5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516E2,op1_e3_l_1716E4);
      real op1_e3_l_1916E6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416E1,op1_e3_l_1816E5);
      tensor[3,3] op1_e3_l_2016E7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316E0);
      real op1_e3_l_2116E8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916E6);
      tensor[4,3] dofs16F7#1 = femDofs16EF;
      tensor[4] basisResult16F8#1 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_2216E9#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,dofs16F7,basisResult16F8,xn16DC);
      tensor[3,3] op1_e3_l_2316EA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016E7,op1_e3_l_2116E8);
      tensor[3] op1_e3_l_2416EB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_2216E9);
      tensor[3] op1_e3_l_2516EC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_2416EB);
      tensor[3] xn16DB#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_2516EC);
      real _t1715#1 = 0.1e-7;
      int[4] femIndicies1729#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs172A#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies1729);
      tensor[4,3] dofs1728#1 = femDofs172A;
      tensor[3,4] basisResult172B#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_91718#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,dofs1728,basisResult172B,xn16C7);
      tensor[3,3,3] op1_e3_l_111719#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_91718);
      tensor[3,3,3] op1_e3_l_12171A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_91718,op1_e3_l_111719);
      tensor[4,3] dofs172C#1 = femDofs172A;
      tensor[3,4] basisResult172D#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_13171B#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs172C,basisResult172D,xn16C7);
      tensor[4,3] dofs172E#1 = femDofs172A;
      tensor[3,4] basisResult172F#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_14171C#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs172E,basisResult172F,xn16C7);
      tensor[4,3] dofs1730#1 = femDofs172A;
      tensor[3,4] basisResult1731#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_15171D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs1730,basisResult1731,xn16C7);
      tensor[3,3] op1_e3_l_16171E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_15171D);
      tensor[3] op1_e3_l_17171F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_14171C,op1_e3_l_16171E);
      real op1_e3_l_181720#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_13171B,op1_e3_l_17171F);
      tensor[3,3] op1_e3_l_191721#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_12171A);
      real op1_e3_l_201722#1 = λ(T0[])<(2 * T0)> (op1_e3_l_181720);
      tensor[4,3] dofs1732#1 = femDofs172A;
      tensor[4] basisResult1733#1 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_211723#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt16DD,mesh16C2,xn16DC,dofs1732,basisResult1733,xn16DC);
      tensor[3,3] op1_e3_l_221724#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_191721,op1_e3_l_201722);
      tensor[3] op1_e3_l_231725#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_211723);
      tensor[3] op1_e3_l_391726#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_221724,op1_e3_l_231725);
      real op1_e3_l_411727#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_391726,op1_e3_l_391726);
      real _t1717#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_411727);
      bool _t1751#1 = GTE<real>(_t1715,_t1717);
      if _t1751 then goto ASSIGN1755 else goto JOIN17EB
    ASSIGN1755:  preds = [COND1753]
      real _t1754#4 = 0.1e1;
      tensor[3] _t1756#1 = <tensor[3]>[_t1754,_t1754,_t1754];
      int[4] femIndicies176A#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs176B#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies176A);
      tensor[4,3] dofs1769#1 = femDofs176B;
      tensor[3,4] basisResult176C#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_111759#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,dofs1769,basisResult176C,xn16C7);
      tensor[3,3,3] op1_e3_l_13175A#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111759);
      tensor[3,3,3] op1_e3_l_14175B#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111759,op1_e3_l_13175A);
      tensor[4,3] dofs176D#1 = femDofs176B;
      tensor[3,4] basisResult176E#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_15175C#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs176D,basisResult176E,xn16C7);
      tensor[4,3] dofs176F#1 = femDofs176B;
      tensor[3,4] basisResult1770#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_16175D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs176F,basisResult1770,xn16C7);
      tensor[4,3] dofs1771#1 = femDofs176B;
      tensor[3,4] basisResult1772#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_17175E#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs1771,basisResult1772,xn16C7);
      tensor[3,3] op1_e3_l_18175F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17175E);
      tensor[3] op1_e3_l_191760#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_16175D,op1_e3_l_18175F);
      real op1_e3_l_201761#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_15175C,op1_e3_l_191760);
      tensor[3,3] op1_e3_l_211762#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_14175B);
      real op1_e3_l_221763#1 = λ(T0[])<(2 * T0)> (op1_e3_l_201761);
      tensor[4,3] dofs1773#1 = femDofs176B;
      tensor[4] basisResult1774#1 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_231764#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,dofs1773,basisResult1774,xn16DC);
      tensor[3,3] op1_e3_l_241765#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_211762,op1_e3_l_221763);
      tensor[3] op1_e3_l_251766#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_231764);
      tensor[3] op1_e3_l_261767#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_241765,op1_e3_l_251766);
      tensor[3] op1_e3_l_271768#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_261767);
      real _t1758#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1756,op1_e3_l_271768);
      bool _t1792#1 = GT<real>(_t1754,_t1758);
      real _t1794#3 = 0.1e-8;
      tensor[3] _t1796#1 = <tensor[3]>[_t1794,_t1794,_t1794];
      int[4] femIndicies17AA#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs17AB#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies17AA);
      tensor[4,3] dofs17A9#1 = femDofs17AB;
      tensor[3,4] basisResult17AC#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_111799#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,dofs17A9,basisResult17AC,xn16C7);
      tensor[3,3,3] op1_e3_l_13179A#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111799);
      tensor[3,3,3] op1_e3_l_14179B#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111799,op1_e3_l_13179A);
      tensor[4,3] dofs17AD#1 = femDofs17AB;
      tensor[3,4] basisResult17AE#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_15179C#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs17AD,basisResult17AE,xn16C7);
      tensor[4,3] dofs17AF#1 = femDofs17AB;
      tensor[3,4] basisResult17B0#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_16179D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs17AF,basisResult17B0,xn16C7);
      tensor[4,3] dofs17B1#1 = femDofs17AB;
      tensor[3,4] basisResult17B2#1 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3] probe_l_17179E#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,dofs17B1,basisResult17B2,xn16C7);
      tensor[3,3] op1_e3_l_18179F#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17179E);
      tensor[3] op1_e3_l_1917A0#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_16179D,op1_e3_l_18179F);
      real op1_e3_l_2017A1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_15179C,op1_e3_l_1917A0);
      tensor[3,3] op1_e3_l_2117A2#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_14179B);
      real op1_e3_l_2217A3#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2017A1);
      tensor[4,3] dofs17B3#1 = femDofs17AB;
      tensor[4] basisResult17B4#1 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_2317A4#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,dofs17B3,basisResult17B4,xn16DC);
      tensor[3,3] op1_e3_l_2417A5#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2117A2,op1_e3_l_2217A3);
      tensor[3] op1_e3_l_2517A6#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_2317A4);
      tensor[3] op1_e3_l_2617A7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2417A5,op1_e3_l_2517A6);
      tensor[3] op1_e3_l_2717A8#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_2617A7);
      tensor[3] _t1798#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1796,op1_e3_l_2717A8);
      real _t17D2#1 = TensorIndex<tensor[3],[0]>(_t1798);
      real _t17D4#3 = -0.e0;
      bool _t17D6#1 = GT<real>(_t17D2,_t17D4);
      real _t17D8#1 = TensorIndex<tensor[3],[1]>(_t1798);
      bool _t17DA#1 = GT<real>(_t17D8,_t17D4);
      real _t17DC#1 = TensorIndex<tensor[3],[2]>(_t1798);
      bool _t17DE#1 = GT<real>(_t17DC,_t17D4);
      bool _t17E0#1 = BAnd(_t17DA,_t17DE);
      bool _t17E2#1 = BAnd(_t17D6,_t17E0);
      bool _t17E4#1 = BAnd(_t1792,_t17E2);
      if _t17E4 then goto ASSIGN17E8 else goto JOIN17EA
    ASSIGN17E8:  preds = [COND17E6]
      femData:MeshPos _t17E7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16C2,cellInt16DD,xn16DB,pos16C3);
      return _t17E7
      goto JOIN17EA
    JOIN17EA:  preds = [*RETURN(_t17E7)17E9,COND17E6]
      goto JOIN17EB
    JOIN17EB:  preds = [JOIN17EA,COND1753]
      int newtonInt17EC#2 = IAdd(newtonInt17ED,_t16CF);
      bool _t17EF#1 = GTE<int>(newtonInt17EC,_t16D3);
      if _t17EF then goto ASSIGN17F3 else goto JOIN17FD
    ASSIGN17F3:  preds = [COND17F1]
      bool _t17F2#1 = GTE<int>(cellInt16DD,numCell16D1);
      if _t17F2 then goto ASSIGN17F6 else goto ASSIGN17FF
    ASSIGN17F6:  preds = [COND17F4]
      femData:MeshPos _t17F5#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t17F5
      goto JOIN17FA
    JOIN17FA:  preds = [*RETURN(_t17F5)17F7,ASSIGN17FF]
      int cellInt17F8#1 = phi(cellInt17F9)
      goto JOIN17FD
    JOIN17FD:  preds = [JOIN17FA,COND17F1]
      int cellInt17FB#1 = phi(cellInt17F8,cellInt16DD)
      int newtonInt17FC#1 = phi(newtonInt16C9,newtonInt17EC)
      goto FOREACH16DA
    ASSIGN17FF:  preds = [COND17F4]
      int cellInt17F9#1 = IAdd(cellInt16DD,_t16CF);
      goto JOIN17FA
    ASSIGN1801:  preds = [FOREACH16DA]
      femData:MeshPos _t1800#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t1800
}
## input initialization
  ENTRY14E3:  preds = []
    real isoval14E4#1 = 0.2e0;
    globals.isoval14C5 = isoval14E4;
    real thick14E7#1 = 0.7e-1;
    globals.thick14C6 = thick14E7;
    real _t14EA#2 = -0.3e1;
    real _t14EC#1 = 0.3e1;
    tensor[3] camEye14EE#1 = <tensor[3]>[_t14EA,_t14EA,_t14EC];
    globals.camEye14C7 = camEye14EE;
    real _t14F1#3 = 0.5e0;
    tensor[3] camAt14F3#1 = <tensor[3]>[_t14F1,_t14F1,_t14F1];
    globals.camAt14C8 = camAt14F3;
    real _t14F6#2 = 0.e0;
    real _t14F8#2 = 0.1e1;
    tensor[3] camUp14FA#2 = <tensor[3]>[_t14F6,_t14F6,_t14F8];
    globals.camUp14C9 = camUp14FA;
    real camFOV14FD#1 = 0.137e2;
    globals.camFOV14CA = camFOV14FD;
    int iresU1500#2 = 500;
    globals.iresU14CB = iresU1500;
    globals.iresV14CC = iresU1500;
    real camNear1504#1 = -0.2e1;
    globals.camNear14CD = camNear1504;
    real camFar1507#1 = 0.5e1;
    globals.camFar14CE = camFar1507;
    globals.refStep14CF = _t14F8;
    real rayStep150B#1 = 0.1e-1;
    globals.rayStep14D0 = rayStep150B;
    globals.lightVsp14D1 = camUp14FA;
    real phongKa150F#1 = 0.1e0;
    globals.phongKa14D2 = phongKa150F;
    real phongKd1512#1 = 0.9e0;
    globals.phongKd14D3 = phongKd1512;
    bool debug1515#1 = false;
    globals.debug14D4 = debug1515;
    int su1518#2 = 250;
    globals.su14D5 = su1518;
    globals.sv14D6 = su1518;
    return
## global-variable initialization
  ENTRY151D:  preds = []
    femData:Mesh a151E#3 = globals.a14C2;
    femData:Space 0b042F_intermedateGlobal1520#1 = globals.0b042F_intermedateGlobal14C3;
    femData:FemFunc 0c0431_intermedateGlobal1522#1 = globals.0c0431_intermedateGlobal14C4;
    real isoval1524#0 = globals.isoval14C5;
    tensor[3] camEye1526#6 = globals.camEye14C7;
    tensor[3] camAt1528#6 = globals.camAt14C8;
    tensor[3] camUp152A#2 = globals.camUp14C9;
    real camFOV152C#2 = globals.camFOV14CA;
    int iresU152E#1 = globals.iresU14CB;
    int iresV1530#1 = globals.iresV14CC;
    tensor[3] lightVsp1532#2 = globals.lightVsp14D1;
    int _t1534#1 = 0;
    int _t1536#1 = 1;
    int _t1538#1 = ExtractFemItem<int,NumCell(Mesh)>(a151E);
    int _t153A#1 = ISub(_t1538,_t1536);
    int[] _t153C#1 = Range(_t1534,_t153A);
    femData:MeshCell[] _t153E#1 = <femData:MeshCell[]>{};
  FOREACH1541:  preds = [ASSIGN153F,NEXT1547]
    foreach (_t1540 in _t153C) on exit goto ASSIGN1549
      femData:MeshCell[] _t1545#1 = phi(_t153E,_t1544)
    femData:MeshCell _t1542#1 = LoadFem<femData:MeshCell>(a151E,_t1540);
    femData:MeshCell[] _t1544#1 = Append<femData:MeshCell>(_t1545,_t1542);
    goto FOREACH1541
  ASSIGN1549:  preds = [FOREACH1541]
    femData:Space b1548#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1520,a151E);
    femData:FemFunc c154A#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1522,b1548);
    femData:Space _t154C#2 = ExtractFem<femData:Space,femData:FemFunc>(c154A);
    femData:Mesh _t154E#1 = ExtractFem<femData:Mesh,femData:Space>(_t154C);
    image(IMAGE1D<double[3]>) I1550#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1552#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1554#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1550);
    tensor[3] op1_e3_l_21557#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_41558#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21557,op1_e3_l_21557);
    real camDist1556#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41558);
    globals.camDist14D7 = camDist1556;
    tensor[3] op1_e3_l_4155E#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_6155F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4155E,op1_e3_l_4155E);
    real op1_e3_l_71560#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_6155F);
    real op1_e3_l_91561#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71560);
    tensor[3] camN155D#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_4155E,op1_e3_l_91561);
    globals.camN14D8 = camN155D;
    tensor[3] op1_e3_l_101569#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_12156A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101569,op1_e3_l_101569);
    real op1_e3_l_13156B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_12156A);
    tensor[3,3] op1_e3_l_15156C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp152A);
    real op1_e3_l_16156D#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_13156B);
    tensor[3] op1_e3_l_17156E#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101569,op1_e3_l_15156C);
    real op1_e3_l_34156F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_17156E,op1_e3_l_17156E);
    real op1_e3_l_351570#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_16156D,op1_e3_l_16156D,op1_e3_l_34156F);
    real op1_e3_l_361571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351570);
    tensor[3] op1_e3_l_371572#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_16156D,op1_e3_l_17156E);
    real op1_e3_l_381573#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361571);
    tensor[3] camU1568#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371572,op1_e3_l_381573);
    globals.camU14D9 = camU1568;
    tensor[3] op1_e3_l_141582#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_161583#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141582,op1_e3_l_141582);
    real op1_e3_l_171584#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_161583);
    tensor[3,3] op1_e3_l_231585#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp152A);
    tensor[3] op1_e3_l_261586#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141582,op1_e3_l_231585);
    real op1_e3_l_281587#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_171584);
    real op1_e3_l_301588#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_261586,op1_e3_l_261586);
    real op1_e3_l_311589#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_281587,op1_e3_l_281587,op1_e3_l_301588);
    real op1_e3_l_32158A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_311589);
    tensor[3,3] op1_e3_l_45158B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_141582);
    tensor[3] op1_e3_l_47158C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_261586,op1_e3_l_45158B);
    real op1_e3_l_48158D#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_32158A);
    tensor[3] op1_e3_l_50158E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_281587,op1_e3_l_47158C);
    tensor[3] camV1581#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_48158D,op1_e3_l_281587,op1_e3_l_50158E);
    globals.camV14DA = camV1581;
    real _t159E#2 = 0.314159265358979323846264338327950288e1;
    real _t15A0#2 = 0.36e3;
    real op1_e3_l_515A3#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV152C,_t159E);
    real op1_e3_l_615A4#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15A0,op1_e3_l_515A3);
    tensor[3] op1_e3_l_715A5#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_915A6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_715A5,op1_e3_l_715A5);
    real op1_e3_l_1015A7#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_615A4);
    real op1_e3_l_1115A8#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_915A6);
    real camVmax15A2#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015A7,op1_e3_l_1115A8);
    globals.camVmax14DB = camVmax15A2;
    real _t15B1#1 = IntToReal(iresU152E);
    real _t15B3#1 = IntToReal(iresV1530);
    real op1_e3_l_715B6#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV152C,_t159E);
    real op1_e3_l_815B7#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15A0,op1_e3_l_715B6);
    tensor[3] op1_e3_l_915B8#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_1115B9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_915B8,op1_e3_l_915B8);
    real op1_e3_l_1215BA#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_815B7);
    real op1_e3_l_1315BB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1115B9);
    real op1_e3_l_1415BC#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15B1,op1_e3_l_1215BA,op1_e3_l_1315BB);
    real camUmax15B5#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B3,op1_e3_l_1415BC);
    globals.camUmax14DC = camUmax15B5;
    tensor[3,3] _t15C6#1 = <tensor[3,3]>[camU1568,camV1581,camN155D];
    real op1_e3_l_315C9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1532);
    real op1_e3_l_415CA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315C9);
    real op1_e3_l_515CB#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415CA);
    tensor[3] op1_e3_l_615CC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15C6,lightVsp1532);
    tensor[3] light15C8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515CB,op1_e3_l_615CC);
    globals.light14DD = light15C8;
    globals._t14DE = _t154E;
    globals._tX14DF = _t154C;
    globals.c14E0 = c154A;
    globals.img14E1 = img1554;
    globals._tXX14E2 = _t1552;
    globals.I1A7C = I1550;
    return
## strand
  strand raycast (int ui15D9#2, int vi15DA#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15E5:  preds = []
        int iresU15E6#1 = globals.iresU14CB;
        int iresV15E8#1 = globals.iresV14CC;
        real camNear15EA#1 = globals.camNear14CD;
        real camDist15EC#1 = globals.camDist14D7;
        tensor[3] camN15EE#1 = globals.camN14D8;
        tensor[3] camU15F0#1 = globals.camU14D9;
        tensor[3] camV15F2#1 = globals.camV14DA;
        real camVmax15F4#6 = globals.camVmax14DB;
        real camUmax15F6#4 = globals.camUmax14DC;
        real _t15F8#8 = -0.5e0;
        real _t15FA#2 = IntToReal(ui15D9);
        real _t15FC#2 = IntToReal(iresU15E6);
        real _t15FE#4 = 0.5e0;
        real op1_e3_l_61601#1 = λ(T0[],T1[])<(T0) - (T1)> (_t15FC,_t15FE);
        real op1_e3_l_71602#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t15FA);
        real op1_e3_l_81603#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61601);
        real op1_e3_l_91604#2 = λ(T0[])<Neg(T0)> (camUmax15F6);
        real op1_e3_l_101605#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71602,op1_e3_l_81603);
        real op1_e3_l_111606#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax15F6,op1_e3_l_91604);
        real op1_e3_l_131607#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101605,op1_e3_l_111606);
        real rayU1600#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91604,op1_e3_l_131607);
        real _t1610#2 = IntToReal(vi15DA);
        real _t1612#2 = IntToReal(iresV15E8);
        real op1_e3_l_61615#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1612,_t15FE);
        real op1_e3_l_71616#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t1610);
        real op1_e3_l_81617#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61615);
        real op1_e3_l_91618#1 = λ(T0[])<Neg(T0)> (camVmax15F4);
        real op1_e3_l_101619#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_81617);
        real op1_e3_l_11161A#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax15F4,op1_e3_l_91618);
        real op1_e3_l_12161B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101619,op1_e3_l_11161A);
        real rayV1614#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_12161B);
        real op1_e3_l_161625#1 = λ(T0[],T1[])<(T0) - (T1)> (_t15FC,_t15FE);
        real op1_e3_l_171626#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t15FA);
        real op1_e3_l_181627#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_161625);
        real op1_e3_l_191628#2 = λ(T0[])<Neg(T0)> (camUmax15F6);
        real op1_e3_l_201629#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_171626,op1_e3_l_181627);
        real op1_e3_l_21162A#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax15F6,op1_e3_l_191628);
        real op1_e3_l_23162B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_201629,op1_e3_l_21162A);
        real op1_e3_l_24162C#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_191628,op1_e3_l_23162B);
        real op1_e3_l_25162D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15FE,_t1612);
        real op1_e3_l_26162E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t1610);
        real op1_e3_l_27162F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_25162D);
        real op1_e3_l_281630#1 = λ(T0[])<Neg(T0)> (camVmax15F4);
        real op1_e3_l_291631#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_26162E,op1_e3_l_27162F);
        real op1_e3_l_301632#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax15F4,op1_e3_l_281630);
        real op1_e3_l_311633#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291631,op1_e3_l_301632);
        real op1_e3_l_321634#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_311633);
        tensor[3] op1_e3_l_331635#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU15F0,op1_e3_l_24162C);
        tensor[3] op1_e3_l_341636#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV15F2,op1_e3_l_321634);
        tensor[3] op1_e3_l_351637#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331635,op1_e3_l_341636);
        tensor[3] op1_e3_l_361638#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist15EC,op1_e3_l_351637);
        tensor[3] rayVec1624#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN15EE,op1_e3_l_361638);
        real transp164E#1 = 0.1e1;
        real _t1650#8 = 0.e0;
        tensor[3] rgb1652#1 = <tensor[3]>[_t1650,_t1650,_t1650];
        tensor[4] rgba1654#1 = <tensor[4]>[_t1650,_t1650,_t1650,_t1650];
        self.rayU = rayU1600;
        self.rayV = rayV1614;
        self.rayN = camNear15EA;
        self.rayVec = rayVec1624;
        self.transp = transp164E;
        self.rgb = rgb1652;
        self.rgba = rgba1654;
        self.gray = _t1650;
        self.ui = ui15D9;
        self.vi = vi15DA;
        return
    end state init
    method update
        ENTRY1661:  preds = []
          image(IMAGE1D<double[3]>) I1A7D#3 = globals.I1A7C;
          real isoval1662#2 = globals.isoval14C5;
          femData:Mesh _t1664#42 = globals._t14DE;
          femData:Space _t1666#20 = globals._tX14DF;
          femData:FemFunc c1668#20 = globals.c14E0;
          image(IMAGE1D<double[3]>) img166A#1 = globals.img14E1;
          kernel _t166C#1 = globals._tXX14E2;
          femData:Mesh a166E#1 = globals.a14C2;
          real thick1670#2 = globals.thick14C6;
          tensor[3] camEye1672#1 = globals.camEye14C7;
          real camNear1674#2 = globals.camNear14CD;
          real camFar1676#2 = globals.camFar14CE;
          real refStep1678#1 = globals.refStep14CF;
          real rayStep167A#2 = globals.rayStep14D0;
          real phongKa167C#1 = globals.phongKa14D2;
          real phongKd167E#1 = globals.phongKd14D3;
          bool debug1680#1 = globals.debug14D4;
          int su1682#1 = globals.su14D5;
          int sv1684#1 = globals.sv14D6;
          tensor[3] light1686#1 = globals.light14DD;
          real rayN1688#4 = self.rayN;
          tensor[3] rayVec168A#2 = self.rayVec;
          real transp168C#10 = self.transp;
          tensor[3] rgb168E#9 = self.rgb;
          int ui1690#1 = self.ui;
          int vi1692#1 = self.vi;
          if debug1680 then goto ASSIGN1696 else goto JOIN16A0
        ASSIGN1696:  preds = [COND1694]
          bool _t1695#1 = NEQ<int>(ui1690,su1682);
          if _t1695 then goto ASSIGN1699 else goto ASSIGN1A24
        ASSIGN1699:  preds = [COND1697]
          bool _t1698#1 = true;
          goto JOIN169C
        JOIN169C:  preds = [ASSIGN1699,ASSIGN1A24]
          bool _t169A#1 = phi(_t1698,_t169B)
          if _t169A then goto STABILIZE169E else goto JOIN169F
        STABILIZE169E:  preds = [COND169D]
          stabilize
          goto JOIN169F
        JOIN169F:  preds = [*STABILIZE169E,COND169D]
          goto JOIN16A0
        JOIN16A0:  preds = [JOIN169F,COND1694]
          tensor[3] op1_e3_l_316A2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1688,rayVec168A);
          tensor[3] x16A1#30 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1672,op1_e3_l_316A2);
          real _t16A5#8 = 0.e0;
          real _t16A7#2 = TensorIndex<tensor[3],[0]>(x16A1);
          bool _t16A9#1 = LTE<real>(_t16A5,_t16A7);
          if _t16A9 then goto ASSIGN16AD else goto JOIN1A0C
        ASSIGN16AD:  preds = [COND16AB]
          real _t16AC#13 = 0.1e1;
          bool _t16AE#1 = LTE<real>(_t16A7,_t16AC);
          if _t16AE then goto ASSIGN16B2 else goto JOIN1A09
        ASSIGN16B2:  preds = [COND16B0]
          real _t16B1#2 = TensorIndex<tensor[3],[1]>(x16A1);
          bool _t16B3#1 = LTE<real>(_t16A5,_t16B1);
          if _t16B3 then goto ASSIGN16B7 else goto JOIN1A06
        ASSIGN16B7:  preds = [COND16B5]
          bool _t16B6#1 = LTE<real>(_t16B1,_t16AC);
          if _t16B6 then goto ASSIGN16BA else goto JOIN1A03
        ASSIGN16BA:  preds = [COND16B8]
          real _t16B9#2 = TensorIndex<tensor[3],[2]>(x16A1);
          bool _t16BB#1 = LTE<real>(_t16A5,_t16B9);
          if _t16BB then goto ASSIGN16BF else goto JOIN1A00
        ASSIGN16BF:  preds = [COND16BD]
          bool _t16BE#1 = LTE<real>(_t16B9,_t16AC);
          if _t16BE then goto ASSIGN1804 else goto JOIN19FD
        ASSIGN1804:  preds = [COND16C0]
          femData:MeshPos p1803#1 = findPos16C1 (a166E,x16A1);
          bool _t1805#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1803);
          if _t1805 then goto ASSIGN1809 else goto JOIN19FA
        ASSIGN1809:  preds = [COND1807]
          real _t1808#2 = 0.13e1;
          femData:MeshPos callFindPos182A#2 = findPos16C1 (_t1664,x16A1);
          int intPos182B#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos182A);
          tensor[3] refPos182C#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos182A);
          tensor[3] Inner180B#2 = x16A1;
          femData:MeshPos callFindPos182D#2 = findPos16C1 (_t1664,Inner180B);
          int intPos182E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos182D);
          tensor[3] refPos182F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos182D);
          int[10] femIndicies1831#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos182E);
          tensor[10] femDofs1832#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1831);
          tensor[10] dofs1830#1 = femDofs1832;
          tensor[10] basisResult1833#1 = EvaluateBasis<BasisArray(10)>(refPos182F);
          real compositionl180C#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,Inner180B,dofs1830,basisResult1833,refPos182F);
          real op1_e3_l_23180D#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1662,compositionl180C);
          tensor[3] Inner180E#2 = x16A1;
          femData:MeshPos callFindPos1834#2 = findPos16C1 (_t1664,Inner180E);
          int intPos1835#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1834);
          tensor[3] refPos1836#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1834);
          int[10] femIndicies1838#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos1835);
          tensor[10] femDofs1839#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1838);
          tensor[10] dofs1837#1 = femDofs1839;
          tensor[3,10] basisResult183A#1 = EvaluateBasis<BasisArray(3,10)>(refPos1836);
          tensor[3] compositionl180F#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner180E,dofs1837,basisResult183A,refPos1836);
          int[4] femIndicies183C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos182B);
          tensor[4,3] femDofs183D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies183C);
          tensor[4,3] dofs183B#1 = femDofs183D;
          tensor[3,4] basisResult183E#1 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3,3] probe_l_251810#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,dofs183B,basisResult183E,refPos182C);
          tensor[3,3,3] op1_e3_l_271811#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810);
          tensor[3,3,3] op1_e3_l_281812#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810,op1_e3_l_271811);
          tensor[4,3] dofs183F#1 = femDofs183D;
          tensor[3,4] basisResult1840#1 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3] probe_l_291813#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs183F,basisResult1840,refPos182C);
          tensor[4,3] dofs1841#1 = femDofs183D;
          tensor[3,4] basisResult1842#1 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3] probe_l_301814#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs1841,basisResult1842,refPos182C);
          tensor[4,3] dofs1843#1 = femDofs183D;
          tensor[3,4] basisResult1844#1 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3] probe_l_311815#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs1843,basisResult1844,refPos182C);
          tensor[3,3] op1_e3_l_321816#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311815);
          tensor[3] op1_e3_l_331817#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301814,op1_e3_l_321816);
          real op1_e3_l_341818#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291813,op1_e3_l_331817);
          tensor[3,3] op1_e3_l_351819#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281812);
          real op1_e3_l_36181A#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341818);
          tensor[3,3] op1_e3_l_37181B#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351819,op1_e3_l_36181A);
          tensor[3] op1_e3_l_38181C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl180F,op1_e3_l_37181B);
          tensor[3] Inner181D#2 = x16A1;
          femData:MeshPos callFindPos1845#2 = findPos16C1 (_t1664,Inner181D);
          int intPos1846#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1845);
          tensor[3] refPos1847#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1845);
          int[10] femIndicies1849#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos1846);
          tensor[10] femDofs184A#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1849);
          tensor[10] dofs1848#1 = femDofs184A;
          tensor[3,10] basisResult184B#1 = EvaluateBasis<BasisArray(3,10)>(refPos1847);
          tensor[3] compositionl181E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner181D,dofs1848,basisResult184B,refPos1847);
          tensor[3] op1_e3_l_53181F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl181E,op1_e3_l_37181B);
          tensor[3] op1_e3_l_541820#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_38181C);
          tensor[3] op1_e3_l_551821#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_53181F);
          real op1_e3_l_561822#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541820,op1_e3_l_551821);
          real op1_e3_l_571823#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561822);
          real op1_e3_l_581824#1 = λ(T0[])<Abs(T0)> (op1_e3_l_23180D);
          real op1_e3_l_591825#1 = λ(T0[],T1[])<(T0 * T1)> (thick1670,op1_e3_l_571823);
          real op1_e3_l_601826#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581824,op1_e3_l_591825);
          real op1_e3_l_611827#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_601826);
          real op1_e3_l_621828#1 = λ(T0[],T1[])<(T0 * T1)> (_t1808,op1_e3_l_611827);
          real op1_e3_l_631829#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16A5,_t16AC,op1_e3_l_621828);
          real a180A#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_631829);
          bool _t188E#1 = GT<real>(a180A,_t16A5);
          if _t188E then goto ASSIGN18D4 else goto JOIN19F7
        ASSIGN18D4:  preds = [COND1890]
          femData:MeshPos callFindPos18B2#2 = findPos16C1 (_t1664,x16A1);
          int intPos18B3#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18B2);
          tensor[3] refPos18B4#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18B2);
          tensor[3] Inner1892#2 = x16A1;
          femData:MeshPos callFindPos18B5#2 = findPos16C1 (_t1664,Inner1892);
          int intPos18B6#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18B5);
          tensor[3] refPos18B7#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18B5);
          int[10] femIndicies18B9#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos18B6);
          tensor[10] femDofs18BA#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies18B9);
          tensor[10] dofs18B8#1 = femDofs18BA;
          tensor[10] basisResult18BB#1 = EvaluateBasis<BasisArray(10)>(refPos18B7);
          real compositionl1893#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,Inner1892,dofs18B8,basisResult18BB,refPos18B7);
          real op1_e3_l_241894#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1662,compositionl1893);
          tensor[3] Inner1895#2 = x16A1;
          femData:MeshPos callFindPos18BC#2 = findPos16C1 (_t1664,Inner1895);
          int intPos18BD#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18BC);
          tensor[3] refPos18BE#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18BC);
          int[10] femIndicies18C0#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos18BD);
          tensor[10] femDofs18C1#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies18C0);
          tensor[10] dofs18BF#1 = femDofs18C1;
          tensor[3,10] basisResult18C2#1 = EvaluateBasis<BasisArray(3,10)>(refPos18BE);
          tensor[3] compositionl1896#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner1895,dofs18BF,basisResult18C2,refPos18BE);
          int[4] femIndicies18C4#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos18B3);
          tensor[4,3] femDofs18C5#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies18C4);
          tensor[4,3] dofs18C3#1 = femDofs18C5;
          tensor[3,4] basisResult18C6#1 = EvaluateBasis<BasisArray(3,4)>(refPos18B4);
          tensor[3,3] probe_l_261897#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,dofs18C3,basisResult18C6,refPos18B4);
          tensor[3,3,3] op1_e3_l_281898#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_261897);
          tensor[3,3,3] op1_e3_l_291899#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_261897,op1_e3_l_281898);
          tensor[4,3] dofs18C7#1 = femDofs18C5;
          tensor[3,4] basisResult18C8#1 = EvaluateBasis<BasisArray(3,4)>(refPos18B4);
          tensor[3] probe_l_30189A#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs18C7,basisResult18C8,refPos18B4);
          tensor[4,3] dofs18C9#1 = femDofs18C5;
          tensor[3,4] basisResult18CA#1 = EvaluateBasis<BasisArray(3,4)>(refPos18B4);
          tensor[3] probe_l_31189B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs18C9,basisResult18CA,refPos18B4);
          tensor[4,3] dofs18CB#1 = femDofs18C5;
          tensor[3,4] basisResult18CC#1 = EvaluateBasis<BasisArray(3,4)>(refPos18B4);
          tensor[3] probe_l_32189C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs18CB,basisResult18CC,refPos18B4);
          tensor[3,3] op1_e3_l_33189D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_32189C);
          tensor[3] op1_e3_l_34189E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_31189B,op1_e3_l_33189D);
          real op1_e3_l_35189F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_30189A,op1_e3_l_34189E);
          tensor[3,3] op1_e3_l_3618A0#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_291899);
          real op1_e3_l_3718A1#1 = λ(T0[])<(2 * T0)> (op1_e3_l_35189F);
          tensor[3,3] op1_e3_l_3818A2#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_3618A0,op1_e3_l_3718A1);
          tensor[3] op1_e3_l_3918A3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1896,op1_e3_l_3818A2);
          tensor[3] Inner18A4#2 = x16A1;
          femData:MeshPos callFindPos18CD#2 = findPos16C1 (_t1664,Inner18A4);
          int intPos18CE#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos18CD);
          tensor[3] refPos18CF#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos18CD);
          int[10] femIndicies18D1#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos18CE);
          tensor[10] femDofs18D2#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies18D1);
          tensor[10] dofs18D0#1 = femDofs18D2;
          tensor[3,10] basisResult18D3#1 = EvaluateBasis<BasisArray(3,10)>(refPos18CF);
          tensor[3] compositionl18A5#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner18A4,dofs18D0,basisResult18D3,refPos18CF);
          tensor[3] op1_e3_l_5418A6#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl18A5,op1_e3_l_3818A2);
          tensor[3] op1_e3_l_5518A7#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3918A3);
          tensor[3] op1_e3_l_5618A8#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_5418A6);
          real op1_e3_l_5718A9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_5518A7,op1_e3_l_5618A8);
          real op1_e3_l_5818AA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_5718A9);
          real op1_e3_l_5918AB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_241894);
          real op1_e3_l_6018AC#1 = λ(T0[],T1[])<(T0 * T1)> (thick1670,op1_e3_l_5818AA);
          real op1_e3_l_6118AD#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_5918AB,op1_e3_l_6018AC);
          real op1_e3_l_6218AE#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_6118AD);
          real op1_e3_l_6318AF#1 = λ(T0[],T1[])<(T0 * T1)> (_t1808,op1_e3_l_6218AE);
          real op1_e3_l_6418B0#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16AC,_t16A5,op1_e3_l_6318AF);
          real op1_e3_l_6518B1#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_6418B0);
          real _t1891#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_6518B1);
          real op1_e3_l_31918#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec168A);
          real op1_e3_l_41919#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31918);
          real op1_e3_l_5191A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep167A,op1_e3_l_41919);
          real _t1917#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1678,op1_e3_l_5191A);
          real _t191F#2 = MathFn<pow>(_t1891,_t1917);
          real _t1921#2 = 0.11e1;
          real _t1923#1 = 0.7e0;
          femData:MeshPos callFindPos1942#2 = findPos16C1 (_t1664,x16A1);
          int intPos1943#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1942);
          tensor[3] refPos1944#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1942);
          tensor[3] Inner1926#2 = x16A1;
          femData:MeshPos callFindPos1945#2 = findPos16C1 (_t1664,Inner1926);
          int intPos1946#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1945);
          tensor[3] refPos1947#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1945);
          int[10] femIndicies1949#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos1946);
          tensor[10] femDofs194A#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1949);
          tensor[10] dofs1948#1 = femDofs194A;
          tensor[3,10] basisResult194B#1 = EvaluateBasis<BasisArray(3,10)>(refPos1947);
          tensor[3] compositionl1927#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner1926,dofs1948,basisResult194B,refPos1947);
          int[4] femIndicies194D#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos1943);
          tensor[4,3] femDofs194E#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies194D);
          tensor[4,3] dofs194C#1 = femDofs194E;
          tensor[3,4] basisResult194F#1 = EvaluateBasis<BasisArray(3,4)>(refPos1944);
          tensor[3,3] probe_l_181928#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,dofs194C,basisResult194F,refPos1944);
          tensor[3,3,3] op1_e3_l_201929#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181928);
          tensor[3,3,3] op1_e3_l_21192A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181928,op1_e3_l_201929);
          tensor[4,3] dofs1950#1 = femDofs194E;
          tensor[3,4] basisResult1951#1 = EvaluateBasis<BasisArray(3,4)>(refPos1944);
          tensor[3] probe_l_22192B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs1950,basisResult1951,refPos1944);
          tensor[4,3] dofs1952#1 = femDofs194E;
          tensor[3,4] basisResult1953#1 = EvaluateBasis<BasisArray(3,4)>(refPos1944);
          tensor[3] probe_l_23192C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs1952,basisResult1953,refPos1944);
          tensor[4,3] dofs1954#1 = femDofs194E;
          tensor[3,4] basisResult1955#1 = EvaluateBasis<BasisArray(3,4)>(refPos1944);
          tensor[3] probe_l_24192D#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,dofs1954,basisResult1955,refPos1944);
          tensor[3,3] op1_e3_l_25192E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_24192D);
          tensor[3] op1_e3_l_26192F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_23192C,op1_e3_l_25192E);
          real op1_e3_l_271930#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_22192B,op1_e3_l_26192F);
          tensor[3,3] op1_e3_l_281931#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_21192A);
          real op1_e3_l_291932#1 = λ(T0[])<(2 * T0)> (op1_e3_l_271930);
          tensor[3,3] op1_e3_l_301933#3 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_281931,op1_e3_l_291932);
          tensor[3] op1_e3_l_311934#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1927,op1_e3_l_301933);
          tensor[3] Inner1935#2 = x16A1;
          femData:MeshPos callFindPos1956#2 = findPos16C1 (_t1664,Inner1935);
          int intPos1957#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1956);
          tensor[3] refPos1958#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1956);
          int[10] femIndicies195A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos1957);
          tensor[10] femDofs195B#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies195A);
          tensor[10] dofs1959#1 = femDofs195B;
          tensor[3,10] basisResult195C#1 = EvaluateBasis<BasisArray(3,10)>(refPos1958);
          tensor[3] compositionl1936#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner1935,dofs1959,basisResult195C,refPos1958);
          tensor[3] op1_e3_l_461937#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1936,op1_e3_l_301933);
          tensor[3] op1_e3_l_471938#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_311934);
          tensor[3] op1_e3_l_481939#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_461937);
          real op1_e3_l_49193A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_471938,op1_e3_l_481939);
          real op1_e3_l_50193B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_49193A);
          tensor[3] Inner193C#2 = x16A1;
          femData:MeshPos callFindPos195D#2 = findPos16C1 (_t1664,Inner193C);
          int intPos195E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos195D);
          tensor[3] refPos195F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos195D);
          int[10] femIndicies1961#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos195E);
          tensor[10] femDofs1962#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1961);
          tensor[10] dofs1960#1 = femDofs1962;
          tensor[3,10] basisResult1963#1 = EvaluateBasis<BasisArray(3,10)>(refPos195F);
          tensor[3] compositionl193D#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,Inner193C,dofs1960,basisResult1963,refPos195F);
          tensor[3] op1_e3_l_65193E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl193D,op1_e3_l_301933);
          tensor[3] op1_e3_l_66193F#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_65193E);
          real op1_e3_l_671940#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_50193B);
          real op1_e3_l_681941#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light1686,op1_e3_l_66193F);
          real _t1925#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671940,op1_e3_l_681941);
          real shade19A3#1 = Max<real>(_t16A5,_t1925);
          femData:MeshPos callFindPos19A8#2 = findPos16C1 (_t1664,x16A1);
          int intPos19A9#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos19A8);
          tensor[3] refPos19AA#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos19A8);
          tensor[3] Inner19A6#2 = x16A1;
          femData:MeshPos callFindPos19AB#2 = findPos16C1 (_t1664,Inner19A6);
          int intPos19AC#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos19AB);
          tensor[3] refPos19AD#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos19AB);
          int[10] femIndicies19AF#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos19AC);
          tensor[10] femDofs19B0#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies19AF);
          tensor[10] dofs19AE#1 = femDofs19B0;
          tensor[10] basisResult19B1#1 = EvaluateBasis<BasisArray(10)>(refPos19AD);
          real compositionl19A7#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,Inner19A6,dofs19AE,basisResult19B1,refPos19AD);
          real _t19A5#2 = λ(T0[])<T0> (compositionl19A7);
          real op1_e3_l_1519C0#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,rayN1688);
          real op1_e3_l_1619C1#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,camFar1676);
          real op1_e3_l_1719C2#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C0,op1_e3_l_1619C1);
          real op1_e3_l_1819C3#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1921,_t1923);
          real op1_e3_l_1919C4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719C2,op1_e3_l_1819C3);
          real op1_e3_l_2019C5#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd167E,shade19A3);
          real Mtransform19CB#2 = Transform<IMAGE1D<double[3]>>(I1A7D);
          real MxPos19CC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19CB,_t19A5);
          real Ttranslate19CD#1 = Translate<IMAGE1D<double[3]>>(I1A7D);
          real imgPos19CE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19CC,Ttranslate19CD);
          real nd19CF#2 = Floor<1>(imgPos19CE);
          real f19D0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19CE,nd19CF);
          int n19D1#1 = RealToInt<1>(nd19CF);
          int lit19D2#1 = 0;
          int idx19D3#1 = IAdd(n19D1,lit19D2);
          tensor[3,2] ldvox19D4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A7D,idx19D3);
          tensor[2] kernX_19D5#1 = BuildPos<1>(f19D0);
          tensor[2] kevalX_d0_19D6#1 = EvalKernel<2,tent,0>(kernX_19D5);
          tensor[3] probe_l_2119C6#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img166A,_t166C,_t19A5,Mtransform19CB,ldvox19D4,kevalX_d0_19D6);
          real op1_e3_l_2219C7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,_t191F);
          real op1_e3_l_2319C8#1 = λ(T0[],T1[])<(T0 + T1)> (_t1921,op1_e3_l_1919C4);
          real op1_e3_l_2419C9#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa167C,op1_e3_l_2019C5);
          tensor[3] op1_e3_l_2519CA#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp168C,probe_l_2119C6,op1_e3_l_2219C7,op1_e3_l_2319C8,op1_e3_l_2419C9);
          tensor[3] rgb19BF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb168E,op1_e3_l_2519CA);
          real op1_e3_l_419F0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,_t191F);
          real op1_e3_l_519F1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_419F0);
          real transp19EF#1 = λ(T0[],T1[])<(T0 * T1)> (transp168C,op1_e3_l_519F1);
          goto JOIN19F7
        JOIN19F7:  preds = [ASSIGN19F4,COND1890]
          tensor[3] rgb19F5#1 = phi(rgb19BF,rgb168E)
          real transp19F6#1 = phi(transp19EF,transp168C)
          goto JOIN19FA
        JOIN19FA:  preds = [JOIN19F7,COND1807]
          tensor[3] rgb19F8#1 = phi(rgb19F5,rgb168E)
          real transp19F9#1 = phi(transp19F6,transp168C)
          goto JOIN19FD
        JOIN19FD:  preds = [JOIN19FA,COND16C0]
          tensor[3] rgb19FB#1 = phi(rgb19F8,rgb168E)
          real transp19FC#1 = phi(transp19F9,transp168C)
          goto JOIN1A00
        JOIN1A00:  preds = [JOIN19FD,COND16BD]
          tensor[3] rgb19FE#1 = phi(rgb19FB,rgb168E)
          real transp19FF#1 = phi(transp19FC,transp168C)
          goto JOIN1A03
        JOIN1A03:  preds = [JOIN1A00,COND16B8]
          tensor[3] rgb1A01#1 = phi(rgb19FE,rgb168E)
          real transp1A02#1 = phi(transp19FF,transp168C)
          goto JOIN1A06
        JOIN1A06:  preds = [JOIN1A03,COND16B5]
          tensor[3] rgb1A04#1 = phi(rgb1A01,rgb168E)
          real transp1A05#1 = phi(transp1A02,transp168C)
          goto JOIN1A09
        JOIN1A09:  preds = [JOIN1A06,COND16B0]
          tensor[3] rgb1A07#1 = phi(rgb1A04,rgb168E)
          real transp1A08#1 = phi(transp1A05,transp168C)
          goto JOIN1A0C
        JOIN1A0C:  preds = [JOIN1A09,COND16AB]
          tensor[3] rgb1A0A#3 = phi(rgb1A07,rgb168E)
          real transp1A0B#2 = phi(transp1A08,transp168C)
          real _t1A0D#1 = 0.1e-1;
          bool _t1A0F#1 = LT<real>(transp1A0B,_t1A0D);
          if _t1A0F then goto SAVE1A12 else goto JOIN1A16
        SAVE1A12:  preds = [COND1A11]
          self.transp = _t16A5;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A16
        JOIN1A16:  preds = [*STABILIZE1A14,COND1A11]
          real transp1A15#2 = phi(transp1A0B)
          bool _t1A17#1 = GT<real>(rayN1688,camFar1676);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1D
        SAVE1A1A:  preds = [COND1A19]
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A1D
        JOIN1A1D:  preds = [*STABILIZE1A1C,COND1A19]
          real rayN1A1E#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1688,rayStep167A);
          self.rayN = rayN1A1E;
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          active
        ASSIGN1A24:  preds = [COND1697]
          bool _t169B#1 = NEQ<int>(vi1692,sv1684);
          goto JOIN169C
    end update
    method stabilize
        ENTRY1A25:  preds = []
          bool debug1A26#1 = globals.debug14D4;
          int su1A28#1 = globals.su14D5;
          int sv1A2A#1 = globals.sv14D6;
          real transp1A2C#4 = self.transp;
          tensor[3] rgb1A2E#3 = self.rgb;
          tensor[4] rgba1A30#1 = self.rgba;
          int ui1A32#1 = self.ui;
          int vi1A34#1 = self.vi;
          real _t1A36#4 = 0.1e1;
          real a1A38#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A3A#1 = 0.e0;
          bool _t1A3C#1 = GT<real>(a1A38,_t1A3A);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A54
        ASSIGN1A40:  preds = [COND1A3E]
          real _t1A3F#1 = TensorIndex<tensor[3],[0]>(rgb1A2E);
          real op1_e3_l_31A42#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A41#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A3F,op1_e3_l_31A42);
          real _t1A45#1 = TensorIndex<tensor[3],[1]>(rgb1A2E);
          real op1_e3_l_31A48#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A47#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A45,op1_e3_l_31A48);
          real _t1A4B#1 = TensorIndex<tensor[3],[2]>(rgb1A2E);
          real op1_e3_l_31A4E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A4D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4B,op1_e3_l_31A4E);
          tensor[4] rgba1A51#1 = <tensor[4]>[_t1A41,_t1A47,_t1A4D,a1A38];
          goto JOIN1A54
        JOIN1A54:  preds = [ASSIGN1A52,COND1A3E]
          tensor[4] rgba1A53#2 = phi(rgba1A51,rgba1A30)
          bool _t1A55#1 = EQ<int>(ui1A32,su1A28);
          if _t1A55 then goto ASSIGN1A59 else goto JOIN1A5F
        ASSIGN1A59:  preds = [COND1A57]
          bool _t1A58#1 = EQ<int>(vi1A34,sv1A2A);
          if _t1A58 then goto COND1A5B else goto JOIN1A5E
        COND1A5B:  preds = [COND1A5A]
          if debug1A26 then goto MASSIGN1A5C else goto JOIN1A5D
        MASSIGN1A5C:  preds = [COND1A5B]
          Print<[real,tensor[4]]>(a1A38,rgba1A53);
          goto JOIN1A5D
        JOIN1A5D:  preds = [MASSIGN1A5C,COND1A5B]
          goto JOIN1A5E
        JOIN1A5E:  preds = [JOIN1A5D,COND1A5A]
          goto JOIN1A5F
        JOIN1A5F:  preds = [JOIN1A5E,COND1A57]
          self.rgba = rgba1A53;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A62:  preds = []
      int iresU1A63#1 = globals.iresU14CB;
      int iresV1A65#1 = globals.iresV14CC;
      int _t1A67#2 = 0;
      int _t1A69#2 = 1;
      int _t1A6B#1 = ISub(iresV1A65,_t1A69);
      int[] _t1A6D#1 = Range(_t1A67,_t1A6B);
    FOREACH1A70:  preds = [ASSIGN1A6E,NEXT1A79]
      foreach (vi1A6F in _t1A6D) on exit goto RETURN1A7A
      int _t1A71#1 = ISub(iresU1A63,_t1A69);
      int[] _t1A73#1 = Range(_t1A67,_t1A71);
    FOREACH1A76:  preds = [ASSIGN1A74,NEXT1A78]
      foreach (ui1A75 in _t1A73) on exit goto NEXT1A79
      new raycast(ui1A75,vi1A6F);
      goto FOREACH1A76
    NEXT1A79:  preds = [FOREACH1A76]
      goto FOREACH1A70
    RETURN1A7A:  preds = [FOREACH1A70]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14C2 (a) = <no-default>
  input 0b042F_intermedateGlobal14C3 (b) = <no-default>
  input 0c0431_intermedateGlobal14C4 (c) = <no-default>
  input isoval14C5 (isoval) = <default>
  input thick14C6 (thick) = <default>
  input camEye14C7 (camEye) = <default>
  input camAt14C8 (camAt) = <default>
  input camUp14C9 (camUp) = <default>
  input camFOV14CA (camFOV) = <default>
  input iresU14CB (iresU) = <default>
  input iresV14CC (iresV) = <default>
  input camNear14CD (camNear) = <default>
  input camFar14CE (camFar) = <default>
  input refStep14CF (refStep) = <default>
  input rayStep14D0 (rayStep) = <default>
  input lightVsp14D1 (lightVsp) = <default>
  input phongKa14D2 (phongKa) = <default>
  input phongKd14D3 (phongKd) = <default>
  input debug14D4 (debug) = <default>
  input su14D5 (su) = <default>
  input sv14D6 (sv) = <default>
  global real camDist14D7
  global tensor[3] camN14D8
  global tensor[3] camU14D9
  global tensor[3] camV14DA
  global real camVmax14DB
  global real camUmax14DC
  global tensor[3] light14DD
  global femData:Mesh _t14DE
  global femData:Space _tX14DF
  global femData:FemFunc c14E0
  global image(IMAGE1D<double[3]>) img14E1
  global kernel _tXX14E2
  global image(IMAGE1D<double[3]>) I1A7C
## functions
  function femData:MeshPos findPos16C1 (femData:Mesh mesh16C2#13, tensor[3] pos16C3#3) {
    ENTRY16C4:  preds = []
      real _t16C5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16C7#10 = <tensor[3]>[_t16C5,_t16C5,_t16C5];
      int newtonInt16C9#3 = 0;
      int cellInt16CB#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16C2);
      int _t16CD#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16C2);
      int _t16CF#3 = 1;
      int numCell16D1#2 = ISub(_t16CD,_t16CF);
      int _t16D3#2 = 16;
      int _t16D5#1 = IMul(_t16D3,numCell16D1);
      int[] _t16D7#1 = Range(newtonInt16C9,_t16D5);
    FOREACH16DA:  preds = [ASSIGN16D8,NEXT17FE]
      foreach (itter16D9 in _t16D7) on exit goto ASSIGN1801
        int cellInt16DD#11 = phi(cellInt16CB,cellInt17FB)
        int newtonInt17ED#1 = phi(newtonInt16C9,newtonInt17FC)
        tensor[3] xn16DC#6 = phi(xn16C7,xn16DB)
      int[4] femIndicies16EE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs16EF#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies16EE);
      tensor[3,4] basisResult16F0#4 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_1016DE#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3,3] op1_e3_l_1216DF#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE);
      tensor[3,3,3] op1_e3_l_1316E0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE,op1_e3_l_1216DF);
      tensor[3] probe_l_1416E1#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1516E2#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1616E3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3] op1_e3_l_1716E4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616E3);
      tensor[3] op1_e3_l_1816E5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516E2,op1_e3_l_1716E4);
      real op1_e3_l_1916E6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416E1,op1_e3_l_1816E5);
      tensor[3,3] op1_e3_l_2016E7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316E0);
      real op1_e3_l_2116E8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916E6);
      tensor[4] basisResult16F8#2 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_2216E9#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3,3] op1_e3_l_2316EA#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016E7,op1_e3_l_2116E8);
      tensor[3] op1_e3_l_2416EB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_2216E9);
      tensor[3] op1_e3_l_2516EC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_2416EB);
      tensor[3] xn16DB#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_2516EC);
      real _t1715#1 = 0.1e-7;
      tensor[3] probe_l_211723#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt16DD,mesh16C2,xn16DC,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3] op1_e3_l_231725#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_211723);
      tensor[3] op1_e3_l_391726#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_231725);
      real op1_e3_l_411727#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_391726,op1_e3_l_391726);
      real _t1717#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_411727);
      bool _t1751#1 = GTE<real>(_t1715,_t1717);
      if _t1751 then goto ASSIGN1755 else goto JOIN17EB
    ASSIGN1755:  preds = [COND1753]
      real _t1754#4 = 0.1e1;
      tensor[3] _t1756#1 = <tensor[3]>[_t1754,_t1754,_t1754];
      real _t1758#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1756,xn16DB);
      bool _t1792#1 = GT<real>(_t1754,_t1758);
      real _t1794#3 = 0.1e-8;
      tensor[3] _t1796#1 = <tensor[3]>[_t1794,_t1794,_t1794];
      tensor[3] _t1798#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1796,xn16DB);
      real _t17D2#1 = TensorIndex<tensor[3],[0]>(_t1798);
      real _t17D4#3 = -0.e0;
      bool _t17D6#1 = GT<real>(_t17D2,_t17D4);
      real _t17D8#1 = TensorIndex<tensor[3],[1]>(_t1798);
      bool _t17DA#1 = GT<real>(_t17D8,_t17D4);
      real _t17DC#1 = TensorIndex<tensor[3],[2]>(_t1798);
      bool _t17DE#1 = GT<real>(_t17DC,_t17D4);
      bool _t17E0#1 = BAnd(_t17DA,_t17DE);
      bool _t17E2#1 = BAnd(_t17D6,_t17E0);
      bool _t17E4#1 = BAnd(_t1792,_t17E2);
      if _t17E4 then goto ASSIGN17E8 else goto JOIN17EA
    ASSIGN17E8:  preds = [COND17E6]
      femData:MeshPos _t17E7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16C2,cellInt16DD,xn16DB,pos16C3);
      return _t17E7
      goto JOIN17EA
    JOIN17EA:  preds = [*RETURN(_t17E7)17E9,COND17E6]
      goto JOIN17EB
    JOIN17EB:  preds = [JOIN17EA,COND1753]
      int newtonInt17EC#2 = IAdd(newtonInt17ED,_t16CF);
      bool _t17EF#1 = GTE<int>(newtonInt17EC,_t16D3);
      if _t17EF then goto ASSIGN17F3 else goto JOIN17FD
    ASSIGN17F3:  preds = [COND17F1]
      bool _t17F2#1 = GTE<int>(cellInt16DD,numCell16D1);
      if _t17F2 then goto ASSIGN17F6 else goto ASSIGN17FF
    ASSIGN17F6:  preds = [COND17F4]
      femData:MeshPos _t17F5#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t17F5
      goto JOIN17FA
    JOIN17FA:  preds = [*RETURN(_t17F5)17F7,ASSIGN17FF]
      int cellInt17F8#1 = phi(cellInt17F9)
      goto JOIN17FD
    JOIN17FD:  preds = [JOIN17FA,COND17F1]
      int cellInt17FB#1 = phi(cellInt17F8,cellInt16DD)
      int newtonInt17FC#1 = phi(newtonInt16C9,newtonInt17EC)
      goto FOREACH16DA
    ASSIGN17FF:  preds = [COND17F4]
      int cellInt17F9#1 = IAdd(cellInt16DD,_t16CF);
      goto JOIN17FA
    ASSIGN1801:  preds = [FOREACH16DA]
      femData:MeshPos _t1800#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t1800
}
## input initialization
  ENTRY14E3:  preds = []
    real isoval14E4#1 = 0.2e0;
    globals.isoval14C5 = isoval14E4;
    real thick14E7#1 = 0.7e-1;
    globals.thick14C6 = thick14E7;
    real _t14EA#2 = -0.3e1;
    real _t14EC#1 = 0.3e1;
    tensor[3] camEye14EE#1 = <tensor[3]>[_t14EA,_t14EA,_t14EC];
    globals.camEye14C7 = camEye14EE;
    real _t14F1#3 = 0.5e0;
    tensor[3] camAt14F3#1 = <tensor[3]>[_t14F1,_t14F1,_t14F1];
    globals.camAt14C8 = camAt14F3;
    real _t14F6#2 = 0.e0;
    real _t14F8#2 = 0.1e1;
    tensor[3] camUp14FA#2 = <tensor[3]>[_t14F6,_t14F6,_t14F8];
    globals.camUp14C9 = camUp14FA;
    real camFOV14FD#1 = 0.137e2;
    globals.camFOV14CA = camFOV14FD;
    int iresU1500#2 = 500;
    globals.iresU14CB = iresU1500;
    globals.iresV14CC = iresU1500;
    real camNear1504#1 = -0.2e1;
    globals.camNear14CD = camNear1504;
    real camFar1507#1 = 0.5e1;
    globals.camFar14CE = camFar1507;
    globals.refStep14CF = _t14F8;
    real rayStep150B#1 = 0.1e-1;
    globals.rayStep14D0 = rayStep150B;
    globals.lightVsp14D1 = camUp14FA;
    real phongKa150F#1 = 0.1e0;
    globals.phongKa14D2 = phongKa150F;
    real phongKd1512#1 = 0.9e0;
    globals.phongKd14D3 = phongKd1512;
    bool debug1515#1 = false;
    globals.debug14D4 = debug1515;
    int su1518#2 = 250;
    globals.su14D5 = su1518;
    globals.sv14D6 = su1518;
    return
## global-variable initialization
  ENTRY151D:  preds = []
    femData:Mesh a151E#3 = globals.a14C2;
    femData:Space 0b042F_intermedateGlobal1520#1 = globals.0b042F_intermedateGlobal14C3;
    femData:FemFunc 0c0431_intermedateGlobal1522#1 = globals.0c0431_intermedateGlobal14C4;
    real isoval1524#0 = globals.isoval14C5;
    tensor[3] camEye1526#1 = globals.camEye14C7;
    tensor[3] camAt1528#1 = globals.camAt14C8;
    tensor[3] camUp152A#1 = globals.camUp14C9;
    real camFOV152C#1 = globals.camFOV14CA;
    int iresU152E#1 = globals.iresU14CB;
    int iresV1530#1 = globals.iresV14CC;
    tensor[3] lightVsp1532#2 = globals.lightVsp14D1;
    int _t1534#1 = 0;
    int _t1536#1 = 1;
    int _t1538#1 = ExtractFemItem<int,NumCell(Mesh)>(a151E);
    int _t153A#1 = ISub(_t1538,_t1536);
    int[] _t153C#1 = Range(_t1534,_t153A);
    femData:MeshCell[] _t153E#1 = <femData:MeshCell[]>{};
  FOREACH1541:  preds = [ASSIGN153F,NEXT1547]
    foreach (_t1540 in _t153C) on exit goto ASSIGN1549
      femData:MeshCell[] _t1545#1 = phi(_t153E,_t1544)
    femData:MeshCell _t1542#1 = LoadFem<femData:MeshCell>(a151E,_t1540);
    femData:MeshCell[] _t1544#1 = Append<femData:MeshCell>(_t1545,_t1542);
    goto FOREACH1541
  ASSIGN1549:  preds = [FOREACH1541]
    femData:Space b1548#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1520,a151E);
    femData:FemFunc c154A#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1522,b1548);
    femData:Space _t154C#2 = ExtractFem<femData:Space,femData:FemFunc>(c154A);
    femData:Mesh _t154E#1 = ExtractFem<femData:Mesh,femData:Space>(_t154C);
    image(IMAGE1D<double[3]>) I1550#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1552#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1554#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1550);
    tensor[3] op1_e3_l_21557#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_41558#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21557,op1_e3_l_21557);
    real camDist1556#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41558);
    globals.camDist14D7 = camDist1556;
    real op1_e3_l_91561#6 = λ(T0[])<(1) / ( T0)> (camDist1556);
    tensor[3] camN155D#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21557,op1_e3_l_91561);
    globals.camN14D8 = camN155D;
    tensor[3,3] op1_e3_l_15156C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp152A);
    tensor[3] op1_e3_l_17156E#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21557,op1_e3_l_15156C);
    real op1_e3_l_34156F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_17156E,op1_e3_l_17156E);
    real op1_e3_l_351570#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91561,op1_e3_l_91561,op1_e3_l_34156F);
    real op1_e3_l_361571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351570);
    tensor[3] op1_e3_l_371572#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_17156E);
    real op1_e3_l_381573#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361571);
    tensor[3] camU1568#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371572,op1_e3_l_381573);
    globals.camU14D9 = camU1568;
    tensor[3,3] op1_e3_l_45158B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21557);
    tensor[3] op1_e3_l_47158C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_17156E,op1_e3_l_45158B);
    tensor[3] op1_e3_l_50158E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_47158C);
    tensor[3] camV1581#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_381573,op1_e3_l_91561,op1_e3_l_50158E);
    globals.camV14DA = camV1581;
    real _t159E#1 = 0.314159265358979323846264338327950288e1;
    real _t15A0#1 = 0.36e3;
    real op1_e3_l_515A3#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV152C,_t159E);
    real op1_e3_l_615A4#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15A0,op1_e3_l_515A3);
    real op1_e3_l_1015A7#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615A4);
    real camVmax15A2#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015A7,camDist1556);
    globals.camVmax14DB = camVmax15A2;
    real _t15B1#1 = IntToReal(iresU152E);
    real _t15B3#1 = IntToReal(iresV1530);
    real op1_e3_l_1415BC#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15B1,op1_e3_l_1015A7,camDist1556);
    real camUmax15B5#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B3,op1_e3_l_1415BC);
    globals.camUmax14DC = camUmax15B5;
    tensor[3,3] _t15C6#1 = <tensor[3,3]>[camU1568,camV1581,camN155D];
    real op1_e3_l_315C9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1532);
    real op1_e3_l_415CA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315C9);
    real op1_e3_l_515CB#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415CA);
    tensor[3] op1_e3_l_615CC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15C6,lightVsp1532);
    tensor[3] light15C8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515CB,op1_e3_l_615CC);
    globals.light14DD = light15C8;
    globals._t14DE = _t154E;
    globals._tX14DF = _t154C;
    globals.c14E0 = c154A;
    globals.img14E1 = img1554;
    globals._tXX14E2 = _t1552;
    globals.I1A7C = I1550;
    return
## strand
  strand raycast (int ui15D9#2, int vi15DA#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15E5:  preds = []
        int iresU15E6#1 = globals.iresU14CB;
        int iresV15E8#1 = globals.iresV14CC;
        real camNear15EA#1 = globals.camNear14CD;
        real camDist15EC#1 = globals.camDist14D7;
        tensor[3] camN15EE#1 = globals.camN14D8;
        tensor[3] camU15F0#1 = globals.camU14D9;
        tensor[3] camV15F2#1 = globals.camV14DA;
        real camVmax15F4#4 = globals.camVmax14DB;
        real camUmax15F6#2 = globals.camUmax14DC;
        real _t15F8#5 = -0.5e0;
        real _t15FA#1 = IntToReal(ui15D9);
        real _t15FC#1 = IntToReal(iresU15E6);
        real _t15FE#3 = 0.5e0;
        real op1_e3_l_61601#1 = λ(T0[],T1[])<(T0) - (T1)> (_t15FC,_t15FE);
        real op1_e3_l_71602#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t15FA);
        real op1_e3_l_81603#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61601);
        real op1_e3_l_91604#2 = λ(T0[])<Neg(T0)> (camUmax15F6);
        real op1_e3_l_101605#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71602,op1_e3_l_81603);
        real op1_e3_l_111606#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax15F6,op1_e3_l_91604);
        real op1_e3_l_131607#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101605,op1_e3_l_111606);
        real rayU1600#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91604,op1_e3_l_131607);
        real _t1610#1 = IntToReal(vi15DA);
        real _t1612#2 = IntToReal(iresV15E8);
        real op1_e3_l_61615#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1612,_t15FE);
        real op1_e3_l_71616#2 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t1610);
        real op1_e3_l_81617#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61615);
        real op1_e3_l_91618#1 = λ(T0[])<Neg(T0)> (camVmax15F4);
        real op1_e3_l_101619#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_81617);
        real op1_e3_l_11161A#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax15F4,op1_e3_l_91618);
        real op1_e3_l_12161B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101619,op1_e3_l_11161A);
        real rayV1614#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_12161B);
        real op1_e3_l_25162D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15FE,_t1612);
        real op1_e3_l_27162F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_25162D);
        real op1_e3_l_291631#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_27162F);
        real op1_e3_l_311633#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291631,op1_e3_l_11161A);
        real op1_e3_l_321634#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_311633);
        tensor[3] op1_e3_l_331635#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU15F0,rayU1600);
        tensor[3] op1_e3_l_341636#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV15F2,op1_e3_l_321634);
        tensor[3] op1_e3_l_351637#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331635,op1_e3_l_341636);
        tensor[3] op1_e3_l_361638#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist15EC,op1_e3_l_351637);
        tensor[3] rayVec1624#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN15EE,op1_e3_l_361638);
        real transp164E#1 = 0.1e1;
        real _t1650#8 = 0.e0;
        tensor[3] rgb1652#1 = <tensor[3]>[_t1650,_t1650,_t1650];
        tensor[4] rgba1654#1 = <tensor[4]>[_t1650,_t1650,_t1650,_t1650];
        self.rayU = rayU1600;
        self.rayV = rayV1614;
        self.rayN = camNear15EA;
        self.rayVec = rayVec1624;
        self.transp = transp164E;
        self.rgb = rgb1652;
        self.rgba = rgba1654;
        self.gray = _t1650;
        self.ui = ui15D9;
        self.vi = vi15DA;
        return
    end state init
    method update
        ENTRY1661:  preds = []
          image(IMAGE1D<double[3]>) I1A7D#3 = globals.I1A7C;
          real isoval1662#1 = globals.isoval14C5;
          femData:Mesh _t1664#9 = globals._t14DE;
          femData:Space _t1666#3 = globals._tX14DF;
          femData:FemFunc c1668#3 = globals.c14E0;
          image(IMAGE1D<double[3]>) img166A#1 = globals.img14E1;
          kernel _t166C#1 = globals._tXX14E2;
          femData:Mesh a166E#1 = globals.a14C2;
          real thick1670#1 = globals.thick14C6;
          tensor[3] camEye1672#1 = globals.camEye14C7;
          real camNear1674#2 = globals.camNear14CD;
          real camFar1676#2 = globals.camFar14CE;
          real refStep1678#1 = globals.refStep14CF;
          real rayStep167A#2 = globals.rayStep14D0;
          real phongKa167C#1 = globals.phongKa14D2;
          real phongKd167E#1 = globals.phongKd14D3;
          bool debug1680#1 = globals.debug14D4;
          int su1682#1 = globals.su14D5;
          int sv1684#1 = globals.sv14D6;
          tensor[3] light1686#1 = globals.light14DD;
          real rayN1688#4 = self.rayN;
          tensor[3] rayVec168A#2 = self.rayVec;
          real transp168C#10 = self.transp;
          tensor[3] rgb168E#9 = self.rgb;
          int ui1690#1 = self.ui;
          int vi1692#1 = self.vi;
          if debug1680 then goto ASSIGN1696 else goto JOIN16A0
        ASSIGN1696:  preds = [COND1694]
          bool _t1695#1 = NEQ<int>(ui1690,su1682);
          if _t1695 then goto ASSIGN1699 else goto ASSIGN1A24
        ASSIGN1699:  preds = [COND1697]
          bool _t1698#1 = true;
          goto JOIN169C
        JOIN169C:  preds = [ASSIGN1699,ASSIGN1A24]
          bool _t169A#1 = phi(_t1698,_t169B)
          if _t169A then goto STABILIZE169E else goto JOIN169F
        STABILIZE169E:  preds = [COND169D]
          stabilize
          goto JOIN169F
        JOIN169F:  preds = [*STABILIZE169E,COND169D]
          goto JOIN16A0
        JOIN16A0:  preds = [JOIN169F,COND1694]
          tensor[3] op1_e3_l_316A2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1688,rayVec168A);
          tensor[3] x16A1#11 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1672,op1_e3_l_316A2);
          real _t16A5#8 = 0.e0;
          real _t16A7#2 = TensorIndex<tensor[3],[0]>(x16A1);
          bool _t16A9#1 = LTE<real>(_t16A5,_t16A7);
          if _t16A9 then goto ASSIGN16AD else goto JOIN1A0C
        ASSIGN16AD:  preds = [COND16AB]
          real _t16AC#11 = 0.1e1;
          bool _t16AE#1 = LTE<real>(_t16A7,_t16AC);
          if _t16AE then goto ASSIGN16B2 else goto JOIN1A09
        ASSIGN16B2:  preds = [COND16B0]
          real _t16B1#2 = TensorIndex<tensor[3],[1]>(x16A1);
          bool _t16B3#1 = LTE<real>(_t16A5,_t16B1);
          if _t16B3 then goto ASSIGN16B7 else goto JOIN1A06
        ASSIGN16B7:  preds = [COND16B5]
          bool _t16B6#1 = LTE<real>(_t16B1,_t16AC);
          if _t16B6 then goto ASSIGN16BA else goto JOIN1A03
        ASSIGN16BA:  preds = [COND16B8]
          real _t16B9#2 = TensorIndex<tensor[3],[2]>(x16A1);
          bool _t16BB#1 = LTE<real>(_t16A5,_t16B9);
          if _t16BB then goto ASSIGN16BF else goto JOIN1A00
        ASSIGN16BF:  preds = [COND16BD]
          bool _t16BE#1 = LTE<real>(_t16B9,_t16AC);
          if _t16BE then goto ASSIGN1804 else goto JOIN19FD
        ASSIGN1804:  preds = [COND16C0]
          femData:MeshPos p1803#1 = findPos16C1 (a166E,x16A1);
          bool _t1805#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1803);
          if _t1805 then goto ASSIGN1809 else goto JOIN19FA
        ASSIGN1809:  preds = [COND1807]
          real _t1808#1 = 0.13e1;
          femData:MeshPos callFindPos182A#2 = findPos16C1 (_t1664,x16A1);
          int intPos182B#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos182A);
          tensor[3] refPos182C#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos182A);
          int[10] femIndicies1831#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos182B);
          tensor[10] femDofs1832#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1831);
          tensor[10] basisResult1833#1 = EvaluateBasis<BasisArray(10)>(refPos182C);
          real compositionl180C#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult1833,refPos182C);
          real op1_e3_l_23180D#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1662,compositionl180C);
          tensor[3,10] basisResult183A#1 = EvaluateBasis<BasisArray(3,10)>(refPos182C);
          tensor[3] compositionl180F#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult183A,refPos182C);
          int[4] femIndicies183C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos182B);
          tensor[4,3] femDofs183D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies183C);
          tensor[3,4] basisResult183E#4 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3,3] probe_l_251810#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3,3] op1_e3_l_271811#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810);
          tensor[3,3,3] op1_e3_l_281812#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810,op1_e3_l_271811);
          tensor[3] probe_l_291813#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_301814#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_311815#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3] op1_e3_l_321816#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311815);
          tensor[3] op1_e3_l_331817#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301814,op1_e3_l_321816);
          real op1_e3_l_341818#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291813,op1_e3_l_331817);
          tensor[3,3] op1_e3_l_351819#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281812);
          real op1_e3_l_36181A#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341818);
          tensor[3,3] op1_e3_l_37181B#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351819,op1_e3_l_36181A);
          tensor[3] op1_e3_l_38181C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl180F,op1_e3_l_37181B);
          tensor[3] op1_e3_l_541820#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_38181C);
          real op1_e3_l_561822#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541820,op1_e3_l_541820);
          real op1_e3_l_571823#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561822);
          real op1_e3_l_581824#1 = λ(T0[])<Abs(T0)> (op1_e3_l_23180D);
          real op1_e3_l_591825#1 = λ(T0[],T1[])<(T0 * T1)> (thick1670,op1_e3_l_571823);
          real op1_e3_l_601826#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581824,op1_e3_l_591825);
          real op1_e3_l_611827#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_601826);
          real op1_e3_l_621828#2 = λ(T0[],T1[])<(T0 * T1)> (_t1808,op1_e3_l_611827);
          real op1_e3_l_631829#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16A5,_t16AC,op1_e3_l_621828);
          real a180A#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_631829);
          bool _t188E#1 = GT<real>(a180A,_t16A5);
          if _t188E then goto ASSIGN1AA4 else goto JOIN19F7
        ASSIGN1AA4:  preds = [COND1890]
          real op1_e3_l_6418B0#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16AC,_t16A5,op1_e3_l_621828);
          real op1_e3_l_6518B1#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_6418B0);
          real _t1891#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_6518B1);
          real op1_e3_l_31918#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec168A);
          real op1_e3_l_41919#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31918);
          real op1_e3_l_5191A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep167A,op1_e3_l_41919);
          real _t1917#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1678,op1_e3_l_5191A);
          real _t191F#1 = MathFn<pow>(_t1891,_t1917);
          real _t1921#2 = 0.11e1;
          real _t1923#1 = 0.7e0;
          real op1_e3_l_671940#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571823);
          real op1_e3_l_681941#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light1686,op1_e3_l_541820);
          real _t1925#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671940,op1_e3_l_681941);
          real shade19A3#1 = Max<real>(_t16A5,_t1925);
          real _t19A5#2 = λ(T0[])<T0> (compositionl180C);
          real op1_e3_l_1519C0#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,rayN1688);
          real op1_e3_l_1619C1#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,camFar1676);
          real op1_e3_l_1719C2#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C0,op1_e3_l_1619C1);
          real op1_e3_l_1819C3#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1921,_t1923);
          real op1_e3_l_1919C4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719C2,op1_e3_l_1819C3);
          real op1_e3_l_2019C5#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd167E,shade19A3);
          real Mtransform19CB#2 = Transform<IMAGE1D<double[3]>>(I1A7D);
          real MxPos19CC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19CB,_t19A5);
          real Ttranslate19CD#1 = Translate<IMAGE1D<double[3]>>(I1A7D);
          real imgPos19CE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19CC,Ttranslate19CD);
          real nd19CF#2 = Floor<1>(imgPos19CE);
          real f19D0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19CE,nd19CF);
          int n19D1#1 = RealToInt<1>(nd19CF);
          int lit19D2#1 = 0;
          int idx19D3#1 = IAdd(n19D1,lit19D2);
          tensor[3,2] ldvox19D4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A7D,idx19D3);
          tensor[2] kernX_19D5#1 = BuildPos<1>(f19D0);
          tensor[2] kevalX_d0_19D6#1 = EvalKernel<2,tent,0>(kernX_19D5);
          tensor[3] probe_l_2119C6#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img166A,_t166C,_t19A5,Mtransform19CB,ldvox19D4,kevalX_d0_19D6);
          real op1_e3_l_2219C7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,_t191F);
          real op1_e3_l_2319C8#1 = λ(T0[],T1[])<(T0 + T1)> (_t1921,op1_e3_l_1919C4);
          real op1_e3_l_2419C9#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa167C,op1_e3_l_2019C5);
          tensor[3] op1_e3_l_2519CA#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp168C,probe_l_2119C6,op1_e3_l_2219C7,op1_e3_l_2319C8,op1_e3_l_2419C9);
          tensor[3] rgb19BF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb168E,op1_e3_l_2519CA);
          real op1_e3_l_519F1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_2219C7);
          real transp19EF#1 = λ(T0[],T1[])<(T0 * T1)> (transp168C,op1_e3_l_519F1);
          goto JOIN19F7
        JOIN19F7:  preds = [ASSIGN19F4,COND1890]
          tensor[3] rgb19F5#1 = phi(rgb19BF,rgb168E)
          real transp19F6#1 = phi(transp19EF,transp168C)
          goto JOIN19FA
        JOIN19FA:  preds = [JOIN19F7,COND1807]
          tensor[3] rgb19F8#1 = phi(rgb19F5,rgb168E)
          real transp19F9#1 = phi(transp19F6,transp168C)
          goto JOIN19FD
        JOIN19FD:  preds = [JOIN19FA,COND16C0]
          tensor[3] rgb19FB#1 = phi(rgb19F8,rgb168E)
          real transp19FC#1 = phi(transp19F9,transp168C)
          goto JOIN1A00
        JOIN1A00:  preds = [JOIN19FD,COND16BD]
          tensor[3] rgb19FE#1 = phi(rgb19FB,rgb168E)
          real transp19FF#1 = phi(transp19FC,transp168C)
          goto JOIN1A03
        JOIN1A03:  preds = [JOIN1A00,COND16B8]
          tensor[3] rgb1A01#1 = phi(rgb19FE,rgb168E)
          real transp1A02#1 = phi(transp19FF,transp168C)
          goto JOIN1A06
        JOIN1A06:  preds = [JOIN1A03,COND16B5]
          tensor[3] rgb1A04#1 = phi(rgb1A01,rgb168E)
          real transp1A05#1 = phi(transp1A02,transp168C)
          goto JOIN1A09
        JOIN1A09:  preds = [JOIN1A06,COND16B0]
          tensor[3] rgb1A07#1 = phi(rgb1A04,rgb168E)
          real transp1A08#1 = phi(transp1A05,transp168C)
          goto JOIN1A0C
        JOIN1A0C:  preds = [JOIN1A09,COND16AB]
          tensor[3] rgb1A0A#3 = phi(rgb1A07,rgb168E)
          real transp1A0B#2 = phi(transp1A08,transp168C)
          real _t1A0D#1 = 0.1e-1;
          bool _t1A0F#1 = LT<real>(transp1A0B,_t1A0D);
          if _t1A0F then goto SAVE1A12 else goto JOIN1A16
        SAVE1A12:  preds = [COND1A11]
          self.transp = _t16A5;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A16
        JOIN1A16:  preds = [*STABILIZE1A14,COND1A11]
          real transp1A15#2 = phi(transp1A0B)
          bool _t1A17#1 = GT<real>(rayN1688,camFar1676);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1D
        SAVE1A1A:  preds = [COND1A19]
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A1D
        JOIN1A1D:  preds = [*STABILIZE1A1C,COND1A19]
          real rayN1A1E#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1688,rayStep167A);
          self.rayN = rayN1A1E;
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          active
        ASSIGN1A24:  preds = [COND1697]
          bool _t169B#1 = NEQ<int>(vi1692,sv1684);
          goto JOIN169C
    end update
    method stabilize
        ENTRY1A25:  preds = []
          bool debug1A26#1 = globals.debug14D4;
          int su1A28#1 = globals.su14D5;
          int sv1A2A#1 = globals.sv14D6;
          real transp1A2C#1 = self.transp;
          tensor[3] rgb1A2E#3 = self.rgb;
          tensor[4] rgba1A30#1 = self.rgba;
          int ui1A32#1 = self.ui;
          int vi1A34#1 = self.vi;
          real _t1A36#1 = 0.1e1;
          real a1A38#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A3A#1 = 0.e0;
          bool _t1A3C#1 = GT<real>(a1A38,_t1A3A);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A54
        ASSIGN1A40:  preds = [COND1A3E]
          real _t1A3F#1 = TensorIndex<tensor[3],[0]>(rgb1A2E);
          real _t1A41#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A3F,a1A38);
          real _t1A45#1 = TensorIndex<tensor[3],[1]>(rgb1A2E);
          real _t1A47#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A45,a1A38);
          real _t1A4B#1 = TensorIndex<tensor[3],[2]>(rgb1A2E);
          real _t1A4D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4B,a1A38);
          tensor[4] rgba1A51#1 = <tensor[4]>[_t1A41,_t1A47,_t1A4D,a1A38];
          goto JOIN1A54
        JOIN1A54:  preds = [ASSIGN1A52,COND1A3E]
          tensor[4] rgba1A53#2 = phi(rgba1A51,rgba1A30)
          bool _t1A55#1 = EQ<int>(ui1A32,su1A28);
          if _t1A55 then goto ASSIGN1A59 else goto JOIN1A5F
        ASSIGN1A59:  preds = [COND1A57]
          bool _t1A58#1 = EQ<int>(vi1A34,sv1A2A);
          if _t1A58 then goto COND1A5B else goto JOIN1A5E
        COND1A5B:  preds = [COND1A5A]
          if debug1A26 then goto MASSIGN1A5C else goto JOIN1A5D
        MASSIGN1A5C:  preds = [COND1A5B]
          Print<[real,tensor[4]]>(a1A38,rgba1A53);
          goto JOIN1A5D
        JOIN1A5D:  preds = [MASSIGN1A5C,COND1A5B]
          goto JOIN1A5E
        JOIN1A5E:  preds = [JOIN1A5D,COND1A5A]
          goto JOIN1A5F
        JOIN1A5F:  preds = [JOIN1A5E,COND1A57]
          self.rgba = rgba1A53;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A62:  preds = []
      int iresU1A63#1 = globals.iresU14CB;
      int iresV1A65#1 = globals.iresV14CC;
      int _t1A67#2 = 0;
      int _t1A69#2 = 1;
      int _t1A6B#1 = ISub(iresV1A65,_t1A69);
      int[] _t1A6D#1 = Range(_t1A67,_t1A6B);
    FOREACH1A70:  preds = [ASSIGN1A6E,NEXT1A79]
      foreach (vi1A6F in _t1A6D) on exit goto RETURN1A7A
      int _t1A71#1 = ISub(iresU1A63,_t1A69);
      int[] _t1A73#1 = Range(_t1A67,_t1A71);
    FOREACH1A76:  preds = [ASSIGN1A74,NEXT1A78]
      foreach (ui1A75 in _t1A73) on exit goto NEXT1A79
      new raycast(ui1A75,vi1A6F);
      goto FOREACH1A76
    NEXT1A79:  preds = [FOREACH1A76]
      goto FOREACH1A70
    RETURN1A7A:  preds = [FOREACH1A70]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14C2 (a) = <no-default>
  input 0b042F_intermedateGlobal14C3 (b) = <no-default>
  input 0c0431_intermedateGlobal14C4 (c) = <no-default>
  input isoval14C5 (isoval) = <default>
  input thick14C6 (thick) = <default>
  input camEye14C7 (camEye) = <default>
  input camAt14C8 (camAt) = <default>
  input camUp14C9 (camUp) = <default>
  input camFOV14CA (camFOV) = <default>
  input iresU14CB (iresU) = <default>
  input iresV14CC (iresV) = <default>
  input camNear14CD (camNear) = <default>
  input camFar14CE (camFar) = <default>
  input refStep14CF (refStep) = <default>
  input rayStep14D0 (rayStep) = <default>
  input lightVsp14D1 (lightVsp) = <default>
  input phongKa14D2 (phongKa) = <default>
  input phongKd14D3 (phongKd) = <default>
  input debug14D4 (debug) = <default>
  input su14D5 (su) = <default>
  input sv14D6 (sv) = <default>
  global real camDist14D7
  global tensor[3] camN14D8
  global tensor[3] camU14D9
  global tensor[3] camV14DA
  global real camVmax14DB
  global real camUmax14DC
  global tensor[3] light14DD
  global femData:Mesh _t14DE
  global femData:Space _tX14DF
  global femData:FemFunc c14E0
  global image(IMAGE1D<double[3]>) img14E1
  global kernel _tXX14E2
  global image(IMAGE1D<double[3]>) I1A7C
## functions
  function femData:MeshPos findPos16C1 (femData:Mesh mesh16C2#13, tensor[3] pos16C3#3) {
    ENTRY16C4:  preds = []
      real _t16C5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16C7#10 = <tensor[3]>[_t16C5,_t16C5,_t16C5];
      int newtonInt16C9#3 = 0;
      int cellInt16CB#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16C2);
      int _t16CD#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16C2);
      int _t16CF#3 = 1;
      int numCell16D1#2 = ISub(_t16CD,_t16CF);
      int _t16D3#2 = 16;
      int _t16D5#1 = IMul(_t16D3,numCell16D1);
      int[] _t16D7#1 = Range(newtonInt16C9,_t16D5);
    FOREACH16DA:  preds = [ASSIGN16D8,NEXT17FE]
      foreach (itter16D9 in _t16D7) on exit goto ASSIGN1801
        int cellInt16DD#11 = phi(cellInt16CB,cellInt17FB)
        int newtonInt17ED#1 = phi(newtonInt16C9,newtonInt17FC)
        tensor[3] xn16DC#6 = phi(xn16C7,xn16DB)
      int[4] femIndicies16EE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs16EF#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies16EE);
      tensor[3,4] basisResult16F0#4 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_1016DE#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3,3] op1_e3_l_1216DF#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE);
      tensor[3,3,3] op1_e3_l_1316E0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE,op1_e3_l_1216DF);
      tensor[3] probe_l_1416E1#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1516E2#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1616E3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3] op1_e3_l_1716E4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616E3);
      tensor[3] op1_e3_l_1816E5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516E2,op1_e3_l_1716E4);
      real op1_e3_l_1916E6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416E1,op1_e3_l_1816E5);
      tensor[3,3] op1_e3_l_2016E7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316E0);
      real op1_e3_l_2116E8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916E6);
      tensor[4] basisResult16F8#2 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_2216E9#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3,3] op1_e3_l_2316EA#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016E7,op1_e3_l_2116E8);
      tensor[3] op1_e3_l_2416EB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_2216E9);
      tensor[3] op1_e3_l_2516EC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_2416EB);
      tensor[3] xn16DB#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_2516EC);
      real _t1715#1 = 0.1e-7;
      tensor[3] probe_l_211723#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt16DD,mesh16C2,xn16DC,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3] op1_e3_l_231725#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_211723);
      tensor[3] op1_e3_l_391726#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_231725);
      real op1_e3_l_411727#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_391726,op1_e3_l_391726);
      real _t1717#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_411727);
      bool _t1751#1 = GTE<real>(_t1715,_t1717);
      if _t1751 then goto ASSIGN1755 else goto JOIN17EB
    ASSIGN1755:  preds = [COND1753]
      real _t1754#4 = 0.1e1;
      tensor[3] _t1756#1 = <tensor[3]>[_t1754,_t1754,_t1754];
      real _t1758#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1756,xn16DB);
      bool _t1792#1 = GT<real>(_t1754,_t1758);
      real _t1794#3 = 0.1e-8;
      tensor[3] _t1796#1 = <tensor[3]>[_t1794,_t1794,_t1794];
      tensor[3] _t1798#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1796,xn16DB);
      real _t17D2#1 = TensorIndex<tensor[3],[0]>(_t1798);
      real _t17D4#3 = -0.e0;
      bool _t17D6#1 = GT<real>(_t17D2,_t17D4);
      real _t17D8#1 = TensorIndex<tensor[3],[1]>(_t1798);
      bool _t17DA#1 = GT<real>(_t17D8,_t17D4);
      real _t17DC#1 = TensorIndex<tensor[3],[2]>(_t1798);
      bool _t17DE#1 = GT<real>(_t17DC,_t17D4);
      bool _t17E0#1 = BAnd(_t17DA,_t17DE);
      bool _t17E2#1 = BAnd(_t17D6,_t17E0);
      bool _t17E4#1 = BAnd(_t1792,_t17E2);
      if _t17E4 then goto ASSIGN17E8 else goto JOIN17EA
    ASSIGN17E8:  preds = [COND17E6]
      femData:MeshPos _t17E7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16C2,cellInt16DD,xn16DB,pos16C3);
      return _t17E7
      goto JOIN17EA
    JOIN17EA:  preds = [*RETURN(_t17E7)17E9,COND17E6]
      goto JOIN17EB
    JOIN17EB:  preds = [JOIN17EA,COND1753]
      int newtonInt17EC#2 = IAdd(newtonInt17ED,_t16CF);
      bool _t17EF#1 = GTE<int>(newtonInt17EC,_t16D3);
      if _t17EF then goto ASSIGN17F3 else goto JOIN17FD
    ASSIGN17F3:  preds = [COND17F1]
      bool _t17F2#1 = GTE<int>(cellInt16DD,numCell16D1);
      if _t17F2 then goto ASSIGN17F6 else goto ASSIGN17FF
    ASSIGN17F6:  preds = [COND17F4]
      femData:MeshPos _t17F5#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t17F5
      goto JOIN17FA
    JOIN17FA:  preds = [*RETURN(_t17F5)17F7,ASSIGN17FF]
      int cellInt17F8#1 = phi(cellInt17F9)
      goto JOIN17FD
    JOIN17FD:  preds = [JOIN17FA,COND17F1]
      int cellInt17FB#1 = phi(cellInt17F8,cellInt16DD)
      int newtonInt17FC#1 = phi(newtonInt16C9,newtonInt17EC)
      goto FOREACH16DA
    ASSIGN17FF:  preds = [COND17F4]
      int cellInt17F9#1 = IAdd(cellInt16DD,_t16CF);
      goto JOIN17FA
    ASSIGN1801:  preds = [FOREACH16DA]
      femData:MeshPos _t1800#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t1800
}
## input initialization
  ENTRY14E3:  preds = []
    real isoval14E4#1 = 0.2e0;
    globals.isoval14C5 = isoval14E4;
    real thick14E7#1 = 0.7e-1;
    globals.thick14C6 = thick14E7;
    real _t14EA#2 = -0.3e1;
    real _t14EC#1 = 0.3e1;
    tensor[3] camEye14EE#1 = <tensor[3]>[_t14EA,_t14EA,_t14EC];
    globals.camEye14C7 = camEye14EE;
    real _t14F1#3 = 0.5e0;
    tensor[3] camAt14F3#1 = <tensor[3]>[_t14F1,_t14F1,_t14F1];
    globals.camAt14C8 = camAt14F3;
    real _t14F6#2 = 0.e0;
    real _t14F8#2 = 0.1e1;
    tensor[3] camUp14FA#2 = <tensor[3]>[_t14F6,_t14F6,_t14F8];
    globals.camUp14C9 = camUp14FA;
    real camFOV14FD#1 = 0.137e2;
    globals.camFOV14CA = camFOV14FD;
    int iresU1500#2 = 500;
    globals.iresU14CB = iresU1500;
    globals.iresV14CC = iresU1500;
    real camNear1504#1 = -0.2e1;
    globals.camNear14CD = camNear1504;
    real camFar1507#1 = 0.5e1;
    globals.camFar14CE = camFar1507;
    globals.refStep14CF = _t14F8;
    real rayStep150B#1 = 0.1e-1;
    globals.rayStep14D0 = rayStep150B;
    globals.lightVsp14D1 = camUp14FA;
    real phongKa150F#1 = 0.1e0;
    globals.phongKa14D2 = phongKa150F;
    real phongKd1512#1 = 0.9e0;
    globals.phongKd14D3 = phongKd1512;
    bool debug1515#1 = false;
    globals.debug14D4 = debug1515;
    int su1518#2 = 250;
    globals.su14D5 = su1518;
    globals.sv14D6 = su1518;
    return
## global-variable initialization
  ENTRY151D:  preds = []
    femData:Mesh a151E#3 = globals.a14C2;
    femData:Space 0b042F_intermedateGlobal1520#1 = globals.0b042F_intermedateGlobal14C3;
    femData:FemFunc 0c0431_intermedateGlobal1522#1 = globals.0c0431_intermedateGlobal14C4;
    tensor[3] camEye1526#1 = globals.camEye14C7;
    tensor[3] camAt1528#1 = globals.camAt14C8;
    tensor[3] camUp152A#1 = globals.camUp14C9;
    real camFOV152C#1 = globals.camFOV14CA;
    int iresU152E#1 = globals.iresU14CB;
    int iresV1530#1 = globals.iresV14CC;
    tensor[3] lightVsp1532#2 = globals.lightVsp14D1;
    int _t1534#1 = 0;
    int _t1536#1 = 1;
    int _t1538#1 = ExtractFemItem<int,NumCell(Mesh)>(a151E);
    int _t153A#1 = ISub(_t1538,_t1536);
    int[] _t153C#1 = Range(_t1534,_t153A);
    femData:MeshCell[] _t153E#1 = <femData:MeshCell[]>{};
  FOREACH1541:  preds = [ASSIGN153F,NEXT1547]
    foreach (_t1540 in _t153C) on exit goto ASSIGN1549
      femData:MeshCell[] _t1545#1 = phi(_t153E,_t1544)
    femData:MeshCell _t1542#1 = LoadFem<femData:MeshCell>(a151E,_t1540);
    femData:MeshCell[] _t1544#1 = Append<femData:MeshCell>(_t1545,_t1542);
    goto FOREACH1541
  ASSIGN1549:  preds = [FOREACH1541]
    femData:Space b1548#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1520,a151E);
    femData:FemFunc c154A#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1522,b1548);
    femData:Space _t154C#2 = ExtractFem<femData:Space,femData:FemFunc>(c154A);
    femData:Mesh _t154E#1 = ExtractFem<femData:Mesh,femData:Space>(_t154C);
    image(IMAGE1D<double[3]>) I1550#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1552#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1554#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1550);
    tensor[3] op1_e3_l_21557#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_41558#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21557,op1_e3_l_21557);
    real camDist1556#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41558);
    globals.camDist14D7 = camDist1556;
    real op1_e3_l_91561#6 = λ(T0[])<(1) / ( T0)> (camDist1556);
    tensor[3] camN155D#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21557,op1_e3_l_91561);
    globals.camN14D8 = camN155D;
    tensor[3,3] op1_e3_l_15156C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp152A);
    tensor[3] op1_e3_l_17156E#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21557,op1_e3_l_15156C);
    real op1_e3_l_34156F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_17156E,op1_e3_l_17156E);
    real op1_e3_l_351570#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91561,op1_e3_l_91561,op1_e3_l_34156F);
    real op1_e3_l_361571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351570);
    tensor[3] op1_e3_l_371572#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_17156E);
    real op1_e3_l_381573#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361571);
    tensor[3] camU1568#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371572,op1_e3_l_381573);
    globals.camU14D9 = camU1568;
    tensor[3,3] op1_e3_l_45158B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21557);
    tensor[3] op1_e3_l_47158C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_17156E,op1_e3_l_45158B);
    tensor[3] op1_e3_l_50158E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_47158C);
    tensor[3] camV1581#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_381573,op1_e3_l_91561,op1_e3_l_50158E);
    globals.camV14DA = camV1581;
    real _t159E#1 = 0.314159265358979323846264338327950288e1;
    real _t15A0#1 = 0.36e3;
    real op1_e3_l_515A3#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV152C,_t159E);
    real op1_e3_l_615A4#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15A0,op1_e3_l_515A3);
    real op1_e3_l_1015A7#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615A4);
    real camVmax15A2#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015A7,camDist1556);
    globals.camVmax14DB = camVmax15A2;
    real _t15B1#1 = IntToReal(iresU152E);
    real _t15B3#1 = IntToReal(iresV1530);
    real op1_e3_l_1415BC#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15B1,op1_e3_l_1015A7,camDist1556);
    real camUmax15B5#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B3,op1_e3_l_1415BC);
    globals.camUmax14DC = camUmax15B5;
    tensor[3,3] _t15C6#1 = <tensor[3,3]>[camU1568,camV1581,camN155D];
    real op1_e3_l_315C9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1532);
    real op1_e3_l_415CA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315C9);
    real op1_e3_l_515CB#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415CA);
    tensor[3] op1_e3_l_615CC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15C6,lightVsp1532);
    tensor[3] light15C8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515CB,op1_e3_l_615CC);
    globals.light14DD = light15C8;
    globals._t14DE = _t154E;
    globals._tX14DF = _t154C;
    globals.c14E0 = c154A;
    globals.img14E1 = img1554;
    globals._tXX14E2 = _t1552;
    globals.I1A7C = I1550;
    return
## strand
  strand raycast (int ui15D9#2, int vi15DA#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15E5:  preds = []
        int iresU15E6#1 = globals.iresU14CB;
        int iresV15E8#1 = globals.iresV14CC;
        real camNear15EA#1 = globals.camNear14CD;
        real camDist15EC#1 = globals.camDist14D7;
        tensor[3] camN15EE#1 = globals.camN14D8;
        tensor[3] camU15F0#1 = globals.camU14D9;
        tensor[3] camV15F2#1 = globals.camV14DA;
        real camVmax15F4#4 = globals.camVmax14DB;
        real camUmax15F6#2 = globals.camUmax14DC;
        real _t15F8#5 = -0.5e0;
        real _t15FA#1 = IntToReal(ui15D9);
        real _t15FC#1 = IntToReal(iresU15E6);
        real _t15FE#3 = 0.5e0;
        real op1_e3_l_61601#1 = λ(T0[],T1[])<(T0) - (T1)> (_t15FC,_t15FE);
        real op1_e3_l_71602#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t15FA);
        real op1_e3_l_81603#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61601);
        real op1_e3_l_91604#2 = λ(T0[])<Neg(T0)> (camUmax15F6);
        real op1_e3_l_101605#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71602,op1_e3_l_81603);
        real op1_e3_l_111606#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax15F6,op1_e3_l_91604);
        real op1_e3_l_131607#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101605,op1_e3_l_111606);
        real rayU1600#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91604,op1_e3_l_131607);
        real _t1610#1 = IntToReal(vi15DA);
        real _t1612#2 = IntToReal(iresV15E8);
        real op1_e3_l_61615#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1612,_t15FE);
        real op1_e3_l_71616#2 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t1610);
        real op1_e3_l_81617#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61615);
        real op1_e3_l_91618#1 = λ(T0[])<Neg(T0)> (camVmax15F4);
        real op1_e3_l_101619#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_81617);
        real op1_e3_l_11161A#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax15F4,op1_e3_l_91618);
        real op1_e3_l_12161B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101619,op1_e3_l_11161A);
        real rayV1614#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_12161B);
        real op1_e3_l_25162D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15FE,_t1612);
        real op1_e3_l_27162F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_25162D);
        real op1_e3_l_291631#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_27162F);
        real op1_e3_l_311633#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291631,op1_e3_l_11161A);
        real op1_e3_l_321634#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_311633);
        tensor[3] op1_e3_l_331635#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU15F0,rayU1600);
        tensor[3] op1_e3_l_341636#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV15F2,op1_e3_l_321634);
        tensor[3] op1_e3_l_351637#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331635,op1_e3_l_341636);
        tensor[3] op1_e3_l_361638#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist15EC,op1_e3_l_351637);
        tensor[3] rayVec1624#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN15EE,op1_e3_l_361638);
        real transp164E#1 = 0.1e1;
        real _t1650#8 = 0.e0;
        tensor[3] rgb1652#1 = <tensor[3]>[_t1650,_t1650,_t1650];
        tensor[4] rgba1654#1 = <tensor[4]>[_t1650,_t1650,_t1650,_t1650];
        self.rayU = rayU1600;
        self.rayV = rayV1614;
        self.rayN = camNear15EA;
        self.rayVec = rayVec1624;
        self.transp = transp164E;
        self.rgb = rgb1652;
        self.rgba = rgba1654;
        self.gray = _t1650;
        self.ui = ui15D9;
        self.vi = vi15DA;
        return
    end state init
    method update
        ENTRY1661:  preds = []
          image(IMAGE1D<double[3]>) I1A7D#3 = globals.I1A7C;
          real isoval1662#1 = globals.isoval14C5;
          femData:Mesh _t1664#9 = globals._t14DE;
          femData:Space _t1666#3 = globals._tX14DF;
          femData:FemFunc c1668#3 = globals.c14E0;
          image(IMAGE1D<double[3]>) img166A#1 = globals.img14E1;
          kernel _t166C#1 = globals._tXX14E2;
          femData:Mesh a166E#1 = globals.a14C2;
          real thick1670#1 = globals.thick14C6;
          tensor[3] camEye1672#1 = globals.camEye14C7;
          real camNear1674#2 = globals.camNear14CD;
          real camFar1676#2 = globals.camFar14CE;
          real refStep1678#1 = globals.refStep14CF;
          real rayStep167A#2 = globals.rayStep14D0;
          real phongKa167C#1 = globals.phongKa14D2;
          real phongKd167E#1 = globals.phongKd14D3;
          bool debug1680#1 = globals.debug14D4;
          int su1682#1 = globals.su14D5;
          int sv1684#1 = globals.sv14D6;
          tensor[3] light1686#1 = globals.light14DD;
          real rayN1688#4 = self.rayN;
          tensor[3] rayVec168A#2 = self.rayVec;
          real transp168C#10 = self.transp;
          tensor[3] rgb168E#9 = self.rgb;
          int ui1690#1 = self.ui;
          int vi1692#1 = self.vi;
          if debug1680 then goto ASSIGN1696 else goto JOIN16A0
        ASSIGN1696:  preds = [COND1694]
          bool _t1695#1 = NEQ<int>(ui1690,su1682);
          if _t1695 then goto ASSIGN1699 else goto ASSIGN1A24
        ASSIGN1699:  preds = [COND1697]
          bool _t1698#1 = true;
          goto JOIN169C
        JOIN169C:  preds = [ASSIGN1699,ASSIGN1A24]
          bool _t169A#1 = phi(_t1698,_t169B)
          if _t169A then goto STABILIZE169E else goto JOIN169F
        STABILIZE169E:  preds = [COND169D]
          stabilize
          goto JOIN169F
        JOIN169F:  preds = [*STABILIZE169E,COND169D]
          goto JOIN16A0
        JOIN16A0:  preds = [JOIN169F,COND1694]
          tensor[3] op1_e3_l_316A2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1688,rayVec168A);
          tensor[3] x16A1#11 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1672,op1_e3_l_316A2);
          real _t16A5#8 = 0.e0;
          real _t16A7#2 = TensorIndex<tensor[3],[0]>(x16A1);
          bool _t16A9#1 = LTE<real>(_t16A5,_t16A7);
          if _t16A9 then goto ASSIGN16AD else goto JOIN1A0C
        ASSIGN16AD:  preds = [COND16AB]
          real _t16AC#11 = 0.1e1;
          bool _t16AE#1 = LTE<real>(_t16A7,_t16AC);
          if _t16AE then goto ASSIGN16B2 else goto JOIN1A09
        ASSIGN16B2:  preds = [COND16B0]
          real _t16B1#2 = TensorIndex<tensor[3],[1]>(x16A1);
          bool _t16B3#1 = LTE<real>(_t16A5,_t16B1);
          if _t16B3 then goto ASSIGN16B7 else goto JOIN1A06
        ASSIGN16B7:  preds = [COND16B5]
          bool _t16B6#1 = LTE<real>(_t16B1,_t16AC);
          if _t16B6 then goto ASSIGN16BA else goto JOIN1A03
        ASSIGN16BA:  preds = [COND16B8]
          real _t16B9#2 = TensorIndex<tensor[3],[2]>(x16A1);
          bool _t16BB#1 = LTE<real>(_t16A5,_t16B9);
          if _t16BB then goto ASSIGN16BF else goto JOIN1A00
        ASSIGN16BF:  preds = [COND16BD]
          bool _t16BE#1 = LTE<real>(_t16B9,_t16AC);
          if _t16BE then goto ASSIGN1804 else goto JOIN19FD
        ASSIGN1804:  preds = [COND16C0]
          femData:MeshPos p1803#1 = findPos16C1 (a166E,x16A1);
          bool _t1805#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1803);
          if _t1805 then goto ASSIGN1809 else goto JOIN19FA
        ASSIGN1809:  preds = [COND1807]
          real _t1808#1 = 0.13e1;
          femData:MeshPos callFindPos182A#2 = findPos16C1 (_t1664,x16A1);
          int intPos182B#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos182A);
          tensor[3] refPos182C#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos182A);
          int[10] femIndicies1831#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos182B);
          tensor[10] femDofs1832#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1831);
          tensor[10] basisResult1833#1 = EvaluateBasis<BasisArray(10)>(refPos182C);
          real compositionl180C#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult1833,refPos182C);
          real op1_e3_l_23180D#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1662,compositionl180C);
          tensor[3,10] basisResult183A#1 = EvaluateBasis<BasisArray(3,10)>(refPos182C);
          tensor[3] compositionl180F#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult183A,refPos182C);
          int[4] femIndicies183C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos182B);
          tensor[4,3] femDofs183D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies183C);
          tensor[3,4] basisResult183E#4 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3,3] probe_l_251810#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3,3] op1_e3_l_271811#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810);
          tensor[3,3,3] op1_e3_l_281812#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810,op1_e3_l_271811);
          tensor[3] probe_l_291813#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_301814#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_311815#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3] op1_e3_l_321816#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311815);
          tensor[3] op1_e3_l_331817#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301814,op1_e3_l_321816);
          real op1_e3_l_341818#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291813,op1_e3_l_331817);
          tensor[3,3] op1_e3_l_351819#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281812);
          real op1_e3_l_36181A#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341818);
          tensor[3,3] op1_e3_l_37181B#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351819,op1_e3_l_36181A);
          tensor[3] op1_e3_l_38181C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl180F,op1_e3_l_37181B);
          tensor[3] op1_e3_l_541820#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_38181C);
          real op1_e3_l_561822#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541820,op1_e3_l_541820);
          real op1_e3_l_571823#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561822);
          real op1_e3_l_581824#1 = λ(T0[])<Abs(T0)> (op1_e3_l_23180D);
          real op1_e3_l_591825#1 = λ(T0[],T1[])<(T0 * T1)> (thick1670,op1_e3_l_571823);
          real op1_e3_l_601826#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581824,op1_e3_l_591825);
          real op1_e3_l_611827#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_601826);
          real op1_e3_l_621828#2 = λ(T0[],T1[])<(T0 * T1)> (_t1808,op1_e3_l_611827);
          real op1_e3_l_631829#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16A5,_t16AC,op1_e3_l_621828);
          real a180A#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_631829);
          bool _t188E#1 = GT<real>(a180A,_t16A5);
          if _t188E then goto ASSIGN1AA4 else goto JOIN19F7
        ASSIGN1AA4:  preds = [COND1890]
          real op1_e3_l_6418B0#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16AC,_t16A5,op1_e3_l_621828);
          real op1_e3_l_6518B1#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_6418B0);
          real _t1891#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_6518B1);
          real op1_e3_l_31918#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec168A);
          real op1_e3_l_41919#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31918);
          real op1_e3_l_5191A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep167A,op1_e3_l_41919);
          real _t1917#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1678,op1_e3_l_5191A);
          real _t191F#1 = MathFn<pow>(_t1891,_t1917);
          real _t1921#2 = 0.11e1;
          real _t1923#1 = 0.7e0;
          real op1_e3_l_671940#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571823);
          real op1_e3_l_681941#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light1686,op1_e3_l_541820);
          real _t1925#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671940,op1_e3_l_681941);
          real shade19A3#1 = Max<real>(_t16A5,_t1925);
          real _t19A5#2 = λ(T0[])<T0> (compositionl180C);
          real op1_e3_l_1519C0#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,rayN1688);
          real op1_e3_l_1619C1#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,camFar1676);
          real op1_e3_l_1719C2#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C0,op1_e3_l_1619C1);
          real op1_e3_l_1819C3#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1921,_t1923);
          real op1_e3_l_1919C4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719C2,op1_e3_l_1819C3);
          real op1_e3_l_2019C5#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd167E,shade19A3);
          real Mtransform19CB#2 = Transform<IMAGE1D<double[3]>>(I1A7D);
          real MxPos19CC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19CB,_t19A5);
          real Ttranslate19CD#1 = Translate<IMAGE1D<double[3]>>(I1A7D);
          real imgPos19CE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19CC,Ttranslate19CD);
          real nd19CF#2 = Floor<1>(imgPos19CE);
          real f19D0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19CE,nd19CF);
          int n19D1#1 = RealToInt<1>(nd19CF);
          int idx19D3#1 = n19D1;
          tensor[3,2] ldvox19D4#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A7D,idx19D3);
          tensor[2] kernX_19D5#1 = BuildPos<1>(f19D0);
          tensor[2] kevalX_d0_19D6#1 = EvalKernel<2,tent,0>(kernX_19D5);
          tensor[3] probe_l_2119C6#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img166A,_t166C,_t19A5,Mtransform19CB,ldvox19D4,kevalX_d0_19D6);
          real op1_e3_l_2219C7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,_t191F);
          real op1_e3_l_2319C8#1 = λ(T0[],T1[])<(T0 + T1)> (_t1921,op1_e3_l_1919C4);
          real op1_e3_l_2419C9#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa167C,op1_e3_l_2019C5);
          tensor[3] op1_e3_l_2519CA#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp168C,probe_l_2119C6,op1_e3_l_2219C7,op1_e3_l_2319C8,op1_e3_l_2419C9);
          tensor[3] rgb19BF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb168E,op1_e3_l_2519CA);
          real op1_e3_l_519F1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_2219C7);
          real transp19EF#1 = λ(T0[],T1[])<(T0 * T1)> (transp168C,op1_e3_l_519F1);
          goto JOIN19F7
        JOIN19F7:  preds = [ASSIGN19F4,COND1890]
          tensor[3] rgb19F5#1 = phi(rgb19BF,rgb168E)
          real transp19F6#1 = phi(transp19EF,transp168C)
          goto JOIN19FA
        JOIN19FA:  preds = [JOIN19F7,COND1807]
          tensor[3] rgb19F8#1 = phi(rgb19F5,rgb168E)
          real transp19F9#1 = phi(transp19F6,transp168C)
          goto JOIN19FD
        JOIN19FD:  preds = [JOIN19FA,COND16C0]
          tensor[3] rgb19FB#1 = phi(rgb19F8,rgb168E)
          real transp19FC#1 = phi(transp19F9,transp168C)
          goto JOIN1A00
        JOIN1A00:  preds = [JOIN19FD,COND16BD]
          tensor[3] rgb19FE#1 = phi(rgb19FB,rgb168E)
          real transp19FF#1 = phi(transp19FC,transp168C)
          goto JOIN1A03
        JOIN1A03:  preds = [JOIN1A00,COND16B8]
          tensor[3] rgb1A01#1 = phi(rgb19FE,rgb168E)
          real transp1A02#1 = phi(transp19FF,transp168C)
          goto JOIN1A06
        JOIN1A06:  preds = [JOIN1A03,COND16B5]
          tensor[3] rgb1A04#1 = phi(rgb1A01,rgb168E)
          real transp1A05#1 = phi(transp1A02,transp168C)
          goto JOIN1A09
        JOIN1A09:  preds = [JOIN1A06,COND16B0]
          tensor[3] rgb1A07#1 = phi(rgb1A04,rgb168E)
          real transp1A08#1 = phi(transp1A05,transp168C)
          goto JOIN1A0C
        JOIN1A0C:  preds = [JOIN1A09,COND16AB]
          tensor[3] rgb1A0A#3 = phi(rgb1A07,rgb168E)
          real transp1A0B#2 = phi(transp1A08,transp168C)
          real _t1A0D#1 = 0.1e-1;
          bool _t1A0F#1 = LT<real>(transp1A0B,_t1A0D);
          if _t1A0F then goto SAVE1A12 else goto JOIN1A16
        SAVE1A12:  preds = [COND1A11]
          self.transp = _t16A5;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A16
        JOIN1A16:  preds = [*STABILIZE1A14,COND1A11]
          real transp1A15#2 = phi(transp1A0B)
          bool _t1A17#1 = GT<real>(rayN1688,camFar1676);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1D
        SAVE1A1A:  preds = [COND1A19]
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A1D
        JOIN1A1D:  preds = [*STABILIZE1A1C,COND1A19]
          real rayN1A1E#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1688,rayStep167A);
          self.rayN = rayN1A1E;
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          active
        ASSIGN1A24:  preds = [COND1697]
          bool _t169B#1 = NEQ<int>(vi1692,sv1684);
          goto JOIN169C
    end update
    method stabilize
        ENTRY1A25:  preds = []
          bool debug1A26#1 = globals.debug14D4;
          int su1A28#1 = globals.su14D5;
          int sv1A2A#1 = globals.sv14D6;
          real transp1A2C#1 = self.transp;
          tensor[3] rgb1A2E#3 = self.rgb;
          tensor[4] rgba1A30#1 = self.rgba;
          int ui1A32#1 = self.ui;
          int vi1A34#1 = self.vi;
          real _t1A36#1 = 0.1e1;
          real a1A38#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A3A#1 = 0.e0;
          bool _t1A3C#1 = GT<real>(a1A38,_t1A3A);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A54
        ASSIGN1A40:  preds = [COND1A3E]
          real _t1A3F#1 = TensorIndex<tensor[3],[0]>(rgb1A2E);
          real _t1A41#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A3F,a1A38);
          real _t1A45#1 = TensorIndex<tensor[3],[1]>(rgb1A2E);
          real _t1A47#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A45,a1A38);
          real _t1A4B#1 = TensorIndex<tensor[3],[2]>(rgb1A2E);
          real _t1A4D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4B,a1A38);
          tensor[4] rgba1A51#1 = <tensor[4]>[_t1A41,_t1A47,_t1A4D,a1A38];
          goto JOIN1A54
        JOIN1A54:  preds = [ASSIGN1A52,COND1A3E]
          tensor[4] rgba1A53#2 = phi(rgba1A51,rgba1A30)
          bool _t1A55#1 = EQ<int>(ui1A32,su1A28);
          if _t1A55 then goto ASSIGN1A59 else goto JOIN1A5F
        ASSIGN1A59:  preds = [COND1A57]
          bool _t1A58#1 = EQ<int>(vi1A34,sv1A2A);
          if _t1A58 then goto COND1A5B else goto JOIN1A5E
        COND1A5B:  preds = [COND1A5A]
          if debug1A26 then goto MASSIGN1A5C else goto JOIN1A5D
        MASSIGN1A5C:  preds = [COND1A5B]
          Print<[real,tensor[4]]>(a1A38,rgba1A53);
          goto JOIN1A5D
        JOIN1A5D:  preds = [MASSIGN1A5C,COND1A5B]
          goto JOIN1A5E
        JOIN1A5E:  preds = [JOIN1A5D,COND1A5A]
          goto JOIN1A5F
        JOIN1A5F:  preds = [JOIN1A5E,COND1A57]
          self.rgba = rgba1A53;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A62:  preds = []
      int iresU1A63#1 = globals.iresU14CB;
      int iresV1A65#1 = globals.iresV14CC;
      int _t1A67#2 = 0;
      int _t1A69#2 = 1;
      int _t1A6B#1 = ISub(iresV1A65,_t1A69);
      int[] _t1A6D#1 = Range(_t1A67,_t1A6B);
    FOREACH1A70:  preds = [ASSIGN1A6E,NEXT1A79]
      foreach (vi1A6F in _t1A6D) on exit goto RETURN1A7A
      int _t1A71#1 = ISub(iresU1A63,_t1A69);
      int[] _t1A73#1 = Range(_t1A67,_t1A71);
    FOREACH1A76:  preds = [ASSIGN1A74,NEXT1A78]
      foreach (ui1A75 in _t1A73) on exit goto NEXT1A79
      new raycast(ui1A75,vi1A6F);
      goto FOREACH1A76
    NEXT1A79:  preds = [FOREACH1A76]
      goto FOREACH1A70
    RETURN1A7A:  preds = [FOREACH1A70]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a14C2 (a) = <no-default>
  input 0b042F_intermedateGlobal14C3 (b) = <no-default>
  input 0c0431_intermedateGlobal14C4 (c) = <no-default>
  input isoval14C5 (isoval) = <default>
  input thick14C6 (thick) = <default>
  input camEye14C7 (camEye) = <default>
  input camAt14C8 (camAt) = <default>
  input camUp14C9 (camUp) = <default>
  input camFOV14CA (camFOV) = <default>
  input iresU14CB (iresU) = <default>
  input iresV14CC (iresV) = <default>
  input camNear14CD (camNear) = <default>
  input camFar14CE (camFar) = <default>
  input refStep14CF (refStep) = <default>
  input rayStep14D0 (rayStep) = <default>
  input lightVsp14D1 (lightVsp) = <default>
  input phongKa14D2 (phongKa) = <default>
  input phongKd14D3 (phongKd) = <default>
  input debug14D4 (debug) = <default>
  input su14D5 (su) = <default>
  input sv14D6 (sv) = <default>
  global real camDist14D7
  global tensor[3] camN14D8
  global tensor[3] camU14D9
  global tensor[3] camV14DA
  global real camVmax14DB
  global real camUmax14DC
  global tensor[3] light14DD
  global femData:Mesh _t14DE
  global femData:Space _tX14DF
  global femData:FemFunc c14E0
  global image(IMAGE1D<double[3]>) img14E1
  global kernel _tXX14E2
  global image(IMAGE1D<double[3]>) I1A7C
## functions
  function femData:MeshPos findPos16C1 (femData:Mesh mesh16C2#13, tensor[3] pos16C3#3) {
    ENTRY16C4:  preds = []
      real _t16C5#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16C7#10 = <tensor[3]>[_t16C5,_t16C5,_t16C5];
      int newtonInt16C9#3 = 0;
      int cellInt16CB#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16C2);
      int _t16CD#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16C2);
      int _t16CF#3 = 1;
      int numCell16D1#2 = ISub(_t16CD,_t16CF);
      int _t16D3#2 = 16;
      int _t16D5#1 = IMul(_t16D3,numCell16D1);
      int[] _t16D7#1 = Range(newtonInt16C9,_t16D5);
    FOREACH16DA:  preds = [ASSIGN16D8,NEXT17FE]
      foreach (itter16D9 in _t16D7) on exit goto ASSIGN1801
        int cellInt16DD#11 = phi(cellInt16CB,cellInt17FB)
        int newtonInt17ED#1 = phi(newtonInt16C9,newtonInt17FC)
        tensor[3] xn16DC#6 = phi(xn16C7,xn16DB)
      int[4] femIndicies16EE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh16C2,cellInt16DD);
      tensor[4,3] femDofs16EF#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh16C2,femIndicies16EE);
      tensor[3,4] basisResult16F0#4 = EvaluateBasis<BasisArray(3,4)>(xn16C7);
      tensor[3,3] probe_l_1016DE#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3,3] op1_e3_l_1216DF#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE);
      tensor[3,3,3] op1_e3_l_1316E0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1016DE,op1_e3_l_1216DF);
      tensor[3] probe_l_1416E1#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1516E2#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3] probe_l_1616E3#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt16DD,mesh16C2,xn16C7,femDofs16EF,basisResult16F0,xn16C7);
      tensor[3,3] op1_e3_l_1716E4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1616E3);
      tensor[3] op1_e3_l_1816E5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1516E2,op1_e3_l_1716E4);
      real op1_e3_l_1916E6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1416E1,op1_e3_l_1816E5);
      tensor[3,3] op1_e3_l_2016E7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1316E0);
      real op1_e3_l_2116E8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1916E6);
      tensor[4] basisResult16F8#2 = EvaluateBasis<BasisArray(4)>(xn16DC);
      tensor[3] probe_l_2216E9#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn16DC,cellInt16DD,mesh16C2,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3,3] op1_e3_l_2316EA#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2016E7,op1_e3_l_2116E8);
      tensor[3] op1_e3_l_2416EB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_2216E9);
      tensor[3] op1_e3_l_2516EC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_2416EB);
      tensor[3] xn16DB#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn16DC,op1_e3_l_2516EC);
      real _t1715#1 = 0.1e-7;
      tensor[3] probe_l_211723#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt16DD,mesh16C2,xn16DC,femDofs16EF,basisResult16F8,xn16DC);
      tensor[3] op1_e3_l_231725#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos16C3,probe_l_211723);
      tensor[3] op1_e3_l_391726#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2316EA,op1_e3_l_231725);
      real op1_e3_l_411727#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_391726,op1_e3_l_391726);
      real _t1717#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_411727);
      bool _t1751#1 = GTE<real>(_t1715,_t1717);
      if _t1751 then goto ASSIGN1755 else goto JOIN17EB
    ASSIGN1755:  preds = [COND1753]
      real _t1754#4 = 0.1e1;
      tensor[3] _t1756#1 = <tensor[3]>[_t1754,_t1754,_t1754];
      real _t1758#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1756,xn16DB);
      bool _t1792#1 = GT<real>(_t1754,_t1758);
      real _t1794#3 = 0.1e-8;
      tensor[3] _t1796#1 = <tensor[3]>[_t1794,_t1794,_t1794];
      tensor[3] _t1798#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1796,xn16DB);
      real _t17D2#1 = TensorIndex<tensor[3],[0]>(_t1798);
      real _t17D4#3 = -0.e0;
      bool _t17D6#1 = GT<real>(_t17D2,_t17D4);
      real _t17D8#1 = TensorIndex<tensor[3],[1]>(_t1798);
      bool _t17DA#1 = GT<real>(_t17D8,_t17D4);
      real _t17DC#1 = TensorIndex<tensor[3],[2]>(_t1798);
      bool _t17DE#1 = GT<real>(_t17DC,_t17D4);
      bool _t17E0#1 = BAnd(_t17DA,_t17DE);
      bool _t17E2#1 = BAnd(_t17D6,_t17E0);
      bool _t17E4#1 = BAnd(_t1792,_t17E2);
      if _t17E4 then goto ASSIGN17E8 else goto JOIN17EA
    ASSIGN17E8:  preds = [COND17E6]
      femData:MeshPos _t17E7#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16C2,cellInt16DD,xn16DB,pos16C3);
      return _t17E7
      goto JOIN17EA
    JOIN17EA:  preds = [*RETURN(_t17E7)17E9,COND17E6]
      goto JOIN17EB
    JOIN17EB:  preds = [JOIN17EA,COND1753]
      int newtonInt17EC#2 = IAdd(newtonInt17ED,_t16CF);
      bool _t17EF#1 = GTE<int>(newtonInt17EC,_t16D3);
      if _t17EF then goto ASSIGN17F3 else goto JOIN17FD
    ASSIGN17F3:  preds = [COND17F1]
      bool _t17F2#1 = GTE<int>(cellInt16DD,numCell16D1);
      if _t17F2 then goto ASSIGN17F6 else goto ASSIGN17FF
    ASSIGN17F6:  preds = [COND17F4]
      femData:MeshPos _t17F5#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t17F5
      goto JOIN17FA
    JOIN17FA:  preds = [*RETURN(_t17F5)17F7,ASSIGN17FF]
      int cellInt17F8#1 = phi(cellInt17F9)
      goto JOIN17FD
    JOIN17FD:  preds = [JOIN17FA,COND17F1]
      int cellInt17FB#1 = phi(cellInt17F8,cellInt16DD)
      int newtonInt17FC#1 = phi(newtonInt16C9,newtonInt17EC)
      goto FOREACH16DA
    ASSIGN17FF:  preds = [COND17F4]
      int cellInt17F9#1 = IAdd(cellInt16DD,_t16CF);
      goto JOIN17FA
    ASSIGN1801:  preds = [FOREACH16DA]
      femData:MeshPos _t1800#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16C2);
      return _t1800
}
## input initialization
  ENTRY14E3:  preds = []
    real isoval14E4#1 = 0.2e0;
    globals.isoval14C5 = isoval14E4;
    real thick14E7#1 = 0.7e-1;
    globals.thick14C6 = thick14E7;
    real _t14EA#2 = -0.3e1;
    real _t14EC#1 = 0.3e1;
    tensor[3] camEye14EE#1 = <tensor[3]>[_t14EA,_t14EA,_t14EC];
    globals.camEye14C7 = camEye14EE;
    real _t14F1#3 = 0.5e0;
    tensor[3] camAt14F3#1 = <tensor[3]>[_t14F1,_t14F1,_t14F1];
    globals.camAt14C8 = camAt14F3;
    real _t14F6#2 = 0.e0;
    real _t14F8#2 = 0.1e1;
    tensor[3] camUp14FA#2 = <tensor[3]>[_t14F6,_t14F6,_t14F8];
    globals.camUp14C9 = camUp14FA;
    real camFOV14FD#1 = 0.137e2;
    globals.camFOV14CA = camFOV14FD;
    int iresU1500#2 = 500;
    globals.iresU14CB = iresU1500;
    globals.iresV14CC = iresU1500;
    real camNear1504#1 = -0.2e1;
    globals.camNear14CD = camNear1504;
    real camFar1507#1 = 0.5e1;
    globals.camFar14CE = camFar1507;
    globals.refStep14CF = _t14F8;
    real rayStep150B#1 = 0.1e-1;
    globals.rayStep14D0 = rayStep150B;
    globals.lightVsp14D1 = camUp14FA;
    real phongKa150F#1 = 0.1e0;
    globals.phongKa14D2 = phongKa150F;
    real phongKd1512#1 = 0.9e0;
    globals.phongKd14D3 = phongKd1512;
    bool debug1515#1 = false;
    globals.debug14D4 = debug1515;
    int su1518#2 = 250;
    globals.su14D5 = su1518;
    globals.sv14D6 = su1518;
    return
## global-variable initialization
  ENTRY151D:  preds = []
    femData:Mesh a151E#3 = globals.a14C2;
    femData:Space 0b042F_intermedateGlobal1520#1 = globals.0b042F_intermedateGlobal14C3;
    femData:FemFunc 0c0431_intermedateGlobal1522#1 = globals.0c0431_intermedateGlobal14C4;
    tensor[3] camEye1526#1 = globals.camEye14C7;
    tensor[3] camAt1528#1 = globals.camAt14C8;
    tensor[3] camUp152A#1 = globals.camUp14C9;
    real camFOV152C#1 = globals.camFOV14CA;
    int iresU152E#1 = globals.iresU14CB;
    int iresV1530#1 = globals.iresV14CC;
    tensor[3] lightVsp1532#2 = globals.lightVsp14D1;
    int _t1534#1 = 0;
    int _t1536#1 = 1;
    int _t1538#1 = ExtractFemItem<int,NumCell(Mesh)>(a151E);
    int _t153A#1 = ISub(_t1538,_t1536);
    int[] _t153C#1 = Range(_t1534,_t153A);
    femData:MeshCell[] _t153E#1 = <femData:MeshCell[]>{};
  FOREACH1541:  preds = [ASSIGN153F,NEXT1547]
    foreach (_t1540 in _t153C) on exit goto ASSIGN1549
      femData:MeshCell[] _t1545#1 = phi(_t153E,_t1544)
    femData:MeshCell _t1542#1 = LoadFem<femData:MeshCell>(a151E,_t1540);
    femData:MeshCell[] _t1544#1 = Append<femData:MeshCell>(_t1545,_t1542);
    goto FOREACH1541
  ASSIGN1549:  preds = [FOREACH1541]
    femData:Space b1548#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1520,a151E);
    femData:FemFunc c154A#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1522,b1548);
    femData:Space _t154C#2 = ExtractFem<femData:Space,femData:FemFunc>(c154A);
    femData:Mesh _t154E#1 = ExtractFem<femData:Mesh,femData:Space>(_t154C);
    image(IMAGE1D<double[3]>) I1550#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1552#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1554#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1550);
    tensor[3] op1_e3_l_21557#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt1528,camEye1526);
    real op1_e3_l_41558#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21557,op1_e3_l_21557);
    real camDist1556#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41558);
    globals.camDist14D7 = camDist1556;
    real op1_e3_l_91561#6 = λ(T0[])<(1) / ( T0)> (camDist1556);
    tensor[3] camN155D#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_21557,op1_e3_l_91561);
    globals.camN14D8 = camN155D;
    tensor[3,3] op1_e3_l_15156C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp152A);
    tensor[3] op1_e3_l_17156E#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_21557,op1_e3_l_15156C);
    real op1_e3_l_34156F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_17156E,op1_e3_l_17156E);
    real op1_e3_l_351570#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91561,op1_e3_l_91561,op1_e3_l_34156F);
    real op1_e3_l_361571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351570);
    tensor[3] op1_e3_l_371572#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_17156E);
    real op1_e3_l_381573#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361571);
    tensor[3] camU1568#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371572,op1_e3_l_381573);
    globals.camU14D9 = camU1568;
    tensor[3,3] op1_e3_l_45158B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_21557);
    tensor[3] op1_e3_l_47158C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_17156E,op1_e3_l_45158B);
    tensor[3] op1_e3_l_50158E#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91561,op1_e3_l_47158C);
    tensor[3] camV1581#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_381573,op1_e3_l_91561,op1_e3_l_50158E);
    globals.camV14DA = camV1581;
    real _t159E#1 = 0.314159265358979323846264338327950288e1;
    real _t15A0#1 = 0.36e3;
    real op1_e3_l_515A3#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV152C,_t159E);
    real op1_e3_l_615A4#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15A0,op1_e3_l_515A3);
    real op1_e3_l_1015A7#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_615A4);
    real camVmax15A2#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1015A7,camDist1556);
    globals.camVmax14DB = camVmax15A2;
    real _t15B1#1 = IntToReal(iresU152E);
    real _t15B3#1 = IntToReal(iresV1530);
    real op1_e3_l_1415BC#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t15B1,op1_e3_l_1015A7,camDist1556);
    real camUmax15B5#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t15B3,op1_e3_l_1415BC);
    globals.camUmax14DC = camUmax15B5;
    tensor[3,3] _t15C6#1 = <tensor[3,3]>[camU1568,camV1581,camN155D];
    real op1_e3_l_315C9#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1532);
    real op1_e3_l_415CA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_315C9);
    real op1_e3_l_515CB#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_415CA);
    tensor[3] op1_e3_l_615CC#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t15C6,lightVsp1532);
    tensor[3] light15C8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_515CB,op1_e3_l_615CC);
    globals.light14DD = light15C8;
    globals._t14DE = _t154E;
    globals._tX14DF = _t154C;
    globals.c14E0 = c154A;
    globals.img14E1 = img1554;
    globals._tXX14E2 = _t1552;
    globals.I1A7C = I1550;
    return
## strand
  strand raycast (int ui15D9#2, int vi15DA#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY15E5:  preds = []
        int iresU15E6#1 = globals.iresU14CB;
        int iresV15E8#1 = globals.iresV14CC;
        real camNear15EA#1 = globals.camNear14CD;
        real camDist15EC#1 = globals.camDist14D7;
        tensor[3] camN15EE#1 = globals.camN14D8;
        tensor[3] camU15F0#1 = globals.camU14D9;
        tensor[3] camV15F2#1 = globals.camV14DA;
        real camVmax15F4#4 = globals.camVmax14DB;
        real camUmax15F6#2 = globals.camUmax14DC;
        real _t15F8#5 = -0.5e0;
        real _t15FA#1 = IntToReal(ui15D9);
        real _t15FC#1 = IntToReal(iresU15E6);
        real _t15FE#3 = 0.5e0;
        real op1_e3_l_61601#1 = λ(T0[],T1[])<(T0) - (T1)> (_t15FC,_t15FE);
        real op1_e3_l_71602#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t15FA);
        real op1_e3_l_81603#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61601);
        real op1_e3_l_91604#2 = λ(T0[])<Neg(T0)> (camUmax15F6);
        real op1_e3_l_101605#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71602,op1_e3_l_81603);
        real op1_e3_l_111606#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax15F6,op1_e3_l_91604);
        real op1_e3_l_131607#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101605,op1_e3_l_111606);
        real rayU1600#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_91604,op1_e3_l_131607);
        real _t1610#1 = IntToReal(vi15DA);
        real _t1612#2 = IntToReal(iresV15E8);
        real op1_e3_l_61615#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1612,_t15FE);
        real op1_e3_l_71616#2 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,_t1610);
        real op1_e3_l_81617#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_61615);
        real op1_e3_l_91618#1 = λ(T0[])<Neg(T0)> (camVmax15F4);
        real op1_e3_l_101619#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_81617);
        real op1_e3_l_11161A#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax15F4,op1_e3_l_91618);
        real op1_e3_l_12161B#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101619,op1_e3_l_11161A);
        real rayV1614#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_12161B);
        real op1_e3_l_25162D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15FE,_t1612);
        real op1_e3_l_27162F#1 = λ(T0[],T1[])<(T1) - (T0)> (_t15F8,op1_e3_l_25162D);
        real op1_e3_l_291631#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71616,op1_e3_l_27162F);
        real op1_e3_l_311633#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291631,op1_e3_l_11161A);
        real op1_e3_l_321634#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax15F4,op1_e3_l_311633);
        tensor[3] op1_e3_l_331635#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU15F0,rayU1600);
        tensor[3] op1_e3_l_341636#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV15F2,op1_e3_l_321634);
        tensor[3] op1_e3_l_351637#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_331635,op1_e3_l_341636);
        tensor[3] op1_e3_l_361638#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist15EC,op1_e3_l_351637);
        tensor[3] rayVec1624#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN15EE,op1_e3_l_361638);
        real transp164E#1 = 0.1e1;
        real _t1650#8 = 0.e0;
        tensor[3] rgb1652#1 = <tensor[3]>[_t1650,_t1650,_t1650];
        tensor[4] rgba1654#1 = <tensor[4]>[_t1650,_t1650,_t1650,_t1650];
        self.rayU = rayU1600;
        self.rayV = rayV1614;
        self.rayN = camNear15EA;
        self.rayVec = rayVec1624;
        self.transp = transp164E;
        self.rgb = rgb1652;
        self.rgba = rgba1654;
        self.gray = _t1650;
        self.ui = ui15D9;
        self.vi = vi15DA;
        return
    end state init
    method update
        ENTRY1661:  preds = []
          image(IMAGE1D<double[3]>) I1A7D#5 = globals.I1A7C;
          real isoval1662#1 = globals.isoval14C5;
          femData:Mesh _t1664#9 = globals._t14DE;
          femData:Space _t1666#3 = globals._tX14DF;
          femData:FemFunc c1668#3 = globals.c14E0;
          image(IMAGE1D<double[3]>) img166A#1 = globals.img14E1;
          kernel _t166C#1 = globals._tXX14E2;
          femData:Mesh a166E#1 = globals.a14C2;
          real thick1670#1 = globals.thick14C6;
          tensor[3] camEye1672#1 = globals.camEye14C7;
          real camNear1674#2 = globals.camNear14CD;
          real camFar1676#2 = globals.camFar14CE;
          real refStep1678#1 = globals.refStep14CF;
          real rayStep167A#2 = globals.rayStep14D0;
          real phongKa167C#1 = globals.phongKa14D2;
          real phongKd167E#1 = globals.phongKd14D3;
          bool debug1680#1 = globals.debug14D4;
          int su1682#1 = globals.su14D5;
          int sv1684#1 = globals.sv14D6;
          tensor[3] light1686#1 = globals.light14DD;
          real rayN1688#4 = self.rayN;
          tensor[3] rayVec168A#2 = self.rayVec;
          real transp168C#10 = self.transp;
          tensor[3] rgb168E#9 = self.rgb;
          int ui1690#1 = self.ui;
          int vi1692#1 = self.vi;
          if debug1680 then goto ASSIGN1696 else goto JOIN16A0
        ASSIGN1696:  preds = [COND1694]
          bool _t1695#1 = NEQ<int>(ui1690,su1682);
          if _t1695 then goto ASSIGN1699 else goto ASSIGN1A24
        ASSIGN1699:  preds = [COND1697]
          bool _t1698#1 = true;
          goto JOIN169C
        JOIN169C:  preds = [ASSIGN1699,ASSIGN1A24]
          bool _t169A#1 = phi(_t1698,_t169B)
          if _t169A then goto STABILIZE169E else goto JOIN169F
        STABILIZE169E:  preds = [COND169D]
          stabilize
          goto JOIN169F
        JOIN169F:  preds = [*STABILIZE169E,COND169D]
          goto JOIN16A0
        JOIN16A0:  preds = [JOIN169F,COND1694]
          tensor[3] op1_e3_l_316A2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN1688,rayVec168A);
          tensor[3] x16A1#11 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1672,op1_e3_l_316A2);
          real _t16A5#8 = 0.e0;
          real _t16A7#2 = TensorIndex<tensor[3],[0]>(x16A1);
          bool _t16A9#1 = LTE<real>(_t16A5,_t16A7);
          if _t16A9 then goto ASSIGN16AD else goto JOIN1A0C
        ASSIGN16AD:  preds = [COND16AB]
          real _t16AC#11 = 0.1e1;
          bool _t16AE#1 = LTE<real>(_t16A7,_t16AC);
          if _t16AE then goto ASSIGN16B2 else goto JOIN1A09
        ASSIGN16B2:  preds = [COND16B0]
          real _t16B1#2 = TensorIndex<tensor[3],[1]>(x16A1);
          bool _t16B3#1 = LTE<real>(_t16A5,_t16B1);
          if _t16B3 then goto ASSIGN16B7 else goto JOIN1A06
        ASSIGN16B7:  preds = [COND16B5]
          bool _t16B6#1 = LTE<real>(_t16B1,_t16AC);
          if _t16B6 then goto ASSIGN16BA else goto JOIN1A03
        ASSIGN16BA:  preds = [COND16B8]
          real _t16B9#2 = TensorIndex<tensor[3],[2]>(x16A1);
          bool _t16BB#1 = LTE<real>(_t16A5,_t16B9);
          if _t16BB then goto ASSIGN16BF else goto JOIN1A00
        ASSIGN16BF:  preds = [COND16BD]
          bool _t16BE#1 = LTE<real>(_t16B9,_t16AC);
          if _t16BE then goto ASSIGN1804 else goto JOIN19FD
        ASSIGN1804:  preds = [COND16C0]
          femData:MeshPos p1803#1 = findPos16C1 (a166E,x16A1);
          bool _t1805#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1803);
          if _t1805 then goto ASSIGN1809 else goto JOIN19FA
        ASSIGN1809:  preds = [COND1807]
          real _t1808#1 = 0.13e1;
          femData:MeshPos callFindPos182A#2 = findPos16C1 (_t1664,x16A1);
          int intPos182B#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos182A);
          tensor[3] refPos182C#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos182A);
          int[10] femIndicies1831#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t1666,intPos182B);
          tensor[10] femDofs1832#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c1668,femIndicies1831);
          tensor[10] basisResult1833#1 = EvaluateBasis<BasisArray(10)>(refPos182C);
          real compositionl180C#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult1833,refPos182C);
          real op1_e3_l_23180D#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1662,compositionl180C);
          tensor[3,10] basisResult183A#1 = EvaluateBasis<BasisArray(3,10)>(refPos182C);
          tensor[3] compositionl180F#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t1664,_t1666,c1668,x16A1,femDofs1832,basisResult183A,refPos182C);
          int[4] femIndicies183C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t1664,intPos182B);
          tensor[4,3] femDofs183D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t1664,femIndicies183C);
          tensor[3,4] basisResult183E#4 = EvaluateBasis<BasisArray(3,4)>(refPos182C);
          tensor[3,3] probe_l_251810#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3,3] op1_e3_l_271811#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810);
          tensor[3,3,3] op1_e3_l_281812#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251810,op1_e3_l_271811);
          tensor[3] probe_l_291813#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_301814#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3] probe_l_311815#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t1664,x16A1,femDofs183D,basisResult183E,refPos182C);
          tensor[3,3] op1_e3_l_321816#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311815);
          tensor[3] op1_e3_l_331817#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301814,op1_e3_l_321816);
          real op1_e3_l_341818#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291813,op1_e3_l_331817);
          tensor[3,3] op1_e3_l_351819#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281812);
          real op1_e3_l_36181A#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341818);
          tensor[3,3] op1_e3_l_37181B#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351819,op1_e3_l_36181A);
          tensor[3] op1_e3_l_38181C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl180F,op1_e3_l_37181B);
          tensor[3] op1_e3_l_541820#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_38181C);
          real op1_e3_l_561822#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541820,op1_e3_l_541820);
          real op1_e3_l_571823#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561822);
          real op1_e3_l_581824#1 = λ(T0[])<Abs(T0)> (op1_e3_l_23180D);
          real op1_e3_l_591825#1 = λ(T0[],T1[])<(T0 * T1)> (thick1670,op1_e3_l_571823);
          real op1_e3_l_601826#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581824,op1_e3_l_591825);
          real op1_e3_l_611827#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_601826);
          real op1_e3_l_621828#2 = λ(T0[],T1[])<(T0 * T1)> (_t1808,op1_e3_l_611827);
          real op1_e3_l_631829#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t16A5,_t16AC,op1_e3_l_621828);
          real a180A#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_631829);
          bool _t188E#1 = GT<real>(a180A,_t16A5);
          if _t188E then goto ASSIGN1AA4 else goto JOIN19F7
        ASSIGN1AA4:  preds = [COND1890]
          real op1_e3_l_6418B0#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t16AC,_t16A5,op1_e3_l_621828);
          real op1_e3_l_6518B1#1 = λ(T0[],T1[])<(T0 * T1)> (_t16AC,op1_e3_l_6418B0);
          real _t1891#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_6518B1);
          real op1_e3_l_31918#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec168A);
          real op1_e3_l_41919#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31918);
          real op1_e3_l_5191A#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep167A,op1_e3_l_41919);
          real _t1917#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep1678,op1_e3_l_5191A);
          real _t191F#1 = MathFn<pow>(_t1891,_t1917);
          real _t1921#2 = 0.11e1;
          real _t1923#1 = 0.7e0;
          real op1_e3_l_671940#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571823);
          real op1_e3_l_681941#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light1686,op1_e3_l_541820);
          real _t1925#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671940,op1_e3_l_681941);
          real shade19A3#1 = Max<real>(_t16A5,_t1925);
          real _t19A5#2 = λ(T0[])<T0> (compositionl180C);
          real op1_e3_l_1519C0#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,rayN1688);
          real op1_e3_l_1619C1#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear1674,camFar1676);
          real op1_e3_l_1719C2#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_1519C0,op1_e3_l_1619C1);
          real op1_e3_l_1819C3#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1921,_t1923);
          real op1_e3_l_1919C4#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1719C2,op1_e3_l_1819C3);
          real op1_e3_l_2019C5#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd167E,shade19A3);
          real Mtransform19CB#2 = Transform<IMAGE1D<double[3]>>(I1A7D);
          real MxPos19CC#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform19CB,_t19A5);
          real Ttranslate19CD#1 = Translate<IMAGE1D<double[3]>>(I1A7D);
          real imgPos19CE#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos19CC,Ttranslate19CD);
          real nd19CF#2 = Floor<1>(imgPos19CE);
          real f19D0#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos19CE,nd19CF);
          int n19D1#1 = RealToInt<1>(nd19CF);
          int idx19D3#3 = n19D1;
          bool isInside1AAF#1 = IndexInside<IMAGE1D<double[3]>,2>(idx19D3,I1A7D);
          if isInside1AAF then goto ASSIGN1AB0 else goto ASSIGN1AB1
        ASSIGN1AB0:  preds = [COND1AB3]
          tensor[3,2] ldvox1AAD#1 = LoadVoxels<IMAGE1D<double[3]>,2>(I1A7D,idx19D3);
          goto JOIN1AB4
        JOIN1AB4:  preds = [ASSIGN1AB0,ASSIGN1AB1]
          tensor[3,2] ldvox19D4#1 = phi(ldvox1AAD,ldvox1AAE)
          tensor[2] kernX_19D5#1 = BuildPos<1>(f19D0);
          tensor[2] kevalX_d0_19D6#1 = EvalKernel<2,tent,0>(kernX_19D5);
          tensor[3] probe_l_2119C6#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img166A,_t166C,_t19A5,Mtransform19CB,ldvox19D4,kevalX_d0_19D6);
          real op1_e3_l_2219C7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,_t191F);
          real op1_e3_l_2319C8#1 = λ(T0[],T1[])<(T0 + T1)> (_t1921,op1_e3_l_1919C4);
          real op1_e3_l_2419C9#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa167C,op1_e3_l_2019C5);
          tensor[3] op1_e3_l_2519CA#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp168C,probe_l_2119C6,op1_e3_l_2219C7,op1_e3_l_2319C8,op1_e3_l_2419C9);
          tensor[3] rgb19BF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb168E,op1_e3_l_2519CA);
          real op1_e3_l_519F1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t16AC,op1_e3_l_2219C7);
          real transp19EF#1 = λ(T0[],T1[])<(T0 * T1)> (transp168C,op1_e3_l_519F1);
          goto JOIN19F7
        JOIN19F7:  preds = [ASSIGN19F4,COND1890]
          tensor[3] rgb19F5#1 = phi(rgb19BF,rgb168E)
          real transp19F6#1 = phi(transp19EF,transp168C)
          goto JOIN19FA
        JOIN19FA:  preds = [JOIN19F7,COND1807]
          tensor[3] rgb19F8#1 = phi(rgb19F5,rgb168E)
          real transp19F9#1 = phi(transp19F6,transp168C)
          goto JOIN19FD
        JOIN19FD:  preds = [JOIN19FA,COND16C0]
          tensor[3] rgb19FB#1 = phi(rgb19F8,rgb168E)
          real transp19FC#1 = phi(transp19F9,transp168C)
          goto JOIN1A00
        JOIN1A00:  preds = [JOIN19FD,COND16BD]
          tensor[3] rgb19FE#1 = phi(rgb19FB,rgb168E)
          real transp19FF#1 = phi(transp19FC,transp168C)
          goto JOIN1A03
        JOIN1A03:  preds = [JOIN1A00,COND16B8]
          tensor[3] rgb1A01#1 = phi(rgb19FE,rgb168E)
          real transp1A02#1 = phi(transp19FF,transp168C)
          goto JOIN1A06
        JOIN1A06:  preds = [JOIN1A03,COND16B5]
          tensor[3] rgb1A04#1 = phi(rgb1A01,rgb168E)
          real transp1A05#1 = phi(transp1A02,transp168C)
          goto JOIN1A09
        JOIN1A09:  preds = [JOIN1A06,COND16B0]
          tensor[3] rgb1A07#1 = phi(rgb1A04,rgb168E)
          real transp1A08#1 = phi(transp1A05,transp168C)
          goto JOIN1A0C
        JOIN1A0C:  preds = [JOIN1A09,COND16AB]
          tensor[3] rgb1A0A#3 = phi(rgb1A07,rgb168E)
          real transp1A0B#2 = phi(transp1A08,transp168C)
          real _t1A0D#1 = 0.1e-1;
          bool _t1A0F#1 = LT<real>(transp1A0B,_t1A0D);
          if _t1A0F then goto SAVE1A12 else goto JOIN1A16
        SAVE1A12:  preds = [COND1A11]
          self.transp = _t16A5;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A16
        JOIN1A16:  preds = [*STABILIZE1A14,COND1A11]
          real transp1A15#2 = phi(transp1A0B)
          bool _t1A17#1 = GT<real>(rayN1688,camFar1676);
          if _t1A17 then goto SAVE1A1A else goto JOIN1A1D
        SAVE1A1A:  preds = [COND1A19]
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          stabilize
          goto JOIN1A1D
        JOIN1A1D:  preds = [*STABILIZE1A1C,COND1A19]
          real rayN1A1E#1 = λ(T0[],T1[])<(T0 + T1)> (rayN1688,rayStep167A);
          self.rayN = rayN1A1E;
          self.transp = transp1A15;
          self.rgb = rgb1A0A;
          active
        ASSIGN1AB1:  preds = [COND1AB3]
          tensor[3,2] ldvox1AAE#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1A7D,idx19D3);
          goto JOIN1AB4
        ASSIGN1A24:  preds = [COND1697]
          bool _t169B#1 = NEQ<int>(vi1692,sv1684);
          goto JOIN169C
    end update
    method stabilize
        ENTRY1A25:  preds = []
          bool debug1A26#1 = globals.debug14D4;
          int su1A28#1 = globals.su14D5;
          int sv1A2A#1 = globals.sv14D6;
          real transp1A2C#1 = self.transp;
          tensor[3] rgb1A2E#3 = self.rgb;
          tensor[4] rgba1A30#1 = self.rgba;
          int ui1A32#1 = self.ui;
          int vi1A34#1 = self.vi;
          real _t1A36#1 = 0.1e1;
          real a1A38#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1A36,transp1A2C);
          real _t1A3A#1 = 0.e0;
          bool _t1A3C#1 = GT<real>(a1A38,_t1A3A);
          if _t1A3C then goto ASSIGN1A40 else goto JOIN1A54
        ASSIGN1A40:  preds = [COND1A3E]
          real _t1A3F#1 = TensorIndex<tensor[3],[0]>(rgb1A2E);
          real _t1A41#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A3F,a1A38);
          real _t1A45#1 = TensorIndex<tensor[3],[1]>(rgb1A2E);
          real _t1A47#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A45,a1A38);
          real _t1A4B#1 = TensorIndex<tensor[3],[2]>(rgb1A2E);
          real _t1A4D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A4B,a1A38);
          tensor[4] rgba1A51#1 = <tensor[4]>[_t1A41,_t1A47,_t1A4D,a1A38];
          goto JOIN1A54
        JOIN1A54:  preds = [ASSIGN1A52,COND1A3E]
          tensor[4] rgba1A53#2 = phi(rgba1A51,rgba1A30)
          bool _t1A55#1 = EQ<int>(ui1A32,su1A28);
          if _t1A55 then goto ASSIGN1A59 else goto JOIN1A5F
        ASSIGN1A59:  preds = [COND1A57]
          bool _t1A58#1 = EQ<int>(vi1A34,sv1A2A);
          if _t1A58 then goto COND1A5B else goto JOIN1A5E
        COND1A5B:  preds = [COND1A5A]
          if debug1A26 then goto MASSIGN1A5C else goto JOIN1A5D
        MASSIGN1A5C:  preds = [COND1A5B]
          Print<[real,tensor[4]]>(a1A38,rgba1A53);
          goto JOIN1A5D
        JOIN1A5D:  preds = [MASSIGN1A5C,COND1A5B]
          goto JOIN1A5E
        JOIN1A5E:  preds = [JOIN1A5D,COND1A5A]
          goto JOIN1A5F
        JOIN1A5F:  preds = [JOIN1A5E,COND1A57]
          self.rgba = rgba1A53;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1A62:  preds = []
      int iresU1A63#1 = globals.iresU14CB;
      int iresV1A65#1 = globals.iresV14CC;
      int _t1A67#2 = 0;
      int _t1A69#2 = 1;
      int _t1A6B#1 = ISub(iresV1A65,_t1A69);
      int[] _t1A6D#1 = Range(_t1A67,_t1A6B);
    FOREACH1A70:  preds = [ASSIGN1A6E,NEXT1A79]
      foreach (vi1A6F in _t1A6D) on exit goto RETURN1A7A
      int _t1A71#1 = ISub(iresU1A63,_t1A69);
      int[] _t1A73#1 = Range(_t1A67,_t1A71);
    FOREACH1A76:  preds = [ASSIGN1A74,NEXT1A78]
      foreach (ui1A75 in _t1A73) on exit goto NEXT1A79
      new raycast(ui1A75,vi1A6F);
      goto FOREACH1A76
    NEXT1A79:  preds = [FOREACH1A76]
      goto FOREACH1A70
    RETURN1A7A:  preds = [FOREACH1A70]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AB5 (a) = <no-default>
  input 0b042F_intermedateGlobal1AB6 (b) = <no-default>
  input 0c0431_intermedateGlobal1AB7 (c) = <no-default>
  input isoval1AB8 (isoval) = <default>
  input thick1AB9 (thick) = <default>
  input camEye1ABA (camEye) = <default>
  input camAt1ABB (camAt) = <default>
  input camUp1ABC (camUp) = <default>
  input camFOV1ABD (camFOV) = <default>
  input iresU1ABE (iresU) = <default>
  input iresV1ABF (iresV) = <default>
  input camNear1AC0 (camNear) = <default>
  input camFar1AC1 (camFar) = <default>
  input refStep1AC2 (refStep) = <default>
  input rayStep1AC3 (rayStep) = <default>
  input lightVsp1AC4 (lightVsp) = <default>
  input phongKa1AC5 (phongKa) = <default>
  input phongKd1AC6 (phongKd) = <default>
  input debug1AC7 (debug) = <default>
  input su1AC8 (su) = <default>
  input sv1AC9 (sv) = <default>
  global real camDist1ACA
  global tensor[3] camN1ACB
  global tensor[3] camU1ACC
  global tensor[3] camV1ACD
  global real camVmax1ACE
  global real camUmax1ACF
  global tensor[3] light1AD0
  global femData:Mesh _t1AD1
  global femData:Space _tX1AD2
  global femData:FemFunc c1AD3
  global image(IMAGE1D<double[3]>) img1AD4
  global int _tXX1AD5
  global image(IMAGE1D<double[3]>) I1AD6
## functions
  function femData:MeshPos findPos1D93 (femData:Mesh mesh1D94#21, tensor[3] pos1D95#3) {
    ENTRY1D96:  preds = []
      real _t1D97#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1D99#4 = <tensor[3]>[_t1D97,_t1D97,_t1D97];
      int newtonInt1D9B#3 = 0;
      int cellInt1D9D#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1D94);
      int _t1D9F#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1D94);
      int _t1DA1#3 = 1;
      int numCell1DA3#2 = ISub(_t1D9F,_t1DA1);
      int _t1DA5#2 = 16;
      int _t1DA7#1 = IMul(_t1DA5,numCell1DA3);
      int[] _t1DA9#1 = Range(newtonInt1D9B,_t1DA7);
    FOREACH1DAC:  preds = [ASSIGN1DAA,NEXT24E9]
      foreach (itter1DAB in _t1DA9) on exit goto ASSIGN24EC
        int cellInt1DAE#5 = phi(cellInt1D9D,cellInt24E6)
        int newtonInt24D8#1 = phi(newtonInt1D9B,newtonInt24E7)
        tensor[3] xn237C#4 = phi(xn1D99,xn2440)
      int ilit1DAF#1 = 4;
      int mulRes1DB0#4 = IMul(cellInt1DAE,ilit1DAF);
      int ilit1DB1#1 = 0;
      int addRes1DB2#1 = IAdd(mulRes1DB0,ilit1DB1);
      int idx1DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB2);
      int ilit1DB4#1 = 1;
      int addRes1DB5#1 = IAdd(mulRes1DB0,ilit1DB4);
      int idx1DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB5);
      int ilit1DB7#1 = 2;
      int addRes1DB8#1 = IAdd(mulRes1DB0,ilit1DB7);
      int idx1DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB8);
      int ilit1DBA#1 = 3;
      int addRes1DBB#1 = IAdd(mulRes1DB0,ilit1DBA);
      int idx1DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DBB);
      int[4] seq1DBD#1 = <int[4]>{idx1DB3,idx1DB6,idx1DB9,idx1DBC};
      int[4] femIndicies1DAD#4 = seq1DBD;
      int ilit1DCF#5 = 0;
      int ilit1DD0#5 = 3;
      int idx1DD1#1 = Subscript<int>(femIndicies1DAD,ilit1DCF);
      int mulRes1DD2#3 = IMul(ilit1DD0,idx1DD1);
      int addRes1DD3#1 = IAdd(ilit1DCF,mulRes1DD2);
      int ilit1DD4#5 = 1;
      int addRes1DD5#1 = IAdd(ilit1DD4,mulRes1DD2);
      int ilit1DD6#5 = 2;
      int addRes1DD7#1 = IAdd(ilit1DD6,mulRes1DD2);
      real dof_load1DD8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD3);
      real dof_load1DD9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD5);
      real dof_load1DDA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD7);
      tensor[3] interCons1DDB#1 = <tensor[3]>[dof_load1DD8,dof_load1DD9,dof_load1DDA];
      int idx1DDC#1 = Subscript<int>(femIndicies1DAD,ilit1DD4);
      int mulRes1DDD#3 = IMul(ilit1DD0,idx1DDC);
      int addRes1DDE#1 = IAdd(ilit1DCF,mulRes1DDD);
      int addRes1DDF#1 = IAdd(ilit1DD4,mulRes1DDD);
      int addRes1DE0#1 = IAdd(ilit1DD6,mulRes1DDD);
      real dof_load1DE1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDE);
      real dof_load1DE2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDF);
      real dof_load1DE3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE0);
      tensor[3] interCons1DE4#1 = <tensor[3]>[dof_load1DE1,dof_load1DE2,dof_load1DE3];
      int idx1DE5#1 = Subscript<int>(femIndicies1DAD,ilit1DD6);
      int mulRes1DE6#3 = IMul(ilit1DD0,idx1DE5);
      int addRes1DE7#1 = IAdd(ilit1DCF,mulRes1DE6);
      int addRes1DE8#1 = IAdd(ilit1DD4,mulRes1DE6);
      int addRes1DE9#1 = IAdd(ilit1DD6,mulRes1DE6);
      real dof_load1DEA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE7);
      real dof_load1DEB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE8);
      real dof_load1DEC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE9);
      tensor[3] interCons1DED#1 = <tensor[3]>[dof_load1DEA,dof_load1DEB,dof_load1DEC];
      int idx1DEE#1 = Subscript<int>(femIndicies1DAD,ilit1DD0);
      int mulRes1DEF#3 = IMul(ilit1DD0,idx1DEE);
      int addRes1DF0#1 = IAdd(ilit1DCF,mulRes1DEF);
      int addRes1DF1#1 = IAdd(ilit1DD4,mulRes1DEF);
      int addRes1DF2#1 = IAdd(ilit1DD6,mulRes1DEF);
      real dof_load1DF3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF0);
      real dof_load1DF4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF1);
      real dof_load1DF5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF2);
      tensor[3] interCons1DF6#1 = <tensor[3]>[dof_load1DF3,dof_load1DF4,dof_load1DF5];
      tensor[4,3] dofs1DF7#1 = <tensor[4,3]>[interCons1DDB,interCons1DE4,interCons1DED,interCons1DF6];
      tensor[4,3] femDofs1DCE#72 = dofs1DF7;
      real varAcc1E23#0 = VIndex<3,0>(xn1D99);
      real varAcc1E24#0 = VIndex<3,1>(xn1D99);
      real varAcc1E25#0 = VIndex<3,2>(xn1D99);
      real coeff1E26#1 = -0.1e1;
      real one1E27#4 = 0.1e1;
      real prod1E28#1 = RMul(one1E27,one1E27);
      real prod1E29#2 = RMul(one1E27,prod1E28);
      real basisEval1E2A#3 = RMul(coeff1E26,prod1E29);
      real basisEval1E2B#3 = RMul(one1E27,prod1E29);
      real basisEval1E2C#6 = 0.e0;
      tensor[4] intermediateCons1E2D#1 = <tensor[4]>[basisEval1E2A,basisEval1E2B,basisEval1E2C,basisEval1E2C];
      tensor[4] intermediateCons1E2E#1 = <tensor[4]>[basisEval1E2A,basisEval1E2C,basisEval1E2B,basisEval1E2C];
      tensor[4] intermediateCons1E2F#1 = <tensor[4]>[basisEval1E2A,basisEval1E2C,basisEval1E2C,basisEval1E2B];
      tensor[3,4] intermediateCons1E30#1 = <tensor[3,4]>[intermediateCons1E2D,intermediateCons1E2E,intermediateCons1E2F];
      tensor[3,4] basisResult1E22#24 = intermediateCons1E30;
      real r1E41#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r1E42#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult1E22);
      real r1E43#1 = RMul(r1E41,r1E42);
      real r1E44#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r1E45#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult1E22);
      real r1E46#1 = RMul(r1E44,r1E45);
      real r1E47#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r1E48#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult1E22);
      real r1E49#1 = RMul(r1E47,r1E48);
      real r1E4A#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r1E4B#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult1E22);
      real r1E4C#1 = RMul(r1E4A,r1E4B);
      real r1E4D#1 = RAdd(r1E43,r1E46);
      real r1E4E#1 = RAdd(r1E4D,r1E49);
      real r1E4F#1 = RAdd(r1E4E,r1E4C);
      real r1E50#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult1E22);
      real r1E51#1 = RMul(r1E41,r1E50);
      real r1E52#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult1E22);
      real r1E53#1 = RMul(r1E44,r1E52);
      real r1E54#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult1E22);
      real r1E55#1 = RMul(r1E47,r1E54);
      real r1E56#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult1E22);
      real r1E57#1 = RMul(r1E4A,r1E56);
      real r1E58#1 = RAdd(r1E51,r1E53);
      real r1E59#1 = RAdd(r1E58,r1E55);
      real r1E5A#1 = RAdd(r1E59,r1E57);
      real r1E5B#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult1E22);
      real r1E5C#1 = RMul(r1E41,r1E5B);
      real r1E5D#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult1E22);
      real r1E5E#1 = RMul(r1E44,r1E5D);
      real r1E5F#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult1E22);
      real r1E60#1 = RMul(r1E47,r1E5F);
      real r1E61#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult1E22);
      real r1E62#1 = RMul(r1E4A,r1E61);
      real r1E63#1 = RAdd(r1E5C,r1E5E);
      real r1E64#1 = RAdd(r1E63,r1E60);
      real r1E65#1 = RAdd(r1E64,r1E62);
      tensor[3] tensor1E66#1 = <tensor[3]>[r1E4F,r1E5A,r1E65];
      real r1E67#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r1E68#1 = RMul(r1E67,r1E42);
      real r1E69#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r1E6A#1 = RMul(r1E69,r1E45);
      real r1E6B#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r1E6C#1 = RMul(r1E6B,r1E48);
      real r1E6D#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r1E6E#1 = RMul(r1E6D,r1E4B);
      real r1E6F#1 = RAdd(r1E68,r1E6A);
      real r1E70#1 = RAdd(r1E6F,r1E6C);
      real r1E71#1 = RAdd(r1E70,r1E6E);
      real r1E72#1 = RMul(r1E67,r1E50);
      real r1E73#1 = RMul(r1E69,r1E52);
      real r1E74#1 = RMul(r1E6B,r1E54);
      real r1E75#1 = RMul(r1E6D,r1E56);
      real r1E76#1 = RAdd(r1E72,r1E73);
      real r1E77#1 = RAdd(r1E76,r1E74);
      real r1E78#1 = RAdd(r1E77,r1E75);
      real r1E79#1 = RMul(r1E67,r1E5B);
      real r1E7A#1 = RMul(r1E69,r1E5D);
      real r1E7B#1 = RMul(r1E6B,r1E5F);
      real r1E7C#1 = RMul(r1E6D,r1E61);
      real r1E7D#1 = RAdd(r1E79,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#1 = RAdd(r1E7E,r1E7C);
      tensor[3] tensor1E80#1 = <tensor[3]>[r1E71,r1E78,r1E7F];
      real r1E81#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r1E82#1 = RMul(r1E81,r1E42);
      real r1E83#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r1E84#1 = RMul(r1E83,r1E45);
      real r1E85#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r1E86#1 = RMul(r1E85,r1E48);
      real r1E87#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r1E88#1 = RMul(r1E87,r1E4B);
      real r1E89#1 = RAdd(r1E82,r1E84);
      real r1E8A#1 = RAdd(r1E89,r1E86);
      real r1E8B#1 = RAdd(r1E8A,r1E88);
      real r1E8C#1 = RMul(r1E81,r1E50);
      real r1E8D#1 = RMul(r1E83,r1E52);
      real r1E8E#1 = RMul(r1E85,r1E54);
      real r1E8F#1 = RMul(r1E87,r1E56);
      real r1E90#1 = RAdd(r1E8C,r1E8D);
      real r1E91#1 = RAdd(r1E90,r1E8E);
      real r1E92#1 = RAdd(r1E91,r1E8F);
      real r1E93#1 = RMul(r1E81,r1E5B);
      real r1E94#1 = RMul(r1E83,r1E5D);
      real r1E95#1 = RMul(r1E85,r1E5F);
      real r1E96#1 = RMul(r1E87,r1E61);
      real r1E97#1 = RAdd(r1E93,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#1 = RAdd(r1E98,r1E96);
      tensor[3] tensor1E9A#1 = <tensor[3]>[r1E8B,r1E92,r1E99];
      tensor[3,3] probe_l_101E40#18 = <tensor[3,3]>[tensor1E66,tensor1E80,tensor1E9A];
      real realLit1EF8#9 = 0.e0;
      real r1EF9#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_101E40);
      real r1EFA#3 = RMul(realLit1EF8,r1EF9);
      real r1EFB#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_101E40);
      real r1EFC#3 = RMul(realLit1EF8,r1EFB);
      real r1EFD#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_101E40);
      real r1EFE#5 = RMul(realLit1EF8,r1EFD);
      real r1EFF#3 = RAdd(r1EFA,r1EFC);
      real r1F00#1 = RAdd(r1EFF,r1EFE);
      real r1F01#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_101E40);
      real r1F02#3 = RMul(realLit1EF8,r1F01);
      real r1F03#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_101E40);
      real r1F04#3 = RMul(realLit1EF8,r1F03);
      real r1F05#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_101E40);
      real r1F06#5 = RMul(realLit1EF8,r1F05);
      real r1F07#3 = RAdd(r1F02,r1F04);
      real r1F08#1 = RAdd(r1F07,r1F06);
      real r1F09#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_101E40);
      real r1F0A#3 = RMul(realLit1EF8,r1F09);
      real r1F0B#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_101E40);
      real r1F0C#3 = RMul(realLit1EF8,r1F0B);
      real r1F0D#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_101E40);
      real r1F0E#5 = RMul(realLit1EF8,r1F0D);
      real r1F0F#3 = RAdd(r1F0A,r1F0C);
      real r1F10#1 = RAdd(r1F0F,r1F0E);
      tensor[3] tensor1F11#3 = <tensor[3]>[r1F00,r1F08,r1F10];
      real realLit1F12#9 = -0.1e1;
      real r1F13#1 = RMul(realLit1F12,r1EFD);
      real r1F14#1 = RAdd(r1EFF,r1F13);
      real r1F15#1 = RMul(realLit1F12,r1F05);
      real r1F16#1 = RAdd(r1F07,r1F15);
      real r1F17#1 = RMul(realLit1F12,r1F0D);
      real r1F18#1 = RAdd(r1F0F,r1F17);
      tensor[3] tensor1F19#1 = <tensor[3]>[r1F14,r1F16,r1F18];
      real realLit1F1A#9 = 0.1e1;
      real r1F1B#1 = RMul(realLit1F1A,r1EFB);
      real r1F1C#1 = RAdd(r1EFA,r1F1B);
      real r1F1D#1 = RAdd(r1F1C,r1EFE);
      real r1F1E#1 = RMul(realLit1F1A,r1F03);
      real r1F1F#1 = RAdd(r1F02,r1F1E);
      real r1F20#1 = RAdd(r1F1F,r1F06);
      real r1F21#1 = RMul(realLit1F1A,r1F0B);
      real r1F22#1 = RAdd(r1F0A,r1F21);
      real r1F23#1 = RAdd(r1F22,r1F0E);
      tensor[3] tensor1F24#1 = <tensor[3]>[r1F1D,r1F20,r1F23];
      tensor[3,3] tensor1F25#1 = <tensor[3,3]>[tensor1F11,tensor1F19,tensor1F24];
      real r1F26#1 = RMul(realLit1F1A,r1EFD);
      real r1F27#1 = RAdd(r1EFF,r1F26);
      real r1F28#1 = RMul(realLit1F1A,r1F05);
      real r1F29#1 = RAdd(r1F07,r1F28);
      real r1F2A#1 = RMul(realLit1F1A,r1F0D);
      real r1F2B#1 = RAdd(r1F0F,r1F2A);
      tensor[3] tensor1F2C#1 = <tensor[3]>[r1F27,r1F29,r1F2B];
      real r1F2D#1 = RMul(realLit1F12,r1EF9);
      real r1F2E#1 = RAdd(r1F2D,r1EFC);
      real r1F2F#1 = RAdd(r1F2E,r1EFE);
      real r1F30#1 = RMul(realLit1F12,r1F01);
      real r1F31#1 = RAdd(r1F30,r1F04);
      real r1F32#1 = RAdd(r1F31,r1F06);
      real r1F33#1 = RMul(realLit1F12,r1F09);
      real r1F34#1 = RAdd(r1F33,r1F0C);
      real r1F35#1 = RAdd(r1F34,r1F0E);
      tensor[3] tensor1F36#1 = <tensor[3]>[r1F2F,r1F32,r1F35];
      tensor[3,3] tensor1F37#1 = <tensor[3,3]>[tensor1F2C,tensor1F11,tensor1F36];
      real r1F38#1 = RMul(realLit1F12,r1EFB);
      real r1F39#1 = RAdd(r1EFA,r1F38);
      real r1F3A#1 = RAdd(r1F39,r1EFE);
      real r1F3B#1 = RMul(realLit1F12,r1F03);
      real r1F3C#1 = RAdd(r1F02,r1F3B);
      real r1F3D#1 = RAdd(r1F3C,r1F06);
      real r1F3E#1 = RMul(realLit1F12,r1F0B);
      real r1F3F#1 = RAdd(r1F0A,r1F3E);
      real r1F40#1 = RAdd(r1F3F,r1F0E);
      tensor[3] tensor1F41#1 = <tensor[3]>[r1F3A,r1F3D,r1F40];
      real r1F42#1 = RMul(realLit1F1A,r1EF9);
      real r1F43#1 = RAdd(r1F42,r1EFC);
      real r1F44#1 = RAdd(r1F43,r1EFE);
      real r1F45#1 = RMul(realLit1F1A,r1F01);
      real r1F46#1 = RAdd(r1F45,r1F04);
      real r1F47#1 = RAdd(r1F46,r1F06);
      real r1F48#1 = RMul(realLit1F1A,r1F09);
      real r1F49#1 = RAdd(r1F48,r1F0C);
      real r1F4A#1 = RAdd(r1F49,r1F0E);
      tensor[3] tensor1F4B#1 = <tensor[3]>[r1F44,r1F47,r1F4A];
      tensor[3,3] tensor1F4C#1 = <tensor[3,3]>[tensor1F41,tensor1F4B,tensor1F11];
      tensor[3,3,3] op1_e3_l_121EF7#27 = <tensor[3,3,3]>[tensor1F25,tensor1F37,tensor1F4C];
      real r1FA5#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_101E40);
      real r1FA6#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_121EF7);
      real r1FA7#1 = RMul(r1FA5,r1FA6);
      real r1FA8#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_101E40);
      real r1FA9#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_121EF7);
      real r1FAA#1 = RMul(r1FA8,r1FA9);
      real r1FAB#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_101E40);
      real r1FAC#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_121EF7);
      real r1FAD#1 = RMul(r1FAB,r1FAC);
      real r1FAE#1 = RAdd(r1FA7,r1FAA);
      real r1FAF#1 = RAdd(r1FAE,r1FAD);
      real r1FB0#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_121EF7);
      real r1FB1#1 = RMul(r1FA5,r1FB0);
      real r1FB2#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_121EF7);
      real r1FB3#1 = RMul(r1FA8,r1FB2);
      real r1FB4#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_121EF7);
      real r1FB5#1 = RMul(r1FAB,r1FB4);
      real r1FB6#1 = RAdd(r1FB1,r1FB3);
      real r1FB7#1 = RAdd(r1FB6,r1FB5);
      real r1FB8#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_121EF7);
      real r1FB9#1 = RMul(r1FA5,r1FB8);
      real r1FBA#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_121EF7);
      real r1FBB#1 = RMul(r1FA8,r1FBA);
      real r1FBC#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_121EF7);
      real r1FBD#1 = RMul(r1FAB,r1FBC);
      real r1FBE#1 = RAdd(r1FB9,r1FBB);
      real r1FBF#1 = RAdd(r1FBE,r1FBD);
      tensor[3] tensor1FC0#1 = <tensor[3]>[r1FAF,r1FB7,r1FBF];
      real r1FC1#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_121EF7);
      real r1FC2#1 = RMul(r1FA5,r1FC1);
      real r1FC3#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_121EF7);
      real r1FC4#1 = RMul(r1FA8,r1FC3);
      real r1FC5#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_121EF7);
      real r1FC6#1 = RMul(r1FAB,r1FC5);
      real r1FC7#1 = RAdd(r1FC2,r1FC4);
      real r1FC8#1 = RAdd(r1FC7,r1FC6);
      real r1FC9#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_121EF7);
      real r1FCA#1 = RMul(r1FA5,r1FC9);
      real r1FCB#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_121EF7);
      real r1FCC#1 = RMul(r1FA8,r1FCB);
      real r1FCD#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_121EF7);
      real r1FCE#1 = RMul(r1FAB,r1FCD);
      real r1FCF#1 = RAdd(r1FCA,r1FCC);
      real r1FD0#1 = RAdd(r1FCF,r1FCE);
      real r1FD1#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_121EF7);
      real r1FD2#1 = RMul(r1FA5,r1FD1);
      real r1FD3#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_121EF7);
      real r1FD4#1 = RMul(r1FA8,r1FD3);
      real r1FD5#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_121EF7);
      real r1FD6#1 = RMul(r1FAB,r1FD5);
      real r1FD7#1 = RAdd(r1FD2,r1FD4);
      real r1FD8#1 = RAdd(r1FD7,r1FD6);
      tensor[3] tensor1FD9#1 = <tensor[3]>[r1FC8,r1FD0,r1FD8];
      real r1FDA#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_121EF7);
      real r1FDB#1 = RMul(r1FA5,r1FDA);
      real r1FDC#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_121EF7);
      real r1FDD#1 = RMul(r1FA8,r1FDC);
      real r1FDE#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_121EF7);
      real r1FDF#1 = RMul(r1FAB,r1FDE);
      real r1FE0#1 = RAdd(r1FDB,r1FDD);
      real r1FE1#1 = RAdd(r1FE0,r1FDF);
      real r1FE2#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_121EF7);
      real r1FE3#1 = RMul(r1FA5,r1FE2);
      real r1FE4#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_121EF7);
      real r1FE5#1 = RMul(r1FA8,r1FE4);
      real r1FE6#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_121EF7);
      real r1FE7#1 = RMul(r1FAB,r1FE6);
      real r1FE8#1 = RAdd(r1FE3,r1FE5);
      real r1FE9#1 = RAdd(r1FE8,r1FE7);
      real r1FEA#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_121EF7);
      real r1FEB#1 = RMul(r1FA5,r1FEA);
      real r1FEC#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_121EF7);
      real r1FED#1 = RMul(r1FA8,r1FEC);
      real r1FEE#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_121EF7);
      real r1FEF#1 = RMul(r1FAB,r1FEE);
      real r1FF0#1 = RAdd(r1FEB,r1FED);
      real r1FF1#1 = RAdd(r1FF0,r1FEF);
      tensor[3] tensor1FF2#1 = <tensor[3]>[r1FE1,r1FE9,r1FF1];
      tensor[3,3] tensor1FF3#1 = <tensor[3,3]>[tensor1FC0,tensor1FD9,tensor1FF2];
      real r1FF4#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_101E40);
      real r1FF5#1 = RMul(r1FF4,r1FA6);
      real r1FF6#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_101E40);
      real r1FF7#1 = RMul(r1FF6,r1FA9);
      real r1FF8#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_101E40);
      real r1FF9#1 = RMul(r1FF8,r1FAC);
      real r1FFA#1 = RAdd(r1FF5,r1FF7);
      real r1FFB#1 = RAdd(r1FFA,r1FF9);
      real r1FFC#1 = RMul(r1FF4,r1FB0);
      real r1FFD#1 = RMul(r1FF6,r1FB2);
      real r1FFE#1 = RMul(r1FF8,r1FB4);
      real r1FFF#1 = RAdd(r1FFC,r1FFD);
      real r2000#1 = RAdd(r1FFF,r1FFE);
      real r2001#1 = RMul(r1FF4,r1FB8);
      real r2002#1 = RMul(r1FF6,r1FBA);
      real r2003#1 = RMul(r1FF8,r1FBC);
      real r2004#1 = RAdd(r2001,r2002);
      real r2005#1 = RAdd(r2004,r2003);
      tensor[3] tensor2006#1 = <tensor[3]>[r1FFB,r2000,r2005];
      real r2007#1 = RMul(r1FF4,r1FC1);
      real r2008#1 = RMul(r1FF6,r1FC3);
      real r2009#1 = RMul(r1FF8,r1FC5);
      real r200A#1 = RAdd(r2007,r2008);
      real r200B#1 = RAdd(r200A,r2009);
      real r200C#1 = RMul(r1FF4,r1FC9);
      real r200D#1 = RMul(r1FF6,r1FCB);
      real r200E#1 = RMul(r1FF8,r1FCD);
      real r200F#1 = RAdd(r200C,r200D);
      real r2010#1 = RAdd(r200F,r200E);
      real r2011#1 = RMul(r1FF4,r1FD1);
      real r2012#1 = RMul(r1FF6,r1FD3);
      real r2013#1 = RMul(r1FF8,r1FD5);
      real r2014#1 = RAdd(r2011,r2012);
      real r2015#1 = RAdd(r2014,r2013);
      tensor[3] tensor2016#1 = <tensor[3]>[r200B,r2010,r2015];
      real r2017#1 = RMul(r1FF4,r1FDA);
      real r2018#1 = RMul(r1FF6,r1FDC);
      real r2019#1 = RMul(r1FF8,r1FDE);
      real r201A#1 = RAdd(r2017,r2018);
      real r201B#1 = RAdd(r201A,r2019);
      real r201C#1 = RMul(r1FF4,r1FE2);
      real r201D#1 = RMul(r1FF6,r1FE4);
      real r201E#1 = RMul(r1FF8,r1FE6);
      real r201F#1 = RAdd(r201C,r201D);
      real r2020#1 = RAdd(r201F,r201E);
      real r2021#1 = RMul(r1FF4,r1FEA);
      real r2022#1 = RMul(r1FF6,r1FEC);
      real r2023#1 = RMul(r1FF8,r1FEE);
      real r2024#1 = RAdd(r2021,r2022);
      real r2025#1 = RAdd(r2024,r2023);
      tensor[3] tensor2026#1 = <tensor[3]>[r201B,r2020,r2025];
      tensor[3,3] tensor2027#1 = <tensor[3,3]>[tensor2006,tensor2016,tensor2026];
      real r2028#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_101E40);
      real r2029#1 = RMul(r2028,r1FA6);
      real r202A#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_101E40);
      real r202B#1 = RMul(r202A,r1FA9);
      real r202C#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_101E40);
      real r202D#1 = RMul(r202C,r1FAC);
      real r202E#1 = RAdd(r2029,r202B);
      real r202F#1 = RAdd(r202E,r202D);
      real r2030#1 = RMul(r2028,r1FB0);
      real r2031#1 = RMul(r202A,r1FB2);
      real r2032#1 = RMul(r202C,r1FB4);
      real r2033#1 = RAdd(r2030,r2031);
      real r2034#1 = RAdd(r2033,r2032);
      real r2035#1 = RMul(r2028,r1FB8);
      real r2036#1 = RMul(r202A,r1FBA);
      real r2037#1 = RMul(r202C,r1FBC);
      real r2038#1 = RAdd(r2035,r2036);
      real r2039#1 = RAdd(r2038,r2037);
      tensor[3] tensor203A#1 = <tensor[3]>[r202F,r2034,r2039];
      real r203B#1 = RMul(r2028,r1FC1);
      real r203C#1 = RMul(r202A,r1FC3);
      real r203D#1 = RMul(r202C,r1FC5);
      real r203E#1 = RAdd(r203B,r203C);
      real r203F#1 = RAdd(r203E,r203D);
      real r2040#1 = RMul(r2028,r1FC9);
      real r2041#1 = RMul(r202A,r1FCB);
      real r2042#1 = RMul(r202C,r1FCD);
      real r2043#1 = RAdd(r2040,r2041);
      real r2044#1 = RAdd(r2043,r2042);
      real r2045#1 = RMul(r2028,r1FD1);
      real r2046#1 = RMul(r202A,r1FD3);
      real r2047#1 = RMul(r202C,r1FD5);
      real r2048#1 = RAdd(r2045,r2046);
      real r2049#1 = RAdd(r2048,r2047);
      tensor[3] tensor204A#1 = <tensor[3]>[r203F,r2044,r2049];
      real r204B#1 = RMul(r2028,r1FDA);
      real r204C#1 = RMul(r202A,r1FDC);
      real r204D#1 = RMul(r202C,r1FDE);
      real r204E#1 = RAdd(r204B,r204C);
      real r204F#1 = RAdd(r204E,r204D);
      real r2050#1 = RMul(r2028,r1FE2);
      real r2051#1 = RMul(r202A,r1FE4);
      real r2052#1 = RMul(r202C,r1FE6);
      real r2053#1 = RAdd(r2050,r2051);
      real r2054#1 = RAdd(r2053,r2052);
      real r2055#1 = RMul(r2028,r1FEA);
      real r2056#1 = RMul(r202A,r1FEC);
      real r2057#1 = RMul(r202C,r1FEE);
      real r2058#1 = RAdd(r2055,r2056);
      real r2059#1 = RAdd(r2058,r2057);
      tensor[3] tensor205A#1 = <tensor[3]>[r204F,r2054,r2059];
      tensor[3,3] tensor205B#1 = <tensor[3,3]>[tensor203A,tensor204A,tensor205A];
      tensor[3,3,3] op1_e3_l_131FA4#27 = <tensor[3,3,3]>[tensor1FF3,tensor2027,tensor205B];
      real r2116#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r2117#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult1E22);
      real r2118#1 = RMul(r2116,r2117);
      real r2119#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r211A#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult1E22);
      real r211B#1 = RMul(r2119,r211A);
      real r211C#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r211D#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult1E22);
      real r211E#1 = RMul(r211C,r211D);
      real r211F#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r2120#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult1E22);
      real r2121#1 = RMul(r211F,r2120);
      real r2122#1 = RAdd(r2118,r211B);
      real r2123#1 = RAdd(r2122,r211E);
      real r2124#1 = RAdd(r2123,r2121);
      real r2125#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r2126#1 = RMul(r2125,r2117);
      real r2127#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r2128#1 = RMul(r2127,r211A);
      real r2129#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r212A#1 = RMul(r2129,r211D);
      real r212B#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r212C#1 = RMul(r212B,r2120);
      real r212D#1 = RAdd(r2126,r2128);
      real r212E#1 = RAdd(r212D,r212A);
      real r212F#1 = RAdd(r212E,r212C);
      real r2130#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r2131#1 = RMul(r2130,r2117);
      real r2132#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r2133#1 = RMul(r2132,r211A);
      real r2134#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r2135#1 = RMul(r2134,r211D);
      real r2136#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r2137#1 = RMul(r2136,r2120);
      real r2138#1 = RAdd(r2131,r2133);
      real r2139#1 = RAdd(r2138,r2135);
      real r213A#1 = RAdd(r2139,r2137);
      tensor[3] probe_l_142115#1 = <tensor[3]>[r2124,r212F,r213A];
      real r2163#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r2164#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult1E22);
      real r2165#1 = RMul(r2163,r2164);
      real r2166#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r2167#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult1E22);
      real r2168#1 = RMul(r2166,r2167);
      real r2169#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r216A#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult1E22);
      real r216B#1 = RMul(r2169,r216A);
      real r216C#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r216D#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult1E22);
      real r216E#1 = RMul(r216C,r216D);
      real r216F#1 = RAdd(r2165,r2168);
      real r2170#1 = RAdd(r216F,r216B);
      real r2171#1 = RAdd(r2170,r216E);
      real r2172#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r2173#1 = RMul(r2172,r2164);
      real r2174#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r2175#1 = RMul(r2174,r2167);
      real r2176#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r2177#1 = RMul(r2176,r216A);
      real r2178#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r2179#1 = RMul(r2178,r216D);
      real r217A#1 = RAdd(r2173,r2175);
      real r217B#1 = RAdd(r217A,r2177);
      real r217C#1 = RAdd(r217B,r2179);
      real r217D#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r217E#1 = RMul(r217D,r2164);
      real r217F#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r2180#1 = RMul(r217F,r2167);
      real r2181#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r2182#1 = RMul(r2181,r216A);
      real r2183#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r2184#1 = RMul(r2183,r216D);
      real r2185#1 = RAdd(r217E,r2180);
      real r2186#1 = RAdd(r2185,r2182);
      real r2187#1 = RAdd(r2186,r2184);
      tensor[3] probe_l_152162#3 = <tensor[3]>[r2171,r217C,r2187];
      real r21B0#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r21B1#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult1E22);
      real r21B2#1 = RMul(r21B0,r21B1);
      real r21B3#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r21B4#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult1E22);
      real r21B5#1 = RMul(r21B3,r21B4);
      real r21B6#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r21B7#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult1E22);
      real r21B8#1 = RMul(r21B6,r21B7);
      real r21B9#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r21BA#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult1E22);
      real r21BB#1 = RMul(r21B9,r21BA);
      real r21BC#1 = RAdd(r21B2,r21B5);
      real r21BD#1 = RAdd(r21BC,r21B8);
      real r21BE#1 = RAdd(r21BD,r21BB);
      real r21BF#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r21C0#1 = RMul(r21BF,r21B1);
      real r21C1#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r21C2#1 = RMul(r21C1,r21B4);
      real r21C3#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r21C4#1 = RMul(r21C3,r21B7);
      real r21C5#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r21C6#1 = RMul(r21C5,r21BA);
      real r21C7#1 = RAdd(r21C0,r21C2);
      real r21C8#1 = RAdd(r21C7,r21C4);
      real r21C9#1 = RAdd(r21C8,r21C6);
      real r21CA#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r21CB#1 = RMul(r21CA,r21B1);
      real r21CC#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r21CD#1 = RMul(r21CC,r21B4);
      real r21CE#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r21CF#1 = RMul(r21CE,r21B7);
      real r21D0#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r21D1#1 = RMul(r21D0,r21BA);
      real r21D2#1 = RAdd(r21CB,r21CD);
      real r21D3#1 = RAdd(r21D2,r21CF);
      real r21D4#1 = RAdd(r21D3,r21D1);
      tensor[3] probe_l_1621AF#3 = <tensor[3]>[r21BE,r21C9,r21D4];
      real realLit21FD#3 = 0.e0;
      real r21FE#3 = TensorIndex<tensor[3],[0]>(probe_l_1621AF);
      real r21FF#3 = RMul(realLit21FD,r21FE);
      real r2200#3 = TensorIndex<tensor[3],[1]>(probe_l_1621AF);
      real r2201#3 = RMul(realLit21FD,r2200);
      real r2202#3 = TensorIndex<tensor[3],[2]>(probe_l_1621AF);
      real r2203#5 = RMul(realLit21FD,r2202);
      real r2204#3 = RAdd(r21FF,r2201);
      real r2205#3 = RAdd(r2204,r2203);
      real realLit2206#3 = 0.1e1;
      real r2207#1 = RMul(realLit2206,r2202);
      real r2208#1 = RAdd(r2204,r2207);
      real realLit2209#3 = -0.1e1;
      real r220A#1 = RMul(realLit2209,r2200);
      real r220B#1 = RAdd(r21FF,r220A);
      real r220C#1 = RAdd(r220B,r2203);
      tensor[3] tensor220D#1 = <tensor[3]>[r2205,r2208,r220C];
      real r220E#1 = RMul(realLit2209,r2202);
      real r220F#1 = RAdd(r2204,r220E);
      real r2210#1 = RMul(realLit2206,r21FE);
      real r2211#1 = RAdd(r2210,r2201);
      real r2212#1 = RAdd(r2211,r2203);
      tensor[3] tensor2213#1 = <tensor[3]>[r220F,r2205,r2212];
      real r2214#1 = RMul(realLit2206,r2200);
      real r2215#1 = RAdd(r21FF,r2214);
      real r2216#1 = RAdd(r2215,r2203);
      real r2217#1 = RMul(realLit2209,r21FE);
      real r2218#1 = RAdd(r2217,r2201);
      real r2219#1 = RAdd(r2218,r2203);
      tensor[3] tensor221A#1 = <tensor[3]>[r2216,r2219,r2205];
      tensor[3,3] op1_e3_l_1721FC#3 = <tensor[3,3]>[tensor220D,tensor2213,tensor221A];
      tensor[3] projParam223C#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1721FC);
      real vdot223D#1 = VDot<3>(probe_l_152162,projParam223C);
      tensor[3] projParam223E#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1721FC);
      real vdot223F#1 = VDot<3>(probe_l_152162,projParam223E);
      tensor[3] projParam2240#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1721FC);
      real vdot2241#1 = VDot<3>(probe_l_152162,projParam2240);
      tensor[3] op1_e3_l_18223B#1 = <tensor[3]>[vdot223D,vdot223F,vdot2241];
      real op1_e3_l_19224A#1 = VDot<3>(probe_l_142115,op1_e3_l_18223B);
      real realLit224E#27 = 0.e0;
      real r224F#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_131FA4);
      real r2250#2 = RMul(realLit224E,r224F);
      real r2251#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_131FA4);
      real r2252#1 = RMul(realLit224E,r2251);
      real r2253#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_131FA4);
      real r2254#2 = RMul(realLit224E,r2253);
      real r2255#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_131FA4);
      real r2256#2 = RMul(realLit224E,r2255);
      real r2257#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_131FA4);
      real r2258#3 = RMul(realLit224E,r2257);
      real realLit2259#9 = 0.1e1;
      real r225A#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_131FA4);
      real r225B#1 = RMul(realLit2259,r225A);
      real r225C#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_131FA4);
      real r225D#2 = RMul(realLit224E,r225C);
      real realLit225E#9 = -0.1e1;
      real r225F#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_131FA4);
      real r2260#1 = RMul(realLit225E,r225F);
      real r2261#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_131FA4);
      real r2262#3 = RMul(realLit224E,r2261);
      real r2263#2 = RAdd(r2250,r2252);
      real r2264#1 = RAdd(r2263,r2254);
      real r2265#1 = RAdd(r2264,r2256);
      real r2266#1 = RAdd(r2265,r2258);
      real r2267#1 = RAdd(r2266,r225B);
      real r2268#1 = RAdd(r2267,r225D);
      real r2269#1 = RAdd(r2268,r2260);
      real r226A#1 = RAdd(r2269,r2262);
      real r226B#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_131FA4);
      real r226C#2 = RMul(realLit224E,r226B);
      real r226D#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_131FA4);
      real r226E#1 = RMul(realLit224E,r226D);
      real r226F#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_131FA4);
      real r2270#2 = RMul(realLit224E,r226F);
      real r2271#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_131FA4);
      real r2272#2 = RMul(realLit224E,r2271);
      real r2273#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_131FA4);
      real r2274#3 = RMul(realLit224E,r2273);
      real r2275#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_131FA4);
      real r2276#1 = RMul(realLit2259,r2275);
      real r2277#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_131FA4);
      real r2278#2 = RMul(realLit224E,r2277);
      real r2279#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_131FA4);
      real r227A#1 = RMul(realLit225E,r2279);
      real r227B#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_131FA4);
      real r227C#3 = RMul(realLit224E,r227B);
      real r227D#2 = RAdd(r226C,r226E);
      real r227E#1 = RAdd(r227D,r2270);
      real r227F#1 = RAdd(r227E,r2272);
      real r2280#1 = RAdd(r227F,r2274);
      real r2281#1 = RAdd(r2280,r2276);
      real r2282#1 = RAdd(r2281,r2278);
      real r2283#1 = RAdd(r2282,r227A);
      real r2284#1 = RAdd(r2283,r227C);
      real r2285#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_131FA4);
      real r2286#2 = RMul(realLit224E,r2285);
      real r2287#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_131FA4);
      real r2288#1 = RMul(realLit224E,r2287);
      real r2289#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_131FA4);
      real r228A#2 = RMul(realLit224E,r2289);
      real r228B#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_131FA4);
      real r228C#2 = RMul(realLit224E,r228B);
      real r228D#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_131FA4);
      real r228E#3 = RMul(realLit224E,r228D);
      real r228F#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_131FA4);
      real r2290#1 = RMul(realLit2259,r228F);
      real r2291#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_131FA4);
      real r2292#2 = RMul(realLit224E,r2291);
      real r2293#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_131FA4);
      real r2294#1 = RMul(realLit225E,r2293);
      real r2295#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_131FA4);
      real r2296#3 = RMul(realLit224E,r2295);
      real r2297#2 = RAdd(r2286,r2288);
      real r2298#1 = RAdd(r2297,r228A);
      real r2299#1 = RAdd(r2298,r228C);
      real r229A#1 = RAdd(r2299,r228E);
      real r229B#1 = RAdd(r229A,r2290);
      real r229C#1 = RAdd(r229B,r2292);
      real r229D#1 = RAdd(r229C,r2294);
      real r229E#1 = RAdd(r229D,r2296);
      tensor[3] tensor229F#1 = <tensor[3]>[r226A,r2284,r229E];
      real r22A0#1 = RMul(realLit225E,r2253);
      real r22A1#2 = RMul(realLit224E,r225A);
      real r22A2#1 = RMul(realLit2259,r225C);
      real r22A3#2 = RMul(realLit224E,r225F);
      real r22A4#1 = RAdd(r2263,r22A0);
      real r22A5#1 = RAdd(r22A4,r2256);
      real r22A6#1 = RAdd(r22A5,r2258);
      real r22A7#1 = RAdd(r22A6,r22A1);
      real r22A8#1 = RAdd(r22A7,r22A2);
      real r22A9#1 = RAdd(r22A8,r22A3);
      real r22AA#1 = RAdd(r22A9,r2262);
      real r22AB#1 = RMul(realLit225E,r226F);
      real r22AC#2 = RMul(realLit224E,r2275);
      real r22AD#1 = RMul(realLit2259,r2277);
      real r22AE#2 = RMul(realLit224E,r2279);
      real r22AF#1 = RAdd(r227D,r22AB);
      real r22B0#1 = RAdd(r22AF,r2272);
      real r22B1#1 = RAdd(r22B0,r2274);
      real r22B2#1 = RAdd(r22B1,r22AC);
      real r22B3#1 = RAdd(r22B2,r22AD);
      real r22B4#1 = RAdd(r22B3,r22AE);
      real r22B5#1 = RAdd(r22B4,r227C);
      real r22B6#1 = RMul(realLit225E,r2289);
      real r22B7#2 = RMul(realLit224E,r228F);
      real r22B8#1 = RMul(realLit2259,r2291);
      real r22B9#2 = RMul(realLit224E,r2293);
      real r22BA#1 = RAdd(r2297,r22B6);
      real r22BB#1 = RAdd(r22BA,r228C);
      real r22BC#1 = RAdd(r22BB,r228E);
      real r22BD#1 = RAdd(r22BC,r22B7);
      real r22BE#1 = RAdd(r22BD,r22B8);
      real r22BF#1 = RAdd(r22BE,r22B9);
      real r22C0#1 = RAdd(r22BF,r2296);
      tensor[3] tensor22C1#1 = <tensor[3]>[r22AA,r22B5,r22C0];
      real r22C2#1 = RMul(realLit2259,r2251);
      real r22C3#1 = RMul(realLit225E,r2255);
      real r22C4#1 = RAdd(r2250,r22C2);
      real r22C5#1 = RAdd(r22C4,r2254);
      real r22C6#1 = RAdd(r22C5,r22C3);
      real r22C7#1 = RAdd(r22C6,r2258);
      real r22C8#1 = RAdd(r22C7,r22A1);
      real r22C9#1 = RAdd(r22C8,r225D);
      real r22CA#1 = RAdd(r22C9,r22A3);
      real r22CB#1 = RAdd(r22CA,r2262);
      real r22CC#1 = RMul(realLit2259,r226D);
      real r22CD#1 = RMul(realLit225E,r2271);
      real r22CE#1 = RAdd(r226C,r22CC);
      real r22CF#1 = RAdd(r22CE,r2270);
      real r22D0#1 = RAdd(r22CF,r22CD);
      real r22D1#1 = RAdd(r22D0,r2274);
      real r22D2#1 = RAdd(r22D1,r22AC);
      real r22D3#1 = RAdd(r22D2,r2278);
      real r22D4#1 = RAdd(r22D3,r22AE);
      real r22D5#1 = RAdd(r22D4,r227C);
      real r22D6#1 = RMul(realLit2259,r2287);
      real r22D7#1 = RMul(realLit225E,r228B);
      real r22D8#1 = RAdd(r2286,r22D6);
      real r22D9#1 = RAdd(r22D8,r228A);
      real r22DA#1 = RAdd(r22D9,r22D7);
      real r22DB#1 = RAdd(r22DA,r228E);
      real r22DC#1 = RAdd(r22DB,r22B7);
      real r22DD#1 = RAdd(r22DC,r2292);
      real r22DE#1 = RAdd(r22DD,r22B9);
      real r22DF#1 = RAdd(r22DE,r2296);
      tensor[3] tensor22E0#1 = <tensor[3]>[r22CB,r22D5,r22DF];
      tensor[3,3] op1_e3_l_20224D#9 = <tensor[3,3]>[tensor229F,tensor22C1,tensor22E0];
      real realLit2377#1 = 0.2e1;
      real op1_e3_l_212376#9 = RMul(realLit2377,op1_e3_l_19224A);
      real varAcc237D#1 = VIndex<3,0>(xn237C);
      real varAcc237E#1 = VIndex<3,1>(xn237C);
      real varAcc237F#1 = VIndex<3,2>(xn237C);
      real coeff2380#3 = -0.1e1;
      real iden2381#1 = varAcc237D;
      real one2382#11 = 0.1e1;
      real prod2383#2 = RMul(one2382,one2382);
      real prod2384#2 = RMul(iden2381,prod2383);
      real iden2385#1 = varAcc237E;
      real prod2386#1 = RMul(iden2385,one2382);
      real prod2387#2 = RMul(one2382,prod2386);
      real iden2388#1 = varAcc237F;
      real prod2389#1 = RMul(one2382,iden2388);
      real prod238A#2 = RMul(one2382,prod2389);
      real prod238B#1 = RMul(one2382,prod2383);
      real mult238C#1 = RMul(one2382,prod238B);
      real mult238D#1 = RMul(coeff2380,prod238A);
      real mult238E#1 = RMul(coeff2380,prod2387);
      real mult238F#1 = RMul(coeff2380,prod2384);
      real sum2390#1 = RAdd(mult238E,mult238F);
      real sum2391#1 = RAdd(mult238D,sum2390);
      real sum2392#1 = RAdd(mult238C,sum2391);
      real intermediate2393#1 = sum2392;
      real basisEval2394#1 = RMul(one2382,prod2384);
      real basisEval2395#1 = RMul(one2382,prod2387);
      real basisEval2396#1 = RMul(one2382,prod238A);
      tensor[4] intermediateCons2397#1 = <tensor[4]>[intermediate2393,basisEval2394,basisEval2395,basisEval2396];
      tensor[4] basisResult237B#8 = intermediateCons2397;
      real r23B5#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r23B6#3 = TensorIndex<tensor[4],[0]>(basisResult237B);
      real r23B7#1 = RMul(r23B5,r23B6);
      real r23B8#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r23B9#3 = TensorIndex<tensor[4],[1]>(basisResult237B);
      real r23BA#1 = RMul(r23B8,r23B9);
      real r23BB#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r23BC#3 = TensorIndex<tensor[4],[2]>(basisResult237B);
      real r23BD#1 = RMul(r23BB,r23BC);
      real r23BE#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r23BF#3 = TensorIndex<tensor[4],[3]>(basisResult237B);
      real r23C0#1 = RMul(r23BE,r23BF);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C4#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r23C5#1 = RMul(r23C4,r23B6);
      real r23C6#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r23C7#1 = RMul(r23C6,r23B9);
      real r23C8#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r23C9#1 = RMul(r23C8,r23BC);
      real r23CA#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r23CB#1 = RMul(r23CA,r23BF);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23CF#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r23D0#1 = RMul(r23CF,r23B6);
      real r23D1#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r23D2#1 = RMul(r23D1,r23B9);
      real r23D3#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r23D4#1 = RMul(r23D3,r23BC);
      real r23D5#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r23D6#1 = RMul(r23D5,r23BF);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_2223B4#1 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2402#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_20224D);
      real r2403#1 = RDiv(r2402,op1_e3_l_212376);
      real r2404#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_20224D);
      real r2405#1 = RDiv(r2404,op1_e3_l_212376);
      real r2406#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_20224D);
      real r2407#1 = RDiv(r2406,op1_e3_l_212376);
      tensor[3] tensor2408#1 = <tensor[3]>[r2403,r2405,r2407];
      real r2409#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_20224D);
      real r240A#1 = RDiv(r2409,op1_e3_l_212376);
      real r240B#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_20224D);
      real r240C#1 = RDiv(r240B,op1_e3_l_212376);
      real r240D#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_20224D);
      real r240E#1 = RDiv(r240D,op1_e3_l_212376);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2410#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_20224D);
      real r2411#1 = RDiv(r2410,op1_e3_l_212376);
      real r2412#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_20224D);
      real r2413#1 = RDiv(r2412,op1_e3_l_212376);
      real r2414#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_20224D);
      real r2415#1 = RDiv(r2414,op1_e3_l_212376);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      tensor[3,3] op1_e3_l_232401#6 = <tensor[3,3]>[tensor2408,tensor240F,tensor2416];
      tensor[3] op1_e3_l_24242E#3 = VSub<3>(probe_l_2223B4,pos1D95);
      tensor[3] projParam2432#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232401);
      real vdot2433#1 = VDot<3>(projParam2432,op1_e3_l_24242E);
      tensor[3] projParam2434#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232401);
      real vdot2435#1 = VDot<3>(projParam2434,op1_e3_l_24242E);
      tensor[3] projParam2436#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232401);
      real vdot2437#1 = VDot<3>(projParam2436,op1_e3_l_24242E);
      tensor[3] op1_e3_l_252431#1 = <tensor[3]>[vdot2433,vdot2435,vdot2437];
      tensor[3] xn2440#4 = VSub<3>(xn237C,op1_e3_l_252431);
      real _t2443#1 = 0.1e-7;
      real r2446#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs1DCE);
      real r2447#3 = TensorIndex<tensor[4],[0]>(basisResult237B);
      real r2448#1 = RMul(r2446,r2447);
      real r2449#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs1DCE);
      real r244A#3 = TensorIndex<tensor[4],[1]>(basisResult237B);
      real r244B#1 = RMul(r2449,r244A);
      real r244C#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs1DCE);
      real r244D#3 = TensorIndex<tensor[4],[2]>(basisResult237B);
      real r244E#1 = RMul(r244C,r244D);
      real r244F#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs1DCE);
      real r2450#3 = TensorIndex<tensor[4],[3]>(basisResult237B);
      real r2451#1 = RMul(r244F,r2450);
      real r2452#1 = RAdd(r2448,r244B);
      real r2453#1 = RAdd(r2452,r244E);
      real r2454#1 = RAdd(r2453,r2451);
      real r2455#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs1DCE);
      real r2456#1 = RMul(r2455,r2447);
      real r2457#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs1DCE);
      real r2458#1 = RMul(r2457,r244A);
      real r2459#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs1DCE);
      real r245A#1 = RMul(r2459,r244D);
      real r245B#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs1DCE);
      real r245C#1 = RMul(r245B,r2450);
      real r245D#1 = RAdd(r2456,r2458);
      real r245E#1 = RAdd(r245D,r245A);
      real r245F#1 = RAdd(r245E,r245C);
      real r2460#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs1DCE);
      real r2461#1 = RMul(r2460,r2447);
      real r2462#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs1DCE);
      real r2463#1 = RMul(r2462,r244A);
      real r2464#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs1DCE);
      real r2465#1 = RMul(r2464,r244D);
      real r2466#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs1DCE);
      real r2467#1 = RMul(r2466,r2450);
      real r2468#1 = RAdd(r2461,r2463);
      real r2469#1 = RAdd(r2468,r2465);
      real r246A#1 = RAdd(r2469,r2467);
      tensor[3] probe_l_212445#1 = <tensor[3]>[r2454,r245F,r246A];
      tensor[3] op1_e3_l_232492#3 = VSub<3>(probe_l_212445,pos1D95);
      tensor[3] projParam2496#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232401);
      real vdot2497#1 = VDot<3>(projParam2496,op1_e3_l_232492);
      tensor[3] projParam2498#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232401);
      real vdot2499#1 = VDot<3>(projParam2498,op1_e3_l_232492);
      tensor[3] projParam249A#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232401);
      real vdot249B#1 = VDot<3>(projParam249A,op1_e3_l_232492);
      tensor[3] op1_e3_l_392495#2 = <tensor[3]>[vdot2497,vdot2499,vdot249B];
      real op1_e3_l_4124A4#1 = VDot<3>(op1_e3_l_392495,op1_e3_l_392495);
      real _t24A7#1 = Sqrt(op1_e3_l_4124A4);
      bool _t24AA#1 = GTE<real>(_t2443,_t24A7);
      if _t24AA then goto ASSIGN24AE else goto JOIN24D6
    ASSIGN24AE:  preds = [COND24AC]
      real _t24AD#4 = 0.1e1;
      tensor[3] _t24AF#1 = <tensor[3]>[_t24AD,_t24AD,_t24AD];
      real _t24B1#1 = VDot<3>(_t24AF,xn2440);
      bool _t24B4#1 = GT<real>(_t24AD,_t24B1);
      real _t24B6#3 = 0.1e-8;
      tensor[3] _t24B8#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24BA#3 = VAdd<3>(_t24B8,xn2440);
      real _t24BD#1 = VIndex<3,0>(_t24BA);
      real _t24BF#3 = -0.e0;
      bool _t24C1#1 = GT<real>(_t24BD,_t24BF);
      real _t24C3#1 = VIndex<3,1>(_t24BA);
      bool _t24C5#1 = GT<real>(_t24C3,_t24BF);
      real _t24C7#1 = VIndex<3,2>(_t24BA);
      bool _t24C9#1 = GT<real>(_t24C7,_t24BF);
      bool _t24CB#1 = BAnd(_t24C5,_t24C9);
      bool _t24CD#1 = BAnd(_t24C1,_t24CB);
      bool _t24CF#1 = BAnd(_t24B4,_t24CD);
      if _t24CF then goto ASSIGN24D3 else goto JOIN24D5
    ASSIGN24D3:  preds = [COND24D1]
      femData:MeshPos _t24D2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1D94,cellInt1DAE,xn2440,pos1D95);
      return _t24D2
      goto JOIN24D5
    JOIN24D5:  preds = [*RETURN(_t24D2)24D4,COND24D1]
      goto JOIN24D6
    JOIN24D6:  preds = [JOIN24D5,COND24AC]
      int newtonInt24D7#2 = IAdd(newtonInt24D8,_t1DA1);
      bool _t24DA#1 = GTE<int>(newtonInt24D7,_t1DA5);
      if _t24DA then goto ASSIGN24DE else goto JOIN24E8
    ASSIGN24DE:  preds = [COND24DC]
      bool _t24DD#1 = GTE<int>(cellInt1DAE,numCell1DA3);
      if _t24DD then goto ASSIGN24E1 else goto ASSIGN24EA
    ASSIGN24E1:  preds = [COND24DF]
      femData:MeshPos _t24E0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24E0
      goto JOIN24E5
    JOIN24E5:  preds = [*RETURN(_t24E0)24E2,ASSIGN24EA]
      int cellInt24E3#1 = phi(cellInt24E4)
      goto JOIN24E8
    JOIN24E8:  preds = [JOIN24E5,COND24DC]
      int cellInt24E6#1 = phi(cellInt24E3,cellInt1DAE)
      int newtonInt24E7#1 = phi(newtonInt1D9B,newtonInt24D7)
      goto FOREACH1DAC
    ASSIGN24EA:  preds = [COND24DF]
      int cellInt24E4#1 = IAdd(cellInt1DAE,_t1DA1);
      goto JOIN24E5
    ASSIGN24EC:  preds = [FOREACH1DAC]
      femData:MeshPos _t24EB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24EB
}
## input initialization
  ENTRY1AD7:  preds = []
    real isoval1AD8#1 = 0.2e0;
    globals.isoval1AB8 = isoval1AD8;
    real thick1ADB#1 = 0.7e-1;
    globals.thick1AB9 = thick1ADB;
    real _t1ADE#2 = -0.3e1;
    real _t1AE0#1 = 0.3e1;
    tensor[3] camEye1AE2#1 = <tensor[3]>[_t1ADE,_t1ADE,_t1AE0];
    globals.camEye1ABA = camEye1AE2;
    real _t1AE5#3 = 0.5e0;
    tensor[3] camAt1AE7#1 = <tensor[3]>[_t1AE5,_t1AE5,_t1AE5];
    globals.camAt1ABB = camAt1AE7;
    real _t1AEA#2 = 0.e0;
    real _t1AEC#2 = 0.1e1;
    tensor[3] camUp1AEE#2 = <tensor[3]>[_t1AEA,_t1AEA,_t1AEC];
    globals.camUp1ABC = camUp1AEE;
    real camFOV1AF1#1 = 0.137e2;
    globals.camFOV1ABD = camFOV1AF1;
    int iresU1AF4#2 = 500;
    globals.iresU1ABE = iresU1AF4;
    globals.iresV1ABF = iresU1AF4;
    real camNear1AF8#1 = -0.2e1;
    globals.camNear1AC0 = camNear1AF8;
    real camFar1AFB#1 = 0.5e1;
    globals.camFar1AC1 = camFar1AFB;
    globals.refStep1AC2 = _t1AEC;
    real rayStep1AFF#1 = 0.1e-1;
    globals.rayStep1AC3 = rayStep1AFF;
    globals.lightVsp1AC4 = camUp1AEE;
    real phongKa1B03#1 = 0.1e0;
    globals.phongKa1AC5 = phongKa1B03;
    real phongKd1B06#1 = 0.9e0;
    globals.phongKd1AC6 = phongKd1B06;
    bool debug1B09#1 = false;
    globals.debug1AC7 = debug1B09;
    int su1B0C#2 = 250;
    globals.su1AC8 = su1B0C;
    globals.sv1AC9 = su1B0C;
    return
## global-variable initialization
  ENTRY1B11:  preds = []
    femData:Mesh a1B12#3 = globals.a1AB5;
    femData:Space 0b042F_intermedateGlobal1B14#1 = globals.0b042F_intermedateGlobal1AB6;
    femData:FemFunc 0c0431_intermedateGlobal1B16#1 = globals.0c0431_intermedateGlobal1AB7;
    tensor[3] camEye1B18#1 = globals.camEye1ABA;
    tensor[3] camAt1B1A#1 = globals.camAt1ABB;
    tensor[3] camUp1B1C#3 = globals.camUp1ABC;
    real camFOV1B1E#1 = globals.camFOV1ABD;
    int iresU1B20#1 = globals.iresU1ABE;
    int iresV1B22#1 = globals.iresV1ABF;
    tensor[3] lightVsp1B24#5 = globals.lightVsp1AC4;
    int _t1B26#1 = 0;
    int _t1B28#1 = 1;
    int _t1B2A#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B12);
    int _t1B2C#1 = ISub(_t1B2A,_t1B28);
    int[] _t1B2E#1 = Range(_t1B26,_t1B2C);
    femData:MeshCell[] _t1B30#1 = <femData:MeshCell[]>{};
  FOREACH1B33:  preds = [ASSIGN1B31,NEXT1B39]
    foreach (_t1B32 in _t1B2E) on exit goto ASSIGN1B3B
      femData:MeshCell[] _t1B37#1 = phi(_t1B30,_t1B36)
    femData:MeshCell _t1B34#1 = LoadFem<femData:MeshCell>(a1B12,_t1B32);
    femData:MeshCell[] _t1B36#1 = Append<femData:MeshCell>(_t1B37,_t1B34);
    goto FOREACH1B33
  ASSIGN1B3B:  preds = [FOREACH1B33]
    femData:Space b1B3A#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1B14,a1B12);
    femData:FemFunc c1B3C#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1B16,b1B3A);
    femData:Space _t1B3E#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B3C);
    femData:Mesh _t1B40#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B3E);
    image(IMAGE1D<double[3]>) I1B42#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    int _t1B44#1 = 0;
    image(IMAGE1D<double[3]>) img1B46#1 = I1B42;
    tensor[3] op1_e3_l_21B48#9 = VSub<3>(camAt1B1A,camEye1B18);
    real op1_e3_l_41B4B#1 = VDot<3>(op1_e3_l_21B48,op1_e3_l_21B48);
    real camDist1B4E#4 = Sqrt(op1_e3_l_41B4B);
    globals.camDist1ACA = camDist1B4E;
    real realLit1B53#1 = 0.1e1;
    real op1_e3_l_91B52#6 = RDiv(realLit1B53,camDist1B4E);
    tensor[3] camN1B57#2 = VScale<3>(op1_e3_l_91B52,op1_e3_l_21B48);
    globals.camN1ACB = camN1B57;
    real realLit1B5C#3 = 0.e0;
    real r1B5D#3 = TensorIndex<tensor[3],[0]>(camUp1B1C);
    real r1B5E#3 = RMul(realLit1B5C,r1B5D);
    real r1B5F#3 = TensorIndex<tensor[3],[1]>(camUp1B1C);
    real r1B60#3 = RMul(realLit1B5C,r1B5F);
    real r1B61#3 = TensorIndex<tensor[3],[2]>(camUp1B1C);
    real r1B62#5 = RMul(realLit1B5C,r1B61);
    real r1B63#3 = RAdd(r1B5E,r1B60);
    real r1B64#3 = RAdd(r1B63,r1B62);
    real realLit1B65#3 = 0.1e1;
    real r1B66#1 = RMul(realLit1B65,r1B61);
    real r1B67#1 = RAdd(r1B63,r1B66);
    real realLit1B68#3 = -0.1e1;
    real r1B69#1 = RMul(realLit1B68,r1B5F);
    real r1B6A#1 = RAdd(r1B5E,r1B69);
    real r1B6B#1 = RAdd(r1B6A,r1B62);
    tensor[3] tensor1B6C#1 = <tensor[3]>[r1B64,r1B67,r1B6B];
    real r1B6D#1 = RMul(realLit1B68,r1B61);
    real r1B6E#1 = RAdd(r1B63,r1B6D);
    real r1B6F#1 = RMul(realLit1B65,r1B5D);
    real r1B70#1 = RAdd(r1B6F,r1B60);
    real r1B71#1 = RAdd(r1B70,r1B62);
    tensor[3] tensor1B72#1 = <tensor[3]>[r1B6E,r1B64,r1B71];
    real r1B73#1 = RMul(realLit1B65,r1B5F);
    real r1B74#1 = RAdd(r1B5E,r1B73);
    real r1B75#1 = RAdd(r1B74,r1B62);
    real r1B76#1 = RMul(realLit1B68,r1B5D);
    real r1B77#1 = RAdd(r1B76,r1B60);
    real r1B78#1 = RAdd(r1B77,r1B62);
    tensor[3] tensor1B79#1 = <tensor[3]>[r1B75,r1B78,r1B64];
    tensor[3,3] op1_e3_l_151B5B#3 = <tensor[3,3]>[tensor1B6C,tensor1B72,tensor1B79];
    tensor[3] projParam1B9B#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_151B5B);
    real vdot1B9C#1 = VDot<3>(op1_e3_l_21B48,projParam1B9B);
    tensor[3] projParam1B9D#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_151B5B);
    real vdot1B9E#1 = VDot<3>(op1_e3_l_21B48,projParam1B9D);
    tensor[3] projParam1B9F#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_151B5B);
    real vdot1BA0#1 = VDot<3>(op1_e3_l_21B48,projParam1B9F);
    tensor[3] op1_e3_l_171B9A#6 = <tensor[3]>[vdot1B9C,vdot1B9E,vdot1BA0];
    real op1_e3_l_341BA9#1 = VDot<3>(op1_e3_l_171B9A,op1_e3_l_171B9A);
    real r1BAD#1 = RMul(op1_e3_l_91B52,op1_e3_l_91B52);
    real op1_e3_l_351BAC#1 = RMul(r1BAD,op1_e3_l_341BA9);
    real op1_e3_l_361BB1#1 = Sqrt(op1_e3_l_351BAC);
    tensor[3] op1_e3_l_371BB4#1 = VScale<3>(op1_e3_l_91B52,op1_e3_l_171B9A);
    real realLit1BB8#1 = 0.1e1;
    real op1_e3_l_381BB7#2 = RDiv(realLit1BB8,op1_e3_l_361BB1);
    tensor[3] camU1BBC#2 = VScale<3>(op1_e3_l_381BB7,op1_e3_l_371BB4);
    globals.camU1ACC = camU1BBC;
    real realLit1BC1#3 = 0.e0;
    real r1BC2#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B48);
    real r1BC3#3 = RMul(realLit1BC1,r1BC2);
    real r1BC4#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B48);
    real r1BC5#3 = RMul(realLit1BC1,r1BC4);
    real r1BC6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B48);
    real r1BC7#5 = RMul(realLit1BC1,r1BC6);
    real r1BC8#3 = RAdd(r1BC3,r1BC5);
    real r1BC9#3 = RAdd(r1BC8,r1BC7);
    real realLit1BCA#3 = 0.1e1;
    real r1BCB#1 = RMul(realLit1BCA,r1BC6);
    real r1BCC#1 = RAdd(r1BC8,r1BCB);
    real realLit1BCD#3 = -0.1e1;
    real r1BCE#1 = RMul(realLit1BCD,r1BC4);
    real r1BCF#1 = RAdd(r1BC3,r1BCE);
    real r1BD0#1 = RAdd(r1BCF,r1BC7);
    tensor[3] tensor1BD1#1 = <tensor[3]>[r1BC9,r1BCC,r1BD0];
    real r1BD2#1 = RMul(realLit1BCD,r1BC6);
    real r1BD3#1 = RAdd(r1BC8,r1BD2);
    real r1BD4#1 = RMul(realLit1BCA,r1BC2);
    real r1BD5#1 = RAdd(r1BD4,r1BC5);
    real r1BD6#1 = RAdd(r1BD5,r1BC7);
    tensor[3] tensor1BD7#1 = <tensor[3]>[r1BD3,r1BC9,r1BD6];
    real r1BD8#1 = RMul(realLit1BCA,r1BC4);
    real r1BD9#1 = RAdd(r1BC3,r1BD8);
    real r1BDA#1 = RAdd(r1BD9,r1BC7);
    real r1BDB#1 = RMul(realLit1BCD,r1BC2);
    real r1BDC#1 = RAdd(r1BDB,r1BC5);
    real r1BDD#1 = RAdd(r1BDC,r1BC7);
    tensor[3] tensor1BDE#1 = <tensor[3]>[r1BDA,r1BDD,r1BC9];
    tensor[3,3] op1_e3_l_451BC0#3 = <tensor[3,3]>[tensor1BD1,tensor1BD7,tensor1BDE];
    tensor[3] projParam1C00#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_451BC0);
    real vdot1C01#1 = VDot<3>(op1_e3_l_171B9A,projParam1C00);
    tensor[3] projParam1C02#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_451BC0);
    real vdot1C03#1 = VDot<3>(op1_e3_l_171B9A,projParam1C02);
    tensor[3] projParam1C04#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_451BC0);
    real vdot1C05#1 = VDot<3>(op1_e3_l_171B9A,projParam1C04);
    tensor[3] op1_e3_l_471BFF#1 = <tensor[3]>[vdot1C01,vdot1C03,vdot1C05];
    tensor[3] op1_e3_l_501C0E#3 = VScale<3>(op1_e3_l_91B52,op1_e3_l_471BFF);
    real r1C12#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C0E);
    real r1C13#3 = RMul(op1_e3_l_381BB7,op1_e3_l_91B52);
    real r1C14#1 = RMul(r1C13,r1C12);
    real r1C15#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C0E);
    real r1C16#1 = RMul(r1C13,r1C15);
    real r1C17#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C0E);
    real r1C18#1 = RMul(r1C13,r1C17);
    tensor[3] camV1C11#2 = <tensor[3]>[r1C14,r1C16,r1C18];
    globals.camV1ACD = camV1C11;
    real _t1C23#1 = 0.314159265358979323846264338327950288e1;
    real _t1C25#1 = 0.36e3;
    real op1_e3_l_51C27#1 = RMul(camFOV1B1E,_t1C23);
    real op1_e3_l_61C2A#1 = RDiv(op1_e3_l_51C27,_t1C25);
    real op1_e3_l_101C2D#2 = Tan(op1_e3_l_61C2A);
    real camVmax1C30#1 = RMul(op1_e3_l_101C2D,camDist1B4E);
    globals.camVmax1ACE = camVmax1C30;
    real _t1C34#1 = IntToReal(iresU1B20);
    real _t1C36#1 = IntToReal(iresV1B22);
    real r1C39#1 = RMul(_t1C34,op1_e3_l_101C2D);
    real op1_e3_l_141C38#1 = RMul(r1C39,camDist1B4E);
    real camUmax1C3D#1 = RDiv(op1_e3_l_141C38,_t1C36);
    globals.camUmax1ACF = camUmax1C3D;
    tensor[3,3] _t1C41#9 = <tensor[3,3]>[camU1BBC,camV1C11,camN1B57];
    real op1_e3_l_31C43#1 = VDot<3>(lightVsp1B24,lightVsp1B24);
    real op1_e3_l_41C46#1 = Sqrt(op1_e3_l_31C43);
    real realLit1C4A#1 = 0.1e1;
    real op1_e3_l_51C49#1 = RDiv(realLit1C4A,op1_e3_l_41C46);
    real r1C4F#1 = TensorIndex<tensor[3,3],[0,0]>(_t1C41);
    real r1C50#3 = TensorIndex<tensor[3],[0]>(lightVsp1B24);
    real r1C51#1 = RMul(r1C4F,r1C50);
    real r1C52#1 = TensorIndex<tensor[3,3],[1,0]>(_t1C41);
    real r1C53#3 = TensorIndex<tensor[3],[1]>(lightVsp1B24);
    real r1C54#1 = RMul(r1C52,r1C53);
    real r1C55#1 = TensorIndex<tensor[3,3],[2,0]>(_t1C41);
    real r1C56#3 = TensorIndex<tensor[3],[2]>(lightVsp1B24);
    real r1C57#1 = RMul(r1C55,r1C56);
    real r1C58#1 = RAdd(r1C51,r1C54);
    real r1C59#1 = RAdd(r1C58,r1C57);
    real r1C5A#1 = TensorIndex<tensor[3,3],[0,1]>(_t1C41);
    real r1C5B#1 = RMul(r1C5A,r1C50);
    real r1C5C#1 = TensorIndex<tensor[3,3],[1,1]>(_t1C41);
    real r1C5D#1 = RMul(r1C5C,r1C53);
    real r1C5E#1 = TensorIndex<tensor[3,3],[2,1]>(_t1C41);
    real r1C5F#1 = RMul(r1C5E,r1C56);
    real r1C60#1 = RAdd(r1C5B,r1C5D);
    real r1C61#1 = RAdd(r1C60,r1C5F);
    real r1C62#1 = TensorIndex<tensor[3,3],[0,2]>(_t1C41);
    real r1C63#1 = RMul(r1C62,r1C50);
    real r1C64#1 = TensorIndex<tensor[3,3],[1,2]>(_t1C41);
    real r1C65#1 = RMul(r1C64,r1C53);
    real r1C66#1 = TensorIndex<tensor[3,3],[2,2]>(_t1C41);
    real r1C67#1 = RMul(r1C66,r1C56);
    real r1C68#1 = RAdd(r1C63,r1C65);
    real r1C69#1 = RAdd(r1C68,r1C67);
    tensor[3] op1_e3_l_61C4E#1 = <tensor[3]>[r1C59,r1C61,r1C69];
    tensor[3] light1C87#1 = VScale<3>(op1_e3_l_51C49,op1_e3_l_61C4E);
    globals.light1AD0 = light1C87;
    globals._t1AD1 = _t1B40;
    globals._tX1AD2 = _t1B3E;
    globals.c1AD3 = c1B3C;
    globals.img1AD4 = img1B46;
    globals._tXX1AD5 = _t1B44;
    globals.I1AD6 = I1B42;
    return
## strand
  strand raycast (int ui1C92#2, int vi1C93#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1C9E:  preds = []
        int iresU1C9F#1 = globals.iresU1ABE;
        int iresV1CA1#1 = globals.iresV1ABF;
        real camNear1CA3#1 = globals.camNear1AC0;
        real camDist1CA5#1 = globals.camDist1ACA;
        tensor[3] camN1CA7#1 = globals.camN1ACB;
        tensor[3] camU1CA9#1 = globals.camU1ACC;
        tensor[3] camV1CAB#1 = globals.camV1ACD;
        real camVmax1CAD#4 = globals.camVmax1ACE;
        real camUmax1CAF#2 = globals.camUmax1ACF;
        real _t1CB1#5 = -0.5e0;
        real _t1CB3#1 = IntToReal(ui1C92);
        real _t1CB5#1 = IntToReal(iresU1C9F);
        real _t1CB7#3 = 0.5e0;
        real op1_e3_l_61CB9#1 = RSub(_t1CB5,_t1CB7);
        real op1_e3_l_71CBC#1 = RSub(_t1CB3,_t1CB1);
        real op1_e3_l_81CBF#1 = RSub(op1_e3_l_61CB9,_t1CB1);
        real op1_e3_l_91CC2#2 = RNeg(camUmax1CAF);
        real op1_e3_l_101CC5#1 = RDiv(op1_e3_l_71CBC,op1_e3_l_81CBF);
        real op1_e3_l_111CC8#1 = RSub(camUmax1CAF,op1_e3_l_91CC2);
        real op1_e3_l_131CCB#1 = RMul(op1_e3_l_101CC5,op1_e3_l_111CC8);
        real rayU1CCE#2 = RAdd(op1_e3_l_91CC2,op1_e3_l_131CCB);
        real _t1CD1#1 = IntToReal(vi1C93);
        real _t1CD3#2 = IntToReal(iresV1CA1);
        real op1_e3_l_61CD5#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_71CD8#2 = RSub(_t1CD1,_t1CB1);
        real op1_e3_l_81CDB#1 = RSub(op1_e3_l_61CD5,_t1CB1);
        real op1_e3_l_91CDE#1 = RNeg(camVmax1CAD);
        real op1_e3_l_101CE1#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_81CDB);
        real op1_e3_l_111CE4#2 = RSub(op1_e3_l_91CDE,camVmax1CAD);
        real op1_e3_l_121CE7#1 = RMul(op1_e3_l_101CE1,op1_e3_l_111CE4);
        real rayV1CEA#1 = RAdd(camVmax1CAD,op1_e3_l_121CE7);
        real op1_e3_l_251CED#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_271CF0#1 = RSub(op1_e3_l_251CED,_t1CB1);
        real op1_e3_l_291CF3#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_271CF0);
        real op1_e3_l_311CF6#1 = RMul(op1_e3_l_291CF3,op1_e3_l_111CE4);
        real op1_e3_l_321CF9#1 = RAdd(camVmax1CAD,op1_e3_l_311CF6);
        tensor[3] op1_e3_l_331CFC#1 = VScale<3>(rayU1CCE,camU1CA9);
        tensor[3] op1_e3_l_341CFF#1 = VScale<3>(op1_e3_l_321CF9,camV1CAB);
        tensor[3] op1_e3_l_351D02#3 = VAdd<3>(op1_e3_l_331CFC,op1_e3_l_341CFF);
        real realLit1D06#1 = 0.1e1;
        real r1D07#3 = RDiv(realLit1D06,camDist1CA5);
        real r1D08#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D02);
        real r1D09#1 = RMul(r1D07,r1D08);
        real r1D0A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D02);
        real r1D0B#1 = RMul(r1D07,r1D0A);
        real r1D0C#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D02);
        real r1D0D#1 = RMul(r1D07,r1D0C);
        tensor[3] op1_e3_l_361D05#1 = <tensor[3]>[r1D09,r1D0B,r1D0D];
        tensor[3] rayVec1D18#1 = VAdd<3>(camN1CA7,op1_e3_l_361D05);
        real transp1D1B#1 = 0.1e1;
        real _t1D1D#8 = 0.e0;
        tensor[3] rgb1D1F#1 = <tensor[3]>[_t1D1D,_t1D1D,_t1D1D];
        tensor[4] rgba1D21#1 = <tensor[4]>[_t1D1D,_t1D1D,_t1D1D,_t1D1D];
        self.rayU = rayU1CCE;
        self.rayV = rayV1CEA;
        self.rayN = camNear1CA3;
        self.rayVec = rayVec1D18;
        self.transp = transp1D1B;
        self.rgb = rgb1D1F;
        self.rgba = rgba1D21;
        self.gray = _t1D1D;
        self.ui = ui1C92;
        self.vi = vi1C93;
        return
    end state init
    method update
        ENTRY1D2E:  preds = []
          image(IMAGE1D<double[3]>) I1D2F#17 = globals.I1AD6;
          real isoval1D31#1 = globals.isoval1AB8;
          femData:Mesh _t1D33#17 = globals._t1AD1;
          femData:Space _t1D35#10 = globals._tX1AD2;
          femData:FemFunc c1D37#10 = globals.c1AD3;
          image(IMAGE1D<double[3]>) img1D39#0 = globals.img1AD4;
          int _t1D3B#0 = globals._tXX1AD5;
          femData:Mesh a1D3D#1 = globals.a1AB5;
          real thick1D3F#1 = globals.thick1AB9;
          tensor[3] camEye1D41#1 = globals.camEye1ABA;
          real camNear1D43#2 = globals.camNear1AC0;
          real camFar1D45#2 = globals.camFar1AC1;
          real refStep1D47#1 = globals.refStep1AC2;
          real rayStep1D49#2 = globals.rayStep1AC3;
          real phongKa1D4B#1 = globals.phongKa1AC5;
          real phongKd1D4D#1 = globals.phongKd1AC6;
          bool debug1D4F#1 = globals.debug1AC7;
          int su1D51#1 = globals.su1AC8;
          int sv1D53#1 = globals.sv1AC9;
          tensor[3] light1D55#1 = globals.light1AD0;
          real rayN1D57#4 = self.rayN;
          tensor[3] rayVec1D59#3 = self.rayVec;
          real transp1D5B#10 = self.transp;
          tensor[3] rgb1D5D#9 = self.rgb;
          int ui1D5F#1 = self.ui;
          int vi1D61#1 = self.vi;
          if debug1D4F then goto ASSIGN1D65 else goto JOIN1D6F
        ASSIGN1D65:  preds = [COND1D63]
          bool _t1D64#1 = NEQ<int>(ui1D5F,su1D51);
          if _t1D64 then goto ASSIGN1D68 else goto ASSIGN2E4B
        ASSIGN1D68:  preds = [COND1D66]
          bool _t1D67#1 = true;
          goto JOIN1D6B
        JOIN1D6B:  preds = [ASSIGN1D68,ASSIGN2E4B]
          bool _t1D69#1 = phi(_t1D67,_t1D6A)
          if _t1D69 then goto STABILIZE1D6D else goto JOIN1D6E
        STABILIZE1D6D:  preds = [COND1D6C]
          stabilize
          goto JOIN1D6E
        JOIN1D6E:  preds = [*STABILIZE1D6D,COND1D6C]
          goto JOIN1D6F
        JOIN1D6F:  preds = [JOIN1D6E,COND1D63]
          tensor[3] op1_e3_l_31D70#1 = VScale<3>(rayN1D57,rayVec1D59);
          tensor[3] x1D73#5 = VAdd<3>(camEye1D41,op1_e3_l_31D70);
          real _t1D76#8 = 0.e0;
          real _t1D78#2 = VIndex<3,0>(x1D73);
          bool _t1D7A#1 = LTE<real>(_t1D76,_t1D78);
          if _t1D7A then goto ASSIGN1D7E else goto JOIN2E01
        ASSIGN1D7E:  preds = [COND1D7C]
          real _t1D7D#11 = 0.1e1;
          bool _t1D7F#1 = LTE<real>(_t1D78,_t1D7D);
          if _t1D7F then goto ASSIGN1D83 else goto JOIN2DFE
        ASSIGN1D83:  preds = [COND1D81]
          real _t1D82#2 = VIndex<3,1>(x1D73);
          bool _t1D84#1 = LTE<real>(_t1D76,_t1D82);
          if _t1D84 then goto ASSIGN1D88 else goto JOIN2DFB
        ASSIGN1D88:  preds = [COND1D86]
          bool _t1D87#1 = LTE<real>(_t1D82,_t1D7D);
          if _t1D87 then goto ASSIGN1D8B else goto JOIN2DF8
        ASSIGN1D8B:  preds = [COND1D89]
          real _t1D8A#2 = VIndex<3,2>(x1D73);
          bool _t1D8C#1 = LTE<real>(_t1D76,_t1D8A);
          if _t1D8C then goto ASSIGN1D90 else goto JOIN2DF5
        ASSIGN1D90:  preds = [COND1D8E]
          bool _t1D8F#1 = LTE<real>(_t1D8A,_t1D7D);
          if _t1D8F then goto ASSIGN24EE else goto JOIN2DF2
        ASSIGN24EE:  preds = [COND1D91]
          femData:MeshPos p1D92#1 = findPos1D93 (a1D3D,x1D73);
          bool _t24EF#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1D92);
          if _t24EF then goto ASSIGN24F3 else goto JOIN2DEF
        ASSIGN24F3:  preds = [COND24F1]
          real _t24F2#1 = 0.13e1;
          femData:MeshPos callFindPos24F4#2 = findPos1D93 (_t1D33,x1D73);
          int intPos24F6#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F4);
          tensor[3] refPos24F8#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F4);
          int ilit24FB#1 = 10;
          int mulRes24FC#10 = IMul(intPos24F6,ilit24FB);
          int ilit24FD#1 = 0;
          int addRes24FE#1 = IAdd(mulRes24FC,ilit24FD);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes24FE);
          int ilit2500#1 = 1;
          int addRes2501#1 = IAdd(mulRes24FC,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2501);
          int ilit2503#1 = 2;
          int addRes2504#1 = IAdd(mulRes24FC,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2504);
          int ilit2506#1 = 3;
          int addRes2507#1 = IAdd(mulRes24FC,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2507);
          int ilit2509#1 = 4;
          int addRes250A#1 = IAdd(mulRes24FC,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250A);
          int ilit250C#1 = 5;
          int addRes250D#1 = IAdd(mulRes24FC,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250D);
          int ilit250F#1 = 6;
          int addRes2510#1 = IAdd(mulRes24FC,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2510);
          int ilit2512#1 = 7;
          int addRes2513#1 = IAdd(mulRes24FC,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2513);
          int ilit2515#1 = 8;
          int addRes2516#1 = IAdd(mulRes24FC,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2516);
          int ilit2518#1 = 9;
          int addRes2519#1 = IAdd(mulRes24FC,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2519);
          int[10] seq251B#1 = <int[10]>{idx24FF,idx2502,idx2505,idx2508,idx250B,idx250E,idx2511,idx2514,idx2517,idx251A};
          int[10] femIndicies24FA#10 = seq251B;
          int ilit253F#11 = 1;
          int ilit2540#1 = 0;
          int idx2541#1 = Subscript<int>(femIndicies24FA,ilit2540);
          int mulRes2542#1 = IMul(ilit253F,idx2541);
          int idx2543#1 = Subscript<int>(femIndicies24FA,ilit253F);
          int mulRes2544#1 = IMul(ilit253F,idx2543);
          int ilit2545#1 = 2;
          int idx2546#1 = Subscript<int>(femIndicies24FA,ilit2545);
          int mulRes2547#1 = IMul(ilit253F,idx2546);
          int ilit2548#1 = 3;
          int idx2549#1 = Subscript<int>(femIndicies24FA,ilit2548);
          int mulRes254A#1 = IMul(ilit253F,idx2549);
          int ilit254B#1 = 4;
          int idx254C#1 = Subscript<int>(femIndicies24FA,ilit254B);
          int mulRes254D#1 = IMul(ilit253F,idx254C);
          int ilit254E#1 = 5;
          int idx254F#1 = Subscript<int>(femIndicies24FA,ilit254E);
          int mulRes2550#1 = IMul(ilit253F,idx254F);
          int ilit2551#1 = 6;
          int idx2552#1 = Subscript<int>(femIndicies24FA,ilit2551);
          int mulRes2553#1 = IMul(ilit253F,idx2552);
          int ilit2554#1 = 7;
          int idx2555#1 = Subscript<int>(femIndicies24FA,ilit2554);
          int mulRes2556#1 = IMul(ilit253F,idx2555);
          int ilit2557#1 = 8;
          int idx2558#1 = Subscript<int>(femIndicies24FA,ilit2557);
          int mulRes2559#1 = IMul(ilit253F,idx2558);
          int ilit255A#1 = 9;
          int idx255B#1 = Subscript<int>(femIndicies24FA,ilit255A);
          int mulRes255C#1 = IMul(ilit253F,idx255B);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2542);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2544);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2547);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254A);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254D);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2550);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2553);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2556);
          real dof2565#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2559);
          real dof2566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes255C);
          tensor[10] dofs2567#1 = <tensor[10]>[dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564,dof2565,dof2566];
          tensor[10] femDofs253E#4 = dofs2567;
          real varAcc2593#2 = VIndex<3,0>(refPos24F8);
          real varAcc2594#2 = VIndex<3,1>(refPos24F8);
          real varAcc2595#2 = VIndex<3,2>(refPos24F8);
          real coeff2596#3 = 0.2e1;
          real iden2597#4 = varAcc2593;
          real prod22598#1 = RMul(iden2597,varAcc2593);
          real one2599#13 = 0.1e1;
          real prod259A#3 = RMul(one2599,one2599);
          real prod259B#2 = RMul(prod22598,prod259A);
          real coeff259C#6 = 0.4e1;
          real iden259D#3 = varAcc2594;
          real prod259E#2 = RMul(iden259D,one2599);
          real prod259F#2 = RMul(iden2597,prod259E);
          real iden25A0#3 = varAcc2595;
          real prod25A1#2 = RMul(one2599,iden25A0);
          real prod25A2#2 = RMul(iden2597,prod25A1);
          real coeff25A3#3 = -0.3e1;
          real prod25A4#3 = RMul(iden2597,prod259A);
          real prod225A5#1 = RMul(iden259D,varAcc2594);
          real prod25A6#1 = RMul(prod225A5,one2599);
          real prod25A7#2 = RMul(one2599,prod25A6);
          real prod25A8#1 = RMul(iden259D,iden25A0);
          real prod25A9#2 = RMul(one2599,prod25A8);
          real prod25AA#3 = RMul(one2599,prod259E);
          real prod225AB#1 = RMul(iden25A0,varAcc2595);
          real prod25AC#1 = RMul(one2599,prod225AB);
          real prod25AD#2 = RMul(one2599,prod25AC);
          real prod25AE#3 = RMul(one2599,prod25A1);
          real prod25AF#1 = RMul(one2599,prod259A);
          real mult25B0#1 = RMul(one2599,prod25AF);
          real mult25B1#1 = RMul(coeff25A3,prod25AE);
          real mult25B2#2 = RMul(coeff2596,prod25AD);
          real mult25B3#1 = RMul(coeff25A3,prod25AA);
          real mult25B4#2 = RMul(coeff259C,prod25A9);
          real mult25B5#2 = RMul(coeff2596,prod25A7);
          real mult25B6#1 = RMul(coeff25A3,prod25A4);
          real mult25B7#2 = RMul(coeff259C,prod25A2);
          real mult25B8#2 = RMul(coeff259C,prod259F);
          real mult25B9#2 = RMul(coeff2596,prod259B);
          real sum25BA#1 = RAdd(mult25B8,mult25B9);
          real sum25BB#1 = RAdd(mult25B7,sum25BA);
          real sum25BC#1 = RAdd(mult25B6,sum25BB);
          real sum25BD#1 = RAdd(mult25B5,sum25BC);
          real sum25BE#1 = RAdd(mult25B4,sum25BD);
          real sum25BF#1 = RAdd(mult25B3,sum25BE);
          real sum25C0#1 = RAdd(mult25B2,sum25BF);
          real sum25C1#1 = RAdd(mult25B1,sum25C0);
          real sum25C2#1 = RAdd(mult25B0,sum25C1);
          real intermediate25C3#1 = sum25C2;
          real coeff25C4#3 = -0.1e1;
          real mult25C5#1 = RMul(coeff25C4,prod25A4);
          real sum25C6#1 = RAdd(mult25C5,mult25B9);
          real intermediate25C7#1 = sum25C6;
          real mult25C8#1 = RMul(coeff25C4,prod25AA);
          real sum25C9#1 = RAdd(mult25C8,mult25B5);
          real intermediate25CA#1 = sum25C9;
          real mult25CB#1 = RMul(coeff25C4,prod25AE);
          real sum25CC#1 = RAdd(mult25CB,mult25B2);
          real intermediate25CD#1 = sum25CC;
          real coeff25CE#6 = -0.4e1;
          real mult25CF#1 = RMul(coeff259C,prod25AE);
          real mult25D0#1 = RMul(coeff25CE,prod25AD);
          real mult25D1#2 = RMul(coeff25CE,prod25A9);
          real mult25D2#2 = RMul(coeff25CE,prod25A2);
          real sum25D3#1 = RAdd(mult25D1,mult25D2);
          real sum25D4#1 = RAdd(mult25D0,sum25D3);
          real sum25D5#1 = RAdd(mult25CF,sum25D4);
          real intermediate25D6#1 = sum25D5;
          real mult25D7#1 = RMul(coeff259C,prod25AA);
          real mult25D8#1 = RMul(coeff25CE,prod25A7);
          real mult25D9#2 = RMul(coeff25CE,prod259F);
          real sum25DA#1 = RAdd(mult25D8,mult25D9);
          real sum25DB#1 = RAdd(mult25D1,sum25DA);
          real sum25DC#1 = RAdd(mult25D7,sum25DB);
          real intermediate25DD#1 = sum25DC;
          real mult25DE#1 = RMul(coeff259C,prod25A4);
          real mult25DF#1 = RMul(coeff25CE,prod259B);
          real sum25E0#1 = RAdd(mult25D9,mult25DF);
          real sum25E1#1 = RAdd(mult25D2,sum25E0);
          real sum25E2#1 = RAdd(mult25DE,sum25E1);
          real intermediate25E3#1 = sum25E2;
          tensor[10] intermediateCons25E4#1 = <tensor[10]>[intermediate25C3,intermediate25C7,intermediate25CA,intermediate25CD,mult25B4,mult25B7,mult25B8,intermediate25D6,intermediate25DD,intermediate25E3];
          tensor[10] basisResult2592#1 = intermediateCons25E4;
          real compositionl2638#2 = VDot<10>(femDofs253E,basisResult2592);
          real op1_e3_l_23263B#1 = RSub(compositionl2638,isoval1D31);
          real varAcc263F#1 = VIndex<3,0>(refPos24F8);
          real varAcc2640#1 = VIndex<3,1>(refPos24F8);
          real varAcc2641#1 = VIndex<3,2>(refPos24F8);
          real coeff2642#4 = 0.4e1;
          real iden2643#1 = varAcc263F;
          real one2644#7 = 0.1e1;
          real prod2645#2 = RMul(one2644,one2644);
          real prod2646#3 = RMul(iden2643,prod2645);
          real iden2647#1 = varAcc2640;
          real prod2648#1 = RMul(iden2647,one2644);
          real prod2649#3 = RMul(one2644,prod2648);
          real iden264A#1 = varAcc2641;
          real prod264B#1 = RMul(one2644,iden264A);
          real prod264C#3 = RMul(one2644,prod264B);
          real coeff264D#1 = -0.3e1;
          real prod264E#3 = RMul(one2644,prod2645);
          real mult264F#1 = RMul(coeff264D,prod264E);
          real mult2650#4 = RMul(coeff2642,prod264C);
          real mult2651#4 = RMul(coeff2642,prod2649);
          real mult2652#4 = RMul(coeff2642,prod2646);
          real sum2653#1 = RAdd(mult2651,mult2652);
          real sum2654#1 = RAdd(mult2650,sum2653);
          real sum2655#3 = RAdd(mult264F,sum2654);
          real intermediate2656#1 = sum2655;
          real coeff2657#1 = -0.1e1;
          real mult2658#3 = RMul(coeff2657,prod264E);
          real sum2659#1 = RAdd(mult2658,mult2652);
          real intermediate265A#1 = sum2659;
          real basisEval265B#9 = 0.e0;
          real coeff265C#3 = -0.4e1;
          real basisEval265D#4 = RMul(coeff265C,prod264C);
          real basisEval265E#4 = RMul(coeff265C,prod2649);
          real coeff265F#3 = -0.8e1;
          real mult2660#3 = RMul(coeff2642,prod264E);
          real mult2661#1 = RMul(coeff265F,prod2646);
          real sum2662#1 = RAdd(basisEval265E,mult2661);
          real sum2663#1 = RAdd(basisEval265D,sum2662);
          real sum2664#1 = RAdd(mult2660,sum2663);
          real intermediate2665#1 = sum2664;
          real intermediate2666#1 = sum2655;
          real sum2667#1 = RAdd(mult2658,mult2651);
          real intermediate2668#1 = sum2667;
          real mult2669#1 = RMul(coeff265F,prod2649);
          real mult266A#4 = RMul(coeff265C,prod2646);
          real sum266B#1 = RAdd(mult2669,mult266A);
          real sum266C#1 = RAdd(basisEval265D,sum266B);
          real sum266D#1 = RAdd(mult2660,sum266C);
          real intermediate266E#1 = sum266D;
          real intermediate266F#1 = sum2655;
          real sum2670#1 = RAdd(mult2658,mult2650);
          real intermediate2671#1 = sum2670;
          real mult2672#1 = RMul(coeff265F,prod264C);
          real sum2673#1 = RAdd(basisEval265E,mult266A);
          real sum2674#1 = RAdd(mult2672,sum2673);
          real sum2675#1 = RAdd(mult2660,sum2674);
          real intermediate2676#1 = sum2675;
          tensor[10] intermediateCons2677#1 = <tensor[10]>[intermediate2656,intermediate265A,basisEval265B,basisEval265B,basisEval265B,mult2650,mult2651,basisEval265D,basisEval265E,intermediate2665];
          tensor[10] intermediateCons2678#1 = <tensor[10]>[intermediate2666,basisEval265B,intermediate2668,basisEval265B,mult2650,basisEval265B,mult2652,basisEval265D,intermediate266E,mult266A];
          tensor[10] intermediateCons2679#1 = <tensor[10]>[intermediate266F,basisEval265B,basisEval265B,intermediate2671,mult2651,mult2652,basisEval265B,intermediate2676,basisEval265E,mult266A];
          tensor[3,10] intermediateCons267A#1 = <tensor[3,10]>[intermediateCons2677,intermediateCons2678,intermediateCons2679];
          tensor[3,10] basisResult263E#3 = intermediateCons267A;
          tensor[10] projParam26B9#1 = ProjectLast<tensor[3,10],[0]>(basisResult263E);
          real vdot26BA#1 = VDot<10>(femDofs253E,projParam26B9);
          tensor[10] projParam26BB#1 = ProjectLast<tensor[3,10],[1]>(basisResult263E);
          real vdot26BC#1 = VDot<10>(femDofs253E,projParam26BB);
          tensor[10] projParam26BD#1 = ProjectLast<tensor[3,10],[2]>(basisResult263E);
          real vdot26BE#1 = VDot<10>(femDofs253E,projParam26BD);
          tensor[3] compositionl26B8#3 = <tensor[3]>[vdot26BA,vdot26BC,vdot26BE];
          int ilit26C8#1 = 4;
          int mulRes26C9#4 = IMul(intPos24F6,ilit26C8);
          int ilit26CA#1 = 0;
          int addRes26CB#1 = IAdd(mulRes26C9,ilit26CA);
          int idx26CC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CB);
          int ilit26CD#1 = 1;
          int addRes26CE#1 = IAdd(mulRes26C9,ilit26CD);
          int idx26CF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CE);
          int ilit26D0#1 = 2;
          int addRes26D1#1 = IAdd(mulRes26C9,ilit26D0);
          int idx26D2#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D1);
          int ilit26D3#1 = 3;
          int addRes26D4#1 = IAdd(mulRes26C9,ilit26D3);
          int idx26D5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D4);
          int[4] seq26D6#1 = <int[4]>{idx26CC,idx26CF,idx26D2,idx26D5};
          int[4] femIndicies26C7#4 = seq26D6;
          int ilit26E8#5 = 0;
          int ilit26E9#5 = 3;
          int idx26EA#1 = Subscript<int>(femIndicies26C7,ilit26E8);
          int mulRes26EB#3 = IMul(ilit26E9,idx26EA);
          int addRes26EC#1 = IAdd(ilit26E8,mulRes26EB);
          int ilit26ED#5 = 1;
          int addRes26EE#1 = IAdd(ilit26ED,mulRes26EB);
          int ilit26EF#5 = 2;
          int addRes26F0#1 = IAdd(ilit26EF,mulRes26EB);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EC);
          real dof_load26F2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EE);
          real dof_load26F3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F0);
          tensor[3] interCons26F4#1 = <tensor[3]>[dof_load26F1,dof_load26F2,dof_load26F3];
          int idx26F5#1 = Subscript<int>(femIndicies26C7,ilit26ED);
          int mulRes26F6#3 = IMul(ilit26E9,idx26F5);
          int addRes26F7#1 = IAdd(ilit26E8,mulRes26F6);
          int addRes26F8#1 = IAdd(ilit26ED,mulRes26F6);
          int addRes26F9#1 = IAdd(ilit26EF,mulRes26F6);
          real dof_load26FA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F7);
          real dof_load26FB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F8);
          real dof_load26FC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F9);
          tensor[3] interCons26FD#1 = <tensor[3]>[dof_load26FA,dof_load26FB,dof_load26FC];
          int idx26FE#1 = Subscript<int>(femIndicies26C7,ilit26EF);
          int mulRes26FF#3 = IMul(ilit26E9,idx26FE);
          int addRes2700#1 = IAdd(ilit26E8,mulRes26FF);
          int addRes2701#1 = IAdd(ilit26ED,mulRes26FF);
          int addRes2702#1 = IAdd(ilit26EF,mulRes26FF);
          real dof_load2703#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2700);
          real dof_load2704#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2701);
          real dof_load2705#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2702);
          tensor[3] interCons2706#1 = <tensor[3]>[dof_load2703,dof_load2704,dof_load2705];
          int idx2707#1 = Subscript<int>(femIndicies26C7,ilit26E9);
          int mulRes2708#3 = IMul(ilit26E9,idx2707);
          int addRes2709#1 = IAdd(ilit26E8,mulRes2708);
          int addRes270A#1 = IAdd(ilit26ED,mulRes2708);
          int addRes270B#1 = IAdd(ilit26EF,mulRes2708);
          real dof_load270C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2709);
          real dof_load270D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270A);
          real dof_load270E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270B);
          tensor[3] interCons270F#1 = <tensor[3]>[dof_load270C,dof_load270D,dof_load270E];
          tensor[4,3] dofs2710#1 = <tensor[4,3]>[interCons26F4,interCons26FD,interCons2706,interCons270F];
          tensor[4,3] femDofs26E7#48 = dofs2710;
          real varAcc273C#0 = VIndex<3,0>(refPos24F8);
          real varAcc273D#0 = VIndex<3,1>(refPos24F8);
          real varAcc273E#0 = VIndex<3,2>(refPos24F8);
          real coeff273F#1 = -0.1e1;
          real one2740#4 = 0.1e1;
          real prod2741#1 = RMul(one2740,one2740);
          real prod2742#2 = RMul(one2740,prod2741);
          real basisEval2743#3 = RMul(coeff273F,prod2742);
          real basisEval2744#3 = RMul(one2740,prod2742);
          real basisEval2745#6 = 0.e0;
          tensor[4] intermediateCons2746#1 = <tensor[4]>[basisEval2743,basisEval2744,basisEval2745,basisEval2745];
          tensor[4] intermediateCons2747#1 = <tensor[4]>[basisEval2743,basisEval2745,basisEval2744,basisEval2745];
          tensor[4] intermediateCons2748#1 = <tensor[4]>[basisEval2743,basisEval2745,basisEval2745,basisEval2744];
          tensor[3,4] intermediateCons2749#1 = <tensor[3,4]>[intermediateCons2746,intermediateCons2747,intermediateCons2748];
          tensor[3,4] basisResult273B#24 = intermediateCons2749;
          real r275A#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E7);
          real r275B#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult273B);
          real r275C#1 = RMul(r275A,r275B);
          real r275D#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E7);
          real r275E#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult273B);
          real r275F#1 = RMul(r275D,r275E);
          real r2760#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E7);
          real r2761#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult273B);
          real r2762#1 = RMul(r2760,r2761);
          real r2763#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E7);
          real r2764#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult273B);
          real r2765#1 = RMul(r2763,r2764);
          real r2766#1 = RAdd(r275C,r275F);
          real r2767#1 = RAdd(r2766,r2762);
          real r2768#1 = RAdd(r2767,r2765);
          real r2769#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult273B);
          real r276A#1 = RMul(r275A,r2769);
          real r276B#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult273B);
          real r276C#1 = RMul(r275D,r276B);
          real r276D#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult273B);
          real r276E#1 = RMul(r2760,r276D);
          real r276F#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult273B);
          real r2770#1 = RMul(r2763,r276F);
          real r2771#1 = RAdd(r276A,r276C);
          real r2772#1 = RAdd(r2771,r276E);
          real r2773#1 = RAdd(r2772,r2770);
          real r2774#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult273B);
          real r2775#1 = RMul(r275A,r2774);
          real r2776#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult273B);
          real r2777#1 = RMul(r275D,r2776);
          real r2778#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult273B);
          real r2779#1 = RMul(r2760,r2778);
          real r277A#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult273B);
          real r277B#1 = RMul(r2763,r277A);
          real r277C#1 = RAdd(r2775,r2777);
          real r277D#1 = RAdd(r277C,r2779);
          real r277E#1 = RAdd(r277D,r277B);
          tensor[3] tensor277F#1 = <tensor[3]>[r2768,r2773,r277E];
          real r2780#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E7);
          real r2781#1 = RMul(r2780,r275B);
          real r2782#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E7);
          real r2783#1 = RMul(r2782,r275E);
          real r2784#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E7);
          real r2785#1 = RMul(r2784,r2761);
          real r2786#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E7);
          real r2787#1 = RMul(r2786,r2764);
          real r2788#1 = RAdd(r2781,r2783);
          real r2789#1 = RAdd(r2788,r2785);
          real r278A#1 = RAdd(r2789,r2787);
          real r278B#1 = RMul(r2780,r2769);
          real r278C#1 = RMul(r2782,r276B);
          real r278D#1 = RMul(r2784,r276D);
          real r278E#1 = RMul(r2786,r276F);
          real r278F#1 = RAdd(r278B,r278C);
          real r2790#1 = RAdd(r278F,r278D);
          real r2791#1 = RAdd(r2790,r278E);
          real r2792#1 = RMul(r2780,r2774);
          real r2793#1 = RMul(r2782,r2776);
          real r2794#1 = RMul(r2784,r2778);
          real r2795#1 = RMul(r2786,r277A);
          real r2796#1 = RAdd(r2792,r2793);
          real r2797#1 = RAdd(r2796,r2794);
          real r2798#1 = RAdd(r2797,r2795);
          tensor[3] tensor2799#1 = <tensor[3]>[r278A,r2791,r2798];
          real r279A#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E7);
          real r279B#1 = RMul(r279A,r275B);
          real r279C#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E7);
          real r279D#1 = RMul(r279C,r275E);
          real r279E#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E7);
          real r279F#1 = RMul(r279E,r2761);
          real r27A0#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E7);
          real r27A1#1 = RMul(r27A0,r2764);
          real r27A2#1 = RAdd(r279B,r279D);
          real r27A3#1 = RAdd(r27A2,r279F);
          real r27A4#1 = RAdd(r27A3,r27A1);
          real r27A5#1 = RMul(r279A,r2769);
          real r27A6#1 = RMul(r279C,r276B);
          real r27A7#1 = RMul(r279E,r276D);
          real r27A8#1 = RMul(r27A0,r276F);
          real r27A9#1 = RAdd(r27A5,r27A6);
          real r27AA#1 = RAdd(r27A9,r27A7);
          real r27AB#1 = RAdd(r27AA,r27A8);
          real r27AC#1 = RMul(r279A,r2774);
          real r27AD#1 = RMul(r279C,r2776);
          real r27AE#1 = RMul(r279E,r2778);
          real r27AF#1 = RMul(r27A0,r277A);
          real r27B0#1 = RAdd(r27AC,r27AD);
          real r27B1#1 = RAdd(r27B0,r27AE);
          real r27B2#1 = RAdd(r27B1,r27AF);
          tensor[3] tensor27B3#1 = <tensor[3]>[r27A4,r27AB,r27B2];
          tensor[3,3] probe_l_252759#18 = <tensor[3,3]>[tensor277F,tensor2799,tensor27B3];
          real realLit2811#9 = 0.e0;
          real r2812#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_252759);
          real r2813#3 = RMul(realLit2811,r2812);
          real r2814#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_252759);
          real r2815#3 = RMul(realLit2811,r2814);
          real r2816#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_252759);
          real r2817#5 = RMul(realLit2811,r2816);
          real r2818#3 = RAdd(r2813,r2815);
          real r2819#1 = RAdd(r2818,r2817);
          real r281A#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_252759);
          real r281B#3 = RMul(realLit2811,r281A);
          real r281C#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_252759);
          real r281D#3 = RMul(realLit2811,r281C);
          real r281E#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_252759);
          real r281F#5 = RMul(realLit2811,r281E);
          real r2820#3 = RAdd(r281B,r281D);
          real r2821#1 = RAdd(r2820,r281F);
          real r2822#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_252759);
          real r2823#3 = RMul(realLit2811,r2822);
          real r2824#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_252759);
          real r2825#3 = RMul(realLit2811,r2824);
          real r2826#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_252759);
          real r2827#5 = RMul(realLit2811,r2826);
          real r2828#3 = RAdd(r2823,r2825);
          real r2829#1 = RAdd(r2828,r2827);
          tensor[3] tensor282A#3 = <tensor[3]>[r2819,r2821,r2829];
          real realLit282B#9 = -0.1e1;
          real r282C#1 = RMul(realLit282B,r2816);
          real r282D#1 = RAdd(r2818,r282C);
          real r282E#1 = RMul(realLit282B,r281E);
          real r282F#1 = RAdd(r2820,r282E);
          real r2830#1 = RMul(realLit282B,r2826);
          real r2831#1 = RAdd(r2828,r2830);
          tensor[3] tensor2832#1 = <tensor[3]>[r282D,r282F,r2831];
          real realLit2833#9 = 0.1e1;
          real r2834#1 = RMul(realLit2833,r2814);
          real r2835#1 = RAdd(r2813,r2834);
          real r2836#1 = RAdd(r2835,r2817);
          real r2837#1 = RMul(realLit2833,r281C);
          real r2838#1 = RAdd(r281B,r2837);
          real r2839#1 = RAdd(r2838,r281F);
          real r283A#1 = RMul(realLit2833,r2824);
          real r283B#1 = RAdd(r2823,r283A);
          real r283C#1 = RAdd(r283B,r2827);
          tensor[3] tensor283D#1 = <tensor[3]>[r2836,r2839,r283C];
          tensor[3,3] tensor283E#1 = <tensor[3,3]>[tensor282A,tensor2832,tensor283D];
          real r283F#1 = RMul(realLit2833,r2816);
          real r2840#1 = RAdd(r2818,r283F);
          real r2841#1 = RMul(realLit2833,r281E);
          real r2842#1 = RAdd(r2820,r2841);
          real r2843#1 = RMul(realLit2833,r2826);
          real r2844#1 = RAdd(r2828,r2843);
          tensor[3] tensor2845#1 = <tensor[3]>[r2840,r2842,r2844];
          real r2846#1 = RMul(realLit282B,r2812);
          real r2847#1 = RAdd(r2846,r2815);
          real r2848#1 = RAdd(r2847,r2817);
          real r2849#1 = RMul(realLit282B,r281A);
          real r284A#1 = RAdd(r2849,r281D);
          real r284B#1 = RAdd(r284A,r281F);
          real r284C#1 = RMul(realLit282B,r2822);
          real r284D#1 = RAdd(r284C,r2825);
          real r284E#1 = RAdd(r284D,r2827);
          tensor[3] tensor284F#1 = <tensor[3]>[r2848,r284B,r284E];
          tensor[3,3] tensor2850#1 = <tensor[3,3]>[tensor2845,tensor282A,tensor284F];
          real r2851#1 = RMul(realLit282B,r2814);
          real r2852#1 = RAdd(r2813,r2851);
          real r2853#1 = RAdd(r2852,r2817);
          real r2854#1 = RMul(realLit282B,r281C);
          real r2855#1 = RAdd(r281B,r2854);
          real r2856#1 = RAdd(r2855,r281F);
          real r2857#1 = RMul(realLit282B,r2824);
          real r2858#1 = RAdd(r2823,r2857);
          real r2859#1 = RAdd(r2858,r2827);
          tensor[3] tensor285A#1 = <tensor[3]>[r2853,r2856,r2859];
          real r285B#1 = RMul(realLit2833,r2812);
          real r285C#1 = RAdd(r285B,r2815);
          real r285D#1 = RAdd(r285C,r2817);
          real r285E#1 = RMul(realLit2833,r281A);
          real r285F#1 = RAdd(r285E,r281D);
          real r2860#1 = RAdd(r285F,r281F);
          real r2861#1 = RMul(realLit2833,r2822);
          real r2862#1 = RAdd(r2861,r2825);
          real r2863#1 = RAdd(r2862,r2827);
          tensor[3] tensor2864#1 = <tensor[3]>[r285D,r2860,r2863];
          tensor[3,3] tensor2865#1 = <tensor[3,3]>[tensor285A,tensor2864,tensor282A];
          tensor[3,3,3] op1_e3_l_272810#27 = <tensor[3,3,3]>[tensor283E,tensor2850,tensor2865];
          real r28BE#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_252759);
          real r28BF#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_272810);
          real r28C0#1 = RMul(r28BE,r28BF);
          real r28C1#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_252759);
          real r28C2#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_272810);
          real r28C3#1 = RMul(r28C1,r28C2);
          real r28C4#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_252759);
          real r28C5#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_272810);
          real r28C6#1 = RMul(r28C4,r28C5);
          real r28C7#1 = RAdd(r28C0,r28C3);
          real r28C8#1 = RAdd(r28C7,r28C6);
          real r28C9#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_272810);
          real r28CA#1 = RMul(r28BE,r28C9);
          real r28CB#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_272810);
          real r28CC#1 = RMul(r28C1,r28CB);
          real r28CD#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_272810);
          real r28CE#1 = RMul(r28C4,r28CD);
          real r28CF#1 = RAdd(r28CA,r28CC);
          real r28D0#1 = RAdd(r28CF,r28CE);
          real r28D1#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_272810);
          real r28D2#1 = RMul(r28BE,r28D1);
          real r28D3#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_272810);
          real r28D4#1 = RMul(r28C1,r28D3);
          real r28D5#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_272810);
          real r28D6#1 = RMul(r28C4,r28D5);
          real r28D7#1 = RAdd(r28D2,r28D4);
          real r28D8#1 = RAdd(r28D7,r28D6);
          tensor[3] tensor28D9#1 = <tensor[3]>[r28C8,r28D0,r28D8];
          real r28DA#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_272810);
          real r28DB#1 = RMul(r28BE,r28DA);
          real r28DC#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_272810);
          real r28DD#1 = RMul(r28C1,r28DC);
          real r28DE#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_272810);
          real r28DF#1 = RMul(r28C4,r28DE);
          real r28E0#1 = RAdd(r28DB,r28DD);
          real r28E1#1 = RAdd(r28E0,r28DF);
          real r28E2#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_272810);
          real r28E3#1 = RMul(r28BE,r28E2);
          real r28E4#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_272810);
          real r28E5#1 = RMul(r28C1,r28E4);
          real r28E6#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_272810);
          real r28E7#1 = RMul(r28C4,r28E6);
          real r28E8#1 = RAdd(r28E3,r28E5);
          real r28E9#1 = RAdd(r28E8,r28E7);
          real r28EA#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_272810);
          real r28EB#1 = RMul(r28BE,r28EA);
          real r28EC#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_272810);
          real r28ED#1 = RMul(r28C1,r28EC);
          real r28EE#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_272810);
          real r28EF#1 = RMul(r28C4,r28EE);
          real r28F0#1 = RAdd(r28EB,r28ED);
          real r28F1#1 = RAdd(r28F0,r28EF);
          tensor[3] tensor28F2#1 = <tensor[3]>[r28E1,r28E9,r28F1];
          real r28F3#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_272810);
          real r28F4#1 = RMul(r28BE,r28F3);
          real r28F5#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_272810);
          real r28F6#1 = RMul(r28C1,r28F5);
          real r28F7#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_272810);
          real r28F8#1 = RMul(r28C4,r28F7);
          real r28F9#1 = RAdd(r28F4,r28F6);
          real r28FA#1 = RAdd(r28F9,r28F8);
          real r28FB#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_272810);
          real r28FC#1 = RMul(r28BE,r28FB);
          real r28FD#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_272810);
          real r28FE#1 = RMul(r28C1,r28FD);
          real r28FF#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_272810);
          real r2900#1 = RMul(r28C4,r28FF);
          real r2901#1 = RAdd(r28FC,r28FE);
          real r2902#1 = RAdd(r2901,r2900);
          real r2903#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_272810);
          real r2904#1 = RMul(r28BE,r2903);
          real r2905#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_272810);
          real r2906#1 = RMul(r28C1,r2905);
          real r2907#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_272810);
          real r2908#1 = RMul(r28C4,r2907);
          real r2909#1 = RAdd(r2904,r2906);
          real r290A#1 = RAdd(r2909,r2908);
          tensor[3] tensor290B#1 = <tensor[3]>[r28FA,r2902,r290A];
          tensor[3,3] tensor290C#1 = <tensor[3,3]>[tensor28D9,tensor28F2,tensor290B];
          real r290D#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_252759);
          real r290E#1 = RMul(r290D,r28BF);
          real r290F#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_252759);
          real r2910#1 = RMul(r290F,r28C2);
          real r2911#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_252759);
          real r2912#1 = RMul(r2911,r28C5);
          real r2913#1 = RAdd(r290E,r2910);
          real r2914#1 = RAdd(r2913,r2912);
          real r2915#1 = RMul(r290D,r28C9);
          real r2916#1 = RMul(r290F,r28CB);
          real r2917#1 = RMul(r2911,r28CD);
          real r2918#1 = RAdd(r2915,r2916);
          real r2919#1 = RAdd(r2918,r2917);
          real r291A#1 = RMul(r290D,r28D1);
          real r291B#1 = RMul(r290F,r28D3);
          real r291C#1 = RMul(r2911,r28D5);
          real r291D#1 = RAdd(r291A,r291B);
          real r291E#1 = RAdd(r291D,r291C);
          tensor[3] tensor291F#1 = <tensor[3]>[r2914,r2919,r291E];
          real r2920#1 = RMul(r290D,r28DA);
          real r2921#1 = RMul(r290F,r28DC);
          real r2922#1 = RMul(r2911,r28DE);
          real r2923#1 = RAdd(r2920,r2921);
          real r2924#1 = RAdd(r2923,r2922);
          real r2925#1 = RMul(r290D,r28E2);
          real r2926#1 = RMul(r290F,r28E4);
          real r2927#1 = RMul(r2911,r28E6);
          real r2928#1 = RAdd(r2925,r2926);
          real r2929#1 = RAdd(r2928,r2927);
          real r292A#1 = RMul(r290D,r28EA);
          real r292B#1 = RMul(r290F,r28EC);
          real r292C#1 = RMul(r2911,r28EE);
          real r292D#1 = RAdd(r292A,r292B);
          real r292E#1 = RAdd(r292D,r292C);
          tensor[3] tensor292F#1 = <tensor[3]>[r2924,r2929,r292E];
          real r2930#1 = RMul(r290D,r28F3);
          real r2931#1 = RMul(r290F,r28F5);
          real r2932#1 = RMul(r2911,r28F7);
          real r2933#1 = RAdd(r2930,r2931);
          real r2934#1 = RAdd(r2933,r2932);
          real r2935#1 = RMul(r290D,r28FB);
          real r2936#1 = RMul(r290F,r28FD);
          real r2937#1 = RMul(r2911,r28FF);
          real r2938#1 = RAdd(r2935,r2936);
          real r2939#1 = RAdd(r2938,r2937);
          real r293A#1 = RMul(r290D,r2903);
          real r293B#1 = RMul(r290F,r2905);
          real r293C#1 = RMul(r2911,r2907);
          real r293D#1 = RAdd(r293A,r293B);
          real r293E#1 = RAdd(r293D,r293C);
          tensor[3] tensor293F#1 = <tensor[3]>[r2934,r2939,r293E];
          tensor[3,3] tensor2940#1 = <tensor[3,3]>[tensor291F,tensor292F,tensor293F];
          real r2941#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_252759);
          real r2942#1 = RMul(r2941,r28BF);
          real r2943#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_252759);
          real r2944#1 = RMul(r2943,r28C2);
          real r2945#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_252759);
          real r2946#1 = RMul(r2945,r28C5);
          real r2947#1 = RAdd(r2942,r2944);
          real r2948#1 = RAdd(r2947,r2946);
          real r2949#1 = RMul(r2941,r28C9);
          real r294A#1 = RMul(r2943,r28CB);
          real r294B#1 = RMul(r2945,r28CD);
          real r294C#1 = RAdd(r2949,r294A);
          real r294D#1 = RAdd(r294C,r294B);
          real r294E#1 = RMul(r2941,r28D1);
          real r294F#1 = RMul(r2943,r28D3);
          real r2950#1 = RMul(r2945,r28D5);
          real r2951#1 = RAdd(r294E,r294F);
          real r2952#1 = RAdd(r2951,r2950);
          tensor[3] tensor2953#1 = <tensor[3]>[r2948,r294D,r2952];
          real r2954#1 = RMul(r2941,r28DA);
          real r2955#1 = RMul(r2943,r28DC);
          real r2956#1 = RMul(r2945,r28DE);
          real r2957#1 = RAdd(r2954,r2955);
          real r2958#1 = RAdd(r2957,r2956);
          real r2959#1 = RMul(r2941,r28E2);
          real r295A#1 = RMul(r2943,r28E4);
          real r295B#1 = RMul(r2945,r28E6);
          real r295C#1 = RAdd(r2959,r295A);
          real r295D#1 = RAdd(r295C,r295B);
          real r295E#1 = RMul(r2941,r28EA);
          real r295F#1 = RMul(r2943,r28EC);
          real r2960#1 = RMul(r2945,r28EE);
          real r2961#1 = RAdd(r295E,r295F);
          real r2962#1 = RAdd(r2961,r2960);
          tensor[3] tensor2963#1 = <tensor[3]>[r2958,r295D,r2962];
          real r2964#1 = RMul(r2941,r28F3);
          real r2965#1 = RMul(r2943,r28F5);
          real r2966#1 = RMul(r2945,r28F7);
          real r2967#1 = RAdd(r2964,r2965);
          real r2968#1 = RAdd(r2967,r2966);
          real r2969#1 = RMul(r2941,r28FB);
          real r296A#1 = RMul(r2943,r28FD);
          real r296B#1 = RMul(r2945,r28FF);
          real r296C#1 = RAdd(r2969,r296A);
          real r296D#1 = RAdd(r296C,r296B);
          real r296E#1 = RMul(r2941,r2903);
          real r296F#1 = RMul(r2943,r2905);
          real r2970#1 = RMul(r2945,r2907);
          real r2971#1 = RAdd(r296E,r296F);
          real r2972#1 = RAdd(r2971,r2970);
          tensor[3] tensor2973#1 = <tensor[3]>[r2968,r296D,r2972];
          tensor[3,3] tensor2974#1 = <tensor[3,3]>[tensor2953,tensor2963,tensor2973];
          tensor[3,3,3] op1_e3_l_2828BD#27 = <tensor[3,3,3]>[tensor290C,tensor2940,tensor2974];
          real r2A2F#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E7);
          real r2A30#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult273B);
          real r2A31#1 = RMul(r2A2F,r2A30);
          real r2A32#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E7);
          real r2A33#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult273B);
          real r2A34#1 = RMul(r2A32,r2A33);
          real r2A35#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E7);
          real r2A36#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult273B);
          real r2A37#1 = RMul(r2A35,r2A36);
          real r2A38#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E7);
          real r2A39#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult273B);
          real r2A3A#1 = RMul(r2A38,r2A39);
          real r2A3B#1 = RAdd(r2A31,r2A34);
          real r2A3C#1 = RAdd(r2A3B,r2A37);
          real r2A3D#1 = RAdd(r2A3C,r2A3A);
          real r2A3E#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E7);
          real r2A3F#1 = RMul(r2A3E,r2A30);
          real r2A40#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E7);
          real r2A41#1 = RMul(r2A40,r2A33);
          real r2A42#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E7);
          real r2A43#1 = RMul(r2A42,r2A36);
          real r2A44#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E7);
          real r2A45#1 = RMul(r2A44,r2A39);
          real r2A46#1 = RAdd(r2A3F,r2A41);
          real r2A47#1 = RAdd(r2A46,r2A43);
          real r2A48#1 = RAdd(r2A47,r2A45);
          real r2A49#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E7);
          real r2A4A#1 = RMul(r2A49,r2A30);
          real r2A4B#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E7);
          real r2A4C#1 = RMul(r2A4B,r2A33);
          real r2A4D#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E7);
          real r2A4E#1 = RMul(r2A4D,r2A36);
          real r2A4F#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E7);
          real r2A50#1 = RMul(r2A4F,r2A39);
          real r2A51#1 = RAdd(r2A4A,r2A4C);
          real r2A52#1 = RAdd(r2A51,r2A4E);
          real r2A53#1 = RAdd(r2A52,r2A50);
          tensor[3] probe_l_292A2E#1 = <tensor[3]>[r2A3D,r2A48,r2A53];
          real r2A7C#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E7);
          real r2A7D#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult273B);
          real r2A7E#1 = RMul(r2A7C,r2A7D);
          real r2A7F#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E7);
          real r2A80#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult273B);
          real r2A81#1 = RMul(r2A7F,r2A80);
          real r2A82#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E7);
          real r2A83#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult273B);
          real r2A84#1 = RMul(r2A82,r2A83);
          real r2A85#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E7);
          real r2A86#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult273B);
          real r2A87#1 = RMul(r2A85,r2A86);
          real r2A88#1 = RAdd(r2A7E,r2A81);
          real r2A89#1 = RAdd(r2A88,r2A84);
          real r2A8A#1 = RAdd(r2A89,r2A87);
          real r2A8B#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E7);
          real r2A8C#1 = RMul(r2A8B,r2A7D);
          real r2A8D#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E7);
          real r2A8E#1 = RMul(r2A8D,r2A80);
          real r2A8F#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E7);
          real r2A90#1 = RMul(r2A8F,r2A83);
          real r2A91#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E7);
          real r2A92#1 = RMul(r2A91,r2A86);
          real r2A93#1 = RAdd(r2A8C,r2A8E);
          real r2A94#1 = RAdd(r2A93,r2A90);
          real r2A95#1 = RAdd(r2A94,r2A92);
          real r2A96#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E7);
          real r2A97#1 = RMul(r2A96,r2A7D);
          real r2A98#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E7);
          real r2A99#1 = RMul(r2A98,r2A80);
          real r2A9A#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E7);
          real r2A9B#1 = RMul(r2A9A,r2A83);
          real r2A9C#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E7);
          real r2A9D#1 = RMul(r2A9C,r2A86);
          real r2A9E#1 = RAdd(r2A97,r2A99);
          real r2A9F#1 = RAdd(r2A9E,r2A9B);
          real r2AA0#1 = RAdd(r2A9F,r2A9D);
          tensor[3] probe_l_302A7B#3 = <tensor[3]>[r2A8A,r2A95,r2AA0];
          real r2AC9#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs26E7);
          real r2ACA#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult273B);
          real r2ACB#1 = RMul(r2AC9,r2ACA);
          real r2ACC#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs26E7);
          real r2ACD#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult273B);
          real r2ACE#1 = RMul(r2ACC,r2ACD);
          real r2ACF#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs26E7);
          real r2AD0#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult273B);
          real r2AD1#1 = RMul(r2ACF,r2AD0);
          real r2AD2#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs26E7);
          real r2AD3#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult273B);
          real r2AD4#1 = RMul(r2AD2,r2AD3);
          real r2AD5#1 = RAdd(r2ACB,r2ACE);
          real r2AD6#1 = RAdd(r2AD5,r2AD1);
          real r2AD7#1 = RAdd(r2AD6,r2AD4);
          real r2AD8#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs26E7);
          real r2AD9#1 = RMul(r2AD8,r2ACA);
          real r2ADA#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs26E7);
          real r2ADB#1 = RMul(r2ADA,r2ACD);
          real r2ADC#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs26E7);
          real r2ADD#1 = RMul(r2ADC,r2AD0);
          real r2ADE#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs26E7);
          real r2ADF#1 = RMul(r2ADE,r2AD3);
          real r2AE0#1 = RAdd(r2AD9,r2ADB);
          real r2AE1#1 = RAdd(r2AE0,r2ADD);
          real r2AE2#1 = RAdd(r2AE1,r2ADF);
          real r2AE3#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs26E7);
          real r2AE4#1 = RMul(r2AE3,r2ACA);
          real r2AE5#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs26E7);
          real r2AE6#1 = RMul(r2AE5,r2ACD);
          real r2AE7#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs26E7);
          real r2AE8#1 = RMul(r2AE7,r2AD0);
          real r2AE9#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs26E7);
          real r2AEA#1 = RMul(r2AE9,r2AD3);
          real r2AEB#1 = RAdd(r2AE4,r2AE6);
          real r2AEC#1 = RAdd(r2AEB,r2AE8);
          real r2AED#1 = RAdd(r2AEC,r2AEA);
          tensor[3] probe_l_312AC8#3 = <tensor[3]>[r2AD7,r2AE2,r2AED];
          real realLit2B16#3 = 0.e0;
          real r2B17#3 = TensorIndex<tensor[3],[0]>(probe_l_312AC8);
          real r2B18#3 = RMul(realLit2B16,r2B17);
          real r2B19#3 = TensorIndex<tensor[3],[1]>(probe_l_312AC8);
          real r2B1A#3 = RMul(realLit2B16,r2B19);
          real r2B1B#3 = TensorIndex<tensor[3],[2]>(probe_l_312AC8);
          real r2B1C#5 = RMul(realLit2B16,r2B1B);
          real r2B1D#3 = RAdd(r2B18,r2B1A);
          real r2B1E#3 = RAdd(r2B1D,r2B1C);
          real realLit2B1F#3 = 0.1e1;
          real r2B20#1 = RMul(realLit2B1F,r2B1B);
          real r2B21#1 = RAdd(r2B1D,r2B20);
          real realLit2B22#3 = -0.1e1;
          real r2B23#1 = RMul(realLit2B22,r2B19);
          real r2B24#1 = RAdd(r2B18,r2B23);
          real r2B25#1 = RAdd(r2B24,r2B1C);
          tensor[3] tensor2B26#1 = <tensor[3]>[r2B1E,r2B21,r2B25];
          real r2B27#1 = RMul(realLit2B22,r2B1B);
          real r2B28#1 = RAdd(r2B1D,r2B27);
          real r2B29#1 = RMul(realLit2B1F,r2B17);
          real r2B2A#1 = RAdd(r2B29,r2B1A);
          real r2B2B#1 = RAdd(r2B2A,r2B1C);
          tensor[3] tensor2B2C#1 = <tensor[3]>[r2B28,r2B1E,r2B2B];
          real r2B2D#1 = RMul(realLit2B1F,r2B19);
          real r2B2E#1 = RAdd(r2B18,r2B2D);
          real r2B2F#1 = RAdd(r2B2E,r2B1C);
          real r2B30#1 = RMul(realLit2B22,r2B17);
          real r2B31#1 = RAdd(r2B30,r2B1A);
          real r2B32#1 = RAdd(r2B31,r2B1C);
          tensor[3] tensor2B33#1 = <tensor[3]>[r2B2F,r2B32,r2B1E];
          tensor[3,3] op1_e3_l_322B15#3 = <tensor[3,3]>[tensor2B26,tensor2B2C,tensor2B33];
          tensor[3] projParam2B55#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_322B15);
          real vdot2B56#1 = VDot<3>(probe_l_302A7B,projParam2B55);
          tensor[3] projParam2B57#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_322B15);
          real vdot2B58#1 = VDot<3>(probe_l_302A7B,projParam2B57);
          tensor[3] projParam2B59#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_322B15);
          real vdot2B5A#1 = VDot<3>(probe_l_302A7B,projParam2B59);
          tensor[3] op1_e3_l_332B54#1 = <tensor[3]>[vdot2B56,vdot2B58,vdot2B5A];
          real op1_e3_l_342B63#1 = VDot<3>(probe_l_292A2E,op1_e3_l_332B54);
          real realLit2B67#27 = 0.e0;
          real r2B68#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_2828BD);
          real r2B69#2 = RMul(realLit2B67,r2B68);
          real r2B6A#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_2828BD);
          real r2B6B#1 = RMul(realLit2B67,r2B6A);
          real r2B6C#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_2828BD);
          real r2B6D#2 = RMul(realLit2B67,r2B6C);
          real r2B6E#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_2828BD);
          real r2B6F#2 = RMul(realLit2B67,r2B6E);
          real r2B70#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_2828BD);
          real r2B71#3 = RMul(realLit2B67,r2B70);
          real realLit2B72#9 = 0.1e1;
          real r2B73#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_2828BD);
          real r2B74#1 = RMul(realLit2B72,r2B73);
          real r2B75#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_2828BD);
          real r2B76#2 = RMul(realLit2B67,r2B75);
          real realLit2B77#9 = -0.1e1;
          real r2B78#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_2828BD);
          real r2B79#1 = RMul(realLit2B77,r2B78);
          real r2B7A#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_2828BD);
          real r2B7B#3 = RMul(realLit2B67,r2B7A);
          real r2B7C#2 = RAdd(r2B69,r2B6B);
          real r2B7D#1 = RAdd(r2B7C,r2B6D);
          real r2B7E#1 = RAdd(r2B7D,r2B6F);
          real r2B7F#1 = RAdd(r2B7E,r2B71);
          real r2B80#1 = RAdd(r2B7F,r2B74);
          real r2B81#1 = RAdd(r2B80,r2B76);
          real r2B82#1 = RAdd(r2B81,r2B79);
          real r2B83#1 = RAdd(r2B82,r2B7B);
          real r2B84#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_2828BD);
          real r2B85#2 = RMul(realLit2B67,r2B84);
          real r2B86#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_2828BD);
          real r2B87#1 = RMul(realLit2B67,r2B86);
          real r2B88#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_2828BD);
          real r2B89#2 = RMul(realLit2B67,r2B88);
          real r2B8A#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_2828BD);
          real r2B8B#2 = RMul(realLit2B67,r2B8A);
          real r2B8C#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_2828BD);
          real r2B8D#3 = RMul(realLit2B67,r2B8C);
          real r2B8E#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_2828BD);
          real r2B8F#1 = RMul(realLit2B72,r2B8E);
          real r2B90#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_2828BD);
          real r2B91#2 = RMul(realLit2B67,r2B90);
          real r2B92#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_2828BD);
          real r2B93#1 = RMul(realLit2B77,r2B92);
          real r2B94#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_2828BD);
          real r2B95#3 = RMul(realLit2B67,r2B94);
          real r2B96#2 = RAdd(r2B85,r2B87);
          real r2B97#1 = RAdd(r2B96,r2B89);
          real r2B98#1 = RAdd(r2B97,r2B8B);
          real r2B99#1 = RAdd(r2B98,r2B8D);
          real r2B9A#1 = RAdd(r2B99,r2B8F);
          real r2B9B#1 = RAdd(r2B9A,r2B91);
          real r2B9C#1 = RAdd(r2B9B,r2B93);
          real r2B9D#1 = RAdd(r2B9C,r2B95);
          real r2B9E#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_2828BD);
          real r2B9F#2 = RMul(realLit2B67,r2B9E);
          real r2BA0#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_2828BD);
          real r2BA1#1 = RMul(realLit2B67,r2BA0);
          real r2BA2#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_2828BD);
          real r2BA3#2 = RMul(realLit2B67,r2BA2);
          real r2BA4#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_2828BD);
          real r2BA5#2 = RMul(realLit2B67,r2BA4);
          real r2BA6#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_2828BD);
          real r2BA7#3 = RMul(realLit2B67,r2BA6);
          real r2BA8#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_2828BD);
          real r2BA9#1 = RMul(realLit2B72,r2BA8);
          real r2BAA#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_2828BD);
          real r2BAB#2 = RMul(realLit2B67,r2BAA);
          real r2BAC#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_2828BD);
          real r2BAD#1 = RMul(realLit2B77,r2BAC);
          real r2BAE#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_2828BD);
          real r2BAF#3 = RMul(realLit2B67,r2BAE);
          real r2BB0#2 = RAdd(r2B9F,r2BA1);
          real r2BB1#1 = RAdd(r2BB0,r2BA3);
          real r2BB2#1 = RAdd(r2BB1,r2BA5);
          real r2BB3#1 = RAdd(r2BB2,r2BA7);
          real r2BB4#1 = RAdd(r2BB3,r2BA9);
          real r2BB5#1 = RAdd(r2BB4,r2BAB);
          real r2BB6#1 = RAdd(r2BB5,r2BAD);
          real r2BB7#1 = RAdd(r2BB6,r2BAF);
          tensor[3] tensor2BB8#1 = <tensor[3]>[r2B83,r2B9D,r2BB7];
          real r2BB9#1 = RMul(realLit2B77,r2B6C);
          real r2BBA#2 = RMul(realLit2B67,r2B73);
          real r2BBB#1 = RMul(realLit2B72,r2B75);
          real r2BBC#2 = RMul(realLit2B67,r2B78);
          real r2BBD#1 = RAdd(r2B7C,r2BB9);
          real r2BBE#1 = RAdd(r2BBD,r2B6F);
          real r2BBF#1 = RAdd(r2BBE,r2B71);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2BBB);
          real r2BC2#1 = RAdd(r2BC1,r2BBC);
          real r2BC3#1 = RAdd(r2BC2,r2B7B);
          real r2BC4#1 = RMul(realLit2B77,r2B88);
          real r2BC5#2 = RMul(realLit2B67,r2B8E);
          real r2BC6#1 = RMul(realLit2B72,r2B90);
          real r2BC7#2 = RMul(realLit2B67,r2B92);
          real r2BC8#1 = RAdd(r2B96,r2BC4);
          real r2BC9#1 = RAdd(r2BC8,r2B8B);
          real r2BCA#1 = RAdd(r2BC9,r2B8D);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2BC6);
          real r2BCD#1 = RAdd(r2BCC,r2BC7);
          real r2BCE#1 = RAdd(r2BCD,r2B95);
          real r2BCF#1 = RMul(realLit2B77,r2BA2);
          real r2BD0#2 = RMul(realLit2B67,r2BA8);
          real r2BD1#1 = RMul(realLit2B72,r2BAA);
          real r2BD2#2 = RMul(realLit2B67,r2BAC);
          real r2BD3#1 = RAdd(r2BB0,r2BCF);
          real r2BD4#1 = RAdd(r2BD3,r2BA5);
          real r2BD5#1 = RAdd(r2BD4,r2BA7);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BD1);
          real r2BD8#1 = RAdd(r2BD7,r2BD2);
          real r2BD9#1 = RAdd(r2BD8,r2BAF);
          tensor[3] tensor2BDA#1 = <tensor[3]>[r2BC3,r2BCE,r2BD9];
          real r2BDB#1 = RMul(realLit2B72,r2B6A);
          real r2BDC#1 = RMul(realLit2B77,r2B6E);
          real r2BDD#1 = RAdd(r2B69,r2BDB);
          real r2BDE#1 = RAdd(r2BDD,r2B6D);
          real r2BDF#1 = RAdd(r2BDE,r2BDC);
          real r2BE0#1 = RAdd(r2BDF,r2B71);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B76);
          real r2BE3#1 = RAdd(r2BE2,r2BBC);
          real r2BE4#1 = RAdd(r2BE3,r2B7B);
          real r2BE5#1 = RMul(realLit2B72,r2B86);
          real r2BE6#1 = RMul(realLit2B77,r2B8A);
          real r2BE7#1 = RAdd(r2B85,r2BE5);
          real r2BE8#1 = RAdd(r2BE7,r2B89);
          real r2BE9#1 = RAdd(r2BE8,r2BE6);
          real r2BEA#1 = RAdd(r2BE9,r2B8D);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B91);
          real r2BED#1 = RAdd(r2BEC,r2BC7);
          real r2BEE#1 = RAdd(r2BED,r2B95);
          real r2BEF#1 = RMul(realLit2B72,r2BA0);
          real r2BF0#1 = RMul(realLit2B77,r2BA4);
          real r2BF1#1 = RAdd(r2B9F,r2BEF);
          real r2BF2#1 = RAdd(r2BF1,r2BA3);
          real r2BF3#1 = RAdd(r2BF2,r2BF0);
          real r2BF4#1 = RAdd(r2BF3,r2BA7);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAB);
          real r2BF7#1 = RAdd(r2BF6,r2BD2);
          real r2BF8#1 = RAdd(r2BF7,r2BAF);
          tensor[3] tensor2BF9#1 = <tensor[3]>[r2BE4,r2BEE,r2BF8];
          tensor[3,3] op1_e3_l_352B66#9 = <tensor[3,3]>[tensor2BB8,tensor2BDA,tensor2BF9];
          real realLit2C90#1 = 0.2e1;
          real op1_e3_l_362C8F#9 = RMul(realLit2C90,op1_e3_l_342B63);
          real r2C95#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_352B66);
          real r2C96#1 = RDiv(r2C95,op1_e3_l_362C8F);
          real r2C97#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_352B66);
          real r2C98#1 = RDiv(r2C97,op1_e3_l_362C8F);
          real r2C99#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_352B66);
          real r2C9A#1 = RDiv(r2C99,op1_e3_l_362C8F);
          tensor[3] tensor2C9B#1 = <tensor[3]>[r2C96,r2C98,r2C9A];
          real r2C9C#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_352B66);
          real r2C9D#1 = RDiv(r2C9C,op1_e3_l_362C8F);
          real r2C9E#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_352B66);
          real r2C9F#1 = RDiv(r2C9E,op1_e3_l_362C8F);
          real r2CA0#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_352B66);
          real r2CA1#1 = RDiv(r2CA0,op1_e3_l_362C8F);
          tensor[3] tensor2CA2#1 = <tensor[3]>[r2C9D,r2C9F,r2CA1];
          real r2CA3#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_352B66);
          real r2CA4#1 = RDiv(r2CA3,op1_e3_l_362C8F);
          real r2CA5#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_352B66);
          real r2CA6#1 = RDiv(r2CA5,op1_e3_l_362C8F);
          real r2CA7#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_352B66);
          real r2CA8#1 = RDiv(r2CA7,op1_e3_l_362C8F);
          tensor[3] tensor2CA9#1 = <tensor[3]>[r2CA4,r2CA6,r2CA8];
          tensor[3,3] op1_e3_l_372C94#9 = <tensor[3,3]>[tensor2C9B,tensor2CA2,tensor2CA9];
          real r2CC2#3 = TensorIndex<tensor[3],[0]>(compositionl26B8);
          real r2CC3#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_372C94);
          real r2CC4#1 = RMul(r2CC2,r2CC3);
          real r2CC5#3 = TensorIndex<tensor[3],[1]>(compositionl26B8);
          real r2CC6#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_372C94);
          real r2CC7#1 = RMul(r2CC5,r2CC6);
          real r2CC8#3 = TensorIndex<tensor[3],[2]>(compositionl26B8);
          real r2CC9#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_372C94);
          real r2CCA#1 = RMul(r2CC8,r2CC9);
          real r2CCB#1 = RAdd(r2CC4,r2CC7);
          real r2CCC#1 = RAdd(r2CCB,r2CCA);
          real r2CCD#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_372C94);
          real r2CCE#1 = RMul(r2CC2,r2CCD);
          real r2CCF#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_372C94);
          real r2CD0#1 = RMul(r2CC5,r2CCF);
          real r2CD1#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_372C94);
          real r2CD2#1 = RMul(r2CC8,r2CD1);
          real r2CD3#1 = RAdd(r2CCE,r2CD0);
          real r2CD4#1 = RAdd(r2CD3,r2CD2);
          real r2CD5#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_372C94);
          real r2CD6#1 = RMul(r2CC2,r2CD5);
          real r2CD7#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_372C94);
          real r2CD8#1 = RMul(r2CC5,r2CD7);
          real r2CD9#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_372C94);
          real r2CDA#1 = RMul(r2CC8,r2CD9);
          real r2CDB#1 = RAdd(r2CD6,r2CD8);
          real r2CDC#1 = RAdd(r2CDB,r2CDA);
          tensor[3] op1_e3_l_382CC1#1 = <tensor[3]>[r2CCC,r2CD4,r2CDC];
          tensor[3] op1_e3_l_542CFA#3 = VNeg<3>(op1_e3_l_382CC1);
          real op1_e3_l_562CFD#1 = VDot<3>(op1_e3_l_542CFA,op1_e3_l_542CFA);
          real op1_e3_l_572D00#2 = Sqrt(op1_e3_l_562CFD);
          real op1_e3_l_582D03#1 = Abs<real>(op1_e3_l_23263B);
          real op1_e3_l_592D06#1 = RMul(thick1D3F,op1_e3_l_572D00);
          real op1_e3_l_602D09#1 = RDiv(op1_e3_l_582D03,op1_e3_l_592D06);
          real op1_e3_l_612D0C#1 = RSub(_t1D7D,op1_e3_l_602D09);
          real op1_e3_l_622D0F#2 = RMul(_t24F2,op1_e3_l_612D0C);
          real op1_e3_l_632D12#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real a2D15#1 = RMul(_t1D7D,op1_e3_l_632D12);
          bool _t2D18#1 = GT<real>(a2D15,_t1D76);
          if _t2D18 then goto ASSIGN2D1D else goto JOIN2DEC
        ASSIGN2D1D:  preds = [COND2D1A]
          real op1_e3_l_642D1B#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real op1_e3_l_652D1E#1 = RMul(_t1D7D,op1_e3_l_642D1B);
          real _t2D21#1 = RSub(_t1D7D,op1_e3_l_652D1E);
          real op1_e3_l_32D24#1 = VDot<3>(rayVec1D59,rayVec1D59);
          real op1_e3_l_42D27#1 = Sqrt(op1_e3_l_32D24);
          real op1_e3_l_52D2A#1 = RMul(rayStep1D49,op1_e3_l_42D27);
          real _t2D2D#1 = RDiv(op1_e3_l_52D2A,refStep1D47);
          real _t2D30#1 = MathFn<pow>(_t2D21,_t2D2D);
          real _t2D32#2 = 0.11e1;
          real _t2D34#1 = 0.7e0;
          real realLit2D37#1 = 0.1e1;
          real op1_e3_l_672D36#1 = RDiv(realLit2D37,op1_e3_l_572D00);
          real op1_e3_l_682D3B#1 = VDot<3>(op1_e3_l_542CFA,light1D55);
          real _t2D3E#1 = RMul(op1_e3_l_672D36,op1_e3_l_682D3B);
          real shade2D41#1 = Max<real>(_t1D76,_t2D3E);
          real _t2D43#1 = compositionl2638;
          real op1_e3_l_152D45#1 = RSub(rayN1D57,camNear1D43);
          real op1_e3_l_162D48#1 = RSub(camFar1D45,camNear1D43);
          real op1_e3_l_172D4B#1 = RDiv(op1_e3_l_152D45,op1_e3_l_162D48);
          real op1_e3_l_182D4E#1 = RSub(_t2D34,_t2D32);
          real op1_e3_l_192D51#1 = RMul(op1_e3_l_172D4B,op1_e3_l_182D4E);
          real op1_e3_l_202D54#1 = RMul(phongKd1D4D,shade2D41);
          real Mtransform2D57#1 = Transform<IMAGE1D<double[3]>>(I1D2F);
          real MxPos2D59#1 = RMul(Mtransform2D57,_t2D43);
          real Ttranslate2D5C#1 = Translate<IMAGE1D<double[3]>>(I1D2F);
          real imgPos2D5E#2 = RAdd(MxPos2D59,Ttranslate2D5C);
          real nd2D61#2 = Floor<1>(imgPos2D5E);
          real f2D63#2 = RSub(imgPos2D5E,nd2D61);
          int n2D66#1 = RealToInt<1>(nd2D61);
          int idx2D68#5 = n2D66;
          bool isInside2D6A#1 = IndexInside<IMAGE1D<double[3]>,2>(idx2D68,I1D2F);
          if isInside2D6A then goto ASSIGN2D84 else goto ASSIGN2E32
        ASSIGN2D84:  preds = [COND2D6C]
          int ilit2D6E#1 = 0;
          int addRes2D6F#1 = IAdd(idx2D68,ilit2D6E);
          int stride2D70#2 = 3;
          int offp2D71#3 = IMul(stride2D70,addRes2D6F);
          real v0_2D72#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D71);
          int ilit2D73#3 = 1;
          int addRes2D74#1 = IAdd(idx2D68,ilit2D73);
          int offp2D75#3 = IMul(stride2D70,addRes2D74);
          real v1_2D76#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D75);
          tensor[2] v_2D77#1 = <tensor[2]>[v0_2D72,v1_2D76];
          int offp2D78#1 = IAdd(offp2D71,ilit2D73);
          real v0_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D78);
          int offp2D7A#1 = IAdd(offp2D75,ilit2D73);
          real v1_2D7B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7A);
          tensor[2] v_2D7C#1 = <tensor[2]>[v0_2D79,v1_2D7B];
          int offset2D7D#2 = 2;
          int offp2D7E#1 = IAdd(offp2D71,offset2D7D);
          real v0_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7E);
          int offp2D80#1 = IAdd(offp2D75,offset2D7D);
          real v1_2D81#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D80);
          tensor[2] v_2D82#1 = <tensor[2]>[v0_2D7F,v1_2D81];
          tensor[3,2] voxels2D83#1 = <tensor[3,2]>[v_2D77,v_2D7C,v_2D82];
          tensor[3,2] ldvox2D6D#1 = voxels2D83;
          goto JOIN2D9D
        JOIN2D9D:  preds = [ASSIGN2D9A,ASSIGN2E4A]
          tensor[3,2] ldvox2D9B#3 = phi(ldvox2D6D,ldvox2D9C)
          real rlit2D9F#1 = 0.1e1;
          real idx2DA0#1 = RSub(f2D63,rlit2D9F);
          tensor[2] kernX_2D9E#1 = <tensor[2]>[f2D63,idx2DA0];
          real _f2DA9#1 = 0.1e1;
          real _f2DAA#1 = 0.1e1;
          tensor[2] a02DA5#1 = <tensor[2]>[_f2DA9,_f2DAA];
          real _f2DA7#1 = -0.1e1;
          real _f2DA8#1 = 0.1e1;
          tensor[2] a12DA6#1 = <tensor[2]>[_f2DA7,_f2DA8];
          tensor[2] prod12DAB#1 = VMul<2>(kernX_2D9E,a12DA6);
          tensor[2] kevalX_d0_2DA4#3 = VAdd<2>(a02DA5,prod12DAB);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D9B);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA4);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D9B);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA4);
          tensor[2] projIx2DB9#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D9B);
          real vdot2DBA#1 = VDot<2>(projIx2DB9,kevalX_d0_2DA4);
          tensor[3] probe_l_212DB4#3 = <tensor[3]>[vdot2DB6,vdot2DB8,vdot2DBA];
          real op1_e3_l_222DC3#2 = RSub(_t1D7D,_t2D30);
          real op1_e3_l_232DC6#1 = RAdd(_t2D32,op1_e3_l_192D51);
          real op1_e3_l_242DC9#1 = RAdd(phongKa1D4B,op1_e3_l_202D54);
          real r2DCD#1 = TensorIndex<tensor[3],[0]>(probe_l_212DB4);
          real r2DCE#1 = RMul(transp1D5B,op1_e3_l_222DC3);
          real r2DCF#1 = RMul(r2DCE,op1_e3_l_232DC6);
          real r2DD0#3 = RMul(r2DCF,op1_e3_l_242DC9);
          real r2DD1#1 = RMul(r2DD0,r2DCD);
          real r2DD2#1 = TensorIndex<tensor[3],[1]>(probe_l_212DB4);
          real r2DD3#1 = RMul(r2DD0,r2DD2);
          real r2DD4#1 = TensorIndex<tensor[3],[2]>(probe_l_212DB4);
          real r2DD5#1 = RMul(r2DD0,r2DD4);
          tensor[3] op1_e3_l_252DCC#1 = <tensor[3]>[r2DD1,r2DD3,r2DD5];
          tensor[3] rgb2DE1#1 = VAdd<3>(rgb1D5D,op1_e3_l_252DCC);
          real op1_e3_l_52DE4#1 = RSub(_t1D7D,op1_e3_l_222DC3);
          real transp2DE7#1 = RMul(transp1D5B,op1_e3_l_52DE4);
          goto JOIN2DEC
        JOIN2DEC:  preds = [ASSIGN2DE9,COND2D1A]
          tensor[3] rgb2DEA#1 = phi(rgb2DE1,rgb1D5D)
          real transp2DEB#1 = phi(transp2DE7,transp1D5B)
          goto JOIN2DEF
        JOIN2DEF:  preds = [JOIN2DEC,COND24F1]
          tensor[3] rgb2DED#1 = phi(rgb2DEA,rgb1D5D)
          real transp2DEE#1 = phi(transp2DEB,transp1D5B)
          goto JOIN2DF2
        JOIN2DF2:  preds = [JOIN2DEF,COND1D91]
          tensor[3] rgb2DF0#1 = phi(rgb2DED,rgb1D5D)
          real transp2DF1#1 = phi(transp2DEE,transp1D5B)
          goto JOIN2DF5
        JOIN2DF5:  preds = [JOIN2DF2,COND1D8E]
          tensor[3] rgb2DF3#1 = phi(rgb2DF0,rgb1D5D)
          real transp2DF4#1 = phi(transp2DF1,transp1D5B)
          goto JOIN2DF8
        JOIN2DF8:  preds = [JOIN2DF5,COND1D89]
          tensor[3] rgb2DF6#1 = phi(rgb2DF3,rgb1D5D)
          real transp2DF7#1 = phi(transp2DF4,transp1D5B)
          goto JOIN2DFB
        JOIN2DFB:  preds = [JOIN2DF8,COND1D86]
          tensor[3] rgb2DF9#1 = phi(rgb2DF6,rgb1D5D)
          real transp2DFA#1 = phi(transp2DF7,transp1D5B)
          goto JOIN2DFE
        JOIN2DFE:  preds = [JOIN2DFB,COND1D81]
          tensor[3] rgb2DFC#1 = phi(rgb2DF9,rgb1D5D)
          real transp2DFD#1 = phi(transp2DFA,transp1D5B)
          goto JOIN2E01
        JOIN2E01:  preds = [JOIN2DFE,COND1D7C]
          tensor[3] rgb2DFF#3 = phi(rgb2DFC,rgb1D5D)
          real transp2E00#2 = phi(transp2DFD,transp1D5B)
          real _t2E02#1 = 0.1e-1;
          bool _t2E04#1 = LT<real>(transp2E00,_t2E02);
          if _t2E04 then goto SAVE2E07 else goto JOIN2E0B
        SAVE2E07:  preds = [COND2E06]
          self.transp = _t1D76;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E0B
        JOIN2E0B:  preds = [*STABILIZE2E09,COND2E06]
          real transp2E0A#2 = phi(transp2E00)
          bool _t2E0C#1 = GT<real>(rayN1D57,camFar1D45);
          if _t2E0C then goto SAVE2E0F else goto JOIN2E12
        SAVE2E0F:  preds = [COND2E0E]
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E12
        JOIN2E12:  preds = [*STABILIZE2E11,COND2E0E]
          real rayN2E13#1 = RAdd(rayN1D57,rayStep1D49);
          self.rayN = rayN2E13;
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          active
        ASSIGN2E32:  preds = [COND2D6C]
          int ilit2E1A#1 = 0;
          int addRes2E1B#1 = IAdd(idx2D68,ilit2E1A);
          int ix2E1C#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E1B);
          int stride2E1D#2 = 3;
          int offp2E1E#3 = IMul(stride2E1D,ix2E1C);
          real v0_2E1F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E1E);
          int ilit2E20#3 = 1;
          int addRes2E21#1 = IAdd(idx2D68,ilit2E20);
          int ix2E22#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E21);
          int offp2E23#3 = IMul(stride2E1D,ix2E22);
          real v1_2E24#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E23);
          tensor[2] v_2E25#1 = <tensor[2]>[v0_2E1F,v1_2E24];
          int offp2E26#1 = IAdd(offp2E1E,ilit2E20);
          real v0_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E26);
          int offp2E28#1 = IAdd(offp2E23,ilit2E20);
          real v1_2E29#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E28);
          tensor[2] v_2E2A#1 = <tensor[2]>[v0_2E27,v1_2E29];
          int offset2E2B#2 = 2;
          int offp2E2C#1 = IAdd(offp2E1E,offset2E2B);
          real v0_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2C);
          int offp2E2E#1 = IAdd(offp2E23,offset2E2B);
          real v1_2E2F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2E);
          tensor[2] v_2E30#1 = <tensor[2]>[v0_2E2D,v1_2E2F];
          tensor[3,2] voxels2E31#1 = <tensor[3,2]>[v_2E25,v_2E2A,v_2E30];
          tensor[3,2] ldvox2D9C#1 = voxels2E31;
          goto JOIN2D9D
        ASSIGN2E4B:  preds = [COND1D66]
          bool _t1D6A#1 = NEQ<int>(vi1D61,sv1D53);
          goto JOIN1D6B
    end update
    method stabilize
        ENTRY2E4C:  preds = []
          bool debug2E4D#1 = globals.debug1AC7;
          int su2E4F#1 = globals.su1AC8;
          int sv2E51#1 = globals.sv1AC9;
          real transp2E53#1 = self.transp;
          tensor[3] rgb2E55#3 = self.rgb;
          tensor[4] rgba2E57#1 = self.rgba;
          int ui2E59#1 = self.ui;
          int vi2E5B#1 = self.vi;
          real _t2E5D#1 = 0.1e1;
          real a2E5F#6 = RSub(_t2E5D,transp2E53);
          real _t2E62#1 = 0.e0;
          bool _t2E64#1 = GT<real>(a2E5F,_t2E62);
          if _t2E64 then goto ASSIGN2E68 else goto JOIN2E79
        ASSIGN2E68:  preds = [COND2E66]
          real _t2E67#1 = VIndex<3,0>(rgb2E55);
          real _t2E69#1 = RDiv(_t2E67,a2E5F);
          real _t2E6C#1 = VIndex<3,1>(rgb2E55);
          real _t2E6E#1 = RDiv(_t2E6C,a2E5F);
          real _t2E71#1 = VIndex<3,2>(rgb2E55);
          real _t2E73#1 = RDiv(_t2E71,a2E5F);
          tensor[4] rgba2E76#1 = <tensor[4]>[_t2E69,_t2E6E,_t2E73,a2E5F];
          goto JOIN2E79
        JOIN2E79:  preds = [ASSIGN2E77,COND2E66]
          tensor[4] rgba2E78#2 = phi(rgba2E76,rgba2E57)
          bool _t2E7A#1 = EQ<int>(ui2E59,su2E4F);
          if _t2E7A then goto ASSIGN2E7E else goto JOIN2E84
        ASSIGN2E7E:  preds = [COND2E7C]
          bool _t2E7D#1 = EQ<int>(vi2E5B,sv2E51);
          if _t2E7D then goto COND2E80 else goto JOIN2E83
        COND2E80:  preds = [COND2E7F]
          if debug2E4D then goto MASSIGN2E81 else goto JOIN2E82
        MASSIGN2E81:  preds = [COND2E80]
          Print<[real,tensor[4]]>(a2E5F,rgba2E78);
          goto JOIN2E82
        JOIN2E82:  preds = [MASSIGN2E81,COND2E80]
          goto JOIN2E83
        JOIN2E83:  preds = [JOIN2E82,COND2E7F]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2E83,COND2E7C]
          self.rgba = rgba2E78;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E87:  preds = []
      int iresU2E88#1 = globals.iresU1ABE;
      int iresV2E8A#1 = globals.iresV1ABF;
      int _t2E8C#2 = 0;
      int _t2E8E#2 = 1;
      int _t2E90#1 = ISub(iresV2E8A,_t2E8E);
      int[] _t2E92#1 = Range(_t2E8C,_t2E90);
    FOREACH2E95:  preds = [ASSIGN2E93,NEXT2E9E]
      foreach (vi2E94 in _t2E92) on exit goto RETURN2E9F
      int _t2E96#1 = ISub(iresU2E88,_t2E8E);
      int[] _t2E98#1 = Range(_t2E8C,_t2E96);
    FOREACH2E9B:  preds = [ASSIGN2E99,NEXT2E9D]
      foreach (ui2E9A in _t2E98) on exit goto NEXT2E9E
      new raycast(ui2E9A,vi2E94);
      goto FOREACH2E9B
    NEXT2E9E:  preds = [FOREACH2E9B]
      goto FOREACH2E95
    RETURN2E9F:  preds = [FOREACH2E95]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AB5 (a) = <no-default>
  input 0b042F_intermedateGlobal1AB6 (b) = <no-default>
  input 0c0431_intermedateGlobal1AB7 (c) = <no-default>
  input isoval1AB8 (isoval) = <default>
  input thick1AB9 (thick) = <default>
  input camEye1ABA (camEye) = <default>
  input camAt1ABB (camAt) = <default>
  input camUp1ABC (camUp) = <default>
  input camFOV1ABD (camFOV) = <default>
  input iresU1ABE (iresU) = <default>
  input iresV1ABF (iresV) = <default>
  input camNear1AC0 (camNear) = <default>
  input camFar1AC1 (camFar) = <default>
  input refStep1AC2 (refStep) = <default>
  input rayStep1AC3 (rayStep) = <default>
  input lightVsp1AC4 (lightVsp) = <default>
  input phongKa1AC5 (phongKa) = <default>
  input phongKd1AC6 (phongKd) = <default>
  input debug1AC7 (debug) = <default>
  input su1AC8 (su) = <default>
  input sv1AC9 (sv) = <default>
  global real camDist1ACA
  global tensor[3] camN1ACB
  global tensor[3] camU1ACC
  global tensor[3] camV1ACD
  global real camVmax1ACE
  global real camUmax1ACF
  global tensor[3] light1AD0
  global femData:Mesh _t1AD1
  global femData:Space _tX1AD2
  global femData:FemFunc c1AD3
  global image(IMAGE1D<double[3]>) I1AD6
## functions
  function femData:MeshPos findPos1D93 (femData:Mesh mesh1D94#21, tensor[3] pos1D95#3) {
    ENTRY1D96:  preds = []
      real _t1D97#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1D99#1 = <tensor[3]>[_t1D97,_t1D97,_t1D97];
      int newtonInt1D9B#3 = 0;
      int cellInt1D9D#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1D94);
      int _t1D9F#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1D94);
      int _t1DA1#3 = 1;
      int numCell1DA3#2 = ISub(_t1D9F,_t1DA1);
      int _t1DA5#2 = 16;
      int _t1DA7#1 = IMul(_t1DA5,numCell1DA3);
      int[] _t1DA9#1 = Range(newtonInt1D9B,_t1DA7);
    FOREACH1DAC:  preds = [ASSIGN1DAA,NEXT24E9]
      foreach (itter1DAB in _t1DA9) on exit goto ASSIGN24EC
        int cellInt1DAE#5 = phi(cellInt1D9D,cellInt24E6)
        int newtonInt24D8#1 = phi(newtonInt1D9B,newtonInt24E7)
        tensor[3] xn237C#4 = phi(xn1D99,xn2440)
      int ilit1DAF#1 = 4;
      int mulRes1DB0#4 = IMul(cellInt1DAE,ilit1DAF);
      int addRes1DB2#1 = mulRes1DB0;
      int idx1DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB2);
      int ilit1DB4#1 = 1;
      int addRes1DB5#1 = IAdd(mulRes1DB0,ilit1DB4);
      int idx1DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB5);
      int ilit1DB7#1 = 2;
      int addRes1DB8#1 = IAdd(mulRes1DB0,ilit1DB7);
      int idx1DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB8);
      int ilit1DBA#1 = 3;
      int addRes1DBB#1 = IAdd(mulRes1DB0,ilit1DBA);
      int idx1DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DBB);
      int ilit1DD0#4 = 3;
      int idx1DD1#1 = idx1DB3;
      int mulRes1DD2#3 = IMul(ilit1DD0,idx1DD1);
      int addRes1DD3#1 = mulRes1DD2;
      int ilit1DD4#4 = 1;
      int addRes1DD5#1 = IAdd(ilit1DD4,mulRes1DD2);
      int ilit1DD6#4 = 2;
      int addRes1DD7#1 = IAdd(ilit1DD6,mulRes1DD2);
      real dof_load1DD8#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD3);
      real dof_load1DD9#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD5);
      real dof_load1DDA#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD7);
      int idx1DDC#1 = idx1DB6;
      int mulRes1DDD#3 = IMul(ilit1DD0,idx1DDC);
      int addRes1DDE#1 = mulRes1DDD;
      int addRes1DDF#1 = IAdd(ilit1DD4,mulRes1DDD);
      int addRes1DE0#1 = IAdd(ilit1DD6,mulRes1DDD);
      real dof_load1DE1#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDE);
      real dof_load1DE2#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDF);
      real dof_load1DE3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE0);
      int idx1DE5#1 = idx1DB9;
      int mulRes1DE6#3 = IMul(ilit1DD0,idx1DE5);
      int addRes1DE7#1 = mulRes1DE6;
      int addRes1DE8#1 = IAdd(ilit1DD4,mulRes1DE6);
      int addRes1DE9#1 = IAdd(ilit1DD6,mulRes1DE6);
      real dof_load1DEA#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE7);
      real dof_load1DEB#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE8);
      real dof_load1DEC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE9);
      int idx1DEE#1 = idx1DBC;
      int mulRes1DEF#3 = IMul(ilit1DD0,idx1DEE);
      int addRes1DF0#1 = mulRes1DEF;
      int addRes1DF1#1 = IAdd(ilit1DD4,mulRes1DEF);
      int addRes1DF2#1 = IAdd(ilit1DD6,mulRes1DEF);
      real dof_load1DF3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF0);
      real dof_load1DF4#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF1);
      real dof_load1DF5#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF2);
      real coeff1E26#1 = -0.1e1;
      real one1E27#4 = 0.1e1;
      real prod1E28#1 = RMul(one1E27,one1E27);
      real prod1E29#2 = RMul(one1E27,prod1E28);
      real basisEval1E2A#6 = RMul(coeff1E26,prod1E29);
      real basisEval1E2B#6 = RMul(one1E27,prod1E29);
      real basisEval1E2C#12 = 0.e0;
      real r1E41#3 = dof_load1DD8;
      real r1E42#3 = basisEval1E2A;
      real r1E43#1 = RMul(r1E41,r1E42);
      real r1E44#3 = dof_load1DE1;
      real r1E45#3 = basisEval1E2B;
      real r1E46#1 = RMul(r1E44,r1E45);
      real r1E47#3 = dof_load1DEA;
      real r1E48#3 = basisEval1E2C;
      real r1E49#1 = RMul(r1E47,r1E48);
      real r1E4A#3 = dof_load1DF3;
      real r1E4B#3 = basisEval1E2C;
      real r1E4C#1 = RMul(r1E4A,r1E4B);
      real r1E4D#1 = RAdd(r1E43,r1E46);
      real r1E4E#1 = RAdd(r1E4D,r1E49);
      real r1E4F#2 = RAdd(r1E4E,r1E4C);
      real r1E50#3 = basisEval1E2A;
      real r1E51#1 = RMul(r1E41,r1E50);
      real r1E52#3 = basisEval1E2C;
      real r1E53#1 = RMul(r1E44,r1E52);
      real r1E54#3 = basisEval1E2B;
      real r1E55#1 = RMul(r1E47,r1E54);
      real r1E56#3 = basisEval1E2C;
      real r1E57#1 = RMul(r1E4A,r1E56);
      real r1E58#1 = RAdd(r1E51,r1E53);
      real r1E59#1 = RAdd(r1E58,r1E55);
      real r1E5A#2 = RAdd(r1E59,r1E57);
      real r1E5B#3 = basisEval1E2A;
      real r1E5C#1 = RMul(r1E41,r1E5B);
      real r1E5D#3 = basisEval1E2C;
      real r1E5E#1 = RMul(r1E44,r1E5D);
      real r1E5F#3 = basisEval1E2C;
      real r1E60#1 = RMul(r1E47,r1E5F);
      real r1E61#3 = basisEval1E2B;
      real r1E62#1 = RMul(r1E4A,r1E61);
      real r1E63#1 = RAdd(r1E5C,r1E5E);
      real r1E64#1 = RAdd(r1E63,r1E60);
      real r1E65#2 = RAdd(r1E64,r1E62);
      real r1E67#3 = dof_load1DD9;
      real r1E68#1 = RMul(r1E67,r1E42);
      real r1E69#3 = dof_load1DE2;
      real r1E6A#1 = RMul(r1E69,r1E45);
      real r1E6B#3 = dof_load1DEB;
      real r1E6C#1 = RMul(r1E6B,r1E48);
      real r1E6D#3 = dof_load1DF4;
      real r1E6E#1 = RMul(r1E6D,r1E4B);
      real r1E6F#1 = RAdd(r1E68,r1E6A);
      real r1E70#1 = RAdd(r1E6F,r1E6C);
      real r1E71#2 = RAdd(r1E70,r1E6E);
      real r1E72#1 = RMul(r1E67,r1E50);
      real r1E73#1 = RMul(r1E69,r1E52);
      real r1E74#1 = RMul(r1E6B,r1E54);
      real r1E75#1 = RMul(r1E6D,r1E56);
      real r1E76#1 = RAdd(r1E72,r1E73);
      real r1E77#1 = RAdd(r1E76,r1E74);
      real r1E78#2 = RAdd(r1E77,r1E75);
      real r1E79#1 = RMul(r1E67,r1E5B);
      real r1E7A#1 = RMul(r1E69,r1E5D);
      real r1E7B#1 = RMul(r1E6B,r1E5F);
      real r1E7C#1 = RMul(r1E6D,r1E61);
      real r1E7D#1 = RAdd(r1E79,r1E7A);
      real r1E7E#1 = RAdd(r1E7D,r1E7B);
      real r1E7F#2 = RAdd(r1E7E,r1E7C);
      real r1E81#3 = dof_load1DDA;
      real r1E82#1 = RMul(r1E81,r1E42);
      real r1E83#3 = dof_load1DE3;
      real r1E84#1 = RMul(r1E83,r1E45);
      real r1E85#3 = dof_load1DEC;
      real r1E86#1 = RMul(r1E85,r1E48);
      real r1E87#3 = dof_load1DF5;
      real r1E88#1 = RMul(r1E87,r1E4B);
      real r1E89#1 = RAdd(r1E82,r1E84);
      real r1E8A#1 = RAdd(r1E89,r1E86);
      real r1E8B#2 = RAdd(r1E8A,r1E88);
      real r1E8C#1 = RMul(r1E81,r1E50);
      real r1E8D#1 = RMul(r1E83,r1E52);
      real r1E8E#1 = RMul(r1E85,r1E54);
      real r1E8F#1 = RMul(r1E87,r1E56);
      real r1E90#1 = RAdd(r1E8C,r1E8D);
      real r1E91#1 = RAdd(r1E90,r1E8E);
      real r1E92#2 = RAdd(r1E91,r1E8F);
      real r1E93#1 = RMul(r1E81,r1E5B);
      real r1E94#1 = RMul(r1E83,r1E5D);
      real r1E95#1 = RMul(r1E85,r1E5F);
      real r1E96#1 = RMul(r1E87,r1E61);
      real r1E97#1 = RAdd(r1E93,r1E94);
      real r1E98#1 = RAdd(r1E97,r1E95);
      real r1E99#2 = RAdd(r1E98,r1E96);
      real realLit1EF8#9 = 0.e0;
      real r1EF9#3 = r1E4F;
      real r1EFA#3 = RMul(realLit1EF8,r1EF9);
      real r1EFB#3 = r1E71;
      real r1EFC#3 = RMul(realLit1EF8,r1EFB);
      real r1EFD#3 = r1E8B;
      real r1EFE#5 = RMul(realLit1EF8,r1EFD);
      real r1EFF#3 = RAdd(r1EFA,r1EFC);
      real r1F00#3 = RAdd(r1EFF,r1EFE);
      real r1F01#3 = r1E5A;
      real r1F02#3 = RMul(realLit1EF8,r1F01);
      real r1F03#3 = r1E78;
      real r1F04#3 = RMul(realLit1EF8,r1F03);
      real r1F05#3 = r1E92;
      real r1F06#5 = RMul(realLit1EF8,r1F05);
      real r1F07#3 = RAdd(r1F02,r1F04);
      real r1F08#3 = RAdd(r1F07,r1F06);
      real r1F09#3 = r1E65;
      real r1F0A#3 = RMul(realLit1EF8,r1F09);
      real r1F0B#3 = r1E7F;
      real r1F0C#3 = RMul(realLit1EF8,r1F0B);
      real r1F0D#3 = r1E99;
      real r1F0E#5 = RMul(realLit1EF8,r1F0D);
      real r1F0F#3 = RAdd(r1F0A,r1F0C);
      real r1F10#3 = RAdd(r1F0F,r1F0E);
      real realLit1F12#9 = -0.1e1;
      real r1F13#1 = RMul(realLit1F12,r1EFD);
      real r1F14#1 = RAdd(r1EFF,r1F13);
      real r1F15#1 = RMul(realLit1F12,r1F05);
      real r1F16#1 = RAdd(r1F07,r1F15);
      real r1F17#1 = RMul(realLit1F12,r1F0D);
      real r1F18#1 = RAdd(r1F0F,r1F17);
      real realLit1F1A#9 = 0.1e1;
      real r1F1B#1 = RMul(realLit1F1A,r1EFB);
      real r1F1C#1 = RAdd(r1EFA,r1F1B);
      real r1F1D#1 = RAdd(r1F1C,r1EFE);
      real r1F1E#1 = RMul(realLit1F1A,r1F03);
      real r1F1F#1 = RAdd(r1F02,r1F1E);
      real r1F20#1 = RAdd(r1F1F,r1F06);
      real r1F21#1 = RMul(realLit1F1A,r1F0B);
      real r1F22#1 = RAdd(r1F0A,r1F21);
      real r1F23#1 = RAdd(r1F22,r1F0E);
      real r1F26#1 = RMul(realLit1F1A,r1EFD);
      real r1F27#1 = RAdd(r1EFF,r1F26);
      real r1F28#1 = RMul(realLit1F1A,r1F05);
      real r1F29#1 = RAdd(r1F07,r1F28);
      real r1F2A#1 = RMul(realLit1F1A,r1F0D);
      real r1F2B#1 = RAdd(r1F0F,r1F2A);
      real r1F2D#1 = RMul(realLit1F12,r1EF9);
      real r1F2E#1 = RAdd(r1F2D,r1EFC);
      real r1F2F#1 = RAdd(r1F2E,r1EFE);
      real r1F30#1 = RMul(realLit1F12,r1F01);
      real r1F31#1 = RAdd(r1F30,r1F04);
      real r1F32#1 = RAdd(r1F31,r1F06);
      real r1F33#1 = RMul(realLit1F12,r1F09);
      real r1F34#1 = RAdd(r1F33,r1F0C);
      real r1F35#1 = RAdd(r1F34,r1F0E);
      real r1F38#1 = RMul(realLit1F12,r1EFB);
      real r1F39#1 = RAdd(r1EFA,r1F38);
      real r1F3A#1 = RAdd(r1F39,r1EFE);
      real r1F3B#1 = RMul(realLit1F12,r1F03);
      real r1F3C#1 = RAdd(r1F02,r1F3B);
      real r1F3D#1 = RAdd(r1F3C,r1F06);
      real r1F3E#1 = RMul(realLit1F12,r1F0B);
      real r1F3F#1 = RAdd(r1F0A,r1F3E);
      real r1F40#1 = RAdd(r1F3F,r1F0E);
      real r1F42#1 = RMul(realLit1F1A,r1EF9);
      real r1F43#1 = RAdd(r1F42,r1EFC);
      real r1F44#1 = RAdd(r1F43,r1EFE);
      real r1F45#1 = RMul(realLit1F1A,r1F01);
      real r1F46#1 = RAdd(r1F45,r1F04);
      real r1F47#1 = RAdd(r1F46,r1F06);
      real r1F48#1 = RMul(realLit1F1A,r1F09);
      real r1F49#1 = RAdd(r1F48,r1F0C);
      real r1F4A#1 = RAdd(r1F49,r1F0E);
      real r1FA5#9 = r1E4F;
      real r1FA6#3 = r1F00;
      real r1FA7#1 = RMul(r1FA5,r1FA6);
      real r1FA8#9 = r1E71;
      real r1FA9#3 = r1F27;
      real r1FAA#1 = RMul(r1FA8,r1FA9);
      real r1FAB#9 = r1E8B;
      real r1FAC#3 = r1F3A;
      real r1FAD#1 = RMul(r1FAB,r1FAC);
      real r1FAE#1 = RAdd(r1FA7,r1FAA);
      real r1FAF#1 = RAdd(r1FAE,r1FAD);
      real r1FB0#3 = r1F08;
      real r1FB1#1 = RMul(r1FA5,r1FB0);
      real r1FB2#3 = r1F29;
      real r1FB3#1 = RMul(r1FA8,r1FB2);
      real r1FB4#3 = r1F3D;
      real r1FB5#1 = RMul(r1FAB,r1FB4);
      real r1FB6#1 = RAdd(r1FB1,r1FB3);
      real r1FB7#1 = RAdd(r1FB6,r1FB5);
      real r1FB8#3 = r1F10;
      real r1FB9#1 = RMul(r1FA5,r1FB8);
      real r1FBA#3 = r1F2B;
      real r1FBB#1 = RMul(r1FA8,r1FBA);
      real r1FBC#3 = r1F40;
      real r1FBD#1 = RMul(r1FAB,r1FBC);
      real r1FBE#1 = RAdd(r1FB9,r1FBB);
      real r1FBF#1 = RAdd(r1FBE,r1FBD);
      real r1FC1#3 = r1F14;
      real r1FC2#1 = RMul(r1FA5,r1FC1);
      real r1FC3#3 = r1F00;
      real r1FC4#1 = RMul(r1FA8,r1FC3);
      real r1FC5#3 = r1F44;
      real r1FC6#1 = RMul(r1FAB,r1FC5);
      real r1FC7#1 = RAdd(r1FC2,r1FC4);
      real r1FC8#1 = RAdd(r1FC7,r1FC6);
      real r1FC9#3 = r1F16;
      real r1FCA#1 = RMul(r1FA5,r1FC9);
      real r1FCB#3 = r1F08;
      real r1FCC#1 = RMul(r1FA8,r1FCB);
      real r1FCD#3 = r1F47;
      real r1FCE#1 = RMul(r1FAB,r1FCD);
      real r1FCF#1 = RAdd(r1FCA,r1FCC);
      real r1FD0#1 = RAdd(r1FCF,r1FCE);
      real r1FD1#3 = r1F18;
      real r1FD2#1 = RMul(r1FA5,r1FD1);
      real r1FD3#3 = r1F10;
      real r1FD4#1 = RMul(r1FA8,r1FD3);
      real r1FD5#3 = r1F4A;
      real r1FD6#1 = RMul(r1FAB,r1FD5);
      real r1FD7#1 = RAdd(r1FD2,r1FD4);
      real r1FD8#1 = RAdd(r1FD7,r1FD6);
      real r1FDA#3 = r1F1D;
      real r1FDB#1 = RMul(r1FA5,r1FDA);
      real r1FDC#3 = r1F2F;
      real r1FDD#1 = RMul(r1FA8,r1FDC);
      real r1FDE#3 = r1F00;
      real r1FDF#1 = RMul(r1FAB,r1FDE);
      real r1FE0#1 = RAdd(r1FDB,r1FDD);
      real r1FE1#1 = RAdd(r1FE0,r1FDF);
      real r1FE2#3 = r1F20;
      real r1FE3#1 = RMul(r1FA5,r1FE2);
      real r1FE4#3 = r1F32;
      real r1FE5#1 = RMul(r1FA8,r1FE4);
      real r1FE6#3 = r1F08;
      real r1FE7#1 = RMul(r1FAB,r1FE6);
      real r1FE8#1 = RAdd(r1FE3,r1FE5);
      real r1FE9#1 = RAdd(r1FE8,r1FE7);
      real r1FEA#3 = r1F23;
      real r1FEB#1 = RMul(r1FA5,r1FEA);
      real r1FEC#3 = r1F35;
      real r1FED#1 = RMul(r1FA8,r1FEC);
      real r1FEE#3 = r1F10;
      real r1FEF#1 = RMul(r1FAB,r1FEE);
      real r1FF0#1 = RAdd(r1FEB,r1FED);
      real r1FF1#1 = RAdd(r1FF0,r1FEF);
      real r1FF4#9 = r1E5A;
      real r1FF5#1 = RMul(r1FF4,r1FA6);
      real r1FF6#9 = r1E78;
      real r1FF7#1 = RMul(r1FF6,r1FA9);
      real r1FF8#9 = r1E92;
      real r1FF9#1 = RMul(r1FF8,r1FAC);
      real r1FFA#1 = RAdd(r1FF5,r1FF7);
      real r1FFB#1 = RAdd(r1FFA,r1FF9);
      real r1FFC#1 = RMul(r1FF4,r1FB0);
      real r1FFD#1 = RMul(r1FF6,r1FB2);
      real r1FFE#1 = RMul(r1FF8,r1FB4);
      real r1FFF#1 = RAdd(r1FFC,r1FFD);
      real r2000#1 = RAdd(r1FFF,r1FFE);
      real r2001#1 = RMul(r1FF4,r1FB8);
      real r2002#1 = RMul(r1FF6,r1FBA);
      real r2003#1 = RMul(r1FF8,r1FBC);
      real r2004#1 = RAdd(r2001,r2002);
      real r2005#1 = RAdd(r2004,r2003);
      real r2007#1 = RMul(r1FF4,r1FC1);
      real r2008#1 = RMul(r1FF6,r1FC3);
      real r2009#1 = RMul(r1FF8,r1FC5);
      real r200A#1 = RAdd(r2007,r2008);
      real r200B#1 = RAdd(r200A,r2009);
      real r200C#1 = RMul(r1FF4,r1FC9);
      real r200D#1 = RMul(r1FF6,r1FCB);
      real r200E#1 = RMul(r1FF8,r1FCD);
      real r200F#1 = RAdd(r200C,r200D);
      real r2010#1 = RAdd(r200F,r200E);
      real r2011#1 = RMul(r1FF4,r1FD1);
      real r2012#1 = RMul(r1FF6,r1FD3);
      real r2013#1 = RMul(r1FF8,r1FD5);
      real r2014#1 = RAdd(r2011,r2012);
      real r2015#1 = RAdd(r2014,r2013);
      real r2017#1 = RMul(r1FF4,r1FDA);
      real r2018#1 = RMul(r1FF6,r1FDC);
      real r2019#1 = RMul(r1FF8,r1FDE);
      real r201A#1 = RAdd(r2017,r2018);
      real r201B#1 = RAdd(r201A,r2019);
      real r201C#1 = RMul(r1FF4,r1FE2);
      real r201D#1 = RMul(r1FF6,r1FE4);
      real r201E#1 = RMul(r1FF8,r1FE6);
      real r201F#1 = RAdd(r201C,r201D);
      real r2020#1 = RAdd(r201F,r201E);
      real r2021#1 = RMul(r1FF4,r1FEA);
      real r2022#1 = RMul(r1FF6,r1FEC);
      real r2023#1 = RMul(r1FF8,r1FEE);
      real r2024#1 = RAdd(r2021,r2022);
      real r2025#1 = RAdd(r2024,r2023);
      real r2028#9 = r1E65;
      real r2029#1 = RMul(r2028,r1FA6);
      real r202A#9 = r1E7F;
      real r202B#1 = RMul(r202A,r1FA9);
      real r202C#9 = r1E99;
      real r202D#1 = RMul(r202C,r1FAC);
      real r202E#1 = RAdd(r2029,r202B);
      real r202F#1 = RAdd(r202E,r202D);
      real r2030#1 = RMul(r2028,r1FB0);
      real r2031#1 = RMul(r202A,r1FB2);
      real r2032#1 = RMul(r202C,r1FB4);
      real r2033#1 = RAdd(r2030,r2031);
      real r2034#1 = RAdd(r2033,r2032);
      real r2035#1 = RMul(r2028,r1FB8);
      real r2036#1 = RMul(r202A,r1FBA);
      real r2037#1 = RMul(r202C,r1FBC);
      real r2038#1 = RAdd(r2035,r2036);
      real r2039#1 = RAdd(r2038,r2037);
      real r203B#1 = RMul(r2028,r1FC1);
      real r203C#1 = RMul(r202A,r1FC3);
      real r203D#1 = RMul(r202C,r1FC5);
      real r203E#1 = RAdd(r203B,r203C);
      real r203F#1 = RAdd(r203E,r203D);
      real r2040#1 = RMul(r2028,r1FC9);
      real r2041#1 = RMul(r202A,r1FCB);
      real r2042#1 = RMul(r202C,r1FCD);
      real r2043#1 = RAdd(r2040,r2041);
      real r2044#1 = RAdd(r2043,r2042);
      real r2045#1 = RMul(r2028,r1FD1);
      real r2046#1 = RMul(r202A,r1FD3);
      real r2047#1 = RMul(r202C,r1FD5);
      real r2048#1 = RAdd(r2045,r2046);
      real r2049#1 = RAdd(r2048,r2047);
      real r204B#1 = RMul(r2028,r1FDA);
      real r204C#1 = RMul(r202A,r1FDC);
      real r204D#1 = RMul(r202C,r1FDE);
      real r204E#1 = RAdd(r204B,r204C);
      real r204F#1 = RAdd(r204E,r204D);
      real r2050#1 = RMul(r2028,r1FE2);
      real r2051#1 = RMul(r202A,r1FE4);
      real r2052#1 = RMul(r202C,r1FE6);
      real r2053#1 = RAdd(r2050,r2051);
      real r2054#1 = RAdd(r2053,r2052);
      real r2055#1 = RMul(r2028,r1FEA);
      real r2056#1 = RMul(r202A,r1FEC);
      real r2057#1 = RMul(r202C,r1FEE);
      real r2058#1 = RAdd(r2055,r2056);
      real r2059#1 = RAdd(r2058,r2057);
      real r2116#1 = dof_load1DD8;
      real r2117#3 = basisEval1E2A;
      real r2118#1 = RMul(r2116,r2117);
      real r2119#1 = dof_load1DE1;
      real r211A#3 = basisEval1E2B;
      real r211B#1 = RMul(r2119,r211A);
      real r211C#1 = dof_load1DEA;
      real r211D#3 = basisEval1E2C;
      real r211E#1 = RMul(r211C,r211D);
      real r211F#1 = dof_load1DF3;
      real r2120#3 = basisEval1E2C;
      real r2121#1 = RMul(r211F,r2120);
      real r2122#1 = RAdd(r2118,r211B);
      real r2123#1 = RAdd(r2122,r211E);
      real r2124#1 = RAdd(r2123,r2121);
      real r2125#1 = dof_load1DD9;
      real r2126#1 = RMul(r2125,r2117);
      real r2127#1 = dof_load1DE2;
      real r2128#1 = RMul(r2127,r211A);
      real r2129#1 = dof_load1DEB;
      real r212A#1 = RMul(r2129,r211D);
      real r212B#1 = dof_load1DF4;
      real r212C#1 = RMul(r212B,r2120);
      real r212D#1 = RAdd(r2126,r2128);
      real r212E#1 = RAdd(r212D,r212A);
      real r212F#1 = RAdd(r212E,r212C);
      real r2130#1 = dof_load1DDA;
      real r2131#1 = RMul(r2130,r2117);
      real r2132#1 = dof_load1DE3;
      real r2133#1 = RMul(r2132,r211A);
      real r2134#1 = dof_load1DEC;
      real r2135#1 = RMul(r2134,r211D);
      real r2136#1 = dof_load1DF5;
      real r2137#1 = RMul(r2136,r2120);
      real r2138#1 = RAdd(r2131,r2133);
      real r2139#1 = RAdd(r2138,r2135);
      real r213A#1 = RAdd(r2139,r2137);
      tensor[3] probe_l_142115#1 = <tensor[3]>[r2124,r212F,r213A];
      real r2163#1 = dof_load1DD8;
      real r2164#3 = basisEval1E2A;
      real r2165#1 = RMul(r2163,r2164);
      real r2166#1 = dof_load1DE1;
      real r2167#3 = basisEval1E2C;
      real r2168#1 = RMul(r2166,r2167);
      real r2169#1 = dof_load1DEA;
      real r216A#3 = basisEval1E2B;
      real r216B#1 = RMul(r2169,r216A);
      real r216C#1 = dof_load1DF3;
      real r216D#3 = basisEval1E2C;
      real r216E#1 = RMul(r216C,r216D);
      real r216F#1 = RAdd(r2165,r2168);
      real r2170#1 = RAdd(r216F,r216B);
      real r2171#1 = RAdd(r2170,r216E);
      real r2172#1 = dof_load1DD9;
      real r2173#1 = RMul(r2172,r2164);
      real r2174#1 = dof_load1DE2;
      real r2175#1 = RMul(r2174,r2167);
      real r2176#1 = dof_load1DEB;
      real r2177#1 = RMul(r2176,r216A);
      real r2178#1 = dof_load1DF4;
      real r2179#1 = RMul(r2178,r216D);
      real r217A#1 = RAdd(r2173,r2175);
      real r217B#1 = RAdd(r217A,r2177);
      real r217C#1 = RAdd(r217B,r2179);
      real r217D#1 = dof_load1DDA;
      real r217E#1 = RMul(r217D,r2164);
      real r217F#1 = dof_load1DE3;
      real r2180#1 = RMul(r217F,r2167);
      real r2181#1 = dof_load1DEC;
      real r2182#1 = RMul(r2181,r216A);
      real r2183#1 = dof_load1DF5;
      real r2184#1 = RMul(r2183,r216D);
      real r2185#1 = RAdd(r217E,r2180);
      real r2186#1 = RAdd(r2185,r2182);
      real r2187#1 = RAdd(r2186,r2184);
      tensor[3] probe_l_152162#3 = <tensor[3]>[r2171,r217C,r2187];
      real r21B0#1 = dof_load1DD8;
      real r21B1#3 = basisEval1E2A;
      real r21B2#1 = RMul(r21B0,r21B1);
      real r21B3#1 = dof_load1DE1;
      real r21B4#3 = basisEval1E2C;
      real r21B5#1 = RMul(r21B3,r21B4);
      real r21B6#1 = dof_load1DEA;
      real r21B7#3 = basisEval1E2C;
      real r21B8#1 = RMul(r21B6,r21B7);
      real r21B9#1 = dof_load1DF3;
      real r21BA#3 = basisEval1E2B;
      real r21BB#1 = RMul(r21B9,r21BA);
      real r21BC#1 = RAdd(r21B2,r21B5);
      real r21BD#1 = RAdd(r21BC,r21B8);
      real r21BE#1 = RAdd(r21BD,r21BB);
      real r21BF#1 = dof_load1DD9;
      real r21C0#1 = RMul(r21BF,r21B1);
      real r21C1#1 = dof_load1DE2;
      real r21C2#1 = RMul(r21C1,r21B4);
      real r21C3#1 = dof_load1DEB;
      real r21C4#1 = RMul(r21C3,r21B7);
      real r21C5#1 = dof_load1DF4;
      real r21C6#1 = RMul(r21C5,r21BA);
      real r21C7#1 = RAdd(r21C0,r21C2);
      real r21C8#1 = RAdd(r21C7,r21C4);
      real r21C9#1 = RAdd(r21C8,r21C6);
      real r21CA#1 = dof_load1DDA;
      real r21CB#1 = RMul(r21CA,r21B1);
      real r21CC#1 = dof_load1DE3;
      real r21CD#1 = RMul(r21CC,r21B4);
      real r21CE#1 = dof_load1DEC;
      real r21CF#1 = RMul(r21CE,r21B7);
      real r21D0#1 = dof_load1DF5;
      real r21D1#1 = RMul(r21D0,r21BA);
      real r21D2#1 = RAdd(r21CB,r21CD);
      real r21D3#1 = RAdd(r21D2,r21CF);
      real r21D4#1 = RAdd(r21D3,r21D1);
      real realLit21FD#3 = 0.e0;
      real r21FE#3 = r21BE;
      real r21FF#3 = RMul(realLit21FD,r21FE);
      real r2200#3 = r21C9;
      real r2201#3 = RMul(realLit21FD,r2200);
      real r2202#3 = r21D4;
      real r2203#5 = RMul(realLit21FD,r2202);
      real r2204#3 = RAdd(r21FF,r2201);
      real r2205#3 = RAdd(r2204,r2203);
      real realLit2206#3 = 0.1e1;
      real r2207#1 = RMul(realLit2206,r2202);
      real r2208#1 = RAdd(r2204,r2207);
      real realLit2209#3 = -0.1e1;
      real r220A#1 = RMul(realLit2209,r2200);
      real r220B#1 = RAdd(r21FF,r220A);
      real r220C#1 = RAdd(r220B,r2203);
      tensor[3] tensor220D#1 = <tensor[3]>[r2205,r2208,r220C];
      real r220E#1 = RMul(realLit2209,r2202);
      real r220F#1 = RAdd(r2204,r220E);
      real r2210#1 = RMul(realLit2206,r21FE);
      real r2211#1 = RAdd(r2210,r2201);
      real r2212#1 = RAdd(r2211,r2203);
      tensor[3] tensor2213#1 = <tensor[3]>[r220F,r2205,r2212];
      real r2214#1 = RMul(realLit2206,r2200);
      real r2215#1 = RAdd(r21FF,r2214);
      real r2216#1 = RAdd(r2215,r2203);
      real r2217#1 = RMul(realLit2209,r21FE);
      real r2218#1 = RAdd(r2217,r2201);
      real r2219#1 = RAdd(r2218,r2203);
      tensor[3] tensor221A#1 = <tensor[3]>[r2216,r2219,r2205];
      tensor[3] projParam223C#1 = tensor220D;
      real vdot223D#1 = VDot<3>(probe_l_152162,projParam223C);
      tensor[3] projParam223E#1 = tensor2213;
      real vdot223F#1 = VDot<3>(probe_l_152162,projParam223E);
      tensor[3] projParam2240#1 = tensor221A;
      real vdot2241#1 = VDot<3>(probe_l_152162,projParam2240);
      tensor[3] op1_e3_l_18223B#1 = <tensor[3]>[vdot223D,vdot223F,vdot2241];
      real op1_e3_l_19224A#1 = VDot<3>(probe_l_142115,op1_e3_l_18223B);
      real realLit224E#27 = 0.e0;
      real r224F#1 = r1FAF;
      real r2250#2 = RMul(realLit224E,r224F);
      real r2251#2 = r1FB7;
      real r2252#1 = RMul(realLit224E,r2251);
      real r2253#2 = r1FBF;
      real r2254#2 = RMul(realLit224E,r2253);
      real r2255#2 = r1FFB;
      real r2256#2 = RMul(realLit224E,r2255);
      real r2257#1 = r2000;
      real r2258#3 = RMul(realLit224E,r2257);
      real realLit2259#9 = 0.1e1;
      real r225A#2 = r2005;
      real r225B#1 = RMul(realLit2259,r225A);
      real r225C#2 = r202F;
      real r225D#2 = RMul(realLit224E,r225C);
      real realLit225E#9 = -0.1e1;
      real r225F#2 = r2034;
      real r2260#1 = RMul(realLit225E,r225F);
      real r2261#1 = r2039;
      real r2262#3 = RMul(realLit224E,r2261);
      real r2263#2 = RAdd(r2250,r2252);
      real r2264#1 = RAdd(r2263,r2254);
      real r2265#1 = RAdd(r2264,r2256);
      real r2266#1 = RAdd(r2265,r2258);
      real r2267#1 = RAdd(r2266,r225B);
      real r2268#1 = RAdd(r2267,r225D);
      real r2269#1 = RAdd(r2268,r2260);
      real r226A#1 = RAdd(r2269,r2262);
      real r226B#1 = r1FC8;
      real r226C#2 = RMul(realLit224E,r226B);
      real r226D#2 = r1FD0;
      real r226E#1 = RMul(realLit224E,r226D);
      real r226F#2 = r1FD8;
      real r2270#2 = RMul(realLit224E,r226F);
      real r2271#2 = r200B;
      real r2272#2 = RMul(realLit224E,r2271);
      real r2273#1 = r2010;
      real r2274#3 = RMul(realLit224E,r2273);
      real r2275#2 = r2015;
      real r2276#1 = RMul(realLit2259,r2275);
      real r2277#2 = r203F;
      real r2278#2 = RMul(realLit224E,r2277);
      real r2279#2 = r2044;
      real r227A#1 = RMul(realLit225E,r2279);
      real r227B#1 = r2049;
      real r227C#3 = RMul(realLit224E,r227B);
      real r227D#2 = RAdd(r226C,r226E);
      real r227E#1 = RAdd(r227D,r2270);
      real r227F#1 = RAdd(r227E,r2272);
      real r2280#1 = RAdd(r227F,r2274);
      real r2281#1 = RAdd(r2280,r2276);
      real r2282#1 = RAdd(r2281,r2278);
      real r2283#1 = RAdd(r2282,r227A);
      real r2284#1 = RAdd(r2283,r227C);
      real r2285#1 = r1FE1;
      real r2286#2 = RMul(realLit224E,r2285);
      real r2287#2 = r1FE9;
      real r2288#1 = RMul(realLit224E,r2287);
      real r2289#2 = r1FF1;
      real r228A#2 = RMul(realLit224E,r2289);
      real r228B#2 = r201B;
      real r228C#2 = RMul(realLit224E,r228B);
      real r228D#1 = r2020;
      real r228E#3 = RMul(realLit224E,r228D);
      real r228F#2 = r2025;
      real r2290#1 = RMul(realLit2259,r228F);
      real r2291#2 = r204F;
      real r2292#2 = RMul(realLit224E,r2291);
      real r2293#2 = r2054;
      real r2294#1 = RMul(realLit225E,r2293);
      real r2295#1 = r2059;
      real r2296#3 = RMul(realLit224E,r2295);
      real r2297#2 = RAdd(r2286,r2288);
      real r2298#1 = RAdd(r2297,r228A);
      real r2299#1 = RAdd(r2298,r228C);
      real r229A#1 = RAdd(r2299,r228E);
      real r229B#1 = RAdd(r229A,r2290);
      real r229C#1 = RAdd(r229B,r2292);
      real r229D#1 = RAdd(r229C,r2294);
      real r229E#1 = RAdd(r229D,r2296);
      real r22A0#1 = RMul(realLit225E,r2253);
      real r22A1#2 = RMul(realLit224E,r225A);
      real r22A2#1 = RMul(realLit2259,r225C);
      real r22A3#2 = RMul(realLit224E,r225F);
      real r22A4#1 = RAdd(r2263,r22A0);
      real r22A5#1 = RAdd(r22A4,r2256);
      real r22A6#1 = RAdd(r22A5,r2258);
      real r22A7#1 = RAdd(r22A6,r22A1);
      real r22A8#1 = RAdd(r22A7,r22A2);
      real r22A9#1 = RAdd(r22A8,r22A3);
      real r22AA#1 = RAdd(r22A9,r2262);
      real r22AB#1 = RMul(realLit225E,r226F);
      real r22AC#2 = RMul(realLit224E,r2275);
      real r22AD#1 = RMul(realLit2259,r2277);
      real r22AE#2 = RMul(realLit224E,r2279);
      real r22AF#1 = RAdd(r227D,r22AB);
      real r22B0#1 = RAdd(r22AF,r2272);
      real r22B1#1 = RAdd(r22B0,r2274);
      real r22B2#1 = RAdd(r22B1,r22AC);
      real r22B3#1 = RAdd(r22B2,r22AD);
      real r22B4#1 = RAdd(r22B3,r22AE);
      real r22B5#1 = RAdd(r22B4,r227C);
      real r22B6#1 = RMul(realLit225E,r2289);
      real r22B7#2 = RMul(realLit224E,r228F);
      real r22B8#1 = RMul(realLit2259,r2291);
      real r22B9#2 = RMul(realLit224E,r2293);
      real r22BA#1 = RAdd(r2297,r22B6);
      real r22BB#1 = RAdd(r22BA,r228C);
      real r22BC#1 = RAdd(r22BB,r228E);
      real r22BD#1 = RAdd(r22BC,r22B7);
      real r22BE#1 = RAdd(r22BD,r22B8);
      real r22BF#1 = RAdd(r22BE,r22B9);
      real r22C0#1 = RAdd(r22BF,r2296);
      real r22C2#1 = RMul(realLit2259,r2251);
      real r22C3#1 = RMul(realLit225E,r2255);
      real r22C4#1 = RAdd(r2250,r22C2);
      real r22C5#1 = RAdd(r22C4,r2254);
      real r22C6#1 = RAdd(r22C5,r22C3);
      real r22C7#1 = RAdd(r22C6,r2258);
      real r22C8#1 = RAdd(r22C7,r22A1);
      real r22C9#1 = RAdd(r22C8,r225D);
      real r22CA#1 = RAdd(r22C9,r22A3);
      real r22CB#1 = RAdd(r22CA,r2262);
      real r22CC#1 = RMul(realLit2259,r226D);
      real r22CD#1 = RMul(realLit225E,r2271);
      real r22CE#1 = RAdd(r226C,r22CC);
      real r22CF#1 = RAdd(r22CE,r2270);
      real r22D0#1 = RAdd(r22CF,r22CD);
      real r22D1#1 = RAdd(r22D0,r2274);
      real r22D2#1 = RAdd(r22D1,r22AC);
      real r22D3#1 = RAdd(r22D2,r2278);
      real r22D4#1 = RAdd(r22D3,r22AE);
      real r22D5#1 = RAdd(r22D4,r227C);
      real r22D6#1 = RMul(realLit2259,r2287);
      real r22D7#1 = RMul(realLit225E,r228B);
      real r22D8#1 = RAdd(r2286,r22D6);
      real r22D9#1 = RAdd(r22D8,r228A);
      real r22DA#1 = RAdd(r22D9,r22D7);
      real r22DB#1 = RAdd(r22DA,r228E);
      real r22DC#1 = RAdd(r22DB,r22B7);
      real r22DD#1 = RAdd(r22DC,r2292);
      real r22DE#1 = RAdd(r22DD,r22B9);
      real r22DF#1 = RAdd(r22DE,r2296);
      real realLit2377#1 = 0.2e1;
      real op1_e3_l_212376#9 = RMul(realLit2377,op1_e3_l_19224A);
      real varAcc237D#1 = VIndex<3,0>(xn237C);
      real varAcc237E#1 = VIndex<3,1>(xn237C);
      real varAcc237F#1 = VIndex<3,2>(xn237C);
      real coeff2380#3 = -0.1e1;
      real iden2381#1 = varAcc237D;
      real one2382#11 = 0.1e1;
      real prod2383#2 = RMul(one2382,one2382);
      real prod2384#2 = RMul(iden2381,prod2383);
      real iden2385#1 = varAcc237E;
      real prod2386#1 = RMul(iden2385,one2382);
      real prod2387#2 = RMul(one2382,prod2386);
      real iden2388#1 = varAcc237F;
      real prod2389#1 = RMul(one2382,iden2388);
      real prod238A#2 = RMul(one2382,prod2389);
      real prod238B#1 = RMul(one2382,prod2383);
      real mult238C#1 = RMul(one2382,prod238B);
      real mult238D#1 = RMul(coeff2380,prod238A);
      real mult238E#1 = RMul(coeff2380,prod2387);
      real mult238F#1 = RMul(coeff2380,prod2384);
      real sum2390#1 = RAdd(mult238E,mult238F);
      real sum2391#1 = RAdd(mult238D,sum2390);
      real sum2392#1 = RAdd(mult238C,sum2391);
      real intermediate2393#2 = sum2392;
      real basisEval2394#2 = RMul(one2382,prod2384);
      real basisEval2395#2 = RMul(one2382,prod2387);
      real basisEval2396#2 = RMul(one2382,prod238A);
      real r23B5#1 = dof_load1DD8;
      real r23B6#3 = intermediate2393;
      real r23B7#1 = RMul(r23B5,r23B6);
      real r23B8#1 = dof_load1DE1;
      real r23B9#3 = basisEval2394;
      real r23BA#1 = RMul(r23B8,r23B9);
      real r23BB#1 = dof_load1DEA;
      real r23BC#3 = basisEval2395;
      real r23BD#1 = RMul(r23BB,r23BC);
      real r23BE#1 = dof_load1DF3;
      real r23BF#3 = basisEval2396;
      real r23C0#1 = RMul(r23BE,r23BF);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C4#1 = dof_load1DD9;
      real r23C5#1 = RMul(r23C4,r23B6);
      real r23C6#1 = dof_load1DE2;
      real r23C7#1 = RMul(r23C6,r23B9);
      real r23C8#1 = dof_load1DEB;
      real r23C9#1 = RMul(r23C8,r23BC);
      real r23CA#1 = dof_load1DF4;
      real r23CB#1 = RMul(r23CA,r23BF);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23CF#1 = dof_load1DDA;
      real r23D0#1 = RMul(r23CF,r23B6);
      real r23D1#1 = dof_load1DE3;
      real r23D2#1 = RMul(r23D1,r23B9);
      real r23D3#1 = dof_load1DEC;
      real r23D4#1 = RMul(r23D3,r23BC);
      real r23D5#1 = dof_load1DF5;
      real r23D6#1 = RMul(r23D5,r23BF);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_2223B4#1 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2402#1 = r226A;
      real r2403#1 = RDiv(r2402,op1_e3_l_212376);
      real r2404#1 = r2284;
      real r2405#1 = RDiv(r2404,op1_e3_l_212376);
      real r2406#1 = r229E;
      real r2407#1 = RDiv(r2406,op1_e3_l_212376);
      tensor[3] tensor2408#2 = <tensor[3]>[r2403,r2405,r2407];
      real r2409#1 = r22AA;
      real r240A#1 = RDiv(r2409,op1_e3_l_212376);
      real r240B#1 = r22B5;
      real r240C#1 = RDiv(r240B,op1_e3_l_212376);
      real r240D#1 = r22C0;
      real r240E#1 = RDiv(r240D,op1_e3_l_212376);
      tensor[3] tensor240F#2 = <tensor[3]>[r240A,r240C,r240E];
      real r2410#1 = r22CB;
      real r2411#1 = RDiv(r2410,op1_e3_l_212376);
      real r2412#1 = r22D5;
      real r2413#1 = RDiv(r2412,op1_e3_l_212376);
      real r2414#1 = r22DF;
      real r2415#1 = RDiv(r2414,op1_e3_l_212376);
      tensor[3] tensor2416#2 = <tensor[3]>[r2411,r2413,r2415];
      tensor[3] op1_e3_l_24242E#3 = VSub<3>(probe_l_2223B4,pos1D95);
      tensor[3] projParam2432#1 = tensor2408;
      real vdot2433#1 = VDot<3>(projParam2432,op1_e3_l_24242E);
      tensor[3] projParam2434#1 = tensor240F;
      real vdot2435#1 = VDot<3>(projParam2434,op1_e3_l_24242E);
      tensor[3] projParam2436#1 = tensor2416;
      real vdot2437#1 = VDot<3>(projParam2436,op1_e3_l_24242E);
      tensor[3] op1_e3_l_252431#1 = <tensor[3]>[vdot2433,vdot2435,vdot2437];
      tensor[3] xn2440#4 = VSub<3>(xn237C,op1_e3_l_252431);
      real _t2443#1 = 0.1e-7;
      real r2446#1 = dof_load1DD8;
      real r2447#3 = intermediate2393;
      real r2448#1 = RMul(r2446,r2447);
      real r2449#1 = dof_load1DE1;
      real r244A#3 = basisEval2394;
      real r244B#1 = RMul(r2449,r244A);
      real r244C#1 = dof_load1DEA;
      real r244D#3 = basisEval2395;
      real r244E#1 = RMul(r244C,r244D);
      real r244F#1 = dof_load1DF3;
      real r2450#3 = basisEval2396;
      real r2451#1 = RMul(r244F,r2450);
      real r2452#1 = RAdd(r2448,r244B);
      real r2453#1 = RAdd(r2452,r244E);
      real r2454#1 = RAdd(r2453,r2451);
      real r2455#1 = dof_load1DD9;
      real r2456#1 = RMul(r2455,r2447);
      real r2457#1 = dof_load1DE2;
      real r2458#1 = RMul(r2457,r244A);
      real r2459#1 = dof_load1DEB;
      real r245A#1 = RMul(r2459,r244D);
      real r245B#1 = dof_load1DF4;
      real r245C#1 = RMul(r245B,r2450);
      real r245D#1 = RAdd(r2456,r2458);
      real r245E#1 = RAdd(r245D,r245A);
      real r245F#1 = RAdd(r245E,r245C);
      real r2460#1 = dof_load1DDA;
      real r2461#1 = RMul(r2460,r2447);
      real r2462#1 = dof_load1DE3;
      real r2463#1 = RMul(r2462,r244A);
      real r2464#1 = dof_load1DEC;
      real r2465#1 = RMul(r2464,r244D);
      real r2466#1 = dof_load1DF5;
      real r2467#1 = RMul(r2466,r2450);
      real r2468#1 = RAdd(r2461,r2463);
      real r2469#1 = RAdd(r2468,r2465);
      real r246A#1 = RAdd(r2469,r2467);
      tensor[3] probe_l_212445#1 = <tensor[3]>[r2454,r245F,r246A];
      tensor[3] op1_e3_l_232492#3 = VSub<3>(probe_l_212445,pos1D95);
      tensor[3] projParam2496#1 = tensor2408;
      real vdot2497#1 = VDot<3>(projParam2496,op1_e3_l_232492);
      tensor[3] projParam2498#1 = tensor240F;
      real vdot2499#1 = VDot<3>(projParam2498,op1_e3_l_232492);
      tensor[3] projParam249A#1 = tensor2416;
      real vdot249B#1 = VDot<3>(projParam249A,op1_e3_l_232492);
      tensor[3] op1_e3_l_392495#2 = <tensor[3]>[vdot2497,vdot2499,vdot249B];
      real op1_e3_l_4124A4#1 = VDot<3>(op1_e3_l_392495,op1_e3_l_392495);
      real _t24A7#1 = Sqrt(op1_e3_l_4124A4);
      bool _t24AA#1 = GTE<real>(_t2443,_t24A7);
      if _t24AA then goto ASSIGN24AE else goto JOIN24D6
    ASSIGN24AE:  preds = [COND24AC]
      real _t24AD#4 = 0.1e1;
      tensor[3] _t24AF#1 = <tensor[3]>[_t24AD,_t24AD,_t24AD];
      real _t24B1#1 = VDot<3>(_t24AF,xn2440);
      bool _t24B4#1 = GT<real>(_t24AD,_t24B1);
      real _t24B6#3 = 0.1e-8;
      tensor[3] _t24B8#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24BA#3 = VAdd<3>(_t24B8,xn2440);
      real _t24BD#1 = VIndex<3,0>(_t24BA);
      real _t24BF#3 = -0.e0;
      bool _t24C1#1 = GT<real>(_t24BD,_t24BF);
      real _t24C3#1 = VIndex<3,1>(_t24BA);
      bool _t24C5#1 = GT<real>(_t24C3,_t24BF);
      real _t24C7#1 = VIndex<3,2>(_t24BA);
      bool _t24C9#1 = GT<real>(_t24C7,_t24BF);
      bool _t24CB#1 = BAnd(_t24C5,_t24C9);
      bool _t24CD#1 = BAnd(_t24C1,_t24CB);
      bool _t24CF#1 = BAnd(_t24B4,_t24CD);
      if _t24CF then goto ASSIGN24D3 else goto JOIN24D5
    ASSIGN24D3:  preds = [COND24D1]
      femData:MeshPos _t24D2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1D94,cellInt1DAE,xn2440,pos1D95);
      return _t24D2
      goto JOIN24D5
    JOIN24D5:  preds = [*RETURN(_t24D2)24D4,COND24D1]
      goto JOIN24D6
    JOIN24D6:  preds = [JOIN24D5,COND24AC]
      int newtonInt24D7#2 = IAdd(newtonInt24D8,_t1DA1);
      bool _t24DA#1 = GTE<int>(newtonInt24D7,_t1DA5);
      if _t24DA then goto ASSIGN24DE else goto JOIN24E8
    ASSIGN24DE:  preds = [COND24DC]
      bool _t24DD#1 = GTE<int>(cellInt1DAE,numCell1DA3);
      if _t24DD then goto ASSIGN24E1 else goto ASSIGN24EA
    ASSIGN24E1:  preds = [COND24DF]
      femData:MeshPos _t24E0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24E0
      goto JOIN24E5
    JOIN24E5:  preds = [*RETURN(_t24E0)24E2,ASSIGN24EA]
      int cellInt24E3#1 = phi(cellInt24E4)
      goto JOIN24E8
    JOIN24E8:  preds = [JOIN24E5,COND24DC]
      int cellInt24E6#1 = phi(cellInt24E3,cellInt1DAE)
      int newtonInt24E7#1 = phi(newtonInt1D9B,newtonInt24D7)
      goto FOREACH1DAC
    ASSIGN24EA:  preds = [COND24DF]
      int cellInt24E4#1 = IAdd(cellInt1DAE,_t1DA1);
      goto JOIN24E5
    ASSIGN24EC:  preds = [FOREACH1DAC]
      femData:MeshPos _t24EB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24EB
}
## input initialization
  ENTRY1AD7:  preds = []
    real isoval1AD8#1 = 0.2e0;
    globals.isoval1AB8 = isoval1AD8;
    real thick1ADB#1 = 0.7e-1;
    globals.thick1AB9 = thick1ADB;
    real _t1ADE#2 = -0.3e1;
    real _t1AE0#1 = 0.3e1;
    tensor[3] camEye1AE2#1 = <tensor[3]>[_t1ADE,_t1ADE,_t1AE0];
    globals.camEye1ABA = camEye1AE2;
    real _t1AE5#3 = 0.5e0;
    tensor[3] camAt1AE7#1 = <tensor[3]>[_t1AE5,_t1AE5,_t1AE5];
    globals.camAt1ABB = camAt1AE7;
    real _t1AEA#2 = 0.e0;
    real _t1AEC#2 = 0.1e1;
    tensor[3] camUp1AEE#2 = <tensor[3]>[_t1AEA,_t1AEA,_t1AEC];
    globals.camUp1ABC = camUp1AEE;
    real camFOV1AF1#1 = 0.137e2;
    globals.camFOV1ABD = camFOV1AF1;
    int iresU1AF4#2 = 500;
    globals.iresU1ABE = iresU1AF4;
    globals.iresV1ABF = iresU1AF4;
    real camNear1AF8#1 = -0.2e1;
    globals.camNear1AC0 = camNear1AF8;
    real camFar1AFB#1 = 0.5e1;
    globals.camFar1AC1 = camFar1AFB;
    globals.refStep1AC2 = _t1AEC;
    real rayStep1AFF#1 = 0.1e-1;
    globals.rayStep1AC3 = rayStep1AFF;
    globals.lightVsp1AC4 = camUp1AEE;
    real phongKa1B03#1 = 0.1e0;
    globals.phongKa1AC5 = phongKa1B03;
    real phongKd1B06#1 = 0.9e0;
    globals.phongKd1AC6 = phongKd1B06;
    bool debug1B09#1 = false;
    globals.debug1AC7 = debug1B09;
    int su1B0C#2 = 250;
    globals.su1AC8 = su1B0C;
    globals.sv1AC9 = su1B0C;
    return
## global-variable initialization
  ENTRY1B11:  preds = []
    femData:Mesh a1B12#3 = globals.a1AB5;
    femData:Space 0b042F_intermedateGlobal1B14#1 = globals.0b042F_intermedateGlobal1AB6;
    femData:FemFunc 0c0431_intermedateGlobal1B16#1 = globals.0c0431_intermedateGlobal1AB7;
    tensor[3] camEye1B18#1 = globals.camEye1ABA;
    tensor[3] camAt1B1A#1 = globals.camAt1ABB;
    tensor[3] camUp1B1C#3 = globals.camUp1ABC;
    real camFOV1B1E#1 = globals.camFOV1ABD;
    int iresU1B20#1 = globals.iresU1ABE;
    int iresV1B22#1 = globals.iresV1ABF;
    tensor[3] lightVsp1B24#5 = globals.lightVsp1AC4;
    int _t1B26#1 = 0;
    int _t1B28#1 = 1;
    int _t1B2A#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B12);
    int _t1B2C#1 = ISub(_t1B2A,_t1B28);
    int[] _t1B2E#1 = Range(_t1B26,_t1B2C);
    femData:MeshCell[] _t1B30#1 = <femData:MeshCell[]>{};
  FOREACH1B33:  preds = [ASSIGN1B31,NEXT1B39]
    foreach (_t1B32 in _t1B2E) on exit goto ASSIGN1B3B
      femData:MeshCell[] _t1B37#1 = phi(_t1B30,_t1B36)
    femData:MeshCell _t1B34#1 = LoadFem<femData:MeshCell>(a1B12,_t1B32);
    femData:MeshCell[] _t1B36#1 = Append<femData:MeshCell>(_t1B37,_t1B34);
    goto FOREACH1B33
  ASSIGN1B3B:  preds = [FOREACH1B33]
    femData:Space b1B3A#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1B14,a1B12);
    femData:FemFunc c1B3C#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1B16,b1B3A);
    femData:Space _t1B3E#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B3C);
    femData:Mesh _t1B40#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B3E);
    image(IMAGE1D<double[3]>) I1B42#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B48#9 = VSub<3>(camAt1B1A,camEye1B18);
    real op1_e3_l_41B4B#1 = VDot<3>(op1_e3_l_21B48,op1_e3_l_21B48);
    real camDist1B4E#4 = Sqrt(op1_e3_l_41B4B);
    globals.camDist1ACA = camDist1B4E;
    real realLit1B53#1 = 0.1e1;
    real op1_e3_l_91B52#6 = RDiv(realLit1B53,camDist1B4E);
    tensor[3] camN1B57#4 = VScale<3>(op1_e3_l_91B52,op1_e3_l_21B48);
    globals.camN1ACB = camN1B57;
    real realLit1B5C#3 = 0.e0;
    real r1B5D#3 = TensorIndex<tensor[3],[0]>(camUp1B1C);
    real r1B5E#3 = RMul(realLit1B5C,r1B5D);
    real r1B5F#3 = TensorIndex<tensor[3],[1]>(camUp1B1C);
    real r1B60#3 = RMul(realLit1B5C,r1B5F);
    real r1B61#3 = TensorIndex<tensor[3],[2]>(camUp1B1C);
    real r1B62#5 = RMul(realLit1B5C,r1B61);
    real r1B63#3 = RAdd(r1B5E,r1B60);
    real r1B64#3 = RAdd(r1B63,r1B62);
    real realLit1B65#3 = 0.1e1;
    real r1B66#1 = RMul(realLit1B65,r1B61);
    real r1B67#1 = RAdd(r1B63,r1B66);
    real realLit1B68#3 = -0.1e1;
    real r1B69#1 = RMul(realLit1B68,r1B5F);
    real r1B6A#1 = RAdd(r1B5E,r1B69);
    real r1B6B#1 = RAdd(r1B6A,r1B62);
    tensor[3] tensor1B6C#1 = <tensor[3]>[r1B64,r1B67,r1B6B];
    real r1B6D#1 = RMul(realLit1B68,r1B61);
    real r1B6E#1 = RAdd(r1B63,r1B6D);
    real r1B6F#1 = RMul(realLit1B65,r1B5D);
    real r1B70#1 = RAdd(r1B6F,r1B60);
    real r1B71#1 = RAdd(r1B70,r1B62);
    tensor[3] tensor1B72#1 = <tensor[3]>[r1B6E,r1B64,r1B71];
    real r1B73#1 = RMul(realLit1B65,r1B5F);
    real r1B74#1 = RAdd(r1B5E,r1B73);
    real r1B75#1 = RAdd(r1B74,r1B62);
    real r1B76#1 = RMul(realLit1B68,r1B5D);
    real r1B77#1 = RAdd(r1B76,r1B60);
    real r1B78#1 = RAdd(r1B77,r1B62);
    tensor[3] tensor1B79#1 = <tensor[3]>[r1B75,r1B78,r1B64];
    tensor[3] projParam1B9B#1 = tensor1B6C;
    real vdot1B9C#1 = VDot<3>(op1_e3_l_21B48,projParam1B9B);
    tensor[3] projParam1B9D#1 = tensor1B72;
    real vdot1B9E#1 = VDot<3>(op1_e3_l_21B48,projParam1B9D);
    tensor[3] projParam1B9F#1 = tensor1B79;
    real vdot1BA0#1 = VDot<3>(op1_e3_l_21B48,projParam1B9F);
    tensor[3] op1_e3_l_171B9A#6 = <tensor[3]>[vdot1B9C,vdot1B9E,vdot1BA0];
    real op1_e3_l_341BA9#1 = VDot<3>(op1_e3_l_171B9A,op1_e3_l_171B9A);
    real r1BAD#1 = RMul(op1_e3_l_91B52,op1_e3_l_91B52);
    real op1_e3_l_351BAC#1 = RMul(r1BAD,op1_e3_l_341BA9);
    real op1_e3_l_361BB1#1 = Sqrt(op1_e3_l_351BAC);
    tensor[3] op1_e3_l_371BB4#1 = VScale<3>(op1_e3_l_91B52,op1_e3_l_171B9A);
    real realLit1BB8#1 = 0.1e1;
    real op1_e3_l_381BB7#2 = RDiv(realLit1BB8,op1_e3_l_361BB1);
    tensor[3] camU1BBC#4 = VScale<3>(op1_e3_l_381BB7,op1_e3_l_371BB4);
    globals.camU1ACC = camU1BBC;
    real realLit1BC1#3 = 0.e0;
    real r1BC2#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B48);
    real r1BC3#3 = RMul(realLit1BC1,r1BC2);
    real r1BC4#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B48);
    real r1BC5#3 = RMul(realLit1BC1,r1BC4);
    real r1BC6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B48);
    real r1BC7#5 = RMul(realLit1BC1,r1BC6);
    real r1BC8#3 = RAdd(r1BC3,r1BC5);
    real r1BC9#3 = RAdd(r1BC8,r1BC7);
    real realLit1BCA#3 = 0.1e1;
    real r1BCB#1 = RMul(realLit1BCA,r1BC6);
    real r1BCC#1 = RAdd(r1BC8,r1BCB);
    real realLit1BCD#3 = -0.1e1;
    real r1BCE#1 = RMul(realLit1BCD,r1BC4);
    real r1BCF#1 = RAdd(r1BC3,r1BCE);
    real r1BD0#1 = RAdd(r1BCF,r1BC7);
    tensor[3] tensor1BD1#1 = <tensor[3]>[r1BC9,r1BCC,r1BD0];
    real r1BD2#1 = RMul(realLit1BCD,r1BC6);
    real r1BD3#1 = RAdd(r1BC8,r1BD2);
    real r1BD4#1 = RMul(realLit1BCA,r1BC2);
    real r1BD5#1 = RAdd(r1BD4,r1BC5);
    real r1BD6#1 = RAdd(r1BD5,r1BC7);
    tensor[3] tensor1BD7#1 = <tensor[3]>[r1BD3,r1BC9,r1BD6];
    real r1BD8#1 = RMul(realLit1BCA,r1BC4);
    real r1BD9#1 = RAdd(r1BC3,r1BD8);
    real r1BDA#1 = RAdd(r1BD9,r1BC7);
    real r1BDB#1 = RMul(realLit1BCD,r1BC2);
    real r1BDC#1 = RAdd(r1BDB,r1BC5);
    real r1BDD#1 = RAdd(r1BDC,r1BC7);
    tensor[3] tensor1BDE#1 = <tensor[3]>[r1BDA,r1BDD,r1BC9];
    tensor[3] projParam1C00#1 = tensor1BD1;
    real vdot1C01#1 = VDot<3>(op1_e3_l_171B9A,projParam1C00);
    tensor[3] projParam1C02#1 = tensor1BD7;
    real vdot1C03#1 = VDot<3>(op1_e3_l_171B9A,projParam1C02);
    tensor[3] projParam1C04#1 = tensor1BDE;
    real vdot1C05#1 = VDot<3>(op1_e3_l_171B9A,projParam1C04);
    tensor[3] op1_e3_l_471BFF#1 = <tensor[3]>[vdot1C01,vdot1C03,vdot1C05];
    tensor[3] op1_e3_l_501C0E#3 = VScale<3>(op1_e3_l_91B52,op1_e3_l_471BFF);
    real r1C12#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C0E);
    real r1C13#3 = RMul(op1_e3_l_381BB7,op1_e3_l_91B52);
    real r1C14#2 = RMul(r1C13,r1C12);
    real r1C15#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C0E);
    real r1C16#2 = RMul(r1C13,r1C15);
    real r1C17#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C0E);
    real r1C18#2 = RMul(r1C13,r1C17);
    tensor[3] camV1C11#1 = <tensor[3]>[r1C14,r1C16,r1C18];
    globals.camV1ACD = camV1C11;
    real _t1C23#1 = 0.314159265358979323846264338327950288e1;
    real _t1C25#1 = 0.36e3;
    real op1_e3_l_51C27#1 = RMul(camFOV1B1E,_t1C23);
    real op1_e3_l_61C2A#1 = RDiv(op1_e3_l_51C27,_t1C25);
    real op1_e3_l_101C2D#2 = Tan(op1_e3_l_61C2A);
    real camVmax1C30#1 = RMul(op1_e3_l_101C2D,camDist1B4E);
    globals.camVmax1ACE = camVmax1C30;
    real _t1C34#1 = IntToReal(iresU1B20);
    real _t1C36#1 = IntToReal(iresV1B22);
    real r1C39#1 = RMul(_t1C34,op1_e3_l_101C2D);
    real op1_e3_l_141C38#1 = RMul(r1C39,camDist1B4E);
    real camUmax1C3D#1 = RDiv(op1_e3_l_141C38,_t1C36);
    globals.camUmax1ACF = camUmax1C3D;
    real op1_e3_l_31C43#1 = VDot<3>(lightVsp1B24,lightVsp1B24);
    real op1_e3_l_41C46#1 = Sqrt(op1_e3_l_31C43);
    real realLit1C4A#1 = 0.1e1;
    real op1_e3_l_51C49#1 = RDiv(realLit1C4A,op1_e3_l_41C46);
    real r1C4F#1 = VIndex<3,0>(camU1BBC);
    real r1C50#3 = TensorIndex<tensor[3],[0]>(lightVsp1B24);
    real r1C51#1 = RMul(r1C4F,r1C50);
    real r1C52#1 = r1C14;
    real r1C53#3 = TensorIndex<tensor[3],[1]>(lightVsp1B24);
    real r1C54#1 = RMul(r1C52,r1C53);
    real r1C55#1 = VIndex<3,0>(camN1B57);
    real r1C56#3 = TensorIndex<tensor[3],[2]>(lightVsp1B24);
    real r1C57#1 = RMul(r1C55,r1C56);
    real r1C58#1 = RAdd(r1C51,r1C54);
    real r1C59#1 = RAdd(r1C58,r1C57);
    real r1C5A#1 = VIndex<3,1>(camU1BBC);
    real r1C5B#1 = RMul(r1C5A,r1C50);
    real r1C5C#1 = r1C16;
    real r1C5D#1 = RMul(r1C5C,r1C53);
    real r1C5E#1 = VIndex<3,1>(camN1B57);
    real r1C5F#1 = RMul(r1C5E,r1C56);
    real r1C60#1 = RAdd(r1C5B,r1C5D);
    real r1C61#1 = RAdd(r1C60,r1C5F);
    real r1C62#1 = VIndex<3,2>(camU1BBC);
    real r1C63#1 = RMul(r1C62,r1C50);
    real r1C64#1 = r1C18;
    real r1C65#1 = RMul(r1C64,r1C53);
    real r1C66#1 = VIndex<3,2>(camN1B57);
    real r1C67#1 = RMul(r1C66,r1C56);
    real r1C68#1 = RAdd(r1C63,r1C65);
    real r1C69#1 = RAdd(r1C68,r1C67);
    tensor[3] op1_e3_l_61C4E#1 = <tensor[3]>[r1C59,r1C61,r1C69];
    tensor[3] light1C87#1 = VScale<3>(op1_e3_l_51C49,op1_e3_l_61C4E);
    globals.light1AD0 = light1C87;
    globals._t1AD1 = _t1B40;
    globals._tX1AD2 = _t1B3E;
    globals.c1AD3 = c1B3C;
    globals.I1AD6 = I1B42;
    return
## strand
  strand raycast (int ui1C92#2, int vi1C93#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1C9E:  preds = []
        int iresU1C9F#1 = globals.iresU1ABE;
        int iresV1CA1#1 = globals.iresV1ABF;
        real camNear1CA3#1 = globals.camNear1AC0;
        real camDist1CA5#1 = globals.camDist1ACA;
        tensor[3] camN1CA7#1 = globals.camN1ACB;
        tensor[3] camU1CA9#1 = globals.camU1ACC;
        tensor[3] camV1CAB#1 = globals.camV1ACD;
        real camVmax1CAD#4 = globals.camVmax1ACE;
        real camUmax1CAF#2 = globals.camUmax1ACF;
        real _t1CB1#5 = -0.5e0;
        real _t1CB3#1 = IntToReal(ui1C92);
        real _t1CB5#1 = IntToReal(iresU1C9F);
        real _t1CB7#3 = 0.5e0;
        real op1_e3_l_61CB9#1 = RSub(_t1CB5,_t1CB7);
        real op1_e3_l_71CBC#1 = RSub(_t1CB3,_t1CB1);
        real op1_e3_l_81CBF#1 = RSub(op1_e3_l_61CB9,_t1CB1);
        real op1_e3_l_91CC2#2 = RNeg(camUmax1CAF);
        real op1_e3_l_101CC5#1 = RDiv(op1_e3_l_71CBC,op1_e3_l_81CBF);
        real op1_e3_l_111CC8#1 = RSub(camUmax1CAF,op1_e3_l_91CC2);
        real op1_e3_l_131CCB#1 = RMul(op1_e3_l_101CC5,op1_e3_l_111CC8);
        real rayU1CCE#2 = RAdd(op1_e3_l_91CC2,op1_e3_l_131CCB);
        real _t1CD1#1 = IntToReal(vi1C93);
        real _t1CD3#2 = IntToReal(iresV1CA1);
        real op1_e3_l_61CD5#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_71CD8#2 = RSub(_t1CD1,_t1CB1);
        real op1_e3_l_81CDB#1 = RSub(op1_e3_l_61CD5,_t1CB1);
        real op1_e3_l_91CDE#1 = RNeg(camVmax1CAD);
        real op1_e3_l_101CE1#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_81CDB);
        real op1_e3_l_111CE4#2 = RSub(op1_e3_l_91CDE,camVmax1CAD);
        real op1_e3_l_121CE7#1 = RMul(op1_e3_l_101CE1,op1_e3_l_111CE4);
        real rayV1CEA#1 = RAdd(camVmax1CAD,op1_e3_l_121CE7);
        real op1_e3_l_251CED#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_271CF0#1 = RSub(op1_e3_l_251CED,_t1CB1);
        real op1_e3_l_291CF3#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_271CF0);
        real op1_e3_l_311CF6#1 = RMul(op1_e3_l_291CF3,op1_e3_l_111CE4);
        real op1_e3_l_321CF9#1 = RAdd(camVmax1CAD,op1_e3_l_311CF6);
        tensor[3] op1_e3_l_331CFC#1 = VScale<3>(rayU1CCE,camU1CA9);
        tensor[3] op1_e3_l_341CFF#1 = VScale<3>(op1_e3_l_321CF9,camV1CAB);
        tensor[3] op1_e3_l_351D02#3 = VAdd<3>(op1_e3_l_331CFC,op1_e3_l_341CFF);
        real realLit1D06#1 = 0.1e1;
        real r1D07#3 = RDiv(realLit1D06,camDist1CA5);
        real r1D08#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D02);
        real r1D09#1 = RMul(r1D07,r1D08);
        real r1D0A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D02);
        real r1D0B#1 = RMul(r1D07,r1D0A);
        real r1D0C#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D02);
        real r1D0D#1 = RMul(r1D07,r1D0C);
        tensor[3] op1_e3_l_361D05#1 = <tensor[3]>[r1D09,r1D0B,r1D0D];
        tensor[3] rayVec1D18#1 = VAdd<3>(camN1CA7,op1_e3_l_361D05);
        real transp1D1B#1 = 0.1e1;
        real _t1D1D#8 = 0.e0;
        tensor[3] rgb1D1F#1 = <tensor[3]>[_t1D1D,_t1D1D,_t1D1D];
        tensor[4] rgba1D21#1 = <tensor[4]>[_t1D1D,_t1D1D,_t1D1D,_t1D1D];
        self.rayU = rayU1CCE;
        self.rayV = rayV1CEA;
        self.rayN = camNear1CA3;
        self.rayVec = rayVec1D18;
        self.transp = transp1D1B;
        self.rgb = rgb1D1F;
        self.rgba = rgba1D21;
        self.gray = _t1D1D;
        self.ui = ui1C92;
        self.vi = vi1C93;
        return
    end state init
    method update
        ENTRY1D2E:  preds = []
          image(IMAGE1D<double[3]>) I1D2F#17 = globals.I1AD6;
          real isoval1D31#1 = globals.isoval1AB8;
          femData:Mesh _t1D33#17 = globals._t1AD1;
          femData:Space _t1D35#10 = globals._tX1AD2;
          femData:FemFunc c1D37#10 = globals.c1AD3;
          femData:Mesh a1D3D#1 = globals.a1AB5;
          real thick1D3F#1 = globals.thick1AB9;
          tensor[3] camEye1D41#1 = globals.camEye1ABA;
          real camNear1D43#2 = globals.camNear1AC0;
          real camFar1D45#2 = globals.camFar1AC1;
          real refStep1D47#1 = globals.refStep1AC2;
          real rayStep1D49#2 = globals.rayStep1AC3;
          real phongKa1D4B#1 = globals.phongKa1AC5;
          real phongKd1D4D#1 = globals.phongKd1AC6;
          bool debug1D4F#1 = globals.debug1AC7;
          int su1D51#1 = globals.su1AC8;
          int sv1D53#1 = globals.sv1AC9;
          tensor[3] light1D55#1 = globals.light1AD0;
          real rayN1D57#4 = self.rayN;
          tensor[3] rayVec1D59#3 = self.rayVec;
          real transp1D5B#10 = self.transp;
          tensor[3] rgb1D5D#9 = self.rgb;
          int ui1D5F#1 = self.ui;
          int vi1D61#1 = self.vi;
          if debug1D4F then goto ASSIGN1D65 else goto JOIN1D6F
        ASSIGN1D65:  preds = [COND1D63]
          bool _t1D64#1 = NEQ<int>(ui1D5F,su1D51);
          if _t1D64 then goto ASSIGN1D68 else goto ASSIGN2E4B
        ASSIGN1D68:  preds = [COND1D66]
          bool _t1D67#1 = true;
          goto JOIN1D6B
        JOIN1D6B:  preds = [ASSIGN1D68,ASSIGN2E4B]
          bool _t1D69#1 = phi(_t1D67,_t1D6A)
          if _t1D69 then goto STABILIZE1D6D else goto JOIN1D6E
        STABILIZE1D6D:  preds = [COND1D6C]
          stabilize
          goto JOIN1D6E
        JOIN1D6E:  preds = [*STABILIZE1D6D,COND1D6C]
          goto JOIN1D6F
        JOIN1D6F:  preds = [JOIN1D6E,COND1D63]
          tensor[3] op1_e3_l_31D70#1 = VScale<3>(rayN1D57,rayVec1D59);
          tensor[3] x1D73#5 = VAdd<3>(camEye1D41,op1_e3_l_31D70);
          real _t1D76#8 = 0.e0;
          real _t1D78#2 = VIndex<3,0>(x1D73);
          bool _t1D7A#1 = LTE<real>(_t1D76,_t1D78);
          if _t1D7A then goto ASSIGN1D7E else goto JOIN2E01
        ASSIGN1D7E:  preds = [COND1D7C]
          real _t1D7D#11 = 0.1e1;
          bool _t1D7F#1 = LTE<real>(_t1D78,_t1D7D);
          if _t1D7F then goto ASSIGN1D83 else goto JOIN2DFE
        ASSIGN1D83:  preds = [COND1D81]
          real _t1D82#2 = VIndex<3,1>(x1D73);
          bool _t1D84#1 = LTE<real>(_t1D76,_t1D82);
          if _t1D84 then goto ASSIGN1D88 else goto JOIN2DFB
        ASSIGN1D88:  preds = [COND1D86]
          bool _t1D87#1 = LTE<real>(_t1D82,_t1D7D);
          if _t1D87 then goto ASSIGN1D8B else goto JOIN2DF8
        ASSIGN1D8B:  preds = [COND1D89]
          real _t1D8A#2 = VIndex<3,2>(x1D73);
          bool _t1D8C#1 = LTE<real>(_t1D76,_t1D8A);
          if _t1D8C then goto ASSIGN1D90 else goto JOIN2DF5
        ASSIGN1D90:  preds = [COND1D8E]
          bool _t1D8F#1 = LTE<real>(_t1D8A,_t1D7D);
          if _t1D8F then goto ASSIGN24EE else goto JOIN2DF2
        ASSIGN24EE:  preds = [COND1D91]
          femData:MeshPos p1D92#1 = findPos1D93 (a1D3D,x1D73);
          bool _t24EF#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1D92);
          if _t24EF then goto ASSIGN24F3 else goto JOIN2DEF
        ASSIGN24F3:  preds = [COND24F1]
          real _t24F2#1 = 0.13e1;
          femData:MeshPos callFindPos24F4#2 = findPos1D93 (_t1D33,x1D73);
          int intPos24F6#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F4);
          tensor[3] refPos24F8#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F4);
          int ilit24FB#1 = 10;
          int mulRes24FC#10 = IMul(intPos24F6,ilit24FB);
          int addRes24FE#1 = mulRes24FC;
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes24FE);
          int ilit2500#1 = 1;
          int addRes2501#1 = IAdd(mulRes24FC,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2501);
          int ilit2503#1 = 2;
          int addRes2504#1 = IAdd(mulRes24FC,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2504);
          int ilit2506#1 = 3;
          int addRes2507#1 = IAdd(mulRes24FC,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2507);
          int ilit2509#1 = 4;
          int addRes250A#1 = IAdd(mulRes24FC,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250A);
          int ilit250C#1 = 5;
          int addRes250D#1 = IAdd(mulRes24FC,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250D);
          int ilit250F#1 = 6;
          int addRes2510#1 = IAdd(mulRes24FC,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2510);
          int ilit2512#1 = 7;
          int addRes2513#1 = IAdd(mulRes24FC,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2513);
          int ilit2515#1 = 8;
          int addRes2516#1 = IAdd(mulRes24FC,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2516);
          int ilit2518#1 = 9;
          int addRes2519#1 = IAdd(mulRes24FC,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2519);
          int ilit253F#10 = 1;
          int idx2541#1 = idx24FF;
          int mulRes2542#1 = IMul(ilit253F,idx2541);
          int idx2543#1 = idx2502;
          int mulRes2544#1 = IMul(ilit253F,idx2543);
          int idx2546#1 = idx2505;
          int mulRes2547#1 = IMul(ilit253F,idx2546);
          int idx2549#1 = idx2508;
          int mulRes254A#1 = IMul(ilit253F,idx2549);
          int idx254C#1 = idx250B;
          int mulRes254D#1 = IMul(ilit253F,idx254C);
          int idx254F#1 = idx250E;
          int mulRes2550#1 = IMul(ilit253F,idx254F);
          int idx2552#1 = idx2511;
          int mulRes2553#1 = IMul(ilit253F,idx2552);
          int idx2555#1 = idx2514;
          int mulRes2556#1 = IMul(ilit253F,idx2555);
          int idx2558#1 = idx2517;
          int mulRes2559#1 = IMul(ilit253F,idx2558);
          int idx255B#1 = idx251A;
          int mulRes255C#1 = IMul(ilit253F,idx255B);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2542);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2544);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2547);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254A);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254D);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2550);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2553);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2556);
          real dof2565#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2559);
          real dof2566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes255C);
          tensor[10] dofs2567#1 = <tensor[10]>[dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564,dof2565,dof2566];
          tensor[10] femDofs253E#4 = dofs2567;
          real varAcc2593#2 = VIndex<3,0>(refPos24F8);
          real varAcc2594#2 = VIndex<3,1>(refPos24F8);
          real varAcc2595#2 = VIndex<3,2>(refPos24F8);
          real coeff2596#3 = 0.2e1;
          real iden2597#4 = varAcc2593;
          real prod22598#1 = RMul(iden2597,varAcc2593);
          real one2599#13 = 0.1e1;
          real prod259A#3 = RMul(one2599,one2599);
          real prod259B#2 = RMul(prod22598,prod259A);
          real coeff259C#6 = 0.4e1;
          real iden259D#3 = varAcc2594;
          real prod259E#2 = RMul(iden259D,one2599);
          real prod259F#2 = RMul(iden2597,prod259E);
          real iden25A0#3 = varAcc2595;
          real prod25A1#2 = RMul(one2599,iden25A0);
          real prod25A2#2 = RMul(iden2597,prod25A1);
          real coeff25A3#3 = -0.3e1;
          real prod25A4#3 = RMul(iden2597,prod259A);
          real prod225A5#1 = RMul(iden259D,varAcc2594);
          real prod25A6#1 = RMul(prod225A5,one2599);
          real prod25A7#2 = RMul(one2599,prod25A6);
          real prod25A8#1 = RMul(iden259D,iden25A0);
          real prod25A9#2 = RMul(one2599,prod25A8);
          real prod25AA#3 = RMul(one2599,prod259E);
          real prod225AB#1 = RMul(iden25A0,varAcc2595);
          real prod25AC#1 = RMul(one2599,prod225AB);
          real prod25AD#2 = RMul(one2599,prod25AC);
          real prod25AE#3 = RMul(one2599,prod25A1);
          real prod25AF#1 = RMul(one2599,prod259A);
          real mult25B0#1 = RMul(one2599,prod25AF);
          real mult25B1#1 = RMul(coeff25A3,prod25AE);
          real mult25B2#2 = RMul(coeff2596,prod25AD);
          real mult25B3#1 = RMul(coeff25A3,prod25AA);
          real mult25B4#2 = RMul(coeff259C,prod25A9);
          real mult25B5#2 = RMul(coeff2596,prod25A7);
          real mult25B6#1 = RMul(coeff25A3,prod25A4);
          real mult25B7#2 = RMul(coeff259C,prod25A2);
          real mult25B8#2 = RMul(coeff259C,prod259F);
          real mult25B9#2 = RMul(coeff2596,prod259B);
          real sum25BA#1 = RAdd(mult25B8,mult25B9);
          real sum25BB#1 = RAdd(mult25B7,sum25BA);
          real sum25BC#1 = RAdd(mult25B6,sum25BB);
          real sum25BD#1 = RAdd(mult25B5,sum25BC);
          real sum25BE#1 = RAdd(mult25B4,sum25BD);
          real sum25BF#1 = RAdd(mult25B3,sum25BE);
          real sum25C0#1 = RAdd(mult25B2,sum25BF);
          real sum25C1#1 = RAdd(mult25B1,sum25C0);
          real sum25C2#1 = RAdd(mult25B0,sum25C1);
          real intermediate25C3#1 = sum25C2;
          real coeff25C4#3 = -0.1e1;
          real mult25C5#1 = RMul(coeff25C4,prod25A4);
          real sum25C6#1 = RAdd(mult25C5,mult25B9);
          real intermediate25C7#1 = sum25C6;
          real mult25C8#1 = RMul(coeff25C4,prod25AA);
          real sum25C9#1 = RAdd(mult25C8,mult25B5);
          real intermediate25CA#1 = sum25C9;
          real mult25CB#1 = RMul(coeff25C4,prod25AE);
          real sum25CC#1 = RAdd(mult25CB,mult25B2);
          real intermediate25CD#1 = sum25CC;
          real coeff25CE#6 = -0.4e1;
          real mult25CF#1 = RMul(coeff259C,prod25AE);
          real mult25D0#1 = RMul(coeff25CE,prod25AD);
          real mult25D1#2 = RMul(coeff25CE,prod25A9);
          real mult25D2#2 = RMul(coeff25CE,prod25A2);
          real sum25D3#1 = RAdd(mult25D1,mult25D2);
          real sum25D4#1 = RAdd(mult25D0,sum25D3);
          real sum25D5#1 = RAdd(mult25CF,sum25D4);
          real intermediate25D6#1 = sum25D5;
          real mult25D7#1 = RMul(coeff259C,prod25AA);
          real mult25D8#1 = RMul(coeff25CE,prod25A7);
          real mult25D9#2 = RMul(coeff25CE,prod259F);
          real sum25DA#1 = RAdd(mult25D8,mult25D9);
          real sum25DB#1 = RAdd(mult25D1,sum25DA);
          real sum25DC#1 = RAdd(mult25D7,sum25DB);
          real intermediate25DD#1 = sum25DC;
          real mult25DE#1 = RMul(coeff259C,prod25A4);
          real mult25DF#1 = RMul(coeff25CE,prod259B);
          real sum25E0#1 = RAdd(mult25D9,mult25DF);
          real sum25E1#1 = RAdd(mult25D2,sum25E0);
          real sum25E2#1 = RAdd(mult25DE,sum25E1);
          real intermediate25E3#1 = sum25E2;
          tensor[10] intermediateCons25E4#1 = <tensor[10]>[intermediate25C3,intermediate25C7,intermediate25CA,intermediate25CD,mult25B4,mult25B7,mult25B8,intermediate25D6,intermediate25DD,intermediate25E3];
          tensor[10] basisResult2592#1 = intermediateCons25E4;
          real compositionl2638#2 = VDot<10>(femDofs253E,basisResult2592);
          real op1_e3_l_23263B#1 = RSub(compositionl2638,isoval1D31);
          real varAcc263F#1 = VIndex<3,0>(refPos24F8);
          real varAcc2640#1 = VIndex<3,1>(refPos24F8);
          real varAcc2641#1 = VIndex<3,2>(refPos24F8);
          real coeff2642#4 = 0.4e1;
          real iden2643#1 = varAcc263F;
          real one2644#7 = 0.1e1;
          real prod2645#2 = RMul(one2644,one2644);
          real prod2646#3 = RMul(iden2643,prod2645);
          real iden2647#1 = varAcc2640;
          real prod2648#1 = RMul(iden2647,one2644);
          real prod2649#3 = RMul(one2644,prod2648);
          real iden264A#1 = varAcc2641;
          real prod264B#1 = RMul(one2644,iden264A);
          real prod264C#3 = RMul(one2644,prod264B);
          real coeff264D#1 = -0.3e1;
          real prod264E#3 = RMul(one2644,prod2645);
          real mult264F#1 = RMul(coeff264D,prod264E);
          real mult2650#4 = RMul(coeff2642,prod264C);
          real mult2651#4 = RMul(coeff2642,prod2649);
          real mult2652#4 = RMul(coeff2642,prod2646);
          real sum2653#1 = RAdd(mult2651,mult2652);
          real sum2654#1 = RAdd(mult2650,sum2653);
          real sum2655#3 = RAdd(mult264F,sum2654);
          real intermediate2656#1 = sum2655;
          real coeff2657#1 = -0.1e1;
          real mult2658#3 = RMul(coeff2657,prod264E);
          real sum2659#1 = RAdd(mult2658,mult2652);
          real intermediate265A#1 = sum2659;
          real basisEval265B#9 = 0.e0;
          real coeff265C#3 = -0.4e1;
          real basisEval265D#4 = RMul(coeff265C,prod264C);
          real basisEval265E#4 = RMul(coeff265C,prod2649);
          real coeff265F#3 = -0.8e1;
          real mult2660#3 = RMul(coeff2642,prod264E);
          real mult2661#1 = RMul(coeff265F,prod2646);
          real sum2662#1 = RAdd(basisEval265E,mult2661);
          real sum2663#1 = RAdd(basisEval265D,sum2662);
          real sum2664#1 = RAdd(mult2660,sum2663);
          real intermediate2665#1 = sum2664;
          real intermediate2666#1 = sum2655;
          real sum2667#1 = RAdd(mult2658,mult2651);
          real intermediate2668#1 = sum2667;
          real mult2669#1 = RMul(coeff265F,prod2649);
          real mult266A#4 = RMul(coeff265C,prod2646);
          real sum266B#1 = RAdd(mult2669,mult266A);
          real sum266C#1 = RAdd(basisEval265D,sum266B);
          real sum266D#1 = RAdd(mult2660,sum266C);
          real intermediate266E#1 = sum266D;
          real intermediate266F#1 = sum2655;
          real sum2670#1 = RAdd(mult2658,mult2650);
          real intermediate2671#1 = sum2670;
          real mult2672#1 = RMul(coeff265F,prod264C);
          real sum2673#1 = RAdd(basisEval265E,mult266A);
          real sum2674#1 = RAdd(mult2672,sum2673);
          real sum2675#1 = RAdd(mult2660,sum2674);
          real intermediate2676#1 = sum2675;
          tensor[10] intermediateCons2677#1 = <tensor[10]>[intermediate2656,intermediate265A,basisEval265B,basisEval265B,basisEval265B,mult2650,mult2651,basisEval265D,basisEval265E,intermediate2665];
          tensor[10] intermediateCons2678#1 = <tensor[10]>[intermediate2666,basisEval265B,intermediate2668,basisEval265B,mult2650,basisEval265B,mult2652,basisEval265D,intermediate266E,mult266A];
          tensor[10] intermediateCons2679#1 = <tensor[10]>[intermediate266F,basisEval265B,basisEval265B,intermediate2671,mult2651,mult2652,basisEval265B,intermediate2676,basisEval265E,mult266A];
          tensor[10] projParam26B9#1 = intermediateCons2677;
          real vdot26BA#1 = VDot<10>(femDofs253E,projParam26B9);
          tensor[10] projParam26BB#1 = intermediateCons2678;
          real vdot26BC#1 = VDot<10>(femDofs253E,projParam26BB);
          tensor[10] projParam26BD#1 = intermediateCons2679;
          real vdot26BE#1 = VDot<10>(femDofs253E,projParam26BD);
          int ilit26C8#1 = 4;
          int mulRes26C9#4 = IMul(intPos24F6,ilit26C8);
          int addRes26CB#1 = mulRes26C9;
          int idx26CC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CB);
          int ilit26CD#1 = 1;
          int addRes26CE#1 = IAdd(mulRes26C9,ilit26CD);
          int idx26CF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CE);
          int ilit26D0#1 = 2;
          int addRes26D1#1 = IAdd(mulRes26C9,ilit26D0);
          int idx26D2#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D1);
          int ilit26D3#1 = 3;
          int addRes26D4#1 = IAdd(mulRes26C9,ilit26D3);
          int idx26D5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D4);
          int ilit26E9#4 = 3;
          int idx26EA#1 = idx26CC;
          int mulRes26EB#3 = IMul(ilit26E9,idx26EA);
          int addRes26EC#1 = mulRes26EB;
          int ilit26ED#4 = 1;
          int addRes26EE#1 = IAdd(ilit26ED,mulRes26EB);
          int ilit26EF#4 = 2;
          int addRes26F0#1 = IAdd(ilit26EF,mulRes26EB);
          real dof_load26F1#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EC);
          real dof_load26F2#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EE);
          real dof_load26F3#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F0);
          int idx26F5#1 = idx26CF;
          int mulRes26F6#3 = IMul(ilit26E9,idx26F5);
          int addRes26F7#1 = mulRes26F6;
          int addRes26F8#1 = IAdd(ilit26ED,mulRes26F6);
          int addRes26F9#1 = IAdd(ilit26EF,mulRes26F6);
          real dof_load26FA#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F7);
          real dof_load26FB#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F8);
          real dof_load26FC#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F9);
          int idx26FE#1 = idx26D2;
          int mulRes26FF#3 = IMul(ilit26E9,idx26FE);
          int addRes2700#1 = mulRes26FF;
          int addRes2701#1 = IAdd(ilit26ED,mulRes26FF);
          int addRes2702#1 = IAdd(ilit26EF,mulRes26FF);
          real dof_load2703#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2700);
          real dof_load2704#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2701);
          real dof_load2705#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2702);
          int idx2707#1 = idx26D5;
          int mulRes2708#3 = IMul(ilit26E9,idx2707);
          int addRes2709#1 = mulRes2708;
          int addRes270A#1 = IAdd(ilit26ED,mulRes2708);
          int addRes270B#1 = IAdd(ilit26EF,mulRes2708);
          real dof_load270C#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2709);
          real dof_load270D#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270A);
          real dof_load270E#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270B);
          real coeff273F#1 = -0.1e1;
          real one2740#4 = 0.1e1;
          real prod2741#1 = RMul(one2740,one2740);
          real prod2742#2 = RMul(one2740,prod2741);
          real basisEval2743#6 = RMul(coeff273F,prod2742);
          real basisEval2744#6 = RMul(one2740,prod2742);
          real basisEval2745#12 = 0.e0;
          real r275A#3 = dof_load26F1;
          real r275B#3 = basisEval2743;
          real r275C#1 = RMul(r275A,r275B);
          real r275D#3 = dof_load26FA;
          real r275E#3 = basisEval2744;
          real r275F#1 = RMul(r275D,r275E);
          real r2760#3 = dof_load2703;
          real r2761#3 = basisEval2745;
          real r2762#1 = RMul(r2760,r2761);
          real r2763#3 = dof_load270C;
          real r2764#3 = basisEval2745;
          real r2765#1 = RMul(r2763,r2764);
          real r2766#1 = RAdd(r275C,r275F);
          real r2767#1 = RAdd(r2766,r2762);
          real r2768#2 = RAdd(r2767,r2765);
          real r2769#3 = basisEval2743;
          real r276A#1 = RMul(r275A,r2769);
          real r276B#3 = basisEval2745;
          real r276C#1 = RMul(r275D,r276B);
          real r276D#3 = basisEval2744;
          real r276E#1 = RMul(r2760,r276D);
          real r276F#3 = basisEval2745;
          real r2770#1 = RMul(r2763,r276F);
          real r2771#1 = RAdd(r276A,r276C);
          real r2772#1 = RAdd(r2771,r276E);
          real r2773#2 = RAdd(r2772,r2770);
          real r2774#3 = basisEval2743;
          real r2775#1 = RMul(r275A,r2774);
          real r2776#3 = basisEval2745;
          real r2777#1 = RMul(r275D,r2776);
          real r2778#3 = basisEval2745;
          real r2779#1 = RMul(r2760,r2778);
          real r277A#3 = basisEval2744;
          real r277B#1 = RMul(r2763,r277A);
          real r277C#1 = RAdd(r2775,r2777);
          real r277D#1 = RAdd(r277C,r2779);
          real r277E#2 = RAdd(r277D,r277B);
          real r2780#3 = dof_load26F2;
          real r2781#1 = RMul(r2780,r275B);
          real r2782#3 = dof_load26FB;
          real r2783#1 = RMul(r2782,r275E);
          real r2784#3 = dof_load2704;
          real r2785#1 = RMul(r2784,r2761);
          real r2786#3 = dof_load270D;
          real r2787#1 = RMul(r2786,r2764);
          real r2788#1 = RAdd(r2781,r2783);
          real r2789#1 = RAdd(r2788,r2785);
          real r278A#2 = RAdd(r2789,r2787);
          real r278B#1 = RMul(r2780,r2769);
          real r278C#1 = RMul(r2782,r276B);
          real r278D#1 = RMul(r2784,r276D);
          real r278E#1 = RMul(r2786,r276F);
          real r278F#1 = RAdd(r278B,r278C);
          real r2790#1 = RAdd(r278F,r278D);
          real r2791#2 = RAdd(r2790,r278E);
          real r2792#1 = RMul(r2780,r2774);
          real r2793#1 = RMul(r2782,r2776);
          real r2794#1 = RMul(r2784,r2778);
          real r2795#1 = RMul(r2786,r277A);
          real r2796#1 = RAdd(r2792,r2793);
          real r2797#1 = RAdd(r2796,r2794);
          real r2798#2 = RAdd(r2797,r2795);
          real r279A#3 = dof_load26F3;
          real r279B#1 = RMul(r279A,r275B);
          real r279C#3 = dof_load26FC;
          real r279D#1 = RMul(r279C,r275E);
          real r279E#3 = dof_load2705;
          real r279F#1 = RMul(r279E,r2761);
          real r27A0#3 = dof_load270E;
          real r27A1#1 = RMul(r27A0,r2764);
          real r27A2#1 = RAdd(r279B,r279D);
          real r27A3#1 = RAdd(r27A2,r279F);
          real r27A4#2 = RAdd(r27A3,r27A1);
          real r27A5#1 = RMul(r279A,r2769);
          real r27A6#1 = RMul(r279C,r276B);
          real r27A7#1 = RMul(r279E,r276D);
          real r27A8#1 = RMul(r27A0,r276F);
          real r27A9#1 = RAdd(r27A5,r27A6);
          real r27AA#1 = RAdd(r27A9,r27A7);
          real r27AB#2 = RAdd(r27AA,r27A8);
          real r27AC#1 = RMul(r279A,r2774);
          real r27AD#1 = RMul(r279C,r2776);
          real r27AE#1 = RMul(r279E,r2778);
          real r27AF#1 = RMul(r27A0,r277A);
          real r27B0#1 = RAdd(r27AC,r27AD);
          real r27B1#1 = RAdd(r27B0,r27AE);
          real r27B2#2 = RAdd(r27B1,r27AF);
          real realLit2811#9 = 0.e0;
          real r2812#3 = r2768;
          real r2813#3 = RMul(realLit2811,r2812);
          real r2814#3 = r278A;
          real r2815#3 = RMul(realLit2811,r2814);
          real r2816#3 = r27A4;
          real r2817#5 = RMul(realLit2811,r2816);
          real r2818#3 = RAdd(r2813,r2815);
          real r2819#3 = RAdd(r2818,r2817);
          real r281A#3 = r2773;
          real r281B#3 = RMul(realLit2811,r281A);
          real r281C#3 = r2791;
          real r281D#3 = RMul(realLit2811,r281C);
          real r281E#3 = r27AB;
          real r281F#5 = RMul(realLit2811,r281E);
          real r2820#3 = RAdd(r281B,r281D);
          real r2821#3 = RAdd(r2820,r281F);
          real r2822#3 = r277E;
          real r2823#3 = RMul(realLit2811,r2822);
          real r2824#3 = r2798;
          real r2825#3 = RMul(realLit2811,r2824);
          real r2826#3 = r27B2;
          real r2827#5 = RMul(realLit2811,r2826);
          real r2828#3 = RAdd(r2823,r2825);
          real r2829#3 = RAdd(r2828,r2827);
          real realLit282B#9 = -0.1e1;
          real r282C#1 = RMul(realLit282B,r2816);
          real r282D#1 = RAdd(r2818,r282C);
          real r282E#1 = RMul(realLit282B,r281E);
          real r282F#1 = RAdd(r2820,r282E);
          real r2830#1 = RMul(realLit282B,r2826);
          real r2831#1 = RAdd(r2828,r2830);
          real realLit2833#9 = 0.1e1;
          real r2834#1 = RMul(realLit2833,r2814);
          real r2835#1 = RAdd(r2813,r2834);
          real r2836#1 = RAdd(r2835,r2817);
          real r2837#1 = RMul(realLit2833,r281C);
          real r2838#1 = RAdd(r281B,r2837);
          real r2839#1 = RAdd(r2838,r281F);
          real r283A#1 = RMul(realLit2833,r2824);
          real r283B#1 = RAdd(r2823,r283A);
          real r283C#1 = RAdd(r283B,r2827);
          real r283F#1 = RMul(realLit2833,r2816);
          real r2840#1 = RAdd(r2818,r283F);
          real r2841#1 = RMul(realLit2833,r281E);
          real r2842#1 = RAdd(r2820,r2841);
          real r2843#1 = RMul(realLit2833,r2826);
          real r2844#1 = RAdd(r2828,r2843);
          real r2846#1 = RMul(realLit282B,r2812);
          real r2847#1 = RAdd(r2846,r2815);
          real r2848#1 = RAdd(r2847,r2817);
          real r2849#1 = RMul(realLit282B,r281A);
          real r284A#1 = RAdd(r2849,r281D);
          real r284B#1 = RAdd(r284A,r281F);
          real r284C#1 = RMul(realLit282B,r2822);
          real r284D#1 = RAdd(r284C,r2825);
          real r284E#1 = RAdd(r284D,r2827);
          real r2851#1 = RMul(realLit282B,r2814);
          real r2852#1 = RAdd(r2813,r2851);
          real r2853#1 = RAdd(r2852,r2817);
          real r2854#1 = RMul(realLit282B,r281C);
          real r2855#1 = RAdd(r281B,r2854);
          real r2856#1 = RAdd(r2855,r281F);
          real r2857#1 = RMul(realLit282B,r2824);
          real r2858#1 = RAdd(r2823,r2857);
          real r2859#1 = RAdd(r2858,r2827);
          real r285B#1 = RMul(realLit2833,r2812);
          real r285C#1 = RAdd(r285B,r2815);
          real r285D#1 = RAdd(r285C,r2817);
          real r285E#1 = RMul(realLit2833,r281A);
          real r285F#1 = RAdd(r285E,r281D);
          real r2860#1 = RAdd(r285F,r281F);
          real r2861#1 = RMul(realLit2833,r2822);
          real r2862#1 = RAdd(r2861,r2825);
          real r2863#1 = RAdd(r2862,r2827);
          real r28BE#9 = r2768;
          real r28BF#3 = r2819;
          real r28C0#1 = RMul(r28BE,r28BF);
          real r28C1#9 = r278A;
          real r28C2#3 = r2840;
          real r28C3#1 = RMul(r28C1,r28C2);
          real r28C4#9 = r27A4;
          real r28C5#3 = r2853;
          real r28C6#1 = RMul(r28C4,r28C5);
          real r28C7#1 = RAdd(r28C0,r28C3);
          real r28C8#1 = RAdd(r28C7,r28C6);
          real r28C9#3 = r2821;
          real r28CA#1 = RMul(r28BE,r28C9);
          real r28CB#3 = r2842;
          real r28CC#1 = RMul(r28C1,r28CB);
          real r28CD#3 = r2856;
          real r28CE#1 = RMul(r28C4,r28CD);
          real r28CF#1 = RAdd(r28CA,r28CC);
          real r28D0#1 = RAdd(r28CF,r28CE);
          real r28D1#3 = r2829;
          real r28D2#1 = RMul(r28BE,r28D1);
          real r28D3#3 = r2844;
          real r28D4#1 = RMul(r28C1,r28D3);
          real r28D5#3 = r2859;
          real r28D6#1 = RMul(r28C4,r28D5);
          real r28D7#1 = RAdd(r28D2,r28D4);
          real r28D8#1 = RAdd(r28D7,r28D6);
          real r28DA#3 = r282D;
          real r28DB#1 = RMul(r28BE,r28DA);
          real r28DC#3 = r2819;
          real r28DD#1 = RMul(r28C1,r28DC);
          real r28DE#3 = r285D;
          real r28DF#1 = RMul(r28C4,r28DE);
          real r28E0#1 = RAdd(r28DB,r28DD);
          real r28E1#1 = RAdd(r28E0,r28DF);
          real r28E2#3 = r282F;
          real r28E3#1 = RMul(r28BE,r28E2);
          real r28E4#3 = r2821;
          real r28E5#1 = RMul(r28C1,r28E4);
          real r28E6#3 = r2860;
          real r28E7#1 = RMul(r28C4,r28E6);
          real r28E8#1 = RAdd(r28E3,r28E5);
          real r28E9#1 = RAdd(r28E8,r28E7);
          real r28EA#3 = r2831;
          real r28EB#1 = RMul(r28BE,r28EA);
          real r28EC#3 = r2829;
          real r28ED#1 = RMul(r28C1,r28EC);
          real r28EE#3 = r2863;
          real r28EF#1 = RMul(r28C4,r28EE);
          real r28F0#1 = RAdd(r28EB,r28ED);
          real r28F1#1 = RAdd(r28F0,r28EF);
          real r28F3#3 = r2836;
          real r28F4#1 = RMul(r28BE,r28F3);
          real r28F5#3 = r2848;
          real r28F6#1 = RMul(r28C1,r28F5);
          real r28F7#3 = r2819;
          real r28F8#1 = RMul(r28C4,r28F7);
          real r28F9#1 = RAdd(r28F4,r28F6);
          real r28FA#1 = RAdd(r28F9,r28F8);
          real r28FB#3 = r2839;
          real r28FC#1 = RMul(r28BE,r28FB);
          real r28FD#3 = r284B;
          real r28FE#1 = RMul(r28C1,r28FD);
          real r28FF#3 = r2821;
          real r2900#1 = RMul(r28C4,r28FF);
          real r2901#1 = RAdd(r28FC,r28FE);
          real r2902#1 = RAdd(r2901,r2900);
          real r2903#3 = r283C;
          real r2904#1 = RMul(r28BE,r2903);
          real r2905#3 = r284E;
          real r2906#1 = RMul(r28C1,r2905);
          real r2907#3 = r2829;
          real r2908#1 = RMul(r28C4,r2907);
          real r2909#1 = RAdd(r2904,r2906);
          real r290A#1 = RAdd(r2909,r2908);
          real r290D#9 = r2773;
          real r290E#1 = RMul(r290D,r28BF);
          real r290F#9 = r2791;
          real r2910#1 = RMul(r290F,r28C2);
          real r2911#9 = r27AB;
          real r2912#1 = RMul(r2911,r28C5);
          real r2913#1 = RAdd(r290E,r2910);
          real r2914#1 = RAdd(r2913,r2912);
          real r2915#1 = RMul(r290D,r28C9);
          real r2916#1 = RMul(r290F,r28CB);
          real r2917#1 = RMul(r2911,r28CD);
          real r2918#1 = RAdd(r2915,r2916);
          real r2919#1 = RAdd(r2918,r2917);
          real r291A#1 = RMul(r290D,r28D1);
          real r291B#1 = RMul(r290F,r28D3);
          real r291C#1 = RMul(r2911,r28D5);
          real r291D#1 = RAdd(r291A,r291B);
          real r291E#1 = RAdd(r291D,r291C);
          real r2920#1 = RMul(r290D,r28DA);
          real r2921#1 = RMul(r290F,r28DC);
          real r2922#1 = RMul(r2911,r28DE);
          real r2923#1 = RAdd(r2920,r2921);
          real r2924#1 = RAdd(r2923,r2922);
          real r2925#1 = RMul(r290D,r28E2);
          real r2926#1 = RMul(r290F,r28E4);
          real r2927#1 = RMul(r2911,r28E6);
          real r2928#1 = RAdd(r2925,r2926);
          real r2929#1 = RAdd(r2928,r2927);
          real r292A#1 = RMul(r290D,r28EA);
          real r292B#1 = RMul(r290F,r28EC);
          real r292C#1 = RMul(r2911,r28EE);
          real r292D#1 = RAdd(r292A,r292B);
          real r292E#1 = RAdd(r292D,r292C);
          real r2930#1 = RMul(r290D,r28F3);
          real r2931#1 = RMul(r290F,r28F5);
          real r2932#1 = RMul(r2911,r28F7);
          real r2933#1 = RAdd(r2930,r2931);
          real r2934#1 = RAdd(r2933,r2932);
          real r2935#1 = RMul(r290D,r28FB);
          real r2936#1 = RMul(r290F,r28FD);
          real r2937#1 = RMul(r2911,r28FF);
          real r2938#1 = RAdd(r2935,r2936);
          real r2939#1 = RAdd(r2938,r2937);
          real r293A#1 = RMul(r290D,r2903);
          real r293B#1 = RMul(r290F,r2905);
          real r293C#1 = RMul(r2911,r2907);
          real r293D#1 = RAdd(r293A,r293B);
          real r293E#1 = RAdd(r293D,r293C);
          real r2941#9 = r277E;
          real r2942#1 = RMul(r2941,r28BF);
          real r2943#9 = r2798;
          real r2944#1 = RMul(r2943,r28C2);
          real r2945#9 = r27B2;
          real r2946#1 = RMul(r2945,r28C5);
          real r2947#1 = RAdd(r2942,r2944);
          real r2948#1 = RAdd(r2947,r2946);
          real r2949#1 = RMul(r2941,r28C9);
          real r294A#1 = RMul(r2943,r28CB);
          real r294B#1 = RMul(r2945,r28CD);
          real r294C#1 = RAdd(r2949,r294A);
          real r294D#1 = RAdd(r294C,r294B);
          real r294E#1 = RMul(r2941,r28D1);
          real r294F#1 = RMul(r2943,r28D3);
          real r2950#1 = RMul(r2945,r28D5);
          real r2951#1 = RAdd(r294E,r294F);
          real r2952#1 = RAdd(r2951,r2950);
          real r2954#1 = RMul(r2941,r28DA);
          real r2955#1 = RMul(r2943,r28DC);
          real r2956#1 = RMul(r2945,r28DE);
          real r2957#1 = RAdd(r2954,r2955);
          real r2958#1 = RAdd(r2957,r2956);
          real r2959#1 = RMul(r2941,r28E2);
          real r295A#1 = RMul(r2943,r28E4);
          real r295B#1 = RMul(r2945,r28E6);
          real r295C#1 = RAdd(r2959,r295A);
          real r295D#1 = RAdd(r295C,r295B);
          real r295E#1 = RMul(r2941,r28EA);
          real r295F#1 = RMul(r2943,r28EC);
          real r2960#1 = RMul(r2945,r28EE);
          real r2961#1 = RAdd(r295E,r295F);
          real r2962#1 = RAdd(r2961,r2960);
          real r2964#1 = RMul(r2941,r28F3);
          real r2965#1 = RMul(r2943,r28F5);
          real r2966#1 = RMul(r2945,r28F7);
          real r2967#1 = RAdd(r2964,r2965);
          real r2968#1 = RAdd(r2967,r2966);
          real r2969#1 = RMul(r2941,r28FB);
          real r296A#1 = RMul(r2943,r28FD);
          real r296B#1 = RMul(r2945,r28FF);
          real r296C#1 = RAdd(r2969,r296A);
          real r296D#1 = RAdd(r296C,r296B);
          real r296E#1 = RMul(r2941,r2903);
          real r296F#1 = RMul(r2943,r2905);
          real r2970#1 = RMul(r2945,r2907);
          real r2971#1 = RAdd(r296E,r296F);
          real r2972#1 = RAdd(r2971,r2970);
          real r2A2F#1 = dof_load26F1;
          real r2A30#3 = basisEval2743;
          real r2A31#1 = RMul(r2A2F,r2A30);
          real r2A32#1 = dof_load26FA;
          real r2A33#3 = basisEval2744;
          real r2A34#1 = RMul(r2A32,r2A33);
          real r2A35#1 = dof_load2703;
          real r2A36#3 = basisEval2745;
          real r2A37#1 = RMul(r2A35,r2A36);
          real r2A38#1 = dof_load270C;
          real r2A39#3 = basisEval2745;
          real r2A3A#1 = RMul(r2A38,r2A39);
          real r2A3B#1 = RAdd(r2A31,r2A34);
          real r2A3C#1 = RAdd(r2A3B,r2A37);
          real r2A3D#1 = RAdd(r2A3C,r2A3A);
          real r2A3E#1 = dof_load26F2;
          real r2A3F#1 = RMul(r2A3E,r2A30);
          real r2A40#1 = dof_load26FB;
          real r2A41#1 = RMul(r2A40,r2A33);
          real r2A42#1 = dof_load2704;
          real r2A43#1 = RMul(r2A42,r2A36);
          real r2A44#1 = dof_load270D;
          real r2A45#1 = RMul(r2A44,r2A39);
          real r2A46#1 = RAdd(r2A3F,r2A41);
          real r2A47#1 = RAdd(r2A46,r2A43);
          real r2A48#1 = RAdd(r2A47,r2A45);
          real r2A49#1 = dof_load26F3;
          real r2A4A#1 = RMul(r2A49,r2A30);
          real r2A4B#1 = dof_load26FC;
          real r2A4C#1 = RMul(r2A4B,r2A33);
          real r2A4D#1 = dof_load2705;
          real r2A4E#1 = RMul(r2A4D,r2A36);
          real r2A4F#1 = dof_load270E;
          real r2A50#1 = RMul(r2A4F,r2A39);
          real r2A51#1 = RAdd(r2A4A,r2A4C);
          real r2A52#1 = RAdd(r2A51,r2A4E);
          real r2A53#1 = RAdd(r2A52,r2A50);
          tensor[3] probe_l_292A2E#1 = <tensor[3]>[r2A3D,r2A48,r2A53];
          real r2A7C#1 = dof_load26F1;
          real r2A7D#3 = basisEval2743;
          real r2A7E#1 = RMul(r2A7C,r2A7D);
          real r2A7F#1 = dof_load26FA;
          real r2A80#3 = basisEval2745;
          real r2A81#1 = RMul(r2A7F,r2A80);
          real r2A82#1 = dof_load2703;
          real r2A83#3 = basisEval2744;
          real r2A84#1 = RMul(r2A82,r2A83);
          real r2A85#1 = dof_load270C;
          real r2A86#3 = basisEval2745;
          real r2A87#1 = RMul(r2A85,r2A86);
          real r2A88#1 = RAdd(r2A7E,r2A81);
          real r2A89#1 = RAdd(r2A88,r2A84);
          real r2A8A#1 = RAdd(r2A89,r2A87);
          real r2A8B#1 = dof_load26F2;
          real r2A8C#1 = RMul(r2A8B,r2A7D);
          real r2A8D#1 = dof_load26FB;
          real r2A8E#1 = RMul(r2A8D,r2A80);
          real r2A8F#1 = dof_load2704;
          real r2A90#1 = RMul(r2A8F,r2A83);
          real r2A91#1 = dof_load270D;
          real r2A92#1 = RMul(r2A91,r2A86);
          real r2A93#1 = RAdd(r2A8C,r2A8E);
          real r2A94#1 = RAdd(r2A93,r2A90);
          real r2A95#1 = RAdd(r2A94,r2A92);
          real r2A96#1 = dof_load26F3;
          real r2A97#1 = RMul(r2A96,r2A7D);
          real r2A98#1 = dof_load26FC;
          real r2A99#1 = RMul(r2A98,r2A80);
          real r2A9A#1 = dof_load2705;
          real r2A9B#1 = RMul(r2A9A,r2A83);
          real r2A9C#1 = dof_load270E;
          real r2A9D#1 = RMul(r2A9C,r2A86);
          real r2A9E#1 = RAdd(r2A97,r2A99);
          real r2A9F#1 = RAdd(r2A9E,r2A9B);
          real r2AA0#1 = RAdd(r2A9F,r2A9D);
          tensor[3] probe_l_302A7B#3 = <tensor[3]>[r2A8A,r2A95,r2AA0];
          real r2AC9#1 = dof_load26F1;
          real r2ACA#3 = basisEval2743;
          real r2ACB#1 = RMul(r2AC9,r2ACA);
          real r2ACC#1 = dof_load26FA;
          real r2ACD#3 = basisEval2745;
          real r2ACE#1 = RMul(r2ACC,r2ACD);
          real r2ACF#1 = dof_load2703;
          real r2AD0#3 = basisEval2745;
          real r2AD1#1 = RMul(r2ACF,r2AD0);
          real r2AD2#1 = dof_load270C;
          real r2AD3#3 = basisEval2744;
          real r2AD4#1 = RMul(r2AD2,r2AD3);
          real r2AD5#1 = RAdd(r2ACB,r2ACE);
          real r2AD6#1 = RAdd(r2AD5,r2AD1);
          real r2AD7#1 = RAdd(r2AD6,r2AD4);
          real r2AD8#1 = dof_load26F2;
          real r2AD9#1 = RMul(r2AD8,r2ACA);
          real r2ADA#1 = dof_load26FB;
          real r2ADB#1 = RMul(r2ADA,r2ACD);
          real r2ADC#1 = dof_load2704;
          real r2ADD#1 = RMul(r2ADC,r2AD0);
          real r2ADE#1 = dof_load270D;
          real r2ADF#1 = RMul(r2ADE,r2AD3);
          real r2AE0#1 = RAdd(r2AD9,r2ADB);
          real r2AE1#1 = RAdd(r2AE0,r2ADD);
          real r2AE2#1 = RAdd(r2AE1,r2ADF);
          real r2AE3#1 = dof_load26F3;
          real r2AE4#1 = RMul(r2AE3,r2ACA);
          real r2AE5#1 = dof_load26FC;
          real r2AE6#1 = RMul(r2AE5,r2ACD);
          real r2AE7#1 = dof_load2705;
          real r2AE8#1 = RMul(r2AE7,r2AD0);
          real r2AE9#1 = dof_load270E;
          real r2AEA#1 = RMul(r2AE9,r2AD3);
          real r2AEB#1 = RAdd(r2AE4,r2AE6);
          real r2AEC#1 = RAdd(r2AEB,r2AE8);
          real r2AED#1 = RAdd(r2AEC,r2AEA);
          real realLit2B16#3 = 0.e0;
          real r2B17#3 = r2AD7;
          real r2B18#3 = RMul(realLit2B16,r2B17);
          real r2B19#3 = r2AE2;
          real r2B1A#3 = RMul(realLit2B16,r2B19);
          real r2B1B#3 = r2AED;
          real r2B1C#5 = RMul(realLit2B16,r2B1B);
          real r2B1D#3 = RAdd(r2B18,r2B1A);
          real r2B1E#3 = RAdd(r2B1D,r2B1C);
          real realLit2B1F#3 = 0.1e1;
          real r2B20#1 = RMul(realLit2B1F,r2B1B);
          real r2B21#1 = RAdd(r2B1D,r2B20);
          real realLit2B22#3 = -0.1e1;
          real r2B23#1 = RMul(realLit2B22,r2B19);
          real r2B24#1 = RAdd(r2B18,r2B23);
          real r2B25#1 = RAdd(r2B24,r2B1C);
          tensor[3] tensor2B26#1 = <tensor[3]>[r2B1E,r2B21,r2B25];
          real r2B27#1 = RMul(realLit2B22,r2B1B);
          real r2B28#1 = RAdd(r2B1D,r2B27);
          real r2B29#1 = RMul(realLit2B1F,r2B17);
          real r2B2A#1 = RAdd(r2B29,r2B1A);
          real r2B2B#1 = RAdd(r2B2A,r2B1C);
          tensor[3] tensor2B2C#1 = <tensor[3]>[r2B28,r2B1E,r2B2B];
          real r2B2D#1 = RMul(realLit2B1F,r2B19);
          real r2B2E#1 = RAdd(r2B18,r2B2D);
          real r2B2F#1 = RAdd(r2B2E,r2B1C);
          real r2B30#1 = RMul(realLit2B22,r2B17);
          real r2B31#1 = RAdd(r2B30,r2B1A);
          real r2B32#1 = RAdd(r2B31,r2B1C);
          tensor[3] tensor2B33#1 = <tensor[3]>[r2B2F,r2B32,r2B1E];
          tensor[3] projParam2B55#1 = tensor2B26;
          real vdot2B56#1 = VDot<3>(probe_l_302A7B,projParam2B55);
          tensor[3] projParam2B57#1 = tensor2B2C;
          real vdot2B58#1 = VDot<3>(probe_l_302A7B,projParam2B57);
          tensor[3] projParam2B59#1 = tensor2B33;
          real vdot2B5A#1 = VDot<3>(probe_l_302A7B,projParam2B59);
          tensor[3] op1_e3_l_332B54#1 = <tensor[3]>[vdot2B56,vdot2B58,vdot2B5A];
          real op1_e3_l_342B63#1 = VDot<3>(probe_l_292A2E,op1_e3_l_332B54);
          real realLit2B67#27 = 0.e0;
          real r2B68#1 = r28C8;
          real r2B69#2 = RMul(realLit2B67,r2B68);
          real r2B6A#2 = r28D0;
          real r2B6B#1 = RMul(realLit2B67,r2B6A);
          real r2B6C#2 = r28D8;
          real r2B6D#2 = RMul(realLit2B67,r2B6C);
          real r2B6E#2 = r2914;
          real r2B6F#2 = RMul(realLit2B67,r2B6E);
          real r2B70#1 = r2919;
          real r2B71#3 = RMul(realLit2B67,r2B70);
          real realLit2B72#9 = 0.1e1;
          real r2B73#2 = r291E;
          real r2B74#1 = RMul(realLit2B72,r2B73);
          real r2B75#2 = r2948;
          real r2B76#2 = RMul(realLit2B67,r2B75);
          real realLit2B77#9 = -0.1e1;
          real r2B78#2 = r294D;
          real r2B79#1 = RMul(realLit2B77,r2B78);
          real r2B7A#1 = r2952;
          real r2B7B#3 = RMul(realLit2B67,r2B7A);
          real r2B7C#2 = RAdd(r2B69,r2B6B);
          real r2B7D#1 = RAdd(r2B7C,r2B6D);
          real r2B7E#1 = RAdd(r2B7D,r2B6F);
          real r2B7F#1 = RAdd(r2B7E,r2B71);
          real r2B80#1 = RAdd(r2B7F,r2B74);
          real r2B81#1 = RAdd(r2B80,r2B76);
          real r2B82#1 = RAdd(r2B81,r2B79);
          real r2B83#1 = RAdd(r2B82,r2B7B);
          real r2B84#1 = r28E1;
          real r2B85#2 = RMul(realLit2B67,r2B84);
          real r2B86#2 = r28E9;
          real r2B87#1 = RMul(realLit2B67,r2B86);
          real r2B88#2 = r28F1;
          real r2B89#2 = RMul(realLit2B67,r2B88);
          real r2B8A#2 = r2924;
          real r2B8B#2 = RMul(realLit2B67,r2B8A);
          real r2B8C#1 = r2929;
          real r2B8D#3 = RMul(realLit2B67,r2B8C);
          real r2B8E#2 = r292E;
          real r2B8F#1 = RMul(realLit2B72,r2B8E);
          real r2B90#2 = r2958;
          real r2B91#2 = RMul(realLit2B67,r2B90);
          real r2B92#2 = r295D;
          real r2B93#1 = RMul(realLit2B77,r2B92);
          real r2B94#1 = r2962;
          real r2B95#3 = RMul(realLit2B67,r2B94);
          real r2B96#2 = RAdd(r2B85,r2B87);
          real r2B97#1 = RAdd(r2B96,r2B89);
          real r2B98#1 = RAdd(r2B97,r2B8B);
          real r2B99#1 = RAdd(r2B98,r2B8D);
          real r2B9A#1 = RAdd(r2B99,r2B8F);
          real r2B9B#1 = RAdd(r2B9A,r2B91);
          real r2B9C#1 = RAdd(r2B9B,r2B93);
          real r2B9D#1 = RAdd(r2B9C,r2B95);
          real r2B9E#1 = r28FA;
          real r2B9F#2 = RMul(realLit2B67,r2B9E);
          real r2BA0#2 = r2902;
          real r2BA1#1 = RMul(realLit2B67,r2BA0);
          real r2BA2#2 = r290A;
          real r2BA3#2 = RMul(realLit2B67,r2BA2);
          real r2BA4#2 = r2934;
          real r2BA5#2 = RMul(realLit2B67,r2BA4);
          real r2BA6#1 = r2939;
          real r2BA7#3 = RMul(realLit2B67,r2BA6);
          real r2BA8#2 = r293E;
          real r2BA9#1 = RMul(realLit2B72,r2BA8);
          real r2BAA#2 = r2968;
          real r2BAB#2 = RMul(realLit2B67,r2BAA);
          real r2BAC#2 = r296D;
          real r2BAD#1 = RMul(realLit2B77,r2BAC);
          real r2BAE#1 = r2972;
          real r2BAF#3 = RMul(realLit2B67,r2BAE);
          real r2BB0#2 = RAdd(r2B9F,r2BA1);
          real r2BB1#1 = RAdd(r2BB0,r2BA3);
          real r2BB2#1 = RAdd(r2BB1,r2BA5);
          real r2BB3#1 = RAdd(r2BB2,r2BA7);
          real r2BB4#1 = RAdd(r2BB3,r2BA9);
          real r2BB5#1 = RAdd(r2BB4,r2BAB);
          real r2BB6#1 = RAdd(r2BB5,r2BAD);
          real r2BB7#1 = RAdd(r2BB6,r2BAF);
          real r2BB9#1 = RMul(realLit2B77,r2B6C);
          real r2BBA#2 = RMul(realLit2B67,r2B73);
          real r2BBB#1 = RMul(realLit2B72,r2B75);
          real r2BBC#2 = RMul(realLit2B67,r2B78);
          real r2BBD#1 = RAdd(r2B7C,r2BB9);
          real r2BBE#1 = RAdd(r2BBD,r2B6F);
          real r2BBF#1 = RAdd(r2BBE,r2B71);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2BBB);
          real r2BC2#1 = RAdd(r2BC1,r2BBC);
          real r2BC3#1 = RAdd(r2BC2,r2B7B);
          real r2BC4#1 = RMul(realLit2B77,r2B88);
          real r2BC5#2 = RMul(realLit2B67,r2B8E);
          real r2BC6#1 = RMul(realLit2B72,r2B90);
          real r2BC7#2 = RMul(realLit2B67,r2B92);
          real r2BC8#1 = RAdd(r2B96,r2BC4);
          real r2BC9#1 = RAdd(r2BC8,r2B8B);
          real r2BCA#1 = RAdd(r2BC9,r2B8D);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2BC6);
          real r2BCD#1 = RAdd(r2BCC,r2BC7);
          real r2BCE#1 = RAdd(r2BCD,r2B95);
          real r2BCF#1 = RMul(realLit2B77,r2BA2);
          real r2BD0#2 = RMul(realLit2B67,r2BA8);
          real r2BD1#1 = RMul(realLit2B72,r2BAA);
          real r2BD2#2 = RMul(realLit2B67,r2BAC);
          real r2BD3#1 = RAdd(r2BB0,r2BCF);
          real r2BD4#1 = RAdd(r2BD3,r2BA5);
          real r2BD5#1 = RAdd(r2BD4,r2BA7);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BD1);
          real r2BD8#1 = RAdd(r2BD7,r2BD2);
          real r2BD9#1 = RAdd(r2BD8,r2BAF);
          real r2BDB#1 = RMul(realLit2B72,r2B6A);
          real r2BDC#1 = RMul(realLit2B77,r2B6E);
          real r2BDD#1 = RAdd(r2B69,r2BDB);
          real r2BDE#1 = RAdd(r2BDD,r2B6D);
          real r2BDF#1 = RAdd(r2BDE,r2BDC);
          real r2BE0#1 = RAdd(r2BDF,r2B71);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B76);
          real r2BE3#1 = RAdd(r2BE2,r2BBC);
          real r2BE4#1 = RAdd(r2BE3,r2B7B);
          real r2BE5#1 = RMul(realLit2B72,r2B86);
          real r2BE6#1 = RMul(realLit2B77,r2B8A);
          real r2BE7#1 = RAdd(r2B85,r2BE5);
          real r2BE8#1 = RAdd(r2BE7,r2B89);
          real r2BE9#1 = RAdd(r2BE8,r2BE6);
          real r2BEA#1 = RAdd(r2BE9,r2B8D);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B91);
          real r2BED#1 = RAdd(r2BEC,r2BC7);
          real r2BEE#1 = RAdd(r2BED,r2B95);
          real r2BEF#1 = RMul(realLit2B72,r2BA0);
          real r2BF0#1 = RMul(realLit2B77,r2BA4);
          real r2BF1#1 = RAdd(r2B9F,r2BEF);
          real r2BF2#1 = RAdd(r2BF1,r2BA3);
          real r2BF3#1 = RAdd(r2BF2,r2BF0);
          real r2BF4#1 = RAdd(r2BF3,r2BA7);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAB);
          real r2BF7#1 = RAdd(r2BF6,r2BD2);
          real r2BF8#1 = RAdd(r2BF7,r2BAF);
          real realLit2C90#1 = 0.2e1;
          real op1_e3_l_362C8F#9 = RMul(realLit2C90,op1_e3_l_342B63);
          real r2C95#1 = r2B83;
          real r2C96#1 = RDiv(r2C95,op1_e3_l_362C8F);
          real r2C97#1 = r2B9D;
          real r2C98#1 = RDiv(r2C97,op1_e3_l_362C8F);
          real r2C99#1 = r2BB7;
          real r2C9A#1 = RDiv(r2C99,op1_e3_l_362C8F);
          real r2C9C#1 = r2BC3;
          real r2C9D#1 = RDiv(r2C9C,op1_e3_l_362C8F);
          real r2C9E#1 = r2BCE;
          real r2C9F#1 = RDiv(r2C9E,op1_e3_l_362C8F);
          real r2CA0#1 = r2BD9;
          real r2CA1#1 = RDiv(r2CA0,op1_e3_l_362C8F);
          real r2CA3#1 = r2BE4;
          real r2CA4#1 = RDiv(r2CA3,op1_e3_l_362C8F);
          real r2CA5#1 = r2BEE;
          real r2CA6#1 = RDiv(r2CA5,op1_e3_l_362C8F);
          real r2CA7#1 = r2BF8;
          real r2CA8#1 = RDiv(r2CA7,op1_e3_l_362C8F);
          real r2CC2#3 = vdot26BA;
          real r2CC3#1 = r2C96;
          real r2CC4#1 = RMul(r2CC2,r2CC3);
          real r2CC5#3 = vdot26BC;
          real r2CC6#1 = r2C9D;
          real r2CC7#1 = RMul(r2CC5,r2CC6);
          real r2CC8#3 = vdot26BE;
          real r2CC9#1 = r2CA4;
          real r2CCA#1 = RMul(r2CC8,r2CC9);
          real r2CCB#1 = RAdd(r2CC4,r2CC7);
          real r2CCC#1 = RAdd(r2CCB,r2CCA);
          real r2CCD#1 = r2C98;
          real r2CCE#1 = RMul(r2CC2,r2CCD);
          real r2CCF#1 = r2C9F;
          real r2CD0#1 = RMul(r2CC5,r2CCF);
          real r2CD1#1 = r2CA6;
          real r2CD2#1 = RMul(r2CC8,r2CD1);
          real r2CD3#1 = RAdd(r2CCE,r2CD0);
          real r2CD4#1 = RAdd(r2CD3,r2CD2);
          real r2CD5#1 = r2C9A;
          real r2CD6#1 = RMul(r2CC2,r2CD5);
          real r2CD7#1 = r2CA1;
          real r2CD8#1 = RMul(r2CC5,r2CD7);
          real r2CD9#1 = r2CA8;
          real r2CDA#1 = RMul(r2CC8,r2CD9);
          real r2CDB#1 = RAdd(r2CD6,r2CD8);
          real r2CDC#1 = RAdd(r2CDB,r2CDA);
          tensor[3] op1_e3_l_382CC1#1 = <tensor[3]>[r2CCC,r2CD4,r2CDC];
          tensor[3] op1_e3_l_542CFA#3 = VNeg<3>(op1_e3_l_382CC1);
          real op1_e3_l_562CFD#1 = VDot<3>(op1_e3_l_542CFA,op1_e3_l_542CFA);
          real op1_e3_l_572D00#2 = Sqrt(op1_e3_l_562CFD);
          real op1_e3_l_582D03#1 = Abs<real>(op1_e3_l_23263B);
          real op1_e3_l_592D06#1 = RMul(thick1D3F,op1_e3_l_572D00);
          real op1_e3_l_602D09#1 = RDiv(op1_e3_l_582D03,op1_e3_l_592D06);
          real op1_e3_l_612D0C#1 = RSub(_t1D7D,op1_e3_l_602D09);
          real op1_e3_l_622D0F#2 = RMul(_t24F2,op1_e3_l_612D0C);
          real op1_e3_l_632D12#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real a2D15#1 = RMul(_t1D7D,op1_e3_l_632D12);
          bool _t2D18#1 = GT<real>(a2D15,_t1D76);
          if _t2D18 then goto ASSIGN2D1D else goto JOIN2DEC
        ASSIGN2D1D:  preds = [COND2D1A]
          real op1_e3_l_642D1B#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real op1_e3_l_652D1E#1 = RMul(_t1D7D,op1_e3_l_642D1B);
          real _t2D21#1 = RSub(_t1D7D,op1_e3_l_652D1E);
          real op1_e3_l_32D24#1 = VDot<3>(rayVec1D59,rayVec1D59);
          real op1_e3_l_42D27#1 = Sqrt(op1_e3_l_32D24);
          real op1_e3_l_52D2A#1 = RMul(rayStep1D49,op1_e3_l_42D27);
          real _t2D2D#1 = RDiv(op1_e3_l_52D2A,refStep1D47);
          real _t2D30#1 = MathFn<pow>(_t2D21,_t2D2D);
          real _t2D32#2 = 0.11e1;
          real _t2D34#1 = 0.7e0;
          real realLit2D37#1 = 0.1e1;
          real op1_e3_l_672D36#1 = RDiv(realLit2D37,op1_e3_l_572D00);
          real op1_e3_l_682D3B#1 = VDot<3>(op1_e3_l_542CFA,light1D55);
          real _t2D3E#1 = RMul(op1_e3_l_672D36,op1_e3_l_682D3B);
          real shade2D41#1 = Max<real>(_t1D76,_t2D3E);
          real _t2D43#1 = compositionl2638;
          real op1_e3_l_152D45#1 = RSub(rayN1D57,camNear1D43);
          real op1_e3_l_162D48#1 = RSub(camFar1D45,camNear1D43);
          real op1_e3_l_172D4B#1 = RDiv(op1_e3_l_152D45,op1_e3_l_162D48);
          real op1_e3_l_182D4E#1 = RSub(_t2D34,_t2D32);
          real op1_e3_l_192D51#1 = RMul(op1_e3_l_172D4B,op1_e3_l_182D4E);
          real op1_e3_l_202D54#1 = RMul(phongKd1D4D,shade2D41);
          real Mtransform2D57#1 = Transform<IMAGE1D<double[3]>>(I1D2F);
          real MxPos2D59#1 = RMul(Mtransform2D57,_t2D43);
          real Ttranslate2D5C#1 = Translate<IMAGE1D<double[3]>>(I1D2F);
          real imgPos2D5E#2 = RAdd(MxPos2D59,Ttranslate2D5C);
          real nd2D61#2 = Floor<1>(imgPos2D5E);
          real f2D63#2 = RSub(imgPos2D5E,nd2D61);
          int n2D66#1 = RealToInt<1>(nd2D61);
          int idx2D68#5 = n2D66;
          bool isInside2D6A#1 = IndexInside<IMAGE1D<double[3]>,2>(idx2D68,I1D2F);
          if isInside2D6A then goto ASSIGN303F else goto ASSIGN3043
        ASSIGN303F:  preds = [COND2D6C]
          int addRes2D6F#1 = idx2D68;
          int stride2D70#2 = 3;
          int offp2D71#3 = IMul(stride2D70,addRes2D6F);
          real v0_2D72#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D71);
          int ilit2D73#3 = 1;
          int addRes2D74#1 = IAdd(idx2D68,ilit2D73);
          int offp2D75#3 = IMul(stride2D70,addRes2D74);
          real v1_2D76#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D75);
          tensor[2] v_2D77#1 = <tensor[2]>[v0_2D72,v1_2D76];
          int offp2D78#1 = IAdd(offp2D71,ilit2D73);
          real v0_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D78);
          int offp2D7A#1 = IAdd(offp2D75,ilit2D73);
          real v1_2D7B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7A);
          tensor[2] v_2D7C#1 = <tensor[2]>[v0_2D79,v1_2D7B];
          int offset2D7D#2 = 2;
          int offp2D7E#1 = IAdd(offp2D71,offset2D7D);
          real v0_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7E);
          int offp2D80#1 = IAdd(offp2D75,offset2D7D);
          real v1_2D81#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D80);
          tensor[2] v_2D82#1 = <tensor[2]>[v0_2D7F,v1_2D81];
          tensor[3,2] voxels2D83#1 = <tensor[3,2]>[v_2D77,v_2D7C,v_2D82];
          tensor[3,2] ldvox2D6D#1 = voxels2D83;
          goto JOIN2D9D
        JOIN2D9D:  preds = [ASSIGN2D9A,ASSIGN2E4A]
          tensor[3,2] ldvox2D9B#3 = phi(ldvox2D6D,ldvox2D9C)
          real rlit2D9F#1 = 0.1e1;
          real idx2DA0#1 = RSub(f2D63,rlit2D9F);
          tensor[2] kernX_2D9E#1 = <tensor[2]>[f2D63,idx2DA0];
          real _f2DA9#1 = 0.1e1;
          real _f2DAA#1 = 0.1e1;
          tensor[2] a02DA5#1 = <tensor[2]>[_f2DA9,_f2DAA];
          real _f2DA7#1 = -0.1e1;
          real _f2DA8#1 = 0.1e1;
          tensor[2] a12DA6#1 = <tensor[2]>[_f2DA7,_f2DA8];
          tensor[2] prod12DAB#1 = VMul<2>(kernX_2D9E,a12DA6);
          tensor[2] kevalX_d0_2DA4#3 = VAdd<2>(a02DA5,prod12DAB);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D9B);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA4);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D9B);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA4);
          tensor[2] projIx2DB9#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D9B);
          real vdot2DBA#1 = VDot<2>(projIx2DB9,kevalX_d0_2DA4);
          real op1_e3_l_222DC3#2 = RSub(_t1D7D,_t2D30);
          real op1_e3_l_232DC6#1 = RAdd(_t2D32,op1_e3_l_192D51);
          real op1_e3_l_242DC9#1 = RAdd(phongKa1D4B,op1_e3_l_202D54);
          real r2DCD#1 = vdot2DB6;
          real r2DCE#1 = RMul(transp1D5B,op1_e3_l_222DC3);
          real r2DCF#1 = RMul(r2DCE,op1_e3_l_232DC6);
          real r2DD0#3 = RMul(r2DCF,op1_e3_l_242DC9);
          real r2DD1#1 = RMul(r2DD0,r2DCD);
          real r2DD2#1 = vdot2DB8;
          real r2DD3#1 = RMul(r2DD0,r2DD2);
          real r2DD4#1 = vdot2DBA;
          real r2DD5#1 = RMul(r2DD0,r2DD4);
          tensor[3] op1_e3_l_252DCC#1 = <tensor[3]>[r2DD1,r2DD3,r2DD5];
          tensor[3] rgb2DE1#1 = VAdd<3>(rgb1D5D,op1_e3_l_252DCC);
          real op1_e3_l_52DE4#1 = RSub(_t1D7D,op1_e3_l_222DC3);
          real transp2DE7#1 = RMul(transp1D5B,op1_e3_l_52DE4);
          goto JOIN2DEC
        JOIN2DEC:  preds = [ASSIGN2DE9,COND2D1A]
          tensor[3] rgb2DEA#1 = phi(rgb2DE1,rgb1D5D)
          real transp2DEB#1 = phi(transp2DE7,transp1D5B)
          goto JOIN2DEF
        JOIN2DEF:  preds = [JOIN2DEC,COND24F1]
          tensor[3] rgb2DED#1 = phi(rgb2DEA,rgb1D5D)
          real transp2DEE#1 = phi(transp2DEB,transp1D5B)
          goto JOIN2DF2
        JOIN2DF2:  preds = [JOIN2DEF,COND1D91]
          tensor[3] rgb2DF0#1 = phi(rgb2DED,rgb1D5D)
          real transp2DF1#1 = phi(transp2DEE,transp1D5B)
          goto JOIN2DF5
        JOIN2DF5:  preds = [JOIN2DF2,COND1D8E]
          tensor[3] rgb2DF3#1 = phi(rgb2DF0,rgb1D5D)
          real transp2DF4#1 = phi(transp2DF1,transp1D5B)
          goto JOIN2DF8
        JOIN2DF8:  preds = [JOIN2DF5,COND1D89]
          tensor[3] rgb2DF6#1 = phi(rgb2DF3,rgb1D5D)
          real transp2DF7#1 = phi(transp2DF4,transp1D5B)
          goto JOIN2DFB
        JOIN2DFB:  preds = [JOIN2DF8,COND1D86]
          tensor[3] rgb2DF9#1 = phi(rgb2DF6,rgb1D5D)
          real transp2DFA#1 = phi(transp2DF7,transp1D5B)
          goto JOIN2DFE
        JOIN2DFE:  preds = [JOIN2DFB,COND1D81]
          tensor[3] rgb2DFC#1 = phi(rgb2DF9,rgb1D5D)
          real transp2DFD#1 = phi(transp2DFA,transp1D5B)
          goto JOIN2E01
        JOIN2E01:  preds = [JOIN2DFE,COND1D7C]
          tensor[3] rgb2DFF#3 = phi(rgb2DFC,rgb1D5D)
          real transp2E00#2 = phi(transp2DFD,transp1D5B)
          real _t2E02#1 = 0.1e-1;
          bool _t2E04#1 = LT<real>(transp2E00,_t2E02);
          if _t2E04 then goto SAVE2E07 else goto JOIN2E0B
        SAVE2E07:  preds = [COND2E06]
          self.transp = _t1D76;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E0B
        JOIN2E0B:  preds = [*STABILIZE2E09,COND2E06]
          real transp2E0A#2 = phi(transp2E00)
          bool _t2E0C#1 = GT<real>(rayN1D57,camFar1D45);
          if _t2E0C then goto SAVE2E0F else goto JOIN2E12
        SAVE2E0F:  preds = [COND2E0E]
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E12
        JOIN2E12:  preds = [*STABILIZE2E11,COND2E0E]
          real rayN2E13#1 = RAdd(rayN1D57,rayStep1D49);
          self.rayN = rayN2E13;
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          active
        ASSIGN3043:  preds = [COND2D6C]
          int addRes2E1B#1 = idx2D68;
          int ix2E1C#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E1B);
          int stride2E1D#2 = 3;
          int offp2E1E#3 = IMul(stride2E1D,ix2E1C);
          real v0_2E1F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E1E);
          int ilit2E20#3 = 1;
          int addRes2E21#1 = IAdd(idx2D68,ilit2E20);
          int ix2E22#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E21);
          int offp2E23#3 = IMul(stride2E1D,ix2E22);
          real v1_2E24#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E23);
          tensor[2] v_2E25#1 = <tensor[2]>[v0_2E1F,v1_2E24];
          int offp2E26#1 = IAdd(offp2E1E,ilit2E20);
          real v0_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E26);
          int offp2E28#1 = IAdd(offp2E23,ilit2E20);
          real v1_2E29#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E28);
          tensor[2] v_2E2A#1 = <tensor[2]>[v0_2E27,v1_2E29];
          int offset2E2B#2 = 2;
          int offp2E2C#1 = IAdd(offp2E1E,offset2E2B);
          real v0_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2C);
          int offp2E2E#1 = IAdd(offp2E23,offset2E2B);
          real v1_2E2F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2E);
          tensor[2] v_2E30#1 = <tensor[2]>[v0_2E2D,v1_2E2F];
          tensor[3,2] voxels2E31#1 = <tensor[3,2]>[v_2E25,v_2E2A,v_2E30];
          tensor[3,2] ldvox2D9C#1 = voxels2E31;
          goto JOIN2D9D
        ASSIGN2E4B:  preds = [COND1D66]
          bool _t1D6A#1 = NEQ<int>(vi1D61,sv1D53);
          goto JOIN1D6B
    end update
    method stabilize
        ENTRY2E4C:  preds = []
          bool debug2E4D#1 = globals.debug1AC7;
          int su2E4F#1 = globals.su1AC8;
          int sv2E51#1 = globals.sv1AC9;
          real transp2E53#1 = self.transp;
          tensor[3] rgb2E55#3 = self.rgb;
          tensor[4] rgba2E57#1 = self.rgba;
          int ui2E59#1 = self.ui;
          int vi2E5B#1 = self.vi;
          real _t2E5D#1 = 0.1e1;
          real a2E5F#6 = RSub(_t2E5D,transp2E53);
          real _t2E62#1 = 0.e0;
          bool _t2E64#1 = GT<real>(a2E5F,_t2E62);
          if _t2E64 then goto ASSIGN2E68 else goto JOIN2E79
        ASSIGN2E68:  preds = [COND2E66]
          real _t2E67#1 = VIndex<3,0>(rgb2E55);
          real _t2E69#1 = RDiv(_t2E67,a2E5F);
          real _t2E6C#1 = VIndex<3,1>(rgb2E55);
          real _t2E6E#1 = RDiv(_t2E6C,a2E5F);
          real _t2E71#1 = VIndex<3,2>(rgb2E55);
          real _t2E73#1 = RDiv(_t2E71,a2E5F);
          tensor[4] rgba2E76#1 = <tensor[4]>[_t2E69,_t2E6E,_t2E73,a2E5F];
          goto JOIN2E79
        JOIN2E79:  preds = [ASSIGN2E77,COND2E66]
          tensor[4] rgba2E78#2 = phi(rgba2E76,rgba2E57)
          bool _t2E7A#1 = EQ<int>(ui2E59,su2E4F);
          if _t2E7A then goto ASSIGN2E7E else goto JOIN2E84
        ASSIGN2E7E:  preds = [COND2E7C]
          bool _t2E7D#1 = EQ<int>(vi2E5B,sv2E51);
          if _t2E7D then goto COND2E80 else goto JOIN2E83
        COND2E80:  preds = [COND2E7F]
          if debug2E4D then goto MASSIGN2E81 else goto JOIN2E82
        MASSIGN2E81:  preds = [COND2E80]
          Print<[real,tensor[4]]>(a2E5F,rgba2E78);
          goto JOIN2E82
        JOIN2E82:  preds = [MASSIGN2E81,COND2E80]
          goto JOIN2E83
        JOIN2E83:  preds = [JOIN2E82,COND2E7F]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2E83,COND2E7C]
          self.rgba = rgba2E78;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E87:  preds = []
      int iresU2E88#1 = globals.iresU1ABE;
      int iresV2E8A#1 = globals.iresV1ABF;
      int _t2E8C#2 = 0;
      int _t2E8E#2 = 1;
      int _t2E90#1 = ISub(iresV2E8A,_t2E8E);
      int[] _t2E92#1 = Range(_t2E8C,_t2E90);
    FOREACH2E95:  preds = [ASSIGN2E93,NEXT2E9E]
      foreach (vi2E94 in _t2E92) on exit goto RETURN2E9F
      int _t2E96#1 = ISub(iresU2E88,_t2E8E);
      int[] _t2E98#1 = Range(_t2E8C,_t2E96);
    FOREACH2E9B:  preds = [ASSIGN2E99,NEXT2E9D]
      foreach (ui2E9A in _t2E98) on exit goto NEXT2E9E
      new raycast(ui2E9A,vi2E94);
      goto FOREACH2E9B
    NEXT2E9E:  preds = [FOREACH2E9B]
      goto FOREACH2E95
    RETURN2E9F:  preds = [FOREACH2E95]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AB5 (a) = <no-default>
  input 0b042F_intermedateGlobal1AB6 (b) = <no-default>
  input 0c0431_intermedateGlobal1AB7 (c) = <no-default>
  input isoval1AB8 (isoval) = <default>
  input thick1AB9 (thick) = <default>
  input camEye1ABA (camEye) = <default>
  input camAt1ABB (camAt) = <default>
  input camUp1ABC (camUp) = <default>
  input camFOV1ABD (camFOV) = <default>
  input iresU1ABE (iresU) = <default>
  input iresV1ABF (iresV) = <default>
  input camNear1AC0 (camNear) = <default>
  input camFar1AC1 (camFar) = <default>
  input refStep1AC2 (refStep) = <default>
  input rayStep1AC3 (rayStep) = <default>
  input lightVsp1AC4 (lightVsp) = <default>
  input phongKa1AC5 (phongKa) = <default>
  input phongKd1AC6 (phongKd) = <default>
  input debug1AC7 (debug) = <default>
  input su1AC8 (su) = <default>
  input sv1AC9 (sv) = <default>
  global real camDist1ACA
  global tensor[3] camN1ACB
  global tensor[3] camU1ACC
  global tensor[3] camV1ACD
  global real camVmax1ACE
  global real camUmax1ACF
  global tensor[3] light1AD0
  global femData:Mesh _t1AD1
  global femData:Space _tX1AD2
  global femData:FemFunc c1AD3
  global image(IMAGE1D<double[3]>) I1AD6
## functions
  function femData:MeshPos findPos1D93 (femData:Mesh mesh1D94#21, tensor[3] pos1D95#2) {
    ENTRY1D96:  preds = []
      real _t1D97#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1D99#1 = <tensor[3]>[_t1D97,_t1D97,_t1D97];
      int newtonInt1D9B#3 = 0;
      int cellInt1D9D#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1D94);
      int _t1D9F#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1D94);
      int _t1DA1#8 = 1;
      int numCell1DA3#2 = ISub(_t1D9F,_t1DA1);
      int _t1DA5#2 = 16;
      int _t1DA7#1 = IMul(_t1DA5,numCell1DA3);
      int[] _t1DA9#1 = Range(newtonInt1D9B,_t1DA7);
    FOREACH1DAC:  preds = [ASSIGN1DAA,NEXT24E9]
      foreach (itter1DAB in _t1DA9) on exit goto ASSIGN24EC
        int cellInt1DAE#5 = phi(cellInt1D9D,cellInt24E6)
        int newtonInt24D8#1 = phi(newtonInt1D9B,newtonInt24E7)
        tensor[3] xn237C#4 = phi(xn1D99,xn2440)
      int ilit1DAF#1 = 4;
      int mulRes1DB0#4 = IMul(cellInt1DAE,ilit1DAF);
      int idx1DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,mulRes1DB0);
      int addRes1DB5#1 = IAdd(mulRes1DB0,_t1DA1);
      int idx1DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB5);
      int ilit1DB7#5 = 2;
      int addRes1DB8#1 = IAdd(mulRes1DB0,ilit1DB7);
      int idx1DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB8);
      int ilit1DBA#5 = 3;
      int addRes1DBB#1 = IAdd(mulRes1DB0,ilit1DBA);
      int idx1DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DBB);
      int mulRes1DD2#3 = IMul(ilit1DBA,idx1DB3);
      int addRes1DD5#1 = IAdd(_t1DA1,mulRes1DD2);
      int addRes1DD7#1 = IAdd(ilit1DB7,mulRes1DD2);
      real dof_load1DD8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DD2);
      real dof_load1DD9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD5);
      real dof_load1DDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD7);
      int mulRes1DDD#3 = IMul(ilit1DBA,idx1DB6);
      int addRes1DDF#1 = IAdd(_t1DA1,mulRes1DDD);
      int addRes1DE0#1 = IAdd(ilit1DB7,mulRes1DDD);
      real dof_load1DE1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DDD);
      real dof_load1DE2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDF);
      real dof_load1DE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE0);
      int mulRes1DE6#3 = IMul(ilit1DBA,idx1DB9);
      int addRes1DE8#1 = IAdd(_t1DA1,mulRes1DE6);
      int addRes1DE9#1 = IAdd(ilit1DB7,mulRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DE6);
      real dof_load1DEB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE8);
      real dof_load1DEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE9);
      int mulRes1DEF#3 = IMul(ilit1DBA,idx1DBC);
      int addRes1DF1#1 = IAdd(_t1DA1,mulRes1DEF);
      int addRes1DF2#1 = IAdd(ilit1DB7,mulRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DEF);
      real dof_load1DF4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF1);
      real dof_load1DF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF2);
      real coeff1E26#22 = -0.1e1;
      real one1E27#33 = 0.1e1;
      real prod1E28#2 = RMul(one1E27,one1E27);
      real prod1E29#2 = RMul(one1E27,prod1E28);
      real basisEval1E2A#3 = RMul(coeff1E26,prod1E29);
      real basisEval1E2B#10 = RMul(one1E27,prod1E29);
      real basisEval1E2C#45 = 0.e0;
      real r1E43#2 = RMul(dof_load1DD8,basisEval1E2A);
      real r1E46#1 = RMul(dof_load1DE1,basisEval1E2B);
      real r1E49#2 = RMul(dof_load1DEA,basisEval1E2C);
      real r1E4C#2 = RMul(dof_load1DF3,basisEval1E2C);
      real r1E4D#1 = RAdd(r1E43,r1E46);
      real r1E4E#1 = RAdd(r1E4D,r1E49);
      real r1E4F#13 = RAdd(r1E4E,r1E4C);
      real r1E53#1 = RMul(dof_load1DE1,basisEval1E2C);
      real r1E55#1 = RMul(dof_load1DEA,basisEval1E2B);
      real r1E58#2 = RAdd(r1E43,r1E53);
      real r1E59#1 = RAdd(r1E58,r1E55);
      real r1E5A#13 = RAdd(r1E59,r1E4C);
      real r1E62#1 = RMul(dof_load1DF3,basisEval1E2B);
      real r1E64#1 = RAdd(r1E58,r1E49);
      real r1E65#12 = RAdd(r1E64,r1E62);
      real r1E68#2 = RMul(dof_load1DD9,basisEval1E2A);
      real r1E6A#1 = RMul(dof_load1DE2,basisEval1E2B);
      real r1E6C#2 = RMul(dof_load1DEB,basisEval1E2C);
      real r1E6E#2 = RMul(dof_load1DF4,basisEval1E2C);
      real r1E6F#1 = RAdd(r1E68,r1E6A);
      real r1E70#1 = RAdd(r1E6F,r1E6C);
      real r1E71#13 = RAdd(r1E70,r1E6E);
      real r1E73#1 = RMul(dof_load1DE2,basisEval1E2C);
      real r1E74#1 = RMul(dof_load1DEB,basisEval1E2B);
      real r1E76#2 = RAdd(r1E68,r1E73);
      real r1E77#1 = RAdd(r1E76,r1E74);
      real r1E78#13 = RAdd(r1E77,r1E6E);
      real r1E7C#1 = RMul(dof_load1DF4,basisEval1E2B);
      real r1E7E#1 = RAdd(r1E76,r1E6C);
      real r1E7F#12 = RAdd(r1E7E,r1E7C);
      real r1E82#2 = RMul(dof_load1DDA,basisEval1E2A);
      real r1E84#1 = RMul(dof_load1DE3,basisEval1E2B);
      real r1E86#2 = RMul(dof_load1DEC,basisEval1E2C);
      real r1E88#2 = RMul(dof_load1DF5,basisEval1E2C);
      real r1E89#1 = RAdd(r1E82,r1E84);
      real r1E8A#1 = RAdd(r1E89,r1E86);
      real r1E8B#13 = RAdd(r1E8A,r1E88);
      real r1E8D#1 = RMul(dof_load1DE3,basisEval1E2C);
      real r1E8E#1 = RMul(dof_load1DEC,basisEval1E2B);
      real r1E90#2 = RAdd(r1E82,r1E8D);
      real r1E91#1 = RAdd(r1E90,r1E8E);
      real r1E92#13 = RAdd(r1E91,r1E88);
      real r1E96#1 = RMul(dof_load1DF5,basisEval1E2B);
      real r1E98#1 = RAdd(r1E90,r1E86);
      real r1E99#12 = RAdd(r1E98,r1E96);
      real r1EFA#3 = RMul(basisEval1E2C,r1E4F);
      real r1EFC#3 = RMul(basisEval1E2C,r1E71);
      real r1EFE#5 = RMul(basisEval1E2C,r1E8B);
      real r1EFF#3 = RAdd(r1EFA,r1EFC);
      real r1F00#9 = RAdd(r1EFF,r1EFE);
      real r1F02#3 = RMul(basisEval1E2C,r1E5A);
      real r1F04#3 = RMul(basisEval1E2C,r1E78);
      real r1F06#5 = RMul(basisEval1E2C,r1E92);
      real r1F07#3 = RAdd(r1F02,r1F04);
      real r1F08#9 = RAdd(r1F07,r1F06);
      real r1F0A#3 = RMul(basisEval1E2C,r1E65);
      real r1F0C#3 = RMul(basisEval1E2C,r1E7F);
      real r1F0E#5 = RMul(basisEval1E2C,r1E99);
      real r1F0F#3 = RAdd(r1F0A,r1F0C);
      real r1F10#12 = RAdd(r1F0F,r1F0E);
      real r1F13#1 = RMul(coeff1E26,r1E8B);
      real r1F14#3 = RAdd(r1EFF,r1F13);
      real r1F15#1 = RMul(coeff1E26,r1E92);
      real r1F16#3 = RAdd(r1F07,r1F15);
      real r1F17#1 = RMul(coeff1E26,r1E99);
      real r1F18#4 = RAdd(r1F0F,r1F17);
      real r1F1B#1 = RMul(one1E27,r1E71);
      real r1F1C#1 = RAdd(r1EFA,r1F1B);
      real r1F1D#3 = RAdd(r1F1C,r1EFE);
      real r1F1E#1 = RMul(one1E27,r1E78);
      real r1F1F#1 = RAdd(r1F02,r1F1E);
      real r1F20#3 = RAdd(r1F1F,r1F06);
      real r1F21#1 = RMul(one1E27,r1E7F);
      real r1F22#1 = RAdd(r1F0A,r1F21);
      real r1F23#4 = RAdd(r1F22,r1F0E);
      real r1F26#1 = RMul(one1E27,r1E8B);
      real r1F27#3 = RAdd(r1EFF,r1F26);
      real r1F28#1 = RMul(one1E27,r1E92);
      real r1F29#3 = RAdd(r1F07,r1F28);
      real r1F2A#1 = RMul(one1E27,r1E99);
      real r1F2B#4 = RAdd(r1F0F,r1F2A);
      real r1F2D#1 = RMul(coeff1E26,r1E4F);
      real r1F2E#1 = RAdd(r1F2D,r1EFC);
      real r1F2F#3 = RAdd(r1F2E,r1EFE);
      real r1F30#1 = RMul(coeff1E26,r1E5A);
      real r1F31#1 = RAdd(r1F30,r1F04);
      real r1F32#3 = RAdd(r1F31,r1F06);
      real r1F33#1 = RMul(coeff1E26,r1E65);
      real r1F34#1 = RAdd(r1F33,r1F0C);
      real r1F35#4 = RAdd(r1F34,r1F0E);
      real r1F38#1 = RMul(coeff1E26,r1E71);
      real r1F39#1 = RAdd(r1EFA,r1F38);
      real r1F3A#3 = RAdd(r1F39,r1EFE);
      real r1F3B#1 = RMul(coeff1E26,r1E78);
      real r1F3C#1 = RAdd(r1F02,r1F3B);
      real r1F3D#3 = RAdd(r1F3C,r1F06);
      real r1F3E#1 = RMul(coeff1E26,r1E7F);
      real r1F3F#1 = RAdd(r1F0A,r1F3E);
      real r1F40#4 = RAdd(r1F3F,r1F0E);
      real r1F42#1 = RMul(one1E27,r1E4F);
      real r1F43#1 = RAdd(r1F42,r1EFC);
      real r1F44#3 = RAdd(r1F43,r1EFE);
      real r1F45#1 = RMul(one1E27,r1E5A);
      real r1F46#1 = RAdd(r1F45,r1F04);
      real r1F47#3 = RAdd(r1F46,r1F06);
      real r1F48#1 = RMul(one1E27,r1E65);
      real r1F49#1 = RAdd(r1F48,r1F0C);
      real r1F4A#4 = RAdd(r1F49,r1F0E);
      real r1FA7#1 = RMul(r1E4F,r1F00);
      real r1FAA#1 = RMul(r1E71,r1F27);
      real r1FAD#1 = RMul(r1E8B,r1F3A);
      real r1FAE#1 = RAdd(r1FA7,r1FAA);
      real r1FAF#1 = RAdd(r1FAE,r1FAD);
      real r1FB1#1 = RMul(r1E4F,r1F08);
      real r1FB3#1 = RMul(r1E71,r1F29);
      real r1FB5#1 = RMul(r1E8B,r1F3D);
      real r1FB6#1 = RAdd(r1FB1,r1FB3);
      real r1FB7#2 = RAdd(r1FB6,r1FB5);
      real r1FB9#1 = RMul(r1E4F,r1F10);
      real r1FBB#1 = RMul(r1E71,r1F2B);
      real r1FBD#1 = RMul(r1E8B,r1F40);
      real r1FBE#1 = RAdd(r1FB9,r1FBB);
      real r1FBF#2 = RAdd(r1FBE,r1FBD);
      real r1FC2#1 = RMul(r1E4F,r1F14);
      real r1FC4#1 = RMul(r1E71,r1F00);
      real r1FC6#1 = RMul(r1E8B,r1F44);
      real r1FC7#1 = RAdd(r1FC2,r1FC4);
      real r1FC8#1 = RAdd(r1FC7,r1FC6);
      real r1FCA#1 = RMul(r1E4F,r1F16);
      real r1FCC#1 = RMul(r1E71,r1F08);
      real r1FCE#1 = RMul(r1E8B,r1F47);
      real r1FCF#1 = RAdd(r1FCA,r1FCC);
      real r1FD0#2 = RAdd(r1FCF,r1FCE);
      real r1FD2#1 = RMul(r1E4F,r1F18);
      real r1FD4#1 = RMul(r1E71,r1F10);
      real r1FD6#1 = RMul(r1E8B,r1F4A);
      real r1FD7#1 = RAdd(r1FD2,r1FD4);
      real r1FD8#2 = RAdd(r1FD7,r1FD6);
      real r1FDB#1 = RMul(r1E4F,r1F1D);
      real r1FDD#1 = RMul(r1E71,r1F2F);
      real r1FDF#1 = RMul(r1E8B,r1F00);
      real r1FE0#1 = RAdd(r1FDB,r1FDD);
      real r1FE1#1 = RAdd(r1FE0,r1FDF);
      real r1FE3#1 = RMul(r1E4F,r1F20);
      real r1FE5#1 = RMul(r1E71,r1F32);
      real r1FE7#1 = RMul(r1E8B,r1F08);
      real r1FE8#1 = RAdd(r1FE3,r1FE5);
      real r1FE9#2 = RAdd(r1FE8,r1FE7);
      real r1FEB#1 = RMul(r1E4F,r1F23);
      real r1FED#1 = RMul(r1E71,r1F35);
      real r1FEF#1 = RMul(r1E8B,r1F10);
      real r1FF0#1 = RAdd(r1FEB,r1FED);
      real r1FF1#2 = RAdd(r1FF0,r1FEF);
      real r1FF5#1 = RMul(r1E5A,r1F00);
      real r1FF7#1 = RMul(r1E78,r1F27);
      real r1FF9#1 = RMul(r1E92,r1F3A);
      real r1FFA#1 = RAdd(r1FF5,r1FF7);
      real r1FFB#2 = RAdd(r1FFA,r1FF9);
      real r1FFC#1 = RMul(r1E5A,r1F08);
      real r1FFD#1 = RMul(r1E78,r1F29);
      real r1FFE#1 = RMul(r1E92,r1F3D);
      real r1FFF#1 = RAdd(r1FFC,r1FFD);
      real r2000#1 = RAdd(r1FFF,r1FFE);
      real r2001#1 = RMul(r1E5A,r1F10);
      real r2002#1 = RMul(r1E78,r1F2B);
      real r2003#1 = RMul(r1E92,r1F40);
      real r2004#1 = RAdd(r2001,r2002);
      real r2005#2 = RAdd(r2004,r2003);
      real r2007#1 = RMul(r1E5A,r1F14);
      real r2008#1 = RMul(r1E78,r1F00);
      real r2009#1 = RMul(r1E92,r1F44);
      real r200A#1 = RAdd(r2007,r2008);
      real r200B#2 = RAdd(r200A,r2009);
      real r200C#1 = RMul(r1E5A,r1F16);
      real r200D#1 = RMul(r1E78,r1F08);
      real r200E#1 = RMul(r1E92,r1F47);
      real r200F#1 = RAdd(r200C,r200D);
      real r2010#1 = RAdd(r200F,r200E);
      real r2011#1 = RMul(r1E5A,r1F18);
      real r2012#1 = RMul(r1E78,r1F10);
      real r2013#1 = RMul(r1E92,r1F4A);
      real r2014#1 = RAdd(r2011,r2012);
      real r2015#2 = RAdd(r2014,r2013);
      real r2017#1 = RMul(r1E5A,r1F1D);
      real r2018#1 = RMul(r1E78,r1F2F);
      real r2019#1 = RMul(r1E92,r1F00);
      real r201A#1 = RAdd(r2017,r2018);
      real r201B#2 = RAdd(r201A,r2019);
      real r201C#1 = RMul(r1E5A,r1F20);
      real r201D#1 = RMul(r1E78,r1F32);
      real r201E#1 = RMul(r1E92,r1F08);
      real r201F#1 = RAdd(r201C,r201D);
      real r2020#1 = RAdd(r201F,r201E);
      real r2021#1 = RMul(r1E5A,r1F23);
      real r2022#1 = RMul(r1E78,r1F35);
      real r2023#1 = RMul(r1E92,r1F10);
      real r2024#1 = RAdd(r2021,r2022);
      real r2025#2 = RAdd(r2024,r2023);
      real r2029#1 = RMul(r1E65,r1F00);
      real r202B#1 = RMul(r1E7F,r1F27);
      real r202D#1 = RMul(r1E99,r1F3A);
      real r202E#1 = RAdd(r2029,r202B);
      real r202F#2 = RAdd(r202E,r202D);
      real r2030#1 = RMul(r1E65,r1F08);
      real r2031#1 = RMul(r1E7F,r1F29);
      real r2032#1 = RMul(r1E99,r1F3D);
      real r2033#1 = RAdd(r2030,r2031);
      real r2034#2 = RAdd(r2033,r2032);
      real r2035#1 = RMul(r1E65,r1F10);
      real r2036#1 = RMul(r1E7F,r1F2B);
      real r2037#1 = RMul(r1E99,r1F40);
      real r2038#1 = RAdd(r2035,r2036);
      real r2039#1 = RAdd(r2038,r2037);
      real r203B#1 = RMul(r1E65,r1F14);
      real r203C#1 = RMul(r1E7F,r1F00);
      real r203D#1 = RMul(r1E99,r1F44);
      real r203E#1 = RAdd(r203B,r203C);
      real r203F#2 = RAdd(r203E,r203D);
      real r2040#1 = RMul(r1E65,r1F16);
      real r2041#1 = RMul(r1E7F,r1F08);
      real r2042#1 = RMul(r1E99,r1F47);
      real r2043#1 = RAdd(r2040,r2041);
      real r2044#2 = RAdd(r2043,r2042);
      real r2045#1 = RMul(r1E65,r1F18);
      real r2046#1 = RMul(r1E7F,r1F10);
      real r2047#1 = RMul(r1E99,r1F4A);
      real r2048#1 = RAdd(r2045,r2046);
      real r2049#1 = RAdd(r2048,r2047);
      real r204B#1 = RMul(r1E65,r1F1D);
      real r204C#1 = RMul(r1E7F,r1F2F);
      real r204D#1 = RMul(r1E99,r1F00);
      real r204E#1 = RAdd(r204B,r204C);
      real r204F#2 = RAdd(r204E,r204D);
      real r2050#1 = RMul(r1E65,r1F20);
      real r2051#1 = RMul(r1E7F,r1F32);
      real r2052#1 = RMul(r1E99,r1F08);
      real r2053#1 = RAdd(r2050,r2051);
      real r2054#2 = RAdd(r2053,r2052);
      real r2055#1 = RMul(r1E65,r1F23);
      real r2056#1 = RMul(r1E7F,r1F35);
      real r2057#1 = RMul(r1E99,r1F10);
      real r2058#1 = RAdd(r2055,r2056);
      real r2059#1 = RAdd(r2058,r2057);
      tensor[3] probe_l_142115#1 = <tensor[3]>[r1E4F,r1E71,r1E8B];
      tensor[3] probe_l_152162#3 = <tensor[3]>[r1E5A,r1E78,r1E92];
      tensor[3] tensor220D#1 = <tensor[3]>[r1F10,r1F2B,r1F40];
      tensor[3] tensor2213#1 = <tensor[3]>[r1F18,r1F10,r1F4A];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F23,r1F35,r1F10];
      real vdot223D#1 = VDot<3>(probe_l_152162,tensor220D);
      real vdot223F#1 = VDot<3>(probe_l_152162,tensor2213);
      real vdot2241#1 = VDot<3>(probe_l_152162,tensor221A);
      tensor[3] op1_e3_l_18223B#1 = <tensor[3]>[vdot223D,vdot223F,vdot2241];
      real op1_e3_l_19224A#1 = VDot<3>(probe_l_142115,op1_e3_l_18223B);
      real r2250#2 = RMul(basisEval1E2C,r1FAF);
      real r2252#1 = RMul(basisEval1E2C,r1FB7);
      real r2254#2 = RMul(basisEval1E2C,r1FBF);
      real r2256#2 = RMul(basisEval1E2C,r1FFB);
      real r2258#3 = RMul(basisEval1E2C,r2000);
      real r225B#1 = RMul(one1E27,r2005);
      real r225D#2 = RMul(basisEval1E2C,r202F);
      real r2260#1 = RMul(coeff1E26,r2034);
      real r2262#3 = RMul(basisEval1E2C,r2039);
      real r2263#2 = RAdd(r2250,r2252);
      real r2264#1 = RAdd(r2263,r2254);
      real r2265#1 = RAdd(r2264,r2256);
      real r2266#1 = RAdd(r2265,r2258);
      real r2267#1 = RAdd(r2266,r225B);
      real r2268#1 = RAdd(r2267,r225D);
      real r2269#1 = RAdd(r2268,r2260);
      real r226A#1 = RAdd(r2269,r2262);
      real r226C#2 = RMul(basisEval1E2C,r1FC8);
      real r226E#1 = RMul(basisEval1E2C,r1FD0);
      real r2270#2 = RMul(basisEval1E2C,r1FD8);
      real r2272#2 = RMul(basisEval1E2C,r200B);
      real r2274#3 = RMul(basisEval1E2C,r2010);
      real r2276#1 = RMul(one1E27,r2015);
      real r2278#2 = RMul(basisEval1E2C,r203F);
      real r227A#1 = RMul(coeff1E26,r2044);
      real r227C#3 = RMul(basisEval1E2C,r2049);
      real r227D#2 = RAdd(r226C,r226E);
      real r227E#1 = RAdd(r227D,r2270);
      real r227F#1 = RAdd(r227E,r2272);
      real r2280#1 = RAdd(r227F,r2274);
      real r2281#1 = RAdd(r2280,r2276);
      real r2282#1 = RAdd(r2281,r2278);
      real r2283#1 = RAdd(r2282,r227A);
      real r2284#1 = RAdd(r2283,r227C);
      real r2286#2 = RMul(basisEval1E2C,r1FE1);
      real r2288#1 = RMul(basisEval1E2C,r1FE9);
      real r228A#2 = RMul(basisEval1E2C,r1FF1);
      real r228C#2 = RMul(basisEval1E2C,r201B);
      real r228E#3 = RMul(basisEval1E2C,r2020);
      real r2290#1 = RMul(one1E27,r2025);
      real r2292#2 = RMul(basisEval1E2C,r204F);
      real r2294#1 = RMul(coeff1E26,r2054);
      real r2296#3 = RMul(basisEval1E2C,r2059);
      real r2297#2 = RAdd(r2286,r2288);
      real r2298#1 = RAdd(r2297,r228A);
      real r2299#1 = RAdd(r2298,r228C);
      real r229A#1 = RAdd(r2299,r228E);
      real r229B#1 = RAdd(r229A,r2290);
      real r229C#1 = RAdd(r229B,r2292);
      real r229D#1 = RAdd(r229C,r2294);
      real r229E#1 = RAdd(r229D,r2296);
      real r22A0#1 = RMul(coeff1E26,r1FBF);
      real r22A1#2 = RMul(basisEval1E2C,r2005);
      real r22A2#1 = RMul(one1E27,r202F);
      real r22A3#2 = RMul(basisEval1E2C,r2034);
      real r22A4#1 = RAdd(r2263,r22A0);
      real r22A5#1 = RAdd(r22A4,r2256);
      real r22A6#1 = RAdd(r22A5,r2258);
      real r22A7#1 = RAdd(r22A6,r22A1);
      real r22A8#1 = RAdd(r22A7,r22A2);
      real r22A9#1 = RAdd(r22A8,r22A3);
      real r22AA#1 = RAdd(r22A9,r2262);
      real r22AB#1 = RMul(coeff1E26,r1FD8);
      real r22AC#2 = RMul(basisEval1E2C,r2015);
      real r22AD#1 = RMul(one1E27,r203F);
      real r22AE#2 = RMul(basisEval1E2C,r2044);
      real r22AF#1 = RAdd(r227D,r22AB);
      real r22B0#1 = RAdd(r22AF,r2272);
      real r22B1#1 = RAdd(r22B0,r2274);
      real r22B2#1 = RAdd(r22B1,r22AC);
      real r22B3#1 = RAdd(r22B2,r22AD);
      real r22B4#1 = RAdd(r22B3,r22AE);
      real r22B5#1 = RAdd(r22B4,r227C);
      real r22B6#1 = RMul(coeff1E26,r1FF1);
      real r22B7#2 = RMul(basisEval1E2C,r2025);
      real r22B8#1 = RMul(one1E27,r204F);
      real r22B9#2 = RMul(basisEval1E2C,r2054);
      real r22BA#1 = RAdd(r2297,r22B6);
      real r22BB#1 = RAdd(r22BA,r228C);
      real r22BC#1 = RAdd(r22BB,r228E);
      real r22BD#1 = RAdd(r22BC,r22B7);
      real r22BE#1 = RAdd(r22BD,r22B8);
      real r22BF#1 = RAdd(r22BE,r22B9);
      real r22C0#1 = RAdd(r22BF,r2296);
      real r22C2#1 = RMul(one1E27,r1FB7);
      real r22C3#1 = RMul(coeff1E26,r1FFB);
      real r22C4#1 = RAdd(r2250,r22C2);
      real r22C5#1 = RAdd(r22C4,r2254);
      real r22C6#1 = RAdd(r22C5,r22C3);
      real r22C7#1 = RAdd(r22C6,r2258);
      real r22C8#1 = RAdd(r22C7,r22A1);
      real r22C9#1 = RAdd(r22C8,r225D);
      real r22CA#1 = RAdd(r22C9,r22A3);
      real r22CB#1 = RAdd(r22CA,r2262);
      real r22CC#1 = RMul(one1E27,r1FD0);
      real r22CD#1 = RMul(coeff1E26,r200B);
      real r22CE#1 = RAdd(r226C,r22CC);
      real r22CF#1 = RAdd(r22CE,r2270);
      real r22D0#1 = RAdd(r22CF,r22CD);
      real r22D1#1 = RAdd(r22D0,r2274);
      real r22D2#1 = RAdd(r22D1,r22AC);
      real r22D3#1 = RAdd(r22D2,r2278);
      real r22D4#1 = RAdd(r22D3,r22AE);
      real r22D5#1 = RAdd(r22D4,r227C);
      real r22D6#1 = RMul(one1E27,r1FE9);
      real r22D7#1 = RMul(coeff1E26,r201B);
      real r22D8#1 = RAdd(r2286,r22D6);
      real r22D9#1 = RAdd(r22D8,r228A);
      real r22DA#1 = RAdd(r22D9,r22D7);
      real r22DB#1 = RAdd(r22DA,r228E);
      real r22DC#1 = RAdd(r22DB,r22B7);
      real r22DD#1 = RAdd(r22DC,r2292);
      real r22DE#1 = RAdd(r22DD,r22B9);
      real r22DF#1 = RAdd(r22DE,r2296);
      real realLit2377#1 = 0.2e1;
      real op1_e3_l_212376#9 = RMul(realLit2377,op1_e3_l_19224A);
      real varAcc237D#1 = VIndex<3,0>(xn237C);
      real varAcc237E#1 = VIndex<3,1>(xn237C);
      real varAcc237F#1 = VIndex<3,2>(xn237C);
      real prod2384#2 = RMul(varAcc237D,prod1E28);
      real prod2386#1 = RMul(varAcc237E,one1E27);
      real prod2387#2 = RMul(one1E27,prod2386);
      real prod2389#1 = RMul(one1E27,varAcc237F);
      real prod238A#2 = RMul(one1E27,prod2389);
      real mult238D#1 = RMul(coeff1E26,prod238A);
      real mult238E#1 = RMul(coeff1E26,prod2387);
      real mult238F#1 = RMul(coeff1E26,prod2384);
      real sum2390#1 = RAdd(mult238E,mult238F);
      real sum2391#1 = RAdd(mult238D,sum2390);
      real sum2392#3 = RAdd(basisEval1E2B,sum2391);
      real basisEval2394#3 = RMul(one1E27,prod2384);
      real basisEval2395#3 = RMul(one1E27,prod2387);
      real basisEval2396#3 = RMul(one1E27,prod238A);
      real r23B7#1 = RMul(dof_load1DD8,sum2392);
      real r23BA#1 = RMul(dof_load1DE1,basisEval2394);
      real r23BD#1 = RMul(dof_load1DEA,basisEval2395);
      real r23C0#1 = RMul(dof_load1DF3,basisEval2396);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C5#1 = RMul(dof_load1DD9,sum2392);
      real r23C7#1 = RMul(dof_load1DE2,basisEval2394);
      real r23C9#1 = RMul(dof_load1DEB,basisEval2395);
      real r23CB#1 = RMul(dof_load1DF4,basisEval2396);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23D0#1 = RMul(dof_load1DDA,sum2392);
      real r23D2#1 = RMul(dof_load1DE3,basisEval2394);
      real r23D4#1 = RMul(dof_load1DEC,basisEval2395);
      real r23D6#1 = RMul(dof_load1DF5,basisEval2396);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_2223B4#1 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2403#1 = RDiv(r226A,op1_e3_l_212376);
      real r2405#1 = RDiv(r2284,op1_e3_l_212376);
      real r2407#1 = RDiv(r229E,op1_e3_l_212376);
      tensor[3] tensor2408#1 = <tensor[3]>[r2403,r2405,r2407];
      real r240A#1 = RDiv(r22AA,op1_e3_l_212376);
      real r240C#1 = RDiv(r22B5,op1_e3_l_212376);
      real r240E#1 = RDiv(r22C0,op1_e3_l_212376);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22CB,op1_e3_l_212376);
      real r2413#1 = RDiv(r22D5,op1_e3_l_212376);
      real r2415#1 = RDiv(r22DF,op1_e3_l_212376);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      tensor[3] op1_e3_l_24242E#3 = VSub<3>(probe_l_2223B4,pos1D95);
      real vdot2433#1 = VDot<3>(tensor2408,op1_e3_l_24242E);
      real vdot2435#1 = VDot<3>(tensor240F,op1_e3_l_24242E);
      real vdot2437#1 = VDot<3>(tensor2416,op1_e3_l_24242E);
      tensor[3] op1_e3_l_252431#3 = <tensor[3]>[vdot2433,vdot2435,vdot2437];
      tensor[3] xn2440#4 = VSub<3>(xn237C,op1_e3_l_252431);
      real _t2443#1 = 0.1e-7;
      real op1_e3_l_4124A4#1 = VDot<3>(op1_e3_l_252431,op1_e3_l_252431);
      real _t24A7#1 = Sqrt(op1_e3_l_4124A4);
      bool _t24AA#1 = GTE<real>(_t2443,_t24A7);
      if _t24AA then goto ASSIGN313A else goto JOIN24D6
    ASSIGN313A:  preds = [COND24AC]
      tensor[3] _t24AF#1 = <tensor[3]>[one1E27,one1E27,one1E27];
      real _t24B1#1 = VDot<3>(_t24AF,xn2440);
      bool _t24B4#1 = GT<real>(one1E27,_t24B1);
      real _t24B6#3 = 0.1e-8;
      tensor[3] _t24B8#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24BA#3 = VAdd<3>(_t24B8,xn2440);
      real _t24BD#1 = VIndex<3,0>(_t24BA);
      real _t24BF#3 = -0.e0;
      bool _t24C1#1 = GT<real>(_t24BD,_t24BF);
      real _t24C3#1 = VIndex<3,1>(_t24BA);
      bool _t24C5#1 = GT<real>(_t24C3,_t24BF);
      real _t24C7#1 = VIndex<3,2>(_t24BA);
      bool _t24C9#1 = GT<real>(_t24C7,_t24BF);
      bool _t24CB#1 = BAnd(_t24C5,_t24C9);
      bool _t24CD#1 = BAnd(_t24C1,_t24CB);
      bool _t24CF#1 = BAnd(_t24B4,_t24CD);
      if _t24CF then goto ASSIGN24D3 else goto JOIN24D5
    ASSIGN24D3:  preds = [COND24D1]
      femData:MeshPos _t24D2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1D94,cellInt1DAE,xn2440,pos1D95);
      return _t24D2
      goto JOIN24D5
    JOIN24D5:  preds = [*RETURN(_t24D2)24D4,COND24D1]
      goto JOIN24D6
    JOIN24D6:  preds = [JOIN24D5,COND24AC]
      int newtonInt24D7#2 = IAdd(newtonInt24D8,_t1DA1);
      bool _t24DA#1 = GTE<int>(newtonInt24D7,_t1DA5);
      if _t24DA then goto ASSIGN24DE else goto JOIN24E8
    ASSIGN24DE:  preds = [COND24DC]
      bool _t24DD#1 = GTE<int>(cellInt1DAE,numCell1DA3);
      if _t24DD then goto ASSIGN24E1 else goto ASSIGN24EA
    ASSIGN24E1:  preds = [COND24DF]
      femData:MeshPos _t24E0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24E0
      goto JOIN24E5
    JOIN24E5:  preds = [*RETURN(_t24E0)24E2,ASSIGN24EA]
      int cellInt24E3#1 = phi(cellInt24E4)
      goto JOIN24E8
    JOIN24E8:  preds = [JOIN24E5,COND24DC]
      int cellInt24E6#1 = phi(cellInt24E3,cellInt1DAE)
      int newtonInt24E7#1 = phi(newtonInt1D9B,newtonInt24D7)
      goto FOREACH1DAC
    ASSIGN24EA:  preds = [COND24DF]
      int cellInt24E4#1 = IAdd(cellInt1DAE,_t1DA1);
      goto JOIN24E5
    ASSIGN24EC:  preds = [FOREACH1DAC]
      femData:MeshPos _t24EB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24EB
}
## input initialization
  ENTRY1AD7:  preds = []
    real isoval1AD8#1 = 0.2e0;
    globals.isoval1AB8 = isoval1AD8;
    real thick1ADB#1 = 0.7e-1;
    globals.thick1AB9 = thick1ADB;
    real _t1ADE#2 = -0.3e1;
    real _t1AE0#1 = 0.3e1;
    tensor[3] camEye1AE2#1 = <tensor[3]>[_t1ADE,_t1ADE,_t1AE0];
    globals.camEye1ABA = camEye1AE2;
    real _t1AE5#3 = 0.5e0;
    tensor[3] camAt1AE7#1 = <tensor[3]>[_t1AE5,_t1AE5,_t1AE5];
    globals.camAt1ABB = camAt1AE7;
    real _t1AEA#2 = 0.e0;
    real _t1AEC#2 = 0.1e1;
    tensor[3] camUp1AEE#2 = <tensor[3]>[_t1AEA,_t1AEA,_t1AEC];
    globals.camUp1ABC = camUp1AEE;
    real camFOV1AF1#1 = 0.137e2;
    globals.camFOV1ABD = camFOV1AF1;
    int iresU1AF4#2 = 500;
    globals.iresU1ABE = iresU1AF4;
    globals.iresV1ABF = iresU1AF4;
    real camNear1AF8#1 = -0.2e1;
    globals.camNear1AC0 = camNear1AF8;
    real camFar1AFB#1 = 0.5e1;
    globals.camFar1AC1 = camFar1AFB;
    globals.refStep1AC2 = _t1AEC;
    real rayStep1AFF#1 = 0.1e-1;
    globals.rayStep1AC3 = rayStep1AFF;
    globals.lightVsp1AC4 = camUp1AEE;
    real phongKa1B03#1 = 0.1e0;
    globals.phongKa1AC5 = phongKa1B03;
    real phongKd1B06#1 = 0.9e0;
    globals.phongKd1AC6 = phongKd1B06;
    bool debug1B09#1 = false;
    globals.debug1AC7 = debug1B09;
    int su1B0C#2 = 250;
    globals.su1AC8 = su1B0C;
    globals.sv1AC9 = su1B0C;
    return
## global-variable initialization
  ENTRY1B11:  preds = []
    femData:Mesh a1B12#3 = globals.a1AB5;
    femData:Space 0b042F_intermedateGlobal1B14#1 = globals.0b042F_intermedateGlobal1AB6;
    femData:FemFunc 0c0431_intermedateGlobal1B16#1 = globals.0c0431_intermedateGlobal1AB7;
    tensor[3] camEye1B18#1 = globals.camEye1ABA;
    tensor[3] camAt1B1A#1 = globals.camAt1ABB;
    tensor[3] camUp1B1C#3 = globals.camUp1ABC;
    real camFOV1B1E#1 = globals.camFOV1ABD;
    int iresU1B20#1 = globals.iresU1ABE;
    int iresV1B22#1 = globals.iresV1ABF;
    tensor[3] lightVsp1B24#5 = globals.lightVsp1AC4;
    int _t1B26#1 = 0;
    int _t1B28#1 = 1;
    int _t1B2A#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B12);
    int _t1B2C#1 = ISub(_t1B2A,_t1B28);
    int[] _t1B2E#1 = Range(_t1B26,_t1B2C);
    femData:MeshCell[] _t1B30#1 = <femData:MeshCell[]>{};
  FOREACH1B33:  preds = [ASSIGN1B31,NEXT1B39]
    foreach (_t1B32 in _t1B2E) on exit goto ASSIGN1B3B
      femData:MeshCell[] _t1B37#1 = phi(_t1B30,_t1B36)
    femData:MeshCell _t1B34#1 = LoadFem<femData:MeshCell>(a1B12,_t1B32);
    femData:MeshCell[] _t1B36#1 = Append<femData:MeshCell>(_t1B37,_t1B34);
    goto FOREACH1B33
  ASSIGN1B3B:  preds = [FOREACH1B33]
    femData:Space b1B3A#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1B14,a1B12);
    femData:FemFunc c1B3C#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1B16,b1B3A);
    femData:Space _t1B3E#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B3C);
    femData:Mesh _t1B40#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B3E);
    image(IMAGE1D<double[3]>) I1B42#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B48#9 = VSub<3>(camAt1B1A,camEye1B18);
    real op1_e3_l_41B4B#1 = VDot<3>(op1_e3_l_21B48,op1_e3_l_21B48);
    real camDist1B4E#4 = Sqrt(op1_e3_l_41B4B);
    globals.camDist1ACA = camDist1B4E;
    real realLit1B53#9 = 0.1e1;
    real op1_e3_l_91B52#6 = RDiv(realLit1B53,camDist1B4E);
    tensor[3] camN1B57#4 = VScale<3>(op1_e3_l_91B52,op1_e3_l_21B48);
    globals.camN1ACB = camN1B57;
    real realLit1B5C#6 = 0.e0;
    real r1B5D#3 = TensorIndex<tensor[3],[0]>(camUp1B1C);
    real r1B5E#3 = RMul(realLit1B5C,r1B5D);
    real r1B5F#3 = TensorIndex<tensor[3],[1]>(camUp1B1C);
    real r1B60#3 = RMul(realLit1B5C,r1B5F);
    real r1B61#3 = TensorIndex<tensor[3],[2]>(camUp1B1C);
    real r1B62#5 = RMul(realLit1B5C,r1B61);
    real r1B63#3 = RAdd(r1B5E,r1B60);
    real r1B64#3 = RAdd(r1B63,r1B62);
    real r1B66#1 = RMul(realLit1B53,r1B61);
    real r1B67#1 = RAdd(r1B63,r1B66);
    real realLit1B68#6 = -0.1e1;
    real r1B69#1 = RMul(realLit1B68,r1B5F);
    real r1B6A#1 = RAdd(r1B5E,r1B69);
    real r1B6B#1 = RAdd(r1B6A,r1B62);
    tensor[3] tensor1B6C#1 = <tensor[3]>[r1B64,r1B67,r1B6B];
    real r1B6D#1 = RMul(realLit1B68,r1B61);
    real r1B6E#1 = RAdd(r1B63,r1B6D);
    real r1B6F#1 = RMul(realLit1B53,r1B5D);
    real r1B70#1 = RAdd(r1B6F,r1B60);
    real r1B71#1 = RAdd(r1B70,r1B62);
    tensor[3] tensor1B72#1 = <tensor[3]>[r1B6E,r1B64,r1B71];
    real r1B73#1 = RMul(realLit1B53,r1B5F);
    real r1B74#1 = RAdd(r1B5E,r1B73);
    real r1B75#1 = RAdd(r1B74,r1B62);
    real r1B76#1 = RMul(realLit1B68,r1B5D);
    real r1B77#1 = RAdd(r1B76,r1B60);
    real r1B78#1 = RAdd(r1B77,r1B62);
    tensor[3] tensor1B79#1 = <tensor[3]>[r1B75,r1B78,r1B64];
    real vdot1B9C#1 = VDot<3>(op1_e3_l_21B48,tensor1B6C);
    real vdot1B9E#1 = VDot<3>(op1_e3_l_21B48,tensor1B72);
    real vdot1BA0#1 = VDot<3>(op1_e3_l_21B48,tensor1B79);
    tensor[3] op1_e3_l_171B9A#6 = <tensor[3]>[vdot1B9C,vdot1B9E,vdot1BA0];
    real op1_e3_l_341BA9#1 = VDot<3>(op1_e3_l_171B9A,op1_e3_l_171B9A);
    real r1BAD#1 = RMul(op1_e3_l_91B52,op1_e3_l_91B52);
    real op1_e3_l_351BAC#1 = RMul(r1BAD,op1_e3_l_341BA9);
    real op1_e3_l_361BB1#1 = Sqrt(op1_e3_l_351BAC);
    tensor[3] op1_e3_l_371BB4#1 = VScale<3>(op1_e3_l_91B52,op1_e3_l_171B9A);
    real op1_e3_l_381BB7#2 = RDiv(realLit1B53,op1_e3_l_361BB1);
    tensor[3] camU1BBC#4 = VScale<3>(op1_e3_l_381BB7,op1_e3_l_371BB4);
    globals.camU1ACC = camU1BBC;
    real r1BC2#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B48);
    real r1BC3#3 = RMul(realLit1B5C,r1BC2);
    real r1BC4#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B48);
    real r1BC5#3 = RMul(realLit1B5C,r1BC4);
    real r1BC6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B48);
    real r1BC7#5 = RMul(realLit1B5C,r1BC6);
    real r1BC8#3 = RAdd(r1BC3,r1BC5);
    real r1BC9#3 = RAdd(r1BC8,r1BC7);
    real r1BCB#1 = RMul(realLit1B53,r1BC6);
    real r1BCC#1 = RAdd(r1BC8,r1BCB);
    real r1BCE#1 = RMul(realLit1B68,r1BC4);
    real r1BCF#1 = RAdd(r1BC3,r1BCE);
    real r1BD0#1 = RAdd(r1BCF,r1BC7);
    tensor[3] tensor1BD1#1 = <tensor[3]>[r1BC9,r1BCC,r1BD0];
    real r1BD2#1 = RMul(realLit1B68,r1BC6);
    real r1BD3#1 = RAdd(r1BC8,r1BD2);
    real r1BD4#1 = RMul(realLit1B53,r1BC2);
    real r1BD5#1 = RAdd(r1BD4,r1BC5);
    real r1BD6#1 = RAdd(r1BD5,r1BC7);
    tensor[3] tensor1BD7#1 = <tensor[3]>[r1BD3,r1BC9,r1BD6];
    real r1BD8#1 = RMul(realLit1B53,r1BC4);
    real r1BD9#1 = RAdd(r1BC3,r1BD8);
    real r1BDA#1 = RAdd(r1BD9,r1BC7);
    real r1BDB#1 = RMul(realLit1B68,r1BC2);
    real r1BDC#1 = RAdd(r1BDB,r1BC5);
    real r1BDD#1 = RAdd(r1BDC,r1BC7);
    tensor[3] tensor1BDE#1 = <tensor[3]>[r1BDA,r1BDD,r1BC9];
    real vdot1C01#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD1);
    real vdot1C03#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD7);
    real vdot1C05#1 = VDot<3>(op1_e3_l_171B9A,tensor1BDE);
    tensor[3] op1_e3_l_471BFF#1 = <tensor[3]>[vdot1C01,vdot1C03,vdot1C05];
    tensor[3] op1_e3_l_501C0E#3 = VScale<3>(op1_e3_l_91B52,op1_e3_l_471BFF);
    real r1C12#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C0E);
    real r1C13#3 = RMul(op1_e3_l_381BB7,op1_e3_l_91B52);
    real r1C14#2 = RMul(r1C13,r1C12);
    real r1C15#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C0E);
    real r1C16#2 = RMul(r1C13,r1C15);
    real r1C17#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C0E);
    real r1C18#2 = RMul(r1C13,r1C17);
    tensor[3] camV1C11#1 = <tensor[3]>[r1C14,r1C16,r1C18];
    globals.camV1ACD = camV1C11;
    real _t1C23#1 = 0.314159265358979323846264338327950288e1;
    real _t1C25#1 = 0.36e3;
    real op1_e3_l_51C27#1 = RMul(camFOV1B1E,_t1C23);
    real op1_e3_l_61C2A#1 = RDiv(op1_e3_l_51C27,_t1C25);
    real op1_e3_l_101C2D#2 = Tan(op1_e3_l_61C2A);
    real camVmax1C30#1 = RMul(op1_e3_l_101C2D,camDist1B4E);
    globals.camVmax1ACE = camVmax1C30;
    real _t1C34#1 = IntToReal(iresU1B20);
    real _t1C36#1 = IntToReal(iresV1B22);
    real r1C39#1 = RMul(_t1C34,op1_e3_l_101C2D);
    real op1_e3_l_141C38#1 = RMul(r1C39,camDist1B4E);
    real camUmax1C3D#1 = RDiv(op1_e3_l_141C38,_t1C36);
    globals.camUmax1ACF = camUmax1C3D;
    real op1_e3_l_31C43#1 = VDot<3>(lightVsp1B24,lightVsp1B24);
    real op1_e3_l_41C46#1 = Sqrt(op1_e3_l_31C43);
    real op1_e3_l_51C49#1 = RDiv(realLit1B53,op1_e3_l_41C46);
    real r1C4F#1 = VIndex<3,0>(camU1BBC);
    real r1C50#3 = TensorIndex<tensor[3],[0]>(lightVsp1B24);
    real r1C51#1 = RMul(r1C4F,r1C50);
    real r1C53#3 = TensorIndex<tensor[3],[1]>(lightVsp1B24);
    real r1C54#1 = RMul(r1C14,r1C53);
    real r1C55#1 = VIndex<3,0>(camN1B57);
    real r1C56#3 = TensorIndex<tensor[3],[2]>(lightVsp1B24);
    real r1C57#1 = RMul(r1C55,r1C56);
    real r1C58#1 = RAdd(r1C51,r1C54);
    real r1C59#1 = RAdd(r1C58,r1C57);
    real r1C5A#1 = VIndex<3,1>(camU1BBC);
    real r1C5B#1 = RMul(r1C5A,r1C50);
    real r1C5D#1 = RMul(r1C16,r1C53);
    real r1C5E#1 = VIndex<3,1>(camN1B57);
    real r1C5F#1 = RMul(r1C5E,r1C56);
    real r1C60#1 = RAdd(r1C5B,r1C5D);
    real r1C61#1 = RAdd(r1C60,r1C5F);
    real r1C62#1 = VIndex<3,2>(camU1BBC);
    real r1C63#1 = RMul(r1C62,r1C50);
    real r1C65#1 = RMul(r1C18,r1C53);
    real r1C66#1 = VIndex<3,2>(camN1B57);
    real r1C67#1 = RMul(r1C66,r1C56);
    real r1C68#1 = RAdd(r1C63,r1C65);
    real r1C69#1 = RAdd(r1C68,r1C67);
    tensor[3] op1_e3_l_61C4E#1 = <tensor[3]>[r1C59,r1C61,r1C69];
    tensor[3] light1C87#1 = VScale<3>(op1_e3_l_51C49,op1_e3_l_61C4E);
    globals.light1AD0 = light1C87;
    globals._t1AD1 = _t1B40;
    globals._tX1AD2 = _t1B3E;
    globals.c1AD3 = c1B3C;
    globals.I1AD6 = I1B42;
    return
## strand
  strand raycast (int ui1C92#2, int vi1C93#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1C9E:  preds = []
        int iresU1C9F#1 = globals.iresU1ABE;
        int iresV1CA1#1 = globals.iresV1ABF;
        real camNear1CA3#1 = globals.camNear1AC0;
        real camDist1CA5#1 = globals.camDist1ACA;
        tensor[3] camN1CA7#1 = globals.camN1ACB;
        tensor[3] camU1CA9#1 = globals.camU1ACC;
        tensor[3] camV1CAB#1 = globals.camV1ACD;
        real camVmax1CAD#3 = globals.camVmax1ACE;
        real camUmax1CAF#2 = globals.camUmax1ACF;
        real _t1CB1#4 = -0.5e0;
        real _t1CB3#1 = IntToReal(ui1C92);
        real _t1CB5#1 = IntToReal(iresU1C9F);
        real _t1CB7#2 = 0.5e0;
        real op1_e3_l_61CB9#1 = RSub(_t1CB5,_t1CB7);
        real op1_e3_l_71CBC#1 = RSub(_t1CB3,_t1CB1);
        real op1_e3_l_81CBF#1 = RSub(op1_e3_l_61CB9,_t1CB1);
        real op1_e3_l_91CC2#2 = RNeg(camUmax1CAF);
        real op1_e3_l_101CC5#1 = RDiv(op1_e3_l_71CBC,op1_e3_l_81CBF);
        real op1_e3_l_111CC8#1 = RSub(camUmax1CAF,op1_e3_l_91CC2);
        real op1_e3_l_131CCB#1 = RMul(op1_e3_l_101CC5,op1_e3_l_111CC8);
        real rayU1CCE#2 = RAdd(op1_e3_l_91CC2,op1_e3_l_131CCB);
        real _t1CD1#1 = IntToReal(vi1C93);
        real _t1CD3#1 = IntToReal(iresV1CA1);
        real op1_e3_l_61CD5#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_71CD8#1 = RSub(_t1CD1,_t1CB1);
        real op1_e3_l_81CDB#1 = RSub(op1_e3_l_61CD5,_t1CB1);
        real op1_e3_l_91CDE#1 = RNeg(camVmax1CAD);
        real op1_e3_l_101CE1#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_81CDB);
        real op1_e3_l_111CE4#1 = RSub(op1_e3_l_91CDE,camVmax1CAD);
        real op1_e3_l_121CE7#1 = RMul(op1_e3_l_101CE1,op1_e3_l_111CE4);
        real rayV1CEA#2 = RAdd(camVmax1CAD,op1_e3_l_121CE7);
        tensor[3] op1_e3_l_331CFC#1 = VScale<3>(rayU1CCE,camU1CA9);
        tensor[3] op1_e3_l_341CFF#1 = VScale<3>(rayV1CEA,camV1CAB);
        tensor[3] op1_e3_l_351D02#3 = VAdd<3>(op1_e3_l_331CFC,op1_e3_l_341CFF);
        real realLit1D06#2 = 0.1e1;
        real r1D07#3 = RDiv(realLit1D06,camDist1CA5);
        real r1D08#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D02);
        real r1D09#1 = RMul(r1D07,r1D08);
        real r1D0A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D02);
        real r1D0B#1 = RMul(r1D07,r1D0A);
        real r1D0C#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D02);
        real r1D0D#1 = RMul(r1D07,r1D0C);
        tensor[3] op1_e3_l_361D05#1 = <tensor[3]>[r1D09,r1D0B,r1D0D];
        tensor[3] rayVec1D18#1 = VAdd<3>(camN1CA7,op1_e3_l_361D05);
        real _t1D1D#8 = 0.e0;
        tensor[3] rgb1D1F#1 = <tensor[3]>[_t1D1D,_t1D1D,_t1D1D];
        tensor[4] rgba1D21#1 = <tensor[4]>[_t1D1D,_t1D1D,_t1D1D,_t1D1D];
        self.rayU = rayU1CCE;
        self.rayV = rayV1CEA;
        self.rayN = camNear1CA3;
        self.rayVec = rayVec1D18;
        self.transp = realLit1D06;
        self.rgb = rgb1D1F;
        self.rgba = rgba1D21;
        self.gray = _t1D1D;
        self.ui = ui1C92;
        self.vi = vi1C93;
        return
    end state init
    method update
        ENTRY1D2E:  preds = []
          image(IMAGE1D<double[3]>) I1D2F#17 = globals.I1AD6;
          real isoval1D31#1 = globals.isoval1AB8;
          femData:Mesh _t1D33#17 = globals._t1AD1;
          femData:Space _t1D35#10 = globals._tX1AD2;
          femData:FemFunc c1D37#10 = globals.c1AD3;
          femData:Mesh a1D3D#1 = globals.a1AB5;
          real thick1D3F#1 = globals.thick1AB9;
          tensor[3] camEye1D41#1 = globals.camEye1ABA;
          real camNear1D43#2 = globals.camNear1AC0;
          real camFar1D45#2 = globals.camFar1AC1;
          real refStep1D47#1 = globals.refStep1AC2;
          real rayStep1D49#2 = globals.rayStep1AC3;
          real phongKa1D4B#1 = globals.phongKa1AC5;
          real phongKd1D4D#1 = globals.phongKd1AC6;
          bool debug1D4F#1 = globals.debug1AC7;
          int su1D51#1 = globals.su1AC8;
          int sv1D53#1 = globals.sv1AC9;
          tensor[3] light1D55#1 = globals.light1AD0;
          real rayN1D57#4 = self.rayN;
          tensor[3] rayVec1D59#3 = self.rayVec;
          real transp1D5B#10 = self.transp;
          tensor[3] rgb1D5D#9 = self.rgb;
          int ui1D5F#1 = self.ui;
          int vi1D61#1 = self.vi;
          if debug1D4F then goto ASSIGN1D65 else goto JOIN1D6F
        ASSIGN1D65:  preds = [COND1D63]
          bool _t1D64#1 = NEQ<int>(ui1D5F,su1D51);
          if _t1D64 then goto ASSIGN1D68 else goto ASSIGN2E4B
        ASSIGN1D68:  preds = [COND1D66]
          bool _t1D67#1 = true;
          goto JOIN1D6B
        JOIN1D6B:  preds = [ASSIGN1D68,ASSIGN2E4B]
          bool _t1D69#1 = phi(_t1D67,_t1D6A)
          if _t1D69 then goto STABILIZE1D6D else goto JOIN1D6E
        STABILIZE1D6D:  preds = [COND1D6C]
          stabilize
          goto JOIN1D6E
        JOIN1D6E:  preds = [*STABILIZE1D6D,COND1D6C]
          goto JOIN1D6F
        JOIN1D6F:  preds = [JOIN1D6E,COND1D63]
          tensor[3] op1_e3_l_31D70#1 = VScale<3>(rayN1D57,rayVec1D59);
          tensor[3] x1D73#5 = VAdd<3>(camEye1D41,op1_e3_l_31D70);
          real _t1D76#61 = 0.e0;
          real _t1D78#2 = VIndex<3,0>(x1D73);
          bool _t1D7A#1 = LTE<real>(_t1D76,_t1D78);
          if _t1D7A then goto ASSIGN1D7E else goto JOIN2E01
        ASSIGN1D7E:  preds = [COND1D7C]
          real _t1D7D#45 = 0.1e1;
          bool _t1D7F#1 = LTE<real>(_t1D78,_t1D7D);
          if _t1D7F then goto ASSIGN1D83 else goto JOIN2DFE
        ASSIGN1D83:  preds = [COND1D81]
          real _t1D82#2 = VIndex<3,1>(x1D73);
          bool _t1D84#1 = LTE<real>(_t1D76,_t1D82);
          if _t1D84 then goto ASSIGN1D88 else goto JOIN2DFB
        ASSIGN1D88:  preds = [COND1D86]
          bool _t1D87#1 = LTE<real>(_t1D82,_t1D7D);
          if _t1D87 then goto ASSIGN1D8B else goto JOIN2DF8
        ASSIGN1D8B:  preds = [COND1D89]
          real _t1D8A#2 = VIndex<3,2>(x1D73);
          bool _t1D8C#1 = LTE<real>(_t1D76,_t1D8A);
          if _t1D8C then goto ASSIGN1D90 else goto JOIN2DF5
        ASSIGN1D90:  preds = [COND1D8E]
          bool _t1D8F#1 = LTE<real>(_t1D8A,_t1D7D);
          if _t1D8F then goto ASSIGN24EE else goto JOIN2DF2
        ASSIGN24EE:  preds = [COND1D91]
          femData:MeshPos p1D92#1 = findPos1D93 (a1D3D,x1D73);
          bool _t24EF#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1D92);
          if _t24EF then goto ASSIGN24F3 else goto JOIN2DEF
        ASSIGN24F3:  preds = [COND24F1]
          real _t24F2#1 = 0.13e1;
          femData:MeshPos callFindPos24F4#2 = findPos1D93 (_t1D33,x1D73);
          int intPos24F6#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F4);
          tensor[3] refPos24F8#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F4);
          int ilit24FB#1 = 10;
          int mulRes24FC#10 = IMul(intPos24F6,ilit24FB);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,mulRes24FC);
          int ilit2500#22 = 1;
          int addRes2501#1 = IAdd(mulRes24FC,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2501);
          int ilit2503#10 = 2;
          int addRes2504#1 = IAdd(mulRes24FC,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2504);
          int ilit2506#10 = 3;
          int addRes2507#1 = IAdd(mulRes24FC,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2507);
          int ilit2509#2 = 4;
          int addRes250A#1 = IAdd(mulRes24FC,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250A);
          int ilit250C#1 = 5;
          int addRes250D#1 = IAdd(mulRes24FC,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250D);
          int ilit250F#1 = 6;
          int addRes2510#1 = IAdd(mulRes24FC,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2510);
          int ilit2512#1 = 7;
          int addRes2513#1 = IAdd(mulRes24FC,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2513);
          int ilit2515#1 = 8;
          int addRes2516#1 = IAdd(mulRes24FC,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2516);
          int ilit2518#1 = 9;
          int addRes2519#1 = IAdd(mulRes24FC,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2519);
          int mulRes2542#1 = IMul(ilit2500,idx24FF);
          int mulRes2544#1 = IMul(ilit2500,idx2502);
          int mulRes2547#1 = IMul(ilit2500,idx2505);
          int mulRes254A#1 = IMul(ilit2500,idx2508);
          int mulRes254D#1 = IMul(ilit2500,idx250B);
          int mulRes2550#1 = IMul(ilit2500,idx250E);
          int mulRes2553#1 = IMul(ilit2500,idx2511);
          int mulRes2556#1 = IMul(ilit2500,idx2514);
          int mulRes2559#1 = IMul(ilit2500,idx2517);
          int mulRes255C#1 = IMul(ilit2500,idx251A);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2542);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2544);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2547);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254A);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254D);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2550);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2553);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2556);
          real dof2565#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2559);
          real dof2566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes255C);
          tensor[10] dofs2567#4 = <tensor[10]>[dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564,dof2565,dof2566];
          real varAcc2593#5 = VIndex<3,0>(refPos24F8);
          real varAcc2594#4 = VIndex<3,1>(refPos24F8);
          real varAcc2595#4 = VIndex<3,2>(refPos24F8);
          real coeff2596#4 = 0.2e1;
          real prod22598#1 = RMul(varAcc2593,varAcc2593);
          real prod259A#3 = RMul(_t1D7D,_t1D7D);
          real prod259B#2 = RMul(prod22598,prod259A);
          real coeff259C#7 = 0.4e1;
          real prod259E#2 = RMul(varAcc2594,_t1D7D);
          real prod259F#2 = RMul(varAcc2593,prod259E);
          real prod25A1#2 = RMul(_t1D7D,varAcc2595);
          real prod25A2#2 = RMul(varAcc2593,prod25A1);
          real coeff25A3#4 = -0.3e1;
          real prod25A4#5 = RMul(varAcc2593,prod259A);
          real prod225A5#1 = RMul(varAcc2594,varAcc2594);
          real prod25A6#1 = RMul(prod225A5,_t1D7D);
          real prod25A7#2 = RMul(_t1D7D,prod25A6);
          real prod25A8#1 = RMul(varAcc2594,varAcc2595);
          real prod25A9#2 = RMul(_t1D7D,prod25A8);
          real prod25AA#5 = RMul(_t1D7D,prod259E);
          real prod225AB#1 = RMul(varAcc2595,varAcc2595);
          real prod25AC#1 = RMul(_t1D7D,prod225AB);
          real prod25AD#2 = RMul(_t1D7D,prod25AC);
          real prod25AE#5 = RMul(_t1D7D,prod25A1);
          real prod25AF#4 = RMul(_t1D7D,prod259A);
          real mult25B0#10 = RMul(_t1D7D,prod25AF);
          real mult25B1#1 = RMul(coeff25A3,prod25AE);
          real mult25B2#2 = RMul(coeff2596,prod25AD);
          real mult25B3#1 = RMul(coeff25A3,prod25AA);
          real mult25B4#2 = RMul(coeff259C,prod25A9);
          real mult25B5#2 = RMul(coeff2596,prod25A7);
          real mult25B6#1 = RMul(coeff25A3,prod25A4);
          real mult25B7#2 = RMul(coeff259C,prod25A2);
          real mult25B8#2 = RMul(coeff259C,prod259F);
          real mult25B9#2 = RMul(coeff2596,prod259B);
          real sum25BA#1 = RAdd(mult25B8,mult25B9);
          real sum25BB#1 = RAdd(mult25B7,sum25BA);
          real sum25BC#1 = RAdd(mult25B6,sum25BB);
          real sum25BD#1 = RAdd(mult25B5,sum25BC);
          real sum25BE#1 = RAdd(mult25B4,sum25BD);
          real sum25BF#1 = RAdd(mult25B3,sum25BE);
          real sum25C0#1 = RAdd(mult25B2,sum25BF);
          real sum25C1#1 = RAdd(mult25B1,sum25C0);
          real sum25C2#1 = RAdd(mult25B0,sum25C1);
          real coeff25C4#23 = -0.1e1;
          real mult25C5#1 = RMul(coeff25C4,prod25A4);
          real sum25C6#1 = RAdd(mult25C5,mult25B9);
          real mult25C8#1 = RMul(coeff25C4,prod25AA);
          real sum25C9#1 = RAdd(mult25C8,mult25B5);
          real mult25CB#1 = RMul(coeff25C4,prod25AE);
          real sum25CC#1 = RAdd(mult25CB,mult25B2);
          real coeff25CE#9 = -0.4e1;
          real mult25CF#5 = RMul(coeff259C,prod25AE);
          real mult25D0#1 = RMul(coeff25CE,prod25AD);
          real mult25D1#2 = RMul(coeff25CE,prod25A9);
          real mult25D2#2 = RMul(coeff25CE,prod25A2);
          real sum25D3#1 = RAdd(mult25D1,mult25D2);
          real sum25D4#1 = RAdd(mult25D0,sum25D3);
          real sum25D5#1 = RAdd(mult25CF,sum25D4);
          real mult25D7#5 = RMul(coeff259C,prod25AA);
          real mult25D8#1 = RMul(coeff25CE,prod25A7);
          real mult25D9#2 = RMul(coeff25CE,prod259F);
          real sum25DA#1 = RAdd(mult25D8,mult25D9);
          real sum25DB#1 = RAdd(mult25D1,sum25DA);
          real sum25DC#1 = RAdd(mult25D7,sum25DB);
          real mult25DE#5 = RMul(coeff259C,prod25A4);
          real mult25DF#1 = RMul(coeff25CE,prod259B);
          real sum25E0#1 = RAdd(mult25D9,mult25DF);
          real sum25E1#1 = RAdd(mult25D2,sum25E0);
          real sum25E2#1 = RAdd(mult25DE,sum25E1);
          tensor[10] intermediateCons25E4#1 = <tensor[10]>[sum25C2,sum25C6,sum25C9,sum25CC,mult25B4,mult25B7,mult25B8,sum25D5,sum25DC,sum25E2];
          real compositionl2638#2 = VDot<10>(dofs2567,intermediateCons25E4);
          real op1_e3_l_23263B#1 = RSub(compositionl2638,isoval1D31);
          real mult264F#1 = RMul(coeff25A3,prod25AF);
          real sum2653#1 = RAdd(mult25D7,mult25DE);
          real sum2654#1 = RAdd(mult25CF,sum2653);
          real sum2655#3 = RAdd(mult264F,sum2654);
          real mult2658#6 = RMul(coeff25C4,prod25AF);
          real sum2659#1 = RAdd(mult2658,mult25DE);
          real basisEval265D#4 = RMul(coeff25CE,prod25AE);
          real basisEval265E#4 = RMul(coeff25CE,prod25AA);
          real coeff265F#3 = -0.8e1;
          real mult2660#3 = RMul(coeff259C,prod25AF);
          real mult2661#1 = RMul(coeff265F,prod25A4);
          real sum2662#1 = RAdd(basisEval265E,mult2661);
          real sum2663#1 = RAdd(basisEval265D,sum2662);
          real sum2664#1 = RAdd(mult2660,sum2663);
          real sum2667#1 = RAdd(mult2658,mult25D7);
          real mult2669#1 = RMul(coeff265F,prod25AA);
          real mult266A#4 = RMul(coeff25CE,prod25A4);
          real sum266B#1 = RAdd(mult2669,mult266A);
          real sum266C#1 = RAdd(basisEval265D,sum266B);
          real sum266D#1 = RAdd(mult2660,sum266C);
          real sum2670#1 = RAdd(mult2658,mult25CF);
          real mult2672#1 = RMul(coeff265F,prod25AE);
          real sum2673#1 = RAdd(basisEval265E,mult266A);
          real sum2674#1 = RAdd(mult2672,sum2673);
          real sum2675#1 = RAdd(mult2660,sum2674);
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2655,sum2659,_t1D76,_t1D76,_t1D76,mult25CF,mult25D7,basisEval265D,basisEval265E,sum2664];
          tensor[10] intermediateCons2678#1 = <tensor[10]>[sum2655,_t1D76,sum2667,_t1D76,mult25CF,_t1D76,mult25DE,basisEval265D,sum266D,mult266A];
          tensor[10] intermediateCons2679#1 = <tensor[10]>[sum2655,_t1D76,_t1D76,sum2670,mult25D7,mult25DE,_t1D76,sum2675,basisEval265E,mult266A];
          real vdot26BA#3 = VDot<10>(dofs2567,intermediateCons2677);
          real vdot26BC#3 = VDot<10>(dofs2567,intermediateCons2678);
          real vdot26BE#3 = VDot<10>(dofs2567,intermediateCons2679);
          int mulRes26C9#4 = IMul(intPos24F6,ilit2509);
          int idx26CC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,mulRes26C9);
          int addRes26CE#1 = IAdd(mulRes26C9,ilit2500);
          int idx26CF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CE);
          int addRes26D1#1 = IAdd(mulRes26C9,ilit2503);
          int idx26D2#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D1);
          int addRes26D4#1 = IAdd(mulRes26C9,ilit2506);
          int idx26D5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D4);
          int mulRes26EB#3 = IMul(ilit2506,idx26CC);
          int addRes26EE#1 = IAdd(ilit2500,mulRes26EB);
          int addRes26F0#1 = IAdd(ilit2503,mulRes26EB);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26EB);
          real dof_load26F2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EE);
          real dof_load26F3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F0);
          int mulRes26F6#3 = IMul(ilit2506,idx26CF);
          int addRes26F8#1 = IAdd(ilit2500,mulRes26F6);
          int addRes26F9#1 = IAdd(ilit2503,mulRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26F6);
          real dof_load26FB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F8);
          real dof_load26FC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F9);
          int mulRes26FF#3 = IMul(ilit2506,idx26D2);
          int addRes2701#1 = IAdd(ilit2500,mulRes26FF);
          int addRes2702#1 = IAdd(ilit2503,mulRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26FF);
          real dof_load2704#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2701);
          real dof_load2705#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2702);
          int mulRes2708#3 = IMul(ilit2506,idx26D5);
          int addRes270A#1 = IAdd(ilit2500,mulRes2708);
          int addRes270B#1 = IAdd(ilit2503,mulRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes2708);
          real dof_load270D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270A);
          real dof_load270E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270B);
          real r275C#2 = RMul(dof_load26F1,mult2658);
          real r275F#1 = RMul(dof_load26FA,mult25B0);
          real r2762#2 = RMul(dof_load2703,_t1D76);
          real r2765#2 = RMul(dof_load270C,_t1D76);
          real r2766#1 = RAdd(r275C,r275F);
          real r2767#1 = RAdd(r2766,r2762);
          real r2768#13 = RAdd(r2767,r2765);
          real r276C#1 = RMul(dof_load26FA,_t1D76);
          real r276E#1 = RMul(dof_load2703,mult25B0);
          real r2771#2 = RAdd(r275C,r276C);
          real r2772#1 = RAdd(r2771,r276E);
          real r2773#13 = RAdd(r2772,r2765);
          real r277B#1 = RMul(dof_load270C,mult25B0);
          real r277D#1 = RAdd(r2771,r2762);
          real r277E#12 = RAdd(r277D,r277B);
          real r2781#2 = RMul(dof_load26F2,mult2658);
          real r2783#1 = RMul(dof_load26FB,mult25B0);
          real r2785#2 = RMul(dof_load2704,_t1D76);
          real r2787#2 = RMul(dof_load270D,_t1D76);
          real r2788#1 = RAdd(r2781,r2783);
          real r2789#1 = RAdd(r2788,r2785);
          real r278A#13 = RAdd(r2789,r2787);
          real r278C#1 = RMul(dof_load26FB,_t1D76);
          real r278D#1 = RMul(dof_load2704,mult25B0);
          real r278F#2 = RAdd(r2781,r278C);
          real r2790#1 = RAdd(r278F,r278D);
          real r2791#13 = RAdd(r2790,r2787);
          real r2795#1 = RMul(dof_load270D,mult25B0);
          real r2797#1 = RAdd(r278F,r2785);
          real r2798#12 = RAdd(r2797,r2795);
          real r279B#2 = RMul(dof_load26F3,mult2658);
          real r279D#1 = RMul(dof_load26FC,mult25B0);
          real r279F#2 = RMul(dof_load2705,_t1D76);
          real r27A1#2 = RMul(dof_load270E,_t1D76);
          real r27A2#1 = RAdd(r279B,r279D);
          real r27A3#1 = RAdd(r27A2,r279F);
          real r27A4#13 = RAdd(r27A3,r27A1);
          real r27A6#1 = RMul(dof_load26FC,_t1D76);
          real r27A7#1 = RMul(dof_load2705,mult25B0);
          real r27A9#2 = RAdd(r279B,r27A6);
          real r27AA#1 = RAdd(r27A9,r27A7);
          real r27AB#13 = RAdd(r27AA,r27A1);
          real r27AF#1 = RMul(dof_load270E,mult25B0);
          real r27B1#1 = RAdd(r27A9,r279F);
          real r27B2#12 = RAdd(r27B1,r27AF);
          real r2813#3 = RMul(_t1D76,r2768);
          real r2815#3 = RMul(_t1D76,r278A);
          real r2817#5 = RMul(_t1D76,r27A4);
          real r2818#3 = RAdd(r2813,r2815);
          real r2819#9 = RAdd(r2818,r2817);
          real r281B#3 = RMul(_t1D76,r2773);
          real r281D#3 = RMul(_t1D76,r2791);
          real r281F#5 = RMul(_t1D76,r27AB);
          real r2820#3 = RAdd(r281B,r281D);
          real r2821#9 = RAdd(r2820,r281F);
          real r2823#3 = RMul(_t1D76,r277E);
          real r2825#3 = RMul(_t1D76,r2798);
          real r2827#5 = RMul(_t1D76,r27B2);
          real r2828#3 = RAdd(r2823,r2825);
          real r2829#12 = RAdd(r2828,r2827);
          real r282C#1 = RMul(coeff25C4,r27A4);
          real r282D#3 = RAdd(r2818,r282C);
          real r282E#1 = RMul(coeff25C4,r27AB);
          real r282F#3 = RAdd(r2820,r282E);
          real r2830#1 = RMul(coeff25C4,r27B2);
          real r2831#4 = RAdd(r2828,r2830);
          real r2834#1 = RMul(_t1D7D,r278A);
          real r2835#1 = RAdd(r2813,r2834);
          real r2836#3 = RAdd(r2835,r2817);
          real r2837#1 = RMul(_t1D7D,r2791);
          real r2838#1 = RAdd(r281B,r2837);
          real r2839#3 = RAdd(r2838,r281F);
          real r283A#1 = RMul(_t1D7D,r2798);
          real r283B#1 = RAdd(r2823,r283A);
          real r283C#4 = RAdd(r283B,r2827);
          real r283F#1 = RMul(_t1D7D,r27A4);
          real r2840#3 = RAdd(r2818,r283F);
          real r2841#1 = RMul(_t1D7D,r27AB);
          real r2842#3 = RAdd(r2820,r2841);
          real r2843#1 = RMul(_t1D7D,r27B2);
          real r2844#4 = RAdd(r2828,r2843);
          real r2846#1 = RMul(coeff25C4,r2768);
          real r2847#1 = RAdd(r2846,r2815);
          real r2848#3 = RAdd(r2847,r2817);
          real r2849#1 = RMul(coeff25C4,r2773);
          real r284A#1 = RAdd(r2849,r281D);
          real r284B#3 = RAdd(r284A,r281F);
          real r284C#1 = RMul(coeff25C4,r277E);
          real r284D#1 = RAdd(r284C,r2825);
          real r284E#4 = RAdd(r284D,r2827);
          real r2851#1 = RMul(coeff25C4,r278A);
          real r2852#1 = RAdd(r2813,r2851);
          real r2853#3 = RAdd(r2852,r2817);
          real r2854#1 = RMul(coeff25C4,r2791);
          real r2855#1 = RAdd(r281B,r2854);
          real r2856#3 = RAdd(r2855,r281F);
          real r2857#1 = RMul(coeff25C4,r2798);
          real r2858#1 = RAdd(r2823,r2857);
          real r2859#4 = RAdd(r2858,r2827);
          real r285B#1 = RMul(_t1D7D,r2768);
          real r285C#1 = RAdd(r285B,r2815);
          real r285D#3 = RAdd(r285C,r2817);
          real r285E#1 = RMul(_t1D7D,r2773);
          real r285F#1 = RAdd(r285E,r281D);
          real r2860#3 = RAdd(r285F,r281F);
          real r2861#1 = RMul(_t1D7D,r277E);
          real r2862#1 = RAdd(r2861,r2825);
          real r2863#4 = RAdd(r2862,r2827);
          real r28C0#1 = RMul(r2768,r2819);
          real r28C3#1 = RMul(r278A,r2840);
          real r28C6#1 = RMul(r27A4,r2853);
          real r28C7#1 = RAdd(r28C0,r28C3);
          real r28C8#1 = RAdd(r28C7,r28C6);
          real r28CA#1 = RMul(r2768,r2821);
          real r28CC#1 = RMul(r278A,r2842);
          real r28CE#1 = RMul(r27A4,r2856);
          real r28CF#1 = RAdd(r28CA,r28CC);
          real r28D0#2 = RAdd(r28CF,r28CE);
          real r28D2#1 = RMul(r2768,r2829);
          real r28D4#1 = RMul(r278A,r2844);
          real r28D6#1 = RMul(r27A4,r2859);
          real r28D7#1 = RAdd(r28D2,r28D4);
          real r28D8#2 = RAdd(r28D7,r28D6);
          real r28DB#1 = RMul(r2768,r282D);
          real r28DD#1 = RMul(r278A,r2819);
          real r28DF#1 = RMul(r27A4,r285D);
          real r28E0#1 = RAdd(r28DB,r28DD);
          real r28E1#1 = RAdd(r28E0,r28DF);
          real r28E3#1 = RMul(r2768,r282F);
          real r28E5#1 = RMul(r278A,r2821);
          real r28E7#1 = RMul(r27A4,r2860);
          real r28E8#1 = RAdd(r28E3,r28E5);
          real r28E9#2 = RAdd(r28E8,r28E7);
          real r28EB#1 = RMul(r2768,r2831);
          real r28ED#1 = RMul(r278A,r2829);
          real r28EF#1 = RMul(r27A4,r2863);
          real r28F0#1 = RAdd(r28EB,r28ED);
          real r28F1#2 = RAdd(r28F0,r28EF);
          real r28F4#1 = RMul(r2768,r2836);
          real r28F6#1 = RMul(r278A,r2848);
          real r28F8#1 = RMul(r27A4,r2819);
          real r28F9#1 = RAdd(r28F4,r28F6);
          real r28FA#1 = RAdd(r28F9,r28F8);
          real r28FC#1 = RMul(r2768,r2839);
          real r28FE#1 = RMul(r278A,r284B);
          real r2900#1 = RMul(r27A4,r2821);
          real r2901#1 = RAdd(r28FC,r28FE);
          real r2902#2 = RAdd(r2901,r2900);
          real r2904#1 = RMul(r2768,r283C);
          real r2906#1 = RMul(r278A,r284E);
          real r2908#1 = RMul(r27A4,r2829);
          real r2909#1 = RAdd(r2904,r2906);
          real r290A#2 = RAdd(r2909,r2908);
          real r290E#1 = RMul(r2773,r2819);
          real r2910#1 = RMul(r2791,r2840);
          real r2912#1 = RMul(r27AB,r2853);
          real r2913#1 = RAdd(r290E,r2910);
          real r2914#2 = RAdd(r2913,r2912);
          real r2915#1 = RMul(r2773,r2821);
          real r2916#1 = RMul(r2791,r2842);
          real r2917#1 = RMul(r27AB,r2856);
          real r2918#1 = RAdd(r2915,r2916);
          real r2919#1 = RAdd(r2918,r2917);
          real r291A#1 = RMul(r2773,r2829);
          real r291B#1 = RMul(r2791,r2844);
          real r291C#1 = RMul(r27AB,r2859);
          real r291D#1 = RAdd(r291A,r291B);
          real r291E#2 = RAdd(r291D,r291C);
          real r2920#1 = RMul(r2773,r282D);
          real r2921#1 = RMul(r2791,r2819);
          real r2922#1 = RMul(r27AB,r285D);
          real r2923#1 = RAdd(r2920,r2921);
          real r2924#2 = RAdd(r2923,r2922);
          real r2925#1 = RMul(r2773,r282F);
          real r2926#1 = RMul(r2791,r2821);
          real r2927#1 = RMul(r27AB,r2860);
          real r2928#1 = RAdd(r2925,r2926);
          real r2929#1 = RAdd(r2928,r2927);
          real r292A#1 = RMul(r2773,r2831);
          real r292B#1 = RMul(r2791,r2829);
          real r292C#1 = RMul(r27AB,r2863);
          real r292D#1 = RAdd(r292A,r292B);
          real r292E#2 = RAdd(r292D,r292C);
          real r2930#1 = RMul(r2773,r2836);
          real r2931#1 = RMul(r2791,r2848);
          real r2932#1 = RMul(r27AB,r2819);
          real r2933#1 = RAdd(r2930,r2931);
          real r2934#2 = RAdd(r2933,r2932);
          real r2935#1 = RMul(r2773,r2839);
          real r2936#1 = RMul(r2791,r284B);
          real r2937#1 = RMul(r27AB,r2821);
          real r2938#1 = RAdd(r2935,r2936);
          real r2939#1 = RAdd(r2938,r2937);
          real r293A#1 = RMul(r2773,r283C);
          real r293B#1 = RMul(r2791,r284E);
          real r293C#1 = RMul(r27AB,r2829);
          real r293D#1 = RAdd(r293A,r293B);
          real r293E#2 = RAdd(r293D,r293C);
          real r2942#1 = RMul(r277E,r2819);
          real r2944#1 = RMul(r2798,r2840);
          real r2946#1 = RMul(r27B2,r2853);
          real r2947#1 = RAdd(r2942,r2944);
          real r2948#2 = RAdd(r2947,r2946);
          real r2949#1 = RMul(r277E,r2821);
          real r294A#1 = RMul(r2798,r2842);
          real r294B#1 = RMul(r27B2,r2856);
          real r294C#1 = RAdd(r2949,r294A);
          real r294D#2 = RAdd(r294C,r294B);
          real r294E#1 = RMul(r277E,r2829);
          real r294F#1 = RMul(r2798,r2844);
          real r2950#1 = RMul(r27B2,r2859);
          real r2951#1 = RAdd(r294E,r294F);
          real r2952#1 = RAdd(r2951,r2950);
          real r2954#1 = RMul(r277E,r282D);
          real r2955#1 = RMul(r2798,r2819);
          real r2956#1 = RMul(r27B2,r285D);
          real r2957#1 = RAdd(r2954,r2955);
          real r2958#2 = RAdd(r2957,r2956);
          real r2959#1 = RMul(r277E,r282F);
          real r295A#1 = RMul(r2798,r2821);
          real r295B#1 = RMul(r27B2,r2860);
          real r295C#1 = RAdd(r2959,r295A);
          real r295D#2 = RAdd(r295C,r295B);
          real r295E#1 = RMul(r277E,r2831);
          real r295F#1 = RMul(r2798,r2829);
          real r2960#1 = RMul(r27B2,r2863);
          real r2961#1 = RAdd(r295E,r295F);
          real r2962#1 = RAdd(r2961,r2960);
          real r2964#1 = RMul(r277E,r2836);
          real r2965#1 = RMul(r2798,r2848);
          real r2966#1 = RMul(r27B2,r2819);
          real r2967#1 = RAdd(r2964,r2965);
          real r2968#2 = RAdd(r2967,r2966);
          real r2969#1 = RMul(r277E,r2839);
          real r296A#1 = RMul(r2798,r284B);
          real r296B#1 = RMul(r27B2,r2821);
          real r296C#1 = RAdd(r2969,r296A);
          real r296D#2 = RAdd(r296C,r296B);
          real r296E#1 = RMul(r277E,r283C);
          real r296F#1 = RMul(r2798,r284E);
          real r2970#1 = RMul(r27B2,r2829);
          real r2971#1 = RAdd(r296E,r296F);
          real r2972#1 = RAdd(r2971,r2970);
          tensor[3] probe_l_292A2E#1 = <tensor[3]>[r2768,r278A,r27A4];
          tensor[3] probe_l_302A7B#3 = <tensor[3]>[r2773,r2791,r27AB];
          tensor[3] tensor2B26#1 = <tensor[3]>[r2829,r2844,r2859];
          tensor[3] tensor2B2C#1 = <tensor[3]>[r2831,r2829,r2863];
          tensor[3] tensor2B33#1 = <tensor[3]>[r283C,r284E,r2829];
          real vdot2B56#1 = VDot<3>(probe_l_302A7B,tensor2B26);
          real vdot2B58#1 = VDot<3>(probe_l_302A7B,tensor2B2C);
          real vdot2B5A#1 = VDot<3>(probe_l_302A7B,tensor2B33);
          tensor[3] op1_e3_l_332B54#1 = <tensor[3]>[vdot2B56,vdot2B58,vdot2B5A];
          real op1_e3_l_342B63#1 = VDot<3>(probe_l_292A2E,op1_e3_l_332B54);
          real r2B69#2 = RMul(_t1D76,r28C8);
          real r2B6B#1 = RMul(_t1D76,r28D0);
          real r2B6D#2 = RMul(_t1D76,r28D8);
          real r2B6F#2 = RMul(_t1D76,r2914);
          real r2B71#3 = RMul(_t1D76,r2919);
          real r2B74#1 = RMul(_t1D7D,r291E);
          real r2B76#2 = RMul(_t1D76,r2948);
          real r2B79#1 = RMul(coeff25C4,r294D);
          real r2B7B#3 = RMul(_t1D76,r2952);
          real r2B7C#2 = RAdd(r2B69,r2B6B);
          real r2B7D#1 = RAdd(r2B7C,r2B6D);
          real r2B7E#1 = RAdd(r2B7D,r2B6F);
          real r2B7F#1 = RAdd(r2B7E,r2B71);
          real r2B80#1 = RAdd(r2B7F,r2B74);
          real r2B81#1 = RAdd(r2B80,r2B76);
          real r2B82#1 = RAdd(r2B81,r2B79);
          real r2B83#1 = RAdd(r2B82,r2B7B);
          real r2B85#2 = RMul(_t1D76,r28E1);
          real r2B87#1 = RMul(_t1D76,r28E9);
          real r2B89#2 = RMul(_t1D76,r28F1);
          real r2B8B#2 = RMul(_t1D76,r2924);
          real r2B8D#3 = RMul(_t1D76,r2929);
          real r2B8F#1 = RMul(_t1D7D,r292E);
          real r2B91#2 = RMul(_t1D76,r2958);
          real r2B93#1 = RMul(coeff25C4,r295D);
          real r2B95#3 = RMul(_t1D76,r2962);
          real r2B96#2 = RAdd(r2B85,r2B87);
          real r2B97#1 = RAdd(r2B96,r2B89);
          real r2B98#1 = RAdd(r2B97,r2B8B);
          real r2B99#1 = RAdd(r2B98,r2B8D);
          real r2B9A#1 = RAdd(r2B99,r2B8F);
          real r2B9B#1 = RAdd(r2B9A,r2B91);
          real r2B9C#1 = RAdd(r2B9B,r2B93);
          real r2B9D#1 = RAdd(r2B9C,r2B95);
          real r2B9F#2 = RMul(_t1D76,r28FA);
          real r2BA1#1 = RMul(_t1D76,r2902);
          real r2BA3#2 = RMul(_t1D76,r290A);
          real r2BA5#2 = RMul(_t1D76,r2934);
          real r2BA7#3 = RMul(_t1D76,r2939);
          real r2BA9#1 = RMul(_t1D7D,r293E);
          real r2BAB#2 = RMul(_t1D76,r2968);
          real r2BAD#1 = RMul(coeff25C4,r296D);
          real r2BAF#3 = RMul(_t1D76,r2972);
          real r2BB0#2 = RAdd(r2B9F,r2BA1);
          real r2BB1#1 = RAdd(r2BB0,r2BA3);
          real r2BB2#1 = RAdd(r2BB1,r2BA5);
          real r2BB3#1 = RAdd(r2BB2,r2BA7);
          real r2BB4#1 = RAdd(r2BB3,r2BA9);
          real r2BB5#1 = RAdd(r2BB4,r2BAB);
          real r2BB6#1 = RAdd(r2BB5,r2BAD);
          real r2BB7#1 = RAdd(r2BB6,r2BAF);
          real r2BB9#1 = RMul(coeff25C4,r28D8);
          real r2BBA#2 = RMul(_t1D76,r291E);
          real r2BBB#1 = RMul(_t1D7D,r2948);
          real r2BBC#2 = RMul(_t1D76,r294D);
          real r2BBD#1 = RAdd(r2B7C,r2BB9);
          real r2BBE#1 = RAdd(r2BBD,r2B6F);
          real r2BBF#1 = RAdd(r2BBE,r2B71);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2BBB);
          real r2BC2#1 = RAdd(r2BC1,r2BBC);
          real r2BC3#1 = RAdd(r2BC2,r2B7B);
          real r2BC4#1 = RMul(coeff25C4,r28F1);
          real r2BC5#2 = RMul(_t1D76,r292E);
          real r2BC6#1 = RMul(_t1D7D,r2958);
          real r2BC7#2 = RMul(_t1D76,r295D);
          real r2BC8#1 = RAdd(r2B96,r2BC4);
          real r2BC9#1 = RAdd(r2BC8,r2B8B);
          real r2BCA#1 = RAdd(r2BC9,r2B8D);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2BC6);
          real r2BCD#1 = RAdd(r2BCC,r2BC7);
          real r2BCE#1 = RAdd(r2BCD,r2B95);
          real r2BCF#1 = RMul(coeff25C4,r290A);
          real r2BD0#2 = RMul(_t1D76,r293E);
          real r2BD1#1 = RMul(_t1D7D,r2968);
          real r2BD2#2 = RMul(_t1D76,r296D);
          real r2BD3#1 = RAdd(r2BB0,r2BCF);
          real r2BD4#1 = RAdd(r2BD3,r2BA5);
          real r2BD5#1 = RAdd(r2BD4,r2BA7);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BD1);
          real r2BD8#1 = RAdd(r2BD7,r2BD2);
          real r2BD9#1 = RAdd(r2BD8,r2BAF);
          real r2BDB#1 = RMul(_t1D7D,r28D0);
          real r2BDC#1 = RMul(coeff25C4,r2914);
          real r2BDD#1 = RAdd(r2B69,r2BDB);
          real r2BDE#1 = RAdd(r2BDD,r2B6D);
          real r2BDF#1 = RAdd(r2BDE,r2BDC);
          real r2BE0#1 = RAdd(r2BDF,r2B71);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B76);
          real r2BE3#1 = RAdd(r2BE2,r2BBC);
          real r2BE4#1 = RAdd(r2BE3,r2B7B);
          real r2BE5#1 = RMul(_t1D7D,r28E9);
          real r2BE6#1 = RMul(coeff25C4,r2924);
          real r2BE7#1 = RAdd(r2B85,r2BE5);
          real r2BE8#1 = RAdd(r2BE7,r2B89);
          real r2BE9#1 = RAdd(r2BE8,r2BE6);
          real r2BEA#1 = RAdd(r2BE9,r2B8D);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B91);
          real r2BED#1 = RAdd(r2BEC,r2BC7);
          real r2BEE#1 = RAdd(r2BED,r2B95);
          real r2BEF#1 = RMul(_t1D7D,r2902);
          real r2BF0#1 = RMul(coeff25C4,r2934);
          real r2BF1#1 = RAdd(r2B9F,r2BEF);
          real r2BF2#1 = RAdd(r2BF1,r2BA3);
          real r2BF3#1 = RAdd(r2BF2,r2BF0);
          real r2BF4#1 = RAdd(r2BF3,r2BA7);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAB);
          real r2BF7#1 = RAdd(r2BF6,r2BD2);
          real r2BF8#1 = RAdd(r2BF7,r2BAF);
          real op1_e3_l_362C8F#9 = RMul(coeff2596,op1_e3_l_342B63);
          real r2C96#1 = RDiv(r2B83,op1_e3_l_362C8F);
          real r2C98#1 = RDiv(r2B9D,op1_e3_l_362C8F);
          real r2C9A#1 = RDiv(r2BB7,op1_e3_l_362C8F);
          real r2C9D#1 = RDiv(r2BC3,op1_e3_l_362C8F);
          real r2C9F#1 = RDiv(r2BCE,op1_e3_l_362C8F);
          real r2CA1#1 = RDiv(r2BD9,op1_e3_l_362C8F);
          real r2CA4#1 = RDiv(r2BE4,op1_e3_l_362C8F);
          real r2CA6#1 = RDiv(r2BEE,op1_e3_l_362C8F);
          real r2CA8#1 = RDiv(r2BF8,op1_e3_l_362C8F);
          real r2CC4#1 = RMul(vdot26BA,r2C96);
          real r2CC7#1 = RMul(vdot26BC,r2C9D);
          real r2CCA#1 = RMul(vdot26BE,r2CA4);
          real r2CCB#1 = RAdd(r2CC4,r2CC7);
          real r2CCC#1 = RAdd(r2CCB,r2CCA);
          real r2CCE#1 = RMul(vdot26BA,r2C98);
          real r2CD0#1 = RMul(vdot26BC,r2C9F);
          real r2CD2#1 = RMul(vdot26BE,r2CA6);
          real r2CD3#1 = RAdd(r2CCE,r2CD0);
          real r2CD4#1 = RAdd(r2CD3,r2CD2);
          real r2CD6#1 = RMul(vdot26BA,r2C9A);
          real r2CD8#1 = RMul(vdot26BC,r2CA1);
          real r2CDA#1 = RMul(vdot26BE,r2CA8);
          real r2CDB#1 = RAdd(r2CD6,r2CD8);
          real r2CDC#1 = RAdd(r2CDB,r2CDA);
          tensor[3] op1_e3_l_382CC1#1 = <tensor[3]>[r2CCC,r2CD4,r2CDC];
          tensor[3] op1_e3_l_542CFA#3 = VNeg<3>(op1_e3_l_382CC1);
          real op1_e3_l_562CFD#1 = VDot<3>(op1_e3_l_542CFA,op1_e3_l_542CFA);
          real op1_e3_l_572D00#2 = Sqrt(op1_e3_l_562CFD);
          real op1_e3_l_582D03#1 = Abs<real>(op1_e3_l_23263B);
          real op1_e3_l_592D06#1 = RMul(thick1D3F,op1_e3_l_572D00);
          real op1_e3_l_602D09#1 = RDiv(op1_e3_l_582D03,op1_e3_l_592D06);
          real op1_e3_l_612D0C#1 = RSub(_t1D7D,op1_e3_l_602D09);
          real op1_e3_l_622D0F#1 = RMul(_t24F2,op1_e3_l_612D0C);
          real op1_e3_l_632D12#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real a2D15#2 = RMul(_t1D7D,op1_e3_l_632D12);
          bool _t2D18#1 = GT<real>(a2D15,_t1D76);
          if _t2D18 then goto ASSIGN3270 else goto JOIN2DEC
        ASSIGN3270:  preds = [COND2D1A]
          real _t2D21#1 = RSub(_t1D7D,a2D15);
          real op1_e3_l_32D24#1 = VDot<3>(rayVec1D59,rayVec1D59);
          real op1_e3_l_42D27#1 = Sqrt(op1_e3_l_32D24);
          real op1_e3_l_52D2A#1 = RMul(rayStep1D49,op1_e3_l_42D27);
          real _t2D2D#1 = RDiv(op1_e3_l_52D2A,refStep1D47);
          real _t2D30#1 = MathFn<pow>(_t2D21,_t2D2D);
          real _t2D32#2 = 0.11e1;
          real _t2D34#1 = 0.7e0;
          real op1_e3_l_672D36#1 = RDiv(_t1D7D,op1_e3_l_572D00);
          real op1_e3_l_682D3B#1 = VDot<3>(op1_e3_l_542CFA,light1D55);
          real _t2D3E#1 = RMul(op1_e3_l_672D36,op1_e3_l_682D3B);
          real shade2D41#1 = Max<real>(_t1D76,_t2D3E);
          real op1_e3_l_152D45#1 = RSub(rayN1D57,camNear1D43);
          real op1_e3_l_162D48#1 = RSub(camFar1D45,camNear1D43);
          real op1_e3_l_172D4B#1 = RDiv(op1_e3_l_152D45,op1_e3_l_162D48);
          real op1_e3_l_182D4E#1 = RSub(_t2D34,_t2D32);
          real op1_e3_l_192D51#1 = RMul(op1_e3_l_172D4B,op1_e3_l_182D4E);
          real op1_e3_l_202D54#1 = RMul(phongKd1D4D,shade2D41);
          real Mtransform2D57#1 = Transform<IMAGE1D<double[3]>>(I1D2F);
          real MxPos2D59#1 = RMul(Mtransform2D57,compositionl2638);
          real Ttranslate2D5C#1 = Translate<IMAGE1D<double[3]>>(I1D2F);
          real imgPos2D5E#2 = RAdd(MxPos2D59,Ttranslate2D5C);
          real nd2D61#2 = Floor<1>(imgPos2D5E);
          real f2D63#2 = RSub(imgPos2D5E,nd2D61);
          int n2D66#5 = RealToInt<1>(nd2D61);
          bool isInside2D6A#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D66,I1D2F);
          if isInside2D6A then goto ASSIGN327C else goto ASSIGN3274
        ASSIGN327C:  preds = [COND2D6C]
          int offp2D71#3 = IMul(ilit2506,n2D66);
          real v0_2D72#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D71);
          int addRes2D74#1 = IAdd(n2D66,ilit2500);
          int offp2D75#3 = IMul(ilit2506,addRes2D74);
          real v1_2D76#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D75);
          tensor[2] v_2D77#1 = <tensor[2]>[v0_2D72,v1_2D76];
          int offp2D78#1 = IAdd(offp2D71,ilit2500);
          real v0_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D78);
          int offp2D7A#1 = IAdd(offp2D75,ilit2500);
          real v1_2D7B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7A);
          tensor[2] v_2D7C#1 = <tensor[2]>[v0_2D79,v1_2D7B];
          int offp2D7E#1 = IAdd(offp2D71,ilit2503);
          real v0_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7E);
          int offp2D80#1 = IAdd(offp2D75,ilit2503);
          real v1_2D81#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D80);
          tensor[2] v_2D82#1 = <tensor[2]>[v0_2D7F,v1_2D81];
          tensor[3,2] voxels2D83#1 = <tensor[3,2]>[v_2D77,v_2D7C,v_2D82];
          goto JOIN2D9D
        JOIN2D9D:  preds = [ASSIGN2D99,ASSIGN2E49]
          tensor[3,2] ldvox2D9B#3 = phi(voxels2D83,voxels2E31)
          real idx2DA0#1 = RSub(f2D63,_t1D7D);
          tensor[2] kernX_2D9E#1 = <tensor[2]>[f2D63,idx2DA0];
          tensor[2] a02DA5#1 = <tensor[2]>[_t1D7D,_t1D7D];
          tensor[2] a12DA6#1 = <tensor[2]>[coeff25C4,_t1D7D];
          tensor[2] prod12DAB#1 = VMul<2>(kernX_2D9E,a12DA6);
          tensor[2] kevalX_d0_2DA4#3 = VAdd<2>(a02DA5,prod12DAB);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D9B);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA4);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D9B);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA4);
          tensor[2] projIx2DB9#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D9B);
          real vdot2DBA#1 = VDot<2>(projIx2DB9,kevalX_d0_2DA4);
          real op1_e3_l_222DC3#2 = RSub(_t1D7D,_t2D30);
          real op1_e3_l_232DC6#1 = RAdd(_t2D32,op1_e3_l_192D51);
          real op1_e3_l_242DC9#1 = RAdd(phongKa1D4B,op1_e3_l_202D54);
          real r2DCE#1 = RMul(transp1D5B,op1_e3_l_222DC3);
          real r2DCF#1 = RMul(r2DCE,op1_e3_l_232DC6);
          real r2DD0#3 = RMul(r2DCF,op1_e3_l_242DC9);
          real r2DD1#1 = RMul(r2DD0,vdot2DB6);
          real r2DD3#1 = RMul(r2DD0,vdot2DB8);
          real r2DD5#1 = RMul(r2DD0,vdot2DBA);
          tensor[3] op1_e3_l_252DCC#1 = <tensor[3]>[r2DD1,r2DD3,r2DD5];
          tensor[3] rgb2DE1#1 = VAdd<3>(rgb1D5D,op1_e3_l_252DCC);
          real op1_e3_l_52DE4#1 = RSub(_t1D7D,op1_e3_l_222DC3);
          real transp2DE7#1 = RMul(transp1D5B,op1_e3_l_52DE4);
          goto JOIN2DEC
        JOIN2DEC:  preds = [ASSIGN2DE9,COND2D1A]
          tensor[3] rgb2DEA#1 = phi(rgb2DE1,rgb1D5D)
          real transp2DEB#1 = phi(transp2DE7,transp1D5B)
          goto JOIN2DEF
        JOIN2DEF:  preds = [JOIN2DEC,COND24F1]
          tensor[3] rgb2DED#1 = phi(rgb2DEA,rgb1D5D)
          real transp2DEE#1 = phi(transp2DEB,transp1D5B)
          goto JOIN2DF2
        JOIN2DF2:  preds = [JOIN2DEF,COND1D91]
          tensor[3] rgb2DF0#1 = phi(rgb2DED,rgb1D5D)
          real transp2DF1#1 = phi(transp2DEE,transp1D5B)
          goto JOIN2DF5
        JOIN2DF5:  preds = [JOIN2DF2,COND1D8E]
          tensor[3] rgb2DF3#1 = phi(rgb2DF0,rgb1D5D)
          real transp2DF4#1 = phi(transp2DF1,transp1D5B)
          goto JOIN2DF8
        JOIN2DF8:  preds = [JOIN2DF5,COND1D89]
          tensor[3] rgb2DF6#1 = phi(rgb2DF3,rgb1D5D)
          real transp2DF7#1 = phi(transp2DF4,transp1D5B)
          goto JOIN2DFB
        JOIN2DFB:  preds = [JOIN2DF8,COND1D86]
          tensor[3] rgb2DF9#1 = phi(rgb2DF6,rgb1D5D)
          real transp2DFA#1 = phi(transp2DF7,transp1D5B)
          goto JOIN2DFE
        JOIN2DFE:  preds = [JOIN2DFB,COND1D81]
          tensor[3] rgb2DFC#1 = phi(rgb2DF9,rgb1D5D)
          real transp2DFD#1 = phi(transp2DFA,transp1D5B)
          goto JOIN2E01
        JOIN2E01:  preds = [JOIN2DFE,COND1D7C]
          tensor[3] rgb2DFF#3 = phi(rgb2DFC,rgb1D5D)
          real transp2E00#2 = phi(transp2DFD,transp1D5B)
          real _t2E02#1 = 0.1e-1;
          bool _t2E04#1 = LT<real>(transp2E00,_t2E02);
          if _t2E04 then goto SAVE2E07 else goto JOIN2E0B
        SAVE2E07:  preds = [COND2E06]
          self.transp = _t1D76;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E0B
        JOIN2E0B:  preds = [*STABILIZE2E09,COND2E06]
          real transp2E0A#2 = phi(transp2E00)
          bool _t2E0C#1 = GT<real>(rayN1D57,camFar1D45);
          if _t2E0C then goto SAVE2E0F else goto JOIN2E12
        SAVE2E0F:  preds = [COND2E0E]
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E12
        JOIN2E12:  preds = [*STABILIZE2E11,COND2E0E]
          real rayN2E13#1 = RAdd(rayN1D57,rayStep1D49);
          self.rayN = rayN2E13;
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          active
        ASSIGN3274:  preds = [COND2D6C]
          int ix2E1C#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,n2D66);
          int offp2E1E#3 = IMul(ilit2506,ix2E1C);
          real v0_2E1F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E1E);
          int addRes2E21#1 = IAdd(n2D66,ilit2500);
          int ix2E22#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E21);
          int offp2E23#3 = IMul(ilit2506,ix2E22);
          real v1_2E24#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E23);
          tensor[2] v_2E25#1 = <tensor[2]>[v0_2E1F,v1_2E24];
          int offp2E26#1 = IAdd(offp2E1E,ilit2500);
          real v0_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E26);
          int offp2E28#1 = IAdd(offp2E23,ilit2500);
          real v1_2E29#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E28);
          tensor[2] v_2E2A#1 = <tensor[2]>[v0_2E27,v1_2E29];
          int offp2E2C#1 = IAdd(offp2E1E,ilit2503);
          real v0_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2C);
          int offp2E2E#1 = IAdd(offp2E23,ilit2503);
          real v1_2E2F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2E);
          tensor[2] v_2E30#1 = <tensor[2]>[v0_2E2D,v1_2E2F];
          tensor[3,2] voxels2E31#1 = <tensor[3,2]>[v_2E25,v_2E2A,v_2E30];
          goto JOIN2D9D
        ASSIGN2E4B:  preds = [COND1D66]
          bool _t1D6A#1 = NEQ<int>(vi1D61,sv1D53);
          goto JOIN1D6B
    end update
    method stabilize
        ENTRY2E4C:  preds = []
          bool debug2E4D#1 = globals.debug1AC7;
          int su2E4F#1 = globals.su1AC8;
          int sv2E51#1 = globals.sv1AC9;
          real transp2E53#1 = self.transp;
          tensor[3] rgb2E55#3 = self.rgb;
          tensor[4] rgba2E57#1 = self.rgba;
          int ui2E59#1 = self.ui;
          int vi2E5B#1 = self.vi;
          real _t2E5D#1 = 0.1e1;
          real a2E5F#6 = RSub(_t2E5D,transp2E53);
          real _t2E62#1 = 0.e0;
          bool _t2E64#1 = GT<real>(a2E5F,_t2E62);
          if _t2E64 then goto ASSIGN2E68 else goto JOIN2E79
        ASSIGN2E68:  preds = [COND2E66]
          real _t2E67#1 = VIndex<3,0>(rgb2E55);
          real _t2E69#1 = RDiv(_t2E67,a2E5F);
          real _t2E6C#1 = VIndex<3,1>(rgb2E55);
          real _t2E6E#1 = RDiv(_t2E6C,a2E5F);
          real _t2E71#1 = VIndex<3,2>(rgb2E55);
          real _t2E73#1 = RDiv(_t2E71,a2E5F);
          tensor[4] rgba2E76#1 = <tensor[4]>[_t2E69,_t2E6E,_t2E73,a2E5F];
          goto JOIN2E79
        JOIN2E79:  preds = [ASSIGN2E77,COND2E66]
          tensor[4] rgba2E78#2 = phi(rgba2E76,rgba2E57)
          bool _t2E7A#1 = EQ<int>(ui2E59,su2E4F);
          if _t2E7A then goto ASSIGN2E7E else goto JOIN2E84
        ASSIGN2E7E:  preds = [COND2E7C]
          bool _t2E7D#1 = EQ<int>(vi2E5B,sv2E51);
          if _t2E7D then goto COND2E80 else goto JOIN2E83
        COND2E80:  preds = [COND2E7F]
          if debug2E4D then goto MASSIGN2E81 else goto JOIN2E82
        MASSIGN2E81:  preds = [COND2E80]
          Print<[real,tensor[4]]>(a2E5F,rgba2E78);
          goto JOIN2E82
        JOIN2E82:  preds = [MASSIGN2E81,COND2E80]
          goto JOIN2E83
        JOIN2E83:  preds = [JOIN2E82,COND2E7F]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2E83,COND2E7C]
          self.rgba = rgba2E78;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E87:  preds = []
      int iresU2E88#1 = globals.iresU1ABE;
      int iresV2E8A#1 = globals.iresV1ABF;
      int _t2E8C#2 = 0;
      int _t2E8E#2 = 1;
      int _t2E90#1 = ISub(iresV2E8A,_t2E8E);
      int[] _t2E92#1 = Range(_t2E8C,_t2E90);
    FOREACH2E95:  preds = [ASSIGN2E93,NEXT2E9E]
      foreach (vi2E94 in _t2E92) on exit goto RETURN2E9F
      int _t2E96#1 = ISub(iresU2E88,_t2E8E);
      int[] _t2E98#1 = Range(_t2E8C,_t2E96);
    FOREACH2E9B:  preds = [ASSIGN2E99,NEXT2E9D]
      foreach (ui2E9A in _t2E98) on exit goto NEXT2E9E
      new raycast(ui2E9A,vi2E94);
      goto FOREACH2E9B
    NEXT2E9E:  preds = [FOREACH2E9B]
      goto FOREACH2E95
    RETURN2E9F:  preds = [FOREACH2E95]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AB5 (a) = <no-default>
  input 0b042F_intermedateGlobal1AB6 (b) = <no-default>
  input 0c0431_intermedateGlobal1AB7 (c) = <no-default>
  input isoval1AB8 (isoval) = <default>
  input thick1AB9 (thick) = <default>
  input camEye1ABA (camEye) = <default>
  input camAt1ABB (camAt) = <default>
  input camUp1ABC (camUp) = <default>
  input camFOV1ABD (camFOV) = <default>
  input iresU1ABE (iresU) = <default>
  input iresV1ABF (iresV) = <default>
  input camNear1AC0 (camNear) = <default>
  input camFar1AC1 (camFar) = <default>
  input refStep1AC2 (refStep) = <default>
  input rayStep1AC3 (rayStep) = <default>
  input lightVsp1AC4 (lightVsp) = <default>
  input phongKa1AC5 (phongKa) = <default>
  input phongKd1AC6 (phongKd) = <default>
  input debug1AC7 (debug) = <default>
  input su1AC8 (su) = <default>
  input sv1AC9 (sv) = <default>
  global real camDist1ACA
  global tensor[3] camN1ACB
  global tensor[3] camU1ACC
  global tensor[3] camV1ACD
  global real camVmax1ACE
  global real camUmax1ACF
  global tensor[3] light1AD0
  global femData:Mesh _t1AD1
  global femData:Space _tX1AD2
  global femData:FemFunc c1AD3
  global image(IMAGE1D<double[3]>) I1AD6
## functions
  function femData:MeshPos findPos1D93 (femData:Mesh mesh1D94#21, tensor[3] pos1D95#2) {
    ENTRY1D96:  preds = []
      real _t1D97#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1D99#1 = <tensor[3]>[_t1D97,_t1D97,_t1D97];
      int newtonInt1D9B#3 = 0;
      int cellInt1D9D#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1D94);
      int _t1D9F#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1D94);
      int _t1DA1#8 = 1;
      int numCell1DA3#2 = ISub(_t1D9F,_t1DA1);
      int _t1DA5#2 = 16;
      int _t1DA7#1 = IMul(_t1DA5,numCell1DA3);
      int[] _t1DA9#1 = Range(newtonInt1D9B,_t1DA7);
    FOREACH1DAC:  preds = [ASSIGN1DAA,NEXT24E9]
      foreach (itter1DAB in _t1DA9) on exit goto ASSIGN24EC
        int cellInt1DAE#5 = phi(cellInt1D9D,cellInt24E6)
        int newtonInt24D8#1 = phi(newtonInt1D9B,newtonInt24E7)
        tensor[3] xn237C#4 = phi(xn1D99,xn2440)
      int ilit1DAF#1 = 4;
      int mulRes1DB0#4 = IMul(cellInt1DAE,ilit1DAF);
      int idx1DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,mulRes1DB0);
      int addRes1DB5#1 = IAdd(mulRes1DB0,_t1DA1);
      int idx1DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB5);
      int ilit1DB7#5 = 2;
      int addRes1DB8#1 = IAdd(mulRes1DB0,ilit1DB7);
      int idx1DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB8);
      int ilit1DBA#5 = 3;
      int addRes1DBB#1 = IAdd(mulRes1DB0,ilit1DBA);
      int idx1DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DBB);
      int mulRes1DD2#3 = IMul(ilit1DBA,idx1DB3);
      int addRes1DD5#1 = IAdd(_t1DA1,mulRes1DD2);
      int addRes1DD7#1 = IAdd(ilit1DB7,mulRes1DD2);
      real dof_load1DD8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DD2);
      real dof_load1DD9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD5);
      real dof_load1DDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD7);
      int mulRes1DDD#3 = IMul(ilit1DBA,idx1DB6);
      int addRes1DDF#1 = IAdd(_t1DA1,mulRes1DDD);
      int addRes1DE0#1 = IAdd(ilit1DB7,mulRes1DDD);
      real dof_load1DE1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DDD);
      real dof_load1DE2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDF);
      real dof_load1DE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE0);
      int mulRes1DE6#3 = IMul(ilit1DBA,idx1DB9);
      int addRes1DE8#1 = IAdd(_t1DA1,mulRes1DE6);
      int addRes1DE9#1 = IAdd(ilit1DB7,mulRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DE6);
      real dof_load1DEB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE8);
      real dof_load1DEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE9);
      int mulRes1DEF#3 = IMul(ilit1DBA,idx1DBC);
      int addRes1DF1#1 = IAdd(_t1DA1,mulRes1DEF);
      int addRes1DF2#1 = IAdd(ilit1DB7,mulRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DEF);
      real dof_load1DF4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF1);
      real dof_load1DF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF2);
      real coeff1E26#22 = -0.1e1;
      real one1E27#33 = 0.1e1;
      real prod1E28#2 = RMul(one1E27,one1E27);
      real prod1E29#2 = RMul(one1E27,prod1E28);
      real basisEval1E2A#3 = RMul(coeff1E26,prod1E29);
      real basisEval1E2B#10 = RMul(one1E27,prod1E29);
      real basisEval1E2C#45 = 0.e0;
      real r1E43#2 = RMul(dof_load1DD8,basisEval1E2A);
      real r1E46#1 = RMul(dof_load1DE1,basisEval1E2B);
      real r1E49#2 = RMul(dof_load1DEA,basisEval1E2C);
      real r1E4C#2 = RMul(dof_load1DF3,basisEval1E2C);
      real r1E4D#1 = RAdd(r1E43,r1E46);
      real r1E4E#1 = RAdd(r1E4D,r1E49);
      real r1E4F#13 = RAdd(r1E4E,r1E4C);
      real r1E53#1 = RMul(dof_load1DE1,basisEval1E2C);
      real r1E55#1 = RMul(dof_load1DEA,basisEval1E2B);
      real r1E58#2 = RAdd(r1E43,r1E53);
      real r1E59#1 = RAdd(r1E58,r1E55);
      real r1E5A#13 = RAdd(r1E59,r1E4C);
      real r1E62#1 = RMul(dof_load1DF3,basisEval1E2B);
      real r1E64#1 = RAdd(r1E58,r1E49);
      real r1E65#12 = RAdd(r1E64,r1E62);
      real r1E68#2 = RMul(dof_load1DD9,basisEval1E2A);
      real r1E6A#1 = RMul(dof_load1DE2,basisEval1E2B);
      real r1E6C#2 = RMul(dof_load1DEB,basisEval1E2C);
      real r1E6E#2 = RMul(dof_load1DF4,basisEval1E2C);
      real r1E6F#1 = RAdd(r1E68,r1E6A);
      real r1E70#1 = RAdd(r1E6F,r1E6C);
      real r1E71#13 = RAdd(r1E70,r1E6E);
      real r1E73#1 = RMul(dof_load1DE2,basisEval1E2C);
      real r1E74#1 = RMul(dof_load1DEB,basisEval1E2B);
      real r1E76#2 = RAdd(r1E68,r1E73);
      real r1E77#1 = RAdd(r1E76,r1E74);
      real r1E78#13 = RAdd(r1E77,r1E6E);
      real r1E7C#1 = RMul(dof_load1DF4,basisEval1E2B);
      real r1E7E#1 = RAdd(r1E76,r1E6C);
      real r1E7F#12 = RAdd(r1E7E,r1E7C);
      real r1E82#2 = RMul(dof_load1DDA,basisEval1E2A);
      real r1E84#1 = RMul(dof_load1DE3,basisEval1E2B);
      real r1E86#2 = RMul(dof_load1DEC,basisEval1E2C);
      real r1E88#2 = RMul(dof_load1DF5,basisEval1E2C);
      real r1E89#1 = RAdd(r1E82,r1E84);
      real r1E8A#1 = RAdd(r1E89,r1E86);
      real r1E8B#13 = RAdd(r1E8A,r1E88);
      real r1E8D#1 = RMul(dof_load1DE3,basisEval1E2C);
      real r1E8E#1 = RMul(dof_load1DEC,basisEval1E2B);
      real r1E90#2 = RAdd(r1E82,r1E8D);
      real r1E91#1 = RAdd(r1E90,r1E8E);
      real r1E92#13 = RAdd(r1E91,r1E88);
      real r1E96#1 = RMul(dof_load1DF5,basisEval1E2B);
      real r1E98#1 = RAdd(r1E90,r1E86);
      real r1E99#12 = RAdd(r1E98,r1E96);
      real r1EFA#3 = RMul(basisEval1E2C,r1E4F);
      real r1EFC#3 = RMul(basisEval1E2C,r1E71);
      real r1EFE#5 = RMul(basisEval1E2C,r1E8B);
      real r1EFF#3 = RAdd(r1EFA,r1EFC);
      real r1F00#9 = RAdd(r1EFF,r1EFE);
      real r1F02#3 = RMul(basisEval1E2C,r1E5A);
      real r1F04#3 = RMul(basisEval1E2C,r1E78);
      real r1F06#5 = RMul(basisEval1E2C,r1E92);
      real r1F07#3 = RAdd(r1F02,r1F04);
      real r1F08#9 = RAdd(r1F07,r1F06);
      real r1F0A#3 = RMul(basisEval1E2C,r1E65);
      real r1F0C#3 = RMul(basisEval1E2C,r1E7F);
      real r1F0E#5 = RMul(basisEval1E2C,r1E99);
      real r1F0F#3 = RAdd(r1F0A,r1F0C);
      real r1F10#12 = RAdd(r1F0F,r1F0E);
      real r1F13#1 = RMul(coeff1E26,r1E8B);
      real r1F14#3 = RAdd(r1EFF,r1F13);
      real r1F15#1 = RMul(coeff1E26,r1E92);
      real r1F16#3 = RAdd(r1F07,r1F15);
      real r1F17#1 = RMul(coeff1E26,r1E99);
      real r1F18#4 = RAdd(r1F0F,r1F17);
      real r1F1B#1 = RMul(one1E27,r1E71);
      real r1F1C#1 = RAdd(r1EFA,r1F1B);
      real r1F1D#3 = RAdd(r1F1C,r1EFE);
      real r1F1E#1 = RMul(one1E27,r1E78);
      real r1F1F#1 = RAdd(r1F02,r1F1E);
      real r1F20#3 = RAdd(r1F1F,r1F06);
      real r1F21#1 = RMul(one1E27,r1E7F);
      real r1F22#1 = RAdd(r1F0A,r1F21);
      real r1F23#4 = RAdd(r1F22,r1F0E);
      real r1F26#1 = RMul(one1E27,r1E8B);
      real r1F27#3 = RAdd(r1EFF,r1F26);
      real r1F28#1 = RMul(one1E27,r1E92);
      real r1F29#3 = RAdd(r1F07,r1F28);
      real r1F2A#1 = RMul(one1E27,r1E99);
      real r1F2B#4 = RAdd(r1F0F,r1F2A);
      real r1F2D#1 = RMul(coeff1E26,r1E4F);
      real r1F2E#1 = RAdd(r1F2D,r1EFC);
      real r1F2F#3 = RAdd(r1F2E,r1EFE);
      real r1F30#1 = RMul(coeff1E26,r1E5A);
      real r1F31#1 = RAdd(r1F30,r1F04);
      real r1F32#3 = RAdd(r1F31,r1F06);
      real r1F33#1 = RMul(coeff1E26,r1E65);
      real r1F34#1 = RAdd(r1F33,r1F0C);
      real r1F35#4 = RAdd(r1F34,r1F0E);
      real r1F38#1 = RMul(coeff1E26,r1E71);
      real r1F39#1 = RAdd(r1EFA,r1F38);
      real r1F3A#3 = RAdd(r1F39,r1EFE);
      real r1F3B#1 = RMul(coeff1E26,r1E78);
      real r1F3C#1 = RAdd(r1F02,r1F3B);
      real r1F3D#3 = RAdd(r1F3C,r1F06);
      real r1F3E#1 = RMul(coeff1E26,r1E7F);
      real r1F3F#1 = RAdd(r1F0A,r1F3E);
      real r1F40#4 = RAdd(r1F3F,r1F0E);
      real r1F42#1 = RMul(one1E27,r1E4F);
      real r1F43#1 = RAdd(r1F42,r1EFC);
      real r1F44#3 = RAdd(r1F43,r1EFE);
      real r1F45#1 = RMul(one1E27,r1E5A);
      real r1F46#1 = RAdd(r1F45,r1F04);
      real r1F47#3 = RAdd(r1F46,r1F06);
      real r1F48#1 = RMul(one1E27,r1E65);
      real r1F49#1 = RAdd(r1F48,r1F0C);
      real r1F4A#4 = RAdd(r1F49,r1F0E);
      real r1FA7#1 = RMul(r1E4F,r1F00);
      real r1FAA#1 = RMul(r1E71,r1F27);
      real r1FAD#1 = RMul(r1E8B,r1F3A);
      real r1FAE#1 = RAdd(r1FA7,r1FAA);
      real r1FAF#1 = RAdd(r1FAE,r1FAD);
      real r1FB1#1 = RMul(r1E4F,r1F08);
      real r1FB3#1 = RMul(r1E71,r1F29);
      real r1FB5#1 = RMul(r1E8B,r1F3D);
      real r1FB6#1 = RAdd(r1FB1,r1FB3);
      real r1FB7#2 = RAdd(r1FB6,r1FB5);
      real r1FB9#1 = RMul(r1E4F,r1F10);
      real r1FBB#1 = RMul(r1E71,r1F2B);
      real r1FBD#1 = RMul(r1E8B,r1F40);
      real r1FBE#1 = RAdd(r1FB9,r1FBB);
      real r1FBF#2 = RAdd(r1FBE,r1FBD);
      real r1FC2#1 = RMul(r1E4F,r1F14);
      real r1FC4#1 = RMul(r1E71,r1F00);
      real r1FC6#1 = RMul(r1E8B,r1F44);
      real r1FC7#1 = RAdd(r1FC2,r1FC4);
      real r1FC8#1 = RAdd(r1FC7,r1FC6);
      real r1FCA#1 = RMul(r1E4F,r1F16);
      real r1FCC#1 = RMul(r1E71,r1F08);
      real r1FCE#1 = RMul(r1E8B,r1F47);
      real r1FCF#1 = RAdd(r1FCA,r1FCC);
      real r1FD0#2 = RAdd(r1FCF,r1FCE);
      real r1FD2#1 = RMul(r1E4F,r1F18);
      real r1FD4#1 = RMul(r1E71,r1F10);
      real r1FD6#1 = RMul(r1E8B,r1F4A);
      real r1FD7#1 = RAdd(r1FD2,r1FD4);
      real r1FD8#2 = RAdd(r1FD7,r1FD6);
      real r1FDB#1 = RMul(r1E4F,r1F1D);
      real r1FDD#1 = RMul(r1E71,r1F2F);
      real r1FDF#1 = RMul(r1E8B,r1F00);
      real r1FE0#1 = RAdd(r1FDB,r1FDD);
      real r1FE1#1 = RAdd(r1FE0,r1FDF);
      real r1FE3#1 = RMul(r1E4F,r1F20);
      real r1FE5#1 = RMul(r1E71,r1F32);
      real r1FE7#1 = RMul(r1E8B,r1F08);
      real r1FE8#1 = RAdd(r1FE3,r1FE5);
      real r1FE9#2 = RAdd(r1FE8,r1FE7);
      real r1FEB#1 = RMul(r1E4F,r1F23);
      real r1FED#1 = RMul(r1E71,r1F35);
      real r1FEF#1 = RMul(r1E8B,r1F10);
      real r1FF0#1 = RAdd(r1FEB,r1FED);
      real r1FF1#2 = RAdd(r1FF0,r1FEF);
      real r1FF5#1 = RMul(r1E5A,r1F00);
      real r1FF7#1 = RMul(r1E78,r1F27);
      real r1FF9#1 = RMul(r1E92,r1F3A);
      real r1FFA#1 = RAdd(r1FF5,r1FF7);
      real r1FFB#2 = RAdd(r1FFA,r1FF9);
      real r1FFC#1 = RMul(r1E5A,r1F08);
      real r1FFD#1 = RMul(r1E78,r1F29);
      real r1FFE#1 = RMul(r1E92,r1F3D);
      real r1FFF#1 = RAdd(r1FFC,r1FFD);
      real r2000#1 = RAdd(r1FFF,r1FFE);
      real r2001#1 = RMul(r1E5A,r1F10);
      real r2002#1 = RMul(r1E78,r1F2B);
      real r2003#1 = RMul(r1E92,r1F40);
      real r2004#1 = RAdd(r2001,r2002);
      real r2005#2 = RAdd(r2004,r2003);
      real r2007#1 = RMul(r1E5A,r1F14);
      real r2008#1 = RMul(r1E78,r1F00);
      real r2009#1 = RMul(r1E92,r1F44);
      real r200A#1 = RAdd(r2007,r2008);
      real r200B#2 = RAdd(r200A,r2009);
      real r200C#1 = RMul(r1E5A,r1F16);
      real r200D#1 = RMul(r1E78,r1F08);
      real r200E#1 = RMul(r1E92,r1F47);
      real r200F#1 = RAdd(r200C,r200D);
      real r2010#1 = RAdd(r200F,r200E);
      real r2011#1 = RMul(r1E5A,r1F18);
      real r2012#1 = RMul(r1E78,r1F10);
      real r2013#1 = RMul(r1E92,r1F4A);
      real r2014#1 = RAdd(r2011,r2012);
      real r2015#2 = RAdd(r2014,r2013);
      real r2017#1 = RMul(r1E5A,r1F1D);
      real r2018#1 = RMul(r1E78,r1F2F);
      real r2019#1 = RMul(r1E92,r1F00);
      real r201A#1 = RAdd(r2017,r2018);
      real r201B#2 = RAdd(r201A,r2019);
      real r201C#1 = RMul(r1E5A,r1F20);
      real r201D#1 = RMul(r1E78,r1F32);
      real r201E#1 = RMul(r1E92,r1F08);
      real r201F#1 = RAdd(r201C,r201D);
      real r2020#1 = RAdd(r201F,r201E);
      real r2021#1 = RMul(r1E5A,r1F23);
      real r2022#1 = RMul(r1E78,r1F35);
      real r2023#1 = RMul(r1E92,r1F10);
      real r2024#1 = RAdd(r2021,r2022);
      real r2025#2 = RAdd(r2024,r2023);
      real r2029#1 = RMul(r1E65,r1F00);
      real r202B#1 = RMul(r1E7F,r1F27);
      real r202D#1 = RMul(r1E99,r1F3A);
      real r202E#1 = RAdd(r2029,r202B);
      real r202F#2 = RAdd(r202E,r202D);
      real r2030#1 = RMul(r1E65,r1F08);
      real r2031#1 = RMul(r1E7F,r1F29);
      real r2032#1 = RMul(r1E99,r1F3D);
      real r2033#1 = RAdd(r2030,r2031);
      real r2034#2 = RAdd(r2033,r2032);
      real r2035#1 = RMul(r1E65,r1F10);
      real r2036#1 = RMul(r1E7F,r1F2B);
      real r2037#1 = RMul(r1E99,r1F40);
      real r2038#1 = RAdd(r2035,r2036);
      real r2039#1 = RAdd(r2038,r2037);
      real r203B#1 = RMul(r1E65,r1F14);
      real r203C#1 = RMul(r1E7F,r1F00);
      real r203D#1 = RMul(r1E99,r1F44);
      real r203E#1 = RAdd(r203B,r203C);
      real r203F#2 = RAdd(r203E,r203D);
      real r2040#1 = RMul(r1E65,r1F16);
      real r2041#1 = RMul(r1E7F,r1F08);
      real r2042#1 = RMul(r1E99,r1F47);
      real r2043#1 = RAdd(r2040,r2041);
      real r2044#2 = RAdd(r2043,r2042);
      real r2045#1 = RMul(r1E65,r1F18);
      real r2046#1 = RMul(r1E7F,r1F10);
      real r2047#1 = RMul(r1E99,r1F4A);
      real r2048#1 = RAdd(r2045,r2046);
      real r2049#1 = RAdd(r2048,r2047);
      real r204B#1 = RMul(r1E65,r1F1D);
      real r204C#1 = RMul(r1E7F,r1F2F);
      real r204D#1 = RMul(r1E99,r1F00);
      real r204E#1 = RAdd(r204B,r204C);
      real r204F#2 = RAdd(r204E,r204D);
      real r2050#1 = RMul(r1E65,r1F20);
      real r2051#1 = RMul(r1E7F,r1F32);
      real r2052#1 = RMul(r1E99,r1F08);
      real r2053#1 = RAdd(r2050,r2051);
      real r2054#2 = RAdd(r2053,r2052);
      real r2055#1 = RMul(r1E65,r1F23);
      real r2056#1 = RMul(r1E7F,r1F35);
      real r2057#1 = RMul(r1E99,r1F10);
      real r2058#1 = RAdd(r2055,r2056);
      real r2059#1 = RAdd(r2058,r2057);
      tensor[3] probe_l_142115#1 = <tensor[3]>[r1E4F,r1E71,r1E8B];
      tensor[3] probe_l_152162#3 = <tensor[3]>[r1E5A,r1E78,r1E92];
      tensor[3] tensor220D#1 = <tensor[3]>[r1F10,r1F2B,r1F40];
      tensor[3] tensor2213#1 = <tensor[3]>[r1F18,r1F10,r1F4A];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F23,r1F35,r1F10];
      real vdot223D#1 = VDot<3>(probe_l_152162,tensor220D);
      real vdot223F#1 = VDot<3>(probe_l_152162,tensor2213);
      real vdot2241#1 = VDot<3>(probe_l_152162,tensor221A);
      tensor[3] op1_e3_l_18223B#1 = <tensor[3]>[vdot223D,vdot223F,vdot2241];
      real op1_e3_l_19224A#1 = VDot<3>(probe_l_142115,op1_e3_l_18223B);
      real r2250#2 = RMul(basisEval1E2C,r1FAF);
      real r2252#1 = RMul(basisEval1E2C,r1FB7);
      real r2254#2 = RMul(basisEval1E2C,r1FBF);
      real r2256#2 = RMul(basisEval1E2C,r1FFB);
      real r2258#3 = RMul(basisEval1E2C,r2000);
      real r225B#1 = RMul(one1E27,r2005);
      real r225D#2 = RMul(basisEval1E2C,r202F);
      real r2260#1 = RMul(coeff1E26,r2034);
      real r2262#3 = RMul(basisEval1E2C,r2039);
      real r2263#2 = RAdd(r2250,r2252);
      real r2264#1 = RAdd(r2263,r2254);
      real r2265#1 = RAdd(r2264,r2256);
      real r2266#1 = RAdd(r2265,r2258);
      real r2267#1 = RAdd(r2266,r225B);
      real r2268#1 = RAdd(r2267,r225D);
      real r2269#1 = RAdd(r2268,r2260);
      real r226A#1 = RAdd(r2269,r2262);
      real r226C#2 = RMul(basisEval1E2C,r1FC8);
      real r226E#1 = RMul(basisEval1E2C,r1FD0);
      real r2270#2 = RMul(basisEval1E2C,r1FD8);
      real r2272#2 = RMul(basisEval1E2C,r200B);
      real r2274#3 = RMul(basisEval1E2C,r2010);
      real r2276#1 = RMul(one1E27,r2015);
      real r2278#2 = RMul(basisEval1E2C,r203F);
      real r227A#1 = RMul(coeff1E26,r2044);
      real r227C#3 = RMul(basisEval1E2C,r2049);
      real r227D#2 = RAdd(r226C,r226E);
      real r227E#1 = RAdd(r227D,r2270);
      real r227F#1 = RAdd(r227E,r2272);
      real r2280#1 = RAdd(r227F,r2274);
      real r2281#1 = RAdd(r2280,r2276);
      real r2282#1 = RAdd(r2281,r2278);
      real r2283#1 = RAdd(r2282,r227A);
      real r2284#1 = RAdd(r2283,r227C);
      real r2286#2 = RMul(basisEval1E2C,r1FE1);
      real r2288#1 = RMul(basisEval1E2C,r1FE9);
      real r228A#2 = RMul(basisEval1E2C,r1FF1);
      real r228C#2 = RMul(basisEval1E2C,r201B);
      real r228E#3 = RMul(basisEval1E2C,r2020);
      real r2290#1 = RMul(one1E27,r2025);
      real r2292#2 = RMul(basisEval1E2C,r204F);
      real r2294#1 = RMul(coeff1E26,r2054);
      real r2296#3 = RMul(basisEval1E2C,r2059);
      real r2297#2 = RAdd(r2286,r2288);
      real r2298#1 = RAdd(r2297,r228A);
      real r2299#1 = RAdd(r2298,r228C);
      real r229A#1 = RAdd(r2299,r228E);
      real r229B#1 = RAdd(r229A,r2290);
      real r229C#1 = RAdd(r229B,r2292);
      real r229D#1 = RAdd(r229C,r2294);
      real r229E#1 = RAdd(r229D,r2296);
      real r22A0#1 = RMul(coeff1E26,r1FBF);
      real r22A1#2 = RMul(basisEval1E2C,r2005);
      real r22A2#1 = RMul(one1E27,r202F);
      real r22A3#2 = RMul(basisEval1E2C,r2034);
      real r22A4#1 = RAdd(r2263,r22A0);
      real r22A5#1 = RAdd(r22A4,r2256);
      real r22A6#1 = RAdd(r22A5,r2258);
      real r22A7#1 = RAdd(r22A6,r22A1);
      real r22A8#1 = RAdd(r22A7,r22A2);
      real r22A9#1 = RAdd(r22A8,r22A3);
      real r22AA#1 = RAdd(r22A9,r2262);
      real r22AB#1 = RMul(coeff1E26,r1FD8);
      real r22AC#2 = RMul(basisEval1E2C,r2015);
      real r22AD#1 = RMul(one1E27,r203F);
      real r22AE#2 = RMul(basisEval1E2C,r2044);
      real r22AF#1 = RAdd(r227D,r22AB);
      real r22B0#1 = RAdd(r22AF,r2272);
      real r22B1#1 = RAdd(r22B0,r2274);
      real r22B2#1 = RAdd(r22B1,r22AC);
      real r22B3#1 = RAdd(r22B2,r22AD);
      real r22B4#1 = RAdd(r22B3,r22AE);
      real r22B5#1 = RAdd(r22B4,r227C);
      real r22B6#1 = RMul(coeff1E26,r1FF1);
      real r22B7#2 = RMul(basisEval1E2C,r2025);
      real r22B8#1 = RMul(one1E27,r204F);
      real r22B9#2 = RMul(basisEval1E2C,r2054);
      real r22BA#1 = RAdd(r2297,r22B6);
      real r22BB#1 = RAdd(r22BA,r228C);
      real r22BC#1 = RAdd(r22BB,r228E);
      real r22BD#1 = RAdd(r22BC,r22B7);
      real r22BE#1 = RAdd(r22BD,r22B8);
      real r22BF#1 = RAdd(r22BE,r22B9);
      real r22C0#1 = RAdd(r22BF,r2296);
      real r22C2#1 = RMul(one1E27,r1FB7);
      real r22C3#1 = RMul(coeff1E26,r1FFB);
      real r22C4#1 = RAdd(r2250,r22C2);
      real r22C5#1 = RAdd(r22C4,r2254);
      real r22C6#1 = RAdd(r22C5,r22C3);
      real r22C7#1 = RAdd(r22C6,r2258);
      real r22C8#1 = RAdd(r22C7,r22A1);
      real r22C9#1 = RAdd(r22C8,r225D);
      real r22CA#1 = RAdd(r22C9,r22A3);
      real r22CB#1 = RAdd(r22CA,r2262);
      real r22CC#1 = RMul(one1E27,r1FD0);
      real r22CD#1 = RMul(coeff1E26,r200B);
      real r22CE#1 = RAdd(r226C,r22CC);
      real r22CF#1 = RAdd(r22CE,r2270);
      real r22D0#1 = RAdd(r22CF,r22CD);
      real r22D1#1 = RAdd(r22D0,r2274);
      real r22D2#1 = RAdd(r22D1,r22AC);
      real r22D3#1 = RAdd(r22D2,r2278);
      real r22D4#1 = RAdd(r22D3,r22AE);
      real r22D5#1 = RAdd(r22D4,r227C);
      real r22D6#1 = RMul(one1E27,r1FE9);
      real r22D7#1 = RMul(coeff1E26,r201B);
      real r22D8#1 = RAdd(r2286,r22D6);
      real r22D9#1 = RAdd(r22D8,r228A);
      real r22DA#1 = RAdd(r22D9,r22D7);
      real r22DB#1 = RAdd(r22DA,r228E);
      real r22DC#1 = RAdd(r22DB,r22B7);
      real r22DD#1 = RAdd(r22DC,r2292);
      real r22DE#1 = RAdd(r22DD,r22B9);
      real r22DF#1 = RAdd(r22DE,r2296);
      real realLit2377#1 = 0.2e1;
      real op1_e3_l_212376#9 = RMul(realLit2377,op1_e3_l_19224A);
      real varAcc237D#1 = VIndex<3,0>(xn237C);
      real varAcc237E#1 = VIndex<3,1>(xn237C);
      real varAcc237F#1 = VIndex<3,2>(xn237C);
      real prod2384#2 = RMul(varAcc237D,prod1E28);
      real prod2386#1 = RMul(varAcc237E,one1E27);
      real prod2387#2 = RMul(one1E27,prod2386);
      real prod2389#1 = RMul(one1E27,varAcc237F);
      real prod238A#2 = RMul(one1E27,prod2389);
      real mult238D#1 = RMul(coeff1E26,prod238A);
      real mult238E#1 = RMul(coeff1E26,prod2387);
      real mult238F#1 = RMul(coeff1E26,prod2384);
      real sum2390#1 = RAdd(mult238E,mult238F);
      real sum2391#1 = RAdd(mult238D,sum2390);
      real sum2392#3 = RAdd(basisEval1E2B,sum2391);
      real basisEval2394#3 = RMul(one1E27,prod2384);
      real basisEval2395#3 = RMul(one1E27,prod2387);
      real basisEval2396#3 = RMul(one1E27,prod238A);
      real r23B7#1 = RMul(dof_load1DD8,sum2392);
      real r23BA#1 = RMul(dof_load1DE1,basisEval2394);
      real r23BD#1 = RMul(dof_load1DEA,basisEval2395);
      real r23C0#1 = RMul(dof_load1DF3,basisEval2396);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C5#1 = RMul(dof_load1DD9,sum2392);
      real r23C7#1 = RMul(dof_load1DE2,basisEval2394);
      real r23C9#1 = RMul(dof_load1DEB,basisEval2395);
      real r23CB#1 = RMul(dof_load1DF4,basisEval2396);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23D0#1 = RMul(dof_load1DDA,sum2392);
      real r23D2#1 = RMul(dof_load1DE3,basisEval2394);
      real r23D4#1 = RMul(dof_load1DEC,basisEval2395);
      real r23D6#1 = RMul(dof_load1DF5,basisEval2396);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_2223B4#1 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2403#1 = RDiv(r226A,op1_e3_l_212376);
      real r2405#1 = RDiv(r2284,op1_e3_l_212376);
      real r2407#1 = RDiv(r229E,op1_e3_l_212376);
      tensor[3] tensor2408#1 = <tensor[3]>[r2403,r2405,r2407];
      real r240A#1 = RDiv(r22AA,op1_e3_l_212376);
      real r240C#1 = RDiv(r22B5,op1_e3_l_212376);
      real r240E#1 = RDiv(r22C0,op1_e3_l_212376);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22CB,op1_e3_l_212376);
      real r2413#1 = RDiv(r22D5,op1_e3_l_212376);
      real r2415#1 = RDiv(r22DF,op1_e3_l_212376);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      tensor[3] op1_e3_l_24242E#3 = VSub<3>(probe_l_2223B4,pos1D95);
      real vdot2433#1 = VDot<3>(tensor2408,op1_e3_l_24242E);
      real vdot2435#1 = VDot<3>(tensor240F,op1_e3_l_24242E);
      real vdot2437#1 = VDot<3>(tensor2416,op1_e3_l_24242E);
      tensor[3] op1_e3_l_252431#3 = <tensor[3]>[vdot2433,vdot2435,vdot2437];
      tensor[3] xn2440#4 = VSub<3>(xn237C,op1_e3_l_252431);
      real _t2443#1 = 0.1e-7;
      real op1_e3_l_4124A4#1 = VDot<3>(op1_e3_l_252431,op1_e3_l_252431);
      real _t24A7#1 = Sqrt(op1_e3_l_4124A4);
      bool _t24AA#1 = GTE<real>(_t2443,_t24A7);
      if _t24AA then goto ASSIGN313A else goto JOIN24D6
    ASSIGN313A:  preds = [COND24AC]
      tensor[3] _t24AF#1 = <tensor[3]>[one1E27,one1E27,one1E27];
      real _t24B1#1 = VDot<3>(_t24AF,xn2440);
      bool _t24B4#1 = GT<real>(one1E27,_t24B1);
      real _t24B6#3 = 0.1e-8;
      tensor[3] _t24B8#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24BA#3 = VAdd<3>(_t24B8,xn2440);
      real _t24BD#1 = VIndex<3,0>(_t24BA);
      real _t24BF#3 = -0.e0;
      bool _t24C1#1 = GT<real>(_t24BD,_t24BF);
      real _t24C3#1 = VIndex<3,1>(_t24BA);
      bool _t24C5#1 = GT<real>(_t24C3,_t24BF);
      real _t24C7#1 = VIndex<3,2>(_t24BA);
      bool _t24C9#1 = GT<real>(_t24C7,_t24BF);
      bool _t24CB#1 = BAnd(_t24C5,_t24C9);
      bool _t24CD#1 = BAnd(_t24C1,_t24CB);
      bool _t24CF#1 = BAnd(_t24B4,_t24CD);
      if _t24CF then goto ASSIGN24D3 else goto JOIN24D5
    ASSIGN24D3:  preds = [COND24D1]
      femData:MeshPos _t24D2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1D94,cellInt1DAE,xn2440,pos1D95);
      return _t24D2
      goto JOIN24D5
    JOIN24D5:  preds = [*RETURN(_t24D2)24D4,COND24D1]
      goto JOIN24D6
    JOIN24D6:  preds = [JOIN24D5,COND24AC]
      int newtonInt24D7#2 = IAdd(newtonInt24D8,_t1DA1);
      bool _t24DA#1 = GTE<int>(newtonInt24D7,_t1DA5);
      if _t24DA then goto ASSIGN24DE else goto JOIN24E8
    ASSIGN24DE:  preds = [COND24DC]
      bool _t24DD#1 = GTE<int>(cellInt1DAE,numCell1DA3);
      if _t24DD then goto ASSIGN24E1 else goto ASSIGN24EA
    ASSIGN24E1:  preds = [COND24DF]
      femData:MeshPos _t24E0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24E0
      goto JOIN24E5
    JOIN24E5:  preds = [*RETURN(_t24E0)24E2,ASSIGN24EA]
      int cellInt24E3#1 = phi(cellInt24E4)
      goto JOIN24E8
    JOIN24E8:  preds = [JOIN24E5,COND24DC]
      int cellInt24E6#1 = phi(cellInt24E3,cellInt1DAE)
      int newtonInt24E7#1 = phi(newtonInt1D9B,newtonInt24D7)
      goto FOREACH1DAC
    ASSIGN24EA:  preds = [COND24DF]
      int cellInt24E4#1 = IAdd(cellInt1DAE,_t1DA1);
      goto JOIN24E5
    ASSIGN24EC:  preds = [FOREACH1DAC]
      femData:MeshPos _t24EB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24EB
}
## input initialization
  ENTRY1AD7:  preds = []
    real isoval1AD8#1 = 0.2e0;
    globals.isoval1AB8 = isoval1AD8;
    real thick1ADB#1 = 0.7e-1;
    globals.thick1AB9 = thick1ADB;
    real _t1ADE#2 = -0.3e1;
    real _t1AE0#1 = 0.3e1;
    tensor[3] camEye1AE2#1 = <tensor[3]>[_t1ADE,_t1ADE,_t1AE0];
    globals.camEye1ABA = camEye1AE2;
    real _t1AE5#3 = 0.5e0;
    tensor[3] camAt1AE7#1 = <tensor[3]>[_t1AE5,_t1AE5,_t1AE5];
    globals.camAt1ABB = camAt1AE7;
    real _t1AEA#2 = 0.e0;
    real _t1AEC#2 = 0.1e1;
    tensor[3] camUp1AEE#2 = <tensor[3]>[_t1AEA,_t1AEA,_t1AEC];
    globals.camUp1ABC = camUp1AEE;
    real camFOV1AF1#1 = 0.137e2;
    globals.camFOV1ABD = camFOV1AF1;
    int iresU1AF4#2 = 500;
    globals.iresU1ABE = iresU1AF4;
    globals.iresV1ABF = iresU1AF4;
    real camNear1AF8#1 = -0.2e1;
    globals.camNear1AC0 = camNear1AF8;
    real camFar1AFB#1 = 0.5e1;
    globals.camFar1AC1 = camFar1AFB;
    globals.refStep1AC2 = _t1AEC;
    real rayStep1AFF#1 = 0.1e-1;
    globals.rayStep1AC3 = rayStep1AFF;
    globals.lightVsp1AC4 = camUp1AEE;
    real phongKa1B03#1 = 0.1e0;
    globals.phongKa1AC5 = phongKa1B03;
    real phongKd1B06#1 = 0.9e0;
    globals.phongKd1AC6 = phongKd1B06;
    bool debug1B09#1 = false;
    globals.debug1AC7 = debug1B09;
    int su1B0C#2 = 250;
    globals.su1AC8 = su1B0C;
    globals.sv1AC9 = su1B0C;
    return
## global-variable initialization
  ENTRY1B11:  preds = []
    femData:Mesh a1B12#3 = globals.a1AB5;
    femData:Space 0b042F_intermedateGlobal1B14#1 = globals.0b042F_intermedateGlobal1AB6;
    femData:FemFunc 0c0431_intermedateGlobal1B16#1 = globals.0c0431_intermedateGlobal1AB7;
    tensor[3] camEye1B18#1 = globals.camEye1ABA;
    tensor[3] camAt1B1A#1 = globals.camAt1ABB;
    tensor[3] camUp1B1C#3 = globals.camUp1ABC;
    real camFOV1B1E#1 = globals.camFOV1ABD;
    int iresU1B20#1 = globals.iresU1ABE;
    int iresV1B22#1 = globals.iresV1ABF;
    tensor[3] lightVsp1B24#5 = globals.lightVsp1AC4;
    int _t1B26#1 = 0;
    int _t1B28#1 = 1;
    int _t1B2A#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B12);
    int _t1B2C#1 = ISub(_t1B2A,_t1B28);
    int[] _t1B2E#1 = Range(_t1B26,_t1B2C);
    femData:MeshCell[] _t1B30#1 = <femData:MeshCell[]>{};
  FOREACH1B33:  preds = [ASSIGN1B31,NEXT1B39]
    foreach (_t1B32 in _t1B2E) on exit goto ASSIGN1B3B
      femData:MeshCell[] _t1B37#1 = phi(_t1B30,_t1B36)
    femData:MeshCell _t1B34#1 = LoadFem<femData:MeshCell>(a1B12,_t1B32);
    femData:MeshCell[] _t1B36#1 = Append<femData:MeshCell>(_t1B37,_t1B34);
    goto FOREACH1B33
  ASSIGN1B3B:  preds = [FOREACH1B33]
    femData:Space b1B3A#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1B14,a1B12);
    femData:FemFunc c1B3C#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1B16,b1B3A);
    femData:Space _t1B3E#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B3C);
    femData:Mesh _t1B40#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B3E);
    image(IMAGE1D<double[3]>) I1B42#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B48#9 = VSub<3>(camAt1B1A,camEye1B18);
    real op1_e3_l_41B4B#1 = VDot<3>(op1_e3_l_21B48,op1_e3_l_21B48);
    real camDist1B4E#4 = Sqrt(op1_e3_l_41B4B);
    globals.camDist1ACA = camDist1B4E;
    real realLit1B53#9 = 0.1e1;
    real op1_e3_l_91B52#6 = RDiv(realLit1B53,camDist1B4E);
    tensor[3] camN1B57#4 = VScale<3>(op1_e3_l_91B52,op1_e3_l_21B48);
    globals.camN1ACB = camN1B57;
    real realLit1B5C#6 = 0.e0;
    real r1B5D#3 = TensorIndex<tensor[3],[0]>(camUp1B1C);
    real r1B5E#3 = RMul(realLit1B5C,r1B5D);
    real r1B5F#3 = TensorIndex<tensor[3],[1]>(camUp1B1C);
    real r1B60#3 = RMul(realLit1B5C,r1B5F);
    real r1B61#3 = TensorIndex<tensor[3],[2]>(camUp1B1C);
    real r1B62#5 = RMul(realLit1B5C,r1B61);
    real r1B63#3 = RAdd(r1B5E,r1B60);
    real r1B64#3 = RAdd(r1B63,r1B62);
    real r1B66#1 = RMul(realLit1B53,r1B61);
    real r1B67#1 = RAdd(r1B63,r1B66);
    real realLit1B68#6 = -0.1e1;
    real r1B69#1 = RMul(realLit1B68,r1B5F);
    real r1B6A#1 = RAdd(r1B5E,r1B69);
    real r1B6B#1 = RAdd(r1B6A,r1B62);
    tensor[3] tensor1B6C#1 = <tensor[3]>[r1B64,r1B67,r1B6B];
    real r1B6D#1 = RMul(realLit1B68,r1B61);
    real r1B6E#1 = RAdd(r1B63,r1B6D);
    real r1B6F#1 = RMul(realLit1B53,r1B5D);
    real r1B70#1 = RAdd(r1B6F,r1B60);
    real r1B71#1 = RAdd(r1B70,r1B62);
    tensor[3] tensor1B72#1 = <tensor[3]>[r1B6E,r1B64,r1B71];
    real r1B73#1 = RMul(realLit1B53,r1B5F);
    real r1B74#1 = RAdd(r1B5E,r1B73);
    real r1B75#1 = RAdd(r1B74,r1B62);
    real r1B76#1 = RMul(realLit1B68,r1B5D);
    real r1B77#1 = RAdd(r1B76,r1B60);
    real r1B78#1 = RAdd(r1B77,r1B62);
    tensor[3] tensor1B79#1 = <tensor[3]>[r1B75,r1B78,r1B64];
    real vdot1B9C#1 = VDot<3>(op1_e3_l_21B48,tensor1B6C);
    real vdot1B9E#1 = VDot<3>(op1_e3_l_21B48,tensor1B72);
    real vdot1BA0#1 = VDot<3>(op1_e3_l_21B48,tensor1B79);
    tensor[3] op1_e3_l_171B9A#6 = <tensor[3]>[vdot1B9C,vdot1B9E,vdot1BA0];
    real op1_e3_l_341BA9#1 = VDot<3>(op1_e3_l_171B9A,op1_e3_l_171B9A);
    real r1BAD#1 = RMul(op1_e3_l_91B52,op1_e3_l_91B52);
    real op1_e3_l_351BAC#1 = RMul(r1BAD,op1_e3_l_341BA9);
    real op1_e3_l_361BB1#1 = Sqrt(op1_e3_l_351BAC);
    tensor[3] op1_e3_l_371BB4#1 = VScale<3>(op1_e3_l_91B52,op1_e3_l_171B9A);
    real op1_e3_l_381BB7#2 = RDiv(realLit1B53,op1_e3_l_361BB1);
    tensor[3] camU1BBC#4 = VScale<3>(op1_e3_l_381BB7,op1_e3_l_371BB4);
    globals.camU1ACC = camU1BBC;
    real r1BC2#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B48);
    real r1BC3#3 = RMul(realLit1B5C,r1BC2);
    real r1BC4#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B48);
    real r1BC5#3 = RMul(realLit1B5C,r1BC4);
    real r1BC6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B48);
    real r1BC7#5 = RMul(realLit1B5C,r1BC6);
    real r1BC8#3 = RAdd(r1BC3,r1BC5);
    real r1BC9#3 = RAdd(r1BC8,r1BC7);
    real r1BCB#1 = RMul(realLit1B53,r1BC6);
    real r1BCC#1 = RAdd(r1BC8,r1BCB);
    real r1BCE#1 = RMul(realLit1B68,r1BC4);
    real r1BCF#1 = RAdd(r1BC3,r1BCE);
    real r1BD0#1 = RAdd(r1BCF,r1BC7);
    tensor[3] tensor1BD1#1 = <tensor[3]>[r1BC9,r1BCC,r1BD0];
    real r1BD2#1 = RMul(realLit1B68,r1BC6);
    real r1BD3#1 = RAdd(r1BC8,r1BD2);
    real r1BD4#1 = RMul(realLit1B53,r1BC2);
    real r1BD5#1 = RAdd(r1BD4,r1BC5);
    real r1BD6#1 = RAdd(r1BD5,r1BC7);
    tensor[3] tensor1BD7#1 = <tensor[3]>[r1BD3,r1BC9,r1BD6];
    real r1BD8#1 = RMul(realLit1B53,r1BC4);
    real r1BD9#1 = RAdd(r1BC3,r1BD8);
    real r1BDA#1 = RAdd(r1BD9,r1BC7);
    real r1BDB#1 = RMul(realLit1B68,r1BC2);
    real r1BDC#1 = RAdd(r1BDB,r1BC5);
    real r1BDD#1 = RAdd(r1BDC,r1BC7);
    tensor[3] tensor1BDE#1 = <tensor[3]>[r1BDA,r1BDD,r1BC9];
    real vdot1C01#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD1);
    real vdot1C03#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD7);
    real vdot1C05#1 = VDot<3>(op1_e3_l_171B9A,tensor1BDE);
    tensor[3] op1_e3_l_471BFF#1 = <tensor[3]>[vdot1C01,vdot1C03,vdot1C05];
    tensor[3] op1_e3_l_501C0E#3 = VScale<3>(op1_e3_l_91B52,op1_e3_l_471BFF);
    real r1C12#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C0E);
    real r1C13#3 = RMul(op1_e3_l_381BB7,op1_e3_l_91B52);
    real r1C14#2 = RMul(r1C13,r1C12);
    real r1C15#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C0E);
    real r1C16#2 = RMul(r1C13,r1C15);
    real r1C17#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C0E);
    real r1C18#2 = RMul(r1C13,r1C17);
    tensor[3] camV1C11#1 = <tensor[3]>[r1C14,r1C16,r1C18];
    globals.camV1ACD = camV1C11;
    real _t1C23#1 = 0.314159265358979323846264338327950288e1;
    real _t1C25#1 = 0.36e3;
    real op1_e3_l_51C27#1 = RMul(camFOV1B1E,_t1C23);
    real op1_e3_l_61C2A#1 = RDiv(op1_e3_l_51C27,_t1C25);
    real op1_e3_l_101C2D#2 = Tan(op1_e3_l_61C2A);
    real camVmax1C30#1 = RMul(op1_e3_l_101C2D,camDist1B4E);
    globals.camVmax1ACE = camVmax1C30;
    real _t1C34#1 = IntToReal(iresU1B20);
    real _t1C36#1 = IntToReal(iresV1B22);
    real r1C39#1 = RMul(_t1C34,op1_e3_l_101C2D);
    real op1_e3_l_141C38#1 = RMul(r1C39,camDist1B4E);
    real camUmax1C3D#1 = RDiv(op1_e3_l_141C38,_t1C36);
    globals.camUmax1ACF = camUmax1C3D;
    real op1_e3_l_31C43#1 = VDot<3>(lightVsp1B24,lightVsp1B24);
    real op1_e3_l_41C46#1 = Sqrt(op1_e3_l_31C43);
    real op1_e3_l_51C49#1 = RDiv(realLit1B53,op1_e3_l_41C46);
    real r1C4F#1 = VIndex<3,0>(camU1BBC);
    real r1C50#3 = TensorIndex<tensor[3],[0]>(lightVsp1B24);
    real r1C51#1 = RMul(r1C4F,r1C50);
    real r1C53#3 = TensorIndex<tensor[3],[1]>(lightVsp1B24);
    real r1C54#1 = RMul(r1C14,r1C53);
    real r1C55#1 = VIndex<3,0>(camN1B57);
    real r1C56#3 = TensorIndex<tensor[3],[2]>(lightVsp1B24);
    real r1C57#1 = RMul(r1C55,r1C56);
    real r1C58#1 = RAdd(r1C51,r1C54);
    real r1C59#1 = RAdd(r1C58,r1C57);
    real r1C5A#1 = VIndex<3,1>(camU1BBC);
    real r1C5B#1 = RMul(r1C5A,r1C50);
    real r1C5D#1 = RMul(r1C16,r1C53);
    real r1C5E#1 = VIndex<3,1>(camN1B57);
    real r1C5F#1 = RMul(r1C5E,r1C56);
    real r1C60#1 = RAdd(r1C5B,r1C5D);
    real r1C61#1 = RAdd(r1C60,r1C5F);
    real r1C62#1 = VIndex<3,2>(camU1BBC);
    real r1C63#1 = RMul(r1C62,r1C50);
    real r1C65#1 = RMul(r1C18,r1C53);
    real r1C66#1 = VIndex<3,2>(camN1B57);
    real r1C67#1 = RMul(r1C66,r1C56);
    real r1C68#1 = RAdd(r1C63,r1C65);
    real r1C69#1 = RAdd(r1C68,r1C67);
    tensor[3] op1_e3_l_61C4E#1 = <tensor[3]>[r1C59,r1C61,r1C69];
    tensor[3] light1C87#1 = VScale<3>(op1_e3_l_51C49,op1_e3_l_61C4E);
    globals.light1AD0 = light1C87;
    globals._t1AD1 = _t1B40;
    globals._tX1AD2 = _t1B3E;
    globals.c1AD3 = c1B3C;
    globals.I1AD6 = I1B42;
    return
## strand
  strand raycast (int ui1C92#2, int vi1C93#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1C9E:  preds = []
        int iresU1C9F#1 = globals.iresU1ABE;
        int iresV1CA1#1 = globals.iresV1ABF;
        real camNear1CA3#1 = globals.camNear1AC0;
        real camDist1CA5#1 = globals.camDist1ACA;
        tensor[3] camN1CA7#1 = globals.camN1ACB;
        tensor[3] camU1CA9#1 = globals.camU1ACC;
        tensor[3] camV1CAB#1 = globals.camV1ACD;
        real camVmax1CAD#3 = globals.camVmax1ACE;
        real camUmax1CAF#2 = globals.camUmax1ACF;
        real _t1CB1#4 = -0.5e0;
        real _t1CB3#1 = IntToReal(ui1C92);
        real _t1CB5#1 = IntToReal(iresU1C9F);
        real _t1CB7#2 = 0.5e0;
        real op1_e3_l_61CB9#1 = RSub(_t1CB5,_t1CB7);
        real op1_e3_l_71CBC#1 = RSub(_t1CB3,_t1CB1);
        real op1_e3_l_81CBF#1 = RSub(op1_e3_l_61CB9,_t1CB1);
        real op1_e3_l_91CC2#2 = RNeg(camUmax1CAF);
        real op1_e3_l_101CC5#1 = RDiv(op1_e3_l_71CBC,op1_e3_l_81CBF);
        real op1_e3_l_111CC8#1 = RSub(camUmax1CAF,op1_e3_l_91CC2);
        real op1_e3_l_131CCB#1 = RMul(op1_e3_l_101CC5,op1_e3_l_111CC8);
        real rayU1CCE#2 = RAdd(op1_e3_l_91CC2,op1_e3_l_131CCB);
        real _t1CD1#1 = IntToReal(vi1C93);
        real _t1CD3#1 = IntToReal(iresV1CA1);
        real op1_e3_l_61CD5#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_71CD8#1 = RSub(_t1CD1,_t1CB1);
        real op1_e3_l_81CDB#1 = RSub(op1_e3_l_61CD5,_t1CB1);
        real op1_e3_l_91CDE#1 = RNeg(camVmax1CAD);
        real op1_e3_l_101CE1#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_81CDB);
        real op1_e3_l_111CE4#1 = RSub(op1_e3_l_91CDE,camVmax1CAD);
        real op1_e3_l_121CE7#1 = RMul(op1_e3_l_101CE1,op1_e3_l_111CE4);
        real rayV1CEA#2 = RAdd(camVmax1CAD,op1_e3_l_121CE7);
        tensor[3] op1_e3_l_331CFC#1 = VScale<3>(rayU1CCE,camU1CA9);
        tensor[3] op1_e3_l_341CFF#1 = VScale<3>(rayV1CEA,camV1CAB);
        tensor[3] op1_e3_l_351D02#3 = VAdd<3>(op1_e3_l_331CFC,op1_e3_l_341CFF);
        real realLit1D06#2 = 0.1e1;
        real r1D07#3 = RDiv(realLit1D06,camDist1CA5);
        real r1D08#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D02);
        real r1D09#1 = RMul(r1D07,r1D08);
        real r1D0A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D02);
        real r1D0B#1 = RMul(r1D07,r1D0A);
        real r1D0C#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D02);
        real r1D0D#1 = RMul(r1D07,r1D0C);
        tensor[3] op1_e3_l_361D05#1 = <tensor[3]>[r1D09,r1D0B,r1D0D];
        tensor[3] rayVec1D18#1 = VAdd<3>(camN1CA7,op1_e3_l_361D05);
        real _t1D1D#8 = 0.e0;
        tensor[3] rgb1D1F#1 = <tensor[3]>[_t1D1D,_t1D1D,_t1D1D];
        tensor[4] rgba1D21#1 = <tensor[4]>[_t1D1D,_t1D1D,_t1D1D,_t1D1D];
        self.rayU = rayU1CCE;
        self.rayV = rayV1CEA;
        self.rayN = camNear1CA3;
        self.rayVec = rayVec1D18;
        self.transp = realLit1D06;
        self.rgb = rgb1D1F;
        self.rgba = rgba1D21;
        self.gray = _t1D1D;
        self.ui = ui1C92;
        self.vi = vi1C93;
        return
    end state init
    method update
        ENTRY1D2E:  preds = []
          image(IMAGE1D<double[3]>) I1D2F#17 = globals.I1AD6;
          real isoval1D31#1 = globals.isoval1AB8;
          femData:Mesh _t1D33#17 = globals._t1AD1;
          femData:Space _t1D35#10 = globals._tX1AD2;
          femData:FemFunc c1D37#10 = globals.c1AD3;
          femData:Mesh a1D3D#1 = globals.a1AB5;
          real thick1D3F#1 = globals.thick1AB9;
          tensor[3] camEye1D41#1 = globals.camEye1ABA;
          real camNear1D43#2 = globals.camNear1AC0;
          real camFar1D45#2 = globals.camFar1AC1;
          real refStep1D47#1 = globals.refStep1AC2;
          real rayStep1D49#2 = globals.rayStep1AC3;
          real phongKa1D4B#1 = globals.phongKa1AC5;
          real phongKd1D4D#1 = globals.phongKd1AC6;
          bool debug1D4F#1 = globals.debug1AC7;
          int su1D51#1 = globals.su1AC8;
          int sv1D53#1 = globals.sv1AC9;
          tensor[3] light1D55#1 = globals.light1AD0;
          real rayN1D57#4 = self.rayN;
          tensor[3] rayVec1D59#3 = self.rayVec;
          real transp1D5B#10 = self.transp;
          tensor[3] rgb1D5D#9 = self.rgb;
          int ui1D5F#1 = self.ui;
          int vi1D61#1 = self.vi;
          if debug1D4F then goto ASSIGN1D65 else goto JOIN1D6F
        ASSIGN1D65:  preds = [COND1D63]
          bool _t1D64#1 = NEQ<int>(ui1D5F,su1D51);
          if _t1D64 then goto ASSIGN1D68 else goto ASSIGN2E4B
        ASSIGN1D68:  preds = [COND1D66]
          bool _t1D67#1 = true;
          goto JOIN1D6B
        JOIN1D6B:  preds = [ASSIGN1D68,ASSIGN2E4B]
          bool _t1D69#1 = phi(_t1D67,_t1D6A)
          if _t1D69 then goto STABILIZE1D6D else goto JOIN1D6E
        STABILIZE1D6D:  preds = [COND1D6C]
          stabilize
          goto JOIN1D6E
        JOIN1D6E:  preds = [*STABILIZE1D6D,COND1D6C]
          goto JOIN1D6F
        JOIN1D6F:  preds = [JOIN1D6E,COND1D63]
          tensor[3] op1_e3_l_31D70#1 = VScale<3>(rayN1D57,rayVec1D59);
          tensor[3] x1D73#5 = VAdd<3>(camEye1D41,op1_e3_l_31D70);
          real _t1D76#61 = 0.e0;
          real _t1D78#2 = VIndex<3,0>(x1D73);
          bool _t1D7A#1 = LTE<real>(_t1D76,_t1D78);
          if _t1D7A then goto ASSIGN1D7E else goto JOIN2E01
        ASSIGN1D7E:  preds = [COND1D7C]
          real _t1D7D#45 = 0.1e1;
          bool _t1D7F#1 = LTE<real>(_t1D78,_t1D7D);
          if _t1D7F then goto ASSIGN1D83 else goto JOIN2DFE
        ASSIGN1D83:  preds = [COND1D81]
          real _t1D82#2 = VIndex<3,1>(x1D73);
          bool _t1D84#1 = LTE<real>(_t1D76,_t1D82);
          if _t1D84 then goto ASSIGN1D88 else goto JOIN2DFB
        ASSIGN1D88:  preds = [COND1D86]
          bool _t1D87#1 = LTE<real>(_t1D82,_t1D7D);
          if _t1D87 then goto ASSIGN1D8B else goto JOIN2DF8
        ASSIGN1D8B:  preds = [COND1D89]
          real _t1D8A#2 = VIndex<3,2>(x1D73);
          bool _t1D8C#1 = LTE<real>(_t1D76,_t1D8A);
          if _t1D8C then goto ASSIGN1D90 else goto JOIN2DF5
        ASSIGN1D90:  preds = [COND1D8E]
          bool _t1D8F#1 = LTE<real>(_t1D8A,_t1D7D);
          if _t1D8F then goto ASSIGN24EE else goto JOIN2DF2
        ASSIGN24EE:  preds = [COND1D91]
          femData:MeshPos p1D92#1 = findPos1D93 (a1D3D,x1D73);
          bool _t24EF#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1D92);
          if _t24EF then goto ASSIGN24F3 else goto JOIN2DEF
        ASSIGN24F3:  preds = [COND24F1]
          real _t24F2#1 = 0.13e1;
          femData:MeshPos callFindPos24F4#2 = findPos1D93 (_t1D33,x1D73);
          int intPos24F6#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F4);
          tensor[3] refPos24F8#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F4);
          int ilit24FB#1 = 10;
          int mulRes24FC#10 = IMul(intPos24F6,ilit24FB);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,mulRes24FC);
          int ilit2500#22 = 1;
          int addRes2501#1 = IAdd(mulRes24FC,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2501);
          int ilit2503#10 = 2;
          int addRes2504#1 = IAdd(mulRes24FC,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2504);
          int ilit2506#10 = 3;
          int addRes2507#1 = IAdd(mulRes24FC,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2507);
          int ilit2509#2 = 4;
          int addRes250A#1 = IAdd(mulRes24FC,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250A);
          int ilit250C#1 = 5;
          int addRes250D#1 = IAdd(mulRes24FC,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250D);
          int ilit250F#1 = 6;
          int addRes2510#1 = IAdd(mulRes24FC,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2510);
          int ilit2512#1 = 7;
          int addRes2513#1 = IAdd(mulRes24FC,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2513);
          int ilit2515#1 = 8;
          int addRes2516#1 = IAdd(mulRes24FC,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2516);
          int ilit2518#1 = 9;
          int addRes2519#1 = IAdd(mulRes24FC,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2519);
          int mulRes2542#1 = IMul(ilit2500,idx24FF);
          int mulRes2544#1 = IMul(ilit2500,idx2502);
          int mulRes2547#1 = IMul(ilit2500,idx2505);
          int mulRes254A#1 = IMul(ilit2500,idx2508);
          int mulRes254D#1 = IMul(ilit2500,idx250B);
          int mulRes2550#1 = IMul(ilit2500,idx250E);
          int mulRes2553#1 = IMul(ilit2500,idx2511);
          int mulRes2556#1 = IMul(ilit2500,idx2514);
          int mulRes2559#1 = IMul(ilit2500,idx2517);
          int mulRes255C#1 = IMul(ilit2500,idx251A);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2542);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2544);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2547);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254A);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254D);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2550);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2553);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2556);
          real dof2565#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2559);
          real dof2566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes255C);
          tensor[10] dofs2567#4 = <tensor[10]>[dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564,dof2565,dof2566];
          real varAcc2593#5 = VIndex<3,0>(refPos24F8);
          real varAcc2594#4 = VIndex<3,1>(refPos24F8);
          real varAcc2595#4 = VIndex<3,2>(refPos24F8);
          real coeff2596#4 = 0.2e1;
          real prod22598#1 = RMul(varAcc2593,varAcc2593);
          real prod259A#3 = RMul(_t1D7D,_t1D7D);
          real prod259B#2 = RMul(prod22598,prod259A);
          real coeff259C#7 = 0.4e1;
          real prod259E#2 = RMul(varAcc2594,_t1D7D);
          real prod259F#2 = RMul(varAcc2593,prod259E);
          real prod25A1#2 = RMul(_t1D7D,varAcc2595);
          real prod25A2#2 = RMul(varAcc2593,prod25A1);
          real coeff25A3#4 = -0.3e1;
          real prod25A4#5 = RMul(varAcc2593,prod259A);
          real prod225A5#1 = RMul(varAcc2594,varAcc2594);
          real prod25A6#1 = RMul(prod225A5,_t1D7D);
          real prod25A7#2 = RMul(_t1D7D,prod25A6);
          real prod25A8#1 = RMul(varAcc2594,varAcc2595);
          real prod25A9#2 = RMul(_t1D7D,prod25A8);
          real prod25AA#5 = RMul(_t1D7D,prod259E);
          real prod225AB#1 = RMul(varAcc2595,varAcc2595);
          real prod25AC#1 = RMul(_t1D7D,prod225AB);
          real prod25AD#2 = RMul(_t1D7D,prod25AC);
          real prod25AE#5 = RMul(_t1D7D,prod25A1);
          real prod25AF#4 = RMul(_t1D7D,prod259A);
          real mult25B0#10 = RMul(_t1D7D,prod25AF);
          real mult25B1#1 = RMul(coeff25A3,prod25AE);
          real mult25B2#2 = RMul(coeff2596,prod25AD);
          real mult25B3#1 = RMul(coeff25A3,prod25AA);
          real mult25B4#2 = RMul(coeff259C,prod25A9);
          real mult25B5#2 = RMul(coeff2596,prod25A7);
          real mult25B6#1 = RMul(coeff25A3,prod25A4);
          real mult25B7#2 = RMul(coeff259C,prod25A2);
          real mult25B8#2 = RMul(coeff259C,prod259F);
          real mult25B9#2 = RMul(coeff2596,prod259B);
          real sum25BA#1 = RAdd(mult25B8,mult25B9);
          real sum25BB#1 = RAdd(mult25B7,sum25BA);
          real sum25BC#1 = RAdd(mult25B6,sum25BB);
          real sum25BD#1 = RAdd(mult25B5,sum25BC);
          real sum25BE#1 = RAdd(mult25B4,sum25BD);
          real sum25BF#1 = RAdd(mult25B3,sum25BE);
          real sum25C0#1 = RAdd(mult25B2,sum25BF);
          real sum25C1#1 = RAdd(mult25B1,sum25C0);
          real sum25C2#1 = RAdd(mult25B0,sum25C1);
          real coeff25C4#23 = -0.1e1;
          real mult25C5#1 = RMul(coeff25C4,prod25A4);
          real sum25C6#1 = RAdd(mult25C5,mult25B9);
          real mult25C8#1 = RMul(coeff25C4,prod25AA);
          real sum25C9#1 = RAdd(mult25C8,mult25B5);
          real mult25CB#1 = RMul(coeff25C4,prod25AE);
          real sum25CC#1 = RAdd(mult25CB,mult25B2);
          real coeff25CE#9 = -0.4e1;
          real mult25CF#5 = RMul(coeff259C,prod25AE);
          real mult25D0#1 = RMul(coeff25CE,prod25AD);
          real mult25D1#2 = RMul(coeff25CE,prod25A9);
          real mult25D2#2 = RMul(coeff25CE,prod25A2);
          real sum25D3#1 = RAdd(mult25D1,mult25D2);
          real sum25D4#1 = RAdd(mult25D0,sum25D3);
          real sum25D5#1 = RAdd(mult25CF,sum25D4);
          real mult25D7#5 = RMul(coeff259C,prod25AA);
          real mult25D8#1 = RMul(coeff25CE,prod25A7);
          real mult25D9#2 = RMul(coeff25CE,prod259F);
          real sum25DA#1 = RAdd(mult25D8,mult25D9);
          real sum25DB#1 = RAdd(mult25D1,sum25DA);
          real sum25DC#1 = RAdd(mult25D7,sum25DB);
          real mult25DE#5 = RMul(coeff259C,prod25A4);
          real mult25DF#1 = RMul(coeff25CE,prod259B);
          real sum25E0#1 = RAdd(mult25D9,mult25DF);
          real sum25E1#1 = RAdd(mult25D2,sum25E0);
          real sum25E2#1 = RAdd(mult25DE,sum25E1);
          tensor[10] intermediateCons25E4#1 = <tensor[10]>[sum25C2,sum25C6,sum25C9,sum25CC,mult25B4,mult25B7,mult25B8,sum25D5,sum25DC,sum25E2];
          real compositionl2638#2 = VDot<10>(dofs2567,intermediateCons25E4);
          real op1_e3_l_23263B#1 = RSub(compositionl2638,isoval1D31);
          real mult264F#1 = RMul(coeff25A3,prod25AF);
          real sum2653#1 = RAdd(mult25D7,mult25DE);
          real sum2654#1 = RAdd(mult25CF,sum2653);
          real sum2655#3 = RAdd(mult264F,sum2654);
          real mult2658#6 = RMul(coeff25C4,prod25AF);
          real sum2659#1 = RAdd(mult2658,mult25DE);
          real basisEval265D#4 = RMul(coeff25CE,prod25AE);
          real basisEval265E#4 = RMul(coeff25CE,prod25AA);
          real coeff265F#3 = -0.8e1;
          real mult2660#3 = RMul(coeff259C,prod25AF);
          real mult2661#1 = RMul(coeff265F,prod25A4);
          real sum2662#1 = RAdd(basisEval265E,mult2661);
          real sum2663#1 = RAdd(basisEval265D,sum2662);
          real sum2664#1 = RAdd(mult2660,sum2663);
          real sum2667#1 = RAdd(mult2658,mult25D7);
          real mult2669#1 = RMul(coeff265F,prod25AA);
          real mult266A#4 = RMul(coeff25CE,prod25A4);
          real sum266B#1 = RAdd(mult2669,mult266A);
          real sum266C#1 = RAdd(basisEval265D,sum266B);
          real sum266D#1 = RAdd(mult2660,sum266C);
          real sum2670#1 = RAdd(mult2658,mult25CF);
          real mult2672#1 = RMul(coeff265F,prod25AE);
          real sum2673#1 = RAdd(basisEval265E,mult266A);
          real sum2674#1 = RAdd(mult2672,sum2673);
          real sum2675#1 = RAdd(mult2660,sum2674);
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2655,sum2659,_t1D76,_t1D76,_t1D76,mult25CF,mult25D7,basisEval265D,basisEval265E,sum2664];
          tensor[10] intermediateCons2678#1 = <tensor[10]>[sum2655,_t1D76,sum2667,_t1D76,mult25CF,_t1D76,mult25DE,basisEval265D,sum266D,mult266A];
          tensor[10] intermediateCons2679#1 = <tensor[10]>[sum2655,_t1D76,_t1D76,sum2670,mult25D7,mult25DE,_t1D76,sum2675,basisEval265E,mult266A];
          real vdot26BA#3 = VDot<10>(dofs2567,intermediateCons2677);
          real vdot26BC#3 = VDot<10>(dofs2567,intermediateCons2678);
          real vdot26BE#3 = VDot<10>(dofs2567,intermediateCons2679);
          int mulRes26C9#4 = IMul(intPos24F6,ilit2509);
          int idx26CC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,mulRes26C9);
          int addRes26CE#1 = IAdd(mulRes26C9,ilit2500);
          int idx26CF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CE);
          int addRes26D1#1 = IAdd(mulRes26C9,ilit2503);
          int idx26D2#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D1);
          int addRes26D4#1 = IAdd(mulRes26C9,ilit2506);
          int idx26D5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D4);
          int mulRes26EB#3 = IMul(ilit2506,idx26CC);
          int addRes26EE#1 = IAdd(ilit2500,mulRes26EB);
          int addRes26F0#1 = IAdd(ilit2503,mulRes26EB);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26EB);
          real dof_load26F2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EE);
          real dof_load26F3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F0);
          int mulRes26F6#3 = IMul(ilit2506,idx26CF);
          int addRes26F8#1 = IAdd(ilit2500,mulRes26F6);
          int addRes26F9#1 = IAdd(ilit2503,mulRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26F6);
          real dof_load26FB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F8);
          real dof_load26FC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F9);
          int mulRes26FF#3 = IMul(ilit2506,idx26D2);
          int addRes2701#1 = IAdd(ilit2500,mulRes26FF);
          int addRes2702#1 = IAdd(ilit2503,mulRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26FF);
          real dof_load2704#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2701);
          real dof_load2705#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2702);
          int mulRes2708#3 = IMul(ilit2506,idx26D5);
          int addRes270A#1 = IAdd(ilit2500,mulRes2708);
          int addRes270B#1 = IAdd(ilit2503,mulRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes2708);
          real dof_load270D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270A);
          real dof_load270E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270B);
          real r275C#2 = RMul(dof_load26F1,mult2658);
          real r275F#1 = RMul(dof_load26FA,mult25B0);
          real r2762#2 = RMul(dof_load2703,_t1D76);
          real r2765#2 = RMul(dof_load270C,_t1D76);
          real r2766#1 = RAdd(r275C,r275F);
          real r2767#1 = RAdd(r2766,r2762);
          real r2768#13 = RAdd(r2767,r2765);
          real r276C#1 = RMul(dof_load26FA,_t1D76);
          real r276E#1 = RMul(dof_load2703,mult25B0);
          real r2771#2 = RAdd(r275C,r276C);
          real r2772#1 = RAdd(r2771,r276E);
          real r2773#13 = RAdd(r2772,r2765);
          real r277B#1 = RMul(dof_load270C,mult25B0);
          real r277D#1 = RAdd(r2771,r2762);
          real r277E#12 = RAdd(r277D,r277B);
          real r2781#2 = RMul(dof_load26F2,mult2658);
          real r2783#1 = RMul(dof_load26FB,mult25B0);
          real r2785#2 = RMul(dof_load2704,_t1D76);
          real r2787#2 = RMul(dof_load270D,_t1D76);
          real r2788#1 = RAdd(r2781,r2783);
          real r2789#1 = RAdd(r2788,r2785);
          real r278A#13 = RAdd(r2789,r2787);
          real r278C#1 = RMul(dof_load26FB,_t1D76);
          real r278D#1 = RMul(dof_load2704,mult25B0);
          real r278F#2 = RAdd(r2781,r278C);
          real r2790#1 = RAdd(r278F,r278D);
          real r2791#13 = RAdd(r2790,r2787);
          real r2795#1 = RMul(dof_load270D,mult25B0);
          real r2797#1 = RAdd(r278F,r2785);
          real r2798#12 = RAdd(r2797,r2795);
          real r279B#2 = RMul(dof_load26F3,mult2658);
          real r279D#1 = RMul(dof_load26FC,mult25B0);
          real r279F#2 = RMul(dof_load2705,_t1D76);
          real r27A1#2 = RMul(dof_load270E,_t1D76);
          real r27A2#1 = RAdd(r279B,r279D);
          real r27A3#1 = RAdd(r27A2,r279F);
          real r27A4#13 = RAdd(r27A3,r27A1);
          real r27A6#1 = RMul(dof_load26FC,_t1D76);
          real r27A7#1 = RMul(dof_load2705,mult25B0);
          real r27A9#2 = RAdd(r279B,r27A6);
          real r27AA#1 = RAdd(r27A9,r27A7);
          real r27AB#13 = RAdd(r27AA,r27A1);
          real r27AF#1 = RMul(dof_load270E,mult25B0);
          real r27B1#1 = RAdd(r27A9,r279F);
          real r27B2#12 = RAdd(r27B1,r27AF);
          real r2813#3 = RMul(_t1D76,r2768);
          real r2815#3 = RMul(_t1D76,r278A);
          real r2817#5 = RMul(_t1D76,r27A4);
          real r2818#3 = RAdd(r2813,r2815);
          real r2819#9 = RAdd(r2818,r2817);
          real r281B#3 = RMul(_t1D76,r2773);
          real r281D#3 = RMul(_t1D76,r2791);
          real r281F#5 = RMul(_t1D76,r27AB);
          real r2820#3 = RAdd(r281B,r281D);
          real r2821#9 = RAdd(r2820,r281F);
          real r2823#3 = RMul(_t1D76,r277E);
          real r2825#3 = RMul(_t1D76,r2798);
          real r2827#5 = RMul(_t1D76,r27B2);
          real r2828#3 = RAdd(r2823,r2825);
          real r2829#12 = RAdd(r2828,r2827);
          real r282C#1 = RMul(coeff25C4,r27A4);
          real r282D#3 = RAdd(r2818,r282C);
          real r282E#1 = RMul(coeff25C4,r27AB);
          real r282F#3 = RAdd(r2820,r282E);
          real r2830#1 = RMul(coeff25C4,r27B2);
          real r2831#4 = RAdd(r2828,r2830);
          real r2834#1 = RMul(_t1D7D,r278A);
          real r2835#1 = RAdd(r2813,r2834);
          real r2836#3 = RAdd(r2835,r2817);
          real r2837#1 = RMul(_t1D7D,r2791);
          real r2838#1 = RAdd(r281B,r2837);
          real r2839#3 = RAdd(r2838,r281F);
          real r283A#1 = RMul(_t1D7D,r2798);
          real r283B#1 = RAdd(r2823,r283A);
          real r283C#4 = RAdd(r283B,r2827);
          real r283F#1 = RMul(_t1D7D,r27A4);
          real r2840#3 = RAdd(r2818,r283F);
          real r2841#1 = RMul(_t1D7D,r27AB);
          real r2842#3 = RAdd(r2820,r2841);
          real r2843#1 = RMul(_t1D7D,r27B2);
          real r2844#4 = RAdd(r2828,r2843);
          real r2846#1 = RMul(coeff25C4,r2768);
          real r2847#1 = RAdd(r2846,r2815);
          real r2848#3 = RAdd(r2847,r2817);
          real r2849#1 = RMul(coeff25C4,r2773);
          real r284A#1 = RAdd(r2849,r281D);
          real r284B#3 = RAdd(r284A,r281F);
          real r284C#1 = RMul(coeff25C4,r277E);
          real r284D#1 = RAdd(r284C,r2825);
          real r284E#4 = RAdd(r284D,r2827);
          real r2851#1 = RMul(coeff25C4,r278A);
          real r2852#1 = RAdd(r2813,r2851);
          real r2853#3 = RAdd(r2852,r2817);
          real r2854#1 = RMul(coeff25C4,r2791);
          real r2855#1 = RAdd(r281B,r2854);
          real r2856#3 = RAdd(r2855,r281F);
          real r2857#1 = RMul(coeff25C4,r2798);
          real r2858#1 = RAdd(r2823,r2857);
          real r2859#4 = RAdd(r2858,r2827);
          real r285B#1 = RMul(_t1D7D,r2768);
          real r285C#1 = RAdd(r285B,r2815);
          real r285D#3 = RAdd(r285C,r2817);
          real r285E#1 = RMul(_t1D7D,r2773);
          real r285F#1 = RAdd(r285E,r281D);
          real r2860#3 = RAdd(r285F,r281F);
          real r2861#1 = RMul(_t1D7D,r277E);
          real r2862#1 = RAdd(r2861,r2825);
          real r2863#4 = RAdd(r2862,r2827);
          real r28C0#1 = RMul(r2768,r2819);
          real r28C3#1 = RMul(r278A,r2840);
          real r28C6#1 = RMul(r27A4,r2853);
          real r28C7#1 = RAdd(r28C0,r28C3);
          real r28C8#1 = RAdd(r28C7,r28C6);
          real r28CA#1 = RMul(r2768,r2821);
          real r28CC#1 = RMul(r278A,r2842);
          real r28CE#1 = RMul(r27A4,r2856);
          real r28CF#1 = RAdd(r28CA,r28CC);
          real r28D0#2 = RAdd(r28CF,r28CE);
          real r28D2#1 = RMul(r2768,r2829);
          real r28D4#1 = RMul(r278A,r2844);
          real r28D6#1 = RMul(r27A4,r2859);
          real r28D7#1 = RAdd(r28D2,r28D4);
          real r28D8#2 = RAdd(r28D7,r28D6);
          real r28DB#1 = RMul(r2768,r282D);
          real r28DD#1 = RMul(r278A,r2819);
          real r28DF#1 = RMul(r27A4,r285D);
          real r28E0#1 = RAdd(r28DB,r28DD);
          real r28E1#1 = RAdd(r28E0,r28DF);
          real r28E3#1 = RMul(r2768,r282F);
          real r28E5#1 = RMul(r278A,r2821);
          real r28E7#1 = RMul(r27A4,r2860);
          real r28E8#1 = RAdd(r28E3,r28E5);
          real r28E9#2 = RAdd(r28E8,r28E7);
          real r28EB#1 = RMul(r2768,r2831);
          real r28ED#1 = RMul(r278A,r2829);
          real r28EF#1 = RMul(r27A4,r2863);
          real r28F0#1 = RAdd(r28EB,r28ED);
          real r28F1#2 = RAdd(r28F0,r28EF);
          real r28F4#1 = RMul(r2768,r2836);
          real r28F6#1 = RMul(r278A,r2848);
          real r28F8#1 = RMul(r27A4,r2819);
          real r28F9#1 = RAdd(r28F4,r28F6);
          real r28FA#1 = RAdd(r28F9,r28F8);
          real r28FC#1 = RMul(r2768,r2839);
          real r28FE#1 = RMul(r278A,r284B);
          real r2900#1 = RMul(r27A4,r2821);
          real r2901#1 = RAdd(r28FC,r28FE);
          real r2902#2 = RAdd(r2901,r2900);
          real r2904#1 = RMul(r2768,r283C);
          real r2906#1 = RMul(r278A,r284E);
          real r2908#1 = RMul(r27A4,r2829);
          real r2909#1 = RAdd(r2904,r2906);
          real r290A#2 = RAdd(r2909,r2908);
          real r290E#1 = RMul(r2773,r2819);
          real r2910#1 = RMul(r2791,r2840);
          real r2912#1 = RMul(r27AB,r2853);
          real r2913#1 = RAdd(r290E,r2910);
          real r2914#2 = RAdd(r2913,r2912);
          real r2915#1 = RMul(r2773,r2821);
          real r2916#1 = RMul(r2791,r2842);
          real r2917#1 = RMul(r27AB,r2856);
          real r2918#1 = RAdd(r2915,r2916);
          real r2919#1 = RAdd(r2918,r2917);
          real r291A#1 = RMul(r2773,r2829);
          real r291B#1 = RMul(r2791,r2844);
          real r291C#1 = RMul(r27AB,r2859);
          real r291D#1 = RAdd(r291A,r291B);
          real r291E#2 = RAdd(r291D,r291C);
          real r2920#1 = RMul(r2773,r282D);
          real r2921#1 = RMul(r2791,r2819);
          real r2922#1 = RMul(r27AB,r285D);
          real r2923#1 = RAdd(r2920,r2921);
          real r2924#2 = RAdd(r2923,r2922);
          real r2925#1 = RMul(r2773,r282F);
          real r2926#1 = RMul(r2791,r2821);
          real r2927#1 = RMul(r27AB,r2860);
          real r2928#1 = RAdd(r2925,r2926);
          real r2929#1 = RAdd(r2928,r2927);
          real r292A#1 = RMul(r2773,r2831);
          real r292B#1 = RMul(r2791,r2829);
          real r292C#1 = RMul(r27AB,r2863);
          real r292D#1 = RAdd(r292A,r292B);
          real r292E#2 = RAdd(r292D,r292C);
          real r2930#1 = RMul(r2773,r2836);
          real r2931#1 = RMul(r2791,r2848);
          real r2932#1 = RMul(r27AB,r2819);
          real r2933#1 = RAdd(r2930,r2931);
          real r2934#2 = RAdd(r2933,r2932);
          real r2935#1 = RMul(r2773,r2839);
          real r2936#1 = RMul(r2791,r284B);
          real r2937#1 = RMul(r27AB,r2821);
          real r2938#1 = RAdd(r2935,r2936);
          real r2939#1 = RAdd(r2938,r2937);
          real r293A#1 = RMul(r2773,r283C);
          real r293B#1 = RMul(r2791,r284E);
          real r293C#1 = RMul(r27AB,r2829);
          real r293D#1 = RAdd(r293A,r293B);
          real r293E#2 = RAdd(r293D,r293C);
          real r2942#1 = RMul(r277E,r2819);
          real r2944#1 = RMul(r2798,r2840);
          real r2946#1 = RMul(r27B2,r2853);
          real r2947#1 = RAdd(r2942,r2944);
          real r2948#2 = RAdd(r2947,r2946);
          real r2949#1 = RMul(r277E,r2821);
          real r294A#1 = RMul(r2798,r2842);
          real r294B#1 = RMul(r27B2,r2856);
          real r294C#1 = RAdd(r2949,r294A);
          real r294D#2 = RAdd(r294C,r294B);
          real r294E#1 = RMul(r277E,r2829);
          real r294F#1 = RMul(r2798,r2844);
          real r2950#1 = RMul(r27B2,r2859);
          real r2951#1 = RAdd(r294E,r294F);
          real r2952#1 = RAdd(r2951,r2950);
          real r2954#1 = RMul(r277E,r282D);
          real r2955#1 = RMul(r2798,r2819);
          real r2956#1 = RMul(r27B2,r285D);
          real r2957#1 = RAdd(r2954,r2955);
          real r2958#2 = RAdd(r2957,r2956);
          real r2959#1 = RMul(r277E,r282F);
          real r295A#1 = RMul(r2798,r2821);
          real r295B#1 = RMul(r27B2,r2860);
          real r295C#1 = RAdd(r2959,r295A);
          real r295D#2 = RAdd(r295C,r295B);
          real r295E#1 = RMul(r277E,r2831);
          real r295F#1 = RMul(r2798,r2829);
          real r2960#1 = RMul(r27B2,r2863);
          real r2961#1 = RAdd(r295E,r295F);
          real r2962#1 = RAdd(r2961,r2960);
          real r2964#1 = RMul(r277E,r2836);
          real r2965#1 = RMul(r2798,r2848);
          real r2966#1 = RMul(r27B2,r2819);
          real r2967#1 = RAdd(r2964,r2965);
          real r2968#2 = RAdd(r2967,r2966);
          real r2969#1 = RMul(r277E,r2839);
          real r296A#1 = RMul(r2798,r284B);
          real r296B#1 = RMul(r27B2,r2821);
          real r296C#1 = RAdd(r2969,r296A);
          real r296D#2 = RAdd(r296C,r296B);
          real r296E#1 = RMul(r277E,r283C);
          real r296F#1 = RMul(r2798,r284E);
          real r2970#1 = RMul(r27B2,r2829);
          real r2971#1 = RAdd(r296E,r296F);
          real r2972#1 = RAdd(r2971,r2970);
          tensor[3] probe_l_292A2E#1 = <tensor[3]>[r2768,r278A,r27A4];
          tensor[3] probe_l_302A7B#3 = <tensor[3]>[r2773,r2791,r27AB];
          tensor[3] tensor2B26#1 = <tensor[3]>[r2829,r2844,r2859];
          tensor[3] tensor2B2C#1 = <tensor[3]>[r2831,r2829,r2863];
          tensor[3] tensor2B33#1 = <tensor[3]>[r283C,r284E,r2829];
          real vdot2B56#1 = VDot<3>(probe_l_302A7B,tensor2B26);
          real vdot2B58#1 = VDot<3>(probe_l_302A7B,tensor2B2C);
          real vdot2B5A#1 = VDot<3>(probe_l_302A7B,tensor2B33);
          tensor[3] op1_e3_l_332B54#1 = <tensor[3]>[vdot2B56,vdot2B58,vdot2B5A];
          real op1_e3_l_342B63#1 = VDot<3>(probe_l_292A2E,op1_e3_l_332B54);
          real r2B69#2 = RMul(_t1D76,r28C8);
          real r2B6B#1 = RMul(_t1D76,r28D0);
          real r2B6D#2 = RMul(_t1D76,r28D8);
          real r2B6F#2 = RMul(_t1D76,r2914);
          real r2B71#3 = RMul(_t1D76,r2919);
          real r2B74#1 = RMul(_t1D7D,r291E);
          real r2B76#2 = RMul(_t1D76,r2948);
          real r2B79#1 = RMul(coeff25C4,r294D);
          real r2B7B#3 = RMul(_t1D76,r2952);
          real r2B7C#2 = RAdd(r2B69,r2B6B);
          real r2B7D#1 = RAdd(r2B7C,r2B6D);
          real r2B7E#1 = RAdd(r2B7D,r2B6F);
          real r2B7F#1 = RAdd(r2B7E,r2B71);
          real r2B80#1 = RAdd(r2B7F,r2B74);
          real r2B81#1 = RAdd(r2B80,r2B76);
          real r2B82#1 = RAdd(r2B81,r2B79);
          real r2B83#1 = RAdd(r2B82,r2B7B);
          real r2B85#2 = RMul(_t1D76,r28E1);
          real r2B87#1 = RMul(_t1D76,r28E9);
          real r2B89#2 = RMul(_t1D76,r28F1);
          real r2B8B#2 = RMul(_t1D76,r2924);
          real r2B8D#3 = RMul(_t1D76,r2929);
          real r2B8F#1 = RMul(_t1D7D,r292E);
          real r2B91#2 = RMul(_t1D76,r2958);
          real r2B93#1 = RMul(coeff25C4,r295D);
          real r2B95#3 = RMul(_t1D76,r2962);
          real r2B96#2 = RAdd(r2B85,r2B87);
          real r2B97#1 = RAdd(r2B96,r2B89);
          real r2B98#1 = RAdd(r2B97,r2B8B);
          real r2B99#1 = RAdd(r2B98,r2B8D);
          real r2B9A#1 = RAdd(r2B99,r2B8F);
          real r2B9B#1 = RAdd(r2B9A,r2B91);
          real r2B9C#1 = RAdd(r2B9B,r2B93);
          real r2B9D#1 = RAdd(r2B9C,r2B95);
          real r2B9F#2 = RMul(_t1D76,r28FA);
          real r2BA1#1 = RMul(_t1D76,r2902);
          real r2BA3#2 = RMul(_t1D76,r290A);
          real r2BA5#2 = RMul(_t1D76,r2934);
          real r2BA7#3 = RMul(_t1D76,r2939);
          real r2BA9#1 = RMul(_t1D7D,r293E);
          real r2BAB#2 = RMul(_t1D76,r2968);
          real r2BAD#1 = RMul(coeff25C4,r296D);
          real r2BAF#3 = RMul(_t1D76,r2972);
          real r2BB0#2 = RAdd(r2B9F,r2BA1);
          real r2BB1#1 = RAdd(r2BB0,r2BA3);
          real r2BB2#1 = RAdd(r2BB1,r2BA5);
          real r2BB3#1 = RAdd(r2BB2,r2BA7);
          real r2BB4#1 = RAdd(r2BB3,r2BA9);
          real r2BB5#1 = RAdd(r2BB4,r2BAB);
          real r2BB6#1 = RAdd(r2BB5,r2BAD);
          real r2BB7#1 = RAdd(r2BB6,r2BAF);
          real r2BB9#1 = RMul(coeff25C4,r28D8);
          real r2BBA#2 = RMul(_t1D76,r291E);
          real r2BBB#1 = RMul(_t1D7D,r2948);
          real r2BBC#2 = RMul(_t1D76,r294D);
          real r2BBD#1 = RAdd(r2B7C,r2BB9);
          real r2BBE#1 = RAdd(r2BBD,r2B6F);
          real r2BBF#1 = RAdd(r2BBE,r2B71);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2BBB);
          real r2BC2#1 = RAdd(r2BC1,r2BBC);
          real r2BC3#1 = RAdd(r2BC2,r2B7B);
          real r2BC4#1 = RMul(coeff25C4,r28F1);
          real r2BC5#2 = RMul(_t1D76,r292E);
          real r2BC6#1 = RMul(_t1D7D,r2958);
          real r2BC7#2 = RMul(_t1D76,r295D);
          real r2BC8#1 = RAdd(r2B96,r2BC4);
          real r2BC9#1 = RAdd(r2BC8,r2B8B);
          real r2BCA#1 = RAdd(r2BC9,r2B8D);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2BC6);
          real r2BCD#1 = RAdd(r2BCC,r2BC7);
          real r2BCE#1 = RAdd(r2BCD,r2B95);
          real r2BCF#1 = RMul(coeff25C4,r290A);
          real r2BD0#2 = RMul(_t1D76,r293E);
          real r2BD1#1 = RMul(_t1D7D,r2968);
          real r2BD2#2 = RMul(_t1D76,r296D);
          real r2BD3#1 = RAdd(r2BB0,r2BCF);
          real r2BD4#1 = RAdd(r2BD3,r2BA5);
          real r2BD5#1 = RAdd(r2BD4,r2BA7);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BD1);
          real r2BD8#1 = RAdd(r2BD7,r2BD2);
          real r2BD9#1 = RAdd(r2BD8,r2BAF);
          real r2BDB#1 = RMul(_t1D7D,r28D0);
          real r2BDC#1 = RMul(coeff25C4,r2914);
          real r2BDD#1 = RAdd(r2B69,r2BDB);
          real r2BDE#1 = RAdd(r2BDD,r2B6D);
          real r2BDF#1 = RAdd(r2BDE,r2BDC);
          real r2BE0#1 = RAdd(r2BDF,r2B71);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B76);
          real r2BE3#1 = RAdd(r2BE2,r2BBC);
          real r2BE4#1 = RAdd(r2BE3,r2B7B);
          real r2BE5#1 = RMul(_t1D7D,r28E9);
          real r2BE6#1 = RMul(coeff25C4,r2924);
          real r2BE7#1 = RAdd(r2B85,r2BE5);
          real r2BE8#1 = RAdd(r2BE7,r2B89);
          real r2BE9#1 = RAdd(r2BE8,r2BE6);
          real r2BEA#1 = RAdd(r2BE9,r2B8D);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B91);
          real r2BED#1 = RAdd(r2BEC,r2BC7);
          real r2BEE#1 = RAdd(r2BED,r2B95);
          real r2BEF#1 = RMul(_t1D7D,r2902);
          real r2BF0#1 = RMul(coeff25C4,r2934);
          real r2BF1#1 = RAdd(r2B9F,r2BEF);
          real r2BF2#1 = RAdd(r2BF1,r2BA3);
          real r2BF3#1 = RAdd(r2BF2,r2BF0);
          real r2BF4#1 = RAdd(r2BF3,r2BA7);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAB);
          real r2BF7#1 = RAdd(r2BF6,r2BD2);
          real r2BF8#1 = RAdd(r2BF7,r2BAF);
          real op1_e3_l_362C8F#9 = RMul(coeff2596,op1_e3_l_342B63);
          real r2C96#1 = RDiv(r2B83,op1_e3_l_362C8F);
          real r2C98#1 = RDiv(r2B9D,op1_e3_l_362C8F);
          real r2C9A#1 = RDiv(r2BB7,op1_e3_l_362C8F);
          real r2C9D#1 = RDiv(r2BC3,op1_e3_l_362C8F);
          real r2C9F#1 = RDiv(r2BCE,op1_e3_l_362C8F);
          real r2CA1#1 = RDiv(r2BD9,op1_e3_l_362C8F);
          real r2CA4#1 = RDiv(r2BE4,op1_e3_l_362C8F);
          real r2CA6#1 = RDiv(r2BEE,op1_e3_l_362C8F);
          real r2CA8#1 = RDiv(r2BF8,op1_e3_l_362C8F);
          real r2CC4#1 = RMul(vdot26BA,r2C96);
          real r2CC7#1 = RMul(vdot26BC,r2C9D);
          real r2CCA#1 = RMul(vdot26BE,r2CA4);
          real r2CCB#1 = RAdd(r2CC4,r2CC7);
          real r2CCC#1 = RAdd(r2CCB,r2CCA);
          real r2CCE#1 = RMul(vdot26BA,r2C98);
          real r2CD0#1 = RMul(vdot26BC,r2C9F);
          real r2CD2#1 = RMul(vdot26BE,r2CA6);
          real r2CD3#1 = RAdd(r2CCE,r2CD0);
          real r2CD4#1 = RAdd(r2CD3,r2CD2);
          real r2CD6#1 = RMul(vdot26BA,r2C9A);
          real r2CD8#1 = RMul(vdot26BC,r2CA1);
          real r2CDA#1 = RMul(vdot26BE,r2CA8);
          real r2CDB#1 = RAdd(r2CD6,r2CD8);
          real r2CDC#1 = RAdd(r2CDB,r2CDA);
          tensor[3] op1_e3_l_382CC1#1 = <tensor[3]>[r2CCC,r2CD4,r2CDC];
          tensor[3] op1_e3_l_542CFA#3 = VNeg<3>(op1_e3_l_382CC1);
          real op1_e3_l_562CFD#1 = VDot<3>(op1_e3_l_542CFA,op1_e3_l_542CFA);
          real op1_e3_l_572D00#2 = Sqrt(op1_e3_l_562CFD);
          real op1_e3_l_582D03#1 = Abs<real>(op1_e3_l_23263B);
          real op1_e3_l_592D06#1 = RMul(thick1D3F,op1_e3_l_572D00);
          real op1_e3_l_602D09#1 = RDiv(op1_e3_l_582D03,op1_e3_l_592D06);
          real op1_e3_l_612D0C#1 = RSub(_t1D7D,op1_e3_l_602D09);
          real op1_e3_l_622D0F#1 = RMul(_t24F2,op1_e3_l_612D0C);
          real op1_e3_l_632D12#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real a2D15#2 = RMul(_t1D7D,op1_e3_l_632D12);
          bool _t2D18#1 = GT<real>(a2D15,_t1D76);
          if _t2D18 then goto ASSIGN3270 else goto JOIN2DEC
        ASSIGN3270:  preds = [COND2D1A]
          real _t2D21#1 = RSub(_t1D7D,a2D15);
          real op1_e3_l_32D24#1 = VDot<3>(rayVec1D59,rayVec1D59);
          real op1_e3_l_42D27#1 = Sqrt(op1_e3_l_32D24);
          real op1_e3_l_52D2A#1 = RMul(rayStep1D49,op1_e3_l_42D27);
          real _t2D2D#1 = RDiv(op1_e3_l_52D2A,refStep1D47);
          real _t2D30#1 = MathFn<pow>(_t2D21,_t2D2D);
          real _t2D32#2 = 0.11e1;
          real _t2D34#1 = 0.7e0;
          real op1_e3_l_672D36#1 = RDiv(_t1D7D,op1_e3_l_572D00);
          real op1_e3_l_682D3B#1 = VDot<3>(op1_e3_l_542CFA,light1D55);
          real _t2D3E#1 = RMul(op1_e3_l_672D36,op1_e3_l_682D3B);
          real shade2D41#1 = Max<real>(_t1D76,_t2D3E);
          real op1_e3_l_152D45#1 = RSub(rayN1D57,camNear1D43);
          real op1_e3_l_162D48#1 = RSub(camFar1D45,camNear1D43);
          real op1_e3_l_172D4B#1 = RDiv(op1_e3_l_152D45,op1_e3_l_162D48);
          real op1_e3_l_182D4E#1 = RSub(_t2D34,_t2D32);
          real op1_e3_l_192D51#1 = RMul(op1_e3_l_172D4B,op1_e3_l_182D4E);
          real op1_e3_l_202D54#1 = RMul(phongKd1D4D,shade2D41);
          real Mtransform2D57#1 = Transform<IMAGE1D<double[3]>>(I1D2F);
          real MxPos2D59#1 = RMul(Mtransform2D57,compositionl2638);
          real Ttranslate2D5C#1 = Translate<IMAGE1D<double[3]>>(I1D2F);
          real imgPos2D5E#2 = RAdd(MxPos2D59,Ttranslate2D5C);
          real nd2D61#2 = Floor<1>(imgPos2D5E);
          real f2D63#2 = RSub(imgPos2D5E,nd2D61);
          int n2D66#5 = RealToInt<1>(nd2D61);
          bool isInside2D6A#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D66,I1D2F);
          if isInside2D6A then goto ASSIGN327C else goto ASSIGN3274
        ASSIGN327C:  preds = [COND2D6C]
          int offp2D71#3 = IMul(ilit2506,n2D66);
          real v0_2D72#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D71);
          int addRes2D74#1 = IAdd(n2D66,ilit2500);
          int offp2D75#3 = IMul(ilit2506,addRes2D74);
          real v1_2D76#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D75);
          tensor[2] v_2D77#1 = <tensor[2]>[v0_2D72,v1_2D76];
          int offp2D78#1 = IAdd(offp2D71,ilit2500);
          real v0_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D78);
          int offp2D7A#1 = IAdd(offp2D75,ilit2500);
          real v1_2D7B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7A);
          tensor[2] v_2D7C#1 = <tensor[2]>[v0_2D79,v1_2D7B];
          int offp2D7E#1 = IAdd(offp2D71,ilit2503);
          real v0_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7E);
          int offp2D80#1 = IAdd(offp2D75,ilit2503);
          real v1_2D81#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D80);
          tensor[2] v_2D82#1 = <tensor[2]>[v0_2D7F,v1_2D81];
          tensor[3,2] voxels2D83#1 = <tensor[3,2]>[v_2D77,v_2D7C,v_2D82];
          goto JOIN2D9D
        JOIN2D9D:  preds = [ASSIGN2D99,ASSIGN2E49]
          tensor[3,2] ldvox2D9B#3 = phi(voxels2D83,voxels2E31)
          real idx2DA0#1 = RSub(f2D63,_t1D7D);
          tensor[2] kernX_2D9E#1 = <tensor[2]>[f2D63,idx2DA0];
          tensor[2] a02DA5#1 = <tensor[2]>[_t1D7D,_t1D7D];
          tensor[2] a12DA6#1 = <tensor[2]>[coeff25C4,_t1D7D];
          tensor[2] prod12DAB#1 = VMul<2>(kernX_2D9E,a12DA6);
          tensor[2] kevalX_d0_2DA4#3 = VAdd<2>(a02DA5,prod12DAB);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D9B);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA4);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D9B);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA4);
          tensor[2] projIx2DB9#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D9B);
          real vdot2DBA#1 = VDot<2>(projIx2DB9,kevalX_d0_2DA4);
          real op1_e3_l_222DC3#2 = RSub(_t1D7D,_t2D30);
          real op1_e3_l_232DC6#1 = RAdd(_t2D32,op1_e3_l_192D51);
          real op1_e3_l_242DC9#1 = RAdd(phongKa1D4B,op1_e3_l_202D54);
          real r2DCE#1 = RMul(transp1D5B,op1_e3_l_222DC3);
          real r2DCF#1 = RMul(r2DCE,op1_e3_l_232DC6);
          real r2DD0#3 = RMul(r2DCF,op1_e3_l_242DC9);
          real r2DD1#1 = RMul(r2DD0,vdot2DB6);
          real r2DD3#1 = RMul(r2DD0,vdot2DB8);
          real r2DD5#1 = RMul(r2DD0,vdot2DBA);
          tensor[3] op1_e3_l_252DCC#1 = <tensor[3]>[r2DD1,r2DD3,r2DD5];
          tensor[3] rgb2DE1#1 = VAdd<3>(rgb1D5D,op1_e3_l_252DCC);
          real op1_e3_l_52DE4#1 = RSub(_t1D7D,op1_e3_l_222DC3);
          real transp2DE7#1 = RMul(transp1D5B,op1_e3_l_52DE4);
          goto JOIN2DEC
        JOIN2DEC:  preds = [ASSIGN2DE9,COND2D1A]
          tensor[3] rgb2DEA#1 = phi(rgb2DE1,rgb1D5D)
          real transp2DEB#1 = phi(transp2DE7,transp1D5B)
          goto JOIN2DEF
        JOIN2DEF:  preds = [JOIN2DEC,COND24F1]
          tensor[3] rgb2DED#1 = phi(rgb2DEA,rgb1D5D)
          real transp2DEE#1 = phi(transp2DEB,transp1D5B)
          goto JOIN2DF2
        JOIN2DF2:  preds = [JOIN2DEF,COND1D91]
          tensor[3] rgb2DF0#1 = phi(rgb2DED,rgb1D5D)
          real transp2DF1#1 = phi(transp2DEE,transp1D5B)
          goto JOIN2DF5
        JOIN2DF5:  preds = [JOIN2DF2,COND1D8E]
          tensor[3] rgb2DF3#1 = phi(rgb2DF0,rgb1D5D)
          real transp2DF4#1 = phi(transp2DF1,transp1D5B)
          goto JOIN2DF8
        JOIN2DF8:  preds = [JOIN2DF5,COND1D89]
          tensor[3] rgb2DF6#1 = phi(rgb2DF3,rgb1D5D)
          real transp2DF7#1 = phi(transp2DF4,transp1D5B)
          goto JOIN2DFB
        JOIN2DFB:  preds = [JOIN2DF8,COND1D86]
          tensor[3] rgb2DF9#1 = phi(rgb2DF6,rgb1D5D)
          real transp2DFA#1 = phi(transp2DF7,transp1D5B)
          goto JOIN2DFE
        JOIN2DFE:  preds = [JOIN2DFB,COND1D81]
          tensor[3] rgb2DFC#1 = phi(rgb2DF9,rgb1D5D)
          real transp2DFD#1 = phi(transp2DFA,transp1D5B)
          goto JOIN2E01
        JOIN2E01:  preds = [JOIN2DFE,COND1D7C]
          tensor[3] rgb2DFF#3 = phi(rgb2DFC,rgb1D5D)
          real transp2E00#2 = phi(transp2DFD,transp1D5B)
          real _t2E02#1 = 0.1e-1;
          bool _t2E04#1 = LT<real>(transp2E00,_t2E02);
          if _t2E04 then goto SAVE2E07 else goto JOIN2E0B
        SAVE2E07:  preds = [COND2E06]
          self.transp = _t1D76;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E0B
        JOIN2E0B:  preds = [*STABILIZE2E09,COND2E06]
          real transp2E0A#2 = phi(transp2E00)
          bool _t2E0C#1 = GT<real>(rayN1D57,camFar1D45);
          if _t2E0C then goto SAVE2E0F else goto JOIN2E12
        SAVE2E0F:  preds = [COND2E0E]
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E12
        JOIN2E12:  preds = [*STABILIZE2E11,COND2E0E]
          real rayN2E13#1 = RAdd(rayN1D57,rayStep1D49);
          self.rayN = rayN2E13;
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          active
        ASSIGN3274:  preds = [COND2D6C]
          int ix2E1C#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,n2D66);
          int offp2E1E#3 = IMul(ilit2506,ix2E1C);
          real v0_2E1F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E1E);
          int addRes2E21#1 = IAdd(n2D66,ilit2500);
          int ix2E22#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E21);
          int offp2E23#3 = IMul(ilit2506,ix2E22);
          real v1_2E24#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E23);
          tensor[2] v_2E25#1 = <tensor[2]>[v0_2E1F,v1_2E24];
          int offp2E26#1 = IAdd(offp2E1E,ilit2500);
          real v0_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E26);
          int offp2E28#1 = IAdd(offp2E23,ilit2500);
          real v1_2E29#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E28);
          tensor[2] v_2E2A#1 = <tensor[2]>[v0_2E27,v1_2E29];
          int offp2E2C#1 = IAdd(offp2E1E,ilit2503);
          real v0_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2C);
          int offp2E2E#1 = IAdd(offp2E23,ilit2503);
          real v1_2E2F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2E);
          tensor[2] v_2E30#1 = <tensor[2]>[v0_2E2D,v1_2E2F];
          tensor[3,2] voxels2E31#1 = <tensor[3,2]>[v_2E25,v_2E2A,v_2E30];
          goto JOIN2D9D
        ASSIGN2E4B:  preds = [COND1D66]
          bool _t1D6A#1 = NEQ<int>(vi1D61,sv1D53);
          goto JOIN1D6B
    end update
    method stabilize
        ENTRY2E4C:  preds = []
          bool debug2E4D#1 = globals.debug1AC7;
          int su2E4F#1 = globals.su1AC8;
          int sv2E51#1 = globals.sv1AC9;
          real transp2E53#1 = self.transp;
          tensor[3] rgb2E55#3 = self.rgb;
          tensor[4] rgba2E57#1 = self.rgba;
          int ui2E59#1 = self.ui;
          int vi2E5B#1 = self.vi;
          real _t2E5D#1 = 0.1e1;
          real a2E5F#6 = RSub(_t2E5D,transp2E53);
          real _t2E62#1 = 0.e0;
          bool _t2E64#1 = GT<real>(a2E5F,_t2E62);
          if _t2E64 then goto ASSIGN2E68 else goto JOIN2E79
        ASSIGN2E68:  preds = [COND2E66]
          real _t2E67#1 = VIndex<3,0>(rgb2E55);
          real _t2E69#1 = RDiv(_t2E67,a2E5F);
          real _t2E6C#1 = VIndex<3,1>(rgb2E55);
          real _t2E6E#1 = RDiv(_t2E6C,a2E5F);
          real _t2E71#1 = VIndex<3,2>(rgb2E55);
          real _t2E73#1 = RDiv(_t2E71,a2E5F);
          tensor[4] rgba2E76#1 = <tensor[4]>[_t2E69,_t2E6E,_t2E73,a2E5F];
          goto JOIN2E79
        JOIN2E79:  preds = [ASSIGN2E77,COND2E66]
          tensor[4] rgba2E78#2 = phi(rgba2E76,rgba2E57)
          bool _t2E7A#1 = EQ<int>(ui2E59,su2E4F);
          if _t2E7A then goto ASSIGN2E7E else goto JOIN2E84
        ASSIGN2E7E:  preds = [COND2E7C]
          bool _t2E7D#1 = EQ<int>(vi2E5B,sv2E51);
          if _t2E7D then goto COND2E80 else goto JOIN2E83
        COND2E80:  preds = [COND2E7F]
          if debug2E4D then goto MASSIGN2E81 else goto JOIN2E82
        MASSIGN2E81:  preds = [COND2E80]
          Print<[real,tensor[4]]>(a2E5F,rgba2E78);
          goto JOIN2E82
        JOIN2E82:  preds = [MASSIGN2E81,COND2E80]
          goto JOIN2E83
        JOIN2E83:  preds = [JOIN2E82,COND2E7F]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2E83,COND2E7C]
          self.rgba = rgba2E78;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E87:  preds = []
      int iresU2E88#1 = globals.iresU1ABE;
      int iresV2E8A#1 = globals.iresV1ABF;
      int _t2E8C#2 = 0;
      int _t2E8E#2 = 1;
      int _t2E90#1 = ISub(iresV2E8A,_t2E8E);
      int[] _t2E92#1 = Range(_t2E8C,_t2E90);
    FOREACH2E95:  preds = [ASSIGN2E93,NEXT2E9E]
      foreach (vi2E94 in _t2E92) on exit goto RETURN2E9F
      int _t2E96#1 = ISub(iresU2E88,_t2E8E);
      int[] _t2E98#1 = Range(_t2E8C,_t2E96);
    FOREACH2E9B:  preds = [ASSIGN2E99,NEXT2E9D]
      foreach (ui2E9A in _t2E98) on exit goto NEXT2E9E
      new raycast(ui2E9A,vi2E94);
      goto FOREACH2E9B
    NEXT2E9E:  preds = [FOREACH2E9B]
      goto FOREACH2E95
    RETURN2E9F:  preds = [FOREACH2E95]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1AB5 (a) = <no-default>
  input 0b042F_intermedateGlobal1AB6 (b) = <no-default>
  input 0c0431_intermedateGlobal1AB7 (c) = <no-default>
  input isoval1AB8 (isoval) = <default>
  input thick1AB9 (thick) = <default>
  input camEye1ABA (camEye) = <default>
  input camAt1ABB (camAt) = <default>
  input camUp1ABC (camUp) = <default>
  input camFOV1ABD (camFOV) = <default>
  input iresU1ABE (iresU) = <default>
  input iresV1ABF (iresV) = <default>
  input camNear1AC0 (camNear) = <default>
  input camFar1AC1 (camFar) = <default>
  input refStep1AC2 (refStep) = <default>
  input rayStep1AC3 (rayStep) = <default>
  input lightVsp1AC4 (lightVsp) = <default>
  input phongKa1AC5 (phongKa) = <default>
  input phongKd1AC6 (phongKd) = <default>
  input debug1AC7 (debug) = <default>
  input su1AC8 (su) = <default>
  input sv1AC9 (sv) = <default>
  global real camDist1ACA
  global tensor[3] camN1ACB
  global tensor[3] camU1ACC
  global tensor[3] camV1ACD
  global real camVmax1ACE
  global real camUmax1ACF
  global tensor[3] light1AD0
  global femData:Mesh _t1AD1
  global femData:Space _tX1AD2
  global femData:FemFunc c1AD3
  global image(IMAGE1D<double[3]>) I1AD6
## functions
  function femData:MeshPos findPos1D93 (femData:Mesh mesh1D94#21, tensor[3] pos1D95#2) {
    ENTRY1D96:  preds = []
      real _t1D97#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1D99#1 = <tensor[3]>[_t1D97,_t1D97,_t1D97];
      int newtonInt1D9B#3 = 0;
      int cellInt1D9D#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1D94);
      int _t1D9F#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1D94);
      int _t1DA1#8 = 1;
      int numCell1DA3#2 = ISub(_t1D9F,_t1DA1);
      int _t1DA5#2 = 16;
      int _t1DA7#1 = IMul(_t1DA5,numCell1DA3);
      int[] _t1DA9#1 = Range(newtonInt1D9B,_t1DA7);
    FOREACH1DAC:  preds = [ASSIGN1DAA,NEXT24E9]
      foreach (itter1DAB in _t1DA9) on exit goto ASSIGN24EC
        int cellInt1DAE#5 = phi(cellInt1D9D,cellInt24E6)
        int newtonInt24D8#1 = phi(newtonInt1D9B,newtonInt24E7)
        tensor[3] xn237C#4 = phi(xn1D99,xn2440)
      int ilit1DAF#1 = 4;
      int mulRes1DB0#4 = IMul(cellInt1DAE,ilit1DAF);
      int idx1DB3#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,mulRes1DB0);
      int addRes1DB5#1 = IAdd(mulRes1DB0,_t1DA1);
      int idx1DB6#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB5);
      int ilit1DB7#5 = 2;
      int addRes1DB8#1 = IAdd(mulRes1DB0,ilit1DB7);
      int idx1DB9#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DB8);
      int ilit1DBA#5 = 3;
      int addRes1DBB#1 = IAdd(mulRes1DB0,ilit1DBA);
      int idx1DBC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1D94,addRes1DBB);
      int mulRes1DD2#3 = IMul(ilit1DBA,idx1DB3);
      int addRes1DD5#1 = IAdd(_t1DA1,mulRes1DD2);
      int addRes1DD7#1 = IAdd(ilit1DB7,mulRes1DD2);
      real dof_load1DD8#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DD2);
      real dof_load1DD9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD5);
      real dof_load1DDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DD7);
      int mulRes1DDD#3 = IMul(ilit1DBA,idx1DB6);
      int addRes1DDF#1 = IAdd(_t1DA1,mulRes1DDD);
      int addRes1DE0#1 = IAdd(ilit1DB7,mulRes1DDD);
      real dof_load1DE1#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DDD);
      real dof_load1DE2#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DDF);
      real dof_load1DE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE0);
      int mulRes1DE6#3 = IMul(ilit1DBA,idx1DB9);
      int addRes1DE8#1 = IAdd(_t1DA1,mulRes1DE6);
      int addRes1DE9#1 = IAdd(ilit1DB7,mulRes1DE6);
      real dof_load1DEA#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DE6);
      real dof_load1DEB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE8);
      real dof_load1DEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DE9);
      int mulRes1DEF#3 = IMul(ilit1DBA,idx1DBC);
      int addRes1DF1#1 = IAdd(_t1DA1,mulRes1DEF);
      int addRes1DF2#1 = IAdd(ilit1DB7,mulRes1DEF);
      real dof_load1DF3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,mulRes1DEF);
      real dof_load1DF4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF1);
      real dof_load1DF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1D94,addRes1DF2);
      real coeff1E26#22 = -0.1e1;
      real one1E27#33 = 0.1e1;
      real prod1E28#2 = RMul(one1E27,one1E27);
      real prod1E29#2 = RMul(one1E27,prod1E28);
      real basisEval1E2A#3 = RMul(coeff1E26,prod1E29);
      real basisEval1E2B#10 = RMul(one1E27,prod1E29);
      real basisEval1E2C#45 = 0.e0;
      real r1E43#2 = RMul(dof_load1DD8,basisEval1E2A);
      real r1E46#1 = RMul(dof_load1DE1,basisEval1E2B);
      real r1E49#2 = RMul(dof_load1DEA,basisEval1E2C);
      real r1E4C#2 = RMul(dof_load1DF3,basisEval1E2C);
      real r1E4D#1 = RAdd(r1E43,r1E46);
      real r1E4E#1 = RAdd(r1E4D,r1E49);
      real r1E4F#13 = RAdd(r1E4E,r1E4C);
      real r1E53#1 = RMul(dof_load1DE1,basisEval1E2C);
      real r1E55#1 = RMul(dof_load1DEA,basisEval1E2B);
      real r1E58#2 = RAdd(r1E43,r1E53);
      real r1E59#1 = RAdd(r1E58,r1E55);
      real r1E5A#13 = RAdd(r1E59,r1E4C);
      real r1E62#1 = RMul(dof_load1DF3,basisEval1E2B);
      real r1E64#1 = RAdd(r1E58,r1E49);
      real r1E65#12 = RAdd(r1E64,r1E62);
      real r1E68#2 = RMul(dof_load1DD9,basisEval1E2A);
      real r1E6A#1 = RMul(dof_load1DE2,basisEval1E2B);
      real r1E6C#2 = RMul(dof_load1DEB,basisEval1E2C);
      real r1E6E#2 = RMul(dof_load1DF4,basisEval1E2C);
      real r1E6F#1 = RAdd(r1E68,r1E6A);
      real r1E70#1 = RAdd(r1E6F,r1E6C);
      real r1E71#13 = RAdd(r1E70,r1E6E);
      real r1E73#1 = RMul(dof_load1DE2,basisEval1E2C);
      real r1E74#1 = RMul(dof_load1DEB,basisEval1E2B);
      real r1E76#2 = RAdd(r1E68,r1E73);
      real r1E77#1 = RAdd(r1E76,r1E74);
      real r1E78#13 = RAdd(r1E77,r1E6E);
      real r1E7C#1 = RMul(dof_load1DF4,basisEval1E2B);
      real r1E7E#1 = RAdd(r1E76,r1E6C);
      real r1E7F#12 = RAdd(r1E7E,r1E7C);
      real r1E82#2 = RMul(dof_load1DDA,basisEval1E2A);
      real r1E84#1 = RMul(dof_load1DE3,basisEval1E2B);
      real r1E86#2 = RMul(dof_load1DEC,basisEval1E2C);
      real r1E88#2 = RMul(dof_load1DF5,basisEval1E2C);
      real r1E89#1 = RAdd(r1E82,r1E84);
      real r1E8A#1 = RAdd(r1E89,r1E86);
      real r1E8B#13 = RAdd(r1E8A,r1E88);
      real r1E8D#1 = RMul(dof_load1DE3,basisEval1E2C);
      real r1E8E#1 = RMul(dof_load1DEC,basisEval1E2B);
      real r1E90#2 = RAdd(r1E82,r1E8D);
      real r1E91#1 = RAdd(r1E90,r1E8E);
      real r1E92#13 = RAdd(r1E91,r1E88);
      real r1E96#1 = RMul(dof_load1DF5,basisEval1E2B);
      real r1E98#1 = RAdd(r1E90,r1E86);
      real r1E99#12 = RAdd(r1E98,r1E96);
      real r1EFA#3 = RMul(basisEval1E2C,r1E4F);
      real r1EFC#3 = RMul(basisEval1E2C,r1E71);
      real r1EFE#5 = RMul(basisEval1E2C,r1E8B);
      real r1EFF#3 = RAdd(r1EFA,r1EFC);
      real r1F00#9 = RAdd(r1EFF,r1EFE);
      real r1F02#3 = RMul(basisEval1E2C,r1E5A);
      real r1F04#3 = RMul(basisEval1E2C,r1E78);
      real r1F06#5 = RMul(basisEval1E2C,r1E92);
      real r1F07#3 = RAdd(r1F02,r1F04);
      real r1F08#9 = RAdd(r1F07,r1F06);
      real r1F0A#3 = RMul(basisEval1E2C,r1E65);
      real r1F0C#3 = RMul(basisEval1E2C,r1E7F);
      real r1F0E#5 = RMul(basisEval1E2C,r1E99);
      real r1F0F#3 = RAdd(r1F0A,r1F0C);
      real r1F10#12 = RAdd(r1F0F,r1F0E);
      real r1F13#1 = RMul(coeff1E26,r1E8B);
      real r1F14#3 = RAdd(r1EFF,r1F13);
      real r1F15#1 = RMul(coeff1E26,r1E92);
      real r1F16#3 = RAdd(r1F07,r1F15);
      real r1F17#1 = RMul(coeff1E26,r1E99);
      real r1F18#4 = RAdd(r1F0F,r1F17);
      real r1F1B#1 = RMul(one1E27,r1E71);
      real r1F1C#1 = RAdd(r1EFA,r1F1B);
      real r1F1D#3 = RAdd(r1F1C,r1EFE);
      real r1F1E#1 = RMul(one1E27,r1E78);
      real r1F1F#1 = RAdd(r1F02,r1F1E);
      real r1F20#3 = RAdd(r1F1F,r1F06);
      real r1F21#1 = RMul(one1E27,r1E7F);
      real r1F22#1 = RAdd(r1F0A,r1F21);
      real r1F23#4 = RAdd(r1F22,r1F0E);
      real r1F26#1 = RMul(one1E27,r1E8B);
      real r1F27#3 = RAdd(r1EFF,r1F26);
      real r1F28#1 = RMul(one1E27,r1E92);
      real r1F29#3 = RAdd(r1F07,r1F28);
      real r1F2A#1 = RMul(one1E27,r1E99);
      real r1F2B#4 = RAdd(r1F0F,r1F2A);
      real r1F2D#1 = RMul(coeff1E26,r1E4F);
      real r1F2E#1 = RAdd(r1F2D,r1EFC);
      real r1F2F#3 = RAdd(r1F2E,r1EFE);
      real r1F30#1 = RMul(coeff1E26,r1E5A);
      real r1F31#1 = RAdd(r1F30,r1F04);
      real r1F32#3 = RAdd(r1F31,r1F06);
      real r1F33#1 = RMul(coeff1E26,r1E65);
      real r1F34#1 = RAdd(r1F33,r1F0C);
      real r1F35#4 = RAdd(r1F34,r1F0E);
      real r1F38#1 = RMul(coeff1E26,r1E71);
      real r1F39#1 = RAdd(r1EFA,r1F38);
      real r1F3A#3 = RAdd(r1F39,r1EFE);
      real r1F3B#1 = RMul(coeff1E26,r1E78);
      real r1F3C#1 = RAdd(r1F02,r1F3B);
      real r1F3D#3 = RAdd(r1F3C,r1F06);
      real r1F3E#1 = RMul(coeff1E26,r1E7F);
      real r1F3F#1 = RAdd(r1F0A,r1F3E);
      real r1F40#4 = RAdd(r1F3F,r1F0E);
      real r1F42#1 = RMul(one1E27,r1E4F);
      real r1F43#1 = RAdd(r1F42,r1EFC);
      real r1F44#3 = RAdd(r1F43,r1EFE);
      real r1F45#1 = RMul(one1E27,r1E5A);
      real r1F46#1 = RAdd(r1F45,r1F04);
      real r1F47#3 = RAdd(r1F46,r1F06);
      real r1F48#1 = RMul(one1E27,r1E65);
      real r1F49#1 = RAdd(r1F48,r1F0C);
      real r1F4A#4 = RAdd(r1F49,r1F0E);
      real r1FA7#1 = RMul(r1E4F,r1F00);
      real r1FAA#1 = RMul(r1E71,r1F27);
      real r1FAD#1 = RMul(r1E8B,r1F3A);
      real r1FAE#1 = RAdd(r1FA7,r1FAA);
      real r1FAF#1 = RAdd(r1FAE,r1FAD);
      real r1FB1#1 = RMul(r1E4F,r1F08);
      real r1FB3#1 = RMul(r1E71,r1F29);
      real r1FB5#1 = RMul(r1E8B,r1F3D);
      real r1FB6#1 = RAdd(r1FB1,r1FB3);
      real r1FB7#2 = RAdd(r1FB6,r1FB5);
      real r1FB9#1 = RMul(r1E4F,r1F10);
      real r1FBB#1 = RMul(r1E71,r1F2B);
      real r1FBD#1 = RMul(r1E8B,r1F40);
      real r1FBE#1 = RAdd(r1FB9,r1FBB);
      real r1FBF#2 = RAdd(r1FBE,r1FBD);
      real r1FC2#1 = RMul(r1E4F,r1F14);
      real r1FC4#1 = RMul(r1E71,r1F00);
      real r1FC6#1 = RMul(r1E8B,r1F44);
      real r1FC7#1 = RAdd(r1FC2,r1FC4);
      real r1FC8#1 = RAdd(r1FC7,r1FC6);
      real r1FCA#1 = RMul(r1E4F,r1F16);
      real r1FCC#1 = RMul(r1E71,r1F08);
      real r1FCE#1 = RMul(r1E8B,r1F47);
      real r1FCF#1 = RAdd(r1FCA,r1FCC);
      real r1FD0#2 = RAdd(r1FCF,r1FCE);
      real r1FD2#1 = RMul(r1E4F,r1F18);
      real r1FD4#1 = RMul(r1E71,r1F10);
      real r1FD6#1 = RMul(r1E8B,r1F4A);
      real r1FD7#1 = RAdd(r1FD2,r1FD4);
      real r1FD8#2 = RAdd(r1FD7,r1FD6);
      real r1FDB#1 = RMul(r1E4F,r1F1D);
      real r1FDD#1 = RMul(r1E71,r1F2F);
      real r1FDF#1 = RMul(r1E8B,r1F00);
      real r1FE0#1 = RAdd(r1FDB,r1FDD);
      real r1FE1#1 = RAdd(r1FE0,r1FDF);
      real r1FE3#1 = RMul(r1E4F,r1F20);
      real r1FE5#1 = RMul(r1E71,r1F32);
      real r1FE7#1 = RMul(r1E8B,r1F08);
      real r1FE8#1 = RAdd(r1FE3,r1FE5);
      real r1FE9#2 = RAdd(r1FE8,r1FE7);
      real r1FEB#1 = RMul(r1E4F,r1F23);
      real r1FED#1 = RMul(r1E71,r1F35);
      real r1FEF#1 = RMul(r1E8B,r1F10);
      real r1FF0#1 = RAdd(r1FEB,r1FED);
      real r1FF1#2 = RAdd(r1FF0,r1FEF);
      real r1FF5#1 = RMul(r1E5A,r1F00);
      real r1FF7#1 = RMul(r1E78,r1F27);
      real r1FF9#1 = RMul(r1E92,r1F3A);
      real r1FFA#1 = RAdd(r1FF5,r1FF7);
      real r1FFB#2 = RAdd(r1FFA,r1FF9);
      real r1FFC#1 = RMul(r1E5A,r1F08);
      real r1FFD#1 = RMul(r1E78,r1F29);
      real r1FFE#1 = RMul(r1E92,r1F3D);
      real r1FFF#1 = RAdd(r1FFC,r1FFD);
      real r2000#1 = RAdd(r1FFF,r1FFE);
      real r2001#1 = RMul(r1E5A,r1F10);
      real r2002#1 = RMul(r1E78,r1F2B);
      real r2003#1 = RMul(r1E92,r1F40);
      real r2004#1 = RAdd(r2001,r2002);
      real r2005#2 = RAdd(r2004,r2003);
      real r2007#1 = RMul(r1E5A,r1F14);
      real r2008#1 = RMul(r1E78,r1F00);
      real r2009#1 = RMul(r1E92,r1F44);
      real r200A#1 = RAdd(r2007,r2008);
      real r200B#2 = RAdd(r200A,r2009);
      real r200C#1 = RMul(r1E5A,r1F16);
      real r200D#1 = RMul(r1E78,r1F08);
      real r200E#1 = RMul(r1E92,r1F47);
      real r200F#1 = RAdd(r200C,r200D);
      real r2010#1 = RAdd(r200F,r200E);
      real r2011#1 = RMul(r1E5A,r1F18);
      real r2012#1 = RMul(r1E78,r1F10);
      real r2013#1 = RMul(r1E92,r1F4A);
      real r2014#1 = RAdd(r2011,r2012);
      real r2015#2 = RAdd(r2014,r2013);
      real r2017#1 = RMul(r1E5A,r1F1D);
      real r2018#1 = RMul(r1E78,r1F2F);
      real r2019#1 = RMul(r1E92,r1F00);
      real r201A#1 = RAdd(r2017,r2018);
      real r201B#2 = RAdd(r201A,r2019);
      real r201C#1 = RMul(r1E5A,r1F20);
      real r201D#1 = RMul(r1E78,r1F32);
      real r201E#1 = RMul(r1E92,r1F08);
      real r201F#1 = RAdd(r201C,r201D);
      real r2020#1 = RAdd(r201F,r201E);
      real r2021#1 = RMul(r1E5A,r1F23);
      real r2022#1 = RMul(r1E78,r1F35);
      real r2023#1 = RMul(r1E92,r1F10);
      real r2024#1 = RAdd(r2021,r2022);
      real r2025#2 = RAdd(r2024,r2023);
      real r2029#1 = RMul(r1E65,r1F00);
      real r202B#1 = RMul(r1E7F,r1F27);
      real r202D#1 = RMul(r1E99,r1F3A);
      real r202E#1 = RAdd(r2029,r202B);
      real r202F#2 = RAdd(r202E,r202D);
      real r2030#1 = RMul(r1E65,r1F08);
      real r2031#1 = RMul(r1E7F,r1F29);
      real r2032#1 = RMul(r1E99,r1F3D);
      real r2033#1 = RAdd(r2030,r2031);
      real r2034#2 = RAdd(r2033,r2032);
      real r2035#1 = RMul(r1E65,r1F10);
      real r2036#1 = RMul(r1E7F,r1F2B);
      real r2037#1 = RMul(r1E99,r1F40);
      real r2038#1 = RAdd(r2035,r2036);
      real r2039#1 = RAdd(r2038,r2037);
      real r203B#1 = RMul(r1E65,r1F14);
      real r203C#1 = RMul(r1E7F,r1F00);
      real r203D#1 = RMul(r1E99,r1F44);
      real r203E#1 = RAdd(r203B,r203C);
      real r203F#2 = RAdd(r203E,r203D);
      real r2040#1 = RMul(r1E65,r1F16);
      real r2041#1 = RMul(r1E7F,r1F08);
      real r2042#1 = RMul(r1E99,r1F47);
      real r2043#1 = RAdd(r2040,r2041);
      real r2044#2 = RAdd(r2043,r2042);
      real r2045#1 = RMul(r1E65,r1F18);
      real r2046#1 = RMul(r1E7F,r1F10);
      real r2047#1 = RMul(r1E99,r1F4A);
      real r2048#1 = RAdd(r2045,r2046);
      real r2049#1 = RAdd(r2048,r2047);
      real r204B#1 = RMul(r1E65,r1F1D);
      real r204C#1 = RMul(r1E7F,r1F2F);
      real r204D#1 = RMul(r1E99,r1F00);
      real r204E#1 = RAdd(r204B,r204C);
      real r204F#2 = RAdd(r204E,r204D);
      real r2050#1 = RMul(r1E65,r1F20);
      real r2051#1 = RMul(r1E7F,r1F32);
      real r2052#1 = RMul(r1E99,r1F08);
      real r2053#1 = RAdd(r2050,r2051);
      real r2054#2 = RAdd(r2053,r2052);
      real r2055#1 = RMul(r1E65,r1F23);
      real r2056#1 = RMul(r1E7F,r1F35);
      real r2057#1 = RMul(r1E99,r1F10);
      real r2058#1 = RAdd(r2055,r2056);
      real r2059#1 = RAdd(r2058,r2057);
      tensor[3] probe_l_142115#1 = <tensor[3]>[r1E4F,r1E71,r1E8B];
      tensor[3] probe_l_152162#3 = <tensor[3]>[r1E5A,r1E78,r1E92];
      tensor[3] tensor220D#1 = <tensor[3]>[r1F10,r1F2B,r1F40];
      tensor[3] tensor2213#1 = <tensor[3]>[r1F18,r1F10,r1F4A];
      tensor[3] tensor221A#1 = <tensor[3]>[r1F23,r1F35,r1F10];
      real vdot223D#1 = VDot<3>(probe_l_152162,tensor220D);
      real vdot223F#1 = VDot<3>(probe_l_152162,tensor2213);
      real vdot2241#1 = VDot<3>(probe_l_152162,tensor221A);
      tensor[3] op1_e3_l_18223B#1 = <tensor[3]>[vdot223D,vdot223F,vdot2241];
      real op1_e3_l_19224A#1 = VDot<3>(probe_l_142115,op1_e3_l_18223B);
      real r2250#2 = RMul(basisEval1E2C,r1FAF);
      real r2252#1 = RMul(basisEval1E2C,r1FB7);
      real r2254#2 = RMul(basisEval1E2C,r1FBF);
      real r2256#2 = RMul(basisEval1E2C,r1FFB);
      real r2258#3 = RMul(basisEval1E2C,r2000);
      real r225B#1 = RMul(one1E27,r2005);
      real r225D#2 = RMul(basisEval1E2C,r202F);
      real r2260#1 = RMul(coeff1E26,r2034);
      real r2262#3 = RMul(basisEval1E2C,r2039);
      real r2263#2 = RAdd(r2250,r2252);
      real r2264#1 = RAdd(r2263,r2254);
      real r2265#1 = RAdd(r2264,r2256);
      real r2266#1 = RAdd(r2265,r2258);
      real r2267#1 = RAdd(r2266,r225B);
      real r2268#1 = RAdd(r2267,r225D);
      real r2269#1 = RAdd(r2268,r2260);
      real r226A#1 = RAdd(r2269,r2262);
      real r226C#2 = RMul(basisEval1E2C,r1FC8);
      real r226E#1 = RMul(basisEval1E2C,r1FD0);
      real r2270#2 = RMul(basisEval1E2C,r1FD8);
      real r2272#2 = RMul(basisEval1E2C,r200B);
      real r2274#3 = RMul(basisEval1E2C,r2010);
      real r2276#1 = RMul(one1E27,r2015);
      real r2278#2 = RMul(basisEval1E2C,r203F);
      real r227A#1 = RMul(coeff1E26,r2044);
      real r227C#3 = RMul(basisEval1E2C,r2049);
      real r227D#2 = RAdd(r226C,r226E);
      real r227E#1 = RAdd(r227D,r2270);
      real r227F#1 = RAdd(r227E,r2272);
      real r2280#1 = RAdd(r227F,r2274);
      real r2281#1 = RAdd(r2280,r2276);
      real r2282#1 = RAdd(r2281,r2278);
      real r2283#1 = RAdd(r2282,r227A);
      real r2284#1 = RAdd(r2283,r227C);
      real r2286#2 = RMul(basisEval1E2C,r1FE1);
      real r2288#1 = RMul(basisEval1E2C,r1FE9);
      real r228A#2 = RMul(basisEval1E2C,r1FF1);
      real r228C#2 = RMul(basisEval1E2C,r201B);
      real r228E#3 = RMul(basisEval1E2C,r2020);
      real r2290#1 = RMul(one1E27,r2025);
      real r2292#2 = RMul(basisEval1E2C,r204F);
      real r2294#1 = RMul(coeff1E26,r2054);
      real r2296#3 = RMul(basisEval1E2C,r2059);
      real r2297#2 = RAdd(r2286,r2288);
      real r2298#1 = RAdd(r2297,r228A);
      real r2299#1 = RAdd(r2298,r228C);
      real r229A#1 = RAdd(r2299,r228E);
      real r229B#1 = RAdd(r229A,r2290);
      real r229C#1 = RAdd(r229B,r2292);
      real r229D#1 = RAdd(r229C,r2294);
      real r229E#1 = RAdd(r229D,r2296);
      real r22A0#1 = RMul(coeff1E26,r1FBF);
      real r22A1#2 = RMul(basisEval1E2C,r2005);
      real r22A2#1 = RMul(one1E27,r202F);
      real r22A3#2 = RMul(basisEval1E2C,r2034);
      real r22A4#1 = RAdd(r2263,r22A0);
      real r22A5#1 = RAdd(r22A4,r2256);
      real r22A6#1 = RAdd(r22A5,r2258);
      real r22A7#1 = RAdd(r22A6,r22A1);
      real r22A8#1 = RAdd(r22A7,r22A2);
      real r22A9#1 = RAdd(r22A8,r22A3);
      real r22AA#1 = RAdd(r22A9,r2262);
      real r22AB#1 = RMul(coeff1E26,r1FD8);
      real r22AC#2 = RMul(basisEval1E2C,r2015);
      real r22AD#1 = RMul(one1E27,r203F);
      real r22AE#2 = RMul(basisEval1E2C,r2044);
      real r22AF#1 = RAdd(r227D,r22AB);
      real r22B0#1 = RAdd(r22AF,r2272);
      real r22B1#1 = RAdd(r22B0,r2274);
      real r22B2#1 = RAdd(r22B1,r22AC);
      real r22B3#1 = RAdd(r22B2,r22AD);
      real r22B4#1 = RAdd(r22B3,r22AE);
      real r22B5#1 = RAdd(r22B4,r227C);
      real r22B6#1 = RMul(coeff1E26,r1FF1);
      real r22B7#2 = RMul(basisEval1E2C,r2025);
      real r22B8#1 = RMul(one1E27,r204F);
      real r22B9#2 = RMul(basisEval1E2C,r2054);
      real r22BA#1 = RAdd(r2297,r22B6);
      real r22BB#1 = RAdd(r22BA,r228C);
      real r22BC#1 = RAdd(r22BB,r228E);
      real r22BD#1 = RAdd(r22BC,r22B7);
      real r22BE#1 = RAdd(r22BD,r22B8);
      real r22BF#1 = RAdd(r22BE,r22B9);
      real r22C0#1 = RAdd(r22BF,r2296);
      real r22C2#1 = RMul(one1E27,r1FB7);
      real r22C3#1 = RMul(coeff1E26,r1FFB);
      real r22C4#1 = RAdd(r2250,r22C2);
      real r22C5#1 = RAdd(r22C4,r2254);
      real r22C6#1 = RAdd(r22C5,r22C3);
      real r22C7#1 = RAdd(r22C6,r2258);
      real r22C8#1 = RAdd(r22C7,r22A1);
      real r22C9#1 = RAdd(r22C8,r225D);
      real r22CA#1 = RAdd(r22C9,r22A3);
      real r22CB#1 = RAdd(r22CA,r2262);
      real r22CC#1 = RMul(one1E27,r1FD0);
      real r22CD#1 = RMul(coeff1E26,r200B);
      real r22CE#1 = RAdd(r226C,r22CC);
      real r22CF#1 = RAdd(r22CE,r2270);
      real r22D0#1 = RAdd(r22CF,r22CD);
      real r22D1#1 = RAdd(r22D0,r2274);
      real r22D2#1 = RAdd(r22D1,r22AC);
      real r22D3#1 = RAdd(r22D2,r2278);
      real r22D4#1 = RAdd(r22D3,r22AE);
      real r22D5#1 = RAdd(r22D4,r227C);
      real r22D6#1 = RMul(one1E27,r1FE9);
      real r22D7#1 = RMul(coeff1E26,r201B);
      real r22D8#1 = RAdd(r2286,r22D6);
      real r22D9#1 = RAdd(r22D8,r228A);
      real r22DA#1 = RAdd(r22D9,r22D7);
      real r22DB#1 = RAdd(r22DA,r228E);
      real r22DC#1 = RAdd(r22DB,r22B7);
      real r22DD#1 = RAdd(r22DC,r2292);
      real r22DE#1 = RAdd(r22DD,r22B9);
      real r22DF#1 = RAdd(r22DE,r2296);
      real realLit2377#1 = 0.2e1;
      real op1_e3_l_212376#9 = RMul(realLit2377,op1_e3_l_19224A);
      real varAcc237D#1 = VIndex<3,0>(xn237C);
      real varAcc237E#1 = VIndex<3,1>(xn237C);
      real varAcc237F#1 = VIndex<3,2>(xn237C);
      real prod2384#2 = RMul(varAcc237D,prod1E28);
      real prod2386#1 = RMul(varAcc237E,one1E27);
      real prod2387#2 = RMul(one1E27,prod2386);
      real prod2389#1 = RMul(one1E27,varAcc237F);
      real prod238A#2 = RMul(one1E27,prod2389);
      real mult238D#1 = RMul(coeff1E26,prod238A);
      real mult238E#1 = RMul(coeff1E26,prod2387);
      real mult238F#1 = RMul(coeff1E26,prod2384);
      real sum2390#1 = RAdd(mult238E,mult238F);
      real sum2391#1 = RAdd(mult238D,sum2390);
      real sum2392#3 = RAdd(basisEval1E2B,sum2391);
      real basisEval2394#3 = RMul(one1E27,prod2384);
      real basisEval2395#3 = RMul(one1E27,prod2387);
      real basisEval2396#3 = RMul(one1E27,prod238A);
      real r23B7#1 = RMul(dof_load1DD8,sum2392);
      real r23BA#1 = RMul(dof_load1DE1,basisEval2394);
      real r23BD#1 = RMul(dof_load1DEA,basisEval2395);
      real r23C0#1 = RMul(dof_load1DF3,basisEval2396);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C5#1 = RMul(dof_load1DD9,sum2392);
      real r23C7#1 = RMul(dof_load1DE2,basisEval2394);
      real r23C9#1 = RMul(dof_load1DEB,basisEval2395);
      real r23CB#1 = RMul(dof_load1DF4,basisEval2396);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23D0#1 = RMul(dof_load1DDA,sum2392);
      real r23D2#1 = RMul(dof_load1DE3,basisEval2394);
      real r23D4#1 = RMul(dof_load1DEC,basisEval2395);
      real r23D6#1 = RMul(dof_load1DF5,basisEval2396);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_2223B4#1 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2403#1 = RDiv(r226A,op1_e3_l_212376);
      real r2405#1 = RDiv(r2284,op1_e3_l_212376);
      real r2407#1 = RDiv(r229E,op1_e3_l_212376);
      tensor[3] tensor2408#1 = <tensor[3]>[r2403,r2405,r2407];
      real r240A#1 = RDiv(r22AA,op1_e3_l_212376);
      real r240C#1 = RDiv(r22B5,op1_e3_l_212376);
      real r240E#1 = RDiv(r22C0,op1_e3_l_212376);
      tensor[3] tensor240F#1 = <tensor[3]>[r240A,r240C,r240E];
      real r2411#1 = RDiv(r22CB,op1_e3_l_212376);
      real r2413#1 = RDiv(r22D5,op1_e3_l_212376);
      real r2415#1 = RDiv(r22DF,op1_e3_l_212376);
      tensor[3] tensor2416#1 = <tensor[3]>[r2411,r2413,r2415];
      tensor[3] op1_e3_l_24242E#3 = VSub<3>(probe_l_2223B4,pos1D95);
      real vdot2433#1 = VDot<3>(tensor2408,op1_e3_l_24242E);
      real vdot2435#1 = VDot<3>(tensor240F,op1_e3_l_24242E);
      real vdot2437#1 = VDot<3>(tensor2416,op1_e3_l_24242E);
      tensor[3] op1_e3_l_252431#3 = <tensor[3]>[vdot2433,vdot2435,vdot2437];
      tensor[3] xn2440#4 = VSub<3>(xn237C,op1_e3_l_252431);
      real _t2443#1 = 0.1e-7;
      real op1_e3_l_4124A4#1 = VDot<3>(op1_e3_l_252431,op1_e3_l_252431);
      real _t24A7#1 = Sqrt(op1_e3_l_4124A4);
      bool _t24AA#1 = GTE<real>(_t2443,_t24A7);
      if _t24AA then goto ASSIGN313A else goto JOIN24D6
    ASSIGN313A:  preds = [COND24AC]
      tensor[3] _t24AF#1 = <tensor[3]>[one1E27,one1E27,one1E27];
      real _t24B1#1 = VDot<3>(_t24AF,xn2440);
      bool _t24B4#1 = GT<real>(one1E27,_t24B1);
      real _t24B6#3 = 0.1e-8;
      tensor[3] _t24B8#1 = <tensor[3]>[_t24B6,_t24B6,_t24B6];
      tensor[3] _t24BA#3 = VAdd<3>(_t24B8,xn2440);
      real _t24BD#1 = VIndex<3,0>(_t24BA);
      real _t24BF#3 = -0.e0;
      bool _t24C1#1 = GT<real>(_t24BD,_t24BF);
      real _t24C3#1 = VIndex<3,1>(_t24BA);
      bool _t24C5#1 = GT<real>(_t24C3,_t24BF);
      real _t24C7#1 = VIndex<3,2>(_t24BA);
      bool _t24C9#1 = GT<real>(_t24C7,_t24BF);
      bool _t24CB#1 = BAnd(_t24C5,_t24C9);
      bool _t24CD#1 = BAnd(_t24C1,_t24CB);
      bool _t24CF#1 = BAnd(_t24B4,_t24CD);
      if _t24CF then goto ASSIGN24D3 else goto JOIN24D5
    ASSIGN24D3:  preds = [COND24D1]
      femData:MeshPos _t24D2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1D94,cellInt1DAE,xn2440,pos1D95);
      return _t24D2
      goto JOIN24D5
    JOIN24D5:  preds = [*RETURN(_t24D2)24D4,COND24D1]
      goto JOIN24D6
    JOIN24D6:  preds = [JOIN24D5,COND24AC]
      int newtonInt24D7#2 = IAdd(newtonInt24D8,_t1DA1);
      bool _t24DA#1 = GTE<int>(newtonInt24D7,_t1DA5);
      if _t24DA then goto ASSIGN24DE else goto JOIN24E8
    ASSIGN24DE:  preds = [COND24DC]
      bool _t24DD#1 = GTE<int>(cellInt1DAE,numCell1DA3);
      if _t24DD then goto ASSIGN24E1 else goto ASSIGN24EA
    ASSIGN24E1:  preds = [COND24DF]
      femData:MeshPos _t24E0#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24E0
      goto JOIN24E5
    JOIN24E5:  preds = [*RETURN(_t24E0)24E2,ASSIGN24EA]
      int cellInt24E3#1 = phi(cellInt24E4)
      goto JOIN24E8
    JOIN24E8:  preds = [JOIN24E5,COND24DC]
      int cellInt24E6#1 = phi(cellInt24E3,cellInt1DAE)
      int newtonInt24E7#1 = phi(newtonInt1D9B,newtonInt24D7)
      goto FOREACH1DAC
    ASSIGN24EA:  preds = [COND24DF]
      int cellInt24E4#1 = IAdd(cellInt1DAE,_t1DA1);
      goto JOIN24E5
    ASSIGN24EC:  preds = [FOREACH1DAC]
      femData:MeshPos _t24EB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1D94);
      return _t24EB
}
## input initialization
  ENTRY1AD7:  preds = []
    real isoval1AD8#1 = 0.2e0;
    globals.isoval1AB8 = isoval1AD8;
    real thick1ADB#1 = 0.7e-1;
    globals.thick1AB9 = thick1ADB;
    real _t1ADE#2 = -0.3e1;
    real _t1AE0#1 = 0.3e1;
    tensor[3] camEye1AE2#1 = <tensor[3]>[_t1ADE,_t1ADE,_t1AE0];
    globals.camEye1ABA = camEye1AE2;
    real _t1AE5#3 = 0.5e0;
    tensor[3] camAt1AE7#1 = <tensor[3]>[_t1AE5,_t1AE5,_t1AE5];
    globals.camAt1ABB = camAt1AE7;
    real _t1AEA#2 = 0.e0;
    real _t1AEC#2 = 0.1e1;
    tensor[3] camUp1AEE#2 = <tensor[3]>[_t1AEA,_t1AEA,_t1AEC];
    globals.camUp1ABC = camUp1AEE;
    real camFOV1AF1#1 = 0.137e2;
    globals.camFOV1ABD = camFOV1AF1;
    int iresU1AF4#2 = 500;
    globals.iresU1ABE = iresU1AF4;
    globals.iresV1ABF = iresU1AF4;
    real camNear1AF8#1 = -0.2e1;
    globals.camNear1AC0 = camNear1AF8;
    real camFar1AFB#1 = 0.5e1;
    globals.camFar1AC1 = camFar1AFB;
    globals.refStep1AC2 = _t1AEC;
    real rayStep1AFF#1 = 0.1e-1;
    globals.rayStep1AC3 = rayStep1AFF;
    globals.lightVsp1AC4 = camUp1AEE;
    real phongKa1B03#1 = 0.1e0;
    globals.phongKa1AC5 = phongKa1B03;
    real phongKd1B06#1 = 0.9e0;
    globals.phongKd1AC6 = phongKd1B06;
    bool debug1B09#1 = false;
    globals.debug1AC7 = debug1B09;
    int su1B0C#2 = 250;
    globals.su1AC8 = su1B0C;
    globals.sv1AC9 = su1B0C;
    return
## global-variable initialization
  ENTRY1B11:  preds = []
    femData:Mesh a1B12#3 = globals.a1AB5;
    femData:Space 0b042F_intermedateGlobal1B14#1 = globals.0b042F_intermedateGlobal1AB6;
    femData:FemFunc 0c0431_intermedateGlobal1B16#1 = globals.0c0431_intermedateGlobal1AB7;
    tensor[3] camEye1B18#1 = globals.camEye1ABA;
    tensor[3] camAt1B1A#1 = globals.camAt1ABB;
    tensor[3] camUp1B1C#3 = globals.camUp1ABC;
    real camFOV1B1E#1 = globals.camFOV1ABD;
    int iresU1B20#1 = globals.iresU1ABE;
    int iresV1B22#1 = globals.iresV1ABF;
    tensor[3] lightVsp1B24#5 = globals.lightVsp1AC4;
    int _t1B26#1 = 0;
    int _t1B28#1 = 1;
    int _t1B2A#1 = ExtractFemItem<int,NumCell(Mesh)>(a1B12);
    int _t1B2C#1 = ISub(_t1B2A,_t1B28);
    int[] _t1B2E#1 = Range(_t1B26,_t1B2C);
    femData:MeshCell[] _t1B30#1 = <femData:MeshCell[]>{};
  FOREACH1B33:  preds = [ASSIGN1B31,NEXT1B39]
    foreach (_t1B32 in _t1B2E) on exit goto ASSIGN1B3B
      femData:MeshCell[] _t1B37#1 = phi(_t1B30,_t1B36)
    femData:MeshCell _t1B34#1 = LoadFem<femData:MeshCell>(a1B12,_t1B32);
    femData:MeshCell[] _t1B36#1 = Append<femData:MeshCell>(_t1B37,_t1B34);
    goto FOREACH1B33
  ASSIGN1B3B:  preds = [FOREACH1B33]
    femData:Space b1B3A#1 = LoadFem<femData:Space>(0b042F_intermedateGlobal1B14,a1B12);
    femData:FemFunc c1B3C#2 = LoadFem<femData:FemFunc>(0c0431_intermedateGlobal1B16,b1B3A);
    femData:Space _t1B3E#2 = ExtractFem<femData:Space,femData:FemFunc>(c1B3C);
    femData:Mesh _t1B40#1 = ExtractFem<femData:Mesh,femData:Space>(_t1B3E);
    image(IMAGE1D<double[3]>) I1B42#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21B48#9 = VSub<3>(camAt1B1A,camEye1B18);
    real op1_e3_l_41B4B#1 = VDot<3>(op1_e3_l_21B48,op1_e3_l_21B48);
    real camDist1B4E#4 = Sqrt(op1_e3_l_41B4B);
    globals.camDist1ACA = camDist1B4E;
    real realLit1B53#9 = 0.1e1;
    real op1_e3_l_91B52#6 = RDiv(realLit1B53,camDist1B4E);
    tensor[3] camN1B57#4 = VScale<3>(op1_e3_l_91B52,op1_e3_l_21B48);
    globals.camN1ACB = camN1B57;
    real realLit1B5C#6 = 0.e0;
    real r1B5D#3 = TensorIndex<tensor[3],[0]>(camUp1B1C);
    real r1B5E#3 = RMul(realLit1B5C,r1B5D);
    real r1B5F#3 = TensorIndex<tensor[3],[1]>(camUp1B1C);
    real r1B60#3 = RMul(realLit1B5C,r1B5F);
    real r1B61#3 = TensorIndex<tensor[3],[2]>(camUp1B1C);
    real r1B62#5 = RMul(realLit1B5C,r1B61);
    real r1B63#3 = RAdd(r1B5E,r1B60);
    real r1B64#3 = RAdd(r1B63,r1B62);
    real r1B66#1 = RMul(realLit1B53,r1B61);
    real r1B67#1 = RAdd(r1B63,r1B66);
    real realLit1B68#6 = -0.1e1;
    real r1B69#1 = RMul(realLit1B68,r1B5F);
    real r1B6A#1 = RAdd(r1B5E,r1B69);
    real r1B6B#1 = RAdd(r1B6A,r1B62);
    tensor[3] tensor1B6C#1 = <tensor[3]>[r1B64,r1B67,r1B6B];
    real r1B6D#1 = RMul(realLit1B68,r1B61);
    real r1B6E#1 = RAdd(r1B63,r1B6D);
    real r1B6F#1 = RMul(realLit1B53,r1B5D);
    real r1B70#1 = RAdd(r1B6F,r1B60);
    real r1B71#1 = RAdd(r1B70,r1B62);
    tensor[3] tensor1B72#1 = <tensor[3]>[r1B6E,r1B64,r1B71];
    real r1B73#1 = RMul(realLit1B53,r1B5F);
    real r1B74#1 = RAdd(r1B5E,r1B73);
    real r1B75#1 = RAdd(r1B74,r1B62);
    real r1B76#1 = RMul(realLit1B68,r1B5D);
    real r1B77#1 = RAdd(r1B76,r1B60);
    real r1B78#1 = RAdd(r1B77,r1B62);
    tensor[3] tensor1B79#1 = <tensor[3]>[r1B75,r1B78,r1B64];
    real vdot1B9C#1 = VDot<3>(op1_e3_l_21B48,tensor1B6C);
    real vdot1B9E#1 = VDot<3>(op1_e3_l_21B48,tensor1B72);
    real vdot1BA0#1 = VDot<3>(op1_e3_l_21B48,tensor1B79);
    tensor[3] op1_e3_l_171B9A#6 = <tensor[3]>[vdot1B9C,vdot1B9E,vdot1BA0];
    real op1_e3_l_341BA9#1 = VDot<3>(op1_e3_l_171B9A,op1_e3_l_171B9A);
    real r1BAD#1 = RMul(op1_e3_l_91B52,op1_e3_l_91B52);
    real op1_e3_l_351BAC#1 = RMul(r1BAD,op1_e3_l_341BA9);
    real op1_e3_l_361BB1#1 = Sqrt(op1_e3_l_351BAC);
    tensor[3] op1_e3_l_371BB4#1 = VScale<3>(op1_e3_l_91B52,op1_e3_l_171B9A);
    real op1_e3_l_381BB7#2 = RDiv(realLit1B53,op1_e3_l_361BB1);
    tensor[3] camU1BBC#4 = VScale<3>(op1_e3_l_381BB7,op1_e3_l_371BB4);
    globals.camU1ACC = camU1BBC;
    real r1BC2#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21B48);
    real r1BC3#3 = RMul(realLit1B5C,r1BC2);
    real r1BC4#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21B48);
    real r1BC5#3 = RMul(realLit1B5C,r1BC4);
    real r1BC6#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21B48);
    real r1BC7#5 = RMul(realLit1B5C,r1BC6);
    real r1BC8#3 = RAdd(r1BC3,r1BC5);
    real r1BC9#3 = RAdd(r1BC8,r1BC7);
    real r1BCB#1 = RMul(realLit1B53,r1BC6);
    real r1BCC#1 = RAdd(r1BC8,r1BCB);
    real r1BCE#1 = RMul(realLit1B68,r1BC4);
    real r1BCF#1 = RAdd(r1BC3,r1BCE);
    real r1BD0#1 = RAdd(r1BCF,r1BC7);
    tensor[3] tensor1BD1#1 = <tensor[3]>[r1BC9,r1BCC,r1BD0];
    real r1BD2#1 = RMul(realLit1B68,r1BC6);
    real r1BD3#1 = RAdd(r1BC8,r1BD2);
    real r1BD4#1 = RMul(realLit1B53,r1BC2);
    real r1BD5#1 = RAdd(r1BD4,r1BC5);
    real r1BD6#1 = RAdd(r1BD5,r1BC7);
    tensor[3] tensor1BD7#1 = <tensor[3]>[r1BD3,r1BC9,r1BD6];
    real r1BD8#1 = RMul(realLit1B53,r1BC4);
    real r1BD9#1 = RAdd(r1BC3,r1BD8);
    real r1BDA#1 = RAdd(r1BD9,r1BC7);
    real r1BDB#1 = RMul(realLit1B68,r1BC2);
    real r1BDC#1 = RAdd(r1BDB,r1BC5);
    real r1BDD#1 = RAdd(r1BDC,r1BC7);
    tensor[3] tensor1BDE#1 = <tensor[3]>[r1BDA,r1BDD,r1BC9];
    real vdot1C01#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD1);
    real vdot1C03#1 = VDot<3>(op1_e3_l_171B9A,tensor1BD7);
    real vdot1C05#1 = VDot<3>(op1_e3_l_171B9A,tensor1BDE);
    tensor[3] op1_e3_l_471BFF#1 = <tensor[3]>[vdot1C01,vdot1C03,vdot1C05];
    tensor[3] op1_e3_l_501C0E#3 = VScale<3>(op1_e3_l_91B52,op1_e3_l_471BFF);
    real r1C12#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501C0E);
    real r1C13#3 = RMul(op1_e3_l_381BB7,op1_e3_l_91B52);
    real r1C14#2 = RMul(r1C13,r1C12);
    real r1C15#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501C0E);
    real r1C16#2 = RMul(r1C13,r1C15);
    real r1C17#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501C0E);
    real r1C18#2 = RMul(r1C13,r1C17);
    tensor[3] camV1C11#1 = <tensor[3]>[r1C14,r1C16,r1C18];
    globals.camV1ACD = camV1C11;
    real _t1C23#1 = 0.314159265358979323846264338327950288e1;
    real _t1C25#1 = 0.36e3;
    real op1_e3_l_51C27#1 = RMul(camFOV1B1E,_t1C23);
    real op1_e3_l_61C2A#1 = RDiv(op1_e3_l_51C27,_t1C25);
    real op1_e3_l_101C2D#2 = Tan(op1_e3_l_61C2A);
    real camVmax1C30#1 = RMul(op1_e3_l_101C2D,camDist1B4E);
    globals.camVmax1ACE = camVmax1C30;
    real _t1C34#1 = IntToReal(iresU1B20);
    real _t1C36#1 = IntToReal(iresV1B22);
    real r1C39#1 = RMul(_t1C34,op1_e3_l_101C2D);
    real op1_e3_l_141C38#1 = RMul(r1C39,camDist1B4E);
    real camUmax1C3D#1 = RDiv(op1_e3_l_141C38,_t1C36);
    globals.camUmax1ACF = camUmax1C3D;
    real op1_e3_l_31C43#1 = VDot<3>(lightVsp1B24,lightVsp1B24);
    real op1_e3_l_41C46#1 = Sqrt(op1_e3_l_31C43);
    real op1_e3_l_51C49#1 = RDiv(realLit1B53,op1_e3_l_41C46);
    real r1C4F#1 = VIndex<3,0>(camU1BBC);
    real r1C50#3 = TensorIndex<tensor[3],[0]>(lightVsp1B24);
    real r1C51#1 = RMul(r1C4F,r1C50);
    real r1C53#3 = TensorIndex<tensor[3],[1]>(lightVsp1B24);
    real r1C54#1 = RMul(r1C14,r1C53);
    real r1C55#1 = VIndex<3,0>(camN1B57);
    real r1C56#3 = TensorIndex<tensor[3],[2]>(lightVsp1B24);
    real r1C57#1 = RMul(r1C55,r1C56);
    real r1C58#1 = RAdd(r1C51,r1C54);
    real r1C59#1 = RAdd(r1C58,r1C57);
    real r1C5A#1 = VIndex<3,1>(camU1BBC);
    real r1C5B#1 = RMul(r1C5A,r1C50);
    real r1C5D#1 = RMul(r1C16,r1C53);
    real r1C5E#1 = VIndex<3,1>(camN1B57);
    real r1C5F#1 = RMul(r1C5E,r1C56);
    real r1C60#1 = RAdd(r1C5B,r1C5D);
    real r1C61#1 = RAdd(r1C60,r1C5F);
    real r1C62#1 = VIndex<3,2>(camU1BBC);
    real r1C63#1 = RMul(r1C62,r1C50);
    real r1C65#1 = RMul(r1C18,r1C53);
    real r1C66#1 = VIndex<3,2>(camN1B57);
    real r1C67#1 = RMul(r1C66,r1C56);
    real r1C68#1 = RAdd(r1C63,r1C65);
    real r1C69#1 = RAdd(r1C68,r1C67);
    tensor[3] op1_e3_l_61C4E#1 = <tensor[3]>[r1C59,r1C61,r1C69];
    tensor[3] light1C87#1 = VScale<3>(op1_e3_l_51C49,op1_e3_l_61C4E);
    globals.light1AD0 = light1C87;
    globals._t1AD1 = _t1B40;
    globals._tX1AD2 = _t1B3E;
    globals.c1AD3 = c1B3C;
    globals.I1AD6 = I1B42;
    return
## strand
  strand raycast (int ui1C92#2, int vi1C93#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1C9E:  preds = []
        int iresU1C9F#1 = globals.iresU1ABE;
        int iresV1CA1#1 = globals.iresV1ABF;
        real camNear1CA3#1 = globals.camNear1AC0;
        real camDist1CA5#1 = globals.camDist1ACA;
        tensor[3] camN1CA7#1 = globals.camN1ACB;
        tensor[3] camU1CA9#1 = globals.camU1ACC;
        tensor[3] camV1CAB#1 = globals.camV1ACD;
        real camVmax1CAD#3 = globals.camVmax1ACE;
        real camUmax1CAF#2 = globals.camUmax1ACF;
        real _t1CB1#4 = -0.5e0;
        real _t1CB3#1 = IntToReal(ui1C92);
        real _t1CB5#1 = IntToReal(iresU1C9F);
        real _t1CB7#2 = 0.5e0;
        real op1_e3_l_61CB9#1 = RSub(_t1CB5,_t1CB7);
        real op1_e3_l_71CBC#1 = RSub(_t1CB3,_t1CB1);
        real op1_e3_l_81CBF#1 = RSub(op1_e3_l_61CB9,_t1CB1);
        real op1_e3_l_91CC2#2 = RNeg(camUmax1CAF);
        real op1_e3_l_101CC5#1 = RDiv(op1_e3_l_71CBC,op1_e3_l_81CBF);
        real op1_e3_l_111CC8#1 = RSub(camUmax1CAF,op1_e3_l_91CC2);
        real op1_e3_l_131CCB#1 = RMul(op1_e3_l_101CC5,op1_e3_l_111CC8);
        real rayU1CCE#2 = RAdd(op1_e3_l_91CC2,op1_e3_l_131CCB);
        real _t1CD1#1 = IntToReal(vi1C93);
        real _t1CD3#1 = IntToReal(iresV1CA1);
        real op1_e3_l_61CD5#1 = RSub(_t1CD3,_t1CB7);
        real op1_e3_l_71CD8#1 = RSub(_t1CD1,_t1CB1);
        real op1_e3_l_81CDB#1 = RSub(op1_e3_l_61CD5,_t1CB1);
        real op1_e3_l_91CDE#1 = RNeg(camVmax1CAD);
        real op1_e3_l_101CE1#1 = RDiv(op1_e3_l_71CD8,op1_e3_l_81CDB);
        real op1_e3_l_111CE4#1 = RSub(op1_e3_l_91CDE,camVmax1CAD);
        real op1_e3_l_121CE7#1 = RMul(op1_e3_l_101CE1,op1_e3_l_111CE4);
        real rayV1CEA#2 = RAdd(camVmax1CAD,op1_e3_l_121CE7);
        tensor[3] op1_e3_l_331CFC#1 = VScale<3>(rayU1CCE,camU1CA9);
        tensor[3] op1_e3_l_341CFF#1 = VScale<3>(rayV1CEA,camV1CAB);
        tensor[3] op1_e3_l_351D02#3 = VAdd<3>(op1_e3_l_331CFC,op1_e3_l_341CFF);
        real realLit1D06#2 = 0.1e1;
        real r1D07#3 = RDiv(realLit1D06,camDist1CA5);
        real r1D08#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351D02);
        real r1D09#1 = RMul(r1D07,r1D08);
        real r1D0A#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351D02);
        real r1D0B#1 = RMul(r1D07,r1D0A);
        real r1D0C#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351D02);
        real r1D0D#1 = RMul(r1D07,r1D0C);
        tensor[3] op1_e3_l_361D05#1 = <tensor[3]>[r1D09,r1D0B,r1D0D];
        tensor[3] rayVec1D18#1 = VAdd<3>(camN1CA7,op1_e3_l_361D05);
        real _t1D1D#8 = 0.e0;
        tensor[3] rgb1D1F#1 = <tensor[3]>[_t1D1D,_t1D1D,_t1D1D];
        tensor[4] rgba1D21#1 = <tensor[4]>[_t1D1D,_t1D1D,_t1D1D,_t1D1D];
        self.rayU = rayU1CCE;
        self.rayV = rayV1CEA;
        self.rayN = camNear1CA3;
        self.rayVec = rayVec1D18;
        self.transp = realLit1D06;
        self.rgb = rgb1D1F;
        self.rgba = rgba1D21;
        self.gray = _t1D1D;
        self.ui = ui1C92;
        self.vi = vi1C93;
        return
    end state init
    method update
        ENTRY1D2E:  preds = []
          image(IMAGE1D<double[3]>) I1D2F#17 = globals.I1AD6;
          real isoval1D31#1 = globals.isoval1AB8;
          femData:Mesh _t1D33#17 = globals._t1AD1;
          femData:Space _t1D35#10 = globals._tX1AD2;
          femData:FemFunc c1D37#10 = globals.c1AD3;
          femData:Mesh a1D3D#1 = globals.a1AB5;
          real thick1D3F#1 = globals.thick1AB9;
          tensor[3] camEye1D41#1 = globals.camEye1ABA;
          real camNear1D43#2 = globals.camNear1AC0;
          real camFar1D45#2 = globals.camFar1AC1;
          real refStep1D47#1 = globals.refStep1AC2;
          real rayStep1D49#2 = globals.rayStep1AC3;
          real phongKa1D4B#1 = globals.phongKa1AC5;
          real phongKd1D4D#1 = globals.phongKd1AC6;
          bool debug1D4F#1 = globals.debug1AC7;
          int su1D51#1 = globals.su1AC8;
          int sv1D53#1 = globals.sv1AC9;
          tensor[3] light1D55#1 = globals.light1AD0;
          real rayN1D57#4 = self.rayN;
          tensor[3] rayVec1D59#3 = self.rayVec;
          real transp1D5B#10 = self.transp;
          tensor[3] rgb1D5D#9 = self.rgb;
          int ui1D5F#1 = self.ui;
          int vi1D61#1 = self.vi;
          if debug1D4F then goto ASSIGN1D65 else goto JOIN1D6F
        ASSIGN1D65:  preds = [COND1D63]
          bool _t1D64#1 = NEQ<int>(ui1D5F,su1D51);
          if _t1D64 then goto ASSIGN1D68 else goto ASSIGN2E4B
        ASSIGN1D68:  preds = [COND1D66]
          bool _t1D67#1 = true;
          goto JOIN1D6B
        JOIN1D6B:  preds = [ASSIGN1D68,ASSIGN2E4B]
          bool _t1D69#1 = phi(_t1D67,_t1D6A)
          if _t1D69 then goto STABILIZE1D6D else goto JOIN1D6E
        STABILIZE1D6D:  preds = [COND1D6C]
          stabilize
          goto JOIN1D6E
        JOIN1D6E:  preds = [*STABILIZE1D6D,COND1D6C]
          goto JOIN1D6F
        JOIN1D6F:  preds = [JOIN1D6E,COND1D63]
          tensor[3] op1_e3_l_31D70#1 = VScale<3>(rayN1D57,rayVec1D59);
          tensor[3] x1D73#5 = VAdd<3>(camEye1D41,op1_e3_l_31D70);
          real _t1D76#61 = 0.e0;
          real _t1D78#2 = VIndex<3,0>(x1D73);
          bool _t1D7A#1 = LTE<real>(_t1D76,_t1D78);
          if _t1D7A then goto ASSIGN1D7E else goto JOIN2E01
        ASSIGN1D7E:  preds = [COND1D7C]
          real _t1D7D#45 = 0.1e1;
          bool _t1D7F#1 = LTE<real>(_t1D78,_t1D7D);
          if _t1D7F then goto ASSIGN1D83 else goto JOIN2DFE
        ASSIGN1D83:  preds = [COND1D81]
          real _t1D82#2 = VIndex<3,1>(x1D73);
          bool _t1D84#1 = LTE<real>(_t1D76,_t1D82);
          if _t1D84 then goto ASSIGN1D88 else goto JOIN2DFB
        ASSIGN1D88:  preds = [COND1D86]
          bool _t1D87#1 = LTE<real>(_t1D82,_t1D7D);
          if _t1D87 then goto ASSIGN1D8B else goto JOIN2DF8
        ASSIGN1D8B:  preds = [COND1D89]
          real _t1D8A#2 = VIndex<3,2>(x1D73);
          bool _t1D8C#1 = LTE<real>(_t1D76,_t1D8A);
          if _t1D8C then goto ASSIGN1D90 else goto JOIN2DF5
        ASSIGN1D90:  preds = [COND1D8E]
          bool _t1D8F#1 = LTE<real>(_t1D8A,_t1D7D);
          if _t1D8F then goto ASSIGN24EE else goto JOIN2DF2
        ASSIGN24EE:  preds = [COND1D91]
          femData:MeshPos p1D92#1 = findPos1D93 (a1D3D,x1D73);
          bool _t24EF#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1D92);
          if _t24EF then goto ASSIGN24F3 else goto JOIN2DEF
        ASSIGN24F3:  preds = [COND24F1]
          real _t24F2#1 = 0.13e1;
          femData:MeshPos callFindPos24F4#2 = findPos1D93 (_t1D33,x1D73);
          int intPos24F6#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos24F4);
          tensor[3] refPos24F8#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos24F4);
          int ilit24FB#1 = 10;
          int mulRes24FC#10 = IMul(intPos24F6,ilit24FB);
          int idx24FF#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,mulRes24FC);
          int ilit2500#22 = 1;
          int addRes2501#1 = IAdd(mulRes24FC,ilit2500);
          int idx2502#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2501);
          int ilit2503#10 = 2;
          int addRes2504#1 = IAdd(mulRes24FC,ilit2503);
          int idx2505#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2504);
          int ilit2506#10 = 3;
          int addRes2507#1 = IAdd(mulRes24FC,ilit2506);
          int idx2508#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2507);
          int ilit2509#2 = 4;
          int addRes250A#1 = IAdd(mulRes24FC,ilit2509);
          int idx250B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250A);
          int ilit250C#1 = 5;
          int addRes250D#1 = IAdd(mulRes24FC,ilit250C);
          int idx250E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes250D);
          int ilit250F#1 = 6;
          int addRes2510#1 = IAdd(mulRes24FC,ilit250F);
          int idx2511#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2510);
          int ilit2512#1 = 7;
          int addRes2513#1 = IAdd(mulRes24FC,ilit2512);
          int idx2514#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2513);
          int ilit2515#1 = 8;
          int addRes2516#1 = IAdd(mulRes24FC,ilit2515);
          int idx2517#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2516);
          int ilit2518#1 = 9;
          int addRes2519#1 = IAdd(mulRes24FC,ilit2518);
          int idx251A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1D35,addRes2519);
          int mulRes2542#1 = IMul(ilit2500,idx24FF);
          int mulRes2544#1 = IMul(ilit2500,idx2502);
          int mulRes2547#1 = IMul(ilit2500,idx2505);
          int mulRes254A#1 = IMul(ilit2500,idx2508);
          int mulRes254D#1 = IMul(ilit2500,idx250B);
          int mulRes2550#1 = IMul(ilit2500,idx250E);
          int mulRes2553#1 = IMul(ilit2500,idx2511);
          int mulRes2556#1 = IMul(ilit2500,idx2514);
          int mulRes2559#1 = IMul(ilit2500,idx2517);
          int mulRes255C#1 = IMul(ilit2500,idx251A);
          real dof255D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2542);
          real dof255E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2544);
          real dof255F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2547);
          real dof2560#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254A);
          real dof2561#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes254D);
          real dof2562#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2550);
          real dof2563#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2553);
          real dof2564#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2556);
          real dof2565#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes2559);
          real dof2566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1D37,mulRes255C);
          tensor[10] dofs2567#4 = <tensor[10]>[dof255D,dof255E,dof255F,dof2560,dof2561,dof2562,dof2563,dof2564,dof2565,dof2566];
          real varAcc2593#5 = VIndex<3,0>(refPos24F8);
          real varAcc2594#4 = VIndex<3,1>(refPos24F8);
          real varAcc2595#4 = VIndex<3,2>(refPos24F8);
          real coeff2596#4 = 0.2e1;
          real prod22598#1 = RMul(varAcc2593,varAcc2593);
          real prod259A#3 = RMul(_t1D7D,_t1D7D);
          real prod259B#2 = RMul(prod22598,prod259A);
          real coeff259C#7 = 0.4e1;
          real prod259E#2 = RMul(varAcc2594,_t1D7D);
          real prod259F#2 = RMul(varAcc2593,prod259E);
          real prod25A1#2 = RMul(_t1D7D,varAcc2595);
          real prod25A2#2 = RMul(varAcc2593,prod25A1);
          real coeff25A3#4 = -0.3e1;
          real prod25A4#5 = RMul(varAcc2593,prod259A);
          real prod225A5#1 = RMul(varAcc2594,varAcc2594);
          real prod25A6#1 = RMul(prod225A5,_t1D7D);
          real prod25A7#2 = RMul(_t1D7D,prod25A6);
          real prod25A8#1 = RMul(varAcc2594,varAcc2595);
          real prod25A9#2 = RMul(_t1D7D,prod25A8);
          real prod25AA#5 = RMul(_t1D7D,prod259E);
          real prod225AB#1 = RMul(varAcc2595,varAcc2595);
          real prod25AC#1 = RMul(_t1D7D,prod225AB);
          real prod25AD#2 = RMul(_t1D7D,prod25AC);
          real prod25AE#5 = RMul(_t1D7D,prod25A1);
          real prod25AF#4 = RMul(_t1D7D,prod259A);
          real mult25B0#10 = RMul(_t1D7D,prod25AF);
          real mult25B1#1 = RMul(coeff25A3,prod25AE);
          real mult25B2#2 = RMul(coeff2596,prod25AD);
          real mult25B3#1 = RMul(coeff25A3,prod25AA);
          real mult25B4#2 = RMul(coeff259C,prod25A9);
          real mult25B5#2 = RMul(coeff2596,prod25A7);
          real mult25B6#1 = RMul(coeff25A3,prod25A4);
          real mult25B7#2 = RMul(coeff259C,prod25A2);
          real mult25B8#2 = RMul(coeff259C,prod259F);
          real mult25B9#2 = RMul(coeff2596,prod259B);
          real sum25BA#1 = RAdd(mult25B8,mult25B9);
          real sum25BB#1 = RAdd(mult25B7,sum25BA);
          real sum25BC#1 = RAdd(mult25B6,sum25BB);
          real sum25BD#1 = RAdd(mult25B5,sum25BC);
          real sum25BE#1 = RAdd(mult25B4,sum25BD);
          real sum25BF#1 = RAdd(mult25B3,sum25BE);
          real sum25C0#1 = RAdd(mult25B2,sum25BF);
          real sum25C1#1 = RAdd(mult25B1,sum25C0);
          real sum25C2#1 = RAdd(mult25B0,sum25C1);
          real coeff25C4#23 = -0.1e1;
          real mult25C5#1 = RMul(coeff25C4,prod25A4);
          real sum25C6#1 = RAdd(mult25C5,mult25B9);
          real mult25C8#1 = RMul(coeff25C4,prod25AA);
          real sum25C9#1 = RAdd(mult25C8,mult25B5);
          real mult25CB#1 = RMul(coeff25C4,prod25AE);
          real sum25CC#1 = RAdd(mult25CB,mult25B2);
          real coeff25CE#9 = -0.4e1;
          real mult25CF#5 = RMul(coeff259C,prod25AE);
          real mult25D0#1 = RMul(coeff25CE,prod25AD);
          real mult25D1#2 = RMul(coeff25CE,prod25A9);
          real mult25D2#2 = RMul(coeff25CE,prod25A2);
          real sum25D3#1 = RAdd(mult25D1,mult25D2);
          real sum25D4#1 = RAdd(mult25D0,sum25D3);
          real sum25D5#1 = RAdd(mult25CF,sum25D4);
          real mult25D7#5 = RMul(coeff259C,prod25AA);
          real mult25D8#1 = RMul(coeff25CE,prod25A7);
          real mult25D9#2 = RMul(coeff25CE,prod259F);
          real sum25DA#1 = RAdd(mult25D8,mult25D9);
          real sum25DB#1 = RAdd(mult25D1,sum25DA);
          real sum25DC#1 = RAdd(mult25D7,sum25DB);
          real mult25DE#5 = RMul(coeff259C,prod25A4);
          real mult25DF#1 = RMul(coeff25CE,prod259B);
          real sum25E0#1 = RAdd(mult25D9,mult25DF);
          real sum25E1#1 = RAdd(mult25D2,sum25E0);
          real sum25E2#1 = RAdd(mult25DE,sum25E1);
          tensor[10] intermediateCons25E4#1 = <tensor[10]>[sum25C2,sum25C6,sum25C9,sum25CC,mult25B4,mult25B7,mult25B8,sum25D5,sum25DC,sum25E2];
          real compositionl2638#2 = VDot<10>(dofs2567,intermediateCons25E4);
          real op1_e3_l_23263B#1 = RSub(compositionl2638,isoval1D31);
          real mult264F#1 = RMul(coeff25A3,prod25AF);
          real sum2653#1 = RAdd(mult25D7,mult25DE);
          real sum2654#1 = RAdd(mult25CF,sum2653);
          real sum2655#3 = RAdd(mult264F,sum2654);
          real mult2658#6 = RMul(coeff25C4,prod25AF);
          real sum2659#1 = RAdd(mult2658,mult25DE);
          real basisEval265D#4 = RMul(coeff25CE,prod25AE);
          real basisEval265E#4 = RMul(coeff25CE,prod25AA);
          real coeff265F#3 = -0.8e1;
          real mult2660#3 = RMul(coeff259C,prod25AF);
          real mult2661#1 = RMul(coeff265F,prod25A4);
          real sum2662#1 = RAdd(basisEval265E,mult2661);
          real sum2663#1 = RAdd(basisEval265D,sum2662);
          real sum2664#1 = RAdd(mult2660,sum2663);
          real sum2667#1 = RAdd(mult2658,mult25D7);
          real mult2669#1 = RMul(coeff265F,prod25AA);
          real mult266A#4 = RMul(coeff25CE,prod25A4);
          real sum266B#1 = RAdd(mult2669,mult266A);
          real sum266C#1 = RAdd(basisEval265D,sum266B);
          real sum266D#1 = RAdd(mult2660,sum266C);
          real sum2670#1 = RAdd(mult2658,mult25CF);
          real mult2672#1 = RMul(coeff265F,prod25AE);
          real sum2673#1 = RAdd(basisEval265E,mult266A);
          real sum2674#1 = RAdd(mult2672,sum2673);
          real sum2675#1 = RAdd(mult2660,sum2674);
          tensor[10] intermediateCons2677#1 = <tensor[10]>[sum2655,sum2659,_t1D76,_t1D76,_t1D76,mult25CF,mult25D7,basisEval265D,basisEval265E,sum2664];
          tensor[10] intermediateCons2678#1 = <tensor[10]>[sum2655,_t1D76,sum2667,_t1D76,mult25CF,_t1D76,mult25DE,basisEval265D,sum266D,mult266A];
          tensor[10] intermediateCons2679#1 = <tensor[10]>[sum2655,_t1D76,_t1D76,sum2670,mult25D7,mult25DE,_t1D76,sum2675,basisEval265E,mult266A];
          real vdot26BA#3 = VDot<10>(dofs2567,intermediateCons2677);
          real vdot26BC#3 = VDot<10>(dofs2567,intermediateCons2678);
          real vdot26BE#3 = VDot<10>(dofs2567,intermediateCons2679);
          int mulRes26C9#4 = IMul(intPos24F6,ilit2509);
          int idx26CC#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,mulRes26C9);
          int addRes26CE#1 = IAdd(mulRes26C9,ilit2500);
          int idx26CF#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26CE);
          int addRes26D1#1 = IAdd(mulRes26C9,ilit2503);
          int idx26D2#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D1);
          int addRes26D4#1 = IAdd(mulRes26C9,ilit2506);
          int idx26D5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1D33,addRes26D4);
          int mulRes26EB#3 = IMul(ilit2506,idx26CC);
          int addRes26EE#1 = IAdd(ilit2500,mulRes26EB);
          int addRes26F0#1 = IAdd(ilit2503,mulRes26EB);
          real dof_load26F1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26EB);
          real dof_load26F2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26EE);
          real dof_load26F3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F0);
          int mulRes26F6#3 = IMul(ilit2506,idx26CF);
          int addRes26F8#1 = IAdd(ilit2500,mulRes26F6);
          int addRes26F9#1 = IAdd(ilit2503,mulRes26F6);
          real dof_load26FA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26F6);
          real dof_load26FB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F8);
          real dof_load26FC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes26F9);
          int mulRes26FF#3 = IMul(ilit2506,idx26D2);
          int addRes2701#1 = IAdd(ilit2500,mulRes26FF);
          int addRes2702#1 = IAdd(ilit2503,mulRes26FF);
          real dof_load2703#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes26FF);
          real dof_load2704#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2701);
          real dof_load2705#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes2702);
          int mulRes2708#3 = IMul(ilit2506,idx26D5);
          int addRes270A#1 = IAdd(ilit2500,mulRes2708);
          int addRes270B#1 = IAdd(ilit2503,mulRes2708);
          real dof_load270C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,mulRes2708);
          real dof_load270D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270A);
          real dof_load270E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1D33,addRes270B);
          real r275C#2 = RMul(dof_load26F1,mult2658);
          real r275F#1 = RMul(dof_load26FA,mult25B0);
          real r2762#2 = RMul(dof_load2703,_t1D76);
          real r2765#2 = RMul(dof_load270C,_t1D76);
          real r2766#1 = RAdd(r275C,r275F);
          real r2767#1 = RAdd(r2766,r2762);
          real r2768#13 = RAdd(r2767,r2765);
          real r276C#1 = RMul(dof_load26FA,_t1D76);
          real r276E#1 = RMul(dof_load2703,mult25B0);
          real r2771#2 = RAdd(r275C,r276C);
          real r2772#1 = RAdd(r2771,r276E);
          real r2773#13 = RAdd(r2772,r2765);
          real r277B#1 = RMul(dof_load270C,mult25B0);
          real r277D#1 = RAdd(r2771,r2762);
          real r277E#12 = RAdd(r277D,r277B);
          real r2781#2 = RMul(dof_load26F2,mult2658);
          real r2783#1 = RMul(dof_load26FB,mult25B0);
          real r2785#2 = RMul(dof_load2704,_t1D76);
          real r2787#2 = RMul(dof_load270D,_t1D76);
          real r2788#1 = RAdd(r2781,r2783);
          real r2789#1 = RAdd(r2788,r2785);
          real r278A#13 = RAdd(r2789,r2787);
          real r278C#1 = RMul(dof_load26FB,_t1D76);
          real r278D#1 = RMul(dof_load2704,mult25B0);
          real r278F#2 = RAdd(r2781,r278C);
          real r2790#1 = RAdd(r278F,r278D);
          real r2791#13 = RAdd(r2790,r2787);
          real r2795#1 = RMul(dof_load270D,mult25B0);
          real r2797#1 = RAdd(r278F,r2785);
          real r2798#12 = RAdd(r2797,r2795);
          real r279B#2 = RMul(dof_load26F3,mult2658);
          real r279D#1 = RMul(dof_load26FC,mult25B0);
          real r279F#2 = RMul(dof_load2705,_t1D76);
          real r27A1#2 = RMul(dof_load270E,_t1D76);
          real r27A2#1 = RAdd(r279B,r279D);
          real r27A3#1 = RAdd(r27A2,r279F);
          real r27A4#13 = RAdd(r27A3,r27A1);
          real r27A6#1 = RMul(dof_load26FC,_t1D76);
          real r27A7#1 = RMul(dof_load2705,mult25B0);
          real r27A9#2 = RAdd(r279B,r27A6);
          real r27AA#1 = RAdd(r27A9,r27A7);
          real r27AB#13 = RAdd(r27AA,r27A1);
          real r27AF#1 = RMul(dof_load270E,mult25B0);
          real r27B1#1 = RAdd(r27A9,r279F);
          real r27B2#12 = RAdd(r27B1,r27AF);
          real r2813#3 = RMul(_t1D76,r2768);
          real r2815#3 = RMul(_t1D76,r278A);
          real r2817#5 = RMul(_t1D76,r27A4);
          real r2818#3 = RAdd(r2813,r2815);
          real r2819#9 = RAdd(r2818,r2817);
          real r281B#3 = RMul(_t1D76,r2773);
          real r281D#3 = RMul(_t1D76,r2791);
          real r281F#5 = RMul(_t1D76,r27AB);
          real r2820#3 = RAdd(r281B,r281D);
          real r2821#9 = RAdd(r2820,r281F);
          real r2823#3 = RMul(_t1D76,r277E);
          real r2825#3 = RMul(_t1D76,r2798);
          real r2827#5 = RMul(_t1D76,r27B2);
          real r2828#3 = RAdd(r2823,r2825);
          real r2829#12 = RAdd(r2828,r2827);
          real r282C#1 = RMul(coeff25C4,r27A4);
          real r282D#3 = RAdd(r2818,r282C);
          real r282E#1 = RMul(coeff25C4,r27AB);
          real r282F#3 = RAdd(r2820,r282E);
          real r2830#1 = RMul(coeff25C4,r27B2);
          real r2831#4 = RAdd(r2828,r2830);
          real r2834#1 = RMul(_t1D7D,r278A);
          real r2835#1 = RAdd(r2813,r2834);
          real r2836#3 = RAdd(r2835,r2817);
          real r2837#1 = RMul(_t1D7D,r2791);
          real r2838#1 = RAdd(r281B,r2837);
          real r2839#3 = RAdd(r2838,r281F);
          real r283A#1 = RMul(_t1D7D,r2798);
          real r283B#1 = RAdd(r2823,r283A);
          real r283C#4 = RAdd(r283B,r2827);
          real r283F#1 = RMul(_t1D7D,r27A4);
          real r2840#3 = RAdd(r2818,r283F);
          real r2841#1 = RMul(_t1D7D,r27AB);
          real r2842#3 = RAdd(r2820,r2841);
          real r2843#1 = RMul(_t1D7D,r27B2);
          real r2844#4 = RAdd(r2828,r2843);
          real r2846#1 = RMul(coeff25C4,r2768);
          real r2847#1 = RAdd(r2846,r2815);
          real r2848#3 = RAdd(r2847,r2817);
          real r2849#1 = RMul(coeff25C4,r2773);
          real r284A#1 = RAdd(r2849,r281D);
          real r284B#3 = RAdd(r284A,r281F);
          real r284C#1 = RMul(coeff25C4,r277E);
          real r284D#1 = RAdd(r284C,r2825);
          real r284E#4 = RAdd(r284D,r2827);
          real r2851#1 = RMul(coeff25C4,r278A);
          real r2852#1 = RAdd(r2813,r2851);
          real r2853#3 = RAdd(r2852,r2817);
          real r2854#1 = RMul(coeff25C4,r2791);
          real r2855#1 = RAdd(r281B,r2854);
          real r2856#3 = RAdd(r2855,r281F);
          real r2857#1 = RMul(coeff25C4,r2798);
          real r2858#1 = RAdd(r2823,r2857);
          real r2859#4 = RAdd(r2858,r2827);
          real r285B#1 = RMul(_t1D7D,r2768);
          real r285C#1 = RAdd(r285B,r2815);
          real r285D#3 = RAdd(r285C,r2817);
          real r285E#1 = RMul(_t1D7D,r2773);
          real r285F#1 = RAdd(r285E,r281D);
          real r2860#3 = RAdd(r285F,r281F);
          real r2861#1 = RMul(_t1D7D,r277E);
          real r2862#1 = RAdd(r2861,r2825);
          real r2863#4 = RAdd(r2862,r2827);
          real r28C0#1 = RMul(r2768,r2819);
          real r28C3#1 = RMul(r278A,r2840);
          real r28C6#1 = RMul(r27A4,r2853);
          real r28C7#1 = RAdd(r28C0,r28C3);
          real r28C8#1 = RAdd(r28C7,r28C6);
          real r28CA#1 = RMul(r2768,r2821);
          real r28CC#1 = RMul(r278A,r2842);
          real r28CE#1 = RMul(r27A4,r2856);
          real r28CF#1 = RAdd(r28CA,r28CC);
          real r28D0#2 = RAdd(r28CF,r28CE);
          real r28D2#1 = RMul(r2768,r2829);
          real r28D4#1 = RMul(r278A,r2844);
          real r28D6#1 = RMul(r27A4,r2859);
          real r28D7#1 = RAdd(r28D2,r28D4);
          real r28D8#2 = RAdd(r28D7,r28D6);
          real r28DB#1 = RMul(r2768,r282D);
          real r28DD#1 = RMul(r278A,r2819);
          real r28DF#1 = RMul(r27A4,r285D);
          real r28E0#1 = RAdd(r28DB,r28DD);
          real r28E1#1 = RAdd(r28E0,r28DF);
          real r28E3#1 = RMul(r2768,r282F);
          real r28E5#1 = RMul(r278A,r2821);
          real r28E7#1 = RMul(r27A4,r2860);
          real r28E8#1 = RAdd(r28E3,r28E5);
          real r28E9#2 = RAdd(r28E8,r28E7);
          real r28EB#1 = RMul(r2768,r2831);
          real r28ED#1 = RMul(r278A,r2829);
          real r28EF#1 = RMul(r27A4,r2863);
          real r28F0#1 = RAdd(r28EB,r28ED);
          real r28F1#2 = RAdd(r28F0,r28EF);
          real r28F4#1 = RMul(r2768,r2836);
          real r28F6#1 = RMul(r278A,r2848);
          real r28F8#1 = RMul(r27A4,r2819);
          real r28F9#1 = RAdd(r28F4,r28F6);
          real r28FA#1 = RAdd(r28F9,r28F8);
          real r28FC#1 = RMul(r2768,r2839);
          real r28FE#1 = RMul(r278A,r284B);
          real r2900#1 = RMul(r27A4,r2821);
          real r2901#1 = RAdd(r28FC,r28FE);
          real r2902#2 = RAdd(r2901,r2900);
          real r2904#1 = RMul(r2768,r283C);
          real r2906#1 = RMul(r278A,r284E);
          real r2908#1 = RMul(r27A4,r2829);
          real r2909#1 = RAdd(r2904,r2906);
          real r290A#2 = RAdd(r2909,r2908);
          real r290E#1 = RMul(r2773,r2819);
          real r2910#1 = RMul(r2791,r2840);
          real r2912#1 = RMul(r27AB,r2853);
          real r2913#1 = RAdd(r290E,r2910);
          real r2914#2 = RAdd(r2913,r2912);
          real r2915#1 = RMul(r2773,r2821);
          real r2916#1 = RMul(r2791,r2842);
          real r2917#1 = RMul(r27AB,r2856);
          real r2918#1 = RAdd(r2915,r2916);
          real r2919#1 = RAdd(r2918,r2917);
          real r291A#1 = RMul(r2773,r2829);
          real r291B#1 = RMul(r2791,r2844);
          real r291C#1 = RMul(r27AB,r2859);
          real r291D#1 = RAdd(r291A,r291B);
          real r291E#2 = RAdd(r291D,r291C);
          real r2920#1 = RMul(r2773,r282D);
          real r2921#1 = RMul(r2791,r2819);
          real r2922#1 = RMul(r27AB,r285D);
          real r2923#1 = RAdd(r2920,r2921);
          real r2924#2 = RAdd(r2923,r2922);
          real r2925#1 = RMul(r2773,r282F);
          real r2926#1 = RMul(r2791,r2821);
          real r2927#1 = RMul(r27AB,r2860);
          real r2928#1 = RAdd(r2925,r2926);
          real r2929#1 = RAdd(r2928,r2927);
          real r292A#1 = RMul(r2773,r2831);
          real r292B#1 = RMul(r2791,r2829);
          real r292C#1 = RMul(r27AB,r2863);
          real r292D#1 = RAdd(r292A,r292B);
          real r292E#2 = RAdd(r292D,r292C);
          real r2930#1 = RMul(r2773,r2836);
          real r2931#1 = RMul(r2791,r2848);
          real r2932#1 = RMul(r27AB,r2819);
          real r2933#1 = RAdd(r2930,r2931);
          real r2934#2 = RAdd(r2933,r2932);
          real r2935#1 = RMul(r2773,r2839);
          real r2936#1 = RMul(r2791,r284B);
          real r2937#1 = RMul(r27AB,r2821);
          real r2938#1 = RAdd(r2935,r2936);
          real r2939#1 = RAdd(r2938,r2937);
          real r293A#1 = RMul(r2773,r283C);
          real r293B#1 = RMul(r2791,r284E);
          real r293C#1 = RMul(r27AB,r2829);
          real r293D#1 = RAdd(r293A,r293B);
          real r293E#2 = RAdd(r293D,r293C);
          real r2942#1 = RMul(r277E,r2819);
          real r2944#1 = RMul(r2798,r2840);
          real r2946#1 = RMul(r27B2,r2853);
          real r2947#1 = RAdd(r2942,r2944);
          real r2948#2 = RAdd(r2947,r2946);
          real r2949#1 = RMul(r277E,r2821);
          real r294A#1 = RMul(r2798,r2842);
          real r294B#1 = RMul(r27B2,r2856);
          real r294C#1 = RAdd(r2949,r294A);
          real r294D#2 = RAdd(r294C,r294B);
          real r294E#1 = RMul(r277E,r2829);
          real r294F#1 = RMul(r2798,r2844);
          real r2950#1 = RMul(r27B2,r2859);
          real r2951#1 = RAdd(r294E,r294F);
          real r2952#1 = RAdd(r2951,r2950);
          real r2954#1 = RMul(r277E,r282D);
          real r2955#1 = RMul(r2798,r2819);
          real r2956#1 = RMul(r27B2,r285D);
          real r2957#1 = RAdd(r2954,r2955);
          real r2958#2 = RAdd(r2957,r2956);
          real r2959#1 = RMul(r277E,r282F);
          real r295A#1 = RMul(r2798,r2821);
          real r295B#1 = RMul(r27B2,r2860);
          real r295C#1 = RAdd(r2959,r295A);
          real r295D#2 = RAdd(r295C,r295B);
          real r295E#1 = RMul(r277E,r2831);
          real r295F#1 = RMul(r2798,r2829);
          real r2960#1 = RMul(r27B2,r2863);
          real r2961#1 = RAdd(r295E,r295F);
          real r2962#1 = RAdd(r2961,r2960);
          real r2964#1 = RMul(r277E,r2836);
          real r2965#1 = RMul(r2798,r2848);
          real r2966#1 = RMul(r27B2,r2819);
          real r2967#1 = RAdd(r2964,r2965);
          real r2968#2 = RAdd(r2967,r2966);
          real r2969#1 = RMul(r277E,r2839);
          real r296A#1 = RMul(r2798,r284B);
          real r296B#1 = RMul(r27B2,r2821);
          real r296C#1 = RAdd(r2969,r296A);
          real r296D#2 = RAdd(r296C,r296B);
          real r296E#1 = RMul(r277E,r283C);
          real r296F#1 = RMul(r2798,r284E);
          real r2970#1 = RMul(r27B2,r2829);
          real r2971#1 = RAdd(r296E,r296F);
          real r2972#1 = RAdd(r2971,r2970);
          tensor[3] probe_l_292A2E#1 = <tensor[3]>[r2768,r278A,r27A4];
          tensor[3] probe_l_302A7B#3 = <tensor[3]>[r2773,r2791,r27AB];
          tensor[3] tensor2B26#1 = <tensor[3]>[r2829,r2844,r2859];
          tensor[3] tensor2B2C#1 = <tensor[3]>[r2831,r2829,r2863];
          tensor[3] tensor2B33#1 = <tensor[3]>[r283C,r284E,r2829];
          real vdot2B56#1 = VDot<3>(probe_l_302A7B,tensor2B26);
          real vdot2B58#1 = VDot<3>(probe_l_302A7B,tensor2B2C);
          real vdot2B5A#1 = VDot<3>(probe_l_302A7B,tensor2B33);
          tensor[3] op1_e3_l_332B54#1 = <tensor[3]>[vdot2B56,vdot2B58,vdot2B5A];
          real op1_e3_l_342B63#1 = VDot<3>(probe_l_292A2E,op1_e3_l_332B54);
          real r2B69#2 = RMul(_t1D76,r28C8);
          real r2B6B#1 = RMul(_t1D76,r28D0);
          real r2B6D#2 = RMul(_t1D76,r28D8);
          real r2B6F#2 = RMul(_t1D76,r2914);
          real r2B71#3 = RMul(_t1D76,r2919);
          real r2B74#1 = RMul(_t1D7D,r291E);
          real r2B76#2 = RMul(_t1D76,r2948);
          real r2B79#1 = RMul(coeff25C4,r294D);
          real r2B7B#3 = RMul(_t1D76,r2952);
          real r2B7C#2 = RAdd(r2B69,r2B6B);
          real r2B7D#1 = RAdd(r2B7C,r2B6D);
          real r2B7E#1 = RAdd(r2B7D,r2B6F);
          real r2B7F#1 = RAdd(r2B7E,r2B71);
          real r2B80#1 = RAdd(r2B7F,r2B74);
          real r2B81#1 = RAdd(r2B80,r2B76);
          real r2B82#1 = RAdd(r2B81,r2B79);
          real r2B83#1 = RAdd(r2B82,r2B7B);
          real r2B85#2 = RMul(_t1D76,r28E1);
          real r2B87#1 = RMul(_t1D76,r28E9);
          real r2B89#2 = RMul(_t1D76,r28F1);
          real r2B8B#2 = RMul(_t1D76,r2924);
          real r2B8D#3 = RMul(_t1D76,r2929);
          real r2B8F#1 = RMul(_t1D7D,r292E);
          real r2B91#2 = RMul(_t1D76,r2958);
          real r2B93#1 = RMul(coeff25C4,r295D);
          real r2B95#3 = RMul(_t1D76,r2962);
          real r2B96#2 = RAdd(r2B85,r2B87);
          real r2B97#1 = RAdd(r2B96,r2B89);
          real r2B98#1 = RAdd(r2B97,r2B8B);
          real r2B99#1 = RAdd(r2B98,r2B8D);
          real r2B9A#1 = RAdd(r2B99,r2B8F);
          real r2B9B#1 = RAdd(r2B9A,r2B91);
          real r2B9C#1 = RAdd(r2B9B,r2B93);
          real r2B9D#1 = RAdd(r2B9C,r2B95);
          real r2B9F#2 = RMul(_t1D76,r28FA);
          real r2BA1#1 = RMul(_t1D76,r2902);
          real r2BA3#2 = RMul(_t1D76,r290A);
          real r2BA5#2 = RMul(_t1D76,r2934);
          real r2BA7#3 = RMul(_t1D76,r2939);
          real r2BA9#1 = RMul(_t1D7D,r293E);
          real r2BAB#2 = RMul(_t1D76,r2968);
          real r2BAD#1 = RMul(coeff25C4,r296D);
          real r2BAF#3 = RMul(_t1D76,r2972);
          real r2BB0#2 = RAdd(r2B9F,r2BA1);
          real r2BB1#1 = RAdd(r2BB0,r2BA3);
          real r2BB2#1 = RAdd(r2BB1,r2BA5);
          real r2BB3#1 = RAdd(r2BB2,r2BA7);
          real r2BB4#1 = RAdd(r2BB3,r2BA9);
          real r2BB5#1 = RAdd(r2BB4,r2BAB);
          real r2BB6#1 = RAdd(r2BB5,r2BAD);
          real r2BB7#1 = RAdd(r2BB6,r2BAF);
          real r2BB9#1 = RMul(coeff25C4,r28D8);
          real r2BBA#2 = RMul(_t1D76,r291E);
          real r2BBB#1 = RMul(_t1D7D,r2948);
          real r2BBC#2 = RMul(_t1D76,r294D);
          real r2BBD#1 = RAdd(r2B7C,r2BB9);
          real r2BBE#1 = RAdd(r2BBD,r2B6F);
          real r2BBF#1 = RAdd(r2BBE,r2B71);
          real r2BC0#1 = RAdd(r2BBF,r2BBA);
          real r2BC1#1 = RAdd(r2BC0,r2BBB);
          real r2BC2#1 = RAdd(r2BC1,r2BBC);
          real r2BC3#1 = RAdd(r2BC2,r2B7B);
          real r2BC4#1 = RMul(coeff25C4,r28F1);
          real r2BC5#2 = RMul(_t1D76,r292E);
          real r2BC6#1 = RMul(_t1D7D,r2958);
          real r2BC7#2 = RMul(_t1D76,r295D);
          real r2BC8#1 = RAdd(r2B96,r2BC4);
          real r2BC9#1 = RAdd(r2BC8,r2B8B);
          real r2BCA#1 = RAdd(r2BC9,r2B8D);
          real r2BCB#1 = RAdd(r2BCA,r2BC5);
          real r2BCC#1 = RAdd(r2BCB,r2BC6);
          real r2BCD#1 = RAdd(r2BCC,r2BC7);
          real r2BCE#1 = RAdd(r2BCD,r2B95);
          real r2BCF#1 = RMul(coeff25C4,r290A);
          real r2BD0#2 = RMul(_t1D76,r293E);
          real r2BD1#1 = RMul(_t1D7D,r2968);
          real r2BD2#2 = RMul(_t1D76,r296D);
          real r2BD3#1 = RAdd(r2BB0,r2BCF);
          real r2BD4#1 = RAdd(r2BD3,r2BA5);
          real r2BD5#1 = RAdd(r2BD4,r2BA7);
          real r2BD6#1 = RAdd(r2BD5,r2BD0);
          real r2BD7#1 = RAdd(r2BD6,r2BD1);
          real r2BD8#1 = RAdd(r2BD7,r2BD2);
          real r2BD9#1 = RAdd(r2BD8,r2BAF);
          real r2BDB#1 = RMul(_t1D7D,r28D0);
          real r2BDC#1 = RMul(coeff25C4,r2914);
          real r2BDD#1 = RAdd(r2B69,r2BDB);
          real r2BDE#1 = RAdd(r2BDD,r2B6D);
          real r2BDF#1 = RAdd(r2BDE,r2BDC);
          real r2BE0#1 = RAdd(r2BDF,r2B71);
          real r2BE1#1 = RAdd(r2BE0,r2BBA);
          real r2BE2#1 = RAdd(r2BE1,r2B76);
          real r2BE3#1 = RAdd(r2BE2,r2BBC);
          real r2BE4#1 = RAdd(r2BE3,r2B7B);
          real r2BE5#1 = RMul(_t1D7D,r28E9);
          real r2BE6#1 = RMul(coeff25C4,r2924);
          real r2BE7#1 = RAdd(r2B85,r2BE5);
          real r2BE8#1 = RAdd(r2BE7,r2B89);
          real r2BE9#1 = RAdd(r2BE8,r2BE6);
          real r2BEA#1 = RAdd(r2BE9,r2B8D);
          real r2BEB#1 = RAdd(r2BEA,r2BC5);
          real r2BEC#1 = RAdd(r2BEB,r2B91);
          real r2BED#1 = RAdd(r2BEC,r2BC7);
          real r2BEE#1 = RAdd(r2BED,r2B95);
          real r2BEF#1 = RMul(_t1D7D,r2902);
          real r2BF0#1 = RMul(coeff25C4,r2934);
          real r2BF1#1 = RAdd(r2B9F,r2BEF);
          real r2BF2#1 = RAdd(r2BF1,r2BA3);
          real r2BF3#1 = RAdd(r2BF2,r2BF0);
          real r2BF4#1 = RAdd(r2BF3,r2BA7);
          real r2BF5#1 = RAdd(r2BF4,r2BD0);
          real r2BF6#1 = RAdd(r2BF5,r2BAB);
          real r2BF7#1 = RAdd(r2BF6,r2BD2);
          real r2BF8#1 = RAdd(r2BF7,r2BAF);
          real op1_e3_l_362C8F#9 = RMul(coeff2596,op1_e3_l_342B63);
          real r2C96#1 = RDiv(r2B83,op1_e3_l_362C8F);
          real r2C98#1 = RDiv(r2B9D,op1_e3_l_362C8F);
          real r2C9A#1 = RDiv(r2BB7,op1_e3_l_362C8F);
          real r2C9D#1 = RDiv(r2BC3,op1_e3_l_362C8F);
          real r2C9F#1 = RDiv(r2BCE,op1_e3_l_362C8F);
          real r2CA1#1 = RDiv(r2BD9,op1_e3_l_362C8F);
          real r2CA4#1 = RDiv(r2BE4,op1_e3_l_362C8F);
          real r2CA6#1 = RDiv(r2BEE,op1_e3_l_362C8F);
          real r2CA8#1 = RDiv(r2BF8,op1_e3_l_362C8F);
          real r2CC4#1 = RMul(vdot26BA,r2C96);
          real r2CC7#1 = RMul(vdot26BC,r2C9D);
          real r2CCA#1 = RMul(vdot26BE,r2CA4);
          real r2CCB#1 = RAdd(r2CC4,r2CC7);
          real r2CCC#1 = RAdd(r2CCB,r2CCA);
          real r2CCE#1 = RMul(vdot26BA,r2C98);
          real r2CD0#1 = RMul(vdot26BC,r2C9F);
          real r2CD2#1 = RMul(vdot26BE,r2CA6);
          real r2CD3#1 = RAdd(r2CCE,r2CD0);
          real r2CD4#1 = RAdd(r2CD3,r2CD2);
          real r2CD6#1 = RMul(vdot26BA,r2C9A);
          real r2CD8#1 = RMul(vdot26BC,r2CA1);
          real r2CDA#1 = RMul(vdot26BE,r2CA8);
          real r2CDB#1 = RAdd(r2CD6,r2CD8);
          real r2CDC#1 = RAdd(r2CDB,r2CDA);
          tensor[3] op1_e3_l_382CC1#1 = <tensor[3]>[r2CCC,r2CD4,r2CDC];
          tensor[3] op1_e3_l_542CFA#3 = VNeg<3>(op1_e3_l_382CC1);
          real op1_e3_l_562CFD#1 = VDot<3>(op1_e3_l_542CFA,op1_e3_l_542CFA);
          real op1_e3_l_572D00#2 = Sqrt(op1_e3_l_562CFD);
          real op1_e3_l_582D03#1 = Abs<real>(op1_e3_l_23263B);
          real op1_e3_l_592D06#1 = RMul(thick1D3F,op1_e3_l_572D00);
          real op1_e3_l_602D09#1 = RDiv(op1_e3_l_582D03,op1_e3_l_592D06);
          real op1_e3_l_612D0C#1 = RSub(_t1D7D,op1_e3_l_602D09);
          real op1_e3_l_622D0F#1 = RMul(_t24F2,op1_e3_l_612D0C);
          real op1_e3_l_632D12#1 = RClamp(_t1D76,_t1D7D,op1_e3_l_622D0F);
          real a2D15#2 = RMul(_t1D7D,op1_e3_l_632D12);
          bool _t2D18#1 = GT<real>(a2D15,_t1D76);
          if _t2D18 then goto ASSIGN3270 else goto JOIN2DEC
        ASSIGN3270:  preds = [COND2D1A]
          real _t2D21#1 = RSub(_t1D7D,a2D15);
          real op1_e3_l_32D24#1 = VDot<3>(rayVec1D59,rayVec1D59);
          real op1_e3_l_42D27#1 = Sqrt(op1_e3_l_32D24);
          real op1_e3_l_52D2A#1 = RMul(rayStep1D49,op1_e3_l_42D27);
          real _t2D2D#1 = RDiv(op1_e3_l_52D2A,refStep1D47);
          real _t2D30#1 = MathFn<pow>(_t2D21,_t2D2D);
          real _t2D32#2 = 0.11e1;
          real _t2D34#1 = 0.7e0;
          real op1_e3_l_672D36#1 = RDiv(_t1D7D,op1_e3_l_572D00);
          real op1_e3_l_682D3B#1 = VDot<3>(op1_e3_l_542CFA,light1D55);
          real _t2D3E#1 = RMul(op1_e3_l_672D36,op1_e3_l_682D3B);
          real shade2D41#1 = Max<real>(_t1D76,_t2D3E);
          real op1_e3_l_152D45#1 = RSub(rayN1D57,camNear1D43);
          real op1_e3_l_162D48#1 = RSub(camFar1D45,camNear1D43);
          real op1_e3_l_172D4B#1 = RDiv(op1_e3_l_152D45,op1_e3_l_162D48);
          real op1_e3_l_182D4E#1 = RSub(_t2D34,_t2D32);
          real op1_e3_l_192D51#1 = RMul(op1_e3_l_172D4B,op1_e3_l_182D4E);
          real op1_e3_l_202D54#1 = RMul(phongKd1D4D,shade2D41);
          real Mtransform2D57#1 = Transform<IMAGE1D<double[3]>>(I1D2F);
          real MxPos2D59#1 = RMul(Mtransform2D57,compositionl2638);
          real Ttranslate2D5C#1 = Translate<IMAGE1D<double[3]>>(I1D2F);
          real imgPos2D5E#2 = RAdd(MxPos2D59,Ttranslate2D5C);
          real nd2D61#2 = Floor<1>(imgPos2D5E);
          real f2D63#2 = RSub(imgPos2D5E,nd2D61);
          int n2D66#5 = RealToInt<1>(nd2D61);
          bool isInside2D6A#1 = IndexInside<IMAGE1D<double[3]>,2>(n2D66,I1D2F);
          if isInside2D6A then goto ASSIGN327C else goto ASSIGN3274
        ASSIGN327C:  preds = [COND2D6C]
          int offp2D71#3 = IMul(ilit2506,n2D66);
          real v0_2D72#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D71);
          int addRes2D74#1 = IAdd(n2D66,ilit2500);
          int offp2D75#3 = IMul(ilit2506,addRes2D74);
          real v1_2D76#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D75);
          int offp2D78#1 = IAdd(offp2D71,ilit2500);
          real v0_2D79#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D78);
          int offp2D7A#1 = IAdd(offp2D75,ilit2500);
          real v1_2D7B#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7A);
          int offp2D7E#1 = IAdd(offp2D71,ilit2503);
          real v0_2D7F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D7E);
          int offp2D80#1 = IAdd(offp2D75,ilit2503);
          real v1_2D81#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2D80);
          tensor[3,2] voxels2D83#1 = <tensor[3,2]>[v0_2D72,v1_2D76,v0_2D79,v1_2D7B,v0_2D7F,v1_2D81];
          goto JOIN2D9D
        JOIN2D9D:  preds = [ASSIGN3289,ASSIGN328A]
          tensor[3,2] ldvox2D9B#3 = phi(voxels2D83,voxels2E31)
          real idx2DA0#1 = RSub(f2D63,_t1D7D);
          tensor[2] kernX_2D9E#1 = <tensor[2]>[f2D63,idx2DA0];
          tensor[2] a02DA5#1 = <tensor[2]>[_t1D7D,_t1D7D];
          tensor[2] a12DA6#1 = <tensor[2]>[coeff25C4,_t1D7D];
          tensor[2] prod12DAB#1 = VMul<2>(kernX_2D9E,a12DA6);
          tensor[2] kevalX_d0_2DA4#3 = VAdd<2>(a02DA5,prod12DAB);
          tensor[2] projIx2DB5#1 = ProjectLast<tensor[3,2],[0]>(ldvox2D9B);
          real vdot2DB6#1 = VDot<2>(projIx2DB5,kevalX_d0_2DA4);
          tensor[2] projIx2DB7#1 = ProjectLast<tensor[3,2],[1]>(ldvox2D9B);
          real vdot2DB8#1 = VDot<2>(projIx2DB7,kevalX_d0_2DA4);
          tensor[2] projIx2DB9#1 = ProjectLast<tensor[3,2],[2]>(ldvox2D9B);
          real vdot2DBA#1 = VDot<2>(projIx2DB9,kevalX_d0_2DA4);
          real op1_e3_l_222DC3#2 = RSub(_t1D7D,_t2D30);
          real op1_e3_l_232DC6#1 = RAdd(_t2D32,op1_e3_l_192D51);
          real op1_e3_l_242DC9#1 = RAdd(phongKa1D4B,op1_e3_l_202D54);
          real r2DCE#1 = RMul(transp1D5B,op1_e3_l_222DC3);
          real r2DCF#1 = RMul(r2DCE,op1_e3_l_232DC6);
          real r2DD0#3 = RMul(r2DCF,op1_e3_l_242DC9);
          real r2DD1#1 = RMul(r2DD0,vdot2DB6);
          real r2DD3#1 = RMul(r2DD0,vdot2DB8);
          real r2DD5#1 = RMul(r2DD0,vdot2DBA);
          tensor[3] op1_e3_l_252DCC#1 = <tensor[3]>[r2DD1,r2DD3,r2DD5];
          tensor[3] rgb2DE1#1 = VAdd<3>(rgb1D5D,op1_e3_l_252DCC);
          real op1_e3_l_52DE4#1 = RSub(_t1D7D,op1_e3_l_222DC3);
          real transp2DE7#1 = RMul(transp1D5B,op1_e3_l_52DE4);
          goto JOIN2DEC
        JOIN2DEC:  preds = [ASSIGN2DE9,COND2D1A]
          tensor[3] rgb2DEA#1 = phi(rgb2DE1,rgb1D5D)
          real transp2DEB#1 = phi(transp2DE7,transp1D5B)
          goto JOIN2DEF
        JOIN2DEF:  preds = [JOIN2DEC,COND24F1]
          tensor[3] rgb2DED#1 = phi(rgb2DEA,rgb1D5D)
          real transp2DEE#1 = phi(transp2DEB,transp1D5B)
          goto JOIN2DF2
        JOIN2DF2:  preds = [JOIN2DEF,COND1D91]
          tensor[3] rgb2DF0#1 = phi(rgb2DED,rgb1D5D)
          real transp2DF1#1 = phi(transp2DEE,transp1D5B)
          goto JOIN2DF5
        JOIN2DF5:  preds = [JOIN2DF2,COND1D8E]
          tensor[3] rgb2DF3#1 = phi(rgb2DF0,rgb1D5D)
          real transp2DF4#1 = phi(transp2DF1,transp1D5B)
          goto JOIN2DF8
        JOIN2DF8:  preds = [JOIN2DF5,COND1D89]
          tensor[3] rgb2DF6#1 = phi(rgb2DF3,rgb1D5D)
          real transp2DF7#1 = phi(transp2DF4,transp1D5B)
          goto JOIN2DFB
        JOIN2DFB:  preds = [JOIN2DF8,COND1D86]
          tensor[3] rgb2DF9#1 = phi(rgb2DF6,rgb1D5D)
          real transp2DFA#1 = phi(transp2DF7,transp1D5B)
          goto JOIN2DFE
        JOIN2DFE:  preds = [JOIN2DFB,COND1D81]
          tensor[3] rgb2DFC#1 = phi(rgb2DF9,rgb1D5D)
          real transp2DFD#1 = phi(transp2DFA,transp1D5B)
          goto JOIN2E01
        JOIN2E01:  preds = [JOIN2DFE,COND1D7C]
          tensor[3] rgb2DFF#3 = phi(rgb2DFC,rgb1D5D)
          real transp2E00#2 = phi(transp2DFD,transp1D5B)
          real _t2E02#1 = 0.1e-1;
          bool _t2E04#1 = LT<real>(transp2E00,_t2E02);
          if _t2E04 then goto SAVE2E07 else goto JOIN2E0B
        SAVE2E07:  preds = [COND2E06]
          self.transp = _t1D76;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E0B
        JOIN2E0B:  preds = [*STABILIZE2E09,COND2E06]
          real transp2E0A#2 = phi(transp2E00)
          bool _t2E0C#1 = GT<real>(rayN1D57,camFar1D45);
          if _t2E0C then goto SAVE2E0F else goto JOIN2E12
        SAVE2E0F:  preds = [COND2E0E]
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          stabilize
          goto JOIN2E12
        JOIN2E12:  preds = [*STABILIZE2E11,COND2E0E]
          real rayN2E13#1 = RAdd(rayN1D57,rayStep1D49);
          self.rayN = rayN2E13;
          self.transp = transp2E0A;
          self.rgb = rgb2DFF;
          active
        ASSIGN3274:  preds = [COND2D6C]
          int ix2E1C#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,n2D66);
          int offp2E1E#3 = IMul(ilit2506,ix2E1C);
          real v0_2E1F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E1E);
          int addRes2E21#1 = IAdd(n2D66,ilit2500);
          int ix2E22#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1D2F,addRes2E21);
          int offp2E23#3 = IMul(ilit2506,ix2E22);
          real v1_2E24#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E23);
          int offp2E26#1 = IAdd(offp2E1E,ilit2500);
          real v0_2E27#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E26);
          int offp2E28#1 = IAdd(offp2E23,ilit2500);
          real v1_2E29#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E28);
          int offp2E2C#1 = IAdd(offp2E1E,ilit2503);
          real v0_2E2D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2C);
          int offp2E2E#1 = IAdd(offp2E23,ilit2503);
          real v1_2E2F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1D2F,offp2E2E);
          tensor[3,2] voxels2E31#1 = <tensor[3,2]>[v0_2E1F,v1_2E24,v0_2E27,v1_2E29,v0_2E2D,v1_2E2F];
          goto JOIN2D9D
        ASSIGN2E4B:  preds = [COND1D66]
          bool _t1D6A#1 = NEQ<int>(vi1D61,sv1D53);
          goto JOIN1D6B
    end update
    method stabilize
        ENTRY2E4C:  preds = []
          bool debug2E4D#1 = globals.debug1AC7;
          int su2E4F#1 = globals.su1AC8;
          int sv2E51#1 = globals.sv1AC9;
          real transp2E53#1 = self.transp;
          tensor[3] rgb2E55#3 = self.rgb;
          tensor[4] rgba2E57#1 = self.rgba;
          int ui2E59#1 = self.ui;
          int vi2E5B#1 = self.vi;
          real _t2E5D#1 = 0.1e1;
          real a2E5F#6 = RSub(_t2E5D,transp2E53);
          real _t2E62#1 = 0.e0;
          bool _t2E64#1 = GT<real>(a2E5F,_t2E62);
          if _t2E64 then goto ASSIGN2E68 else goto JOIN2E79
        ASSIGN2E68:  preds = [COND2E66]
          real _t2E67#1 = VIndex<3,0>(rgb2E55);
          real _t2E69#1 = RDiv(_t2E67,a2E5F);
          real _t2E6C#1 = VIndex<3,1>(rgb2E55);
          real _t2E6E#1 = RDiv(_t2E6C,a2E5F);
          real _t2E71#1 = VIndex<3,2>(rgb2E55);
          real _t2E73#1 = RDiv(_t2E71,a2E5F);
          tensor[4] rgba2E76#1 = <tensor[4]>[_t2E69,_t2E6E,_t2E73,a2E5F];
          goto JOIN2E79
        JOIN2E79:  preds = [ASSIGN2E77,COND2E66]
          tensor[4] rgba2E78#2 = phi(rgba2E76,rgba2E57)
          bool _t2E7A#1 = EQ<int>(ui2E59,su2E4F);
          if _t2E7A then goto ASSIGN2E7E else goto JOIN2E84
        ASSIGN2E7E:  preds = [COND2E7C]
          bool _t2E7D#1 = EQ<int>(vi2E5B,sv2E51);
          if _t2E7D then goto COND2E80 else goto JOIN2E83
        COND2E80:  preds = [COND2E7F]
          if debug2E4D then goto MASSIGN2E81 else goto JOIN2E82
        MASSIGN2E81:  preds = [COND2E80]
          Print<[real,tensor[4]]>(a2E5F,rgba2E78);
          goto JOIN2E82
        JOIN2E82:  preds = [MASSIGN2E81,COND2E80]
          goto JOIN2E83
        JOIN2E83:  preds = [JOIN2E82,COND2E7F]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2E83,COND2E7C]
          self.rgba = rgba2E78;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY2E87:  preds = []
      int iresU2E88#1 = globals.iresU1ABE;
      int iresV2E8A#1 = globals.iresV1ABF;
      int _t2E8C#2 = 0;
      int _t2E8E#2 = 1;
      int _t2E90#1 = ISub(iresV2E8A,_t2E8E);
      int[] _t2E92#1 = Range(_t2E8C,_t2E90);
    FOREACH2E95:  preds = [ASSIGN2E93,NEXT2E9E]
      foreach (vi2E94 in _t2E92) on exit goto RETURN2E9F
      int _t2E96#1 = ISub(iresU2E88,_t2E8E);
      int[] _t2E98#1 = Range(_t2E8C,_t2E96);
    FOREACH2E9B:  preds = [ASSIGN2E99,NEXT2E9D]
      foreach (ui2E9A in _t2E98) on exit goto NEXT2E9E
      new raycast(ui2E9A,vi2E94);
      goto FOREACH2E9B
    NEXT2E9E:  preds = [FOREACH2E9B]
      goto FOREACH2E95
    RETURN2E9F:  preds = [FOREACH2E95]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b042F_intermedateGlobal;
input femData(FemFunc) 0c0431_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(-0.3e1,-0.3e1,0.3e1));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_10;
    int l_newtonInt_9;
    int l_cellInt_8;
    int l_numCell_7 = ISub(ExtractFemItem<int,NumCell(Mesh)>(p_mesh_5),1);
    l_cellInt_8 = ExtractFemItem<int,StartCell(Mesh)>(p_mesh_5);
    l_newtonInt_9 = 0;
    v_10 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_11 = 0 to IMul(16,l_numCell_7) {
      int l_newtonInt_154;
      int l_cellInt_153;
      int l_mulRes_12 = IMul(l_cellInt_8,4);
      int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_12);
      int l_mulRes_14 = IMul(3,t_13);
      real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_14);
      real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_14));
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_14));
      int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,1));
      int l_mulRes_19 = IMul(3,t_18);
      real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_19));
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_19));
      int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,2));
      int l_mulRes_24 = IMul(3,t_23);
      real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_24);
      real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_24));
      real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_24));
      int t_28 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,3));
      int l_mulRes_29 = IMul(3,t_28);
      real l_dof_load_30 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_29);
      real l_dof_load_31 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_29));
      real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_29));
      real l_prod_33 = RMul(0.1e1,0.1e1);
      real l_prod_34 = RMul(0.1e1,l_prod_33);
      real l_basisEval_35 = RMul(-0.1e1,l_prod_34);
      real l_basisEval_36 = RMul(0.1e1,l_prod_34);
      real l_r_37 = RMul(l_dof_load_15,l_basisEval_35);
      real l_r_38 = RMul(l_dof_load_25,0.e0);
      real l_r_39 = RMul(l_dof_load_30,0.e0);
      real l_r_40 = RAdd(RAdd(RAdd(l_r_37,RMul(l_dof_load_20,l_basisEval_36)),l_r_38),l_r_39);
      real l_r_41 = RAdd(l_r_37,RMul(l_dof_load_20,0.e0));
      real l_r_42 = RAdd(RAdd(l_r_41,RMul(l_dof_load_25,l_basisEval_36)),l_r_39);
      real l_r_43 = RAdd(RAdd(l_r_41,l_r_38),RMul(l_dof_load_30,l_basisEval_36));
      real l_r_44 = RMul(l_dof_load_16,l_basisEval_35);
      real l_r_45 = RMul(l_dof_load_26,0.e0);
      real l_r_46 = RMul(l_dof_load_31,0.e0);
      real l_r_47 = RAdd(RAdd(RAdd(l_r_44,RMul(l_dof_load_21,l_basisEval_36)),l_r_45),l_r_46);
      real l_r_48 = RAdd(l_r_44,RMul(l_dof_load_21,0.e0));
      real l_r_49 = RAdd(RAdd(l_r_48,RMul(l_dof_load_26,l_basisEval_36)),l_r_46);
      real l_r_50 = RAdd(RAdd(l_r_48,l_r_45),RMul(l_dof_load_31,l_basisEval_36));
      real l_r_51 = RMul(l_dof_load_17,l_basisEval_35);
      real l_r_52 = RMul(l_dof_load_27,0.e0);
      real l_r_53 = RMul(l_dof_load_32,0.e0);
      real l_r_54 = RAdd(RAdd(RAdd(l_r_51,RMul(l_dof_load_22,l_basisEval_36)),l_r_52),l_r_53);
      real l_r_55 = RAdd(l_r_51,RMul(l_dof_load_22,0.e0));
      real l_r_56 = RAdd(RAdd(l_r_55,RMul(l_dof_load_27,l_basisEval_36)),l_r_53);
      real l_r_57 = RAdd(RAdd(l_r_55,l_r_52),RMul(l_dof_load_32,l_basisEval_36));
      real l_r_58 = RMul(0.e0,l_r_40);
      real l_r_59 = RMul(0.e0,l_r_47);
      real l_r_60 = RMul(0.e0,l_r_54);
      real l_r_61 = RAdd(l_r_58,l_r_59);
      real l_r_62 = RAdd(l_r_61,l_r_60);
      real l_r_63 = RMul(0.e0,l_r_42);
      real l_r_64 = RMul(0.e0,l_r_49);
      real l_r_65 = RMul(0.e0,l_r_56);
      real l_r_66 = RAdd(l_r_63,l_r_64);
      real l_r_67 = RAdd(l_r_66,l_r_65);
      real l_r_68 = RMul(0.e0,l_r_43);
      real l_r_69 = RMul(0.e0,l_r_50);
      real l_r_70 = RMul(0.e0,l_r_57);
      real l_r_71 = RAdd(l_r_68,l_r_69);
      real l_r_72 = RAdd(l_r_71,l_r_70);
      real l_r_73 = RAdd(l_r_61,RMul(-0.1e1,l_r_54));
      real l_r_74 = RAdd(l_r_66,RMul(-0.1e1,l_r_56));
      real l_r_75 = RAdd(l_r_71,RMul(-0.1e1,l_r_57));
      real l_r_76 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_47)),l_r_60);
      real l_r_77 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_49)),l_r_65);
      real l_r_78 = RAdd(RAdd(l_r_68,RMul(0.1e1,l_r_50)),l_r_70);
      real l_r_79 = RAdd(l_r_61,RMul(0.1e1,l_r_54));
      real l_r_80 = RAdd(l_r_66,RMul(0.1e1,l_r_56));
      real l_r_81 = RAdd(l_r_71,RMul(0.1e1,l_r_57));
      real l_r_82 = RAdd(RAdd(RMul(-0.1e1,l_r_40),l_r_59),l_r_60);
      real l_r_83 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_64),l_r_65);
      real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_43),l_r_69),l_r_70);
      real l_r_85 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_47)),l_r_60);
      real l_r_86 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_49)),l_r_65);
      real l_r_87 = RAdd(RAdd(l_r_68,RMul(-0.1e1,l_r_50)),l_r_70);
      real l_r_88 = RAdd(RAdd(RMul(0.1e1,l_r_40),l_r_59),l_r_60);
      real l_r_89 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_64),l_r_65);
      real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_43),l_r_69),l_r_70);
      real l_r_91 = RAdd(RAdd(RMul(l_r_40,l_r_67),RMul(l_r_47,l_r_80)),RMul(l_r_54,l_r_86));
      real l_r_92 = RAdd(RAdd(RMul(l_r_40,l_r_72),RMul(l_r_47,l_r_81)),RMul(l_r_54,l_r_87));
      real l_r_93 = RAdd(RAdd(RMul(l_r_40,l_r_74),RMul(l_r_47,l_r_67)),RMul(l_r_54,l_r_89));
      real l_r_94 = RAdd(RAdd(RMul(l_r_40,l_r_75),RMul(l_r_47,l_r_72)),RMul(l_r_54,l_r_90));
      real l_r_95 = RAdd(RAdd(RMul(l_r_40,l_r_77),RMul(l_r_47,l_r_83)),RMul(l_r_54,l_r_67));
      real l_r_96 = RAdd(RAdd(RMul(l_r_40,l_r_78),RMul(l_r_47,l_r_84)),RMul(l_r_54,l_r_72));
      real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_62),RMul(l_r_49,l_r_79)),RMul(l_r_56,l_r_85));
      real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_72),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87));
      real l_r_99 = RAdd(RAdd(RMul(l_r_42,l_r_73),RMul(l_r_49,l_r_62)),RMul(l_r_56,l_r_88));
      real l_r_100 = RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_72)),RMul(l_r_56,l_r_90));
      real l_r_101 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_62));
      real l_r_102 = RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_72));
      real l_r_103 = RAdd(RAdd(RMul(l_r_43,l_r_62),RMul(l_r_50,l_r_79)),RMul(l_r_57,l_r_85));
      real l_r_104 = RAdd(RAdd(RMul(l_r_43,l_r_67),RMul(l_r_50,l_r_80)),RMul(l_r_57,l_r_86));
      real l_r_105 = RAdd(RAdd(RMul(l_r_43,l_r_73),RMul(l_r_50,l_r_62)),RMul(l_r_57,l_r_88));
      real l_r_106 = RAdd(RAdd(RMul(l_r_43,l_r_74),RMul(l_r_50,l_r_67)),RMul(l_r_57,l_r_89));
      real l_r_107 = RAdd(RAdd(RMul(l_r_43,l_r_76),RMul(l_r_50,l_r_82)),RMul(l_r_57,l_r_62));
      real l_r_108 = RAdd(RAdd(RMul(l_r_43,l_r_77),RMul(l_r_50,l_r_83)),RMul(l_r_57,l_r_67));
      vec3{4} v_109 = VEC3{4}(l_r_42,l_r_49,l_r_56);
      real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_62),RMul(l_r_47,l_r_79)),RMul(l_r_54,l_r_85)));
      real l_r_111 = RMul(0.e0,l_r_92);
      real l_r_112 = RMul(0.e0,l_r_97);
      real l_r_113 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_67),RMul(l_r_49,l_r_80)),RMul(l_r_56,l_r_86)));
      real l_r_114 = RMul(0.e0,l_r_103);
      real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_72),RMul(l_r_50,l_r_81)),RMul(l_r_57,l_r_87)));
      real l_r_116 = RAdd(l_r_110,RMul(0.e0,l_r_91));
      real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_73),RMul(l_r_47,l_r_62)),RMul(l_r_54,l_r_88)));
      real l_r_118 = RMul(0.e0,l_r_94);
      real l_r_119 = RMul(0.e0,l_r_99);
      real l_r_120 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_67)),RMul(l_r_56,l_r_89)));
      real l_r_121 = RMul(0.e0,l_r_105);
      real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_75),RMul(l_r_50,l_r_72)),RMul(l_r_57,l_r_90)));
      real l_r_123 = RAdd(l_r_117,RMul(0.e0,l_r_93));
      real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_76),RMul(l_r_47,l_r_82)),RMul(l_r_54,l_r_62)));
      real l_r_125 = RMul(0.e0,l_r_96);
      real l_r_126 = RMul(0.e0,l_r_101);
      real l_r_127 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_67)));
      real l_r_128 = RMul(0.e0,l_r_107);
      real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_78),RMul(l_r_50,l_r_84)),RMul(l_r_57,l_r_72)));
      real l_r_130 = RAdd(l_r_124,RMul(0.e0,l_r_95));
      real l_r_131 = RMul(0.e0,l_r_98);
      real l_r_132 = RMul(0.e0,l_r_104);
      real l_r_133 = RMul(0.e0,l_r_100);
      real l_r_134 = RMul(0.e0,l_r_106);
      real l_r_135 = RMul(0.e0,l_r_102);
      real l_r_136 = RMul(0.e0,l_r_108);
      real l_op1_e3_l_21_137 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_40,l_r_47,l_r_54),VEC3{4}(VDot<3,4>(v_109,VEC3{4}(l_r_72,l_r_81,l_r_87)),VDot<3,4>(v_109,VEC3{4}(l_r_75,l_r_72,l_r_90)),VDot<3,4>(v_109,VEC3{4}(l_r_78,l_r_84,l_r_72)))));
      real l_prod_138 = RMul(VIndex<3,4,0>(v_10),l_prod_33);
      real l_prod_139 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_10),0.1e1));
      real l_prod_140 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_10)));
      real l_sum_141 = RAdd(l_basisEval_36,RAdd(RMul(-0.1e1,l_prod_140),RAdd(RMul(-0.1e1,l_prod_139),RMul(-0.1e1,l_prod_138))));
      real l_basisEval_142 = RMul(0.1e1,l_prod_138);
      real l_basisEval_143 = RMul(0.1e1,l_prod_139);
      real l_basisEval_144 = RMul(0.1e1,l_prod_140);
      vec3{4} v_145 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_15,l_sum_141),RMul(l_dof_load_20,l_basisEval_142)),RMul(l_dof_load_25,l_basisEval_143)),RMul(l_dof_load_30,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_16,l_sum_141),RMul(l_dof_load_21,l_basisEval_142)),RMul(l_dof_load_26,l_basisEval_143)),RMul(l_dof_load_31,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_141),RMul(l_dof_load_22,l_basisEval_142)),RMul(l_dof_load_27,l_basisEval_143)),RMul(l_dof_load_32,l_basisEval_144))),LOAD_0(p_pos_6));
      vec3{4} v_146 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,l_r_111),l_r_112),l_r_113),RMul(0.1e1,l_r_98)),l_r_114),RMul(-0.1e1,l_r_104)),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,l_r_118),l_r_119),l_r_120),RMul(0.1e1,l_r_100)),l_r_121),RMul(-0.1e1,l_r_106)),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,l_r_125),l_r_126),l_r_127),RMul(0.1e1,l_r_102)),l_r_128),RMul(-0.1e1,l_r_108)),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,RMul(-0.1e1,l_r_92)),l_r_112),l_r_113),l_r_131),RMul(0.1e1,l_r_103)),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,RMul(-0.1e1,l_r_94)),l_r_119),l_r_120),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,RMul(-0.1e1,l_r_96)),l_r_126),l_r_127),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_110,RMul(0.1e1,l_r_91)),l_r_111),RMul(-0.1e1,l_r_97)),l_r_113),l_r_131),l_r_114),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_117,RMul(0.1e1,l_r_93)),l_r_118),RMul(-0.1e1,l_r_99)),l_r_120),l_r_133),l_r_121),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_124,RMul(0.1e1,l_r_95)),l_r_125),RMul(-0.1e1,l_r_101)),l_r_127),l_r_135),l_r_128),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145));
      vec3{4} v_147 = VSub<3,4>(v_10,v_146);
      vec3{4} v_148 = v_147;
      if (GTE<real>(0.1e-7,Sqrt(VDot<3,4>(v_146,v_146)))) {
        vec3{4} v_149 = VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),v_148);
        if (BAnd(GT<real>(0.1e1,VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_148)),BAnd(GT<real>(VIndex<3,4,0>(v_149),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_149),-0.e0),GT<real>(VIndex<3,4,2>(v_149),-0.e0))))) {
          tensor[3] _arg_150 = PACK(v_148);
          return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,l_cellInt_8,_arg_150,p_pos_6)
        }
      }
      int l_newtonInt_151 = IAdd(l_newtonInt_9,1);
      if (GTE<int>(l_newtonInt_151,16)) {
        int l_cellInt_152;
        if (GTE<int>(l_cellInt_8,l_numCell_7)) {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
        } else {
          l_cellInt_152 = IAdd(l_cellInt_8,1);
        }
        l_cellInt_153 = l_cellInt_152;
        l_newtonInt_154 = 0;
      } else {
        l_cellInt_153 = l_cellInt_8;
        l_newtonInt_154 = l_newtonInt_151;
      }
      l_cellInt_8 = l_cellInt_153;
      l_newtonInt_9 = l_newtonInt_154;
      v_10 = v_148;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_159;
    femData(MeshCell)[] l__t_155;
    l__t_155 = <femData(MeshCell)[]>{};
    for i__t_156 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_155 = Append<femData(MeshCell),femData(MeshCell)>(l__t_155,LoadFem<femData(MeshCell)>(globals.a,i__t_156));
    }
    femData(FemFunc) l_c_157 = LoadFem<femData(FemFunc)>(globals.0c0431_intermedateGlobal,LoadFem<femData(Space)>(globals.0b042F_intermedateGlobal,globals.a));
    femData(Space) l__t_158 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_157);
    l_I_159 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_160 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_161 = Sqrt(VDot<3,4>(v_160,v_160));
    globals.camDist = l_camDist_161;
    real l_op1_e3_l_9_162 = RDiv(0.1e1,l_camDist_161);
    vec3{4} v_163 = VScale<3,4>(l_op1_e3_l_9_162,v_160);
    globals.camN = PACK(v_163);
    real l_r_165 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_166 = RMul(0.e0,l_r_165);
    real l_r_167 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_168 = RMul(0.e0,l_r_167);
    real l_r_169 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_170 = RMul(0.e0,l_r_169);
    real l_r_171 = RAdd(l_r_166,l_r_168);
    real l_r_172 = RAdd(l_r_171,l_r_170);
    vec3{4} v_173 = VEC3{4}(VDot<3,4>(v_160,VEC3{4}(l_r_172,RAdd(l_r_171,RMul(0.1e1,l_r_169)),RAdd(RAdd(l_r_166,RMul(-0.1e1,l_r_167)),l_r_170))),VDot<3,4>(v_160,VEC3{4}(RAdd(l_r_171,RMul(-0.1e1,l_r_169)),l_r_172,RAdd(RAdd(RMul(0.1e1,l_r_165),l_r_168),l_r_170))),VDot<3,4>(v_160,VEC3{4}(RAdd(RAdd(l_r_166,RMul(0.1e1,l_r_167)),l_r_170),RAdd(RAdd(RMul(-0.1e1,l_r_165),l_r_168),l_r_170),l_r_172)));
    real l_op1_e3_l_38_174 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_162,l_op1_e3_l_9_162),VDot<3,4>(v_173,v_173))));
    vec3{4} v_175 = VScale<3,4>(l_op1_e3_l_38_174,VScale<3,4>(l_op1_e3_l_9_162,v_173));
    globals.camU = PACK(v_175);
    real l_r_177 = VIndex<3,4,0>(v_160);
    real l_r_178 = RMul(0.e0,l_r_177);
    real l_r_179 = VIndex<3,4,1>(v_160);
    real l_r_180 = RMul(0.e0,l_r_179);
    real l_r_181 = VIndex<3,4,2>(v_160);
    real l_r_182 = RMul(0.e0,l_r_181);
    real l_r_183 = RAdd(l_r_178,l_r_180);
    real l_r_184 = RAdd(l_r_183,l_r_182);
    vec3{4} v_185 = VScale<3,4>(l_op1_e3_l_9_162,VEC3{4}(VDot<3,4>(v_173,VEC3{4}(l_r_184,RAdd(l_r_183,RMul(0.1e1,l_r_181)),RAdd(RAdd(l_r_178,RMul(-0.1e1,l_r_179)),l_r_182))),VDot<3,4>(v_173,VEC3{4}(RAdd(l_r_183,RMul(-0.1e1,l_r_181)),l_r_184,RAdd(RAdd(RMul(0.1e1,l_r_177),l_r_180),l_r_182))),VDot<3,4>(v_173,VEC3{4}(RAdd(RAdd(l_r_178,RMul(0.1e1,l_r_179)),l_r_182),RAdd(RAdd(RMul(-0.1e1,l_r_177),l_r_180),l_r_182),l_r_184))));
    real l_r_186 = RMul(l_op1_e3_l_38_174,l_op1_e3_l_9_162);
    real l_r_187 = RMul(l_r_186,VIndex<3,4,0>(v_185));
    real l_r_188 = RMul(l_r_186,VIndex<3,4,1>(v_185));
    real l_r_189 = RMul(l_r_186,VIndex<3,4,2>(v_185));
    globals.camV = PACK(VEC3{4}(l_r_187,l_r_188,l_r_189));
    real l_op1_e3_l_10_191 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_191,l_camDist_161);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_191),l_camDist_161),IntToReal(globals.iresV));
    real l_r_192 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_193 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_194 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_175),l_r_192),RMul(l_r_187,l_r_193)),RMul(VIndex<3,4,0>(v_163),l_r_194)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_175),l_r_192),RMul(l_r_188,l_r_193)),RMul(VIndex<3,4,1>(v_163),l_r_194)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_175),l_r_192),RMul(l_r_189,l_r_193)),RMul(VIndex<3,4,2>(v_163),l_r_194)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_158);
    globals._tX = l__t_158;
    globals.c = l_c_157;
    globals.I = l_I_159;
  }
//***** STRAND *****
strand raycast (int p_ui_196,int p_vi_197) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_198 = RNeg(globals.camUmax);
    real l_rayU_199 = RAdd(l_op1_e3_l_9_198,RMul(RDiv(RSub(IntToReal(p_ui_196),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_198)));
    real l_rayV_200 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_197),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_201 = VAdd<3,4>(VScale<3,4>(l_rayU_199,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_200,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_202 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_199;
    self.rayV = l_rayV_200;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_202,VIndex<3,4,0>(v_201)),RMul(l_r_202,VIndex<3,4,1>(v_201)),RMul(l_r_202,VIndex<3,4,2>(v_201)))));
    self.transp = 0.1e1;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.gray = 0.e0;
    self.ui = p_ui_196;
    self.vi = p_vi_197;
  }
  update (globals) {
    real l_transp_439;
    real l_transp_437;
    vec3{4} v_436;
    if (globals.debug) {
      bool l__t_206;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_206 = true;
      } else {
        l__t_206 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_206) {
        stabilize;
      }
    }
    vec3{4} v_207 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_208 = VIndex<3,4,0>(v_207);
    vec3{4} v_209 = v_207;
    if (LTE<real>(0.e0,l__t_208)) {
      real l_transp_435;
      vec3{4} v_434;
      if (LTE<real>(l__t_208,0.1e1)) {
        real l_transp_433;
        vec3{4} v_432;
        real l__t_210 = VIndex<3,4,1>(v_209);
        if (LTE<real>(0.e0,l__t_210)) {
          real l_transp_431;
          vec3{4} v_430;
          if (LTE<real>(l__t_210,0.1e1)) {
            real l_transp_429;
            vec3{4} v_428;
            real l__t_211 = VIndex<3,4,2>(v_209);
            if (LTE<real>(0.e0,l__t_211)) {
              real l_transp_427;
              vec3{4} v_426;
              if (LTE<real>(l__t_211,0.1e1)) {
                real l_transp_425;
                vec3{4} v_424;
                tensor[3] _arg_212 = PACK(v_209);
                femData(MeshPos) l_p_213 = findPos$333C(globals.a,_arg_212);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_213)) {
                  real l_transp_423;
                  vec3{4} v_422;
                  tensor[3] _arg_214 = PACK(v_209);
                  femData(MeshPos) l_callFindPos_215 = findPos$333C(globals._t,_arg_214);
                  int l_intPos_216 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_215);
                  &tensor[3] l_refPos_217 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_215);
                  int l_mulRes_218 = IMul(l_intPos_216,10);
                  int t_219 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_218);
                  int t_220 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,1));
                  int t_221 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,2));
                  int t_222 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,3));
                  int t_223 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,4));
                  int t_224 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,5));
                  int t_225 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,6));
                  int t_226 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,7));
                  int t_227 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,8));
                  int t_228 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,9));
                  real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_228));
                  real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_227));
                  real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_226));
                  real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_225));
                  real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_224));
                  real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_223));
                  real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_222));
                  real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_221));
                  real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_220));
                  real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_219));
                  vec4 v_239 = VEC4(t_238,t_237,t_236,t_235);
                  vec4 v_240 = VEC4(t_234,t_233,t_232,t_231);
                  vec2 v_241 = VEC2(t_230,t_229);
                  real l_varAcc_242 = VIndex<3,4,0>(LOAD_0(l_refPos_217));
                  real l_varAcc_243 = VIndex<3,4,1>(LOAD_0(l_refPos_217));
                  real l_varAcc_244 = VIndex<3,4,2>(LOAD_0(l_refPos_217));
                  real l_prod_245 = RMul(0.1e1,0.1e1);
                  real l_prod_246 = RMul(RMul(l_varAcc_242,l_varAcc_242),l_prod_245);
                  real l_prod_247 = RMul(l_varAcc_243,0.1e1);
                  real l_prod_248 = RMul(l_varAcc_242,l_prod_247);
                  real l_prod_249 = RMul(0.1e1,l_varAcc_244);
                  real l_prod_250 = RMul(l_varAcc_242,l_prod_249);
                  real l_prod_251 = RMul(l_varAcc_242,l_prod_245);
                  real l_prod_252 = RMul(0.1e1,RMul(RMul(l_varAcc_243,l_varAcc_243),0.1e1));
                  real l_prod_253 = RMul(0.1e1,RMul(l_varAcc_243,l_varAcc_244));
                  real l_prod_254 = RMul(0.1e1,l_prod_247);
                  real l_prod_255 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_244,l_varAcc_244)));
                  real l_prod_256 = RMul(0.1e1,l_prod_249);
                  real l_prod_257 = RMul(0.1e1,l_prod_245);
                  real l_mult_258 = RMul(0.1e1,l_prod_257);
                  real l_mult_259 = RMul(0.2e1,l_prod_255);
                  real l_mult_260 = RMul(0.4e1,l_prod_253);
                  real l_mult_261 = RMul(0.2e1,l_prod_252);
                  real l_mult_262 = RMul(0.4e1,l_prod_250);
                  real l_mult_263 = RMul(0.4e1,l_prod_248);
                  real l_mult_264 = RMul(0.2e1,l_prod_246);
                  real l_mult_265 = RMul(0.4e1,l_prod_256);
                  real l_mult_266 = RMul(-0.4e1,l_prod_253);
                  real l_mult_267 = RMul(-0.4e1,l_prod_250);
                  real l_mult_268 = RMul(0.4e1,l_prod_254);
                  real l_mult_269 = RMul(-0.4e1,l_prod_248);
                  real l_mult_270 = RMul(0.4e1,l_prod_251);
                  real l_compositionl_271 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_260,l_mult_262,l_mult_263,RAdd(l_mult_265,RAdd(RMul(-0.4e1,l_prod_255),RAdd(l_mult_266,l_mult_267))))),RAdd(VDot<2,2>(v_241,VEC2(RAdd(l_mult_268,RAdd(l_mult_266,RAdd(RMul(-0.4e1,l_prod_252),l_mult_269))),RAdd(l_mult_270,RAdd(l_mult_267,RAdd(l_mult_269,RMul(-0.4e1,l_prod_246)))))),VDot<4,4>(v_239,VEC4(RAdd(l_mult_258,RAdd(RMul(-0.3e1,l_prod_256),RAdd(l_mult_259,RAdd(RMul(-0.3e1,l_prod_254),RAdd(l_mult_260,RAdd(l_mult_261,RAdd(RMul(-0.3e1,l_prod_251),RAdd(l_mult_262,RAdd(l_mult_263,l_mult_264))))))))),RAdd(RMul(-0.1e1,l_prod_251),l_mult_264),RAdd(RMul(-0.1e1,l_prod_254),l_mult_261),RAdd(RMul(-0.1e1,l_prod_256),l_mult_259)))));
                  real l_sum_272 = RAdd(RMul(-0.3e1,l_prod_257),RAdd(l_mult_265,RAdd(l_mult_268,l_mult_270)));
                  real l_mult_273 = RMul(-0.1e1,l_prod_257);
                  real l_basisEval_274 = RMul(-0.4e1,l_prod_256);
                  real l_basisEval_275 = RMul(-0.4e1,l_prod_254);
                  real l_mult_276 = RMul(0.4e1,l_prod_257);
                  real l_mult_277 = RMul(-0.4e1,l_prod_251);
                  real l_vdot_278 = RAdd(VDot<4,4>(v_240,VEC4(0.e0,l_mult_265,l_mult_268,l_basisEval_274)),RAdd(VDot<2,2>(v_241,VEC2(l_basisEval_275,RAdd(l_mult_276,RAdd(l_basisEval_274,RAdd(l_basisEval_275,RMul(-0.8e1,l_prod_251)))))),VDot<4,4>(v_239,VEC4(l_sum_272,RAdd(l_mult_273,l_mult_270),0.e0,0.e0))));
                  real l_vdot_279 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_265,0.e0,l_mult_270,l_basisEval_274)),RAdd(VDot<2,2>(v_241,VEC2(RAdd(l_mult_276,RAdd(l_basisEval_274,RAdd(RMul(-0.8e1,l_prod_254),l_mult_277))),l_mult_277)),VDot<4,4>(v_239,VEC4(l_sum_272,0.e0,RAdd(l_mult_273,l_mult_268),0.e0))));
                  real l_vdot_280 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_268,l_mult_270,0.e0,RAdd(l_mult_276,RAdd(RMul(-0.8e1,l_prod_256),RAdd(l_basisEval_275,l_mult_277))))),RAdd(VDot<2,2>(v_241,VEC2(l_basisEval_275,l_mult_277)),VDot<4,4>(v_239,VEC4(l_sum_272,0.e0,0.e0,RAdd(l_mult_273,l_mult_265)))));
                  int l_mulRes_281 = IMul(l_intPos_216,4);
                  int t_282 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_281);
                  int l_mulRes_283 = IMul(3,t_282);
                  int t_284 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,1));
                  int l_mulRes_285 = IMul(3,t_284);
                  real l_dof_load_286 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_285);
                  real l_dof_load_287 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_285));
                  real l_dof_load_288 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_285));
                  int t_289 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,2));
                  int l_mulRes_290 = IMul(3,t_289);
                  real l_dof_load_291 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_290);
                  real l_dof_load_292 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_290));
                  real l_dof_load_293 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_290));
                  int t_294 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,3));
                  int l_mulRes_295 = IMul(3,t_294);
                  real l_dof_load_296 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_295);
                  real l_dof_load_297 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_295));
                  real l_dof_load_298 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_295));
                  real t_299 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_283);
                  real l_r_300 = RMul(t_299,l_mult_273);
                  real l_r_301 = RMul(l_dof_load_291,0.e0);
                  real l_r_302 = RMul(l_dof_load_296,0.e0);
                  real l_r_303 = RAdd(RAdd(RAdd(l_r_300,RMul(l_dof_load_286,l_mult_258)),l_r_301),l_r_302);
                  real l_r_304 = RAdd(l_r_300,RMul(l_dof_load_286,0.e0));
                  real l_r_305 = RAdd(RAdd(l_r_304,RMul(l_dof_load_291,l_mult_258)),l_r_302);
                  real l_r_306 = RAdd(RAdd(l_r_304,l_r_301),RMul(l_dof_load_296,l_mult_258));
                  real t_307 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_283));
                  real l_r_308 = RMul(t_307,l_mult_273);
                  real l_r_309 = RMul(l_dof_load_292,0.e0);
                  real l_r_310 = RMul(l_dof_load_297,0.e0);
                  real l_r_311 = RAdd(RAdd(RAdd(l_r_308,RMul(l_dof_load_287,l_mult_258)),l_r_309),l_r_310);
                  real l_r_312 = RAdd(l_r_308,RMul(l_dof_load_287,0.e0));
                  real l_r_313 = RAdd(RAdd(l_r_312,RMul(l_dof_load_292,l_mult_258)),l_r_310);
                  real l_r_314 = RAdd(RAdd(l_r_312,l_r_309),RMul(l_dof_load_297,l_mult_258));
                  real t_315 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_283));
                  real l_r_316 = RMul(t_315,l_mult_273);
                  real l_r_317 = RMul(l_dof_load_293,0.e0);
                  real l_r_318 = RMul(l_dof_load_298,0.e0);
                  real l_r_319 = RAdd(RAdd(RAdd(l_r_316,RMul(l_dof_load_288,l_mult_258)),l_r_317),l_r_318);
                  real l_r_320 = RAdd(l_r_316,RMul(l_dof_load_288,0.e0));
                  real l_r_321 = RAdd(RAdd(l_r_320,RMul(l_dof_load_293,l_mult_258)),l_r_318);
                  real l_r_322 = RAdd(RAdd(l_r_320,l_r_317),RMul(l_dof_load_298,l_mult_258));
                  real l_r_323 = RMul(0.e0,l_r_303);
                  real l_r_324 = RMul(0.e0,l_r_311);
                  real l_r_325 = RMul(0.e0,l_r_319);
                  real l_r_326 = RAdd(l_r_323,l_r_324);
                  real l_r_327 = RAdd(l_r_326,l_r_325);
                  real l_r_328 = RMul(0.e0,l_r_305);
                  real l_r_329 = RMul(0.e0,l_r_313);
                  real l_r_330 = RMul(0.e0,l_r_321);
                  real l_r_331 = RAdd(l_r_328,l_r_329);
                  real l_r_332 = RAdd(l_r_331,l_r_330);
                  real l_r_333 = RMul(0.e0,l_r_306);
                  real l_r_334 = RMul(0.e0,l_r_314);
                  real l_r_335 = RMul(0.e0,l_r_322);
                  real l_r_336 = RAdd(l_r_333,l_r_334);
                  real l_r_337 = RAdd(l_r_336,l_r_335);
                  real l_r_338 = RAdd(l_r_326,RMul(-0.1e1,l_r_319));
                  real l_r_339 = RAdd(l_r_331,RMul(-0.1e1,l_r_321));
                  real l_r_340 = RAdd(l_r_336,RMul(-0.1e1,l_r_322));
                  real l_r_341 = RAdd(RAdd(l_r_323,RMul(0.1e1,l_r_311)),l_r_325);
                  real l_r_342 = RAdd(RAdd(l_r_328,RMul(0.1e1,l_r_313)),l_r_330);
                  real l_r_343 = RAdd(RAdd(l_r_333,RMul(0.1e1,l_r_314)),l_r_335);
                  real l_r_344 = RAdd(l_r_326,RMul(0.1e1,l_r_319));
                  real l_r_345 = RAdd(l_r_331,RMul(0.1e1,l_r_321));
                  real l_r_346 = RAdd(l_r_336,RMul(0.1e1,l_r_322));
                  real l_r_347 = RAdd(RAdd(RMul(-0.1e1,l_r_303),l_r_324),l_r_325);
                  real l_r_348 = RAdd(RAdd(RMul(-0.1e1,l_r_305),l_r_329),l_r_330);
                  real l_r_349 = RAdd(RAdd(RMul(-0.1e1,l_r_306),l_r_334),l_r_335);
                  real l_r_350 = RAdd(RAdd(l_r_323,RMul(-0.1e1,l_r_311)),l_r_325);
                  real l_r_351 = RAdd(RAdd(l_r_328,RMul(-0.1e1,l_r_313)),l_r_330);
                  real l_r_352 = RAdd(RAdd(l_r_333,RMul(-0.1e1,l_r_314)),l_r_335);
                  real l_r_353 = RAdd(RAdd(RMul(0.1e1,l_r_303),l_r_324),l_r_325);
                  real l_r_354 = RAdd(RAdd(RMul(0.1e1,l_r_305),l_r_329),l_r_330);
                  real l_r_355 = RAdd(RAdd(RMul(0.1e1,l_r_306),l_r_334),l_r_335);
                  real l_r_356 = RAdd(RAdd(RMul(l_r_303,l_r_332),RMul(l_r_311,l_r_345)),RMul(l_r_319,l_r_351));
                  real l_r_357 = RAdd(RAdd(RMul(l_r_303,l_r_337),RMul(l_r_311,l_r_346)),RMul(l_r_319,l_r_352));
                  real l_r_358 = RAdd(RAdd(RMul(l_r_303,l_r_339),RMul(l_r_311,l_r_332)),RMul(l_r_319,l_r_354));
                  real l_r_359 = RAdd(RAdd(RMul(l_r_303,l_r_340),RMul(l_r_311,l_r_337)),RMul(l_r_319,l_r_355));
                  real l_r_360 = RAdd(RAdd(RMul(l_r_303,l_r_342),RMul(l_r_311,l_r_348)),RMul(l_r_319,l_r_332));
                  real l_r_361 = RAdd(RAdd(RMul(l_r_303,l_r_343),RMul(l_r_311,l_r_349)),RMul(l_r_319,l_r_337));
                  real l_r_362 = RAdd(RAdd(RMul(l_r_305,l_r_327),RMul(l_r_313,l_r_344)),RMul(l_r_321,l_r_350));
                  real l_r_363 = RAdd(RAdd(RMul(l_r_305,l_r_337),RMul(l_r_313,l_r_346)),RMul(l_r_321,l_r_352));
                  real l_r_364 = RAdd(RAdd(RMul(l_r_305,l_r_338),RMul(l_r_313,l_r_327)),RMul(l_r_321,l_r_353));
                  real l_r_365 = RAdd(RAdd(RMul(l_r_305,l_r_340),RMul(l_r_313,l_r_337)),RMul(l_r_321,l_r_355));
                  real l_r_366 = RAdd(RAdd(RMul(l_r_305,l_r_341),RMul(l_r_313,l_r_347)),RMul(l_r_321,l_r_327));
                  real l_r_367 = RAdd(RAdd(RMul(l_r_305,l_r_343),RMul(l_r_313,l_r_349)),RMul(l_r_321,l_r_337));
                  real l_r_368 = RAdd(RAdd(RMul(l_r_306,l_r_327),RMul(l_r_314,l_r_344)),RMul(l_r_322,l_r_350));
                  real l_r_369 = RAdd(RAdd(RMul(l_r_306,l_r_332),RMul(l_r_314,l_r_345)),RMul(l_r_322,l_r_351));
                  real l_r_370 = RAdd(RAdd(RMul(l_r_306,l_r_338),RMul(l_r_314,l_r_327)),RMul(l_r_322,l_r_353));
                  real l_r_371 = RAdd(RAdd(RMul(l_r_306,l_r_339),RMul(l_r_314,l_r_332)),RMul(l_r_322,l_r_354));
                  real l_r_372 = RAdd(RAdd(RMul(l_r_306,l_r_341),RMul(l_r_314,l_r_347)),RMul(l_r_322,l_r_327));
                  real l_r_373 = RAdd(RAdd(RMul(l_r_306,l_r_342),RMul(l_r_314,l_r_348)),RMul(l_r_322,l_r_332));
                  vec3{4} v_374 = VEC3{4}(l_r_305,l_r_313,l_r_321);
                  real l_r_375 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_327),RMul(l_r_311,l_r_344)),RMul(l_r_319,l_r_350)));
                  real l_r_376 = RMul(0.e0,l_r_357);
                  real l_r_377 = RMul(0.e0,l_r_362);
                  real l_r_378 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_332),RMul(l_r_313,l_r_345)),RMul(l_r_321,l_r_351)));
                  real l_r_379 = RMul(0.e0,l_r_368);
                  real l_r_380 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_337),RMul(l_r_314,l_r_346)),RMul(l_r_322,l_r_352)));
                  real l_r_381 = RAdd(l_r_375,RMul(0.e0,l_r_356));
                  real l_r_382 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_338),RMul(l_r_311,l_r_327)),RMul(l_r_319,l_r_353)));
                  real l_r_383 = RMul(0.e0,l_r_359);
                  real l_r_384 = RMul(0.e0,l_r_364);
                  real l_r_385 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_339),RMul(l_r_313,l_r_332)),RMul(l_r_321,l_r_354)));
                  real l_r_386 = RMul(0.e0,l_r_370);
                  real l_r_387 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_340),RMul(l_r_314,l_r_337)),RMul(l_r_322,l_r_355)));
                  real l_r_388 = RAdd(l_r_382,RMul(0.e0,l_r_358));
                  real l_r_389 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_341),RMul(l_r_311,l_r_347)),RMul(l_r_319,l_r_327)));
                  real l_r_390 = RMul(0.e0,l_r_361);
                  real l_r_391 = RMul(0.e0,l_r_366);
                  real l_r_392 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_342),RMul(l_r_313,l_r_348)),RMul(l_r_321,l_r_332)));
                  real l_r_393 = RMul(0.e0,l_r_372);
                  real l_r_394 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_343),RMul(l_r_314,l_r_349)),RMul(l_r_322,l_r_337)));
                  real l_r_395 = RAdd(l_r_389,RMul(0.e0,l_r_360));
                  real l_r_396 = RMul(0.e0,l_r_363);
                  real l_r_397 = RMul(0.e0,l_r_369);
                  real l_r_398 = RMul(0.e0,l_r_365);
                  real l_r_399 = RMul(0.e0,l_r_371);
                  real l_r_400 = RMul(0.e0,l_r_367);
                  real l_r_401 = RMul(0.e0,l_r_373);
                  real l_op1_e3_l_36_402 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_303,l_r_311,l_r_319),VEC3{4}(VDot<3,4>(v_374,VEC3{4}(l_r_337,l_r_346,l_r_352)),VDot<3,4>(v_374,VEC3{4}(l_r_340,l_r_337,l_r_355)),VDot<3,4>(v_374,VEC3{4}(l_r_343,l_r_349,l_r_337)))));
                  vec3{4} v_403 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_381,l_r_376),l_r_377),l_r_378),RMul(0.1e1,l_r_363)),l_r_379),RMul(-0.1e1,l_r_369)),l_r_380),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_381,RMul(-0.1e1,l_r_357)),l_r_377),l_r_378),l_r_396),RMul(0.1e1,l_r_368)),l_r_397),l_r_380),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_375,RMul(0.1e1,l_r_356)),l_r_376),RMul(-0.1e1,l_r_362)),l_r_378),l_r_396),l_r_379),l_r_397),l_r_380),l_op1_e3_l_36_402))),RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_388,l_r_383),l_r_384),l_r_385),RMul(0.1e1,l_r_365)),l_r_386),RMul(-0.1e1,l_r_371)),l_r_387),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_388,RMul(-0.1e1,l_r_359)),l_r_384),l_r_385),l_r_398),RMul(0.1e1,l_r_370)),l_r_399),l_r_387),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_382,RMul(0.1e1,l_r_358)),l_r_383),RMul(-0.1e1,l_r_364)),l_r_385),l_r_398),l_r_386),l_r_399),l_r_387),l_op1_e3_l_36_402))),RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_395,l_r_390),l_r_391),l_r_392),RMul(0.1e1,l_r_367)),l_r_393),RMul(-0.1e1,l_r_373)),l_r_394),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_395,RMul(-0.1e1,l_r_361)),l_r_391),l_r_392),l_r_400),RMul(0.1e1,l_r_372)),l_r_401),l_r_394),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_389,RMul(0.1e1,l_r_360)),l_r_390),RMul(-0.1e1,l_r_366)),l_r_392),l_r_400),l_r_393),l_r_401),l_r_394),l_op1_e3_l_36_402)))));
                  real l_op1_e3_l_57_404 = Sqrt(VDot<3,4>(v_403,v_403));
                  real l_a_405 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_271,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_404))))));
                  vec3{4} v_406 = v_403;
                  if (GT<real>(l_a_405,0.e0)) {
                    tensor[3,2] l_voxels_416;
                    real l_imgPos_407 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_271),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_408 = RFloor(l_imgPos_407);
                    real l_f_409 = RSub(l_imgPos_407,l_nd_408);
                    int l_n_410 = RealToInt(l_nd_408);
                    real l__t_411 = MathFn<pow>(RSub(0.1e1,l_a_405),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_412 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_413 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_404),VDot<3,4>(v_406,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_410,globals.I)) {
                      int l_offp_414 = IMul(3,l_n_410);
                      int l_offp_415 = IMul(3,IAdd(l_n_410,1));
                      l_voxels_416 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_414),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_415),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_415,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_415,2))];
                    } else {
                      int l_offp_417 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_410));
                      int l_offp_418 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_410,1)));
                      l_voxels_416 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_417),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_418),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_417,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_418,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_417,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_418,2))];
                    }
                    vec2 v_419 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_409,RSub(l_f_409,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_420 = RSub(0.1e1,l__t_411);
                    real l_r_421 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_420),RAdd(0.11e1,l_op1_e3_l_19_412)),RAdd(globals.phongKa,l_op1_e3_l_20_413));
                    v_422 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_416)),v_419)),RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_416)),v_419)),RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_416)),v_419))));
                    l_transp_423 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_420));
                  } else {
                    v_422 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_423 = self.transp;
                  }
                  v_424 = v_422;
                  l_transp_425 = l_transp_423;
                } else {
                  v_424 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_425 = self.transp;
                }
                v_426 = v_424;
                l_transp_427 = l_transp_425;
              } else {
                v_426 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_427 = self.transp;
              }
              v_428 = v_426;
              l_transp_429 = l_transp_427;
            } else {
              v_428 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_429 = self.transp;
            }
            v_430 = v_428;
            l_transp_431 = l_transp_429;
          } else {
            v_430 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_431 = self.transp;
          }
          v_432 = v_430;
          l_transp_433 = l_transp_431;
        } else {
          v_432 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_433 = self.transp;
        }
        v_434 = v_432;
        l_transp_435 = l_transp_433;
      } else {
        v_434 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_435 = self.transp;
      }
      v_436 = v_434;
      l_transp_437 = l_transp_435;
    } else {
      v_436 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_437 = self.transp;
    }
    if (LT<real>(l_transp_437,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_436);
      stabilize;
    } else {
      l_transp_439 = l_transp_437;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_439;
      self.rgb = PACK(v_436);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_439;
    self.rgb = PACK(v_436);
    active;
  }
  stabilize (world, globals) {
    vec4 v_443;
    real l_a_442 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_442,0.e0)) {
      v_443 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_442),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_442),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_442),l_a_442);
    } else {
      v_443 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_444 = PACK(v_443);
          print(l_a_442,TensorRef<[4]>(_arg_444));
        }
      }
    }
    self.rgba = PACK(v_443);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_446 = 0 to ISub(globals.iresV,1) {
      for i_ui_447 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_447,i_vi_446);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b042F_intermedateGlobal;
input femData(FemFunc) 0c0431_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[-0.3e1,-0.3e1,0.3e1];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_10;
    int l_newtonInt_9;
    int l_cellInt_8;
    int l_numCell_7 = ISub(ExtractFemItem<int,NumCell(Mesh)>(p_mesh_5),1);
    l_cellInt_8 = ExtractFemItem<int,StartCell(Mesh)>(p_mesh_5);
    l_newtonInt_9 = 0;
    v_10 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    for i_itter_11 = 0 to IMul(16,l_numCell_7) {
      int l_newtonInt_154;
      int l_cellInt_153;
      int l_mulRes_12 = IMul(l_cellInt_8,4);
      int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_12);
      int l_mulRes_14 = IMul(3,t_13);
      real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_14);
      real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_14));
      real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_14));
      int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,1));
      int l_mulRes_19 = IMul(3,t_18);
      real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_19);
      real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_19));
      real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_19));
      int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,2));
      int l_mulRes_24 = IMul(3,t_23);
      real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_24);
      real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_24));
      real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_24));
      int t_28 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_12,3));
      int l_mulRes_29 = IMul(3,t_28);
      real l_dof_load_30 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_29);
      real l_dof_load_31 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_29));
      real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_29));
      real l_prod_33 = RMul(0.1e1,0.1e1);
      real l_prod_34 = RMul(0.1e1,l_prod_33);
      real l_basisEval_35 = RMul(-0.1e1,l_prod_34);
      real l_basisEval_36 = RMul(0.1e1,l_prod_34);
      real l_r_37 = RMul(l_dof_load_15,l_basisEval_35);
      real l_r_38 = RMul(l_dof_load_25,0.e0);
      real l_r_39 = RMul(l_dof_load_30,0.e0);
      real l_r_40 = RAdd(RAdd(RAdd(l_r_37,RMul(l_dof_load_20,l_basisEval_36)),l_r_38),l_r_39);
      real l_r_41 = RAdd(l_r_37,RMul(l_dof_load_20,0.e0));
      real l_r_42 = RAdd(RAdd(l_r_41,RMul(l_dof_load_25,l_basisEval_36)),l_r_39);
      real l_r_43 = RAdd(RAdd(l_r_41,l_r_38),RMul(l_dof_load_30,l_basisEval_36));
      real l_r_44 = RMul(l_dof_load_16,l_basisEval_35);
      real l_r_45 = RMul(l_dof_load_26,0.e0);
      real l_r_46 = RMul(l_dof_load_31,0.e0);
      real l_r_47 = RAdd(RAdd(RAdd(l_r_44,RMul(l_dof_load_21,l_basisEval_36)),l_r_45),l_r_46);
      real l_r_48 = RAdd(l_r_44,RMul(l_dof_load_21,0.e0));
      real l_r_49 = RAdd(RAdd(l_r_48,RMul(l_dof_load_26,l_basisEval_36)),l_r_46);
      real l_r_50 = RAdd(RAdd(l_r_48,l_r_45),RMul(l_dof_load_31,l_basisEval_36));
      real l_r_51 = RMul(l_dof_load_17,l_basisEval_35);
      real l_r_52 = RMul(l_dof_load_27,0.e0);
      real l_r_53 = RMul(l_dof_load_32,0.e0);
      real l_r_54 = RAdd(RAdd(RAdd(l_r_51,RMul(l_dof_load_22,l_basisEval_36)),l_r_52),l_r_53);
      real l_r_55 = RAdd(l_r_51,RMul(l_dof_load_22,0.e0));
      real l_r_56 = RAdd(RAdd(l_r_55,RMul(l_dof_load_27,l_basisEval_36)),l_r_53);
      real l_r_57 = RAdd(RAdd(l_r_55,l_r_52),RMul(l_dof_load_32,l_basisEval_36));
      real l_r_58 = RMul(0.e0,l_r_40);
      real l_r_59 = RMul(0.e0,l_r_47);
      real l_r_60 = RMul(0.e0,l_r_54);
      real l_r_61 = RAdd(l_r_58,l_r_59);
      real l_r_62 = RAdd(l_r_61,l_r_60);
      real l_r_63 = RMul(0.e0,l_r_42);
      real l_r_64 = RMul(0.e0,l_r_49);
      real l_r_65 = RMul(0.e0,l_r_56);
      real l_r_66 = RAdd(l_r_63,l_r_64);
      real l_r_67 = RAdd(l_r_66,l_r_65);
      real l_r_68 = RMul(0.e0,l_r_43);
      real l_r_69 = RMul(0.e0,l_r_50);
      real l_r_70 = RMul(0.e0,l_r_57);
      real l_r_71 = RAdd(l_r_68,l_r_69);
      real l_r_72 = RAdd(l_r_71,l_r_70);
      real l_r_73 = RAdd(l_r_61,RMul(-0.1e1,l_r_54));
      real l_r_74 = RAdd(l_r_66,RMul(-0.1e1,l_r_56));
      real l_r_75 = RAdd(l_r_71,RMul(-0.1e1,l_r_57));
      real l_r_76 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_47)),l_r_60);
      real l_r_77 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_49)),l_r_65);
      real l_r_78 = RAdd(RAdd(l_r_68,RMul(0.1e1,l_r_50)),l_r_70);
      real l_r_79 = RAdd(l_r_61,RMul(0.1e1,l_r_54));
      real l_r_80 = RAdd(l_r_66,RMul(0.1e1,l_r_56));
      real l_r_81 = RAdd(l_r_71,RMul(0.1e1,l_r_57));
      real l_r_82 = RAdd(RAdd(RMul(-0.1e1,l_r_40),l_r_59),l_r_60);
      real l_r_83 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_64),l_r_65);
      real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_43),l_r_69),l_r_70);
      real l_r_85 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_47)),l_r_60);
      real l_r_86 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_49)),l_r_65);
      real l_r_87 = RAdd(RAdd(l_r_68,RMul(-0.1e1,l_r_50)),l_r_70);
      real l_r_88 = RAdd(RAdd(RMul(0.1e1,l_r_40),l_r_59),l_r_60);
      real l_r_89 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_64),l_r_65);
      real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_43),l_r_69),l_r_70);
      real l_r_91 = RAdd(RAdd(RMul(l_r_40,l_r_67),RMul(l_r_47,l_r_80)),RMul(l_r_54,l_r_86));
      real l_r_92 = RAdd(RAdd(RMul(l_r_40,l_r_72),RMul(l_r_47,l_r_81)),RMul(l_r_54,l_r_87));
      real l_r_93 = RAdd(RAdd(RMul(l_r_40,l_r_74),RMul(l_r_47,l_r_67)),RMul(l_r_54,l_r_89));
      real l_r_94 = RAdd(RAdd(RMul(l_r_40,l_r_75),RMul(l_r_47,l_r_72)),RMul(l_r_54,l_r_90));
      real l_r_95 = RAdd(RAdd(RMul(l_r_40,l_r_77),RMul(l_r_47,l_r_83)),RMul(l_r_54,l_r_67));
      real l_r_96 = RAdd(RAdd(RMul(l_r_40,l_r_78),RMul(l_r_47,l_r_84)),RMul(l_r_54,l_r_72));
      real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_62),RMul(l_r_49,l_r_79)),RMul(l_r_56,l_r_85));
      real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_72),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87));
      real l_r_99 = RAdd(RAdd(RMul(l_r_42,l_r_73),RMul(l_r_49,l_r_62)),RMul(l_r_56,l_r_88));
      real l_r_100 = RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_72)),RMul(l_r_56,l_r_90));
      real l_r_101 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_62));
      real l_r_102 = RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_72));
      real l_r_103 = RAdd(RAdd(RMul(l_r_43,l_r_62),RMul(l_r_50,l_r_79)),RMul(l_r_57,l_r_85));
      real l_r_104 = RAdd(RAdd(RMul(l_r_43,l_r_67),RMul(l_r_50,l_r_80)),RMul(l_r_57,l_r_86));
      real l_r_105 = RAdd(RAdd(RMul(l_r_43,l_r_73),RMul(l_r_50,l_r_62)),RMul(l_r_57,l_r_88));
      real l_r_106 = RAdd(RAdd(RMul(l_r_43,l_r_74),RMul(l_r_50,l_r_67)),RMul(l_r_57,l_r_89));
      real l_r_107 = RAdd(RAdd(RMul(l_r_43,l_r_76),RMul(l_r_50,l_r_82)),RMul(l_r_57,l_r_62));
      real l_r_108 = RAdd(RAdd(RMul(l_r_43,l_r_77),RMul(l_r_50,l_r_83)),RMul(l_r_57,l_r_67));
      vec3{4} v_109 = VEC3{4}(l_r_42,l_r_49,l_r_56);
      real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_62),RMul(l_r_47,l_r_79)),RMul(l_r_54,l_r_85)));
      real l_r_111 = RMul(0.e0,l_r_92);
      real l_r_112 = RMul(0.e0,l_r_97);
      real l_r_113 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_67),RMul(l_r_49,l_r_80)),RMul(l_r_56,l_r_86)));
      real l_r_114 = RMul(0.e0,l_r_103);
      real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_72),RMul(l_r_50,l_r_81)),RMul(l_r_57,l_r_87)));
      real l_r_116 = RAdd(l_r_110,RMul(0.e0,l_r_91));
      real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_73),RMul(l_r_47,l_r_62)),RMul(l_r_54,l_r_88)));
      real l_r_118 = RMul(0.e0,l_r_94);
      real l_r_119 = RMul(0.e0,l_r_99);
      real l_r_120 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_67)),RMul(l_r_56,l_r_89)));
      real l_r_121 = RMul(0.e0,l_r_105);
      real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_75),RMul(l_r_50,l_r_72)),RMul(l_r_57,l_r_90)));
      real l_r_123 = RAdd(l_r_117,RMul(0.e0,l_r_93));
      real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_40,l_r_76),RMul(l_r_47,l_r_82)),RMul(l_r_54,l_r_62)));
      real l_r_125 = RMul(0.e0,l_r_96);
      real l_r_126 = RMul(0.e0,l_r_101);
      real l_r_127 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_67)));
      real l_r_128 = RMul(0.e0,l_r_107);
      real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_43,l_r_78),RMul(l_r_50,l_r_84)),RMul(l_r_57,l_r_72)));
      real l_r_130 = RAdd(l_r_124,RMul(0.e0,l_r_95));
      real l_r_131 = RMul(0.e0,l_r_98);
      real l_r_132 = RMul(0.e0,l_r_104);
      real l_r_133 = RMul(0.e0,l_r_100);
      real l_r_134 = RMul(0.e0,l_r_106);
      real l_r_135 = RMul(0.e0,l_r_102);
      real l_r_136 = RMul(0.e0,l_r_108);
      real l_op1_e3_l_21_137 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_40,l_r_47,l_r_54),VEC3{4}(VDot<3,4>(v_109,VEC3{4}(l_r_72,l_r_81,l_r_87)),VDot<3,4>(v_109,VEC3{4}(l_r_75,l_r_72,l_r_90)),VDot<3,4>(v_109,VEC3{4}(l_r_78,l_r_84,l_r_72)))));
      real l_prod_138 = RMul(VIndex<3,4,0>(v_10),l_prod_33);
      real l_prod_139 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_10),0.1e1));
      real l_prod_140 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_10)));
      real l_sum_141 = RAdd(l_basisEval_36,RAdd(RMul(-0.1e1,l_prod_140),RAdd(RMul(-0.1e1,l_prod_139),RMul(-0.1e1,l_prod_138))));
      real l_basisEval_142 = RMul(0.1e1,l_prod_138);
      real l_basisEval_143 = RMul(0.1e1,l_prod_139);
      real l_basisEval_144 = RMul(0.1e1,l_prod_140);
      vec3{4} v_145 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_15,l_sum_141),RMul(l_dof_load_20,l_basisEval_142)),RMul(l_dof_load_25,l_basisEval_143)),RMul(l_dof_load_30,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_16,l_sum_141),RMul(l_dof_load_21,l_basisEval_142)),RMul(l_dof_load_26,l_basisEval_143)),RMul(l_dof_load_31,l_basisEval_144)),RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_141),RMul(l_dof_load_22,l_basisEval_142)),RMul(l_dof_load_27,l_basisEval_143)),RMul(l_dof_load_32,l_basisEval_144))),LOAD_0(p_pos_6));
      vec3{4} v_146 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,l_r_111),l_r_112),l_r_113),RMul(0.1e1,l_r_98)),l_r_114),RMul(-0.1e1,l_r_104)),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,l_r_118),l_r_119),l_r_120),RMul(0.1e1,l_r_100)),l_r_121),RMul(-0.1e1,l_r_106)),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,l_r_125),l_r_126),l_r_127),RMul(0.1e1,l_r_102)),l_r_128),RMul(-0.1e1,l_r_108)),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_116,RMul(-0.1e1,l_r_92)),l_r_112),l_r_113),l_r_131),RMul(0.1e1,l_r_103)),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_123,RMul(-0.1e1,l_r_94)),l_r_119),l_r_120),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_130,RMul(-0.1e1,l_r_96)),l_r_126),l_r_127),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_110,RMul(0.1e1,l_r_91)),l_r_111),RMul(-0.1e1,l_r_97)),l_r_113),l_r_131),l_r_114),l_r_132),l_r_115),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_117,RMul(0.1e1,l_r_93)),l_r_118),RMul(-0.1e1,l_r_99)),l_r_120),l_r_133),l_r_121),l_r_134),l_r_122),l_op1_e3_l_21_137),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_124,RMul(0.1e1,l_r_95)),l_r_125),RMul(-0.1e1,l_r_101)),l_r_127),l_r_135),l_r_128),l_r_136),l_r_129),l_op1_e3_l_21_137)),v_145));
      vec3{4} v_147 = VSub<3,4>(v_10,v_146);
      vec3{4} v_148 = v_147;
      if (GTE<real>(0.1e-7,Sqrt(VDot<3,4>(v_146,v_146)))) {
        vec3{4} v_149 = VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),v_148);
        if (BAnd(GT<real>(0.1e1,VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_148)),BAnd(GT<real>(VIndex<3,4,0>(v_149),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_149),-0.e0),GT<real>(VIndex<3,4,2>(v_149),-0.e0))))) {
          tensor[3] _arg_150 = PACK(v_148);
          return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,l_cellInt_8,_arg_150,p_pos_6)
        }
      }
      int l_newtonInt_151 = IAdd(l_newtonInt_9,1);
      if (GTE<int>(l_newtonInt_151,16)) {
        int l_cellInt_152;
        if (GTE<int>(l_cellInt_8,l_numCell_7)) {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
        } else {
          l_cellInt_152 = IAdd(l_cellInt_8,1);
        }
        l_cellInt_153 = l_cellInt_152;
        l_newtonInt_154 = 0;
      } else {
        l_cellInt_153 = l_cellInt_8;
        l_newtonInt_154 = l_newtonInt_151;
      }
      l_cellInt_8 = l_cellInt_153;
      l_newtonInt_9 = l_newtonInt_154;
      v_10 = v_148;
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_159;
    femData(MeshCell)[] l__t_155;
    l__t_155 = <femData(MeshCell)[]>{};
    for i__t_156 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_155 = Append<femData(MeshCell),femData(MeshCell)>(l__t_155,LoadFem<femData(MeshCell)>(globals.a,i__t_156));
    }
    femData(FemFunc) l_c_157 = LoadFem<femData(FemFunc)>(globals.0c0431_intermedateGlobal,LoadFem<femData(Space)>(globals.0b042F_intermedateGlobal,globals.a));
    femData(Space) l__t_158 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_157);
    l_I_159 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_160 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_161 = Sqrt(VDot<3,4>(v_160,v_160));
    globals.camDist = l_camDist_161;
    real l_op1_e3_l_9_162 = RDiv(0.1e1,l_camDist_161);
    vec3{4} v_163 = VScale<3,4>(l_op1_e3_l_9_162,v_160);
    globals.camN = PACK(v_163);
    real l_r_165 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_166 = RMul(0.e0,l_r_165);
    real l_r_167 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_168 = RMul(0.e0,l_r_167);
    real l_r_169 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_170 = RMul(0.e0,l_r_169);
    real l_r_171 = RAdd(l_r_166,l_r_168);
    real l_r_172 = RAdd(l_r_171,l_r_170);
    vec3{4} v_173 = VEC3{4}(VDot<3,4>(v_160,VEC3{4}(l_r_172,RAdd(l_r_171,RMul(0.1e1,l_r_169)),RAdd(RAdd(l_r_166,RMul(-0.1e1,l_r_167)),l_r_170))),VDot<3,4>(v_160,VEC3{4}(RAdd(l_r_171,RMul(-0.1e1,l_r_169)),l_r_172,RAdd(RAdd(RMul(0.1e1,l_r_165),l_r_168),l_r_170))),VDot<3,4>(v_160,VEC3{4}(RAdd(RAdd(l_r_166,RMul(0.1e1,l_r_167)),l_r_170),RAdd(RAdd(RMul(-0.1e1,l_r_165),l_r_168),l_r_170),l_r_172)));
    real l_op1_e3_l_38_174 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_162,l_op1_e3_l_9_162),VDot<3,4>(v_173,v_173))));
    vec3{4} v_175 = VScale<3,4>(l_op1_e3_l_38_174,VScale<3,4>(l_op1_e3_l_9_162,v_173));
    globals.camU = PACK(v_175);
    real l_r_177 = VIndex<3,4,0>(v_160);
    real l_r_178 = RMul(0.e0,l_r_177);
    real l_r_179 = VIndex<3,4,1>(v_160);
    real l_r_180 = RMul(0.e0,l_r_179);
    real l_r_181 = VIndex<3,4,2>(v_160);
    real l_r_182 = RMul(0.e0,l_r_181);
    real l_r_183 = RAdd(l_r_178,l_r_180);
    real l_r_184 = RAdd(l_r_183,l_r_182);
    vec3{4} v_185 = VScale<3,4>(l_op1_e3_l_9_162,VEC3{4}(VDot<3,4>(v_173,VEC3{4}(l_r_184,RAdd(l_r_183,RMul(0.1e1,l_r_181)),RAdd(RAdd(l_r_178,RMul(-0.1e1,l_r_179)),l_r_182))),VDot<3,4>(v_173,VEC3{4}(RAdd(l_r_183,RMul(-0.1e1,l_r_181)),l_r_184,RAdd(RAdd(RMul(0.1e1,l_r_177),l_r_180),l_r_182))),VDot<3,4>(v_173,VEC3{4}(RAdd(RAdd(l_r_178,RMul(0.1e1,l_r_179)),l_r_182),RAdd(RAdd(RMul(-0.1e1,l_r_177),l_r_180),l_r_182),l_r_184))));
    real l_r_186 = RMul(l_op1_e3_l_38_174,l_op1_e3_l_9_162);
    real l_r_187 = RMul(l_r_186,VIndex<3,4,0>(v_185));
    real l_r_188 = RMul(l_r_186,VIndex<3,4,1>(v_185));
    real l_r_189 = RMul(l_r_186,VIndex<3,4,2>(v_185));
    globals.camV = <tensor[3]>[l_r_187,l_r_188,l_r_189];
    real l_op1_e3_l_10_191 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_191,l_camDist_161);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_191),l_camDist_161),IntToReal(globals.iresV));
    real l_r_192 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_193 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_194 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_175),l_r_192),RMul(l_r_187,l_r_193)),RMul(VIndex<3,4,0>(v_163),l_r_194)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_175),l_r_192),RMul(l_r_188,l_r_193)),RMul(VIndex<3,4,1>(v_163),l_r_194)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_175),l_r_192),RMul(l_r_189,l_r_193)),RMul(VIndex<3,4,2>(v_163),l_r_194)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_158);
    globals._tX = l__t_158;
    globals.c = l_c_157;
    globals.I = l_I_159;
  }
//***** STRAND *****
strand raycast (int p_ui_196,int p_vi_197) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_198 = RNeg(globals.camUmax);
    real l_rayU_199 = RAdd(l_op1_e3_l_9_198,RMul(RDiv(RSub(IntToReal(p_ui_196),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_198)));
    real l_rayV_200 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_197),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_201 = VAdd<3,4>(VScale<3,4>(l_rayU_199,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_200,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_202 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_199;
    self.rayV = l_rayV_200;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_202,VIndex<3,4,0>(v_201)),RMul(l_r_202,VIndex<3,4,1>(v_201)),RMul(l_r_202,VIndex<3,4,2>(v_201)))));
    self.transp = 0.1e1;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.gray = 0.e0;
    self.ui = p_ui_196;
    self.vi = p_vi_197;
  }
  update (globals) {
    real l_transp_439;
    real l_transp_437;
    vec3{4} v_436;
    if (globals.debug) {
      bool l__t_206;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_206 = true;
      } else {
        l__t_206 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_206) {
        stabilize;
      }
    }
    vec3{4} v_207 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_208 = VIndex<3,4,0>(v_207);
    vec3{4} v_209 = v_207;
    if (LTE<real>(0.e0,l__t_208)) {
      real l_transp_435;
      vec3{4} v_434;
      if (LTE<real>(l__t_208,0.1e1)) {
        real l_transp_433;
        vec3{4} v_432;
        real l__t_210 = VIndex<3,4,1>(v_209);
        if (LTE<real>(0.e0,l__t_210)) {
          real l_transp_431;
          vec3{4} v_430;
          if (LTE<real>(l__t_210,0.1e1)) {
            real l_transp_429;
            vec3{4} v_428;
            real l__t_211 = VIndex<3,4,2>(v_209);
            if (LTE<real>(0.e0,l__t_211)) {
              real l_transp_427;
              vec3{4} v_426;
              if (LTE<real>(l__t_211,0.1e1)) {
                real l_transp_425;
                vec3{4} v_424;
                tensor[3] _arg_212 = PACK(v_209);
                femData(MeshPos) l_p_213 = findPos$333C(globals.a,_arg_212);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_213)) {
                  real l_transp_423;
                  vec3{4} v_422;
                  tensor[3] _arg_214 = PACK(v_209);
                  femData(MeshPos) l_callFindPos_215 = findPos$333C(globals._t,_arg_214);
                  int l_intPos_216 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_215);
                  &tensor[3] l_refPos_217 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_215);
                  int l_mulRes_218 = IMul(l_intPos_216,10);
                  int t_219 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_218);
                  int t_220 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,1));
                  int t_221 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,2));
                  int t_222 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,3));
                  int t_223 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,4));
                  int t_224 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,5));
                  int t_225 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,6));
                  int t_226 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,7));
                  int t_227 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,8));
                  int t_228 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_218,9));
                  real t_229 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_228));
                  real t_230 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_227));
                  real t_231 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_226));
                  real t_232 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_225));
                  real t_233 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_224));
                  real t_234 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_223));
                  real t_235 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_222));
                  real t_236 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_221));
                  real t_237 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_220));
                  real t_238 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_219));
                  vec4 v_239 = VEC4(t_238,t_237,t_236,t_235);
                  vec4 v_240 = VEC4(t_234,t_233,t_232,t_231);
                  vec2 v_241 = VEC2(t_230,t_229);
                  real l_varAcc_242 = TensorIndex<&tensor[3],[0]>(l_refPos_217);
                  real l_varAcc_243 = TensorIndex<&tensor[3],[1]>(l_refPos_217);
                  real l_varAcc_244 = TensorIndex<&tensor[3],[2]>(l_refPos_217);
                  real l_prod_245 = RMul(0.1e1,0.1e1);
                  real l_prod_246 = RMul(RMul(l_varAcc_242,l_varAcc_242),l_prod_245);
                  real l_prod_247 = RMul(l_varAcc_243,0.1e1);
                  real l_prod_248 = RMul(l_varAcc_242,l_prod_247);
                  real l_prod_249 = RMul(0.1e1,l_varAcc_244);
                  real l_prod_250 = RMul(l_varAcc_242,l_prod_249);
                  real l_prod_251 = RMul(l_varAcc_242,l_prod_245);
                  real l_prod_252 = RMul(0.1e1,RMul(RMul(l_varAcc_243,l_varAcc_243),0.1e1));
                  real l_prod_253 = RMul(0.1e1,RMul(l_varAcc_243,l_varAcc_244));
                  real l_prod_254 = RMul(0.1e1,l_prod_247);
                  real l_prod_255 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_244,l_varAcc_244)));
                  real l_prod_256 = RMul(0.1e1,l_prod_249);
                  real l_prod_257 = RMul(0.1e1,l_prod_245);
                  real l_mult_258 = RMul(0.1e1,l_prod_257);
                  real l_mult_259 = RMul(0.2e1,l_prod_255);
                  real l_mult_260 = RMul(0.4e1,l_prod_253);
                  real l_mult_261 = RMul(0.2e1,l_prod_252);
                  real l_mult_262 = RMul(0.4e1,l_prod_250);
                  real l_mult_263 = RMul(0.4e1,l_prod_248);
                  real l_mult_264 = RMul(0.2e1,l_prod_246);
                  real l_mult_265 = RMul(0.4e1,l_prod_256);
                  real l_mult_266 = RMul(-0.4e1,l_prod_253);
                  real l_mult_267 = RMul(-0.4e1,l_prod_250);
                  real l_mult_268 = RMul(0.4e1,l_prod_254);
                  real l_mult_269 = RMul(-0.4e1,l_prod_248);
                  real l_mult_270 = RMul(0.4e1,l_prod_251);
                  real l_compositionl_271 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_260,l_mult_262,l_mult_263,RAdd(l_mult_265,RAdd(RMul(-0.4e1,l_prod_255),RAdd(l_mult_266,l_mult_267))))),RAdd(VDot<2,2>(v_241,VEC2(RAdd(l_mult_268,RAdd(l_mult_266,RAdd(RMul(-0.4e1,l_prod_252),l_mult_269))),RAdd(l_mult_270,RAdd(l_mult_267,RAdd(l_mult_269,RMul(-0.4e1,l_prod_246)))))),VDot<4,4>(v_239,VEC4(RAdd(l_mult_258,RAdd(RMul(-0.3e1,l_prod_256),RAdd(l_mult_259,RAdd(RMul(-0.3e1,l_prod_254),RAdd(l_mult_260,RAdd(l_mult_261,RAdd(RMul(-0.3e1,l_prod_251),RAdd(l_mult_262,RAdd(l_mult_263,l_mult_264))))))))),RAdd(RMul(-0.1e1,l_prod_251),l_mult_264),RAdd(RMul(-0.1e1,l_prod_254),l_mult_261),RAdd(RMul(-0.1e1,l_prod_256),l_mult_259)))));
                  real l_sum_272 = RAdd(RMul(-0.3e1,l_prod_257),RAdd(l_mult_265,RAdd(l_mult_268,l_mult_270)));
                  real l_mult_273 = RMul(-0.1e1,l_prod_257);
                  real l_basisEval_274 = RMul(-0.4e1,l_prod_256);
                  real l_basisEval_275 = RMul(-0.4e1,l_prod_254);
                  real l_mult_276 = RMul(0.4e1,l_prod_257);
                  real l_mult_277 = RMul(-0.4e1,l_prod_251);
                  real l_vdot_278 = RAdd(VDot<4,4>(v_240,VEC4(0.e0,l_mult_265,l_mult_268,l_basisEval_274)),RAdd(VDot<2,2>(v_241,VEC2(l_basisEval_275,RAdd(l_mult_276,RAdd(l_basisEval_274,RAdd(l_basisEval_275,RMul(-0.8e1,l_prod_251)))))),VDot<4,4>(v_239,VEC4(l_sum_272,RAdd(l_mult_273,l_mult_270),0.e0,0.e0))));
                  real l_vdot_279 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_265,0.e0,l_mult_270,l_basisEval_274)),RAdd(VDot<2,2>(v_241,VEC2(RAdd(l_mult_276,RAdd(l_basisEval_274,RAdd(RMul(-0.8e1,l_prod_254),l_mult_277))),l_mult_277)),VDot<4,4>(v_239,VEC4(l_sum_272,0.e0,RAdd(l_mult_273,l_mult_268),0.e0))));
                  real l_vdot_280 = RAdd(VDot<4,4>(v_240,VEC4(l_mult_268,l_mult_270,0.e0,RAdd(l_mult_276,RAdd(RMul(-0.8e1,l_prod_256),RAdd(l_basisEval_275,l_mult_277))))),RAdd(VDot<2,2>(v_241,VEC2(l_basisEval_275,l_mult_277)),VDot<4,4>(v_239,VEC4(l_sum_272,0.e0,0.e0,RAdd(l_mult_273,l_mult_265)))));
                  int l_mulRes_281 = IMul(l_intPos_216,4);
                  int t_282 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_281);
                  int l_mulRes_283 = IMul(3,t_282);
                  int t_284 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,1));
                  int l_mulRes_285 = IMul(3,t_284);
                  real l_dof_load_286 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_285);
                  real l_dof_load_287 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_285));
                  real l_dof_load_288 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_285));
                  int t_289 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,2));
                  int l_mulRes_290 = IMul(3,t_289);
                  real l_dof_load_291 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_290);
                  real l_dof_load_292 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_290));
                  real l_dof_load_293 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_290));
                  int t_294 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_281,3));
                  int l_mulRes_295 = IMul(3,t_294);
                  real l_dof_load_296 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_295);
                  real l_dof_load_297 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_295));
                  real l_dof_load_298 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_295));
                  real t_299 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_283);
                  real l_r_300 = RMul(t_299,l_mult_273);
                  real l_r_301 = RMul(l_dof_load_291,0.e0);
                  real l_r_302 = RMul(l_dof_load_296,0.e0);
                  real l_r_303 = RAdd(RAdd(RAdd(l_r_300,RMul(l_dof_load_286,l_mult_258)),l_r_301),l_r_302);
                  real l_r_304 = RAdd(l_r_300,RMul(l_dof_load_286,0.e0));
                  real l_r_305 = RAdd(RAdd(l_r_304,RMul(l_dof_load_291,l_mult_258)),l_r_302);
                  real l_r_306 = RAdd(RAdd(l_r_304,l_r_301),RMul(l_dof_load_296,l_mult_258));
                  real t_307 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_283));
                  real l_r_308 = RMul(t_307,l_mult_273);
                  real l_r_309 = RMul(l_dof_load_292,0.e0);
                  real l_r_310 = RMul(l_dof_load_297,0.e0);
                  real l_r_311 = RAdd(RAdd(RAdd(l_r_308,RMul(l_dof_load_287,l_mult_258)),l_r_309),l_r_310);
                  real l_r_312 = RAdd(l_r_308,RMul(l_dof_load_287,0.e0));
                  real l_r_313 = RAdd(RAdd(l_r_312,RMul(l_dof_load_292,l_mult_258)),l_r_310);
                  real l_r_314 = RAdd(RAdd(l_r_312,l_r_309),RMul(l_dof_load_297,l_mult_258));
                  real t_315 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_283));
                  real l_r_316 = RMul(t_315,l_mult_273);
                  real l_r_317 = RMul(l_dof_load_293,0.e0);
                  real l_r_318 = RMul(l_dof_load_298,0.e0);
                  real l_r_319 = RAdd(RAdd(RAdd(l_r_316,RMul(l_dof_load_288,l_mult_258)),l_r_317),l_r_318);
                  real l_r_320 = RAdd(l_r_316,RMul(l_dof_load_288,0.e0));
                  real l_r_321 = RAdd(RAdd(l_r_320,RMul(l_dof_load_293,l_mult_258)),l_r_318);
                  real l_r_322 = RAdd(RAdd(l_r_320,l_r_317),RMul(l_dof_load_298,l_mult_258));
                  real l_r_323 = RMul(0.e0,l_r_303);
                  real l_r_324 = RMul(0.e0,l_r_311);
                  real l_r_325 = RMul(0.e0,l_r_319);
                  real l_r_326 = RAdd(l_r_323,l_r_324);
                  real l_r_327 = RAdd(l_r_326,l_r_325);
                  real l_r_328 = RMul(0.e0,l_r_305);
                  real l_r_329 = RMul(0.e0,l_r_313);
                  real l_r_330 = RMul(0.e0,l_r_321);
                  real l_r_331 = RAdd(l_r_328,l_r_329);
                  real l_r_332 = RAdd(l_r_331,l_r_330);
                  real l_r_333 = RMul(0.e0,l_r_306);
                  real l_r_334 = RMul(0.e0,l_r_314);
                  real l_r_335 = RMul(0.e0,l_r_322);
                  real l_r_336 = RAdd(l_r_333,l_r_334);
                  real l_r_337 = RAdd(l_r_336,l_r_335);
                  real l_r_338 = RAdd(l_r_326,RMul(-0.1e1,l_r_319));
                  real l_r_339 = RAdd(l_r_331,RMul(-0.1e1,l_r_321));
                  real l_r_340 = RAdd(l_r_336,RMul(-0.1e1,l_r_322));
                  real l_r_341 = RAdd(RAdd(l_r_323,RMul(0.1e1,l_r_311)),l_r_325);
                  real l_r_342 = RAdd(RAdd(l_r_328,RMul(0.1e1,l_r_313)),l_r_330);
                  real l_r_343 = RAdd(RAdd(l_r_333,RMul(0.1e1,l_r_314)),l_r_335);
                  real l_r_344 = RAdd(l_r_326,RMul(0.1e1,l_r_319));
                  real l_r_345 = RAdd(l_r_331,RMul(0.1e1,l_r_321));
                  real l_r_346 = RAdd(l_r_336,RMul(0.1e1,l_r_322));
                  real l_r_347 = RAdd(RAdd(RMul(-0.1e1,l_r_303),l_r_324),l_r_325);
                  real l_r_348 = RAdd(RAdd(RMul(-0.1e1,l_r_305),l_r_329),l_r_330);
                  real l_r_349 = RAdd(RAdd(RMul(-0.1e1,l_r_306),l_r_334),l_r_335);
                  real l_r_350 = RAdd(RAdd(l_r_323,RMul(-0.1e1,l_r_311)),l_r_325);
                  real l_r_351 = RAdd(RAdd(l_r_328,RMul(-0.1e1,l_r_313)),l_r_330);
                  real l_r_352 = RAdd(RAdd(l_r_333,RMul(-0.1e1,l_r_314)),l_r_335);
                  real l_r_353 = RAdd(RAdd(RMul(0.1e1,l_r_303),l_r_324),l_r_325);
                  real l_r_354 = RAdd(RAdd(RMul(0.1e1,l_r_305),l_r_329),l_r_330);
                  real l_r_355 = RAdd(RAdd(RMul(0.1e1,l_r_306),l_r_334),l_r_335);
                  real l_r_356 = RAdd(RAdd(RMul(l_r_303,l_r_332),RMul(l_r_311,l_r_345)),RMul(l_r_319,l_r_351));
                  real l_r_357 = RAdd(RAdd(RMul(l_r_303,l_r_337),RMul(l_r_311,l_r_346)),RMul(l_r_319,l_r_352));
                  real l_r_358 = RAdd(RAdd(RMul(l_r_303,l_r_339),RMul(l_r_311,l_r_332)),RMul(l_r_319,l_r_354));
                  real l_r_359 = RAdd(RAdd(RMul(l_r_303,l_r_340),RMul(l_r_311,l_r_337)),RMul(l_r_319,l_r_355));
                  real l_r_360 = RAdd(RAdd(RMul(l_r_303,l_r_342),RMul(l_r_311,l_r_348)),RMul(l_r_319,l_r_332));
                  real l_r_361 = RAdd(RAdd(RMul(l_r_303,l_r_343),RMul(l_r_311,l_r_349)),RMul(l_r_319,l_r_337));
                  real l_r_362 = RAdd(RAdd(RMul(l_r_305,l_r_327),RMul(l_r_313,l_r_344)),RMul(l_r_321,l_r_350));
                  real l_r_363 = RAdd(RAdd(RMul(l_r_305,l_r_337),RMul(l_r_313,l_r_346)),RMul(l_r_321,l_r_352));
                  real l_r_364 = RAdd(RAdd(RMul(l_r_305,l_r_338),RMul(l_r_313,l_r_327)),RMul(l_r_321,l_r_353));
                  real l_r_365 = RAdd(RAdd(RMul(l_r_305,l_r_340),RMul(l_r_313,l_r_337)),RMul(l_r_321,l_r_355));
                  real l_r_366 = RAdd(RAdd(RMul(l_r_305,l_r_341),RMul(l_r_313,l_r_347)),RMul(l_r_321,l_r_327));
                  real l_r_367 = RAdd(RAdd(RMul(l_r_305,l_r_343),RMul(l_r_313,l_r_349)),RMul(l_r_321,l_r_337));
                  real l_r_368 = RAdd(RAdd(RMul(l_r_306,l_r_327),RMul(l_r_314,l_r_344)),RMul(l_r_322,l_r_350));
                  real l_r_369 = RAdd(RAdd(RMul(l_r_306,l_r_332),RMul(l_r_314,l_r_345)),RMul(l_r_322,l_r_351));
                  real l_r_370 = RAdd(RAdd(RMul(l_r_306,l_r_338),RMul(l_r_314,l_r_327)),RMul(l_r_322,l_r_353));
                  real l_r_371 = RAdd(RAdd(RMul(l_r_306,l_r_339),RMul(l_r_314,l_r_332)),RMul(l_r_322,l_r_354));
                  real l_r_372 = RAdd(RAdd(RMul(l_r_306,l_r_341),RMul(l_r_314,l_r_347)),RMul(l_r_322,l_r_327));
                  real l_r_373 = RAdd(RAdd(RMul(l_r_306,l_r_342),RMul(l_r_314,l_r_348)),RMul(l_r_322,l_r_332));
                  vec3{4} v_374 = VEC3{4}(l_r_305,l_r_313,l_r_321);
                  real l_r_375 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_327),RMul(l_r_311,l_r_344)),RMul(l_r_319,l_r_350)));
                  real l_r_376 = RMul(0.e0,l_r_357);
                  real l_r_377 = RMul(0.e0,l_r_362);
                  real l_r_378 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_332),RMul(l_r_313,l_r_345)),RMul(l_r_321,l_r_351)));
                  real l_r_379 = RMul(0.e0,l_r_368);
                  real l_r_380 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_337),RMul(l_r_314,l_r_346)),RMul(l_r_322,l_r_352)));
                  real l_r_381 = RAdd(l_r_375,RMul(0.e0,l_r_356));
                  real l_r_382 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_338),RMul(l_r_311,l_r_327)),RMul(l_r_319,l_r_353)));
                  real l_r_383 = RMul(0.e0,l_r_359);
                  real l_r_384 = RMul(0.e0,l_r_364);
                  real l_r_385 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_339),RMul(l_r_313,l_r_332)),RMul(l_r_321,l_r_354)));
                  real l_r_386 = RMul(0.e0,l_r_370);
                  real l_r_387 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_340),RMul(l_r_314,l_r_337)),RMul(l_r_322,l_r_355)));
                  real l_r_388 = RAdd(l_r_382,RMul(0.e0,l_r_358));
                  real l_r_389 = RMul(0.e0,RAdd(RAdd(RMul(l_r_303,l_r_341),RMul(l_r_311,l_r_347)),RMul(l_r_319,l_r_327)));
                  real l_r_390 = RMul(0.e0,l_r_361);
                  real l_r_391 = RMul(0.e0,l_r_366);
                  real l_r_392 = RMul(0.e0,RAdd(RAdd(RMul(l_r_305,l_r_342),RMul(l_r_313,l_r_348)),RMul(l_r_321,l_r_332)));
                  real l_r_393 = RMul(0.e0,l_r_372);
                  real l_r_394 = RMul(0.e0,RAdd(RAdd(RMul(l_r_306,l_r_343),RMul(l_r_314,l_r_349)),RMul(l_r_322,l_r_337)));
                  real l_r_395 = RAdd(l_r_389,RMul(0.e0,l_r_360));
                  real l_r_396 = RMul(0.e0,l_r_363);
                  real l_r_397 = RMul(0.e0,l_r_369);
                  real l_r_398 = RMul(0.e0,l_r_365);
                  real l_r_399 = RMul(0.e0,l_r_371);
                  real l_r_400 = RMul(0.e0,l_r_367);
                  real l_r_401 = RMul(0.e0,l_r_373);
                  real l_op1_e3_l_36_402 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_303,l_r_311,l_r_319),VEC3{4}(VDot<3,4>(v_374,VEC3{4}(l_r_337,l_r_346,l_r_352)),VDot<3,4>(v_374,VEC3{4}(l_r_340,l_r_337,l_r_355)),VDot<3,4>(v_374,VEC3{4}(l_r_343,l_r_349,l_r_337)))));
                  vec3{4} v_403 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_381,l_r_376),l_r_377),l_r_378),RMul(0.1e1,l_r_363)),l_r_379),RMul(-0.1e1,l_r_369)),l_r_380),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_381,RMul(-0.1e1,l_r_357)),l_r_377),l_r_378),l_r_396),RMul(0.1e1,l_r_368)),l_r_397),l_r_380),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_375,RMul(0.1e1,l_r_356)),l_r_376),RMul(-0.1e1,l_r_362)),l_r_378),l_r_396),l_r_379),l_r_397),l_r_380),l_op1_e3_l_36_402))),RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_388,l_r_383),l_r_384),l_r_385),RMul(0.1e1,l_r_365)),l_r_386),RMul(-0.1e1,l_r_371)),l_r_387),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_388,RMul(-0.1e1,l_r_359)),l_r_384),l_r_385),l_r_398),RMul(0.1e1,l_r_370)),l_r_399),l_r_387),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_382,RMul(0.1e1,l_r_358)),l_r_383),RMul(-0.1e1,l_r_364)),l_r_385),l_r_398),l_r_386),l_r_399),l_r_387),l_op1_e3_l_36_402))),RAdd(RAdd(RMul(l_vdot_278,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_395,l_r_390),l_r_391),l_r_392),RMul(0.1e1,l_r_367)),l_r_393),RMul(-0.1e1,l_r_373)),l_r_394),l_op1_e3_l_36_402)),RMul(l_vdot_279,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_395,RMul(-0.1e1,l_r_361)),l_r_391),l_r_392),l_r_400),RMul(0.1e1,l_r_372)),l_r_401),l_r_394),l_op1_e3_l_36_402))),RMul(l_vdot_280,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_389,RMul(0.1e1,l_r_360)),l_r_390),RMul(-0.1e1,l_r_366)),l_r_392),l_r_400),l_r_393),l_r_401),l_r_394),l_op1_e3_l_36_402)))));
                  real l_op1_e3_l_57_404 = Sqrt(VDot<3,4>(v_403,v_403));
                  real l_a_405 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_271,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_404))))));
                  vec3{4} v_406 = v_403;
                  if (GT<real>(l_a_405,0.e0)) {
                    tensor[3,2] l_voxels_416;
                    real l_imgPos_407 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_271),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_408 = RFloor(l_imgPos_407);
                    real l_f_409 = RSub(l_imgPos_407,l_nd_408);
                    int l_n_410 = RealToInt(l_nd_408);
                    real l__t_411 = MathFn<pow>(RSub(0.1e1,l_a_405),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_412 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_413 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_404),VDot<3,4>(v_406,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_410,globals.I)) {
                      int l_offp_414 = IMul(3,l_n_410);
                      int l_offp_415 = IMul(3,IAdd(l_n_410,1));
                      l_voxels_416 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_414),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_415),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_415,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_414,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_415,2))];
                    } else {
                      int l_offp_417 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_410));
                      int l_offp_418 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_410,1)));
                      l_voxels_416 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_417),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_418),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_417,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_418,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_417,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_418,2))];
                    }
                    vec2 v_419 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_409,RSub(l_f_409,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_420 = RSub(0.1e1,l__t_411);
                    real l_r_421 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_420),RAdd(0.11e1,l_op1_e3_l_19_412)),RAdd(globals.phongKa,l_op1_e3_l_20_413));
                    v_422 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_416)),v_419)),RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_416)),v_419)),RMul(l_r_421,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_416)),v_419))));
                    l_transp_423 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_420));
                  } else {
                    v_422 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_423 = self.transp;
                  }
                  v_424 = v_422;
                  l_transp_425 = l_transp_423;
                } else {
                  v_424 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_425 = self.transp;
                }
                v_426 = v_424;
                l_transp_427 = l_transp_425;
              } else {
                v_426 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_427 = self.transp;
              }
              v_428 = v_426;
              l_transp_429 = l_transp_427;
            } else {
              v_428 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_429 = self.transp;
            }
            v_430 = v_428;
            l_transp_431 = l_transp_429;
          } else {
            v_430 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_431 = self.transp;
          }
          v_432 = v_430;
          l_transp_433 = l_transp_431;
        } else {
          v_432 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_433 = self.transp;
        }
        v_434 = v_432;
        l_transp_435 = l_transp_433;
      } else {
        v_434 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_435 = self.transp;
      }
      v_436 = v_434;
      l_transp_437 = l_transp_435;
    } else {
      v_436 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_437 = self.transp;
    }
    if (LT<real>(l_transp_437,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_436);
      stabilize;
    } else {
      l_transp_439 = l_transp_437;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_439;
      self.rgb = PACK(v_436);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_439;
    self.rgb = PACK(v_436);
    active;
  }
  stabilize (world, globals) {
    vec4 v_443;
    real l_a_442 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_442,0.e0)) {
      v_443 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_a_442),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_a_442),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_a_442),l_a_442);
    } else {
      v_443 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_444 = PACK(v_443);
          print(l_a_442,TensorRef<[4]>(_arg_444));
        }
      }
    }
    self.rgba = PACK(v_443);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_446 = 0 to ISub(globals.iresV,1) {
      for i_ui_447 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_447,i_vi_446);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include justTypes.cxx
/usr/bin/clang++ -shared -o justTypes.so justTypes.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.054     1.759
    front end .......................................................................   0.410     0.459
      parser ........................................................................   0.025     0.025
      typechecker ...................................................................   0.025     0.025
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.007     0.007
    High IR optimization ............................................................   0.019     0.048
      High IR value numbering .......................................................   0.007     0.007
      High IR normalization .........................................................   0.022     0.022
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.037     0.037
    Mid IR optimization .............................................................   0.030     0.052
      Mid IR contraction ............................................................   0.004     0.004
      Mid IR value numbering ........................................................   0.016     0.016
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.043     0.043
    Low IR optimization .............................................................   0.052     0.124
      Low IR contraction ............................................................   0.036     0.036
      Low IR value numbering ........................................................   0.036     0.036
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.046     0.046
    Tree IR optimization ............................................................   0.006     0.006
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.028     0.884
      C compiler ....................................................................   0.856     0.856
