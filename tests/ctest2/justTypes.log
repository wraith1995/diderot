/* ParseTree: After parsing */
  Program @ [justTypes.diderot:2.1-95.0] 
    [
      Type: msh= @ [justTypes.diderot:2.1-3.0] 
        Mesh @ [justTypes.diderot:2.6-10] 
        From File : test1.json @ [justTypes.diderot:2.1-3.0] 
      Type: fns= @ [justTypes.diderot:3.1-4.0] 
        FunctionSpace(msh) @ [justTypes.diderot:3.6-26] 
          [ ]
        From File : test1.json @ [justTypes.diderot:3.1-4.0] 
      Type: FUNC= @ [justTypes.diderot:4.1-5.0] 
        FemFunction(fns) @ [justTypes.diderot:4.6-22] 
        From File : test1.json @ [justTypes.diderot:4.1-5.0] 
      Input: a @ [justTypes.diderot:6.1-7.0] 
      Input: b= @ [justTypes.diderot:7.1-22] 
        Apply @ [justTypes.diderot:7.15-21] 
          Var: fns @ [justTypes.diderot:7.15-18] 
          [
            Var: a @ [justTypes.diderot:7.19-20] 
          ]
      Input: c= @ [justTypes.diderot:8.1-9.0] 
        Apply @ [justTypes.diderot:8.16-23] 
          Var: FUNC @ [justTypes.diderot:8.16-20] 
          [
            Var: b @ [justTypes.diderot:8.21-22] 
          ]
      Var @ [justTypes.diderot:9.1-10.0] 
        Decl: V= @ [justTypes.diderot:9.1-10.0] 
          Select @ [justTypes.diderot:9.16-19] 
            Var: c @ [justTypes.diderot:9.16-17] 
            F
      Input: isoval= @ [justTypes.diderot:10.1-25] 
        Lit: 0.2e0 @ [justTypes.diderot:10.21-24] 
      Input: thick= @ [justTypes.diderot:10.27-11.0] 
        Lit: 0.7e-1 @ [justTypes.diderot:10.46-50] 
      Input: camEye= @ [justTypes.diderot:11.1-36] 
        Cons @ [justTypes.diderot:11.21-35] 
          [
            Lit: 0.3e1 @ [justTypes.diderot:11.22-25] 
            UnaryOp: unary - @ [justTypes.diderot:11.26-30] 
              Lit: 0.3e1 @ [justTypes.diderot:11.27-30] 
            Lit: 0.3e1 @ [justTypes.diderot:11.31-34] 
          ]
      Input: camAt= @ [justTypes.diderot:11.38-71] 
        Cons @ [justTypes.diderot:11.57-70] 
          [
            Lit: 0.5e0 @ [justTypes.diderot:11.58-61] 
            Lit: 0.5e0 @ [justTypes.diderot:11.62-65] 
            Lit: 0.5e0 @ [justTypes.diderot:11.66-69] 
          ]
      Input: camUp= @ [justTypes.diderot:11.74-12.0] 
        Cons @ [justTypes.diderot:11.93-100] 
          [
            Lit: 0 @ [justTypes.diderot:11.94-95] 
            Lit: 0 @ [justTypes.diderot:11.96-97] 
            Lit: 1 @ [justTypes.diderot:11.98-99] 
          ]
      Input: camFOV= @ [justTypes.diderot:12.1-26] 
        Lit: 0.137e2 @ [justTypes.diderot:12.21-25] 
      Input: iresU= @ [justTypes.diderot:12.28-50] 
        Lit: 500 @ [justTypes.diderot:12.46-49] 
      Input: iresV= @ [justTypes.diderot:12.54-13.0] 
        Lit: 500 @ [justTypes.diderot:12.72-75] 
      Input: camNear= @ [justTypes.diderot:13.1-25] 
        UnaryOp: unary - @ [justTypes.diderot:13.22-24] 
          Lit: 2 @ [justTypes.diderot:13.23-24] 
      Input: camFar= @ [justTypes.diderot:13.26-48] 
        Lit: 5 @ [justTypes.diderot:13.46-47] 
      Input: refStep= @ [justTypes.diderot:14.1-26] 
        Lit: 0.1e1 @ [justTypes.diderot:14.22-25] 
      Input: rayStep= @ [justTypes.diderot:14.27-15.0] 
        Lit: 0.1e-1 @ [justTypes.diderot:14.47-51] 
      Input: lightVsp= @ [justTypes.diderot:15.1-39] 
        Cons @ [justTypes.diderot:15.23-38] 
          [
            Lit: 0.e0 @ [justTypes.diderot:15.24-27] 
            Lit: 0.e0 @ [justTypes.diderot:15.29-32] 
            Lit: 0.1e1 @ [justTypes.diderot:15.34-37] 
          ]
      Input: phongKa= @ [justTypes.diderot:16.1-26] 
        Lit: 0.1e0 @ [justTypes.diderot:16.22-25] 
      Input: phongKd= @ [justTypes.diderot:16.27-17.0] 
        Lit: 0.9e0 @ [justTypes.diderot:16.48-51] 
      Input: debug= @ [justTypes.diderot:18.1-19.0] 
        Lit: false @ [justTypes.diderot:18.20-25] 
      Input: su= @ [justTypes.diderot:19.1-20.0] 
        Lit: 250 @ [justTypes.diderot:19.16-19] 
      Input: sv= @ [justTypes.diderot:20.1-21.0] 
        Lit: 250 @ [justTypes.diderot:20.16-19] 
      Var @ [justTypes.diderot:23.1-29] 
        Decl: F= @ [justTypes.diderot:23.1-29] 
          BinOp: - @ [justTypes.diderot:23.18-28] 
            Var: V @ [justTypes.diderot:23.18-19] 
            Var: isoval @ [justTypes.diderot:23.22-28] 
      Func: mask @ [justTypes.diderot:24.1-25.0] 
        Tensor @ [justTypes.diderot:24.10-15] 
          [ ]
        [
          Param: x @ [justTypes.diderot:24.20-26] 
            Tensor @ [justTypes.diderot:24.20-25] 
              [
                Lit: 3 @ [justTypes.diderot:24.20-25] 
              ]
        ]
        Expr @ [justTypes.diderot:24.1-25.0] 
          Lit: 0.1e1 @ [justTypes.diderot:24.30-33] 
      Var @ [justTypes.diderot:25.1-26.0] 
        Decl: I= @ [justTypes.diderot:25.1-26.0] 
          Image @ [justTypes.diderot:25.17-40] 
            Lit: "cmap.nrrd" @ [justTypes.diderot:25.28-39] 
      Var @ [justTypes.diderot:26.1-40] 
        Decl: cmap= @ [justTypes.diderot:26.1-40] 
          BinOp: ⊛ @ [justTypes.diderot:26.22-39] 
            Var: tent @ [justTypes.diderot:26.22-26] 
            Apply @ [justTypes.diderot:26.31-39] 
              Var: clamp @ [justTypes.diderot:26.31-36] 
              [
                Var: I @ [justTypes.diderot:26.37-38] 
              ]
      Func: color @ [justTypes.diderot:27.1-28.0] 
        Tensor @ [justTypes.diderot:27.10-15] 
          [
            Lit: 3 @ [justTypes.diderot:27.10-15] 
          ]
        [
          Param: x @ [justTypes.diderot:27.21-27] 
            Tensor @ [justTypes.diderot:27.21-26] 
              [
                Lit: 3 @ [justTypes.diderot:27.21-26] 
              ]
        ]
        Expr @ [justTypes.diderot:27.1-28.0] 
          Apply @ [justTypes.diderot:27.31-41] 
            Var: cmap @ [justTypes.diderot:27.31-35] 
            [
              Apply @ [justTypes.diderot:27.36-40] 
                Var: V @ [justTypes.diderot:27.36-37] 
                [
                  Var: x @ [justTypes.diderot:27.38-39] 
                ]
            ]
      Func: alpha @ [justTypes.diderot:28.1-30.0] 
        Tensor @ [justTypes.diderot:28.10-15] 
          [ ]
        [
          Param: v @ [justTypes.diderot:28.21-27] 
            Tensor @ [justTypes.diderot:28.21-26] 
              [ ]
          Param: g @ [justTypes.diderot:28.29-35] 
            Tensor @ [justTypes.diderot:28.29-34] 
              [ ]
        ]
        Expr @ [justTypes.diderot:28.1-30.0] 
          Apply @ [justTypes.diderot:29.5-41] 
            Var: clamp @ [justTypes.diderot:29.5-10] 
            [
              Lit: 0 @ [justTypes.diderot:29.11-12] 
              Lit: 1 @ [justTypes.diderot:29.14-15] 
              BinOp: * @ [justTypes.diderot:29.17-40] 
                Lit: 0.13e1 @ [justTypes.diderot:29.17-20] 
                BinOp: - @ [justTypes.diderot:29.22-39] 
                  Lit: 1 @ [justTypes.diderot:29.22-23] 
                  BinOp: / @ [justTypes.diderot:29.26-39] 
                    UnaryOp: |()| @ [justTypes.diderot:29.26-29] 
                      Var: v @ [justTypes.diderot:29.27-28] 
                    BinOp: * @ [justTypes.diderot:29.31-38] 
                      Var: g @ [justTypes.diderot:29.31-32] 
                      Var: thick @ [justTypes.diderot:29.33-38] 
            ]
      Var @ [justTypes.diderot:31.1-32.0] 
        Decl: camDist= @ [justTypes.diderot:31.1-32.0] 
          UnaryOp: |()| @ [justTypes.diderot:31.16-32] 
            BinOp: - @ [justTypes.diderot:31.17-31] 
              Var: camAt @ [justTypes.diderot:31.17-22] 
              Var: camEye @ [justTypes.diderot:31.25-31] 
      Var @ [justTypes.diderot:32.1-39] 
        Decl: camN= @ [justTypes.diderot:32.1-39] 
          Apply @ [justTypes.diderot:32.13-38] 
            Var: normalize @ [justTypes.diderot:32.13-22] 
            [
              BinOp: - @ [justTypes.diderot:32.23-37] 
                Var: camAt @ [justTypes.diderot:32.23-28] 
                Var: camEye @ [justTypes.diderot:32.31-37] 
            ]
      Var @ [justTypes.diderot:33.1-38] 
        Decl: camU= @ [justTypes.diderot:33.1-38] 
          Apply @ [justTypes.diderot:33.13-37] 
            Var: normalize @ [justTypes.diderot:33.13-22] 
            [
              BinOp: × @ [justTypes.diderot:33.23-36] 
                Var: camN @ [justTypes.diderot:33.23-27] 
                Var: camUp @ [justTypes.diderot:33.31-36] 
            ]
      Var @ [justTypes.diderot:34.1-26] 
        Decl: camV= @ [justTypes.diderot:34.1-26] 
          BinOp: × @ [justTypes.diderot:34.13-25] 
            Var: camU @ [justTypes.diderot:34.13-17] 
            Var: camN @ [justTypes.diderot:34.21-25] 
      Var @ [justTypes.diderot:35.1-36.0] 
        Decl: camVmax= @ [justTypes.diderot:35.1-36.0] 
          BinOp: * @ [justTypes.diderot:35.16-42] 
            Apply @ [justTypes.diderot:35.16-34] 
              Var: tan @ [justTypes.diderot:35.16-19] 
              [
                BinOp: / @ [justTypes.diderot:35.20-33] 
                  BinOp: * @ [justTypes.diderot:35.20-29] 
                    Var: camFOV @ [justTypes.diderot:35.20-26] 
                    Lit: 0.314159265358979323846264338327950288e1 @ [justTypes.diderot:35.27-29] 
                  Lit: 360 @ [justTypes.diderot:35.30-33] 
              ]
            Var: camDist @ [justTypes.diderot:35.35-42] 
      Var @ [justTypes.diderot:36.1-37.0] 
        Decl: camUmax= @ [justTypes.diderot:36.1-37.0] 
          BinOp: / @ [justTypes.diderot:36.16-35] 
            BinOp: * @ [justTypes.diderot:36.16-29] 
              Var: camVmax @ [justTypes.diderot:36.16-23] 
              Var: iresU @ [justTypes.diderot:36.24-29] 
            Var: iresV @ [justTypes.diderot:36.30-35] 
      Var @ [justTypes.diderot:37.1-38.0] 
        Decl: light= @ [justTypes.diderot:37.1-38.0] 
          BinOp: • @ [justTypes.diderot:37.14-63] 
            Apply @ [justTypes.diderot:37.14-41] 
              Var: transpose @ [justTypes.diderot:37.14-23] 
              [
                Cons @ [justTypes.diderot:37.24-40] 
                  [
                    Var: camU @ [justTypes.diderot:37.25-29] 
                    Var: camV @ [justTypes.diderot:37.30-34] 
                    Var: camN @ [justTypes.diderot:37.35-39] 
                  ]
              ]
            Apply @ [justTypes.diderot:37.44-63] 
              Var: normalize @ [justTypes.diderot:37.44-53] 
              [
                Var: lightVsp @ [justTypes.diderot:37.54-62] 
              ]
    ]
    Strand: raycast @ [justTypes.diderot:39.1-94.1] 
      [
        Param: ui @ [justTypes.diderot:39.17-23] 
          Int @ [justTypes.diderot:39.17-21] 
        Param: vi @ [justTypes.diderot:39.25-31] 
          Int @ [justTypes.diderot:39.25-29] 
      ]
      [
        VarDcl @ [justTypes.diderot:40.3-41.0] 
        VarDcl @ [justTypes.diderot:41.3-42.0] 
        VarDcl @ [justTypes.diderot:42.3-43.0] 
        VarDcl @ [justTypes.diderot:43.3-44.0] 
        VarDcl @ [justTypes.diderot:44.3-45.0] 
        VarDcl @ [justTypes.diderot:45.3-46.0] 
        VarDcl: output @ [justTypes.diderot:46.3-47.0] 
        VarDcl: output @ [justTypes.diderot:47.3-48.0] 
      ]
      [
        Method: Update @ [justTypes.diderot:49.3-86.3] 
          Block @ [justTypes.diderot:49.10-86.0] 
            [
              IfThen @ [justTypes.diderot:50.8-55.8] 
                Var: debug @ [justTypes.diderot:50.12-17] 
                IfThen @ [justTypes.diderot:51.2-54.8] 
                  OrElse @ [justTypes.diderot:51.6-26] 
                    BinOp: != @ [justTypes.diderot:51.6-15] 
                      Var: ui @ [justTypes.diderot:51.6-8] 
                      Var: su @ [justTypes.diderot:51.12-14] 
                    BinOp: != @ [justTypes.diderot:51.18-26] 
                      Var: vi @ [justTypes.diderot:51.18-20] 
                      Var: sv @ [justTypes.diderot:51.24-26] 
                  Stabilize @ [justTypes.diderot:52.4-53.0] 
              Decl @ [justTypes.diderot:49.10-86.0] 
                Decl: x= @ [justTypes.diderot:55.8-56.0] 
                  BinOp: + @ [justTypes.diderot:55.17-37] 
                    Var: camEye @ [justTypes.diderot:55.17-23] 
                    BinOp: * @ [justTypes.diderot:55.26-37] 
                      Var: rayN @ [justTypes.diderot:55.26-30] 
                      Var: rayVec @ [justTypes.diderot:55.31-37] 
              IfThen @ [justTypes.diderot:57.8-79.5] 
                AndAlso @ [justTypes.diderot:57.12-92] 
                  BinOp: < @ [justTypes.diderot:57.12-23] 
                    Lit: 0.e0 @ [justTypes.diderot:57.12-15] 
                    Subscript @ [justTypes.diderot:57.18-22] 
                      Var: x @ [justTypes.diderot:57.18-19] 
                      [
                        Lit: 0 @ [justTypes.diderot:57.20-21] 
                      ]
                  AndAlso @ [justTypes.diderot:57.23-92] 
                    BinOp: < @ [justTypes.diderot:57.26-37] 
                      Subscript @ [justTypes.diderot:57.26-30] 
                        Var: x @ [justTypes.diderot:57.26-27] 
                        [
                          Lit: 0 @ [justTypes.diderot:57.28-29] 
                        ]
                      Lit: 0.1e1 @ [justTypes.diderot:57.33-36] 
                    AndAlso @ [justTypes.diderot:57.37-92] 
                      BinOp: < @ [justTypes.diderot:57.40-51] 
                        Lit: 0.e0 @ [justTypes.diderot:57.40-43] 
                        Subscript @ [justTypes.diderot:57.46-50] 
                          Var: x @ [justTypes.diderot:57.46-47] 
                          [
                            Lit: 1 @ [justTypes.diderot:57.48-49] 
                          ]
                      AndAlso @ [justTypes.diderot:57.51-92] 
                        BinOp: < @ [justTypes.diderot:57.54-65] 
                          Subscript @ [justTypes.diderot:57.54-58] 
                            Var: x @ [justTypes.diderot:57.54-55] 
                            [
                              Lit: 1 @ [justTypes.diderot:57.56-57] 
                            ]
                          Lit: 0.1e1 @ [justTypes.diderot:57.61-64] 
                        AndAlso @ [justTypes.diderot:57.65-92] 
                          BinOp: < @ [justTypes.diderot:57.68-79] 
                            Lit: 0.e0 @ [justTypes.diderot:57.68-71] 
                            Subscript @ [justTypes.diderot:57.74-78] 
                              Var: x @ [justTypes.diderot:57.74-75] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.76-77] 
                              ]
                          BinOp: < @ [justTypes.diderot:57.82-92] 
                            Subscript @ [justTypes.diderot:57.82-86] 
                              Var: x @ [justTypes.diderot:57.82-83] 
                              [
                                Lit: 2 @ [justTypes.diderot:57.84-85] 
                              ]
                            Lit: 0.1e1 @ [justTypes.diderot:57.89-92] 
                Block @ [justTypes.diderot:58.3-78.0] 
                  [
                    Decl @ [justTypes.diderot:58.3-78.0] 
                      Decl: p= @ [justTypes.diderot:59.5-60.0] 
                        Apply @ [justTypes.diderot:59.23-35] 
                          Select @ [justTypes.diderot:59.23-35] 
                            Var: a @ [justTypes.diderot:59.23-24] 
                            findPos
                          [
                            Var: x @ [justTypes.diderot:59.33-34] 
                          ]
                    IfThenElse @ [justTypes.diderot:60.5-77.0] 
                      Apply @ [justTypes.diderot:60.9-20] 
                        Select @ [justTypes.diderot:60.9-20] 
                          Var: p @ [justTypes.diderot:60.9-10] 
                          isValid
                        [ ]
                      Block @ [justTypes.diderot:60.22-73.0] 
                        [
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: val= @ [justTypes.diderot:61.7-62.0] 
                              Apply @ [justTypes.diderot:61.18-22] 
                                Var: F @ [justTypes.diderot:61.18-19] 
                                [
                                  Var: x @ [justTypes.diderot:61.20-21] 
                                ]
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: grad= @ [justTypes.diderot:62.7-63.0] 
                              UnaryOp: unary - @ [justTypes.diderot:62.19-27] 
                                Apply @ [justTypes.diderot:62.20-27] 
                                  UnaryOp: ∇ @ [justTypes.diderot:62.20-24] 
                                    Var: F @ [justTypes.diderot:62.23-24] 
                                  [
                                    Var: x @ [justTypes.diderot:62.25-26] 
                                  ]
                          Decl @ [justTypes.diderot:60.22-73.0] 
                            Decl: a= @ [justTypes.diderot:63.7-64.0] 
                              BinOp: * @ [justTypes.diderot:63.16-42] 
                                Apply @ [justTypes.diderot:63.16-34] 
                                  Var: alpha @ [justTypes.diderot:63.16-21] 
                                  [
                                    Var: val @ [justTypes.diderot:63.22-25] 
                                    UnaryOp: |()| @ [justTypes.diderot:63.27-33] 
                                      Var: grad @ [justTypes.diderot:63.28-32] 
                                  ]
                                Apply @ [justTypes.diderot:63.35-42] 
                                  Var: mask @ [justTypes.diderot:63.35-39] 
                                  [
                                    Var: x @ [justTypes.diderot:63.40-41] 
                                  ]
                          IfThen @ [justTypes.diderot:64.7-71.7] 
                            BinOp: > @ [justTypes.diderot:64.11-16] 
                              Var: a @ [justTypes.diderot:64.11-12] 
                              Lit: 0 @ [justTypes.diderot:64.15-16] 
                            Block @ [justTypes.diderot:64.18-71.0] 
                              [
                                Assign: a= @ [justTypes.diderot:65.9-66.0] 
                                  BinOp: - @ [justTypes.diderot:65.13-51] 
                                    Lit: 1 @ [justTypes.diderot:65.13-14] 
                                    Apply @ [justTypes.diderot:65.17-51] 
                                      Var: pow @ [justTypes.diderot:65.17-20] 
                                      [
                                        BinOp: - @ [justTypes.diderot:65.21-24] 
                                          Lit: 1 @ [justTypes.diderot:65.21-22] 
                                          Var: a @ [justTypes.diderot:65.23-24] 
                                        BinOp: / @ [justTypes.diderot:65.26-50] 
                                          BinOp: * @ [justTypes.diderot:65.26-42] 
                                            Var: rayStep @ [justTypes.diderot:65.26-33] 
                                            UnaryOp: |()| @ [justTypes.diderot:65.34-42] 
                                              Var: rayVec @ [justTypes.diderot:65.35-41] 
                                          Var: refStep @ [justTypes.diderot:65.43-50] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: depth= @ [justTypes.diderot:66.9-67.0] 
                                    Apply @ [justTypes.diderot:66.22-59] 
                                      Var: lerp @ [justTypes.diderot:66.22-26] 
                                      [
                                        Lit: 0.11e1 @ [justTypes.diderot:66.27-30] 
                                        Lit: 0.7e0 @ [justTypes.diderot:66.32-35] 
                                        Var: camNear @ [justTypes.diderot:66.37-44] 
                                        Var: rayN @ [justTypes.diderot:66.46-50] 
                                        Var: camFar @ [justTypes.diderot:66.52-58] 
                                      ]
                                Decl @ [justTypes.diderot:64.18-71.0] 
                                  Decl: shade= @ [justTypes.diderot:67.9-68.0] 
                                    Apply @ [justTypes.diderot:67.22-53] 
                                      Var: max @ [justTypes.diderot:67.22-25] 
                                      [
                                        Lit: 0 @ [justTypes.diderot:67.26-27] 
                                        BinOp: • @ [justTypes.diderot:67.29-52] 
                                          Apply @ [justTypes.diderot:67.29-44] 
                                            Var: normalize @ [justTypes.diderot:67.29-38] 
                                            [
                                              Var: grad @ [justTypes.diderot:67.39-43] 
                                            ]
                                          Var: light @ [justTypes.diderot:67.47-52] 
                                      ]
                                Assign: rgb+= @ [justTypes.diderot:68.9-69.0] 
                                  BinOp: * @ [justTypes.diderot:68.16-65] 
                                    BinOp: * @ [justTypes.diderot:68.16-56] 
                                      BinOp: * @ [justTypes.diderot:68.16-30] 
                                        BinOp: * @ [justTypes.diderot:68.16-24] 
                                          Var: transp @ [justTypes.diderot:68.16-22] 
                                          Var: a @ [justTypes.diderot:68.23-24] 
                                        Var: depth @ [justTypes.diderot:68.25-30] 
                                      BinOp: + @ [justTypes.diderot:68.32-55] 
                                        Var: phongKa @ [justTypes.diderot:68.32-39] 
                                        BinOp: * @ [justTypes.diderot:68.42-55] 
                                          Var: phongKd @ [justTypes.diderot:68.42-49] 
                                          Var: shade @ [justTypes.diderot:68.50-55] 
                                    Apply @ [justTypes.diderot:68.57-65] 
                                      Var: color @ [justTypes.diderot:68.57-62] 
                                      [
                                        Var: x @ [justTypes.diderot:68.63-64] 
                                      ]
                                Assign: transp*= @ [justTypes.diderot:69.9-70.0] 
                                  BinOp: - @ [justTypes.diderot:69.19-24] 
                                    Lit: 1 @ [justTypes.diderot:69.19-20] 
                                    Var: a @ [justTypes.diderot:69.23-24] 
                              ]
                          Print @ [justTypes.diderot:71.7-72.0] 
                            [
                              Lit: "yay!\n" @ [justTypes.diderot:71.13-21] 
                            ]
                        ]
                      Block @ [justTypes.diderot:73.10-77.0] 
                        [
                          Print @ [justTypes.diderot:74.7-75.0] 
                            [
                              Var: x @ [justTypes.diderot:74.13-14] 
                              Lit: "\n" @ [justTypes.diderot:74.16-20] 
                            ]
                          Print @ [justTypes.diderot:75.7-76.0] 
                            [
                              Lit: "wait what\?\n" @ [justTypes.diderot:75.13-27] 
                            ]
                        ]
                  ]
              IfThen @ [justTypes.diderot:79.5-83.5] 
                BinOp: < @ [justTypes.diderot:79.9-22] 
                  Var: transp @ [justTypes.diderot:79.9-15] 
                  Lit: 0.1e-1 @ [justTypes.diderot:79.18-22] 
                Block @ [justTypes.diderot:79.24-83.0] 
                  [
                    Assign: transp= @ [justTypes.diderot:80.7-81.0] 
                      Lit: 0 @ [justTypes.diderot:80.16-17] 
                    Stabilize @ [justTypes.diderot:81.7-82.0] 
                  ]
              IfThen @ [justTypes.diderot:83.5-84.5] 
                BinOp: > @ [justTypes.diderot:83.9-22] 
                  Var: rayN @ [justTypes.diderot:83.9-13] 
                  Var: camFar @ [justTypes.diderot:83.16-22] 
                Stabilize @ [justTypes.diderot:83.24-84.0] 
              Assign: rayN= @ [justTypes.diderot:84.5-85.0] 
                BinOp: + @ [justTypes.diderot:84.12-26] 
                  Var: rayN @ [justTypes.diderot:84.12-16] 
                  Var: rayStep @ [justTypes.diderot:84.19-26] 
            ]
        Method: Stabilize @ [justTypes.diderot:86.3-93.1] 
          Block @ [justTypes.diderot:86.13-93.0] 
            [
              Decl @ [justTypes.diderot:86.13-93.0] 
                Decl: a= @ [justTypes.diderot:87.5-25] 
                  BinOp: - @ [justTypes.diderot:87.14-24] 
                    Lit: 1 @ [justTypes.diderot:87.14-15] 
                    Var: transp @ [justTypes.diderot:87.18-24] 
              IfThen @ [justTypes.diderot:88.5-89.5] 
                BinOp: > @ [justTypes.diderot:88.9-14] 
                  Var: a @ [justTypes.diderot:88.9-10] 
                  Lit: 0 @ [justTypes.diderot:88.13-14] 
                Assign: rgba= @ [justTypes.diderot:88.16-89.0] 
                  Cons @ [justTypes.diderot:88.23-56] 
                    [
                      BinOp: / @ [justTypes.diderot:88.24-32] 
                        Subscript @ [justTypes.diderot:88.24-30] 
                          Var: rgb @ [justTypes.diderot:88.24-27] 
                          [
                            Lit: 0 @ [justTypes.diderot:88.28-29] 
                          ]
                        Var: a @ [justTypes.diderot:88.31-32] 
                      BinOp: / @ [justTypes.diderot:88.34-42] 
                        Subscript @ [justTypes.diderot:88.34-40] 
                          Var: rgb @ [justTypes.diderot:88.34-37] 
                          [
                            Lit: 1 @ [justTypes.diderot:88.38-39] 
                          ]
                        Var: a @ [justTypes.diderot:88.41-42] 
                      BinOp: / @ [justTypes.diderot:88.44-52] 
                        Subscript @ [justTypes.diderot:88.44-50] 
                          Var: rgb @ [justTypes.diderot:88.44-47] 
                          [
                            Lit: 2 @ [justTypes.diderot:88.48-49] 
                          ]
                        Var: a @ [justTypes.diderot:88.51-52] 
                      Var: a @ [justTypes.diderot:88.54-55] 
                    ]
              IfThen @ [justTypes.diderot:89.5-92.3] 
                AndAlso @ [justTypes.diderot:89.9-38] 
                  BinOp: == @ [justTypes.diderot:89.9-18] 
                    Var: ui @ [justTypes.diderot:89.9-11] 
                    Var: su @ [justTypes.diderot:89.15-17] 
                  AndAlso @ [justTypes.diderot:89.18-38] 
                    BinOp: == @ [justTypes.diderot:89.21-30] 
                      Var: vi @ [justTypes.diderot:89.21-23] 
                      Var: sv @ [justTypes.diderot:89.27-29] 
                    Var: debug @ [justTypes.diderot:89.33-38] 
                Print @ [justTypes.diderot:90.7-91.0] 
                  [
                    Var: a @ [justTypes.diderot:90.13-14] 
                    Var: rgba @ [justTypes.diderot:90.16-20] 
                  ]
            ]
      ]
    Grid @ [justTypes.diderot:94.1-95.0] 
      Comprehension @ [justTypes.diderot:94.14-68] 
        Apply @ [justTypes.diderot:94.15-30] 
          Var: raycast @ [justTypes.diderot:94.15-22] 
          [
            Var: ui @ [justTypes.diderot:94.23-25] 
            Var: vi @ [justTypes.diderot:94.27-29] 
          ]
        [
          Iterator: vi @ [justTypes.diderot:94.33-49] 
            Range @ [justTypes.diderot:94.39-49] 
              Lit: 0 @ [justTypes.diderot:94.39-40] 
              BinOp: - @ [justTypes.diderot:94.42-49] 
                Var: iresV @ [justTypes.diderot:94.42-47] 
                Lit: 1 @ [justTypes.diderot:94.48-49] 
          Iterator: ui @ [justTypes.diderot:94.51-67] 
            Range @ [justTypes.diderot:94.57-67] 
              Lit: 0 @ [justTypes.diderot:94.57-58] 
              BinOp: - @ [justTypes.diderot:94.60-67] 
                Var: iresU @ [justTypes.diderot:94.60-65] 
                Lit: 1 @ [justTypes.diderot:94.66-67] 
        ]
/* end program */
/* AST: After typechecking */
properties: StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemType: Mesh with type var:NONE a = loadFem(Mesh);
input FemType: Space with type var:msh b = loadFem(Space);
input FemType: FemFunc with type var:fns c = loadFem(FemFunc);
input real isoval = 0.2e0;
input real thick = 0.7e-1;
input vec3 camEye = [0.3e1, -0.3e1, 0.3e1];
input vec3 camAt = [0.5e0, 0.5e0, 0.5e0];
input vec3 camUp = [0.e0, 0.e0, 0.1e1];
input real camFOV = 0.137e2;
input int iresU = 500;
input int iresV = 500;
input real camNear = -0.2e1;
input real camFar = 0.5e1;
input real refStep = 0.1e1;
input real rayStep = 0.1e-1;
input vec3 lightVsp = [0.e0, 0.e0, 0.1e1];
input real phongKa = 0.1e0;
input real phongKd = 0.9e0;
input bool debug = false;
input int su = 250;
input int sv = 250;
function bool != (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:msh cell1, FemType: MeshCell with type var:msh cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:msh findPos (FemType: Mesh with type var:msh mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec3, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    cellInt = cellItter;
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 2)) {
      delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
      xn = -<$[3]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[2], -0.e0)))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
          }
        }
      }
    }
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  foreach (int itter in $range (0, * (+ (2, 1), numCell))) {
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      }
    newtonInt = + (newtonInt, 1);
    if >= (newtonInt, 2) {
      newtonInt = 0;
      if >= (cellInt, numCell) {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      else {
        cellInt = + (cellInt, 1);
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: RefCell with type var:msh refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:msh, RefCell(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:msh[], Cells(Mesh));
  }
function FemType: MeshCell with type var:msh[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] msh_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] msh_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 msh_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 msh_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:msh _msh_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 2)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:msh;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:msh;
  }
function FemType: MeshPos with type var:msh _mesh_pos_msh_build_world_pos (FemType: MeshPos with type var:msh pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:msh,vec3 (pos, msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:msh;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:msh pos)
{
  return msh_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:msh $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3 (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]], [[0.1e1, 0.2e1, 0.1e1, -0.1e1], [-0.1e1, -0.1e1, -0.192296268638e-15, 0.1e1], [0.173205080757e1, 0.173205080757e1, 0.173205080757e1, -0.173205080757e1], [0.222044604925e-15, 0.e0, 0.44408920985e-15, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [-0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, 0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, 0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, -0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]])):FemType: MeshPos with type var:msh;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:msh;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
    }
  }
function int[2] $nextCell2 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  nearbyCells = extractFemItem(mesh, cell : int, int[], CellConnectivity(Mesh));
  numFacetNodes = length<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))});
  if == (3, numFacetNodes)
    foreach (int cellInt in nearbyCells) {
      if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 0};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 1};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 3)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 2};
        if $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 0), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 0)), $and (== ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 1), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 1)), == ($sub<int; %3> ({$sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 0), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 1), $sub<int; %4> (extractFemItem(mesh, cellInt : int, int[4], ExtractIndices(Mesh)), 2)}, 2), $dynsub<int> ({$sub<int; %12> ({1, 2, 3, 0, 2, 3, 0, 1, 3, 0, 1, 2}, + ($sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 0), i)) | int i in $range (0, $sub<int; %2> ($sub<int[2]; %4> ({{1, 3}, {3, 3}, {9, 3}, {27, 3}}, faceIdx), 1))}, 2))))
        return {cellInt, 3};
        }
    return {-1, -1};
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
      face = 0;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      face = 1;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))))
    if $and (> (+<$[]> (0.1e1, 0.1e-4), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[0], -0.e0), $and (> (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[1], -0.e0), > (+<$[3]> ([0.1e-4, 0.1e-4, 0.1e-4], +<$[3]> (*<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), refPos))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 3;
      }
    if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  if $and (> (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)), -0.e0), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos)))) {
    time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, -0.57735026919e0, 0.57735026919e0], dPos));
    face = 0;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
    face = 1;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.1e1, 0.e0], dPos));
    face = 2;
    }
  if $and (> (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.e0), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))) {
    time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
    face = 3;
    }
  if != (face, -1) {
    return [time, (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function FemType: Mesh with type var:msh domain (FemType: Space with type var:msh arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:msh space (FemType: FemFunc with type var:fns arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:FUNC funcCell (FemType: FemFunc with type var:fns arg0, FemType: MeshCell with type var:msh arg1)
{
  return loadFem(FuncCell);
  }
field(3)[] V = ∘<#; %3; $[]; %3; $[3]> (femField(c,extractFem(Mesh,extractFem(Space,c ) ),field(3)[], refField, findPos), femField(extractFem(Mesh,extractFem(Space,c ) ),extractFem(Mesh,extractFem(Space,c ) ),field(3)[3], InvTransform, findPos));
field#4(3)[] F = (field#4(3)[])(-<#; %3; $[]> (V, isoval));
function real mask (vec3 x)
{
  return 0.1e1;
  }
image(1)[3] I = loadImage<%1; $[3]> ("cmap.nrrd");
field#0(1)[3] cmap = ⊛<#0; %1; $[3]> (tent, clamp<%1; $[3]> (I));
function vec3 color (vec3 x)
{
  return @<#0; %1; $[3]> (cmap, @<#; %3; $[]> (V, x));
  }
function real alpha (real v, real g)
{
  return clamp<$[]> ((real)0, (real)1, * (0.13e1, -<$[]> ((real)1, / (|()|<$[]> (v), * (g, thick)))));
  }
real camDist = |()|<$[3]> (-<$[3]> (camAt, camEye));
vec3 camN = normalize<$[3]> (-<$[3]> (camAt, camEye));
vec3 camU = normalize<$[3]> (× (camN, camUp));
vec3 camV = × (camU, camN);
real camVmax = * (tan (/ (* (camFOV, 0.314159265358979323846264338327950288e1), (real)360)), camDist);
real camUmax = / (* (camVmax, (real)iresU), (real)iresV);
vec3 light = •<$[3,3]; $[3]; $[3]> (transpose<%3; %3> ([camU, camV, camN]), normalize<$[3]> (lightVsp));
strand raycast (int ui, int vi)
{
  real rayU = lerp<$[]> (unary -<$[]> (camUmax), camUmax, unary -<$[]> (0.5e0), (real)ui, -<$[]> ((real)iresU, 0.5e0));
  real rayV = lerp<$[]> (camVmax, unary -<$[]> (camVmax), unary -<$[]> (0.5e0), (real)vi, -<$[]> ((real)iresV, 0.5e0));
  real rayN = camNear;
  vec3 rayVec = +<$[3]> (camN, /<$[3]> (+<$[3]> (*<$[3]> (rayU, camU), *<$[3]> (rayV, camV)), camDist));
  real transp = 0.1e1;
  vec3 rgb = [0.e0, 0.e0, 0.e0];
  output vec4 rgba = [0.e0, 0.e0, 0.e0, 0.e0];
  output real gray = 0.e0;
  update {
    if debug
      if (!= (ui, su) || != (vi, sv))
        stabilize;
        vec3 x = +<$[3]> (camEye, *<$[3]> (rayN, rayVec));
    if (< (0.e0, x[0]) && (< (x[0], 0.1e1) && (< (0.e0, x[1]) && (< (x[1], 0.1e1) && (< (0.e0, x[2]) && < (x[2], 0.1e1)))))) {
      FemType: MeshPos with type var:msh p = findPos (a, x);
      if extractFemItem(p, bool, Valid(MeshPos)) {
        real val = @<#4; %3; $[]> (F, x);
        vec3 grad = unary -<$[3]> (@<#3; %3; $[3]> (∇<#4; %3> (F), x));
        real a = * (alpha (val, |()|<$[3]> (grad)), mask (x));
        if > (a, (real)0) {
          a = -<$[]> ((real)1, pow (-<$[]> ((real)1, a), / (* (rayStep, |()|<$[3]> (rayVec)), refStep)));
          real depth = lerp<$[]> (0.11e1, 0.7e0, camNear, rayN, camFar);
          real shade = max ((real)0, •<$[3]; $[3]; $[]> (normalize<$[3]> (grad), light));
          rgb = +<$[3]> (rgb, *<$[3]> (* (* (* (transp, a), depth), +<$[]> (phongKa, * (phongKd, shade))), color (x)));
          transp = * (transp, -<$[]> ((real)1, a));
          }
        print ("yay!\n");
        }
      else {
        print (x, "\n");
        print ("wait what\?\n");
        }
      }
    if < (transp, 0.1e-1) {
      transp = 0.e0;
      stabilize;
      }
    if > (rayN, camFar)
      stabilize;
      rayN = +<$[]> (rayN, rayStep);
    }
  stabilize {
    real a = -<$[]> ((real)1, transp);
    if > (a, (real)0)
      rgba = [/ (rgb[0], a), / (rgb[1], a), / (rgb[2], a), a];
      if (== (ui, su) && (== (vi, sv) && debug))
      print (a, rgba);
      }
  
}
grid(2) {
    foreach (int vi in $range (0, - (iresV, 1))) {
      foreach (int ui in $range (0, - (iresU, 1))) {
        new raycast (ui, vi);
        }
      }
    }
  
/* Program end */
cmap.nrrd file header:
  type: double
  dimension: 2
  space dimension: 1
  sizes: 3 311
  space directions: none (0.0066445182724252493)
  kinds: 3-vector space
  endian: little
  encoding: raw
  space origin: (-1.0299003322259137)
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: MeshCell[] 0cell_a0430;
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function Femdata: RefCell#0 refcell04F3 (Femdata: Mesh arg004F4)
{
  Femdata: RefCell _t04F5 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004F4);
  return _t04F5;
}
function Femdata: MeshCell[]#0 cells04F6 (Femdata: Mesh arg004F7)
{
  Femdata: MeshCell[] _t04F8 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004F7);
  return _t04F8;
}
function Femdata: MeshCell[]#0 cells04F9 (Femdata: Mesh arg004F7)
{
  int _t04FA = 0;
  int _t04FB = extractFemItem(NumCell(Mesh), int, arg004F7);
  int[] _t04FC = prim $range01C3 (_t04FA, _t04FB);
  Femdata: MeshCell[] accum04FF = {};
  foreach i04FD in _t04FC {
    Femdata: MeshCell _t04FE = loadFem(MeshCell, arg004F7, i04FD);
    accum04FF = prim @0010<Femdata: MeshCell> (accum04FF, _t04FE);
  }
  return accum04FF;
}
function int#0 numCell0500 (Femdata: Mesh arg004F4)
{
  int _t0501 = extractFemItem(NumCell(Mesh), int, arg004F4);
  return _t0501;
}
function tensor[3,3,3,3]#0 msh_transform_30502 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0506 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0507 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0506);
  field(3)[3,3,3] _t0508 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0507);
  field(3)[3,3,3,3] _t0509 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0508);
  tensor[3,3,3,3] _t050A = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0509, pos0503);
  return _t050A;
}
function tensor[3,3,3]#0 msh_transform_2050B (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t050C = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t050D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t050C);
  field(3)[3,3,3] _t050E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t050D);
  tensor[3,3,3] _t050F = prim @00A5<#∞; %3; $[3,3,3]> (_t050E, pos0503);
  return _t050F;
}
function tensor[3,3]#0 msh_transform_10510 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0511 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0512 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0511);
  tensor[3,3] _t0513 = prim @00A5<#∞; %3; $[3,3]> (_t0512, pos0503);
  return _t0513;
}
function vec3#2 msh_transform_00514 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0515 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  vec3 _t0516 = prim @00A5<#∞; %3; $[3]> (_t0515, pos0503);
  return _t0516;
}
function Femdata: MeshPos#0 _msh_newtonInverse0517 (vec3 pos0518, int cellInt0519, Femdata: Mesh mesh051A)
{
  real _t051B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn051E = [_t051B, _t051C, _t051D];
  field(3)[3] _t051F = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
  field(3)[3,3] _t0520 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t051F);
  field(3)[3,3] _t0521 = prim inv015E<#∞; %3> (_t0520);
  real _t0522 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0523 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0524 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0525 = [_t0522, _t0523, _t0524];
  A0526 = prim @00A5<#∞; %3; $[3,3]> (_t0521, _t0525);
  int _t0527 = 0;
  int _t0528 = 2;
  int[] _t0529 = prim $range01C3 (_t0527, _t0528);
  foreach itter0559 in _t0529 {
    field(3)[3] _t052A = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
    field(3)[3] _t052B = prim -002E<#∞; %3; $[3]> (_t052A, pos0518);
    field(3)[3] _t052C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0526, _t052B);
    delta052D = prim @00A5<#∞; %3; $[3]> (_t052C, xn051E);
    xn051E = prim -0026<$[3]> (xn051E, delta052D);
    real _t052E = 0.1e-7;
    real _t052F = 0.1e-7;
    real _t0530 = prim *0034 (_t052E, _t052F);
    real _t0531 = prim •00CE<$[3]; $[3]; $[]> (delta052D, delta052D);
    bool _t0532 = prim >=007E (_t0530, _t0531);
    if _t0532 {
      real _t0533 = 0.1e1;
      real _t0534 = 0.1e-4;
      real _t0535 = prim +0017<$[]> (_t0533, _t0534);
      real _t0536 = 0.1e1;
      real _t0537 = 0.1e1;
      real _t0538 = 0.1e1;
      vec3 _t0539 = [_t0536, _t0537, _t0538];
      real _t053A = prim •00CE<$[3]; $[3]; $[]> (_t0539, xn051E);
      bool _t053B = prim >0080 (_t0535, _t053A);
      real _t053C = 0.1e-4;
      real _t053D = 0.1e-4;
      real _t053E = 0.1e-4;
      vec3 _t053F = [_t053C, _t053D, _t053E];
      vec3 _t0540 = prim +0017<$[3]> (_t053F, xn051E);
      real _t0541 = _t0540[0];
      real _t0542 = -0.e0;
      bool _t0543 = prim >0080 (_t0541, _t0542);
      real _t0544 = 0.1e-4;
      real _t0545 = 0.1e-4;
      real _t0546 = 0.1e-4;
      vec3 _t0547 = [_t0544, _t0545, _t0546];
      vec3 _t0548 = prim +0017<$[3]> (_t0547, xn051E);
      real _t0549 = _t0548[1];
      real _t054A = -0.e0;
      bool _t054B = prim >0080 (_t0549, _t054A);
      real _t054C = 0.1e-4;
      real _t054D = 0.1e-4;
      real _t054E = 0.1e-4;
      vec3 _t054F = [_t054C, _t054D, _t054E];
      vec3 _t0550 = prim +0017<$[3]> (_t054F, xn051E);
      real _t0551 = _t0550[2];
      real _t0552 = -0.e0;
      bool _t0553 = prim >0080 (_t0551, _t0552);
      bool _t0554 = prim $and01C4 (_t054B, _t0553);
      bool _t0555 = prim $and01C4 (_t0543, _t0554);
      bool _t0556 = prim $and01C4 (_t053B, _t0555);
      if _t0556 {
        Femdata: MeshPos _t0557 = extractFemItemN((mesh051A, cellInt0519, xn051E, pos0518),AllBuild(MeshPos),);
        return _t0557;
      } else {
        Femdata: MeshPos _t0558 = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
        return _t0558;
      }
    }
  }
  Femdata: MeshPos _t055A = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
  return _t055A;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos055B (Femdata: MeshPos pos055C)
{
  bool _t055D = extractFemItem(WorldTest(MeshPos), bool, pos055C);
  if _t055D {
    vec3 _t055E = extractFemItem(RefPos(MeshPos), vec3, pos055C);
    int _t055F = extractFemItem(CellIndex(MeshPos), int, pos055C);
    Femdata: Mesh _t0560 = extractFem(pos055C, Mesh);
    vec3 _t0561 = func msh_transform_00514 (_t055E, _t055F, _t0560);
    Femdata: MeshPos _t0562 = extractFemItemN((pos055C, _t0561),NewWorld(MeshPos),);
    return _t0562;
  } else {
    return pos055C;
  }
}
function vec3#0 worldPos0563 (Femdata: MeshPos pos055C)
{
  vec3 _t0564 = extractFemItem(RefPos(MeshPos), vec3, pos055C);
  int _t0565 = extractFemItem(CellIndex(MeshPos), int, pos055C);
  Femdata: Mesh _t0566 = extractFem(pos055C, Mesh);
  vec3 _t0567 = func msh_transform_00514 (_t0564, _t0565, _t0566);
  return _t0567;
}
function Femdata: MeshPos#0 $exitPos0568 (Femdata: Mesh mesh0569, int cellId056A, vec3 refPos056B, vec3 dPos056C, real[2] time056D)
{
  int _t056E = -1;
  real _t056F = time056D[1];
  int _t0570 = prim $r2i01B7 (_t056F);
  int[2] _t0572 = func nextCell40571 (_t0570, cellId056A, mesh0569);
  int _t0573 = 0;
  int _t0574 = prim $sub01C0<int; %2> (_t0572, _t0573);
  bool _t0575 = prim !=0086 (_t056E, _t0574);
  if _t0575 {
    real _t0576 = time056D[1];
    int _t0577 = prim $r2i01B7 (_t0576);
    int[2] _t0578 = func nextCell40571 (_t0577, cellId056A, mesh0569);
    int _t0579 = 0;
    int _t057A = prim $sub01C0<int; %2> (_t0578, _t0579);
    real _t057B = 0.1e1;
    real _t057C = 0.e0;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    vec4 _t057F = [_t057B, _t057C, _t057D, _t057E];
    real _t0580 = 0.e0;
    real _t0581 = 0.1e1;
    real _t0582 = 0.e0;
    real _t0583 = 0.e0;
    vec4 _t0584 = [_t0580, _t0581, _t0582, _t0583];
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    real _t0587 = 0.1e1;
    real _t0588 = 0.e0;
    vec4 _t0589 = [_t0585, _t0586, _t0587, _t0588];
    real _t058A = 0.222044604925e-15;
    real _t058B = 0.e0;
    real _t058C = 0.44408920985e-15;
    real _t058D = 0.1e1;
    vec4 _t058E = [_t058A, _t058B, _t058C, _t058D];
    tensor[4,4] _t058F = [_t057F, _t0584, _t0589, _t058E];
    real _t0590 = 0.173205080757e1;
    real _t0591 = 0.173205080757e1;
    real _t0592 = 0.173205080757e1;
    real _t0593 = -0.173205080757e1;
    vec4 _t0594 = [_t0590, _t0591, _t0592, _t0593];
    real _t0595 = 0.1e1;
    real _t0596 = 0.2e1;
    real _t0597 = 0.1e1;
    real _t0598 = -0.1e1;
    vec4 _t0599 = [_t0595, _t0596, _t0597, _t0598];
    real _t059A = -0.1e1;
    real _t059B = -0.1e1;
    real _t059C = -0.192296268638e-15;
    real _t059D = 0.1e1;
    vec4 _t059E = [_t059A, _t059B, _t059C, _t059D];
    real _t059F = 0.222044604925e-15;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.44408920985e-15;
    real _t05A2 = 0.1e1;
    vec4 _t05A3 = [_t059F, _t05A0, _t05A1, _t05A2];
    tensor[4,4] _t05A4 = [_t0594, _t0599, _t059E, _t05A3];
    real _t05A5 = 0.1e1;
    real _t05A6 = 0.2e1;
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.1e1;
    vec4 _t05A9 = [_t05A5, _t05A6, _t05A7, _t05A8];
    real _t05AA = 0.173205080757e1;
    real _t05AB = 0.173205080757e1;
    real _t05AC = 0.173205080757e1;
    real _t05AD = -0.173205080757e1;
    vec4 _t05AE = [_t05AA, _t05AB, _t05AC, _t05AD];
    real _t05AF = -0.1e1;
    real _t05B0 = -0.1e1;
    real _t05B1 = -0.192296268638e-15;
    real _t05B2 = 0.1e1;
    vec4 _t05B3 = [_t05AF, _t05B0, _t05B1, _t05B2];
    real _t05B4 = 0.222044604925e-15;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.44408920985e-15;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    tensor[4,4] _t05B9 = [_t05A9, _t05AE, _t05B3, _t05B8];
    real _t05BA = 0.1e1;
    real _t05BB = 0.2e1;
    real _t05BC = 0.1e1;
    real _t05BD = -0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    real _t05BF = -0.1e1;
    real _t05C0 = -0.1e1;
    real _t05C1 = -0.192296268638e-15;
    real _t05C2 = 0.1e1;
    vec4 _t05C3 = [_t05BF, _t05C0, _t05C1, _t05C2];
    real _t05C4 = 0.173205080757e1;
    real _t05C5 = 0.173205080757e1;
    real _t05C6 = 0.173205080757e1;
    real _t05C7 = -0.173205080757e1;
    vec4 _t05C8 = [_t05C4, _t05C5, _t05C6, _t05C7];
    real _t05C9 = 0.222044604925e-15;
    real _t05CA = 0.e0;
    real _t05CB = 0.44408920985e-15;
    real _t05CC = 0.1e1;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    tensor[4,4] _t05CE = [_t05BE, _t05C3, _t05C8, _t05CD];
    tensor[4,4][4] _t05CF = {_t058F, _t05A4, _t05B9, _t05CE};
    real _t05D0 = 0.57735026919e0;
    real _t05D1 = -0.1e1;
    real _t05D2 = -0.1e1;
    real _t05D3 = 0.1e1;
    vec4 _t05D4 = [_t05D0, _t05D1, _t05D2, _t05D3];
    real _t05D5 = -0.57735026919e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.57735026919e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    real _t05E2 = 0.1e1;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    tensor[4,4] _t05E4 = [_t05D4, _t05D9, _t05DE, _t05E3];
    real _t05E5 = 0.1e1;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    vec4 _t05E9 = [_t05E5, _t05E6, _t05E7, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.1e1;
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    real _t05F1 = 0.1e1;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.1e1;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    tensor[4,4] _t05F9 = [_t05E9, _t05EE, _t05F3, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.1e1;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.e0;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    tensor[4,4] _t060E = [_t05FE, _t0603, _t0608, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.e0;
    real _t0621 = 0.1e1;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    tensor[4,4] _t0623 = [_t0613, _t0618, _t061D, _t0622];
    tensor[4,4][4] _t0624 = {_t05E4, _t05F9, _t060E, _t0623};
    real _t0625 = -0.1e1;
    real _t0626 = 0.57735026919e0;
    real _t0627 = -0.1e1;
    real _t0628 = 0.1e1;
    vec4 _t0629 = [_t0625, _t0626, _t0627, _t0628];
    real _t062A = 0.1e1;
    real _t062B = -0.57735026919e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.57735026919e0;
    real _t0631 = 0.1e1;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    real _t0637 = 0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    tensor[4,4] _t0639 = [_t0629, _t062E, _t0633, _t0638];
    real _t063A = 0.e0;
    real _t063B = 0.1e1;
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    vec4 _t063E = [_t063A, _t063B, _t063C, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    real _t064C = 0.1e1;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    tensor[4,4] _t064E = [_t063E, _t0643, _t0648, _t064D];
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    vec4 _t0653 = [_t064F, _t0650, _t0651, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = 0.e0;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    tensor[4,4] _t0663 = [_t0653, _t0658, _t065D, _t0662];
    real _t0664 = 0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec4 _t0668 = [_t0664, _t0665, _t0666, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    real _t066C = 0.e0;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.e0;
    real _t0676 = 0.1e1;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    tensor[4,4] _t0678 = [_t0668, _t066D, _t0672, _t0677];
    tensor[4,4][4] _t0679 = {_t0639, _t064E, _t0663, _t0678};
    real _t067A = -0.1e1;
    real _t067B = -0.1e1;
    real _t067C = 0.57735026919e0;
    real _t067D = 0.1e1;
    vec4 _t067E = [_t067A, _t067B, _t067C, _t067D];
    real _t067F = 0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = -0.57735026919e0;
    real _t0682 = 0.e0;
    vec4 _t0683 = [_t067F, _t0680, _t0681, _t0682];
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    real _t0686 = 0.57735026919e0;
    real _t0687 = 0.e0;
    vec4 _t0688 = [_t0684, _t0685, _t0686, _t0687];
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.1e1;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    tensor[4,4] _t068E = [_t067E, _t0683, _t0688, _t068D];
    real _t068F = 0.e0;
    real _t0690 = 0.e0;
    real _t0691 = 0.1e1;
    real _t0692 = 0.e0;
    vec4 _t0693 = [_t068F, _t0690, _t0691, _t0692];
    real _t0694 = 0.1e1;
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    vec4 _t0698 = [_t0694, _t0695, _t0696, _t0697];
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    vec4 _t069D = [_t0699, _t069A, _t069B, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.1e1;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    tensor[4,4] _t06A3 = [_t0693, _t0698, _t069D, _t06A2];
    real _t06A4 = 0.1e1;
    real _t06A5 = 0.e0;
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    vec4 _t06A8 = [_t06A4, _t06A5, _t06A6, _t06A7];
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    tensor[4,4] _t06B8 = [_t06A8, _t06AD, _t06B2, _t06B7];
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    real _t06BC = 0.e0;
    vec4 _t06BD = [_t06B9, _t06BA, _t06BB, _t06BC];
    real _t06BE = 0.e0;
    real _t06BF = 0.1e1;
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    tensor[4,4] _t06CD = [_t06BD, _t06C2, _t06C7, _t06CC];
    tensor[4,4][4] _t06CE = {_t068E, _t06A3, _t06B8, _t06CD};
    tensor[4,4][4][4] _t06CF = {_t05CF, _t0624, _t0679, _t06CE};
    real _t06D0 = time056D[1];
    int _t06D1 = prim $r2i01B7 (_t06D0);
    tensor[4,4][4] _t06D2 = prim $sub01C0<tensor[4,4][4]; %4> (_t06CF, _t06D1);
    real _t06D3 = time056D[1];
    int _t06D4 = prim $r2i01B7 (_t06D3);
    int[2] _t06D5 = func nextCell40571 (_t06D4, cellId056A, mesh0569);
    int _t06D6 = 1;
    int _t06D7 = prim $sub01C0<int; %2> (_t06D5, _t06D6);
    tensor[4,4] _t06D8 = prim $sub01C0<tensor[4,4]; %4> (_t06D2, _t06D7);
    real _t06D9 = time056D[0];
    vec3 _t06DA = prim *0036<$[3]> (_t06D9, dPos056C);
    vec3 _t06DB = prim +0017<$[3]> (_t06DA, refPos056B);
    real _t06DC = _t06DB[0];
    real _t06DD = time056D[0];
    vec3 _t06DE = prim *0036<$[3]> (_t06DD, dPos056C);
    vec3 _t06DF = prim +0017<$[3]> (_t06DE, refPos056B);
    real _t06E0 = _t06DF[1];
    real _t06E1 = time056D[0];
    vec3 _t06E2 = prim *0036<$[3]> (_t06E1, dPos056C);
    vec3 _t06E3 = prim +0017<$[3]> (_t06E2, refPos056B);
    real _t06E4 = _t06E3[2];
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06DC, _t06E0, _t06E4, _t06E5];
    vec4 _t06E7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t06D8, _t06E6);
    real _t06E8 = _t06E7[0];
    real _t06E9 = 0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    vec4 _t06ED = [_t06E9, _t06EA, _t06EB, _t06EC];
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    real _t06F0 = 0.e0;
    real _t06F1 = 0.e0;
    vec4 _t06F2 = [_t06EE, _t06EF, _t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.222044604925e-15;
    real _t06F9 = 0.e0;
    real _t06FA = 0.44408920985e-15;
    real _t06FB = 0.1e1;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    tensor[4,4] _t06FD = [_t06ED, _t06F2, _t06F7, _t06FC];
    real _t06FE = 0.173205080757e1;
    real _t06FF = 0.173205080757e1;
    real _t0700 = 0.173205080757e1;
    real _t0701 = -0.173205080757e1;
    vec4 _t0702 = [_t06FE, _t06FF, _t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.2e1;
    real _t0705 = 0.1e1;
    real _t0706 = -0.1e1;
    vec4 _t0707 = [_t0703, _t0704, _t0705, _t0706];
    real _t0708 = -0.1e1;
    real _t0709 = -0.1e1;
    real _t070A = -0.192296268638e-15;
    real _t070B = 0.1e1;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.222044604925e-15;
    real _t070E = 0.e0;
    real _t070F = 0.44408920985e-15;
    real _t0710 = 0.1e1;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    tensor[4,4] _t0712 = [_t0702, _t0707, _t070C, _t0711];
    real _t0713 = 0.1e1;
    real _t0714 = 0.2e1;
    real _t0715 = 0.1e1;
    real _t0716 = -0.1e1;
    vec4 _t0717 = [_t0713, _t0714, _t0715, _t0716];
    real _t0718 = 0.173205080757e1;
    real _t0719 = 0.173205080757e1;
    real _t071A = 0.173205080757e1;
    real _t071B = -0.173205080757e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = -0.1e1;
    real _t071E = -0.1e1;
    real _t071F = -0.192296268638e-15;
    real _t0720 = 0.1e1;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.222044604925e-15;
    real _t0723 = 0.e0;
    real _t0724 = 0.44408920985e-15;
    real _t0725 = 0.1e1;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    tensor[4,4] _t0727 = [_t0717, _t071C, _t0721, _t0726];
    real _t0728 = 0.1e1;
    real _t0729 = 0.2e1;
    real _t072A = 0.1e1;
    real _t072B = -0.1e1;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = -0.1e1;
    real _t072E = -0.1e1;
    real _t072F = -0.192296268638e-15;
    real _t0730 = 0.1e1;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.173205080757e1;
    real _t0733 = 0.173205080757e1;
    real _t0734 = 0.173205080757e1;
    real _t0735 = -0.173205080757e1;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.222044604925e-15;
    real _t0738 = 0.e0;
    real _t0739 = 0.44408920985e-15;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    tensor[4,4][4] _t073D = {_t06FD, _t0712, _t0727, _t073C};
    real _t073E = 0.57735026919e0;
    real _t073F = -0.1e1;
    real _t0740 = -0.1e1;
    real _t0741 = 0.1e1;
    vec4 _t0742 = [_t073E, _t073F, _t0740, _t0741];
    real _t0743 = -0.57735026919e0;
    real _t0744 = 0.1e1;
    real _t0745 = 0.e0;
    real _t0746 = 0.e0;
    vec4 _t0747 = [_t0743, _t0744, _t0745, _t0746];
    real _t0748 = 0.57735026919e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    real _t074B = 0.e0;
    vec4 _t074C = [_t0748, _t0749, _t074A, _t074B];
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    vec4 _t0751 = [_t074D, _t074E, _t074F, _t0750];
    tensor[4,4] _t0752 = [_t0742, _t0747, _t074C, _t0751];
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    vec4 _t0757 = [_t0753, _t0754, _t0755, _t0756];
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    real _t075A = 0.e0;
    real _t075B = 0.e0;
    vec4 _t075C = [_t0758, _t0759, _t075A, _t075B];
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    real _t075F = 0.1e1;
    real _t0760 = 0.e0;
    vec4 _t0761 = [_t075D, _t075E, _t075F, _t0760];
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    real _t0765 = 0.1e1;
    vec4 _t0766 = [_t0762, _t0763, _t0764, _t0765];
    tensor[4,4] _t0767 = [_t0757, _t075C, _t0761, _t0766];
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    vec4 _t076C = [_t0768, _t0769, _t076A, _t076B];
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    real _t0770 = 0.e0;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    real _t0774 = 0.1e1;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.e0;
    real _t077A = 0.1e1;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    tensor[4,4] _t077C = [_t076C, _t0771, _t0776, _t077B];
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    vec4 _t0781 = [_t077D, _t077E, _t077F, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.e0;
    real _t078F = 0.1e1;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    tensor[4,4] _t0791 = [_t0781, _t0786, _t078B, _t0790];
    tensor[4,4][4] _t0792 = {_t0752, _t0767, _t077C, _t0791};
    real _t0793 = -0.1e1;
    real _t0794 = 0.57735026919e0;
    real _t0795 = -0.1e1;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    real _t0798 = 0.1e1;
    real _t0799 = -0.57735026919e0;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    vec4 _t079C = [_t0798, _t0799, _t079A, _t079B];
    real _t079D = 0.e0;
    real _t079E = 0.57735026919e0;
    real _t079F = 0.1e1;
    real _t07A0 = 0.e0;
    vec4 _t07A1 = [_t079D, _t079E, _t079F, _t07A0];
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    vec4 _t07A6 = [_t07A2, _t07A3, _t07A4, _t07A5];
    tensor[4,4] _t07A7 = [_t0797, _t079C, _t07A1, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.e0;
    vec4 _t07B1 = [_t07AD, _t07AE, _t07AF, _t07B0];
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.1e1;
    real _t07B5 = 0.e0;
    vec4 _t07B6 = [_t07B2, _t07B3, _t07B4, _t07B5];
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    real _t07BA = 0.1e1;
    vec4 _t07BB = [_t07B7, _t07B8, _t07B9, _t07BA];
    tensor[4,4] _t07BC = [_t07AC, _t07B1, _t07B6, _t07BB];
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    vec4 _t07C1 = [_t07BD, _t07BE, _t07BF, _t07C0];
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.e0;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.e0;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    real _t07CF = 0.1e1;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    tensor[4,4] _t07D1 = [_t07C1, _t07C6, _t07CB, _t07D0];
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    vec4 _t07D6 = [_t07D2, _t07D3, _t07D4, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.1e1;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    tensor[4,4] _t07E6 = [_t07D6, _t07DB, _t07E0, _t07E5];
    tensor[4,4][4] _t07E7 = {_t07A7, _t07BC, _t07D1, _t07E6};
    real _t07E8 = -0.1e1;
    real _t07E9 = -0.1e1;
    real _t07EA = 0.57735026919e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    real _t07ED = 0.1e1;
    real _t07EE = 0.e0;
    real _t07EF = -0.57735026919e0;
    real _t07F0 = 0.e0;
    vec4 _t07F1 = [_t07ED, _t07EE, _t07EF, _t07F0];
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.57735026919e0;
    real _t07F5 = 0.e0;
    vec4 _t07F6 = [_t07F2, _t07F3, _t07F4, _t07F5];
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    vec4 _t07FB = [_t07F7, _t07F8, _t07F9, _t07FA];
    tensor[4,4] _t07FC = [_t07EC, _t07F1, _t07F6, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.1e1;
    real _t0800 = 0.e0;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    real _t0802 = 0.1e1;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    vec4 _t0806 = [_t0802, _t0803, _t0804, _t0805];
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    vec4 _t080B = [_t0807, _t0808, _t0809, _t080A];
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    vec4 _t0810 = [_t080C, _t080D, _t080E, _t080F];
    tensor[4,4] _t0811 = [_t0801, _t0806, _t080B, _t0810];
    real _t0812 = 0.1e1;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.e0;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.1e1;
    real _t081A = 0.e0;
    vec4 _t081B = [_t0817, _t0818, _t0819, _t081A];
    real _t081C = 0.e0;
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    vec4 _t0820 = [_t081C, _t081D, _t081E, _t081F];
    real _t0821 = 0.e0;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    vec4 _t0825 = [_t0821, _t0822, _t0823, _t0824];
    tensor[4,4] _t0826 = [_t0816, _t081B, _t0820, _t0825];
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    vec4 _t0830 = [_t082C, _t082D, _t082E, _t082F];
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.1e1;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    real _t0839 = 0.1e1;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    tensor[4,4] _t083B = [_t082B, _t0830, _t0835, _t083A];
    tensor[4,4][4] _t083C = {_t07FC, _t0811, _t0826, _t083B};
    tensor[4,4][4][4] _t083D = {_t073D, _t0792, _t07E7, _t083C};
    real _t083E = time056D[1];
    int _t083F = prim $r2i01B7 (_t083E);
    tensor[4,4][4] _t0840 = prim $sub01C0<tensor[4,4][4]; %4> (_t083D, _t083F);
    real _t0841 = time056D[1];
    int _t0842 = prim $r2i01B7 (_t0841);
    int[2] _t0843 = func nextCell40571 (_t0842, cellId056A, mesh0569);
    int _t0844 = 1;
    int _t0845 = prim $sub01C0<int; %2> (_t0843, _t0844);
    tensor[4,4] _t0846 = prim $sub01C0<tensor[4,4]; %4> (_t0840, _t0845);
    real _t0847 = time056D[0];
    vec3 _t0848 = prim *0036<$[3]> (_t0847, dPos056C);
    vec3 _t0849 = prim +0017<$[3]> (_t0848, refPos056B);
    real _t084A = _t0849[0];
    real _t084B = time056D[0];
    vec3 _t084C = prim *0036<$[3]> (_t084B, dPos056C);
    vec3 _t084D = prim +0017<$[3]> (_t084C, refPos056B);
    real _t084E = _t084D[1];
    real _t084F = time056D[0];
    vec3 _t0850 = prim *0036<$[3]> (_t084F, dPos056C);
    vec3 _t0851 = prim +0017<$[3]> (_t0850, refPos056B);
    real _t0852 = _t0851[2];
    real _t0853 = 0.1e1;
    vec4 _t0854 = [_t084A, _t084E, _t0852, _t0853];
    vec4 _t0855 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0846, _t0854);
    real _t0856 = _t0855[1];
    real _t0857 = 0.1e1;
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    real _t0863 = 0.1e1;
    real _t0864 = 0.e0;
    vec4 _t0865 = [_t0861, _t0862, _t0863, _t0864];
    real _t0866 = 0.222044604925e-15;
    real _t0867 = 0.e0;
    real _t0868 = 0.44408920985e-15;
    real _t0869 = 0.1e1;
    vec4 _t086A = [_t0866, _t0867, _t0868, _t0869];
    tensor[4,4] _t086B = [_t085B, _t0860, _t0865, _t086A];
    real _t086C = 0.173205080757e1;
    real _t086D = 0.173205080757e1;
    real _t086E = 0.173205080757e1;
    real _t086F = -0.173205080757e1;
    vec4 _t0870 = [_t086C, _t086D, _t086E, _t086F];
    real _t0871 = 0.1e1;
    real _t0872 = 0.2e1;
    real _t0873 = 0.1e1;
    real _t0874 = -0.1e1;
    vec4 _t0875 = [_t0871, _t0872, _t0873, _t0874];
    real _t0876 = -0.1e1;
    real _t0877 = -0.1e1;
    real _t0878 = -0.192296268638e-15;
    real _t0879 = 0.1e1;
    vec4 _t087A = [_t0876, _t0877, _t0878, _t0879];
    real _t087B = 0.222044604925e-15;
    real _t087C = 0.e0;
    real _t087D = 0.44408920985e-15;
    real _t087E = 0.1e1;
    vec4 _t087F = [_t087B, _t087C, _t087D, _t087E];
    tensor[4,4] _t0880 = [_t0870, _t0875, _t087A, _t087F];
    real _t0881 = 0.1e1;
    real _t0882 = 0.2e1;
    real _t0883 = 0.1e1;
    real _t0884 = -0.1e1;
    vec4 _t0885 = [_t0881, _t0882, _t0883, _t0884];
    real _t0886 = 0.173205080757e1;
    real _t0887 = 0.173205080757e1;
    real _t0888 = 0.173205080757e1;
    real _t0889 = -0.173205080757e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = -0.1e1;
    real _t088C = -0.1e1;
    real _t088D = -0.192296268638e-15;
    real _t088E = 0.1e1;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.222044604925e-15;
    real _t0891 = 0.e0;
    real _t0892 = 0.44408920985e-15;
    real _t0893 = 0.1e1;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    tensor[4,4] _t0895 = [_t0885, _t088A, _t088F, _t0894];
    real _t0896 = 0.1e1;
    real _t0897 = 0.2e1;
    real _t0898 = 0.1e1;
    real _t0899 = -0.1e1;
    vec4 _t089A = [_t0896, _t0897, _t0898, _t0899];
    real _t089B = -0.1e1;
    real _t089C = -0.1e1;
    real _t089D = -0.192296268638e-15;
    real _t089E = 0.1e1;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.173205080757e1;
    real _t08A1 = 0.173205080757e1;
    real _t08A2 = 0.173205080757e1;
    real _t08A3 = -0.173205080757e1;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.222044604925e-15;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.44408920985e-15;
    real _t08A8 = 0.1e1;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    tensor[4,4] _t08AA = [_t089A, _t089F, _t08A4, _t08A9];
    tensor[4,4][4] _t08AB = {_t086B, _t0880, _t0895, _t08AA};
    real _t08AC = 0.57735026919e0;
    real _t08AD = -0.1e1;
    real _t08AE = -0.1e1;
    real _t08AF = 0.1e1;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = -0.57735026919e0;
    real _t08B2 = 0.1e1;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.e0;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    real _t08B6 = 0.57735026919e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    vec4 _t08BA = [_t08B6, _t08B7, _t08B8, _t08B9];
    real _t08BB = 0.e0;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    real _t08BE = 0.1e1;
    vec4 _t08BF = [_t08BB, _t08BC, _t08BD, _t08BE];
    tensor[4,4] _t08C0 = [_t08B0, _t08B5, _t08BA, _t08BF];
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.e0;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.1e1;
    real _t08CE = 0.e0;
    vec4 _t08CF = [_t08CB, _t08CC, _t08CD, _t08CE];
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    real _t08D3 = 0.1e1;
    vec4 _t08D4 = [_t08D0, _t08D1, _t08D2, _t08D3];
    tensor[4,4] _t08D5 = [_t08C5, _t08CA, _t08CF, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.1e1;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.e0;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.1e1;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    tensor[4,4] _t08EA = [_t08DA, _t08DF, _t08E4, _t08E9];
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    vec4 _t08EF = [_t08EB, _t08EC, _t08ED, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    real _t08FD = 0.1e1;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    tensor[4,4] _t08FF = [_t08EF, _t08F4, _t08F9, _t08FE];
    tensor[4,4][4] _t0900 = {_t08C0, _t08D5, _t08EA, _t08FF};
    real _t0901 = -0.1e1;
    real _t0902 = 0.57735026919e0;
    real _t0903 = -0.1e1;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.57735026919e0;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.57735026919e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    real _t0910 = 0.e0;
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    vec4 _t0914 = [_t0910, _t0911, _t0912, _t0913];
    tensor[4,4] _t0915 = [_t0905, _t090A, _t090F, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    real _t091E = 0.e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.1e1;
    real _t0923 = 0.e0;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    vec4 _t0929 = [_t0925, _t0926, _t0927, _t0928];
    tensor[4,4] _t092A = [_t091A, _t091F, _t0924, _t0929];
    real _t092B = 0.1e1;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.e0;
    real _t0931 = 0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = 0.e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    real _t093D = 0.1e1;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    tensor[4,4] _t093F = [_t092F, _t0934, _t0939, _t093E];
    real _t0940 = 0.1e1;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.e0;
    real _t094B = 0.1e1;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    real _t0952 = 0.1e1;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    tensor[4,4] _t0954 = [_t0944, _t0949, _t094E, _t0953];
    tensor[4,4][4] _t0955 = {_t0915, _t092A, _t093F, _t0954};
    real _t0956 = -0.1e1;
    real _t0957 = -0.1e1;
    real _t0958 = 0.57735026919e0;
    real _t0959 = 0.1e1;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.1e1;
    real _t095C = 0.e0;
    real _t095D = -0.57735026919e0;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.1e1;
    real _t0962 = 0.57735026919e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.e0;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    real _t0968 = 0.1e1;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    tensor[4,4] _t096A = [_t095A, _t095F, _t0964, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = 0.e0;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.1e1;
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    vec4 _t097E = [_t097A, _t097B, _t097C, _t097D];
    tensor[4,4] _t097F = [_t096F, _t0974, _t0979, _t097E];
    real _t0980 = 0.1e1;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    real _t0987 = 0.1e1;
    real _t0988 = 0.e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.1e1;
    real _t098C = 0.e0;
    real _t098D = 0.e0;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    real _t098F = 0.e0;
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    vec4 _t0993 = [_t098F, _t0990, _t0991, _t0992];
    tensor[4,4] _t0994 = [_t0984, _t0989, _t098E, _t0993];
    real _t0995 = 0.1e1;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.e0;
    real _t099B = 0.1e1;
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.1e1;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    tensor[4,4] _t09A9 = [_t0999, _t099E, _t09A3, _t09A8];
    tensor[4,4][4] _t09AA = {_t096A, _t097F, _t0994, _t09A9};
    tensor[4,4][4][4] _t09AB = {_t08AB, _t0900, _t0955, _t09AA};
    real _t09AC = time056D[1];
    int _t09AD = prim $r2i01B7 (_t09AC);
    tensor[4,4][4] _t09AE = prim $sub01C0<tensor[4,4][4]; %4> (_t09AB, _t09AD);
    real _t09AF = time056D[1];
    int _t09B0 = prim $r2i01B7 (_t09AF);
    int[2] _t09B1 = func nextCell40571 (_t09B0, cellId056A, mesh0569);
    int _t09B2 = 1;
    int _t09B3 = prim $sub01C0<int; %2> (_t09B1, _t09B2);
    tensor[4,4] _t09B4 = prim $sub01C0<tensor[4,4]; %4> (_t09AE, _t09B3);
    real _t09B5 = time056D[0];
    vec3 _t09B6 = prim *0036<$[3]> (_t09B5, dPos056C);
    vec3 _t09B7 = prim +0017<$[3]> (_t09B6, refPos056B);
    real _t09B8 = _t09B7[0];
    real _t09B9 = time056D[0];
    vec3 _t09BA = prim *0036<$[3]> (_t09B9, dPos056C);
    vec3 _t09BB = prim +0017<$[3]> (_t09BA, refPos056B);
    real _t09BC = _t09BB[1];
    real _t09BD = time056D[0];
    vec3 _t09BE = prim *0036<$[3]> (_t09BD, dPos056C);
    vec3 _t09BF = prim +0017<$[3]> (_t09BE, refPos056B);
    real _t09C0 = _t09BF[2];
    real _t09C1 = 0.1e1;
    vec4 _t09C2 = [_t09B8, _t09BC, _t09C0, _t09C1];
    vec4 _t09C3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t09B4, _t09C2);
    real _t09C4 = _t09C3[2];
    vec3 _t09C5 = [_t06E8, _t0856, _t09C4];
    Femdata: MeshPos _t09C6 = extractFemItemN((mesh0569, _t057A, _t09C5),RefBuild(Mesh),);
    return _t09C6;
  } else {
    real _t09C7 = time056D[0];
    vec3 _t09C8 = prim *0036<$[3]> (_t09C7, dPos056C);
    vec3 _t09C9 = prim +0017<$[3]> (_t09C8, refPos056B);
    Femdata: MeshPos _t09CA = extractFemItemN((mesh0569, _t09C9),InvalidBuildBoundary(MeshPos),);
    return _t09CA;
  }
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
function int[2]#0 $nextCell209D4 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  nearbyCells09D5 = extractFemItem2(CellConnectivity(Mesh), int, mesh09CD, cell09CC : int);
  int _t09D6 = 0;
  int _t09D7 = 1;
  int _t09D8 = 3;
  int[2] _t09D9 = {_t09D7, _t09D8};
  int _t09DA = 3;
  int _t09DB = 3;
  int[2] _t09DC = {_t09DA, _t09DB};
  int _t09DD = 9;
  int _t09DE = 3;
  int[2] _t09DF = {_t09DD, _t09DE};
  int _t09E0 = 27;
  int _t09E1 = 3;
  int[2] _t09E2 = {_t09E0, _t09E1};
  int[2][4] _t09E3 = {_t09D9, _t09DC, _t09DF, _t09E2};
  int[2] _t09E4 = prim $sub01C0<int[2]; %4> (_t09E3, faceIdx09CB);
  int _t09E5 = 1;
  int _t09E6 = prim $sub01C0<int; %2> (_t09E4, _t09E5);
  int[] _t09E7 = prim $range01C3 (_t09D6, _t09E6);
  int[] accum0A08 = {};
  foreach i0A05 in _t09E7 {
    int _t09E8 = 1;
    int _t09E9 = 2;
    int _t09EA = 3;
    int _t09EB = 0;
    int _t09EC = 2;
    int _t09ED = 3;
    int _t09EE = 0;
    int _t09EF = 1;
    int _t09F0 = 3;
    int _t09F1 = 0;
    int _t09F2 = 1;
    int _t09F3 = 2;
    int[12] _t09F4 = {_t09E8, _t09E9, _t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3};
    int _t09F5 = 1;
    int _t09F6 = 3;
    int[2] _t09F7 = {_t09F5, _t09F6};
    int _t09F8 = 3;
    int _t09F9 = 3;
    int[2] _t09FA = {_t09F8, _t09F9};
    int _t09FB = 9;
    int _t09FC = 3;
    int[2] _t09FD = {_t09FB, _t09FC};
    int _t09FE = 27;
    int _t09FF = 3;
    int[2] _t0A00 = {_t09FE, _t09FF};
    int[2][4] _t0A01 = {_t09F7, _t09FA, _t09FD, _t0A00};
    int[2] _t0A02 = prim $sub01C0<int[2]; %4> (_t0A01, faceIdx09CB);
    int _t0A03 = 0;
    int _t0A04 = prim $sub01C0<int; %2> (_t0A02, _t0A03);
    int _t0A06 = prim +0015 (_t0A04, i0A05);
    int _t0A07 = prim $sub01C0<int; %12> (_t09F4, _t0A06);
    accum0A08 = prim @0010<int> (accum0A08, _t0A07);
  }
  numFacetNodes0A09 = prim length0123<int> (accum0A08);
  int _t0A0A = 3;
  bool _t0A0B = prim ==0082 (_t0A0A, numFacetNodes0A09);
  if _t0A0B {
    foreach cellInt0A0C in nearbyCells09D5 {
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 0;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx09CB);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i0A05 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx09CB);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i0A05);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 0;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx09CB);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i0A05 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx09CB);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i0A05);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 1;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      int[4] _t0A8F = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A90 = 1;
      int _t0A91 = prim $sub01C0<int; %4> (_t0A8F, _t0A90);
      int[4] _t0A92 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A93 = 2;
      int _t0A94 = prim $sub01C0<int; %4> (_t0A92, _t0A93);
      int[4] _t0A95 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A96 = 3;
      int _t0A97 = prim $sub01C0<int; %4> (_t0A95, _t0A96);
      int[3] _t0A98 = {_t0A91, _t0A94, _t0A97};
      int _t0A99 = 2;
      int _t0A9A = prim $sub01C0<int; %3> (_t0A98, _t0A99);
      int _t0A9B = 0;
      int _t0A9C = 1;
      int _t0A9D = 3;
      int[2] _t0A9E = {_t0A9C, _t0A9D};
      int _t0A9F = 3;
      int _t0AA0 = 3;
      int[2] _t0AA1 = {_t0A9F, _t0AA0};
      int _t0AA2 = 9;
      int _t0AA3 = 3;
      int[2] _t0AA4 = {_t0AA2, _t0AA3};
      int _t0AA5 = 27;
      int _t0AA6 = 3;
      int[2] _t0AA7 = {_t0AA5, _t0AA6};
      int[2][4] _t0AA8 = {_t0A9E, _t0AA1, _t0AA4, _t0AA7};
      int[2] _t0AA9 = prim $sub01C0<int[2]; %4> (_t0AA8, faceIdx09CB);
      int _t0AAA = 1;
      int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
      int[] _t0AAC = prim $range01C3 (_t0A9B, _t0AAB);
      int[] accum0ACC = {};
      foreach i0A05 in _t0AAC {
        int _t0AAD = 1;
        int _t0AAE = 2;
        int _t0AAF = 3;
        int _t0AB0 = 0;
        int _t0AB1 = 2;
        int _t0AB2 = 3;
        int _t0AB3 = 0;
        int _t0AB4 = 1;
        int _t0AB5 = 3;
        int _t0AB6 = 0;
        int _t0AB7 = 1;
        int _t0AB8 = 2;
        int[12] _t0AB9 = {_t0AAD, _t0AAE, _t0AAF, _t0AB0, _t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8};
        int _t0ABA = 1;
        int _t0ABB = 3;
        int[2] _t0ABC = {_t0ABA, _t0ABB};
        int _t0ABD = 3;
        int _t0ABE = 3;
        int[2] _t0ABF = {_t0ABD, _t0ABE};
        int _t0AC0 = 9;
        int _t0AC1 = 3;
        int[2] _t0AC2 = {_t0AC0, _t0AC1};
        int _t0AC3 = 27;
        int _t0AC4 = 3;
        int[2] _t0AC5 = {_t0AC3, _t0AC4};
        int[2][4] _t0AC6 = {_t0ABC, _t0ABF, _t0AC2, _t0AC5};
        int[2] _t0AC7 = prim $sub01C0<int[2]; %4> (_t0AC6, faceIdx09CB);
        int _t0AC8 = 0;
        int _t0AC9 = prim $sub01C0<int; %2> (_t0AC7, _t0AC8);
        int _t0ACA = prim +0015 (_t0AC9, i0A05);
        int _t0ACB = prim $sub01C0<int; %12> (_t0AB9, _t0ACA);
        accum0ACC = prim @0010<int> (accum0ACC, _t0ACB);
      }
      int _t0ACD = 2;
      int _t0ACE = prim $dynsub01C2<int> (accum0ACC, _t0ACD);
      bool _t0ACF = prim ==0082 (_t0A9A, _t0ACE);
      bool _t0AD0 = prim $and01C4 (_t0A8E, _t0ACF);
      bool _t0AD1 = prim $and01C4 (_t0A4D, _t0AD0);
      if _t0AD1 {
        int _t0AD2 = 0;
        int[2] _t0AD3 = {cellInt0A0C, _t0AD2};
        return _t0AD3;
      }
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 0;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx09CB);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i0A05 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx09CB);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i0A05);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 0;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx09CB);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i0A05 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx09CB);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i0A05);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 1;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      int[4] _t0B56 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B57 = 0;
      int _t0B58 = prim $sub01C0<int; %4> (_t0B56, _t0B57);
      int[4] _t0B59 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5A = 2;
      int _t0B5B = prim $sub01C0<int; %4> (_t0B59, _t0B5A);
      int[4] _t0B5C = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5D = 3;
      int _t0B5E = prim $sub01C0<int; %4> (_t0B5C, _t0B5D);
      int[3] _t0B5F = {_t0B58, _t0B5B, _t0B5E};
      int _t0B60 = 2;
      int _t0B61 = prim $sub01C0<int; %3> (_t0B5F, _t0B60);
      int _t0B62 = 0;
      int _t0B63 = 1;
      int _t0B64 = 3;
      int[2] _t0B65 = {_t0B63, _t0B64};
      int _t0B66 = 3;
      int _t0B67 = 3;
      int[2] _t0B68 = {_t0B66, _t0B67};
      int _t0B69 = 9;
      int _t0B6A = 3;
      int[2] _t0B6B = {_t0B69, _t0B6A};
      int _t0B6C = 27;
      int _t0B6D = 3;
      int[2] _t0B6E = {_t0B6C, _t0B6D};
      int[2][4] _t0B6F = {_t0B65, _t0B68, _t0B6B, _t0B6E};
      int[2] _t0B70 = prim $sub01C0<int[2]; %4> (_t0B6F, faceIdx09CB);
      int _t0B71 = 1;
      int _t0B72 = prim $sub01C0<int; %2> (_t0B70, _t0B71);
      int[] _t0B73 = prim $range01C3 (_t0B62, _t0B72);
      int[] accum0B93 = {};
      foreach i0A05 in _t0B73 {
        int _t0B74 = 1;
        int _t0B75 = 2;
        int _t0B76 = 3;
        int _t0B77 = 0;
        int _t0B78 = 2;
        int _t0B79 = 3;
        int _t0B7A = 0;
        int _t0B7B = 1;
        int _t0B7C = 3;
        int _t0B7D = 0;
        int _t0B7E = 1;
        int _t0B7F = 2;
        int[12] _t0B80 = {_t0B74, _t0B75, _t0B76, _t0B77, _t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F};
        int _t0B81 = 1;
        int _t0B82 = 3;
        int[2] _t0B83 = {_t0B81, _t0B82};
        int _t0B84 = 3;
        int _t0B85 = 3;
        int[2] _t0B86 = {_t0B84, _t0B85};
        int _t0B87 = 9;
        int _t0B88 = 3;
        int[2] _t0B89 = {_t0B87, _t0B88};
        int _t0B8A = 27;
        int _t0B8B = 3;
        int[2] _t0B8C = {_t0B8A, _t0B8B};
        int[2][4] _t0B8D = {_t0B83, _t0B86, _t0B89, _t0B8C};
        int[2] _t0B8E = prim $sub01C0<int[2]; %4> (_t0B8D, faceIdx09CB);
        int _t0B8F = 0;
        int _t0B90 = prim $sub01C0<int; %2> (_t0B8E, _t0B8F);
        int _t0B91 = prim +0015 (_t0B90, i0A05);
        int _t0B92 = prim $sub01C0<int; %12> (_t0B80, _t0B91);
        accum0B93 = prim @0010<int> (accum0B93, _t0B92);
      }
      int _t0B94 = 2;
      int _t0B95 = prim $dynsub01C2<int> (accum0B93, _t0B94);
      bool _t0B96 = prim ==0082 (_t0B61, _t0B95);
      bool _t0B97 = prim $and01C4 (_t0B55, _t0B96);
      bool _t0B98 = prim $and01C4 (_t0B14, _t0B97);
      if _t0B98 {
        int _t0B99 = 1;
        int[2] _t0B9A = {cellInt0A0C, _t0B99};
        return _t0B9A;
      }
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 0;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx09CB);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i0A05 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx09CB);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i0A05);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 0;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx09CB);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i0A05 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx09CB);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i0A05);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 1;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      int[4] _t0C1D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C1E = 0;
      int _t0C1F = prim $sub01C0<int; %4> (_t0C1D, _t0C1E);
      int[4] _t0C20 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C21 = 1;
      int _t0C22 = prim $sub01C0<int; %4> (_t0C20, _t0C21);
      int[4] _t0C23 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C24 = 3;
      int _t0C25 = prim $sub01C0<int; %4> (_t0C23, _t0C24);
      int[3] _t0C26 = {_t0C1F, _t0C22, _t0C25};
      int _t0C27 = 2;
      int _t0C28 = prim $sub01C0<int; %3> (_t0C26, _t0C27);
      int _t0C29 = 0;
      int _t0C2A = 1;
      int _t0C2B = 3;
      int[2] _t0C2C = {_t0C2A, _t0C2B};
      int _t0C2D = 3;
      int _t0C2E = 3;
      int[2] _t0C2F = {_t0C2D, _t0C2E};
      int _t0C30 = 9;
      int _t0C31 = 3;
      int[2] _t0C32 = {_t0C30, _t0C31};
      int _t0C33 = 27;
      int _t0C34 = 3;
      int[2] _t0C35 = {_t0C33, _t0C34};
      int[2][4] _t0C36 = {_t0C2C, _t0C2F, _t0C32, _t0C35};
      int[2] _t0C37 = prim $sub01C0<int[2]; %4> (_t0C36, faceIdx09CB);
      int _t0C38 = 1;
      int _t0C39 = prim $sub01C0<int; %2> (_t0C37, _t0C38);
      int[] _t0C3A = prim $range01C3 (_t0C29, _t0C39);
      int[] accum0C5A = {};
      foreach i0A05 in _t0C3A {
        int _t0C3B = 1;
        int _t0C3C = 2;
        int _t0C3D = 3;
        int _t0C3E = 0;
        int _t0C3F = 2;
        int _t0C40 = 3;
        int _t0C41 = 0;
        int _t0C42 = 1;
        int _t0C43 = 3;
        int _t0C44 = 0;
        int _t0C45 = 1;
        int _t0C46 = 2;
        int[12] _t0C47 = {_t0C3B, _t0C3C, _t0C3D, _t0C3E, _t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46};
        int _t0C48 = 1;
        int _t0C49 = 3;
        int[2] _t0C4A = {_t0C48, _t0C49};
        int _t0C4B = 3;
        int _t0C4C = 3;
        int[2] _t0C4D = {_t0C4B, _t0C4C};
        int _t0C4E = 9;
        int _t0C4F = 3;
        int[2] _t0C50 = {_t0C4E, _t0C4F};
        int _t0C51 = 27;
        int _t0C52 = 3;
        int[2] _t0C53 = {_t0C51, _t0C52};
        int[2][4] _t0C54 = {_t0C4A, _t0C4D, _t0C50, _t0C53};
        int[2] _t0C55 = prim $sub01C0<int[2]; %4> (_t0C54, faceIdx09CB);
        int _t0C56 = 0;
        int _t0C57 = prim $sub01C0<int; %2> (_t0C55, _t0C56);
        int _t0C58 = prim +0015 (_t0C57, i0A05);
        int _t0C59 = prim $sub01C0<int; %12> (_t0C47, _t0C58);
        accum0C5A = prim @0010<int> (accum0C5A, _t0C59);
      }
      int _t0C5B = 2;
      int _t0C5C = prim $dynsub01C2<int> (accum0C5A, _t0C5B);
      bool _t0C5D = prim ==0082 (_t0C28, _t0C5C);
      bool _t0C5E = prim $and01C4 (_t0C1C, _t0C5D);
      bool _t0C5F = prim $and01C4 (_t0BDB, _t0C5E);
      if _t0C5F {
        int _t0C60 = 2;
        int[2] _t0C61 = {cellInt0A0C, _t0C60};
        return _t0C61;
      }
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 0;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx09CB);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i0A05 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx09CB);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i0A05);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 0;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx09CB);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i0A05 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx09CB);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i0A05);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 1;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      int[4] _t0CE4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE5 = 0;
      int _t0CE6 = prim $sub01C0<int; %4> (_t0CE4, _t0CE5);
      int[4] _t0CE7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE8 = 1;
      int _t0CE9 = prim $sub01C0<int; %4> (_t0CE7, _t0CE8);
      int[4] _t0CEA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CEB = 2;
      int _t0CEC = prim $sub01C0<int; %4> (_t0CEA, _t0CEB);
      int[3] _t0CED = {_t0CE6, _t0CE9, _t0CEC};
      int _t0CEE = 2;
      int _t0CEF = prim $sub01C0<int; %3> (_t0CED, _t0CEE);
      int _t0CF0 = 0;
      int _t0CF1 = 1;
      int _t0CF2 = 3;
      int[2] _t0CF3 = {_t0CF1, _t0CF2};
      int _t0CF4 = 3;
      int _t0CF5 = 3;
      int[2] _t0CF6 = {_t0CF4, _t0CF5};
      int _t0CF7 = 9;
      int _t0CF8 = 3;
      int[2] _t0CF9 = {_t0CF7, _t0CF8};
      int _t0CFA = 27;
      int _t0CFB = 3;
      int[2] _t0CFC = {_t0CFA, _t0CFB};
      int[2][4] _t0CFD = {_t0CF3, _t0CF6, _t0CF9, _t0CFC};
      int[2] _t0CFE = prim $sub01C0<int[2]; %4> (_t0CFD, faceIdx09CB);
      int _t0CFF = 1;
      int _t0D00 = prim $sub01C0<int; %2> (_t0CFE, _t0CFF);
      int[] _t0D01 = prim $range01C3 (_t0CF0, _t0D00);
      int[] accum0D21 = {};
      foreach i0A05 in _t0D01 {
        int _t0D02 = 1;
        int _t0D03 = 2;
        int _t0D04 = 3;
        int _t0D05 = 0;
        int _t0D06 = 2;
        int _t0D07 = 3;
        int _t0D08 = 0;
        int _t0D09 = 1;
        int _t0D0A = 3;
        int _t0D0B = 0;
        int _t0D0C = 1;
        int _t0D0D = 2;
        int[12] _t0D0E = {_t0D02, _t0D03, _t0D04, _t0D05, _t0D06, _t0D07, _t0D08, _t0D09, _t0D0A, _t0D0B, _t0D0C, _t0D0D};
        int _t0D0F = 1;
        int _t0D10 = 3;
        int[2] _t0D11 = {_t0D0F, _t0D10};
        int _t0D12 = 3;
        int _t0D13 = 3;
        int[2] _t0D14 = {_t0D12, _t0D13};
        int _t0D15 = 9;
        int _t0D16 = 3;
        int[2] _t0D17 = {_t0D15, _t0D16};
        int _t0D18 = 27;
        int _t0D19 = 3;
        int[2] _t0D1A = {_t0D18, _t0D19};
        int[2][4] _t0D1B = {_t0D11, _t0D14, _t0D17, _t0D1A};
        int[2] _t0D1C = prim $sub01C0<int[2]; %4> (_t0D1B, faceIdx09CB);
        int _t0D1D = 0;
        int _t0D1E = prim $sub01C0<int; %2> (_t0D1C, _t0D1D);
        int _t0D1F = prim +0015 (_t0D1E, i0A05);
        int _t0D20 = prim $sub01C0<int; %12> (_t0D0E, _t0D1F);
        accum0D21 = prim @0010<int> (accum0D21, _t0D20);
      }
      int _t0D22 = 2;
      int _t0D23 = prim $dynsub01C2<int> (accum0D21, _t0D22);
      bool _t0D24 = prim ==0082 (_t0CEF, _t0D23);
      bool _t0D25 = prim $and01C4 (_t0CE3, _t0D24);
      bool _t0D26 = prim $and01C4 (_t0CA2, _t0D25);
      if _t0D26 {
        int _t0D27 = 3;
        int[2] _t0D28 = {cellInt0A0C, _t0D27};
        return _t0D28;
      }
    }
  }
  int _t0D29 = -1;
  int _t0D2A = -1;
  int[2] _t0D2B = {_t0D29, _t0D2A};
  return _t0D2B;
}
function vec2#0 _enter0D2C (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0D2F = +inf;
  int face0D30 = -1;
  real _t0D31 = 0.57735026919e0;
  real _t0D32 = 0.57735026919e0;
  real _t0D33 = -0.57735026919e0;
  real _t0D34 = 0.57735026919e0;
  vec3 _t0D35 = [_t0D32, _t0D33, _t0D34];
  real _t0D36 = prim •00CE<$[3]; $[3]; $[]> (_t0D35, refPos0D2D);
  real _t0D37 = prim -0026<$[]> (_t0D31, _t0D36);
  real _t0D38 = 0.57735026919e0;
  real _t0D39 = -0.57735026919e0;
  real _t0D3A = 0.57735026919e0;
  vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
  real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, dPos0D2E);
  real _t0D3D = prim /0055 (_t0D37, _t0D3C);
  real _t0D3E = -0.e0;
  bool _t0D3F = prim >0080 (_t0D3D, _t0D3E);
  real _t0D40 = 0.57735026919e0;
  real _t0D41 = 0.57735026919e0;
  real _t0D42 = -0.57735026919e0;
  real _t0D43 = 0.57735026919e0;
  vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
  real _t0D45 = prim •00CE<$[3]; $[3]; $[]> (_t0D44, refPos0D2D);
  real _t0D46 = prim -0026<$[]> (_t0D40, _t0D45);
  real _t0D47 = 0.57735026919e0;
  real _t0D48 = -0.57735026919e0;
  real _t0D49 = 0.57735026919e0;
  vec3 _t0D4A = [_t0D47, _t0D48, _t0D49];
  real _t0D4B = prim •00CE<$[3]; $[3]; $[]> (_t0D4A, dPos0D2E);
  real _t0D4C = prim /0055 (_t0D46, _t0D4B);
  bool _t0D4D = prim >0080 (time0D2F, _t0D4C);
  bool _t0D4E = prim $and01C4 (_t0D3F, _t0D4D);
  if _t0D4E {
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e-4;
    real _t0D51 = prim +0017<$[]> (_t0D4F, _t0D50);
    real _t0D52 = 0.1e1;
    real _t0D53 = 0.1e1;
    real _t0D54 = 0.1e1;
    vec3 _t0D55 = [_t0D52, _t0D53, _t0D54];
    real _t0D56 = 0.57735026919e0;
    real _t0D57 = 0.57735026919e0;
    real _t0D58 = -0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    vec3 _t0D5A = [_t0D57, _t0D58, _t0D59];
    real _t0D5B = prim •00CE<$[3]; $[3]; $[]> (_t0D5A, refPos0D2D);
    real _t0D5C = prim -0026<$[]> (_t0D56, _t0D5B);
    real _t0D5D = 0.57735026919e0;
    real _t0D5E = -0.57735026919e0;
    real _t0D5F = 0.57735026919e0;
    vec3 _t0D60 = [_t0D5D, _t0D5E, _t0D5F];
    real _t0D61 = prim •00CE<$[3]; $[3]; $[]> (_t0D60, dPos0D2E);
    real _t0D62 = prim /0055 (_t0D5C, _t0D61);
    vec3 _t0D63 = prim *0038<$[3]> (dPos0D2E, _t0D62);
    vec3 _t0D64 = prim +0017<$[3]> (_t0D63, refPos0D2D);
    real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D55, _t0D64);
    bool _t0D66 = prim >0080 (_t0D51, _t0D65);
    real _t0D67 = 0.1e-4;
    real _t0D68 = 0.1e-4;
    real _t0D69 = 0.1e-4;
    vec3 _t0D6A = [_t0D67, _t0D68, _t0D69];
    real _t0D6B = 0.57735026919e0;
    real _t0D6C = 0.57735026919e0;
    real _t0D6D = -0.57735026919e0;
    real _t0D6E = 0.57735026919e0;
    vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
    real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, refPos0D2D);
    real _t0D71 = prim -0026<$[]> (_t0D6B, _t0D70);
    real _t0D72 = 0.57735026919e0;
    real _t0D73 = -0.57735026919e0;
    real _t0D74 = 0.57735026919e0;
    vec3 _t0D75 = [_t0D72, _t0D73, _t0D74];
    real _t0D76 = prim •00CE<$[3]; $[3]; $[]> (_t0D75, dPos0D2E);
    real _t0D77 = prim /0055 (_t0D71, _t0D76);
    vec3 _t0D78 = prim *0038<$[3]> (dPos0D2E, _t0D77);
    vec3 _t0D79 = prim +0017<$[3]> (_t0D78, refPos0D2D);
    vec3 _t0D7A = prim +0017<$[3]> (_t0D6A, _t0D79);
    real _t0D7B = _t0D7A[0];
    real _t0D7C = -0.e0;
    bool _t0D7D = prim >0080 (_t0D7B, _t0D7C);
    real _t0D7E = 0.1e-4;
    real _t0D7F = 0.1e-4;
    real _t0D80 = 0.1e-4;
    vec3 _t0D81 = [_t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.57735026919e0;
    real _t0D83 = 0.57735026919e0;
    real _t0D84 = -0.57735026919e0;
    real _t0D85 = 0.57735026919e0;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = prim •00CE<$[3]; $[3]; $[]> (_t0D86, refPos0D2D);
    real _t0D88 = prim -0026<$[]> (_t0D82, _t0D87);
    real _t0D89 = 0.57735026919e0;
    real _t0D8A = -0.57735026919e0;
    real _t0D8B = 0.57735026919e0;
    vec3 _t0D8C = [_t0D89, _t0D8A, _t0D8B];
    real _t0D8D = prim •00CE<$[3]; $[3]; $[]> (_t0D8C, dPos0D2E);
    real _t0D8E = prim /0055 (_t0D88, _t0D8D);
    vec3 _t0D8F = prim *0038<$[3]> (dPos0D2E, _t0D8E);
    vec3 _t0D90 = prim +0017<$[3]> (_t0D8F, refPos0D2D);
    vec3 _t0D91 = prim +0017<$[3]> (_t0D81, _t0D90);
    real _t0D92 = _t0D91[1];
    real _t0D93 = -0.e0;
    bool _t0D94 = prim >0080 (_t0D92, _t0D93);
    real _t0D95 = 0.1e-4;
    real _t0D96 = 0.1e-4;
    real _t0D97 = 0.1e-4;
    vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
    real _t0D99 = 0.57735026919e0;
    real _t0D9A = 0.57735026919e0;
    real _t0D9B = -0.57735026919e0;
    real _t0D9C = 0.57735026919e0;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = prim •00CE<$[3]; $[3]; $[]> (_t0D9D, refPos0D2D);
    real _t0D9F = prim -0026<$[]> (_t0D99, _t0D9E);
    real _t0DA0 = 0.57735026919e0;
    real _t0DA1 = -0.57735026919e0;
    real _t0DA2 = 0.57735026919e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, dPos0D2E);
    real _t0DA5 = prim /0055 (_t0D9F, _t0DA4);
    vec3 _t0DA6 = prim *0038<$[3]> (dPos0D2E, _t0DA5);
    vec3 _t0DA7 = prim +0017<$[3]> (_t0DA6, refPos0D2D);
    vec3 _t0DA8 = prim +0017<$[3]> (_t0D98, _t0DA7);
    real _t0DA9 = _t0DA8[2];
    real _t0DAA = -0.e0;
    bool _t0DAB = prim >0080 (_t0DA9, _t0DAA);
    bool _t0DAC = prim $and01C4 (_t0D94, _t0DAB);
    bool _t0DAD = prim $and01C4 (_t0D7D, _t0DAC);
    bool _t0DAE = prim $and01C4 (_t0D66, _t0DAD);
    if _t0DAE {
      real _t0DAF = 0.57735026919e0;
      real _t0DB0 = 0.57735026919e0;
      real _t0DB1 = -0.57735026919e0;
      real _t0DB2 = 0.57735026919e0;
      vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
      real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, refPos0D2D);
      real _t0DB5 = prim -0026<$[]> (_t0DAF, _t0DB4);
      real _t0DB6 = 0.57735026919e0;
      real _t0DB7 = -0.57735026919e0;
      real _t0DB8 = 0.57735026919e0;
      vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
      real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, dPos0D2E);
      time0D2F = prim /0055 (_t0DB5, _t0DBA);
      face0D30 = 0;
    }
  }
  real _t0DBB = 0.e0;
  real _t0DBC = 0.1e1;
  real _t0DBD = 0.e0;
  real _t0DBE = 0.e0;
  vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
  real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, refPos0D2D);
  real _t0DC1 = prim -0026<$[]> (_t0DBB, _t0DC0);
  real _t0DC2 = 0.1e1;
  real _t0DC3 = 0.e0;
  real _t0DC4 = 0.e0;
  vec3 _t0DC5 = [_t0DC2, _t0DC3, _t0DC4];
  real _t0DC6 = prim •00CE<$[3]; $[3]; $[]> (_t0DC5, dPos0D2E);
  real _t0DC7 = prim /0055 (_t0DC1, _t0DC6);
  real _t0DC8 = -0.e0;
  bool _t0DC9 = prim >0080 (_t0DC7, _t0DC8);
  real _t0DCA = 0.e0;
  real _t0DCB = 0.1e1;
  real _t0DCC = 0.e0;
  real _t0DCD = 0.e0;
  vec3 _t0DCE = [_t0DCB, _t0DCC, _t0DCD];
  real _t0DCF = prim •00CE<$[3]; $[3]; $[]> (_t0DCE, refPos0D2D);
  real _t0DD0 = prim -0026<$[]> (_t0DCA, _t0DCF);
  real _t0DD1 = 0.1e1;
  real _t0DD2 = 0.e0;
  real _t0DD3 = 0.e0;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = prim •00CE<$[3]; $[3]; $[]> (_t0DD4, dPos0D2E);
  real _t0DD6 = prim /0055 (_t0DD0, _t0DD5);
  bool _t0DD7 = prim >0080 (time0D2F, _t0DD6);
  bool _t0DD8 = prim $and01C4 (_t0DC9, _t0DD7);
  if _t0DD8 {
    real _t0DD9 = 0.1e1;
    real _t0DDA = 0.1e-4;
    real _t0DDB = prim +0017<$[]> (_t0DD9, _t0DDA);
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.1e1;
    real _t0DDE = 0.1e1;
    vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.e0;
    vec3 _t0DE4 = [_t0DE1, _t0DE2, _t0DE3];
    real _t0DE5 = prim •00CE<$[3]; $[3]; $[]> (_t0DE4, refPos0D2D);
    real _t0DE6 = prim -0026<$[]> (_t0DE0, _t0DE5);
    real _t0DE7 = 0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    vec3 _t0DEA = [_t0DE7, _t0DE8, _t0DE9];
    real _t0DEB = prim •00CE<$[3]; $[3]; $[]> (_t0DEA, dPos0D2E);
    real _t0DEC = prim /0055 (_t0DE6, _t0DEB);
    vec3 _t0DED = prim *0038<$[3]> (dPos0D2E, _t0DEC);
    vec3 _t0DEE = prim +0017<$[3]> (_t0DED, refPos0D2D);
    real _t0DEF = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, _t0DEE);
    bool _t0DF0 = prim >0080 (_t0DDB, _t0DEF);
    real _t0DF1 = 0.1e-4;
    real _t0DF2 = 0.1e-4;
    real _t0DF3 = 0.1e-4;
    vec3 _t0DF4 = [_t0DF1, _t0DF2, _t0DF3];
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.e0;
    vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
    real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0D2D);
    real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
    real _t0DFC = 0.1e1;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.e0;
    vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
    real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0D2E);
    real _t0E01 = prim /0055 (_t0DFB, _t0E00);
    vec3 _t0E02 = prim *0038<$[3]> (dPos0D2E, _t0E01);
    vec3 _t0E03 = prim +0017<$[3]> (_t0E02, refPos0D2D);
    vec3 _t0E04 = prim +0017<$[3]> (_t0DF4, _t0E03);
    real _t0E05 = _t0E04[0];
    real _t0E06 = -0.e0;
    bool _t0E07 = prim >0080 (_t0E05, _t0E06);
    real _t0E08 = 0.1e-4;
    real _t0E09 = 0.1e-4;
    real _t0E0A = 0.1e-4;
    vec3 _t0E0B = [_t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0D2D);
    real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
    real _t0E13 = 0.1e1;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, dPos0D2E);
    real _t0E18 = prim /0055 (_t0E12, _t0E17);
    vec3 _t0E19 = prim *0038<$[3]> (dPos0D2E, _t0E18);
    vec3 _t0E1A = prim +0017<$[3]> (_t0E19, refPos0D2D);
    vec3 _t0E1B = prim +0017<$[3]> (_t0E0B, _t0E1A);
    real _t0E1C = _t0E1B[1];
    real _t0E1D = -0.e0;
    bool _t0E1E = prim >0080 (_t0E1C, _t0E1D);
    real _t0E1F = 0.1e-4;
    real _t0E20 = 0.1e-4;
    real _t0E21 = 0.1e-4;
    vec3 _t0E22 = [_t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.e0;
    vec3 _t0E27 = [_t0E24, _t0E25, _t0E26];
    real _t0E28 = prim •00CE<$[3]; $[3]; $[]> (_t0E27, refPos0D2D);
    real _t0E29 = prim -0026<$[]> (_t0E23, _t0E28);
    real _t0E2A = 0.1e1;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, dPos0D2E);
    real _t0E2F = prim /0055 (_t0E29, _t0E2E);
    vec3 _t0E30 = prim *0038<$[3]> (dPos0D2E, _t0E2F);
    vec3 _t0E31 = prim +0017<$[3]> (_t0E30, refPos0D2D);
    vec3 _t0E32 = prim +0017<$[3]> (_t0E22, _t0E31);
    real _t0E33 = _t0E32[2];
    real _t0E34 = -0.e0;
    bool _t0E35 = prim >0080 (_t0E33, _t0E34);
    bool _t0E36 = prim $and01C4 (_t0E1E, _t0E35);
    bool _t0E37 = prim $and01C4 (_t0E07, _t0E36);
    bool _t0E38 = prim $and01C4 (_t0DF0, _t0E37);
    if _t0E38 {
      real _t0E39 = 0.e0;
      real _t0E3A = 0.1e1;
      real _t0E3B = 0.e0;
      real _t0E3C = 0.e0;
      vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
      real _t0E3E = prim •00CE<$[3]; $[3]; $[]> (_t0E3D, refPos0D2D);
      real _t0E3F = prim -0026<$[]> (_t0E39, _t0E3E);
      real _t0E40 = 0.1e1;
      real _t0E41 = 0.e0;
      real _t0E42 = 0.e0;
      vec3 _t0E43 = [_t0E40, _t0E41, _t0E42];
      real _t0E44 = prim •00CE<$[3]; $[3]; $[]> (_t0E43, dPos0D2E);
      time0D2F = prim /0055 (_t0E3F, _t0E44);
      face0D30 = 1;
    }
  }
  real _t0E45 = 0.e0;
  real _t0E46 = 0.e0;
  real _t0E47 = 0.1e1;
  real _t0E48 = 0.e0;
  vec3 _t0E49 = [_t0E46, _t0E47, _t0E48];
  real _t0E4A = prim •00CE<$[3]; $[3]; $[]> (_t0E49, refPos0D2D);
  real _t0E4B = prim -0026<$[]> (_t0E45, _t0E4A);
  real _t0E4C = 0.e0;
  real _t0E4D = 0.1e1;
  real _t0E4E = 0.e0;
  vec3 _t0E4F = [_t0E4C, _t0E4D, _t0E4E];
  real _t0E50 = prim •00CE<$[3]; $[3]; $[]> (_t0E4F, dPos0D2E);
  real _t0E51 = prim /0055 (_t0E4B, _t0E50);
  real _t0E52 = -0.e0;
  bool _t0E53 = prim >0080 (_t0E51, _t0E52);
  real _t0E54 = 0.e0;
  real _t0E55 = 0.e0;
  real _t0E56 = 0.1e1;
  real _t0E57 = 0.e0;
  vec3 _t0E58 = [_t0E55, _t0E56, _t0E57];
  real _t0E59 = prim •00CE<$[3]; $[3]; $[]> (_t0E58, refPos0D2D);
  real _t0E5A = prim -0026<$[]> (_t0E54, _t0E59);
  real _t0E5B = 0.e0;
  real _t0E5C = 0.1e1;
  real _t0E5D = 0.e0;
  vec3 _t0E5E = [_t0E5B, _t0E5C, _t0E5D];
  real _t0E5F = prim •00CE<$[3]; $[3]; $[]> (_t0E5E, dPos0D2E);
  real _t0E60 = prim /0055 (_t0E5A, _t0E5F);
  bool _t0E61 = prim >0080 (time0D2F, _t0E60);
  bool _t0E62 = prim $and01C4 (_t0E53, _t0E61);
  if _t0E62 {
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.1e-4;
    real _t0E65 = prim +0017<$[]> (_t0E63, _t0E64);
    real _t0E66 = 0.1e1;
    real _t0E67 = 0.1e1;
    real _t0E68 = 0.1e1;
    vec3 _t0E69 = [_t0E66, _t0E67, _t0E68];
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.e0;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0D2D);
    real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
    real _t0E71 = 0.e0;
    real _t0E72 = 0.1e1;
    real _t0E73 = 0.e0;
    vec3 _t0E74 = [_t0E71, _t0E72, _t0E73];
    real _t0E75 = prim •00CE<$[3]; $[3]; $[]> (_t0E74, dPos0D2E);
    real _t0E76 = prim /0055 (_t0E70, _t0E75);
    vec3 _t0E77 = prim *0038<$[3]> (dPos0D2E, _t0E76);
    vec3 _t0E78 = prim +0017<$[3]> (_t0E77, refPos0D2D);
    real _t0E79 = prim •00CE<$[3]; $[3]; $[]> (_t0E69, _t0E78);
    bool _t0E7A = prim >0080 (_t0E65, _t0E79);
    real _t0E7B = 0.1e-4;
    real _t0E7C = 0.1e-4;
    real _t0E7D = 0.1e-4;
    vec3 _t0E7E = [_t0E7B, _t0E7C, _t0E7D];
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    real _t0E81 = 0.1e1;
    real _t0E82 = 0.e0;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = prim •00CE<$[3]; $[3]; $[]> (_t0E83, refPos0D2D);
    real _t0E85 = prim -0026<$[]> (_t0E7F, _t0E84);
    real _t0E86 = 0.e0;
    real _t0E87 = 0.1e1;
    real _t0E88 = 0.e0;
    vec3 _t0E89 = [_t0E86, _t0E87, _t0E88];
    real _t0E8A = prim •00CE<$[3]; $[3]; $[]> (_t0E89, dPos0D2E);
    real _t0E8B = prim /0055 (_t0E85, _t0E8A);
    vec3 _t0E8C = prim *0038<$[3]> (dPos0D2E, _t0E8B);
    vec3 _t0E8D = prim +0017<$[3]> (_t0E8C, refPos0D2D);
    vec3 _t0E8E = prim +0017<$[3]> (_t0E7E, _t0E8D);
    real _t0E8F = _t0E8E[0];
    real _t0E90 = -0.e0;
    bool _t0E91 = prim >0080 (_t0E8F, _t0E90);
    real _t0E92 = 0.1e-4;
    real _t0E93 = 0.1e-4;
    real _t0E94 = 0.1e-4;
    vec3 _t0E95 = [_t0E92, _t0E93, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = 0.e0;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = prim •00CE<$[3]; $[3]; $[]> (_t0E9A, refPos0D2D);
    real _t0E9C = prim -0026<$[]> (_t0E96, _t0E9B);
    real _t0E9D = 0.e0;
    real _t0E9E = 0.1e1;
    real _t0E9F = 0.e0;
    vec3 _t0EA0 = [_t0E9D, _t0E9E, _t0E9F];
    real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0EA0, dPos0D2E);
    real _t0EA2 = prim /0055 (_t0E9C, _t0EA1);
    vec3 _t0EA3 = prim *0038<$[3]> (dPos0D2E, _t0EA2);
    vec3 _t0EA4 = prim +0017<$[3]> (_t0EA3, refPos0D2D);
    vec3 _t0EA5 = prim +0017<$[3]> (_t0E95, _t0EA4);
    real _t0EA6 = _t0EA5[1];
    real _t0EA7 = -0.e0;
    bool _t0EA8 = prim >0080 (_t0EA6, _t0EA7);
    real _t0EA9 = 0.1e-4;
    real _t0EAA = 0.1e-4;
    real _t0EAB = 0.1e-4;
    vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.e0;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB1, refPos0D2D);
    real _t0EB3 = prim -0026<$[]> (_t0EAD, _t0EB2);
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, dPos0D2E);
    real _t0EB9 = prim /0055 (_t0EB3, _t0EB8);
    vec3 _t0EBA = prim *0038<$[3]> (dPos0D2E, _t0EB9);
    vec3 _t0EBB = prim +0017<$[3]> (_t0EBA, refPos0D2D);
    vec3 _t0EBC = prim +0017<$[3]> (_t0EAC, _t0EBB);
    real _t0EBD = _t0EBC[2];
    real _t0EBE = -0.e0;
    bool _t0EBF = prim >0080 (_t0EBD, _t0EBE);
    bool _t0EC0 = prim $and01C4 (_t0EA8, _t0EBF);
    bool _t0EC1 = prim $and01C4 (_t0E91, _t0EC0);
    bool _t0EC2 = prim $and01C4 (_t0E7A, _t0EC1);
    if _t0EC2 {
      real _t0EC3 = 0.e0;
      real _t0EC4 = 0.e0;
      real _t0EC5 = 0.1e1;
      real _t0EC6 = 0.e0;
      vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
      real _t0EC8 = prim •00CE<$[3]; $[3]; $[]> (_t0EC7, refPos0D2D);
      real _t0EC9 = prim -0026<$[]> (_t0EC3, _t0EC8);
      real _t0ECA = 0.e0;
      real _t0ECB = 0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, dPos0D2E);
      time0D2F = prim /0055 (_t0EC9, _t0ECE);
      face0D30 = 2;
    }
  }
  real _t0ECF = 0.e0;
  real _t0ED0 = 0.e0;
  real _t0ED1 = 0.e0;
  real _t0ED2 = 0.1e1;
  vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
  real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, refPos0D2D);
  real _t0ED5 = prim -0026<$[]> (_t0ECF, _t0ED4);
  real _t0ED6 = 0.e0;
  real _t0ED7 = 0.e0;
  real _t0ED8 = 0.1e1;
  vec3 _t0ED9 = [_t0ED6, _t0ED7, _t0ED8];
  real _t0EDA = prim •00CE<$[3]; $[3]; $[]> (_t0ED9, dPos0D2E);
  real _t0EDB = prim /0055 (_t0ED5, _t0EDA);
  real _t0EDC = -0.e0;
  bool _t0EDD = prim >0080 (_t0EDB, _t0EDC);
  real _t0EDE = 0.e0;
  real _t0EDF = 0.e0;
  real _t0EE0 = 0.e0;
  real _t0EE1 = 0.1e1;
  vec3 _t0EE2 = [_t0EDF, _t0EE0, _t0EE1];
  real _t0EE3 = prim •00CE<$[3]; $[3]; $[]> (_t0EE2, refPos0D2D);
  real _t0EE4 = prim -0026<$[]> (_t0EDE, _t0EE3);
  real _t0EE5 = 0.e0;
  real _t0EE6 = 0.e0;
  real _t0EE7 = 0.1e1;
  vec3 _t0EE8 = [_t0EE5, _t0EE6, _t0EE7];
  real _t0EE9 = prim •00CE<$[3]; $[3]; $[]> (_t0EE8, dPos0D2E);
  real _t0EEA = prim /0055 (_t0EE4, _t0EE9);
  bool _t0EEB = prim >0080 (time0D2F, _t0EEA);
  bool _t0EEC = prim $and01C4 (_t0EDD, _t0EEB);
  if _t0EEC {
    real _t0EED = 0.1e1;
    real _t0EEE = 0.1e-4;
    real _t0EEF = prim +0017<$[]> (_t0EED, _t0EEE);
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.1e1;
    vec3 _t0EF3 = [_t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec3 _t0EF8 = [_t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = prim •00CE<$[3]; $[3]; $[]> (_t0EF8, refPos0D2D);
    real _t0EFA = prim -0026<$[]> (_t0EF4, _t0EF9);
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    vec3 _t0EFE = [_t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = prim •00CE<$[3]; $[3]; $[]> (_t0EFE, dPos0D2E);
    real _t0F00 = prim /0055 (_t0EFA, _t0EFF);
    vec3 _t0F01 = prim *0038<$[3]> (dPos0D2E, _t0F00);
    vec3 _t0F02 = prim +0017<$[3]> (_t0F01, refPos0D2D);
    real _t0F03 = prim •00CE<$[3]; $[3]; $[]> (_t0EF3, _t0F02);
    bool _t0F04 = prim >0080 (_t0EEF, _t0F03);
    real _t0F05 = 0.1e-4;
    real _t0F06 = 0.1e-4;
    real _t0F07 = 0.1e-4;
    vec3 _t0F08 = [_t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
    real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0D2D);
    real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
    real _t0F10 = 0.e0;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.1e1;
    vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
    real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0D2E);
    real _t0F15 = prim /0055 (_t0F0F, _t0F14);
    vec3 _t0F16 = prim *0038<$[3]> (dPos0D2E, _t0F15);
    vec3 _t0F17 = prim +0017<$[3]> (_t0F16, refPos0D2D);
    vec3 _t0F18 = prim +0017<$[3]> (_t0F08, _t0F17);
    real _t0F19 = _t0F18[0];
    real _t0F1A = -0.e0;
    bool _t0F1B = prim >0080 (_t0F19, _t0F1A);
    real _t0F1C = 0.1e-4;
    real _t0F1D = 0.1e-4;
    real _t0F1E = 0.1e-4;
    vec3 _t0F1F = [_t0F1C, _t0F1D, _t0F1E];
    real _t0F20 = 0.e0;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    real _t0F23 = 0.1e1;
    vec3 _t0F24 = [_t0F21, _t0F22, _t0F23];
    real _t0F25 = prim •00CE<$[3]; $[3]; $[]> (_t0F24, refPos0D2D);
    real _t0F26 = prim -0026<$[]> (_t0F20, _t0F25);
    real _t0F27 = 0.e0;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.1e1;
    vec3 _t0F2A = [_t0F27, _t0F28, _t0F29];
    real _t0F2B = prim •00CE<$[3]; $[3]; $[]> (_t0F2A, dPos0D2E);
    real _t0F2C = prim /0055 (_t0F26, _t0F2B);
    vec3 _t0F2D = prim *0038<$[3]> (dPos0D2E, _t0F2C);
    vec3 _t0F2E = prim +0017<$[3]> (_t0F2D, refPos0D2D);
    vec3 _t0F2F = prim +0017<$[3]> (_t0F1F, _t0F2E);
    real _t0F30 = _t0F2F[1];
    real _t0F31 = -0.e0;
    bool _t0F32 = prim >0080 (_t0F30, _t0F31);
    real _t0F33 = 0.1e-4;
    real _t0F34 = 0.1e-4;
    real _t0F35 = 0.1e-4;
    vec3 _t0F36 = [_t0F33, _t0F34, _t0F35];
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.e0;
    real _t0F3A = 0.1e1;
    vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
    real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, refPos0D2D);
    real _t0F3D = prim -0026<$[]> (_t0F37, _t0F3C);
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.1e1;
    vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
    real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, dPos0D2E);
    real _t0F43 = prim /0055 (_t0F3D, _t0F42);
    vec3 _t0F44 = prim *0038<$[3]> (dPos0D2E, _t0F43);
    vec3 _t0F45 = prim +0017<$[3]> (_t0F44, refPos0D2D);
    vec3 _t0F46 = prim +0017<$[3]> (_t0F36, _t0F45);
    real _t0F47 = _t0F46[2];
    real _t0F48 = -0.e0;
    bool _t0F49 = prim >0080 (_t0F47, _t0F48);
    bool _t0F4A = prim $and01C4 (_t0F32, _t0F49);
    bool _t0F4B = prim $and01C4 (_t0F1B, _t0F4A);
    bool _t0F4C = prim $and01C4 (_t0F04, _t0F4B);
    if _t0F4C {
      real _t0F4D = 0.e0;
      real _t0F4E = 0.e0;
      real _t0F4F = 0.e0;
      real _t0F50 = 0.1e1;
      vec3 _t0F51 = [_t0F4E, _t0F4F, _t0F50];
      real _t0F52 = prim •00CE<$[3]; $[3]; $[]> (_t0F51, refPos0D2D);
      real _t0F53 = prim -0026<$[]> (_t0F4D, _t0F52);
      real _t0F54 = 0.e0;
      real _t0F55 = 0.e0;
      real _t0F56 = 0.1e1;
      vec3 _t0F57 = [_t0F54, _t0F55, _t0F56];
      real _t0F58 = prim •00CE<$[3]; $[3]; $[]> (_t0F57, dPos0D2E);
      time0D2F = prim /0055 (_t0F53, _t0F58);
      face0D30 = 3;
    }
  }
  int _t0F59 = -1;
  bool _t0F5A = prim !=0086 (face0D30, _t0F59);
  if _t0F5A {
    real _t0F5B = (real)face0D30;
    vec2 _t0F5C = [time0D2F, _t0F5B];
    return _t0F5C;
  } else {
    real _t0F5D = -0.1e1;
    real _t0F5E = -0.1e1;
    vec2 _t0F5F = [_t0F5D, _t0F5E];
    return _t0F5F;
  }
}
function vec2#0 _exit0F60 (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0F61 = +inf;
  int face0F62 = -1;
  real _t0F63 = 0.57735026919e0;
  real _t0F64 = 0.57735026919e0;
  real _t0F65 = -0.57735026919e0;
  real _t0F66 = 0.57735026919e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, refPos0D2D);
  real _t0F69 = prim -0026<$[]> (_t0F63, _t0F68);
  real _t0F6A = 0.57735026919e0;
  real _t0F6B = -0.57735026919e0;
  real _t0F6C = 0.57735026919e0;
  vec3 _t0F6D = [_t0F6A, _t0F6B, _t0F6C];
  real _t0F6E = prim •00CE<$[3]; $[3]; $[]> (_t0F6D, dPos0D2E);
  real _t0F6F = prim /0055 (_t0F69, _t0F6E);
  real _t0F70 = -0.e0;
  bool _t0F71 = prim >0080 (_t0F6F, _t0F70);
  real _t0F72 = 0.57735026919e0;
  real _t0F73 = 0.57735026919e0;
  real _t0F74 = -0.57735026919e0;
  real _t0F75 = 0.57735026919e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, refPos0D2D);
  real _t0F78 = prim -0026<$[]> (_t0F72, _t0F77);
  real _t0F79 = 0.57735026919e0;
  real _t0F7A = -0.57735026919e0;
  real _t0F7B = 0.57735026919e0;
  vec3 _t0F7C = [_t0F79, _t0F7A, _t0F7B];
  real _t0F7D = prim •00CE<$[3]; $[3]; $[]> (_t0F7C, dPos0D2E);
  real _t0F7E = prim /0055 (_t0F78, _t0F7D);
  bool _t0F7F = prim >0080 (time0F61, _t0F7E);
  bool _t0F80 = prim $and01C4 (_t0F71, _t0F7F);
  if _t0F80 {
    real _t0F81 = 0.57735026919e0;
    real _t0F82 = 0.57735026919e0;
    real _t0F83 = -0.57735026919e0;
    real _t0F84 = 0.57735026919e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, refPos0D2D);
    real _t0F87 = prim -0026<$[]> (_t0F81, _t0F86);
    real _t0F88 = 0.57735026919e0;
    real _t0F89 = -0.57735026919e0;
    real _t0F8A = 0.57735026919e0;
    vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
    real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, dPos0D2E);
    time0F61 = prim /0055 (_t0F87, _t0F8C);
    face0F62 = 0;
  }
  real _t0F8D = 0.e0;
  real _t0F8E = 0.1e1;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, refPos0D2D);
  real _t0F93 = prim -0026<$[]> (_t0F8D, _t0F92);
  real _t0F94 = 0.1e1;
  real _t0F95 = 0.e0;
  real _t0F96 = 0.e0;
  vec3 _t0F97 = [_t0F94, _t0F95, _t0F96];
  real _t0F98 = prim •00CE<$[3]; $[3]; $[]> (_t0F97, dPos0D2E);
  real _t0F99 = prim /0055 (_t0F93, _t0F98);
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.e0;
  real _t0F9D = 0.1e1;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.e0;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, refPos0D2D);
  real _t0FA2 = prim -0026<$[]> (_t0F9C, _t0FA1);
  real _t0FA3 = 0.1e1;
  real _t0FA4 = 0.e0;
  real _t0FA5 = 0.e0;
  vec3 _t0FA6 = [_t0FA3, _t0FA4, _t0FA5];
  real _t0FA7 = prim •00CE<$[3]; $[3]; $[]> (_t0FA6, dPos0D2E);
  real _t0FA8 = prim /0055 (_t0FA2, _t0FA7);
  bool _t0FA9 = prim >0080 (time0F61, _t0FA8);
  bool _t0FAA = prim $and01C4 (_t0F9B, _t0FA9);
  if _t0FAA {
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, refPos0D2D);
    real _t0FB1 = prim -0026<$[]> (_t0FAB, _t0FB0);
    real _t0FB2 = 0.1e1;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    vec3 _t0FB5 = [_t0FB2, _t0FB3, _t0FB4];
    real _t0FB6 = prim •00CE<$[3]; $[3]; $[]> (_t0FB5, dPos0D2E);
    time0F61 = prim /0055 (_t0FB1, _t0FB6);
    face0F62 = 1;
  }
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.1e1;
  real _t0FBA = 0.e0;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0D2D);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.1e1;
  real _t0FC0 = 0.e0;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0D2E);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  real _t0FC4 = -0.e0;
  bool _t0FC5 = prim >0080 (_t0FC3, _t0FC4);
  real _t0FC6 = 0.e0;
  real _t0FC7 = 0.e0;
  real _t0FC8 = 0.1e1;
  real _t0FC9 = 0.e0;
  vec3 _t0FCA = [_t0FC7, _t0FC8, _t0FC9];
  real _t0FCB = prim •00CE<$[3]; $[3]; $[]> (_t0FCA, refPos0D2D);
  real _t0FCC = prim -0026<$[]> (_t0FC6, _t0FCB);
  real _t0FCD = 0.e0;
  real _t0FCE = 0.1e1;
  real _t0FCF = 0.e0;
  vec3 _t0FD0 = [_t0FCD, _t0FCE, _t0FCF];
  real _t0FD1 = prim •00CE<$[3]; $[3]; $[]> (_t0FD0, dPos0D2E);
  real _t0FD2 = prim /0055 (_t0FCC, _t0FD1);
  bool _t0FD3 = prim >0080 (time0F61, _t0FD2);
  bool _t0FD4 = prim $and01C4 (_t0FC5, _t0FD3);
  if _t0FD4 {
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = 0.e0;
    vec3 _t0FD9 = [_t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = prim •00CE<$[3]; $[3]; $[]> (_t0FD9, refPos0D2D);
    real _t0FDB = prim -0026<$[]> (_t0FD5, _t0FDA);
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.e0;
    vec3 _t0FDF = [_t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = prim •00CE<$[3]; $[3]; $[]> (_t0FDF, dPos0D2E);
    time0F61 = prim /0055 (_t0FDB, _t0FE0);
    face0F62 = 2;
  }
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = 0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0D2D);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = 0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0D2E);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  real _t0FEE = -0.e0;
  bool _t0FEF = prim >0080 (_t0FED, _t0FEE);
  real _t0FF0 = 0.e0;
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.1e1;
  vec3 _t0FF4 = [_t0FF1, _t0FF2, _t0FF3];
  real _t0FF5 = prim •00CE<$[3]; $[3]; $[]> (_t0FF4, refPos0D2D);
  real _t0FF6 = prim -0026<$[]> (_t0FF0, _t0FF5);
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = 0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, dPos0D2E);
  real _t0FFC = prim /0055 (_t0FF6, _t0FFB);
  bool _t0FFD = prim >0080 (time0F61, _t0FFC);
  bool _t0FFE = prim $and01C4 (_t0FEF, _t0FFD);
  if _t0FFE {
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0D2D);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0D2E);
    time0F61 = prim /0055 (_t1005, _t100A);
    face0F62 = 3;
  }
  int _t100B = -1;
  bool _t100C = prim !=0086 (face0F62, _t100B);
  if _t100C {
    real _t100D = (real)face0F62;
    vec2 _t100E = [time0F61, _t100D];
    return _t100E;
  } else {
    real _t100F = -0.1e1;
    real _t1010 = -0.1e1;
    vec2 _t1011 = [_t100F, _t1010];
    return _t1011;
  }
}
function Femdata: Mesh#0 domain1012 (Femdata: Space arg01013)
{
  Femdata: Mesh _t1014 = extractFem(arg01013, Mesh);
  return _t1014;
}
function Femdata: Space#0 space1015 (Femdata: FemFunc arg01016)
{
  Femdata: Space _t1017 = extractFem(arg01016, Space);
  return _t1017;
}
function Femdata: FuncCell#0 funcCell1018 (Femdata: FemFunc arg01019, Femdata: MeshCell arg1101A)
{
  int _t101B = extractFemItem(CellIndex(MeshCell), int, arg1101A);
  Femdata: FuncCell _t101C = loadFem(FuncCell, arg01019, _t101B);
  return _t101C;
}
function real#1 mask102C (vec3 x102D)
{
  real _t102E = 0.1e1;
  return _t102E;
}
function vec3#1 color1035 (vec3 x1036)
{
  real _t1037 = prim @00A5<#∞; %3; $[]> (V1028, x1036);
  vec3 _t1038 = prim @00A5<#0; %1; $[3]> (cmap1034, _t1037);
  return _t1038;
}
function real#1 alpha1039 (real v103A, real g103B)
{
  real _t103C = 0.e0;
  real _t103D = 0.1e1;
  real _t103E = 0.13e1;
  real _t103F = 0.1e1;
  real _t1040 = prim |()|00B5<$[]> (v103A);
  real _t1041 = prim *0034 (g103B, thick0440);
  real _t1042 = prim /0055 (_t1040, _t1041);
  real _t1043 = prim -0026<$[]> (_t103F, _t1042);
  real _t1044 = prim *0034 (_t103E, _t1043);
  real _t1045 = prim clamp0094<$[]> (_t103C, _t103D, _t1044);
  return _t1045;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  0cell_a0430 = _t0439;
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099 = func alpha1039 (val1094, _t1098);
                  real _t109A = func mask102C (x107F);
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1 = func color1035 (x107F);
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function Femdata: RefCell#0 refcell04F3 (Femdata: Mesh arg004F4)
{
  Femdata: RefCell _t04F5 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004F4);
  return _t04F5;
}
function Femdata: MeshCell[]#0 cells04F6 (Femdata: Mesh arg004F7)
{
  Femdata: MeshCell[] _t04F8 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004F7);
  return _t04F8;
}
function Femdata: MeshCell[]#0 cells04F9 (Femdata: Mesh arg004F7)
{
  int _t04FA = 0;
  int _t04FB = extractFemItem(NumCell(Mesh), int, arg004F7);
  int[] _t04FC = prim $range01C3 (_t04FA, _t04FB);
  Femdata: MeshCell[] accum04FF = {};
  foreach i04FD in _t04FC {
    Femdata: MeshCell _t04FE = loadFem(MeshCell, arg004F7, i04FD);
    accum04FF = prim @0010<Femdata: MeshCell> (accum04FF, _t04FE);
  }
  return accum04FF;
}
function int#0 numCell0500 (Femdata: Mesh arg004F4)
{
  int _t0501 = extractFemItem(NumCell(Mesh), int, arg004F4);
  return _t0501;
}
function tensor[3,3,3,3]#0 msh_transform_30502 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0506 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0507 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0506);
  field(3)[3,3,3] _t0508 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0507);
  field(3)[3,3,3,3] _t0509 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0508);
  tensor[3,3,3,3] _t050A = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0509, pos0503);
  return _t050A;
}
function tensor[3,3,3]#0 msh_transform_2050B (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t050C = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t050D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t050C);
  field(3)[3,3,3] _t050E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t050D);
  tensor[3,3,3] _t050F = prim @00A5<#∞; %3; $[3,3,3]> (_t050E, pos0503);
  return _t050F;
}
function tensor[3,3]#0 msh_transform_10510 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0511 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0512 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0511);
  tensor[3,3] _t0513 = prim @00A5<#∞; %3; $[3,3]> (_t0512, pos0503);
  return _t0513;
}
function vec3#2 msh_transform_00514 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0515 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  vec3 _t0516 = prim @00A5<#∞; %3; $[3]> (_t0515, pos0503);
  return _t0516;
}
function Femdata: MeshPos#0 _msh_newtonInverse0517 (vec3 pos0518, int cellInt0519, Femdata: Mesh mesh051A)
{
  real _t051B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn051E = [_t051B, _t051C, _t051D];
  field(3)[3] _t051F = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
  field(3)[3,3] _t0520 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t051F);
  field(3)[3,3] _t0521 = prim inv015E<#∞; %3> (_t0520);
  real _t0522 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0523 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0524 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0525 = [_t0522, _t0523, _t0524];
  A0526 = prim @00A5<#∞; %3; $[3,3]> (_t0521, _t0525);
  int _t0527 = 0;
  int _t0528 = 2;
  int[] _t0529 = prim $range01C3 (_t0527, _t0528);
  foreach itter0559 in _t0529 {
    field(3)[3] _t052A = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
    field(3)[3] _t052B = prim -002E<#∞; %3; $[3]> (_t052A, pos0518);
    field(3)[3] _t052C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0526, _t052B);
    delta052D = prim @00A5<#∞; %3; $[3]> (_t052C, xn051E);
    xn051E = prim -0026<$[3]> (xn051E, delta052D);
    real _t052E = 0.1e-7;
    real _t052F = 0.1e-7;
    real _t0530 = prim *0034 (_t052E, _t052F);
    real _t0531 = prim •00CE<$[3]; $[3]; $[]> (delta052D, delta052D);
    bool _t0532 = prim >=007E (_t0530, _t0531);
    if _t0532 {
      real _t0533 = 0.1e1;
      real _t0534 = 0.1e-4;
      real _t0535 = prim +0017<$[]> (_t0533, _t0534);
      real _t0536 = 0.1e1;
      real _t0537 = 0.1e1;
      real _t0538 = 0.1e1;
      vec3 _t0539 = [_t0536, _t0537, _t0538];
      real _t053A = prim •00CE<$[3]; $[3]; $[]> (_t0539, xn051E);
      bool _t053B = prim >0080 (_t0535, _t053A);
      real _t053C = 0.1e-4;
      real _t053D = 0.1e-4;
      real _t053E = 0.1e-4;
      vec3 _t053F = [_t053C, _t053D, _t053E];
      vec3 _t0540 = prim +0017<$[3]> (_t053F, xn051E);
      real _t0541 = _t0540[0];
      real _t0542 = -0.e0;
      bool _t0543 = prim >0080 (_t0541, _t0542);
      real _t0544 = 0.1e-4;
      real _t0545 = 0.1e-4;
      real _t0546 = 0.1e-4;
      vec3 _t0547 = [_t0544, _t0545, _t0546];
      vec3 _t0548 = prim +0017<$[3]> (_t0547, xn051E);
      real _t0549 = _t0548[1];
      real _t054A = -0.e0;
      bool _t054B = prim >0080 (_t0549, _t054A);
      real _t054C = 0.1e-4;
      real _t054D = 0.1e-4;
      real _t054E = 0.1e-4;
      vec3 _t054F = [_t054C, _t054D, _t054E];
      vec3 _t0550 = prim +0017<$[3]> (_t054F, xn051E);
      real _t0551 = _t0550[2];
      real _t0552 = -0.e0;
      bool _t0553 = prim >0080 (_t0551, _t0552);
      bool _t0554 = prim $and01C4 (_t054B, _t0553);
      bool _t0555 = prim $and01C4 (_t0543, _t0554);
      bool _t0556 = prim $and01C4 (_t053B, _t0555);
      if _t0556 {
        Femdata: MeshPos _t0557 = extractFemItemN((mesh051A, cellInt0519, xn051E, pos0518),AllBuild(MeshPos),);
        return _t0557;
      } else {
        Femdata: MeshPos _t0558 = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
        return _t0558;
      }
    }
  }
  Femdata: MeshPos _t055A = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
  return _t055A;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos055B (Femdata: MeshPos pos055C)
{
  bool _t055D = extractFemItem(WorldTest(MeshPos), bool, pos055C);
  if _t055D {
    vec3 _t055E = extractFemItem(RefPos(MeshPos), vec3, pos055C);
    int _t055F = extractFemItem(CellIndex(MeshPos), int, pos055C);
    Femdata: Mesh _t0560 = extractFem(pos055C, Mesh);
    vec3 _t0561 = func msh_transform_00514 (_t055E, _t055F, _t0560);
    Femdata: MeshPos _t0562 = extractFemItemN((pos055C, _t0561),NewWorld(MeshPos),);
    return _t0562;
  } else {
    return pos055C;
  }
}
function vec3#0 worldPos0563 (Femdata: MeshPos pos055C)
{
  vec3 _t0564 = extractFemItem(RefPos(MeshPos), vec3, pos055C);
  int _t0565 = extractFemItem(CellIndex(MeshPos), int, pos055C);
  Femdata: Mesh _t0566 = extractFem(pos055C, Mesh);
  vec3 _t0567 = func msh_transform_00514 (_t0564, _t0565, _t0566);
  return _t0567;
}
function Femdata: MeshPos#0 $exitPos0568 (Femdata: Mesh mesh0569, int cellId056A, vec3 refPos056B, vec3 dPos056C, real[2] time056D)
{
  int _t056E = -1;
  real _t056F = time056D[1];
  int _t0570 = prim $r2i01B7 (_t056F);
  int[2] _t0572 = func nextCell40571 (_t0570, cellId056A, mesh0569);
  int _t0573 = 0;
  int _t0574 = prim $sub01C0<int; %2> (_t0572, _t0573);
  bool _t0575 = prim !=0086 (_t056E, _t0574);
  if _t0575 {
    real _t0576 = time056D[1];
    int _t0577 = prim $r2i01B7 (_t0576);
    int[2] _t0578 = func nextCell40571 (_t0577, cellId056A, mesh0569);
    int _t0579 = 0;
    int _t057A = prim $sub01C0<int; %2> (_t0578, _t0579);
    real _t057B = 0.1e1;
    real _t057C = 0.e0;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    vec4 _t057F = [_t057B, _t057C, _t057D, _t057E];
    real _t0580 = 0.e0;
    real _t0581 = 0.1e1;
    real _t0582 = 0.e0;
    real _t0583 = 0.e0;
    vec4 _t0584 = [_t0580, _t0581, _t0582, _t0583];
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    real _t0587 = 0.1e1;
    real _t0588 = 0.e0;
    vec4 _t0589 = [_t0585, _t0586, _t0587, _t0588];
    real _t058A = 0.222044604925e-15;
    real _t058B = 0.e0;
    real _t058C = 0.44408920985e-15;
    real _t058D = 0.1e1;
    vec4 _t058E = [_t058A, _t058B, _t058C, _t058D];
    tensor[4,4] _t058F = [_t057F, _t0584, _t0589, _t058E];
    real _t0590 = 0.173205080757e1;
    real _t0591 = 0.173205080757e1;
    real _t0592 = 0.173205080757e1;
    real _t0593 = -0.173205080757e1;
    vec4 _t0594 = [_t0590, _t0591, _t0592, _t0593];
    real _t0595 = 0.1e1;
    real _t0596 = 0.2e1;
    real _t0597 = 0.1e1;
    real _t0598 = -0.1e1;
    vec4 _t0599 = [_t0595, _t0596, _t0597, _t0598];
    real _t059A = -0.1e1;
    real _t059B = -0.1e1;
    real _t059C = -0.192296268638e-15;
    real _t059D = 0.1e1;
    vec4 _t059E = [_t059A, _t059B, _t059C, _t059D];
    real _t059F = 0.222044604925e-15;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.44408920985e-15;
    real _t05A2 = 0.1e1;
    vec4 _t05A3 = [_t059F, _t05A0, _t05A1, _t05A2];
    tensor[4,4] _t05A4 = [_t0594, _t0599, _t059E, _t05A3];
    real _t05A5 = 0.1e1;
    real _t05A6 = 0.2e1;
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.1e1;
    vec4 _t05A9 = [_t05A5, _t05A6, _t05A7, _t05A8];
    real _t05AA = 0.173205080757e1;
    real _t05AB = 0.173205080757e1;
    real _t05AC = 0.173205080757e1;
    real _t05AD = -0.173205080757e1;
    vec4 _t05AE = [_t05AA, _t05AB, _t05AC, _t05AD];
    real _t05AF = -0.1e1;
    real _t05B0 = -0.1e1;
    real _t05B1 = -0.192296268638e-15;
    real _t05B2 = 0.1e1;
    vec4 _t05B3 = [_t05AF, _t05B0, _t05B1, _t05B2];
    real _t05B4 = 0.222044604925e-15;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.44408920985e-15;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    tensor[4,4] _t05B9 = [_t05A9, _t05AE, _t05B3, _t05B8];
    real _t05BA = 0.1e1;
    real _t05BB = 0.2e1;
    real _t05BC = 0.1e1;
    real _t05BD = -0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    real _t05BF = -0.1e1;
    real _t05C0 = -0.1e1;
    real _t05C1 = -0.192296268638e-15;
    real _t05C2 = 0.1e1;
    vec4 _t05C3 = [_t05BF, _t05C0, _t05C1, _t05C2];
    real _t05C4 = 0.173205080757e1;
    real _t05C5 = 0.173205080757e1;
    real _t05C6 = 0.173205080757e1;
    real _t05C7 = -0.173205080757e1;
    vec4 _t05C8 = [_t05C4, _t05C5, _t05C6, _t05C7];
    real _t05C9 = 0.222044604925e-15;
    real _t05CA = 0.e0;
    real _t05CB = 0.44408920985e-15;
    real _t05CC = 0.1e1;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    tensor[4,4] _t05CE = [_t05BE, _t05C3, _t05C8, _t05CD];
    tensor[4,4][4] _t05CF = {_t058F, _t05A4, _t05B9, _t05CE};
    real _t05D0 = 0.57735026919e0;
    real _t05D1 = -0.1e1;
    real _t05D2 = -0.1e1;
    real _t05D3 = 0.1e1;
    vec4 _t05D4 = [_t05D0, _t05D1, _t05D2, _t05D3];
    real _t05D5 = -0.57735026919e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.57735026919e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    real _t05E2 = 0.1e1;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    tensor[4,4] _t05E4 = [_t05D4, _t05D9, _t05DE, _t05E3];
    real _t05E5 = 0.1e1;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    vec4 _t05E9 = [_t05E5, _t05E6, _t05E7, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.1e1;
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    real _t05F1 = 0.1e1;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.1e1;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    tensor[4,4] _t05F9 = [_t05E9, _t05EE, _t05F3, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.1e1;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.e0;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    tensor[4,4] _t060E = [_t05FE, _t0603, _t0608, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.e0;
    real _t0621 = 0.1e1;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    tensor[4,4] _t0623 = [_t0613, _t0618, _t061D, _t0622];
    tensor[4,4][4] _t0624 = {_t05E4, _t05F9, _t060E, _t0623};
    real _t0625 = -0.1e1;
    real _t0626 = 0.57735026919e0;
    real _t0627 = -0.1e1;
    real _t0628 = 0.1e1;
    vec4 _t0629 = [_t0625, _t0626, _t0627, _t0628];
    real _t062A = 0.1e1;
    real _t062B = -0.57735026919e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.57735026919e0;
    real _t0631 = 0.1e1;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    real _t0637 = 0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    tensor[4,4] _t0639 = [_t0629, _t062E, _t0633, _t0638];
    real _t063A = 0.e0;
    real _t063B = 0.1e1;
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    vec4 _t063E = [_t063A, _t063B, _t063C, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    real _t064C = 0.1e1;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    tensor[4,4] _t064E = [_t063E, _t0643, _t0648, _t064D];
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    vec4 _t0653 = [_t064F, _t0650, _t0651, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = 0.e0;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    tensor[4,4] _t0663 = [_t0653, _t0658, _t065D, _t0662];
    real _t0664 = 0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec4 _t0668 = [_t0664, _t0665, _t0666, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    real _t066C = 0.e0;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.e0;
    real _t0676 = 0.1e1;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    tensor[4,4] _t0678 = [_t0668, _t066D, _t0672, _t0677];
    tensor[4,4][4] _t0679 = {_t0639, _t064E, _t0663, _t0678};
    real _t067A = -0.1e1;
    real _t067B = -0.1e1;
    real _t067C = 0.57735026919e0;
    real _t067D = 0.1e1;
    vec4 _t067E = [_t067A, _t067B, _t067C, _t067D];
    real _t067F = 0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = -0.57735026919e0;
    real _t0682 = 0.e0;
    vec4 _t0683 = [_t067F, _t0680, _t0681, _t0682];
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    real _t0686 = 0.57735026919e0;
    real _t0687 = 0.e0;
    vec4 _t0688 = [_t0684, _t0685, _t0686, _t0687];
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.1e1;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    tensor[4,4] _t068E = [_t067E, _t0683, _t0688, _t068D];
    real _t068F = 0.e0;
    real _t0690 = 0.e0;
    real _t0691 = 0.1e1;
    real _t0692 = 0.e0;
    vec4 _t0693 = [_t068F, _t0690, _t0691, _t0692];
    real _t0694 = 0.1e1;
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    vec4 _t0698 = [_t0694, _t0695, _t0696, _t0697];
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    vec4 _t069D = [_t0699, _t069A, _t069B, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.1e1;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    tensor[4,4] _t06A3 = [_t0693, _t0698, _t069D, _t06A2];
    real _t06A4 = 0.1e1;
    real _t06A5 = 0.e0;
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    vec4 _t06A8 = [_t06A4, _t06A5, _t06A6, _t06A7];
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    tensor[4,4] _t06B8 = [_t06A8, _t06AD, _t06B2, _t06B7];
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    real _t06BC = 0.e0;
    vec4 _t06BD = [_t06B9, _t06BA, _t06BB, _t06BC];
    real _t06BE = 0.e0;
    real _t06BF = 0.1e1;
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    tensor[4,4] _t06CD = [_t06BD, _t06C2, _t06C7, _t06CC];
    tensor[4,4][4] _t06CE = {_t068E, _t06A3, _t06B8, _t06CD};
    tensor[4,4][4][4] _t06CF = {_t05CF, _t0624, _t0679, _t06CE};
    real _t06D0 = time056D[1];
    int _t06D1 = prim $r2i01B7 (_t06D0);
    tensor[4,4][4] _t06D2 = prim $sub01C0<tensor[4,4][4]; %4> (_t06CF, _t06D1);
    real _t06D3 = time056D[1];
    int _t06D4 = prim $r2i01B7 (_t06D3);
    int[2] _t06D5 = func nextCell40571 (_t06D4, cellId056A, mesh0569);
    int _t06D6 = 1;
    int _t06D7 = prim $sub01C0<int; %2> (_t06D5, _t06D6);
    tensor[4,4] _t06D8 = prim $sub01C0<tensor[4,4]; %4> (_t06D2, _t06D7);
    real _t06D9 = time056D[0];
    vec3 _t06DA = prim *0036<$[3]> (_t06D9, dPos056C);
    vec3 _t06DB = prim +0017<$[3]> (_t06DA, refPos056B);
    real _t06DC = _t06DB[0];
    real _t06DD = time056D[0];
    vec3 _t06DE = prim *0036<$[3]> (_t06DD, dPos056C);
    vec3 _t06DF = prim +0017<$[3]> (_t06DE, refPos056B);
    real _t06E0 = _t06DF[1];
    real _t06E1 = time056D[0];
    vec3 _t06E2 = prim *0036<$[3]> (_t06E1, dPos056C);
    vec3 _t06E3 = prim +0017<$[3]> (_t06E2, refPos056B);
    real _t06E4 = _t06E3[2];
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06DC, _t06E0, _t06E4, _t06E5];
    vec4 _t06E7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t06D8, _t06E6);
    real _t06E8 = _t06E7[0];
    real _t06E9 = 0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    vec4 _t06ED = [_t06E9, _t06EA, _t06EB, _t06EC];
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    real _t06F0 = 0.e0;
    real _t06F1 = 0.e0;
    vec4 _t06F2 = [_t06EE, _t06EF, _t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.222044604925e-15;
    real _t06F9 = 0.e0;
    real _t06FA = 0.44408920985e-15;
    real _t06FB = 0.1e1;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    tensor[4,4] _t06FD = [_t06ED, _t06F2, _t06F7, _t06FC];
    real _t06FE = 0.173205080757e1;
    real _t06FF = 0.173205080757e1;
    real _t0700 = 0.173205080757e1;
    real _t0701 = -0.173205080757e1;
    vec4 _t0702 = [_t06FE, _t06FF, _t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.2e1;
    real _t0705 = 0.1e1;
    real _t0706 = -0.1e1;
    vec4 _t0707 = [_t0703, _t0704, _t0705, _t0706];
    real _t0708 = -0.1e1;
    real _t0709 = -0.1e1;
    real _t070A = -0.192296268638e-15;
    real _t070B = 0.1e1;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.222044604925e-15;
    real _t070E = 0.e0;
    real _t070F = 0.44408920985e-15;
    real _t0710 = 0.1e1;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    tensor[4,4] _t0712 = [_t0702, _t0707, _t070C, _t0711];
    real _t0713 = 0.1e1;
    real _t0714 = 0.2e1;
    real _t0715 = 0.1e1;
    real _t0716 = -0.1e1;
    vec4 _t0717 = [_t0713, _t0714, _t0715, _t0716];
    real _t0718 = 0.173205080757e1;
    real _t0719 = 0.173205080757e1;
    real _t071A = 0.173205080757e1;
    real _t071B = -0.173205080757e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = -0.1e1;
    real _t071E = -0.1e1;
    real _t071F = -0.192296268638e-15;
    real _t0720 = 0.1e1;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.222044604925e-15;
    real _t0723 = 0.e0;
    real _t0724 = 0.44408920985e-15;
    real _t0725 = 0.1e1;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    tensor[4,4] _t0727 = [_t0717, _t071C, _t0721, _t0726];
    real _t0728 = 0.1e1;
    real _t0729 = 0.2e1;
    real _t072A = 0.1e1;
    real _t072B = -0.1e1;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = -0.1e1;
    real _t072E = -0.1e1;
    real _t072F = -0.192296268638e-15;
    real _t0730 = 0.1e1;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.173205080757e1;
    real _t0733 = 0.173205080757e1;
    real _t0734 = 0.173205080757e1;
    real _t0735 = -0.173205080757e1;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.222044604925e-15;
    real _t0738 = 0.e0;
    real _t0739 = 0.44408920985e-15;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    tensor[4,4][4] _t073D = {_t06FD, _t0712, _t0727, _t073C};
    real _t073E = 0.57735026919e0;
    real _t073F = -0.1e1;
    real _t0740 = -0.1e1;
    real _t0741 = 0.1e1;
    vec4 _t0742 = [_t073E, _t073F, _t0740, _t0741];
    real _t0743 = -0.57735026919e0;
    real _t0744 = 0.1e1;
    real _t0745 = 0.e0;
    real _t0746 = 0.e0;
    vec4 _t0747 = [_t0743, _t0744, _t0745, _t0746];
    real _t0748 = 0.57735026919e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    real _t074B = 0.e0;
    vec4 _t074C = [_t0748, _t0749, _t074A, _t074B];
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    vec4 _t0751 = [_t074D, _t074E, _t074F, _t0750];
    tensor[4,4] _t0752 = [_t0742, _t0747, _t074C, _t0751];
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    vec4 _t0757 = [_t0753, _t0754, _t0755, _t0756];
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    real _t075A = 0.e0;
    real _t075B = 0.e0;
    vec4 _t075C = [_t0758, _t0759, _t075A, _t075B];
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    real _t075F = 0.1e1;
    real _t0760 = 0.e0;
    vec4 _t0761 = [_t075D, _t075E, _t075F, _t0760];
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    real _t0765 = 0.1e1;
    vec4 _t0766 = [_t0762, _t0763, _t0764, _t0765];
    tensor[4,4] _t0767 = [_t0757, _t075C, _t0761, _t0766];
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    vec4 _t076C = [_t0768, _t0769, _t076A, _t076B];
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    real _t0770 = 0.e0;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    real _t0774 = 0.1e1;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.e0;
    real _t077A = 0.1e1;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    tensor[4,4] _t077C = [_t076C, _t0771, _t0776, _t077B];
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    vec4 _t0781 = [_t077D, _t077E, _t077F, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.e0;
    real _t078F = 0.1e1;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    tensor[4,4] _t0791 = [_t0781, _t0786, _t078B, _t0790];
    tensor[4,4][4] _t0792 = {_t0752, _t0767, _t077C, _t0791};
    real _t0793 = -0.1e1;
    real _t0794 = 0.57735026919e0;
    real _t0795 = -0.1e1;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    real _t0798 = 0.1e1;
    real _t0799 = -0.57735026919e0;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    vec4 _t079C = [_t0798, _t0799, _t079A, _t079B];
    real _t079D = 0.e0;
    real _t079E = 0.57735026919e0;
    real _t079F = 0.1e1;
    real _t07A0 = 0.e0;
    vec4 _t07A1 = [_t079D, _t079E, _t079F, _t07A0];
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    vec4 _t07A6 = [_t07A2, _t07A3, _t07A4, _t07A5];
    tensor[4,4] _t07A7 = [_t0797, _t079C, _t07A1, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.e0;
    vec4 _t07B1 = [_t07AD, _t07AE, _t07AF, _t07B0];
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.1e1;
    real _t07B5 = 0.e0;
    vec4 _t07B6 = [_t07B2, _t07B3, _t07B4, _t07B5];
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    real _t07BA = 0.1e1;
    vec4 _t07BB = [_t07B7, _t07B8, _t07B9, _t07BA];
    tensor[4,4] _t07BC = [_t07AC, _t07B1, _t07B6, _t07BB];
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    vec4 _t07C1 = [_t07BD, _t07BE, _t07BF, _t07C0];
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.e0;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.e0;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    real _t07CF = 0.1e1;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    tensor[4,4] _t07D1 = [_t07C1, _t07C6, _t07CB, _t07D0];
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    vec4 _t07D6 = [_t07D2, _t07D3, _t07D4, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.1e1;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    tensor[4,4] _t07E6 = [_t07D6, _t07DB, _t07E0, _t07E5];
    tensor[4,4][4] _t07E7 = {_t07A7, _t07BC, _t07D1, _t07E6};
    real _t07E8 = -0.1e1;
    real _t07E9 = -0.1e1;
    real _t07EA = 0.57735026919e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    real _t07ED = 0.1e1;
    real _t07EE = 0.e0;
    real _t07EF = -0.57735026919e0;
    real _t07F0 = 0.e0;
    vec4 _t07F1 = [_t07ED, _t07EE, _t07EF, _t07F0];
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.57735026919e0;
    real _t07F5 = 0.e0;
    vec4 _t07F6 = [_t07F2, _t07F3, _t07F4, _t07F5];
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    vec4 _t07FB = [_t07F7, _t07F8, _t07F9, _t07FA];
    tensor[4,4] _t07FC = [_t07EC, _t07F1, _t07F6, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.1e1;
    real _t0800 = 0.e0;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    real _t0802 = 0.1e1;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    vec4 _t0806 = [_t0802, _t0803, _t0804, _t0805];
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    vec4 _t080B = [_t0807, _t0808, _t0809, _t080A];
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    vec4 _t0810 = [_t080C, _t080D, _t080E, _t080F];
    tensor[4,4] _t0811 = [_t0801, _t0806, _t080B, _t0810];
    real _t0812 = 0.1e1;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.e0;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.1e1;
    real _t081A = 0.e0;
    vec4 _t081B = [_t0817, _t0818, _t0819, _t081A];
    real _t081C = 0.e0;
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    vec4 _t0820 = [_t081C, _t081D, _t081E, _t081F];
    real _t0821 = 0.e0;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    vec4 _t0825 = [_t0821, _t0822, _t0823, _t0824];
    tensor[4,4] _t0826 = [_t0816, _t081B, _t0820, _t0825];
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    vec4 _t0830 = [_t082C, _t082D, _t082E, _t082F];
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.1e1;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    real _t0839 = 0.1e1;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    tensor[4,4] _t083B = [_t082B, _t0830, _t0835, _t083A];
    tensor[4,4][4] _t083C = {_t07FC, _t0811, _t0826, _t083B};
    tensor[4,4][4][4] _t083D = {_t073D, _t0792, _t07E7, _t083C};
    real _t083E = time056D[1];
    int _t083F = prim $r2i01B7 (_t083E);
    tensor[4,4][4] _t0840 = prim $sub01C0<tensor[4,4][4]; %4> (_t083D, _t083F);
    real _t0841 = time056D[1];
    int _t0842 = prim $r2i01B7 (_t0841);
    int[2] _t0843 = func nextCell40571 (_t0842, cellId056A, mesh0569);
    int _t0844 = 1;
    int _t0845 = prim $sub01C0<int; %2> (_t0843, _t0844);
    tensor[4,4] _t0846 = prim $sub01C0<tensor[4,4]; %4> (_t0840, _t0845);
    real _t0847 = time056D[0];
    vec3 _t0848 = prim *0036<$[3]> (_t0847, dPos056C);
    vec3 _t0849 = prim +0017<$[3]> (_t0848, refPos056B);
    real _t084A = _t0849[0];
    real _t084B = time056D[0];
    vec3 _t084C = prim *0036<$[3]> (_t084B, dPos056C);
    vec3 _t084D = prim +0017<$[3]> (_t084C, refPos056B);
    real _t084E = _t084D[1];
    real _t084F = time056D[0];
    vec3 _t0850 = prim *0036<$[3]> (_t084F, dPos056C);
    vec3 _t0851 = prim +0017<$[3]> (_t0850, refPos056B);
    real _t0852 = _t0851[2];
    real _t0853 = 0.1e1;
    vec4 _t0854 = [_t084A, _t084E, _t0852, _t0853];
    vec4 _t0855 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0846, _t0854);
    real _t0856 = _t0855[1];
    real _t0857 = 0.1e1;
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    real _t0863 = 0.1e1;
    real _t0864 = 0.e0;
    vec4 _t0865 = [_t0861, _t0862, _t0863, _t0864];
    real _t0866 = 0.222044604925e-15;
    real _t0867 = 0.e0;
    real _t0868 = 0.44408920985e-15;
    real _t0869 = 0.1e1;
    vec4 _t086A = [_t0866, _t0867, _t0868, _t0869];
    tensor[4,4] _t086B = [_t085B, _t0860, _t0865, _t086A];
    real _t086C = 0.173205080757e1;
    real _t086D = 0.173205080757e1;
    real _t086E = 0.173205080757e1;
    real _t086F = -0.173205080757e1;
    vec4 _t0870 = [_t086C, _t086D, _t086E, _t086F];
    real _t0871 = 0.1e1;
    real _t0872 = 0.2e1;
    real _t0873 = 0.1e1;
    real _t0874 = -0.1e1;
    vec4 _t0875 = [_t0871, _t0872, _t0873, _t0874];
    real _t0876 = -0.1e1;
    real _t0877 = -0.1e1;
    real _t0878 = -0.192296268638e-15;
    real _t0879 = 0.1e1;
    vec4 _t087A = [_t0876, _t0877, _t0878, _t0879];
    real _t087B = 0.222044604925e-15;
    real _t087C = 0.e0;
    real _t087D = 0.44408920985e-15;
    real _t087E = 0.1e1;
    vec4 _t087F = [_t087B, _t087C, _t087D, _t087E];
    tensor[4,4] _t0880 = [_t0870, _t0875, _t087A, _t087F];
    real _t0881 = 0.1e1;
    real _t0882 = 0.2e1;
    real _t0883 = 0.1e1;
    real _t0884 = -0.1e1;
    vec4 _t0885 = [_t0881, _t0882, _t0883, _t0884];
    real _t0886 = 0.173205080757e1;
    real _t0887 = 0.173205080757e1;
    real _t0888 = 0.173205080757e1;
    real _t0889 = -0.173205080757e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = -0.1e1;
    real _t088C = -0.1e1;
    real _t088D = -0.192296268638e-15;
    real _t088E = 0.1e1;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.222044604925e-15;
    real _t0891 = 0.e0;
    real _t0892 = 0.44408920985e-15;
    real _t0893 = 0.1e1;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    tensor[4,4] _t0895 = [_t0885, _t088A, _t088F, _t0894];
    real _t0896 = 0.1e1;
    real _t0897 = 0.2e1;
    real _t0898 = 0.1e1;
    real _t0899 = -0.1e1;
    vec4 _t089A = [_t0896, _t0897, _t0898, _t0899];
    real _t089B = -0.1e1;
    real _t089C = -0.1e1;
    real _t089D = -0.192296268638e-15;
    real _t089E = 0.1e1;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.173205080757e1;
    real _t08A1 = 0.173205080757e1;
    real _t08A2 = 0.173205080757e1;
    real _t08A3 = -0.173205080757e1;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.222044604925e-15;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.44408920985e-15;
    real _t08A8 = 0.1e1;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    tensor[4,4] _t08AA = [_t089A, _t089F, _t08A4, _t08A9];
    tensor[4,4][4] _t08AB = {_t086B, _t0880, _t0895, _t08AA};
    real _t08AC = 0.57735026919e0;
    real _t08AD = -0.1e1;
    real _t08AE = -0.1e1;
    real _t08AF = 0.1e1;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = -0.57735026919e0;
    real _t08B2 = 0.1e1;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.e0;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    real _t08B6 = 0.57735026919e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    vec4 _t08BA = [_t08B6, _t08B7, _t08B8, _t08B9];
    real _t08BB = 0.e0;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    real _t08BE = 0.1e1;
    vec4 _t08BF = [_t08BB, _t08BC, _t08BD, _t08BE];
    tensor[4,4] _t08C0 = [_t08B0, _t08B5, _t08BA, _t08BF];
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.e0;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.1e1;
    real _t08CE = 0.e0;
    vec4 _t08CF = [_t08CB, _t08CC, _t08CD, _t08CE];
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    real _t08D3 = 0.1e1;
    vec4 _t08D4 = [_t08D0, _t08D1, _t08D2, _t08D3];
    tensor[4,4] _t08D5 = [_t08C5, _t08CA, _t08CF, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.1e1;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.e0;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.1e1;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    tensor[4,4] _t08EA = [_t08DA, _t08DF, _t08E4, _t08E9];
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    vec4 _t08EF = [_t08EB, _t08EC, _t08ED, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    real _t08FD = 0.1e1;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    tensor[4,4] _t08FF = [_t08EF, _t08F4, _t08F9, _t08FE];
    tensor[4,4][4] _t0900 = {_t08C0, _t08D5, _t08EA, _t08FF};
    real _t0901 = -0.1e1;
    real _t0902 = 0.57735026919e0;
    real _t0903 = -0.1e1;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.57735026919e0;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.57735026919e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    real _t0910 = 0.e0;
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    vec4 _t0914 = [_t0910, _t0911, _t0912, _t0913];
    tensor[4,4] _t0915 = [_t0905, _t090A, _t090F, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    real _t091E = 0.e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.1e1;
    real _t0923 = 0.e0;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    vec4 _t0929 = [_t0925, _t0926, _t0927, _t0928];
    tensor[4,4] _t092A = [_t091A, _t091F, _t0924, _t0929];
    real _t092B = 0.1e1;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.e0;
    real _t0931 = 0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = 0.e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    real _t093D = 0.1e1;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    tensor[4,4] _t093F = [_t092F, _t0934, _t0939, _t093E];
    real _t0940 = 0.1e1;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.e0;
    real _t094B = 0.1e1;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    real _t0952 = 0.1e1;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    tensor[4,4] _t0954 = [_t0944, _t0949, _t094E, _t0953];
    tensor[4,4][4] _t0955 = {_t0915, _t092A, _t093F, _t0954};
    real _t0956 = -0.1e1;
    real _t0957 = -0.1e1;
    real _t0958 = 0.57735026919e0;
    real _t0959 = 0.1e1;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.1e1;
    real _t095C = 0.e0;
    real _t095D = -0.57735026919e0;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.1e1;
    real _t0962 = 0.57735026919e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.e0;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    real _t0968 = 0.1e1;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    tensor[4,4] _t096A = [_t095A, _t095F, _t0964, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = 0.e0;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.1e1;
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    vec4 _t097E = [_t097A, _t097B, _t097C, _t097D];
    tensor[4,4] _t097F = [_t096F, _t0974, _t0979, _t097E];
    real _t0980 = 0.1e1;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    real _t0987 = 0.1e1;
    real _t0988 = 0.e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.1e1;
    real _t098C = 0.e0;
    real _t098D = 0.e0;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    real _t098F = 0.e0;
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    vec4 _t0993 = [_t098F, _t0990, _t0991, _t0992];
    tensor[4,4] _t0994 = [_t0984, _t0989, _t098E, _t0993];
    real _t0995 = 0.1e1;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.e0;
    real _t099B = 0.1e1;
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.1e1;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    tensor[4,4] _t09A9 = [_t0999, _t099E, _t09A3, _t09A8];
    tensor[4,4][4] _t09AA = {_t096A, _t097F, _t0994, _t09A9};
    tensor[4,4][4][4] _t09AB = {_t08AB, _t0900, _t0955, _t09AA};
    real _t09AC = time056D[1];
    int _t09AD = prim $r2i01B7 (_t09AC);
    tensor[4,4][4] _t09AE = prim $sub01C0<tensor[4,4][4]; %4> (_t09AB, _t09AD);
    real _t09AF = time056D[1];
    int _t09B0 = prim $r2i01B7 (_t09AF);
    int[2] _t09B1 = func nextCell40571 (_t09B0, cellId056A, mesh0569);
    int _t09B2 = 1;
    int _t09B3 = prim $sub01C0<int; %2> (_t09B1, _t09B2);
    tensor[4,4] _t09B4 = prim $sub01C0<tensor[4,4]; %4> (_t09AE, _t09B3);
    real _t09B5 = time056D[0];
    vec3 _t09B6 = prim *0036<$[3]> (_t09B5, dPos056C);
    vec3 _t09B7 = prim +0017<$[3]> (_t09B6, refPos056B);
    real _t09B8 = _t09B7[0];
    real _t09B9 = time056D[0];
    vec3 _t09BA = prim *0036<$[3]> (_t09B9, dPos056C);
    vec3 _t09BB = prim +0017<$[3]> (_t09BA, refPos056B);
    real _t09BC = _t09BB[1];
    real _t09BD = time056D[0];
    vec3 _t09BE = prim *0036<$[3]> (_t09BD, dPos056C);
    vec3 _t09BF = prim +0017<$[3]> (_t09BE, refPos056B);
    real _t09C0 = _t09BF[2];
    real _t09C1 = 0.1e1;
    vec4 _t09C2 = [_t09B8, _t09BC, _t09C0, _t09C1];
    vec4 _t09C3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t09B4, _t09C2);
    real _t09C4 = _t09C3[2];
    vec3 _t09C5 = [_t06E8, _t0856, _t09C4];
    Femdata: MeshPos _t09C6 = extractFemItemN((mesh0569, _t057A, _t09C5),RefBuild(Mesh),);
    return _t09C6;
  } else {
    real _t09C7 = time056D[0];
    vec3 _t09C8 = prim *0036<$[3]> (_t09C7, dPos056C);
    vec3 _t09C9 = prim +0017<$[3]> (_t09C8, refPos056B);
    Femdata: MeshPos _t09CA = extractFemItemN((mesh0569, _t09C9),InvalidBuildBoundary(MeshPos),);
    return _t09CA;
  }
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
function int[2]#0 $nextCell209D4 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  nearbyCells09D5 = extractFemItem2(CellConnectivity(Mesh), int, mesh09CD, cell09CC : int);
  int _t09D6 = 0;
  int _t09D7 = 1;
  int _t09D8 = 3;
  int[2] _t09D9 = {_t09D7, _t09D8};
  int _t09DA = 3;
  int _t09DB = 3;
  int[2] _t09DC = {_t09DA, _t09DB};
  int _t09DD = 9;
  int _t09DE = 3;
  int[2] _t09DF = {_t09DD, _t09DE};
  int _t09E0 = 27;
  int _t09E1 = 3;
  int[2] _t09E2 = {_t09E0, _t09E1};
  int[2][4] _t09E3 = {_t09D9, _t09DC, _t09DF, _t09E2};
  int[2] _t09E4 = prim $sub01C0<int[2]; %4> (_t09E3, faceIdx09CB);
  int _t09E5 = 1;
  int _t09E6 = prim $sub01C0<int; %2> (_t09E4, _t09E5);
  int[] _t09E7 = prim $range01C3 (_t09D6, _t09E6);
  int[] accum0A08 = {};
  foreach i0A05 in _t09E7 {
    int _t09E8 = 1;
    int _t09E9 = 2;
    int _t09EA = 3;
    int _t09EB = 0;
    int _t09EC = 2;
    int _t09ED = 3;
    int _t09EE = 0;
    int _t09EF = 1;
    int _t09F0 = 3;
    int _t09F1 = 0;
    int _t09F2 = 1;
    int _t09F3 = 2;
    int[12] _t09F4 = {_t09E8, _t09E9, _t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3};
    int _t09F5 = 1;
    int _t09F6 = 3;
    int[2] _t09F7 = {_t09F5, _t09F6};
    int _t09F8 = 3;
    int _t09F9 = 3;
    int[2] _t09FA = {_t09F8, _t09F9};
    int _t09FB = 9;
    int _t09FC = 3;
    int[2] _t09FD = {_t09FB, _t09FC};
    int _t09FE = 27;
    int _t09FF = 3;
    int[2] _t0A00 = {_t09FE, _t09FF};
    int[2][4] _t0A01 = {_t09F7, _t09FA, _t09FD, _t0A00};
    int[2] _t0A02 = prim $sub01C0<int[2]; %4> (_t0A01, faceIdx09CB);
    int _t0A03 = 0;
    int _t0A04 = prim $sub01C0<int; %2> (_t0A02, _t0A03);
    int _t0A06 = prim +0015 (_t0A04, i0A05);
    int _t0A07 = prim $sub01C0<int; %12> (_t09F4, _t0A06);
    accum0A08 = prim @0010<int> (accum0A08, _t0A07);
  }
  numFacetNodes0A09 = prim length0123<int> (accum0A08);
  int _t0A0A = 3;
  bool _t0A0B = prim ==0082 (_t0A0A, numFacetNodes0A09);
  if _t0A0B {
    foreach cellInt0A0C in nearbyCells09D5 {
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 0;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx09CB);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i0A05 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx09CB);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i0A05);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 0;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx09CB);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i0A05 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx09CB);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i0A05);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 1;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      int[4] _t0A8F = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A90 = 1;
      int _t0A91 = prim $sub01C0<int; %4> (_t0A8F, _t0A90);
      int[4] _t0A92 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A93 = 2;
      int _t0A94 = prim $sub01C0<int; %4> (_t0A92, _t0A93);
      int[4] _t0A95 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A96 = 3;
      int _t0A97 = prim $sub01C0<int; %4> (_t0A95, _t0A96);
      int[3] _t0A98 = {_t0A91, _t0A94, _t0A97};
      int _t0A99 = 2;
      int _t0A9A = prim $sub01C0<int; %3> (_t0A98, _t0A99);
      int _t0A9B = 0;
      int _t0A9C = 1;
      int _t0A9D = 3;
      int[2] _t0A9E = {_t0A9C, _t0A9D};
      int _t0A9F = 3;
      int _t0AA0 = 3;
      int[2] _t0AA1 = {_t0A9F, _t0AA0};
      int _t0AA2 = 9;
      int _t0AA3 = 3;
      int[2] _t0AA4 = {_t0AA2, _t0AA3};
      int _t0AA5 = 27;
      int _t0AA6 = 3;
      int[2] _t0AA7 = {_t0AA5, _t0AA6};
      int[2][4] _t0AA8 = {_t0A9E, _t0AA1, _t0AA4, _t0AA7};
      int[2] _t0AA9 = prim $sub01C0<int[2]; %4> (_t0AA8, faceIdx09CB);
      int _t0AAA = 1;
      int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
      int[] _t0AAC = prim $range01C3 (_t0A9B, _t0AAB);
      int[] accum0ACC = {};
      foreach i0A05 in _t0AAC {
        int _t0AAD = 1;
        int _t0AAE = 2;
        int _t0AAF = 3;
        int _t0AB0 = 0;
        int _t0AB1 = 2;
        int _t0AB2 = 3;
        int _t0AB3 = 0;
        int _t0AB4 = 1;
        int _t0AB5 = 3;
        int _t0AB6 = 0;
        int _t0AB7 = 1;
        int _t0AB8 = 2;
        int[12] _t0AB9 = {_t0AAD, _t0AAE, _t0AAF, _t0AB0, _t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8};
        int _t0ABA = 1;
        int _t0ABB = 3;
        int[2] _t0ABC = {_t0ABA, _t0ABB};
        int _t0ABD = 3;
        int _t0ABE = 3;
        int[2] _t0ABF = {_t0ABD, _t0ABE};
        int _t0AC0 = 9;
        int _t0AC1 = 3;
        int[2] _t0AC2 = {_t0AC0, _t0AC1};
        int _t0AC3 = 27;
        int _t0AC4 = 3;
        int[2] _t0AC5 = {_t0AC3, _t0AC4};
        int[2][4] _t0AC6 = {_t0ABC, _t0ABF, _t0AC2, _t0AC5};
        int[2] _t0AC7 = prim $sub01C0<int[2]; %4> (_t0AC6, faceIdx09CB);
        int _t0AC8 = 0;
        int _t0AC9 = prim $sub01C0<int; %2> (_t0AC7, _t0AC8);
        int _t0ACA = prim +0015 (_t0AC9, i0A05);
        int _t0ACB = prim $sub01C0<int; %12> (_t0AB9, _t0ACA);
        accum0ACC = prim @0010<int> (accum0ACC, _t0ACB);
      }
      int _t0ACD = 2;
      int _t0ACE = prim $dynsub01C2<int> (accum0ACC, _t0ACD);
      bool _t0ACF = prim ==0082 (_t0A9A, _t0ACE);
      bool _t0AD0 = prim $and01C4 (_t0A8E, _t0ACF);
      bool _t0AD1 = prim $and01C4 (_t0A4D, _t0AD0);
      if _t0AD1 {
        int _t0AD2 = 0;
        int[2] _t0AD3 = {cellInt0A0C, _t0AD2};
        return _t0AD3;
      }
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 0;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx09CB);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i0A05 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx09CB);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i0A05);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 0;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx09CB);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i0A05 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx09CB);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i0A05);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 1;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      int[4] _t0B56 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B57 = 0;
      int _t0B58 = prim $sub01C0<int; %4> (_t0B56, _t0B57);
      int[4] _t0B59 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5A = 2;
      int _t0B5B = prim $sub01C0<int; %4> (_t0B59, _t0B5A);
      int[4] _t0B5C = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5D = 3;
      int _t0B5E = prim $sub01C0<int; %4> (_t0B5C, _t0B5D);
      int[3] _t0B5F = {_t0B58, _t0B5B, _t0B5E};
      int _t0B60 = 2;
      int _t0B61 = prim $sub01C0<int; %3> (_t0B5F, _t0B60);
      int _t0B62 = 0;
      int _t0B63 = 1;
      int _t0B64 = 3;
      int[2] _t0B65 = {_t0B63, _t0B64};
      int _t0B66 = 3;
      int _t0B67 = 3;
      int[2] _t0B68 = {_t0B66, _t0B67};
      int _t0B69 = 9;
      int _t0B6A = 3;
      int[2] _t0B6B = {_t0B69, _t0B6A};
      int _t0B6C = 27;
      int _t0B6D = 3;
      int[2] _t0B6E = {_t0B6C, _t0B6D};
      int[2][4] _t0B6F = {_t0B65, _t0B68, _t0B6B, _t0B6E};
      int[2] _t0B70 = prim $sub01C0<int[2]; %4> (_t0B6F, faceIdx09CB);
      int _t0B71 = 1;
      int _t0B72 = prim $sub01C0<int; %2> (_t0B70, _t0B71);
      int[] _t0B73 = prim $range01C3 (_t0B62, _t0B72);
      int[] accum0B93 = {};
      foreach i0A05 in _t0B73 {
        int _t0B74 = 1;
        int _t0B75 = 2;
        int _t0B76 = 3;
        int _t0B77 = 0;
        int _t0B78 = 2;
        int _t0B79 = 3;
        int _t0B7A = 0;
        int _t0B7B = 1;
        int _t0B7C = 3;
        int _t0B7D = 0;
        int _t0B7E = 1;
        int _t0B7F = 2;
        int[12] _t0B80 = {_t0B74, _t0B75, _t0B76, _t0B77, _t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F};
        int _t0B81 = 1;
        int _t0B82 = 3;
        int[2] _t0B83 = {_t0B81, _t0B82};
        int _t0B84 = 3;
        int _t0B85 = 3;
        int[2] _t0B86 = {_t0B84, _t0B85};
        int _t0B87 = 9;
        int _t0B88 = 3;
        int[2] _t0B89 = {_t0B87, _t0B88};
        int _t0B8A = 27;
        int _t0B8B = 3;
        int[2] _t0B8C = {_t0B8A, _t0B8B};
        int[2][4] _t0B8D = {_t0B83, _t0B86, _t0B89, _t0B8C};
        int[2] _t0B8E = prim $sub01C0<int[2]; %4> (_t0B8D, faceIdx09CB);
        int _t0B8F = 0;
        int _t0B90 = prim $sub01C0<int; %2> (_t0B8E, _t0B8F);
        int _t0B91 = prim +0015 (_t0B90, i0A05);
        int _t0B92 = prim $sub01C0<int; %12> (_t0B80, _t0B91);
        accum0B93 = prim @0010<int> (accum0B93, _t0B92);
      }
      int _t0B94 = 2;
      int _t0B95 = prim $dynsub01C2<int> (accum0B93, _t0B94);
      bool _t0B96 = prim ==0082 (_t0B61, _t0B95);
      bool _t0B97 = prim $and01C4 (_t0B55, _t0B96);
      bool _t0B98 = prim $and01C4 (_t0B14, _t0B97);
      if _t0B98 {
        int _t0B99 = 1;
        int[2] _t0B9A = {cellInt0A0C, _t0B99};
        return _t0B9A;
      }
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 0;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx09CB);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i0A05 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx09CB);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i0A05);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 0;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx09CB);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i0A05 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx09CB);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i0A05);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 1;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      int[4] _t0C1D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C1E = 0;
      int _t0C1F = prim $sub01C0<int; %4> (_t0C1D, _t0C1E);
      int[4] _t0C20 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C21 = 1;
      int _t0C22 = prim $sub01C0<int; %4> (_t0C20, _t0C21);
      int[4] _t0C23 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C24 = 3;
      int _t0C25 = prim $sub01C0<int; %4> (_t0C23, _t0C24);
      int[3] _t0C26 = {_t0C1F, _t0C22, _t0C25};
      int _t0C27 = 2;
      int _t0C28 = prim $sub01C0<int; %3> (_t0C26, _t0C27);
      int _t0C29 = 0;
      int _t0C2A = 1;
      int _t0C2B = 3;
      int[2] _t0C2C = {_t0C2A, _t0C2B};
      int _t0C2D = 3;
      int _t0C2E = 3;
      int[2] _t0C2F = {_t0C2D, _t0C2E};
      int _t0C30 = 9;
      int _t0C31 = 3;
      int[2] _t0C32 = {_t0C30, _t0C31};
      int _t0C33 = 27;
      int _t0C34 = 3;
      int[2] _t0C35 = {_t0C33, _t0C34};
      int[2][4] _t0C36 = {_t0C2C, _t0C2F, _t0C32, _t0C35};
      int[2] _t0C37 = prim $sub01C0<int[2]; %4> (_t0C36, faceIdx09CB);
      int _t0C38 = 1;
      int _t0C39 = prim $sub01C0<int; %2> (_t0C37, _t0C38);
      int[] _t0C3A = prim $range01C3 (_t0C29, _t0C39);
      int[] accum0C5A = {};
      foreach i0A05 in _t0C3A {
        int _t0C3B = 1;
        int _t0C3C = 2;
        int _t0C3D = 3;
        int _t0C3E = 0;
        int _t0C3F = 2;
        int _t0C40 = 3;
        int _t0C41 = 0;
        int _t0C42 = 1;
        int _t0C43 = 3;
        int _t0C44 = 0;
        int _t0C45 = 1;
        int _t0C46 = 2;
        int[12] _t0C47 = {_t0C3B, _t0C3C, _t0C3D, _t0C3E, _t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46};
        int _t0C48 = 1;
        int _t0C49 = 3;
        int[2] _t0C4A = {_t0C48, _t0C49};
        int _t0C4B = 3;
        int _t0C4C = 3;
        int[2] _t0C4D = {_t0C4B, _t0C4C};
        int _t0C4E = 9;
        int _t0C4F = 3;
        int[2] _t0C50 = {_t0C4E, _t0C4F};
        int _t0C51 = 27;
        int _t0C52 = 3;
        int[2] _t0C53 = {_t0C51, _t0C52};
        int[2][4] _t0C54 = {_t0C4A, _t0C4D, _t0C50, _t0C53};
        int[2] _t0C55 = prim $sub01C0<int[2]; %4> (_t0C54, faceIdx09CB);
        int _t0C56 = 0;
        int _t0C57 = prim $sub01C0<int; %2> (_t0C55, _t0C56);
        int _t0C58 = prim +0015 (_t0C57, i0A05);
        int _t0C59 = prim $sub01C0<int; %12> (_t0C47, _t0C58);
        accum0C5A = prim @0010<int> (accum0C5A, _t0C59);
      }
      int _t0C5B = 2;
      int _t0C5C = prim $dynsub01C2<int> (accum0C5A, _t0C5B);
      bool _t0C5D = prim ==0082 (_t0C28, _t0C5C);
      bool _t0C5E = prim $and01C4 (_t0C1C, _t0C5D);
      bool _t0C5F = prim $and01C4 (_t0BDB, _t0C5E);
      if _t0C5F {
        int _t0C60 = 2;
        int[2] _t0C61 = {cellInt0A0C, _t0C60};
        return _t0C61;
      }
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 0;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx09CB);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i0A05 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx09CB);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i0A05);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 0;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx09CB);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i0A05 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx09CB);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i0A05);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 1;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      int[4] _t0CE4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE5 = 0;
      int _t0CE6 = prim $sub01C0<int; %4> (_t0CE4, _t0CE5);
      int[4] _t0CE7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE8 = 1;
      int _t0CE9 = prim $sub01C0<int; %4> (_t0CE7, _t0CE8);
      int[4] _t0CEA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CEB = 2;
      int _t0CEC = prim $sub01C0<int; %4> (_t0CEA, _t0CEB);
      int[3] _t0CED = {_t0CE6, _t0CE9, _t0CEC};
      int _t0CEE = 2;
      int _t0CEF = prim $sub01C0<int; %3> (_t0CED, _t0CEE);
      int _t0CF0 = 0;
      int _t0CF1 = 1;
      int _t0CF2 = 3;
      int[2] _t0CF3 = {_t0CF1, _t0CF2};
      int _t0CF4 = 3;
      int _t0CF5 = 3;
      int[2] _t0CF6 = {_t0CF4, _t0CF5};
      int _t0CF7 = 9;
      int _t0CF8 = 3;
      int[2] _t0CF9 = {_t0CF7, _t0CF8};
      int _t0CFA = 27;
      int _t0CFB = 3;
      int[2] _t0CFC = {_t0CFA, _t0CFB};
      int[2][4] _t0CFD = {_t0CF3, _t0CF6, _t0CF9, _t0CFC};
      int[2] _t0CFE = prim $sub01C0<int[2]; %4> (_t0CFD, faceIdx09CB);
      int _t0CFF = 1;
      int _t0D00 = prim $sub01C0<int; %2> (_t0CFE, _t0CFF);
      int[] _t0D01 = prim $range01C3 (_t0CF0, _t0D00);
      int[] accum0D21 = {};
      foreach i0A05 in _t0D01 {
        int _t0D02 = 1;
        int _t0D03 = 2;
        int _t0D04 = 3;
        int _t0D05 = 0;
        int _t0D06 = 2;
        int _t0D07 = 3;
        int _t0D08 = 0;
        int _t0D09 = 1;
        int _t0D0A = 3;
        int _t0D0B = 0;
        int _t0D0C = 1;
        int _t0D0D = 2;
        int[12] _t0D0E = {_t0D02, _t0D03, _t0D04, _t0D05, _t0D06, _t0D07, _t0D08, _t0D09, _t0D0A, _t0D0B, _t0D0C, _t0D0D};
        int _t0D0F = 1;
        int _t0D10 = 3;
        int[2] _t0D11 = {_t0D0F, _t0D10};
        int _t0D12 = 3;
        int _t0D13 = 3;
        int[2] _t0D14 = {_t0D12, _t0D13};
        int _t0D15 = 9;
        int _t0D16 = 3;
        int[2] _t0D17 = {_t0D15, _t0D16};
        int _t0D18 = 27;
        int _t0D19 = 3;
        int[2] _t0D1A = {_t0D18, _t0D19};
        int[2][4] _t0D1B = {_t0D11, _t0D14, _t0D17, _t0D1A};
        int[2] _t0D1C = prim $sub01C0<int[2]; %4> (_t0D1B, faceIdx09CB);
        int _t0D1D = 0;
        int _t0D1E = prim $sub01C0<int; %2> (_t0D1C, _t0D1D);
        int _t0D1F = prim +0015 (_t0D1E, i0A05);
        int _t0D20 = prim $sub01C0<int; %12> (_t0D0E, _t0D1F);
        accum0D21 = prim @0010<int> (accum0D21, _t0D20);
      }
      int _t0D22 = 2;
      int _t0D23 = prim $dynsub01C2<int> (accum0D21, _t0D22);
      bool _t0D24 = prim ==0082 (_t0CEF, _t0D23);
      bool _t0D25 = prim $and01C4 (_t0CE3, _t0D24);
      bool _t0D26 = prim $and01C4 (_t0CA2, _t0D25);
      if _t0D26 {
        int _t0D27 = 3;
        int[2] _t0D28 = {cellInt0A0C, _t0D27};
        return _t0D28;
      }
    }
  }
  int _t0D29 = -1;
  int _t0D2A = -1;
  int[2] _t0D2B = {_t0D29, _t0D2A};
  return _t0D2B;
}
function vec2#0 _enter0D2C (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0D2F = +inf;
  int face0D30 = -1;
  real _t0D31 = 0.57735026919e0;
  real _t0D32 = 0.57735026919e0;
  real _t0D33 = -0.57735026919e0;
  real _t0D34 = 0.57735026919e0;
  vec3 _t0D35 = [_t0D32, _t0D33, _t0D34];
  real _t0D36 = prim •00CE<$[3]; $[3]; $[]> (_t0D35, refPos0D2D);
  real _t0D37 = prim -0026<$[]> (_t0D31, _t0D36);
  real _t0D38 = 0.57735026919e0;
  real _t0D39 = -0.57735026919e0;
  real _t0D3A = 0.57735026919e0;
  vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
  real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, dPos0D2E);
  real _t0D3D = prim /0055 (_t0D37, _t0D3C);
  real _t0D3E = -0.e0;
  bool _t0D3F = prim >0080 (_t0D3D, _t0D3E);
  real _t0D40 = 0.57735026919e0;
  real _t0D41 = 0.57735026919e0;
  real _t0D42 = -0.57735026919e0;
  real _t0D43 = 0.57735026919e0;
  vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
  real _t0D45 = prim •00CE<$[3]; $[3]; $[]> (_t0D44, refPos0D2D);
  real _t0D46 = prim -0026<$[]> (_t0D40, _t0D45);
  real _t0D47 = 0.57735026919e0;
  real _t0D48 = -0.57735026919e0;
  real _t0D49 = 0.57735026919e0;
  vec3 _t0D4A = [_t0D47, _t0D48, _t0D49];
  real _t0D4B = prim •00CE<$[3]; $[3]; $[]> (_t0D4A, dPos0D2E);
  real _t0D4C = prim /0055 (_t0D46, _t0D4B);
  bool _t0D4D = prim >0080 (time0D2F, _t0D4C);
  bool _t0D4E = prim $and01C4 (_t0D3F, _t0D4D);
  if _t0D4E {
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e-4;
    real _t0D51 = prim +0017<$[]> (_t0D4F, _t0D50);
    real _t0D52 = 0.1e1;
    real _t0D53 = 0.1e1;
    real _t0D54 = 0.1e1;
    vec3 _t0D55 = [_t0D52, _t0D53, _t0D54];
    real _t0D56 = 0.57735026919e0;
    real _t0D57 = 0.57735026919e0;
    real _t0D58 = -0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    vec3 _t0D5A = [_t0D57, _t0D58, _t0D59];
    real _t0D5B = prim •00CE<$[3]; $[3]; $[]> (_t0D5A, refPos0D2D);
    real _t0D5C = prim -0026<$[]> (_t0D56, _t0D5B);
    real _t0D5D = 0.57735026919e0;
    real _t0D5E = -0.57735026919e0;
    real _t0D5F = 0.57735026919e0;
    vec3 _t0D60 = [_t0D5D, _t0D5E, _t0D5F];
    real _t0D61 = prim •00CE<$[3]; $[3]; $[]> (_t0D60, dPos0D2E);
    real _t0D62 = prim /0055 (_t0D5C, _t0D61);
    vec3 _t0D63 = prim *0038<$[3]> (dPos0D2E, _t0D62);
    vec3 _t0D64 = prim +0017<$[3]> (_t0D63, refPos0D2D);
    real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D55, _t0D64);
    bool _t0D66 = prim >0080 (_t0D51, _t0D65);
    real _t0D67 = 0.1e-4;
    real _t0D68 = 0.1e-4;
    real _t0D69 = 0.1e-4;
    vec3 _t0D6A = [_t0D67, _t0D68, _t0D69];
    real _t0D6B = 0.57735026919e0;
    real _t0D6C = 0.57735026919e0;
    real _t0D6D = -0.57735026919e0;
    real _t0D6E = 0.57735026919e0;
    vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
    real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, refPos0D2D);
    real _t0D71 = prim -0026<$[]> (_t0D6B, _t0D70);
    real _t0D72 = 0.57735026919e0;
    real _t0D73 = -0.57735026919e0;
    real _t0D74 = 0.57735026919e0;
    vec3 _t0D75 = [_t0D72, _t0D73, _t0D74];
    real _t0D76 = prim •00CE<$[3]; $[3]; $[]> (_t0D75, dPos0D2E);
    real _t0D77 = prim /0055 (_t0D71, _t0D76);
    vec3 _t0D78 = prim *0038<$[3]> (dPos0D2E, _t0D77);
    vec3 _t0D79 = prim +0017<$[3]> (_t0D78, refPos0D2D);
    vec3 _t0D7A = prim +0017<$[3]> (_t0D6A, _t0D79);
    real _t0D7B = _t0D7A[0];
    real _t0D7C = -0.e0;
    bool _t0D7D = prim >0080 (_t0D7B, _t0D7C);
    real _t0D7E = 0.1e-4;
    real _t0D7F = 0.1e-4;
    real _t0D80 = 0.1e-4;
    vec3 _t0D81 = [_t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.57735026919e0;
    real _t0D83 = 0.57735026919e0;
    real _t0D84 = -0.57735026919e0;
    real _t0D85 = 0.57735026919e0;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = prim •00CE<$[3]; $[3]; $[]> (_t0D86, refPos0D2D);
    real _t0D88 = prim -0026<$[]> (_t0D82, _t0D87);
    real _t0D89 = 0.57735026919e0;
    real _t0D8A = -0.57735026919e0;
    real _t0D8B = 0.57735026919e0;
    vec3 _t0D8C = [_t0D89, _t0D8A, _t0D8B];
    real _t0D8D = prim •00CE<$[3]; $[3]; $[]> (_t0D8C, dPos0D2E);
    real _t0D8E = prim /0055 (_t0D88, _t0D8D);
    vec3 _t0D8F = prim *0038<$[3]> (dPos0D2E, _t0D8E);
    vec3 _t0D90 = prim +0017<$[3]> (_t0D8F, refPos0D2D);
    vec3 _t0D91 = prim +0017<$[3]> (_t0D81, _t0D90);
    real _t0D92 = _t0D91[1];
    real _t0D93 = -0.e0;
    bool _t0D94 = prim >0080 (_t0D92, _t0D93);
    real _t0D95 = 0.1e-4;
    real _t0D96 = 0.1e-4;
    real _t0D97 = 0.1e-4;
    vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
    real _t0D99 = 0.57735026919e0;
    real _t0D9A = 0.57735026919e0;
    real _t0D9B = -0.57735026919e0;
    real _t0D9C = 0.57735026919e0;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = prim •00CE<$[3]; $[3]; $[]> (_t0D9D, refPos0D2D);
    real _t0D9F = prim -0026<$[]> (_t0D99, _t0D9E);
    real _t0DA0 = 0.57735026919e0;
    real _t0DA1 = -0.57735026919e0;
    real _t0DA2 = 0.57735026919e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, dPos0D2E);
    real _t0DA5 = prim /0055 (_t0D9F, _t0DA4);
    vec3 _t0DA6 = prim *0038<$[3]> (dPos0D2E, _t0DA5);
    vec3 _t0DA7 = prim +0017<$[3]> (_t0DA6, refPos0D2D);
    vec3 _t0DA8 = prim +0017<$[3]> (_t0D98, _t0DA7);
    real _t0DA9 = _t0DA8[2];
    real _t0DAA = -0.e0;
    bool _t0DAB = prim >0080 (_t0DA9, _t0DAA);
    bool _t0DAC = prim $and01C4 (_t0D94, _t0DAB);
    bool _t0DAD = prim $and01C4 (_t0D7D, _t0DAC);
    bool _t0DAE = prim $and01C4 (_t0D66, _t0DAD);
    if _t0DAE {
      real _t0DAF = 0.57735026919e0;
      real _t0DB0 = 0.57735026919e0;
      real _t0DB1 = -0.57735026919e0;
      real _t0DB2 = 0.57735026919e0;
      vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
      real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, refPos0D2D);
      real _t0DB5 = prim -0026<$[]> (_t0DAF, _t0DB4);
      real _t0DB6 = 0.57735026919e0;
      real _t0DB7 = -0.57735026919e0;
      real _t0DB8 = 0.57735026919e0;
      vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
      real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, dPos0D2E);
      time0D2F = prim /0055 (_t0DB5, _t0DBA);
      face0D30 = 0;
    }
  }
  real _t0DBB = 0.e0;
  real _t0DBC = 0.1e1;
  real _t0DBD = 0.e0;
  real _t0DBE = 0.e0;
  vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
  real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, refPos0D2D);
  real _t0DC1 = prim -0026<$[]> (_t0DBB, _t0DC0);
  real _t0DC2 = 0.1e1;
  real _t0DC3 = 0.e0;
  real _t0DC4 = 0.e0;
  vec3 _t0DC5 = [_t0DC2, _t0DC3, _t0DC4];
  real _t0DC6 = prim •00CE<$[3]; $[3]; $[]> (_t0DC5, dPos0D2E);
  real _t0DC7 = prim /0055 (_t0DC1, _t0DC6);
  real _t0DC8 = -0.e0;
  bool _t0DC9 = prim >0080 (_t0DC7, _t0DC8);
  real _t0DCA = 0.e0;
  real _t0DCB = 0.1e1;
  real _t0DCC = 0.e0;
  real _t0DCD = 0.e0;
  vec3 _t0DCE = [_t0DCB, _t0DCC, _t0DCD];
  real _t0DCF = prim •00CE<$[3]; $[3]; $[]> (_t0DCE, refPos0D2D);
  real _t0DD0 = prim -0026<$[]> (_t0DCA, _t0DCF);
  real _t0DD1 = 0.1e1;
  real _t0DD2 = 0.e0;
  real _t0DD3 = 0.e0;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = prim •00CE<$[3]; $[3]; $[]> (_t0DD4, dPos0D2E);
  real _t0DD6 = prim /0055 (_t0DD0, _t0DD5);
  bool _t0DD7 = prim >0080 (time0D2F, _t0DD6);
  bool _t0DD8 = prim $and01C4 (_t0DC9, _t0DD7);
  if _t0DD8 {
    real _t0DD9 = 0.1e1;
    real _t0DDA = 0.1e-4;
    real _t0DDB = prim +0017<$[]> (_t0DD9, _t0DDA);
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.1e1;
    real _t0DDE = 0.1e1;
    vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.e0;
    vec3 _t0DE4 = [_t0DE1, _t0DE2, _t0DE3];
    real _t0DE5 = prim •00CE<$[3]; $[3]; $[]> (_t0DE4, refPos0D2D);
    real _t0DE6 = prim -0026<$[]> (_t0DE0, _t0DE5);
    real _t0DE7 = 0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    vec3 _t0DEA = [_t0DE7, _t0DE8, _t0DE9];
    real _t0DEB = prim •00CE<$[3]; $[3]; $[]> (_t0DEA, dPos0D2E);
    real _t0DEC = prim /0055 (_t0DE6, _t0DEB);
    vec3 _t0DED = prim *0038<$[3]> (dPos0D2E, _t0DEC);
    vec3 _t0DEE = prim +0017<$[3]> (_t0DED, refPos0D2D);
    real _t0DEF = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, _t0DEE);
    bool _t0DF0 = prim >0080 (_t0DDB, _t0DEF);
    real _t0DF1 = 0.1e-4;
    real _t0DF2 = 0.1e-4;
    real _t0DF3 = 0.1e-4;
    vec3 _t0DF4 = [_t0DF1, _t0DF2, _t0DF3];
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.e0;
    vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
    real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0D2D);
    real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
    real _t0DFC = 0.1e1;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.e0;
    vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
    real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0D2E);
    real _t0E01 = prim /0055 (_t0DFB, _t0E00);
    vec3 _t0E02 = prim *0038<$[3]> (dPos0D2E, _t0E01);
    vec3 _t0E03 = prim +0017<$[3]> (_t0E02, refPos0D2D);
    vec3 _t0E04 = prim +0017<$[3]> (_t0DF4, _t0E03);
    real _t0E05 = _t0E04[0];
    real _t0E06 = -0.e0;
    bool _t0E07 = prim >0080 (_t0E05, _t0E06);
    real _t0E08 = 0.1e-4;
    real _t0E09 = 0.1e-4;
    real _t0E0A = 0.1e-4;
    vec3 _t0E0B = [_t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0D2D);
    real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
    real _t0E13 = 0.1e1;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, dPos0D2E);
    real _t0E18 = prim /0055 (_t0E12, _t0E17);
    vec3 _t0E19 = prim *0038<$[3]> (dPos0D2E, _t0E18);
    vec3 _t0E1A = prim +0017<$[3]> (_t0E19, refPos0D2D);
    vec3 _t0E1B = prim +0017<$[3]> (_t0E0B, _t0E1A);
    real _t0E1C = _t0E1B[1];
    real _t0E1D = -0.e0;
    bool _t0E1E = prim >0080 (_t0E1C, _t0E1D);
    real _t0E1F = 0.1e-4;
    real _t0E20 = 0.1e-4;
    real _t0E21 = 0.1e-4;
    vec3 _t0E22 = [_t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.e0;
    vec3 _t0E27 = [_t0E24, _t0E25, _t0E26];
    real _t0E28 = prim •00CE<$[3]; $[3]; $[]> (_t0E27, refPos0D2D);
    real _t0E29 = prim -0026<$[]> (_t0E23, _t0E28);
    real _t0E2A = 0.1e1;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, dPos0D2E);
    real _t0E2F = prim /0055 (_t0E29, _t0E2E);
    vec3 _t0E30 = prim *0038<$[3]> (dPos0D2E, _t0E2F);
    vec3 _t0E31 = prim +0017<$[3]> (_t0E30, refPos0D2D);
    vec3 _t0E32 = prim +0017<$[3]> (_t0E22, _t0E31);
    real _t0E33 = _t0E32[2];
    real _t0E34 = -0.e0;
    bool _t0E35 = prim >0080 (_t0E33, _t0E34);
    bool _t0E36 = prim $and01C4 (_t0E1E, _t0E35);
    bool _t0E37 = prim $and01C4 (_t0E07, _t0E36);
    bool _t0E38 = prim $and01C4 (_t0DF0, _t0E37);
    if _t0E38 {
      real _t0E39 = 0.e0;
      real _t0E3A = 0.1e1;
      real _t0E3B = 0.e0;
      real _t0E3C = 0.e0;
      vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
      real _t0E3E = prim •00CE<$[3]; $[3]; $[]> (_t0E3D, refPos0D2D);
      real _t0E3F = prim -0026<$[]> (_t0E39, _t0E3E);
      real _t0E40 = 0.1e1;
      real _t0E41 = 0.e0;
      real _t0E42 = 0.e0;
      vec3 _t0E43 = [_t0E40, _t0E41, _t0E42];
      real _t0E44 = prim •00CE<$[3]; $[3]; $[]> (_t0E43, dPos0D2E);
      time0D2F = prim /0055 (_t0E3F, _t0E44);
      face0D30 = 1;
    }
  }
  real _t0E45 = 0.e0;
  real _t0E46 = 0.e0;
  real _t0E47 = 0.1e1;
  real _t0E48 = 0.e0;
  vec3 _t0E49 = [_t0E46, _t0E47, _t0E48];
  real _t0E4A = prim •00CE<$[3]; $[3]; $[]> (_t0E49, refPos0D2D);
  real _t0E4B = prim -0026<$[]> (_t0E45, _t0E4A);
  real _t0E4C = 0.e0;
  real _t0E4D = 0.1e1;
  real _t0E4E = 0.e0;
  vec3 _t0E4F = [_t0E4C, _t0E4D, _t0E4E];
  real _t0E50 = prim •00CE<$[3]; $[3]; $[]> (_t0E4F, dPos0D2E);
  real _t0E51 = prim /0055 (_t0E4B, _t0E50);
  real _t0E52 = -0.e0;
  bool _t0E53 = prim >0080 (_t0E51, _t0E52);
  real _t0E54 = 0.e0;
  real _t0E55 = 0.e0;
  real _t0E56 = 0.1e1;
  real _t0E57 = 0.e0;
  vec3 _t0E58 = [_t0E55, _t0E56, _t0E57];
  real _t0E59 = prim •00CE<$[3]; $[3]; $[]> (_t0E58, refPos0D2D);
  real _t0E5A = prim -0026<$[]> (_t0E54, _t0E59);
  real _t0E5B = 0.e0;
  real _t0E5C = 0.1e1;
  real _t0E5D = 0.e0;
  vec3 _t0E5E = [_t0E5B, _t0E5C, _t0E5D];
  real _t0E5F = prim •00CE<$[3]; $[3]; $[]> (_t0E5E, dPos0D2E);
  real _t0E60 = prim /0055 (_t0E5A, _t0E5F);
  bool _t0E61 = prim >0080 (time0D2F, _t0E60);
  bool _t0E62 = prim $and01C4 (_t0E53, _t0E61);
  if _t0E62 {
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.1e-4;
    real _t0E65 = prim +0017<$[]> (_t0E63, _t0E64);
    real _t0E66 = 0.1e1;
    real _t0E67 = 0.1e1;
    real _t0E68 = 0.1e1;
    vec3 _t0E69 = [_t0E66, _t0E67, _t0E68];
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.e0;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0D2D);
    real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
    real _t0E71 = 0.e0;
    real _t0E72 = 0.1e1;
    real _t0E73 = 0.e0;
    vec3 _t0E74 = [_t0E71, _t0E72, _t0E73];
    real _t0E75 = prim •00CE<$[3]; $[3]; $[]> (_t0E74, dPos0D2E);
    real _t0E76 = prim /0055 (_t0E70, _t0E75);
    vec3 _t0E77 = prim *0038<$[3]> (dPos0D2E, _t0E76);
    vec3 _t0E78 = prim +0017<$[3]> (_t0E77, refPos0D2D);
    real _t0E79 = prim •00CE<$[3]; $[3]; $[]> (_t0E69, _t0E78);
    bool _t0E7A = prim >0080 (_t0E65, _t0E79);
    real _t0E7B = 0.1e-4;
    real _t0E7C = 0.1e-4;
    real _t0E7D = 0.1e-4;
    vec3 _t0E7E = [_t0E7B, _t0E7C, _t0E7D];
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    real _t0E81 = 0.1e1;
    real _t0E82 = 0.e0;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = prim •00CE<$[3]; $[3]; $[]> (_t0E83, refPos0D2D);
    real _t0E85 = prim -0026<$[]> (_t0E7F, _t0E84);
    real _t0E86 = 0.e0;
    real _t0E87 = 0.1e1;
    real _t0E88 = 0.e0;
    vec3 _t0E89 = [_t0E86, _t0E87, _t0E88];
    real _t0E8A = prim •00CE<$[3]; $[3]; $[]> (_t0E89, dPos0D2E);
    real _t0E8B = prim /0055 (_t0E85, _t0E8A);
    vec3 _t0E8C = prim *0038<$[3]> (dPos0D2E, _t0E8B);
    vec3 _t0E8D = prim +0017<$[3]> (_t0E8C, refPos0D2D);
    vec3 _t0E8E = prim +0017<$[3]> (_t0E7E, _t0E8D);
    real _t0E8F = _t0E8E[0];
    real _t0E90 = -0.e0;
    bool _t0E91 = prim >0080 (_t0E8F, _t0E90);
    real _t0E92 = 0.1e-4;
    real _t0E93 = 0.1e-4;
    real _t0E94 = 0.1e-4;
    vec3 _t0E95 = [_t0E92, _t0E93, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = 0.e0;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = prim •00CE<$[3]; $[3]; $[]> (_t0E9A, refPos0D2D);
    real _t0E9C = prim -0026<$[]> (_t0E96, _t0E9B);
    real _t0E9D = 0.e0;
    real _t0E9E = 0.1e1;
    real _t0E9F = 0.e0;
    vec3 _t0EA0 = [_t0E9D, _t0E9E, _t0E9F];
    real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0EA0, dPos0D2E);
    real _t0EA2 = prim /0055 (_t0E9C, _t0EA1);
    vec3 _t0EA3 = prim *0038<$[3]> (dPos0D2E, _t0EA2);
    vec3 _t0EA4 = prim +0017<$[3]> (_t0EA3, refPos0D2D);
    vec3 _t0EA5 = prim +0017<$[3]> (_t0E95, _t0EA4);
    real _t0EA6 = _t0EA5[1];
    real _t0EA7 = -0.e0;
    bool _t0EA8 = prim >0080 (_t0EA6, _t0EA7);
    real _t0EA9 = 0.1e-4;
    real _t0EAA = 0.1e-4;
    real _t0EAB = 0.1e-4;
    vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.e0;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB1, refPos0D2D);
    real _t0EB3 = prim -0026<$[]> (_t0EAD, _t0EB2);
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, dPos0D2E);
    real _t0EB9 = prim /0055 (_t0EB3, _t0EB8);
    vec3 _t0EBA = prim *0038<$[3]> (dPos0D2E, _t0EB9);
    vec3 _t0EBB = prim +0017<$[3]> (_t0EBA, refPos0D2D);
    vec3 _t0EBC = prim +0017<$[3]> (_t0EAC, _t0EBB);
    real _t0EBD = _t0EBC[2];
    real _t0EBE = -0.e0;
    bool _t0EBF = prim >0080 (_t0EBD, _t0EBE);
    bool _t0EC0 = prim $and01C4 (_t0EA8, _t0EBF);
    bool _t0EC1 = prim $and01C4 (_t0E91, _t0EC0);
    bool _t0EC2 = prim $and01C4 (_t0E7A, _t0EC1);
    if _t0EC2 {
      real _t0EC3 = 0.e0;
      real _t0EC4 = 0.e0;
      real _t0EC5 = 0.1e1;
      real _t0EC6 = 0.e0;
      vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
      real _t0EC8 = prim •00CE<$[3]; $[3]; $[]> (_t0EC7, refPos0D2D);
      real _t0EC9 = prim -0026<$[]> (_t0EC3, _t0EC8);
      real _t0ECA = 0.e0;
      real _t0ECB = 0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, dPos0D2E);
      time0D2F = prim /0055 (_t0EC9, _t0ECE);
      face0D30 = 2;
    }
  }
  real _t0ECF = 0.e0;
  real _t0ED0 = 0.e0;
  real _t0ED1 = 0.e0;
  real _t0ED2 = 0.1e1;
  vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
  real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, refPos0D2D);
  real _t0ED5 = prim -0026<$[]> (_t0ECF, _t0ED4);
  real _t0ED6 = 0.e0;
  real _t0ED7 = 0.e0;
  real _t0ED8 = 0.1e1;
  vec3 _t0ED9 = [_t0ED6, _t0ED7, _t0ED8];
  real _t0EDA = prim •00CE<$[3]; $[3]; $[]> (_t0ED9, dPos0D2E);
  real _t0EDB = prim /0055 (_t0ED5, _t0EDA);
  real _t0EDC = -0.e0;
  bool _t0EDD = prim >0080 (_t0EDB, _t0EDC);
  real _t0EDE = 0.e0;
  real _t0EDF = 0.e0;
  real _t0EE0 = 0.e0;
  real _t0EE1 = 0.1e1;
  vec3 _t0EE2 = [_t0EDF, _t0EE0, _t0EE1];
  real _t0EE3 = prim •00CE<$[3]; $[3]; $[]> (_t0EE2, refPos0D2D);
  real _t0EE4 = prim -0026<$[]> (_t0EDE, _t0EE3);
  real _t0EE5 = 0.e0;
  real _t0EE6 = 0.e0;
  real _t0EE7 = 0.1e1;
  vec3 _t0EE8 = [_t0EE5, _t0EE6, _t0EE7];
  real _t0EE9 = prim •00CE<$[3]; $[3]; $[]> (_t0EE8, dPos0D2E);
  real _t0EEA = prim /0055 (_t0EE4, _t0EE9);
  bool _t0EEB = prim >0080 (time0D2F, _t0EEA);
  bool _t0EEC = prim $and01C4 (_t0EDD, _t0EEB);
  if _t0EEC {
    real _t0EED = 0.1e1;
    real _t0EEE = 0.1e-4;
    real _t0EEF = prim +0017<$[]> (_t0EED, _t0EEE);
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.1e1;
    vec3 _t0EF3 = [_t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec3 _t0EF8 = [_t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = prim •00CE<$[3]; $[3]; $[]> (_t0EF8, refPos0D2D);
    real _t0EFA = prim -0026<$[]> (_t0EF4, _t0EF9);
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    vec3 _t0EFE = [_t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = prim •00CE<$[3]; $[3]; $[]> (_t0EFE, dPos0D2E);
    real _t0F00 = prim /0055 (_t0EFA, _t0EFF);
    vec3 _t0F01 = prim *0038<$[3]> (dPos0D2E, _t0F00);
    vec3 _t0F02 = prim +0017<$[3]> (_t0F01, refPos0D2D);
    real _t0F03 = prim •00CE<$[3]; $[3]; $[]> (_t0EF3, _t0F02);
    bool _t0F04 = prim >0080 (_t0EEF, _t0F03);
    real _t0F05 = 0.1e-4;
    real _t0F06 = 0.1e-4;
    real _t0F07 = 0.1e-4;
    vec3 _t0F08 = [_t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
    real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0D2D);
    real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
    real _t0F10 = 0.e0;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.1e1;
    vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
    real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0D2E);
    real _t0F15 = prim /0055 (_t0F0F, _t0F14);
    vec3 _t0F16 = prim *0038<$[3]> (dPos0D2E, _t0F15);
    vec3 _t0F17 = prim +0017<$[3]> (_t0F16, refPos0D2D);
    vec3 _t0F18 = prim +0017<$[3]> (_t0F08, _t0F17);
    real _t0F19 = _t0F18[0];
    real _t0F1A = -0.e0;
    bool _t0F1B = prim >0080 (_t0F19, _t0F1A);
    real _t0F1C = 0.1e-4;
    real _t0F1D = 0.1e-4;
    real _t0F1E = 0.1e-4;
    vec3 _t0F1F = [_t0F1C, _t0F1D, _t0F1E];
    real _t0F20 = 0.e0;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    real _t0F23 = 0.1e1;
    vec3 _t0F24 = [_t0F21, _t0F22, _t0F23];
    real _t0F25 = prim •00CE<$[3]; $[3]; $[]> (_t0F24, refPos0D2D);
    real _t0F26 = prim -0026<$[]> (_t0F20, _t0F25);
    real _t0F27 = 0.e0;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.1e1;
    vec3 _t0F2A = [_t0F27, _t0F28, _t0F29];
    real _t0F2B = prim •00CE<$[3]; $[3]; $[]> (_t0F2A, dPos0D2E);
    real _t0F2C = prim /0055 (_t0F26, _t0F2B);
    vec3 _t0F2D = prim *0038<$[3]> (dPos0D2E, _t0F2C);
    vec3 _t0F2E = prim +0017<$[3]> (_t0F2D, refPos0D2D);
    vec3 _t0F2F = prim +0017<$[3]> (_t0F1F, _t0F2E);
    real _t0F30 = _t0F2F[1];
    real _t0F31 = -0.e0;
    bool _t0F32 = prim >0080 (_t0F30, _t0F31);
    real _t0F33 = 0.1e-4;
    real _t0F34 = 0.1e-4;
    real _t0F35 = 0.1e-4;
    vec3 _t0F36 = [_t0F33, _t0F34, _t0F35];
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.e0;
    real _t0F3A = 0.1e1;
    vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
    real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, refPos0D2D);
    real _t0F3D = prim -0026<$[]> (_t0F37, _t0F3C);
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.1e1;
    vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
    real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, dPos0D2E);
    real _t0F43 = prim /0055 (_t0F3D, _t0F42);
    vec3 _t0F44 = prim *0038<$[3]> (dPos0D2E, _t0F43);
    vec3 _t0F45 = prim +0017<$[3]> (_t0F44, refPos0D2D);
    vec3 _t0F46 = prim +0017<$[3]> (_t0F36, _t0F45);
    real _t0F47 = _t0F46[2];
    real _t0F48 = -0.e0;
    bool _t0F49 = prim >0080 (_t0F47, _t0F48);
    bool _t0F4A = prim $and01C4 (_t0F32, _t0F49);
    bool _t0F4B = prim $and01C4 (_t0F1B, _t0F4A);
    bool _t0F4C = prim $and01C4 (_t0F04, _t0F4B);
    if _t0F4C {
      real _t0F4D = 0.e0;
      real _t0F4E = 0.e0;
      real _t0F4F = 0.e0;
      real _t0F50 = 0.1e1;
      vec3 _t0F51 = [_t0F4E, _t0F4F, _t0F50];
      real _t0F52 = prim •00CE<$[3]; $[3]; $[]> (_t0F51, refPos0D2D);
      real _t0F53 = prim -0026<$[]> (_t0F4D, _t0F52);
      real _t0F54 = 0.e0;
      real _t0F55 = 0.e0;
      real _t0F56 = 0.1e1;
      vec3 _t0F57 = [_t0F54, _t0F55, _t0F56];
      real _t0F58 = prim •00CE<$[3]; $[3]; $[]> (_t0F57, dPos0D2E);
      time0D2F = prim /0055 (_t0F53, _t0F58);
      face0D30 = 3;
    }
  }
  int _t0F59 = -1;
  bool _t0F5A = prim !=0086 (face0D30, _t0F59);
  if _t0F5A {
    real _t0F5B = (real)face0D30;
    vec2 _t0F5C = [time0D2F, _t0F5B];
    return _t0F5C;
  } else {
    real _t0F5D = -0.1e1;
    real _t0F5E = -0.1e1;
    vec2 _t0F5F = [_t0F5D, _t0F5E];
    return _t0F5F;
  }
}
function vec2#0 _exit0F60 (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0F61 = +inf;
  int face0F62 = -1;
  real _t0F63 = 0.57735026919e0;
  real _t0F64 = 0.57735026919e0;
  real _t0F65 = -0.57735026919e0;
  real _t0F66 = 0.57735026919e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, refPos0D2D);
  real _t0F69 = prim -0026<$[]> (_t0F63, _t0F68);
  real _t0F6A = 0.57735026919e0;
  real _t0F6B = -0.57735026919e0;
  real _t0F6C = 0.57735026919e0;
  vec3 _t0F6D = [_t0F6A, _t0F6B, _t0F6C];
  real _t0F6E = prim •00CE<$[3]; $[3]; $[]> (_t0F6D, dPos0D2E);
  real _t0F6F = prim /0055 (_t0F69, _t0F6E);
  real _t0F70 = -0.e0;
  bool _t0F71 = prim >0080 (_t0F6F, _t0F70);
  real _t0F72 = 0.57735026919e0;
  real _t0F73 = 0.57735026919e0;
  real _t0F74 = -0.57735026919e0;
  real _t0F75 = 0.57735026919e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, refPos0D2D);
  real _t0F78 = prim -0026<$[]> (_t0F72, _t0F77);
  real _t0F79 = 0.57735026919e0;
  real _t0F7A = -0.57735026919e0;
  real _t0F7B = 0.57735026919e0;
  vec3 _t0F7C = [_t0F79, _t0F7A, _t0F7B];
  real _t0F7D = prim •00CE<$[3]; $[3]; $[]> (_t0F7C, dPos0D2E);
  real _t0F7E = prim /0055 (_t0F78, _t0F7D);
  bool _t0F7F = prim >0080 (time0F61, _t0F7E);
  bool _t0F80 = prim $and01C4 (_t0F71, _t0F7F);
  if _t0F80 {
    real _t0F81 = 0.57735026919e0;
    real _t0F82 = 0.57735026919e0;
    real _t0F83 = -0.57735026919e0;
    real _t0F84 = 0.57735026919e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, refPos0D2D);
    real _t0F87 = prim -0026<$[]> (_t0F81, _t0F86);
    real _t0F88 = 0.57735026919e0;
    real _t0F89 = -0.57735026919e0;
    real _t0F8A = 0.57735026919e0;
    vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
    real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, dPos0D2E);
    time0F61 = prim /0055 (_t0F87, _t0F8C);
    face0F62 = 0;
  }
  real _t0F8D = 0.e0;
  real _t0F8E = 0.1e1;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, refPos0D2D);
  real _t0F93 = prim -0026<$[]> (_t0F8D, _t0F92);
  real _t0F94 = 0.1e1;
  real _t0F95 = 0.e0;
  real _t0F96 = 0.e0;
  vec3 _t0F97 = [_t0F94, _t0F95, _t0F96];
  real _t0F98 = prim •00CE<$[3]; $[3]; $[]> (_t0F97, dPos0D2E);
  real _t0F99 = prim /0055 (_t0F93, _t0F98);
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.e0;
  real _t0F9D = 0.1e1;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.e0;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, refPos0D2D);
  real _t0FA2 = prim -0026<$[]> (_t0F9C, _t0FA1);
  real _t0FA3 = 0.1e1;
  real _t0FA4 = 0.e0;
  real _t0FA5 = 0.e0;
  vec3 _t0FA6 = [_t0FA3, _t0FA4, _t0FA5];
  real _t0FA7 = prim •00CE<$[3]; $[3]; $[]> (_t0FA6, dPos0D2E);
  real _t0FA8 = prim /0055 (_t0FA2, _t0FA7);
  bool _t0FA9 = prim >0080 (time0F61, _t0FA8);
  bool _t0FAA = prim $and01C4 (_t0F9B, _t0FA9);
  if _t0FAA {
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, refPos0D2D);
    real _t0FB1 = prim -0026<$[]> (_t0FAB, _t0FB0);
    real _t0FB2 = 0.1e1;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    vec3 _t0FB5 = [_t0FB2, _t0FB3, _t0FB4];
    real _t0FB6 = prim •00CE<$[3]; $[3]; $[]> (_t0FB5, dPos0D2E);
    time0F61 = prim /0055 (_t0FB1, _t0FB6);
    face0F62 = 1;
  }
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.1e1;
  real _t0FBA = 0.e0;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0D2D);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.1e1;
  real _t0FC0 = 0.e0;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0D2E);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  real _t0FC4 = -0.e0;
  bool _t0FC5 = prim >0080 (_t0FC3, _t0FC4);
  real _t0FC6 = 0.e0;
  real _t0FC7 = 0.e0;
  real _t0FC8 = 0.1e1;
  real _t0FC9 = 0.e0;
  vec3 _t0FCA = [_t0FC7, _t0FC8, _t0FC9];
  real _t0FCB = prim •00CE<$[3]; $[3]; $[]> (_t0FCA, refPos0D2D);
  real _t0FCC = prim -0026<$[]> (_t0FC6, _t0FCB);
  real _t0FCD = 0.e0;
  real _t0FCE = 0.1e1;
  real _t0FCF = 0.e0;
  vec3 _t0FD0 = [_t0FCD, _t0FCE, _t0FCF];
  real _t0FD1 = prim •00CE<$[3]; $[3]; $[]> (_t0FD0, dPos0D2E);
  real _t0FD2 = prim /0055 (_t0FCC, _t0FD1);
  bool _t0FD3 = prim >0080 (time0F61, _t0FD2);
  bool _t0FD4 = prim $and01C4 (_t0FC5, _t0FD3);
  if _t0FD4 {
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = 0.e0;
    vec3 _t0FD9 = [_t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = prim •00CE<$[3]; $[3]; $[]> (_t0FD9, refPos0D2D);
    real _t0FDB = prim -0026<$[]> (_t0FD5, _t0FDA);
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.e0;
    vec3 _t0FDF = [_t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = prim •00CE<$[3]; $[3]; $[]> (_t0FDF, dPos0D2E);
    time0F61 = prim /0055 (_t0FDB, _t0FE0);
    face0F62 = 2;
  }
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = 0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0D2D);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = 0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0D2E);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  real _t0FEE = -0.e0;
  bool _t0FEF = prim >0080 (_t0FED, _t0FEE);
  real _t0FF0 = 0.e0;
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.1e1;
  vec3 _t0FF4 = [_t0FF1, _t0FF2, _t0FF3];
  real _t0FF5 = prim •00CE<$[3]; $[3]; $[]> (_t0FF4, refPos0D2D);
  real _t0FF6 = prim -0026<$[]> (_t0FF0, _t0FF5);
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = 0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, dPos0D2E);
  real _t0FFC = prim /0055 (_t0FF6, _t0FFB);
  bool _t0FFD = prim >0080 (time0F61, _t0FFC);
  bool _t0FFE = prim $and01C4 (_t0FEF, _t0FFD);
  if _t0FFE {
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0D2D);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0D2E);
    time0F61 = prim /0055 (_t1005, _t100A);
    face0F62 = 3;
  }
  int _t100B = -1;
  bool _t100C = prim !=0086 (face0F62, _t100B);
  if _t100C {
    real _t100D = (real)face0F62;
    vec2 _t100E = [time0F61, _t100D];
    return _t100E;
  } else {
    real _t100F = -0.1e1;
    real _t1010 = -0.1e1;
    vec2 _t1011 = [_t100F, _t1010];
    return _t1011;
  }
}
function Femdata: Mesh#0 domain1012 (Femdata: Space arg01013)
{
  Femdata: Mesh _t1014 = extractFem(arg01013, Mesh);
  return _t1014;
}
function Femdata: Space#0 space1015 (Femdata: FemFunc arg01016)
{
  Femdata: Space _t1017 = extractFem(arg01016, Space);
  return _t1017;
}
function Femdata: FuncCell#0 funcCell1018 (Femdata: FemFunc arg01019, Femdata: MeshCell arg1101A)
{
  int _t101B = extractFemItem(CellIndex(MeshCell), int, arg1101A);
  Femdata: FuncCell _t101C = loadFem(FuncCell, arg01019, _t101B);
  return _t101C;
}
function real#1 mask102C (vec3 x102D)
{
  real _t102E = 0.1e1;
  return _t102E;
}
function vec3#1 color1035 (vec3 x1036)
{
  real _t1037 = prim @00A5<#∞; %3; $[]> (V1028, x1036);
  vec3 _t1038 = prim @00A5<#0; %1; $[3]> (cmap1034, _t1037);
  return _t1038;
}
function real#1 alpha1039 (real v103A, real g103B)
{
  real _t103C = 0.e0;
  real _t103D = 0.1e1;
  real _t103E = 0.13e1;
  real _t103F = 0.1e1;
  real _t1040 = prim |()|00B5<$[]> (v103A);
  real _t1041 = prim *0034 (g103B, thick0440);
  real _t1042 = prim /0055 (_t1040, _t1041);
  real _t1043 = prim -0026<$[]> (_t103F, _t1042);
  real _t1044 = prim *0034 (_t103E, _t1043);
  real _t1045 = prim clamp0094<$[]> (_t103C, _t103D, _t1044);
  return _t1045;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099 = func alpha1039 (val1094, _t1098);
                  real _t109A = func mask102C (x107F);
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1 = func color1035 (x107F);
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function bool#0 !=045D (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0460 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0461 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0462 = prim !=0086 (_t0460, _t0461);
  return _t0462;
}
function bool#0 ==0463 (Femdata: MeshCell cell1045E, Femdata: MeshCell cell1045F)
{
  int _t0464 = extractFemItem(CellIndex(Mesh), int, cell1045E);
  int _t0465 = extractFemItem(CellIndex(Mesh), int, cell1045F);
  bool _t0466 = prim ==0082 (_t0464, _t0465);
  return _t0466;
}
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function Femdata: RefCell#0 refcell04F3 (Femdata: Mesh arg004F4)
{
  Femdata: RefCell _t04F5 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004F4);
  return _t04F5;
}
function Femdata: MeshCell[]#0 cells04F6 (Femdata: Mesh arg004F7)
{
  Femdata: MeshCell[] _t04F8 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004F7);
  return _t04F8;
}
function Femdata: MeshCell[]#0 cells04F9 (Femdata: Mesh arg004F7)
{
  int _t04FA = 0;
  int _t04FB = extractFemItem(NumCell(Mesh), int, arg004F7);
  int[] _t04FC = prim $range01C3 (_t04FA, _t04FB);
  Femdata: MeshCell[] accum04FF = {};
  foreach i04FD in _t04FC {
    Femdata: MeshCell _t04FE = loadFem(MeshCell, arg004F7, i04FD);
    accum04FF = prim @0010<Femdata: MeshCell> (accum04FF, _t04FE);
  }
  return accum04FF;
}
function int#0 numCell0500 (Femdata: Mesh arg004F4)
{
  int _t0501 = extractFemItem(NumCell(Mesh), int, arg004F4);
  return _t0501;
}
function tensor[3,3,3,3]#0 msh_transform_30502 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0506 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0507 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0506);
  field(3)[3,3,3] _t0508 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0507);
  field(3)[3,3,3,3] _t0509 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0508);
  tensor[3,3,3,3] _t050A = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0509, pos0503);
  return _t050A;
}
function tensor[3,3,3]#0 msh_transform_2050B (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t050C = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t050D = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t050C);
  field(3)[3,3,3] _t050E = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t050D);
  tensor[3,3,3] _t050F = prim @00A5<#∞; %3; $[3,3,3]> (_t050E, pos0503);
  return _t050F;
}
function tensor[3,3]#0 msh_transform_10510 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0511 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  field(3)[3,3] _t0512 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0511);
  tensor[3,3] _t0513 = prim @00A5<#∞; %3; $[3,3]> (_t0512, pos0503);
  return _t0513;
}
function vec3#2 msh_transform_00514 (vec3 pos0503, int cell0504, Femdata: Mesh mesh0505)
{
  field(3)[3] _t0515 = femField(mesh0505,cell0504,field(3)[3],Transform,);
  vec3 _t0516 = prim @00A5<#∞; %3; $[3]> (_t0515, pos0503);
  return _t0516;
}
function Femdata: MeshPos#0 _msh_newtonInverse0517 (vec3 pos0518, int cellInt0519, Femdata: Mesh mesh051A)
{
  real _t051B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t051D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn051E = [_t051B, _t051C, _t051D];
  field(3)[3] _t051F = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
  field(3)[3,3] _t0520 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t051F);
  field(3)[3,3] _t0521 = prim inv015E<#∞; %3> (_t0520);
  real _t0522 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0523 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0524 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0525 = [_t0522, _t0523, _t0524];
  A0526 = prim @00A5<#∞; %3; $[3,3]> (_t0521, _t0525);
  int _t0527 = 0;
  int _t0528 = 2;
  int[] _t0529 = prim $range01C3 (_t0527, _t0528);
  foreach itter0559 in _t0529 {
    field(3)[3] _t052A = femField(mesh051A,cellInt0519,field(3)[3],Transform,);
    field(3)[3] _t052B = prim -002E<#∞; %3; $[3]> (_t052A, pos0518);
    field(3)[3] _t052C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0526, _t052B);
    delta052D = prim @00A5<#∞; %3; $[3]> (_t052C, xn051E);
    xn051E = prim -0026<$[3]> (xn051E, delta052D);
    real _t052E = 0.1e-7;
    real _t052F = 0.1e-7;
    real _t0530 = prim *0034 (_t052E, _t052F);
    real _t0531 = prim •00CE<$[3]; $[3]; $[]> (delta052D, delta052D);
    bool _t0532 = prim >=007E (_t0530, _t0531);
    if _t0532 {
      real _t0533 = 0.1e1;
      real _t0534 = 0.1e-4;
      real _t0535 = prim +0017<$[]> (_t0533, _t0534);
      real _t0536 = 0.1e1;
      real _t0537 = 0.1e1;
      real _t0538 = 0.1e1;
      vec3 _t0539 = [_t0536, _t0537, _t0538];
      real _t053A = prim •00CE<$[3]; $[3]; $[]> (_t0539, xn051E);
      bool _t053B = prim >0080 (_t0535, _t053A);
      real _t053C = 0.1e-4;
      real _t053D = 0.1e-4;
      real _t053E = 0.1e-4;
      vec3 _t053F = [_t053C, _t053D, _t053E];
      vec3 _t0540 = prim +0017<$[3]> (_t053F, xn051E);
      real _t0541 = _t0540[0];
      real _t0542 = -0.e0;
      bool _t0543 = prim >0080 (_t0541, _t0542);
      real _t0544 = 0.1e-4;
      real _t0545 = 0.1e-4;
      real _t0546 = 0.1e-4;
      vec3 _t0547 = [_t0544, _t0545, _t0546];
      vec3 _t0548 = prim +0017<$[3]> (_t0547, xn051E);
      real _t0549 = _t0548[1];
      real _t054A = -0.e0;
      bool _t054B = prim >0080 (_t0549, _t054A);
      real _t054C = 0.1e-4;
      real _t054D = 0.1e-4;
      real _t054E = 0.1e-4;
      vec3 _t054F = [_t054C, _t054D, _t054E];
      vec3 _t0550 = prim +0017<$[3]> (_t054F, xn051E);
      real _t0551 = _t0550[2];
      real _t0552 = -0.e0;
      bool _t0553 = prim >0080 (_t0551, _t0552);
      bool _t0554 = prim $and01C4 (_t054B, _t0553);
      bool _t0555 = prim $and01C4 (_t0543, _t0554);
      bool _t0556 = prim $and01C4 (_t053B, _t0555);
      if _t0556 {
        Femdata: MeshPos _t0557 = extractFemItemN((mesh051A, cellInt0519, xn051E, pos0518),AllBuild(MeshPos),);
        return _t0557;
      } else {
        Femdata: MeshPos _t0558 = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
        return _t0558;
      }
    }
  }
  Femdata: MeshPos _t055A = extractFemItemN((mesh051A),InvalidBuild(MeshPos),);
  return _t055A;
}
function Femdata: MeshPos#0 _mesh_pos_msh_build_world_pos055B (Femdata: MeshPos pos055C)
{
  bool _t055D = extractFemItem(WorldTest(MeshPos), bool, pos055C);
  if _t055D {
    vec3 _t055E = extractFemItem(RefPos(MeshPos), vec3, pos055C);
    int _t055F = extractFemItem(CellIndex(MeshPos), int, pos055C);
    Femdata: Mesh _t0560 = extractFem(pos055C, Mesh);
    vec3 _t0561 = func msh_transform_00514 (_t055E, _t055F, _t0560);
    Femdata: MeshPos _t0562 = extractFemItemN((pos055C, _t0561),NewWorld(MeshPos),);
    return _t0562;
  } else {
    return pos055C;
  }
}
function vec3#0 worldPos0563 (Femdata: MeshPos pos055C)
{
  vec3 _t0564 = extractFemItem(RefPos(MeshPos), vec3, pos055C);
  int _t0565 = extractFemItem(CellIndex(MeshPos), int, pos055C);
  Femdata: Mesh _t0566 = extractFem(pos055C, Mesh);
  vec3 _t0567 = func msh_transform_00514 (_t0564, _t0565, _t0566);
  return _t0567;
}
function Femdata: MeshPos#0 $exitPos0568 (Femdata: Mesh mesh0569, int cellId056A, vec3 refPos056B, vec3 dPos056C, real[2] time056D)
{
  int _t056E = -1;
  real _t056F = time056D[1];
  int _t0570 = prim $r2i01B7 (_t056F);
  int[2] _t0572 = func nextCell40571 (_t0570, cellId056A, mesh0569);
  int _t0573 = 0;
  int _t0574 = prim $sub01C0<int; %2> (_t0572, _t0573);
  bool _t0575 = prim !=0086 (_t056E, _t0574);
  if _t0575 {
    real _t0576 = time056D[1];
    int _t0577 = prim $r2i01B7 (_t0576);
    int[2] _t0578 = func nextCell40571 (_t0577, cellId056A, mesh0569);
    int _t0579 = 0;
    int _t057A = prim $sub01C0<int; %2> (_t0578, _t0579);
    real _t057B = 0.1e1;
    real _t057C = 0.e0;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    vec4 _t057F = [_t057B, _t057C, _t057D, _t057E];
    real _t0580 = 0.e0;
    real _t0581 = 0.1e1;
    real _t0582 = 0.e0;
    real _t0583 = 0.e0;
    vec4 _t0584 = [_t0580, _t0581, _t0582, _t0583];
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    real _t0587 = 0.1e1;
    real _t0588 = 0.e0;
    vec4 _t0589 = [_t0585, _t0586, _t0587, _t0588];
    real _t058A = 0.222044604925e-15;
    real _t058B = 0.e0;
    real _t058C = 0.44408920985e-15;
    real _t058D = 0.1e1;
    vec4 _t058E = [_t058A, _t058B, _t058C, _t058D];
    tensor[4,4] _t058F = [_t057F, _t0584, _t0589, _t058E];
    real _t0590 = 0.173205080757e1;
    real _t0591 = 0.173205080757e1;
    real _t0592 = 0.173205080757e1;
    real _t0593 = -0.173205080757e1;
    vec4 _t0594 = [_t0590, _t0591, _t0592, _t0593];
    real _t0595 = 0.1e1;
    real _t0596 = 0.2e1;
    real _t0597 = 0.1e1;
    real _t0598 = -0.1e1;
    vec4 _t0599 = [_t0595, _t0596, _t0597, _t0598];
    real _t059A = -0.1e1;
    real _t059B = -0.1e1;
    real _t059C = -0.192296268638e-15;
    real _t059D = 0.1e1;
    vec4 _t059E = [_t059A, _t059B, _t059C, _t059D];
    real _t059F = 0.222044604925e-15;
    real _t05A0 = 0.e0;
    real _t05A1 = 0.44408920985e-15;
    real _t05A2 = 0.1e1;
    vec4 _t05A3 = [_t059F, _t05A0, _t05A1, _t05A2];
    tensor[4,4] _t05A4 = [_t0594, _t0599, _t059E, _t05A3];
    real _t05A5 = 0.1e1;
    real _t05A6 = 0.2e1;
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.1e1;
    vec4 _t05A9 = [_t05A5, _t05A6, _t05A7, _t05A8];
    real _t05AA = 0.173205080757e1;
    real _t05AB = 0.173205080757e1;
    real _t05AC = 0.173205080757e1;
    real _t05AD = -0.173205080757e1;
    vec4 _t05AE = [_t05AA, _t05AB, _t05AC, _t05AD];
    real _t05AF = -0.1e1;
    real _t05B0 = -0.1e1;
    real _t05B1 = -0.192296268638e-15;
    real _t05B2 = 0.1e1;
    vec4 _t05B3 = [_t05AF, _t05B0, _t05B1, _t05B2];
    real _t05B4 = 0.222044604925e-15;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.44408920985e-15;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    tensor[4,4] _t05B9 = [_t05A9, _t05AE, _t05B3, _t05B8];
    real _t05BA = 0.1e1;
    real _t05BB = 0.2e1;
    real _t05BC = 0.1e1;
    real _t05BD = -0.1e1;
    vec4 _t05BE = [_t05BA, _t05BB, _t05BC, _t05BD];
    real _t05BF = -0.1e1;
    real _t05C0 = -0.1e1;
    real _t05C1 = -0.192296268638e-15;
    real _t05C2 = 0.1e1;
    vec4 _t05C3 = [_t05BF, _t05C0, _t05C1, _t05C2];
    real _t05C4 = 0.173205080757e1;
    real _t05C5 = 0.173205080757e1;
    real _t05C6 = 0.173205080757e1;
    real _t05C7 = -0.173205080757e1;
    vec4 _t05C8 = [_t05C4, _t05C5, _t05C6, _t05C7];
    real _t05C9 = 0.222044604925e-15;
    real _t05CA = 0.e0;
    real _t05CB = 0.44408920985e-15;
    real _t05CC = 0.1e1;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    tensor[4,4] _t05CE = [_t05BE, _t05C3, _t05C8, _t05CD];
    tensor[4,4][4] _t05CF = {_t058F, _t05A4, _t05B9, _t05CE};
    real _t05D0 = 0.57735026919e0;
    real _t05D1 = -0.1e1;
    real _t05D2 = -0.1e1;
    real _t05D3 = 0.1e1;
    vec4 _t05D4 = [_t05D0, _t05D1, _t05D2, _t05D3];
    real _t05D5 = -0.57735026919e0;
    real _t05D6 = 0.1e1;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.e0;
    vec4 _t05D9 = [_t05D5, _t05D6, _t05D7, _t05D8];
    real _t05DA = 0.57735026919e0;
    real _t05DB = 0.e0;
    real _t05DC = 0.1e1;
    real _t05DD = 0.e0;
    vec4 _t05DE = [_t05DA, _t05DB, _t05DC, _t05DD];
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    real _t05E2 = 0.1e1;
    vec4 _t05E3 = [_t05DF, _t05E0, _t05E1, _t05E2];
    tensor[4,4] _t05E4 = [_t05D4, _t05D9, _t05DE, _t05E3];
    real _t05E5 = 0.1e1;
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    vec4 _t05E9 = [_t05E5, _t05E6, _t05E7, _t05E8];
    real _t05EA = 0.e0;
    real _t05EB = 0.1e1;
    real _t05EC = 0.e0;
    real _t05ED = 0.e0;
    vec4 _t05EE = [_t05EA, _t05EB, _t05EC, _t05ED];
    real _t05EF = 0.e0;
    real _t05F0 = 0.e0;
    real _t05F1 = 0.1e1;
    real _t05F2 = 0.e0;
    vec4 _t05F3 = [_t05EF, _t05F0, _t05F1, _t05F2];
    real _t05F4 = 0.e0;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    real _t05F7 = 0.1e1;
    vec4 _t05F8 = [_t05F4, _t05F5, _t05F6, _t05F7];
    tensor[4,4] _t05F9 = [_t05E9, _t05EE, _t05F3, _t05F8];
    real _t05FA = 0.e0;
    real _t05FB = 0.1e1;
    real _t05FC = 0.e0;
    real _t05FD = 0.e0;
    vec4 _t05FE = [_t05FA, _t05FB, _t05FC, _t05FD];
    real _t05FF = 0.1e1;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    real _t0602 = 0.e0;
    vec4 _t0603 = [_t05FF, _t0600, _t0601, _t0602];
    real _t0604 = 0.e0;
    real _t0605 = 0.e0;
    real _t0606 = 0.1e1;
    real _t0607 = 0.e0;
    vec4 _t0608 = [_t0604, _t0605, _t0606, _t0607];
    real _t0609 = 0.e0;
    real _t060A = 0.e0;
    real _t060B = 0.e0;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    tensor[4,4] _t060E = [_t05FE, _t0603, _t0608, _t060D];
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    real _t0611 = 0.e0;
    real _t0612 = 0.e0;
    vec4 _t0613 = [_t060F, _t0610, _t0611, _t0612];
    real _t0614 = 0.e0;
    real _t0615 = 0.e0;
    real _t0616 = 0.1e1;
    real _t0617 = 0.e0;
    vec4 _t0618 = [_t0614, _t0615, _t0616, _t0617];
    real _t0619 = 0.1e1;
    real _t061A = 0.e0;
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    vec4 _t061D = [_t0619, _t061A, _t061B, _t061C];
    real _t061E = 0.e0;
    real _t061F = 0.e0;
    real _t0620 = 0.e0;
    real _t0621 = 0.1e1;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    tensor[4,4] _t0623 = [_t0613, _t0618, _t061D, _t0622];
    tensor[4,4][4] _t0624 = {_t05E4, _t05F9, _t060E, _t0623};
    real _t0625 = -0.1e1;
    real _t0626 = 0.57735026919e0;
    real _t0627 = -0.1e1;
    real _t0628 = 0.1e1;
    vec4 _t0629 = [_t0625, _t0626, _t0627, _t0628];
    real _t062A = 0.1e1;
    real _t062B = -0.57735026919e0;
    real _t062C = 0.e0;
    real _t062D = 0.e0;
    vec4 _t062E = [_t062A, _t062B, _t062C, _t062D];
    real _t062F = 0.e0;
    real _t0630 = 0.57735026919e0;
    real _t0631 = 0.1e1;
    real _t0632 = 0.e0;
    vec4 _t0633 = [_t062F, _t0630, _t0631, _t0632];
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    real _t0637 = 0.1e1;
    vec4 _t0638 = [_t0634, _t0635, _t0636, _t0637];
    tensor[4,4] _t0639 = [_t0629, _t062E, _t0633, _t0638];
    real _t063A = 0.e0;
    real _t063B = 0.1e1;
    real _t063C = 0.e0;
    real _t063D = 0.e0;
    vec4 _t063E = [_t063A, _t063B, _t063C, _t063D];
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.e0;
    vec4 _t0643 = [_t063F, _t0640, _t0641, _t0642];
    real _t0644 = 0.e0;
    real _t0645 = 0.e0;
    real _t0646 = 0.1e1;
    real _t0647 = 0.e0;
    vec4 _t0648 = [_t0644, _t0645, _t0646, _t0647];
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    real _t064C = 0.1e1;
    vec4 _t064D = [_t0649, _t064A, _t064B, _t064C];
    tensor[4,4] _t064E = [_t063E, _t0643, _t0648, _t064D];
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    real _t0651 = 0.e0;
    real _t0652 = 0.e0;
    vec4 _t0653 = [_t064F, _t0650, _t0651, _t0652];
    real _t0654 = 0.e0;
    real _t0655 = 0.1e1;
    real _t0656 = 0.e0;
    real _t0657 = 0.e0;
    vec4 _t0658 = [_t0654, _t0655, _t0656, _t0657];
    real _t0659 = 0.e0;
    real _t065A = 0.e0;
    real _t065B = 0.1e1;
    real _t065C = 0.e0;
    vec4 _t065D = [_t0659, _t065A, _t065B, _t065C];
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    real _t0660 = 0.e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    tensor[4,4] _t0663 = [_t0653, _t0658, _t065D, _t0662];
    real _t0664 = 0.1e1;
    real _t0665 = 0.e0;
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    vec4 _t0668 = [_t0664, _t0665, _t0666, _t0667];
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.1e1;
    real _t066C = 0.e0;
    vec4 _t066D = [_t0669, _t066A, _t066B, _t066C];
    real _t066E = 0.e0;
    real _t066F = 0.1e1;
    real _t0670 = 0.e0;
    real _t0671 = 0.e0;
    vec4 _t0672 = [_t066E, _t066F, _t0670, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.e0;
    real _t0676 = 0.1e1;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    tensor[4,4] _t0678 = [_t0668, _t066D, _t0672, _t0677];
    tensor[4,4][4] _t0679 = {_t0639, _t064E, _t0663, _t0678};
    real _t067A = -0.1e1;
    real _t067B = -0.1e1;
    real _t067C = 0.57735026919e0;
    real _t067D = 0.1e1;
    vec4 _t067E = [_t067A, _t067B, _t067C, _t067D];
    real _t067F = 0.1e1;
    real _t0680 = 0.e0;
    real _t0681 = -0.57735026919e0;
    real _t0682 = 0.e0;
    vec4 _t0683 = [_t067F, _t0680, _t0681, _t0682];
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    real _t0686 = 0.57735026919e0;
    real _t0687 = 0.e0;
    vec4 _t0688 = [_t0684, _t0685, _t0686, _t0687];
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    real _t068C = 0.1e1;
    vec4 _t068D = [_t0689, _t068A, _t068B, _t068C];
    tensor[4,4] _t068E = [_t067E, _t0683, _t0688, _t068D];
    real _t068F = 0.e0;
    real _t0690 = 0.e0;
    real _t0691 = 0.1e1;
    real _t0692 = 0.e0;
    vec4 _t0693 = [_t068F, _t0690, _t0691, _t0692];
    real _t0694 = 0.1e1;
    real _t0695 = 0.e0;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    vec4 _t0698 = [_t0694, _t0695, _t0696, _t0697];
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    real _t069B = 0.e0;
    real _t069C = 0.e0;
    vec4 _t069D = [_t0699, _t069A, _t069B, _t069C];
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    real _t06A1 = 0.1e1;
    vec4 _t06A2 = [_t069E, _t069F, _t06A0, _t06A1];
    tensor[4,4] _t06A3 = [_t0693, _t0698, _t069D, _t06A2];
    real _t06A4 = 0.1e1;
    real _t06A5 = 0.e0;
    real _t06A6 = 0.e0;
    real _t06A7 = 0.e0;
    vec4 _t06A8 = [_t06A4, _t06A5, _t06A6, _t06A7];
    real _t06A9 = 0.e0;
    real _t06AA = 0.e0;
    real _t06AB = 0.1e1;
    real _t06AC = 0.e0;
    vec4 _t06AD = [_t06A9, _t06AA, _t06AB, _t06AC];
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    real _t06B0 = 0.e0;
    real _t06B1 = 0.e0;
    vec4 _t06B2 = [_t06AE, _t06AF, _t06B0, _t06B1];
    real _t06B3 = 0.e0;
    real _t06B4 = 0.e0;
    real _t06B5 = 0.e0;
    real _t06B6 = 0.1e1;
    vec4 _t06B7 = [_t06B3, _t06B4, _t06B5, _t06B6];
    tensor[4,4] _t06B8 = [_t06A8, _t06AD, _t06B2, _t06B7];
    real _t06B9 = 0.1e1;
    real _t06BA = 0.e0;
    real _t06BB = 0.e0;
    real _t06BC = 0.e0;
    vec4 _t06BD = [_t06B9, _t06BA, _t06BB, _t06BC];
    real _t06BE = 0.e0;
    real _t06BF = 0.1e1;
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    vec4 _t06C2 = [_t06BE, _t06BF, _t06C0, _t06C1];
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.1e1;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    real _t06CA = 0.e0;
    real _t06CB = 0.1e1;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    tensor[4,4] _t06CD = [_t06BD, _t06C2, _t06C7, _t06CC];
    tensor[4,4][4] _t06CE = {_t068E, _t06A3, _t06B8, _t06CD};
    tensor[4,4][4][4] _t06CF = {_t05CF, _t0624, _t0679, _t06CE};
    real _t06D0 = time056D[1];
    int _t06D1 = prim $r2i01B7 (_t06D0);
    tensor[4,4][4] _t06D2 = prim $sub01C0<tensor[4,4][4]; %4> (_t06CF, _t06D1);
    real _t06D3 = time056D[1];
    int _t06D4 = prim $r2i01B7 (_t06D3);
    int[2] _t06D5 = func nextCell40571 (_t06D4, cellId056A, mesh0569);
    int _t06D6 = 1;
    int _t06D7 = prim $sub01C0<int; %2> (_t06D5, _t06D6);
    tensor[4,4] _t06D8 = prim $sub01C0<tensor[4,4]; %4> (_t06D2, _t06D7);
    real _t06D9 = time056D[0];
    vec3 _t06DA = prim *0036<$[3]> (_t06D9, dPos056C);
    vec3 _t06DB = prim +0017<$[3]> (_t06DA, refPos056B);
    real _t06DC = _t06DB[0];
    real _t06DD = time056D[0];
    vec3 _t06DE = prim *0036<$[3]> (_t06DD, dPos056C);
    vec3 _t06DF = prim +0017<$[3]> (_t06DE, refPos056B);
    real _t06E0 = _t06DF[1];
    real _t06E1 = time056D[0];
    vec3 _t06E2 = prim *0036<$[3]> (_t06E1, dPos056C);
    vec3 _t06E3 = prim +0017<$[3]> (_t06E2, refPos056B);
    real _t06E4 = _t06E3[2];
    real _t06E5 = 0.1e1;
    vec4 _t06E6 = [_t06DC, _t06E0, _t06E4, _t06E5];
    vec4 _t06E7 = prim •00CE<$[4,4]; $[4]; $[4]> (_t06D8, _t06E6);
    real _t06E8 = _t06E7[0];
    real _t06E9 = 0.1e1;
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    vec4 _t06ED = [_t06E9, _t06EA, _t06EB, _t06EC];
    real _t06EE = 0.e0;
    real _t06EF = 0.1e1;
    real _t06F0 = 0.e0;
    real _t06F1 = 0.e0;
    vec4 _t06F2 = [_t06EE, _t06EF, _t06F0, _t06F1];
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    real _t06F5 = 0.1e1;
    real _t06F6 = 0.e0;
    vec4 _t06F7 = [_t06F3, _t06F4, _t06F5, _t06F6];
    real _t06F8 = 0.222044604925e-15;
    real _t06F9 = 0.e0;
    real _t06FA = 0.44408920985e-15;
    real _t06FB = 0.1e1;
    vec4 _t06FC = [_t06F8, _t06F9, _t06FA, _t06FB];
    tensor[4,4] _t06FD = [_t06ED, _t06F2, _t06F7, _t06FC];
    real _t06FE = 0.173205080757e1;
    real _t06FF = 0.173205080757e1;
    real _t0700 = 0.173205080757e1;
    real _t0701 = -0.173205080757e1;
    vec4 _t0702 = [_t06FE, _t06FF, _t0700, _t0701];
    real _t0703 = 0.1e1;
    real _t0704 = 0.2e1;
    real _t0705 = 0.1e1;
    real _t0706 = -0.1e1;
    vec4 _t0707 = [_t0703, _t0704, _t0705, _t0706];
    real _t0708 = -0.1e1;
    real _t0709 = -0.1e1;
    real _t070A = -0.192296268638e-15;
    real _t070B = 0.1e1;
    vec4 _t070C = [_t0708, _t0709, _t070A, _t070B];
    real _t070D = 0.222044604925e-15;
    real _t070E = 0.e0;
    real _t070F = 0.44408920985e-15;
    real _t0710 = 0.1e1;
    vec4 _t0711 = [_t070D, _t070E, _t070F, _t0710];
    tensor[4,4] _t0712 = [_t0702, _t0707, _t070C, _t0711];
    real _t0713 = 0.1e1;
    real _t0714 = 0.2e1;
    real _t0715 = 0.1e1;
    real _t0716 = -0.1e1;
    vec4 _t0717 = [_t0713, _t0714, _t0715, _t0716];
    real _t0718 = 0.173205080757e1;
    real _t0719 = 0.173205080757e1;
    real _t071A = 0.173205080757e1;
    real _t071B = -0.173205080757e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = -0.1e1;
    real _t071E = -0.1e1;
    real _t071F = -0.192296268638e-15;
    real _t0720 = 0.1e1;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.222044604925e-15;
    real _t0723 = 0.e0;
    real _t0724 = 0.44408920985e-15;
    real _t0725 = 0.1e1;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    tensor[4,4] _t0727 = [_t0717, _t071C, _t0721, _t0726];
    real _t0728 = 0.1e1;
    real _t0729 = 0.2e1;
    real _t072A = 0.1e1;
    real _t072B = -0.1e1;
    vec4 _t072C = [_t0728, _t0729, _t072A, _t072B];
    real _t072D = -0.1e1;
    real _t072E = -0.1e1;
    real _t072F = -0.192296268638e-15;
    real _t0730 = 0.1e1;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.173205080757e1;
    real _t0733 = 0.173205080757e1;
    real _t0734 = 0.173205080757e1;
    real _t0735 = -0.173205080757e1;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.222044604925e-15;
    real _t0738 = 0.e0;
    real _t0739 = 0.44408920985e-15;
    real _t073A = 0.1e1;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    tensor[4,4] _t073C = [_t072C, _t0731, _t0736, _t073B];
    tensor[4,4][4] _t073D = {_t06FD, _t0712, _t0727, _t073C};
    real _t073E = 0.57735026919e0;
    real _t073F = -0.1e1;
    real _t0740 = -0.1e1;
    real _t0741 = 0.1e1;
    vec4 _t0742 = [_t073E, _t073F, _t0740, _t0741];
    real _t0743 = -0.57735026919e0;
    real _t0744 = 0.1e1;
    real _t0745 = 0.e0;
    real _t0746 = 0.e0;
    vec4 _t0747 = [_t0743, _t0744, _t0745, _t0746];
    real _t0748 = 0.57735026919e0;
    real _t0749 = 0.e0;
    real _t074A = 0.1e1;
    real _t074B = 0.e0;
    vec4 _t074C = [_t0748, _t0749, _t074A, _t074B];
    real _t074D = 0.e0;
    real _t074E = 0.e0;
    real _t074F = 0.e0;
    real _t0750 = 0.1e1;
    vec4 _t0751 = [_t074D, _t074E, _t074F, _t0750];
    tensor[4,4] _t0752 = [_t0742, _t0747, _t074C, _t0751];
    real _t0753 = 0.1e1;
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    vec4 _t0757 = [_t0753, _t0754, _t0755, _t0756];
    real _t0758 = 0.e0;
    real _t0759 = 0.1e1;
    real _t075A = 0.e0;
    real _t075B = 0.e0;
    vec4 _t075C = [_t0758, _t0759, _t075A, _t075B];
    real _t075D = 0.e0;
    real _t075E = 0.e0;
    real _t075F = 0.1e1;
    real _t0760 = 0.e0;
    vec4 _t0761 = [_t075D, _t075E, _t075F, _t0760];
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    real _t0765 = 0.1e1;
    vec4 _t0766 = [_t0762, _t0763, _t0764, _t0765];
    tensor[4,4] _t0767 = [_t0757, _t075C, _t0761, _t0766];
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    vec4 _t076C = [_t0768, _t0769, _t076A, _t076B];
    real _t076D = 0.1e1;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    real _t0770 = 0.e0;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.e0;
    real _t0773 = 0.e0;
    real _t0774 = 0.1e1;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    real _t0779 = 0.e0;
    real _t077A = 0.1e1;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    tensor[4,4] _t077C = [_t076C, _t0771, _t0776, _t077B];
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    vec4 _t0781 = [_t077D, _t077E, _t077F, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = 0.e0;
    real _t0784 = 0.1e1;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.e0;
    real _t078F = 0.1e1;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    tensor[4,4] _t0791 = [_t0781, _t0786, _t078B, _t0790];
    tensor[4,4][4] _t0792 = {_t0752, _t0767, _t077C, _t0791};
    real _t0793 = -0.1e1;
    real _t0794 = 0.57735026919e0;
    real _t0795 = -0.1e1;
    real _t0796 = 0.1e1;
    vec4 _t0797 = [_t0793, _t0794, _t0795, _t0796];
    real _t0798 = 0.1e1;
    real _t0799 = -0.57735026919e0;
    real _t079A = 0.e0;
    real _t079B = 0.e0;
    vec4 _t079C = [_t0798, _t0799, _t079A, _t079B];
    real _t079D = 0.e0;
    real _t079E = 0.57735026919e0;
    real _t079F = 0.1e1;
    real _t07A0 = 0.e0;
    vec4 _t07A1 = [_t079D, _t079E, _t079F, _t07A0];
    real _t07A2 = 0.e0;
    real _t07A3 = 0.e0;
    real _t07A4 = 0.e0;
    real _t07A5 = 0.1e1;
    vec4 _t07A6 = [_t07A2, _t07A3, _t07A4, _t07A5];
    tensor[4,4] _t07A7 = [_t0797, _t079C, _t07A1, _t07A6];
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    vec4 _t07AC = [_t07A8, _t07A9, _t07AA, _t07AB];
    real _t07AD = 0.1e1;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    real _t07B0 = 0.e0;
    vec4 _t07B1 = [_t07AD, _t07AE, _t07AF, _t07B0];
    real _t07B2 = 0.e0;
    real _t07B3 = 0.e0;
    real _t07B4 = 0.1e1;
    real _t07B5 = 0.e0;
    vec4 _t07B6 = [_t07B2, _t07B3, _t07B4, _t07B5];
    real _t07B7 = 0.e0;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    real _t07BA = 0.1e1;
    vec4 _t07BB = [_t07B7, _t07B8, _t07B9, _t07BA];
    tensor[4,4] _t07BC = [_t07AC, _t07B1, _t07B6, _t07BB];
    real _t07BD = 0.1e1;
    real _t07BE = 0.e0;
    real _t07BF = 0.e0;
    real _t07C0 = 0.e0;
    vec4 _t07C1 = [_t07BD, _t07BE, _t07BF, _t07C0];
    real _t07C2 = 0.e0;
    real _t07C3 = 0.1e1;
    real _t07C4 = 0.e0;
    real _t07C5 = 0.e0;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.e0;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.1e1;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    real _t07CE = 0.e0;
    real _t07CF = 0.1e1;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    tensor[4,4] _t07D1 = [_t07C1, _t07C6, _t07CB, _t07D0];
    real _t07D2 = 0.1e1;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    vec4 _t07D6 = [_t07D2, _t07D3, _t07D4, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.e0;
    real _t07DD = 0.1e1;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.e0;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.1e1;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    tensor[4,4] _t07E6 = [_t07D6, _t07DB, _t07E0, _t07E5];
    tensor[4,4][4] _t07E7 = {_t07A7, _t07BC, _t07D1, _t07E6};
    real _t07E8 = -0.1e1;
    real _t07E9 = -0.1e1;
    real _t07EA = 0.57735026919e0;
    real _t07EB = 0.1e1;
    vec4 _t07EC = [_t07E8, _t07E9, _t07EA, _t07EB];
    real _t07ED = 0.1e1;
    real _t07EE = 0.e0;
    real _t07EF = -0.57735026919e0;
    real _t07F0 = 0.e0;
    vec4 _t07F1 = [_t07ED, _t07EE, _t07EF, _t07F0];
    real _t07F2 = 0.e0;
    real _t07F3 = 0.1e1;
    real _t07F4 = 0.57735026919e0;
    real _t07F5 = 0.e0;
    vec4 _t07F6 = [_t07F2, _t07F3, _t07F4, _t07F5];
    real _t07F7 = 0.e0;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    real _t07FA = 0.1e1;
    vec4 _t07FB = [_t07F7, _t07F8, _t07F9, _t07FA];
    tensor[4,4] _t07FC = [_t07EC, _t07F1, _t07F6, _t07FB];
    real _t07FD = 0.e0;
    real _t07FE = 0.e0;
    real _t07FF = 0.1e1;
    real _t0800 = 0.e0;
    vec4 _t0801 = [_t07FD, _t07FE, _t07FF, _t0800];
    real _t0802 = 0.1e1;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    vec4 _t0806 = [_t0802, _t0803, _t0804, _t0805];
    real _t0807 = 0.e0;
    real _t0808 = 0.1e1;
    real _t0809 = 0.e0;
    real _t080A = 0.e0;
    vec4 _t080B = [_t0807, _t0808, _t0809, _t080A];
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    real _t080E = 0.e0;
    real _t080F = 0.1e1;
    vec4 _t0810 = [_t080C, _t080D, _t080E, _t080F];
    tensor[4,4] _t0811 = [_t0801, _t0806, _t080B, _t0810];
    real _t0812 = 0.1e1;
    real _t0813 = 0.e0;
    real _t0814 = 0.e0;
    real _t0815 = 0.e0;
    vec4 _t0816 = [_t0812, _t0813, _t0814, _t0815];
    real _t0817 = 0.e0;
    real _t0818 = 0.e0;
    real _t0819 = 0.1e1;
    real _t081A = 0.e0;
    vec4 _t081B = [_t0817, _t0818, _t0819, _t081A];
    real _t081C = 0.e0;
    real _t081D = 0.1e1;
    real _t081E = 0.e0;
    real _t081F = 0.e0;
    vec4 _t0820 = [_t081C, _t081D, _t081E, _t081F];
    real _t0821 = 0.e0;
    real _t0822 = 0.e0;
    real _t0823 = 0.e0;
    real _t0824 = 0.1e1;
    vec4 _t0825 = [_t0821, _t0822, _t0823, _t0824];
    tensor[4,4] _t0826 = [_t0816, _t081B, _t0820, _t0825];
    real _t0827 = 0.1e1;
    real _t0828 = 0.e0;
    real _t0829 = 0.e0;
    real _t082A = 0.e0;
    vec4 _t082B = [_t0827, _t0828, _t0829, _t082A];
    real _t082C = 0.e0;
    real _t082D = 0.1e1;
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    vec4 _t0830 = [_t082C, _t082D, _t082E, _t082F];
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.1e1;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    real _t0838 = 0.e0;
    real _t0839 = 0.1e1;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    tensor[4,4] _t083B = [_t082B, _t0830, _t0835, _t083A];
    tensor[4,4][4] _t083C = {_t07FC, _t0811, _t0826, _t083B};
    tensor[4,4][4][4] _t083D = {_t073D, _t0792, _t07E7, _t083C};
    real _t083E = time056D[1];
    int _t083F = prim $r2i01B7 (_t083E);
    tensor[4,4][4] _t0840 = prim $sub01C0<tensor[4,4][4]; %4> (_t083D, _t083F);
    real _t0841 = time056D[1];
    int _t0842 = prim $r2i01B7 (_t0841);
    int[2] _t0843 = func nextCell40571 (_t0842, cellId056A, mesh0569);
    int _t0844 = 1;
    int _t0845 = prim $sub01C0<int; %2> (_t0843, _t0844);
    tensor[4,4] _t0846 = prim $sub01C0<tensor[4,4]; %4> (_t0840, _t0845);
    real _t0847 = time056D[0];
    vec3 _t0848 = prim *0036<$[3]> (_t0847, dPos056C);
    vec3 _t0849 = prim +0017<$[3]> (_t0848, refPos056B);
    real _t084A = _t0849[0];
    real _t084B = time056D[0];
    vec3 _t084C = prim *0036<$[3]> (_t084B, dPos056C);
    vec3 _t084D = prim +0017<$[3]> (_t084C, refPos056B);
    real _t084E = _t084D[1];
    real _t084F = time056D[0];
    vec3 _t0850 = prim *0036<$[3]> (_t084F, dPos056C);
    vec3 _t0851 = prim +0017<$[3]> (_t0850, refPos056B);
    real _t0852 = _t0851[2];
    real _t0853 = 0.1e1;
    vec4 _t0854 = [_t084A, _t084E, _t0852, _t0853];
    vec4 _t0855 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0846, _t0854);
    real _t0856 = _t0855[1];
    real _t0857 = 0.1e1;
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    vec4 _t085B = [_t0857, _t0858, _t0859, _t085A];
    real _t085C = 0.e0;
    real _t085D = 0.1e1;
    real _t085E = 0.e0;
    real _t085F = 0.e0;
    vec4 _t0860 = [_t085C, _t085D, _t085E, _t085F];
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    real _t0863 = 0.1e1;
    real _t0864 = 0.e0;
    vec4 _t0865 = [_t0861, _t0862, _t0863, _t0864];
    real _t0866 = 0.222044604925e-15;
    real _t0867 = 0.e0;
    real _t0868 = 0.44408920985e-15;
    real _t0869 = 0.1e1;
    vec4 _t086A = [_t0866, _t0867, _t0868, _t0869];
    tensor[4,4] _t086B = [_t085B, _t0860, _t0865, _t086A];
    real _t086C = 0.173205080757e1;
    real _t086D = 0.173205080757e1;
    real _t086E = 0.173205080757e1;
    real _t086F = -0.173205080757e1;
    vec4 _t0870 = [_t086C, _t086D, _t086E, _t086F];
    real _t0871 = 0.1e1;
    real _t0872 = 0.2e1;
    real _t0873 = 0.1e1;
    real _t0874 = -0.1e1;
    vec4 _t0875 = [_t0871, _t0872, _t0873, _t0874];
    real _t0876 = -0.1e1;
    real _t0877 = -0.1e1;
    real _t0878 = -0.192296268638e-15;
    real _t0879 = 0.1e1;
    vec4 _t087A = [_t0876, _t0877, _t0878, _t0879];
    real _t087B = 0.222044604925e-15;
    real _t087C = 0.e0;
    real _t087D = 0.44408920985e-15;
    real _t087E = 0.1e1;
    vec4 _t087F = [_t087B, _t087C, _t087D, _t087E];
    tensor[4,4] _t0880 = [_t0870, _t0875, _t087A, _t087F];
    real _t0881 = 0.1e1;
    real _t0882 = 0.2e1;
    real _t0883 = 0.1e1;
    real _t0884 = -0.1e1;
    vec4 _t0885 = [_t0881, _t0882, _t0883, _t0884];
    real _t0886 = 0.173205080757e1;
    real _t0887 = 0.173205080757e1;
    real _t0888 = 0.173205080757e1;
    real _t0889 = -0.173205080757e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = -0.1e1;
    real _t088C = -0.1e1;
    real _t088D = -0.192296268638e-15;
    real _t088E = 0.1e1;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.222044604925e-15;
    real _t0891 = 0.e0;
    real _t0892 = 0.44408920985e-15;
    real _t0893 = 0.1e1;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    tensor[4,4] _t0895 = [_t0885, _t088A, _t088F, _t0894];
    real _t0896 = 0.1e1;
    real _t0897 = 0.2e1;
    real _t0898 = 0.1e1;
    real _t0899 = -0.1e1;
    vec4 _t089A = [_t0896, _t0897, _t0898, _t0899];
    real _t089B = -0.1e1;
    real _t089C = -0.1e1;
    real _t089D = -0.192296268638e-15;
    real _t089E = 0.1e1;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.173205080757e1;
    real _t08A1 = 0.173205080757e1;
    real _t08A2 = 0.173205080757e1;
    real _t08A3 = -0.173205080757e1;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.222044604925e-15;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.44408920985e-15;
    real _t08A8 = 0.1e1;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    tensor[4,4] _t08AA = [_t089A, _t089F, _t08A4, _t08A9];
    tensor[4,4][4] _t08AB = {_t086B, _t0880, _t0895, _t08AA};
    real _t08AC = 0.57735026919e0;
    real _t08AD = -0.1e1;
    real _t08AE = -0.1e1;
    real _t08AF = 0.1e1;
    vec4 _t08B0 = [_t08AC, _t08AD, _t08AE, _t08AF];
    real _t08B1 = -0.57735026919e0;
    real _t08B2 = 0.1e1;
    real _t08B3 = 0.e0;
    real _t08B4 = 0.e0;
    vec4 _t08B5 = [_t08B1, _t08B2, _t08B3, _t08B4];
    real _t08B6 = 0.57735026919e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.1e1;
    real _t08B9 = 0.e0;
    vec4 _t08BA = [_t08B6, _t08B7, _t08B8, _t08B9];
    real _t08BB = 0.e0;
    real _t08BC = 0.e0;
    real _t08BD = 0.e0;
    real _t08BE = 0.1e1;
    vec4 _t08BF = [_t08BB, _t08BC, _t08BD, _t08BE];
    tensor[4,4] _t08C0 = [_t08B0, _t08B5, _t08BA, _t08BF];
    real _t08C1 = 0.1e1;
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    vec4 _t08C5 = [_t08C1, _t08C2, _t08C3, _t08C4];
    real _t08C6 = 0.e0;
    real _t08C7 = 0.1e1;
    real _t08C8 = 0.e0;
    real _t08C9 = 0.e0;
    vec4 _t08CA = [_t08C6, _t08C7, _t08C8, _t08C9];
    real _t08CB = 0.e0;
    real _t08CC = 0.e0;
    real _t08CD = 0.1e1;
    real _t08CE = 0.e0;
    vec4 _t08CF = [_t08CB, _t08CC, _t08CD, _t08CE];
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    real _t08D3 = 0.1e1;
    vec4 _t08D4 = [_t08D0, _t08D1, _t08D2, _t08D3];
    tensor[4,4] _t08D5 = [_t08C5, _t08CA, _t08CF, _t08D4];
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    vec4 _t08DA = [_t08D6, _t08D7, _t08D8, _t08D9];
    real _t08DB = 0.1e1;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    real _t08DE = 0.e0;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.e0;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.1e1;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    real _t08E7 = 0.e0;
    real _t08E8 = 0.1e1;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    tensor[4,4] _t08EA = [_t08DA, _t08DF, _t08E4, _t08E9];
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    vec4 _t08EF = [_t08EB, _t08EC, _t08ED, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = 0.e0;
    real _t08F2 = 0.1e1;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.e0;
    real _t08FD = 0.1e1;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    tensor[4,4] _t08FF = [_t08EF, _t08F4, _t08F9, _t08FE];
    tensor[4,4][4] _t0900 = {_t08C0, _t08D5, _t08EA, _t08FF};
    real _t0901 = -0.1e1;
    real _t0902 = 0.57735026919e0;
    real _t0903 = -0.1e1;
    real _t0904 = 0.1e1;
    vec4 _t0905 = [_t0901, _t0902, _t0903, _t0904];
    real _t0906 = 0.1e1;
    real _t0907 = -0.57735026919e0;
    real _t0908 = 0.e0;
    real _t0909 = 0.e0;
    vec4 _t090A = [_t0906, _t0907, _t0908, _t0909];
    real _t090B = 0.e0;
    real _t090C = 0.57735026919e0;
    real _t090D = 0.1e1;
    real _t090E = 0.e0;
    vec4 _t090F = [_t090B, _t090C, _t090D, _t090E];
    real _t0910 = 0.e0;
    real _t0911 = 0.e0;
    real _t0912 = 0.e0;
    real _t0913 = 0.1e1;
    vec4 _t0914 = [_t0910, _t0911, _t0912, _t0913];
    tensor[4,4] _t0915 = [_t0905, _t090A, _t090F, _t0914];
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    vec4 _t091A = [_t0916, _t0917, _t0918, _t0919];
    real _t091B = 0.1e1;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    real _t091E = 0.e0;
    vec4 _t091F = [_t091B, _t091C, _t091D, _t091E];
    real _t0920 = 0.e0;
    real _t0921 = 0.e0;
    real _t0922 = 0.1e1;
    real _t0923 = 0.e0;
    vec4 _t0924 = [_t0920, _t0921, _t0922, _t0923];
    real _t0925 = 0.e0;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    real _t0928 = 0.1e1;
    vec4 _t0929 = [_t0925, _t0926, _t0927, _t0928];
    tensor[4,4] _t092A = [_t091A, _t091F, _t0924, _t0929];
    real _t092B = 0.1e1;
    real _t092C = 0.e0;
    real _t092D = 0.e0;
    real _t092E = 0.e0;
    vec4 _t092F = [_t092B, _t092C, _t092D, _t092E];
    real _t0930 = 0.e0;
    real _t0931 = 0.1e1;
    real _t0932 = 0.e0;
    real _t0933 = 0.e0;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.e0;
    real _t0936 = 0.e0;
    real _t0937 = 0.1e1;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    real _t093C = 0.e0;
    real _t093D = 0.1e1;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    tensor[4,4] _t093F = [_t092F, _t0934, _t0939, _t093E];
    real _t0940 = 0.1e1;
    real _t0941 = 0.e0;
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    vec4 _t0944 = [_t0940, _t0941, _t0942, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.e0;
    real _t094B = 0.1e1;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.e0;
    real _t0951 = 0.e0;
    real _t0952 = 0.1e1;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    tensor[4,4] _t0954 = [_t0944, _t0949, _t094E, _t0953];
    tensor[4,4][4] _t0955 = {_t0915, _t092A, _t093F, _t0954};
    real _t0956 = -0.1e1;
    real _t0957 = -0.1e1;
    real _t0958 = 0.57735026919e0;
    real _t0959 = 0.1e1;
    vec4 _t095A = [_t0956, _t0957, _t0958, _t0959];
    real _t095B = 0.1e1;
    real _t095C = 0.e0;
    real _t095D = -0.57735026919e0;
    real _t095E = 0.e0;
    vec4 _t095F = [_t095B, _t095C, _t095D, _t095E];
    real _t0960 = 0.e0;
    real _t0961 = 0.1e1;
    real _t0962 = 0.57735026919e0;
    real _t0963 = 0.e0;
    vec4 _t0964 = [_t0960, _t0961, _t0962, _t0963];
    real _t0965 = 0.e0;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    real _t0968 = 0.1e1;
    vec4 _t0969 = [_t0965, _t0966, _t0967, _t0968];
    tensor[4,4] _t096A = [_t095A, _t095F, _t0964, _t0969];
    real _t096B = 0.e0;
    real _t096C = 0.e0;
    real _t096D = 0.1e1;
    real _t096E = 0.e0;
    vec4 _t096F = [_t096B, _t096C, _t096D, _t096E];
    real _t0970 = 0.1e1;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    vec4 _t0974 = [_t0970, _t0971, _t0972, _t0973];
    real _t0975 = 0.e0;
    real _t0976 = 0.1e1;
    real _t0977 = 0.e0;
    real _t0978 = 0.e0;
    vec4 _t0979 = [_t0975, _t0976, _t0977, _t0978];
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    real _t097C = 0.e0;
    real _t097D = 0.1e1;
    vec4 _t097E = [_t097A, _t097B, _t097C, _t097D];
    tensor[4,4] _t097F = [_t096F, _t0974, _t0979, _t097E];
    real _t0980 = 0.1e1;
    real _t0981 = 0.e0;
    real _t0982 = 0.e0;
    real _t0983 = 0.e0;
    vec4 _t0984 = [_t0980, _t0981, _t0982, _t0983];
    real _t0985 = 0.e0;
    real _t0986 = 0.e0;
    real _t0987 = 0.1e1;
    real _t0988 = 0.e0;
    vec4 _t0989 = [_t0985, _t0986, _t0987, _t0988];
    real _t098A = 0.e0;
    real _t098B = 0.1e1;
    real _t098C = 0.e0;
    real _t098D = 0.e0;
    vec4 _t098E = [_t098A, _t098B, _t098C, _t098D];
    real _t098F = 0.e0;
    real _t0990 = 0.e0;
    real _t0991 = 0.e0;
    real _t0992 = 0.1e1;
    vec4 _t0993 = [_t098F, _t0990, _t0991, _t0992];
    tensor[4,4] _t0994 = [_t0984, _t0989, _t098E, _t0993];
    real _t0995 = 0.1e1;
    real _t0996 = 0.e0;
    real _t0997 = 0.e0;
    real _t0998 = 0.e0;
    vec4 _t0999 = [_t0995, _t0996, _t0997, _t0998];
    real _t099A = 0.e0;
    real _t099B = 0.1e1;
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    vec4 _t099E = [_t099A, _t099B, _t099C, _t099D];
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.1e1;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.1e1;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    tensor[4,4] _t09A9 = [_t0999, _t099E, _t09A3, _t09A8];
    tensor[4,4][4] _t09AA = {_t096A, _t097F, _t0994, _t09A9};
    tensor[4,4][4][4] _t09AB = {_t08AB, _t0900, _t0955, _t09AA};
    real _t09AC = time056D[1];
    int _t09AD = prim $r2i01B7 (_t09AC);
    tensor[4,4][4] _t09AE = prim $sub01C0<tensor[4,4][4]; %4> (_t09AB, _t09AD);
    real _t09AF = time056D[1];
    int _t09B0 = prim $r2i01B7 (_t09AF);
    int[2] _t09B1 = func nextCell40571 (_t09B0, cellId056A, mesh0569);
    int _t09B2 = 1;
    int _t09B3 = prim $sub01C0<int; %2> (_t09B1, _t09B2);
    tensor[4,4] _t09B4 = prim $sub01C0<tensor[4,4]; %4> (_t09AE, _t09B3);
    real _t09B5 = time056D[0];
    vec3 _t09B6 = prim *0036<$[3]> (_t09B5, dPos056C);
    vec3 _t09B7 = prim +0017<$[3]> (_t09B6, refPos056B);
    real _t09B8 = _t09B7[0];
    real _t09B9 = time056D[0];
    vec3 _t09BA = prim *0036<$[3]> (_t09B9, dPos056C);
    vec3 _t09BB = prim +0017<$[3]> (_t09BA, refPos056B);
    real _t09BC = _t09BB[1];
    real _t09BD = time056D[0];
    vec3 _t09BE = prim *0036<$[3]> (_t09BD, dPos056C);
    vec3 _t09BF = prim +0017<$[3]> (_t09BE, refPos056B);
    real _t09C0 = _t09BF[2];
    real _t09C1 = 0.1e1;
    vec4 _t09C2 = [_t09B8, _t09BC, _t09C0, _t09C1];
    vec4 _t09C3 = prim •00CE<$[4,4]; $[4]; $[4]> (_t09B4, _t09C2);
    real _t09C4 = _t09C3[2];
    vec3 _t09C5 = [_t06E8, _t0856, _t09C4];
    Femdata: MeshPos _t09C6 = extractFemItemN((mesh0569, _t057A, _t09C5),RefBuild(Mesh),);
    return _t09C6;
  } else {
    real _t09C7 = time056D[0];
    vec3 _t09C8 = prim *0036<$[3]> (_t09C7, dPos056C);
    vec3 _t09C9 = prim +0017<$[3]> (_t09C8, refPos056B);
    Femdata: MeshPos _t09CA = extractFemItemN((mesh0569, _t09C9),InvalidBuildBoundary(MeshPos),);
    return _t09CA;
  }
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
function int[2]#0 $nextCell209D4 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  nearbyCells09D5 = extractFemItem2(CellConnectivity(Mesh), int, mesh09CD, cell09CC : int);
  int _t09D6 = 0;
  int _t09D7 = 1;
  int _t09D8 = 3;
  int[2] _t09D9 = {_t09D7, _t09D8};
  int _t09DA = 3;
  int _t09DB = 3;
  int[2] _t09DC = {_t09DA, _t09DB};
  int _t09DD = 9;
  int _t09DE = 3;
  int[2] _t09DF = {_t09DD, _t09DE};
  int _t09E0 = 27;
  int _t09E1 = 3;
  int[2] _t09E2 = {_t09E0, _t09E1};
  int[2][4] _t09E3 = {_t09D9, _t09DC, _t09DF, _t09E2};
  int[2] _t09E4 = prim $sub01C0<int[2]; %4> (_t09E3, faceIdx09CB);
  int _t09E5 = 1;
  int _t09E6 = prim $sub01C0<int; %2> (_t09E4, _t09E5);
  int[] _t09E7 = prim $range01C3 (_t09D6, _t09E6);
  int[] accum0A08 = {};
  foreach i0A05 in _t09E7 {
    int _t09E8 = 1;
    int _t09E9 = 2;
    int _t09EA = 3;
    int _t09EB = 0;
    int _t09EC = 2;
    int _t09ED = 3;
    int _t09EE = 0;
    int _t09EF = 1;
    int _t09F0 = 3;
    int _t09F1 = 0;
    int _t09F2 = 1;
    int _t09F3 = 2;
    int[12] _t09F4 = {_t09E8, _t09E9, _t09EA, _t09EB, _t09EC, _t09ED, _t09EE, _t09EF, _t09F0, _t09F1, _t09F2, _t09F3};
    int _t09F5 = 1;
    int _t09F6 = 3;
    int[2] _t09F7 = {_t09F5, _t09F6};
    int _t09F8 = 3;
    int _t09F9 = 3;
    int[2] _t09FA = {_t09F8, _t09F9};
    int _t09FB = 9;
    int _t09FC = 3;
    int[2] _t09FD = {_t09FB, _t09FC};
    int _t09FE = 27;
    int _t09FF = 3;
    int[2] _t0A00 = {_t09FE, _t09FF};
    int[2][4] _t0A01 = {_t09F7, _t09FA, _t09FD, _t0A00};
    int[2] _t0A02 = prim $sub01C0<int[2]; %4> (_t0A01, faceIdx09CB);
    int _t0A03 = 0;
    int _t0A04 = prim $sub01C0<int; %2> (_t0A02, _t0A03);
    int _t0A06 = prim +0015 (_t0A04, i0A05);
    int _t0A07 = prim $sub01C0<int; %12> (_t09F4, _t0A06);
    accum0A08 = prim @0010<int> (accum0A08, _t0A07);
  }
  numFacetNodes0A09 = prim length0123<int> (accum0A08);
  int _t0A0A = 3;
  bool _t0A0B = prim ==0082 (_t0A0A, numFacetNodes0A09);
  if _t0A0B {
    foreach cellInt0A0C in nearbyCells09D5 {
      int[4] _t0A0D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A0E = 1;
      int _t0A0F = prim $sub01C0<int; %4> (_t0A0D, _t0A0E);
      int[4] _t0A10 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A11 = 2;
      int _t0A12 = prim $sub01C0<int; %4> (_t0A10, _t0A11);
      int[4] _t0A13 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A14 = 3;
      int _t0A15 = prim $sub01C0<int; %4> (_t0A13, _t0A14);
      int[3] _t0A16 = {_t0A0F, _t0A12, _t0A15};
      int _t0A17 = 0;
      int _t0A18 = prim $sub01C0<int; %3> (_t0A16, _t0A17);
      int _t0A19 = 0;
      int _t0A1A = 1;
      int _t0A1B = 3;
      int[2] _t0A1C = {_t0A1A, _t0A1B};
      int _t0A1D = 3;
      int _t0A1E = 3;
      int[2] _t0A1F = {_t0A1D, _t0A1E};
      int _t0A20 = 9;
      int _t0A21 = 3;
      int[2] _t0A22 = {_t0A20, _t0A21};
      int _t0A23 = 27;
      int _t0A24 = 3;
      int[2] _t0A25 = {_t0A23, _t0A24};
      int[2][4] _t0A26 = {_t0A1C, _t0A1F, _t0A22, _t0A25};
      int[2] _t0A27 = prim $sub01C0<int[2]; %4> (_t0A26, faceIdx09CB);
      int _t0A28 = 1;
      int _t0A29 = prim $sub01C0<int; %2> (_t0A27, _t0A28);
      int[] _t0A2A = prim $range01C3 (_t0A19, _t0A29);
      int[] accum0A4A = {};
      foreach i0A05 in _t0A2A {
        int _t0A2B = 1;
        int _t0A2C = 2;
        int _t0A2D = 3;
        int _t0A2E = 0;
        int _t0A2F = 2;
        int _t0A30 = 3;
        int _t0A31 = 0;
        int _t0A32 = 1;
        int _t0A33 = 3;
        int _t0A34 = 0;
        int _t0A35 = 1;
        int _t0A36 = 2;
        int[12] _t0A37 = {_t0A2B, _t0A2C, _t0A2D, _t0A2E, _t0A2F, _t0A30, _t0A31, _t0A32, _t0A33, _t0A34, _t0A35, _t0A36};
        int _t0A38 = 1;
        int _t0A39 = 3;
        int[2] _t0A3A = {_t0A38, _t0A39};
        int _t0A3B = 3;
        int _t0A3C = 3;
        int[2] _t0A3D = {_t0A3B, _t0A3C};
        int _t0A3E = 9;
        int _t0A3F = 3;
        int[2] _t0A40 = {_t0A3E, _t0A3F};
        int _t0A41 = 27;
        int _t0A42 = 3;
        int[2] _t0A43 = {_t0A41, _t0A42};
        int[2][4] _t0A44 = {_t0A3A, _t0A3D, _t0A40, _t0A43};
        int[2] _t0A45 = prim $sub01C0<int[2]; %4> (_t0A44, faceIdx09CB);
        int _t0A46 = 0;
        int _t0A47 = prim $sub01C0<int; %2> (_t0A45, _t0A46);
        int _t0A48 = prim +0015 (_t0A47, i0A05);
        int _t0A49 = prim $sub01C0<int; %12> (_t0A37, _t0A48);
        accum0A4A = prim @0010<int> (accum0A4A, _t0A49);
      }
      int _t0A4B = 0;
      int _t0A4C = prim $dynsub01C2<int> (accum0A4A, _t0A4B);
      bool _t0A4D = prim ==0082 (_t0A18, _t0A4C);
      int[4] _t0A4E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A4F = 1;
      int _t0A50 = prim $sub01C0<int; %4> (_t0A4E, _t0A4F);
      int[4] _t0A51 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A52 = 2;
      int _t0A53 = prim $sub01C0<int; %4> (_t0A51, _t0A52);
      int[4] _t0A54 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A55 = 3;
      int _t0A56 = prim $sub01C0<int; %4> (_t0A54, _t0A55);
      int[3] _t0A57 = {_t0A50, _t0A53, _t0A56};
      int _t0A58 = 1;
      int _t0A59 = prim $sub01C0<int; %3> (_t0A57, _t0A58);
      int _t0A5A = 0;
      int _t0A5B = 1;
      int _t0A5C = 3;
      int[2] _t0A5D = {_t0A5B, _t0A5C};
      int _t0A5E = 3;
      int _t0A5F = 3;
      int[2] _t0A60 = {_t0A5E, _t0A5F};
      int _t0A61 = 9;
      int _t0A62 = 3;
      int[2] _t0A63 = {_t0A61, _t0A62};
      int _t0A64 = 27;
      int _t0A65 = 3;
      int[2] _t0A66 = {_t0A64, _t0A65};
      int[2][4] _t0A67 = {_t0A5D, _t0A60, _t0A63, _t0A66};
      int[2] _t0A68 = prim $sub01C0<int[2]; %4> (_t0A67, faceIdx09CB);
      int _t0A69 = 1;
      int _t0A6A = prim $sub01C0<int; %2> (_t0A68, _t0A69);
      int[] _t0A6B = prim $range01C3 (_t0A5A, _t0A6A);
      int[] accum0A8B = {};
      foreach i0A05 in _t0A6B {
        int _t0A6C = 1;
        int _t0A6D = 2;
        int _t0A6E = 3;
        int _t0A6F = 0;
        int _t0A70 = 2;
        int _t0A71 = 3;
        int _t0A72 = 0;
        int _t0A73 = 1;
        int _t0A74 = 3;
        int _t0A75 = 0;
        int _t0A76 = 1;
        int _t0A77 = 2;
        int[12] _t0A78 = {_t0A6C, _t0A6D, _t0A6E, _t0A6F, _t0A70, _t0A71, _t0A72, _t0A73, _t0A74, _t0A75, _t0A76, _t0A77};
        int _t0A79 = 1;
        int _t0A7A = 3;
        int[2] _t0A7B = {_t0A79, _t0A7A};
        int _t0A7C = 3;
        int _t0A7D = 3;
        int[2] _t0A7E = {_t0A7C, _t0A7D};
        int _t0A7F = 9;
        int _t0A80 = 3;
        int[2] _t0A81 = {_t0A7F, _t0A80};
        int _t0A82 = 27;
        int _t0A83 = 3;
        int[2] _t0A84 = {_t0A82, _t0A83};
        int[2][4] _t0A85 = {_t0A7B, _t0A7E, _t0A81, _t0A84};
        int[2] _t0A86 = prim $sub01C0<int[2]; %4> (_t0A85, faceIdx09CB);
        int _t0A87 = 0;
        int _t0A88 = prim $sub01C0<int; %2> (_t0A86, _t0A87);
        int _t0A89 = prim +0015 (_t0A88, i0A05);
        int _t0A8A = prim $sub01C0<int; %12> (_t0A78, _t0A89);
        accum0A8B = prim @0010<int> (accum0A8B, _t0A8A);
      }
      int _t0A8C = 1;
      int _t0A8D = prim $dynsub01C2<int> (accum0A8B, _t0A8C);
      bool _t0A8E = prim ==0082 (_t0A59, _t0A8D);
      int[4] _t0A8F = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A90 = 1;
      int _t0A91 = prim $sub01C0<int; %4> (_t0A8F, _t0A90);
      int[4] _t0A92 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A93 = 2;
      int _t0A94 = prim $sub01C0<int; %4> (_t0A92, _t0A93);
      int[4] _t0A95 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0A96 = 3;
      int _t0A97 = prim $sub01C0<int; %4> (_t0A95, _t0A96);
      int[3] _t0A98 = {_t0A91, _t0A94, _t0A97};
      int _t0A99 = 2;
      int _t0A9A = prim $sub01C0<int; %3> (_t0A98, _t0A99);
      int _t0A9B = 0;
      int _t0A9C = 1;
      int _t0A9D = 3;
      int[2] _t0A9E = {_t0A9C, _t0A9D};
      int _t0A9F = 3;
      int _t0AA0 = 3;
      int[2] _t0AA1 = {_t0A9F, _t0AA0};
      int _t0AA2 = 9;
      int _t0AA3 = 3;
      int[2] _t0AA4 = {_t0AA2, _t0AA3};
      int _t0AA5 = 27;
      int _t0AA6 = 3;
      int[2] _t0AA7 = {_t0AA5, _t0AA6};
      int[2][4] _t0AA8 = {_t0A9E, _t0AA1, _t0AA4, _t0AA7};
      int[2] _t0AA9 = prim $sub01C0<int[2]; %4> (_t0AA8, faceIdx09CB);
      int _t0AAA = 1;
      int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
      int[] _t0AAC = prim $range01C3 (_t0A9B, _t0AAB);
      int[] accum0ACC = {};
      foreach i0A05 in _t0AAC {
        int _t0AAD = 1;
        int _t0AAE = 2;
        int _t0AAF = 3;
        int _t0AB0 = 0;
        int _t0AB1 = 2;
        int _t0AB2 = 3;
        int _t0AB3 = 0;
        int _t0AB4 = 1;
        int _t0AB5 = 3;
        int _t0AB6 = 0;
        int _t0AB7 = 1;
        int _t0AB8 = 2;
        int[12] _t0AB9 = {_t0AAD, _t0AAE, _t0AAF, _t0AB0, _t0AB1, _t0AB2, _t0AB3, _t0AB4, _t0AB5, _t0AB6, _t0AB7, _t0AB8};
        int _t0ABA = 1;
        int _t0ABB = 3;
        int[2] _t0ABC = {_t0ABA, _t0ABB};
        int _t0ABD = 3;
        int _t0ABE = 3;
        int[2] _t0ABF = {_t0ABD, _t0ABE};
        int _t0AC0 = 9;
        int _t0AC1 = 3;
        int[2] _t0AC2 = {_t0AC0, _t0AC1};
        int _t0AC3 = 27;
        int _t0AC4 = 3;
        int[2] _t0AC5 = {_t0AC3, _t0AC4};
        int[2][4] _t0AC6 = {_t0ABC, _t0ABF, _t0AC2, _t0AC5};
        int[2] _t0AC7 = prim $sub01C0<int[2]; %4> (_t0AC6, faceIdx09CB);
        int _t0AC8 = 0;
        int _t0AC9 = prim $sub01C0<int; %2> (_t0AC7, _t0AC8);
        int _t0ACA = prim +0015 (_t0AC9, i0A05);
        int _t0ACB = prim $sub01C0<int; %12> (_t0AB9, _t0ACA);
        accum0ACC = prim @0010<int> (accum0ACC, _t0ACB);
      }
      int _t0ACD = 2;
      int _t0ACE = prim $dynsub01C2<int> (accum0ACC, _t0ACD);
      bool _t0ACF = prim ==0082 (_t0A9A, _t0ACE);
      bool _t0AD0 = prim $and01C4 (_t0A8E, _t0ACF);
      bool _t0AD1 = prim $and01C4 (_t0A4D, _t0AD0);
      if _t0AD1 {
        int _t0AD2 = 0;
        int[2] _t0AD3 = {cellInt0A0C, _t0AD2};
        return _t0AD3;
      }
      int[4] _t0AD4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD5 = 0;
      int _t0AD6 = prim $sub01C0<int; %4> (_t0AD4, _t0AD5);
      int[4] _t0AD7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0AD8 = 2;
      int _t0AD9 = prim $sub01C0<int; %4> (_t0AD7, _t0AD8);
      int[4] _t0ADA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0ADB = 3;
      int _t0ADC = prim $sub01C0<int; %4> (_t0ADA, _t0ADB);
      int[3] _t0ADD = {_t0AD6, _t0AD9, _t0ADC};
      int _t0ADE = 0;
      int _t0ADF = prim $sub01C0<int; %3> (_t0ADD, _t0ADE);
      int _t0AE0 = 0;
      int _t0AE1 = 1;
      int _t0AE2 = 3;
      int[2] _t0AE3 = {_t0AE1, _t0AE2};
      int _t0AE4 = 3;
      int _t0AE5 = 3;
      int[2] _t0AE6 = {_t0AE4, _t0AE5};
      int _t0AE7 = 9;
      int _t0AE8 = 3;
      int[2] _t0AE9 = {_t0AE7, _t0AE8};
      int _t0AEA = 27;
      int _t0AEB = 3;
      int[2] _t0AEC = {_t0AEA, _t0AEB};
      int[2][4] _t0AED = {_t0AE3, _t0AE6, _t0AE9, _t0AEC};
      int[2] _t0AEE = prim $sub01C0<int[2]; %4> (_t0AED, faceIdx09CB);
      int _t0AEF = 1;
      int _t0AF0 = prim $sub01C0<int; %2> (_t0AEE, _t0AEF);
      int[] _t0AF1 = prim $range01C3 (_t0AE0, _t0AF0);
      int[] accum0B11 = {};
      foreach i0A05 in _t0AF1 {
        int _t0AF2 = 1;
        int _t0AF3 = 2;
        int _t0AF4 = 3;
        int _t0AF5 = 0;
        int _t0AF6 = 2;
        int _t0AF7 = 3;
        int _t0AF8 = 0;
        int _t0AF9 = 1;
        int _t0AFA = 3;
        int _t0AFB = 0;
        int _t0AFC = 1;
        int _t0AFD = 2;
        int[12] _t0AFE = {_t0AF2, _t0AF3, _t0AF4, _t0AF5, _t0AF6, _t0AF7, _t0AF8, _t0AF9, _t0AFA, _t0AFB, _t0AFC, _t0AFD};
        int _t0AFF = 1;
        int _t0B00 = 3;
        int[2] _t0B01 = {_t0AFF, _t0B00};
        int _t0B02 = 3;
        int _t0B03 = 3;
        int[2] _t0B04 = {_t0B02, _t0B03};
        int _t0B05 = 9;
        int _t0B06 = 3;
        int[2] _t0B07 = {_t0B05, _t0B06};
        int _t0B08 = 27;
        int _t0B09 = 3;
        int[2] _t0B0A = {_t0B08, _t0B09};
        int[2][4] _t0B0B = {_t0B01, _t0B04, _t0B07, _t0B0A};
        int[2] _t0B0C = prim $sub01C0<int[2]; %4> (_t0B0B, faceIdx09CB);
        int _t0B0D = 0;
        int _t0B0E = prim $sub01C0<int; %2> (_t0B0C, _t0B0D);
        int _t0B0F = prim +0015 (_t0B0E, i0A05);
        int _t0B10 = prim $sub01C0<int; %12> (_t0AFE, _t0B0F);
        accum0B11 = prim @0010<int> (accum0B11, _t0B10);
      }
      int _t0B12 = 0;
      int _t0B13 = prim $dynsub01C2<int> (accum0B11, _t0B12);
      bool _t0B14 = prim ==0082 (_t0ADF, _t0B13);
      int[4] _t0B15 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B16 = 0;
      int _t0B17 = prim $sub01C0<int; %4> (_t0B15, _t0B16);
      int[4] _t0B18 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B19 = 2;
      int _t0B1A = prim $sub01C0<int; %4> (_t0B18, _t0B19);
      int[4] _t0B1B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B1C = 3;
      int _t0B1D = prim $sub01C0<int; %4> (_t0B1B, _t0B1C);
      int[3] _t0B1E = {_t0B17, _t0B1A, _t0B1D};
      int _t0B1F = 1;
      int _t0B20 = prim $sub01C0<int; %3> (_t0B1E, _t0B1F);
      int _t0B21 = 0;
      int _t0B22 = 1;
      int _t0B23 = 3;
      int[2] _t0B24 = {_t0B22, _t0B23};
      int _t0B25 = 3;
      int _t0B26 = 3;
      int[2] _t0B27 = {_t0B25, _t0B26};
      int _t0B28 = 9;
      int _t0B29 = 3;
      int[2] _t0B2A = {_t0B28, _t0B29};
      int _t0B2B = 27;
      int _t0B2C = 3;
      int[2] _t0B2D = {_t0B2B, _t0B2C};
      int[2][4] _t0B2E = {_t0B24, _t0B27, _t0B2A, _t0B2D};
      int[2] _t0B2F = prim $sub01C0<int[2]; %4> (_t0B2E, faceIdx09CB);
      int _t0B30 = 1;
      int _t0B31 = prim $sub01C0<int; %2> (_t0B2F, _t0B30);
      int[] _t0B32 = prim $range01C3 (_t0B21, _t0B31);
      int[] accum0B52 = {};
      foreach i0A05 in _t0B32 {
        int _t0B33 = 1;
        int _t0B34 = 2;
        int _t0B35 = 3;
        int _t0B36 = 0;
        int _t0B37 = 2;
        int _t0B38 = 3;
        int _t0B39 = 0;
        int _t0B3A = 1;
        int _t0B3B = 3;
        int _t0B3C = 0;
        int _t0B3D = 1;
        int _t0B3E = 2;
        int[12] _t0B3F = {_t0B33, _t0B34, _t0B35, _t0B36, _t0B37, _t0B38, _t0B39, _t0B3A, _t0B3B, _t0B3C, _t0B3D, _t0B3E};
        int _t0B40 = 1;
        int _t0B41 = 3;
        int[2] _t0B42 = {_t0B40, _t0B41};
        int _t0B43 = 3;
        int _t0B44 = 3;
        int[2] _t0B45 = {_t0B43, _t0B44};
        int _t0B46 = 9;
        int _t0B47 = 3;
        int[2] _t0B48 = {_t0B46, _t0B47};
        int _t0B49 = 27;
        int _t0B4A = 3;
        int[2] _t0B4B = {_t0B49, _t0B4A};
        int[2][4] _t0B4C = {_t0B42, _t0B45, _t0B48, _t0B4B};
        int[2] _t0B4D = prim $sub01C0<int[2]; %4> (_t0B4C, faceIdx09CB);
        int _t0B4E = 0;
        int _t0B4F = prim $sub01C0<int; %2> (_t0B4D, _t0B4E);
        int _t0B50 = prim +0015 (_t0B4F, i0A05);
        int _t0B51 = prim $sub01C0<int; %12> (_t0B3F, _t0B50);
        accum0B52 = prim @0010<int> (accum0B52, _t0B51);
      }
      int _t0B53 = 1;
      int _t0B54 = prim $dynsub01C2<int> (accum0B52, _t0B53);
      bool _t0B55 = prim ==0082 (_t0B20, _t0B54);
      int[4] _t0B56 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B57 = 0;
      int _t0B58 = prim $sub01C0<int; %4> (_t0B56, _t0B57);
      int[4] _t0B59 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5A = 2;
      int _t0B5B = prim $sub01C0<int; %4> (_t0B59, _t0B5A);
      int[4] _t0B5C = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B5D = 3;
      int _t0B5E = prim $sub01C0<int; %4> (_t0B5C, _t0B5D);
      int[3] _t0B5F = {_t0B58, _t0B5B, _t0B5E};
      int _t0B60 = 2;
      int _t0B61 = prim $sub01C0<int; %3> (_t0B5F, _t0B60);
      int _t0B62 = 0;
      int _t0B63 = 1;
      int _t0B64 = 3;
      int[2] _t0B65 = {_t0B63, _t0B64};
      int _t0B66 = 3;
      int _t0B67 = 3;
      int[2] _t0B68 = {_t0B66, _t0B67};
      int _t0B69 = 9;
      int _t0B6A = 3;
      int[2] _t0B6B = {_t0B69, _t0B6A};
      int _t0B6C = 27;
      int _t0B6D = 3;
      int[2] _t0B6E = {_t0B6C, _t0B6D};
      int[2][4] _t0B6F = {_t0B65, _t0B68, _t0B6B, _t0B6E};
      int[2] _t0B70 = prim $sub01C0<int[2]; %4> (_t0B6F, faceIdx09CB);
      int _t0B71 = 1;
      int _t0B72 = prim $sub01C0<int; %2> (_t0B70, _t0B71);
      int[] _t0B73 = prim $range01C3 (_t0B62, _t0B72);
      int[] accum0B93 = {};
      foreach i0A05 in _t0B73 {
        int _t0B74 = 1;
        int _t0B75 = 2;
        int _t0B76 = 3;
        int _t0B77 = 0;
        int _t0B78 = 2;
        int _t0B79 = 3;
        int _t0B7A = 0;
        int _t0B7B = 1;
        int _t0B7C = 3;
        int _t0B7D = 0;
        int _t0B7E = 1;
        int _t0B7F = 2;
        int[12] _t0B80 = {_t0B74, _t0B75, _t0B76, _t0B77, _t0B78, _t0B79, _t0B7A, _t0B7B, _t0B7C, _t0B7D, _t0B7E, _t0B7F};
        int _t0B81 = 1;
        int _t0B82 = 3;
        int[2] _t0B83 = {_t0B81, _t0B82};
        int _t0B84 = 3;
        int _t0B85 = 3;
        int[2] _t0B86 = {_t0B84, _t0B85};
        int _t0B87 = 9;
        int _t0B88 = 3;
        int[2] _t0B89 = {_t0B87, _t0B88};
        int _t0B8A = 27;
        int _t0B8B = 3;
        int[2] _t0B8C = {_t0B8A, _t0B8B};
        int[2][4] _t0B8D = {_t0B83, _t0B86, _t0B89, _t0B8C};
        int[2] _t0B8E = prim $sub01C0<int[2]; %4> (_t0B8D, faceIdx09CB);
        int _t0B8F = 0;
        int _t0B90 = prim $sub01C0<int; %2> (_t0B8E, _t0B8F);
        int _t0B91 = prim +0015 (_t0B90, i0A05);
        int _t0B92 = prim $sub01C0<int; %12> (_t0B80, _t0B91);
        accum0B93 = prim @0010<int> (accum0B93, _t0B92);
      }
      int _t0B94 = 2;
      int _t0B95 = prim $dynsub01C2<int> (accum0B93, _t0B94);
      bool _t0B96 = prim ==0082 (_t0B61, _t0B95);
      bool _t0B97 = prim $and01C4 (_t0B55, _t0B96);
      bool _t0B98 = prim $and01C4 (_t0B14, _t0B97);
      if _t0B98 {
        int _t0B99 = 1;
        int[2] _t0B9A = {cellInt0A0C, _t0B99};
        return _t0B9A;
      }
      int[4] _t0B9B = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9C = 0;
      int _t0B9D = prim $sub01C0<int; %4> (_t0B9B, _t0B9C);
      int[4] _t0B9E = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0B9F = 1;
      int _t0BA0 = prim $sub01C0<int; %4> (_t0B9E, _t0B9F);
      int[4] _t0BA1 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BA2 = 3;
      int _t0BA3 = prim $sub01C0<int; %4> (_t0BA1, _t0BA2);
      int[3] _t0BA4 = {_t0B9D, _t0BA0, _t0BA3};
      int _t0BA5 = 0;
      int _t0BA6 = prim $sub01C0<int; %3> (_t0BA4, _t0BA5);
      int _t0BA7 = 0;
      int _t0BA8 = 1;
      int _t0BA9 = 3;
      int[2] _t0BAA = {_t0BA8, _t0BA9};
      int _t0BAB = 3;
      int _t0BAC = 3;
      int[2] _t0BAD = {_t0BAB, _t0BAC};
      int _t0BAE = 9;
      int _t0BAF = 3;
      int[2] _t0BB0 = {_t0BAE, _t0BAF};
      int _t0BB1 = 27;
      int _t0BB2 = 3;
      int[2] _t0BB3 = {_t0BB1, _t0BB2};
      int[2][4] _t0BB4 = {_t0BAA, _t0BAD, _t0BB0, _t0BB3};
      int[2] _t0BB5 = prim $sub01C0<int[2]; %4> (_t0BB4, faceIdx09CB);
      int _t0BB6 = 1;
      int _t0BB7 = prim $sub01C0<int; %2> (_t0BB5, _t0BB6);
      int[] _t0BB8 = prim $range01C3 (_t0BA7, _t0BB7);
      int[] accum0BD8 = {};
      foreach i0A05 in _t0BB8 {
        int _t0BB9 = 1;
        int _t0BBA = 2;
        int _t0BBB = 3;
        int _t0BBC = 0;
        int _t0BBD = 2;
        int _t0BBE = 3;
        int _t0BBF = 0;
        int _t0BC0 = 1;
        int _t0BC1 = 3;
        int _t0BC2 = 0;
        int _t0BC3 = 1;
        int _t0BC4 = 2;
        int[12] _t0BC5 = {_t0BB9, _t0BBA, _t0BBB, _t0BBC, _t0BBD, _t0BBE, _t0BBF, _t0BC0, _t0BC1, _t0BC2, _t0BC3, _t0BC4};
        int _t0BC6 = 1;
        int _t0BC7 = 3;
        int[2] _t0BC8 = {_t0BC6, _t0BC7};
        int _t0BC9 = 3;
        int _t0BCA = 3;
        int[2] _t0BCB = {_t0BC9, _t0BCA};
        int _t0BCC = 9;
        int _t0BCD = 3;
        int[2] _t0BCE = {_t0BCC, _t0BCD};
        int _t0BCF = 27;
        int _t0BD0 = 3;
        int[2] _t0BD1 = {_t0BCF, _t0BD0};
        int[2][4] _t0BD2 = {_t0BC8, _t0BCB, _t0BCE, _t0BD1};
        int[2] _t0BD3 = prim $sub01C0<int[2]; %4> (_t0BD2, faceIdx09CB);
        int _t0BD4 = 0;
        int _t0BD5 = prim $sub01C0<int; %2> (_t0BD3, _t0BD4);
        int _t0BD6 = prim +0015 (_t0BD5, i0A05);
        int _t0BD7 = prim $sub01C0<int; %12> (_t0BC5, _t0BD6);
        accum0BD8 = prim @0010<int> (accum0BD8, _t0BD7);
      }
      int _t0BD9 = 0;
      int _t0BDA = prim $dynsub01C2<int> (accum0BD8, _t0BD9);
      bool _t0BDB = prim ==0082 (_t0BA6, _t0BDA);
      int[4] _t0BDC = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BDD = 0;
      int _t0BDE = prim $sub01C0<int; %4> (_t0BDC, _t0BDD);
      int[4] _t0BDF = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE0 = 1;
      int _t0BE1 = prim $sub01C0<int; %4> (_t0BDF, _t0BE0);
      int[4] _t0BE2 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0BE3 = 3;
      int _t0BE4 = prim $sub01C0<int; %4> (_t0BE2, _t0BE3);
      int[3] _t0BE5 = {_t0BDE, _t0BE1, _t0BE4};
      int _t0BE6 = 1;
      int _t0BE7 = prim $sub01C0<int; %3> (_t0BE5, _t0BE6);
      int _t0BE8 = 0;
      int _t0BE9 = 1;
      int _t0BEA = 3;
      int[2] _t0BEB = {_t0BE9, _t0BEA};
      int _t0BEC = 3;
      int _t0BED = 3;
      int[2] _t0BEE = {_t0BEC, _t0BED};
      int _t0BEF = 9;
      int _t0BF0 = 3;
      int[2] _t0BF1 = {_t0BEF, _t0BF0};
      int _t0BF2 = 27;
      int _t0BF3 = 3;
      int[2] _t0BF4 = {_t0BF2, _t0BF3};
      int[2][4] _t0BF5 = {_t0BEB, _t0BEE, _t0BF1, _t0BF4};
      int[2] _t0BF6 = prim $sub01C0<int[2]; %4> (_t0BF5, faceIdx09CB);
      int _t0BF7 = 1;
      int _t0BF8 = prim $sub01C0<int; %2> (_t0BF6, _t0BF7);
      int[] _t0BF9 = prim $range01C3 (_t0BE8, _t0BF8);
      int[] accum0C19 = {};
      foreach i0A05 in _t0BF9 {
        int _t0BFA = 1;
        int _t0BFB = 2;
        int _t0BFC = 3;
        int _t0BFD = 0;
        int _t0BFE = 2;
        int _t0BFF = 3;
        int _t0C00 = 0;
        int _t0C01 = 1;
        int _t0C02 = 3;
        int _t0C03 = 0;
        int _t0C04 = 1;
        int _t0C05 = 2;
        int[12] _t0C06 = {_t0BFA, _t0BFB, _t0BFC, _t0BFD, _t0BFE, _t0BFF, _t0C00, _t0C01, _t0C02, _t0C03, _t0C04, _t0C05};
        int _t0C07 = 1;
        int _t0C08 = 3;
        int[2] _t0C09 = {_t0C07, _t0C08};
        int _t0C0A = 3;
        int _t0C0B = 3;
        int[2] _t0C0C = {_t0C0A, _t0C0B};
        int _t0C0D = 9;
        int _t0C0E = 3;
        int[2] _t0C0F = {_t0C0D, _t0C0E};
        int _t0C10 = 27;
        int _t0C11 = 3;
        int[2] _t0C12 = {_t0C10, _t0C11};
        int[2][4] _t0C13 = {_t0C09, _t0C0C, _t0C0F, _t0C12};
        int[2] _t0C14 = prim $sub01C0<int[2]; %4> (_t0C13, faceIdx09CB);
        int _t0C15 = 0;
        int _t0C16 = prim $sub01C0<int; %2> (_t0C14, _t0C15);
        int _t0C17 = prim +0015 (_t0C16, i0A05);
        int _t0C18 = prim $sub01C0<int; %12> (_t0C06, _t0C17);
        accum0C19 = prim @0010<int> (accum0C19, _t0C18);
      }
      int _t0C1A = 1;
      int _t0C1B = prim $dynsub01C2<int> (accum0C19, _t0C1A);
      bool _t0C1C = prim ==0082 (_t0BE7, _t0C1B);
      int[4] _t0C1D = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C1E = 0;
      int _t0C1F = prim $sub01C0<int; %4> (_t0C1D, _t0C1E);
      int[4] _t0C20 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C21 = 1;
      int _t0C22 = prim $sub01C0<int; %4> (_t0C20, _t0C21);
      int[4] _t0C23 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C24 = 3;
      int _t0C25 = prim $sub01C0<int; %4> (_t0C23, _t0C24);
      int[3] _t0C26 = {_t0C1F, _t0C22, _t0C25};
      int _t0C27 = 2;
      int _t0C28 = prim $sub01C0<int; %3> (_t0C26, _t0C27);
      int _t0C29 = 0;
      int _t0C2A = 1;
      int _t0C2B = 3;
      int[2] _t0C2C = {_t0C2A, _t0C2B};
      int _t0C2D = 3;
      int _t0C2E = 3;
      int[2] _t0C2F = {_t0C2D, _t0C2E};
      int _t0C30 = 9;
      int _t0C31 = 3;
      int[2] _t0C32 = {_t0C30, _t0C31};
      int _t0C33 = 27;
      int _t0C34 = 3;
      int[2] _t0C35 = {_t0C33, _t0C34};
      int[2][4] _t0C36 = {_t0C2C, _t0C2F, _t0C32, _t0C35};
      int[2] _t0C37 = prim $sub01C0<int[2]; %4> (_t0C36, faceIdx09CB);
      int _t0C38 = 1;
      int _t0C39 = prim $sub01C0<int; %2> (_t0C37, _t0C38);
      int[] _t0C3A = prim $range01C3 (_t0C29, _t0C39);
      int[] accum0C5A = {};
      foreach i0A05 in _t0C3A {
        int _t0C3B = 1;
        int _t0C3C = 2;
        int _t0C3D = 3;
        int _t0C3E = 0;
        int _t0C3F = 2;
        int _t0C40 = 3;
        int _t0C41 = 0;
        int _t0C42 = 1;
        int _t0C43 = 3;
        int _t0C44 = 0;
        int _t0C45 = 1;
        int _t0C46 = 2;
        int[12] _t0C47 = {_t0C3B, _t0C3C, _t0C3D, _t0C3E, _t0C3F, _t0C40, _t0C41, _t0C42, _t0C43, _t0C44, _t0C45, _t0C46};
        int _t0C48 = 1;
        int _t0C49 = 3;
        int[2] _t0C4A = {_t0C48, _t0C49};
        int _t0C4B = 3;
        int _t0C4C = 3;
        int[2] _t0C4D = {_t0C4B, _t0C4C};
        int _t0C4E = 9;
        int _t0C4F = 3;
        int[2] _t0C50 = {_t0C4E, _t0C4F};
        int _t0C51 = 27;
        int _t0C52 = 3;
        int[2] _t0C53 = {_t0C51, _t0C52};
        int[2][4] _t0C54 = {_t0C4A, _t0C4D, _t0C50, _t0C53};
        int[2] _t0C55 = prim $sub01C0<int[2]; %4> (_t0C54, faceIdx09CB);
        int _t0C56 = 0;
        int _t0C57 = prim $sub01C0<int; %2> (_t0C55, _t0C56);
        int _t0C58 = prim +0015 (_t0C57, i0A05);
        int _t0C59 = prim $sub01C0<int; %12> (_t0C47, _t0C58);
        accum0C5A = prim @0010<int> (accum0C5A, _t0C59);
      }
      int _t0C5B = 2;
      int _t0C5C = prim $dynsub01C2<int> (accum0C5A, _t0C5B);
      bool _t0C5D = prim ==0082 (_t0C28, _t0C5C);
      bool _t0C5E = prim $and01C4 (_t0C1C, _t0C5D);
      bool _t0C5F = prim $and01C4 (_t0BDB, _t0C5E);
      if _t0C5F {
        int _t0C60 = 2;
        int[2] _t0C61 = {cellInt0A0C, _t0C60};
        return _t0C61;
      }
      int[4] _t0C62 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C63 = 0;
      int _t0C64 = prim $sub01C0<int; %4> (_t0C62, _t0C63);
      int[4] _t0C65 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C66 = 1;
      int _t0C67 = prim $sub01C0<int; %4> (_t0C65, _t0C66);
      int[4] _t0C68 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0C69 = 2;
      int _t0C6A = prim $sub01C0<int; %4> (_t0C68, _t0C69);
      int[3] _t0C6B = {_t0C64, _t0C67, _t0C6A};
      int _t0C6C = 0;
      int _t0C6D = prim $sub01C0<int; %3> (_t0C6B, _t0C6C);
      int _t0C6E = 0;
      int _t0C6F = 1;
      int _t0C70 = 3;
      int[2] _t0C71 = {_t0C6F, _t0C70};
      int _t0C72 = 3;
      int _t0C73 = 3;
      int[2] _t0C74 = {_t0C72, _t0C73};
      int _t0C75 = 9;
      int _t0C76 = 3;
      int[2] _t0C77 = {_t0C75, _t0C76};
      int _t0C78 = 27;
      int _t0C79 = 3;
      int[2] _t0C7A = {_t0C78, _t0C79};
      int[2][4] _t0C7B = {_t0C71, _t0C74, _t0C77, _t0C7A};
      int[2] _t0C7C = prim $sub01C0<int[2]; %4> (_t0C7B, faceIdx09CB);
      int _t0C7D = 1;
      int _t0C7E = prim $sub01C0<int; %2> (_t0C7C, _t0C7D);
      int[] _t0C7F = prim $range01C3 (_t0C6E, _t0C7E);
      int[] accum0C9F = {};
      foreach i0A05 in _t0C7F {
        int _t0C80 = 1;
        int _t0C81 = 2;
        int _t0C82 = 3;
        int _t0C83 = 0;
        int _t0C84 = 2;
        int _t0C85 = 3;
        int _t0C86 = 0;
        int _t0C87 = 1;
        int _t0C88 = 3;
        int _t0C89 = 0;
        int _t0C8A = 1;
        int _t0C8B = 2;
        int[12] _t0C8C = {_t0C80, _t0C81, _t0C82, _t0C83, _t0C84, _t0C85, _t0C86, _t0C87, _t0C88, _t0C89, _t0C8A, _t0C8B};
        int _t0C8D = 1;
        int _t0C8E = 3;
        int[2] _t0C8F = {_t0C8D, _t0C8E};
        int _t0C90 = 3;
        int _t0C91 = 3;
        int[2] _t0C92 = {_t0C90, _t0C91};
        int _t0C93 = 9;
        int _t0C94 = 3;
        int[2] _t0C95 = {_t0C93, _t0C94};
        int _t0C96 = 27;
        int _t0C97 = 3;
        int[2] _t0C98 = {_t0C96, _t0C97};
        int[2][4] _t0C99 = {_t0C8F, _t0C92, _t0C95, _t0C98};
        int[2] _t0C9A = prim $sub01C0<int[2]; %4> (_t0C99, faceIdx09CB);
        int _t0C9B = 0;
        int _t0C9C = prim $sub01C0<int; %2> (_t0C9A, _t0C9B);
        int _t0C9D = prim +0015 (_t0C9C, i0A05);
        int _t0C9E = prim $sub01C0<int; %12> (_t0C8C, _t0C9D);
        accum0C9F = prim @0010<int> (accum0C9F, _t0C9E);
      }
      int _t0CA0 = 0;
      int _t0CA1 = prim $dynsub01C2<int> (accum0C9F, _t0CA0);
      bool _t0CA2 = prim ==0082 (_t0C6D, _t0CA1);
      int[4] _t0CA3 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA4 = 0;
      int _t0CA5 = prim $sub01C0<int; %4> (_t0CA3, _t0CA4);
      int[4] _t0CA6 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CA7 = 1;
      int _t0CA8 = prim $sub01C0<int; %4> (_t0CA6, _t0CA7);
      int[4] _t0CA9 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CAA = 2;
      int _t0CAB = prim $sub01C0<int; %4> (_t0CA9, _t0CAA);
      int[3] _t0CAC = {_t0CA5, _t0CA8, _t0CAB};
      int _t0CAD = 1;
      int _t0CAE = prim $sub01C0<int; %3> (_t0CAC, _t0CAD);
      int _t0CAF = 0;
      int _t0CB0 = 1;
      int _t0CB1 = 3;
      int[2] _t0CB2 = {_t0CB0, _t0CB1};
      int _t0CB3 = 3;
      int _t0CB4 = 3;
      int[2] _t0CB5 = {_t0CB3, _t0CB4};
      int _t0CB6 = 9;
      int _t0CB7 = 3;
      int[2] _t0CB8 = {_t0CB6, _t0CB7};
      int _t0CB9 = 27;
      int _t0CBA = 3;
      int[2] _t0CBB = {_t0CB9, _t0CBA};
      int[2][4] _t0CBC = {_t0CB2, _t0CB5, _t0CB8, _t0CBB};
      int[2] _t0CBD = prim $sub01C0<int[2]; %4> (_t0CBC, faceIdx09CB);
      int _t0CBE = 1;
      int _t0CBF = prim $sub01C0<int; %2> (_t0CBD, _t0CBE);
      int[] _t0CC0 = prim $range01C3 (_t0CAF, _t0CBF);
      int[] accum0CE0 = {};
      foreach i0A05 in _t0CC0 {
        int _t0CC1 = 1;
        int _t0CC2 = 2;
        int _t0CC3 = 3;
        int _t0CC4 = 0;
        int _t0CC5 = 2;
        int _t0CC6 = 3;
        int _t0CC7 = 0;
        int _t0CC8 = 1;
        int _t0CC9 = 3;
        int _t0CCA = 0;
        int _t0CCB = 1;
        int _t0CCC = 2;
        int[12] _t0CCD = {_t0CC1, _t0CC2, _t0CC3, _t0CC4, _t0CC5, _t0CC6, _t0CC7, _t0CC8, _t0CC9, _t0CCA, _t0CCB, _t0CCC};
        int _t0CCE = 1;
        int _t0CCF = 3;
        int[2] _t0CD0 = {_t0CCE, _t0CCF};
        int _t0CD1 = 3;
        int _t0CD2 = 3;
        int[2] _t0CD3 = {_t0CD1, _t0CD2};
        int _t0CD4 = 9;
        int _t0CD5 = 3;
        int[2] _t0CD6 = {_t0CD4, _t0CD5};
        int _t0CD7 = 27;
        int _t0CD8 = 3;
        int[2] _t0CD9 = {_t0CD7, _t0CD8};
        int[2][4] _t0CDA = {_t0CD0, _t0CD3, _t0CD6, _t0CD9};
        int[2] _t0CDB = prim $sub01C0<int[2]; %4> (_t0CDA, faceIdx09CB);
        int _t0CDC = 0;
        int _t0CDD = prim $sub01C0<int; %2> (_t0CDB, _t0CDC);
        int _t0CDE = prim +0015 (_t0CDD, i0A05);
        int _t0CDF = prim $sub01C0<int; %12> (_t0CCD, _t0CDE);
        accum0CE0 = prim @0010<int> (accum0CE0, _t0CDF);
      }
      int _t0CE1 = 1;
      int _t0CE2 = prim $dynsub01C2<int> (accum0CE0, _t0CE1);
      bool _t0CE3 = prim ==0082 (_t0CAE, _t0CE2);
      int[4] _t0CE4 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE5 = 0;
      int _t0CE6 = prim $sub01C0<int; %4> (_t0CE4, _t0CE5);
      int[4] _t0CE7 = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CE8 = 1;
      int _t0CE9 = prim $sub01C0<int; %4> (_t0CE7, _t0CE8);
      int[4] _t0CEA = extractFemItem2(ExtractIndices(Mesh), int, mesh09CD, cellInt0A0C : int);
      int _t0CEB = 2;
      int _t0CEC = prim $sub01C0<int; %4> (_t0CEA, _t0CEB);
      int[3] _t0CED = {_t0CE6, _t0CE9, _t0CEC};
      int _t0CEE = 2;
      int _t0CEF = prim $sub01C0<int; %3> (_t0CED, _t0CEE);
      int _t0CF0 = 0;
      int _t0CF1 = 1;
      int _t0CF2 = 3;
      int[2] _t0CF3 = {_t0CF1, _t0CF2};
      int _t0CF4 = 3;
      int _t0CF5 = 3;
      int[2] _t0CF6 = {_t0CF4, _t0CF5};
      int _t0CF7 = 9;
      int _t0CF8 = 3;
      int[2] _t0CF9 = {_t0CF7, _t0CF8};
      int _t0CFA = 27;
      int _t0CFB = 3;
      int[2] _t0CFC = {_t0CFA, _t0CFB};
      int[2][4] _t0CFD = {_t0CF3, _t0CF6, _t0CF9, _t0CFC};
      int[2] _t0CFE = prim $sub01C0<int[2]; %4> (_t0CFD, faceIdx09CB);
      int _t0CFF = 1;
      int _t0D00 = prim $sub01C0<int; %2> (_t0CFE, _t0CFF);
      int[] _t0D01 = prim $range01C3 (_t0CF0, _t0D00);
      int[] accum0D21 = {};
      foreach i0A05 in _t0D01 {
        int _t0D02 = 1;
        int _t0D03 = 2;
        int _t0D04 = 3;
        int _t0D05 = 0;
        int _t0D06 = 2;
        int _t0D07 = 3;
        int _t0D08 = 0;
        int _t0D09 = 1;
        int _t0D0A = 3;
        int _t0D0B = 0;
        int _t0D0C = 1;
        int _t0D0D = 2;
        int[12] _t0D0E = {_t0D02, _t0D03, _t0D04, _t0D05, _t0D06, _t0D07, _t0D08, _t0D09, _t0D0A, _t0D0B, _t0D0C, _t0D0D};
        int _t0D0F = 1;
        int _t0D10 = 3;
        int[2] _t0D11 = {_t0D0F, _t0D10};
        int _t0D12 = 3;
        int _t0D13 = 3;
        int[2] _t0D14 = {_t0D12, _t0D13};
        int _t0D15 = 9;
        int _t0D16 = 3;
        int[2] _t0D17 = {_t0D15, _t0D16};
        int _t0D18 = 27;
        int _t0D19 = 3;
        int[2] _t0D1A = {_t0D18, _t0D19};
        int[2][4] _t0D1B = {_t0D11, _t0D14, _t0D17, _t0D1A};
        int[2] _t0D1C = prim $sub01C0<int[2]; %4> (_t0D1B, faceIdx09CB);
        int _t0D1D = 0;
        int _t0D1E = prim $sub01C0<int; %2> (_t0D1C, _t0D1D);
        int _t0D1F = prim +0015 (_t0D1E, i0A05);
        int _t0D20 = prim $sub01C0<int; %12> (_t0D0E, _t0D1F);
        accum0D21 = prim @0010<int> (accum0D21, _t0D20);
      }
      int _t0D22 = 2;
      int _t0D23 = prim $dynsub01C2<int> (accum0D21, _t0D22);
      bool _t0D24 = prim ==0082 (_t0CEF, _t0D23);
      bool _t0D25 = prim $and01C4 (_t0CE3, _t0D24);
      bool _t0D26 = prim $and01C4 (_t0CA2, _t0D25);
      if _t0D26 {
        int _t0D27 = 3;
        int[2] _t0D28 = {cellInt0A0C, _t0D27};
        return _t0D28;
      }
    }
  }
  int _t0D29 = -1;
  int _t0D2A = -1;
  int[2] _t0D2B = {_t0D29, _t0D2A};
  return _t0D2B;
}
function vec2#0 _enter0D2C (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0D2F = +inf;
  int face0D30 = -1;
  real _t0D31 = 0.57735026919e0;
  real _t0D32 = 0.57735026919e0;
  real _t0D33 = -0.57735026919e0;
  real _t0D34 = 0.57735026919e0;
  vec3 _t0D35 = [_t0D32, _t0D33, _t0D34];
  real _t0D36 = prim •00CE<$[3]; $[3]; $[]> (_t0D35, refPos0D2D);
  real _t0D37 = prim -0026<$[]> (_t0D31, _t0D36);
  real _t0D38 = 0.57735026919e0;
  real _t0D39 = -0.57735026919e0;
  real _t0D3A = 0.57735026919e0;
  vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
  real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, dPos0D2E);
  real _t0D3D = prim /0055 (_t0D37, _t0D3C);
  real _t0D3E = -0.e0;
  bool _t0D3F = prim >0080 (_t0D3D, _t0D3E);
  real _t0D40 = 0.57735026919e0;
  real _t0D41 = 0.57735026919e0;
  real _t0D42 = -0.57735026919e0;
  real _t0D43 = 0.57735026919e0;
  vec3 _t0D44 = [_t0D41, _t0D42, _t0D43];
  real _t0D45 = prim •00CE<$[3]; $[3]; $[]> (_t0D44, refPos0D2D);
  real _t0D46 = prim -0026<$[]> (_t0D40, _t0D45);
  real _t0D47 = 0.57735026919e0;
  real _t0D48 = -0.57735026919e0;
  real _t0D49 = 0.57735026919e0;
  vec3 _t0D4A = [_t0D47, _t0D48, _t0D49];
  real _t0D4B = prim •00CE<$[3]; $[3]; $[]> (_t0D4A, dPos0D2E);
  real _t0D4C = prim /0055 (_t0D46, _t0D4B);
  bool _t0D4D = prim >0080 (time0D2F, _t0D4C);
  bool _t0D4E = prim $and01C4 (_t0D3F, _t0D4D);
  if _t0D4E {
    real _t0D4F = 0.1e1;
    real _t0D50 = 0.1e-4;
    real _t0D51 = prim +0017<$[]> (_t0D4F, _t0D50);
    real _t0D52 = 0.1e1;
    real _t0D53 = 0.1e1;
    real _t0D54 = 0.1e1;
    vec3 _t0D55 = [_t0D52, _t0D53, _t0D54];
    real _t0D56 = 0.57735026919e0;
    real _t0D57 = 0.57735026919e0;
    real _t0D58 = -0.57735026919e0;
    real _t0D59 = 0.57735026919e0;
    vec3 _t0D5A = [_t0D57, _t0D58, _t0D59];
    real _t0D5B = prim •00CE<$[3]; $[3]; $[]> (_t0D5A, refPos0D2D);
    real _t0D5C = prim -0026<$[]> (_t0D56, _t0D5B);
    real _t0D5D = 0.57735026919e0;
    real _t0D5E = -0.57735026919e0;
    real _t0D5F = 0.57735026919e0;
    vec3 _t0D60 = [_t0D5D, _t0D5E, _t0D5F];
    real _t0D61 = prim •00CE<$[3]; $[3]; $[]> (_t0D60, dPos0D2E);
    real _t0D62 = prim /0055 (_t0D5C, _t0D61);
    vec3 _t0D63 = prim *0038<$[3]> (dPos0D2E, _t0D62);
    vec3 _t0D64 = prim +0017<$[3]> (_t0D63, refPos0D2D);
    real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D55, _t0D64);
    bool _t0D66 = prim >0080 (_t0D51, _t0D65);
    real _t0D67 = 0.1e-4;
    real _t0D68 = 0.1e-4;
    real _t0D69 = 0.1e-4;
    vec3 _t0D6A = [_t0D67, _t0D68, _t0D69];
    real _t0D6B = 0.57735026919e0;
    real _t0D6C = 0.57735026919e0;
    real _t0D6D = -0.57735026919e0;
    real _t0D6E = 0.57735026919e0;
    vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
    real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, refPos0D2D);
    real _t0D71 = prim -0026<$[]> (_t0D6B, _t0D70);
    real _t0D72 = 0.57735026919e0;
    real _t0D73 = -0.57735026919e0;
    real _t0D74 = 0.57735026919e0;
    vec3 _t0D75 = [_t0D72, _t0D73, _t0D74];
    real _t0D76 = prim •00CE<$[3]; $[3]; $[]> (_t0D75, dPos0D2E);
    real _t0D77 = prim /0055 (_t0D71, _t0D76);
    vec3 _t0D78 = prim *0038<$[3]> (dPos0D2E, _t0D77);
    vec3 _t0D79 = prim +0017<$[3]> (_t0D78, refPos0D2D);
    vec3 _t0D7A = prim +0017<$[3]> (_t0D6A, _t0D79);
    real _t0D7B = _t0D7A[0];
    real _t0D7C = -0.e0;
    bool _t0D7D = prim >0080 (_t0D7B, _t0D7C);
    real _t0D7E = 0.1e-4;
    real _t0D7F = 0.1e-4;
    real _t0D80 = 0.1e-4;
    vec3 _t0D81 = [_t0D7E, _t0D7F, _t0D80];
    real _t0D82 = 0.57735026919e0;
    real _t0D83 = 0.57735026919e0;
    real _t0D84 = -0.57735026919e0;
    real _t0D85 = 0.57735026919e0;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = prim •00CE<$[3]; $[3]; $[]> (_t0D86, refPos0D2D);
    real _t0D88 = prim -0026<$[]> (_t0D82, _t0D87);
    real _t0D89 = 0.57735026919e0;
    real _t0D8A = -0.57735026919e0;
    real _t0D8B = 0.57735026919e0;
    vec3 _t0D8C = [_t0D89, _t0D8A, _t0D8B];
    real _t0D8D = prim •00CE<$[3]; $[3]; $[]> (_t0D8C, dPos0D2E);
    real _t0D8E = prim /0055 (_t0D88, _t0D8D);
    vec3 _t0D8F = prim *0038<$[3]> (dPos0D2E, _t0D8E);
    vec3 _t0D90 = prim +0017<$[3]> (_t0D8F, refPos0D2D);
    vec3 _t0D91 = prim +0017<$[3]> (_t0D81, _t0D90);
    real _t0D92 = _t0D91[1];
    real _t0D93 = -0.e0;
    bool _t0D94 = prim >0080 (_t0D92, _t0D93);
    real _t0D95 = 0.1e-4;
    real _t0D96 = 0.1e-4;
    real _t0D97 = 0.1e-4;
    vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
    real _t0D99 = 0.57735026919e0;
    real _t0D9A = 0.57735026919e0;
    real _t0D9B = -0.57735026919e0;
    real _t0D9C = 0.57735026919e0;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = prim •00CE<$[3]; $[3]; $[]> (_t0D9D, refPos0D2D);
    real _t0D9F = prim -0026<$[]> (_t0D99, _t0D9E);
    real _t0DA0 = 0.57735026919e0;
    real _t0DA1 = -0.57735026919e0;
    real _t0DA2 = 0.57735026919e0;
    vec3 _t0DA3 = [_t0DA0, _t0DA1, _t0DA2];
    real _t0DA4 = prim •00CE<$[3]; $[3]; $[]> (_t0DA3, dPos0D2E);
    real _t0DA5 = prim /0055 (_t0D9F, _t0DA4);
    vec3 _t0DA6 = prim *0038<$[3]> (dPos0D2E, _t0DA5);
    vec3 _t0DA7 = prim +0017<$[3]> (_t0DA6, refPos0D2D);
    vec3 _t0DA8 = prim +0017<$[3]> (_t0D98, _t0DA7);
    real _t0DA9 = _t0DA8[2];
    real _t0DAA = -0.e0;
    bool _t0DAB = prim >0080 (_t0DA9, _t0DAA);
    bool _t0DAC = prim $and01C4 (_t0D94, _t0DAB);
    bool _t0DAD = prim $and01C4 (_t0D7D, _t0DAC);
    bool _t0DAE = prim $and01C4 (_t0D66, _t0DAD);
    if _t0DAE {
      real _t0DAF = 0.57735026919e0;
      real _t0DB0 = 0.57735026919e0;
      real _t0DB1 = -0.57735026919e0;
      real _t0DB2 = 0.57735026919e0;
      vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
      real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, refPos0D2D);
      real _t0DB5 = prim -0026<$[]> (_t0DAF, _t0DB4);
      real _t0DB6 = 0.57735026919e0;
      real _t0DB7 = -0.57735026919e0;
      real _t0DB8 = 0.57735026919e0;
      vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
      real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, dPos0D2E);
      time0D2F = prim /0055 (_t0DB5, _t0DBA);
      face0D30 = 0;
    }
  }
  real _t0DBB = 0.e0;
  real _t0DBC = 0.1e1;
  real _t0DBD = 0.e0;
  real _t0DBE = 0.e0;
  vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
  real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, refPos0D2D);
  real _t0DC1 = prim -0026<$[]> (_t0DBB, _t0DC0);
  real _t0DC2 = 0.1e1;
  real _t0DC3 = 0.e0;
  real _t0DC4 = 0.e0;
  vec3 _t0DC5 = [_t0DC2, _t0DC3, _t0DC4];
  real _t0DC6 = prim •00CE<$[3]; $[3]; $[]> (_t0DC5, dPos0D2E);
  real _t0DC7 = prim /0055 (_t0DC1, _t0DC6);
  real _t0DC8 = -0.e0;
  bool _t0DC9 = prim >0080 (_t0DC7, _t0DC8);
  real _t0DCA = 0.e0;
  real _t0DCB = 0.1e1;
  real _t0DCC = 0.e0;
  real _t0DCD = 0.e0;
  vec3 _t0DCE = [_t0DCB, _t0DCC, _t0DCD];
  real _t0DCF = prim •00CE<$[3]; $[3]; $[]> (_t0DCE, refPos0D2D);
  real _t0DD0 = prim -0026<$[]> (_t0DCA, _t0DCF);
  real _t0DD1 = 0.1e1;
  real _t0DD2 = 0.e0;
  real _t0DD3 = 0.e0;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = prim •00CE<$[3]; $[3]; $[]> (_t0DD4, dPos0D2E);
  real _t0DD6 = prim /0055 (_t0DD0, _t0DD5);
  bool _t0DD7 = prim >0080 (time0D2F, _t0DD6);
  bool _t0DD8 = prim $and01C4 (_t0DC9, _t0DD7);
  if _t0DD8 {
    real _t0DD9 = 0.1e1;
    real _t0DDA = 0.1e-4;
    real _t0DDB = prim +0017<$[]> (_t0DD9, _t0DDA);
    real _t0DDC = 0.1e1;
    real _t0DDD = 0.1e1;
    real _t0DDE = 0.1e1;
    vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
    real _t0DE0 = 0.e0;
    real _t0DE1 = 0.1e1;
    real _t0DE2 = 0.e0;
    real _t0DE3 = 0.e0;
    vec3 _t0DE4 = [_t0DE1, _t0DE2, _t0DE3];
    real _t0DE5 = prim •00CE<$[3]; $[3]; $[]> (_t0DE4, refPos0D2D);
    real _t0DE6 = prim -0026<$[]> (_t0DE0, _t0DE5);
    real _t0DE7 = 0.1e1;
    real _t0DE8 = 0.e0;
    real _t0DE9 = 0.e0;
    vec3 _t0DEA = [_t0DE7, _t0DE8, _t0DE9];
    real _t0DEB = prim •00CE<$[3]; $[3]; $[]> (_t0DEA, dPos0D2E);
    real _t0DEC = prim /0055 (_t0DE6, _t0DEB);
    vec3 _t0DED = prim *0038<$[3]> (dPos0D2E, _t0DEC);
    vec3 _t0DEE = prim +0017<$[3]> (_t0DED, refPos0D2D);
    real _t0DEF = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, _t0DEE);
    bool _t0DF0 = prim >0080 (_t0DDB, _t0DEF);
    real _t0DF1 = 0.1e-4;
    real _t0DF2 = 0.1e-4;
    real _t0DF3 = 0.1e-4;
    vec3 _t0DF4 = [_t0DF1, _t0DF2, _t0DF3];
    real _t0DF5 = 0.e0;
    real _t0DF6 = 0.1e1;
    real _t0DF7 = 0.e0;
    real _t0DF8 = 0.e0;
    vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
    real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0D2D);
    real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
    real _t0DFC = 0.1e1;
    real _t0DFD = 0.e0;
    real _t0DFE = 0.e0;
    vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
    real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0D2E);
    real _t0E01 = prim /0055 (_t0DFB, _t0E00);
    vec3 _t0E02 = prim *0038<$[3]> (dPos0D2E, _t0E01);
    vec3 _t0E03 = prim +0017<$[3]> (_t0E02, refPos0D2D);
    vec3 _t0E04 = prim +0017<$[3]> (_t0DF4, _t0E03);
    real _t0E05 = _t0E04[0];
    real _t0E06 = -0.e0;
    bool _t0E07 = prim >0080 (_t0E05, _t0E06);
    real _t0E08 = 0.1e-4;
    real _t0E09 = 0.1e-4;
    real _t0E0A = 0.1e-4;
    vec3 _t0E0B = [_t0E08, _t0E09, _t0E0A];
    real _t0E0C = 0.e0;
    real _t0E0D = 0.1e1;
    real _t0E0E = 0.e0;
    real _t0E0F = 0.e0;
    vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
    real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0D2D);
    real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
    real _t0E13 = 0.1e1;
    real _t0E14 = 0.e0;
    real _t0E15 = 0.e0;
    vec3 _t0E16 = [_t0E13, _t0E14, _t0E15];
    real _t0E17 = prim •00CE<$[3]; $[3]; $[]> (_t0E16, dPos0D2E);
    real _t0E18 = prim /0055 (_t0E12, _t0E17);
    vec3 _t0E19 = prim *0038<$[3]> (dPos0D2E, _t0E18);
    vec3 _t0E1A = prim +0017<$[3]> (_t0E19, refPos0D2D);
    vec3 _t0E1B = prim +0017<$[3]> (_t0E0B, _t0E1A);
    real _t0E1C = _t0E1B[1];
    real _t0E1D = -0.e0;
    bool _t0E1E = prim >0080 (_t0E1C, _t0E1D);
    real _t0E1F = 0.1e-4;
    real _t0E20 = 0.1e-4;
    real _t0E21 = 0.1e-4;
    vec3 _t0E22 = [_t0E1F, _t0E20, _t0E21];
    real _t0E23 = 0.e0;
    real _t0E24 = 0.1e1;
    real _t0E25 = 0.e0;
    real _t0E26 = 0.e0;
    vec3 _t0E27 = [_t0E24, _t0E25, _t0E26];
    real _t0E28 = prim •00CE<$[3]; $[3]; $[]> (_t0E27, refPos0D2D);
    real _t0E29 = prim -0026<$[]> (_t0E23, _t0E28);
    real _t0E2A = 0.1e1;
    real _t0E2B = 0.e0;
    real _t0E2C = 0.e0;
    vec3 _t0E2D = [_t0E2A, _t0E2B, _t0E2C];
    real _t0E2E = prim •00CE<$[3]; $[3]; $[]> (_t0E2D, dPos0D2E);
    real _t0E2F = prim /0055 (_t0E29, _t0E2E);
    vec3 _t0E30 = prim *0038<$[3]> (dPos0D2E, _t0E2F);
    vec3 _t0E31 = prim +0017<$[3]> (_t0E30, refPos0D2D);
    vec3 _t0E32 = prim +0017<$[3]> (_t0E22, _t0E31);
    real _t0E33 = _t0E32[2];
    real _t0E34 = -0.e0;
    bool _t0E35 = prim >0080 (_t0E33, _t0E34);
    bool _t0E36 = prim $and01C4 (_t0E1E, _t0E35);
    bool _t0E37 = prim $and01C4 (_t0E07, _t0E36);
    bool _t0E38 = prim $and01C4 (_t0DF0, _t0E37);
    if _t0E38 {
      real _t0E39 = 0.e0;
      real _t0E3A = 0.1e1;
      real _t0E3B = 0.e0;
      real _t0E3C = 0.e0;
      vec3 _t0E3D = [_t0E3A, _t0E3B, _t0E3C];
      real _t0E3E = prim •00CE<$[3]; $[3]; $[]> (_t0E3D, refPos0D2D);
      real _t0E3F = prim -0026<$[]> (_t0E39, _t0E3E);
      real _t0E40 = 0.1e1;
      real _t0E41 = 0.e0;
      real _t0E42 = 0.e0;
      vec3 _t0E43 = [_t0E40, _t0E41, _t0E42];
      real _t0E44 = prim •00CE<$[3]; $[3]; $[]> (_t0E43, dPos0D2E);
      time0D2F = prim /0055 (_t0E3F, _t0E44);
      face0D30 = 1;
    }
  }
  real _t0E45 = 0.e0;
  real _t0E46 = 0.e0;
  real _t0E47 = 0.1e1;
  real _t0E48 = 0.e0;
  vec3 _t0E49 = [_t0E46, _t0E47, _t0E48];
  real _t0E4A = prim •00CE<$[3]; $[3]; $[]> (_t0E49, refPos0D2D);
  real _t0E4B = prim -0026<$[]> (_t0E45, _t0E4A);
  real _t0E4C = 0.e0;
  real _t0E4D = 0.1e1;
  real _t0E4E = 0.e0;
  vec3 _t0E4F = [_t0E4C, _t0E4D, _t0E4E];
  real _t0E50 = prim •00CE<$[3]; $[3]; $[]> (_t0E4F, dPos0D2E);
  real _t0E51 = prim /0055 (_t0E4B, _t0E50);
  real _t0E52 = -0.e0;
  bool _t0E53 = prim >0080 (_t0E51, _t0E52);
  real _t0E54 = 0.e0;
  real _t0E55 = 0.e0;
  real _t0E56 = 0.1e1;
  real _t0E57 = 0.e0;
  vec3 _t0E58 = [_t0E55, _t0E56, _t0E57];
  real _t0E59 = prim •00CE<$[3]; $[3]; $[]> (_t0E58, refPos0D2D);
  real _t0E5A = prim -0026<$[]> (_t0E54, _t0E59);
  real _t0E5B = 0.e0;
  real _t0E5C = 0.1e1;
  real _t0E5D = 0.e0;
  vec3 _t0E5E = [_t0E5B, _t0E5C, _t0E5D];
  real _t0E5F = prim •00CE<$[3]; $[3]; $[]> (_t0E5E, dPos0D2E);
  real _t0E60 = prim /0055 (_t0E5A, _t0E5F);
  bool _t0E61 = prim >0080 (time0D2F, _t0E60);
  bool _t0E62 = prim $and01C4 (_t0E53, _t0E61);
  if _t0E62 {
    real _t0E63 = 0.1e1;
    real _t0E64 = 0.1e-4;
    real _t0E65 = prim +0017<$[]> (_t0E63, _t0E64);
    real _t0E66 = 0.1e1;
    real _t0E67 = 0.1e1;
    real _t0E68 = 0.1e1;
    vec3 _t0E69 = [_t0E66, _t0E67, _t0E68];
    real _t0E6A = 0.e0;
    real _t0E6B = 0.e0;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.e0;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0D2D);
    real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
    real _t0E71 = 0.e0;
    real _t0E72 = 0.1e1;
    real _t0E73 = 0.e0;
    vec3 _t0E74 = [_t0E71, _t0E72, _t0E73];
    real _t0E75 = prim •00CE<$[3]; $[3]; $[]> (_t0E74, dPos0D2E);
    real _t0E76 = prim /0055 (_t0E70, _t0E75);
    vec3 _t0E77 = prim *0038<$[3]> (dPos0D2E, _t0E76);
    vec3 _t0E78 = prim +0017<$[3]> (_t0E77, refPos0D2D);
    real _t0E79 = prim •00CE<$[3]; $[3]; $[]> (_t0E69, _t0E78);
    bool _t0E7A = prim >0080 (_t0E65, _t0E79);
    real _t0E7B = 0.1e-4;
    real _t0E7C = 0.1e-4;
    real _t0E7D = 0.1e-4;
    vec3 _t0E7E = [_t0E7B, _t0E7C, _t0E7D];
    real _t0E7F = 0.e0;
    real _t0E80 = 0.e0;
    real _t0E81 = 0.1e1;
    real _t0E82 = 0.e0;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = prim •00CE<$[3]; $[3]; $[]> (_t0E83, refPos0D2D);
    real _t0E85 = prim -0026<$[]> (_t0E7F, _t0E84);
    real _t0E86 = 0.e0;
    real _t0E87 = 0.1e1;
    real _t0E88 = 0.e0;
    vec3 _t0E89 = [_t0E86, _t0E87, _t0E88];
    real _t0E8A = prim •00CE<$[3]; $[3]; $[]> (_t0E89, dPos0D2E);
    real _t0E8B = prim /0055 (_t0E85, _t0E8A);
    vec3 _t0E8C = prim *0038<$[3]> (dPos0D2E, _t0E8B);
    vec3 _t0E8D = prim +0017<$[3]> (_t0E8C, refPos0D2D);
    vec3 _t0E8E = prim +0017<$[3]> (_t0E7E, _t0E8D);
    real _t0E8F = _t0E8E[0];
    real _t0E90 = -0.e0;
    bool _t0E91 = prim >0080 (_t0E8F, _t0E90);
    real _t0E92 = 0.1e-4;
    real _t0E93 = 0.1e-4;
    real _t0E94 = 0.1e-4;
    vec3 _t0E95 = [_t0E92, _t0E93, _t0E94];
    real _t0E96 = 0.e0;
    real _t0E97 = 0.e0;
    real _t0E98 = 0.1e1;
    real _t0E99 = 0.e0;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = prim •00CE<$[3]; $[3]; $[]> (_t0E9A, refPos0D2D);
    real _t0E9C = prim -0026<$[]> (_t0E96, _t0E9B);
    real _t0E9D = 0.e0;
    real _t0E9E = 0.1e1;
    real _t0E9F = 0.e0;
    vec3 _t0EA0 = [_t0E9D, _t0E9E, _t0E9F];
    real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0EA0, dPos0D2E);
    real _t0EA2 = prim /0055 (_t0E9C, _t0EA1);
    vec3 _t0EA3 = prim *0038<$[3]> (dPos0D2E, _t0EA2);
    vec3 _t0EA4 = prim +0017<$[3]> (_t0EA3, refPos0D2D);
    vec3 _t0EA5 = prim +0017<$[3]> (_t0E95, _t0EA4);
    real _t0EA6 = _t0EA5[1];
    real _t0EA7 = -0.e0;
    bool _t0EA8 = prim >0080 (_t0EA6, _t0EA7);
    real _t0EA9 = 0.1e-4;
    real _t0EAA = 0.1e-4;
    real _t0EAB = 0.1e-4;
    vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
    real _t0EAD = 0.e0;
    real _t0EAE = 0.e0;
    real _t0EAF = 0.1e1;
    real _t0EB0 = 0.e0;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = prim •00CE<$[3]; $[3]; $[]> (_t0EB1, refPos0D2D);
    real _t0EB3 = prim -0026<$[]> (_t0EAD, _t0EB2);
    real _t0EB4 = 0.e0;
    real _t0EB5 = 0.1e1;
    real _t0EB6 = 0.e0;
    vec3 _t0EB7 = [_t0EB4, _t0EB5, _t0EB6];
    real _t0EB8 = prim •00CE<$[3]; $[3]; $[]> (_t0EB7, dPos0D2E);
    real _t0EB9 = prim /0055 (_t0EB3, _t0EB8);
    vec3 _t0EBA = prim *0038<$[3]> (dPos0D2E, _t0EB9);
    vec3 _t0EBB = prim +0017<$[3]> (_t0EBA, refPos0D2D);
    vec3 _t0EBC = prim +0017<$[3]> (_t0EAC, _t0EBB);
    real _t0EBD = _t0EBC[2];
    real _t0EBE = -0.e0;
    bool _t0EBF = prim >0080 (_t0EBD, _t0EBE);
    bool _t0EC0 = prim $and01C4 (_t0EA8, _t0EBF);
    bool _t0EC1 = prim $and01C4 (_t0E91, _t0EC0);
    bool _t0EC2 = prim $and01C4 (_t0E7A, _t0EC1);
    if _t0EC2 {
      real _t0EC3 = 0.e0;
      real _t0EC4 = 0.e0;
      real _t0EC5 = 0.1e1;
      real _t0EC6 = 0.e0;
      vec3 _t0EC7 = [_t0EC4, _t0EC5, _t0EC6];
      real _t0EC8 = prim •00CE<$[3]; $[3]; $[]> (_t0EC7, refPos0D2D);
      real _t0EC9 = prim -0026<$[]> (_t0EC3, _t0EC8);
      real _t0ECA = 0.e0;
      real _t0ECB = 0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, dPos0D2E);
      time0D2F = prim /0055 (_t0EC9, _t0ECE);
      face0D30 = 2;
    }
  }
  real _t0ECF = 0.e0;
  real _t0ED0 = 0.e0;
  real _t0ED1 = 0.e0;
  real _t0ED2 = 0.1e1;
  vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
  real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, refPos0D2D);
  real _t0ED5 = prim -0026<$[]> (_t0ECF, _t0ED4);
  real _t0ED6 = 0.e0;
  real _t0ED7 = 0.e0;
  real _t0ED8 = 0.1e1;
  vec3 _t0ED9 = [_t0ED6, _t0ED7, _t0ED8];
  real _t0EDA = prim •00CE<$[3]; $[3]; $[]> (_t0ED9, dPos0D2E);
  real _t0EDB = prim /0055 (_t0ED5, _t0EDA);
  real _t0EDC = -0.e0;
  bool _t0EDD = prim >0080 (_t0EDB, _t0EDC);
  real _t0EDE = 0.e0;
  real _t0EDF = 0.e0;
  real _t0EE0 = 0.e0;
  real _t0EE1 = 0.1e1;
  vec3 _t0EE2 = [_t0EDF, _t0EE0, _t0EE1];
  real _t0EE3 = prim •00CE<$[3]; $[3]; $[]> (_t0EE2, refPos0D2D);
  real _t0EE4 = prim -0026<$[]> (_t0EDE, _t0EE3);
  real _t0EE5 = 0.e0;
  real _t0EE6 = 0.e0;
  real _t0EE7 = 0.1e1;
  vec3 _t0EE8 = [_t0EE5, _t0EE6, _t0EE7];
  real _t0EE9 = prim •00CE<$[3]; $[3]; $[]> (_t0EE8, dPos0D2E);
  real _t0EEA = prim /0055 (_t0EE4, _t0EE9);
  bool _t0EEB = prim >0080 (time0D2F, _t0EEA);
  bool _t0EEC = prim $and01C4 (_t0EDD, _t0EEB);
  if _t0EEC {
    real _t0EED = 0.1e1;
    real _t0EEE = 0.1e-4;
    real _t0EEF = prim +0017<$[]> (_t0EED, _t0EEE);
    real _t0EF0 = 0.1e1;
    real _t0EF1 = 0.1e1;
    real _t0EF2 = 0.1e1;
    vec3 _t0EF3 = [_t0EF0, _t0EF1, _t0EF2];
    real _t0EF4 = 0.e0;
    real _t0EF5 = 0.e0;
    real _t0EF6 = 0.e0;
    real _t0EF7 = 0.1e1;
    vec3 _t0EF8 = [_t0EF5, _t0EF6, _t0EF7];
    real _t0EF9 = prim •00CE<$[3]; $[3]; $[]> (_t0EF8, refPos0D2D);
    real _t0EFA = prim -0026<$[]> (_t0EF4, _t0EF9);
    real _t0EFB = 0.e0;
    real _t0EFC = 0.e0;
    real _t0EFD = 0.1e1;
    vec3 _t0EFE = [_t0EFB, _t0EFC, _t0EFD];
    real _t0EFF = prim •00CE<$[3]; $[3]; $[]> (_t0EFE, dPos0D2E);
    real _t0F00 = prim /0055 (_t0EFA, _t0EFF);
    vec3 _t0F01 = prim *0038<$[3]> (dPos0D2E, _t0F00);
    vec3 _t0F02 = prim +0017<$[3]> (_t0F01, refPos0D2D);
    real _t0F03 = prim •00CE<$[3]; $[3]; $[]> (_t0EF3, _t0F02);
    bool _t0F04 = prim >0080 (_t0EEF, _t0F03);
    real _t0F05 = 0.1e-4;
    real _t0F06 = 0.1e-4;
    real _t0F07 = 0.1e-4;
    vec3 _t0F08 = [_t0F05, _t0F06, _t0F07];
    real _t0F09 = 0.e0;
    real _t0F0A = 0.e0;
    real _t0F0B = 0.e0;
    real _t0F0C = 0.1e1;
    vec3 _t0F0D = [_t0F0A, _t0F0B, _t0F0C];
    real _t0F0E = prim •00CE<$[3]; $[3]; $[]> (_t0F0D, refPos0D2D);
    real _t0F0F = prim -0026<$[]> (_t0F09, _t0F0E);
    real _t0F10 = 0.e0;
    real _t0F11 = 0.e0;
    real _t0F12 = 0.1e1;
    vec3 _t0F13 = [_t0F10, _t0F11, _t0F12];
    real _t0F14 = prim •00CE<$[3]; $[3]; $[]> (_t0F13, dPos0D2E);
    real _t0F15 = prim /0055 (_t0F0F, _t0F14);
    vec3 _t0F16 = prim *0038<$[3]> (dPos0D2E, _t0F15);
    vec3 _t0F17 = prim +0017<$[3]> (_t0F16, refPos0D2D);
    vec3 _t0F18 = prim +0017<$[3]> (_t0F08, _t0F17);
    real _t0F19 = _t0F18[0];
    real _t0F1A = -0.e0;
    bool _t0F1B = prim >0080 (_t0F19, _t0F1A);
    real _t0F1C = 0.1e-4;
    real _t0F1D = 0.1e-4;
    real _t0F1E = 0.1e-4;
    vec3 _t0F1F = [_t0F1C, _t0F1D, _t0F1E];
    real _t0F20 = 0.e0;
    real _t0F21 = 0.e0;
    real _t0F22 = 0.e0;
    real _t0F23 = 0.1e1;
    vec3 _t0F24 = [_t0F21, _t0F22, _t0F23];
    real _t0F25 = prim •00CE<$[3]; $[3]; $[]> (_t0F24, refPos0D2D);
    real _t0F26 = prim -0026<$[]> (_t0F20, _t0F25);
    real _t0F27 = 0.e0;
    real _t0F28 = 0.e0;
    real _t0F29 = 0.1e1;
    vec3 _t0F2A = [_t0F27, _t0F28, _t0F29];
    real _t0F2B = prim •00CE<$[3]; $[3]; $[]> (_t0F2A, dPos0D2E);
    real _t0F2C = prim /0055 (_t0F26, _t0F2B);
    vec3 _t0F2D = prim *0038<$[3]> (dPos0D2E, _t0F2C);
    vec3 _t0F2E = prim +0017<$[3]> (_t0F2D, refPos0D2D);
    vec3 _t0F2F = prim +0017<$[3]> (_t0F1F, _t0F2E);
    real _t0F30 = _t0F2F[1];
    real _t0F31 = -0.e0;
    bool _t0F32 = prim >0080 (_t0F30, _t0F31);
    real _t0F33 = 0.1e-4;
    real _t0F34 = 0.1e-4;
    real _t0F35 = 0.1e-4;
    vec3 _t0F36 = [_t0F33, _t0F34, _t0F35];
    real _t0F37 = 0.e0;
    real _t0F38 = 0.e0;
    real _t0F39 = 0.e0;
    real _t0F3A = 0.1e1;
    vec3 _t0F3B = [_t0F38, _t0F39, _t0F3A];
    real _t0F3C = prim •00CE<$[3]; $[3]; $[]> (_t0F3B, refPos0D2D);
    real _t0F3D = prim -0026<$[]> (_t0F37, _t0F3C);
    real _t0F3E = 0.e0;
    real _t0F3F = 0.e0;
    real _t0F40 = 0.1e1;
    vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
    real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, dPos0D2E);
    real _t0F43 = prim /0055 (_t0F3D, _t0F42);
    vec3 _t0F44 = prim *0038<$[3]> (dPos0D2E, _t0F43);
    vec3 _t0F45 = prim +0017<$[3]> (_t0F44, refPos0D2D);
    vec3 _t0F46 = prim +0017<$[3]> (_t0F36, _t0F45);
    real _t0F47 = _t0F46[2];
    real _t0F48 = -0.e0;
    bool _t0F49 = prim >0080 (_t0F47, _t0F48);
    bool _t0F4A = prim $and01C4 (_t0F32, _t0F49);
    bool _t0F4B = prim $and01C4 (_t0F1B, _t0F4A);
    bool _t0F4C = prim $and01C4 (_t0F04, _t0F4B);
    if _t0F4C {
      real _t0F4D = 0.e0;
      real _t0F4E = 0.e0;
      real _t0F4F = 0.e0;
      real _t0F50 = 0.1e1;
      vec3 _t0F51 = [_t0F4E, _t0F4F, _t0F50];
      real _t0F52 = prim •00CE<$[3]; $[3]; $[]> (_t0F51, refPos0D2D);
      real _t0F53 = prim -0026<$[]> (_t0F4D, _t0F52);
      real _t0F54 = 0.e0;
      real _t0F55 = 0.e0;
      real _t0F56 = 0.1e1;
      vec3 _t0F57 = [_t0F54, _t0F55, _t0F56];
      real _t0F58 = prim •00CE<$[3]; $[3]; $[]> (_t0F57, dPos0D2E);
      time0D2F = prim /0055 (_t0F53, _t0F58);
      face0D30 = 3;
    }
  }
  int _t0F59 = -1;
  bool _t0F5A = prim !=0086 (face0D30, _t0F59);
  if _t0F5A {
    real _t0F5B = (real)face0D30;
    vec2 _t0F5C = [time0D2F, _t0F5B];
    return _t0F5C;
  } else {
    real _t0F5D = -0.1e1;
    real _t0F5E = -0.1e1;
    vec2 _t0F5F = [_t0F5D, _t0F5E];
    return _t0F5F;
  }
}
function vec2#0 _exit0F60 (vec3 refPos0D2D, vec3 dPos0D2E)
{
  real time0F61 = +inf;
  int face0F62 = -1;
  real _t0F63 = 0.57735026919e0;
  real _t0F64 = 0.57735026919e0;
  real _t0F65 = -0.57735026919e0;
  real _t0F66 = 0.57735026919e0;
  vec3 _t0F67 = [_t0F64, _t0F65, _t0F66];
  real _t0F68 = prim •00CE<$[3]; $[3]; $[]> (_t0F67, refPos0D2D);
  real _t0F69 = prim -0026<$[]> (_t0F63, _t0F68);
  real _t0F6A = 0.57735026919e0;
  real _t0F6B = -0.57735026919e0;
  real _t0F6C = 0.57735026919e0;
  vec3 _t0F6D = [_t0F6A, _t0F6B, _t0F6C];
  real _t0F6E = prim •00CE<$[3]; $[3]; $[]> (_t0F6D, dPos0D2E);
  real _t0F6F = prim /0055 (_t0F69, _t0F6E);
  real _t0F70 = -0.e0;
  bool _t0F71 = prim >0080 (_t0F6F, _t0F70);
  real _t0F72 = 0.57735026919e0;
  real _t0F73 = 0.57735026919e0;
  real _t0F74 = -0.57735026919e0;
  real _t0F75 = 0.57735026919e0;
  vec3 _t0F76 = [_t0F73, _t0F74, _t0F75];
  real _t0F77 = prim •00CE<$[3]; $[3]; $[]> (_t0F76, refPos0D2D);
  real _t0F78 = prim -0026<$[]> (_t0F72, _t0F77);
  real _t0F79 = 0.57735026919e0;
  real _t0F7A = -0.57735026919e0;
  real _t0F7B = 0.57735026919e0;
  vec3 _t0F7C = [_t0F79, _t0F7A, _t0F7B];
  real _t0F7D = prim •00CE<$[3]; $[3]; $[]> (_t0F7C, dPos0D2E);
  real _t0F7E = prim /0055 (_t0F78, _t0F7D);
  bool _t0F7F = prim >0080 (time0F61, _t0F7E);
  bool _t0F80 = prim $and01C4 (_t0F71, _t0F7F);
  if _t0F80 {
    real _t0F81 = 0.57735026919e0;
    real _t0F82 = 0.57735026919e0;
    real _t0F83 = -0.57735026919e0;
    real _t0F84 = 0.57735026919e0;
    vec3 _t0F85 = [_t0F82, _t0F83, _t0F84];
    real _t0F86 = prim •00CE<$[3]; $[3]; $[]> (_t0F85, refPos0D2D);
    real _t0F87 = prim -0026<$[]> (_t0F81, _t0F86);
    real _t0F88 = 0.57735026919e0;
    real _t0F89 = -0.57735026919e0;
    real _t0F8A = 0.57735026919e0;
    vec3 _t0F8B = [_t0F88, _t0F89, _t0F8A];
    real _t0F8C = prim •00CE<$[3]; $[3]; $[]> (_t0F8B, dPos0D2E);
    time0F61 = prim /0055 (_t0F87, _t0F8C);
    face0F62 = 0;
  }
  real _t0F8D = 0.e0;
  real _t0F8E = 0.1e1;
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  vec3 _t0F91 = [_t0F8E, _t0F8F, _t0F90];
  real _t0F92 = prim •00CE<$[3]; $[3]; $[]> (_t0F91, refPos0D2D);
  real _t0F93 = prim -0026<$[]> (_t0F8D, _t0F92);
  real _t0F94 = 0.1e1;
  real _t0F95 = 0.e0;
  real _t0F96 = 0.e0;
  vec3 _t0F97 = [_t0F94, _t0F95, _t0F96];
  real _t0F98 = prim •00CE<$[3]; $[3]; $[]> (_t0F97, dPos0D2E);
  real _t0F99 = prim /0055 (_t0F93, _t0F98);
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.e0;
  real _t0F9D = 0.1e1;
  real _t0F9E = 0.e0;
  real _t0F9F = 0.e0;
  vec3 _t0FA0 = [_t0F9D, _t0F9E, _t0F9F];
  real _t0FA1 = prim •00CE<$[3]; $[3]; $[]> (_t0FA0, refPos0D2D);
  real _t0FA2 = prim -0026<$[]> (_t0F9C, _t0FA1);
  real _t0FA3 = 0.1e1;
  real _t0FA4 = 0.e0;
  real _t0FA5 = 0.e0;
  vec3 _t0FA6 = [_t0FA3, _t0FA4, _t0FA5];
  real _t0FA7 = prim •00CE<$[3]; $[3]; $[]> (_t0FA6, dPos0D2E);
  real _t0FA8 = prim /0055 (_t0FA2, _t0FA7);
  bool _t0FA9 = prim >0080 (time0F61, _t0FA8);
  bool _t0FAA = prim $and01C4 (_t0F9B, _t0FA9);
  if _t0FAA {
    real _t0FAB = 0.e0;
    real _t0FAC = 0.1e1;
    real _t0FAD = 0.e0;
    real _t0FAE = 0.e0;
    vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
    real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, refPos0D2D);
    real _t0FB1 = prim -0026<$[]> (_t0FAB, _t0FB0);
    real _t0FB2 = 0.1e1;
    real _t0FB3 = 0.e0;
    real _t0FB4 = 0.e0;
    vec3 _t0FB5 = [_t0FB2, _t0FB3, _t0FB4];
    real _t0FB6 = prim •00CE<$[3]; $[3]; $[]> (_t0FB5, dPos0D2E);
    time0F61 = prim /0055 (_t0FB1, _t0FB6);
    face0F62 = 1;
  }
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.1e1;
  real _t0FBA = 0.e0;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0D2D);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.1e1;
  real _t0FC0 = 0.e0;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0D2E);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  real _t0FC4 = -0.e0;
  bool _t0FC5 = prim >0080 (_t0FC3, _t0FC4);
  real _t0FC6 = 0.e0;
  real _t0FC7 = 0.e0;
  real _t0FC8 = 0.1e1;
  real _t0FC9 = 0.e0;
  vec3 _t0FCA = [_t0FC7, _t0FC8, _t0FC9];
  real _t0FCB = prim •00CE<$[3]; $[3]; $[]> (_t0FCA, refPos0D2D);
  real _t0FCC = prim -0026<$[]> (_t0FC6, _t0FCB);
  real _t0FCD = 0.e0;
  real _t0FCE = 0.1e1;
  real _t0FCF = 0.e0;
  vec3 _t0FD0 = [_t0FCD, _t0FCE, _t0FCF];
  real _t0FD1 = prim •00CE<$[3]; $[3]; $[]> (_t0FD0, dPos0D2E);
  real _t0FD2 = prim /0055 (_t0FCC, _t0FD1);
  bool _t0FD3 = prim >0080 (time0F61, _t0FD2);
  bool _t0FD4 = prim $and01C4 (_t0FC5, _t0FD3);
  if _t0FD4 {
    real _t0FD5 = 0.e0;
    real _t0FD6 = 0.e0;
    real _t0FD7 = 0.1e1;
    real _t0FD8 = 0.e0;
    vec3 _t0FD9 = [_t0FD6, _t0FD7, _t0FD8];
    real _t0FDA = prim •00CE<$[3]; $[3]; $[]> (_t0FD9, refPos0D2D);
    real _t0FDB = prim -0026<$[]> (_t0FD5, _t0FDA);
    real _t0FDC = 0.e0;
    real _t0FDD = 0.1e1;
    real _t0FDE = 0.e0;
    vec3 _t0FDF = [_t0FDC, _t0FDD, _t0FDE];
    real _t0FE0 = prim •00CE<$[3]; $[3]; $[]> (_t0FDF, dPos0D2E);
    time0F61 = prim /0055 (_t0FDB, _t0FE0);
    face0F62 = 2;
  }
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = 0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0D2D);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = 0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0D2E);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  real _t0FEE = -0.e0;
  bool _t0FEF = prim >0080 (_t0FED, _t0FEE);
  real _t0FF0 = 0.e0;
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.1e1;
  vec3 _t0FF4 = [_t0FF1, _t0FF2, _t0FF3];
  real _t0FF5 = prim •00CE<$[3]; $[3]; $[]> (_t0FF4, refPos0D2D);
  real _t0FF6 = prim -0026<$[]> (_t0FF0, _t0FF5);
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = 0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, dPos0D2E);
  real _t0FFC = prim /0055 (_t0FF6, _t0FFB);
  bool _t0FFD = prim >0080 (time0F61, _t0FFC);
  bool _t0FFE = prim $and01C4 (_t0FEF, _t0FFD);
  if _t0FFE {
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = 0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0D2D);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = 0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0D2E);
    time0F61 = prim /0055 (_t1005, _t100A);
    face0F62 = 3;
  }
  int _t100B = -1;
  bool _t100C = prim !=0086 (face0F62, _t100B);
  if _t100C {
    real _t100D = (real)face0F62;
    vec2 _t100E = [time0F61, _t100D];
    return _t100E;
  } else {
    real _t100F = -0.1e1;
    real _t1010 = -0.1e1;
    vec2 _t1011 = [_t100F, _t1010];
    return _t1011;
  }
}
function Femdata: Mesh#0 domain1012 (Femdata: Space arg01013)
{
  Femdata: Mesh _t1014 = extractFem(arg01013, Mesh);
  return _t1014;
}
function Femdata: Space#0 space1015 (Femdata: FemFunc arg01016)
{
  Femdata: Space _t1017 = extractFem(arg01016, Space);
  return _t1017;
}
function Femdata: FuncCell#0 funcCell1018 (Femdata: FemFunc arg01019, Femdata: MeshCell arg1101A)
{
  int _t101B = extractFemItem(CellIndex(MeshCell), int, arg1101A);
  Femdata: FuncCell _t101C = loadFem(FuncCell, arg01019, _t101B);
  return _t101C;
}
function real#1 mask102C (vec3 x102D)
{
  real _t102E = 0.1e1;
  return _t102E;
}
function vec3#1 color1035 (vec3 x1036)
{
  real _t1037 = prim @00A5<#∞; %3; $[]> (V1028, x1036);
  vec3 _t1038 = prim @00A5<#0; %1; $[3]> (cmap1034, _t1037);
  return _t1038;
}
function real#1 alpha1039 (real v103A, real g103B)
{
  real _t103C = 0.e0;
  real _t103D = 0.1e1;
  real _t103E = 0.13e1;
  real _t103F = 0.1e1;
  real _t1040 = prim |()|00B5<$[]> (v103A);
  real _t1041 = prim *0034 (g103B, thick0440);
  real _t1042 = prim /0055 (_t1040, _t1041);
  real _t1043 = prim -0026<$[]> (_t103F, _t1042);
  real _t1044 = prim *0034 (_t103E, _t1043);
  real _t1045 = prim clamp0094<$[]> (_t103C, _t103D, _t1044);
  return _t1045;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099 = func alpha1039 (val1094, _t1098);
                  real _t109A = func mask102C (x107F);
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1 = func color1035 (x107F);
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099;
                  real _t10D8 = 0.e0;
                  real _t10D9 = 0.1e1;
                  real _t10DA = 0.13e1;
                  real _t10DB = 0.1e1;
                  real _t10DC = prim |()|00B5<$[]> (val1094);
                  real _t10DD = prim *0034 (_t1098, thick0440);
                  real _t10DE = prim /0055 (_t10DC, _t10DD);
                  real _t10DF = prim -0026<$[]> (_t10DB, _t10DE);
                  real _t10E0 = prim *0034 (_t10DA, _t10DF);
                  real _t10E1 = prim clamp0094<$[]> (_t10D8, _t10D9, _t10E0);
                  _t1099 = _t10E1;
                  real _t109A;
                  real _t10D7 = 0.1e1;
                  _t109A = _t10D7;
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1;
                    real _t10D5 = prim @00A5<#∞; %3; $[]> (V1028, x107F);
                    vec3 _t10D6 = prim @00A5<#0; %1; $[3]> (cmap1034, _t10D5);
                    _t10B1 = _t10D6;
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099;
                  real _t10D8 = 0.e0;
                  real _t10D9 = 0.1e1;
                  real _t10DA = 0.13e1;
                  real _t10DB = 0.1e1;
                  real _t10DC = prim |()|00B5<$[]> (val1094);
                  real _t10DD = prim *0034 (_t1098, thick0440);
                  real _t10DE = prim /0055 (_t10DC, _t10DD);
                  real _t10DF = prim -0026<$[]> (_t10DB, _t10DE);
                  real _t10E0 = prim *0034 (_t10DA, _t10DF);
                  real _t10E1 = prim clamp0094<$[]> (_t10D8, _t10D9, _t10E0);
                  _t1099 = _t10E1;
                  real _t109A;
                  real _t10D7 = 0.1e1;
                  _t109A = _t10D7;
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1;
                    real _t10D5 = prim @00A5<#∞; %3; $[]> (V1028, x107F);
                    vec3 _t10D6 = prim @00A5<#0; %1; $[3]> (cmap1034, _t10D5);
                    _t10B1 = _t10D6;
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui105B, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi105C, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099;
                  real _t10D8 = 0.e0;
                  real _t10D9 = 0.1e1;
                  real _t10DA = 0.13e1;
                  real _t10DB = 0.1e1;
                  real _t10DC = prim |()|00B5<$[]> (val1094);
                  real _t10DD = prim *0034 (_t1098, thick0440);
                  real _t10DE = prim /0055 (_t10DC, _t10DD);
                  real _t10DF = prim -0026<$[]> (_t10DB, _t10DE);
                  real _t10E0 = prim *0034 (_t10DA, _t10DF);
                  real _t10E1 = prim clamp0094<$[]> (_t10D8, _t10D9, _t10E0);
                  _t1099 = _t10E1;
                  real _t109A;
                  real _t10D7 = 0.1e1;
                  _t109A = _t10D7;
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1;
                    real _t10D5 = prim @00A5<#∞; %3; $[]> (V1028, x107F);
                    vec3 _t10D6 = prim @00A5<#0; %1; $[3]> (cmap1034, _t10D5);
                    _t10B1 = _t10D6;
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui105B, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi105C, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  int ui10E3;
  int vi10E2;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
    ui10E3 = ui105B;
    vi10E2 = vi105C;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui10E3, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi10E2, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099;
                  real _t10D8 = 0.e0;
                  real _t10D9 = 0.1e1;
                  real _t10DA = 0.13e1;
                  real _t10DB = 0.1e1;
                  real _t10DC = prim |()|00B5<$[]> (val1094);
                  real _t10DD = prim *0034 (_t1098, thick0440);
                  real _t10DE = prim /0055 (_t10DC, _t10DD);
                  real _t10DF = prim -0026<$[]> (_t10DB, _t10DE);
                  real _t10E0 = prim *0034 (_t10DA, _t10DF);
                  real _t10E1 = prim clamp0094<$[]> (_t10D8, _t10D9, _t10E0);
                  _t1099 = _t10E1;
                  real _t109A;
                  real _t10D7 = 0.1e1;
                  _t109A = _t10D7;
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1;
                    real _t10D5 = prim @00A5<#∞; %3; $[]> (V1028, x107F);
                    vec3 _t10D6 = prim @00A5<#0; %1; $[3]> (cmap1034, _t10D5);
                    _t10B1 = _t10D6;
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui10E3, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi10E2, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StrandArray,HasStabilizeMethod,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh a042F;
input FemData:Space 0b043B_intermedateGlobal043C;
input FemData:FemFunc 0c043D_intermedateGlobal043E;
input real isoval043F = <default>;
input real thick0440 = <default>;
input vec3 camEye0441 = <default>;
input vec3 camAt0445 = <default>;
input vec3 camUp0449 = <default>;
input real camFOV044D = <default>;
input int iresU044E = <default>;
input int iresV044F = <default>;
input real camNear0450 = <default>;
input real camFar0451 = <default>;
input real refStep0452 = <default>;
input real rayStep0453 = <default>;
input vec3 lightVsp0454 = <default>;
input real phongKa0458 = <default>;
input real phongKd0459 = <default>;
input bool debug045A = <default>;
input int su045B = <default>;
input int sv045C = <default>;
constants {
  isoval043F = 0.2e0;
  thick0440 = 0.7e-1;
  real _t0442 = 0.3e1;
  real _t0443 = -0.3e1;
  real _t0444 = 0.3e1;
  camEye0441 = [_t0442, _t0443, _t0444];
  real _t0446 = 0.5e0;
  real _t0447 = 0.5e0;
  real _t0448 = 0.5e0;
  camAt0445 = [_t0446, _t0447, _t0448];
  real _t044A = 0.e0;
  real _t044B = 0.e0;
  real _t044C = 0.1e1;
  camUp0449 = [_t044A, _t044B, _t044C];
  camFOV044D = 0.137e2;
  iresU044E = 500;
  iresV044F = 500;
  camNear0450 = -0.2e1;
  camFar0451 = 0.5e1;
  refStep0452 = 0.1e1;
  rayStep0453 = 0.1e-1;
  real _t0455 = 0.e0;
  real _t0456 = 0.e0;
  real _t0457 = 0.1e1;
  lightVsp0454 = [_t0455, _t0456, _t0457];
  phongKa0458 = 0.1e0;
  phongKd0459 = 0.9e0;
  debug045A = false;
  su045B = 250;
  sv045C = 250;
}
global Femdata: Space b043B;
global Femdata: FemFunc c043D;
global field(3)[] V1028;
global field#4(3)[] F102B;
global IMAGE1D<double[3]> I1031;
global field#0(1)[3] cmap1034;
global real camDist1047;
global vec3 camN1049;
global vec3 camU104B;
global vec3 camV104C;
global real camVmax1052;
global real camUmax1056;
global vec3 light105A;
function Femdata: MeshPos#3 findPos0467 (Femdata: Mesh mesh0468, vec3 pos0469)
{
  real _t046A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t046C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn046D = [_t046A, _t046B, _t046C];
  newtonInt046E = 0;
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t0470 = extractFemItem(NumCell(Mesh), int, mesh0468);
  int _t0471 = 1;
  numCell0472 = prim -0024 (_t0470, _t0471);
  yayCells0473 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0468, pos0469 : vec3);
  foreach cellItter0474 in yayCells0473 {
    cellInt046F = cellItter0474;
    field(3)[3] _t0475 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t0476 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0475);
    field(3)[3,3] _t0477 = prim inv015E<#∞; %3> (_t0476);
    real _t0478 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0479 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t047A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t047B = [_t0478, _t0479, _t047A];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t0477, _t047B);
    int _t047D = 0;
    int _t047E = 2;
    int[] _t047F = prim $range01C3 (_t047D, _t047E);
    foreach newtonItter04AE in _t047F {
      field(3)[3] _t0480 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
      field(3)[3] _t0481 = prim -002E<#∞; %3; $[3]> (_t0480, pos0469);
      field(3)[3] _t0482 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t0481);
      delta0483 = prim @00A5<#∞; %3; $[3]> (_t0482, xn046D);
      xn046D = prim -0026<$[3]> (xn046D, delta0483);
      real _t0484 = 0.1e-7;
      real _t0485 = 0.1e-7;
      real _t0486 = prim *0034 (_t0484, _t0485);
      real _t0487 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
      bool _t0488 = prim >=007E (_t0486, _t0487);
      if _t0488 {
        real _t0489 = 0.1e1;
        real _t048A = 0.1e-4;
        real _t048B = prim +0017<$[]> (_t0489, _t048A);
        real _t048C = 0.1e1;
        real _t048D = 0.1e1;
        real _t048E = 0.1e1;
        vec3 _t048F = [_t048C, _t048D, _t048E];
        real _t0490 = prim •00CE<$[3]; $[3]; $[]> (_t048F, xn046D);
        bool _t0491 = prim >0080 (_t048B, _t0490);
        real _t0492 = 0.1e-4;
        real _t0493 = 0.1e-4;
        real _t0494 = 0.1e-4;
        vec3 _t0495 = [_t0492, _t0493, _t0494];
        vec3 _t0496 = prim +0017<$[3]> (_t0495, xn046D);
        real _t0497 = _t0496[0];
        real _t0498 = -0.e0;
        bool _t0499 = prim >0080 (_t0497, _t0498);
        real _t049A = 0.1e-4;
        real _t049B = 0.1e-4;
        real _t049C = 0.1e-4;
        vec3 _t049D = [_t049A, _t049B, _t049C];
        vec3 _t049E = prim +0017<$[3]> (_t049D, xn046D);
        real _t049F = _t049E[1];
        real _t04A0 = -0.e0;
        bool _t04A1 = prim >0080 (_t049F, _t04A0);
        real _t04A2 = 0.1e-4;
        real _t04A3 = 0.1e-4;
        real _t04A4 = 0.1e-4;
        vec3 _t04A5 = [_t04A2, _t04A3, _t04A4];
        vec3 _t04A6 = prim +0017<$[3]> (_t04A5, xn046D);
        real _t04A7 = _t04A6[2];
        real _t04A8 = -0.e0;
        bool _t04A9 = prim >0080 (_t04A7, _t04A8);
        bool _t04AA = prim $and01C4 (_t04A1, _t04A9);
        bool _t04AB = prim $and01C4 (_t0499, _t04AA);
        bool _t04AC = prim $and01C4 (_t0491, _t04AB);
        if _t04AC {
          Femdata: MeshPos _t04AD = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
          return _t04AD;
        }
      }
    }
  }
  cellInt046F = extractFemItem(StartCell(Mesh), int, mesh0468);
  int _t04AF = 0;
  int _t04B0 = 2;
  int _t04B1 = 1;
  int _t04B2 = prim +0015 (_t04B0, _t04B1);
  int _t04B3 = prim *0033 (_t04B2, numCell0472);
  int[] _t04B4 = prim $range01C3 (_t04AF, _t04B3);
  foreach itter04EF in _t04B4 {
    field(3)[3] _t04B5 = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3,3] _t04B6 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04B5);
    field(3)[3,3] _t04B7 = prim inv015E<#∞; %3> (_t04B6);
    real _t04B8 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04B9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t04BA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t04BB = [_t04B8, _t04B9, _t04BA];
    A047C = prim @00A5<#∞; %3; $[3,3]> (_t04B7, _t04BB);
    field(3)[3] _t04BC = femField(mesh0468,cellInt046F,field(3)[3],Transform,);
    field(3)[3] _t04BD = prim -002E<#∞; %3; $[3]> (_t04BC, pos0469);
    field(3)[3] _t04BE = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A047C, _t04BD);
    delta0483 = prim @00A5<#∞; %3; $[3]> (_t04BE, xn046D);
    xn046D = prim -0026<$[3]> (xn046D, delta0483);
    real _t04BF = 0.1e-7;
    real _t04C0 = 0.1e-7;
    real _t04C1 = prim *0034 (_t04BF, _t04C0);
    real _t04C2 = prim •00CE<$[3]; $[3]; $[]> (delta0483, delta0483);
    bool _t04C3 = prim >=007E (_t04C1, _t04C2);
    if _t04C3 {
      real _t04C4 = 0.1e1;
      real _t04C5 = 0.1e-4;
      real _t04C6 = prim +0017<$[]> (_t04C4, _t04C5);
      real _t04C7 = 0.1e1;
      real _t04C8 = 0.1e1;
      real _t04C9 = 0.1e1;
      vec3 _t04CA = [_t04C7, _t04C8, _t04C9];
      real _t04CB = prim •00CE<$[3]; $[3]; $[]> (_t04CA, xn046D);
      bool _t04CC = prim >0080 (_t04C6, _t04CB);
      real _t04CD = 0.1e-4;
      real _t04CE = 0.1e-4;
      real _t04CF = 0.1e-4;
      vec3 _t04D0 = [_t04CD, _t04CE, _t04CF];
      vec3 _t04D1 = prim +0017<$[3]> (_t04D0, xn046D);
      real _t04D2 = _t04D1[0];
      real _t04D3 = -0.e0;
      bool _t04D4 = prim >0080 (_t04D2, _t04D3);
      real _t04D5 = 0.1e-4;
      real _t04D6 = 0.1e-4;
      real _t04D7 = 0.1e-4;
      vec3 _t04D8 = [_t04D5, _t04D6, _t04D7];
      vec3 _t04D9 = prim +0017<$[3]> (_t04D8, xn046D);
      real _t04DA = _t04D9[1];
      real _t04DB = -0.e0;
      bool _t04DC = prim >0080 (_t04DA, _t04DB);
      real _t04DD = 0.1e-4;
      real _t04DE = 0.1e-4;
      real _t04DF = 0.1e-4;
      vec3 _t04E0 = [_t04DD, _t04DE, _t04DF];
      vec3 _t04E1 = prim +0017<$[3]> (_t04E0, xn046D);
      real _t04E2 = _t04E1[2];
      real _t04E3 = -0.e0;
      bool _t04E4 = prim >0080 (_t04E2, _t04E3);
      bool _t04E5 = prim $and01C4 (_t04DC, _t04E4);
      bool _t04E6 = prim $and01C4 (_t04D4, _t04E5);
      bool _t04E7 = prim $and01C4 (_t04CC, _t04E6);
      if _t04E7 {
        Femdata: MeshPos _t04E8 = extractFemItemN((mesh0468, cellInt046F, xn046D, pos0469),AllBuild(MeshPos),);
        return _t04E8;
      }
    }
    int _t04E9 = 1;
    newtonInt046E = prim +0015 (newtonInt046E, _t04E9);
    int _t04EA = 2;
    bool _t04EB = prim >=007D (newtonInt046E, _t04EA);
    if _t04EB {
      newtonInt046E = 0;
      bool _t04EC = prim >=007D (cellInt046F, numCell0472);
      if _t04EC {
        Femdata: MeshPos _t04ED = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
        return _t04ED;
      } else {
        int _t04EE = 1;
        cellInt046F = prim +0015 (cellInt046F, _t04EE);
      }
    }
  }
  string _t04F0 = "Bad end 2";
  string _t04F1 = "\n";
  print (_t04F0, _t04F1);
  Femdata: MeshPos _t04F2 = extractFemItemN((mesh0468),InvalidBuild(MeshPos),);
  return _t04F2;
}
function int[2]#5 nextCell40571 (int faceIdx09CB, int cell09CC, Femdata: Mesh mesh09CD)
{
  int _t09CE = 8;
  int _t09CF = prim *0033 (cell09CC, _t09CE);
  int _t09D0 = 2;
  int _t09D1 = prim *0033 (faceIdx09CB, _t09D0);
  int _t09D2 = prim +0015 (_t09CF, _t09D1);
  int[2] _t09D3 = extractFemItemN((mesh09CD, _t09D2),CellFaceCell(Mesh),);
  return _t09D3;
}
globalInit {
  int _t0433 = 0;
  int _t0431 = 1;
  int _t0435 = extractFemItem(NumCell(Mesh), int, a042F);
  int _t0434 = prim -0024 (_t0435, _t0431);
  int[] _t0438 = prim $range01C3 (_t0433, _t0434);
  Femdata: MeshCell[] _t0439 = {};
  foreach _t0437 in _t0438 {
    Femdata: MeshCell _t043A = loadFem(MeshCell, a042F, _t0437);
    _t0439 = prim @0010<Femdata: MeshCell> (_t0439, _t043A);
  }
  b043B = loadFem(Space, 0b043B_intermedateGlobal043C, a042F);
  c043D = loadFem(FemFunc, 0c043D_intermedateGlobal043E, b043B);
  Femdata: Space _t101D = extractFem(c043D, Space);
  Femdata: Space _t101E = extractFem(c043D, Space);
  Femdata: Mesh _t101F = extractFem(_t101E, Mesh);
  field(3)[] _t1020 = femField(c043D,_t101F,field(3)[],refField,findPos0467 );
  Femdata: Space _t1021 = extractFem(c043D, Space);
  Femdata: Mesh _t1022 = extractFem(_t1021, Mesh);
  Femdata: Space _t1023 = extractFem(c043D, Space);
  Femdata: Mesh _t1024 = extractFem(_t1023, Mesh);
  Femdata: Space _t1025 = extractFem(c043D, Space);
  Femdata: Mesh _t1026 = extractFem(_t1025, Mesh);
  field(3)[3] _t1027 = femField(_t1022,_t1026,field(3)[3],InvTransform,findPos0467 );
  V1028 = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t1020, _t1027);
  field(3)[] _t1029 = prim -002E<#∞; %3; $[]> (V1028, isoval043F);
  field#4(3)[] _t102A = (field#4(3)[])_t1029;
  F102B = _t102A;
  I1031 = loadImage<IMAGE1D<double[3]>>("cmap.nrrd");
  kernel _t1032 = tent;
  IMAGE1D<double[3]> img1033 = clamp(I1031);
  cmap1034 = prim ⊛0074<#0; %1; $[3]> (_t1032, img1033);
  vec3 _t1046 = prim -0026<$[3]> (camAt0445, camEye0441);
  camDist1047 = prim |()|00B5<$[3]> (_t1046);
  vec3 _t1048 = prim -0026<$[3]> (camAt0445, camEye0441);
  camN1049 = prim normalize0137<$[3]> (_t1048);
  vec3 _t104A = prim ×00BE (camN1049, camUp0449);
  camU104B = prim normalize0137<$[3]> (_t104A);
  camV104C = prim ×00BE (camU104B, camN1049);
  real _t104D = 0.314159265358979323846264338327950288e1;
  real _t104E = prim *0034 (camFOV044D, _t104D);
  real _t104F = 0.36e3;
  real _t1050 = prim /0055 (_t104E, _t104F);
  real _t1051 = prim tan0179 (_t1050);
  camVmax1052 = prim *0034 (_t1051, camDist1047);
  real _t1053 = (real)iresU044E;
  real _t1054 = prim *0034 (camVmax1052, _t1053);
  real _t1055 = (real)iresV044F;
  camUmax1056 = prim /0055 (_t1054, _t1055);
  tensor[3,3] _t1057 = [camU104B, camV104C, camN1049];
  tensor[3,3] _t1058 = prim transpose0145<%3; %3> (_t1057);
  vec3 _t1059 = prim normalize0137<$[3]> (lightVsp0454);
  light105A = prim •00CE<$[3,3]; $[3]; $[3]> (_t1058, _t1059);
}
strand raycast (int ui105B, int vi105C) {
  real rayU105D;
  real rayV1064;
  real rayN106B;
  vec3 rayVec106C;
  real transp1071;
  vec3 rgb1072;
  output vec4 rgba1076;
  output real gray107B;
  int ui10E3;
  int vi10E2;
  {
    real _t105E = prim unary -008B<$[]> (camUmax1056);
    real _t105F = -0.5e0;
    real _t1060 = (real)ui105B;
    real _t1061 = (real)iresU044E;
    real _t1062 = 0.5e0;
    real _t1063 = prim -0026<$[]> (_t1061, _t1062);
    rayU105D = prim lerp0098<$[]> (_t105E, camUmax1056, _t105F, _t1060, _t1063);
    real _t1065 = prim unary -008B<$[]> (camVmax1052);
    real _t1066 = -0.5e0;
    real _t1067 = (real)vi105C;
    real _t1068 = (real)iresV044F;
    real _t1069 = 0.5e0;
    real _t106A = prim -0026<$[]> (_t1068, _t1069);
    rayV1064 = prim lerp0098<$[]> (camVmax1052, _t1065, _t1066, _t1067, _t106A);
    rayN106B = camNear0450;
    vec3 _t106D = prim *0036<$[3]> (rayU105D, camU104B);
    vec3 _t106E = prim *0036<$[3]> (rayV1064, camV104C);
    vec3 _t106F = prim +0017<$[3]> (_t106D, _t106E);
    vec3 _t1070 = prim /0057<$[3]> (_t106F, camDist1047);
    rayVec106C = prim +0017<$[3]> (camN1049, _t1070);
    transp1071 = 0.1e1;
    real _t1073 = 0.e0;
    real _t1074 = 0.e0;
    real _t1075 = 0.e0;
    rgb1072 = [_t1073, _t1074, _t1075];
    real _t1077 = 0.e0;
    real _t1078 = 0.e0;
    real _t1079 = 0.e0;
    real _t107A = 0.e0;
    rgba1076 = [_t1077, _t1078, _t1079, _t107A];
    gray107B = 0.e0;
    ui10E3 = ui105B;
    vi10E2 = vi105C;
  }
  update
  {
    if debug045A {
      bool _t107C;
      bool _t107D = prim !=0086 (ui10E3, su045B);
      if _t107D {
        _t107C = true;
      } else {
        _t107C = prim !=0086 (vi10E2, sv045C);
      }
      if _t107C {
        stabilize;
      }
    }
    vec3 _t107E = prim *0036<$[3]> (rayN106B, rayVec106C);
    vec3 x107F = prim +0017<$[3]> (camEye0441, _t107E);
    real _t1080 = 0.e0;
    real _t1081 = x107F[0];
    bool _t1082 = prim <007A (_t1080, _t1081);
    if _t1082 {
      real _t1083 = x107F[0];
      real _t1084 = 0.1e1;
      bool _t1085 = prim <007A (_t1083, _t1084);
      if _t1085 {
        real _t1086 = 0.e0;
        real _t1087 = x107F[1];
        bool _t1088 = prim <007A (_t1086, _t1087);
        if _t1088 {
          real _t1089 = x107F[1];
          real _t108A = 0.1e1;
          bool _t108B = prim <007A (_t1089, _t108A);
          if _t108B {
            real _t108C = 0.e0;
            real _t108D = x107F[2];
            bool _t108E = prim <007A (_t108C, _t108D);
            if _t108E {
              real _t108F = x107F[2];
              real _t1090 = 0.1e1;
              bool _t1091 = prim <007A (_t108F, _t1090);
              if _t1091 {
                Femdata: MeshPos p1092 = func findPos0467 (a042F, x107F);
                bool _t1093 = extractFemItem(Valid(MeshPos), bool, p1092);
                if _t1093 {
                  real val1094 = prim @00A5<#4; %3; $[]> (F102B, x107F);
                  field#3(3)[3] _t1095 = prim ∇00A8<#4; %3> (F102B);
                  vec3 _t1096 = prim @00A5<#3; %3; $[3]> (_t1095, x107F);
                  vec3 grad1097 = prim unary -008B<$[3]> (_t1096);
                  real _t1098 = prim |()|00B5<$[3]> (grad1097);
                  real _t1099;
                  real _t10D8 = 0.e0;
                  real _t10D9 = 0.1e1;
                  real _t10DA = 0.13e1;
                  real _t10DB = 0.1e1;
                  real _t10DC = prim |()|00B5<$[]> (val1094);
                  real _t10DD = prim *0034 (_t1098, thick0440);
                  real _t10DE = prim /0055 (_t10DC, _t10DD);
                  real _t10DF = prim -0026<$[]> (_t10DB, _t10DE);
                  real _t10E0 = prim *0034 (_t10DA, _t10DF);
                  real _t10E1 = prim clamp0094<$[]> (_t10D8, _t10D9, _t10E0);
                  _t1099 = _t10E1;
                  real _t109A;
                  real _t10D7 = 0.1e1;
                  _t109A = _t10D7;
                  real a109B = prim *0034 (_t1099, _t109A);
                  real _t109C = 0.e0;
                  bool _t109D = prim >0080 (a109B, _t109C);
                  if _t109D {
                    real _t109E = 0.1e1;
                    real _t109F = 0.1e1;
                    real _t10A0 = prim -0026<$[]> (_t109F, a109B);
                    real _t10A1 = prim |()|00B5<$[3]> (rayVec106C);
                    real _t10A2 = prim *0034 (rayStep0453, _t10A1);
                    real _t10A3 = prim /0055 (_t10A2, refStep0452);
                    real _t10A4 = prim pow018E (_t10A0, _t10A3);
                    a109B = prim -0026<$[]> (_t109E, _t10A4);
                    real _t10A5 = 0.11e1;
                    real _t10A6 = 0.7e0;
                    real depth10A7 = prim lerp0098<$[]> (_t10A5, _t10A6, camNear0450, rayN106B, camFar0451);
                    real _t10A8 = 0.e0;
                    vec3 _t10A9 = prim normalize0137<$[3]> (grad1097);
                    real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, light105A);
                    real shade10AB = prim max0125 (_t10A8, _t10AA);
                    real _t10AC = prim *0034 (transp1071, a109B);
                    real _t10AD = prim *0034 (_t10AC, depth10A7);
                    real _t10AE = prim *0034 (phongKd0459, shade10AB);
                    real _t10AF = prim +0017<$[]> (phongKa0458, _t10AE);
                    real _t10B0 = prim *0034 (_t10AD, _t10AF);
                    vec3 _t10B1;
                    real _t10D5 = prim @00A5<#∞; %3; $[]> (V1028, x107F);
                    vec3 _t10D6 = prim @00A5<#0; %1; $[3]> (cmap1034, _t10D5);
                    _t10B1 = _t10D6;
                    vec3 _t10B2 = prim *0036<$[3]> (_t10B0, _t10B1);
                    rgb1072 = prim +0017<$[3]> (rgb1072, _t10B2);
                    real _t10B3 = 0.1e1;
                    real _t10B4 = prim -0026<$[]> (_t10B3, a109B);
                    transp1071 = prim *0034 (transp1071, _t10B4);
                  }
                  string _t10B5 = "yay!\n";
                  print (_t10B5);
                } else {
                  string _t10B6 = "\n";
                  print (x107F, _t10B6);
                  string _t10B7 = "wait what\?\n";
                  print (_t10B7);
                }
              }
            }
          }
        }
      }
    }
    real _t10B8 = 0.1e-1;
    bool _t10B9 = prim <007A (transp1071, _t10B8);
    if _t10B9 {
      transp1071 = 0.e0;
      stabilize;
    }
    bool _t10BA = prim >0080 (rayN106B, camFar0451);
    if _t10BA {
      stabilize;
    }
    rayN106B = prim +0017<$[]> (rayN106B, rayStep0453);
  }
  stabilize
  {
    real _t10BB = 0.1e1;
    real a10BC = prim -0026<$[]> (_t10BB, transp1071);
    real _t10BD = 0.e0;
    bool _t10BE = prim >0080 (a10BC, _t10BD);
    if _t10BE {
      real _t10BF = rgb1072[0];
      real _t10C0 = prim /0055 (_t10BF, a10BC);
      real _t10C1 = rgb1072[1];
      real _t10C2 = prim /0055 (_t10C1, a10BC);
      real _t10C3 = rgb1072[2];
      real _t10C4 = prim /0055 (_t10C3, a10BC);
      rgba1076 = [_t10C0, _t10C2, _t10C4, a10BC];
    }
    bool _t10C5 = prim ==0082 (ui10E3, su045B);
    if _t10C5 {
      bool _t10C6 = prim ==0082 (vi10E2, sv045C);
      if _t10C6 {
        if debug045A {
          print (a10BC, rgba1076);
        }
      }
    }
  }
}
grid(2) {
  int _t10C7 = 0;
  int _t10C8 = 1;
  int _t10C9 = prim -0024 (iresV044F, _t10C8);
  int[] _t10CA = prim $range01C3 (_t10C7, _t10C9);
  foreach vi10D0 in _t10CA {
    int _t10CB = 0;
    int _t10CC = 1;
    int _t10CD = prim -0024 (iresU044E, _t10CC);
    int[] _t10CE = prim $range01C3 (_t10CB, _t10CD);
    foreach ui10CF in _t10CE {
      new raycast (ui10CF, vi10D0);
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10E4 (a) = <no-default>
  input 0b043B_intermedateGlobal10E5 (b) = <no-default>
  input 0c043D_intermedateGlobal10E6 (c) = <no-default>
  input isoval10E7 (isoval) = <default>
  input thick10E8 (thick) = <default>
  input camEye10E9 (camEye) = <default>
  input camAt10EA (camAt) = <default>
  input camUp10EB (camUp) = <default>
  input camFOV10EC (camFOV) = <default>
  input iresU10ED (iresU) = <default>
  input iresV10EE (iresV) = <default>
  input camNear10EF (camNear) = <default>
  input camFar10F0 (camFar) = <default>
  input refStep10F1 (refStep) = <default>
  input rayStep10F2 (rayStep) = <default>
  input lightVsp10F3 (lightVsp) = <default>
  input phongKa10F4 (phongKa) = <default>
  input phongKd10F5 (phongKd) = <default>
  input debug10F6 (debug) = <default>
  input su10F7 (su) = <default>
  input sv10F8 (sv) = <default>
  global femData:Space b1149
  global femData:FemFunc c114A
  global field V114B
  global field F114C
  global image(IMAGE1D<double[3]>) I114D
  global field cmap114E
  global real camDist114F
  global tensor[3] camN1150
  global tensor[3] camU1151
  global tensor[3] camV1152
  global real camVmax1153
  global real camUmax1154
  global tensor[3] light1155
## functions
  function femData:MeshPos findPos129A (femData:Mesh mesh1156#16, tensor[3] pos1157#5) {
    ENTRY1299:  preds = []
      real _t1158#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t115A#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t115C#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn115E#1 = <tensor[3]>[_t1158,_t115A,_t115C];
      int newtonInt1160#1 = 0;
      int cellInt1162#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1156);
      int _t1164#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1156);
      int _t1166#1 = 1;
      int numCell1168#2 = ISub(_t1164,_t1166);
      int[] yayCells116A#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1156,pos1157);
    FOREACH116E:  preds = [ASSIGN116B,NEXT11EF]
      foreach (cellItter116C in yayCells116A) on exit goto ASSIGN11F1
        int cellInt1170#0 = phi(cellInt1162,cellInt116F)
        tensor[3] xn116D#2 = phi(xn115E,xn1189)
      int cellInt116F#4 = cellItter116C;
      field _t1172#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt116F,mesh1156,mesh1156);
      field _t1174#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1172);
      field _t1176#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1174);
      real _t1178#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t117A#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t117C#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t117E#1 = <tensor[3]>[_t1178,_t117A,_t117C];
      tensor[3,3] A1180#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1176,_t117E);
      int _t1182#1 = 0;
      int _t1184#1 = 2;
      int[] _t1186#1 = Range(_t1182,_t1184);
    FOREACH118A:  preds = [ASSIGN1187,NEXT11EE]
      foreach (newtonItter1188 in _t1186) on exit goto NEXT11EF
        tensor[3] xn1189#3 = phi(xn116D,xn1193)
      field _t118B#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt116F,mesh1156,mesh1156);
      field _t118D#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1157,_t118B);
      field _t118F#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1180,_t118D);
      tensor[3] delta1191#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t118F,xn1189);
      tensor[3] xn1193#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1189,delta1191);
      real _t1195#1 = 0.1e-7;
      real _t1197#1 = 0.1e-7;
      real _t1199#1 = λ(T0[],T1[])<(T0 * T1)> (_t1195,_t1197);
      real _t119B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1191,delta1191);
      bool _t119D#1 = GTE<real>(_t1199,_t119B);
      if _t119D then goto ASSIGN11A1 else goto JOIN119F
    ASSIGN11A1:  preds = [COND11ED]
      real _t11A0#1 = 0.1e1;
      real _t11A2#1 = 0.1e-4;
      real _t11A4#1 = λ(T0[],T1[])<(T0 + T1)> (_t11A0,_t11A2);
      real _t11A6#1 = 0.1e1;
      real _t11A8#1 = 0.1e1;
      real _t11AA#1 = 0.1e1;
      tensor[3] _t11AC#1 = <tensor[3]>[_t11A6,_t11A8,_t11AA];
      real _t11AE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t11AC,xn1193);
      bool _t11B0#1 = GT<real>(_t11A4,_t11AE);
      real _t11B2#1 = 0.1e-4;
      real _t11B4#1 = 0.1e-4;
      real _t11B6#1 = 0.1e-4;
      tensor[3] _t11B8#1 = <tensor[3]>[_t11B2,_t11B4,_t11B6];
      tensor[3] _t11BA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t11B8,xn1193);
      real _t11BC#1 = TensorIndex<tensor[3],[0]>(_t11BA);
      real _t11BE#1 = -0.e0;
      bool _t11C0#1 = GT<real>(_t11BC,_t11BE);
      real _t11C2#1 = 0.1e-4;
      real _t11C4#1 = 0.1e-4;
      real _t11C6#1 = 0.1e-4;
      tensor[3] _t11C8#1 = <tensor[3]>[_t11C2,_t11C4,_t11C6];
      tensor[3] _t11CA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t11C8,xn1193);
      real _t11CC#1 = TensorIndex<tensor[3],[1]>(_t11CA);
      real _t11CE#1 = -0.e0;
      bool _t11D0#1 = GT<real>(_t11CC,_t11CE);
      real _t11D2#1 = 0.1e-4;
      real _t11D4#1 = 0.1e-4;
      real _t11D6#1 = 0.1e-4;
      tensor[3] _t11D8#1 = <tensor[3]>[_t11D2,_t11D4,_t11D6];
      tensor[3] _t11DA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t11D8,xn1193);
      real _t11DC#1 = TensorIndex<tensor[3],[2]>(_t11DA);
      real _t11DE#1 = -0.e0;
      bool _t11E0#1 = GT<real>(_t11DC,_t11DE);
      bool _t11E2#1 = BAnd(_t11D0,_t11E0);
      bool _t11E4#1 = BAnd(_t11C0,_t11E2);
      bool _t11E6#1 = BAnd(_t11B0,_t11E4);
      if _t11E6 then goto ASSIGN11EA else goto JOIN11E8
    ASSIGN11EA:  preds = [COND11EC]
      femData:MeshPos _t11E9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellInt116F,xn1193,pos1157);
      return _t11E9
      goto JOIN11E8
    JOIN11E8:  preds = [*RETURN(_t11E9)11EB,COND11EC]
      goto JOIN119F
    JOIN119F:  preds = [JOIN11E8,COND11ED]
      goto FOREACH118A
    NEXT11EF:  preds = [FOREACH118A]
      goto FOREACH116E
    ASSIGN11F1:  preds = [FOREACH116E]
      int cellInt11F0#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1156);
      int _t11F2#1 = 0;
      int _t11F4#1 = 2;
      int _t11F6#1 = 1;
      int _t11F8#1 = IAdd(_t11F4,_t11F6);
      int _t11FA#1 = IMul(_t11F8,numCell1168);
      int[] _t11FC#1 = Range(_t11F2,_t11FA);
    FOREACH1202:  preds = [ASSIGN11FD,NEXT1290]
      foreach (itter11FE in _t11FC) on exit goto ASSIGN1292
        int cellInt1201#6 = phi(cellInt11F0,cellInt128E)
        int newtonInt1200#1 = phi(newtonInt1160,newtonInt1280)
        tensor[3] xn11FF#2 = phi(xn116D,xn121B)
      field _t1203#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1201,mesh1156,mesh1156);
      field _t1205#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1203);
      field _t1207#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1205);
      real _t1209#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t120B#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t120D#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t120F#1 = <tensor[3]>[_t1209,_t120B,_t120D];
      tensor[3,3] A1211#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1207,_t120F);
      field _t1213#1 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1201,mesh1156,mesh1156);
      field _t1215#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1157,_t1213);
      field _t1217#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1211,_t1215);
      tensor[3] delta1219#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1217,xn11FF);
      tensor[3] xn121B#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn11FF,delta1219);
      real _t121D#1 = 0.1e-7;
      real _t121F#1 = 0.1e-7;
      real _t1221#1 = λ(T0[],T1[])<(T0 * T1)> (_t121D,_t121F);
      real _t1223#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1219,delta1219);
      bool _t1225#1 = GTE<real>(_t1221,_t1223);
      if _t1225 then goto ASSIGN1229 else goto JOIN1227
    ASSIGN1229:  preds = [COND1275]
      real _t1228#1 = 0.1e1;
      real _t122A#1 = 0.1e-4;
      real _t122C#1 = λ(T0[],T1[])<(T0 + T1)> (_t1228,_t122A);
      real _t122E#1 = 0.1e1;
      real _t1230#1 = 0.1e1;
      real _t1232#1 = 0.1e1;
      tensor[3] _t1234#1 = <tensor[3]>[_t122E,_t1230,_t1232];
      real _t1236#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1234,xn121B);
      bool _t1238#1 = GT<real>(_t122C,_t1236);
      real _t123A#1 = 0.1e-4;
      real _t123C#1 = 0.1e-4;
      real _t123E#1 = 0.1e-4;
      tensor[3] _t1240#1 = <tensor[3]>[_t123A,_t123C,_t123E];
      tensor[3] _t1242#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1240,xn121B);
      real _t1244#1 = TensorIndex<tensor[3],[0]>(_t1242);
      real _t1246#1 = -0.e0;
      bool _t1248#1 = GT<real>(_t1244,_t1246);
      real _t124A#1 = 0.1e-4;
      real _t124C#1 = 0.1e-4;
      real _t124E#1 = 0.1e-4;
      tensor[3] _t1250#1 = <tensor[3]>[_t124A,_t124C,_t124E];
      tensor[3] _t1252#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1250,xn121B);
      real _t1254#1 = TensorIndex<tensor[3],[1]>(_t1252);
      real _t1256#1 = -0.e0;
      bool _t1258#1 = GT<real>(_t1254,_t1256);
      real _t125A#1 = 0.1e-4;
      real _t125C#1 = 0.1e-4;
      real _t125E#1 = 0.1e-4;
      tensor[3] _t1260#1 = <tensor[3]>[_t125A,_t125C,_t125E];
      tensor[3] _t1262#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1260,xn121B);
      real _t1264#1 = TensorIndex<tensor[3],[2]>(_t1262);
      real _t1266#1 = -0.e0;
      bool _t1268#1 = GT<real>(_t1264,_t1266);
      bool _t126A#1 = BAnd(_t1258,_t1268);
      bool _t126C#1 = BAnd(_t1248,_t126A);
      bool _t126E#1 = BAnd(_t1238,_t126C);
      if _t126E then goto ASSIGN1272 else goto JOIN1270
    ASSIGN1272:  preds = [COND1274]
      femData:MeshPos _t1271#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellInt1201,xn121B,pos1157);
      return _t1271
      goto JOIN1270
    JOIN1270:  preds = [*RETURN(_t1271)1273,COND1274]
      goto JOIN1227
    JOIN1227:  preds = [JOIN1270,COND1275]
      int _t1276#1 = 1;
      int newtonInt1278#2 = IAdd(newtonInt1200,_t1276);
      int _t127A#1 = 2;
      bool _t127C#1 = GTE<int>(newtonInt1278,_t127A);
      if _t127C then goto ASSIGN1281 else goto JOIN127E
    ASSIGN1281:  preds = [COND128F]
      int newtonInt127F#1 = 0;
      bool _t1282#1 = GTE<int>(cellInt1201,numCell1168);
      if _t1282 then goto ASSIGN1286 else goto ASSIGN1289
    ASSIGN1286:  preds = [COND128D]
      femData:MeshPos _t1285#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1285
      goto JOIN1284
    JOIN1284:  preds = [*RETURN(_t1285)1287,ASSIGN128C]
      int cellInt128B#1 = phi(cellInt128A)
      goto JOIN127E
    JOIN127E:  preds = [JOIN1284,COND128F]
      int cellInt128E#1 = phi(cellInt128B,cellInt1201)
      int newtonInt1280#1 = phi(newtonInt127F,newtonInt1278)
      goto FOREACH1202
    ASSIGN1289:  preds = [COND128D]
      int _t1288#1 = 1;
      int cellInt128A#1 = IAdd(cellInt1201,_t1288);
      goto JOIN1284
    ASSIGN1292:  preds = [FOREACH1202]
      string _t1291#1 = "Bad end 2";
      string _t1293#1 = "\n";
      Print<[string,string]>(_t1291,_t1293);
      femData:MeshPos _t1296#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1296
}
  function int[2] nextCell412AC (int faceIdx129B#1, int cell129C#1, femData:Mesh mesh129D#1) {
    ENTRY12AB:  preds = []
      int _t129E#1 = 8;
      int _t12A0#1 = IMul(cell129C,_t129E);
      int _t12A2#1 = 2;
      int _t12A4#1 = IMul(faceIdx129B,_t12A2);
      int _t12A6#1 = IAdd(_t12A0,_t12A4);
      int[2] _t12A8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh129D,_t12A6);
      return _t12A8
}
## input initialization
  ENTRY1147:  preds = []
    real isoval10F9#1 = 0.2e0;
    globals.isoval10E7 = isoval10F9;
    real thick10FC#1 = 0.7e-1;
    globals.thick10E8 = thick10FC;
    real _t10FF#1 = 0.3e1;
    real _t1101#1 = -0.3e1;
    real _t1103#1 = 0.3e1;
    tensor[3] camEye1105#1 = <tensor[3]>[_t10FF,_t1101,_t1103];
    globals.camEye10E9 = camEye1105;
    real _t1108#1 = 0.5e0;
    real _t110A#1 = 0.5e0;
    real _t110C#1 = 0.5e0;
    tensor[3] camAt110E#1 = <tensor[3]>[_t1108,_t110A,_t110C];
    globals.camAt10EA = camAt110E;
    real _t1111#1 = 0.e0;
    real _t1113#1 = 0.e0;
    real _t1115#1 = 0.1e1;
    tensor[3] camUp1117#1 = <tensor[3]>[_t1111,_t1113,_t1115];
    globals.camUp10EB = camUp1117;
    real camFOV111A#1 = 0.137e2;
    globals.camFOV10EC = camFOV111A;
    int iresU111D#1 = 500;
    globals.iresU10ED = iresU111D;
    int iresV1120#1 = 500;
    globals.iresV10EE = iresV1120;
    real camNear1123#1 = -0.2e1;
    globals.camNear10EF = camNear1123;
    real camFar1126#1 = 0.5e1;
    globals.camFar10F0 = camFar1126;
    real refStep1129#1 = 0.1e1;
    globals.refStep10F1 = refStep1129;
    real rayStep112C#1 = 0.1e-1;
    globals.rayStep10F2 = rayStep112C;
    real _t112F#1 = 0.e0;
    real _t1131#1 = 0.e0;
    real _t1133#1 = 0.1e1;
    tensor[3] lightVsp1135#1 = <tensor[3]>[_t112F,_t1131,_t1133];
    globals.lightVsp10F3 = lightVsp1135;
    real phongKa1138#1 = 0.1e0;
    globals.phongKa10F4 = phongKa1138;
    real phongKd113B#1 = 0.9e0;
    globals.phongKd10F5 = phongKd113B;
    bool debug113E#1 = false;
    globals.debug10F6 = debug113E;
    int su1141#1 = 250;
    globals.su10F7 = su1141;
    int sv1144#1 = 250;
    globals.sv10F8 = sv1144;
    return
## global-variable initialization
  ENTRY1338:  preds = []
    femData:Mesh a12B7#3 = globals.a10E4;
    femData:Space 0b043B_intermedateGlobal12B6#1 = globals.0b043B_intermedateGlobal10E5;
    femData:FemFunc 0c043D_intermedateGlobal12B5#1 = globals.0c043D_intermedateGlobal10E6;
    real isoval12B4#1 = globals.isoval10E7;
    tensor[3] camEye12B3#2 = globals.camEye10E9;
    tensor[3] camAt12B2#2 = globals.camAt10EA;
    tensor[3] camUp12B1#1 = globals.camUp10EB;
    real camFOV12B0#1 = globals.camFOV10EC;
    int iresU12AF#1 = globals.iresU10ED;
    int iresV12AE#1 = globals.iresV10EE;
    tensor[3] lightVsp12AD#2 = globals.lightVsp10F3;
    int _t12C3#1 = 0;
    int _t12C5#1 = 1;
    int _t12C7#1 = ExtractFemItem<int,NumCell(Mesh)>(a12B7);
    int _t12C9#1 = ISub(_t12C7,_t12C5);
    int[] _t12CB#1 = Range(_t12C3,_t12C9);
    femData:MeshCell[] _t12CD#1 = <femData:MeshCell[]>{};
  FOREACH12D1:  preds = [ASSIGN12CE,NEXT12D6]
    foreach (_t12CF in _t12CB) on exit goto ASSIGN12D8
      femData:MeshCell[] _t12D0#1 = phi(_t12CD,_t12D4)
    femData:MeshCell _t12D2#1 = LoadFem<femData:MeshCell>(a12B7,_t12CF);
    femData:MeshCell[] _t12D4#1 = Append<femData:MeshCell>(_t12D0,_t12D2);
    goto FOREACH12D1
  ASSIGN12D8:  preds = [FOREACH12D1]
    femData:Space b12D7#2 = LoadFem<femData:Space>(0b043B_intermedateGlobal12B6,a12B7);
    globals.b1149 = b12D7;
    femData:FemFunc c12DA#7 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal12B5,b12D7);
    globals.c114A = c12DA;
    femData:Space _t12DD#1 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Space _t12DF#1 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12E1#1 = ExtractFem<femData:Mesh,femData:Space>(_t12DF);
    field _t12E3#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(129A, 0, 1, 2)⊛Basis()> (_t12E1,_t12DD,c12DA);
    femData:Space _t12E5#1 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12E7#2 = ExtractFem<femData:Mesh,femData:Space>(_t12E5);
    femData:Space _t12E9#1 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12EB#0 = ExtractFem<femData:Mesh,femData:Space>(_t12E9);
    femData:Space _t12ED#1 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12EF#1 = ExtractFem<femData:Mesh,femData:Space>(_t12ED);
    field _t12F1#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(129A, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t12EF,_t12E7,_t12E7);
    field V12F3#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t12E3,_t12F1);
    globals.V114B = V12F3;
    field _t12F6#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval12B4,V12F3);
    field _t12F8#1 = _t12F6;
    field F12FA#1 = _t12F8;
    globals.F114C = F12FA;
    image(IMAGE1D<double[3]>) I12FD#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I114D = I12FD;
    kernel _t1300#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1302#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I12FD);
    field cmap1304#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1302,_t1300);
    globals.cmap114E = cmap1304;
    tensor[3] _t1307#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt12B2,camEye12B3);
    real camDist1309#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1307);
    globals.camDist114F = camDist1309;
    tensor[3] _t130C#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt12B2,camEye12B3);
    tensor[3] camN130E#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t130C,_t130C);
    globals.camN1150 = camN130E;
    tensor[3] _t1311#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN130E,camUp12B1);
    tensor[3] camU1313#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1311,_t1311);
    globals.camU1151 = camU1313;
    tensor[3] camV1316#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1313,camN130E);
    globals.camV1152 = camV1316;
    real _t1319#1 = 0.314159265358979323846264338327950288e1;
    real _t131B#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV12B0,_t1319);
    real _t131D#1 = 0.36e3;
    real _t131F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t131B,_t131D);
    real _t1321#1 = λ(T0[])<Tangent(T0)> (_t131F);
    real camVmax1323#2 = λ(T0[],T1[])<(T0 * T1)> (_t1321,camDist1309);
    globals.camVmax1153 = camVmax1323;
    real _t1326#1 = IntToReal(iresU12AF);
    real _t1328#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1323,_t1326);
    real _t132A#1 = IntToReal(iresV12AE);
    real camUmax132C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1328,_t132A);
    globals.camUmax1154 = camUmax132C;
    tensor[3,3] _t132F#1 = <tensor[3,3]>[camU1313,camV1316,camN130E];
    tensor[3,3] _t1331#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t132F);
    tensor[3] _t1333#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp12AD,lightVsp12AD);
    tensor[3] light1335#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1331,_t1333);
    globals.light1155 = light1335;
    return
## strand
  strand raycast (int ui1357#2, int vi1358#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY13C1:  preds = []
        int iresU136B#1 = globals.iresU10ED;
        int iresV136A#1 = globals.iresV10EE;
        real camNear1369#1 = globals.camNear10EF;
        real camDist1368#1 = globals.camDist114F;
        tensor[3] camN1367#1 = globals.camN1150;
        tensor[3] camU1366#1 = globals.camU1151;
        tensor[3] camV1365#1 = globals.camV1152;
        real camVmax1364#2 = globals.camVmax1153;
        real camUmax1363#2 = globals.camUmax1154;
        real _t137F#1 = λ(T0[])<Neg(T0)> (camUmax1363);
        real _t1381#1 = -0.5e0;
        real _t1383#1 = IntToReal(ui1357);
        real _t1385#1 = IntToReal(iresU136B);
        real _t1387#1 = 0.5e0;
        real _t1389#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1385,_t1387);
        real rayU138B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t137F,camUmax1363,_t1381,_t1383,_t1389);
        real _t138D#1 = λ(T0[])<Neg(T0)> (camVmax1364);
        real _t138F#1 = -0.5e0;
        real _t1391#1 = IntToReal(vi1358);
        real _t1393#1 = IntToReal(iresV136A);
        real _t1395#1 = 0.5e0;
        real _t1397#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1393,_t1395);
        real rayV1399#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax1364,_t138D,_t138F,_t1391,_t1397);
        real rayN139B#1 = camNear1369;
        tensor[3] _t139D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU138B,camU1366);
        tensor[3] _t139F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1399,camV1365);
        tensor[3] _t13A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t139D,_t139F);
        tensor[3] _t13A3#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t13A1,camDist1368);
        tensor[3] rayVec13A5#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1367,_t13A3);
        real transp13A7#1 = 0.1e1;
        real _t13A9#1 = 0.e0;
        real _t13AB#1 = 0.e0;
        real _t13AD#1 = 0.e0;
        tensor[3] rgb13AF#1 = <tensor[3]>[_t13A9,_t13AB,_t13AD];
        real _t13B1#1 = 0.e0;
        real _t13B3#1 = 0.e0;
        real _t13B5#1 = 0.e0;
        real _t13B7#1 = 0.e0;
        tensor[4] rgba13B9#1 = <tensor[4]>[_t13B1,_t13B3,_t13B5,_t13B7];
        real gray13BB#1 = 0.e0;
        int ui13BD#1 = ui1357;
        int vi13BF#1 = vi1358;
        self.rayU = rayU138B;
        self.rayV = rayV1399;
        self.rayN = rayN139B;
        self.rayVec = rayVec13A5;
        self.transp = transp13A7;
        self.rgb = rgb13AF;
        self.rgba = rgba13B9;
        self.gray = gray13BB;
        self.ui = ui13BD;
        self.vi = vi13BF;
        return
    end state init
    method update
        ENTRY14E8:  preds = []
          femData:Mesh a13DC#1 = globals.a10E4;
          real thick13DB#1 = globals.thick10E8;
          tensor[3] camEye13DA#1 = globals.camEye10E9;
          real camNear13D9#1 = globals.camNear10EF;
          real camFar13D8#2 = globals.camFar10F0;
          real refStep13D7#1 = globals.refStep10F1;
          real rayStep13D6#2 = globals.rayStep10F2;
          real phongKa13D5#1 = globals.phongKa10F4;
          real phongKd13D4#1 = globals.phongKd10F5;
          bool debug13D3#1 = globals.debug10F6;
          int su13D2#1 = globals.su10F7;
          int sv13D1#1 = globals.sv10F8;
          field V13D0#1 = globals.V114B;
          field F13CF#2 = globals.F114C;
          field cmap13CE#1 = globals.cmap114E;
          tensor[3] light13CD#1 = globals.light1155;
          real rayU13ED#0 = self.rayU;
          real rayV13EE#0 = self.rayV;
          real rayN13EF#7 = self.rayN;
          tensor[3] rayVec13F0#2 = self.rayVec;
          real transp13F1#11 = self.transp;
          tensor[3] rgb13F2#10 = self.rgb;
          tensor[4] rgba13F3#4 = self.rgba;
          real gray13F4#0 = self.gray;
          int ui13F5#1 = self.ui;
          int vi13F6#1 = self.vi;
          if debug13D3 then goto ASSIGN1404 else goto JOIN1401
        ASSIGN1404:  preds = [COND1413]
          bool _t1403#1 = NEQ<int>(ui13F5,su13D2);
          if _t1403 then goto ASSIGN1408 else goto ASSIGN140A
        ASSIGN1408:  preds = [COND140B]
          bool _t1406#1 = true;
          goto JOIN1405
        JOIN1405:  preds = [ASSIGN1408,ASSIGN140A]
          bool _t1407#1 = phi(_t1406,_t1409)
          if _t1407 then goto SAVE140E else goto JOIN140C
        SAVE140E:  preds = [COND1412]
          self.rayN = rayN13EF;
          self.transp = transp13F1;
          self.rgb = rgb13F2;
          self.rgba = rgba13F3;
          stabilize
          goto JOIN140C
        JOIN140C:  preds = [*STABILIZE140D,COND1412]
          goto JOIN1401
        JOIN1401:  preds = [JOIN140C,COND1413]
          tensor[3] _t1414#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN13EF,rayVec13F0);
          tensor[3] x1416#11 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye13DA,_t1414);
          real _t1418#1 = 0.e0;
          real _t141A#1 = TensorIndex<tensor[3],[0]>(x1416);
          bool _t141C#1 = LT<real>(_t1418,_t141A);
          if _t141C then goto ASSIGN1420 else goto JOIN141E
        ASSIGN1420:  preds = [COND14CE]
          real _t141F#1 = TensorIndex<tensor[3],[0]>(x1416);
          real _t1421#1 = 0.1e1;
          bool _t1423#1 = LT<real>(_t141F,_t1421);
          if _t1423 then goto ASSIGN1427 else goto JOIN1425
        ASSIGN1427:  preds = [COND14CB]
          real _t1426#1 = 0.e0;
          real _t1428#1 = TensorIndex<tensor[3],[1]>(x1416);
          bool _t142A#1 = LT<real>(_t1426,_t1428);
          if _t142A then goto ASSIGN142E else goto JOIN142C
        ASSIGN142E:  preds = [COND14C8]
          real _t142D#1 = TensorIndex<tensor[3],[1]>(x1416);
          real _t142F#1 = 0.1e1;
          bool _t1431#1 = LT<real>(_t142D,_t142F);
          if _t1431 then goto ASSIGN1435 else goto JOIN1433
        ASSIGN1435:  preds = [COND14C5]
          real _t1434#1 = 0.e0;
          real _t1436#1 = TensorIndex<tensor[3],[2]>(x1416);
          bool _t1438#1 = LT<real>(_t1434,_t1436);
          if _t1438 then goto ASSIGN143C else goto JOIN143A
        ASSIGN143C:  preds = [COND14C2]
          real _t143B#1 = TensorIndex<tensor[3],[2]>(x1416);
          real _t143D#1 = 0.1e1;
          bool _t143F#1 = LT<real>(_t143B,_t143D);
          if _t143F then goto ASSIGN1443 else goto JOIN1441
        ASSIGN1443:  preds = [COND14BF]
          femData:MeshPos p1442#1 = findPos129A (a13DC,x1416);
          bool _t1444#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1442);
          if _t1444 then goto ASSIGN1448 else goto ASSIGN14B7
        ASSIGN1448:  preds = [COND14BC]
          real val1447#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F13CF,x1416);
          field _t1449#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F13CF);
          tensor[3] _t144B#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1449,x1416);
          tensor[3] grad144D#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t144B);
          real _t144F#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad144D);
          real _t1452#1 = 0.e0;
          real _t1454#1 = 0.1e1;
          real _t1456#1 = 0.13e1;
          real _t1458#1 = 0.1e1;
          real _t145A#1 = λ(T0[])<Abs(T0)> (val1447);
          real _t145C#1 = λ(T0[],T1[])<(T0 * T1)> (_t144F,thick13DB);
          real _t145E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t145A,_t145C);
          real _t1460#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1458,_t145E);
          real _t1462#1 = λ(T0[],T1[])<(T0 * T1)> (_t1456,_t1460);
          real _t1464#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1452,_t1454,_t1462);
          real _t1466#1 = _t1464;
          real _t1469#1 = 0.1e1;
          real _t146B#1 = _t1469;
          real a146D#3 = λ(T0[],T1[])<(T0 * T1)> (_t1466,_t146B);
          real _t146F#1 = 0.e0;
          bool _t1471#1 = GT<real>(a146D,_t146F);
          if _t1471 then goto ASSIGN1475 else goto JOIN1473
        ASSIGN1475:  preds = [COND14B0]
          real _t1474#1 = 0.1e1;
          real _t1476#1 = 0.1e1;
          real _t1478#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1476,a146D);
          real _t147A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec13F0);
          real _t147C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep13D6,_t147A);
          real _t147E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t147C,refStep13D7);
          real _t1480#1 = MathFn<pow>(_t1478,_t147E);
          real a1482#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1474,_t1480);
          real _t1485#1 = 0.11e1;
          real _t1487#1 = 0.7e0;
          real depth1489#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1485,_t1487,camNear13D9,rayN13EF,camFar13D8);
          real _t148B#1 = 0.e0;
          tensor[3] _t148D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad144D,grad144D);
          real _t148F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t148D,light13CD);
          real shade1491#1 = Max<real>(_t148B,_t148F);
          real _t1493#1 = λ(T0[],T1[])<(T0 * T1)> (transp13F1,a1482);
          real _t1495#1 = λ(T0[],T1[])<(T0 * T1)> (_t1493,depth1489);
          real _t1497#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd13D4,shade1491);
          real _t1499#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa13D5,_t1497);
          real _t149B#1 = λ(T0[],T1[])<(T0 * T1)> (_t1495,_t1499);
          real _t149E#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V13D0,x1416);
          tensor[3] _t14A0#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap13CE,_t149E);
          tensor[3] _t14A2#1 = _t14A0;
          tensor[3] _t14A4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t149B,_t14A2);
          tensor[3] rgb14A6#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb13F2,_t14A4);
          real _t14A9#1 = 0.1e1;
          real _t14AB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t14A9,a1482);
          real transp14AD#1 = λ(T0[],T1[])<(T0 * T1)> (transp13F1,_t14AB);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN14AF,COND14B0]
          real a1483#0 = phi(a1482,a146D)
          tensor[3] rgb14A7#1 = phi(rgb14A6,rgb13F2)
          real transp14AE#1 = phi(transp14AD,transp13F1)
          string _t14B3#1 = "yay!\n";
          Print<[string]>(_t14B3);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN14B5,MASSIGN14BB]
          tensor[3] rgb14B2#1 = phi(rgb14A7,rgb13F2)
          real transp14B1#1 = phi(transp14AE,transp13F1)
          goto JOIN1441
        JOIN1441:  preds = [JOIN1446,COND14BF]
          tensor[3] rgb14BE#1 = phi(rgb14B2,rgb13F2)
          real transp14BD#1 = phi(transp14B1,transp13F1)
          goto JOIN143A
        JOIN143A:  preds = [JOIN1441,COND14C2]
          tensor[3] rgb14C1#1 = phi(rgb14BE,rgb13F2)
          real transp14C0#1 = phi(transp14BD,transp13F1)
          goto JOIN1433
        JOIN1433:  preds = [JOIN143A,COND14C5]
          tensor[3] rgb14C4#1 = phi(rgb14C1,rgb13F2)
          real transp14C3#1 = phi(transp14C0,transp13F1)
          goto JOIN142C
        JOIN142C:  preds = [JOIN1433,COND14C8]
          tensor[3] rgb14C7#1 = phi(rgb14C4,rgb13F2)
          real transp14C6#1 = phi(transp14C3,transp13F1)
          goto JOIN1425
        JOIN1425:  preds = [JOIN142C,COND14CB]
          tensor[3] rgb14CA#1 = phi(rgb14C7,rgb13F2)
          real transp14C9#1 = phi(transp14C6,transp13F1)
          goto JOIN141E
        JOIN141E:  preds = [JOIN1425,COND14CE]
          tensor[3] rgb14CD#3 = phi(rgb14CA,rgb13F2)
          real transp14CC#2 = phi(transp14C9,transp13F1)
          real _t14CF#1 = 0.1e-1;
          bool _t14D1#1 = LT<real>(transp14CC,_t14CF);
          if _t14D1 then goto ASSIGN14D6 else goto JOIN14D3
        ASSIGN14D6:  preds = [COND14DC]
          real transp14D4#1 = 0.e0;
          self.rayN = rayN13EF;
          self.transp = transp14D4;
          self.rgb = rgb14CD;
          self.rgba = rgba13F3;
          stabilize
          goto JOIN14D3
        JOIN14D3:  preds = [*STABILIZE14D7,COND14DC]
          real transp14D5#2 = phi(transp14CC)
          bool _t14DD#1 = GT<real>(rayN13EF,camFar13D8);
          if _t14DD then goto SAVE14E1 else goto JOIN14DF
        SAVE14E1:  preds = [COND14E5]
          self.rayN = rayN13EF;
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          self.rgba = rgba13F3;
          stabilize
          goto JOIN14DF
        JOIN14DF:  preds = [*STABILIZE14E0,COND14E5]
          real rayN14E6#1 = λ(T0[],T1[])<(T0 + T1)> (rayN13EF,rayStep13D6);
          self.rayN = rayN14E6;
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          self.rgba = rgba13F3;
          active
        ASSIGN14B7:  preds = [COND14BC]
          string _t14B6#1 = "\n";
          Print<[tensor[3],string]>(x1416,_t14B6);
          string _t14B9#1 = "wait what\?\n";
          Print<[string]>(_t14B9);
          goto JOIN1446
        ASSIGN140A:  preds = [COND140B]
          bool _t1409#1 = NEQ<int>(vi13F6,sv13D1);
          goto JOIN1405
    end update
    method stabilize
        ENTRY152C:  preds = []
          bool debug14F0#1 = globals.debug10F6;
          int su14EF#1 = globals.su10F7;
          int sv14EE#1 = globals.sv10F8;
          real rayU14F4#0 = self.rayU;
          real rayV14F5#0 = self.rayV;
          real rayN14F6#1 = self.rayN;
          tensor[3] rayVec14F7#0 = self.rayVec;
          real transp14F8#2 = self.transp;
          tensor[3] rgb14F9#4 = self.rgb;
          tensor[4] rgba14FA#1 = self.rgba;
          real gray14FB#0 = self.gray;
          int ui14FC#1 = self.ui;
          int vi14FD#1 = self.vi;
          real _t1508#1 = 0.1e1;
          real a150A#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1508,transp14F8);
          real _t150C#1 = 0.e0;
          bool _t150E#1 = GT<real>(a150A,_t150C);
          if _t150E then goto ASSIGN1512 else goto JOIN1510
        ASSIGN1512:  preds = [COND1520]
          real _t1511#1 = TensorIndex<tensor[3],[0]>(rgb14F9);
          real _t1513#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1511,a150A);
          real _t1515#1 = TensorIndex<tensor[3],[1]>(rgb14F9);
          real _t1517#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1515,a150A);
          real _t1519#1 = TensorIndex<tensor[3],[2]>(rgb14F9);
          real _t151B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1519,a150A);
          tensor[4] rgba151D#1 = <tensor[4]>[_t1513,_t1517,_t151B,a150A];
          goto JOIN1510
        JOIN1510:  preds = [ASSIGN151F,COND1520]
          tensor[4] rgba151E#2 = phi(rgba151D,rgba14FA)
          bool _t1521#1 = EQ<int>(ui14FC,su14EF);
          if _t1521 then goto ASSIGN1525 else goto JOIN1523
        ASSIGN1525:  preds = [COND152B]
          bool _t1524#1 = EQ<int>(vi14FD,sv14EE);
          if _t1524 then goto COND1529 else goto JOIN1526
        COND1529:  preds = [COND152A]
          if debug14F0 then goto MASSIGN1528 else goto JOIN1527
        MASSIGN1528:  preds = [COND1529]
          Print<[real,tensor[4]]>(a150A,rgba151E);
          goto JOIN1527
        JOIN1527:  preds = [MASSIGN1528,COND1529]
          goto JOIN1526
        JOIN1526:  preds = [JOIN1527,COND152A]
          goto JOIN1523
        JOIN1523:  preds = [JOIN1526,COND152B]
          self.rayN = rayN14F6;
          self.transp = transp14F8;
          self.rgb = rgb14F9;
          self.rgba = rgba151E;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1355:  preds = []
      int iresU133B#1 = globals.iresU10ED;
      int iresV133A#1 = globals.iresV10EE;
      int _t133E#1 = 0;
      int _t1340#1 = 1;
      int _t1342#1 = ISub(iresV133A,_t1340);
      int[] _t1344#1 = Range(_t133E,_t1342);
    FOREACH1347:  preds = [ASSIGN1345,NEXT1354]
      foreach (vi1346 in _t1344) on exit goto RETURN1356
      int _t1348#1 = 0;
      int _t134A#1 = 1;
      int _t134C#1 = ISub(iresU133B,_t134A);
      int[] _t134E#1 = Range(_t1348,_t134C);
    FOREACH1351:  preds = [ASSIGN134F,NEXT1353]
      foreach (ui1350 in _t134E) on exit goto NEXT1354
      new raycast(ui1350,vi1346);
      goto FOREACH1351
    NEXT1354:  preds = [FOREACH1351]
      goto FOREACH1347
    RETURN1356:  preds = [FOREACH1347]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10E4 (a) = <no-default>
  input 0b043B_intermedateGlobal10E5 (b) = <no-default>
  input 0c043D_intermedateGlobal10E6 (c) = <no-default>
  input isoval10E7 (isoval) = <default>
  input thick10E8 (thick) = <default>
  input camEye10E9 (camEye) = <default>
  input camAt10EA (camAt) = <default>
  input camUp10EB (camUp) = <default>
  input camFOV10EC (camFOV) = <default>
  input iresU10ED (iresU) = <default>
  input iresV10EE (iresV) = <default>
  input camNear10EF (camNear) = <default>
  input camFar10F0 (camFar) = <default>
  input refStep10F1 (refStep) = <default>
  input rayStep10F2 (rayStep) = <default>
  input lightVsp10F3 (lightVsp) = <default>
  input phongKa10F4 (phongKa) = <default>
  input phongKd10F5 (phongKd) = <default>
  input debug10F6 (debug) = <default>
  input su10F7 (su) = <default>
  input sv10F8 (sv) = <default>
  global femData:Space b1149
  global femData:FemFunc c114A
  global field V114B
  global field F114C
  global image(IMAGE1D<double[3]>) I114D
  global field cmap114E
  global real camDist114F
  global tensor[3] camN1150
  global tensor[3] camU1151
  global tensor[3] camV1152
  global real camVmax1153
  global real camUmax1154
  global tensor[3] light1155
## functions
  function femData:MeshPos findPos129A (femData:Mesh mesh1156#11, tensor[3] pos1157#5) {
    ENTRY1299:  preds = []
      real _t1158#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn115E#3 = <tensor[3]>[_t1158,_t1158,_t1158];
      int newtonInt1160#4 = 0;
      int cellInt1162#2 = ExtractFemItem<int,StartCell(Mesh)>(mesh1156);
      int _t1164#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1156);
      int _t1166#4 = 1;
      int numCell1168#2 = ISub(_t1164,_t1166);
      int[] yayCells116A#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1156,pos1157);
    FOREACH116E:  preds = [ASSIGN116B,NEXT11EF]
      foreach (cellItter116C in yayCells116A) on exit goto ASSIGN11F5
        int cellInt1170#0 = phi(cellInt1162,cellItter116C)
        tensor[3] xn116D#2 = phi(xn115E,xn1189)
      field _t1172#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellItter116C,mesh1156,mesh1156);
      field _t1174#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1172);
      field _t1176#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1174);
      tensor[3,3] A1180#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1176,xn115E);
      int _t1184#1 = 2;
      int[] _t1186#1 = Range(newtonInt1160,_t1184);
    FOREACH118A:  preds = [ASSIGN154C,NEXT11EE]
      foreach (newtonItter1188 in _t1186) on exit goto NEXT11EF
        tensor[3] xn1189#3 = phi(xn116D,xn1193)
      field _t118D#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1157,_t1172);
      field _t118F#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1180,_t118D);
      tensor[3] delta1191#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t118F,xn1189);
      tensor[3] xn1193#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1189,delta1191);
      real _t1195#2 = 0.1e-7;
      real _t1199#1 = λ(T0[],T1[])<(T0 * T1)> (_t1195,_t1195);
      real _t119B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1191,delta1191);
      bool _t119D#1 = GTE<real>(_t1199,_t119B);
      if _t119D then goto ASSIGN11A1 else goto JOIN119F
    ASSIGN11A1:  preds = [COND11ED]
      real _t11A0#4 = 0.1e1;
      real _t11A2#4 = 0.1e-4;
      real _t11A4#1 = λ(T0[],T1[])<(T0 + T1)> (_t11A0,_t11A2);
      tensor[3] _t11AC#1 = <tensor[3]>[_t11A0,_t11A0,_t11A0];
      real _t11AE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t11AC,xn1193);
      bool _t11B0#1 = GT<real>(_t11A4,_t11AE);
      tensor[3] _t11B8#1 = <tensor[3]>[_t11A2,_t11A2,_t11A2];
      tensor[3] _t11BA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t11B8,xn1193);
      real _t11BC#1 = TensorIndex<tensor[3],[0]>(_t11BA);
      real _t11BE#3 = -0.e0;
      bool _t11C0#1 = GT<real>(_t11BC,_t11BE);
      real _t11CC#1 = TensorIndex<tensor[3],[1]>(_t11BA);
      bool _t11D0#1 = GT<real>(_t11CC,_t11BE);
      real _t11DC#1 = TensorIndex<tensor[3],[2]>(_t11BA);
      bool _t11E0#1 = GT<real>(_t11DC,_t11BE);
      bool _t11E2#1 = BAnd(_t11D0,_t11E0);
      bool _t11E4#1 = BAnd(_t11C0,_t11E2);
      bool _t11E6#1 = BAnd(_t11B0,_t11E4);
      if _t11E6 then goto ASSIGN1555 else goto JOIN11E8
    ASSIGN1555:  preds = [COND11EC]
      femData:MeshPos _t11E9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellItter116C,xn1193,pos1157);
      return _t11E9
      goto JOIN11E8
    JOIN11E8:  preds = [*RETURN(_t11E9)11EB,COND11EC]
      goto JOIN119F
    JOIN119F:  preds = [JOIN11E8,COND11ED]
      goto FOREACH118A
    NEXT11EF:  preds = [FOREACH118A]
      goto FOREACH116E
    ASSIGN11F5:  preds = [FOREACH116E]
      int _t11F4#2 = 2;
      int _t11F8#1 = IAdd(_t11F4,_t1166);
      int _t11FA#1 = IMul(_t11F8,numCell1168);
      int[] _t11FC#1 = Range(newtonInt1160,_t11FA);
    FOREACH1202:  preds = [ASSIGN153D,NEXT1290]
      foreach (itter11FE in _t11FC) on exit goto ASSIGN1292
        int cellInt1201#5 = phi(cellInt1162,cellInt128E)
        int newtonInt1200#1 = phi(newtonInt1160,newtonInt1280)
        tensor[3] xn11FF#2 = phi(xn116D,xn121B)
      field _t1203#2 = λ(INT0,FEM(msh)1,FEM(msh)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1201,mesh1156,mesh1156);
      field _t1205#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1203);
      field _t1207#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1205);
      tensor[3,3] A1211#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1207,xn115E);
      field _t1215#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos1157,_t1203);
      field _t1217#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1211,_t1215);
      tensor[3] delta1219#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1217,xn11FF);
      tensor[3] xn121B#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn11FF,delta1219);
      real _t121D#2 = 0.1e-7;
      real _t1221#1 = λ(T0[],T1[])<(T0 * T1)> (_t121D,_t121D);
      real _t1223#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1219,delta1219);
      bool _t1225#1 = GTE<real>(_t1221,_t1223);
      if _t1225 then goto ASSIGN1229 else goto JOIN1227
    ASSIGN1229:  preds = [COND1275]
      real _t1228#4 = 0.1e1;
      real _t122A#4 = 0.1e-4;
      real _t122C#1 = λ(T0[],T1[])<(T0 + T1)> (_t1228,_t122A);
      tensor[3] _t1234#1 = <tensor[3]>[_t1228,_t1228,_t1228];
      real _t1236#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1234,xn121B);
      bool _t1238#1 = GT<real>(_t122C,_t1236);
      tensor[3] _t1240#1 = <tensor[3]>[_t122A,_t122A,_t122A];
      tensor[3] _t1242#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1240,xn121B);
      real _t1244#1 = TensorIndex<tensor[3],[0]>(_t1242);
      real _t1246#3 = -0.e0;
      bool _t1248#1 = GT<real>(_t1244,_t1246);
      real _t1254#1 = TensorIndex<tensor[3],[1]>(_t1242);
      bool _t1258#1 = GT<real>(_t1254,_t1246);
      real _t1264#1 = TensorIndex<tensor[3],[2]>(_t1242);
      bool _t1268#1 = GT<real>(_t1264,_t1246);
      bool _t126A#1 = BAnd(_t1258,_t1268);
      bool _t126C#1 = BAnd(_t1248,_t126A);
      bool _t126E#1 = BAnd(_t1238,_t126C);
      if _t126E then goto ASSIGN1272 else goto JOIN1270
    ASSIGN1272:  preds = [COND1274]
      femData:MeshPos _t1271#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellInt1201,xn121B,pos1157);
      return _t1271
      goto JOIN1270
    JOIN1270:  preds = [*RETURN(_t1271)1273,COND1274]
      goto JOIN1227
    JOIN1227:  preds = [JOIN1270,COND1275]
      int newtonInt1278#2 = IAdd(newtonInt1200,_t1166);
      bool _t127C#1 = GTE<int>(newtonInt1278,_t11F4);
      if _t127C then goto ASSIGN1283 else goto JOIN127E
    ASSIGN1283:  preds = [COND128F]
      bool _t1282#1 = GTE<int>(cellInt1201,numCell1168);
      if _t1282 then goto ASSIGN1286 else goto ASSIGN1549
    ASSIGN1286:  preds = [COND128D]
      femData:MeshPos _t1285#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1285
      goto JOIN1284
    JOIN1284:  preds = [*RETURN(_t1285)1287,ASSIGN1549]
      int cellInt128B#1 = phi(cellInt128A)
      goto JOIN127E
    JOIN127E:  preds = [JOIN1284,COND128F]
      int cellInt128E#1 = phi(cellInt128B,cellInt1201)
      int newtonInt1280#1 = phi(newtonInt1160,newtonInt1278)
      goto FOREACH1202
    ASSIGN1549:  preds = [COND128D]
      int cellInt128A#1 = IAdd(cellInt1201,_t1166);
      goto JOIN1284
    ASSIGN1292:  preds = [FOREACH1202]
      string _t1291#1 = "Bad end 2";
      string _t1293#1 = "\n";
      Print<[string,string]>(_t1291,_t1293);
      femData:MeshPos _t1296#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1296
}
  function int[2] nextCell412AC (int faceIdx129B#1, int cell129C#1, femData:Mesh mesh129D#1) {
    ENTRY12AB:  preds = []
      int _t129E#1 = 8;
      int _t12A0#1 = IMul(cell129C,_t129E);
      int _t12A2#1 = 2;
      int _t12A4#1 = IMul(faceIdx129B,_t12A2);
      int _t12A6#1 = IAdd(_t12A0,_t12A4);
      int[2] _t12A8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh129D,_t12A6);
      return _t12A8
}
## input initialization
  ENTRY1147:  preds = []
    real isoval10F9#1 = 0.2e0;
    globals.isoval10E7 = isoval10F9;
    real thick10FC#1 = 0.7e-1;
    globals.thick10E8 = thick10FC;
    real _t10FF#2 = 0.3e1;
    real _t1101#1 = -0.3e1;
    tensor[3] camEye1105#1 = <tensor[3]>[_t10FF,_t1101,_t10FF];
    globals.camEye10E9 = camEye1105;
    real _t1108#3 = 0.5e0;
    tensor[3] camAt110E#1 = <tensor[3]>[_t1108,_t1108,_t1108];
    globals.camAt10EA = camAt110E;
    real _t1111#2 = 0.e0;
    real _t1115#2 = 0.1e1;
    tensor[3] camUp1117#2 = <tensor[3]>[_t1111,_t1111,_t1115];
    globals.camUp10EB = camUp1117;
    real camFOV111A#1 = 0.137e2;
    globals.camFOV10EC = camFOV111A;
    int iresU111D#2 = 500;
    globals.iresU10ED = iresU111D;
    globals.iresV10EE = iresU111D;
    real camNear1123#1 = -0.2e1;
    globals.camNear10EF = camNear1123;
    real camFar1126#1 = 0.5e1;
    globals.camFar10F0 = camFar1126;
    globals.refStep10F1 = _t1115;
    real rayStep112C#1 = 0.1e-1;
    globals.rayStep10F2 = rayStep112C;
    globals.lightVsp10F3 = camUp1117;
    real phongKa1138#1 = 0.1e0;
    globals.phongKa10F4 = phongKa1138;
    real phongKd113B#1 = 0.9e0;
    globals.phongKd10F5 = phongKd113B;
    bool debug113E#1 = false;
    globals.debug10F6 = debug113E;
    int su1141#2 = 250;
    globals.su10F7 = su1141;
    globals.sv10F8 = su1141;
    return
## global-variable initialization
  ENTRY1338:  preds = []
    femData:Mesh a12B7#3 = globals.a10E4;
    femData:Space 0b043B_intermedateGlobal12B6#1 = globals.0b043B_intermedateGlobal10E5;
    femData:FemFunc 0c043D_intermedateGlobal12B5#1 = globals.0c043D_intermedateGlobal10E6;
    real isoval12B4#1 = globals.isoval10E7;
    tensor[3] camEye12B3#1 = globals.camEye10E9;
    tensor[3] camAt12B2#1 = globals.camAt10EA;
    tensor[3] camUp12B1#1 = globals.camUp10EB;
    real camFOV12B0#1 = globals.camFOV10EC;
    int iresU12AF#1 = globals.iresU10ED;
    int iresV12AE#1 = globals.iresV10EE;
    tensor[3] lightVsp12AD#2 = globals.lightVsp10F3;
    int _t12C3#1 = 0;
    int _t12C5#1 = 1;
    int _t12C7#1 = ExtractFemItem<int,NumCell(Mesh)>(a12B7);
    int _t12C9#1 = ISub(_t12C7,_t12C5);
    int[] _t12CB#1 = Range(_t12C3,_t12C9);
    femData:MeshCell[] _t12CD#1 = <femData:MeshCell[]>{};
  FOREACH12D1:  preds = [ASSIGN12CE,NEXT12D6]
    foreach (_t12CF in _t12CB) on exit goto ASSIGN12D8
      femData:MeshCell[] _t12D0#1 = phi(_t12CD,_t12D4)
    femData:MeshCell _t12D2#1 = LoadFem<femData:MeshCell>(a12B7,_t12CF);
    femData:MeshCell[] _t12D4#1 = Append<femData:MeshCell>(_t12D0,_t12D2);
    goto FOREACH12D1
  ASSIGN12D8:  preds = [FOREACH12D1]
    femData:Space b12D7#2 = LoadFem<femData:Space>(0b043B_intermedateGlobal12B6,a12B7);
    globals.b1149 = b12D7;
    femData:FemFunc c12DA#3 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal12B5,b12D7);
    globals.c114A = c12DA;
    femData:Space _t12DD#2 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12E1#4 = ExtractFem<femData:Mesh,femData:Space>(_t12DD);
    field _t12E3#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2)<femV(129A, 0, 1, 2)⊛Basis()> (_t12E1,_t12DD,c12DA);
    field _t12F1#1 = λ(FEM(msh)0,FEM(msh)1,FEM(msh)2)<femInvV(129A, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t12E1,_t12E1,_t12E1);
    field V12F3#2 = λ(F0[3],F1[3])<Cmp(F0)[F1_{i0}{3}]> (_t12E3,_t12F1);
    globals.V114B = V12F3;
    field _t12F6#1 = λ(T0[],F1[3])<(F1) - («T0»)> (isoval12B4,V12F3);
    globals.F114C = _t12F6;
    image(IMAGE1D<double[3]>) I12FD#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    globals.I114D = I12FD;
    kernel _t1300#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1302#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I12FD);
    field cmap1304#1 = λ(V0(1)[3],H1)<V0_{i0}⊛H1>_{3} (img1302,_t1300);
    globals.cmap114E = cmap1304;
    tensor[3] _t1307#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt12B2,camEye12B3);
    real camDist1309#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1307);
    globals.camDist114F = camDist1309;
    tensor[3] camN130E#4 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1307,_t1307);
    globals.camN1150 = camN130E;
    tensor[3] _t1311#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camN130E,camUp12B1);
    tensor[3] camU1313#3 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (_t1311,_t1311);
    globals.camU1151 = camU1313;
    tensor[3] camV1316#2 = λ(T0[3],T1[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i1} * T1_{i2}))>(i1=0..2)(i2=0..2)>_{3} (camU1313,camN130E);
    globals.camV1152 = camV1316;
    real _t1319#1 = 0.314159265358979323846264338327950288e1;
    real _t131B#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV12B0,_t1319);
    real _t131D#1 = 0.36e3;
    real _t131F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t131B,_t131D);
    real _t1321#1 = λ(T0[])<Tangent(T0)> (_t131F);
    real camVmax1323#2 = λ(T0[],T1[])<(T0 * T1)> (_t1321,camDist1309);
    globals.camVmax1153 = camVmax1323;
    real _t1326#1 = IntToReal(iresU12AF);
    real _t1328#1 = λ(T0[],T1[])<(T0 * T1)> (camVmax1323,_t1326);
    real _t132A#1 = IntToReal(iresV12AE);
    real camUmax132C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1328,_t132A);
    globals.camUmax1154 = camUmax132C;
    tensor[3,3] _t132F#1 = <tensor[3,3]>[camU1313,camV1316,camN130E];
    tensor[3,3] _t1331#1 = λ(T0[3 3])<T0_{i1,i0}>_{3 3} (_t132F);
    tensor[3] _t1333#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (lightVsp12AD,lightVsp12AD);
    tensor[3] light1335#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1331,_t1333);
    globals.light1155 = light1335;
    return
## strand
  strand raycast (int ui1357#2, int vi1358#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY13C1:  preds = []
        int iresU136B#1 = globals.iresU10ED;
        int iresV136A#1 = globals.iresV10EE;
        real camNear1369#1 = globals.camNear10EF;
        real camDist1368#1 = globals.camDist114F;
        tensor[3] camN1367#1 = globals.camN1150;
        tensor[3] camU1366#1 = globals.camU1151;
        tensor[3] camV1365#1 = globals.camV1152;
        real camVmax1364#2 = globals.camVmax1153;
        real camUmax1363#2 = globals.camUmax1154;
        real _t137F#1 = λ(T0[])<Neg(T0)> (camUmax1363);
        real _t1381#2 = -0.5e0;
        real _t1383#1 = IntToReal(ui1357);
        real _t1385#1 = IntToReal(iresU136B);
        real _t1387#2 = 0.5e0;
        real _t1389#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1385,_t1387);
        real rayU138B#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t137F,camUmax1363,_t1381,_t1383,_t1389);
        real _t138D#1 = λ(T0[])<Neg(T0)> (camVmax1364);
        real _t1391#1 = IntToReal(vi1358);
        real _t1393#1 = IntToReal(iresV136A);
        real _t1397#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1393,_t1387);
        real rayV1399#2 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (camVmax1364,_t138D,_t1381,_t1391,_t1397);
        tensor[3] _t139D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayU138B,camU1366);
        tensor[3] _t139F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayV1399,camV1365);
        tensor[3] _t13A1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t139D,_t139F);
        tensor[3] _t13A3#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t13A1,camDist1368);
        tensor[3] rayVec13A5#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1367,_t13A3);
        real transp13A7#1 = 0.1e1;
        real _t13A9#8 = 0.e0;
        tensor[3] rgb13AF#1 = <tensor[3]>[_t13A9,_t13A9,_t13A9];
        tensor[4] rgba13B9#1 = <tensor[4]>[_t13A9,_t13A9,_t13A9,_t13A9];
        self.rayU = rayU138B;
        self.rayV = rayV1399;
        self.rayN = camNear1369;
        self.rayVec = rayVec13A5;
        self.transp = transp13A7;
        self.rgb = rgb13AF;
        self.rgba = rgba13B9;
        self.gray = _t13A9;
        self.ui = ui1357;
        self.vi = vi1358;
        return
    end state init
    method update
        ENTRY14E8:  preds = []
          femData:Mesh a13DC#1 = globals.a10E4;
          real thick13DB#1 = globals.thick10E8;
          tensor[3] camEye13DA#1 = globals.camEye10E9;
          real camNear13D9#1 = globals.camNear10EF;
          real camFar13D8#2 = globals.camFar10F0;
          real refStep13D7#1 = globals.refStep10F1;
          real rayStep13D6#2 = globals.rayStep10F2;
          real phongKa13D5#1 = globals.phongKa10F4;
          real phongKd13D4#1 = globals.phongKd10F5;
          bool debug13D3#1 = globals.debug10F6;
          int su13D2#1 = globals.su10F7;
          int sv13D1#1 = globals.sv10F8;
          field V13D0#1 = globals.V114B;
          field F13CF#2 = globals.F114C;
          field cmap13CE#1 = globals.cmap114E;
          tensor[3] light13CD#1 = globals.light1155;
          real rayU13ED#0 = self.rayU;
          real rayV13EE#0 = self.rayV;
          real rayN13EF#4 = self.rayN;
          tensor[3] rayVec13F0#2 = self.rayVec;
          real transp13F1#10 = self.transp;
          tensor[3] rgb13F2#9 = self.rgb;
          tensor[4] rgba13F3#0 = self.rgba;
          real gray13F4#0 = self.gray;
          int ui13F5#1 = self.ui;
          int vi13F6#1 = self.vi;
          if debug13D3 then goto ASSIGN1404 else goto JOIN1401
        ASSIGN1404:  preds = [COND1413]
          bool _t1403#1 = NEQ<int>(ui13F5,su13D2);
          if _t1403 then goto ASSIGN1408 else goto ASSIGN140A
        ASSIGN1408:  preds = [COND140B]
          bool _t1406#1 = true;
          goto JOIN1405
        JOIN1405:  preds = [ASSIGN1408,ASSIGN140A]
          bool _t1407#1 = phi(_t1406,_t1409)
          if _t1407 then goto STABILIZE140D else goto JOIN140C
        STABILIZE140D:  preds = [COND1412]
          stabilize
          goto JOIN140C
        JOIN140C:  preds = [*STABILIZE140D,COND1412]
          goto JOIN1401
        JOIN1401:  preds = [JOIN140C,COND1413]
          tensor[3] _t1414#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN13EF,rayVec13F0);
          tensor[3] x1416#8 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye13DA,_t1414);
          real _t1418#7 = 0.e0;
          real _t141A#2 = TensorIndex<tensor[3],[0]>(x1416);
          bool _t141C#1 = LT<real>(_t1418,_t141A);
          if _t141C then goto ASSIGN1422 else goto JOIN141E
        ASSIGN1422:  preds = [COND14CE]
          real _t1421#9 = 0.1e1;
          bool _t1423#1 = LT<real>(_t141A,_t1421);
          if _t1423 then goto ASSIGN1429 else goto JOIN1425
        ASSIGN1429:  preds = [COND14CB]
          real _t1428#2 = TensorIndex<tensor[3],[1]>(x1416);
          bool _t142A#1 = LT<real>(_t1418,_t1428);
          if _t142A then goto ASSIGN1564 else goto JOIN142C
        ASSIGN1564:  preds = [COND14C8]
          bool _t1431#1 = LT<real>(_t1428,_t1421);
          if _t1431 then goto ASSIGN1437 else goto JOIN1433
        ASSIGN1437:  preds = [COND14C5]
          real _t1436#2 = TensorIndex<tensor[3],[2]>(x1416);
          bool _t1438#1 = LT<real>(_t1418,_t1436);
          if _t1438 then goto ASSIGN1566 else goto JOIN143A
        ASSIGN1566:  preds = [COND14C2]
          bool _t143F#1 = LT<real>(_t1436,_t1421);
          if _t143F then goto ASSIGN1443 else goto JOIN1441
        ASSIGN1443:  preds = [COND14BF]
          femData:MeshPos p1442#1 = findPos129A (a13DC,x1416);
          bool _t1444#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1442);
          if _t1444 then goto ASSIGN1448 else goto ASSIGN14B7
        ASSIGN1448:  preds = [COND14BC]
          real val1447#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (F13CF,x1416);
          field _t1449#1 = λ(F0[3])<∂/∂x_{i0}@(F0)>_{3} (F13CF);
          tensor[3] _t144B#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1449,x1416);
          tensor[3] grad144D#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (_t144B);
          real _t144F#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (grad144D);
          real _t1456#1 = 0.13e1;
          real _t145A#1 = λ(T0[])<Abs(T0)> (val1447);
          real _t145C#1 = λ(T0[],T1[])<(T0 * T1)> (_t144F,thick13DB);
          real _t145E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t145A,_t145C);
          real _t1460#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1421,_t145E);
          real _t1462#1 = λ(T0[],T1[])<(T0 * T1)> (_t1456,_t1460);
          real _t1464#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t1418,_t1421,_t1462);
          real a146D#3 = λ(T0[],T1[])<(T0 * T1)> (_t1464,_t1421);
          bool _t1471#1 = GT<real>(a146D,_t1418);
          if _t1471 then goto ASSIGN156B else goto JOIN1473
        ASSIGN156B:  preds = [COND14B0]
          real _t1478#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1421,a146D);
          real _t147A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (rayVec13F0);
          real _t147C#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep13D6,_t147A);
          real _t147E#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t147C,refStep13D7);
          real _t1480#1 = MathFn<pow>(_t1478,_t147E);
          real a1482#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1421,_t1480);
          real _t1485#1 = 0.11e1;
          real _t1487#1 = 0.7e0;
          real depth1489#1 = λ(T0[],T1[],T2[],T3[],T4[])<(T0 + (((T3) - (T2)) / ( (T4) - (T2)) * (T1) - (T0)))> (_t1485,_t1487,camNear13D9,rayN13EF,camFar13D8);
          tensor[3] _t148D#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (grad144D,grad144D);
          real _t148F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t148D,light13CD);
          real shade1491#1 = Max<real>(_t1418,_t148F);
          real _t1493#1 = λ(T0[],T1[])<(T0 * T1)> (transp13F1,a1482);
          real _t1495#1 = λ(T0[],T1[])<(T0 * T1)> (_t1493,depth1489);
          real _t1497#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd13D4,shade1491);
          real _t1499#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa13D5,_t1497);
          real _t149B#1 = λ(T0[],T1[])<(T0 * T1)> (_t1495,_t1499);
          real _t149E#1 = λ(F0[3],T1[3])<Probe(F0,T1)> (V13D0,x1416);
          tensor[3] _t14A0#1 = λ(F0[1],T1[1])<Probe(F0_{i0},T1)>_{3} (cmap13CE,_t149E);
          tensor[3] _t14A4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t149B,_t14A0);
          tensor[3] rgb14A6#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb13F2,_t14A4);
          real _t14AB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1421,a1482);
          real transp14AD#1 = λ(T0[],T1[])<(T0 * T1)> (transp13F1,_t14AB);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN14AF,COND14B0]
          real a1483#0 = phi(a1482,a146D)
          tensor[3] rgb14A7#1 = phi(rgb14A6,rgb13F2)
          real transp14AE#1 = phi(transp14AD,transp13F1)
          string _t14B3#1 = "yay!\n";
          Print<[string]>(_t14B3);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN14B5,MASSIGN14BB]
          tensor[3] rgb14B2#1 = phi(rgb14A7,rgb13F2)
          real transp14B1#1 = phi(transp14AE,transp13F1)
          goto JOIN1441
        JOIN1441:  preds = [JOIN1446,COND14BF]
          tensor[3] rgb14BE#1 = phi(rgb14B2,rgb13F2)
          real transp14BD#1 = phi(transp14B1,transp13F1)
          goto JOIN143A
        JOIN143A:  preds = [JOIN1441,COND14C2]
          tensor[3] rgb14C1#1 = phi(rgb14BE,rgb13F2)
          real transp14C0#1 = phi(transp14BD,transp13F1)
          goto JOIN1433
        JOIN1433:  preds = [JOIN143A,COND14C5]
          tensor[3] rgb14C4#1 = phi(rgb14C1,rgb13F2)
          real transp14C3#1 = phi(transp14C0,transp13F1)
          goto JOIN142C
        JOIN142C:  preds = [JOIN1433,COND14C8]
          tensor[3] rgb14C7#1 = phi(rgb14C4,rgb13F2)
          real transp14C6#1 = phi(transp14C3,transp13F1)
          goto JOIN1425
        JOIN1425:  preds = [JOIN142C,COND14CB]
          tensor[3] rgb14CA#1 = phi(rgb14C7,rgb13F2)
          real transp14C9#1 = phi(transp14C6,transp13F1)
          goto JOIN141E
        JOIN141E:  preds = [JOIN1425,COND14CE]
          tensor[3] rgb14CD#3 = phi(rgb14CA,rgb13F2)
          real transp14CC#2 = phi(transp14C9,transp13F1)
          real _t14CF#1 = 0.1e-1;
          bool _t14D1#1 = LT<real>(transp14CC,_t14CF);
          if _t14D1 then goto SAVE1570 else goto JOIN14D3
        SAVE1570:  preds = [COND14DC]
          self.transp = _t1418;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14D3
        JOIN14D3:  preds = [*STABILIZE14D7,COND14DC]
          real transp14D5#2 = phi(transp14CC)
          bool _t14DD#1 = GT<real>(rayN13EF,camFar13D8);
          if _t14DD then goto SAVE14E2 else goto JOIN14DF
        SAVE14E2:  preds = [COND14E5]
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14DF
        JOIN14DF:  preds = [*STABILIZE14E0,COND14E5]
          real rayN14E6#1 = λ(T0[],T1[])<(T0 + T1)> (rayN13EF,rayStep13D6);
          self.rayN = rayN14E6;
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          active
        ASSIGN14B7:  preds = [COND14BC]
          string _t14B6#1 = "\n";
          Print<[tensor[3],string]>(x1416,_t14B6);
          string _t14B9#1 = "wait what\?\n";
          Print<[string]>(_t14B9);
          goto JOIN1446
        ASSIGN140A:  preds = [COND140B]
          bool _t1409#1 = NEQ<int>(vi13F6,sv13D1);
          goto JOIN1405
    end update
    method stabilize
        ENTRY152C:  preds = []
          bool debug14F0#1 = globals.debug10F6;
          int su14EF#1 = globals.su10F7;
          int sv14EE#1 = globals.sv10F8;
          real rayU14F4#0 = self.rayU;
          real rayV14F5#0 = self.rayV;
          real rayN14F6#0 = self.rayN;
          tensor[3] rayVec14F7#0 = self.rayVec;
          real transp14F8#1 = self.transp;
          tensor[3] rgb14F9#3 = self.rgb;
          tensor[4] rgba14FA#1 = self.rgba;
          real gray14FB#0 = self.gray;
          int ui14FC#1 = self.ui;
          int vi14FD#1 = self.vi;
          real _t1508#1 = 0.1e1;
          real a150A#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1508,transp14F8);
          real _t150C#1 = 0.e0;
          bool _t150E#1 = GT<real>(a150A,_t150C);
          if _t150E then goto ASSIGN1512 else goto JOIN1510
        ASSIGN1512:  preds = [COND1520]
          real _t1511#1 = TensorIndex<tensor[3],[0]>(rgb14F9);
          real _t1513#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1511,a150A);
          real _t1515#1 = TensorIndex<tensor[3],[1]>(rgb14F9);
          real _t1517#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1515,a150A);
          real _t1519#1 = TensorIndex<tensor[3],[2]>(rgb14F9);
          real _t151B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1519,a150A);
          tensor[4] rgba151D#1 = <tensor[4]>[_t1513,_t1517,_t151B,a150A];
          goto JOIN1510
        JOIN1510:  preds = [ASSIGN151F,COND1520]
          tensor[4] rgba151E#2 = phi(rgba151D,rgba14FA)
          bool _t1521#1 = EQ<int>(ui14FC,su14EF);
          if _t1521 then goto ASSIGN1525 else goto JOIN1523
        ASSIGN1525:  preds = [COND152B]
          bool _t1524#1 = EQ<int>(vi14FD,sv14EE);
          if _t1524 then goto COND1529 else goto JOIN1526
        COND1529:  preds = [COND152A]
          if debug14F0 then goto MASSIGN1528 else goto JOIN1527
        MASSIGN1528:  preds = [COND1529]
          Print<[real,tensor[4]]>(a150A,rgba151E);
          goto JOIN1527
        JOIN1527:  preds = [MASSIGN1528,COND1529]
          goto JOIN1526
        JOIN1526:  preds = [JOIN1527,COND152A]
          goto JOIN1523
        JOIN1523:  preds = [JOIN1526,COND152B]
          self.rgba = rgba151E;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1355:  preds = []
      int iresU133B#1 = globals.iresU10ED;
      int iresV133A#1 = globals.iresV10EE;
      int _t133E#2 = 0;
      int _t1340#2 = 1;
      int _t1342#1 = ISub(iresV133A,_t1340);
      int[] _t1344#1 = Range(_t133E,_t1342);
    FOREACH1347:  preds = [ASSIGN1345,NEXT1354]
      foreach (vi1346 in _t1344) on exit goto RETURN1356
      int _t134C#1 = ISub(iresU133B,_t1340);
      int[] _t134E#1 = Range(_t133E,_t134C);
    FOREACH1351:  preds = [ASSIGN1533,NEXT1353]
      foreach (ui1350 in _t134E) on exit goto NEXT1354
      new raycast(ui1350,vi1346);
      goto FOREACH1351
    NEXT1354:  preds = [FOREACH1351]
      goto FOREACH1347
    RETURN1356:  preds = [FOREACH1347]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10E4 (a) = <no-default>
  input 0b043B_intermedateGlobal10E5 (b) = <no-default>
  input 0c043D_intermedateGlobal10E6 (c) = <no-default>
  input isoval10E7 (isoval) = <default>
  input thick10E8 (thick) = <default>
  input camEye10E9 (camEye) = <default>
  input camAt10EA (camAt) = <default>
  input camUp10EB (camUp) = <default>
  input camFOV10EC (camFOV) = <default>
  input iresU10ED (iresU) = <default>
  input iresV10EE (iresV) = <default>
  input camNear10EF (camNear) = <default>
  input camFar10F0 (camFar) = <default>
  input refStep10F1 (refStep) = <default>
  input rayStep10F2 (rayStep) = <default>
  input lightVsp10F3 (lightVsp) = <default>
  input phongKa10F4 (phongKa) = <default>
  input phongKd10F5 (phongKd) = <default>
  input debug10F6 (debug) = <default>
  input su10F7 (su) = <default>
  input sv10F8 (sv) = <default>
  global real camDist114F
  global tensor[3] camN1150
  global tensor[3] camU1151
  global tensor[3] camV1152
  global real camVmax1153
  global real camUmax1154
  global tensor[3] light1155
## functions
  function femData:MeshPos findPos129A (femData:Mesh mesh1156#47, tensor[3] pos1157#13) {
    ENTRY1299:  preds = []
      real _t1158#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn115E#11 = <tensor[3]>[_t1158,_t1158,_t1158];
      int newtonInt1160#4 = 0;
      int cellInt1162#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1156);
      int _t1164#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1156);
      int _t1166#4 = 1;
      int numCell1168#2 = ISub(_t1164,_t1166);
      int[] yayCells116A#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1156,pos1157);
    FOREACH116E:  preds = [ASSIGN116B,NEXT11EF]
      foreach (cellItter116C in yayCells116A) on exit goto ASSIGN11F5
        tensor[3] xn116D#2 = phi(xn115E,xn1189)
      int _t1184#1 = 2;
      int[] _t1186#1 = Range(newtonInt1160,_t1184);
    FOREACH118A:  preds = [ASSIGN154C,NEXT11EE]
      foreach (newtonItter1188 in _t1186) on exit goto NEXT11EF
        tensor[3] xn1189#9 = phi(xn116D,xn1193)
      tensor[3] xn1193#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      real _t1195#2 = 0.1e-7;
      real _t1199#1 = λ(T0[],T1[])<(T0 * T1)> (_t1195,_t1195);
      real _t119B#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      bool _t119D#1 = GTE<real>(_t1199,_t119B);
      if _t119D then goto ASSIGN11A1 else goto JOIN119F
    ASSIGN11A1:  preds = [COND11ED]
      real _t11A0#4 = 0.1e1;
      real _t11A2#4 = 0.1e-4;
      real _t11A4#1 = λ(T0[],T1[])<(T0 + T1)> (_t11A0,_t11A2);
      tensor[3] _t11AC#1 = <tensor[3]>[_t11A0,_t11A0,_t11A0];
      real _t11AE#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t11AC,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      bool _t11B0#1 = GT<real>(_t11A4,_t11AE);
      tensor[3] _t11B8#1 = <tensor[3]>[_t11A2,_t11A2,_t11A2];
      tensor[3] _t11BA#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t11B8,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      real _t11BC#1 = TensorIndex<tensor[3],[0]>(_t11BA);
      real _t11BE#3 = -0.e0;
      bool _t11C0#1 = GT<real>(_t11BC,_t11BE);
      real _t11CC#1 = TensorIndex<tensor[3],[1]>(_t11BA);
      bool _t11D0#1 = GT<real>(_t11CC,_t11BE);
      real _t11DC#1 = TensorIndex<tensor[3],[2]>(_t11BA);
      bool _t11E0#1 = GT<real>(_t11DC,_t11BE);
      bool _t11E2#1 = BAnd(_t11D0,_t11E0);
      bool _t11E4#1 = BAnd(_t11C0,_t11E2);
      bool _t11E6#1 = BAnd(_t11B0,_t11E4);
      if _t11E6 then goto ASSIGN1555 else goto JOIN11E8
    ASSIGN1555:  preds = [COND11EC]
      femData:MeshPos _t11E9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellItter116C,xn1193,pos1157);
      return _t11E9
      goto JOIN11E8
    JOIN11E8:  preds = [*RETURN(_t11E9)11EB,COND11EC]
      goto JOIN119F
    JOIN119F:  preds = [JOIN11E8,COND11ED]
      goto FOREACH118A
    NEXT11EF:  preds = [FOREACH118A]
      goto FOREACH116E
    ASSIGN11F5:  preds = [FOREACH116E]
      int _t11F4#2 = 2;
      int _t11F8#1 = IAdd(_t11F4,_t1166);
      int _t11FA#1 = IMul(_t11F8,numCell1168);
      int[] _t11FC#1 = Range(newtonInt1160,_t11FA);
    FOREACH1202:  preds = [ASSIGN153D,NEXT1290]
      foreach (itter11FE in _t11FC) on exit goto ASSIGN1292
        int cellInt1201#14 = phi(cellInt1162,cellInt128E)
        int newtonInt1200#1 = phi(newtonInt1160,newtonInt1280)
        tensor[3] xn11FF#8 = phi(xn116D,xn121B)
      tensor[3] xn121B#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      real _t121D#2 = 0.1e-7;
      real _t1221#1 = λ(T0[],T1[])<(T0 * T1)> (_t121D,_t121D);
      real _t1223#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      bool _t1225#1 = GTE<real>(_t1221,_t1223);
      if _t1225 then goto ASSIGN1229 else goto JOIN1227
    ASSIGN1229:  preds = [COND1275]
      real _t1228#4 = 0.1e1;
      real _t122A#4 = 0.1e-4;
      real _t122C#1 = λ(T0[],T1[])<(T0 + T1)> (_t1228,_t122A);
      tensor[3] _t1234#1 = <tensor[3]>[_t1228,_t1228,_t1228];
      real _t1236#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1234,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      bool _t1238#1 = GT<real>(_t122C,_t1236);
      tensor[3] _t1240#1 = <tensor[3]>[_t122A,_t122A,_t122A];
      tensor[3] _t1242#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t1240,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      real _t1244#1 = TensorIndex<tensor[3],[0]>(_t1242);
      real _t1246#3 = -0.e0;
      bool _t1248#1 = GT<real>(_t1244,_t1246);
      real _t1254#1 = TensorIndex<tensor[3],[1]>(_t1242);
      bool _t1258#1 = GT<real>(_t1254,_t1246);
      real _t1264#1 = TensorIndex<tensor[3],[2]>(_t1242);
      bool _t1268#1 = GT<real>(_t1264,_t1246);
      bool _t126A#1 = BAnd(_t1258,_t1268);
      bool _t126C#1 = BAnd(_t1248,_t126A);
      bool _t126E#1 = BAnd(_t1238,_t126C);
      if _t126E then goto ASSIGN1272 else goto JOIN1270
    ASSIGN1272:  preds = [COND1274]
      femData:MeshPos _t1271#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellInt1201,xn121B,pos1157);
      return _t1271
      goto JOIN1270
    JOIN1270:  preds = [*RETURN(_t1271)1273,COND1274]
      goto JOIN1227
    JOIN1227:  preds = [JOIN1270,COND1275]
      int newtonInt1278#2 = IAdd(newtonInt1200,_t1166);
      bool _t127C#1 = GTE<int>(newtonInt1278,_t11F4);
      if _t127C then goto ASSIGN1283 else goto JOIN127E
    ASSIGN1283:  preds = [COND128F]
      bool _t1282#1 = GTE<int>(cellInt1201,numCell1168);
      if _t1282 then goto ASSIGN1286 else goto ASSIGN1549
    ASSIGN1286:  preds = [COND128D]
      femData:MeshPos _t1285#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1285
      goto JOIN1284
    JOIN1284:  preds = [*RETURN(_t1285)1287,ASSIGN1549]
      int cellInt128B#1 = phi(cellInt128A)
      goto JOIN127E
    JOIN127E:  preds = [JOIN1284,COND128F]
      int cellInt128E#1 = phi(cellInt128B,cellInt1201)
      int newtonInt1280#1 = phi(newtonInt1160,newtonInt1278)
      goto FOREACH1202
    ASSIGN1549:  preds = [COND128D]
      int cellInt128A#1 = IAdd(cellInt1201,_t1166);
      goto JOIN1284
    ASSIGN1292:  preds = [FOREACH1202]
      string _t1291#1 = "Bad end 2";
      string _t1293#1 = "\n";
      Print<[string,string]>(_t1291,_t1293);
      femData:MeshPos _t1296#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1296
}
  function int[2] nextCell412AC (int faceIdx129B#1, int cell129C#1, femData:Mesh mesh129D#1) {
    ENTRY12AB:  preds = []
      int _t129E#1 = 8;
      int _t12A0#1 = IMul(cell129C,_t129E);
      int _t12A2#1 = 2;
      int _t12A4#1 = IMul(faceIdx129B,_t12A2);
      int _t12A6#1 = IAdd(_t12A0,_t12A4);
      int[2] _t12A8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh129D,_t12A6);
      return _t12A8
}
## input initialization
  ENTRY1147:  preds = []
    real isoval10F9#1 = 0.2e0;
    globals.isoval10E7 = isoval10F9;
    real thick10FC#1 = 0.7e-1;
    globals.thick10E8 = thick10FC;
    real _t10FF#2 = 0.3e1;
    real _t1101#1 = -0.3e1;
    tensor[3] camEye1105#1 = <tensor[3]>[_t10FF,_t1101,_t10FF];
    globals.camEye10E9 = camEye1105;
    real _t1108#3 = 0.5e0;
    tensor[3] camAt110E#1 = <tensor[3]>[_t1108,_t1108,_t1108];
    globals.camAt10EA = camAt110E;
    real _t1111#2 = 0.e0;
    real _t1115#2 = 0.1e1;
    tensor[3] camUp1117#2 = <tensor[3]>[_t1111,_t1111,_t1115];
    globals.camUp10EB = camUp1117;
    real camFOV111A#1 = 0.137e2;
    globals.camFOV10EC = camFOV111A;
    int iresU111D#2 = 500;
    globals.iresU10ED = iresU111D;
    globals.iresV10EE = iresU111D;
    real camNear1123#1 = -0.2e1;
    globals.camNear10EF = camNear1123;
    real camFar1126#1 = 0.5e1;
    globals.camFar10F0 = camFar1126;
    globals.refStep10F1 = _t1115;
    real rayStep112C#1 = 0.1e-1;
    globals.rayStep10F2 = rayStep112C;
    globals.lightVsp10F3 = camUp1117;
    real phongKa1138#1 = 0.1e0;
    globals.phongKa10F4 = phongKa1138;
    real phongKd113B#1 = 0.9e0;
    globals.phongKd10F5 = phongKd113B;
    bool debug113E#1 = false;
    globals.debug10F6 = debug113E;
    int su1141#2 = 250;
    globals.su10F7 = su1141;
    globals.sv10F8 = su1141;
    return
## global-variable initialization
  ENTRY1338:  preds = []
    femData:Mesh a12B7#3 = globals.a10E4;
    femData:Space 0b043B_intermedateGlobal12B6#1 = globals.0b043B_intermedateGlobal10E5;
    femData:FemFunc 0c043D_intermedateGlobal12B5#1 = globals.0c043D_intermedateGlobal10E6;
    real isoval12B4#6 = globals.isoval10E7;
    tensor[3] camEye12B3#15 = globals.camEye10E9;
    tensor[3] camAt12B2#15 = globals.camAt10EA;
    tensor[3] camUp12B1#4 = globals.camUp10EB;
    real camFOV12B0#2 = globals.camFOV10EC;
    int iresU12AF#1 = globals.iresU10ED;
    int iresV12AE#1 = globals.iresV10EE;
    tensor[3] lightVsp12AD#2 = globals.lightVsp10F3;
    int _t12C3#1 = 0;
    int _t12C5#1 = 1;
    int _t12C7#1 = ExtractFemItem<int,NumCell(Mesh)>(a12B7);
    int _t12C9#1 = ISub(_t12C7,_t12C5);
    int[] _t12CB#1 = Range(_t12C3,_t12C9);
    femData:MeshCell[] _t12CD#1 = <femData:MeshCell[]>{};
  FOREACH12D1:  preds = [ASSIGN12CE,NEXT12D6]
    foreach (_t12CF in _t12CB) on exit goto ASSIGN12D8
      femData:MeshCell[] _t12D0#1 = phi(_t12CD,_t12D4)
    femData:MeshCell _t12D2#1 = LoadFem<femData:MeshCell>(a12B7,_t12CF);
    femData:MeshCell[] _t12D4#1 = Append<femData:MeshCell>(_t12D0,_t12D2);
    goto FOREACH12D1
  ASSIGN12D8:  preds = [FOREACH12D1]
    femData:Space b12D7#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal12B6,a12B7);
    femData:FemFunc c12DA#8 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal12B5,b12D7);
    femData:Space _t12DD#8 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12E1#28 = ExtractFem<femData:Mesh,femData:Space>(_t12DD);
    image(IMAGE1D<double[3]>) I12FD#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1300#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1302#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I12FD);
    real camDist1309#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt12B2,camEye12B3);
    globals.camDist114F = camDist1309;
    tensor[3] camN130E#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3);
    globals.camN1150 = camN130E;
    tensor[3] camU1313#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1);
    globals.camU1151 = camU1313;
    tensor[3] camV1316#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3);
    globals.camV1152 = camV1316;
    real _t1319#2 = 0.314159265358979323846264338327950288e1;
    real _t131D#2 = 0.36e3;
    real camVmax1323#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV12B0,_t1319,_t131D,camAt12B2,camEye12B3);
    globals.camVmax1153 = camVmax1323;
    real _t1326#1 = IntToReal(iresU12AF);
    real _t132A#1 = IntToReal(iresV12AE);
    real camUmax132C#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV12B0,_t1319,_t131D,camAt12B2,camEye12B3,_t1326,_t132A);
    globals.camUmax1154 = camUmax132C;
    tensor[3,3] _t132F#1 = <tensor[3,3]>[camU1313,camV1316,camN130E];
    tensor[3] light1335#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t132F,lightVsp12AD,lightVsp12AD);
    globals.light1155 = light1335;
    return
## strand
  strand raycast (int ui1357#2, int vi1358#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY13C1:  preds = []
        int iresU136B#1 = globals.iresU10ED;
        int iresV136A#1 = globals.iresV10EE;
        real camNear1369#1 = globals.camNear10EF;
        real camDist1368#1 = globals.camDist114F;
        tensor[3] camN1367#1 = globals.camN1150;
        tensor[3] camU1366#1 = globals.camU1151;
        tensor[3] camV1365#1 = globals.camV1152;
        real camVmax1364#4 = globals.camVmax1153;
        real camUmax1363#4 = globals.camUmax1154;
        real _t1381#4 = -0.5e0;
        real _t1383#2 = IntToReal(ui1357);
        real _t1385#2 = IntToReal(iresU136B);
        real _t1387#4 = 0.5e0;
        real rayU138B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1363,camUmax1363,_t1381,_t1383,_t1385,_t1387);
        real _t1391#2 = IntToReal(vi1358);
        real _t1393#2 = IntToReal(iresV136A);
        real rayV1399#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax1364,camVmax1364,_t1381,_t1391,_t1393,_t1387);
        tensor[3] rayVec13A5#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1367,camUmax1363,camUmax1363,_t1381,_t1383,_t1385,_t1387,camU1366,camVmax1364,camVmax1364,_t1381,_t1391,_t1393,_t1387,camV1365,camDist1368);
        real transp13A7#1 = 0.1e1;
        real _t13A9#8 = 0.e0;
        tensor[3] rgb13AF#1 = <tensor[3]>[_t13A9,_t13A9,_t13A9];
        tensor[4] rgba13B9#1 = <tensor[4]>[_t13A9,_t13A9,_t13A9,_t13A9];
        self.rayU = rayU138B;
        self.rayV = rayV1399;
        self.rayN = camNear1369;
        self.rayVec = rayVec13A5;
        self.transp = transp13A7;
        self.rgb = rgb13AF;
        self.rgba = rgba13B9;
        self.gray = _t13A9;
        self.ui = ui1357;
        self.vi = vi1358;
        return
    end state init
    method update
        ENTRY14E8:  preds = []
          femData:Mesh a13DC#1 = globals.a10E4;
          real thick13DB#2 = globals.thick10E8;
          tensor[3] camEye13DA#1 = globals.camEye10E9;
          real camNear13D9#1 = globals.camNear10EF;
          real camFar13D8#2 = globals.camFar10F0;
          real refStep13D7#1 = globals.refStep10F1;
          real rayStep13D6#2 = globals.rayStep10F2;
          real phongKa13D5#1 = globals.phongKa10F4;
          real phongKd13D4#1 = globals.phongKd10F5;
          bool debug13D3#1 = globals.debug10F6;
          int su13D2#1 = globals.su10F7;
          int sv13D1#1 = globals.sv10F8;
          tensor[3] light13CD#1 = globals.light1155;
          real rayN13EF#4 = self.rayN;
          tensor[3] rayVec13F0#2 = self.rayVec;
          real transp13F1#10 = self.transp;
          tensor[3] rgb13F2#9 = self.rgb;
          int ui13F5#1 = self.ui;
          int vi13F6#1 = self.vi;
          if debug13D3 then goto ASSIGN1404 else goto JOIN1401
        ASSIGN1404:  preds = [COND1413]
          bool _t1403#1 = NEQ<int>(ui13F5,su13D2);
          if _t1403 then goto ASSIGN1408 else goto ASSIGN140A
        ASSIGN1408:  preds = [COND140B]
          bool _t1406#1 = true;
          goto JOIN1405
        JOIN1405:  preds = [ASSIGN1408,ASSIGN140A]
          bool _t1407#1 = phi(_t1406,_t1409)
          if _t1407 then goto STABILIZE140D else goto JOIN140C
        STABILIZE140D:  preds = [COND1412]
          stabilize
          goto JOIN140C
        JOIN140C:  preds = [*STABILIZE140D,COND1412]
          goto JOIN1401
        JOIN1401:  preds = [JOIN140C,COND1413]
          tensor[3] x1416#12 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye13DA,rayN13EF,rayVec13F0);
          real _t1418#8 = 0.e0;
          real _t141A#2 = TensorIndex<tensor[3],[0]>(x1416);
          bool _t141C#1 = LT<real>(_t1418,_t141A);
          if _t141C then goto ASSIGN1422 else goto JOIN141E
        ASSIGN1422:  preds = [COND14CE]
          real _t1421#13 = 0.1e1;
          bool _t1423#1 = LT<real>(_t141A,_t1421);
          if _t1423 then goto ASSIGN1429 else goto JOIN1425
        ASSIGN1429:  preds = [COND14CB]
          real _t1428#2 = TensorIndex<tensor[3],[1]>(x1416);
          bool _t142A#1 = LT<real>(_t1418,_t1428);
          if _t142A then goto ASSIGN1564 else goto JOIN142C
        ASSIGN1564:  preds = [COND14C8]
          bool _t1431#1 = LT<real>(_t1428,_t1421);
          if _t1431 then goto ASSIGN1437 else goto JOIN1433
        ASSIGN1437:  preds = [COND14C5]
          real _t1436#2 = TensorIndex<tensor[3],[2]>(x1416);
          bool _t1438#1 = LT<real>(_t1418,_t1436);
          if _t1438 then goto ASSIGN1566 else goto JOIN143A
        ASSIGN1566:  preds = [COND14C2]
          bool _t143F#1 = LT<real>(_t1436,_t1421);
          if _t143F then goto ASSIGN1443 else goto JOIN1441
        ASSIGN1443:  preds = [COND14BF]
          femData:MeshPos p1442#1 = findPos129A (a13DC,x1416);
          bool _t1444#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1442);
          if _t1444 then goto ASSIGN1457 else goto ASSIGN14B7
        ASSIGN1457:  preds = [COND14BC]
          real _t1456#2 = 0.13e1;
          real a146D#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis())[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(129A, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(129A, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1418,_t1421,_t1456,_t1421,isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,thick13DB,_t1421);
          bool _t1471#1 = GT<real>(a146D,_t1418);
          if _t1471 then goto ASSIGN15A6 else goto JOIN1473
        ASSIGN15A6:  preds = [COND14B0]
          real _t1478#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis())[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(129A, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(129A, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t1421,_t1418,_t1421,_t1456,_t1421,isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,thick13DB,_t1421);
          real _t147E#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep13D6,rayVec13F0,refStep13D7);
          real _t1480#2 = MathFn<pow>(_t1478,_t147E);
          real _t1485#1 = 0.11e1;
          real _t1487#1 = 0.7e0;
          real _t148F#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,isoval12B4,_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416,light13CD);
          real shade1491#1 = Max<real>(_t1418,_t148F);
          real _t149E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(129A, 0, 1, 2)⊛Basis())[femInvV(129A, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t12E1,_t12DD,c12DA,_t12E1,_t12E1,_t12E1,x1416);
          tensor[3] rgb14A6#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb13F2,transp13F1,_t1421,_t1480,_t1485,_t1487,camNear13D9,rayN13EF,camFar13D8,phongKa13D5,phongKd13D4,shade1491,img1302,_t1300,_t149E);
          real transp14AD#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp13F1,_t1421,_t1421,_t1480);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN15B4,COND14B0]
          tensor[3] rgb14A7#1 = phi(rgb14A6,rgb13F2)
          real transp14AE#1 = phi(transp14AD,transp13F1)
          string _t14B3#1 = "yay!\n";
          Print<[string]>(_t14B3);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN14B5,MASSIGN14BB]
          tensor[3] rgb14B2#1 = phi(rgb14A7,rgb13F2)
          real transp14B1#1 = phi(transp14AE,transp13F1)
          goto JOIN1441
        JOIN1441:  preds = [JOIN1446,COND14BF]
          tensor[3] rgb14BE#1 = phi(rgb14B2,rgb13F2)
          real transp14BD#1 = phi(transp14B1,transp13F1)
          goto JOIN143A
        JOIN143A:  preds = [JOIN1441,COND14C2]
          tensor[3] rgb14C1#1 = phi(rgb14BE,rgb13F2)
          real transp14C0#1 = phi(transp14BD,transp13F1)
          goto JOIN1433
        JOIN1433:  preds = [JOIN143A,COND14C5]
          tensor[3] rgb14C4#1 = phi(rgb14C1,rgb13F2)
          real transp14C3#1 = phi(transp14C0,transp13F1)
          goto JOIN142C
        JOIN142C:  preds = [JOIN1433,COND14C8]
          tensor[3] rgb14C7#1 = phi(rgb14C4,rgb13F2)
          real transp14C6#1 = phi(transp14C3,transp13F1)
          goto JOIN1425
        JOIN1425:  preds = [JOIN142C,COND14CB]
          tensor[3] rgb14CA#1 = phi(rgb14C7,rgb13F2)
          real transp14C9#1 = phi(transp14C6,transp13F1)
          goto JOIN141E
        JOIN141E:  preds = [JOIN1425,COND14CE]
          tensor[3] rgb14CD#3 = phi(rgb14CA,rgb13F2)
          real transp14CC#2 = phi(transp14C9,transp13F1)
          real _t14CF#1 = 0.1e-1;
          bool _t14D1#1 = LT<real>(transp14CC,_t14CF);
          if _t14D1 then goto SAVE1570 else goto JOIN14D3
        SAVE1570:  preds = [COND14DC]
          self.transp = _t1418;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14D3
        JOIN14D3:  preds = [*STABILIZE14D7,COND14DC]
          real transp14D5#2 = phi(transp14CC)
          bool _t14DD#1 = GT<real>(rayN13EF,camFar13D8);
          if _t14DD then goto SAVE14E2 else goto JOIN14DF
        SAVE14E2:  preds = [COND14E5]
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14DF
        JOIN14DF:  preds = [*STABILIZE14E0,COND14E5]
          real rayN14E6#1 = λ(T0[],T1[])<(T0 + T1)> (rayN13EF,rayStep13D6);
          self.rayN = rayN14E6;
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          active
        ASSIGN14B7:  preds = [COND14BC]
          string _t14B6#1 = "\n";
          Print<[tensor[3],string]>(x1416,_t14B6);
          string _t14B9#1 = "wait what\?\n";
          Print<[string]>(_t14B9);
          goto JOIN1446
        ASSIGN140A:  preds = [COND140B]
          bool _t1409#1 = NEQ<int>(vi13F6,sv13D1);
          goto JOIN1405
    end update
    method stabilize
        ENTRY152C:  preds = []
          bool debug14F0#1 = globals.debug10F6;
          int su14EF#1 = globals.su10F7;
          int sv14EE#1 = globals.sv10F8;
          real transp14F8#4 = self.transp;
          tensor[3] rgb14F9#3 = self.rgb;
          tensor[4] rgba14FA#1 = self.rgba;
          int ui14FC#1 = self.ui;
          int vi14FD#1 = self.vi;
          real _t1508#4 = 0.1e1;
          real a150A#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1508,transp14F8);
          real _t150C#1 = 0.e0;
          bool _t150E#1 = GT<real>(a150A,_t150C);
          if _t150E then goto ASSIGN1512 else goto JOIN1510
        ASSIGN1512:  preds = [COND1520]
          real _t1511#1 = TensorIndex<tensor[3],[0]>(rgb14F9);
          real _t1513#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1511,_t1508,transp14F8);
          real _t1515#1 = TensorIndex<tensor[3],[1]>(rgb14F9);
          real _t1517#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1515,_t1508,transp14F8);
          real _t1519#1 = TensorIndex<tensor[3],[2]>(rgb14F9);
          real _t151B#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1519,_t1508,transp14F8);
          tensor[4] rgba151D#1 = <tensor[4]>[_t1513,_t1517,_t151B,a150A];
          goto JOIN1510
        JOIN1510:  preds = [ASSIGN151F,COND1520]
          tensor[4] rgba151E#2 = phi(rgba151D,rgba14FA)
          bool _t1521#1 = EQ<int>(ui14FC,su14EF);
          if _t1521 then goto ASSIGN1525 else goto JOIN1523
        ASSIGN1525:  preds = [COND152B]
          bool _t1524#1 = EQ<int>(vi14FD,sv14EE);
          if _t1524 then goto COND1529 else goto JOIN1526
        COND1529:  preds = [COND152A]
          if debug14F0 then goto MASSIGN1528 else goto JOIN1527
        MASSIGN1528:  preds = [COND1529]
          Print<[real,tensor[4]]>(a150A,rgba151E);
          goto JOIN1527
        JOIN1527:  preds = [MASSIGN1528,COND1529]
          goto JOIN1526
        JOIN1526:  preds = [JOIN1527,COND152A]
          goto JOIN1523
        JOIN1523:  preds = [JOIN1526,COND152B]
          self.rgba = rgba151E;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1355:  preds = []
      int iresU133B#1 = globals.iresU10ED;
      int iresV133A#1 = globals.iresV10EE;
      int _t133E#2 = 0;
      int _t1340#2 = 1;
      int _t1342#1 = ISub(iresV133A,_t1340);
      int[] _t1344#1 = Range(_t133E,_t1342);
    FOREACH1347:  preds = [ASSIGN1345,NEXT1354]
      foreach (vi1346 in _t1344) on exit goto RETURN1356
      int _t134C#1 = ISub(iresU133B,_t1340);
      int[] _t134E#1 = Range(_t133E,_t134C);
    FOREACH1351:  preds = [ASSIGN1533,NEXT1353]
      foreach (ui1350 in _t134E) on exit goto NEXT1354
      new raycast(ui1350,vi1346);
      goto FOREACH1351
    NEXT1354:  preds = [FOREACH1351]
      goto FOREACH1347
    RETURN1356:  preds = [FOREACH1347]
      return
#### end program ####
promote _t12E1 --> globals._t15BB
promote _t12DD --> globals._tX15BE
promote c12DA --> globals.c15C1
promote img1302 --> globals.img15C8
promote _t1300 --> globals._tXX15CB
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a10E4 (a) = <no-default>
  input 0b043B_intermedateGlobal10E5 (b) = <no-default>
  input 0c043D_intermedateGlobal10E6 (c) = <no-default>
  input isoval10E7 (isoval) = <default>
  input thick10E8 (thick) = <default>
  input camEye10E9 (camEye) = <default>
  input camAt10EA (camAt) = <default>
  input camUp10EB (camUp) = <default>
  input camFOV10EC (camFOV) = <default>
  input iresU10ED (iresU) = <default>
  input iresV10EE (iresV) = <default>
  input camNear10EF (camNear) = <default>
  input camFar10F0 (camFar) = <default>
  input refStep10F1 (refStep) = <default>
  input rayStep10F2 (rayStep) = <default>
  input lightVsp10F3 (lightVsp) = <default>
  input phongKa10F4 (phongKa) = <default>
  input phongKd10F5 (phongKd) = <default>
  input debug10F6 (debug) = <default>
  input su10F7 (su) = <default>
  input sv10F8 (sv) = <default>
  global real camDist114F
  global tensor[3] camN1150
  global tensor[3] camU1151
  global tensor[3] camV1152
  global real camVmax1153
  global real camUmax1154
  global tensor[3] light1155
  global femData:Mesh _t15BB
  global femData:Space _tX15BE
  global femData:FemFunc c15C1
  global image(IMAGE1D<double[3]>) img15C8
  global kernel _tXX15CB
## functions
  function femData:MeshPos findPos129A (femData:Mesh mesh1156#47, tensor[3] pos1157#13) {
    ENTRY1299:  preds = []
      real _t1158#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn115E#11 = <tensor[3]>[_t1158,_t1158,_t1158];
      int newtonInt1160#4 = 0;
      int cellInt1162#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1156);
      int _t1164#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1156);
      int _t1166#4 = 1;
      int numCell1168#2 = ISub(_t1164,_t1166);
      int[] yayCells116A#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1156,pos1157);
    FOREACH116E:  preds = [ASSIGN116B,NEXT11EF]
      foreach (cellItter116C in yayCells116A) on exit goto ASSIGN11F5
        tensor[3] xn116D#2 = phi(xn115E,xn1189)
      int _t1184#1 = 2;
      int[] _t1186#1 = Range(newtonInt1160,_t1184);
    FOREACH118A:  preds = [ASSIGN154C,NEXT11EE]
      foreach (newtonItter1188 in _t1186) on exit goto NEXT11EF
        tensor[3] xn1189#9 = phi(xn116D,xn1193)
      tensor[3] xn1193#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      real _t1195#2 = 0.1e-7;
      real _t1199#1 = λ(T0[],T1[])<(T0 * T1)> (_t1195,_t1195);
      real _t119B#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      bool _t119D#1 = GTE<real>(_t1199,_t119B);
      if _t119D then goto ASSIGN11A1 else goto JOIN119F
    ASSIGN11A1:  preds = [COND11ED]
      real _t11A0#4 = 0.1e1;
      real _t11A2#4 = 0.1e-4;
      real _t11A4#1 = λ(T0[],T1[])<(T0 + T1)> (_t11A0,_t11A2);
      tensor[3] _t11AC#1 = <tensor[3]>[_t11A0,_t11A0,_t11A0];
      real _t11AE#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t11AC,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      bool _t11B0#1 = GT<real>(_t11A4,_t11AE);
      tensor[3] _t11B8#1 = <tensor[3]>[_t11A2,_t11A2,_t11A2];
      tensor[3] _t11BA#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t11B8,xn1189,cellItter116C,mesh1156,mesh1156,xn115E,pos1157,cellItter116C,mesh1156,mesh1156,xn1189);
      real _t11BC#1 = TensorIndex<tensor[3],[0]>(_t11BA);
      real _t11BE#3 = -0.e0;
      bool _t11C0#1 = GT<real>(_t11BC,_t11BE);
      real _t11CC#1 = TensorIndex<tensor[3],[1]>(_t11BA);
      bool _t11D0#1 = GT<real>(_t11CC,_t11BE);
      real _t11DC#1 = TensorIndex<tensor[3],[2]>(_t11BA);
      bool _t11E0#1 = GT<real>(_t11DC,_t11BE);
      bool _t11E2#1 = BAnd(_t11D0,_t11E0);
      bool _t11E4#1 = BAnd(_t11C0,_t11E2);
      bool _t11E6#1 = BAnd(_t11B0,_t11E4);
      if _t11E6 then goto ASSIGN1555 else goto JOIN11E8
    ASSIGN1555:  preds = [COND11EC]
      femData:MeshPos _t11E9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellItter116C,xn1193,pos1157);
      return _t11E9
      goto JOIN11E8
    JOIN11E8:  preds = [*RETURN(_t11E9)11EB,COND11EC]
      goto JOIN119F
    JOIN119F:  preds = [JOIN11E8,COND11ED]
      goto FOREACH118A
    NEXT11EF:  preds = [FOREACH118A]
      goto FOREACH116E
    ASSIGN11F5:  preds = [FOREACH116E]
      int _t11F4#2 = 2;
      int _t11F8#1 = IAdd(_t11F4,_t1166);
      int _t11FA#1 = IMul(_t11F8,numCell1168);
      int[] _t11FC#1 = Range(newtonInt1160,_t11FA);
    FOREACH1202:  preds = [ASSIGN153D,NEXT1290]
      foreach (itter11FE in _t11FC) on exit goto ASSIGN1292
        int cellInt1201#14 = phi(cellInt1162,cellInt128E)
        int newtonInt1200#1 = phi(newtonInt1160,newtonInt1280)
        tensor[3] xn11FF#8 = phi(xn116D,xn121B)
      tensor[3] xn121B#2 = λ(T0[3],INT1,FEM(msh)2,FEM(msh)3,T4[3],T5[3],INT6,FEM(msh)7,FEM(msh)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      real _t121D#2 = 0.1e-7;
      real _t1221#1 = λ(T0[],T1[])<(T0 * T1)> (_t121D,_t121D);
      real _t1223#1 = λ(INT0,FEM(msh)1,FEM(msh)2,T3[3],T4[3],INT5,FEM(msh)6,FEM(msh)7,T8[3],INT9,FEM(msh)10,FEM(msh)11,T12[3],T13[3],INT14,FEM(msh)15,FEM(msh)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      bool _t1225#1 = GTE<real>(_t1221,_t1223);
      if _t1225 then goto ASSIGN1229 else goto JOIN1227
    ASSIGN1229:  preds = [COND1275]
      real _t1228#4 = 0.1e1;
      real _t122A#4 = 0.1e-4;
      real _t122C#1 = λ(T0[],T1[])<(T0 + T1)> (_t1228,_t122A);
      tensor[3] _t1234#1 = <tensor[3]>[_t1228,_t1228,_t1228];
      real _t1236#1 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1234,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      bool _t1238#1 = GT<real>(_t122C,_t1236);
      tensor[3] _t1240#1 = <tensor[3]>[_t122A,_t122A,_t122A];
      tensor[3] _t1242#3 = λ(T0[3],T1[3],INT2,FEM(msh)3,FEM(msh)4,T5[3],T6[3],INT7,FEM(msh)8,FEM(msh)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t1240,xn11FF,cellInt1201,mesh1156,mesh1156,xn115E,pos1157,cellInt1201,mesh1156,mesh1156,xn11FF);
      real _t1244#1 = TensorIndex<tensor[3],[0]>(_t1242);
      real _t1246#3 = -0.e0;
      bool _t1248#1 = GT<real>(_t1244,_t1246);
      real _t1254#1 = TensorIndex<tensor[3],[1]>(_t1242);
      bool _t1258#1 = GT<real>(_t1254,_t1246);
      real _t1264#1 = TensorIndex<tensor[3],[2]>(_t1242);
      bool _t1268#1 = GT<real>(_t1264,_t1246);
      bool _t126A#1 = BAnd(_t1258,_t1268);
      bool _t126C#1 = BAnd(_t1248,_t126A);
      bool _t126E#1 = BAnd(_t1238,_t126C);
      if _t126E then goto ASSIGN1272 else goto JOIN1270
    ASSIGN1272:  preds = [COND1274]
      femData:MeshPos _t1271#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1156,cellInt1201,xn121B,pos1157);
      return _t1271
      goto JOIN1270
    JOIN1270:  preds = [*RETURN(_t1271)1273,COND1274]
      goto JOIN1227
    JOIN1227:  preds = [JOIN1270,COND1275]
      int newtonInt1278#2 = IAdd(newtonInt1200,_t1166);
      bool _t127C#1 = GTE<int>(newtonInt1278,_t11F4);
      if _t127C then goto ASSIGN1283 else goto JOIN127E
    ASSIGN1283:  preds = [COND128F]
      bool _t1282#1 = GTE<int>(cellInt1201,numCell1168);
      if _t1282 then goto ASSIGN1286 else goto ASSIGN1549
    ASSIGN1286:  preds = [COND128D]
      femData:MeshPos _t1285#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1285
      goto JOIN1284
    JOIN1284:  preds = [*RETURN(_t1285)1287,ASSIGN1549]
      int cellInt128B#1 = phi(cellInt128A)
      goto JOIN127E
    JOIN127E:  preds = [JOIN1284,COND128F]
      int cellInt128E#1 = phi(cellInt128B,cellInt1201)
      int newtonInt1280#1 = phi(newtonInt1160,newtonInt1278)
      goto FOREACH1202
    ASSIGN1549:  preds = [COND128D]
      int cellInt128A#1 = IAdd(cellInt1201,_t1166);
      goto JOIN1284
    ASSIGN1292:  preds = [FOREACH1202]
      string _t1291#1 = "Bad end 2";
      string _t1293#1 = "\n";
      Print<[string,string]>(_t1291,_t1293);
      femData:MeshPos _t1296#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1156);
      return _t1296
}
  function int[2] nextCell412AC (int faceIdx129B#1, int cell129C#1, femData:Mesh mesh129D#1) {
    ENTRY12AB:  preds = []
      int _t129E#1 = 8;
      int _t12A0#1 = IMul(cell129C,_t129E);
      int _t12A2#1 = 2;
      int _t12A4#1 = IMul(faceIdx129B,_t12A2);
      int _t12A6#1 = IAdd(_t12A0,_t12A4);
      int[2] _t12A8#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh129D,_t12A6);
      return _t12A8
}
## input initialization
  ENTRY1147:  preds = []
    real isoval10F9#1 = 0.2e0;
    globals.isoval10E7 = isoval10F9;
    real thick10FC#1 = 0.7e-1;
    globals.thick10E8 = thick10FC;
    real _t10FF#2 = 0.3e1;
    real _t1101#1 = -0.3e1;
    tensor[3] camEye1105#1 = <tensor[3]>[_t10FF,_t1101,_t10FF];
    globals.camEye10E9 = camEye1105;
    real _t1108#3 = 0.5e0;
    tensor[3] camAt110E#1 = <tensor[3]>[_t1108,_t1108,_t1108];
    globals.camAt10EA = camAt110E;
    real _t1111#2 = 0.e0;
    real _t1115#2 = 0.1e1;
    tensor[3] camUp1117#2 = <tensor[3]>[_t1111,_t1111,_t1115];
    globals.camUp10EB = camUp1117;
    real camFOV111A#1 = 0.137e2;
    globals.camFOV10EC = camFOV111A;
    int iresU111D#2 = 500;
    globals.iresU10ED = iresU111D;
    globals.iresV10EE = iresU111D;
    real camNear1123#1 = -0.2e1;
    globals.camNear10EF = camNear1123;
    real camFar1126#1 = 0.5e1;
    globals.camFar10F0 = camFar1126;
    globals.refStep10F1 = _t1115;
    real rayStep112C#1 = 0.1e-1;
    globals.rayStep10F2 = rayStep112C;
    globals.lightVsp10F3 = camUp1117;
    real phongKa1138#1 = 0.1e0;
    globals.phongKa10F4 = phongKa1138;
    real phongKd113B#1 = 0.9e0;
    globals.phongKd10F5 = phongKd113B;
    bool debug113E#1 = false;
    globals.debug10F6 = debug113E;
    int su1141#2 = 250;
    globals.su10F7 = su1141;
    globals.sv10F8 = su1141;
    return
## global-variable initialization
  ENTRY1338:  preds = []
    femData:Mesh a12B7#3 = globals.a10E4;
    femData:Space 0b043B_intermedateGlobal12B6#1 = globals.0b043B_intermedateGlobal10E5;
    femData:FemFunc 0c043D_intermedateGlobal12B5#1 = globals.0c043D_intermedateGlobal10E6;
    real isoval12B4#0 = globals.isoval10E7;
    tensor[3] camEye12B3#15 = globals.camEye10E9;
    tensor[3] camAt12B2#15 = globals.camAt10EA;
    tensor[3] camUp12B1#4 = globals.camUp10EB;
    real camFOV12B0#2 = globals.camFOV10EC;
    int iresU12AF#1 = globals.iresU10ED;
    int iresV12AE#1 = globals.iresV10EE;
    tensor[3] lightVsp12AD#2 = globals.lightVsp10F3;
    int _t12C3#1 = 0;
    int _t12C5#1 = 1;
    int _t12C7#1 = ExtractFemItem<int,NumCell(Mesh)>(a12B7);
    int _t12C9#1 = ISub(_t12C7,_t12C5);
    int[] _t12CB#1 = Range(_t12C3,_t12C9);
    femData:MeshCell[] _t12CD#1 = <femData:MeshCell[]>{};
  FOREACH12D1:  preds = [ASSIGN12CE,NEXT12D6]
    foreach (_t12CF in _t12CB) on exit goto ASSIGN12D8
      femData:MeshCell[] _t12D0#1 = phi(_t12CD,_t12D4)
    femData:MeshCell _t12D2#1 = LoadFem<femData:MeshCell>(a12B7,_t12CF);
    femData:MeshCell[] _t12D4#1 = Append<femData:MeshCell>(_t12D0,_t12D2);
    goto FOREACH12D1
  ASSIGN12D8:  preds = [FOREACH12D1]
    femData:Space b12D7#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal12B6,a12B7);
    femData:FemFunc c12DA#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal12B5,b12D7);
    femData:Space _t12DD#2 = ExtractFem<femData:Space,femData:FemFunc>(c12DA);
    femData:Mesh _t12E1#1 = ExtractFem<femData:Mesh,femData:Space>(_t12DD);
    image(IMAGE1D<double[3]>) I12FD#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1300#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img1302#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I12FD);
    real camDist1309#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (camAt12B2,camEye12B3);
    globals.camDist114F = camDist1309;
    tensor[3] camN130E#2 = λ(T0[3],T1[3],T2[3],T3[3])<((T0_{i0}) - (T1_{i0}) * (1) / ( Sqrt(Σ(i1=0..2)<(((T0_{i1}) - (T1_{i1}) * (T0_{i1}) - (T1_{i1})))>(i1=0..2))))>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3);
    globals.camN1150 = camN130E;
    tensor[3] camU1313#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3])<(Σ(i2=0..2)(i3=0..2)<((ϵ_{ii0,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * (1) / ( Sqrt(Σ(i1=0..2)<((Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2) * Σ(i2=0..2)(i3=0..2)<((ϵ_{ii1,ii2,ii3} * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i4=0..2)<(((T0_{i4}) - (T1_{i4}) * (T0_{i4}) - (T1_{i4})))>(i4=0..2))) * T4_{i3}))>(i2=0..2)(i3=0..2)))>(i1=0..2))))>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1);
    globals.camU1151 = camU1313;
    tensor[3] camV1316#2 = λ(T0[3],T1[3],T2[3],T3[3],T4[3],T5[3],T6[3],T7[3],T8[3],T9[3],T10[3],T11[3],T12[3],T13[3])<Σ(i1=0..2)(i2=0..2)<((ϵ_{ii0,ii1,ii2} * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii1,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * (1) / ( Sqrt(Σ(i3=0..2)<((Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2) * Σ(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * (T0_{i4}) - (T1_{i4}) * (1) / ( Sqrt(Σ(i6=0..2)<(((T0_{i6}) - (T1_{i6}) * (T0_{i6}) - (T1_{i6})))>(i6=0..2))) * T4_{i5}))>(i4=0..2)(i5=0..2)))>(i3=0..2))) * (T0_{i2}) - (T1_{i2}) * (1) / ( Sqrt(Σ(i7=0..2)<(((T0_{i7}) - (T1_{i7}) * (T0_{i7}) - (T1_{i7})))>(i7=0..2)))))>(i1=0..2)(i2=0..2)>_{3} (camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3,camUp12B1,camAt12B2,camEye12B3,camAt12B2,camEye12B3);
    globals.camV1152 = camV1316;
    real _t1319#2 = 0.314159265358979323846264338327950288e1;
    real _t131D#2 = 0.36e3;
    real camVmax1323#1 = λ(T0[],T1[],T2[],T3[3],T4[3])<(Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))> (camFOV12B0,_t1319,_t131D,camAt12B2,camEye12B3);
    globals.camVmax1153 = camVmax1323;
    real _t1326#1 = IntToReal(iresU12AF);
    real _t132A#1 = IntToReal(iresV12AE);
    real camUmax132C#1 = λ(T0[],T1[],T2[],T3[3],T4[3],T5[],T6[])<((T5 * Tangent(((T0 * T1)) / ( T2)) * Sqrt(Σ(i0=0..2)<(((T3_{i0}) - (T4_{i0}) * (T3_{i0}) - (T4_{i0})))>(i0=0..2)))) / ( T6)> (camFOV12B0,_t1319,_t131D,camAt12B2,camEye12B3,_t1326,_t132A);
    globals.camUmax1154 = camUmax132C;
    tensor[3,3] _t132F#1 = <tensor[3,3]>[camU1313,camV1316,camN130E];
    tensor[3] light1335#1 = λ(T0[3 3],T1[3],T2[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1} * (1) / ( Sqrt(Σ(i2=0..2)<((T1_{i2} * T1_{i2}))>(i2=0..2)))))>(i1=0..2)>_{3} (_t132F,lightVsp12AD,lightVsp12AD);
    globals.light1155 = light1335;
    globals._t15BB = _t12E1;
    globals._tX15BE = _t12DD;
    globals.c15C1 = c12DA;
    globals.img15C8 = img1302;
    globals._tXX15CB = _t1300;
    return
## strand
  strand raycast (int ui1357#2, int vi1358#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY13C1:  preds = []
        int iresU136B#1 = globals.iresU10ED;
        int iresV136A#1 = globals.iresV10EE;
        real camNear1369#1 = globals.camNear10EF;
        real camDist1368#1 = globals.camDist114F;
        tensor[3] camN1367#1 = globals.camN1150;
        tensor[3] camU1366#1 = globals.camU1151;
        tensor[3] camV1365#1 = globals.camV1152;
        real camVmax1364#4 = globals.camVmax1153;
        real camUmax1363#4 = globals.camUmax1154;
        real _t1381#4 = -0.5e0;
        real _t1383#2 = IntToReal(ui1357);
        real _t1385#2 = IntToReal(iresU136B);
        real _t1387#4 = 0.5e0;
        real rayU138B#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(Neg(T0) + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (T1) - (Neg(T0))))> (camUmax1363,camUmax1363,_t1381,_t1383,_t1385,_t1387);
        real _t1391#2 = IntToReal(vi1358);
        real _t1393#2 = IntToReal(iresV136A);
        real rayV1399#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[])<(T0 + (((T3) - (T2)) / ( ((T4) - (T5)) - (T2)) * (Neg(T0)) - (T0)))> (camVmax1364,camVmax1364,_t1381,_t1391,_t1393,_t1387);
        tensor[3] rayVec13A5#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[3],T8[],T9[],T10[],T11[],T12[],T13[],T14[3],T15[])<(T0_{i0} + ((((Neg(T1) + (((T4) - (T3)) / ( ((T5) - (T6)) - (T3)) * (T1) - (Neg(T1)))) * T7_{i0}) + ((T8 + (((T11) - (T3)) / ( ((T12) - (T6)) - (T3)) * (Neg(T8)) - (T8))) * T14_{i0}))) / ( T15))>_{3} (camN1367,camUmax1363,camUmax1363,_t1381,_t1383,_t1385,_t1387,camU1366,camVmax1364,camVmax1364,_t1381,_t1391,_t1393,_t1387,camV1365,camDist1368);
        real transp13A7#1 = 0.1e1;
        real _t13A9#8 = 0.e0;
        tensor[3] rgb13AF#1 = <tensor[3]>[_t13A9,_t13A9,_t13A9];
        tensor[4] rgba13B9#1 = <tensor[4]>[_t13A9,_t13A9,_t13A9,_t13A9];
        self.rayU = rayU138B;
        self.rayV = rayV1399;
        self.rayN = camNear1369;
        self.rayVec = rayVec13A5;
        self.transp = transp13A7;
        self.rgb = rgb13AF;
        self.rgba = rgba13B9;
        self.gray = _t13A9;
        self.ui = ui1357;
        self.vi = vi1358;
        return
    end state init
    method update
        ENTRY14E8:  preds = []
          real isoval15B9#6 = globals.isoval10E7;
          femData:Mesh _t15BC#28 = globals._t15BB;
          femData:Space _t15BF#7 = globals._tX15BE;
          femData:FemFunc c15C2#7 = globals.c15C1;
          image(IMAGE1D<double[3]>) img15C9#1 = globals.img15C8;
          kernel _t15CC#1 = globals._tXX15CB;
          femData:Mesh a13DC#1 = globals.a10E4;
          real thick13DB#2 = globals.thick10E8;
          tensor[3] camEye13DA#1 = globals.camEye10E9;
          real camNear13D9#1 = globals.camNear10EF;
          real camFar13D8#2 = globals.camFar10F0;
          real refStep13D7#1 = globals.refStep10F1;
          real rayStep13D6#2 = globals.rayStep10F2;
          real phongKa13D5#1 = globals.phongKa10F4;
          real phongKd13D4#1 = globals.phongKd10F5;
          bool debug13D3#1 = globals.debug10F6;
          int su13D2#1 = globals.su10F7;
          int sv13D1#1 = globals.sv10F8;
          tensor[3] light13CD#1 = globals.light1155;
          real rayN13EF#4 = self.rayN;
          tensor[3] rayVec13F0#2 = self.rayVec;
          real transp13F1#10 = self.transp;
          tensor[3] rgb13F2#9 = self.rgb;
          int ui13F5#1 = self.ui;
          int vi13F6#1 = self.vi;
          if debug13D3 then goto ASSIGN1404 else goto JOIN1401
        ASSIGN1404:  preds = [COND1413]
          bool _t1403#1 = NEQ<int>(ui13F5,su13D2);
          if _t1403 then goto ASSIGN1408 else goto ASSIGN140A
        ASSIGN1408:  preds = [COND140B]
          bool _t1406#1 = true;
          goto JOIN1405
        JOIN1405:  preds = [ASSIGN1408,ASSIGN140A]
          bool _t1407#1 = phi(_t1406,_t1409)
          if _t1407 then goto STABILIZE140D else goto JOIN140C
        STABILIZE140D:  preds = [COND1412]
          stabilize
          goto JOIN140C
        JOIN140C:  preds = [*STABILIZE140D,COND1412]
          goto JOIN1401
        JOIN1401:  preds = [JOIN140C,COND1413]
          tensor[3] x1416#12 = λ(T0[3],T1[],T2[3])<(T0_{i0} + (T1 * T2_{i0}))>_{3} (camEye13DA,rayN13EF,rayVec13F0);
          real _t1418#8 = 0.e0;
          real _t141A#2 = TensorIndex<tensor[3],[0]>(x1416);
          bool _t141C#1 = LT<real>(_t1418,_t141A);
          if _t141C then goto ASSIGN1422 else goto JOIN141E
        ASSIGN1422:  preds = [COND14CE]
          real _t1421#13 = 0.1e1;
          bool _t1423#1 = LT<real>(_t141A,_t1421);
          if _t1423 then goto ASSIGN1429 else goto JOIN1425
        ASSIGN1429:  preds = [COND14CB]
          real _t1428#2 = TensorIndex<tensor[3],[1]>(x1416);
          bool _t142A#1 = LT<real>(_t1418,_t1428);
          if _t142A then goto ASSIGN1564 else goto JOIN142C
        ASSIGN1564:  preds = [COND14C8]
          bool _t1431#1 = LT<real>(_t1428,_t1421);
          if _t1431 then goto ASSIGN1437 else goto JOIN1433
        ASSIGN1437:  preds = [COND14C5]
          real _t1436#2 = TensorIndex<tensor[3],[2]>(x1416);
          bool _t1438#1 = LT<real>(_t1418,_t1436);
          if _t1438 then goto ASSIGN1566 else goto JOIN143A
        ASSIGN1566:  preds = [COND14C2]
          bool _t143F#1 = LT<real>(_t1436,_t1421);
          if _t143F then goto ASSIGN1443 else goto JOIN1441
        ASSIGN1443:  preds = [COND14BF]
          femData:MeshPos p1442#1 = findPos129A (a13DC,x1416);
          bool _t1444#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1442);
          if _t1444 then goto ASSIGN1457 else goto ASSIGN14B7
        ASSIGN1457:  preds = [COND14BC]
          real _t1456#2 = 0.13e1;
          real a146D#1 = λ(T0[],T1[],T2[],T3[],T4[],FEM(msh)5,FEM(fns)6,FEM(FUNC)7,FEM(msh)8,FEM(msh)9,FEM(msh)10,T11[3],T12[],FEM(msh)13,FEM(fns)14,FEM(FUNC)15,FEM(msh)16,FEM(msh)17,FEM(msh)18,T19[3],T20[],T21[])<(T21 * Clamp <T0,T1,(T2 * (T1) - ((Abs((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis())[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11)) - (T4))) / ( (T20 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(129A, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 5, 6, 7)⊛Basis()dx_{i107})[femInvV(129A, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 5, 5, 5)_{i125}⊛Basis()dx_{i122},T11) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 5, 5, 5)_{i126}⊛Basis()dx_{i123},T11)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 5, 5, 5)_{i119}⊛Basis()dx_{'0'},T11) * Σ(i120=0..2)<((Probe(femV(129A, 5, 5, 5)_{i120}⊛Basis()dx_{'1'},T11) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 5, 5, 5)_{i121}⊛Basis()dx_{'2'},T11)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>)> (_t1418,_t1421,_t1456,_t1421,isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,thick13DB,_t1421);
          bool _t1471#1 = GT<real>(a146D,_t1418);
          if _t1471 then goto ASSIGN15C4 else goto JOIN1473
        ASSIGN15C4:  preds = [COND14B0]
          real _t1478#1 = λ(T0[],T1[],T2[],T3[],T4[],T5[],FEM(msh)6,FEM(fns)7,FEM(FUNC)8,FEM(msh)9,FEM(msh)10,FEM(msh)11,T12[3],T13[],FEM(msh)14,FEM(fns)15,FEM(FUNC)16,FEM(msh)17,FEM(msh)18,FEM(msh)19,T20[3],T21[],T22[])<(T0) - ((T0 * Clamp <T1,T0,(T3 * (T0) - ((Abs((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis())[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12)) - (T5))) / ( (T21 * Sqrt(Σ(i0=0..2)<((Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(129A, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2)) * Neg(Σ(i107=0..2)<((Probe(Cmp(femV(129A, 6, 7, 8)⊛Basis()dx_{i107})[femInvV(129A, 6, 6, 6)_{i0}⊛Basis(){3}],T12) * (Σ(i122=0..2)(i123=0..2)<((ϵ_{ii122,ii123,ii107} * Σ(i125=0..2)<((Probe(femV(129A, 6, 6, 6)_{i125}⊛Basis()dx_{i122},T12) * Σ(i126=0..2)<((ϵ_{ii125,ii126,ii0} * Probe(femV(129A, 6, 6, 6)_{i126}⊛Basis()dx_{i123},T12)))>(i126=0..2)))>(i125=0..2)))>(i122=0..2)(i123=0..2)) / ( (2 * Σ(i119=0..2)<((Probe(femV(129A, 6, 6, 6)_{i119}⊛Basis()dx_{'0'},T12) * Σ(i120=0..2)<((Probe(femV(129A, 6, 6, 6)_{i120}⊛Basis()dx_{'1'},T12) * Σ(i121=0..2)<((ϵ_{ii119,ii120,ii121} * Probe(femV(129A, 6, 6, 6)_{i121}⊛Basis()dx_{'2'},T12)))>(i121=0..2)))>(i120=0..2)))>(i119=0..2)))))>(i107=0..2))))>(i0=0..2))))))>))> (_t1421,_t1418,_t1421,_t1456,_t1421,isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,thick13DB,_t1421);
          real _t147E#1 = λ(T0[],T1[3],T2[])<((T0 * Sqrt(Σ(i0=0..2)<((T1_{i0} * T1_{i0}))>(i0=0..2)))) / ( T2)> (rayStep13D6,rayVec13F0,refStep13D7);
          real _t1480#2 = MathFn<pow>(_t1478,_t147E);
          real _t1485#1 = 0.11e1;
          real _t1487#1 = 0.7e0;
          real _t148F#1 = λ(T0[],FEM(msh)1,FEM(fns)2,FEM(FUNC)3,FEM(msh)4,FEM(msh)5,FEM(msh)6,T7[3],T8[],FEM(msh)9,FEM(fns)10,FEM(FUNC)11,FEM(msh)12,FEM(msh)13,FEM(msh)14,T15[3],T16[3])<Σ(i0=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii0} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * (1) / ( Sqrt(Σ(i1=0..2)<((Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2)) * Neg(Σ(i108=0..2)<((Probe(Cmp(femV(129A, 1, 2, 3)⊛Basis()dx_{i108})[femInvV(129A, 1, 1, 1)_{i0}⊛Basis(){3}],T7) * (Σ(i123=0..2)(i124=0..2)<((ϵ_{ii123,ii124,ii108} * Σ(i126=0..2)<((Probe(femV(129A, 1, 1, 1)_{i126}⊛Basis()dx_{i123},T7) * Σ(i127=0..2)<((ϵ_{ii126,ii127,ii1} * Probe(femV(129A, 1, 1, 1)_{i127}⊛Basis()dx_{i124},T7)))>(i127=0..2)))>(i126=0..2)))>(i123=0..2)(i124=0..2)) / ( (2 * Σ(i120=0..2)<((Probe(femV(129A, 1, 1, 1)_{i120}⊛Basis()dx_{'0'},T7) * Σ(i121=0..2)<((Probe(femV(129A, 1, 1, 1)_{i121}⊛Basis()dx_{'1'},T7) * Σ(i122=0..2)<((ϵ_{ii120,ii121,ii122} * Probe(femV(129A, 1, 1, 1)_{i122}⊛Basis()dx_{'2'},T7)))>(i122=0..2)))>(i121=0..2)))>(i120=0..2)))))>(i108=0..2))))>(i1=0..2))) * T16_{i0}))>(i0=0..2)> (isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,isoval15B9,_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416,light13CD);
          real shade1491#1 = Max<real>(_t1418,_t148F);
          real _t149E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,FEM(msh)3,FEM(msh)4,FEM(msh)5,T6[3])<Probe(Cmp(femV(129A, 0, 1, 2)⊛Basis())[femInvV(129A, 0, 0, 0)_{i0}⊛Basis(){3}],T6)> (_t15BC,_t15BF,c15C2,_t15BC,_t15BC,_t15BC,x1416);
          tensor[3] rgb14A6#1 = λ(T0[3],T1[],T2[],T3[],T4[],T5[],T6[],T7[],T8[],T9[],T10[],T11[],V12(1)[3],H13,T14[1])<(T0_{i0} + (T1 * (T2) - (T3) * (T4 + (((T7) - (T6)) / ( (T8) - (T6)) * (T5) - (T4))) * (T9 + (T10 * T11)) * Probe(V12_{i0}⊛H13,T14)))>_{3} (rgb13F2,transp13F1,_t1421,_t1480,_t1485,_t1487,camNear13D9,rayN13EF,camFar13D8,phongKa13D5,phongKd13D4,shade1491,img15C9,_t15CC,_t149E);
          real transp14AD#1 = λ(T0[],T1[],T2[],T3[])<(T0 * (T1) - ((T1) - (T3)))> (transp13F1,_t1421,_t1421,_t1480);
          goto JOIN1473
        JOIN1473:  preds = [ASSIGN15B4,COND14B0]
          tensor[3] rgb14A7#1 = phi(rgb14A6,rgb13F2)
          real transp14AE#1 = phi(transp14AD,transp13F1)
          string _t14B3#1 = "yay!\n";
          Print<[string]>(_t14B3);
          goto JOIN1446
        JOIN1446:  preds = [MASSIGN14B5,MASSIGN14BB]
          tensor[3] rgb14B2#1 = phi(rgb14A7,rgb13F2)
          real transp14B1#1 = phi(transp14AE,transp13F1)
          goto JOIN1441
        JOIN1441:  preds = [JOIN1446,COND14BF]
          tensor[3] rgb14BE#1 = phi(rgb14B2,rgb13F2)
          real transp14BD#1 = phi(transp14B1,transp13F1)
          goto JOIN143A
        JOIN143A:  preds = [JOIN1441,COND14C2]
          tensor[3] rgb14C1#1 = phi(rgb14BE,rgb13F2)
          real transp14C0#1 = phi(transp14BD,transp13F1)
          goto JOIN1433
        JOIN1433:  preds = [JOIN143A,COND14C5]
          tensor[3] rgb14C4#1 = phi(rgb14C1,rgb13F2)
          real transp14C3#1 = phi(transp14C0,transp13F1)
          goto JOIN142C
        JOIN142C:  preds = [JOIN1433,COND14C8]
          tensor[3] rgb14C7#1 = phi(rgb14C4,rgb13F2)
          real transp14C6#1 = phi(transp14C3,transp13F1)
          goto JOIN1425
        JOIN1425:  preds = [JOIN142C,COND14CB]
          tensor[3] rgb14CA#1 = phi(rgb14C7,rgb13F2)
          real transp14C9#1 = phi(transp14C6,transp13F1)
          goto JOIN141E
        JOIN141E:  preds = [JOIN1425,COND14CE]
          tensor[3] rgb14CD#3 = phi(rgb14CA,rgb13F2)
          real transp14CC#2 = phi(transp14C9,transp13F1)
          real _t14CF#1 = 0.1e-1;
          bool _t14D1#1 = LT<real>(transp14CC,_t14CF);
          if _t14D1 then goto SAVE1570 else goto JOIN14D3
        SAVE1570:  preds = [COND14DC]
          self.transp = _t1418;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14D3
        JOIN14D3:  preds = [*STABILIZE14D7,COND14DC]
          real transp14D5#2 = phi(transp14CC)
          bool _t14DD#1 = GT<real>(rayN13EF,camFar13D8);
          if _t14DD then goto SAVE14E2 else goto JOIN14DF
        SAVE14E2:  preds = [COND14E5]
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          stabilize
          goto JOIN14DF
        JOIN14DF:  preds = [*STABILIZE14E0,COND14E5]
          real rayN14E6#1 = λ(T0[],T1[])<(T0 + T1)> (rayN13EF,rayStep13D6);
          self.rayN = rayN14E6;
          self.transp = transp14D5;
          self.rgb = rgb14CD;
          active
        ASSIGN14B7:  preds = [COND14BC]
          string _t14B6#1 = "\n";
          Print<[tensor[3],string]>(x1416,_t14B6);
          string _t14B9#1 = "wait what\?\n";
          Print<[string]>(_t14B9);
          goto JOIN1446
        ASSIGN140A:  preds = [COND140B]
          bool _t1409#1 = NEQ<int>(vi13F6,sv13D1);
          goto JOIN1405
    end update
    method stabilize
        ENTRY152C:  preds = []
          bool debug14F0#1 = globals.debug10F6;
          int su14EF#1 = globals.su10F7;
          int sv14EE#1 = globals.sv10F8;
          real transp14F8#4 = self.transp;
          tensor[3] rgb14F9#3 = self.rgb;
          tensor[4] rgba14FA#1 = self.rgba;
          int ui14FC#1 = self.ui;
          int vi14FD#1 = self.vi;
          real _t1508#4 = 0.1e1;
          real a150A#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1508,transp14F8);
          real _t150C#1 = 0.e0;
          bool _t150E#1 = GT<real>(a150A,_t150C);
          if _t150E then goto ASSIGN1512 else goto JOIN1510
        ASSIGN1512:  preds = [COND1520]
          real _t1511#1 = TensorIndex<tensor[3],[0]>(rgb14F9);
          real _t1513#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1511,_t1508,transp14F8);
          real _t1515#1 = TensorIndex<tensor[3],[1]>(rgb14F9);
          real _t1517#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1515,_t1508,transp14F8);
          real _t1519#1 = TensorIndex<tensor[3],[2]>(rgb14F9);
          real _t151B#1 = λ(T0[],T1[],T2[])<(T0) / ( (T1) - (T2))> (_t1519,_t1508,transp14F8);
          tensor[4] rgba151D#1 = <tensor[4]>[_t1513,_t1517,_t151B,a150A];
          goto JOIN1510
        JOIN1510:  preds = [ASSIGN151F,COND1520]
          tensor[4] rgba151E#2 = phi(rgba151D,rgba14FA)
          bool _t1521#1 = EQ<int>(ui14FC,su14EF);
          if _t1521 then goto ASSIGN1525 else goto JOIN1523
        ASSIGN1525:  preds = [COND152B]
          bool _t1524#1 = EQ<int>(vi14FD,sv14EE);
          if _t1524 then goto COND1529 else goto JOIN1526
        COND1529:  preds = [COND152A]
          if debug14F0 then goto MASSIGN1528 else goto JOIN1527
        MASSIGN1528:  preds = [COND1529]
          Print<[real,tensor[4]]>(a150A,rgba151E);
          goto JOIN1527
        JOIN1527:  preds = [MASSIGN1528,COND1529]
          goto JOIN1526
        JOIN1526:  preds = [JOIN1527,COND152A]
          goto JOIN1523
        JOIN1523:  preds = [JOIN1526,COND152B]
          self.rgba = rgba151E;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1355:  preds = []
      int iresU133B#1 = globals.iresU10ED;
      int iresV133A#1 = globals.iresV10EE;
      int _t133E#2 = 0;
      int _t1340#2 = 1;
      int _t1342#1 = ISub(iresV133A,_t1340);
      int[] _t1344#1 = Range(_t133E,_t1342);
    FOREACH1347:  preds = [ASSIGN1345,NEXT1354]
      foreach (vi1346 in _t1344) on exit goto RETURN1356
      int _t134C#1 = ISub(iresU133B,_t1340);
      int[] _t134E#1 = Range(_t133E,_t134C);
    FOREACH1351:  preds = [ASSIGN1533,NEXT1353]
      foreach (ui1350 in _t134E) on exit goto NEXT1354
      new raycast(ui1350,vi1346);
      goto FOREACH1351
    NEXT1354:  preds = [FOREACH1351]
      goto FOREACH1347
    RETURN1356:  preds = [FOREACH1347]
      return
#### end program ####
promote I1667 --> globals.I1CC4
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a15D9 (a) = <no-default>
  input 0b043B_intermedateGlobal15DA (b) = <no-default>
  input 0c043D_intermedateGlobal15DB (c) = <no-default>
  input isoval15DC (isoval) = <default>
  input thick15DD (thick) = <default>
  input camEye15DE (camEye) = <default>
  input camAt15DF (camAt) = <default>
  input camUp15E0 (camUp) = <default>
  input camFOV15E1 (camFOV) = <default>
  input iresU15E2 (iresU) = <default>
  input iresV15E3 (iresV) = <default>
  input camNear15E4 (camNear) = <default>
  input camFar15E5 (camFar) = <default>
  input refStep15E6 (refStep) = <default>
  input rayStep15E7 (rayStep) = <default>
  input lightVsp15E8 (lightVsp) = <default>
  input phongKa15E9 (phongKa) = <default>
  input phongKd15EA (phongKd) = <default>
  input debug15EB (debug) = <default>
  input su15EC (su) = <default>
  input sv15ED (sv) = <default>
  global real camDist15EE
  global tensor[3] camN15EF
  global tensor[3] camU15F0
  global tensor[3] camV15F1
  global real camVmax15F2
  global real camUmax15F3
  global tensor[3] light15F4
  global femData:Mesh _t15F5
  global femData:Space _tX15F6
  global femData:FemFunc c15F7
  global image(IMAGE1D<double[3]>) img15F8
  global kernel _tXX15F9
  global image(IMAGE1D<double[3]>) I1CC4
## functions
  function femData:MeshPos findPos17D8 (femData:Mesh mesh17D9#63, tensor[3] pos17DA#11) {
    ENTRY17DB:  preds = []
      real _t17DC#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn17DE#97 = <tensor[3]>[_t17DC,_t17DC,_t17DC];
      int newtonInt17E0#4 = 0;
      int cellInt17E2#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh17D9);
      int _t17E4#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh17D9);
      int _t17E6#4 = 1;
      int numCell17E8#2 = ISub(_t17E4,_t17E6);
      int[] yayCells17EA#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh17D9,pos17DA);
    FOREACH17ED:  preds = [ASSIGN17EB,NEXT1908]
      foreach (cellItter17EC in yayCells17EA) on exit goto ASSIGN190A
        tensor[3] xn1907#2 = phi(xn17DE,xn17F5)
      int _t17EE#1 = 2;
      int[] _t17F0#1 = Range(newtonInt17E0,_t17EE);
    FOREACH17F3:  preds = [ASSIGN17F1,NEXT1906]
      foreach (newtonItter17F2 in _t17F0) on exit goto NEXT1908
        tensor[3] xn17F5#16 = phi(xn1907,xn17F4)
      int[4] femIndicies1806#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1807#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1806);
      tensor[4,3] dofs1805#1 = femDofs1807;
      tensor[3,4] basisResult1808#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1017F6#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,dofs1805,basisResult1808,xn17DE);
      tensor[3,3,3] op1_e3_l_1217F7#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6);
      tensor[3,3,3] op1_e3_l_1317F8#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6,op1_e3_l_1217F7);
      tensor[4,3] dofs1809#1 = femDofs1807;
      tensor[3,4] basisResult180A#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1417F9#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs1809,basisResult180A,xn17DE);
      tensor[4,3] dofs180B#1 = femDofs1807;
      tensor[3,4] basisResult180C#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1517FA#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs180B,basisResult180C,xn17DE);
      tensor[4,3] dofs180D#1 = femDofs1807;
      tensor[3,4] basisResult180E#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1617FB#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs180D,basisResult180E,xn17DE);
      tensor[3,3] op1_e3_l_1717FC#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1617FB);
      tensor[3] op1_e3_l_1817FD#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1517FA,op1_e3_l_1717FC);
      real op1_e3_l_1917FE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1417F9,op1_e3_l_1817FD);
      tensor[3,3] op1_e3_l_2017FF#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1317F8);
      real op1_e3_l_211800#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1917FE);
      tensor[4,3] dofs180F#1 = femDofs1807;
      tensor[4] basisResult1810#1 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_221801#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,dofs180F,basisResult1810,xn17F5);
      tensor[3,3] op1_e3_l_231802#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2017FF,op1_e3_l_211800);
      tensor[3] op1_e3_l_241803#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221801);
      tensor[3] op1_e3_l_251804#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_241803);
      tensor[3] xn17F4#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_251804);
      real _t182D#2 = 0.1e-7;
      real _t182F#1 = λ(T0[],T1[])<(T0 * T1)> (_t182D,_t182D);
      int[4] femIndicies1842#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1843#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1842);
      tensor[4,3] dofs1841#1 = femDofs1843;
      tensor[3,4] basisResult1844#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_181832#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,dofs1841,basisResult1844,xn17DE);
      tensor[3,3,3] op1_e3_l_201833#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181832);
      tensor[3,3,3] op1_e3_l_211834#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181832,op1_e3_l_201833);
      tensor[4,3] dofs1845#1 = femDofs1843;
      tensor[3,4] basisResult1846#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_221835#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs1845,basisResult1846,xn17DE);
      tensor[4,3] dofs1847#1 = femDofs1843;
      tensor[3,4] basisResult1848#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_231836#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs1847,basisResult1848,xn17DE);
      tensor[4,3] dofs1849#1 = femDofs1843;
      tensor[3,4] basisResult184A#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_241837#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs1849,basisResult184A,xn17DE);
      tensor[3,3] op1_e3_l_251838#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_241837);
      tensor[3] op1_e3_l_261839#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_231836,op1_e3_l_251838);
      real op1_e3_l_27183A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_221835,op1_e3_l_261839);
      tensor[3,3] op1_e3_l_28183B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_211834);
      real op1_e3_l_29183C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_27183A);
      tensor[4,3] dofs184B#1 = femDofs1843;
      tensor[4] basisResult184C#1 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_30183D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter17EC,mesh17D9,xn17F5,dofs184B,basisResult184C,xn17F5);
      tensor[3,3] op1_e3_l_31183E#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_28183B,op1_e3_l_29183C);
      tensor[3] op1_e3_l_32183F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30183D);
      tensor[3] op1_e3_l_481840#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_31183E,op1_e3_l_32183F);
      real _t1831#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481840,op1_e3_l_481840);
      bool _t1869#1 = GTE<real>(_t182F,_t1831);
      if _t1869 then goto ASSIGN186D else goto JOIN1905
    ASSIGN186D:  preds = [COND186B]
      real _t186C#4 = 0.1e1;
      real _t186E#4 = 0.1e-4;
      real _t1870#1 = λ(T0[],T1[])<(T0 + T1)> (_t186C,_t186E);
      tensor[3] _t1872#1 = <tensor[3]>[_t186C,_t186C,_t186C];
      int[4] femIndicies1886#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1887#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1886);
      tensor[4,3] dofs1885#1 = femDofs1887;
      tensor[3,4] basisResult1888#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_111875#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,dofs1885,basisResult1888,xn17DE);
      tensor[3,3,3] op1_e3_l_131876#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111875);
      tensor[3,3,3] op1_e3_l_141877#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111875,op1_e3_l_131876);
      tensor[4,3] dofs1889#1 = femDofs1887;
      tensor[3,4] basisResult188A#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_151878#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs1889,basisResult188A,xn17DE);
      tensor[4,3] dofs188B#1 = femDofs1887;
      tensor[3,4] basisResult188C#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_161879#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs188B,basisResult188C,xn17DE);
      tensor[4,3] dofs188D#1 = femDofs1887;
      tensor[3,4] basisResult188E#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_17187A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs188D,basisResult188E,xn17DE);
      tensor[3,3] op1_e3_l_18187B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17187A);
      tensor[3] op1_e3_l_19187C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_161879,op1_e3_l_18187B);
      real op1_e3_l_20187D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_151878,op1_e3_l_19187C);
      tensor[3,3] op1_e3_l_21187E#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_141877);
      real op1_e3_l_22187F#1 = λ(T0[])<(2 * T0)> (op1_e3_l_20187D);
      tensor[4,3] dofs188F#1 = femDofs1887;
      tensor[4] basisResult1890#1 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_231880#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,dofs188F,basisResult1890,xn17F5);
      tensor[3,3] op1_e3_l_241881#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21187E,op1_e3_l_22187F);
      tensor[3] op1_e3_l_251882#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_231880);
      tensor[3] op1_e3_l_261883#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_241881,op1_e3_l_251882);
      tensor[3] op1_e3_l_271884#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_261883);
      real _t1874#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1872,op1_e3_l_271884);
      bool _t18AE#1 = GT<real>(_t1870,_t1874);
      tensor[3] _t18B0#1 = <tensor[3]>[_t186E,_t186E,_t186E];
      int[4] femIndicies18C4#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs18C5#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies18C4);
      tensor[4,3] dofs18C3#1 = femDofs18C5;
      tensor[3,4] basisResult18C6#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1118B3#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,dofs18C3,basisResult18C6,xn17DE);
      tensor[3,3,3] op1_e3_l_1318B4#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1118B3);
      tensor[3,3,3] op1_e3_l_1418B5#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1118B3,op1_e3_l_1318B4);
      tensor[4,3] dofs18C7#1 = femDofs18C5;
      tensor[3,4] basisResult18C8#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1518B6#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs18C7,basisResult18C8,xn17DE);
      tensor[4,3] dofs18C9#1 = femDofs18C5;
      tensor[3,4] basisResult18CA#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1618B7#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs18C9,basisResult18CA,xn17DE);
      tensor[4,3] dofs18CB#1 = femDofs18C5;
      tensor[3,4] basisResult18CC#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1718B8#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,dofs18CB,basisResult18CC,xn17DE);
      tensor[3,3] op1_e3_l_1818B9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1718B8);
      tensor[3] op1_e3_l_1918BA#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1618B7,op1_e3_l_1818B9);
      real op1_e3_l_2018BB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1518B6,op1_e3_l_1918BA);
      tensor[3,3] op1_e3_l_2118BC#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1418B5);
      real op1_e3_l_2218BD#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2018BB);
      tensor[4,3] dofs18CD#1 = femDofs18C5;
      tensor[4] basisResult18CE#1 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_2318BE#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,dofs18CD,basisResult18CE,xn17F5);
      tensor[3,3] op1_e3_l_2418BF#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2118BC,op1_e3_l_2218BD);
      tensor[3] op1_e3_l_2518C0#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_2318BE);
      tensor[3] op1_e3_l_2618C1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2418BF,op1_e3_l_2518C0);
      tensor[3] op1_e3_l_2718C2#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_2618C1);
      tensor[3] _t18B2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18B0,op1_e3_l_2718C2);
      real _t18EC#1 = TensorIndex<tensor[3],[0]>(_t18B2);
      real _t18EE#3 = -0.e0;
      bool _t18F0#1 = GT<real>(_t18EC,_t18EE);
      real _t18F2#1 = TensorIndex<tensor[3],[1]>(_t18B2);
      bool _t18F4#1 = GT<real>(_t18F2,_t18EE);
      real _t18F6#1 = TensorIndex<tensor[3],[2]>(_t18B2);
      bool _t18F8#1 = GT<real>(_t18F6,_t18EE);
      bool _t18FA#1 = BAnd(_t18F4,_t18F8);
      bool _t18FC#1 = BAnd(_t18F0,_t18FA);
      bool _t18FE#1 = BAnd(_t18AE,_t18FC);
      if _t18FE then goto ASSIGN1902 else goto JOIN1904
    ASSIGN1902:  preds = [COND1900]
      femData:MeshPos _t1901#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellItter17EC,xn17F4,pos17DA);
      return _t1901
      goto JOIN1904
    JOIN1904:  preds = [*RETURN(_t1901)1903,COND1900]
      goto JOIN1905
    JOIN1905:  preds = [JOIN1904,COND186B]
      goto FOREACH17F3
    NEXT1908:  preds = [FOREACH17F3]
      goto FOREACH17ED
    ASSIGN190A:  preds = [FOREACH17ED]
      int _t1909#2 = 2;
      int _t190B#1 = IAdd(_t1909,_t17E6);
      int _t190D#1 = IMul(_t190B,numCell17E8);
      int[] _t190F#1 = Range(newtonInt17E0,_t190D);
    FOREACH1912:  preds = [ASSIGN1910,NEXT1A38]
      foreach (itter1911 in _t190F) on exit goto ASSIGN1A3B
        int cellInt1915#28 = phi(cellInt17E2,cellInt1A35)
        int newtonInt1A27#1 = phi(newtonInt17E0,newtonInt1A36)
        tensor[3] xn1914#15 = phi(xn1907,xn1913)
      int[4] femIndicies1926#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs1927#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1926);
      tensor[4,3] dofs1925#1 = femDofs1927;
      tensor[3,4] basisResult1928#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_101916#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,dofs1925,basisResult1928,xn17DE);
      tensor[3,3,3] op1_e3_l_121917#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916);
      tensor[3,3,3] op1_e3_l_131918#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916,op1_e3_l_121917);
      tensor[4,3] dofs1929#1 = femDofs1927;
      tensor[3,4] basisResult192A#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_141919#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs1929,basisResult192A,xn17DE);
      tensor[4,3] dofs192B#1 = femDofs1927;
      tensor[3,4] basisResult192C#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_15191A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs192B,basisResult192C,xn17DE);
      tensor[4,3] dofs192D#1 = femDofs1927;
      tensor[3,4] basisResult192E#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_16191B#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs192D,basisResult192E,xn17DE);
      tensor[3,3] op1_e3_l_17191C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16191B);
      tensor[3] op1_e3_l_18191D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15191A,op1_e3_l_17191C);
      real op1_e3_l_19191E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_141919,op1_e3_l_18191D);
      tensor[3,3] op1_e3_l_20191F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_131918);
      real op1_e3_l_211920#1 = λ(T0[])<(2 * T0)> (op1_e3_l_19191E);
      tensor[4,3] dofs192F#1 = femDofs1927;
      tensor[4] basisResult1930#1 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_221921#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,dofs192F,basisResult1930,xn1914);
      tensor[3,3] op1_e3_l_231922#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_20191F,op1_e3_l_211920);
      tensor[3] op1_e3_l_241923#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221921);
      tensor[3] op1_e3_l_251924#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_241923);
      tensor[3] xn1913#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_251924);
      real _t194D#2 = 0.1e-7;
      real _t194F#1 = λ(T0[],T1[])<(T0 * T1)> (_t194D,_t194D);
      int[4] femIndicies1962#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs1963#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1962);
      tensor[4,3] dofs1961#1 = femDofs1963;
      tensor[3,4] basisResult1964#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_181952#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,dofs1961,basisResult1964,xn17DE);
      tensor[3,3,3] op1_e3_l_201953#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181952);
      tensor[3,3,3] op1_e3_l_211954#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181952,op1_e3_l_201953);
      tensor[4,3] dofs1965#1 = femDofs1963;
      tensor[3,4] basisResult1966#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_221955#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs1965,basisResult1966,xn17DE);
      tensor[4,3] dofs1967#1 = femDofs1963;
      tensor[3,4] basisResult1968#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_231956#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs1967,basisResult1968,xn17DE);
      tensor[4,3] dofs1969#1 = femDofs1963;
      tensor[3,4] basisResult196A#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_241957#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs1969,basisResult196A,xn17DE);
      tensor[3,3] op1_e3_l_251958#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_241957);
      tensor[3] op1_e3_l_261959#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_231956,op1_e3_l_251958);
      real op1_e3_l_27195A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_221955,op1_e3_l_261959);
      tensor[3,3] op1_e3_l_28195B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_211954);
      real op1_e3_l_29195C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_27195A);
      tensor[4,3] dofs196B#1 = femDofs1963;
      tensor[4] basisResult196C#1 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_30195D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt1915,mesh17D9,xn1914,dofs196B,basisResult196C,xn1914);
      tensor[3,3] op1_e3_l_31195E#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_28195B,op1_e3_l_29195C);
      tensor[3] op1_e3_l_32195F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30195D);
      tensor[3] op1_e3_l_481960#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_31195E,op1_e3_l_32195F);
      real _t1951#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481960,op1_e3_l_481960);
      bool _t1989#1 = GTE<real>(_t194F,_t1951);
      if _t1989 then goto ASSIGN198D else goto JOIN1A25
    ASSIGN198D:  preds = [COND198B]
      real _t198C#4 = 0.1e1;
      real _t198E#4 = 0.1e-4;
      real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (_t198C,_t198E);
      tensor[3] _t1992#1 = <tensor[3]>[_t198C,_t198C,_t198C];
      int[4] femIndicies19A6#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs19A7#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies19A6);
      tensor[4,3] dofs19A5#1 = femDofs19A7;
      tensor[3,4] basisResult19A8#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_111995#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,dofs19A5,basisResult19A8,xn17DE);
      tensor[3,3,3] op1_e3_l_131996#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111995);
      tensor[3,3,3] op1_e3_l_141997#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_111995,op1_e3_l_131996);
      tensor[4,3] dofs19A9#1 = femDofs19A7;
      tensor[3,4] basisResult19AA#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_151998#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19A9,basisResult19AA,xn17DE);
      tensor[4,3] dofs19AB#1 = femDofs19A7;
      tensor[3,4] basisResult19AC#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_161999#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19AB,basisResult19AC,xn17DE);
      tensor[4,3] dofs19AD#1 = femDofs19A7;
      tensor[3,4] basisResult19AE#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_17199A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19AD,basisResult19AE,xn17DE);
      tensor[3,3] op1_e3_l_18199B#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17199A);
      tensor[3] op1_e3_l_19199C#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_161999,op1_e3_l_18199B);
      real op1_e3_l_20199D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_151998,op1_e3_l_19199C);
      tensor[3,3] op1_e3_l_21199E#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_141997);
      real op1_e3_l_22199F#1 = λ(T0[])<(2 * T0)> (op1_e3_l_20199D);
      tensor[4,3] dofs19AF#1 = femDofs19A7;
      tensor[4] basisResult19B0#1 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_2319A0#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,dofs19AF,basisResult19B0,xn1914);
      tensor[3,3] op1_e3_l_2419A1#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21199E,op1_e3_l_22199F);
      tensor[3] op1_e3_l_2519A2#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_2319A0);
      tensor[3] op1_e3_l_2619A3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2419A1,op1_e3_l_2519A2);
      tensor[3] op1_e3_l_2719A4#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_2619A3);
      real _t1994#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1992,op1_e3_l_2719A4);
      bool _t19CE#1 = GT<real>(_t1990,_t1994);
      tensor[3] _t19D0#1 = <tensor[3]>[_t198E,_t198E,_t198E];
      int[4] femIndicies19E4#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs19E5#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies19E4);
      tensor[4,3] dofs19E3#1 = femDofs19E5;
      tensor[3,4] basisResult19E6#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1119D3#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,dofs19E3,basisResult19E6,xn17DE);
      tensor[3,3,3] op1_e3_l_1319D4#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1119D3);
      tensor[3,3,3] op1_e3_l_1419D5#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1119D3,op1_e3_l_1319D4);
      tensor[4,3] dofs19E7#1 = femDofs19E5;
      tensor[3,4] basisResult19E8#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1519D6#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19E7,basisResult19E8,xn17DE);
      tensor[4,3] dofs19E9#1 = femDofs19E5;
      tensor[3,4] basisResult19EA#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1619D7#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19E9,basisResult19EA,xn17DE);
      tensor[4,3] dofs19EB#1 = femDofs19E5;
      tensor[3,4] basisResult19EC#1 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3] probe_l_1719D8#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,dofs19EB,basisResult19EC,xn17DE);
      tensor[3,3] op1_e3_l_1819D9#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1719D8);
      tensor[3] op1_e3_l_1919DA#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1619D7,op1_e3_l_1819D9);
      real op1_e3_l_2019DB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1519D6,op1_e3_l_1919DA);
      tensor[3,3] op1_e3_l_2119DC#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1419D5);
      real op1_e3_l_2219DD#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2019DB);
      tensor[4,3] dofs19ED#1 = femDofs19E5;
      tensor[4] basisResult19EE#1 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_2319DE#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,dofs19ED,basisResult19EE,xn1914);
      tensor[3,3] op1_e3_l_2419DF#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2119DC,op1_e3_l_2219DD);
      tensor[3] op1_e3_l_2519E0#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_2319DE);
      tensor[3] op1_e3_l_2619E1#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2419DF,op1_e3_l_2519E0);
      tensor[3] op1_e3_l_2719E2#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_2619E1);
      tensor[3] _t19D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t19D0,op1_e3_l_2719E2);
      real _t1A0C#1 = TensorIndex<tensor[3],[0]>(_t19D2);
      real _t1A0E#3 = -0.e0;
      bool _t1A10#1 = GT<real>(_t1A0C,_t1A0E);
      real _t1A12#1 = TensorIndex<tensor[3],[1]>(_t19D2);
      bool _t1A14#1 = GT<real>(_t1A12,_t1A0E);
      real _t1A16#1 = TensorIndex<tensor[3],[2]>(_t19D2);
      bool _t1A18#1 = GT<real>(_t1A16,_t1A0E);
      bool _t1A1A#1 = BAnd(_t1A14,_t1A18);
      bool _t1A1C#1 = BAnd(_t1A10,_t1A1A);
      bool _t1A1E#1 = BAnd(_t19CE,_t1A1C);
      if _t1A1E then goto ASSIGN1A22 else goto JOIN1A24
    ASSIGN1A22:  preds = [COND1A20]
      femData:MeshPos _t1A21#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellInt1915,xn1913,pos17DA);
      return _t1A21
      goto JOIN1A24
    JOIN1A24:  preds = [*RETURN(_t1A21)1A23,COND1A20]
      goto JOIN1A25
    JOIN1A25:  preds = [JOIN1A24,COND198B]
      int newtonInt1A26#2 = IAdd(newtonInt1A27,_t17E6);
      bool _t1A29#1 = GTE<int>(newtonInt1A26,_t1909);
      if _t1A29 then goto ASSIGN1A2D else goto JOIN1A37
    ASSIGN1A2D:  preds = [COND1A2B]
      bool _t1A2C#1 = GTE<int>(cellInt1915,numCell17E8);
      if _t1A2C then goto ASSIGN1A30 else goto ASSIGN1A39
    ASSIGN1A30:  preds = [COND1A2E]
      femData:MeshPos _t1A2F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A2F
      goto JOIN1A34
    JOIN1A34:  preds = [*RETURN(_t1A2F)1A31,ASSIGN1A39]
      int cellInt1A32#1 = phi(cellInt1A33)
      goto JOIN1A37
    JOIN1A37:  preds = [JOIN1A34,COND1A2B]
      int cellInt1A35#1 = phi(cellInt1A32,cellInt1915)
      int newtonInt1A36#1 = phi(newtonInt17E0,newtonInt1A26)
      goto FOREACH1912
    ASSIGN1A39:  preds = [COND1A2E]
      int cellInt1A33#1 = IAdd(cellInt1915,_t17E6);
      goto JOIN1A34
    ASSIGN1A3B:  preds = [FOREACH1912]
      string _t1A3A#1 = "Bad end 2";
      string _t1A3C#1 = "\n";
      Print<[string,string]>(_t1A3A,_t1A3C);
      femData:MeshPos _t1A3F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A3F
}
## input initialization
  ENTRY15FA:  preds = []
    real isoval15FB#1 = 0.2e0;
    globals.isoval15DC = isoval15FB;
    real thick15FE#1 = 0.7e-1;
    globals.thick15DD = thick15FE;
    real _t1601#2 = 0.3e1;
    real _t1603#1 = -0.3e1;
    tensor[3] camEye1605#1 = <tensor[3]>[_t1601,_t1603,_t1601];
    globals.camEye15DE = camEye1605;
    real _t1608#3 = 0.5e0;
    tensor[3] camAt160A#1 = <tensor[3]>[_t1608,_t1608,_t1608];
    globals.camAt15DF = camAt160A;
    real _t160D#2 = 0.e0;
    real _t160F#2 = 0.1e1;
    tensor[3] camUp1611#2 = <tensor[3]>[_t160D,_t160D,_t160F];
    globals.camUp15E0 = camUp1611;
    real camFOV1614#1 = 0.137e2;
    globals.camFOV15E1 = camFOV1614;
    int iresU1617#2 = 500;
    globals.iresU15E2 = iresU1617;
    globals.iresV15E3 = iresU1617;
    real camNear161B#1 = -0.2e1;
    globals.camNear15E4 = camNear161B;
    real camFar161E#1 = 0.5e1;
    globals.camFar15E5 = camFar161E;
    globals.refStep15E6 = _t160F;
    real rayStep1622#1 = 0.1e-1;
    globals.rayStep15E7 = rayStep1622;
    globals.lightVsp15E8 = camUp1611;
    real phongKa1626#1 = 0.1e0;
    globals.phongKa15E9 = phongKa1626;
    real phongKd1629#1 = 0.9e0;
    globals.phongKd15EA = phongKd1629;
    bool debug162C#1 = false;
    globals.debug15EB = debug162C;
    int su162F#2 = 250;
    globals.su15EC = su162F;
    globals.sv15ED = su162F;
    return
## global-variable initialization
  ENTRY1634:  preds = []
    femData:Mesh a1635#3 = globals.a15D9;
    femData:Space 0b043B_intermedateGlobal1637#1 = globals.0b043B_intermedateGlobal15DA;
    femData:FemFunc 0c043D_intermedateGlobal1639#1 = globals.0c043D_intermedateGlobal15DB;
    real isoval163B#0 = globals.isoval15DC;
    tensor[3] camEye163D#6 = globals.camEye15DE;
    tensor[3] camAt163F#6 = globals.camAt15DF;
    tensor[3] camUp1641#2 = globals.camUp15E0;
    real camFOV1643#2 = globals.camFOV15E1;
    int iresU1645#1 = globals.iresU15E2;
    int iresV1647#1 = globals.iresV15E3;
    tensor[3] lightVsp1649#2 = globals.lightVsp15E8;
    int _t164B#1 = 0;
    int _t164D#1 = 1;
    int _t164F#1 = ExtractFemItem<int,NumCell(Mesh)>(a1635);
    int _t1651#1 = ISub(_t164F,_t164D);
    int[] _t1653#1 = Range(_t164B,_t1651);
    femData:MeshCell[] _t1655#1 = <femData:MeshCell[]>{};
  FOREACH1658:  preds = [ASSIGN1656,NEXT165E]
    foreach (_t1657 in _t1653) on exit goto ASSIGN1660
      femData:MeshCell[] _t165C#1 = phi(_t1655,_t165B)
    femData:MeshCell _t1659#1 = LoadFem<femData:MeshCell>(a1635,_t1657);
    femData:MeshCell[] _t165B#1 = Append<femData:MeshCell>(_t165C,_t1659);
    goto FOREACH1658
  ASSIGN1660:  preds = [FOREACH1658]
    femData:Space b165F#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1637,a1635);
    femData:FemFunc c1661#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1639,b165F);
    femData:Space _t1663#2 = ExtractFem<femData:Space,femData:FemFunc>(c1661);
    femData:Mesh _t1665#1 = ExtractFem<femData:Mesh,femData:Space>(_t1663);
    image(IMAGE1D<double[3]>) I1667#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1669#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img166B#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1667);
    tensor[3] op1_e3_l_2166E#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_4166F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2166E,op1_e3_l_2166E);
    real camDist166D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4166F);
    globals.camDist15EE = camDist166D;
    tensor[3] op1_e3_l_41675#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_61676#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_41675,op1_e3_l_41675);
    real op1_e3_l_71677#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61676);
    real op1_e3_l_91678#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_71677);
    tensor[3] camN1674#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_41675,op1_e3_l_91678);
    globals.camN15EF = camN1674;
    tensor[3] op1_e3_l_101680#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_121681#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_101680,op1_e3_l_101680);
    real op1_e3_l_131682#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_121681);
    tensor[3,3] op1_e3_l_151683#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1641);
    real op1_e3_l_161684#3 = λ(T0[])<(1) / ( T0)> (op1_e3_l_131682);
    tensor[3] op1_e3_l_171685#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_101680,op1_e3_l_151683);
    real op1_e3_l_341686#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171685,op1_e3_l_171685);
    real op1_e3_l_351687#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_161684,op1_e3_l_161684,op1_e3_l_341686);
    real op1_e3_l_361688#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351687);
    tensor[3] op1_e3_l_371689#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_161684,op1_e3_l_171685);
    real op1_e3_l_38168A#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361688);
    tensor[3] camU167F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371689,op1_e3_l_38168A);
    globals.camU15F0 = camU167F;
    tensor[3] op1_e3_l_141699#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_16169A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141699,op1_e3_l_141699);
    real op1_e3_l_17169B#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_16169A);
    tensor[3,3] op1_e3_l_23169C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1641);
    tensor[3] op1_e3_l_26169D#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_141699,op1_e3_l_23169C);
    real op1_e3_l_28169E#4 = λ(T0[])<(1) / ( T0)> (op1_e3_l_17169B);
    real op1_e3_l_30169F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_26169D,op1_e3_l_26169D);
    real op1_e3_l_3116A0#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_28169E,op1_e3_l_28169E,op1_e3_l_30169F);
    real op1_e3_l_3216A1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3116A0);
    tensor[3,3] op1_e3_l_4516A2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_141699);
    tensor[3] op1_e3_l_4716A3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_26169D,op1_e3_l_4516A2);
    real op1_e3_l_4816A4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_3216A1);
    tensor[3] op1_e3_l_5016A5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_28169E,op1_e3_l_4716A3);
    tensor[3] camV1698#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_4816A4,op1_e3_l_28169E,op1_e3_l_5016A5);
    globals.camV15F1 = camV1698;
    real _t16B5#2 = 0.314159265358979323846264338327950288e1;
    real _t16B7#2 = 0.36e3;
    real op1_e3_l_516BA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1643,_t16B5);
    real op1_e3_l_616BB#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16B7,op1_e3_l_516BA);
    tensor[3] op1_e3_l_716BC#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_916BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_716BC,op1_e3_l_716BC);
    real op1_e3_l_1016BE#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_616BB);
    real op1_e3_l_1116BF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_916BD);
    real camVmax16B9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1016BE,op1_e3_l_1116BF);
    globals.camVmax15F2 = camVmax16B9;
    real _t16C8#1 = IntToReal(iresU1645);
    real _t16CA#1 = IntToReal(iresV1647);
    real op1_e3_l_716CD#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1643,_t16B5);
    real op1_e3_l_816CE#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16B7,op1_e3_l_716CD);
    tensor[3] op1_e3_l_916CF#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_1116D0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_916CF,op1_e3_l_916CF);
    real op1_e3_l_1216D1#1 = λ(T0[])<Tangent(T0)> (op1_e3_l_816CE);
    real op1_e3_l_1316D2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1116D0);
    real op1_e3_l_1416D3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t16C8,op1_e3_l_1216D1,op1_e3_l_1316D2);
    real camUmax16CC#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16CA,op1_e3_l_1416D3);
    globals.camUmax15F3 = camUmax16CC;
    tensor[3,3] _t16DD#1 = <tensor[3,3]>[camU167F,camV1698,camN1674];
    real op1_e3_l_316E0#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1649);
    real op1_e3_l_416E1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_316E0);
    real op1_e3_l_516E2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_416E1);
    tensor[3] op1_e3_l_616E3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t16DD,lightVsp1649);
    tensor[3] light16DF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_516E2,op1_e3_l_616E3);
    globals.light15F4 = light16DF;
    globals._t15F5 = _t1665;
    globals._tX15F6 = _t1663;
    globals.c15F7 = c1661;
    globals.img15F8 = img166B;
    globals._tXX15F9 = _t1669;
    globals.I1CC4 = I1667;
    return
## strand
  strand raycast (int ui16F0#2, int vi16F1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY16FC:  preds = []
        int iresU16FD#1 = globals.iresU15E2;
        int iresV16FF#1 = globals.iresV15E3;
        real camNear1701#1 = globals.camNear15E4;
        real camDist1703#1 = globals.camDist15EE;
        tensor[3] camN1705#1 = globals.camN15EF;
        tensor[3] camU1707#1 = globals.camU15F0;
        tensor[3] camV1709#1 = globals.camV15F1;
        real camVmax170B#6 = globals.camVmax15F2;
        real camUmax170D#4 = globals.camUmax15F3;
        real _t170F#8 = -0.5e0;
        real _t1711#2 = IntToReal(ui16F0);
        real _t1713#2 = IntToReal(iresU16FD);
        real _t1715#4 = 0.5e0;
        real op1_e3_l_61718#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1713,_t1715);
        real op1_e3_l_71719#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1711);
        real op1_e3_l_8171A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_61718);
        real op1_e3_l_9171B#2 = λ(T0[])<Neg(T0)> (camUmax170D);
        real op1_e3_l_10171C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71719,op1_e3_l_8171A);
        real op1_e3_l_11171D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax170D,op1_e3_l_9171B);
        real op1_e3_l_13171E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10171C,op1_e3_l_11171D);
        real rayU1717#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9171B,op1_e3_l_13171E);
        real _t1727#2 = IntToReal(vi16F1);
        real _t1729#2 = IntToReal(iresV16FF);
        real op1_e3_l_6172C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1729,_t1715);
        real op1_e3_l_7172D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1727);
        real op1_e3_l_8172E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_6172C);
        real op1_e3_l_9172F#1 = λ(T0[])<Neg(T0)> (camVmax170B);
        real op1_e3_l_101730#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_8172E);
        real op1_e3_l_111731#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax170B,op1_e3_l_9172F);
        real op1_e3_l_121732#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101730,op1_e3_l_111731);
        real rayV172B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_121732);
        real op1_e3_l_16173C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1713,_t1715);
        real op1_e3_l_17173D#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1711);
        real op1_e3_l_18173E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_16173C);
        real op1_e3_l_19173F#2 = λ(T0[])<Neg(T0)> (camUmax170D);
        real op1_e3_l_201740#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_17173D,op1_e3_l_18173E);
        real op1_e3_l_211741#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax170D,op1_e3_l_19173F);
        real op1_e3_l_231742#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_201740,op1_e3_l_211741);
        real op1_e3_l_241743#1 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_19173F,op1_e3_l_231742);
        real op1_e3_l_251744#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1715,_t1729);
        real op1_e3_l_261745#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1727);
        real op1_e3_l_271746#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_251744);
        real op1_e3_l_281747#1 = λ(T0[])<Neg(T0)> (camVmax170B);
        real op1_e3_l_291748#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_261745,op1_e3_l_271746);
        real op1_e3_l_301749#1 = λ(T0[],T1[])<(T1) - (T0)> (camVmax170B,op1_e3_l_281747);
        real op1_e3_l_31174A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291748,op1_e3_l_301749);
        real op1_e3_l_32174B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_31174A);
        tensor[3] op1_e3_l_33174C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1707,op1_e3_l_241743);
        tensor[3] op1_e3_l_34174D#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1709,op1_e3_l_32174B);
        tensor[3] op1_e3_l_35174E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33174C,op1_e3_l_34174D);
        tensor[3] op1_e3_l_36174F#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1703,op1_e3_l_35174E);
        tensor[3] rayVec173B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1705,op1_e3_l_36174F);
        real transp1765#1 = 0.1e1;
        real _t1767#8 = 0.e0;
        tensor[3] rgb1769#1 = <tensor[3]>[_t1767,_t1767,_t1767];
        tensor[4] rgba176B#1 = <tensor[4]>[_t1767,_t1767,_t1767,_t1767];
        self.rayU = rayU1717;
        self.rayV = rayV172B;
        self.rayN = camNear1701;
        self.rayVec = rayVec173B;
        self.transp = transp1765;
        self.rgb = rgb1769;
        self.rgba = rgba176B;
        self.gray = _t1767;
        self.ui = ui16F0;
        self.vi = vi16F1;
        return
    end state init
    method update
        ENTRY1778:  preds = []
          image(IMAGE1D<double[3]>) I1CC5#3 = globals.I1CC4;
          real isoval1779#2 = globals.isoval15DC;
          femData:Mesh _t177B#42 = globals._t15F5;
          femData:Space _t177D#20 = globals._tX15F6;
          femData:FemFunc c177F#20 = globals.c15F7;
          image(IMAGE1D<double[3]>) img1781#1 = globals.img15F8;
          kernel _t1783#1 = globals._tXX15F9;
          femData:Mesh a1785#1 = globals.a15D9;
          real thick1787#2 = globals.thick15DD;
          tensor[3] camEye1789#1 = globals.camEye15DE;
          real camNear178B#2 = globals.camNear15E4;
          real camFar178D#2 = globals.camFar15E5;
          real refStep178F#1 = globals.refStep15E6;
          real rayStep1791#2 = globals.rayStep15E7;
          real phongKa1793#1 = globals.phongKa15E9;
          real phongKd1795#1 = globals.phongKd15EA;
          bool debug1797#1 = globals.debug15EB;
          int su1799#1 = globals.su15EC;
          int sv179B#1 = globals.sv15ED;
          tensor[3] light179D#1 = globals.light15F4;
          real rayN179F#4 = self.rayN;
          tensor[3] rayVec17A1#2 = self.rayVec;
          real transp17A3#10 = self.transp;
          tensor[3] rgb17A5#9 = self.rgb;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug1797 then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,su1799);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN1C6C
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN1C6C]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          tensor[3] op1_e3_l_317B9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN179F,rayVec17A1);
          tensor[3] x17B8#31 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1789,op1_e3_l_317B9);
          real _t17BC#8 = 0.e0;
          real _t17BE#2 = TensorIndex<tensor[3],[0]>(x17B8);
          bool _t17C0#1 = LT<real>(_t17BC,_t17BE);
          if _t17C0 then goto ASSIGN17C4 else goto JOIN1C4E
        ASSIGN17C4:  preds = [COND17C2]
          real _t17C3#13 = 0.1e1;
          bool _t17C5#1 = LT<real>(_t17BE,_t17C3);
          if _t17C5 then goto ASSIGN17C9 else goto JOIN1C4B
        ASSIGN17C9:  preds = [COND17C7]
          real _t17C8#2 = TensorIndex<tensor[3],[1]>(x17B8);
          bool _t17CA#1 = LT<real>(_t17BC,_t17C8);
          if _t17CA then goto ASSIGN17CE else goto JOIN1C48
        ASSIGN17CE:  preds = [COND17CC]
          bool _t17CD#1 = LT<real>(_t17C8,_t17C3);
          if _t17CD then goto ASSIGN17D1 else goto JOIN1C45
        ASSIGN17D1:  preds = [COND17CF]
          real _t17D0#2 = TensorIndex<tensor[3],[2]>(x17B8);
          bool _t17D2#1 = LT<real>(_t17BC,_t17D0);
          if _t17D2 then goto ASSIGN17D6 else goto JOIN1C42
        ASSIGN17D6:  preds = [COND17D4]
          bool _t17D5#1 = LT<real>(_t17D0,_t17C3);
          if _t17D5 then goto ASSIGN1A43 else goto JOIN1C3F
        ASSIGN1A43:  preds = [COND17D7]
          femData:MeshPos p1A42#1 = findPos17D8 (a1785,x17B8);
          bool _t1A44#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1A42);
          if _t1A44 then goto ASSIGN1A48 else goto ASSIGN1C67
        ASSIGN1A48:  preds = [COND1A46]
          real _t1A47#2 = 0.13e1;
          femData:MeshPos callFindPos1A69#2 = findPos17D8 (_t177B,x17B8);
          int intPos1A6A#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A69);
          tensor[3] refPos1A6B#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A69);
          tensor[3] Inner1A4A#2 = x17B8;
          femData:MeshPos callFindPos1A6C#2 = findPos17D8 (_t177B,Inner1A4A);
          int intPos1A6D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A6C);
          tensor[3] refPos1A6E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A6C);
          int[10] femIndicies1A70#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A6D);
          tensor[10] femDofs1A71#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A70);
          tensor[10] dofs1A6F#1 = femDofs1A71;
          tensor[10] basisResult1A72#1 = EvaluateBasis<BasisArray(10)>(refPos1A6E);
          real compositionl1A4B#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,Inner1A4A,dofs1A6F,basisResult1A72,refPos1A6E);
          real op1_e3_l_231A4C#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1779,compositionl1A4B);
          tensor[3] Inner1A4D#2 = x17B8;
          femData:MeshPos callFindPos1A73#2 = findPos17D8 (_t177B,Inner1A4D);
          int intPos1A74#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A73);
          tensor[3] refPos1A75#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A73);
          int[10] femIndicies1A77#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A74);
          tensor[10] femDofs1A78#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A77);
          tensor[10] dofs1A76#1 = femDofs1A78;
          tensor[3,10] basisResult1A79#1 = EvaluateBasis<BasisArray(3,10)>(refPos1A75);
          tensor[3] compositionl1A4E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1A4D,dofs1A76,basisResult1A79,refPos1A75);
          int[4] femIndicies1A7B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1A6A);
          tensor[4,3] femDofs1A7C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1A7B);
          tensor[4,3] dofs1A7A#1 = femDofs1A7C;
          tensor[3,4] basisResult1A7D#1 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3,3] probe_l_251A4F#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,dofs1A7A,basisResult1A7D,refPos1A6B);
          tensor[3,3,3] op1_e3_l_271A50#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F);
          tensor[3,3,3] op1_e3_l_281A51#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F,op1_e3_l_271A50);
          tensor[4,3] dofs1A7E#1 = femDofs1A7C;
          tensor[3,4] basisResult1A7F#1 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3] probe_l_291A52#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1A7E,basisResult1A7F,refPos1A6B);
          tensor[4,3] dofs1A80#1 = femDofs1A7C;
          tensor[3,4] basisResult1A81#1 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3] probe_l_301A53#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1A80,basisResult1A81,refPos1A6B);
          tensor[4,3] dofs1A82#1 = femDofs1A7C;
          tensor[3,4] basisResult1A83#1 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3] probe_l_311A54#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1A82,basisResult1A83,refPos1A6B);
          tensor[3,3] op1_e3_l_321A55#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311A54);
          tensor[3] op1_e3_l_331A56#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301A53,op1_e3_l_321A55);
          real op1_e3_l_341A57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291A52,op1_e3_l_331A56);
          tensor[3,3] op1_e3_l_351A58#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281A51);
          real op1_e3_l_361A59#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341A57);
          tensor[3,3] op1_e3_l_371A5A#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351A58,op1_e3_l_361A59);
          tensor[3] op1_e3_l_381A5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1A4E,op1_e3_l_371A5A);
          tensor[3] Inner1A5C#2 = x17B8;
          femData:MeshPos callFindPos1A84#2 = findPos17D8 (_t177B,Inner1A5C);
          int intPos1A85#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A84);
          tensor[3] refPos1A86#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A84);
          int[10] femIndicies1A88#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A85);
          tensor[10] femDofs1A89#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A88);
          tensor[10] dofs1A87#1 = femDofs1A89;
          tensor[3,10] basisResult1A8A#1 = EvaluateBasis<BasisArray(3,10)>(refPos1A86);
          tensor[3] compositionl1A5D#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1A5C,dofs1A87,basisResult1A8A,refPos1A86);
          tensor[3] op1_e3_l_531A5E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1A5D,op1_e3_l_371A5A);
          tensor[3] op1_e3_l_541A5F#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381A5B);
          tensor[3] op1_e3_l_551A60#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_531A5E);
          real op1_e3_l_561A61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541A5F,op1_e3_l_551A60);
          real op1_e3_l_571A62#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561A61);
          real op1_e3_l_581A63#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231A4C);
          real op1_e3_l_591A64#1 = λ(T0[],T1[])<(T0 * T1)> (thick1787,op1_e3_l_571A62);
          real op1_e3_l_601A65#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581A63,op1_e3_l_591A64);
          real op1_e3_l_611A66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_601A65);
          real op1_e3_l_621A67#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A47,op1_e3_l_611A66);
          real op1_e3_l_631A68#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t17BC,_t17C3,op1_e3_l_621A67);
          real a1A49#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_631A68);
          bool _t1ACD#1 = GT<real>(a1A49,_t17BC);
          if _t1ACD then goto ASSIGN1B13 else goto JOIN1C36
        ASSIGN1B13:  preds = [COND1ACF]
          femData:MeshPos callFindPos1AF1#2 = findPos17D8 (_t177B,x17B8);
          int intPos1AF2#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1AF1);
          tensor[3] refPos1AF3#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1AF1);
          tensor[3] Inner1AD1#2 = x17B8;
          femData:MeshPos callFindPos1AF4#2 = findPos17D8 (_t177B,Inner1AD1);
          int intPos1AF5#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1AF4);
          tensor[3] refPos1AF6#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1AF4);
          int[10] femIndicies1AF8#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1AF5);
          tensor[10] femDofs1AF9#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1AF8);
          tensor[10] dofs1AF7#1 = femDofs1AF9;
          tensor[10] basisResult1AFA#1 = EvaluateBasis<BasisArray(10)>(refPos1AF6);
          real compositionl1AD2#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,Inner1AD1,dofs1AF7,basisResult1AFA,refPos1AF6);
          real op1_e3_l_241AD3#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1779,compositionl1AD2);
          tensor[3] Inner1AD4#2 = x17B8;
          femData:MeshPos callFindPos1AFB#2 = findPos17D8 (_t177B,Inner1AD4);
          int intPos1AFC#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1AFB);
          tensor[3] refPos1AFD#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1AFB);
          int[10] femIndicies1AFF#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1AFC);
          tensor[10] femDofs1B00#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1AFF);
          tensor[10] dofs1AFE#1 = femDofs1B00;
          tensor[3,10] basisResult1B01#1 = EvaluateBasis<BasisArray(3,10)>(refPos1AFD);
          tensor[3] compositionl1AD5#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1AD4,dofs1AFE,basisResult1B01,refPos1AFD);
          int[4] femIndicies1B03#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1AF2);
          tensor[4,3] femDofs1B04#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1B03);
          tensor[4,3] dofs1B02#1 = femDofs1B04;
          tensor[3,4] basisResult1B05#1 = EvaluateBasis<BasisArray(3,4)>(refPos1AF3);
          tensor[3,3] probe_l_261AD6#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,dofs1B02,basisResult1B05,refPos1AF3);
          tensor[3,3,3] op1_e3_l_281AD7#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_261AD6);
          tensor[3,3,3] op1_e3_l_291AD8#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_261AD6,op1_e3_l_281AD7);
          tensor[4,3] dofs1B06#1 = femDofs1B04;
          tensor[3,4] basisResult1B07#1 = EvaluateBasis<BasisArray(3,4)>(refPos1AF3);
          tensor[3] probe_l_301AD9#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B06,basisResult1B07,refPos1AF3);
          tensor[4,3] dofs1B08#1 = femDofs1B04;
          tensor[3,4] basisResult1B09#1 = EvaluateBasis<BasisArray(3,4)>(refPos1AF3);
          tensor[3] probe_l_311ADA#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B08,basisResult1B09,refPos1AF3);
          tensor[4,3] dofs1B0A#1 = femDofs1B04;
          tensor[3,4] basisResult1B0B#1 = EvaluateBasis<BasisArray(3,4)>(refPos1AF3);
          tensor[3] probe_l_321ADB#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B0A,basisResult1B0B,refPos1AF3);
          tensor[3,3] op1_e3_l_331ADC#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_321ADB);
          tensor[3] op1_e3_l_341ADD#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_311ADA,op1_e3_l_331ADC);
          real op1_e3_l_351ADE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_301AD9,op1_e3_l_341ADD);
          tensor[3,3] op1_e3_l_361ADF#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_291AD8);
          real op1_e3_l_371AE0#1 = λ(T0[])<(2 * T0)> (op1_e3_l_351ADE);
          tensor[3,3] op1_e3_l_381AE1#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_361ADF,op1_e3_l_371AE0);
          tensor[3] op1_e3_l_391AE2#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1AD5,op1_e3_l_381AE1);
          tensor[3] Inner1AE3#2 = x17B8;
          femData:MeshPos callFindPos1B0C#2 = findPos17D8 (_t177B,Inner1AE3);
          int intPos1B0D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1B0C);
          tensor[3] refPos1B0E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1B0C);
          int[10] femIndicies1B10#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1B0D);
          tensor[10] femDofs1B11#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1B10);
          tensor[10] dofs1B0F#1 = femDofs1B11;
          tensor[3,10] basisResult1B12#1 = EvaluateBasis<BasisArray(3,10)>(refPos1B0E);
          tensor[3] compositionl1AE4#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1AE3,dofs1B0F,basisResult1B12,refPos1B0E);
          tensor[3] op1_e3_l_541AE5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1AE4,op1_e3_l_381AE1);
          tensor[3] op1_e3_l_551AE6#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_391AE2);
          tensor[3] op1_e3_l_561AE7#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_541AE5);
          real op1_e3_l_571AE8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_551AE6,op1_e3_l_561AE7);
          real op1_e3_l_581AE9#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_571AE8);
          real op1_e3_l_591AEA#1 = λ(T0[])<Abs(T0)> (op1_e3_l_241AD3);
          real op1_e3_l_601AEB#1 = λ(T0[],T1[])<(T0 * T1)> (thick1787,op1_e3_l_581AE9);
          real op1_e3_l_611AEC#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_591AEA,op1_e3_l_601AEB);
          real op1_e3_l_621AED#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_611AEC);
          real op1_e3_l_631AEE#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A47,op1_e3_l_621AED);
          real op1_e3_l_641AEF#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t17C3,_t17BC,op1_e3_l_631AEE);
          real op1_e3_l_651AF0#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_641AEF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_651AF0);
          real op1_e3_l_31B57#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec17A1);
          real op1_e3_l_41B58#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31B57);
          real op1_e3_l_51B59#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1791,op1_e3_l_41B58);
          real _t1B56#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep178F,op1_e3_l_51B59);
          real _t1B5E#2 = MathFn<pow>(_t1AD0,_t1B56);
          real _t1B60#2 = 0.11e1;
          real _t1B62#1 = 0.7e0;
          femData:MeshPos callFindPos1B81#2 = findPos17D8 (_t177B,x17B8);
          int intPos1B82#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1B81);
          tensor[3] refPos1B83#8 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1B81);
          tensor[3] Inner1B65#2 = x17B8;
          femData:MeshPos callFindPos1B84#2 = findPos17D8 (_t177B,Inner1B65);
          int intPos1B85#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1B84);
          tensor[3] refPos1B86#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1B84);
          int[10] femIndicies1B88#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1B85);
          tensor[10] femDofs1B89#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1B88);
          tensor[10] dofs1B87#1 = femDofs1B89;
          tensor[3,10] basisResult1B8A#1 = EvaluateBasis<BasisArray(3,10)>(refPos1B86);
          tensor[3] compositionl1B66#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1B65,dofs1B87,basisResult1B8A,refPos1B86);
          int[4] femIndicies1B8C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1B82);
          tensor[4,3] femDofs1B8D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1B8C);
          tensor[4,3] dofs1B8B#1 = femDofs1B8D;
          tensor[3,4] basisResult1B8E#1 = EvaluateBasis<BasisArray(3,4)>(refPos1B83);
          tensor[3,3] probe_l_181B67#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,dofs1B8B,basisResult1B8E,refPos1B83);
          tensor[3,3,3] op1_e3_l_201B68#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181B67);
          tensor[3,3,3] op1_e3_l_211B69#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_181B67,op1_e3_l_201B68);
          tensor[4,3] dofs1B8F#1 = femDofs1B8D;
          tensor[3,4] basisResult1B90#1 = EvaluateBasis<BasisArray(3,4)>(refPos1B83);
          tensor[3] probe_l_221B6A#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B8F,basisResult1B90,refPos1B83);
          tensor[4,3] dofs1B91#1 = femDofs1B8D;
          tensor[3,4] basisResult1B92#1 = EvaluateBasis<BasisArray(3,4)>(refPos1B83);
          tensor[3] probe_l_231B6B#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B91,basisResult1B92,refPos1B83);
          tensor[4,3] dofs1B93#1 = femDofs1B8D;
          tensor[3,4] basisResult1B94#1 = EvaluateBasis<BasisArray(3,4)>(refPos1B83);
          tensor[3] probe_l_241B6C#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,dofs1B93,basisResult1B94,refPos1B83);
          tensor[3,3] op1_e3_l_251B6D#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_241B6C);
          tensor[3] op1_e3_l_261B6E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_231B6B,op1_e3_l_251B6D);
          real op1_e3_l_271B6F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_221B6A,op1_e3_l_261B6E);
          tensor[3,3] op1_e3_l_281B70#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_211B69);
          real op1_e3_l_291B71#1 = λ(T0[])<(2 * T0)> (op1_e3_l_271B6F);
          tensor[3,3] op1_e3_l_301B72#3 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_281B70,op1_e3_l_291B71);
          tensor[3] op1_e3_l_311B73#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1B66,op1_e3_l_301B72);
          tensor[3] Inner1B74#2 = x17B8;
          femData:MeshPos callFindPos1B95#2 = findPos17D8 (_t177B,Inner1B74);
          int intPos1B96#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1B95);
          tensor[3] refPos1B97#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1B95);
          int[10] femIndicies1B99#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1B96);
          tensor[10] femDofs1B9A#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1B99);
          tensor[10] dofs1B98#1 = femDofs1B9A;
          tensor[3,10] basisResult1B9B#1 = EvaluateBasis<BasisArray(3,10)>(refPos1B97);
          tensor[3] compositionl1B75#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1B74,dofs1B98,basisResult1B9B,refPos1B97);
          tensor[3] op1_e3_l_461B76#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1B75,op1_e3_l_301B72);
          tensor[3] op1_e3_l_471B77#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_311B73);
          tensor[3] op1_e3_l_481B78#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_461B76);
          real op1_e3_l_491B79#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_471B77,op1_e3_l_481B78);
          real op1_e3_l_501B7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_491B79);
          tensor[3] Inner1B7B#2 = x17B8;
          femData:MeshPos callFindPos1B9C#2 = findPos17D8 (_t177B,Inner1B7B);
          int intPos1B9D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1B9C);
          tensor[3] refPos1B9E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1B9C);
          int[10] femIndicies1BA0#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1B9D);
          tensor[10] femDofs1BA1#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1BA0);
          tensor[10] dofs1B9F#1 = femDofs1BA1;
          tensor[3,10] basisResult1BA2#1 = EvaluateBasis<BasisArray(3,10)>(refPos1B9E);
          tensor[3] compositionl1B7C#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,Inner1B7B,dofs1B9F,basisResult1BA2,refPos1B9E);
          tensor[3] op1_e3_l_651B7D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1B7C,op1_e3_l_301B72);
          tensor[3] op1_e3_l_661B7E#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_651B7D);
          real op1_e3_l_671B7F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_501B7A);
          real op1_e3_l_681B80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light179D,op1_e3_l_661B7E);
          real _t1B64#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671B7F,op1_e3_l_681B80);
          real shade1BE2#1 = Max<real>(_t17BC,_t1B64);
          femData:MeshPos callFindPos1BE7#2 = findPos17D8 (_t177B,x17B8);
          int intPos1BE8#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1BE7);
          tensor[3] refPos1BE9#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1BE7);
          tensor[3] Inner1BE5#2 = x17B8;
          femData:MeshPos callFindPos1BEA#2 = findPos17D8 (_t177B,Inner1BE5);
          int intPos1BEB#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1BEA);
          tensor[3] refPos1BEC#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1BEA);
          int[10] femIndicies1BEE#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1BEB);
          tensor[10] femDofs1BEF#1 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1BEE);
          tensor[10] dofs1BED#1 = femDofs1BEF;
          tensor[10] basisResult1BF0#1 = EvaluateBasis<BasisArray(10)>(refPos1BEC);
          real compositionl1BE6#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,Inner1BE5,dofs1BED,basisResult1BF0,refPos1BEC);
          real _t1BE4#2 = λ(T0[])<T0> (compositionl1BE6);
          real op1_e3_l_151BFF#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,rayN179F);
          real op1_e3_l_161C00#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,camFar178D);
          real op1_e3_l_171C01#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151BFF,op1_e3_l_161C00);
          real op1_e3_l_181C02#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1B60,_t1B62);
          real op1_e3_l_191C03#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_171C01,op1_e3_l_181C02);
          real op1_e3_l_201C04#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1795,shade1BE2);
          real Mtransform1C0A#2 = Transform<IMAGE1D<double[3]>>(I1CC5);
          real MxPos1C0B#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1C0A,_t1BE4);
          real Ttranslate1C0C#1 = Translate<IMAGE1D<double[3]>>(I1CC5);
          real imgPos1C0D#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1C0B,Ttranslate1C0C);
          real nd1C0E#2 = Floor<1>(imgPos1C0D);
          real f1C0F#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1C0D,nd1C0E);
          int n1C10#1 = RealToInt<1>(nd1C0E);
          int lit1C11#1 = 0;
          int idx1C12#1 = IAdd(n1C10,lit1C11);
          tensor[3,2] ldvox1C13#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1CC5,idx1C12);
          tensor[2] kernX_1C14#1 = BuildPos<1>(f1C0F);
          tensor[2] kevalX_d0_1C15#1 = EvalKernel<2,tent,0>(kernX_1C14);
          tensor[3] probe_l_211C05#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1781,_t1783,_t1BE4,Mtransform1C0A,ldvox1C13,kevalX_d0_1C15);
          real op1_e3_l_221C06#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,_t1B5E);
          real op1_e3_l_231C07#1 = λ(T0[],T1[])<(T0 + T1)> (_t1B60,op1_e3_l_191C03);
          real op1_e3_l_241C08#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1793,op1_e3_l_201C04);
          tensor[3] op1_e3_l_251C09#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp17A3,probe_l_211C05,op1_e3_l_221C06,op1_e3_l_231C07,op1_e3_l_241C08);
          tensor[3] rgb1BFE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb17A5,op1_e3_l_251C09);
          real op1_e3_l_41C2F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,_t1B5E);
          real op1_e3_l_51C30#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_41C2F);
          real transp1C2E#1 = λ(T0[],T1[])<(T0 * T1)> (transp17A3,op1_e3_l_51C30);
          goto JOIN1C36
        JOIN1C36:  preds = [ASSIGN1C33,COND1ACF]
          tensor[3] rgb1C34#1 = phi(rgb1BFE,rgb17A5)
          real transp1C35#1 = phi(transp1C2E,transp17A3)
          string _t1C37#1 = "yay!\n";
          Print<[string]>(_t1C37);
          goto JOIN1C3C
        JOIN1C3C:  preds = [MASSIGN1C39,MASSIGN1C6B]
          tensor[3] rgb1C3A#1 = phi(rgb1C34,rgb17A5)
          real transp1C3B#1 = phi(transp1C35,transp17A3)
          goto JOIN1C3F
        JOIN1C3F:  preds = [JOIN1C3C,COND17D7]
          tensor[3] rgb1C3D#1 = phi(rgb1C3A,rgb17A5)
          real transp1C3E#1 = phi(transp1C3B,transp17A3)
          goto JOIN1C42
        JOIN1C42:  preds = [JOIN1C3F,COND17D4]
          tensor[3] rgb1C40#1 = phi(rgb1C3D,rgb17A5)
          real transp1C41#1 = phi(transp1C3E,transp17A3)
          goto JOIN1C45
        JOIN1C45:  preds = [JOIN1C42,COND17CF]
          tensor[3] rgb1C43#1 = phi(rgb1C40,rgb17A5)
          real transp1C44#1 = phi(transp1C41,transp17A3)
          goto JOIN1C48
        JOIN1C48:  preds = [JOIN1C45,COND17CC]
          tensor[3] rgb1C46#1 = phi(rgb1C43,rgb17A5)
          real transp1C47#1 = phi(transp1C44,transp17A3)
          goto JOIN1C4B
        JOIN1C4B:  preds = [JOIN1C48,COND17C7]
          tensor[3] rgb1C49#1 = phi(rgb1C46,rgb17A5)
          real transp1C4A#1 = phi(transp1C47,transp17A3)
          goto JOIN1C4E
        JOIN1C4E:  preds = [JOIN1C4B,COND17C2]
          tensor[3] rgb1C4C#3 = phi(rgb1C49,rgb17A5)
          real transp1C4D#2 = phi(transp1C4A,transp17A3)
          real _t1C4F#1 = 0.1e-1;
          bool _t1C51#1 = LT<real>(transp1C4D,_t1C4F);
          if _t1C51 then goto SAVE1C54 else goto JOIN1C58
        SAVE1C54:  preds = [COND1C53]
          self.transp = _t17BC;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C58
        JOIN1C58:  preds = [*STABILIZE1C56,COND1C53]
          real transp1C57#2 = phi(transp1C4D)
          bool _t1C59#1 = GT<real>(rayN179F,camFar178D);
          if _t1C59 then goto SAVE1C5C else goto JOIN1C5F
        SAVE1C5C:  preds = [COND1C5B]
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C5F
        JOIN1C5F:  preds = [*STABILIZE1C5E,COND1C5B]
          real rayN1C60#1 = λ(T0[],T1[])<(T0 + T1)> (rayN179F,rayStep1791);
          self.rayN = rayN1C60;
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          active
        ASSIGN1C67:  preds = [COND1A46]
          string _t1C66#1 = "\n";
          Print<[tensor[3],string]>(x17B8,_t1C66);
          string _t1C69#1 = "wait what\?\n";
          Print<[string]>(_t1C69);
          goto JOIN1C3C
        ASSIGN1C6C:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,sv179B);
          goto JOIN17B3
    end update
    method stabilize
        ENTRY1C6D:  preds = []
          bool debug1C6E#1 = globals.debug15EB;
          int su1C70#1 = globals.su15EC;
          int sv1C72#1 = globals.sv15ED;
          real transp1C74#4 = self.transp;
          tensor[3] rgb1C76#3 = self.rgb;
          tensor[4] rgba1C78#1 = self.rgba;
          int ui1C7A#1 = self.ui;
          int vi1C7C#1 = self.vi;
          real _t1C7E#4 = 0.1e1;
          real a1C80#3 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C82#1 = 0.e0;
          bool _t1C84#1 = GT<real>(a1C80,_t1C82);
          if _t1C84 then goto ASSIGN1C88 else goto JOIN1C9C
        ASSIGN1C88:  preds = [COND1C86]
          real _t1C87#1 = TensorIndex<tensor[3],[0]>(rgb1C76);
          real op1_e3_l_31C8A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C89#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C87,op1_e3_l_31C8A);
          real _t1C8D#1 = TensorIndex<tensor[3],[1]>(rgb1C76);
          real op1_e3_l_31C90#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C8D,op1_e3_l_31C90);
          real _t1C93#1 = TensorIndex<tensor[3],[2]>(rgb1C76);
          real op1_e3_l_31C96#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C95#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C93,op1_e3_l_31C96);
          tensor[4] rgba1C99#1 = <tensor[4]>[_t1C89,_t1C8F,_t1C95,a1C80];
          goto JOIN1C9C
        JOIN1C9C:  preds = [ASSIGN1C9A,COND1C86]
          tensor[4] rgba1C9B#2 = phi(rgba1C99,rgba1C78)
          bool _t1C9D#1 = EQ<int>(ui1C7A,su1C70);
          if _t1C9D then goto ASSIGN1CA1 else goto JOIN1CA7
        ASSIGN1CA1:  preds = [COND1C9F]
          bool _t1CA0#1 = EQ<int>(vi1C7C,sv1C72);
          if _t1CA0 then goto COND1CA3 else goto JOIN1CA6
        COND1CA3:  preds = [COND1CA2]
          if debug1C6E then goto MASSIGN1CA4 else goto JOIN1CA5
        MASSIGN1CA4:  preds = [COND1CA3]
          Print<[real,tensor[4]]>(a1C80,rgba1C9B);
          goto JOIN1CA5
        JOIN1CA5:  preds = [MASSIGN1CA4,COND1CA3]
          goto JOIN1CA6
        JOIN1CA6:  preds = [JOIN1CA5,COND1CA2]
          goto JOIN1CA7
        JOIN1CA7:  preds = [JOIN1CA6,COND1C9F]
          self.rgba = rgba1C9B;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1CAA:  preds = []
      int iresU1CAB#1 = globals.iresU15E2;
      int iresV1CAD#1 = globals.iresV15E3;
      int _t1CAF#2 = 0;
      int _t1CB1#2 = 1;
      int _t1CB3#1 = ISub(iresV1CAD,_t1CB1);
      int[] _t1CB5#1 = Range(_t1CAF,_t1CB3);
    FOREACH1CB8:  preds = [ASSIGN1CB6,NEXT1CC1]
      foreach (vi1CB7 in _t1CB5) on exit goto RETURN1CC2
      int _t1CB9#1 = ISub(iresU1CAB,_t1CB1);
      int[] _t1CBB#1 = Range(_t1CAF,_t1CB9);
    FOREACH1CBE:  preds = [ASSIGN1CBC,NEXT1CC0]
      foreach (ui1CBD in _t1CBB) on exit goto NEXT1CC1
      new raycast(ui1CBD,vi1CB7);
      goto FOREACH1CBE
    NEXT1CC1:  preds = [FOREACH1CBE]
      goto FOREACH1CB8
    RETURN1CC2:  preds = [FOREACH1CB8]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a15D9 (a) = <no-default>
  input 0b043B_intermedateGlobal15DA (b) = <no-default>
  input 0c043D_intermedateGlobal15DB (c) = <no-default>
  input isoval15DC (isoval) = <default>
  input thick15DD (thick) = <default>
  input camEye15DE (camEye) = <default>
  input camAt15DF (camAt) = <default>
  input camUp15E0 (camUp) = <default>
  input camFOV15E1 (camFOV) = <default>
  input iresU15E2 (iresU) = <default>
  input iresV15E3 (iresV) = <default>
  input camNear15E4 (camNear) = <default>
  input camFar15E5 (camFar) = <default>
  input refStep15E6 (refStep) = <default>
  input rayStep15E7 (rayStep) = <default>
  input lightVsp15E8 (lightVsp) = <default>
  input phongKa15E9 (phongKa) = <default>
  input phongKd15EA (phongKd) = <default>
  input debug15EB (debug) = <default>
  input su15EC (su) = <default>
  input sv15ED (sv) = <default>
  global real camDist15EE
  global tensor[3] camN15EF
  global tensor[3] camU15F0
  global tensor[3] camV15F1
  global real camVmax15F2
  global real camUmax15F3
  global tensor[3] light15F4
  global femData:Mesh _t15F5
  global femData:Space _tX15F6
  global femData:FemFunc c15F7
  global image(IMAGE1D<double[3]>) img15F8
  global kernel _tXX15F9
  global image(IMAGE1D<double[3]>) I1CC4
## functions
  function femData:MeshPos findPos17D8 (femData:Mesh mesh17D9#23, tensor[3] pos17DA#7) {
    ENTRY17DB:  preds = []
      real _t17DC#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn17DE#19 = <tensor[3]>[_t17DC,_t17DC,_t17DC];
      int newtonInt17E0#4 = 0;
      int cellInt17E2#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh17D9);
      int _t17E4#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh17D9);
      int _t17E6#4 = 1;
      int numCell17E8#2 = ISub(_t17E4,_t17E6);
      int[] yayCells17EA#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh17D9,pos17DA);
    FOREACH17ED:  preds = [ASSIGN17EB,NEXT1908]
      foreach (cellItter17EC in yayCells17EA) on exit goto ASSIGN190A
        tensor[3] xn1907#2 = phi(xn17DE,xn17F5)
      int _t17EE#1 = 2;
      int[] _t17F0#1 = Range(newtonInt17E0,_t17EE);
    FOREACH17F3:  preds = [ASSIGN17F1,NEXT1906]
      foreach (newtonItter17F2 in _t17F0) on exit goto NEXT1908
        tensor[3] xn17F5#7 = phi(xn1907,xn17F4)
      int[4] femIndicies1806#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1807#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1806);
      tensor[3,4] basisResult1808#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1017F6#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3,3] op1_e3_l_1217F7#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6);
      tensor[3,3,3] op1_e3_l_1317F8#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6,op1_e3_l_1217F7);
      tensor[3] probe_l_1417F9#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1517FA#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1617FB#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3] op1_e3_l_1717FC#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1617FB);
      tensor[3] op1_e3_l_1817FD#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1517FA,op1_e3_l_1717FC);
      real op1_e3_l_1917FE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1417F9,op1_e3_l_1817FD);
      tensor[3,3] op1_e3_l_2017FF#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1317F8);
      real op1_e3_l_211800#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1917FE);
      tensor[4] basisResult1810#2 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_221801#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,femDofs1807,basisResult1810,xn17F5);
      tensor[3,3] op1_e3_l_231802#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2017FF,op1_e3_l_211800);
      tensor[3] op1_e3_l_241803#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221801);
      tensor[3] op1_e3_l_251804#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_241803);
      tensor[3] xn17F4#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_251804);
      real _t182D#2 = 0.1e-7;
      real _t182F#1 = λ(T0[],T1[])<(T0 * T1)> (_t182D,_t182D);
      tensor[3] probe_l_30183D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter17EC,mesh17D9,xn17F5,femDofs1807,basisResult1810,xn17F5);
      tensor[3] op1_e3_l_32183F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30183D);
      tensor[3] op1_e3_l_481840#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_32183F);
      real _t1831#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481840,op1_e3_l_481840);
      bool _t1869#1 = GTE<real>(_t182F,_t1831);
      if _t1869 then goto ASSIGN186D else goto JOIN1905
    ASSIGN186D:  preds = [COND186B]
      real _t186C#4 = 0.1e1;
      real _t186E#4 = 0.1e-4;
      real _t1870#1 = λ(T0[],T1[])<(T0 + T1)> (_t186C,_t186E);
      tensor[3] _t1872#1 = <tensor[3]>[_t186C,_t186C,_t186C];
      real _t1874#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1872,xn17F4);
      bool _t18AE#1 = GT<real>(_t1870,_t1874);
      tensor[3] _t18B0#1 = <tensor[3]>[_t186E,_t186E,_t186E];
      tensor[3] _t18B2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18B0,xn17F4);
      real _t18EC#1 = TensorIndex<tensor[3],[0]>(_t18B2);
      real _t18EE#3 = -0.e0;
      bool _t18F0#1 = GT<real>(_t18EC,_t18EE);
      real _t18F2#1 = TensorIndex<tensor[3],[1]>(_t18B2);
      bool _t18F4#1 = GT<real>(_t18F2,_t18EE);
      real _t18F6#1 = TensorIndex<tensor[3],[2]>(_t18B2);
      bool _t18F8#1 = GT<real>(_t18F6,_t18EE);
      bool _t18FA#1 = BAnd(_t18F4,_t18F8);
      bool _t18FC#1 = BAnd(_t18F0,_t18FA);
      bool _t18FE#1 = BAnd(_t18AE,_t18FC);
      if _t18FE then goto ASSIGN1902 else goto JOIN1904
    ASSIGN1902:  preds = [COND1900]
      femData:MeshPos _t1901#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellItter17EC,xn17F4,pos17DA);
      return _t1901
      goto JOIN1904
    JOIN1904:  preds = [*RETURN(_t1901)1903,COND1900]
      goto JOIN1905
    JOIN1905:  preds = [JOIN1904,COND186B]
      goto FOREACH17F3
    NEXT1908:  preds = [FOREACH17F3]
      goto FOREACH17ED
    ASSIGN190A:  preds = [FOREACH17ED]
      int _t1909#2 = 2;
      int _t190B#1 = IAdd(_t1909,_t17E6);
      int _t190D#1 = IMul(_t190B,numCell17E8);
      int[] _t190F#1 = Range(newtonInt17E0,_t190D);
    FOREACH1912:  preds = [ASSIGN1910,NEXT1A38]
      foreach (itter1911 in _t190F) on exit goto ASSIGN1A3B
        int cellInt1915#11 = phi(cellInt17E2,cellInt1A35)
        int newtonInt1A27#1 = phi(newtonInt17E0,newtonInt1A36)
        tensor[3] xn1914#6 = phi(xn1907,xn1913)
      int[4] femIndicies1926#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs1927#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1926);
      tensor[3,4] basisResult1928#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_101916#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3,3] op1_e3_l_121917#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916);
      tensor[3,3,3] op1_e3_l_131918#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916,op1_e3_l_121917);
      tensor[3] probe_l_141919#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_15191A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_16191B#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3] op1_e3_l_17191C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16191B);
      tensor[3] op1_e3_l_18191D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15191A,op1_e3_l_17191C);
      real op1_e3_l_19191E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_141919,op1_e3_l_18191D);
      tensor[3,3] op1_e3_l_20191F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_131918);
      real op1_e3_l_211920#1 = λ(T0[])<(2 * T0)> (op1_e3_l_19191E);
      tensor[4] basisResult1930#2 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_221921#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,femDofs1927,basisResult1930,xn1914);
      tensor[3,3] op1_e3_l_231922#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_20191F,op1_e3_l_211920);
      tensor[3] op1_e3_l_241923#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221921);
      tensor[3] op1_e3_l_251924#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_241923);
      tensor[3] xn1913#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_251924);
      real _t194D#2 = 0.1e-7;
      real _t194F#1 = λ(T0[],T1[])<(T0 * T1)> (_t194D,_t194D);
      tensor[3] probe_l_30195D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt1915,mesh17D9,xn1914,femDofs1927,basisResult1930,xn1914);
      tensor[3] op1_e3_l_32195F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30195D);
      tensor[3] op1_e3_l_481960#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_32195F);
      real _t1951#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481960,op1_e3_l_481960);
      bool _t1989#1 = GTE<real>(_t194F,_t1951);
      if _t1989 then goto ASSIGN198D else goto JOIN1A25
    ASSIGN198D:  preds = [COND198B]
      real _t198C#4 = 0.1e1;
      real _t198E#4 = 0.1e-4;
      real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (_t198C,_t198E);
      tensor[3] _t1992#1 = <tensor[3]>[_t198C,_t198C,_t198C];
      real _t1994#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1992,xn1913);
      bool _t19CE#1 = GT<real>(_t1990,_t1994);
      tensor[3] _t19D0#1 = <tensor[3]>[_t198E,_t198E,_t198E];
      tensor[3] _t19D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t19D0,xn1913);
      real _t1A0C#1 = TensorIndex<tensor[3],[0]>(_t19D2);
      real _t1A0E#3 = -0.e0;
      bool _t1A10#1 = GT<real>(_t1A0C,_t1A0E);
      real _t1A12#1 = TensorIndex<tensor[3],[1]>(_t19D2);
      bool _t1A14#1 = GT<real>(_t1A12,_t1A0E);
      real _t1A16#1 = TensorIndex<tensor[3],[2]>(_t19D2);
      bool _t1A18#1 = GT<real>(_t1A16,_t1A0E);
      bool _t1A1A#1 = BAnd(_t1A14,_t1A18);
      bool _t1A1C#1 = BAnd(_t1A10,_t1A1A);
      bool _t1A1E#1 = BAnd(_t19CE,_t1A1C);
      if _t1A1E then goto ASSIGN1A22 else goto JOIN1A24
    ASSIGN1A22:  preds = [COND1A20]
      femData:MeshPos _t1A21#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellInt1915,xn1913,pos17DA);
      return _t1A21
      goto JOIN1A24
    JOIN1A24:  preds = [*RETURN(_t1A21)1A23,COND1A20]
      goto JOIN1A25
    JOIN1A25:  preds = [JOIN1A24,COND198B]
      int newtonInt1A26#2 = IAdd(newtonInt1A27,_t17E6);
      bool _t1A29#1 = GTE<int>(newtonInt1A26,_t1909);
      if _t1A29 then goto ASSIGN1A2D else goto JOIN1A37
    ASSIGN1A2D:  preds = [COND1A2B]
      bool _t1A2C#1 = GTE<int>(cellInt1915,numCell17E8);
      if _t1A2C then goto ASSIGN1A30 else goto ASSIGN1A39
    ASSIGN1A30:  preds = [COND1A2E]
      femData:MeshPos _t1A2F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A2F
      goto JOIN1A34
    JOIN1A34:  preds = [*RETURN(_t1A2F)1A31,ASSIGN1A39]
      int cellInt1A32#1 = phi(cellInt1A33)
      goto JOIN1A37
    JOIN1A37:  preds = [JOIN1A34,COND1A2B]
      int cellInt1A35#1 = phi(cellInt1A32,cellInt1915)
      int newtonInt1A36#1 = phi(newtonInt17E0,newtonInt1A26)
      goto FOREACH1912
    ASSIGN1A39:  preds = [COND1A2E]
      int cellInt1A33#1 = IAdd(cellInt1915,_t17E6);
      goto JOIN1A34
    ASSIGN1A3B:  preds = [FOREACH1912]
      string _t1A3A#1 = "Bad end 2";
      string _t1A3C#1 = "\n";
      Print<[string,string]>(_t1A3A,_t1A3C);
      femData:MeshPos _t1A3F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A3F
}
## input initialization
  ENTRY15FA:  preds = []
    real isoval15FB#1 = 0.2e0;
    globals.isoval15DC = isoval15FB;
    real thick15FE#1 = 0.7e-1;
    globals.thick15DD = thick15FE;
    real _t1601#2 = 0.3e1;
    real _t1603#1 = -0.3e1;
    tensor[3] camEye1605#1 = <tensor[3]>[_t1601,_t1603,_t1601];
    globals.camEye15DE = camEye1605;
    real _t1608#3 = 0.5e0;
    tensor[3] camAt160A#1 = <tensor[3]>[_t1608,_t1608,_t1608];
    globals.camAt15DF = camAt160A;
    real _t160D#2 = 0.e0;
    real _t160F#2 = 0.1e1;
    tensor[3] camUp1611#2 = <tensor[3]>[_t160D,_t160D,_t160F];
    globals.camUp15E0 = camUp1611;
    real camFOV1614#1 = 0.137e2;
    globals.camFOV15E1 = camFOV1614;
    int iresU1617#2 = 500;
    globals.iresU15E2 = iresU1617;
    globals.iresV15E3 = iresU1617;
    real camNear161B#1 = -0.2e1;
    globals.camNear15E4 = camNear161B;
    real camFar161E#1 = 0.5e1;
    globals.camFar15E5 = camFar161E;
    globals.refStep15E6 = _t160F;
    real rayStep1622#1 = 0.1e-1;
    globals.rayStep15E7 = rayStep1622;
    globals.lightVsp15E8 = camUp1611;
    real phongKa1626#1 = 0.1e0;
    globals.phongKa15E9 = phongKa1626;
    real phongKd1629#1 = 0.9e0;
    globals.phongKd15EA = phongKd1629;
    bool debug162C#1 = false;
    globals.debug15EB = debug162C;
    int su162F#2 = 250;
    globals.su15EC = su162F;
    globals.sv15ED = su162F;
    return
## global-variable initialization
  ENTRY1634:  preds = []
    femData:Mesh a1635#3 = globals.a15D9;
    femData:Space 0b043B_intermedateGlobal1637#1 = globals.0b043B_intermedateGlobal15DA;
    femData:FemFunc 0c043D_intermedateGlobal1639#1 = globals.0c043D_intermedateGlobal15DB;
    real isoval163B#0 = globals.isoval15DC;
    tensor[3] camEye163D#1 = globals.camEye15DE;
    tensor[3] camAt163F#1 = globals.camAt15DF;
    tensor[3] camUp1641#1 = globals.camUp15E0;
    real camFOV1643#1 = globals.camFOV15E1;
    int iresU1645#1 = globals.iresU15E2;
    int iresV1647#1 = globals.iresV15E3;
    tensor[3] lightVsp1649#2 = globals.lightVsp15E8;
    int _t164B#1 = 0;
    int _t164D#1 = 1;
    int _t164F#1 = ExtractFemItem<int,NumCell(Mesh)>(a1635);
    int _t1651#1 = ISub(_t164F,_t164D);
    int[] _t1653#1 = Range(_t164B,_t1651);
    femData:MeshCell[] _t1655#1 = <femData:MeshCell[]>{};
  FOREACH1658:  preds = [ASSIGN1656,NEXT165E]
    foreach (_t1657 in _t1653) on exit goto ASSIGN1660
      femData:MeshCell[] _t165C#1 = phi(_t1655,_t165B)
    femData:MeshCell _t1659#1 = LoadFem<femData:MeshCell>(a1635,_t1657);
    femData:MeshCell[] _t165B#1 = Append<femData:MeshCell>(_t165C,_t1659);
    goto FOREACH1658
  ASSIGN1660:  preds = [FOREACH1658]
    femData:Space b165F#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1637,a1635);
    femData:FemFunc c1661#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1639,b165F);
    femData:Space _t1663#2 = ExtractFem<femData:Space,femData:FemFunc>(c1661);
    femData:Mesh _t1665#1 = ExtractFem<femData:Mesh,femData:Space>(_t1663);
    image(IMAGE1D<double[3]>) I1667#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1669#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img166B#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1667);
    tensor[3] op1_e3_l_2166E#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_4166F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2166E,op1_e3_l_2166E);
    real camDist166D#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4166F);
    globals.camDist15EE = camDist166D;
    real op1_e3_l_91678#6 = λ(T0[])<(1) / ( T0)> (camDist166D);
    tensor[3] camN1674#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_2166E,op1_e3_l_91678);
    globals.camN15EF = camN1674;
    tensor[3,3] op1_e3_l_151683#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1641);
    tensor[3] op1_e3_l_171685#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_2166E,op1_e3_l_151683);
    real op1_e3_l_341686#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171685,op1_e3_l_171685);
    real op1_e3_l_351687#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91678,op1_e3_l_91678,op1_e3_l_341686);
    real op1_e3_l_361688#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351687);
    tensor[3] op1_e3_l_371689#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_171685);
    real op1_e3_l_38168A#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361688);
    tensor[3] camU167F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371689,op1_e3_l_38168A);
    globals.camU15F0 = camU167F;
    tensor[3,3] op1_e3_l_4516A2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_2166E);
    tensor[3] op1_e3_l_4716A3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171685,op1_e3_l_4516A2);
    tensor[3] op1_e3_l_5016A5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_4716A3);
    tensor[3] camV1698#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38168A,op1_e3_l_91678,op1_e3_l_5016A5);
    globals.camV15F1 = camV1698;
    real _t16B5#1 = 0.314159265358979323846264338327950288e1;
    real _t16B7#1 = 0.36e3;
    real op1_e3_l_516BA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1643,_t16B5);
    real op1_e3_l_616BB#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16B7,op1_e3_l_516BA);
    real op1_e3_l_1016BE#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_616BB);
    real camVmax16B9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1016BE,camDist166D);
    globals.camVmax15F2 = camVmax16B9;
    real _t16C8#1 = IntToReal(iresU1645);
    real _t16CA#1 = IntToReal(iresV1647);
    real op1_e3_l_1416D3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t16C8,op1_e3_l_1016BE,camDist166D);
    real camUmax16CC#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16CA,op1_e3_l_1416D3);
    globals.camUmax15F3 = camUmax16CC;
    tensor[3,3] _t16DD#1 = <tensor[3,3]>[camU167F,camV1698,camN1674];
    real op1_e3_l_316E0#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1649);
    real op1_e3_l_416E1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_316E0);
    real op1_e3_l_516E2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_416E1);
    tensor[3] op1_e3_l_616E3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t16DD,lightVsp1649);
    tensor[3] light16DF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_516E2,op1_e3_l_616E3);
    globals.light15F4 = light16DF;
    globals._t15F5 = _t1665;
    globals._tX15F6 = _t1663;
    globals.c15F7 = c1661;
    globals.img15F8 = img166B;
    globals._tXX15F9 = _t1669;
    globals.I1CC4 = I1667;
    return
## strand
  strand raycast (int ui16F0#2, int vi16F1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY16FC:  preds = []
        int iresU16FD#1 = globals.iresU15E2;
        int iresV16FF#1 = globals.iresV15E3;
        real camNear1701#1 = globals.camNear15E4;
        real camDist1703#1 = globals.camDist15EE;
        tensor[3] camN1705#1 = globals.camN15EF;
        tensor[3] camU1707#1 = globals.camU15F0;
        tensor[3] camV1709#1 = globals.camV15F1;
        real camVmax170B#4 = globals.camVmax15F2;
        real camUmax170D#2 = globals.camUmax15F3;
        real _t170F#5 = -0.5e0;
        real _t1711#1 = IntToReal(ui16F0);
        real _t1713#1 = IntToReal(iresU16FD);
        real _t1715#3 = 0.5e0;
        real op1_e3_l_61718#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1713,_t1715);
        real op1_e3_l_71719#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1711);
        real op1_e3_l_8171A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_61718);
        real op1_e3_l_9171B#2 = λ(T0[])<Neg(T0)> (camUmax170D);
        real op1_e3_l_10171C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71719,op1_e3_l_8171A);
        real op1_e3_l_11171D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax170D,op1_e3_l_9171B);
        real op1_e3_l_13171E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10171C,op1_e3_l_11171D);
        real rayU1717#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9171B,op1_e3_l_13171E);
        real _t1727#1 = IntToReal(vi16F1);
        real _t1729#2 = IntToReal(iresV16FF);
        real op1_e3_l_6172C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1729,_t1715);
        real op1_e3_l_7172D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1727);
        real op1_e3_l_8172E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_6172C);
        real op1_e3_l_9172F#1 = λ(T0[])<Neg(T0)> (camVmax170B);
        real op1_e3_l_101730#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_8172E);
        real op1_e3_l_111731#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax170B,op1_e3_l_9172F);
        real op1_e3_l_121732#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101730,op1_e3_l_111731);
        real rayV172B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_121732);
        real op1_e3_l_251744#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1715,_t1729);
        real op1_e3_l_271746#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_251744);
        real op1_e3_l_291748#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_271746);
        real op1_e3_l_31174A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291748,op1_e3_l_111731);
        real op1_e3_l_32174B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_31174A);
        tensor[3] op1_e3_l_33174C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1707,rayU1717);
        tensor[3] op1_e3_l_34174D#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1709,op1_e3_l_32174B);
        tensor[3] op1_e3_l_35174E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33174C,op1_e3_l_34174D);
        tensor[3] op1_e3_l_36174F#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1703,op1_e3_l_35174E);
        tensor[3] rayVec173B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1705,op1_e3_l_36174F);
        real transp1765#1 = 0.1e1;
        real _t1767#8 = 0.e0;
        tensor[3] rgb1769#1 = <tensor[3]>[_t1767,_t1767,_t1767];
        tensor[4] rgba176B#1 = <tensor[4]>[_t1767,_t1767,_t1767,_t1767];
        self.rayU = rayU1717;
        self.rayV = rayV172B;
        self.rayN = camNear1701;
        self.rayVec = rayVec173B;
        self.transp = transp1765;
        self.rgb = rgb1769;
        self.rgba = rgba176B;
        self.gray = _t1767;
        self.ui = ui16F0;
        self.vi = vi16F1;
        return
    end state init
    method update
        ENTRY1778:  preds = []
          image(IMAGE1D<double[3]>) I1CC5#3 = globals.I1CC4;
          real isoval1779#1 = globals.isoval15DC;
          femData:Mesh _t177B#9 = globals._t15F5;
          femData:Space _t177D#3 = globals._tX15F6;
          femData:FemFunc c177F#3 = globals.c15F7;
          image(IMAGE1D<double[3]>) img1781#1 = globals.img15F8;
          kernel _t1783#1 = globals._tXX15F9;
          femData:Mesh a1785#1 = globals.a15D9;
          real thick1787#1 = globals.thick15DD;
          tensor[3] camEye1789#1 = globals.camEye15DE;
          real camNear178B#2 = globals.camNear15E4;
          real camFar178D#2 = globals.camFar15E5;
          real refStep178F#1 = globals.refStep15E6;
          real rayStep1791#2 = globals.rayStep15E7;
          real phongKa1793#1 = globals.phongKa15E9;
          real phongKd1795#1 = globals.phongKd15EA;
          bool debug1797#1 = globals.debug15EB;
          int su1799#1 = globals.su15EC;
          int sv179B#1 = globals.sv15ED;
          tensor[3] light179D#1 = globals.light15F4;
          real rayN179F#4 = self.rayN;
          tensor[3] rayVec17A1#2 = self.rayVec;
          real transp17A3#10 = self.transp;
          tensor[3] rgb17A5#9 = self.rgb;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug1797 then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,su1799);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN1C6C
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN1C6C]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          tensor[3] op1_e3_l_317B9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN179F,rayVec17A1);
          tensor[3] x17B8#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1789,op1_e3_l_317B9);
          real _t17BC#8 = 0.e0;
          real _t17BE#2 = TensorIndex<tensor[3],[0]>(x17B8);
          bool _t17C0#1 = LT<real>(_t17BC,_t17BE);
          if _t17C0 then goto ASSIGN17C4 else goto JOIN1C4E
        ASSIGN17C4:  preds = [COND17C2]
          real _t17C3#11 = 0.1e1;
          bool _t17C5#1 = LT<real>(_t17BE,_t17C3);
          if _t17C5 then goto ASSIGN17C9 else goto JOIN1C4B
        ASSIGN17C9:  preds = [COND17C7]
          real _t17C8#2 = TensorIndex<tensor[3],[1]>(x17B8);
          bool _t17CA#1 = LT<real>(_t17BC,_t17C8);
          if _t17CA then goto ASSIGN17CE else goto JOIN1C48
        ASSIGN17CE:  preds = [COND17CC]
          bool _t17CD#1 = LT<real>(_t17C8,_t17C3);
          if _t17CD then goto ASSIGN17D1 else goto JOIN1C45
        ASSIGN17D1:  preds = [COND17CF]
          real _t17D0#2 = TensorIndex<tensor[3],[2]>(x17B8);
          bool _t17D2#1 = LT<real>(_t17BC,_t17D0);
          if _t17D2 then goto ASSIGN17D6 else goto JOIN1C42
        ASSIGN17D6:  preds = [COND17D4]
          bool _t17D5#1 = LT<real>(_t17D0,_t17C3);
          if _t17D5 then goto ASSIGN1A43 else goto JOIN1C3F
        ASSIGN1A43:  preds = [COND17D7]
          femData:MeshPos p1A42#1 = findPos17D8 (a1785,x17B8);
          bool _t1A44#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1A42);
          if _t1A44 then goto ASSIGN1A48 else goto ASSIGN1C67
        ASSIGN1A48:  preds = [COND1A46]
          real _t1A47#1 = 0.13e1;
          femData:MeshPos callFindPos1A69#2 = findPos17D8 (_t177B,x17B8);
          int intPos1A6A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A69);
          tensor[3] refPos1A6B#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A69);
          int[10] femIndicies1A70#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A6A);
          tensor[10] femDofs1A71#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A70);
          tensor[10] basisResult1A72#1 = EvaluateBasis<BasisArray(10)>(refPos1A6B);
          real compositionl1A4B#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A72,refPos1A6B);
          real op1_e3_l_231A4C#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1779,compositionl1A4B);
          tensor[3,10] basisResult1A79#1 = EvaluateBasis<BasisArray(3,10)>(refPos1A6B);
          tensor[3] compositionl1A4E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A79,refPos1A6B);
          int[4] femIndicies1A7B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1A6A);
          tensor[4,3] femDofs1A7C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1A7B);
          tensor[3,4] basisResult1A7D#4 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3,3] probe_l_251A4F#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3,3] op1_e3_l_271A50#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F);
          tensor[3,3,3] op1_e3_l_281A51#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F,op1_e3_l_271A50);
          tensor[3] probe_l_291A52#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_301A53#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_311A54#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3] op1_e3_l_321A55#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311A54);
          tensor[3] op1_e3_l_331A56#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301A53,op1_e3_l_321A55);
          real op1_e3_l_341A57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291A52,op1_e3_l_331A56);
          tensor[3,3] op1_e3_l_351A58#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281A51);
          real op1_e3_l_361A59#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341A57);
          tensor[3,3] op1_e3_l_371A5A#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351A58,op1_e3_l_361A59);
          tensor[3] op1_e3_l_381A5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1A4E,op1_e3_l_371A5A);
          tensor[3] op1_e3_l_541A5F#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381A5B);
          real op1_e3_l_561A61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541A5F,op1_e3_l_541A5F);
          real op1_e3_l_571A62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561A61);
          real op1_e3_l_581A63#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231A4C);
          real op1_e3_l_591A64#1 = λ(T0[],T1[])<(T0 * T1)> (thick1787,op1_e3_l_571A62);
          real op1_e3_l_601A65#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581A63,op1_e3_l_591A64);
          real op1_e3_l_611A66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_601A65);
          real op1_e3_l_621A67#2 = λ(T0[],T1[])<(T0 * T1)> (_t1A47,op1_e3_l_611A66);
          real op1_e3_l_631A68#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t17BC,_t17C3,op1_e3_l_621A67);
          real a1A49#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_631A68);
          bool _t1ACD#1 = GT<real>(a1A49,_t17BC);
          if _t1ACD then goto ASSIGN1CF5 else goto JOIN1C36
        ASSIGN1CF5:  preds = [COND1ACF]
          real op1_e3_l_641AEF#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t17C3,_t17BC,op1_e3_l_621A67);
          real op1_e3_l_651AF0#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_641AEF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_651AF0);
          real op1_e3_l_31B57#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec17A1);
          real op1_e3_l_41B58#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31B57);
          real op1_e3_l_51B59#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1791,op1_e3_l_41B58);
          real _t1B56#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep178F,op1_e3_l_51B59);
          real _t1B5E#1 = MathFn<pow>(_t1AD0,_t1B56);
          real _t1B60#2 = 0.11e1;
          real _t1B62#1 = 0.7e0;
          real op1_e3_l_671B7F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571A62);
          real op1_e3_l_681B80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light179D,op1_e3_l_541A5F);
          real _t1B64#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671B7F,op1_e3_l_681B80);
          real shade1BE2#1 = Max<real>(_t17BC,_t1B64);
          real _t1BE4#2 = λ(T0[])<T0> (compositionl1A4B);
          real op1_e3_l_151BFF#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,rayN179F);
          real op1_e3_l_161C00#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,camFar178D);
          real op1_e3_l_171C01#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151BFF,op1_e3_l_161C00);
          real op1_e3_l_181C02#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1B60,_t1B62);
          real op1_e3_l_191C03#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_171C01,op1_e3_l_181C02);
          real op1_e3_l_201C04#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1795,shade1BE2);
          real Mtransform1C0A#2 = Transform<IMAGE1D<double[3]>>(I1CC5);
          real MxPos1C0B#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1C0A,_t1BE4);
          real Ttranslate1C0C#1 = Translate<IMAGE1D<double[3]>>(I1CC5);
          real imgPos1C0D#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1C0B,Ttranslate1C0C);
          real nd1C0E#2 = Floor<1>(imgPos1C0D);
          real f1C0F#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1C0D,nd1C0E);
          int n1C10#1 = RealToInt<1>(nd1C0E);
          int lit1C11#1 = 0;
          int idx1C12#1 = IAdd(n1C10,lit1C11);
          tensor[3,2] ldvox1C13#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1CC5,idx1C12);
          tensor[2] kernX_1C14#1 = BuildPos<1>(f1C0F);
          tensor[2] kevalX_d0_1C15#1 = EvalKernel<2,tent,0>(kernX_1C14);
          tensor[3] probe_l_211C05#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1781,_t1783,_t1BE4,Mtransform1C0A,ldvox1C13,kevalX_d0_1C15);
          real op1_e3_l_221C06#2 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,_t1B5E);
          real op1_e3_l_231C07#1 = λ(T0[],T1[])<(T0 + T1)> (_t1B60,op1_e3_l_191C03);
          real op1_e3_l_241C08#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1793,op1_e3_l_201C04);
          tensor[3] op1_e3_l_251C09#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp17A3,probe_l_211C05,op1_e3_l_221C06,op1_e3_l_231C07,op1_e3_l_241C08);
          tensor[3] rgb1BFE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb17A5,op1_e3_l_251C09);
          real op1_e3_l_51C30#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_221C06);
          real transp1C2E#1 = λ(T0[],T1[])<(T0 * T1)> (transp17A3,op1_e3_l_51C30);
          goto JOIN1C36
        JOIN1C36:  preds = [ASSIGN1C33,COND1ACF]
          tensor[3] rgb1C34#1 = phi(rgb1BFE,rgb17A5)
          real transp1C35#1 = phi(transp1C2E,transp17A3)
          string _t1C37#1 = "yay!\n";
          Print<[string]>(_t1C37);
          goto JOIN1C3C
        JOIN1C3C:  preds = [MASSIGN1C39,MASSIGN1C6B]
          tensor[3] rgb1C3A#1 = phi(rgb1C34,rgb17A5)
          real transp1C3B#1 = phi(transp1C35,transp17A3)
          goto JOIN1C3F
        JOIN1C3F:  preds = [JOIN1C3C,COND17D7]
          tensor[3] rgb1C3D#1 = phi(rgb1C3A,rgb17A5)
          real transp1C3E#1 = phi(transp1C3B,transp17A3)
          goto JOIN1C42
        JOIN1C42:  preds = [JOIN1C3F,COND17D4]
          tensor[3] rgb1C40#1 = phi(rgb1C3D,rgb17A5)
          real transp1C41#1 = phi(transp1C3E,transp17A3)
          goto JOIN1C45
        JOIN1C45:  preds = [JOIN1C42,COND17CF]
          tensor[3] rgb1C43#1 = phi(rgb1C40,rgb17A5)
          real transp1C44#1 = phi(transp1C41,transp17A3)
          goto JOIN1C48
        JOIN1C48:  preds = [JOIN1C45,COND17CC]
          tensor[3] rgb1C46#1 = phi(rgb1C43,rgb17A5)
          real transp1C47#1 = phi(transp1C44,transp17A3)
          goto JOIN1C4B
        JOIN1C4B:  preds = [JOIN1C48,COND17C7]
          tensor[3] rgb1C49#1 = phi(rgb1C46,rgb17A5)
          real transp1C4A#1 = phi(transp1C47,transp17A3)
          goto JOIN1C4E
        JOIN1C4E:  preds = [JOIN1C4B,COND17C2]
          tensor[3] rgb1C4C#3 = phi(rgb1C49,rgb17A5)
          real transp1C4D#2 = phi(transp1C4A,transp17A3)
          real _t1C4F#1 = 0.1e-1;
          bool _t1C51#1 = LT<real>(transp1C4D,_t1C4F);
          if _t1C51 then goto SAVE1C54 else goto JOIN1C58
        SAVE1C54:  preds = [COND1C53]
          self.transp = _t17BC;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C58
        JOIN1C58:  preds = [*STABILIZE1C56,COND1C53]
          real transp1C57#2 = phi(transp1C4D)
          bool _t1C59#1 = GT<real>(rayN179F,camFar178D);
          if _t1C59 then goto SAVE1C5C else goto JOIN1C5F
        SAVE1C5C:  preds = [COND1C5B]
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C5F
        JOIN1C5F:  preds = [*STABILIZE1C5E,COND1C5B]
          real rayN1C60#1 = λ(T0[],T1[])<(T0 + T1)> (rayN179F,rayStep1791);
          self.rayN = rayN1C60;
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          active
        ASSIGN1C67:  preds = [COND1A46]
          string _t1C66#1 = "\n";
          Print<[tensor[3],string]>(x17B8,_t1C66);
          string _t1C69#1 = "wait what\?\n";
          Print<[string]>(_t1C69);
          goto JOIN1C3C
        ASSIGN1C6C:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,sv179B);
          goto JOIN17B3
    end update
    method stabilize
        ENTRY1C6D:  preds = []
          bool debug1C6E#1 = globals.debug15EB;
          int su1C70#1 = globals.su15EC;
          int sv1C72#1 = globals.sv15ED;
          real transp1C74#1 = self.transp;
          tensor[3] rgb1C76#3 = self.rgb;
          tensor[4] rgba1C78#1 = self.rgba;
          int ui1C7A#1 = self.ui;
          int vi1C7C#1 = self.vi;
          real _t1C7E#1 = 0.1e1;
          real a1C80#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C82#1 = 0.e0;
          bool _t1C84#1 = GT<real>(a1C80,_t1C82);
          if _t1C84 then goto ASSIGN1C88 else goto JOIN1C9C
        ASSIGN1C88:  preds = [COND1C86]
          real _t1C87#1 = TensorIndex<tensor[3],[0]>(rgb1C76);
          real _t1C89#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C87,a1C80);
          real _t1C8D#1 = TensorIndex<tensor[3],[1]>(rgb1C76);
          real _t1C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C8D,a1C80);
          real _t1C93#1 = TensorIndex<tensor[3],[2]>(rgb1C76);
          real _t1C95#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C93,a1C80);
          tensor[4] rgba1C99#1 = <tensor[4]>[_t1C89,_t1C8F,_t1C95,a1C80];
          goto JOIN1C9C
        JOIN1C9C:  preds = [ASSIGN1C9A,COND1C86]
          tensor[4] rgba1C9B#2 = phi(rgba1C99,rgba1C78)
          bool _t1C9D#1 = EQ<int>(ui1C7A,su1C70);
          if _t1C9D then goto ASSIGN1CA1 else goto JOIN1CA7
        ASSIGN1CA1:  preds = [COND1C9F]
          bool _t1CA0#1 = EQ<int>(vi1C7C,sv1C72);
          if _t1CA0 then goto COND1CA3 else goto JOIN1CA6
        COND1CA3:  preds = [COND1CA2]
          if debug1C6E then goto MASSIGN1CA4 else goto JOIN1CA5
        MASSIGN1CA4:  preds = [COND1CA3]
          Print<[real,tensor[4]]>(a1C80,rgba1C9B);
          goto JOIN1CA5
        JOIN1CA5:  preds = [MASSIGN1CA4,COND1CA3]
          goto JOIN1CA6
        JOIN1CA6:  preds = [JOIN1CA5,COND1CA2]
          goto JOIN1CA7
        JOIN1CA7:  preds = [JOIN1CA6,COND1C9F]
          self.rgba = rgba1C9B;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1CAA:  preds = []
      int iresU1CAB#1 = globals.iresU15E2;
      int iresV1CAD#1 = globals.iresV15E3;
      int _t1CAF#2 = 0;
      int _t1CB1#2 = 1;
      int _t1CB3#1 = ISub(iresV1CAD,_t1CB1);
      int[] _t1CB5#1 = Range(_t1CAF,_t1CB3);
    FOREACH1CB8:  preds = [ASSIGN1CB6,NEXT1CC1]
      foreach (vi1CB7 in _t1CB5) on exit goto RETURN1CC2
      int _t1CB9#1 = ISub(iresU1CAB,_t1CB1);
      int[] _t1CBB#1 = Range(_t1CAF,_t1CB9);
    FOREACH1CBE:  preds = [ASSIGN1CBC,NEXT1CC0]
      foreach (ui1CBD in _t1CBB) on exit goto NEXT1CC1
      new raycast(ui1CBD,vi1CB7);
      goto FOREACH1CBE
    NEXT1CC1:  preds = [FOREACH1CBE]
      goto FOREACH1CB8
    RETURN1CC2:  preds = [FOREACH1CB8]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a15D9 (a) = <no-default>
  input 0b043B_intermedateGlobal15DA (b) = <no-default>
  input 0c043D_intermedateGlobal15DB (c) = <no-default>
  input isoval15DC (isoval) = <default>
  input thick15DD (thick) = <default>
  input camEye15DE (camEye) = <default>
  input camAt15DF (camAt) = <default>
  input camUp15E0 (camUp) = <default>
  input camFOV15E1 (camFOV) = <default>
  input iresU15E2 (iresU) = <default>
  input iresV15E3 (iresV) = <default>
  input camNear15E4 (camNear) = <default>
  input camFar15E5 (camFar) = <default>
  input refStep15E6 (refStep) = <default>
  input rayStep15E7 (rayStep) = <default>
  input lightVsp15E8 (lightVsp) = <default>
  input phongKa15E9 (phongKa) = <default>
  input phongKd15EA (phongKd) = <default>
  input debug15EB (debug) = <default>
  input su15EC (su) = <default>
  input sv15ED (sv) = <default>
  global real camDist15EE
  global tensor[3] camN15EF
  global tensor[3] camU15F0
  global tensor[3] camV15F1
  global real camVmax15F2
  global real camUmax15F3
  global tensor[3] light15F4
  global femData:Mesh _t15F5
  global femData:Space _tX15F6
  global femData:FemFunc c15F7
  global image(IMAGE1D<double[3]>) img15F8
  global kernel _tXX15F9
  global image(IMAGE1D<double[3]>) I1CC4
## functions
  function femData:MeshPos findPos17D8 (femData:Mesh mesh17D9#23, tensor[3] pos17DA#7) {
    ENTRY17DB:  preds = []
      real _t17DC#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn17DE#19 = <tensor[3]>[_t17DC,_t17DC,_t17DC];
      int newtonInt17E0#4 = 0;
      int cellInt17E2#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh17D9);
      int _t17E4#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh17D9);
      int _t17E6#4 = 1;
      int numCell17E8#2 = ISub(_t17E4,_t17E6);
      int[] yayCells17EA#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh17D9,pos17DA);
    FOREACH17ED:  preds = [ASSIGN17EB,NEXT1908]
      foreach (cellItter17EC in yayCells17EA) on exit goto ASSIGN190A
        tensor[3] xn1907#2 = phi(xn17DE,xn17F5)
      int _t17EE#1 = 2;
      int[] _t17F0#1 = Range(newtonInt17E0,_t17EE);
    FOREACH17F3:  preds = [ASSIGN17F1,NEXT1906]
      foreach (newtonItter17F2 in _t17F0) on exit goto NEXT1908
        tensor[3] xn17F5#7 = phi(xn1907,xn17F4)
      int[4] femIndicies1806#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1807#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1806);
      tensor[3,4] basisResult1808#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1017F6#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3,3] op1_e3_l_1217F7#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6);
      tensor[3,3,3] op1_e3_l_1317F8#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6,op1_e3_l_1217F7);
      tensor[3] probe_l_1417F9#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1517FA#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1617FB#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3] op1_e3_l_1717FC#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1617FB);
      tensor[3] op1_e3_l_1817FD#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1517FA,op1_e3_l_1717FC);
      real op1_e3_l_1917FE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1417F9,op1_e3_l_1817FD);
      tensor[3,3] op1_e3_l_2017FF#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1317F8);
      real op1_e3_l_211800#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1917FE);
      tensor[4] basisResult1810#2 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_221801#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,femDofs1807,basisResult1810,xn17F5);
      tensor[3,3] op1_e3_l_231802#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2017FF,op1_e3_l_211800);
      tensor[3] op1_e3_l_241803#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221801);
      tensor[3] op1_e3_l_251804#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_241803);
      tensor[3] xn17F4#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_251804);
      real _t182D#2 = 0.1e-7;
      real _t182F#1 = λ(T0[],T1[])<(T0 * T1)> (_t182D,_t182D);
      tensor[3] probe_l_30183D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter17EC,mesh17D9,xn17F5,femDofs1807,basisResult1810,xn17F5);
      tensor[3] op1_e3_l_32183F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30183D);
      tensor[3] op1_e3_l_481840#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_32183F);
      real _t1831#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481840,op1_e3_l_481840);
      bool _t1869#1 = GTE<real>(_t182F,_t1831);
      if _t1869 then goto ASSIGN186D else goto JOIN1905
    ASSIGN186D:  preds = [COND186B]
      real _t186C#4 = 0.1e1;
      real _t186E#4 = 0.1e-4;
      real _t1870#1 = λ(T0[],T1[])<(T0 + T1)> (_t186C,_t186E);
      tensor[3] _t1872#1 = <tensor[3]>[_t186C,_t186C,_t186C];
      real _t1874#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1872,xn17F4);
      bool _t18AE#1 = GT<real>(_t1870,_t1874);
      tensor[3] _t18B0#1 = <tensor[3]>[_t186E,_t186E,_t186E];
      tensor[3] _t18B2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18B0,xn17F4);
      real _t18EC#1 = TensorIndex<tensor[3],[0]>(_t18B2);
      real _t18EE#3 = -0.e0;
      bool _t18F0#1 = GT<real>(_t18EC,_t18EE);
      real _t18F2#1 = TensorIndex<tensor[3],[1]>(_t18B2);
      bool _t18F4#1 = GT<real>(_t18F2,_t18EE);
      real _t18F6#1 = TensorIndex<tensor[3],[2]>(_t18B2);
      bool _t18F8#1 = GT<real>(_t18F6,_t18EE);
      bool _t18FA#1 = BAnd(_t18F4,_t18F8);
      bool _t18FC#1 = BAnd(_t18F0,_t18FA);
      bool _t18FE#1 = BAnd(_t18AE,_t18FC);
      if _t18FE then goto ASSIGN1902 else goto JOIN1904
    ASSIGN1902:  preds = [COND1900]
      femData:MeshPos _t1901#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellItter17EC,xn17F4,pos17DA);
      return _t1901
      goto JOIN1904
    JOIN1904:  preds = [*RETURN(_t1901)1903,COND1900]
      goto JOIN1905
    JOIN1905:  preds = [JOIN1904,COND186B]
      goto FOREACH17F3
    NEXT1908:  preds = [FOREACH17F3]
      goto FOREACH17ED
    ASSIGN190A:  preds = [FOREACH17ED]
      int _t1909#2 = 2;
      int _t190B#1 = IAdd(_t1909,_t17E6);
      int _t190D#1 = IMul(_t190B,numCell17E8);
      int[] _t190F#1 = Range(newtonInt17E0,_t190D);
    FOREACH1912:  preds = [ASSIGN1910,NEXT1A38]
      foreach (itter1911 in _t190F) on exit goto ASSIGN1A3B
        int cellInt1915#11 = phi(cellInt17E2,cellInt1A35)
        int newtonInt1A27#1 = phi(newtonInt17E0,newtonInt1A36)
        tensor[3] xn1914#6 = phi(xn1907,xn1913)
      int[4] femIndicies1926#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs1927#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1926);
      tensor[3,4] basisResult1928#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_101916#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3,3] op1_e3_l_121917#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916);
      tensor[3,3,3] op1_e3_l_131918#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916,op1_e3_l_121917);
      tensor[3] probe_l_141919#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_15191A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_16191B#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3] op1_e3_l_17191C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16191B);
      tensor[3] op1_e3_l_18191D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15191A,op1_e3_l_17191C);
      real op1_e3_l_19191E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_141919,op1_e3_l_18191D);
      tensor[3,3] op1_e3_l_20191F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_131918);
      real op1_e3_l_211920#1 = λ(T0[])<(2 * T0)> (op1_e3_l_19191E);
      tensor[4] basisResult1930#2 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_221921#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,femDofs1927,basisResult1930,xn1914);
      tensor[3,3] op1_e3_l_231922#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_20191F,op1_e3_l_211920);
      tensor[3] op1_e3_l_241923#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221921);
      tensor[3] op1_e3_l_251924#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_241923);
      tensor[3] xn1913#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_251924);
      real _t194D#2 = 0.1e-7;
      real _t194F#1 = λ(T0[],T1[])<(T0 * T1)> (_t194D,_t194D);
      tensor[3] probe_l_30195D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt1915,mesh17D9,xn1914,femDofs1927,basisResult1930,xn1914);
      tensor[3] op1_e3_l_32195F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30195D);
      tensor[3] op1_e3_l_481960#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_32195F);
      real _t1951#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481960,op1_e3_l_481960);
      bool _t1989#1 = GTE<real>(_t194F,_t1951);
      if _t1989 then goto ASSIGN198D else goto JOIN1A25
    ASSIGN198D:  preds = [COND198B]
      real _t198C#4 = 0.1e1;
      real _t198E#4 = 0.1e-4;
      real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (_t198C,_t198E);
      tensor[3] _t1992#1 = <tensor[3]>[_t198C,_t198C,_t198C];
      real _t1994#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1992,xn1913);
      bool _t19CE#1 = GT<real>(_t1990,_t1994);
      tensor[3] _t19D0#1 = <tensor[3]>[_t198E,_t198E,_t198E];
      tensor[3] _t19D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t19D0,xn1913);
      real _t1A0C#1 = TensorIndex<tensor[3],[0]>(_t19D2);
      real _t1A0E#3 = -0.e0;
      bool _t1A10#1 = GT<real>(_t1A0C,_t1A0E);
      real _t1A12#1 = TensorIndex<tensor[3],[1]>(_t19D2);
      bool _t1A14#1 = GT<real>(_t1A12,_t1A0E);
      real _t1A16#1 = TensorIndex<tensor[3],[2]>(_t19D2);
      bool _t1A18#1 = GT<real>(_t1A16,_t1A0E);
      bool _t1A1A#1 = BAnd(_t1A14,_t1A18);
      bool _t1A1C#1 = BAnd(_t1A10,_t1A1A);
      bool _t1A1E#1 = BAnd(_t19CE,_t1A1C);
      if _t1A1E then goto ASSIGN1A22 else goto JOIN1A24
    ASSIGN1A22:  preds = [COND1A20]
      femData:MeshPos _t1A21#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellInt1915,xn1913,pos17DA);
      return _t1A21
      goto JOIN1A24
    JOIN1A24:  preds = [*RETURN(_t1A21)1A23,COND1A20]
      goto JOIN1A25
    JOIN1A25:  preds = [JOIN1A24,COND198B]
      int newtonInt1A26#2 = IAdd(newtonInt1A27,_t17E6);
      bool _t1A29#1 = GTE<int>(newtonInt1A26,_t1909);
      if _t1A29 then goto ASSIGN1A2D else goto JOIN1A37
    ASSIGN1A2D:  preds = [COND1A2B]
      bool _t1A2C#1 = GTE<int>(cellInt1915,numCell17E8);
      if _t1A2C then goto ASSIGN1A30 else goto ASSIGN1A39
    ASSIGN1A30:  preds = [COND1A2E]
      femData:MeshPos _t1A2F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A2F
      goto JOIN1A34
    JOIN1A34:  preds = [*RETURN(_t1A2F)1A31,ASSIGN1A39]
      int cellInt1A32#1 = phi(cellInt1A33)
      goto JOIN1A37
    JOIN1A37:  preds = [JOIN1A34,COND1A2B]
      int cellInt1A35#1 = phi(cellInt1A32,cellInt1915)
      int newtonInt1A36#1 = phi(newtonInt17E0,newtonInt1A26)
      goto FOREACH1912
    ASSIGN1A39:  preds = [COND1A2E]
      int cellInt1A33#1 = IAdd(cellInt1915,_t17E6);
      goto JOIN1A34
    ASSIGN1A3B:  preds = [FOREACH1912]
      string _t1A3A#1 = "Bad end 2";
      string _t1A3C#1 = "\n";
      Print<[string,string]>(_t1A3A,_t1A3C);
      femData:MeshPos _t1A3F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A3F
}
## input initialization
  ENTRY15FA:  preds = []
    real isoval15FB#1 = 0.2e0;
    globals.isoval15DC = isoval15FB;
    real thick15FE#1 = 0.7e-1;
    globals.thick15DD = thick15FE;
    real _t1601#2 = 0.3e1;
    real _t1603#1 = -0.3e1;
    tensor[3] camEye1605#1 = <tensor[3]>[_t1601,_t1603,_t1601];
    globals.camEye15DE = camEye1605;
    real _t1608#3 = 0.5e0;
    tensor[3] camAt160A#1 = <tensor[3]>[_t1608,_t1608,_t1608];
    globals.camAt15DF = camAt160A;
    real _t160D#2 = 0.e0;
    real _t160F#2 = 0.1e1;
    tensor[3] camUp1611#2 = <tensor[3]>[_t160D,_t160D,_t160F];
    globals.camUp15E0 = camUp1611;
    real camFOV1614#1 = 0.137e2;
    globals.camFOV15E1 = camFOV1614;
    int iresU1617#2 = 500;
    globals.iresU15E2 = iresU1617;
    globals.iresV15E3 = iresU1617;
    real camNear161B#1 = -0.2e1;
    globals.camNear15E4 = camNear161B;
    real camFar161E#1 = 0.5e1;
    globals.camFar15E5 = camFar161E;
    globals.refStep15E6 = _t160F;
    real rayStep1622#1 = 0.1e-1;
    globals.rayStep15E7 = rayStep1622;
    globals.lightVsp15E8 = camUp1611;
    real phongKa1626#1 = 0.1e0;
    globals.phongKa15E9 = phongKa1626;
    real phongKd1629#1 = 0.9e0;
    globals.phongKd15EA = phongKd1629;
    bool debug162C#1 = false;
    globals.debug15EB = debug162C;
    int su162F#2 = 250;
    globals.su15EC = su162F;
    globals.sv15ED = su162F;
    return
## global-variable initialization
  ENTRY1634:  preds = []
    femData:Mesh a1635#3 = globals.a15D9;
    femData:Space 0b043B_intermedateGlobal1637#1 = globals.0b043B_intermedateGlobal15DA;
    femData:FemFunc 0c043D_intermedateGlobal1639#1 = globals.0c043D_intermedateGlobal15DB;
    tensor[3] camEye163D#1 = globals.camEye15DE;
    tensor[3] camAt163F#1 = globals.camAt15DF;
    tensor[3] camUp1641#1 = globals.camUp15E0;
    real camFOV1643#1 = globals.camFOV15E1;
    int iresU1645#1 = globals.iresU15E2;
    int iresV1647#1 = globals.iresV15E3;
    tensor[3] lightVsp1649#2 = globals.lightVsp15E8;
    int _t164B#1 = 0;
    int _t164D#1 = 1;
    int _t164F#1 = ExtractFemItem<int,NumCell(Mesh)>(a1635);
    int _t1651#1 = ISub(_t164F,_t164D);
    int[] _t1653#1 = Range(_t164B,_t1651);
    femData:MeshCell[] _t1655#1 = <femData:MeshCell[]>{};
  FOREACH1658:  preds = [ASSIGN1656,NEXT165E]
    foreach (_t1657 in _t1653) on exit goto ASSIGN1660
      femData:MeshCell[] _t165C#1 = phi(_t1655,_t165B)
    femData:MeshCell _t1659#1 = LoadFem<femData:MeshCell>(a1635,_t1657);
    femData:MeshCell[] _t165B#1 = Append<femData:MeshCell>(_t165C,_t1659);
    goto FOREACH1658
  ASSIGN1660:  preds = [FOREACH1658]
    femData:Space b165F#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1637,a1635);
    femData:FemFunc c1661#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1639,b165F);
    femData:Space _t1663#2 = ExtractFem<femData:Space,femData:FemFunc>(c1661);
    femData:Mesh _t1665#1 = ExtractFem<femData:Mesh,femData:Space>(_t1663);
    image(IMAGE1D<double[3]>) I1667#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1669#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img166B#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1667);
    tensor[3] op1_e3_l_2166E#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_4166F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2166E,op1_e3_l_2166E);
    real camDist166D#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4166F);
    globals.camDist15EE = camDist166D;
    real op1_e3_l_91678#6 = λ(T0[])<(1) / ( T0)> (camDist166D);
    tensor[3] camN1674#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_2166E,op1_e3_l_91678);
    globals.camN15EF = camN1674;
    tensor[3,3] op1_e3_l_151683#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1641);
    tensor[3] op1_e3_l_171685#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_2166E,op1_e3_l_151683);
    real op1_e3_l_341686#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171685,op1_e3_l_171685);
    real op1_e3_l_351687#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91678,op1_e3_l_91678,op1_e3_l_341686);
    real op1_e3_l_361688#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351687);
    tensor[3] op1_e3_l_371689#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_171685);
    real op1_e3_l_38168A#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361688);
    tensor[3] camU167F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371689,op1_e3_l_38168A);
    globals.camU15F0 = camU167F;
    tensor[3,3] op1_e3_l_4516A2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_2166E);
    tensor[3] op1_e3_l_4716A3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171685,op1_e3_l_4516A2);
    tensor[3] op1_e3_l_5016A5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_4716A3);
    tensor[3] camV1698#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38168A,op1_e3_l_91678,op1_e3_l_5016A5);
    globals.camV15F1 = camV1698;
    real _t16B5#1 = 0.314159265358979323846264338327950288e1;
    real _t16B7#1 = 0.36e3;
    real op1_e3_l_516BA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1643,_t16B5);
    real op1_e3_l_616BB#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16B7,op1_e3_l_516BA);
    real op1_e3_l_1016BE#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_616BB);
    real camVmax16B9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1016BE,camDist166D);
    globals.camVmax15F2 = camVmax16B9;
    real _t16C8#1 = IntToReal(iresU1645);
    real _t16CA#1 = IntToReal(iresV1647);
    real op1_e3_l_1416D3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t16C8,op1_e3_l_1016BE,camDist166D);
    real camUmax16CC#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16CA,op1_e3_l_1416D3);
    globals.camUmax15F3 = camUmax16CC;
    tensor[3,3] _t16DD#1 = <tensor[3,3]>[camU167F,camV1698,camN1674];
    real op1_e3_l_316E0#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1649);
    real op1_e3_l_416E1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_316E0);
    real op1_e3_l_516E2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_416E1);
    tensor[3] op1_e3_l_616E3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t16DD,lightVsp1649);
    tensor[3] light16DF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_516E2,op1_e3_l_616E3);
    globals.light15F4 = light16DF;
    globals._t15F5 = _t1665;
    globals._tX15F6 = _t1663;
    globals.c15F7 = c1661;
    globals.img15F8 = img166B;
    globals._tXX15F9 = _t1669;
    globals.I1CC4 = I1667;
    return
## strand
  strand raycast (int ui16F0#2, int vi16F1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY16FC:  preds = []
        int iresU16FD#1 = globals.iresU15E2;
        int iresV16FF#1 = globals.iresV15E3;
        real camNear1701#1 = globals.camNear15E4;
        real camDist1703#1 = globals.camDist15EE;
        tensor[3] camN1705#1 = globals.camN15EF;
        tensor[3] camU1707#1 = globals.camU15F0;
        tensor[3] camV1709#1 = globals.camV15F1;
        real camVmax170B#4 = globals.camVmax15F2;
        real camUmax170D#2 = globals.camUmax15F3;
        real _t170F#5 = -0.5e0;
        real _t1711#1 = IntToReal(ui16F0);
        real _t1713#1 = IntToReal(iresU16FD);
        real _t1715#3 = 0.5e0;
        real op1_e3_l_61718#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1713,_t1715);
        real op1_e3_l_71719#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1711);
        real op1_e3_l_8171A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_61718);
        real op1_e3_l_9171B#2 = λ(T0[])<Neg(T0)> (camUmax170D);
        real op1_e3_l_10171C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71719,op1_e3_l_8171A);
        real op1_e3_l_11171D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax170D,op1_e3_l_9171B);
        real op1_e3_l_13171E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10171C,op1_e3_l_11171D);
        real rayU1717#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9171B,op1_e3_l_13171E);
        real _t1727#1 = IntToReal(vi16F1);
        real _t1729#2 = IntToReal(iresV16FF);
        real op1_e3_l_6172C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1729,_t1715);
        real op1_e3_l_7172D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1727);
        real op1_e3_l_8172E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_6172C);
        real op1_e3_l_9172F#1 = λ(T0[])<Neg(T0)> (camVmax170B);
        real op1_e3_l_101730#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_8172E);
        real op1_e3_l_111731#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax170B,op1_e3_l_9172F);
        real op1_e3_l_121732#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101730,op1_e3_l_111731);
        real rayV172B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_121732);
        real op1_e3_l_251744#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1715,_t1729);
        real op1_e3_l_271746#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_251744);
        real op1_e3_l_291748#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_271746);
        real op1_e3_l_31174A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291748,op1_e3_l_111731);
        real op1_e3_l_32174B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_31174A);
        tensor[3] op1_e3_l_33174C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1707,rayU1717);
        tensor[3] op1_e3_l_34174D#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1709,op1_e3_l_32174B);
        tensor[3] op1_e3_l_35174E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33174C,op1_e3_l_34174D);
        tensor[3] op1_e3_l_36174F#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1703,op1_e3_l_35174E);
        tensor[3] rayVec173B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1705,op1_e3_l_36174F);
        real transp1765#1 = 0.1e1;
        real _t1767#8 = 0.e0;
        tensor[3] rgb1769#1 = <tensor[3]>[_t1767,_t1767,_t1767];
        tensor[4] rgba176B#1 = <tensor[4]>[_t1767,_t1767,_t1767,_t1767];
        self.rayU = rayU1717;
        self.rayV = rayV172B;
        self.rayN = camNear1701;
        self.rayVec = rayVec173B;
        self.transp = transp1765;
        self.rgb = rgb1769;
        self.rgba = rgba176B;
        self.gray = _t1767;
        self.ui = ui16F0;
        self.vi = vi16F1;
        return
    end state init
    method update
        ENTRY1778:  preds = []
          image(IMAGE1D<double[3]>) I1CC5#3 = globals.I1CC4;
          real isoval1779#1 = globals.isoval15DC;
          femData:Mesh _t177B#9 = globals._t15F5;
          femData:Space _t177D#3 = globals._tX15F6;
          femData:FemFunc c177F#3 = globals.c15F7;
          image(IMAGE1D<double[3]>) img1781#1 = globals.img15F8;
          kernel _t1783#1 = globals._tXX15F9;
          femData:Mesh a1785#1 = globals.a15D9;
          real thick1787#1 = globals.thick15DD;
          tensor[3] camEye1789#1 = globals.camEye15DE;
          real camNear178B#2 = globals.camNear15E4;
          real camFar178D#2 = globals.camFar15E5;
          real refStep178F#1 = globals.refStep15E6;
          real rayStep1791#2 = globals.rayStep15E7;
          real phongKa1793#1 = globals.phongKa15E9;
          real phongKd1795#1 = globals.phongKd15EA;
          bool debug1797#1 = globals.debug15EB;
          int su1799#1 = globals.su15EC;
          int sv179B#1 = globals.sv15ED;
          tensor[3] light179D#1 = globals.light15F4;
          real rayN179F#4 = self.rayN;
          tensor[3] rayVec17A1#2 = self.rayVec;
          real transp17A3#10 = self.transp;
          tensor[3] rgb17A5#9 = self.rgb;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug1797 then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,su1799);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN1C6C
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN1C6C]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          tensor[3] op1_e3_l_317B9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN179F,rayVec17A1);
          tensor[3] x17B8#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1789,op1_e3_l_317B9);
          real _t17BC#8 = 0.e0;
          real _t17BE#2 = TensorIndex<tensor[3],[0]>(x17B8);
          bool _t17C0#1 = LT<real>(_t17BC,_t17BE);
          if _t17C0 then goto ASSIGN17C4 else goto JOIN1C4E
        ASSIGN17C4:  preds = [COND17C2]
          real _t17C3#11 = 0.1e1;
          bool _t17C5#1 = LT<real>(_t17BE,_t17C3);
          if _t17C5 then goto ASSIGN17C9 else goto JOIN1C4B
        ASSIGN17C9:  preds = [COND17C7]
          real _t17C8#2 = TensorIndex<tensor[3],[1]>(x17B8);
          bool _t17CA#1 = LT<real>(_t17BC,_t17C8);
          if _t17CA then goto ASSIGN17CE else goto JOIN1C48
        ASSIGN17CE:  preds = [COND17CC]
          bool _t17CD#1 = LT<real>(_t17C8,_t17C3);
          if _t17CD then goto ASSIGN17D1 else goto JOIN1C45
        ASSIGN17D1:  preds = [COND17CF]
          real _t17D0#2 = TensorIndex<tensor[3],[2]>(x17B8);
          bool _t17D2#1 = LT<real>(_t17BC,_t17D0);
          if _t17D2 then goto ASSIGN17D6 else goto JOIN1C42
        ASSIGN17D6:  preds = [COND17D4]
          bool _t17D5#1 = LT<real>(_t17D0,_t17C3);
          if _t17D5 then goto ASSIGN1A43 else goto JOIN1C3F
        ASSIGN1A43:  preds = [COND17D7]
          femData:MeshPos p1A42#1 = findPos17D8 (a1785,x17B8);
          bool _t1A44#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1A42);
          if _t1A44 then goto ASSIGN1A48 else goto ASSIGN1C67
        ASSIGN1A48:  preds = [COND1A46]
          real _t1A47#1 = 0.13e1;
          femData:MeshPos callFindPos1A69#2 = findPos17D8 (_t177B,x17B8);
          int intPos1A6A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A69);
          tensor[3] refPos1A6B#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A69);
          int[10] femIndicies1A70#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A6A);
          tensor[10] femDofs1A71#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A70);
          tensor[10] basisResult1A72#1 = EvaluateBasis<BasisArray(10)>(refPos1A6B);
          real compositionl1A4B#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A72,refPos1A6B);
          real op1_e3_l_231A4C#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1779,compositionl1A4B);
          tensor[3,10] basisResult1A79#1 = EvaluateBasis<BasisArray(3,10)>(refPos1A6B);
          tensor[3] compositionl1A4E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A79,refPos1A6B);
          int[4] femIndicies1A7B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1A6A);
          tensor[4,3] femDofs1A7C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1A7B);
          tensor[3,4] basisResult1A7D#4 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3,3] probe_l_251A4F#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3,3] op1_e3_l_271A50#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F);
          tensor[3,3,3] op1_e3_l_281A51#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F,op1_e3_l_271A50);
          tensor[3] probe_l_291A52#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_301A53#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_311A54#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3] op1_e3_l_321A55#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311A54);
          tensor[3] op1_e3_l_331A56#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301A53,op1_e3_l_321A55);
          real op1_e3_l_341A57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291A52,op1_e3_l_331A56);
          tensor[3,3] op1_e3_l_351A58#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281A51);
          real op1_e3_l_361A59#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341A57);
          tensor[3,3] op1_e3_l_371A5A#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351A58,op1_e3_l_361A59);
          tensor[3] op1_e3_l_381A5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1A4E,op1_e3_l_371A5A);
          tensor[3] op1_e3_l_541A5F#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381A5B);
          real op1_e3_l_561A61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541A5F,op1_e3_l_541A5F);
          real op1_e3_l_571A62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561A61);
          real op1_e3_l_581A63#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231A4C);
          real op1_e3_l_591A64#1 = λ(T0[],T1[])<(T0 * T1)> (thick1787,op1_e3_l_571A62);
          real op1_e3_l_601A65#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581A63,op1_e3_l_591A64);
          real op1_e3_l_611A66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_601A65);
          real op1_e3_l_621A67#2 = λ(T0[],T1[])<(T0 * T1)> (_t1A47,op1_e3_l_611A66);
          real op1_e3_l_631A68#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t17BC,_t17C3,op1_e3_l_621A67);
          real a1A49#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_631A68);
          bool _t1ACD#1 = GT<real>(a1A49,_t17BC);
          if _t1ACD then goto ASSIGN1CF5 else goto JOIN1C36
        ASSIGN1CF5:  preds = [COND1ACF]
          real op1_e3_l_641AEF#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t17C3,_t17BC,op1_e3_l_621A67);
          real op1_e3_l_651AF0#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_641AEF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_651AF0);
          real op1_e3_l_31B57#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec17A1);
          real op1_e3_l_41B58#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31B57);
          real op1_e3_l_51B59#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1791,op1_e3_l_41B58);
          real _t1B56#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep178F,op1_e3_l_51B59);
          real _t1B5E#1 = MathFn<pow>(_t1AD0,_t1B56);
          real _t1B60#2 = 0.11e1;
          real _t1B62#1 = 0.7e0;
          real op1_e3_l_671B7F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571A62);
          real op1_e3_l_681B80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light179D,op1_e3_l_541A5F);
          real _t1B64#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671B7F,op1_e3_l_681B80);
          real shade1BE2#1 = Max<real>(_t17BC,_t1B64);
          real _t1BE4#2 = λ(T0[])<T0> (compositionl1A4B);
          real op1_e3_l_151BFF#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,rayN179F);
          real op1_e3_l_161C00#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,camFar178D);
          real op1_e3_l_171C01#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151BFF,op1_e3_l_161C00);
          real op1_e3_l_181C02#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1B60,_t1B62);
          real op1_e3_l_191C03#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_171C01,op1_e3_l_181C02);
          real op1_e3_l_201C04#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1795,shade1BE2);
          real Mtransform1C0A#2 = Transform<IMAGE1D<double[3]>>(I1CC5);
          real MxPos1C0B#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1C0A,_t1BE4);
          real Ttranslate1C0C#1 = Translate<IMAGE1D<double[3]>>(I1CC5);
          real imgPos1C0D#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1C0B,Ttranslate1C0C);
          real nd1C0E#2 = Floor<1>(imgPos1C0D);
          real f1C0F#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1C0D,nd1C0E);
          int n1C10#1 = RealToInt<1>(nd1C0E);
          int idx1C12#1 = n1C10;
          tensor[3,2] ldvox1C13#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1CC5,idx1C12);
          tensor[2] kernX_1C14#1 = BuildPos<1>(f1C0F);
          tensor[2] kevalX_d0_1C15#1 = EvalKernel<2,tent,0>(kernX_1C14);
          tensor[3] probe_l_211C05#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1781,_t1783,_t1BE4,Mtransform1C0A,ldvox1C13,kevalX_d0_1C15);
          real op1_e3_l_221C06#2 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,_t1B5E);
          real op1_e3_l_231C07#1 = λ(T0[],T1[])<(T0 + T1)> (_t1B60,op1_e3_l_191C03);
          real op1_e3_l_241C08#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1793,op1_e3_l_201C04);
          tensor[3] op1_e3_l_251C09#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp17A3,probe_l_211C05,op1_e3_l_221C06,op1_e3_l_231C07,op1_e3_l_241C08);
          tensor[3] rgb1BFE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb17A5,op1_e3_l_251C09);
          real op1_e3_l_51C30#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_221C06);
          real transp1C2E#1 = λ(T0[],T1[])<(T0 * T1)> (transp17A3,op1_e3_l_51C30);
          goto JOIN1C36
        JOIN1C36:  preds = [ASSIGN1C33,COND1ACF]
          tensor[3] rgb1C34#1 = phi(rgb1BFE,rgb17A5)
          real transp1C35#1 = phi(transp1C2E,transp17A3)
          string _t1C37#1 = "yay!\n";
          Print<[string]>(_t1C37);
          goto JOIN1C3C
        JOIN1C3C:  preds = [MASSIGN1C39,MASSIGN1C6B]
          tensor[3] rgb1C3A#1 = phi(rgb1C34,rgb17A5)
          real transp1C3B#1 = phi(transp1C35,transp17A3)
          goto JOIN1C3F
        JOIN1C3F:  preds = [JOIN1C3C,COND17D7]
          tensor[3] rgb1C3D#1 = phi(rgb1C3A,rgb17A5)
          real transp1C3E#1 = phi(transp1C3B,transp17A3)
          goto JOIN1C42
        JOIN1C42:  preds = [JOIN1C3F,COND17D4]
          tensor[3] rgb1C40#1 = phi(rgb1C3D,rgb17A5)
          real transp1C41#1 = phi(transp1C3E,transp17A3)
          goto JOIN1C45
        JOIN1C45:  preds = [JOIN1C42,COND17CF]
          tensor[3] rgb1C43#1 = phi(rgb1C40,rgb17A5)
          real transp1C44#1 = phi(transp1C41,transp17A3)
          goto JOIN1C48
        JOIN1C48:  preds = [JOIN1C45,COND17CC]
          tensor[3] rgb1C46#1 = phi(rgb1C43,rgb17A5)
          real transp1C47#1 = phi(transp1C44,transp17A3)
          goto JOIN1C4B
        JOIN1C4B:  preds = [JOIN1C48,COND17C7]
          tensor[3] rgb1C49#1 = phi(rgb1C46,rgb17A5)
          real transp1C4A#1 = phi(transp1C47,transp17A3)
          goto JOIN1C4E
        JOIN1C4E:  preds = [JOIN1C4B,COND17C2]
          tensor[3] rgb1C4C#3 = phi(rgb1C49,rgb17A5)
          real transp1C4D#2 = phi(transp1C4A,transp17A3)
          real _t1C4F#1 = 0.1e-1;
          bool _t1C51#1 = LT<real>(transp1C4D,_t1C4F);
          if _t1C51 then goto SAVE1C54 else goto JOIN1C58
        SAVE1C54:  preds = [COND1C53]
          self.transp = _t17BC;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C58
        JOIN1C58:  preds = [*STABILIZE1C56,COND1C53]
          real transp1C57#2 = phi(transp1C4D)
          bool _t1C59#1 = GT<real>(rayN179F,camFar178D);
          if _t1C59 then goto SAVE1C5C else goto JOIN1C5F
        SAVE1C5C:  preds = [COND1C5B]
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C5F
        JOIN1C5F:  preds = [*STABILIZE1C5E,COND1C5B]
          real rayN1C60#1 = λ(T0[],T1[])<(T0 + T1)> (rayN179F,rayStep1791);
          self.rayN = rayN1C60;
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          active
        ASSIGN1C67:  preds = [COND1A46]
          string _t1C66#1 = "\n";
          Print<[tensor[3],string]>(x17B8,_t1C66);
          string _t1C69#1 = "wait what\?\n";
          Print<[string]>(_t1C69);
          goto JOIN1C3C
        ASSIGN1C6C:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,sv179B);
          goto JOIN17B3
    end update
    method stabilize
        ENTRY1C6D:  preds = []
          bool debug1C6E#1 = globals.debug15EB;
          int su1C70#1 = globals.su15EC;
          int sv1C72#1 = globals.sv15ED;
          real transp1C74#1 = self.transp;
          tensor[3] rgb1C76#3 = self.rgb;
          tensor[4] rgba1C78#1 = self.rgba;
          int ui1C7A#1 = self.ui;
          int vi1C7C#1 = self.vi;
          real _t1C7E#1 = 0.1e1;
          real a1C80#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C82#1 = 0.e0;
          bool _t1C84#1 = GT<real>(a1C80,_t1C82);
          if _t1C84 then goto ASSIGN1C88 else goto JOIN1C9C
        ASSIGN1C88:  preds = [COND1C86]
          real _t1C87#1 = TensorIndex<tensor[3],[0]>(rgb1C76);
          real _t1C89#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C87,a1C80);
          real _t1C8D#1 = TensorIndex<tensor[3],[1]>(rgb1C76);
          real _t1C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C8D,a1C80);
          real _t1C93#1 = TensorIndex<tensor[3],[2]>(rgb1C76);
          real _t1C95#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C93,a1C80);
          tensor[4] rgba1C99#1 = <tensor[4]>[_t1C89,_t1C8F,_t1C95,a1C80];
          goto JOIN1C9C
        JOIN1C9C:  preds = [ASSIGN1C9A,COND1C86]
          tensor[4] rgba1C9B#2 = phi(rgba1C99,rgba1C78)
          bool _t1C9D#1 = EQ<int>(ui1C7A,su1C70);
          if _t1C9D then goto ASSIGN1CA1 else goto JOIN1CA7
        ASSIGN1CA1:  preds = [COND1C9F]
          bool _t1CA0#1 = EQ<int>(vi1C7C,sv1C72);
          if _t1CA0 then goto COND1CA3 else goto JOIN1CA6
        COND1CA3:  preds = [COND1CA2]
          if debug1C6E then goto MASSIGN1CA4 else goto JOIN1CA5
        MASSIGN1CA4:  preds = [COND1CA3]
          Print<[real,tensor[4]]>(a1C80,rgba1C9B);
          goto JOIN1CA5
        JOIN1CA5:  preds = [MASSIGN1CA4,COND1CA3]
          goto JOIN1CA6
        JOIN1CA6:  preds = [JOIN1CA5,COND1CA2]
          goto JOIN1CA7
        JOIN1CA7:  preds = [JOIN1CA6,COND1C9F]
          self.rgba = rgba1C9B;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1CAA:  preds = []
      int iresU1CAB#1 = globals.iresU15E2;
      int iresV1CAD#1 = globals.iresV15E3;
      int _t1CAF#2 = 0;
      int _t1CB1#2 = 1;
      int _t1CB3#1 = ISub(iresV1CAD,_t1CB1);
      int[] _t1CB5#1 = Range(_t1CAF,_t1CB3);
    FOREACH1CB8:  preds = [ASSIGN1CB6,NEXT1CC1]
      foreach (vi1CB7 in _t1CB5) on exit goto RETURN1CC2
      int _t1CB9#1 = ISub(iresU1CAB,_t1CB1);
      int[] _t1CBB#1 = Range(_t1CAF,_t1CB9);
    FOREACH1CBE:  preds = [ASSIGN1CBC,NEXT1CC0]
      foreach (ui1CBD in _t1CBB) on exit goto NEXT1CC1
      new raycast(ui1CBD,vi1CB7);
      goto FOREACH1CBE
    NEXT1CC1:  preds = [FOREACH1CBE]
      goto FOREACH1CB8
    RETURN1CC2:  preds = [FOREACH1CB8]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a15D9 (a) = <no-default>
  input 0b043B_intermedateGlobal15DA (b) = <no-default>
  input 0c043D_intermedateGlobal15DB (c) = <no-default>
  input isoval15DC (isoval) = <default>
  input thick15DD (thick) = <default>
  input camEye15DE (camEye) = <default>
  input camAt15DF (camAt) = <default>
  input camUp15E0 (camUp) = <default>
  input camFOV15E1 (camFOV) = <default>
  input iresU15E2 (iresU) = <default>
  input iresV15E3 (iresV) = <default>
  input camNear15E4 (camNear) = <default>
  input camFar15E5 (camFar) = <default>
  input refStep15E6 (refStep) = <default>
  input rayStep15E7 (rayStep) = <default>
  input lightVsp15E8 (lightVsp) = <default>
  input phongKa15E9 (phongKa) = <default>
  input phongKd15EA (phongKd) = <default>
  input debug15EB (debug) = <default>
  input su15EC (su) = <default>
  input sv15ED (sv) = <default>
  global real camDist15EE
  global tensor[3] camN15EF
  global tensor[3] camU15F0
  global tensor[3] camV15F1
  global real camVmax15F2
  global real camUmax15F3
  global tensor[3] light15F4
  global femData:Mesh _t15F5
  global femData:Space _tX15F6
  global femData:FemFunc c15F7
  global image(IMAGE1D<double[3]>) img15F8
  global kernel _tXX15F9
  global image(IMAGE1D<double[3]>) I1CC4
## functions
  function femData:MeshPos findPos17D8 (femData:Mesh mesh17D9#23, tensor[3] pos17DA#7) {
    ENTRY17DB:  preds = []
      real _t17DC#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn17DE#19 = <tensor[3]>[_t17DC,_t17DC,_t17DC];
      int newtonInt17E0#4 = 0;
      int cellInt17E2#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh17D9);
      int _t17E4#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh17D9);
      int _t17E6#4 = 1;
      int numCell17E8#2 = ISub(_t17E4,_t17E6);
      int[] yayCells17EA#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh17D9,pos17DA);
    FOREACH17ED:  preds = [ASSIGN17EB,NEXT1908]
      foreach (cellItter17EC in yayCells17EA) on exit goto ASSIGN190A
        tensor[3] xn1907#2 = phi(xn17DE,xn17F5)
      int _t17EE#1 = 2;
      int[] _t17F0#1 = Range(newtonInt17E0,_t17EE);
    FOREACH17F3:  preds = [ASSIGN17F1,NEXT1906]
      foreach (newtonItter17F2 in _t17F0) on exit goto NEXT1908
        tensor[3] xn17F5#7 = phi(xn1907,xn17F4)
      int[4] femIndicies1806#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellItter17EC);
      tensor[4,3] femDofs1807#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1806);
      tensor[3,4] basisResult1808#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_1017F6#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3,3] op1_e3_l_1217F7#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6);
      tensor[3,3,3] op1_e3_l_1317F8#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1017F6,op1_e3_l_1217F7);
      tensor[3] probe_l_1417F9#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1517FA#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3] probe_l_1617FB#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter17EC,mesh17D9,xn17DE,femDofs1807,basisResult1808,xn17DE);
      tensor[3,3] op1_e3_l_1717FC#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1617FB);
      tensor[3] op1_e3_l_1817FD#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1517FA,op1_e3_l_1717FC);
      real op1_e3_l_1917FE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1417F9,op1_e3_l_1817FD);
      tensor[3,3] op1_e3_l_2017FF#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1317F8);
      real op1_e3_l_211800#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1917FE);
      tensor[4] basisResult1810#2 = EvaluateBasis<BasisArray(4)>(xn17F5);
      tensor[3] probe_l_221801#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn17F5,cellItter17EC,mesh17D9,femDofs1807,basisResult1810,xn17F5);
      tensor[3,3] op1_e3_l_231802#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2017FF,op1_e3_l_211800);
      tensor[3] op1_e3_l_241803#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221801);
      tensor[3] op1_e3_l_251804#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_241803);
      tensor[3] xn17F4#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn17F5,op1_e3_l_251804);
      real _t182D#2 = 0.1e-7;
      real _t182F#1 = λ(T0[],T1[])<(T0 * T1)> (_t182D,_t182D);
      tensor[3] probe_l_30183D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter17EC,mesh17D9,xn17F5,femDofs1807,basisResult1810,xn17F5);
      tensor[3] op1_e3_l_32183F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30183D);
      tensor[3] op1_e3_l_481840#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231802,op1_e3_l_32183F);
      real _t1831#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481840,op1_e3_l_481840);
      bool _t1869#1 = GTE<real>(_t182F,_t1831);
      if _t1869 then goto ASSIGN186D else goto JOIN1905
    ASSIGN186D:  preds = [COND186B]
      real _t186C#4 = 0.1e1;
      real _t186E#4 = 0.1e-4;
      real _t1870#1 = λ(T0[],T1[])<(T0 + T1)> (_t186C,_t186E);
      tensor[3] _t1872#1 = <tensor[3]>[_t186C,_t186C,_t186C];
      real _t1874#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1872,xn17F4);
      bool _t18AE#1 = GT<real>(_t1870,_t1874);
      tensor[3] _t18B0#1 = <tensor[3]>[_t186E,_t186E,_t186E];
      tensor[3] _t18B2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t18B0,xn17F4);
      real _t18EC#1 = TensorIndex<tensor[3],[0]>(_t18B2);
      real _t18EE#3 = -0.e0;
      bool _t18F0#1 = GT<real>(_t18EC,_t18EE);
      real _t18F2#1 = TensorIndex<tensor[3],[1]>(_t18B2);
      bool _t18F4#1 = GT<real>(_t18F2,_t18EE);
      real _t18F6#1 = TensorIndex<tensor[3],[2]>(_t18B2);
      bool _t18F8#1 = GT<real>(_t18F6,_t18EE);
      bool _t18FA#1 = BAnd(_t18F4,_t18F8);
      bool _t18FC#1 = BAnd(_t18F0,_t18FA);
      bool _t18FE#1 = BAnd(_t18AE,_t18FC);
      if _t18FE then goto ASSIGN1902 else goto JOIN1904
    ASSIGN1902:  preds = [COND1900]
      femData:MeshPos _t1901#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellItter17EC,xn17F4,pos17DA);
      return _t1901
      goto JOIN1904
    JOIN1904:  preds = [*RETURN(_t1901)1903,COND1900]
      goto JOIN1905
    JOIN1905:  preds = [JOIN1904,COND186B]
      goto FOREACH17F3
    NEXT1908:  preds = [FOREACH17F3]
      goto FOREACH17ED
    ASSIGN190A:  preds = [FOREACH17ED]
      int _t1909#2 = 2;
      int _t190B#1 = IAdd(_t1909,_t17E6);
      int _t190D#1 = IMul(_t190B,numCell17E8);
      int[] _t190F#1 = Range(newtonInt17E0,_t190D);
    FOREACH1912:  preds = [ASSIGN1910,NEXT1A38]
      foreach (itter1911 in _t190F) on exit goto ASSIGN1A3B
        int cellInt1915#11 = phi(cellInt17E2,cellInt1A35)
        int newtonInt1A27#1 = phi(newtonInt17E0,newtonInt1A36)
        tensor[3] xn1914#6 = phi(xn1907,xn1913)
      int[4] femIndicies1926#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh17D9,cellInt1915);
      tensor[4,3] femDofs1927#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh17D9,femIndicies1926);
      tensor[3,4] basisResult1928#4 = EvaluateBasis<BasisArray(3,4)>(xn17DE);
      tensor[3,3] probe_l_101916#2 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3,3] op1_e3_l_121917#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916);
      tensor[3,3,3] op1_e3_l_131918#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_101916,op1_e3_l_121917);
      tensor[3] probe_l_141919#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_15191A#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3] probe_l_16191B#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellInt1915,mesh17D9,xn17DE,femDofs1927,basisResult1928,xn17DE);
      tensor[3,3] op1_e3_l_17191C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16191B);
      tensor[3] op1_e3_l_18191D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15191A,op1_e3_l_17191C);
      real op1_e3_l_19191E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_141919,op1_e3_l_18191D);
      tensor[3,3] op1_e3_l_20191F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_131918);
      real op1_e3_l_211920#1 = λ(T0[])<(2 * T0)> (op1_e3_l_19191E);
      tensor[4] basisResult1930#2 = EvaluateBasis<BasisArray(4)>(xn1914);
      tensor[3] probe_l_221921#1 = λ(T0[3],INT1,FEM(msh)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn1914,cellInt1915,mesh17D9,femDofs1927,basisResult1930,xn1914);
      tensor[3,3] op1_e3_l_231922#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_20191F,op1_e3_l_211920);
      tensor[3] op1_e3_l_241923#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_221921);
      tensor[3] op1_e3_l_251924#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_241923);
      tensor[3] xn1913#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1914,op1_e3_l_251924);
      real _t194D#2 = 0.1e-7;
      real _t194F#1 = λ(T0[],T1[])<(T0 * T1)> (_t194D,_t194D);
      tensor[3] probe_l_30195D#1 = λ(INT0,FEM(msh)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellInt1915,mesh17D9,xn1914,femDofs1927,basisResult1930,xn1914);
      tensor[3] op1_e3_l_32195F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos17DA,probe_l_30195D);
      tensor[3] op1_e3_l_481960#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_231922,op1_e3_l_32195F);
      real _t1951#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_481960,op1_e3_l_481960);
      bool _t1989#1 = GTE<real>(_t194F,_t1951);
      if _t1989 then goto ASSIGN198D else goto JOIN1A25
    ASSIGN198D:  preds = [COND198B]
      real _t198C#4 = 0.1e1;
      real _t198E#4 = 0.1e-4;
      real _t1990#1 = λ(T0[],T1[])<(T0 + T1)> (_t198C,_t198E);
      tensor[3] _t1992#1 = <tensor[3]>[_t198C,_t198C,_t198C];
      real _t1994#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1992,xn1913);
      bool _t19CE#1 = GT<real>(_t1990,_t1994);
      tensor[3] _t19D0#1 = <tensor[3]>[_t198E,_t198E,_t198E];
      tensor[3] _t19D2#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t19D0,xn1913);
      real _t1A0C#1 = TensorIndex<tensor[3],[0]>(_t19D2);
      real _t1A0E#3 = -0.e0;
      bool _t1A10#1 = GT<real>(_t1A0C,_t1A0E);
      real _t1A12#1 = TensorIndex<tensor[3],[1]>(_t19D2);
      bool _t1A14#1 = GT<real>(_t1A12,_t1A0E);
      real _t1A16#1 = TensorIndex<tensor[3],[2]>(_t19D2);
      bool _t1A18#1 = GT<real>(_t1A16,_t1A0E);
      bool _t1A1A#1 = BAnd(_t1A14,_t1A18);
      bool _t1A1C#1 = BAnd(_t1A10,_t1A1A);
      bool _t1A1E#1 = BAnd(_t19CE,_t1A1C);
      if _t1A1E then goto ASSIGN1A22 else goto JOIN1A24
    ASSIGN1A22:  preds = [COND1A20]
      femData:MeshPos _t1A21#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh17D9,cellInt1915,xn1913,pos17DA);
      return _t1A21
      goto JOIN1A24
    JOIN1A24:  preds = [*RETURN(_t1A21)1A23,COND1A20]
      goto JOIN1A25
    JOIN1A25:  preds = [JOIN1A24,COND198B]
      int newtonInt1A26#2 = IAdd(newtonInt1A27,_t17E6);
      bool _t1A29#1 = GTE<int>(newtonInt1A26,_t1909);
      if _t1A29 then goto ASSIGN1A2D else goto JOIN1A37
    ASSIGN1A2D:  preds = [COND1A2B]
      bool _t1A2C#1 = GTE<int>(cellInt1915,numCell17E8);
      if _t1A2C then goto ASSIGN1A30 else goto ASSIGN1A39
    ASSIGN1A30:  preds = [COND1A2E]
      femData:MeshPos _t1A2F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A2F
      goto JOIN1A34
    JOIN1A34:  preds = [*RETURN(_t1A2F)1A31,ASSIGN1A39]
      int cellInt1A32#1 = phi(cellInt1A33)
      goto JOIN1A37
    JOIN1A37:  preds = [JOIN1A34,COND1A2B]
      int cellInt1A35#1 = phi(cellInt1A32,cellInt1915)
      int newtonInt1A36#1 = phi(newtonInt17E0,newtonInt1A26)
      goto FOREACH1912
    ASSIGN1A39:  preds = [COND1A2E]
      int cellInt1A33#1 = IAdd(cellInt1915,_t17E6);
      goto JOIN1A34
    ASSIGN1A3B:  preds = [FOREACH1912]
      string _t1A3A#1 = "Bad end 2";
      string _t1A3C#1 = "\n";
      Print<[string,string]>(_t1A3A,_t1A3C);
      femData:MeshPos _t1A3F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh17D9);
      return _t1A3F
}
## input initialization
  ENTRY15FA:  preds = []
    real isoval15FB#1 = 0.2e0;
    globals.isoval15DC = isoval15FB;
    real thick15FE#1 = 0.7e-1;
    globals.thick15DD = thick15FE;
    real _t1601#2 = 0.3e1;
    real _t1603#1 = -0.3e1;
    tensor[3] camEye1605#1 = <tensor[3]>[_t1601,_t1603,_t1601];
    globals.camEye15DE = camEye1605;
    real _t1608#3 = 0.5e0;
    tensor[3] camAt160A#1 = <tensor[3]>[_t1608,_t1608,_t1608];
    globals.camAt15DF = camAt160A;
    real _t160D#2 = 0.e0;
    real _t160F#2 = 0.1e1;
    tensor[3] camUp1611#2 = <tensor[3]>[_t160D,_t160D,_t160F];
    globals.camUp15E0 = camUp1611;
    real camFOV1614#1 = 0.137e2;
    globals.camFOV15E1 = camFOV1614;
    int iresU1617#2 = 500;
    globals.iresU15E2 = iresU1617;
    globals.iresV15E3 = iresU1617;
    real camNear161B#1 = -0.2e1;
    globals.camNear15E4 = camNear161B;
    real camFar161E#1 = 0.5e1;
    globals.camFar15E5 = camFar161E;
    globals.refStep15E6 = _t160F;
    real rayStep1622#1 = 0.1e-1;
    globals.rayStep15E7 = rayStep1622;
    globals.lightVsp15E8 = camUp1611;
    real phongKa1626#1 = 0.1e0;
    globals.phongKa15E9 = phongKa1626;
    real phongKd1629#1 = 0.9e0;
    globals.phongKd15EA = phongKd1629;
    bool debug162C#1 = false;
    globals.debug15EB = debug162C;
    int su162F#2 = 250;
    globals.su15EC = su162F;
    globals.sv15ED = su162F;
    return
## global-variable initialization
  ENTRY1634:  preds = []
    femData:Mesh a1635#3 = globals.a15D9;
    femData:Space 0b043B_intermedateGlobal1637#1 = globals.0b043B_intermedateGlobal15DA;
    femData:FemFunc 0c043D_intermedateGlobal1639#1 = globals.0c043D_intermedateGlobal15DB;
    tensor[3] camEye163D#1 = globals.camEye15DE;
    tensor[3] camAt163F#1 = globals.camAt15DF;
    tensor[3] camUp1641#1 = globals.camUp15E0;
    real camFOV1643#1 = globals.camFOV15E1;
    int iresU1645#1 = globals.iresU15E2;
    int iresV1647#1 = globals.iresV15E3;
    tensor[3] lightVsp1649#2 = globals.lightVsp15E8;
    int _t164B#1 = 0;
    int _t164D#1 = 1;
    int _t164F#1 = ExtractFemItem<int,NumCell(Mesh)>(a1635);
    int _t1651#1 = ISub(_t164F,_t164D);
    int[] _t1653#1 = Range(_t164B,_t1651);
    femData:MeshCell[] _t1655#1 = <femData:MeshCell[]>{};
  FOREACH1658:  preds = [ASSIGN1656,NEXT165E]
    foreach (_t1657 in _t1653) on exit goto ASSIGN1660
      femData:MeshCell[] _t165C#1 = phi(_t1655,_t165B)
    femData:MeshCell _t1659#1 = LoadFem<femData:MeshCell>(a1635,_t1657);
    femData:MeshCell[] _t165B#1 = Append<femData:MeshCell>(_t165C,_t1659);
    goto FOREACH1658
  ASSIGN1660:  preds = [FOREACH1658]
    femData:Space b165F#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1637,a1635);
    femData:FemFunc c1661#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1639,b165F);
    femData:Space _t1663#2 = ExtractFem<femData:Space,femData:FemFunc>(c1661);
    femData:Mesh _t1665#1 = ExtractFem<femData:Mesh,femData:Space>(_t1663);
    image(IMAGE1D<double[3]>) I1667#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    kernel _t1669#1 = Kernel<tent,0>;
    image(IMAGE1D<double[3]>) img166B#1 = BorderCtlClamp<IMAGE1D<double[3]>>(I1667);
    tensor[3] op1_e3_l_2166E#5 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (camAt163F,camEye163D);
    real op1_e3_l_4166F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2166E,op1_e3_l_2166E);
    real camDist166D#4 = λ(T0[])<Sqrt(T0)> (op1_e3_l_4166F);
    globals.camDist15EE = camDist166D;
    real op1_e3_l_91678#6 = λ(T0[])<(1) / ( T0)> (camDist166D);
    tensor[3] camN1674#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_2166E,op1_e3_l_91678);
    globals.camN15EF = camN1674;
    tensor[3,3] op1_e3_l_151683#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (camUp1641);
    tensor[3] op1_e3_l_171685#4 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_2166E,op1_e3_l_151683);
    real op1_e3_l_341686#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_171685,op1_e3_l_171685);
    real op1_e3_l_351687#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_91678,op1_e3_l_91678,op1_e3_l_341686);
    real op1_e3_l_361688#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_351687);
    tensor[3] op1_e3_l_371689#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_171685);
    real op1_e3_l_38168A#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_361688);
    tensor[3] camU167F#2 = λ(T0[3],T1[])<(T0_{i0} * T1)>_{3} (op1_e3_l_371689,op1_e3_l_38168A);
    globals.camU15F0 = camU167F;
    tensor[3,3] op1_e3_l_4516A2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (op1_e3_l_2166E);
    tensor[3] op1_e3_l_4716A3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (op1_e3_l_171685,op1_e3_l_4516A2);
    tensor[3] op1_e3_l_5016A5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_91678,op1_e3_l_4716A3);
    tensor[3] camV1698#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (op1_e3_l_38168A,op1_e3_l_91678,op1_e3_l_5016A5);
    globals.camV15F1 = camV1698;
    real _t16B5#1 = 0.314159265358979323846264338327950288e1;
    real _t16B7#1 = 0.36e3;
    real op1_e3_l_516BA#1 = λ(T0[],T1[])<(T0 * T1)> (camFOV1643,_t16B5);
    real op1_e3_l_616BB#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16B7,op1_e3_l_516BA);
    real op1_e3_l_1016BE#2 = λ(T0[])<Tangent(T0)> (op1_e3_l_616BB);
    real camVmax16B9#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_1016BE,camDist166D);
    globals.camVmax15F2 = camVmax16B9;
    real _t16C8#1 = IntToReal(iresU1645);
    real _t16CA#1 = IntToReal(iresV1647);
    real op1_e3_l_1416D3#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (_t16C8,op1_e3_l_1016BE,camDist166D);
    real camUmax16CC#1 = λ(T0[],T1[])<(T1) / ( T0)> (_t16CA,op1_e3_l_1416D3);
    globals.camUmax15F3 = camUmax16CC;
    tensor[3,3] _t16DD#1 = <tensor[3,3]>[camU167F,camV1698,camN1674];
    real op1_e3_l_316E0#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (lightVsp1649);
    real op1_e3_l_416E1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_316E0);
    real op1_e3_l_516E2#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_416E1);
    tensor[3] op1_e3_l_616E3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i1,i0} * T1_{i1}))>(i1=0..2)>_{3} (_t16DD,lightVsp1649);
    tensor[3] light16DF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_516E2,op1_e3_l_616E3);
    globals.light15F4 = light16DF;
    globals._t15F5 = _t1665;
    globals._tX15F6 = _t1663;
    globals.c15F7 = c1661;
    globals.img15F8 = img166B;
    globals._tXX15F9 = _t1669;
    globals.I1CC4 = I1667;
    return
## strand
  strand raycast (int ui16F0#2, int vi16F1#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY16FC:  preds = []
        int iresU16FD#1 = globals.iresU15E2;
        int iresV16FF#1 = globals.iresV15E3;
        real camNear1701#1 = globals.camNear15E4;
        real camDist1703#1 = globals.camDist15EE;
        tensor[3] camN1705#1 = globals.camN15EF;
        tensor[3] camU1707#1 = globals.camU15F0;
        tensor[3] camV1709#1 = globals.camV15F1;
        real camVmax170B#4 = globals.camVmax15F2;
        real camUmax170D#2 = globals.camUmax15F3;
        real _t170F#5 = -0.5e0;
        real _t1711#1 = IntToReal(ui16F0);
        real _t1713#1 = IntToReal(iresU16FD);
        real _t1715#3 = 0.5e0;
        real op1_e3_l_61718#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1713,_t1715);
        real op1_e3_l_71719#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1711);
        real op1_e3_l_8171A#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_61718);
        real op1_e3_l_9171B#2 = λ(T0[])<Neg(T0)> (camUmax170D);
        real op1_e3_l_10171C#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_71719,op1_e3_l_8171A);
        real op1_e3_l_11171D#1 = λ(T0[],T1[])<(T0) - (T1)> (camUmax170D,op1_e3_l_9171B);
        real op1_e3_l_13171E#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_10171C,op1_e3_l_11171D);
        real rayU1717#2 = λ(T0[],T1[])<(T0 + T1)> (op1_e3_l_9171B,op1_e3_l_13171E);
        real _t1727#1 = IntToReal(vi16F1);
        real _t1729#2 = IntToReal(iresV16FF);
        real op1_e3_l_6172C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1729,_t1715);
        real op1_e3_l_7172D#2 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,_t1727);
        real op1_e3_l_8172E#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_6172C);
        real op1_e3_l_9172F#1 = λ(T0[])<Neg(T0)> (camVmax170B);
        real op1_e3_l_101730#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_8172E);
        real op1_e3_l_111731#2 = λ(T0[],T1[])<(T1) - (T0)> (camVmax170B,op1_e3_l_9172F);
        real op1_e3_l_121732#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_101730,op1_e3_l_111731);
        real rayV172B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_121732);
        real op1_e3_l_251744#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1715,_t1729);
        real op1_e3_l_271746#1 = λ(T0[],T1[])<(T1) - (T0)> (_t170F,op1_e3_l_251744);
        real op1_e3_l_291748#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_7172D,op1_e3_l_271746);
        real op1_e3_l_31174A#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_291748,op1_e3_l_111731);
        real op1_e3_l_32174B#1 = λ(T0[],T1[])<(T0 + T1)> (camVmax170B,op1_e3_l_31174A);
        tensor[3] op1_e3_l_33174C#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camU1707,rayU1717);
        tensor[3] op1_e3_l_34174D#1 = λ(T0[3],T1[])<(T1 * T0_{i0})>_{3} (camV1709,op1_e3_l_32174B);
        tensor[3] op1_e3_l_35174E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (op1_e3_l_33174C,op1_e3_l_34174D);
        tensor[3] op1_e3_l_36174F#1 = λ(T0[],T1[3])<(T1_{i0}) / ( T0)>_{3} (camDist1703,op1_e3_l_35174E);
        tensor[3] rayVec173B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camN1705,op1_e3_l_36174F);
        real transp1765#1 = 0.1e1;
        real _t1767#8 = 0.e0;
        tensor[3] rgb1769#1 = <tensor[3]>[_t1767,_t1767,_t1767];
        tensor[4] rgba176B#1 = <tensor[4]>[_t1767,_t1767,_t1767,_t1767];
        self.rayU = rayU1717;
        self.rayV = rayV172B;
        self.rayN = camNear1701;
        self.rayVec = rayVec173B;
        self.transp = transp1765;
        self.rgb = rgb1769;
        self.rgba = rgba176B;
        self.gray = _t1767;
        self.ui = ui16F0;
        self.vi = vi16F1;
        return
    end state init
    method update
        ENTRY1778:  preds = []
          image(IMAGE1D<double[3]>) I1CC5#5 = globals.I1CC4;
          real isoval1779#1 = globals.isoval15DC;
          femData:Mesh _t177B#9 = globals._t15F5;
          femData:Space _t177D#3 = globals._tX15F6;
          femData:FemFunc c177F#3 = globals.c15F7;
          image(IMAGE1D<double[3]>) img1781#1 = globals.img15F8;
          kernel _t1783#1 = globals._tXX15F9;
          femData:Mesh a1785#1 = globals.a15D9;
          real thick1787#1 = globals.thick15DD;
          tensor[3] camEye1789#1 = globals.camEye15DE;
          real camNear178B#2 = globals.camNear15E4;
          real camFar178D#2 = globals.camFar15E5;
          real refStep178F#1 = globals.refStep15E6;
          real rayStep1791#2 = globals.rayStep15E7;
          real phongKa1793#1 = globals.phongKa15E9;
          real phongKd1795#1 = globals.phongKd15EA;
          bool debug1797#1 = globals.debug15EB;
          int su1799#1 = globals.su15EC;
          int sv179B#1 = globals.sv15ED;
          tensor[3] light179D#1 = globals.light15F4;
          real rayN179F#4 = self.rayN;
          tensor[3] rayVec17A1#2 = self.rayVec;
          real transp17A3#10 = self.transp;
          tensor[3] rgb17A5#9 = self.rgb;
          int ui17A7#1 = self.ui;
          int vi17A9#1 = self.vi;
          if debug1797 then goto ASSIGN17AD else goto JOIN17B7
        ASSIGN17AD:  preds = [COND17AB]
          bool _t17AC#1 = NEQ<int>(ui17A7,su1799);
          if _t17AC then goto ASSIGN17B0 else goto ASSIGN1C6C
        ASSIGN17B0:  preds = [COND17AE]
          bool _t17AF#1 = true;
          goto JOIN17B3
        JOIN17B3:  preds = [ASSIGN17B0,ASSIGN1C6C]
          bool _t17B1#1 = phi(_t17AF,_t17B2)
          if _t17B1 then goto STABILIZE17B5 else goto JOIN17B6
        STABILIZE17B5:  preds = [COND17B4]
          stabilize
          goto JOIN17B6
        JOIN17B6:  preds = [*STABILIZE17B5,COND17B4]
          goto JOIN17B7
        JOIN17B7:  preds = [JOIN17B6,COND17AB]
          tensor[3] op1_e3_l_317B9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (rayN179F,rayVec17A1);
          tensor[3] x17B8#12 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (camEye1789,op1_e3_l_317B9);
          real _t17BC#8 = 0.e0;
          real _t17BE#2 = TensorIndex<tensor[3],[0]>(x17B8);
          bool _t17C0#1 = LT<real>(_t17BC,_t17BE);
          if _t17C0 then goto ASSIGN17C4 else goto JOIN1C4E
        ASSIGN17C4:  preds = [COND17C2]
          real _t17C3#11 = 0.1e1;
          bool _t17C5#1 = LT<real>(_t17BE,_t17C3);
          if _t17C5 then goto ASSIGN17C9 else goto JOIN1C4B
        ASSIGN17C9:  preds = [COND17C7]
          real _t17C8#2 = TensorIndex<tensor[3],[1]>(x17B8);
          bool _t17CA#1 = LT<real>(_t17BC,_t17C8);
          if _t17CA then goto ASSIGN17CE else goto JOIN1C48
        ASSIGN17CE:  preds = [COND17CC]
          bool _t17CD#1 = LT<real>(_t17C8,_t17C3);
          if _t17CD then goto ASSIGN17D1 else goto JOIN1C45
        ASSIGN17D1:  preds = [COND17CF]
          real _t17D0#2 = TensorIndex<tensor[3],[2]>(x17B8);
          bool _t17D2#1 = LT<real>(_t17BC,_t17D0);
          if _t17D2 then goto ASSIGN17D6 else goto JOIN1C42
        ASSIGN17D6:  preds = [COND17D4]
          bool _t17D5#1 = LT<real>(_t17D0,_t17C3);
          if _t17D5 then goto ASSIGN1A43 else goto JOIN1C3F
        ASSIGN1A43:  preds = [COND17D7]
          femData:MeshPos p1A42#1 = findPos17D8 (a1785,x17B8);
          bool _t1A44#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1A42);
          if _t1A44 then goto ASSIGN1A48 else goto ASSIGN1C67
        ASSIGN1A48:  preds = [COND1A46]
          real _t1A47#1 = 0.13e1;
          femData:MeshPos callFindPos1A69#2 = findPos17D8 (_t177B,x17B8);
          int intPos1A6A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos1A69);
          tensor[3] refPos1A6B#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos1A69);
          int[10] femIndicies1A70#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t177D,intPos1A6A);
          tensor[10] femDofs1A71#2 = ExtractFemItem2<int[10],tensor[10],ExtractDofsSeq(FemFunc)>(c177F,femIndicies1A70);
          tensor[10] basisResult1A72#1 = EvaluateBasis<BasisArray(10)>(refPos1A6B);
          real compositionl1A4B#2 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[10],T6[3])<Σ(i0=0..9)<((T4_{i0} * T5_{i0}))>(i0=0..9)> (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A72,refPos1A6B);
          real op1_e3_l_231A4C#1 = λ(T0[],T1[])<(T1) - (T0)> (isoval1779,compositionl1A4B);
          tensor[3,10] basisResult1A79#1 = EvaluateBasis<BasisArray(3,10)>(refPos1A6B);
          tensor[3] compositionl1A4E#1 = λ(FEM(msh)0,FEM(fns)1,FEM(FUNC)2,T3[3],T4[10],T5[3 10],T6[3])<Σ(i2=0..9)<((T4_{i2} * T5_{i0,i2}))>(i2=0..9)>_{3} (_t177B,_t177D,c177F,x17B8,femDofs1A71,basisResult1A79,refPos1A6B);
          int[4] femIndicies1A7B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t177B,intPos1A6A);
          tensor[4,3] femDofs1A7C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t177B,femIndicies1A7B);
          tensor[3,4] basisResult1A7D#4 = EvaluateBasis<BasisArray(3,4)>(refPos1A6B);
          tensor[3,3] probe_l_251A4F#2 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i3=0..3)<((T2_{i3,i0} * T3_{i1,i3}))>(i3=0..3)>_{3 3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3,3] op1_e3_l_271A50#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F);
          tensor[3,3,3] op1_e3_l_281A51#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_251A4F,op1_e3_l_271A50);
          tensor[3] probe_l_291A52#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'0',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_301A53#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'1',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3] probe_l_311A54#1 = λ(FEM(msh)0,T1[3],T2[4 3],T3[3 4],T4[3])<Σ(i2=0..3)<((T2_{i2,i0} * T3_{'2',i2}))>(i2=0..3)>_{3} (_t177B,x17B8,femDofs1A7C,basisResult1A7D,refPos1A6B);
          tensor[3,3] op1_e3_l_321A55#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_311A54);
          tensor[3] op1_e3_l_331A56#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_301A53,op1_e3_l_321A55);
          real op1_e3_l_341A57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_291A52,op1_e3_l_331A56);
          tensor[3,3] op1_e3_l_351A58#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_281A51);
          real op1_e3_l_361A59#1 = λ(T0[])<(2 * T0)> (op1_e3_l_341A57);
          tensor[3,3] op1_e3_l_371A5A#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_351A58,op1_e3_l_361A59);
          tensor[3] op1_e3_l_381A5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i1,i0}))>(i1=0..2)>_{3} (compositionl1A4E,op1_e3_l_371A5A);
          tensor[3] op1_e3_l_541A5F#3 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_381A5B);
          real op1_e3_l_561A61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541A5F,op1_e3_l_541A5F);
          real op1_e3_l_571A62#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_561A61);
          real op1_e3_l_581A63#1 = λ(T0[])<Abs(T0)> (op1_e3_l_231A4C);
          real op1_e3_l_591A64#1 = λ(T0[],T1[])<(T0 * T1)> (thick1787,op1_e3_l_571A62);
          real op1_e3_l_601A65#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_581A63,op1_e3_l_591A64);
          real op1_e3_l_611A66#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_601A65);
          real op1_e3_l_621A67#2 = λ(T0[],T1[])<(T0 * T1)> (_t1A47,op1_e3_l_611A66);
          real op1_e3_l_631A68#1 = λ(T0[],T1[],T2[])<Clamp <T0,T1,T2>> (_t17BC,_t17C3,op1_e3_l_621A67);
          real a1A49#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_631A68);
          bool _t1ACD#1 = GT<real>(a1A49,_t17BC);
          if _t1ACD then goto ASSIGN1CF5 else goto JOIN1C36
        ASSIGN1CF5:  preds = [COND1ACF]
          real op1_e3_l_641AEF#1 = λ(T0[],T1[],T2[])<Clamp <T1,T0,T2>> (_t17C3,_t17BC,op1_e3_l_621A67);
          real op1_e3_l_651AF0#1 = λ(T0[],T1[])<(T0 * T1)> (_t17C3,op1_e3_l_641AEF);
          real _t1AD0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_651AF0);
          real op1_e3_l_31B57#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (rayVec17A1);
          real op1_e3_l_41B58#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_31B57);
          real op1_e3_l_51B59#1 = λ(T0[],T1[])<(T0 * T1)> (rayStep1791,op1_e3_l_41B58);
          real _t1B56#1 = λ(T0[],T1[])<(T1) / ( T0)> (refStep178F,op1_e3_l_51B59);
          real _t1B5E#1 = MathFn<pow>(_t1AD0,_t1B56);
          real _t1B60#2 = 0.11e1;
          real _t1B62#1 = 0.7e0;
          real op1_e3_l_671B7F#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_571A62);
          real op1_e3_l_681B80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T1_{i0} * T0_{i0}))>(i0=0..2)> (light179D,op1_e3_l_541A5F);
          real _t1B64#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_671B7F,op1_e3_l_681B80);
          real shade1BE2#1 = Max<real>(_t17BC,_t1B64);
          real _t1BE4#2 = λ(T0[])<T0> (compositionl1A4B);
          real op1_e3_l_151BFF#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,rayN179F);
          real op1_e3_l_161C00#1 = λ(T0[],T1[])<(T1) - (T0)> (camNear178B,camFar178D);
          real op1_e3_l_171C01#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_151BFF,op1_e3_l_161C00);
          real op1_e3_l_181C02#1 = λ(T0[],T1[])<(T1) - (T0)> (_t1B60,_t1B62);
          real op1_e3_l_191C03#1 = λ(T0[],T1[])<(T0 * T1)> (op1_e3_l_171C01,op1_e3_l_181C02);
          real op1_e3_l_201C04#1 = λ(T0[],T1[])<(T0 * T1)> (phongKd1795,shade1BE2);
          real Mtransform1C0A#2 = Transform<IMAGE1D<double[3]>>(I1CC5);
          real MxPos1C0B#1 = λ(T0[],T1[])<(T0 * T1)> (Mtransform1C0A,_t1BE4);
          real Ttranslate1C0C#1 = Translate<IMAGE1D<double[3]>>(I1CC5);
          real imgPos1C0D#2 = λ(T0[],T1[])<(T0 + T1)> (MxPos1C0B,Ttranslate1C0C);
          real nd1C0E#2 = Floor<1>(imgPos1C0D);
          real f1C0F#1 = λ(T0[],T1[])<(T0) - (T1)> (imgPos1C0D,nd1C0E);
          int n1C10#1 = RealToInt<1>(nd1C0E);
          int idx1C12#3 = n1C10;
          bool isInside1D00#1 = IndexInside<IMAGE1D<double[3]>,2>(idx1C12,I1CC5);
          if isInside1D00 then goto ASSIGN1D01 else goto ASSIGN1D02
        ASSIGN1D01:  preds = [COND1D04]
          tensor[3,2] ldvox1CFE#1 = LoadVoxels<IMAGE1D<double[3]>,2>(I1CC5,idx1C12);
          goto JOIN1D05
        JOIN1D05:  preds = [ASSIGN1D01,ASSIGN1D02]
          tensor[3,2] ldvox1C13#1 = phi(ldvox1CFE,ldvox1CFF)
          tensor[2] kernX_1C14#1 = BuildPos<1>(f1C0F);
          tensor[2] kevalX_d0_1C15#1 = EvalKernel<2,tent,0>(kernX_1C14);
          tensor[3] probe_l_211C05#1 = λ(V0(1)[3],H1,T2[1],T3[1 1],V4(1)[3],H5)<Σ(i1=0..1)<((V4_{i0}(1)[i1]# * H5(1)))>(i1=0..1)>_{3} (img1781,_t1783,_t1BE4,Mtransform1C0A,ldvox1C13,kevalX_d0_1C15);
          real op1_e3_l_221C06#2 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,_t1B5E);
          real op1_e3_l_231C07#1 = λ(T0[],T1[])<(T0 + T1)> (_t1B60,op1_e3_l_191C03);
          real op1_e3_l_241C08#1 = λ(T0[],T1[])<(T0 + T1)> (phongKa1793,op1_e3_l_201C04);
          tensor[3] op1_e3_l_251C09#1 = λ(T0[],T1[3],T2[],T3[],T4[])<(T0 * T2 * T3 * T4 * T1_{i0})>_{3} (transp17A3,probe_l_211C05,op1_e3_l_221C06,op1_e3_l_231C07,op1_e3_l_241C08);
          tensor[3] rgb1BFE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (rgb17A5,op1_e3_l_251C09);
          real op1_e3_l_51C30#1 = λ(T0[],T1[])<(T0) - (T1)> (_t17C3,op1_e3_l_221C06);
          real transp1C2E#1 = λ(T0[],T1[])<(T0 * T1)> (transp17A3,op1_e3_l_51C30);
          goto JOIN1C36
        JOIN1C36:  preds = [ASSIGN1C33,COND1ACF]
          tensor[3] rgb1C34#1 = phi(rgb1BFE,rgb17A5)
          real transp1C35#1 = phi(transp1C2E,transp17A3)
          string _t1C37#1 = "yay!\n";
          Print<[string]>(_t1C37);
          goto JOIN1C3C
        JOIN1C3C:  preds = [MASSIGN1C39,MASSIGN1C6B]
          tensor[3] rgb1C3A#1 = phi(rgb1C34,rgb17A5)
          real transp1C3B#1 = phi(transp1C35,transp17A3)
          goto JOIN1C3F
        JOIN1C3F:  preds = [JOIN1C3C,COND17D7]
          tensor[3] rgb1C3D#1 = phi(rgb1C3A,rgb17A5)
          real transp1C3E#1 = phi(transp1C3B,transp17A3)
          goto JOIN1C42
        JOIN1C42:  preds = [JOIN1C3F,COND17D4]
          tensor[3] rgb1C40#1 = phi(rgb1C3D,rgb17A5)
          real transp1C41#1 = phi(transp1C3E,transp17A3)
          goto JOIN1C45
        JOIN1C45:  preds = [JOIN1C42,COND17CF]
          tensor[3] rgb1C43#1 = phi(rgb1C40,rgb17A5)
          real transp1C44#1 = phi(transp1C41,transp17A3)
          goto JOIN1C48
        JOIN1C48:  preds = [JOIN1C45,COND17CC]
          tensor[3] rgb1C46#1 = phi(rgb1C43,rgb17A5)
          real transp1C47#1 = phi(transp1C44,transp17A3)
          goto JOIN1C4B
        JOIN1C4B:  preds = [JOIN1C48,COND17C7]
          tensor[3] rgb1C49#1 = phi(rgb1C46,rgb17A5)
          real transp1C4A#1 = phi(transp1C47,transp17A3)
          goto JOIN1C4E
        JOIN1C4E:  preds = [JOIN1C4B,COND17C2]
          tensor[3] rgb1C4C#3 = phi(rgb1C49,rgb17A5)
          real transp1C4D#2 = phi(transp1C4A,transp17A3)
          real _t1C4F#1 = 0.1e-1;
          bool _t1C51#1 = LT<real>(transp1C4D,_t1C4F);
          if _t1C51 then goto SAVE1C54 else goto JOIN1C58
        SAVE1C54:  preds = [COND1C53]
          self.transp = _t17BC;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C58
        JOIN1C58:  preds = [*STABILIZE1C56,COND1C53]
          real transp1C57#2 = phi(transp1C4D)
          bool _t1C59#1 = GT<real>(rayN179F,camFar178D);
          if _t1C59 then goto SAVE1C5C else goto JOIN1C5F
        SAVE1C5C:  preds = [COND1C5B]
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          stabilize
          goto JOIN1C5F
        JOIN1C5F:  preds = [*STABILIZE1C5E,COND1C5B]
          real rayN1C60#1 = λ(T0[],T1[])<(T0 + T1)> (rayN179F,rayStep1791);
          self.rayN = rayN1C60;
          self.transp = transp1C57;
          self.rgb = rgb1C4C;
          active
        ASSIGN1D02:  preds = [COND1D04]
          tensor[3,2] ldvox1CFF#1 = LoadVoxelsWithCtl<IMAGE1D<double[3]>,2,clamp>(I1CC5,idx1C12);
          goto JOIN1D05
        ASSIGN1C67:  preds = [COND1A46]
          string _t1C66#1 = "\n";
          Print<[tensor[3],string]>(x17B8,_t1C66);
          string _t1C69#1 = "wait what\?\n";
          Print<[string]>(_t1C69);
          goto JOIN1C3C
        ASSIGN1C6C:  preds = [COND17AE]
          bool _t17B2#1 = NEQ<int>(vi17A9,sv179B);
          goto JOIN17B3
    end update
    method stabilize
        ENTRY1C6D:  preds = []
          bool debug1C6E#1 = globals.debug15EB;
          int su1C70#1 = globals.su15EC;
          int sv1C72#1 = globals.sv15ED;
          real transp1C74#1 = self.transp;
          tensor[3] rgb1C76#3 = self.rgb;
          tensor[4] rgba1C78#1 = self.rgba;
          int ui1C7A#1 = self.ui;
          int vi1C7C#1 = self.vi;
          real _t1C7E#1 = 0.1e1;
          real a1C80#6 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7E,transp1C74);
          real _t1C82#1 = 0.e0;
          bool _t1C84#1 = GT<real>(a1C80,_t1C82);
          if _t1C84 then goto ASSIGN1C88 else goto JOIN1C9C
        ASSIGN1C88:  preds = [COND1C86]
          real _t1C87#1 = TensorIndex<tensor[3],[0]>(rgb1C76);
          real _t1C89#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C87,a1C80);
          real _t1C8D#1 = TensorIndex<tensor[3],[1]>(rgb1C76);
          real _t1C8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C8D,a1C80);
          real _t1C93#1 = TensorIndex<tensor[3],[2]>(rgb1C76);
          real _t1C95#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C93,a1C80);
          tensor[4] rgba1C99#1 = <tensor[4]>[_t1C89,_t1C8F,_t1C95,a1C80];
          goto JOIN1C9C
        JOIN1C9C:  preds = [ASSIGN1C9A,COND1C86]
          tensor[4] rgba1C9B#2 = phi(rgba1C99,rgba1C78)
          bool _t1C9D#1 = EQ<int>(ui1C7A,su1C70);
          if _t1C9D then goto ASSIGN1CA1 else goto JOIN1CA7
        ASSIGN1CA1:  preds = [COND1C9F]
          bool _t1CA0#1 = EQ<int>(vi1C7C,sv1C72);
          if _t1CA0 then goto COND1CA3 else goto JOIN1CA6
        COND1CA3:  preds = [COND1CA2]
          if debug1C6E then goto MASSIGN1CA4 else goto JOIN1CA5
        MASSIGN1CA4:  preds = [COND1CA3]
          Print<[real,tensor[4]]>(a1C80,rgba1C9B);
          goto JOIN1CA5
        JOIN1CA5:  preds = [MASSIGN1CA4,COND1CA3]
          goto JOIN1CA6
        JOIN1CA6:  preds = [JOIN1CA5,COND1CA2]
          goto JOIN1CA7
        JOIN1CA7:  preds = [JOIN1CA6,COND1C9F]
          self.rgba = rgba1C9B;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY1CAA:  preds = []
      int iresU1CAB#1 = globals.iresU15E2;
      int iresV1CAD#1 = globals.iresV15E3;
      int _t1CAF#2 = 0;
      int _t1CB1#2 = 1;
      int _t1CB3#1 = ISub(iresV1CAD,_t1CB1);
      int[] _t1CB5#1 = Range(_t1CAF,_t1CB3);
    FOREACH1CB8:  preds = [ASSIGN1CB6,NEXT1CC1]
      foreach (vi1CB7 in _t1CB5) on exit goto RETURN1CC2
      int _t1CB9#1 = ISub(iresU1CAB,_t1CB1);
      int[] _t1CBB#1 = Range(_t1CAF,_t1CB9);
    FOREACH1CBE:  preds = [ASSIGN1CBC,NEXT1CC0]
      foreach (ui1CBD in _t1CBB) on exit goto NEXT1CC1
      new raycast(ui1CBD,vi1CB7);
      goto FOREACH1CBE
    NEXT1CC1:  preds = [FOREACH1CBE]
      goto FOREACH1CB8
    RETURN1CC2:  preds = [FOREACH1CB8]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1D06 (a) = <no-default>
  input 0b043B_intermedateGlobal1D07 (b) = <no-default>
  input 0c043D_intermedateGlobal1D08 (c) = <no-default>
  input isoval1D09 (isoval) = <default>
  input thick1D0A (thick) = <default>
  input camEye1D0B (camEye) = <default>
  input camAt1D0C (camAt) = <default>
  input camUp1D0D (camUp) = <default>
  input camFOV1D0E (camFOV) = <default>
  input iresU1D0F (iresU) = <default>
  input iresV1D10 (iresV) = <default>
  input camNear1D11 (camNear) = <default>
  input camFar1D12 (camFar) = <default>
  input refStep1D13 (refStep) = <default>
  input rayStep1D14 (rayStep) = <default>
  input lightVsp1D15 (lightVsp) = <default>
  input phongKa1D16 (phongKa) = <default>
  input phongKd1D17 (phongKd) = <default>
  input debug1D18 (debug) = <default>
  input su1D19 (su) = <default>
  input sv1D1A (sv) = <default>
  global real camDist1D1B
  global tensor[3] camN1D1C
  global tensor[3] camU1D1D
  global tensor[3] camV1D1E
  global real camVmax1D1F
  global real camUmax1D20
  global tensor[3] light1D21
  global femData:Mesh _t1D22
  global femData:Space _tX1D23
  global femData:FemFunc c1D24
  global image(IMAGE1D<double[3]>) img1D25
  global int _tXX1D26
  global image(IMAGE1D<double[3]>) I1D27
## functions
  function femData:MeshPos findPos1FE4 (femData:Mesh mesh1FE5#39, tensor[3] pos1FE6#7) {
    ENTRY1FE7:  preds = []
      real _t1FE8#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1FEA#7 = <tensor[3]>[_t1FE8,_t1FE8,_t1FE8];
      int newtonInt1FEC#4 = 0;
      int cellInt1FEE#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1FE5);
      int _t1FF0#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1FE5);
      int _t1FF2#4 = 1;
      int numCell1FF4#2 = ISub(_t1FF0,_t1FF2);
      int[] yayCells1FF6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1FE5,pos1FE6);
    FOREACH1FF9:  preds = [ASSIGN1FF7,NEXT272E]
      foreach (cellItter1FF8 in yayCells1FF6) on exit goto ASSIGN2730
        tensor[3] xn272D#2 = phi(xn1FEA,xn25CE)
      int _t1FFA#1 = 2;
      int[] _t1FFC#1 = Range(newtonInt1FEC,_t1FFA);
    FOREACH1FFF:  preds = [ASSIGN1FFD,NEXT272C]
      foreach (newtonItter1FFE in _t1FFC) on exit goto NEXT272E
        tensor[3] xn25CE#5 = phi(xn272D,xn2692)
      int ilit2001#1 = 4;
      int mulRes2002#4 = IMul(cellItter1FF8,ilit2001);
      int ilit2003#1 = 0;
      int addRes2004#1 = IAdd(mulRes2002,ilit2003);
      int idx2005#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2004);
      int ilit2006#1 = 1;
      int addRes2007#1 = IAdd(mulRes2002,ilit2006);
      int idx2008#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2007);
      int ilit2009#1 = 2;
      int addRes200A#1 = IAdd(mulRes2002,ilit2009);
      int idx200B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200A);
      int ilit200C#1 = 3;
      int addRes200D#1 = IAdd(mulRes2002,ilit200C);
      int idx200E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200D);
      int[4] seq200F#1 = <int[4]>{idx2005,idx2008,idx200B,idx200E};
      int[4] femIndicies2000#4 = seq200F;
      int ilit2021#5 = 0;
      int ilit2022#5 = 3;
      int idx2023#1 = Subscript<int>(femIndicies2000,ilit2021);
      int mulRes2024#3 = IMul(ilit2022,idx2023);
      int addRes2025#1 = IAdd(ilit2021,mulRes2024);
      int ilit2026#5 = 1;
      int addRes2027#1 = IAdd(ilit2026,mulRes2024);
      int ilit2028#5 = 2;
      int addRes2029#1 = IAdd(ilit2028,mulRes2024);
      real dof_load202A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2025);
      real dof_load202B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2027);
      real dof_load202C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2029);
      tensor[3] interCons202D#1 = <tensor[3]>[dof_load202A,dof_load202B,dof_load202C];
      int idx202E#1 = Subscript<int>(femIndicies2000,ilit2026);
      int mulRes202F#3 = IMul(ilit2022,idx202E);
      int addRes2030#1 = IAdd(ilit2021,mulRes202F);
      int addRes2031#1 = IAdd(ilit2026,mulRes202F);
      int addRes2032#1 = IAdd(ilit2028,mulRes202F);
      real dof_load2033#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2030);
      real dof_load2034#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2031);
      real dof_load2035#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2032);
      tensor[3] interCons2036#1 = <tensor[3]>[dof_load2033,dof_load2034,dof_load2035];
      int idx2037#1 = Subscript<int>(femIndicies2000,ilit2028);
      int mulRes2038#3 = IMul(ilit2022,idx2037);
      int addRes2039#1 = IAdd(ilit2021,mulRes2038);
      int addRes203A#1 = IAdd(ilit2026,mulRes2038);
      int addRes203B#1 = IAdd(ilit2028,mulRes2038);
      real dof_load203C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2039);
      real dof_load203D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203A);
      real dof_load203E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203B);
      tensor[3] interCons203F#1 = <tensor[3]>[dof_load203C,dof_load203D,dof_load203E];
      int idx2040#1 = Subscript<int>(femIndicies2000,ilit2022);
      int mulRes2041#3 = IMul(ilit2022,idx2040);
      int addRes2042#1 = IAdd(ilit2021,mulRes2041);
      int addRes2043#1 = IAdd(ilit2026,mulRes2041);
      int addRes2044#1 = IAdd(ilit2028,mulRes2041);
      real dof_load2045#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2042);
      real dof_load2046#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2043);
      real dof_load2047#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2044);
      tensor[3] interCons2048#1 = <tensor[3]>[dof_load2045,dof_load2046,dof_load2047];
      tensor[4,3] dofs2049#1 = <tensor[4,3]>[interCons202D,interCons2036,interCons203F,interCons2048];
      tensor[4,3] femDofs2020#72 = dofs2049;
      real varAcc2075#0 = VIndex<3,0>(xn1FEA);
      real varAcc2076#0 = VIndex<3,1>(xn1FEA);
      real varAcc2077#0 = VIndex<3,2>(xn1FEA);
      real coeff2078#1 = -0.1e1;
      real one2079#4 = 0.1e1;
      real prod207A#1 = RMul(one2079,one2079);
      real prod207B#2 = RMul(one2079,prod207A);
      real basisEval207C#3 = RMul(coeff2078,prod207B);
      real basisEval207D#3 = RMul(one2079,prod207B);
      real basisEval207E#6 = 0.e0;
      tensor[4] intermediateCons207F#1 = <tensor[4]>[basisEval207C,basisEval207D,basisEval207E,basisEval207E];
      tensor[4] intermediateCons2080#1 = <tensor[4]>[basisEval207C,basisEval207E,basisEval207D,basisEval207E];
      tensor[4] intermediateCons2081#1 = <tensor[4]>[basisEval207C,basisEval207E,basisEval207E,basisEval207D];
      tensor[3,4] intermediateCons2082#1 = <tensor[3,4]>[intermediateCons207F,intermediateCons2080,intermediateCons2081];
      tensor[3,4] basisResult2074#24 = intermediateCons2082;
      real r2093#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r2094#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult2074);
      real r2095#1 = RMul(r2093,r2094);
      real r2096#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r2097#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult2074);
      real r2098#1 = RMul(r2096,r2097);
      real r2099#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r209A#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult2074);
      real r209B#1 = RMul(r2099,r209A);
      real r209C#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r209D#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult2074);
      real r209E#1 = RMul(r209C,r209D);
      real r209F#1 = RAdd(r2095,r2098);
      real r20A0#1 = RAdd(r209F,r209B);
      real r20A1#1 = RAdd(r20A0,r209E);
      real r20A2#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult2074);
      real r20A3#1 = RMul(r2093,r20A2);
      real r20A4#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult2074);
      real r20A5#1 = RMul(r2096,r20A4);
      real r20A6#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult2074);
      real r20A7#1 = RMul(r2099,r20A6);
      real r20A8#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult2074);
      real r20A9#1 = RMul(r209C,r20A8);
      real r20AA#1 = RAdd(r20A3,r20A5);
      real r20AB#1 = RAdd(r20AA,r20A7);
      real r20AC#1 = RAdd(r20AB,r20A9);
      real r20AD#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult2074);
      real r20AE#1 = RMul(r2093,r20AD);
      real r20AF#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult2074);
      real r20B0#1 = RMul(r2096,r20AF);
      real r20B1#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult2074);
      real r20B2#1 = RMul(r2099,r20B1);
      real r20B3#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult2074);
      real r20B4#1 = RMul(r209C,r20B3);
      real r20B5#1 = RAdd(r20AE,r20B0);
      real r20B6#1 = RAdd(r20B5,r20B2);
      real r20B7#1 = RAdd(r20B6,r20B4);
      tensor[3] tensor20B8#1 = <tensor[3]>[r20A1,r20AC,r20B7];
      real r20B9#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r20BA#1 = RMul(r20B9,r2094);
      real r20BB#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r20BC#1 = RMul(r20BB,r2097);
      real r20BD#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r20BE#1 = RMul(r20BD,r209A);
      real r20BF#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r20C0#1 = RMul(r20BF,r209D);
      real r20C1#1 = RAdd(r20BA,r20BC);
      real r20C2#1 = RAdd(r20C1,r20BE);
      real r20C3#1 = RAdd(r20C2,r20C0);
      real r20C4#1 = RMul(r20B9,r20A2);
      real r20C5#1 = RMul(r20BB,r20A4);
      real r20C6#1 = RMul(r20BD,r20A6);
      real r20C7#1 = RMul(r20BF,r20A8);
      real r20C8#1 = RAdd(r20C4,r20C5);
      real r20C9#1 = RAdd(r20C8,r20C6);
      real r20CA#1 = RAdd(r20C9,r20C7);
      real r20CB#1 = RMul(r20B9,r20AD);
      real r20CC#1 = RMul(r20BB,r20AF);
      real r20CD#1 = RMul(r20BD,r20B1);
      real r20CE#1 = RMul(r20BF,r20B3);
      real r20CF#1 = RAdd(r20CB,r20CC);
      real r20D0#1 = RAdd(r20CF,r20CD);
      real r20D1#1 = RAdd(r20D0,r20CE);
      tensor[3] tensor20D2#1 = <tensor[3]>[r20C3,r20CA,r20D1];
      real r20D3#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r20D4#1 = RMul(r20D3,r2094);
      real r20D5#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r20D6#1 = RMul(r20D5,r2097);
      real r20D7#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r20D8#1 = RMul(r20D7,r209A);
      real r20D9#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r20DA#1 = RMul(r20D9,r209D);
      real r20DB#1 = RAdd(r20D4,r20D6);
      real r20DC#1 = RAdd(r20DB,r20D8);
      real r20DD#1 = RAdd(r20DC,r20DA);
      real r20DE#1 = RMul(r20D3,r20A2);
      real r20DF#1 = RMul(r20D5,r20A4);
      real r20E0#1 = RMul(r20D7,r20A6);
      real r20E1#1 = RMul(r20D9,r20A8);
      real r20E2#1 = RAdd(r20DE,r20DF);
      real r20E3#1 = RAdd(r20E2,r20E0);
      real r20E4#1 = RAdd(r20E3,r20E1);
      real r20E5#1 = RMul(r20D3,r20AD);
      real r20E6#1 = RMul(r20D5,r20AF);
      real r20E7#1 = RMul(r20D7,r20B1);
      real r20E8#1 = RMul(r20D9,r20B3);
      real r20E9#1 = RAdd(r20E5,r20E6);
      real r20EA#1 = RAdd(r20E9,r20E7);
      real r20EB#1 = RAdd(r20EA,r20E8);
      tensor[3] tensor20EC#1 = <tensor[3]>[r20DD,r20E4,r20EB];
      tensor[3,3] probe_l_102092#18 = <tensor[3,3]>[tensor20B8,tensor20D2,tensor20EC];
      real realLit214A#9 = 0.e0;
      real r214B#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_102092);
      real r214C#3 = RMul(realLit214A,r214B);
      real r214D#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_102092);
      real r214E#3 = RMul(realLit214A,r214D);
      real r214F#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_102092);
      real r2150#5 = RMul(realLit214A,r214F);
      real r2151#3 = RAdd(r214C,r214E);
      real r2152#1 = RAdd(r2151,r2150);
      real r2153#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_102092);
      real r2154#3 = RMul(realLit214A,r2153);
      real r2155#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_102092);
      real r2156#3 = RMul(realLit214A,r2155);
      real r2157#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_102092);
      real r2158#5 = RMul(realLit214A,r2157);
      real r2159#3 = RAdd(r2154,r2156);
      real r215A#1 = RAdd(r2159,r2158);
      real r215B#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_102092);
      real r215C#3 = RMul(realLit214A,r215B);
      real r215D#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_102092);
      real r215E#3 = RMul(realLit214A,r215D);
      real r215F#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_102092);
      real r2160#5 = RMul(realLit214A,r215F);
      real r2161#3 = RAdd(r215C,r215E);
      real r2162#1 = RAdd(r2161,r2160);
      tensor[3] tensor2163#3 = <tensor[3]>[r2152,r215A,r2162];
      real realLit2164#9 = -0.1e1;
      real r2165#1 = RMul(realLit2164,r214F);
      real r2166#1 = RAdd(r2151,r2165);
      real r2167#1 = RMul(realLit2164,r2157);
      real r2168#1 = RAdd(r2159,r2167);
      real r2169#1 = RMul(realLit2164,r215F);
      real r216A#1 = RAdd(r2161,r2169);
      tensor[3] tensor216B#1 = <tensor[3]>[r2166,r2168,r216A];
      real realLit216C#9 = 0.1e1;
      real r216D#1 = RMul(realLit216C,r214D);
      real r216E#1 = RAdd(r214C,r216D);
      real r216F#1 = RAdd(r216E,r2150);
      real r2170#1 = RMul(realLit216C,r2155);
      real r2171#1 = RAdd(r2154,r2170);
      real r2172#1 = RAdd(r2171,r2158);
      real r2173#1 = RMul(realLit216C,r215D);
      real r2174#1 = RAdd(r215C,r2173);
      real r2175#1 = RAdd(r2174,r2160);
      tensor[3] tensor2176#1 = <tensor[3]>[r216F,r2172,r2175];
      tensor[3,3] tensor2177#1 = <tensor[3,3]>[tensor2163,tensor216B,tensor2176];
      real r2178#1 = RMul(realLit216C,r214F);
      real r2179#1 = RAdd(r2151,r2178);
      real r217A#1 = RMul(realLit216C,r2157);
      real r217B#1 = RAdd(r2159,r217A);
      real r217C#1 = RMul(realLit216C,r215F);
      real r217D#1 = RAdd(r2161,r217C);
      tensor[3] tensor217E#1 = <tensor[3]>[r2179,r217B,r217D];
      real r217F#1 = RMul(realLit2164,r214B);
      real r2180#1 = RAdd(r217F,r214E);
      real r2181#1 = RAdd(r2180,r2150);
      real r2182#1 = RMul(realLit2164,r2153);
      real r2183#1 = RAdd(r2182,r2156);
      real r2184#1 = RAdd(r2183,r2158);
      real r2185#1 = RMul(realLit2164,r215B);
      real r2186#1 = RAdd(r2185,r215E);
      real r2187#1 = RAdd(r2186,r2160);
      tensor[3] tensor2188#1 = <tensor[3]>[r2181,r2184,r2187];
      tensor[3,3] tensor2189#1 = <tensor[3,3]>[tensor217E,tensor2163,tensor2188];
      real r218A#1 = RMul(realLit2164,r214D);
      real r218B#1 = RAdd(r214C,r218A);
      real r218C#1 = RAdd(r218B,r2150);
      real r218D#1 = RMul(realLit2164,r2155);
      real r218E#1 = RAdd(r2154,r218D);
      real r218F#1 = RAdd(r218E,r2158);
      real r2190#1 = RMul(realLit2164,r215D);
      real r2191#1 = RAdd(r215C,r2190);
      real r2192#1 = RAdd(r2191,r2160);
      tensor[3] tensor2193#1 = <tensor[3]>[r218C,r218F,r2192];
      real r2194#1 = RMul(realLit216C,r214B);
      real r2195#1 = RAdd(r2194,r214E);
      real r2196#1 = RAdd(r2195,r2150);
      real r2197#1 = RMul(realLit216C,r2153);
      real r2198#1 = RAdd(r2197,r2156);
      real r2199#1 = RAdd(r2198,r2158);
      real r219A#1 = RMul(realLit216C,r215B);
      real r219B#1 = RAdd(r219A,r215E);
      real r219C#1 = RAdd(r219B,r2160);
      tensor[3] tensor219D#1 = <tensor[3]>[r2196,r2199,r219C];
      tensor[3,3] tensor219E#1 = <tensor[3,3]>[tensor2193,tensor219D,tensor2163];
      tensor[3,3,3] op1_e3_l_122149#27 = <tensor[3,3,3]>[tensor2177,tensor2189,tensor219E];
      real r21F7#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_102092);
      real r21F8#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_122149);
      real r21F9#1 = RMul(r21F7,r21F8);
      real r21FA#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_102092);
      real r21FB#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_122149);
      real r21FC#1 = RMul(r21FA,r21FB);
      real r21FD#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_102092);
      real r21FE#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_122149);
      real r21FF#1 = RMul(r21FD,r21FE);
      real r2200#1 = RAdd(r21F9,r21FC);
      real r2201#1 = RAdd(r2200,r21FF);
      real r2202#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_122149);
      real r2203#1 = RMul(r21F7,r2202);
      real r2204#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_122149);
      real r2205#1 = RMul(r21FA,r2204);
      real r2206#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_122149);
      real r2207#1 = RMul(r21FD,r2206);
      real r2208#1 = RAdd(r2203,r2205);
      real r2209#1 = RAdd(r2208,r2207);
      real r220A#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_122149);
      real r220B#1 = RMul(r21F7,r220A);
      real r220C#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_122149);
      real r220D#1 = RMul(r21FA,r220C);
      real r220E#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_122149);
      real r220F#1 = RMul(r21FD,r220E);
      real r2210#1 = RAdd(r220B,r220D);
      real r2211#1 = RAdd(r2210,r220F);
      tensor[3] tensor2212#1 = <tensor[3]>[r2201,r2209,r2211];
      real r2213#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_122149);
      real r2214#1 = RMul(r21F7,r2213);
      real r2215#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_122149);
      real r2216#1 = RMul(r21FA,r2215);
      real r2217#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_122149);
      real r2218#1 = RMul(r21FD,r2217);
      real r2219#1 = RAdd(r2214,r2216);
      real r221A#1 = RAdd(r2219,r2218);
      real r221B#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_122149);
      real r221C#1 = RMul(r21F7,r221B);
      real r221D#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_122149);
      real r221E#1 = RMul(r21FA,r221D);
      real r221F#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_122149);
      real r2220#1 = RMul(r21FD,r221F);
      real r2221#1 = RAdd(r221C,r221E);
      real r2222#1 = RAdd(r2221,r2220);
      real r2223#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_122149);
      real r2224#1 = RMul(r21F7,r2223);
      real r2225#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_122149);
      real r2226#1 = RMul(r21FA,r2225);
      real r2227#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_122149);
      real r2228#1 = RMul(r21FD,r2227);
      real r2229#1 = RAdd(r2224,r2226);
      real r222A#1 = RAdd(r2229,r2228);
      tensor[3] tensor222B#1 = <tensor[3]>[r221A,r2222,r222A];
      real r222C#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_122149);
      real r222D#1 = RMul(r21F7,r222C);
      real r222E#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_122149);
      real r222F#1 = RMul(r21FA,r222E);
      real r2230#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_122149);
      real r2231#1 = RMul(r21FD,r2230);
      real r2232#1 = RAdd(r222D,r222F);
      real r2233#1 = RAdd(r2232,r2231);
      real r2234#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_122149);
      real r2235#1 = RMul(r21F7,r2234);
      real r2236#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_122149);
      real r2237#1 = RMul(r21FA,r2236);
      real r2238#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_122149);
      real r2239#1 = RMul(r21FD,r2238);
      real r223A#1 = RAdd(r2235,r2237);
      real r223B#1 = RAdd(r223A,r2239);
      real r223C#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_122149);
      real r223D#1 = RMul(r21F7,r223C);
      real r223E#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_122149);
      real r223F#1 = RMul(r21FA,r223E);
      real r2240#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_122149);
      real r2241#1 = RMul(r21FD,r2240);
      real r2242#1 = RAdd(r223D,r223F);
      real r2243#1 = RAdd(r2242,r2241);
      tensor[3] tensor2244#1 = <tensor[3]>[r2233,r223B,r2243];
      tensor[3,3] tensor2245#1 = <tensor[3,3]>[tensor2212,tensor222B,tensor2244];
      real r2246#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_102092);
      real r2247#1 = RMul(r2246,r21F8);
      real r2248#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_102092);
      real r2249#1 = RMul(r2248,r21FB);
      real r224A#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_102092);
      real r224B#1 = RMul(r224A,r21FE);
      real r224C#1 = RAdd(r2247,r2249);
      real r224D#1 = RAdd(r224C,r224B);
      real r224E#1 = RMul(r2246,r2202);
      real r224F#1 = RMul(r2248,r2204);
      real r2250#1 = RMul(r224A,r2206);
      real r2251#1 = RAdd(r224E,r224F);
      real r2252#1 = RAdd(r2251,r2250);
      real r2253#1 = RMul(r2246,r220A);
      real r2254#1 = RMul(r2248,r220C);
      real r2255#1 = RMul(r224A,r220E);
      real r2256#1 = RAdd(r2253,r2254);
      real r2257#1 = RAdd(r2256,r2255);
      tensor[3] tensor2258#1 = <tensor[3]>[r224D,r2252,r2257];
      real r2259#1 = RMul(r2246,r2213);
      real r225A#1 = RMul(r2248,r2215);
      real r225B#1 = RMul(r224A,r2217);
      real r225C#1 = RAdd(r2259,r225A);
      real r225D#1 = RAdd(r225C,r225B);
      real r225E#1 = RMul(r2246,r221B);
      real r225F#1 = RMul(r2248,r221D);
      real r2260#1 = RMul(r224A,r221F);
      real r2261#1 = RAdd(r225E,r225F);
      real r2262#1 = RAdd(r2261,r2260);
      real r2263#1 = RMul(r2246,r2223);
      real r2264#1 = RMul(r2248,r2225);
      real r2265#1 = RMul(r224A,r2227);
      real r2266#1 = RAdd(r2263,r2264);
      real r2267#1 = RAdd(r2266,r2265);
      tensor[3] tensor2268#1 = <tensor[3]>[r225D,r2262,r2267];
      real r2269#1 = RMul(r2246,r222C);
      real r226A#1 = RMul(r2248,r222E);
      real r226B#1 = RMul(r224A,r2230);
      real r226C#1 = RAdd(r2269,r226A);
      real r226D#1 = RAdd(r226C,r226B);
      real r226E#1 = RMul(r2246,r2234);
      real r226F#1 = RMul(r2248,r2236);
      real r2270#1 = RMul(r224A,r2238);
      real r2271#1 = RAdd(r226E,r226F);
      real r2272#1 = RAdd(r2271,r2270);
      real r2273#1 = RMul(r2246,r223C);
      real r2274#1 = RMul(r2248,r223E);
      real r2275#1 = RMul(r224A,r2240);
      real r2276#1 = RAdd(r2273,r2274);
      real r2277#1 = RAdd(r2276,r2275);
      tensor[3] tensor2278#1 = <tensor[3]>[r226D,r2272,r2277];
      tensor[3,3] tensor2279#1 = <tensor[3,3]>[tensor2258,tensor2268,tensor2278];
      real r227A#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_102092);
      real r227B#1 = RMul(r227A,r21F8);
      real r227C#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_102092);
      real r227D#1 = RMul(r227C,r21FB);
      real r227E#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_102092);
      real r227F#1 = RMul(r227E,r21FE);
      real r2280#1 = RAdd(r227B,r227D);
      real r2281#1 = RAdd(r2280,r227F);
      real r2282#1 = RMul(r227A,r2202);
      real r2283#1 = RMul(r227C,r2204);
      real r2284#1 = RMul(r227E,r2206);
      real r2285#1 = RAdd(r2282,r2283);
      real r2286#1 = RAdd(r2285,r2284);
      real r2287#1 = RMul(r227A,r220A);
      real r2288#1 = RMul(r227C,r220C);
      real r2289#1 = RMul(r227E,r220E);
      real r228A#1 = RAdd(r2287,r2288);
      real r228B#1 = RAdd(r228A,r2289);
      tensor[3] tensor228C#1 = <tensor[3]>[r2281,r2286,r228B];
      real r228D#1 = RMul(r227A,r2213);
      real r228E#1 = RMul(r227C,r2215);
      real r228F#1 = RMul(r227E,r2217);
      real r2290#1 = RAdd(r228D,r228E);
      real r2291#1 = RAdd(r2290,r228F);
      real r2292#1 = RMul(r227A,r221B);
      real r2293#1 = RMul(r227C,r221D);
      real r2294#1 = RMul(r227E,r221F);
      real r2295#1 = RAdd(r2292,r2293);
      real r2296#1 = RAdd(r2295,r2294);
      real r2297#1 = RMul(r227A,r2223);
      real r2298#1 = RMul(r227C,r2225);
      real r2299#1 = RMul(r227E,r2227);
      real r229A#1 = RAdd(r2297,r2298);
      real r229B#1 = RAdd(r229A,r2299);
      tensor[3] tensor229C#1 = <tensor[3]>[r2291,r2296,r229B];
      real r229D#1 = RMul(r227A,r222C);
      real r229E#1 = RMul(r227C,r222E);
      real r229F#1 = RMul(r227E,r2230);
      real r22A0#1 = RAdd(r229D,r229E);
      real r22A1#1 = RAdd(r22A0,r229F);
      real r22A2#1 = RMul(r227A,r2234);
      real r22A3#1 = RMul(r227C,r2236);
      real r22A4#1 = RMul(r227E,r2238);
      real r22A5#1 = RAdd(r22A2,r22A3);
      real r22A6#1 = RAdd(r22A5,r22A4);
      real r22A7#1 = RMul(r227A,r223C);
      real r22A8#1 = RMul(r227C,r223E);
      real r22A9#1 = RMul(r227E,r2240);
      real r22AA#1 = RAdd(r22A7,r22A8);
      real r22AB#1 = RAdd(r22AA,r22A9);
      tensor[3] tensor22AC#1 = <tensor[3]>[r22A1,r22A6,r22AB];
      tensor[3,3] tensor22AD#1 = <tensor[3,3]>[tensor228C,tensor229C,tensor22AC];
      tensor[3,3,3] op1_e3_l_1321F6#27 = <tensor[3,3,3]>[tensor2245,tensor2279,tensor22AD];
      real r2368#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r2369#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult2074);
      real r236A#1 = RMul(r2368,r2369);
      real r236B#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r236C#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult2074);
      real r236D#1 = RMul(r236B,r236C);
      real r236E#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r236F#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult2074);
      real r2370#1 = RMul(r236E,r236F);
      real r2371#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r2372#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult2074);
      real r2373#1 = RMul(r2371,r2372);
      real r2374#1 = RAdd(r236A,r236D);
      real r2375#1 = RAdd(r2374,r2370);
      real r2376#1 = RAdd(r2375,r2373);
      real r2377#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r2378#1 = RMul(r2377,r2369);
      real r2379#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r237A#1 = RMul(r2379,r236C);
      real r237B#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r237C#1 = RMul(r237B,r236F);
      real r237D#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r237E#1 = RMul(r237D,r2372);
      real r237F#1 = RAdd(r2378,r237A);
      real r2380#1 = RAdd(r237F,r237C);
      real r2381#1 = RAdd(r2380,r237E);
      real r2382#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r2383#1 = RMul(r2382,r2369);
      real r2384#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r2385#1 = RMul(r2384,r236C);
      real r2386#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r2387#1 = RMul(r2386,r236F);
      real r2388#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r2389#1 = RMul(r2388,r2372);
      real r238A#1 = RAdd(r2383,r2385);
      real r238B#1 = RAdd(r238A,r2387);
      real r238C#1 = RAdd(r238B,r2389);
      tensor[3] probe_l_142367#1 = <tensor[3]>[r2376,r2381,r238C];
      real r23B5#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r23B6#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult2074);
      real r23B7#1 = RMul(r23B5,r23B6);
      real r23B8#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r23B9#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult2074);
      real r23BA#1 = RMul(r23B8,r23B9);
      real r23BB#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r23BC#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult2074);
      real r23BD#1 = RMul(r23BB,r23BC);
      real r23BE#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r23BF#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult2074);
      real r23C0#1 = RMul(r23BE,r23BF);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C4#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r23C5#1 = RMul(r23C4,r23B6);
      real r23C6#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r23C7#1 = RMul(r23C6,r23B9);
      real r23C8#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r23C9#1 = RMul(r23C8,r23BC);
      real r23CA#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r23CB#1 = RMul(r23CA,r23BF);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23CF#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r23D0#1 = RMul(r23CF,r23B6);
      real r23D1#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r23D2#1 = RMul(r23D1,r23B9);
      real r23D3#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r23D4#1 = RMul(r23D3,r23BC);
      real r23D5#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r23D6#1 = RMul(r23D5,r23BF);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_1523B4#3 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2402#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r2403#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult2074);
      real r2404#1 = RMul(r2402,r2403);
      real r2405#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r2406#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult2074);
      real r2407#1 = RMul(r2405,r2406);
      real r2408#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r2409#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult2074);
      real r240A#1 = RMul(r2408,r2409);
      real r240B#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r240C#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult2074);
      real r240D#1 = RMul(r240B,r240C);
      real r240E#1 = RAdd(r2404,r2407);
      real r240F#1 = RAdd(r240E,r240A);
      real r2410#1 = RAdd(r240F,r240D);
      real r2411#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r2412#1 = RMul(r2411,r2403);
      real r2413#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r2414#1 = RMul(r2413,r2406);
      real r2415#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r2416#1 = RMul(r2415,r2409);
      real r2417#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r2418#1 = RMul(r2417,r240C);
      real r2419#1 = RAdd(r2412,r2414);
      real r241A#1 = RAdd(r2419,r2416);
      real r241B#1 = RAdd(r241A,r2418);
      real r241C#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r241D#1 = RMul(r241C,r2403);
      real r241E#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r241F#1 = RMul(r241E,r2406);
      real r2420#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r2421#1 = RMul(r2420,r2409);
      real r2422#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r2423#1 = RMul(r2422,r240C);
      real r2424#1 = RAdd(r241D,r241F);
      real r2425#1 = RAdd(r2424,r2421);
      real r2426#1 = RAdd(r2425,r2423);
      tensor[3] probe_l_162401#3 = <tensor[3]>[r2410,r241B,r2426];
      real realLit244F#3 = 0.e0;
      real r2450#3 = TensorIndex<tensor[3],[0]>(probe_l_162401);
      real r2451#3 = RMul(realLit244F,r2450);
      real r2452#3 = TensorIndex<tensor[3],[1]>(probe_l_162401);
      real r2453#3 = RMul(realLit244F,r2452);
      real r2454#3 = TensorIndex<tensor[3],[2]>(probe_l_162401);
      real r2455#5 = RMul(realLit244F,r2454);
      real r2456#3 = RAdd(r2451,r2453);
      real r2457#3 = RAdd(r2456,r2455);
      real realLit2458#3 = 0.1e1;
      real r2459#1 = RMul(realLit2458,r2454);
      real r245A#1 = RAdd(r2456,r2459);
      real realLit245B#3 = -0.1e1;
      real r245C#1 = RMul(realLit245B,r2452);
      real r245D#1 = RAdd(r2451,r245C);
      real r245E#1 = RAdd(r245D,r2455);
      tensor[3] tensor245F#1 = <tensor[3]>[r2457,r245A,r245E];
      real r2460#1 = RMul(realLit245B,r2454);
      real r2461#1 = RAdd(r2456,r2460);
      real r2462#1 = RMul(realLit2458,r2450);
      real r2463#1 = RAdd(r2462,r2453);
      real r2464#1 = RAdd(r2463,r2455);
      tensor[3] tensor2465#1 = <tensor[3]>[r2461,r2457,r2464];
      real r2466#1 = RMul(realLit2458,r2452);
      real r2467#1 = RAdd(r2451,r2466);
      real r2468#1 = RAdd(r2467,r2455);
      real r2469#1 = RMul(realLit245B,r2450);
      real r246A#1 = RAdd(r2469,r2453);
      real r246B#1 = RAdd(r246A,r2455);
      tensor[3] tensor246C#1 = <tensor[3]>[r2468,r246B,r2457];
      tensor[3,3] op1_e3_l_17244E#3 = <tensor[3,3]>[tensor245F,tensor2465,tensor246C];
      tensor[3] projParam248E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_17244E);
      real vdot248F#1 = VDot<3>(probe_l_1523B4,projParam248E);
      tensor[3] projParam2490#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_17244E);
      real vdot2491#1 = VDot<3>(probe_l_1523B4,projParam2490);
      tensor[3] projParam2492#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_17244E);
      real vdot2493#1 = VDot<3>(probe_l_1523B4,projParam2492);
      tensor[3] op1_e3_l_18248D#1 = <tensor[3]>[vdot248F,vdot2491,vdot2493];
      real op1_e3_l_19249C#1 = VDot<3>(probe_l_142367,op1_e3_l_18248D);
      real realLit24A0#27 = 0.e0;
      real r24A1#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1321F6);
      real r24A2#2 = RMul(realLit24A0,r24A1);
      real r24A3#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1321F6);
      real r24A4#1 = RMul(realLit24A0,r24A3);
      real r24A5#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1321F6);
      real r24A6#2 = RMul(realLit24A0,r24A5);
      real r24A7#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1321F6);
      real r24A8#2 = RMul(realLit24A0,r24A7);
      real r24A9#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1321F6);
      real r24AA#3 = RMul(realLit24A0,r24A9);
      real realLit24AB#9 = 0.1e1;
      real r24AC#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1321F6);
      real r24AD#1 = RMul(realLit24AB,r24AC);
      real r24AE#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1321F6);
      real r24AF#2 = RMul(realLit24A0,r24AE);
      real realLit24B0#9 = -0.1e1;
      real r24B1#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1321F6);
      real r24B2#1 = RMul(realLit24B0,r24B1);
      real r24B3#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1321F6);
      real r24B4#3 = RMul(realLit24A0,r24B3);
      real r24B5#2 = RAdd(r24A2,r24A4);
      real r24B6#1 = RAdd(r24B5,r24A6);
      real r24B7#1 = RAdd(r24B6,r24A8);
      real r24B8#1 = RAdd(r24B7,r24AA);
      real r24B9#1 = RAdd(r24B8,r24AD);
      real r24BA#1 = RAdd(r24B9,r24AF);
      real r24BB#1 = RAdd(r24BA,r24B2);
      real r24BC#1 = RAdd(r24BB,r24B4);
      real r24BD#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1321F6);
      real r24BE#2 = RMul(realLit24A0,r24BD);
      real r24BF#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1321F6);
      real r24C0#1 = RMul(realLit24A0,r24BF);
      real r24C1#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1321F6);
      real r24C2#2 = RMul(realLit24A0,r24C1);
      real r24C3#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1321F6);
      real r24C4#2 = RMul(realLit24A0,r24C3);
      real r24C5#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1321F6);
      real r24C6#3 = RMul(realLit24A0,r24C5);
      real r24C7#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1321F6);
      real r24C8#1 = RMul(realLit24AB,r24C7);
      real r24C9#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1321F6);
      real r24CA#2 = RMul(realLit24A0,r24C9);
      real r24CB#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1321F6);
      real r24CC#1 = RMul(realLit24B0,r24CB);
      real r24CD#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1321F6);
      real r24CE#3 = RMul(realLit24A0,r24CD);
      real r24CF#2 = RAdd(r24BE,r24C0);
      real r24D0#1 = RAdd(r24CF,r24C2);
      real r24D1#1 = RAdd(r24D0,r24C4);
      real r24D2#1 = RAdd(r24D1,r24C6);
      real r24D3#1 = RAdd(r24D2,r24C8);
      real r24D4#1 = RAdd(r24D3,r24CA);
      real r24D5#1 = RAdd(r24D4,r24CC);
      real r24D6#1 = RAdd(r24D5,r24CE);
      real r24D7#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1321F6);
      real r24D8#2 = RMul(realLit24A0,r24D7);
      real r24D9#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1321F6);
      real r24DA#1 = RMul(realLit24A0,r24D9);
      real r24DB#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1321F6);
      real r24DC#2 = RMul(realLit24A0,r24DB);
      real r24DD#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1321F6);
      real r24DE#2 = RMul(realLit24A0,r24DD);
      real r24DF#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1321F6);
      real r24E0#3 = RMul(realLit24A0,r24DF);
      real r24E1#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1321F6);
      real r24E2#1 = RMul(realLit24AB,r24E1);
      real r24E3#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1321F6);
      real r24E4#2 = RMul(realLit24A0,r24E3);
      real r24E5#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1321F6);
      real r24E6#1 = RMul(realLit24B0,r24E5);
      real r24E7#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1321F6);
      real r24E8#3 = RMul(realLit24A0,r24E7);
      real r24E9#2 = RAdd(r24D8,r24DA);
      real r24EA#1 = RAdd(r24E9,r24DC);
      real r24EB#1 = RAdd(r24EA,r24DE);
      real r24EC#1 = RAdd(r24EB,r24E0);
      real r24ED#1 = RAdd(r24EC,r24E2);
      real r24EE#1 = RAdd(r24ED,r24E4);
      real r24EF#1 = RAdd(r24EE,r24E6);
      real r24F0#1 = RAdd(r24EF,r24E8);
      tensor[3] tensor24F1#1 = <tensor[3]>[r24BC,r24D6,r24F0];
      real r24F2#1 = RMul(realLit24B0,r24A5);
      real r24F3#2 = RMul(realLit24A0,r24AC);
      real r24F4#1 = RMul(realLit24AB,r24AE);
      real r24F5#2 = RMul(realLit24A0,r24B1);
      real r24F6#1 = RAdd(r24B5,r24F2);
      real r24F7#1 = RAdd(r24F6,r24A8);
      real r24F8#1 = RAdd(r24F7,r24AA);
      real r24F9#1 = RAdd(r24F8,r24F3);
      real r24FA#1 = RAdd(r24F9,r24F4);
      real r24FB#1 = RAdd(r24FA,r24F5);
      real r24FC#1 = RAdd(r24FB,r24B4);
      real r24FD#1 = RMul(realLit24B0,r24C1);
      real r24FE#2 = RMul(realLit24A0,r24C7);
      real r24FF#1 = RMul(realLit24AB,r24C9);
      real r2500#2 = RMul(realLit24A0,r24CB);
      real r2501#1 = RAdd(r24CF,r24FD);
      real r2502#1 = RAdd(r2501,r24C4);
      real r2503#1 = RAdd(r2502,r24C6);
      real r2504#1 = RAdd(r2503,r24FE);
      real r2505#1 = RAdd(r2504,r24FF);
      real r2506#1 = RAdd(r2505,r2500);
      real r2507#1 = RAdd(r2506,r24CE);
      real r2508#1 = RMul(realLit24B0,r24DB);
      real r2509#2 = RMul(realLit24A0,r24E1);
      real r250A#1 = RMul(realLit24AB,r24E3);
      real r250B#2 = RMul(realLit24A0,r24E5);
      real r250C#1 = RAdd(r24E9,r2508);
      real r250D#1 = RAdd(r250C,r24DE);
      real r250E#1 = RAdd(r250D,r24E0);
      real r250F#1 = RAdd(r250E,r2509);
      real r2510#1 = RAdd(r250F,r250A);
      real r2511#1 = RAdd(r2510,r250B);
      real r2512#1 = RAdd(r2511,r24E8);
      tensor[3] tensor2513#1 = <tensor[3]>[r24FC,r2507,r2512];
      real r2514#1 = RMul(realLit24AB,r24A3);
      real r2515#1 = RMul(realLit24B0,r24A7);
      real r2516#1 = RAdd(r24A2,r2514);
      real r2517#1 = RAdd(r2516,r24A6);
      real r2518#1 = RAdd(r2517,r2515);
      real r2519#1 = RAdd(r2518,r24AA);
      real r251A#1 = RAdd(r2519,r24F3);
      real r251B#1 = RAdd(r251A,r24AF);
      real r251C#1 = RAdd(r251B,r24F5);
      real r251D#1 = RAdd(r251C,r24B4);
      real r251E#1 = RMul(realLit24AB,r24BF);
      real r251F#1 = RMul(realLit24B0,r24C3);
      real r2520#1 = RAdd(r24BE,r251E);
      real r2521#1 = RAdd(r2520,r24C2);
      real r2522#1 = RAdd(r2521,r251F);
      real r2523#1 = RAdd(r2522,r24C6);
      real r2524#1 = RAdd(r2523,r24FE);
      real r2525#1 = RAdd(r2524,r24CA);
      real r2526#1 = RAdd(r2525,r2500);
      real r2527#1 = RAdd(r2526,r24CE);
      real r2528#1 = RMul(realLit24AB,r24D9);
      real r2529#1 = RMul(realLit24B0,r24DD);
      real r252A#1 = RAdd(r24D8,r2528);
      real r252B#1 = RAdd(r252A,r24DC);
      real r252C#1 = RAdd(r252B,r2529);
      real r252D#1 = RAdd(r252C,r24E0);
      real r252E#1 = RAdd(r252D,r2509);
      real r252F#1 = RAdd(r252E,r24E4);
      real r2530#1 = RAdd(r252F,r250B);
      real r2531#1 = RAdd(r2530,r24E8);
      tensor[3] tensor2532#1 = <tensor[3]>[r251D,r2527,r2531];
      tensor[3,3] op1_e3_l_20249F#9 = <tensor[3,3]>[tensor24F1,tensor2513,tensor2532];
      real realLit25C9#1 = 0.2e1;
      real op1_e3_l_2125C8#9 = RMul(realLit25C9,op1_e3_l_19249C);
      real varAcc25CF#1 = VIndex<3,0>(xn25CE);
      real varAcc25D0#1 = VIndex<3,1>(xn25CE);
      real varAcc25D1#1 = VIndex<3,2>(xn25CE);
      real coeff25D2#3 = -0.1e1;
      real iden25D3#1 = varAcc25CF;
      real one25D4#11 = 0.1e1;
      real prod25D5#2 = RMul(one25D4,one25D4);
      real prod25D6#2 = RMul(iden25D3,prod25D5);
      real iden25D7#1 = varAcc25D0;
      real prod25D8#1 = RMul(iden25D7,one25D4);
      real prod25D9#2 = RMul(one25D4,prod25D8);
      real iden25DA#1 = varAcc25D1;
      real prod25DB#1 = RMul(one25D4,iden25DA);
      real prod25DC#2 = RMul(one25D4,prod25DB);
      real prod25DD#1 = RMul(one25D4,prod25D5);
      real mult25DE#1 = RMul(one25D4,prod25DD);
      real mult25DF#1 = RMul(coeff25D2,prod25DC);
      real mult25E0#1 = RMul(coeff25D2,prod25D9);
      real mult25E1#1 = RMul(coeff25D2,prod25D6);
      real sum25E2#1 = RAdd(mult25E0,mult25E1);
      real sum25E3#1 = RAdd(mult25DF,sum25E2);
      real sum25E4#1 = RAdd(mult25DE,sum25E3);
      real intermediate25E5#1 = sum25E4;
      real basisEval25E6#1 = RMul(one25D4,prod25D6);
      real basisEval25E7#1 = RMul(one25D4,prod25D9);
      real basisEval25E8#1 = RMul(one25D4,prod25DC);
      tensor[4] intermediateCons25E9#1 = <tensor[4]>[intermediate25E5,basisEval25E6,basisEval25E7,basisEval25E8];
      tensor[4] basisResult25CD#8 = intermediateCons25E9;
      real r2607#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r2608#3 = TensorIndex<tensor[4],[0]>(basisResult25CD);
      real r2609#1 = RMul(r2607,r2608);
      real r260A#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r260B#3 = TensorIndex<tensor[4],[1]>(basisResult25CD);
      real r260C#1 = RMul(r260A,r260B);
      real r260D#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r260E#3 = TensorIndex<tensor[4],[2]>(basisResult25CD);
      real r260F#1 = RMul(r260D,r260E);
      real r2610#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r2611#3 = TensorIndex<tensor[4],[3]>(basisResult25CD);
      real r2612#1 = RMul(r2610,r2611);
      real r2613#1 = RAdd(r2609,r260C);
      real r2614#1 = RAdd(r2613,r260F);
      real r2615#1 = RAdd(r2614,r2612);
      real r2616#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r2617#1 = RMul(r2616,r2608);
      real r2618#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r2619#1 = RMul(r2618,r260B);
      real r261A#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r261B#1 = RMul(r261A,r260E);
      real r261C#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r261D#1 = RMul(r261C,r2611);
      real r261E#1 = RAdd(r2617,r2619);
      real r261F#1 = RAdd(r261E,r261B);
      real r2620#1 = RAdd(r261F,r261D);
      real r2621#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r2622#1 = RMul(r2621,r2608);
      real r2623#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r2624#1 = RMul(r2623,r260B);
      real r2625#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r2626#1 = RMul(r2625,r260E);
      real r2627#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r2628#1 = RMul(r2627,r2611);
      real r2629#1 = RAdd(r2622,r2624);
      real r262A#1 = RAdd(r2629,r2626);
      real r262B#1 = RAdd(r262A,r2628);
      tensor[3] probe_l_222606#1 = <tensor[3]>[r2615,r2620,r262B];
      real r2654#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_20249F);
      real r2655#1 = RDiv(r2654,op1_e3_l_2125C8);
      real r2656#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_20249F);
      real r2657#1 = RDiv(r2656,op1_e3_l_2125C8);
      real r2658#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_20249F);
      real r2659#1 = RDiv(r2658,op1_e3_l_2125C8);
      tensor[3] tensor265A#1 = <tensor[3]>[r2655,r2657,r2659];
      real r265B#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_20249F);
      real r265C#1 = RDiv(r265B,op1_e3_l_2125C8);
      real r265D#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_20249F);
      real r265E#1 = RDiv(r265D,op1_e3_l_2125C8);
      real r265F#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_20249F);
      real r2660#1 = RDiv(r265F,op1_e3_l_2125C8);
      tensor[3] tensor2661#1 = <tensor[3]>[r265C,r265E,r2660];
      real r2662#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_20249F);
      real r2663#1 = RDiv(r2662,op1_e3_l_2125C8);
      real r2664#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_20249F);
      real r2665#1 = RDiv(r2664,op1_e3_l_2125C8);
      real r2666#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_20249F);
      real r2667#1 = RDiv(r2666,op1_e3_l_2125C8);
      tensor[3] tensor2668#1 = <tensor[3]>[r2663,r2665,r2667];
      tensor[3,3] op1_e3_l_232653#6 = <tensor[3,3]>[tensor265A,tensor2661,tensor2668];
      tensor[3] op1_e3_l_242680#3 = VSub<3>(probe_l_222606,pos1FE6);
      tensor[3] projParam2684#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232653);
      real vdot2685#1 = VDot<3>(projParam2684,op1_e3_l_242680);
      tensor[3] projParam2686#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232653);
      real vdot2687#1 = VDot<3>(projParam2686,op1_e3_l_242680);
      tensor[3] projParam2688#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232653);
      real vdot2689#1 = VDot<3>(projParam2688,op1_e3_l_242680);
      tensor[3] op1_e3_l_252683#1 = <tensor[3]>[vdot2685,vdot2687,vdot2689];
      tensor[3] xn2692#4 = VSub<3>(xn25CE,op1_e3_l_252683);
      real _t2695#2 = 0.1e-7;
      real _t2697#1 = RMul(_t2695,_t2695);
      real r269B#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs2020);
      real r269C#3 = TensorIndex<tensor[4],[0]>(basisResult25CD);
      real r269D#1 = RMul(r269B,r269C);
      real r269E#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs2020);
      real r269F#3 = TensorIndex<tensor[4],[1]>(basisResult25CD);
      real r26A0#1 = RMul(r269E,r269F);
      real r26A1#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs2020);
      real r26A2#3 = TensorIndex<tensor[4],[2]>(basisResult25CD);
      real r26A3#1 = RMul(r26A1,r26A2);
      real r26A4#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs2020);
      real r26A5#3 = TensorIndex<tensor[4],[3]>(basisResult25CD);
      real r26A6#1 = RMul(r26A4,r26A5);
      real r26A7#1 = RAdd(r269D,r26A0);
      real r26A8#1 = RAdd(r26A7,r26A3);
      real r26A9#1 = RAdd(r26A8,r26A6);
      real r26AA#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs2020);
      real r26AB#1 = RMul(r26AA,r269C);
      real r26AC#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs2020);
      real r26AD#1 = RMul(r26AC,r269F);
      real r26AE#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs2020);
      real r26AF#1 = RMul(r26AE,r26A2);
      real r26B0#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs2020);
      real r26B1#1 = RMul(r26B0,r26A5);
      real r26B2#1 = RAdd(r26AB,r26AD);
      real r26B3#1 = RAdd(r26B2,r26AF);
      real r26B4#1 = RAdd(r26B3,r26B1);
      real r26B5#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs2020);
      real r26B6#1 = RMul(r26B5,r269C);
      real r26B7#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs2020);
      real r26B8#1 = RMul(r26B7,r269F);
      real r26B9#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs2020);
      real r26BA#1 = RMul(r26B9,r26A2);
      real r26BB#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs2020);
      real r26BC#1 = RMul(r26BB,r26A5);
      real r26BD#1 = RAdd(r26B6,r26B8);
      real r26BE#1 = RAdd(r26BD,r26BA);
      real r26BF#1 = RAdd(r26BE,r26BC);
      tensor[3] probe_l_30269A#1 = <tensor[3]>[r26A9,r26B4,r26BF];
      tensor[3] op1_e3_l_3226E7#3 = VSub<3>(probe_l_30269A,pos1FE6);
      tensor[3] projParam26EB#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232653);
      real vdot26EC#1 = VDot<3>(projParam26EB,op1_e3_l_3226E7);
      tensor[3] projParam26ED#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232653);
      real vdot26EE#1 = VDot<3>(projParam26ED,op1_e3_l_3226E7);
      tensor[3] projParam26EF#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232653);
      real vdot26F0#1 = VDot<3>(projParam26EF,op1_e3_l_3226E7);
      tensor[3] op1_e3_l_4826EA#2 = <tensor[3]>[vdot26EC,vdot26EE,vdot26F0];
      real _t26F9#1 = VDot<3>(op1_e3_l_4826EA,op1_e3_l_4826EA);
      bool _t26FC#1 = GTE<real>(_t2697,_t26F9);
      if _t26FC then goto ASSIGN2700 else goto JOIN272B
    ASSIGN2700:  preds = [COND26FE]
      real _t26FF#4 = 0.1e1;
      real _t2701#4 = 0.1e-4;
      real _t2703#1 = RAdd(_t26FF,_t2701);
      tensor[3] _t2706#1 = <tensor[3]>[_t26FF,_t26FF,_t26FF];
      real _t2708#1 = VDot<3>(_t2706,xn2692);
      bool _t270B#1 = GT<real>(_t2703,_t2708);
      tensor[3] _t270D#1 = <tensor[3]>[_t2701,_t2701,_t2701];
      tensor[3] _t270F#3 = VAdd<3>(_t270D,xn2692);
      real _t2712#1 = VIndex<3,0>(_t270F);
      real _t2714#3 = -0.e0;
      bool _t2716#1 = GT<real>(_t2712,_t2714);
      real _t2718#1 = VIndex<3,1>(_t270F);
      bool _t271A#1 = GT<real>(_t2718,_t2714);
      real _t271C#1 = VIndex<3,2>(_t270F);
      bool _t271E#1 = GT<real>(_t271C,_t2714);
      bool _t2720#1 = BAnd(_t271A,_t271E);
      bool _t2722#1 = BAnd(_t2716,_t2720);
      bool _t2724#1 = BAnd(_t270B,_t2722);
      if _t2724 then goto ASSIGN2728 else goto JOIN272A
    ASSIGN2728:  preds = [COND2726]
      femData:MeshPos _t2727#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellItter1FF8,xn2692,pos1FE6);
      return _t2727
      goto JOIN272A
    JOIN272A:  preds = [*RETURN(_t2727)2729,COND2726]
      goto JOIN272B
    JOIN272B:  preds = [JOIN272A,COND26FE]
      goto FOREACH1FFF
    NEXT272E:  preds = [FOREACH1FFF]
      goto FOREACH1FF9
    ASSIGN2730:  preds = [FOREACH1FF9]
      int _t272F#2 = 2;
      int _t2731#1 = IAdd(_t272F,_t1FF2);
      int _t2733#1 = IMul(_t2731,numCell1FF4);
      int[] _t2735#1 = Range(newtonInt1FEC,_t2733);
    FOREACH2738:  preds = [ASSIGN2736,NEXT2E78]
      foreach (itter2737 in _t2735) on exit goto ASSIGN2E7B
        int cellInt273A#5 = phi(cellInt1FEE,cellInt2E75)
        int newtonInt2E67#1 = phi(newtonInt1FEC,newtonInt2E76)
        tensor[3] xn2D08#4 = phi(xn272D,xn2DCC)
      int ilit273B#1 = 4;
      int mulRes273C#4 = IMul(cellInt273A,ilit273B);
      int ilit273D#1 = 0;
      int addRes273E#1 = IAdd(mulRes273C,ilit273D);
      int idx273F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes273E);
      int ilit2740#1 = 1;
      int addRes2741#1 = IAdd(mulRes273C,ilit2740);
      int idx2742#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2741);
      int ilit2743#1 = 2;
      int addRes2744#1 = IAdd(mulRes273C,ilit2743);
      int idx2745#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2744);
      int ilit2746#1 = 3;
      int addRes2747#1 = IAdd(mulRes273C,ilit2746);
      int idx2748#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2747);
      int[4] seq2749#1 = <int[4]>{idx273F,idx2742,idx2745,idx2748};
      int[4] femIndicies2739#4 = seq2749;
      int ilit275B#5 = 0;
      int ilit275C#5 = 3;
      int idx275D#1 = Subscript<int>(femIndicies2739,ilit275B);
      int mulRes275E#3 = IMul(ilit275C,idx275D);
      int addRes275F#1 = IAdd(ilit275B,mulRes275E);
      int ilit2760#5 = 1;
      int addRes2761#1 = IAdd(ilit2760,mulRes275E);
      int ilit2762#5 = 2;
      int addRes2763#1 = IAdd(ilit2762,mulRes275E);
      real dof_load2764#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes275F);
      real dof_load2765#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2761);
      real dof_load2766#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2763);
      tensor[3] interCons2767#1 = <tensor[3]>[dof_load2764,dof_load2765,dof_load2766];
      int idx2768#1 = Subscript<int>(femIndicies2739,ilit2760);
      int mulRes2769#3 = IMul(ilit275C,idx2768);
      int addRes276A#1 = IAdd(ilit275B,mulRes2769);
      int addRes276B#1 = IAdd(ilit2760,mulRes2769);
      int addRes276C#1 = IAdd(ilit2762,mulRes2769);
      real dof_load276D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276A);
      real dof_load276E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276B);
      real dof_load276F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276C);
      tensor[3] interCons2770#1 = <tensor[3]>[dof_load276D,dof_load276E,dof_load276F];
      int idx2771#1 = Subscript<int>(femIndicies2739,ilit2762);
      int mulRes2772#3 = IMul(ilit275C,idx2771);
      int addRes2773#1 = IAdd(ilit275B,mulRes2772);
      int addRes2774#1 = IAdd(ilit2760,mulRes2772);
      int addRes2775#1 = IAdd(ilit2762,mulRes2772);
      real dof_load2776#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2773);
      real dof_load2777#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2774);
      real dof_load2778#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2775);
      tensor[3] interCons2779#1 = <tensor[3]>[dof_load2776,dof_load2777,dof_load2778];
      int idx277A#1 = Subscript<int>(femIndicies2739,ilit275C);
      int mulRes277B#3 = IMul(ilit275C,idx277A);
      int addRes277C#1 = IAdd(ilit275B,mulRes277B);
      int addRes277D#1 = IAdd(ilit2760,mulRes277B);
      int addRes277E#1 = IAdd(ilit2762,mulRes277B);
      real dof_load277F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277C);
      real dof_load2780#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277D);
      real dof_load2781#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277E);
      tensor[3] interCons2782#1 = <tensor[3]>[dof_load277F,dof_load2780,dof_load2781];
      tensor[4,3] dofs2783#1 = <tensor[4,3]>[interCons2767,interCons2770,interCons2779,interCons2782];
      tensor[4,3] femDofs275A#72 = dofs2783;
      real varAcc27AF#0 = VIndex<3,0>(xn1FEA);
      real varAcc27B0#0 = VIndex<3,1>(xn1FEA);
      real varAcc27B1#0 = VIndex<3,2>(xn1FEA);
      real coeff27B2#1 = -0.1e1;
      real one27B3#4 = 0.1e1;
      real prod27B4#1 = RMul(one27B3,one27B3);
      real prod27B5#2 = RMul(one27B3,prod27B4);
      real basisEval27B6#3 = RMul(coeff27B2,prod27B5);
      real basisEval27B7#3 = RMul(one27B3,prod27B5);
      real basisEval27B8#6 = 0.e0;
      tensor[4] intermediateCons27B9#1 = <tensor[4]>[basisEval27B6,basisEval27B7,basisEval27B8,basisEval27B8];
      tensor[4] intermediateCons27BA#1 = <tensor[4]>[basisEval27B6,basisEval27B8,basisEval27B7,basisEval27B8];
      tensor[4] intermediateCons27BB#1 = <tensor[4]>[basisEval27B6,basisEval27B8,basisEval27B8,basisEval27B7];
      tensor[3,4] intermediateCons27BC#1 = <tensor[3,4]>[intermediateCons27B9,intermediateCons27BA,intermediateCons27BB];
      tensor[3,4] basisResult27AE#24 = intermediateCons27BC;
      real r27CD#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r27CE#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult27AE);
      real r27CF#1 = RMul(r27CD,r27CE);
      real r27D0#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r27D1#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult27AE);
      real r27D2#1 = RMul(r27D0,r27D1);
      real r27D3#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r27D4#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult27AE);
      real r27D5#1 = RMul(r27D3,r27D4);
      real r27D6#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r27D7#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult27AE);
      real r27D8#1 = RMul(r27D6,r27D7);
      real r27D9#1 = RAdd(r27CF,r27D2);
      real r27DA#1 = RAdd(r27D9,r27D5);
      real r27DB#1 = RAdd(r27DA,r27D8);
      real r27DC#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult27AE);
      real r27DD#1 = RMul(r27CD,r27DC);
      real r27DE#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult27AE);
      real r27DF#1 = RMul(r27D0,r27DE);
      real r27E0#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult27AE);
      real r27E1#1 = RMul(r27D3,r27E0);
      real r27E2#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult27AE);
      real r27E3#1 = RMul(r27D6,r27E2);
      real r27E4#1 = RAdd(r27DD,r27DF);
      real r27E5#1 = RAdd(r27E4,r27E1);
      real r27E6#1 = RAdd(r27E5,r27E3);
      real r27E7#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult27AE);
      real r27E8#1 = RMul(r27CD,r27E7);
      real r27E9#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult27AE);
      real r27EA#1 = RMul(r27D0,r27E9);
      real r27EB#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult27AE);
      real r27EC#1 = RMul(r27D3,r27EB);
      real r27ED#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult27AE);
      real r27EE#1 = RMul(r27D6,r27ED);
      real r27EF#1 = RAdd(r27E8,r27EA);
      real r27F0#1 = RAdd(r27EF,r27EC);
      real r27F1#1 = RAdd(r27F0,r27EE);
      tensor[3] tensor27F2#1 = <tensor[3]>[r27DB,r27E6,r27F1];
      real r27F3#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r27F4#1 = RMul(r27F3,r27CE);
      real r27F5#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r27F6#1 = RMul(r27F5,r27D1);
      real r27F7#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r27F8#1 = RMul(r27F7,r27D4);
      real r27F9#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r27FA#1 = RMul(r27F9,r27D7);
      real r27FB#1 = RAdd(r27F4,r27F6);
      real r27FC#1 = RAdd(r27FB,r27F8);
      real r27FD#1 = RAdd(r27FC,r27FA);
      real r27FE#1 = RMul(r27F3,r27DC);
      real r27FF#1 = RMul(r27F5,r27DE);
      real r2800#1 = RMul(r27F7,r27E0);
      real r2801#1 = RMul(r27F9,r27E2);
      real r2802#1 = RAdd(r27FE,r27FF);
      real r2803#1 = RAdd(r2802,r2800);
      real r2804#1 = RAdd(r2803,r2801);
      real r2805#1 = RMul(r27F3,r27E7);
      real r2806#1 = RMul(r27F5,r27E9);
      real r2807#1 = RMul(r27F7,r27EB);
      real r2808#1 = RMul(r27F9,r27ED);
      real r2809#1 = RAdd(r2805,r2806);
      real r280A#1 = RAdd(r2809,r2807);
      real r280B#1 = RAdd(r280A,r2808);
      tensor[3] tensor280C#1 = <tensor[3]>[r27FD,r2804,r280B];
      real r280D#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r280E#1 = RMul(r280D,r27CE);
      real r280F#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2810#1 = RMul(r280F,r27D1);
      real r2811#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2812#1 = RMul(r2811,r27D4);
      real r2813#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2814#1 = RMul(r2813,r27D7);
      real r2815#1 = RAdd(r280E,r2810);
      real r2816#1 = RAdd(r2815,r2812);
      real r2817#1 = RAdd(r2816,r2814);
      real r2818#1 = RMul(r280D,r27DC);
      real r2819#1 = RMul(r280F,r27DE);
      real r281A#1 = RMul(r2811,r27E0);
      real r281B#1 = RMul(r2813,r27E2);
      real r281C#1 = RAdd(r2818,r2819);
      real r281D#1 = RAdd(r281C,r281A);
      real r281E#1 = RAdd(r281D,r281B);
      real r281F#1 = RMul(r280D,r27E7);
      real r2820#1 = RMul(r280F,r27E9);
      real r2821#1 = RMul(r2811,r27EB);
      real r2822#1 = RMul(r2813,r27ED);
      real r2823#1 = RAdd(r281F,r2820);
      real r2824#1 = RAdd(r2823,r2821);
      real r2825#1 = RAdd(r2824,r2822);
      tensor[3] tensor2826#1 = <tensor[3]>[r2817,r281E,r2825];
      tensor[3,3] probe_l_1027CC#18 = <tensor[3,3]>[tensor27F2,tensor280C,tensor2826];
      real realLit2884#9 = 0.e0;
      real r2885#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_1027CC);
      real r2886#3 = RMul(realLit2884,r2885);
      real r2887#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_1027CC);
      real r2888#3 = RMul(realLit2884,r2887);
      real r2889#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_1027CC);
      real r288A#5 = RMul(realLit2884,r2889);
      real r288B#3 = RAdd(r2886,r2888);
      real r288C#1 = RAdd(r288B,r288A);
      real r288D#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_1027CC);
      real r288E#3 = RMul(realLit2884,r288D);
      real r288F#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_1027CC);
      real r2890#3 = RMul(realLit2884,r288F);
      real r2891#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_1027CC);
      real r2892#5 = RMul(realLit2884,r2891);
      real r2893#3 = RAdd(r288E,r2890);
      real r2894#1 = RAdd(r2893,r2892);
      real r2895#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_1027CC);
      real r2896#3 = RMul(realLit2884,r2895);
      real r2897#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_1027CC);
      real r2898#3 = RMul(realLit2884,r2897);
      real r2899#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_1027CC);
      real r289A#5 = RMul(realLit2884,r2899);
      real r289B#3 = RAdd(r2896,r2898);
      real r289C#1 = RAdd(r289B,r289A);
      tensor[3] tensor289D#3 = <tensor[3]>[r288C,r2894,r289C];
      real realLit289E#9 = -0.1e1;
      real r289F#1 = RMul(realLit289E,r2889);
      real r28A0#1 = RAdd(r288B,r289F);
      real r28A1#1 = RMul(realLit289E,r2891);
      real r28A2#1 = RAdd(r2893,r28A1);
      real r28A3#1 = RMul(realLit289E,r2899);
      real r28A4#1 = RAdd(r289B,r28A3);
      tensor[3] tensor28A5#1 = <tensor[3]>[r28A0,r28A2,r28A4];
      real realLit28A6#9 = 0.1e1;
      real r28A7#1 = RMul(realLit28A6,r2887);
      real r28A8#1 = RAdd(r2886,r28A7);
      real r28A9#1 = RAdd(r28A8,r288A);
      real r28AA#1 = RMul(realLit28A6,r288F);
      real r28AB#1 = RAdd(r288E,r28AA);
      real r28AC#1 = RAdd(r28AB,r2892);
      real r28AD#1 = RMul(realLit28A6,r2897);
      real r28AE#1 = RAdd(r2896,r28AD);
      real r28AF#1 = RAdd(r28AE,r289A);
      tensor[3] tensor28B0#1 = <tensor[3]>[r28A9,r28AC,r28AF];
      tensor[3,3] tensor28B1#1 = <tensor[3,3]>[tensor289D,tensor28A5,tensor28B0];
      real r28B2#1 = RMul(realLit28A6,r2889);
      real r28B3#1 = RAdd(r288B,r28B2);
      real r28B4#1 = RMul(realLit28A6,r2891);
      real r28B5#1 = RAdd(r2893,r28B4);
      real r28B6#1 = RMul(realLit28A6,r2899);
      real r28B7#1 = RAdd(r289B,r28B6);
      tensor[3] tensor28B8#1 = <tensor[3]>[r28B3,r28B5,r28B7];
      real r28B9#1 = RMul(realLit289E,r2885);
      real r28BA#1 = RAdd(r28B9,r2888);
      real r28BB#1 = RAdd(r28BA,r288A);
      real r28BC#1 = RMul(realLit289E,r288D);
      real r28BD#1 = RAdd(r28BC,r2890);
      real r28BE#1 = RAdd(r28BD,r2892);
      real r28BF#1 = RMul(realLit289E,r2895);
      real r28C0#1 = RAdd(r28BF,r2898);
      real r28C1#1 = RAdd(r28C0,r289A);
      tensor[3] tensor28C2#1 = <tensor[3]>[r28BB,r28BE,r28C1];
      tensor[3,3] tensor28C3#1 = <tensor[3,3]>[tensor28B8,tensor289D,tensor28C2];
      real r28C4#1 = RMul(realLit289E,r2887);
      real r28C5#1 = RAdd(r2886,r28C4);
      real r28C6#1 = RAdd(r28C5,r288A);
      real r28C7#1 = RMul(realLit289E,r288F);
      real r28C8#1 = RAdd(r288E,r28C7);
      real r28C9#1 = RAdd(r28C8,r2892);
      real r28CA#1 = RMul(realLit289E,r2897);
      real r28CB#1 = RAdd(r2896,r28CA);
      real r28CC#1 = RAdd(r28CB,r289A);
      tensor[3] tensor28CD#1 = <tensor[3]>[r28C6,r28C9,r28CC];
      real r28CE#1 = RMul(realLit28A6,r2885);
      real r28CF#1 = RAdd(r28CE,r2888);
      real r28D0#1 = RAdd(r28CF,r288A);
      real r28D1#1 = RMul(realLit28A6,r288D);
      real r28D2#1 = RAdd(r28D1,r2890);
      real r28D3#1 = RAdd(r28D2,r2892);
      real r28D4#1 = RMul(realLit28A6,r2895);
      real r28D5#1 = RAdd(r28D4,r2898);
      real r28D6#1 = RAdd(r28D5,r289A);
      tensor[3] tensor28D7#1 = <tensor[3]>[r28D0,r28D3,r28D6];
      tensor[3,3] tensor28D8#1 = <tensor[3,3]>[tensor28CD,tensor28D7,tensor289D];
      tensor[3,3,3] op1_e3_l_122883#27 = <tensor[3,3,3]>[tensor28B1,tensor28C3,tensor28D8];
      real r2931#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_1027CC);
      real r2932#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_122883);
      real r2933#1 = RMul(r2931,r2932);
      real r2934#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_1027CC);
      real r2935#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_122883);
      real r2936#1 = RMul(r2934,r2935);
      real r2937#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_1027CC);
      real r2938#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_122883);
      real r2939#1 = RMul(r2937,r2938);
      real r293A#1 = RAdd(r2933,r2936);
      real r293B#1 = RAdd(r293A,r2939);
      real r293C#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_122883);
      real r293D#1 = RMul(r2931,r293C);
      real r293E#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_122883);
      real r293F#1 = RMul(r2934,r293E);
      real r2940#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_122883);
      real r2941#1 = RMul(r2937,r2940);
      real r2942#1 = RAdd(r293D,r293F);
      real r2943#1 = RAdd(r2942,r2941);
      real r2944#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_122883);
      real r2945#1 = RMul(r2931,r2944);
      real r2946#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_122883);
      real r2947#1 = RMul(r2934,r2946);
      real r2948#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_122883);
      real r2949#1 = RMul(r2937,r2948);
      real r294A#1 = RAdd(r2945,r2947);
      real r294B#1 = RAdd(r294A,r2949);
      tensor[3] tensor294C#1 = <tensor[3]>[r293B,r2943,r294B];
      real r294D#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_122883);
      real r294E#1 = RMul(r2931,r294D);
      real r294F#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_122883);
      real r2950#1 = RMul(r2934,r294F);
      real r2951#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_122883);
      real r2952#1 = RMul(r2937,r2951);
      real r2953#1 = RAdd(r294E,r2950);
      real r2954#1 = RAdd(r2953,r2952);
      real r2955#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_122883);
      real r2956#1 = RMul(r2931,r2955);
      real r2957#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_122883);
      real r2958#1 = RMul(r2934,r2957);
      real r2959#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_122883);
      real r295A#1 = RMul(r2937,r2959);
      real r295B#1 = RAdd(r2956,r2958);
      real r295C#1 = RAdd(r295B,r295A);
      real r295D#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_122883);
      real r295E#1 = RMul(r2931,r295D);
      real r295F#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_122883);
      real r2960#1 = RMul(r2934,r295F);
      real r2961#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_122883);
      real r2962#1 = RMul(r2937,r2961);
      real r2963#1 = RAdd(r295E,r2960);
      real r2964#1 = RAdd(r2963,r2962);
      tensor[3] tensor2965#1 = <tensor[3]>[r2954,r295C,r2964];
      real r2966#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_122883);
      real r2967#1 = RMul(r2931,r2966);
      real r2968#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_122883);
      real r2969#1 = RMul(r2934,r2968);
      real r296A#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_122883);
      real r296B#1 = RMul(r2937,r296A);
      real r296C#1 = RAdd(r2967,r2969);
      real r296D#1 = RAdd(r296C,r296B);
      real r296E#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_122883);
      real r296F#1 = RMul(r2931,r296E);
      real r2970#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_122883);
      real r2971#1 = RMul(r2934,r2970);
      real r2972#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_122883);
      real r2973#1 = RMul(r2937,r2972);
      real r2974#1 = RAdd(r296F,r2971);
      real r2975#1 = RAdd(r2974,r2973);
      real r2976#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_122883);
      real r2977#1 = RMul(r2931,r2976);
      real r2978#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_122883);
      real r2979#1 = RMul(r2934,r2978);
      real r297A#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_122883);
      real r297B#1 = RMul(r2937,r297A);
      real r297C#1 = RAdd(r2977,r2979);
      real r297D#1 = RAdd(r297C,r297B);
      tensor[3] tensor297E#1 = <tensor[3]>[r296D,r2975,r297D];
      tensor[3,3] tensor297F#1 = <tensor[3,3]>[tensor294C,tensor2965,tensor297E];
      real r2980#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_1027CC);
      real r2981#1 = RMul(r2980,r2932);
      real r2982#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_1027CC);
      real r2983#1 = RMul(r2982,r2935);
      real r2984#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_1027CC);
      real r2985#1 = RMul(r2984,r2938);
      real r2986#1 = RAdd(r2981,r2983);
      real r2987#1 = RAdd(r2986,r2985);
      real r2988#1 = RMul(r2980,r293C);
      real r2989#1 = RMul(r2982,r293E);
      real r298A#1 = RMul(r2984,r2940);
      real r298B#1 = RAdd(r2988,r2989);
      real r298C#1 = RAdd(r298B,r298A);
      real r298D#1 = RMul(r2980,r2944);
      real r298E#1 = RMul(r2982,r2946);
      real r298F#1 = RMul(r2984,r2948);
      real r2990#1 = RAdd(r298D,r298E);
      real r2991#1 = RAdd(r2990,r298F);
      tensor[3] tensor2992#1 = <tensor[3]>[r2987,r298C,r2991];
      real r2993#1 = RMul(r2980,r294D);
      real r2994#1 = RMul(r2982,r294F);
      real r2995#1 = RMul(r2984,r2951);
      real r2996#1 = RAdd(r2993,r2994);
      real r2997#1 = RAdd(r2996,r2995);
      real r2998#1 = RMul(r2980,r2955);
      real r2999#1 = RMul(r2982,r2957);
      real r299A#1 = RMul(r2984,r2959);
      real r299B#1 = RAdd(r2998,r2999);
      real r299C#1 = RAdd(r299B,r299A);
      real r299D#1 = RMul(r2980,r295D);
      real r299E#1 = RMul(r2982,r295F);
      real r299F#1 = RMul(r2984,r2961);
      real r29A0#1 = RAdd(r299D,r299E);
      real r29A1#1 = RAdd(r29A0,r299F);
      tensor[3] tensor29A2#1 = <tensor[3]>[r2997,r299C,r29A1];
      real r29A3#1 = RMul(r2980,r2966);
      real r29A4#1 = RMul(r2982,r2968);
      real r29A5#1 = RMul(r2984,r296A);
      real r29A6#1 = RAdd(r29A3,r29A4);
      real r29A7#1 = RAdd(r29A6,r29A5);
      real r29A8#1 = RMul(r2980,r296E);
      real r29A9#1 = RMul(r2982,r2970);
      real r29AA#1 = RMul(r2984,r2972);
      real r29AB#1 = RAdd(r29A8,r29A9);
      real r29AC#1 = RAdd(r29AB,r29AA);
      real r29AD#1 = RMul(r2980,r2976);
      real r29AE#1 = RMul(r2982,r2978);
      real r29AF#1 = RMul(r2984,r297A);
      real r29B0#1 = RAdd(r29AD,r29AE);
      real r29B1#1 = RAdd(r29B0,r29AF);
      tensor[3] tensor29B2#1 = <tensor[3]>[r29A7,r29AC,r29B1];
      tensor[3,3] tensor29B3#1 = <tensor[3,3]>[tensor2992,tensor29A2,tensor29B2];
      real r29B4#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_1027CC);
      real r29B5#1 = RMul(r29B4,r2932);
      real r29B6#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_1027CC);
      real r29B7#1 = RMul(r29B6,r2935);
      real r29B8#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_1027CC);
      real r29B9#1 = RMul(r29B8,r2938);
      real r29BA#1 = RAdd(r29B5,r29B7);
      real r29BB#1 = RAdd(r29BA,r29B9);
      real r29BC#1 = RMul(r29B4,r293C);
      real r29BD#1 = RMul(r29B6,r293E);
      real r29BE#1 = RMul(r29B8,r2940);
      real r29BF#1 = RAdd(r29BC,r29BD);
      real r29C0#1 = RAdd(r29BF,r29BE);
      real r29C1#1 = RMul(r29B4,r2944);
      real r29C2#1 = RMul(r29B6,r2946);
      real r29C3#1 = RMul(r29B8,r2948);
      real r29C4#1 = RAdd(r29C1,r29C2);
      real r29C5#1 = RAdd(r29C4,r29C3);
      tensor[3] tensor29C6#1 = <tensor[3]>[r29BB,r29C0,r29C5];
      real r29C7#1 = RMul(r29B4,r294D);
      real r29C8#1 = RMul(r29B6,r294F);
      real r29C9#1 = RMul(r29B8,r2951);
      real r29CA#1 = RAdd(r29C7,r29C8);
      real r29CB#1 = RAdd(r29CA,r29C9);
      real r29CC#1 = RMul(r29B4,r2955);
      real r29CD#1 = RMul(r29B6,r2957);
      real r29CE#1 = RMul(r29B8,r2959);
      real r29CF#1 = RAdd(r29CC,r29CD);
      real r29D0#1 = RAdd(r29CF,r29CE);
      real r29D1#1 = RMul(r29B4,r295D);
      real r29D2#1 = RMul(r29B6,r295F);
      real r29D3#1 = RMul(r29B8,r2961);
      real r29D4#1 = RAdd(r29D1,r29D2);
      real r29D5#1 = RAdd(r29D4,r29D3);
      tensor[3] tensor29D6#1 = <tensor[3]>[r29CB,r29D0,r29D5];
      real r29D7#1 = RMul(r29B4,r2966);
      real r29D8#1 = RMul(r29B6,r2968);
      real r29D9#1 = RMul(r29B8,r296A);
      real r29DA#1 = RAdd(r29D7,r29D8);
      real r29DB#1 = RAdd(r29DA,r29D9);
      real r29DC#1 = RMul(r29B4,r296E);
      real r29DD#1 = RMul(r29B6,r2970);
      real r29DE#1 = RMul(r29B8,r2972);
      real r29DF#1 = RAdd(r29DC,r29DD);
      real r29E0#1 = RAdd(r29DF,r29DE);
      real r29E1#1 = RMul(r29B4,r2976);
      real r29E2#1 = RMul(r29B6,r2978);
      real r29E3#1 = RMul(r29B8,r297A);
      real r29E4#1 = RAdd(r29E1,r29E2);
      real r29E5#1 = RAdd(r29E4,r29E3);
      tensor[3] tensor29E6#1 = <tensor[3]>[r29DB,r29E0,r29E5];
      tensor[3,3] tensor29E7#1 = <tensor[3,3]>[tensor29C6,tensor29D6,tensor29E6];
      tensor[3,3,3] op1_e3_l_132930#27 = <tensor[3,3,3]>[tensor297F,tensor29B3,tensor29E7];
      real r2AA2#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r2AA3#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult27AE);
      real r2AA4#1 = RMul(r2AA2,r2AA3);
      real r2AA5#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r2AA6#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult27AE);
      real r2AA7#1 = RMul(r2AA5,r2AA6);
      real r2AA8#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r2AA9#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult27AE);
      real r2AAA#1 = RMul(r2AA8,r2AA9);
      real r2AAB#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r2AAC#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult27AE);
      real r2AAD#1 = RMul(r2AAB,r2AAC);
      real r2AAE#1 = RAdd(r2AA4,r2AA7);
      real r2AAF#1 = RAdd(r2AAE,r2AAA);
      real r2AB0#1 = RAdd(r2AAF,r2AAD);
      real r2AB1#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r2AB2#1 = RMul(r2AB1,r2AA3);
      real r2AB3#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r2AB4#1 = RMul(r2AB3,r2AA6);
      real r2AB5#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r2AB6#1 = RMul(r2AB5,r2AA9);
      real r2AB7#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r2AB8#1 = RMul(r2AB7,r2AAC);
      real r2AB9#1 = RAdd(r2AB2,r2AB4);
      real r2ABA#1 = RAdd(r2AB9,r2AB6);
      real r2ABB#1 = RAdd(r2ABA,r2AB8);
      real r2ABC#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r2ABD#1 = RMul(r2ABC,r2AA3);
      real r2ABE#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2ABF#1 = RMul(r2ABE,r2AA6);
      real r2AC0#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2AC1#1 = RMul(r2AC0,r2AA9);
      real r2AC2#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2AC3#1 = RMul(r2AC2,r2AAC);
      real r2AC4#1 = RAdd(r2ABD,r2ABF);
      real r2AC5#1 = RAdd(r2AC4,r2AC1);
      real r2AC6#1 = RAdd(r2AC5,r2AC3);
      tensor[3] probe_l_142AA1#1 = <tensor[3]>[r2AB0,r2ABB,r2AC6];
      real r2AEF#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r2AF0#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult27AE);
      real r2AF1#1 = RMul(r2AEF,r2AF0);
      real r2AF2#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r2AF3#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult27AE);
      real r2AF4#1 = RMul(r2AF2,r2AF3);
      real r2AF5#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r2AF6#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult27AE);
      real r2AF7#1 = RMul(r2AF5,r2AF6);
      real r2AF8#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r2AF9#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult27AE);
      real r2AFA#1 = RMul(r2AF8,r2AF9);
      real r2AFB#1 = RAdd(r2AF1,r2AF4);
      real r2AFC#1 = RAdd(r2AFB,r2AF7);
      real r2AFD#1 = RAdd(r2AFC,r2AFA);
      real r2AFE#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r2AFF#1 = RMul(r2AFE,r2AF0);
      real r2B00#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r2B01#1 = RMul(r2B00,r2AF3);
      real r2B02#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r2B03#1 = RMul(r2B02,r2AF6);
      real r2B04#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r2B05#1 = RMul(r2B04,r2AF9);
      real r2B06#1 = RAdd(r2AFF,r2B01);
      real r2B07#1 = RAdd(r2B06,r2B03);
      real r2B08#1 = RAdd(r2B07,r2B05);
      real r2B09#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r2B0A#1 = RMul(r2B09,r2AF0);
      real r2B0B#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2B0C#1 = RMul(r2B0B,r2AF3);
      real r2B0D#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2B0E#1 = RMul(r2B0D,r2AF6);
      real r2B0F#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2B10#1 = RMul(r2B0F,r2AF9);
      real r2B11#1 = RAdd(r2B0A,r2B0C);
      real r2B12#1 = RAdd(r2B11,r2B0E);
      real r2B13#1 = RAdd(r2B12,r2B10);
      tensor[3] probe_l_152AEE#3 = <tensor[3]>[r2AFD,r2B08,r2B13];
      real r2B3C#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r2B3D#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult27AE);
      real r2B3E#1 = RMul(r2B3C,r2B3D);
      real r2B3F#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r2B40#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult27AE);
      real r2B41#1 = RMul(r2B3F,r2B40);
      real r2B42#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r2B43#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult27AE);
      real r2B44#1 = RMul(r2B42,r2B43);
      real r2B45#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r2B46#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult27AE);
      real r2B47#1 = RMul(r2B45,r2B46);
      real r2B48#1 = RAdd(r2B3E,r2B41);
      real r2B49#1 = RAdd(r2B48,r2B44);
      real r2B4A#1 = RAdd(r2B49,r2B47);
      real r2B4B#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r2B4C#1 = RMul(r2B4B,r2B3D);
      real r2B4D#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r2B4E#1 = RMul(r2B4D,r2B40);
      real r2B4F#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r2B50#1 = RMul(r2B4F,r2B43);
      real r2B51#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r2B52#1 = RMul(r2B51,r2B46);
      real r2B53#1 = RAdd(r2B4C,r2B4E);
      real r2B54#1 = RAdd(r2B53,r2B50);
      real r2B55#1 = RAdd(r2B54,r2B52);
      real r2B56#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r2B57#1 = RMul(r2B56,r2B3D);
      real r2B58#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2B59#1 = RMul(r2B58,r2B40);
      real r2B5A#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2B5B#1 = RMul(r2B5A,r2B43);
      real r2B5C#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2B5D#1 = RMul(r2B5C,r2B46);
      real r2B5E#1 = RAdd(r2B57,r2B59);
      real r2B5F#1 = RAdd(r2B5E,r2B5B);
      real r2B60#1 = RAdd(r2B5F,r2B5D);
      tensor[3] probe_l_162B3B#3 = <tensor[3]>[r2B4A,r2B55,r2B60];
      real realLit2B89#3 = 0.e0;
      real r2B8A#3 = TensorIndex<tensor[3],[0]>(probe_l_162B3B);
      real r2B8B#3 = RMul(realLit2B89,r2B8A);
      real r2B8C#3 = TensorIndex<tensor[3],[1]>(probe_l_162B3B);
      real r2B8D#3 = RMul(realLit2B89,r2B8C);
      real r2B8E#3 = TensorIndex<tensor[3],[2]>(probe_l_162B3B);
      real r2B8F#5 = RMul(realLit2B89,r2B8E);
      real r2B90#3 = RAdd(r2B8B,r2B8D);
      real r2B91#3 = RAdd(r2B90,r2B8F);
      real realLit2B92#3 = 0.1e1;
      real r2B93#1 = RMul(realLit2B92,r2B8E);
      real r2B94#1 = RAdd(r2B90,r2B93);
      real realLit2B95#3 = -0.1e1;
      real r2B96#1 = RMul(realLit2B95,r2B8C);
      real r2B97#1 = RAdd(r2B8B,r2B96);
      real r2B98#1 = RAdd(r2B97,r2B8F);
      tensor[3] tensor2B99#1 = <tensor[3]>[r2B91,r2B94,r2B98];
      real r2B9A#1 = RMul(realLit2B95,r2B8E);
      real r2B9B#1 = RAdd(r2B90,r2B9A);
      real r2B9C#1 = RMul(realLit2B92,r2B8A);
      real r2B9D#1 = RAdd(r2B9C,r2B8D);
      real r2B9E#1 = RAdd(r2B9D,r2B8F);
      tensor[3] tensor2B9F#1 = <tensor[3]>[r2B9B,r2B91,r2B9E];
      real r2BA0#1 = RMul(realLit2B92,r2B8C);
      real r2BA1#1 = RAdd(r2B8B,r2BA0);
      real r2BA2#1 = RAdd(r2BA1,r2B8F);
      real r2BA3#1 = RMul(realLit2B95,r2B8A);
      real r2BA4#1 = RAdd(r2BA3,r2B8D);
      real r2BA5#1 = RAdd(r2BA4,r2B8F);
      tensor[3] tensor2BA6#1 = <tensor[3]>[r2BA2,r2BA5,r2B91];
      tensor[3,3] op1_e3_l_172B88#3 = <tensor[3,3]>[tensor2B99,tensor2B9F,tensor2BA6];
      tensor[3] projParam2BC8#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_172B88);
      real vdot2BC9#1 = VDot<3>(probe_l_152AEE,projParam2BC8);
      tensor[3] projParam2BCA#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_172B88);
      real vdot2BCB#1 = VDot<3>(probe_l_152AEE,projParam2BCA);
      tensor[3] projParam2BCC#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_172B88);
      real vdot2BCD#1 = VDot<3>(probe_l_152AEE,projParam2BCC);
      tensor[3] op1_e3_l_182BC7#1 = <tensor[3]>[vdot2BC9,vdot2BCB,vdot2BCD];
      real op1_e3_l_192BD6#1 = VDot<3>(probe_l_142AA1,op1_e3_l_182BC7);
      real realLit2BDA#27 = 0.e0;
      real r2BDB#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_132930);
      real r2BDC#2 = RMul(realLit2BDA,r2BDB);
      real r2BDD#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_132930);
      real r2BDE#1 = RMul(realLit2BDA,r2BDD);
      real r2BDF#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_132930);
      real r2BE0#2 = RMul(realLit2BDA,r2BDF);
      real r2BE1#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_132930);
      real r2BE2#2 = RMul(realLit2BDA,r2BE1);
      real r2BE3#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_132930);
      real r2BE4#3 = RMul(realLit2BDA,r2BE3);
      real realLit2BE5#9 = 0.1e1;
      real r2BE6#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_132930);
      real r2BE7#1 = RMul(realLit2BE5,r2BE6);
      real r2BE8#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_132930);
      real r2BE9#2 = RMul(realLit2BDA,r2BE8);
      real realLit2BEA#9 = -0.1e1;
      real r2BEB#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_132930);
      real r2BEC#1 = RMul(realLit2BEA,r2BEB);
      real r2BED#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_132930);
      real r2BEE#3 = RMul(realLit2BDA,r2BED);
      real r2BEF#2 = RAdd(r2BDC,r2BDE);
      real r2BF0#1 = RAdd(r2BEF,r2BE0);
      real r2BF1#1 = RAdd(r2BF0,r2BE2);
      real r2BF2#1 = RAdd(r2BF1,r2BE4);
      real r2BF3#1 = RAdd(r2BF2,r2BE7);
      real r2BF4#1 = RAdd(r2BF3,r2BE9);
      real r2BF5#1 = RAdd(r2BF4,r2BEC);
      real r2BF6#1 = RAdd(r2BF5,r2BEE);
      real r2BF7#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_132930);
      real r2BF8#2 = RMul(realLit2BDA,r2BF7);
      real r2BF9#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_132930);
      real r2BFA#1 = RMul(realLit2BDA,r2BF9);
      real r2BFB#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_132930);
      real r2BFC#2 = RMul(realLit2BDA,r2BFB);
      real r2BFD#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_132930);
      real r2BFE#2 = RMul(realLit2BDA,r2BFD);
      real r2BFF#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_132930);
      real r2C00#3 = RMul(realLit2BDA,r2BFF);
      real r2C01#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_132930);
      real r2C02#1 = RMul(realLit2BE5,r2C01);
      real r2C03#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_132930);
      real r2C04#2 = RMul(realLit2BDA,r2C03);
      real r2C05#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_132930);
      real r2C06#1 = RMul(realLit2BEA,r2C05);
      real r2C07#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_132930);
      real r2C08#3 = RMul(realLit2BDA,r2C07);
      real r2C09#2 = RAdd(r2BF8,r2BFA);
      real r2C0A#1 = RAdd(r2C09,r2BFC);
      real r2C0B#1 = RAdd(r2C0A,r2BFE);
      real r2C0C#1 = RAdd(r2C0B,r2C00);
      real r2C0D#1 = RAdd(r2C0C,r2C02);
      real r2C0E#1 = RAdd(r2C0D,r2C04);
      real r2C0F#1 = RAdd(r2C0E,r2C06);
      real r2C10#1 = RAdd(r2C0F,r2C08);
      real r2C11#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_132930);
      real r2C12#2 = RMul(realLit2BDA,r2C11);
      real r2C13#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_132930);
      real r2C14#1 = RMul(realLit2BDA,r2C13);
      real r2C15#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_132930);
      real r2C16#2 = RMul(realLit2BDA,r2C15);
      real r2C17#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_132930);
      real r2C18#2 = RMul(realLit2BDA,r2C17);
      real r2C19#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_132930);
      real r2C1A#3 = RMul(realLit2BDA,r2C19);
      real r2C1B#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_132930);
      real r2C1C#1 = RMul(realLit2BE5,r2C1B);
      real r2C1D#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_132930);
      real r2C1E#2 = RMul(realLit2BDA,r2C1D);
      real r2C1F#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_132930);
      real r2C20#1 = RMul(realLit2BEA,r2C1F);
      real r2C21#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_132930);
      real r2C22#3 = RMul(realLit2BDA,r2C21);
      real r2C23#2 = RAdd(r2C12,r2C14);
      real r2C24#1 = RAdd(r2C23,r2C16);
      real r2C25#1 = RAdd(r2C24,r2C18);
      real r2C26#1 = RAdd(r2C25,r2C1A);
      real r2C27#1 = RAdd(r2C26,r2C1C);
      real r2C28#1 = RAdd(r2C27,r2C1E);
      real r2C29#1 = RAdd(r2C28,r2C20);
      real r2C2A#1 = RAdd(r2C29,r2C22);
      tensor[3] tensor2C2B#1 = <tensor[3]>[r2BF6,r2C10,r2C2A];
      real r2C2C#1 = RMul(realLit2BEA,r2BDF);
      real r2C2D#2 = RMul(realLit2BDA,r2BE6);
      real r2C2E#1 = RMul(realLit2BE5,r2BE8);
      real r2C2F#2 = RMul(realLit2BDA,r2BEB);
      real r2C30#1 = RAdd(r2BEF,r2C2C);
      real r2C31#1 = RAdd(r2C30,r2BE2);
      real r2C32#1 = RAdd(r2C31,r2BE4);
      real r2C33#1 = RAdd(r2C32,r2C2D);
      real r2C34#1 = RAdd(r2C33,r2C2E);
      real r2C35#1 = RAdd(r2C34,r2C2F);
      real r2C36#1 = RAdd(r2C35,r2BEE);
      real r2C37#1 = RMul(realLit2BEA,r2BFB);
      real r2C38#2 = RMul(realLit2BDA,r2C01);
      real r2C39#1 = RMul(realLit2BE5,r2C03);
      real r2C3A#2 = RMul(realLit2BDA,r2C05);
      real r2C3B#1 = RAdd(r2C09,r2C37);
      real r2C3C#1 = RAdd(r2C3B,r2BFE);
      real r2C3D#1 = RAdd(r2C3C,r2C00);
      real r2C3E#1 = RAdd(r2C3D,r2C38);
      real r2C3F#1 = RAdd(r2C3E,r2C39);
      real r2C40#1 = RAdd(r2C3F,r2C3A);
      real r2C41#1 = RAdd(r2C40,r2C08);
      real r2C42#1 = RMul(realLit2BEA,r2C15);
      real r2C43#2 = RMul(realLit2BDA,r2C1B);
      real r2C44#1 = RMul(realLit2BE5,r2C1D);
      real r2C45#2 = RMul(realLit2BDA,r2C1F);
      real r2C46#1 = RAdd(r2C23,r2C42);
      real r2C47#1 = RAdd(r2C46,r2C18);
      real r2C48#1 = RAdd(r2C47,r2C1A);
      real r2C49#1 = RAdd(r2C48,r2C43);
      real r2C4A#1 = RAdd(r2C49,r2C44);
      real r2C4B#1 = RAdd(r2C4A,r2C45);
      real r2C4C#1 = RAdd(r2C4B,r2C22);
      tensor[3] tensor2C4D#1 = <tensor[3]>[r2C36,r2C41,r2C4C];
      real r2C4E#1 = RMul(realLit2BE5,r2BDD);
      real r2C4F#1 = RMul(realLit2BEA,r2BE1);
      real r2C50#1 = RAdd(r2BDC,r2C4E);
      real r2C51#1 = RAdd(r2C50,r2BE0);
      real r2C52#1 = RAdd(r2C51,r2C4F);
      real r2C53#1 = RAdd(r2C52,r2BE4);
      real r2C54#1 = RAdd(r2C53,r2C2D);
      real r2C55#1 = RAdd(r2C54,r2BE9);
      real r2C56#1 = RAdd(r2C55,r2C2F);
      real r2C57#1 = RAdd(r2C56,r2BEE);
      real r2C58#1 = RMul(realLit2BE5,r2BF9);
      real r2C59#1 = RMul(realLit2BEA,r2BFD);
      real r2C5A#1 = RAdd(r2BF8,r2C58);
      real r2C5B#1 = RAdd(r2C5A,r2BFC);
      real r2C5C#1 = RAdd(r2C5B,r2C59);
      real r2C5D#1 = RAdd(r2C5C,r2C00);
      real r2C5E#1 = RAdd(r2C5D,r2C38);
      real r2C5F#1 = RAdd(r2C5E,r2C04);
      real r2C60#1 = RAdd(r2C5F,r2C3A);
      real r2C61#1 = RAdd(r2C60,r2C08);
      real r2C62#1 = RMul(realLit2BE5,r2C13);
      real r2C63#1 = RMul(realLit2BEA,r2C17);
      real r2C64#1 = RAdd(r2C12,r2C62);
      real r2C65#1 = RAdd(r2C64,r2C16);
      real r2C66#1 = RAdd(r2C65,r2C63);
      real r2C67#1 = RAdd(r2C66,r2C1A);
      real r2C68#1 = RAdd(r2C67,r2C43);
      real r2C69#1 = RAdd(r2C68,r2C1E);
      real r2C6A#1 = RAdd(r2C69,r2C45);
      real r2C6B#1 = RAdd(r2C6A,r2C22);
      tensor[3] tensor2C6C#1 = <tensor[3]>[r2C57,r2C61,r2C6B];
      tensor[3,3] op1_e3_l_202BD9#9 = <tensor[3,3]>[tensor2C2B,tensor2C4D,tensor2C6C];
      real realLit2D03#1 = 0.2e1;
      real op1_e3_l_212D02#9 = RMul(realLit2D03,op1_e3_l_192BD6);
      real varAcc2D09#1 = VIndex<3,0>(xn2D08);
      real varAcc2D0A#1 = VIndex<3,1>(xn2D08);
      real varAcc2D0B#1 = VIndex<3,2>(xn2D08);
      real coeff2D0C#3 = -0.1e1;
      real iden2D0D#1 = varAcc2D09;
      real one2D0E#11 = 0.1e1;
      real prod2D0F#2 = RMul(one2D0E,one2D0E);
      real prod2D10#2 = RMul(iden2D0D,prod2D0F);
      real iden2D11#1 = varAcc2D0A;
      real prod2D12#1 = RMul(iden2D11,one2D0E);
      real prod2D13#2 = RMul(one2D0E,prod2D12);
      real iden2D14#1 = varAcc2D0B;
      real prod2D15#1 = RMul(one2D0E,iden2D14);
      real prod2D16#2 = RMul(one2D0E,prod2D15);
      real prod2D17#1 = RMul(one2D0E,prod2D0F);
      real mult2D18#1 = RMul(one2D0E,prod2D17);
      real mult2D19#1 = RMul(coeff2D0C,prod2D16);
      real mult2D1A#1 = RMul(coeff2D0C,prod2D13);
      real mult2D1B#1 = RMul(coeff2D0C,prod2D10);
      real sum2D1C#1 = RAdd(mult2D1A,mult2D1B);
      real sum2D1D#1 = RAdd(mult2D19,sum2D1C);
      real sum2D1E#1 = RAdd(mult2D18,sum2D1D);
      real intermediate2D1F#1 = sum2D1E;
      real basisEval2D20#1 = RMul(one2D0E,prod2D10);
      real basisEval2D21#1 = RMul(one2D0E,prod2D13);
      real basisEval2D22#1 = RMul(one2D0E,prod2D16);
      tensor[4] intermediateCons2D23#1 = <tensor[4]>[intermediate2D1F,basisEval2D20,basisEval2D21,basisEval2D22];
      tensor[4] basisResult2D07#8 = intermediateCons2D23;
      real r2D41#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r2D42#3 = TensorIndex<tensor[4],[0]>(basisResult2D07);
      real r2D43#1 = RMul(r2D41,r2D42);
      real r2D44#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r2D45#3 = TensorIndex<tensor[4],[1]>(basisResult2D07);
      real r2D46#1 = RMul(r2D44,r2D45);
      real r2D47#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r2D48#3 = TensorIndex<tensor[4],[2]>(basisResult2D07);
      real r2D49#1 = RMul(r2D47,r2D48);
      real r2D4A#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r2D4B#3 = TensorIndex<tensor[4],[3]>(basisResult2D07);
      real r2D4C#1 = RMul(r2D4A,r2D4B);
      real r2D4D#1 = RAdd(r2D43,r2D46);
      real r2D4E#1 = RAdd(r2D4D,r2D49);
      real r2D4F#1 = RAdd(r2D4E,r2D4C);
      real r2D50#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r2D51#1 = RMul(r2D50,r2D42);
      real r2D52#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r2D53#1 = RMul(r2D52,r2D45);
      real r2D54#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r2D55#1 = RMul(r2D54,r2D48);
      real r2D56#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r2D57#1 = RMul(r2D56,r2D4B);
      real r2D58#1 = RAdd(r2D51,r2D53);
      real r2D59#1 = RAdd(r2D58,r2D55);
      real r2D5A#1 = RAdd(r2D59,r2D57);
      real r2D5B#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r2D5C#1 = RMul(r2D5B,r2D42);
      real r2D5D#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2D5E#1 = RMul(r2D5D,r2D45);
      real r2D5F#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2D60#1 = RMul(r2D5F,r2D48);
      real r2D61#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2D62#1 = RMul(r2D61,r2D4B);
      real r2D63#1 = RAdd(r2D5C,r2D5E);
      real r2D64#1 = RAdd(r2D63,r2D60);
      real r2D65#1 = RAdd(r2D64,r2D62);
      tensor[3] probe_l_222D40#1 = <tensor[3]>[r2D4F,r2D5A,r2D65];
      real r2D8E#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_202BD9);
      real r2D8F#1 = RDiv(r2D8E,op1_e3_l_212D02);
      real r2D90#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_202BD9);
      real r2D91#1 = RDiv(r2D90,op1_e3_l_212D02);
      real r2D92#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_202BD9);
      real r2D93#1 = RDiv(r2D92,op1_e3_l_212D02);
      tensor[3] tensor2D94#1 = <tensor[3]>[r2D8F,r2D91,r2D93];
      real r2D95#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_202BD9);
      real r2D96#1 = RDiv(r2D95,op1_e3_l_212D02);
      real r2D97#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_202BD9);
      real r2D98#1 = RDiv(r2D97,op1_e3_l_212D02);
      real r2D99#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_202BD9);
      real r2D9A#1 = RDiv(r2D99,op1_e3_l_212D02);
      tensor[3] tensor2D9B#1 = <tensor[3]>[r2D96,r2D98,r2D9A];
      real r2D9C#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_202BD9);
      real r2D9D#1 = RDiv(r2D9C,op1_e3_l_212D02);
      real r2D9E#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_202BD9);
      real r2D9F#1 = RDiv(r2D9E,op1_e3_l_212D02);
      real r2DA0#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_202BD9);
      real r2DA1#1 = RDiv(r2DA0,op1_e3_l_212D02);
      tensor[3] tensor2DA2#1 = <tensor[3]>[r2D9D,r2D9F,r2DA1];
      tensor[3,3] op1_e3_l_232D8D#6 = <tensor[3,3]>[tensor2D94,tensor2D9B,tensor2DA2];
      tensor[3] op1_e3_l_242DBA#3 = VSub<3>(probe_l_222D40,pos1FE6);
      tensor[3] projParam2DBE#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232D8D);
      real vdot2DBF#1 = VDot<3>(projParam2DBE,op1_e3_l_242DBA);
      tensor[3] projParam2DC0#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232D8D);
      real vdot2DC1#1 = VDot<3>(projParam2DC0,op1_e3_l_242DBA);
      tensor[3] projParam2DC2#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232D8D);
      real vdot2DC3#1 = VDot<3>(projParam2DC2,op1_e3_l_242DBA);
      tensor[3] op1_e3_l_252DBD#1 = <tensor[3]>[vdot2DBF,vdot2DC1,vdot2DC3];
      tensor[3] xn2DCC#4 = VSub<3>(xn2D08,op1_e3_l_252DBD);
      real _t2DCF#2 = 0.1e-7;
      real _t2DD1#1 = RMul(_t2DCF,_t2DCF);
      real r2DD5#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs275A);
      real r2DD6#3 = TensorIndex<tensor[4],[0]>(basisResult2D07);
      real r2DD7#1 = RMul(r2DD5,r2DD6);
      real r2DD8#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs275A);
      real r2DD9#3 = TensorIndex<tensor[4],[1]>(basisResult2D07);
      real r2DDA#1 = RMul(r2DD8,r2DD9);
      real r2DDB#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs275A);
      real r2DDC#3 = TensorIndex<tensor[4],[2]>(basisResult2D07);
      real r2DDD#1 = RMul(r2DDB,r2DDC);
      real r2DDE#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs275A);
      real r2DDF#3 = TensorIndex<tensor[4],[3]>(basisResult2D07);
      real r2DE0#1 = RMul(r2DDE,r2DDF);
      real r2DE1#1 = RAdd(r2DD7,r2DDA);
      real r2DE2#1 = RAdd(r2DE1,r2DDD);
      real r2DE3#1 = RAdd(r2DE2,r2DE0);
      real r2DE4#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs275A);
      real r2DE5#1 = RMul(r2DE4,r2DD6);
      real r2DE6#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs275A);
      real r2DE7#1 = RMul(r2DE6,r2DD9);
      real r2DE8#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs275A);
      real r2DE9#1 = RMul(r2DE8,r2DDC);
      real r2DEA#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs275A);
      real r2DEB#1 = RMul(r2DEA,r2DDF);
      real r2DEC#1 = RAdd(r2DE5,r2DE7);
      real r2DED#1 = RAdd(r2DEC,r2DE9);
      real r2DEE#1 = RAdd(r2DED,r2DEB);
      real r2DEF#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs275A);
      real r2DF0#1 = RMul(r2DEF,r2DD6);
      real r2DF1#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs275A);
      real r2DF2#1 = RMul(r2DF1,r2DD9);
      real r2DF3#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs275A);
      real r2DF4#1 = RMul(r2DF3,r2DDC);
      real r2DF5#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs275A);
      real r2DF6#1 = RMul(r2DF5,r2DDF);
      real r2DF7#1 = RAdd(r2DF0,r2DF2);
      real r2DF8#1 = RAdd(r2DF7,r2DF4);
      real r2DF9#1 = RAdd(r2DF8,r2DF6);
      tensor[3] probe_l_302DD4#1 = <tensor[3]>[r2DE3,r2DEE,r2DF9];
      tensor[3] op1_e3_l_322E21#3 = VSub<3>(probe_l_302DD4,pos1FE6);
      tensor[3] projParam2E25#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_232D8D);
      real vdot2E26#1 = VDot<3>(projParam2E25,op1_e3_l_322E21);
      tensor[3] projParam2E27#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_232D8D);
      real vdot2E28#1 = VDot<3>(projParam2E27,op1_e3_l_322E21);
      tensor[3] projParam2E29#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_232D8D);
      real vdot2E2A#1 = VDot<3>(projParam2E29,op1_e3_l_322E21);
      tensor[3] op1_e3_l_482E24#2 = <tensor[3]>[vdot2E26,vdot2E28,vdot2E2A];
      real _t2E33#1 = VDot<3>(op1_e3_l_482E24,op1_e3_l_482E24);
      bool _t2E36#1 = GTE<real>(_t2DD1,_t2E33);
      if _t2E36 then goto ASSIGN2E3A else goto JOIN2E65
    ASSIGN2E3A:  preds = [COND2E38]
      real _t2E39#4 = 0.1e1;
      real _t2E3B#4 = 0.1e-4;
      real _t2E3D#1 = RAdd(_t2E39,_t2E3B);
      tensor[3] _t2E40#1 = <tensor[3]>[_t2E39,_t2E39,_t2E39];
      real _t2E42#1 = VDot<3>(_t2E40,xn2DCC);
      bool _t2E45#1 = GT<real>(_t2E3D,_t2E42);
      tensor[3] _t2E47#1 = <tensor[3]>[_t2E3B,_t2E3B,_t2E3B];
      tensor[3] _t2E49#3 = VAdd<3>(_t2E47,xn2DCC);
      real _t2E4C#1 = VIndex<3,0>(_t2E49);
      real _t2E4E#3 = -0.e0;
      bool _t2E50#1 = GT<real>(_t2E4C,_t2E4E);
      real _t2E52#1 = VIndex<3,1>(_t2E49);
      bool _t2E54#1 = GT<real>(_t2E52,_t2E4E);
      real _t2E56#1 = VIndex<3,2>(_t2E49);
      bool _t2E58#1 = GT<real>(_t2E56,_t2E4E);
      bool _t2E5A#1 = BAnd(_t2E54,_t2E58);
      bool _t2E5C#1 = BAnd(_t2E50,_t2E5A);
      bool _t2E5E#1 = BAnd(_t2E45,_t2E5C);
      if _t2E5E then goto ASSIGN2E62 else goto JOIN2E64
    ASSIGN2E62:  preds = [COND2E60]
      femData:MeshPos _t2E61#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellInt273A,xn2DCC,pos1FE6);
      return _t2E61
      goto JOIN2E64
    JOIN2E64:  preds = [*RETURN(_t2E61)2E63,COND2E60]
      goto JOIN2E65
    JOIN2E65:  preds = [JOIN2E64,COND2E38]
      int newtonInt2E66#2 = IAdd(newtonInt2E67,_t1FF2);
      bool _t2E69#1 = GTE<int>(newtonInt2E66,_t272F);
      if _t2E69 then goto ASSIGN2E6D else goto JOIN2E77
    ASSIGN2E6D:  preds = [COND2E6B]
      bool _t2E6C#1 = GTE<int>(cellInt273A,numCell1FF4);
      if _t2E6C then goto ASSIGN2E70 else goto ASSIGN2E79
    ASSIGN2E70:  preds = [COND2E6E]
      femData:MeshPos _t2E6F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E6F
      goto JOIN2E74
    JOIN2E74:  preds = [*RETURN(_t2E6F)2E71,ASSIGN2E79]
      int cellInt2E72#1 = phi(cellInt2E73)
      goto JOIN2E77
    JOIN2E77:  preds = [JOIN2E74,COND2E6B]
      int cellInt2E75#1 = phi(cellInt2E72,cellInt273A)
      int newtonInt2E76#1 = phi(newtonInt1FEC,newtonInt2E66)
      goto FOREACH2738
    ASSIGN2E79:  preds = [COND2E6E]
      int cellInt2E73#1 = IAdd(cellInt273A,_t1FF2);
      goto JOIN2E74
    ASSIGN2E7B:  preds = [FOREACH2738]
      string _t2E7A#1 = "Bad end 2";
      string _t2E7C#1 = "\n";
      Print<[string,string]>(_t2E7A,_t2E7C);
      femData:MeshPos _t2E7F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E7F
}
## input initialization
  ENTRY1D28:  preds = []
    real isoval1D29#1 = 0.2e0;
    globals.isoval1D09 = isoval1D29;
    real thick1D2C#1 = 0.7e-1;
    globals.thick1D0A = thick1D2C;
    real _t1D2F#2 = 0.3e1;
    real _t1D31#1 = -0.3e1;
    tensor[3] camEye1D33#1 = <tensor[3]>[_t1D2F,_t1D31,_t1D2F];
    globals.camEye1D0B = camEye1D33;
    real _t1D36#3 = 0.5e0;
    tensor[3] camAt1D38#1 = <tensor[3]>[_t1D36,_t1D36,_t1D36];
    globals.camAt1D0C = camAt1D38;
    real _t1D3B#2 = 0.e0;
    real _t1D3D#2 = 0.1e1;
    tensor[3] camUp1D3F#2 = <tensor[3]>[_t1D3B,_t1D3B,_t1D3D];
    globals.camUp1D0D = camUp1D3F;
    real camFOV1D42#1 = 0.137e2;
    globals.camFOV1D0E = camFOV1D42;
    int iresU1D45#2 = 500;
    globals.iresU1D0F = iresU1D45;
    globals.iresV1D10 = iresU1D45;
    real camNear1D49#1 = -0.2e1;
    globals.camNear1D11 = camNear1D49;
    real camFar1D4C#1 = 0.5e1;
    globals.camFar1D12 = camFar1D4C;
    globals.refStep1D13 = _t1D3D;
    real rayStep1D50#1 = 0.1e-1;
    globals.rayStep1D14 = rayStep1D50;
    globals.lightVsp1D15 = camUp1D3F;
    real phongKa1D54#1 = 0.1e0;
    globals.phongKa1D16 = phongKa1D54;
    real phongKd1D57#1 = 0.9e0;
    globals.phongKd1D17 = phongKd1D57;
    bool debug1D5A#1 = false;
    globals.debug1D18 = debug1D5A;
    int su1D5D#2 = 250;
    globals.su1D19 = su1D5D;
    globals.sv1D1A = su1D5D;
    return
## global-variable initialization
  ENTRY1D62:  preds = []
    femData:Mesh a1D63#3 = globals.a1D06;
    femData:Space 0b043B_intermedateGlobal1D65#1 = globals.0b043B_intermedateGlobal1D07;
    femData:FemFunc 0c043D_intermedateGlobal1D67#1 = globals.0c043D_intermedateGlobal1D08;
    tensor[3] camEye1D69#1 = globals.camEye1D0B;
    tensor[3] camAt1D6B#1 = globals.camAt1D0C;
    tensor[3] camUp1D6D#3 = globals.camUp1D0D;
    real camFOV1D6F#1 = globals.camFOV1D0E;
    int iresU1D71#1 = globals.iresU1D0F;
    int iresV1D73#1 = globals.iresV1D10;
    tensor[3] lightVsp1D75#5 = globals.lightVsp1D15;
    int _t1D77#1 = 0;
    int _t1D79#1 = 1;
    int _t1D7B#1 = ExtractFemItem<int,NumCell(Mesh)>(a1D63);
    int _t1D7D#1 = ISub(_t1D7B,_t1D79);
    int[] _t1D7F#1 = Range(_t1D77,_t1D7D);
    femData:MeshCell[] _t1D81#1 = <femData:MeshCell[]>{};
  FOREACH1D84:  preds = [ASSIGN1D82,NEXT1D8A]
    foreach (_t1D83 in _t1D7F) on exit goto ASSIGN1D8C
      femData:MeshCell[] _t1D88#1 = phi(_t1D81,_t1D87)
    femData:MeshCell _t1D85#1 = LoadFem<femData:MeshCell>(a1D63,_t1D83);
    femData:MeshCell[] _t1D87#1 = Append<femData:MeshCell>(_t1D88,_t1D85);
    goto FOREACH1D84
  ASSIGN1D8C:  preds = [FOREACH1D84]
    femData:Space b1D8B#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1D65,a1D63);
    femData:FemFunc c1D8D#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1D67,b1D8B);
    femData:Space _t1D8F#2 = ExtractFem<femData:Space,femData:FemFunc>(c1D8D);
    femData:Mesh _t1D91#1 = ExtractFem<femData:Mesh,femData:Space>(_t1D8F);
    image(IMAGE1D<double[3]>) I1D93#2 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    int _t1D95#1 = 0;
    image(IMAGE1D<double[3]>) img1D97#1 = I1D93;
    tensor[3] op1_e3_l_21D99#9 = VSub<3>(camAt1D6B,camEye1D69);
    real op1_e3_l_41D9C#1 = VDot<3>(op1_e3_l_21D99,op1_e3_l_21D99);
    real camDist1D9F#4 = Sqrt(op1_e3_l_41D9C);
    globals.camDist1D1B = camDist1D9F;
    real realLit1DA4#1 = 0.1e1;
    real op1_e3_l_91DA3#6 = RDiv(realLit1DA4,camDist1D9F);
    tensor[3] camN1DA8#2 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_21D99);
    globals.camN1D1C = camN1DA8;
    real realLit1DAD#3 = 0.e0;
    real r1DAE#3 = TensorIndex<tensor[3],[0]>(camUp1D6D);
    real r1DAF#3 = RMul(realLit1DAD,r1DAE);
    real r1DB0#3 = TensorIndex<tensor[3],[1]>(camUp1D6D);
    real r1DB1#3 = RMul(realLit1DAD,r1DB0);
    real r1DB2#3 = TensorIndex<tensor[3],[2]>(camUp1D6D);
    real r1DB3#5 = RMul(realLit1DAD,r1DB2);
    real r1DB4#3 = RAdd(r1DAF,r1DB1);
    real r1DB5#3 = RAdd(r1DB4,r1DB3);
    real realLit1DB6#3 = 0.1e1;
    real r1DB7#1 = RMul(realLit1DB6,r1DB2);
    real r1DB8#1 = RAdd(r1DB4,r1DB7);
    real realLit1DB9#3 = -0.1e1;
    real r1DBA#1 = RMul(realLit1DB9,r1DB0);
    real r1DBB#1 = RAdd(r1DAF,r1DBA);
    real r1DBC#1 = RAdd(r1DBB,r1DB3);
    tensor[3] tensor1DBD#1 = <tensor[3]>[r1DB5,r1DB8,r1DBC];
    real r1DBE#1 = RMul(realLit1DB9,r1DB2);
    real r1DBF#1 = RAdd(r1DB4,r1DBE);
    real r1DC0#1 = RMul(realLit1DB6,r1DAE);
    real r1DC1#1 = RAdd(r1DC0,r1DB1);
    real r1DC2#1 = RAdd(r1DC1,r1DB3);
    tensor[3] tensor1DC3#1 = <tensor[3]>[r1DBF,r1DB5,r1DC2];
    real r1DC4#1 = RMul(realLit1DB6,r1DB0);
    real r1DC5#1 = RAdd(r1DAF,r1DC4);
    real r1DC6#1 = RAdd(r1DC5,r1DB3);
    real r1DC7#1 = RMul(realLit1DB9,r1DAE);
    real r1DC8#1 = RAdd(r1DC7,r1DB1);
    real r1DC9#1 = RAdd(r1DC8,r1DB3);
    tensor[3] tensor1DCA#1 = <tensor[3]>[r1DC6,r1DC9,r1DB5];
    tensor[3,3] op1_e3_l_151DAC#3 = <tensor[3,3]>[tensor1DBD,tensor1DC3,tensor1DCA];
    tensor[3] projParam1DEC#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_151DAC);
    real vdot1DED#1 = VDot<3>(op1_e3_l_21D99,projParam1DEC);
    tensor[3] projParam1DEE#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_151DAC);
    real vdot1DEF#1 = VDot<3>(op1_e3_l_21D99,projParam1DEE);
    tensor[3] projParam1DF0#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_151DAC);
    real vdot1DF1#1 = VDot<3>(op1_e3_l_21D99,projParam1DF0);
    tensor[3] op1_e3_l_171DEB#6 = <tensor[3]>[vdot1DED,vdot1DEF,vdot1DF1];
    real op1_e3_l_341DFA#1 = VDot<3>(op1_e3_l_171DEB,op1_e3_l_171DEB);
    real r1DFE#1 = RMul(op1_e3_l_91DA3,op1_e3_l_91DA3);
    real op1_e3_l_351DFD#1 = RMul(r1DFE,op1_e3_l_341DFA);
    real op1_e3_l_361E02#1 = Sqrt(op1_e3_l_351DFD);
    tensor[3] op1_e3_l_371E05#1 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_171DEB);
    real realLit1E09#1 = 0.1e1;
    real op1_e3_l_381E08#2 = RDiv(realLit1E09,op1_e3_l_361E02);
    tensor[3] camU1E0D#2 = VScale<3>(op1_e3_l_381E08,op1_e3_l_371E05);
    globals.camU1D1D = camU1E0D;
    real realLit1E12#3 = 0.e0;
    real r1E13#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21D99);
    real r1E14#3 = RMul(realLit1E12,r1E13);
    real r1E15#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21D99);
    real r1E16#3 = RMul(realLit1E12,r1E15);
    real r1E17#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21D99);
    real r1E18#5 = RMul(realLit1E12,r1E17);
    real r1E19#3 = RAdd(r1E14,r1E16);
    real r1E1A#3 = RAdd(r1E19,r1E18);
    real realLit1E1B#3 = 0.1e1;
    real r1E1C#1 = RMul(realLit1E1B,r1E17);
    real r1E1D#1 = RAdd(r1E19,r1E1C);
    real realLit1E1E#3 = -0.1e1;
    real r1E1F#1 = RMul(realLit1E1E,r1E15);
    real r1E20#1 = RAdd(r1E14,r1E1F);
    real r1E21#1 = RAdd(r1E20,r1E18);
    tensor[3] tensor1E22#1 = <tensor[3]>[r1E1A,r1E1D,r1E21];
    real r1E23#1 = RMul(realLit1E1E,r1E17);
    real r1E24#1 = RAdd(r1E19,r1E23);
    real r1E25#1 = RMul(realLit1E1B,r1E13);
    real r1E26#1 = RAdd(r1E25,r1E16);
    real r1E27#1 = RAdd(r1E26,r1E18);
    tensor[3] tensor1E28#1 = <tensor[3]>[r1E24,r1E1A,r1E27];
    real r1E29#1 = RMul(realLit1E1B,r1E15);
    real r1E2A#1 = RAdd(r1E14,r1E29);
    real r1E2B#1 = RAdd(r1E2A,r1E18);
    real r1E2C#1 = RMul(realLit1E1E,r1E13);
    real r1E2D#1 = RAdd(r1E2C,r1E16);
    real r1E2E#1 = RAdd(r1E2D,r1E18);
    tensor[3] tensor1E2F#1 = <tensor[3]>[r1E2B,r1E2E,r1E1A];
    tensor[3,3] op1_e3_l_451E11#3 = <tensor[3,3]>[tensor1E22,tensor1E28,tensor1E2F];
    tensor[3] projParam1E51#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_451E11);
    real vdot1E52#1 = VDot<3>(op1_e3_l_171DEB,projParam1E51);
    tensor[3] projParam1E53#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_451E11);
    real vdot1E54#1 = VDot<3>(op1_e3_l_171DEB,projParam1E53);
    tensor[3] projParam1E55#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_451E11);
    real vdot1E56#1 = VDot<3>(op1_e3_l_171DEB,projParam1E55);
    tensor[3] op1_e3_l_471E50#1 = <tensor[3]>[vdot1E52,vdot1E54,vdot1E56];
    tensor[3] op1_e3_l_501E5F#3 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_471E50);
    real r1E63#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501E5F);
    real r1E64#3 = RMul(op1_e3_l_381E08,op1_e3_l_91DA3);
    real r1E65#1 = RMul(r1E64,r1E63);
    real r1E66#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501E5F);
    real r1E67#1 = RMul(r1E64,r1E66);
    real r1E68#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501E5F);
    real r1E69#1 = RMul(r1E64,r1E68);
    tensor[3] camV1E62#2 = <tensor[3]>[r1E65,r1E67,r1E69];
    globals.camV1D1E = camV1E62;
    real _t1E74#1 = 0.314159265358979323846264338327950288e1;
    real _t1E76#1 = 0.36e3;
    real op1_e3_l_51E78#1 = RMul(camFOV1D6F,_t1E74);
    real op1_e3_l_61E7B#1 = RDiv(op1_e3_l_51E78,_t1E76);
    real op1_e3_l_101E7E#2 = Tan(op1_e3_l_61E7B);
    real camVmax1E81#1 = RMul(op1_e3_l_101E7E,camDist1D9F);
    globals.camVmax1D1F = camVmax1E81;
    real _t1E85#1 = IntToReal(iresU1D71);
    real _t1E87#1 = IntToReal(iresV1D73);
    real r1E8A#1 = RMul(_t1E85,op1_e3_l_101E7E);
    real op1_e3_l_141E89#1 = RMul(r1E8A,camDist1D9F);
    real camUmax1E8E#1 = RDiv(op1_e3_l_141E89,_t1E87);
    globals.camUmax1D20 = camUmax1E8E;
    tensor[3,3] _t1E92#9 = <tensor[3,3]>[camU1E0D,camV1E62,camN1DA8];
    real op1_e3_l_31E94#1 = VDot<3>(lightVsp1D75,lightVsp1D75);
    real op1_e3_l_41E97#1 = Sqrt(op1_e3_l_31E94);
    real realLit1E9B#1 = 0.1e1;
    real op1_e3_l_51E9A#1 = RDiv(realLit1E9B,op1_e3_l_41E97);
    real r1EA0#1 = TensorIndex<tensor[3,3],[0,0]>(_t1E92);
    real r1EA1#3 = TensorIndex<tensor[3],[0]>(lightVsp1D75);
    real r1EA2#1 = RMul(r1EA0,r1EA1);
    real r1EA3#1 = TensorIndex<tensor[3,3],[1,0]>(_t1E92);
    real r1EA4#3 = TensorIndex<tensor[3],[1]>(lightVsp1D75);
    real r1EA5#1 = RMul(r1EA3,r1EA4);
    real r1EA6#1 = TensorIndex<tensor[3,3],[2,0]>(_t1E92);
    real r1EA7#3 = TensorIndex<tensor[3],[2]>(lightVsp1D75);
    real r1EA8#1 = RMul(r1EA6,r1EA7);
    real r1EA9#1 = RAdd(r1EA2,r1EA5);
    real r1EAA#1 = RAdd(r1EA9,r1EA8);
    real r1EAB#1 = TensorIndex<tensor[3,3],[0,1]>(_t1E92);
    real r1EAC#1 = RMul(r1EAB,r1EA1);
    real r1EAD#1 = TensorIndex<tensor[3,3],[1,1]>(_t1E92);
    real r1EAE#1 = RMul(r1EAD,r1EA4);
    real r1EAF#1 = TensorIndex<tensor[3,3],[2,1]>(_t1E92);
    real r1EB0#1 = RMul(r1EAF,r1EA7);
    real r1EB1#1 = RAdd(r1EAC,r1EAE);
    real r1EB2#1 = RAdd(r1EB1,r1EB0);
    real r1EB3#1 = TensorIndex<tensor[3,3],[0,2]>(_t1E92);
    real r1EB4#1 = RMul(r1EB3,r1EA1);
    real r1EB5#1 = TensorIndex<tensor[3,3],[1,2]>(_t1E92);
    real r1EB6#1 = RMul(r1EB5,r1EA4);
    real r1EB7#1 = TensorIndex<tensor[3,3],[2,2]>(_t1E92);
    real r1EB8#1 = RMul(r1EB7,r1EA7);
    real r1EB9#1 = RAdd(r1EB4,r1EB6);
    real r1EBA#1 = RAdd(r1EB9,r1EB8);
    tensor[3] op1_e3_l_61E9F#1 = <tensor[3]>[r1EAA,r1EB2,r1EBA];
    tensor[3] light1ED8#1 = VScale<3>(op1_e3_l_51E9A,op1_e3_l_61E9F);
    globals.light1D21 = light1ED8;
    globals._t1D22 = _t1D91;
    globals._tX1D23 = _t1D8F;
    globals.c1D24 = c1D8D;
    globals.img1D25 = img1D97;
    globals._tXX1D26 = _t1D95;
    globals.I1D27 = I1D93;
    return
## strand
  strand raycast (int ui1EE3#2, int vi1EE4#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1EEF:  preds = []
        int iresU1EF0#1 = globals.iresU1D0F;
        int iresV1EF2#1 = globals.iresV1D10;
        real camNear1EF4#1 = globals.camNear1D11;
        real camDist1EF6#1 = globals.camDist1D1B;
        tensor[3] camN1EF8#1 = globals.camN1D1C;
        tensor[3] camU1EFA#1 = globals.camU1D1D;
        tensor[3] camV1EFC#1 = globals.camV1D1E;
        real camVmax1EFE#4 = globals.camVmax1D1F;
        real camUmax1F00#2 = globals.camUmax1D20;
        real _t1F02#5 = -0.5e0;
        real _t1F04#1 = IntToReal(ui1EE3);
        real _t1F06#1 = IntToReal(iresU1EF0);
        real _t1F08#3 = 0.5e0;
        real op1_e3_l_61F0A#1 = RSub(_t1F06,_t1F08);
        real op1_e3_l_71F0D#1 = RSub(_t1F04,_t1F02);
        real op1_e3_l_81F10#1 = RSub(op1_e3_l_61F0A,_t1F02);
        real op1_e3_l_91F13#2 = RNeg(camUmax1F00);
        real op1_e3_l_101F16#1 = RDiv(op1_e3_l_71F0D,op1_e3_l_81F10);
        real op1_e3_l_111F19#1 = RSub(camUmax1F00,op1_e3_l_91F13);
        real op1_e3_l_131F1C#1 = RMul(op1_e3_l_101F16,op1_e3_l_111F19);
        real rayU1F1F#2 = RAdd(op1_e3_l_91F13,op1_e3_l_131F1C);
        real _t1F22#1 = IntToReal(vi1EE4);
        real _t1F24#2 = IntToReal(iresV1EF2);
        real op1_e3_l_61F26#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_71F29#2 = RSub(_t1F22,_t1F02);
        real op1_e3_l_81F2C#1 = RSub(op1_e3_l_61F26,_t1F02);
        real op1_e3_l_91F2F#1 = RNeg(camVmax1EFE);
        real op1_e3_l_101F32#1 = RDiv(op1_e3_l_71F29,op1_e3_l_81F2C);
        real op1_e3_l_111F35#2 = RSub(op1_e3_l_91F2F,camVmax1EFE);
        real op1_e3_l_121F38#1 = RMul(op1_e3_l_101F32,op1_e3_l_111F35);
        real rayV1F3B#1 = RAdd(camVmax1EFE,op1_e3_l_121F38);
        real op1_e3_l_251F3E#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_271F41#1 = RSub(op1_e3_l_251F3E,_t1F02);
        real op1_e3_l_291F44#1 = RDiv(op1_e3_l_71F29,op1_e3_l_271F41);
        real op1_e3_l_311F47#1 = RMul(op1_e3_l_291F44,op1_e3_l_111F35);
        real op1_e3_l_321F4A#1 = RAdd(camVmax1EFE,op1_e3_l_311F47);
        tensor[3] op1_e3_l_331F4D#1 = VScale<3>(rayU1F1F,camU1EFA);
        tensor[3] op1_e3_l_341F50#1 = VScale<3>(op1_e3_l_321F4A,camV1EFC);
        tensor[3] op1_e3_l_351F53#3 = VAdd<3>(op1_e3_l_331F4D,op1_e3_l_341F50);
        real realLit1F57#1 = 0.1e1;
        real r1F58#3 = RDiv(realLit1F57,camDist1EF6);
        real r1F59#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351F53);
        real r1F5A#1 = RMul(r1F58,r1F59);
        real r1F5B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351F53);
        real r1F5C#1 = RMul(r1F58,r1F5B);
        real r1F5D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351F53);
        real r1F5E#1 = RMul(r1F58,r1F5D);
        tensor[3] op1_e3_l_361F56#1 = <tensor[3]>[r1F5A,r1F5C,r1F5E];
        tensor[3] rayVec1F69#1 = VAdd<3>(camN1EF8,op1_e3_l_361F56);
        real transp1F6C#1 = 0.1e1;
        real _t1F6E#8 = 0.e0;
        tensor[3] rgb1F70#1 = <tensor[3]>[_t1F6E,_t1F6E,_t1F6E];
        tensor[4] rgba1F72#1 = <tensor[4]>[_t1F6E,_t1F6E,_t1F6E,_t1F6E];
        self.rayU = rayU1F1F;
        self.rayV = rayV1F3B;
        self.rayN = camNear1EF4;
        self.rayVec = rayVec1F69;
        self.transp = transp1F6C;
        self.rgb = rgb1F70;
        self.rgba = rgba1F72;
        self.gray = _t1F6E;
        self.ui = ui1EE3;
        self.vi = vi1EE4;
        return
    end state init
    method update
        ENTRY1F7F:  preds = []
          image(IMAGE1D<double[3]>) I1F80#17 = globals.I1D27;
          real isoval1F82#1 = globals.isoval1D09;
          femData:Mesh _t1F84#17 = globals._t1D22;
          femData:Space _t1F86#10 = globals._tX1D23;
          femData:FemFunc c1F88#10 = globals.c1D24;
          image(IMAGE1D<double[3]>) img1F8A#0 = globals.img1D25;
          int _t1F8C#0 = globals._tXX1D26;
          femData:Mesh a1F8E#1 = globals.a1D06;
          real thick1F90#1 = globals.thick1D0A;
          tensor[3] camEye1F92#1 = globals.camEye1D0B;
          real camNear1F94#2 = globals.camNear1D11;
          real camFar1F96#2 = globals.camFar1D12;
          real refStep1F98#1 = globals.refStep1D13;
          real rayStep1F9A#2 = globals.rayStep1D14;
          real phongKa1F9C#1 = globals.phongKa1D16;
          real phongKd1F9E#1 = globals.phongKd1D17;
          bool debug1FA0#1 = globals.debug1D18;
          int su1FA2#1 = globals.su1D19;
          int sv1FA4#1 = globals.sv1D1A;
          tensor[3] light1FA6#1 = globals.light1D21;
          real rayN1FA8#4 = self.rayN;
          tensor[3] rayVec1FAA#3 = self.rayVec;
          real transp1FAC#10 = self.transp;
          tensor[3] rgb1FAE#9 = self.rgb;
          int ui1FB0#1 = self.ui;
          int vi1FB2#1 = self.vi;
          if debug1FA0 then goto ASSIGN1FB6 else goto JOIN1FC0
        ASSIGN1FB6:  preds = [COND1FB4]
          bool _t1FB5#1 = NEQ<int>(ui1FB0,su1FA2);
          if _t1FB5 then goto ASSIGN1FB9 else goto ASSIGN37E8
        ASSIGN1FB9:  preds = [COND1FB7]
          bool _t1FB8#1 = true;
          goto JOIN1FBC
        JOIN1FBC:  preds = [ASSIGN1FB9,ASSIGN37E8]
          bool _t1FBA#1 = phi(_t1FB8,_t1FBB)
          if _t1FBA then goto STABILIZE1FBE else goto JOIN1FBF
        STABILIZE1FBE:  preds = [COND1FBD]
          stabilize
          goto JOIN1FBF
        JOIN1FBF:  preds = [*STABILIZE1FBE,COND1FBD]
          goto JOIN1FC0
        JOIN1FC0:  preds = [JOIN1FBF,COND1FB4]
          tensor[3] op1_e3_l_31FC1#1 = VScale<3>(rayN1FA8,rayVec1FAA);
          tensor[3] x1FC4#6 = VAdd<3>(camEye1F92,op1_e3_l_31FC1);
          real _t1FC7#8 = 0.e0;
          real _t1FC9#2 = VIndex<3,0>(x1FC4);
          bool _t1FCB#1 = LT<real>(_t1FC7,_t1FC9);
          if _t1FCB then goto ASSIGN1FCF else goto JOIN3798
        ASSIGN1FCF:  preds = [COND1FCD]
          real _t1FCE#11 = 0.1e1;
          bool _t1FD0#1 = LT<real>(_t1FC9,_t1FCE);
          if _t1FD0 then goto ASSIGN1FD4 else goto JOIN3795
        ASSIGN1FD4:  preds = [COND1FD2]
          real _t1FD3#2 = VIndex<3,1>(x1FC4);
          bool _t1FD5#1 = LT<real>(_t1FC7,_t1FD3);
          if _t1FD5 then goto ASSIGN1FD9 else goto JOIN3792
        ASSIGN1FD9:  preds = [COND1FD7]
          bool _t1FD8#1 = LT<real>(_t1FD3,_t1FCE);
          if _t1FD8 then goto ASSIGN1FDC else goto JOIN378F
        ASSIGN1FDC:  preds = [COND1FDA]
          real _t1FDB#2 = VIndex<3,2>(x1FC4);
          bool _t1FDD#1 = LT<real>(_t1FC7,_t1FDB);
          if _t1FDD then goto ASSIGN1FE1 else goto JOIN378C
        ASSIGN1FE1:  preds = [COND1FDF]
          bool _t1FE0#1 = LT<real>(_t1FDB,_t1FCE);
          if _t1FE0 then goto ASSIGN2E82 else goto JOIN3789
        ASSIGN2E82:  preds = [COND1FE2]
          femData:MeshPos p1FE3#1 = findPos1FE4 (a1F8E,x1FC4);
          bool _t2E83#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1FE3);
          if _t2E83 then goto ASSIGN2E87 else goto ASSIGN37E3
        ASSIGN2E87:  preds = [COND2E85]
          real _t2E86#1 = 0.13e1;
          femData:MeshPos callFindPos2E88#2 = findPos1FE4 (_t1F84,x1FC4);
          int intPos2E8A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos2E88);
          tensor[3] refPos2E8C#9 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos2E88);
          int ilit2E8F#1 = 10;
          int mulRes2E90#10 = IMul(intPos2E8A,ilit2E8F);
          int ilit2E91#1 = 0;
          int addRes2E92#1 = IAdd(mulRes2E90,ilit2E91);
          int idx2E93#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E92);
          int ilit2E94#1 = 1;
          int addRes2E95#1 = IAdd(mulRes2E90,ilit2E94);
          int idx2E96#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E95);
          int ilit2E97#1 = 2;
          int addRes2E98#1 = IAdd(mulRes2E90,ilit2E97);
          int idx2E99#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E98);
          int ilit2E9A#1 = 3;
          int addRes2E9B#1 = IAdd(mulRes2E90,ilit2E9A);
          int idx2E9C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9B);
          int ilit2E9D#1 = 4;
          int addRes2E9E#1 = IAdd(mulRes2E90,ilit2E9D);
          int idx2E9F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9E);
          int ilit2EA0#1 = 5;
          int addRes2EA1#1 = IAdd(mulRes2E90,ilit2EA0);
          int idx2EA2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA1);
          int ilit2EA3#1 = 6;
          int addRes2EA4#1 = IAdd(mulRes2E90,ilit2EA3);
          int idx2EA5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA4);
          int ilit2EA6#1 = 7;
          int addRes2EA7#1 = IAdd(mulRes2E90,ilit2EA6);
          int idx2EA8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA7);
          int ilit2EA9#1 = 8;
          int addRes2EAA#1 = IAdd(mulRes2E90,ilit2EA9);
          int idx2EAB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAA);
          int ilit2EAC#1 = 9;
          int addRes2EAD#1 = IAdd(mulRes2E90,ilit2EAC);
          int idx2EAE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAD);
          int[10] seq2EAF#1 = <int[10]>{idx2E93,idx2E96,idx2E99,idx2E9C,idx2E9F,idx2EA2,idx2EA5,idx2EA8,idx2EAB,idx2EAE};
          int[10] femIndicies2E8E#10 = seq2EAF;
          int ilit2ED3#11 = 1;
          int ilit2ED4#1 = 0;
          int idx2ED5#1 = Subscript<int>(femIndicies2E8E,ilit2ED4);
          int mulRes2ED6#1 = IMul(ilit2ED3,idx2ED5);
          int idx2ED7#1 = Subscript<int>(femIndicies2E8E,ilit2ED3);
          int mulRes2ED8#1 = IMul(ilit2ED3,idx2ED7);
          int ilit2ED9#1 = 2;
          int idx2EDA#1 = Subscript<int>(femIndicies2E8E,ilit2ED9);
          int mulRes2EDB#1 = IMul(ilit2ED3,idx2EDA);
          int ilit2EDC#1 = 3;
          int idx2EDD#1 = Subscript<int>(femIndicies2E8E,ilit2EDC);
          int mulRes2EDE#1 = IMul(ilit2ED3,idx2EDD);
          int ilit2EDF#1 = 4;
          int idx2EE0#1 = Subscript<int>(femIndicies2E8E,ilit2EDF);
          int mulRes2EE1#1 = IMul(ilit2ED3,idx2EE0);
          int ilit2EE2#1 = 5;
          int idx2EE3#1 = Subscript<int>(femIndicies2E8E,ilit2EE2);
          int mulRes2EE4#1 = IMul(ilit2ED3,idx2EE3);
          int ilit2EE5#1 = 6;
          int idx2EE6#1 = Subscript<int>(femIndicies2E8E,ilit2EE5);
          int mulRes2EE7#1 = IMul(ilit2ED3,idx2EE6);
          int ilit2EE8#1 = 7;
          int idx2EE9#1 = Subscript<int>(femIndicies2E8E,ilit2EE8);
          int mulRes2EEA#1 = IMul(ilit2ED3,idx2EE9);
          int ilit2EEB#1 = 8;
          int idx2EEC#1 = Subscript<int>(femIndicies2E8E,ilit2EEB);
          int mulRes2EED#1 = IMul(ilit2ED3,idx2EEC);
          int ilit2EEE#1 = 9;
          int idx2EEF#1 = Subscript<int>(femIndicies2E8E,ilit2EEE);
          int mulRes2EF0#1 = IMul(ilit2ED3,idx2EEF);
          real dof2EF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED6);
          real dof2EF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED8);
          real dof2EF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDB);
          real dof2EF4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDE);
          real dof2EF5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE1);
          real dof2EF6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE4);
          real dof2EF7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE7);
          real dof2EF8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EEA);
          real dof2EF9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EED);
          real dof2EFA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EF0);
          tensor[10] dofs2EFB#1 = <tensor[10]>[dof2EF1,dof2EF2,dof2EF3,dof2EF4,dof2EF5,dof2EF6,dof2EF7,dof2EF8,dof2EF9,dof2EFA];
          tensor[10] femDofs2ED2#4 = dofs2EFB;
          real varAcc2F27#2 = VIndex<3,0>(refPos2E8C);
          real varAcc2F28#2 = VIndex<3,1>(refPos2E8C);
          real varAcc2F29#2 = VIndex<3,2>(refPos2E8C);
          real coeff2F2A#3 = 0.2e1;
          real iden2F2B#4 = varAcc2F27;
          real prod22F2C#1 = RMul(iden2F2B,varAcc2F27);
          real one2F2D#13 = 0.1e1;
          real prod2F2E#3 = RMul(one2F2D,one2F2D);
          real prod2F2F#2 = RMul(prod22F2C,prod2F2E);
          real coeff2F30#6 = 0.4e1;
          real iden2F31#3 = varAcc2F28;
          real prod2F32#2 = RMul(iden2F31,one2F2D);
          real prod2F33#2 = RMul(iden2F2B,prod2F32);
          real iden2F34#3 = varAcc2F29;
          real prod2F35#2 = RMul(one2F2D,iden2F34);
          real prod2F36#2 = RMul(iden2F2B,prod2F35);
          real coeff2F37#3 = -0.3e1;
          real prod2F38#3 = RMul(iden2F2B,prod2F2E);
          real prod22F39#1 = RMul(iden2F31,varAcc2F28);
          real prod2F3A#1 = RMul(prod22F39,one2F2D);
          real prod2F3B#2 = RMul(one2F2D,prod2F3A);
          real prod2F3C#1 = RMul(iden2F31,iden2F34);
          real prod2F3D#2 = RMul(one2F2D,prod2F3C);
          real prod2F3E#3 = RMul(one2F2D,prod2F32);
          real prod22F3F#1 = RMul(iden2F34,varAcc2F29);
          real prod2F40#1 = RMul(one2F2D,prod22F3F);
          real prod2F41#2 = RMul(one2F2D,prod2F40);
          real prod2F42#3 = RMul(one2F2D,prod2F35);
          real prod2F43#1 = RMul(one2F2D,prod2F2E);
          real mult2F44#1 = RMul(one2F2D,prod2F43);
          real mult2F45#1 = RMul(coeff2F37,prod2F42);
          real mult2F46#2 = RMul(coeff2F2A,prod2F41);
          real mult2F47#1 = RMul(coeff2F37,prod2F3E);
          real mult2F48#2 = RMul(coeff2F30,prod2F3D);
          real mult2F49#2 = RMul(coeff2F2A,prod2F3B);
          real mult2F4A#1 = RMul(coeff2F37,prod2F38);
          real mult2F4B#2 = RMul(coeff2F30,prod2F36);
          real mult2F4C#2 = RMul(coeff2F30,prod2F33);
          real mult2F4D#2 = RMul(coeff2F2A,prod2F2F);
          real sum2F4E#1 = RAdd(mult2F4C,mult2F4D);
          real sum2F4F#1 = RAdd(mult2F4B,sum2F4E);
          real sum2F50#1 = RAdd(mult2F4A,sum2F4F);
          real sum2F51#1 = RAdd(mult2F49,sum2F50);
          real sum2F52#1 = RAdd(mult2F48,sum2F51);
          real sum2F53#1 = RAdd(mult2F47,sum2F52);
          real sum2F54#1 = RAdd(mult2F46,sum2F53);
          real sum2F55#1 = RAdd(mult2F45,sum2F54);
          real sum2F56#1 = RAdd(mult2F44,sum2F55);
          real intermediate2F57#1 = sum2F56;
          real coeff2F58#3 = -0.1e1;
          real mult2F59#1 = RMul(coeff2F58,prod2F38);
          real sum2F5A#1 = RAdd(mult2F59,mult2F4D);
          real intermediate2F5B#1 = sum2F5A;
          real mult2F5C#1 = RMul(coeff2F58,prod2F3E);
          real sum2F5D#1 = RAdd(mult2F5C,mult2F49);
          real intermediate2F5E#1 = sum2F5D;
          real mult2F5F#1 = RMul(coeff2F58,prod2F42);
          real sum2F60#1 = RAdd(mult2F5F,mult2F46);
          real intermediate2F61#1 = sum2F60;
          real coeff2F62#6 = -0.4e1;
          real mult2F63#1 = RMul(coeff2F30,prod2F42);
          real mult2F64#1 = RMul(coeff2F62,prod2F41);
          real mult2F65#2 = RMul(coeff2F62,prod2F3D);
          real mult2F66#2 = RMul(coeff2F62,prod2F36);
          real sum2F67#1 = RAdd(mult2F65,mult2F66);
          real sum2F68#1 = RAdd(mult2F64,sum2F67);
          real sum2F69#1 = RAdd(mult2F63,sum2F68);
          real intermediate2F6A#1 = sum2F69;
          real mult2F6B#1 = RMul(coeff2F30,prod2F3E);
          real mult2F6C#1 = RMul(coeff2F62,prod2F3B);
          real mult2F6D#2 = RMul(coeff2F62,prod2F33);
          real sum2F6E#1 = RAdd(mult2F6C,mult2F6D);
          real sum2F6F#1 = RAdd(mult2F65,sum2F6E);
          real sum2F70#1 = RAdd(mult2F6B,sum2F6F);
          real intermediate2F71#1 = sum2F70;
          real mult2F72#1 = RMul(coeff2F30,prod2F38);
          real mult2F73#1 = RMul(coeff2F62,prod2F2F);
          real sum2F74#1 = RAdd(mult2F6D,mult2F73);
          real sum2F75#1 = RAdd(mult2F66,sum2F74);
          real sum2F76#1 = RAdd(mult2F72,sum2F75);
          real intermediate2F77#1 = sum2F76;
          tensor[10] intermediateCons2F78#1 = <tensor[10]>[intermediate2F57,intermediate2F5B,intermediate2F5E,intermediate2F61,mult2F48,mult2F4B,mult2F4C,intermediate2F6A,intermediate2F71,intermediate2F77];
          tensor[10] basisResult2F26#1 = intermediateCons2F78;
          real compositionl2FCC#2 = VDot<10>(femDofs2ED2,basisResult2F26);
          real op1_e3_l_232FCF#1 = RSub(compositionl2FCC,isoval1F82);
          real varAcc2FD3#1 = VIndex<3,0>(refPos2E8C);
          real varAcc2FD4#1 = VIndex<3,1>(refPos2E8C);
          real varAcc2FD5#1 = VIndex<3,2>(refPos2E8C);
          real coeff2FD6#4 = 0.4e1;
          real iden2FD7#1 = varAcc2FD3;
          real one2FD8#7 = 0.1e1;
          real prod2FD9#2 = RMul(one2FD8,one2FD8);
          real prod2FDA#3 = RMul(iden2FD7,prod2FD9);
          real iden2FDB#1 = varAcc2FD4;
          real prod2FDC#1 = RMul(iden2FDB,one2FD8);
          real prod2FDD#3 = RMul(one2FD8,prod2FDC);
          real iden2FDE#1 = varAcc2FD5;
          real prod2FDF#1 = RMul(one2FD8,iden2FDE);
          real prod2FE0#3 = RMul(one2FD8,prod2FDF);
          real coeff2FE1#1 = -0.3e1;
          real prod2FE2#3 = RMul(one2FD8,prod2FD9);
          real mult2FE3#1 = RMul(coeff2FE1,prod2FE2);
          real mult2FE4#4 = RMul(coeff2FD6,prod2FE0);
          real mult2FE5#4 = RMul(coeff2FD6,prod2FDD);
          real mult2FE6#4 = RMul(coeff2FD6,prod2FDA);
          real sum2FE7#1 = RAdd(mult2FE5,mult2FE6);
          real sum2FE8#1 = RAdd(mult2FE4,sum2FE7);
          real sum2FE9#3 = RAdd(mult2FE3,sum2FE8);
          real intermediate2FEA#1 = sum2FE9;
          real coeff2FEB#1 = -0.1e1;
          real mult2FEC#3 = RMul(coeff2FEB,prod2FE2);
          real sum2FED#1 = RAdd(mult2FEC,mult2FE6);
          real intermediate2FEE#1 = sum2FED;
          real basisEval2FEF#9 = 0.e0;
          real coeff2FF0#3 = -0.4e1;
          real basisEval2FF1#4 = RMul(coeff2FF0,prod2FE0);
          real basisEval2FF2#4 = RMul(coeff2FF0,prod2FDD);
          real coeff2FF3#3 = -0.8e1;
          real mult2FF4#3 = RMul(coeff2FD6,prod2FE2);
          real mult2FF5#1 = RMul(coeff2FF3,prod2FDA);
          real sum2FF6#1 = RAdd(basisEval2FF2,mult2FF5);
          real sum2FF7#1 = RAdd(basisEval2FF1,sum2FF6);
          real sum2FF8#1 = RAdd(mult2FF4,sum2FF7);
          real intermediate2FF9#1 = sum2FF8;
          real intermediate2FFA#1 = sum2FE9;
          real sum2FFB#1 = RAdd(mult2FEC,mult2FE5);
          real intermediate2FFC#1 = sum2FFB;
          real mult2FFD#1 = RMul(coeff2FF3,prod2FDD);
          real mult2FFE#4 = RMul(coeff2FF0,prod2FDA);
          real sum2FFF#1 = RAdd(mult2FFD,mult2FFE);
          real sum3000#1 = RAdd(basisEval2FF1,sum2FFF);
          real sum3001#1 = RAdd(mult2FF4,sum3000);
          real intermediate3002#1 = sum3001;
          real intermediate3003#1 = sum2FE9;
          real sum3004#1 = RAdd(mult2FEC,mult2FE4);
          real intermediate3005#1 = sum3004;
          real mult3006#1 = RMul(coeff2FF3,prod2FE0);
          real sum3007#1 = RAdd(basisEval2FF2,mult2FFE);
          real sum3008#1 = RAdd(mult3006,sum3007);
          real sum3009#1 = RAdd(mult2FF4,sum3008);
          real intermediate300A#1 = sum3009;
          tensor[10] intermediateCons300B#1 = <tensor[10]>[intermediate2FEA,intermediate2FEE,basisEval2FEF,basisEval2FEF,basisEval2FEF,mult2FE4,mult2FE5,basisEval2FF1,basisEval2FF2,intermediate2FF9];
          tensor[10] intermediateCons300C#1 = <tensor[10]>[intermediate2FFA,basisEval2FEF,intermediate2FFC,basisEval2FEF,mult2FE4,basisEval2FEF,mult2FE6,basisEval2FF1,intermediate3002,mult2FFE];
          tensor[10] intermediateCons300D#1 = <tensor[10]>[intermediate3003,basisEval2FEF,basisEval2FEF,intermediate3005,mult2FE5,mult2FE6,basisEval2FEF,intermediate300A,basisEval2FF2,mult2FFE];
          tensor[3,10] intermediateCons300E#1 = <tensor[3,10]>[intermediateCons300B,intermediateCons300C,intermediateCons300D];
          tensor[3,10] basisResult2FD2#3 = intermediateCons300E;
          tensor[10] projParam304D#1 = ProjectLast<tensor[3,10],[0]>(basisResult2FD2);
          real vdot304E#1 = VDot<10>(femDofs2ED2,projParam304D);
          tensor[10] projParam304F#1 = ProjectLast<tensor[3,10],[1]>(basisResult2FD2);
          real vdot3050#1 = VDot<10>(femDofs2ED2,projParam304F);
          tensor[10] projParam3051#1 = ProjectLast<tensor[3,10],[2]>(basisResult2FD2);
          real vdot3052#1 = VDot<10>(femDofs2ED2,projParam3051);
          tensor[3] compositionl304C#3 = <tensor[3]>[vdot304E,vdot3050,vdot3052];
          int ilit305C#1 = 4;
          int mulRes305D#4 = IMul(intPos2E8A,ilit305C);
          int ilit305E#1 = 0;
          int addRes305F#1 = IAdd(mulRes305D,ilit305E);
          int idx3060#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes305F);
          int ilit3061#1 = 1;
          int addRes3062#1 = IAdd(mulRes305D,ilit3061);
          int idx3063#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3062);
          int ilit3064#1 = 2;
          int addRes3065#1 = IAdd(mulRes305D,ilit3064);
          int idx3066#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3065);
          int ilit3067#1 = 3;
          int addRes3068#1 = IAdd(mulRes305D,ilit3067);
          int idx3069#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3068);
          int[4] seq306A#1 = <int[4]>{idx3060,idx3063,idx3066,idx3069};
          int[4] femIndicies305B#4 = seq306A;
          int ilit307C#5 = 0;
          int ilit307D#5 = 3;
          int idx307E#1 = Subscript<int>(femIndicies305B,ilit307C);
          int mulRes307F#3 = IMul(ilit307D,idx307E);
          int addRes3080#1 = IAdd(ilit307C,mulRes307F);
          int ilit3081#5 = 1;
          int addRes3082#1 = IAdd(ilit3081,mulRes307F);
          int ilit3083#5 = 2;
          int addRes3084#1 = IAdd(ilit3083,mulRes307F);
          real dof_load3085#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3080);
          real dof_load3086#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3082);
          real dof_load3087#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3084);
          tensor[3] interCons3088#1 = <tensor[3]>[dof_load3085,dof_load3086,dof_load3087];
          int idx3089#1 = Subscript<int>(femIndicies305B,ilit3081);
          int mulRes308A#3 = IMul(ilit307D,idx3089);
          int addRes308B#1 = IAdd(ilit307C,mulRes308A);
          int addRes308C#1 = IAdd(ilit3081,mulRes308A);
          int addRes308D#1 = IAdd(ilit3083,mulRes308A);
          real dof_load308E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308B);
          real dof_load308F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308C);
          real dof_load3090#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308D);
          tensor[3] interCons3091#1 = <tensor[3]>[dof_load308E,dof_load308F,dof_load3090];
          int idx3092#1 = Subscript<int>(femIndicies305B,ilit3083);
          int mulRes3093#3 = IMul(ilit307D,idx3092);
          int addRes3094#1 = IAdd(ilit307C,mulRes3093);
          int addRes3095#1 = IAdd(ilit3081,mulRes3093);
          int addRes3096#1 = IAdd(ilit3083,mulRes3093);
          real dof_load3097#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3094);
          real dof_load3098#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3095);
          real dof_load3099#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3096);
          tensor[3] interCons309A#1 = <tensor[3]>[dof_load3097,dof_load3098,dof_load3099];
          int idx309B#1 = Subscript<int>(femIndicies305B,ilit307D);
          int mulRes309C#3 = IMul(ilit307D,idx309B);
          int addRes309D#1 = IAdd(ilit307C,mulRes309C);
          int addRes309E#1 = IAdd(ilit3081,mulRes309C);
          int addRes309F#1 = IAdd(ilit3083,mulRes309C);
          real dof_load30A0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309D);
          real dof_load30A1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309E);
          real dof_load30A2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309F);
          tensor[3] interCons30A3#1 = <tensor[3]>[dof_load30A0,dof_load30A1,dof_load30A2];
          tensor[4,3] dofs30A4#1 = <tensor[4,3]>[interCons3088,interCons3091,interCons309A,interCons30A3];
          tensor[4,3] femDofs307B#48 = dofs30A4;
          real varAcc30D0#0 = VIndex<3,0>(refPos2E8C);
          real varAcc30D1#0 = VIndex<3,1>(refPos2E8C);
          real varAcc30D2#0 = VIndex<3,2>(refPos2E8C);
          real coeff30D3#1 = -0.1e1;
          real one30D4#4 = 0.1e1;
          real prod30D5#1 = RMul(one30D4,one30D4);
          real prod30D6#2 = RMul(one30D4,prod30D5);
          real basisEval30D7#3 = RMul(coeff30D3,prod30D6);
          real basisEval30D8#3 = RMul(one30D4,prod30D6);
          real basisEval30D9#6 = 0.e0;
          tensor[4] intermediateCons30DA#1 = <tensor[4]>[basisEval30D7,basisEval30D8,basisEval30D9,basisEval30D9];
          tensor[4] intermediateCons30DB#1 = <tensor[4]>[basisEval30D7,basisEval30D9,basisEval30D8,basisEval30D9];
          tensor[4] intermediateCons30DC#1 = <tensor[4]>[basisEval30D7,basisEval30D9,basisEval30D9,basisEval30D8];
          tensor[3,4] intermediateCons30DD#1 = <tensor[3,4]>[intermediateCons30DA,intermediateCons30DB,intermediateCons30DC];
          tensor[3,4] basisResult30CF#24 = intermediateCons30DD;
          real r30EE#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs307B);
          real r30EF#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult30CF);
          real r30F0#1 = RMul(r30EE,r30EF);
          real r30F1#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs307B);
          real r30F2#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult30CF);
          real r30F3#1 = RMul(r30F1,r30F2);
          real r30F4#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs307B);
          real r30F5#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult30CF);
          real r30F6#1 = RMul(r30F4,r30F5);
          real r30F7#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs307B);
          real r30F8#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult30CF);
          real r30F9#1 = RMul(r30F7,r30F8);
          real r30FA#1 = RAdd(r30F0,r30F3);
          real r30FB#1 = RAdd(r30FA,r30F6);
          real r30FC#1 = RAdd(r30FB,r30F9);
          real r30FD#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult30CF);
          real r30FE#1 = RMul(r30EE,r30FD);
          real r30FF#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult30CF);
          real r3100#1 = RMul(r30F1,r30FF);
          real r3101#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult30CF);
          real r3102#1 = RMul(r30F4,r3101);
          real r3103#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult30CF);
          real r3104#1 = RMul(r30F7,r3103);
          real r3105#1 = RAdd(r30FE,r3100);
          real r3106#1 = RAdd(r3105,r3102);
          real r3107#1 = RAdd(r3106,r3104);
          real r3108#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult30CF);
          real r3109#1 = RMul(r30EE,r3108);
          real r310A#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult30CF);
          real r310B#1 = RMul(r30F1,r310A);
          real r310C#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult30CF);
          real r310D#1 = RMul(r30F4,r310C);
          real r310E#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult30CF);
          real r310F#1 = RMul(r30F7,r310E);
          real r3110#1 = RAdd(r3109,r310B);
          real r3111#1 = RAdd(r3110,r310D);
          real r3112#1 = RAdd(r3111,r310F);
          tensor[3] tensor3113#1 = <tensor[3]>[r30FC,r3107,r3112];
          real r3114#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs307B);
          real r3115#1 = RMul(r3114,r30EF);
          real r3116#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs307B);
          real r3117#1 = RMul(r3116,r30F2);
          real r3118#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs307B);
          real r3119#1 = RMul(r3118,r30F5);
          real r311A#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs307B);
          real r311B#1 = RMul(r311A,r30F8);
          real r311C#1 = RAdd(r3115,r3117);
          real r311D#1 = RAdd(r311C,r3119);
          real r311E#1 = RAdd(r311D,r311B);
          real r311F#1 = RMul(r3114,r30FD);
          real r3120#1 = RMul(r3116,r30FF);
          real r3121#1 = RMul(r3118,r3101);
          real r3122#1 = RMul(r311A,r3103);
          real r3123#1 = RAdd(r311F,r3120);
          real r3124#1 = RAdd(r3123,r3121);
          real r3125#1 = RAdd(r3124,r3122);
          real r3126#1 = RMul(r3114,r3108);
          real r3127#1 = RMul(r3116,r310A);
          real r3128#1 = RMul(r3118,r310C);
          real r3129#1 = RMul(r311A,r310E);
          real r312A#1 = RAdd(r3126,r3127);
          real r312B#1 = RAdd(r312A,r3128);
          real r312C#1 = RAdd(r312B,r3129);
          tensor[3] tensor312D#1 = <tensor[3]>[r311E,r3125,r312C];
          real r312E#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs307B);
          real r312F#1 = RMul(r312E,r30EF);
          real r3130#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs307B);
          real r3131#1 = RMul(r3130,r30F2);
          real r3132#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs307B);
          real r3133#1 = RMul(r3132,r30F5);
          real r3134#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs307B);
          real r3135#1 = RMul(r3134,r30F8);
          real r3136#1 = RAdd(r312F,r3131);
          real r3137#1 = RAdd(r3136,r3133);
          real r3138#1 = RAdd(r3137,r3135);
          real r3139#1 = RMul(r312E,r30FD);
          real r313A#1 = RMul(r3130,r30FF);
          real r313B#1 = RMul(r3132,r3101);
          real r313C#1 = RMul(r3134,r3103);
          real r313D#1 = RAdd(r3139,r313A);
          real r313E#1 = RAdd(r313D,r313B);
          real r313F#1 = RAdd(r313E,r313C);
          real r3140#1 = RMul(r312E,r3108);
          real r3141#1 = RMul(r3130,r310A);
          real r3142#1 = RMul(r3132,r310C);
          real r3143#1 = RMul(r3134,r310E);
          real r3144#1 = RAdd(r3140,r3141);
          real r3145#1 = RAdd(r3144,r3142);
          real r3146#1 = RAdd(r3145,r3143);
          tensor[3] tensor3147#1 = <tensor[3]>[r3138,r313F,r3146];
          tensor[3,3] probe_l_2530ED#18 = <tensor[3,3]>[tensor3113,tensor312D,tensor3147];
          real realLit31A5#9 = 0.e0;
          real r31A6#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_2530ED);
          real r31A7#3 = RMul(realLit31A5,r31A6);
          real r31A8#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_2530ED);
          real r31A9#3 = RMul(realLit31A5,r31A8);
          real r31AA#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_2530ED);
          real r31AB#5 = RMul(realLit31A5,r31AA);
          real r31AC#3 = RAdd(r31A7,r31A9);
          real r31AD#1 = RAdd(r31AC,r31AB);
          real r31AE#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_2530ED);
          real r31AF#3 = RMul(realLit31A5,r31AE);
          real r31B0#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_2530ED);
          real r31B1#3 = RMul(realLit31A5,r31B0);
          real r31B2#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_2530ED);
          real r31B3#5 = RMul(realLit31A5,r31B2);
          real r31B4#3 = RAdd(r31AF,r31B1);
          real r31B5#1 = RAdd(r31B4,r31B3);
          real r31B6#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_2530ED);
          real r31B7#3 = RMul(realLit31A5,r31B6);
          real r31B8#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_2530ED);
          real r31B9#3 = RMul(realLit31A5,r31B8);
          real r31BA#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_2530ED);
          real r31BB#5 = RMul(realLit31A5,r31BA);
          real r31BC#3 = RAdd(r31B7,r31B9);
          real r31BD#1 = RAdd(r31BC,r31BB);
          tensor[3] tensor31BE#3 = <tensor[3]>[r31AD,r31B5,r31BD];
          real realLit31BF#9 = -0.1e1;
          real r31C0#1 = RMul(realLit31BF,r31AA);
          real r31C1#1 = RAdd(r31AC,r31C0);
          real r31C2#1 = RMul(realLit31BF,r31B2);
          real r31C3#1 = RAdd(r31B4,r31C2);
          real r31C4#1 = RMul(realLit31BF,r31BA);
          real r31C5#1 = RAdd(r31BC,r31C4);
          tensor[3] tensor31C6#1 = <tensor[3]>[r31C1,r31C3,r31C5];
          real realLit31C7#9 = 0.1e1;
          real r31C8#1 = RMul(realLit31C7,r31A8);
          real r31C9#1 = RAdd(r31A7,r31C8);
          real r31CA#1 = RAdd(r31C9,r31AB);
          real r31CB#1 = RMul(realLit31C7,r31B0);
          real r31CC#1 = RAdd(r31AF,r31CB);
          real r31CD#1 = RAdd(r31CC,r31B3);
          real r31CE#1 = RMul(realLit31C7,r31B8);
          real r31CF#1 = RAdd(r31B7,r31CE);
          real r31D0#1 = RAdd(r31CF,r31BB);
          tensor[3] tensor31D1#1 = <tensor[3]>[r31CA,r31CD,r31D0];
          tensor[3,3] tensor31D2#1 = <tensor[3,3]>[tensor31BE,tensor31C6,tensor31D1];
          real r31D3#1 = RMul(realLit31C7,r31AA);
          real r31D4#1 = RAdd(r31AC,r31D3);
          real r31D5#1 = RMul(realLit31C7,r31B2);
          real r31D6#1 = RAdd(r31B4,r31D5);
          real r31D7#1 = RMul(realLit31C7,r31BA);
          real r31D8#1 = RAdd(r31BC,r31D7);
          tensor[3] tensor31D9#1 = <tensor[3]>[r31D4,r31D6,r31D8];
          real r31DA#1 = RMul(realLit31BF,r31A6);
          real r31DB#1 = RAdd(r31DA,r31A9);
          real r31DC#1 = RAdd(r31DB,r31AB);
          real r31DD#1 = RMul(realLit31BF,r31AE);
          real r31DE#1 = RAdd(r31DD,r31B1);
          real r31DF#1 = RAdd(r31DE,r31B3);
          real r31E0#1 = RMul(realLit31BF,r31B6);
          real r31E1#1 = RAdd(r31E0,r31B9);
          real r31E2#1 = RAdd(r31E1,r31BB);
          tensor[3] tensor31E3#1 = <tensor[3]>[r31DC,r31DF,r31E2];
          tensor[3,3] tensor31E4#1 = <tensor[3,3]>[tensor31D9,tensor31BE,tensor31E3];
          real r31E5#1 = RMul(realLit31BF,r31A8);
          real r31E6#1 = RAdd(r31A7,r31E5);
          real r31E7#1 = RAdd(r31E6,r31AB);
          real r31E8#1 = RMul(realLit31BF,r31B0);
          real r31E9#1 = RAdd(r31AF,r31E8);
          real r31EA#1 = RAdd(r31E9,r31B3);
          real r31EB#1 = RMul(realLit31BF,r31B8);
          real r31EC#1 = RAdd(r31B7,r31EB);
          real r31ED#1 = RAdd(r31EC,r31BB);
          tensor[3] tensor31EE#1 = <tensor[3]>[r31E7,r31EA,r31ED];
          real r31EF#1 = RMul(realLit31C7,r31A6);
          real r31F0#1 = RAdd(r31EF,r31A9);
          real r31F1#1 = RAdd(r31F0,r31AB);
          real r31F2#1 = RMul(realLit31C7,r31AE);
          real r31F3#1 = RAdd(r31F2,r31B1);
          real r31F4#1 = RAdd(r31F3,r31B3);
          real r31F5#1 = RMul(realLit31C7,r31B6);
          real r31F6#1 = RAdd(r31F5,r31B9);
          real r31F7#1 = RAdd(r31F6,r31BB);
          tensor[3] tensor31F8#1 = <tensor[3]>[r31F1,r31F4,r31F7];
          tensor[3,3] tensor31F9#1 = <tensor[3,3]>[tensor31EE,tensor31F8,tensor31BE];
          tensor[3,3,3] op1_e3_l_2731A4#27 = <tensor[3,3,3]>[tensor31D2,tensor31E4,tensor31F9];
          real r3252#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_2530ED);
          real r3253#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_2731A4);
          real r3254#1 = RMul(r3252,r3253);
          real r3255#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_2530ED);
          real r3256#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_2731A4);
          real r3257#1 = RMul(r3255,r3256);
          real r3258#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_2530ED);
          real r3259#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_2731A4);
          real r325A#1 = RMul(r3258,r3259);
          real r325B#1 = RAdd(r3254,r3257);
          real r325C#1 = RAdd(r325B,r325A);
          real r325D#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_2731A4);
          real r325E#1 = RMul(r3252,r325D);
          real r325F#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_2731A4);
          real r3260#1 = RMul(r3255,r325F);
          real r3261#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_2731A4);
          real r3262#1 = RMul(r3258,r3261);
          real r3263#1 = RAdd(r325E,r3260);
          real r3264#1 = RAdd(r3263,r3262);
          real r3265#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_2731A4);
          real r3266#1 = RMul(r3252,r3265);
          real r3267#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_2731A4);
          real r3268#1 = RMul(r3255,r3267);
          real r3269#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_2731A4);
          real r326A#1 = RMul(r3258,r3269);
          real r326B#1 = RAdd(r3266,r3268);
          real r326C#1 = RAdd(r326B,r326A);
          tensor[3] tensor326D#1 = <tensor[3]>[r325C,r3264,r326C];
          real r326E#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_2731A4);
          real r326F#1 = RMul(r3252,r326E);
          real r3270#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_2731A4);
          real r3271#1 = RMul(r3255,r3270);
          real r3272#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_2731A4);
          real r3273#1 = RMul(r3258,r3272);
          real r3274#1 = RAdd(r326F,r3271);
          real r3275#1 = RAdd(r3274,r3273);
          real r3276#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_2731A4);
          real r3277#1 = RMul(r3252,r3276);
          real r3278#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_2731A4);
          real r3279#1 = RMul(r3255,r3278);
          real r327A#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_2731A4);
          real r327B#1 = RMul(r3258,r327A);
          real r327C#1 = RAdd(r3277,r3279);
          real r327D#1 = RAdd(r327C,r327B);
          real r327E#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_2731A4);
          real r327F#1 = RMul(r3252,r327E);
          real r3280#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_2731A4);
          real r3281#1 = RMul(r3255,r3280);
          real r3282#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_2731A4);
          real r3283#1 = RMul(r3258,r3282);
          real r3284#1 = RAdd(r327F,r3281);
          real r3285#1 = RAdd(r3284,r3283);
          tensor[3] tensor3286#1 = <tensor[3]>[r3275,r327D,r3285];
          real r3287#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_2731A4);
          real r3288#1 = RMul(r3252,r3287);
          real r3289#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_2731A4);
          real r328A#1 = RMul(r3255,r3289);
          real r328B#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_2731A4);
          real r328C#1 = RMul(r3258,r328B);
          real r328D#1 = RAdd(r3288,r328A);
          real r328E#1 = RAdd(r328D,r328C);
          real r328F#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_2731A4);
          real r3290#1 = RMul(r3252,r328F);
          real r3291#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_2731A4);
          real r3292#1 = RMul(r3255,r3291);
          real r3293#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_2731A4);
          real r3294#1 = RMul(r3258,r3293);
          real r3295#1 = RAdd(r3290,r3292);
          real r3296#1 = RAdd(r3295,r3294);
          real r3297#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_2731A4);
          real r3298#1 = RMul(r3252,r3297);
          real r3299#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_2731A4);
          real r329A#1 = RMul(r3255,r3299);
          real r329B#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_2731A4);
          real r329C#1 = RMul(r3258,r329B);
          real r329D#1 = RAdd(r3298,r329A);
          real r329E#1 = RAdd(r329D,r329C);
          tensor[3] tensor329F#1 = <tensor[3]>[r328E,r3296,r329E];
          tensor[3,3] tensor32A0#1 = <tensor[3,3]>[tensor326D,tensor3286,tensor329F];
          real r32A1#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_2530ED);
          real r32A2#1 = RMul(r32A1,r3253);
          real r32A3#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_2530ED);
          real r32A4#1 = RMul(r32A3,r3256);
          real r32A5#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_2530ED);
          real r32A6#1 = RMul(r32A5,r3259);
          real r32A7#1 = RAdd(r32A2,r32A4);
          real r32A8#1 = RAdd(r32A7,r32A6);
          real r32A9#1 = RMul(r32A1,r325D);
          real r32AA#1 = RMul(r32A3,r325F);
          real r32AB#1 = RMul(r32A5,r3261);
          real r32AC#1 = RAdd(r32A9,r32AA);
          real r32AD#1 = RAdd(r32AC,r32AB);
          real r32AE#1 = RMul(r32A1,r3265);
          real r32AF#1 = RMul(r32A3,r3267);
          real r32B0#1 = RMul(r32A5,r3269);
          real r32B1#1 = RAdd(r32AE,r32AF);
          real r32B2#1 = RAdd(r32B1,r32B0);
          tensor[3] tensor32B3#1 = <tensor[3]>[r32A8,r32AD,r32B2];
          real r32B4#1 = RMul(r32A1,r326E);
          real r32B5#1 = RMul(r32A3,r3270);
          real r32B6#1 = RMul(r32A5,r3272);
          real r32B7#1 = RAdd(r32B4,r32B5);
          real r32B8#1 = RAdd(r32B7,r32B6);
          real r32B9#1 = RMul(r32A1,r3276);
          real r32BA#1 = RMul(r32A3,r3278);
          real r32BB#1 = RMul(r32A5,r327A);
          real r32BC#1 = RAdd(r32B9,r32BA);
          real r32BD#1 = RAdd(r32BC,r32BB);
          real r32BE#1 = RMul(r32A1,r327E);
          real r32BF#1 = RMul(r32A3,r3280);
          real r32C0#1 = RMul(r32A5,r3282);
          real r32C1#1 = RAdd(r32BE,r32BF);
          real r32C2#1 = RAdd(r32C1,r32C0);
          tensor[3] tensor32C3#1 = <tensor[3]>[r32B8,r32BD,r32C2];
          real r32C4#1 = RMul(r32A1,r3287);
          real r32C5#1 = RMul(r32A3,r3289);
          real r32C6#1 = RMul(r32A5,r328B);
          real r32C7#1 = RAdd(r32C4,r32C5);
          real r32C8#1 = RAdd(r32C7,r32C6);
          real r32C9#1 = RMul(r32A1,r328F);
          real r32CA#1 = RMul(r32A3,r3291);
          real r32CB#1 = RMul(r32A5,r3293);
          real r32CC#1 = RAdd(r32C9,r32CA);
          real r32CD#1 = RAdd(r32CC,r32CB);
          real r32CE#1 = RMul(r32A1,r3297);
          real r32CF#1 = RMul(r32A3,r3299);
          real r32D0#1 = RMul(r32A5,r329B);
          real r32D1#1 = RAdd(r32CE,r32CF);
          real r32D2#1 = RAdd(r32D1,r32D0);
          tensor[3] tensor32D3#1 = <tensor[3]>[r32C8,r32CD,r32D2];
          tensor[3,3] tensor32D4#1 = <tensor[3,3]>[tensor32B3,tensor32C3,tensor32D3];
          real r32D5#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_2530ED);
          real r32D6#1 = RMul(r32D5,r3253);
          real r32D7#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_2530ED);
          real r32D8#1 = RMul(r32D7,r3256);
          real r32D9#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_2530ED);
          real r32DA#1 = RMul(r32D9,r3259);
          real r32DB#1 = RAdd(r32D6,r32D8);
          real r32DC#1 = RAdd(r32DB,r32DA);
          real r32DD#1 = RMul(r32D5,r325D);
          real r32DE#1 = RMul(r32D7,r325F);
          real r32DF#1 = RMul(r32D9,r3261);
          real r32E0#1 = RAdd(r32DD,r32DE);
          real r32E1#1 = RAdd(r32E0,r32DF);
          real r32E2#1 = RMul(r32D5,r3265);
          real r32E3#1 = RMul(r32D7,r3267);
          real r32E4#1 = RMul(r32D9,r3269);
          real r32E5#1 = RAdd(r32E2,r32E3);
          real r32E6#1 = RAdd(r32E5,r32E4);
          tensor[3] tensor32E7#1 = <tensor[3]>[r32DC,r32E1,r32E6];
          real r32E8#1 = RMul(r32D5,r326E);
          real r32E9#1 = RMul(r32D7,r3270);
          real r32EA#1 = RMul(r32D9,r3272);
          real r32EB#1 = RAdd(r32E8,r32E9);
          real r32EC#1 = RAdd(r32EB,r32EA);
          real r32ED#1 = RMul(r32D5,r3276);
          real r32EE#1 = RMul(r32D7,r3278);
          real r32EF#1 = RMul(r32D9,r327A);
          real r32F0#1 = RAdd(r32ED,r32EE);
          real r32F1#1 = RAdd(r32F0,r32EF);
          real r32F2#1 = RMul(r32D5,r327E);
          real r32F3#1 = RMul(r32D7,r3280);
          real r32F4#1 = RMul(r32D9,r3282);
          real r32F5#1 = RAdd(r32F2,r32F3);
          real r32F6#1 = RAdd(r32F5,r32F4);
          tensor[3] tensor32F7#1 = <tensor[3]>[r32EC,r32F1,r32F6];
          real r32F8#1 = RMul(r32D5,r3287);
          real r32F9#1 = RMul(r32D7,r3289);
          real r32FA#1 = RMul(r32D9,r328B);
          real r32FB#1 = RAdd(r32F8,r32F9);
          real r32FC#1 = RAdd(r32FB,r32FA);
          real r32FD#1 = RMul(r32D5,r328F);
          real r32FE#1 = RMul(r32D7,r3291);
          real r32FF#1 = RMul(r32D9,r3293);
          real r3300#1 = RAdd(r32FD,r32FE);
          real r3301#1 = RAdd(r3300,r32FF);
          real r3302#1 = RMul(r32D5,r3297);
          real r3303#1 = RMul(r32D7,r3299);
          real r3304#1 = RMul(r32D9,r329B);
          real r3305#1 = RAdd(r3302,r3303);
          real r3306#1 = RAdd(r3305,r3304);
          tensor[3] tensor3307#1 = <tensor[3]>[r32FC,r3301,r3306];
          tensor[3,3] tensor3308#1 = <tensor[3,3]>[tensor32E7,tensor32F7,tensor3307];
          tensor[3,3,3] op1_e3_l_283251#27 = <tensor[3,3,3]>[tensor32A0,tensor32D4,tensor3308];
          real r33C3#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs307B);
          real r33C4#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult30CF);
          real r33C5#1 = RMul(r33C3,r33C4);
          real r33C6#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs307B);
          real r33C7#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult30CF);
          real r33C8#1 = RMul(r33C6,r33C7);
          real r33C9#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs307B);
          real r33CA#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult30CF);
          real r33CB#1 = RMul(r33C9,r33CA);
          real r33CC#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs307B);
          real r33CD#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult30CF);
          real r33CE#1 = RMul(r33CC,r33CD);
          real r33CF#1 = RAdd(r33C5,r33C8);
          real r33D0#1 = RAdd(r33CF,r33CB);
          real r33D1#1 = RAdd(r33D0,r33CE);
          real r33D2#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs307B);
          real r33D3#1 = RMul(r33D2,r33C4);
          real r33D4#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs307B);
          real r33D5#1 = RMul(r33D4,r33C7);
          real r33D6#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs307B);
          real r33D7#1 = RMul(r33D6,r33CA);
          real r33D8#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs307B);
          real r33D9#1 = RMul(r33D8,r33CD);
          real r33DA#1 = RAdd(r33D3,r33D5);
          real r33DB#1 = RAdd(r33DA,r33D7);
          real r33DC#1 = RAdd(r33DB,r33D9);
          real r33DD#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs307B);
          real r33DE#1 = RMul(r33DD,r33C4);
          real r33DF#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs307B);
          real r33E0#1 = RMul(r33DF,r33C7);
          real r33E1#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs307B);
          real r33E2#1 = RMul(r33E1,r33CA);
          real r33E3#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs307B);
          real r33E4#1 = RMul(r33E3,r33CD);
          real r33E5#1 = RAdd(r33DE,r33E0);
          real r33E6#1 = RAdd(r33E5,r33E2);
          real r33E7#1 = RAdd(r33E6,r33E4);
          tensor[3] probe_l_2933C2#1 = <tensor[3]>[r33D1,r33DC,r33E7];
          real r3410#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs307B);
          real r3411#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult30CF);
          real r3412#1 = RMul(r3410,r3411);
          real r3413#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs307B);
          real r3414#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult30CF);
          real r3415#1 = RMul(r3413,r3414);
          real r3416#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs307B);
          real r3417#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult30CF);
          real r3418#1 = RMul(r3416,r3417);
          real r3419#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs307B);
          real r341A#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult30CF);
          real r341B#1 = RMul(r3419,r341A);
          real r341C#1 = RAdd(r3412,r3415);
          real r341D#1 = RAdd(r341C,r3418);
          real r341E#1 = RAdd(r341D,r341B);
          real r341F#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs307B);
          real r3420#1 = RMul(r341F,r3411);
          real r3421#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs307B);
          real r3422#1 = RMul(r3421,r3414);
          real r3423#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs307B);
          real r3424#1 = RMul(r3423,r3417);
          real r3425#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs307B);
          real r3426#1 = RMul(r3425,r341A);
          real r3427#1 = RAdd(r3420,r3422);
          real r3428#1 = RAdd(r3427,r3424);
          real r3429#1 = RAdd(r3428,r3426);
          real r342A#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs307B);
          real r342B#1 = RMul(r342A,r3411);
          real r342C#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs307B);
          real r342D#1 = RMul(r342C,r3414);
          real r342E#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs307B);
          real r342F#1 = RMul(r342E,r3417);
          real r3430#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs307B);
          real r3431#1 = RMul(r3430,r341A);
          real r3432#1 = RAdd(r342B,r342D);
          real r3433#1 = RAdd(r3432,r342F);
          real r3434#1 = RAdd(r3433,r3431);
          tensor[3] probe_l_30340F#3 = <tensor[3]>[r341E,r3429,r3434];
          real r345D#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs307B);
          real r345E#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult30CF);
          real r345F#1 = RMul(r345D,r345E);
          real r3460#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs307B);
          real r3461#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult30CF);
          real r3462#1 = RMul(r3460,r3461);
          real r3463#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs307B);
          real r3464#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult30CF);
          real r3465#1 = RMul(r3463,r3464);
          real r3466#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs307B);
          real r3467#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult30CF);
          real r3468#1 = RMul(r3466,r3467);
          real r3469#1 = RAdd(r345F,r3462);
          real r346A#1 = RAdd(r3469,r3465);
          real r346B#1 = RAdd(r346A,r3468);
          real r346C#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs307B);
          real r346D#1 = RMul(r346C,r345E);
          real r346E#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs307B);
          real r346F#1 = RMul(r346E,r3461);
          real r3470#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs307B);
          real r3471#1 = RMul(r3470,r3464);
          real r3472#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs307B);
          real r3473#1 = RMul(r3472,r3467);
          real r3474#1 = RAdd(r346D,r346F);
          real r3475#1 = RAdd(r3474,r3471);
          real r3476#1 = RAdd(r3475,r3473);
          real r3477#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs307B);
          real r3478#1 = RMul(r3477,r345E);
          real r3479#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs307B);
          real r347A#1 = RMul(r3479,r3461);
          real r347B#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs307B);
          real r347C#1 = RMul(r347B,r3464);
          real r347D#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs307B);
          real r347E#1 = RMul(r347D,r3467);
          real r347F#1 = RAdd(r3478,r347A);
          real r3480#1 = RAdd(r347F,r347C);
          real r3481#1 = RAdd(r3480,r347E);
          tensor[3] probe_l_31345C#3 = <tensor[3]>[r346B,r3476,r3481];
          real realLit34AA#3 = 0.e0;
          real r34AB#3 = TensorIndex<tensor[3],[0]>(probe_l_31345C);
          real r34AC#3 = RMul(realLit34AA,r34AB);
          real r34AD#3 = TensorIndex<tensor[3],[1]>(probe_l_31345C);
          real r34AE#3 = RMul(realLit34AA,r34AD);
          real r34AF#3 = TensorIndex<tensor[3],[2]>(probe_l_31345C);
          real r34B0#5 = RMul(realLit34AA,r34AF);
          real r34B1#3 = RAdd(r34AC,r34AE);
          real r34B2#3 = RAdd(r34B1,r34B0);
          real realLit34B3#3 = 0.1e1;
          real r34B4#1 = RMul(realLit34B3,r34AF);
          real r34B5#1 = RAdd(r34B1,r34B4);
          real realLit34B6#3 = -0.1e1;
          real r34B7#1 = RMul(realLit34B6,r34AD);
          real r34B8#1 = RAdd(r34AC,r34B7);
          real r34B9#1 = RAdd(r34B8,r34B0);
          tensor[3] tensor34BA#1 = <tensor[3]>[r34B2,r34B5,r34B9];
          real r34BB#1 = RMul(realLit34B6,r34AF);
          real r34BC#1 = RAdd(r34B1,r34BB);
          real r34BD#1 = RMul(realLit34B3,r34AB);
          real r34BE#1 = RAdd(r34BD,r34AE);
          real r34BF#1 = RAdd(r34BE,r34B0);
          tensor[3] tensor34C0#1 = <tensor[3]>[r34BC,r34B2,r34BF];
          real r34C1#1 = RMul(realLit34B3,r34AD);
          real r34C2#1 = RAdd(r34AC,r34C1);
          real r34C3#1 = RAdd(r34C2,r34B0);
          real r34C4#1 = RMul(realLit34B6,r34AB);
          real r34C5#1 = RAdd(r34C4,r34AE);
          real r34C6#1 = RAdd(r34C5,r34B0);
          tensor[3] tensor34C7#1 = <tensor[3]>[r34C3,r34C6,r34B2];
          tensor[3,3] op1_e3_l_3234A9#3 = <tensor[3,3]>[tensor34BA,tensor34C0,tensor34C7];
          tensor[3] projParam34E9#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_3234A9);
          real vdot34EA#1 = VDot<3>(probe_l_30340F,projParam34E9);
          tensor[3] projParam34EB#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_3234A9);
          real vdot34EC#1 = VDot<3>(probe_l_30340F,projParam34EB);
          tensor[3] projParam34ED#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_3234A9);
          real vdot34EE#1 = VDot<3>(probe_l_30340F,projParam34ED);
          tensor[3] op1_e3_l_3334E8#1 = <tensor[3]>[vdot34EA,vdot34EC,vdot34EE];
          real op1_e3_l_3434F7#1 = VDot<3>(probe_l_2933C2,op1_e3_l_3334E8);
          real realLit34FB#27 = 0.e0;
          real r34FC#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_283251);
          real r34FD#2 = RMul(realLit34FB,r34FC);
          real r34FE#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_283251);
          real r34FF#1 = RMul(realLit34FB,r34FE);
          real r3500#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_283251);
          real r3501#2 = RMul(realLit34FB,r3500);
          real r3502#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_283251);
          real r3503#2 = RMul(realLit34FB,r3502);
          real r3504#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_283251);
          real r3505#3 = RMul(realLit34FB,r3504);
          real realLit3506#9 = 0.1e1;
          real r3507#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_283251);
          real r3508#1 = RMul(realLit3506,r3507);
          real r3509#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_283251);
          real r350A#2 = RMul(realLit34FB,r3509);
          real realLit350B#9 = -0.1e1;
          real r350C#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_283251);
          real r350D#1 = RMul(realLit350B,r350C);
          real r350E#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_283251);
          real r350F#3 = RMul(realLit34FB,r350E);
          real r3510#2 = RAdd(r34FD,r34FF);
          real r3511#1 = RAdd(r3510,r3501);
          real r3512#1 = RAdd(r3511,r3503);
          real r3513#1 = RAdd(r3512,r3505);
          real r3514#1 = RAdd(r3513,r3508);
          real r3515#1 = RAdd(r3514,r350A);
          real r3516#1 = RAdd(r3515,r350D);
          real r3517#1 = RAdd(r3516,r350F);
          real r3518#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_283251);
          real r3519#2 = RMul(realLit34FB,r3518);
          real r351A#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_283251);
          real r351B#1 = RMul(realLit34FB,r351A);
          real r351C#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_283251);
          real r351D#2 = RMul(realLit34FB,r351C);
          real r351E#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_283251);
          real r351F#2 = RMul(realLit34FB,r351E);
          real r3520#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_283251);
          real r3521#3 = RMul(realLit34FB,r3520);
          real r3522#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_283251);
          real r3523#1 = RMul(realLit3506,r3522);
          real r3524#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_283251);
          real r3525#2 = RMul(realLit34FB,r3524);
          real r3526#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_283251);
          real r3527#1 = RMul(realLit350B,r3526);
          real r3528#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_283251);
          real r3529#3 = RMul(realLit34FB,r3528);
          real r352A#2 = RAdd(r3519,r351B);
          real r352B#1 = RAdd(r352A,r351D);
          real r352C#1 = RAdd(r352B,r351F);
          real r352D#1 = RAdd(r352C,r3521);
          real r352E#1 = RAdd(r352D,r3523);
          real r352F#1 = RAdd(r352E,r3525);
          real r3530#1 = RAdd(r352F,r3527);
          real r3531#1 = RAdd(r3530,r3529);
          real r3532#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_283251);
          real r3533#2 = RMul(realLit34FB,r3532);
          real r3534#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_283251);
          real r3535#1 = RMul(realLit34FB,r3534);
          real r3536#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_283251);
          real r3537#2 = RMul(realLit34FB,r3536);
          real r3538#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_283251);
          real r3539#2 = RMul(realLit34FB,r3538);
          real r353A#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_283251);
          real r353B#3 = RMul(realLit34FB,r353A);
          real r353C#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_283251);
          real r353D#1 = RMul(realLit3506,r353C);
          real r353E#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_283251);
          real r353F#2 = RMul(realLit34FB,r353E);
          real r3540#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_283251);
          real r3541#1 = RMul(realLit350B,r3540);
          real r3542#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_283251);
          real r3543#3 = RMul(realLit34FB,r3542);
          real r3544#2 = RAdd(r3533,r3535);
          real r3545#1 = RAdd(r3544,r3537);
          real r3546#1 = RAdd(r3545,r3539);
          real r3547#1 = RAdd(r3546,r353B);
          real r3548#1 = RAdd(r3547,r353D);
          real r3549#1 = RAdd(r3548,r353F);
          real r354A#1 = RAdd(r3549,r3541);
          real r354B#1 = RAdd(r354A,r3543);
          tensor[3] tensor354C#1 = <tensor[3]>[r3517,r3531,r354B];
          real r354D#1 = RMul(realLit350B,r3500);
          real r354E#2 = RMul(realLit34FB,r3507);
          real r354F#1 = RMul(realLit3506,r3509);
          real r3550#2 = RMul(realLit34FB,r350C);
          real r3551#1 = RAdd(r3510,r354D);
          real r3552#1 = RAdd(r3551,r3503);
          real r3553#1 = RAdd(r3552,r3505);
          real r3554#1 = RAdd(r3553,r354E);
          real r3555#1 = RAdd(r3554,r354F);
          real r3556#1 = RAdd(r3555,r3550);
          real r3557#1 = RAdd(r3556,r350F);
          real r3558#1 = RMul(realLit350B,r351C);
          real r3559#2 = RMul(realLit34FB,r3522);
          real r355A#1 = RMul(realLit3506,r3524);
          real r355B#2 = RMul(realLit34FB,r3526);
          real r355C#1 = RAdd(r352A,r3558);
          real r355D#1 = RAdd(r355C,r351F);
          real r355E#1 = RAdd(r355D,r3521);
          real r355F#1 = RAdd(r355E,r3559);
          real r3560#1 = RAdd(r355F,r355A);
          real r3561#1 = RAdd(r3560,r355B);
          real r3562#1 = RAdd(r3561,r3529);
          real r3563#1 = RMul(realLit350B,r3536);
          real r3564#2 = RMul(realLit34FB,r353C);
          real r3565#1 = RMul(realLit3506,r353E);
          real r3566#2 = RMul(realLit34FB,r3540);
          real r3567#1 = RAdd(r3544,r3563);
          real r3568#1 = RAdd(r3567,r3539);
          real r3569#1 = RAdd(r3568,r353B);
          real r356A#1 = RAdd(r3569,r3564);
          real r356B#1 = RAdd(r356A,r3565);
          real r356C#1 = RAdd(r356B,r3566);
          real r356D#1 = RAdd(r356C,r3543);
          tensor[3] tensor356E#1 = <tensor[3]>[r3557,r3562,r356D];
          real r356F#1 = RMul(realLit3506,r34FE);
          real r3570#1 = RMul(realLit350B,r3502);
          real r3571#1 = RAdd(r34FD,r356F);
          real r3572#1 = RAdd(r3571,r3501);
          real r3573#1 = RAdd(r3572,r3570);
          real r3574#1 = RAdd(r3573,r3505);
          real r3575#1 = RAdd(r3574,r354E);
          real r3576#1 = RAdd(r3575,r350A);
          real r3577#1 = RAdd(r3576,r3550);
          real r3578#1 = RAdd(r3577,r350F);
          real r3579#1 = RMul(realLit3506,r351A);
          real r357A#1 = RMul(realLit350B,r351E);
          real r357B#1 = RAdd(r3519,r3579);
          real r357C#1 = RAdd(r357B,r351D);
          real r357D#1 = RAdd(r357C,r357A);
          real r357E#1 = RAdd(r357D,r3521);
          real r357F#1 = RAdd(r357E,r3559);
          real r3580#1 = RAdd(r357F,r3525);
          real r3581#1 = RAdd(r3580,r355B);
          real r3582#1 = RAdd(r3581,r3529);
          real r3583#1 = RMul(realLit3506,r3534);
          real r3584#1 = RMul(realLit350B,r3538);
          real r3585#1 = RAdd(r3533,r3583);
          real r3586#1 = RAdd(r3585,r3537);
          real r3587#1 = RAdd(r3586,r3584);
          real r3588#1 = RAdd(r3587,r353B);
          real r3589#1 = RAdd(r3588,r3564);
          real r358A#1 = RAdd(r3589,r353F);
          real r358B#1 = RAdd(r358A,r3566);
          real r358C#1 = RAdd(r358B,r3543);
          tensor[3] tensor358D#1 = <tensor[3]>[r3578,r3582,r358C];
          tensor[3,3] op1_e3_l_3534FA#9 = <tensor[3,3]>[tensor354C,tensor356E,tensor358D];
          real realLit3624#1 = 0.2e1;
          real op1_e3_l_363623#9 = RMul(realLit3624,op1_e3_l_3434F7);
          real r3629#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_3534FA);
          real r362A#1 = RDiv(r3629,op1_e3_l_363623);
          real r362B#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_3534FA);
          real r362C#1 = RDiv(r362B,op1_e3_l_363623);
          real r362D#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_3534FA);
          real r362E#1 = RDiv(r362D,op1_e3_l_363623);
          tensor[3] tensor362F#1 = <tensor[3]>[r362A,r362C,r362E];
          real r3630#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_3534FA);
          real r3631#1 = RDiv(r3630,op1_e3_l_363623);
          real r3632#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_3534FA);
          real r3633#1 = RDiv(r3632,op1_e3_l_363623);
          real r3634#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_3534FA);
          real r3635#1 = RDiv(r3634,op1_e3_l_363623);
          tensor[3] tensor3636#1 = <tensor[3]>[r3631,r3633,r3635];
          real r3637#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_3534FA);
          real r3638#1 = RDiv(r3637,op1_e3_l_363623);
          real r3639#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_3534FA);
          real r363A#1 = RDiv(r3639,op1_e3_l_363623);
          real r363B#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_3534FA);
          real r363C#1 = RDiv(r363B,op1_e3_l_363623);
          tensor[3] tensor363D#1 = <tensor[3]>[r3638,r363A,r363C];
          tensor[3,3] op1_e3_l_373628#9 = <tensor[3,3]>[tensor362F,tensor3636,tensor363D];
          real r3656#3 = TensorIndex<tensor[3],[0]>(compositionl304C);
          real r3657#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_373628);
          real r3658#1 = RMul(r3656,r3657);
          real r3659#3 = TensorIndex<tensor[3],[1]>(compositionl304C);
          real r365A#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_373628);
          real r365B#1 = RMul(r3659,r365A);
          real r365C#3 = TensorIndex<tensor[3],[2]>(compositionl304C);
          real r365D#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_373628);
          real r365E#1 = RMul(r365C,r365D);
          real r365F#1 = RAdd(r3658,r365B);
          real r3660#1 = RAdd(r365F,r365E);
          real r3661#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_373628);
          real r3662#1 = RMul(r3656,r3661);
          real r3663#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_373628);
          real r3664#1 = RMul(r3659,r3663);
          real r3665#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_373628);
          real r3666#1 = RMul(r365C,r3665);
          real r3667#1 = RAdd(r3662,r3664);
          real r3668#1 = RAdd(r3667,r3666);
          real r3669#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_373628);
          real r366A#1 = RMul(r3656,r3669);
          real r366B#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_373628);
          real r366C#1 = RMul(r3659,r366B);
          real r366D#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_373628);
          real r366E#1 = RMul(r365C,r366D);
          real r366F#1 = RAdd(r366A,r366C);
          real r3670#1 = RAdd(r366F,r366E);
          tensor[3] op1_e3_l_383655#1 = <tensor[3]>[r3660,r3668,r3670];
          tensor[3] op1_e3_l_54368E#3 = VNeg<3>(op1_e3_l_383655);
          real op1_e3_l_563691#1 = VDot<3>(op1_e3_l_54368E,op1_e3_l_54368E);
          real op1_e3_l_573694#2 = Sqrt(op1_e3_l_563691);
          real op1_e3_l_583697#1 = Abs<real>(op1_e3_l_232FCF);
          real op1_e3_l_59369A#1 = RMul(thick1F90,op1_e3_l_573694);
          real op1_e3_l_60369D#1 = RDiv(op1_e3_l_583697,op1_e3_l_59369A);
          real op1_e3_l_6136A0#1 = RSub(_t1FCE,op1_e3_l_60369D);
          real op1_e3_l_6236A3#2 = RMul(_t2E86,op1_e3_l_6136A0);
          real op1_e3_l_6336A6#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real a36A9#1 = RMul(_t1FCE,op1_e3_l_6336A6);
          bool _t36AC#1 = GT<real>(a36A9,_t1FC7);
          if _t36AC then goto ASSIGN36B1 else goto JOIN3780
        ASSIGN36B1:  preds = [COND36AE]
          real op1_e3_l_6436AF#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real op1_e3_l_6536B2#1 = RMul(_t1FCE,op1_e3_l_6436AF);
          real _t36B5#1 = RSub(_t1FCE,op1_e3_l_6536B2);
          real op1_e3_l_336B8#1 = VDot<3>(rayVec1FAA,rayVec1FAA);
          real op1_e3_l_436BB#1 = Sqrt(op1_e3_l_336B8);
          real op1_e3_l_536BE#1 = RMul(rayStep1F9A,op1_e3_l_436BB);
          real _t36C1#1 = RDiv(op1_e3_l_536BE,refStep1F98);
          real _t36C4#1 = MathFn<pow>(_t36B5,_t36C1);
          real _t36C6#2 = 0.11e1;
          real _t36C8#1 = 0.7e0;
          real realLit36CB#1 = 0.1e1;
          real op1_e3_l_6736CA#1 = RDiv(realLit36CB,op1_e3_l_573694);
          real op1_e3_l_6836CF#1 = VDot<3>(op1_e3_l_54368E,light1FA6);
          real _t36D2#1 = RMul(op1_e3_l_6736CA,op1_e3_l_6836CF);
          real shade36D5#1 = Max<real>(_t1FC7,_t36D2);
          real _t36D7#1 = compositionl2FCC;
          real op1_e3_l_1536D9#1 = RSub(rayN1FA8,camNear1F94);
          real op1_e3_l_1636DC#1 = RSub(camFar1F96,camNear1F94);
          real op1_e3_l_1736DF#1 = RDiv(op1_e3_l_1536D9,op1_e3_l_1636DC);
          real op1_e3_l_1836E2#1 = RSub(_t36C8,_t36C6);
          real op1_e3_l_1936E5#1 = RMul(op1_e3_l_1736DF,op1_e3_l_1836E2);
          real op1_e3_l_2036E8#1 = RMul(phongKd1F9E,shade36D5);
          real Mtransform36EB#1 = Transform<IMAGE1D<double[3]>>(I1F80);
          real MxPos36ED#1 = RMul(Mtransform36EB,_t36D7);
          real Ttranslate36F0#1 = Translate<IMAGE1D<double[3]>>(I1F80);
          real imgPos36F2#2 = RAdd(MxPos36ED,Ttranslate36F0);
          real nd36F5#2 = Floor<1>(imgPos36F2);
          real f36F7#2 = RSub(imgPos36F2,nd36F5);
          int n36FA#1 = RealToInt<1>(nd36F5);
          int idx36FC#5 = n36FA;
          bool isInside36FE#1 = IndexInside<IMAGE1D<double[3]>,2>(idx36FC,I1F80);
          if isInside36FE then goto ASSIGN3718 else goto ASSIGN37C9
        ASSIGN3718:  preds = [COND3700]
          int ilit3702#1 = 0;
          int addRes3703#1 = IAdd(idx36FC,ilit3702);
          int stride3704#2 = 3;
          int offp3705#3 = IMul(stride3704,addRes3703);
          real v0_3706#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3705);
          int ilit3707#3 = 1;
          int addRes3708#1 = IAdd(idx36FC,ilit3707);
          int offp3709#3 = IMul(stride3704,addRes3708);
          real v1_370A#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3709);
          tensor[2] v_370B#1 = <tensor[2]>[v0_3706,v1_370A];
          int offp370C#1 = IAdd(offp3705,ilit3707);
          real v0_370D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370C);
          int offp370E#1 = IAdd(offp3709,ilit3707);
          real v1_370F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370E);
          tensor[2] v_3710#1 = <tensor[2]>[v0_370D,v1_370F];
          int offset3711#2 = 2;
          int offp3712#1 = IAdd(offp3705,offset3711);
          real v0_3713#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3712);
          int offp3714#1 = IAdd(offp3709,offset3711);
          real v1_3715#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3714);
          tensor[2] v_3716#1 = <tensor[2]>[v0_3713,v1_3715];
          tensor[3,2] voxels3717#1 = <tensor[3,2]>[v_370B,v_3710,v_3716];
          tensor[3,2] ldvox3701#1 = voxels3717;
          goto JOIN3731
        JOIN3731:  preds = [ASSIGN372E,ASSIGN37E1]
          tensor[3,2] ldvox372F#3 = phi(ldvox3701,ldvox3730)
          real rlit3733#1 = 0.1e1;
          real idx3734#1 = RSub(f36F7,rlit3733);
          tensor[2] kernX_3732#1 = <tensor[2]>[f36F7,idx3734];
          real _f373D#1 = 0.1e1;
          real _f373E#1 = 0.1e1;
          tensor[2] a03739#1 = <tensor[2]>[_f373D,_f373E];
          real _f373B#1 = -0.1e1;
          real _f373C#1 = 0.1e1;
          tensor[2] a1373A#1 = <tensor[2]>[_f373B,_f373C];
          tensor[2] prod1373F#1 = VMul<2>(kernX_3732,a1373A);
          tensor[2] kevalX_d0_3738#3 = VAdd<2>(a03739,prod1373F);
          tensor[2] projIx3749#1 = ProjectLast<tensor[3,2],[0]>(ldvox372F);
          real vdot374A#1 = VDot<2>(projIx3749,kevalX_d0_3738);
          tensor[2] projIx374B#1 = ProjectLast<tensor[3,2],[1]>(ldvox372F);
          real vdot374C#1 = VDot<2>(projIx374B,kevalX_d0_3738);
          tensor[2] projIx374D#1 = ProjectLast<tensor[3,2],[2]>(ldvox372F);
          real vdot374E#1 = VDot<2>(projIx374D,kevalX_d0_3738);
          tensor[3] probe_l_213748#3 = <tensor[3]>[vdot374A,vdot374C,vdot374E];
          real op1_e3_l_223757#2 = RSub(_t1FCE,_t36C4);
          real op1_e3_l_23375A#1 = RAdd(_t36C6,op1_e3_l_1936E5);
          real op1_e3_l_24375D#1 = RAdd(phongKa1F9C,op1_e3_l_2036E8);
          real r3761#1 = TensorIndex<tensor[3],[0]>(probe_l_213748);
          real r3762#1 = RMul(transp1FAC,op1_e3_l_223757);
          real r3763#1 = RMul(r3762,op1_e3_l_23375A);
          real r3764#3 = RMul(r3763,op1_e3_l_24375D);
          real r3765#1 = RMul(r3764,r3761);
          real r3766#1 = TensorIndex<tensor[3],[1]>(probe_l_213748);
          real r3767#1 = RMul(r3764,r3766);
          real r3768#1 = TensorIndex<tensor[3],[2]>(probe_l_213748);
          real r3769#1 = RMul(r3764,r3768);
          tensor[3] op1_e3_l_253760#1 = <tensor[3]>[r3765,r3767,r3769];
          tensor[3] rgb3775#1 = VAdd<3>(rgb1FAE,op1_e3_l_253760);
          real op1_e3_l_53778#1 = RSub(_t1FCE,op1_e3_l_223757);
          real transp377B#1 = RMul(transp1FAC,op1_e3_l_53778);
          goto JOIN3780
        JOIN3780:  preds = [ASSIGN377D,COND36AE]
          tensor[3] rgb377E#1 = phi(rgb3775,rgb1FAE)
          real transp377F#1 = phi(transp377B,transp1FAC)
          string _t3781#1 = "yay!\n";
          Print<[string]>(_t3781);
          goto JOIN3786
        JOIN3786:  preds = [MASSIGN3783,MASSIGN37E7]
          tensor[3] rgb3784#1 = phi(rgb377E,rgb1FAE)
          real transp3785#1 = phi(transp377F,transp1FAC)
          goto JOIN3789
        JOIN3789:  preds = [JOIN3786,COND1FE2]
          tensor[3] rgb3787#1 = phi(rgb3784,rgb1FAE)
          real transp3788#1 = phi(transp3785,transp1FAC)
          goto JOIN378C
        JOIN378C:  preds = [JOIN3789,COND1FDF]
          tensor[3] rgb378A#1 = phi(rgb3787,rgb1FAE)
          real transp378B#1 = phi(transp3788,transp1FAC)
          goto JOIN378F
        JOIN378F:  preds = [JOIN378C,COND1FDA]
          tensor[3] rgb378D#1 = phi(rgb378A,rgb1FAE)
          real transp378E#1 = phi(transp378B,transp1FAC)
          goto JOIN3792
        JOIN3792:  preds = [JOIN378F,COND1FD7]
          tensor[3] rgb3790#1 = phi(rgb378D,rgb1FAE)
          real transp3791#1 = phi(transp378E,transp1FAC)
          goto JOIN3795
        JOIN3795:  preds = [JOIN3792,COND1FD2]
          tensor[3] rgb3793#1 = phi(rgb3790,rgb1FAE)
          real transp3794#1 = phi(transp3791,transp1FAC)
          goto JOIN3798
        JOIN3798:  preds = [JOIN3795,COND1FCD]
          tensor[3] rgb3796#3 = phi(rgb3793,rgb1FAE)
          real transp3797#2 = phi(transp3794,transp1FAC)
          real _t3799#1 = 0.1e-1;
          bool _t379B#1 = LT<real>(transp3797,_t3799);
          if _t379B then goto SAVE379E else goto JOIN37A2
        SAVE379E:  preds = [COND379D]
          self.transp = _t1FC7;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A2
        JOIN37A2:  preds = [*STABILIZE37A0,COND379D]
          real transp37A1#2 = phi(transp3797)
          bool _t37A3#1 = GT<real>(rayN1FA8,camFar1F96);
          if _t37A3 then goto SAVE37A6 else goto JOIN37A9
        SAVE37A6:  preds = [COND37A5]
          self.transp = transp37A1;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A9
        JOIN37A9:  preds = [*STABILIZE37A8,COND37A5]
          real rayN37AA#1 = RAdd(rayN1FA8,rayStep1F9A);
          self.rayN = rayN37AA;
          self.transp = transp37A1;
          self.rgb = rgb3796;
          active
        ASSIGN37C9:  preds = [COND3700]
          int ilit37B1#1 = 0;
          int addRes37B2#1 = IAdd(idx36FC,ilit37B1);
          int ix37B3#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B2);
          int stride37B4#2 = 3;
          int offp37B5#3 = IMul(stride37B4,ix37B3);
          real v0_37B6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37B5);
          int ilit37B7#3 = 1;
          int addRes37B8#1 = IAdd(idx36FC,ilit37B7);
          int ix37B9#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B8);
          int offp37BA#3 = IMul(stride37B4,ix37B9);
          real v1_37BB#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BA);
          tensor[2] v_37BC#1 = <tensor[2]>[v0_37B6,v1_37BB];
          int offp37BD#1 = IAdd(offp37B5,ilit37B7);
          real v0_37BE#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BD);
          int offp37BF#1 = IAdd(offp37BA,ilit37B7);
          real v1_37C0#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BF);
          tensor[2] v_37C1#1 = <tensor[2]>[v0_37BE,v1_37C0];
          int offset37C2#2 = 2;
          int offp37C3#1 = IAdd(offp37B5,offset37C2);
          real v0_37C4#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C3);
          int offp37C5#1 = IAdd(offp37BA,offset37C2);
          real v1_37C6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C5);
          tensor[2] v_37C7#1 = <tensor[2]>[v0_37C4,v1_37C6];
          tensor[3,2] voxels37C8#1 = <tensor[3,2]>[v_37BC,v_37C1,v_37C7];
          tensor[3,2] ldvox3730#1 = voxels37C8;
          goto JOIN3731
        ASSIGN37E3:  preds = [COND2E85]
          string _t37E2#1 = "\n";
          Print<[tensor[3],string]>(x1FC4,_t37E2);
          string _t37E5#1 = "wait what\?\n";
          Print<[string]>(_t37E5);
          goto JOIN3786
        ASSIGN37E8:  preds = [COND1FB7]
          bool _t1FBB#1 = NEQ<int>(vi1FB2,sv1FA4);
          goto JOIN1FBC
    end update
    method stabilize
        ENTRY37E9:  preds = []
          bool debug37EA#1 = globals.debug1D18;
          int su37EC#1 = globals.su1D19;
          int sv37EE#1 = globals.sv1D1A;
          real transp37F0#1 = self.transp;
          tensor[3] rgb37F2#3 = self.rgb;
          tensor[4] rgba37F4#1 = self.rgba;
          int ui37F6#1 = self.ui;
          int vi37F8#1 = self.vi;
          real _t37FA#1 = 0.1e1;
          real a37FC#6 = RSub(_t37FA,transp37F0);
          real _t37FF#1 = 0.e0;
          bool _t3801#1 = GT<real>(a37FC,_t37FF);
          if _t3801 then goto ASSIGN3805 else goto JOIN3816
        ASSIGN3805:  preds = [COND3803]
          real _t3804#1 = VIndex<3,0>(rgb37F2);
          real _t3806#1 = RDiv(_t3804,a37FC);
          real _t3809#1 = VIndex<3,1>(rgb37F2);
          real _t380B#1 = RDiv(_t3809,a37FC);
          real _t380E#1 = VIndex<3,2>(rgb37F2);
          real _t3810#1 = RDiv(_t380E,a37FC);
          tensor[4] rgba3813#1 = <tensor[4]>[_t3806,_t380B,_t3810,a37FC];
          goto JOIN3816
        JOIN3816:  preds = [ASSIGN3814,COND3803]
          tensor[4] rgba3815#2 = phi(rgba3813,rgba37F4)
          bool _t3817#1 = EQ<int>(ui37F6,su37EC);
          if _t3817 then goto ASSIGN381B else goto JOIN3821
        ASSIGN381B:  preds = [COND3819]
          bool _t381A#1 = EQ<int>(vi37F8,sv37EE);
          if _t381A then goto COND381D else goto JOIN3820
        COND381D:  preds = [COND381C]
          if debug37EA then goto MASSIGN381E else goto JOIN381F
        MASSIGN381E:  preds = [COND381D]
          Print<[real,tensor[4]]>(a37FC,rgba3815);
          goto JOIN381F
        JOIN381F:  preds = [MASSIGN381E,COND381D]
          goto JOIN3820
        JOIN3820:  preds = [JOIN381F,COND381C]
          goto JOIN3821
        JOIN3821:  preds = [JOIN3820,COND3819]
          self.rgba = rgba3815;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY3824:  preds = []
      int iresU3825#1 = globals.iresU1D0F;
      int iresV3827#1 = globals.iresV1D10;
      int _t3829#2 = 0;
      int _t382B#2 = 1;
      int _t382D#1 = ISub(iresV3827,_t382B);
      int[] _t382F#1 = Range(_t3829,_t382D);
    FOREACH3832:  preds = [ASSIGN3830,NEXT383B]
      foreach (vi3831 in _t382F) on exit goto RETURN383C
      int _t3833#1 = ISub(iresU3825,_t382B);
      int[] _t3835#1 = Range(_t3829,_t3833);
    FOREACH3838:  preds = [ASSIGN3836,NEXT383A]
      foreach (ui3837 in _t3835) on exit goto NEXT383B
      new raycast(ui3837,vi3831);
      goto FOREACH3838
    NEXT383B:  preds = [FOREACH3838]
      goto FOREACH3832
    RETURN383C:  preds = [FOREACH3832]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1D06 (a) = <no-default>
  input 0b043B_intermedateGlobal1D07 (b) = <no-default>
  input 0c043D_intermedateGlobal1D08 (c) = <no-default>
  input isoval1D09 (isoval) = <default>
  input thick1D0A (thick) = <default>
  input camEye1D0B (camEye) = <default>
  input camAt1D0C (camAt) = <default>
  input camUp1D0D (camUp) = <default>
  input camFOV1D0E (camFOV) = <default>
  input iresU1D0F (iresU) = <default>
  input iresV1D10 (iresV) = <default>
  input camNear1D11 (camNear) = <default>
  input camFar1D12 (camFar) = <default>
  input refStep1D13 (refStep) = <default>
  input rayStep1D14 (rayStep) = <default>
  input lightVsp1D15 (lightVsp) = <default>
  input phongKa1D16 (phongKa) = <default>
  input phongKd1D17 (phongKd) = <default>
  input debug1D18 (debug) = <default>
  input su1D19 (su) = <default>
  input sv1D1A (sv) = <default>
  global real camDist1D1B
  global tensor[3] camN1D1C
  global tensor[3] camU1D1D
  global tensor[3] camV1D1E
  global real camVmax1D1F
  global real camUmax1D20
  global tensor[3] light1D21
  global femData:Mesh _t1D22
  global femData:Space _tX1D23
  global femData:FemFunc c1D24
  global image(IMAGE1D<double[3]>) I1D27
## functions
  function femData:MeshPos findPos1FE4 (femData:Mesh mesh1FE5#39, tensor[3] pos1FE6#7) {
    ENTRY1FE7:  preds = []
      real _t1FE8#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1FEA#1 = <tensor[3]>[_t1FE8,_t1FE8,_t1FE8];
      int newtonInt1FEC#4 = 0;
      int cellInt1FEE#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1FE5);
      int _t1FF0#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1FE5);
      int _t1FF2#3 = 1;
      int numCell1FF4#2 = ISub(_t1FF0,_t1FF2);
      int[] yayCells1FF6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1FE5,pos1FE6);
    FOREACH1FF9:  preds = [ASSIGN1FF7,NEXT272E]
      foreach (cellItter1FF8 in yayCells1FF6) on exit goto ASSIGN2730
        tensor[3] xn272D#2 = phi(xn1FEA,xn25CE)
      int _t1FFA#1 = 2;
      int[] _t1FFC#1 = Range(newtonInt1FEC,_t1FFA);
    FOREACH1FFF:  preds = [ASSIGN1FFD,NEXT272C]
      foreach (newtonItter1FFE in _t1FFC) on exit goto NEXT272E
        tensor[3] xn25CE#5 = phi(xn272D,xn2692)
      int ilit2001#1 = 4;
      int mulRes2002#4 = IMul(cellItter1FF8,ilit2001);
      int addRes2004#1 = mulRes2002;
      int idx2005#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2004);
      int ilit2006#1 = 1;
      int addRes2007#1 = IAdd(mulRes2002,ilit2006);
      int idx2008#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2007);
      int ilit2009#1 = 2;
      int addRes200A#1 = IAdd(mulRes2002,ilit2009);
      int idx200B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200A);
      int ilit200C#1 = 3;
      int addRes200D#1 = IAdd(mulRes2002,ilit200C);
      int idx200E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200D);
      int ilit2022#4 = 3;
      int idx2023#1 = idx2005;
      int mulRes2024#3 = IMul(ilit2022,idx2023);
      int addRes2025#1 = mulRes2024;
      int ilit2026#4 = 1;
      int addRes2027#1 = IAdd(ilit2026,mulRes2024);
      int ilit2028#4 = 2;
      int addRes2029#1 = IAdd(ilit2028,mulRes2024);
      real dof_load202A#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2025);
      real dof_load202B#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2027);
      real dof_load202C#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2029);
      int idx202E#1 = idx2008;
      int mulRes202F#3 = IMul(ilit2022,idx202E);
      int addRes2030#1 = mulRes202F;
      int addRes2031#1 = IAdd(ilit2026,mulRes202F);
      int addRes2032#1 = IAdd(ilit2028,mulRes202F);
      real dof_load2033#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2030);
      real dof_load2034#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2031);
      real dof_load2035#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2032);
      int idx2037#1 = idx200B;
      int mulRes2038#3 = IMul(ilit2022,idx2037);
      int addRes2039#1 = mulRes2038;
      int addRes203A#1 = IAdd(ilit2026,mulRes2038);
      int addRes203B#1 = IAdd(ilit2028,mulRes2038);
      real dof_load203C#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2039);
      real dof_load203D#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203A);
      real dof_load203E#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203B);
      int idx2040#1 = idx200E;
      int mulRes2041#3 = IMul(ilit2022,idx2040);
      int addRes2042#1 = mulRes2041;
      int addRes2043#1 = IAdd(ilit2026,mulRes2041);
      int addRes2044#1 = IAdd(ilit2028,mulRes2041);
      real dof_load2045#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2042);
      real dof_load2046#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2043);
      real dof_load2047#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2044);
      real coeff2078#1 = -0.1e1;
      real one2079#4 = 0.1e1;
      real prod207A#1 = RMul(one2079,one2079);
      real prod207B#2 = RMul(one2079,prod207A);
      real basisEval207C#6 = RMul(coeff2078,prod207B);
      real basisEval207D#6 = RMul(one2079,prod207B);
      real basisEval207E#12 = 0.e0;
      real r2093#3 = dof_load202A;
      real r2094#3 = basisEval207C;
      real r2095#1 = RMul(r2093,r2094);
      real r2096#3 = dof_load2033;
      real r2097#3 = basisEval207D;
      real r2098#1 = RMul(r2096,r2097);
      real r2099#3 = dof_load203C;
      real r209A#3 = basisEval207E;
      real r209B#1 = RMul(r2099,r209A);
      real r209C#3 = dof_load2045;
      real r209D#3 = basisEval207E;
      real r209E#1 = RMul(r209C,r209D);
      real r209F#1 = RAdd(r2095,r2098);
      real r20A0#1 = RAdd(r209F,r209B);
      real r20A1#2 = RAdd(r20A0,r209E);
      real r20A2#3 = basisEval207C;
      real r20A3#1 = RMul(r2093,r20A2);
      real r20A4#3 = basisEval207E;
      real r20A5#1 = RMul(r2096,r20A4);
      real r20A6#3 = basisEval207D;
      real r20A7#1 = RMul(r2099,r20A6);
      real r20A8#3 = basisEval207E;
      real r20A9#1 = RMul(r209C,r20A8);
      real r20AA#1 = RAdd(r20A3,r20A5);
      real r20AB#1 = RAdd(r20AA,r20A7);
      real r20AC#2 = RAdd(r20AB,r20A9);
      real r20AD#3 = basisEval207C;
      real r20AE#1 = RMul(r2093,r20AD);
      real r20AF#3 = basisEval207E;
      real r20B0#1 = RMul(r2096,r20AF);
      real r20B1#3 = basisEval207E;
      real r20B2#1 = RMul(r2099,r20B1);
      real r20B3#3 = basisEval207D;
      real r20B4#1 = RMul(r209C,r20B3);
      real r20B5#1 = RAdd(r20AE,r20B0);
      real r20B6#1 = RAdd(r20B5,r20B2);
      real r20B7#2 = RAdd(r20B6,r20B4);
      real r20B9#3 = dof_load202B;
      real r20BA#1 = RMul(r20B9,r2094);
      real r20BB#3 = dof_load2034;
      real r20BC#1 = RMul(r20BB,r2097);
      real r20BD#3 = dof_load203D;
      real r20BE#1 = RMul(r20BD,r209A);
      real r20BF#3 = dof_load2046;
      real r20C0#1 = RMul(r20BF,r209D);
      real r20C1#1 = RAdd(r20BA,r20BC);
      real r20C2#1 = RAdd(r20C1,r20BE);
      real r20C3#2 = RAdd(r20C2,r20C0);
      real r20C4#1 = RMul(r20B9,r20A2);
      real r20C5#1 = RMul(r20BB,r20A4);
      real r20C6#1 = RMul(r20BD,r20A6);
      real r20C7#1 = RMul(r20BF,r20A8);
      real r20C8#1 = RAdd(r20C4,r20C5);
      real r20C9#1 = RAdd(r20C8,r20C6);
      real r20CA#2 = RAdd(r20C9,r20C7);
      real r20CB#1 = RMul(r20B9,r20AD);
      real r20CC#1 = RMul(r20BB,r20AF);
      real r20CD#1 = RMul(r20BD,r20B1);
      real r20CE#1 = RMul(r20BF,r20B3);
      real r20CF#1 = RAdd(r20CB,r20CC);
      real r20D0#1 = RAdd(r20CF,r20CD);
      real r20D1#2 = RAdd(r20D0,r20CE);
      real r20D3#3 = dof_load202C;
      real r20D4#1 = RMul(r20D3,r2094);
      real r20D5#3 = dof_load2035;
      real r20D6#1 = RMul(r20D5,r2097);
      real r20D7#3 = dof_load203E;
      real r20D8#1 = RMul(r20D7,r209A);
      real r20D9#3 = dof_load2047;
      real r20DA#1 = RMul(r20D9,r209D);
      real r20DB#1 = RAdd(r20D4,r20D6);
      real r20DC#1 = RAdd(r20DB,r20D8);
      real r20DD#2 = RAdd(r20DC,r20DA);
      real r20DE#1 = RMul(r20D3,r20A2);
      real r20DF#1 = RMul(r20D5,r20A4);
      real r20E0#1 = RMul(r20D7,r20A6);
      real r20E1#1 = RMul(r20D9,r20A8);
      real r20E2#1 = RAdd(r20DE,r20DF);
      real r20E3#1 = RAdd(r20E2,r20E0);
      real r20E4#2 = RAdd(r20E3,r20E1);
      real r20E5#1 = RMul(r20D3,r20AD);
      real r20E6#1 = RMul(r20D5,r20AF);
      real r20E7#1 = RMul(r20D7,r20B1);
      real r20E8#1 = RMul(r20D9,r20B3);
      real r20E9#1 = RAdd(r20E5,r20E6);
      real r20EA#1 = RAdd(r20E9,r20E7);
      real r20EB#2 = RAdd(r20EA,r20E8);
      real realLit214A#9 = 0.e0;
      real r214B#3 = r20A1;
      real r214C#3 = RMul(realLit214A,r214B);
      real r214D#3 = r20C3;
      real r214E#3 = RMul(realLit214A,r214D);
      real r214F#3 = r20DD;
      real r2150#5 = RMul(realLit214A,r214F);
      real r2151#3 = RAdd(r214C,r214E);
      real r2152#3 = RAdd(r2151,r2150);
      real r2153#3 = r20AC;
      real r2154#3 = RMul(realLit214A,r2153);
      real r2155#3 = r20CA;
      real r2156#3 = RMul(realLit214A,r2155);
      real r2157#3 = r20E4;
      real r2158#5 = RMul(realLit214A,r2157);
      real r2159#3 = RAdd(r2154,r2156);
      real r215A#3 = RAdd(r2159,r2158);
      real r215B#3 = r20B7;
      real r215C#3 = RMul(realLit214A,r215B);
      real r215D#3 = r20D1;
      real r215E#3 = RMul(realLit214A,r215D);
      real r215F#3 = r20EB;
      real r2160#5 = RMul(realLit214A,r215F);
      real r2161#3 = RAdd(r215C,r215E);
      real r2162#3 = RAdd(r2161,r2160);
      real realLit2164#9 = -0.1e1;
      real r2165#1 = RMul(realLit2164,r214F);
      real r2166#1 = RAdd(r2151,r2165);
      real r2167#1 = RMul(realLit2164,r2157);
      real r2168#1 = RAdd(r2159,r2167);
      real r2169#1 = RMul(realLit2164,r215F);
      real r216A#1 = RAdd(r2161,r2169);
      real realLit216C#9 = 0.1e1;
      real r216D#1 = RMul(realLit216C,r214D);
      real r216E#1 = RAdd(r214C,r216D);
      real r216F#1 = RAdd(r216E,r2150);
      real r2170#1 = RMul(realLit216C,r2155);
      real r2171#1 = RAdd(r2154,r2170);
      real r2172#1 = RAdd(r2171,r2158);
      real r2173#1 = RMul(realLit216C,r215D);
      real r2174#1 = RAdd(r215C,r2173);
      real r2175#1 = RAdd(r2174,r2160);
      real r2178#1 = RMul(realLit216C,r214F);
      real r2179#1 = RAdd(r2151,r2178);
      real r217A#1 = RMul(realLit216C,r2157);
      real r217B#1 = RAdd(r2159,r217A);
      real r217C#1 = RMul(realLit216C,r215F);
      real r217D#1 = RAdd(r2161,r217C);
      real r217F#1 = RMul(realLit2164,r214B);
      real r2180#1 = RAdd(r217F,r214E);
      real r2181#1 = RAdd(r2180,r2150);
      real r2182#1 = RMul(realLit2164,r2153);
      real r2183#1 = RAdd(r2182,r2156);
      real r2184#1 = RAdd(r2183,r2158);
      real r2185#1 = RMul(realLit2164,r215B);
      real r2186#1 = RAdd(r2185,r215E);
      real r2187#1 = RAdd(r2186,r2160);
      real r218A#1 = RMul(realLit2164,r214D);
      real r218B#1 = RAdd(r214C,r218A);
      real r218C#1 = RAdd(r218B,r2150);
      real r218D#1 = RMul(realLit2164,r2155);
      real r218E#1 = RAdd(r2154,r218D);
      real r218F#1 = RAdd(r218E,r2158);
      real r2190#1 = RMul(realLit2164,r215D);
      real r2191#1 = RAdd(r215C,r2190);
      real r2192#1 = RAdd(r2191,r2160);
      real r2194#1 = RMul(realLit216C,r214B);
      real r2195#1 = RAdd(r2194,r214E);
      real r2196#1 = RAdd(r2195,r2150);
      real r2197#1 = RMul(realLit216C,r2153);
      real r2198#1 = RAdd(r2197,r2156);
      real r2199#1 = RAdd(r2198,r2158);
      real r219A#1 = RMul(realLit216C,r215B);
      real r219B#1 = RAdd(r219A,r215E);
      real r219C#1 = RAdd(r219B,r2160);
      real r21F7#9 = r20A1;
      real r21F8#3 = r2152;
      real r21F9#1 = RMul(r21F7,r21F8);
      real r21FA#9 = r20C3;
      real r21FB#3 = r2179;
      real r21FC#1 = RMul(r21FA,r21FB);
      real r21FD#9 = r20DD;
      real r21FE#3 = r218C;
      real r21FF#1 = RMul(r21FD,r21FE);
      real r2200#1 = RAdd(r21F9,r21FC);
      real r2201#1 = RAdd(r2200,r21FF);
      real r2202#3 = r215A;
      real r2203#1 = RMul(r21F7,r2202);
      real r2204#3 = r217B;
      real r2205#1 = RMul(r21FA,r2204);
      real r2206#3 = r218F;
      real r2207#1 = RMul(r21FD,r2206);
      real r2208#1 = RAdd(r2203,r2205);
      real r2209#1 = RAdd(r2208,r2207);
      real r220A#3 = r2162;
      real r220B#1 = RMul(r21F7,r220A);
      real r220C#3 = r217D;
      real r220D#1 = RMul(r21FA,r220C);
      real r220E#3 = r2192;
      real r220F#1 = RMul(r21FD,r220E);
      real r2210#1 = RAdd(r220B,r220D);
      real r2211#1 = RAdd(r2210,r220F);
      real r2213#3 = r2166;
      real r2214#1 = RMul(r21F7,r2213);
      real r2215#3 = r2152;
      real r2216#1 = RMul(r21FA,r2215);
      real r2217#3 = r2196;
      real r2218#1 = RMul(r21FD,r2217);
      real r2219#1 = RAdd(r2214,r2216);
      real r221A#1 = RAdd(r2219,r2218);
      real r221B#3 = r2168;
      real r221C#1 = RMul(r21F7,r221B);
      real r221D#3 = r215A;
      real r221E#1 = RMul(r21FA,r221D);
      real r221F#3 = r2199;
      real r2220#1 = RMul(r21FD,r221F);
      real r2221#1 = RAdd(r221C,r221E);
      real r2222#1 = RAdd(r2221,r2220);
      real r2223#3 = r216A;
      real r2224#1 = RMul(r21F7,r2223);
      real r2225#3 = r2162;
      real r2226#1 = RMul(r21FA,r2225);
      real r2227#3 = r219C;
      real r2228#1 = RMul(r21FD,r2227);
      real r2229#1 = RAdd(r2224,r2226);
      real r222A#1 = RAdd(r2229,r2228);
      real r222C#3 = r216F;
      real r222D#1 = RMul(r21F7,r222C);
      real r222E#3 = r2181;
      real r222F#1 = RMul(r21FA,r222E);
      real r2230#3 = r2152;
      real r2231#1 = RMul(r21FD,r2230);
      real r2232#1 = RAdd(r222D,r222F);
      real r2233#1 = RAdd(r2232,r2231);
      real r2234#3 = r2172;
      real r2235#1 = RMul(r21F7,r2234);
      real r2236#3 = r2184;
      real r2237#1 = RMul(r21FA,r2236);
      real r2238#3 = r215A;
      real r2239#1 = RMul(r21FD,r2238);
      real r223A#1 = RAdd(r2235,r2237);
      real r223B#1 = RAdd(r223A,r2239);
      real r223C#3 = r2175;
      real r223D#1 = RMul(r21F7,r223C);
      real r223E#3 = r2187;
      real r223F#1 = RMul(r21FA,r223E);
      real r2240#3 = r2162;
      real r2241#1 = RMul(r21FD,r2240);
      real r2242#1 = RAdd(r223D,r223F);
      real r2243#1 = RAdd(r2242,r2241);
      real r2246#9 = r20AC;
      real r2247#1 = RMul(r2246,r21F8);
      real r2248#9 = r20CA;
      real r2249#1 = RMul(r2248,r21FB);
      real r224A#9 = r20E4;
      real r224B#1 = RMul(r224A,r21FE);
      real r224C#1 = RAdd(r2247,r2249);
      real r224D#1 = RAdd(r224C,r224B);
      real r224E#1 = RMul(r2246,r2202);
      real r224F#1 = RMul(r2248,r2204);
      real r2250#1 = RMul(r224A,r2206);
      real r2251#1 = RAdd(r224E,r224F);
      real r2252#1 = RAdd(r2251,r2250);
      real r2253#1 = RMul(r2246,r220A);
      real r2254#1 = RMul(r2248,r220C);
      real r2255#1 = RMul(r224A,r220E);
      real r2256#1 = RAdd(r2253,r2254);
      real r2257#1 = RAdd(r2256,r2255);
      real r2259#1 = RMul(r2246,r2213);
      real r225A#1 = RMul(r2248,r2215);
      real r225B#1 = RMul(r224A,r2217);
      real r225C#1 = RAdd(r2259,r225A);
      real r225D#1 = RAdd(r225C,r225B);
      real r225E#1 = RMul(r2246,r221B);
      real r225F#1 = RMul(r2248,r221D);
      real r2260#1 = RMul(r224A,r221F);
      real r2261#1 = RAdd(r225E,r225F);
      real r2262#1 = RAdd(r2261,r2260);
      real r2263#1 = RMul(r2246,r2223);
      real r2264#1 = RMul(r2248,r2225);
      real r2265#1 = RMul(r224A,r2227);
      real r2266#1 = RAdd(r2263,r2264);
      real r2267#1 = RAdd(r2266,r2265);
      real r2269#1 = RMul(r2246,r222C);
      real r226A#1 = RMul(r2248,r222E);
      real r226B#1 = RMul(r224A,r2230);
      real r226C#1 = RAdd(r2269,r226A);
      real r226D#1 = RAdd(r226C,r226B);
      real r226E#1 = RMul(r2246,r2234);
      real r226F#1 = RMul(r2248,r2236);
      real r2270#1 = RMul(r224A,r2238);
      real r2271#1 = RAdd(r226E,r226F);
      real r2272#1 = RAdd(r2271,r2270);
      real r2273#1 = RMul(r2246,r223C);
      real r2274#1 = RMul(r2248,r223E);
      real r2275#1 = RMul(r224A,r2240);
      real r2276#1 = RAdd(r2273,r2274);
      real r2277#1 = RAdd(r2276,r2275);
      real r227A#9 = r20B7;
      real r227B#1 = RMul(r227A,r21F8);
      real r227C#9 = r20D1;
      real r227D#1 = RMul(r227C,r21FB);
      real r227E#9 = r20EB;
      real r227F#1 = RMul(r227E,r21FE);
      real r2280#1 = RAdd(r227B,r227D);
      real r2281#1 = RAdd(r2280,r227F);
      real r2282#1 = RMul(r227A,r2202);
      real r2283#1 = RMul(r227C,r2204);
      real r2284#1 = RMul(r227E,r2206);
      real r2285#1 = RAdd(r2282,r2283);
      real r2286#1 = RAdd(r2285,r2284);
      real r2287#1 = RMul(r227A,r220A);
      real r2288#1 = RMul(r227C,r220C);
      real r2289#1 = RMul(r227E,r220E);
      real r228A#1 = RAdd(r2287,r2288);
      real r228B#1 = RAdd(r228A,r2289);
      real r228D#1 = RMul(r227A,r2213);
      real r228E#1 = RMul(r227C,r2215);
      real r228F#1 = RMul(r227E,r2217);
      real r2290#1 = RAdd(r228D,r228E);
      real r2291#1 = RAdd(r2290,r228F);
      real r2292#1 = RMul(r227A,r221B);
      real r2293#1 = RMul(r227C,r221D);
      real r2294#1 = RMul(r227E,r221F);
      real r2295#1 = RAdd(r2292,r2293);
      real r2296#1 = RAdd(r2295,r2294);
      real r2297#1 = RMul(r227A,r2223);
      real r2298#1 = RMul(r227C,r2225);
      real r2299#1 = RMul(r227E,r2227);
      real r229A#1 = RAdd(r2297,r2298);
      real r229B#1 = RAdd(r229A,r2299);
      real r229D#1 = RMul(r227A,r222C);
      real r229E#1 = RMul(r227C,r222E);
      real r229F#1 = RMul(r227E,r2230);
      real r22A0#1 = RAdd(r229D,r229E);
      real r22A1#1 = RAdd(r22A0,r229F);
      real r22A2#1 = RMul(r227A,r2234);
      real r22A3#1 = RMul(r227C,r2236);
      real r22A4#1 = RMul(r227E,r2238);
      real r22A5#1 = RAdd(r22A2,r22A3);
      real r22A6#1 = RAdd(r22A5,r22A4);
      real r22A7#1 = RMul(r227A,r223C);
      real r22A8#1 = RMul(r227C,r223E);
      real r22A9#1 = RMul(r227E,r2240);
      real r22AA#1 = RAdd(r22A7,r22A8);
      real r22AB#1 = RAdd(r22AA,r22A9);
      real r2368#1 = dof_load202A;
      real r2369#3 = basisEval207C;
      real r236A#1 = RMul(r2368,r2369);
      real r236B#1 = dof_load2033;
      real r236C#3 = basisEval207D;
      real r236D#1 = RMul(r236B,r236C);
      real r236E#1 = dof_load203C;
      real r236F#3 = basisEval207E;
      real r2370#1 = RMul(r236E,r236F);
      real r2371#1 = dof_load2045;
      real r2372#3 = basisEval207E;
      real r2373#1 = RMul(r2371,r2372);
      real r2374#1 = RAdd(r236A,r236D);
      real r2375#1 = RAdd(r2374,r2370);
      real r2376#1 = RAdd(r2375,r2373);
      real r2377#1 = dof_load202B;
      real r2378#1 = RMul(r2377,r2369);
      real r2379#1 = dof_load2034;
      real r237A#1 = RMul(r2379,r236C);
      real r237B#1 = dof_load203D;
      real r237C#1 = RMul(r237B,r236F);
      real r237D#1 = dof_load2046;
      real r237E#1 = RMul(r237D,r2372);
      real r237F#1 = RAdd(r2378,r237A);
      real r2380#1 = RAdd(r237F,r237C);
      real r2381#1 = RAdd(r2380,r237E);
      real r2382#1 = dof_load202C;
      real r2383#1 = RMul(r2382,r2369);
      real r2384#1 = dof_load2035;
      real r2385#1 = RMul(r2384,r236C);
      real r2386#1 = dof_load203E;
      real r2387#1 = RMul(r2386,r236F);
      real r2388#1 = dof_load2047;
      real r2389#1 = RMul(r2388,r2372);
      real r238A#1 = RAdd(r2383,r2385);
      real r238B#1 = RAdd(r238A,r2387);
      real r238C#1 = RAdd(r238B,r2389);
      tensor[3] probe_l_142367#1 = <tensor[3]>[r2376,r2381,r238C];
      real r23B5#1 = dof_load202A;
      real r23B6#3 = basisEval207C;
      real r23B7#1 = RMul(r23B5,r23B6);
      real r23B8#1 = dof_load2033;
      real r23B9#3 = basisEval207E;
      real r23BA#1 = RMul(r23B8,r23B9);
      real r23BB#1 = dof_load203C;
      real r23BC#3 = basisEval207D;
      real r23BD#1 = RMul(r23BB,r23BC);
      real r23BE#1 = dof_load2045;
      real r23BF#3 = basisEval207E;
      real r23C0#1 = RMul(r23BE,r23BF);
      real r23C1#1 = RAdd(r23B7,r23BA);
      real r23C2#1 = RAdd(r23C1,r23BD);
      real r23C3#1 = RAdd(r23C2,r23C0);
      real r23C4#1 = dof_load202B;
      real r23C5#1 = RMul(r23C4,r23B6);
      real r23C6#1 = dof_load2034;
      real r23C7#1 = RMul(r23C6,r23B9);
      real r23C8#1 = dof_load203D;
      real r23C9#1 = RMul(r23C8,r23BC);
      real r23CA#1 = dof_load2046;
      real r23CB#1 = RMul(r23CA,r23BF);
      real r23CC#1 = RAdd(r23C5,r23C7);
      real r23CD#1 = RAdd(r23CC,r23C9);
      real r23CE#1 = RAdd(r23CD,r23CB);
      real r23CF#1 = dof_load202C;
      real r23D0#1 = RMul(r23CF,r23B6);
      real r23D1#1 = dof_load2035;
      real r23D2#1 = RMul(r23D1,r23B9);
      real r23D3#1 = dof_load203E;
      real r23D4#1 = RMul(r23D3,r23BC);
      real r23D5#1 = dof_load2047;
      real r23D6#1 = RMul(r23D5,r23BF);
      real r23D7#1 = RAdd(r23D0,r23D2);
      real r23D8#1 = RAdd(r23D7,r23D4);
      real r23D9#1 = RAdd(r23D8,r23D6);
      tensor[3] probe_l_1523B4#3 = <tensor[3]>[r23C3,r23CE,r23D9];
      real r2402#1 = dof_load202A;
      real r2403#3 = basisEval207C;
      real r2404#1 = RMul(r2402,r2403);
      real r2405#1 = dof_load2033;
      real r2406#3 = basisEval207E;
      real r2407#1 = RMul(r2405,r2406);
      real r2408#1 = dof_load203C;
      real r2409#3 = basisEval207E;
      real r240A#1 = RMul(r2408,r2409);
      real r240B#1 = dof_load2045;
      real r240C#3 = basisEval207D;
      real r240D#1 = RMul(r240B,r240C);
      real r240E#1 = RAdd(r2404,r2407);
      real r240F#1 = RAdd(r240E,r240A);
      real r2410#1 = RAdd(r240F,r240D);
      real r2411#1 = dof_load202B;
      real r2412#1 = RMul(r2411,r2403);
      real r2413#1 = dof_load2034;
      real r2414#1 = RMul(r2413,r2406);
      real r2415#1 = dof_load203D;
      real r2416#1 = RMul(r2415,r2409);
      real r2417#1 = dof_load2046;
      real r2418#1 = RMul(r2417,r240C);
      real r2419#1 = RAdd(r2412,r2414);
      real r241A#1 = RAdd(r2419,r2416);
      real r241B#1 = RAdd(r241A,r2418);
      real r241C#1 = dof_load202C;
      real r241D#1 = RMul(r241C,r2403);
      real r241E#1 = dof_load2035;
      real r241F#1 = RMul(r241E,r2406);
      real r2420#1 = dof_load203E;
      real r2421#1 = RMul(r2420,r2409);
      real r2422#1 = dof_load2047;
      real r2423#1 = RMul(r2422,r240C);
      real r2424#1 = RAdd(r241D,r241F);
      real r2425#1 = RAdd(r2424,r2421);
      real r2426#1 = RAdd(r2425,r2423);
      real realLit244F#3 = 0.e0;
      real r2450#3 = r2410;
      real r2451#3 = RMul(realLit244F,r2450);
      real r2452#3 = r241B;
      real r2453#3 = RMul(realLit244F,r2452);
      real r2454#3 = r2426;
      real r2455#5 = RMul(realLit244F,r2454);
      real r2456#3 = RAdd(r2451,r2453);
      real r2457#3 = RAdd(r2456,r2455);
      real realLit2458#3 = 0.1e1;
      real r2459#1 = RMul(realLit2458,r2454);
      real r245A#1 = RAdd(r2456,r2459);
      real realLit245B#3 = -0.1e1;
      real r245C#1 = RMul(realLit245B,r2452);
      real r245D#1 = RAdd(r2451,r245C);
      real r245E#1 = RAdd(r245D,r2455);
      tensor[3] tensor245F#1 = <tensor[3]>[r2457,r245A,r245E];
      real r2460#1 = RMul(realLit245B,r2454);
      real r2461#1 = RAdd(r2456,r2460);
      real r2462#1 = RMul(realLit2458,r2450);
      real r2463#1 = RAdd(r2462,r2453);
      real r2464#1 = RAdd(r2463,r2455);
      tensor[3] tensor2465#1 = <tensor[3]>[r2461,r2457,r2464];
      real r2466#1 = RMul(realLit2458,r2452);
      real r2467#1 = RAdd(r2451,r2466);
      real r2468#1 = RAdd(r2467,r2455);
      real r2469#1 = RMul(realLit245B,r2450);
      real r246A#1 = RAdd(r2469,r2453);
      real r246B#1 = RAdd(r246A,r2455);
      tensor[3] tensor246C#1 = <tensor[3]>[r2468,r246B,r2457];
      tensor[3] projParam248E#1 = tensor245F;
      real vdot248F#1 = VDot<3>(probe_l_1523B4,projParam248E);
      tensor[3] projParam2490#1 = tensor2465;
      real vdot2491#1 = VDot<3>(probe_l_1523B4,projParam2490);
      tensor[3] projParam2492#1 = tensor246C;
      real vdot2493#1 = VDot<3>(probe_l_1523B4,projParam2492);
      tensor[3] op1_e3_l_18248D#1 = <tensor[3]>[vdot248F,vdot2491,vdot2493];
      real op1_e3_l_19249C#1 = VDot<3>(probe_l_142367,op1_e3_l_18248D);
      real realLit24A0#27 = 0.e0;
      real r24A1#1 = r2201;
      real r24A2#2 = RMul(realLit24A0,r24A1);
      real r24A3#2 = r2209;
      real r24A4#1 = RMul(realLit24A0,r24A3);
      real r24A5#2 = r2211;
      real r24A6#2 = RMul(realLit24A0,r24A5);
      real r24A7#2 = r224D;
      real r24A8#2 = RMul(realLit24A0,r24A7);
      real r24A9#1 = r2252;
      real r24AA#3 = RMul(realLit24A0,r24A9);
      real realLit24AB#9 = 0.1e1;
      real r24AC#2 = r2257;
      real r24AD#1 = RMul(realLit24AB,r24AC);
      real r24AE#2 = r2281;
      real r24AF#2 = RMul(realLit24A0,r24AE);
      real realLit24B0#9 = -0.1e1;
      real r24B1#2 = r2286;
      real r24B2#1 = RMul(realLit24B0,r24B1);
      real r24B3#1 = r228B;
      real r24B4#3 = RMul(realLit24A0,r24B3);
      real r24B5#2 = RAdd(r24A2,r24A4);
      real r24B6#1 = RAdd(r24B5,r24A6);
      real r24B7#1 = RAdd(r24B6,r24A8);
      real r24B8#1 = RAdd(r24B7,r24AA);
      real r24B9#1 = RAdd(r24B8,r24AD);
      real r24BA#1 = RAdd(r24B9,r24AF);
      real r24BB#1 = RAdd(r24BA,r24B2);
      real r24BC#1 = RAdd(r24BB,r24B4);
      real r24BD#1 = r221A;
      real r24BE#2 = RMul(realLit24A0,r24BD);
      real r24BF#2 = r2222;
      real r24C0#1 = RMul(realLit24A0,r24BF);
      real r24C1#2 = r222A;
      real r24C2#2 = RMul(realLit24A0,r24C1);
      real r24C3#2 = r225D;
      real r24C4#2 = RMul(realLit24A0,r24C3);
      real r24C5#1 = r2262;
      real r24C6#3 = RMul(realLit24A0,r24C5);
      real r24C7#2 = r2267;
      real r24C8#1 = RMul(realLit24AB,r24C7);
      real r24C9#2 = r2291;
      real r24CA#2 = RMul(realLit24A0,r24C9);
      real r24CB#2 = r2296;
      real r24CC#1 = RMul(realLit24B0,r24CB);
      real r24CD#1 = r229B;
      real r24CE#3 = RMul(realLit24A0,r24CD);
      real r24CF#2 = RAdd(r24BE,r24C0);
      real r24D0#1 = RAdd(r24CF,r24C2);
      real r24D1#1 = RAdd(r24D0,r24C4);
      real r24D2#1 = RAdd(r24D1,r24C6);
      real r24D3#1 = RAdd(r24D2,r24C8);
      real r24D4#1 = RAdd(r24D3,r24CA);
      real r24D5#1 = RAdd(r24D4,r24CC);
      real r24D6#1 = RAdd(r24D5,r24CE);
      real r24D7#1 = r2233;
      real r24D8#2 = RMul(realLit24A0,r24D7);
      real r24D9#2 = r223B;
      real r24DA#1 = RMul(realLit24A0,r24D9);
      real r24DB#2 = r2243;
      real r24DC#2 = RMul(realLit24A0,r24DB);
      real r24DD#2 = r226D;
      real r24DE#2 = RMul(realLit24A0,r24DD);
      real r24DF#1 = r2272;
      real r24E0#3 = RMul(realLit24A0,r24DF);
      real r24E1#2 = r2277;
      real r24E2#1 = RMul(realLit24AB,r24E1);
      real r24E3#2 = r22A1;
      real r24E4#2 = RMul(realLit24A0,r24E3);
      real r24E5#2 = r22A6;
      real r24E6#1 = RMul(realLit24B0,r24E5);
      real r24E7#1 = r22AB;
      real r24E8#3 = RMul(realLit24A0,r24E7);
      real r24E9#2 = RAdd(r24D8,r24DA);
      real r24EA#1 = RAdd(r24E9,r24DC);
      real r24EB#1 = RAdd(r24EA,r24DE);
      real r24EC#1 = RAdd(r24EB,r24E0);
      real r24ED#1 = RAdd(r24EC,r24E2);
      real r24EE#1 = RAdd(r24ED,r24E4);
      real r24EF#1 = RAdd(r24EE,r24E6);
      real r24F0#1 = RAdd(r24EF,r24E8);
      real r24F2#1 = RMul(realLit24B0,r24A5);
      real r24F3#2 = RMul(realLit24A0,r24AC);
      real r24F4#1 = RMul(realLit24AB,r24AE);
      real r24F5#2 = RMul(realLit24A0,r24B1);
      real r24F6#1 = RAdd(r24B5,r24F2);
      real r24F7#1 = RAdd(r24F6,r24A8);
      real r24F8#1 = RAdd(r24F7,r24AA);
      real r24F9#1 = RAdd(r24F8,r24F3);
      real r24FA#1 = RAdd(r24F9,r24F4);
      real r24FB#1 = RAdd(r24FA,r24F5);
      real r24FC#1 = RAdd(r24FB,r24B4);
      real r24FD#1 = RMul(realLit24B0,r24C1);
      real r24FE#2 = RMul(realLit24A0,r24C7);
      real r24FF#1 = RMul(realLit24AB,r24C9);
      real r2500#2 = RMul(realLit24A0,r24CB);
      real r2501#1 = RAdd(r24CF,r24FD);
      real r2502#1 = RAdd(r2501,r24C4);
      real r2503#1 = RAdd(r2502,r24C6);
      real r2504#1 = RAdd(r2503,r24FE);
      real r2505#1 = RAdd(r2504,r24FF);
      real r2506#1 = RAdd(r2505,r2500);
      real r2507#1 = RAdd(r2506,r24CE);
      real r2508#1 = RMul(realLit24B0,r24DB);
      real r2509#2 = RMul(realLit24A0,r24E1);
      real r250A#1 = RMul(realLit24AB,r24E3);
      real r250B#2 = RMul(realLit24A0,r24E5);
      real r250C#1 = RAdd(r24E9,r2508);
      real r250D#1 = RAdd(r250C,r24DE);
      real r250E#1 = RAdd(r250D,r24E0);
      real r250F#1 = RAdd(r250E,r2509);
      real r2510#1 = RAdd(r250F,r250A);
      real r2511#1 = RAdd(r2510,r250B);
      real r2512#1 = RAdd(r2511,r24E8);
      real r2514#1 = RMul(realLit24AB,r24A3);
      real r2515#1 = RMul(realLit24B0,r24A7);
      real r2516#1 = RAdd(r24A2,r2514);
      real r2517#1 = RAdd(r2516,r24A6);
      real r2518#1 = RAdd(r2517,r2515);
      real r2519#1 = RAdd(r2518,r24AA);
      real r251A#1 = RAdd(r2519,r24F3);
      real r251B#1 = RAdd(r251A,r24AF);
      real r251C#1 = RAdd(r251B,r24F5);
      real r251D#1 = RAdd(r251C,r24B4);
      real r251E#1 = RMul(realLit24AB,r24BF);
      real r251F#1 = RMul(realLit24B0,r24C3);
      real r2520#1 = RAdd(r24BE,r251E);
      real r2521#1 = RAdd(r2520,r24C2);
      real r2522#1 = RAdd(r2521,r251F);
      real r2523#1 = RAdd(r2522,r24C6);
      real r2524#1 = RAdd(r2523,r24FE);
      real r2525#1 = RAdd(r2524,r24CA);
      real r2526#1 = RAdd(r2525,r2500);
      real r2527#1 = RAdd(r2526,r24CE);
      real r2528#1 = RMul(realLit24AB,r24D9);
      real r2529#1 = RMul(realLit24B0,r24DD);
      real r252A#1 = RAdd(r24D8,r2528);
      real r252B#1 = RAdd(r252A,r24DC);
      real r252C#1 = RAdd(r252B,r2529);
      real r252D#1 = RAdd(r252C,r24E0);
      real r252E#1 = RAdd(r252D,r2509);
      real r252F#1 = RAdd(r252E,r24E4);
      real r2530#1 = RAdd(r252F,r250B);
      real r2531#1 = RAdd(r2530,r24E8);
      real realLit25C9#1 = 0.2e1;
      real op1_e3_l_2125C8#9 = RMul(realLit25C9,op1_e3_l_19249C);
      real varAcc25CF#1 = VIndex<3,0>(xn25CE);
      real varAcc25D0#1 = VIndex<3,1>(xn25CE);
      real varAcc25D1#1 = VIndex<3,2>(xn25CE);
      real coeff25D2#3 = -0.1e1;
      real iden25D3#1 = varAcc25CF;
      real one25D4#11 = 0.1e1;
      real prod25D5#2 = RMul(one25D4,one25D4);
      real prod25D6#2 = RMul(iden25D3,prod25D5);
      real iden25D7#1 = varAcc25D0;
      real prod25D8#1 = RMul(iden25D7,one25D4);
      real prod25D9#2 = RMul(one25D4,prod25D8);
      real iden25DA#1 = varAcc25D1;
      real prod25DB#1 = RMul(one25D4,iden25DA);
      real prod25DC#2 = RMul(one25D4,prod25DB);
      real prod25DD#1 = RMul(one25D4,prod25D5);
      real mult25DE#1 = RMul(one25D4,prod25DD);
      real mult25DF#1 = RMul(coeff25D2,prod25DC);
      real mult25E0#1 = RMul(coeff25D2,prod25D9);
      real mult25E1#1 = RMul(coeff25D2,prod25D6);
      real sum25E2#1 = RAdd(mult25E0,mult25E1);
      real sum25E3#1 = RAdd(mult25DF,sum25E2);
      real sum25E4#1 = RAdd(mult25DE,sum25E3);
      real intermediate25E5#2 = sum25E4;
      real basisEval25E6#2 = RMul(one25D4,prod25D6);
      real basisEval25E7#2 = RMul(one25D4,prod25D9);
      real basisEval25E8#2 = RMul(one25D4,prod25DC);
      real r2607#1 = dof_load202A;
      real r2608#3 = intermediate25E5;
      real r2609#1 = RMul(r2607,r2608);
      real r260A#1 = dof_load2033;
      real r260B#3 = basisEval25E6;
      real r260C#1 = RMul(r260A,r260B);
      real r260D#1 = dof_load203C;
      real r260E#3 = basisEval25E7;
      real r260F#1 = RMul(r260D,r260E);
      real r2610#1 = dof_load2045;
      real r2611#3 = basisEval25E8;
      real r2612#1 = RMul(r2610,r2611);
      real r2613#1 = RAdd(r2609,r260C);
      real r2614#1 = RAdd(r2613,r260F);
      real r2615#1 = RAdd(r2614,r2612);
      real r2616#1 = dof_load202B;
      real r2617#1 = RMul(r2616,r2608);
      real r2618#1 = dof_load2034;
      real r2619#1 = RMul(r2618,r260B);
      real r261A#1 = dof_load203D;
      real r261B#1 = RMul(r261A,r260E);
      real r261C#1 = dof_load2046;
      real r261D#1 = RMul(r261C,r2611);
      real r261E#1 = RAdd(r2617,r2619);
      real r261F#1 = RAdd(r261E,r261B);
      real r2620#1 = RAdd(r261F,r261D);
      real r2621#1 = dof_load202C;
      real r2622#1 = RMul(r2621,r2608);
      real r2623#1 = dof_load2035;
      real r2624#1 = RMul(r2623,r260B);
      real r2625#1 = dof_load203E;
      real r2626#1 = RMul(r2625,r260E);
      real r2627#1 = dof_load2047;
      real r2628#1 = RMul(r2627,r2611);
      real r2629#1 = RAdd(r2622,r2624);
      real r262A#1 = RAdd(r2629,r2626);
      real r262B#1 = RAdd(r262A,r2628);
      tensor[3] probe_l_222606#1 = <tensor[3]>[r2615,r2620,r262B];
      real r2654#1 = r24BC;
      real r2655#1 = RDiv(r2654,op1_e3_l_2125C8);
      real r2656#1 = r24D6;
      real r2657#1 = RDiv(r2656,op1_e3_l_2125C8);
      real r2658#1 = r24F0;
      real r2659#1 = RDiv(r2658,op1_e3_l_2125C8);
      tensor[3] tensor265A#2 = <tensor[3]>[r2655,r2657,r2659];
      real r265B#1 = r24FC;
      real r265C#1 = RDiv(r265B,op1_e3_l_2125C8);
      real r265D#1 = r2507;
      real r265E#1 = RDiv(r265D,op1_e3_l_2125C8);
      real r265F#1 = r2512;
      real r2660#1 = RDiv(r265F,op1_e3_l_2125C8);
      tensor[3] tensor2661#2 = <tensor[3]>[r265C,r265E,r2660];
      real r2662#1 = r251D;
      real r2663#1 = RDiv(r2662,op1_e3_l_2125C8);
      real r2664#1 = r2527;
      real r2665#1 = RDiv(r2664,op1_e3_l_2125C8);
      real r2666#1 = r2531;
      real r2667#1 = RDiv(r2666,op1_e3_l_2125C8);
      tensor[3] tensor2668#2 = <tensor[3]>[r2663,r2665,r2667];
      tensor[3] op1_e3_l_242680#3 = VSub<3>(probe_l_222606,pos1FE6);
      tensor[3] projParam2684#1 = tensor265A;
      real vdot2685#1 = VDot<3>(projParam2684,op1_e3_l_242680);
      tensor[3] projParam2686#1 = tensor2661;
      real vdot2687#1 = VDot<3>(projParam2686,op1_e3_l_242680);
      tensor[3] projParam2688#1 = tensor2668;
      real vdot2689#1 = VDot<3>(projParam2688,op1_e3_l_242680);
      tensor[3] op1_e3_l_252683#1 = <tensor[3]>[vdot2685,vdot2687,vdot2689];
      tensor[3] xn2692#4 = VSub<3>(xn25CE,op1_e3_l_252683);
      real _t2695#2 = 0.1e-7;
      real _t2697#1 = RMul(_t2695,_t2695);
      real r269B#1 = dof_load202A;
      real r269C#3 = intermediate25E5;
      real r269D#1 = RMul(r269B,r269C);
      real r269E#1 = dof_load2033;
      real r269F#3 = basisEval25E6;
      real r26A0#1 = RMul(r269E,r269F);
      real r26A1#1 = dof_load203C;
      real r26A2#3 = basisEval25E7;
      real r26A3#1 = RMul(r26A1,r26A2);
      real r26A4#1 = dof_load2045;
      real r26A5#3 = basisEval25E8;
      real r26A6#1 = RMul(r26A4,r26A5);
      real r26A7#1 = RAdd(r269D,r26A0);
      real r26A8#1 = RAdd(r26A7,r26A3);
      real r26A9#1 = RAdd(r26A8,r26A6);
      real r26AA#1 = dof_load202B;
      real r26AB#1 = RMul(r26AA,r269C);
      real r26AC#1 = dof_load2034;
      real r26AD#1 = RMul(r26AC,r269F);
      real r26AE#1 = dof_load203D;
      real r26AF#1 = RMul(r26AE,r26A2);
      real r26B0#1 = dof_load2046;
      real r26B1#1 = RMul(r26B0,r26A5);
      real r26B2#1 = RAdd(r26AB,r26AD);
      real r26B3#1 = RAdd(r26B2,r26AF);
      real r26B4#1 = RAdd(r26B3,r26B1);
      real r26B5#1 = dof_load202C;
      real r26B6#1 = RMul(r26B5,r269C);
      real r26B7#1 = dof_load2035;
      real r26B8#1 = RMul(r26B7,r269F);
      real r26B9#1 = dof_load203E;
      real r26BA#1 = RMul(r26B9,r26A2);
      real r26BB#1 = dof_load2047;
      real r26BC#1 = RMul(r26BB,r26A5);
      real r26BD#1 = RAdd(r26B6,r26B8);
      real r26BE#1 = RAdd(r26BD,r26BA);
      real r26BF#1 = RAdd(r26BE,r26BC);
      tensor[3] probe_l_30269A#1 = <tensor[3]>[r26A9,r26B4,r26BF];
      tensor[3] op1_e3_l_3226E7#3 = VSub<3>(probe_l_30269A,pos1FE6);
      tensor[3] projParam26EB#1 = tensor265A;
      real vdot26EC#1 = VDot<3>(projParam26EB,op1_e3_l_3226E7);
      tensor[3] projParam26ED#1 = tensor2661;
      real vdot26EE#1 = VDot<3>(projParam26ED,op1_e3_l_3226E7);
      tensor[3] projParam26EF#1 = tensor2668;
      real vdot26F0#1 = VDot<3>(projParam26EF,op1_e3_l_3226E7);
      tensor[3] op1_e3_l_4826EA#2 = <tensor[3]>[vdot26EC,vdot26EE,vdot26F0];
      real _t26F9#1 = VDot<3>(op1_e3_l_4826EA,op1_e3_l_4826EA);
      bool _t26FC#1 = GTE<real>(_t2697,_t26F9);
      if _t26FC then goto ASSIGN2700 else goto JOIN272B
    ASSIGN2700:  preds = [COND26FE]
      real _t26FF#4 = 0.1e1;
      real _t2701#4 = 0.1e-4;
      real _t2703#1 = RAdd(_t26FF,_t2701);
      tensor[3] _t2706#1 = <tensor[3]>[_t26FF,_t26FF,_t26FF];
      real _t2708#1 = VDot<3>(_t2706,xn2692);
      bool _t270B#1 = GT<real>(_t2703,_t2708);
      tensor[3] _t270D#1 = <tensor[3]>[_t2701,_t2701,_t2701];
      tensor[3] _t270F#3 = VAdd<3>(_t270D,xn2692);
      real _t2712#1 = VIndex<3,0>(_t270F);
      real _t2714#3 = -0.e0;
      bool _t2716#1 = GT<real>(_t2712,_t2714);
      real _t2718#1 = VIndex<3,1>(_t270F);
      bool _t271A#1 = GT<real>(_t2718,_t2714);
      real _t271C#1 = VIndex<3,2>(_t270F);
      bool _t271E#1 = GT<real>(_t271C,_t2714);
      bool _t2720#1 = BAnd(_t271A,_t271E);
      bool _t2722#1 = BAnd(_t2716,_t2720);
      bool _t2724#1 = BAnd(_t270B,_t2722);
      if _t2724 then goto ASSIGN2728 else goto JOIN272A
    ASSIGN2728:  preds = [COND2726]
      femData:MeshPos _t2727#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellItter1FF8,xn2692,pos1FE6);
      return _t2727
      goto JOIN272A
    JOIN272A:  preds = [*RETURN(_t2727)2729,COND2726]
      goto JOIN272B
    JOIN272B:  preds = [JOIN272A,COND26FE]
      goto FOREACH1FFF
    NEXT272E:  preds = [FOREACH1FFF]
      goto FOREACH1FF9
    ASSIGN2730:  preds = [FOREACH1FF9]
      int _t272F#1 = 2;
      int _t2731#1 = 3;
      int _t2733#1 = IMul(_t2731,numCell1FF4);
      int[] _t2735#1 = Range(newtonInt1FEC,_t2733);
    FOREACH2738:  preds = [ASSIGN2736,NEXT2E78]
      foreach (itter2737 in _t2735) on exit goto ASSIGN2E7B
        int cellInt273A#5 = phi(cellInt1FEE,cellInt2E75)
        int newtonInt2E67#1 = phi(newtonInt1FEC,newtonInt2E76)
        tensor[3] xn2D08#4 = phi(xn272D,xn2DCC)
      int ilit273B#1 = 4;
      int mulRes273C#4 = IMul(cellInt273A,ilit273B);
      int addRes273E#1 = mulRes273C;
      int idx273F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes273E);
      int ilit2740#1 = 1;
      int addRes2741#1 = IAdd(mulRes273C,ilit2740);
      int idx2742#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2741);
      int ilit2743#1 = 2;
      int addRes2744#1 = IAdd(mulRes273C,ilit2743);
      int idx2745#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2744);
      int ilit2746#1 = 3;
      int addRes2747#1 = IAdd(mulRes273C,ilit2746);
      int idx2748#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2747);
      int ilit275C#4 = 3;
      int idx275D#1 = idx273F;
      int mulRes275E#3 = IMul(ilit275C,idx275D);
      int addRes275F#1 = mulRes275E;
      int ilit2760#4 = 1;
      int addRes2761#1 = IAdd(ilit2760,mulRes275E);
      int ilit2762#4 = 2;
      int addRes2763#1 = IAdd(ilit2762,mulRes275E);
      real dof_load2764#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes275F);
      real dof_load2765#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2761);
      real dof_load2766#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2763);
      int idx2768#1 = idx2742;
      int mulRes2769#3 = IMul(ilit275C,idx2768);
      int addRes276A#1 = mulRes2769;
      int addRes276B#1 = IAdd(ilit2760,mulRes2769);
      int addRes276C#1 = IAdd(ilit2762,mulRes2769);
      real dof_load276D#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276A);
      real dof_load276E#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276B);
      real dof_load276F#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276C);
      int idx2771#1 = idx2745;
      int mulRes2772#3 = IMul(ilit275C,idx2771);
      int addRes2773#1 = mulRes2772;
      int addRes2774#1 = IAdd(ilit2760,mulRes2772);
      int addRes2775#1 = IAdd(ilit2762,mulRes2772);
      real dof_load2776#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2773);
      real dof_load2777#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2774);
      real dof_load2778#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2775);
      int idx277A#1 = idx2748;
      int mulRes277B#3 = IMul(ilit275C,idx277A);
      int addRes277C#1 = mulRes277B;
      int addRes277D#1 = IAdd(ilit2760,mulRes277B);
      int addRes277E#1 = IAdd(ilit2762,mulRes277B);
      real dof_load277F#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277C);
      real dof_load2780#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277D);
      real dof_load2781#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277E);
      real coeff27B2#1 = -0.1e1;
      real one27B3#4 = 0.1e1;
      real prod27B4#1 = RMul(one27B3,one27B3);
      real prod27B5#2 = RMul(one27B3,prod27B4);
      real basisEval27B6#6 = RMul(coeff27B2,prod27B5);
      real basisEval27B7#6 = RMul(one27B3,prod27B5);
      real basisEval27B8#12 = 0.e0;
      real r27CD#3 = dof_load2764;
      real r27CE#3 = basisEval27B6;
      real r27CF#1 = RMul(r27CD,r27CE);
      real r27D0#3 = dof_load276D;
      real r27D1#3 = basisEval27B7;
      real r27D2#1 = RMul(r27D0,r27D1);
      real r27D3#3 = dof_load2776;
      real r27D4#3 = basisEval27B8;
      real r27D5#1 = RMul(r27D3,r27D4);
      real r27D6#3 = dof_load277F;
      real r27D7#3 = basisEval27B8;
      real r27D8#1 = RMul(r27D6,r27D7);
      real r27D9#1 = RAdd(r27CF,r27D2);
      real r27DA#1 = RAdd(r27D9,r27D5);
      real r27DB#2 = RAdd(r27DA,r27D8);
      real r27DC#3 = basisEval27B6;
      real r27DD#1 = RMul(r27CD,r27DC);
      real r27DE#3 = basisEval27B8;
      real r27DF#1 = RMul(r27D0,r27DE);
      real r27E0#3 = basisEval27B7;
      real r27E1#1 = RMul(r27D3,r27E0);
      real r27E2#3 = basisEval27B8;
      real r27E3#1 = RMul(r27D6,r27E2);
      real r27E4#1 = RAdd(r27DD,r27DF);
      real r27E5#1 = RAdd(r27E4,r27E1);
      real r27E6#2 = RAdd(r27E5,r27E3);
      real r27E7#3 = basisEval27B6;
      real r27E8#1 = RMul(r27CD,r27E7);
      real r27E9#3 = basisEval27B8;
      real r27EA#1 = RMul(r27D0,r27E9);
      real r27EB#3 = basisEval27B8;
      real r27EC#1 = RMul(r27D3,r27EB);
      real r27ED#3 = basisEval27B7;
      real r27EE#1 = RMul(r27D6,r27ED);
      real r27EF#1 = RAdd(r27E8,r27EA);
      real r27F0#1 = RAdd(r27EF,r27EC);
      real r27F1#2 = RAdd(r27F0,r27EE);
      real r27F3#3 = dof_load2765;
      real r27F4#1 = RMul(r27F3,r27CE);
      real r27F5#3 = dof_load276E;
      real r27F6#1 = RMul(r27F5,r27D1);
      real r27F7#3 = dof_load2777;
      real r27F8#1 = RMul(r27F7,r27D4);
      real r27F9#3 = dof_load2780;
      real r27FA#1 = RMul(r27F9,r27D7);
      real r27FB#1 = RAdd(r27F4,r27F6);
      real r27FC#1 = RAdd(r27FB,r27F8);
      real r27FD#2 = RAdd(r27FC,r27FA);
      real r27FE#1 = RMul(r27F3,r27DC);
      real r27FF#1 = RMul(r27F5,r27DE);
      real r2800#1 = RMul(r27F7,r27E0);
      real r2801#1 = RMul(r27F9,r27E2);
      real r2802#1 = RAdd(r27FE,r27FF);
      real r2803#1 = RAdd(r2802,r2800);
      real r2804#2 = RAdd(r2803,r2801);
      real r2805#1 = RMul(r27F3,r27E7);
      real r2806#1 = RMul(r27F5,r27E9);
      real r2807#1 = RMul(r27F7,r27EB);
      real r2808#1 = RMul(r27F9,r27ED);
      real r2809#1 = RAdd(r2805,r2806);
      real r280A#1 = RAdd(r2809,r2807);
      real r280B#2 = RAdd(r280A,r2808);
      real r280D#3 = dof_load2766;
      real r280E#1 = RMul(r280D,r27CE);
      real r280F#3 = dof_load276F;
      real r2810#1 = RMul(r280F,r27D1);
      real r2811#3 = dof_load2778;
      real r2812#1 = RMul(r2811,r27D4);
      real r2813#3 = dof_load2781;
      real r2814#1 = RMul(r2813,r27D7);
      real r2815#1 = RAdd(r280E,r2810);
      real r2816#1 = RAdd(r2815,r2812);
      real r2817#2 = RAdd(r2816,r2814);
      real r2818#1 = RMul(r280D,r27DC);
      real r2819#1 = RMul(r280F,r27DE);
      real r281A#1 = RMul(r2811,r27E0);
      real r281B#1 = RMul(r2813,r27E2);
      real r281C#1 = RAdd(r2818,r2819);
      real r281D#1 = RAdd(r281C,r281A);
      real r281E#2 = RAdd(r281D,r281B);
      real r281F#1 = RMul(r280D,r27E7);
      real r2820#1 = RMul(r280F,r27E9);
      real r2821#1 = RMul(r2811,r27EB);
      real r2822#1 = RMul(r2813,r27ED);
      real r2823#1 = RAdd(r281F,r2820);
      real r2824#1 = RAdd(r2823,r2821);
      real r2825#2 = RAdd(r2824,r2822);
      real realLit2884#9 = 0.e0;
      real r2885#3 = r27DB;
      real r2886#3 = RMul(realLit2884,r2885);
      real r2887#3 = r27FD;
      real r2888#3 = RMul(realLit2884,r2887);
      real r2889#3 = r2817;
      real r288A#5 = RMul(realLit2884,r2889);
      real r288B#3 = RAdd(r2886,r2888);
      real r288C#3 = RAdd(r288B,r288A);
      real r288D#3 = r27E6;
      real r288E#3 = RMul(realLit2884,r288D);
      real r288F#3 = r2804;
      real r2890#3 = RMul(realLit2884,r288F);
      real r2891#3 = r281E;
      real r2892#5 = RMul(realLit2884,r2891);
      real r2893#3 = RAdd(r288E,r2890);
      real r2894#3 = RAdd(r2893,r2892);
      real r2895#3 = r27F1;
      real r2896#3 = RMul(realLit2884,r2895);
      real r2897#3 = r280B;
      real r2898#3 = RMul(realLit2884,r2897);
      real r2899#3 = r2825;
      real r289A#5 = RMul(realLit2884,r2899);
      real r289B#3 = RAdd(r2896,r2898);
      real r289C#3 = RAdd(r289B,r289A);
      real realLit289E#9 = -0.1e1;
      real r289F#1 = RMul(realLit289E,r2889);
      real r28A0#1 = RAdd(r288B,r289F);
      real r28A1#1 = RMul(realLit289E,r2891);
      real r28A2#1 = RAdd(r2893,r28A1);
      real r28A3#1 = RMul(realLit289E,r2899);
      real r28A4#1 = RAdd(r289B,r28A3);
      real realLit28A6#9 = 0.1e1;
      real r28A7#1 = RMul(realLit28A6,r2887);
      real r28A8#1 = RAdd(r2886,r28A7);
      real r28A9#1 = RAdd(r28A8,r288A);
      real r28AA#1 = RMul(realLit28A6,r288F);
      real r28AB#1 = RAdd(r288E,r28AA);
      real r28AC#1 = RAdd(r28AB,r2892);
      real r28AD#1 = RMul(realLit28A6,r2897);
      real r28AE#1 = RAdd(r2896,r28AD);
      real r28AF#1 = RAdd(r28AE,r289A);
      real r28B2#1 = RMul(realLit28A6,r2889);
      real r28B3#1 = RAdd(r288B,r28B2);
      real r28B4#1 = RMul(realLit28A6,r2891);
      real r28B5#1 = RAdd(r2893,r28B4);
      real r28B6#1 = RMul(realLit28A6,r2899);
      real r28B7#1 = RAdd(r289B,r28B6);
      real r28B9#1 = RMul(realLit289E,r2885);
      real r28BA#1 = RAdd(r28B9,r2888);
      real r28BB#1 = RAdd(r28BA,r288A);
      real r28BC#1 = RMul(realLit289E,r288D);
      real r28BD#1 = RAdd(r28BC,r2890);
      real r28BE#1 = RAdd(r28BD,r2892);
      real r28BF#1 = RMul(realLit289E,r2895);
      real r28C0#1 = RAdd(r28BF,r2898);
      real r28C1#1 = RAdd(r28C0,r289A);
      real r28C4#1 = RMul(realLit289E,r2887);
      real r28C5#1 = RAdd(r2886,r28C4);
      real r28C6#1 = RAdd(r28C5,r288A);
      real r28C7#1 = RMul(realLit289E,r288F);
      real r28C8#1 = RAdd(r288E,r28C7);
      real r28C9#1 = RAdd(r28C8,r2892);
      real r28CA#1 = RMul(realLit289E,r2897);
      real r28CB#1 = RAdd(r2896,r28CA);
      real r28CC#1 = RAdd(r28CB,r289A);
      real r28CE#1 = RMul(realLit28A6,r2885);
      real r28CF#1 = RAdd(r28CE,r2888);
      real r28D0#1 = RAdd(r28CF,r288A);
      real r28D1#1 = RMul(realLit28A6,r288D);
      real r28D2#1 = RAdd(r28D1,r2890);
      real r28D3#1 = RAdd(r28D2,r2892);
      real r28D4#1 = RMul(realLit28A6,r2895);
      real r28D5#1 = RAdd(r28D4,r2898);
      real r28D6#1 = RAdd(r28D5,r289A);
      real r2931#9 = r27DB;
      real r2932#3 = r288C;
      real r2933#1 = RMul(r2931,r2932);
      real r2934#9 = r27FD;
      real r2935#3 = r28B3;
      real r2936#1 = RMul(r2934,r2935);
      real r2937#9 = r2817;
      real r2938#3 = r28C6;
      real r2939#1 = RMul(r2937,r2938);
      real r293A#1 = RAdd(r2933,r2936);
      real r293B#1 = RAdd(r293A,r2939);
      real r293C#3 = r2894;
      real r293D#1 = RMul(r2931,r293C);
      real r293E#3 = r28B5;
      real r293F#1 = RMul(r2934,r293E);
      real r2940#3 = r28C9;
      real r2941#1 = RMul(r2937,r2940);
      real r2942#1 = RAdd(r293D,r293F);
      real r2943#1 = RAdd(r2942,r2941);
      real r2944#3 = r289C;
      real r2945#1 = RMul(r2931,r2944);
      real r2946#3 = r28B7;
      real r2947#1 = RMul(r2934,r2946);
      real r2948#3 = r28CC;
      real r2949#1 = RMul(r2937,r2948);
      real r294A#1 = RAdd(r2945,r2947);
      real r294B#1 = RAdd(r294A,r2949);
      real r294D#3 = r28A0;
      real r294E#1 = RMul(r2931,r294D);
      real r294F#3 = r288C;
      real r2950#1 = RMul(r2934,r294F);
      real r2951#3 = r28D0;
      real r2952#1 = RMul(r2937,r2951);
      real r2953#1 = RAdd(r294E,r2950);
      real r2954#1 = RAdd(r2953,r2952);
      real r2955#3 = r28A2;
      real r2956#1 = RMul(r2931,r2955);
      real r2957#3 = r2894;
      real r2958#1 = RMul(r2934,r2957);
      real r2959#3 = r28D3;
      real r295A#1 = RMul(r2937,r2959);
      real r295B#1 = RAdd(r2956,r2958);
      real r295C#1 = RAdd(r295B,r295A);
      real r295D#3 = r28A4;
      real r295E#1 = RMul(r2931,r295D);
      real r295F#3 = r289C;
      real r2960#1 = RMul(r2934,r295F);
      real r2961#3 = r28D6;
      real r2962#1 = RMul(r2937,r2961);
      real r2963#1 = RAdd(r295E,r2960);
      real r2964#1 = RAdd(r2963,r2962);
      real r2966#3 = r28A9;
      real r2967#1 = RMul(r2931,r2966);
      real r2968#3 = r28BB;
      real r2969#1 = RMul(r2934,r2968);
      real r296A#3 = r288C;
      real r296B#1 = RMul(r2937,r296A);
      real r296C#1 = RAdd(r2967,r2969);
      real r296D#1 = RAdd(r296C,r296B);
      real r296E#3 = r28AC;
      real r296F#1 = RMul(r2931,r296E);
      real r2970#3 = r28BE;
      real r2971#1 = RMul(r2934,r2970);
      real r2972#3 = r2894;
      real r2973#1 = RMul(r2937,r2972);
      real r2974#1 = RAdd(r296F,r2971);
      real r2975#1 = RAdd(r2974,r2973);
      real r2976#3 = r28AF;
      real r2977#1 = RMul(r2931,r2976);
      real r2978#3 = r28C1;
      real r2979#1 = RMul(r2934,r2978);
      real r297A#3 = r289C;
      real r297B#1 = RMul(r2937,r297A);
      real r297C#1 = RAdd(r2977,r2979);
      real r297D#1 = RAdd(r297C,r297B);
      real r2980#9 = r27E6;
      real r2981#1 = RMul(r2980,r2932);
      real r2982#9 = r2804;
      real r2983#1 = RMul(r2982,r2935);
      real r2984#9 = r281E;
      real r2985#1 = RMul(r2984,r2938);
      real r2986#1 = RAdd(r2981,r2983);
      real r2987#1 = RAdd(r2986,r2985);
      real r2988#1 = RMul(r2980,r293C);
      real r2989#1 = RMul(r2982,r293E);
      real r298A#1 = RMul(r2984,r2940);
      real r298B#1 = RAdd(r2988,r2989);
      real r298C#1 = RAdd(r298B,r298A);
      real r298D#1 = RMul(r2980,r2944);
      real r298E#1 = RMul(r2982,r2946);
      real r298F#1 = RMul(r2984,r2948);
      real r2990#1 = RAdd(r298D,r298E);
      real r2991#1 = RAdd(r2990,r298F);
      real r2993#1 = RMul(r2980,r294D);
      real r2994#1 = RMul(r2982,r294F);
      real r2995#1 = RMul(r2984,r2951);
      real r2996#1 = RAdd(r2993,r2994);
      real r2997#1 = RAdd(r2996,r2995);
      real r2998#1 = RMul(r2980,r2955);
      real r2999#1 = RMul(r2982,r2957);
      real r299A#1 = RMul(r2984,r2959);
      real r299B#1 = RAdd(r2998,r2999);
      real r299C#1 = RAdd(r299B,r299A);
      real r299D#1 = RMul(r2980,r295D);
      real r299E#1 = RMul(r2982,r295F);
      real r299F#1 = RMul(r2984,r2961);
      real r29A0#1 = RAdd(r299D,r299E);
      real r29A1#1 = RAdd(r29A0,r299F);
      real r29A3#1 = RMul(r2980,r2966);
      real r29A4#1 = RMul(r2982,r2968);
      real r29A5#1 = RMul(r2984,r296A);
      real r29A6#1 = RAdd(r29A3,r29A4);
      real r29A7#1 = RAdd(r29A6,r29A5);
      real r29A8#1 = RMul(r2980,r296E);
      real r29A9#1 = RMul(r2982,r2970);
      real r29AA#1 = RMul(r2984,r2972);
      real r29AB#1 = RAdd(r29A8,r29A9);
      real r29AC#1 = RAdd(r29AB,r29AA);
      real r29AD#1 = RMul(r2980,r2976);
      real r29AE#1 = RMul(r2982,r2978);
      real r29AF#1 = RMul(r2984,r297A);
      real r29B0#1 = RAdd(r29AD,r29AE);
      real r29B1#1 = RAdd(r29B0,r29AF);
      real r29B4#9 = r27F1;
      real r29B5#1 = RMul(r29B4,r2932);
      real r29B6#9 = r280B;
      real r29B7#1 = RMul(r29B6,r2935);
      real r29B8#9 = r2825;
      real r29B9#1 = RMul(r29B8,r2938);
      real r29BA#1 = RAdd(r29B5,r29B7);
      real r29BB#1 = RAdd(r29BA,r29B9);
      real r29BC#1 = RMul(r29B4,r293C);
      real r29BD#1 = RMul(r29B6,r293E);
      real r29BE#1 = RMul(r29B8,r2940);
      real r29BF#1 = RAdd(r29BC,r29BD);
      real r29C0#1 = RAdd(r29BF,r29BE);
      real r29C1#1 = RMul(r29B4,r2944);
      real r29C2#1 = RMul(r29B6,r2946);
      real r29C3#1 = RMul(r29B8,r2948);
      real r29C4#1 = RAdd(r29C1,r29C2);
      real r29C5#1 = RAdd(r29C4,r29C3);
      real r29C7#1 = RMul(r29B4,r294D);
      real r29C8#1 = RMul(r29B6,r294F);
      real r29C9#1 = RMul(r29B8,r2951);
      real r29CA#1 = RAdd(r29C7,r29C8);
      real r29CB#1 = RAdd(r29CA,r29C9);
      real r29CC#1 = RMul(r29B4,r2955);
      real r29CD#1 = RMul(r29B6,r2957);
      real r29CE#1 = RMul(r29B8,r2959);
      real r29CF#1 = RAdd(r29CC,r29CD);
      real r29D0#1 = RAdd(r29CF,r29CE);
      real r29D1#1 = RMul(r29B4,r295D);
      real r29D2#1 = RMul(r29B6,r295F);
      real r29D3#1 = RMul(r29B8,r2961);
      real r29D4#1 = RAdd(r29D1,r29D2);
      real r29D5#1 = RAdd(r29D4,r29D3);
      real r29D7#1 = RMul(r29B4,r2966);
      real r29D8#1 = RMul(r29B6,r2968);
      real r29D9#1 = RMul(r29B8,r296A);
      real r29DA#1 = RAdd(r29D7,r29D8);
      real r29DB#1 = RAdd(r29DA,r29D9);
      real r29DC#1 = RMul(r29B4,r296E);
      real r29DD#1 = RMul(r29B6,r2970);
      real r29DE#1 = RMul(r29B8,r2972);
      real r29DF#1 = RAdd(r29DC,r29DD);
      real r29E0#1 = RAdd(r29DF,r29DE);
      real r29E1#1 = RMul(r29B4,r2976);
      real r29E2#1 = RMul(r29B6,r2978);
      real r29E3#1 = RMul(r29B8,r297A);
      real r29E4#1 = RAdd(r29E1,r29E2);
      real r29E5#1 = RAdd(r29E4,r29E3);
      real r2AA2#1 = dof_load2764;
      real r2AA3#3 = basisEval27B6;
      real r2AA4#1 = RMul(r2AA2,r2AA3);
      real r2AA5#1 = dof_load276D;
      real r2AA6#3 = basisEval27B7;
      real r2AA7#1 = RMul(r2AA5,r2AA6);
      real r2AA8#1 = dof_load2776;
      real r2AA9#3 = basisEval27B8;
      real r2AAA#1 = RMul(r2AA8,r2AA9);
      real r2AAB#1 = dof_load277F;
      real r2AAC#3 = basisEval27B8;
      real r2AAD#1 = RMul(r2AAB,r2AAC);
      real r2AAE#1 = RAdd(r2AA4,r2AA7);
      real r2AAF#1 = RAdd(r2AAE,r2AAA);
      real r2AB0#1 = RAdd(r2AAF,r2AAD);
      real r2AB1#1 = dof_load2765;
      real r2AB2#1 = RMul(r2AB1,r2AA3);
      real r2AB3#1 = dof_load276E;
      real r2AB4#1 = RMul(r2AB3,r2AA6);
      real r2AB5#1 = dof_load2777;
      real r2AB6#1 = RMul(r2AB5,r2AA9);
      real r2AB7#1 = dof_load2780;
      real r2AB8#1 = RMul(r2AB7,r2AAC);
      real r2AB9#1 = RAdd(r2AB2,r2AB4);
      real r2ABA#1 = RAdd(r2AB9,r2AB6);
      real r2ABB#1 = RAdd(r2ABA,r2AB8);
      real r2ABC#1 = dof_load2766;
      real r2ABD#1 = RMul(r2ABC,r2AA3);
      real r2ABE#1 = dof_load276F;
      real r2ABF#1 = RMul(r2ABE,r2AA6);
      real r2AC0#1 = dof_load2778;
      real r2AC1#1 = RMul(r2AC0,r2AA9);
      real r2AC2#1 = dof_load2781;
      real r2AC3#1 = RMul(r2AC2,r2AAC);
      real r2AC4#1 = RAdd(r2ABD,r2ABF);
      real r2AC5#1 = RAdd(r2AC4,r2AC1);
      real r2AC6#1 = RAdd(r2AC5,r2AC3);
      tensor[3] probe_l_142AA1#1 = <tensor[3]>[r2AB0,r2ABB,r2AC6];
      real r2AEF#1 = dof_load2764;
      real r2AF0#3 = basisEval27B6;
      real r2AF1#1 = RMul(r2AEF,r2AF0);
      real r2AF2#1 = dof_load276D;
      real r2AF3#3 = basisEval27B8;
      real r2AF4#1 = RMul(r2AF2,r2AF3);
      real r2AF5#1 = dof_load2776;
      real r2AF6#3 = basisEval27B7;
      real r2AF7#1 = RMul(r2AF5,r2AF6);
      real r2AF8#1 = dof_load277F;
      real r2AF9#3 = basisEval27B8;
      real r2AFA#1 = RMul(r2AF8,r2AF9);
      real r2AFB#1 = RAdd(r2AF1,r2AF4);
      real r2AFC#1 = RAdd(r2AFB,r2AF7);
      real r2AFD#1 = RAdd(r2AFC,r2AFA);
      real r2AFE#1 = dof_load2765;
      real r2AFF#1 = RMul(r2AFE,r2AF0);
      real r2B00#1 = dof_load276E;
      real r2B01#1 = RMul(r2B00,r2AF3);
      real r2B02#1 = dof_load2777;
      real r2B03#1 = RMul(r2B02,r2AF6);
      real r2B04#1 = dof_load2780;
      real r2B05#1 = RMul(r2B04,r2AF9);
      real r2B06#1 = RAdd(r2AFF,r2B01);
      real r2B07#1 = RAdd(r2B06,r2B03);
      real r2B08#1 = RAdd(r2B07,r2B05);
      real r2B09#1 = dof_load2766;
      real r2B0A#1 = RMul(r2B09,r2AF0);
      real r2B0B#1 = dof_load276F;
      real r2B0C#1 = RMul(r2B0B,r2AF3);
      real r2B0D#1 = dof_load2778;
      real r2B0E#1 = RMul(r2B0D,r2AF6);
      real r2B0F#1 = dof_load2781;
      real r2B10#1 = RMul(r2B0F,r2AF9);
      real r2B11#1 = RAdd(r2B0A,r2B0C);
      real r2B12#1 = RAdd(r2B11,r2B0E);
      real r2B13#1 = RAdd(r2B12,r2B10);
      tensor[3] probe_l_152AEE#3 = <tensor[3]>[r2AFD,r2B08,r2B13];
      real r2B3C#1 = dof_load2764;
      real r2B3D#3 = basisEval27B6;
      real r2B3E#1 = RMul(r2B3C,r2B3D);
      real r2B3F#1 = dof_load276D;
      real r2B40#3 = basisEval27B8;
      real r2B41#1 = RMul(r2B3F,r2B40);
      real r2B42#1 = dof_load2776;
      real r2B43#3 = basisEval27B8;
      real r2B44#1 = RMul(r2B42,r2B43);
      real r2B45#1 = dof_load277F;
      real r2B46#3 = basisEval27B7;
      real r2B47#1 = RMul(r2B45,r2B46);
      real r2B48#1 = RAdd(r2B3E,r2B41);
      real r2B49#1 = RAdd(r2B48,r2B44);
      real r2B4A#1 = RAdd(r2B49,r2B47);
      real r2B4B#1 = dof_load2765;
      real r2B4C#1 = RMul(r2B4B,r2B3D);
      real r2B4D#1 = dof_load276E;
      real r2B4E#1 = RMul(r2B4D,r2B40);
      real r2B4F#1 = dof_load2777;
      real r2B50#1 = RMul(r2B4F,r2B43);
      real r2B51#1 = dof_load2780;
      real r2B52#1 = RMul(r2B51,r2B46);
      real r2B53#1 = RAdd(r2B4C,r2B4E);
      real r2B54#1 = RAdd(r2B53,r2B50);
      real r2B55#1 = RAdd(r2B54,r2B52);
      real r2B56#1 = dof_load2766;
      real r2B57#1 = RMul(r2B56,r2B3D);
      real r2B58#1 = dof_load276F;
      real r2B59#1 = RMul(r2B58,r2B40);
      real r2B5A#1 = dof_load2778;
      real r2B5B#1 = RMul(r2B5A,r2B43);
      real r2B5C#1 = dof_load2781;
      real r2B5D#1 = RMul(r2B5C,r2B46);
      real r2B5E#1 = RAdd(r2B57,r2B59);
      real r2B5F#1 = RAdd(r2B5E,r2B5B);
      real r2B60#1 = RAdd(r2B5F,r2B5D);
      real realLit2B89#3 = 0.e0;
      real r2B8A#3 = r2B4A;
      real r2B8B#3 = RMul(realLit2B89,r2B8A);
      real r2B8C#3 = r2B55;
      real r2B8D#3 = RMul(realLit2B89,r2B8C);
      real r2B8E#3 = r2B60;
      real r2B8F#5 = RMul(realLit2B89,r2B8E);
      real r2B90#3 = RAdd(r2B8B,r2B8D);
      real r2B91#3 = RAdd(r2B90,r2B8F);
      real realLit2B92#3 = 0.1e1;
      real r2B93#1 = RMul(realLit2B92,r2B8E);
      real r2B94#1 = RAdd(r2B90,r2B93);
      real realLit2B95#3 = -0.1e1;
      real r2B96#1 = RMul(realLit2B95,r2B8C);
      real r2B97#1 = RAdd(r2B8B,r2B96);
      real r2B98#1 = RAdd(r2B97,r2B8F);
      tensor[3] tensor2B99#1 = <tensor[3]>[r2B91,r2B94,r2B98];
      real r2B9A#1 = RMul(realLit2B95,r2B8E);
      real r2B9B#1 = RAdd(r2B90,r2B9A);
      real r2B9C#1 = RMul(realLit2B92,r2B8A);
      real r2B9D#1 = RAdd(r2B9C,r2B8D);
      real r2B9E#1 = RAdd(r2B9D,r2B8F);
      tensor[3] tensor2B9F#1 = <tensor[3]>[r2B9B,r2B91,r2B9E];
      real r2BA0#1 = RMul(realLit2B92,r2B8C);
      real r2BA1#1 = RAdd(r2B8B,r2BA0);
      real r2BA2#1 = RAdd(r2BA1,r2B8F);
      real r2BA3#1 = RMul(realLit2B95,r2B8A);
      real r2BA4#1 = RAdd(r2BA3,r2B8D);
      real r2BA5#1 = RAdd(r2BA4,r2B8F);
      tensor[3] tensor2BA6#1 = <tensor[3]>[r2BA2,r2BA5,r2B91];
      tensor[3] projParam2BC8#1 = tensor2B99;
      real vdot2BC9#1 = VDot<3>(probe_l_152AEE,projParam2BC8);
      tensor[3] projParam2BCA#1 = tensor2B9F;
      real vdot2BCB#1 = VDot<3>(probe_l_152AEE,projParam2BCA);
      tensor[3] projParam2BCC#1 = tensor2BA6;
      real vdot2BCD#1 = VDot<3>(probe_l_152AEE,projParam2BCC);
      tensor[3] op1_e3_l_182BC7#1 = <tensor[3]>[vdot2BC9,vdot2BCB,vdot2BCD];
      real op1_e3_l_192BD6#1 = VDot<3>(probe_l_142AA1,op1_e3_l_182BC7);
      real realLit2BDA#27 = 0.e0;
      real r2BDB#1 = r293B;
      real r2BDC#2 = RMul(realLit2BDA,r2BDB);
      real r2BDD#2 = r2943;
      real r2BDE#1 = RMul(realLit2BDA,r2BDD);
      real r2BDF#2 = r294B;
      real r2BE0#2 = RMul(realLit2BDA,r2BDF);
      real r2BE1#2 = r2987;
      real r2BE2#2 = RMul(realLit2BDA,r2BE1);
      real r2BE3#1 = r298C;
      real r2BE4#3 = RMul(realLit2BDA,r2BE3);
      real realLit2BE5#9 = 0.1e1;
      real r2BE6#2 = r2991;
      real r2BE7#1 = RMul(realLit2BE5,r2BE6);
      real r2BE8#2 = r29BB;
      real r2BE9#2 = RMul(realLit2BDA,r2BE8);
      real realLit2BEA#9 = -0.1e1;
      real r2BEB#2 = r29C0;
      real r2BEC#1 = RMul(realLit2BEA,r2BEB);
      real r2BED#1 = r29C5;
      real r2BEE#3 = RMul(realLit2BDA,r2BED);
      real r2BEF#2 = RAdd(r2BDC,r2BDE);
      real r2BF0#1 = RAdd(r2BEF,r2BE0);
      real r2BF1#1 = RAdd(r2BF0,r2BE2);
      real r2BF2#1 = RAdd(r2BF1,r2BE4);
      real r2BF3#1 = RAdd(r2BF2,r2BE7);
      real r2BF4#1 = RAdd(r2BF3,r2BE9);
      real r2BF5#1 = RAdd(r2BF4,r2BEC);
      real r2BF6#1 = RAdd(r2BF5,r2BEE);
      real r2BF7#1 = r2954;
      real r2BF8#2 = RMul(realLit2BDA,r2BF7);
      real r2BF9#2 = r295C;
      real r2BFA#1 = RMul(realLit2BDA,r2BF9);
      real r2BFB#2 = r2964;
      real r2BFC#2 = RMul(realLit2BDA,r2BFB);
      real r2BFD#2 = r2997;
      real r2BFE#2 = RMul(realLit2BDA,r2BFD);
      real r2BFF#1 = r299C;
      real r2C00#3 = RMul(realLit2BDA,r2BFF);
      real r2C01#2 = r29A1;
      real r2C02#1 = RMul(realLit2BE5,r2C01);
      real r2C03#2 = r29CB;
      real r2C04#2 = RMul(realLit2BDA,r2C03);
      real r2C05#2 = r29D0;
      real r2C06#1 = RMul(realLit2BEA,r2C05);
      real r2C07#1 = r29D5;
      real r2C08#3 = RMul(realLit2BDA,r2C07);
      real r2C09#2 = RAdd(r2BF8,r2BFA);
      real r2C0A#1 = RAdd(r2C09,r2BFC);
      real r2C0B#1 = RAdd(r2C0A,r2BFE);
      real r2C0C#1 = RAdd(r2C0B,r2C00);
      real r2C0D#1 = RAdd(r2C0C,r2C02);
      real r2C0E#1 = RAdd(r2C0D,r2C04);
      real r2C0F#1 = RAdd(r2C0E,r2C06);
      real r2C10#1 = RAdd(r2C0F,r2C08);
      real r2C11#1 = r296D;
      real r2C12#2 = RMul(realLit2BDA,r2C11);
      real r2C13#2 = r2975;
      real r2C14#1 = RMul(realLit2BDA,r2C13);
      real r2C15#2 = r297D;
      real r2C16#2 = RMul(realLit2BDA,r2C15);
      real r2C17#2 = r29A7;
      real r2C18#2 = RMul(realLit2BDA,r2C17);
      real r2C19#1 = r29AC;
      real r2C1A#3 = RMul(realLit2BDA,r2C19);
      real r2C1B#2 = r29B1;
      real r2C1C#1 = RMul(realLit2BE5,r2C1B);
      real r2C1D#2 = r29DB;
      real r2C1E#2 = RMul(realLit2BDA,r2C1D);
      real r2C1F#2 = r29E0;
      real r2C20#1 = RMul(realLit2BEA,r2C1F);
      real r2C21#1 = r29E5;
      real r2C22#3 = RMul(realLit2BDA,r2C21);
      real r2C23#2 = RAdd(r2C12,r2C14);
      real r2C24#1 = RAdd(r2C23,r2C16);
      real r2C25#1 = RAdd(r2C24,r2C18);
      real r2C26#1 = RAdd(r2C25,r2C1A);
      real r2C27#1 = RAdd(r2C26,r2C1C);
      real r2C28#1 = RAdd(r2C27,r2C1E);
      real r2C29#1 = RAdd(r2C28,r2C20);
      real r2C2A#1 = RAdd(r2C29,r2C22);
      real r2C2C#1 = RMul(realLit2BEA,r2BDF);
      real r2C2D#2 = RMul(realLit2BDA,r2BE6);
      real r2C2E#1 = RMul(realLit2BE5,r2BE8);
      real r2C2F#2 = RMul(realLit2BDA,r2BEB);
      real r2C30#1 = RAdd(r2BEF,r2C2C);
      real r2C31#1 = RAdd(r2C30,r2BE2);
      real r2C32#1 = RAdd(r2C31,r2BE4);
      real r2C33#1 = RAdd(r2C32,r2C2D);
      real r2C34#1 = RAdd(r2C33,r2C2E);
      real r2C35#1 = RAdd(r2C34,r2C2F);
      real r2C36#1 = RAdd(r2C35,r2BEE);
      real r2C37#1 = RMul(realLit2BEA,r2BFB);
      real r2C38#2 = RMul(realLit2BDA,r2C01);
      real r2C39#1 = RMul(realLit2BE5,r2C03);
      real r2C3A#2 = RMul(realLit2BDA,r2C05);
      real r2C3B#1 = RAdd(r2C09,r2C37);
      real r2C3C#1 = RAdd(r2C3B,r2BFE);
      real r2C3D#1 = RAdd(r2C3C,r2C00);
      real r2C3E#1 = RAdd(r2C3D,r2C38);
      real r2C3F#1 = RAdd(r2C3E,r2C39);
      real r2C40#1 = RAdd(r2C3F,r2C3A);
      real r2C41#1 = RAdd(r2C40,r2C08);
      real r2C42#1 = RMul(realLit2BEA,r2C15);
      real r2C43#2 = RMul(realLit2BDA,r2C1B);
      real r2C44#1 = RMul(realLit2BE5,r2C1D);
      real r2C45#2 = RMul(realLit2BDA,r2C1F);
      real r2C46#1 = RAdd(r2C23,r2C42);
      real r2C47#1 = RAdd(r2C46,r2C18);
      real r2C48#1 = RAdd(r2C47,r2C1A);
      real r2C49#1 = RAdd(r2C48,r2C43);
      real r2C4A#1 = RAdd(r2C49,r2C44);
      real r2C4B#1 = RAdd(r2C4A,r2C45);
      real r2C4C#1 = RAdd(r2C4B,r2C22);
      real r2C4E#1 = RMul(realLit2BE5,r2BDD);
      real r2C4F#1 = RMul(realLit2BEA,r2BE1);
      real r2C50#1 = RAdd(r2BDC,r2C4E);
      real r2C51#1 = RAdd(r2C50,r2BE0);
      real r2C52#1 = RAdd(r2C51,r2C4F);
      real r2C53#1 = RAdd(r2C52,r2BE4);
      real r2C54#1 = RAdd(r2C53,r2C2D);
      real r2C55#1 = RAdd(r2C54,r2BE9);
      real r2C56#1 = RAdd(r2C55,r2C2F);
      real r2C57#1 = RAdd(r2C56,r2BEE);
      real r2C58#1 = RMul(realLit2BE5,r2BF9);
      real r2C59#1 = RMul(realLit2BEA,r2BFD);
      real r2C5A#1 = RAdd(r2BF8,r2C58);
      real r2C5B#1 = RAdd(r2C5A,r2BFC);
      real r2C5C#1 = RAdd(r2C5B,r2C59);
      real r2C5D#1 = RAdd(r2C5C,r2C00);
      real r2C5E#1 = RAdd(r2C5D,r2C38);
      real r2C5F#1 = RAdd(r2C5E,r2C04);
      real r2C60#1 = RAdd(r2C5F,r2C3A);
      real r2C61#1 = RAdd(r2C60,r2C08);
      real r2C62#1 = RMul(realLit2BE5,r2C13);
      real r2C63#1 = RMul(realLit2BEA,r2C17);
      real r2C64#1 = RAdd(r2C12,r2C62);
      real r2C65#1 = RAdd(r2C64,r2C16);
      real r2C66#1 = RAdd(r2C65,r2C63);
      real r2C67#1 = RAdd(r2C66,r2C1A);
      real r2C68#1 = RAdd(r2C67,r2C43);
      real r2C69#1 = RAdd(r2C68,r2C1E);
      real r2C6A#1 = RAdd(r2C69,r2C45);
      real r2C6B#1 = RAdd(r2C6A,r2C22);
      real realLit2D03#1 = 0.2e1;
      real op1_e3_l_212D02#9 = RMul(realLit2D03,op1_e3_l_192BD6);
      real varAcc2D09#1 = VIndex<3,0>(xn2D08);
      real varAcc2D0A#1 = VIndex<3,1>(xn2D08);
      real varAcc2D0B#1 = VIndex<3,2>(xn2D08);
      real coeff2D0C#3 = -0.1e1;
      real iden2D0D#1 = varAcc2D09;
      real one2D0E#11 = 0.1e1;
      real prod2D0F#2 = RMul(one2D0E,one2D0E);
      real prod2D10#2 = RMul(iden2D0D,prod2D0F);
      real iden2D11#1 = varAcc2D0A;
      real prod2D12#1 = RMul(iden2D11,one2D0E);
      real prod2D13#2 = RMul(one2D0E,prod2D12);
      real iden2D14#1 = varAcc2D0B;
      real prod2D15#1 = RMul(one2D0E,iden2D14);
      real prod2D16#2 = RMul(one2D0E,prod2D15);
      real prod2D17#1 = RMul(one2D0E,prod2D0F);
      real mult2D18#1 = RMul(one2D0E,prod2D17);
      real mult2D19#1 = RMul(coeff2D0C,prod2D16);
      real mult2D1A#1 = RMul(coeff2D0C,prod2D13);
      real mult2D1B#1 = RMul(coeff2D0C,prod2D10);
      real sum2D1C#1 = RAdd(mult2D1A,mult2D1B);
      real sum2D1D#1 = RAdd(mult2D19,sum2D1C);
      real sum2D1E#1 = RAdd(mult2D18,sum2D1D);
      real intermediate2D1F#2 = sum2D1E;
      real basisEval2D20#2 = RMul(one2D0E,prod2D10);
      real basisEval2D21#2 = RMul(one2D0E,prod2D13);
      real basisEval2D22#2 = RMul(one2D0E,prod2D16);
      real r2D41#1 = dof_load2764;
      real r2D42#3 = intermediate2D1F;
      real r2D43#1 = RMul(r2D41,r2D42);
      real r2D44#1 = dof_load276D;
      real r2D45#3 = basisEval2D20;
      real r2D46#1 = RMul(r2D44,r2D45);
      real r2D47#1 = dof_load2776;
      real r2D48#3 = basisEval2D21;
      real r2D49#1 = RMul(r2D47,r2D48);
      real r2D4A#1 = dof_load277F;
      real r2D4B#3 = basisEval2D22;
      real r2D4C#1 = RMul(r2D4A,r2D4B);
      real r2D4D#1 = RAdd(r2D43,r2D46);
      real r2D4E#1 = RAdd(r2D4D,r2D49);
      real r2D4F#1 = RAdd(r2D4E,r2D4C);
      real r2D50#1 = dof_load2765;
      real r2D51#1 = RMul(r2D50,r2D42);
      real r2D52#1 = dof_load276E;
      real r2D53#1 = RMul(r2D52,r2D45);
      real r2D54#1 = dof_load2777;
      real r2D55#1 = RMul(r2D54,r2D48);
      real r2D56#1 = dof_load2780;
      real r2D57#1 = RMul(r2D56,r2D4B);
      real r2D58#1 = RAdd(r2D51,r2D53);
      real r2D59#1 = RAdd(r2D58,r2D55);
      real r2D5A#1 = RAdd(r2D59,r2D57);
      real r2D5B#1 = dof_load2766;
      real r2D5C#1 = RMul(r2D5B,r2D42);
      real r2D5D#1 = dof_load276F;
      real r2D5E#1 = RMul(r2D5D,r2D45);
      real r2D5F#1 = dof_load2778;
      real r2D60#1 = RMul(r2D5F,r2D48);
      real r2D61#1 = dof_load2781;
      real r2D62#1 = RMul(r2D61,r2D4B);
      real r2D63#1 = RAdd(r2D5C,r2D5E);
      real r2D64#1 = RAdd(r2D63,r2D60);
      real r2D65#1 = RAdd(r2D64,r2D62);
      tensor[3] probe_l_222D40#1 = <tensor[3]>[r2D4F,r2D5A,r2D65];
      real r2D8E#1 = r2BF6;
      real r2D8F#1 = RDiv(r2D8E,op1_e3_l_212D02);
      real r2D90#1 = r2C10;
      real r2D91#1 = RDiv(r2D90,op1_e3_l_212D02);
      real r2D92#1 = r2C2A;
      real r2D93#1 = RDiv(r2D92,op1_e3_l_212D02);
      tensor[3] tensor2D94#2 = <tensor[3]>[r2D8F,r2D91,r2D93];
      real r2D95#1 = r2C36;
      real r2D96#1 = RDiv(r2D95,op1_e3_l_212D02);
      real r2D97#1 = r2C41;
      real r2D98#1 = RDiv(r2D97,op1_e3_l_212D02);
      real r2D99#1 = r2C4C;
      real r2D9A#1 = RDiv(r2D99,op1_e3_l_212D02);
      tensor[3] tensor2D9B#2 = <tensor[3]>[r2D96,r2D98,r2D9A];
      real r2D9C#1 = r2C57;
      real r2D9D#1 = RDiv(r2D9C,op1_e3_l_212D02);
      real r2D9E#1 = r2C61;
      real r2D9F#1 = RDiv(r2D9E,op1_e3_l_212D02);
      real r2DA0#1 = r2C6B;
      real r2DA1#1 = RDiv(r2DA0,op1_e3_l_212D02);
      tensor[3] tensor2DA2#2 = <tensor[3]>[r2D9D,r2D9F,r2DA1];
      tensor[3] op1_e3_l_242DBA#3 = VSub<3>(probe_l_222D40,pos1FE6);
      tensor[3] projParam2DBE#1 = tensor2D94;
      real vdot2DBF#1 = VDot<3>(projParam2DBE,op1_e3_l_242DBA);
      tensor[3] projParam2DC0#1 = tensor2D9B;
      real vdot2DC1#1 = VDot<3>(projParam2DC0,op1_e3_l_242DBA);
      tensor[3] projParam2DC2#1 = tensor2DA2;
      real vdot2DC3#1 = VDot<3>(projParam2DC2,op1_e3_l_242DBA);
      tensor[3] op1_e3_l_252DBD#1 = <tensor[3]>[vdot2DBF,vdot2DC1,vdot2DC3];
      tensor[3] xn2DCC#4 = VSub<3>(xn2D08,op1_e3_l_252DBD);
      real _t2DCF#2 = 0.1e-7;
      real _t2DD1#1 = RMul(_t2DCF,_t2DCF);
      real r2DD5#1 = dof_load2764;
      real r2DD6#3 = intermediate2D1F;
      real r2DD7#1 = RMul(r2DD5,r2DD6);
      real r2DD8#1 = dof_load276D;
      real r2DD9#3 = basisEval2D20;
      real r2DDA#1 = RMul(r2DD8,r2DD9);
      real r2DDB#1 = dof_load2776;
      real r2DDC#3 = basisEval2D21;
      real r2DDD#1 = RMul(r2DDB,r2DDC);
      real r2DDE#1 = dof_load277F;
      real r2DDF#3 = basisEval2D22;
      real r2DE0#1 = RMul(r2DDE,r2DDF);
      real r2DE1#1 = RAdd(r2DD7,r2DDA);
      real r2DE2#1 = RAdd(r2DE1,r2DDD);
      real r2DE3#1 = RAdd(r2DE2,r2DE0);
      real r2DE4#1 = dof_load2765;
      real r2DE5#1 = RMul(r2DE4,r2DD6);
      real r2DE6#1 = dof_load276E;
      real r2DE7#1 = RMul(r2DE6,r2DD9);
      real r2DE8#1 = dof_load2777;
      real r2DE9#1 = RMul(r2DE8,r2DDC);
      real r2DEA#1 = dof_load2780;
      real r2DEB#1 = RMul(r2DEA,r2DDF);
      real r2DEC#1 = RAdd(r2DE5,r2DE7);
      real r2DED#1 = RAdd(r2DEC,r2DE9);
      real r2DEE#1 = RAdd(r2DED,r2DEB);
      real r2DEF#1 = dof_load2766;
      real r2DF0#1 = RMul(r2DEF,r2DD6);
      real r2DF1#1 = dof_load276F;
      real r2DF2#1 = RMul(r2DF1,r2DD9);
      real r2DF3#1 = dof_load2778;
      real r2DF4#1 = RMul(r2DF3,r2DDC);
      real r2DF5#1 = dof_load2781;
      real r2DF6#1 = RMul(r2DF5,r2DDF);
      real r2DF7#1 = RAdd(r2DF0,r2DF2);
      real r2DF8#1 = RAdd(r2DF7,r2DF4);
      real r2DF9#1 = RAdd(r2DF8,r2DF6);
      tensor[3] probe_l_302DD4#1 = <tensor[3]>[r2DE3,r2DEE,r2DF9];
      tensor[3] op1_e3_l_322E21#3 = VSub<3>(probe_l_302DD4,pos1FE6);
      tensor[3] projParam2E25#1 = tensor2D94;
      real vdot2E26#1 = VDot<3>(projParam2E25,op1_e3_l_322E21);
      tensor[3] projParam2E27#1 = tensor2D9B;
      real vdot2E28#1 = VDot<3>(projParam2E27,op1_e3_l_322E21);
      tensor[3] projParam2E29#1 = tensor2DA2;
      real vdot2E2A#1 = VDot<3>(projParam2E29,op1_e3_l_322E21);
      tensor[3] op1_e3_l_482E24#2 = <tensor[3]>[vdot2E26,vdot2E28,vdot2E2A];
      real _t2E33#1 = VDot<3>(op1_e3_l_482E24,op1_e3_l_482E24);
      bool _t2E36#1 = GTE<real>(_t2DD1,_t2E33);
      if _t2E36 then goto ASSIGN2E3A else goto JOIN2E65
    ASSIGN2E3A:  preds = [COND2E38]
      real _t2E39#4 = 0.1e1;
      real _t2E3B#4 = 0.1e-4;
      real _t2E3D#1 = RAdd(_t2E39,_t2E3B);
      tensor[3] _t2E40#1 = <tensor[3]>[_t2E39,_t2E39,_t2E39];
      real _t2E42#1 = VDot<3>(_t2E40,xn2DCC);
      bool _t2E45#1 = GT<real>(_t2E3D,_t2E42);
      tensor[3] _t2E47#1 = <tensor[3]>[_t2E3B,_t2E3B,_t2E3B];
      tensor[3] _t2E49#3 = VAdd<3>(_t2E47,xn2DCC);
      real _t2E4C#1 = VIndex<3,0>(_t2E49);
      real _t2E4E#3 = -0.e0;
      bool _t2E50#1 = GT<real>(_t2E4C,_t2E4E);
      real _t2E52#1 = VIndex<3,1>(_t2E49);
      bool _t2E54#1 = GT<real>(_t2E52,_t2E4E);
      real _t2E56#1 = VIndex<3,2>(_t2E49);
      bool _t2E58#1 = GT<real>(_t2E56,_t2E4E);
      bool _t2E5A#1 = BAnd(_t2E54,_t2E58);
      bool _t2E5C#1 = BAnd(_t2E50,_t2E5A);
      bool _t2E5E#1 = BAnd(_t2E45,_t2E5C);
      if _t2E5E then goto ASSIGN2E62 else goto JOIN2E64
    ASSIGN2E62:  preds = [COND2E60]
      femData:MeshPos _t2E61#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellInt273A,xn2DCC,pos1FE6);
      return _t2E61
      goto JOIN2E64
    JOIN2E64:  preds = [*RETURN(_t2E61)2E63,COND2E60]
      goto JOIN2E65
    JOIN2E65:  preds = [JOIN2E64,COND2E38]
      int newtonInt2E66#2 = IAdd(newtonInt2E67,_t1FF2);
      bool _t2E69#1 = GTE<int>(newtonInt2E66,_t272F);
      if _t2E69 then goto ASSIGN2E6D else goto JOIN2E77
    ASSIGN2E6D:  preds = [COND2E6B]
      bool _t2E6C#1 = GTE<int>(cellInt273A,numCell1FF4);
      if _t2E6C then goto ASSIGN2E70 else goto ASSIGN2E79
    ASSIGN2E70:  preds = [COND2E6E]
      femData:MeshPos _t2E6F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E6F
      goto JOIN2E74
    JOIN2E74:  preds = [*RETURN(_t2E6F)2E71,ASSIGN2E79]
      int cellInt2E72#1 = phi(cellInt2E73)
      goto JOIN2E77
    JOIN2E77:  preds = [JOIN2E74,COND2E6B]
      int cellInt2E75#1 = phi(cellInt2E72,cellInt273A)
      int newtonInt2E76#1 = phi(newtonInt1FEC,newtonInt2E66)
      goto FOREACH2738
    ASSIGN2E79:  preds = [COND2E6E]
      int cellInt2E73#1 = IAdd(cellInt273A,_t1FF2);
      goto JOIN2E74
    ASSIGN2E7B:  preds = [FOREACH2738]
      string _t2E7A#1 = "Bad end 2";
      string _t2E7C#1 = "\n";
      Print<[string,string]>(_t2E7A,_t2E7C);
      femData:MeshPos _t2E7F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E7F
}
## input initialization
  ENTRY1D28:  preds = []
    real isoval1D29#1 = 0.2e0;
    globals.isoval1D09 = isoval1D29;
    real thick1D2C#1 = 0.7e-1;
    globals.thick1D0A = thick1D2C;
    real _t1D2F#2 = 0.3e1;
    real _t1D31#1 = -0.3e1;
    tensor[3] camEye1D33#1 = <tensor[3]>[_t1D2F,_t1D31,_t1D2F];
    globals.camEye1D0B = camEye1D33;
    real _t1D36#3 = 0.5e0;
    tensor[3] camAt1D38#1 = <tensor[3]>[_t1D36,_t1D36,_t1D36];
    globals.camAt1D0C = camAt1D38;
    real _t1D3B#2 = 0.e0;
    real _t1D3D#2 = 0.1e1;
    tensor[3] camUp1D3F#2 = <tensor[3]>[_t1D3B,_t1D3B,_t1D3D];
    globals.camUp1D0D = camUp1D3F;
    real camFOV1D42#1 = 0.137e2;
    globals.camFOV1D0E = camFOV1D42;
    int iresU1D45#2 = 500;
    globals.iresU1D0F = iresU1D45;
    globals.iresV1D10 = iresU1D45;
    real camNear1D49#1 = -0.2e1;
    globals.camNear1D11 = camNear1D49;
    real camFar1D4C#1 = 0.5e1;
    globals.camFar1D12 = camFar1D4C;
    globals.refStep1D13 = _t1D3D;
    real rayStep1D50#1 = 0.1e-1;
    globals.rayStep1D14 = rayStep1D50;
    globals.lightVsp1D15 = camUp1D3F;
    real phongKa1D54#1 = 0.1e0;
    globals.phongKa1D16 = phongKa1D54;
    real phongKd1D57#1 = 0.9e0;
    globals.phongKd1D17 = phongKd1D57;
    bool debug1D5A#1 = false;
    globals.debug1D18 = debug1D5A;
    int su1D5D#2 = 250;
    globals.su1D19 = su1D5D;
    globals.sv1D1A = su1D5D;
    return
## global-variable initialization
  ENTRY1D62:  preds = []
    femData:Mesh a1D63#3 = globals.a1D06;
    femData:Space 0b043B_intermedateGlobal1D65#1 = globals.0b043B_intermedateGlobal1D07;
    femData:FemFunc 0c043D_intermedateGlobal1D67#1 = globals.0c043D_intermedateGlobal1D08;
    tensor[3] camEye1D69#1 = globals.camEye1D0B;
    tensor[3] camAt1D6B#1 = globals.camAt1D0C;
    tensor[3] camUp1D6D#3 = globals.camUp1D0D;
    real camFOV1D6F#1 = globals.camFOV1D0E;
    int iresU1D71#1 = globals.iresU1D0F;
    int iresV1D73#1 = globals.iresV1D10;
    tensor[3] lightVsp1D75#5 = globals.lightVsp1D15;
    int _t1D77#1 = 0;
    int _t1D79#1 = 1;
    int _t1D7B#1 = ExtractFemItem<int,NumCell(Mesh)>(a1D63);
    int _t1D7D#1 = ISub(_t1D7B,_t1D79);
    int[] _t1D7F#1 = Range(_t1D77,_t1D7D);
    femData:MeshCell[] _t1D81#1 = <femData:MeshCell[]>{};
  FOREACH1D84:  preds = [ASSIGN1D82,NEXT1D8A]
    foreach (_t1D83 in _t1D7F) on exit goto ASSIGN1D8C
      femData:MeshCell[] _t1D88#1 = phi(_t1D81,_t1D87)
    femData:MeshCell _t1D85#1 = LoadFem<femData:MeshCell>(a1D63,_t1D83);
    femData:MeshCell[] _t1D87#1 = Append<femData:MeshCell>(_t1D88,_t1D85);
    goto FOREACH1D84
  ASSIGN1D8C:  preds = [FOREACH1D84]
    femData:Space b1D8B#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1D65,a1D63);
    femData:FemFunc c1D8D#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1D67,b1D8B);
    femData:Space _t1D8F#2 = ExtractFem<femData:Space,femData:FemFunc>(c1D8D);
    femData:Mesh _t1D91#1 = ExtractFem<femData:Mesh,femData:Space>(_t1D8F);
    image(IMAGE1D<double[3]>) I1D93#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21D99#9 = VSub<3>(camAt1D6B,camEye1D69);
    real op1_e3_l_41D9C#1 = VDot<3>(op1_e3_l_21D99,op1_e3_l_21D99);
    real camDist1D9F#4 = Sqrt(op1_e3_l_41D9C);
    globals.camDist1D1B = camDist1D9F;
    real realLit1DA4#1 = 0.1e1;
    real op1_e3_l_91DA3#6 = RDiv(realLit1DA4,camDist1D9F);
    tensor[3] camN1DA8#4 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_21D99);
    globals.camN1D1C = camN1DA8;
    real realLit1DAD#3 = 0.e0;
    real r1DAE#3 = TensorIndex<tensor[3],[0]>(camUp1D6D);
    real r1DAF#3 = RMul(realLit1DAD,r1DAE);
    real r1DB0#3 = TensorIndex<tensor[3],[1]>(camUp1D6D);
    real r1DB1#3 = RMul(realLit1DAD,r1DB0);
    real r1DB2#3 = TensorIndex<tensor[3],[2]>(camUp1D6D);
    real r1DB3#5 = RMul(realLit1DAD,r1DB2);
    real r1DB4#3 = RAdd(r1DAF,r1DB1);
    real r1DB5#3 = RAdd(r1DB4,r1DB3);
    real realLit1DB6#3 = 0.1e1;
    real r1DB7#1 = RMul(realLit1DB6,r1DB2);
    real r1DB8#1 = RAdd(r1DB4,r1DB7);
    real realLit1DB9#3 = -0.1e1;
    real r1DBA#1 = RMul(realLit1DB9,r1DB0);
    real r1DBB#1 = RAdd(r1DAF,r1DBA);
    real r1DBC#1 = RAdd(r1DBB,r1DB3);
    tensor[3] tensor1DBD#1 = <tensor[3]>[r1DB5,r1DB8,r1DBC];
    real r1DBE#1 = RMul(realLit1DB9,r1DB2);
    real r1DBF#1 = RAdd(r1DB4,r1DBE);
    real r1DC0#1 = RMul(realLit1DB6,r1DAE);
    real r1DC1#1 = RAdd(r1DC0,r1DB1);
    real r1DC2#1 = RAdd(r1DC1,r1DB3);
    tensor[3] tensor1DC3#1 = <tensor[3]>[r1DBF,r1DB5,r1DC2];
    real r1DC4#1 = RMul(realLit1DB6,r1DB0);
    real r1DC5#1 = RAdd(r1DAF,r1DC4);
    real r1DC6#1 = RAdd(r1DC5,r1DB3);
    real r1DC7#1 = RMul(realLit1DB9,r1DAE);
    real r1DC8#1 = RAdd(r1DC7,r1DB1);
    real r1DC9#1 = RAdd(r1DC8,r1DB3);
    tensor[3] tensor1DCA#1 = <tensor[3]>[r1DC6,r1DC9,r1DB5];
    tensor[3] projParam1DEC#1 = tensor1DBD;
    real vdot1DED#1 = VDot<3>(op1_e3_l_21D99,projParam1DEC);
    tensor[3] projParam1DEE#1 = tensor1DC3;
    real vdot1DEF#1 = VDot<3>(op1_e3_l_21D99,projParam1DEE);
    tensor[3] projParam1DF0#1 = tensor1DCA;
    real vdot1DF1#1 = VDot<3>(op1_e3_l_21D99,projParam1DF0);
    tensor[3] op1_e3_l_171DEB#6 = <tensor[3]>[vdot1DED,vdot1DEF,vdot1DF1];
    real op1_e3_l_341DFA#1 = VDot<3>(op1_e3_l_171DEB,op1_e3_l_171DEB);
    real r1DFE#1 = RMul(op1_e3_l_91DA3,op1_e3_l_91DA3);
    real op1_e3_l_351DFD#1 = RMul(r1DFE,op1_e3_l_341DFA);
    real op1_e3_l_361E02#1 = Sqrt(op1_e3_l_351DFD);
    tensor[3] op1_e3_l_371E05#1 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_171DEB);
    real realLit1E09#1 = 0.1e1;
    real op1_e3_l_381E08#2 = RDiv(realLit1E09,op1_e3_l_361E02);
    tensor[3] camU1E0D#4 = VScale<3>(op1_e3_l_381E08,op1_e3_l_371E05);
    globals.camU1D1D = camU1E0D;
    real realLit1E12#3 = 0.e0;
    real r1E13#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21D99);
    real r1E14#3 = RMul(realLit1E12,r1E13);
    real r1E15#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21D99);
    real r1E16#3 = RMul(realLit1E12,r1E15);
    real r1E17#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21D99);
    real r1E18#5 = RMul(realLit1E12,r1E17);
    real r1E19#3 = RAdd(r1E14,r1E16);
    real r1E1A#3 = RAdd(r1E19,r1E18);
    real realLit1E1B#3 = 0.1e1;
    real r1E1C#1 = RMul(realLit1E1B,r1E17);
    real r1E1D#1 = RAdd(r1E19,r1E1C);
    real realLit1E1E#3 = -0.1e1;
    real r1E1F#1 = RMul(realLit1E1E,r1E15);
    real r1E20#1 = RAdd(r1E14,r1E1F);
    real r1E21#1 = RAdd(r1E20,r1E18);
    tensor[3] tensor1E22#1 = <tensor[3]>[r1E1A,r1E1D,r1E21];
    real r1E23#1 = RMul(realLit1E1E,r1E17);
    real r1E24#1 = RAdd(r1E19,r1E23);
    real r1E25#1 = RMul(realLit1E1B,r1E13);
    real r1E26#1 = RAdd(r1E25,r1E16);
    real r1E27#1 = RAdd(r1E26,r1E18);
    tensor[3] tensor1E28#1 = <tensor[3]>[r1E24,r1E1A,r1E27];
    real r1E29#1 = RMul(realLit1E1B,r1E15);
    real r1E2A#1 = RAdd(r1E14,r1E29);
    real r1E2B#1 = RAdd(r1E2A,r1E18);
    real r1E2C#1 = RMul(realLit1E1E,r1E13);
    real r1E2D#1 = RAdd(r1E2C,r1E16);
    real r1E2E#1 = RAdd(r1E2D,r1E18);
    tensor[3] tensor1E2F#1 = <tensor[3]>[r1E2B,r1E2E,r1E1A];
    tensor[3] projParam1E51#1 = tensor1E22;
    real vdot1E52#1 = VDot<3>(op1_e3_l_171DEB,projParam1E51);
    tensor[3] projParam1E53#1 = tensor1E28;
    real vdot1E54#1 = VDot<3>(op1_e3_l_171DEB,projParam1E53);
    tensor[3] projParam1E55#1 = tensor1E2F;
    real vdot1E56#1 = VDot<3>(op1_e3_l_171DEB,projParam1E55);
    tensor[3] op1_e3_l_471E50#1 = <tensor[3]>[vdot1E52,vdot1E54,vdot1E56];
    tensor[3] op1_e3_l_501E5F#3 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_471E50);
    real r1E63#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501E5F);
    real r1E64#3 = RMul(op1_e3_l_381E08,op1_e3_l_91DA3);
    real r1E65#2 = RMul(r1E64,r1E63);
    real r1E66#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501E5F);
    real r1E67#2 = RMul(r1E64,r1E66);
    real r1E68#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501E5F);
    real r1E69#2 = RMul(r1E64,r1E68);
    tensor[3] camV1E62#1 = <tensor[3]>[r1E65,r1E67,r1E69];
    globals.camV1D1E = camV1E62;
    real _t1E74#1 = 0.314159265358979323846264338327950288e1;
    real _t1E76#1 = 0.36e3;
    real op1_e3_l_51E78#1 = RMul(camFOV1D6F,_t1E74);
    real op1_e3_l_61E7B#1 = RDiv(op1_e3_l_51E78,_t1E76);
    real op1_e3_l_101E7E#2 = Tan(op1_e3_l_61E7B);
    real camVmax1E81#1 = RMul(op1_e3_l_101E7E,camDist1D9F);
    globals.camVmax1D1F = camVmax1E81;
    real _t1E85#1 = IntToReal(iresU1D71);
    real _t1E87#1 = IntToReal(iresV1D73);
    real r1E8A#1 = RMul(_t1E85,op1_e3_l_101E7E);
    real op1_e3_l_141E89#1 = RMul(r1E8A,camDist1D9F);
    real camUmax1E8E#1 = RDiv(op1_e3_l_141E89,_t1E87);
    globals.camUmax1D20 = camUmax1E8E;
    real op1_e3_l_31E94#1 = VDot<3>(lightVsp1D75,lightVsp1D75);
    real op1_e3_l_41E97#1 = Sqrt(op1_e3_l_31E94);
    real realLit1E9B#1 = 0.1e1;
    real op1_e3_l_51E9A#1 = RDiv(realLit1E9B,op1_e3_l_41E97);
    real r1EA0#1 = VIndex<3,0>(camU1E0D);
    real r1EA1#3 = TensorIndex<tensor[3],[0]>(lightVsp1D75);
    real r1EA2#1 = RMul(r1EA0,r1EA1);
    real r1EA3#1 = r1E65;
    real r1EA4#3 = TensorIndex<tensor[3],[1]>(lightVsp1D75);
    real r1EA5#1 = RMul(r1EA3,r1EA4);
    real r1EA6#1 = VIndex<3,0>(camN1DA8);
    real r1EA7#3 = TensorIndex<tensor[3],[2]>(lightVsp1D75);
    real r1EA8#1 = RMul(r1EA6,r1EA7);
    real r1EA9#1 = RAdd(r1EA2,r1EA5);
    real r1EAA#1 = RAdd(r1EA9,r1EA8);
    real r1EAB#1 = VIndex<3,1>(camU1E0D);
    real r1EAC#1 = RMul(r1EAB,r1EA1);
    real r1EAD#1 = r1E67;
    real r1EAE#1 = RMul(r1EAD,r1EA4);
    real r1EAF#1 = VIndex<3,1>(camN1DA8);
    real r1EB0#1 = RMul(r1EAF,r1EA7);
    real r1EB1#1 = RAdd(r1EAC,r1EAE);
    real r1EB2#1 = RAdd(r1EB1,r1EB0);
    real r1EB3#1 = VIndex<3,2>(camU1E0D);
    real r1EB4#1 = RMul(r1EB3,r1EA1);
    real r1EB5#1 = r1E69;
    real r1EB6#1 = RMul(r1EB5,r1EA4);
    real r1EB7#1 = VIndex<3,2>(camN1DA8);
    real r1EB8#1 = RMul(r1EB7,r1EA7);
    real r1EB9#1 = RAdd(r1EB4,r1EB6);
    real r1EBA#1 = RAdd(r1EB9,r1EB8);
    tensor[3] op1_e3_l_61E9F#1 = <tensor[3]>[r1EAA,r1EB2,r1EBA];
    tensor[3] light1ED8#1 = VScale<3>(op1_e3_l_51E9A,op1_e3_l_61E9F);
    globals.light1D21 = light1ED8;
    globals._t1D22 = _t1D91;
    globals._tX1D23 = _t1D8F;
    globals.c1D24 = c1D8D;
    globals.I1D27 = I1D93;
    return
## strand
  strand raycast (int ui1EE3#2, int vi1EE4#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1EEF:  preds = []
        int iresU1EF0#1 = globals.iresU1D0F;
        int iresV1EF2#1 = globals.iresV1D10;
        real camNear1EF4#1 = globals.camNear1D11;
        real camDist1EF6#1 = globals.camDist1D1B;
        tensor[3] camN1EF8#1 = globals.camN1D1C;
        tensor[3] camU1EFA#1 = globals.camU1D1D;
        tensor[3] camV1EFC#1 = globals.camV1D1E;
        real camVmax1EFE#4 = globals.camVmax1D1F;
        real camUmax1F00#2 = globals.camUmax1D20;
        real _t1F02#5 = -0.5e0;
        real _t1F04#1 = IntToReal(ui1EE3);
        real _t1F06#1 = IntToReal(iresU1EF0);
        real _t1F08#3 = 0.5e0;
        real op1_e3_l_61F0A#1 = RSub(_t1F06,_t1F08);
        real op1_e3_l_71F0D#1 = RSub(_t1F04,_t1F02);
        real op1_e3_l_81F10#1 = RSub(op1_e3_l_61F0A,_t1F02);
        real op1_e3_l_91F13#2 = RNeg(camUmax1F00);
        real op1_e3_l_101F16#1 = RDiv(op1_e3_l_71F0D,op1_e3_l_81F10);
        real op1_e3_l_111F19#1 = RSub(camUmax1F00,op1_e3_l_91F13);
        real op1_e3_l_131F1C#1 = RMul(op1_e3_l_101F16,op1_e3_l_111F19);
        real rayU1F1F#2 = RAdd(op1_e3_l_91F13,op1_e3_l_131F1C);
        real _t1F22#1 = IntToReal(vi1EE4);
        real _t1F24#2 = IntToReal(iresV1EF2);
        real op1_e3_l_61F26#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_71F29#2 = RSub(_t1F22,_t1F02);
        real op1_e3_l_81F2C#1 = RSub(op1_e3_l_61F26,_t1F02);
        real op1_e3_l_91F2F#1 = RNeg(camVmax1EFE);
        real op1_e3_l_101F32#1 = RDiv(op1_e3_l_71F29,op1_e3_l_81F2C);
        real op1_e3_l_111F35#2 = RSub(op1_e3_l_91F2F,camVmax1EFE);
        real op1_e3_l_121F38#1 = RMul(op1_e3_l_101F32,op1_e3_l_111F35);
        real rayV1F3B#1 = RAdd(camVmax1EFE,op1_e3_l_121F38);
        real op1_e3_l_251F3E#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_271F41#1 = RSub(op1_e3_l_251F3E,_t1F02);
        real op1_e3_l_291F44#1 = RDiv(op1_e3_l_71F29,op1_e3_l_271F41);
        real op1_e3_l_311F47#1 = RMul(op1_e3_l_291F44,op1_e3_l_111F35);
        real op1_e3_l_321F4A#1 = RAdd(camVmax1EFE,op1_e3_l_311F47);
        tensor[3] op1_e3_l_331F4D#1 = VScale<3>(rayU1F1F,camU1EFA);
        tensor[3] op1_e3_l_341F50#1 = VScale<3>(op1_e3_l_321F4A,camV1EFC);
        tensor[3] op1_e3_l_351F53#3 = VAdd<3>(op1_e3_l_331F4D,op1_e3_l_341F50);
        real realLit1F57#1 = 0.1e1;
        real r1F58#3 = RDiv(realLit1F57,camDist1EF6);
        real r1F59#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351F53);
        real r1F5A#1 = RMul(r1F58,r1F59);
        real r1F5B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351F53);
        real r1F5C#1 = RMul(r1F58,r1F5B);
        real r1F5D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351F53);
        real r1F5E#1 = RMul(r1F58,r1F5D);
        tensor[3] op1_e3_l_361F56#1 = <tensor[3]>[r1F5A,r1F5C,r1F5E];
        tensor[3] rayVec1F69#1 = VAdd<3>(camN1EF8,op1_e3_l_361F56);
        real transp1F6C#1 = 0.1e1;
        real _t1F6E#8 = 0.e0;
        tensor[3] rgb1F70#1 = <tensor[3]>[_t1F6E,_t1F6E,_t1F6E];
        tensor[4] rgba1F72#1 = <tensor[4]>[_t1F6E,_t1F6E,_t1F6E,_t1F6E];
        self.rayU = rayU1F1F;
        self.rayV = rayV1F3B;
        self.rayN = camNear1EF4;
        self.rayVec = rayVec1F69;
        self.transp = transp1F6C;
        self.rgb = rgb1F70;
        self.rgba = rgba1F72;
        self.gray = _t1F6E;
        self.ui = ui1EE3;
        self.vi = vi1EE4;
        return
    end state init
    method update
        ENTRY1F7F:  preds = []
          image(IMAGE1D<double[3]>) I1F80#17 = globals.I1D27;
          real isoval1F82#1 = globals.isoval1D09;
          femData:Mesh _t1F84#17 = globals._t1D22;
          femData:Space _t1F86#10 = globals._tX1D23;
          femData:FemFunc c1F88#10 = globals.c1D24;
          femData:Mesh a1F8E#1 = globals.a1D06;
          real thick1F90#1 = globals.thick1D0A;
          tensor[3] camEye1F92#1 = globals.camEye1D0B;
          real camNear1F94#2 = globals.camNear1D11;
          real camFar1F96#2 = globals.camFar1D12;
          real refStep1F98#1 = globals.refStep1D13;
          real rayStep1F9A#2 = globals.rayStep1D14;
          real phongKa1F9C#1 = globals.phongKa1D16;
          real phongKd1F9E#1 = globals.phongKd1D17;
          bool debug1FA0#1 = globals.debug1D18;
          int su1FA2#1 = globals.su1D19;
          int sv1FA4#1 = globals.sv1D1A;
          tensor[3] light1FA6#1 = globals.light1D21;
          real rayN1FA8#4 = self.rayN;
          tensor[3] rayVec1FAA#3 = self.rayVec;
          real transp1FAC#10 = self.transp;
          tensor[3] rgb1FAE#9 = self.rgb;
          int ui1FB0#1 = self.ui;
          int vi1FB2#1 = self.vi;
          if debug1FA0 then goto ASSIGN1FB6 else goto JOIN1FC0
        ASSIGN1FB6:  preds = [COND1FB4]
          bool _t1FB5#1 = NEQ<int>(ui1FB0,su1FA2);
          if _t1FB5 then goto ASSIGN1FB9 else goto ASSIGN37E8
        ASSIGN1FB9:  preds = [COND1FB7]
          bool _t1FB8#1 = true;
          goto JOIN1FBC
        JOIN1FBC:  preds = [ASSIGN1FB9,ASSIGN37E8]
          bool _t1FBA#1 = phi(_t1FB8,_t1FBB)
          if _t1FBA then goto STABILIZE1FBE else goto JOIN1FBF
        STABILIZE1FBE:  preds = [COND1FBD]
          stabilize
          goto JOIN1FBF
        JOIN1FBF:  preds = [*STABILIZE1FBE,COND1FBD]
          goto JOIN1FC0
        JOIN1FC0:  preds = [JOIN1FBF,COND1FB4]
          tensor[3] op1_e3_l_31FC1#1 = VScale<3>(rayN1FA8,rayVec1FAA);
          tensor[3] x1FC4#6 = VAdd<3>(camEye1F92,op1_e3_l_31FC1);
          real _t1FC7#8 = 0.e0;
          real _t1FC9#2 = VIndex<3,0>(x1FC4);
          bool _t1FCB#1 = LT<real>(_t1FC7,_t1FC9);
          if _t1FCB then goto ASSIGN1FCF else goto JOIN3798
        ASSIGN1FCF:  preds = [COND1FCD]
          real _t1FCE#11 = 0.1e1;
          bool _t1FD0#1 = LT<real>(_t1FC9,_t1FCE);
          if _t1FD0 then goto ASSIGN1FD4 else goto JOIN3795
        ASSIGN1FD4:  preds = [COND1FD2]
          real _t1FD3#2 = VIndex<3,1>(x1FC4);
          bool _t1FD5#1 = LT<real>(_t1FC7,_t1FD3);
          if _t1FD5 then goto ASSIGN1FD9 else goto JOIN3792
        ASSIGN1FD9:  preds = [COND1FD7]
          bool _t1FD8#1 = LT<real>(_t1FD3,_t1FCE);
          if _t1FD8 then goto ASSIGN1FDC else goto JOIN378F
        ASSIGN1FDC:  preds = [COND1FDA]
          real _t1FDB#2 = VIndex<3,2>(x1FC4);
          bool _t1FDD#1 = LT<real>(_t1FC7,_t1FDB);
          if _t1FDD then goto ASSIGN1FE1 else goto JOIN378C
        ASSIGN1FE1:  preds = [COND1FDF]
          bool _t1FE0#1 = LT<real>(_t1FDB,_t1FCE);
          if _t1FE0 then goto ASSIGN2E82 else goto JOIN3789
        ASSIGN2E82:  preds = [COND1FE2]
          femData:MeshPos p1FE3#1 = findPos1FE4 (a1F8E,x1FC4);
          bool _t2E83#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1FE3);
          if _t2E83 then goto ASSIGN2E87 else goto ASSIGN37E3
        ASSIGN2E87:  preds = [COND2E85]
          real _t2E86#1 = 0.13e1;
          femData:MeshPos callFindPos2E88#2 = findPos1FE4 (_t1F84,x1FC4);
          int intPos2E8A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos2E88);
          tensor[3] refPos2E8C#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos2E88);
          int ilit2E8F#1 = 10;
          int mulRes2E90#10 = IMul(intPos2E8A,ilit2E8F);
          int addRes2E92#1 = mulRes2E90;
          int idx2E93#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E92);
          int ilit2E94#1 = 1;
          int addRes2E95#1 = IAdd(mulRes2E90,ilit2E94);
          int idx2E96#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E95);
          int ilit2E97#1 = 2;
          int addRes2E98#1 = IAdd(mulRes2E90,ilit2E97);
          int idx2E99#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E98);
          int ilit2E9A#1 = 3;
          int addRes2E9B#1 = IAdd(mulRes2E90,ilit2E9A);
          int idx2E9C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9B);
          int ilit2E9D#1 = 4;
          int addRes2E9E#1 = IAdd(mulRes2E90,ilit2E9D);
          int idx2E9F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9E);
          int ilit2EA0#1 = 5;
          int addRes2EA1#1 = IAdd(mulRes2E90,ilit2EA0);
          int idx2EA2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA1);
          int ilit2EA3#1 = 6;
          int addRes2EA4#1 = IAdd(mulRes2E90,ilit2EA3);
          int idx2EA5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA4);
          int ilit2EA6#1 = 7;
          int addRes2EA7#1 = IAdd(mulRes2E90,ilit2EA6);
          int idx2EA8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA7);
          int ilit2EA9#1 = 8;
          int addRes2EAA#1 = IAdd(mulRes2E90,ilit2EA9);
          int idx2EAB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAA);
          int ilit2EAC#1 = 9;
          int addRes2EAD#1 = IAdd(mulRes2E90,ilit2EAC);
          int idx2EAE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAD);
          int ilit2ED3#10 = 1;
          int idx2ED5#1 = idx2E93;
          int mulRes2ED6#1 = IMul(ilit2ED3,idx2ED5);
          int idx2ED7#1 = idx2E96;
          int mulRes2ED8#1 = IMul(ilit2ED3,idx2ED7);
          int idx2EDA#1 = idx2E99;
          int mulRes2EDB#1 = IMul(ilit2ED3,idx2EDA);
          int idx2EDD#1 = idx2E9C;
          int mulRes2EDE#1 = IMul(ilit2ED3,idx2EDD);
          int idx2EE0#1 = idx2E9F;
          int mulRes2EE1#1 = IMul(ilit2ED3,idx2EE0);
          int idx2EE3#1 = idx2EA2;
          int mulRes2EE4#1 = IMul(ilit2ED3,idx2EE3);
          int idx2EE6#1 = idx2EA5;
          int mulRes2EE7#1 = IMul(ilit2ED3,idx2EE6);
          int idx2EE9#1 = idx2EA8;
          int mulRes2EEA#1 = IMul(ilit2ED3,idx2EE9);
          int idx2EEC#1 = idx2EAB;
          int mulRes2EED#1 = IMul(ilit2ED3,idx2EEC);
          int idx2EEF#1 = idx2EAE;
          int mulRes2EF0#1 = IMul(ilit2ED3,idx2EEF);
          real dof2EF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED6);
          real dof2EF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED8);
          real dof2EF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDB);
          real dof2EF4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDE);
          real dof2EF5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE1);
          real dof2EF6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE4);
          real dof2EF7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE7);
          real dof2EF8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EEA);
          real dof2EF9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EED);
          real dof2EFA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EF0);
          tensor[10] dofs2EFB#1 = <tensor[10]>[dof2EF1,dof2EF2,dof2EF3,dof2EF4,dof2EF5,dof2EF6,dof2EF7,dof2EF8,dof2EF9,dof2EFA];
          tensor[10] femDofs2ED2#4 = dofs2EFB;
          real varAcc2F27#2 = VIndex<3,0>(refPos2E8C);
          real varAcc2F28#2 = VIndex<3,1>(refPos2E8C);
          real varAcc2F29#2 = VIndex<3,2>(refPos2E8C);
          real coeff2F2A#3 = 0.2e1;
          real iden2F2B#4 = varAcc2F27;
          real prod22F2C#1 = RMul(iden2F2B,varAcc2F27);
          real one2F2D#13 = 0.1e1;
          real prod2F2E#3 = RMul(one2F2D,one2F2D);
          real prod2F2F#2 = RMul(prod22F2C,prod2F2E);
          real coeff2F30#6 = 0.4e1;
          real iden2F31#3 = varAcc2F28;
          real prod2F32#2 = RMul(iden2F31,one2F2D);
          real prod2F33#2 = RMul(iden2F2B,prod2F32);
          real iden2F34#3 = varAcc2F29;
          real prod2F35#2 = RMul(one2F2D,iden2F34);
          real prod2F36#2 = RMul(iden2F2B,prod2F35);
          real coeff2F37#3 = -0.3e1;
          real prod2F38#3 = RMul(iden2F2B,prod2F2E);
          real prod22F39#1 = RMul(iden2F31,varAcc2F28);
          real prod2F3A#1 = RMul(prod22F39,one2F2D);
          real prod2F3B#2 = RMul(one2F2D,prod2F3A);
          real prod2F3C#1 = RMul(iden2F31,iden2F34);
          real prod2F3D#2 = RMul(one2F2D,prod2F3C);
          real prod2F3E#3 = RMul(one2F2D,prod2F32);
          real prod22F3F#1 = RMul(iden2F34,varAcc2F29);
          real prod2F40#1 = RMul(one2F2D,prod22F3F);
          real prod2F41#2 = RMul(one2F2D,prod2F40);
          real prod2F42#3 = RMul(one2F2D,prod2F35);
          real prod2F43#1 = RMul(one2F2D,prod2F2E);
          real mult2F44#1 = RMul(one2F2D,prod2F43);
          real mult2F45#1 = RMul(coeff2F37,prod2F42);
          real mult2F46#2 = RMul(coeff2F2A,prod2F41);
          real mult2F47#1 = RMul(coeff2F37,prod2F3E);
          real mult2F48#2 = RMul(coeff2F30,prod2F3D);
          real mult2F49#2 = RMul(coeff2F2A,prod2F3B);
          real mult2F4A#1 = RMul(coeff2F37,prod2F38);
          real mult2F4B#2 = RMul(coeff2F30,prod2F36);
          real mult2F4C#2 = RMul(coeff2F30,prod2F33);
          real mult2F4D#2 = RMul(coeff2F2A,prod2F2F);
          real sum2F4E#1 = RAdd(mult2F4C,mult2F4D);
          real sum2F4F#1 = RAdd(mult2F4B,sum2F4E);
          real sum2F50#1 = RAdd(mult2F4A,sum2F4F);
          real sum2F51#1 = RAdd(mult2F49,sum2F50);
          real sum2F52#1 = RAdd(mult2F48,sum2F51);
          real sum2F53#1 = RAdd(mult2F47,sum2F52);
          real sum2F54#1 = RAdd(mult2F46,sum2F53);
          real sum2F55#1 = RAdd(mult2F45,sum2F54);
          real sum2F56#1 = RAdd(mult2F44,sum2F55);
          real intermediate2F57#1 = sum2F56;
          real coeff2F58#3 = -0.1e1;
          real mult2F59#1 = RMul(coeff2F58,prod2F38);
          real sum2F5A#1 = RAdd(mult2F59,mult2F4D);
          real intermediate2F5B#1 = sum2F5A;
          real mult2F5C#1 = RMul(coeff2F58,prod2F3E);
          real sum2F5D#1 = RAdd(mult2F5C,mult2F49);
          real intermediate2F5E#1 = sum2F5D;
          real mult2F5F#1 = RMul(coeff2F58,prod2F42);
          real sum2F60#1 = RAdd(mult2F5F,mult2F46);
          real intermediate2F61#1 = sum2F60;
          real coeff2F62#6 = -0.4e1;
          real mult2F63#1 = RMul(coeff2F30,prod2F42);
          real mult2F64#1 = RMul(coeff2F62,prod2F41);
          real mult2F65#2 = RMul(coeff2F62,prod2F3D);
          real mult2F66#2 = RMul(coeff2F62,prod2F36);
          real sum2F67#1 = RAdd(mult2F65,mult2F66);
          real sum2F68#1 = RAdd(mult2F64,sum2F67);
          real sum2F69#1 = RAdd(mult2F63,sum2F68);
          real intermediate2F6A#1 = sum2F69;
          real mult2F6B#1 = RMul(coeff2F30,prod2F3E);
          real mult2F6C#1 = RMul(coeff2F62,prod2F3B);
          real mult2F6D#2 = RMul(coeff2F62,prod2F33);
          real sum2F6E#1 = RAdd(mult2F6C,mult2F6D);
          real sum2F6F#1 = RAdd(mult2F65,sum2F6E);
          real sum2F70#1 = RAdd(mult2F6B,sum2F6F);
          real intermediate2F71#1 = sum2F70;
          real mult2F72#1 = RMul(coeff2F30,prod2F38);
          real mult2F73#1 = RMul(coeff2F62,prod2F2F);
          real sum2F74#1 = RAdd(mult2F6D,mult2F73);
          real sum2F75#1 = RAdd(mult2F66,sum2F74);
          real sum2F76#1 = RAdd(mult2F72,sum2F75);
          real intermediate2F77#1 = sum2F76;
          tensor[10] intermediateCons2F78#1 = <tensor[10]>[intermediate2F57,intermediate2F5B,intermediate2F5E,intermediate2F61,mult2F48,mult2F4B,mult2F4C,intermediate2F6A,intermediate2F71,intermediate2F77];
          tensor[10] basisResult2F26#1 = intermediateCons2F78;
          real compositionl2FCC#2 = VDot<10>(femDofs2ED2,basisResult2F26);
          real op1_e3_l_232FCF#1 = RSub(compositionl2FCC,isoval1F82);
          real varAcc2FD3#1 = VIndex<3,0>(refPos2E8C);
          real varAcc2FD4#1 = VIndex<3,1>(refPos2E8C);
          real varAcc2FD5#1 = VIndex<3,2>(refPos2E8C);
          real coeff2FD6#4 = 0.4e1;
          real iden2FD7#1 = varAcc2FD3;
          real one2FD8#7 = 0.1e1;
          real prod2FD9#2 = RMul(one2FD8,one2FD8);
          real prod2FDA#3 = RMul(iden2FD7,prod2FD9);
          real iden2FDB#1 = varAcc2FD4;
          real prod2FDC#1 = RMul(iden2FDB,one2FD8);
          real prod2FDD#3 = RMul(one2FD8,prod2FDC);
          real iden2FDE#1 = varAcc2FD5;
          real prod2FDF#1 = RMul(one2FD8,iden2FDE);
          real prod2FE0#3 = RMul(one2FD8,prod2FDF);
          real coeff2FE1#1 = -0.3e1;
          real prod2FE2#3 = RMul(one2FD8,prod2FD9);
          real mult2FE3#1 = RMul(coeff2FE1,prod2FE2);
          real mult2FE4#4 = RMul(coeff2FD6,prod2FE0);
          real mult2FE5#4 = RMul(coeff2FD6,prod2FDD);
          real mult2FE6#4 = RMul(coeff2FD6,prod2FDA);
          real sum2FE7#1 = RAdd(mult2FE5,mult2FE6);
          real sum2FE8#1 = RAdd(mult2FE4,sum2FE7);
          real sum2FE9#3 = RAdd(mult2FE3,sum2FE8);
          real intermediate2FEA#1 = sum2FE9;
          real coeff2FEB#1 = -0.1e1;
          real mult2FEC#3 = RMul(coeff2FEB,prod2FE2);
          real sum2FED#1 = RAdd(mult2FEC,mult2FE6);
          real intermediate2FEE#1 = sum2FED;
          real basisEval2FEF#9 = 0.e0;
          real coeff2FF0#3 = -0.4e1;
          real basisEval2FF1#4 = RMul(coeff2FF0,prod2FE0);
          real basisEval2FF2#4 = RMul(coeff2FF0,prod2FDD);
          real coeff2FF3#3 = -0.8e1;
          real mult2FF4#3 = RMul(coeff2FD6,prod2FE2);
          real mult2FF5#1 = RMul(coeff2FF3,prod2FDA);
          real sum2FF6#1 = RAdd(basisEval2FF2,mult2FF5);
          real sum2FF7#1 = RAdd(basisEval2FF1,sum2FF6);
          real sum2FF8#1 = RAdd(mult2FF4,sum2FF7);
          real intermediate2FF9#1 = sum2FF8;
          real intermediate2FFA#1 = sum2FE9;
          real sum2FFB#1 = RAdd(mult2FEC,mult2FE5);
          real intermediate2FFC#1 = sum2FFB;
          real mult2FFD#1 = RMul(coeff2FF3,prod2FDD);
          real mult2FFE#4 = RMul(coeff2FF0,prod2FDA);
          real sum2FFF#1 = RAdd(mult2FFD,mult2FFE);
          real sum3000#1 = RAdd(basisEval2FF1,sum2FFF);
          real sum3001#1 = RAdd(mult2FF4,sum3000);
          real intermediate3002#1 = sum3001;
          real intermediate3003#1 = sum2FE9;
          real sum3004#1 = RAdd(mult2FEC,mult2FE4);
          real intermediate3005#1 = sum3004;
          real mult3006#1 = RMul(coeff2FF3,prod2FE0);
          real sum3007#1 = RAdd(basisEval2FF2,mult2FFE);
          real sum3008#1 = RAdd(mult3006,sum3007);
          real sum3009#1 = RAdd(mult2FF4,sum3008);
          real intermediate300A#1 = sum3009;
          tensor[10] intermediateCons300B#1 = <tensor[10]>[intermediate2FEA,intermediate2FEE,basisEval2FEF,basisEval2FEF,basisEval2FEF,mult2FE4,mult2FE5,basisEval2FF1,basisEval2FF2,intermediate2FF9];
          tensor[10] intermediateCons300C#1 = <tensor[10]>[intermediate2FFA,basisEval2FEF,intermediate2FFC,basisEval2FEF,mult2FE4,basisEval2FEF,mult2FE6,basisEval2FF1,intermediate3002,mult2FFE];
          tensor[10] intermediateCons300D#1 = <tensor[10]>[intermediate3003,basisEval2FEF,basisEval2FEF,intermediate3005,mult2FE5,mult2FE6,basisEval2FEF,intermediate300A,basisEval2FF2,mult2FFE];
          tensor[10] projParam304D#1 = intermediateCons300B;
          real vdot304E#1 = VDot<10>(femDofs2ED2,projParam304D);
          tensor[10] projParam304F#1 = intermediateCons300C;
          real vdot3050#1 = VDot<10>(femDofs2ED2,projParam304F);
          tensor[10] projParam3051#1 = intermediateCons300D;
          real vdot3052#1 = VDot<10>(femDofs2ED2,projParam3051);
          int ilit305C#1 = 4;
          int mulRes305D#4 = IMul(intPos2E8A,ilit305C);
          int addRes305F#1 = mulRes305D;
          int idx3060#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes305F);
          int ilit3061#1 = 1;
          int addRes3062#1 = IAdd(mulRes305D,ilit3061);
          int idx3063#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3062);
          int ilit3064#1 = 2;
          int addRes3065#1 = IAdd(mulRes305D,ilit3064);
          int idx3066#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3065);
          int ilit3067#1 = 3;
          int addRes3068#1 = IAdd(mulRes305D,ilit3067);
          int idx3069#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3068);
          int ilit307D#4 = 3;
          int idx307E#1 = idx3060;
          int mulRes307F#3 = IMul(ilit307D,idx307E);
          int addRes3080#1 = mulRes307F;
          int ilit3081#4 = 1;
          int addRes3082#1 = IAdd(ilit3081,mulRes307F);
          int ilit3083#4 = 2;
          int addRes3084#1 = IAdd(ilit3083,mulRes307F);
          real dof_load3085#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3080);
          real dof_load3086#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3082);
          real dof_load3087#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3084);
          int idx3089#1 = idx3063;
          int mulRes308A#3 = IMul(ilit307D,idx3089);
          int addRes308B#1 = mulRes308A;
          int addRes308C#1 = IAdd(ilit3081,mulRes308A);
          int addRes308D#1 = IAdd(ilit3083,mulRes308A);
          real dof_load308E#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308B);
          real dof_load308F#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308C);
          real dof_load3090#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308D);
          int idx3092#1 = idx3066;
          int mulRes3093#3 = IMul(ilit307D,idx3092);
          int addRes3094#1 = mulRes3093;
          int addRes3095#1 = IAdd(ilit3081,mulRes3093);
          int addRes3096#1 = IAdd(ilit3083,mulRes3093);
          real dof_load3097#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3094);
          real dof_load3098#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3095);
          real dof_load3099#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3096);
          int idx309B#1 = idx3069;
          int mulRes309C#3 = IMul(ilit307D,idx309B);
          int addRes309D#1 = mulRes309C;
          int addRes309E#1 = IAdd(ilit3081,mulRes309C);
          int addRes309F#1 = IAdd(ilit3083,mulRes309C);
          real dof_load30A0#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309D);
          real dof_load30A1#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309E);
          real dof_load30A2#4 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309F);
          real coeff30D3#1 = -0.1e1;
          real one30D4#4 = 0.1e1;
          real prod30D5#1 = RMul(one30D4,one30D4);
          real prod30D6#2 = RMul(one30D4,prod30D5);
          real basisEval30D7#6 = RMul(coeff30D3,prod30D6);
          real basisEval30D8#6 = RMul(one30D4,prod30D6);
          real basisEval30D9#12 = 0.e0;
          real r30EE#3 = dof_load3085;
          real r30EF#3 = basisEval30D7;
          real r30F0#1 = RMul(r30EE,r30EF);
          real r30F1#3 = dof_load308E;
          real r30F2#3 = basisEval30D8;
          real r30F3#1 = RMul(r30F1,r30F2);
          real r30F4#3 = dof_load3097;
          real r30F5#3 = basisEval30D9;
          real r30F6#1 = RMul(r30F4,r30F5);
          real r30F7#3 = dof_load30A0;
          real r30F8#3 = basisEval30D9;
          real r30F9#1 = RMul(r30F7,r30F8);
          real r30FA#1 = RAdd(r30F0,r30F3);
          real r30FB#1 = RAdd(r30FA,r30F6);
          real r30FC#2 = RAdd(r30FB,r30F9);
          real r30FD#3 = basisEval30D7;
          real r30FE#1 = RMul(r30EE,r30FD);
          real r30FF#3 = basisEval30D9;
          real r3100#1 = RMul(r30F1,r30FF);
          real r3101#3 = basisEval30D8;
          real r3102#1 = RMul(r30F4,r3101);
          real r3103#3 = basisEval30D9;
          real r3104#1 = RMul(r30F7,r3103);
          real r3105#1 = RAdd(r30FE,r3100);
          real r3106#1 = RAdd(r3105,r3102);
          real r3107#2 = RAdd(r3106,r3104);
          real r3108#3 = basisEval30D7;
          real r3109#1 = RMul(r30EE,r3108);
          real r310A#3 = basisEval30D9;
          real r310B#1 = RMul(r30F1,r310A);
          real r310C#3 = basisEval30D9;
          real r310D#1 = RMul(r30F4,r310C);
          real r310E#3 = basisEval30D8;
          real r310F#1 = RMul(r30F7,r310E);
          real r3110#1 = RAdd(r3109,r310B);
          real r3111#1 = RAdd(r3110,r310D);
          real r3112#2 = RAdd(r3111,r310F);
          real r3114#3 = dof_load3086;
          real r3115#1 = RMul(r3114,r30EF);
          real r3116#3 = dof_load308F;
          real r3117#1 = RMul(r3116,r30F2);
          real r3118#3 = dof_load3098;
          real r3119#1 = RMul(r3118,r30F5);
          real r311A#3 = dof_load30A1;
          real r311B#1 = RMul(r311A,r30F8);
          real r311C#1 = RAdd(r3115,r3117);
          real r311D#1 = RAdd(r311C,r3119);
          real r311E#2 = RAdd(r311D,r311B);
          real r311F#1 = RMul(r3114,r30FD);
          real r3120#1 = RMul(r3116,r30FF);
          real r3121#1 = RMul(r3118,r3101);
          real r3122#1 = RMul(r311A,r3103);
          real r3123#1 = RAdd(r311F,r3120);
          real r3124#1 = RAdd(r3123,r3121);
          real r3125#2 = RAdd(r3124,r3122);
          real r3126#1 = RMul(r3114,r3108);
          real r3127#1 = RMul(r3116,r310A);
          real r3128#1 = RMul(r3118,r310C);
          real r3129#1 = RMul(r311A,r310E);
          real r312A#1 = RAdd(r3126,r3127);
          real r312B#1 = RAdd(r312A,r3128);
          real r312C#2 = RAdd(r312B,r3129);
          real r312E#3 = dof_load3087;
          real r312F#1 = RMul(r312E,r30EF);
          real r3130#3 = dof_load3090;
          real r3131#1 = RMul(r3130,r30F2);
          real r3132#3 = dof_load3099;
          real r3133#1 = RMul(r3132,r30F5);
          real r3134#3 = dof_load30A2;
          real r3135#1 = RMul(r3134,r30F8);
          real r3136#1 = RAdd(r312F,r3131);
          real r3137#1 = RAdd(r3136,r3133);
          real r3138#2 = RAdd(r3137,r3135);
          real r3139#1 = RMul(r312E,r30FD);
          real r313A#1 = RMul(r3130,r30FF);
          real r313B#1 = RMul(r3132,r3101);
          real r313C#1 = RMul(r3134,r3103);
          real r313D#1 = RAdd(r3139,r313A);
          real r313E#1 = RAdd(r313D,r313B);
          real r313F#2 = RAdd(r313E,r313C);
          real r3140#1 = RMul(r312E,r3108);
          real r3141#1 = RMul(r3130,r310A);
          real r3142#1 = RMul(r3132,r310C);
          real r3143#1 = RMul(r3134,r310E);
          real r3144#1 = RAdd(r3140,r3141);
          real r3145#1 = RAdd(r3144,r3142);
          real r3146#2 = RAdd(r3145,r3143);
          real realLit31A5#9 = 0.e0;
          real r31A6#3 = r30FC;
          real r31A7#3 = RMul(realLit31A5,r31A6);
          real r31A8#3 = r311E;
          real r31A9#3 = RMul(realLit31A5,r31A8);
          real r31AA#3 = r3138;
          real r31AB#5 = RMul(realLit31A5,r31AA);
          real r31AC#3 = RAdd(r31A7,r31A9);
          real r31AD#3 = RAdd(r31AC,r31AB);
          real r31AE#3 = r3107;
          real r31AF#3 = RMul(realLit31A5,r31AE);
          real r31B0#3 = r3125;
          real r31B1#3 = RMul(realLit31A5,r31B0);
          real r31B2#3 = r313F;
          real r31B3#5 = RMul(realLit31A5,r31B2);
          real r31B4#3 = RAdd(r31AF,r31B1);
          real r31B5#3 = RAdd(r31B4,r31B3);
          real r31B6#3 = r3112;
          real r31B7#3 = RMul(realLit31A5,r31B6);
          real r31B8#3 = r312C;
          real r31B9#3 = RMul(realLit31A5,r31B8);
          real r31BA#3 = r3146;
          real r31BB#5 = RMul(realLit31A5,r31BA);
          real r31BC#3 = RAdd(r31B7,r31B9);
          real r31BD#3 = RAdd(r31BC,r31BB);
          real realLit31BF#9 = -0.1e1;
          real r31C0#1 = RMul(realLit31BF,r31AA);
          real r31C1#1 = RAdd(r31AC,r31C0);
          real r31C2#1 = RMul(realLit31BF,r31B2);
          real r31C3#1 = RAdd(r31B4,r31C2);
          real r31C4#1 = RMul(realLit31BF,r31BA);
          real r31C5#1 = RAdd(r31BC,r31C4);
          real realLit31C7#9 = 0.1e1;
          real r31C8#1 = RMul(realLit31C7,r31A8);
          real r31C9#1 = RAdd(r31A7,r31C8);
          real r31CA#1 = RAdd(r31C9,r31AB);
          real r31CB#1 = RMul(realLit31C7,r31B0);
          real r31CC#1 = RAdd(r31AF,r31CB);
          real r31CD#1 = RAdd(r31CC,r31B3);
          real r31CE#1 = RMul(realLit31C7,r31B8);
          real r31CF#1 = RAdd(r31B7,r31CE);
          real r31D0#1 = RAdd(r31CF,r31BB);
          real r31D3#1 = RMul(realLit31C7,r31AA);
          real r31D4#1 = RAdd(r31AC,r31D3);
          real r31D5#1 = RMul(realLit31C7,r31B2);
          real r31D6#1 = RAdd(r31B4,r31D5);
          real r31D7#1 = RMul(realLit31C7,r31BA);
          real r31D8#1 = RAdd(r31BC,r31D7);
          real r31DA#1 = RMul(realLit31BF,r31A6);
          real r31DB#1 = RAdd(r31DA,r31A9);
          real r31DC#1 = RAdd(r31DB,r31AB);
          real r31DD#1 = RMul(realLit31BF,r31AE);
          real r31DE#1 = RAdd(r31DD,r31B1);
          real r31DF#1 = RAdd(r31DE,r31B3);
          real r31E0#1 = RMul(realLit31BF,r31B6);
          real r31E1#1 = RAdd(r31E0,r31B9);
          real r31E2#1 = RAdd(r31E1,r31BB);
          real r31E5#1 = RMul(realLit31BF,r31A8);
          real r31E6#1 = RAdd(r31A7,r31E5);
          real r31E7#1 = RAdd(r31E6,r31AB);
          real r31E8#1 = RMul(realLit31BF,r31B0);
          real r31E9#1 = RAdd(r31AF,r31E8);
          real r31EA#1 = RAdd(r31E9,r31B3);
          real r31EB#1 = RMul(realLit31BF,r31B8);
          real r31EC#1 = RAdd(r31B7,r31EB);
          real r31ED#1 = RAdd(r31EC,r31BB);
          real r31EF#1 = RMul(realLit31C7,r31A6);
          real r31F0#1 = RAdd(r31EF,r31A9);
          real r31F1#1 = RAdd(r31F0,r31AB);
          real r31F2#1 = RMul(realLit31C7,r31AE);
          real r31F3#1 = RAdd(r31F2,r31B1);
          real r31F4#1 = RAdd(r31F3,r31B3);
          real r31F5#1 = RMul(realLit31C7,r31B6);
          real r31F6#1 = RAdd(r31F5,r31B9);
          real r31F7#1 = RAdd(r31F6,r31BB);
          real r3252#9 = r30FC;
          real r3253#3 = r31AD;
          real r3254#1 = RMul(r3252,r3253);
          real r3255#9 = r311E;
          real r3256#3 = r31D4;
          real r3257#1 = RMul(r3255,r3256);
          real r3258#9 = r3138;
          real r3259#3 = r31E7;
          real r325A#1 = RMul(r3258,r3259);
          real r325B#1 = RAdd(r3254,r3257);
          real r325C#1 = RAdd(r325B,r325A);
          real r325D#3 = r31B5;
          real r325E#1 = RMul(r3252,r325D);
          real r325F#3 = r31D6;
          real r3260#1 = RMul(r3255,r325F);
          real r3261#3 = r31EA;
          real r3262#1 = RMul(r3258,r3261);
          real r3263#1 = RAdd(r325E,r3260);
          real r3264#1 = RAdd(r3263,r3262);
          real r3265#3 = r31BD;
          real r3266#1 = RMul(r3252,r3265);
          real r3267#3 = r31D8;
          real r3268#1 = RMul(r3255,r3267);
          real r3269#3 = r31ED;
          real r326A#1 = RMul(r3258,r3269);
          real r326B#1 = RAdd(r3266,r3268);
          real r326C#1 = RAdd(r326B,r326A);
          real r326E#3 = r31C1;
          real r326F#1 = RMul(r3252,r326E);
          real r3270#3 = r31AD;
          real r3271#1 = RMul(r3255,r3270);
          real r3272#3 = r31F1;
          real r3273#1 = RMul(r3258,r3272);
          real r3274#1 = RAdd(r326F,r3271);
          real r3275#1 = RAdd(r3274,r3273);
          real r3276#3 = r31C3;
          real r3277#1 = RMul(r3252,r3276);
          real r3278#3 = r31B5;
          real r3279#1 = RMul(r3255,r3278);
          real r327A#3 = r31F4;
          real r327B#1 = RMul(r3258,r327A);
          real r327C#1 = RAdd(r3277,r3279);
          real r327D#1 = RAdd(r327C,r327B);
          real r327E#3 = r31C5;
          real r327F#1 = RMul(r3252,r327E);
          real r3280#3 = r31BD;
          real r3281#1 = RMul(r3255,r3280);
          real r3282#3 = r31F7;
          real r3283#1 = RMul(r3258,r3282);
          real r3284#1 = RAdd(r327F,r3281);
          real r3285#1 = RAdd(r3284,r3283);
          real r3287#3 = r31CA;
          real r3288#1 = RMul(r3252,r3287);
          real r3289#3 = r31DC;
          real r328A#1 = RMul(r3255,r3289);
          real r328B#3 = r31AD;
          real r328C#1 = RMul(r3258,r328B);
          real r328D#1 = RAdd(r3288,r328A);
          real r328E#1 = RAdd(r328D,r328C);
          real r328F#3 = r31CD;
          real r3290#1 = RMul(r3252,r328F);
          real r3291#3 = r31DF;
          real r3292#1 = RMul(r3255,r3291);
          real r3293#3 = r31B5;
          real r3294#1 = RMul(r3258,r3293);
          real r3295#1 = RAdd(r3290,r3292);
          real r3296#1 = RAdd(r3295,r3294);
          real r3297#3 = r31D0;
          real r3298#1 = RMul(r3252,r3297);
          real r3299#3 = r31E2;
          real r329A#1 = RMul(r3255,r3299);
          real r329B#3 = r31BD;
          real r329C#1 = RMul(r3258,r329B);
          real r329D#1 = RAdd(r3298,r329A);
          real r329E#1 = RAdd(r329D,r329C);
          real r32A1#9 = r3107;
          real r32A2#1 = RMul(r32A1,r3253);
          real r32A3#9 = r3125;
          real r32A4#1 = RMul(r32A3,r3256);
          real r32A5#9 = r313F;
          real r32A6#1 = RMul(r32A5,r3259);
          real r32A7#1 = RAdd(r32A2,r32A4);
          real r32A8#1 = RAdd(r32A7,r32A6);
          real r32A9#1 = RMul(r32A1,r325D);
          real r32AA#1 = RMul(r32A3,r325F);
          real r32AB#1 = RMul(r32A5,r3261);
          real r32AC#1 = RAdd(r32A9,r32AA);
          real r32AD#1 = RAdd(r32AC,r32AB);
          real r32AE#1 = RMul(r32A1,r3265);
          real r32AF#1 = RMul(r32A3,r3267);
          real r32B0#1 = RMul(r32A5,r3269);
          real r32B1#1 = RAdd(r32AE,r32AF);
          real r32B2#1 = RAdd(r32B1,r32B0);
          real r32B4#1 = RMul(r32A1,r326E);
          real r32B5#1 = RMul(r32A3,r3270);
          real r32B6#1 = RMul(r32A5,r3272);
          real r32B7#1 = RAdd(r32B4,r32B5);
          real r32B8#1 = RAdd(r32B7,r32B6);
          real r32B9#1 = RMul(r32A1,r3276);
          real r32BA#1 = RMul(r32A3,r3278);
          real r32BB#1 = RMul(r32A5,r327A);
          real r32BC#1 = RAdd(r32B9,r32BA);
          real r32BD#1 = RAdd(r32BC,r32BB);
          real r32BE#1 = RMul(r32A1,r327E);
          real r32BF#1 = RMul(r32A3,r3280);
          real r32C0#1 = RMul(r32A5,r3282);
          real r32C1#1 = RAdd(r32BE,r32BF);
          real r32C2#1 = RAdd(r32C1,r32C0);
          real r32C4#1 = RMul(r32A1,r3287);
          real r32C5#1 = RMul(r32A3,r3289);
          real r32C6#1 = RMul(r32A5,r328B);
          real r32C7#1 = RAdd(r32C4,r32C5);
          real r32C8#1 = RAdd(r32C7,r32C6);
          real r32C9#1 = RMul(r32A1,r328F);
          real r32CA#1 = RMul(r32A3,r3291);
          real r32CB#1 = RMul(r32A5,r3293);
          real r32CC#1 = RAdd(r32C9,r32CA);
          real r32CD#1 = RAdd(r32CC,r32CB);
          real r32CE#1 = RMul(r32A1,r3297);
          real r32CF#1 = RMul(r32A3,r3299);
          real r32D0#1 = RMul(r32A5,r329B);
          real r32D1#1 = RAdd(r32CE,r32CF);
          real r32D2#1 = RAdd(r32D1,r32D0);
          real r32D5#9 = r3112;
          real r32D6#1 = RMul(r32D5,r3253);
          real r32D7#9 = r312C;
          real r32D8#1 = RMul(r32D7,r3256);
          real r32D9#9 = r3146;
          real r32DA#1 = RMul(r32D9,r3259);
          real r32DB#1 = RAdd(r32D6,r32D8);
          real r32DC#1 = RAdd(r32DB,r32DA);
          real r32DD#1 = RMul(r32D5,r325D);
          real r32DE#1 = RMul(r32D7,r325F);
          real r32DF#1 = RMul(r32D9,r3261);
          real r32E0#1 = RAdd(r32DD,r32DE);
          real r32E1#1 = RAdd(r32E0,r32DF);
          real r32E2#1 = RMul(r32D5,r3265);
          real r32E3#1 = RMul(r32D7,r3267);
          real r32E4#1 = RMul(r32D9,r3269);
          real r32E5#1 = RAdd(r32E2,r32E3);
          real r32E6#1 = RAdd(r32E5,r32E4);
          real r32E8#1 = RMul(r32D5,r326E);
          real r32E9#1 = RMul(r32D7,r3270);
          real r32EA#1 = RMul(r32D9,r3272);
          real r32EB#1 = RAdd(r32E8,r32E9);
          real r32EC#1 = RAdd(r32EB,r32EA);
          real r32ED#1 = RMul(r32D5,r3276);
          real r32EE#1 = RMul(r32D7,r3278);
          real r32EF#1 = RMul(r32D9,r327A);
          real r32F0#1 = RAdd(r32ED,r32EE);
          real r32F1#1 = RAdd(r32F0,r32EF);
          real r32F2#1 = RMul(r32D5,r327E);
          real r32F3#1 = RMul(r32D7,r3280);
          real r32F4#1 = RMul(r32D9,r3282);
          real r32F5#1 = RAdd(r32F2,r32F3);
          real r32F6#1 = RAdd(r32F5,r32F4);
          real r32F8#1 = RMul(r32D5,r3287);
          real r32F9#1 = RMul(r32D7,r3289);
          real r32FA#1 = RMul(r32D9,r328B);
          real r32FB#1 = RAdd(r32F8,r32F9);
          real r32FC#1 = RAdd(r32FB,r32FA);
          real r32FD#1 = RMul(r32D5,r328F);
          real r32FE#1 = RMul(r32D7,r3291);
          real r32FF#1 = RMul(r32D9,r3293);
          real r3300#1 = RAdd(r32FD,r32FE);
          real r3301#1 = RAdd(r3300,r32FF);
          real r3302#1 = RMul(r32D5,r3297);
          real r3303#1 = RMul(r32D7,r3299);
          real r3304#1 = RMul(r32D9,r329B);
          real r3305#1 = RAdd(r3302,r3303);
          real r3306#1 = RAdd(r3305,r3304);
          real r33C3#1 = dof_load3085;
          real r33C4#3 = basisEval30D7;
          real r33C5#1 = RMul(r33C3,r33C4);
          real r33C6#1 = dof_load308E;
          real r33C7#3 = basisEval30D8;
          real r33C8#1 = RMul(r33C6,r33C7);
          real r33C9#1 = dof_load3097;
          real r33CA#3 = basisEval30D9;
          real r33CB#1 = RMul(r33C9,r33CA);
          real r33CC#1 = dof_load30A0;
          real r33CD#3 = basisEval30D9;
          real r33CE#1 = RMul(r33CC,r33CD);
          real r33CF#1 = RAdd(r33C5,r33C8);
          real r33D0#1 = RAdd(r33CF,r33CB);
          real r33D1#1 = RAdd(r33D0,r33CE);
          real r33D2#1 = dof_load3086;
          real r33D3#1 = RMul(r33D2,r33C4);
          real r33D4#1 = dof_load308F;
          real r33D5#1 = RMul(r33D4,r33C7);
          real r33D6#1 = dof_load3098;
          real r33D7#1 = RMul(r33D6,r33CA);
          real r33D8#1 = dof_load30A1;
          real r33D9#1 = RMul(r33D8,r33CD);
          real r33DA#1 = RAdd(r33D3,r33D5);
          real r33DB#1 = RAdd(r33DA,r33D7);
          real r33DC#1 = RAdd(r33DB,r33D9);
          real r33DD#1 = dof_load3087;
          real r33DE#1 = RMul(r33DD,r33C4);
          real r33DF#1 = dof_load3090;
          real r33E0#1 = RMul(r33DF,r33C7);
          real r33E1#1 = dof_load3099;
          real r33E2#1 = RMul(r33E1,r33CA);
          real r33E3#1 = dof_load30A2;
          real r33E4#1 = RMul(r33E3,r33CD);
          real r33E5#1 = RAdd(r33DE,r33E0);
          real r33E6#1 = RAdd(r33E5,r33E2);
          real r33E7#1 = RAdd(r33E6,r33E4);
          tensor[3] probe_l_2933C2#1 = <tensor[3]>[r33D1,r33DC,r33E7];
          real r3410#1 = dof_load3085;
          real r3411#3 = basisEval30D7;
          real r3412#1 = RMul(r3410,r3411);
          real r3413#1 = dof_load308E;
          real r3414#3 = basisEval30D9;
          real r3415#1 = RMul(r3413,r3414);
          real r3416#1 = dof_load3097;
          real r3417#3 = basisEval30D8;
          real r3418#1 = RMul(r3416,r3417);
          real r3419#1 = dof_load30A0;
          real r341A#3 = basisEval30D9;
          real r341B#1 = RMul(r3419,r341A);
          real r341C#1 = RAdd(r3412,r3415);
          real r341D#1 = RAdd(r341C,r3418);
          real r341E#1 = RAdd(r341D,r341B);
          real r341F#1 = dof_load3086;
          real r3420#1 = RMul(r341F,r3411);
          real r3421#1 = dof_load308F;
          real r3422#1 = RMul(r3421,r3414);
          real r3423#1 = dof_load3098;
          real r3424#1 = RMul(r3423,r3417);
          real r3425#1 = dof_load30A1;
          real r3426#1 = RMul(r3425,r341A);
          real r3427#1 = RAdd(r3420,r3422);
          real r3428#1 = RAdd(r3427,r3424);
          real r3429#1 = RAdd(r3428,r3426);
          real r342A#1 = dof_load3087;
          real r342B#1 = RMul(r342A,r3411);
          real r342C#1 = dof_load3090;
          real r342D#1 = RMul(r342C,r3414);
          real r342E#1 = dof_load3099;
          real r342F#1 = RMul(r342E,r3417);
          real r3430#1 = dof_load30A2;
          real r3431#1 = RMul(r3430,r341A);
          real r3432#1 = RAdd(r342B,r342D);
          real r3433#1 = RAdd(r3432,r342F);
          real r3434#1 = RAdd(r3433,r3431);
          tensor[3] probe_l_30340F#3 = <tensor[3]>[r341E,r3429,r3434];
          real r345D#1 = dof_load3085;
          real r345E#3 = basisEval30D7;
          real r345F#1 = RMul(r345D,r345E);
          real r3460#1 = dof_load308E;
          real r3461#3 = basisEval30D9;
          real r3462#1 = RMul(r3460,r3461);
          real r3463#1 = dof_load3097;
          real r3464#3 = basisEval30D9;
          real r3465#1 = RMul(r3463,r3464);
          real r3466#1 = dof_load30A0;
          real r3467#3 = basisEval30D8;
          real r3468#1 = RMul(r3466,r3467);
          real r3469#1 = RAdd(r345F,r3462);
          real r346A#1 = RAdd(r3469,r3465);
          real r346B#1 = RAdd(r346A,r3468);
          real r346C#1 = dof_load3086;
          real r346D#1 = RMul(r346C,r345E);
          real r346E#1 = dof_load308F;
          real r346F#1 = RMul(r346E,r3461);
          real r3470#1 = dof_load3098;
          real r3471#1 = RMul(r3470,r3464);
          real r3472#1 = dof_load30A1;
          real r3473#1 = RMul(r3472,r3467);
          real r3474#1 = RAdd(r346D,r346F);
          real r3475#1 = RAdd(r3474,r3471);
          real r3476#1 = RAdd(r3475,r3473);
          real r3477#1 = dof_load3087;
          real r3478#1 = RMul(r3477,r345E);
          real r3479#1 = dof_load3090;
          real r347A#1 = RMul(r3479,r3461);
          real r347B#1 = dof_load3099;
          real r347C#1 = RMul(r347B,r3464);
          real r347D#1 = dof_load30A2;
          real r347E#1 = RMul(r347D,r3467);
          real r347F#1 = RAdd(r3478,r347A);
          real r3480#1 = RAdd(r347F,r347C);
          real r3481#1 = RAdd(r3480,r347E);
          real realLit34AA#3 = 0.e0;
          real r34AB#3 = r346B;
          real r34AC#3 = RMul(realLit34AA,r34AB);
          real r34AD#3 = r3476;
          real r34AE#3 = RMul(realLit34AA,r34AD);
          real r34AF#3 = r3481;
          real r34B0#5 = RMul(realLit34AA,r34AF);
          real r34B1#3 = RAdd(r34AC,r34AE);
          real r34B2#3 = RAdd(r34B1,r34B0);
          real realLit34B3#3 = 0.1e1;
          real r34B4#1 = RMul(realLit34B3,r34AF);
          real r34B5#1 = RAdd(r34B1,r34B4);
          real realLit34B6#3 = -0.1e1;
          real r34B7#1 = RMul(realLit34B6,r34AD);
          real r34B8#1 = RAdd(r34AC,r34B7);
          real r34B9#1 = RAdd(r34B8,r34B0);
          tensor[3] tensor34BA#1 = <tensor[3]>[r34B2,r34B5,r34B9];
          real r34BB#1 = RMul(realLit34B6,r34AF);
          real r34BC#1 = RAdd(r34B1,r34BB);
          real r34BD#1 = RMul(realLit34B3,r34AB);
          real r34BE#1 = RAdd(r34BD,r34AE);
          real r34BF#1 = RAdd(r34BE,r34B0);
          tensor[3] tensor34C0#1 = <tensor[3]>[r34BC,r34B2,r34BF];
          real r34C1#1 = RMul(realLit34B3,r34AD);
          real r34C2#1 = RAdd(r34AC,r34C1);
          real r34C3#1 = RAdd(r34C2,r34B0);
          real r34C4#1 = RMul(realLit34B6,r34AB);
          real r34C5#1 = RAdd(r34C4,r34AE);
          real r34C6#1 = RAdd(r34C5,r34B0);
          tensor[3] tensor34C7#1 = <tensor[3]>[r34C3,r34C6,r34B2];
          tensor[3] projParam34E9#1 = tensor34BA;
          real vdot34EA#1 = VDot<3>(probe_l_30340F,projParam34E9);
          tensor[3] projParam34EB#1 = tensor34C0;
          real vdot34EC#1 = VDot<3>(probe_l_30340F,projParam34EB);
          tensor[3] projParam34ED#1 = tensor34C7;
          real vdot34EE#1 = VDot<3>(probe_l_30340F,projParam34ED);
          tensor[3] op1_e3_l_3334E8#1 = <tensor[3]>[vdot34EA,vdot34EC,vdot34EE];
          real op1_e3_l_3434F7#1 = VDot<3>(probe_l_2933C2,op1_e3_l_3334E8);
          real realLit34FB#27 = 0.e0;
          real r34FC#1 = r325C;
          real r34FD#2 = RMul(realLit34FB,r34FC);
          real r34FE#2 = r3264;
          real r34FF#1 = RMul(realLit34FB,r34FE);
          real r3500#2 = r326C;
          real r3501#2 = RMul(realLit34FB,r3500);
          real r3502#2 = r32A8;
          real r3503#2 = RMul(realLit34FB,r3502);
          real r3504#1 = r32AD;
          real r3505#3 = RMul(realLit34FB,r3504);
          real realLit3506#9 = 0.1e1;
          real r3507#2 = r32B2;
          real r3508#1 = RMul(realLit3506,r3507);
          real r3509#2 = r32DC;
          real r350A#2 = RMul(realLit34FB,r3509);
          real realLit350B#9 = -0.1e1;
          real r350C#2 = r32E1;
          real r350D#1 = RMul(realLit350B,r350C);
          real r350E#1 = r32E6;
          real r350F#3 = RMul(realLit34FB,r350E);
          real r3510#2 = RAdd(r34FD,r34FF);
          real r3511#1 = RAdd(r3510,r3501);
          real r3512#1 = RAdd(r3511,r3503);
          real r3513#1 = RAdd(r3512,r3505);
          real r3514#1 = RAdd(r3513,r3508);
          real r3515#1 = RAdd(r3514,r350A);
          real r3516#1 = RAdd(r3515,r350D);
          real r3517#1 = RAdd(r3516,r350F);
          real r3518#1 = r3275;
          real r3519#2 = RMul(realLit34FB,r3518);
          real r351A#2 = r327D;
          real r351B#1 = RMul(realLit34FB,r351A);
          real r351C#2 = r3285;
          real r351D#2 = RMul(realLit34FB,r351C);
          real r351E#2 = r32B8;
          real r351F#2 = RMul(realLit34FB,r351E);
          real r3520#1 = r32BD;
          real r3521#3 = RMul(realLit34FB,r3520);
          real r3522#2 = r32C2;
          real r3523#1 = RMul(realLit3506,r3522);
          real r3524#2 = r32EC;
          real r3525#2 = RMul(realLit34FB,r3524);
          real r3526#2 = r32F1;
          real r3527#1 = RMul(realLit350B,r3526);
          real r3528#1 = r32F6;
          real r3529#3 = RMul(realLit34FB,r3528);
          real r352A#2 = RAdd(r3519,r351B);
          real r352B#1 = RAdd(r352A,r351D);
          real r352C#1 = RAdd(r352B,r351F);
          real r352D#1 = RAdd(r352C,r3521);
          real r352E#1 = RAdd(r352D,r3523);
          real r352F#1 = RAdd(r352E,r3525);
          real r3530#1 = RAdd(r352F,r3527);
          real r3531#1 = RAdd(r3530,r3529);
          real r3532#1 = r328E;
          real r3533#2 = RMul(realLit34FB,r3532);
          real r3534#2 = r3296;
          real r3535#1 = RMul(realLit34FB,r3534);
          real r3536#2 = r329E;
          real r3537#2 = RMul(realLit34FB,r3536);
          real r3538#2 = r32C8;
          real r3539#2 = RMul(realLit34FB,r3538);
          real r353A#1 = r32CD;
          real r353B#3 = RMul(realLit34FB,r353A);
          real r353C#2 = r32D2;
          real r353D#1 = RMul(realLit3506,r353C);
          real r353E#2 = r32FC;
          real r353F#2 = RMul(realLit34FB,r353E);
          real r3540#2 = r3301;
          real r3541#1 = RMul(realLit350B,r3540);
          real r3542#1 = r3306;
          real r3543#3 = RMul(realLit34FB,r3542);
          real r3544#2 = RAdd(r3533,r3535);
          real r3545#1 = RAdd(r3544,r3537);
          real r3546#1 = RAdd(r3545,r3539);
          real r3547#1 = RAdd(r3546,r353B);
          real r3548#1 = RAdd(r3547,r353D);
          real r3549#1 = RAdd(r3548,r353F);
          real r354A#1 = RAdd(r3549,r3541);
          real r354B#1 = RAdd(r354A,r3543);
          real r354D#1 = RMul(realLit350B,r3500);
          real r354E#2 = RMul(realLit34FB,r3507);
          real r354F#1 = RMul(realLit3506,r3509);
          real r3550#2 = RMul(realLit34FB,r350C);
          real r3551#1 = RAdd(r3510,r354D);
          real r3552#1 = RAdd(r3551,r3503);
          real r3553#1 = RAdd(r3552,r3505);
          real r3554#1 = RAdd(r3553,r354E);
          real r3555#1 = RAdd(r3554,r354F);
          real r3556#1 = RAdd(r3555,r3550);
          real r3557#1 = RAdd(r3556,r350F);
          real r3558#1 = RMul(realLit350B,r351C);
          real r3559#2 = RMul(realLit34FB,r3522);
          real r355A#1 = RMul(realLit3506,r3524);
          real r355B#2 = RMul(realLit34FB,r3526);
          real r355C#1 = RAdd(r352A,r3558);
          real r355D#1 = RAdd(r355C,r351F);
          real r355E#1 = RAdd(r355D,r3521);
          real r355F#1 = RAdd(r355E,r3559);
          real r3560#1 = RAdd(r355F,r355A);
          real r3561#1 = RAdd(r3560,r355B);
          real r3562#1 = RAdd(r3561,r3529);
          real r3563#1 = RMul(realLit350B,r3536);
          real r3564#2 = RMul(realLit34FB,r353C);
          real r3565#1 = RMul(realLit3506,r353E);
          real r3566#2 = RMul(realLit34FB,r3540);
          real r3567#1 = RAdd(r3544,r3563);
          real r3568#1 = RAdd(r3567,r3539);
          real r3569#1 = RAdd(r3568,r353B);
          real r356A#1 = RAdd(r3569,r3564);
          real r356B#1 = RAdd(r356A,r3565);
          real r356C#1 = RAdd(r356B,r3566);
          real r356D#1 = RAdd(r356C,r3543);
          real r356F#1 = RMul(realLit3506,r34FE);
          real r3570#1 = RMul(realLit350B,r3502);
          real r3571#1 = RAdd(r34FD,r356F);
          real r3572#1 = RAdd(r3571,r3501);
          real r3573#1 = RAdd(r3572,r3570);
          real r3574#1 = RAdd(r3573,r3505);
          real r3575#1 = RAdd(r3574,r354E);
          real r3576#1 = RAdd(r3575,r350A);
          real r3577#1 = RAdd(r3576,r3550);
          real r3578#1 = RAdd(r3577,r350F);
          real r3579#1 = RMul(realLit3506,r351A);
          real r357A#1 = RMul(realLit350B,r351E);
          real r357B#1 = RAdd(r3519,r3579);
          real r357C#1 = RAdd(r357B,r351D);
          real r357D#1 = RAdd(r357C,r357A);
          real r357E#1 = RAdd(r357D,r3521);
          real r357F#1 = RAdd(r357E,r3559);
          real r3580#1 = RAdd(r357F,r3525);
          real r3581#1 = RAdd(r3580,r355B);
          real r3582#1 = RAdd(r3581,r3529);
          real r3583#1 = RMul(realLit3506,r3534);
          real r3584#1 = RMul(realLit350B,r3538);
          real r3585#1 = RAdd(r3533,r3583);
          real r3586#1 = RAdd(r3585,r3537);
          real r3587#1 = RAdd(r3586,r3584);
          real r3588#1 = RAdd(r3587,r353B);
          real r3589#1 = RAdd(r3588,r3564);
          real r358A#1 = RAdd(r3589,r353F);
          real r358B#1 = RAdd(r358A,r3566);
          real r358C#1 = RAdd(r358B,r3543);
          real realLit3624#1 = 0.2e1;
          real op1_e3_l_363623#9 = RMul(realLit3624,op1_e3_l_3434F7);
          real r3629#1 = r3517;
          real r362A#1 = RDiv(r3629,op1_e3_l_363623);
          real r362B#1 = r3531;
          real r362C#1 = RDiv(r362B,op1_e3_l_363623);
          real r362D#1 = r354B;
          real r362E#1 = RDiv(r362D,op1_e3_l_363623);
          real r3630#1 = r3557;
          real r3631#1 = RDiv(r3630,op1_e3_l_363623);
          real r3632#1 = r3562;
          real r3633#1 = RDiv(r3632,op1_e3_l_363623);
          real r3634#1 = r356D;
          real r3635#1 = RDiv(r3634,op1_e3_l_363623);
          real r3637#1 = r3578;
          real r3638#1 = RDiv(r3637,op1_e3_l_363623);
          real r3639#1 = r3582;
          real r363A#1 = RDiv(r3639,op1_e3_l_363623);
          real r363B#1 = r358C;
          real r363C#1 = RDiv(r363B,op1_e3_l_363623);
          real r3656#3 = vdot304E;
          real r3657#1 = r362A;
          real r3658#1 = RMul(r3656,r3657);
          real r3659#3 = vdot3050;
          real r365A#1 = r3631;
          real r365B#1 = RMul(r3659,r365A);
          real r365C#3 = vdot3052;
          real r365D#1 = r3638;
          real r365E#1 = RMul(r365C,r365D);
          real r365F#1 = RAdd(r3658,r365B);
          real r3660#1 = RAdd(r365F,r365E);
          real r3661#1 = r362C;
          real r3662#1 = RMul(r3656,r3661);
          real r3663#1 = r3633;
          real r3664#1 = RMul(r3659,r3663);
          real r3665#1 = r363A;
          real r3666#1 = RMul(r365C,r3665);
          real r3667#1 = RAdd(r3662,r3664);
          real r3668#1 = RAdd(r3667,r3666);
          real r3669#1 = r362E;
          real r366A#1 = RMul(r3656,r3669);
          real r366B#1 = r3635;
          real r366C#1 = RMul(r3659,r366B);
          real r366D#1 = r363C;
          real r366E#1 = RMul(r365C,r366D);
          real r366F#1 = RAdd(r366A,r366C);
          real r3670#1 = RAdd(r366F,r366E);
          tensor[3] op1_e3_l_383655#1 = <tensor[3]>[r3660,r3668,r3670];
          tensor[3] op1_e3_l_54368E#3 = VNeg<3>(op1_e3_l_383655);
          real op1_e3_l_563691#1 = VDot<3>(op1_e3_l_54368E,op1_e3_l_54368E);
          real op1_e3_l_573694#2 = Sqrt(op1_e3_l_563691);
          real op1_e3_l_583697#1 = Abs<real>(op1_e3_l_232FCF);
          real op1_e3_l_59369A#1 = RMul(thick1F90,op1_e3_l_573694);
          real op1_e3_l_60369D#1 = RDiv(op1_e3_l_583697,op1_e3_l_59369A);
          real op1_e3_l_6136A0#1 = RSub(_t1FCE,op1_e3_l_60369D);
          real op1_e3_l_6236A3#2 = RMul(_t2E86,op1_e3_l_6136A0);
          real op1_e3_l_6336A6#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real a36A9#1 = RMul(_t1FCE,op1_e3_l_6336A6);
          bool _t36AC#1 = GT<real>(a36A9,_t1FC7);
          if _t36AC then goto ASSIGN36B1 else goto JOIN3780
        ASSIGN36B1:  preds = [COND36AE]
          real op1_e3_l_6436AF#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real op1_e3_l_6536B2#1 = RMul(_t1FCE,op1_e3_l_6436AF);
          real _t36B5#1 = RSub(_t1FCE,op1_e3_l_6536B2);
          real op1_e3_l_336B8#1 = VDot<3>(rayVec1FAA,rayVec1FAA);
          real op1_e3_l_436BB#1 = Sqrt(op1_e3_l_336B8);
          real op1_e3_l_536BE#1 = RMul(rayStep1F9A,op1_e3_l_436BB);
          real _t36C1#1 = RDiv(op1_e3_l_536BE,refStep1F98);
          real _t36C4#1 = MathFn<pow>(_t36B5,_t36C1);
          real _t36C6#2 = 0.11e1;
          real _t36C8#1 = 0.7e0;
          real realLit36CB#1 = 0.1e1;
          real op1_e3_l_6736CA#1 = RDiv(realLit36CB,op1_e3_l_573694);
          real op1_e3_l_6836CF#1 = VDot<3>(op1_e3_l_54368E,light1FA6);
          real _t36D2#1 = RMul(op1_e3_l_6736CA,op1_e3_l_6836CF);
          real shade36D5#1 = Max<real>(_t1FC7,_t36D2);
          real _t36D7#1 = compositionl2FCC;
          real op1_e3_l_1536D9#1 = RSub(rayN1FA8,camNear1F94);
          real op1_e3_l_1636DC#1 = RSub(camFar1F96,camNear1F94);
          real op1_e3_l_1736DF#1 = RDiv(op1_e3_l_1536D9,op1_e3_l_1636DC);
          real op1_e3_l_1836E2#1 = RSub(_t36C8,_t36C6);
          real op1_e3_l_1936E5#1 = RMul(op1_e3_l_1736DF,op1_e3_l_1836E2);
          real op1_e3_l_2036E8#1 = RMul(phongKd1F9E,shade36D5);
          real Mtransform36EB#1 = Transform<IMAGE1D<double[3]>>(I1F80);
          real MxPos36ED#1 = RMul(Mtransform36EB,_t36D7);
          real Ttranslate36F0#1 = Translate<IMAGE1D<double[3]>>(I1F80);
          real imgPos36F2#2 = RAdd(MxPos36ED,Ttranslate36F0);
          real nd36F5#2 = Floor<1>(imgPos36F2);
          real f36F7#2 = RSub(imgPos36F2,nd36F5);
          int n36FA#1 = RealToInt<1>(nd36F5);
          int idx36FC#5 = n36FA;
          bool isInside36FE#1 = IndexInside<IMAGE1D<double[3]>,2>(idx36FC,I1F80);
          if isInside36FE then goto ASSIGN3AAB else goto ASSIGN3AAF
        ASSIGN3AAB:  preds = [COND3700]
          int addRes3703#1 = idx36FC;
          int stride3704#2 = 3;
          int offp3705#3 = IMul(stride3704,addRes3703);
          real v0_3706#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3705);
          int ilit3707#3 = 1;
          int addRes3708#1 = IAdd(idx36FC,ilit3707);
          int offp3709#3 = IMul(stride3704,addRes3708);
          real v1_370A#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3709);
          tensor[2] v_370B#1 = <tensor[2]>[v0_3706,v1_370A];
          int offp370C#1 = IAdd(offp3705,ilit3707);
          real v0_370D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370C);
          int offp370E#1 = IAdd(offp3709,ilit3707);
          real v1_370F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370E);
          tensor[2] v_3710#1 = <tensor[2]>[v0_370D,v1_370F];
          int offset3711#2 = 2;
          int offp3712#1 = IAdd(offp3705,offset3711);
          real v0_3713#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3712);
          int offp3714#1 = IAdd(offp3709,offset3711);
          real v1_3715#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3714);
          tensor[2] v_3716#1 = <tensor[2]>[v0_3713,v1_3715];
          tensor[3,2] voxels3717#1 = <tensor[3,2]>[v_370B,v_3710,v_3716];
          tensor[3,2] ldvox3701#1 = voxels3717;
          goto JOIN3731
        JOIN3731:  preds = [ASSIGN372E,ASSIGN37E1]
          tensor[3,2] ldvox372F#3 = phi(ldvox3701,ldvox3730)
          real rlit3733#1 = 0.1e1;
          real idx3734#1 = RSub(f36F7,rlit3733);
          tensor[2] kernX_3732#1 = <tensor[2]>[f36F7,idx3734];
          real _f373D#1 = 0.1e1;
          real _f373E#1 = 0.1e1;
          tensor[2] a03739#1 = <tensor[2]>[_f373D,_f373E];
          real _f373B#1 = -0.1e1;
          real _f373C#1 = 0.1e1;
          tensor[2] a1373A#1 = <tensor[2]>[_f373B,_f373C];
          tensor[2] prod1373F#1 = VMul<2>(kernX_3732,a1373A);
          tensor[2] kevalX_d0_3738#3 = VAdd<2>(a03739,prod1373F);
          tensor[2] projIx3749#1 = ProjectLast<tensor[3,2],[0]>(ldvox372F);
          real vdot374A#1 = VDot<2>(projIx3749,kevalX_d0_3738);
          tensor[2] projIx374B#1 = ProjectLast<tensor[3,2],[1]>(ldvox372F);
          real vdot374C#1 = VDot<2>(projIx374B,kevalX_d0_3738);
          tensor[2] projIx374D#1 = ProjectLast<tensor[3,2],[2]>(ldvox372F);
          real vdot374E#1 = VDot<2>(projIx374D,kevalX_d0_3738);
          real op1_e3_l_223757#2 = RSub(_t1FCE,_t36C4);
          real op1_e3_l_23375A#1 = RAdd(_t36C6,op1_e3_l_1936E5);
          real op1_e3_l_24375D#1 = RAdd(phongKa1F9C,op1_e3_l_2036E8);
          real r3761#1 = vdot374A;
          real r3762#1 = RMul(transp1FAC,op1_e3_l_223757);
          real r3763#1 = RMul(r3762,op1_e3_l_23375A);
          real r3764#3 = RMul(r3763,op1_e3_l_24375D);
          real r3765#1 = RMul(r3764,r3761);
          real r3766#1 = vdot374C;
          real r3767#1 = RMul(r3764,r3766);
          real r3768#1 = vdot374E;
          real r3769#1 = RMul(r3764,r3768);
          tensor[3] op1_e3_l_253760#1 = <tensor[3]>[r3765,r3767,r3769];
          tensor[3] rgb3775#1 = VAdd<3>(rgb1FAE,op1_e3_l_253760);
          real op1_e3_l_53778#1 = RSub(_t1FCE,op1_e3_l_223757);
          real transp377B#1 = RMul(transp1FAC,op1_e3_l_53778);
          goto JOIN3780
        JOIN3780:  preds = [ASSIGN377D,COND36AE]
          tensor[3] rgb377E#1 = phi(rgb3775,rgb1FAE)
          real transp377F#1 = phi(transp377B,transp1FAC)
          string _t3781#1 = "yay!\n";
          Print<[string]>(_t3781);
          goto JOIN3786
        JOIN3786:  preds = [MASSIGN3783,MASSIGN37E7]
          tensor[3] rgb3784#1 = phi(rgb377E,rgb1FAE)
          real transp3785#1 = phi(transp377F,transp1FAC)
          goto JOIN3789
        JOIN3789:  preds = [JOIN3786,COND1FE2]
          tensor[3] rgb3787#1 = phi(rgb3784,rgb1FAE)
          real transp3788#1 = phi(transp3785,transp1FAC)
          goto JOIN378C
        JOIN378C:  preds = [JOIN3789,COND1FDF]
          tensor[3] rgb378A#1 = phi(rgb3787,rgb1FAE)
          real transp378B#1 = phi(transp3788,transp1FAC)
          goto JOIN378F
        JOIN378F:  preds = [JOIN378C,COND1FDA]
          tensor[3] rgb378D#1 = phi(rgb378A,rgb1FAE)
          real transp378E#1 = phi(transp378B,transp1FAC)
          goto JOIN3792
        JOIN3792:  preds = [JOIN378F,COND1FD7]
          tensor[3] rgb3790#1 = phi(rgb378D,rgb1FAE)
          real transp3791#1 = phi(transp378E,transp1FAC)
          goto JOIN3795
        JOIN3795:  preds = [JOIN3792,COND1FD2]
          tensor[3] rgb3793#1 = phi(rgb3790,rgb1FAE)
          real transp3794#1 = phi(transp3791,transp1FAC)
          goto JOIN3798
        JOIN3798:  preds = [JOIN3795,COND1FCD]
          tensor[3] rgb3796#3 = phi(rgb3793,rgb1FAE)
          real transp3797#2 = phi(transp3794,transp1FAC)
          real _t3799#1 = 0.1e-1;
          bool _t379B#1 = LT<real>(transp3797,_t3799);
          if _t379B then goto SAVE379E else goto JOIN37A2
        SAVE379E:  preds = [COND379D]
          self.transp = _t1FC7;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A2
        JOIN37A2:  preds = [*STABILIZE37A0,COND379D]
          real transp37A1#2 = phi(transp3797)
          bool _t37A3#1 = GT<real>(rayN1FA8,camFar1F96);
          if _t37A3 then goto SAVE37A6 else goto JOIN37A9
        SAVE37A6:  preds = [COND37A5]
          self.transp = transp37A1;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A9
        JOIN37A9:  preds = [*STABILIZE37A8,COND37A5]
          real rayN37AA#1 = RAdd(rayN1FA8,rayStep1F9A);
          self.rayN = rayN37AA;
          self.transp = transp37A1;
          self.rgb = rgb3796;
          active
        ASSIGN3AAF:  preds = [COND3700]
          int addRes37B2#1 = idx36FC;
          int ix37B3#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B2);
          int stride37B4#2 = 3;
          int offp37B5#3 = IMul(stride37B4,ix37B3);
          real v0_37B6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37B5);
          int ilit37B7#3 = 1;
          int addRes37B8#1 = IAdd(idx36FC,ilit37B7);
          int ix37B9#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B8);
          int offp37BA#3 = IMul(stride37B4,ix37B9);
          real v1_37BB#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BA);
          tensor[2] v_37BC#1 = <tensor[2]>[v0_37B6,v1_37BB];
          int offp37BD#1 = IAdd(offp37B5,ilit37B7);
          real v0_37BE#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BD);
          int offp37BF#1 = IAdd(offp37BA,ilit37B7);
          real v1_37C0#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BF);
          tensor[2] v_37C1#1 = <tensor[2]>[v0_37BE,v1_37C0];
          int offset37C2#2 = 2;
          int offp37C3#1 = IAdd(offp37B5,offset37C2);
          real v0_37C4#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C3);
          int offp37C5#1 = IAdd(offp37BA,offset37C2);
          real v1_37C6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C5);
          tensor[2] v_37C7#1 = <tensor[2]>[v0_37C4,v1_37C6];
          tensor[3,2] voxels37C8#1 = <tensor[3,2]>[v_37BC,v_37C1,v_37C7];
          tensor[3,2] ldvox3730#1 = voxels37C8;
          goto JOIN3731
        ASSIGN37E3:  preds = [COND2E85]
          string _t37E2#1 = "\n";
          Print<[tensor[3],string]>(x1FC4,_t37E2);
          string _t37E5#1 = "wait what\?\n";
          Print<[string]>(_t37E5);
          goto JOIN3786
        ASSIGN37E8:  preds = [COND1FB7]
          bool _t1FBB#1 = NEQ<int>(vi1FB2,sv1FA4);
          goto JOIN1FBC
    end update
    method stabilize
        ENTRY37E9:  preds = []
          bool debug37EA#1 = globals.debug1D18;
          int su37EC#1 = globals.su1D19;
          int sv37EE#1 = globals.sv1D1A;
          real transp37F0#1 = self.transp;
          tensor[3] rgb37F2#3 = self.rgb;
          tensor[4] rgba37F4#1 = self.rgba;
          int ui37F6#1 = self.ui;
          int vi37F8#1 = self.vi;
          real _t37FA#1 = 0.1e1;
          real a37FC#6 = RSub(_t37FA,transp37F0);
          real _t37FF#1 = 0.e0;
          bool _t3801#1 = GT<real>(a37FC,_t37FF);
          if _t3801 then goto ASSIGN3805 else goto JOIN3816
        ASSIGN3805:  preds = [COND3803]
          real _t3804#1 = VIndex<3,0>(rgb37F2);
          real _t3806#1 = RDiv(_t3804,a37FC);
          real _t3809#1 = VIndex<3,1>(rgb37F2);
          real _t380B#1 = RDiv(_t3809,a37FC);
          real _t380E#1 = VIndex<3,2>(rgb37F2);
          real _t3810#1 = RDiv(_t380E,a37FC);
          tensor[4] rgba3813#1 = <tensor[4]>[_t3806,_t380B,_t3810,a37FC];
          goto JOIN3816
        JOIN3816:  preds = [ASSIGN3814,COND3803]
          tensor[4] rgba3815#2 = phi(rgba3813,rgba37F4)
          bool _t3817#1 = EQ<int>(ui37F6,su37EC);
          if _t3817 then goto ASSIGN381B else goto JOIN3821
        ASSIGN381B:  preds = [COND3819]
          bool _t381A#1 = EQ<int>(vi37F8,sv37EE);
          if _t381A then goto COND381D else goto JOIN3820
        COND381D:  preds = [COND381C]
          if debug37EA then goto MASSIGN381E else goto JOIN381F
        MASSIGN381E:  preds = [COND381D]
          Print<[real,tensor[4]]>(a37FC,rgba3815);
          goto JOIN381F
        JOIN381F:  preds = [MASSIGN381E,COND381D]
          goto JOIN3820
        JOIN3820:  preds = [JOIN381F,COND381C]
          goto JOIN3821
        JOIN3821:  preds = [JOIN3820,COND3819]
          self.rgba = rgba3815;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY3824:  preds = []
      int iresU3825#1 = globals.iresU1D0F;
      int iresV3827#1 = globals.iresV1D10;
      int _t3829#2 = 0;
      int _t382B#2 = 1;
      int _t382D#1 = ISub(iresV3827,_t382B);
      int[] _t382F#1 = Range(_t3829,_t382D);
    FOREACH3832:  preds = [ASSIGN3830,NEXT383B]
      foreach (vi3831 in _t382F) on exit goto RETURN383C
      int _t3833#1 = ISub(iresU3825,_t382B);
      int[] _t3835#1 = Range(_t3829,_t3833);
    FOREACH3838:  preds = [ASSIGN3836,NEXT383A]
      foreach (ui3837 in _t3835) on exit goto NEXT383B
      new raycast(ui3837,vi3831);
      goto FOREACH3838
    NEXT383B:  preds = [FOREACH3838]
      goto FOREACH3832
    RETURN383C:  preds = [FOREACH3832]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1D06 (a) = <no-default>
  input 0b043B_intermedateGlobal1D07 (b) = <no-default>
  input 0c043D_intermedateGlobal1D08 (c) = <no-default>
  input isoval1D09 (isoval) = <default>
  input thick1D0A (thick) = <default>
  input camEye1D0B (camEye) = <default>
  input camAt1D0C (camAt) = <default>
  input camUp1D0D (camUp) = <default>
  input camFOV1D0E (camFOV) = <default>
  input iresU1D0F (iresU) = <default>
  input iresV1D10 (iresV) = <default>
  input camNear1D11 (camNear) = <default>
  input camFar1D12 (camFar) = <default>
  input refStep1D13 (refStep) = <default>
  input rayStep1D14 (rayStep) = <default>
  input lightVsp1D15 (lightVsp) = <default>
  input phongKa1D16 (phongKa) = <default>
  input phongKd1D17 (phongKd) = <default>
  input debug1D18 (debug) = <default>
  input su1D19 (su) = <default>
  input sv1D1A (sv) = <default>
  global real camDist1D1B
  global tensor[3] camN1D1C
  global tensor[3] camU1D1D
  global tensor[3] camV1D1E
  global real camVmax1D1F
  global real camUmax1D20
  global tensor[3] light1D21
  global femData:Mesh _t1D22
  global femData:Space _tX1D23
  global femData:FemFunc c1D24
  global image(IMAGE1D<double[3]>) I1D27
## functions
  function femData:MeshPos findPos1FE4 (femData:Mesh mesh1FE5#39, tensor[3] pos1FE6#5) {
    ENTRY1FE7:  preds = []
      real _t1FE8#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1FEA#1 = <tensor[3]>[_t1FE8,_t1FE8,_t1FE8];
      int newtonInt1FEC#4 = 0;
      int cellInt1FEE#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1FE5);
      int _t1FF0#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1FE5);
      int _t1FF2#13 = 1;
      int numCell1FF4#2 = ISub(_t1FF0,_t1FF2);
      int[] yayCells1FF6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1FE5,pos1FE6);
    FOREACH1FF9:  preds = [ASSIGN1FF7,NEXT272E]
      foreach (cellItter1FF8 in yayCells1FF6) on exit goto ASSIGN2730
        tensor[3] xn272D#2 = phi(xn1FEA,xn25CE)
      int _t1FFA#6 = 2;
      int[] _t1FFC#1 = Range(newtonInt1FEC,_t1FFA);
    FOREACH1FFF:  preds = [ASSIGN1FFD,NEXT272C]
      foreach (newtonItter1FFE in _t1FFC) on exit goto NEXT272E
        tensor[3] xn25CE#5 = phi(xn272D,xn2692)
      int ilit2001#1 = 4;
      int mulRes2002#4 = IMul(cellItter1FF8,ilit2001);
      int idx2005#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes2002);
      int addRes2007#1 = IAdd(mulRes2002,_t1FF2);
      int idx2008#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2007);
      int addRes200A#1 = IAdd(mulRes2002,_t1FFA);
      int idx200B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200A);
      int ilit200C#5 = 3;
      int addRes200D#1 = IAdd(mulRes2002,ilit200C);
      int idx200E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200D);
      int mulRes2024#3 = IMul(ilit200C,idx2005);
      int addRes2027#1 = IAdd(_t1FF2,mulRes2024);
      int addRes2029#1 = IAdd(_t1FFA,mulRes2024);
      real dof_load202A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2024);
      real dof_load202B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2027);
      real dof_load202C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2029);
      int mulRes202F#3 = IMul(ilit200C,idx2008);
      int addRes2031#1 = IAdd(_t1FF2,mulRes202F);
      int addRes2032#1 = IAdd(_t1FFA,mulRes202F);
      real dof_load2033#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes202F);
      real dof_load2034#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2031);
      real dof_load2035#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2032);
      int mulRes2038#3 = IMul(ilit200C,idx200B);
      int addRes203A#1 = IAdd(_t1FF2,mulRes2038);
      int addRes203B#1 = IAdd(_t1FFA,mulRes2038);
      real dof_load203C#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2038);
      real dof_load203D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203A);
      real dof_load203E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203B);
      int mulRes2041#3 = IMul(ilit200C,idx200E);
      int addRes2043#1 = IAdd(_t1FF2,mulRes2041);
      int addRes2044#1 = IAdd(_t1FFA,mulRes2041);
      real dof_load2045#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2041);
      real dof_load2046#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2043);
      real dof_load2047#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2044);
      real coeff2078#22 = -0.1e1;
      real one2079#33 = 0.1e1;
      real prod207A#2 = RMul(one2079,one2079);
      real prod207B#2 = RMul(one2079,prod207A);
      real basisEval207C#3 = RMul(coeff2078,prod207B);
      real basisEval207D#10 = RMul(one2079,prod207B);
      real basisEval207E#45 = 0.e0;
      real r2095#2 = RMul(dof_load202A,basisEval207C);
      real r2098#1 = RMul(dof_load2033,basisEval207D);
      real r209B#2 = RMul(dof_load203C,basisEval207E);
      real r209E#2 = RMul(dof_load2045,basisEval207E);
      real r209F#1 = RAdd(r2095,r2098);
      real r20A0#1 = RAdd(r209F,r209B);
      real r20A1#13 = RAdd(r20A0,r209E);
      real r20A5#1 = RMul(dof_load2033,basisEval207E);
      real r20A7#1 = RMul(dof_load203C,basisEval207D);
      real r20AA#2 = RAdd(r2095,r20A5);
      real r20AB#1 = RAdd(r20AA,r20A7);
      real r20AC#13 = RAdd(r20AB,r209E);
      real r20B4#1 = RMul(dof_load2045,basisEval207D);
      real r20B6#1 = RAdd(r20AA,r209B);
      real r20B7#12 = RAdd(r20B6,r20B4);
      real r20BA#2 = RMul(dof_load202B,basisEval207C);
      real r20BC#1 = RMul(dof_load2034,basisEval207D);
      real r20BE#2 = RMul(dof_load203D,basisEval207E);
      real r20C0#2 = RMul(dof_load2046,basisEval207E);
      real r20C1#1 = RAdd(r20BA,r20BC);
      real r20C2#1 = RAdd(r20C1,r20BE);
      real r20C3#13 = RAdd(r20C2,r20C0);
      real r20C5#1 = RMul(dof_load2034,basisEval207E);
      real r20C6#1 = RMul(dof_load203D,basisEval207D);
      real r20C8#2 = RAdd(r20BA,r20C5);
      real r20C9#1 = RAdd(r20C8,r20C6);
      real r20CA#13 = RAdd(r20C9,r20C0);
      real r20CE#1 = RMul(dof_load2046,basisEval207D);
      real r20D0#1 = RAdd(r20C8,r20BE);
      real r20D1#12 = RAdd(r20D0,r20CE);
      real r20D4#2 = RMul(dof_load202C,basisEval207C);
      real r20D6#1 = RMul(dof_load2035,basisEval207D);
      real r20D8#2 = RMul(dof_load203E,basisEval207E);
      real r20DA#2 = RMul(dof_load2047,basisEval207E);
      real r20DB#1 = RAdd(r20D4,r20D6);
      real r20DC#1 = RAdd(r20DB,r20D8);
      real r20DD#13 = RAdd(r20DC,r20DA);
      real r20DF#1 = RMul(dof_load2035,basisEval207E);
      real r20E0#1 = RMul(dof_load203E,basisEval207D);
      real r20E2#2 = RAdd(r20D4,r20DF);
      real r20E3#1 = RAdd(r20E2,r20E0);
      real r20E4#13 = RAdd(r20E3,r20DA);
      real r20E8#1 = RMul(dof_load2047,basisEval207D);
      real r20EA#1 = RAdd(r20E2,r20D8);
      real r20EB#12 = RAdd(r20EA,r20E8);
      real r214C#3 = RMul(basisEval207E,r20A1);
      real r214E#3 = RMul(basisEval207E,r20C3);
      real r2150#5 = RMul(basisEval207E,r20DD);
      real r2151#3 = RAdd(r214C,r214E);
      real r2152#9 = RAdd(r2151,r2150);
      real r2154#3 = RMul(basisEval207E,r20AC);
      real r2156#3 = RMul(basisEval207E,r20CA);
      real r2158#5 = RMul(basisEval207E,r20E4);
      real r2159#3 = RAdd(r2154,r2156);
      real r215A#9 = RAdd(r2159,r2158);
      real r215C#3 = RMul(basisEval207E,r20B7);
      real r215E#3 = RMul(basisEval207E,r20D1);
      real r2160#5 = RMul(basisEval207E,r20EB);
      real r2161#3 = RAdd(r215C,r215E);
      real r2162#12 = RAdd(r2161,r2160);
      real r2165#1 = RMul(coeff2078,r20DD);
      real r2166#3 = RAdd(r2151,r2165);
      real r2167#1 = RMul(coeff2078,r20E4);
      real r2168#3 = RAdd(r2159,r2167);
      real r2169#1 = RMul(coeff2078,r20EB);
      real r216A#4 = RAdd(r2161,r2169);
      real r216D#1 = RMul(one2079,r20C3);
      real r216E#1 = RAdd(r214C,r216D);
      real r216F#3 = RAdd(r216E,r2150);
      real r2170#1 = RMul(one2079,r20CA);
      real r2171#1 = RAdd(r2154,r2170);
      real r2172#3 = RAdd(r2171,r2158);
      real r2173#1 = RMul(one2079,r20D1);
      real r2174#1 = RAdd(r215C,r2173);
      real r2175#4 = RAdd(r2174,r2160);
      real r2178#1 = RMul(one2079,r20DD);
      real r2179#3 = RAdd(r2151,r2178);
      real r217A#1 = RMul(one2079,r20E4);
      real r217B#3 = RAdd(r2159,r217A);
      real r217C#1 = RMul(one2079,r20EB);
      real r217D#4 = RAdd(r2161,r217C);
      real r217F#1 = RMul(coeff2078,r20A1);
      real r2180#1 = RAdd(r217F,r214E);
      real r2181#3 = RAdd(r2180,r2150);
      real r2182#1 = RMul(coeff2078,r20AC);
      real r2183#1 = RAdd(r2182,r2156);
      real r2184#3 = RAdd(r2183,r2158);
      real r2185#1 = RMul(coeff2078,r20B7);
      real r2186#1 = RAdd(r2185,r215E);
      real r2187#4 = RAdd(r2186,r2160);
      real r218A#1 = RMul(coeff2078,r20C3);
      real r218B#1 = RAdd(r214C,r218A);
      real r218C#3 = RAdd(r218B,r2150);
      real r218D#1 = RMul(coeff2078,r20CA);
      real r218E#1 = RAdd(r2154,r218D);
      real r218F#3 = RAdd(r218E,r2158);
      real r2190#1 = RMul(coeff2078,r20D1);
      real r2191#1 = RAdd(r215C,r2190);
      real r2192#4 = RAdd(r2191,r2160);
      real r2194#1 = RMul(one2079,r20A1);
      real r2195#1 = RAdd(r2194,r214E);
      real r2196#3 = RAdd(r2195,r2150);
      real r2197#1 = RMul(one2079,r20AC);
      real r2198#1 = RAdd(r2197,r2156);
      real r2199#3 = RAdd(r2198,r2158);
      real r219A#1 = RMul(one2079,r20B7);
      real r219B#1 = RAdd(r219A,r215E);
      real r219C#4 = RAdd(r219B,r2160);
      real r21F9#1 = RMul(r20A1,r2152);
      real r21FC#1 = RMul(r20C3,r2179);
      real r21FF#1 = RMul(r20DD,r218C);
      real r2200#1 = RAdd(r21F9,r21FC);
      real r2201#1 = RAdd(r2200,r21FF);
      real r2203#1 = RMul(r20A1,r215A);
      real r2205#1 = RMul(r20C3,r217B);
      real r2207#1 = RMul(r20DD,r218F);
      real r2208#1 = RAdd(r2203,r2205);
      real r2209#2 = RAdd(r2208,r2207);
      real r220B#1 = RMul(r20A1,r2162);
      real r220D#1 = RMul(r20C3,r217D);
      real r220F#1 = RMul(r20DD,r2192);
      real r2210#1 = RAdd(r220B,r220D);
      real r2211#2 = RAdd(r2210,r220F);
      real r2214#1 = RMul(r20A1,r2166);
      real r2216#1 = RMul(r20C3,r2152);
      real r2218#1 = RMul(r20DD,r2196);
      real r2219#1 = RAdd(r2214,r2216);
      real r221A#1 = RAdd(r2219,r2218);
      real r221C#1 = RMul(r20A1,r2168);
      real r221E#1 = RMul(r20C3,r215A);
      real r2220#1 = RMul(r20DD,r2199);
      real r2221#1 = RAdd(r221C,r221E);
      real r2222#2 = RAdd(r2221,r2220);
      real r2224#1 = RMul(r20A1,r216A);
      real r2226#1 = RMul(r20C3,r2162);
      real r2228#1 = RMul(r20DD,r219C);
      real r2229#1 = RAdd(r2224,r2226);
      real r222A#2 = RAdd(r2229,r2228);
      real r222D#1 = RMul(r20A1,r216F);
      real r222F#1 = RMul(r20C3,r2181);
      real r2231#1 = RMul(r20DD,r2152);
      real r2232#1 = RAdd(r222D,r222F);
      real r2233#1 = RAdd(r2232,r2231);
      real r2235#1 = RMul(r20A1,r2172);
      real r2237#1 = RMul(r20C3,r2184);
      real r2239#1 = RMul(r20DD,r215A);
      real r223A#1 = RAdd(r2235,r2237);
      real r223B#2 = RAdd(r223A,r2239);
      real r223D#1 = RMul(r20A1,r2175);
      real r223F#1 = RMul(r20C3,r2187);
      real r2241#1 = RMul(r20DD,r2162);
      real r2242#1 = RAdd(r223D,r223F);
      real r2243#2 = RAdd(r2242,r2241);
      real r2247#1 = RMul(r20AC,r2152);
      real r2249#1 = RMul(r20CA,r2179);
      real r224B#1 = RMul(r20E4,r218C);
      real r224C#1 = RAdd(r2247,r2249);
      real r224D#2 = RAdd(r224C,r224B);
      real r224E#1 = RMul(r20AC,r215A);
      real r224F#1 = RMul(r20CA,r217B);
      real r2250#1 = RMul(r20E4,r218F);
      real r2251#1 = RAdd(r224E,r224F);
      real r2252#1 = RAdd(r2251,r2250);
      real r2253#1 = RMul(r20AC,r2162);
      real r2254#1 = RMul(r20CA,r217D);
      real r2255#1 = RMul(r20E4,r2192);
      real r2256#1 = RAdd(r2253,r2254);
      real r2257#2 = RAdd(r2256,r2255);
      real r2259#1 = RMul(r20AC,r2166);
      real r225A#1 = RMul(r20CA,r2152);
      real r225B#1 = RMul(r20E4,r2196);
      real r225C#1 = RAdd(r2259,r225A);
      real r225D#2 = RAdd(r225C,r225B);
      real r225E#1 = RMul(r20AC,r2168);
      real r225F#1 = RMul(r20CA,r215A);
      real r2260#1 = RMul(r20E4,r2199);
      real r2261#1 = RAdd(r225E,r225F);
      real r2262#1 = RAdd(r2261,r2260);
      real r2263#1 = RMul(r20AC,r216A);
      real r2264#1 = RMul(r20CA,r2162);
      real r2265#1 = RMul(r20E4,r219C);
      real r2266#1 = RAdd(r2263,r2264);
      real r2267#2 = RAdd(r2266,r2265);
      real r2269#1 = RMul(r20AC,r216F);
      real r226A#1 = RMul(r20CA,r2181);
      real r226B#1 = RMul(r20E4,r2152);
      real r226C#1 = RAdd(r2269,r226A);
      real r226D#2 = RAdd(r226C,r226B);
      real r226E#1 = RMul(r20AC,r2172);
      real r226F#1 = RMul(r20CA,r2184);
      real r2270#1 = RMul(r20E4,r215A);
      real r2271#1 = RAdd(r226E,r226F);
      real r2272#1 = RAdd(r2271,r2270);
      real r2273#1 = RMul(r20AC,r2175);
      real r2274#1 = RMul(r20CA,r2187);
      real r2275#1 = RMul(r20E4,r2162);
      real r2276#1 = RAdd(r2273,r2274);
      real r2277#2 = RAdd(r2276,r2275);
      real r227B#1 = RMul(r20B7,r2152);
      real r227D#1 = RMul(r20D1,r2179);
      real r227F#1 = RMul(r20EB,r218C);
      real r2280#1 = RAdd(r227B,r227D);
      real r2281#2 = RAdd(r2280,r227F);
      real r2282#1 = RMul(r20B7,r215A);
      real r2283#1 = RMul(r20D1,r217B);
      real r2284#1 = RMul(r20EB,r218F);
      real r2285#1 = RAdd(r2282,r2283);
      real r2286#2 = RAdd(r2285,r2284);
      real r2287#1 = RMul(r20B7,r2162);
      real r2288#1 = RMul(r20D1,r217D);
      real r2289#1 = RMul(r20EB,r2192);
      real r228A#1 = RAdd(r2287,r2288);
      real r228B#1 = RAdd(r228A,r2289);
      real r228D#1 = RMul(r20B7,r2166);
      real r228E#1 = RMul(r20D1,r2152);
      real r228F#1 = RMul(r20EB,r2196);
      real r2290#1 = RAdd(r228D,r228E);
      real r2291#2 = RAdd(r2290,r228F);
      real r2292#1 = RMul(r20B7,r2168);
      real r2293#1 = RMul(r20D1,r215A);
      real r2294#1 = RMul(r20EB,r2199);
      real r2295#1 = RAdd(r2292,r2293);
      real r2296#2 = RAdd(r2295,r2294);
      real r2297#1 = RMul(r20B7,r216A);
      real r2298#1 = RMul(r20D1,r2162);
      real r2299#1 = RMul(r20EB,r219C);
      real r229A#1 = RAdd(r2297,r2298);
      real r229B#1 = RAdd(r229A,r2299);
      real r229D#1 = RMul(r20B7,r216F);
      real r229E#1 = RMul(r20D1,r2181);
      real r229F#1 = RMul(r20EB,r2152);
      real r22A0#1 = RAdd(r229D,r229E);
      real r22A1#2 = RAdd(r22A0,r229F);
      real r22A2#1 = RMul(r20B7,r2172);
      real r22A3#1 = RMul(r20D1,r2184);
      real r22A4#1 = RMul(r20EB,r215A);
      real r22A5#1 = RAdd(r22A2,r22A3);
      real r22A6#2 = RAdd(r22A5,r22A4);
      real r22A7#1 = RMul(r20B7,r2175);
      real r22A8#1 = RMul(r20D1,r2187);
      real r22A9#1 = RMul(r20EB,r2162);
      real r22AA#1 = RAdd(r22A7,r22A8);
      real r22AB#1 = RAdd(r22AA,r22A9);
      tensor[3] probe_l_142367#1 = <tensor[3]>[r20A1,r20C3,r20DD];
      tensor[3] probe_l_1523B4#3 = <tensor[3]>[r20AC,r20CA,r20E4];
      tensor[3] tensor245F#1 = <tensor[3]>[r2162,r217D,r2192];
      tensor[3] tensor2465#1 = <tensor[3]>[r216A,r2162,r219C];
      tensor[3] tensor246C#1 = <tensor[3]>[r2175,r2187,r2162];
      real vdot248F#1 = VDot<3>(probe_l_1523B4,tensor245F);
      real vdot2491#1 = VDot<3>(probe_l_1523B4,tensor2465);
      real vdot2493#1 = VDot<3>(probe_l_1523B4,tensor246C);
      tensor[3] op1_e3_l_18248D#1 = <tensor[3]>[vdot248F,vdot2491,vdot2493];
      real op1_e3_l_19249C#1 = VDot<3>(probe_l_142367,op1_e3_l_18248D);
      real r24A2#2 = RMul(basisEval207E,r2201);
      real r24A4#1 = RMul(basisEval207E,r2209);
      real r24A6#2 = RMul(basisEval207E,r2211);
      real r24A8#2 = RMul(basisEval207E,r224D);
      real r24AA#3 = RMul(basisEval207E,r2252);
      real r24AD#1 = RMul(one2079,r2257);
      real r24AF#2 = RMul(basisEval207E,r2281);
      real r24B2#1 = RMul(coeff2078,r2286);
      real r24B4#3 = RMul(basisEval207E,r228B);
      real r24B5#2 = RAdd(r24A2,r24A4);
      real r24B6#1 = RAdd(r24B5,r24A6);
      real r24B7#1 = RAdd(r24B6,r24A8);
      real r24B8#1 = RAdd(r24B7,r24AA);
      real r24B9#1 = RAdd(r24B8,r24AD);
      real r24BA#1 = RAdd(r24B9,r24AF);
      real r24BB#1 = RAdd(r24BA,r24B2);
      real r24BC#1 = RAdd(r24BB,r24B4);
      real r24BE#2 = RMul(basisEval207E,r221A);
      real r24C0#1 = RMul(basisEval207E,r2222);
      real r24C2#2 = RMul(basisEval207E,r222A);
      real r24C4#2 = RMul(basisEval207E,r225D);
      real r24C6#3 = RMul(basisEval207E,r2262);
      real r24C8#1 = RMul(one2079,r2267);
      real r24CA#2 = RMul(basisEval207E,r2291);
      real r24CC#1 = RMul(coeff2078,r2296);
      real r24CE#3 = RMul(basisEval207E,r229B);
      real r24CF#2 = RAdd(r24BE,r24C0);
      real r24D0#1 = RAdd(r24CF,r24C2);
      real r24D1#1 = RAdd(r24D0,r24C4);
      real r24D2#1 = RAdd(r24D1,r24C6);
      real r24D3#1 = RAdd(r24D2,r24C8);
      real r24D4#1 = RAdd(r24D3,r24CA);
      real r24D5#1 = RAdd(r24D4,r24CC);
      real r24D6#1 = RAdd(r24D5,r24CE);
      real r24D8#2 = RMul(basisEval207E,r2233);
      real r24DA#1 = RMul(basisEval207E,r223B);
      real r24DC#2 = RMul(basisEval207E,r2243);
      real r24DE#2 = RMul(basisEval207E,r226D);
      real r24E0#3 = RMul(basisEval207E,r2272);
      real r24E2#1 = RMul(one2079,r2277);
      real r24E4#2 = RMul(basisEval207E,r22A1);
      real r24E6#1 = RMul(coeff2078,r22A6);
      real r24E8#3 = RMul(basisEval207E,r22AB);
      real r24E9#2 = RAdd(r24D8,r24DA);
      real r24EA#1 = RAdd(r24E9,r24DC);
      real r24EB#1 = RAdd(r24EA,r24DE);
      real r24EC#1 = RAdd(r24EB,r24E0);
      real r24ED#1 = RAdd(r24EC,r24E2);
      real r24EE#1 = RAdd(r24ED,r24E4);
      real r24EF#1 = RAdd(r24EE,r24E6);
      real r24F0#1 = RAdd(r24EF,r24E8);
      real r24F2#1 = RMul(coeff2078,r2211);
      real r24F3#2 = RMul(basisEval207E,r2257);
      real r24F4#1 = RMul(one2079,r2281);
      real r24F5#2 = RMul(basisEval207E,r2286);
      real r24F6#1 = RAdd(r24B5,r24F2);
      real r24F7#1 = RAdd(r24F6,r24A8);
      real r24F8#1 = RAdd(r24F7,r24AA);
      real r24F9#1 = RAdd(r24F8,r24F3);
      real r24FA#1 = RAdd(r24F9,r24F4);
      real r24FB#1 = RAdd(r24FA,r24F5);
      real r24FC#1 = RAdd(r24FB,r24B4);
      real r24FD#1 = RMul(coeff2078,r222A);
      real r24FE#2 = RMul(basisEval207E,r2267);
      real r24FF#1 = RMul(one2079,r2291);
      real r2500#2 = RMul(basisEval207E,r2296);
      real r2501#1 = RAdd(r24CF,r24FD);
      real r2502#1 = RAdd(r2501,r24C4);
      real r2503#1 = RAdd(r2502,r24C6);
      real r2504#1 = RAdd(r2503,r24FE);
      real r2505#1 = RAdd(r2504,r24FF);
      real r2506#1 = RAdd(r2505,r2500);
      real r2507#1 = RAdd(r2506,r24CE);
      real r2508#1 = RMul(coeff2078,r2243);
      real r2509#2 = RMul(basisEval207E,r2277);
      real r250A#1 = RMul(one2079,r22A1);
      real r250B#2 = RMul(basisEval207E,r22A6);
      real r250C#1 = RAdd(r24E9,r2508);
      real r250D#1 = RAdd(r250C,r24DE);
      real r250E#1 = RAdd(r250D,r24E0);
      real r250F#1 = RAdd(r250E,r2509);
      real r2510#1 = RAdd(r250F,r250A);
      real r2511#1 = RAdd(r2510,r250B);
      real r2512#1 = RAdd(r2511,r24E8);
      real r2514#1 = RMul(one2079,r2209);
      real r2515#1 = RMul(coeff2078,r224D);
      real r2516#1 = RAdd(r24A2,r2514);
      real r2517#1 = RAdd(r2516,r24A6);
      real r2518#1 = RAdd(r2517,r2515);
      real r2519#1 = RAdd(r2518,r24AA);
      real r251A#1 = RAdd(r2519,r24F3);
      real r251B#1 = RAdd(r251A,r24AF);
      real r251C#1 = RAdd(r251B,r24F5);
      real r251D#1 = RAdd(r251C,r24B4);
      real r251E#1 = RMul(one2079,r2222);
      real r251F#1 = RMul(coeff2078,r225D);
      real r2520#1 = RAdd(r24BE,r251E);
      real r2521#1 = RAdd(r2520,r24C2);
      real r2522#1 = RAdd(r2521,r251F);
      real r2523#1 = RAdd(r2522,r24C6);
      real r2524#1 = RAdd(r2523,r24FE);
      real r2525#1 = RAdd(r2524,r24CA);
      real r2526#1 = RAdd(r2525,r2500);
      real r2527#1 = RAdd(r2526,r24CE);
      real r2528#1 = RMul(one2079,r223B);
      real r2529#1 = RMul(coeff2078,r226D);
      real r252A#1 = RAdd(r24D8,r2528);
      real r252B#1 = RAdd(r252A,r24DC);
      real r252C#1 = RAdd(r252B,r2529);
      real r252D#1 = RAdd(r252C,r24E0);
      real r252E#1 = RAdd(r252D,r2509);
      real r252F#1 = RAdd(r252E,r24E4);
      real r2530#1 = RAdd(r252F,r250B);
      real r2531#1 = RAdd(r2530,r24E8);
      real realLit25C9#1 = 0.2e1;
      real op1_e3_l_2125C8#9 = RMul(realLit25C9,op1_e3_l_19249C);
      real varAcc25CF#1 = VIndex<3,0>(xn25CE);
      real varAcc25D0#1 = VIndex<3,1>(xn25CE);
      real varAcc25D1#1 = VIndex<3,2>(xn25CE);
      real prod25D6#2 = RMul(varAcc25CF,prod207A);
      real prod25D8#1 = RMul(varAcc25D0,one2079);
      real prod25D9#2 = RMul(one2079,prod25D8);
      real prod25DB#1 = RMul(one2079,varAcc25D1);
      real prod25DC#2 = RMul(one2079,prod25DB);
      real mult25DF#1 = RMul(coeff2078,prod25DC);
      real mult25E0#1 = RMul(coeff2078,prod25D9);
      real mult25E1#1 = RMul(coeff2078,prod25D6);
      real sum25E2#1 = RAdd(mult25E0,mult25E1);
      real sum25E3#1 = RAdd(mult25DF,sum25E2);
      real sum25E4#3 = RAdd(basisEval207D,sum25E3);
      real basisEval25E6#3 = RMul(one2079,prod25D6);
      real basisEval25E7#3 = RMul(one2079,prod25D9);
      real basisEval25E8#3 = RMul(one2079,prod25DC);
      real r2609#1 = RMul(dof_load202A,sum25E4);
      real r260C#1 = RMul(dof_load2033,basisEval25E6);
      real r260F#1 = RMul(dof_load203C,basisEval25E7);
      real r2612#1 = RMul(dof_load2045,basisEval25E8);
      real r2613#1 = RAdd(r2609,r260C);
      real r2614#1 = RAdd(r2613,r260F);
      real r2615#1 = RAdd(r2614,r2612);
      real r2617#1 = RMul(dof_load202B,sum25E4);
      real r2619#1 = RMul(dof_load2034,basisEval25E6);
      real r261B#1 = RMul(dof_load203D,basisEval25E7);
      real r261D#1 = RMul(dof_load2046,basisEval25E8);
      real r261E#1 = RAdd(r2617,r2619);
      real r261F#1 = RAdd(r261E,r261B);
      real r2620#1 = RAdd(r261F,r261D);
      real r2622#1 = RMul(dof_load202C,sum25E4);
      real r2624#1 = RMul(dof_load2035,basisEval25E6);
      real r2626#1 = RMul(dof_load203E,basisEval25E7);
      real r2628#1 = RMul(dof_load2047,basisEval25E8);
      real r2629#1 = RAdd(r2622,r2624);
      real r262A#1 = RAdd(r2629,r2626);
      real r262B#1 = RAdd(r262A,r2628);
      tensor[3] probe_l_222606#1 = <tensor[3]>[r2615,r2620,r262B];
      real r2655#1 = RDiv(r24BC,op1_e3_l_2125C8);
      real r2657#1 = RDiv(r24D6,op1_e3_l_2125C8);
      real r2659#1 = RDiv(r24F0,op1_e3_l_2125C8);
      tensor[3] tensor265A#1 = <tensor[3]>[r2655,r2657,r2659];
      real r265C#1 = RDiv(r24FC,op1_e3_l_2125C8);
      real r265E#1 = RDiv(r2507,op1_e3_l_2125C8);
      real r2660#1 = RDiv(r2512,op1_e3_l_2125C8);
      tensor[3] tensor2661#1 = <tensor[3]>[r265C,r265E,r2660];
      real r2663#1 = RDiv(r251D,op1_e3_l_2125C8);
      real r2665#1 = RDiv(r2527,op1_e3_l_2125C8);
      real r2667#1 = RDiv(r2531,op1_e3_l_2125C8);
      tensor[3] tensor2668#1 = <tensor[3]>[r2663,r2665,r2667];
      tensor[3] op1_e3_l_242680#3 = VSub<3>(probe_l_222606,pos1FE6);
      real vdot2685#1 = VDot<3>(tensor265A,op1_e3_l_242680);
      real vdot2687#1 = VDot<3>(tensor2661,op1_e3_l_242680);
      real vdot2689#1 = VDot<3>(tensor2668,op1_e3_l_242680);
      tensor[3] op1_e3_l_252683#3 = <tensor[3]>[vdot2685,vdot2687,vdot2689];
      tensor[3] xn2692#4 = VSub<3>(xn25CE,op1_e3_l_252683);
      real _t2695#2 = 0.1e-7;
      real _t2697#1 = RMul(_t2695,_t2695);
      real _t26F9#1 = VDot<3>(op1_e3_l_252683,op1_e3_l_252683);
      bool _t26FC#1 = GTE<real>(_t2697,_t26F9);
      if _t26FC then goto ASSIGN2702 else goto JOIN272B
    ASSIGN2702:  preds = [COND26FE]
      real _t2701#4 = 0.1e-4;
      real _t2703#1 = RAdd(one2079,_t2701);
      tensor[3] _t2706#1 = <tensor[3]>[one2079,one2079,one2079];
      real _t2708#1 = VDot<3>(_t2706,xn2692);
      bool _t270B#1 = GT<real>(_t2703,_t2708);
      tensor[3] _t270D#1 = <tensor[3]>[_t2701,_t2701,_t2701];
      tensor[3] _t270F#3 = VAdd<3>(_t270D,xn2692);
      real _t2712#1 = VIndex<3,0>(_t270F);
      real _t2714#3 = -0.e0;
      bool _t2716#1 = GT<real>(_t2712,_t2714);
      real _t2718#1 = VIndex<3,1>(_t270F);
      bool _t271A#1 = GT<real>(_t2718,_t2714);
      real _t271C#1 = VIndex<3,2>(_t270F);
      bool _t271E#1 = GT<real>(_t271C,_t2714);
      bool _t2720#1 = BAnd(_t271A,_t271E);
      bool _t2722#1 = BAnd(_t2716,_t2720);
      bool _t2724#1 = BAnd(_t270B,_t2722);
      if _t2724 then goto ASSIGN2728 else goto JOIN272A
    ASSIGN2728:  preds = [COND2726]
      femData:MeshPos _t2727#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellItter1FF8,xn2692,pos1FE6);
      return _t2727
      goto JOIN272A
    JOIN272A:  preds = [*RETURN(_t2727)2729,COND2726]
      goto JOIN272B
    JOIN272B:  preds = [JOIN272A,COND26FE]
      goto FOREACH1FFF
    NEXT272E:  preds = [FOREACH1FFF]
      goto FOREACH1FF9
    ASSIGN2730:  preds = [FOREACH1FF9]
      int _t272F#6 = 2;
      int _t2731#6 = 3;
      int _t2733#1 = IMul(_t2731,numCell1FF4);
      int[] _t2735#1 = Range(newtonInt1FEC,_t2733);
    FOREACH2738:  preds = [ASSIGN2736,NEXT2E78]
      foreach (itter2737 in _t2735) on exit goto ASSIGN2E7B
        int cellInt273A#5 = phi(cellInt1FEE,cellInt2E75)
        int newtonInt2E67#1 = phi(newtonInt1FEC,newtonInt2E76)
        tensor[3] xn2D08#4 = phi(xn272D,xn2DCC)
      int ilit273B#1 = 4;
      int mulRes273C#4 = IMul(cellInt273A,ilit273B);
      int idx273F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes273C);
      int addRes2741#1 = IAdd(mulRes273C,_t1FF2);
      int idx2742#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2741);
      int addRes2744#1 = IAdd(mulRes273C,_t272F);
      int idx2745#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2744);
      int addRes2747#1 = IAdd(mulRes273C,_t2731);
      int idx2748#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2747);
      int mulRes275E#3 = IMul(_t2731,idx273F);
      int addRes2761#1 = IAdd(_t1FF2,mulRes275E);
      int addRes2763#1 = IAdd(_t272F,mulRes275E);
      real dof_load2764#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes275E);
      real dof_load2765#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2761);
      real dof_load2766#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2763);
      int mulRes2769#3 = IMul(_t2731,idx2742);
      int addRes276B#1 = IAdd(_t1FF2,mulRes2769);
      int addRes276C#1 = IAdd(_t272F,mulRes2769);
      real dof_load276D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2769);
      real dof_load276E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276B);
      real dof_load276F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276C);
      int mulRes2772#3 = IMul(_t2731,idx2745);
      int addRes2774#1 = IAdd(_t1FF2,mulRes2772);
      int addRes2775#1 = IAdd(_t272F,mulRes2772);
      real dof_load2776#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2772);
      real dof_load2777#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2774);
      real dof_load2778#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2775);
      int mulRes277B#3 = IMul(_t2731,idx2748);
      int addRes277D#1 = IAdd(_t1FF2,mulRes277B);
      int addRes277E#1 = IAdd(_t272F,mulRes277B);
      real dof_load277F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes277B);
      real dof_load2780#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277D);
      real dof_load2781#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277E);
      real coeff27B2#22 = -0.1e1;
      real one27B3#33 = 0.1e1;
      real prod27B4#2 = RMul(one27B3,one27B3);
      real prod27B5#2 = RMul(one27B3,prod27B4);
      real basisEval27B6#3 = RMul(coeff27B2,prod27B5);
      real basisEval27B7#10 = RMul(one27B3,prod27B5);
      real basisEval27B8#45 = 0.e0;
      real r27CF#2 = RMul(dof_load2764,basisEval27B6);
      real r27D2#1 = RMul(dof_load276D,basisEval27B7);
      real r27D5#2 = RMul(dof_load2776,basisEval27B8);
      real r27D8#2 = RMul(dof_load277F,basisEval27B8);
      real r27D9#1 = RAdd(r27CF,r27D2);
      real r27DA#1 = RAdd(r27D9,r27D5);
      real r27DB#13 = RAdd(r27DA,r27D8);
      real r27DF#1 = RMul(dof_load276D,basisEval27B8);
      real r27E1#1 = RMul(dof_load2776,basisEval27B7);
      real r27E4#2 = RAdd(r27CF,r27DF);
      real r27E5#1 = RAdd(r27E4,r27E1);
      real r27E6#13 = RAdd(r27E5,r27D8);
      real r27EE#1 = RMul(dof_load277F,basisEval27B7);
      real r27F0#1 = RAdd(r27E4,r27D5);
      real r27F1#12 = RAdd(r27F0,r27EE);
      real r27F4#2 = RMul(dof_load2765,basisEval27B6);
      real r27F6#1 = RMul(dof_load276E,basisEval27B7);
      real r27F8#2 = RMul(dof_load2777,basisEval27B8);
      real r27FA#2 = RMul(dof_load2780,basisEval27B8);
      real r27FB#1 = RAdd(r27F4,r27F6);
      real r27FC#1 = RAdd(r27FB,r27F8);
      real r27FD#13 = RAdd(r27FC,r27FA);
      real r27FF#1 = RMul(dof_load276E,basisEval27B8);
      real r2800#1 = RMul(dof_load2777,basisEval27B7);
      real r2802#2 = RAdd(r27F4,r27FF);
      real r2803#1 = RAdd(r2802,r2800);
      real r2804#13 = RAdd(r2803,r27FA);
      real r2808#1 = RMul(dof_load2780,basisEval27B7);
      real r280A#1 = RAdd(r2802,r27F8);
      real r280B#12 = RAdd(r280A,r2808);
      real r280E#2 = RMul(dof_load2766,basisEval27B6);
      real r2810#1 = RMul(dof_load276F,basisEval27B7);
      real r2812#2 = RMul(dof_load2778,basisEval27B8);
      real r2814#2 = RMul(dof_load2781,basisEval27B8);
      real r2815#1 = RAdd(r280E,r2810);
      real r2816#1 = RAdd(r2815,r2812);
      real r2817#13 = RAdd(r2816,r2814);
      real r2819#1 = RMul(dof_load276F,basisEval27B8);
      real r281A#1 = RMul(dof_load2778,basisEval27B7);
      real r281C#2 = RAdd(r280E,r2819);
      real r281D#1 = RAdd(r281C,r281A);
      real r281E#13 = RAdd(r281D,r2814);
      real r2822#1 = RMul(dof_load2781,basisEval27B7);
      real r2824#1 = RAdd(r281C,r2812);
      real r2825#12 = RAdd(r2824,r2822);
      real r2886#3 = RMul(basisEval27B8,r27DB);
      real r2888#3 = RMul(basisEval27B8,r27FD);
      real r288A#5 = RMul(basisEval27B8,r2817);
      real r288B#3 = RAdd(r2886,r2888);
      real r288C#9 = RAdd(r288B,r288A);
      real r288E#3 = RMul(basisEval27B8,r27E6);
      real r2890#3 = RMul(basisEval27B8,r2804);
      real r2892#5 = RMul(basisEval27B8,r281E);
      real r2893#3 = RAdd(r288E,r2890);
      real r2894#9 = RAdd(r2893,r2892);
      real r2896#3 = RMul(basisEval27B8,r27F1);
      real r2898#3 = RMul(basisEval27B8,r280B);
      real r289A#5 = RMul(basisEval27B8,r2825);
      real r289B#3 = RAdd(r2896,r2898);
      real r289C#12 = RAdd(r289B,r289A);
      real r289F#1 = RMul(coeff27B2,r2817);
      real r28A0#3 = RAdd(r288B,r289F);
      real r28A1#1 = RMul(coeff27B2,r281E);
      real r28A2#3 = RAdd(r2893,r28A1);
      real r28A3#1 = RMul(coeff27B2,r2825);
      real r28A4#4 = RAdd(r289B,r28A3);
      real r28A7#1 = RMul(one27B3,r27FD);
      real r28A8#1 = RAdd(r2886,r28A7);
      real r28A9#3 = RAdd(r28A8,r288A);
      real r28AA#1 = RMul(one27B3,r2804);
      real r28AB#1 = RAdd(r288E,r28AA);
      real r28AC#3 = RAdd(r28AB,r2892);
      real r28AD#1 = RMul(one27B3,r280B);
      real r28AE#1 = RAdd(r2896,r28AD);
      real r28AF#4 = RAdd(r28AE,r289A);
      real r28B2#1 = RMul(one27B3,r2817);
      real r28B3#3 = RAdd(r288B,r28B2);
      real r28B4#1 = RMul(one27B3,r281E);
      real r28B5#3 = RAdd(r2893,r28B4);
      real r28B6#1 = RMul(one27B3,r2825);
      real r28B7#4 = RAdd(r289B,r28B6);
      real r28B9#1 = RMul(coeff27B2,r27DB);
      real r28BA#1 = RAdd(r28B9,r2888);
      real r28BB#3 = RAdd(r28BA,r288A);
      real r28BC#1 = RMul(coeff27B2,r27E6);
      real r28BD#1 = RAdd(r28BC,r2890);
      real r28BE#3 = RAdd(r28BD,r2892);
      real r28BF#1 = RMul(coeff27B2,r27F1);
      real r28C0#1 = RAdd(r28BF,r2898);
      real r28C1#4 = RAdd(r28C0,r289A);
      real r28C4#1 = RMul(coeff27B2,r27FD);
      real r28C5#1 = RAdd(r2886,r28C4);
      real r28C6#3 = RAdd(r28C5,r288A);
      real r28C7#1 = RMul(coeff27B2,r2804);
      real r28C8#1 = RAdd(r288E,r28C7);
      real r28C9#3 = RAdd(r28C8,r2892);
      real r28CA#1 = RMul(coeff27B2,r280B);
      real r28CB#1 = RAdd(r2896,r28CA);
      real r28CC#4 = RAdd(r28CB,r289A);
      real r28CE#1 = RMul(one27B3,r27DB);
      real r28CF#1 = RAdd(r28CE,r2888);
      real r28D0#3 = RAdd(r28CF,r288A);
      real r28D1#1 = RMul(one27B3,r27E6);
      real r28D2#1 = RAdd(r28D1,r2890);
      real r28D3#3 = RAdd(r28D2,r2892);
      real r28D4#1 = RMul(one27B3,r27F1);
      real r28D5#1 = RAdd(r28D4,r2898);
      real r28D6#4 = RAdd(r28D5,r289A);
      real r2933#1 = RMul(r27DB,r288C);
      real r2936#1 = RMul(r27FD,r28B3);
      real r2939#1 = RMul(r2817,r28C6);
      real r293A#1 = RAdd(r2933,r2936);
      real r293B#1 = RAdd(r293A,r2939);
      real r293D#1 = RMul(r27DB,r2894);
      real r293F#1 = RMul(r27FD,r28B5);
      real r2941#1 = RMul(r2817,r28C9);
      real r2942#1 = RAdd(r293D,r293F);
      real r2943#2 = RAdd(r2942,r2941);
      real r2945#1 = RMul(r27DB,r289C);
      real r2947#1 = RMul(r27FD,r28B7);
      real r2949#1 = RMul(r2817,r28CC);
      real r294A#1 = RAdd(r2945,r2947);
      real r294B#2 = RAdd(r294A,r2949);
      real r294E#1 = RMul(r27DB,r28A0);
      real r2950#1 = RMul(r27FD,r288C);
      real r2952#1 = RMul(r2817,r28D0);
      real r2953#1 = RAdd(r294E,r2950);
      real r2954#1 = RAdd(r2953,r2952);
      real r2956#1 = RMul(r27DB,r28A2);
      real r2958#1 = RMul(r27FD,r2894);
      real r295A#1 = RMul(r2817,r28D3);
      real r295B#1 = RAdd(r2956,r2958);
      real r295C#2 = RAdd(r295B,r295A);
      real r295E#1 = RMul(r27DB,r28A4);
      real r2960#1 = RMul(r27FD,r289C);
      real r2962#1 = RMul(r2817,r28D6);
      real r2963#1 = RAdd(r295E,r2960);
      real r2964#2 = RAdd(r2963,r2962);
      real r2967#1 = RMul(r27DB,r28A9);
      real r2969#1 = RMul(r27FD,r28BB);
      real r296B#1 = RMul(r2817,r288C);
      real r296C#1 = RAdd(r2967,r2969);
      real r296D#1 = RAdd(r296C,r296B);
      real r296F#1 = RMul(r27DB,r28AC);
      real r2971#1 = RMul(r27FD,r28BE);
      real r2973#1 = RMul(r2817,r2894);
      real r2974#1 = RAdd(r296F,r2971);
      real r2975#2 = RAdd(r2974,r2973);
      real r2977#1 = RMul(r27DB,r28AF);
      real r2979#1 = RMul(r27FD,r28C1);
      real r297B#1 = RMul(r2817,r289C);
      real r297C#1 = RAdd(r2977,r2979);
      real r297D#2 = RAdd(r297C,r297B);
      real r2981#1 = RMul(r27E6,r288C);
      real r2983#1 = RMul(r2804,r28B3);
      real r2985#1 = RMul(r281E,r28C6);
      real r2986#1 = RAdd(r2981,r2983);
      real r2987#2 = RAdd(r2986,r2985);
      real r2988#1 = RMul(r27E6,r2894);
      real r2989#1 = RMul(r2804,r28B5);
      real r298A#1 = RMul(r281E,r28C9);
      real r298B#1 = RAdd(r2988,r2989);
      real r298C#1 = RAdd(r298B,r298A);
      real r298D#1 = RMul(r27E6,r289C);
      real r298E#1 = RMul(r2804,r28B7);
      real r298F#1 = RMul(r281E,r28CC);
      real r2990#1 = RAdd(r298D,r298E);
      real r2991#2 = RAdd(r2990,r298F);
      real r2993#1 = RMul(r27E6,r28A0);
      real r2994#1 = RMul(r2804,r288C);
      real r2995#1 = RMul(r281E,r28D0);
      real r2996#1 = RAdd(r2993,r2994);
      real r2997#2 = RAdd(r2996,r2995);
      real r2998#1 = RMul(r27E6,r28A2);
      real r2999#1 = RMul(r2804,r2894);
      real r299A#1 = RMul(r281E,r28D3);
      real r299B#1 = RAdd(r2998,r2999);
      real r299C#1 = RAdd(r299B,r299A);
      real r299D#1 = RMul(r27E6,r28A4);
      real r299E#1 = RMul(r2804,r289C);
      real r299F#1 = RMul(r281E,r28D6);
      real r29A0#1 = RAdd(r299D,r299E);
      real r29A1#2 = RAdd(r29A0,r299F);
      real r29A3#1 = RMul(r27E6,r28A9);
      real r29A4#1 = RMul(r2804,r28BB);
      real r29A5#1 = RMul(r281E,r288C);
      real r29A6#1 = RAdd(r29A3,r29A4);
      real r29A7#2 = RAdd(r29A6,r29A5);
      real r29A8#1 = RMul(r27E6,r28AC);
      real r29A9#1 = RMul(r2804,r28BE);
      real r29AA#1 = RMul(r281E,r2894);
      real r29AB#1 = RAdd(r29A8,r29A9);
      real r29AC#1 = RAdd(r29AB,r29AA);
      real r29AD#1 = RMul(r27E6,r28AF);
      real r29AE#1 = RMul(r2804,r28C1);
      real r29AF#1 = RMul(r281E,r289C);
      real r29B0#1 = RAdd(r29AD,r29AE);
      real r29B1#2 = RAdd(r29B0,r29AF);
      real r29B5#1 = RMul(r27F1,r288C);
      real r29B7#1 = RMul(r280B,r28B3);
      real r29B9#1 = RMul(r2825,r28C6);
      real r29BA#1 = RAdd(r29B5,r29B7);
      real r29BB#2 = RAdd(r29BA,r29B9);
      real r29BC#1 = RMul(r27F1,r2894);
      real r29BD#1 = RMul(r280B,r28B5);
      real r29BE#1 = RMul(r2825,r28C9);
      real r29BF#1 = RAdd(r29BC,r29BD);
      real r29C0#2 = RAdd(r29BF,r29BE);
      real r29C1#1 = RMul(r27F1,r289C);
      real r29C2#1 = RMul(r280B,r28B7);
      real r29C3#1 = RMul(r2825,r28CC);
      real r29C4#1 = RAdd(r29C1,r29C2);
      real r29C5#1 = RAdd(r29C4,r29C3);
      real r29C7#1 = RMul(r27F1,r28A0);
      real r29C8#1 = RMul(r280B,r288C);
      real r29C9#1 = RMul(r2825,r28D0);
      real r29CA#1 = RAdd(r29C7,r29C8);
      real r29CB#2 = RAdd(r29CA,r29C9);
      real r29CC#1 = RMul(r27F1,r28A2);
      real r29CD#1 = RMul(r280B,r2894);
      real r29CE#1 = RMul(r2825,r28D3);
      real r29CF#1 = RAdd(r29CC,r29CD);
      real r29D0#2 = RAdd(r29CF,r29CE);
      real r29D1#1 = RMul(r27F1,r28A4);
      real r29D2#1 = RMul(r280B,r289C);
      real r29D3#1 = RMul(r2825,r28D6);
      real r29D4#1 = RAdd(r29D1,r29D2);
      real r29D5#1 = RAdd(r29D4,r29D3);
      real r29D7#1 = RMul(r27F1,r28A9);
      real r29D8#1 = RMul(r280B,r28BB);
      real r29D9#1 = RMul(r2825,r288C);
      real r29DA#1 = RAdd(r29D7,r29D8);
      real r29DB#2 = RAdd(r29DA,r29D9);
      real r29DC#1 = RMul(r27F1,r28AC);
      real r29DD#1 = RMul(r280B,r28BE);
      real r29DE#1 = RMul(r2825,r2894);
      real r29DF#1 = RAdd(r29DC,r29DD);
      real r29E0#2 = RAdd(r29DF,r29DE);
      real r29E1#1 = RMul(r27F1,r28AF);
      real r29E2#1 = RMul(r280B,r28C1);
      real r29E3#1 = RMul(r2825,r289C);
      real r29E4#1 = RAdd(r29E1,r29E2);
      real r29E5#1 = RAdd(r29E4,r29E3);
      tensor[3] probe_l_142AA1#1 = <tensor[3]>[r27DB,r27FD,r2817];
      tensor[3] probe_l_152AEE#3 = <tensor[3]>[r27E6,r2804,r281E];
      tensor[3] tensor2B99#1 = <tensor[3]>[r289C,r28B7,r28CC];
      tensor[3] tensor2B9F#1 = <tensor[3]>[r28A4,r289C,r28D6];
      tensor[3] tensor2BA6#1 = <tensor[3]>[r28AF,r28C1,r289C];
      real vdot2BC9#1 = VDot<3>(probe_l_152AEE,tensor2B99);
      real vdot2BCB#1 = VDot<3>(probe_l_152AEE,tensor2B9F);
      real vdot2BCD#1 = VDot<3>(probe_l_152AEE,tensor2BA6);
      tensor[3] op1_e3_l_182BC7#1 = <tensor[3]>[vdot2BC9,vdot2BCB,vdot2BCD];
      real op1_e3_l_192BD6#1 = VDot<3>(probe_l_142AA1,op1_e3_l_182BC7);
      real r2BDC#2 = RMul(basisEval27B8,r293B);
      real r2BDE#1 = RMul(basisEval27B8,r2943);
      real r2BE0#2 = RMul(basisEval27B8,r294B);
      real r2BE2#2 = RMul(basisEval27B8,r2987);
      real r2BE4#3 = RMul(basisEval27B8,r298C);
      real r2BE7#1 = RMul(one27B3,r2991);
      real r2BE9#2 = RMul(basisEval27B8,r29BB);
      real r2BEC#1 = RMul(coeff27B2,r29C0);
      real r2BEE#3 = RMul(basisEval27B8,r29C5);
      real r2BEF#2 = RAdd(r2BDC,r2BDE);
      real r2BF0#1 = RAdd(r2BEF,r2BE0);
      real r2BF1#1 = RAdd(r2BF0,r2BE2);
      real r2BF2#1 = RAdd(r2BF1,r2BE4);
      real r2BF3#1 = RAdd(r2BF2,r2BE7);
      real r2BF4#1 = RAdd(r2BF3,r2BE9);
      real r2BF5#1 = RAdd(r2BF4,r2BEC);
      real r2BF6#1 = RAdd(r2BF5,r2BEE);
      real r2BF8#2 = RMul(basisEval27B8,r2954);
      real r2BFA#1 = RMul(basisEval27B8,r295C);
      real r2BFC#2 = RMul(basisEval27B8,r2964);
      real r2BFE#2 = RMul(basisEval27B8,r2997);
      real r2C00#3 = RMul(basisEval27B8,r299C);
      real r2C02#1 = RMul(one27B3,r29A1);
      real r2C04#2 = RMul(basisEval27B8,r29CB);
      real r2C06#1 = RMul(coeff27B2,r29D0);
      real r2C08#3 = RMul(basisEval27B8,r29D5);
      real r2C09#2 = RAdd(r2BF8,r2BFA);
      real r2C0A#1 = RAdd(r2C09,r2BFC);
      real r2C0B#1 = RAdd(r2C0A,r2BFE);
      real r2C0C#1 = RAdd(r2C0B,r2C00);
      real r2C0D#1 = RAdd(r2C0C,r2C02);
      real r2C0E#1 = RAdd(r2C0D,r2C04);
      real r2C0F#1 = RAdd(r2C0E,r2C06);
      real r2C10#1 = RAdd(r2C0F,r2C08);
      real r2C12#2 = RMul(basisEval27B8,r296D);
      real r2C14#1 = RMul(basisEval27B8,r2975);
      real r2C16#2 = RMul(basisEval27B8,r297D);
      real r2C18#2 = RMul(basisEval27B8,r29A7);
      real r2C1A#3 = RMul(basisEval27B8,r29AC);
      real r2C1C#1 = RMul(one27B3,r29B1);
      real r2C1E#2 = RMul(basisEval27B8,r29DB);
      real r2C20#1 = RMul(coeff27B2,r29E0);
      real r2C22#3 = RMul(basisEval27B8,r29E5);
      real r2C23#2 = RAdd(r2C12,r2C14);
      real r2C24#1 = RAdd(r2C23,r2C16);
      real r2C25#1 = RAdd(r2C24,r2C18);
      real r2C26#1 = RAdd(r2C25,r2C1A);
      real r2C27#1 = RAdd(r2C26,r2C1C);
      real r2C28#1 = RAdd(r2C27,r2C1E);
      real r2C29#1 = RAdd(r2C28,r2C20);
      real r2C2A#1 = RAdd(r2C29,r2C22);
      real r2C2C#1 = RMul(coeff27B2,r294B);
      real r2C2D#2 = RMul(basisEval27B8,r2991);
      real r2C2E#1 = RMul(one27B3,r29BB);
      real r2C2F#2 = RMul(basisEval27B8,r29C0);
      real r2C30#1 = RAdd(r2BEF,r2C2C);
      real r2C31#1 = RAdd(r2C30,r2BE2);
      real r2C32#1 = RAdd(r2C31,r2BE4);
      real r2C33#1 = RAdd(r2C32,r2C2D);
      real r2C34#1 = RAdd(r2C33,r2C2E);
      real r2C35#1 = RAdd(r2C34,r2C2F);
      real r2C36#1 = RAdd(r2C35,r2BEE);
      real r2C37#1 = RMul(coeff27B2,r2964);
      real r2C38#2 = RMul(basisEval27B8,r29A1);
      real r2C39#1 = RMul(one27B3,r29CB);
      real r2C3A#2 = RMul(basisEval27B8,r29D0);
      real r2C3B#1 = RAdd(r2C09,r2C37);
      real r2C3C#1 = RAdd(r2C3B,r2BFE);
      real r2C3D#1 = RAdd(r2C3C,r2C00);
      real r2C3E#1 = RAdd(r2C3D,r2C38);
      real r2C3F#1 = RAdd(r2C3E,r2C39);
      real r2C40#1 = RAdd(r2C3F,r2C3A);
      real r2C41#1 = RAdd(r2C40,r2C08);
      real r2C42#1 = RMul(coeff27B2,r297D);
      real r2C43#2 = RMul(basisEval27B8,r29B1);
      real r2C44#1 = RMul(one27B3,r29DB);
      real r2C45#2 = RMul(basisEval27B8,r29E0);
      real r2C46#1 = RAdd(r2C23,r2C42);
      real r2C47#1 = RAdd(r2C46,r2C18);
      real r2C48#1 = RAdd(r2C47,r2C1A);
      real r2C49#1 = RAdd(r2C48,r2C43);
      real r2C4A#1 = RAdd(r2C49,r2C44);
      real r2C4B#1 = RAdd(r2C4A,r2C45);
      real r2C4C#1 = RAdd(r2C4B,r2C22);
      real r2C4E#1 = RMul(one27B3,r2943);
      real r2C4F#1 = RMul(coeff27B2,r2987);
      real r2C50#1 = RAdd(r2BDC,r2C4E);
      real r2C51#1 = RAdd(r2C50,r2BE0);
      real r2C52#1 = RAdd(r2C51,r2C4F);
      real r2C53#1 = RAdd(r2C52,r2BE4);
      real r2C54#1 = RAdd(r2C53,r2C2D);
      real r2C55#1 = RAdd(r2C54,r2BE9);
      real r2C56#1 = RAdd(r2C55,r2C2F);
      real r2C57#1 = RAdd(r2C56,r2BEE);
      real r2C58#1 = RMul(one27B3,r295C);
      real r2C59#1 = RMul(coeff27B2,r2997);
      real r2C5A#1 = RAdd(r2BF8,r2C58);
      real r2C5B#1 = RAdd(r2C5A,r2BFC);
      real r2C5C#1 = RAdd(r2C5B,r2C59);
      real r2C5D#1 = RAdd(r2C5C,r2C00);
      real r2C5E#1 = RAdd(r2C5D,r2C38);
      real r2C5F#1 = RAdd(r2C5E,r2C04);
      real r2C60#1 = RAdd(r2C5F,r2C3A);
      real r2C61#1 = RAdd(r2C60,r2C08);
      real r2C62#1 = RMul(one27B3,r2975);
      real r2C63#1 = RMul(coeff27B2,r29A7);
      real r2C64#1 = RAdd(r2C12,r2C62);
      real r2C65#1 = RAdd(r2C64,r2C16);
      real r2C66#1 = RAdd(r2C65,r2C63);
      real r2C67#1 = RAdd(r2C66,r2C1A);
      real r2C68#1 = RAdd(r2C67,r2C43);
      real r2C69#1 = RAdd(r2C68,r2C1E);
      real r2C6A#1 = RAdd(r2C69,r2C45);
      real r2C6B#1 = RAdd(r2C6A,r2C22);
      real realLit2D03#1 = 0.2e1;
      real op1_e3_l_212D02#9 = RMul(realLit2D03,op1_e3_l_192BD6);
      real varAcc2D09#1 = VIndex<3,0>(xn2D08);
      real varAcc2D0A#1 = VIndex<3,1>(xn2D08);
      real varAcc2D0B#1 = VIndex<3,2>(xn2D08);
      real prod2D10#2 = RMul(varAcc2D09,prod27B4);
      real prod2D12#1 = RMul(varAcc2D0A,one27B3);
      real prod2D13#2 = RMul(one27B3,prod2D12);
      real prod2D15#1 = RMul(one27B3,varAcc2D0B);
      real prod2D16#2 = RMul(one27B3,prod2D15);
      real mult2D19#1 = RMul(coeff27B2,prod2D16);
      real mult2D1A#1 = RMul(coeff27B2,prod2D13);
      real mult2D1B#1 = RMul(coeff27B2,prod2D10);
      real sum2D1C#1 = RAdd(mult2D1A,mult2D1B);
      real sum2D1D#1 = RAdd(mult2D19,sum2D1C);
      real sum2D1E#3 = RAdd(basisEval27B7,sum2D1D);
      real basisEval2D20#3 = RMul(one27B3,prod2D10);
      real basisEval2D21#3 = RMul(one27B3,prod2D13);
      real basisEval2D22#3 = RMul(one27B3,prod2D16);
      real r2D43#1 = RMul(dof_load2764,sum2D1E);
      real r2D46#1 = RMul(dof_load276D,basisEval2D20);
      real r2D49#1 = RMul(dof_load2776,basisEval2D21);
      real r2D4C#1 = RMul(dof_load277F,basisEval2D22);
      real r2D4D#1 = RAdd(r2D43,r2D46);
      real r2D4E#1 = RAdd(r2D4D,r2D49);
      real r2D4F#1 = RAdd(r2D4E,r2D4C);
      real r2D51#1 = RMul(dof_load2765,sum2D1E);
      real r2D53#1 = RMul(dof_load276E,basisEval2D20);
      real r2D55#1 = RMul(dof_load2777,basisEval2D21);
      real r2D57#1 = RMul(dof_load2780,basisEval2D22);
      real r2D58#1 = RAdd(r2D51,r2D53);
      real r2D59#1 = RAdd(r2D58,r2D55);
      real r2D5A#1 = RAdd(r2D59,r2D57);
      real r2D5C#1 = RMul(dof_load2766,sum2D1E);
      real r2D5E#1 = RMul(dof_load276F,basisEval2D20);
      real r2D60#1 = RMul(dof_load2778,basisEval2D21);
      real r2D62#1 = RMul(dof_load2781,basisEval2D22);
      real r2D63#1 = RAdd(r2D5C,r2D5E);
      real r2D64#1 = RAdd(r2D63,r2D60);
      real r2D65#1 = RAdd(r2D64,r2D62);
      tensor[3] probe_l_222D40#1 = <tensor[3]>[r2D4F,r2D5A,r2D65];
      real r2D8F#1 = RDiv(r2BF6,op1_e3_l_212D02);
      real r2D91#1 = RDiv(r2C10,op1_e3_l_212D02);
      real r2D93#1 = RDiv(r2C2A,op1_e3_l_212D02);
      tensor[3] tensor2D94#1 = <tensor[3]>[r2D8F,r2D91,r2D93];
      real r2D96#1 = RDiv(r2C36,op1_e3_l_212D02);
      real r2D98#1 = RDiv(r2C41,op1_e3_l_212D02);
      real r2D9A#1 = RDiv(r2C4C,op1_e3_l_212D02);
      tensor[3] tensor2D9B#1 = <tensor[3]>[r2D96,r2D98,r2D9A];
      real r2D9D#1 = RDiv(r2C57,op1_e3_l_212D02);
      real r2D9F#1 = RDiv(r2C61,op1_e3_l_212D02);
      real r2DA1#1 = RDiv(r2C6B,op1_e3_l_212D02);
      tensor[3] tensor2DA2#1 = <tensor[3]>[r2D9D,r2D9F,r2DA1];
      tensor[3] op1_e3_l_242DBA#3 = VSub<3>(probe_l_222D40,pos1FE6);
      real vdot2DBF#1 = VDot<3>(tensor2D94,op1_e3_l_242DBA);
      real vdot2DC1#1 = VDot<3>(tensor2D9B,op1_e3_l_242DBA);
      real vdot2DC3#1 = VDot<3>(tensor2DA2,op1_e3_l_242DBA);
      tensor[3] op1_e3_l_252DBD#3 = <tensor[3]>[vdot2DBF,vdot2DC1,vdot2DC3];
      tensor[3] xn2DCC#4 = VSub<3>(xn2D08,op1_e3_l_252DBD);
      real _t2DCF#2 = 0.1e-7;
      real _t2DD1#1 = RMul(_t2DCF,_t2DCF);
      real _t2E33#1 = VDot<3>(op1_e3_l_252DBD,op1_e3_l_252DBD);
      bool _t2E36#1 = GTE<real>(_t2DD1,_t2E33);
      if _t2E36 then goto ASSIGN2E3C else goto JOIN2E65
    ASSIGN2E3C:  preds = [COND2E38]
      real _t2E3B#4 = 0.1e-4;
      real _t2E3D#1 = RAdd(one27B3,_t2E3B);
      tensor[3] _t2E40#1 = <tensor[3]>[one27B3,one27B3,one27B3];
      real _t2E42#1 = VDot<3>(_t2E40,xn2DCC);
      bool _t2E45#1 = GT<real>(_t2E3D,_t2E42);
      tensor[3] _t2E47#1 = <tensor[3]>[_t2E3B,_t2E3B,_t2E3B];
      tensor[3] _t2E49#3 = VAdd<3>(_t2E47,xn2DCC);
      real _t2E4C#1 = VIndex<3,0>(_t2E49);
      real _t2E4E#3 = -0.e0;
      bool _t2E50#1 = GT<real>(_t2E4C,_t2E4E);
      real _t2E52#1 = VIndex<3,1>(_t2E49);
      bool _t2E54#1 = GT<real>(_t2E52,_t2E4E);
      real _t2E56#1 = VIndex<3,2>(_t2E49);
      bool _t2E58#1 = GT<real>(_t2E56,_t2E4E);
      bool _t2E5A#1 = BAnd(_t2E54,_t2E58);
      bool _t2E5C#1 = BAnd(_t2E50,_t2E5A);
      bool _t2E5E#1 = BAnd(_t2E45,_t2E5C);
      if _t2E5E then goto ASSIGN2E62 else goto JOIN2E64
    ASSIGN2E62:  preds = [COND2E60]
      femData:MeshPos _t2E61#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellInt273A,xn2DCC,pos1FE6);
      return _t2E61
      goto JOIN2E64
    JOIN2E64:  preds = [*RETURN(_t2E61)2E63,COND2E60]
      goto JOIN2E65
    JOIN2E65:  preds = [JOIN2E64,COND2E38]
      int newtonInt2E66#2 = IAdd(newtonInt2E67,_t1FF2);
      bool _t2E69#1 = GTE<int>(newtonInt2E66,_t272F);
      if _t2E69 then goto ASSIGN2E6D else goto JOIN2E77
    ASSIGN2E6D:  preds = [COND2E6B]
      bool _t2E6C#1 = GTE<int>(cellInt273A,numCell1FF4);
      if _t2E6C then goto ASSIGN2E70 else goto ASSIGN2E79
    ASSIGN2E70:  preds = [COND2E6E]
      femData:MeshPos _t2E6F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E6F
      goto JOIN2E74
    JOIN2E74:  preds = [*RETURN(_t2E6F)2E71,ASSIGN2E79]
      int cellInt2E72#1 = phi(cellInt2E73)
      goto JOIN2E77
    JOIN2E77:  preds = [JOIN2E74,COND2E6B]
      int cellInt2E75#1 = phi(cellInt2E72,cellInt273A)
      int newtonInt2E76#1 = phi(newtonInt1FEC,newtonInt2E66)
      goto FOREACH2738
    ASSIGN2E79:  preds = [COND2E6E]
      int cellInt2E73#1 = IAdd(cellInt273A,_t1FF2);
      goto JOIN2E74
    ASSIGN2E7B:  preds = [FOREACH2738]
      string _t2E7A#1 = "Bad end 2";
      string _t2E7C#1 = "\n";
      Print<[string,string]>(_t2E7A,_t2E7C);
      femData:MeshPos _t2E7F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E7F
}
## input initialization
  ENTRY1D28:  preds = []
    real isoval1D29#1 = 0.2e0;
    globals.isoval1D09 = isoval1D29;
    real thick1D2C#1 = 0.7e-1;
    globals.thick1D0A = thick1D2C;
    real _t1D2F#2 = 0.3e1;
    real _t1D31#1 = -0.3e1;
    tensor[3] camEye1D33#1 = <tensor[3]>[_t1D2F,_t1D31,_t1D2F];
    globals.camEye1D0B = camEye1D33;
    real _t1D36#3 = 0.5e0;
    tensor[3] camAt1D38#1 = <tensor[3]>[_t1D36,_t1D36,_t1D36];
    globals.camAt1D0C = camAt1D38;
    real _t1D3B#2 = 0.e0;
    real _t1D3D#2 = 0.1e1;
    tensor[3] camUp1D3F#2 = <tensor[3]>[_t1D3B,_t1D3B,_t1D3D];
    globals.camUp1D0D = camUp1D3F;
    real camFOV1D42#1 = 0.137e2;
    globals.camFOV1D0E = camFOV1D42;
    int iresU1D45#2 = 500;
    globals.iresU1D0F = iresU1D45;
    globals.iresV1D10 = iresU1D45;
    real camNear1D49#1 = -0.2e1;
    globals.camNear1D11 = camNear1D49;
    real camFar1D4C#1 = 0.5e1;
    globals.camFar1D12 = camFar1D4C;
    globals.refStep1D13 = _t1D3D;
    real rayStep1D50#1 = 0.1e-1;
    globals.rayStep1D14 = rayStep1D50;
    globals.lightVsp1D15 = camUp1D3F;
    real phongKa1D54#1 = 0.1e0;
    globals.phongKa1D16 = phongKa1D54;
    real phongKd1D57#1 = 0.9e0;
    globals.phongKd1D17 = phongKd1D57;
    bool debug1D5A#1 = false;
    globals.debug1D18 = debug1D5A;
    int su1D5D#2 = 250;
    globals.su1D19 = su1D5D;
    globals.sv1D1A = su1D5D;
    return
## global-variable initialization
  ENTRY1D62:  preds = []
    femData:Mesh a1D63#3 = globals.a1D06;
    femData:Space 0b043B_intermedateGlobal1D65#1 = globals.0b043B_intermedateGlobal1D07;
    femData:FemFunc 0c043D_intermedateGlobal1D67#1 = globals.0c043D_intermedateGlobal1D08;
    tensor[3] camEye1D69#1 = globals.camEye1D0B;
    tensor[3] camAt1D6B#1 = globals.camAt1D0C;
    tensor[3] camUp1D6D#3 = globals.camUp1D0D;
    real camFOV1D6F#1 = globals.camFOV1D0E;
    int iresU1D71#1 = globals.iresU1D0F;
    int iresV1D73#1 = globals.iresV1D10;
    tensor[3] lightVsp1D75#5 = globals.lightVsp1D15;
    int _t1D77#1 = 0;
    int _t1D79#1 = 1;
    int _t1D7B#1 = ExtractFemItem<int,NumCell(Mesh)>(a1D63);
    int _t1D7D#1 = ISub(_t1D7B,_t1D79);
    int[] _t1D7F#1 = Range(_t1D77,_t1D7D);
    femData:MeshCell[] _t1D81#1 = <femData:MeshCell[]>{};
  FOREACH1D84:  preds = [ASSIGN1D82,NEXT1D8A]
    foreach (_t1D83 in _t1D7F) on exit goto ASSIGN1D8C
      femData:MeshCell[] _t1D88#1 = phi(_t1D81,_t1D87)
    femData:MeshCell _t1D85#1 = LoadFem<femData:MeshCell>(a1D63,_t1D83);
    femData:MeshCell[] _t1D87#1 = Append<femData:MeshCell>(_t1D88,_t1D85);
    goto FOREACH1D84
  ASSIGN1D8C:  preds = [FOREACH1D84]
    femData:Space b1D8B#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1D65,a1D63);
    femData:FemFunc c1D8D#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1D67,b1D8B);
    femData:Space _t1D8F#2 = ExtractFem<femData:Space,femData:FemFunc>(c1D8D);
    femData:Mesh _t1D91#1 = ExtractFem<femData:Mesh,femData:Space>(_t1D8F);
    image(IMAGE1D<double[3]>) I1D93#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21D99#9 = VSub<3>(camAt1D6B,camEye1D69);
    real op1_e3_l_41D9C#1 = VDot<3>(op1_e3_l_21D99,op1_e3_l_21D99);
    real camDist1D9F#4 = Sqrt(op1_e3_l_41D9C);
    globals.camDist1D1B = camDist1D9F;
    real realLit1DA4#9 = 0.1e1;
    real op1_e3_l_91DA3#6 = RDiv(realLit1DA4,camDist1D9F);
    tensor[3] camN1DA8#4 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_21D99);
    globals.camN1D1C = camN1DA8;
    real realLit1DAD#6 = 0.e0;
    real r1DAE#3 = TensorIndex<tensor[3],[0]>(camUp1D6D);
    real r1DAF#3 = RMul(realLit1DAD,r1DAE);
    real r1DB0#3 = TensorIndex<tensor[3],[1]>(camUp1D6D);
    real r1DB1#3 = RMul(realLit1DAD,r1DB0);
    real r1DB2#3 = TensorIndex<tensor[3],[2]>(camUp1D6D);
    real r1DB3#5 = RMul(realLit1DAD,r1DB2);
    real r1DB4#3 = RAdd(r1DAF,r1DB1);
    real r1DB5#3 = RAdd(r1DB4,r1DB3);
    real r1DB7#1 = RMul(realLit1DA4,r1DB2);
    real r1DB8#1 = RAdd(r1DB4,r1DB7);
    real realLit1DB9#6 = -0.1e1;
    real r1DBA#1 = RMul(realLit1DB9,r1DB0);
    real r1DBB#1 = RAdd(r1DAF,r1DBA);
    real r1DBC#1 = RAdd(r1DBB,r1DB3);
    tensor[3] tensor1DBD#1 = <tensor[3]>[r1DB5,r1DB8,r1DBC];
    real r1DBE#1 = RMul(realLit1DB9,r1DB2);
    real r1DBF#1 = RAdd(r1DB4,r1DBE);
    real r1DC0#1 = RMul(realLit1DA4,r1DAE);
    real r1DC1#1 = RAdd(r1DC0,r1DB1);
    real r1DC2#1 = RAdd(r1DC1,r1DB3);
    tensor[3] tensor1DC3#1 = <tensor[3]>[r1DBF,r1DB5,r1DC2];
    real r1DC4#1 = RMul(realLit1DA4,r1DB0);
    real r1DC5#1 = RAdd(r1DAF,r1DC4);
    real r1DC6#1 = RAdd(r1DC5,r1DB3);
    real r1DC7#1 = RMul(realLit1DB9,r1DAE);
    real r1DC8#1 = RAdd(r1DC7,r1DB1);
    real r1DC9#1 = RAdd(r1DC8,r1DB3);
    tensor[3] tensor1DCA#1 = <tensor[3]>[r1DC6,r1DC9,r1DB5];
    real vdot1DED#1 = VDot<3>(op1_e3_l_21D99,tensor1DBD);
    real vdot1DEF#1 = VDot<3>(op1_e3_l_21D99,tensor1DC3);
    real vdot1DF1#1 = VDot<3>(op1_e3_l_21D99,tensor1DCA);
    tensor[3] op1_e3_l_171DEB#6 = <tensor[3]>[vdot1DED,vdot1DEF,vdot1DF1];
    real op1_e3_l_341DFA#1 = VDot<3>(op1_e3_l_171DEB,op1_e3_l_171DEB);
    real r1DFE#1 = RMul(op1_e3_l_91DA3,op1_e3_l_91DA3);
    real op1_e3_l_351DFD#1 = RMul(r1DFE,op1_e3_l_341DFA);
    real op1_e3_l_361E02#1 = Sqrt(op1_e3_l_351DFD);
    tensor[3] op1_e3_l_371E05#1 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_171DEB);
    real op1_e3_l_381E08#2 = RDiv(realLit1DA4,op1_e3_l_361E02);
    tensor[3] camU1E0D#4 = VScale<3>(op1_e3_l_381E08,op1_e3_l_371E05);
    globals.camU1D1D = camU1E0D;
    real r1E13#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21D99);
    real r1E14#3 = RMul(realLit1DAD,r1E13);
    real r1E15#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21D99);
    real r1E16#3 = RMul(realLit1DAD,r1E15);
    real r1E17#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21D99);
    real r1E18#5 = RMul(realLit1DAD,r1E17);
    real r1E19#3 = RAdd(r1E14,r1E16);
    real r1E1A#3 = RAdd(r1E19,r1E18);
    real r1E1C#1 = RMul(realLit1DA4,r1E17);
    real r1E1D#1 = RAdd(r1E19,r1E1C);
    real r1E1F#1 = RMul(realLit1DB9,r1E15);
    real r1E20#1 = RAdd(r1E14,r1E1F);
    real r1E21#1 = RAdd(r1E20,r1E18);
    tensor[3] tensor1E22#1 = <tensor[3]>[r1E1A,r1E1D,r1E21];
    real r1E23#1 = RMul(realLit1DB9,r1E17);
    real r1E24#1 = RAdd(r1E19,r1E23);
    real r1E25#1 = RMul(realLit1DA4,r1E13);
    real r1E26#1 = RAdd(r1E25,r1E16);
    real r1E27#1 = RAdd(r1E26,r1E18);
    tensor[3] tensor1E28#1 = <tensor[3]>[r1E24,r1E1A,r1E27];
    real r1E29#1 = RMul(realLit1DA4,r1E15);
    real r1E2A#1 = RAdd(r1E14,r1E29);
    real r1E2B#1 = RAdd(r1E2A,r1E18);
    real r1E2C#1 = RMul(realLit1DB9,r1E13);
    real r1E2D#1 = RAdd(r1E2C,r1E16);
    real r1E2E#1 = RAdd(r1E2D,r1E18);
    tensor[3] tensor1E2F#1 = <tensor[3]>[r1E2B,r1E2E,r1E1A];
    real vdot1E52#1 = VDot<3>(op1_e3_l_171DEB,tensor1E22);
    real vdot1E54#1 = VDot<3>(op1_e3_l_171DEB,tensor1E28);
    real vdot1E56#1 = VDot<3>(op1_e3_l_171DEB,tensor1E2F);
    tensor[3] op1_e3_l_471E50#1 = <tensor[3]>[vdot1E52,vdot1E54,vdot1E56];
    tensor[3] op1_e3_l_501E5F#3 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_471E50);
    real r1E63#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501E5F);
    real r1E64#3 = RMul(op1_e3_l_381E08,op1_e3_l_91DA3);
    real r1E65#2 = RMul(r1E64,r1E63);
    real r1E66#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501E5F);
    real r1E67#2 = RMul(r1E64,r1E66);
    real r1E68#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501E5F);
    real r1E69#2 = RMul(r1E64,r1E68);
    tensor[3] camV1E62#1 = <tensor[3]>[r1E65,r1E67,r1E69];
    globals.camV1D1E = camV1E62;
    real _t1E74#1 = 0.314159265358979323846264338327950288e1;
    real _t1E76#1 = 0.36e3;
    real op1_e3_l_51E78#1 = RMul(camFOV1D6F,_t1E74);
    real op1_e3_l_61E7B#1 = RDiv(op1_e3_l_51E78,_t1E76);
    real op1_e3_l_101E7E#2 = Tan(op1_e3_l_61E7B);
    real camVmax1E81#1 = RMul(op1_e3_l_101E7E,camDist1D9F);
    globals.camVmax1D1F = camVmax1E81;
    real _t1E85#1 = IntToReal(iresU1D71);
    real _t1E87#1 = IntToReal(iresV1D73);
    real r1E8A#1 = RMul(_t1E85,op1_e3_l_101E7E);
    real op1_e3_l_141E89#1 = RMul(r1E8A,camDist1D9F);
    real camUmax1E8E#1 = RDiv(op1_e3_l_141E89,_t1E87);
    globals.camUmax1D20 = camUmax1E8E;
    real op1_e3_l_31E94#1 = VDot<3>(lightVsp1D75,lightVsp1D75);
    real op1_e3_l_41E97#1 = Sqrt(op1_e3_l_31E94);
    real op1_e3_l_51E9A#1 = RDiv(realLit1DA4,op1_e3_l_41E97);
    real r1EA0#1 = VIndex<3,0>(camU1E0D);
    real r1EA1#3 = TensorIndex<tensor[3],[0]>(lightVsp1D75);
    real r1EA2#1 = RMul(r1EA0,r1EA1);
    real r1EA4#3 = TensorIndex<tensor[3],[1]>(lightVsp1D75);
    real r1EA5#1 = RMul(r1E65,r1EA4);
    real r1EA6#1 = VIndex<3,0>(camN1DA8);
    real r1EA7#3 = TensorIndex<tensor[3],[2]>(lightVsp1D75);
    real r1EA8#1 = RMul(r1EA6,r1EA7);
    real r1EA9#1 = RAdd(r1EA2,r1EA5);
    real r1EAA#1 = RAdd(r1EA9,r1EA8);
    real r1EAB#1 = VIndex<3,1>(camU1E0D);
    real r1EAC#1 = RMul(r1EAB,r1EA1);
    real r1EAE#1 = RMul(r1E67,r1EA4);
    real r1EAF#1 = VIndex<3,1>(camN1DA8);
    real r1EB0#1 = RMul(r1EAF,r1EA7);
    real r1EB1#1 = RAdd(r1EAC,r1EAE);
    real r1EB2#1 = RAdd(r1EB1,r1EB0);
    real r1EB3#1 = VIndex<3,2>(camU1E0D);
    real r1EB4#1 = RMul(r1EB3,r1EA1);
    real r1EB6#1 = RMul(r1E69,r1EA4);
    real r1EB7#1 = VIndex<3,2>(camN1DA8);
    real r1EB8#1 = RMul(r1EB7,r1EA7);
    real r1EB9#1 = RAdd(r1EB4,r1EB6);
    real r1EBA#1 = RAdd(r1EB9,r1EB8);
    tensor[3] op1_e3_l_61E9F#1 = <tensor[3]>[r1EAA,r1EB2,r1EBA];
    tensor[3] light1ED8#1 = VScale<3>(op1_e3_l_51E9A,op1_e3_l_61E9F);
    globals.light1D21 = light1ED8;
    globals._t1D22 = _t1D91;
    globals._tX1D23 = _t1D8F;
    globals.c1D24 = c1D8D;
    globals.I1D27 = I1D93;
    return
## strand
  strand raycast (int ui1EE3#2, int vi1EE4#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1EEF:  preds = []
        int iresU1EF0#1 = globals.iresU1D0F;
        int iresV1EF2#1 = globals.iresV1D10;
        real camNear1EF4#1 = globals.camNear1D11;
        real camDist1EF6#1 = globals.camDist1D1B;
        tensor[3] camN1EF8#1 = globals.camN1D1C;
        tensor[3] camU1EFA#1 = globals.camU1D1D;
        tensor[3] camV1EFC#1 = globals.camV1D1E;
        real camVmax1EFE#3 = globals.camVmax1D1F;
        real camUmax1F00#2 = globals.camUmax1D20;
        real _t1F02#4 = -0.5e0;
        real _t1F04#1 = IntToReal(ui1EE3);
        real _t1F06#1 = IntToReal(iresU1EF0);
        real _t1F08#2 = 0.5e0;
        real op1_e3_l_61F0A#1 = RSub(_t1F06,_t1F08);
        real op1_e3_l_71F0D#1 = RSub(_t1F04,_t1F02);
        real op1_e3_l_81F10#1 = RSub(op1_e3_l_61F0A,_t1F02);
        real op1_e3_l_91F13#2 = RNeg(camUmax1F00);
        real op1_e3_l_101F16#1 = RDiv(op1_e3_l_71F0D,op1_e3_l_81F10);
        real op1_e3_l_111F19#1 = RSub(camUmax1F00,op1_e3_l_91F13);
        real op1_e3_l_131F1C#1 = RMul(op1_e3_l_101F16,op1_e3_l_111F19);
        real rayU1F1F#2 = RAdd(op1_e3_l_91F13,op1_e3_l_131F1C);
        real _t1F22#1 = IntToReal(vi1EE4);
        real _t1F24#1 = IntToReal(iresV1EF2);
        real op1_e3_l_61F26#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_71F29#1 = RSub(_t1F22,_t1F02);
        real op1_e3_l_81F2C#1 = RSub(op1_e3_l_61F26,_t1F02);
        real op1_e3_l_91F2F#1 = RNeg(camVmax1EFE);
        real op1_e3_l_101F32#1 = RDiv(op1_e3_l_71F29,op1_e3_l_81F2C);
        real op1_e3_l_111F35#1 = RSub(op1_e3_l_91F2F,camVmax1EFE);
        real op1_e3_l_121F38#1 = RMul(op1_e3_l_101F32,op1_e3_l_111F35);
        real rayV1F3B#2 = RAdd(camVmax1EFE,op1_e3_l_121F38);
        tensor[3] op1_e3_l_331F4D#1 = VScale<3>(rayU1F1F,camU1EFA);
        tensor[3] op1_e3_l_341F50#1 = VScale<3>(rayV1F3B,camV1EFC);
        tensor[3] op1_e3_l_351F53#3 = VAdd<3>(op1_e3_l_331F4D,op1_e3_l_341F50);
        real realLit1F57#2 = 0.1e1;
        real r1F58#3 = RDiv(realLit1F57,camDist1EF6);
        real r1F59#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351F53);
        real r1F5A#1 = RMul(r1F58,r1F59);
        real r1F5B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351F53);
        real r1F5C#1 = RMul(r1F58,r1F5B);
        real r1F5D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351F53);
        real r1F5E#1 = RMul(r1F58,r1F5D);
        tensor[3] op1_e3_l_361F56#1 = <tensor[3]>[r1F5A,r1F5C,r1F5E];
        tensor[3] rayVec1F69#1 = VAdd<3>(camN1EF8,op1_e3_l_361F56);
        real _t1F6E#8 = 0.e0;
        tensor[3] rgb1F70#1 = <tensor[3]>[_t1F6E,_t1F6E,_t1F6E];
        tensor[4] rgba1F72#1 = <tensor[4]>[_t1F6E,_t1F6E,_t1F6E,_t1F6E];
        self.rayU = rayU1F1F;
        self.rayV = rayV1F3B;
        self.rayN = camNear1EF4;
        self.rayVec = rayVec1F69;
        self.transp = realLit1F57;
        self.rgb = rgb1F70;
        self.rgba = rgba1F72;
        self.gray = _t1F6E;
        self.ui = ui1EE3;
        self.vi = vi1EE4;
        return
    end state init
    method update
        ENTRY1F7F:  preds = []
          image(IMAGE1D<double[3]>) I1F80#17 = globals.I1D27;
          real isoval1F82#1 = globals.isoval1D09;
          femData:Mesh _t1F84#17 = globals._t1D22;
          femData:Space _t1F86#10 = globals._tX1D23;
          femData:FemFunc c1F88#10 = globals.c1D24;
          femData:Mesh a1F8E#1 = globals.a1D06;
          real thick1F90#1 = globals.thick1D0A;
          tensor[3] camEye1F92#1 = globals.camEye1D0B;
          real camNear1F94#2 = globals.camNear1D11;
          real camFar1F96#2 = globals.camFar1D12;
          real refStep1F98#1 = globals.refStep1D13;
          real rayStep1F9A#2 = globals.rayStep1D14;
          real phongKa1F9C#1 = globals.phongKa1D16;
          real phongKd1F9E#1 = globals.phongKd1D17;
          bool debug1FA0#1 = globals.debug1D18;
          int su1FA2#1 = globals.su1D19;
          int sv1FA4#1 = globals.sv1D1A;
          tensor[3] light1FA6#1 = globals.light1D21;
          real rayN1FA8#4 = self.rayN;
          tensor[3] rayVec1FAA#3 = self.rayVec;
          real transp1FAC#10 = self.transp;
          tensor[3] rgb1FAE#9 = self.rgb;
          int ui1FB0#1 = self.ui;
          int vi1FB2#1 = self.vi;
          if debug1FA0 then goto ASSIGN1FB6 else goto JOIN1FC0
        ASSIGN1FB6:  preds = [COND1FB4]
          bool _t1FB5#1 = NEQ<int>(ui1FB0,su1FA2);
          if _t1FB5 then goto ASSIGN1FB9 else goto ASSIGN37E8
        ASSIGN1FB9:  preds = [COND1FB7]
          bool _t1FB8#1 = true;
          goto JOIN1FBC
        JOIN1FBC:  preds = [ASSIGN1FB9,ASSIGN37E8]
          bool _t1FBA#1 = phi(_t1FB8,_t1FBB)
          if _t1FBA then goto STABILIZE1FBE else goto JOIN1FBF
        STABILIZE1FBE:  preds = [COND1FBD]
          stabilize
          goto JOIN1FBF
        JOIN1FBF:  preds = [*STABILIZE1FBE,COND1FBD]
          goto JOIN1FC0
        JOIN1FC0:  preds = [JOIN1FBF,COND1FB4]
          tensor[3] op1_e3_l_31FC1#1 = VScale<3>(rayN1FA8,rayVec1FAA);
          tensor[3] x1FC4#6 = VAdd<3>(camEye1F92,op1_e3_l_31FC1);
          real _t1FC7#61 = 0.e0;
          real _t1FC9#2 = VIndex<3,0>(x1FC4);
          bool _t1FCB#1 = LT<real>(_t1FC7,_t1FC9);
          if _t1FCB then goto ASSIGN1FCF else goto JOIN3798
        ASSIGN1FCF:  preds = [COND1FCD]
          real _t1FCE#45 = 0.1e1;
          bool _t1FD0#1 = LT<real>(_t1FC9,_t1FCE);
          if _t1FD0 then goto ASSIGN1FD4 else goto JOIN3795
        ASSIGN1FD4:  preds = [COND1FD2]
          real _t1FD3#2 = VIndex<3,1>(x1FC4);
          bool _t1FD5#1 = LT<real>(_t1FC7,_t1FD3);
          if _t1FD5 then goto ASSIGN1FD9 else goto JOIN3792
        ASSIGN1FD9:  preds = [COND1FD7]
          bool _t1FD8#1 = LT<real>(_t1FD3,_t1FCE);
          if _t1FD8 then goto ASSIGN1FDC else goto JOIN378F
        ASSIGN1FDC:  preds = [COND1FDA]
          real _t1FDB#2 = VIndex<3,2>(x1FC4);
          bool _t1FDD#1 = LT<real>(_t1FC7,_t1FDB);
          if _t1FDD then goto ASSIGN1FE1 else goto JOIN378C
        ASSIGN1FE1:  preds = [COND1FDF]
          bool _t1FE0#1 = LT<real>(_t1FDB,_t1FCE);
          if _t1FE0 then goto ASSIGN2E82 else goto JOIN3789
        ASSIGN2E82:  preds = [COND1FE2]
          femData:MeshPos p1FE3#1 = findPos1FE4 (a1F8E,x1FC4);
          bool _t2E83#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1FE3);
          if _t2E83 then goto ASSIGN2E87 else goto ASSIGN37E3
        ASSIGN2E87:  preds = [COND2E85]
          real _t2E86#1 = 0.13e1;
          femData:MeshPos callFindPos2E88#2 = findPos1FE4 (_t1F84,x1FC4);
          int intPos2E8A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos2E88);
          tensor[3] refPos2E8C#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos2E88);
          int ilit2E8F#1 = 10;
          int mulRes2E90#10 = IMul(intPos2E8A,ilit2E8F);
          int idx2E93#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,mulRes2E90);
          int ilit2E94#22 = 1;
          int addRes2E95#1 = IAdd(mulRes2E90,ilit2E94);
          int idx2E96#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E95);
          int ilit2E97#10 = 2;
          int addRes2E98#1 = IAdd(mulRes2E90,ilit2E97);
          int idx2E99#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E98);
          int ilit2E9A#10 = 3;
          int addRes2E9B#1 = IAdd(mulRes2E90,ilit2E9A);
          int idx2E9C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9B);
          int ilit2E9D#2 = 4;
          int addRes2E9E#1 = IAdd(mulRes2E90,ilit2E9D);
          int idx2E9F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9E);
          int ilit2EA0#1 = 5;
          int addRes2EA1#1 = IAdd(mulRes2E90,ilit2EA0);
          int idx2EA2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA1);
          int ilit2EA3#1 = 6;
          int addRes2EA4#1 = IAdd(mulRes2E90,ilit2EA3);
          int idx2EA5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA4);
          int ilit2EA6#1 = 7;
          int addRes2EA7#1 = IAdd(mulRes2E90,ilit2EA6);
          int idx2EA8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA7);
          int ilit2EA9#1 = 8;
          int addRes2EAA#1 = IAdd(mulRes2E90,ilit2EA9);
          int idx2EAB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAA);
          int ilit2EAC#1 = 9;
          int addRes2EAD#1 = IAdd(mulRes2E90,ilit2EAC);
          int idx2EAE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAD);
          int mulRes2ED6#1 = IMul(ilit2E94,idx2E93);
          int mulRes2ED8#1 = IMul(ilit2E94,idx2E96);
          int mulRes2EDB#1 = IMul(ilit2E94,idx2E99);
          int mulRes2EDE#1 = IMul(ilit2E94,idx2E9C);
          int mulRes2EE1#1 = IMul(ilit2E94,idx2E9F);
          int mulRes2EE4#1 = IMul(ilit2E94,idx2EA2);
          int mulRes2EE7#1 = IMul(ilit2E94,idx2EA5);
          int mulRes2EEA#1 = IMul(ilit2E94,idx2EA8);
          int mulRes2EED#1 = IMul(ilit2E94,idx2EAB);
          int mulRes2EF0#1 = IMul(ilit2E94,idx2EAE);
          real dof2EF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED6);
          real dof2EF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED8);
          real dof2EF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDB);
          real dof2EF4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDE);
          real dof2EF5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE1);
          real dof2EF6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE4);
          real dof2EF7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE7);
          real dof2EF8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EEA);
          real dof2EF9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EED);
          real dof2EFA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EF0);
          tensor[10] dofs2EFB#4 = <tensor[10]>[dof2EF1,dof2EF2,dof2EF3,dof2EF4,dof2EF5,dof2EF6,dof2EF7,dof2EF8,dof2EF9,dof2EFA];
          real varAcc2F27#5 = VIndex<3,0>(refPos2E8C);
          real varAcc2F28#4 = VIndex<3,1>(refPos2E8C);
          real varAcc2F29#4 = VIndex<3,2>(refPos2E8C);
          real coeff2F2A#4 = 0.2e1;
          real prod22F2C#1 = RMul(varAcc2F27,varAcc2F27);
          real prod2F2E#3 = RMul(_t1FCE,_t1FCE);
          real prod2F2F#2 = RMul(prod22F2C,prod2F2E);
          real coeff2F30#7 = 0.4e1;
          real prod2F32#2 = RMul(varAcc2F28,_t1FCE);
          real prod2F33#2 = RMul(varAcc2F27,prod2F32);
          real prod2F35#2 = RMul(_t1FCE,varAcc2F29);
          real prod2F36#2 = RMul(varAcc2F27,prod2F35);
          real coeff2F37#4 = -0.3e1;
          real prod2F38#5 = RMul(varAcc2F27,prod2F2E);
          real prod22F39#1 = RMul(varAcc2F28,varAcc2F28);
          real prod2F3A#1 = RMul(prod22F39,_t1FCE);
          real prod2F3B#2 = RMul(_t1FCE,prod2F3A);
          real prod2F3C#1 = RMul(varAcc2F28,varAcc2F29);
          real prod2F3D#2 = RMul(_t1FCE,prod2F3C);
          real prod2F3E#5 = RMul(_t1FCE,prod2F32);
          real prod22F3F#1 = RMul(varAcc2F29,varAcc2F29);
          real prod2F40#1 = RMul(_t1FCE,prod22F3F);
          real prod2F41#2 = RMul(_t1FCE,prod2F40);
          real prod2F42#5 = RMul(_t1FCE,prod2F35);
          real prod2F43#4 = RMul(_t1FCE,prod2F2E);
          real mult2F44#10 = RMul(_t1FCE,prod2F43);
          real mult2F45#1 = RMul(coeff2F37,prod2F42);
          real mult2F46#2 = RMul(coeff2F2A,prod2F41);
          real mult2F47#1 = RMul(coeff2F37,prod2F3E);
          real mult2F48#2 = RMul(coeff2F30,prod2F3D);
          real mult2F49#2 = RMul(coeff2F2A,prod2F3B);
          real mult2F4A#1 = RMul(coeff2F37,prod2F38);
          real mult2F4B#2 = RMul(coeff2F30,prod2F36);
          real mult2F4C#2 = RMul(coeff2F30,prod2F33);
          real mult2F4D#2 = RMul(coeff2F2A,prod2F2F);
          real sum2F4E#1 = RAdd(mult2F4C,mult2F4D);
          real sum2F4F#1 = RAdd(mult2F4B,sum2F4E);
          real sum2F50#1 = RAdd(mult2F4A,sum2F4F);
          real sum2F51#1 = RAdd(mult2F49,sum2F50);
          real sum2F52#1 = RAdd(mult2F48,sum2F51);
          real sum2F53#1 = RAdd(mult2F47,sum2F52);
          real sum2F54#1 = RAdd(mult2F46,sum2F53);
          real sum2F55#1 = RAdd(mult2F45,sum2F54);
          real sum2F56#1 = RAdd(mult2F44,sum2F55);
          real coeff2F58#23 = -0.1e1;
          real mult2F59#1 = RMul(coeff2F58,prod2F38);
          real sum2F5A#1 = RAdd(mult2F59,mult2F4D);
          real mult2F5C#1 = RMul(coeff2F58,prod2F3E);
          real sum2F5D#1 = RAdd(mult2F5C,mult2F49);
          real mult2F5F#1 = RMul(coeff2F58,prod2F42);
          real sum2F60#1 = RAdd(mult2F5F,mult2F46);
          real coeff2F62#9 = -0.4e1;
          real mult2F63#5 = RMul(coeff2F30,prod2F42);
          real mult2F64#1 = RMul(coeff2F62,prod2F41);
          real mult2F65#2 = RMul(coeff2F62,prod2F3D);
          real mult2F66#2 = RMul(coeff2F62,prod2F36);
          real sum2F67#1 = RAdd(mult2F65,mult2F66);
          real sum2F68#1 = RAdd(mult2F64,sum2F67);
          real sum2F69#1 = RAdd(mult2F63,sum2F68);
          real mult2F6B#5 = RMul(coeff2F30,prod2F3E);
          real mult2F6C#1 = RMul(coeff2F62,prod2F3B);
          real mult2F6D#2 = RMul(coeff2F62,prod2F33);
          real sum2F6E#1 = RAdd(mult2F6C,mult2F6D);
          real sum2F6F#1 = RAdd(mult2F65,sum2F6E);
          real sum2F70#1 = RAdd(mult2F6B,sum2F6F);
          real mult2F72#5 = RMul(coeff2F30,prod2F38);
          real mult2F73#1 = RMul(coeff2F62,prod2F2F);
          real sum2F74#1 = RAdd(mult2F6D,mult2F73);
          real sum2F75#1 = RAdd(mult2F66,sum2F74);
          real sum2F76#1 = RAdd(mult2F72,sum2F75);
          tensor[10] intermediateCons2F78#1 = <tensor[10]>[sum2F56,sum2F5A,sum2F5D,sum2F60,mult2F48,mult2F4B,mult2F4C,sum2F69,sum2F70,sum2F76];
          real compositionl2FCC#2 = VDot<10>(dofs2EFB,intermediateCons2F78);
          real op1_e3_l_232FCF#1 = RSub(compositionl2FCC,isoval1F82);
          real mult2FE3#1 = RMul(coeff2F37,prod2F43);
          real sum2FE7#1 = RAdd(mult2F6B,mult2F72);
          real sum2FE8#1 = RAdd(mult2F63,sum2FE7);
          real sum2FE9#3 = RAdd(mult2FE3,sum2FE8);
          real mult2FEC#6 = RMul(coeff2F58,prod2F43);
          real sum2FED#1 = RAdd(mult2FEC,mult2F72);
          real basisEval2FF1#4 = RMul(coeff2F62,prod2F42);
          real basisEval2FF2#4 = RMul(coeff2F62,prod2F3E);
          real coeff2FF3#3 = -0.8e1;
          real mult2FF4#3 = RMul(coeff2F30,prod2F43);
          real mult2FF5#1 = RMul(coeff2FF3,prod2F38);
          real sum2FF6#1 = RAdd(basisEval2FF2,mult2FF5);
          real sum2FF7#1 = RAdd(basisEval2FF1,sum2FF6);
          real sum2FF8#1 = RAdd(mult2FF4,sum2FF7);
          real sum2FFB#1 = RAdd(mult2FEC,mult2F6B);
          real mult2FFD#1 = RMul(coeff2FF3,prod2F3E);
          real mult2FFE#4 = RMul(coeff2F62,prod2F38);
          real sum2FFF#1 = RAdd(mult2FFD,mult2FFE);
          real sum3000#1 = RAdd(basisEval2FF1,sum2FFF);
          real sum3001#1 = RAdd(mult2FF4,sum3000);
          real sum3004#1 = RAdd(mult2FEC,mult2F63);
          real mult3006#1 = RMul(coeff2FF3,prod2F42);
          real sum3007#1 = RAdd(basisEval2FF2,mult2FFE);
          real sum3008#1 = RAdd(mult3006,sum3007);
          real sum3009#1 = RAdd(mult2FF4,sum3008);
          tensor[10] intermediateCons300B#1 = <tensor[10]>[sum2FE9,sum2FED,_t1FC7,_t1FC7,_t1FC7,mult2F63,mult2F6B,basisEval2FF1,basisEval2FF2,sum2FF8];
          tensor[10] intermediateCons300C#1 = <tensor[10]>[sum2FE9,_t1FC7,sum2FFB,_t1FC7,mult2F63,_t1FC7,mult2F72,basisEval2FF1,sum3001,mult2FFE];
          tensor[10] intermediateCons300D#1 = <tensor[10]>[sum2FE9,_t1FC7,_t1FC7,sum3004,mult2F6B,mult2F72,_t1FC7,sum3009,basisEval2FF2,mult2FFE];
          real vdot304E#3 = VDot<10>(dofs2EFB,intermediateCons300B);
          real vdot3050#3 = VDot<10>(dofs2EFB,intermediateCons300C);
          real vdot3052#3 = VDot<10>(dofs2EFB,intermediateCons300D);
          int mulRes305D#4 = IMul(intPos2E8A,ilit2E9D);
          int idx3060#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,mulRes305D);
          int addRes3062#1 = IAdd(mulRes305D,ilit2E94);
          int idx3063#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3062);
          int addRes3065#1 = IAdd(mulRes305D,ilit2E97);
          int idx3066#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3065);
          int addRes3068#1 = IAdd(mulRes305D,ilit2E9A);
          int idx3069#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3068);
          int mulRes307F#3 = IMul(ilit2E9A,idx3060);
          int addRes3082#1 = IAdd(ilit2E94,mulRes307F);
          int addRes3084#1 = IAdd(ilit2E97,mulRes307F);
          real dof_load3085#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes307F);
          real dof_load3086#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3082);
          real dof_load3087#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3084);
          int mulRes308A#3 = IMul(ilit2E9A,idx3063);
          int addRes308C#1 = IAdd(ilit2E94,mulRes308A);
          int addRes308D#1 = IAdd(ilit2E97,mulRes308A);
          real dof_load308E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes308A);
          real dof_load308F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308C);
          real dof_load3090#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308D);
          int mulRes3093#3 = IMul(ilit2E9A,idx3066);
          int addRes3095#1 = IAdd(ilit2E94,mulRes3093);
          int addRes3096#1 = IAdd(ilit2E97,mulRes3093);
          real dof_load3097#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes3093);
          real dof_load3098#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3095);
          real dof_load3099#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3096);
          int mulRes309C#3 = IMul(ilit2E9A,idx3069);
          int addRes309E#1 = IAdd(ilit2E94,mulRes309C);
          int addRes309F#1 = IAdd(ilit2E97,mulRes309C);
          real dof_load30A0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes309C);
          real dof_load30A1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309E);
          real dof_load30A2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309F);
          real r30F0#2 = RMul(dof_load3085,mult2FEC);
          real r30F3#1 = RMul(dof_load308E,mult2F44);
          real r30F6#2 = RMul(dof_load3097,_t1FC7);
          real r30F9#2 = RMul(dof_load30A0,_t1FC7);
          real r30FA#1 = RAdd(r30F0,r30F3);
          real r30FB#1 = RAdd(r30FA,r30F6);
          real r30FC#13 = RAdd(r30FB,r30F9);
          real r3100#1 = RMul(dof_load308E,_t1FC7);
          real r3102#1 = RMul(dof_load3097,mult2F44);
          real r3105#2 = RAdd(r30F0,r3100);
          real r3106#1 = RAdd(r3105,r3102);
          real r3107#13 = RAdd(r3106,r30F9);
          real r310F#1 = RMul(dof_load30A0,mult2F44);
          real r3111#1 = RAdd(r3105,r30F6);
          real r3112#12 = RAdd(r3111,r310F);
          real r3115#2 = RMul(dof_load3086,mult2FEC);
          real r3117#1 = RMul(dof_load308F,mult2F44);
          real r3119#2 = RMul(dof_load3098,_t1FC7);
          real r311B#2 = RMul(dof_load30A1,_t1FC7);
          real r311C#1 = RAdd(r3115,r3117);
          real r311D#1 = RAdd(r311C,r3119);
          real r311E#13 = RAdd(r311D,r311B);
          real r3120#1 = RMul(dof_load308F,_t1FC7);
          real r3121#1 = RMul(dof_load3098,mult2F44);
          real r3123#2 = RAdd(r3115,r3120);
          real r3124#1 = RAdd(r3123,r3121);
          real r3125#13 = RAdd(r3124,r311B);
          real r3129#1 = RMul(dof_load30A1,mult2F44);
          real r312B#1 = RAdd(r3123,r3119);
          real r312C#12 = RAdd(r312B,r3129);
          real r312F#2 = RMul(dof_load3087,mult2FEC);
          real r3131#1 = RMul(dof_load3090,mult2F44);
          real r3133#2 = RMul(dof_load3099,_t1FC7);
          real r3135#2 = RMul(dof_load30A2,_t1FC7);
          real r3136#1 = RAdd(r312F,r3131);
          real r3137#1 = RAdd(r3136,r3133);
          real r3138#13 = RAdd(r3137,r3135);
          real r313A#1 = RMul(dof_load3090,_t1FC7);
          real r313B#1 = RMul(dof_load3099,mult2F44);
          real r313D#2 = RAdd(r312F,r313A);
          real r313E#1 = RAdd(r313D,r313B);
          real r313F#13 = RAdd(r313E,r3135);
          real r3143#1 = RMul(dof_load30A2,mult2F44);
          real r3145#1 = RAdd(r313D,r3133);
          real r3146#12 = RAdd(r3145,r3143);
          real r31A7#3 = RMul(_t1FC7,r30FC);
          real r31A9#3 = RMul(_t1FC7,r311E);
          real r31AB#5 = RMul(_t1FC7,r3138);
          real r31AC#3 = RAdd(r31A7,r31A9);
          real r31AD#9 = RAdd(r31AC,r31AB);
          real r31AF#3 = RMul(_t1FC7,r3107);
          real r31B1#3 = RMul(_t1FC7,r3125);
          real r31B3#5 = RMul(_t1FC7,r313F);
          real r31B4#3 = RAdd(r31AF,r31B1);
          real r31B5#9 = RAdd(r31B4,r31B3);
          real r31B7#3 = RMul(_t1FC7,r3112);
          real r31B9#3 = RMul(_t1FC7,r312C);
          real r31BB#5 = RMul(_t1FC7,r3146);
          real r31BC#3 = RAdd(r31B7,r31B9);
          real r31BD#12 = RAdd(r31BC,r31BB);
          real r31C0#1 = RMul(coeff2F58,r3138);
          real r31C1#3 = RAdd(r31AC,r31C0);
          real r31C2#1 = RMul(coeff2F58,r313F);
          real r31C3#3 = RAdd(r31B4,r31C2);
          real r31C4#1 = RMul(coeff2F58,r3146);
          real r31C5#4 = RAdd(r31BC,r31C4);
          real r31C8#1 = RMul(_t1FCE,r311E);
          real r31C9#1 = RAdd(r31A7,r31C8);
          real r31CA#3 = RAdd(r31C9,r31AB);
          real r31CB#1 = RMul(_t1FCE,r3125);
          real r31CC#1 = RAdd(r31AF,r31CB);
          real r31CD#3 = RAdd(r31CC,r31B3);
          real r31CE#1 = RMul(_t1FCE,r312C);
          real r31CF#1 = RAdd(r31B7,r31CE);
          real r31D0#4 = RAdd(r31CF,r31BB);
          real r31D3#1 = RMul(_t1FCE,r3138);
          real r31D4#3 = RAdd(r31AC,r31D3);
          real r31D5#1 = RMul(_t1FCE,r313F);
          real r31D6#3 = RAdd(r31B4,r31D5);
          real r31D7#1 = RMul(_t1FCE,r3146);
          real r31D8#4 = RAdd(r31BC,r31D7);
          real r31DA#1 = RMul(coeff2F58,r30FC);
          real r31DB#1 = RAdd(r31DA,r31A9);
          real r31DC#3 = RAdd(r31DB,r31AB);
          real r31DD#1 = RMul(coeff2F58,r3107);
          real r31DE#1 = RAdd(r31DD,r31B1);
          real r31DF#3 = RAdd(r31DE,r31B3);
          real r31E0#1 = RMul(coeff2F58,r3112);
          real r31E1#1 = RAdd(r31E0,r31B9);
          real r31E2#4 = RAdd(r31E1,r31BB);
          real r31E5#1 = RMul(coeff2F58,r311E);
          real r31E6#1 = RAdd(r31A7,r31E5);
          real r31E7#3 = RAdd(r31E6,r31AB);
          real r31E8#1 = RMul(coeff2F58,r3125);
          real r31E9#1 = RAdd(r31AF,r31E8);
          real r31EA#3 = RAdd(r31E9,r31B3);
          real r31EB#1 = RMul(coeff2F58,r312C);
          real r31EC#1 = RAdd(r31B7,r31EB);
          real r31ED#4 = RAdd(r31EC,r31BB);
          real r31EF#1 = RMul(_t1FCE,r30FC);
          real r31F0#1 = RAdd(r31EF,r31A9);
          real r31F1#3 = RAdd(r31F0,r31AB);
          real r31F2#1 = RMul(_t1FCE,r3107);
          real r31F3#1 = RAdd(r31F2,r31B1);
          real r31F4#3 = RAdd(r31F3,r31B3);
          real r31F5#1 = RMul(_t1FCE,r3112);
          real r31F6#1 = RAdd(r31F5,r31B9);
          real r31F7#4 = RAdd(r31F6,r31BB);
          real r3254#1 = RMul(r30FC,r31AD);
          real r3257#1 = RMul(r311E,r31D4);
          real r325A#1 = RMul(r3138,r31E7);
          real r325B#1 = RAdd(r3254,r3257);
          real r325C#1 = RAdd(r325B,r325A);
          real r325E#1 = RMul(r30FC,r31B5);
          real r3260#1 = RMul(r311E,r31D6);
          real r3262#1 = RMul(r3138,r31EA);
          real r3263#1 = RAdd(r325E,r3260);
          real r3264#2 = RAdd(r3263,r3262);
          real r3266#1 = RMul(r30FC,r31BD);
          real r3268#1 = RMul(r311E,r31D8);
          real r326A#1 = RMul(r3138,r31ED);
          real r326B#1 = RAdd(r3266,r3268);
          real r326C#2 = RAdd(r326B,r326A);
          real r326F#1 = RMul(r30FC,r31C1);
          real r3271#1 = RMul(r311E,r31AD);
          real r3273#1 = RMul(r3138,r31F1);
          real r3274#1 = RAdd(r326F,r3271);
          real r3275#1 = RAdd(r3274,r3273);
          real r3277#1 = RMul(r30FC,r31C3);
          real r3279#1 = RMul(r311E,r31B5);
          real r327B#1 = RMul(r3138,r31F4);
          real r327C#1 = RAdd(r3277,r3279);
          real r327D#2 = RAdd(r327C,r327B);
          real r327F#1 = RMul(r30FC,r31C5);
          real r3281#1 = RMul(r311E,r31BD);
          real r3283#1 = RMul(r3138,r31F7);
          real r3284#1 = RAdd(r327F,r3281);
          real r3285#2 = RAdd(r3284,r3283);
          real r3288#1 = RMul(r30FC,r31CA);
          real r328A#1 = RMul(r311E,r31DC);
          real r328C#1 = RMul(r3138,r31AD);
          real r328D#1 = RAdd(r3288,r328A);
          real r328E#1 = RAdd(r328D,r328C);
          real r3290#1 = RMul(r30FC,r31CD);
          real r3292#1 = RMul(r311E,r31DF);
          real r3294#1 = RMul(r3138,r31B5);
          real r3295#1 = RAdd(r3290,r3292);
          real r3296#2 = RAdd(r3295,r3294);
          real r3298#1 = RMul(r30FC,r31D0);
          real r329A#1 = RMul(r311E,r31E2);
          real r329C#1 = RMul(r3138,r31BD);
          real r329D#1 = RAdd(r3298,r329A);
          real r329E#2 = RAdd(r329D,r329C);
          real r32A2#1 = RMul(r3107,r31AD);
          real r32A4#1 = RMul(r3125,r31D4);
          real r32A6#1 = RMul(r313F,r31E7);
          real r32A7#1 = RAdd(r32A2,r32A4);
          real r32A8#2 = RAdd(r32A7,r32A6);
          real r32A9#1 = RMul(r3107,r31B5);
          real r32AA#1 = RMul(r3125,r31D6);
          real r32AB#1 = RMul(r313F,r31EA);
          real r32AC#1 = RAdd(r32A9,r32AA);
          real r32AD#1 = RAdd(r32AC,r32AB);
          real r32AE#1 = RMul(r3107,r31BD);
          real r32AF#1 = RMul(r3125,r31D8);
          real r32B0#1 = RMul(r313F,r31ED);
          real r32B1#1 = RAdd(r32AE,r32AF);
          real r32B2#2 = RAdd(r32B1,r32B0);
          real r32B4#1 = RMul(r3107,r31C1);
          real r32B5#1 = RMul(r3125,r31AD);
          real r32B6#1 = RMul(r313F,r31F1);
          real r32B7#1 = RAdd(r32B4,r32B5);
          real r32B8#2 = RAdd(r32B7,r32B6);
          real r32B9#1 = RMul(r3107,r31C3);
          real r32BA#1 = RMul(r3125,r31B5);
          real r32BB#1 = RMul(r313F,r31F4);
          real r32BC#1 = RAdd(r32B9,r32BA);
          real r32BD#1 = RAdd(r32BC,r32BB);
          real r32BE#1 = RMul(r3107,r31C5);
          real r32BF#1 = RMul(r3125,r31BD);
          real r32C0#1 = RMul(r313F,r31F7);
          real r32C1#1 = RAdd(r32BE,r32BF);
          real r32C2#2 = RAdd(r32C1,r32C0);
          real r32C4#1 = RMul(r3107,r31CA);
          real r32C5#1 = RMul(r3125,r31DC);
          real r32C6#1 = RMul(r313F,r31AD);
          real r32C7#1 = RAdd(r32C4,r32C5);
          real r32C8#2 = RAdd(r32C7,r32C6);
          real r32C9#1 = RMul(r3107,r31CD);
          real r32CA#1 = RMul(r3125,r31DF);
          real r32CB#1 = RMul(r313F,r31B5);
          real r32CC#1 = RAdd(r32C9,r32CA);
          real r32CD#1 = RAdd(r32CC,r32CB);
          real r32CE#1 = RMul(r3107,r31D0);
          real r32CF#1 = RMul(r3125,r31E2);
          real r32D0#1 = RMul(r313F,r31BD);
          real r32D1#1 = RAdd(r32CE,r32CF);
          real r32D2#2 = RAdd(r32D1,r32D0);
          real r32D6#1 = RMul(r3112,r31AD);
          real r32D8#1 = RMul(r312C,r31D4);
          real r32DA#1 = RMul(r3146,r31E7);
          real r32DB#1 = RAdd(r32D6,r32D8);
          real r32DC#2 = RAdd(r32DB,r32DA);
          real r32DD#1 = RMul(r3112,r31B5);
          real r32DE#1 = RMul(r312C,r31D6);
          real r32DF#1 = RMul(r3146,r31EA);
          real r32E0#1 = RAdd(r32DD,r32DE);
          real r32E1#2 = RAdd(r32E0,r32DF);
          real r32E2#1 = RMul(r3112,r31BD);
          real r32E3#1 = RMul(r312C,r31D8);
          real r32E4#1 = RMul(r3146,r31ED);
          real r32E5#1 = RAdd(r32E2,r32E3);
          real r32E6#1 = RAdd(r32E5,r32E4);
          real r32E8#1 = RMul(r3112,r31C1);
          real r32E9#1 = RMul(r312C,r31AD);
          real r32EA#1 = RMul(r3146,r31F1);
          real r32EB#1 = RAdd(r32E8,r32E9);
          real r32EC#2 = RAdd(r32EB,r32EA);
          real r32ED#1 = RMul(r3112,r31C3);
          real r32EE#1 = RMul(r312C,r31B5);
          real r32EF#1 = RMul(r3146,r31F4);
          real r32F0#1 = RAdd(r32ED,r32EE);
          real r32F1#2 = RAdd(r32F0,r32EF);
          real r32F2#1 = RMul(r3112,r31C5);
          real r32F3#1 = RMul(r312C,r31BD);
          real r32F4#1 = RMul(r3146,r31F7);
          real r32F5#1 = RAdd(r32F2,r32F3);
          real r32F6#1 = RAdd(r32F5,r32F4);
          real r32F8#1 = RMul(r3112,r31CA);
          real r32F9#1 = RMul(r312C,r31DC);
          real r32FA#1 = RMul(r3146,r31AD);
          real r32FB#1 = RAdd(r32F8,r32F9);
          real r32FC#2 = RAdd(r32FB,r32FA);
          real r32FD#1 = RMul(r3112,r31CD);
          real r32FE#1 = RMul(r312C,r31DF);
          real r32FF#1 = RMul(r3146,r31B5);
          real r3300#1 = RAdd(r32FD,r32FE);
          real r3301#2 = RAdd(r3300,r32FF);
          real r3302#1 = RMul(r3112,r31D0);
          real r3303#1 = RMul(r312C,r31E2);
          real r3304#1 = RMul(r3146,r31BD);
          real r3305#1 = RAdd(r3302,r3303);
          real r3306#1 = RAdd(r3305,r3304);
          tensor[3] probe_l_2933C2#1 = <tensor[3]>[r30FC,r311E,r3138];
          tensor[3] probe_l_30340F#3 = <tensor[3]>[r3107,r3125,r313F];
          tensor[3] tensor34BA#1 = <tensor[3]>[r31BD,r31D8,r31ED];
          tensor[3] tensor34C0#1 = <tensor[3]>[r31C5,r31BD,r31F7];
          tensor[3] tensor34C7#1 = <tensor[3]>[r31D0,r31E2,r31BD];
          real vdot34EA#1 = VDot<3>(probe_l_30340F,tensor34BA);
          real vdot34EC#1 = VDot<3>(probe_l_30340F,tensor34C0);
          real vdot34EE#1 = VDot<3>(probe_l_30340F,tensor34C7);
          tensor[3] op1_e3_l_3334E8#1 = <tensor[3]>[vdot34EA,vdot34EC,vdot34EE];
          real op1_e3_l_3434F7#1 = VDot<3>(probe_l_2933C2,op1_e3_l_3334E8);
          real r34FD#2 = RMul(_t1FC7,r325C);
          real r34FF#1 = RMul(_t1FC7,r3264);
          real r3501#2 = RMul(_t1FC7,r326C);
          real r3503#2 = RMul(_t1FC7,r32A8);
          real r3505#3 = RMul(_t1FC7,r32AD);
          real r3508#1 = RMul(_t1FCE,r32B2);
          real r350A#2 = RMul(_t1FC7,r32DC);
          real r350D#1 = RMul(coeff2F58,r32E1);
          real r350F#3 = RMul(_t1FC7,r32E6);
          real r3510#2 = RAdd(r34FD,r34FF);
          real r3511#1 = RAdd(r3510,r3501);
          real r3512#1 = RAdd(r3511,r3503);
          real r3513#1 = RAdd(r3512,r3505);
          real r3514#1 = RAdd(r3513,r3508);
          real r3515#1 = RAdd(r3514,r350A);
          real r3516#1 = RAdd(r3515,r350D);
          real r3517#1 = RAdd(r3516,r350F);
          real r3519#2 = RMul(_t1FC7,r3275);
          real r351B#1 = RMul(_t1FC7,r327D);
          real r351D#2 = RMul(_t1FC7,r3285);
          real r351F#2 = RMul(_t1FC7,r32B8);
          real r3521#3 = RMul(_t1FC7,r32BD);
          real r3523#1 = RMul(_t1FCE,r32C2);
          real r3525#2 = RMul(_t1FC7,r32EC);
          real r3527#1 = RMul(coeff2F58,r32F1);
          real r3529#3 = RMul(_t1FC7,r32F6);
          real r352A#2 = RAdd(r3519,r351B);
          real r352B#1 = RAdd(r352A,r351D);
          real r352C#1 = RAdd(r352B,r351F);
          real r352D#1 = RAdd(r352C,r3521);
          real r352E#1 = RAdd(r352D,r3523);
          real r352F#1 = RAdd(r352E,r3525);
          real r3530#1 = RAdd(r352F,r3527);
          real r3531#1 = RAdd(r3530,r3529);
          real r3533#2 = RMul(_t1FC7,r328E);
          real r3535#1 = RMul(_t1FC7,r3296);
          real r3537#2 = RMul(_t1FC7,r329E);
          real r3539#2 = RMul(_t1FC7,r32C8);
          real r353B#3 = RMul(_t1FC7,r32CD);
          real r353D#1 = RMul(_t1FCE,r32D2);
          real r353F#2 = RMul(_t1FC7,r32FC);
          real r3541#1 = RMul(coeff2F58,r3301);
          real r3543#3 = RMul(_t1FC7,r3306);
          real r3544#2 = RAdd(r3533,r3535);
          real r3545#1 = RAdd(r3544,r3537);
          real r3546#1 = RAdd(r3545,r3539);
          real r3547#1 = RAdd(r3546,r353B);
          real r3548#1 = RAdd(r3547,r353D);
          real r3549#1 = RAdd(r3548,r353F);
          real r354A#1 = RAdd(r3549,r3541);
          real r354B#1 = RAdd(r354A,r3543);
          real r354D#1 = RMul(coeff2F58,r326C);
          real r354E#2 = RMul(_t1FC7,r32B2);
          real r354F#1 = RMul(_t1FCE,r32DC);
          real r3550#2 = RMul(_t1FC7,r32E1);
          real r3551#1 = RAdd(r3510,r354D);
          real r3552#1 = RAdd(r3551,r3503);
          real r3553#1 = RAdd(r3552,r3505);
          real r3554#1 = RAdd(r3553,r354E);
          real r3555#1 = RAdd(r3554,r354F);
          real r3556#1 = RAdd(r3555,r3550);
          real r3557#1 = RAdd(r3556,r350F);
          real r3558#1 = RMul(coeff2F58,r3285);
          real r3559#2 = RMul(_t1FC7,r32C2);
          real r355A#1 = RMul(_t1FCE,r32EC);
          real r355B#2 = RMul(_t1FC7,r32F1);
          real r355C#1 = RAdd(r352A,r3558);
          real r355D#1 = RAdd(r355C,r351F);
          real r355E#1 = RAdd(r355D,r3521);
          real r355F#1 = RAdd(r355E,r3559);
          real r3560#1 = RAdd(r355F,r355A);
          real r3561#1 = RAdd(r3560,r355B);
          real r3562#1 = RAdd(r3561,r3529);
          real r3563#1 = RMul(coeff2F58,r329E);
          real r3564#2 = RMul(_t1FC7,r32D2);
          real r3565#1 = RMul(_t1FCE,r32FC);
          real r3566#2 = RMul(_t1FC7,r3301);
          real r3567#1 = RAdd(r3544,r3563);
          real r3568#1 = RAdd(r3567,r3539);
          real r3569#1 = RAdd(r3568,r353B);
          real r356A#1 = RAdd(r3569,r3564);
          real r356B#1 = RAdd(r356A,r3565);
          real r356C#1 = RAdd(r356B,r3566);
          real r356D#1 = RAdd(r356C,r3543);
          real r356F#1 = RMul(_t1FCE,r3264);
          real r3570#1 = RMul(coeff2F58,r32A8);
          real r3571#1 = RAdd(r34FD,r356F);
          real r3572#1 = RAdd(r3571,r3501);
          real r3573#1 = RAdd(r3572,r3570);
          real r3574#1 = RAdd(r3573,r3505);
          real r3575#1 = RAdd(r3574,r354E);
          real r3576#1 = RAdd(r3575,r350A);
          real r3577#1 = RAdd(r3576,r3550);
          real r3578#1 = RAdd(r3577,r350F);
          real r3579#1 = RMul(_t1FCE,r327D);
          real r357A#1 = RMul(coeff2F58,r32B8);
          real r357B#1 = RAdd(r3519,r3579);
          real r357C#1 = RAdd(r357B,r351D);
          real r357D#1 = RAdd(r357C,r357A);
          real r357E#1 = RAdd(r357D,r3521);
          real r357F#1 = RAdd(r357E,r3559);
          real r3580#1 = RAdd(r357F,r3525);
          real r3581#1 = RAdd(r3580,r355B);
          real r3582#1 = RAdd(r3581,r3529);
          real r3583#1 = RMul(_t1FCE,r3296);
          real r3584#1 = RMul(coeff2F58,r32C8);
          real r3585#1 = RAdd(r3533,r3583);
          real r3586#1 = RAdd(r3585,r3537);
          real r3587#1 = RAdd(r3586,r3584);
          real r3588#1 = RAdd(r3587,r353B);
          real r3589#1 = RAdd(r3588,r3564);
          real r358A#1 = RAdd(r3589,r353F);
          real r358B#1 = RAdd(r358A,r3566);
          real r358C#1 = RAdd(r358B,r3543);
          real op1_e3_l_363623#9 = RMul(coeff2F2A,op1_e3_l_3434F7);
          real r362A#1 = RDiv(r3517,op1_e3_l_363623);
          real r362C#1 = RDiv(r3531,op1_e3_l_363623);
          real r362E#1 = RDiv(r354B,op1_e3_l_363623);
          real r3631#1 = RDiv(r3557,op1_e3_l_363623);
          real r3633#1 = RDiv(r3562,op1_e3_l_363623);
          real r3635#1 = RDiv(r356D,op1_e3_l_363623);
          real r3638#1 = RDiv(r3578,op1_e3_l_363623);
          real r363A#1 = RDiv(r3582,op1_e3_l_363623);
          real r363C#1 = RDiv(r358C,op1_e3_l_363623);
          real r3658#1 = RMul(vdot304E,r362A);
          real r365B#1 = RMul(vdot3050,r3631);
          real r365E#1 = RMul(vdot3052,r3638);
          real r365F#1 = RAdd(r3658,r365B);
          real r3660#1 = RAdd(r365F,r365E);
          real r3662#1 = RMul(vdot304E,r362C);
          real r3664#1 = RMul(vdot3050,r3633);
          real r3666#1 = RMul(vdot3052,r363A);
          real r3667#1 = RAdd(r3662,r3664);
          real r3668#1 = RAdd(r3667,r3666);
          real r366A#1 = RMul(vdot304E,r362E);
          real r366C#1 = RMul(vdot3050,r3635);
          real r366E#1 = RMul(vdot3052,r363C);
          real r366F#1 = RAdd(r366A,r366C);
          real r3670#1 = RAdd(r366F,r366E);
          tensor[3] op1_e3_l_383655#1 = <tensor[3]>[r3660,r3668,r3670];
          tensor[3] op1_e3_l_54368E#3 = VNeg<3>(op1_e3_l_383655);
          real op1_e3_l_563691#1 = VDot<3>(op1_e3_l_54368E,op1_e3_l_54368E);
          real op1_e3_l_573694#2 = Sqrt(op1_e3_l_563691);
          real op1_e3_l_583697#1 = Abs<real>(op1_e3_l_232FCF);
          real op1_e3_l_59369A#1 = RMul(thick1F90,op1_e3_l_573694);
          real op1_e3_l_60369D#1 = RDiv(op1_e3_l_583697,op1_e3_l_59369A);
          real op1_e3_l_6136A0#1 = RSub(_t1FCE,op1_e3_l_60369D);
          real op1_e3_l_6236A3#1 = RMul(_t2E86,op1_e3_l_6136A0);
          real op1_e3_l_6336A6#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real a36A9#2 = RMul(_t1FCE,op1_e3_l_6336A6);
          bool _t36AC#1 = GT<real>(a36A9,_t1FC7);
          if _t36AC then goto ASSIGN3DD7 else goto JOIN3780
        ASSIGN3DD7:  preds = [COND36AE]
          real _t36B5#1 = RSub(_t1FCE,a36A9);
          real op1_e3_l_336B8#1 = VDot<3>(rayVec1FAA,rayVec1FAA);
          real op1_e3_l_436BB#1 = Sqrt(op1_e3_l_336B8);
          real op1_e3_l_536BE#1 = RMul(rayStep1F9A,op1_e3_l_436BB);
          real _t36C1#1 = RDiv(op1_e3_l_536BE,refStep1F98);
          real _t36C4#1 = MathFn<pow>(_t36B5,_t36C1);
          real _t36C6#2 = 0.11e1;
          real _t36C8#1 = 0.7e0;
          real op1_e3_l_6736CA#1 = RDiv(_t1FCE,op1_e3_l_573694);
          real op1_e3_l_6836CF#1 = VDot<3>(op1_e3_l_54368E,light1FA6);
          real _t36D2#1 = RMul(op1_e3_l_6736CA,op1_e3_l_6836CF);
          real shade36D5#1 = Max<real>(_t1FC7,_t36D2);
          real op1_e3_l_1536D9#1 = RSub(rayN1FA8,camNear1F94);
          real op1_e3_l_1636DC#1 = RSub(camFar1F96,camNear1F94);
          real op1_e3_l_1736DF#1 = RDiv(op1_e3_l_1536D9,op1_e3_l_1636DC);
          real op1_e3_l_1836E2#1 = RSub(_t36C8,_t36C6);
          real op1_e3_l_1936E5#1 = RMul(op1_e3_l_1736DF,op1_e3_l_1836E2);
          real op1_e3_l_2036E8#1 = RMul(phongKd1F9E,shade36D5);
          real Mtransform36EB#1 = Transform<IMAGE1D<double[3]>>(I1F80);
          real MxPos36ED#1 = RMul(Mtransform36EB,compositionl2FCC);
          real Ttranslate36F0#1 = Translate<IMAGE1D<double[3]>>(I1F80);
          real imgPos36F2#2 = RAdd(MxPos36ED,Ttranslate36F0);
          real nd36F5#2 = Floor<1>(imgPos36F2);
          real f36F7#2 = RSub(imgPos36F2,nd36F5);
          int n36FA#5 = RealToInt<1>(nd36F5);
          bool isInside36FE#1 = IndexInside<IMAGE1D<double[3]>,2>(n36FA,I1F80);
          if isInside36FE then goto ASSIGN3DE3 else goto ASSIGN3DDB
        ASSIGN3DE3:  preds = [COND3700]
          int offp3705#3 = IMul(ilit2E9A,n36FA);
          real v0_3706#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3705);
          int addRes3708#1 = IAdd(n36FA,ilit2E94);
          int offp3709#3 = IMul(ilit2E9A,addRes3708);
          real v1_370A#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3709);
          tensor[2] v_370B#1 = <tensor[2]>[v0_3706,v1_370A];
          int offp370C#1 = IAdd(offp3705,ilit2E94);
          real v0_370D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370C);
          int offp370E#1 = IAdd(offp3709,ilit2E94);
          real v1_370F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370E);
          tensor[2] v_3710#1 = <tensor[2]>[v0_370D,v1_370F];
          int offp3712#1 = IAdd(offp3705,ilit2E97);
          real v0_3713#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3712);
          int offp3714#1 = IAdd(offp3709,ilit2E97);
          real v1_3715#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3714);
          tensor[2] v_3716#1 = <tensor[2]>[v0_3713,v1_3715];
          tensor[3,2] voxels3717#1 = <tensor[3,2]>[v_370B,v_3710,v_3716];
          goto JOIN3731
        JOIN3731:  preds = [ASSIGN372D,ASSIGN37E0]
          tensor[3,2] ldvox372F#3 = phi(voxels3717,voxels37C8)
          real idx3734#1 = RSub(f36F7,_t1FCE);
          tensor[2] kernX_3732#1 = <tensor[2]>[f36F7,idx3734];
          tensor[2] a03739#1 = <tensor[2]>[_t1FCE,_t1FCE];
          tensor[2] a1373A#1 = <tensor[2]>[coeff2F58,_t1FCE];
          tensor[2] prod1373F#1 = VMul<2>(kernX_3732,a1373A);
          tensor[2] kevalX_d0_3738#3 = VAdd<2>(a03739,prod1373F);
          tensor[2] projIx3749#1 = ProjectLast<tensor[3,2],[0]>(ldvox372F);
          real vdot374A#1 = VDot<2>(projIx3749,kevalX_d0_3738);
          tensor[2] projIx374B#1 = ProjectLast<tensor[3,2],[1]>(ldvox372F);
          real vdot374C#1 = VDot<2>(projIx374B,kevalX_d0_3738);
          tensor[2] projIx374D#1 = ProjectLast<tensor[3,2],[2]>(ldvox372F);
          real vdot374E#1 = VDot<2>(projIx374D,kevalX_d0_3738);
          real op1_e3_l_223757#2 = RSub(_t1FCE,_t36C4);
          real op1_e3_l_23375A#1 = RAdd(_t36C6,op1_e3_l_1936E5);
          real op1_e3_l_24375D#1 = RAdd(phongKa1F9C,op1_e3_l_2036E8);
          real r3762#1 = RMul(transp1FAC,op1_e3_l_223757);
          real r3763#1 = RMul(r3762,op1_e3_l_23375A);
          real r3764#3 = RMul(r3763,op1_e3_l_24375D);
          real r3765#1 = RMul(r3764,vdot374A);
          real r3767#1 = RMul(r3764,vdot374C);
          real r3769#1 = RMul(r3764,vdot374E);
          tensor[3] op1_e3_l_253760#1 = <tensor[3]>[r3765,r3767,r3769];
          tensor[3] rgb3775#1 = VAdd<3>(rgb1FAE,op1_e3_l_253760);
          real op1_e3_l_53778#1 = RSub(_t1FCE,op1_e3_l_223757);
          real transp377B#1 = RMul(transp1FAC,op1_e3_l_53778);
          goto JOIN3780
        JOIN3780:  preds = [ASSIGN377D,COND36AE]
          tensor[3] rgb377E#1 = phi(rgb3775,rgb1FAE)
          real transp377F#1 = phi(transp377B,transp1FAC)
          string _t3781#1 = "yay!\n";
          Print<[string]>(_t3781);
          goto JOIN3786
        JOIN3786:  preds = [MASSIGN3783,MASSIGN37E7]
          tensor[3] rgb3784#1 = phi(rgb377E,rgb1FAE)
          real transp3785#1 = phi(transp377F,transp1FAC)
          goto JOIN3789
        JOIN3789:  preds = [JOIN3786,COND1FE2]
          tensor[3] rgb3787#1 = phi(rgb3784,rgb1FAE)
          real transp3788#1 = phi(transp3785,transp1FAC)
          goto JOIN378C
        JOIN378C:  preds = [JOIN3789,COND1FDF]
          tensor[3] rgb378A#1 = phi(rgb3787,rgb1FAE)
          real transp378B#1 = phi(transp3788,transp1FAC)
          goto JOIN378F
        JOIN378F:  preds = [JOIN378C,COND1FDA]
          tensor[3] rgb378D#1 = phi(rgb378A,rgb1FAE)
          real transp378E#1 = phi(transp378B,transp1FAC)
          goto JOIN3792
        JOIN3792:  preds = [JOIN378F,COND1FD7]
          tensor[3] rgb3790#1 = phi(rgb378D,rgb1FAE)
          real transp3791#1 = phi(transp378E,transp1FAC)
          goto JOIN3795
        JOIN3795:  preds = [JOIN3792,COND1FD2]
          tensor[3] rgb3793#1 = phi(rgb3790,rgb1FAE)
          real transp3794#1 = phi(transp3791,transp1FAC)
          goto JOIN3798
        JOIN3798:  preds = [JOIN3795,COND1FCD]
          tensor[3] rgb3796#3 = phi(rgb3793,rgb1FAE)
          real transp3797#2 = phi(transp3794,transp1FAC)
          real _t3799#1 = 0.1e-1;
          bool _t379B#1 = LT<real>(transp3797,_t3799);
          if _t379B then goto SAVE379E else goto JOIN37A2
        SAVE379E:  preds = [COND379D]
          self.transp = _t1FC7;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A2
        JOIN37A2:  preds = [*STABILIZE37A0,COND379D]
          real transp37A1#2 = phi(transp3797)
          bool _t37A3#1 = GT<real>(rayN1FA8,camFar1F96);
          if _t37A3 then goto SAVE37A6 else goto JOIN37A9
        SAVE37A6:  preds = [COND37A5]
          self.transp = transp37A1;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A9
        JOIN37A9:  preds = [*STABILIZE37A8,COND37A5]
          real rayN37AA#1 = RAdd(rayN1FA8,rayStep1F9A);
          self.rayN = rayN37AA;
          self.transp = transp37A1;
          self.rgb = rgb3796;
          active
        ASSIGN3DDB:  preds = [COND3700]
          int ix37B3#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,n36FA);
          int offp37B5#3 = IMul(ilit2E9A,ix37B3);
          real v0_37B6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37B5);
          int addRes37B8#1 = IAdd(n36FA,ilit2E94);
          int ix37B9#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B8);
          int offp37BA#3 = IMul(ilit2E9A,ix37B9);
          real v1_37BB#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BA);
          tensor[2] v_37BC#1 = <tensor[2]>[v0_37B6,v1_37BB];
          int offp37BD#1 = IAdd(offp37B5,ilit2E94);
          real v0_37BE#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BD);
          int offp37BF#1 = IAdd(offp37BA,ilit2E94);
          real v1_37C0#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BF);
          tensor[2] v_37C1#1 = <tensor[2]>[v0_37BE,v1_37C0];
          int offp37C3#1 = IAdd(offp37B5,ilit2E97);
          real v0_37C4#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C3);
          int offp37C5#1 = IAdd(offp37BA,ilit2E97);
          real v1_37C6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C5);
          tensor[2] v_37C7#1 = <tensor[2]>[v0_37C4,v1_37C6];
          tensor[3,2] voxels37C8#1 = <tensor[3,2]>[v_37BC,v_37C1,v_37C7];
          goto JOIN3731
        ASSIGN37E3:  preds = [COND2E85]
          string _t37E2#1 = "\n";
          Print<[tensor[3],string]>(x1FC4,_t37E2);
          string _t37E5#1 = "wait what\?\n";
          Print<[string]>(_t37E5);
          goto JOIN3786
        ASSIGN37E8:  preds = [COND1FB7]
          bool _t1FBB#1 = NEQ<int>(vi1FB2,sv1FA4);
          goto JOIN1FBC
    end update
    method stabilize
        ENTRY37E9:  preds = []
          bool debug37EA#1 = globals.debug1D18;
          int su37EC#1 = globals.su1D19;
          int sv37EE#1 = globals.sv1D1A;
          real transp37F0#1 = self.transp;
          tensor[3] rgb37F2#3 = self.rgb;
          tensor[4] rgba37F4#1 = self.rgba;
          int ui37F6#1 = self.ui;
          int vi37F8#1 = self.vi;
          real _t37FA#1 = 0.1e1;
          real a37FC#6 = RSub(_t37FA,transp37F0);
          real _t37FF#1 = 0.e0;
          bool _t3801#1 = GT<real>(a37FC,_t37FF);
          if _t3801 then goto ASSIGN3805 else goto JOIN3816
        ASSIGN3805:  preds = [COND3803]
          real _t3804#1 = VIndex<3,0>(rgb37F2);
          real _t3806#1 = RDiv(_t3804,a37FC);
          real _t3809#1 = VIndex<3,1>(rgb37F2);
          real _t380B#1 = RDiv(_t3809,a37FC);
          real _t380E#1 = VIndex<3,2>(rgb37F2);
          real _t3810#1 = RDiv(_t380E,a37FC);
          tensor[4] rgba3813#1 = <tensor[4]>[_t3806,_t380B,_t3810,a37FC];
          goto JOIN3816
        JOIN3816:  preds = [ASSIGN3814,COND3803]
          tensor[4] rgba3815#2 = phi(rgba3813,rgba37F4)
          bool _t3817#1 = EQ<int>(ui37F6,su37EC);
          if _t3817 then goto ASSIGN381B else goto JOIN3821
        ASSIGN381B:  preds = [COND3819]
          bool _t381A#1 = EQ<int>(vi37F8,sv37EE);
          if _t381A then goto COND381D else goto JOIN3820
        COND381D:  preds = [COND381C]
          if debug37EA then goto MASSIGN381E else goto JOIN381F
        MASSIGN381E:  preds = [COND381D]
          Print<[real,tensor[4]]>(a37FC,rgba3815);
          goto JOIN381F
        JOIN381F:  preds = [MASSIGN381E,COND381D]
          goto JOIN3820
        JOIN3820:  preds = [JOIN381F,COND381C]
          goto JOIN3821
        JOIN3821:  preds = [JOIN3820,COND3819]
          self.rgba = rgba3815;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY3824:  preds = []
      int iresU3825#1 = globals.iresU1D0F;
      int iresV3827#1 = globals.iresV1D10;
      int _t3829#2 = 0;
      int _t382B#2 = 1;
      int _t382D#1 = ISub(iresV3827,_t382B);
      int[] _t382F#1 = Range(_t3829,_t382D);
    FOREACH3832:  preds = [ASSIGN3830,NEXT383B]
      foreach (vi3831 in _t382F) on exit goto RETURN383C
      int _t3833#1 = ISub(iresU3825,_t382B);
      int[] _t3835#1 = Range(_t3829,_t3833);
    FOREACH3838:  preds = [ASSIGN3836,NEXT383A]
      foreach (ui3837 in _t3835) on exit goto NEXT383B
      new raycast(ui3837,vi3831);
      goto FOREACH3838
    NEXT383B:  preds = [FOREACH3838]
      goto FOREACH3832
    RETURN383C:  preds = [FOREACH3832]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1D06 (a) = <no-default>
  input 0b043B_intermedateGlobal1D07 (b) = <no-default>
  input 0c043D_intermedateGlobal1D08 (c) = <no-default>
  input isoval1D09 (isoval) = <default>
  input thick1D0A (thick) = <default>
  input camEye1D0B (camEye) = <default>
  input camAt1D0C (camAt) = <default>
  input camUp1D0D (camUp) = <default>
  input camFOV1D0E (camFOV) = <default>
  input iresU1D0F (iresU) = <default>
  input iresV1D10 (iresV) = <default>
  input camNear1D11 (camNear) = <default>
  input camFar1D12 (camFar) = <default>
  input refStep1D13 (refStep) = <default>
  input rayStep1D14 (rayStep) = <default>
  input lightVsp1D15 (lightVsp) = <default>
  input phongKa1D16 (phongKa) = <default>
  input phongKd1D17 (phongKd) = <default>
  input debug1D18 (debug) = <default>
  input su1D19 (su) = <default>
  input sv1D1A (sv) = <default>
  global real camDist1D1B
  global tensor[3] camN1D1C
  global tensor[3] camU1D1D
  global tensor[3] camV1D1E
  global real camVmax1D1F
  global real camUmax1D20
  global tensor[3] light1D21
  global femData:Mesh _t1D22
  global femData:Space _tX1D23
  global femData:FemFunc c1D24
  global image(IMAGE1D<double[3]>) I1D27
## functions
  function femData:MeshPos findPos1FE4 (femData:Mesh mesh1FE5#39, tensor[3] pos1FE6#5) {
    ENTRY1FE7:  preds = []
      real _t1FE8#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1FEA#1 = <tensor[3]>[_t1FE8,_t1FE8,_t1FE8];
      int newtonInt1FEC#4 = 0;
      int cellInt1FEE#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1FE5);
      int _t1FF0#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1FE5);
      int _t1FF2#13 = 1;
      int numCell1FF4#2 = ISub(_t1FF0,_t1FF2);
      int[] yayCells1FF6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1FE5,pos1FE6);
    FOREACH1FF9:  preds = [ASSIGN1FF7,NEXT272E]
      foreach (cellItter1FF8 in yayCells1FF6) on exit goto ASSIGN2730
        tensor[3] xn272D#2 = phi(xn1FEA,xn25CE)
      int _t1FFA#6 = 2;
      int[] _t1FFC#1 = Range(newtonInt1FEC,_t1FFA);
    FOREACH1FFF:  preds = [ASSIGN1FFD,NEXT272C]
      foreach (newtonItter1FFE in _t1FFC) on exit goto NEXT272E
        tensor[3] xn25CE#5 = phi(xn272D,xn2692)
      int ilit2001#1 = 4;
      int mulRes2002#4 = IMul(cellItter1FF8,ilit2001);
      int idx2005#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes2002);
      int addRes2007#1 = IAdd(mulRes2002,_t1FF2);
      int idx2008#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2007);
      int addRes200A#1 = IAdd(mulRes2002,_t1FFA);
      int idx200B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200A);
      int ilit200C#5 = 3;
      int addRes200D#1 = IAdd(mulRes2002,ilit200C);
      int idx200E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200D);
      int mulRes2024#3 = IMul(ilit200C,idx2005);
      int addRes2027#1 = IAdd(_t1FF2,mulRes2024);
      int addRes2029#1 = IAdd(_t1FFA,mulRes2024);
      real dof_load202A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2024);
      real dof_load202B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2027);
      real dof_load202C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2029);
      int mulRes202F#3 = IMul(ilit200C,idx2008);
      int addRes2031#1 = IAdd(_t1FF2,mulRes202F);
      int addRes2032#1 = IAdd(_t1FFA,mulRes202F);
      real dof_load2033#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes202F);
      real dof_load2034#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2031);
      real dof_load2035#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2032);
      int mulRes2038#3 = IMul(ilit200C,idx200B);
      int addRes203A#1 = IAdd(_t1FF2,mulRes2038);
      int addRes203B#1 = IAdd(_t1FFA,mulRes2038);
      real dof_load203C#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2038);
      real dof_load203D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203A);
      real dof_load203E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203B);
      int mulRes2041#3 = IMul(ilit200C,idx200E);
      int addRes2043#1 = IAdd(_t1FF2,mulRes2041);
      int addRes2044#1 = IAdd(_t1FFA,mulRes2041);
      real dof_load2045#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2041);
      real dof_load2046#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2043);
      real dof_load2047#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2044);
      real coeff2078#22 = -0.1e1;
      real one2079#33 = 0.1e1;
      real prod207A#2 = RMul(one2079,one2079);
      real prod207B#2 = RMul(one2079,prod207A);
      real basisEval207C#3 = RMul(coeff2078,prod207B);
      real basisEval207D#10 = RMul(one2079,prod207B);
      real basisEval207E#45 = 0.e0;
      real r2095#2 = RMul(dof_load202A,basisEval207C);
      real r2098#1 = RMul(dof_load2033,basisEval207D);
      real r209B#2 = RMul(dof_load203C,basisEval207E);
      real r209E#2 = RMul(dof_load2045,basisEval207E);
      real r209F#1 = RAdd(r2095,r2098);
      real r20A0#1 = RAdd(r209F,r209B);
      real r20A1#13 = RAdd(r20A0,r209E);
      real r20A5#1 = RMul(dof_load2033,basisEval207E);
      real r20A7#1 = RMul(dof_load203C,basisEval207D);
      real r20AA#2 = RAdd(r2095,r20A5);
      real r20AB#1 = RAdd(r20AA,r20A7);
      real r20AC#13 = RAdd(r20AB,r209E);
      real r20B4#1 = RMul(dof_load2045,basisEval207D);
      real r20B6#1 = RAdd(r20AA,r209B);
      real r20B7#12 = RAdd(r20B6,r20B4);
      real r20BA#2 = RMul(dof_load202B,basisEval207C);
      real r20BC#1 = RMul(dof_load2034,basisEval207D);
      real r20BE#2 = RMul(dof_load203D,basisEval207E);
      real r20C0#2 = RMul(dof_load2046,basisEval207E);
      real r20C1#1 = RAdd(r20BA,r20BC);
      real r20C2#1 = RAdd(r20C1,r20BE);
      real r20C3#13 = RAdd(r20C2,r20C0);
      real r20C5#1 = RMul(dof_load2034,basisEval207E);
      real r20C6#1 = RMul(dof_load203D,basisEval207D);
      real r20C8#2 = RAdd(r20BA,r20C5);
      real r20C9#1 = RAdd(r20C8,r20C6);
      real r20CA#13 = RAdd(r20C9,r20C0);
      real r20CE#1 = RMul(dof_load2046,basisEval207D);
      real r20D0#1 = RAdd(r20C8,r20BE);
      real r20D1#12 = RAdd(r20D0,r20CE);
      real r20D4#2 = RMul(dof_load202C,basisEval207C);
      real r20D6#1 = RMul(dof_load2035,basisEval207D);
      real r20D8#2 = RMul(dof_load203E,basisEval207E);
      real r20DA#2 = RMul(dof_load2047,basisEval207E);
      real r20DB#1 = RAdd(r20D4,r20D6);
      real r20DC#1 = RAdd(r20DB,r20D8);
      real r20DD#13 = RAdd(r20DC,r20DA);
      real r20DF#1 = RMul(dof_load2035,basisEval207E);
      real r20E0#1 = RMul(dof_load203E,basisEval207D);
      real r20E2#2 = RAdd(r20D4,r20DF);
      real r20E3#1 = RAdd(r20E2,r20E0);
      real r20E4#13 = RAdd(r20E3,r20DA);
      real r20E8#1 = RMul(dof_load2047,basisEval207D);
      real r20EA#1 = RAdd(r20E2,r20D8);
      real r20EB#12 = RAdd(r20EA,r20E8);
      real r214C#3 = RMul(basisEval207E,r20A1);
      real r214E#3 = RMul(basisEval207E,r20C3);
      real r2150#5 = RMul(basisEval207E,r20DD);
      real r2151#3 = RAdd(r214C,r214E);
      real r2152#9 = RAdd(r2151,r2150);
      real r2154#3 = RMul(basisEval207E,r20AC);
      real r2156#3 = RMul(basisEval207E,r20CA);
      real r2158#5 = RMul(basisEval207E,r20E4);
      real r2159#3 = RAdd(r2154,r2156);
      real r215A#9 = RAdd(r2159,r2158);
      real r215C#3 = RMul(basisEval207E,r20B7);
      real r215E#3 = RMul(basisEval207E,r20D1);
      real r2160#5 = RMul(basisEval207E,r20EB);
      real r2161#3 = RAdd(r215C,r215E);
      real r2162#12 = RAdd(r2161,r2160);
      real r2165#1 = RMul(coeff2078,r20DD);
      real r2166#3 = RAdd(r2151,r2165);
      real r2167#1 = RMul(coeff2078,r20E4);
      real r2168#3 = RAdd(r2159,r2167);
      real r2169#1 = RMul(coeff2078,r20EB);
      real r216A#4 = RAdd(r2161,r2169);
      real r216D#1 = RMul(one2079,r20C3);
      real r216E#1 = RAdd(r214C,r216D);
      real r216F#3 = RAdd(r216E,r2150);
      real r2170#1 = RMul(one2079,r20CA);
      real r2171#1 = RAdd(r2154,r2170);
      real r2172#3 = RAdd(r2171,r2158);
      real r2173#1 = RMul(one2079,r20D1);
      real r2174#1 = RAdd(r215C,r2173);
      real r2175#4 = RAdd(r2174,r2160);
      real r2178#1 = RMul(one2079,r20DD);
      real r2179#3 = RAdd(r2151,r2178);
      real r217A#1 = RMul(one2079,r20E4);
      real r217B#3 = RAdd(r2159,r217A);
      real r217C#1 = RMul(one2079,r20EB);
      real r217D#4 = RAdd(r2161,r217C);
      real r217F#1 = RMul(coeff2078,r20A1);
      real r2180#1 = RAdd(r217F,r214E);
      real r2181#3 = RAdd(r2180,r2150);
      real r2182#1 = RMul(coeff2078,r20AC);
      real r2183#1 = RAdd(r2182,r2156);
      real r2184#3 = RAdd(r2183,r2158);
      real r2185#1 = RMul(coeff2078,r20B7);
      real r2186#1 = RAdd(r2185,r215E);
      real r2187#4 = RAdd(r2186,r2160);
      real r218A#1 = RMul(coeff2078,r20C3);
      real r218B#1 = RAdd(r214C,r218A);
      real r218C#3 = RAdd(r218B,r2150);
      real r218D#1 = RMul(coeff2078,r20CA);
      real r218E#1 = RAdd(r2154,r218D);
      real r218F#3 = RAdd(r218E,r2158);
      real r2190#1 = RMul(coeff2078,r20D1);
      real r2191#1 = RAdd(r215C,r2190);
      real r2192#4 = RAdd(r2191,r2160);
      real r2194#1 = RMul(one2079,r20A1);
      real r2195#1 = RAdd(r2194,r214E);
      real r2196#3 = RAdd(r2195,r2150);
      real r2197#1 = RMul(one2079,r20AC);
      real r2198#1 = RAdd(r2197,r2156);
      real r2199#3 = RAdd(r2198,r2158);
      real r219A#1 = RMul(one2079,r20B7);
      real r219B#1 = RAdd(r219A,r215E);
      real r219C#4 = RAdd(r219B,r2160);
      real r21F9#1 = RMul(r20A1,r2152);
      real r21FC#1 = RMul(r20C3,r2179);
      real r21FF#1 = RMul(r20DD,r218C);
      real r2200#1 = RAdd(r21F9,r21FC);
      real r2201#1 = RAdd(r2200,r21FF);
      real r2203#1 = RMul(r20A1,r215A);
      real r2205#1 = RMul(r20C3,r217B);
      real r2207#1 = RMul(r20DD,r218F);
      real r2208#1 = RAdd(r2203,r2205);
      real r2209#2 = RAdd(r2208,r2207);
      real r220B#1 = RMul(r20A1,r2162);
      real r220D#1 = RMul(r20C3,r217D);
      real r220F#1 = RMul(r20DD,r2192);
      real r2210#1 = RAdd(r220B,r220D);
      real r2211#2 = RAdd(r2210,r220F);
      real r2214#1 = RMul(r20A1,r2166);
      real r2216#1 = RMul(r20C3,r2152);
      real r2218#1 = RMul(r20DD,r2196);
      real r2219#1 = RAdd(r2214,r2216);
      real r221A#1 = RAdd(r2219,r2218);
      real r221C#1 = RMul(r20A1,r2168);
      real r221E#1 = RMul(r20C3,r215A);
      real r2220#1 = RMul(r20DD,r2199);
      real r2221#1 = RAdd(r221C,r221E);
      real r2222#2 = RAdd(r2221,r2220);
      real r2224#1 = RMul(r20A1,r216A);
      real r2226#1 = RMul(r20C3,r2162);
      real r2228#1 = RMul(r20DD,r219C);
      real r2229#1 = RAdd(r2224,r2226);
      real r222A#2 = RAdd(r2229,r2228);
      real r222D#1 = RMul(r20A1,r216F);
      real r222F#1 = RMul(r20C3,r2181);
      real r2231#1 = RMul(r20DD,r2152);
      real r2232#1 = RAdd(r222D,r222F);
      real r2233#1 = RAdd(r2232,r2231);
      real r2235#1 = RMul(r20A1,r2172);
      real r2237#1 = RMul(r20C3,r2184);
      real r2239#1 = RMul(r20DD,r215A);
      real r223A#1 = RAdd(r2235,r2237);
      real r223B#2 = RAdd(r223A,r2239);
      real r223D#1 = RMul(r20A1,r2175);
      real r223F#1 = RMul(r20C3,r2187);
      real r2241#1 = RMul(r20DD,r2162);
      real r2242#1 = RAdd(r223D,r223F);
      real r2243#2 = RAdd(r2242,r2241);
      real r2247#1 = RMul(r20AC,r2152);
      real r2249#1 = RMul(r20CA,r2179);
      real r224B#1 = RMul(r20E4,r218C);
      real r224C#1 = RAdd(r2247,r2249);
      real r224D#2 = RAdd(r224C,r224B);
      real r224E#1 = RMul(r20AC,r215A);
      real r224F#1 = RMul(r20CA,r217B);
      real r2250#1 = RMul(r20E4,r218F);
      real r2251#1 = RAdd(r224E,r224F);
      real r2252#1 = RAdd(r2251,r2250);
      real r2253#1 = RMul(r20AC,r2162);
      real r2254#1 = RMul(r20CA,r217D);
      real r2255#1 = RMul(r20E4,r2192);
      real r2256#1 = RAdd(r2253,r2254);
      real r2257#2 = RAdd(r2256,r2255);
      real r2259#1 = RMul(r20AC,r2166);
      real r225A#1 = RMul(r20CA,r2152);
      real r225B#1 = RMul(r20E4,r2196);
      real r225C#1 = RAdd(r2259,r225A);
      real r225D#2 = RAdd(r225C,r225B);
      real r225E#1 = RMul(r20AC,r2168);
      real r225F#1 = RMul(r20CA,r215A);
      real r2260#1 = RMul(r20E4,r2199);
      real r2261#1 = RAdd(r225E,r225F);
      real r2262#1 = RAdd(r2261,r2260);
      real r2263#1 = RMul(r20AC,r216A);
      real r2264#1 = RMul(r20CA,r2162);
      real r2265#1 = RMul(r20E4,r219C);
      real r2266#1 = RAdd(r2263,r2264);
      real r2267#2 = RAdd(r2266,r2265);
      real r2269#1 = RMul(r20AC,r216F);
      real r226A#1 = RMul(r20CA,r2181);
      real r226B#1 = RMul(r20E4,r2152);
      real r226C#1 = RAdd(r2269,r226A);
      real r226D#2 = RAdd(r226C,r226B);
      real r226E#1 = RMul(r20AC,r2172);
      real r226F#1 = RMul(r20CA,r2184);
      real r2270#1 = RMul(r20E4,r215A);
      real r2271#1 = RAdd(r226E,r226F);
      real r2272#1 = RAdd(r2271,r2270);
      real r2273#1 = RMul(r20AC,r2175);
      real r2274#1 = RMul(r20CA,r2187);
      real r2275#1 = RMul(r20E4,r2162);
      real r2276#1 = RAdd(r2273,r2274);
      real r2277#2 = RAdd(r2276,r2275);
      real r227B#1 = RMul(r20B7,r2152);
      real r227D#1 = RMul(r20D1,r2179);
      real r227F#1 = RMul(r20EB,r218C);
      real r2280#1 = RAdd(r227B,r227D);
      real r2281#2 = RAdd(r2280,r227F);
      real r2282#1 = RMul(r20B7,r215A);
      real r2283#1 = RMul(r20D1,r217B);
      real r2284#1 = RMul(r20EB,r218F);
      real r2285#1 = RAdd(r2282,r2283);
      real r2286#2 = RAdd(r2285,r2284);
      real r2287#1 = RMul(r20B7,r2162);
      real r2288#1 = RMul(r20D1,r217D);
      real r2289#1 = RMul(r20EB,r2192);
      real r228A#1 = RAdd(r2287,r2288);
      real r228B#1 = RAdd(r228A,r2289);
      real r228D#1 = RMul(r20B7,r2166);
      real r228E#1 = RMul(r20D1,r2152);
      real r228F#1 = RMul(r20EB,r2196);
      real r2290#1 = RAdd(r228D,r228E);
      real r2291#2 = RAdd(r2290,r228F);
      real r2292#1 = RMul(r20B7,r2168);
      real r2293#1 = RMul(r20D1,r215A);
      real r2294#1 = RMul(r20EB,r2199);
      real r2295#1 = RAdd(r2292,r2293);
      real r2296#2 = RAdd(r2295,r2294);
      real r2297#1 = RMul(r20B7,r216A);
      real r2298#1 = RMul(r20D1,r2162);
      real r2299#1 = RMul(r20EB,r219C);
      real r229A#1 = RAdd(r2297,r2298);
      real r229B#1 = RAdd(r229A,r2299);
      real r229D#1 = RMul(r20B7,r216F);
      real r229E#1 = RMul(r20D1,r2181);
      real r229F#1 = RMul(r20EB,r2152);
      real r22A0#1 = RAdd(r229D,r229E);
      real r22A1#2 = RAdd(r22A0,r229F);
      real r22A2#1 = RMul(r20B7,r2172);
      real r22A3#1 = RMul(r20D1,r2184);
      real r22A4#1 = RMul(r20EB,r215A);
      real r22A5#1 = RAdd(r22A2,r22A3);
      real r22A6#2 = RAdd(r22A5,r22A4);
      real r22A7#1 = RMul(r20B7,r2175);
      real r22A8#1 = RMul(r20D1,r2187);
      real r22A9#1 = RMul(r20EB,r2162);
      real r22AA#1 = RAdd(r22A7,r22A8);
      real r22AB#1 = RAdd(r22AA,r22A9);
      tensor[3] probe_l_142367#1 = <tensor[3]>[r20A1,r20C3,r20DD];
      tensor[3] probe_l_1523B4#3 = <tensor[3]>[r20AC,r20CA,r20E4];
      tensor[3] tensor245F#1 = <tensor[3]>[r2162,r217D,r2192];
      tensor[3] tensor2465#1 = <tensor[3]>[r216A,r2162,r219C];
      tensor[3] tensor246C#1 = <tensor[3]>[r2175,r2187,r2162];
      real vdot248F#1 = VDot<3>(probe_l_1523B4,tensor245F);
      real vdot2491#1 = VDot<3>(probe_l_1523B4,tensor2465);
      real vdot2493#1 = VDot<3>(probe_l_1523B4,tensor246C);
      tensor[3] op1_e3_l_18248D#1 = <tensor[3]>[vdot248F,vdot2491,vdot2493];
      real op1_e3_l_19249C#1 = VDot<3>(probe_l_142367,op1_e3_l_18248D);
      real r24A2#2 = RMul(basisEval207E,r2201);
      real r24A4#1 = RMul(basisEval207E,r2209);
      real r24A6#2 = RMul(basisEval207E,r2211);
      real r24A8#2 = RMul(basisEval207E,r224D);
      real r24AA#3 = RMul(basisEval207E,r2252);
      real r24AD#1 = RMul(one2079,r2257);
      real r24AF#2 = RMul(basisEval207E,r2281);
      real r24B2#1 = RMul(coeff2078,r2286);
      real r24B4#3 = RMul(basisEval207E,r228B);
      real r24B5#2 = RAdd(r24A2,r24A4);
      real r24B6#1 = RAdd(r24B5,r24A6);
      real r24B7#1 = RAdd(r24B6,r24A8);
      real r24B8#1 = RAdd(r24B7,r24AA);
      real r24B9#1 = RAdd(r24B8,r24AD);
      real r24BA#1 = RAdd(r24B9,r24AF);
      real r24BB#1 = RAdd(r24BA,r24B2);
      real r24BC#1 = RAdd(r24BB,r24B4);
      real r24BE#2 = RMul(basisEval207E,r221A);
      real r24C0#1 = RMul(basisEval207E,r2222);
      real r24C2#2 = RMul(basisEval207E,r222A);
      real r24C4#2 = RMul(basisEval207E,r225D);
      real r24C6#3 = RMul(basisEval207E,r2262);
      real r24C8#1 = RMul(one2079,r2267);
      real r24CA#2 = RMul(basisEval207E,r2291);
      real r24CC#1 = RMul(coeff2078,r2296);
      real r24CE#3 = RMul(basisEval207E,r229B);
      real r24CF#2 = RAdd(r24BE,r24C0);
      real r24D0#1 = RAdd(r24CF,r24C2);
      real r24D1#1 = RAdd(r24D0,r24C4);
      real r24D2#1 = RAdd(r24D1,r24C6);
      real r24D3#1 = RAdd(r24D2,r24C8);
      real r24D4#1 = RAdd(r24D3,r24CA);
      real r24D5#1 = RAdd(r24D4,r24CC);
      real r24D6#1 = RAdd(r24D5,r24CE);
      real r24D8#2 = RMul(basisEval207E,r2233);
      real r24DA#1 = RMul(basisEval207E,r223B);
      real r24DC#2 = RMul(basisEval207E,r2243);
      real r24DE#2 = RMul(basisEval207E,r226D);
      real r24E0#3 = RMul(basisEval207E,r2272);
      real r24E2#1 = RMul(one2079,r2277);
      real r24E4#2 = RMul(basisEval207E,r22A1);
      real r24E6#1 = RMul(coeff2078,r22A6);
      real r24E8#3 = RMul(basisEval207E,r22AB);
      real r24E9#2 = RAdd(r24D8,r24DA);
      real r24EA#1 = RAdd(r24E9,r24DC);
      real r24EB#1 = RAdd(r24EA,r24DE);
      real r24EC#1 = RAdd(r24EB,r24E0);
      real r24ED#1 = RAdd(r24EC,r24E2);
      real r24EE#1 = RAdd(r24ED,r24E4);
      real r24EF#1 = RAdd(r24EE,r24E6);
      real r24F0#1 = RAdd(r24EF,r24E8);
      real r24F2#1 = RMul(coeff2078,r2211);
      real r24F3#2 = RMul(basisEval207E,r2257);
      real r24F4#1 = RMul(one2079,r2281);
      real r24F5#2 = RMul(basisEval207E,r2286);
      real r24F6#1 = RAdd(r24B5,r24F2);
      real r24F7#1 = RAdd(r24F6,r24A8);
      real r24F8#1 = RAdd(r24F7,r24AA);
      real r24F9#1 = RAdd(r24F8,r24F3);
      real r24FA#1 = RAdd(r24F9,r24F4);
      real r24FB#1 = RAdd(r24FA,r24F5);
      real r24FC#1 = RAdd(r24FB,r24B4);
      real r24FD#1 = RMul(coeff2078,r222A);
      real r24FE#2 = RMul(basisEval207E,r2267);
      real r24FF#1 = RMul(one2079,r2291);
      real r2500#2 = RMul(basisEval207E,r2296);
      real r2501#1 = RAdd(r24CF,r24FD);
      real r2502#1 = RAdd(r2501,r24C4);
      real r2503#1 = RAdd(r2502,r24C6);
      real r2504#1 = RAdd(r2503,r24FE);
      real r2505#1 = RAdd(r2504,r24FF);
      real r2506#1 = RAdd(r2505,r2500);
      real r2507#1 = RAdd(r2506,r24CE);
      real r2508#1 = RMul(coeff2078,r2243);
      real r2509#2 = RMul(basisEval207E,r2277);
      real r250A#1 = RMul(one2079,r22A1);
      real r250B#2 = RMul(basisEval207E,r22A6);
      real r250C#1 = RAdd(r24E9,r2508);
      real r250D#1 = RAdd(r250C,r24DE);
      real r250E#1 = RAdd(r250D,r24E0);
      real r250F#1 = RAdd(r250E,r2509);
      real r2510#1 = RAdd(r250F,r250A);
      real r2511#1 = RAdd(r2510,r250B);
      real r2512#1 = RAdd(r2511,r24E8);
      real r2514#1 = RMul(one2079,r2209);
      real r2515#1 = RMul(coeff2078,r224D);
      real r2516#1 = RAdd(r24A2,r2514);
      real r2517#1 = RAdd(r2516,r24A6);
      real r2518#1 = RAdd(r2517,r2515);
      real r2519#1 = RAdd(r2518,r24AA);
      real r251A#1 = RAdd(r2519,r24F3);
      real r251B#1 = RAdd(r251A,r24AF);
      real r251C#1 = RAdd(r251B,r24F5);
      real r251D#1 = RAdd(r251C,r24B4);
      real r251E#1 = RMul(one2079,r2222);
      real r251F#1 = RMul(coeff2078,r225D);
      real r2520#1 = RAdd(r24BE,r251E);
      real r2521#1 = RAdd(r2520,r24C2);
      real r2522#1 = RAdd(r2521,r251F);
      real r2523#1 = RAdd(r2522,r24C6);
      real r2524#1 = RAdd(r2523,r24FE);
      real r2525#1 = RAdd(r2524,r24CA);
      real r2526#1 = RAdd(r2525,r2500);
      real r2527#1 = RAdd(r2526,r24CE);
      real r2528#1 = RMul(one2079,r223B);
      real r2529#1 = RMul(coeff2078,r226D);
      real r252A#1 = RAdd(r24D8,r2528);
      real r252B#1 = RAdd(r252A,r24DC);
      real r252C#1 = RAdd(r252B,r2529);
      real r252D#1 = RAdd(r252C,r24E0);
      real r252E#1 = RAdd(r252D,r2509);
      real r252F#1 = RAdd(r252E,r24E4);
      real r2530#1 = RAdd(r252F,r250B);
      real r2531#1 = RAdd(r2530,r24E8);
      real realLit25C9#1 = 0.2e1;
      real op1_e3_l_2125C8#9 = RMul(realLit25C9,op1_e3_l_19249C);
      real varAcc25CF#1 = VIndex<3,0>(xn25CE);
      real varAcc25D0#1 = VIndex<3,1>(xn25CE);
      real varAcc25D1#1 = VIndex<3,2>(xn25CE);
      real prod25D6#2 = RMul(varAcc25CF,prod207A);
      real prod25D8#1 = RMul(varAcc25D0,one2079);
      real prod25D9#2 = RMul(one2079,prod25D8);
      real prod25DB#1 = RMul(one2079,varAcc25D1);
      real prod25DC#2 = RMul(one2079,prod25DB);
      real mult25DF#1 = RMul(coeff2078,prod25DC);
      real mult25E0#1 = RMul(coeff2078,prod25D9);
      real mult25E1#1 = RMul(coeff2078,prod25D6);
      real sum25E2#1 = RAdd(mult25E0,mult25E1);
      real sum25E3#1 = RAdd(mult25DF,sum25E2);
      real sum25E4#3 = RAdd(basisEval207D,sum25E3);
      real basisEval25E6#3 = RMul(one2079,prod25D6);
      real basisEval25E7#3 = RMul(one2079,prod25D9);
      real basisEval25E8#3 = RMul(one2079,prod25DC);
      real r2609#1 = RMul(dof_load202A,sum25E4);
      real r260C#1 = RMul(dof_load2033,basisEval25E6);
      real r260F#1 = RMul(dof_load203C,basisEval25E7);
      real r2612#1 = RMul(dof_load2045,basisEval25E8);
      real r2613#1 = RAdd(r2609,r260C);
      real r2614#1 = RAdd(r2613,r260F);
      real r2615#1 = RAdd(r2614,r2612);
      real r2617#1 = RMul(dof_load202B,sum25E4);
      real r2619#1 = RMul(dof_load2034,basisEval25E6);
      real r261B#1 = RMul(dof_load203D,basisEval25E7);
      real r261D#1 = RMul(dof_load2046,basisEval25E8);
      real r261E#1 = RAdd(r2617,r2619);
      real r261F#1 = RAdd(r261E,r261B);
      real r2620#1 = RAdd(r261F,r261D);
      real r2622#1 = RMul(dof_load202C,sum25E4);
      real r2624#1 = RMul(dof_load2035,basisEval25E6);
      real r2626#1 = RMul(dof_load203E,basisEval25E7);
      real r2628#1 = RMul(dof_load2047,basisEval25E8);
      real r2629#1 = RAdd(r2622,r2624);
      real r262A#1 = RAdd(r2629,r2626);
      real r262B#1 = RAdd(r262A,r2628);
      tensor[3] probe_l_222606#1 = <tensor[3]>[r2615,r2620,r262B];
      real r2655#1 = RDiv(r24BC,op1_e3_l_2125C8);
      real r2657#1 = RDiv(r24D6,op1_e3_l_2125C8);
      real r2659#1 = RDiv(r24F0,op1_e3_l_2125C8);
      tensor[3] tensor265A#1 = <tensor[3]>[r2655,r2657,r2659];
      real r265C#1 = RDiv(r24FC,op1_e3_l_2125C8);
      real r265E#1 = RDiv(r2507,op1_e3_l_2125C8);
      real r2660#1 = RDiv(r2512,op1_e3_l_2125C8);
      tensor[3] tensor2661#1 = <tensor[3]>[r265C,r265E,r2660];
      real r2663#1 = RDiv(r251D,op1_e3_l_2125C8);
      real r2665#1 = RDiv(r2527,op1_e3_l_2125C8);
      real r2667#1 = RDiv(r2531,op1_e3_l_2125C8);
      tensor[3] tensor2668#1 = <tensor[3]>[r2663,r2665,r2667];
      tensor[3] op1_e3_l_242680#3 = VSub<3>(probe_l_222606,pos1FE6);
      real vdot2685#1 = VDot<3>(tensor265A,op1_e3_l_242680);
      real vdot2687#1 = VDot<3>(tensor2661,op1_e3_l_242680);
      real vdot2689#1 = VDot<3>(tensor2668,op1_e3_l_242680);
      tensor[3] op1_e3_l_252683#3 = <tensor[3]>[vdot2685,vdot2687,vdot2689];
      tensor[3] xn2692#4 = VSub<3>(xn25CE,op1_e3_l_252683);
      real _t2695#2 = 0.1e-7;
      real _t2697#1 = RMul(_t2695,_t2695);
      real _t26F9#1 = VDot<3>(op1_e3_l_252683,op1_e3_l_252683);
      bool _t26FC#1 = GTE<real>(_t2697,_t26F9);
      if _t26FC then goto ASSIGN2702 else goto JOIN272B
    ASSIGN2702:  preds = [COND26FE]
      real _t2701#4 = 0.1e-4;
      real _t2703#1 = RAdd(one2079,_t2701);
      tensor[3] _t2706#1 = <tensor[3]>[one2079,one2079,one2079];
      real _t2708#1 = VDot<3>(_t2706,xn2692);
      bool _t270B#1 = GT<real>(_t2703,_t2708);
      tensor[3] _t270D#1 = <tensor[3]>[_t2701,_t2701,_t2701];
      tensor[3] _t270F#3 = VAdd<3>(_t270D,xn2692);
      real _t2712#1 = VIndex<3,0>(_t270F);
      real _t2714#3 = -0.e0;
      bool _t2716#1 = GT<real>(_t2712,_t2714);
      real _t2718#1 = VIndex<3,1>(_t270F);
      bool _t271A#1 = GT<real>(_t2718,_t2714);
      real _t271C#1 = VIndex<3,2>(_t270F);
      bool _t271E#1 = GT<real>(_t271C,_t2714);
      bool _t2720#1 = BAnd(_t271A,_t271E);
      bool _t2722#1 = BAnd(_t2716,_t2720);
      bool _t2724#1 = BAnd(_t270B,_t2722);
      if _t2724 then goto ASSIGN2728 else goto JOIN272A
    ASSIGN2728:  preds = [COND2726]
      femData:MeshPos _t2727#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellItter1FF8,xn2692,pos1FE6);
      return _t2727
      goto JOIN272A
    JOIN272A:  preds = [*RETURN(_t2727)2729,COND2726]
      goto JOIN272B
    JOIN272B:  preds = [JOIN272A,COND26FE]
      goto FOREACH1FFF
    NEXT272E:  preds = [FOREACH1FFF]
      goto FOREACH1FF9
    ASSIGN2730:  preds = [FOREACH1FF9]
      int _t272F#6 = 2;
      int _t2731#6 = 3;
      int _t2733#1 = IMul(_t2731,numCell1FF4);
      int[] _t2735#1 = Range(newtonInt1FEC,_t2733);
    FOREACH2738:  preds = [ASSIGN2736,NEXT2E78]
      foreach (itter2737 in _t2735) on exit goto ASSIGN2E7B
        int cellInt273A#5 = phi(cellInt1FEE,cellInt2E75)
        int newtonInt2E67#1 = phi(newtonInt1FEC,newtonInt2E76)
        tensor[3] xn2D08#4 = phi(xn272D,xn2DCC)
      int ilit273B#1 = 4;
      int mulRes273C#4 = IMul(cellInt273A,ilit273B);
      int idx273F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes273C);
      int addRes2741#1 = IAdd(mulRes273C,_t1FF2);
      int idx2742#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2741);
      int addRes2744#1 = IAdd(mulRes273C,_t272F);
      int idx2745#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2744);
      int addRes2747#1 = IAdd(mulRes273C,_t2731);
      int idx2748#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2747);
      int mulRes275E#3 = IMul(_t2731,idx273F);
      int addRes2761#1 = IAdd(_t1FF2,mulRes275E);
      int addRes2763#1 = IAdd(_t272F,mulRes275E);
      real dof_load2764#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes275E);
      real dof_load2765#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2761);
      real dof_load2766#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2763);
      int mulRes2769#3 = IMul(_t2731,idx2742);
      int addRes276B#1 = IAdd(_t1FF2,mulRes2769);
      int addRes276C#1 = IAdd(_t272F,mulRes2769);
      real dof_load276D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2769);
      real dof_load276E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276B);
      real dof_load276F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276C);
      int mulRes2772#3 = IMul(_t2731,idx2745);
      int addRes2774#1 = IAdd(_t1FF2,mulRes2772);
      int addRes2775#1 = IAdd(_t272F,mulRes2772);
      real dof_load2776#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2772);
      real dof_load2777#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2774);
      real dof_load2778#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2775);
      int mulRes277B#3 = IMul(_t2731,idx2748);
      int addRes277D#1 = IAdd(_t1FF2,mulRes277B);
      int addRes277E#1 = IAdd(_t272F,mulRes277B);
      real dof_load277F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes277B);
      real dof_load2780#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277D);
      real dof_load2781#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277E);
      real coeff27B2#22 = -0.1e1;
      real one27B3#33 = 0.1e1;
      real prod27B4#2 = RMul(one27B3,one27B3);
      real prod27B5#2 = RMul(one27B3,prod27B4);
      real basisEval27B6#3 = RMul(coeff27B2,prod27B5);
      real basisEval27B7#10 = RMul(one27B3,prod27B5);
      real basisEval27B8#45 = 0.e0;
      real r27CF#2 = RMul(dof_load2764,basisEval27B6);
      real r27D2#1 = RMul(dof_load276D,basisEval27B7);
      real r27D5#2 = RMul(dof_load2776,basisEval27B8);
      real r27D8#2 = RMul(dof_load277F,basisEval27B8);
      real r27D9#1 = RAdd(r27CF,r27D2);
      real r27DA#1 = RAdd(r27D9,r27D5);
      real r27DB#13 = RAdd(r27DA,r27D8);
      real r27DF#1 = RMul(dof_load276D,basisEval27B8);
      real r27E1#1 = RMul(dof_load2776,basisEval27B7);
      real r27E4#2 = RAdd(r27CF,r27DF);
      real r27E5#1 = RAdd(r27E4,r27E1);
      real r27E6#13 = RAdd(r27E5,r27D8);
      real r27EE#1 = RMul(dof_load277F,basisEval27B7);
      real r27F0#1 = RAdd(r27E4,r27D5);
      real r27F1#12 = RAdd(r27F0,r27EE);
      real r27F4#2 = RMul(dof_load2765,basisEval27B6);
      real r27F6#1 = RMul(dof_load276E,basisEval27B7);
      real r27F8#2 = RMul(dof_load2777,basisEval27B8);
      real r27FA#2 = RMul(dof_load2780,basisEval27B8);
      real r27FB#1 = RAdd(r27F4,r27F6);
      real r27FC#1 = RAdd(r27FB,r27F8);
      real r27FD#13 = RAdd(r27FC,r27FA);
      real r27FF#1 = RMul(dof_load276E,basisEval27B8);
      real r2800#1 = RMul(dof_load2777,basisEval27B7);
      real r2802#2 = RAdd(r27F4,r27FF);
      real r2803#1 = RAdd(r2802,r2800);
      real r2804#13 = RAdd(r2803,r27FA);
      real r2808#1 = RMul(dof_load2780,basisEval27B7);
      real r280A#1 = RAdd(r2802,r27F8);
      real r280B#12 = RAdd(r280A,r2808);
      real r280E#2 = RMul(dof_load2766,basisEval27B6);
      real r2810#1 = RMul(dof_load276F,basisEval27B7);
      real r2812#2 = RMul(dof_load2778,basisEval27B8);
      real r2814#2 = RMul(dof_load2781,basisEval27B8);
      real r2815#1 = RAdd(r280E,r2810);
      real r2816#1 = RAdd(r2815,r2812);
      real r2817#13 = RAdd(r2816,r2814);
      real r2819#1 = RMul(dof_load276F,basisEval27B8);
      real r281A#1 = RMul(dof_load2778,basisEval27B7);
      real r281C#2 = RAdd(r280E,r2819);
      real r281D#1 = RAdd(r281C,r281A);
      real r281E#13 = RAdd(r281D,r2814);
      real r2822#1 = RMul(dof_load2781,basisEval27B7);
      real r2824#1 = RAdd(r281C,r2812);
      real r2825#12 = RAdd(r2824,r2822);
      real r2886#3 = RMul(basisEval27B8,r27DB);
      real r2888#3 = RMul(basisEval27B8,r27FD);
      real r288A#5 = RMul(basisEval27B8,r2817);
      real r288B#3 = RAdd(r2886,r2888);
      real r288C#9 = RAdd(r288B,r288A);
      real r288E#3 = RMul(basisEval27B8,r27E6);
      real r2890#3 = RMul(basisEval27B8,r2804);
      real r2892#5 = RMul(basisEval27B8,r281E);
      real r2893#3 = RAdd(r288E,r2890);
      real r2894#9 = RAdd(r2893,r2892);
      real r2896#3 = RMul(basisEval27B8,r27F1);
      real r2898#3 = RMul(basisEval27B8,r280B);
      real r289A#5 = RMul(basisEval27B8,r2825);
      real r289B#3 = RAdd(r2896,r2898);
      real r289C#12 = RAdd(r289B,r289A);
      real r289F#1 = RMul(coeff27B2,r2817);
      real r28A0#3 = RAdd(r288B,r289F);
      real r28A1#1 = RMul(coeff27B2,r281E);
      real r28A2#3 = RAdd(r2893,r28A1);
      real r28A3#1 = RMul(coeff27B2,r2825);
      real r28A4#4 = RAdd(r289B,r28A3);
      real r28A7#1 = RMul(one27B3,r27FD);
      real r28A8#1 = RAdd(r2886,r28A7);
      real r28A9#3 = RAdd(r28A8,r288A);
      real r28AA#1 = RMul(one27B3,r2804);
      real r28AB#1 = RAdd(r288E,r28AA);
      real r28AC#3 = RAdd(r28AB,r2892);
      real r28AD#1 = RMul(one27B3,r280B);
      real r28AE#1 = RAdd(r2896,r28AD);
      real r28AF#4 = RAdd(r28AE,r289A);
      real r28B2#1 = RMul(one27B3,r2817);
      real r28B3#3 = RAdd(r288B,r28B2);
      real r28B4#1 = RMul(one27B3,r281E);
      real r28B5#3 = RAdd(r2893,r28B4);
      real r28B6#1 = RMul(one27B3,r2825);
      real r28B7#4 = RAdd(r289B,r28B6);
      real r28B9#1 = RMul(coeff27B2,r27DB);
      real r28BA#1 = RAdd(r28B9,r2888);
      real r28BB#3 = RAdd(r28BA,r288A);
      real r28BC#1 = RMul(coeff27B2,r27E6);
      real r28BD#1 = RAdd(r28BC,r2890);
      real r28BE#3 = RAdd(r28BD,r2892);
      real r28BF#1 = RMul(coeff27B2,r27F1);
      real r28C0#1 = RAdd(r28BF,r2898);
      real r28C1#4 = RAdd(r28C0,r289A);
      real r28C4#1 = RMul(coeff27B2,r27FD);
      real r28C5#1 = RAdd(r2886,r28C4);
      real r28C6#3 = RAdd(r28C5,r288A);
      real r28C7#1 = RMul(coeff27B2,r2804);
      real r28C8#1 = RAdd(r288E,r28C7);
      real r28C9#3 = RAdd(r28C8,r2892);
      real r28CA#1 = RMul(coeff27B2,r280B);
      real r28CB#1 = RAdd(r2896,r28CA);
      real r28CC#4 = RAdd(r28CB,r289A);
      real r28CE#1 = RMul(one27B3,r27DB);
      real r28CF#1 = RAdd(r28CE,r2888);
      real r28D0#3 = RAdd(r28CF,r288A);
      real r28D1#1 = RMul(one27B3,r27E6);
      real r28D2#1 = RAdd(r28D1,r2890);
      real r28D3#3 = RAdd(r28D2,r2892);
      real r28D4#1 = RMul(one27B3,r27F1);
      real r28D5#1 = RAdd(r28D4,r2898);
      real r28D6#4 = RAdd(r28D5,r289A);
      real r2933#1 = RMul(r27DB,r288C);
      real r2936#1 = RMul(r27FD,r28B3);
      real r2939#1 = RMul(r2817,r28C6);
      real r293A#1 = RAdd(r2933,r2936);
      real r293B#1 = RAdd(r293A,r2939);
      real r293D#1 = RMul(r27DB,r2894);
      real r293F#1 = RMul(r27FD,r28B5);
      real r2941#1 = RMul(r2817,r28C9);
      real r2942#1 = RAdd(r293D,r293F);
      real r2943#2 = RAdd(r2942,r2941);
      real r2945#1 = RMul(r27DB,r289C);
      real r2947#1 = RMul(r27FD,r28B7);
      real r2949#1 = RMul(r2817,r28CC);
      real r294A#1 = RAdd(r2945,r2947);
      real r294B#2 = RAdd(r294A,r2949);
      real r294E#1 = RMul(r27DB,r28A0);
      real r2950#1 = RMul(r27FD,r288C);
      real r2952#1 = RMul(r2817,r28D0);
      real r2953#1 = RAdd(r294E,r2950);
      real r2954#1 = RAdd(r2953,r2952);
      real r2956#1 = RMul(r27DB,r28A2);
      real r2958#1 = RMul(r27FD,r2894);
      real r295A#1 = RMul(r2817,r28D3);
      real r295B#1 = RAdd(r2956,r2958);
      real r295C#2 = RAdd(r295B,r295A);
      real r295E#1 = RMul(r27DB,r28A4);
      real r2960#1 = RMul(r27FD,r289C);
      real r2962#1 = RMul(r2817,r28D6);
      real r2963#1 = RAdd(r295E,r2960);
      real r2964#2 = RAdd(r2963,r2962);
      real r2967#1 = RMul(r27DB,r28A9);
      real r2969#1 = RMul(r27FD,r28BB);
      real r296B#1 = RMul(r2817,r288C);
      real r296C#1 = RAdd(r2967,r2969);
      real r296D#1 = RAdd(r296C,r296B);
      real r296F#1 = RMul(r27DB,r28AC);
      real r2971#1 = RMul(r27FD,r28BE);
      real r2973#1 = RMul(r2817,r2894);
      real r2974#1 = RAdd(r296F,r2971);
      real r2975#2 = RAdd(r2974,r2973);
      real r2977#1 = RMul(r27DB,r28AF);
      real r2979#1 = RMul(r27FD,r28C1);
      real r297B#1 = RMul(r2817,r289C);
      real r297C#1 = RAdd(r2977,r2979);
      real r297D#2 = RAdd(r297C,r297B);
      real r2981#1 = RMul(r27E6,r288C);
      real r2983#1 = RMul(r2804,r28B3);
      real r2985#1 = RMul(r281E,r28C6);
      real r2986#1 = RAdd(r2981,r2983);
      real r2987#2 = RAdd(r2986,r2985);
      real r2988#1 = RMul(r27E6,r2894);
      real r2989#1 = RMul(r2804,r28B5);
      real r298A#1 = RMul(r281E,r28C9);
      real r298B#1 = RAdd(r2988,r2989);
      real r298C#1 = RAdd(r298B,r298A);
      real r298D#1 = RMul(r27E6,r289C);
      real r298E#1 = RMul(r2804,r28B7);
      real r298F#1 = RMul(r281E,r28CC);
      real r2990#1 = RAdd(r298D,r298E);
      real r2991#2 = RAdd(r2990,r298F);
      real r2993#1 = RMul(r27E6,r28A0);
      real r2994#1 = RMul(r2804,r288C);
      real r2995#1 = RMul(r281E,r28D0);
      real r2996#1 = RAdd(r2993,r2994);
      real r2997#2 = RAdd(r2996,r2995);
      real r2998#1 = RMul(r27E6,r28A2);
      real r2999#1 = RMul(r2804,r2894);
      real r299A#1 = RMul(r281E,r28D3);
      real r299B#1 = RAdd(r2998,r2999);
      real r299C#1 = RAdd(r299B,r299A);
      real r299D#1 = RMul(r27E6,r28A4);
      real r299E#1 = RMul(r2804,r289C);
      real r299F#1 = RMul(r281E,r28D6);
      real r29A0#1 = RAdd(r299D,r299E);
      real r29A1#2 = RAdd(r29A0,r299F);
      real r29A3#1 = RMul(r27E6,r28A9);
      real r29A4#1 = RMul(r2804,r28BB);
      real r29A5#1 = RMul(r281E,r288C);
      real r29A6#1 = RAdd(r29A3,r29A4);
      real r29A7#2 = RAdd(r29A6,r29A5);
      real r29A8#1 = RMul(r27E6,r28AC);
      real r29A9#1 = RMul(r2804,r28BE);
      real r29AA#1 = RMul(r281E,r2894);
      real r29AB#1 = RAdd(r29A8,r29A9);
      real r29AC#1 = RAdd(r29AB,r29AA);
      real r29AD#1 = RMul(r27E6,r28AF);
      real r29AE#1 = RMul(r2804,r28C1);
      real r29AF#1 = RMul(r281E,r289C);
      real r29B0#1 = RAdd(r29AD,r29AE);
      real r29B1#2 = RAdd(r29B0,r29AF);
      real r29B5#1 = RMul(r27F1,r288C);
      real r29B7#1 = RMul(r280B,r28B3);
      real r29B9#1 = RMul(r2825,r28C6);
      real r29BA#1 = RAdd(r29B5,r29B7);
      real r29BB#2 = RAdd(r29BA,r29B9);
      real r29BC#1 = RMul(r27F1,r2894);
      real r29BD#1 = RMul(r280B,r28B5);
      real r29BE#1 = RMul(r2825,r28C9);
      real r29BF#1 = RAdd(r29BC,r29BD);
      real r29C0#2 = RAdd(r29BF,r29BE);
      real r29C1#1 = RMul(r27F1,r289C);
      real r29C2#1 = RMul(r280B,r28B7);
      real r29C3#1 = RMul(r2825,r28CC);
      real r29C4#1 = RAdd(r29C1,r29C2);
      real r29C5#1 = RAdd(r29C4,r29C3);
      real r29C7#1 = RMul(r27F1,r28A0);
      real r29C8#1 = RMul(r280B,r288C);
      real r29C9#1 = RMul(r2825,r28D0);
      real r29CA#1 = RAdd(r29C7,r29C8);
      real r29CB#2 = RAdd(r29CA,r29C9);
      real r29CC#1 = RMul(r27F1,r28A2);
      real r29CD#1 = RMul(r280B,r2894);
      real r29CE#1 = RMul(r2825,r28D3);
      real r29CF#1 = RAdd(r29CC,r29CD);
      real r29D0#2 = RAdd(r29CF,r29CE);
      real r29D1#1 = RMul(r27F1,r28A4);
      real r29D2#1 = RMul(r280B,r289C);
      real r29D3#1 = RMul(r2825,r28D6);
      real r29D4#1 = RAdd(r29D1,r29D2);
      real r29D5#1 = RAdd(r29D4,r29D3);
      real r29D7#1 = RMul(r27F1,r28A9);
      real r29D8#1 = RMul(r280B,r28BB);
      real r29D9#1 = RMul(r2825,r288C);
      real r29DA#1 = RAdd(r29D7,r29D8);
      real r29DB#2 = RAdd(r29DA,r29D9);
      real r29DC#1 = RMul(r27F1,r28AC);
      real r29DD#1 = RMul(r280B,r28BE);
      real r29DE#1 = RMul(r2825,r2894);
      real r29DF#1 = RAdd(r29DC,r29DD);
      real r29E0#2 = RAdd(r29DF,r29DE);
      real r29E1#1 = RMul(r27F1,r28AF);
      real r29E2#1 = RMul(r280B,r28C1);
      real r29E3#1 = RMul(r2825,r289C);
      real r29E4#1 = RAdd(r29E1,r29E2);
      real r29E5#1 = RAdd(r29E4,r29E3);
      tensor[3] probe_l_142AA1#1 = <tensor[3]>[r27DB,r27FD,r2817];
      tensor[3] probe_l_152AEE#3 = <tensor[3]>[r27E6,r2804,r281E];
      tensor[3] tensor2B99#1 = <tensor[3]>[r289C,r28B7,r28CC];
      tensor[3] tensor2B9F#1 = <tensor[3]>[r28A4,r289C,r28D6];
      tensor[3] tensor2BA6#1 = <tensor[3]>[r28AF,r28C1,r289C];
      real vdot2BC9#1 = VDot<3>(probe_l_152AEE,tensor2B99);
      real vdot2BCB#1 = VDot<3>(probe_l_152AEE,tensor2B9F);
      real vdot2BCD#1 = VDot<3>(probe_l_152AEE,tensor2BA6);
      tensor[3] op1_e3_l_182BC7#1 = <tensor[3]>[vdot2BC9,vdot2BCB,vdot2BCD];
      real op1_e3_l_192BD6#1 = VDot<3>(probe_l_142AA1,op1_e3_l_182BC7);
      real r2BDC#2 = RMul(basisEval27B8,r293B);
      real r2BDE#1 = RMul(basisEval27B8,r2943);
      real r2BE0#2 = RMul(basisEval27B8,r294B);
      real r2BE2#2 = RMul(basisEval27B8,r2987);
      real r2BE4#3 = RMul(basisEval27B8,r298C);
      real r2BE7#1 = RMul(one27B3,r2991);
      real r2BE9#2 = RMul(basisEval27B8,r29BB);
      real r2BEC#1 = RMul(coeff27B2,r29C0);
      real r2BEE#3 = RMul(basisEval27B8,r29C5);
      real r2BEF#2 = RAdd(r2BDC,r2BDE);
      real r2BF0#1 = RAdd(r2BEF,r2BE0);
      real r2BF1#1 = RAdd(r2BF0,r2BE2);
      real r2BF2#1 = RAdd(r2BF1,r2BE4);
      real r2BF3#1 = RAdd(r2BF2,r2BE7);
      real r2BF4#1 = RAdd(r2BF3,r2BE9);
      real r2BF5#1 = RAdd(r2BF4,r2BEC);
      real r2BF6#1 = RAdd(r2BF5,r2BEE);
      real r2BF8#2 = RMul(basisEval27B8,r2954);
      real r2BFA#1 = RMul(basisEval27B8,r295C);
      real r2BFC#2 = RMul(basisEval27B8,r2964);
      real r2BFE#2 = RMul(basisEval27B8,r2997);
      real r2C00#3 = RMul(basisEval27B8,r299C);
      real r2C02#1 = RMul(one27B3,r29A1);
      real r2C04#2 = RMul(basisEval27B8,r29CB);
      real r2C06#1 = RMul(coeff27B2,r29D0);
      real r2C08#3 = RMul(basisEval27B8,r29D5);
      real r2C09#2 = RAdd(r2BF8,r2BFA);
      real r2C0A#1 = RAdd(r2C09,r2BFC);
      real r2C0B#1 = RAdd(r2C0A,r2BFE);
      real r2C0C#1 = RAdd(r2C0B,r2C00);
      real r2C0D#1 = RAdd(r2C0C,r2C02);
      real r2C0E#1 = RAdd(r2C0D,r2C04);
      real r2C0F#1 = RAdd(r2C0E,r2C06);
      real r2C10#1 = RAdd(r2C0F,r2C08);
      real r2C12#2 = RMul(basisEval27B8,r296D);
      real r2C14#1 = RMul(basisEval27B8,r2975);
      real r2C16#2 = RMul(basisEval27B8,r297D);
      real r2C18#2 = RMul(basisEval27B8,r29A7);
      real r2C1A#3 = RMul(basisEval27B8,r29AC);
      real r2C1C#1 = RMul(one27B3,r29B1);
      real r2C1E#2 = RMul(basisEval27B8,r29DB);
      real r2C20#1 = RMul(coeff27B2,r29E0);
      real r2C22#3 = RMul(basisEval27B8,r29E5);
      real r2C23#2 = RAdd(r2C12,r2C14);
      real r2C24#1 = RAdd(r2C23,r2C16);
      real r2C25#1 = RAdd(r2C24,r2C18);
      real r2C26#1 = RAdd(r2C25,r2C1A);
      real r2C27#1 = RAdd(r2C26,r2C1C);
      real r2C28#1 = RAdd(r2C27,r2C1E);
      real r2C29#1 = RAdd(r2C28,r2C20);
      real r2C2A#1 = RAdd(r2C29,r2C22);
      real r2C2C#1 = RMul(coeff27B2,r294B);
      real r2C2D#2 = RMul(basisEval27B8,r2991);
      real r2C2E#1 = RMul(one27B3,r29BB);
      real r2C2F#2 = RMul(basisEval27B8,r29C0);
      real r2C30#1 = RAdd(r2BEF,r2C2C);
      real r2C31#1 = RAdd(r2C30,r2BE2);
      real r2C32#1 = RAdd(r2C31,r2BE4);
      real r2C33#1 = RAdd(r2C32,r2C2D);
      real r2C34#1 = RAdd(r2C33,r2C2E);
      real r2C35#1 = RAdd(r2C34,r2C2F);
      real r2C36#1 = RAdd(r2C35,r2BEE);
      real r2C37#1 = RMul(coeff27B2,r2964);
      real r2C38#2 = RMul(basisEval27B8,r29A1);
      real r2C39#1 = RMul(one27B3,r29CB);
      real r2C3A#2 = RMul(basisEval27B8,r29D0);
      real r2C3B#1 = RAdd(r2C09,r2C37);
      real r2C3C#1 = RAdd(r2C3B,r2BFE);
      real r2C3D#1 = RAdd(r2C3C,r2C00);
      real r2C3E#1 = RAdd(r2C3D,r2C38);
      real r2C3F#1 = RAdd(r2C3E,r2C39);
      real r2C40#1 = RAdd(r2C3F,r2C3A);
      real r2C41#1 = RAdd(r2C40,r2C08);
      real r2C42#1 = RMul(coeff27B2,r297D);
      real r2C43#2 = RMul(basisEval27B8,r29B1);
      real r2C44#1 = RMul(one27B3,r29DB);
      real r2C45#2 = RMul(basisEval27B8,r29E0);
      real r2C46#1 = RAdd(r2C23,r2C42);
      real r2C47#1 = RAdd(r2C46,r2C18);
      real r2C48#1 = RAdd(r2C47,r2C1A);
      real r2C49#1 = RAdd(r2C48,r2C43);
      real r2C4A#1 = RAdd(r2C49,r2C44);
      real r2C4B#1 = RAdd(r2C4A,r2C45);
      real r2C4C#1 = RAdd(r2C4B,r2C22);
      real r2C4E#1 = RMul(one27B3,r2943);
      real r2C4F#1 = RMul(coeff27B2,r2987);
      real r2C50#1 = RAdd(r2BDC,r2C4E);
      real r2C51#1 = RAdd(r2C50,r2BE0);
      real r2C52#1 = RAdd(r2C51,r2C4F);
      real r2C53#1 = RAdd(r2C52,r2BE4);
      real r2C54#1 = RAdd(r2C53,r2C2D);
      real r2C55#1 = RAdd(r2C54,r2BE9);
      real r2C56#1 = RAdd(r2C55,r2C2F);
      real r2C57#1 = RAdd(r2C56,r2BEE);
      real r2C58#1 = RMul(one27B3,r295C);
      real r2C59#1 = RMul(coeff27B2,r2997);
      real r2C5A#1 = RAdd(r2BF8,r2C58);
      real r2C5B#1 = RAdd(r2C5A,r2BFC);
      real r2C5C#1 = RAdd(r2C5B,r2C59);
      real r2C5D#1 = RAdd(r2C5C,r2C00);
      real r2C5E#1 = RAdd(r2C5D,r2C38);
      real r2C5F#1 = RAdd(r2C5E,r2C04);
      real r2C60#1 = RAdd(r2C5F,r2C3A);
      real r2C61#1 = RAdd(r2C60,r2C08);
      real r2C62#1 = RMul(one27B3,r2975);
      real r2C63#1 = RMul(coeff27B2,r29A7);
      real r2C64#1 = RAdd(r2C12,r2C62);
      real r2C65#1 = RAdd(r2C64,r2C16);
      real r2C66#1 = RAdd(r2C65,r2C63);
      real r2C67#1 = RAdd(r2C66,r2C1A);
      real r2C68#1 = RAdd(r2C67,r2C43);
      real r2C69#1 = RAdd(r2C68,r2C1E);
      real r2C6A#1 = RAdd(r2C69,r2C45);
      real r2C6B#1 = RAdd(r2C6A,r2C22);
      real realLit2D03#1 = 0.2e1;
      real op1_e3_l_212D02#9 = RMul(realLit2D03,op1_e3_l_192BD6);
      real varAcc2D09#1 = VIndex<3,0>(xn2D08);
      real varAcc2D0A#1 = VIndex<3,1>(xn2D08);
      real varAcc2D0B#1 = VIndex<3,2>(xn2D08);
      real prod2D10#2 = RMul(varAcc2D09,prod27B4);
      real prod2D12#1 = RMul(varAcc2D0A,one27B3);
      real prod2D13#2 = RMul(one27B3,prod2D12);
      real prod2D15#1 = RMul(one27B3,varAcc2D0B);
      real prod2D16#2 = RMul(one27B3,prod2D15);
      real mult2D19#1 = RMul(coeff27B2,prod2D16);
      real mult2D1A#1 = RMul(coeff27B2,prod2D13);
      real mult2D1B#1 = RMul(coeff27B2,prod2D10);
      real sum2D1C#1 = RAdd(mult2D1A,mult2D1B);
      real sum2D1D#1 = RAdd(mult2D19,sum2D1C);
      real sum2D1E#3 = RAdd(basisEval27B7,sum2D1D);
      real basisEval2D20#3 = RMul(one27B3,prod2D10);
      real basisEval2D21#3 = RMul(one27B3,prod2D13);
      real basisEval2D22#3 = RMul(one27B3,prod2D16);
      real r2D43#1 = RMul(dof_load2764,sum2D1E);
      real r2D46#1 = RMul(dof_load276D,basisEval2D20);
      real r2D49#1 = RMul(dof_load2776,basisEval2D21);
      real r2D4C#1 = RMul(dof_load277F,basisEval2D22);
      real r2D4D#1 = RAdd(r2D43,r2D46);
      real r2D4E#1 = RAdd(r2D4D,r2D49);
      real r2D4F#1 = RAdd(r2D4E,r2D4C);
      real r2D51#1 = RMul(dof_load2765,sum2D1E);
      real r2D53#1 = RMul(dof_load276E,basisEval2D20);
      real r2D55#1 = RMul(dof_load2777,basisEval2D21);
      real r2D57#1 = RMul(dof_load2780,basisEval2D22);
      real r2D58#1 = RAdd(r2D51,r2D53);
      real r2D59#1 = RAdd(r2D58,r2D55);
      real r2D5A#1 = RAdd(r2D59,r2D57);
      real r2D5C#1 = RMul(dof_load2766,sum2D1E);
      real r2D5E#1 = RMul(dof_load276F,basisEval2D20);
      real r2D60#1 = RMul(dof_load2778,basisEval2D21);
      real r2D62#1 = RMul(dof_load2781,basisEval2D22);
      real r2D63#1 = RAdd(r2D5C,r2D5E);
      real r2D64#1 = RAdd(r2D63,r2D60);
      real r2D65#1 = RAdd(r2D64,r2D62);
      tensor[3] probe_l_222D40#1 = <tensor[3]>[r2D4F,r2D5A,r2D65];
      real r2D8F#1 = RDiv(r2BF6,op1_e3_l_212D02);
      real r2D91#1 = RDiv(r2C10,op1_e3_l_212D02);
      real r2D93#1 = RDiv(r2C2A,op1_e3_l_212D02);
      tensor[3] tensor2D94#1 = <tensor[3]>[r2D8F,r2D91,r2D93];
      real r2D96#1 = RDiv(r2C36,op1_e3_l_212D02);
      real r2D98#1 = RDiv(r2C41,op1_e3_l_212D02);
      real r2D9A#1 = RDiv(r2C4C,op1_e3_l_212D02);
      tensor[3] tensor2D9B#1 = <tensor[3]>[r2D96,r2D98,r2D9A];
      real r2D9D#1 = RDiv(r2C57,op1_e3_l_212D02);
      real r2D9F#1 = RDiv(r2C61,op1_e3_l_212D02);
      real r2DA1#1 = RDiv(r2C6B,op1_e3_l_212D02);
      tensor[3] tensor2DA2#1 = <tensor[3]>[r2D9D,r2D9F,r2DA1];
      tensor[3] op1_e3_l_242DBA#3 = VSub<3>(probe_l_222D40,pos1FE6);
      real vdot2DBF#1 = VDot<3>(tensor2D94,op1_e3_l_242DBA);
      real vdot2DC1#1 = VDot<3>(tensor2D9B,op1_e3_l_242DBA);
      real vdot2DC3#1 = VDot<3>(tensor2DA2,op1_e3_l_242DBA);
      tensor[3] op1_e3_l_252DBD#3 = <tensor[3]>[vdot2DBF,vdot2DC1,vdot2DC3];
      tensor[3] xn2DCC#4 = VSub<3>(xn2D08,op1_e3_l_252DBD);
      real _t2DCF#2 = 0.1e-7;
      real _t2DD1#1 = RMul(_t2DCF,_t2DCF);
      real _t2E33#1 = VDot<3>(op1_e3_l_252DBD,op1_e3_l_252DBD);
      bool _t2E36#1 = GTE<real>(_t2DD1,_t2E33);
      if _t2E36 then goto ASSIGN2E3C else goto JOIN2E65
    ASSIGN2E3C:  preds = [COND2E38]
      real _t2E3B#4 = 0.1e-4;
      real _t2E3D#1 = RAdd(one27B3,_t2E3B);
      tensor[3] _t2E40#1 = <tensor[3]>[one27B3,one27B3,one27B3];
      real _t2E42#1 = VDot<3>(_t2E40,xn2DCC);
      bool _t2E45#1 = GT<real>(_t2E3D,_t2E42);
      tensor[3] _t2E47#1 = <tensor[3]>[_t2E3B,_t2E3B,_t2E3B];
      tensor[3] _t2E49#3 = VAdd<3>(_t2E47,xn2DCC);
      real _t2E4C#1 = VIndex<3,0>(_t2E49);
      real _t2E4E#3 = -0.e0;
      bool _t2E50#1 = GT<real>(_t2E4C,_t2E4E);
      real _t2E52#1 = VIndex<3,1>(_t2E49);
      bool _t2E54#1 = GT<real>(_t2E52,_t2E4E);
      real _t2E56#1 = VIndex<3,2>(_t2E49);
      bool _t2E58#1 = GT<real>(_t2E56,_t2E4E);
      bool _t2E5A#1 = BAnd(_t2E54,_t2E58);
      bool _t2E5C#1 = BAnd(_t2E50,_t2E5A);
      bool _t2E5E#1 = BAnd(_t2E45,_t2E5C);
      if _t2E5E then goto ASSIGN2E62 else goto JOIN2E64
    ASSIGN2E62:  preds = [COND2E60]
      femData:MeshPos _t2E61#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellInt273A,xn2DCC,pos1FE6);
      return _t2E61
      goto JOIN2E64
    JOIN2E64:  preds = [*RETURN(_t2E61)2E63,COND2E60]
      goto JOIN2E65
    JOIN2E65:  preds = [JOIN2E64,COND2E38]
      int newtonInt2E66#2 = IAdd(newtonInt2E67,_t1FF2);
      bool _t2E69#1 = GTE<int>(newtonInt2E66,_t272F);
      if _t2E69 then goto ASSIGN2E6D else goto JOIN2E77
    ASSIGN2E6D:  preds = [COND2E6B]
      bool _t2E6C#1 = GTE<int>(cellInt273A,numCell1FF4);
      if _t2E6C then goto ASSIGN2E70 else goto ASSIGN2E79
    ASSIGN2E70:  preds = [COND2E6E]
      femData:MeshPos _t2E6F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E6F
      goto JOIN2E74
    JOIN2E74:  preds = [*RETURN(_t2E6F)2E71,ASSIGN2E79]
      int cellInt2E72#1 = phi(cellInt2E73)
      goto JOIN2E77
    JOIN2E77:  preds = [JOIN2E74,COND2E6B]
      int cellInt2E75#1 = phi(cellInt2E72,cellInt273A)
      int newtonInt2E76#1 = phi(newtonInt1FEC,newtonInt2E66)
      goto FOREACH2738
    ASSIGN2E79:  preds = [COND2E6E]
      int cellInt2E73#1 = IAdd(cellInt273A,_t1FF2);
      goto JOIN2E74
    ASSIGN2E7B:  preds = [FOREACH2738]
      string _t2E7A#1 = "Bad end 2";
      string _t2E7C#1 = "\n";
      Print<[string,string]>(_t2E7A,_t2E7C);
      femData:MeshPos _t2E7F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E7F
}
## input initialization
  ENTRY1D28:  preds = []
    real isoval1D29#1 = 0.2e0;
    globals.isoval1D09 = isoval1D29;
    real thick1D2C#1 = 0.7e-1;
    globals.thick1D0A = thick1D2C;
    real _t1D2F#2 = 0.3e1;
    real _t1D31#1 = -0.3e1;
    tensor[3] camEye1D33#1 = <tensor[3]>[_t1D2F,_t1D31,_t1D2F];
    globals.camEye1D0B = camEye1D33;
    real _t1D36#3 = 0.5e0;
    tensor[3] camAt1D38#1 = <tensor[3]>[_t1D36,_t1D36,_t1D36];
    globals.camAt1D0C = camAt1D38;
    real _t1D3B#2 = 0.e0;
    real _t1D3D#2 = 0.1e1;
    tensor[3] camUp1D3F#2 = <tensor[3]>[_t1D3B,_t1D3B,_t1D3D];
    globals.camUp1D0D = camUp1D3F;
    real camFOV1D42#1 = 0.137e2;
    globals.camFOV1D0E = camFOV1D42;
    int iresU1D45#2 = 500;
    globals.iresU1D0F = iresU1D45;
    globals.iresV1D10 = iresU1D45;
    real camNear1D49#1 = -0.2e1;
    globals.camNear1D11 = camNear1D49;
    real camFar1D4C#1 = 0.5e1;
    globals.camFar1D12 = camFar1D4C;
    globals.refStep1D13 = _t1D3D;
    real rayStep1D50#1 = 0.1e-1;
    globals.rayStep1D14 = rayStep1D50;
    globals.lightVsp1D15 = camUp1D3F;
    real phongKa1D54#1 = 0.1e0;
    globals.phongKa1D16 = phongKa1D54;
    real phongKd1D57#1 = 0.9e0;
    globals.phongKd1D17 = phongKd1D57;
    bool debug1D5A#1 = false;
    globals.debug1D18 = debug1D5A;
    int su1D5D#2 = 250;
    globals.su1D19 = su1D5D;
    globals.sv1D1A = su1D5D;
    return
## global-variable initialization
  ENTRY1D62:  preds = []
    femData:Mesh a1D63#3 = globals.a1D06;
    femData:Space 0b043B_intermedateGlobal1D65#1 = globals.0b043B_intermedateGlobal1D07;
    femData:FemFunc 0c043D_intermedateGlobal1D67#1 = globals.0c043D_intermedateGlobal1D08;
    tensor[3] camEye1D69#1 = globals.camEye1D0B;
    tensor[3] camAt1D6B#1 = globals.camAt1D0C;
    tensor[3] camUp1D6D#3 = globals.camUp1D0D;
    real camFOV1D6F#1 = globals.camFOV1D0E;
    int iresU1D71#1 = globals.iresU1D0F;
    int iresV1D73#1 = globals.iresV1D10;
    tensor[3] lightVsp1D75#5 = globals.lightVsp1D15;
    int _t1D77#1 = 0;
    int _t1D79#1 = 1;
    int _t1D7B#1 = ExtractFemItem<int,NumCell(Mesh)>(a1D63);
    int _t1D7D#1 = ISub(_t1D7B,_t1D79);
    int[] _t1D7F#1 = Range(_t1D77,_t1D7D);
    femData:MeshCell[] _t1D81#1 = <femData:MeshCell[]>{};
  FOREACH1D84:  preds = [ASSIGN1D82,NEXT1D8A]
    foreach (_t1D83 in _t1D7F) on exit goto ASSIGN1D8C
      femData:MeshCell[] _t1D88#1 = phi(_t1D81,_t1D87)
    femData:MeshCell _t1D85#1 = LoadFem<femData:MeshCell>(a1D63,_t1D83);
    femData:MeshCell[] _t1D87#1 = Append<femData:MeshCell>(_t1D88,_t1D85);
    goto FOREACH1D84
  ASSIGN1D8C:  preds = [FOREACH1D84]
    femData:Space b1D8B#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1D65,a1D63);
    femData:FemFunc c1D8D#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1D67,b1D8B);
    femData:Space _t1D8F#2 = ExtractFem<femData:Space,femData:FemFunc>(c1D8D);
    femData:Mesh _t1D91#1 = ExtractFem<femData:Mesh,femData:Space>(_t1D8F);
    image(IMAGE1D<double[3]>) I1D93#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21D99#9 = VSub<3>(camAt1D6B,camEye1D69);
    real op1_e3_l_41D9C#1 = VDot<3>(op1_e3_l_21D99,op1_e3_l_21D99);
    real camDist1D9F#4 = Sqrt(op1_e3_l_41D9C);
    globals.camDist1D1B = camDist1D9F;
    real realLit1DA4#9 = 0.1e1;
    real op1_e3_l_91DA3#6 = RDiv(realLit1DA4,camDist1D9F);
    tensor[3] camN1DA8#4 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_21D99);
    globals.camN1D1C = camN1DA8;
    real realLit1DAD#6 = 0.e0;
    real r1DAE#3 = TensorIndex<tensor[3],[0]>(camUp1D6D);
    real r1DAF#3 = RMul(realLit1DAD,r1DAE);
    real r1DB0#3 = TensorIndex<tensor[3],[1]>(camUp1D6D);
    real r1DB1#3 = RMul(realLit1DAD,r1DB0);
    real r1DB2#3 = TensorIndex<tensor[3],[2]>(camUp1D6D);
    real r1DB3#5 = RMul(realLit1DAD,r1DB2);
    real r1DB4#3 = RAdd(r1DAF,r1DB1);
    real r1DB5#3 = RAdd(r1DB4,r1DB3);
    real r1DB7#1 = RMul(realLit1DA4,r1DB2);
    real r1DB8#1 = RAdd(r1DB4,r1DB7);
    real realLit1DB9#6 = -0.1e1;
    real r1DBA#1 = RMul(realLit1DB9,r1DB0);
    real r1DBB#1 = RAdd(r1DAF,r1DBA);
    real r1DBC#1 = RAdd(r1DBB,r1DB3);
    tensor[3] tensor1DBD#1 = <tensor[3]>[r1DB5,r1DB8,r1DBC];
    real r1DBE#1 = RMul(realLit1DB9,r1DB2);
    real r1DBF#1 = RAdd(r1DB4,r1DBE);
    real r1DC0#1 = RMul(realLit1DA4,r1DAE);
    real r1DC1#1 = RAdd(r1DC0,r1DB1);
    real r1DC2#1 = RAdd(r1DC1,r1DB3);
    tensor[3] tensor1DC3#1 = <tensor[3]>[r1DBF,r1DB5,r1DC2];
    real r1DC4#1 = RMul(realLit1DA4,r1DB0);
    real r1DC5#1 = RAdd(r1DAF,r1DC4);
    real r1DC6#1 = RAdd(r1DC5,r1DB3);
    real r1DC7#1 = RMul(realLit1DB9,r1DAE);
    real r1DC8#1 = RAdd(r1DC7,r1DB1);
    real r1DC9#1 = RAdd(r1DC8,r1DB3);
    tensor[3] tensor1DCA#1 = <tensor[3]>[r1DC6,r1DC9,r1DB5];
    real vdot1DED#1 = VDot<3>(op1_e3_l_21D99,tensor1DBD);
    real vdot1DEF#1 = VDot<3>(op1_e3_l_21D99,tensor1DC3);
    real vdot1DF1#1 = VDot<3>(op1_e3_l_21D99,tensor1DCA);
    tensor[3] op1_e3_l_171DEB#6 = <tensor[3]>[vdot1DED,vdot1DEF,vdot1DF1];
    real op1_e3_l_341DFA#1 = VDot<3>(op1_e3_l_171DEB,op1_e3_l_171DEB);
    real r1DFE#1 = RMul(op1_e3_l_91DA3,op1_e3_l_91DA3);
    real op1_e3_l_351DFD#1 = RMul(r1DFE,op1_e3_l_341DFA);
    real op1_e3_l_361E02#1 = Sqrt(op1_e3_l_351DFD);
    tensor[3] op1_e3_l_371E05#1 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_171DEB);
    real op1_e3_l_381E08#2 = RDiv(realLit1DA4,op1_e3_l_361E02);
    tensor[3] camU1E0D#4 = VScale<3>(op1_e3_l_381E08,op1_e3_l_371E05);
    globals.camU1D1D = camU1E0D;
    real r1E13#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21D99);
    real r1E14#3 = RMul(realLit1DAD,r1E13);
    real r1E15#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21D99);
    real r1E16#3 = RMul(realLit1DAD,r1E15);
    real r1E17#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21D99);
    real r1E18#5 = RMul(realLit1DAD,r1E17);
    real r1E19#3 = RAdd(r1E14,r1E16);
    real r1E1A#3 = RAdd(r1E19,r1E18);
    real r1E1C#1 = RMul(realLit1DA4,r1E17);
    real r1E1D#1 = RAdd(r1E19,r1E1C);
    real r1E1F#1 = RMul(realLit1DB9,r1E15);
    real r1E20#1 = RAdd(r1E14,r1E1F);
    real r1E21#1 = RAdd(r1E20,r1E18);
    tensor[3] tensor1E22#1 = <tensor[3]>[r1E1A,r1E1D,r1E21];
    real r1E23#1 = RMul(realLit1DB9,r1E17);
    real r1E24#1 = RAdd(r1E19,r1E23);
    real r1E25#1 = RMul(realLit1DA4,r1E13);
    real r1E26#1 = RAdd(r1E25,r1E16);
    real r1E27#1 = RAdd(r1E26,r1E18);
    tensor[3] tensor1E28#1 = <tensor[3]>[r1E24,r1E1A,r1E27];
    real r1E29#1 = RMul(realLit1DA4,r1E15);
    real r1E2A#1 = RAdd(r1E14,r1E29);
    real r1E2B#1 = RAdd(r1E2A,r1E18);
    real r1E2C#1 = RMul(realLit1DB9,r1E13);
    real r1E2D#1 = RAdd(r1E2C,r1E16);
    real r1E2E#1 = RAdd(r1E2D,r1E18);
    tensor[3] tensor1E2F#1 = <tensor[3]>[r1E2B,r1E2E,r1E1A];
    real vdot1E52#1 = VDot<3>(op1_e3_l_171DEB,tensor1E22);
    real vdot1E54#1 = VDot<3>(op1_e3_l_171DEB,tensor1E28);
    real vdot1E56#1 = VDot<3>(op1_e3_l_171DEB,tensor1E2F);
    tensor[3] op1_e3_l_471E50#1 = <tensor[3]>[vdot1E52,vdot1E54,vdot1E56];
    tensor[3] op1_e3_l_501E5F#3 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_471E50);
    real r1E63#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501E5F);
    real r1E64#3 = RMul(op1_e3_l_381E08,op1_e3_l_91DA3);
    real r1E65#2 = RMul(r1E64,r1E63);
    real r1E66#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501E5F);
    real r1E67#2 = RMul(r1E64,r1E66);
    real r1E68#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501E5F);
    real r1E69#2 = RMul(r1E64,r1E68);
    tensor[3] camV1E62#1 = <tensor[3]>[r1E65,r1E67,r1E69];
    globals.camV1D1E = camV1E62;
    real _t1E74#1 = 0.314159265358979323846264338327950288e1;
    real _t1E76#1 = 0.36e3;
    real op1_e3_l_51E78#1 = RMul(camFOV1D6F,_t1E74);
    real op1_e3_l_61E7B#1 = RDiv(op1_e3_l_51E78,_t1E76);
    real op1_e3_l_101E7E#2 = Tan(op1_e3_l_61E7B);
    real camVmax1E81#1 = RMul(op1_e3_l_101E7E,camDist1D9F);
    globals.camVmax1D1F = camVmax1E81;
    real _t1E85#1 = IntToReal(iresU1D71);
    real _t1E87#1 = IntToReal(iresV1D73);
    real r1E8A#1 = RMul(_t1E85,op1_e3_l_101E7E);
    real op1_e3_l_141E89#1 = RMul(r1E8A,camDist1D9F);
    real camUmax1E8E#1 = RDiv(op1_e3_l_141E89,_t1E87);
    globals.camUmax1D20 = camUmax1E8E;
    real op1_e3_l_31E94#1 = VDot<3>(lightVsp1D75,lightVsp1D75);
    real op1_e3_l_41E97#1 = Sqrt(op1_e3_l_31E94);
    real op1_e3_l_51E9A#1 = RDiv(realLit1DA4,op1_e3_l_41E97);
    real r1EA0#1 = VIndex<3,0>(camU1E0D);
    real r1EA1#3 = TensorIndex<tensor[3],[0]>(lightVsp1D75);
    real r1EA2#1 = RMul(r1EA0,r1EA1);
    real r1EA4#3 = TensorIndex<tensor[3],[1]>(lightVsp1D75);
    real r1EA5#1 = RMul(r1E65,r1EA4);
    real r1EA6#1 = VIndex<3,0>(camN1DA8);
    real r1EA7#3 = TensorIndex<tensor[3],[2]>(lightVsp1D75);
    real r1EA8#1 = RMul(r1EA6,r1EA7);
    real r1EA9#1 = RAdd(r1EA2,r1EA5);
    real r1EAA#1 = RAdd(r1EA9,r1EA8);
    real r1EAB#1 = VIndex<3,1>(camU1E0D);
    real r1EAC#1 = RMul(r1EAB,r1EA1);
    real r1EAE#1 = RMul(r1E67,r1EA4);
    real r1EAF#1 = VIndex<3,1>(camN1DA8);
    real r1EB0#1 = RMul(r1EAF,r1EA7);
    real r1EB1#1 = RAdd(r1EAC,r1EAE);
    real r1EB2#1 = RAdd(r1EB1,r1EB0);
    real r1EB3#1 = VIndex<3,2>(camU1E0D);
    real r1EB4#1 = RMul(r1EB3,r1EA1);
    real r1EB6#1 = RMul(r1E69,r1EA4);
    real r1EB7#1 = VIndex<3,2>(camN1DA8);
    real r1EB8#1 = RMul(r1EB7,r1EA7);
    real r1EB9#1 = RAdd(r1EB4,r1EB6);
    real r1EBA#1 = RAdd(r1EB9,r1EB8);
    tensor[3] op1_e3_l_61E9F#1 = <tensor[3]>[r1EAA,r1EB2,r1EBA];
    tensor[3] light1ED8#1 = VScale<3>(op1_e3_l_51E9A,op1_e3_l_61E9F);
    globals.light1D21 = light1ED8;
    globals._t1D22 = _t1D91;
    globals._tX1D23 = _t1D8F;
    globals.c1D24 = c1D8D;
    globals.I1D27 = I1D93;
    return
## strand
  strand raycast (int ui1EE3#2, int vi1EE4#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1EEF:  preds = []
        int iresU1EF0#1 = globals.iresU1D0F;
        int iresV1EF2#1 = globals.iresV1D10;
        real camNear1EF4#1 = globals.camNear1D11;
        real camDist1EF6#1 = globals.camDist1D1B;
        tensor[3] camN1EF8#1 = globals.camN1D1C;
        tensor[3] camU1EFA#1 = globals.camU1D1D;
        tensor[3] camV1EFC#1 = globals.camV1D1E;
        real camVmax1EFE#3 = globals.camVmax1D1F;
        real camUmax1F00#2 = globals.camUmax1D20;
        real _t1F02#4 = -0.5e0;
        real _t1F04#1 = IntToReal(ui1EE3);
        real _t1F06#1 = IntToReal(iresU1EF0);
        real _t1F08#2 = 0.5e0;
        real op1_e3_l_61F0A#1 = RSub(_t1F06,_t1F08);
        real op1_e3_l_71F0D#1 = RSub(_t1F04,_t1F02);
        real op1_e3_l_81F10#1 = RSub(op1_e3_l_61F0A,_t1F02);
        real op1_e3_l_91F13#2 = RNeg(camUmax1F00);
        real op1_e3_l_101F16#1 = RDiv(op1_e3_l_71F0D,op1_e3_l_81F10);
        real op1_e3_l_111F19#1 = RSub(camUmax1F00,op1_e3_l_91F13);
        real op1_e3_l_131F1C#1 = RMul(op1_e3_l_101F16,op1_e3_l_111F19);
        real rayU1F1F#2 = RAdd(op1_e3_l_91F13,op1_e3_l_131F1C);
        real _t1F22#1 = IntToReal(vi1EE4);
        real _t1F24#1 = IntToReal(iresV1EF2);
        real op1_e3_l_61F26#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_71F29#1 = RSub(_t1F22,_t1F02);
        real op1_e3_l_81F2C#1 = RSub(op1_e3_l_61F26,_t1F02);
        real op1_e3_l_91F2F#1 = RNeg(camVmax1EFE);
        real op1_e3_l_101F32#1 = RDiv(op1_e3_l_71F29,op1_e3_l_81F2C);
        real op1_e3_l_111F35#1 = RSub(op1_e3_l_91F2F,camVmax1EFE);
        real op1_e3_l_121F38#1 = RMul(op1_e3_l_101F32,op1_e3_l_111F35);
        real rayV1F3B#2 = RAdd(camVmax1EFE,op1_e3_l_121F38);
        tensor[3] op1_e3_l_331F4D#1 = VScale<3>(rayU1F1F,camU1EFA);
        tensor[3] op1_e3_l_341F50#1 = VScale<3>(rayV1F3B,camV1EFC);
        tensor[3] op1_e3_l_351F53#3 = VAdd<3>(op1_e3_l_331F4D,op1_e3_l_341F50);
        real realLit1F57#2 = 0.1e1;
        real r1F58#3 = RDiv(realLit1F57,camDist1EF6);
        real r1F59#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351F53);
        real r1F5A#1 = RMul(r1F58,r1F59);
        real r1F5B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351F53);
        real r1F5C#1 = RMul(r1F58,r1F5B);
        real r1F5D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351F53);
        real r1F5E#1 = RMul(r1F58,r1F5D);
        tensor[3] op1_e3_l_361F56#1 = <tensor[3]>[r1F5A,r1F5C,r1F5E];
        tensor[3] rayVec1F69#1 = VAdd<3>(camN1EF8,op1_e3_l_361F56);
        real _t1F6E#8 = 0.e0;
        tensor[3] rgb1F70#1 = <tensor[3]>[_t1F6E,_t1F6E,_t1F6E];
        tensor[4] rgba1F72#1 = <tensor[4]>[_t1F6E,_t1F6E,_t1F6E,_t1F6E];
        self.rayU = rayU1F1F;
        self.rayV = rayV1F3B;
        self.rayN = camNear1EF4;
        self.rayVec = rayVec1F69;
        self.transp = realLit1F57;
        self.rgb = rgb1F70;
        self.rgba = rgba1F72;
        self.gray = _t1F6E;
        self.ui = ui1EE3;
        self.vi = vi1EE4;
        return
    end state init
    method update
        ENTRY1F7F:  preds = []
          image(IMAGE1D<double[3]>) I1F80#17 = globals.I1D27;
          real isoval1F82#1 = globals.isoval1D09;
          femData:Mesh _t1F84#17 = globals._t1D22;
          femData:Space _t1F86#10 = globals._tX1D23;
          femData:FemFunc c1F88#10 = globals.c1D24;
          femData:Mesh a1F8E#1 = globals.a1D06;
          real thick1F90#1 = globals.thick1D0A;
          tensor[3] camEye1F92#1 = globals.camEye1D0B;
          real camNear1F94#2 = globals.camNear1D11;
          real camFar1F96#2 = globals.camFar1D12;
          real refStep1F98#1 = globals.refStep1D13;
          real rayStep1F9A#2 = globals.rayStep1D14;
          real phongKa1F9C#1 = globals.phongKa1D16;
          real phongKd1F9E#1 = globals.phongKd1D17;
          bool debug1FA0#1 = globals.debug1D18;
          int su1FA2#1 = globals.su1D19;
          int sv1FA4#1 = globals.sv1D1A;
          tensor[3] light1FA6#1 = globals.light1D21;
          real rayN1FA8#4 = self.rayN;
          tensor[3] rayVec1FAA#3 = self.rayVec;
          real transp1FAC#10 = self.transp;
          tensor[3] rgb1FAE#9 = self.rgb;
          int ui1FB0#1 = self.ui;
          int vi1FB2#1 = self.vi;
          if debug1FA0 then goto ASSIGN1FB6 else goto JOIN1FC0
        ASSIGN1FB6:  preds = [COND1FB4]
          bool _t1FB5#1 = NEQ<int>(ui1FB0,su1FA2);
          if _t1FB5 then goto ASSIGN1FB9 else goto ASSIGN37E8
        ASSIGN1FB9:  preds = [COND1FB7]
          bool _t1FB8#1 = true;
          goto JOIN1FBC
        JOIN1FBC:  preds = [ASSIGN1FB9,ASSIGN37E8]
          bool _t1FBA#1 = phi(_t1FB8,_t1FBB)
          if _t1FBA then goto STABILIZE1FBE else goto JOIN1FBF
        STABILIZE1FBE:  preds = [COND1FBD]
          stabilize
          goto JOIN1FBF
        JOIN1FBF:  preds = [*STABILIZE1FBE,COND1FBD]
          goto JOIN1FC0
        JOIN1FC0:  preds = [JOIN1FBF,COND1FB4]
          tensor[3] op1_e3_l_31FC1#1 = VScale<3>(rayN1FA8,rayVec1FAA);
          tensor[3] x1FC4#6 = VAdd<3>(camEye1F92,op1_e3_l_31FC1);
          real _t1FC7#61 = 0.e0;
          real _t1FC9#2 = VIndex<3,0>(x1FC4);
          bool _t1FCB#1 = LT<real>(_t1FC7,_t1FC9);
          if _t1FCB then goto ASSIGN1FCF else goto JOIN3798
        ASSIGN1FCF:  preds = [COND1FCD]
          real _t1FCE#45 = 0.1e1;
          bool _t1FD0#1 = LT<real>(_t1FC9,_t1FCE);
          if _t1FD0 then goto ASSIGN1FD4 else goto JOIN3795
        ASSIGN1FD4:  preds = [COND1FD2]
          real _t1FD3#2 = VIndex<3,1>(x1FC4);
          bool _t1FD5#1 = LT<real>(_t1FC7,_t1FD3);
          if _t1FD5 then goto ASSIGN1FD9 else goto JOIN3792
        ASSIGN1FD9:  preds = [COND1FD7]
          bool _t1FD8#1 = LT<real>(_t1FD3,_t1FCE);
          if _t1FD8 then goto ASSIGN1FDC else goto JOIN378F
        ASSIGN1FDC:  preds = [COND1FDA]
          real _t1FDB#2 = VIndex<3,2>(x1FC4);
          bool _t1FDD#1 = LT<real>(_t1FC7,_t1FDB);
          if _t1FDD then goto ASSIGN1FE1 else goto JOIN378C
        ASSIGN1FE1:  preds = [COND1FDF]
          bool _t1FE0#1 = LT<real>(_t1FDB,_t1FCE);
          if _t1FE0 then goto ASSIGN2E82 else goto JOIN3789
        ASSIGN2E82:  preds = [COND1FE2]
          femData:MeshPos p1FE3#1 = findPos1FE4 (a1F8E,x1FC4);
          bool _t2E83#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1FE3);
          if _t2E83 then goto ASSIGN2E87 else goto ASSIGN37E3
        ASSIGN2E87:  preds = [COND2E85]
          real _t2E86#1 = 0.13e1;
          femData:MeshPos callFindPos2E88#2 = findPos1FE4 (_t1F84,x1FC4);
          int intPos2E8A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos2E88);
          tensor[3] refPos2E8C#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos2E88);
          int ilit2E8F#1 = 10;
          int mulRes2E90#10 = IMul(intPos2E8A,ilit2E8F);
          int idx2E93#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,mulRes2E90);
          int ilit2E94#22 = 1;
          int addRes2E95#1 = IAdd(mulRes2E90,ilit2E94);
          int idx2E96#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E95);
          int ilit2E97#10 = 2;
          int addRes2E98#1 = IAdd(mulRes2E90,ilit2E97);
          int idx2E99#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E98);
          int ilit2E9A#10 = 3;
          int addRes2E9B#1 = IAdd(mulRes2E90,ilit2E9A);
          int idx2E9C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9B);
          int ilit2E9D#2 = 4;
          int addRes2E9E#1 = IAdd(mulRes2E90,ilit2E9D);
          int idx2E9F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9E);
          int ilit2EA0#1 = 5;
          int addRes2EA1#1 = IAdd(mulRes2E90,ilit2EA0);
          int idx2EA2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA1);
          int ilit2EA3#1 = 6;
          int addRes2EA4#1 = IAdd(mulRes2E90,ilit2EA3);
          int idx2EA5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA4);
          int ilit2EA6#1 = 7;
          int addRes2EA7#1 = IAdd(mulRes2E90,ilit2EA6);
          int idx2EA8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA7);
          int ilit2EA9#1 = 8;
          int addRes2EAA#1 = IAdd(mulRes2E90,ilit2EA9);
          int idx2EAB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAA);
          int ilit2EAC#1 = 9;
          int addRes2EAD#1 = IAdd(mulRes2E90,ilit2EAC);
          int idx2EAE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAD);
          int mulRes2ED6#1 = IMul(ilit2E94,idx2E93);
          int mulRes2ED8#1 = IMul(ilit2E94,idx2E96);
          int mulRes2EDB#1 = IMul(ilit2E94,idx2E99);
          int mulRes2EDE#1 = IMul(ilit2E94,idx2E9C);
          int mulRes2EE1#1 = IMul(ilit2E94,idx2E9F);
          int mulRes2EE4#1 = IMul(ilit2E94,idx2EA2);
          int mulRes2EE7#1 = IMul(ilit2E94,idx2EA5);
          int mulRes2EEA#1 = IMul(ilit2E94,idx2EA8);
          int mulRes2EED#1 = IMul(ilit2E94,idx2EAB);
          int mulRes2EF0#1 = IMul(ilit2E94,idx2EAE);
          real dof2EF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED6);
          real dof2EF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED8);
          real dof2EF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDB);
          real dof2EF4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDE);
          real dof2EF5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE1);
          real dof2EF6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE4);
          real dof2EF7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE7);
          real dof2EF8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EEA);
          real dof2EF9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EED);
          real dof2EFA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EF0);
          tensor[10] dofs2EFB#4 = <tensor[10]>[dof2EF1,dof2EF2,dof2EF3,dof2EF4,dof2EF5,dof2EF6,dof2EF7,dof2EF8,dof2EF9,dof2EFA];
          real varAcc2F27#5 = VIndex<3,0>(refPos2E8C);
          real varAcc2F28#4 = VIndex<3,1>(refPos2E8C);
          real varAcc2F29#4 = VIndex<3,2>(refPos2E8C);
          real coeff2F2A#4 = 0.2e1;
          real prod22F2C#1 = RMul(varAcc2F27,varAcc2F27);
          real prod2F2E#3 = RMul(_t1FCE,_t1FCE);
          real prod2F2F#2 = RMul(prod22F2C,prod2F2E);
          real coeff2F30#7 = 0.4e1;
          real prod2F32#2 = RMul(varAcc2F28,_t1FCE);
          real prod2F33#2 = RMul(varAcc2F27,prod2F32);
          real prod2F35#2 = RMul(_t1FCE,varAcc2F29);
          real prod2F36#2 = RMul(varAcc2F27,prod2F35);
          real coeff2F37#4 = -0.3e1;
          real prod2F38#5 = RMul(varAcc2F27,prod2F2E);
          real prod22F39#1 = RMul(varAcc2F28,varAcc2F28);
          real prod2F3A#1 = RMul(prod22F39,_t1FCE);
          real prod2F3B#2 = RMul(_t1FCE,prod2F3A);
          real prod2F3C#1 = RMul(varAcc2F28,varAcc2F29);
          real prod2F3D#2 = RMul(_t1FCE,prod2F3C);
          real prod2F3E#5 = RMul(_t1FCE,prod2F32);
          real prod22F3F#1 = RMul(varAcc2F29,varAcc2F29);
          real prod2F40#1 = RMul(_t1FCE,prod22F3F);
          real prod2F41#2 = RMul(_t1FCE,prod2F40);
          real prod2F42#5 = RMul(_t1FCE,prod2F35);
          real prod2F43#4 = RMul(_t1FCE,prod2F2E);
          real mult2F44#10 = RMul(_t1FCE,prod2F43);
          real mult2F45#1 = RMul(coeff2F37,prod2F42);
          real mult2F46#2 = RMul(coeff2F2A,prod2F41);
          real mult2F47#1 = RMul(coeff2F37,prod2F3E);
          real mult2F48#2 = RMul(coeff2F30,prod2F3D);
          real mult2F49#2 = RMul(coeff2F2A,prod2F3B);
          real mult2F4A#1 = RMul(coeff2F37,prod2F38);
          real mult2F4B#2 = RMul(coeff2F30,prod2F36);
          real mult2F4C#2 = RMul(coeff2F30,prod2F33);
          real mult2F4D#2 = RMul(coeff2F2A,prod2F2F);
          real sum2F4E#1 = RAdd(mult2F4C,mult2F4D);
          real sum2F4F#1 = RAdd(mult2F4B,sum2F4E);
          real sum2F50#1 = RAdd(mult2F4A,sum2F4F);
          real sum2F51#1 = RAdd(mult2F49,sum2F50);
          real sum2F52#1 = RAdd(mult2F48,sum2F51);
          real sum2F53#1 = RAdd(mult2F47,sum2F52);
          real sum2F54#1 = RAdd(mult2F46,sum2F53);
          real sum2F55#1 = RAdd(mult2F45,sum2F54);
          real sum2F56#1 = RAdd(mult2F44,sum2F55);
          real coeff2F58#23 = -0.1e1;
          real mult2F59#1 = RMul(coeff2F58,prod2F38);
          real sum2F5A#1 = RAdd(mult2F59,mult2F4D);
          real mult2F5C#1 = RMul(coeff2F58,prod2F3E);
          real sum2F5D#1 = RAdd(mult2F5C,mult2F49);
          real mult2F5F#1 = RMul(coeff2F58,prod2F42);
          real sum2F60#1 = RAdd(mult2F5F,mult2F46);
          real coeff2F62#9 = -0.4e1;
          real mult2F63#5 = RMul(coeff2F30,prod2F42);
          real mult2F64#1 = RMul(coeff2F62,prod2F41);
          real mult2F65#2 = RMul(coeff2F62,prod2F3D);
          real mult2F66#2 = RMul(coeff2F62,prod2F36);
          real sum2F67#1 = RAdd(mult2F65,mult2F66);
          real sum2F68#1 = RAdd(mult2F64,sum2F67);
          real sum2F69#1 = RAdd(mult2F63,sum2F68);
          real mult2F6B#5 = RMul(coeff2F30,prod2F3E);
          real mult2F6C#1 = RMul(coeff2F62,prod2F3B);
          real mult2F6D#2 = RMul(coeff2F62,prod2F33);
          real sum2F6E#1 = RAdd(mult2F6C,mult2F6D);
          real sum2F6F#1 = RAdd(mult2F65,sum2F6E);
          real sum2F70#1 = RAdd(mult2F6B,sum2F6F);
          real mult2F72#5 = RMul(coeff2F30,prod2F38);
          real mult2F73#1 = RMul(coeff2F62,prod2F2F);
          real sum2F74#1 = RAdd(mult2F6D,mult2F73);
          real sum2F75#1 = RAdd(mult2F66,sum2F74);
          real sum2F76#1 = RAdd(mult2F72,sum2F75);
          tensor[10] intermediateCons2F78#1 = <tensor[10]>[sum2F56,sum2F5A,sum2F5D,sum2F60,mult2F48,mult2F4B,mult2F4C,sum2F69,sum2F70,sum2F76];
          real compositionl2FCC#2 = VDot<10>(dofs2EFB,intermediateCons2F78);
          real op1_e3_l_232FCF#1 = RSub(compositionl2FCC,isoval1F82);
          real mult2FE3#1 = RMul(coeff2F37,prod2F43);
          real sum2FE7#1 = RAdd(mult2F6B,mult2F72);
          real sum2FE8#1 = RAdd(mult2F63,sum2FE7);
          real sum2FE9#3 = RAdd(mult2FE3,sum2FE8);
          real mult2FEC#6 = RMul(coeff2F58,prod2F43);
          real sum2FED#1 = RAdd(mult2FEC,mult2F72);
          real basisEval2FF1#4 = RMul(coeff2F62,prod2F42);
          real basisEval2FF2#4 = RMul(coeff2F62,prod2F3E);
          real coeff2FF3#3 = -0.8e1;
          real mult2FF4#3 = RMul(coeff2F30,prod2F43);
          real mult2FF5#1 = RMul(coeff2FF3,prod2F38);
          real sum2FF6#1 = RAdd(basisEval2FF2,mult2FF5);
          real sum2FF7#1 = RAdd(basisEval2FF1,sum2FF6);
          real sum2FF8#1 = RAdd(mult2FF4,sum2FF7);
          real sum2FFB#1 = RAdd(mult2FEC,mult2F6B);
          real mult2FFD#1 = RMul(coeff2FF3,prod2F3E);
          real mult2FFE#4 = RMul(coeff2F62,prod2F38);
          real sum2FFF#1 = RAdd(mult2FFD,mult2FFE);
          real sum3000#1 = RAdd(basisEval2FF1,sum2FFF);
          real sum3001#1 = RAdd(mult2FF4,sum3000);
          real sum3004#1 = RAdd(mult2FEC,mult2F63);
          real mult3006#1 = RMul(coeff2FF3,prod2F42);
          real sum3007#1 = RAdd(basisEval2FF2,mult2FFE);
          real sum3008#1 = RAdd(mult3006,sum3007);
          real sum3009#1 = RAdd(mult2FF4,sum3008);
          tensor[10] intermediateCons300B#1 = <tensor[10]>[sum2FE9,sum2FED,_t1FC7,_t1FC7,_t1FC7,mult2F63,mult2F6B,basisEval2FF1,basisEval2FF2,sum2FF8];
          tensor[10] intermediateCons300C#1 = <tensor[10]>[sum2FE9,_t1FC7,sum2FFB,_t1FC7,mult2F63,_t1FC7,mult2F72,basisEval2FF1,sum3001,mult2FFE];
          tensor[10] intermediateCons300D#1 = <tensor[10]>[sum2FE9,_t1FC7,_t1FC7,sum3004,mult2F6B,mult2F72,_t1FC7,sum3009,basisEval2FF2,mult2FFE];
          real vdot304E#3 = VDot<10>(dofs2EFB,intermediateCons300B);
          real vdot3050#3 = VDot<10>(dofs2EFB,intermediateCons300C);
          real vdot3052#3 = VDot<10>(dofs2EFB,intermediateCons300D);
          int mulRes305D#4 = IMul(intPos2E8A,ilit2E9D);
          int idx3060#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,mulRes305D);
          int addRes3062#1 = IAdd(mulRes305D,ilit2E94);
          int idx3063#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3062);
          int addRes3065#1 = IAdd(mulRes305D,ilit2E97);
          int idx3066#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3065);
          int addRes3068#1 = IAdd(mulRes305D,ilit2E9A);
          int idx3069#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3068);
          int mulRes307F#3 = IMul(ilit2E9A,idx3060);
          int addRes3082#1 = IAdd(ilit2E94,mulRes307F);
          int addRes3084#1 = IAdd(ilit2E97,mulRes307F);
          real dof_load3085#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes307F);
          real dof_load3086#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3082);
          real dof_load3087#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3084);
          int mulRes308A#3 = IMul(ilit2E9A,idx3063);
          int addRes308C#1 = IAdd(ilit2E94,mulRes308A);
          int addRes308D#1 = IAdd(ilit2E97,mulRes308A);
          real dof_load308E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes308A);
          real dof_load308F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308C);
          real dof_load3090#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308D);
          int mulRes3093#3 = IMul(ilit2E9A,idx3066);
          int addRes3095#1 = IAdd(ilit2E94,mulRes3093);
          int addRes3096#1 = IAdd(ilit2E97,mulRes3093);
          real dof_load3097#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes3093);
          real dof_load3098#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3095);
          real dof_load3099#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3096);
          int mulRes309C#3 = IMul(ilit2E9A,idx3069);
          int addRes309E#1 = IAdd(ilit2E94,mulRes309C);
          int addRes309F#1 = IAdd(ilit2E97,mulRes309C);
          real dof_load30A0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes309C);
          real dof_load30A1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309E);
          real dof_load30A2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309F);
          real r30F0#2 = RMul(dof_load3085,mult2FEC);
          real r30F3#1 = RMul(dof_load308E,mult2F44);
          real r30F6#2 = RMul(dof_load3097,_t1FC7);
          real r30F9#2 = RMul(dof_load30A0,_t1FC7);
          real r30FA#1 = RAdd(r30F0,r30F3);
          real r30FB#1 = RAdd(r30FA,r30F6);
          real r30FC#13 = RAdd(r30FB,r30F9);
          real r3100#1 = RMul(dof_load308E,_t1FC7);
          real r3102#1 = RMul(dof_load3097,mult2F44);
          real r3105#2 = RAdd(r30F0,r3100);
          real r3106#1 = RAdd(r3105,r3102);
          real r3107#13 = RAdd(r3106,r30F9);
          real r310F#1 = RMul(dof_load30A0,mult2F44);
          real r3111#1 = RAdd(r3105,r30F6);
          real r3112#12 = RAdd(r3111,r310F);
          real r3115#2 = RMul(dof_load3086,mult2FEC);
          real r3117#1 = RMul(dof_load308F,mult2F44);
          real r3119#2 = RMul(dof_load3098,_t1FC7);
          real r311B#2 = RMul(dof_load30A1,_t1FC7);
          real r311C#1 = RAdd(r3115,r3117);
          real r311D#1 = RAdd(r311C,r3119);
          real r311E#13 = RAdd(r311D,r311B);
          real r3120#1 = RMul(dof_load308F,_t1FC7);
          real r3121#1 = RMul(dof_load3098,mult2F44);
          real r3123#2 = RAdd(r3115,r3120);
          real r3124#1 = RAdd(r3123,r3121);
          real r3125#13 = RAdd(r3124,r311B);
          real r3129#1 = RMul(dof_load30A1,mult2F44);
          real r312B#1 = RAdd(r3123,r3119);
          real r312C#12 = RAdd(r312B,r3129);
          real r312F#2 = RMul(dof_load3087,mult2FEC);
          real r3131#1 = RMul(dof_load3090,mult2F44);
          real r3133#2 = RMul(dof_load3099,_t1FC7);
          real r3135#2 = RMul(dof_load30A2,_t1FC7);
          real r3136#1 = RAdd(r312F,r3131);
          real r3137#1 = RAdd(r3136,r3133);
          real r3138#13 = RAdd(r3137,r3135);
          real r313A#1 = RMul(dof_load3090,_t1FC7);
          real r313B#1 = RMul(dof_load3099,mult2F44);
          real r313D#2 = RAdd(r312F,r313A);
          real r313E#1 = RAdd(r313D,r313B);
          real r313F#13 = RAdd(r313E,r3135);
          real r3143#1 = RMul(dof_load30A2,mult2F44);
          real r3145#1 = RAdd(r313D,r3133);
          real r3146#12 = RAdd(r3145,r3143);
          real r31A7#3 = RMul(_t1FC7,r30FC);
          real r31A9#3 = RMul(_t1FC7,r311E);
          real r31AB#5 = RMul(_t1FC7,r3138);
          real r31AC#3 = RAdd(r31A7,r31A9);
          real r31AD#9 = RAdd(r31AC,r31AB);
          real r31AF#3 = RMul(_t1FC7,r3107);
          real r31B1#3 = RMul(_t1FC7,r3125);
          real r31B3#5 = RMul(_t1FC7,r313F);
          real r31B4#3 = RAdd(r31AF,r31B1);
          real r31B5#9 = RAdd(r31B4,r31B3);
          real r31B7#3 = RMul(_t1FC7,r3112);
          real r31B9#3 = RMul(_t1FC7,r312C);
          real r31BB#5 = RMul(_t1FC7,r3146);
          real r31BC#3 = RAdd(r31B7,r31B9);
          real r31BD#12 = RAdd(r31BC,r31BB);
          real r31C0#1 = RMul(coeff2F58,r3138);
          real r31C1#3 = RAdd(r31AC,r31C0);
          real r31C2#1 = RMul(coeff2F58,r313F);
          real r31C3#3 = RAdd(r31B4,r31C2);
          real r31C4#1 = RMul(coeff2F58,r3146);
          real r31C5#4 = RAdd(r31BC,r31C4);
          real r31C8#1 = RMul(_t1FCE,r311E);
          real r31C9#1 = RAdd(r31A7,r31C8);
          real r31CA#3 = RAdd(r31C9,r31AB);
          real r31CB#1 = RMul(_t1FCE,r3125);
          real r31CC#1 = RAdd(r31AF,r31CB);
          real r31CD#3 = RAdd(r31CC,r31B3);
          real r31CE#1 = RMul(_t1FCE,r312C);
          real r31CF#1 = RAdd(r31B7,r31CE);
          real r31D0#4 = RAdd(r31CF,r31BB);
          real r31D3#1 = RMul(_t1FCE,r3138);
          real r31D4#3 = RAdd(r31AC,r31D3);
          real r31D5#1 = RMul(_t1FCE,r313F);
          real r31D6#3 = RAdd(r31B4,r31D5);
          real r31D7#1 = RMul(_t1FCE,r3146);
          real r31D8#4 = RAdd(r31BC,r31D7);
          real r31DA#1 = RMul(coeff2F58,r30FC);
          real r31DB#1 = RAdd(r31DA,r31A9);
          real r31DC#3 = RAdd(r31DB,r31AB);
          real r31DD#1 = RMul(coeff2F58,r3107);
          real r31DE#1 = RAdd(r31DD,r31B1);
          real r31DF#3 = RAdd(r31DE,r31B3);
          real r31E0#1 = RMul(coeff2F58,r3112);
          real r31E1#1 = RAdd(r31E0,r31B9);
          real r31E2#4 = RAdd(r31E1,r31BB);
          real r31E5#1 = RMul(coeff2F58,r311E);
          real r31E6#1 = RAdd(r31A7,r31E5);
          real r31E7#3 = RAdd(r31E6,r31AB);
          real r31E8#1 = RMul(coeff2F58,r3125);
          real r31E9#1 = RAdd(r31AF,r31E8);
          real r31EA#3 = RAdd(r31E9,r31B3);
          real r31EB#1 = RMul(coeff2F58,r312C);
          real r31EC#1 = RAdd(r31B7,r31EB);
          real r31ED#4 = RAdd(r31EC,r31BB);
          real r31EF#1 = RMul(_t1FCE,r30FC);
          real r31F0#1 = RAdd(r31EF,r31A9);
          real r31F1#3 = RAdd(r31F0,r31AB);
          real r31F2#1 = RMul(_t1FCE,r3107);
          real r31F3#1 = RAdd(r31F2,r31B1);
          real r31F4#3 = RAdd(r31F3,r31B3);
          real r31F5#1 = RMul(_t1FCE,r3112);
          real r31F6#1 = RAdd(r31F5,r31B9);
          real r31F7#4 = RAdd(r31F6,r31BB);
          real r3254#1 = RMul(r30FC,r31AD);
          real r3257#1 = RMul(r311E,r31D4);
          real r325A#1 = RMul(r3138,r31E7);
          real r325B#1 = RAdd(r3254,r3257);
          real r325C#1 = RAdd(r325B,r325A);
          real r325E#1 = RMul(r30FC,r31B5);
          real r3260#1 = RMul(r311E,r31D6);
          real r3262#1 = RMul(r3138,r31EA);
          real r3263#1 = RAdd(r325E,r3260);
          real r3264#2 = RAdd(r3263,r3262);
          real r3266#1 = RMul(r30FC,r31BD);
          real r3268#1 = RMul(r311E,r31D8);
          real r326A#1 = RMul(r3138,r31ED);
          real r326B#1 = RAdd(r3266,r3268);
          real r326C#2 = RAdd(r326B,r326A);
          real r326F#1 = RMul(r30FC,r31C1);
          real r3271#1 = RMul(r311E,r31AD);
          real r3273#1 = RMul(r3138,r31F1);
          real r3274#1 = RAdd(r326F,r3271);
          real r3275#1 = RAdd(r3274,r3273);
          real r3277#1 = RMul(r30FC,r31C3);
          real r3279#1 = RMul(r311E,r31B5);
          real r327B#1 = RMul(r3138,r31F4);
          real r327C#1 = RAdd(r3277,r3279);
          real r327D#2 = RAdd(r327C,r327B);
          real r327F#1 = RMul(r30FC,r31C5);
          real r3281#1 = RMul(r311E,r31BD);
          real r3283#1 = RMul(r3138,r31F7);
          real r3284#1 = RAdd(r327F,r3281);
          real r3285#2 = RAdd(r3284,r3283);
          real r3288#1 = RMul(r30FC,r31CA);
          real r328A#1 = RMul(r311E,r31DC);
          real r328C#1 = RMul(r3138,r31AD);
          real r328D#1 = RAdd(r3288,r328A);
          real r328E#1 = RAdd(r328D,r328C);
          real r3290#1 = RMul(r30FC,r31CD);
          real r3292#1 = RMul(r311E,r31DF);
          real r3294#1 = RMul(r3138,r31B5);
          real r3295#1 = RAdd(r3290,r3292);
          real r3296#2 = RAdd(r3295,r3294);
          real r3298#1 = RMul(r30FC,r31D0);
          real r329A#1 = RMul(r311E,r31E2);
          real r329C#1 = RMul(r3138,r31BD);
          real r329D#1 = RAdd(r3298,r329A);
          real r329E#2 = RAdd(r329D,r329C);
          real r32A2#1 = RMul(r3107,r31AD);
          real r32A4#1 = RMul(r3125,r31D4);
          real r32A6#1 = RMul(r313F,r31E7);
          real r32A7#1 = RAdd(r32A2,r32A4);
          real r32A8#2 = RAdd(r32A7,r32A6);
          real r32A9#1 = RMul(r3107,r31B5);
          real r32AA#1 = RMul(r3125,r31D6);
          real r32AB#1 = RMul(r313F,r31EA);
          real r32AC#1 = RAdd(r32A9,r32AA);
          real r32AD#1 = RAdd(r32AC,r32AB);
          real r32AE#1 = RMul(r3107,r31BD);
          real r32AF#1 = RMul(r3125,r31D8);
          real r32B0#1 = RMul(r313F,r31ED);
          real r32B1#1 = RAdd(r32AE,r32AF);
          real r32B2#2 = RAdd(r32B1,r32B0);
          real r32B4#1 = RMul(r3107,r31C1);
          real r32B5#1 = RMul(r3125,r31AD);
          real r32B6#1 = RMul(r313F,r31F1);
          real r32B7#1 = RAdd(r32B4,r32B5);
          real r32B8#2 = RAdd(r32B7,r32B6);
          real r32B9#1 = RMul(r3107,r31C3);
          real r32BA#1 = RMul(r3125,r31B5);
          real r32BB#1 = RMul(r313F,r31F4);
          real r32BC#1 = RAdd(r32B9,r32BA);
          real r32BD#1 = RAdd(r32BC,r32BB);
          real r32BE#1 = RMul(r3107,r31C5);
          real r32BF#1 = RMul(r3125,r31BD);
          real r32C0#1 = RMul(r313F,r31F7);
          real r32C1#1 = RAdd(r32BE,r32BF);
          real r32C2#2 = RAdd(r32C1,r32C0);
          real r32C4#1 = RMul(r3107,r31CA);
          real r32C5#1 = RMul(r3125,r31DC);
          real r32C6#1 = RMul(r313F,r31AD);
          real r32C7#1 = RAdd(r32C4,r32C5);
          real r32C8#2 = RAdd(r32C7,r32C6);
          real r32C9#1 = RMul(r3107,r31CD);
          real r32CA#1 = RMul(r3125,r31DF);
          real r32CB#1 = RMul(r313F,r31B5);
          real r32CC#1 = RAdd(r32C9,r32CA);
          real r32CD#1 = RAdd(r32CC,r32CB);
          real r32CE#1 = RMul(r3107,r31D0);
          real r32CF#1 = RMul(r3125,r31E2);
          real r32D0#1 = RMul(r313F,r31BD);
          real r32D1#1 = RAdd(r32CE,r32CF);
          real r32D2#2 = RAdd(r32D1,r32D0);
          real r32D6#1 = RMul(r3112,r31AD);
          real r32D8#1 = RMul(r312C,r31D4);
          real r32DA#1 = RMul(r3146,r31E7);
          real r32DB#1 = RAdd(r32D6,r32D8);
          real r32DC#2 = RAdd(r32DB,r32DA);
          real r32DD#1 = RMul(r3112,r31B5);
          real r32DE#1 = RMul(r312C,r31D6);
          real r32DF#1 = RMul(r3146,r31EA);
          real r32E0#1 = RAdd(r32DD,r32DE);
          real r32E1#2 = RAdd(r32E0,r32DF);
          real r32E2#1 = RMul(r3112,r31BD);
          real r32E3#1 = RMul(r312C,r31D8);
          real r32E4#1 = RMul(r3146,r31ED);
          real r32E5#1 = RAdd(r32E2,r32E3);
          real r32E6#1 = RAdd(r32E5,r32E4);
          real r32E8#1 = RMul(r3112,r31C1);
          real r32E9#1 = RMul(r312C,r31AD);
          real r32EA#1 = RMul(r3146,r31F1);
          real r32EB#1 = RAdd(r32E8,r32E9);
          real r32EC#2 = RAdd(r32EB,r32EA);
          real r32ED#1 = RMul(r3112,r31C3);
          real r32EE#1 = RMul(r312C,r31B5);
          real r32EF#1 = RMul(r3146,r31F4);
          real r32F0#1 = RAdd(r32ED,r32EE);
          real r32F1#2 = RAdd(r32F0,r32EF);
          real r32F2#1 = RMul(r3112,r31C5);
          real r32F3#1 = RMul(r312C,r31BD);
          real r32F4#1 = RMul(r3146,r31F7);
          real r32F5#1 = RAdd(r32F2,r32F3);
          real r32F6#1 = RAdd(r32F5,r32F4);
          real r32F8#1 = RMul(r3112,r31CA);
          real r32F9#1 = RMul(r312C,r31DC);
          real r32FA#1 = RMul(r3146,r31AD);
          real r32FB#1 = RAdd(r32F8,r32F9);
          real r32FC#2 = RAdd(r32FB,r32FA);
          real r32FD#1 = RMul(r3112,r31CD);
          real r32FE#1 = RMul(r312C,r31DF);
          real r32FF#1 = RMul(r3146,r31B5);
          real r3300#1 = RAdd(r32FD,r32FE);
          real r3301#2 = RAdd(r3300,r32FF);
          real r3302#1 = RMul(r3112,r31D0);
          real r3303#1 = RMul(r312C,r31E2);
          real r3304#1 = RMul(r3146,r31BD);
          real r3305#1 = RAdd(r3302,r3303);
          real r3306#1 = RAdd(r3305,r3304);
          tensor[3] probe_l_2933C2#1 = <tensor[3]>[r30FC,r311E,r3138];
          tensor[3] probe_l_30340F#3 = <tensor[3]>[r3107,r3125,r313F];
          tensor[3] tensor34BA#1 = <tensor[3]>[r31BD,r31D8,r31ED];
          tensor[3] tensor34C0#1 = <tensor[3]>[r31C5,r31BD,r31F7];
          tensor[3] tensor34C7#1 = <tensor[3]>[r31D0,r31E2,r31BD];
          real vdot34EA#1 = VDot<3>(probe_l_30340F,tensor34BA);
          real vdot34EC#1 = VDot<3>(probe_l_30340F,tensor34C0);
          real vdot34EE#1 = VDot<3>(probe_l_30340F,tensor34C7);
          tensor[3] op1_e3_l_3334E8#1 = <tensor[3]>[vdot34EA,vdot34EC,vdot34EE];
          real op1_e3_l_3434F7#1 = VDot<3>(probe_l_2933C2,op1_e3_l_3334E8);
          real r34FD#2 = RMul(_t1FC7,r325C);
          real r34FF#1 = RMul(_t1FC7,r3264);
          real r3501#2 = RMul(_t1FC7,r326C);
          real r3503#2 = RMul(_t1FC7,r32A8);
          real r3505#3 = RMul(_t1FC7,r32AD);
          real r3508#1 = RMul(_t1FCE,r32B2);
          real r350A#2 = RMul(_t1FC7,r32DC);
          real r350D#1 = RMul(coeff2F58,r32E1);
          real r350F#3 = RMul(_t1FC7,r32E6);
          real r3510#2 = RAdd(r34FD,r34FF);
          real r3511#1 = RAdd(r3510,r3501);
          real r3512#1 = RAdd(r3511,r3503);
          real r3513#1 = RAdd(r3512,r3505);
          real r3514#1 = RAdd(r3513,r3508);
          real r3515#1 = RAdd(r3514,r350A);
          real r3516#1 = RAdd(r3515,r350D);
          real r3517#1 = RAdd(r3516,r350F);
          real r3519#2 = RMul(_t1FC7,r3275);
          real r351B#1 = RMul(_t1FC7,r327D);
          real r351D#2 = RMul(_t1FC7,r3285);
          real r351F#2 = RMul(_t1FC7,r32B8);
          real r3521#3 = RMul(_t1FC7,r32BD);
          real r3523#1 = RMul(_t1FCE,r32C2);
          real r3525#2 = RMul(_t1FC7,r32EC);
          real r3527#1 = RMul(coeff2F58,r32F1);
          real r3529#3 = RMul(_t1FC7,r32F6);
          real r352A#2 = RAdd(r3519,r351B);
          real r352B#1 = RAdd(r352A,r351D);
          real r352C#1 = RAdd(r352B,r351F);
          real r352D#1 = RAdd(r352C,r3521);
          real r352E#1 = RAdd(r352D,r3523);
          real r352F#1 = RAdd(r352E,r3525);
          real r3530#1 = RAdd(r352F,r3527);
          real r3531#1 = RAdd(r3530,r3529);
          real r3533#2 = RMul(_t1FC7,r328E);
          real r3535#1 = RMul(_t1FC7,r3296);
          real r3537#2 = RMul(_t1FC7,r329E);
          real r3539#2 = RMul(_t1FC7,r32C8);
          real r353B#3 = RMul(_t1FC7,r32CD);
          real r353D#1 = RMul(_t1FCE,r32D2);
          real r353F#2 = RMul(_t1FC7,r32FC);
          real r3541#1 = RMul(coeff2F58,r3301);
          real r3543#3 = RMul(_t1FC7,r3306);
          real r3544#2 = RAdd(r3533,r3535);
          real r3545#1 = RAdd(r3544,r3537);
          real r3546#1 = RAdd(r3545,r3539);
          real r3547#1 = RAdd(r3546,r353B);
          real r3548#1 = RAdd(r3547,r353D);
          real r3549#1 = RAdd(r3548,r353F);
          real r354A#1 = RAdd(r3549,r3541);
          real r354B#1 = RAdd(r354A,r3543);
          real r354D#1 = RMul(coeff2F58,r326C);
          real r354E#2 = RMul(_t1FC7,r32B2);
          real r354F#1 = RMul(_t1FCE,r32DC);
          real r3550#2 = RMul(_t1FC7,r32E1);
          real r3551#1 = RAdd(r3510,r354D);
          real r3552#1 = RAdd(r3551,r3503);
          real r3553#1 = RAdd(r3552,r3505);
          real r3554#1 = RAdd(r3553,r354E);
          real r3555#1 = RAdd(r3554,r354F);
          real r3556#1 = RAdd(r3555,r3550);
          real r3557#1 = RAdd(r3556,r350F);
          real r3558#1 = RMul(coeff2F58,r3285);
          real r3559#2 = RMul(_t1FC7,r32C2);
          real r355A#1 = RMul(_t1FCE,r32EC);
          real r355B#2 = RMul(_t1FC7,r32F1);
          real r355C#1 = RAdd(r352A,r3558);
          real r355D#1 = RAdd(r355C,r351F);
          real r355E#1 = RAdd(r355D,r3521);
          real r355F#1 = RAdd(r355E,r3559);
          real r3560#1 = RAdd(r355F,r355A);
          real r3561#1 = RAdd(r3560,r355B);
          real r3562#1 = RAdd(r3561,r3529);
          real r3563#1 = RMul(coeff2F58,r329E);
          real r3564#2 = RMul(_t1FC7,r32D2);
          real r3565#1 = RMul(_t1FCE,r32FC);
          real r3566#2 = RMul(_t1FC7,r3301);
          real r3567#1 = RAdd(r3544,r3563);
          real r3568#1 = RAdd(r3567,r3539);
          real r3569#1 = RAdd(r3568,r353B);
          real r356A#1 = RAdd(r3569,r3564);
          real r356B#1 = RAdd(r356A,r3565);
          real r356C#1 = RAdd(r356B,r3566);
          real r356D#1 = RAdd(r356C,r3543);
          real r356F#1 = RMul(_t1FCE,r3264);
          real r3570#1 = RMul(coeff2F58,r32A8);
          real r3571#1 = RAdd(r34FD,r356F);
          real r3572#1 = RAdd(r3571,r3501);
          real r3573#1 = RAdd(r3572,r3570);
          real r3574#1 = RAdd(r3573,r3505);
          real r3575#1 = RAdd(r3574,r354E);
          real r3576#1 = RAdd(r3575,r350A);
          real r3577#1 = RAdd(r3576,r3550);
          real r3578#1 = RAdd(r3577,r350F);
          real r3579#1 = RMul(_t1FCE,r327D);
          real r357A#1 = RMul(coeff2F58,r32B8);
          real r357B#1 = RAdd(r3519,r3579);
          real r357C#1 = RAdd(r357B,r351D);
          real r357D#1 = RAdd(r357C,r357A);
          real r357E#1 = RAdd(r357D,r3521);
          real r357F#1 = RAdd(r357E,r3559);
          real r3580#1 = RAdd(r357F,r3525);
          real r3581#1 = RAdd(r3580,r355B);
          real r3582#1 = RAdd(r3581,r3529);
          real r3583#1 = RMul(_t1FCE,r3296);
          real r3584#1 = RMul(coeff2F58,r32C8);
          real r3585#1 = RAdd(r3533,r3583);
          real r3586#1 = RAdd(r3585,r3537);
          real r3587#1 = RAdd(r3586,r3584);
          real r3588#1 = RAdd(r3587,r353B);
          real r3589#1 = RAdd(r3588,r3564);
          real r358A#1 = RAdd(r3589,r353F);
          real r358B#1 = RAdd(r358A,r3566);
          real r358C#1 = RAdd(r358B,r3543);
          real op1_e3_l_363623#9 = RMul(coeff2F2A,op1_e3_l_3434F7);
          real r362A#1 = RDiv(r3517,op1_e3_l_363623);
          real r362C#1 = RDiv(r3531,op1_e3_l_363623);
          real r362E#1 = RDiv(r354B,op1_e3_l_363623);
          real r3631#1 = RDiv(r3557,op1_e3_l_363623);
          real r3633#1 = RDiv(r3562,op1_e3_l_363623);
          real r3635#1 = RDiv(r356D,op1_e3_l_363623);
          real r3638#1 = RDiv(r3578,op1_e3_l_363623);
          real r363A#1 = RDiv(r3582,op1_e3_l_363623);
          real r363C#1 = RDiv(r358C,op1_e3_l_363623);
          real r3658#1 = RMul(vdot304E,r362A);
          real r365B#1 = RMul(vdot3050,r3631);
          real r365E#1 = RMul(vdot3052,r3638);
          real r365F#1 = RAdd(r3658,r365B);
          real r3660#1 = RAdd(r365F,r365E);
          real r3662#1 = RMul(vdot304E,r362C);
          real r3664#1 = RMul(vdot3050,r3633);
          real r3666#1 = RMul(vdot3052,r363A);
          real r3667#1 = RAdd(r3662,r3664);
          real r3668#1 = RAdd(r3667,r3666);
          real r366A#1 = RMul(vdot304E,r362E);
          real r366C#1 = RMul(vdot3050,r3635);
          real r366E#1 = RMul(vdot3052,r363C);
          real r366F#1 = RAdd(r366A,r366C);
          real r3670#1 = RAdd(r366F,r366E);
          tensor[3] op1_e3_l_383655#1 = <tensor[3]>[r3660,r3668,r3670];
          tensor[3] op1_e3_l_54368E#3 = VNeg<3>(op1_e3_l_383655);
          real op1_e3_l_563691#1 = VDot<3>(op1_e3_l_54368E,op1_e3_l_54368E);
          real op1_e3_l_573694#2 = Sqrt(op1_e3_l_563691);
          real op1_e3_l_583697#1 = Abs<real>(op1_e3_l_232FCF);
          real op1_e3_l_59369A#1 = RMul(thick1F90,op1_e3_l_573694);
          real op1_e3_l_60369D#1 = RDiv(op1_e3_l_583697,op1_e3_l_59369A);
          real op1_e3_l_6136A0#1 = RSub(_t1FCE,op1_e3_l_60369D);
          real op1_e3_l_6236A3#1 = RMul(_t2E86,op1_e3_l_6136A0);
          real op1_e3_l_6336A6#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real a36A9#2 = RMul(_t1FCE,op1_e3_l_6336A6);
          bool _t36AC#1 = GT<real>(a36A9,_t1FC7);
          if _t36AC then goto ASSIGN3DD7 else goto JOIN3780
        ASSIGN3DD7:  preds = [COND36AE]
          real _t36B5#1 = RSub(_t1FCE,a36A9);
          real op1_e3_l_336B8#1 = VDot<3>(rayVec1FAA,rayVec1FAA);
          real op1_e3_l_436BB#1 = Sqrt(op1_e3_l_336B8);
          real op1_e3_l_536BE#1 = RMul(rayStep1F9A,op1_e3_l_436BB);
          real _t36C1#1 = RDiv(op1_e3_l_536BE,refStep1F98);
          real _t36C4#1 = MathFn<pow>(_t36B5,_t36C1);
          real _t36C6#2 = 0.11e1;
          real _t36C8#1 = 0.7e0;
          real op1_e3_l_6736CA#1 = RDiv(_t1FCE,op1_e3_l_573694);
          real op1_e3_l_6836CF#1 = VDot<3>(op1_e3_l_54368E,light1FA6);
          real _t36D2#1 = RMul(op1_e3_l_6736CA,op1_e3_l_6836CF);
          real shade36D5#1 = Max<real>(_t1FC7,_t36D2);
          real op1_e3_l_1536D9#1 = RSub(rayN1FA8,camNear1F94);
          real op1_e3_l_1636DC#1 = RSub(camFar1F96,camNear1F94);
          real op1_e3_l_1736DF#1 = RDiv(op1_e3_l_1536D9,op1_e3_l_1636DC);
          real op1_e3_l_1836E2#1 = RSub(_t36C8,_t36C6);
          real op1_e3_l_1936E5#1 = RMul(op1_e3_l_1736DF,op1_e3_l_1836E2);
          real op1_e3_l_2036E8#1 = RMul(phongKd1F9E,shade36D5);
          real Mtransform36EB#1 = Transform<IMAGE1D<double[3]>>(I1F80);
          real MxPos36ED#1 = RMul(Mtransform36EB,compositionl2FCC);
          real Ttranslate36F0#1 = Translate<IMAGE1D<double[3]>>(I1F80);
          real imgPos36F2#2 = RAdd(MxPos36ED,Ttranslate36F0);
          real nd36F5#2 = Floor<1>(imgPos36F2);
          real f36F7#2 = RSub(imgPos36F2,nd36F5);
          int n36FA#5 = RealToInt<1>(nd36F5);
          bool isInside36FE#1 = IndexInside<IMAGE1D<double[3]>,2>(n36FA,I1F80);
          if isInside36FE then goto ASSIGN3DE3 else goto ASSIGN3DDB
        ASSIGN3DE3:  preds = [COND3700]
          int offp3705#3 = IMul(ilit2E9A,n36FA);
          real v0_3706#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3705);
          int addRes3708#1 = IAdd(n36FA,ilit2E94);
          int offp3709#3 = IMul(ilit2E9A,addRes3708);
          real v1_370A#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3709);
          tensor[2] v_370B#1 = <tensor[2]>[v0_3706,v1_370A];
          int offp370C#1 = IAdd(offp3705,ilit2E94);
          real v0_370D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370C);
          int offp370E#1 = IAdd(offp3709,ilit2E94);
          real v1_370F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370E);
          tensor[2] v_3710#1 = <tensor[2]>[v0_370D,v1_370F];
          int offp3712#1 = IAdd(offp3705,ilit2E97);
          real v0_3713#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3712);
          int offp3714#1 = IAdd(offp3709,ilit2E97);
          real v1_3715#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3714);
          tensor[2] v_3716#1 = <tensor[2]>[v0_3713,v1_3715];
          tensor[3,2] voxels3717#1 = <tensor[3,2]>[v_370B,v_3710,v_3716];
          goto JOIN3731
        JOIN3731:  preds = [ASSIGN372D,ASSIGN37E0]
          tensor[3,2] ldvox372F#3 = phi(voxels3717,voxels37C8)
          real idx3734#1 = RSub(f36F7,_t1FCE);
          tensor[2] kernX_3732#1 = <tensor[2]>[f36F7,idx3734];
          tensor[2] a03739#1 = <tensor[2]>[_t1FCE,_t1FCE];
          tensor[2] a1373A#1 = <tensor[2]>[coeff2F58,_t1FCE];
          tensor[2] prod1373F#1 = VMul<2>(kernX_3732,a1373A);
          tensor[2] kevalX_d0_3738#3 = VAdd<2>(a03739,prod1373F);
          tensor[2] projIx3749#1 = ProjectLast<tensor[3,2],[0]>(ldvox372F);
          real vdot374A#1 = VDot<2>(projIx3749,kevalX_d0_3738);
          tensor[2] projIx374B#1 = ProjectLast<tensor[3,2],[1]>(ldvox372F);
          real vdot374C#1 = VDot<2>(projIx374B,kevalX_d0_3738);
          tensor[2] projIx374D#1 = ProjectLast<tensor[3,2],[2]>(ldvox372F);
          real vdot374E#1 = VDot<2>(projIx374D,kevalX_d0_3738);
          real op1_e3_l_223757#2 = RSub(_t1FCE,_t36C4);
          real op1_e3_l_23375A#1 = RAdd(_t36C6,op1_e3_l_1936E5);
          real op1_e3_l_24375D#1 = RAdd(phongKa1F9C,op1_e3_l_2036E8);
          real r3762#1 = RMul(transp1FAC,op1_e3_l_223757);
          real r3763#1 = RMul(r3762,op1_e3_l_23375A);
          real r3764#3 = RMul(r3763,op1_e3_l_24375D);
          real r3765#1 = RMul(r3764,vdot374A);
          real r3767#1 = RMul(r3764,vdot374C);
          real r3769#1 = RMul(r3764,vdot374E);
          tensor[3] op1_e3_l_253760#1 = <tensor[3]>[r3765,r3767,r3769];
          tensor[3] rgb3775#1 = VAdd<3>(rgb1FAE,op1_e3_l_253760);
          real op1_e3_l_53778#1 = RSub(_t1FCE,op1_e3_l_223757);
          real transp377B#1 = RMul(transp1FAC,op1_e3_l_53778);
          goto JOIN3780
        JOIN3780:  preds = [ASSIGN377D,COND36AE]
          tensor[3] rgb377E#1 = phi(rgb3775,rgb1FAE)
          real transp377F#1 = phi(transp377B,transp1FAC)
          string _t3781#1 = "yay!\n";
          Print<[string]>(_t3781);
          goto JOIN3786
        JOIN3786:  preds = [MASSIGN3783,MASSIGN37E7]
          tensor[3] rgb3784#1 = phi(rgb377E,rgb1FAE)
          real transp3785#1 = phi(transp377F,transp1FAC)
          goto JOIN3789
        JOIN3789:  preds = [JOIN3786,COND1FE2]
          tensor[3] rgb3787#1 = phi(rgb3784,rgb1FAE)
          real transp3788#1 = phi(transp3785,transp1FAC)
          goto JOIN378C
        JOIN378C:  preds = [JOIN3789,COND1FDF]
          tensor[3] rgb378A#1 = phi(rgb3787,rgb1FAE)
          real transp378B#1 = phi(transp3788,transp1FAC)
          goto JOIN378F
        JOIN378F:  preds = [JOIN378C,COND1FDA]
          tensor[3] rgb378D#1 = phi(rgb378A,rgb1FAE)
          real transp378E#1 = phi(transp378B,transp1FAC)
          goto JOIN3792
        JOIN3792:  preds = [JOIN378F,COND1FD7]
          tensor[3] rgb3790#1 = phi(rgb378D,rgb1FAE)
          real transp3791#1 = phi(transp378E,transp1FAC)
          goto JOIN3795
        JOIN3795:  preds = [JOIN3792,COND1FD2]
          tensor[3] rgb3793#1 = phi(rgb3790,rgb1FAE)
          real transp3794#1 = phi(transp3791,transp1FAC)
          goto JOIN3798
        JOIN3798:  preds = [JOIN3795,COND1FCD]
          tensor[3] rgb3796#3 = phi(rgb3793,rgb1FAE)
          real transp3797#2 = phi(transp3794,transp1FAC)
          real _t3799#1 = 0.1e-1;
          bool _t379B#1 = LT<real>(transp3797,_t3799);
          if _t379B then goto SAVE379E else goto JOIN37A2
        SAVE379E:  preds = [COND379D]
          self.transp = _t1FC7;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A2
        JOIN37A2:  preds = [*STABILIZE37A0,COND379D]
          real transp37A1#2 = phi(transp3797)
          bool _t37A3#1 = GT<real>(rayN1FA8,camFar1F96);
          if _t37A3 then goto SAVE37A6 else goto JOIN37A9
        SAVE37A6:  preds = [COND37A5]
          self.transp = transp37A1;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A9
        JOIN37A9:  preds = [*STABILIZE37A8,COND37A5]
          real rayN37AA#1 = RAdd(rayN1FA8,rayStep1F9A);
          self.rayN = rayN37AA;
          self.transp = transp37A1;
          self.rgb = rgb3796;
          active
        ASSIGN3DDB:  preds = [COND3700]
          int ix37B3#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,n36FA);
          int offp37B5#3 = IMul(ilit2E9A,ix37B3);
          real v0_37B6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37B5);
          int addRes37B8#1 = IAdd(n36FA,ilit2E94);
          int ix37B9#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B8);
          int offp37BA#3 = IMul(ilit2E9A,ix37B9);
          real v1_37BB#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BA);
          tensor[2] v_37BC#1 = <tensor[2]>[v0_37B6,v1_37BB];
          int offp37BD#1 = IAdd(offp37B5,ilit2E94);
          real v0_37BE#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BD);
          int offp37BF#1 = IAdd(offp37BA,ilit2E94);
          real v1_37C0#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BF);
          tensor[2] v_37C1#1 = <tensor[2]>[v0_37BE,v1_37C0];
          int offp37C3#1 = IAdd(offp37B5,ilit2E97);
          real v0_37C4#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C3);
          int offp37C5#1 = IAdd(offp37BA,ilit2E97);
          real v1_37C6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C5);
          tensor[2] v_37C7#1 = <tensor[2]>[v0_37C4,v1_37C6];
          tensor[3,2] voxels37C8#1 = <tensor[3,2]>[v_37BC,v_37C1,v_37C7];
          goto JOIN3731
        ASSIGN37E3:  preds = [COND2E85]
          string _t37E2#1 = "\n";
          Print<[tensor[3],string]>(x1FC4,_t37E2);
          string _t37E5#1 = "wait what\?\n";
          Print<[string]>(_t37E5);
          goto JOIN3786
        ASSIGN37E8:  preds = [COND1FB7]
          bool _t1FBB#1 = NEQ<int>(vi1FB2,sv1FA4);
          goto JOIN1FBC
    end update
    method stabilize
        ENTRY37E9:  preds = []
          bool debug37EA#1 = globals.debug1D18;
          int su37EC#1 = globals.su1D19;
          int sv37EE#1 = globals.sv1D1A;
          real transp37F0#1 = self.transp;
          tensor[3] rgb37F2#3 = self.rgb;
          tensor[4] rgba37F4#1 = self.rgba;
          int ui37F6#1 = self.ui;
          int vi37F8#1 = self.vi;
          real _t37FA#1 = 0.1e1;
          real a37FC#6 = RSub(_t37FA,transp37F0);
          real _t37FF#1 = 0.e0;
          bool _t3801#1 = GT<real>(a37FC,_t37FF);
          if _t3801 then goto ASSIGN3805 else goto JOIN3816
        ASSIGN3805:  preds = [COND3803]
          real _t3804#1 = VIndex<3,0>(rgb37F2);
          real _t3806#1 = RDiv(_t3804,a37FC);
          real _t3809#1 = VIndex<3,1>(rgb37F2);
          real _t380B#1 = RDiv(_t3809,a37FC);
          real _t380E#1 = VIndex<3,2>(rgb37F2);
          real _t3810#1 = RDiv(_t380E,a37FC);
          tensor[4] rgba3813#1 = <tensor[4]>[_t3806,_t380B,_t3810,a37FC];
          goto JOIN3816
        JOIN3816:  preds = [ASSIGN3814,COND3803]
          tensor[4] rgba3815#2 = phi(rgba3813,rgba37F4)
          bool _t3817#1 = EQ<int>(ui37F6,su37EC);
          if _t3817 then goto ASSIGN381B else goto JOIN3821
        ASSIGN381B:  preds = [COND3819]
          bool _t381A#1 = EQ<int>(vi37F8,sv37EE);
          if _t381A then goto COND381D else goto JOIN3820
        COND381D:  preds = [COND381C]
          if debug37EA then goto MASSIGN381E else goto JOIN381F
        MASSIGN381E:  preds = [COND381D]
          Print<[real,tensor[4]]>(a37FC,rgba3815);
          goto JOIN381F
        JOIN381F:  preds = [MASSIGN381E,COND381D]
          goto JOIN3820
        JOIN3820:  preds = [JOIN381F,COND381C]
          goto JOIN3821
        JOIN3821:  preds = [JOIN3820,COND3819]
          self.rgba = rgba3815;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY3824:  preds = []
      int iresU3825#1 = globals.iresU1D0F;
      int iresV3827#1 = globals.iresV1D10;
      int _t3829#2 = 0;
      int _t382B#2 = 1;
      int _t382D#1 = ISub(iresV3827,_t382B);
      int[] _t382F#1 = Range(_t3829,_t382D);
    FOREACH3832:  preds = [ASSIGN3830,NEXT383B]
      foreach (vi3831 in _t382F) on exit goto RETURN383C
      int _t3833#1 = ISub(iresU3825,_t382B);
      int[] _t3835#1 = Range(_t3829,_t3833);
    FOREACH3838:  preds = [ASSIGN3836,NEXT383A]
      foreach (ui3837 in _t3835) on exit goto NEXT383B
      new raycast(ui3837,vi3831);
      goto FOREACH3838
    NEXT383B:  preds = [FOREACH3838]
      goto FOREACH3832
    RETURN383C:  preds = [FOREACH3832]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input a1D06 (a) = <no-default>
  input 0b043B_intermedateGlobal1D07 (b) = <no-default>
  input 0c043D_intermedateGlobal1D08 (c) = <no-default>
  input isoval1D09 (isoval) = <default>
  input thick1D0A (thick) = <default>
  input camEye1D0B (camEye) = <default>
  input camAt1D0C (camAt) = <default>
  input camUp1D0D (camUp) = <default>
  input camFOV1D0E (camFOV) = <default>
  input iresU1D0F (iresU) = <default>
  input iresV1D10 (iresV) = <default>
  input camNear1D11 (camNear) = <default>
  input camFar1D12 (camFar) = <default>
  input refStep1D13 (refStep) = <default>
  input rayStep1D14 (rayStep) = <default>
  input lightVsp1D15 (lightVsp) = <default>
  input phongKa1D16 (phongKa) = <default>
  input phongKd1D17 (phongKd) = <default>
  input debug1D18 (debug) = <default>
  input su1D19 (su) = <default>
  input sv1D1A (sv) = <default>
  global real camDist1D1B
  global tensor[3] camN1D1C
  global tensor[3] camU1D1D
  global tensor[3] camV1D1E
  global real camVmax1D1F
  global real camUmax1D20
  global tensor[3] light1D21
  global femData:Mesh _t1D22
  global femData:Space _tX1D23
  global femData:FemFunc c1D24
  global image(IMAGE1D<double[3]>) I1D27
## functions
  function femData:MeshPos findPos1FE4 (femData:Mesh mesh1FE5#39, tensor[3] pos1FE6#5) {
    ENTRY1FE7:  preds = []
      real _t1FE8#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1FEA#1 = <tensor[3]>[_t1FE8,_t1FE8,_t1FE8];
      int newtonInt1FEC#4 = 0;
      int cellInt1FEE#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh1FE5);
      int _t1FF0#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh1FE5);
      int _t1FF2#13 = 1;
      int numCell1FF4#2 = ISub(_t1FF0,_t1FF2);
      int[] yayCells1FF6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh1FE5,pos1FE6);
    FOREACH1FF9:  preds = [ASSIGN1FF7,NEXT272E]
      foreach (cellItter1FF8 in yayCells1FF6) on exit goto ASSIGN2730
        tensor[3] xn272D#2 = phi(xn1FEA,xn25CE)
      int _t1FFA#6 = 2;
      int[] _t1FFC#1 = Range(newtonInt1FEC,_t1FFA);
    FOREACH1FFF:  preds = [ASSIGN1FFD,NEXT272C]
      foreach (newtonItter1FFE in _t1FFC) on exit goto NEXT272E
        tensor[3] xn25CE#5 = phi(xn272D,xn2692)
      int ilit2001#1 = 4;
      int mulRes2002#4 = IMul(cellItter1FF8,ilit2001);
      int idx2005#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes2002);
      int addRes2007#1 = IAdd(mulRes2002,_t1FF2);
      int idx2008#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2007);
      int addRes200A#1 = IAdd(mulRes2002,_t1FFA);
      int idx200B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200A);
      int ilit200C#5 = 3;
      int addRes200D#1 = IAdd(mulRes2002,ilit200C);
      int idx200E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes200D);
      int mulRes2024#3 = IMul(ilit200C,idx2005);
      int addRes2027#1 = IAdd(_t1FF2,mulRes2024);
      int addRes2029#1 = IAdd(_t1FFA,mulRes2024);
      real dof_load202A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2024);
      real dof_load202B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2027);
      real dof_load202C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2029);
      int mulRes202F#3 = IMul(ilit200C,idx2008);
      int addRes2031#1 = IAdd(_t1FF2,mulRes202F);
      int addRes2032#1 = IAdd(_t1FFA,mulRes202F);
      real dof_load2033#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes202F);
      real dof_load2034#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2031);
      real dof_load2035#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2032);
      int mulRes2038#3 = IMul(ilit200C,idx200B);
      int addRes203A#1 = IAdd(_t1FF2,mulRes2038);
      int addRes203B#1 = IAdd(_t1FFA,mulRes2038);
      real dof_load203C#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2038);
      real dof_load203D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203A);
      real dof_load203E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes203B);
      int mulRes2041#3 = IMul(ilit200C,idx200E);
      int addRes2043#1 = IAdd(_t1FF2,mulRes2041);
      int addRes2044#1 = IAdd(_t1FFA,mulRes2041);
      real dof_load2045#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2041);
      real dof_load2046#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2043);
      real dof_load2047#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2044);
      real coeff2078#22 = -0.1e1;
      real one2079#33 = 0.1e1;
      real prod207A#2 = RMul(one2079,one2079);
      real prod207B#2 = RMul(one2079,prod207A);
      real basisEval207C#3 = RMul(coeff2078,prod207B);
      real basisEval207D#10 = RMul(one2079,prod207B);
      real basisEval207E#45 = 0.e0;
      real r2095#2 = RMul(dof_load202A,basisEval207C);
      real r2098#1 = RMul(dof_load2033,basisEval207D);
      real r209B#2 = RMul(dof_load203C,basisEval207E);
      real r209E#2 = RMul(dof_load2045,basisEval207E);
      real r209F#1 = RAdd(r2095,r2098);
      real r20A0#1 = RAdd(r209F,r209B);
      real r20A1#13 = RAdd(r20A0,r209E);
      real r20A5#1 = RMul(dof_load2033,basisEval207E);
      real r20A7#1 = RMul(dof_load203C,basisEval207D);
      real r20AA#2 = RAdd(r2095,r20A5);
      real r20AB#1 = RAdd(r20AA,r20A7);
      real r20AC#13 = RAdd(r20AB,r209E);
      real r20B4#1 = RMul(dof_load2045,basisEval207D);
      real r20B6#1 = RAdd(r20AA,r209B);
      real r20B7#12 = RAdd(r20B6,r20B4);
      real r20BA#2 = RMul(dof_load202B,basisEval207C);
      real r20BC#1 = RMul(dof_load2034,basisEval207D);
      real r20BE#2 = RMul(dof_load203D,basisEval207E);
      real r20C0#2 = RMul(dof_load2046,basisEval207E);
      real r20C1#1 = RAdd(r20BA,r20BC);
      real r20C2#1 = RAdd(r20C1,r20BE);
      real r20C3#13 = RAdd(r20C2,r20C0);
      real r20C5#1 = RMul(dof_load2034,basisEval207E);
      real r20C6#1 = RMul(dof_load203D,basisEval207D);
      real r20C8#2 = RAdd(r20BA,r20C5);
      real r20C9#1 = RAdd(r20C8,r20C6);
      real r20CA#13 = RAdd(r20C9,r20C0);
      real r20CE#1 = RMul(dof_load2046,basisEval207D);
      real r20D0#1 = RAdd(r20C8,r20BE);
      real r20D1#12 = RAdd(r20D0,r20CE);
      real r20D4#2 = RMul(dof_load202C,basisEval207C);
      real r20D6#1 = RMul(dof_load2035,basisEval207D);
      real r20D8#2 = RMul(dof_load203E,basisEval207E);
      real r20DA#2 = RMul(dof_load2047,basisEval207E);
      real r20DB#1 = RAdd(r20D4,r20D6);
      real r20DC#1 = RAdd(r20DB,r20D8);
      real r20DD#13 = RAdd(r20DC,r20DA);
      real r20DF#1 = RMul(dof_load2035,basisEval207E);
      real r20E0#1 = RMul(dof_load203E,basisEval207D);
      real r20E2#2 = RAdd(r20D4,r20DF);
      real r20E3#1 = RAdd(r20E2,r20E0);
      real r20E4#13 = RAdd(r20E3,r20DA);
      real r20E8#1 = RMul(dof_load2047,basisEval207D);
      real r20EA#1 = RAdd(r20E2,r20D8);
      real r20EB#12 = RAdd(r20EA,r20E8);
      real r214C#3 = RMul(basisEval207E,r20A1);
      real r214E#3 = RMul(basisEval207E,r20C3);
      real r2150#5 = RMul(basisEval207E,r20DD);
      real r2151#3 = RAdd(r214C,r214E);
      real r2152#9 = RAdd(r2151,r2150);
      real r2154#3 = RMul(basisEval207E,r20AC);
      real r2156#3 = RMul(basisEval207E,r20CA);
      real r2158#5 = RMul(basisEval207E,r20E4);
      real r2159#3 = RAdd(r2154,r2156);
      real r215A#9 = RAdd(r2159,r2158);
      real r215C#3 = RMul(basisEval207E,r20B7);
      real r215E#3 = RMul(basisEval207E,r20D1);
      real r2160#5 = RMul(basisEval207E,r20EB);
      real r2161#3 = RAdd(r215C,r215E);
      real r2162#12 = RAdd(r2161,r2160);
      real r2165#1 = RMul(coeff2078,r20DD);
      real r2166#3 = RAdd(r2151,r2165);
      real r2167#1 = RMul(coeff2078,r20E4);
      real r2168#3 = RAdd(r2159,r2167);
      real r2169#1 = RMul(coeff2078,r20EB);
      real r216A#4 = RAdd(r2161,r2169);
      real r216D#1 = RMul(one2079,r20C3);
      real r216E#1 = RAdd(r214C,r216D);
      real r216F#3 = RAdd(r216E,r2150);
      real r2170#1 = RMul(one2079,r20CA);
      real r2171#1 = RAdd(r2154,r2170);
      real r2172#3 = RAdd(r2171,r2158);
      real r2173#1 = RMul(one2079,r20D1);
      real r2174#1 = RAdd(r215C,r2173);
      real r2175#4 = RAdd(r2174,r2160);
      real r2178#1 = RMul(one2079,r20DD);
      real r2179#3 = RAdd(r2151,r2178);
      real r217A#1 = RMul(one2079,r20E4);
      real r217B#3 = RAdd(r2159,r217A);
      real r217C#1 = RMul(one2079,r20EB);
      real r217D#4 = RAdd(r2161,r217C);
      real r217F#1 = RMul(coeff2078,r20A1);
      real r2180#1 = RAdd(r217F,r214E);
      real r2181#3 = RAdd(r2180,r2150);
      real r2182#1 = RMul(coeff2078,r20AC);
      real r2183#1 = RAdd(r2182,r2156);
      real r2184#3 = RAdd(r2183,r2158);
      real r2185#1 = RMul(coeff2078,r20B7);
      real r2186#1 = RAdd(r2185,r215E);
      real r2187#4 = RAdd(r2186,r2160);
      real r218A#1 = RMul(coeff2078,r20C3);
      real r218B#1 = RAdd(r214C,r218A);
      real r218C#3 = RAdd(r218B,r2150);
      real r218D#1 = RMul(coeff2078,r20CA);
      real r218E#1 = RAdd(r2154,r218D);
      real r218F#3 = RAdd(r218E,r2158);
      real r2190#1 = RMul(coeff2078,r20D1);
      real r2191#1 = RAdd(r215C,r2190);
      real r2192#4 = RAdd(r2191,r2160);
      real r2194#1 = RMul(one2079,r20A1);
      real r2195#1 = RAdd(r2194,r214E);
      real r2196#3 = RAdd(r2195,r2150);
      real r2197#1 = RMul(one2079,r20AC);
      real r2198#1 = RAdd(r2197,r2156);
      real r2199#3 = RAdd(r2198,r2158);
      real r219A#1 = RMul(one2079,r20B7);
      real r219B#1 = RAdd(r219A,r215E);
      real r219C#4 = RAdd(r219B,r2160);
      real r21F9#1 = RMul(r20A1,r2152);
      real r21FC#1 = RMul(r20C3,r2179);
      real r21FF#1 = RMul(r20DD,r218C);
      real r2200#1 = RAdd(r21F9,r21FC);
      real r2201#1 = RAdd(r2200,r21FF);
      real r2203#1 = RMul(r20A1,r215A);
      real r2205#1 = RMul(r20C3,r217B);
      real r2207#1 = RMul(r20DD,r218F);
      real r2208#1 = RAdd(r2203,r2205);
      real r2209#2 = RAdd(r2208,r2207);
      real r220B#1 = RMul(r20A1,r2162);
      real r220D#1 = RMul(r20C3,r217D);
      real r220F#1 = RMul(r20DD,r2192);
      real r2210#1 = RAdd(r220B,r220D);
      real r2211#2 = RAdd(r2210,r220F);
      real r2214#1 = RMul(r20A1,r2166);
      real r2216#1 = RMul(r20C3,r2152);
      real r2218#1 = RMul(r20DD,r2196);
      real r2219#1 = RAdd(r2214,r2216);
      real r221A#1 = RAdd(r2219,r2218);
      real r221C#1 = RMul(r20A1,r2168);
      real r221E#1 = RMul(r20C3,r215A);
      real r2220#1 = RMul(r20DD,r2199);
      real r2221#1 = RAdd(r221C,r221E);
      real r2222#2 = RAdd(r2221,r2220);
      real r2224#1 = RMul(r20A1,r216A);
      real r2226#1 = RMul(r20C3,r2162);
      real r2228#1 = RMul(r20DD,r219C);
      real r2229#1 = RAdd(r2224,r2226);
      real r222A#2 = RAdd(r2229,r2228);
      real r222D#1 = RMul(r20A1,r216F);
      real r222F#1 = RMul(r20C3,r2181);
      real r2231#1 = RMul(r20DD,r2152);
      real r2232#1 = RAdd(r222D,r222F);
      real r2233#1 = RAdd(r2232,r2231);
      real r2235#1 = RMul(r20A1,r2172);
      real r2237#1 = RMul(r20C3,r2184);
      real r2239#1 = RMul(r20DD,r215A);
      real r223A#1 = RAdd(r2235,r2237);
      real r223B#2 = RAdd(r223A,r2239);
      real r223D#1 = RMul(r20A1,r2175);
      real r223F#1 = RMul(r20C3,r2187);
      real r2241#1 = RMul(r20DD,r2162);
      real r2242#1 = RAdd(r223D,r223F);
      real r2243#2 = RAdd(r2242,r2241);
      real r2247#1 = RMul(r20AC,r2152);
      real r2249#1 = RMul(r20CA,r2179);
      real r224B#1 = RMul(r20E4,r218C);
      real r224C#1 = RAdd(r2247,r2249);
      real r224D#2 = RAdd(r224C,r224B);
      real r224E#1 = RMul(r20AC,r215A);
      real r224F#1 = RMul(r20CA,r217B);
      real r2250#1 = RMul(r20E4,r218F);
      real r2251#1 = RAdd(r224E,r224F);
      real r2252#1 = RAdd(r2251,r2250);
      real r2253#1 = RMul(r20AC,r2162);
      real r2254#1 = RMul(r20CA,r217D);
      real r2255#1 = RMul(r20E4,r2192);
      real r2256#1 = RAdd(r2253,r2254);
      real r2257#2 = RAdd(r2256,r2255);
      real r2259#1 = RMul(r20AC,r2166);
      real r225A#1 = RMul(r20CA,r2152);
      real r225B#1 = RMul(r20E4,r2196);
      real r225C#1 = RAdd(r2259,r225A);
      real r225D#2 = RAdd(r225C,r225B);
      real r225E#1 = RMul(r20AC,r2168);
      real r225F#1 = RMul(r20CA,r215A);
      real r2260#1 = RMul(r20E4,r2199);
      real r2261#1 = RAdd(r225E,r225F);
      real r2262#1 = RAdd(r2261,r2260);
      real r2263#1 = RMul(r20AC,r216A);
      real r2264#1 = RMul(r20CA,r2162);
      real r2265#1 = RMul(r20E4,r219C);
      real r2266#1 = RAdd(r2263,r2264);
      real r2267#2 = RAdd(r2266,r2265);
      real r2269#1 = RMul(r20AC,r216F);
      real r226A#1 = RMul(r20CA,r2181);
      real r226B#1 = RMul(r20E4,r2152);
      real r226C#1 = RAdd(r2269,r226A);
      real r226D#2 = RAdd(r226C,r226B);
      real r226E#1 = RMul(r20AC,r2172);
      real r226F#1 = RMul(r20CA,r2184);
      real r2270#1 = RMul(r20E4,r215A);
      real r2271#1 = RAdd(r226E,r226F);
      real r2272#1 = RAdd(r2271,r2270);
      real r2273#1 = RMul(r20AC,r2175);
      real r2274#1 = RMul(r20CA,r2187);
      real r2275#1 = RMul(r20E4,r2162);
      real r2276#1 = RAdd(r2273,r2274);
      real r2277#2 = RAdd(r2276,r2275);
      real r227B#1 = RMul(r20B7,r2152);
      real r227D#1 = RMul(r20D1,r2179);
      real r227F#1 = RMul(r20EB,r218C);
      real r2280#1 = RAdd(r227B,r227D);
      real r2281#2 = RAdd(r2280,r227F);
      real r2282#1 = RMul(r20B7,r215A);
      real r2283#1 = RMul(r20D1,r217B);
      real r2284#1 = RMul(r20EB,r218F);
      real r2285#1 = RAdd(r2282,r2283);
      real r2286#2 = RAdd(r2285,r2284);
      real r2287#1 = RMul(r20B7,r2162);
      real r2288#1 = RMul(r20D1,r217D);
      real r2289#1 = RMul(r20EB,r2192);
      real r228A#1 = RAdd(r2287,r2288);
      real r228B#1 = RAdd(r228A,r2289);
      real r228D#1 = RMul(r20B7,r2166);
      real r228E#1 = RMul(r20D1,r2152);
      real r228F#1 = RMul(r20EB,r2196);
      real r2290#1 = RAdd(r228D,r228E);
      real r2291#2 = RAdd(r2290,r228F);
      real r2292#1 = RMul(r20B7,r2168);
      real r2293#1 = RMul(r20D1,r215A);
      real r2294#1 = RMul(r20EB,r2199);
      real r2295#1 = RAdd(r2292,r2293);
      real r2296#2 = RAdd(r2295,r2294);
      real r2297#1 = RMul(r20B7,r216A);
      real r2298#1 = RMul(r20D1,r2162);
      real r2299#1 = RMul(r20EB,r219C);
      real r229A#1 = RAdd(r2297,r2298);
      real r229B#1 = RAdd(r229A,r2299);
      real r229D#1 = RMul(r20B7,r216F);
      real r229E#1 = RMul(r20D1,r2181);
      real r229F#1 = RMul(r20EB,r2152);
      real r22A0#1 = RAdd(r229D,r229E);
      real r22A1#2 = RAdd(r22A0,r229F);
      real r22A2#1 = RMul(r20B7,r2172);
      real r22A3#1 = RMul(r20D1,r2184);
      real r22A4#1 = RMul(r20EB,r215A);
      real r22A5#1 = RAdd(r22A2,r22A3);
      real r22A6#2 = RAdd(r22A5,r22A4);
      real r22A7#1 = RMul(r20B7,r2175);
      real r22A8#1 = RMul(r20D1,r2187);
      real r22A9#1 = RMul(r20EB,r2162);
      real r22AA#1 = RAdd(r22A7,r22A8);
      real r22AB#1 = RAdd(r22AA,r22A9);
      tensor[3] probe_l_142367#1 = <tensor[3]>[r20A1,r20C3,r20DD];
      tensor[3] probe_l_1523B4#3 = <tensor[3]>[r20AC,r20CA,r20E4];
      tensor[3] tensor245F#1 = <tensor[3]>[r2162,r217D,r2192];
      tensor[3] tensor2465#1 = <tensor[3]>[r216A,r2162,r219C];
      tensor[3] tensor246C#1 = <tensor[3]>[r2175,r2187,r2162];
      real vdot248F#1 = VDot<3>(probe_l_1523B4,tensor245F);
      real vdot2491#1 = VDot<3>(probe_l_1523B4,tensor2465);
      real vdot2493#1 = VDot<3>(probe_l_1523B4,tensor246C);
      tensor[3] op1_e3_l_18248D#1 = <tensor[3]>[vdot248F,vdot2491,vdot2493];
      real op1_e3_l_19249C#1 = VDot<3>(probe_l_142367,op1_e3_l_18248D);
      real r24A2#2 = RMul(basisEval207E,r2201);
      real r24A4#1 = RMul(basisEval207E,r2209);
      real r24A6#2 = RMul(basisEval207E,r2211);
      real r24A8#2 = RMul(basisEval207E,r224D);
      real r24AA#3 = RMul(basisEval207E,r2252);
      real r24AD#1 = RMul(one2079,r2257);
      real r24AF#2 = RMul(basisEval207E,r2281);
      real r24B2#1 = RMul(coeff2078,r2286);
      real r24B4#3 = RMul(basisEval207E,r228B);
      real r24B5#2 = RAdd(r24A2,r24A4);
      real r24B6#1 = RAdd(r24B5,r24A6);
      real r24B7#1 = RAdd(r24B6,r24A8);
      real r24B8#1 = RAdd(r24B7,r24AA);
      real r24B9#1 = RAdd(r24B8,r24AD);
      real r24BA#1 = RAdd(r24B9,r24AF);
      real r24BB#1 = RAdd(r24BA,r24B2);
      real r24BC#1 = RAdd(r24BB,r24B4);
      real r24BE#2 = RMul(basisEval207E,r221A);
      real r24C0#1 = RMul(basisEval207E,r2222);
      real r24C2#2 = RMul(basisEval207E,r222A);
      real r24C4#2 = RMul(basisEval207E,r225D);
      real r24C6#3 = RMul(basisEval207E,r2262);
      real r24C8#1 = RMul(one2079,r2267);
      real r24CA#2 = RMul(basisEval207E,r2291);
      real r24CC#1 = RMul(coeff2078,r2296);
      real r24CE#3 = RMul(basisEval207E,r229B);
      real r24CF#2 = RAdd(r24BE,r24C0);
      real r24D0#1 = RAdd(r24CF,r24C2);
      real r24D1#1 = RAdd(r24D0,r24C4);
      real r24D2#1 = RAdd(r24D1,r24C6);
      real r24D3#1 = RAdd(r24D2,r24C8);
      real r24D4#1 = RAdd(r24D3,r24CA);
      real r24D5#1 = RAdd(r24D4,r24CC);
      real r24D6#1 = RAdd(r24D5,r24CE);
      real r24D8#2 = RMul(basisEval207E,r2233);
      real r24DA#1 = RMul(basisEval207E,r223B);
      real r24DC#2 = RMul(basisEval207E,r2243);
      real r24DE#2 = RMul(basisEval207E,r226D);
      real r24E0#3 = RMul(basisEval207E,r2272);
      real r24E2#1 = RMul(one2079,r2277);
      real r24E4#2 = RMul(basisEval207E,r22A1);
      real r24E6#1 = RMul(coeff2078,r22A6);
      real r24E8#3 = RMul(basisEval207E,r22AB);
      real r24E9#2 = RAdd(r24D8,r24DA);
      real r24EA#1 = RAdd(r24E9,r24DC);
      real r24EB#1 = RAdd(r24EA,r24DE);
      real r24EC#1 = RAdd(r24EB,r24E0);
      real r24ED#1 = RAdd(r24EC,r24E2);
      real r24EE#1 = RAdd(r24ED,r24E4);
      real r24EF#1 = RAdd(r24EE,r24E6);
      real r24F0#1 = RAdd(r24EF,r24E8);
      real r24F2#1 = RMul(coeff2078,r2211);
      real r24F3#2 = RMul(basisEval207E,r2257);
      real r24F4#1 = RMul(one2079,r2281);
      real r24F5#2 = RMul(basisEval207E,r2286);
      real r24F6#1 = RAdd(r24B5,r24F2);
      real r24F7#1 = RAdd(r24F6,r24A8);
      real r24F8#1 = RAdd(r24F7,r24AA);
      real r24F9#1 = RAdd(r24F8,r24F3);
      real r24FA#1 = RAdd(r24F9,r24F4);
      real r24FB#1 = RAdd(r24FA,r24F5);
      real r24FC#1 = RAdd(r24FB,r24B4);
      real r24FD#1 = RMul(coeff2078,r222A);
      real r24FE#2 = RMul(basisEval207E,r2267);
      real r24FF#1 = RMul(one2079,r2291);
      real r2500#2 = RMul(basisEval207E,r2296);
      real r2501#1 = RAdd(r24CF,r24FD);
      real r2502#1 = RAdd(r2501,r24C4);
      real r2503#1 = RAdd(r2502,r24C6);
      real r2504#1 = RAdd(r2503,r24FE);
      real r2505#1 = RAdd(r2504,r24FF);
      real r2506#1 = RAdd(r2505,r2500);
      real r2507#1 = RAdd(r2506,r24CE);
      real r2508#1 = RMul(coeff2078,r2243);
      real r2509#2 = RMul(basisEval207E,r2277);
      real r250A#1 = RMul(one2079,r22A1);
      real r250B#2 = RMul(basisEval207E,r22A6);
      real r250C#1 = RAdd(r24E9,r2508);
      real r250D#1 = RAdd(r250C,r24DE);
      real r250E#1 = RAdd(r250D,r24E0);
      real r250F#1 = RAdd(r250E,r2509);
      real r2510#1 = RAdd(r250F,r250A);
      real r2511#1 = RAdd(r2510,r250B);
      real r2512#1 = RAdd(r2511,r24E8);
      real r2514#1 = RMul(one2079,r2209);
      real r2515#1 = RMul(coeff2078,r224D);
      real r2516#1 = RAdd(r24A2,r2514);
      real r2517#1 = RAdd(r2516,r24A6);
      real r2518#1 = RAdd(r2517,r2515);
      real r2519#1 = RAdd(r2518,r24AA);
      real r251A#1 = RAdd(r2519,r24F3);
      real r251B#1 = RAdd(r251A,r24AF);
      real r251C#1 = RAdd(r251B,r24F5);
      real r251D#1 = RAdd(r251C,r24B4);
      real r251E#1 = RMul(one2079,r2222);
      real r251F#1 = RMul(coeff2078,r225D);
      real r2520#1 = RAdd(r24BE,r251E);
      real r2521#1 = RAdd(r2520,r24C2);
      real r2522#1 = RAdd(r2521,r251F);
      real r2523#1 = RAdd(r2522,r24C6);
      real r2524#1 = RAdd(r2523,r24FE);
      real r2525#1 = RAdd(r2524,r24CA);
      real r2526#1 = RAdd(r2525,r2500);
      real r2527#1 = RAdd(r2526,r24CE);
      real r2528#1 = RMul(one2079,r223B);
      real r2529#1 = RMul(coeff2078,r226D);
      real r252A#1 = RAdd(r24D8,r2528);
      real r252B#1 = RAdd(r252A,r24DC);
      real r252C#1 = RAdd(r252B,r2529);
      real r252D#1 = RAdd(r252C,r24E0);
      real r252E#1 = RAdd(r252D,r2509);
      real r252F#1 = RAdd(r252E,r24E4);
      real r2530#1 = RAdd(r252F,r250B);
      real r2531#1 = RAdd(r2530,r24E8);
      real realLit25C9#1 = 0.2e1;
      real op1_e3_l_2125C8#9 = RMul(realLit25C9,op1_e3_l_19249C);
      real varAcc25CF#1 = VIndex<3,0>(xn25CE);
      real varAcc25D0#1 = VIndex<3,1>(xn25CE);
      real varAcc25D1#1 = VIndex<3,2>(xn25CE);
      real prod25D6#2 = RMul(varAcc25CF,prod207A);
      real prod25D8#1 = RMul(varAcc25D0,one2079);
      real prod25D9#2 = RMul(one2079,prod25D8);
      real prod25DB#1 = RMul(one2079,varAcc25D1);
      real prod25DC#2 = RMul(one2079,prod25DB);
      real mult25DF#1 = RMul(coeff2078,prod25DC);
      real mult25E0#1 = RMul(coeff2078,prod25D9);
      real mult25E1#1 = RMul(coeff2078,prod25D6);
      real sum25E2#1 = RAdd(mult25E0,mult25E1);
      real sum25E3#1 = RAdd(mult25DF,sum25E2);
      real sum25E4#3 = RAdd(basisEval207D,sum25E3);
      real basisEval25E6#3 = RMul(one2079,prod25D6);
      real basisEval25E7#3 = RMul(one2079,prod25D9);
      real basisEval25E8#3 = RMul(one2079,prod25DC);
      real r2609#1 = RMul(dof_load202A,sum25E4);
      real r260C#1 = RMul(dof_load2033,basisEval25E6);
      real r260F#1 = RMul(dof_load203C,basisEval25E7);
      real r2612#1 = RMul(dof_load2045,basisEval25E8);
      real r2613#1 = RAdd(r2609,r260C);
      real r2614#1 = RAdd(r2613,r260F);
      real r2615#1 = RAdd(r2614,r2612);
      real r2617#1 = RMul(dof_load202B,sum25E4);
      real r2619#1 = RMul(dof_load2034,basisEval25E6);
      real r261B#1 = RMul(dof_load203D,basisEval25E7);
      real r261D#1 = RMul(dof_load2046,basisEval25E8);
      real r261E#1 = RAdd(r2617,r2619);
      real r261F#1 = RAdd(r261E,r261B);
      real r2620#1 = RAdd(r261F,r261D);
      real r2622#1 = RMul(dof_load202C,sum25E4);
      real r2624#1 = RMul(dof_load2035,basisEval25E6);
      real r2626#1 = RMul(dof_load203E,basisEval25E7);
      real r2628#1 = RMul(dof_load2047,basisEval25E8);
      real r2629#1 = RAdd(r2622,r2624);
      real r262A#1 = RAdd(r2629,r2626);
      real r262B#1 = RAdd(r262A,r2628);
      tensor[3] probe_l_222606#1 = <tensor[3]>[r2615,r2620,r262B];
      real r2655#1 = RDiv(r24BC,op1_e3_l_2125C8);
      real r2657#1 = RDiv(r24D6,op1_e3_l_2125C8);
      real r2659#1 = RDiv(r24F0,op1_e3_l_2125C8);
      tensor[3] tensor265A#1 = <tensor[3]>[r2655,r2657,r2659];
      real r265C#1 = RDiv(r24FC,op1_e3_l_2125C8);
      real r265E#1 = RDiv(r2507,op1_e3_l_2125C8);
      real r2660#1 = RDiv(r2512,op1_e3_l_2125C8);
      tensor[3] tensor2661#1 = <tensor[3]>[r265C,r265E,r2660];
      real r2663#1 = RDiv(r251D,op1_e3_l_2125C8);
      real r2665#1 = RDiv(r2527,op1_e3_l_2125C8);
      real r2667#1 = RDiv(r2531,op1_e3_l_2125C8);
      tensor[3] tensor2668#1 = <tensor[3]>[r2663,r2665,r2667];
      tensor[3] op1_e3_l_242680#3 = VSub<3>(probe_l_222606,pos1FE6);
      real vdot2685#1 = VDot<3>(tensor265A,op1_e3_l_242680);
      real vdot2687#1 = VDot<3>(tensor2661,op1_e3_l_242680);
      real vdot2689#1 = VDot<3>(tensor2668,op1_e3_l_242680);
      tensor[3] op1_e3_l_252683#3 = <tensor[3]>[vdot2685,vdot2687,vdot2689];
      tensor[3] xn2692#4 = VSub<3>(xn25CE,op1_e3_l_252683);
      real _t2695#2 = 0.1e-7;
      real _t2697#1 = RMul(_t2695,_t2695);
      real _t26F9#1 = VDot<3>(op1_e3_l_252683,op1_e3_l_252683);
      bool _t26FC#1 = GTE<real>(_t2697,_t26F9);
      if _t26FC then goto ASSIGN2702 else goto JOIN272B
    ASSIGN2702:  preds = [COND26FE]
      real _t2701#4 = 0.1e-4;
      real _t2703#1 = RAdd(one2079,_t2701);
      tensor[3] _t2706#1 = <tensor[3]>[one2079,one2079,one2079];
      real _t2708#1 = VDot<3>(_t2706,xn2692);
      bool _t270B#1 = GT<real>(_t2703,_t2708);
      tensor[3] _t270D#1 = <tensor[3]>[_t2701,_t2701,_t2701];
      tensor[3] _t270F#3 = VAdd<3>(_t270D,xn2692);
      real _t2712#1 = VIndex<3,0>(_t270F);
      real _t2714#3 = -0.e0;
      bool _t2716#1 = GT<real>(_t2712,_t2714);
      real _t2718#1 = VIndex<3,1>(_t270F);
      bool _t271A#1 = GT<real>(_t2718,_t2714);
      real _t271C#1 = VIndex<3,2>(_t270F);
      bool _t271E#1 = GT<real>(_t271C,_t2714);
      bool _t2720#1 = BAnd(_t271A,_t271E);
      bool _t2722#1 = BAnd(_t2716,_t2720);
      bool _t2724#1 = BAnd(_t270B,_t2722);
      if _t2724 then goto ASSIGN2728 else goto JOIN272A
    ASSIGN2728:  preds = [COND2726]
      femData:MeshPos _t2727#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellItter1FF8,xn2692,pos1FE6);
      return _t2727
      goto JOIN272A
    JOIN272A:  preds = [*RETURN(_t2727)2729,COND2726]
      goto JOIN272B
    JOIN272B:  preds = [JOIN272A,COND26FE]
      goto FOREACH1FFF
    NEXT272E:  preds = [FOREACH1FFF]
      goto FOREACH1FF9
    ASSIGN2730:  preds = [FOREACH1FF9]
      int _t272F#6 = 2;
      int _t2731#6 = 3;
      int _t2733#1 = IMul(_t2731,numCell1FF4);
      int[] _t2735#1 = Range(newtonInt1FEC,_t2733);
    FOREACH2738:  preds = [ASSIGN2736,NEXT2E78]
      foreach (itter2737 in _t2735) on exit goto ASSIGN2E7B
        int cellInt273A#5 = phi(cellInt1FEE,cellInt2E75)
        int newtonInt2E67#1 = phi(newtonInt1FEC,newtonInt2E76)
        tensor[3] xn2D08#4 = phi(xn272D,xn2DCC)
      int ilit273B#1 = 4;
      int mulRes273C#4 = IMul(cellInt273A,ilit273B);
      int idx273F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,mulRes273C);
      int addRes2741#1 = IAdd(mulRes273C,_t1FF2);
      int idx2742#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2741);
      int addRes2744#1 = IAdd(mulRes273C,_t272F);
      int idx2745#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2744);
      int addRes2747#1 = IAdd(mulRes273C,_t2731);
      int idx2748#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh1FE5,addRes2747);
      int mulRes275E#3 = IMul(_t2731,idx273F);
      int addRes2761#1 = IAdd(_t1FF2,mulRes275E);
      int addRes2763#1 = IAdd(_t272F,mulRes275E);
      real dof_load2764#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes275E);
      real dof_load2765#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2761);
      real dof_load2766#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2763);
      int mulRes2769#3 = IMul(_t2731,idx2742);
      int addRes276B#1 = IAdd(_t1FF2,mulRes2769);
      int addRes276C#1 = IAdd(_t272F,mulRes2769);
      real dof_load276D#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2769);
      real dof_load276E#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276B);
      real dof_load276F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes276C);
      int mulRes2772#3 = IMul(_t2731,idx2745);
      int addRes2774#1 = IAdd(_t1FF2,mulRes2772);
      int addRes2775#1 = IAdd(_t272F,mulRes2772);
      real dof_load2776#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes2772);
      real dof_load2777#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2774);
      real dof_load2778#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes2775);
      int mulRes277B#3 = IMul(_t2731,idx2748);
      int addRes277D#1 = IAdd(_t1FF2,mulRes277B);
      int addRes277E#1 = IAdd(_t272F,mulRes277B);
      real dof_load277F#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,mulRes277B);
      real dof_load2780#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277D);
      real dof_load2781#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh1FE5,addRes277E);
      real coeff27B2#22 = -0.1e1;
      real one27B3#33 = 0.1e1;
      real prod27B4#2 = RMul(one27B3,one27B3);
      real prod27B5#2 = RMul(one27B3,prod27B4);
      real basisEval27B6#3 = RMul(coeff27B2,prod27B5);
      real basisEval27B7#10 = RMul(one27B3,prod27B5);
      real basisEval27B8#45 = 0.e0;
      real r27CF#2 = RMul(dof_load2764,basisEval27B6);
      real r27D2#1 = RMul(dof_load276D,basisEval27B7);
      real r27D5#2 = RMul(dof_load2776,basisEval27B8);
      real r27D8#2 = RMul(dof_load277F,basisEval27B8);
      real r27D9#1 = RAdd(r27CF,r27D2);
      real r27DA#1 = RAdd(r27D9,r27D5);
      real r27DB#13 = RAdd(r27DA,r27D8);
      real r27DF#1 = RMul(dof_load276D,basisEval27B8);
      real r27E1#1 = RMul(dof_load2776,basisEval27B7);
      real r27E4#2 = RAdd(r27CF,r27DF);
      real r27E5#1 = RAdd(r27E4,r27E1);
      real r27E6#13 = RAdd(r27E5,r27D8);
      real r27EE#1 = RMul(dof_load277F,basisEval27B7);
      real r27F0#1 = RAdd(r27E4,r27D5);
      real r27F1#12 = RAdd(r27F0,r27EE);
      real r27F4#2 = RMul(dof_load2765,basisEval27B6);
      real r27F6#1 = RMul(dof_load276E,basisEval27B7);
      real r27F8#2 = RMul(dof_load2777,basisEval27B8);
      real r27FA#2 = RMul(dof_load2780,basisEval27B8);
      real r27FB#1 = RAdd(r27F4,r27F6);
      real r27FC#1 = RAdd(r27FB,r27F8);
      real r27FD#13 = RAdd(r27FC,r27FA);
      real r27FF#1 = RMul(dof_load276E,basisEval27B8);
      real r2800#1 = RMul(dof_load2777,basisEval27B7);
      real r2802#2 = RAdd(r27F4,r27FF);
      real r2803#1 = RAdd(r2802,r2800);
      real r2804#13 = RAdd(r2803,r27FA);
      real r2808#1 = RMul(dof_load2780,basisEval27B7);
      real r280A#1 = RAdd(r2802,r27F8);
      real r280B#12 = RAdd(r280A,r2808);
      real r280E#2 = RMul(dof_load2766,basisEval27B6);
      real r2810#1 = RMul(dof_load276F,basisEval27B7);
      real r2812#2 = RMul(dof_load2778,basisEval27B8);
      real r2814#2 = RMul(dof_load2781,basisEval27B8);
      real r2815#1 = RAdd(r280E,r2810);
      real r2816#1 = RAdd(r2815,r2812);
      real r2817#13 = RAdd(r2816,r2814);
      real r2819#1 = RMul(dof_load276F,basisEval27B8);
      real r281A#1 = RMul(dof_load2778,basisEval27B7);
      real r281C#2 = RAdd(r280E,r2819);
      real r281D#1 = RAdd(r281C,r281A);
      real r281E#13 = RAdd(r281D,r2814);
      real r2822#1 = RMul(dof_load2781,basisEval27B7);
      real r2824#1 = RAdd(r281C,r2812);
      real r2825#12 = RAdd(r2824,r2822);
      real r2886#3 = RMul(basisEval27B8,r27DB);
      real r2888#3 = RMul(basisEval27B8,r27FD);
      real r288A#5 = RMul(basisEval27B8,r2817);
      real r288B#3 = RAdd(r2886,r2888);
      real r288C#9 = RAdd(r288B,r288A);
      real r288E#3 = RMul(basisEval27B8,r27E6);
      real r2890#3 = RMul(basisEval27B8,r2804);
      real r2892#5 = RMul(basisEval27B8,r281E);
      real r2893#3 = RAdd(r288E,r2890);
      real r2894#9 = RAdd(r2893,r2892);
      real r2896#3 = RMul(basisEval27B8,r27F1);
      real r2898#3 = RMul(basisEval27B8,r280B);
      real r289A#5 = RMul(basisEval27B8,r2825);
      real r289B#3 = RAdd(r2896,r2898);
      real r289C#12 = RAdd(r289B,r289A);
      real r289F#1 = RMul(coeff27B2,r2817);
      real r28A0#3 = RAdd(r288B,r289F);
      real r28A1#1 = RMul(coeff27B2,r281E);
      real r28A2#3 = RAdd(r2893,r28A1);
      real r28A3#1 = RMul(coeff27B2,r2825);
      real r28A4#4 = RAdd(r289B,r28A3);
      real r28A7#1 = RMul(one27B3,r27FD);
      real r28A8#1 = RAdd(r2886,r28A7);
      real r28A9#3 = RAdd(r28A8,r288A);
      real r28AA#1 = RMul(one27B3,r2804);
      real r28AB#1 = RAdd(r288E,r28AA);
      real r28AC#3 = RAdd(r28AB,r2892);
      real r28AD#1 = RMul(one27B3,r280B);
      real r28AE#1 = RAdd(r2896,r28AD);
      real r28AF#4 = RAdd(r28AE,r289A);
      real r28B2#1 = RMul(one27B3,r2817);
      real r28B3#3 = RAdd(r288B,r28B2);
      real r28B4#1 = RMul(one27B3,r281E);
      real r28B5#3 = RAdd(r2893,r28B4);
      real r28B6#1 = RMul(one27B3,r2825);
      real r28B7#4 = RAdd(r289B,r28B6);
      real r28B9#1 = RMul(coeff27B2,r27DB);
      real r28BA#1 = RAdd(r28B9,r2888);
      real r28BB#3 = RAdd(r28BA,r288A);
      real r28BC#1 = RMul(coeff27B2,r27E6);
      real r28BD#1 = RAdd(r28BC,r2890);
      real r28BE#3 = RAdd(r28BD,r2892);
      real r28BF#1 = RMul(coeff27B2,r27F1);
      real r28C0#1 = RAdd(r28BF,r2898);
      real r28C1#4 = RAdd(r28C0,r289A);
      real r28C4#1 = RMul(coeff27B2,r27FD);
      real r28C5#1 = RAdd(r2886,r28C4);
      real r28C6#3 = RAdd(r28C5,r288A);
      real r28C7#1 = RMul(coeff27B2,r2804);
      real r28C8#1 = RAdd(r288E,r28C7);
      real r28C9#3 = RAdd(r28C8,r2892);
      real r28CA#1 = RMul(coeff27B2,r280B);
      real r28CB#1 = RAdd(r2896,r28CA);
      real r28CC#4 = RAdd(r28CB,r289A);
      real r28CE#1 = RMul(one27B3,r27DB);
      real r28CF#1 = RAdd(r28CE,r2888);
      real r28D0#3 = RAdd(r28CF,r288A);
      real r28D1#1 = RMul(one27B3,r27E6);
      real r28D2#1 = RAdd(r28D1,r2890);
      real r28D3#3 = RAdd(r28D2,r2892);
      real r28D4#1 = RMul(one27B3,r27F1);
      real r28D5#1 = RAdd(r28D4,r2898);
      real r28D6#4 = RAdd(r28D5,r289A);
      real r2933#1 = RMul(r27DB,r288C);
      real r2936#1 = RMul(r27FD,r28B3);
      real r2939#1 = RMul(r2817,r28C6);
      real r293A#1 = RAdd(r2933,r2936);
      real r293B#1 = RAdd(r293A,r2939);
      real r293D#1 = RMul(r27DB,r2894);
      real r293F#1 = RMul(r27FD,r28B5);
      real r2941#1 = RMul(r2817,r28C9);
      real r2942#1 = RAdd(r293D,r293F);
      real r2943#2 = RAdd(r2942,r2941);
      real r2945#1 = RMul(r27DB,r289C);
      real r2947#1 = RMul(r27FD,r28B7);
      real r2949#1 = RMul(r2817,r28CC);
      real r294A#1 = RAdd(r2945,r2947);
      real r294B#2 = RAdd(r294A,r2949);
      real r294E#1 = RMul(r27DB,r28A0);
      real r2950#1 = RMul(r27FD,r288C);
      real r2952#1 = RMul(r2817,r28D0);
      real r2953#1 = RAdd(r294E,r2950);
      real r2954#1 = RAdd(r2953,r2952);
      real r2956#1 = RMul(r27DB,r28A2);
      real r2958#1 = RMul(r27FD,r2894);
      real r295A#1 = RMul(r2817,r28D3);
      real r295B#1 = RAdd(r2956,r2958);
      real r295C#2 = RAdd(r295B,r295A);
      real r295E#1 = RMul(r27DB,r28A4);
      real r2960#1 = RMul(r27FD,r289C);
      real r2962#1 = RMul(r2817,r28D6);
      real r2963#1 = RAdd(r295E,r2960);
      real r2964#2 = RAdd(r2963,r2962);
      real r2967#1 = RMul(r27DB,r28A9);
      real r2969#1 = RMul(r27FD,r28BB);
      real r296B#1 = RMul(r2817,r288C);
      real r296C#1 = RAdd(r2967,r2969);
      real r296D#1 = RAdd(r296C,r296B);
      real r296F#1 = RMul(r27DB,r28AC);
      real r2971#1 = RMul(r27FD,r28BE);
      real r2973#1 = RMul(r2817,r2894);
      real r2974#1 = RAdd(r296F,r2971);
      real r2975#2 = RAdd(r2974,r2973);
      real r2977#1 = RMul(r27DB,r28AF);
      real r2979#1 = RMul(r27FD,r28C1);
      real r297B#1 = RMul(r2817,r289C);
      real r297C#1 = RAdd(r2977,r2979);
      real r297D#2 = RAdd(r297C,r297B);
      real r2981#1 = RMul(r27E6,r288C);
      real r2983#1 = RMul(r2804,r28B3);
      real r2985#1 = RMul(r281E,r28C6);
      real r2986#1 = RAdd(r2981,r2983);
      real r2987#2 = RAdd(r2986,r2985);
      real r2988#1 = RMul(r27E6,r2894);
      real r2989#1 = RMul(r2804,r28B5);
      real r298A#1 = RMul(r281E,r28C9);
      real r298B#1 = RAdd(r2988,r2989);
      real r298C#1 = RAdd(r298B,r298A);
      real r298D#1 = RMul(r27E6,r289C);
      real r298E#1 = RMul(r2804,r28B7);
      real r298F#1 = RMul(r281E,r28CC);
      real r2990#1 = RAdd(r298D,r298E);
      real r2991#2 = RAdd(r2990,r298F);
      real r2993#1 = RMul(r27E6,r28A0);
      real r2994#1 = RMul(r2804,r288C);
      real r2995#1 = RMul(r281E,r28D0);
      real r2996#1 = RAdd(r2993,r2994);
      real r2997#2 = RAdd(r2996,r2995);
      real r2998#1 = RMul(r27E6,r28A2);
      real r2999#1 = RMul(r2804,r2894);
      real r299A#1 = RMul(r281E,r28D3);
      real r299B#1 = RAdd(r2998,r2999);
      real r299C#1 = RAdd(r299B,r299A);
      real r299D#1 = RMul(r27E6,r28A4);
      real r299E#1 = RMul(r2804,r289C);
      real r299F#1 = RMul(r281E,r28D6);
      real r29A0#1 = RAdd(r299D,r299E);
      real r29A1#2 = RAdd(r29A0,r299F);
      real r29A3#1 = RMul(r27E6,r28A9);
      real r29A4#1 = RMul(r2804,r28BB);
      real r29A5#1 = RMul(r281E,r288C);
      real r29A6#1 = RAdd(r29A3,r29A4);
      real r29A7#2 = RAdd(r29A6,r29A5);
      real r29A8#1 = RMul(r27E6,r28AC);
      real r29A9#1 = RMul(r2804,r28BE);
      real r29AA#1 = RMul(r281E,r2894);
      real r29AB#1 = RAdd(r29A8,r29A9);
      real r29AC#1 = RAdd(r29AB,r29AA);
      real r29AD#1 = RMul(r27E6,r28AF);
      real r29AE#1 = RMul(r2804,r28C1);
      real r29AF#1 = RMul(r281E,r289C);
      real r29B0#1 = RAdd(r29AD,r29AE);
      real r29B1#2 = RAdd(r29B0,r29AF);
      real r29B5#1 = RMul(r27F1,r288C);
      real r29B7#1 = RMul(r280B,r28B3);
      real r29B9#1 = RMul(r2825,r28C6);
      real r29BA#1 = RAdd(r29B5,r29B7);
      real r29BB#2 = RAdd(r29BA,r29B9);
      real r29BC#1 = RMul(r27F1,r2894);
      real r29BD#1 = RMul(r280B,r28B5);
      real r29BE#1 = RMul(r2825,r28C9);
      real r29BF#1 = RAdd(r29BC,r29BD);
      real r29C0#2 = RAdd(r29BF,r29BE);
      real r29C1#1 = RMul(r27F1,r289C);
      real r29C2#1 = RMul(r280B,r28B7);
      real r29C3#1 = RMul(r2825,r28CC);
      real r29C4#1 = RAdd(r29C1,r29C2);
      real r29C5#1 = RAdd(r29C4,r29C3);
      real r29C7#1 = RMul(r27F1,r28A0);
      real r29C8#1 = RMul(r280B,r288C);
      real r29C9#1 = RMul(r2825,r28D0);
      real r29CA#1 = RAdd(r29C7,r29C8);
      real r29CB#2 = RAdd(r29CA,r29C9);
      real r29CC#1 = RMul(r27F1,r28A2);
      real r29CD#1 = RMul(r280B,r2894);
      real r29CE#1 = RMul(r2825,r28D3);
      real r29CF#1 = RAdd(r29CC,r29CD);
      real r29D0#2 = RAdd(r29CF,r29CE);
      real r29D1#1 = RMul(r27F1,r28A4);
      real r29D2#1 = RMul(r280B,r289C);
      real r29D3#1 = RMul(r2825,r28D6);
      real r29D4#1 = RAdd(r29D1,r29D2);
      real r29D5#1 = RAdd(r29D4,r29D3);
      real r29D7#1 = RMul(r27F1,r28A9);
      real r29D8#1 = RMul(r280B,r28BB);
      real r29D9#1 = RMul(r2825,r288C);
      real r29DA#1 = RAdd(r29D7,r29D8);
      real r29DB#2 = RAdd(r29DA,r29D9);
      real r29DC#1 = RMul(r27F1,r28AC);
      real r29DD#1 = RMul(r280B,r28BE);
      real r29DE#1 = RMul(r2825,r2894);
      real r29DF#1 = RAdd(r29DC,r29DD);
      real r29E0#2 = RAdd(r29DF,r29DE);
      real r29E1#1 = RMul(r27F1,r28AF);
      real r29E2#1 = RMul(r280B,r28C1);
      real r29E3#1 = RMul(r2825,r289C);
      real r29E4#1 = RAdd(r29E1,r29E2);
      real r29E5#1 = RAdd(r29E4,r29E3);
      tensor[3] probe_l_142AA1#1 = <tensor[3]>[r27DB,r27FD,r2817];
      tensor[3] probe_l_152AEE#3 = <tensor[3]>[r27E6,r2804,r281E];
      tensor[3] tensor2B99#1 = <tensor[3]>[r289C,r28B7,r28CC];
      tensor[3] tensor2B9F#1 = <tensor[3]>[r28A4,r289C,r28D6];
      tensor[3] tensor2BA6#1 = <tensor[3]>[r28AF,r28C1,r289C];
      real vdot2BC9#1 = VDot<3>(probe_l_152AEE,tensor2B99);
      real vdot2BCB#1 = VDot<3>(probe_l_152AEE,tensor2B9F);
      real vdot2BCD#1 = VDot<3>(probe_l_152AEE,tensor2BA6);
      tensor[3] op1_e3_l_182BC7#1 = <tensor[3]>[vdot2BC9,vdot2BCB,vdot2BCD];
      real op1_e3_l_192BD6#1 = VDot<3>(probe_l_142AA1,op1_e3_l_182BC7);
      real r2BDC#2 = RMul(basisEval27B8,r293B);
      real r2BDE#1 = RMul(basisEval27B8,r2943);
      real r2BE0#2 = RMul(basisEval27B8,r294B);
      real r2BE2#2 = RMul(basisEval27B8,r2987);
      real r2BE4#3 = RMul(basisEval27B8,r298C);
      real r2BE7#1 = RMul(one27B3,r2991);
      real r2BE9#2 = RMul(basisEval27B8,r29BB);
      real r2BEC#1 = RMul(coeff27B2,r29C0);
      real r2BEE#3 = RMul(basisEval27B8,r29C5);
      real r2BEF#2 = RAdd(r2BDC,r2BDE);
      real r2BF0#1 = RAdd(r2BEF,r2BE0);
      real r2BF1#1 = RAdd(r2BF0,r2BE2);
      real r2BF2#1 = RAdd(r2BF1,r2BE4);
      real r2BF3#1 = RAdd(r2BF2,r2BE7);
      real r2BF4#1 = RAdd(r2BF3,r2BE9);
      real r2BF5#1 = RAdd(r2BF4,r2BEC);
      real r2BF6#1 = RAdd(r2BF5,r2BEE);
      real r2BF8#2 = RMul(basisEval27B8,r2954);
      real r2BFA#1 = RMul(basisEval27B8,r295C);
      real r2BFC#2 = RMul(basisEval27B8,r2964);
      real r2BFE#2 = RMul(basisEval27B8,r2997);
      real r2C00#3 = RMul(basisEval27B8,r299C);
      real r2C02#1 = RMul(one27B3,r29A1);
      real r2C04#2 = RMul(basisEval27B8,r29CB);
      real r2C06#1 = RMul(coeff27B2,r29D0);
      real r2C08#3 = RMul(basisEval27B8,r29D5);
      real r2C09#2 = RAdd(r2BF8,r2BFA);
      real r2C0A#1 = RAdd(r2C09,r2BFC);
      real r2C0B#1 = RAdd(r2C0A,r2BFE);
      real r2C0C#1 = RAdd(r2C0B,r2C00);
      real r2C0D#1 = RAdd(r2C0C,r2C02);
      real r2C0E#1 = RAdd(r2C0D,r2C04);
      real r2C0F#1 = RAdd(r2C0E,r2C06);
      real r2C10#1 = RAdd(r2C0F,r2C08);
      real r2C12#2 = RMul(basisEval27B8,r296D);
      real r2C14#1 = RMul(basisEval27B8,r2975);
      real r2C16#2 = RMul(basisEval27B8,r297D);
      real r2C18#2 = RMul(basisEval27B8,r29A7);
      real r2C1A#3 = RMul(basisEval27B8,r29AC);
      real r2C1C#1 = RMul(one27B3,r29B1);
      real r2C1E#2 = RMul(basisEval27B8,r29DB);
      real r2C20#1 = RMul(coeff27B2,r29E0);
      real r2C22#3 = RMul(basisEval27B8,r29E5);
      real r2C23#2 = RAdd(r2C12,r2C14);
      real r2C24#1 = RAdd(r2C23,r2C16);
      real r2C25#1 = RAdd(r2C24,r2C18);
      real r2C26#1 = RAdd(r2C25,r2C1A);
      real r2C27#1 = RAdd(r2C26,r2C1C);
      real r2C28#1 = RAdd(r2C27,r2C1E);
      real r2C29#1 = RAdd(r2C28,r2C20);
      real r2C2A#1 = RAdd(r2C29,r2C22);
      real r2C2C#1 = RMul(coeff27B2,r294B);
      real r2C2D#2 = RMul(basisEval27B8,r2991);
      real r2C2E#1 = RMul(one27B3,r29BB);
      real r2C2F#2 = RMul(basisEval27B8,r29C0);
      real r2C30#1 = RAdd(r2BEF,r2C2C);
      real r2C31#1 = RAdd(r2C30,r2BE2);
      real r2C32#1 = RAdd(r2C31,r2BE4);
      real r2C33#1 = RAdd(r2C32,r2C2D);
      real r2C34#1 = RAdd(r2C33,r2C2E);
      real r2C35#1 = RAdd(r2C34,r2C2F);
      real r2C36#1 = RAdd(r2C35,r2BEE);
      real r2C37#1 = RMul(coeff27B2,r2964);
      real r2C38#2 = RMul(basisEval27B8,r29A1);
      real r2C39#1 = RMul(one27B3,r29CB);
      real r2C3A#2 = RMul(basisEval27B8,r29D0);
      real r2C3B#1 = RAdd(r2C09,r2C37);
      real r2C3C#1 = RAdd(r2C3B,r2BFE);
      real r2C3D#1 = RAdd(r2C3C,r2C00);
      real r2C3E#1 = RAdd(r2C3D,r2C38);
      real r2C3F#1 = RAdd(r2C3E,r2C39);
      real r2C40#1 = RAdd(r2C3F,r2C3A);
      real r2C41#1 = RAdd(r2C40,r2C08);
      real r2C42#1 = RMul(coeff27B2,r297D);
      real r2C43#2 = RMul(basisEval27B8,r29B1);
      real r2C44#1 = RMul(one27B3,r29DB);
      real r2C45#2 = RMul(basisEval27B8,r29E0);
      real r2C46#1 = RAdd(r2C23,r2C42);
      real r2C47#1 = RAdd(r2C46,r2C18);
      real r2C48#1 = RAdd(r2C47,r2C1A);
      real r2C49#1 = RAdd(r2C48,r2C43);
      real r2C4A#1 = RAdd(r2C49,r2C44);
      real r2C4B#1 = RAdd(r2C4A,r2C45);
      real r2C4C#1 = RAdd(r2C4B,r2C22);
      real r2C4E#1 = RMul(one27B3,r2943);
      real r2C4F#1 = RMul(coeff27B2,r2987);
      real r2C50#1 = RAdd(r2BDC,r2C4E);
      real r2C51#1 = RAdd(r2C50,r2BE0);
      real r2C52#1 = RAdd(r2C51,r2C4F);
      real r2C53#1 = RAdd(r2C52,r2BE4);
      real r2C54#1 = RAdd(r2C53,r2C2D);
      real r2C55#1 = RAdd(r2C54,r2BE9);
      real r2C56#1 = RAdd(r2C55,r2C2F);
      real r2C57#1 = RAdd(r2C56,r2BEE);
      real r2C58#1 = RMul(one27B3,r295C);
      real r2C59#1 = RMul(coeff27B2,r2997);
      real r2C5A#1 = RAdd(r2BF8,r2C58);
      real r2C5B#1 = RAdd(r2C5A,r2BFC);
      real r2C5C#1 = RAdd(r2C5B,r2C59);
      real r2C5D#1 = RAdd(r2C5C,r2C00);
      real r2C5E#1 = RAdd(r2C5D,r2C38);
      real r2C5F#1 = RAdd(r2C5E,r2C04);
      real r2C60#1 = RAdd(r2C5F,r2C3A);
      real r2C61#1 = RAdd(r2C60,r2C08);
      real r2C62#1 = RMul(one27B3,r2975);
      real r2C63#1 = RMul(coeff27B2,r29A7);
      real r2C64#1 = RAdd(r2C12,r2C62);
      real r2C65#1 = RAdd(r2C64,r2C16);
      real r2C66#1 = RAdd(r2C65,r2C63);
      real r2C67#1 = RAdd(r2C66,r2C1A);
      real r2C68#1 = RAdd(r2C67,r2C43);
      real r2C69#1 = RAdd(r2C68,r2C1E);
      real r2C6A#1 = RAdd(r2C69,r2C45);
      real r2C6B#1 = RAdd(r2C6A,r2C22);
      real realLit2D03#1 = 0.2e1;
      real op1_e3_l_212D02#9 = RMul(realLit2D03,op1_e3_l_192BD6);
      real varAcc2D09#1 = VIndex<3,0>(xn2D08);
      real varAcc2D0A#1 = VIndex<3,1>(xn2D08);
      real varAcc2D0B#1 = VIndex<3,2>(xn2D08);
      real prod2D10#2 = RMul(varAcc2D09,prod27B4);
      real prod2D12#1 = RMul(varAcc2D0A,one27B3);
      real prod2D13#2 = RMul(one27B3,prod2D12);
      real prod2D15#1 = RMul(one27B3,varAcc2D0B);
      real prod2D16#2 = RMul(one27B3,prod2D15);
      real mult2D19#1 = RMul(coeff27B2,prod2D16);
      real mult2D1A#1 = RMul(coeff27B2,prod2D13);
      real mult2D1B#1 = RMul(coeff27B2,prod2D10);
      real sum2D1C#1 = RAdd(mult2D1A,mult2D1B);
      real sum2D1D#1 = RAdd(mult2D19,sum2D1C);
      real sum2D1E#3 = RAdd(basisEval27B7,sum2D1D);
      real basisEval2D20#3 = RMul(one27B3,prod2D10);
      real basisEval2D21#3 = RMul(one27B3,prod2D13);
      real basisEval2D22#3 = RMul(one27B3,prod2D16);
      real r2D43#1 = RMul(dof_load2764,sum2D1E);
      real r2D46#1 = RMul(dof_load276D,basisEval2D20);
      real r2D49#1 = RMul(dof_load2776,basisEval2D21);
      real r2D4C#1 = RMul(dof_load277F,basisEval2D22);
      real r2D4D#1 = RAdd(r2D43,r2D46);
      real r2D4E#1 = RAdd(r2D4D,r2D49);
      real r2D4F#1 = RAdd(r2D4E,r2D4C);
      real r2D51#1 = RMul(dof_load2765,sum2D1E);
      real r2D53#1 = RMul(dof_load276E,basisEval2D20);
      real r2D55#1 = RMul(dof_load2777,basisEval2D21);
      real r2D57#1 = RMul(dof_load2780,basisEval2D22);
      real r2D58#1 = RAdd(r2D51,r2D53);
      real r2D59#1 = RAdd(r2D58,r2D55);
      real r2D5A#1 = RAdd(r2D59,r2D57);
      real r2D5C#1 = RMul(dof_load2766,sum2D1E);
      real r2D5E#1 = RMul(dof_load276F,basisEval2D20);
      real r2D60#1 = RMul(dof_load2778,basisEval2D21);
      real r2D62#1 = RMul(dof_load2781,basisEval2D22);
      real r2D63#1 = RAdd(r2D5C,r2D5E);
      real r2D64#1 = RAdd(r2D63,r2D60);
      real r2D65#1 = RAdd(r2D64,r2D62);
      tensor[3] probe_l_222D40#1 = <tensor[3]>[r2D4F,r2D5A,r2D65];
      real r2D8F#1 = RDiv(r2BF6,op1_e3_l_212D02);
      real r2D91#1 = RDiv(r2C10,op1_e3_l_212D02);
      real r2D93#1 = RDiv(r2C2A,op1_e3_l_212D02);
      tensor[3] tensor2D94#1 = <tensor[3]>[r2D8F,r2D91,r2D93];
      real r2D96#1 = RDiv(r2C36,op1_e3_l_212D02);
      real r2D98#1 = RDiv(r2C41,op1_e3_l_212D02);
      real r2D9A#1 = RDiv(r2C4C,op1_e3_l_212D02);
      tensor[3] tensor2D9B#1 = <tensor[3]>[r2D96,r2D98,r2D9A];
      real r2D9D#1 = RDiv(r2C57,op1_e3_l_212D02);
      real r2D9F#1 = RDiv(r2C61,op1_e3_l_212D02);
      real r2DA1#1 = RDiv(r2C6B,op1_e3_l_212D02);
      tensor[3] tensor2DA2#1 = <tensor[3]>[r2D9D,r2D9F,r2DA1];
      tensor[3] op1_e3_l_242DBA#3 = VSub<3>(probe_l_222D40,pos1FE6);
      real vdot2DBF#1 = VDot<3>(tensor2D94,op1_e3_l_242DBA);
      real vdot2DC1#1 = VDot<3>(tensor2D9B,op1_e3_l_242DBA);
      real vdot2DC3#1 = VDot<3>(tensor2DA2,op1_e3_l_242DBA);
      tensor[3] op1_e3_l_252DBD#3 = <tensor[3]>[vdot2DBF,vdot2DC1,vdot2DC3];
      tensor[3] xn2DCC#4 = VSub<3>(xn2D08,op1_e3_l_252DBD);
      real _t2DCF#2 = 0.1e-7;
      real _t2DD1#1 = RMul(_t2DCF,_t2DCF);
      real _t2E33#1 = VDot<3>(op1_e3_l_252DBD,op1_e3_l_252DBD);
      bool _t2E36#1 = GTE<real>(_t2DD1,_t2E33);
      if _t2E36 then goto ASSIGN2E3C else goto JOIN2E65
    ASSIGN2E3C:  preds = [COND2E38]
      real _t2E3B#4 = 0.1e-4;
      real _t2E3D#1 = RAdd(one27B3,_t2E3B);
      tensor[3] _t2E40#1 = <tensor[3]>[one27B3,one27B3,one27B3];
      real _t2E42#1 = VDot<3>(_t2E40,xn2DCC);
      bool _t2E45#1 = GT<real>(_t2E3D,_t2E42);
      tensor[3] _t2E47#1 = <tensor[3]>[_t2E3B,_t2E3B,_t2E3B];
      tensor[3] _t2E49#3 = VAdd<3>(_t2E47,xn2DCC);
      real _t2E4C#1 = VIndex<3,0>(_t2E49);
      real _t2E4E#3 = -0.e0;
      bool _t2E50#1 = GT<real>(_t2E4C,_t2E4E);
      real _t2E52#1 = VIndex<3,1>(_t2E49);
      bool _t2E54#1 = GT<real>(_t2E52,_t2E4E);
      real _t2E56#1 = VIndex<3,2>(_t2E49);
      bool _t2E58#1 = GT<real>(_t2E56,_t2E4E);
      bool _t2E5A#1 = BAnd(_t2E54,_t2E58);
      bool _t2E5C#1 = BAnd(_t2E50,_t2E5A);
      bool _t2E5E#1 = BAnd(_t2E45,_t2E5C);
      if _t2E5E then goto ASSIGN2E62 else goto JOIN2E64
    ASSIGN2E62:  preds = [COND2E60]
      femData:MeshPos _t2E61#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh1FE5,cellInt273A,xn2DCC,pos1FE6);
      return _t2E61
      goto JOIN2E64
    JOIN2E64:  preds = [*RETURN(_t2E61)2E63,COND2E60]
      goto JOIN2E65
    JOIN2E65:  preds = [JOIN2E64,COND2E38]
      int newtonInt2E66#2 = IAdd(newtonInt2E67,_t1FF2);
      bool _t2E69#1 = GTE<int>(newtonInt2E66,_t272F);
      if _t2E69 then goto ASSIGN2E6D else goto JOIN2E77
    ASSIGN2E6D:  preds = [COND2E6B]
      bool _t2E6C#1 = GTE<int>(cellInt273A,numCell1FF4);
      if _t2E6C then goto ASSIGN2E70 else goto ASSIGN2E79
    ASSIGN2E70:  preds = [COND2E6E]
      femData:MeshPos _t2E6F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E6F
      goto JOIN2E74
    JOIN2E74:  preds = [*RETURN(_t2E6F)2E71,ASSIGN2E79]
      int cellInt2E72#1 = phi(cellInt2E73)
      goto JOIN2E77
    JOIN2E77:  preds = [JOIN2E74,COND2E6B]
      int cellInt2E75#1 = phi(cellInt2E72,cellInt273A)
      int newtonInt2E76#1 = phi(newtonInt1FEC,newtonInt2E66)
      goto FOREACH2738
    ASSIGN2E79:  preds = [COND2E6E]
      int cellInt2E73#1 = IAdd(cellInt273A,_t1FF2);
      goto JOIN2E74
    ASSIGN2E7B:  preds = [FOREACH2738]
      string _t2E7A#1 = "Bad end 2";
      string _t2E7C#1 = "\n";
      Print<[string,string]>(_t2E7A,_t2E7C);
      femData:MeshPos _t2E7F#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh1FE5);
      return _t2E7F
}
## input initialization
  ENTRY1D28:  preds = []
    real isoval1D29#1 = 0.2e0;
    globals.isoval1D09 = isoval1D29;
    real thick1D2C#1 = 0.7e-1;
    globals.thick1D0A = thick1D2C;
    real _t1D2F#2 = 0.3e1;
    real _t1D31#1 = -0.3e1;
    tensor[3] camEye1D33#1 = <tensor[3]>[_t1D2F,_t1D31,_t1D2F];
    globals.camEye1D0B = camEye1D33;
    real _t1D36#3 = 0.5e0;
    tensor[3] camAt1D38#1 = <tensor[3]>[_t1D36,_t1D36,_t1D36];
    globals.camAt1D0C = camAt1D38;
    real _t1D3B#2 = 0.e0;
    real _t1D3D#2 = 0.1e1;
    tensor[3] camUp1D3F#2 = <tensor[3]>[_t1D3B,_t1D3B,_t1D3D];
    globals.camUp1D0D = camUp1D3F;
    real camFOV1D42#1 = 0.137e2;
    globals.camFOV1D0E = camFOV1D42;
    int iresU1D45#2 = 500;
    globals.iresU1D0F = iresU1D45;
    globals.iresV1D10 = iresU1D45;
    real camNear1D49#1 = -0.2e1;
    globals.camNear1D11 = camNear1D49;
    real camFar1D4C#1 = 0.5e1;
    globals.camFar1D12 = camFar1D4C;
    globals.refStep1D13 = _t1D3D;
    real rayStep1D50#1 = 0.1e-1;
    globals.rayStep1D14 = rayStep1D50;
    globals.lightVsp1D15 = camUp1D3F;
    real phongKa1D54#1 = 0.1e0;
    globals.phongKa1D16 = phongKa1D54;
    real phongKd1D57#1 = 0.9e0;
    globals.phongKd1D17 = phongKd1D57;
    bool debug1D5A#1 = false;
    globals.debug1D18 = debug1D5A;
    int su1D5D#2 = 250;
    globals.su1D19 = su1D5D;
    globals.sv1D1A = su1D5D;
    return
## global-variable initialization
  ENTRY1D62:  preds = []
    femData:Mesh a1D63#3 = globals.a1D06;
    femData:Space 0b043B_intermedateGlobal1D65#1 = globals.0b043B_intermedateGlobal1D07;
    femData:FemFunc 0c043D_intermedateGlobal1D67#1 = globals.0c043D_intermedateGlobal1D08;
    tensor[3] camEye1D69#1 = globals.camEye1D0B;
    tensor[3] camAt1D6B#1 = globals.camAt1D0C;
    tensor[3] camUp1D6D#3 = globals.camUp1D0D;
    real camFOV1D6F#1 = globals.camFOV1D0E;
    int iresU1D71#1 = globals.iresU1D0F;
    int iresV1D73#1 = globals.iresV1D10;
    tensor[3] lightVsp1D75#5 = globals.lightVsp1D15;
    int _t1D77#1 = 0;
    int _t1D79#1 = 1;
    int _t1D7B#1 = ExtractFemItem<int,NumCell(Mesh)>(a1D63);
    int _t1D7D#1 = ISub(_t1D7B,_t1D79);
    int[] _t1D7F#1 = Range(_t1D77,_t1D7D);
    femData:MeshCell[] _t1D81#1 = <femData:MeshCell[]>{};
  FOREACH1D84:  preds = [ASSIGN1D82,NEXT1D8A]
    foreach (_t1D83 in _t1D7F) on exit goto ASSIGN1D8C
      femData:MeshCell[] _t1D88#1 = phi(_t1D81,_t1D87)
    femData:MeshCell _t1D85#1 = LoadFem<femData:MeshCell>(a1D63,_t1D83);
    femData:MeshCell[] _t1D87#1 = Append<femData:MeshCell>(_t1D88,_t1D85);
    goto FOREACH1D84
  ASSIGN1D8C:  preds = [FOREACH1D84]
    femData:Space b1D8B#1 = LoadFem<femData:Space>(0b043B_intermedateGlobal1D65,a1D63);
    femData:FemFunc c1D8D#2 = LoadFem<femData:FemFunc>(0c043D_intermedateGlobal1D67,b1D8B);
    femData:Space _t1D8F#2 = ExtractFem<femData:Space,femData:FemFunc>(c1D8D);
    femData:Mesh _t1D91#1 = ExtractFem<femData:Mesh,femData:Space>(_t1D8F);
    image(IMAGE1D<double[3]>) I1D93#1 = LoadImage<image(IMAGE1D<double[3]>),"cmap.nrrd">;
    tensor[3] op1_e3_l_21D99#9 = VSub<3>(camAt1D6B,camEye1D69);
    real op1_e3_l_41D9C#1 = VDot<3>(op1_e3_l_21D99,op1_e3_l_21D99);
    real camDist1D9F#4 = Sqrt(op1_e3_l_41D9C);
    globals.camDist1D1B = camDist1D9F;
    real realLit1DA4#9 = 0.1e1;
    real op1_e3_l_91DA3#6 = RDiv(realLit1DA4,camDist1D9F);
    tensor[3] camN1DA8#4 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_21D99);
    globals.camN1D1C = camN1DA8;
    real realLit1DAD#6 = 0.e0;
    real r1DAE#3 = TensorIndex<tensor[3],[0]>(camUp1D6D);
    real r1DAF#3 = RMul(realLit1DAD,r1DAE);
    real r1DB0#3 = TensorIndex<tensor[3],[1]>(camUp1D6D);
    real r1DB1#3 = RMul(realLit1DAD,r1DB0);
    real r1DB2#3 = TensorIndex<tensor[3],[2]>(camUp1D6D);
    real r1DB3#5 = RMul(realLit1DAD,r1DB2);
    real r1DB4#3 = RAdd(r1DAF,r1DB1);
    real r1DB5#3 = RAdd(r1DB4,r1DB3);
    real r1DB7#1 = RMul(realLit1DA4,r1DB2);
    real r1DB8#1 = RAdd(r1DB4,r1DB7);
    real realLit1DB9#6 = -0.1e1;
    real r1DBA#1 = RMul(realLit1DB9,r1DB0);
    real r1DBB#1 = RAdd(r1DAF,r1DBA);
    real r1DBC#1 = RAdd(r1DBB,r1DB3);
    tensor[3] tensor1DBD#1 = <tensor[3]>[r1DB5,r1DB8,r1DBC];
    real r1DBE#1 = RMul(realLit1DB9,r1DB2);
    real r1DBF#1 = RAdd(r1DB4,r1DBE);
    real r1DC0#1 = RMul(realLit1DA4,r1DAE);
    real r1DC1#1 = RAdd(r1DC0,r1DB1);
    real r1DC2#1 = RAdd(r1DC1,r1DB3);
    tensor[3] tensor1DC3#1 = <tensor[3]>[r1DBF,r1DB5,r1DC2];
    real r1DC4#1 = RMul(realLit1DA4,r1DB0);
    real r1DC5#1 = RAdd(r1DAF,r1DC4);
    real r1DC6#1 = RAdd(r1DC5,r1DB3);
    real r1DC7#1 = RMul(realLit1DB9,r1DAE);
    real r1DC8#1 = RAdd(r1DC7,r1DB1);
    real r1DC9#1 = RAdd(r1DC8,r1DB3);
    tensor[3] tensor1DCA#1 = <tensor[3]>[r1DC6,r1DC9,r1DB5];
    real vdot1DED#1 = VDot<3>(op1_e3_l_21D99,tensor1DBD);
    real vdot1DEF#1 = VDot<3>(op1_e3_l_21D99,tensor1DC3);
    real vdot1DF1#1 = VDot<3>(op1_e3_l_21D99,tensor1DCA);
    tensor[3] op1_e3_l_171DEB#6 = <tensor[3]>[vdot1DED,vdot1DEF,vdot1DF1];
    real op1_e3_l_341DFA#1 = VDot<3>(op1_e3_l_171DEB,op1_e3_l_171DEB);
    real r1DFE#1 = RMul(op1_e3_l_91DA3,op1_e3_l_91DA3);
    real op1_e3_l_351DFD#1 = RMul(r1DFE,op1_e3_l_341DFA);
    real op1_e3_l_361E02#1 = Sqrt(op1_e3_l_351DFD);
    tensor[3] op1_e3_l_371E05#1 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_171DEB);
    real op1_e3_l_381E08#2 = RDiv(realLit1DA4,op1_e3_l_361E02);
    tensor[3] camU1E0D#4 = VScale<3>(op1_e3_l_381E08,op1_e3_l_371E05);
    globals.camU1D1D = camU1E0D;
    real r1E13#3 = TensorIndex<tensor[3],[0]>(op1_e3_l_21D99);
    real r1E14#3 = RMul(realLit1DAD,r1E13);
    real r1E15#3 = TensorIndex<tensor[3],[1]>(op1_e3_l_21D99);
    real r1E16#3 = RMul(realLit1DAD,r1E15);
    real r1E17#3 = TensorIndex<tensor[3],[2]>(op1_e3_l_21D99);
    real r1E18#5 = RMul(realLit1DAD,r1E17);
    real r1E19#3 = RAdd(r1E14,r1E16);
    real r1E1A#3 = RAdd(r1E19,r1E18);
    real r1E1C#1 = RMul(realLit1DA4,r1E17);
    real r1E1D#1 = RAdd(r1E19,r1E1C);
    real r1E1F#1 = RMul(realLit1DB9,r1E15);
    real r1E20#1 = RAdd(r1E14,r1E1F);
    real r1E21#1 = RAdd(r1E20,r1E18);
    tensor[3] tensor1E22#1 = <tensor[3]>[r1E1A,r1E1D,r1E21];
    real r1E23#1 = RMul(realLit1DB9,r1E17);
    real r1E24#1 = RAdd(r1E19,r1E23);
    real r1E25#1 = RMul(realLit1DA4,r1E13);
    real r1E26#1 = RAdd(r1E25,r1E16);
    real r1E27#1 = RAdd(r1E26,r1E18);
    tensor[3] tensor1E28#1 = <tensor[3]>[r1E24,r1E1A,r1E27];
    real r1E29#1 = RMul(realLit1DA4,r1E15);
    real r1E2A#1 = RAdd(r1E14,r1E29);
    real r1E2B#1 = RAdd(r1E2A,r1E18);
    real r1E2C#1 = RMul(realLit1DB9,r1E13);
    real r1E2D#1 = RAdd(r1E2C,r1E16);
    real r1E2E#1 = RAdd(r1E2D,r1E18);
    tensor[3] tensor1E2F#1 = <tensor[3]>[r1E2B,r1E2E,r1E1A];
    real vdot1E52#1 = VDot<3>(op1_e3_l_171DEB,tensor1E22);
    real vdot1E54#1 = VDot<3>(op1_e3_l_171DEB,tensor1E28);
    real vdot1E56#1 = VDot<3>(op1_e3_l_171DEB,tensor1E2F);
    tensor[3] op1_e3_l_471E50#1 = <tensor[3]>[vdot1E52,vdot1E54,vdot1E56];
    tensor[3] op1_e3_l_501E5F#3 = VScale<3>(op1_e3_l_91DA3,op1_e3_l_471E50);
    real r1E63#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_501E5F);
    real r1E64#3 = RMul(op1_e3_l_381E08,op1_e3_l_91DA3);
    real r1E65#2 = RMul(r1E64,r1E63);
    real r1E66#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_501E5F);
    real r1E67#2 = RMul(r1E64,r1E66);
    real r1E68#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_501E5F);
    real r1E69#2 = RMul(r1E64,r1E68);
    tensor[3] camV1E62#1 = <tensor[3]>[r1E65,r1E67,r1E69];
    globals.camV1D1E = camV1E62;
    real _t1E74#1 = 0.314159265358979323846264338327950288e1;
    real _t1E76#1 = 0.36e3;
    real op1_e3_l_51E78#1 = RMul(camFOV1D6F,_t1E74);
    real op1_e3_l_61E7B#1 = RDiv(op1_e3_l_51E78,_t1E76);
    real op1_e3_l_101E7E#2 = Tan(op1_e3_l_61E7B);
    real camVmax1E81#1 = RMul(op1_e3_l_101E7E,camDist1D9F);
    globals.camVmax1D1F = camVmax1E81;
    real _t1E85#1 = IntToReal(iresU1D71);
    real _t1E87#1 = IntToReal(iresV1D73);
    real r1E8A#1 = RMul(_t1E85,op1_e3_l_101E7E);
    real op1_e3_l_141E89#1 = RMul(r1E8A,camDist1D9F);
    real camUmax1E8E#1 = RDiv(op1_e3_l_141E89,_t1E87);
    globals.camUmax1D20 = camUmax1E8E;
    real op1_e3_l_31E94#1 = VDot<3>(lightVsp1D75,lightVsp1D75);
    real op1_e3_l_41E97#1 = Sqrt(op1_e3_l_31E94);
    real op1_e3_l_51E9A#1 = RDiv(realLit1DA4,op1_e3_l_41E97);
    real r1EA0#1 = VIndex<3,0>(camU1E0D);
    real r1EA1#3 = TensorIndex<tensor[3],[0]>(lightVsp1D75);
    real r1EA2#1 = RMul(r1EA0,r1EA1);
    real r1EA4#3 = TensorIndex<tensor[3],[1]>(lightVsp1D75);
    real r1EA5#1 = RMul(r1E65,r1EA4);
    real r1EA6#1 = VIndex<3,0>(camN1DA8);
    real r1EA7#3 = TensorIndex<tensor[3],[2]>(lightVsp1D75);
    real r1EA8#1 = RMul(r1EA6,r1EA7);
    real r1EA9#1 = RAdd(r1EA2,r1EA5);
    real r1EAA#1 = RAdd(r1EA9,r1EA8);
    real r1EAB#1 = VIndex<3,1>(camU1E0D);
    real r1EAC#1 = RMul(r1EAB,r1EA1);
    real r1EAE#1 = RMul(r1E67,r1EA4);
    real r1EAF#1 = VIndex<3,1>(camN1DA8);
    real r1EB0#1 = RMul(r1EAF,r1EA7);
    real r1EB1#1 = RAdd(r1EAC,r1EAE);
    real r1EB2#1 = RAdd(r1EB1,r1EB0);
    real r1EB3#1 = VIndex<3,2>(camU1E0D);
    real r1EB4#1 = RMul(r1EB3,r1EA1);
    real r1EB6#1 = RMul(r1E69,r1EA4);
    real r1EB7#1 = VIndex<3,2>(camN1DA8);
    real r1EB8#1 = RMul(r1EB7,r1EA7);
    real r1EB9#1 = RAdd(r1EB4,r1EB6);
    real r1EBA#1 = RAdd(r1EB9,r1EB8);
    tensor[3] op1_e3_l_61E9F#1 = <tensor[3]>[r1EAA,r1EB2,r1EBA];
    tensor[3] light1ED8#1 = VScale<3>(op1_e3_l_51E9A,op1_e3_l_61E9F);
    globals.light1D21 = light1ED8;
    globals._t1D22 = _t1D91;
    globals._tX1D23 = _t1D8F;
    globals.c1D24 = c1D8D;
    globals.I1D27 = I1D93;
    return
## strand
  strand raycast (int ui1EE3#2, int vi1EE4#2)
    state:
      real rayU;
      real rayV;
      real rayN;
      tensor[3] rayVec;
      real transp;
      tensor[3] rgb;
      output tensor[4] rgba;
      output real gray;
      int ui;
      int vi;
    state init
      ENTRY1EEF:  preds = []
        int iresU1EF0#1 = globals.iresU1D0F;
        int iresV1EF2#1 = globals.iresV1D10;
        real camNear1EF4#1 = globals.camNear1D11;
        real camDist1EF6#1 = globals.camDist1D1B;
        tensor[3] camN1EF8#1 = globals.camN1D1C;
        tensor[3] camU1EFA#1 = globals.camU1D1D;
        tensor[3] camV1EFC#1 = globals.camV1D1E;
        real camVmax1EFE#3 = globals.camVmax1D1F;
        real camUmax1F00#2 = globals.camUmax1D20;
        real _t1F02#4 = -0.5e0;
        real _t1F04#1 = IntToReal(ui1EE3);
        real _t1F06#1 = IntToReal(iresU1EF0);
        real _t1F08#2 = 0.5e0;
        real op1_e3_l_61F0A#1 = RSub(_t1F06,_t1F08);
        real op1_e3_l_71F0D#1 = RSub(_t1F04,_t1F02);
        real op1_e3_l_81F10#1 = RSub(op1_e3_l_61F0A,_t1F02);
        real op1_e3_l_91F13#2 = RNeg(camUmax1F00);
        real op1_e3_l_101F16#1 = RDiv(op1_e3_l_71F0D,op1_e3_l_81F10);
        real op1_e3_l_111F19#1 = RSub(camUmax1F00,op1_e3_l_91F13);
        real op1_e3_l_131F1C#1 = RMul(op1_e3_l_101F16,op1_e3_l_111F19);
        real rayU1F1F#2 = RAdd(op1_e3_l_91F13,op1_e3_l_131F1C);
        real _t1F22#1 = IntToReal(vi1EE4);
        real _t1F24#1 = IntToReal(iresV1EF2);
        real op1_e3_l_61F26#1 = RSub(_t1F24,_t1F08);
        real op1_e3_l_71F29#1 = RSub(_t1F22,_t1F02);
        real op1_e3_l_81F2C#1 = RSub(op1_e3_l_61F26,_t1F02);
        real op1_e3_l_91F2F#1 = RNeg(camVmax1EFE);
        real op1_e3_l_101F32#1 = RDiv(op1_e3_l_71F29,op1_e3_l_81F2C);
        real op1_e3_l_111F35#1 = RSub(op1_e3_l_91F2F,camVmax1EFE);
        real op1_e3_l_121F38#1 = RMul(op1_e3_l_101F32,op1_e3_l_111F35);
        real rayV1F3B#2 = RAdd(camVmax1EFE,op1_e3_l_121F38);
        tensor[3] op1_e3_l_331F4D#1 = VScale<3>(rayU1F1F,camU1EFA);
        tensor[3] op1_e3_l_341F50#1 = VScale<3>(rayV1F3B,camV1EFC);
        tensor[3] op1_e3_l_351F53#3 = VAdd<3>(op1_e3_l_331F4D,op1_e3_l_341F50);
        real realLit1F57#2 = 0.1e1;
        real r1F58#3 = RDiv(realLit1F57,camDist1EF6);
        real r1F59#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_351F53);
        real r1F5A#1 = RMul(r1F58,r1F59);
        real r1F5B#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_351F53);
        real r1F5C#1 = RMul(r1F58,r1F5B);
        real r1F5D#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_351F53);
        real r1F5E#1 = RMul(r1F58,r1F5D);
        tensor[3] op1_e3_l_361F56#1 = <tensor[3]>[r1F5A,r1F5C,r1F5E];
        tensor[3] rayVec1F69#1 = VAdd<3>(camN1EF8,op1_e3_l_361F56);
        real _t1F6E#8 = 0.e0;
        tensor[3] rgb1F70#1 = <tensor[3]>[_t1F6E,_t1F6E,_t1F6E];
        tensor[4] rgba1F72#1 = <tensor[4]>[_t1F6E,_t1F6E,_t1F6E,_t1F6E];
        self.rayU = rayU1F1F;
        self.rayV = rayV1F3B;
        self.rayN = camNear1EF4;
        self.rayVec = rayVec1F69;
        self.transp = realLit1F57;
        self.rgb = rgb1F70;
        self.rgba = rgba1F72;
        self.gray = _t1F6E;
        self.ui = ui1EE3;
        self.vi = vi1EE4;
        return
    end state init
    method update
        ENTRY1F7F:  preds = []
          image(IMAGE1D<double[3]>) I1F80#17 = globals.I1D27;
          real isoval1F82#1 = globals.isoval1D09;
          femData:Mesh _t1F84#17 = globals._t1D22;
          femData:Space _t1F86#10 = globals._tX1D23;
          femData:FemFunc c1F88#10 = globals.c1D24;
          femData:Mesh a1F8E#1 = globals.a1D06;
          real thick1F90#1 = globals.thick1D0A;
          tensor[3] camEye1F92#1 = globals.camEye1D0B;
          real camNear1F94#2 = globals.camNear1D11;
          real camFar1F96#2 = globals.camFar1D12;
          real refStep1F98#1 = globals.refStep1D13;
          real rayStep1F9A#2 = globals.rayStep1D14;
          real phongKa1F9C#1 = globals.phongKa1D16;
          real phongKd1F9E#1 = globals.phongKd1D17;
          bool debug1FA0#1 = globals.debug1D18;
          int su1FA2#1 = globals.su1D19;
          int sv1FA4#1 = globals.sv1D1A;
          tensor[3] light1FA6#1 = globals.light1D21;
          real rayN1FA8#4 = self.rayN;
          tensor[3] rayVec1FAA#3 = self.rayVec;
          real transp1FAC#10 = self.transp;
          tensor[3] rgb1FAE#9 = self.rgb;
          int ui1FB0#1 = self.ui;
          int vi1FB2#1 = self.vi;
          if debug1FA0 then goto ASSIGN1FB6 else goto JOIN1FC0
        ASSIGN1FB6:  preds = [COND1FB4]
          bool _t1FB5#1 = NEQ<int>(ui1FB0,su1FA2);
          if _t1FB5 then goto ASSIGN1FB9 else goto ASSIGN37E8
        ASSIGN1FB9:  preds = [COND1FB7]
          bool _t1FB8#1 = true;
          goto JOIN1FBC
        JOIN1FBC:  preds = [ASSIGN1FB9,ASSIGN37E8]
          bool _t1FBA#1 = phi(_t1FB8,_t1FBB)
          if _t1FBA then goto STABILIZE1FBE else goto JOIN1FBF
        STABILIZE1FBE:  preds = [COND1FBD]
          stabilize
          goto JOIN1FBF
        JOIN1FBF:  preds = [*STABILIZE1FBE,COND1FBD]
          goto JOIN1FC0
        JOIN1FC0:  preds = [JOIN1FBF,COND1FB4]
          tensor[3] op1_e3_l_31FC1#1 = VScale<3>(rayN1FA8,rayVec1FAA);
          tensor[3] x1FC4#6 = VAdd<3>(camEye1F92,op1_e3_l_31FC1);
          real _t1FC7#61 = 0.e0;
          real _t1FC9#2 = VIndex<3,0>(x1FC4);
          bool _t1FCB#1 = LT<real>(_t1FC7,_t1FC9);
          if _t1FCB then goto ASSIGN1FCF else goto JOIN3798
        ASSIGN1FCF:  preds = [COND1FCD]
          real _t1FCE#45 = 0.1e1;
          bool _t1FD0#1 = LT<real>(_t1FC9,_t1FCE);
          if _t1FD0 then goto ASSIGN1FD4 else goto JOIN3795
        ASSIGN1FD4:  preds = [COND1FD2]
          real _t1FD3#2 = VIndex<3,1>(x1FC4);
          bool _t1FD5#1 = LT<real>(_t1FC7,_t1FD3);
          if _t1FD5 then goto ASSIGN1FD9 else goto JOIN3792
        ASSIGN1FD9:  preds = [COND1FD7]
          bool _t1FD8#1 = LT<real>(_t1FD3,_t1FCE);
          if _t1FD8 then goto ASSIGN1FDC else goto JOIN378F
        ASSIGN1FDC:  preds = [COND1FDA]
          real _t1FDB#2 = VIndex<3,2>(x1FC4);
          bool _t1FDD#1 = LT<real>(_t1FC7,_t1FDB);
          if _t1FDD then goto ASSIGN1FE1 else goto JOIN378C
        ASSIGN1FE1:  preds = [COND1FDF]
          bool _t1FE0#1 = LT<real>(_t1FDB,_t1FCE);
          if _t1FE0 then goto ASSIGN2E82 else goto JOIN3789
        ASSIGN2E82:  preds = [COND1FE2]
          femData:MeshPos p1FE3#1 = findPos1FE4 (a1F8E,x1FC4);
          bool _t2E83#1 = ExtractFemItem<bool,Valid(MeshPos)>(p1FE3);
          if _t2E83 then goto ASSIGN2E87 else goto ASSIGN37E3
        ASSIGN2E87:  preds = [COND2E85]
          real _t2E86#1 = 0.13e1;
          femData:MeshPos callFindPos2E88#2 = findPos1FE4 (_t1F84,x1FC4);
          int intPos2E8A#2 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos2E88);
          tensor[3] refPos2E8C#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos2E88);
          int ilit2E8F#1 = 10;
          int mulRes2E90#10 = IMul(intPos2E8A,ilit2E8F);
          int idx2E93#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,mulRes2E90);
          int ilit2E94#22 = 1;
          int addRes2E95#1 = IAdd(mulRes2E90,ilit2E94);
          int idx2E96#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E95);
          int ilit2E97#10 = 2;
          int addRes2E98#1 = IAdd(mulRes2E90,ilit2E97);
          int idx2E99#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E98);
          int ilit2E9A#10 = 3;
          int addRes2E9B#1 = IAdd(mulRes2E90,ilit2E9A);
          int idx2E9C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9B);
          int ilit2E9D#2 = 4;
          int addRes2E9E#1 = IAdd(mulRes2E90,ilit2E9D);
          int idx2E9F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2E9E);
          int ilit2EA0#1 = 5;
          int addRes2EA1#1 = IAdd(mulRes2E90,ilit2EA0);
          int idx2EA2#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA1);
          int ilit2EA3#1 = 6;
          int addRes2EA4#1 = IAdd(mulRes2E90,ilit2EA3);
          int idx2EA5#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA4);
          int ilit2EA6#1 = 7;
          int addRes2EA7#1 = IAdd(mulRes2E90,ilit2EA6);
          int idx2EA8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EA7);
          int ilit2EA9#1 = 8;
          int addRes2EAA#1 = IAdd(mulRes2E90,ilit2EA9);
          int idx2EAB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAA);
          int ilit2EAC#1 = 9;
          int addRes2EAD#1 = IAdd(mulRes2E90,ilit2EAC);
          int idx2EAE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t1F86,addRes2EAD);
          int mulRes2ED6#1 = IMul(ilit2E94,idx2E93);
          int mulRes2ED8#1 = IMul(ilit2E94,idx2E96);
          int mulRes2EDB#1 = IMul(ilit2E94,idx2E99);
          int mulRes2EDE#1 = IMul(ilit2E94,idx2E9C);
          int mulRes2EE1#1 = IMul(ilit2E94,idx2E9F);
          int mulRes2EE4#1 = IMul(ilit2E94,idx2EA2);
          int mulRes2EE7#1 = IMul(ilit2E94,idx2EA5);
          int mulRes2EEA#1 = IMul(ilit2E94,idx2EA8);
          int mulRes2EED#1 = IMul(ilit2E94,idx2EAB);
          int mulRes2EF0#1 = IMul(ilit2E94,idx2EAE);
          real dof2EF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED6);
          real dof2EF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2ED8);
          real dof2EF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDB);
          real dof2EF4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EDE);
          real dof2EF5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE1);
          real dof2EF6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE4);
          real dof2EF7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EE7);
          real dof2EF8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EEA);
          real dof2EF9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EED);
          real dof2EFA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(c1F88,mulRes2EF0);
          tensor[10] dofs2EFB#4 = <tensor[10]>[dof2EF1,dof2EF2,dof2EF3,dof2EF4,dof2EF5,dof2EF6,dof2EF7,dof2EF8,dof2EF9,dof2EFA];
          real varAcc2F27#5 = VIndex<3,0>(refPos2E8C);
          real varAcc2F28#4 = VIndex<3,1>(refPos2E8C);
          real varAcc2F29#4 = VIndex<3,2>(refPos2E8C);
          real coeff2F2A#4 = 0.2e1;
          real prod22F2C#1 = RMul(varAcc2F27,varAcc2F27);
          real prod2F2E#3 = RMul(_t1FCE,_t1FCE);
          real prod2F2F#2 = RMul(prod22F2C,prod2F2E);
          real coeff2F30#7 = 0.4e1;
          real prod2F32#2 = RMul(varAcc2F28,_t1FCE);
          real prod2F33#2 = RMul(varAcc2F27,prod2F32);
          real prod2F35#2 = RMul(_t1FCE,varAcc2F29);
          real prod2F36#2 = RMul(varAcc2F27,prod2F35);
          real coeff2F37#4 = -0.3e1;
          real prod2F38#5 = RMul(varAcc2F27,prod2F2E);
          real prod22F39#1 = RMul(varAcc2F28,varAcc2F28);
          real prod2F3A#1 = RMul(prod22F39,_t1FCE);
          real prod2F3B#2 = RMul(_t1FCE,prod2F3A);
          real prod2F3C#1 = RMul(varAcc2F28,varAcc2F29);
          real prod2F3D#2 = RMul(_t1FCE,prod2F3C);
          real prod2F3E#5 = RMul(_t1FCE,prod2F32);
          real prod22F3F#1 = RMul(varAcc2F29,varAcc2F29);
          real prod2F40#1 = RMul(_t1FCE,prod22F3F);
          real prod2F41#2 = RMul(_t1FCE,prod2F40);
          real prod2F42#5 = RMul(_t1FCE,prod2F35);
          real prod2F43#4 = RMul(_t1FCE,prod2F2E);
          real mult2F44#10 = RMul(_t1FCE,prod2F43);
          real mult2F45#1 = RMul(coeff2F37,prod2F42);
          real mult2F46#2 = RMul(coeff2F2A,prod2F41);
          real mult2F47#1 = RMul(coeff2F37,prod2F3E);
          real mult2F48#2 = RMul(coeff2F30,prod2F3D);
          real mult2F49#2 = RMul(coeff2F2A,prod2F3B);
          real mult2F4A#1 = RMul(coeff2F37,prod2F38);
          real mult2F4B#2 = RMul(coeff2F30,prod2F36);
          real mult2F4C#2 = RMul(coeff2F30,prod2F33);
          real mult2F4D#2 = RMul(coeff2F2A,prod2F2F);
          real sum2F4E#1 = RAdd(mult2F4C,mult2F4D);
          real sum2F4F#1 = RAdd(mult2F4B,sum2F4E);
          real sum2F50#1 = RAdd(mult2F4A,sum2F4F);
          real sum2F51#1 = RAdd(mult2F49,sum2F50);
          real sum2F52#1 = RAdd(mult2F48,sum2F51);
          real sum2F53#1 = RAdd(mult2F47,sum2F52);
          real sum2F54#1 = RAdd(mult2F46,sum2F53);
          real sum2F55#1 = RAdd(mult2F45,sum2F54);
          real sum2F56#1 = RAdd(mult2F44,sum2F55);
          real coeff2F58#23 = -0.1e1;
          real mult2F59#1 = RMul(coeff2F58,prod2F38);
          real sum2F5A#1 = RAdd(mult2F59,mult2F4D);
          real mult2F5C#1 = RMul(coeff2F58,prod2F3E);
          real sum2F5D#1 = RAdd(mult2F5C,mult2F49);
          real mult2F5F#1 = RMul(coeff2F58,prod2F42);
          real sum2F60#1 = RAdd(mult2F5F,mult2F46);
          real coeff2F62#9 = -0.4e1;
          real mult2F63#5 = RMul(coeff2F30,prod2F42);
          real mult2F64#1 = RMul(coeff2F62,prod2F41);
          real mult2F65#2 = RMul(coeff2F62,prod2F3D);
          real mult2F66#2 = RMul(coeff2F62,prod2F36);
          real sum2F67#1 = RAdd(mult2F65,mult2F66);
          real sum2F68#1 = RAdd(mult2F64,sum2F67);
          real sum2F69#1 = RAdd(mult2F63,sum2F68);
          real mult2F6B#5 = RMul(coeff2F30,prod2F3E);
          real mult2F6C#1 = RMul(coeff2F62,prod2F3B);
          real mult2F6D#2 = RMul(coeff2F62,prod2F33);
          real sum2F6E#1 = RAdd(mult2F6C,mult2F6D);
          real sum2F6F#1 = RAdd(mult2F65,sum2F6E);
          real sum2F70#1 = RAdd(mult2F6B,sum2F6F);
          real mult2F72#5 = RMul(coeff2F30,prod2F38);
          real mult2F73#1 = RMul(coeff2F62,prod2F2F);
          real sum2F74#1 = RAdd(mult2F6D,mult2F73);
          real sum2F75#1 = RAdd(mult2F66,sum2F74);
          real sum2F76#1 = RAdd(mult2F72,sum2F75);
          tensor[10] intermediateCons2F78#1 = <tensor[10]>[sum2F56,sum2F5A,sum2F5D,sum2F60,mult2F48,mult2F4B,mult2F4C,sum2F69,sum2F70,sum2F76];
          real compositionl2FCC#2 = VDot<10>(dofs2EFB,intermediateCons2F78);
          real op1_e3_l_232FCF#1 = RSub(compositionl2FCC,isoval1F82);
          real mult2FE3#1 = RMul(coeff2F37,prod2F43);
          real sum2FE7#1 = RAdd(mult2F6B,mult2F72);
          real sum2FE8#1 = RAdd(mult2F63,sum2FE7);
          real sum2FE9#3 = RAdd(mult2FE3,sum2FE8);
          real mult2FEC#6 = RMul(coeff2F58,prod2F43);
          real sum2FED#1 = RAdd(mult2FEC,mult2F72);
          real basisEval2FF1#4 = RMul(coeff2F62,prod2F42);
          real basisEval2FF2#4 = RMul(coeff2F62,prod2F3E);
          real coeff2FF3#3 = -0.8e1;
          real mult2FF4#3 = RMul(coeff2F30,prod2F43);
          real mult2FF5#1 = RMul(coeff2FF3,prod2F38);
          real sum2FF6#1 = RAdd(basisEval2FF2,mult2FF5);
          real sum2FF7#1 = RAdd(basisEval2FF1,sum2FF6);
          real sum2FF8#1 = RAdd(mult2FF4,sum2FF7);
          real sum2FFB#1 = RAdd(mult2FEC,mult2F6B);
          real mult2FFD#1 = RMul(coeff2FF3,prod2F3E);
          real mult2FFE#4 = RMul(coeff2F62,prod2F38);
          real sum2FFF#1 = RAdd(mult2FFD,mult2FFE);
          real sum3000#1 = RAdd(basisEval2FF1,sum2FFF);
          real sum3001#1 = RAdd(mult2FF4,sum3000);
          real sum3004#1 = RAdd(mult2FEC,mult2F63);
          real mult3006#1 = RMul(coeff2FF3,prod2F42);
          real sum3007#1 = RAdd(basisEval2FF2,mult2FFE);
          real sum3008#1 = RAdd(mult3006,sum3007);
          real sum3009#1 = RAdd(mult2FF4,sum3008);
          tensor[10] intermediateCons300B#1 = <tensor[10]>[sum2FE9,sum2FED,_t1FC7,_t1FC7,_t1FC7,mult2F63,mult2F6B,basisEval2FF1,basisEval2FF2,sum2FF8];
          tensor[10] intermediateCons300C#1 = <tensor[10]>[sum2FE9,_t1FC7,sum2FFB,_t1FC7,mult2F63,_t1FC7,mult2F72,basisEval2FF1,sum3001,mult2FFE];
          tensor[10] intermediateCons300D#1 = <tensor[10]>[sum2FE9,_t1FC7,_t1FC7,sum3004,mult2F6B,mult2F72,_t1FC7,sum3009,basisEval2FF2,mult2FFE];
          real vdot304E#3 = VDot<10>(dofs2EFB,intermediateCons300B);
          real vdot3050#3 = VDot<10>(dofs2EFB,intermediateCons300C);
          real vdot3052#3 = VDot<10>(dofs2EFB,intermediateCons300D);
          int mulRes305D#4 = IMul(intPos2E8A,ilit2E9D);
          int idx3060#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,mulRes305D);
          int addRes3062#1 = IAdd(mulRes305D,ilit2E94);
          int idx3063#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3062);
          int addRes3065#1 = IAdd(mulRes305D,ilit2E97);
          int idx3066#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3065);
          int addRes3068#1 = IAdd(mulRes305D,ilit2E9A);
          int idx3069#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t1F84,addRes3068);
          int mulRes307F#3 = IMul(ilit2E9A,idx3060);
          int addRes3082#1 = IAdd(ilit2E94,mulRes307F);
          int addRes3084#1 = IAdd(ilit2E97,mulRes307F);
          real dof_load3085#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes307F);
          real dof_load3086#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3082);
          real dof_load3087#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3084);
          int mulRes308A#3 = IMul(ilit2E9A,idx3063);
          int addRes308C#1 = IAdd(ilit2E94,mulRes308A);
          int addRes308D#1 = IAdd(ilit2E97,mulRes308A);
          real dof_load308E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes308A);
          real dof_load308F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308C);
          real dof_load3090#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes308D);
          int mulRes3093#3 = IMul(ilit2E9A,idx3066);
          int addRes3095#1 = IAdd(ilit2E94,mulRes3093);
          int addRes3096#1 = IAdd(ilit2E97,mulRes3093);
          real dof_load3097#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes3093);
          real dof_load3098#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3095);
          real dof_load3099#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes3096);
          int mulRes309C#3 = IMul(ilit2E9A,idx3069);
          int addRes309E#1 = IAdd(ilit2E94,mulRes309C);
          int addRes309F#1 = IAdd(ilit2E97,mulRes309C);
          real dof_load30A0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,mulRes309C);
          real dof_load30A1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309E);
          real dof_load30A2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t1F84,addRes309F);
          real r30F0#2 = RMul(dof_load3085,mult2FEC);
          real r30F3#1 = RMul(dof_load308E,mult2F44);
          real r30F6#2 = RMul(dof_load3097,_t1FC7);
          real r30F9#2 = RMul(dof_load30A0,_t1FC7);
          real r30FA#1 = RAdd(r30F0,r30F3);
          real r30FB#1 = RAdd(r30FA,r30F6);
          real r30FC#13 = RAdd(r30FB,r30F9);
          real r3100#1 = RMul(dof_load308E,_t1FC7);
          real r3102#1 = RMul(dof_load3097,mult2F44);
          real r3105#2 = RAdd(r30F0,r3100);
          real r3106#1 = RAdd(r3105,r3102);
          real r3107#13 = RAdd(r3106,r30F9);
          real r310F#1 = RMul(dof_load30A0,mult2F44);
          real r3111#1 = RAdd(r3105,r30F6);
          real r3112#12 = RAdd(r3111,r310F);
          real r3115#2 = RMul(dof_load3086,mult2FEC);
          real r3117#1 = RMul(dof_load308F,mult2F44);
          real r3119#2 = RMul(dof_load3098,_t1FC7);
          real r311B#2 = RMul(dof_load30A1,_t1FC7);
          real r311C#1 = RAdd(r3115,r3117);
          real r311D#1 = RAdd(r311C,r3119);
          real r311E#13 = RAdd(r311D,r311B);
          real r3120#1 = RMul(dof_load308F,_t1FC7);
          real r3121#1 = RMul(dof_load3098,mult2F44);
          real r3123#2 = RAdd(r3115,r3120);
          real r3124#1 = RAdd(r3123,r3121);
          real r3125#13 = RAdd(r3124,r311B);
          real r3129#1 = RMul(dof_load30A1,mult2F44);
          real r312B#1 = RAdd(r3123,r3119);
          real r312C#12 = RAdd(r312B,r3129);
          real r312F#2 = RMul(dof_load3087,mult2FEC);
          real r3131#1 = RMul(dof_load3090,mult2F44);
          real r3133#2 = RMul(dof_load3099,_t1FC7);
          real r3135#2 = RMul(dof_load30A2,_t1FC7);
          real r3136#1 = RAdd(r312F,r3131);
          real r3137#1 = RAdd(r3136,r3133);
          real r3138#13 = RAdd(r3137,r3135);
          real r313A#1 = RMul(dof_load3090,_t1FC7);
          real r313B#1 = RMul(dof_load3099,mult2F44);
          real r313D#2 = RAdd(r312F,r313A);
          real r313E#1 = RAdd(r313D,r313B);
          real r313F#13 = RAdd(r313E,r3135);
          real r3143#1 = RMul(dof_load30A2,mult2F44);
          real r3145#1 = RAdd(r313D,r3133);
          real r3146#12 = RAdd(r3145,r3143);
          real r31A7#3 = RMul(_t1FC7,r30FC);
          real r31A9#3 = RMul(_t1FC7,r311E);
          real r31AB#5 = RMul(_t1FC7,r3138);
          real r31AC#3 = RAdd(r31A7,r31A9);
          real r31AD#9 = RAdd(r31AC,r31AB);
          real r31AF#3 = RMul(_t1FC7,r3107);
          real r31B1#3 = RMul(_t1FC7,r3125);
          real r31B3#5 = RMul(_t1FC7,r313F);
          real r31B4#3 = RAdd(r31AF,r31B1);
          real r31B5#9 = RAdd(r31B4,r31B3);
          real r31B7#3 = RMul(_t1FC7,r3112);
          real r31B9#3 = RMul(_t1FC7,r312C);
          real r31BB#5 = RMul(_t1FC7,r3146);
          real r31BC#3 = RAdd(r31B7,r31B9);
          real r31BD#12 = RAdd(r31BC,r31BB);
          real r31C0#1 = RMul(coeff2F58,r3138);
          real r31C1#3 = RAdd(r31AC,r31C0);
          real r31C2#1 = RMul(coeff2F58,r313F);
          real r31C3#3 = RAdd(r31B4,r31C2);
          real r31C4#1 = RMul(coeff2F58,r3146);
          real r31C5#4 = RAdd(r31BC,r31C4);
          real r31C8#1 = RMul(_t1FCE,r311E);
          real r31C9#1 = RAdd(r31A7,r31C8);
          real r31CA#3 = RAdd(r31C9,r31AB);
          real r31CB#1 = RMul(_t1FCE,r3125);
          real r31CC#1 = RAdd(r31AF,r31CB);
          real r31CD#3 = RAdd(r31CC,r31B3);
          real r31CE#1 = RMul(_t1FCE,r312C);
          real r31CF#1 = RAdd(r31B7,r31CE);
          real r31D0#4 = RAdd(r31CF,r31BB);
          real r31D3#1 = RMul(_t1FCE,r3138);
          real r31D4#3 = RAdd(r31AC,r31D3);
          real r31D5#1 = RMul(_t1FCE,r313F);
          real r31D6#3 = RAdd(r31B4,r31D5);
          real r31D7#1 = RMul(_t1FCE,r3146);
          real r31D8#4 = RAdd(r31BC,r31D7);
          real r31DA#1 = RMul(coeff2F58,r30FC);
          real r31DB#1 = RAdd(r31DA,r31A9);
          real r31DC#3 = RAdd(r31DB,r31AB);
          real r31DD#1 = RMul(coeff2F58,r3107);
          real r31DE#1 = RAdd(r31DD,r31B1);
          real r31DF#3 = RAdd(r31DE,r31B3);
          real r31E0#1 = RMul(coeff2F58,r3112);
          real r31E1#1 = RAdd(r31E0,r31B9);
          real r31E2#4 = RAdd(r31E1,r31BB);
          real r31E5#1 = RMul(coeff2F58,r311E);
          real r31E6#1 = RAdd(r31A7,r31E5);
          real r31E7#3 = RAdd(r31E6,r31AB);
          real r31E8#1 = RMul(coeff2F58,r3125);
          real r31E9#1 = RAdd(r31AF,r31E8);
          real r31EA#3 = RAdd(r31E9,r31B3);
          real r31EB#1 = RMul(coeff2F58,r312C);
          real r31EC#1 = RAdd(r31B7,r31EB);
          real r31ED#4 = RAdd(r31EC,r31BB);
          real r31EF#1 = RMul(_t1FCE,r30FC);
          real r31F0#1 = RAdd(r31EF,r31A9);
          real r31F1#3 = RAdd(r31F0,r31AB);
          real r31F2#1 = RMul(_t1FCE,r3107);
          real r31F3#1 = RAdd(r31F2,r31B1);
          real r31F4#3 = RAdd(r31F3,r31B3);
          real r31F5#1 = RMul(_t1FCE,r3112);
          real r31F6#1 = RAdd(r31F5,r31B9);
          real r31F7#4 = RAdd(r31F6,r31BB);
          real r3254#1 = RMul(r30FC,r31AD);
          real r3257#1 = RMul(r311E,r31D4);
          real r325A#1 = RMul(r3138,r31E7);
          real r325B#1 = RAdd(r3254,r3257);
          real r325C#1 = RAdd(r325B,r325A);
          real r325E#1 = RMul(r30FC,r31B5);
          real r3260#1 = RMul(r311E,r31D6);
          real r3262#1 = RMul(r3138,r31EA);
          real r3263#1 = RAdd(r325E,r3260);
          real r3264#2 = RAdd(r3263,r3262);
          real r3266#1 = RMul(r30FC,r31BD);
          real r3268#1 = RMul(r311E,r31D8);
          real r326A#1 = RMul(r3138,r31ED);
          real r326B#1 = RAdd(r3266,r3268);
          real r326C#2 = RAdd(r326B,r326A);
          real r326F#1 = RMul(r30FC,r31C1);
          real r3271#1 = RMul(r311E,r31AD);
          real r3273#1 = RMul(r3138,r31F1);
          real r3274#1 = RAdd(r326F,r3271);
          real r3275#1 = RAdd(r3274,r3273);
          real r3277#1 = RMul(r30FC,r31C3);
          real r3279#1 = RMul(r311E,r31B5);
          real r327B#1 = RMul(r3138,r31F4);
          real r327C#1 = RAdd(r3277,r3279);
          real r327D#2 = RAdd(r327C,r327B);
          real r327F#1 = RMul(r30FC,r31C5);
          real r3281#1 = RMul(r311E,r31BD);
          real r3283#1 = RMul(r3138,r31F7);
          real r3284#1 = RAdd(r327F,r3281);
          real r3285#2 = RAdd(r3284,r3283);
          real r3288#1 = RMul(r30FC,r31CA);
          real r328A#1 = RMul(r311E,r31DC);
          real r328C#1 = RMul(r3138,r31AD);
          real r328D#1 = RAdd(r3288,r328A);
          real r328E#1 = RAdd(r328D,r328C);
          real r3290#1 = RMul(r30FC,r31CD);
          real r3292#1 = RMul(r311E,r31DF);
          real r3294#1 = RMul(r3138,r31B5);
          real r3295#1 = RAdd(r3290,r3292);
          real r3296#2 = RAdd(r3295,r3294);
          real r3298#1 = RMul(r30FC,r31D0);
          real r329A#1 = RMul(r311E,r31E2);
          real r329C#1 = RMul(r3138,r31BD);
          real r329D#1 = RAdd(r3298,r329A);
          real r329E#2 = RAdd(r329D,r329C);
          real r32A2#1 = RMul(r3107,r31AD);
          real r32A4#1 = RMul(r3125,r31D4);
          real r32A6#1 = RMul(r313F,r31E7);
          real r32A7#1 = RAdd(r32A2,r32A4);
          real r32A8#2 = RAdd(r32A7,r32A6);
          real r32A9#1 = RMul(r3107,r31B5);
          real r32AA#1 = RMul(r3125,r31D6);
          real r32AB#1 = RMul(r313F,r31EA);
          real r32AC#1 = RAdd(r32A9,r32AA);
          real r32AD#1 = RAdd(r32AC,r32AB);
          real r32AE#1 = RMul(r3107,r31BD);
          real r32AF#1 = RMul(r3125,r31D8);
          real r32B0#1 = RMul(r313F,r31ED);
          real r32B1#1 = RAdd(r32AE,r32AF);
          real r32B2#2 = RAdd(r32B1,r32B0);
          real r32B4#1 = RMul(r3107,r31C1);
          real r32B5#1 = RMul(r3125,r31AD);
          real r32B6#1 = RMul(r313F,r31F1);
          real r32B7#1 = RAdd(r32B4,r32B5);
          real r32B8#2 = RAdd(r32B7,r32B6);
          real r32B9#1 = RMul(r3107,r31C3);
          real r32BA#1 = RMul(r3125,r31B5);
          real r32BB#1 = RMul(r313F,r31F4);
          real r32BC#1 = RAdd(r32B9,r32BA);
          real r32BD#1 = RAdd(r32BC,r32BB);
          real r32BE#1 = RMul(r3107,r31C5);
          real r32BF#1 = RMul(r3125,r31BD);
          real r32C0#1 = RMul(r313F,r31F7);
          real r32C1#1 = RAdd(r32BE,r32BF);
          real r32C2#2 = RAdd(r32C1,r32C0);
          real r32C4#1 = RMul(r3107,r31CA);
          real r32C5#1 = RMul(r3125,r31DC);
          real r32C6#1 = RMul(r313F,r31AD);
          real r32C7#1 = RAdd(r32C4,r32C5);
          real r32C8#2 = RAdd(r32C7,r32C6);
          real r32C9#1 = RMul(r3107,r31CD);
          real r32CA#1 = RMul(r3125,r31DF);
          real r32CB#1 = RMul(r313F,r31B5);
          real r32CC#1 = RAdd(r32C9,r32CA);
          real r32CD#1 = RAdd(r32CC,r32CB);
          real r32CE#1 = RMul(r3107,r31D0);
          real r32CF#1 = RMul(r3125,r31E2);
          real r32D0#1 = RMul(r313F,r31BD);
          real r32D1#1 = RAdd(r32CE,r32CF);
          real r32D2#2 = RAdd(r32D1,r32D0);
          real r32D6#1 = RMul(r3112,r31AD);
          real r32D8#1 = RMul(r312C,r31D4);
          real r32DA#1 = RMul(r3146,r31E7);
          real r32DB#1 = RAdd(r32D6,r32D8);
          real r32DC#2 = RAdd(r32DB,r32DA);
          real r32DD#1 = RMul(r3112,r31B5);
          real r32DE#1 = RMul(r312C,r31D6);
          real r32DF#1 = RMul(r3146,r31EA);
          real r32E0#1 = RAdd(r32DD,r32DE);
          real r32E1#2 = RAdd(r32E0,r32DF);
          real r32E2#1 = RMul(r3112,r31BD);
          real r32E3#1 = RMul(r312C,r31D8);
          real r32E4#1 = RMul(r3146,r31ED);
          real r32E5#1 = RAdd(r32E2,r32E3);
          real r32E6#1 = RAdd(r32E5,r32E4);
          real r32E8#1 = RMul(r3112,r31C1);
          real r32E9#1 = RMul(r312C,r31AD);
          real r32EA#1 = RMul(r3146,r31F1);
          real r32EB#1 = RAdd(r32E8,r32E9);
          real r32EC#2 = RAdd(r32EB,r32EA);
          real r32ED#1 = RMul(r3112,r31C3);
          real r32EE#1 = RMul(r312C,r31B5);
          real r32EF#1 = RMul(r3146,r31F4);
          real r32F0#1 = RAdd(r32ED,r32EE);
          real r32F1#2 = RAdd(r32F0,r32EF);
          real r32F2#1 = RMul(r3112,r31C5);
          real r32F3#1 = RMul(r312C,r31BD);
          real r32F4#1 = RMul(r3146,r31F7);
          real r32F5#1 = RAdd(r32F2,r32F3);
          real r32F6#1 = RAdd(r32F5,r32F4);
          real r32F8#1 = RMul(r3112,r31CA);
          real r32F9#1 = RMul(r312C,r31DC);
          real r32FA#1 = RMul(r3146,r31AD);
          real r32FB#1 = RAdd(r32F8,r32F9);
          real r32FC#2 = RAdd(r32FB,r32FA);
          real r32FD#1 = RMul(r3112,r31CD);
          real r32FE#1 = RMul(r312C,r31DF);
          real r32FF#1 = RMul(r3146,r31B5);
          real r3300#1 = RAdd(r32FD,r32FE);
          real r3301#2 = RAdd(r3300,r32FF);
          real r3302#1 = RMul(r3112,r31D0);
          real r3303#1 = RMul(r312C,r31E2);
          real r3304#1 = RMul(r3146,r31BD);
          real r3305#1 = RAdd(r3302,r3303);
          real r3306#1 = RAdd(r3305,r3304);
          tensor[3] probe_l_2933C2#1 = <tensor[3]>[r30FC,r311E,r3138];
          tensor[3] probe_l_30340F#3 = <tensor[3]>[r3107,r3125,r313F];
          tensor[3] tensor34BA#1 = <tensor[3]>[r31BD,r31D8,r31ED];
          tensor[3] tensor34C0#1 = <tensor[3]>[r31C5,r31BD,r31F7];
          tensor[3] tensor34C7#1 = <tensor[3]>[r31D0,r31E2,r31BD];
          real vdot34EA#1 = VDot<3>(probe_l_30340F,tensor34BA);
          real vdot34EC#1 = VDot<3>(probe_l_30340F,tensor34C0);
          real vdot34EE#1 = VDot<3>(probe_l_30340F,tensor34C7);
          tensor[3] op1_e3_l_3334E8#1 = <tensor[3]>[vdot34EA,vdot34EC,vdot34EE];
          real op1_e3_l_3434F7#1 = VDot<3>(probe_l_2933C2,op1_e3_l_3334E8);
          real r34FD#2 = RMul(_t1FC7,r325C);
          real r34FF#1 = RMul(_t1FC7,r3264);
          real r3501#2 = RMul(_t1FC7,r326C);
          real r3503#2 = RMul(_t1FC7,r32A8);
          real r3505#3 = RMul(_t1FC7,r32AD);
          real r3508#1 = RMul(_t1FCE,r32B2);
          real r350A#2 = RMul(_t1FC7,r32DC);
          real r350D#1 = RMul(coeff2F58,r32E1);
          real r350F#3 = RMul(_t1FC7,r32E6);
          real r3510#2 = RAdd(r34FD,r34FF);
          real r3511#1 = RAdd(r3510,r3501);
          real r3512#1 = RAdd(r3511,r3503);
          real r3513#1 = RAdd(r3512,r3505);
          real r3514#1 = RAdd(r3513,r3508);
          real r3515#1 = RAdd(r3514,r350A);
          real r3516#1 = RAdd(r3515,r350D);
          real r3517#1 = RAdd(r3516,r350F);
          real r3519#2 = RMul(_t1FC7,r3275);
          real r351B#1 = RMul(_t1FC7,r327D);
          real r351D#2 = RMul(_t1FC7,r3285);
          real r351F#2 = RMul(_t1FC7,r32B8);
          real r3521#3 = RMul(_t1FC7,r32BD);
          real r3523#1 = RMul(_t1FCE,r32C2);
          real r3525#2 = RMul(_t1FC7,r32EC);
          real r3527#1 = RMul(coeff2F58,r32F1);
          real r3529#3 = RMul(_t1FC7,r32F6);
          real r352A#2 = RAdd(r3519,r351B);
          real r352B#1 = RAdd(r352A,r351D);
          real r352C#1 = RAdd(r352B,r351F);
          real r352D#1 = RAdd(r352C,r3521);
          real r352E#1 = RAdd(r352D,r3523);
          real r352F#1 = RAdd(r352E,r3525);
          real r3530#1 = RAdd(r352F,r3527);
          real r3531#1 = RAdd(r3530,r3529);
          real r3533#2 = RMul(_t1FC7,r328E);
          real r3535#1 = RMul(_t1FC7,r3296);
          real r3537#2 = RMul(_t1FC7,r329E);
          real r3539#2 = RMul(_t1FC7,r32C8);
          real r353B#3 = RMul(_t1FC7,r32CD);
          real r353D#1 = RMul(_t1FCE,r32D2);
          real r353F#2 = RMul(_t1FC7,r32FC);
          real r3541#1 = RMul(coeff2F58,r3301);
          real r3543#3 = RMul(_t1FC7,r3306);
          real r3544#2 = RAdd(r3533,r3535);
          real r3545#1 = RAdd(r3544,r3537);
          real r3546#1 = RAdd(r3545,r3539);
          real r3547#1 = RAdd(r3546,r353B);
          real r3548#1 = RAdd(r3547,r353D);
          real r3549#1 = RAdd(r3548,r353F);
          real r354A#1 = RAdd(r3549,r3541);
          real r354B#1 = RAdd(r354A,r3543);
          real r354D#1 = RMul(coeff2F58,r326C);
          real r354E#2 = RMul(_t1FC7,r32B2);
          real r354F#1 = RMul(_t1FCE,r32DC);
          real r3550#2 = RMul(_t1FC7,r32E1);
          real r3551#1 = RAdd(r3510,r354D);
          real r3552#1 = RAdd(r3551,r3503);
          real r3553#1 = RAdd(r3552,r3505);
          real r3554#1 = RAdd(r3553,r354E);
          real r3555#1 = RAdd(r3554,r354F);
          real r3556#1 = RAdd(r3555,r3550);
          real r3557#1 = RAdd(r3556,r350F);
          real r3558#1 = RMul(coeff2F58,r3285);
          real r3559#2 = RMul(_t1FC7,r32C2);
          real r355A#1 = RMul(_t1FCE,r32EC);
          real r355B#2 = RMul(_t1FC7,r32F1);
          real r355C#1 = RAdd(r352A,r3558);
          real r355D#1 = RAdd(r355C,r351F);
          real r355E#1 = RAdd(r355D,r3521);
          real r355F#1 = RAdd(r355E,r3559);
          real r3560#1 = RAdd(r355F,r355A);
          real r3561#1 = RAdd(r3560,r355B);
          real r3562#1 = RAdd(r3561,r3529);
          real r3563#1 = RMul(coeff2F58,r329E);
          real r3564#2 = RMul(_t1FC7,r32D2);
          real r3565#1 = RMul(_t1FCE,r32FC);
          real r3566#2 = RMul(_t1FC7,r3301);
          real r3567#1 = RAdd(r3544,r3563);
          real r3568#1 = RAdd(r3567,r3539);
          real r3569#1 = RAdd(r3568,r353B);
          real r356A#1 = RAdd(r3569,r3564);
          real r356B#1 = RAdd(r356A,r3565);
          real r356C#1 = RAdd(r356B,r3566);
          real r356D#1 = RAdd(r356C,r3543);
          real r356F#1 = RMul(_t1FCE,r3264);
          real r3570#1 = RMul(coeff2F58,r32A8);
          real r3571#1 = RAdd(r34FD,r356F);
          real r3572#1 = RAdd(r3571,r3501);
          real r3573#1 = RAdd(r3572,r3570);
          real r3574#1 = RAdd(r3573,r3505);
          real r3575#1 = RAdd(r3574,r354E);
          real r3576#1 = RAdd(r3575,r350A);
          real r3577#1 = RAdd(r3576,r3550);
          real r3578#1 = RAdd(r3577,r350F);
          real r3579#1 = RMul(_t1FCE,r327D);
          real r357A#1 = RMul(coeff2F58,r32B8);
          real r357B#1 = RAdd(r3519,r3579);
          real r357C#1 = RAdd(r357B,r351D);
          real r357D#1 = RAdd(r357C,r357A);
          real r357E#1 = RAdd(r357D,r3521);
          real r357F#1 = RAdd(r357E,r3559);
          real r3580#1 = RAdd(r357F,r3525);
          real r3581#1 = RAdd(r3580,r355B);
          real r3582#1 = RAdd(r3581,r3529);
          real r3583#1 = RMul(_t1FCE,r3296);
          real r3584#1 = RMul(coeff2F58,r32C8);
          real r3585#1 = RAdd(r3533,r3583);
          real r3586#1 = RAdd(r3585,r3537);
          real r3587#1 = RAdd(r3586,r3584);
          real r3588#1 = RAdd(r3587,r353B);
          real r3589#1 = RAdd(r3588,r3564);
          real r358A#1 = RAdd(r3589,r353F);
          real r358B#1 = RAdd(r358A,r3566);
          real r358C#1 = RAdd(r358B,r3543);
          real op1_e3_l_363623#9 = RMul(coeff2F2A,op1_e3_l_3434F7);
          real r362A#1 = RDiv(r3517,op1_e3_l_363623);
          real r362C#1 = RDiv(r3531,op1_e3_l_363623);
          real r362E#1 = RDiv(r354B,op1_e3_l_363623);
          real r3631#1 = RDiv(r3557,op1_e3_l_363623);
          real r3633#1 = RDiv(r3562,op1_e3_l_363623);
          real r3635#1 = RDiv(r356D,op1_e3_l_363623);
          real r3638#1 = RDiv(r3578,op1_e3_l_363623);
          real r363A#1 = RDiv(r3582,op1_e3_l_363623);
          real r363C#1 = RDiv(r358C,op1_e3_l_363623);
          real r3658#1 = RMul(vdot304E,r362A);
          real r365B#1 = RMul(vdot3050,r3631);
          real r365E#1 = RMul(vdot3052,r3638);
          real r365F#1 = RAdd(r3658,r365B);
          real r3660#1 = RAdd(r365F,r365E);
          real r3662#1 = RMul(vdot304E,r362C);
          real r3664#1 = RMul(vdot3050,r3633);
          real r3666#1 = RMul(vdot3052,r363A);
          real r3667#1 = RAdd(r3662,r3664);
          real r3668#1 = RAdd(r3667,r3666);
          real r366A#1 = RMul(vdot304E,r362E);
          real r366C#1 = RMul(vdot3050,r3635);
          real r366E#1 = RMul(vdot3052,r363C);
          real r366F#1 = RAdd(r366A,r366C);
          real r3670#1 = RAdd(r366F,r366E);
          tensor[3] op1_e3_l_383655#1 = <tensor[3]>[r3660,r3668,r3670];
          tensor[3] op1_e3_l_54368E#3 = VNeg<3>(op1_e3_l_383655);
          real op1_e3_l_563691#1 = VDot<3>(op1_e3_l_54368E,op1_e3_l_54368E);
          real op1_e3_l_573694#2 = Sqrt(op1_e3_l_563691);
          real op1_e3_l_583697#1 = Abs<real>(op1_e3_l_232FCF);
          real op1_e3_l_59369A#1 = RMul(thick1F90,op1_e3_l_573694);
          real op1_e3_l_60369D#1 = RDiv(op1_e3_l_583697,op1_e3_l_59369A);
          real op1_e3_l_6136A0#1 = RSub(_t1FCE,op1_e3_l_60369D);
          real op1_e3_l_6236A3#1 = RMul(_t2E86,op1_e3_l_6136A0);
          real op1_e3_l_6336A6#1 = RClamp(_t1FC7,_t1FCE,op1_e3_l_6236A3);
          real a36A9#2 = RMul(_t1FCE,op1_e3_l_6336A6);
          bool _t36AC#1 = GT<real>(a36A9,_t1FC7);
          if _t36AC then goto ASSIGN3DD7 else goto JOIN3780
        ASSIGN3DD7:  preds = [COND36AE]
          real _t36B5#1 = RSub(_t1FCE,a36A9);
          real op1_e3_l_336B8#1 = VDot<3>(rayVec1FAA,rayVec1FAA);
          real op1_e3_l_436BB#1 = Sqrt(op1_e3_l_336B8);
          real op1_e3_l_536BE#1 = RMul(rayStep1F9A,op1_e3_l_436BB);
          real _t36C1#1 = RDiv(op1_e3_l_536BE,refStep1F98);
          real _t36C4#1 = MathFn<pow>(_t36B5,_t36C1);
          real _t36C6#2 = 0.11e1;
          real _t36C8#1 = 0.7e0;
          real op1_e3_l_6736CA#1 = RDiv(_t1FCE,op1_e3_l_573694);
          real op1_e3_l_6836CF#1 = VDot<3>(op1_e3_l_54368E,light1FA6);
          real _t36D2#1 = RMul(op1_e3_l_6736CA,op1_e3_l_6836CF);
          real shade36D5#1 = Max<real>(_t1FC7,_t36D2);
          real op1_e3_l_1536D9#1 = RSub(rayN1FA8,camNear1F94);
          real op1_e3_l_1636DC#1 = RSub(camFar1F96,camNear1F94);
          real op1_e3_l_1736DF#1 = RDiv(op1_e3_l_1536D9,op1_e3_l_1636DC);
          real op1_e3_l_1836E2#1 = RSub(_t36C8,_t36C6);
          real op1_e3_l_1936E5#1 = RMul(op1_e3_l_1736DF,op1_e3_l_1836E2);
          real op1_e3_l_2036E8#1 = RMul(phongKd1F9E,shade36D5);
          real Mtransform36EB#1 = Transform<IMAGE1D<double[3]>>(I1F80);
          real MxPos36ED#1 = RMul(Mtransform36EB,compositionl2FCC);
          real Ttranslate36F0#1 = Translate<IMAGE1D<double[3]>>(I1F80);
          real imgPos36F2#2 = RAdd(MxPos36ED,Ttranslate36F0);
          real nd36F5#2 = Floor<1>(imgPos36F2);
          real f36F7#2 = RSub(imgPos36F2,nd36F5);
          int n36FA#5 = RealToInt<1>(nd36F5);
          bool isInside36FE#1 = IndexInside<IMAGE1D<double[3]>,2>(n36FA,I1F80);
          if isInside36FE then goto ASSIGN3DE3 else goto ASSIGN3DDB
        ASSIGN3DE3:  preds = [COND3700]
          int offp3705#3 = IMul(ilit2E9A,n36FA);
          real v0_3706#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3705);
          int addRes3708#1 = IAdd(n36FA,ilit2E94);
          int offp3709#3 = IMul(ilit2E9A,addRes3708);
          real v1_370A#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3709);
          int offp370C#1 = IAdd(offp3705,ilit2E94);
          real v0_370D#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370C);
          int offp370E#1 = IAdd(offp3709,ilit2E94);
          real v1_370F#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp370E);
          int offp3712#1 = IAdd(offp3705,ilit2E97);
          real v0_3713#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3712);
          int offp3714#1 = IAdd(offp3709,ilit2E97);
          real v1_3715#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp3714);
          tensor[3,2] voxels3717#1 = <tensor[3,2]>[v0_3706,v1_370A,v0_370D,v1_370F,v0_3713,v1_3715];
          goto JOIN3731
        JOIN3731:  preds = [ASSIGN3DF0,ASSIGN3DF1]
          tensor[3,2] ldvox372F#3 = phi(voxels3717,voxels37C8)
          real idx3734#1 = RSub(f36F7,_t1FCE);
          tensor[2] kernX_3732#1 = <tensor[2]>[f36F7,idx3734];
          tensor[2] a03739#1 = <tensor[2]>[_t1FCE,_t1FCE];
          tensor[2] a1373A#1 = <tensor[2]>[coeff2F58,_t1FCE];
          tensor[2] prod1373F#1 = VMul<2>(kernX_3732,a1373A);
          tensor[2] kevalX_d0_3738#3 = VAdd<2>(a03739,prod1373F);
          tensor[2] projIx3749#1 = ProjectLast<tensor[3,2],[0]>(ldvox372F);
          real vdot374A#1 = VDot<2>(projIx3749,kevalX_d0_3738);
          tensor[2] projIx374B#1 = ProjectLast<tensor[3,2],[1]>(ldvox372F);
          real vdot374C#1 = VDot<2>(projIx374B,kevalX_d0_3738);
          tensor[2] projIx374D#1 = ProjectLast<tensor[3,2],[2]>(ldvox372F);
          real vdot374E#1 = VDot<2>(projIx374D,kevalX_d0_3738);
          real op1_e3_l_223757#2 = RSub(_t1FCE,_t36C4);
          real op1_e3_l_23375A#1 = RAdd(_t36C6,op1_e3_l_1936E5);
          real op1_e3_l_24375D#1 = RAdd(phongKa1F9C,op1_e3_l_2036E8);
          real r3762#1 = RMul(transp1FAC,op1_e3_l_223757);
          real r3763#1 = RMul(r3762,op1_e3_l_23375A);
          real r3764#3 = RMul(r3763,op1_e3_l_24375D);
          real r3765#1 = RMul(r3764,vdot374A);
          real r3767#1 = RMul(r3764,vdot374C);
          real r3769#1 = RMul(r3764,vdot374E);
          tensor[3] op1_e3_l_253760#1 = <tensor[3]>[r3765,r3767,r3769];
          tensor[3] rgb3775#1 = VAdd<3>(rgb1FAE,op1_e3_l_253760);
          real op1_e3_l_53778#1 = RSub(_t1FCE,op1_e3_l_223757);
          real transp377B#1 = RMul(transp1FAC,op1_e3_l_53778);
          goto JOIN3780
        JOIN3780:  preds = [ASSIGN377D,COND36AE]
          tensor[3] rgb377E#1 = phi(rgb3775,rgb1FAE)
          real transp377F#1 = phi(transp377B,transp1FAC)
          string _t3781#1 = "yay!\n";
          Print<[string]>(_t3781);
          goto JOIN3786
        JOIN3786:  preds = [MASSIGN3783,MASSIGN37E7]
          tensor[3] rgb3784#1 = phi(rgb377E,rgb1FAE)
          real transp3785#1 = phi(transp377F,transp1FAC)
          goto JOIN3789
        JOIN3789:  preds = [JOIN3786,COND1FE2]
          tensor[3] rgb3787#1 = phi(rgb3784,rgb1FAE)
          real transp3788#1 = phi(transp3785,transp1FAC)
          goto JOIN378C
        JOIN378C:  preds = [JOIN3789,COND1FDF]
          tensor[3] rgb378A#1 = phi(rgb3787,rgb1FAE)
          real transp378B#1 = phi(transp3788,transp1FAC)
          goto JOIN378F
        JOIN378F:  preds = [JOIN378C,COND1FDA]
          tensor[3] rgb378D#1 = phi(rgb378A,rgb1FAE)
          real transp378E#1 = phi(transp378B,transp1FAC)
          goto JOIN3792
        JOIN3792:  preds = [JOIN378F,COND1FD7]
          tensor[3] rgb3790#1 = phi(rgb378D,rgb1FAE)
          real transp3791#1 = phi(transp378E,transp1FAC)
          goto JOIN3795
        JOIN3795:  preds = [JOIN3792,COND1FD2]
          tensor[3] rgb3793#1 = phi(rgb3790,rgb1FAE)
          real transp3794#1 = phi(transp3791,transp1FAC)
          goto JOIN3798
        JOIN3798:  preds = [JOIN3795,COND1FCD]
          tensor[3] rgb3796#3 = phi(rgb3793,rgb1FAE)
          real transp3797#2 = phi(transp3794,transp1FAC)
          real _t3799#1 = 0.1e-1;
          bool _t379B#1 = LT<real>(transp3797,_t3799);
          if _t379B then goto SAVE379E else goto JOIN37A2
        SAVE379E:  preds = [COND379D]
          self.transp = _t1FC7;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A2
        JOIN37A2:  preds = [*STABILIZE37A0,COND379D]
          real transp37A1#2 = phi(transp3797)
          bool _t37A3#1 = GT<real>(rayN1FA8,camFar1F96);
          if _t37A3 then goto SAVE37A6 else goto JOIN37A9
        SAVE37A6:  preds = [COND37A5]
          self.transp = transp37A1;
          self.rgb = rgb3796;
          stabilize
          goto JOIN37A9
        JOIN37A9:  preds = [*STABILIZE37A8,COND37A5]
          real rayN37AA#1 = RAdd(rayN1FA8,rayStep1F9A);
          self.rayN = rayN37AA;
          self.transp = transp37A1;
          self.rgb = rgb3796;
          active
        ASSIGN3DDB:  preds = [COND3700]
          int ix37B3#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,n36FA);
          int offp37B5#3 = IMul(ilit2E9A,ix37B3);
          real v0_37B6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37B5);
          int addRes37B8#1 = IAdd(n36FA,ilit2E94);
          int ix37B9#1 = ControlIndex<IMAGE1D<double[3]>,clamp,0>(I1F80,addRes37B8);
          int offp37BA#3 = IMul(ilit2E9A,ix37B9);
          real v1_37BB#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BA);
          int offp37BD#1 = IAdd(offp37B5,ilit2E94);
          real v0_37BE#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BD);
          int offp37BF#1 = IAdd(offp37BA,ilit2E94);
          real v1_37C0#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37BF);
          int offp37C3#1 = IAdd(offp37B5,ilit2E97);
          real v0_37C4#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C3);
          int offp37C5#1 = IAdd(offp37BA,ilit2E97);
          real v1_37C6#1 = LoadVoxel<IMAGE1D<double[3]>>(I1F80,offp37C5);
          tensor[3,2] voxels37C8#1 = <tensor[3,2]>[v0_37B6,v1_37BB,v0_37BE,v1_37C0,v0_37C4,v1_37C6];
          goto JOIN3731
        ASSIGN37E3:  preds = [COND2E85]
          string _t37E2#1 = "\n";
          Print<[tensor[3],string]>(x1FC4,_t37E2);
          string _t37E5#1 = "wait what\?\n";
          Print<[string]>(_t37E5);
          goto JOIN3786
        ASSIGN37E8:  preds = [COND1FB7]
          bool _t1FBB#1 = NEQ<int>(vi1FB2,sv1FA4);
          goto JOIN1FBC
    end update
    method stabilize
        ENTRY37E9:  preds = []
          bool debug37EA#1 = globals.debug1D18;
          int su37EC#1 = globals.su1D19;
          int sv37EE#1 = globals.sv1D1A;
          real transp37F0#1 = self.transp;
          tensor[3] rgb37F2#3 = self.rgb;
          tensor[4] rgba37F4#1 = self.rgba;
          int ui37F6#1 = self.ui;
          int vi37F8#1 = self.vi;
          real _t37FA#1 = 0.1e1;
          real a37FC#6 = RSub(_t37FA,transp37F0);
          real _t37FF#1 = 0.e0;
          bool _t3801#1 = GT<real>(a37FC,_t37FF);
          if _t3801 then goto ASSIGN3805 else goto JOIN3816
        ASSIGN3805:  preds = [COND3803]
          real _t3804#1 = VIndex<3,0>(rgb37F2);
          real _t3806#1 = RDiv(_t3804,a37FC);
          real _t3809#1 = VIndex<3,1>(rgb37F2);
          real _t380B#1 = RDiv(_t3809,a37FC);
          real _t380E#1 = VIndex<3,2>(rgb37F2);
          real _t3810#1 = RDiv(_t380E,a37FC);
          tensor[4] rgba3813#1 = <tensor[4]>[_t3806,_t380B,_t3810,a37FC];
          goto JOIN3816
        JOIN3816:  preds = [ASSIGN3814,COND3803]
          tensor[4] rgba3815#2 = phi(rgba3813,rgba37F4)
          bool _t3817#1 = EQ<int>(ui37F6,su37EC);
          if _t3817 then goto ASSIGN381B else goto JOIN3821
        ASSIGN381B:  preds = [COND3819]
          bool _t381A#1 = EQ<int>(vi37F8,sv37EE);
          if _t381A then goto COND381D else goto JOIN3820
        COND381D:  preds = [COND381C]
          if debug37EA then goto MASSIGN381E else goto JOIN381F
        MASSIGN381E:  preds = [COND381D]
          Print<[real,tensor[4]]>(a37FC,rgba3815);
          goto JOIN381F
        JOIN381F:  preds = [MASSIGN381E,COND381D]
          goto JOIN3820
        JOIN3820:  preds = [JOIN381F,COND381C]
          goto JOIN3821
        JOIN3821:  preds = [JOIN3820,COND3819]
          self.rgba = rgba3815;
          return
    end stabilize
  end raycast
## initial strand creation
  GRID(2)
    ENTRY3824:  preds = []
      int iresU3825#1 = globals.iresU1D0F;
      int iresV3827#1 = globals.iresV1D10;
      int _t3829#2 = 0;
      int _t382B#2 = 1;
      int _t382D#1 = ISub(iresV3827,_t382B);
      int[] _t382F#1 = Range(_t3829,_t382D);
    FOREACH3832:  preds = [ASSIGN3830,NEXT383B]
      foreach (vi3831 in _t382F) on exit goto RETURN383C
      int _t3833#1 = ISub(iresU3825,_t382B);
      int[] _t3835#1 = Range(_t3829,_t3833);
    FOREACH3838:  preds = [ASSIGN3836,NEXT383A]
      foreach (ui3837 in _t3835) on exit goto NEXT383B
      new raycast(ui3837,vi3831);
      goto FOREACH3838
    NEXT383B:  preds = [FOREACH3838]
      goto FOREACH3832
    RETURN383C:  preds = [FOREACH3832]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b043B_intermedateGlobal;
input femData(FemFunc) 0c043D_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = PACK(VEC3{4}(0.3e1,-0.3e1,0.3e1));
    globals.camAt = PACK(VEC3{4}(0.5e0,0.5e0,0.5e0));
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_155;
    int l_newtonInt_154;
    int l_cellInt_153;
    vec3{4} v_8;
    int l_numCell_7 = ISub(ExtractFemItem<int,NumCell(Mesh)>(p_mesh_5),1);
    v_8 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    int[] t_10 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_5,p_pos_6);
    int l_cellInt_11 = ExtractFemItem<int,StartCell(Mesh)>(p_mesh_5);
    foreach int i_cellItter_9 in t_10 {
      vec3{4} v_12;
      v_12 = v_8;
      for i_newtonItter_13 = 0 to 2 {
        int l_mulRes_14 = IMul(i_cellItter_9,4);
        int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_14);
        int l_mulRes_16 = IMul(3,t_15);
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_16);
        real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_16));
        real l_dof_load_19 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_16));
        int t_20 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,1));
        int l_mulRes_21 = IMul(3,t_20);
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_21);
        real l_dof_load_23 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_21));
        real l_dof_load_24 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_21));
        int t_25 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,2));
        int l_mulRes_26 = IMul(3,t_25);
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_26);
        real l_dof_load_28 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_26));
        real l_dof_load_29 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_26));
        int t_30 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,3));
        int l_mulRes_31 = IMul(3,t_30);
        real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_31);
        real l_dof_load_33 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_31));
        real l_dof_load_34 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_31));
        real l_prod_35 = RMul(0.1e1,0.1e1);
        real l_prod_36 = RMul(0.1e1,l_prod_35);
        real l_basisEval_37 = RMul(-0.1e1,l_prod_36);
        real l_basisEval_38 = RMul(0.1e1,l_prod_36);
        real l_r_39 = RMul(l_dof_load_17,l_basisEval_37);
        real l_r_40 = RMul(l_dof_load_27,0.e0);
        real l_r_41 = RMul(l_dof_load_32,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_22,l_basisEval_38)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_22,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_27,l_basisEval_38)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_32,l_basisEval_38));
        real l_r_46 = RMul(l_dof_load_18,l_basisEval_37);
        real l_r_47 = RMul(l_dof_load_28,0.e0);
        real l_r_48 = RMul(l_dof_load_33,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_23,l_basisEval_38)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_23,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_28,l_basisEval_38)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_33,l_basisEval_38));
        real l_r_53 = RMul(l_dof_load_19,l_basisEval_37);
        real l_r_54 = RMul(l_dof_load_29,0.e0);
        real l_r_55 = RMul(l_dof_load_34,0.e0);
        real l_r_56 = RAdd(RAdd(RAdd(l_r_53,RMul(l_dof_load_24,l_basisEval_38)),l_r_54),l_r_55);
        real l_r_57 = RAdd(l_r_53,RMul(l_dof_load_24,0.e0));
        real l_r_58 = RAdd(RAdd(l_r_57,RMul(l_dof_load_29,l_basisEval_38)),l_r_55);
        real l_r_59 = RAdd(RAdd(l_r_57,l_r_54),RMul(l_dof_load_34,l_basisEval_38));
        real l_r_60 = RMul(0.e0,l_r_42);
        real l_r_61 = RMul(0.e0,l_r_49);
        real l_r_62 = RMul(0.e0,l_r_56);
        real l_r_63 = RAdd(l_r_60,l_r_61);
        real l_r_64 = RAdd(l_r_63,l_r_62);
        real l_r_65 = RMul(0.e0,l_r_44);
        real l_r_66 = RMul(0.e0,l_r_51);
        real l_r_67 = RMul(0.e0,l_r_58);
        real l_r_68 = RAdd(l_r_65,l_r_66);
        real l_r_69 = RAdd(l_r_68,l_r_67);
        real l_r_70 = RMul(0.e0,l_r_45);
        real l_r_71 = RMul(0.e0,l_r_52);
        real l_r_72 = RMul(0.e0,l_r_59);
        real l_r_73 = RAdd(l_r_70,l_r_71);
        real l_r_74 = RAdd(l_r_73,l_r_72);
        real l_r_75 = RAdd(l_r_63,RMul(-0.1e1,l_r_56));
        real l_r_76 = RAdd(l_r_68,RMul(-0.1e1,l_r_58));
        real l_r_77 = RAdd(l_r_73,RMul(-0.1e1,l_r_59));
        real l_r_78 = RAdd(RAdd(l_r_60,RMul(0.1e1,l_r_49)),l_r_62);
        real l_r_79 = RAdd(RAdd(l_r_65,RMul(0.1e1,l_r_51)),l_r_67);
        real l_r_80 = RAdd(RAdd(l_r_70,RMul(0.1e1,l_r_52)),l_r_72);
        real l_r_81 = RAdd(l_r_63,RMul(0.1e1,l_r_56));
        real l_r_82 = RAdd(l_r_68,RMul(0.1e1,l_r_58));
        real l_r_83 = RAdd(l_r_73,RMul(0.1e1,l_r_59));
        real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_61),l_r_62);
        real l_r_85 = RAdd(RAdd(RMul(-0.1e1,l_r_44),l_r_66),l_r_67);
        real l_r_86 = RAdd(RAdd(RMul(-0.1e1,l_r_45),l_r_71),l_r_72);
        real l_r_87 = RAdd(RAdd(l_r_60,RMul(-0.1e1,l_r_49)),l_r_62);
        real l_r_88 = RAdd(RAdd(l_r_65,RMul(-0.1e1,l_r_51)),l_r_67);
        real l_r_89 = RAdd(RAdd(l_r_70,RMul(-0.1e1,l_r_52)),l_r_72);
        real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_61),l_r_62);
        real l_r_91 = RAdd(RAdd(RMul(0.1e1,l_r_44),l_r_66),l_r_67);
        real l_r_92 = RAdd(RAdd(RMul(0.1e1,l_r_45),l_r_71),l_r_72);
        real l_r_93 = RAdd(RAdd(RMul(l_r_42,l_r_69),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_88));
        real l_r_94 = RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_89));
        real l_r_95 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_69)),RMul(l_r_56,l_r_91));
        real l_r_96 = RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_74)),RMul(l_r_56,l_r_92));
        real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_79),RMul(l_r_49,l_r_85)),RMul(l_r_56,l_r_69));
        real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_80),RMul(l_r_49,l_r_86)),RMul(l_r_56,l_r_74));
        real l_r_99 = RAdd(RAdd(RMul(l_r_44,l_r_64),RMul(l_r_51,l_r_81)),RMul(l_r_58,l_r_87));
        real l_r_100 = RAdd(RAdd(RMul(l_r_44,l_r_74),RMul(l_r_51,l_r_83)),RMul(l_r_58,l_r_89));
        real l_r_101 = RAdd(RAdd(RMul(l_r_44,l_r_75),RMul(l_r_51,l_r_64)),RMul(l_r_58,l_r_90));
        real l_r_102 = RAdd(RAdd(RMul(l_r_44,l_r_77),RMul(l_r_51,l_r_74)),RMul(l_r_58,l_r_92));
        real l_r_103 = RAdd(RAdd(RMul(l_r_44,l_r_78),RMul(l_r_51,l_r_84)),RMul(l_r_58,l_r_64));
        real l_r_104 = RAdd(RAdd(RMul(l_r_44,l_r_80),RMul(l_r_51,l_r_86)),RMul(l_r_58,l_r_74));
        real l_r_105 = RAdd(RAdd(RMul(l_r_45,l_r_64),RMul(l_r_52,l_r_81)),RMul(l_r_59,l_r_87));
        real l_r_106 = RAdd(RAdd(RMul(l_r_45,l_r_69),RMul(l_r_52,l_r_82)),RMul(l_r_59,l_r_88));
        real l_r_107 = RAdd(RAdd(RMul(l_r_45,l_r_75),RMul(l_r_52,l_r_64)),RMul(l_r_59,l_r_90));
        real l_r_108 = RAdd(RAdd(RMul(l_r_45,l_r_76),RMul(l_r_52,l_r_69)),RMul(l_r_59,l_r_91));
        real l_r_109 = RAdd(RAdd(RMul(l_r_45,l_r_78),RMul(l_r_52,l_r_84)),RMul(l_r_59,l_r_64));
        real l_r_110 = RAdd(RAdd(RMul(l_r_45,l_r_79),RMul(l_r_52,l_r_85)),RMul(l_r_59,l_r_69));
        vec3{4} v_111 = VEC3{4}(l_r_44,l_r_51,l_r_58);
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_64),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87)));
        real l_r_113 = RMul(0.e0,l_r_94);
        real l_r_114 = RMul(0.e0,l_r_99);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_69),RMul(l_r_51,l_r_82)),RMul(l_r_58,l_r_88)));
        real l_r_116 = RMul(0.e0,l_r_105);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_74),RMul(l_r_52,l_r_83)),RMul(l_r_59,l_r_89)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_93));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_64)),RMul(l_r_56,l_r_90)));
        real l_r_120 = RMul(0.e0,l_r_96);
        real l_r_121 = RMul(0.e0,l_r_101);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_76),RMul(l_r_51,l_r_69)),RMul(l_r_58,l_r_91)));
        real l_r_123 = RMul(0.e0,l_r_107);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_77),RMul(l_r_52,l_r_74)),RMul(l_r_59,l_r_92)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_95));
        real l_r_126 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_64)));
        real l_r_127 = RMul(0.e0,l_r_98);
        real l_r_128 = RMul(0.e0,l_r_103);
        real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_79),RMul(l_r_51,l_r_85)),RMul(l_r_58,l_r_69)));
        real l_r_130 = RMul(0.e0,l_r_109);
        real l_r_131 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_80),RMul(l_r_52,l_r_86)),RMul(l_r_59,l_r_74)));
        real l_r_132 = RAdd(l_r_126,RMul(0.e0,l_r_97));
        real l_r_133 = RMul(0.e0,l_r_100);
        real l_r_134 = RMul(0.e0,l_r_106);
        real l_r_135 = RMul(0.e0,l_r_102);
        real l_r_136 = RMul(0.e0,l_r_108);
        real l_r_137 = RMul(0.e0,l_r_104);
        real l_r_138 = RMul(0.e0,l_r_110);
        real l_op1_e3_l_21_139 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_42,l_r_49,l_r_56),VEC3{4}(VDot<3,4>(v_111,VEC3{4}(l_r_74,l_r_83,l_r_89)),VDot<3,4>(v_111,VEC3{4}(l_r_77,l_r_74,l_r_92)),VDot<3,4>(v_111,VEC3{4}(l_r_80,l_r_86,l_r_74)))));
        real l_prod_140 = RMul(VIndex<3,4,0>(v_12),l_prod_35);
        real l_prod_141 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_12),0.1e1));
        real l_prod_142 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_12)));
        real l_sum_143 = RAdd(l_basisEval_38,RAdd(RMul(-0.1e1,l_prod_142),RAdd(RMul(-0.1e1,l_prod_141),RMul(-0.1e1,l_prod_140))));
        real l_basisEval_144 = RMul(0.1e1,l_prod_140);
        real l_basisEval_145 = RMul(0.1e1,l_prod_141);
        real l_basisEval_146 = RMul(0.1e1,l_prod_142);
        vec3{4} v_147 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_143),RMul(l_dof_load_22,l_basisEval_144)),RMul(l_dof_load_27,l_basisEval_145)),RMul(l_dof_load_32,l_basisEval_146)),RAdd(RAdd(RAdd(RMul(l_dof_load_18,l_sum_143),RMul(l_dof_load_23,l_basisEval_144)),RMul(l_dof_load_28,l_basisEval_145)),RMul(l_dof_load_33,l_basisEval_146)),RAdd(RAdd(RAdd(RMul(l_dof_load_19,l_sum_143),RMul(l_dof_load_24,l_basisEval_144)),RMul(l_dof_load_29,l_basisEval_145)),RMul(l_dof_load_34,l_basisEval_146))),LOAD_0(p_pos_6));
        vec3{4} v_148 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_100)),l_r_116),RMul(-0.1e1,l_r_106)),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_102)),l_r_123),RMul(-0.1e1,l_r_108)),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_132,l_r_127),l_r_128),l_r_129),RMul(0.1e1,l_r_104)),l_r_130),RMul(-0.1e1,l_r_110)),l_r_131),l_op1_e3_l_21_139)),v_147),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_94)),l_r_114),l_r_115),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_96)),l_r_121),l_r_122),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_132,RMul(-0.1e1,l_r_98)),l_r_128),l_r_129),l_r_137),RMul(0.1e1,l_r_109)),l_r_138),l_r_131),l_op1_e3_l_21_139)),v_147),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_93)),l_r_113),RMul(-0.1e1,l_r_99)),l_r_115),l_r_133),l_r_116),l_r_134),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_95)),l_r_120),RMul(-0.1e1,l_r_101)),l_r_122),l_r_135),l_r_123),l_r_136),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_126,RMul(0.1e1,l_r_97)),l_r_127),RMul(-0.1e1,l_r_103)),l_r_129),l_r_137),l_r_130),l_r_138),l_r_131),l_op1_e3_l_21_139)),v_147));
        vec3{4} v_149 = VSub<3,4>(v_12,v_148);
        vec3{4} v_150 = v_149;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_148,v_148))) {
          vec3{4} v_151 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_150);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_150)),BAnd(GT<real>(VIndex<3,4,0>(v_151),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_151),-0.e0),GT<real>(VIndex<3,4,2>(v_151),-0.e0))))) {
            tensor[3] _arg_152 = PACK(v_150);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,i_cellItter_9,_arg_152,p_pos_6)
          }
        }
        v_12 = v_150;
      }
      v_8 = v_12;
    }
    l_cellInt_153 = l_cellInt_11;
    l_newtonInt_154 = 0;
    v_155 = v_8;
    for i_itter_156 = 0 to IMul(3,l_numCell_7) {
      int l_newtonInt_299;
      int l_cellInt_298;
      int l_mulRes_157 = IMul(l_cellInt_153,4);
      int t_158 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_157);
      int l_mulRes_159 = IMul(3,t_158);
      real l_dof_load_160 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_159);
      real l_dof_load_161 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_159));
      real l_dof_load_162 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_159));
      int t_163 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,1));
      int l_mulRes_164 = IMul(3,t_163);
      real l_dof_load_165 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_164);
      real l_dof_load_166 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_164));
      real l_dof_load_167 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_164));
      int t_168 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,2));
      int l_mulRes_169 = IMul(3,t_168);
      real l_dof_load_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_169);
      real l_dof_load_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_169));
      real l_dof_load_172 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_169));
      int t_173 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,3));
      int l_mulRes_174 = IMul(3,t_173);
      real l_dof_load_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_174);
      real l_dof_load_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_174));
      real l_dof_load_177 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_174));
      real l_prod_178 = RMul(0.1e1,0.1e1);
      real l_prod_179 = RMul(0.1e1,l_prod_178);
      real l_basisEval_180 = RMul(-0.1e1,l_prod_179);
      real l_basisEval_181 = RMul(0.1e1,l_prod_179);
      real l_r_182 = RMul(l_dof_load_160,l_basisEval_180);
      real l_r_183 = RMul(l_dof_load_170,0.e0);
      real l_r_184 = RMul(l_dof_load_175,0.e0);
      real l_r_185 = RAdd(RAdd(RAdd(l_r_182,RMul(l_dof_load_165,l_basisEval_181)),l_r_183),l_r_184);
      real l_r_186 = RAdd(l_r_182,RMul(l_dof_load_165,0.e0));
      real l_r_187 = RAdd(RAdd(l_r_186,RMul(l_dof_load_170,l_basisEval_181)),l_r_184);
      real l_r_188 = RAdd(RAdd(l_r_186,l_r_183),RMul(l_dof_load_175,l_basisEval_181));
      real l_r_189 = RMul(l_dof_load_161,l_basisEval_180);
      real l_r_190 = RMul(l_dof_load_171,0.e0);
      real l_r_191 = RMul(l_dof_load_176,0.e0);
      real l_r_192 = RAdd(RAdd(RAdd(l_r_189,RMul(l_dof_load_166,l_basisEval_181)),l_r_190),l_r_191);
      real l_r_193 = RAdd(l_r_189,RMul(l_dof_load_166,0.e0));
      real l_r_194 = RAdd(RAdd(l_r_193,RMul(l_dof_load_171,l_basisEval_181)),l_r_191);
      real l_r_195 = RAdd(RAdd(l_r_193,l_r_190),RMul(l_dof_load_176,l_basisEval_181));
      real l_r_196 = RMul(l_dof_load_162,l_basisEval_180);
      real l_r_197 = RMul(l_dof_load_172,0.e0);
      real l_r_198 = RMul(l_dof_load_177,0.e0);
      real l_r_199 = RAdd(RAdd(RAdd(l_r_196,RMul(l_dof_load_167,l_basisEval_181)),l_r_197),l_r_198);
      real l_r_200 = RAdd(l_r_196,RMul(l_dof_load_167,0.e0));
      real l_r_201 = RAdd(RAdd(l_r_200,RMul(l_dof_load_172,l_basisEval_181)),l_r_198);
      real l_r_202 = RAdd(RAdd(l_r_200,l_r_197),RMul(l_dof_load_177,l_basisEval_181));
      real l_r_203 = RMul(0.e0,l_r_185);
      real l_r_204 = RMul(0.e0,l_r_192);
      real l_r_205 = RMul(0.e0,l_r_199);
      real l_r_206 = RAdd(l_r_203,l_r_204);
      real l_r_207 = RAdd(l_r_206,l_r_205);
      real l_r_208 = RMul(0.e0,l_r_187);
      real l_r_209 = RMul(0.e0,l_r_194);
      real l_r_210 = RMul(0.e0,l_r_201);
      real l_r_211 = RAdd(l_r_208,l_r_209);
      real l_r_212 = RAdd(l_r_211,l_r_210);
      real l_r_213 = RMul(0.e0,l_r_188);
      real l_r_214 = RMul(0.e0,l_r_195);
      real l_r_215 = RMul(0.e0,l_r_202);
      real l_r_216 = RAdd(l_r_213,l_r_214);
      real l_r_217 = RAdd(l_r_216,l_r_215);
      real l_r_218 = RAdd(l_r_206,RMul(-0.1e1,l_r_199));
      real l_r_219 = RAdd(l_r_211,RMul(-0.1e1,l_r_201));
      real l_r_220 = RAdd(l_r_216,RMul(-0.1e1,l_r_202));
      real l_r_221 = RAdd(RAdd(l_r_203,RMul(0.1e1,l_r_192)),l_r_205);
      real l_r_222 = RAdd(RAdd(l_r_208,RMul(0.1e1,l_r_194)),l_r_210);
      real l_r_223 = RAdd(RAdd(l_r_213,RMul(0.1e1,l_r_195)),l_r_215);
      real l_r_224 = RAdd(l_r_206,RMul(0.1e1,l_r_199));
      real l_r_225 = RAdd(l_r_211,RMul(0.1e1,l_r_201));
      real l_r_226 = RAdd(l_r_216,RMul(0.1e1,l_r_202));
      real l_r_227 = RAdd(RAdd(RMul(-0.1e1,l_r_185),l_r_204),l_r_205);
      real l_r_228 = RAdd(RAdd(RMul(-0.1e1,l_r_187),l_r_209),l_r_210);
      real l_r_229 = RAdd(RAdd(RMul(-0.1e1,l_r_188),l_r_214),l_r_215);
      real l_r_230 = RAdd(RAdd(l_r_203,RMul(-0.1e1,l_r_192)),l_r_205);
      real l_r_231 = RAdd(RAdd(l_r_208,RMul(-0.1e1,l_r_194)),l_r_210);
      real l_r_232 = RAdd(RAdd(l_r_213,RMul(-0.1e1,l_r_195)),l_r_215);
      real l_r_233 = RAdd(RAdd(RMul(0.1e1,l_r_185),l_r_204),l_r_205);
      real l_r_234 = RAdd(RAdd(RMul(0.1e1,l_r_187),l_r_209),l_r_210);
      real l_r_235 = RAdd(RAdd(RMul(0.1e1,l_r_188),l_r_214),l_r_215);
      real l_r_236 = RAdd(RAdd(RMul(l_r_185,l_r_212),RMul(l_r_192,l_r_225)),RMul(l_r_199,l_r_231));
      real l_r_237 = RAdd(RAdd(RMul(l_r_185,l_r_217),RMul(l_r_192,l_r_226)),RMul(l_r_199,l_r_232));
      real l_r_238 = RAdd(RAdd(RMul(l_r_185,l_r_219),RMul(l_r_192,l_r_212)),RMul(l_r_199,l_r_234));
      real l_r_239 = RAdd(RAdd(RMul(l_r_185,l_r_220),RMul(l_r_192,l_r_217)),RMul(l_r_199,l_r_235));
      real l_r_240 = RAdd(RAdd(RMul(l_r_185,l_r_222),RMul(l_r_192,l_r_228)),RMul(l_r_199,l_r_212));
      real l_r_241 = RAdd(RAdd(RMul(l_r_185,l_r_223),RMul(l_r_192,l_r_229)),RMul(l_r_199,l_r_217));
      real l_r_242 = RAdd(RAdd(RMul(l_r_187,l_r_207),RMul(l_r_194,l_r_224)),RMul(l_r_201,l_r_230));
      real l_r_243 = RAdd(RAdd(RMul(l_r_187,l_r_217),RMul(l_r_194,l_r_226)),RMul(l_r_201,l_r_232));
      real l_r_244 = RAdd(RAdd(RMul(l_r_187,l_r_218),RMul(l_r_194,l_r_207)),RMul(l_r_201,l_r_233));
      real l_r_245 = RAdd(RAdd(RMul(l_r_187,l_r_220),RMul(l_r_194,l_r_217)),RMul(l_r_201,l_r_235));
      real l_r_246 = RAdd(RAdd(RMul(l_r_187,l_r_221),RMul(l_r_194,l_r_227)),RMul(l_r_201,l_r_207));
      real l_r_247 = RAdd(RAdd(RMul(l_r_187,l_r_223),RMul(l_r_194,l_r_229)),RMul(l_r_201,l_r_217));
      real l_r_248 = RAdd(RAdd(RMul(l_r_188,l_r_207),RMul(l_r_195,l_r_224)),RMul(l_r_202,l_r_230));
      real l_r_249 = RAdd(RAdd(RMul(l_r_188,l_r_212),RMul(l_r_195,l_r_225)),RMul(l_r_202,l_r_231));
      real l_r_250 = RAdd(RAdd(RMul(l_r_188,l_r_218),RMul(l_r_195,l_r_207)),RMul(l_r_202,l_r_233));
      real l_r_251 = RAdd(RAdd(RMul(l_r_188,l_r_219),RMul(l_r_195,l_r_212)),RMul(l_r_202,l_r_234));
      real l_r_252 = RAdd(RAdd(RMul(l_r_188,l_r_221),RMul(l_r_195,l_r_227)),RMul(l_r_202,l_r_207));
      real l_r_253 = RAdd(RAdd(RMul(l_r_188,l_r_222),RMul(l_r_195,l_r_228)),RMul(l_r_202,l_r_212));
      vec3{4} v_254 = VEC3{4}(l_r_187,l_r_194,l_r_201);
      real l_r_255 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_207),RMul(l_r_192,l_r_224)),RMul(l_r_199,l_r_230)));
      real l_r_256 = RMul(0.e0,l_r_237);
      real l_r_257 = RMul(0.e0,l_r_242);
      real l_r_258 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_212),RMul(l_r_194,l_r_225)),RMul(l_r_201,l_r_231)));
      real l_r_259 = RMul(0.e0,l_r_248);
      real l_r_260 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_217),RMul(l_r_195,l_r_226)),RMul(l_r_202,l_r_232)));
      real l_r_261 = RAdd(l_r_255,RMul(0.e0,l_r_236));
      real l_r_262 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_218),RMul(l_r_192,l_r_207)),RMul(l_r_199,l_r_233)));
      real l_r_263 = RMul(0.e0,l_r_239);
      real l_r_264 = RMul(0.e0,l_r_244);
      real l_r_265 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_219),RMul(l_r_194,l_r_212)),RMul(l_r_201,l_r_234)));
      real l_r_266 = RMul(0.e0,l_r_250);
      real l_r_267 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_220),RMul(l_r_195,l_r_217)),RMul(l_r_202,l_r_235)));
      real l_r_268 = RAdd(l_r_262,RMul(0.e0,l_r_238));
      real l_r_269 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_221),RMul(l_r_192,l_r_227)),RMul(l_r_199,l_r_207)));
      real l_r_270 = RMul(0.e0,l_r_241);
      real l_r_271 = RMul(0.e0,l_r_246);
      real l_r_272 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_222),RMul(l_r_194,l_r_228)),RMul(l_r_201,l_r_212)));
      real l_r_273 = RMul(0.e0,l_r_252);
      real l_r_274 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_223),RMul(l_r_195,l_r_229)),RMul(l_r_202,l_r_217)));
      real l_r_275 = RAdd(l_r_269,RMul(0.e0,l_r_240));
      real l_r_276 = RMul(0.e0,l_r_243);
      real l_r_277 = RMul(0.e0,l_r_249);
      real l_r_278 = RMul(0.e0,l_r_245);
      real l_r_279 = RMul(0.e0,l_r_251);
      real l_r_280 = RMul(0.e0,l_r_247);
      real l_r_281 = RMul(0.e0,l_r_253);
      real l_op1_e3_l_21_282 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_185,l_r_192,l_r_199),VEC3{4}(VDot<3,4>(v_254,VEC3{4}(l_r_217,l_r_226,l_r_232)),VDot<3,4>(v_254,VEC3{4}(l_r_220,l_r_217,l_r_235)),VDot<3,4>(v_254,VEC3{4}(l_r_223,l_r_229,l_r_217)))));
      real l_prod_283 = RMul(VIndex<3,4,0>(v_155),l_prod_178);
      real l_prod_284 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_155),0.1e1));
      real l_prod_285 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_155)));
      real l_sum_286 = RAdd(l_basisEval_181,RAdd(RMul(-0.1e1,l_prod_285),RAdd(RMul(-0.1e1,l_prod_284),RMul(-0.1e1,l_prod_283))));
      real l_basisEval_287 = RMul(0.1e1,l_prod_283);
      real l_basisEval_288 = RMul(0.1e1,l_prod_284);
      real l_basisEval_289 = RMul(0.1e1,l_prod_285);
      vec3{4} v_290 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_160,l_sum_286),RMul(l_dof_load_165,l_basisEval_287)),RMul(l_dof_load_170,l_basisEval_288)),RMul(l_dof_load_175,l_basisEval_289)),RAdd(RAdd(RAdd(RMul(l_dof_load_161,l_sum_286),RMul(l_dof_load_166,l_basisEval_287)),RMul(l_dof_load_171,l_basisEval_288)),RMul(l_dof_load_176,l_basisEval_289)),RAdd(RAdd(RAdd(RMul(l_dof_load_162,l_sum_286),RMul(l_dof_load_167,l_basisEval_287)),RMul(l_dof_load_172,l_basisEval_288)),RMul(l_dof_load_177,l_basisEval_289))),LOAD_0(p_pos_6));
      vec3{4} v_291 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_261,l_r_256),l_r_257),l_r_258),RMul(0.1e1,l_r_243)),l_r_259),RMul(-0.1e1,l_r_249)),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_268,l_r_263),l_r_264),l_r_265),RMul(0.1e1,l_r_245)),l_r_266),RMul(-0.1e1,l_r_251)),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_275,l_r_270),l_r_271),l_r_272),RMul(0.1e1,l_r_247)),l_r_273),RMul(-0.1e1,l_r_253)),l_r_274),l_op1_e3_l_21_282)),v_290),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_261,RMul(-0.1e1,l_r_237)),l_r_257),l_r_258),l_r_276),RMul(0.1e1,l_r_248)),l_r_277),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_268,RMul(-0.1e1,l_r_239)),l_r_264),l_r_265),l_r_278),RMul(0.1e1,l_r_250)),l_r_279),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_275,RMul(-0.1e1,l_r_241)),l_r_271),l_r_272),l_r_280),RMul(0.1e1,l_r_252)),l_r_281),l_r_274),l_op1_e3_l_21_282)),v_290),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_255,RMul(0.1e1,l_r_236)),l_r_256),RMul(-0.1e1,l_r_242)),l_r_258),l_r_276),l_r_259),l_r_277),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,RMul(0.1e1,l_r_238)),l_r_263),RMul(-0.1e1,l_r_244)),l_r_265),l_r_278),l_r_266),l_r_279),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,RMul(0.1e1,l_r_240)),l_r_270),RMul(-0.1e1,l_r_246)),l_r_272),l_r_280),l_r_273),l_r_281),l_r_274),l_op1_e3_l_21_282)),v_290));
      vec3{4} v_292 = VSub<3,4>(v_155,v_291);
      vec3{4} v_293 = v_292;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_291,v_291))) {
        vec3{4} v_294 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_293);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_293)),BAnd(GT<real>(VIndex<3,4,0>(v_294),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_294),-0.e0),GT<real>(VIndex<3,4,2>(v_294),-0.e0))))) {
          tensor[3] _arg_295 = PACK(v_293);
          return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,l_cellInt_153,_arg_295,p_pos_6)
        }
      }
      int l_newtonInt_296 = IAdd(l_newtonInt_154,1);
      if (GTE<int>(l_newtonInt_296,2)) {
        int l_cellInt_297;
        if (GTE<int>(l_cellInt_153,l_numCell_7)) {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
        } else {
          l_cellInt_297 = IAdd(l_cellInt_153,1);
        }
        l_cellInt_298 = l_cellInt_297;
        l_newtonInt_299 = 0;
      } else {
        l_cellInt_298 = l_cellInt_153;
        l_newtonInt_299 = l_newtonInt_296;
      }
      l_cellInt_153 = l_cellInt_298;
      l_newtonInt_154 = l_newtonInt_299;
      v_155 = v_293;
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_304;
    femData(MeshCell)[] l__t_300;
    l__t_300 = <femData(MeshCell)[]>{};
    for i__t_301 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_300 = Append<femData(MeshCell),femData(MeshCell)>(l__t_300,LoadFem<femData(MeshCell)>(globals.a,i__t_301));
    }
    femData(FemFunc) l_c_302 = LoadFem<femData(FemFunc)>(globals.0c043D_intermedateGlobal,LoadFem<femData(Space)>(globals.0b043B_intermedateGlobal,globals.a));
    femData(Space) l__t_303 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_302);
    l_I_304 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_305 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_306 = Sqrt(VDot<3,4>(v_305,v_305));
    globals.camDist = l_camDist_306;
    real l_op1_e3_l_9_307 = RDiv(0.1e1,l_camDist_306);
    vec3{4} v_308 = VScale<3,4>(l_op1_e3_l_9_307,v_305);
    globals.camN = PACK(v_308);
    real l_r_310 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_311 = RMul(0.e0,l_r_310);
    real l_r_312 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_313 = RMul(0.e0,l_r_312);
    real l_r_314 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_315 = RMul(0.e0,l_r_314);
    real l_r_316 = RAdd(l_r_311,l_r_313);
    real l_r_317 = RAdd(l_r_316,l_r_315);
    vec3{4} v_318 = VEC3{4}(VDot<3,4>(v_305,VEC3{4}(l_r_317,RAdd(l_r_316,RMul(0.1e1,l_r_314)),RAdd(RAdd(l_r_311,RMul(-0.1e1,l_r_312)),l_r_315))),VDot<3,4>(v_305,VEC3{4}(RAdd(l_r_316,RMul(-0.1e1,l_r_314)),l_r_317,RAdd(RAdd(RMul(0.1e1,l_r_310),l_r_313),l_r_315))),VDot<3,4>(v_305,VEC3{4}(RAdd(RAdd(l_r_311,RMul(0.1e1,l_r_312)),l_r_315),RAdd(RAdd(RMul(-0.1e1,l_r_310),l_r_313),l_r_315),l_r_317)));
    real l_op1_e3_l_38_319 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_307,l_op1_e3_l_9_307),VDot<3,4>(v_318,v_318))));
    vec3{4} v_320 = VScale<3,4>(l_op1_e3_l_38_319,VScale<3,4>(l_op1_e3_l_9_307,v_318));
    globals.camU = PACK(v_320);
    real l_r_322 = VIndex<3,4,0>(v_305);
    real l_r_323 = RMul(0.e0,l_r_322);
    real l_r_324 = VIndex<3,4,1>(v_305);
    real l_r_325 = RMul(0.e0,l_r_324);
    real l_r_326 = VIndex<3,4,2>(v_305);
    real l_r_327 = RMul(0.e0,l_r_326);
    real l_r_328 = RAdd(l_r_323,l_r_325);
    real l_r_329 = RAdd(l_r_328,l_r_327);
    vec3{4} v_330 = VScale<3,4>(l_op1_e3_l_9_307,VEC3{4}(VDot<3,4>(v_318,VEC3{4}(l_r_329,RAdd(l_r_328,RMul(0.1e1,l_r_326)),RAdd(RAdd(l_r_323,RMul(-0.1e1,l_r_324)),l_r_327))),VDot<3,4>(v_318,VEC3{4}(RAdd(l_r_328,RMul(-0.1e1,l_r_326)),l_r_329,RAdd(RAdd(RMul(0.1e1,l_r_322),l_r_325),l_r_327))),VDot<3,4>(v_318,VEC3{4}(RAdd(RAdd(l_r_323,RMul(0.1e1,l_r_324)),l_r_327),RAdd(RAdd(RMul(-0.1e1,l_r_322),l_r_325),l_r_327),l_r_329))));
    real l_r_331 = RMul(l_op1_e3_l_38_319,l_op1_e3_l_9_307);
    real l_r_332 = RMul(l_r_331,VIndex<3,4,0>(v_330));
    real l_r_333 = RMul(l_r_331,VIndex<3,4,1>(v_330));
    real l_r_334 = RMul(l_r_331,VIndex<3,4,2>(v_330));
    globals.camV = PACK(VEC3{4}(l_r_332,l_r_333,l_r_334));
    real l_op1_e3_l_10_336 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_336,l_camDist_306);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_336),l_camDist_306),IntToReal(globals.iresV));
    real l_r_337 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_338 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_339 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_320),l_r_337),RMul(l_r_332,l_r_338)),RMul(VIndex<3,4,0>(v_308),l_r_339)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_320),l_r_337),RMul(l_r_333,l_r_338)),RMul(VIndex<3,4,1>(v_308),l_r_339)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_320),l_r_337),RMul(l_r_334,l_r_338)),RMul(VIndex<3,4,2>(v_308),l_r_339)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_303);
    globals._tX = l__t_303;
    globals.c = l_c_302;
    globals.I = l_I_304;
  }
//***** STRAND *****
strand raycast (int p_ui_341,int p_vi_342) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_343 = RNeg(globals.camUmax);
    real l_rayU_344 = RAdd(l_op1_e3_l_9_343,RMul(RDiv(RSub(IntToReal(p_ui_341),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_343)));
    real l_rayV_345 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_342),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_346 = VAdd<3,4>(VScale<3,4>(l_rayU_344,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_345,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_347 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_344;
    self.rayV = l_rayV_345;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_347,VIndex<3,4,0>(v_346)),RMul(l_r_347,VIndex<3,4,1>(v_346)),RMul(l_r_347,VIndex<3,4,2>(v_346)))));
    self.transp = 0.1e1;
    self.rgb = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.rgba = PACK(VEC4(0.e0,0.e0,0.e0,0.e0));
    self.gray = 0.e0;
    self.ui = p_ui_341;
    self.vi = p_vi_342;
  }
  update (world, globals) {
    real l_transp_585;
    real l_transp_583;
    vec3{4} v_582;
    if (globals.debug) {
      bool l__t_351;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_351 = true;
      } else {
        l__t_351 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_351) {
        stabilize;
      }
    }
    vec3{4} v_352 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_353 = VIndex<3,4,0>(v_352);
    vec3{4} v_354 = v_352;
    if (LT<real>(0.e0,l__t_353)) {
      real l_transp_581;
      vec3{4} v_580;
      if (LT<real>(l__t_353,0.1e1)) {
        real l_transp_579;
        vec3{4} v_578;
        real l__t_355 = VIndex<3,4,1>(v_354);
        if (LT<real>(0.e0,l__t_355)) {
          real l_transp_577;
          vec3{4} v_576;
          if (LT<real>(l__t_355,0.1e1)) {
            real l_transp_575;
            vec3{4} v_574;
            real l__t_356 = VIndex<3,4,2>(v_354);
            if (LT<real>(0.e0,l__t_356)) {
              real l_transp_573;
              vec3{4} v_572;
              if (LT<real>(l__t_356,0.1e1)) {
                real l_transp_570;
                vec3{4} v_569;
                tensor[3] _arg_357 = PACK(v_354);
                femData(MeshPos) l_p_358 = findPos$3F3C(globals.a,_arg_357);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_358)) {
                  real l_transp_568;
                  vec3{4} v_567;
                  tensor[3] _arg_359 = PACK(v_354);
                  femData(MeshPos) l_callFindPos_360 = findPos$3F3C(globals._t,_arg_359);
                  int l_intPos_361 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_360);
                  &tensor[3] l_refPos_362 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_360);
                  int l_mulRes_363 = IMul(l_intPos_361,10);
                  int t_364 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_363);
                  int t_365 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,1));
                  int t_366 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,2));
                  int t_367 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,3));
                  int t_368 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,4));
                  int t_369 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,5));
                  int t_370 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,6));
                  int t_371 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,7));
                  int t_372 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,8));
                  int t_373 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,9));
                  real t_374 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_373));
                  real t_375 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_372));
                  real t_376 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_371));
                  real t_377 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_370));
                  real t_378 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_369));
                  real t_379 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_368));
                  real t_380 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_367));
                  real t_381 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_366));
                  real t_382 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_365));
                  real t_383 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_364));
                  vec4 v_384 = VEC4(t_383,t_382,t_381,t_380);
                  vec4 v_385 = VEC4(t_379,t_378,t_377,t_376);
                  vec2 v_386 = VEC2(t_375,t_374);
                  real l_varAcc_387 = VIndex<3,4,0>(LOAD_0(l_refPos_362));
                  real l_varAcc_388 = VIndex<3,4,1>(LOAD_0(l_refPos_362));
                  real l_varAcc_389 = VIndex<3,4,2>(LOAD_0(l_refPos_362));
                  real l_prod_390 = RMul(0.1e1,0.1e1);
                  real l_prod_391 = RMul(RMul(l_varAcc_387,l_varAcc_387),l_prod_390);
                  real l_prod_392 = RMul(l_varAcc_388,0.1e1);
                  real l_prod_393 = RMul(l_varAcc_387,l_prod_392);
                  real l_prod_394 = RMul(0.1e1,l_varAcc_389);
                  real l_prod_395 = RMul(l_varAcc_387,l_prod_394);
                  real l_prod_396 = RMul(l_varAcc_387,l_prod_390);
                  real l_prod_397 = RMul(0.1e1,RMul(RMul(l_varAcc_388,l_varAcc_388),0.1e1));
                  real l_prod_398 = RMul(0.1e1,RMul(l_varAcc_388,l_varAcc_389));
                  real l_prod_399 = RMul(0.1e1,l_prod_392);
                  real l_prod_400 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_389,l_varAcc_389)));
                  real l_prod_401 = RMul(0.1e1,l_prod_394);
                  real l_prod_402 = RMul(0.1e1,l_prod_390);
                  real l_mult_403 = RMul(0.1e1,l_prod_402);
                  real l_mult_404 = RMul(0.2e1,l_prod_400);
                  real l_mult_405 = RMul(0.4e1,l_prod_398);
                  real l_mult_406 = RMul(0.2e1,l_prod_397);
                  real l_mult_407 = RMul(0.4e1,l_prod_395);
                  real l_mult_408 = RMul(0.4e1,l_prod_393);
                  real l_mult_409 = RMul(0.2e1,l_prod_391);
                  real l_mult_410 = RMul(0.4e1,l_prod_401);
                  real l_mult_411 = RMul(-0.4e1,l_prod_398);
                  real l_mult_412 = RMul(-0.4e1,l_prod_395);
                  real l_mult_413 = RMul(0.4e1,l_prod_399);
                  real l_mult_414 = RMul(-0.4e1,l_prod_393);
                  real l_mult_415 = RMul(0.4e1,l_prod_396);
                  real l_compositionl_416 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_405,l_mult_407,l_mult_408,RAdd(l_mult_410,RAdd(RMul(-0.4e1,l_prod_400),RAdd(l_mult_411,l_mult_412))))),RAdd(VDot<2,2>(v_386,VEC2(RAdd(l_mult_413,RAdd(l_mult_411,RAdd(RMul(-0.4e1,l_prod_397),l_mult_414))),RAdd(l_mult_415,RAdd(l_mult_412,RAdd(l_mult_414,RMul(-0.4e1,l_prod_391)))))),VDot<4,4>(v_384,VEC4(RAdd(l_mult_403,RAdd(RMul(-0.3e1,l_prod_401),RAdd(l_mult_404,RAdd(RMul(-0.3e1,l_prod_399),RAdd(l_mult_405,RAdd(l_mult_406,RAdd(RMul(-0.3e1,l_prod_396),RAdd(l_mult_407,RAdd(l_mult_408,l_mult_409))))))))),RAdd(RMul(-0.1e1,l_prod_396),l_mult_409),RAdd(RMul(-0.1e1,l_prod_399),l_mult_406),RAdd(RMul(-0.1e1,l_prod_401),l_mult_404)))));
                  real l_sum_417 = RAdd(RMul(-0.3e1,l_prod_402),RAdd(l_mult_410,RAdd(l_mult_413,l_mult_415)));
                  real l_mult_418 = RMul(-0.1e1,l_prod_402);
                  real l_basisEval_419 = RMul(-0.4e1,l_prod_401);
                  real l_basisEval_420 = RMul(-0.4e1,l_prod_399);
                  real l_mult_421 = RMul(0.4e1,l_prod_402);
                  real l_mult_422 = RMul(-0.4e1,l_prod_396);
                  real l_vdot_423 = RAdd(VDot<4,4>(v_385,VEC4(0.e0,l_mult_410,l_mult_413,l_basisEval_419)),RAdd(VDot<2,2>(v_386,VEC2(l_basisEval_420,RAdd(l_mult_421,RAdd(l_basisEval_419,RAdd(l_basisEval_420,RMul(-0.8e1,l_prod_396)))))),VDot<4,4>(v_384,VEC4(l_sum_417,RAdd(l_mult_418,l_mult_415),0.e0,0.e0))));
                  real l_vdot_424 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_410,0.e0,l_mult_415,l_basisEval_419)),RAdd(VDot<2,2>(v_386,VEC2(RAdd(l_mult_421,RAdd(l_basisEval_419,RAdd(RMul(-0.8e1,l_prod_399),l_mult_422))),l_mult_422)),VDot<4,4>(v_384,VEC4(l_sum_417,0.e0,RAdd(l_mult_418,l_mult_413),0.e0))));
                  real l_vdot_425 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_413,l_mult_415,0.e0,RAdd(l_mult_421,RAdd(RMul(-0.8e1,l_prod_401),RAdd(l_basisEval_420,l_mult_422))))),RAdd(VDot<2,2>(v_386,VEC2(l_basisEval_420,l_mult_422)),VDot<4,4>(v_384,VEC4(l_sum_417,0.e0,0.e0,RAdd(l_mult_418,l_mult_410)))));
                  int l_mulRes_426 = IMul(l_intPos_361,4);
                  int t_427 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_426);
                  int l_mulRes_428 = IMul(3,t_427);
                  int t_429 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,1));
                  int l_mulRes_430 = IMul(3,t_429);
                  real l_dof_load_431 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_430);
                  real l_dof_load_432 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_430));
                  real l_dof_load_433 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_430));
                  int t_434 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,2));
                  int l_mulRes_435 = IMul(3,t_434);
                  real l_dof_load_436 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_435);
                  real l_dof_load_437 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_435));
                  real l_dof_load_438 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_435));
                  int t_439 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,3));
                  int l_mulRes_440 = IMul(3,t_439);
                  real l_dof_load_441 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_440);
                  real l_dof_load_442 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_440));
                  real l_dof_load_443 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_440));
                  real t_444 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_428);
                  real l_r_445 = RMul(t_444,l_mult_418);
                  real l_r_446 = RMul(l_dof_load_436,0.e0);
                  real l_r_447 = RMul(l_dof_load_441,0.e0);
                  real l_r_448 = RAdd(RAdd(RAdd(l_r_445,RMul(l_dof_load_431,l_mult_403)),l_r_446),l_r_447);
                  real l_r_449 = RAdd(l_r_445,RMul(l_dof_load_431,0.e0));
                  real l_r_450 = RAdd(RAdd(l_r_449,RMul(l_dof_load_436,l_mult_403)),l_r_447);
                  real l_r_451 = RAdd(RAdd(l_r_449,l_r_446),RMul(l_dof_load_441,l_mult_403));
                  real t_452 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_428));
                  real l_r_453 = RMul(t_452,l_mult_418);
                  real l_r_454 = RMul(l_dof_load_437,0.e0);
                  real l_r_455 = RMul(l_dof_load_442,0.e0);
                  real l_r_456 = RAdd(RAdd(RAdd(l_r_453,RMul(l_dof_load_432,l_mult_403)),l_r_454),l_r_455);
                  real l_r_457 = RAdd(l_r_453,RMul(l_dof_load_432,0.e0));
                  real l_r_458 = RAdd(RAdd(l_r_457,RMul(l_dof_load_437,l_mult_403)),l_r_455);
                  real l_r_459 = RAdd(RAdd(l_r_457,l_r_454),RMul(l_dof_load_442,l_mult_403));
                  real t_460 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_428));
                  real l_r_461 = RMul(t_460,l_mult_418);
                  real l_r_462 = RMul(l_dof_load_438,0.e0);
                  real l_r_463 = RMul(l_dof_load_443,0.e0);
                  real l_r_464 = RAdd(RAdd(RAdd(l_r_461,RMul(l_dof_load_433,l_mult_403)),l_r_462),l_r_463);
                  real l_r_465 = RAdd(l_r_461,RMul(l_dof_load_433,0.e0));
                  real l_r_466 = RAdd(RAdd(l_r_465,RMul(l_dof_load_438,l_mult_403)),l_r_463);
                  real l_r_467 = RAdd(RAdd(l_r_465,l_r_462),RMul(l_dof_load_443,l_mult_403));
                  real l_r_468 = RMul(0.e0,l_r_448);
                  real l_r_469 = RMul(0.e0,l_r_456);
                  real l_r_470 = RMul(0.e0,l_r_464);
                  real l_r_471 = RAdd(l_r_468,l_r_469);
                  real l_r_472 = RAdd(l_r_471,l_r_470);
                  real l_r_473 = RMul(0.e0,l_r_450);
                  real l_r_474 = RMul(0.e0,l_r_458);
                  real l_r_475 = RMul(0.e0,l_r_466);
                  real l_r_476 = RAdd(l_r_473,l_r_474);
                  real l_r_477 = RAdd(l_r_476,l_r_475);
                  real l_r_478 = RMul(0.e0,l_r_451);
                  real l_r_479 = RMul(0.e0,l_r_459);
                  real l_r_480 = RMul(0.e0,l_r_467);
                  real l_r_481 = RAdd(l_r_478,l_r_479);
                  real l_r_482 = RAdd(l_r_481,l_r_480);
                  real l_r_483 = RAdd(l_r_471,RMul(-0.1e1,l_r_464));
                  real l_r_484 = RAdd(l_r_476,RMul(-0.1e1,l_r_466));
                  real l_r_485 = RAdd(l_r_481,RMul(-0.1e1,l_r_467));
                  real l_r_486 = RAdd(RAdd(l_r_468,RMul(0.1e1,l_r_456)),l_r_470);
                  real l_r_487 = RAdd(RAdd(l_r_473,RMul(0.1e1,l_r_458)),l_r_475);
                  real l_r_488 = RAdd(RAdd(l_r_478,RMul(0.1e1,l_r_459)),l_r_480);
                  real l_r_489 = RAdd(l_r_471,RMul(0.1e1,l_r_464));
                  real l_r_490 = RAdd(l_r_476,RMul(0.1e1,l_r_466));
                  real l_r_491 = RAdd(l_r_481,RMul(0.1e1,l_r_467));
                  real l_r_492 = RAdd(RAdd(RMul(-0.1e1,l_r_448),l_r_469),l_r_470);
                  real l_r_493 = RAdd(RAdd(RMul(-0.1e1,l_r_450),l_r_474),l_r_475);
                  real l_r_494 = RAdd(RAdd(RMul(-0.1e1,l_r_451),l_r_479),l_r_480);
                  real l_r_495 = RAdd(RAdd(l_r_468,RMul(-0.1e1,l_r_456)),l_r_470);
                  real l_r_496 = RAdd(RAdd(l_r_473,RMul(-0.1e1,l_r_458)),l_r_475);
                  real l_r_497 = RAdd(RAdd(l_r_478,RMul(-0.1e1,l_r_459)),l_r_480);
                  real l_r_498 = RAdd(RAdd(RMul(0.1e1,l_r_448),l_r_469),l_r_470);
                  real l_r_499 = RAdd(RAdd(RMul(0.1e1,l_r_450),l_r_474),l_r_475);
                  real l_r_500 = RAdd(RAdd(RMul(0.1e1,l_r_451),l_r_479),l_r_480);
                  real l_r_501 = RAdd(RAdd(RMul(l_r_448,l_r_477),RMul(l_r_456,l_r_490)),RMul(l_r_464,l_r_496));
                  real l_r_502 = RAdd(RAdd(RMul(l_r_448,l_r_482),RMul(l_r_456,l_r_491)),RMul(l_r_464,l_r_497));
                  real l_r_503 = RAdd(RAdd(RMul(l_r_448,l_r_484),RMul(l_r_456,l_r_477)),RMul(l_r_464,l_r_499));
                  real l_r_504 = RAdd(RAdd(RMul(l_r_448,l_r_485),RMul(l_r_456,l_r_482)),RMul(l_r_464,l_r_500));
                  real l_r_505 = RAdd(RAdd(RMul(l_r_448,l_r_487),RMul(l_r_456,l_r_493)),RMul(l_r_464,l_r_477));
                  real l_r_506 = RAdd(RAdd(RMul(l_r_448,l_r_488),RMul(l_r_456,l_r_494)),RMul(l_r_464,l_r_482));
                  real l_r_507 = RAdd(RAdd(RMul(l_r_450,l_r_472),RMul(l_r_458,l_r_489)),RMul(l_r_466,l_r_495));
                  real l_r_508 = RAdd(RAdd(RMul(l_r_450,l_r_482),RMul(l_r_458,l_r_491)),RMul(l_r_466,l_r_497));
                  real l_r_509 = RAdd(RAdd(RMul(l_r_450,l_r_483),RMul(l_r_458,l_r_472)),RMul(l_r_466,l_r_498));
                  real l_r_510 = RAdd(RAdd(RMul(l_r_450,l_r_485),RMul(l_r_458,l_r_482)),RMul(l_r_466,l_r_500));
                  real l_r_511 = RAdd(RAdd(RMul(l_r_450,l_r_486),RMul(l_r_458,l_r_492)),RMul(l_r_466,l_r_472));
                  real l_r_512 = RAdd(RAdd(RMul(l_r_450,l_r_488),RMul(l_r_458,l_r_494)),RMul(l_r_466,l_r_482));
                  real l_r_513 = RAdd(RAdd(RMul(l_r_451,l_r_472),RMul(l_r_459,l_r_489)),RMul(l_r_467,l_r_495));
                  real l_r_514 = RAdd(RAdd(RMul(l_r_451,l_r_477),RMul(l_r_459,l_r_490)),RMul(l_r_467,l_r_496));
                  real l_r_515 = RAdd(RAdd(RMul(l_r_451,l_r_483),RMul(l_r_459,l_r_472)),RMul(l_r_467,l_r_498));
                  real l_r_516 = RAdd(RAdd(RMul(l_r_451,l_r_484),RMul(l_r_459,l_r_477)),RMul(l_r_467,l_r_499));
                  real l_r_517 = RAdd(RAdd(RMul(l_r_451,l_r_486),RMul(l_r_459,l_r_492)),RMul(l_r_467,l_r_472));
                  real l_r_518 = RAdd(RAdd(RMul(l_r_451,l_r_487),RMul(l_r_459,l_r_493)),RMul(l_r_467,l_r_477));
                  vec3{4} v_519 = VEC3{4}(l_r_450,l_r_458,l_r_466);
                  real l_r_520 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_472),RMul(l_r_456,l_r_489)),RMul(l_r_464,l_r_495)));
                  real l_r_521 = RMul(0.e0,l_r_502);
                  real l_r_522 = RMul(0.e0,l_r_507);
                  real l_r_523 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_477),RMul(l_r_458,l_r_490)),RMul(l_r_466,l_r_496)));
                  real l_r_524 = RMul(0.e0,l_r_513);
                  real l_r_525 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_482),RMul(l_r_459,l_r_491)),RMul(l_r_467,l_r_497)));
                  real l_r_526 = RAdd(l_r_520,RMul(0.e0,l_r_501));
                  real l_r_527 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_483),RMul(l_r_456,l_r_472)),RMul(l_r_464,l_r_498)));
                  real l_r_528 = RMul(0.e0,l_r_504);
                  real l_r_529 = RMul(0.e0,l_r_509);
                  real l_r_530 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_484),RMul(l_r_458,l_r_477)),RMul(l_r_466,l_r_499)));
                  real l_r_531 = RMul(0.e0,l_r_515);
                  real l_r_532 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_485),RMul(l_r_459,l_r_482)),RMul(l_r_467,l_r_500)));
                  real l_r_533 = RAdd(l_r_527,RMul(0.e0,l_r_503));
                  real l_r_534 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_486),RMul(l_r_456,l_r_492)),RMul(l_r_464,l_r_472)));
                  real l_r_535 = RMul(0.e0,l_r_506);
                  real l_r_536 = RMul(0.e0,l_r_511);
                  real l_r_537 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_487),RMul(l_r_458,l_r_493)),RMul(l_r_466,l_r_477)));
                  real l_r_538 = RMul(0.e0,l_r_517);
                  real l_r_539 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_488),RMul(l_r_459,l_r_494)),RMul(l_r_467,l_r_482)));
                  real l_r_540 = RAdd(l_r_534,RMul(0.e0,l_r_505));
                  real l_r_541 = RMul(0.e0,l_r_508);
                  real l_r_542 = RMul(0.e0,l_r_514);
                  real l_r_543 = RMul(0.e0,l_r_510);
                  real l_r_544 = RMul(0.e0,l_r_516);
                  real l_r_545 = RMul(0.e0,l_r_512);
                  real l_r_546 = RMul(0.e0,l_r_518);
                  real l_op1_e3_l_36_547 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_448,l_r_456,l_r_464),VEC3{4}(VDot<3,4>(v_519,VEC3{4}(l_r_482,l_r_491,l_r_497)),VDot<3,4>(v_519,VEC3{4}(l_r_485,l_r_482,l_r_500)),VDot<3,4>(v_519,VEC3{4}(l_r_488,l_r_494,l_r_482)))));
                  vec3{4} v_548 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_526,l_r_521),l_r_522),l_r_523),RMul(0.1e1,l_r_508)),l_r_524),RMul(-0.1e1,l_r_514)),l_r_525),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_526,RMul(-0.1e1,l_r_502)),l_r_522),l_r_523),l_r_541),RMul(0.1e1,l_r_513)),l_r_542),l_r_525),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_520,RMul(0.1e1,l_r_501)),l_r_521),RMul(-0.1e1,l_r_507)),l_r_523),l_r_541),l_r_524),l_r_542),l_r_525),l_op1_e3_l_36_547))),RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_533,l_r_528),l_r_529),l_r_530),RMul(0.1e1,l_r_510)),l_r_531),RMul(-0.1e1,l_r_516)),l_r_532),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_533,RMul(-0.1e1,l_r_504)),l_r_529),l_r_530),l_r_543),RMul(0.1e1,l_r_515)),l_r_544),l_r_532),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_527,RMul(0.1e1,l_r_503)),l_r_528),RMul(-0.1e1,l_r_509)),l_r_530),l_r_543),l_r_531),l_r_544),l_r_532),l_op1_e3_l_36_547))),RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_540,l_r_535),l_r_536),l_r_537),RMul(0.1e1,l_r_512)),l_r_538),RMul(-0.1e1,l_r_518)),l_r_539),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_540,RMul(-0.1e1,l_r_506)),l_r_536),l_r_537),l_r_545),RMul(0.1e1,l_r_517)),l_r_546),l_r_539),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_534,RMul(0.1e1,l_r_505)),l_r_535),RMul(-0.1e1,l_r_511)),l_r_537),l_r_545),l_r_538),l_r_546),l_r_539),l_op1_e3_l_36_547)))));
                  real l_op1_e3_l_57_549 = Sqrt(VDot<3,4>(v_548,v_548));
                  real l_a_550 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_416,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_549))))));
                  vec3{4} v_551 = v_548;
                  if (GT<real>(l_a_550,0.e0)) {
                    tensor[3,2] l_voxels_561;
                    real l_imgPos_552 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_416),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_553 = RFloor(l_imgPos_552);
                    real l_f_554 = RSub(l_imgPos_552,l_nd_553);
                    int l_n_555 = RealToInt(l_nd_553);
                    real l__t_556 = MathFn<pow>(RSub(0.1e1,l_a_550),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_557 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_558 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_549),VDot<3,4>(v_551,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_555,globals.I)) {
                      int l_offp_559 = IMul(3,l_n_555);
                      int l_offp_560 = IMul(3,IAdd(l_n_555,1));
                      l_voxels_561 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_559),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_560),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_559,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_560,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_559,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_560,2))];
                    } else {
                      int l_offp_562 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_555));
                      int l_offp_563 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_555,1)));
                      l_voxels_561 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_562),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_563),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_562,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_563,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_562,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_563,2))];
                    }
                    vec2 v_564 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_554,RSub(l_f_554,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_565 = RSub(0.1e1,l__t_556);
                    real l_r_566 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_565),RAdd(0.11e1,l_op1_e3_l_19_557)),RAdd(globals.phongKa,l_op1_e3_l_20_558));
                    v_567 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_561)),v_564)),RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_561)),v_564)),RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_561)),v_564))));
                    l_transp_568 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_565));
                  } else {
                    v_567 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_568 = self.transp;
                  }
                  print("yay!\n");
                  v_569 = v_567;
                  l_transp_570 = l_transp_568;
                } else {
                  tensor[3] _arg_571 = PACK(v_354);
                  print(TensorRef<[3]>(_arg_571),"\n");
                  print("wait what\?\n");
                  v_569 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_570 = self.transp;
                }
                v_572 = v_569;
                l_transp_573 = l_transp_570;
              } else {
                v_572 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_573 = self.transp;
              }
              v_574 = v_572;
              l_transp_575 = l_transp_573;
            } else {
              v_574 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_575 = self.transp;
            }
            v_576 = v_574;
            l_transp_577 = l_transp_575;
          } else {
            v_576 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_577 = self.transp;
          }
          v_578 = v_576;
          l_transp_579 = l_transp_577;
        } else {
          v_578 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_579 = self.transp;
        }
        v_580 = v_578;
        l_transp_581 = l_transp_579;
      } else {
        v_580 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_581 = self.transp;
      }
      v_582 = v_580;
      l_transp_583 = l_transp_581;
    } else {
      v_582 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_583 = self.transp;
    }
    if (LT<real>(l_transp_583,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_582);
      stabilize;
    } else {
      l_transp_585 = l_transp_583;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_585;
      self.rgb = PACK(v_582);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_585;
    self.rgb = PACK(v_582);
    active;
  }
  stabilize (world, globals) {
    vec4 v_589;
    real l_a_588 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_588,0.e0)) {
      v_589 = VEC4(RDiv(VIndex<3,4,0>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_588),RDiv(VIndex<3,4,1>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_588),RDiv(VIndex<3,4,2>(LOAD_0(TensorRef<[3]>(self.rgb))),l_a_588),l_a_588);
    } else {
      v_589 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_590 = PACK(v_589);
          print(l_a_588,TensorRef<[4]>(_arg_590));
        }
      }
    }
    self.rgba = PACK(v_589);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_592 = 0 to ISub(globals.iresV,1) {
      for i_ui_593 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_593,i_vi_592);
      }
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StrandArray HasStabilizeMethod HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) a;
input femData(Space) 0b043B_intermedateGlobal;
input femData(FemFunc) 0c043D_intermedateGlobal;
input real isoval;
input real thick;
input tensor[3] camEye;
input tensor[3] camAt;
input tensor[3] camUp;
input real camFOV;
input int iresU;
input int iresV;
input real camNear;
input real camFar;
input real refStep;
input real rayStep;
input tensor[3] lightVsp;
input real phongKa;
input real phongKd;
input bool debug;
input int su;
input int sv;
//***** CONST INIT *****
  {
    globals.isoval = 0.2e0;
    globals.thick = 0.7e-1;
    globals.camEye = <tensor[3]>[0.3e1,-0.3e1,0.3e1];
    globals.camAt = <tensor[3]>[0.5e0,0.5e0,0.5e0];
    vec3{4} v_2 = VEC3{4}(0.e0,0.e0,0.1e1);
    globals.camUp = PACK(v_2);
    globals.camFOV = 0.137e2;
    globals.iresU = 500;
    globals.iresV = 500;
    globals.camNear = -0.2e1;
    globals.camFar = 0.5e1;
    globals.refStep = 0.1e1;
    globals.rayStep = 0.1e-1;
    globals.lightVsp = PACK(v_2);
    globals.phongKa = 0.1e0;
    globals.phongKd = 0.9e0;
    globals.debug = false;
    globals.su = 250;
    globals.sv = 250;
  }
//***** GLOBALS *****
global real camDist;
global tensor[3] camN;
global tensor[3] camU;
global tensor[3] camV;
global real camVmax;
global real camUmax;
global tensor[3] light;
global femData(Mesh) _t;
global femData(Space) _tX;
global femData(FemFunc) c;
global image(IMAGE1D<double[3]>) I;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_5,&tensor[3] p_pos_6) {
    vec3{4} v_155;
    int l_newtonInt_154;
    int l_cellInt_153;
    vec3{4} v_8;
    int l_numCell_7 = ISub(ExtractFemItem<int,NumCell(Mesh)>(p_mesh_5),1);
    v_8 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    int[] t_10 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_5,p_pos_6);
    int l_cellInt_11 = ExtractFemItem<int,StartCell(Mesh)>(p_mesh_5);
    foreach int i_cellItter_9 in t_10 {
      vec3{4} v_12;
      v_12 = v_8;
      for i_newtonItter_13 = 0 to 2 {
        int l_mulRes_14 = IMul(i_cellItter_9,4);
        int t_15 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_14);
        int l_mulRes_16 = IMul(3,t_15);
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_16);
        real l_dof_load_18 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_16));
        real l_dof_load_19 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_16));
        int t_20 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,1));
        int l_mulRes_21 = IMul(3,t_20);
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_21);
        real l_dof_load_23 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_21));
        real l_dof_load_24 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_21));
        int t_25 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,2));
        int l_mulRes_26 = IMul(3,t_25);
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_26);
        real l_dof_load_28 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_26));
        real l_dof_load_29 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_26));
        int t_30 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_14,3));
        int l_mulRes_31 = IMul(3,t_30);
        real l_dof_load_32 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_31);
        real l_dof_load_33 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_31));
        real l_dof_load_34 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_31));
        real l_prod_35 = RMul(0.1e1,0.1e1);
        real l_prod_36 = RMul(0.1e1,l_prod_35);
        real l_basisEval_37 = RMul(-0.1e1,l_prod_36);
        real l_basisEval_38 = RMul(0.1e1,l_prod_36);
        real l_r_39 = RMul(l_dof_load_17,l_basisEval_37);
        real l_r_40 = RMul(l_dof_load_27,0.e0);
        real l_r_41 = RMul(l_dof_load_32,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_22,l_basisEval_38)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_22,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_27,l_basisEval_38)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_32,l_basisEval_38));
        real l_r_46 = RMul(l_dof_load_18,l_basisEval_37);
        real l_r_47 = RMul(l_dof_load_28,0.e0);
        real l_r_48 = RMul(l_dof_load_33,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_23,l_basisEval_38)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_23,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_28,l_basisEval_38)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_33,l_basisEval_38));
        real l_r_53 = RMul(l_dof_load_19,l_basisEval_37);
        real l_r_54 = RMul(l_dof_load_29,0.e0);
        real l_r_55 = RMul(l_dof_load_34,0.e0);
        real l_r_56 = RAdd(RAdd(RAdd(l_r_53,RMul(l_dof_load_24,l_basisEval_38)),l_r_54),l_r_55);
        real l_r_57 = RAdd(l_r_53,RMul(l_dof_load_24,0.e0));
        real l_r_58 = RAdd(RAdd(l_r_57,RMul(l_dof_load_29,l_basisEval_38)),l_r_55);
        real l_r_59 = RAdd(RAdd(l_r_57,l_r_54),RMul(l_dof_load_34,l_basisEval_38));
        real l_r_60 = RMul(0.e0,l_r_42);
        real l_r_61 = RMul(0.e0,l_r_49);
        real l_r_62 = RMul(0.e0,l_r_56);
        real l_r_63 = RAdd(l_r_60,l_r_61);
        real l_r_64 = RAdd(l_r_63,l_r_62);
        real l_r_65 = RMul(0.e0,l_r_44);
        real l_r_66 = RMul(0.e0,l_r_51);
        real l_r_67 = RMul(0.e0,l_r_58);
        real l_r_68 = RAdd(l_r_65,l_r_66);
        real l_r_69 = RAdd(l_r_68,l_r_67);
        real l_r_70 = RMul(0.e0,l_r_45);
        real l_r_71 = RMul(0.e0,l_r_52);
        real l_r_72 = RMul(0.e0,l_r_59);
        real l_r_73 = RAdd(l_r_70,l_r_71);
        real l_r_74 = RAdd(l_r_73,l_r_72);
        real l_r_75 = RAdd(l_r_63,RMul(-0.1e1,l_r_56));
        real l_r_76 = RAdd(l_r_68,RMul(-0.1e1,l_r_58));
        real l_r_77 = RAdd(l_r_73,RMul(-0.1e1,l_r_59));
        real l_r_78 = RAdd(RAdd(l_r_60,RMul(0.1e1,l_r_49)),l_r_62);
        real l_r_79 = RAdd(RAdd(l_r_65,RMul(0.1e1,l_r_51)),l_r_67);
        real l_r_80 = RAdd(RAdd(l_r_70,RMul(0.1e1,l_r_52)),l_r_72);
        real l_r_81 = RAdd(l_r_63,RMul(0.1e1,l_r_56));
        real l_r_82 = RAdd(l_r_68,RMul(0.1e1,l_r_58));
        real l_r_83 = RAdd(l_r_73,RMul(0.1e1,l_r_59));
        real l_r_84 = RAdd(RAdd(RMul(-0.1e1,l_r_42),l_r_61),l_r_62);
        real l_r_85 = RAdd(RAdd(RMul(-0.1e1,l_r_44),l_r_66),l_r_67);
        real l_r_86 = RAdd(RAdd(RMul(-0.1e1,l_r_45),l_r_71),l_r_72);
        real l_r_87 = RAdd(RAdd(l_r_60,RMul(-0.1e1,l_r_49)),l_r_62);
        real l_r_88 = RAdd(RAdd(l_r_65,RMul(-0.1e1,l_r_51)),l_r_67);
        real l_r_89 = RAdd(RAdd(l_r_70,RMul(-0.1e1,l_r_52)),l_r_72);
        real l_r_90 = RAdd(RAdd(RMul(0.1e1,l_r_42),l_r_61),l_r_62);
        real l_r_91 = RAdd(RAdd(RMul(0.1e1,l_r_44),l_r_66),l_r_67);
        real l_r_92 = RAdd(RAdd(RMul(0.1e1,l_r_45),l_r_71),l_r_72);
        real l_r_93 = RAdd(RAdd(RMul(l_r_42,l_r_69),RMul(l_r_49,l_r_82)),RMul(l_r_56,l_r_88));
        real l_r_94 = RAdd(RAdd(RMul(l_r_42,l_r_74),RMul(l_r_49,l_r_83)),RMul(l_r_56,l_r_89));
        real l_r_95 = RAdd(RAdd(RMul(l_r_42,l_r_76),RMul(l_r_49,l_r_69)),RMul(l_r_56,l_r_91));
        real l_r_96 = RAdd(RAdd(RMul(l_r_42,l_r_77),RMul(l_r_49,l_r_74)),RMul(l_r_56,l_r_92));
        real l_r_97 = RAdd(RAdd(RMul(l_r_42,l_r_79),RMul(l_r_49,l_r_85)),RMul(l_r_56,l_r_69));
        real l_r_98 = RAdd(RAdd(RMul(l_r_42,l_r_80),RMul(l_r_49,l_r_86)),RMul(l_r_56,l_r_74));
        real l_r_99 = RAdd(RAdd(RMul(l_r_44,l_r_64),RMul(l_r_51,l_r_81)),RMul(l_r_58,l_r_87));
        real l_r_100 = RAdd(RAdd(RMul(l_r_44,l_r_74),RMul(l_r_51,l_r_83)),RMul(l_r_58,l_r_89));
        real l_r_101 = RAdd(RAdd(RMul(l_r_44,l_r_75),RMul(l_r_51,l_r_64)),RMul(l_r_58,l_r_90));
        real l_r_102 = RAdd(RAdd(RMul(l_r_44,l_r_77),RMul(l_r_51,l_r_74)),RMul(l_r_58,l_r_92));
        real l_r_103 = RAdd(RAdd(RMul(l_r_44,l_r_78),RMul(l_r_51,l_r_84)),RMul(l_r_58,l_r_64));
        real l_r_104 = RAdd(RAdd(RMul(l_r_44,l_r_80),RMul(l_r_51,l_r_86)),RMul(l_r_58,l_r_74));
        real l_r_105 = RAdd(RAdd(RMul(l_r_45,l_r_64),RMul(l_r_52,l_r_81)),RMul(l_r_59,l_r_87));
        real l_r_106 = RAdd(RAdd(RMul(l_r_45,l_r_69),RMul(l_r_52,l_r_82)),RMul(l_r_59,l_r_88));
        real l_r_107 = RAdd(RAdd(RMul(l_r_45,l_r_75),RMul(l_r_52,l_r_64)),RMul(l_r_59,l_r_90));
        real l_r_108 = RAdd(RAdd(RMul(l_r_45,l_r_76),RMul(l_r_52,l_r_69)),RMul(l_r_59,l_r_91));
        real l_r_109 = RAdd(RAdd(RMul(l_r_45,l_r_78),RMul(l_r_52,l_r_84)),RMul(l_r_59,l_r_64));
        real l_r_110 = RAdd(RAdd(RMul(l_r_45,l_r_79),RMul(l_r_52,l_r_85)),RMul(l_r_59,l_r_69));
        vec3{4} v_111 = VEC3{4}(l_r_44,l_r_51,l_r_58);
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_64),RMul(l_r_49,l_r_81)),RMul(l_r_56,l_r_87)));
        real l_r_113 = RMul(0.e0,l_r_94);
        real l_r_114 = RMul(0.e0,l_r_99);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_69),RMul(l_r_51,l_r_82)),RMul(l_r_58,l_r_88)));
        real l_r_116 = RMul(0.e0,l_r_105);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_74),RMul(l_r_52,l_r_83)),RMul(l_r_59,l_r_89)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_93));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_75),RMul(l_r_49,l_r_64)),RMul(l_r_56,l_r_90)));
        real l_r_120 = RMul(0.e0,l_r_96);
        real l_r_121 = RMul(0.e0,l_r_101);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_76),RMul(l_r_51,l_r_69)),RMul(l_r_58,l_r_91)));
        real l_r_123 = RMul(0.e0,l_r_107);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_77),RMul(l_r_52,l_r_74)),RMul(l_r_59,l_r_92)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_95));
        real l_r_126 = RMul(0.e0,RAdd(RAdd(RMul(l_r_42,l_r_78),RMul(l_r_49,l_r_84)),RMul(l_r_56,l_r_64)));
        real l_r_127 = RMul(0.e0,l_r_98);
        real l_r_128 = RMul(0.e0,l_r_103);
        real l_r_129 = RMul(0.e0,RAdd(RAdd(RMul(l_r_44,l_r_79),RMul(l_r_51,l_r_85)),RMul(l_r_58,l_r_69)));
        real l_r_130 = RMul(0.e0,l_r_109);
        real l_r_131 = RMul(0.e0,RAdd(RAdd(RMul(l_r_45,l_r_80),RMul(l_r_52,l_r_86)),RMul(l_r_59,l_r_74)));
        real l_r_132 = RAdd(l_r_126,RMul(0.e0,l_r_97));
        real l_r_133 = RMul(0.e0,l_r_100);
        real l_r_134 = RMul(0.e0,l_r_106);
        real l_r_135 = RMul(0.e0,l_r_102);
        real l_r_136 = RMul(0.e0,l_r_108);
        real l_r_137 = RMul(0.e0,l_r_104);
        real l_r_138 = RMul(0.e0,l_r_110);
        real l_op1_e3_l_21_139 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_42,l_r_49,l_r_56),VEC3{4}(VDot<3,4>(v_111,VEC3{4}(l_r_74,l_r_83,l_r_89)),VDot<3,4>(v_111,VEC3{4}(l_r_77,l_r_74,l_r_92)),VDot<3,4>(v_111,VEC3{4}(l_r_80,l_r_86,l_r_74)))));
        real l_prod_140 = RMul(VIndex<3,4,0>(v_12),l_prod_35);
        real l_prod_141 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_12),0.1e1));
        real l_prod_142 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_12)));
        real l_sum_143 = RAdd(l_basisEval_38,RAdd(RMul(-0.1e1,l_prod_142),RAdd(RMul(-0.1e1,l_prod_141),RMul(-0.1e1,l_prod_140))));
        real l_basisEval_144 = RMul(0.1e1,l_prod_140);
        real l_basisEval_145 = RMul(0.1e1,l_prod_141);
        real l_basisEval_146 = RMul(0.1e1,l_prod_142);
        vec3{4} v_147 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_17,l_sum_143),RMul(l_dof_load_22,l_basisEval_144)),RMul(l_dof_load_27,l_basisEval_145)),RMul(l_dof_load_32,l_basisEval_146)),RAdd(RAdd(RAdd(RMul(l_dof_load_18,l_sum_143),RMul(l_dof_load_23,l_basisEval_144)),RMul(l_dof_load_28,l_basisEval_145)),RMul(l_dof_load_33,l_basisEval_146)),RAdd(RAdd(RAdd(RMul(l_dof_load_19,l_sum_143),RMul(l_dof_load_24,l_basisEval_144)),RMul(l_dof_load_29,l_basisEval_145)),RMul(l_dof_load_34,l_basisEval_146))),LOAD_0(p_pos_6));
        vec3{4} v_148 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_100)),l_r_116),RMul(-0.1e1,l_r_106)),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_102)),l_r_123),RMul(-0.1e1,l_r_108)),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_132,l_r_127),l_r_128),l_r_129),RMul(0.1e1,l_r_104)),l_r_130),RMul(-0.1e1,l_r_110)),l_r_131),l_op1_e3_l_21_139)),v_147),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_94)),l_r_114),l_r_115),l_r_133),RMul(0.1e1,l_r_105)),l_r_134),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_96)),l_r_121),l_r_122),l_r_135),RMul(0.1e1,l_r_107)),l_r_136),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_132,RMul(-0.1e1,l_r_98)),l_r_128),l_r_129),l_r_137),RMul(0.1e1,l_r_109)),l_r_138),l_r_131),l_op1_e3_l_21_139)),v_147),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_93)),l_r_113),RMul(-0.1e1,l_r_99)),l_r_115),l_r_133),l_r_116),l_r_134),l_r_117),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_95)),l_r_120),RMul(-0.1e1,l_r_101)),l_r_122),l_r_135),l_r_123),l_r_136),l_r_124),l_op1_e3_l_21_139),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_126,RMul(0.1e1,l_r_97)),l_r_127),RMul(-0.1e1,l_r_103)),l_r_129),l_r_137),l_r_130),l_r_138),l_r_131),l_op1_e3_l_21_139)),v_147));
        vec3{4} v_149 = VSub<3,4>(v_12,v_148);
        vec3{4} v_150 = v_149;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_148,v_148))) {
          vec3{4} v_151 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_150);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_150)),BAnd(GT<real>(VIndex<3,4,0>(v_151),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_151),-0.e0),GT<real>(VIndex<3,4,2>(v_151),-0.e0))))) {
            tensor[3] _arg_152 = PACK(v_150);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,i_cellItter_9,_arg_152,p_pos_6)
          }
        }
        v_12 = v_150;
      }
      v_8 = v_12;
    }
    l_cellInt_153 = l_cellInt_11;
    l_newtonInt_154 = 0;
    v_155 = v_8;
    for i_itter_156 = 0 to IMul(3,l_numCell_7) {
      int l_newtonInt_299;
      int l_cellInt_298;
      int l_mulRes_157 = IMul(l_cellInt_153,4);
      int t_158 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,l_mulRes_157);
      int l_mulRes_159 = IMul(3,t_158);
      real l_dof_load_160 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_159);
      real l_dof_load_161 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_159));
      real l_dof_load_162 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_159));
      int t_163 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,1));
      int l_mulRes_164 = IMul(3,t_163);
      real l_dof_load_165 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_164);
      real l_dof_load_166 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_164));
      real l_dof_load_167 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_164));
      int t_168 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,2));
      int l_mulRes_169 = IMul(3,t_168);
      real l_dof_load_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_169);
      real l_dof_load_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_169));
      real l_dof_load_172 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_169));
      int t_173 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_5,IAdd(l_mulRes_157,3));
      int l_mulRes_174 = IMul(3,t_173);
      real l_dof_load_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,l_mulRes_174);
      real l_dof_load_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(1,l_mulRes_174));
      real l_dof_load_177 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_5,IAdd(2,l_mulRes_174));
      real l_prod_178 = RMul(0.1e1,0.1e1);
      real l_prod_179 = RMul(0.1e1,l_prod_178);
      real l_basisEval_180 = RMul(-0.1e1,l_prod_179);
      real l_basisEval_181 = RMul(0.1e1,l_prod_179);
      real l_r_182 = RMul(l_dof_load_160,l_basisEval_180);
      real l_r_183 = RMul(l_dof_load_170,0.e0);
      real l_r_184 = RMul(l_dof_load_175,0.e0);
      real l_r_185 = RAdd(RAdd(RAdd(l_r_182,RMul(l_dof_load_165,l_basisEval_181)),l_r_183),l_r_184);
      real l_r_186 = RAdd(l_r_182,RMul(l_dof_load_165,0.e0));
      real l_r_187 = RAdd(RAdd(l_r_186,RMul(l_dof_load_170,l_basisEval_181)),l_r_184);
      real l_r_188 = RAdd(RAdd(l_r_186,l_r_183),RMul(l_dof_load_175,l_basisEval_181));
      real l_r_189 = RMul(l_dof_load_161,l_basisEval_180);
      real l_r_190 = RMul(l_dof_load_171,0.e0);
      real l_r_191 = RMul(l_dof_load_176,0.e0);
      real l_r_192 = RAdd(RAdd(RAdd(l_r_189,RMul(l_dof_load_166,l_basisEval_181)),l_r_190),l_r_191);
      real l_r_193 = RAdd(l_r_189,RMul(l_dof_load_166,0.e0));
      real l_r_194 = RAdd(RAdd(l_r_193,RMul(l_dof_load_171,l_basisEval_181)),l_r_191);
      real l_r_195 = RAdd(RAdd(l_r_193,l_r_190),RMul(l_dof_load_176,l_basisEval_181));
      real l_r_196 = RMul(l_dof_load_162,l_basisEval_180);
      real l_r_197 = RMul(l_dof_load_172,0.e0);
      real l_r_198 = RMul(l_dof_load_177,0.e0);
      real l_r_199 = RAdd(RAdd(RAdd(l_r_196,RMul(l_dof_load_167,l_basisEval_181)),l_r_197),l_r_198);
      real l_r_200 = RAdd(l_r_196,RMul(l_dof_load_167,0.e0));
      real l_r_201 = RAdd(RAdd(l_r_200,RMul(l_dof_load_172,l_basisEval_181)),l_r_198);
      real l_r_202 = RAdd(RAdd(l_r_200,l_r_197),RMul(l_dof_load_177,l_basisEval_181));
      real l_r_203 = RMul(0.e0,l_r_185);
      real l_r_204 = RMul(0.e0,l_r_192);
      real l_r_205 = RMul(0.e0,l_r_199);
      real l_r_206 = RAdd(l_r_203,l_r_204);
      real l_r_207 = RAdd(l_r_206,l_r_205);
      real l_r_208 = RMul(0.e0,l_r_187);
      real l_r_209 = RMul(0.e0,l_r_194);
      real l_r_210 = RMul(0.e0,l_r_201);
      real l_r_211 = RAdd(l_r_208,l_r_209);
      real l_r_212 = RAdd(l_r_211,l_r_210);
      real l_r_213 = RMul(0.e0,l_r_188);
      real l_r_214 = RMul(0.e0,l_r_195);
      real l_r_215 = RMul(0.e0,l_r_202);
      real l_r_216 = RAdd(l_r_213,l_r_214);
      real l_r_217 = RAdd(l_r_216,l_r_215);
      real l_r_218 = RAdd(l_r_206,RMul(-0.1e1,l_r_199));
      real l_r_219 = RAdd(l_r_211,RMul(-0.1e1,l_r_201));
      real l_r_220 = RAdd(l_r_216,RMul(-0.1e1,l_r_202));
      real l_r_221 = RAdd(RAdd(l_r_203,RMul(0.1e1,l_r_192)),l_r_205);
      real l_r_222 = RAdd(RAdd(l_r_208,RMul(0.1e1,l_r_194)),l_r_210);
      real l_r_223 = RAdd(RAdd(l_r_213,RMul(0.1e1,l_r_195)),l_r_215);
      real l_r_224 = RAdd(l_r_206,RMul(0.1e1,l_r_199));
      real l_r_225 = RAdd(l_r_211,RMul(0.1e1,l_r_201));
      real l_r_226 = RAdd(l_r_216,RMul(0.1e1,l_r_202));
      real l_r_227 = RAdd(RAdd(RMul(-0.1e1,l_r_185),l_r_204),l_r_205);
      real l_r_228 = RAdd(RAdd(RMul(-0.1e1,l_r_187),l_r_209),l_r_210);
      real l_r_229 = RAdd(RAdd(RMul(-0.1e1,l_r_188),l_r_214),l_r_215);
      real l_r_230 = RAdd(RAdd(l_r_203,RMul(-0.1e1,l_r_192)),l_r_205);
      real l_r_231 = RAdd(RAdd(l_r_208,RMul(-0.1e1,l_r_194)),l_r_210);
      real l_r_232 = RAdd(RAdd(l_r_213,RMul(-0.1e1,l_r_195)),l_r_215);
      real l_r_233 = RAdd(RAdd(RMul(0.1e1,l_r_185),l_r_204),l_r_205);
      real l_r_234 = RAdd(RAdd(RMul(0.1e1,l_r_187),l_r_209),l_r_210);
      real l_r_235 = RAdd(RAdd(RMul(0.1e1,l_r_188),l_r_214),l_r_215);
      real l_r_236 = RAdd(RAdd(RMul(l_r_185,l_r_212),RMul(l_r_192,l_r_225)),RMul(l_r_199,l_r_231));
      real l_r_237 = RAdd(RAdd(RMul(l_r_185,l_r_217),RMul(l_r_192,l_r_226)),RMul(l_r_199,l_r_232));
      real l_r_238 = RAdd(RAdd(RMul(l_r_185,l_r_219),RMul(l_r_192,l_r_212)),RMul(l_r_199,l_r_234));
      real l_r_239 = RAdd(RAdd(RMul(l_r_185,l_r_220),RMul(l_r_192,l_r_217)),RMul(l_r_199,l_r_235));
      real l_r_240 = RAdd(RAdd(RMul(l_r_185,l_r_222),RMul(l_r_192,l_r_228)),RMul(l_r_199,l_r_212));
      real l_r_241 = RAdd(RAdd(RMul(l_r_185,l_r_223),RMul(l_r_192,l_r_229)),RMul(l_r_199,l_r_217));
      real l_r_242 = RAdd(RAdd(RMul(l_r_187,l_r_207),RMul(l_r_194,l_r_224)),RMul(l_r_201,l_r_230));
      real l_r_243 = RAdd(RAdd(RMul(l_r_187,l_r_217),RMul(l_r_194,l_r_226)),RMul(l_r_201,l_r_232));
      real l_r_244 = RAdd(RAdd(RMul(l_r_187,l_r_218),RMul(l_r_194,l_r_207)),RMul(l_r_201,l_r_233));
      real l_r_245 = RAdd(RAdd(RMul(l_r_187,l_r_220),RMul(l_r_194,l_r_217)),RMul(l_r_201,l_r_235));
      real l_r_246 = RAdd(RAdd(RMul(l_r_187,l_r_221),RMul(l_r_194,l_r_227)),RMul(l_r_201,l_r_207));
      real l_r_247 = RAdd(RAdd(RMul(l_r_187,l_r_223),RMul(l_r_194,l_r_229)),RMul(l_r_201,l_r_217));
      real l_r_248 = RAdd(RAdd(RMul(l_r_188,l_r_207),RMul(l_r_195,l_r_224)),RMul(l_r_202,l_r_230));
      real l_r_249 = RAdd(RAdd(RMul(l_r_188,l_r_212),RMul(l_r_195,l_r_225)),RMul(l_r_202,l_r_231));
      real l_r_250 = RAdd(RAdd(RMul(l_r_188,l_r_218),RMul(l_r_195,l_r_207)),RMul(l_r_202,l_r_233));
      real l_r_251 = RAdd(RAdd(RMul(l_r_188,l_r_219),RMul(l_r_195,l_r_212)),RMul(l_r_202,l_r_234));
      real l_r_252 = RAdd(RAdd(RMul(l_r_188,l_r_221),RMul(l_r_195,l_r_227)),RMul(l_r_202,l_r_207));
      real l_r_253 = RAdd(RAdd(RMul(l_r_188,l_r_222),RMul(l_r_195,l_r_228)),RMul(l_r_202,l_r_212));
      vec3{4} v_254 = VEC3{4}(l_r_187,l_r_194,l_r_201);
      real l_r_255 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_207),RMul(l_r_192,l_r_224)),RMul(l_r_199,l_r_230)));
      real l_r_256 = RMul(0.e0,l_r_237);
      real l_r_257 = RMul(0.e0,l_r_242);
      real l_r_258 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_212),RMul(l_r_194,l_r_225)),RMul(l_r_201,l_r_231)));
      real l_r_259 = RMul(0.e0,l_r_248);
      real l_r_260 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_217),RMul(l_r_195,l_r_226)),RMul(l_r_202,l_r_232)));
      real l_r_261 = RAdd(l_r_255,RMul(0.e0,l_r_236));
      real l_r_262 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_218),RMul(l_r_192,l_r_207)),RMul(l_r_199,l_r_233)));
      real l_r_263 = RMul(0.e0,l_r_239);
      real l_r_264 = RMul(0.e0,l_r_244);
      real l_r_265 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_219),RMul(l_r_194,l_r_212)),RMul(l_r_201,l_r_234)));
      real l_r_266 = RMul(0.e0,l_r_250);
      real l_r_267 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_220),RMul(l_r_195,l_r_217)),RMul(l_r_202,l_r_235)));
      real l_r_268 = RAdd(l_r_262,RMul(0.e0,l_r_238));
      real l_r_269 = RMul(0.e0,RAdd(RAdd(RMul(l_r_185,l_r_221),RMul(l_r_192,l_r_227)),RMul(l_r_199,l_r_207)));
      real l_r_270 = RMul(0.e0,l_r_241);
      real l_r_271 = RMul(0.e0,l_r_246);
      real l_r_272 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_222),RMul(l_r_194,l_r_228)),RMul(l_r_201,l_r_212)));
      real l_r_273 = RMul(0.e0,l_r_252);
      real l_r_274 = RMul(0.e0,RAdd(RAdd(RMul(l_r_188,l_r_223),RMul(l_r_195,l_r_229)),RMul(l_r_202,l_r_217)));
      real l_r_275 = RAdd(l_r_269,RMul(0.e0,l_r_240));
      real l_r_276 = RMul(0.e0,l_r_243);
      real l_r_277 = RMul(0.e0,l_r_249);
      real l_r_278 = RMul(0.e0,l_r_245);
      real l_r_279 = RMul(0.e0,l_r_251);
      real l_r_280 = RMul(0.e0,l_r_247);
      real l_r_281 = RMul(0.e0,l_r_253);
      real l_op1_e3_l_21_282 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_185,l_r_192,l_r_199),VEC3{4}(VDot<3,4>(v_254,VEC3{4}(l_r_217,l_r_226,l_r_232)),VDot<3,4>(v_254,VEC3{4}(l_r_220,l_r_217,l_r_235)),VDot<3,4>(v_254,VEC3{4}(l_r_223,l_r_229,l_r_217)))));
      real l_prod_283 = RMul(VIndex<3,4,0>(v_155),l_prod_178);
      real l_prod_284 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_155),0.1e1));
      real l_prod_285 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_155)));
      real l_sum_286 = RAdd(l_basisEval_181,RAdd(RMul(-0.1e1,l_prod_285),RAdd(RMul(-0.1e1,l_prod_284),RMul(-0.1e1,l_prod_283))));
      real l_basisEval_287 = RMul(0.1e1,l_prod_283);
      real l_basisEval_288 = RMul(0.1e1,l_prod_284);
      real l_basisEval_289 = RMul(0.1e1,l_prod_285);
      vec3{4} v_290 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_160,l_sum_286),RMul(l_dof_load_165,l_basisEval_287)),RMul(l_dof_load_170,l_basisEval_288)),RMul(l_dof_load_175,l_basisEval_289)),RAdd(RAdd(RAdd(RMul(l_dof_load_161,l_sum_286),RMul(l_dof_load_166,l_basisEval_287)),RMul(l_dof_load_171,l_basisEval_288)),RMul(l_dof_load_176,l_basisEval_289)),RAdd(RAdd(RAdd(RMul(l_dof_load_162,l_sum_286),RMul(l_dof_load_167,l_basisEval_287)),RMul(l_dof_load_172,l_basisEval_288)),RMul(l_dof_load_177,l_basisEval_289))),LOAD_0(p_pos_6));
      vec3{4} v_291 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_261,l_r_256),l_r_257),l_r_258),RMul(0.1e1,l_r_243)),l_r_259),RMul(-0.1e1,l_r_249)),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_268,l_r_263),l_r_264),l_r_265),RMul(0.1e1,l_r_245)),l_r_266),RMul(-0.1e1,l_r_251)),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_275,l_r_270),l_r_271),l_r_272),RMul(0.1e1,l_r_247)),l_r_273),RMul(-0.1e1,l_r_253)),l_r_274),l_op1_e3_l_21_282)),v_290),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_261,RMul(-0.1e1,l_r_237)),l_r_257),l_r_258),l_r_276),RMul(0.1e1,l_r_248)),l_r_277),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_268,RMul(-0.1e1,l_r_239)),l_r_264),l_r_265),l_r_278),RMul(0.1e1,l_r_250)),l_r_279),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_275,RMul(-0.1e1,l_r_241)),l_r_271),l_r_272),l_r_280),RMul(0.1e1,l_r_252)),l_r_281),l_r_274),l_op1_e3_l_21_282)),v_290),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_255,RMul(0.1e1,l_r_236)),l_r_256),RMul(-0.1e1,l_r_242)),l_r_258),l_r_276),l_r_259),l_r_277),l_r_260),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,RMul(0.1e1,l_r_238)),l_r_263),RMul(-0.1e1,l_r_244)),l_r_265),l_r_278),l_r_266),l_r_279),l_r_267),l_op1_e3_l_21_282),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,RMul(0.1e1,l_r_240)),l_r_270),RMul(-0.1e1,l_r_246)),l_r_272),l_r_280),l_r_273),l_r_281),l_r_274),l_op1_e3_l_21_282)),v_290));
      vec3{4} v_292 = VSub<3,4>(v_155,v_291);
      vec3{4} v_293 = v_292;
      if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_291,v_291))) {
        vec3{4} v_294 = VAdd<3,4>(VEC3{4}(0.1e-4,0.1e-4,0.1e-4),v_293);
        if (BAnd(GT<real>(RAdd(0.1e1,0.1e-4),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_293)),BAnd(GT<real>(VIndex<3,4,0>(v_294),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_294),-0.e0),GT<real>(VIndex<3,4,2>(v_294),-0.e0))))) {
          tensor[3] _arg_295 = PACK(v_293);
          return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_5,l_cellInt_153,_arg_295,p_pos_6)
        }
      }
      int l_newtonInt_296 = IAdd(l_newtonInt_154,1);
      if (GTE<int>(l_newtonInt_296,2)) {
        int l_cellInt_297;
        if (GTE<int>(l_cellInt_153,l_numCell_7)) {
          return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
        } else {
          l_cellInt_297 = IAdd(l_cellInt_153,1);
        }
        l_cellInt_298 = l_cellInt_297;
        l_newtonInt_299 = 0;
      } else {
        l_cellInt_298 = l_cellInt_153;
        l_newtonInt_299 = l_newtonInt_296;
      }
      l_cellInt_153 = l_cellInt_298;
      l_newtonInt_154 = l_newtonInt_299;
      v_155 = v_293;
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_5)
  }
//***** GLOBAL VARIABLE INIT *****
  {
    image(IMAGE1D<double[3]>) l_I_304;
    femData(MeshCell)[] l__t_300;
    l__t_300 = <femData(MeshCell)[]>{};
    for i__t_301 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.a),1) {
      l__t_300 = Append<femData(MeshCell),femData(MeshCell)>(l__t_300,LoadFem<femData(MeshCell)>(globals.a,i__t_301));
    }
    femData(FemFunc) l_c_302 = LoadFem<femData(FemFunc)>(globals.0c043D_intermedateGlobal,LoadFem<femData(Space)>(globals.0b043B_intermedateGlobal,globals.a));
    femData(Space) l__t_303 = ExtractFem<femData(Space),femData(FemFunc)>(l_c_302);
    l_I_304 = load<image(1)[3]> ("cmap.nrrd");
    vec3{4} v_305 = VSub<3,4>(LOAD_0(TensorRef<[3]>(globals.camAt)),LOAD_0(TensorRef<[3]>(globals.camEye)));
    real l_camDist_306 = Sqrt(VDot<3,4>(v_305,v_305));
    globals.camDist = l_camDist_306;
    real l_op1_e3_l_9_307 = RDiv(0.1e1,l_camDist_306);
    vec3{4} v_308 = VScale<3,4>(l_op1_e3_l_9_307,v_305);
    globals.camN = PACK(v_308);
    real l_r_310 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.camUp));
    real l_r_311 = RMul(0.e0,l_r_310);
    real l_r_312 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.camUp));
    real l_r_313 = RMul(0.e0,l_r_312);
    real l_r_314 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.camUp));
    real l_r_315 = RMul(0.e0,l_r_314);
    real l_r_316 = RAdd(l_r_311,l_r_313);
    real l_r_317 = RAdd(l_r_316,l_r_315);
    vec3{4} v_318 = VEC3{4}(VDot<3,4>(v_305,VEC3{4}(l_r_317,RAdd(l_r_316,RMul(0.1e1,l_r_314)),RAdd(RAdd(l_r_311,RMul(-0.1e1,l_r_312)),l_r_315))),VDot<3,4>(v_305,VEC3{4}(RAdd(l_r_316,RMul(-0.1e1,l_r_314)),l_r_317,RAdd(RAdd(RMul(0.1e1,l_r_310),l_r_313),l_r_315))),VDot<3,4>(v_305,VEC3{4}(RAdd(RAdd(l_r_311,RMul(0.1e1,l_r_312)),l_r_315),RAdd(RAdd(RMul(-0.1e1,l_r_310),l_r_313),l_r_315),l_r_317)));
    real l_op1_e3_l_38_319 = RDiv(0.1e1,Sqrt(RMul(RMul(l_op1_e3_l_9_307,l_op1_e3_l_9_307),VDot<3,4>(v_318,v_318))));
    vec3{4} v_320 = VScale<3,4>(l_op1_e3_l_38_319,VScale<3,4>(l_op1_e3_l_9_307,v_318));
    globals.camU = PACK(v_320);
    real l_r_322 = VIndex<3,4,0>(v_305);
    real l_r_323 = RMul(0.e0,l_r_322);
    real l_r_324 = VIndex<3,4,1>(v_305);
    real l_r_325 = RMul(0.e0,l_r_324);
    real l_r_326 = VIndex<3,4,2>(v_305);
    real l_r_327 = RMul(0.e0,l_r_326);
    real l_r_328 = RAdd(l_r_323,l_r_325);
    real l_r_329 = RAdd(l_r_328,l_r_327);
    vec3{4} v_330 = VScale<3,4>(l_op1_e3_l_9_307,VEC3{4}(VDot<3,4>(v_318,VEC3{4}(l_r_329,RAdd(l_r_328,RMul(0.1e1,l_r_326)),RAdd(RAdd(l_r_323,RMul(-0.1e1,l_r_324)),l_r_327))),VDot<3,4>(v_318,VEC3{4}(RAdd(l_r_328,RMul(-0.1e1,l_r_326)),l_r_329,RAdd(RAdd(RMul(0.1e1,l_r_322),l_r_325),l_r_327))),VDot<3,4>(v_318,VEC3{4}(RAdd(RAdd(l_r_323,RMul(0.1e1,l_r_324)),l_r_327),RAdd(RAdd(RMul(-0.1e1,l_r_322),l_r_325),l_r_327),l_r_329))));
    real l_r_331 = RMul(l_op1_e3_l_38_319,l_op1_e3_l_9_307);
    real l_r_332 = RMul(l_r_331,VIndex<3,4,0>(v_330));
    real l_r_333 = RMul(l_r_331,VIndex<3,4,1>(v_330));
    real l_r_334 = RMul(l_r_331,VIndex<3,4,2>(v_330));
    globals.camV = <tensor[3]>[l_r_332,l_r_333,l_r_334];
    real l_op1_e3_l_10_336 = Tan(RDiv(RMul(globals.camFOV,0.314159265358979323846264338327950288e1),0.36e3));
    globals.camVmax = RMul(l_op1_e3_l_10_336,l_camDist_306);
    globals.camUmax = RDiv(RMul(RMul(IntToReal(globals.iresU),l_op1_e3_l_10_336),l_camDist_306),IntToReal(globals.iresV));
    real l_r_337 = TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_338 = TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(globals.lightVsp));
    real l_r_339 = TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(globals.lightVsp));
    globals.light = PACK(VScale<3,4>(RDiv(0.1e1,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(globals.lightVsp)),LOAD_0(TensorRef<[3]>(globals.lightVsp))))),VEC3{4}(RAdd(RAdd(RMul(VIndex<3,4,0>(v_320),l_r_337),RMul(l_r_332,l_r_338)),RMul(VIndex<3,4,0>(v_308),l_r_339)),RAdd(RAdd(RMul(VIndex<3,4,1>(v_320),l_r_337),RMul(l_r_333,l_r_338)),RMul(VIndex<3,4,1>(v_308),l_r_339)),RAdd(RAdd(RMul(VIndex<3,4,2>(v_320),l_r_337),RMul(l_r_334,l_r_338)),RMul(VIndex<3,4,2>(v_308),l_r_339)))));
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_303);
    globals._tX = l__t_303;
    globals.c = l_c_302;
    globals.I = l_I_304;
  }
//***** STRAND *****
strand raycast (int p_ui_341,int p_vi_342) {
  real rayU;
  real rayV;
  varying real rayN;
  tensor[3] rayVec;
  varying real transp;
  varying tensor[3] rgb;
  varying output tensor[4] rgba;
  output real gray;
  int ui;
  int vi;
  initialize (globals) {
    real l_op1_e3_l_9_343 = RNeg(globals.camUmax);
    real l_rayU_344 = RAdd(l_op1_e3_l_9_343,RMul(RDiv(RSub(IntToReal(p_ui_341),-0.5e0),RSub(RSub(IntToReal(globals.iresU),0.5e0),-0.5e0)),RSub(globals.camUmax,l_op1_e3_l_9_343)));
    real l_rayV_345 = RAdd(globals.camVmax,RMul(RDiv(RSub(IntToReal(p_vi_342),-0.5e0),RSub(RSub(IntToReal(globals.iresV),0.5e0),-0.5e0)),RSub(RNeg(globals.camVmax),globals.camVmax)));
    vec3{4} v_346 = VAdd<3,4>(VScale<3,4>(l_rayU_344,LOAD_0(TensorRef<[3]>(globals.camU))),VScale<3,4>(l_rayV_345,LOAD_0(TensorRef<[3]>(globals.camV))));
    real l_r_347 = RDiv(0.1e1,globals.camDist);
    self.rayU = l_rayU_344;
    self.rayV = l_rayV_345;
    self.rayN = globals.camNear;
    self.rayVec = PACK(VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camN)),VEC3{4}(RMul(l_r_347,VIndex<3,4,0>(v_346)),RMul(l_r_347,VIndex<3,4,1>(v_346)),RMul(l_r_347,VIndex<3,4,2>(v_346)))));
    self.transp = 0.1e1;
    self.rgb = <tensor[3]>[0.e0,0.e0,0.e0];
    self.rgba = <tensor[4]>[0.e0,0.e0,0.e0,0.e0];
    self.gray = 0.e0;
    self.ui = p_ui_341;
    self.vi = p_vi_342;
  }
  update (world, globals) {
    real l_transp_585;
    real l_transp_583;
    vec3{4} v_582;
    if (globals.debug) {
      bool l__t_351;
      if (NEQ<int>(self.ui,globals.su)) {
        l__t_351 = true;
      } else {
        l__t_351 = NEQ<int>(self.vi,globals.sv);
      }
      if (l__t_351) {
        stabilize;
      }
    }
    vec3{4} v_352 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(globals.camEye)),VScale<3,4>(self.rayN,LOAD_0(TensorRef<[3]>(self.rayVec))));
    real l__t_353 = VIndex<3,4,0>(v_352);
    vec3{4} v_354 = v_352;
    if (LT<real>(0.e0,l__t_353)) {
      real l_transp_581;
      vec3{4} v_580;
      if (LT<real>(l__t_353,0.1e1)) {
        real l_transp_579;
        vec3{4} v_578;
        real l__t_355 = VIndex<3,4,1>(v_354);
        if (LT<real>(0.e0,l__t_355)) {
          real l_transp_577;
          vec3{4} v_576;
          if (LT<real>(l__t_355,0.1e1)) {
            real l_transp_575;
            vec3{4} v_574;
            real l__t_356 = VIndex<3,4,2>(v_354);
            if (LT<real>(0.e0,l__t_356)) {
              real l_transp_573;
              vec3{4} v_572;
              if (LT<real>(l__t_356,0.1e1)) {
                real l_transp_570;
                vec3{4} v_569;
                tensor[3] _arg_357 = PACK(v_354);
                femData(MeshPos) l_p_358 = findPos$3F3C(globals.a,_arg_357);
                if (ExtractFemItem<bool,Valid(MeshPos)>(l_p_358)) {
                  real l_transp_568;
                  vec3{4} v_567;
                  tensor[3] _arg_359 = PACK(v_354);
                  femData(MeshPos) l_callFindPos_360 = findPos$3F3C(globals._t,_arg_359);
                  int l_intPos_361 = ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_360);
                  &tensor[3] l_refPos_362 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_360);
                  int l_mulRes_363 = IMul(l_intPos_361,10);
                  int t_364 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_363);
                  int t_365 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,1));
                  int t_366 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,2));
                  int t_367 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,3));
                  int t_368 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,4));
                  int t_369 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,5));
                  int t_370 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,6));
                  int t_371 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,7));
                  int t_372 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,8));
                  int t_373 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_363,9));
                  real t_374 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_373));
                  real t_375 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_372));
                  real t_376 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_371));
                  real t_377 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_370));
                  real t_378 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_369));
                  real t_379 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_368));
                  real t_380 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_367));
                  real t_381 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_366));
                  real t_382 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_365));
                  real t_383 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.c,IMul(1,t_364));
                  vec4 v_384 = VEC4(t_383,t_382,t_381,t_380);
                  vec4 v_385 = VEC4(t_379,t_378,t_377,t_376);
                  vec2 v_386 = VEC2(t_375,t_374);
                  real l_varAcc_387 = TensorIndex<&tensor[3],[0]>(l_refPos_362);
                  real l_varAcc_388 = TensorIndex<&tensor[3],[1]>(l_refPos_362);
                  real l_varAcc_389 = TensorIndex<&tensor[3],[2]>(l_refPos_362);
                  real l_prod_390 = RMul(0.1e1,0.1e1);
                  real l_prod_391 = RMul(RMul(l_varAcc_387,l_varAcc_387),l_prod_390);
                  real l_prod_392 = RMul(l_varAcc_388,0.1e1);
                  real l_prod_393 = RMul(l_varAcc_387,l_prod_392);
                  real l_prod_394 = RMul(0.1e1,l_varAcc_389);
                  real l_prod_395 = RMul(l_varAcc_387,l_prod_394);
                  real l_prod_396 = RMul(l_varAcc_387,l_prod_390);
                  real l_prod_397 = RMul(0.1e1,RMul(RMul(l_varAcc_388,l_varAcc_388),0.1e1));
                  real l_prod_398 = RMul(0.1e1,RMul(l_varAcc_388,l_varAcc_389));
                  real l_prod_399 = RMul(0.1e1,l_prod_392);
                  real l_prod_400 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_389,l_varAcc_389)));
                  real l_prod_401 = RMul(0.1e1,l_prod_394);
                  real l_prod_402 = RMul(0.1e1,l_prod_390);
                  real l_mult_403 = RMul(0.1e1,l_prod_402);
                  real l_mult_404 = RMul(0.2e1,l_prod_400);
                  real l_mult_405 = RMul(0.4e1,l_prod_398);
                  real l_mult_406 = RMul(0.2e1,l_prod_397);
                  real l_mult_407 = RMul(0.4e1,l_prod_395);
                  real l_mult_408 = RMul(0.4e1,l_prod_393);
                  real l_mult_409 = RMul(0.2e1,l_prod_391);
                  real l_mult_410 = RMul(0.4e1,l_prod_401);
                  real l_mult_411 = RMul(-0.4e1,l_prod_398);
                  real l_mult_412 = RMul(-0.4e1,l_prod_395);
                  real l_mult_413 = RMul(0.4e1,l_prod_399);
                  real l_mult_414 = RMul(-0.4e1,l_prod_393);
                  real l_mult_415 = RMul(0.4e1,l_prod_396);
                  real l_compositionl_416 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_405,l_mult_407,l_mult_408,RAdd(l_mult_410,RAdd(RMul(-0.4e1,l_prod_400),RAdd(l_mult_411,l_mult_412))))),RAdd(VDot<2,2>(v_386,VEC2(RAdd(l_mult_413,RAdd(l_mult_411,RAdd(RMul(-0.4e1,l_prod_397),l_mult_414))),RAdd(l_mult_415,RAdd(l_mult_412,RAdd(l_mult_414,RMul(-0.4e1,l_prod_391)))))),VDot<4,4>(v_384,VEC4(RAdd(l_mult_403,RAdd(RMul(-0.3e1,l_prod_401),RAdd(l_mult_404,RAdd(RMul(-0.3e1,l_prod_399),RAdd(l_mult_405,RAdd(l_mult_406,RAdd(RMul(-0.3e1,l_prod_396),RAdd(l_mult_407,RAdd(l_mult_408,l_mult_409))))))))),RAdd(RMul(-0.1e1,l_prod_396),l_mult_409),RAdd(RMul(-0.1e1,l_prod_399),l_mult_406),RAdd(RMul(-0.1e1,l_prod_401),l_mult_404)))));
                  real l_sum_417 = RAdd(RMul(-0.3e1,l_prod_402),RAdd(l_mult_410,RAdd(l_mult_413,l_mult_415)));
                  real l_mult_418 = RMul(-0.1e1,l_prod_402);
                  real l_basisEval_419 = RMul(-0.4e1,l_prod_401);
                  real l_basisEval_420 = RMul(-0.4e1,l_prod_399);
                  real l_mult_421 = RMul(0.4e1,l_prod_402);
                  real l_mult_422 = RMul(-0.4e1,l_prod_396);
                  real l_vdot_423 = RAdd(VDot<4,4>(v_385,VEC4(0.e0,l_mult_410,l_mult_413,l_basisEval_419)),RAdd(VDot<2,2>(v_386,VEC2(l_basisEval_420,RAdd(l_mult_421,RAdd(l_basisEval_419,RAdd(l_basisEval_420,RMul(-0.8e1,l_prod_396)))))),VDot<4,4>(v_384,VEC4(l_sum_417,RAdd(l_mult_418,l_mult_415),0.e0,0.e0))));
                  real l_vdot_424 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_410,0.e0,l_mult_415,l_basisEval_419)),RAdd(VDot<2,2>(v_386,VEC2(RAdd(l_mult_421,RAdd(l_basisEval_419,RAdd(RMul(-0.8e1,l_prod_399),l_mult_422))),l_mult_422)),VDot<4,4>(v_384,VEC4(l_sum_417,0.e0,RAdd(l_mult_418,l_mult_413),0.e0))));
                  real l_vdot_425 = RAdd(VDot<4,4>(v_385,VEC4(l_mult_413,l_mult_415,0.e0,RAdd(l_mult_421,RAdd(RMul(-0.8e1,l_prod_401),RAdd(l_basisEval_420,l_mult_422))))),RAdd(VDot<2,2>(v_386,VEC2(l_basisEval_420,l_mult_422)),VDot<4,4>(v_384,VEC4(l_sum_417,0.e0,0.e0,RAdd(l_mult_418,l_mult_410)))));
                  int l_mulRes_426 = IMul(l_intPos_361,4);
                  int t_427 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,l_mulRes_426);
                  int l_mulRes_428 = IMul(3,t_427);
                  int t_429 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,1));
                  int l_mulRes_430 = IMul(3,t_429);
                  real l_dof_load_431 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_430);
                  real l_dof_load_432 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_430));
                  real l_dof_load_433 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_430));
                  int t_434 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,2));
                  int l_mulRes_435 = IMul(3,t_434);
                  real l_dof_load_436 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_435);
                  real l_dof_load_437 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_435));
                  real l_dof_load_438 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_435));
                  int t_439 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(globals._t,IAdd(l_mulRes_426,3));
                  int l_mulRes_440 = IMul(3,t_439);
                  real l_dof_load_441 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_440);
                  real l_dof_load_442 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_440));
                  real l_dof_load_443 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_440));
                  real t_444 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,l_mulRes_428);
                  real l_r_445 = RMul(t_444,l_mult_418);
                  real l_r_446 = RMul(l_dof_load_436,0.e0);
                  real l_r_447 = RMul(l_dof_load_441,0.e0);
                  real l_r_448 = RAdd(RAdd(RAdd(l_r_445,RMul(l_dof_load_431,l_mult_403)),l_r_446),l_r_447);
                  real l_r_449 = RAdd(l_r_445,RMul(l_dof_load_431,0.e0));
                  real l_r_450 = RAdd(RAdd(l_r_449,RMul(l_dof_load_436,l_mult_403)),l_r_447);
                  real l_r_451 = RAdd(RAdd(l_r_449,l_r_446),RMul(l_dof_load_441,l_mult_403));
                  real t_452 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(1,l_mulRes_428));
                  real l_r_453 = RMul(t_452,l_mult_418);
                  real l_r_454 = RMul(l_dof_load_437,0.e0);
                  real l_r_455 = RMul(l_dof_load_442,0.e0);
                  real l_r_456 = RAdd(RAdd(RAdd(l_r_453,RMul(l_dof_load_432,l_mult_403)),l_r_454),l_r_455);
                  real l_r_457 = RAdd(l_r_453,RMul(l_dof_load_432,0.e0));
                  real l_r_458 = RAdd(RAdd(l_r_457,RMul(l_dof_load_437,l_mult_403)),l_r_455);
                  real l_r_459 = RAdd(RAdd(l_r_457,l_r_454),RMul(l_dof_load_442,l_mult_403));
                  real t_460 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(globals._t,IAdd(2,l_mulRes_428));
                  real l_r_461 = RMul(t_460,l_mult_418);
                  real l_r_462 = RMul(l_dof_load_438,0.e0);
                  real l_r_463 = RMul(l_dof_load_443,0.e0);
                  real l_r_464 = RAdd(RAdd(RAdd(l_r_461,RMul(l_dof_load_433,l_mult_403)),l_r_462),l_r_463);
                  real l_r_465 = RAdd(l_r_461,RMul(l_dof_load_433,0.e0));
                  real l_r_466 = RAdd(RAdd(l_r_465,RMul(l_dof_load_438,l_mult_403)),l_r_463);
                  real l_r_467 = RAdd(RAdd(l_r_465,l_r_462),RMul(l_dof_load_443,l_mult_403));
                  real l_r_468 = RMul(0.e0,l_r_448);
                  real l_r_469 = RMul(0.e0,l_r_456);
                  real l_r_470 = RMul(0.e0,l_r_464);
                  real l_r_471 = RAdd(l_r_468,l_r_469);
                  real l_r_472 = RAdd(l_r_471,l_r_470);
                  real l_r_473 = RMul(0.e0,l_r_450);
                  real l_r_474 = RMul(0.e0,l_r_458);
                  real l_r_475 = RMul(0.e0,l_r_466);
                  real l_r_476 = RAdd(l_r_473,l_r_474);
                  real l_r_477 = RAdd(l_r_476,l_r_475);
                  real l_r_478 = RMul(0.e0,l_r_451);
                  real l_r_479 = RMul(0.e0,l_r_459);
                  real l_r_480 = RMul(0.e0,l_r_467);
                  real l_r_481 = RAdd(l_r_478,l_r_479);
                  real l_r_482 = RAdd(l_r_481,l_r_480);
                  real l_r_483 = RAdd(l_r_471,RMul(-0.1e1,l_r_464));
                  real l_r_484 = RAdd(l_r_476,RMul(-0.1e1,l_r_466));
                  real l_r_485 = RAdd(l_r_481,RMul(-0.1e1,l_r_467));
                  real l_r_486 = RAdd(RAdd(l_r_468,RMul(0.1e1,l_r_456)),l_r_470);
                  real l_r_487 = RAdd(RAdd(l_r_473,RMul(0.1e1,l_r_458)),l_r_475);
                  real l_r_488 = RAdd(RAdd(l_r_478,RMul(0.1e1,l_r_459)),l_r_480);
                  real l_r_489 = RAdd(l_r_471,RMul(0.1e1,l_r_464));
                  real l_r_490 = RAdd(l_r_476,RMul(0.1e1,l_r_466));
                  real l_r_491 = RAdd(l_r_481,RMul(0.1e1,l_r_467));
                  real l_r_492 = RAdd(RAdd(RMul(-0.1e1,l_r_448),l_r_469),l_r_470);
                  real l_r_493 = RAdd(RAdd(RMul(-0.1e1,l_r_450),l_r_474),l_r_475);
                  real l_r_494 = RAdd(RAdd(RMul(-0.1e1,l_r_451),l_r_479),l_r_480);
                  real l_r_495 = RAdd(RAdd(l_r_468,RMul(-0.1e1,l_r_456)),l_r_470);
                  real l_r_496 = RAdd(RAdd(l_r_473,RMul(-0.1e1,l_r_458)),l_r_475);
                  real l_r_497 = RAdd(RAdd(l_r_478,RMul(-0.1e1,l_r_459)),l_r_480);
                  real l_r_498 = RAdd(RAdd(RMul(0.1e1,l_r_448),l_r_469),l_r_470);
                  real l_r_499 = RAdd(RAdd(RMul(0.1e1,l_r_450),l_r_474),l_r_475);
                  real l_r_500 = RAdd(RAdd(RMul(0.1e1,l_r_451),l_r_479),l_r_480);
                  real l_r_501 = RAdd(RAdd(RMul(l_r_448,l_r_477),RMul(l_r_456,l_r_490)),RMul(l_r_464,l_r_496));
                  real l_r_502 = RAdd(RAdd(RMul(l_r_448,l_r_482),RMul(l_r_456,l_r_491)),RMul(l_r_464,l_r_497));
                  real l_r_503 = RAdd(RAdd(RMul(l_r_448,l_r_484),RMul(l_r_456,l_r_477)),RMul(l_r_464,l_r_499));
                  real l_r_504 = RAdd(RAdd(RMul(l_r_448,l_r_485),RMul(l_r_456,l_r_482)),RMul(l_r_464,l_r_500));
                  real l_r_505 = RAdd(RAdd(RMul(l_r_448,l_r_487),RMul(l_r_456,l_r_493)),RMul(l_r_464,l_r_477));
                  real l_r_506 = RAdd(RAdd(RMul(l_r_448,l_r_488),RMul(l_r_456,l_r_494)),RMul(l_r_464,l_r_482));
                  real l_r_507 = RAdd(RAdd(RMul(l_r_450,l_r_472),RMul(l_r_458,l_r_489)),RMul(l_r_466,l_r_495));
                  real l_r_508 = RAdd(RAdd(RMul(l_r_450,l_r_482),RMul(l_r_458,l_r_491)),RMul(l_r_466,l_r_497));
                  real l_r_509 = RAdd(RAdd(RMul(l_r_450,l_r_483),RMul(l_r_458,l_r_472)),RMul(l_r_466,l_r_498));
                  real l_r_510 = RAdd(RAdd(RMul(l_r_450,l_r_485),RMul(l_r_458,l_r_482)),RMul(l_r_466,l_r_500));
                  real l_r_511 = RAdd(RAdd(RMul(l_r_450,l_r_486),RMul(l_r_458,l_r_492)),RMul(l_r_466,l_r_472));
                  real l_r_512 = RAdd(RAdd(RMul(l_r_450,l_r_488),RMul(l_r_458,l_r_494)),RMul(l_r_466,l_r_482));
                  real l_r_513 = RAdd(RAdd(RMul(l_r_451,l_r_472),RMul(l_r_459,l_r_489)),RMul(l_r_467,l_r_495));
                  real l_r_514 = RAdd(RAdd(RMul(l_r_451,l_r_477),RMul(l_r_459,l_r_490)),RMul(l_r_467,l_r_496));
                  real l_r_515 = RAdd(RAdd(RMul(l_r_451,l_r_483),RMul(l_r_459,l_r_472)),RMul(l_r_467,l_r_498));
                  real l_r_516 = RAdd(RAdd(RMul(l_r_451,l_r_484),RMul(l_r_459,l_r_477)),RMul(l_r_467,l_r_499));
                  real l_r_517 = RAdd(RAdd(RMul(l_r_451,l_r_486),RMul(l_r_459,l_r_492)),RMul(l_r_467,l_r_472));
                  real l_r_518 = RAdd(RAdd(RMul(l_r_451,l_r_487),RMul(l_r_459,l_r_493)),RMul(l_r_467,l_r_477));
                  vec3{4} v_519 = VEC3{4}(l_r_450,l_r_458,l_r_466);
                  real l_r_520 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_472),RMul(l_r_456,l_r_489)),RMul(l_r_464,l_r_495)));
                  real l_r_521 = RMul(0.e0,l_r_502);
                  real l_r_522 = RMul(0.e0,l_r_507);
                  real l_r_523 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_477),RMul(l_r_458,l_r_490)),RMul(l_r_466,l_r_496)));
                  real l_r_524 = RMul(0.e0,l_r_513);
                  real l_r_525 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_482),RMul(l_r_459,l_r_491)),RMul(l_r_467,l_r_497)));
                  real l_r_526 = RAdd(l_r_520,RMul(0.e0,l_r_501));
                  real l_r_527 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_483),RMul(l_r_456,l_r_472)),RMul(l_r_464,l_r_498)));
                  real l_r_528 = RMul(0.e0,l_r_504);
                  real l_r_529 = RMul(0.e0,l_r_509);
                  real l_r_530 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_484),RMul(l_r_458,l_r_477)),RMul(l_r_466,l_r_499)));
                  real l_r_531 = RMul(0.e0,l_r_515);
                  real l_r_532 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_485),RMul(l_r_459,l_r_482)),RMul(l_r_467,l_r_500)));
                  real l_r_533 = RAdd(l_r_527,RMul(0.e0,l_r_503));
                  real l_r_534 = RMul(0.e0,RAdd(RAdd(RMul(l_r_448,l_r_486),RMul(l_r_456,l_r_492)),RMul(l_r_464,l_r_472)));
                  real l_r_535 = RMul(0.e0,l_r_506);
                  real l_r_536 = RMul(0.e0,l_r_511);
                  real l_r_537 = RMul(0.e0,RAdd(RAdd(RMul(l_r_450,l_r_487),RMul(l_r_458,l_r_493)),RMul(l_r_466,l_r_477)));
                  real l_r_538 = RMul(0.e0,l_r_517);
                  real l_r_539 = RMul(0.e0,RAdd(RAdd(RMul(l_r_451,l_r_488),RMul(l_r_459,l_r_494)),RMul(l_r_467,l_r_482)));
                  real l_r_540 = RAdd(l_r_534,RMul(0.e0,l_r_505));
                  real l_r_541 = RMul(0.e0,l_r_508);
                  real l_r_542 = RMul(0.e0,l_r_514);
                  real l_r_543 = RMul(0.e0,l_r_510);
                  real l_r_544 = RMul(0.e0,l_r_516);
                  real l_r_545 = RMul(0.e0,l_r_512);
                  real l_r_546 = RMul(0.e0,l_r_518);
                  real l_op1_e3_l_36_547 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_448,l_r_456,l_r_464),VEC3{4}(VDot<3,4>(v_519,VEC3{4}(l_r_482,l_r_491,l_r_497)),VDot<3,4>(v_519,VEC3{4}(l_r_485,l_r_482,l_r_500)),VDot<3,4>(v_519,VEC3{4}(l_r_488,l_r_494,l_r_482)))));
                  vec3{4} v_548 = VNeg<3,4>(VEC3{4}(RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_526,l_r_521),l_r_522),l_r_523),RMul(0.1e1,l_r_508)),l_r_524),RMul(-0.1e1,l_r_514)),l_r_525),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_526,RMul(-0.1e1,l_r_502)),l_r_522),l_r_523),l_r_541),RMul(0.1e1,l_r_513)),l_r_542),l_r_525),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_520,RMul(0.1e1,l_r_501)),l_r_521),RMul(-0.1e1,l_r_507)),l_r_523),l_r_541),l_r_524),l_r_542),l_r_525),l_op1_e3_l_36_547))),RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_533,l_r_528),l_r_529),l_r_530),RMul(0.1e1,l_r_510)),l_r_531),RMul(-0.1e1,l_r_516)),l_r_532),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_533,RMul(-0.1e1,l_r_504)),l_r_529),l_r_530),l_r_543),RMul(0.1e1,l_r_515)),l_r_544),l_r_532),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_527,RMul(0.1e1,l_r_503)),l_r_528),RMul(-0.1e1,l_r_509)),l_r_530),l_r_543),l_r_531),l_r_544),l_r_532),l_op1_e3_l_36_547))),RAdd(RAdd(RMul(l_vdot_423,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_540,l_r_535),l_r_536),l_r_537),RMul(0.1e1,l_r_512)),l_r_538),RMul(-0.1e1,l_r_518)),l_r_539),l_op1_e3_l_36_547)),RMul(l_vdot_424,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_540,RMul(-0.1e1,l_r_506)),l_r_536),l_r_537),l_r_545),RMul(0.1e1,l_r_517)),l_r_546),l_r_539),l_op1_e3_l_36_547))),RMul(l_vdot_425,RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_534,RMul(0.1e1,l_r_505)),l_r_535),RMul(-0.1e1,l_r_511)),l_r_537),l_r_545),l_r_538),l_r_546),l_r_539),l_op1_e3_l_36_547)))));
                  real l_op1_e3_l_57_549 = Sqrt(VDot<3,4>(v_548,v_548));
                  real l_a_550 = RMul(0.1e1,RClamp(0.e0,0.1e1,RMul(0.13e1,RSub(0.1e1,RDiv(Abs<real>(RSub(l_compositionl_416,globals.isoval)),RMul(globals.thick,l_op1_e3_l_57_549))))));
                  vec3{4} v_551 = v_548;
                  if (GT<real>(l_a_550,0.e0)) {
                    tensor[3,2] l_voxels_561;
                    real l_imgPos_552 = RAdd(RMul(Transform<IMAGE1D<double[3]>>(globals.I),l_compositionl_416),Translate<IMAGE1D<double[3]>>(globals.I));
                    real l_nd_553 = RFloor(l_imgPos_552);
                    real l_f_554 = RSub(l_imgPos_552,l_nd_553);
                    int l_n_555 = RealToInt(l_nd_553);
                    real l__t_556 = MathFn<pow>(RSub(0.1e1,l_a_550),RDiv(RMul(globals.rayStep,Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(self.rayVec)),LOAD_0(TensorRef<[3]>(self.rayVec))))),globals.refStep));
                    real l_op1_e3_l_19_557 = RMul(RDiv(RSub(self.rayN,globals.camNear),RSub(globals.camFar,globals.camNear)),RSub(0.7e0,0.11e1));
                    real l_op1_e3_l_20_558 = RMul(globals.phongKd,Max<real>(0.e0,RMul(RDiv(0.1e1,l_op1_e3_l_57_549),VDot<3,4>(v_551,LOAD_0(TensorRef<[3]>(globals.light))))));
                    if (IndexInside<IMAGE1D<double[3]>,2>(l_n_555,globals.I)) {
                      int l_offp_559 = IMul(3,l_n_555);
                      int l_offp_560 = IMul(3,IAdd(l_n_555,1));
                      l_voxels_561 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_559),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_560),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_559,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_560,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_559,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_560,2))];
                    } else {
                      int l_offp_562 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,l_n_555));
                      int l_offp_563 = IMul(3,ControlIndex<IMAGE1D<double[3]>,clamp,0>(globals.I,IAdd(l_n_555,1)));
                      l_voxels_561 = <tensor[3,2]>[LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_562),LoadVoxel<IMAGE1D<double[3]>>(globals.I,l_offp_563),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_562,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_563,1)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_562,2)),LoadVoxel<IMAGE1D<double[3]>>(globals.I,IAdd(l_offp_563,2))];
                    }
                    vec2 v_564 = VAdd<2,2>(VEC2(0.1e1,0.1e1),VMul<2,2>(VEC2(l_f_554,RSub(l_f_554,0.1e1)),VEC2(-0.1e1,0.1e1)));
                    real l_op1_e3_l_22_565 = RSub(0.1e1,l__t_556);
                    real l_r_566 = RMul(RMul(RMul(self.transp,l_op1_e3_l_22_565),RAdd(0.11e1,l_op1_e3_l_19_557)),RAdd(globals.phongKa,l_op1_e3_l_20_558));
                    v_567 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.rgb)),VEC3{4}(RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[0]>(l_voxels_561)),v_564)),RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[1]>(l_voxels_561)),v_564)),RMul(l_r_566,VDot<2,2>(LOAD_0(ProjectLast<tensor[3,2],[2]>(l_voxels_561)),v_564))));
                    l_transp_568 = RMul(self.transp,RSub(0.1e1,l_op1_e3_l_22_565));
                  } else {
                    v_567 = LOAD_0(TensorRef<[3]>(self.rgb));
                    l_transp_568 = self.transp;
                  }
                  print("yay!\n");
                  v_569 = v_567;
                  l_transp_570 = l_transp_568;
                } else {
                  tensor[3] _arg_571 = PACK(v_354);
                  print(TensorRef<[3]>(_arg_571),"\n");
                  print("wait what\?\n");
                  v_569 = LOAD_0(TensorRef<[3]>(self.rgb));
                  l_transp_570 = self.transp;
                }
                v_572 = v_569;
                l_transp_573 = l_transp_570;
              } else {
                v_572 = LOAD_0(TensorRef<[3]>(self.rgb));
                l_transp_573 = self.transp;
              }
              v_574 = v_572;
              l_transp_575 = l_transp_573;
            } else {
              v_574 = LOAD_0(TensorRef<[3]>(self.rgb));
              l_transp_575 = self.transp;
            }
            v_576 = v_574;
            l_transp_577 = l_transp_575;
          } else {
            v_576 = LOAD_0(TensorRef<[3]>(self.rgb));
            l_transp_577 = self.transp;
          }
          v_578 = v_576;
          l_transp_579 = l_transp_577;
        } else {
          v_578 = LOAD_0(TensorRef<[3]>(self.rgb));
          l_transp_579 = self.transp;
        }
        v_580 = v_578;
        l_transp_581 = l_transp_579;
      } else {
        v_580 = LOAD_0(TensorRef<[3]>(self.rgb));
        l_transp_581 = self.transp;
      }
      v_582 = v_580;
      l_transp_583 = l_transp_581;
    } else {
      v_582 = LOAD_0(TensorRef<[3]>(self.rgb));
      l_transp_583 = self.transp;
    }
    if (LT<real>(l_transp_583,0.1e-1)) {
      self.transp = 0.e0;
      self.rgb = PACK(v_582);
      stabilize;
    } else {
      l_transp_585 = l_transp_583;
    }
    if (GT<real>(self.rayN,globals.camFar)) {
      self.transp = l_transp_585;
      self.rgb = PACK(v_582);
      stabilize;
    }
    self.rayN = RAdd(self.rayN,globals.rayStep);
    self.transp = l_transp_585;
    self.rgb = PACK(v_582);
    active;
  }
  stabilize (world, globals) {
    vec4 v_589;
    real l_a_588 = RSub(0.1e1,self.transp);
    if (GT<real>(l_a_588,0.e0)) {
      v_589 = VEC4(RDiv(TensorIndex<&tensor[3],[0]>(TensorRef<[3]>(self.rgb)),l_a_588),RDiv(TensorIndex<&tensor[3],[1]>(TensorRef<[3]>(self.rgb)),l_a_588),RDiv(TensorIndex<&tensor[3],[2]>(TensorRef<[3]>(self.rgb)),l_a_588),l_a_588);
    } else {
      v_589 = LOAD_0(TensorRef<[4]>(self.rgba));
    }
    if (EQ<int>(self.ui,globals.su)) {
      if (EQ<int>(self.vi,globals.sv)) {
        if (globals.debug) {
          tensor[4] _arg_590 = PACK(v_589);
          print(l_a_588,TensorRef<[4]>(_arg_590));
        }
      }
    }
    self.rgba = PACK(v_589);
  }
}
//***** CREATE GRID(2) *****
  {
    for i_vi_592 = 0 to ISub(globals.iresV,1) {
      for i_ui_593 = 0 to ISub(globals.iresU,1) {
        new raycast(i_ui_593,i_vi_592);
      }
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include justTypes.cxx
/usr/bin/clang++ -shared -o justTypes.so justTypes.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.054     2.497
    front end .......................................................................   0.375     0.419
      parser ........................................................................   0.025     0.025
      typechecker ...................................................................   0.020     0.020
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.009     0.009
    High IR optimization ............................................................   0.017     0.048
      High IR value numbering .......................................................   0.008     0.008
      High IR normalization .........................................................   0.023     0.023
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.043     0.043
    Mid IR optimization .............................................................   0.020     0.038
      Mid IR contraction ............................................................   0.003     0.003
      Mid IR value numbering ........................................................   0.013     0.013
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.047     0.047
    Low IR optimization .............................................................   0.062     0.150
      Low IR contraction ............................................................   0.041     0.041
      Low IR value numbering ........................................................   0.048     0.048
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.046     0.046
    Tree IR optimization ............................................................   0.006     0.006
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.029     1.636
      C compiler ....................................................................   1.608     1.608
