#version 3.0
const int dim = 9;
input int poop = 3;
input real[3] poops = {1,2,3};
input int[] fug;
//input (int, int) cug;
//input (int, int)[10] mug;
//input (int, int, real[3], tensor[2,2])[10][] pug;

strand dumb(int i)
{
  output tensor[dim] d = zeros[dim];
  output tensor[dim][3]dd = {zeros[dim], zeros[dim], zeros[dim]};
  output (int, int)[] smelly = {(1,2)};
  output (int[], int)[2] poop = {({}, 1), ({}, 2)};
  output int[3] ugg = {1,2,3};
  output real r = 2.0;
  output tensor[3][2][] fum = {};
  output int[] fug  = {2,3,4};
    
  output (int[2], int) g = ({2,3},2);
  update{
    print({fug, fug, fug});
    print(fum[0][0]);
    print(d •( d ));
    print(dd);
    print((2,3,4)[1]);
    r = d •( d );
    print(fug);
    stabilize;
  }
} create_array {dumb(j) | j in 1..3};
